WEBVTT
1
00:00:04.850 --> 00:00:08.000
Finally, let's briefly talk about password policies.

2
00:00:08.330 --> 00:00:10.100
You definitely should have one.

3
00:00:10.340 --> 00:00:13.760
But in my view, the passport policies are often done the wrong.

4
00:00:15.020 --> 00:00:16.790
To prevent brute force attacks.

5
00:00:16.940 --> 00:00:21.080
The most important are the passwords, the length and the range of characters.

6
00:00:21.860 --> 00:00:27.290
The shorter the password and the less amount of different channels it contains, the shorter it takes

7
00:00:27.290 --> 00:00:27.890
to crack it.

8
00:00:28.640 --> 00:00:30.590
These are examples of weak passwords.

9
00:00:32.250 --> 00:00:34.260
The first one is obviously weak.

10
00:00:34.680 --> 00:00:37.950
It only has five jars and only lowercase letters.

11
00:00:38.970 --> 00:00:42.960
The second one is long, which is good, but with only two different jars.

12
00:00:42.960 --> 00:00:44.670
It is very inefficient as well.

13
00:00:45.840 --> 00:00:51.930
The last password seems secure, but it only has a set of common special characters no letters and numbers,

14
00:00:52.140 --> 00:00:53.490
so it's still insecure.

15
00:00:54.690 --> 00:01:00.510
So currently it is believed that the password should contain at least ten characters, but it's only

16
00:01:00.510 --> 00:01:04.170
to satisfy people who have troubles with inventing longer passwords.

17
00:01:04.620 --> 00:01:09.780
12 or 16 would be ideal as the passwords length really does the job.

18
00:01:10.650 --> 00:01:16.500
Every next character makes it much more difficult to break, if only it's not a repeated character.

19
00:01:17.430 --> 00:01:20.070
Encourage your users to choose longer passwords.

20
00:01:21.240 --> 00:01:27.420
Also, you should encourage them to use characters from at least three of the following groups lowercase

21
00:01:27.420 --> 00:01:32.950
letters, uppercase letters, digits, and special characters.

22
00:01:32.970 --> 00:01:35.040
That is at least any of those.

23
00:01:37.220 --> 00:01:41.000
In fact, the passports should accept any type of character.

24
00:01:43.270 --> 00:01:49.090
Requiring characters from at least 3/1 groups would allow you to make a quick and dirty gate to hold

25
00:01:49.090 --> 00:01:51.280
off passwords that are plainly too weak.

26
00:01:52.270 --> 00:01:57.580
But if you want to take it seriously, you can go a little bit further and implement a password checking

27
00:01:57.580 --> 00:01:59.110
library like Vertex.

28
00:01:59.110 --> 00:02:05.920
CTB When it takes into consideration not only the length and character range, but also the characters

29
00:02:05.920 --> 00:02:13.210
are repeated or are in alphabetic or keyboard pattern like ABC, PDF or Rosetta keyboard, which is

30
00:02:13.210 --> 00:02:15.340
a keyboard pattern found on western keyboards.

31
00:02:16.240 --> 00:02:22.240
Also, it will try to catch those that seems like common words or names, but unfortunately for this

32
00:02:22.240 --> 00:02:27.010
particular feature, it will primarily consider English words and the Western names only.

33
00:02:28.030 --> 00:02:30.070
Anyway, that's all better than nothing.

34
00:02:31.030 --> 00:02:36.430
The script will also provide a detailed report which you might use to give feedback to your users when

35
00:02:36.430 --> 00:02:37.930
they are setting up their passwords.

36
00:02:44.570 --> 00:02:52.010
Now, what I hate in basalt policies is rejecting every person that I will be able to remember as to

37
00:02:52.010 --> 00:02:52.430
week.

38
00:02:53.550 --> 00:02:59.460
The passport policy that is too restrictive may end with frustrating your users and leading them to

39
00:02:59.460 --> 00:03:06.300
abandon the registration process or users writing their overly complicated passwords on Post-it notes

40
00:03:06.630 --> 00:03:08.970
or storing them somewhere in plaintext.

41
00:03:09.960 --> 00:03:15.570
Both of these is undesirable, and the latter actually weakens the security considerably.

42
00:03:16.650 --> 00:03:21.870
Not everyone uses password managers, and these people should be guided to create a strong password,

43
00:03:22.140 --> 00:03:26.310
but at the same time they must be able to register with a password.

44
00:03:26.310 --> 00:03:27.930
They will be able to remember.

45
00:03:30.490 --> 00:03:34.180
Forcing a new buzzword too often is another thing that I hate.

46
00:03:34.720 --> 00:03:41.260
This particular feature is not only annoying, but it gives a very false sense of security because what

47
00:03:41.260 --> 00:03:45.160
people do, they usually just change the last number.

48
00:03:45.730 --> 00:03:48.880
So the bus or these Isle of Apples one for January.

49
00:03:49.150 --> 00:03:51.190
I love apples too, for February.

50
00:03:51.520 --> 00:03:59.080
I love Apple's three four March, etc. or the modified the password in some other way, but a slightly

51
00:03:59.080 --> 00:04:01.900
is possible to still be able to remember it.

52
00:04:02.800 --> 00:04:07.300
As a result, the buzzword strength is roughly the same on each iteration.

53
00:04:07.690 --> 00:04:09.670
And the old password leaks.

54
00:04:09.940 --> 00:04:12.250
The new password is trivial to guess.
