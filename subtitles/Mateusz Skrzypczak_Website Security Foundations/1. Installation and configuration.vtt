WEBVTT
1
00:00:05.350 --> 00:00:05.790
Okay.

2
00:00:05.800 --> 00:00:10.810
You already know how to protect your site and all of what you have learned in this course should be

3
00:00:10.810 --> 00:00:13.570
applied to your WordPress theme or plugin as well.

4
00:00:14.740 --> 00:00:17.800
Now we will take a look at the stuff specific to WordPress.

5
00:00:18.160 --> 00:00:24.850
We will see how we can improve the security during installation, doing proper setup, writing a theme

6
00:00:24.850 --> 00:00:29.650
or plugin, writing your custom code or one managing users.

7
00:00:30.910 --> 00:00:36.310
Also, you already know how much I oppose from installing third party components without a very good

8
00:00:36.310 --> 00:00:36.790
reason.

9
00:00:37.330 --> 00:00:42.640
But in this chapter I will once again make an exception and show you a wonderful WordPress security

10
00:00:42.640 --> 00:00:44.620
plugin that earned my trust.

11
00:00:44.920 --> 00:00:47.650
All-In-One WordPress Security and Firewall.

12
00:00:48.310 --> 00:00:53.890
These guys really do a fantastic job and it's a tool which makes securing the site as simple as turning

13
00:00:53.890 --> 00:00:55.300
the features on or off.

14
00:00:56.440 --> 00:01:01.930
But to be fair with you, I will first show you what configuration changes can be done manually without

15
00:01:01.930 --> 00:01:03.190
using any plugins.

16
00:01:03.850 --> 00:01:09.340
Much of the following will be possible with the mentioned plugin, but I think it's useful to know how

17
00:01:09.340 --> 00:01:14.080
this stuff works and then decide if you want a plugin to manage it or not.

18
00:01:17.620 --> 00:01:22.200
Let's first see what security improvements we can make already during installation.

19
00:01:23.590 --> 00:01:24.580
On the first screen.

20
00:01:24.580 --> 00:01:29.200
After restarting the installation wizard, you are prompted to enter database credentials.

21
00:01:29.770 --> 00:01:35.080
Of course, when you set up your database, you should use and nontrivial database, name, username

22
00:01:35.080 --> 00:01:36.340
and the strong password.

23
00:01:36.970 --> 00:01:39.040
But that's the general knowledge you already have.

24
00:01:39.700 --> 00:01:43.000
What's important here is to set the custom table prefix.

25
00:01:44.170 --> 00:01:50.740
The default is WP underscore and any attacker trying to inject some ESC with code on your site will

26
00:01:50.740 --> 00:01:54.460
likely use that default prefix in any injected school code.

27
00:01:55.270 --> 00:01:57.670
So change it to something random like this.

28
00:02:01.220 --> 00:02:09.140
Then your tables will be named x40 etc. underscore posts instead of the default wp underscore posts.

29
00:02:10.880 --> 00:02:13.520
It's way, way easier to do it during the installation.

30
00:02:13.820 --> 00:02:19.130
But if you already have your site alive, it still can be done manually or with the plug in.

31
00:02:20.360 --> 00:02:26.080
To do it manually, you would have to first make a backup of your offsite files and database.

32
00:02:26.090 --> 00:02:31.910
Of course, if you are working on the life site, it's recommended to turn on the maintenance mode as

33
00:02:31.910 --> 00:02:33.800
it will take a couple of minutes to finish.

34
00:02:35.300 --> 00:02:38.750
Then start with renaming WordPress tables in your database.

35
00:02:38.990 --> 00:02:43.250
Replacing the WP underscore default prefix with your own.

36
00:02:45.400 --> 00:02:48.160
You can run a query to rename all of them at once.

37
00:02:49.310 --> 00:02:52.550
Don't forget custom tables created and used by plugins.

38
00:02:58.680 --> 00:03:05.340
Then you need to look for entries with WP underscore prefix into tables options and use their meta.

39
00:03:07.690 --> 00:03:12.670
Run this query to find entry starting with WP underscore in the options table.

40
00:03:14.140 --> 00:03:15.480
They're look for options.

41
00:03:15.490 --> 00:03:24.010
Which names start with WP underscore the one that you definitely should have is WP user roles change

42
00:03:24.010 --> 00:03:28.690
its name and potentially other options names so that they match your prefix.

43
00:03:29.950 --> 00:03:36.730
Unfortunately, this needs quite a lot of care because for example, the WP force deactivated plug ins

44
00:03:37.060 --> 00:03:40.930
and WP page for privacy policy options shouldn't be touched.

45
00:03:41.440 --> 00:03:46.060
They needed the WP underscore prefix, not the database prefix.

46
00:03:51.280 --> 00:03:59.020
Now run this query to find entry starting with WP underscore in the user meetup table and again change

47
00:03:59.020 --> 00:04:01.900
all found meta keys to mature database prefix.

48
00:04:09.070 --> 00:04:15.790
Finally you need to change the table prefix variable in WP config file to match the prefix you just

49
00:04:15.790 --> 00:04:16.390
set up.

50
00:04:19.750 --> 00:04:24.340
It's much easier to do that with the All-In-One WordPress Security and Firewall plugin.

51
00:04:25.090 --> 00:04:31.240
Make a backup of your site and database of course, and then navigate to WordPress security database

52
00:04:31.240 --> 00:04:33.520
security and follow the instructions.

53
00:04:34.240 --> 00:04:38.980
You can either let the plug in generate a random prefix for you, or you can specify your own.

54
00:04:51.660 --> 00:04:56.790
On the next screen of the installation wizard, you're asked to provide the username for the admins

55
00:04:56.790 --> 00:04:57.300
account.

56
00:04:57.900 --> 00:05:02.550
Choose something other than admin administrator or your site domain name.

57
00:05:03.090 --> 00:05:06.270
These will likely be tried out when someone wants to brute.

58
00:05:06.270 --> 00:05:07.620
Force your log in panel.

59
00:05:09.420 --> 00:05:09.900
Also.

60
00:05:09.900 --> 00:05:14.040
She was a strong bastard, but the one that you will be able to remember.

61
00:05:14.640 --> 00:05:19.680
WordPress general is the password for you, but there is no chance you will be able to remember the

62
00:05:19.680 --> 00:05:20.490
generated one.

63
00:05:21.150 --> 00:05:26.940
Make it reasonably long with lowercase and uppercase letters, digits and some symbols.

64
00:05:30.640 --> 00:05:33.160
On existing sites to change your username.

65
00:05:33.160 --> 00:05:34.840
You can follow a couple of months.

66
00:05:35.710 --> 00:05:39.520
For example, change it directly in the database in the user stable.

67
00:05:40.360 --> 00:05:43.510
You might need to log out and log in again to your admin panel.

68
00:05:45.500 --> 00:05:51.080
Also you can create a new user with admin role and then delete the one with admin username.

69
00:05:53.090 --> 00:05:59.240
Or if you choose to install the All-In-One WordPress security plugin, go to user account section and

70
00:05:59.240 --> 00:06:00.590
follow the instructions there.

71
00:06:03.190 --> 00:06:07.090
Changing your password is much easier in the WordPress admin panel.

72
00:06:07.120 --> 00:06:13.750
Go to users, find yourself and click edit and scroll to password management section to change your

73
00:06:13.750 --> 00:06:14.380
password.

74
00:06:19.930 --> 00:06:27.220
After the installation is completed, I recommend you to go to Tools Site Health and solve the highlighted

75
00:06:27.220 --> 00:06:27.790
problems.

76
00:06:30.570 --> 00:06:37.650
This would typically be outdated BGP version, outdated WordPress or plug in versions and used themes

77
00:06:37.650 --> 00:06:40.990
and plugins or lack of HTP connection.

78
00:06:41.820 --> 00:06:43.770
Try to solve as much as you can.

79
00:06:46.180 --> 00:06:51.930
Dilithium synth plugins, which you don't use because even when they are deactivated in the admin panel,

80
00:06:52.260 --> 00:06:55.830
any potential vulnerabilities they have can still be exploited.

81
00:06:57.450 --> 00:07:02.100
WordPress comes with a couple of pre-installed themes and plugins which you can delete if you don't

82
00:07:02.100 --> 00:07:02.550
use them.

83
00:07:04.050 --> 00:07:06.720
And remember to keep plugins to the minimum.

84
00:07:07.350 --> 00:07:07.790
Okay.

85
00:07:07.800 --> 00:07:09.060
I said that too many times.

86
00:07:10.750 --> 00:07:13.180
There are also two things that you shouldn't do.

87
00:07:13.900 --> 00:07:20.740
First, you can disable the core auto updates for major versions, but do not try to disable security

88
00:07:20.740 --> 00:07:22.150
and maintenance upgrades.

89
00:07:22.750 --> 00:07:28.540
It's one of the most wonderful features that exist in WordPress and hats off to the team that they support

90
00:07:28.540 --> 00:07:30.880
so many legacy versions with these upgrades.

91
00:07:31.570 --> 00:07:33.760
There's completely no reason to disable it.

92
00:07:34.360 --> 00:07:38.590
They are only bug fixes and security patches, not any core changes.

93
00:07:39.460 --> 00:07:45.400
If something was stop working on your site after such update, it means it was utilizing a security

94
00:07:45.400 --> 00:07:45.880
hole.

95
00:07:48.180 --> 00:07:51.270
Second, don't try to hide that you are using WordPress.

96
00:07:51.600 --> 00:07:57.270
There are certain methods that change default paths, for example, allowing you to rename WP content

97
00:07:57.270 --> 00:07:58.560
folder to something else.

98
00:07:59.340 --> 00:08:03.570
But in the end it would be extremely hard to make it truly and discoverable.

99
00:08:04.230 --> 00:08:10.680
There are too many platform specific elements, for example, parts and files, organization which cannot

100
00:08:10.680 --> 00:08:17.310
be entirely changed, or class names in common components like body tag or navigation menus.

101
00:08:18.990 --> 00:08:26.940
Any user can also request any WordPress specific URL like RSS feeds are as the Windows Live writer manifest,

102
00:08:26.940 --> 00:08:27.570
etc..

103
00:08:28.680 --> 00:08:34.920
And even if you book them all, there are certain static files in the core that will reveal its WordPress.

104
00:08:38.870 --> 00:08:43.040
We should also remove or protect certain files in the WordPress file system.

105
00:08:43.520 --> 00:08:50.690
These are WP config sample BHP which you can simply remove as it is not needed after installation.

106
00:08:52.070 --> 00:09:00.770
WP config BHP for which you should set six for all permissions and prevent access to it in access.

107
00:09:01.130 --> 00:09:03.290
With the code we already learned earlier.

108
00:09:06.640 --> 00:09:09.790
Then there's a couple of static fires that also should be blocked.

109
00:09:10.450 --> 00:09:17.800
WordPress read me HTML and license files and similar files in plugins directories.

110
00:09:18.100 --> 00:09:22.480
Read them it, read me and the license etc..

111
00:09:23.920 --> 00:09:30.070
The ones coming from WordPress are not too dangerous themselves, but those coming from plugins or themes

112
00:09:30.280 --> 00:09:36.790
often expose a little too much, especially the precise version number, which can help attackers determine

113
00:09:36.790 --> 00:09:39.640
if certain exploits have a chance to work or not.

114
00:09:40.870 --> 00:09:44.950
Unfortunately, some plugins let out their version numbers in more places.

115
00:09:45.610 --> 00:09:51.490
For example, it may be hardcoded in JavaScript or Seus files, and for that there's nothing to be done

116
00:09:51.490 --> 00:09:54.130
about this.

117
00:09:54.130 --> 00:09:55.060
God forbid.

118
00:09:55.060 --> 00:09:57.550
Access to any file that starts with read me.

119
00:09:58.000 --> 00:10:01.120
License with S and license with C.

120
00:10:08.070 --> 00:10:12.150
In your science settings in the general panel, disable the option.

121
00:10:12.150 --> 00:10:16.230
Anyone can register if you don't actually expect people to register.

122
00:10:18.530 --> 00:10:20.330
In the discussion settings page.

123
00:10:20.600 --> 00:10:26.270
Disable comments if you don't use WordPress comment system on your site by uncheck the option.

124
00:10:26.270 --> 00:10:32.750
Allow people to submit comments on new posts, but because this can be changed proposed, follow the

125
00:10:32.750 --> 00:10:36.190
rest of the settings page and check the option.

126
00:10:36.200 --> 00:10:42.770
Users must be registered and logged into comment which will block any potential anonymous comments and

127
00:10:42.770 --> 00:10:43.690
check the option.

128
00:10:43.700 --> 00:10:48.890
Comments must be manually approved, which would prevent any potential comments from being displayed

129
00:10:48.920 --> 00:10:50.910
on your page before you accept it.

130
00:10:52.550 --> 00:10:55.520
You might also want to disable being bugs and to track bugs.

131
00:10:56.120 --> 00:11:00.980
These are methods that allow different blocks to communicate whenever one links to another.

132
00:11:02.000 --> 00:11:07.700
If you are not interested in these functionalities or you find them being mostly spammy, you can disable

133
00:11:07.700 --> 00:11:10.880
them completely on the same discussion panel.

134
00:11:10.880 --> 00:11:17.570
Uncheck the options attempts to modify any blocks linked to from the post and allow link notifications

135
00:11:17.570 --> 00:11:18.590
from other blogs.

136
00:11:19.580 --> 00:11:25.520
Keeping these settings disabled will save your server from having to deal with spam requests and save

137
00:11:25.520 --> 00:11:28.490
your database from having to store spammy records.

138
00:11:31.530 --> 00:11:37.140
There's also a couple of useful code snippets that you should put in your themes functions P2P file.

139
00:11:38.100 --> 00:11:45.240
The first one will remove the generator meta information from all sites head section, RSS or item feeds.

140
00:11:46.270 --> 00:11:51.760
It's good for security because the generator information contains the precise version number of your

141
00:11:51.760 --> 00:11:52.930
WordPress installation.

142
00:11:54.570 --> 00:12:00.990
But this version number can also appear in other places, notably as version numbers of static resources

143
00:12:00.990 --> 00:12:02.580
like scripts or styles.

144
00:12:05.120 --> 00:12:10.610
To change that, you need to use style loader source and script loader source filters.

145
00:12:13.880 --> 00:12:21.090
In this code, we check if the verb parameter exists in the assets URL and if yes, we remove it with

146
00:12:21.090 --> 00:12:23.420
the wordpress remove query ask function.

147
00:12:27.180 --> 00:12:29.940
This simple solution has one serious downside.

148
00:12:30.540 --> 00:12:36.480
Browsers will cache these static files and after the WordPress update they will not know they need to

149
00:12:36.480 --> 00:12:40.740
Donald's new versions from the server because the path will not change.

150
00:12:41.010 --> 00:12:42.780
There will be no var parameter.

151
00:12:42.780 --> 00:12:44.420
That would change to a new number.

152
00:12:47.170 --> 00:12:52.660
To solve that, you need to keep the parameter but change its value to something else, which will not

153
00:12:52.660 --> 00:12:57.080
let out the actual version number in the modified code.

154
00:12:57.100 --> 00:13:02.170
We create a hash based on the whole, you are all pretending it with some custom string to make the

155
00:13:02.170 --> 00:13:04.030
cache a little less predictable.

156
00:13:05.320 --> 00:13:12.190
Then instead of removing the version parameter, replace its original value with the hash using wordpress.

157
00:13:12.340 --> 00:13:13.930
Add the query function.

158
00:13:17.420 --> 00:13:21.470
So now when the version number would change, the you are allowed to change as well.

159
00:13:21.740 --> 00:13:26.690
And so a hash will change and we will have a different hash for each resource.

160
00:13:27.170 --> 00:13:34.010
So if you update one individual plugin caches, invert parameters will change only for this particular

161
00:13:34.010 --> 00:13:34.880
plugins file.

162
00:13:40.400 --> 00:13:46.310
The last thing you might wants to do is prevent the user's enumeration if it's not explicitly needed.

163
00:13:47.300 --> 00:13:50.270
Users enumeration is when someone types this.

164
00:13:52.310 --> 00:13:59.420
It will redirect the first users author archive as you see, it makes it retrieval to find out the admins

165
00:13:59.420 --> 00:14:03.020
username because the first user is usually admin.

166
00:14:04.280 --> 00:14:10.610
Disabling this feature will make it more difficult, although if your admin username really is admin,

167
00:14:10.880 --> 00:14:17.960
the attacker can easily find it out by typing directly your URL slash author slash admin, which is

168
00:14:17.960 --> 00:14:19.970
a built in WordPress author archive.

169
00:14:20.840 --> 00:14:24.770
That's why it's better to name the admin user something else than admin.

170
00:14:28.210 --> 00:14:34.600
In this code, we first make sure we are not in the admin panel and then check for the existence of

171
00:14:34.600 --> 00:14:42.400
other parameter in whatever type of request we use the request to label here on purpose because we want

172
00:14:42.400 --> 00:14:49.510
to see if the parameter was sent with whichever method and if it exists would return an error message

173
00:14:49.510 --> 00:14:51.730
and the four three forbidden status code.

174
00:14:56.030 --> 00:15:02.270
All these things removing water generator, removing version numbers and preventing users enumeration.

175
00:15:02.810 --> 00:15:06.530
You can set in the all in one WordPress security and firewall plugin.

176
00:15:08.190 --> 00:15:12.690
However, the removal of version numbers works only for the WordPress core.

177
00:15:13.620 --> 00:15:19.560
The plugins and themes version numbers are not protected by this plugin, so instead you might want

178
00:15:19.560 --> 00:15:20.670
to use our code.
