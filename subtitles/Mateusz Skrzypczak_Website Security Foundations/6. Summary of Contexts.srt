1
00:00:04,930 --> 00:00:06,640
This was a pretty long chapter.

2
00:00:06,850 --> 00:00:12,070
And as you just saw, with such a great number of contexts, it's quite easy to make a mistake.

3
00:00:12,430 --> 00:00:14,680
So let's sum up what we have just learned.

4
00:00:15,790 --> 00:00:22,780
Four Element Content Context in Part B, always use HD email special chars with end quotes.

5
00:00:22,780 --> 00:00:30,490
Plug in JavaScript use our custom HTML special terms function or send the element content with text

6
00:00:30,490 --> 00:00:32,710
content or in our text properties.

7
00:00:34,820 --> 00:00:37,160
For estimate attribute value context.

8
00:00:37,430 --> 00:00:41,690
Use the same estimate special shares in both BHP and the JavaScript.

9
00:00:42,140 --> 00:00:45,110
Plus remember to surround the value with double quotes.

10
00:00:47,460 --> 00:00:55,880
Four estimable tag name context always checked the value against the whitest allowed tags for estimate

11
00:00:55,890 --> 00:01:03,150
attribute name context check the value against the white list of allowed attributes of his very strict

12
00:01:03,150 --> 00:01:07,140
rejects like letters, numbers underscore and does.

13
00:01:13,150 --> 00:01:15,950
For estimate text area or input value.

14
00:01:15,970 --> 00:01:20,470
Always use estimate of special tariffs in both B2B and JavaScript.

15
00:01:21,610 --> 00:01:24,670
Plus, remember to put the input value in double quotes.

16
00:01:27,510 --> 00:01:33,600
For HTML comment context also used a special chance in both BGP and JavaScript.

17
00:01:35,520 --> 00:01:39,630
When putting values in JavaScript context, use one of the following methods.

18
00:01:41,040 --> 00:01:46,620
Put the values directly in the script when the value has been casted to integrate or float, or when

19
00:01:46,620 --> 00:01:48,900
you have a value checked against the white list.

20
00:01:52,050 --> 00:01:53,130
All other values.

21
00:01:53,130 --> 00:01:57,510
You should put in the data attribute of a DOM element and read them from their.

22
00:02:00,600 --> 00:02:02,880
To export large portions of data.

23
00:02:02,880 --> 00:02:03,840
Use JSON.

24
00:02:09,010 --> 00:02:15,160
In serious context when you are putting user input as property values, use very strict regs.

25
00:02:15,670 --> 00:02:21,790
For example, only numbers and letters eight to F four colours or only numbers.

26
00:02:21,790 --> 00:02:25,120
Letters dot and person sign for distance values.

27
00:02:27,920 --> 00:02:33,860
And whether you were using their input to form property names also tested against a very strict regex.

28
00:02:34,130 --> 00:02:39,020
For example, only letters and a dash or even better, a white list.

29
00:02:42,300 --> 00:02:49,320
Finally, when dealing with URLs, when the user input is going to form the URL or its part, require

30
00:02:49,350 --> 00:02:56,760
absolute paths, convert any relative paths to absolute paths by preventing them with protocol, host

31
00:02:56,760 --> 00:03:05,700
based path, etc. Use the estimate special charts function in both B2B and JavaScript and always put

32
00:03:05,700 --> 00:03:07,140
the URL in quotes.

33
00:03:09,780 --> 00:03:16,650
When you need to place the user input as a query string, get parameter, use the URL and code function

34
00:03:16,650 --> 00:03:21,690
in BHP or our fixed and code URI component function in JavaScript.
