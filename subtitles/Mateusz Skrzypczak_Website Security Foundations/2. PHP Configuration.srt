1
00:00:05,240 --> 00:00:09,320
BHP is configured with a special file called BHP ENI.

2
00:00:09,980 --> 00:00:11,780
It's part of server configuration.

3
00:00:11,780 --> 00:00:17,300
So without route access, for example, on the shirt hosting, it's most likely you will not have access

4
00:00:17,300 --> 00:00:17,630
to it.

5
00:00:18,770 --> 00:00:24,500
However, some settings may be overridden like it's possible to override aperture config with the access

6
00:00:24,500 --> 00:00:24,890
file.

7
00:00:25,640 --> 00:00:33,460
There are different methods for that and access or dot user dot in your file or an INI set function.

8
00:00:35,370 --> 00:00:41,190
The first method lets you change some of the configuration entries per whole directory and the other

9
00:00:41,190 --> 00:00:43,350
option only for the script execution.

10
00:00:44,310 --> 00:00:52,260
But whether you need to use a user INI file or Texas file depends on how BHP runs on your server as

11
00:00:52,260 --> 00:00:53,310
an Apache module.

12
00:00:55,100 --> 00:01:03,350
Or as a CGI script, you can find this information of course running BHP informative, which near the

13
00:01:03,350 --> 00:01:06,530
very top should print out at server API entry.

14
00:01:07,880 --> 00:01:13,130
If it's something like Apache handler, then your appearance as Apache module and you can change the

15
00:01:13,130 --> 00:01:15,230
configuration with the access file.

16
00:01:16,310 --> 00:01:18,350
If it say something like CGI.

17
00:01:18,500 --> 00:01:20,870
Then you will have to use a user any file.

18
00:01:23,760 --> 00:01:28,980
Please note it's very important that you delete the script showing BHP info right after opening the

19
00:01:28,980 --> 00:01:34,830
page and finding out the necessary information because it exposes the detail configuration of your server

20
00:01:34,830 --> 00:01:38,520
and having it online makes the attacker's life much easier.

21
00:01:38,850 --> 00:01:40,110
They know all your setup.

22
00:01:40,650 --> 00:01:46,260
Nothing from this file is a download vulnerability, but it helps to determine what attacks can be performed.

23
00:01:46,560 --> 00:01:53,220
For example, if BHP or some modules are not up to date or it can help carry out a successful attack

24
00:01:53,520 --> 00:01:57,170
by revealing local paths, code, parameter, values, etc..

25
00:02:00,900 --> 00:02:06,270
The syntax of user ini file is identical to any configuration syntax.

26
00:02:06,870 --> 00:02:12,090
For example, this is how you would change the configuration in your directory to log errors to a log

27
00:02:12,090 --> 00:02:12,420
file.

28
00:02:15,050 --> 00:02:20,900
But if your server runs up as Apache module, you would need to use the access file and the diferent

29
00:02:20,900 --> 00:02:21,470
syntax.

30
00:02:22,490 --> 00:02:26,690
There are two key directives BHP flag and BHP value.

31
00:02:28,040 --> 00:02:32,810
The first one is used to set the boolean settings like log errors in this example.

32
00:02:34,040 --> 00:02:36,230
The second one is used to change values.

33
00:02:36,590 --> 00:02:39,140
For example path for error log entry.

34
00:02:41,760 --> 00:02:44,760
The last method I mentioned is an easy set function.

35
00:02:45,330 --> 00:02:51,150
It's useful for temporary changes in the running code, but in particular scenarios call for any set.

36
00:02:51,390 --> 00:02:54,480
Might be too late for the setting to make an effect in your script.

37
00:02:54,960 --> 00:03:01,370
Although the setting will be changed, so better to use the config files anyway.

38
00:03:01,380 --> 00:03:05,100
This is how you would use any set to achieve the same effect as before.

39
00:03:09,550 --> 00:03:14,440
Now each configuration setting has the limitation to where it can be set and overridden.

40
00:03:15,070 --> 00:03:17,110
Some can only be set in the main page.

41
00:03:17,230 --> 00:03:21,970
Any fail available to server admins and can be later overridden at all.

42
00:03:22,750 --> 00:03:30,310
Others may be set per directory in user or HD access file, and others can only be set within set function,

43
00:03:30,520 --> 00:03:32,110
which means directly in the script.

44
00:03:32,680 --> 00:03:34,990
This is the smallest set of config entries.

45
00:03:36,610 --> 00:03:41,680
Let's now see the list of HP configuration entries that are important for the security of your app.

46
00:03:42,640 --> 00:03:48,100
There's generally no need to override the entries that already have the values you need, but if you're

47
00:03:48,100 --> 00:03:50,830
on the shared hosting, you may want to actually do that.

48
00:03:50,950 --> 00:03:53,950
In case the common configuration will change in the future.

49
00:03:55,090 --> 00:04:00,760
Unless otherwise specified, you can change the following directives everywhere in a user in the file,

50
00:04:01,300 --> 00:04:03,700
access file or by any set function.

51
00:04:04,630 --> 00:04:06,700
The syntax is for user your file.

52
00:04:09,380 --> 00:04:17,090
Display errors off will prevent errors from being displayed in the browser and the error warning etc.

53
00:04:17,240 --> 00:04:20,960
will only belong to the error log if that is enabled.

54
00:04:21,620 --> 00:04:25,580
In case of any serious error, the page will just fail silently.

55
00:04:27,440 --> 00:04:33,530
Display startup errors off will prevent startup errors from being displayed in the browser.

56
00:04:34,070 --> 00:04:38,140
It's off by default, so only change it if it somehow set to on.

57
00:04:40,260 --> 00:04:44,190
Log errors on will save errors to log file.

58
00:04:44,640 --> 00:04:46,590
This is turned off by default.

59
00:04:48,180 --> 00:04:51,660
Error log defiance BHP error a log file location.

60
00:04:52,200 --> 00:04:57,090
Remember that this file must be carefully protected as it will contain fragile data.

61
00:04:57,930 --> 00:05:02,310
Keep it off the website directory and ensure it has minimal permissions.

62
00:05:02,550 --> 00:05:04,800
Read and write for owner write.

63
00:05:04,800 --> 00:05:08,660
Permission is necessary so that the application can put the log entries.

64
00:05:11,010 --> 00:05:17,040
Error reporting defines the types of error messages you want to see, either in the log or on page.

65
00:05:17,280 --> 00:05:23,640
If display errors is somehow set to own, the default value is what you see, which means it will log

66
00:05:23,640 --> 00:05:29,100
everything except notices and alerts about coding standards and use of deprecated code.

67
00:05:30,000 --> 00:05:32,670
Note the tiled character, which is a negation.

68
00:05:35,660 --> 00:05:41,210
Logging errors is a good idea, and by periodically reviewing the log files, you may spot potential

69
00:05:41,210 --> 00:05:46,580
attack attempts because attackers trying to break your site will often cause lots of errors.

70
00:05:47,660 --> 00:05:53,240
And as long as you keep the display errors setting to off and properly secure your error log file,

71
00:05:53,480 --> 00:05:59,120
there's no point to limit the error reporting level for security reasons, so you might as well use

72
00:05:59,120 --> 00:05:59,900
it all.

73
00:06:00,860 --> 00:06:06,380
But on production servers there is no need to load the log file with notices and coding standards warnings.

74
00:06:06,380 --> 00:06:13,070
So the default value should be totally fine if you want to use all usage rather on development servers

75
00:06:13,070 --> 00:06:13,430
only.

76
00:06:17,080 --> 00:06:20,770
There's quite a lot of configuration entries related to session handling.

77
00:06:21,310 --> 00:06:25,000
Let's first see those that we might want to change from the default values.

78
00:06:26,530 --> 00:06:27,580
Cookie recipe.

79
00:06:27,580 --> 00:06:34,900
Only one will save the session cookie to be htp only, which means it will not be accessible to JavaScript.

80
00:06:35,470 --> 00:06:41,170
This way you can protect session cookies from being stolen through accesses or CSR if attacks.

81
00:06:42,800 --> 00:06:49,790
Cookie secure one will Wilson the session cookie over secure connection only use it if your site runs

82
00:06:49,790 --> 00:06:50,660
with SSL.

83
00:06:52,480 --> 00:06:52,930
Cookies.

84
00:06:52,930 --> 00:06:59,410
Same site, strict or lax will ensure decision cookie will not be sent along with cross-site requests

85
00:06:59,650 --> 00:07:04,270
which will greatly help to reduce CRF cross-site request forgery attacks.

86
00:07:05,390 --> 00:07:07,820
The values are strict or lax.

87
00:07:08,090 --> 00:07:10,340
And for now, you can just set it to LAX.

88
00:07:11,120 --> 00:07:16,010
We will talk about the differences between those two values in detail in the chapter about Caesar of

89
00:07:16,010 --> 00:07:16,640
protection.

90
00:07:17,600 --> 00:07:23,120
The same site attribute for cookies is fairly new, but the browser support is already pretty good.

91
00:07:23,600 --> 00:07:29,450
It's generally supported in all modern browsers, but it's also backwards, compatible and incompatible.

92
00:07:29,450 --> 00:07:33,260
The browser will just ignore it so you can use this setting safely.

93
00:07:34,010 --> 00:07:39,470
And one more thing this setting is only available as of 7.3.

94
00:07:42,080 --> 00:07:43,270
Use strict mode.

95
00:07:43,280 --> 00:07:52,130
One will not accept an initialized session id if BHP received an initialized session, ID and U.S. I.D.

96
00:07:52,130 --> 00:07:56,660
will be generated and sent back when this is set to zero.

97
00:07:56,690 --> 00:07:58,970
An attacker could generate their own session.

98
00:07:58,970 --> 00:08:05,240
ID trigger the victim user to join that session and when the user would log in, for example, the attacker

99
00:08:05,240 --> 00:08:08,510
would gain the access as well as a member of the same session.

100
00:08:09,620 --> 00:08:12,590
This type of attack is called session fixation.

101
00:08:14,090 --> 00:08:20,510
By default, it's set to zero, so it's off for maximum compatibility, but it's recommended to set

102
00:08:20,510 --> 00:08:21,200
it to one.

103
00:08:23,390 --> 00:08:29,210
See the length and see the bits per character allow you to set the length and complexity of session

104
00:08:29,210 --> 00:08:29,410
ID.

105
00:08:30,890 --> 00:08:36,920
Default values are 32 characters of length and the four beats per character, which means that the string

106
00:08:36,920 --> 00:08:40,640
will contain only numbers and lowercase letters a to F.

107
00:08:41,900 --> 00:08:48,860
The maximum setting is 256 characters and six bits per character, which means a string will contain

108
00:08:48,860 --> 00:08:51,110
numbers lowercase and uppercase.

109
00:08:51,110 --> 00:08:53,240
Letters, dashes and commas.

110
00:08:54,390 --> 00:08:59,520
The longer and the more complicated such an idea, the harder it will be to get it using brute force

111
00:08:59,520 --> 00:09:00,030
methods.

112
00:09:00,900 --> 00:09:04,920
These two settings are only available as of 7.1.

113
00:09:08,960 --> 00:09:14,330
Now let's see the list of session settings for which the folder values are secure and we just need to

114
00:09:14,330 --> 00:09:16,220
ensure they have not been overridden.

115
00:09:16,220 --> 00:09:23,810
Put any insecure value cookie life time sets to zero will make the session cookie valid only until the

116
00:09:23,810 --> 00:09:26,480
browser is open it zero by default.

117
00:09:28,500 --> 00:09:35,490
These two use cookies and use only cookies are on by default, so only override them if somehow they

118
00:09:35,490 --> 00:09:41,640
are turned off meaning sets to zero, they will prevent storing such an idea in your URL, which is

119
00:09:41,640 --> 00:09:43,680
very insecure way of passing it.

120
00:09:44,490 --> 00:09:48,710
So when this is set to zero, your app is exposed to all kinds of attacks.

121
00:09:48,710 --> 00:09:52,350
Some sessions like session fixation or session hijacking.

122
00:09:53,730 --> 00:09:58,950
This, of course, will prevent any user with cookies turned off from being able to maintain a session

123
00:09:59,250 --> 00:10:00,720
but is strongly recommended.

124
00:10:02,280 --> 00:10:08,580
After you force session ID to be stored in cookies, you can make sure that use transit is set to zero

125
00:10:08,580 --> 00:10:09,090
as well.

126
00:10:10,050 --> 00:10:14,190
This is a feature that helps dealing with session IDs anywhere else.

127
00:10:14,580 --> 00:10:15,780
It's off by default.

128
00:10:17,640 --> 00:10:23,760
Cash limiter knockers will ensure the content is not cached for authenticated sessions.

129
00:10:24,210 --> 00:10:29,160
It's non-cash by default and for maximum security should not have any other value.

130
00:10:35,940 --> 00:10:43,110
Upload max file size will limit the uploaded file size in this case to two megabytes, which is BJP's

131
00:10:43,110 --> 00:10:43,980
default value.

132
00:10:45,380 --> 00:10:52,700
This setting can be set within a set function only in user ini or access file or in global configuration,

133
00:10:52,700 --> 00:10:53,210
of course.

134
00:10:55,460 --> 00:11:00,140
Finally, there are some settings which can only be set in the global P2P file.

135
00:11:00,830 --> 00:11:06,050
If you happen to work with root access, you may want to review them as well and overwrite if needed.

136
00:11:07,830 --> 00:11:08,350
Exposed.

137
00:11:08,460 --> 00:11:15,330
BHP off will prevent exposing the fact that BHP is running on the server and disclosing its version.

138
00:11:16,170 --> 00:11:21,600
If this is on then this information will be visible in HTP response headers.

139
00:11:24,310 --> 00:11:28,810
Allow you to include of will prevent including remote files.

140
00:11:30,440 --> 00:11:33,920
If the include path for a file is based on the incoming data.

141
00:11:34,250 --> 00:11:41,360
User input, URL, uploaded files, etc. It will prevent an attacker from including a BHP file from

142
00:11:41,360 --> 00:11:42,230
their server.

143
00:11:43,190 --> 00:11:49,140
It will also prevent you from deliberately including BHP files which are not under your control.

144
00:11:49,160 --> 00:11:51,170
Which you absolutely shouldn't do.

145
00:11:53,430 --> 00:12:01,440
Allow u r l f open off will prevent vital functions like f open file, get contents, etc. from being

146
00:12:01,440 --> 00:12:03,360
able to work with remote files.

147
00:12:03,870 --> 00:12:10,200
While this can be securely done and more secure and less error prone method would be to use curl.
