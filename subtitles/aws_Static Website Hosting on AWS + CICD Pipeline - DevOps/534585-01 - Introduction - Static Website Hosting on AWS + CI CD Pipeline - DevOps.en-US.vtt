WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.170
Hi there, This is Valentine.

00:00:02.170 --> 00:00:07.345
And today I wanted to go over the process of hosting a website with AWS.

00:00:07.345 --> 00:00:09.865
I have just brought a new domain name.

00:00:09.865 --> 00:00:12.805
And I'll show you step-by-step how to host

00:00:12.805 --> 00:00:17.575
a simple HTML and JavaScript website with AWS S3,

00:00:17.575 --> 00:00:21.040
or go through the process of hosting a real domain.

00:00:21.040 --> 00:00:24.520
And together we're going to set up an AWS S3 bucket,

00:00:24.520 --> 00:00:28.210
upload some files, and configure everything to run properly.

00:00:28.210 --> 00:00:30.250
In the second part of the tutorial,

00:00:30.250 --> 00:00:34.075
I will show you how to automate the entire process with GitLab CI.

00:00:34.075 --> 00:00:37.960
And together we are going to build a simple CICD pipeline.

00:00:37.960 --> 00:00:41.935
Trust me, it is easier than you think and automation is so important.

00:00:41.935 --> 00:00:42.585
Today.

00:00:42.585 --> 00:00:45.560
We'll work from a Git repository and any changes

00:00:45.560 --> 00:00:48.755
that we make will be automatically deployed to the website.

00:00:48.755 --> 00:00:51.020
But first, let's make sure that we are on

00:00:51.020 --> 00:00:54.305
the same page right from the beginning of this tutorial,

00:00:54.305 --> 00:00:59.479
assumes that you have an AWS account hosting your files with AWS.

00:00:59.479 --> 00:01:03.230
S3 does not work if your website is more complex and

00:01:03.230 --> 00:01:07.190
needs a database where you need to run a programming language like PHP,

00:01:07.190 --> 00:01:09.305
SPX, or anything similar.

00:01:09.305 --> 00:01:13.505
This will also not work if you're trying to host a WordPress website.

00:01:13.505 --> 00:01:17.645
This will work quite well for Angular or React project.

00:01:17.645 --> 00:01:20.240
Hosting a website on AWS,

00:01:20.240 --> 00:01:23.705
S3 also does not support HTTPS.

00:01:23.705 --> 00:01:26.000
If you need this, you need to configure

00:01:26.000 --> 00:01:29.855
AWS Cloudfront In addition to what I'm showing you here.

00:01:29.855 --> 00:01:31.400
With that being said,

00:01:31.400 --> 00:01:34.470
let's jump straight into the tutorial.
