WEBVTT
1
00:00:00.240 --> 00:00:04.880
As we mentioned in the previous module,

2
00:00:04.880 --> 00:00:09.340
this is actually the area where you would implement parallel processing.

3
00:00:09.340 --> 00:00:11.820
And if you notice right now, our the unit tests are

4
00:00:11.820 --> 00:00:14.090
being fired off on one thread.

5
00:00:14.090 --> 00:00:16.740
If we wanted to create multiple threads,

6
00:00:16.740 --> 00:00:21.540
we would, in turn, fire these off asynchronously

7
00:00:21.540 --> 00:00:23.190
rather than in a synchronous fashion.

8
00:00:23.190 --> 00:00:26.190
So the way that we have this written right now is in

9
00:00:26.190 --> 00:00:29.670
asynchronous fashion in that each test will set up and

10
00:00:29.670 --> 00:00:33.730
fire off and run one after another.

11
00:00:33.730 --> 00:00:37.710
This is where you'd go through and create a thread pool, and you can

12
00:00:37.710 --> 00:00:40.500
use any thread pooling tool you want out there.

13
00:00:40.500 --> 00:00:44.470
C3P0 is actually a great one that you can go through and

14
00:00:44.470 --> 00:00:48.440
attach these to that and fire them off.

15
00:00:48.440 --> 00:00:52.240
Another option, and it is way outside the scope of this course,

16
00:00:52.240 --> 00:00:58.240
is to use something like Jenkins and set up each individual test

17
00:00:58.240 --> 00:01:00.790
to be fired off by a Jenkins call.

18
00:01:00.790 --> 00:01:04.650
But you can see how our tests here are starting to build inside of this

19
00:01:04.650 --> 00:01:09.250
unit test, and that is where we are doing this in a synchronous fashion,

20
00:01:09.250 --> 00:01:17.000
and we would call these asynchronously at this specific class to fire them off in a multiâ€‘threaded fashion.

