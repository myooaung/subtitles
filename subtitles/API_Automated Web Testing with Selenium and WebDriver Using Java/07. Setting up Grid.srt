1
00:00:00,740 --> 00:00:02,570
To start up our grid,

2
00:00:02,570 --> 00:00:07,130
it's almost exactly the same as starting up our standalone server.

3
00:00:07,130 --> 00:00:11,340
In fact, this was the command that we used to start up our server before,

4
00:00:11,340 --> 00:00:19,240
java ‑jar selenium‑server‑standalone‑3.141.59.jar.

5
00:00:19,240 --> 00:00:20,850
The only difference is is on the end of this,

6
00:00:20,850 --> 00:00:26,680
we're going to say that this has a role hub and hit Enter.

7
00:00:26,680 --> 00:00:34,300
When this starts up, you'll see that it launched Selenium Grid hub on port 4444,

8
00:00:34,300 --> 00:00:38,830
and it tells you that the grid hub is up and running.

9
00:00:38,830 --> 00:00:44,110
Nodes should register to 10.0.178:4444/grid/register,

10
00:00:44,110 --> 00:00:54,540
and clients should connect to 10.1.78.4444/wd/hub.

11
00:00:54,540 --> 00:01:00,740
Let's open up a browser and go look at what that console is telling us to do.

12
00:01:00,740 --> 00:01:04,360
Opening up a browser and navigating to that IP

13
00:01:04,360 --> 00:01:13,040
address of 10.0.1.78.4444/grid/console,

14
00:01:13,040 --> 00:01:16,580
you can see it pulls up our Selenium Server console,

15
00:01:16,580 --> 00:01:18,650
and we can view our configuration.

16
00:01:18,650 --> 00:01:20,320
Right now, it's currently blank.

17
00:01:20,320 --> 00:01:21,570
We don't have any configuration.

18
00:01:21,570 --> 00:01:24,050
And that's because we have the hub up and running,

19
00:01:24,050 --> 00:01:26,240
but we don't have a server running.

20
00:01:26,240 --> 00:01:28,140
Let's fix that.

21
00:01:28,140 --> 00:01:30,520
When we started our hub,

22
00:01:30,520 --> 00:01:36,280
it told us that new nodes should register to this IP address here,

23
00:01:36,280 --> 00:01:38,530
and yours is going to be unique to your machine,

24
00:01:38,530 --> 00:01:44,290
but this IP address and the URL /grid/register.

25
00:01:44,290 --> 00:01:47,720
Let's open another terminal window.

26
00:01:47,720 --> 00:01:53,530
I've got one here, and I'm at C dev/tools or my dev tools directory already,

27
00:01:53,530 --> 00:01:56,580
and I'm going to do almost the same exact command again.

28
00:01:56,580 --> 00:02:03,150
I'm going to say java ‑jar selenium‑server‑standalone.jar,

29
00:02:03,150 --> 00:02:09,990
and this time it's a role of node,

30
00:02:09,990 --> 00:02:18,840
and the hub that we want to connect to is ‑hub with that IP address.

31
00:02:18,840 --> 00:02:20,610
And it's going to wrap,

32
00:02:20,610 --> 00:02:23,980
but you can see that it's that IP address that it just told us when we

33
00:02:23,980 --> 00:02:26,730
started up our hub that we wanted to connect to it.

34
00:02:26,730 --> 00:02:31,070
So if I hit Enter now, you'll see it launches it,

35
00:02:31,070 --> 00:02:35,340
and it will tell you that it's registered the node to that hub and

36
00:02:35,340 --> 00:02:38,130
that the node is registered and ready to use.

37
00:02:38,130 --> 00:02:40,710
Now if we switch back over to our browser and refresh

38
00:02:40,710 --> 00:02:43,540
that, we should see a configuration.

39
00:02:43,540 --> 00:02:46,440
This is what it looked like before the refresh.

40
00:02:46,440 --> 00:02:48,580
After the refresh, hey,

41
00:02:48,580 --> 00:02:53,780
we see our server. We have our address identified, and it even tells

42
00:02:53,780 --> 00:02:57,750
you the operating system. But it also tells you the capabilities on

43
00:02:57,750 --> 00:03:07,000
that OS, and that is that I have Firefox, Safari, and Chrome available for us to run tests against.

