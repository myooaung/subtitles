WEBVTT
1
00:00:00.540 --> 00:00:05.290
I wanted to briefly talk about the architecture of Selenium and WebDriver.

2
00:00:05.290 --> 00:00:09.330
And as you can see from this diagram, we have any of our

3
00:00:09.330 --> 00:00:11.760
programming languages, such as Java,

4
00:00:11.760 --> 00:00:18.050
C#, Ruby, Python, it's actually not limited to just these four, that's just some

5
00:00:18.050 --> 00:00:23.600
of the more popular or common ones that we use with WebDriver, and those all run

6
00:00:23.600 --> 00:00:29.580
on top of or sit on top of the WebDriver API that uses drivers such as the

7
00:00:29.580 --> 00:00:36.580
Chrome driver or Firefox driver or IE, or you can even use generic HtmlUnit to

8
00:00:36.580 --> 00:00:38.940
communicate with those browsers.

9
00:00:38.940 --> 00:00:43.310
So we have, say for example, Java code that we run through the WebDriver API

10
00:00:43.310 --> 00:00:47.570
that will talk to Chrome. We saw an example of that when we used the Selenium

11
00:00:47.570 --> 00:00:53.030
IDE to record our test script and then copy that Selenese into our IDE. And we

12
00:00:53.030 --> 00:00:56.670
just opened it up in our Notepad and we didn't have to change anything. It

13
00:00:56.670 --> 00:01:01.530
created the unit test for us that will now run through the WebDriver API and

14
00:01:01.530 --> 00:01:05.330
control Chrome. And you'll see later in this course for us to switch between

15
00:01:05.330 --> 00:01:08.930
Chrome or Firefox or Internet Explorer, all we have to do is tell it to

16
00:01:08.930 --> 00:01:12.150
utilize a different driver and that's all we have to change in our code.

17
00:01:12.150 --> 00:01:15.140
We don't have to change any of the actual source code

18
00:01:15.140 --> 00:01:17.840
other than just specifying a driver.

19
00:01:17.840 --> 00:01:21.520
So it's a simplistic view of what the architecture is doing, but suffice it

20
00:01:21.520 --> 00:01:27.230
to say, we have the WebDriver API that sits between our programming

21
00:01:27.230 --> 00:01:31.520
language, and it's a driver for our specified browser, and that enables us

22
00:01:31.520 --> 00:01:38.000
to talk through that API to control it without actually having to programmatically do anything different.

