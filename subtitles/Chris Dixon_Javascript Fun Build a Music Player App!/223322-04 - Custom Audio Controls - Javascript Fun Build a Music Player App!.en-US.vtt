WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.890 --> 00:00:03.120
As we've seen in the previous video,

00:00:03.120 --> 00:00:04.770
we now have controls which are

00:00:04.770 --> 00:00:09.525
the default audio controls provided with the HTML5 audio player.

00:00:09.525 --> 00:00:11.670
We're now going to create our own controls to this

00:00:11.670 --> 00:00:13.695
project which includes the play button,

00:00:13.695 --> 00:00:17.835
the pause button, and also the volume and progress bar.

00:00:17.835 --> 00:00:20.400
The way just like we've seen in the last video,

00:00:20.400 --> 00:00:26.760
to remove this is to remove our controls attribute which is inside of the audio player.

00:00:26.760 --> 00:00:31.785
If we save this, we see our audio player is now removed from the browser.

00:00:31.785 --> 00:00:36.195
From our source element just below we can also remove the source attribute,

00:00:36.195 --> 00:00:40.099
since we're going to add this dynamically using JavaScript.

00:00:40.099 --> 00:00:41.990
Now we've removed these controls,

00:00:41.990 --> 00:00:44.420
we now need to go ahead and create our own.

00:00:44.420 --> 00:00:48.260
To do this, let's go just below our audio player and we create

00:00:48.260 --> 00:00:52.710
a new div which is going to have the ID of controls.

00:00:53.840 --> 00:00:57.575
This control section, if we go to the final version

00:00:57.575 --> 00:01:01.025
is going to have the text at the top with the current playing song.

00:01:01.025 --> 00:01:03.455
We'll have a play button, and a pause,

00:01:03.455 --> 00:01:09.240
along with a volume slider down at the bottom. There's control section.

00:01:09.240 --> 00:01:10.940
If we go to the final version,

00:01:10.940 --> 00:01:15.560
this is going to have the text of now playing and then the current playing song.

00:01:15.560 --> 00:01:17.960
We'll have our icons for play and pause.

00:01:17.960 --> 00:01:20.920
Then our volume slider down at the bottom.

00:01:20.920 --> 00:01:23.150
Let's start with our p element,

00:01:23.150 --> 00:01:26.885
which is going to be for our text for the currently playing song.

00:01:26.885 --> 00:01:30.935
This p elements will be empty for now since we'll set this via JavaScript,

00:01:30.935 --> 00:01:34.530
but we can set this for now with an ID of current song.

00:01:35.540 --> 00:01:38.300
Just after this, we can create a div which is

00:01:38.300 --> 00:01:41.885
a wrapper for all play on our pause buttons.

00:01:41.885 --> 00:01:45.930
The class for this wrapper is going to be controls wrapper,

00:01:47.690 --> 00:01:50.325
this is for our CSS.

00:01:50.325 --> 00:01:51.650
Then inside we're going to add

00:01:51.650 --> 00:01:55.940
our two span elements and this is going to have a HTML entity.

00:01:55.940 --> 00:02:01.430
The first HTML entity code we're going to use is going to be for our play button.

00:02:01.430 --> 00:02:04.205
This has the value of the ampersands,

00:02:04.205 --> 00:02:09.594
the hash, 9658, followed by the semicolon.

00:02:09.594 --> 00:02:13.580
The second one is going to be for our pause and to do this,

00:02:13.580 --> 00:02:18.520
we're going to create two vertical bars just like we see on the final version just here.

00:02:18.520 --> 00:02:21.590
The code we need for this is that the ampersands,

00:02:21.590 --> 00:02:27.184
the harsh, 10074, and the semicolon.

00:02:27.184 --> 00:02:30.200
We see we just have one of these vertical bars at the moment,

00:02:30.200 --> 00:02:35.720
but we can copy this and paste it just next to it to give us the pause symbol.

00:02:35.720 --> 00:02:39.865
We then also need a volume section just blow this div,

00:02:39.865 --> 00:02:43.850
so div p elements will detect the volume.

00:02:43.850 --> 00:02:50.025
A div with the class of volume and this is going to be a wrapper for our positive,

00:02:50.025 --> 00:02:55.690
our negative symbols and also the input which is going to have the type of range.

00:02:55.690 --> 00:02:59.460
First the negative symbol inside of our span elements,

00:02:59.460 --> 00:03:06.680
which is simply a dash followed by our inputs with the type of range.

00:03:06.680 --> 00:03:12.930
We can control this from our JavaScript by giving it an ID of volume slider.

00:03:13.400 --> 00:03:16.370
For our volume, we need to set the range to be

00:03:16.370 --> 00:03:19.190
between zero and one and we can do this with

00:03:19.190 --> 00:03:25.410
min equals zero and the max attribute to be equal to one.

00:03:25.460 --> 00:03:27.660
The final attribute of this step,

00:03:27.660 --> 00:03:30.795
I'm going to set this to be 0.01,

00:03:30.795 --> 00:03:34.160
and this means our range slider when we go from left to right,

00:03:34.160 --> 00:03:37.640
will go up in stages of 0.01.

00:03:37.640 --> 00:03:40.250
This will give us a pretty smooth slider as we go from

00:03:40.250 --> 00:03:42.500
left to right and then just after this,

00:03:42.500 --> 00:03:45.220
we're going to have to span a weird at the plus icon.

00:03:45.220 --> 00:03:51.200
This is now the visual or the HTML section now taken care of for our custom controls.

00:03:51.200 --> 00:03:53.840
Since these are simply HTML elements they won't

00:03:53.840 --> 00:03:56.405
play any music at the moment inside the browser,

00:03:56.405 --> 00:04:00.119
but we'll fix this very soon it using JavaScript.
