1
00:00:02,157 --> 00:00:06,076
In this module we saw all the tools that we need to

2
00:00:06,076 --> 00:00:07,709
set up our Angular environment.

3
00:00:07,709 --> 00:00:11,401
I'll keep IntelliJ IDEA as the code editor because it gives me

4
00:00:11,401 --> 00:00:15,109
a great Angular support as well as Java EE,

5
00:00:15,109 --> 00:00:18,202
as we've seen in the previous modules.

6
00:00:18,202 --> 00:00:23,239
Node JS is the JavaScript runtime environment we'll be using.

7
00:00:23,239 --> 00:00:27,557
Yarn is the building tool that will help us compile and package our code

8
00:00:27,557 --> 00:00:32,094
as well as dealing with the external dependencies.

9
00:00:32,094 --> 00:00:34,289
In terms of code generation,

10
00:00:34,289 --> 00:00:38,271
we've seen and installed Angular CLI to bootstrap our

11
00:00:38,271 --> 00:00:41,868
Angular application and Swagger CodeGen to generate the

12
00:00:41,868 --> 00:00:44,578
HTTP code to invoke our backend.

13
00:00:44,578 --> 00:00:50,179
To prettify our web application, we've chosen the Twitter Bootstrap framework.

14
00:00:50,179 --> 00:00:57,882
Finally we will use Google Chrome for its dev tool extension.

15
00:00:57,882 --> 00:01:02,009
Now that we've picked up all the tools to develop our Angular frontend,

16
00:01:02,009 --> 00:01:07,253
the next module we'll use them to bootstrap our web application.

17
00:01:07,253 --> 00:01:12,451
We will use the Angular CLI to scaffold an Angular application.

18
00:01:12,451 --> 00:01:16,863
We will check the generated code and then compile it and

19
00:01:16,863 --> 00:01:29,000
execute it with a Yarn building tool. Finally we will see how to configure Bootstrap to have a nicer UI.

