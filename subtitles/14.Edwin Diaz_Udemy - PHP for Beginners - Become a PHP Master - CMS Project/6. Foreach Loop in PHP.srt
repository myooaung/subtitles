1
00:00:00,520 --> 00:00:01,250
All right.

2
00:00:01,250 --> 00:00:06,440
So on this video here I'm going to show you one of the most powerful loops there are.

3
00:00:06,810 --> 00:00:13,010
It's called the For Each loop and this for each loop this loop works only with a race.

4
00:00:13,020 --> 00:00:20,610
The job of this loop is actually through goal to go through an array and go through every every value

5
00:00:20,610 --> 00:00:24,540
on the array and process that value right go through it.

6
00:00:24,540 --> 00:00:26,660
We will need to go through the whole array.

7
00:00:26,660 --> 00:00:28,650
We don't need to tell him when to stop.

8
00:00:28,680 --> 00:00:34,370
It will already know when to stop and we'll stop when the array finishes at the end of the array the

9
00:00:34,370 --> 00:00:39,870
loser say you know what I'm done with all the information and I'm going to stop right there.

10
00:00:39,960 --> 00:00:44,340
Lazlo wow we need when we need it to tell it exactly when to stop.

11
00:00:44,340 --> 00:00:49,140
And the for loop we needed to tell it this one we don't need to do that but this one only works with

12
00:00:49,140 --> 00:00:49,770
arrays.

13
00:00:49,830 --> 00:00:52,530
So let's go ahead and let me show you how that works.

14
00:00:52,530 --> 00:00:54,940
There's Oprah coeditor.

15
00:00:55,170 --> 00:00:57,300
All right.

16
00:00:57,990 --> 00:01:05,100
And I got this follow your open but I want to do a open on the blank that BHP.

17
00:01:05,490 --> 00:01:06,180
Right.

18
00:01:06,540 --> 00:01:08,320
And I'm going to call this for each.

19
00:01:08,320 --> 00:01:12,550
This is the For Each loop.

20
00:01:12,780 --> 00:01:15,700
There we go.

21
00:01:15,750 --> 00:01:16,710
All right.

22
00:01:17,280 --> 00:01:24,020
So the way we write a For Each loop is very simple very similar to the other ones.

23
00:01:25,190 --> 00:01:28,650
All right let's up here tax.

24
00:01:29,100 --> 00:01:38,290
We're going to use the key word for each parentheses curly brackets right.

25
00:01:38,580 --> 00:01:48,840
Now this is where everything changes for each numbers as we use the key word.

26
00:01:48,840 --> 00:01:55,470
Another key we're writing between as number.

27
00:01:55,690 --> 00:01:56,570
Right.

28
00:01:56,940 --> 00:02:07,270
So now remember this works with arrays so this will be the array in this as well turn.

29
00:02:07,650 --> 00:02:11,920
Once the loop is inside the array we turn to each value of the array.

30
00:02:12,180 --> 00:02:16,090
It will assign it a variable quarter number.

31
00:02:16,110 --> 00:02:23,890
So let's create a variable right here and remember everything inside this curly brackets would get skewed.

32
00:02:23,930 --> 00:02:28,040
So if you now understand it don't worry we will practice this in application.

33
00:02:28,200 --> 00:02:37,590
So we have numbers here and let's create an array with some values inside this tree.

34
00:02:37,650 --> 00:02:46,050
Actually this is numbers go forty five again I'm just typing crazy and typing three forty five three

35
00:02:46,050 --> 00:02:47,490
times either.

36
00:02:47,910 --> 00:02:51,570
And I just put my fingers on the key where randomly.

37
00:02:51,810 --> 00:02:52,140
All right.

38
00:02:52,140 --> 00:02:53,970
So we have a bunch of values here.

39
00:02:53,970 --> 00:03:03,540
We got 0 1 2 3 4 5 and 6 values inside is raise call cold numbers for each ray.

40
00:03:03,630 --> 00:03:12,890
Now we'll jump into that numbers raise will get in there and assign a variable to each of these values.

41
00:03:13,140 --> 00:03:17,040
Every time he goes around Remember this is a loop so we go around.

42
00:03:17,160 --> 00:03:21,500
So the first time he goes around first time is right here he's on three 45.

43
00:03:21,500 --> 00:03:25,650
So 345 is going to be assigned this number.

44
00:03:25,660 --> 00:03:28,230
Name this name number.

45
00:03:28,530 --> 00:03:30,480
So 345 is going to be equal to number.

46
00:03:30,480 --> 00:03:33,090
So whatever we can we want to do to that value.

47
00:03:33,090 --> 00:03:35,460
Here we do it right here on the first time.

48
00:03:35,460 --> 00:03:40,290
And then when he goes around again this number is going to be assigned to this and then this number

49
00:03:40,290 --> 00:03:44,220
is going to be assigned to this variable and it's going to be assigned to each of these.

50
00:03:44,220 --> 00:03:45,620
So look at this.

51
00:03:45,630 --> 00:03:49,400
So for example if I wanted to echo our number

52
00:03:52,110 --> 00:03:55,140
and then just going to put a strain here of B.

53
00:03:55,170 --> 00:04:03,820
So that way I can break into a new line and if I click here look what happens.

54
00:04:03,930 --> 00:04:09,400
We went through the array and we echo everything out just by assigning it.

55
00:04:09,630 --> 00:04:16,010
You see that it went in a sign that this number right here is sign.

56
00:04:16,050 --> 00:04:23,700
Each of these values their variable number so we were able to ask to go ahead every time echo this every

57
00:04:23,700 --> 00:04:28,840
time we went around we that the value where the loop were was.

58
00:04:28,950 --> 00:04:30,470
So they knew it wasn't number one.

59
00:04:30,480 --> 00:04:34,730
We call that first pile when you weren't around the first time.

60
00:04:34,890 --> 00:04:37,000
And he was 345.

61
00:04:37,170 --> 00:04:43,020
Then we went he went around again he assigned the variable to the second value and we printed out three

62
00:04:43,040 --> 00:04:45,570
97 and he keep printing everything out.

63
00:04:45,670 --> 00:04:46,950
When you got to the end.

64
00:04:46,950 --> 00:04:51,940
So he found out what the end was with wild moves.

65
00:04:52,020 --> 00:05:01,230
We would have to probably know exactly the values the amount of values that he had inside.

66
00:05:01,470 --> 00:05:08,760
Or use another function just to check for the length of the array for each already knows that lento

67
00:05:08,760 --> 00:05:11,920
the array saves a whole bunch of lines of code.

68
00:05:12,000 --> 00:05:17,790
I should not allow a lot of lines of code but it does save us some some extra steps that we would take

69
00:05:17,790 --> 00:05:19,000
to make this happen.

70
00:05:19,170 --> 00:05:26,850
So the For Each is very useful when we want to go through an array and check on the values and print

71
00:05:26,880 --> 00:05:29,860
everything out or do whatever we want with those values.

72
00:05:29,880 --> 00:05:31,550
It would do it automatically for us.

73
00:05:31,560 --> 00:05:32,010
All right.

74
00:05:32,130 --> 00:05:38,550
So that for each is really powerful and you would find uses for it in the future when you get a little

75
00:05:38,550 --> 00:05:40,790
bit more advanced 2 mph.

76
00:05:40,980 --> 00:05:41,460
Right.

77
00:05:41,610 --> 00:05:48,790
But on this one I show you how to find a for each loop and I show you how to use one.

78
00:05:49,020 --> 00:05:52,230
Anyway thank you so much for watching this lecture here.

79
00:05:52,260 --> 00:05:56,040
Hopefully you'll learn some valuable information and I'll see you on the next one.

80
00:05:56,040 --> 00:05:56,850
Take care.
