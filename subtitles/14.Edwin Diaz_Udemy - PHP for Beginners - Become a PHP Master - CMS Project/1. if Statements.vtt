WEBVTT
1
00:00:00.480 --> 00:00:02.990
I will come back on this to you.

2
00:00:03.020 --> 00:00:12.120
We are going to be learning about if statements a special control structure is demons or logical expressions

3
00:00:12.120 --> 00:00:19.320
that we use in PH BE with many different programming languages to make our code do certain things based

4
00:00:19.320 --> 00:00:21.300
on conditions.

5
00:00:21.300 --> 00:00:23.360
Let me just give you an example.

6
00:00:23.370 --> 00:00:29.700
Let's say for example you have a user going to a page on your Web site and you want to find out how

7
00:00:29.700 --> 00:00:36.510
users logged in their users log in to the Web site you want to show the user a certain page if their

8
00:00:36.510 --> 00:00:37.650
users are not logged in.

9
00:00:37.650 --> 00:00:39.660
You want to show them another page.

10
00:00:39.660 --> 00:00:40.280
Right.

11
00:00:40.650 --> 00:00:51.050
So you create an if statement you say if user Edwyn is not logged in showing this page.

12
00:00:51.270 --> 00:00:57.450
If he is show him this page that's why if statements are very important.

13
00:00:57.450 --> 00:01:04.440
They control the flow over programs in any programming language but in PH BE They are very powerful.

14
00:01:04.440 --> 00:01:09.310
Now let's go ahead and let's try one down and let me show you how to use them.

15
00:01:09.630 --> 00:01:13.510
So I'm going to open my coeditor.

16
00:01:13.510 --> 00:01:13.820
All right.

17
00:01:13.830 --> 00:01:18.690
And then I used a blank that ph be there to do a Save As.

18
00:01:19.230 --> 00:01:23.330
And we're going to call this if statement if state.

19
00:01:23.580 --> 00:01:28.350
Just like a state meant that we go.

20
00:01:28.950 --> 00:01:29.950
All right.

21
00:01:30.510 --> 00:01:35.190
So the second thing that I'm going to do here is ongoing create.

22
00:01:37.290 --> 00:01:42.080
I go out of my room really dark right now and I can't even see my keyboard.

23
00:01:42.550 --> 00:01:42.880
All right.

24
00:01:42.900 --> 00:01:48.560
So I don't know who turned off the light.

25
00:01:48.560 --> 00:01:49.440
All right so

26
00:01:52.620 --> 00:01:56.750
the syntax of this statement is really simple.

27
00:01:56.750 --> 00:02:01.620
We create a word and actually we don't create it we write it down because already create is already

28
00:02:01.620 --> 00:02:02.610
defined for us.

29
00:02:02.620 --> 00:02:03.600
Impeach B.

30
00:02:03.690 --> 00:02:10.740
So we use the word the reserve word if and then we put parentheses and then curly brackets and then

31
00:02:10.740 --> 00:02:15.180
what I usually do with the way I write it is that I write this down is to pull the cursor right here

32
00:02:15.180 --> 00:02:19.550
in between right and I bring it down right.

33
00:02:19.560 --> 00:02:22.520
So this is I need statements in this parenthesis here.

34
00:02:22.680 --> 00:02:24.680
We're going to test our condition.

35
00:02:24.900 --> 00:02:30.890
So if something here executes the truth then we execute everything.

36
00:02:30.900 --> 00:02:38.140
If something here OK equal to true then we execute everything in between these curly brackets for example.

37
00:02:38.520 --> 00:02:46.860
We know that peach B has an internal calculator so we can say if three is less than 10.

38
00:02:47.420 --> 00:02:49.940
All right I want you to do something.

39
00:02:50.070 --> 00:02:55.150
So if three is less than 10 we're going to write something that we get to echo.

40
00:02:55.570 --> 00:02:57.810
That's equites string say three

41
00:03:00.810 --> 00:03:04.630
is less than 10.

42
00:03:04.680 --> 00:03:12.190
Perfect were to close the semi-colon here and let Bagchi know that we are done executing this commander

43
00:03:12.210 --> 00:03:12.820
right.

44
00:03:13.050 --> 00:03:15.450
So let's see how that works.

45
00:03:15.480 --> 00:03:16.050
Let's see.

46
00:03:16.050 --> 00:03:19.730
Let's see it on the browser Let's see what it displays.

47
00:03:19.920 --> 00:03:22.260
So it's true right.

48
00:03:22.290 --> 00:03:23.460
Three is less than 10.

49
00:03:23.460 --> 00:03:24.740
So that's why you execute it.

50
00:03:24.740 --> 00:03:28.080
But let's say for example three.

51
00:03:28.350 --> 00:03:33.930
We'd say if three is more than 10 it's AQ this.

52
00:03:33.940 --> 00:03:35.310
Now the line disappears.

53
00:03:35.310 --> 00:03:36.470
Because it's not true.

54
00:03:36.480 --> 00:03:37.550
Right.

55
00:03:38.280 --> 00:03:43.600
So this if statement we execute as long as this condition is true.

56
00:03:43.620 --> 00:03:43.930
All right.

57
00:03:43.950 --> 00:03:50.820
Ask longus basically what we are doing with this if statement is testing a condition here.

58
00:03:50.910 --> 00:03:55.020
This is like this if this is not like this then do this right.

59
00:03:55.070 --> 00:04:00.060
We can say also if it's not 3 right we can do this.

60
00:04:00.420 --> 00:04:02.340
If it is three then we can do this.

61
00:04:02.370 --> 00:04:05.490
We are controlling the flow over program.

62
00:04:05.490 --> 00:04:09.370
Now this is another only way of writing these down.

63
00:04:09.400 --> 00:04:10.560
All right.

64
00:04:10.710 --> 00:04:18.050
For example let's say if three over if this is false we need to have a kind of a back up for a program.

65
00:04:18.060 --> 00:04:18.620
Right.

66
00:04:18.630 --> 00:04:25.010
So if for example let's come back to the example of the user Edwyn right go into the page and website.

67
00:04:25.260 --> 00:04:31.780
So if Edwyn is log then I want you to show in this page if it's not I want you to show him this.

68
00:04:31.790 --> 00:04:39.900
So with that if he's not that's a back up that we are using and the backup is called an else statement

69
00:04:40.640 --> 00:04:41.040
right.

70
00:04:41.040 --> 00:04:47.730
So if this condition for some reason is falls on top and doesn't work out for us right then we need

71
00:04:47.730 --> 00:04:51.250
to have a back we need to have an alternative to our code.

72
00:04:51.540 --> 00:04:51.830
Right.

73
00:04:51.830 --> 00:04:55.310
That's how we control the flow of our programs.

74
00:04:55.470 --> 00:04:58.800
So we are going to echo.

75
00:04:58.890 --> 00:05:02.100
It is not right.

76
00:05:02.580 --> 00:05:07.560
So we come back here and we see that it does execute because this is forced right here.

77
00:05:07.560 --> 00:05:11.970
This is not you know being this condition.

78
00:05:12.150 --> 00:05:17.530
The truth is not being met right now we know that 3 is not bigger than 10.

79
00:05:17.580 --> 00:05:19.860
So this is not going to execute.

80
00:05:20.070 --> 00:05:22.200
So he's going to say OK three is now bigger than 10.

81
00:05:22.200 --> 00:05:23.760
Then what else can we execute.

82
00:05:23.900 --> 00:05:26.460
If this is not true what else can we do.

83
00:05:26.460 --> 00:05:28.980
Well you can do announce right here.

84
00:05:28.980 --> 00:05:37.380
It is not the great thing about this is that we can also use another key word besides this score.

85
00:05:37.380 --> 00:05:45.810
Else if and else if it's just testing another condition there are times when we need to test more than

86
00:05:45.810 --> 00:05:47.280
one condition.

87
00:05:47.310 --> 00:05:49.630
Right now we're just testing one condition here.

88
00:05:49.700 --> 00:05:58.620
What about if I want to test a user Edwyn has a for some reason I clicked on more than three times on

89
00:05:58.620 --> 00:05:59.540
the home page.

90
00:05:59.640 --> 00:06:06.300
I wanted him to go to this page and if he clicked on the blue bar and I wanted him also to go to this

91
00:06:06.300 --> 00:06:12.090
page you see let's test different conditions we test the first conditions here and then we test another

92
00:06:12.090 --> 00:06:16.950
condition right here so we say a four is less than five.

93
00:06:16.950 --> 00:06:22.470
Then I want you to cue this so the else is to test another condition.

94
00:06:22.470 --> 00:06:23.670
Keep that in mind.

95
00:06:23.910 --> 00:06:27.780
We use as if to test another condition.

96
00:06:28.300 --> 00:06:41.290
And we're going to say of course of course four four is less than five right

97
00:06:43.580 --> 00:06:45.170
now.

98
00:06:45.210 --> 00:06:47.750
If this condition is false of course it's going to jump.

99
00:06:47.760 --> 00:06:51.560
This is not going to tick who's going to jump to the next one is going to execute that one.

100
00:06:51.570 --> 00:07:00.670
But if this one is also false the default one else is going to execute.

101
00:07:01.090 --> 00:07:05.880
All right so this is very useful I want you to remember if we're going to practice this late on but

102
00:07:06.210 --> 00:07:12.820
I want you to remember the syntax here because it is very important to control the flow over programs.

103
00:07:12.840 --> 00:07:19.890
We need to use this to make our program smarter and act differently depending on the condition that

104
00:07:20.850 --> 00:07:22.320
it's carrying out.

105
00:07:22.320 --> 00:07:22.650
All right.

106
00:07:22.650 --> 00:07:25.580
So anyway thank you so much for watching this lecture.

107
00:07:25.620 --> 00:07:29.490
Hopefully you were able to learn some valuable information and I'll see you in the next one.

108
00:07:29.490 --> 00:07:29.890
Take care
