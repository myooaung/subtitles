1
00:00:00,510 --> 00:00:01,530
Hey, guys, what's up?

2
00:00:01,560 --> 00:00:06,070
This is a marathon, and I welcome you to another tutorial on discourse on Ruby and in this story.

3
00:00:06,210 --> 00:00:12,690
We are going to be covering two more functions related to Arranger's and Ruby and that are going to

4
00:00:12,690 --> 00:00:14,040
be new and the last function.

5
00:00:14,050 --> 00:00:19,610
So starting on with the very first function we are going to cover in this tutorial is the new function.

6
00:00:19,950 --> 00:00:24,690
So the new is an invalid method in Ruby that returns a new range of numbers.

7
00:00:25,020 --> 00:00:28,620
And if you talk about the syntax of this, it is very simple.

8
00:00:28,620 --> 00:00:34,020
It is range new and object now and here we have to specify two objects.

9
00:00:34,020 --> 00:00:37,590
The first one is going to be the starting from where we want to start on the range.

10
00:00:37,590 --> 00:00:40,420
And the second one is going to be the last where you want to end the range.

11
00:00:40,800 --> 00:00:45,510
So basically this new function helps you to create new range.

12
00:00:45,690 --> 00:00:52,590
And that is also basically you can just call it a new way of initializing and range in Ruby and how

13
00:00:52,590 --> 00:00:53,420
it is going to be done.

14
00:00:53,430 --> 00:00:56,540
We are going to discuss that after some time.

15
00:00:56,940 --> 00:01:02,100
So moving on to the second function explanation, that is the last function now.

16
00:01:02,110 --> 00:01:08,610
The last function is very similar to the first function, but it is something that returns the last

17
00:01:08,610 --> 00:01:09,820
number and arrangement.

18
00:01:09,990 --> 00:01:15,200
So the last is an invalid method in Ruby that returns an array of the last elements.

19
00:01:15,210 --> 00:01:17,580
And here we have an object.

20
00:01:17,940 --> 00:01:21,720
If that object is not mentioned, it returns the last element only.

21
00:01:21,720 --> 00:01:28,020
But if this object over here is given, for example, we specify three, then it is going to return

22
00:01:28,020 --> 00:01:31,410
the last three elements of that certain range.

23
00:01:33,110 --> 00:01:41,840
So if we just move on to our editor, then we will be much more able to explain what is going on in

24
00:01:41,840 --> 00:01:42,360
our health.

25
00:01:42,710 --> 00:01:47,300
So starting on with the first one now, in the previous two years, you have seen that we have created

26
00:01:47,300 --> 00:01:53,400
Rangers' like you have just right and range equal to zero nine, and that created a range for us.

27
00:01:53,420 --> 00:01:59,090
Now there is one more way to create a range, and that is using a function that is called as the new

28
00:01:59,090 --> 00:01:59,470
function.

29
00:01:59,480 --> 00:02:04,970
So you're going to just write and arrange all that, just make it branch one and it is going to equal

30
00:02:04,970 --> 00:02:08,140
to Grainge Dot new.

31
00:02:08,480 --> 00:02:13,190
And in here you have to specify the starting element of the range and the ending element of the range

32
00:02:13,190 --> 00:02:14,450
separated by a comma.

33
00:02:14,480 --> 00:02:18,590
So if you have to write in four and you have to write in a coma and then you have to write an ending

34
00:02:18,590 --> 00:02:25,550
element for this range, and if you just write in votes or arrange one over, he'll run this code.

35
00:02:25,790 --> 00:02:31,490
And as you can see, that you have got a range that is from four 12 that you can see that you have specified

36
00:02:31,490 --> 00:02:32,240
a comma over here.

37
00:02:32,240 --> 00:02:37,940
But since you have created a new range, that's why it has inserted that this dot out for you by itself.

38
00:02:37,940 --> 00:02:40,460
And it has created a range from four to 12 over here.

39
00:02:40,730 --> 00:02:47,180
All you can do is that let's say you want to access you want to check if a certain number exists between

40
00:02:47,180 --> 00:02:47,930
this range or not.

41
00:02:47,930 --> 00:02:53,500
You can just write in range or you can just you to put one over there to see if it is working or not.

42
00:02:53,510 --> 00:02:56,600
So you can write in votes range one dot.

43
00:02:57,660 --> 00:03:03,690
Include and you can just check a number, let's say six, which is a part of this range or underscored,

44
00:03:03,690 --> 00:03:05,340
and you can see that it has returned.

45
00:03:05,940 --> 00:03:08,350
So this has created a new range for you.

46
00:03:08,370 --> 00:03:15,300
So this is basically a new method in Ruby that is going to allow you to create ranges other than the

47
00:03:15,300 --> 00:03:19,920
normal way in which you have been created in breeding ranges still so far.

48
00:03:20,640 --> 00:03:23,660
So moving on to the second function, that is the last function.

49
00:03:24,090 --> 00:03:25,850
So you just remove it from here.

50
00:03:25,860 --> 00:03:27,810
We will create a simple range.

51
00:03:27,820 --> 00:03:30,240
Now that is from zero to nine.

52
00:03:31,640 --> 00:03:36,400
And as I told you, that this basically works the very same way as the first function.

53
00:03:36,440 --> 00:03:38,330
So if you just write in range.

54
00:03:39,580 --> 00:03:48,490
Or just use boats over here, boats range got lost, and if you don't specify any kind of argument,

55
00:03:48,490 --> 00:03:52,900
would it run the school that is going to print you the last element that is nine Iraqis.

56
00:03:53,240 --> 00:03:59,020
But if you specify, let's say four were here, then what it is going to do is that it is going to return

57
00:03:59,020 --> 00:04:02,100
the last four elements that are going to be nine, eight, seven, six.

58
00:04:02,100 --> 00:04:06,550
So if you just run the school, you can see that you have got nine, eight, seven, six starting on

59
00:04:06,550 --> 00:04:07,660
from six till nine.

60
00:04:08,050 --> 00:04:14,590
So that's how you can use the last function as well in the very same fashion as you have used the first

61
00:04:14,590 --> 00:04:15,060
function.

62
00:04:15,550 --> 00:04:17,410
So I guess that's it for this tutorial.

63
00:04:17,420 --> 00:04:19,060
Thank you so much, guys, for watching.

64
00:04:19,060 --> 00:04:21,130
And I'll see you guys in the next trattoria.
