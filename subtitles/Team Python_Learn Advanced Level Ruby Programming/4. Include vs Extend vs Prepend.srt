1
00:00:00,380 --> 00:00:01,340
Hey, guys, what's up?

2
00:00:01,370 --> 00:00:05,480
This is American, and I welcome you to another tutorial on discourse on Ruby and in this story.

3
00:00:05,480 --> 00:00:09,110
And we are going to have a comparison of three key words, which you can use with module's.

4
00:00:09,110 --> 00:00:12,500
The first one is include and we are going to talk about extent.

5
00:00:12,500 --> 00:00:14,810
And then finally, we are going to talk about prepend.

6
00:00:15,140 --> 00:00:16,880
Now, you already have scored one of them.

7
00:00:16,890 --> 00:00:17,890
That is the include.

8
00:00:18,140 --> 00:00:24,110
So basically, Ruby provides a feature to attach a specific behavior or method in the class using these

9
00:00:24,110 --> 00:00:24,920
three key words.

10
00:00:25,100 --> 00:00:31,220
If we include a class with a module, it means we are bringing in the modules method and instanced method.

11
00:00:31,580 --> 00:00:37,220
If we extend a class with a module method, it means we are adding the matters which are added to class

12
00:00:37,220 --> 00:00:43,760
itself and are available at class level three pending the module using the prepend is similar to the

13
00:00:43,760 --> 00:00:44,540
include one.

14
00:00:44,810 --> 00:00:46,760
So let's start on would include.

15
00:00:46,790 --> 00:00:51,800
You are going to have one example and we are going to try all of these three or three key words with

16
00:00:51,800 --> 00:00:52,130
that.

17
00:00:53,890 --> 00:01:01,460
So let's say you have a module that is named as a wish, and in that module you are going to have a

18
00:01:01,480 --> 00:01:07,090
function, hello and in that helo function, what you're going to simply print is that you're going

19
00:01:07,090 --> 00:01:08,120
to write inputs.

20
00:01:08,710 --> 00:01:09,250
Hello.

21
00:01:09,370 --> 00:01:10,360
Simple as that.

22
00:01:10,700 --> 00:01:15,830
And just after that, you can just add this statement over here and this module as well.

23
00:01:16,180 --> 00:01:21,560
And now what you're going to do is that you are going to create a class Aubagio that is going to be

24
00:01:21,560 --> 00:01:24,360
a person because a person is going to watch someone hello.

25
00:01:24,700 --> 00:01:29,180
And right down here, you are going to use the first one that is included.

26
00:01:29,200 --> 00:01:30,880
So you're going to write and include Wesch.

27
00:01:31,090 --> 00:01:35,980
And in this class, you're also going to have one more function that is going to be the readings function.

28
00:01:36,160 --> 00:01:42,040
And in that greetings function, you are going to just have someone with a greeting that is going to

29
00:01:42,040 --> 00:01:46,140
be, for instance, let's say have a nice day.

30
00:01:46,870 --> 00:01:48,070
Simple enough.

31
00:01:48,070 --> 00:01:50,230
Let's just end this and this will help.

32
00:01:51,450 --> 00:01:57,210
So in this example, basically, the wish is included in the clause, if you look at the ancestry change

33
00:01:57,300 --> 00:02:04,020
of this dispersant laws, we can simply see that the module is present between the class and its ancestors

34
00:02:04,140 --> 00:02:07,330
so we can call methods defined in the class instances.

35
00:02:07,590 --> 00:02:14,010
So what you will do is that you will create an object and using that object, you're going to just write

36
00:02:14,010 --> 00:02:14,460
in person.

37
00:02:14,720 --> 00:02:16,170
You are now using this object.

38
00:02:16,180 --> 00:02:17,880
You are going to write an.

39
00:02:19,560 --> 00:02:20,740
Hello, Oakhill.

40
00:02:21,120 --> 00:02:26,130
So as you have covered only about include, you know that this function is basically an instance of

41
00:02:26,130 --> 00:02:26,960
this class.

42
00:02:27,270 --> 00:02:31,260
So if you just run this code, it is going to print on Hello, Writable Hill.

43
00:02:32,430 --> 00:02:38,310
Now, if you talk about extend that in contrast to the include, including a module using extend does

44
00:02:38,310 --> 00:02:45,660
not in insert the module in the ancestral chain due to which we cannot call the module method from declasse

45
00:02:45,660 --> 00:02:46,380
instances.

46
00:02:46,380 --> 00:02:50,910
Instead, Ruby inserts the module in the Singleton class of the person.

47
00:02:51,060 --> 00:02:58,230
The Singleton class is a class where the matter only for the specific class are defined, so the methods

48
00:02:58,230 --> 00:03:04,250
defined in the class are not going to get accessible to any other class, for instance.

49
00:03:04,500 --> 00:03:10,350
So in place of this, we would just write in, let's say, extend, and as a total unit now, it is

50
00:03:10,350 --> 00:03:14,060
not going to be a part of the ancestral change, which is the function.

51
00:03:14,070 --> 00:03:14,460
Hello.

52
00:03:14,760 --> 00:03:20,970
So now if you just have this sort of a hill and if you just, let's say, try to run it, you can see

53
00:03:20,970 --> 00:03:27,700
that you have got an error that says undefined method call for this and that is named as no method error.

54
00:03:27,720 --> 00:03:33,600
And the reason behind this error is the very same, as I told you, because this extent is not going

55
00:03:33,600 --> 00:03:34,080
to.

56
00:03:35,050 --> 00:03:41,260
Insert the module in the incestuous chain due to which one we call it the module method on the glass

57
00:03:41,260 --> 00:03:44,670
instances, they are going to just generate an error message.

58
00:03:45,100 --> 00:03:50,230
Then comes the third keyword we are going to have in this tutorial as the prepend keyword.

59
00:03:50,500 --> 00:03:54,520
Now, as I told you, that it is also similar to the include, except that instead of inserting the

60
00:03:54,520 --> 00:03:59,440
module between the class and its superclass in the chain, it will insert the module to the bottom,

61
00:03:59,440 --> 00:04:03,010
which means before its class itself.

62
00:04:03,130 --> 00:04:08,440
When we call a method, for instance, it will look into the module method even before looking to its

63
00:04:08,440 --> 00:04:08,870
class.

64
00:04:09,190 --> 00:04:13,570
So if you have this very same example and you just write and.

65
00:04:14,650 --> 00:04:15,760
Prepend of a hill.

66
00:04:17,540 --> 00:04:22,280
And you have all this stuff over here now, if you just run this code, you're going to see that you

67
00:04:22,280 --> 00:04:23,640
have got this Hello Hill.

68
00:04:23,900 --> 00:04:26,680
This is when the object calls the hello method.

69
00:04:26,690 --> 00:04:31,550
It initially searched you wish in the interest to change and it is going to print hello for you right

70
00:04:31,550 --> 00:04:31,950
over here.

71
00:04:32,300 --> 00:04:36,080
So this is what is basically the difference between the three keywords.

72
00:04:36,080 --> 00:04:42,380
The prepend and include are almost the same, whereas is the extend one is basically something that

73
00:04:42,380 --> 00:04:46,240
deals with the Singleton class and does not deal with the ancestral chain.

74
00:04:46,520 --> 00:04:51,800
So I hope you have understood all of these three and I hope you've also understood the difference between

75
00:04:51,800 --> 00:04:52,120
them.

76
00:04:52,610 --> 00:04:54,370
So I guess that's it with this tutorial.

77
00:04:54,380 --> 00:04:57,180
Thank you so much for watching and I'll see you guys later.
