1
00:00:00,150 --> 00:00:01,110
Hey, guys, what's up?

2
00:00:01,140 --> 00:00:04,410
This was a marathon, and I welcome you to another detail on this course on Ruby.

3
00:00:04,410 --> 00:00:09,300
And in this tutorial, we are going to be covering every function, the reject function, the select

4
00:00:09,300 --> 00:00:13,890
function, and we are also going to see the land function.

5
00:00:14,190 --> 00:00:16,810
So we will start on with the reject function.

6
00:00:17,130 --> 00:00:23,700
Now, it is a hash class matter which returns a new hash, which consists of entries for which the block

7
00:00:23,700 --> 00:00:24,960
return false.

8
00:00:25,320 --> 00:00:29,940
So if you talk about the syntax of this, it is hash dot reject.

9
00:00:29,940 --> 00:00:33,490
You have to specify the key value pair and you didn't specify a condition.

10
00:00:33,510 --> 00:00:40,170
Now for the key value pairs on which this condition is met, those values are going to get rejected

11
00:00:40,170 --> 00:00:41,640
and go out of the scope.

12
00:00:41,640 --> 00:00:47,820
And the remaining values which are not going to meet these conditions are going to return as an output

13
00:00:48,030 --> 00:00:49,850
to this reject function.

14
00:00:50,310 --> 00:00:51,600
So we will see examples.

15
00:00:51,600 --> 00:00:56,370
And then you are going to understand that which values are going to get rejected and which are going

16
00:00:56,370 --> 00:00:56,990
to be returned.

17
00:00:56,990 --> 00:01:01,110
The second function we are going to cover in this tutorial is the land function.

18
00:01:01,470 --> 00:01:06,450
LENTE is a hash class method which gives the number of key value bearers in the hash.

19
00:01:06,480 --> 00:01:10,260
So simply it is going to return the land or whatever hash you specify.

20
00:01:10,440 --> 00:01:12,140
And it has a very simple syntax.

21
00:01:12,150 --> 00:01:13,110
All you have to write and hash.

22
00:01:13,110 --> 00:01:19,050
Stotland no arguments are needed over here and it is going to return to you with the length of whatever

23
00:01:19,050 --> 00:01:20,040
hash you specify.

24
00:01:20,190 --> 00:01:26,370
The third function we are going to cover in this tutorial is the select function select as a hash class

25
00:01:26,370 --> 00:01:31,560
method, which finds the area from the hash based on a block condition.

26
00:01:32,250 --> 00:01:37,710
And if you talk about the syntax of this, it is hash tag, select key value pair and the condition.

27
00:01:37,950 --> 00:01:42,270
And for whatever key value Paris, this condition is going to be true.

28
00:01:42,390 --> 00:01:46,410
It is going to return those values and the remaining values are going to get discarded.

29
00:01:46,650 --> 00:01:53,520
Not to select and reject function are totally opposite each other in the reject function when the condition

30
00:01:53,520 --> 00:02:00,000
what our key value bearers meet, the condition, we specify those values are going to get rejected

31
00:02:00,000 --> 00:02:02,970
and the remaining are going to be returned to us as an output.

32
00:02:03,240 --> 00:02:08,340
Whereas in the select function on whatever key value pair, the condition is going to be true.

33
00:02:08,340 --> 00:02:12,270
Those values are going to be redone and the remaining values are going to get rejected.

34
00:02:12,280 --> 00:02:19,680
So for the reject function, whatever is going to be returned as an output is going to be rejected in

35
00:02:19,680 --> 00:02:25,020
case of select, whereas in the select function, whatever is going to be printed out as an output is

36
00:02:25,020 --> 00:02:29,760
going to be the part which is going to get rejected and the reject function.

37
00:02:29,770 --> 00:02:33,210
So don't need to get confused in simple words.

38
00:02:33,420 --> 00:02:36,390
These two functions are opposite of each other.

39
00:02:36,750 --> 00:02:42,660
Whatever is the output of the select function as the rejected part of the reject function and whatever

40
00:02:42,660 --> 00:02:46,280
is the output of the reject function is the output of the select function.

41
00:02:46,680 --> 00:02:51,870
So let's move on to some examples and then you will know more about this.

42
00:02:52,080 --> 00:02:54,120
So let's move on to Adam.

43
00:02:55,570 --> 00:03:02,050
So we'll start on with the simplest of all, we will first cover the land function, so for the land

44
00:03:02,050 --> 00:03:04,900
function, well, you can simply write and you can write inputs.

45
00:03:06,750 --> 00:03:12,500
Length of it is, and you can use interpolation and that you can just ride it idot.

46
00:03:13,630 --> 00:03:16,850
Lent her on it and it is going to return you with the land.

47
00:03:17,090 --> 00:03:23,620
So over here, the land of is true, which means that it contained two values or you can say two key

48
00:03:23,620 --> 00:03:24,440
value pairs.

49
00:03:24,700 --> 00:03:30,390
So for me, it is going to be three and four C. It is also going to be three.

50
00:03:30,400 --> 00:03:34,660
So that is what is how you can get the length of a hash.

51
00:03:34,660 --> 00:03:39,670
And Ruby now moving towards the main part of this tutorial, that is the reject and the select function

52
00:03:39,700 --> 00:03:43,210
starting on with the first one, we will cover the reject function.

53
00:03:43,210 --> 00:03:50,320
And as I told you that you have to specify a condition on a key value pair and on whatever condition

54
00:03:50,320 --> 00:03:54,850
the key value pair is true, those values are going to get rejected and the remaining values are going

55
00:03:54,850 --> 00:03:56,120
to be returned as an output.

56
00:03:56,470 --> 00:04:01,810
So first, let's just make all of these at a simple syntax.

57
00:04:01,810 --> 00:04:08,200
Or you may say a single syntax is remove this right entry into the will here.

58
00:04:09,590 --> 00:04:15,810
And let's just remove this as well from hell, let's just specify the value for this as well.

59
00:04:15,830 --> 00:04:16,740
That is 200.

60
00:04:17,030 --> 00:04:17,420
All right.

61
00:04:17,430 --> 00:04:19,500
So now everything seems good.

62
00:04:19,730 --> 00:04:23,560
So now let's use the reject function on these three hashes.

63
00:04:23,900 --> 00:04:26,810
So what we will write is that we will write in put.

64
00:04:31,880 --> 00:04:32,990
Rejected.

65
00:04:34,480 --> 00:04:36,580
Or you can just ride in values.

66
00:04:39,560 --> 00:04:47,240
Remaining are so values remaining after the rejection are basically going to be whatever is going to

67
00:04:47,240 --> 00:04:53,870
be the output from this reject function, and that is what is basically going to have a conditional

68
00:04:53,870 --> 00:04:54,210
hell.

69
00:04:54,530 --> 00:04:57,980
And in that condition, you are going to have a key value bill.

70
00:04:59,270 --> 00:05:00,510
To try and key.

71
00:05:01,470 --> 00:05:07,470
And value add in this key value pair what you are going to read and you are going to specify a condition

72
00:05:07,470 --> 00:05:11,880
now that, for example, the first condition is that if you want to specify a condition on this key

73
00:05:12,120 --> 00:05:21,180
so let's say I just read it key is less than, let's say B, so if key is less than you have to specify

74
00:05:21,180 --> 00:05:22,100
a call as well.

75
00:05:23,810 --> 00:05:28,040
All is just get it a bit so that you can see the complete nine.

76
00:05:28,490 --> 00:05:29,540
All right, good enough.

77
00:05:30,080 --> 00:05:33,160
So let's just run it now.

78
00:05:34,460 --> 00:05:40,820
And you can see that it has returned the value be done, that now we have applied this condition on

79
00:05:40,820 --> 00:05:44,420
this AOL, which has two values, a hundred and be two hundred.

80
00:05:44,750 --> 00:05:52,310
So we have ritenour here that you have to reject those values, all those values which have a key that

81
00:05:52,310 --> 00:06:00,360
is less than be so in this case, for the values in this hash, Huskie is less than B is only.

82
00:06:00,530 --> 00:06:03,710
So this is going to get rejected, not the remaining value.

83
00:06:03,710 --> 00:06:06,610
Is this value with the key B?

84
00:06:06,620 --> 00:06:10,870
So that is what is remaining and that is what is going to be returned as an output to us.

85
00:06:11,330 --> 00:06:18,200
Now, for example, if you just try it for this bill here and if you use the very same condition, but

86
00:06:18,200 --> 00:06:24,680
you just wait and see or here now for the key to be less than C, the two values that are remaining

87
00:06:24,680 --> 00:06:31,120
are A and B. So if you just run this, the output is going to be only C, and if you just specify B,

88
00:06:31,910 --> 00:06:35,990
run, this output is going to be B and C as well.

89
00:06:35,990 --> 00:06:41,950
Because for the key to be less than be the only key value pair, is this a hundred.

90
00:06:42,050 --> 00:06:43,760
So that is going to get rejected.

91
00:06:43,760 --> 00:06:47,240
The remaining values are B and C, B 200, C three hundred.

92
00:06:47,240 --> 00:06:50,100
And that is what is going to be printed on your output screen.

93
00:06:50,720 --> 00:06:55,900
Now you can also specify a condition on the value as well.

94
00:06:56,540 --> 00:06:59,870
So let's just add a line space over here.

95
00:07:01,390 --> 00:07:03,580
And in here, we are going to ride in boats.

96
00:07:04,690 --> 00:07:09,970
And what we are going to right away here is that we are going right and values.

97
00:07:12,420 --> 00:07:17,910
Remaining are and coalition, and we are going to use the very same veto to reject.

98
00:07:20,590 --> 00:07:26,620
We are going to have a key value built here as well, a key value, but this time the condition is going

99
00:07:26,620 --> 00:07:29,080
to be specified on this value.

100
00:07:29,350 --> 00:07:32,150
So we are going to write and value is less than 200.

101
00:07:32,620 --> 00:07:36,400
So is it a bird or underscored?

102
00:07:36,880 --> 00:07:40,090
And you can see for whatever the values are, less than two hundred.

103
00:07:40,120 --> 00:07:47,310
They are the two hundred and see three because we are using here and the values that are less than 200

104
00:07:47,770 --> 00:07:50,380
over here is this basically this hundred overhead.

105
00:07:50,380 --> 00:07:51,040
That is the key.

106
00:07:51,580 --> 00:07:54,850
So this value here is going to get rejected due to this condition.

107
00:07:54,860 --> 00:08:00,040
We have specified where the remaining values over here are be two hundred and thirty three hundred and

108
00:08:00,040 --> 00:08:03,070
that is what is going to be the output right over here.

109
00:08:03,400 --> 00:08:08,950
So not only you can use the key as the condition, but you can also specify a condition on the value

110
00:08:08,950 --> 00:08:14,080
and all those values that satisfy the condition.

111
00:08:14,380 --> 00:08:18,580
Or you can say whatever key value pair that satisfy the condition.

112
00:08:18,580 --> 00:08:23,980
We have specified those values are going to get rejected and the remaining values are going to be printed

113
00:08:23,980 --> 00:08:26,020
right over here on your Adam Bruckner.

114
00:08:26,940 --> 00:08:33,600
Now, moving to the second function we are going to cover is the basically the third function we are

115
00:08:33,600 --> 00:08:35,910
going to cover after the London project.

116
00:08:35,940 --> 00:08:37,440
We are going to cover the select function.

117
00:08:37,460 --> 00:08:40,830
So here we are going to add a line so that you can later see the difference as well.

118
00:08:41,490 --> 00:08:42,720
Output's.

119
00:08:43,940 --> 00:08:44,810
With the.

120
00:08:45,940 --> 00:08:48,160
Reject function.

121
00:08:48,790 --> 00:08:54,070
All right, so these are the outputs with the reject function, just remove it from here.

122
00:08:56,110 --> 00:08:58,270
And just at a space of a hill.

123
00:09:00,560 --> 00:09:03,290
And we are going to ride in boats.

124
00:09:05,240 --> 00:09:10,490
Outputs with the select function.

125
00:09:10,940 --> 00:09:17,690
All right, so what we are going to do is that we are going to just copy this from here pasted right

126
00:09:17,690 --> 00:09:18,130
over here.

127
00:09:18,140 --> 00:09:23,540
And what we are going to do is that we are going to use select over here.

128
00:09:24,900 --> 00:09:27,280
Selek over here as well.

129
00:09:28,620 --> 00:09:34,260
The remaining is going to be the very same, your crime bureau Talagi value Biraki is less than valued.

130
00:09:34,270 --> 00:09:36,000
Less than 200 runit.

131
00:09:36,600 --> 00:09:41,690
And as you can see over here, that you have got the output with the reject function and output with

132
00:09:41,700 --> 00:09:42,620
a select function as well.

133
00:09:42,630 --> 00:09:48,910
And if you just noticed right over here on the bottom there is that the output are totally opposite.

134
00:09:48,930 --> 00:09:55,530
Now, as you can see that the value that was rejected over here in this fusspot, was this a call and

135
00:09:55,530 --> 00:10:01,530
Hundert, because this was the value that was less than B, so the reject function rejected this and

136
00:10:01,530 --> 00:10:02,730
returned the remaining value.

137
00:10:02,730 --> 00:10:03,890
That was B, two hundred.

138
00:10:04,200 --> 00:10:08,740
So sorry, we are considering this A, B and C are going to get redundant.

139
00:10:08,820 --> 00:10:10,760
A hundred is going to get rejected.

140
00:10:11,040 --> 00:10:16,050
Now in the select function, whatever was rejected out here, that was a hundert.

141
00:10:16,260 --> 00:10:19,410
That is what is basically the output of this function.

142
00:10:19,410 --> 00:10:24,830
And what was the output of this reject function over here is basically what is rejected right over here,

143
00:10:24,840 --> 00:10:26,790
as you can see for the second output.

144
00:10:26,820 --> 00:10:32,010
You can see that you have got the two hundred and eighty three hundred because we were comparing comparing

145
00:10:32,010 --> 00:10:36,120
there by value and B, 200 and 300 were redone.

146
00:10:36,120 --> 00:10:40,140
And since the value of it that was hundred was less than 200.

147
00:10:40,140 --> 00:10:45,780
So that was what was the value that was rejected because it suggests it satisfied the condition which

148
00:10:45,780 --> 00:10:47,150
we have specified right over here.

149
00:10:47,460 --> 00:10:48,510
But here.

150
00:10:49,880 --> 00:10:56,690
Since the only statement that satisfy this condition is this a hundred, so only that statement is what

151
00:10:56,690 --> 00:11:00,060
is going to get printed and the remaining is going to get rejected.

152
00:11:00,080 --> 00:11:05,690
So what is the output over here is what is basically rejected out here and what is the output over here

153
00:11:05,900 --> 00:11:07,990
is basically what is rejected right over here.

154
00:11:08,000 --> 00:11:13,760
So that's why I told you that these two functions are what are totally opposite to each other.

155
00:11:13,760 --> 00:11:18,980
The output of one is the rejection part of the other and the rejection part of one is the output part

156
00:11:18,980 --> 00:11:19,490
of the other.

157
00:11:20,030 --> 00:11:24,140
So I hope you have understood how to use these functions and what was basically the difference between

158
00:11:24,140 --> 00:11:25,670
the reject and the select function.

159
00:11:25,920 --> 00:11:27,760
So I guess that's it for this tutorial as well.

160
00:11:27,770 --> 00:11:29,180
Thank you so much, guys, for watching.

161
00:11:29,180 --> 00:11:31,430
And I'll see you guys in the next tutorial.
