WEBVTT
1
00:00:00.240 --> 00:00:01.230
Hey, guys, what's up?

2
00:00:01.260 --> 00:00:04.650
This is a marathon, and I welcome you to another tutorial on this course on Drooly.

3
00:00:04.650 --> 00:00:07.770
And in this story we are going to be covering again to function.

4
00:00:07.770 --> 00:00:11.610
The first one is going to be to inspect function, and the second function is going to be the function

5
00:00:11.610 --> 00:00:14.940
in which a hash is going to be converted into a string.

6
00:00:15.120 --> 00:00:18.270
So starting on with the first function, that is the inspect function.

7
00:00:18.540 --> 00:00:23.370
Now inspect is a hash glass matter, which gives the string representation of a hash.

8
00:00:23.580 --> 00:00:28.220
And if you talk about the syntax of this inspect function, it is very simple.

9
00:00:28.230 --> 00:00:32.130
You have to just write in the hash and you have to write and inspect.

10
00:00:32.130 --> 00:00:34.090
It has no arguments in it.

11
00:00:34.500 --> 00:00:39.900
The second function we are going to cover is the two string function and that is what is going to convert

12
00:00:39.900 --> 00:00:41.090
a hash into a string.

13
00:00:41.100 --> 00:00:43.140
And the syntax for that is the very same.

14
00:00:43.140 --> 00:00:47.250
You have to just write and hash and you have to write and to underscore as and that is going to convert

15
00:00:47.250 --> 00:00:48.710
a hash into a string.

16
00:00:49.050 --> 00:00:54.240
So let's just see both of these functions in our editor, Adam.

17
00:00:54.600 --> 00:00:57.230
And we already have got three hashes over here.

18
00:00:57.240 --> 00:01:01.910
The first function we are going to do on these is going to be the inspect function.

19
00:01:01.920 --> 00:01:03.570
So we are going to write in votes.

20
00:01:05.870 --> 00:01:07.190
Hash a.

21
00:01:10.060 --> 00:01:14.840
Inspect farm, and you're going to use interpellation over here as well, just right in that, you know,

22
00:01:14.930 --> 00:01:19.840
inspect and as you know that it has to have no arguments, just run it.

23
00:01:20.320 --> 00:01:27.610
And you can see that it has inspected that and it has returned the values, which are a part of this

24
00:01:27.610 --> 00:01:28.480
hash right over here.

25
00:01:28.480 --> 00:01:35.170
That is a so you can just write in bio here on this go and it is going to give you the elements of this

26
00:01:35.170 --> 00:01:38.870
hash bee and you can just print out the elements of Hassey as well.

27
00:01:39.250 --> 00:01:45.290
So this is basically inspecting it and returning the string representation of this hash to you.

28
00:01:45.820 --> 00:01:50.680
Now, the second function we are going to cover is also the two string function, and that also gives

29
00:01:50.680 --> 00:01:52.820
you the string representation of a hash.

30
00:01:53.290 --> 00:01:56.380
So for that, you have to also just write in.

31
00:01:57.490 --> 00:02:01.510
To underscore, yes, and you can now just write and hash a.

32
00:02:02.630 --> 00:02:03.920
String Formalwear Hill.

33
00:02:05.050 --> 00:02:10.870
Run this, and now this is basically a strange form of this hash, which means that this hash has now

34
00:02:10.870 --> 00:02:13.360
been converted into a spring successfully.

35
00:02:13.390 --> 00:02:16.990
Similarly, you can just write an arrow to us and be brought to us.

36
00:02:16.990 --> 00:02:21.390
And similarly, these were the very simple example.

37
00:02:21.730 --> 00:02:28.350
And both of these functions were basically used to give a string representation of a hash.

38
00:02:28.690 --> 00:02:33.470
So I hope you now know how to represent a hash as a string.

39
00:02:33.490 --> 00:02:34.910
So that's it with this tutorial.

40
00:02:35.710 --> 00:02:37.000
Thank you so much for watching.

41
00:02:37.000 --> 00:02:38.270
And I'll see you guys in the next.
