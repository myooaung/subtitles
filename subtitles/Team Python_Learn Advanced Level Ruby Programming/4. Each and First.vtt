WEBVTT
1
00:00:00.240 --> 00:00:01.260
Hey, guys, what's up?

2
00:00:01.290 --> 00:00:04.980
This is a marathon, and I welcome you to another story on this course on Ruby.

3
00:00:04.990 --> 00:00:10.140
And in this story, we are going to be covering two functions related to Rangers' that are the each

4
00:00:10.170 --> 00:00:11.310
and the first function.

5
00:00:11.720 --> 00:00:18.150
So starting on with each, which is a Beldin method in Ruby that iterates over every element in the

6
00:00:18.150 --> 00:00:18.710
range.

7
00:00:19.080 --> 00:00:23.980
Then if you talk about the syntax for this HQ, it is going to be very simple.

8
00:00:24.000 --> 00:00:29.230
It is going to be something like range each and then you can write in the object.

9
00:00:30.090 --> 00:00:36.750
Now the function basically is going to accept a block which specifies the ways in which the elements

10
00:00:36.750 --> 00:00:37.560
are going to get.

11
00:00:37.560 --> 00:00:41.100
I traded and that is what the object is going to be.

12
00:00:41.310 --> 00:00:47.010
And if you talk about the return value of this function, then it is going to return every element in

13
00:00:47.010 --> 00:00:49.400
that range you have specified.

14
00:00:49.830 --> 00:00:54.980
So moving on to the second function we are going to be covering in this tutorial is the first function

15
00:00:55.290 --> 00:01:01.680
and the first function is an inbuilt method in Ruby, which returns an array of the first X elements.

16
00:01:01.920 --> 00:01:06.110
Now, if X is not mentioned, it returns the first elements only.

17
00:01:06.450 --> 00:01:11.700
So if you talk about the syntax for that, it is going to arrange one dot first, then it is going to

18
00:01:11.700 --> 00:01:12.550
have an object.

19
00:01:12.960 --> 00:01:16.620
Now this object is basically not mentioned.

20
00:01:16.620 --> 00:01:17.910
It is going to.

21
00:01:18.950 --> 00:01:26.750
Return an array of the first whatever you have specified, the object as so this function basically,

22
00:01:26.750 --> 00:01:31.550
except this object, which is the number of elements from the beginning, if you don't specify this

23
00:01:31.550 --> 00:01:36.090
object, then it is going to return the elements from the very first element.

24
00:01:36.620 --> 00:01:44.200
So if you just move on to the examples board, then you are going to understand these functions well.

25
00:01:44.210 --> 00:01:45.770
So move on to Atom.

26
00:01:46.670 --> 00:01:50.600
So to start on with each function, we will have our range.

27
00:01:52.290 --> 00:01:58.500
That is going to equal to, let's say, numbers from zero to nine and what we are going to do is that

28
00:01:58.500 --> 00:02:01.990
we are going to print the elements using the each function now.

29
00:02:02.010 --> 00:02:06.960
So we are going to write in puts range dot each.

30
00:02:07.770 --> 00:02:13.740
And in the argument, what we are going to specify is that we are going to specify certain elements

31
00:02:14.100 --> 00:02:15.830
and what are those going to be?

32
00:02:15.840 --> 00:02:18.930
We are going to write in variable.

33
00:02:20.530 --> 00:02:26.080
That is going to be, let's say, X, you can have a variable of your own choice, then what do you

34
00:02:26.080 --> 00:02:32.410
have to do is that you have to write in print X, and after that you have to specify something that

35
00:02:32.410 --> 00:02:34.900
is going to be inserted in between all the elements.

36
00:02:35.260 --> 00:02:41.340
So what this function is going to do is that it is going to grab the first element that is zero.

37
00:02:41.470 --> 00:02:46.540
It is going to store it in this variable X, it is going to print that variable.

38
00:02:46.690 --> 00:02:51.370
And after printing the first element and going on to the second element, what it's going to do is that

39
00:02:51.370 --> 00:02:55.960
it is going to print a comma first and then it is going to move on to the second element of this strange

40
00:02:55.960 --> 00:02:56.710
that is one.

41
00:02:57.100 --> 00:02:59.080
Then this is going to store one.

42
00:02:59.080 --> 00:03:03.310
It is going to print one, it is going to print a comma, go two and so on.

43
00:03:03.310 --> 00:03:11.230
Until nine of the nine is printed, this each function is going to exit and it is going to execute and

44
00:03:11.230 --> 00:03:12.760
the line of code after that.

45
00:03:12.760 --> 00:03:14.960
But in this case, we don't have any kind of code.

46
00:03:14.980 --> 00:03:18.830
So after the statement is going to get it, it is going to just exist.

47
00:03:19.360 --> 00:03:22.760
So, yes, I guess we have made one mistake as well.

48
00:03:22.780 --> 00:03:29.080
This has to be these brackets that are often called, I guess, the flower brackets and something called

49
00:03:29.080 --> 00:03:30.590
the curly brackets as well, I guess.

50
00:03:30.940 --> 00:03:34.990
So these are the brackets you have to specify, not these round brackets over here.

51
00:03:35.440 --> 00:03:37.150
So let's just run this code.

52
00:03:37.150 --> 00:03:42.040
And as you can see, that you have got zero one, two, three, four, five, six, seven, eight,

53
00:03:42.040 --> 00:03:42.480
nine.

54
00:03:42.670 --> 00:03:47.430
And after that, you already you also have printed your Rangeela here.

55
00:03:47.440 --> 00:03:54.730
So this is basically the range for which you have got this output right over here from zero to nine.

56
00:03:55.240 --> 00:04:01.120
So that's how basically you can have a range printed out and you can also specify the range for which

57
00:04:01.120 --> 00:04:03.860
a certain output has been generated.

58
00:04:04.210 --> 00:04:11.370
Now, you can also have certain range that is starting from, let's say, five till nine.

59
00:04:11.380 --> 00:04:14.140
And if you just run this code, you can have this output.

60
00:04:14.140 --> 00:04:19.120
And as you can see, that you have also got the range as well for which five, six, seven, eight,

61
00:04:19.120 --> 00:04:22.160
nine has been generated as an output.

62
00:04:22.720 --> 00:04:28.390
So now moving on to the second part of this story that deals with the first function.

63
00:04:28.840 --> 00:04:37.750
So as I told you, that it is going to accept parameter the that in which the function basically, except

64
00:04:37.750 --> 00:04:42.830
that parameter and that is basically which is the number of elements from the beginning.

65
00:04:43.240 --> 00:04:49.320
So, for example, we have this very same range over here that is from let's just change it to zero.

66
00:04:49.660 --> 00:04:52.490
So let's say we have this range from zero to nine.

67
00:04:52.870 --> 00:04:57.640
So with this range, what we are going to do is that we are going to write inputs.

68
00:04:59.190 --> 00:05:01.220
Range start first.

69
00:05:02.040 --> 00:05:07.320
All right, so they told you that if you don't specify any kind of argument, then it is going to return

70
00:05:07.320 --> 00:05:08.540
the first element only.

71
00:05:08.850 --> 00:05:13.410
So if you just run this code, you can see that it has printed out zero, which is the first element

72
00:05:13.410 --> 00:05:13.950
in our case.

73
00:05:13.950 --> 00:05:18.120
If you just write and five over here or underscored, you can see that we have got five over here,

74
00:05:18.120 --> 00:05:20.200
which is the first element in both cases.

75
00:05:20.580 --> 00:05:28.320
Now, if we specify something like let's say this is from zero to nine and we let's just specify for

76
00:05:28.320 --> 00:05:34.800
over here, run this good, then it is going to return all the elements before this element, which

77
00:05:34.800 --> 00:05:36.600
we have entered right here.

78
00:05:36.630 --> 00:05:41.010
So since we have entered four and before that, we have got three elements.

79
00:05:41.040 --> 00:05:43.680
So it is going to return zero, one, two, three.

80
00:05:44.280 --> 00:05:47.870
So that's how you can have the first function used.

81
00:05:48.570 --> 00:05:53.970
You can just return simply the first element by specifying no argument here, or you can just specify

82
00:05:53.970 --> 00:06:00.360
the number of elements before a certain element in our own starting on from the very first number in

83
00:06:00.360 --> 00:06:01.020
that range.

84
00:06:01.410 --> 00:06:03.730
So that's how both these functions can be used.

85
00:06:03.930 --> 00:06:05.580
So I guess that's it for this tutorial.

86
00:06:05.610 --> 00:06:07.290
Thank you so much, guys, for watching.

87
00:06:07.290 --> 00:06:09.570
And I'll see you guys in the next story as well.

88
00:06:09.900 --> 00:06:12.690
Will covering two more functions on Rangers'.
