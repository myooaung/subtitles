WEBVTT
1
00:00:00.360 --> 00:00:01.350
Hey, guys, what's up?

2
00:00:01.380 --> 00:00:05.090
This is a marathon, and I welcome you to another tutorial on this course on Ruby.

3
00:00:05.400 --> 00:00:10.820
And in this video, we are going to be covering the introduction to ranges, as you already know, about

4
00:00:10.830 --> 00:00:12.120
Rangers, how to define them.

5
00:00:12.120 --> 00:00:19.830
So I won't take any time in this story, but I want to just show you some of the examples for how you

6
00:00:19.830 --> 00:00:25.230
can create Rangers better, because so far what we have done is that we have only created Rangers with

7
00:00:25.230 --> 00:00:25.720
numbers.

8
00:00:26.160 --> 00:00:31.620
So in this story, I'm going to tell you that how many viewers basically you are going to have create

9
00:00:31.620 --> 00:00:36.150
your Rangers now, for example, you want to create a range from zero to nine, then you can just write

10
00:00:36.150 --> 00:00:39.030
in zero, dot, dot nine, and you already know what this is.

11
00:00:39.050 --> 00:00:42.420
You will run it and you can see that you have got a range zero to nine.

12
00:00:42.630 --> 00:00:47.070
Now, you must be thinking that why it hasn't printed numbers from zero one, two, three, four, five,

13
00:00:47.070 --> 00:00:47.880
six, seven, eight, nine.

14
00:00:48.150 --> 00:00:54.940
Because it don't simply this is a range and it now contains number from zero to nine in between it.

15
00:00:55.260 --> 00:01:01.080
So, for example, you want to create a range from A to Z, then you can also created you can just write

16
00:01:01.160 --> 00:01:05.910
in a single quotation marks, dot, dot, and then you can just write in that run it.

17
00:01:05.910 --> 00:01:09.390
And you have this range that is from a dataset.

18
00:01:10.950 --> 00:01:17.220
Then you can also create your customized Rangers' that is basically going to contain the subset of all

19
00:01:17.220 --> 00:01:18.430
the number in between it.

20
00:01:18.450 --> 00:01:26.630
For example, you want to create a range that is from, let's say, a B and you want to create it still

21
00:01:27.280 --> 00:01:28.490
a E.

22
00:01:28.950 --> 00:01:35.520
So now this range is basically going to contain certain subsets that are going to be a part of it.

23
00:01:35.820 --> 00:01:44.790
So this range over here that is from a B to it is basically going to contain letters that are the subsets

24
00:01:44.790 --> 00:01:47.770
of whatever lies in between these numbers.

25
00:01:47.780 --> 00:01:51.650
So it is going to have a B, the number from which the range has started.

26
00:01:51.960 --> 00:02:00.840
Then it is also going to contain a C, then it will have the third as a D and then it will have the

27
00:02:00.870 --> 00:02:03.030
end range number that is a E.

28
00:02:03.040 --> 00:02:11.130
So these are basically the number of subsets that can be formed in between these two ranges we have

29
00:02:11.130 --> 00:02:15.880
specified and these maximum and this minimum range as well.

30
00:02:16.290 --> 00:02:20.250
So if you just run this, it is going to also create a range for you, as you can see.

31
00:02:20.280 --> 00:02:25.110
So this is basically customizer and you can have a range of your own type as well.

32
00:02:25.140 --> 00:02:27.430
This is a billion range that is from A to Z.

33
00:02:27.450 --> 00:02:29.130
This is a range from zero to nine.

34
00:02:29.130 --> 00:02:30.300
And you can have any range.

35
00:02:30.300 --> 00:02:34.410
For example, you want a range for capital letters so you can just write in.

36
00:02:34.800 --> 00:02:38.470
And they said here on this, there's also a range, as you can see.

37
00:02:38.790 --> 00:02:42.000
So this is how basically you can have ranges.

38
00:02:42.980 --> 00:02:49.100
And Rangers are basically a very flexible data type in Ruby, and you can call on methods on a range

39
00:02:49.100 --> 00:02:50.060
once it is defined.

40
00:02:50.090 --> 00:02:55.920
So what kind of methods are going to be defined on ranges that we will start on from the next tutorial?

41
00:02:56.240 --> 00:02:58.020
So for this tutorial, that's it.

42
00:02:58.040 --> 00:02:59.660
Thank you so much, guys, for watching.

43
00:02:59.660 --> 00:03:02.000
And I'll see you guys in the next real.
