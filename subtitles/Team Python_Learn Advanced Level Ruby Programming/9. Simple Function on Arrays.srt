1
00:00:00,360 --> 00:00:01,320
Hey, guys, what's up?

2
00:00:01,350 --> 00:00:06,420
This is a marathon, and I welcome you to another long discourse on drugs and in this story that we

3
00:00:06,420 --> 00:00:11,160
are going to cover six to seven functions that can be applied on areas.

4
00:00:11,160 --> 00:00:13,560
And those are going to be very simple function.

5
00:00:13,570 --> 00:00:18,450
We are going to just see how to find the land of the function, how to pop an area, how to push elements

6
00:00:18,450 --> 00:00:22,230
into an area, how to shift unshaved, how to lead, how to can get it right.

7
00:00:22,500 --> 00:00:24,300
So it is going to be an easy tutorial.

8
00:00:24,540 --> 00:00:28,570
The complex steps have already been covered in the previous tutorial.

9
00:00:28,860 --> 00:00:32,400
So starting on from the land function.

10
00:00:32,410 --> 00:00:35,380
So for now, first we have to initialize an area.

11
00:00:35,410 --> 00:00:38,750
So let's say it is one, two, three, four, five.

12
00:00:39,060 --> 00:00:43,770
All you can do to find the land is that you can use the land function for that.

13
00:00:43,770 --> 00:00:49,710
So you can just write an X dot land around this code and you can see that you have got the land to be

14
00:00:49,710 --> 00:00:54,130
five because it contains five elements right to a hill.

15
00:00:54,750 --> 00:00:58,350
Then you can also use the drop method as well.

16
00:00:58,350 --> 00:01:04,800
And the drop method basically returns the element after the end elements of the area.

17
00:01:05,100 --> 00:01:13,080
So if you just write in X dot drop over here and just specify, let's say do over here, you run this

18
00:01:13,080 --> 00:01:13,410
code.

19
00:01:13,650 --> 00:01:20,850
So every element of this, too, is going to be redone and every element above this is going to get

20
00:01:20,850 --> 00:01:21,290
dropped.

21
00:01:21,600 --> 00:01:26,070
So that's why we have got three, four or five right over here on the output over here.

22
00:01:26,730 --> 00:01:34,560
The next method is basically the method and the method basically permanently remove the last element

23
00:01:34,560 --> 00:01:35,590
of an error.

24
00:01:35,820 --> 00:01:41,910
So what Bob is going to do is that it is going to simply just remove the last element.

25
00:01:42,240 --> 00:01:45,830
If you just run the score, you can see that it has just printed out five.

26
00:01:46,080 --> 00:01:51,630
And down here, if you just write and put X on the score, you can see that now five is missing.

27
00:01:51,630 --> 00:01:53,690
One, two, three, four is a part of this.

28
00:01:54,060 --> 00:01:59,950
So Bob basically deletes the last elements permanently from an error.

29
00:02:00,450 --> 00:02:06,990
Then comes the push method and the push method basically allows you to add an element at the end of

30
00:02:06,990 --> 00:02:07,660
the array.

31
00:02:07,950 --> 00:02:13,500
So if you just write an X, don't push write in six as a parameter, that is going to be the value that

32
00:02:13,500 --> 00:02:16,710
is going to get pushed into this just right.

33
00:02:16,710 --> 00:02:21,480
And puts X run the score and you can see that you've got one, two, three, four, five, six, or

34
00:02:21,900 --> 00:02:23,910
you don't need this to be multiple times.

35
00:02:23,910 --> 00:02:29,460
Just remove this or on this and you can see that you've got one, two, three, four, five and six.

36
00:02:30,850 --> 00:02:36,930
Then you have another method you can use on areas that is the and method to talk about the shift method,

37
00:02:36,940 --> 00:02:44,320
it basically permanently remove the first element of an area and return this element.

38
00:02:44,560 --> 00:02:47,390
So it works the very same way as Bob.

39
00:02:47,410 --> 00:02:49,870
So if you just write and start.

40
00:02:51,740 --> 00:02:57,160
Shift over here, run the school, you can see that it has already done the first element.

41
00:02:57,560 --> 00:03:04,340
So what is the difference between pop and shipped is that the pope is basically used to just delete

42
00:03:04,370 --> 00:03:10,760
the last element permanently, whereas the shift is going to remove the first element permanently and

43
00:03:10,760 --> 00:03:12,790
it is also going to return that element.

44
00:03:13,070 --> 00:03:19,460
Then you have this unshaped method that will allow you to add an element to the beginning of an area.

45
00:03:19,460 --> 00:03:21,890
And it is the very same as the Bush.

46
00:03:22,160 --> 00:03:28,160
And the difference between these two is that Bush is used to add an element at the very end of the array

47
00:03:28,160 --> 00:03:33,920
and the shift is going to add the element you specify as an argument at the very start.

48
00:03:34,260 --> 00:03:39,260
If you just run the school, you can see that zero has been added at the very start of this function.

49
00:03:39,650 --> 00:03:42,380
Then we have the delete and delete add.

50
00:03:42,890 --> 00:03:49,130
So if you talk about the delete the delete method basically removes a specified element from an error

51
00:03:49,550 --> 00:03:50,420
permanently.

52
00:03:50,720 --> 00:03:53,180
So if you just use the delete, it will help.

53
00:03:55,100 --> 00:04:03,410
Right in the elements, just say to run the score and you can see that it has returned the element that

54
00:04:03,410 --> 00:04:11,180
has been deleted, then we have the delete add method that allows you to permanently remove an element

55
00:04:11,180 --> 00:04:13,300
of an error at a specified index.

56
00:04:13,640 --> 00:04:18,950
So if you just use the delete, add to a hill and just use the second location that is going to remove

57
00:04:18,950 --> 00:04:23,480
this tree from here or underscored, you can see that it has returned to the elements that has been

58
00:04:23,480 --> 00:04:25,520
deleted at the specified index.

59
00:04:25,530 --> 00:04:32,000
You have given this function, then you have got the last function we have you are going to cover in

60
00:04:32,000 --> 00:04:36,170
this tutorial that is the can get function now two can get two arrays.

61
00:04:36,170 --> 00:04:41,480
Where you can do is that you can simply sum them up, as you have seen in the previous tutorials in

62
00:04:41,480 --> 00:04:42,760
this very same section as well.

63
00:04:42,770 --> 00:04:48,020
But one more way to do is that you can use the concat method and the concat method basically append

64
00:04:48,020 --> 00:04:50,930
the elements from an error to the original error.

65
00:04:51,080 --> 00:04:57,860
The concat method can take in multiple errors as an argument which will in turn append multiple arrays

66
00:04:57,860 --> 00:04:58,930
to the original value.

67
00:04:59,270 --> 00:05:01,010
So let's say we have one more.

68
00:05:03,350 --> 00:05:05,060
So we can just ride an X.

69
00:05:07,010 --> 00:05:08,360
Dog can get.

70
00:05:10,250 --> 00:05:14,660
And the brackets, you can specify as many number of errors you want to get.

71
00:05:14,690 --> 00:05:20,390
So for now, if it is right and five, six and seven or just make it to six, seven, because we already

72
00:05:20,390 --> 00:05:22,720
have this six, seven.

73
00:05:23,210 --> 00:05:28,190
So if you just try and put X around this goal, you can see that you have got one, two, three, four,

74
00:05:28,190 --> 00:05:29,100
five, six, seven.

75
00:05:29,330 --> 00:05:31,210
Now you can have multiples as well.

76
00:05:31,220 --> 00:05:36,320
So you can just write in one more and you can just specify eight, nine in that round that's going on.

77
00:05:36,320 --> 00:05:39,040
You can see that you have got one, two, three, four, five, six, seven, eight, nine.

78
00:05:39,050 --> 00:05:42,740
So you can pass in any number of areas you want to can get.

79
00:05:43,910 --> 00:05:48,000
And that will begin can concatenated to this area, which you are using over here.

80
00:05:48,290 --> 00:05:51,590
Now, one more way you can get areas is to simply add them up.

81
00:05:51,590 --> 00:05:55,530
And you have already covered that in the previous tutorial, so I don't need to discuss it over here.

82
00:05:55,970 --> 00:06:02,510
So these were some of the very simple and basic functions that are associated with areas which you need

83
00:06:02,510 --> 00:06:08,200
to know because this may help you out in the future advanced sections.

84
00:06:08,540 --> 00:06:10,820
So I guess that's it with this tutorial.

85
00:06:10,850 --> 00:06:12,290
Thank you so much, guys, for watching.

86
00:06:12,290 --> 00:06:14,330
And I'll see you guys in the next territorials.
