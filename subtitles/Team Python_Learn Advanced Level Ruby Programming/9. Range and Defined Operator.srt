1
00:00:00,300 --> 00:00:01,380
Hey, guys, what's up?

2
00:00:01,410 --> 00:00:05,630
This is American, and I welcome you to another drill on discourse on Ruby.

3
00:00:05,850 --> 00:00:10,140
And in this story, we are again going to be covering two types of operators.

4
00:00:10,470 --> 00:00:16,580
The first operator we are going to be covering is known as the Ruby Ridge operator.

5
00:00:17,160 --> 00:00:23,850
Now, sequence arranger's in Ruby are used to create a range of successive values consisting of a start

6
00:00:23,850 --> 00:00:30,370
value, add an end value and a range of value that are in between those two values.

7
00:00:30,600 --> 00:00:38,520
Now, in Ruby, these sequences are created using it to arrange operators that are listed right in front

8
00:00:38,520 --> 00:00:38,950
of you.

9
00:00:39,270 --> 00:00:45,660
Now the two dot form creates an inclusive ranch, whereas the three dot form creates a ranch that excludes

10
00:00:45,660 --> 00:00:47,840
the specified high value.

11
00:00:48,240 --> 00:00:54,000
So to start on with the first one, it creates a range from starting point to end point inclusively,

12
00:00:54,000 --> 00:00:59,480
whereas the second one creates a range from start point to end point exclusively.

13
00:00:59,790 --> 00:01:01,860
So we will be discussing examples of that.

14
00:01:01,860 --> 00:01:07,380
But before that, we will discuss about the second type of operator we will be covering in this tutorial

15
00:01:07,380 --> 00:01:10,320
that is known as the defined operator.

16
00:01:11,590 --> 00:01:17,170
Now defined as a special operator that basically takes the form of a method call to determine whether

17
00:01:17,200 --> 00:01:24,460
or not the best expression is defined or not, it returns a description, string of the expression or

18
00:01:24,460 --> 00:01:25,720
it will return nil.

19
00:01:25,720 --> 00:01:31,930
If the expression is not defined, not the defined operator can be used to check if a variable is defined

20
00:01:31,930 --> 00:01:32,370
or not.

21
00:01:32,590 --> 00:01:34,540
What is the scope for that variable?

22
00:01:34,750 --> 00:01:40,660
It can also be used to see the method, let's say, if a method is defined or not.

23
00:01:40,900 --> 00:01:43,040
And what is the scope for that matter?

24
00:01:43,090 --> 00:01:44,380
It is a local scope.

25
00:01:44,380 --> 00:01:45,790
It is a global scope.

26
00:01:45,790 --> 00:01:54,850
Whatever it is, it can also be used with the superguy world and it will check if it can be called or

27
00:01:54,850 --> 00:01:55,280
not.

28
00:01:55,300 --> 00:02:00,760
And it can also be used with the yield keyword and it will return.

29
00:02:00,760 --> 00:02:05,730
True, if a court block has been passed, when you will be using it with a yield keyword.

30
00:02:05,920 --> 00:02:12,610
Now, with every kind of method I have explained, I have explained for you just usage as the first

31
00:02:12,610 --> 00:02:16,350
one is the variable that we will be discussing in this tutorial.

32
00:02:16,360 --> 00:02:23,200
Now, the other three uses that is with a method, then with the superguy word and then with the yield

33
00:02:23,200 --> 00:02:28,510
keyword, all these three will be defined in the future tutorials when we will be discussing those specific

34
00:02:28,510 --> 00:02:29,080
topics.

35
00:02:29,500 --> 00:02:36,250
So how that is going to be used right in here that we will be seeing with the help of an example.

36
00:02:36,460 --> 00:02:41,920
So starting on with the range operator, first we will see how range operators are used.

37
00:02:41,920 --> 00:02:44,260
So we will move on to item.

38
00:02:44,740 --> 00:02:51,400
And now in addition, we are going to do is that we are going to specify a variable equal to one dot

39
00:02:51,400 --> 00:02:52,420
dot then.

40
00:02:52,660 --> 00:02:58,000
So when you specify two dots, this means that you have to specify this range.

41
00:02:58,750 --> 00:03:00,520
That is the lower, lower number.

42
00:03:00,520 --> 00:03:05,800
Then you have to specify the higher range and then you have to specify all the numbers in between this.

43
00:03:06,040 --> 00:03:10,090
So what are you going to do is that you are going to write in inputs a.

44
00:03:11,940 --> 00:03:12,540
Dot.

45
00:03:13,400 --> 00:03:21,540
To underscore a soldier's press control, sorry, Aldar, and that is going to run the court for you.

46
00:03:21,560 --> 00:03:26,810
And as you can see or hear that you have only written one daughter, 10, and you can see that it has

47
00:03:26,810 --> 00:03:28,760
generated numbers from one to 10.

48
00:03:28,940 --> 00:03:35,220
That includes the lowest number, the highest number and all the numbers in between that.

49
00:03:35,450 --> 00:03:39,490
Now, why have you specified this to add this to a means to error?

50
00:03:39,800 --> 00:03:45,380
Because if you just remove this from here, an error message is going to not generate, but it is going

51
00:03:45,380 --> 00:03:49,010
to generate this as it is now.

52
00:03:49,400 --> 00:03:55,820
If you want that, if all to all the numbers do get generated and printed on the atom or their screen,

53
00:03:56,030 --> 00:03:57,980
you have to specify this to underscore.

54
00:03:58,070 --> 00:04:00,300
And as you can see, all the numbers are going to be printed.

55
00:04:00,800 --> 00:04:08,000
Now, as I told you about the triple dot that is going to display the numbers exclusively, what it's

56
00:04:08,000 --> 00:04:12,500
going to do is that it is going to include this lower range, but it is not going to include the higher

57
00:04:12,500 --> 00:04:12,940
range.

58
00:04:13,180 --> 00:04:13,730
Run it.

59
00:04:14,000 --> 00:04:16,540
And you can see that 10 is missing from the scenes.

60
00:04:16,700 --> 00:04:21,980
It is going to display the numbers from one to nine and exclude this number.

61
00:04:22,970 --> 00:04:24,650
That is the highest range, no.

62
00:04:26,320 --> 00:04:35,020
So now moving on to the second topic that is about the defined operator, so let's say we have this

63
00:04:35,020 --> 00:04:37,220
A that is equal to, let's say 10.

64
00:04:37,720 --> 00:04:42,430
So what do we want to do is that we want to check if this is defined or not.

65
00:04:42,710 --> 00:04:44,050
Now, this is a small.

66
00:04:44,320 --> 00:04:46,030
You can simply see that is defined.

67
00:04:46,040 --> 00:04:52,870
But if you are making a huge website, let's say on Ruby Andrius, then what you have to do is that

68
00:04:52,870 --> 00:04:58,240
if you want to check if a certain variable is defined or not, then you can easily check that and you

69
00:04:58,240 --> 00:05:01,910
can also see what is the scope of that variable.

70
00:05:01,930 --> 00:05:11,640
So what you're going to do is that you're going to write in a dot defined and a question mark are underscored.

71
00:05:12,460 --> 00:05:12,900
All right.

72
00:05:12,910 --> 00:05:14,710
It has generated an error.

73
00:05:14,770 --> 00:05:15,300
All right.

74
00:05:15,880 --> 00:05:18,610
This has to be placed after this, not with a dot.

75
00:05:18,850 --> 00:05:20,620
So you specify a hole here.

76
00:05:21,040 --> 00:05:21,700
Run this.

77
00:05:21,700 --> 00:05:26,880
And as you can see that it has generated the message that says local variable.

78
00:05:26,890 --> 00:05:27,250
Now what?

79
00:05:27,250 --> 00:05:28,870
It has generated local variables.

80
00:05:28,900 --> 00:05:35,110
This means that a variable is present there and it is present with local scope.

81
00:05:35,130 --> 00:05:38,380
This means that this is good and is a local variable.

82
00:05:38,380 --> 00:05:38,650
Right.

83
00:05:38,690 --> 00:05:42,710
Well, now, for example, I specify below here, run the school.

84
00:05:42,730 --> 00:05:48,640
You can see that nothing is printed on the screen because this B is not defined anywhere in the scene.

85
00:05:48,650 --> 00:05:54,490
So automatically you will come to know that B is not a variable anywhere in your code.

86
00:05:55,740 --> 00:05:59,380
So that's how you can check if a variable is defined or not.

87
00:05:59,580 --> 00:06:02,600
And you can also see certain description about that variable.

88
00:06:02,760 --> 00:06:07,560
And in this case, as you have seen in the previous case, want to specify ÁLFHEIÐUR, run that code.

89
00:06:07,560 --> 00:06:09,090
You can see that you have.

90
00:06:10,220 --> 00:06:15,920
Printed the message local variable, which means that is equal to then is a local variable and it is

91
00:06:15,920 --> 00:06:24,380
defined in your code so you can do the same for methods, you can do it for the super keyword and you

92
00:06:24,380 --> 00:06:27,170
can use it with the yield keyword as well.

93
00:06:27,180 --> 00:06:33,400
But that will be a part of the future tutorials when you will be discussing those topics.

94
00:06:33,740 --> 00:06:36,270
So I guess that's it.

95
00:06:36,530 --> 00:06:38,210
What this tutorial.

96
00:06:39,240 --> 00:06:45,060
Thank you so much, guys, for watching and I'll see you guys in the next tutorial with some more operators.
