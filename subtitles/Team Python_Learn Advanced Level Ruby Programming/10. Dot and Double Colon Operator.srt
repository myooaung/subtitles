1
00:00:00,300 --> 00:00:01,290
Hey, guys, what's up?

2
00:00:01,320 --> 00:00:06,480
This is a marathon, and I welcome you to another tutorial on discourse on Ruby.

3
00:00:06,480 --> 00:00:11,880
And in this drill we will be discussing about the DOT and the double calling operator.

4
00:00:12,600 --> 00:00:19,590
Now, you call a module method by preceding its name with the module name and a right, and you reference

5
00:00:19,590 --> 00:00:22,840
a constant using the module name and two columns.

6
00:00:23,130 --> 00:00:32,010
Now, the two columns is basically a unary operator that allows Garstin instance methods, class methods

7
00:00:32,250 --> 00:00:38,970
that are defined within a class or module to be accessed from anywhere outside the class or module.

8
00:00:39,330 --> 00:00:44,780
Now remember that in Ruby, classes and methods may be considered as constants too.

9
00:00:45,170 --> 00:00:52,080
Now you need to just prefix the double column constant name with an expression that returns the appropriate

10
00:00:52,080 --> 00:00:53,340
class or module object.

11
00:00:53,790 --> 00:00:58,930
If no perfect expression is use, the main object class is used by default.

12
00:00:59,310 --> 00:01:06,240
Now the double column operator is basically going to be a part of future tutorials when we will be discussing

13
00:01:06,240 --> 00:01:08,100
about classes and objects.

14
00:01:08,430 --> 00:01:15,420
But we show you a quick example and a look of how they are going to look.

15
00:01:16,110 --> 00:01:18,360
Let me just move on to item.

16
00:01:20,310 --> 00:01:24,840
Now, in the previous stories, you have been discussing a lot about the dot operator and you have been

17
00:01:24,840 --> 00:01:33,300
using a lot of the dot operator in the previous tutorials as well, when you were using the bell and

18
00:01:33,300 --> 00:01:35,040
functions that were the predicate function.

19
00:01:35,040 --> 00:01:41,910
For example, if I just remind you of an example, then we be able using if a number was or do not,

20
00:01:41,910 --> 00:01:49,410
we just use five dot odd and a question mark and then we use bots around this code and it will generate.

21
00:01:49,980 --> 00:01:55,180
So that's where basically the dot operator is used to reference a method call.

22
00:01:55,830 --> 00:02:01,740
Now, if you talk about the second operator, as I told you, that it is used to reference a constant

23
00:02:01,740 --> 00:02:08,320
using the module name and two columns now the double calling operator as a tool use and in the operator

24
00:02:08,340 --> 00:02:13,830
that allows constant instant's methods and the class methods that are defined within a class or module

25
00:02:13,830 --> 00:02:16,950
to be accessed from anywhere outside the class are module.

26
00:02:17,400 --> 00:02:24,030
Now, I don't want to go into the coding part of that because it is a kind of complex coding and that

27
00:02:24,030 --> 00:02:26,070
has to be the part of the future tutorials.

28
00:02:26,070 --> 00:02:31,920
But for now, you need to know the basic introduction and you need to know the description for what

29
00:02:32,190 --> 00:02:36,720
call an operator is going to be used for in the future tutorials.

30
00:02:37,320 --> 00:02:39,410
So I guess that's it with this tutorial.

31
00:02:39,420 --> 00:02:41,640
Thank you so much, guys, for watching.

32
00:02:41,640 --> 00:02:43,860
And I'll see you guys in the next Turrill.
