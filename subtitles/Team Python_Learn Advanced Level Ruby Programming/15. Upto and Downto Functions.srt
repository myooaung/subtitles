1
00:00:00,330 --> 00:00:01,350
Hey, guys, what's up?

2
00:00:01,380 --> 00:00:06,960
This is a marathon, and I welcome you to another to on this course, on Drooly and in this territorial,

3
00:00:06,960 --> 00:00:09,090
we are going to be covering two functions.

4
00:00:09,310 --> 00:00:14,440
The first one, it's going to be up to function and the second one is going to be the down two functions.

5
00:00:14,850 --> 00:00:21,420
Now, if you talk about the up to function, then if you need to come from a specific or low value up

6
00:00:21,420 --> 00:00:26,760
to a higher value, then you have to use the updo method that is used for an integer value.

7
00:00:27,030 --> 00:00:31,980
Now, a block argument may optionally be used if you want to display the value.

8
00:00:33,010 --> 00:00:41,080
On each kind of iteration, now, if you want to use the down to function, then the down to function

9
00:00:41,080 --> 00:00:46,300
is going to count down from a high value to a low value.

10
00:00:46,300 --> 00:00:48,250
And you can use the same thing.

11
00:00:48,250 --> 00:00:53,500
That is the block argument optionally if you want to display the value at each iteration.

12
00:00:53,890 --> 00:00:56,980
So I guess that's enough talking.

13
00:00:56,990 --> 00:01:01,960
Let's go on to attempt to see how both of these are going to work.

14
00:01:02,320 --> 00:01:03,460
Now, what do you have to do?

15
00:01:03,460 --> 00:01:08,080
Simply is that you have to write in the low value you want to start on with.

16
00:01:08,350 --> 00:01:14,290
Then you have to specify don't need to specify up to then in the brackets, you have to specify the

17
00:01:14,290 --> 00:01:15,970
value still what you want to.

18
00:01:15,970 --> 00:01:22,210
I traded and you have to specify then and then you have to specify the block, as I told you, which

19
00:01:22,210 --> 00:01:27,430
is optional if you want to display the value at each iteration, since I want the value to be displayed

20
00:01:27,430 --> 00:01:32,170
at each iteration so I could use a block of our or to just specify do.

21
00:01:33,280 --> 00:01:38,290
Click, enter, and the blog code is automatically going to start and is going to be automatically generated.

22
00:01:38,290 --> 00:01:45,220
Oakhill And you have to specify these vertical bars specify in this.

23
00:01:45,430 --> 00:01:51,730
And I, as usual, is going to take the first value and add each iteration.

24
00:01:51,730 --> 00:01:55,830
What it is going to do is it's not ideal, it's AI.

25
00:01:55,840 --> 00:02:01,210
And what it's going to do is that it's going to print out the value for AI.

26
00:02:04,240 --> 00:02:11,080
Now, just run this code, and as you can see, that it has printed out zero one, two, three, four,

27
00:02:11,080 --> 00:02:12,280
five, six, seven, eight, nine, 10.

28
00:02:12,610 --> 00:02:15,480
Well, you need to do Ohare is just add.

29
00:02:17,620 --> 00:02:20,240
A bit of space around the squad now.

30
00:02:20,440 --> 00:02:23,070
All right, we have got certain error.

31
00:02:23,590 --> 00:02:27,250
Yes, because we can specify this oakhill.

32
00:02:29,350 --> 00:02:32,560
What we can do is I guess we can add a space downhill.

33
00:02:33,850 --> 00:02:39,370
All right, so it's looking pretty well now you can see that you have zero one, two, three, four,

34
00:02:39,370 --> 00:02:40,680
five, six, seven, eight, nine, ten.

35
00:02:40,690 --> 00:02:44,900
If you don't want to use any of these, you can just specify Bootsie.

36
00:02:45,250 --> 00:02:52,750
And that is going to make job a bit more easy and it is going to display each output on a new line.

37
00:02:52,900 --> 00:02:56,470
So that's how the updo function can be used.

38
00:02:56,620 --> 00:03:03,070
So you can see that it started on with the lowest value you have specified, still the highest value.

39
00:03:03,430 --> 00:03:10,200
Now, if you want to reverse this order, what you can do simply is that you can convert this updo into

40
00:03:10,210 --> 00:03:12,190
down to run this code.

41
00:03:14,520 --> 00:03:21,480
All right, so nothing was printed because this value is already larger than this value.

42
00:03:21,510 --> 00:03:27,120
So what you have to do is to specify Denoyer and zero over here verandahs go now and now.

43
00:03:27,120 --> 00:03:30,990
The output is going to be generated as ten, nine, eight, seven, six, five, four, three, two,

44
00:03:30,990 --> 00:03:31,440
one, zero.

45
00:03:31,710 --> 00:03:38,940
Now, if you specify the updo function on this, where this value is a smaller value and this value

46
00:03:38,940 --> 00:03:45,240
is a larger value or underscored, and yes, it's up to run this code.

47
00:03:45,360 --> 00:03:49,950
And as you can see, that nothing has been printed because this value is greater than this value.

48
00:03:49,980 --> 00:03:57,210
So while using the up to and down two methods, you have to keep this in mind that when using the updo

49
00:03:57,210 --> 00:04:03,630
method, this value that is in the brackets should always be greater than this value so that something

50
00:04:03,630 --> 00:04:06,060
is generated on the atom or on their output screen.

51
00:04:06,280 --> 00:04:14,790
And when using the second method that is the down to method, this value should be less than this value

52
00:04:14,790 --> 00:04:15,810
as it is in the case.

53
00:04:15,810 --> 00:04:21,420
As you can see that the output is generated because if you specify, let's say, 20 Oakhill run the

54
00:04:21,420 --> 00:04:25,560
score, then you can see that nothing is generated because this value is greater than this value.

55
00:04:25,830 --> 00:04:31,540
So this is basically what is going what you are going to see and you have to be careful about.

56
00:04:32,040 --> 00:04:34,260
So I guess that's it.

57
00:04:34,470 --> 00:04:38,140
What the up to out function and that's it with this tutorial as well.

58
00:04:38,160 --> 00:04:40,020
Thank you so much, guys, for watching.

59
00:04:40,230 --> 00:04:42,540
And I'll see you guys in the next tutorial.
