WEBVTT
1
00:00:00.330 --> 00:00:01.350
Hey, guys, what's up?

2
00:00:01.380 --> 00:00:05.100
This is a marathon, and I welcome you to another door on this course on Ruby.

3
00:00:05.130 --> 00:00:10.020
And in this story, we are again going to be covering two functions that are going to be the end and

4
00:00:10.020 --> 00:00:12.130
the usual function.

5
00:00:12.180 --> 00:00:16.140
Now, you have already covered equal function before by Mr. Dorelle.

6
00:00:16.140 --> 00:00:20.390
We are going to see that how it is going to be used on a range in Ruby.

7
00:00:20.700 --> 00:00:24.470
So starting on with the first one that is the end function.

8
00:00:24.810 --> 00:00:30.870
Now, the end is an invalid method in Ruby that returns the last element of the give and range.

9
00:00:30.870 --> 00:00:35.370
And if you talk about the syntax for this and function, it is very simple.

10
00:00:35.370 --> 00:00:41.130
You can just write and range dot and and as you can see that the function accepts no parameter and the

11
00:00:41.130 --> 00:00:46.170
return value is going to be the last value of the given range you have specified.

12
00:00:46.590 --> 00:00:51.750
Then comes the second function we are going to be covering in this tutorial is the equal function and

13
00:00:51.750 --> 00:00:57.450
the equal is also an invalid method in Ruby that returns boolean value.

14
00:00:57.450 --> 00:01:04.440
True, if both the give and ranges are equal as what it is going to do is that it is going to return

15
00:01:04.590 --> 00:01:05.210
false.

16
00:01:05.730 --> 00:01:11.130
Then if you talk about the syntax for this EQM function, you have to write in range.

17
00:01:11.130 --> 00:01:18.690
One dot equals a question mark is going to be included with it and in the brackets it has no certain

18
00:01:18.690 --> 00:01:24.960
object for itself, but it is going to take in a whole range and it is going to match it with the other

19
00:01:24.960 --> 00:01:26.160
range you have specified.

20
00:01:26.170 --> 00:01:31.770
So it is going to match this range that is right over here with whatever arrange you have specified

21
00:01:31.770 --> 00:01:32.910
in the brackets over here.

22
00:01:33.300 --> 00:01:35.940
So it is going to return boolean value.

23
00:01:35.940 --> 00:01:39.150
True about the given ranges are equal else.

24
00:01:39.150 --> 00:01:41.860
What it is going to do is that it is going to return false.

25
00:01:42.450 --> 00:01:48.020
So let's go to simple examples of these two simple functions.

26
00:01:48.540 --> 00:01:55.200
So I will move on to Adam and we will start on with the first one that is the end function about which

27
00:01:55.200 --> 00:01:58.620
I told you that is going to return the last element of the give and range.

28
00:01:59.010 --> 00:02:03.470
So let's just specify a range that is equal to zero nine.

29
00:02:03.660 --> 00:02:06.020
So it has elements from zero to nine.

30
00:02:06.030 --> 00:02:10.380
And if you just write in votes range dot.

31
00:02:11.660 --> 00:02:18.080
And around this God, you can see that it has returned the last element for whatever range we use over

32
00:02:18.080 --> 00:02:18.350
here.

33
00:02:18.350 --> 00:02:22.710
So if you just reach six over here, it it is going to return six, eight over here.

34
00:02:22.710 --> 00:02:23.050
Run it.

35
00:02:23.060 --> 00:02:24.050
It is going to return it.

36
00:02:24.260 --> 00:02:26.060
So in every case, it is going to return.

37
00:02:26.240 --> 00:02:29.000
The last element, very simple.

38
00:02:29.900 --> 00:02:34.490
Now, moving towards the second one in that we are going to have two ranges.

39
00:02:34.490 --> 00:02:42.550
Let's say first range is from zero to nine and the range one is also going to be from zero to nine.

40
00:02:42.560 --> 00:02:44.810
And in that way they are both going to get equal.

41
00:02:45.260 --> 00:02:48.590
So what we are going to do is that we are going to ride in boats.

42
00:02:49.620 --> 00:02:50.400
Range.

43
00:02:51.670 --> 00:02:58.230
Dodd, EQM out a question mark and then in the brackets, we are going to write in the second range,

44
00:02:58.230 --> 00:02:58.870
we want to check.

45
00:02:58.870 --> 00:03:04.840
And so what it is going to do is that it is going to check if range is equal to range one or annoyed

46
00:03:04.840 --> 00:03:05.860
and it is going to return.

47
00:03:05.860 --> 00:03:11.110
True if it is and false if it is not or underscored and it is going to return.

48
00:03:11.110 --> 00:03:13.980
True, as you can see, that both the ranges are the same.

49
00:03:14.350 --> 00:03:20.950
So if you just write in, let's say eight or Hill, run the score now you can see that it has now generated

50
00:03:20.950 --> 00:03:21.740
false alarm.

51
00:03:22.240 --> 00:03:26.340
So what about if we just specify nine point zero over here?

52
00:03:26.350 --> 00:03:32.860
So if you just run the scored, it is going to again return false because both these are not safe.

53
00:03:32.860 --> 00:03:33.280
Same again.

54
00:03:33.280 --> 00:03:39.460
If you just specify nine Ojea run the score, it is also going to again return false since it has a

55
00:03:39.580 --> 00:03:42.530
decimal value here and it has not.

56
00:03:42.760 --> 00:03:46.480
So if you just specify in any one zero over here now it is going to return.

57
00:03:46.480 --> 00:03:46.860
True.

58
00:03:47.170 --> 00:03:53.410
So it is going to check for two elements to be equal, not only about the values, but it is also going

59
00:03:53.410 --> 00:03:59.530
to check if those values are the same in their types or not.

60
00:04:00.070 --> 00:04:03.280
So I guess that's it with this tutorial.

61
00:04:03.310 --> 00:04:05.080
Thank you so much, guys, for watching.

62
00:04:05.080 --> 00:04:07.270
And I'll see you guys in the next tutorial.
