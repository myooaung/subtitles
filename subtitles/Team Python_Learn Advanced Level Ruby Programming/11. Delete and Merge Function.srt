1
00:00:00,330 --> 00:00:01,260
Hey, guys, what's up?

2
00:00:01,290 --> 00:00:04,670
This is a marathon, and I welcome you to another tutorial on this course on Ruby.

3
00:00:04,680 --> 00:00:07,680
And in this story, we are again going to be covering two functions.

4
00:00:07,680 --> 00:00:11,360
And these two functions are going to be the last we are going to be covering on HaShas.

5
00:00:11,820 --> 00:00:15,900
So the first function we are going to go over here is going to be the delete function and then we are

6
00:00:15,900 --> 00:00:18,420
going to see the March function as well in this tutorial.

7
00:00:18,900 --> 00:00:24,150
So to talk about the delete function, it is a hash class matter which deletes the key value pair and

8
00:00:24,150 --> 00:00:27,910
it return the value from the hash huskie is equal to the key.

9
00:00:28,350 --> 00:00:32,910
So if you talk about the syntax of this delete function, it is hash tag or delete.

10
00:00:32,910 --> 00:00:38,520
And in the parameters you have to specify the key, what you want to delete and the output is going

11
00:00:38,520 --> 00:00:41,410
to be whatever has been deleted by the delete function.

12
00:00:42,240 --> 00:00:47,430
The second function we are going to cover in this is the merge function and it is a hash class method

13
00:00:47,430 --> 00:00:53,760
which combines two hash arrays and their contents, as you can just see it by its name, it is going

14
00:00:53,760 --> 00:00:55,860
to merge to hashes.

15
00:00:56,100 --> 00:01:02,100
So hash one dot merge and in the parameter you have to write in the name of the hash you want to merge

16
00:01:02,100 --> 00:01:02,920
hash one with.

17
00:01:03,240 --> 00:01:04,920
So let's say its name is hash tag.

18
00:01:04,930 --> 00:01:09,440
So hash and hashtag are going to get merged by using this March function.

19
00:01:09,810 --> 00:01:15,150
So let's see an example for how to delete and how to merge.

20
00:01:16,170 --> 00:01:22,170
To hashas, so we already have got these three hashas in front of us, which we have been using from

21
00:01:22,170 --> 00:01:27,990
the very first tutorial and O'Haire, what we are going to do is that first we are going to use the

22
00:01:27,990 --> 00:01:30,090
delete function and delete certain values.

23
00:01:30,360 --> 00:01:31,980
So we are going to write in votes.

24
00:01:34,800 --> 00:01:35,610
Deleted.

25
00:01:37,080 --> 00:01:39,750
Key value pair is.

26
00:01:43,120 --> 00:01:48,070
Interpellation and interpellation, you are going to write an idiot deleted from.

27
00:01:48,400 --> 00:01:51,950
I want to give something so you have to specify the key here.

28
00:01:51,970 --> 00:01:56,980
So since we are using the syntax, so we are going to write in column AOL, which means that I want

29
00:01:56,980 --> 00:02:04,720
to delete this 800 entries from here, run this ad, as you can see, that it says deleted key value

30
00:02:04,720 --> 00:02:05,080
pair.

31
00:02:05,080 --> 00:02:07,420
Is this handwriting try will help.

32
00:02:09,240 --> 00:02:16,400
Now, if you want to, let's say just in something more Willhelm, that is both.

33
00:02:20,640 --> 00:02:21,510
Delete.

34
00:02:22,730 --> 00:02:30,440
The and you're going to use interpellation and from V, let's say I want to write and beat or delete.

35
00:02:31,840 --> 00:02:34,030
And let's specify.

36
00:02:35,270 --> 00:02:40,670
Let's say, see Ronda's and it is going to return the value that had been deleted, that is three hundred

37
00:02:41,420 --> 00:02:46,490
in this case, just simplify this also as delete a.

38
00:02:48,240 --> 00:02:51,590
Not enough to specify a call over here as well.

39
00:02:53,220 --> 00:02:57,120
All right, now, for example, you specify something that is not a part of it and you want to delete

40
00:02:57,120 --> 00:02:57,310
it.

41
00:02:57,330 --> 00:02:58,710
That's supposed to run it.

42
00:02:58,890 --> 00:03:03,160
And you can see that it has done nothing, which means that nothing has been deleted due to this function.

43
00:03:03,480 --> 00:03:09,900
So if you have, let's say of that, never specified to something in this B, so you just write in the

44
00:03:09,960 --> 00:03:14,460
wall here on this, it is going to also return nothing, which means that nothing has been because the

45
00:03:14,460 --> 00:03:16,180
value that has been deleted is nil.

46
00:03:16,470 --> 00:03:17,720
So that's why it has returned.

47
00:03:17,730 --> 00:03:20,320
I this key value pair has been deleted.

48
00:03:20,730 --> 00:03:22,060
This is no more a part of it.

49
00:03:22,080 --> 00:03:24,060
For example, if you want to check, it puts.

50
00:03:25,320 --> 00:03:30,240
You want to check if this has been deleted or not, so you can just write in the dot.

51
00:03:31,660 --> 00:03:36,210
Include and you can just specify Colin V0 here.

52
00:03:38,260 --> 00:03:42,330
Not like this, this has to be in the end, but.

53
00:03:43,520 --> 00:03:49,910
Just remove it from here, Bestival, here, run this and you can see that it has now returned.

54
00:03:50,000 --> 00:03:56,200
Also in this case, this key value pair has been deleted, but it has done nothing.

55
00:03:56,210 --> 00:03:59,900
As you can see, nothing is printed out here because the value that was in B was nil.

56
00:03:59,910 --> 00:04:01,330
So that's why nothing was printed over here.

57
00:04:01,340 --> 00:04:06,080
But this B is no more a part of this hash B, so that's why when you write in B, not include anyone

58
00:04:06,090 --> 00:04:10,430
to check if this G b exist and this has to be or not.

59
00:04:10,550 --> 00:04:12,420
So it has redundant false.

60
00:04:12,770 --> 00:04:17,920
So that's how basically the delete function work for a normal values and for the values that has nil

61
00:04:17,930 --> 00:04:18,470
in them.

62
00:04:19,870 --> 00:04:26,560
So moving on to the second part of the story, that is how to merge two areas sorry, hash errors.

63
00:04:26,770 --> 00:04:32,770
So let's say we just remove one of them and let's say these are the two areas I want to marginalize.

64
00:04:32,770 --> 00:04:39,790
Just change the values for them as well, since it has this value A and B and this has the value ABQ.

65
00:04:39,790 --> 00:04:50,320
So let's just change it to C, D and finally with changes to E, so let's change the values for this

66
00:04:50,320 --> 00:04:50,650
as well.

67
00:04:50,650 --> 00:04:56,730
Let's say this is three and this is four hundred and this has to be five hundred.

68
00:04:57,370 --> 00:05:00,160
So we are going to write in towards.

69
00:05:02,470 --> 00:05:03,400
Maajid.

70
00:05:04,630 --> 00:05:05,770
Hash Tachira.

71
00:05:07,460 --> 00:05:08,120
Is.

72
00:05:09,100 --> 00:05:14,530
Interpellation and you're going to ride in it or merge and in the parameters, you have to ride and

73
00:05:14,530 --> 00:05:18,760
beat her on this and you can see that you've got the March area.

74
00:05:18,760 --> 00:05:23,300
If you just move it over here, you can see that you've got a single arrow that is a hundred two hundred

75
00:05:23,320 --> 00:05:26,980
eighty three and four hundred and eighty five hundred.

76
00:05:27,160 --> 00:05:32,680
You can just storage in a variable as well like this, for example, you can just ride in something

77
00:05:32,680 --> 00:05:35,790
like equal to this stuff over here.

78
00:05:35,800 --> 00:05:37,600
And this is going to be stored in that.

79
00:05:38,780 --> 00:05:44,330
All right, so now what you can do more about here is that, for example, you've got similar values

80
00:05:44,330 --> 00:05:46,990
of a hill that's a tree and it is a similar value.

81
00:05:47,000 --> 00:05:49,460
Let's see, the value for that is also Hundert.

82
00:05:50,590 --> 00:05:55,930
Now, if you just run it now, it is going to treat this 800, which is specified right over here as

83
00:05:55,930 --> 00:06:01,810
a single value because now these two are merged and are a single hash area.

84
00:06:01,840 --> 00:06:08,830
So that's why you cannot have a same repeated if you repeat the same key in a same hash than what it

85
00:06:08,830 --> 00:06:12,760
is going to do is that it is going to only take one in two regards.

86
00:06:12,760 --> 00:06:16,060
So, for example, it has a different value than which value it is going to consider.

87
00:06:16,070 --> 00:06:21,280
Is it going to consider the value of our hash in the most or it is going to consider the value for hash

88
00:06:21,580 --> 00:06:22,630
B in the most?

89
00:06:23,020 --> 00:06:26,980
Run it and you will see that you have got the area, which is the.

90
00:06:27,280 --> 00:06:30,690
So the merged area since we are merging B with it.

91
00:06:30,910 --> 00:06:35,750
So whatever is being merged, those values have a higher priority.

92
00:06:35,770 --> 00:06:41,020
So that's why this is going to get a higher priority and this is going to get merged with this merged

93
00:06:41,290 --> 00:06:42,430
and in output.

94
00:06:42,430 --> 00:06:43,870
You have got this a 200.

95
00:06:43,900 --> 00:06:48,060
This is what is going to get neglected in a simple way.

96
00:06:48,670 --> 00:06:56,080
So that's how basically you can merge errors and some science behind this that what is going to be printed

97
00:06:56,080 --> 00:06:58,180
if the key values are the same.

98
00:06:59,180 --> 00:07:03,380
So I hope you have understood both of these functions and you know how to use them now.

99
00:07:03,410 --> 00:07:05,240
So I guess that's it with this tutorial as well.

100
00:07:05,270 --> 00:07:06,560
Thank you so much for watching.

101
00:07:06,560 --> 00:07:09,080
And I'll see you guys in the next Dorio.
