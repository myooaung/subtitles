1
00:00:05,550 --> 00:00:12,600
There are a couple of ways we can use multifactor authentication with Amazon S3, so multifactor authentication

2
00:00:12,600 --> 00:00:17,490
means you have a second factor of authentication above and beyond your password.

3
00:00:17,820 --> 00:00:21,680
So you have a username and password and then you have to supply something else.

4
00:00:21,990 --> 00:00:28,200
And that something else is typically a code that's generated by either a physical device like a token

5
00:00:28,380 --> 00:00:34,140
generating key card or it's actually a app on your phone like Google Authenticator.

6
00:00:35,140 --> 00:00:42,660
So the first one is multifactor authentication delete this simply as a requirement for a second factual

7
00:00:42,670 --> 00:00:49,120
friend's location when performing certain operations that is changing the version in state of a bucket

8
00:00:49,330 --> 00:00:51,970
and permanently deleting an object version.

9
00:00:52,690 --> 00:00:58,870
It's important for the exam to remember those two specific operations, and those are the operations

10
00:00:58,870 --> 00:01:03,010
for which the extra requirement for MFA will be enforced.

11
00:01:03,640 --> 00:01:11,290
When you use MFA, delete the AMS that MFA requests that it gets included in the requests for those

12
00:01:11,290 --> 00:01:12,610
specific operations.

13
00:01:13,300 --> 00:01:20,170
The second factor of authentication is typically a code that's generated by a hardware device or software

14
00:01:20,170 --> 00:01:23,920
program, and the image here is from Google Authenticator.

15
00:01:24,670 --> 00:01:28,060
Now it does require versioning to be enabled on the bucket's.

16
00:01:28,540 --> 00:01:31,540
Versioning can be enabled by bucket owners.

17
00:01:31,960 --> 00:01:40,780
The IWC account that created the bucket or authorized I Am uses MFA to Leeds can only be enabled by

18
00:01:40,780 --> 00:01:44,410
the Buckets owner, so that's an important distinction to remember.

19
00:01:45,340 --> 00:01:50,650
The next use of MFA is something called MFA Protected API Access.

20
00:01:51,160 --> 00:01:58,000
This is used to enforce another factor of authentication when accessing IWC resources.

21
00:01:58,360 --> 00:02:06,940
Not just this free other resources as well using the API or the SEELYE, it's enforced using the IWC

22
00:02:06,940 --> 00:02:10,600
multifactor or age key in a bucket policy.

23
00:02:10,990 --> 00:02:13,420
So you might have a bucket policy that looks like this.

24
00:02:13,930 --> 00:02:22,000
What this does is it denies any principle, any as free action on a specific resource in this case.

25
00:02:22,000 --> 00:02:25,720
But it could be, you know, broadly across all three buckets as well.

26
00:02:26,470 --> 00:02:35,800
And the condition is if the IWC multifactor authentication age true is not set if it's null, and that

27
00:02:35,800 --> 00:02:43,270
particular attribute will be included in your request if you have authenticated using MFA, if you haven't,

28
00:02:43,270 --> 00:02:45,370
then it's going to deny the access.

29
00:02:45,880 --> 00:02:53,470
Now, if you log in to the console with MFA, but then you issue a command via the Seelye or the API,

30
00:02:53,740 --> 00:02:54,740
it doesn't matter.

31
00:02:54,760 --> 00:02:58,300
The MFA from the console is completely separate from this.

32
00:02:58,720 --> 00:03:07,240
What this means is you actually have to supply a token from an MFA device to the Seelye or API to get

33
00:03:07,240 --> 00:03:12,760
your temporary security credentials, and then you go and issue your API request to free.

34
00:03:12,970 --> 00:03:19,990
And that information gets included, so you must be authenticated with MFA at the command line or the

35
00:03:19,990 --> 00:03:22,120
API rather than through the console.

36
00:03:22,630 --> 00:03:25,180
So I hope that was useful and I'll see you in the next lesson.

