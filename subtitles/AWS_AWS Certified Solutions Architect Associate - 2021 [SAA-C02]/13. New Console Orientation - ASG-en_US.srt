1
00:00:01,870 --> 00:00:02,450
Hi, guys.

2
00:00:02,470 --> 00:00:08,590
As many of you have noticed, the US management console has been undergoing quite a few changes over

3
00:00:08,590 --> 00:00:10,990
the last few months and it's an ongoing thing.

4
00:00:10,990 --> 00:00:14,980
So they're still changing the console regularly.

5
00:00:15,250 --> 00:00:20,410
Now, the key thing that I want to let you know is it's mostly cosmetic updates.

6
00:00:20,410 --> 00:00:24,430
So overall, it's generally just look and feel changes.

7
00:00:24,670 --> 00:00:30,940
Now, have a look at the video at the end of Section two in your course, because what I do there is

8
00:00:30,940 --> 00:00:37,210
I actually go through and show you quite a few examples in two and a few other services just to show

9
00:00:37,210 --> 00:00:41,140
you that overall, it's mainly just the way that the presentation is.

10
00:00:41,140 --> 00:00:44,800
So it looks slightly different, but the settings are generally the same.

11
00:00:45,070 --> 00:00:46,660
Now, there are a few exceptions.

12
00:00:46,660 --> 00:00:50,740
There are some services where it goes a bit beyond just look and feel changes.

13
00:00:51,040 --> 00:00:55,030
And Amazon easy to auto scaling is one of those exceptions.

14
00:00:55,360 --> 00:01:02,260
So with easy to auto scaling, the actual configuration options that you need to configure are pretty

15
00:01:02,260 --> 00:01:03,110
much the same.

16
00:01:03,460 --> 00:01:09,820
So it's not that they've made any major changes to the fundamental architecture of easy to auto scaling,

17
00:01:10,240 --> 00:01:14,490
but what they have done is modified the presentation of the options.

18
00:01:14,770 --> 00:01:20,290
So if you are used to using the old console, when you're going through some of my videos that are recorded

19
00:01:20,290 --> 00:01:25,780
using that console, auto scaling is one of the services where you're going to look at it and go, well,

20
00:01:25,780 --> 00:01:27,480
it's so it looks very different now.

21
00:01:28,030 --> 00:01:34,600
So what we're going to do is we're going to head over shortly to a video which I shot for my sister's

22
00:01:34,600 --> 00:01:36,430
associate is a brand new video.

23
00:01:36,700 --> 00:01:44,380
And in that I actually use auto scaling with the new console and I cover the difference between launch

24
00:01:44,380 --> 00:01:46,340
configurations and launch templates.

25
00:01:46,840 --> 00:01:51,970
Now, just before we do that, I just want to make you very comfortable that you're not going to get

26
00:01:51,970 --> 00:01:56,260
tested in the exam on the new console versus the old console.

27
00:01:56,470 --> 00:01:59,950
The exam actually lags updates by about six months anyway.

28
00:02:00,220 --> 00:02:04,050
But as I said, the configuration options are pretty much the same.

29
00:02:04,330 --> 00:02:09,460
So you're not going to come up on the exam questions that are going to trip you up because you were

30
00:02:09,460 --> 00:02:12,130
used to using one console or the other one.

31
00:02:12,760 --> 00:02:18,970
So with that being said, let's go over now to one of these new videos using auto scaling with the new

32
00:02:18,970 --> 00:02:19,520
console.

33
00:02:20,470 --> 00:02:20,950
Hi, guys.

34
00:02:20,980 --> 00:02:24,750
So we're now going to talk about Amazon Ekta Auto scaling.

35
00:02:25,600 --> 00:02:30,490
So also scaling allows us to elastically scale are two instances.

36
00:02:30,640 --> 00:02:37,870
So that's about horizontally scaling our actual instances by launching or terminating easy to instances.

37
00:02:38,500 --> 00:02:39,860
So how does it work?

38
00:02:39,880 --> 00:02:46,720
Well, auto scaling will configure a certain amount of instances according to your scaling policies

39
00:02:46,720 --> 00:02:47,440
that you define.

40
00:02:48,040 --> 00:02:54,270
Then f an easy to status check fails auto scaling to replace the instance.

41
00:02:54,290 --> 00:02:59,740
So in this example, this isn't about scaling as much as replacing something that's failed.

42
00:02:59,740 --> 00:03:03,720
So it helps you to build in that resilience to your application as well.

43
00:03:04,900 --> 00:03:10,870
Now, the other way it works is with metrics, so metrics are performance related information getting

44
00:03:10,870 --> 00:03:12,320
sent to cloud watch.

45
00:03:12,640 --> 00:03:19,450
And in this case, the metrics have reported that the aggregate CPU across our instances has hit 80

46
00:03:19,450 --> 00:03:19,870
percent.

47
00:03:19,900 --> 00:03:21,370
So they're under quite a bit of pressure.

48
00:03:22,520 --> 00:03:29,660
The cloud watch service will then notify auto scaling and auto scaling will respond by launching an

49
00:03:29,660 --> 00:03:30,510
extra instance.

50
00:03:30,710 --> 00:03:32,410
So we now have more capacity.

51
00:03:32,810 --> 00:03:35,710
And so that's how auto scaling works at a basic level.

52
00:03:35,960 --> 00:03:39,240
So it also works with elastic load balancing very well.

53
00:03:39,620 --> 00:03:42,680
So in this case, users connect to our load balancer.

54
00:03:42,980 --> 00:03:46,190
They get distributed to Ekta instances.

55
00:03:47,520 --> 00:03:54,930
Then if an easy two instance fails, the low balance of reroutes the connection and then Elby takes

56
00:03:54,930 --> 00:03:56,700
the instance out of service.

57
00:03:57,910 --> 00:04:04,660
Auto scaling will be notified, it will terminate the instance and then auto scanning goes and launches

58
00:04:04,660 --> 00:04:10,260
a new instance, and then new connections can come in and note that this is now instant's five.

59
00:04:10,270 --> 00:04:12,270
It used to be instance one that was here.

60
00:04:12,580 --> 00:04:14,670
And that's because it is a brand new instance.

61
00:04:14,680 --> 00:04:17,190
So auto scaling doesn't fix anything.

62
00:04:17,200 --> 00:04:19,270
It just terminates it and launches a new one.

63
00:04:19,540 --> 00:04:24,010
Now note that this architecture includes high availability and fault tolerance.

64
00:04:24,340 --> 00:04:31,300
So not only are you highly available across different availability zones, but auto scanning will automatically

65
00:04:31,450 --> 00:04:37,560
re introduce instances into your auto scaling group after other instances fail.

66
00:04:37,810 --> 00:04:40,780
So you have that resiliency and that high availability.

67
00:04:44,020 --> 00:04:50,980
Now, when we configure auto scaling, there's a couple of things that we can use to define the configuration

68
00:04:51,220 --> 00:04:53,040
of the instances that we launch.

69
00:04:53,560 --> 00:04:55,780
The first one is called a launch configuration.

70
00:04:55,820 --> 00:04:57,490
And this has been around quite a long while.

71
00:04:58,570 --> 00:05:04,070
With a launch configuration, you specify the hammy and the instance type that you want to use.

72
00:05:04,090 --> 00:05:07,530
So here we've got a Linux to AMAI and a T2 micro.

73
00:05:08,440 --> 00:05:13,180
You can also configure things such as the roles, the monitoring, the tendency and so on.

74
00:05:13,180 --> 00:05:18,640
So you can see there's quite a few things that you can configure here and also storage and security

75
00:05:18,640 --> 00:05:19,060
groups.

76
00:05:19,630 --> 00:05:25,870
So you define those in the launch configuration and then the auto scaling group uses that launch configuration

77
00:05:25,870 --> 00:05:28,420
to launch your instances according to that config.

78
00:05:29,310 --> 00:05:35,550
Now, one thing to note about launch conflicts is you can't edit them, so once you've saved it, you

79
00:05:35,550 --> 00:05:37,370
have to use it as it is.

80
00:05:37,380 --> 00:05:42,210
And if you need to modify it, you basically have to create a new one with the different settings and

81
00:05:42,210 --> 00:05:46,080
then update your auto scanning group to use the new launch configuration.

82
00:05:46,530 --> 00:05:53,790
Now, another option, a bit newer is launch templates, and US seem to be pushing people towards using

83
00:05:53,790 --> 00:05:56,220
launch templates now instead of launch conflicts.

84
00:05:56,700 --> 00:05:59,390
It's very similar, but has a few additional features.

85
00:05:59,910 --> 00:06:06,030
Firstly, you can have multiple versions so you can edit your launch templates and save them as a new

86
00:06:06,030 --> 00:06:06,510
version.

87
00:06:07,080 --> 00:06:08,970
It can use dedicated hosts.

88
00:06:09,420 --> 00:06:15,900
You can use a combination of Spot and On-Demand instances, different instance types, and there's lots

89
00:06:15,900 --> 00:06:19,770
more advanced settings as well, like termination protection and shut down behavior.

90
00:06:19,770 --> 00:06:23,780
And you can configure your instances to launch in a placement group as well.

91
00:06:24,780 --> 00:06:27,300
So there are more we'll see that in the console.

92
00:06:27,480 --> 00:06:31,270
Let's head over there now and start creating our first auto scaling group.

93
00:06:31,680 --> 00:06:32,950
So I'm back in 82.

94
00:06:33,390 --> 00:06:38,640
I'm going to come down to auto scanning groups here and I'm going to collect freight and also scanning

95
00:06:38,640 --> 00:06:38,970
group.

96
00:06:39,210 --> 00:06:41,120
I'm going to just call this one.

97
00:06:41,760 --> 00:06:46,650
And here we can actually create a launch template so we don't actually have one at the moment.

98
00:06:46,660 --> 00:06:51,020
I have some launch config from before, but I want to show you how to create one new.

99
00:06:51,300 --> 00:06:53,400
So let's click on create a launch template.

100
00:06:54,420 --> 00:07:01,230
And this actually takes us into the launch template console, and I'm going to call this launch template

101
00:07:01,350 --> 00:07:04,630
one, so let's scroll down and see what we need to configure.

102
00:07:05,130 --> 00:07:08,760
So firstly, I want to select my Amazon the next two, am I?

103
00:07:08,940 --> 00:07:10,730
So that's the first one at the top here.

104
00:07:11,720 --> 00:07:18,470
I can choose the instance type well, I want to keep this in the freezer, so let's go for two micro.

105
00:07:19,470 --> 00:07:21,040
I can choose my keeper.

106
00:07:21,180 --> 00:07:27,780
I've just got one, so let's select that one, we can put it in a VPC and I'm also going to choose my

107
00:07:27,780 --> 00:07:28,940
security group as well.

108
00:07:30,040 --> 00:07:35,500
You can then do things like configure the storage volumes to resource tanks and the network interfaces,

109
00:07:35,680 --> 00:07:38,270
and then there's more advanced details here as well.

110
00:07:39,070 --> 00:07:44,740
So if we come down to advanced details, you see, you can request spot instances, configure the shutdown

111
00:07:44,740 --> 00:07:45,400
behavior.

112
00:07:46,230 --> 00:07:50,340
And there's quite a lot of options that are not going to go through all of those now at the bottom.

113
00:07:50,580 --> 00:07:54,390
We have user data, so let's go and grab our user data again.

114
00:07:54,870 --> 00:07:57,240
So I copied my user data to my clipboard.

115
00:07:57,600 --> 00:08:00,480
Same stuff we used earlier and I've just posted that in.

116
00:08:00,960 --> 00:08:06,450
And the last thing we need to do is come up and just remember to connect our instance profile.

117
00:08:06,450 --> 00:08:08,680
So that's how we connect Iam role.

118
00:08:08,700 --> 00:08:11,390
So I need S3 READ-ONLY permissions here.

119
00:08:11,910 --> 00:08:12,900
So that's everything.

120
00:08:12,900 --> 00:08:17,820
I'm going to create that launch template, click on View Launch Templates and now we've got this new

121
00:08:17,820 --> 00:08:18,050
one.

122
00:08:18,780 --> 00:08:21,500
Now we have to go back and just restart this with it.

123
00:08:21,720 --> 00:08:24,450
So let's go back in and create our auto scanning group.

124
00:08:24,870 --> 00:08:26,070
Call it ASG one.

125
00:08:26,970 --> 00:08:28,290
Choose the launch template.

126
00:08:29,480 --> 00:08:30,410
Click on next.

127
00:08:31,350 --> 00:08:37,020
Now, this is where you could combine on demand and spot capacity so you can combine purchase options

128
00:08:37,020 --> 00:08:38,530
when you're using a launch template.

129
00:08:39,060 --> 00:08:42,350
We're going to stick to just adhering to the launch template.

130
00:08:42,720 --> 00:08:48,200
I'm going to select two subnets to aim to be click on next.

131
00:08:48,570 --> 00:08:52,780
I can enable load balancing here, so I'm going to actually attach my target group one.

132
00:08:53,340 --> 00:08:55,580
So remember that you attach the target group.

133
00:08:55,860 --> 00:08:58,530
You don't actually attach the load balancer, you attach the target group.

134
00:08:58,530 --> 00:08:59,790
And that has the same effect.

135
00:09:00,450 --> 00:09:02,480
I'm going to enable Elby health checks.

136
00:09:02,490 --> 00:09:03,360
I'll talk about that.

137
00:09:03,360 --> 00:09:06,540
Two different types of health check in the next lesson in more detail.

138
00:09:07,050 --> 00:09:08,610
And let's click on Next.

139
00:09:10,080 --> 00:09:18,090
This is where we can adjust our capacity, so to start with, let's put it at two to and too, so that's

140
00:09:18,090 --> 00:09:22,560
just going to have a design capacity or to the minimum is going to be to in the maximum is going to

141
00:09:22,560 --> 00:09:22,950
be two.

142
00:09:22,960 --> 00:09:27,450
So it should just launch two instances and register those of our load balancer.

143
00:09:28,020 --> 00:09:30,450
So we're not using any kind of screening policy.

144
00:09:30,450 --> 00:09:33,240
Will look at those more later on in the section.

145
00:09:33,840 --> 00:09:35,900
You can enable scale in protection.

146
00:09:35,910 --> 00:09:39,670
That means the auto scanning group will not terminate instances.

147
00:09:40,170 --> 00:09:41,130
I don't want to do that.

148
00:09:41,130 --> 00:09:42,360
So I'm going to click on next.

149
00:09:43,140 --> 00:09:47,730
I don't need any notifications or tags, so I just go free to review.

150
00:09:48,210 --> 00:09:49,440
It all looks good to me.

151
00:09:49,590 --> 00:09:51,540
So let's create the auto scanning group.

152
00:09:52,400 --> 00:09:58,280
So that should go ahead now and it's going to launch those two instances and then it's going to register

153
00:09:58,280 --> 00:10:02,870
them with the target group, so we should find that they're available for our load balancer shortly.

154
00:10:03,260 --> 00:10:05,110
Now let's have a look at what's going on.

155
00:10:05,780 --> 00:10:07,250
So I head up to instances.

156
00:10:08,490 --> 00:10:11,670
And sure enough, I've got these two pending instances here.

157
00:10:12,690 --> 00:10:19,290
So let's go and have a look at our auto scaling group, and here we can see plenty of information about

158
00:10:19,290 --> 00:10:20,400
the auto scanning group.

159
00:10:20,700 --> 00:10:22,500
So you can check the configuration here.

160
00:10:22,980 --> 00:10:26,370
We've got some activity, so you'll see some entries.

161
00:10:26,370 --> 00:10:29,730
So here it's telling us that it's launching two different instances.

162
00:10:30,420 --> 00:10:35,180
We can look at these scanning options here, the screening policies, which will cover again shortly.

163
00:10:36,000 --> 00:10:38,250
You can look at the instances here and manage them.

164
00:10:38,790 --> 00:10:40,650
And then we've got a monitoring tab as well.

165
00:10:40,650 --> 00:10:44,290
So you can monitor what's going on with your auto scanning group.

166
00:10:44,490 --> 00:10:49,140
Now, you do need to enable this metric collection as well.

167
00:10:49,170 --> 00:10:53,550
So if you want to see that information here, you just need to go ahead and enable it.

168
00:10:55,300 --> 00:11:00,920
Or you can have a look at the EU level as well, so that will be using the EU standard metrics.

169
00:11:01,330 --> 00:11:04,120
So let's now go and have a look at our target group.

170
00:11:06,040 --> 00:11:12,910
And so we should see that we have some targets coming in, our target one here and sure enough, here

171
00:11:12,910 --> 00:11:14,690
they are and they're healthy already.

172
00:11:15,340 --> 00:11:22,390
So now if we go to our labor answer, we should find that we're able to connect to our two instances.

173
00:11:22,630 --> 00:11:28,150
So we've put in the DNS name and now we've got Ravon and I've hit refresh and I'm not getting the other

174
00:11:28,150 --> 00:11:30,480
one because I've left sticky sessions on.

175
00:11:30,730 --> 00:11:34,040
So let's go back and disable sticky sessions for our target group.

176
00:11:34,450 --> 00:11:37,960
So I wanted to show you that because I know that you might have done the same thing.

177
00:11:38,200 --> 00:11:43,970
So let's go into target group, edit attributes and just disable stickiness.

178
00:11:44,500 --> 00:11:50,080
So now by the time that load balancer Cookie expires, we should then be able to refresh and head our

179
00:11:50,080 --> 00:11:51,310
two different instances.

180
00:11:51,790 --> 00:11:57,070
So now I'm able to cycle and we've got these two instances called Raven and Kensi.

181
00:11:57,080 --> 00:11:58,150
So that's all looking good.

182
00:11:58,620 --> 00:11:59,820
So that's it for this lesson.

183
00:11:59,830 --> 00:12:02,650
Keep your configuration running because we've got more work to do on it.

