WEBVTT
1
00:00:05.390 --> 00:00:11.030
So we've created our custom VPC, and I'd just like to test it now, so we're going to launch some easy

2
00:00:11.030 --> 00:00:16.430
two instances two instances in two different public subnets and one in a private subnet.

3
00:00:16.880 --> 00:00:19.460
And what are you going to do that via the command line?

4
00:00:19.610 --> 00:00:21.620
It's really useful to know the command line.

5
00:00:21.860 --> 00:00:27.240
Now, not all exams require you to know the command line safe at a solutions architects associate.

6
00:00:27.530 --> 00:00:29.960
It doesn't really matter too much for the developer.

7
00:00:29.960 --> 00:00:34.640
It does a bit more for certain services and definitely for the systems ops exam.

8
00:00:35.010 --> 00:00:41.000
Now, whatever exam you're doing or whatever career path you're taking in IWC, it's still a really

9
00:00:41.000 --> 00:00:42.830
useful skill to have.

10
00:00:43.070 --> 00:00:45.110
So it's definitely worth learning the command line.

11
00:00:45.680 --> 00:00:51.080
So we'll launch some instances using the command line and then we'll use those instances just to test

12
00:00:51.080 --> 00:00:52.730
connectivity with each other.

13
00:00:53.030 --> 00:00:56.090
There's a couple of things I want to do before we get started there.

14
00:00:56.120 --> 00:01:02.960
Firstly, I want to create a NAT Gateway, so I'm in the VPC management console under NAT gateways.

15
00:01:03.170 --> 00:01:04.430
Let's create a NAT gateway.

16
00:01:04.850 --> 00:01:09.290
I'm just going to call it my Nat GW, and I need to select a subnet.

17
00:01:09.620 --> 00:01:13.610
Now, remember, with NAT gateways, they always go in public subnets.

18
00:01:13.910 --> 00:01:15.970
So here I'm going to choose public one.

19
00:01:17.330 --> 00:01:20.600
And that I know is within the correct VPC as well.

20
00:01:21.110 --> 00:01:22.850
So connectivity is public.

21
00:01:23.240 --> 00:01:27.110
We allocate an elastic IP and then just create the NAT Gateway.

22
00:01:27.410 --> 00:01:31.640
Now, of course, it won't work until we update the root table for our private subnets.

23
00:01:31.940 --> 00:01:40.280
So under root tables, let's choose the private party, go to routes, edit routes, add route and we're

24
00:01:40.280 --> 00:01:43.290
going to specify zero zero zero zero.

25
00:01:43.790 --> 00:01:48.260
And this time it's going to be a NAT Gateway and would choose that Nat Gateway idea.

26
00:01:48.830 --> 00:01:54.740
Now our private subnets will have access to the internet, and that's important because when our instance

27
00:01:54.740 --> 00:01:59.360
launches, we're going to run some user data and that's going to connect to the internet to download

28
00:01:59.570 --> 00:02:01.470
some binaries for HD TPD.

29
00:02:02.450 --> 00:02:06.770
Next thing is, under security groups, we need a security group.

30
00:02:07.310 --> 00:02:08.840
Let's create a security group.

31
00:02:09.260 --> 00:02:10.340
I'm going to call it public.

32
00:02:10.340 --> 00:02:10.910
That's web.

33
00:02:11.330 --> 00:02:17.070
Give it a description and make sure I select my VPC for outbound rules.

34
00:02:17.090 --> 00:02:21.720
By default, it allows all traffic to any destination for inbound.

35
00:02:21.740 --> 00:02:26.810
Just for now, we're going to add all traffic from any destination.

36
00:02:26.810 --> 00:02:28.310
So this is very open.

37
00:02:28.520 --> 00:02:33.380
Don't worry, we're going to lock it down in a subsequent lesson and practice with some different security

38
00:02:33.380 --> 00:02:34.460
group configurations.

39
00:02:34.790 --> 00:02:36.500
But for now, let's just open everything up.

40
00:02:37.280 --> 00:02:40.490
I'm going to create my security group and that's ready to use.

41
00:02:40.880 --> 00:02:47.750
There's a fall in your course download and that's in the code Amazon VPC directory and it's IWC Seelye

42
00:02:47.960 --> 00:02:49.190
run instances.

43
00:02:49.580 --> 00:02:52.880
We need to add some values into this file.

44
00:02:53.090 --> 00:02:59.870
The first thing we need to do for this command is specify an image IP, so the command is easy to run

45
00:02:59.870 --> 00:03:04.280
dash instances, and these are the values that we need to specify.

46
00:03:04.730 --> 00:03:08.210
So first, let's find the am-I I.D. that we want to use.

47
00:03:08.600 --> 00:03:14.450
am-I IDs are region specific, so we've got to make sure that everything we do in this lesson is within

48
00:03:14.450 --> 00:03:15.260
the same region.

49
00:03:15.600 --> 00:03:18.170
It's also where you created your custom BPC.

50
00:03:18.650 --> 00:03:20.120
So for me, that's Norfolk, Virginia.

51
00:03:20.300 --> 00:03:21.500
Hopefully, it's the same for you.

52
00:03:22.040 --> 00:03:26.170
Let's launch an instance next to the Amazon, the next to am-I.

53
00:03:26.690 --> 00:03:28.460
Let's grab this am-I ID.

54
00:03:28.730 --> 00:03:30.380
Don't take anything in brackets there.

55
00:03:30.830 --> 00:03:32.030
Copy that to the clipboard.

56
00:03:33.230 --> 00:03:34.460
Come back and paste it.

57
00:03:34.460 --> 00:03:37.460
In the instance type, we can just type this in.

58
00:03:37.460 --> 00:03:41.770
It's just going to be two dot micro four security group ideas.

59
00:03:41.780 --> 00:03:44.270
Let's go back and find the idea of our security group.

60
00:03:44.630 --> 00:03:47.300
I can see my public web access security group.

61
00:03:47.450 --> 00:03:48.920
Let's just copy that security group.

62
00:03:48.920 --> 00:03:52.130
I'd come back and paste that one in.

63
00:03:53.330 --> 00:03:54.680
Then we need the subnet ID.

64
00:03:55.250 --> 00:03:58.800
This time I'm back in the VPC management console.

65
00:03:59.060 --> 00:04:01.190
Let's go to subnets first.

66
00:04:01.190 --> 00:04:06.770
I want the public one, a subnet I.D. So I'm just going to copy that to my clipboard.

67
00:04:07.070 --> 00:04:11.180
Key name is the keeper that you're using in this specific region.

68
00:04:11.660 --> 00:04:17.840
Back in EC2, you can go to KeePass if you don't remember what it is and just copy this name and we

69
00:04:17.840 --> 00:04:18.230
can paste.

70
00:04:18.230 --> 00:04:18.550
I did.

71
00:04:18.860 --> 00:04:21.590
Lastly, there's some user data that we're going to specify.

72
00:04:22.130 --> 00:04:23.900
Now this is the user data file.

73
00:04:24.290 --> 00:04:30.680
What it does is it runs a web server and then it creates a couple of variables from the metadata where

74
00:04:30.680 --> 00:04:32.180
actually grabs the subnet ID.

75
00:04:32.690 --> 00:04:38.210
And it basically just puts that into a simple web page so we can see where the instance is running in

76
00:04:38.210 --> 00:04:38.840
our command here.

77
00:04:38.850 --> 00:04:41.480
We just need to specify the name of that file.

78
00:04:41.930 --> 00:04:48.260
Now what you want to do is change to your Amazon VPC directory, where we have all of this information

79
00:04:48.710 --> 00:04:50.030
and this is where the file is.

80
00:04:50.420 --> 00:04:51.890
So copy that to your clipboard.

81
00:04:52.010 --> 00:04:58.520
Make sure you have the file colon slash slash, then the name of your file.

82
00:04:59.480 --> 00:05:03.050
Now let's copy this and make sure it works before we fill out the other two.

83
00:05:03.500 --> 00:05:04.820
Now you will have to run.

84
00:05:05.310 --> 00:05:10.350
We configure before you do this exercise, you should have specified an access code.

85
00:05:10.680 --> 00:05:17.250
Secret Access Key and your region must be the same as the region where we're trying to deploy our instances

86
00:05:17.250 --> 00:05:23.940
now sometimes, well, good that's placed in this command and run the command that appears successful.

87
00:05:24.180 --> 00:05:29.970
And we can see that we have an instance running in US East one eye and it's quite a bit of information

88
00:05:30.060 --> 00:05:32.400
if you just spacebar and go down the page.

89
00:05:33.090 --> 00:05:34.980
So let's go into EC2 and check.

90
00:05:34.980 --> 00:05:39.390
It's launching Ashkenazy, so I can say I have this instance at the bottom here running.

91
00:05:39.930 --> 00:05:43.290
Now I'm just going to label this one as public.

92
00:05:44.110 --> 00:05:44.590
One.

93
00:05:44.980 --> 00:05:52.180
So I know which one it is now, the next thing we need to do is to go back over to the VPC management

94
00:05:52.180 --> 00:05:52.750
console.

95
00:05:53.320 --> 00:05:59.830
Take the subnet I.D. of public 1B and come back to our fall and we're going to use this one.

96
00:06:00.460 --> 00:06:02.920
So what we can do is copy all of this.

97
00:06:03.760 --> 00:06:09.880
Put it in one b here, and then I'm going to take this subnet I.D. and just overwrite this one here.

98
00:06:10.300 --> 00:06:16.270
So we should now be able to launch in the public one b as copy this to a clipboard, come back and paste

99
00:06:16.270 --> 00:06:16.570
it in.

100
00:06:16.870 --> 00:06:17.560
That looks good.

101
00:06:17.950 --> 00:06:21.460
If I refresh the page here, we have this pending instance.

102
00:06:22.090 --> 00:06:23.650
That's the public one be.

103
00:06:24.010 --> 00:06:26.350
So I'll just get on the label so we know which one it is.

104
00:06:27.040 --> 00:06:32.470
And then lastly, we're going to launch the instance in our private subnet.

105
00:06:32.950 --> 00:06:37.690
So again, I just need to get the subnet ID for private 1B.

106
00:06:38.140 --> 00:06:41.110
So I've copy that to my clipboard, come back in.

107
00:06:41.620 --> 00:06:42.820
And now we have the command.

108
00:06:43.210 --> 00:06:44.770
And this user data should run.

109
00:06:44.950 --> 00:06:45.580
OK.

110
00:06:45.790 --> 00:06:50.570
In the private subnet, because we're able to connect out to the internet via the NAT Gateway.

111
00:06:50.920 --> 00:06:53.860
So I paste this in here, Enza, and we go.

112
00:06:53.860 --> 00:06:55.240
We should have another instance.

113
00:06:55.870 --> 00:06:58.900
Back in EC2, I can see my pending instance here.

114
00:06:58.900 --> 00:07:02.350
So let's call this one private one be great.

115
00:07:02.350 --> 00:07:03.640
So I have these instances.

116
00:07:03.640 --> 00:07:06.060
Let's just give a refresh and see where we're at.

117
00:07:06.130 --> 00:07:10.930
So a couple of them are running this sort by name that might make things a bit easier.

118
00:07:11.500 --> 00:07:17.560
I'm just going to copy to my clipboard the public IP for public one 1A and paste this into a browser

119
00:07:17.560 --> 00:07:17.980
window.

120
00:07:18.310 --> 00:07:25.000
And I get this web page and it gives me the subnet I.D. So that should correspond with the subnet for

121
00:07:25.150 --> 00:07:26.320
public one, eh?

122
00:07:26.710 --> 00:07:27.430
So that's great.

123
00:07:27.430 --> 00:07:31.540
We've proved that we can connect from the internet to our active instance.

124
00:07:31.960 --> 00:07:38.070
Now the other thing I want to do is connect between my two instances back in the console here.

125
00:07:38.080 --> 00:07:41.140
What I'm going to do is connect to public one.

126
00:07:41.140 --> 00:07:43.960
I use the AC to instance connect.

127
00:07:44.350 --> 00:07:48.100
And while that's just connecting, let's come back next.

128
00:07:48.100 --> 00:07:54.580
I want to get the private IP address of my public B instance, and that's 10 zero to 25.

129
00:07:55.120 --> 00:07:59.680
And let's just change back to the AC to instance connect.

130
00:08:00.190 --> 00:08:06.790
And I'm going to ping 10.0 Dot to Dot 25, and let's see if that responds.

131
00:08:07.600 --> 00:08:16.060
So that proves that we have connectivity to our instance in the other public subnet public subnet 1B.

132
00:08:16.300 --> 00:08:18.580
So we have two way connectivity.

133
00:08:18.850 --> 00:08:20.490
The response is coming back as well.

134
00:08:20.500 --> 00:08:21.160
So that's great.

135
00:08:21.550 --> 00:08:25.300
Lastly, let's check that we can connect to our private subnet.

136
00:08:25.780 --> 00:08:28.360
So let's see what the private IP address is.

137
00:08:28.360 --> 00:08:30.490
It's 10 zero four one four, right?

138
00:08:30.880 --> 00:08:38.170
So let's ping 10.0 dot for Dot one for rates, and let's see if that works, and it does.

139
00:08:38.170 --> 00:08:40.030
So we get an ICMP response.

140
00:08:40.510 --> 00:08:41.230
So that's great.

141
00:08:41.230 --> 00:08:43.990
That shows that we have that connectivity working.

142
00:08:44.440 --> 00:08:49.330
One other thing we could do from here is see if we can connect to that web page.

143
00:08:49.660 --> 00:08:57.430
So we'll use the call command and specify 10.0 Dot for Dot 148 and hit enter.

144
00:08:58.030 --> 00:09:03.910
And we get a response here that says this instance is in the subnet with I.D. and it gives us the subnet

145
00:09:03.910 --> 00:09:04.330
IP.

146
00:09:04.750 --> 00:09:12.250
So that's the H1 header for the HDMI web page that we have on that website, so we can see that we have

147
00:09:12.250 --> 00:09:14.170
Port 80 open as well.

148
00:09:14.350 --> 00:09:19.420
We're able to connect to the instance in the private subnet, and we can also infer from that that the

149
00:09:19.420 --> 00:09:24.010
instance can connect out to the internet because it was able to install that web service.

150
00:09:24.490 --> 00:09:27.010
So that's it for our connectivity testing for now.

151
00:09:27.280 --> 00:09:32.080
Now I'm going to leave all of these instances and the Nat Gateway running because we're going to come

152
00:09:32.080 --> 00:09:37.000
back and carry on when we do some testing with security groups and network actors.

