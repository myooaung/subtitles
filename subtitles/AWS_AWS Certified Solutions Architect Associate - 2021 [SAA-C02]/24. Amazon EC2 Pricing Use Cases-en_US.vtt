WEBVTT
1
00:00:05.080 --> 00:00:10.780
So let's have a look at some particular use cases and try and work out which model is best for us.

2
00:00:11.140 --> 00:00:18.250
So we've got on demand reserved scheduled, reserved spot instances, dedicated instances and dedicated

3
00:00:18.250 --> 00:00:18.700
hosts.

4
00:00:19.660 --> 00:00:25.270
So a developer is working on a small project for several hours and cannot be interrupted.

5
00:00:25.660 --> 00:00:28.210
So you might call that an ad hoc requirement.

6
00:00:28.220 --> 00:00:29.680
So which model is best for that?

7
00:00:30.190 --> 00:00:31.570
Well, I'm going to go with on demand.

8
00:00:32.790 --> 00:00:39.120
Next up, we have a compute intensive, cost sensitive, distributed computing environment that can

9
00:00:39.120 --> 00:00:40.830
withstand interruption.

10
00:00:41.490 --> 00:00:45.630
So to me, that sounds like a good use case for a spot instance.

11
00:00:46.140 --> 00:00:52.020
So whenever you can withstand interruption, but you need to lower costs, like maybe you're launching

12
00:00:52.020 --> 00:00:58.680
hundreds of servers or thousands of service in order to compute a certain workload, then spot is going

13
00:00:58.680 --> 00:00:59.940
to be a good option that.

14
00:01:01.730 --> 00:01:07.670
What if we have a steady state business critical line of business applications with continuous demand?

15
00:01:08.360 --> 00:01:10.920
In other words, this application is core to the business.

16
00:01:10.940 --> 00:01:12.020
It's not going anywhere.

17
00:01:12.440 --> 00:01:14.000
So what's the best model for it?

18
00:01:14.540 --> 00:01:19.970
Well, in that case, reserved instances is going to be the best because we can commit to a long time

19
00:01:19.970 --> 00:01:20.390
frame.

20
00:01:20.630 --> 00:01:25.640
It can't be interrupted because it's critical to the business, so we wouldn't want to use spots.

21
00:01:25.970 --> 00:01:28.100
But reserved is going to be the best option that.

22
00:01:29.110 --> 00:01:34.480
Next up, we have a reporting application that runs for six hours a day, four days a week.

23
00:01:34.810 --> 00:01:36.580
So what's going to be a good option for that?

24
00:01:36.910 --> 00:01:38.830
Well, I'm going to go with scheduled reserved.

25
00:01:39.280 --> 00:01:43.870
And remember, that's scheduled reserved is something that seems to be deprecated now.

26
00:01:44.050 --> 00:01:45.700
So it's not going to be around for long.

27
00:01:45.710 --> 00:01:48.820
But it is still a new exam, which is why I want to cover it off.

28
00:01:50.460 --> 00:01:53.640
What about if we have a database with per socket licensing?

29
00:01:53.850 --> 00:01:56.190
Well, in that case, you'd want a dedicated host.

30
00:01:58.360 --> 00:02:04.960
The next use case is a security sensitive application that requires dedicated hardware and per instance,

31
00:02:04.960 --> 00:02:05.350
billing.

32
00:02:06.100 --> 00:02:08.620
Well, that I'm going to put on a dedicated instance.

33
00:02:09.640 --> 00:02:10.660
That's it for this session.

34
00:02:10.660 --> 00:02:15.400
Just wanted to cover a few off to give you an idea of the type of logic you're going to be using and

35
00:02:15.400 --> 00:02:18.110
the type of use cases that come up in exam questions.

36
00:02:18.430 --> 00:02:24.070
So you'll just need to be able to work out which model to map a particular use case to.

37
00:02:24.460 --> 00:02:25.430
So I hope that was useful.

38
00:02:25.450 --> 00:02:26.890
I'll see you in the next lesson.

