WEBVTT
1
00:00:02.290 --> 00:00:03.020
Hi guys.

2
00:00:03.110 --> 00:00:06.880
In this now we're going to look at EC2 status checks and monitoring.

3
00:00:06.880 --> 00:00:12.610
We still have an instance running from the previous lab and I'm looking at the status checks if you

4
00:00:12.610 --> 00:00:19.060
don't have an instance running just install an instance and what I want you to do is make sure you choose

5
00:00:19.060 --> 00:00:25.690
the Amazon the next to AEMI and obviously the T2 to micro stays within the free tier and just put

6
00:00:25.690 --> 00:00:29.580
it in your web access security group so you have secure shall access to it.

7
00:00:29.830 --> 00:00:31.510
And that's all you need to do.

8
00:00:31.540 --> 00:00:37.390
So when you have an instance running you'll see that you have some status checks here.

9
00:00:37.430 --> 00:00:44.360
These are easy to status checks and they're performed every minute and even return a pass or fail status

10
00:00:46.260 --> 00:00:52.140
if all the checks pass the overall status of the instance is okay.

11
00:00:52.140 --> 00:00:56.940
However if one or more checks fail the overall status is set to impaired.

12
00:00:56.940 --> 00:01:06.000
We have system status checks and instant status checks system status checks off problems with your instance

13
00:01:06.030 --> 00:01:09.260
that require AWS involvement to repair.

14
00:01:09.270 --> 00:01:10.730
So that's a good way to remember it.

15
00:01:10.740 --> 00:01:16.830
Just think when it's a systems status problem it's related to something that AWS needs to troubleshoot

16
00:01:17.880 --> 00:01:20.250
with instance status checks

17
00:01:20.250 --> 00:01:27.490
this is more about problems that involve the operating system and therefore you need to work on it.

18
00:01:27.540 --> 00:01:34.350
You can't enable or disable status checks but you can create or delete alarms that are triggered based

19
00:01:34.350 --> 00:01:36.520
on the result of status checks.

20
00:01:36.600 --> 00:01:38.760
And that's something we're going to look at shortly.

21
00:01:39.060 --> 00:01:45.390
If we go to the monitoring tab and I'm just going to pull this up so we can see a bit more information

22
00:01:45.390 --> 00:01:48.510
here we can see that we have cloudwatch alarms.

23
00:01:48.510 --> 00:01:57.480
Now cloudwatch is a service used for monitoring so it reports operational information using metrics

24
00:01:57.480 --> 00:02:03.950
that are collected from services within AWS and you can see we have no alarms configured here.

25
00:02:03.960 --> 00:02:06.210
We're going to create one shortly.

26
00:02:06.240 --> 00:02:07.620
Now there's two different types.

27
00:02:07.620 --> 00:02:14.160
You have basic monitoring which means every five minutes and you have detailed monitoring which is every

28
00:02:14.160 --> 00:02:15.180
1 minute.

29
00:02:15.480 --> 00:02:19.110
If you enable detailed monitoring you do have to pay for it.

30
00:02:19.620 --> 00:02:26.040
So as you can see you can enable it for the instance and it will change to one minute frequency of metric

31
00:02:26.040 --> 00:02:27.570
collection.

32
00:02:27.570 --> 00:02:29.540
I don't need to enable that for this lab.

33
00:02:30.000 --> 00:02:37.740
So what we're going to do is we're going to enable alarm that triggers when our CPU utilization reaches

34
00:02:37.740 --> 00:02:39.360
a certain threshold.

35
00:02:39.480 --> 00:02:43.680
You can see that quite a few metrics in here that you could use.

36
00:02:43.800 --> 00:02:51.150
But what I want to do is choose creates alarm and what I'm going to do rather than sending a notification

37
00:02:51.420 --> 00:02:58.200
I'm going to take an action and what I'm going to do is terminate the instance and it's going to do

38
00:02:58.200 --> 00:03:07.950
that when the average of CPU utilization is greater than or equal to 80 percent for at least one consecutive

39
00:03:07.950 --> 00:03:09.850
period of five minutes.

40
00:03:10.050 --> 00:03:14.300
And I'm just going to leave the default name for the alarm and choose cried alarm.

41
00:03:15.960 --> 00:03:22.580
So now what will happen is if our utilization of the CPU hits 80 percent or more.

42
00:03:22.950 --> 00:03:28.730
The instance is going to be shut down and terminated by a.

43
00:03:28.800 --> 00:03:34.200
And that's because we have an alarm that will be triggered with an action that says to terminate the

44
00:03:34.200 --> 00:03:35.420
instance.

45
00:03:35.430 --> 00:03:42.690
So what we want to do now is actually trigger this alarm and I'm going to head over to the command line

46
00:03:42.690 --> 00:03:47.800
to do that among the command line in my instance and I need to run this command.

47
00:03:48.180 --> 00:03:53.310
And this installs some repositories from where we can get the stress to which I'm going to use

48
00:03:57.640 --> 00:04:01.540
I'm then going to run sudo yum install stress bash Y

49
00:04:05.710 --> 00:04:09.650
and that's installed the stress tool and I can now clear my screen.

50
00:04:09.680 --> 00:04:14.290
So what this will do is it will actually generate stress on the CPU.

51
00:04:14.450 --> 00:04:19.280
If you just put in dash help or it;s two dashes help maybe yeah.

52
00:04:19.340 --> 00:04:19.790
There we go.

53
00:04:19.790 --> 00:04:26.440
So we've got a series of command line options that we can apply what I'm gonna do is run stress bash

54
00:04:26.450 --> 00:04:33.700
c 8 and what the c command does is it spawns a certain amount of workers and I'm going to choose a and

55
00:04:33.710 --> 00:04:40.270
that's going to generate quite a lot of load on the CPU so let's hit enter and that's going to start

56
00:04:41.050 --> 00:04:46.010
and we can go back to our console and watch what's happening.

57
00:04:46.170 --> 00:04:52.000
Now you can always choose here and you can see what's going on but it's gonna take a bit of time because

58
00:04:52.120 --> 00:04:57.100
we only have basic cloud watch monitoring at this stage so it's only going to pick it up every five

59
00:04:57.100 --> 00:05:05.040
minutes so be a few minutes before it realizes that the CPU is heavily loaded and then it might be another

60
00:05:05.040 --> 00:05:10.560
few minutes before it then sees that it's still in that state and terminates the instance while we're

61
00:05:10.560 --> 00:05:12.360
waiting for that to occur.

62
00:05:12.480 --> 00:05:19.500
We can just have a look into the cloudwatch alarms here and if we choose view more options it opens

63
00:05:19.500 --> 00:05:24.990
to cloudwatch management console and so in here you can see a bit more detail and you can see that

64
00:05:24.990 --> 00:05:29.280
our alarm is in the status of okay so there's nothing wrong at this stage.

65
00:05:29.280 --> 00:05:35.140
Cloudwatch isn't aware there being any heavy load on the CPU. Bback in EC2

66
00:05:35.220 --> 00:05:41.820
we can see that our CPU load has gone way up now according to this is not quite 80 but I think it probably

67
00:05:41.820 --> 00:05:47.640
is and we'll see whether the next metric whether it has exceeded that threshold and caused the alarm

68
00:05:47.640 --> 00:05:49.160
to be triggered.

69
00:05:49.160 --> 00:05:55.740
So a few more minutes have gone past and we can now see that another metric has come in and it's hit

70
00:05:55.740 --> 00:05:57.230
100 percent CPU.

71
00:05:57.570 --> 00:06:03.060
So we should soon see that our long gets triggered head over the cloud watch and have a look and sure

72
00:06:03.060 --> 00:06:05.340
enough we are no longer okay.

73
00:06:05.370 --> 00:06:11.610
We've now gone to a red one to say that we're in an alarm state so let's go back and see what happens

74
00:06:11.610 --> 00:06:12.790
to our instance.

75
00:06:12.790 --> 00:06:14.310
And sure enough there you go.

76
00:06:14.340 --> 00:06:19.940
It's been terminated and you can see here that it's an alarm that caused that termination.

77
00:06:20.610 --> 00:06:26.400
So that's just taught you a little bit about monitoring and status checks and also cloud watch and how

78
00:06:26.400 --> 00:06:32.220
you can create alarms that trigger on certain events that are happening to your resources.

79
00:06:32.220 --> 00:06:37.110
So I hope that was a fun lab for you and what we're going to do in the next lab is we're gonna have

80
00:06:37.110 --> 00:06:40.470
a session on public private and elastic IP addresses.

