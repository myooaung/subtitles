1
00:00:02,370 --> 00:00:02,980
Hi guys.

2
00:00:03,000 --> 00:00:06,360
In this lab we're going to cover cross account access.

3
00:00:06,390 --> 00:00:08,130
Now there's a couple of ways you can do this.

4
00:00:08,130 --> 00:00:13,500
You can even do it through policies or you can do it through access control lists and what we're going

5
00:00:13,500 --> 00:00:17,540
to focus on in this particular lab is on using policies.

6
00:00:17,760 --> 00:00:20,690
And then we're going to cover off access control lists.

7
00:00:20,790 --> 00:00:27,930
And I'm going to show you how to access data across accounts using ACLs in the next lab.

8
00:00:27,930 --> 00:00:34,260
So for now what we want to do is we want to enable this user John who's in Account B to access data

9
00:00:34,290 --> 00:00:39,210
in a bucket which is an Account A which is our DCT Labs account that we've been using throughout this

10
00:00:39,210 --> 00:00:39,760
course.

11
00:00:40,380 --> 00:00:46,560
So we've already got our bucket and we've got some folders set up and I specifically want to allow John

12
00:00:46,800 --> 00:00:54,770
to be able to read the bucket but also to write and read and write from the confidential folder.

13
00:00:56,010 --> 00:01:02,280
So the way we set this up and it does get a bit complicated which is why I wanted to show you in a diagram

14
00:01:02,280 --> 00:01:10,850
as well is we need to set up a role in accounts and we give that role permissions to the bucket.

15
00:01:10,880 --> 00:01:12,270
So there's no bucket policy here.

16
00:01:12,270 --> 00:01:20,450
The role the ACL is attached directly as an inline policy to the role John then has a policy attached

17
00:01:20,450 --> 00:01:31,110
to him which allows the ability to assume this role so when John can assume this role he then gains

18
00:01:31,110 --> 00:01:36,350
the permissions that are assigned to this role and he's then able to access the data in the bucket.

19
00:01:36,480 --> 00:01:38,870
So let's look at how this works.

20
00:01:38,880 --> 00:01:42,390
So what I've done already is I've set this up.

21
00:01:42,570 --> 00:01:51,580
So what I want to do is just show you through the console what I've actually done so we've got

22
00:01:51,580 --> 00:01:52,120
an account.

23
00:01:52,210 --> 00:01:56,500
So this is an account in the DCT labs account.

24
00:01:56,500 --> 00:02:00,670
And what I've done is I've created a role called account B.S. free.

25
00:02:00,670 --> 00:02:06,220
So the purpose of this is to allow users and roles in Account B to assume this role and access S3

26
00:02:07,860 --> 00:02:10,520
so let's go in and have a look at this role.

27
00:02:10,870 --> 00:02:14,900
So you can see that there is a policy here but I'll come to that shortly.

28
00:02:14,950 --> 00:02:20,300
Firstly let's have a look at trust relationships.

29
00:02:20,710 --> 00:02:27,760
So what we're looking at here in this trust relationship is we're granting the user John who is in account

30
00:02:27,790 --> 00:02:28,440
B.

31
00:02:28,450 --> 00:02:31,110
So this is the ARN for the user.

32
00:02:31,340 --> 00:02:40,460
In the other account to assume a role so STS stands for the security token service and allows you to

33
00:02:40,460 --> 00:02:42,830
take short term credentials.

34
00:02:42,860 --> 00:02:51,380
So what's happening is John will be given some credentials that allow him to use the role for a temporary

35
00:02:51,380 --> 00:02:52,210
period of time

36
00:02:55,780 --> 00:03:00,470
so the next thing is we have a policy called allow get/put confidential.

37
00:03:00,490 --> 00:03:07,210
So this is going to allow the user to get and put objects in the confidential folder.

38
00:03:07,360 --> 00:03:13,270
So if we just have a look at the JSON here we can see that we have some statements that allow us to

39
00:03:13,360 --> 00:03:20,200
list all buckets in the estuary accounts so using a wild card then to list bucket and get bucket location

40
00:03:20,290 --> 00:03:27,940
which you'll remember is required for when you're having when you need console based access and then

41
00:03:27,990 --> 00:03:34,120
and that's to the DCT company bucket and then we have the specific permissions which we're going to

42
00:03:34,120 --> 00:03:43,750
allow for getting objects and puts object within the confidential folder and anything benefits so that's

43
00:03:43,750 --> 00:03:45,510
what's going on in accounts.

44
00:03:45,550 --> 00:03:49,570
A So just to recap what we've just looked at.

45
00:03:49,580 --> 00:03:56,120
There is an account saying we have the role the role is allowing John through the trust relationship to

46
00:03:56,120 --> 00:04:04,820
assume that role and through the ACL to list the bucket contents and to get and put items or objects

47
00:04:04,850 --> 00:04:07,700
into the confidential folder.

48
00:04:07,730 --> 00:04:12,720
So now let's head over to account B. So this is Account B and I'm logged in as myself.

49
00:04:12,950 --> 00:04:19,340
And so what we can see here is we have a user named John and he has a policy attached called account

50
00:04:19,430 --> 00:04:21,310
S3.

51
00:04:21,380 --> 00:04:28,070
And so if we look at this all this does is it allows John the capability to assume the role.

52
00:04:28,070 --> 00:04:36,850
So account B S3 is the role that we created in Account A service allowing him to assume that role.

53
00:04:36,980 --> 00:04:39,590
So that's the setup.

54
00:04:39,670 --> 00:04:49,090
And now what we can do is look in and here I'm actually logged in as John and I've already previously

55
00:04:49,090 --> 00:04:51,540
access so we've got the path here to the bucket.

56
00:04:51,580 --> 00:04:54,720
But clearly we're not able to access anything.

57
00:04:54,790 --> 00:04:57,550
So what we now do is we go to switch roles

58
00:05:01,130 --> 00:05:05,450
and we need to put in the name of the account and then the name of the role

59
00:05:11,050 --> 00:05:19,100
and then we can give it a display name as well and we click switch role.

60
00:05:19,100 --> 00:05:26,330
So now we're accessing this S3 bucket as this user.

61
00:05:26,490 --> 00:05:29,160
And so we can see the whole bucket.

62
00:05:29,460 --> 00:05:35,670
But let's try to upload an object to the root of the bucket here which we shouldn't be able to do because

63
00:05:35,670 --> 00:05:37,020
we don't have get put

64
00:05:39,980 --> 00:05:40,780
privileges here.

65
00:05:40,880 --> 00:05:43,190
And sure enough that failed.

66
00:05:43,190 --> 00:05:49,550
But now we can go into the confidential folder and we should be able to upload a file

67
00:05:53,650 --> 00:05:56,230
and again it shows an error but there it is.

68
00:05:56,230 --> 00:06:03,120
You know the file the file is there and we can we can go back and prove that in our main console here.

69
00:06:03,130 --> 00:06:07,500
Let's just pop into that folder and sure enough there's that audio file that we just uploaded.

70
00:06:07,630 --> 00:06:12,540
So the user is able to put objects.

71
00:06:12,720 --> 00:06:19,140
And if we click on download and we can see the file just pops up on another screen.

72
00:06:19,650 --> 00:06:21,120
So that's it really.

73
00:06:21,120 --> 00:06:28,590
And then you can switch back to your main user go back to John now and if you wanted to you could change

74
00:06:28,590 --> 00:06:35,580
this so that rather than using a user an account B you could have a role an Account B and then perhaps

75
00:06:35,580 --> 00:06:41,700
you might use that role to assign it to an easy to instance and then the easy to instance within turn

76
00:06:41,730 --> 00:06:46,680
assume the role in Account A and then access the contents of the bucket.

77
00:06:47,160 --> 00:06:51,600
So that's how it works, it's a fairly complex setup but that's how you do it with

78
00:06:51,600 --> 00:06:55,710
S3 policies and we'll get onto how we do it for ACLs in the next lab.

