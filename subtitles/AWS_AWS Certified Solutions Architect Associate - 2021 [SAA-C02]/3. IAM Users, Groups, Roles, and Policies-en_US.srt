1
00:00:05,370 --> 00:00:12,330
OK, so let's look into some more details of users group's roles and policies in the identity and access

2
00:00:12,330 --> 00:00:13,290
management service.

3
00:00:14,130 --> 00:00:17,040
So we have an account here and within an account.

4
00:00:17,040 --> 00:00:18,750
We have these various principles.

5
00:00:18,930 --> 00:00:22,590
We have users groups, rules and policies.

6
00:00:23,130 --> 00:00:26,640
A group is a way of organizing users.

7
00:00:26,910 --> 00:00:34,050
So we create a group and then we can assign our users to the group and we can then apply permissions

8
00:00:34,050 --> 00:00:36,870
to these users and we do that through a policy.

9
00:00:37,290 --> 00:00:42,170
So the policy defines what the people in this group are allowed to do.

10
00:00:42,180 --> 00:00:50,190
So this is a great way to organize, create a group for everybody in that group that has similar job

11
00:00:50,190 --> 00:00:55,170
responsibilities and therefore need similar permissions and then apply a policy to them.

12
00:00:55,800 --> 00:01:03,360
So the policies to the permissions for the identities or resources they're associated with and the user

13
00:01:03,360 --> 00:01:06,750
will gain the permissions apply to the group through the policy.

14
00:01:07,140 --> 00:01:08,890
There are different types of policies.

15
00:01:08,910 --> 00:01:15,060
One is called an identity based policy, and these can be applied to users groups or roles.

16
00:01:15,780 --> 00:01:16,830
So what is a role?

17
00:01:17,100 --> 00:01:20,910
A role is a little bit of a more difficult concept, one to stand.

18
00:01:21,510 --> 00:01:24,480
Roles are used for delegation, and they're assumed.

19
00:01:24,810 --> 00:01:26,870
Now, if that doesn't make sense, don't worry.

20
00:01:26,880 --> 00:01:32,070
In another slide, it's going to make a lot more sense when I show you graphically how it works.

21
00:01:32,280 --> 00:01:34,770
Let's first go into some more detail on users.

22
00:01:35,250 --> 00:01:38,610
So 9:00 a.m. We have all account route user.

23
00:01:39,060 --> 00:01:46,170
Now the route user is the account that we created when we logged in sets, the email address that we

24
00:01:46,170 --> 00:01:49,290
used to sign up for our U.S. accounts.

25
00:01:49,890 --> 00:01:55,980
The route user has full permissions, and it's a best practice to avoid using the route user accounts,

26
00:01:56,550 --> 00:02:01,770
and you should also enable multifactor authentication for the route user accounts.

27
00:02:02,700 --> 00:02:06,060
Then we have our individual users.

28
00:02:06,420 --> 00:02:14,650
You can create up to 5000 individual users in IAM and users will have no permissions by default.

29
00:02:14,670 --> 00:02:16,290
That's really important to remember.

30
00:02:16,650 --> 00:02:23,400
So you can create a user account and that user is able to log in to us, but they can't do anything

31
00:02:23,400 --> 00:02:25,380
because they don't have any permissions.

32
00:02:26,100 --> 00:02:28,590
So what you then have to do is give them permissions.

33
00:02:29,520 --> 00:02:32,580
Now each user will have a friendly name.

34
00:02:32,880 --> 00:02:35,790
In this case, the user account name is Andrea.

35
00:02:36,180 --> 00:02:39,990
So this person can log in with the username Andrea.

36
00:02:40,170 --> 00:02:46,740
There's also something called an Amazon resource name, and Aaron and Aaron's are assigned to resources

37
00:02:46,740 --> 00:02:48,020
within IWC.

38
00:02:48,300 --> 00:02:54,300
They're a bit harder to remember, as you can see that quite long they contain the account number for

39
00:02:54,300 --> 00:02:55,590
the IWC account.

40
00:02:56,100 --> 00:03:02,340
And as you can see, they tell you the type of resource a user account and then the actual friendly

41
00:03:02,340 --> 00:03:03,270
name is on the end.

42
00:03:03,540 --> 00:03:08,280
There's a few ways that all users can actually offensive to IWC.

43
00:03:08,640 --> 00:03:15,450
You remember that you can access IWC through the management console, the command line interface and

44
00:03:15,450 --> 00:03:23,340
also the API and authentication to the console is enabled through a username and password.

45
00:03:23,880 --> 00:03:30,630
And for the Clia and the API, there is something called access keys, which will explore in more detail

46
00:03:30,630 --> 00:03:31,410
a bit later on.

47
00:03:31,860 --> 00:03:38,430
Next up, we have groups with groups we can create on different groups for different users.

48
00:03:38,700 --> 00:03:43,110
So here we have an admin group, we have a development group and we have an operations group.

49
00:03:43,590 --> 00:03:45,900
So these are job role specific groups.

50
00:03:46,320 --> 00:03:50,280
We can then place our users into these groups as is appropriate.

51
00:03:51,290 --> 00:03:57,890
Groups are a collection of users, and you can have a user be a member of up to 10 groups.

52
00:03:58,460 --> 00:04:05,330
The main purpose of using groups is not just to organise the users, but to organize them and then apply

53
00:04:05,330 --> 00:04:10,850
permissions to those users, and we do that by assigning policies to the groups.

54
00:04:11,210 --> 00:04:16,520
The user will then gain the permissions apply to the group through the policy.

55
00:04:16,850 --> 00:04:23,540
Next, we have I am roles and I am role as an identity that has specific permissions assigned to it.

56
00:04:24,450 --> 00:04:29,670
The roles are assumed by users applications and services.

57
00:04:30,060 --> 00:04:35,550
So we have some user accounts and maybe you have an application or a service running somewhere else,

58
00:04:36,390 --> 00:04:38,400
and we're able to assume the role.

59
00:04:38,850 --> 00:04:47,460
So each of these is able to then assume the role and then gain the permissions that's assigned to that

60
00:04:47,460 --> 00:04:47,880
role.

61
00:04:48,210 --> 00:04:52,560
So once assumed, the identity actually becomes the role.

62
00:04:52,890 --> 00:04:57,180
So in other words, you have a user here and the user assumes the role.

63
00:04:57,570 --> 00:05:01,500
At that point, the user is no longer acting as the user.

64
00:05:01,500 --> 00:05:06,690
They're acting as the role and they have the permissions that are assigned to the role.

65
00:05:07,320 --> 00:05:11,040
And in this case, that might mean that they can access an S3 bucket.

66
00:05:11,400 --> 00:05:17,850
Lastly, we have policies we've seen in this lesson that policies are a way to assign permissions.

67
00:05:18,420 --> 00:05:23,520
They're actually documents that define the permissions, and they're written in JSON.

68
00:05:23,520 --> 00:05:25,740
That's JavaScript object notation.

69
00:05:25,830 --> 00:05:27,270
They look something like this.

70
00:05:27,720 --> 00:05:30,600
And as you can see, there's a bit of code here.

71
00:05:30,750 --> 00:05:38,070
This is JSON code, and this one essentially says the effect is to allow any action on any resource.

72
00:05:38,340 --> 00:05:44,040
So this is one that you might assign to an administrator who needs to be able to do everything in the

73
00:05:44,040 --> 00:05:44,550
account.

74
00:05:45,480 --> 00:05:47,700
We then have a bucket policy here.

75
00:05:48,270 --> 00:05:55,830
A bucket policy is another type of policy that's just assigned to a resource, and it defines who is

76
00:05:55,830 --> 00:05:58,220
able to act on that resource.

77
00:05:58,230 --> 00:06:03,780
What they're able to do or permissions are implicitly denied by default in U.S..

78
00:06:04,200 --> 00:06:09,960
Now what that means is that if you don't assign a permission to allow something, then it's just denied.

79
00:06:10,290 --> 00:06:14,340
Everything will be denied unless you explicitly allow it.

80
00:06:15,030 --> 00:06:22,170
The policy at the top here is an identity based policy, and it can be assigned to users groups and

81
00:06:22,170 --> 00:06:22,710
roles.

82
00:06:23,490 --> 00:06:31,830
The resource base policy at the bottom here can be assigned to specific resources such as an S3 bucket,

83
00:06:31,830 --> 00:06:37,320
which is a container for storing data or a dynamite DB table, which is a type of database.

