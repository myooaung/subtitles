1
00:00:05,300 --> 00:00:09,440
This lesson, we're going to cover some architecture patterns for Amazon S3.

2
00:00:09,770 --> 00:00:15,860
The first requirement is a company is concerned about accidental deletion of Amazon S3 objects.

3
00:00:16,310 --> 00:00:19,730
Well, they might want to mitigate this by using S3 versioning.

4
00:00:20,450 --> 00:00:27,950
Data stored in S3 is frequently access for 30 days, then is rarely accessed, but must be immediately

5
00:00:27,950 --> 00:00:28,610
retrievable.

6
00:00:28,850 --> 00:00:35,210
So this is all about which storage class is best, where you could use a lifecycle policy to transition

7
00:00:35,210 --> 00:00:43,340
objects from S3 Standard to S3 Standard infrequently access after 30 days, a backup of S3 objects within

8
00:00:43,340 --> 00:00:49,820
a specific folder in a bucket must be replicated to another region where you could configure cross region

9
00:00:49,820 --> 00:00:53,480
replication and specify the folder name as a prefix.

10
00:00:53,870 --> 00:01:00,140
Previous versions of objects in a versioning enabled S3 bucket must be stored long term at the lowest

11
00:01:00,140 --> 00:01:00,530
cost.

12
00:01:01,250 --> 00:01:07,250
Well, for this, you could create a lifecycle rule that transitions previous versions to S3 Glacier

13
00:01:07,250 --> 00:01:11,060
Deep Archive, and that's the cheapest option for storing that long term.

14
00:01:12,090 --> 00:01:18,120
A company wishes to manage all encryption of S3 objects through their application with their own encryption

15
00:01:18,120 --> 00:01:18,540
keys.

16
00:01:19,260 --> 00:01:23,760
In that case, you should use client side encryption with client managed keys.

17
00:01:25,160 --> 00:01:32,810
Unencrypted objects in an Amazon S3 buckets must be encrypted well, to do this, you need to re upload

18
00:01:32,810 --> 00:01:38,180
the objects because they're already there and you can't encrypt existing objects, and when you upload

19
00:01:38,180 --> 00:01:41,900
them, you can specify the encryption to use and the encryption key.

20
00:01:42,260 --> 00:01:47,870
An administrator requires a notification when objects are deleted from an S3 buckets.

21
00:01:48,600 --> 00:01:53,600
Well, for this, you can simply configure an event notification that uses the same service.

22
00:01:54,080 --> 00:02:00,860
A group of customers without IWC credentials must be granted limited access to a software update that

23
00:02:00,860 --> 00:02:03,020
is stored in an S3 bucket.

24
00:02:03,500 --> 00:02:08,990
For this, you can generate a precise URL and the users won't need a night up U.S. accounts and it will

25
00:02:08,990 --> 00:02:09,860
be time limited.

26
00:02:10,940 --> 00:02:17,090
Solutions architects require both programmatic and console access across IWC accounts.

27
00:02:17,690 --> 00:02:21,320
For that, you can configure cross account access using IAM roles.

28
00:02:21,770 --> 00:02:23,690
And that's it for this architecture patterns.

