1
00:00:05,340 --> 00:00:10,200
And this lesson, I'm going to cover the DNS system and Amazon around 53.

2
00:00:10,260 --> 00:00:13,090
So let's start off talking about what DNS is.

3
00:00:13,110 --> 00:00:15,300
It's called the domain name system.

4
00:00:15,870 --> 00:00:24,120
Now DNS is a way that we can resolve the IP address of servers internally in our company networks as

5
00:00:24,120 --> 00:00:25,170
well as on the internet.

6
00:00:25,740 --> 00:00:31,620
So remember I said earlier in the course that when we connect to a computer over a network, we connect

7
00:00:31,620 --> 00:00:32,940
via the IP address.

8
00:00:33,660 --> 00:00:36,900
But the IP address is not a very friendly name to remember.

9
00:00:37,620 --> 00:00:40,020
And that's why we use domain names.

10
00:00:40,680 --> 00:00:46,950
So, for example, here we have a user on a computer and an internal company network, and there's a

11
00:00:46,950 --> 00:00:49,620
web server running in that network.

12
00:00:50,250 --> 00:00:57,210
Now, the user wants to use a browser to connect to the web server, and they can put in a domain name,

13
00:00:57,210 --> 00:01:00,150
which is much easier to remember than an IP address.

14
00:01:00,540 --> 00:01:02,670
So in this case, it's my company, Dot Local.

15
00:01:02,850 --> 00:01:10,320
The computer will then go to a DNS server, so it already has the addresses of the DNS server stored

16
00:01:10,590 --> 00:01:16,290
in its configuration so it can connect to the DNS server and ask the DNS server question.

17
00:01:16,770 --> 00:01:20,310
It will say What is the IP address to my company Dot Local?

18
00:01:21,000 --> 00:01:28,470
Now, the DNS server has a database which stores this information, so it knows that the IP address

19
00:01:28,470 --> 00:01:37,770
value is 192.168.0.1, so it returns that information back to the requesting computer and the computer

20
00:01:37,770 --> 00:01:42,000
that can then connect directly to the web server using the IP address.

21
00:01:42,330 --> 00:01:49,380
Now this happens on the internet as well, and we can use a service called Amazon Route 53, both for

22
00:01:49,380 --> 00:01:53,490
our resources within us and also on the internet.

23
00:01:54,000 --> 00:02:00,240
So let's say we have an internet connected computer here, and we have a web service running and an

24
00:02:00,240 --> 00:02:06,360
IWC data center within the Amazon Route 50 free service, which is a dinner service.

25
00:02:06,780 --> 00:02:12,960
We create something called a hosted zone, and the hosted zone stores the records belonging to that

26
00:02:12,960 --> 00:02:13,440
domain.

27
00:02:13,590 --> 00:02:15,360
This domain is example dot com.

28
00:02:16,110 --> 00:02:23,760
So now our user on the internet can connect to Amazon, ran out 50 free and ask What is the IP address,

29
00:02:24,060 --> 00:02:25,170
for example, dot com.

30
00:02:25,830 --> 00:02:32,310
The address gets returned and the browser is then able to connect to the web server using its IP address.

31
00:02:32,550 --> 00:02:36,420
So that's how DNS and Route 53 works at a basic level.

32
00:02:37,080 --> 00:02:40,470
Now, Route 53 is an intelligent DNS service.

33
00:02:40,920 --> 00:02:43,170
We can use things called routing policies.

34
00:02:43,320 --> 00:02:46,200
Now these do go a little bit beyond the scope of the exam.

35
00:02:46,200 --> 00:02:50,910
You shouldn't be asked in the cloud process you to remember these, but I just want to give you an idea

36
00:02:50,910 --> 00:02:53,640
of the capabilities of Route 53.

37
00:02:54,450 --> 00:03:00,060
So what we were just looking at is something called a simple routing policy, simply saying, Well,

38
00:03:00,240 --> 00:03:02,880
I want to know what the IP is, for example, dot com.

39
00:03:03,600 --> 00:03:11,910
We can also have a failure that means we have multiple IP addresses associated with a name, and DNS

40
00:03:11,910 --> 00:03:19,050
will automatically route users or computers to the secondary address if it knows that the primary is

41
00:03:19,050 --> 00:03:19,470
failed.

42
00:03:20,280 --> 00:03:24,320
It can do routing based on the location of the actual request.

43
00:03:24,330 --> 00:03:27,750
Where is it coming from in the world or based on latency?

44
00:03:27,900 --> 00:03:33,960
What is the delay on the line, the distance between the requester and the actual resource, and it

45
00:03:33,960 --> 00:03:36,780
tries to direct you to the closest resource possible.

46
00:03:37,350 --> 00:03:42,930
It can provide multiple answers, or you can have waited where you say, Well, I want to send 80 percent

47
00:03:42,930 --> 00:03:46,140
of my traffic to one record and 20 percent to another.

48
00:03:46,620 --> 00:03:47,480
So it's quite clever.

49
00:03:47,490 --> 00:03:49,140
It does all of those different things.

50
00:03:49,410 --> 00:03:51,180
Now there are a few more features as well.

51
00:03:51,630 --> 00:03:55,890
We have two main registration, so you can actually register our own domains.

52
00:03:56,430 --> 00:03:59,130
We can create the hosted zones, which is what we just looked at.

53
00:03:59,850 --> 00:04:05,850
It also does health checks so it can actually connect to your resources and check that they're responding,

54
00:04:05,850 --> 00:04:06,660
that they're healthy.

55
00:04:07,110 --> 00:04:13,170
It uses these health checks to determine the status of your resources so it knows wherever to send any

56
00:04:13,170 --> 00:04:14,130
traffic that or not.

57
00:04:14,580 --> 00:04:20,520
There's also something called traffic flow, which gives you another level of automation for how you

58
00:04:20,520 --> 00:04:22,650
send your traffic to your resources.

59
00:04:23,010 --> 00:04:26,070
So that's all I want to cover for Amazon Brown 53.

60
00:04:26,220 --> 00:04:27,300
I'll see you in the next lesson.

