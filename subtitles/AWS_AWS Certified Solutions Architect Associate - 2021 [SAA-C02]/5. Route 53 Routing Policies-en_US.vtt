WEBVTT
1
00:00:05.450 --> 00:00:08.540
So let's have a look at Route 53 routing policies.

2
00:00:08.930 --> 00:00:11.810
So these are the routing policies that are available.

3
00:00:12.110 --> 00:00:15.680
We've got the simple routing policy, which is a simple DNS response.

4
00:00:15.920 --> 00:00:22.370
It's what we saw in the examples in the previous lesson where you have a DNS name and a record which

5
00:00:22.370 --> 00:00:23.960
corresponds with an IP address.

6
00:00:24.170 --> 00:00:28.490
It's simply saying, what's the IP address for this particular DNS name?

7
00:00:29.440 --> 00:00:30.610
We've then got fail over.

8
00:00:30.820 --> 00:00:35.530
This is a big one for the product, Sam comes up in lots and lots of exam questions.

9
00:00:36.040 --> 00:00:43.870
So what happens here is you have a primary and a fail over target as long as the health checks are passing

10
00:00:43.870 --> 00:00:44.800
on the primary.

11
00:00:45.470 --> 00:00:50.920
Ralph 5:3 is always going to respond with an address for the primary, so all your traffic's going there.

12
00:00:51.610 --> 00:00:57.430
Then if the health checks fail, it's going to automatically start routing connections to a secondary.

13
00:00:57.730 --> 00:01:02.770
So those could be resources in another region, for example, and that could be your disaster recovery

14
00:01:02.770 --> 00:01:03.100
plan.

15
00:01:04.410 --> 00:01:10.170
We've then got geo location that uses the geographic location you're in to route you to the closest

16
00:01:10.170 --> 00:01:16.380
region and you've then got geo proximity, which actually routes you to the closest region within a

17
00:01:16.380 --> 00:01:17.340
geographic area.

18
00:01:18.060 --> 00:01:21.750
So slight differences between those we then have licensee.

19
00:01:21.780 --> 00:01:25.800
Another one that comes up quite a lot on the exams and make sure you understand this.

20
00:01:26.220 --> 00:01:32.400
This is literally just directing you to the record that has the lowest latency, and we'll see some

21
00:01:32.400 --> 00:01:34.530
diagrams in a moment which will make that clear.

22
00:01:35.310 --> 00:01:38.490
Multi value answer returns several IP addresses.

23
00:01:38.640 --> 00:01:44.700
You can think of it as a basic load balancer and then you've got weighted where you have relative weights.

24
00:01:45.000 --> 00:01:48.930
You can say 80 percent traffic going to one record 20 percent to another.

25
00:01:50.270 --> 00:01:52.310
So let's look at these and a bit more detail.

26
00:01:53.000 --> 00:01:58.550
We got the simple routing policy, which just gives you the IP address for domain name.

27
00:01:58.910 --> 00:02:02.690
So we've got Ralph, 53, somebody submitting a DNS query.

28
00:02:04.180 --> 00:02:05.140
That's step one.

29
00:02:05.620 --> 00:02:13.030
Then a response comes back, and the response will have the IP address and the area is then able to

30
00:02:13.030 --> 00:02:14.170
connect to the resource.

31
00:02:14.710 --> 00:02:15.460
Very simple.

32
00:02:16.210 --> 00:02:17.680
We then got Weiss's routing.

33
00:02:17.980 --> 00:02:21.820
In this case, let's say we've got two regions and we've got free resources.

34
00:02:22.210 --> 00:02:24.520
And each of them has its own IP address.

35
00:02:24.940 --> 00:02:31.240
And what we've done is we've created separate records and each of these records is for the same DNS

36
00:02:31.240 --> 00:02:33.670
name, but it has a different IP address.

37
00:02:34.000 --> 00:02:36.100
And then we have a wait now.

38
00:02:36.100 --> 00:02:39.850
In this case, I've totaled these up to 100 just to make life easy.

39
00:02:40.120 --> 00:02:43.270
If you actually look at the documentation, that's not the way it works.

40
00:02:43.420 --> 00:02:45.320
The exam doesn't test you on that detail.

41
00:02:45.820 --> 00:02:47.800
But this is just for the point of illustration.

42
00:02:48.550 --> 00:02:51.010
So you got round 53, you've got your aquaria.

43
00:02:51.310 --> 00:02:59.410
Your career gets a response from round 53 and then 60 percent of the traffic goes to this region, 20

44
00:02:59.410 --> 00:03:05.050
percent goes to this particular resource here, and then another 20 percent goes to this other resource.

45
00:03:05.590 --> 00:03:08.830
So that's a way that you can direct the volumes of traffic.

46
00:03:08.830 --> 00:03:11.050
You can use this for various use cases.

47
00:03:11.050 --> 00:03:17.980
You might use it when you're testing a new version of your application so you can use Route 50 free

48
00:03:18.190 --> 00:03:20.080
for a kind of Blue-Green scenario.

49
00:03:20.770 --> 00:03:25.570
You could also do it if you have more resources in one location, you want it more the traffic to go

50
00:03:25.570 --> 00:03:25.810
there.

51
00:03:26.230 --> 00:03:28.510
So as I say, these values are simplified.

52
00:03:28.900 --> 00:03:33.910
In reality, you actually have to use an integer between zero and two hundred and fifty five.

53
00:03:35.730 --> 00:03:39.990
You can also assign health checks to check that the resources are active.

54
00:03:40.350 --> 00:03:45.330
And that means that if the resource is actually failing a health check, then none of the traffic will

55
00:03:45.330 --> 00:03:46.200
be directed there.

56
00:03:46.650 --> 00:03:52.170
So again, licensee right based routing is something that comes up on the exam a lot with licensee based

57
00:03:52.170 --> 00:03:52.620
routing.

58
00:03:52.620 --> 00:03:57.600
Again, we create multiple records with the same DNS name and they point to multiple values.

59
00:03:57.960 --> 00:04:03.150
You see, I've used an application load balance here as well, so you can have application load balancers

60
00:04:03.150 --> 00:04:03.990
as targets.

61
00:04:04.410 --> 00:04:05.970
And these are all in different regions.

62
00:04:06.480 --> 00:04:13.260
So we have Route 53 and we've got three different regions where we see two instances with a load balancer

63
00:04:13.620 --> 00:04:15.540
and another C2 instance here.

64
00:04:16.380 --> 00:04:18.300
So we have aquaria in Singapore.

65
00:04:18.690 --> 00:04:25.050
Now what's going to happen for somebody in Singapore is because they're closer to AP Southeast one,

66
00:04:25.440 --> 00:04:26.820
which is also Singapore.

67
00:04:27.210 --> 00:04:29.640
They're going to get directed to this resource here.

68
00:04:30.240 --> 00:04:36.870
So DNS is picking up the location of the query and sending traffic to the closest region.

69
00:04:37.230 --> 00:04:45.450
We then have a query happening in Sydney and Sydney is closer to the app, southeast to region and therefore

70
00:04:45.450 --> 00:04:46.380
gets directed there.

71
00:04:46.710 --> 00:04:50.490
And then we have someone in New York and they're going to get directed to us east one.

72
00:04:51.000 --> 00:04:57.750
So that's a way to optimize the performance of our application by ensuring that users around the world

73
00:04:57.750 --> 00:05:02.940
are sent to the closest and the lowest latency implementation of our application.

74
00:05:03.630 --> 00:05:08.300
Again, we can assign health checks as well, so fail over again.

75
00:05:08.310 --> 00:05:09.660
This is a big one for the exam.

76
00:05:10.110 --> 00:05:14.670
You create multiple records, one of them is primary and the other is secondary.

77
00:05:15.360 --> 00:05:18.540
So we've got Route 53, we've got two regions here.

78
00:05:19.170 --> 00:05:23.760
AP South East two is the secondary region and USC's one is the primary.

79
00:05:24.150 --> 00:05:29.790
So all queries will always go to us is one as long as that record is healthy.

80
00:05:30.510 --> 00:05:36.630
If the record becomes unhealthy, then round 53 will respond with the rest of the load balancer instead

81
00:05:36.630 --> 00:05:37.590
in the second region.

82
00:05:37.590 --> 00:05:45.300
So that's failing over one year location where mapping to a specific region based on the location of

83
00:05:45.300 --> 00:05:46.920
the client geographically.

84
00:05:47.430 --> 00:05:53.030
So we've got regions, we've got multiple regions here, ones AP South, east to the others.

85
00:05:53.040 --> 00:05:53.880
USC's one.

86
00:05:54.240 --> 00:06:00.540
So if somebody is in Mexico, they go to USC East one because that's actually the default, and neither

87
00:06:00.540 --> 00:06:04.170
of these regions actually map closely to Mexico.

88
00:06:04.830 --> 00:06:07.360
If someone's in New Zealand, well, that's Oceania.

89
00:06:07.830 --> 00:06:11.670
So they get map to the ALP in AP South East, too.

90
00:06:12.770 --> 00:06:14.660
Again, you can have health checks as well.

91
00:06:14.670 --> 00:06:15.420
Those are optional.

92
00:06:16.330 --> 00:06:21.580
Multi value, so this is where you have multiple values for an individual DNS.

93
00:06:22.450 --> 00:06:30.340
So what happens is the client gets multiple responses, returned to them and then it kind of low balances

94
00:06:30.340 --> 00:06:30.640
free.

95
00:06:30.640 --> 00:06:34.930
So each time they check with DNS, it can give them a different response.

96
00:06:35.590 --> 00:06:38.110
And the health checks will return to healthy records only.

97
00:06:38.920 --> 00:06:41.910
So multi-family doesn't come out too much in the program.

98
00:06:42.190 --> 00:06:47.670
As I said, mainly it's going to be the fight over housing policy and the licensee based routing policy.

99
00:06:47.680 --> 00:06:49.960
So just know the use cases for those two.

100
00:06:50.170 --> 00:06:51.220
And you should be well set.

