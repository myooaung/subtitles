1
00:00:05,650 --> 00:00:10,540
Welcome to another hands on in this lesson, we're going to create a VPC endpoint.

2
00:00:10,810 --> 00:00:17,290
It's going to be a gateway endpoint and we're going to use of policies to see how we can control access

3
00:00:17,470 --> 00:00:19,270
to an Amazon has free buckets.

4
00:00:21,980 --> 00:00:27,770
So this is basically the configuration we already have a VPC and a public subnet, and we've got an

5
00:00:27,770 --> 00:00:29,600
instance running in it from earlier on.

6
00:00:30,470 --> 00:00:32,960
Now we're going to create an Amazon S3 bucket.

7
00:00:33,380 --> 00:00:38,240
I'm getting ahead of myself a little bit here because we actually cover S3 and a lot of detail in the

8
00:00:38,240 --> 00:00:38,930
next section.

9
00:00:39,200 --> 00:00:44,150
If you're completely unfamiliar with it and you want to get a primer, you could flick forward, but

10
00:00:44,150 --> 00:00:47,540
we won't be doing too much here is going to be fairly straightforward stuff.

11
00:00:48,020 --> 00:00:55,160
Now, when we create our endpoint, a route will be added to our roundtable and that will point to a

12
00:00:55,160 --> 00:01:00,290
destination which will result to the IP addresses of Amazon S3.

13
00:01:00,740 --> 00:01:07,010
Now what happens is this is a more specific route than any other route, like the route going out to

14
00:01:07,010 --> 00:01:07,610
the internet.

15
00:01:08,000 --> 00:01:16,580
So it should follow this path, which means any connections that go to the IWC as free endpoints should

16
00:01:16,580 --> 00:01:18,650
be routed via the gateway endpoint.

17
00:01:18,650 --> 00:01:24,140
And we'll be out to prove that that's happening and that we're not using the public internet, so we

18
00:01:24,140 --> 00:01:26,210
will modify the policy here to do that.

19
00:01:26,420 --> 00:01:27,680
You'll see what I mean shortly.

20
00:01:28,160 --> 00:01:31,010
And on the S3 bucket, we'll add a policy now.

21
00:01:31,010 --> 00:01:34,310
Bucket policies are basically just resource based policies.

22
00:01:34,610 --> 00:01:41,390
It uses JSON language just like we do with IAM policies, but we just use them to control access to

23
00:01:41,390 --> 00:01:47,390
our buckets, so we apply them directly to the buckets rather than to a principle like an identity based

24
00:01:47,390 --> 00:01:47,900
policy.

25
00:01:48,440 --> 00:01:52,430
The first thing to do is to head over and create the VPC endpoint.

26
00:01:53,420 --> 00:01:58,790
I'm in my management account in Norfolk, Virginia, on the left and the endpoints.

27
00:01:59,300 --> 00:02:00,860
We can create an endpoint.

28
00:02:01,670 --> 00:02:05,480
Let's click this button right endpoint and under services.

29
00:02:05,720 --> 00:02:09,680
If we put in S3 and search, we get these options.

30
00:02:09,680 --> 00:02:12,380
We're going to choose Gateway for Amazon as free.

31
00:02:13,220 --> 00:02:17,510
Now we need to specify which route table to actually update.

32
00:02:18,140 --> 00:02:22,370
Now, as you can see the round table full of APC, the custom one is not there.

33
00:02:22,640 --> 00:02:26,060
That's because we need to make sure we specify our custom VPC.

34
00:02:27,050 --> 00:02:31,100
Now we can see our route tables and I'm going to choose the one that's the main round table.

35
00:02:32,540 --> 00:02:35,600
So that's the one associated with my public subnets.

36
00:02:36,350 --> 00:02:39,170
Now the policy by default, is full access.

37
00:02:39,410 --> 00:02:40,730
So we have a statement here.

38
00:02:40,910 --> 00:02:41,740
That's action.

39
00:02:41,960 --> 00:02:44,930
Any action star effects allow.

40
00:02:45,230 --> 00:02:47,780
And then any resource and any principle.

41
00:02:48,230 --> 00:02:50,750
So it's very open, but you can customize that.

42
00:02:51,380 --> 00:02:55,280
So let's just create the endpoints and it's being created for us.

43
00:02:55,940 --> 00:02:57,440
So here is our endpoint.

44
00:02:57,800 --> 00:03:03,290
Now what we want to do is go to tables and just make sure that the round table has been updated.

45
00:03:03,290 --> 00:03:04,210
So that's this one here.

46
00:03:04,220 --> 00:03:11,090
The main round table for our custom BPC undercounts, we can now see that we have the destination.

47
00:03:11,480 --> 00:03:13,850
And this is going via a VPC endpoint.

48
00:03:13,850 --> 00:03:17,630
So that's the routes to Amazon as free going via the endpoint.

49
00:03:18,380 --> 00:03:19,610
So that set up correctly.

50
00:03:20,300 --> 00:03:25,490
Another thing we need to do, we're going to run some commands against Amazon that's free from our EC2

51
00:03:25,490 --> 00:03:26,060
instance.

52
00:03:26,330 --> 00:03:27,980
So I need to give it some privileges.

53
00:03:28,250 --> 00:03:29,270
I'm going to create a role.

54
00:03:29,930 --> 00:03:33,500
So let's choose create role here in the IAM service.

55
00:03:35,380 --> 00:03:42,550
Common use cases is going to be easy, too, so we're going to allow easy to to call in service for

56
00:03:42,550 --> 00:03:43,270
permissions.

57
00:03:43,840 --> 00:03:46,060
Just type in as free and search.

58
00:03:46,390 --> 00:03:48,250
And we're going to give full access.

59
00:03:49,330 --> 00:03:54,640
I'm going to copy the name of this policy and we're going to use that for the wrong name as well.

60
00:03:55,600 --> 00:03:58,400
So let's just paste on in create the role.

61
00:03:59,290 --> 00:04:02,950
And now we have a role that we can assign to our easy to instance.

62
00:04:03,460 --> 00:04:09,790
So over an easy to choose our instance, go to actions, security, modify.

63
00:04:09,790 --> 00:04:10,540
I am role.

64
00:04:11,140 --> 00:04:13,420
I'm going to choose a role and we should see it in here.

65
00:04:13,870 --> 00:04:14,530
And there it is.

66
00:04:14,680 --> 00:04:22,120
Amazon has free, full access, so let's save another instance now has the privileges it needs over

67
00:04:22,120 --> 00:04:26,860
in the Amazon as free console, which you can find the services and storage.

68
00:04:28,320 --> 00:04:34,020
We're going to create an S3 bucket, so a bucket is just a container into which we add objects, objects

69
00:04:34,020 --> 00:04:36,480
of files and videos or whatever you want to add.

70
00:04:37,290 --> 00:04:42,300
I'm going to call mine a VPC test and it's going to be in North Virginia.

71
00:04:42,720 --> 00:04:43,680
I can scroll down.

72
00:04:43,710 --> 00:04:45,900
Don't need to change anything else at this point.

73
00:04:46,350 --> 00:04:47,580
And create this bucket.

74
00:04:49,750 --> 00:04:55,270
So now that we have a bucket, we can add some objects, objects, as I say, just files, this is an

75
00:04:55,270 --> 00:04:59,170
object based storage system so we can come in and add files.

76
00:05:00,150 --> 00:05:04,530
I'm just going to add a couple of JPEG images and upload.

77
00:05:05,400 --> 00:05:09,150
So simple as that, we have some files on Amazon S3.

78
00:05:09,780 --> 00:05:14,340
Now let's come back to easy to choose a public one instance.

79
00:05:14,850 --> 00:05:17,520
Go to instance, connect and connect.

80
00:05:18,330 --> 00:05:23,190
Now, we haven't specified any policies yet, but let's just check that we can connect to Amazon S3.

81
00:05:23,730 --> 00:05:26,730
So now we should be able to run commands against us.

82
00:05:26,730 --> 00:05:27,090
Free.

83
00:05:27,330 --> 00:05:32,090
Let's try running IWC S3 Ellis.

84
00:05:33,410 --> 00:05:34,160
And hit enter.

85
00:05:34,940 --> 00:05:36,200
And we can see our buckets.

86
00:05:36,620 --> 00:05:39,770
We should be able to run IWC as free.

87
00:05:42,000 --> 00:05:46,740
Ellis and then free colon slash slash and our bucket name as well.

88
00:05:47,280 --> 00:05:50,370
And if we hit Enza here, we should see the contents of the bucket.

89
00:05:50,670 --> 00:05:54,120
So at the moment, everything is working great now.

90
00:05:54,120 --> 00:06:00,210
How do we know this is going over the endpoint rather than going over the internet because we are in

91
00:06:00,210 --> 00:06:01,080
a public subnet?

92
00:06:01,650 --> 00:06:03,390
Well, let's go back to your endpoint.

93
00:06:04,140 --> 00:06:07,080
With my endpoint selected, I'm going to choose policy.

94
00:06:07,350 --> 00:06:11,190
I'm going to copy this code here in the endpoint policy.

95
00:06:11,880 --> 00:06:17,100
Choose custom pasted in, and let's just change the policy to deny.

96
00:06:17,120 --> 00:06:18,660
So this should deny everything.

97
00:06:19,200 --> 00:06:22,350
Now, if we're going by the internet, this shouldn't make any difference.

98
00:06:22,830 --> 00:06:26,820
But if we're going via the endpoint, then this should block access.

99
00:06:27,270 --> 00:06:32,310
So back in our instance, let's try and rerun that command and we get an access denied.

100
00:06:32,790 --> 00:06:35,550
Let's try and run the olass command again.

101
00:06:35,550 --> 00:06:36,720
We get an access denied.

102
00:06:37,080 --> 00:06:40,230
So it's definitely not working back in my endpoint.

103
00:06:40,230 --> 00:06:46,170
I'm just going to change this back again because I don't really want that to deny me from access at

104
00:06:46,170 --> 00:06:46,680
this point.

105
00:06:47,160 --> 00:06:50,250
So let's just go back to full access, click on Save.

106
00:06:50,910 --> 00:06:56,280
The next thing we're going to do is set up our bucket policy and the bucket policy is going to prevent

107
00:06:56,280 --> 00:06:59,970
any access except from the VPC endpoint.

108
00:07:00,720 --> 00:07:03,390
And that's something that comes up in a lot of exam scenarios.

109
00:07:03,870 --> 00:07:05,280
So let's go into our bucket here.

110
00:07:06,200 --> 00:07:11,250
Go to permissions, come down to bucket policy.

111
00:07:11,270 --> 00:07:15,080
Click Edit and I'm going to copy the bucket Iran.

112
00:07:15,740 --> 00:07:18,800
Now this is the bucket policy, so it's in your code.

113
00:07:18,800 --> 00:07:26,120
Amazon VPC Directory Bucket Policy BPC What you need to do is take this whole in here and just paste

114
00:07:26,600 --> 00:07:29,780
your correct air and over the top for your bucket.

115
00:07:30,320 --> 00:07:31,490
And there's two options here.

116
00:07:31,520 --> 00:07:34,160
One is without the slash style and one is with.

117
00:07:34,850 --> 00:07:40,310
So the one with the slash star means that you can also look at the objects within the bucket.

118
00:07:41,090 --> 00:07:48,620
Now, the last thing we need here is the VPC I.D. So back at my end point here, I'm going to copy the

119
00:07:48,620 --> 00:07:53,600
Endpoint ID and then come back and paste that into my policy.

120
00:07:54,690 --> 00:07:55,510
So that's it.

121
00:07:55,530 --> 00:07:58,120
This policy should now apply now, what does it do?

122
00:07:58,140 --> 00:07:58,770
Let's have a look.

123
00:07:59,190 --> 00:08:07,470
The policy is that the nine, so it's going to deny any principal, any free action on these resources,

124
00:08:07,470 --> 00:08:13,540
specifically if the condition does not equal this VPC endpoint.

125
00:08:14,010 --> 00:08:19,620
So in other words, if you're not coming from this VPC endpoint ID, you're going to get denied.

126
00:08:20,040 --> 00:08:23,670
If you are coming from this VPC Endpoint ID, it doesn't apply.

127
00:08:24,360 --> 00:08:30,270
So let's copy all of this code to our clipboards and back in the bucket policy editor here.

128
00:08:30,450 --> 00:08:34,260
I'm going to paste it all in and just save these changes.

129
00:08:34,620 --> 00:08:38,940
So let's go back and make sure we haven't broken access back in our instance.

130
00:08:39,210 --> 00:08:43,890
Let's try to run the IWC free LS command and we sell buckets.

131
00:08:44,310 --> 00:08:48,180
Let's check that we can see inside a bucket and that works correctly.

132
00:08:48,610 --> 00:08:52,350
Now that's good because this instance is coming from the VPC endpoint.

133
00:08:52,560 --> 00:08:55,050
So again, we've proven we're coming via the endpoint.

134
00:08:55,740 --> 00:09:00,630
But the other thing we can do is check from our own computers and we shouldn't be allowed access.

135
00:09:01,110 --> 00:09:07,290
So back in the terminal here, I'm going to run IWC S3 Ellis and I do see the buckets.

136
00:09:07,800 --> 00:09:10,620
But what about if I try to see inside the bucket?

137
00:09:11,190 --> 00:09:18,450
So the full command is IWC, S3, LS, S3, colon, slash slash and then your bucket name and hit enter.

138
00:09:19,740 --> 00:09:26,310
So I've got an access is denied, so that proves that I'm not able to access the bucket from my computer

139
00:09:26,310 --> 00:09:27,960
because I'm not coming via the endpoint.

140
00:09:28,530 --> 00:09:32,040
Now let's just go back to the console and have a look at the bucket in the bucket.

141
00:09:32,040 --> 00:09:35,150
Here you can see that we no longer have permissions to this bucket.

142
00:09:35,160 --> 00:09:40,950
We've actually locked ourselves out because I'm actually coming through the console here and the console

143
00:09:40,980 --> 00:09:42,330
doesn't come by the endpoint.

144
00:09:42,990 --> 00:09:51,510
So what we need to do is go back to our EC2 instance and we're going to run the command IWC s free arm

145
00:09:52,260 --> 00:09:53,790
and then put in the name of the bucket.

146
00:09:54,480 --> 00:10:00,060
So the full command is S3, r m S3 code on slash slash and then your bucket name.

147
00:10:00,780 --> 00:10:02,280
And let's see if that removes our bucket.

148
00:10:03,180 --> 00:10:06,330
So that's remove the bucket, so it doesn't matter that we're locked out.

149
00:10:06,570 --> 00:10:11,940
Another way you can get access to buckets when you've put in a policy and you can't actually get back

150
00:10:11,940 --> 00:10:14,070
into it again is to log in his route.

151
00:10:14,160 --> 00:10:15,420
That's always the way out.

152
00:10:15,870 --> 00:10:16,680
Now that is it.

153
00:10:16,680 --> 00:10:23,220
For this lesson, we have finished with the ISA to instance and the VPC endpoint, where the end point,

154
00:10:23,220 --> 00:10:27,690
you can simply select the endpoint, go to actions and then delete endpoint.

155
00:10:28,080 --> 00:10:31,290
And it should clean up the entry in your root table as well.

156
00:10:31,620 --> 00:10:33,930
But you can always just go and check.

157
00:10:34,140 --> 00:10:37,410
You might need to refresh the page and then it has gone.

158
00:10:37,710 --> 00:10:41,400
So once you've done that, terminate your instance and we finish for this lesson.

