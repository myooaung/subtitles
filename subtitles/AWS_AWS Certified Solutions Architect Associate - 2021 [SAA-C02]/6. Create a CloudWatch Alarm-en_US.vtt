WEBVTT
1
00:00:02.040 --> 00:00:06.960
Hi, guys, and this lesson, I just want to cover alarms again and just give you a bit more practice

2
00:00:06.960 --> 00:00:07.650
with alarms.

3
00:00:07.890 --> 00:00:09.230
So let's head out to alarms.

4
00:00:09.660 --> 00:00:13.140
I'm going to choose, create an alarm, choose to select a metric.

5
00:00:13.470 --> 00:00:15.300
I'm going to choose my custom metric.

6
00:00:15.570 --> 00:00:17.310
And let's select this one here.

7
00:00:17.310 --> 00:00:18.230
Memory usage.

8
00:00:18.360 --> 00:00:22.650
So now we get this option to specify our metric and conditions.

9
00:00:22.920 --> 00:00:24.090
And you can see a line here.

10
00:00:24.100 --> 00:00:28.810
So it's actually showing us the status of that metric at the moment, whatever's being reported.

11
00:00:28.920 --> 00:00:31.770
Now, I'm going to leave the metronome an instant side as it is.

12
00:00:31.950 --> 00:00:35.430
I'm happy with average statistics for period.

13
00:00:35.430 --> 00:00:39.200
I can change it down to one minute and that will make things a bit more granular.

14
00:00:39.780 --> 00:00:42.750
And then if you come down here, we can select the threshold.

15
00:00:43.050 --> 00:00:49.590
So, for example, if I choose four, we're going to see that our threshold is way under the actual

16
00:00:49.590 --> 00:00:50.490
reported data.

17
00:00:50.880 --> 00:00:56.010
And then if I choose seven, it's going to bring that up and you can see that it's now a little bit

18
00:00:56.010 --> 00:00:56.450
higher.

19
00:00:56.910 --> 00:01:00.210
Now we can see that our units have gone up to twelve here.

20
00:01:00.540 --> 00:01:03.310
So let's change this to 14.

21
00:01:03.600 --> 00:01:08.040
So now the bar is slightly higher than our actual memory usage.

22
00:01:08.280 --> 00:01:14.550
So we're going to need to add some more memory usage to our instance in order to trigger this alarm.

23
00:01:15.240 --> 00:01:16.380
So let's choose next.

24
00:01:16.890 --> 00:01:23.400
I'm going to choose to use an S.A.S. topic and I'm going to select the alarm state as an alarm.

25
00:01:23.440 --> 00:01:30.270
So in other words, whatever our threshold has been exceeded, it'll be in an alarm state and then I

26
00:01:30.270 --> 00:01:32.470
can trigger my S.A.S. topic.

27
00:01:32.640 --> 00:01:37.830
Now, you can actually trigger based on an okay state or even insufficient data, which is when there's

28
00:01:37.830 --> 00:01:40.500
just not enough metric information available.

29
00:01:41.130 --> 00:01:42.960
I'm going to choose to create a new topic.

30
00:01:43.050 --> 00:01:47.710
I'm happy with the default name and then I'm just going to pump in my email address here.

31
00:01:48.000 --> 00:01:49.980
And let's come down choose next.

32
00:01:50.100 --> 00:01:52.260
Great topic, then we choose next.

33
00:01:52.500 --> 00:01:59.980
And let's call the alarm cloud, watch memory and then it's just given us a final review and it's choose

34
00:02:00.000 --> 00:02:00.620
create alarm.

35
00:02:00.810 --> 00:02:02.040
So we've got that alarm.

36
00:02:02.280 --> 00:02:08.460
And at the moment, you can see it's in the state of insufficient data and we have a pending confirmation

37
00:02:08.460 --> 00:02:09.120
here as well.

38
00:02:09.240 --> 00:02:12.180
So that's because some subscriptions are pending confirmation.

39
00:02:12.180 --> 00:02:15.810
So I need to go to S.A.S. and we can see that this is in a pending state.

40
00:02:15.810 --> 00:02:21.240
So I could confirm this through my email or I can just choose confirm subscription and it needs the

41
00:02:21.240 --> 00:02:22.980
subscription confirmation URL.

42
00:02:23.100 --> 00:02:27.750
So I'm just going to head over and get that from my email and I'm going to post that in and confirm

43
00:02:27.750 --> 00:02:28.410
subscription.

44
00:02:29.250 --> 00:02:30.390
So that's all done.

45
00:02:30.720 --> 00:02:32.730
And now we can see that it's being confirmed.

46
00:02:32.970 --> 00:02:37.230
So what I want to do now is make sure that I can trigger that alarm state.

47
00:02:37.470 --> 00:02:43.110
So I'm going to come back and I'm going to stop that command from running and I'm going to go down and

48
00:02:43.110 --> 00:02:45.630
I'm going to change the number of VMS here.

49
00:02:45.810 --> 00:02:49.240
So let's just change that to twenty five and see what that does.

50
00:02:49.320 --> 00:02:51.420
That's going to create twenty five instances.

51
00:02:51.660 --> 00:02:55.530
So it's going to create a quite a lot more load than we had last time.

52
00:02:55.950 --> 00:03:00.930
And again, we're going to need to leave this for a few minutes now so we can go back to cloud watch.

53
00:03:01.200 --> 00:03:03.660
We can say our alarm is in an OK state now.

54
00:03:03.660 --> 00:03:06.150
So it's gathered some data and it's OK.

55
00:03:06.630 --> 00:03:13.110
And if we go down some metrics and we our metric chosen, let's just watch and see what happens to this

56
00:03:13.110 --> 00:03:14.150
over the next few minutes.

57
00:03:14.150 --> 00:03:18.390
So, again, you're going to need to just watch this for a few minutes and see what happens.

58
00:03:18.600 --> 00:03:22.250
And then hopefully soon we should have an alarm state that gets triggered.

59
00:03:22.560 --> 00:03:23.100
Hi, guys.

60
00:03:23.100 --> 00:03:27.180
I actually left mine for quite a while, so I left it for a while and I came back and realized that

61
00:03:27.180 --> 00:03:29.130
it hadn't actually generated enough memory.

62
00:03:29.130 --> 00:03:31.020
It was just beneath the right amount of memory.

63
00:03:31.230 --> 00:03:36.360
So I actually stopped the process and then I went and actually started 50 of these VMS.

64
00:03:36.660 --> 00:03:40.200
Now, I'm not sure if that's the best way to use, and that's all I've put fifty in.

65
00:03:40.320 --> 00:03:42.390
And that's certainly done what I wanted it to.

66
00:03:42.510 --> 00:03:47.070
And it's generated the load that's gone right up to twenty point four here and that's triggered our

67
00:03:47.070 --> 00:03:47.460
alarm.

68
00:03:47.460 --> 00:03:50.400
So we can see that we have an alarm in the alarm state here.

69
00:03:50.850 --> 00:03:54.990
And if we click on that one, we can see that we've got cloud watch memory in alarm.

70
00:03:55.200 --> 00:04:00.030
And it says the memory usage is greater than fourteen for one data points within one minute.

71
00:04:00.210 --> 00:04:03.960
So that's exactly what I wanted and that's all we're going to do in this lab.

72
00:04:03.960 --> 00:04:09.840
So what we can do now is head back over to our EC2 instance and I'm just going to terminate this instance.

73
00:04:10.170 --> 00:04:15.780
And if you want to clean things up, you can go in as well and delete your subscription here, delete

74
00:04:15.780 --> 00:04:16.440
your topic.

75
00:04:16.770 --> 00:04:21.630
And then on the cloud watch, we've got this alarm, so let's just go and delete our alarm.

76
00:04:21.900 --> 00:04:23.760
So I hope that worked well for you guys.

77
00:04:23.760 --> 00:04:26.640
And in the next lesson, we're going to look at cloud watch logs.

