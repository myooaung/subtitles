1
00:00:01,780 --> 00:00:08,080
In this lab we're going to create a table in dynamoDB and which can add some items to it and have

2
00:00:08,080 --> 00:00:09,470
a look around the console.

3
00:00:09,520 --> 00:00:10,890
So simple thing to do.

4
00:00:10,890 --> 00:00:16,120
You go into tables and create a table and then what we're gonna do is we're going to create a table

5
00:00:16,120 --> 00:00:22,940
I'm going to call this TV series and then you need to specify a partition key and for this I'm going

6
00:00:22,940 --> 00:00:26,390
to put in series name and it's gonna be a string value.

7
00:00:26,470 --> 00:00:32,440
You can then optionally add a sort key So for instance for the TV series I'm going to add the season

8
00:00:33,130 --> 00:00:43,030
and you will now have to put in these values so you now are required to put in a value for each of these.

9
00:00:43,030 --> 00:00:48,880
If you then select this option for default settings you then have options for secondary indexes.

10
00:00:48,880 --> 00:00:52,190
You have options for the read and write capacity mates.

11
00:00:52,190 --> 00:00:58,090
This is what I mentioned in the previous lab so you have provisioned and then you have on demand so

12
00:00:58,090 --> 00:01:02,490
you might want to stick in provision for free tier if you choose on demand.

13
00:01:02,650 --> 00:01:09,030
It will then scale your dynamoDB database as required to perform.

14
00:01:09,220 --> 00:01:13,660
Let's put it on provisioned and you can see here that you have a read.

15
00:01:13,660 --> 00:01:19,240
Capacity units option and a write capacity units and it estimates the amount of cost per month.

16
00:01:19,250 --> 00:01:22,780
That's very low for five read and five write.

17
00:01:22,930 --> 00:01:28,780
You can then choose to enable auto scaling and you can choose for which read all the right capacity

18
00:01:29,110 --> 00:01:34,940
you specify your target database utilization and then your minimum and your maximum capacity units.

19
00:01:34,990 --> 00:01:40,650
You can also then change the IAM role that's assigned to dynamoDB in this case.

20
00:01:40,660 --> 00:01:47,050
This is for auto scaling and you can also enable encryption even under the default settings using server

21
00:01:47,050 --> 00:01:53,110
side encryption using AWS owned customer master key or by using KMS where you can then sort

22
00:01:53,110 --> 00:01:55,230
of specify another master key.

23
00:01:55,580 --> 00:01:57,880
I'm going to leave these and what am I going to do.

24
00:01:57,880 --> 00:02:03,670
I'm just gonna go back up here and choose the default settings and click Create.

25
00:02:03,760 --> 00:02:04,360
So that's it.

26
00:02:04,380 --> 00:02:06,550
It's really fast to create a table.

27
00:02:06,640 --> 00:02:08,440
We'll go to items in a minute.

28
00:02:08,440 --> 00:02:14,020
We can go into metrics and I'm so you can see some cloud Watch metrics here so you can see how many

29
00:02:14,020 --> 00:02:19,750
of your reach capacity units are being used and how many of your write capacity units you can then go

30
00:02:19,750 --> 00:02:21,970
to alarms and create an alarm.

31
00:02:21,970 --> 00:02:29,920
You can change your capacity settings here you can create your indexes global tables so if you remember

32
00:02:29,920 --> 00:02:33,350
this is this is what we want to do in a couple of labs time.

33
00:02:33,350 --> 00:02:37,780
What are you going to credit global tables so that we can have a multi master multi region database

34
00:02:38,140 --> 00:02:42,600
and for that you need to enable dynamo DV streams.

35
00:02:42,730 --> 00:02:47,890
We then have our backup options and we can't see this at the moment because the table is just being

36
00:02:47,890 --> 00:02:49,150
created.

37
00:02:49,150 --> 00:02:52,390
We'll go back to that and then we have under access control here.

38
00:02:52,510 --> 00:02:59,410
You can choose identity providers so you can specify a specific identity provider and then provide a

39
00:02:59,410 --> 00:03:00,460
policy.

40
00:03:00,550 --> 00:03:02,860
And this is use of Web identity Federation.

41
00:03:02,890 --> 00:03:07,140
Let's go back to items and what we're going to do is we're going to start creating some items.

42
00:03:07,240 --> 00:03:11,770
So we need to put in a series name so let's call Let's go for Game of Thrones.

43
00:03:11,770 --> 00:03:12,430
What else!

44
00:03:13,090 --> 00:03:16,270
And let's choose season as Season 8.

45
00:03:16,310 --> 00:03:21,820
And I don't need to specify any other attributes here but I do need to specify these and then I can

46
00:03:21,850 --> 00:03:23,340
add additional attributes.

47
00:03:23,340 --> 00:03:31,480
So for instance I could choose to add a string and that string might be the network.

48
00:03:31,480 --> 00:03:33,070
So let's see which network was this.

49
00:03:33,070 --> 00:03:37,630
Well it's HBO and so I can click on save.

50
00:03:37,670 --> 00:03:41,030
And now that item is now added to my table.

51
00:03:41,150 --> 00:03:48,980
So let's create another one now and let's create one for the Walking Dead and let's put in Season 6

52
00:03:49,760 --> 00:03:57,080
and I don't want to specify the network for this one but what I do want to specify is the year so I

53
00:03:57,080 --> 00:04:03,020
can put in number and I can go a year and this one was 2015

54
00:04:06,040 --> 00:04:15,030
and I could also go in and let's say add another number and this might be the number of episodes - 16

55
00:04:15,840 --> 00:04:17,030
and click save.

56
00:04:17,160 --> 00:04:19,200
So we can see that I didn't enter the network.

57
00:04:19,200 --> 00:04:19,920
I don't have to.

58
00:04:19,920 --> 00:04:26,160
Every item can have different entries, it must have the partition key.... so you must provide

59
00:04:26,910 --> 00:04:31,900
a value for these but you can then change what values you assign to the other ones.

60
00:04:32,070 --> 00:04:37,640
I could then go in and add Sherlock for instance and I need to again put in season.

61
00:04:37,650 --> 00:04:38,930
So let's put in four.

62
00:04:39,720 --> 00:04:47,910
And then I could add another string and that might be starring and I can put the name of an actor

63
00:04:50,710 --> 00:04:52,050
and click on save.

64
00:04:52,050 --> 00:04:57,380
So now you have all these different attributes and you can see each of my items has different attributes

65
00:04:57,390 --> 00:05:00,650
and this is really the power of the nosql databases.

66
00:05:00,700 --> 00:05:03,770
With a structured database like RDS you can't do this.

67
00:05:03,870 --> 00:05:09,630
You must provide the same attributes for each row or each line item that you put in.

68
00:05:10,080 --> 00:05:13,160
We then have a couple of options for searching for data.

69
00:05:13,170 --> 00:05:16,530
You can have a scan or query queries.

70
00:05:16,560 --> 00:05:25,510
Use the partition key and the sort key whereas this and they're very fast and then a scan uses filters

71
00:05:25,510 --> 00:05:28,040
and you can then add in these filters.

72
00:05:28,170 --> 00:05:30,400
Let's just go back up to have a look at backups.

73
00:05:30,490 --> 00:05:31,250
It's enabled.

74
00:05:31,260 --> 00:05:39,100
Now we can see some options here so you could click on enable for points in time recovery and you can

75
00:05:39,100 --> 00:05:44,510
create your on demand backups here and choose a backup name.

76
00:05:44,520 --> 00:05:50,970
There's also an option in dynamoDB to purchase reserve capacity so you can click on this option here

77
00:05:51,540 --> 00:05:55,340
choose your read or write capacity units and then select a term.

78
00:05:55,350 --> 00:06:03,220
So you could do read capacity units and then you have the options of one or three years and you'll get

79
00:06:03,220 --> 00:06:04,390
a significant discount.

80
00:06:04,390 --> 00:06:04,870
So here we go.

81
00:06:04,870 --> 00:06:10,730
You got a 76 percent discount for your read capacity units over four years.

82
00:06:10,880 --> 00:06:18,550
We then have dynamoDB accelerator or Dax and this is an in-memory cache for your dynamoDB database.

83
00:06:18,590 --> 00:06:22,300
So this is the way that you can get your latency down to the microseconds.

84
00:06:22,850 --> 00:06:27,710
And this is gonna be the subject of the next lab where we're going to actually try a Dax cluster and

85
00:06:27,710 --> 00:06:30,350
we're going to use an EC2 instance to query the cluster.

