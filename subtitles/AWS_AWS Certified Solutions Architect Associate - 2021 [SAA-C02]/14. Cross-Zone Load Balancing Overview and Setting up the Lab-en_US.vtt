WEBVTT
1
00:00:02.090 --> 00:00:05.720
Hi, guys, and this map, we're going to come across Soane load balancing.

2
00:00:05.810 --> 00:00:12.050
Now you may remember that the white elastic load balancing works is actually deploys nodes within each

3
00:00:12.050 --> 00:00:13.130
availability zone.

4
00:00:13.340 --> 00:00:16.670
They're actually in your subnet and they take IP addresses in your subnet.

5
00:00:17.000 --> 00:00:20.240
Now, you don't see these, but they're there now.

6
00:00:20.240 --> 00:00:27.230
The elastic load balancing service needs to split traffic between your availability zones and the way

7
00:00:27.230 --> 00:00:27.830
that it does.

8
00:00:27.830 --> 00:00:34.370
This is determined by how you configure cross load balancing in the case where cross-line load balancing

9
00:00:34.370 --> 00:00:35.280
is disabled.

10
00:00:35.330 --> 00:00:36.460
This is what happens.

11
00:00:36.890 --> 00:00:38.330
So requests come in.

12
00:00:38.480 --> 00:00:45.140
50 percent of those requests will be sent to one Elby node, 50 percent get sent to the other Elby node.

13
00:00:45.620 --> 00:00:50.290
Now, that means where you have an uneven number of instances.

14
00:00:50.510 --> 00:00:57.770
So we have free instances here, but we have to hear 50 percent of the traffic gets divided into these

15
00:00:57.770 --> 00:00:58.600
three instances.

16
00:00:58.610 --> 00:01:01.450
So they each receive about sixteen point six percent.

17
00:01:01.460 --> 00:01:07.280
However, in availability zone B, there's only two instances and they're also receiving 50 percent

18
00:01:07.280 --> 00:01:08.020
of the traffic.

19
00:01:08.330 --> 00:01:11.930
So they're actually taking 25 percent of the load each.

20
00:01:11.960 --> 00:01:16.070
Now, that means they have a disproportionately high amount of load on them.

21
00:01:16.400 --> 00:01:21.620
And if they're all the same instance type, that means these guys are more heavily loaded than these

22
00:01:21.620 --> 00:01:22.070
guys.

23
00:01:22.460 --> 00:01:23.600
And you might not want that.

24
00:01:23.630 --> 00:01:27.140
So what you can do is enable cross load balancing.

25
00:01:27.290 --> 00:01:34.970
When cross load balancing is enabled, the Elby service determines how much traffic to send to the nodes

26
00:01:34.970 --> 00:01:36.450
in each availability zone.

27
00:01:36.890 --> 00:01:42.800
So in the same example where we have free instances and one availability zone in two and another, it

28
00:01:42.800 --> 00:01:49.040
knows that you have to send 60 here so that they get 20 percent each and 40 percent of the traffic to

29
00:01:49.040 --> 00:01:52.710
this node so that these guys receive 20 percent each as well.

30
00:01:52.730 --> 00:01:54.140
So that's how it works.

31
00:01:54.560 --> 00:01:59.750
Whether cross-line load balancing is enabled or not, you'll always get the elastic load, balancing

32
00:01:59.750 --> 00:02:03.640
service, distributing traffic between availability zones.

33
00:02:04.160 --> 00:02:09.100
It's just how it proportions the traffic, how it breaks it up and allocates it.

34
00:02:09.740 --> 00:02:15.380
So when it's enabled, it will allocate it proportionally to the number of instances in your availability

35
00:02:15.380 --> 00:02:15.840
zones.

36
00:02:16.220 --> 00:02:20.390
Otherwise, it just sends an equal number of traffic to each availability zone.

37
00:02:20.420 --> 00:02:26.930
Now the default configuration depends on the type of load balancer and whether you create the load balance

38
00:02:26.930 --> 00:02:30.440
of through the console or through the CLIA API.

39
00:02:31.220 --> 00:02:36.800
So if an application load balancer, it's just enabled in all cases and you can't disable it with a

40
00:02:36.800 --> 00:02:40.660
network load balancers disabled, but you can enable it.

41
00:02:40.670 --> 00:02:48.080
And with a classic low balance, it's enabled if you create the CLP through the console, but it's disabled.

42
00:02:48.080 --> 00:02:54.990
If you create the CLP through the CLP or API and again, you can enable or disable it manually as well.

43
00:02:55.070 --> 00:02:56.170
So that's the ferry.

44
00:02:56.180 --> 00:02:59.110
Let's get into some labs and actually look how this works.

45
00:02:59.360 --> 00:03:04.340
I'm in the console now and what I'm going to do for this lab is set up an auto scaling group.

46
00:03:04.340 --> 00:03:06.020
So let's just choose an Amazon.

47
00:03:06.050 --> 00:03:09.650
And two, I we're going to choose the T2 micro.

48
00:03:10.220 --> 00:03:11.960
We're going to call this L.C one.

49
00:03:12.500 --> 00:03:19.420
I'm going to use my S3 full access Iame roll and then I'm going to paste in some user data.

50
00:03:19.430 --> 00:03:25.070
So this is the same user data we've used before that's actually going to generate a name and an Apache

51
00:03:25.070 --> 00:03:28.030
Web page with the name on it for each instance.

52
00:03:28.070 --> 00:03:34.280
Now I can then click next, go through to security groups, choose my Web Access Security Group and

53
00:03:34.280 --> 00:03:34.850
review.

54
00:03:35.870 --> 00:03:42.140
And launch, she's my keeper, and then let's choose to create an auto scaling group.

55
00:03:42.170 --> 00:03:46.250
I'm going to call it S.G. one and I'm going to start with three instances.

56
00:03:46.610 --> 00:03:50.570
And what I want to do is put these across two availability zones.

57
00:03:51.780 --> 00:03:56.790
So what that will do is it will mean I'll have two instances and one availability zone, one in the

58
00:03:56.970 --> 00:03:57.210
US.

59
00:03:57.230 --> 00:04:01.080
That's a great way to work out how cross-line load balancing is working.

60
00:04:01.110 --> 00:04:05.850
I'm going to go next and I'm going to keep the group at the initial size, click right through to review

61
00:04:05.880 --> 00:04:07.560
and create the auto scanning group.

62
00:04:07.740 --> 00:04:10.410
So we should now have three instances coming up.

63
00:04:10.650 --> 00:04:11.550
Let's just have a look.

64
00:04:11.650 --> 00:04:13.350
We've got our three instances running.

65
00:04:13.560 --> 00:04:18.330
We've got one in AP selfies to be and then two AP selfies to.

66
00:04:18.540 --> 00:04:20.130
And that's all we need to do for now.

67
00:04:20.130 --> 00:04:25.050
We're going to keep this configuration running for the next three labs where we're going to look at

68
00:04:25.050 --> 00:04:30.750
the classic load balancer, the network load balancer and the application load balancer and see how

69
00:04:30.750 --> 00:04:34.500
cross load balancing works for each of those types of elby.

