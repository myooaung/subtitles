1
00:00:02,010 --> 00:00:02,610
Hi, guys.

2
00:00:02,880 --> 00:00:09,090
And this lesson I'm going to discuss or fence occasion methods, so what you can use to authenticate

3
00:00:09,300 --> 00:00:10,470
to a W.S..

4
00:00:10,620 --> 00:00:15,900
So firstly at the very top here we have what is perhaps one of the more difficult concepts to understand.

5
00:00:16,290 --> 00:00:22,260
The access key, an access key is composed of an access key I.D. and a secret access key.

6
00:00:22,560 --> 00:00:23,770
So there's two parts to it.

7
00:00:24,270 --> 00:00:28,110
And you use this for programatic access to a W.S..

8
00:00:28,620 --> 00:00:36,240
So, for example, if you're using the command line interface to launch a service on a W.S., you would

9
00:00:36,240 --> 00:00:39,370
need to have an access key to be able to offensive code.

10
00:00:39,540 --> 00:00:41,190
It's also used for the API.

11
00:00:41,490 --> 00:00:44,860
And when accessing a W.S. by the software development kit.

12
00:00:45,090 --> 00:00:50,220
Now you can add multifactorial fanfiction protection to your API calls.

13
00:00:50,580 --> 00:00:54,790
We'll talk about MFA in the next lesson so you'll fully understand what it means.

14
00:00:54,810 --> 00:00:57,960
Then the next stop is probably what you're most familiar with.

15
00:00:58,110 --> 00:01:00,640
So this is a typical username and password.

16
00:01:01,260 --> 00:01:06,450
So you'd have a user account and then use your account as a password, which is hopefully nice and strong,

17
00:01:06,460 --> 00:01:07,020
like this one.

18
00:01:07,350 --> 00:01:11,520
And you use a username and password to access the management console.

19
00:01:12,060 --> 00:01:16,430
So this is the visual interface in which you can interact with a W.S..

20
00:01:16,770 --> 00:01:20,640
You can come in here and you can view your services and you can launch services.

21
00:01:21,150 --> 00:01:25,530
So you use a username and password to you to access the management console.

22
00:01:25,800 --> 00:01:28,950
And again, this can be also protected with MFA.

23
00:01:29,220 --> 00:01:30,690
We then have a signing certificate.

24
00:01:31,110 --> 00:01:35,310
This doesn't come up much on the exam, but I'll explain to you in this lesson what it means.

25
00:01:35,490 --> 00:01:40,650
So an access key is a combination of an access key I.D. and a secret access key.

26
00:01:40,830 --> 00:01:46,420
And you use these for programmatic calls when using the API and you can put them in program code or

27
00:01:46,420 --> 00:01:51,510
at the command prompt when you're using the command line interface or the PowerShares tools.

28
00:01:51,750 --> 00:01:55,020
You can create, modify, view or rotate access keys.

29
00:01:55,350 --> 00:01:59,850
And you can do that through the console as well as programmatically when created.

30
00:02:00,120 --> 00:02:03,750
I am returns the access key I.D. and secret access key.

31
00:02:04,200 --> 00:02:07,920
Now these secret access key is returned only at creation time.

32
00:02:08,220 --> 00:02:11,100
And if it's lost, a new key has to be created.

33
00:02:11,430 --> 00:02:17,760
So we'll see this later in a section where we create an access key and we get to see the secret access

34
00:02:17,760 --> 00:02:18,060
key.

35
00:02:18,420 --> 00:02:19,350
But only once.

36
00:02:19,560 --> 00:02:22,860
If we lose it, we have to destroy the access key and create a new one.

37
00:02:23,190 --> 00:02:28,710
You need to ensure the access keys and secret access keys are stored securely because whatever privileges

38
00:02:28,770 --> 00:02:30,630
are associated with your account.

39
00:02:30,780 --> 00:02:36,990
Anyone who has access to your access keys will be able to assume those privileges programmatically.

40
00:02:37,200 --> 00:02:42,450
Now users can be given access to change their own keys, fruit and policy, but not for the console.

41
00:02:42,720 --> 00:02:47,280
And you can disable a user's access key, which prevents it from being used for API calls.

42
00:02:47,550 --> 00:02:48,510
So that's really important.

43
00:02:48,570 --> 00:02:54,240
If somebody loses their key or they thinks it's being it's being compromised, then you can disable

44
00:02:54,240 --> 00:02:55,110
it and create a new one.

45
00:02:55,410 --> 00:02:58,110
Next up, we have the console password.

46
00:02:58,380 --> 00:03:05,310
So this is a password that the user enters to sign in interactively using the AWB management console.

47
00:03:06,180 --> 00:03:08,400
You can allow users to change their own passwords.

48
00:03:08,730 --> 00:03:14,910
And you can allow selected I am users to change their passwords by disabling the option for all users

49
00:03:15,000 --> 00:03:18,570
and then using a policy to grant permissions for selected users.

50
00:03:18,870 --> 00:03:21,450
That's something that can come sometimes come up in the exam.

51
00:03:21,750 --> 00:03:25,740
Lastly, we have a service director, also known as a signing certificate.

52
00:03:26,130 --> 00:03:32,550
So this is a SSL tearless certificate that you can use to authenticate with some A.W. services.

53
00:03:33,150 --> 00:03:39,330
Now, you can actually provision these using a service called a W.S. certificate manager and that can

54
00:03:39,330 --> 00:03:42,320
provision, manage and deploy your service defecates.

55
00:03:42,540 --> 00:03:48,390
You can also use IAM and you do that when you need to support Heggarty G.P.S. connections in a region

56
00:03:48,420 --> 00:03:50,340
that's not supported by ACM.

