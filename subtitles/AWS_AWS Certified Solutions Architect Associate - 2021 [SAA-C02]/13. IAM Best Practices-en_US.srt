1
00:00:05,200 --> 00:00:10,870
So we're at the end of the I Am section of the course, and I just want to go over the best practices

2
00:00:10,870 --> 00:00:16,660
for using the IAM service now really important to know these again, this is something that comes up

3
00:00:16,660 --> 00:00:17,350
in the exam.

4
00:00:17,710 --> 00:00:21,850
So it's a bit of a bullet point list, but it's really important to understand these.

5
00:00:22,390 --> 00:00:28,390
So the first thing is that you should lock away your IWC account user access keys.

6
00:00:28,630 --> 00:00:35,140
So you remember I talked about the user account and how it has so many permissions and you can't restrict

7
00:00:35,140 --> 00:00:36,340
them now.

8
00:00:36,340 --> 00:00:40,060
Access keys are those keys that you could use for programmatic access.

9
00:00:40,510 --> 00:00:46,070
You should even delete them from that user account or just make sure that they're very well secured.

10
00:00:46,110 --> 00:00:47,320
Great individual.

11
00:00:47,320 --> 00:00:48,310
I am users.

12
00:00:48,550 --> 00:00:50,530
So that's what we've done in this section.

13
00:00:50,530 --> 00:00:57,490
We created our own user account and now we're logging in as that user account rather than roots use

14
00:00:57,490 --> 00:01:00,520
groups to assign permissions to IAM users.

15
00:01:00,820 --> 00:01:07,750
Now you can assign policies directly to users, but remember we looked at how you can do it free groups.

16
00:01:08,050 --> 00:01:13,750
So you assign the permissions to the group once and then everyone who gets put in that group gets those

17
00:01:13,750 --> 00:01:14,440
permissions.

18
00:01:14,440 --> 00:01:18,370
Much better way of doing it always grant least privilege.

19
00:01:18,640 --> 00:01:23,020
So don't give people more access rights than they need to do their job.

20
00:01:23,200 --> 00:01:26,350
Get started using permissions with managed policies.

21
00:01:26,620 --> 00:01:33,460
Now, when we were adding a policy to our group earlier on, they were the IWC managed policies, their

22
00:01:33,460 --> 00:01:34,840
predefined for you.

23
00:01:35,140 --> 00:01:40,870
Now, if you don't have a lot of experience with writing policies, you can make mistakes.

24
00:01:41,140 --> 00:01:46,120
So that's why there's a best practice to get started by using the managed policies.

25
00:01:46,300 --> 00:01:52,510
Once you really understand them and you've got more expertise, then create your own use customer managed

26
00:01:52,510 --> 00:01:55,420
policies instead of inline policies.

27
00:01:55,720 --> 00:02:02,170
This is again talking about not assigning the policies directly to a user that's known as an inline

28
00:02:02,170 --> 00:02:02,770
policy.

29
00:02:03,130 --> 00:02:09,670
Instead, create your own custom policies and use those use access levels to review and permissions.

30
00:02:09,940 --> 00:02:16,030
What this means is that you should regularly audit the permissions that are assigned to all of your

31
00:02:16,030 --> 00:02:19,000
users and other principles in your account.

32
00:02:19,300 --> 00:02:23,290
Just make sure that they only have the permissions they need that least privilege.

33
00:02:23,500 --> 00:02:27,040
Configure a strong password policy for your users.

34
00:02:27,310 --> 00:02:35,020
You can enforce a password policy within IAM, and that enables you to make sure that users have complex

35
00:02:35,020 --> 00:02:36,970
passwords that are difficult to guess.

36
00:02:37,600 --> 00:02:38,650
Enable MFA.

37
00:02:38,680 --> 00:02:40,390
We did that in this section.

38
00:02:40,660 --> 00:02:47,560
Multifactor authentication is a great way to add additional security to your account, use roles for

39
00:02:47,560 --> 00:02:50,390
applications that run on two instances.

40
00:02:50,410 --> 00:02:52,810
Now we're going to look at this in the next section.

41
00:02:53,140 --> 00:02:58,930
It's a way of assigning the ability for an easy to instance to assume a role.

42
00:02:58,930 --> 00:03:05,050
Rather than having access keys hardcoded into the code, they can be a security risk.

43
00:03:05,080 --> 00:03:10,060
Now, don't worry if that doesn't make sense, because I'm going to show you in the next section use

44
00:03:10,060 --> 00:03:11,770
rules to delegate permissions.

45
00:03:11,950 --> 00:03:13,690
Great way to delegate permissions.

46
00:03:13,690 --> 00:03:17,680
Again, we'll see that in action soon and do not share access keys.

47
00:03:17,890 --> 00:03:19,600
It's really important not to share them.

48
00:03:19,810 --> 00:03:24,790
These give people access to perform whatever permissions are assigned to your user.

49
00:03:24,790 --> 00:03:30,700
Accounts rotate credentials regularly, so this means make sure you change your passwords, you renew

50
00:03:30,700 --> 00:03:31,690
your access keys.

51
00:03:31,900 --> 00:03:37,090
So if they do get compromised, then at least two are mitigating the amount of time that they can be

52
00:03:37,090 --> 00:03:37,480
used.

53
00:03:38,200 --> 00:03:42,100
Remove unnecessary credentials, so only have the ones you need.

54
00:03:42,250 --> 00:03:45,010
Use policy conditions for extra security.

55
00:03:45,040 --> 00:03:50,050
Now you've already seen a few policy documents and you've got some JSON code in there.

56
00:03:50,350 --> 00:03:57,130
Now you can assign something called a condition that might say that the policy applies only to users

57
00:03:57,130 --> 00:04:01,120
coming from a certain computer IP address, for example.

58
00:04:01,600 --> 00:04:04,840
So that's a condition, and that's an extra level of security.

59
00:04:05,710 --> 00:04:12,070
You should also monitor activity in your accounts, always monitor and try and know what is going on

60
00:04:12,280 --> 00:04:17,080
so that if there's any suspicious activity, you can identify it and then act upon it.

61
00:04:17,260 --> 00:04:21,130
So those are the eight of us Iam best practices.

