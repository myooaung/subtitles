1
00:00:02,230 --> 00:00:04,340
Welcome to another exam cram.

2
00:00:04,360 --> 00:00:09,040
There's definitely a lot to cover on databases so let's get stuck straight into it.

3
00:00:09,400 --> 00:00:11,290
So with Amazon RDS

4
00:00:14,760 --> 00:00:16,760
this is the relational database service.

5
00:00:16,770 --> 00:00:23,700
It's a managed service for running relational databases in the cloud and you use it for online transaction

6
00:00:23,700 --> 00:00:27,930
processing types of databases so not analytics databases.

7
00:00:27,930 --> 00:00:34,770
This is more your sort of databases for your transactional systems. Primary use case is transactional

8
00:00:34,770 --> 00:00:42,210
rather than analytical so structured relational data storage requirements and aims to be a drop in replacement

9
00:00:42,210 --> 00:00:45,990
for existing on premise instances of the same databases.

10
00:00:45,990 --> 00:00:54,110
So if you're running SQL on premise or MySQL on premise you can migrate that onto RDS.

11
00:00:54,150 --> 00:01:00,750
It has automated backups some patching applied and they're done in customer defined maintenance windows.

12
00:01:00,930 --> 00:01:06,870
Now it has what they call push button scaling but remember with RDS you do need to change the

13
00:01:06,990 --> 00:01:08,130
instance type.

14
00:01:08,250 --> 00:01:12,700
So there's actually a reboot required so there's a little bit of downtime.

15
00:01:12,780 --> 00:01:20,140
You can also set up replication and redundancy so the different types of engines are Aurora.

16
00:01:20,180 --> 00:01:23,870
That's the proprietary AWS database.

17
00:01:23,870 --> 00:01:31,190
Then you've got MySQL, MariaDB, Oracle, Microsoft SQL Server and PostgreSQL.

18
00:01:31,250 --> 00:01:37,760
It's a managed service and you don't have access to the underlying EC2 instance. Key exam question

19
00:01:37,760 --> 00:01:38,390
here.

20
00:01:38,570 --> 00:01:46,490
If you have a scenario where a database is going to be migrated onto AWS but the company needs to

21
00:01:46,490 --> 00:01:52,040
be able to maybe install some software at the operating system level and managing at the operating system

22
00:01:52,040 --> 00:01:57,890
level you can't put it on RDS. That might be better for EC2. RDS includes security and patching

23
00:01:58,010 --> 00:02:03,360
automated backup software updates and the scaling for storage and compute.

24
00:02:03,380 --> 00:02:10,510
You can also set up the multi AZ for synchronous replication and automatic failover. Read replicas

25
00:02:10,510 --> 00:02:15,780
are used for scaling read not scaling write.

26
00:02:15,890 --> 00:02:17,670
So there are alternatives.

27
00:02:17,840 --> 00:02:22,090
As I mentioned before if we have a use case that's not supported on RDS.

28
00:02:22,160 --> 00:02:27,900
For instance you need to access the underlying operating system or maybe the database engine isn't supported.

29
00:02:28,070 --> 00:02:30,950
Then you can use EC2. Install on EC2.

30
00:02:30,950 --> 00:02:33,270
But now you have to manage that instance.

31
00:02:33,320 --> 00:02:38,240
So if you do consider using EC2 instead of RDS

32
00:02:38,240 --> 00:02:43,940
remember you can run any database you like and have full control and flexibility but you have to manage

33
00:02:44,030 --> 00:02:48,440
everything including the backups, redundancy, patching and scaling.

34
00:02:48,440 --> 00:02:49,670
But it's a good option

35
00:02:49,670 --> 00:02:53,990
if your database isn't supported. It's also a good option

36
00:02:53,990 --> 00:03:00,470
if it's not feasible for some reason to migrate to an AWS managed database and that might be the flexibility

37
00:03:00,770 --> 00:03:04,340
and the control that you might need especially at the operating system level.

38
00:03:04,340 --> 00:03:10,520
So with encryption you can encrypt your RDS instances and snapshots by enabling the encryption

39
00:03:10,850 --> 00:03:18,740
for your DB. Instance encryption at rest is supported for all DB types and uses KMS keys. When using

40
00:03:19,070 --> 00:03:20,530
encryption at rest

41
00:03:20,540 --> 00:03:22,390
the following elements are also encrypted.

42
00:03:22,400 --> 00:03:31,170
That's the snapshots, backups, DB instance storage. Because you cannot encrypt an existing database

43
00:03:31,580 --> 00:03:37,670
so if you have a database that's not encrypted and you want to encrypt it what you have to do is create

44
00:03:37,670 --> 00:03:44,930
a snapshot encrypt the snapshot create a copy of it and then build the encrypted database from the snapshot.

45
00:03:45,350 --> 00:03:51,020
Data that's encrypted at rest includes the underlying storage for the DB instance, it's automated backups

46
00:03:51,280 --> 00:03:58,100
read replicas and snapshots and read replica of an RDS database that's encrypted is also encrypted

47
00:03:58,100 --> 00:04:00,410
using the same key as the master instance.

48
00:04:00,440 --> 00:04:06,710
As long as they're both in the same region if the master and the replica are in different regions you

49
00:04:06,710 --> 00:04:13,490
encrypt using the encryption key for that region instead. You can't have an encrypted read replica

50
00:04:13,550 --> 00:04:20,890
of an unencrypted DB instance or an unencrypted read replica of an encrypted DB instance.

51
00:04:20,920 --> 00:04:22,500
So what do you pay for.

52
00:04:22,570 --> 00:04:28,660
You pay for the DB instance hours, partial hours are charged as full, you pay for storage and gigabytes a

53
00:04:28,660 --> 00:04:30,700
month - that's EBS storage.

54
00:04:30,700 --> 00:04:37,780
You pay for I/O requests a month and that's magnetic storage for provisioned IOPS you pay for the IOPS

55
00:04:37,810 --> 00:04:38,490
provisioned.

56
00:04:38,590 --> 00:04:41,060
Just like you would with any EBS volume.

57
00:04:41,230 --> 00:04:54,020
You also pay for egress data transfer you pay for backup storage but remember that you get up to the

58
00:04:54,260 --> 00:04:56,560
EBS volume size for free.

59
00:04:56,660 --> 00:05:03,980
So if you attach 100 gig EBS volume to your database then you get 100 gig worth of snapshot space for

60
00:05:03,980 --> 00:05:04,640
free.

61
00:05:04,640 --> 00:05:11,030
Now for multi AZ you're charged for multiple DB hours so the extra instance that you've got in the

62
00:05:11,060 --> 00:05:16,610
other availability zone, provisioned storage, double the writes because everything has to be written

63
00:05:16,610 --> 00:05:24,620
twice. You're not charged for the data transfer from the primary to the secondary. Oracle and Microsoft

64
00:05:24,630 --> 00:05:26,340
SQL licenses are included.

65
00:05:26,340 --> 00:05:28,330
Or you can bring your own or BYOL.

66
00:05:29,960 --> 00:05:36,870
On Demand and reserved instance pricing is also available for RDS. In terms of scalability.

67
00:05:36,890 --> 00:05:43,280
You can only scale RDS up based on changing the compute and storage.

68
00:05:43,280 --> 00:05:47,480
You can't decrease the allocated storage for an RDS instance.

69
00:05:47,480 --> 00:05:55,240
You can scale storage and change the storage time for all DB engines except MS SQL. With MS SQL

70
00:05:55,280 --> 00:06:02,560
you have to create a new instance from a snapshot with a new config. Now scaling storage for those other

71
00:06:02,560 --> 00:06:06,040
engines can happen while the instance is running without outage.

72
00:06:06,040 --> 00:06:11,310
But there might be some performance degradation and scaling compute will cause downtime because you

73
00:06:11,310 --> 00:06:14,380
are changing instance types and that requires a reboot.

74
00:06:15,950 --> 00:06:21,830
However you can have those changes take effect in the maintenance window rather than immediately.

75
00:06:21,860 --> 00:06:28,160
So in terms of performance RDS uses EBS volumes for the database and log. There are three types you

76
00:06:28,160 --> 00:06:34,250
got a general purpose, provisioned IOPS and magnetic, and magnetic is not recommended except for backwards

77
00:06:34,250 --> 00:06:36,690
compatibility.

78
00:06:36,720 --> 00:06:42,150
Now we also have multi AZ and read replicase because these are used for high availability fault tolerance

79
00:06:42,540 --> 00:06:47,140
and performance scaling so let's have a look at the difference between these two.

80
00:06:47,140 --> 00:06:55,280
You definitely need to know these for the exam so multi AZ is where you have a standby database in

81
00:06:55,290 --> 00:07:01,530
a separate availability zone so you use that for disaster recovery and it uses synchronous replication.

82
00:07:02,190 --> 00:07:08,410
Read replicas use asynchronous replication but they're just for scaling read performance. With multi

83
00:07:08,410 --> 00:07:14,880
AZ only the database engine on the primary is active whereas read replicas all of the replicas are available

84
00:07:14,880 --> 00:07:22,430
to be read from and then you write to your main master database with. multi AZ automated backups can

85
00:07:22,430 --> 00:07:27,530
be taken from the standby so you don't have your backups running on the primary whereas there's no backups

86
00:07:27,530 --> 00:07:28,710
configured on a read replica.

87
00:07:28,730 --> 00:07:36,780
By default the multi AZ spans two AZs in a region. Read replicas can be within an AZ, cross AZ,

88
00:07:36,800 --> 00:07:42,530
or even cross region. with multi AZ the database engine version upgrades happen in the primary.

89
00:07:42,530 --> 00:07:46,900
With read replicas because the version upgrades are independent from the source

90
00:07:46,910 --> 00:07:55,980
instance. With multi AZ automatic failover happens to the standby when a problem is detected.

91
00:07:55,980 --> 00:08:01,800
Now with read replicas you can manually promote a read replica to a standalone database instance

92
00:08:01,800 --> 00:08:07,760
if you need to. So multi AZ again creates the replica in another and synchronously replicates.

93
00:08:07,920 --> 00:08:15,150
You can choose to configure it at launch and it's recommended to use provisioned IOPS. Each AZ runs its

94
00:08:15,150 --> 00:08:18,360
own physically distinct independent infrastructure.

95
00:08:18,360 --> 00:08:20,430
So this is very highly reliable.

96
00:08:20,520 --> 00:08:26,870
You can't choose which AZ will host the standby instance but you can view which AZ

97
00:08:26,880 --> 00:08:27,670
it's created in.

98
00:08:28,020 --> 00:08:34,670
Now you do get read replica support for multi AZ so that means that for MySQL and MariaDB
08:34.670 -- 08:42.030
they support multi AZ deployments and that means you can combine read replicas with multi AZ and

99
00:08:42,030 --> 00:08:48,620
that enables you to build resilient disaster recovery and simplify the database engine upgrade process.

100
00:08:49,590 --> 00:08:55,540
A read replica in a different region than the source database can be used as a standby database and

101
00:08:55,540 --> 00:09:00,650
promoted to become the new production database in case of regional disruption.

102
00:09:00,700 --> 00:09:07,960
So that means you can scale reads while also having the multi AZ for the automatic failover

103
00:09:08,160 --> 00:09:11,840
between a primary and a standby.

104
00:09:11,850 --> 00:09:14,800
Now this feature is not supported for PostgreSQL.

105
00:09:14,820 --> 00:09:16,130
Now make sure you know this.

106
00:09:16,140 --> 00:09:18,620
Make sure you understand what's on the slide here.

107
00:09:18,630 --> 00:09:25,830
This was an exam question for me so I understand that you cannot use PostgreSQL in this configuration.

108
00:09:26,430 --> 00:09:34,110
So read replica is when you have heavy reads on your database, replication is asynchronous. Read replicas are for

109
00:09:34,120 --> 00:09:41,870
work load sharing an offloading those reads, and it provides a read only copy of the DB for DR as well. Read

110
00:09:41,920 --> 00:09:46,770
replicas are automatically created from a snapshot of the master instance.

111
00:09:46,770 --> 00:09:52,830
You have to have automated backups enabled and it only supports transactional databases, that's InnoDB not

112
00:09:52,920 --> 00:09:58,980
myISAM. Read replicas are available for MySQL, PostgreSQL,

113
00:09:59,040 --> 00:10:05,930
MariaDB, Oracle and Aurora, but not MS SQL server. You can enable automatic backups on MySQL

114
00:10:05,940 --> 00:10:08,150
and MariaDB read replicas as well.

115
00:10:08,520 --> 00:10:16,080
And you can enable writes to the MySQL and MariaDB read replicas. When you have read replicas

116
00:10:16,470 --> 00:10:21,780
and a multi AZ configuration the read replicas are switched to the new primary when the multi AZ fails

117
00:10:21,780 --> 00:10:22,620
over.

118
00:10:22,620 --> 00:10:28,380
You can have five read replicas of your production DB but you can't have more than four in a replication

119
00:10:28,380 --> 00:10:29,300
chain.

120
00:10:29,370 --> 00:10:35,010
You can have read replicas of Read replicas so a read replica that's getting its data from another read

121
00:10:35,010 --> 00:10:37,720
replica for MySQL and MariaDB.

122
00:10:37,920 --> 00:10:41,390
You can promote the read replica to primary as I mentioned before.

123
00:10:41,640 --> 00:10:47,700
Snapshots are user initiated and enable you to back up your DB instance in a known state as frequently

124
00:10:47,700 --> 00:10:54,160
as you wish and then restore to that specific state that stored on S3 and they remain there until

125
00:10:54,180 --> 00:10:57,930
you manually delete them. Backups are taken within a defined window.

126
00:10:57,940 --> 00:11:04,140
That's the maintenance window and restored databases will always be a new RDS instance with a new

127
00:11:04,200 --> 00:11:07,090
DNS endpoint.

128
00:11:07,320 --> 00:11:11,010
You can't restore from a database snapshot to an existing DB.

129
00:11:11,370 --> 00:11:13,270
So that's the same as the previous point.

130
00:11:13,290 --> 00:11:19,130
It's always going to be a new database instance. For migration

131
00:11:19,150 --> 00:11:23,100
you've got the database migration service and that helps you to migrate databases.

132
00:11:23,160 --> 00:11:25,400
to AWS quickly and securely.

133
00:11:25,480 --> 00:11:33,790
It can be used with the schema conversion tool to migrate databases to AWS RDS or EC2 based

134
00:11:33,790 --> 00:11:39,730
databases. when using DMS the source database can remain fully operational during the migration so

135
00:11:39,730 --> 00:11:45,730
that minimizes downtime and it supports lots of different scenarios in terms of the source and destination

136
00:11:45,730 --> 00:11:52,720
database types and that includes most widely used commercial and open source databases. Schema conversion

137
00:11:52,720 --> 00:11:58,330
tool can copy database schemas from homogenous migrations like the same database so MySQL to

138
00:11:58,330 --> 00:12:05,250
MySQL and convert schemas for heterogeneous migration so you might be converting SQL to MySQL

139
00:12:05,250 --> 00:12:06,490
or something like that.

