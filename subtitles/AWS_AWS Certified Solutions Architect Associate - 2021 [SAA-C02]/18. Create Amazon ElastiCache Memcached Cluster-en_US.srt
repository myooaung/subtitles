1
00:00:02,730 --> 00:00:03,300
Hi guys.

2
00:00:03,300 --> 00:00:08,990
We're in the Elasticache dashboard and we're going to create a cluster using Memcached.

3
00:00:09,120 --> 00:00:15,060
Now one of the things I want to mention about Alaska cash is it's quite different to DynamoDB DAX which

4
00:00:15,060 --> 00:00:23,040
we covered a couple of labs ago DynamoDB Dax automatically connects to your DynamoDB tables to

5
00:00:23,040 --> 00:00:23,940
cached data.

6
00:00:23,970 --> 00:00:30,240
So it's really easy you just set it up you can point your application at the Elasticache excuse me

7
00:00:30,240 --> 00:00:36,750
at the DynamoDB Dax endpoints and then it will automatically pull data form your DynamoDB database

8
00:00:36,750 --> 00:00:43,100
as long as it has the right information in the request and it has the access it's a bit different with

9
00:00:43,110 --> 00:00:50,370
Elasticache and you really need to program your application to take advantage of the caching service.

10
00:00:50,400 --> 00:00:55,440
So it's not as easy as saying well let's just connect a database to Elasticache.

11
00:00:55,500 --> 00:00:57,460
You actually have to create it in your code.

12
00:00:57,480 --> 00:01:03,180
So what we're going to do in these labs is just build out the databases so we're going to provision

13
00:01:03,180 --> 00:01:08,910
them so that you can see through the console the various options that are available and understand the

14
00:01:08,940 --> 00:01:12,060
differences between Memcached and Redis.

15
00:01:12,120 --> 00:01:20,990
So let's click Create and Australia where we get two different options and we have readers and we have

16
00:01:21,430 --> 00:01:22,250
the cache nodes.

17
00:01:22,250 --> 00:01:28,660
So for Redis it says it's an in-memory data structure store used as a database cache and message broker.

18
00:01:28,880 --> 00:01:34,130
Whereas with Memcached it says it's a high performance distributed memory object caching system

19
00:01:34,550 --> 00:01:38,130
intended for use in speeding up dynamic web applications.

20
00:01:38,210 --> 00:01:44,480
So Memcached these use cases are often things like caching data for web applications

21
00:01:47,900 --> 00:01:53,300
and that might be something like session state data whereas we've read this because it's a persistent

22
00:01:53,300 --> 00:01:54,200
data store.

23
00:01:54,260 --> 00:01:56,740
You can actually use it as a database.

24
00:01:56,960 --> 00:02:01,870
So let's choose Memcached and we're just going to call this one.

25
00:02:02,010 --> 00:02:06,710
memcached one and we're going to leave the defaults there.

26
00:02:06,740 --> 00:02:09,980
Now what I want to show you here is that no type.

27
00:02:09,980 --> 00:02:13,970
So you can go into your know types and you can choose the no time you want.

28
00:02:13,970 --> 00:02:19,770
I'm just going to go with the T2 micros and then you can choose the number of nodes.

29
00:02:20,120 --> 00:02:22,480
And those are really the only options were available.

30
00:02:22,490 --> 00:02:27,890
And as it says here the number of nodes in this cache cluster a node is a partition of your data.

31
00:02:27,980 --> 00:02:33,200
So you remember from the diagram that each node is a separate partition of data.

32
00:02:33,380 --> 00:02:36,240
We can then enable advanced settings.

33
00:02:36,440 --> 00:02:41,810
And here let's just first change the number of nodes that say Free nodes and then we could go in and

34
00:02:41,810 --> 00:02:43,160
choose a subnet group.

35
00:02:43,160 --> 00:02:44,390
Now I already created one.

36
00:02:44,390 --> 00:02:48,620
But you can go in and create a subnet group choose your VPC in the subnets

37
00:02:51,360 --> 00:02:58,560
you can then decide which zones you want and say for instance you can say well I would like to select

38
00:02:59,610 --> 00:03:06,240
a B and C and you can see where your nodes are going to go.

39
00:03:06,310 --> 00:03:11,280
You can then specify maintenance windows and assign s topics.

40
00:03:11,290 --> 00:03:15,550
Now we're just going to leave the rest of that as defaults and click on Create.

41
00:03:15,880 --> 00:03:18,360
And that's really all there is to memcached.

42
00:03:18,430 --> 00:03:25,090
Very very simple to set up and very few options to configure our cluster is now available and we can

43
00:03:25,420 --> 00:03:32,870
have a look at some of the properties we can go into and modify and a few things we can change we can

44
00:03:32,870 --> 00:03:39,110
go in and change the security group we can change parameter groups and we can change the maintenance

45
00:03:39,110 --> 00:03:44,740
window and the topics for SNS notifications.

46
00:03:44,780 --> 00:03:49,580
Another thing we can do and you have to click on the actual cluster name is go in and out nodes.

47
00:03:49,580 --> 00:03:56,000
So we added three nodes we could grow in here now and add an additional node and choose the availability

48
00:03:56,000 --> 00:04:03,160
zone that we want to put it in another way we can do it is by going to the command line and we can run

49
00:04:03,190 --> 00:04:15,550
some commands using AWS Elasticache and to start with we could do describe cache clusters that would

50
00:04:15,550 --> 00:04:21,040
get us some information so we now know the class cache cluster I.D. which is just the name that we gave

51
00:04:21,040 --> 00:04:31,680
to it before we could then run aws elasticache modify cache cluster.

52
00:04:31,780 --> 00:04:43,180
Then we give it the cache cluster I.D. and that would be Memcached one and then we tell it the number

53
00:04:43,180 --> 00:04:53,410
of nodes we do dash dash num cache nodes and let's give it four and we can apply this immediately

54
00:05:02,730 --> 00:05:05,720
so we can now see that the cache cluster status is in modifying.

55
00:05:06,060 --> 00:05:13,290
Let's head back to the console and hit refresh and we can now say we have an extra node being provisioned.

56
00:05:13,290 --> 00:05:14,050
We've lost a cache.

57
00:05:14,050 --> 00:05:20,620
We can also go and purchase reserve nodes so hey just like we have other reserved instances.

58
00:05:20,620 --> 00:05:24,800
You choose your product and then you choose your term.

59
00:05:24,910 --> 00:05:27,550
And that is one or three years.

60
00:05:27,550 --> 00:05:32,120
So if you select three years and you can then select the type of utilization you're going to use.

61
00:05:32,130 --> 00:05:37,570
So you can choose medium utilization there and then it tells you how much you can have to pay

62
00:05:40,290 --> 00:05:46,990
backups are not an option for memcached but they are for Redis which we'll be covering in the

63
00:05:46,990 --> 00:05:49,310
next lab.

64
00:05:49,380 --> 00:05:53,670
You can also see the events that are happening here so you can see that we're increasing the number

65
00:05:53,670 --> 00:06:01,880
of requested notes the Elasticache plus the client is for men cash deals and supports auto discovery.

66
00:06:01,880 --> 00:06:07,240
So I can find nodes automatically and there's a few different languages that you can use there send

67
00:06:07,360 --> 00:06:12,760
back to the cache and the cluster is still in the modifying status.

68
00:06:12,800 --> 00:06:14,150
Now we finished the lab.

69
00:06:14,150 --> 00:06:18,770
I'm just going to wait for this to become available again and then I'm going to be able to delete the

70
00:06:18,770 --> 00:06:21,660
cluster that only took a few minutes.

71
00:06:21,710 --> 00:06:23,060
It's available again now.

72
00:06:23,410 --> 00:06:27,710
And what I'm going to do is just select the cluster and delete.

