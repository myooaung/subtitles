WEBVTT
1
00:00:05.250 --> 00:00:12.360
It's free event notifications are a way that we can configure a form of event driven architecture using

2
00:00:12.360 --> 00:00:13.380
Amazon, it's free.

3
00:00:14.040 --> 00:00:19.620
So what that means is something happens in as free, such as an upload of an object, and then we can

4
00:00:19.620 --> 00:00:21.180
trigger some kind of event.

5
00:00:21.960 --> 00:00:28.610
So with event notifications, we're essentially sending a notification when an event happens in an ice

6
00:00:28.620 --> 00:00:29.310
free bucket.

7
00:00:29.970 --> 00:00:32.850
Now where do we send these notifications to?

8
00:00:33.270 --> 00:00:41.100
Well, some of the destinations include Amazon's Simple Notification Service, Amazon Ask US Cues or

9
00:00:41.100 --> 00:00:42.330
IWC Lambda.

10
00:00:42.780 --> 00:00:49.590
So, for example, an object gets uploaded to a bucket and you might send a notification to lambda,

11
00:00:49.740 --> 00:00:55.430
and it would include some information about that object's lambda might then process that object.

12
00:00:55.440 --> 00:01:01.320
Maybe it's, you know, modifying the image in an object to reduce the size to a thumbnail or something

13
00:01:01.320 --> 00:01:01.950
like that.

14
00:01:02.430 --> 00:01:08.670
And then once it's processed the image, it finishes and you could even trigger then an essence notification

15
00:01:08.670 --> 00:01:09.150
as well.

16
00:01:09.480 --> 00:01:15.480
So this is a great feature of Amazon as free when we want to create an event driven architectures.

17
00:01:15.660 --> 00:01:20.460
And in the serverless section, we're going to go into a lot more detail on event driven architectures.

18
00:01:20.880 --> 00:01:27.180
For now, let's head over to Amazon as free and just see how we can create a simple event notification

19
00:01:27.540 --> 00:01:28.650
on back in as free.

20
00:01:28.650 --> 00:01:32.400
And I'm going to use my DCT cloud storage bucket for this exercise.

21
00:01:32.790 --> 00:01:39.420
Now, the first thing we need to do is create an SMS topic that's a simple notification service topic,

22
00:01:39.660 --> 00:01:45.090
and that's going to trigger an email to us when an object upload occurs.

23
00:01:45.510 --> 00:01:49.860
Now we do need to give the estimates topic permissions as well, so that's something we need to look

24
00:01:49.860 --> 00:01:50.070
at.

25
00:01:50.460 --> 00:01:54.300
The first thing we're going to do is use the service to create a topic.

26
00:01:54.570 --> 00:01:58.680
You can find snacks under services and application integration.

27
00:01:59.190 --> 00:02:03.180
So let's just call this one my email notification.

28
00:02:03.840 --> 00:02:04.680
Click on Next.

29
00:02:05.190 --> 00:02:10.320
We're going to choose standard, and we're going to need to update the access policy.

30
00:02:10.770 --> 00:02:13.800
Now, the first thing you need to do is just go to access policy.

31
00:02:14.250 --> 00:02:15.600
On the right hand side here.

32
00:02:15.600 --> 00:02:18.960
We want to find the R-N for our topic.

33
00:02:19.500 --> 00:02:24.960
So I'm going to copy all of this, Erin, and then we have this file in the course download.

34
00:02:25.440 --> 00:02:30.360
And what we need to do is paste the arrow at the top here.

35
00:02:30.360 --> 00:02:34.320
So we've got the full R.N, including the region and the account number.

36
00:02:34.860 --> 00:02:37.410
We also need to copy this account number.

37
00:02:38.710 --> 00:02:45.160
And put that down here where it says bucket owner accounts I.D. and we need the R.N of our buckets.

38
00:02:45.670 --> 00:02:47.740
So back in history, go to properties.

39
00:02:48.010 --> 00:02:49.690
Copy the irony of your buckets.

40
00:02:50.200 --> 00:02:50.940
And let's play.

41
00:02:50.980 --> 00:02:51.760
Slide in here.

42
00:02:52.240 --> 00:02:55.420
So once we've done those free things, we can copy this code.

43
00:02:55.690 --> 00:02:57.460
Come back, go to advanced.

44
00:02:58.060 --> 00:03:03.220
We're going to delete everything from the JASON editor at this policy in.

45
00:03:04.540 --> 00:03:10.360
And, Chris, our topic now we need a subscription for the topic, so we create a subscription here.

46
00:03:10.900 --> 00:03:14.190
It's already chosen for us for protocol.

47
00:03:14.200 --> 00:03:17.260
We're going to choose email and for Endpoint.

48
00:03:17.260 --> 00:03:21.940
You're going to put in your email address and then choose Create subscription at the bottom.

49
00:03:22.630 --> 00:03:25.510
Once you've done that, the status will be pending confirmation.

50
00:03:25.750 --> 00:03:31.510
Go to your email, confirm the subscription and refresh this page and you should find that it changes

51
00:03:31.690 --> 00:03:32.650
to confirmed.

52
00:03:33.400 --> 00:03:35.560
I just refresh my page, and now it's confirmed.

53
00:03:35.980 --> 00:03:36.640
So that's great.

54
00:03:36.640 --> 00:03:38.740
We can go back to free now.

55
00:03:39.690 --> 00:03:46.050
Under properties, let's scroll down and find event notifications, create an event notification.

56
00:03:46.620 --> 00:03:48.150
I'm going to call this send email.

57
00:03:50.340 --> 00:03:54.000
I'm not going to limit by prefix or suffix and for event types.

58
00:03:54.000 --> 00:04:00.420
I want this notification to go for all object creation events, so uploads of objects and copying of

59
00:04:00.420 --> 00:04:00.990
objects.

60
00:04:01.350 --> 00:04:09.720
We now simply scroll down, choose S.A. topic and then select all residence topic from the list and

61
00:04:09.720 --> 00:04:10.530
click on Save.

62
00:04:11.840 --> 00:04:14.510
Now, if your policy is set up correctly, this should work.

63
00:04:14.600 --> 00:04:16.220
If not, you'll get an error message.

64
00:04:17.180 --> 00:04:21.230
So now let's go back to objects and I'm going to upload a new object.

65
00:04:21.800 --> 00:04:24.680
Doesn't matter if it already exists, I'm just going to upload an object.

66
00:04:24.680 --> 00:04:27.080
It will see that we've made that upload.

67
00:04:28.600 --> 00:04:35.230
And what should happen in the background now is it should send an event notification to S.A. and S.A.

68
00:04:35.230 --> 00:04:38.740
should then trigger an email to go and check your email inbox.

69
00:04:39.340 --> 00:04:44.260
And this is the notification I received in my inbox and you can see there's quite a bit of information

70
00:04:44.260 --> 00:04:44.560
here.

71
00:04:44.770 --> 00:04:50.020
We can see information about the event source that it was IWC free the region.

72
00:04:50.320 --> 00:04:51.940
There's a time stamp on here.

73
00:04:52.180 --> 00:04:58.210
We know that this particular notification was generated because of an object created puts events, so

74
00:04:58.210 --> 00:04:59.330
we uploaded an object.

75
00:04:59.710 --> 00:05:04.720
You can see the principle of the use that uploaded the objects and much more information there.

76
00:05:05.500 --> 00:05:09.150
So all this information can get sent through to whatever service.

77
00:05:09.160 --> 00:05:10.180
If this was lambda.

78
00:05:10.480 --> 00:05:15.700
Then this information could go to lambda and lambda might be able to use that information for whatever

79
00:05:15.700 --> 00:05:17.830
processing you program it to do.

80
00:05:18.400 --> 00:05:20.500
So that's it for event notifications.

81
00:05:20.750 --> 00:05:23.220
Hope that it's useful to you, and I'll see you in the next lesson.

