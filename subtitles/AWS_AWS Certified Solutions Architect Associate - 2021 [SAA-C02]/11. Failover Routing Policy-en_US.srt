1
00:00:02,380 --> 00:00:06,960
When now grounds cover the fail over routing policy we've failed over routing.

2
00:00:07,000 --> 00:00:16,150
You can have a primary and secondary target and using health checks you can determine whether your primary

3
00:00:16,150 --> 00:00:17,400
is healthy or not.

4
00:00:17,440 --> 00:00:25,180
So you have to have a health check on your primary resource and then if that health check fails you

5
00:00:25,180 --> 00:00:29,560
will cut over to your secondary resource.

6
00:00:29,560 --> 00:00:35,410
So let's head over to the console and have a look at how this works and what we're gonna do is we're

7
00:00:35,410 --> 00:00:36,580
going to create a record set.

8
00:00:36,580 --> 00:00:42,020
Let's just go and get the IP address of our North Virginia server.

9
00:00:42,220 --> 00:00:43,420
So that's this one here

10
00:00:46,860 --> 00:00:52,410
and I'm going to paste this in excuse me I'm pasting that in the wrong place that's it in the correct

11
00:00:52,410 --> 00:00:59,850
place and we're just going to call this file over so we change the file over and then fight over records

12
00:00:59,850 --> 00:01:03,920
like this primary for this one and then we have to associate health checks.

13
00:01:03,930 --> 00:01:08,010
If I click on Create Now it's gonna give us an error.

14
00:01:08,060 --> 00:01:12,950
So you absolutely have to have that health check and I'm going to choose my North Virginia health check

15
00:01:13,190 --> 00:01:23,960
so I can now configure the secondary in this case I'm going to choose our elastic load balancer so let's

16
00:01:23,960 --> 00:01:30,500
choose my Alby and choose fail over and this time it's the secondary.

17
00:01:30,740 --> 00:01:36,120
And let's just see if we can get away without the health check on this one and we can.

18
00:01:36,140 --> 00:01:40,580
So we only need it on the primary so we've got those two records.

19
00:01:40,580 --> 00:01:49,310
And if we head over to a browser window and type file over DCT labs dot com we should find that we get

20
00:01:49,310 --> 00:01:52,820
a response from North Virginia.

21
00:01:52,900 --> 00:01:57,100
So what happens then when this server is not accessible.

22
00:01:57,100 --> 00:02:00,370
Well the way I'm going to simulate that let's just head over it's easy to

23
00:02:03,210 --> 00:02:08,910
and I'm going to change it now looks like I'm in north Virginia and I'm just gonna go down to security

24
00:02:08,910 --> 00:02:09,420
groups

25
00:02:13,270 --> 00:02:19,570
and I'm gonna go to the web access security group and I'm going to remove the port 80 rule.

26
00:02:19,570 --> 00:02:24,640
So remember our health check is actually functioning by looking at ports 80 on the machine.

27
00:02:24,670 --> 00:02:32,920
So it's doing a a request to report AC and if that's not accessible then the health checks going to

28
00:02:32,940 --> 00:02:40,680
fail so you can now come back to health checks and everything looks good at the moment so let's just

29
00:02:40,680 --> 00:02:45,990
give it a little a little while so that it can actually catch up and realize that that server is not

30
00:02:45,990 --> 00:02:47,450
accessible.

31
00:02:47,550 --> 00:02:53,720
So while that's happening this just quickly go over to the console and hit refreshing to see what happens.

32
00:02:53,730 --> 00:03:01,200
So remember our instance doesn't have the secondary address at this stage or our client doesn't have

33
00:03:01,640 --> 00:03:06,870
the secondary address at this stage because Ralph 50 free has only supplied the address of the primary

34
00:03:06,870 --> 00:03:12,960
resource but we remove poor data from the security group so it can no longer access it.

35
00:03:12,990 --> 00:03:14,280
So it's just timing out.

36
00:03:15,210 --> 00:03:16,090
So let's go back.

37
00:03:16,090 --> 00:03:22,380
We need to wait for this health check to fail before Ralph 53 is actually going to give us that secondary

38
00:03:22,380 --> 00:03:22,850
record

39
00:03:28,750 --> 00:03:33,520
so it looks like we've got an unhealthy record now for North Virginia.

40
00:03:33,580 --> 00:03:40,630
So let's go back and see what happens if we refresh our browser and we're not getting anything yet.

41
00:03:40,660 --> 00:03:45,760
So let's go to Digg and see what record we get returned to us.

42
00:03:45,760 --> 00:03:53,530
If we type find over the DCT labs dot com and we get the 241 address which I'm pretty sure that's obviously

43
00:03:53,530 --> 00:03:55,880
the the North Virginia instance.

44
00:03:55,880 --> 00:03:57,040
So we're still getting that

45
00:04:02,300 --> 00:04:08,810
though we can see that we have a failed health check here so it shouldn't be long before we get the

46
00:04:08,810 --> 00:04:17,200
correct response and it may be due to the TTL him so I just waited a couple of minutes while the TTL

47
00:04:17,200 --> 00:04:23,140
expired and now I've run Digg again and you can see that I've got the multiple addresses which corresponded

48
00:04:23,140 --> 00:04:24,550
my load balancer.

49
00:04:24,550 --> 00:04:30,550
So we should be at a refresh the browser now and this is a good example of why you want to be careful

50
00:04:30,550 --> 00:04:38,200
with UTC ls because clearly the website went down and it's a fair amount of time this is closeouts haven't

51
00:04:38,200 --> 00:04:43,890
started it another one because it might be caching something in the browser.

52
00:04:44,040 --> 00:04:49,740
So now we are getting that secondary address and we're on the instance into B and I'm pretty sure if

53
00:04:49,740 --> 00:04:53,250
we just keep hitting refresh we're getting cycled by the load balancer.

54
00:04:53,910 --> 00:04:56,050
So that's it really.

55
00:04:56,970 --> 00:05:02,010
Clearly this is something where you do need to think about that TTL because if it's too high and your

56
00:05:02,010 --> 00:05:06,330
Web site goes down you're not going to fail over to your second day for a while.

57
00:05:06,360 --> 00:05:12,390
So your clients are still going to have that primary record cached and they're not going to be able

58
00:05:12,390 --> 00:05:15,760
to get the new secondary records to connect to the correct resource.

59
00:05:15,780 --> 00:05:20,400
So be careful when determining the TTL is for your application records.

