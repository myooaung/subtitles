1
00:00:05,580 --> 00:00:09,930
Welcome to the architecture patterns lesson for IWC organizations.

2
00:00:10,560 --> 00:00:12,330
So let's have a look at our first requirement.

3
00:00:12,870 --> 00:00:17,820
A company needs a method of quickly creating IWC accounts programmatically.

4
00:00:18,300 --> 00:00:23,460
Well, in that case, they can use the organization's API to create accounts programmatically.

5
00:00:24,090 --> 00:00:29,400
Remember, if you're just doing a single account through the console or one or two accounts, then the

6
00:00:29,400 --> 00:00:30,660
management console is fine.

7
00:00:31,110 --> 00:00:35,340
Otherwise, you might want to do it programmatically, and that's where the API comes in handy.

8
00:00:36,330 --> 00:00:43,690
Users in a member account in eight U.S. organizations should be restricted from making changes in IAM.

9
00:00:44,520 --> 00:00:50,640
Well, of course, in this circumstance, you would use a service control policy and stop to deny access

10
00:00:50,640 --> 00:00:56,670
to IAM actions and IWC account must be moved between organizations.

11
00:00:57,330 --> 00:01:02,100
For that, you can migrate the account using the IWC organization's console.

12
00:01:02,370 --> 00:01:04,380
Again, you can do that for a single account.

13
00:01:04,620 --> 00:01:09,000
If you have lots of accounts, you want to move again, you can do that through the API as well.

14
00:01:09,630 --> 00:01:15,840
A solutions architect created a new account through the organization's console and needs to log in to

15
00:01:15,840 --> 00:01:16,950
launch resources.

16
00:01:17,250 --> 00:01:18,130
So how do you do that?

17
00:01:18,150 --> 00:01:22,200
Well, the architect should switch roles to access the new accounts.

18
00:01:22,740 --> 00:01:29,250
Multiple member accounts in eight U.S. organizations require the same permissions to be restricted using

19
00:01:29,350 --> 00:01:29,970
space.

20
00:01:30,630 --> 00:01:36,480
In that case, you can create an IOU and add the member accounts and then attached to you.

21
00:01:36,510 --> 00:01:40,410
That would be the least administrative overhead for implementing this solution.

22
00:01:40,890 --> 00:01:47,820
The developers in a company each have their own IWC accounts for testing the security team wish to enable

23
00:01:47,820 --> 00:01:49,140
centralized governance.

24
00:01:49,740 --> 00:01:56,490
Well, in that case, they could create an IWC organization and send an invite to each developer's IWC

25
00:01:56,490 --> 00:01:58,620
account to join the organization.

26
00:01:58,980 --> 00:02:00,810
And that's it for this architecture patterns.

