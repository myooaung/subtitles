1
00:00:05,240 --> 00:00:05,770
Hi, guys.

2
00:00:05,840 --> 00:00:11,990
Security groups and network access control lists, ACLs are two different types of firewall that we

3
00:00:11,990 --> 00:00:16,640
can apply in our IWC environment, so let's have a look at how they work.

4
00:00:16,880 --> 00:00:22,480
So here we have a VPC with two availability zones, and we've got a couple of public and private subnets,

5
00:00:22,730 --> 00:00:27,590
and we've got a few easy two instances that have been launched into different public submarkets and

6
00:00:27,590 --> 00:00:28,550
private subnets.

7
00:00:29,150 --> 00:00:31,550
So let's see how we can control traffic.

8
00:00:32,360 --> 00:00:37,220
Firstly, we can apply something called a network access control list, a network ICL.

9
00:00:37,820 --> 00:00:43,670
Now these are applied at the subnet level, so you can see that they're sitting here at the edge of

10
00:00:43,670 --> 00:00:44,270
the subnet.

11
00:00:44,840 --> 00:00:52,910
Now, all traffic that goes into and out of a subnet will go through a network scale.

12
00:00:53,480 --> 00:00:58,370
So you're essentially filtering traffic as it enters or exits the subnet.

13
00:00:58,370 --> 00:01:02,090
So ingress and egress traffic, a security group is different.

14
00:01:02,630 --> 00:01:08,840
A security group actually applies at the instance level of an S2 instance, actually at the network

15
00:01:08,840 --> 00:01:11,600
interface level of the active instance.

16
00:01:12,170 --> 00:01:19,990
So that means we can have a security group that is applied to issue two instances in different subnet.

17
00:01:20,000 --> 00:01:25,910
So this is the same security group security group A, and it's been applied to instances in several

18
00:01:25,910 --> 00:01:26,780
different subnet.

19
00:01:27,410 --> 00:01:34,460
So remember that this is the instance level that means it's going to filter traffic going between instances

20
00:01:34,730 --> 00:01:37,580
in the same subnet or across different subnets.

21
00:01:37,880 --> 00:01:42,260
We could then have security group B that's attached to different instances.

22
00:01:42,680 --> 00:01:46,340
So security groups can be applied to instances in any subnet.

23
00:01:46,640 --> 00:01:51,920
Now what happens here with these security groups is the same basic thing as a network scale.

24
00:01:52,430 --> 00:01:56,300
They are looking for traffic that's going in and out of the security group.

25
00:01:56,600 --> 00:02:02,780
So if you send traffic from an instance in security group A to an instance in security group B, it's

26
00:02:02,780 --> 00:02:05,510
going to check that there's a rule to allow the outbound traffic.

27
00:02:05,840 --> 00:02:09,350
And then it's going to check here the security group is going to check.

28
00:02:09,740 --> 00:02:12,920
Am I going to allow the traffic from security group A?

29
00:02:13,460 --> 00:02:19,060
And you can do that by IP address, or you could actually do it by the I.D. of the security group itself.

30
00:02:19,070 --> 00:02:22,130
We'll look at all this in detail in the hands on as well.

31
00:02:22,520 --> 00:02:29,030
Now I want to talk to you about stateful versus state less firewalls because the security group is a

32
00:02:29,030 --> 00:02:31,010
stateful firewall and a network.

33
00:02:31,010 --> 00:02:34,850
ICL is a stateless firewall, and it's really important to understand the difference.

34
00:02:35,360 --> 00:02:37,070
So let's look at an example.

35
00:02:37,400 --> 00:02:38,480
We have a client here.

36
00:02:38,810 --> 00:02:44,360
So this is a computer that wants to access a service on a web server and we've got a firewall in the

37
00:02:44,360 --> 00:02:44,660
middle.

38
00:02:45,350 --> 00:02:51,170
So what happens is the client is going to connect to the server, the servers, a web server, it's

39
00:02:51,170 --> 00:02:52,370
listening on Port 80.

40
00:02:53,270 --> 00:02:59,060
The source port is the port that's assigned to the connection by the computer and is what's called a

41
00:02:59,060 --> 00:03:04,160
high number port, it's a port above 1024 and is dynamically assigned for every connection.

42
00:03:04,880 --> 00:03:11,150
So we have a source port and a destination port and we have a source and destination IP as well.

43
00:03:11,510 --> 00:03:19,070
Now the return traffic has a source port of Port AC because that's where the web service port runs and

44
00:03:19,070 --> 00:03:22,130
the destination port of six five one eight eight.

45
00:03:22,430 --> 00:03:26,900
And of course, the ships are switched around as well, so the destination IP will be the client.

46
00:03:27,140 --> 00:03:29,060
The source IP will be the web server.

47
00:03:29,300 --> 00:03:33,140
Now what do we need in the firewall rules able to allow this to work?

48
00:03:33,470 --> 00:03:41,040
Well, what we need here is we need a rule for GCP that allows the source IP ten point one one point

49
00:03:41,090 --> 00:03:47,180
one to talk to the destination IP send up to the 1.10.

50
00:03:48,260 --> 00:03:51,590
And it has to have the source port and the destination port specified.

51
00:03:51,890 --> 00:03:57,050
Now, of course, this is a dynamically assigned port, so we don't know what that is ahead of time.

52
00:03:57,050 --> 00:03:59,800
So what you would most likely have here is any.

53
00:03:59,810 --> 00:04:05,420
So rather than having this source port specified, we'd have the any specified so any source port is

54
00:04:05,420 --> 00:04:06,020
acceptable.

55
00:04:06,470 --> 00:04:12,140
And then rather than a specific source IP, we might have any because it's an internet based connection.

56
00:04:12,710 --> 00:04:15,410
So those are things that we can play around with in our rule tables.

57
00:04:15,920 --> 00:04:19,590
But the destination port will always be AC because that's where the web server runs.

58
00:04:19,590 --> 00:04:24,560
So we want to make sure that we don't allow connections to any ports on the web server.

59
00:04:25,520 --> 00:04:28,640
Now that's the traffic coming inbound to the web server.

60
00:04:28,670 --> 00:04:30,770
What about the return traffic going back?

61
00:04:31,340 --> 00:04:36,710
Well, in that case, things are swapped around, so we've got the same protocol the source IP of the

62
00:04:36,710 --> 00:04:42,470
web server, the destination IP of the client and the source port of Haiti and the destination port

63
00:04:42,500 --> 00:04:44,180
of the dynamic for the clients.

64
00:04:44,630 --> 00:04:51,170
Now again, you'd probably have the destination port and the destination IP is any because you want

65
00:04:51,170 --> 00:04:53,960
to allow traffic coming from any client on the internet.

66
00:04:54,140 --> 00:04:59,450
If you're running a public web service, but you still might need a ruleset for the outbound traffic.

67
00:04:59,810 --> 00:05:06,530
And this is where the difference comes in between state full and state less firewalls, so a state full

68
00:05:06,530 --> 00:05:09,800
firewall will allow the return traffic automatically.

69
00:05:10,370 --> 00:05:12,170
Now this is what a security group is.

70
00:05:12,560 --> 00:05:16,520
What that means is with a security group, you only need this role at the top here.

71
00:05:16,910 --> 00:05:22,460
You need a rule that says that you're going to allow the traffic from whatever client, whatever port,

72
00:05:22,850 --> 00:05:25,940
but you're going to allow inbound to port data on your web server.

73
00:05:26,840 --> 00:05:31,630
And then the return traffic is automatically allowed so you don't have to worry about the return traffic.

74
00:05:31,640 --> 00:05:33,380
It's going to just go out automatically.

75
00:05:33,380 --> 00:05:38,480
It's going to be allowed because the firewall is clever enough to know that that's part of the connection.

76
00:05:38,750 --> 00:05:40,850
And so it just allows that return traffic.

77
00:05:41,240 --> 00:05:46,250
Now, a state less firewall checks and allow rule for both connections.

78
00:05:46,580 --> 00:05:48,770
Now this is what a network ACL does.

79
00:05:49,250 --> 00:05:55,040
So if a network ACL, you need both the inbound rule and the outbound rules, so you need to make sure

80
00:05:55,040 --> 00:05:58,520
that you have the inbound row for traffic coming in.

81
00:05:58,730 --> 00:06:04,070
And the outbound rule for traffic going back, even if it's the same connection, it doesn't understand

82
00:06:04,070 --> 00:06:05,630
that that's part of the same connection.

83
00:06:05,930 --> 00:06:07,190
It treats them separately.

84
00:06:07,550 --> 00:06:12,410
So really important to understand those differences when you configure your network cycles.

85
00:06:12,800 --> 00:06:15,270
Now, let's have a look at a security group.

86
00:06:15,290 --> 00:06:17,630
This is what a security group ruleset looks like.

87
00:06:18,080 --> 00:06:22,430
So here we have separate rules defined for inbound and outbound traffic.

88
00:06:22,440 --> 00:06:25,070
What we're looking at here is the inbound traffic.

89
00:06:25,640 --> 00:06:31,640
Now, again, because it's stateful, we don't have to have a rule for the return traffic, but we still

90
00:06:31,640 --> 00:06:35,350
might need an outbound roll for traffic going out from our instances.

91
00:06:35,360 --> 00:06:41,570
So when are instances that are attached to the security group initiating connections outbound?

92
00:06:42,320 --> 00:06:47,990
So here we can see we have several rules using different protocols and we've got the protocol specified,

93
00:06:48,170 --> 00:06:50,990
the port range and then the source and the source.

94
00:06:51,170 --> 00:06:58,640
In many cases, might be either an IP address or IP address range, or it can be a security group I.D.

95
00:06:58,640 --> 00:06:59,090
as well.

96
00:06:59,480 --> 00:07:05,870
Security group support allow rules only, so there's no such thing as a deny role in a security group.

97
00:07:06,080 --> 00:07:12,050
Essentially, there's an implicit denial at the end of the rule set, and it's going to check for an

98
00:07:12,050 --> 00:07:12,580
alarm.

99
00:07:12,590 --> 00:07:16,620
And if there is no allow, then by default it's just going to deny the traffic.

100
00:07:16,910 --> 00:07:24,530
As I mentioned, a security group can use a source of an IP address and IP address range or the security

101
00:07:24,530 --> 00:07:27,440
group de of itself or another security group.

102
00:07:27,650 --> 00:07:32,420
Now, let's have a look at a best practice configuration when using security groups.

103
00:07:32,780 --> 00:07:36,860
What we have here is a public subnet and a private subnet.

104
00:07:37,310 --> 00:07:42,680
And we've got an internet facing load balancer, so this is going to distribute traffic to our web servers.

105
00:07:42,950 --> 00:07:44,150
So we have a load balancer.

106
00:07:44,510 --> 00:07:46,370
We have a web server frontend.

107
00:07:46,370 --> 00:07:50,000
So this is the one that's actually uses a connecting to from the internet.

108
00:07:50,720 --> 00:07:54,290
And then there's an application layer that's going to process data.

109
00:07:54,620 --> 00:07:56,480
And this could have multiple servers.

110
00:07:56,750 --> 00:08:03,020
So we have a load balancer and we need a connections to be able to come from our clients on the internet

111
00:08:03,320 --> 00:08:05,030
through to the application layer.

112
00:08:05,210 --> 00:08:08,330
It might then write to a database, so haven't shown that in this diagram.

113
00:08:08,510 --> 00:08:10,040
So let's see how we set this up.

114
00:08:10,250 --> 00:08:13,970
Firstly, we create a security group for the public Albi.

115
00:08:14,450 --> 00:08:19,610
It allows traffic on Port 80 for the web service from any source on the internet.

116
00:08:20,300 --> 00:08:25,650
Now outbound, it has because it's going to now create a connection to the web front end.

117
00:08:26,150 --> 00:08:30,360
It has a rule that allows outbound access to Port 80.

118
00:08:30,860 --> 00:08:35,420
And we've specified the actual security group in the public EC2.

119
00:08:35,960 --> 00:08:37,760
So that's the name of this security group.

120
00:08:38,060 --> 00:08:42,290
So it's only going to allow traffic outbound to the web frontend.

121
00:08:42,680 --> 00:08:45,770
The web frontend allows traffic only from the public.

122
00:08:45,770 --> 00:08:47,210
Albi on Port 80.

123
00:08:47,810 --> 00:08:55,010
And then it has a destination for outbound traffic of another security group called Private Albi and

124
00:08:55,010 --> 00:08:59,300
a port of HKT, so that's what that particular application is listening on.

125
00:08:59,480 --> 00:09:08,180
The private ALP security group will in turn only allow inbound traffic from the public to security group,

126
00:09:08,690 --> 00:09:15,380
and it will only allow outbound traffic to the private to security group, and that's the one which

127
00:09:15,380 --> 00:09:16,730
has the application layer in it.

128
00:09:17,510 --> 00:09:23,450
So that's a way that we're locking down access to the different layers of our application and ensuring

129
00:09:23,690 --> 00:09:27,320
that the application can talk to other components, but nothing else can.

130
00:09:27,770 --> 00:09:30,290
So that's a best practice security group configuration.

131
00:09:30,620 --> 00:09:32,900
Now let's have a look at network schools.

132
00:09:33,200 --> 00:09:38,810
One of the first things you'll notice is we have inbound and outbound rules again, and we have allow

133
00:09:38,960 --> 00:09:40,010
and deny rules.

134
00:09:40,460 --> 00:09:46,320
So with an you can have an explicit deny that's different to security groups.

135
00:09:46,320 --> 00:09:48,920
Remember members security groups only support allow rules.

136
00:09:49,950 --> 00:09:52,890
Rules are processed in order so you can see that they're numbered.

137
00:09:53,250 --> 00:09:58,320
So it's typically no all rules, and you might want to say that the next rules that you add in are two

138
00:09:58,320 --> 00:10:01,350
hundred and two hundred and one and then three hundred and 301.

139
00:10:01,590 --> 00:10:05,430
You can work out your own process for how you assign those numbers.

140
00:10:05,700 --> 00:10:08,490
But just remember that they will be processed in order.

141
00:10:08,820 --> 00:10:15,270
Now, the important fact about that means that once you actually reach a rule that ever allows or denies

142
00:10:15,270 --> 00:10:17,760
traffic, the processing stops there.

143
00:10:18,390 --> 00:10:25,530
So if we have an allow rule at 100 that allow us to traffic, then even if you had a deny rule later

144
00:10:25,530 --> 00:10:29,520
on in the rules set for that specific traffic, it's not going to get there.

145
00:10:29,520 --> 00:10:33,270
It's going to allow it because it reaches to allow and processing finishes.

146
00:10:33,660 --> 00:10:38,430
So you've got to be very careful with how you set up your rules, the order that you create the men.

147
00:10:38,640 --> 00:10:40,830
And just remember that they will be processed in order.

148
00:10:41,100 --> 00:10:45,750
And then when a allow or deny is reached, then that's the end of the processing it will ever allow

149
00:10:45,750 --> 00:10:46,770
or deny the connection.

150
00:10:47,250 --> 00:10:48,300
So that's it for the ferry.

151
00:10:48,300 --> 00:10:53,510
In the next lesson, we're going to do some hands on and set up our security groups and network cycles.

