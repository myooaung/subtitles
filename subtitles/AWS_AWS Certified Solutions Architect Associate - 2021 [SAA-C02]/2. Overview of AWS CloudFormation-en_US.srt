1
00:00:02,100 --> 00:00:07,920
Hi, guys, Adewusi cloud formation is a very exciting and powerful service, and I think we're going

2
00:00:07,920 --> 00:00:13,290
to have a lot of fun in this section because there's lots of demos to do and also a bit of code to play

3
00:00:13,290 --> 00:00:13,800
around with.

4
00:00:14,310 --> 00:00:15,840
So what is cloud formation?

5
00:00:15,840 --> 00:00:21,270
Firstly, cloud formation is a service that allows you to manage, configure and provision your infrastructure

6
00:00:21,480 --> 00:00:22,320
as code.

7
00:00:22,530 --> 00:00:29,970
So that means that you can define in code what your infrastructure should look like and then cloud formation

8
00:00:29,970 --> 00:00:31,290
can go out and build it for you.

9
00:00:31,800 --> 00:00:37,380
So, for example, we have a template on the right hand side here, and this actually is for building

10
00:00:37,380 --> 00:00:39,240
a lamp stack, which we're going to do shortly.

11
00:00:39,540 --> 00:00:43,830
So Linux, Apache, MySQL and Python on a Linux instance.

12
00:00:45,150 --> 00:00:52,110
And what it does is it gives you the option here to specify certain attributes about that instance so

13
00:00:52,110 --> 00:00:56,550
we can have a parameter for the key name, the easy to keep here.

14
00:00:56,550 --> 00:01:00,210
We're going to use the database name, the database user and so on.

15
00:01:00,630 --> 00:01:03,360
And there'll be other parameters about what type of resource.

16
00:01:03,360 --> 00:01:10,380
So the two instance, you're going to create the amid the instance type, you're going to use that kind

17
00:01:10,380 --> 00:01:10,660
of thing.

18
00:01:10,680 --> 00:01:13,410
So this is just a small snippet of the code.

19
00:01:14,280 --> 00:01:21,180
So it gives you a common language to describe and provisioned the infrastructure resources in your HWC

20
00:01:21,240 --> 00:01:22,080
cloud environment.

21
00:01:22,230 --> 00:01:24,810
The resources are defined in what we call a template.

22
00:01:24,820 --> 00:01:29,550
So what you see on the right hand side here is an example of the code that would be in a in a cloud

23
00:01:29,550 --> 00:01:30,600
formation template.

24
00:01:31,440 --> 00:01:33,680
So we can also visualize that as well.

25
00:01:34,350 --> 00:01:37,770
It's not just shown to us in code form.

26
00:01:38,070 --> 00:01:43,170
You can actually visualize like on the right hand side here, and we'll see that in the console shortly.

27
00:01:43,620 --> 00:01:49,080
So this is an example of a high availability stack with WordPress.

28
00:01:49,620 --> 00:01:57,180
So it includes a database, it includes security groups, a Web server and Albi target group there,

29
00:01:57,330 --> 00:02:01,680
the actual application load balancer and a listener and then and also skiting group.

30
00:02:03,150 --> 00:02:07,830
So cloud information can be used to provision a really broad range of AWB resources.

31
00:02:08,890 --> 00:02:12,110
Think of cloud formation as deploying infrastructures codes.

32
00:02:12,130 --> 00:02:13,670
That's a term you often hear a lot.

33
00:02:14,080 --> 00:02:16,150
This is what infrastructure is.

34
00:02:16,150 --> 00:02:17,320
A code really looks like.

35
00:02:17,680 --> 00:02:23,170
You're defining the infrastructure you want to build like this on the right hand side here through a

36
00:02:23,170 --> 00:02:26,630
template using code like you see on the left hand side here.

37
00:02:26,860 --> 00:02:33,130
So just quickly to differentiate, because sometimes cloud formation and elastic beanstalk are considered

38
00:02:33,520 --> 00:02:34,120
together.

39
00:02:34,330 --> 00:02:35,910
Now they are different things.

40
00:02:35,920 --> 00:02:38,550
And so this should make that more clear to you.

41
00:02:38,800 --> 00:02:41,940
Now, Elastic Beanstalk is covered in the next section of the course.

42
00:02:42,430 --> 00:02:47,410
I think the reason why they're often talked about together is because they both essentially do a level

43
00:02:47,410 --> 00:02:48,310
of automation.

44
00:02:48,820 --> 00:02:55,880
You can think of cloud formation as deploying your infrastructure, using code, so using a template

45
00:02:55,880 --> 00:02:57,370
to deploy infrastructure.

46
00:02:57,380 --> 00:02:59,710
So we're talking about two instances.

47
00:02:59,710 --> 00:03:01,330
We're talking about security groups.

48
00:03:01,330 --> 00:03:04,750
We're talking about load balances, all of those different things.

49
00:03:05,170 --> 00:03:09,310
Now, Elastic Beanstalk is really focused on applications.

50
00:03:09,490 --> 00:03:11,320
So it does launch load balancers.

51
00:03:11,320 --> 00:03:13,840
It does launch all these instances.

52
00:03:14,050 --> 00:03:18,460
It does launch two instances and auto scanning groups, but it's all about the application.

53
00:03:18,480 --> 00:03:25,150
So it's actually attempting to give you a way to deploy, for instance, a no JS website using your

54
00:03:25,150 --> 00:03:29,910
code by just uploading it and having it automate that infrastructure for you.

55
00:03:30,130 --> 00:03:36,280
So there's a lot more limited in what it can do, whereas cloud formation can pretty much be used for

56
00:03:36,280 --> 00:03:37,900
every service inside of us.

57
00:03:38,470 --> 00:03:44,620
With cloud formation, you're using JSON or Yamal formatted template files, whereas the elastic beanstalk,

58
00:03:44,950 --> 00:03:51,670
you're not describing your infrastructure in code as such, you're uploading your application code.

59
00:03:51,850 --> 00:03:56,170
And then there are some configuration files as well, which we'll talk about an elastic beanstalk section.

60
00:03:56,710 --> 00:04:02,640
So confirmation is actually used to deploy the environments that you create an elastic beanstalk.

61
00:04:03,010 --> 00:04:07,450
So when we go into the Elastic Beanstalk section, we'll see that when we create an environment using

62
00:04:07,450 --> 00:04:12,070
elastic beanstalk, we can go into cloud formation and see that it's actually doing the building for

63
00:04:12,070 --> 00:04:12,300
us.

64
00:04:12,460 --> 00:04:16,090
So let's just talk about some of the key benefits of cloud formation.

65
00:04:16,090 --> 00:04:17,980
Why would you want to use cloud formation?

66
00:04:18,490 --> 00:04:24,550
So the infrastructure is provisioned consistently, so this removes or reduces the risk of human error.

67
00:04:24,560 --> 00:04:29,260
Of course, you still have to write your code correctly, but once you return it, once you can redeploy

68
00:04:29,260 --> 00:04:35,530
that infrastructure over again without making mistakes, or you can use segments of that code and copy

69
00:04:35,530 --> 00:04:41,620
it into different templates and know that you're reusing code that's been written correctly, it reduces

70
00:04:41,620 --> 00:04:46,930
the amount of time and effort that you need to put into configuring resources, because this is automating

71
00:04:46,930 --> 00:04:47,470
it for you.

72
00:04:48,390 --> 00:04:53,340
You can also use version control and peer review, if you can, information templates, and it's free

73
00:04:53,340 --> 00:04:53,840
to use.

74
00:04:53,840 --> 00:05:00,060
So you're only charged for the resources that are provisioned by cloud formation, not for confirmation

75
00:05:00,060 --> 00:05:00,600
itself.

76
00:05:00,750 --> 00:05:07,290
You can also manage updates and dependencies and it can be used to roll back and delete the entire stack

77
00:05:07,290 --> 00:05:07,750
as well.

78
00:05:08,280 --> 00:05:10,480
So that's a bit of fairy on cloud formation.

79
00:05:10,500 --> 00:05:15,660
What I want to do now is get straight into the console and let's actually start looking at what cloud

80
00:05:15,660 --> 00:05:16,650
formation looks like.

81
00:05:17,940 --> 00:05:24,690
So I'm in the North Virginia region, so I'm in USD one, and I suggest you for this entire section

82
00:05:24,960 --> 00:05:26,840
do change to us one.

83
00:05:27,030 --> 00:05:34,020
And the reason is we're going to be using some code templates and I've already got the region specified

84
00:05:34,020 --> 00:05:34,950
in those templates.

85
00:05:34,950 --> 00:05:35,870
So you can change that.

86
00:05:35,880 --> 00:05:39,910
But just to make life easier, you might want to just change to North Virginia.

87
00:05:40,380 --> 00:05:44,350
So let's head over to cloud formation, which is under management and governance.

88
00:05:44,700 --> 00:05:48,780
Now, I just want to go back to the slides to discuss a few key concepts.

89
00:05:49,080 --> 00:05:50,610
So firstly, there's templates.

90
00:05:50,610 --> 00:05:55,500
So these are the Jason Oyamel text files that contain instructions to build the environment.

91
00:05:55,500 --> 00:05:58,230
And we saw some snippets of code on previous slides.

92
00:05:58,770 --> 00:05:59,790
You then have a stack.

93
00:05:59,800 --> 00:06:01,890
So this is what we're going to create now.

94
00:06:01,890 --> 00:06:08,340
So the stack is when you actually use your template to build out some infrastructure using cloud formation

95
00:06:09,060 --> 00:06:17,220
stack sets, then allow you to do what stacks do but across accounts so you can actually create update

96
00:06:17,220 --> 00:06:20,190
or delete stacks across accounts using one operation.

97
00:06:20,760 --> 00:06:25,260
And then this change sets, which will cover later on in this section, which is where you can have

98
00:06:25,260 --> 00:06:30,960
a look at what you what your changes are going to do to your infrastructure without actually putting

99
00:06:31,170 --> 00:06:33,190
those changes into effect.

100
00:06:33,990 --> 00:06:38,910
So essentially visualizing what's going to happen to make sure that you've got good code.

101
00:06:39,920 --> 00:06:45,980
So coming back in, we've got we're going to create a stack now, so we choose Crate Stack and then

102
00:06:45,980 --> 00:06:53,630
we have a few options so we can use a template that we have on S3 or upload a file, or we can use a

103
00:06:53,630 --> 00:06:57,240
sample template or create our own template in the designer.

104
00:06:57,800 --> 00:07:03,960
So let's just go to use a sample template and we can see that there's several different options here.

105
00:07:04,280 --> 00:07:07,340
So we're just going to choose this one up the top lamp stack.

106
00:07:07,490 --> 00:07:12,290
And what we can do now is we can click on this view in designer, and this is actually going to show

107
00:07:12,290 --> 00:07:15,140
us the infrastructure that's going to be built.

108
00:07:15,380 --> 00:07:18,890
Now, in this case, it's simply a Web server instance and a security group.

109
00:07:19,100 --> 00:07:24,260
And you can see a few of the potential dependencies and things that are going to be associated with

110
00:07:24,260 --> 00:07:24,550
that.

111
00:07:25,010 --> 00:07:28,130
But what I really want to draw your attention to is down here.

112
00:07:28,140 --> 00:07:31,180
So this is the code and this is in Jason format.

113
00:07:31,640 --> 00:07:37,040
You can switch it to Yamal and that typically makes it quite a bit more easy to read, as you can see,

114
00:07:37,040 --> 00:07:38,690
because it has less formatting on it.

115
00:07:38,690 --> 00:07:41,420
So it really depends what you're most familiar with.

116
00:07:41,780 --> 00:07:46,590
So in this template file, we can see the infrastructure that's going to be built.

117
00:07:47,120 --> 00:07:53,330
Now we're going to go through the anatomy of these template files within the sections so that you understand

118
00:07:53,330 --> 00:07:55,160
the key components of the template file.

119
00:07:55,760 --> 00:08:01,640
But for now, all we want to do is just choose this option here, create stack and the template file

120
00:08:01,640 --> 00:08:04,510
has been loaded for us and you can see it's from S3.

121
00:08:04,940 --> 00:08:05,990
We can choose next.

122
00:08:06,510 --> 00:08:07,570
Try to stack nine.

123
00:08:07,700 --> 00:08:09,860
I just called this lamp stack.

124
00:08:10,750 --> 00:08:16,030
And now it's going to ask us for some parameters, so I'm just going to change this to Digital Cloud

125
00:08:16,780 --> 00:08:19,960
for the DB name, password, password and user.

126
00:08:20,860 --> 00:08:25,150
And then we can choose the instance type, you might want to change this, for instance, to to micro,

127
00:08:25,960 --> 00:08:31,020
you can specify a keeper and you can specify some other parameters as well.

128
00:08:31,750 --> 00:08:32,860
You can add tags.

129
00:08:33,220 --> 00:08:35,650
You can specify roles if you need to.

130
00:08:35,800 --> 00:08:38,890
And then there are some more options here around STAC policies.

131
00:08:38,890 --> 00:08:43,800
So this is adjacent document that defines the update actions that you can perform on resources.

132
00:08:44,500 --> 00:08:49,510
There's a roll back configuration, there's a roll back configuration where you can specify alarms to

133
00:08:49,510 --> 00:08:50,020
monitor.

134
00:08:50,680 --> 00:08:55,300
There's notification options using essense and stack creation options.

135
00:08:55,310 --> 00:08:58,210
So by default it enables rollback on failure.

136
00:08:58,240 --> 00:09:02,290
So if anything goes wrong, it will automatically roll this back.

137
00:09:02,290 --> 00:09:04,780
And you can also enable termination protection.

138
00:09:04,780 --> 00:09:08,070
If you want to make sure that you can't actually delete this stack.

139
00:09:08,230 --> 00:09:14,200
We now have an option where we can look at estimate cost and it actually brings up the calculator and

140
00:09:14,200 --> 00:09:16,030
shows us what this is going to cost us.

141
00:09:16,040 --> 00:09:18,390
So you can say it's going to cost eight point fifty a month.

142
00:09:18,940 --> 00:09:24,520
So we now get to review all the various parameters that have been specified and we can just leave all

143
00:09:24,520 --> 00:09:26,350
those details and choose create stack.

144
00:09:27,420 --> 00:09:32,490
So we now get taken to this screen where we can see a list of events, so there's several different

145
00:09:32,490 --> 00:09:35,450
options up here, which we're going to go through in this section.

146
00:09:35,790 --> 00:09:41,400
But for now, we've just got the events shown and we can see that we have a crate in progress.

147
00:09:41,700 --> 00:09:46,760
And if we had over two to, we should now see that we have this instance initializing.

148
00:09:46,770 --> 00:09:52,290
So this should be our two micro instance and that's being created by cloud formation.

149
00:09:52,440 --> 00:09:54,210
So that just took a few minutes to complete.

150
00:09:54,210 --> 00:09:56,250
And we've now got a green create complete.

151
00:09:56,260 --> 00:09:57,720
So it's all worked successfully.

152
00:09:58,260 --> 00:10:01,950
Now, if you look on the resources, we can see that we have some resources here.

153
00:10:01,950 --> 00:10:05,370
So it's telling us the Web server security group is being created.

154
00:10:05,370 --> 00:10:10,590
So we could click on this and it will actually take us and we'll see the security group that is created

155
00:10:10,590 --> 00:10:11,940
by cloud formation.

156
00:10:12,510 --> 00:10:14,730
And we can also see the Web server instance.

157
00:10:14,730 --> 00:10:20,050
And that's going to link us to our AC2 instance so you can see the instant side here.

158
00:10:20,520 --> 00:10:25,800
So note that for the resources here, you have a logical ID and a physical ID.

159
00:10:26,130 --> 00:10:32,040
So the logical ID is what's to find within the template and then the physical IP corresponds to the

160
00:10:32,040 --> 00:10:34,060
actual resource in us.

161
00:10:34,320 --> 00:10:38,740
You can also see the resource type here and we'll cover that off in another lesson.

162
00:10:39,630 --> 00:10:40,760
We then have outputs.

163
00:10:40,760 --> 00:10:45,870
So you can see here that there's been an output defined in the template that tells us the URL to go

164
00:10:45,870 --> 00:10:51,720
to so we could click on this URL and it takes us to our information sample.

165
00:10:52,020 --> 00:10:53,440
We can also see parameters.

166
00:10:53,460 --> 00:10:58,920
So this lets us review what parameters were defined in the template and you can review the template

167
00:10:58,920 --> 00:11:01,360
here as well or view it again in the designer.

168
00:11:01,890 --> 00:11:03,000
So that's very simple.

169
00:11:03,270 --> 00:11:07,740
Now, the other thing I want to show you is what happens when you need to remove your stack so you can

170
00:11:07,740 --> 00:11:14,100
literally go in and click on delete and delete stack and it warns us it's going to remove all our resources

171
00:11:14,580 --> 00:11:18,210
and this is going to automatically roll back the entire configuration.

172
00:11:18,570 --> 00:11:22,230
So we should quickly find the our instance turns into a shutting down state.

173
00:11:22,240 --> 00:11:27,290
So that's going to be terminated and our security group will be deleted very shortly as well.

174
00:11:27,660 --> 00:11:30,980
So that just took a few moments and our deletion is complete.

175
00:11:30,990 --> 00:11:33,800
And if we go back up to stacks, you can see the stacks gone.

176
00:11:34,500 --> 00:11:38,970
It's often worth monitoring your stack deletion, though, because sometimes things can get stuck and

177
00:11:38,970 --> 00:11:42,170
you might even have to go and remove a resource manually.

178
00:11:42,240 --> 00:11:43,650
So that's it for this lesson.

179
00:11:43,950 --> 00:11:47,670
And in the next lesson, we're going to start looking at templates.

