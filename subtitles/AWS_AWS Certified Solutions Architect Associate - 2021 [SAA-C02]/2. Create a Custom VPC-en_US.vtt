WEBVTT
1
00:00:02.730 --> 00:00:03.240
Hi guys.

2
00:00:03.250 --> 00:00:06.460
In this lab we're going to create a custom VPC.

3
00:00:06.760 --> 00:00:11.710
So the great thing is you've got to this point in the course and you've already done quite a few of

4
00:00:11.710 --> 00:00:17.680
these things so you've already you already understand public and private subnets you already understand

5
00:00:18.010 --> 00:00:26.440
about route tables, NAT gateways, Internet gateways and you've seen into some of the route tables and

6
00:00:26.440 --> 00:00:27.700
how we configure them.

7
00:00:27.730 --> 00:00:33.310
So that's a great start and what I wanted to do was get you to this point in the course with that foundational

8
00:00:33.310 --> 00:00:39.160
knowledge so that this section of the course isn't too overwhelming because this is quite a big subject.

9
00:00:40.030 --> 00:00:44.380
So what we're going to do now is build on the knowledge that you already have.

10
00:00:44.500 --> 00:00:47.650
And we're actually going to stop using the default VPC.

11
00:00:47.650 --> 00:00:53.230
We're actually going to create a new custom VPC and this is exactly what we're going to create.

12
00:00:53.800 --> 00:00:58.570
So I'm using the Sydney region we have three Availability Zones.

13
00:00:58.570 --> 00:01:04.570
So what I want to do is I want to create a public and a private subnet in each of the availability zones

14
00:01:06.320 --> 00:01:09.500
and I will have a separate route table for each of those.

15
00:01:09.500 --> 00:01:15.610
Now this isn't the IP CIDR range I'm going to use but this is just the icon the AWS have for a route

16
00:01:15.610 --> 00:01:19.810
table what we are going to use is this IP range.

17
00:01:19.820 --> 00:01:23.660
So 10.0.0.0/16

18
00:01:26.870 --> 00:01:33.440
and our public route table will have a route locally so that it can  route anything within that CIDR

19
00:01:33.440 --> 00:01:40.850
block and it will have a route to an Internet gateway for any destination address.

20
00:01:40.850 --> 00:01:45.920
And for the private route table we'll also have the local entry so that we can route locally.

21
00:01:45.920 --> 00:01:51.780
And that means locally as in within any of these subnets that are part of this CIDR

22
00:01:51.780 --> 00:01:58.410
block and the outbound destination will be any and it will go to a NAT gateway.

23
00:01:58.420 --> 00:02:04.860
So that's the way that we get our private subnet instances to talk out through an NAT Gateway and eventually

24
00:02:04.860 --> 00:02:06.420
through the Internet gateway to the Internet.

25
00:02:06.420 --> 00:02:11.760
Because remember these private instances will not have public ip addresses so that's their way to get

26
00:02:12.060 --> 00:02:17.200
access to the Internet for whatever purposes updating packages.

27
00:02:17.430 --> 00:02:19.790
Application requirements whatever it might be.

28
00:02:21.070 --> 00:02:22.330
So let's get on with it.

29
00:02:22.480 --> 00:02:27.520
Let's go over to the management console and we're going to choose VPC

30
00:02:33.530 --> 00:02:41.020
and we're simply going to go into your VPCs and click Create VPC and I'm just going to call this

31
00:02:41.020 --> 00:02:45.980
my VPC and now we need to specify the CIDR block.

32
00:02:46.020 --> 00:02:55.890
So I'm going to specify 10 0 0 0 slash 16 and you can look up different CIDR blocks that you can

33
00:02:55.890 --> 00:02:57.540
use this is a private range.

34
00:02:57.840 --> 00:03:03.690
So it's one that I can use and what I'll do then is a slash 16 which then gives me the ability to create

35
00:03:03.690 --> 00:03:11.340
slash 24 subnets within it so I'll then do 10.0.1 then 10.0.2 then 10.0.30 and so on with

36
00:03:11.340 --> 00:03:17.970
a slash 24 mask for the individual subnets within this VPC.

37
00:03:18.210 --> 00:03:23.190
And if you don't understand CIDR blocks and subnetting there's lots of great articles on the internet

38
00:03:23.220 --> 00:03:24.570
so I suggest you go and have a look.

39
00:03:25.860 --> 00:03:34.110
Now we can also enable IPv6 by choosing Amazon provided IPv6 CIDR

40
00:03:34.120 --> 00:03:41.790
block so you can specify tenancy options here and you can choose default or dedicated and what this

41
00:03:41.790 --> 00:03:48.350
means is it overrides whatever is specified at launch for the instance.

42
00:03:48.510 --> 00:03:53.880
And so that could be that you're on shared hardware which is the default or that you own dedicated hardware

43
00:03:54.120 --> 00:03:58.900
which is obviously more expensive but maybe required for some kind of compliance.

44
00:03:58.950 --> 00:04:03.150
And so this is really referring to stuff like EC2 instances when you launch them.

45
00:04:03.240 --> 00:04:07.520
And like I say this will provide a default for your VPC.

46
00:04:07.530 --> 00:04:09.030
Now I'm just going to leave it at default

47
00:04:11.940 --> 00:04:12.590
so that's it.

48
00:04:12.600 --> 00:04:18.900
We've just created the VPC but now we need to go and configure it so we can see down here we've got

49
00:04:18.900 --> 00:04:26.580
an IPv6 CIDR block assigned the IPv4 CIDR block and we can see some information about the VPC

50
00:04:26.640 --> 00:04:32.310
option sets and it's already got a value selected there.

51
00:04:32.320 --> 00:04:33.750
We've got a route table.

52
00:04:33.830 --> 00:04:35.230
Got the full tenancy.

53
00:04:35.260 --> 00:04:41.650
It's not a default VPC and we can see something around DNS resolution and DNS host names.

54
00:04:41.710 --> 00:04:50.380
So if you look on the default VPC you'll see that those have both enabled whereas on the custom VPC

55
00:04:50.680 --> 00:04:54.350
DNS host names is not enabled.

56
00:04:54.370 --> 00:05:00.730
Now this attribute indicates where instances with public ip addresses get a corresponding public DNS

57
00:05:00.730 --> 00:05:01.270
hostname.

58
00:05:01.270 --> 00:05:06.160
So you remember when we've launched EC2 instances into public subnets.

59
00:05:06.430 --> 00:05:12.170
The DNS hostname is provided which contains the IP address as part of the name.

60
00:05:12.190 --> 00:05:18.490
So as long as you set this to true those type of host names will be generated.

61
00:05:18.520 --> 00:05:22.390
I want to do that for this so I'm just gonna go in and select the DNS names enable

62
00:05:26.470 --> 00:05:28.880
and that's all we need to do in there.

63
00:05:29.030 --> 00:05:32.050
So the next thing I want to do is create my subnets.

64
00:05:32.510 --> 00:05:38.000
So I'm going to try my private subnet excuse me I'm going to create my public subnets first and I'm

65
00:05:38.000 --> 00:05:45.530
going to label them as such that I know which availability zone they're in I choose my VPC I'm going

66
00:05:45.530 --> 00:05:56.210
to choose to write and I'm going to do 10.0.1.0 slash 24 and I'm going to select to assign customer

67
00:05:56.220 --> 00:06:01.610
IPV6 and I'm just going to put a number and then I'm going to increment that for each subnet

68
00:06:06.470 --> 00:06:09.750
and I'm just going to repeat that now for the other two subnets.

69
00:06:10.250 --> 00:06:17.540
So I need to select each one of these now and enable auto assign and you see we have an IPv4 and

70
00:06:17.540 --> 00:06:21.620
six option and now I'm just going to repeat that for the other two subnets

71
00:06:25.410 --> 00:06:25.950
and that's it.

72
00:06:25.950 --> 00:06:28.770
So we now have those public addresses we can see.

73
00:06:28.800 --> 00:06:30.730
Excuse me those public subnets.

74
00:06:30.900 --> 00:06:34.350
We can see the IP four and six CIDR blocks.

75
00:06:34.350 --> 00:06:41.550
How many available IP V4 addresses Amazon reserves a number of addresses so you won't get the full amount

76
00:06:41.550 --> 00:06:49.730
of addresses in your subnet and we can see that this time it's not a default subnet.

77
00:06:49.740 --> 00:06:55.440
So now let's go and create our private subnets so we can be private so I

78
00:07:02.460 --> 00:07:07.300
and so then we have 10.0.4.0/24

79
00:07:07.720 --> 00:07:15.290
And we can give us IP addresses as well and I've just repeated that action to complete the other two

80
00:07:15.290 --> 00:07:17.330
private subnets.

81
00:07:17.390 --> 00:07:23.840
So what I want to do next is create a route table now you'll see that there is a route table that's been

82
00:07:23.840 --> 00:07:25.880
created here.

83
00:07:25.880 --> 00:07:33.070
So if I just expand here you can see this is my VPC and we have a route table.

84
00:07:33.410 --> 00:07:39.610
It's going to have the IPv4 and six CIDR blocks here.

85
00:07:39.860 --> 00:07:48.640
And it will have and it doesn't have any subnet associations but what we can do is we can go in to here

86
00:07:48.640 --> 00:07:58.430
first and we can select our public subnet so public to a to b to c and we've got those and now let's

87
00:07:58.430 --> 00:08:04.390
create a route table and I'm going to call this private dash RT.

88
00:08:04.870 --> 00:08:07.160
You put it in our VPC click Create

89
00:08:14.000 --> 00:08:19.610
and I'm now going to select the private route table and I'm going to put our private subnets in

90
00:08:23.960 --> 00:08:31.550
and what we need to do now is create the Internet gateways and the nat gateways and this is going to

91
00:08:31.550 --> 00:08:40.100
be my internet gateway for my custom VPC so that I call it my VPC dash by GW

92
00:08:45.210 --> 00:08:49.290
and we then need to go into it and attach it to the VPC

93
00:08:52.700 --> 00:08:54.380
and that's all we need to do to enable it.

94
00:08:54.380 --> 00:09:00.230
We then need to go to the route table and we're going to use.

95
00:09:00.230 --> 00:09:03.110
Let's just give this a label to make it absolutely clear.

96
00:09:03.710 --> 00:09:12.230
So this is the public route table so I'm just gonna call it public-RT because I've associated it

97
00:09:12.230 --> 00:09:14.870
with my public subnets only.

98
00:09:14.870 --> 00:09:17.260
And now I can add a route it's into here which is.

99
00:09:17.280 --> 00:09:27.830
So any destination address and we choose Internet gateway there's the Internet gateway and now let's

100
00:09:27.830 --> 00:09:33.100
go down to Nat gateways and we're going to create a Nat gateway.

101
00:09:33.110 --> 00:09:39.830
Now remember the really important thing with the NAT gateway is you need to put it into a public subnet.

102
00:09:39.830 --> 00:09:48.880
So we're going to choose my VPC public to a now we're going to allocate an Elastic IP address and create

103
00:09:48.880 --> 00:09:51.100
the NAT Gateway.

104
00:09:51.100 --> 00:09:58.060
We can now go back to route tables and choose our private route table and edit routes.

105
00:09:58.420 --> 00:10:05.050
And again we choose the any destination address and we go choose NAT gateway.

106
00:10:05.120 --> 00:10:09.090
And there's the NAT Gateway click save.

107
00:10:09.120 --> 00:10:10.130
So that's it.

108
00:10:10.160 --> 00:10:13.840
That's all the configuration that we wanted to do.

109
00:10:13.880 --> 00:10:19.600
We've got the NAT gateway the Internet gateway we've configured our route tables for the private subnets

110
00:10:19.670 --> 00:10:26.510
and our public subnets and we've specified the targets for the Internet gateway and the net gateway

111
00:10:26.510 --> 00:10:28.230
in those route tables.

112
00:10:28.220 --> 00:10:30.500
So let's now go to EC2.

113
00:10:30.530 --> 00:10:35.740
And we're just going to check all this is working by provisioning a couple of instances.

114
00:10:35.930 --> 00:10:37.940
So let's launch the first instance

115
00:10:41.380 --> 00:10:43.990
into our public subnet.

116
00:10:43.990 --> 00:10:46.820
So got to choose the correct VPC.

117
00:10:47.110 --> 00:10:49.420
Then we've got to choose our public.

118
00:10:49.420 --> 00:10:50.990
I'm going to put it in public 2A.

119
00:10:51.040 --> 00:10:58.030
And you can see that also saw an IP is set subnet setting which is enable and I don't need to

120
00:10:58.030 --> 00:11:00.250
do anything else on that.

121
00:11:00.400 --> 00:11:05.170
Let's go down and what we want to do is create a new security group because we don't have one now.

122
00:11:05.380 --> 00:11:09.850
So let's call this web access

123
00:11:15.080 --> 00:11:17.970
and we only need SSH 22.

124
00:11:18.080 --> 00:11:27.510
So let's review launch and we can use our same key pair and now we're going to go and do the same thing

125
00:11:27.540 --> 00:11:29.610
but we're going to create one in the private subnet

126
00:11:32.820 --> 00:11:37.000
So choose your VPC choose your private subnet

127
00:11:42.220 --> 00:11:47.320
select the web access security group with SSH access and then launch

128
00:11:50.880 --> 00:11:55.320
so let's have a look now and see if the instance that we launched into our public availability zone

129
00:11:55.710 --> 00:12:04.320
is accessible and we can say that it has the public DNS name and this is for IP before and a public

130
00:12:04.320 --> 00:12:14.230
IP address and then has a public IP vs 6 address but there's no public DNS address for IP B6.

131
00:12:14.980 --> 00:12:18.250
Now what we can do is we can go to Route 53

132
00:12:24.020 --> 00:12:32.720
and we can actually let's go back and just copy our IPv6 address and I can go into Route 53 and

133
00:12:32.720 --> 00:12:35.090
I can use my hosted zone here

134
00:12:38.490 --> 00:12:46.360
and I'm going to create a record and it's gonna be an IPv6 address which is a site I'm just gonna call

135
00:12:46.360 --> 00:12:50.260
it testing and I'm going to put in my IPv6 address

136
00:12:53.950 --> 00:13:06.960
and now what I can do is I can use the dig command to do testing the dctlabs.com specify the type

137
00:13:07.170 --> 00:13:14.490
and then just put in short to reduce the amount of information that's returned.

138
00:13:14.790 --> 00:13:15.450
And there we go.

139
00:13:15.450 --> 00:13:24.180
So we got a DNS resolution from testing.dctlabs.com to our IPv6 address.

140
00:13:24.180 --> 00:13:25.600
So that's all I wanted to do with that.

141
00:13:25.620 --> 00:13:32.100
I'm just going to delete this so this record and let's go back to instances and I'm going to grab the

142
00:13:32.700 --> 00:13:33.800
public IP address

143
00:13:38.660 --> 00:13:44.540
and we're going to secure shell into this instance but we're going to do so with the -A which forwards

144
00:13:44.660 --> 00:13:51.920
on the information that we need in the key chain to be able to then connect to our private instance

145
00:13:58.610 --> 00:14:00.350
so I'm now on that instance.

146
00:14:00.350 --> 00:14:04.480
Clearly this one is connected to the Internet because I'm actually connected to it from the Internet.

147
00:14:04.490 --> 00:14:05.440
But just to prove to you.

148
00:14:05.450 --> 00:14:09.740
So that means the instant gateways working we're getting a response from Google dot com.

149
00:14:10.250 --> 00:14:15.700
And now I just want to secure a shell from that to my private instance.

150
00:14:15.770 --> 00:14:18.260
This is the one launched into the private subnet.

151
00:14:18.260 --> 00:14:22.470
You can see it's only got a private IP address and a private DNS address.

152
00:14:22.610 --> 00:14:25.670
So I'm going to SSH into that instance

153
00:14:30.730 --> 00:14:31.370
and that works.

154
00:14:31.370 --> 00:14:38.360
So we know that the routing is working correctly and let's see now is the NAT gateway working correctly.

155
00:14:38.570 --> 00:14:41.830
And it is we're getting a response so that's it.

156
00:14:41.840 --> 00:14:50.850
We now have this configuration working and we've proven that this architecture is set up correctly.

157
00:14:50.940 --> 00:14:56.340
Now the only thing I'm going to do at the end of this lab now is I just want to.

158
00:14:56.520 --> 00:15:00.840
Well first we want to terminate our instances so let's just go and terminate those we don't need those

159
00:15:00.840 --> 00:15:07.910
anymore but I'm also gonna get rid of the NAT gateway because the NAT gateway does actually cost money

160
00:15:09.950 --> 00:15:16.880
and I don't need to have it running at this stage so let's go to Nat gateways and delete the NAT gateway

161
00:15:18.550 --> 00:15:20.320
and that's going to be deleting.

162
00:15:20.320 --> 00:15:28.530
And then what I want to do is go to my elastic IPs so let's just see what we can do with our elastic

163
00:15:28.530 --> 00:15:40.760
IPs so let's each one individually what I can release this one I can release and so I look at this

164
00:15:40.760 --> 00:15:42.070
one and that can be released as well.

165
00:15:42.080 --> 00:15:48.850
So make sure you get rid of your elastic IPs as you will pay for them if they're not being used and

166
00:15:48.860 --> 00:15:49.630
that's it for this lab

167
00:15:49.630 --> 00:15:51.580
guys hope you had a good time.

168
00:15:51.640 --> 00:15:56.170
We're going to keep the rest of the configuration for the custom VPC we're going to be using that

169
00:15:56.170 --> 00:15:57.100
in subsequent labs.

