1
00:00:02,210 --> 00:00:11,930
AWS global accelerator is a new service and it's one that's going to come up in the SAA-C02 exam.

2
00:00:11,930 --> 00:00:14,410
And I saw it quite a lot in my beta exam.

3
00:00:14,420 --> 00:00:20,650
I think two or three questions you had it as an answer or had it as a distractor so an incorrect answer.

4
00:00:20,780 --> 00:00:23,020
So you definitely need to know what it is.

5
00:00:23,270 --> 00:00:25,610
And it's also quite an exciting service as well.

6
00:00:25,610 --> 00:00:29,090
So it's one that you might find really useful in certain scenarios in your

7
00:00:32,520 --> 00:00:34,240
work as a solutions architect.

8
00:00:34,830 --> 00:00:40,380
So AWS global accelerator is a service that improves the availability and performance of your applications

9
00:00:40,380 --> 00:00:46,970
with local or global users so it provides static IP addresses that act as a fixed entry point to your

10
00:00:46,970 --> 00:00:56,700
applications in single or multiple AWS regions such as ALBs and NLB's and EC2 instances. So that

11
00:00:56,700 --> 00:01:04,170
means you get static IP addresses which are fixed IP addresses that you can use to direct users to applications

12
00:01:04,200 --> 00:01:06,120
in multiple regions.

13
00:01:06,120 --> 00:01:09,170
And we'll see what this means in the diagram shortly as well.

14
00:01:09,180 --> 00:01:17,500
So I've got a diagram and we're also going to do a hands on. Global Accelerator also uses the AWS global

15
00:01:17,510 --> 00:01:21,710
network and that optimizes the path for users to applications.

16
00:01:22,060 --> 00:01:29,530
And it does TCP and UDP traffic so what this means is that global accelerator is actually going

17
00:01:29,530 --> 00:01:32,350
to direct traffic over the AWSs' network.

18
00:01:32,350 --> 00:01:37,410
So when you go and hit an endpoint for Global Accelerator you're actually hitting in the cloudfront

19
00:01:37,420 --> 00:01:44,130
network which means that there's the cloudfront edge locations around the world.

20
00:01:44,240 --> 00:01:50,030
Your being directed to an edge location and then from there your traffic no matter what region is

21
00:01:50,030 --> 00:01:52,520
going to is going to go through the global network.

22
00:01:52,550 --> 00:01:58,460
So that means you're not using the Internet so you're not subject to the potential latency issues that

23
00:01:58,460 --> 00:02:03,800
can occur on the Internet especially over long distances when you're failing your application between

24
00:02:03,800 --> 00:02:04,800
regions.

25
00:02:04,820 --> 00:02:08,020
So let's have a look at what this looks like.

26
00:02:08,030 --> 00:02:14,270
So in this diagram we have users and these users are in the US and what they need to do is they need

27
00:02:14,270 --> 00:02:20,370
to connect to an application that's running on the domain name dctlabs.com.

28
00:02:20,450 --> 00:02:25,670
So what they're going to do firstly is they punch that into their browser and they try to connect to

29
00:02:25,670 --> 00:02:33,080
this web application and what they need to do first is resolve the IP address for dctlabs.com and

30
00:02:33,080 --> 00:02:34,890
we're going to use Route 53 for that.

31
00:02:34,880 --> 00:02:42,710
So they send a request, Route 53 then responds with two IP addresses.

32
00:02:42,710 --> 00:02:50,120
Now these IP addresses are static anycast IP addresses and that means there can be multiple hosts behind

33
00:02:50,120 --> 00:02:56,000
these IP addresses but all you're ever going to see for your application is these two IP addresses.

34
00:02:56,390 --> 00:03:01,550
So let's say that you have users around the world and you have customers potentially and they need to

35
00:03:01,550 --> 00:03:07,100
whitelist IP addresses in order to be able to connect to the application that you're providing

36
00:03:07,100 --> 00:03:08,090
for them.

37
00:03:08,090 --> 00:03:10,040
These are the two addresses they're going to need to use.

38
00:03:10,040 --> 00:03:12,440
Nothing else it doesn't matter where they are in the world.

39
00:03:12,440 --> 00:03:14,330
So that's really useful.

40
00:03:14,330 --> 00:03:21,110
It also means when we have a failover between different regions, so our application endpoints in different

41
00:03:21,110 --> 00:03:26,030
regions, these IP addresses don't need to be changed and that in the client's browser.

42
00:03:26,050 --> 00:03:32,930
So they'll be cached in the client's computer on their browser and it doesn't matter because normally

43
00:03:32,930 --> 00:03:38,780
you have to worry about how long it's going to take for those cached entries to expire before the browser

44
00:03:38,810 --> 00:03:44,540
or the computer needs to go and do another look up to find out some new IP addresses.

45
00:03:44,540 --> 00:03:46,450
In this case the IPs don't change.

46
00:03:46,460 --> 00:03:48,500
So that's not an issue.

47
00:03:48,510 --> 00:03:55,410
So what happens next is these IP addresses are associated with Edge locations so the users get directed

48
00:03:55,410 --> 00:04:04,620
to a cloudfront edge location and that then connects them to the AWS Global Accelerator which forwards

49
00:04:04,620 --> 00:04:07,070
them to dctlabs.com.

50
00:04:07,110 --> 00:04:14,810
In this case in the us-east-1 the user is now connected to the application running in us-east-1.

51
00:04:14,820 --> 00:04:17,840
So what happens if this application fails.

52
00:04:17,970 --> 00:04:25,890
So let's say the application has failed and the user now needs to connect to another version of your application.

53
00:04:25,890 --> 00:04:28,770
Another instance of your application running somewhere else in the world.

54
00:04:29,670 --> 00:04:38,220
So what happens is AWS Global Accelerator will direct the users straight to dctlabs.com

55
00:04:38,390 --> 00:04:38,740
in

56
00:04:38,750 --> 00:04:41,080
In this case eu-central-1.

57
00:04:41,130 --> 00:04:47,310
Now it's the same IP addresses the IP addresses haven't changed the browser cache doesn't need to change

58
00:04:47,820 --> 00:04:51,740
and the traffic is going over the global network.

59
00:04:51,750 --> 00:04:59,040
So even though their users are in the US and the application is now in Europe the traffic is going via

60
00:04:59,120 --> 00:05:01,150
the AWS global network.

61
00:05:01,290 --> 00:05:04,350
That means it's very fast and very low latency.

62
00:05:04,350 --> 00:05:09,780
Let's head over to the console now and we're going to build out a architecture very similar to this

63
00:05:09,780 --> 00:05:10,370
one.

64
00:05:10,560 --> 00:05:15,120
And what we're going to have is we're going to have an application endpoint running in two locations

65
00:05:15,390 --> 00:05:21,860
probably both in the US but you'll see how this works what we're going to do now is go over to the as

66
00:05:21,880 --> 00:05:25,670
management console and we're going to build a solution very similar to this.

67
00:05:25,800 --> 00:05:31,500
I'll probably have instances both running in the US but in different regions within the US and otherwise

68
00:05:31,500 --> 00:05:36,930
this is going to be very much the same and it will assign some different IP addresses as well they're

69
00:05:37,260 --> 00:05:41,010
automatically assigned when you create the Global Accelerator.

70
00:05:41,010 --> 00:05:43,410
So let's head over to the console and build this out.

