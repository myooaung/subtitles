WEBVTT
1
00:00:01.990 --> 00:00:07.180
In this lab we're going to talk about a couple of use cases for bucket policies.

2
00:00:07.180 --> 00:00:13.390
So if you remember a bucket policy is a resource based policy whereas identity based policies are when

3
00:00:13.390 --> 00:00:16.750
you're applying the policy to a user group or role.

4
00:00:16.780 --> 00:00:19.730
So there are specific use cases for each.

5
00:00:19.780 --> 00:00:26.860
An example of when you might want to use an identity based policy is if you want to apply the policy

6
00:00:26.860 --> 00:00:28.210
to multiple buckets.

7
00:00:28.240 --> 00:00:32.020
So you want to give permissions across multiple buckets.

8
00:00:32.080 --> 00:00:37.780
In that case you want to apply it for an identity based policy rather than having to duplicate policies

9
00:00:37.780 --> 00:00:40.390
around lots of different buckets.

10
00:00:40.450 --> 00:00:44.080
But there are other times when a bucket policy makes more sense.

11
00:00:44.860 --> 00:00:49.840
And this page on the Amazon Web site gives you some good examples of CRB showing the link with you in

12
00:00:49.840 --> 00:00:51.400
the course downloads.

13
00:00:51.400 --> 00:00:54.910
So I'm going to cover off two of these right now.

14
00:00:55.060 --> 00:01:00.640
And if you've got time I would suggest that you should have a look and try and practice with as many

15
00:01:00.640 --> 00:01:02.320
of these as you can.

16
00:01:02.410 --> 00:01:08.740
The two that I'm going to pick these ones here the restricting access to specific IP addresses and restricting

17
00:01:08.740 --> 00:01:11.830
access to a specific HTTP referral.

18
00:01:12.070 --> 00:01:17.380
These are quite easy to set up and also these are definitely come up on exam questions recently.

19
00:01:17.380 --> 00:01:20.220
So that's why I want to cover these right now.

20
00:01:20.380 --> 00:01:26.380
So we're going to cover off the restricting access to specific IP addresses first and if we just come

21
00:01:26.380 --> 00:01:32.000
down to this section of the page we've got some code here that we can use.

22
00:01:32.020 --> 00:01:38.290
So it tells us that the following example grants permission to any user to perform any S3 operations

23
00:01:38.320 --> 00:01:44.890
on objects in the bucket but the request must originate from the range of IP addresses specified in

24
00:01:44.890 --> 00:01:46.170
the condition.

25
00:01:46.210 --> 00:01:49.570
So we have a range which is this here.

26
00:01:49.720 --> 00:01:53.590
So 54 to 41 for free dot 0 slash 24.

27
00:01:53.590 --> 00:01:57.880
So that's an entire 24 bit mask subnet.

28
00:01:57.880 --> 00:02:05.740
We then have a not IP address statement and this condition specifies that the source cannot be this

29
00:02:05.740 --> 00:02:11.530
one particular address and the 32 bit mask tells us that it's this specific address it can't be any

30
00:02:11.590 --> 00:02:12.520
variable of that.

31
00:02:12.520 --> 00:02:18.550
So in other words because this sits in the same subnet every host on the subnet will be allowed except

32
00:02:18.550 --> 00:02:20.120
for this one host.

33
00:02:20.140 --> 00:02:27.490
So let's head over to the console now say back in S3 I've actually copied in the code and I've modified

34
00:02:27.490 --> 00:02:30.620
my IP address and my ARN.

35
00:02:30.670 --> 00:02:34.230
So this is actually it's not my IP address.

36
00:02:34.240 --> 00:02:35.640
This is the next one above.

37
00:02:35.650 --> 00:02:43.630
Mine is actually 94 so 58 96 14 94 because I want to show you this working first that we're actually

38
00:02:43.630 --> 00:02:50.710
able to access S3 because our address is one of the ones within this range and it's not the one

39
00:02:50.710 --> 00:02:52.780
that's been specifically excluded.

40
00:02:52.840 --> 00:02:58.300
And the other thing we need to do is go as a block public access and actually turn off the block all

41
00:02:58.300 --> 00:02:59.110
public access.

42
00:02:59.110 --> 00:03:00.540
Now I've already done it.

43
00:03:00.670 --> 00:03:04.540
You need to click edit and then just uncheck the box.

44
00:03:04.630 --> 00:03:08.400
It will ask you to type confirm in order to confirm.

45
00:03:08.440 --> 00:03:14.530
So Amazon brought this in some time ago now to try and increase the security of S3 because a lot of

46
00:03:14.530 --> 00:03:19.990
companies were finding that they left some buckets open to public access and then there's been a few

47
00:03:19.990 --> 00:03:21.630
security breaches because of that.

48
00:03:22.030 --> 00:03:27.520
So you might want to have this on normally but in this case we actually need it to be switched off.

49
00:03:27.640 --> 00:03:32.140
So and that's because our principle is * which means anyone.

50
00:03:32.710 --> 00:03:38.560
So we've got the bucket policies set up and at the moment I have a user logged in called Sam.

51
00:03:38.560 --> 00:03:45.490
Now just quickly to show you Sam also has an in-line policy attached and that inline policy just allows

52
00:03:45.490 --> 00:03:47.050
him to list buckets.

53
00:03:47.050 --> 00:03:51.610
So that just gives the privilege to list all buckets in the S3 accounts.

54
00:03:53.560 --> 00:04:00.240
So Sam has logged in in a private window here and we can see these three buckets.

55
00:04:00.250 --> 00:04:05.540
Now let's go into the DCT company bucket and we can see the contents and we can hit refresh on there

56
00:04:05.540 --> 00:04:06.460
and it's it's all good.

57
00:04:06.460 --> 00:04:10.290
We can see it we can see everything within this bucket.

58
00:04:10.570 --> 00:04:16.330
So let's head back now and go to S3 and we're going to change this to 94.

59
00:04:16.330 --> 00:04:23.730
So this is my IP address and because even though we're running in a private window the address is still

60
00:04:23.730 --> 00:04:25.730
received by S3.

61
00:04:25.740 --> 00:04:29.880
So it should now pick up the fact that we're coming from a blocked IP address

62
00:04:32.720 --> 00:04:36.500
so sure enough we hit refresh and we get an access denied.

63
00:04:36.560 --> 00:04:42.200
We can still see this because it was already displayed but we get the access denied and if we head back

64
00:04:42.200 --> 00:04:48.650
just to show that this is definitely working put in another address so we shouldn't be blocked now come

65
00:04:48.710 --> 00:04:59.100
back hit refresh and the Access Denied message goes away so that's how blocking access via IP address

66
00:04:59.100 --> 00:04:59.820
works.

67
00:04:59.970 --> 00:05:03.010
And that's definitely a scenario that you might see in an exam question.

68
00:05:03.020 --> 00:05:08.920
So definitely worth practicing with that making sure you're comfortable with it the next one we want

69
00:05:08.920 --> 00:05:13.470
to trial is restricting access to a specific HTTP referral.

70
00:05:13.930 --> 00:05:22.930
So this means that what we want to do is restrict access to the bucket to referrals that come from a

71
00:05:22.930 --> 00:05:24.010
specific Web site.

72
00:05:24.040 --> 00:05:29.870
So in other words if we have a link to our bucket on this website page and someone clicks it and the

73
00:05:30.080 --> 00:05:39.960
HTTP referer header is sent with the data then we'll be able to allow access to that request but not to

74
00:05:39.960 --> 00:05:45.950
any other request that comes from you URL that doesn't have the HTTP referral header in the packet.

75
00:05:46.800 --> 00:05:53.760
So I've copied some code into my text wrangler here where I've just modified this.

76
00:05:53.910 --> 00:06:01.710
So let's go back and we're going to go to our bucket and we're going to delete this policy and then

77
00:06:01.710 --> 00:06:04.940
we're going to paste in a new policy.

78
00:06:05.040 --> 00:06:08.990
And so what I've done here is I've changed the bucket name and ARN.

79
00:06:09.390 --> 00:06:15.840
And I've put the website to my website because I have a link now coming back to this bucket.

80
00:06:15.840 --> 00:06:24.940
So let's click save and we see the warning come up about public access and we're going to hit a new

81
00:06:24.940 --> 00:06:36.380
tab and I'm going to paste in the URL to where I have the link pointing back to a document on in the

82
00:06:36.380 --> 00:06:37.610
DCT company bucket.

83
00:06:37.880 --> 00:06:42.770
So here we have a link to download this document.

84
00:06:42.770 --> 00:06:46.010
And before we do that I'm going to copy the link

85
00:06:48.930 --> 00:06:54.780
and head over to a private window and then we're just going to try and access this link directly.

86
00:06:54.780 --> 00:07:02.360
So just by pasting this your URL into the browser and sure enough we get an Access Denied message.

87
00:07:02.360 --> 00:07:09.360
Now let's come back and click on the link here which comes from digitalcloud.training.

88
00:07:09.500 --> 00:07:12.280
So it should have the HTTP referer header in it.

89
00:07:12.860 --> 00:07:17.680
And if we click on that link and that's just downloaded this file to my machine.

90
00:07:17.900 --> 00:07:20.240
So it's a blank document.

91
00:07:20.240 --> 00:07:22.300
But this is the one that was just downloaded.

92
00:07:22.310 --> 00:07:30.290
So what that's doing is it's allowing us to access this link only if we come from this web page so you

93
00:07:30.290 --> 00:07:35.290
can lock down to this web page and let's go back and just make sure that this is definitely working.

94
00:07:35.360 --> 00:07:41.960
If I just make any change to this for instance I changed the URL to HTTP instead of HTTPS we should

95
00:07:41.960 --> 00:07:45.350
now find that we get an access denied message.

96
00:07:45.980 --> 00:07:49.550
So those are the two use cases for bucket policies that I wanted to show you.

97
00:07:49.910 --> 00:07:53.400
And they'll definitely come up as exam questions quite often.

98
00:07:53.420 --> 00:07:55.990
There's some good use cases here which are also worth going free.

99
00:07:56.000 --> 00:08:00.170
So as I mentioned before I'd recommend that if you've got the time you should have a go at these as

100
00:08:00.170 --> 00:08:00.440
well.

