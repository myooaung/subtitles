1
00:00:05,550 --> 00:00:10,770
Welcome to another exam, Cram, so this time it's elastic load balancing and auto scaling.

2
00:00:11,400 --> 00:00:18,060
So starting off with auto scaling, auto scaling launches and terminates EC2 instance is automatically

3
00:00:18,660 --> 00:00:20,850
scaling as horizontal it scales out.

4
00:00:21,330 --> 00:00:28,350
It provides elasticity and scalability, and it will respond to EC2 status checks and cloud watch metrics.

5
00:00:28,830 --> 00:00:35,370
You can scale based on demand, so performance or on a schedule scaling policies will define how to

6
00:00:35,370 --> 00:00:37,590
respond to changes in demand.

7
00:00:38,430 --> 00:00:44,040
Also, scaling groups to find collections of EC2 instances that are scaled and managed together.

8
00:00:44,520 --> 00:00:50,160
Full health checks We have 82 health checks, which are the active status checks, and we have Ailbhe

9
00:00:50,160 --> 00:00:53,700
health checks, which means it's going to use the Albi health checks.

10
00:00:53,910 --> 00:01:00,090
In addition to that easy to instant status checks, the health check grace period is how long to wait

11
00:01:00,090 --> 00:01:05,910
before checking the health status of an instance after it's been launched into an auto screening group.

12
00:01:06,630 --> 00:01:10,560
Auto scanning does not act on health checks until the grace period expires.

13
00:01:11,530 --> 00:01:17,290
For monitoring, you got group metrics, and those are data points about the ISG, their one minute

14
00:01:17,290 --> 00:01:20,950
granularity, and there's no charge, but they have to be enabled manually.

15
00:01:21,190 --> 00:01:23,440
Basic monitoring is at the instance level.

16
00:01:23,770 --> 00:01:29,470
By default, it has five minute granularity and there's no charge with detailed monitoring at the instance

17
00:01:29,470 --> 00:01:29,830
level.

18
00:01:30,130 --> 00:01:35,590
That's one minute granularity and charges do apply some additional scaling settings.

19
00:01:35,590 --> 00:01:40,780
We've got call downs, and they're used with simple scaling policies to prevent auto scaling from launching

20
00:01:40,780 --> 00:01:45,070
or terminating before the effects of a previous activity are visible.

21
00:01:45,610 --> 00:01:51,010
The termination policy controls which instances to terminate first when a scale in event occurs.

22
00:01:51,610 --> 00:01:57,400
Some donation protection prevents auto scaling from terminating the protected instances.

23
00:01:58,180 --> 00:02:04,510
The standby state is used to put an instance that's in the in-service day into the standby state for

24
00:02:04,510 --> 00:02:06,040
updating and troubleshooting.

25
00:02:06,550 --> 00:02:13,540
Lifecycle hooks can be used to perform custom actions by pausing instances as the ISG launches or terminates

26
00:02:13,540 --> 00:02:13,750
them.

27
00:02:14,260 --> 00:02:20,110
Use Case is running scripts to download and install software after launching your instance or pausing

28
00:02:20,110 --> 00:02:25,360
an instance of process data before the instance is terminated by a scale in event.

29
00:02:25,870 --> 00:02:32,710
Moving onto elastic load balancing an Ailbhe distributes incoming traffic across multiple targets such

30
00:02:32,710 --> 00:02:37,660
as easy to instances, consignors and IP addresses, and also lambda functions.

31
00:02:37,960 --> 00:02:40,300
It provides fault tolerance for applications.

32
00:02:40,420 --> 00:02:48,040
EL-BAZ can distribute incoming traffic into a single AC or multiple ACS, but only one subnet per AC

33
00:02:48,040 --> 00:02:50,080
can be enabled for each LP.

34
00:02:50,710 --> 00:02:53,980
You need to ensure you have at least a 27 subnet.

35
00:02:54,250 --> 00:02:59,140
And make sure there's at least eight IP addresses available for the LP to scale.

36
00:02:59,470 --> 00:03:05,780
EL-BAZ can be configured as internet facing or internal only with incident facing EL-BAZ.

37
00:03:06,100 --> 00:03:12,310
The LP nodes will have public types, and they will route traffic to the private addresses of the active

38
00:03:12,310 --> 00:03:13,000
instances.

39
00:03:13,240 --> 00:03:17,530
You need one public subnet in each A-Z where the LP is defined.

40
00:03:17,890 --> 00:03:24,610
Even if you're routing to a private subnet with an internal only LP, the nodes have private IPS and

41
00:03:24,610 --> 00:03:27,370
also routes that are private IPS of the instances.

42
00:03:27,940 --> 00:03:31,030
So let's look at the different types of low balance and when you would use them.

43
00:03:31,510 --> 00:03:36,370
We've got the application load balancer, use it with web applications with last seven routing.

44
00:03:36,370 --> 00:03:45,430
So HDTV and HD TPS microservices architectures such as Docker containers and lambda targets a network

45
00:03:45,460 --> 00:03:46,300
load balancer.

46
00:03:46,420 --> 00:03:51,820
It's operating at the TCP and UDP level, so you can use it with applications that operate there.

47
00:03:52,360 --> 00:03:59,800
It offers ultra low latency, and static IP addresses also can be used with VPC endpoint services.

48
00:04:00,460 --> 00:04:02,410
We then got the Gateway Load Balancer.

49
00:04:02,440 --> 00:04:09,730
This is layer free and lessons for all IP packets across all ports and the GOP and virtual appliances.

50
00:04:09,880 --> 00:04:16,570
Exchange application traffic using the Geneive Protocol on port six eight one gateway load balances

51
00:04:16,570 --> 00:04:22,750
are used with virtual appliances such as firewalls, intrusion detection systems, intrusion prevention

52
00:04:22,750 --> 00:04:26,860
systems and deep packet inspection systems across town.

53
00:04:26,860 --> 00:04:31,960
Load balancing is important to understand when cross-site load balancing is enabled.

54
00:04:32,290 --> 00:04:39,430
Each load balancer node will distribute traffic across the register targets in all enabled Azeez when

55
00:04:39,430 --> 00:04:40,300
it's disabled.

56
00:04:40,600 --> 00:04:46,120
Each load balance and no distributes traffic only across the registered targets in its availability

57
00:04:46,120 --> 00:04:46,450
zone.

58
00:04:47,440 --> 00:04:54,070
And we saw in the lessons earlier on how that actually looks in a sort of diagrammatic format with application

59
00:04:54,070 --> 00:04:54,940
load balances.

60
00:04:54,950 --> 00:05:00,310
Cross own load balancing was always enabled with network load balances and gateway load balances.

61
00:05:00,310 --> 00:05:04,830
Cross load balancing is disabled by default, and that's it for this exam crime.

