1
00:00:02,070 --> 00:00:02,630
Hi guys.

2
00:00:02,870 --> 00:00:03,880
And welcome back.

3
00:00:03,880 --> 00:00:09,660
In this lab we're going to build a Hello World API with Lambda proxy integration as with the Lambda

4
00:00:09,720 --> 00:00:10,220
labs.

5
00:00:10,230 --> 00:00:15,750
I want to follow an AWS tutorial and this is really to keep you guys on track.

6
00:00:15,750 --> 00:00:17,810
This is not a coding exam.

7
00:00:17,880 --> 00:00:24,210
The solutions architects associate is more about understanding the architectural choices you make in

8
00:00:24,210 --> 00:00:28,410
order to design the best solutions for a given scenario.

9
00:00:28,470 --> 00:00:30,600
So we don't need to know a lot that coding stuff.

10
00:00:30,600 --> 00:00:36,240
And the reason that these labs are useful is just to help solidify your understanding of the service

11
00:00:36,540 --> 00:00:38,840
rather than getting too deep in the weeds.

12
00:00:38,850 --> 00:00:41,880
So this is a very straightforward one to follow.

13
00:00:41,910 --> 00:00:50,550
We're going to create a function in lambda which will return a greeting which just says good day you

14
00:00:50,550 --> 00:00:54,690
know then your name and your city and have a happy day.

15
00:00:54,720 --> 00:00:56,350
Happy Tuesday or whatever it might be.

16
00:00:56,940 --> 00:00:59,270
So very straightforward to follow.

17
00:00:59,460 --> 00:01:02,510
And we're going to start off by going to the lambda console.

18
00:01:03,270 --> 00:01:05,680
So we're in the AWS lambda console.

19
00:01:05,760 --> 00:01:07,560
We're going to click Create a function.

20
00:01:07,560 --> 00:01:10,200
We're going to choose all four from scratch.

21
00:01:10,200 --> 00:01:15,740
I'm going to paste in the function name and then we're going to choose node JS.

22
00:01:15,780 --> 00:01:23,090
Make sure that this is consistent with the version of code that's being used in this example.

23
00:01:23,080 --> 00:01:29,530
We then choose create a new role from AWS policy templates but we're not going to specify a actual

24
00:01:29,530 --> 00:01:35,560
policy template this time or we're going to do is just go in and put the role names and paste in that

25
00:01:35,560 --> 00:01:38,920
role name and it will create the role for us.

26
00:01:39,310 --> 00:01:45,520
So we click Create function and that just took a few seconds and we can now click on our function and

27
00:01:45,520 --> 00:01:48,170
then go down to the inline editor.

28
00:01:48,400 --> 00:01:52,540
And I'm just going to delete this code and I'm going to paste in the code that came straight from the

29
00:01:52,540 --> 00:01:55,910
article we'll click get started.

30
00:01:56,260 --> 00:01:59,500
We'll okay this message and then we're going to choose new API.

31
00:01:59,500 --> 00:02:06,070
This must be a REST API and then for API name we're just going to call it lambda simple proxy and we

32
00:02:06,070 --> 00:02:11,080
don't need to enter a description and we're gonna leave the end hype as regional and just click Create

33
00:02:11,080 --> 00:02:12,000
API.

34
00:02:12,190 --> 00:02:19,990
The next thing we need to do is create a resource and we go in here and we type hello world and we need

35
00:02:20,020 --> 00:02:23,760
the other options as default and we click Create resource.

36
00:02:24,100 --> 00:02:31,240
We then need to define a method and the way we do that is you need to select Hello World and then choose

37
00:02:31,300 --> 00:02:32,170
create method

38
00:02:35,040 --> 00:02:36,320
within going to choose any.

39
00:02:36,330 --> 00:02:41,690
So this is where you could define different or specific HTTP methods.

40
00:02:41,700 --> 00:02:48,360
But we're going to choose any and then you can click the tick mark we're going to choose lambda function

41
00:02:48,800 --> 00:02:55,920
you need to make sure the lambda region is set correctly and then you need to select this box which

42
00:02:55,920 --> 00:03:02,730
says use lambda proxy integration and if you hover over the information icon it explains to you that

43
00:03:02,730 --> 00:03:08,730
requests will be proxy to Lambda with the request details available in the event of your handler function.

44
00:03:09,330 --> 00:03:14,790
So we then choose the function you just type any letter and it will come up and show you the list of

45
00:03:14,790 --> 00:03:20,100
your functions and we need to choose the Get Started Lambda proxy integration function and then you

46
00:03:20,100 --> 00:03:25,890
click save and just okay the message which explains that you're about to give API Gateway permission

47
00:03:25,890 --> 00:03:31,680
to invoke the actual lambda function we've now defined our API and what we need to do is deploy and

48
00:03:31,680 --> 00:03:39,060
so we choose deploy API we choose new stage and I'm going to call it test we can leave the other boxes

49
00:03:39,080 --> 00:03:39,840
empty.

50
00:03:39,870 --> 00:03:48,190
And just ahead deploy so we've now deployed to a stage called test and if you expand this you can see

51
00:03:48,190 --> 00:03:55,000
the various methods you can see the at the top level you can see the invoke your URL and so you have

52
00:03:55,000 --> 00:04:00,340
these options for throttling and Web Application Firewall and client certificates and all the other

53
00:04:00,340 --> 00:04:03,420
ones across the various taps here.

54
00:04:03,640 --> 00:04:09,940
And then if you come down to your actual methods you can then see the invoke your URL for the specific

55
00:04:09,940 --> 00:04:10,960
method.

56
00:04:10,960 --> 00:04:16,010
So if you try and open this one for instance it's going to give us a bunch of information.

57
00:04:16,150 --> 00:04:18,760
And this is actually good it shows that it's working.

58
00:04:18,760 --> 00:04:24,520
It just tells us good day you off world and then it's a bunch of stuff here which you don't really need

59
00:04:24,520 --> 00:04:25,730
to worry too much about.

60
00:04:25,750 --> 00:04:32,940
But what we want to do is generate a customized message so to do that we need to create a custom

61
00:04:32,940 --> 00:04:33,760
URL.

62
00:04:33,760 --> 00:04:39,100
I've just created that url on another screen and I'm going to paste it into my browser.

63
00:04:39,100 --> 00:04:48,080
So the way this is constructed is we have our invoke your URL which goes up to Hello world for the get

64
00:04:48,140 --> 00:04:54,170
method and we then have a question mark and then name equals and then you can specify your own parameters

65
00:04:54,170 --> 00:04:54,460
in.

66
00:04:54,500 --> 00:05:01,130
Put your name in here then as an ampersand then this city equals and then you can specify your city.

67
00:05:01,280 --> 00:05:05,530
And if we hit Enter now instead we get a message that says Good day.

68
00:05:05,570 --> 00:05:06,410
NAYLOR Sydney

69
00:05:09,960 --> 00:05:15,820
now back on the tutorial if you want to play with this a bit further you can use the curl tool or you

70
00:05:15,820 --> 00:05:22,090
could also use postman if you have access to that and you can then specify some additional parameters

71
00:05:22,090 --> 00:05:28,570
which you can't do just by constructing the URL in the browser so you could specify the day and the

72
00:05:28,600 --> 00:05:32,170
time of the day and get a more customized message.

73
00:05:32,170 --> 00:05:35,690
So that's something else you could go on to do if you want to continue.

74
00:05:35,740 --> 00:05:43,030
Otherwise we can clean up this lab by just going back to our API. I'm going to copy the name of the

75
00:05:43,030 --> 00:05:48,430
API and then we just go delete API and paste that and click delete.

76
00:05:48,640 --> 00:05:55,450
We go back over to our function and we simply delete the function and that's everything cleaned up and

77
00:05:55,450 --> 00:05:59,320
what we're going to do in the next lab is we're going to have another configuration where we're going

78
00:05:59,320 --> 00:06:06,100
to deploy a simple micro service using lambda an API gateway and a dynamoDB table.

