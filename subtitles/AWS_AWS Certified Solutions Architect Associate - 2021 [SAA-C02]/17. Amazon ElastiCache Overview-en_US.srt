1
00:00:02,380 --> 00:00:07,900
Hi guys we're going to talk about ElastiCache now ElastiCache is a fully managed service that gives

2
00:00:07,900 --> 00:00:14,680
you two popular in-memory data stores once called Memcached and the others called Redis and you use

3
00:00:14,710 --> 00:00:21,400
ElastiCache in situations where you want to improve latency and throughput for read heavy applications

4
00:00:21,760 --> 00:00:30,840
or compute intensive workloads. There's a few key differences between memcached and Redis and redis

5
00:00:30,840 --> 00:00:36,810
also has two different modes that you can deploy it in cluster-mode customer disabled or cluster mode enabled

6
00:00:37,350 --> 00:00:42,540
and what I want to do is go through these with you today because the key differences between these engines

7
00:00:43,140 --> 00:00:51,100
are likely to come up in exam questions. So firstly with memcached you don't get any data persistence

8
00:00:51,370 --> 00:01:00,390
so it's a pure in memory caching service. With Redis you do in both modes. Memcached is used for

9
00:01:00,390 --> 00:01:08,210
simple data types whereas Redis can be used for complex data types. with memcached you get partitioning

10
00:01:08,480 --> 00:01:15,320
so that is you have multiple nodes and each node has a partition of your data. With Redis it's cluster

11
00:01:15,330 --> 00:01:21,980
mode disabled you don't you have a single partition essentially with multiple replicas of it whereas

12
00:01:21,980 --> 00:01:27,170
we have cluster mode enabled you now have what's called shards and each shard is a partition of your

13
00:01:27,170 --> 00:01:32,600
data with a bunch of replicas and I'll show you some diagrams and we're going to build this out so you

14
00:01:32,600 --> 00:01:42,660
understand fully there's no replication out of options with memcached each node is an individual partition

15
00:01:42,690 --> 00:01:50,930
of your data whereas we've read this there is replication and this is done between so you have multiple

16
00:01:50,930 --> 00:01:58,110
shards and then you have replication to replicas within each shard you can't do any kind of high availability. With

17
00:01:58,110 --> 00:02:04,320
memcached You can place nodes in different phases but these are again partitions of your data so if

18
00:02:04,320 --> 00:02:11,340
you lose a node you lose the data that's on that node. With Redis you can have replication and you

19
00:02:11,340 --> 00:02:12,870
can have also failover

20
00:02:16,740 --> 00:02:23,310
for scaling with memcached you scale up by increasing the node size and out by adding nodes. With Redis

21
00:02:23,310 --> 00:02:31,480
you add shards and shards can have replicas. Now with a redis cluster mode disable you can only have

22
00:02:31,480 --> 00:02:32,340
a single shard.

23
00:02:32,350 --> 00:02:38,620
So all you can do is add replicas whereas with Redis cluster mode enabled you can add shards and

24
00:02:38,620 --> 00:02:47,340
each of those shards can have replicas. memcached is multi threaded whereas redis isn't, you don't

25
00:02:47,340 --> 00:02:49,120
get any backups with memcached.

26
00:02:49,140 --> 00:02:56,040
So again in scenarios where nodes fail or AZs fail whichever partitions are affected that's where you're

27
00:02:56,040 --> 00:02:57,250
going to lose your data.

28
00:02:57,510 --> 00:03:01,960
Whereas we've redis you can you have automatic and manual snapshots.

29
00:03:02,190 --> 00:03:08,860
So let's have a look at a couple of diagrams so this makes a bit more sense so here's memcached you

30
00:03:08,860 --> 00:03:15,760
have a memcached cluster and you have multiple Availability Zones and then you deploy nodes and each

31
00:03:15,760 --> 00:03:18,430
of these is a partition of data.

32
00:03:18,430 --> 00:03:24,640
And like I say that's no persistence and there's no replication each node contains a piece of data and

33
00:03:24,640 --> 00:03:26,710
you can have those across multiple databases.

34
00:03:26,740 --> 00:03:30,850
Of course if you lose a node you lose whatever data is on it.

35
00:03:30,850 --> 00:03:36,720
This is the the cache. With Redis you have shards and with cluster mode disabled.

36
00:03:36,730 --> 00:03:45,330
You have one shard that shard can have a primary and then multiple replicas so you're writing to the

37
00:03:45,330 --> 00:03:52,140
primary and then replicating to the replicas. Those replicas can be in multiple places and you can fail

38
00:03:52,140 --> 00:03:58,260
over to your replicas and that can take place automatically.

39
00:03:58,300 --> 00:04:01,790
We then have elasticache readers with cluster mode enabled.

40
00:04:02,050 --> 00:04:04,200
And in this case you have multiple shards.

41
00:04:04,270 --> 00:04:10,750
So each shard is a partition of data and each shard will have a primary node and then multiple replica

42
00:04:10,750 --> 00:04:12,520
nodes or it can have none.

43
00:04:12,520 --> 00:04:19,520
They can have zero replica names or can have up to five replica nodes and those replicas can be across

44
00:04:19,610 --> 00:04:22,810
Availability Zones.

45
00:04:22,810 --> 00:04:26,470
Another thing I'd recommend is having a look on the AWS Web site.

46
00:04:26,560 --> 00:04:32,080
There's some great information on here where you can see the differences between the engines and that

47
00:04:32,080 --> 00:04:33,610
will give you a bit more insight.

48
00:04:34,060 --> 00:04:39,460
But the key things that we need to know for the exam are covered on this table here and what we're going

49
00:04:39,460 --> 00:04:44,080
to do in the next couple of labs is actually just build a couple of clusters on elasticache.

