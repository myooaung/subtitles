WEBVTT
1
00:00:02.320 --> 00:00:02.780
Hi guys.

2
00:00:02.780 --> 00:00:10.100
In the last lap I introduce private subnets to you and we deployed an easy to instance into a private

3
00:00:10.100 --> 00:00:13.480
subnet and then we saw how we could use a bastion host to access it.

4
00:00:13.910 --> 00:00:19.550
But one of the problems I mentioned at the end is your instance in the private subnet doesn't have any

5
00:00:19.550 --> 00:00:25.970
way of accessing the internet so you can't get updates you can't connect to applications on the Internet.

6
00:00:25.970 --> 00:00:31.170
You are basically isolated which for some use cases is fine but for many it isn't.

7
00:00:31.370 --> 00:00:37.640
So you need to be able to connect your instances in private subnets to the Internet and there's two

8
00:00:37.640 --> 00:00:39.640
principal ways that we do this.

9
00:00:39.770 --> 00:00:42.890
And these are the two that are likely to come up on the exam.

10
00:00:43.010 --> 00:00:48.710
So one is called a Nat instance and that stands for network address translation which really is the

11
00:00:48.710 --> 00:00:54.950
process of taking a private IP address and translating it to a public address so that you can speak

12
00:00:55.040 --> 00:00:56.570
on the Internet.

13
00:00:56.570 --> 00:01:01.100
The other is a NAT gateway which is a bit newer than a that instance.

14
00:01:01.280 --> 00:01:06.930
So I'm just gonna explore both of these with you now in a fairy lesson and then we're going to go on

15
00:01:06.930 --> 00:01:20.110
to a couple of labs where we put these into action and you see how they work.

16
00:01:20.540 --> 00:01:26.240
So I'm actually going to start with just going through this table a Nat instance so this is the old

17
00:01:26.240 --> 00:01:26.760
way.

18
00:01:26.900 --> 00:01:32.800
What you actually do with a Nat instance is provision and easy to instance and then configure it so

19
00:01:32.800 --> 00:01:38.150
that it performance the network address translation so you actually launch that easy to instance and

20
00:01:38.150 --> 00:01:41.550
therefore you must manage it within that gateway.

21
00:01:41.570 --> 00:01:49.130
It's actually managed by NWS so all you have to do is create an attach in that Gateway and everything

22
00:01:49.130 --> 00:01:53.080
else is done by Amazon with in that instance.

23
00:01:53.090 --> 00:01:56.680
The only way to scale it is by scaling the instance type.

24
00:01:56.710 --> 00:02:02.810
So in other words using a bigger instance type with more resources and perhaps enhance networking get

25
00:02:02.810 --> 00:02:05.890
additional bandwidth within that gateway.

26
00:02:06.050 --> 00:02:13.070
Alas Stickley scales up to 45 gigabit per second so that's quite a lot of bandwidth.

27
00:02:13.210 --> 00:02:14.110
We're in that instance.

28
00:02:14.110 --> 00:02:16.310
There is no high availability.

29
00:02:16.340 --> 00:02:22.800
You'd have to script it to using auto scaling or something like that using nets in multiple subnets.

30
00:02:22.910 --> 00:02:24.440
So there's no native way to do it.

31
00:02:24.440 --> 00:02:25.280
It's not easy.

32
00:02:25.280 --> 00:02:26.820
It's a bit messy.

33
00:02:26.840 --> 00:02:33.110
We've not gateways you get automatic hate shaped within an availability zone and you can place in that

34
00:02:33.110 --> 00:02:35.180
gateway into multiple places.

35
00:02:35.450 --> 00:02:41.990
In that instance you have to manage security groups within that gate where you don't some of the advantages

36
00:02:42.170 --> 00:02:45.980
of Nat instances are you can also use them as a bastion host.

37
00:02:46.160 --> 00:02:47.920
So maybe that's an advantage.

38
00:02:47.930 --> 00:02:51.190
I would just deploy a separate bastion host so it's not really a big one.

39
00:02:51.380 --> 00:02:54.780
But we've not gateways you can't actually access them through SSA at all.

40
00:02:55.000 --> 00:03:00.980
We we're in that instance you can use an elastic IP or a public IP with that gate where you choose an

41
00:03:00.980 --> 00:03:07.900
elastic IP to associate with the net Gateway one of the other potential advantages of in that instance

42
00:03:07.930 --> 00:03:13.990
is you can implement port forwarding free manual customization Nat gateways don't support the port forwarding

43
00:03:13.990 --> 00:03:17.800
so potentially that could be an issue in most cases it won't be.

44
00:03:18.070 --> 00:03:21.790
So let's just have a look at a couple of diagrams before we head into the labs.

45
00:03:21.790 --> 00:03:23.410
So this is a Nat gateway.

46
00:03:23.500 --> 00:03:31.420
It's a device managed by AWB as you provisioned it into your availability sign know your subnet and

47
00:03:31.420 --> 00:03:38.150
then your easy two instances in private subnets are pointed to the NAT gateway through the round table.

48
00:03:38.290 --> 00:03:40.670
So you remember the round table for a private subnet.

49
00:03:40.680 --> 00:03:47.020
Doesn't have an Internet gateway but in this case it has a net Gateway I.D. So your route to the outside

50
00:03:47.020 --> 00:03:52.580
world that IP address range that says anything that isn't within this range.

51
00:03:52.630 --> 00:03:58.960
The site block range for the VPC will be rounded by the NAT gateway so it goes out to the outside world

52
00:03:59.820 --> 00:04:01.750
with a s instance.

53
00:04:01.840 --> 00:04:06.010
It's just an easy to instance that you manage but essentially it's the same thing.

54
00:04:06.010 --> 00:04:11.200
So from the Roundtable's perspective you can figure out and you put in your net instance I.D. instead

55
00:04:11.200 --> 00:04:12.510
of a net gateway.

56
00:04:12.970 --> 00:04:14.170
So that's the ferry guys.

57
00:04:14.170 --> 00:04:17.950
Let's get stuck into some labs and create these configurations.

