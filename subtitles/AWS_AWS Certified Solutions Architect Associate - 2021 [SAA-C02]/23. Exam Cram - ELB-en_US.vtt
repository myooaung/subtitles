WEBVTT
1
00:00:02.360 --> 00:00:04.220
Welcome to another exam cram.

2
00:00:04.220 --> 00:00:09.530
And in this one we're going to cover Elastic Load Balancing and auto scaling. So getting started with Elastic

3
00:00:09.530 --> 00:00:10.470
Load Balancing.

4
00:00:10.610 --> 00:00:13.720
There are free types of ELB on AWS.

5
00:00:13.820 --> 00:00:15.550
There's the classic load balancer.

6
00:00:15.560 --> 00:00:19.790
Remember this is the oldest one is kind of old generation being deprecated.

7
00:00:19.790 --> 00:00:21.730
It does layer four and layer 7.

8
00:00:21.860 --> 00:00:25.240
You've got the application load balancer which is purely layer seven.

9
00:00:25.250 --> 00:00:29.200
So the application layer, that means HTTP and HTTPS.

10
00:00:29.480 --> 00:00:34.700
And then you got the network load balancer which is layer 4 TCP and that's all about routing

11
00:00:34.700 --> 00:00:37.120
connections based on IP protocol data.

12
00:00:37.120 --> 00:00:40.780
So those TCP port numbers, we've seen this in the course.

13
00:00:40.790 --> 00:00:46.340
So just remember all this information you got to remember that the application load balancer is directing

14
00:00:46.340 --> 00:00:53.940
traffic based on information in HTTP and the network load balancer is operating at the TCP level.

15
00:00:54.020 --> 00:00:58.080
The classic load balancer kind of operates it both but it's not as clever.

16
00:00:58.100 --> 00:01:03.820
It's older generation you can do a lot more with application and network load balancers such as the path-based

17
00:01:03.890 --> 00:01:10.400
routing and the host-based routing, the separate target groups. Key use cases for network load balancer

18
00:01:10.850 --> 00:01:16.510
are going to be when you need ultra high performance, low latency and TLS offloading at scale.

19
00:01:16.520 --> 00:01:22.760
So anything where you see that you really need that sort of TCP high throughput or TLS off loading

20
00:01:22.760 --> 00:01:28.130
at scale some kind of large requirement for a lot of TLS offloading those might push you towards

21
00:01:28.130 --> 00:01:29.210
network load balancer.

22
00:01:29.300 --> 00:01:34.280
Otherwise you're often going to go towards the application load balancer it's going to be very rare if

23
00:01:34.280 --> 00:01:36.800
at all nowadays on the exam that you're ever going to choose

24
00:01:36.800 --> 00:01:39.230
Classic load balancer as the answer.

25
00:01:39.230 --> 00:01:44.540
So when we have load balancers we can have Internet facing that means the notes that ELB nodes have

26
00:01:44.540 --> 00:01:50.960
public high IPs, the traffic is routed to the private IP address of EC2 instances so it doesn't matter

27
00:01:50.960 --> 00:01:55.970
even if those instances are in public subnets and they have public ip addresses it's still going to

28
00:01:55.970 --> 00:02:03.080
use the private IP address of the EC2 instance to route that data. You must have one public subnet

29
00:02:03.320 --> 00:02:09.680
in each availability zone where the ELB is defined and that's the format at the DNS name.

30
00:02:09.830 --> 00:02:15.740
We then have the internal only ELB which have private IPs only and they route traffic also to the

31
00:02:15.740 --> 00:02:19.510
private IP addresses. They have slightly different DNS name.

32
00:02:19.550 --> 00:02:23.750
So remember this is what it looks like where in this case it's a classic load balancer but it really

33
00:02:23.750 --> 00:02:24.700
doesn't matter.

34
00:02:24.830 --> 00:02:30.320
You've got a Internet facing load balancer so that means the nodes have public IPs and route to the

35
00:02:30.320 --> 00:02:37.850
private IPs of the instances in public subnets and we then have a private subnet here.

36
00:02:37.850 --> 00:02:41.160
This means it's a internal only ELB.

37
00:02:41.330 --> 00:02:47.480
And in this case it has private IPs and it also routes to the private IPs and these instances

38
00:02:47.480 --> 00:02:52.880
are going to be in a private subnet so you can register EC2 instances and containers against the ELB

39
00:02:53.570 --> 00:02:57.170
you'll be known to use IP addresses within your subnets.

40
00:02:57.170 --> 00:03:02.300
And the more traffic that you're putting through the ELB the more nodes it's going to put into your

41
00:03:02.300 --> 00:03:03.050
subnets.

42
00:03:03.140 --> 00:03:07.430
You don't see those, they're transparent to you but they do require IP addresses so you've got to make sure

43
00:03:07.430 --> 00:03:14.120
you got at least eight IP addresses in each subnet for the ELB nodes. Remember they use the private

44
00:03:14.120 --> 00:03:20.150
IP address and that's associated with the eth0 adapter and the ELB listener is the process

45
00:03:20.150 --> 00:03:26.000
that listens for connection requests so remember for the CLB that could be TCP could be a port number

46
00:03:26.200 --> 00:03:32.210
a TCP level or it could be port 80 or 443, HTTP and HTTPS.

47
00:03:32.480 --> 00:03:38.270
Whereas the ALB only does the layer seven stuff and the listener for the ALB only does the layer 4

48
00:03:38.270 --> 00:03:38.670
stuff.

49
00:03:38.690 --> 00:03:44.900
So TCP we then have security groups and these control the ports and protocols that reach the front-end

50
00:03:44.900 --> 00:03:45.610
listener.

51
00:03:45.650 --> 00:03:48.020
So that's the ELB security group.

52
00:03:48.020 --> 00:03:52.820
You have to assign a security group for the ports and protocols on the front-end listener.

53
00:03:52.940 --> 00:03:56.560
You also need to allow the ports and protocols for the health-check ports.

54
00:03:56.690 --> 00:04:02.660
So the back-end listeners so that those health checks can succeed for monitoring. By default you'll have

55
00:04:02.660 --> 00:04:04.970
CloudWatch monitoring every one minute.

56
00:04:05.030 --> 00:04:09.830
And with this the ELB service only sends information when requests are active.

57
00:04:09.830 --> 00:04:12.800
So when your ALB is actually being used.

58
00:04:12.800 --> 00:04:14.030
You then have access logs.

59
00:04:14.030 --> 00:04:19.760
Now these are disabled by default but you can include information in here about the clients that are

60
00:04:19.760 --> 00:04:26.600
connecting to your ALB so stuff like the IP address can be identified and you can store and retain these

61
00:04:26.600 --> 00:04:27.260
on S3.

62
00:04:27.290 --> 00:04:32.900
We then have cloudtrail and this is about logging API calls that are made to the ALB and you can store

63
00:04:32.900 --> 00:04:34.520
that information in an S3 bucket.

