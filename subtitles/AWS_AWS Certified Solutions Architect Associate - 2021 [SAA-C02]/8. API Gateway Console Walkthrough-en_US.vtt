WEBVTT
1
00:00:02.090 --> 00:00:02.600
Hi guys.

2
00:00:02.600 --> 00:00:08.570
In this lab we're going to go into the API Gateway console create a really simple API and I just want

3
00:00:08.570 --> 00:00:13.940
to use it as a chance to show you through the console and teach you a little bit more about API Gateway

4
00:00:13.940 --> 00:00:18.170
before we then go on to actually create a few more solutions.

5
00:00:18.320 --> 00:00:24.770
So go into the services menu and just scroll down to networking and content delivery you'll find API

6
00:00:24.770 --> 00:00:27.630
Gateway here.

7
00:00:27.730 --> 00:00:31.240
And if you haven't used it before you're going to get this splash screen.

8
00:00:31.300 --> 00:00:37.660
And if you just click get started it actually pops up and says it's going to pre populate the import

9
00:00:37.660 --> 00:00:42.120
form of a pet store API which uses swagger 2.0.

10
00:00:42.490 --> 00:00:46.810
We can click okay and let's just have a quick look free what we've got here.

11
00:00:46.810 --> 00:00:54.160
So first off we've got the type of API we want to deploy so even arrest based or a web socket.

12
00:00:54.400 --> 00:01:01.000
And if we choose risk based we get a couple of options to either create a new API we can import from

13
00:01:01.000 --> 00:01:07.570
swagger or open API three so those were a couple of standards that you can use to define your API as

14
00:01:07.570 --> 00:01:14.560
an API Gateway is compatible with them so you can import and you can also export to these formats or

15
00:01:14.560 --> 00:01:18.730
you can use an example API which is already pretty populated for us so we're going to just choose this

16
00:01:18.730 --> 00:01:25.270
example API if you then scroll down and we're just going straight past the code you don't need to know

17
00:01:25.270 --> 00:01:31.520
too much about this for now the endpoint type so this is what we talked about in the last lesson there's

18
00:01:31.570 --> 00:01:35.080
regional edge optimized and private.

19
00:01:35.080 --> 00:01:39.250
And if you remember the differences the regional API is it deployed in the region.

20
00:01:39.400 --> 00:01:42.660
The Edge optimized API uses cloudfront.

21
00:01:42.670 --> 00:01:48.580
That's the globally distributed content delivery network, and then the private API is for when you only

22
00:01:48.580 --> 00:01:54.520
want to access your API from within your VPC from your own private IP ranges.

23
00:01:54.520 --> 00:01:57.400
So we can leave that as regional and click import

24
00:02:00.940 --> 00:02:03.490
and we're now in our first API.

25
00:02:03.490 --> 00:02:05.720
So this is called the pet store API.

26
00:02:05.860 --> 00:02:13.570
And on the left here you can see that we have some different categories of settings and in the middle

27
00:02:13.570 --> 00:02:17.650
pane here you can see some of the HTTP methods that are being created.

28
00:02:17.650 --> 00:02:22.490
So normally you'd go in and you can sort of create a method here and you can choose one of these different

29
00:02:22.490 --> 00:02:24.730
HTTP methods.

30
00:02:25.120 --> 00:02:27.330
And this has been created for us.

31
00:02:27.430 --> 00:02:32.800
So we've already got the get, post and some options as well.

32
00:02:32.800 --> 00:02:39.460
And you can actually go into these and click test and then for instance if you just click test down

33
00:02:39.460 --> 00:02:42.010
here it starts populating some information.

34
00:02:42.010 --> 00:02:47.260
So this is what's been this this is what's being provided in the response body here and we've got dog,

35
00:02:47.250 --> 00:02:50.080
cat, and fish with different prices associated with them

36
00:02:53.050 --> 00:03:00.100
you could then for instance type type equals dog and click test and then it's just going to change the

37
00:03:00.100 --> 00:03:00.790
response

38
00:03:03.550 --> 00:03:09.610
with post you can also then go and click test and you can put some information in and into the request

39
00:03:09.610 --> 00:03:12.440
body and the next level is stages.

40
00:03:12.700 --> 00:03:20.250
So if you click actions you deploy an API and when you deploy your API you then select a stage.

41
00:03:20.260 --> 00:03:25.810
So for instance you can choose to create your own stage here and call it test and you can create multiple

42
00:03:25.810 --> 00:03:31.150
stages and you can use this for your product delivery lifecycle.

43
00:03:31.180 --> 00:03:37.120
We just click deploy we then get some options that are associated with our stage.

44
00:03:37.220 --> 00:03:43.550
So you can see you can enable a cache you can choose the capacity, you can choose to encrypt the cache

45
00:03:44.090 --> 00:03:52.440
you can specify the time to live and the authorization it's just to select that you then have throttling

46
00:03:52.450 --> 00:04:00.040
this sometimes comes up on the exam. Your account level throttling right is 10000 requests per second

47
00:04:00.390 --> 00:04:02.520
with a burst of 5000.

48
00:04:02.710 --> 00:04:07.630
Now you can see that this stage actually has 10000 requests per second.

49
00:04:07.630 --> 00:04:13.780
So if you want to limit each of your APIs, you have to go in and edit this manually so that you don't

50
00:04:14.380 --> 00:04:22.010
exceed or reach your account threshold just through one API you can then choose to associate with a

51
00:04:22.010 --> 00:04:32.210
web ACL using the Web Application Firewall and you can choose client certificates as well in the logs

52
00:04:32.210 --> 00:04:37.070
and tracing you can choose to enable cloudwatch logs and by default you get error or info.

53
00:04:37.490 --> 00:04:42.680
Alternatively you could then go down and enable access logging here and this is where you can do custom

54
00:04:42.680 --> 00:04:46.550
access logging so you can choose your own cloudwatch group.

55
00:04:46.550 --> 00:04:51.500
You can also choose detailed cloudWatch metrics and if you hover over the information icon you can

56
00:04:51.500 --> 00:04:56.470
see a little bit of information about the metrics that are going to be logged and also how you're going

57
00:04:56.470 --> 00:04:57.560
to be charged.

58
00:04:57.560 --> 00:05:08.260
You can also enable x-ray tracing and you can select variables for your stage choose the SDK export

59
00:05:08.260 --> 00:05:15.460
to swagger or open API three and also these other options as well as you can export with the gateway

60
00:05:15.460 --> 00:05:16.300
extensions.

61
00:05:16.300 --> 00:05:22.510
The API Gateway extensions and JSON or YAML and you can export swagger plus postman extension so lots

62
00:05:22.510 --> 00:05:25.980
of options there is a bit of history and then a canary.

63
00:05:25.990 --> 00:05:32.590
So you can create a canary and what this means is you can direct a certain percentage of your API requests

64
00:05:32.620 --> 00:05:33.570
to the canary.

65
00:05:34.030 --> 00:05:40.210
So let's say the stage is a test stage and you want to send 10 percent your traffic to it and then you

66
00:05:40.210 --> 00:05:41.740
can see you know what the results are.

67
00:05:41.740 --> 00:05:46.210
Do your testing and you can even add variables just for that particular canary.

68
00:05:46.210 --> 00:05:48.070
So that's stages.

69
00:05:48.100 --> 00:05:56.140
Then you got authorizers and you can create a new authorizer and the options are lambda or coordinator.

70
00:05:56.370 --> 00:06:02.060
Now what happens is for instance if you're using the lambda authorization is when a client makes a request

71
00:06:02.060 --> 00:06:07.810
to one of your API methods, API Gateway calls the lambda authorize of which takes the caller's identity

72
00:06:07.810 --> 00:06:14.800
as the input and then returns and IAM policy as output and then a couple of things that might be worth

73
00:06:14.800 --> 00:06:21.970
showing you here are the dashboard which is where you can see some information on your API calls and

74
00:06:21.970 --> 00:06:25.520
the latency associated with them and the usage plans.

75
00:06:25.540 --> 00:06:34.930
You can create a plan to meet your API usage enabling throttling and quota limits on API keys there's

76
00:06:35.040 --> 00:06:42.580
then the API case themselves here so you can create your API keys and you can create your custom domain

77
00:06:42.580 --> 00:06:44.050
name entries here.

78
00:06:44.050 --> 00:06:50.180
So for instance we could put in dctlabs.com which we've used in this course before and there are

79
00:06:50.180 --> 00:06:57.310
no certificates for HTTP but if we go to Web socket we can see the certificate that we used earlier

80
00:06:57.460 --> 00:06:58.930
in the course.

81
00:06:58.930 --> 00:07:06.250
You can also generate client certificates and if you do this you can then copy the key information to

82
00:07:06.250 --> 00:07:13.750
the clipboard and then you can use that with your backend services to verify that all requests that

83
00:07:13.750 --> 00:07:23.180
reach them come actually from API Gateway I could just delete this one for now under VPC links you can

84
00:07:23.180 --> 00:07:29.020
configure access to your VPC and you do so through a network load balancer.

85
00:07:29.360 --> 00:07:31.070
So we don't actually have one at the moment.

86
00:07:31.080 --> 00:07:35.270
If you have a network load balancer you can use that as your integration endpoint.

87
00:07:35.510 --> 00:07:40.040
So that's it for this lab it was just a quick overview of some of the console.

88
00:07:40.070 --> 00:07:42.560
There's lots and lots here we haven't covered everything.

89
00:07:42.680 --> 00:07:47.570
You don't really need to know at all for the yet for the solutions architects associate exam you do

90
00:07:47.570 --> 00:07:55.370
really need to understand things like API stages and the methods that are used and also you

91
00:07:55.370 --> 00:08:00.190
need to understand some of the services the API Gateway typically integrates with.

92
00:08:00.200 --> 00:08:08.380
You also need to know client certificates being a way to ensure that requests to your backend come from

93
00:08:08.380 --> 00:08:12.440
API gateway so that's something that can definitely pop up in an exam question.

94
00:08:12.460 --> 00:08:18.250
For now we can go in and delete this API and what we need to do is just type the name of the API which

95
00:08:18.250 --> 00:08:24.340
in this case is pet store and delete the API and it's as simple as that in the next lab.

96
00:08:24.340 --> 00:08:28.870
We're going to build a Hello World API that has lambda proxy integration.

