1
00:00:01,910 --> 00:00:05,690
Guys, in this section we had a bit more information on I am.

2
00:00:05,990 --> 00:00:08,120
So the Identity and Access Management Service.

3
00:00:08,300 --> 00:00:13,370
So just some key information you need to understand as it could come up in exam questions.

4
00:00:13,610 --> 00:00:19,850
So remember where the access keys are stored and these are the combination of the access key I.D. and

5
00:00:19,850 --> 00:00:20,990
the secret access key.

6
00:00:21,920 --> 00:00:28,040
And you can have multiple profiles as well as the conflict file gets stored with the access keys in

7
00:00:28,040 --> 00:00:28,880
the same directory.

8
00:00:28,970 --> 00:00:33,410
And you can do stuff likes select the region and other parameters as well.

9
00:00:33,830 --> 00:00:35,180
We then have policies.

10
00:00:35,210 --> 00:00:36,650
So remember the differences.

11
00:00:36,890 --> 00:00:42,280
The A.W. managed policy is a stand alone policy created and administered by a W.S..

12
00:00:42,890 --> 00:00:47,960
It has its own MRN and they're designed to provide permissions for common use cases.

13
00:00:48,170 --> 00:00:49,910
And you can't change those permissions.

14
00:00:50,210 --> 00:00:52,430
Here's a series of A.W. Yes.

15
00:00:52,460 --> 00:00:53,330
Managed policies.

16
00:00:53,450 --> 00:00:54,890
As an example, there's many more.

17
00:00:55,220 --> 00:01:00,590
Some manage policies also designed for specific job functions such as these job functions.

18
00:01:00,770 --> 00:01:07,160
So it might be useful to use a managed policy, especially if you've got a scenario where it's a new

19
00:01:07,160 --> 00:01:11,900
account and the administrators have it work with A.W. as much.

20
00:01:12,080 --> 00:01:17,810
So it's an easy and perhaps a safer way to apply permissions if you don't know how to create the sort

21
00:01:17,810 --> 00:01:20,900
of complex policies that might really sort of lock things down.

22
00:01:21,350 --> 00:01:27,080
Customer manage policies are when you create a standalone policy that you administer and own and you

23
00:01:27,080 --> 00:01:30,620
can attach them to multiple principal entities in your account.

24
00:01:31,160 --> 00:01:35,570
When you attach a policy, the entity gets the permissions to find in the policy.

25
00:01:35,810 --> 00:01:43,220
So that's an example of an easy to action hand for allowing any action on all resources but restricting

26
00:01:43,220 --> 00:01:45,350
to a certain IP address.

27
00:01:45,620 --> 00:01:48,650
The evaluation logic is something you need to understand.

28
00:01:48,770 --> 00:01:55,430
We have our density based policies which get attached to an I am identity such as a user group or role.

29
00:01:55,610 --> 00:01:57,410
We then have resource based policies.

30
00:01:57,620 --> 00:02:03,710
These can be applied to resources such as S3 buckets and then you have the permissions boundaries,

31
00:02:03,710 --> 00:02:09,260
which are an advance feature that sets the maximum permissions and identity based policy can grant to

32
00:02:09,260 --> 00:02:11,510
an AI entity, user or role.

33
00:02:11,870 --> 00:02:16,400
Now I mentioned in the section, I don't see this coming up on the exam, but it's just to help you

34
00:02:16,400 --> 00:02:18,590
understand the chance I'm going to show you in a second.

35
00:02:18,950 --> 00:02:21,620
The same applies to SICP as well.

36
00:02:21,860 --> 00:02:25,670
I don't think they're coming up in the developer associate exam at this stage, but they're probably

37
00:02:25,670 --> 00:02:27,020
more likely to, if anything.

38
00:02:27,230 --> 00:02:33,200
So it might be worth doing a bit of background reading on organizations than we have session policies

39
00:02:33,200 --> 00:02:38,330
which were advanced policies that you pass as parameters when you programmatically create a temporary

40
00:02:38,330 --> 00:02:40,100
session for a role or user.

41
00:02:40,400 --> 00:02:46,610
So by default, all requests are implicitly denied and explicit allow will override that default.

42
00:02:47,210 --> 00:02:53,000
And then you've got some constraints around permissions, boundaries, organization escapee's and session

43
00:02:53,000 --> 00:02:59,750
policies which might override with an implicit deny and explicit deny in any policy will override any

44
00:02:59,750 --> 00:03:00,290
allows.

45
00:03:00,710 --> 00:03:06,350
Now this is the chart from A.W. s, which shows you the logic for how policies are applied.

46
00:03:06,650 --> 00:03:11,870
So I'm not gonna go for it in detail again now, but I would just read through that and try and understand

47
00:03:11,900 --> 00:03:12,650
it is logical.

48
00:03:12,980 --> 00:03:16,010
So once you've been over a couple of times, it does make sense.

49
00:03:16,220 --> 00:03:22,130
We then have instant's profiles and an instance profile is a container for an item role that you could

50
00:03:22,130 --> 00:03:28,690
use to pass RHOA information to an easy to instance when it starts an instance profile contains one.

51
00:03:28,700 --> 00:03:32,990
I am wrong, although a role can be included in multiple instance profiles.

52
00:03:33,190 --> 00:03:34,330
So it's basically like this.

53
00:03:34,400 --> 00:03:37,100
You've got your AC2 instance running an application.

54
00:03:37,250 --> 00:03:42,590
It has an instance profile with an I am role attached to it and that allows it to get temporary security

55
00:03:42,590 --> 00:03:45,640
credentials, which it can use to access as free.

56
00:03:45,650 --> 00:03:51,250
In this example, you can use these commands to work with instance profiles using the CLIA.

57
00:03:51,470 --> 00:03:57,260
And we went through these in the section where I showed you how to create and delete an instance profile.

58
00:03:57,500 --> 00:03:57,970
Next stop.

59
00:03:58,090 --> 00:03:59,320
Cross account access.

60
00:03:59,630 --> 00:04:02,000
Useful where you have multiple accounts.

61
00:04:02,180 --> 00:04:07,070
So you might have a development and production resources and you want people to be able to access multiple

62
00:04:07,070 --> 00:04:09,350
accounts without having to log out back in again.

63
00:04:09,530 --> 00:04:15,470
So you can then switch roles, which is much easier, and you can sign in using your IAM username and

64
00:04:15,470 --> 00:04:20,210
then switch to the other account instead of having to log out and log back in again.

65
00:04:20,330 --> 00:04:26,150
So all about allowing users from one account to access the resources in another one to make a request

66
00:04:26,180 --> 00:04:26,950
in a different account.

67
00:04:26,960 --> 00:04:32,060
The resource in that account has to have an attached resource based policy with the correct permissions,

68
00:04:32,840 --> 00:04:38,390
or you have to assume a role using an identity based policy within that account that has the permissions

69
00:04:38,420 --> 00:04:38,870
you need.

70
00:04:39,170 --> 00:04:44,960
So quick run through of the IAM best practices, lock away those route user access keys, create your

71
00:04:44,990 --> 00:04:47,240
individual IAM users, don't share them.

72
00:04:47,690 --> 00:04:53,600
Use groups to assign permissions to multiple I am users at a time grant list privilege.

73
00:04:53,960 --> 00:04:59,120
Get started using permissions with a W.S. manage policies, just as I mentioned earlier in the exam.

74
00:04:59,120 --> 00:04:59,570
Cramb.

75
00:04:59,960 --> 00:05:01,400
That might be a better way in some.

76
00:05:01,500 --> 00:05:07,140
Cases of getting started with a W.S. rather than creating complex policies where you might accidentally

77
00:05:07,350 --> 00:05:12,520
give too many permissions but use customer managed policies instead of inline policies.

78
00:05:12,550 --> 00:05:18,990
So remember, in line is when you attach it directly to a user or a roll, use access levels to review.

79
00:05:19,030 --> 00:05:23,190
I am permissions just means that you need to review the permissions you've got assigned to make sure

80
00:05:23,190 --> 00:05:25,890
that you are following the principle of least privilege.

81
00:05:26,400 --> 00:05:28,410
Configure a strong password policy.

82
00:05:28,560 --> 00:05:30,120
That's quite self-explanatory.

83
00:05:30,330 --> 00:05:36,180
Enable multifactorial fence creation for extra security and use rolls for applications that run on E.S.

84
00:05:36,180 --> 00:05:39,760
two instances instead of using access keys.

85
00:05:40,650 --> 00:05:42,750
Also use rolls to delegate permissions.

86
00:05:42,930 --> 00:05:44,370
Don't share your access keys.

87
00:05:44,430 --> 00:05:50,370
Rotate your credentials like your access keys and your passwords, and remove unnecessary credentials

88
00:05:50,370 --> 00:05:54,390
so that there's less chance of somebody maliciously using them.

89
00:05:55,020 --> 00:06:01,500
Also, use policy conditions for extra security, such as the source IP address might be a condition

90
00:06:01,770 --> 00:06:09,000
so that you specify exactly where people are allowed to connect from in order to administer and monitor

91
00:06:09,000 --> 00:06:11,050
activity in your W.S. account.

92
00:06:11,090 --> 00:06:12,820
So keep an eye on what's going on.

