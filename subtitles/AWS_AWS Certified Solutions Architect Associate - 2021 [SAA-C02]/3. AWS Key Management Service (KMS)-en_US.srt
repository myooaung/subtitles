1
00:00:02,040 --> 00:00:07,120
Hi guys in this lesson we're going to talk about the key management service - KMS. So this is used for

2
00:00:07,120 --> 00:00:13,870
creating keys that are used for encryption and it's a way that you can use a managed service for

3
00:00:16,590 --> 00:00:22,080
creating or uploading existing keys into that service and then being able to use those for encryption

4
00:00:22,080 --> 00:00:23,520
purposes.

5
00:00:23,550 --> 00:00:29,280
Now there's a couple of different types of keys so I'm just gonna head over to a slide to talk about

6
00:00:29,280 --> 00:00:34,470
that a bit more so we have these three different types of keys and these are called customer master

7
00:00:34,470 --> 00:00:35,520
keys.

8
00:00:35,520 --> 00:00:42,480
You've got the customer manage CMK key, the AWS managed key and then AWSs own CMK key.

9
00:00:42,660 --> 00:00:48,150
So with the customer manage CMK this is something that you have control over and it's dedicated to

10
00:00:48,150 --> 00:00:52,690
your account and you must manage it with the AWS.

11
00:00:52,710 --> 00:00:58,410
You can see it and it is dedicated to your account so you wherever you see a Key you'll note that key

12
00:00:58,410 --> 00:01:01,580
is only used for you within your account.

13
00:01:01,620 --> 00:01:03,570
However you don't have the option to manage it.

14
00:01:03,570 --> 00:01:09,410
These are created for you and managed for you with the AWSs own CMK key, you don't have any control.

15
00:01:09,410 --> 00:01:15,730
You don't see them, manage them, and they're shared across multiple accounts so we just head back into

16
00:01:15,730 --> 00:01:24,490
the console on the left here you can see the AWS managed keys and the customer managed keys. So if you

17
00:01:24,490 --> 00:01:29,920
head into here for instance under AWS managed keys you can see these keys that have been created automatically

18
00:01:29,920 --> 00:01:32,950
for us when we've used these services.

19
00:01:33,190 --> 00:01:39,330
And if you head in you can see some information about those keys and customer managed keys you can create

20
00:01:39,330 --> 00:01:40,100
your own.

21
00:01:40,110 --> 00:01:44,210
Now I created one earlier and then deleted it and you can see here it's pending deletion.

22
00:01:44,400 --> 00:01:46,680
You'll see in a minute what that means.

23
00:01:46,680 --> 00:01:54,090
So if we go and create a key, create key, just call it new key and you can then choose a few options

24
00:01:54,180 --> 00:01:57,510
as to where the key material comes from.

25
00:01:57,510 --> 00:02:04,130
So even it can be generated by came as it can come from an external source or it can come from the cloud.

26
00:02:04,140 --> 00:02:09,070
Your HSM is a hardware security module you choose external.

27
00:02:09,090 --> 00:02:12,690
You've then got to upload your own information.

28
00:02:12,720 --> 00:02:20,000
In this case I'm just going to choose KMS and you can add tanks you can define the administrators

29
00:02:20,000 --> 00:02:26,200
for the key and in this case I'm just going to add myself you can then specify if the key administrators

30
00:02:26,200 --> 00:02:30,550
are allowed to actually delete the key because remember this is a really key thing if you if you delete

31
00:02:30,550 --> 00:02:34,810
an encryption key you may not be able to decrypt or you won't be at the decrypt the data which has been

32
00:02:34,810 --> 00:02:41,470
encrypted by that key so it's a very important operation that you want to protect you then click on

33
00:02:41,470 --> 00:02:48,090
Next you can define the key usage permissions.

34
00:02:48,640 --> 00:02:54,930
So this is who is able to not just administer but to use the key to encrypt and decrypt data.

35
00:02:55,330 --> 00:03:01,360
And in this case you might choose a user account or you'd often choose a role as well.

36
00:03:01,360 --> 00:03:07,450
So in this case I might want to Elastic Beanstalk to be able to encrypt and decrypt data on my behalf

37
00:03:08,830 --> 00:03:13,500
you can then also specify other AWS accounts, click next.

38
00:03:13,690 --> 00:03:21,310
We then see the key policy so you can see this policy written in here which is based on the configuration

39
00:03:21,310 --> 00:03:23,120
options that we just chose.

40
00:03:23,290 --> 00:03:27,310
And then if you click on finish it just creates the key for you.

41
00:03:27,310 --> 00:03:34,510
And if you go into this key you can see some information you can add key administrators you can change

42
00:03:34,510 --> 00:03:39,550
some of the options here and add the key users and you can also add overwrite AWS accounts at this

43
00:03:39,550 --> 00:03:45,850
stage as well you had under key rotation there's an option here to rotate the same keys every year

44
00:03:46,540 --> 00:03:50,200
and if you click on the learn more link, there you'll get a bit more information about that.

45
00:03:50,260 --> 00:03:56,440
So that's basically saying that it's going to change the backing key for the customer master key once

46
00:03:56,440 --> 00:04:02,260
every year to go back up and look at these keys what you'll see here is if you then want to delete a

47
00:04:02,260 --> 00:04:09,010
key you actually don't have an option to delete it but you can schedule the key for deletion and you

48
00:04:09,010 --> 00:04:15,010
can enable or disable the key as well so that will stop it from being used but if you schedule for deletion

49
00:04:15,580 --> 00:04:21,910
it actually lets you know that they enforce a waiting period and this is between seven and thirty days

50
00:04:21,910 --> 00:04:27,880
so I could reduce this down to seven and then so confirmed that I want to delete the key in seven days

51
00:04:28,450 --> 00:04:34,000
and I click on schedule deletion it then goes to pending deletion just like my test one up here the

52
00:04:34,000 --> 00:04:41,830
other option on the left is custom key stores and this is using CloudHSM so you can choose to create

53
00:04:41,830 --> 00:04:48,490
a custom key store in CloudHSM and actually store your customer master keys there instead and

54
00:04:48,490 --> 00:04:52,660
to do that you would need to first create the CloudHSM cluster and that's what we're actually going

55
00:04:52,660 --> 00:04:54,100
to do in the next lab.

