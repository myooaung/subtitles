1
00:00:05,630 --> 00:00:13,820
We're moving on now to the Amazon elastic filesystem ETFs, ETFs is an implementation of an NFC based

2
00:00:14,030 --> 00:00:17,440
file storage system which you attach over a network.

3
00:00:17,450 --> 00:00:20,140
So it's often known as network attached storage.

4
00:00:20,600 --> 00:00:24,290
Now, NAS devices are followed by storage systems.

5
00:00:24,440 --> 00:00:26,790
So you connect to your file system.

6
00:00:27,350 --> 00:00:28,280
So what does that mean?

7
00:00:28,640 --> 00:00:35,060
Well, on the left here, we have the file management console of a computer that computer uses its own

8
00:00:35,060 --> 00:00:39,530
network interface card to connect to a Nassib over a network.

9
00:00:40,220 --> 00:00:47,840
That NASA server will have a bunch of disks in it and it actually shares those disks as a file system

10
00:00:47,840 --> 00:00:48,710
over the network.

11
00:00:48,740 --> 00:00:50,090
So this is different.

12
00:00:50,120 --> 00:00:51,410
Ebb's Ebb's.

13
00:00:51,680 --> 00:00:58,700
There is actually a server in the U.S. data center that has disks in it, but it shares them as Volney

14
00:00:58,700 --> 00:00:59,720
at a volume level.

15
00:00:59,720 --> 00:01:01,610
So you can actually see them as a volume.

16
00:01:01,610 --> 00:01:09,440
You can format the drivers C or D or whatever, and your operating system is talking to it by manipulating

17
00:01:09,440 --> 00:01:11,210
sectors and tracks and blocks and so on.

18
00:01:12,050 --> 00:01:18,380
Now, in this case, with an NFL or a NASA based storage system, you actually connect into a file system.

19
00:01:18,740 --> 00:01:20,960
So you map a drive letter.

20
00:01:21,590 --> 00:01:24,920
You can't format that file system that's already done for you.

21
00:01:25,260 --> 00:01:31,050
All you do is connect to it and then you can read and write data to that file system over the network.

22
00:01:31,430 --> 00:01:33,050
So that's basically how it works.

23
00:01:33,290 --> 00:01:34,850
So there are a few differences.

24
00:01:34,850 --> 00:01:38,870
And the main one is you actually can't use windows with FS.

25
00:01:39,050 --> 00:01:45,440
So in the example here I am showing you a Windows system with its C and D drives and Z Drive, which

26
00:01:45,440 --> 00:01:46,700
we just mapped to the NAS.

27
00:01:46,940 --> 00:01:48,980
But you actually can't do that with AFSC.

28
00:01:48,980 --> 00:01:50,460
You would have to use Linux instead.

29
00:01:50,540 --> 00:01:53,240
So let's have a look at Amazon FS.

30
00:01:53,660 --> 00:02:02,060
So FS is a file based storage system which you can create an endpoint for in your VPC and then you can

31
00:02:02,060 --> 00:02:08,260
simultaneously connect many instances up to thousands of instances to one file system.

32
00:02:08,270 --> 00:02:12,230
So all of those instances can then see the same data.

33
00:02:13,130 --> 00:02:20,630
Now, you can also connect instances from other episodes as well, and you can connect on premises computers,

34
00:02:20,960 --> 00:02:25,860
and to do that, you must use a VPN or direct connect connection.

35
00:02:26,360 --> 00:02:31,460
Now, the protocol that's used is NAFS, so that's the network filesystem protocol.

36
00:02:31,940 --> 00:02:35,320
And this is only supported for Linux, as I mentioned before.

37
00:02:35,660 --> 00:02:42,200
So your AC2 instances must be Linux instances to connect to your AIFS file system.

38
00:02:42,350 --> 00:02:45,900
IFES offers automatic backups and they're enabled by default.

39
00:02:46,190 --> 00:02:48,230
There's also lifecycle management.

40
00:02:48,260 --> 00:02:54,500
With lifecycle management, you can configure a period after which files that have not been accessed

41
00:02:54,770 --> 00:02:58,820
can then be moved to the infrequent access storage class.

42
00:02:58,860 --> 00:03:02,540
So that's a separate storage class for EFS, which is a bit lower and cost.

43
00:03:02,840 --> 00:03:08,600
Now there are two performance modes with AFSC you've got general-purpose, which is suitable for most

44
00:03:08,600 --> 00:03:14,270
use cases, and then you've got Máximo where you can scale to higher levels of aggregate throughput

45
00:03:14,450 --> 00:03:16,300
and operations per second.

46
00:03:16,580 --> 00:03:21,920
So just watch out where exam questions might ask for a particular performance.

47
00:03:21,920 --> 00:03:27,680
Attribute Fornier filesystem, something that might push you to use Máximo instead of general purpose.

48
00:03:27,980 --> 00:03:32,030
So you can figure those through the wizard when you're actually creating our file system.

49
00:03:32,660 --> 00:03:38,750
Now there are also two throughput modes you've got bursting where the throughput scales with the filesystem

50
00:03:38,750 --> 00:03:44,840
size and then you've got provisioned where you actually provisioning the amount of throughput you believe

51
00:03:44,840 --> 00:03:45,380
you need.

52
00:03:45,560 --> 00:03:47,730
And so you're going to pay for that amount.

53
00:03:47,730 --> 00:03:48,730
So that's going to cost more.

54
00:03:48,860 --> 00:03:53,720
But if you know you need it and you need it to be available immediately, then you could choose provisioned.

55
00:03:54,320 --> 00:03:58,880
And again, this is something you can configure through the wizard as we're creating our filesystem.

56
00:04:00,050 --> 00:04:07,520
IFES offers the ability to encrypt data at rest and in transit, it's actually enabled by default and

57
00:04:07,520 --> 00:04:11,790
you can enable it in the console or the SLA or case as well.

58
00:04:12,440 --> 00:04:19,190
So these are the default settings and you can choose to customize your encryption key settings or create

59
00:04:19,190 --> 00:04:21,160
an AWA krimsky.

60
00:04:21,350 --> 00:04:24,250
If you don't use that, then it will just use a default key.

61
00:04:24,530 --> 00:04:31,640
So encryption keys are managed by CDMS and encryption of data at rest and of transit can be configured

62
00:04:31,640 --> 00:04:32,750
separately or together.

63
00:04:32,750 --> 00:04:36,240
So there are two different configurations here.

64
00:04:36,500 --> 00:04:39,970
It's not like Heap's where it's just encryption on or off.

65
00:04:40,340 --> 00:04:45,970
In this case, you can choose encryption for data in transit and encryption for data at risk.

66
00:04:46,130 --> 00:04:49,820
When you create your file system, you have to create something called a target.

67
00:04:50,090 --> 00:04:55,910
So these are the endpoints in your VPC and they're within each of your availability zones.

68
00:04:56,120 --> 00:05:00,910
And that's what you'll actually use to connect your instances to the local point.

69
00:05:01,820 --> 00:05:06,440
Now, the filesystems Deerness name will actually resolve to the Mount Target's IP address.

70
00:05:06,980 --> 00:05:10,600
So here's an example where we have free availability zones.

71
00:05:10,850 --> 00:05:17,390
You can see a target ID and then an IP address and also has a network interface side.

72
00:05:17,510 --> 00:05:24,150
You can control administration using AYAM and you can do so using user based or resource based policies

73
00:05:24,150 --> 00:05:29,360
so you can configure policies and attachment to a user and define what they're allowed to do in Air

74
00:05:29,360 --> 00:05:29,780
Force.

75
00:05:30,080 --> 00:05:35,690
Or you can create a policy and apply it actually to AIFS itself and define who you want to be able to

76
00:05:35,720 --> 00:05:37,140
administer your file system.

77
00:05:37,640 --> 00:05:40,220
You then have control for NAFS clients.

78
00:05:40,250 --> 00:05:42,560
So these are resource based policies.

79
00:05:42,560 --> 00:05:47,990
So you apply these to the actual file system and they control who is or which.

80
00:05:47,990 --> 00:05:53,350
Neff's clients can actually connect to your file systems and what they're able to do.

81
00:05:53,510 --> 00:05:56,510
And we'll have a look at a couple of policy examples later in a section.

82
00:05:56,840 --> 00:06:03,530
You can also control access to files and directories with POSIX compliant user and group level permissions.

83
00:06:03,740 --> 00:06:10,340
So this is useful if you're using your file system for one of the common use cases, which is a shared

84
00:06:10,340 --> 00:06:11,390
corporate directory.

85
00:06:11,570 --> 00:06:17,510
And you might want to control access to certain directories using group level permissions, or you might

86
00:06:17,510 --> 00:06:20,580
have user level permissions for a home drive, for example.

87
00:06:20,780 --> 00:06:22,010
So that's it for the ferry.

88
00:06:22,130 --> 00:06:26,960
And in the next lesson, we're going to go in, create a file system and connect a couple of easy to

89
00:06:26,960 --> 00:06:27,890
instances to it.

