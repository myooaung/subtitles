1
00:00:02,460 --> 00:00:10,110
Hi guys it's time to move on to access control lists now so we've already seen how we can use policies,

2
00:00:10,140 --> 00:00:12,510
identity based and resource based.

3
00:00:12,510 --> 00:00:20,370
But the other type of access control is the access control list or ACL and these are more of an older

4
00:00:20,460 --> 00:00:25,450
technology and AWS are trying to scare people away from using them.

5
00:00:25,500 --> 00:00:28,740
In fact on one of the web pages we're going to have a look at shortly.

6
00:00:28,830 --> 00:00:34,830
It actually has a statement that says only use objects ACLs to manage permissions for specific scenarios

7
00:00:34,890 --> 00:00:41,310
and only if ACLs meet your needs better than IAM and S3 bucket policies.

8
00:00:41,310 --> 00:00:44,750
So in other words ACLs kind of your last resort.

9
00:00:45,390 --> 00:00:49,490
But there are some specific circumstances where you might want to use them.

10
00:00:49,530 --> 00:00:53,880
So before we get into that let's just look at what an ACL is first.

11
00:00:53,880 --> 00:01:00,020
So an ACL provides access control at the bucket and at the object level.

12
00:01:00,090 --> 00:01:03,290
So each bucket and each object has an ACL.

13
00:01:03,870 --> 00:01:10,860
So that's different to a policy in that you can apply a different ACL setting to each objects in each

14
00:01:10,860 --> 00:01:13,840
bucket.

15
00:01:13,860 --> 00:01:22,130
Now the settings that you can be applied to either an AWS account or one of these predefined groups so

16
00:01:22,250 --> 00:01:26,850
they don't actually go down to the user level as you do with policies.

17
00:01:27,120 --> 00:01:32,850
So you can't call out a specific IAM user and give him permissions through ACL.

18
00:01:33,180 --> 00:01:39,870
You actually grant permissions to an entire account or to one of these groups and these predefined groups

19
00:01:39,870 --> 00:01:41,370
are authenticated users.

20
00:01:41,370 --> 00:01:44,210
That means anyone who is an authenticated user.

21
00:01:44,220 --> 00:01:50,550
That means they have an account in AWS and they have an authentication token all users which

22
00:01:50,550 --> 00:01:52,230
means Uno pencil case it uses.

23
00:01:52,230 --> 00:01:55,070
So that means pretty much you're opening up to everyone in the world.

24
00:01:55,590 --> 00:02:02,760
And then the log Delivery Group which is a special group which is for writing server access logs.

25
00:02:03,240 --> 00:02:07,620
So the other thing that's different about an access control list is the types of permissions that you

26
00:02:07,620 --> 00:02:08,890
can grant.

27
00:02:08,940 --> 00:02:15,060
So let's have a look onto this table here and we can see that you have fewer options in the way that

28
00:02:15,060 --> 00:02:15,900
you can control.

29
00:02:15,900 --> 00:02:18,030
So the granularity is lower.

30
00:02:18,030 --> 00:02:24,660
So you have read rights read access control permissions and right access control permissions or rights

31
00:02:24,660 --> 00:02:29,130
ACP read ICP and then full control which is all of the above.

32
00:02:29,250 --> 00:02:32,760
And then these are granted onto a bucket or an object.

33
00:02:32,760 --> 00:02:36,600
And as you can see there's some slight differences between buckets and objects

34
00:02:39,520 --> 00:02:45,520
so let's head over to the console and we're going to have a look at the ACLs and what I'm going to

35
00:02:45,520 --> 00:02:54,290
do is I'm going to enable cross account access so I'm going to show how we can use an ACL to enable

36
00:02:54,290 --> 00:02:58,660
to use in another account to access our bucket.

37
00:02:58,660 --> 00:03:02,020
So a couple of things I want to draw your attention see firstly is this page.

38
00:03:02,020 --> 00:03:04,460
Access Control List overview.

39
00:03:04,600 --> 00:03:07,960
It's worth having a read of this tells you about grantees.

40
00:03:07,960 --> 00:03:14,230
So a grantee is an AWS account or one of those predefined s3 groups that we just spoke

41
00:03:14,230 --> 00:03:14,970
about.

42
00:03:15,340 --> 00:03:21,940
And there's a few limitations on how you can use email addresses to specify a grantee.

43
00:03:22,150 --> 00:03:25,700
Otherwise you typically use the canonical use right.

44
00:03:25,840 --> 00:03:27,160
And I'll show you what that looks like.

45
00:03:27,160 --> 00:03:34,610
Shortly it then gives you a bit more information on each of these groups the authenticated users or users

46
00:03:34,610 --> 00:03:36,260
in the delivery group.

47
00:03:36,260 --> 00:03:44,630
And then the permissions and how they're actually put into effect on a bucket or an object.

48
00:03:44,630 --> 00:03:46,990
So that's one that you might want to have a look over.

49
00:03:47,000 --> 00:03:52,700
I also want to draw your attention to this article and we use this before to create the cross account.

50
00:03:52,710 --> 00:03:57,500
IAM rules for programmatic and console access to actually bucket objects.

51
00:03:57,710 --> 00:04:00,410
And that was the exercise we did in the previous lab.

52
00:04:00,410 --> 00:04:06,890
We're now going to follow through this exercise which is using access control lists and IAM policies

53
00:04:06,890 --> 00:04:11,050
for programmatic access to every bucket objects.

54
00:04:11,050 --> 00:04:15,770
And if you head down the page a bit this is where the information is.

55
00:04:15,770 --> 00:04:22,520
Now I'm going to follow this loosely and you can come back and refer to this if you need to.

56
00:04:23,690 --> 00:04:30,260
So let's get back to the console and firstly I just want to show you where bucket ACLs are actually

57
00:04:30,260 --> 00:04:33,530
stored set against permissions.

58
00:04:33,680 --> 00:04:38,660
Here we have access control list and this here is the canonical ID that I mentioned.

59
00:04:38,660 --> 00:04:46,430
So by default the ACL has the canonical ID of the account so that the account actually owns this bucket

60
00:04:46,490 --> 00:04:48,080
and all objects within it.

61
00:04:48,080 --> 00:04:52,940
So it's the same for objects every object also has an ACL.

62
00:04:52,940 --> 00:04:56,420
So if we go to permissions we can say the same thing.

63
00:04:56,410 --> 00:05:01,640
Your AWS accounts and that account has full permissions.

64
00:05:01,810 --> 00:05:09,230
Let's just go back out to the bucket level and what we want to do in this exercise is we want to get

65
00:05:09,230 --> 00:05:12,590
a grant access for enough write up U.S. account.

66
00:05:12,620 --> 00:05:17,000
So firstly let's just head over to that other account and just want to show you what I've set up here

67
00:05:18,460 --> 00:05:24,420
so logged in as an administrative user I've given this user full S3 access.

68
00:05:24,430 --> 00:05:26,320
But remember this is a different account.

69
00:05:26,560 --> 00:05:31,750
So I haven't given him any access the only reason I've done this is just it's really a shortcut just

70
00:05:31,750 --> 00:05:36,980
to provide the user the API access to read and write.

71
00:05:37,060 --> 00:05:41,230
It doesn't grant any permissions on the destination bucket.

72
00:05:41,530 --> 00:05:43,480
And we'll see that shortly.

73
00:05:43,480 --> 00:05:48,510
So let's head over to a command line now and see if we can get our user Julian to access the est free

74
00:05:48,520 --> 00:05:51,280
bucket in the other account.

75
00:05:51,280 --> 00:05:57,250
So I need to set up the credentials on this computer for a command line access.

76
00:05:57,790 --> 00:06:04,450
So I'm going to do "aws configure" paste in the user's access key I'm going to come back to another

77
00:06:04,450 --> 00:06:13,990
screen and copy the secret I.D. and we could paste that in and then I'm gonna leave the default region

78
00:06:14,580 --> 00:06:20,980
before output and let's now try to access this bucket.

79
00:06:20,980 --> 00:06:26,200
Now remember the secret I.D. and the access key are definitely security sensitive.

80
00:06:26,200 --> 00:06:29,470
You don't want to share them normally but I'm going to delete them as soon as I finish the lab.

81
00:06:29,470 --> 00:06:30,990
So I'm not too fussed about that.

82
00:06:31,720 --> 00:06:40,900
So we're gonna do "aws s3 ls" and then we're going to put in DCT company bucket name and we get

83
00:06:40,900 --> 00:06:42,400
an access denied.

84
00:06:42,640 --> 00:06:45,180
So that's exactly what we expected.

85
00:06:45,190 --> 00:06:51,760
Let's go back now and we're going to configure access to the bucket.

86
00:06:51,760 --> 00:06:58,180
So firstly I need to grab that canonical I.D. So I'm actually in a bucket here on my offshore account

87
00:06:58,630 --> 00:07:07,130
and I'm going to go to the access control list and I can find the canonical I.D. for this account so

88
00:07:07,160 --> 00:07:07,500
copy.

89
00:07:07,500 --> 00:07:18,170
That someone clipboard and now I'm back in the ACL for DCT company and I can click Add account paste

90
00:07:18,170 --> 00:07:26,750
in the ID and I'm just going to provide full access to this account on this bucket so they can list

91
00:07:26,990 --> 00:07:29,750
objects, write objects, and read and write permissions

92
00:07:34,840 --> 00:07:37,480
so we've granted access at the bucket level.

93
00:07:37,480 --> 00:07:44,350
Now let's head back and see if we can list our bucket and then we go so we can now see the bucket and

94
00:07:44,350 --> 00:07:47,700
if we wanted to we'd be able to upload a file as well.

95
00:07:47,710 --> 00:07:56,460
So let's do a "aws s3 cp" and I'm going to copy a file called index.txt and put that into the

96
00:07:56,460 --> 00:07:56,880
bucket

97
00:08:02,250 --> 00:08:08,160
and now if we call ls again we should see we've got our index file so that's access control lists.

98
00:08:08,160 --> 00:08:14,250
Just remember that an ACL can be applied straight to a bucket and an object every bucket and every object

99
00:08:14,280 --> 00:08:21,750
has an ACL and you can also only specify at the account level or at the predefined group level.

