WEBVTT
1
00:00:02.150 --> 00:00:07.940
It's Reselect and Glacier Select are features that have been around for a couple of years now, but

2
00:00:07.940 --> 00:00:10.330
they do occasionally pop up on the exam.

3
00:00:10.910 --> 00:00:14.090
So I just want to do a quick ferry lecture on these ones.

4
00:00:14.870 --> 00:00:20.030
So starting at the top here, I've given you an example of how this works.

5
00:00:20.360 --> 00:00:26.480
And in this example, we have an Lamba function and on the right hand side, we've got an ice free bucket

6
00:00:26.840 --> 00:00:28.850
and in that bucket we have a zip file.

7
00:00:29.450 --> 00:00:35.240
Now, let's imagine that that zip file is very big or it could be many gigabytes in size.

8
00:00:36.080 --> 00:00:43.550
And within that zip file, there's lots of individual files, lots of spreadsheets or CSP or something

9
00:00:43.550 --> 00:00:43.910
like that.

10
00:00:43.910 --> 00:00:49.550
And you want to access a subset of the documents that are within the zip file.

11
00:00:50.120 --> 00:00:53.720
Now, normally we free because it's an object storage system.

12
00:00:54.290 --> 00:01:01.010
You would need to download the whole zip file and then you can extract the zip file and you can find

13
00:01:01.010 --> 00:01:04.460
the data that you need with S3 select.

14
00:01:04.460 --> 00:01:13.460
What you can do is use a sequel expression to look inside the zip file and then only extract the data

15
00:01:13.460 --> 00:01:14.690
that you actually need.

16
00:01:15.870 --> 00:01:19.050
So that can obviously reduce the amount of.

17
00:01:21.380 --> 00:01:27.410
Data that you need to download and it can also reduce the cost, because your if you're pulling this

18
00:01:27.410 --> 00:01:32.620
out of Adewusi, then that outbound data transfer fee is going to be reduced as well.

19
00:01:33.680 --> 00:01:39.410
So those are the advantages and I've just used Lamda here as an example, you know, you could run it

20
00:01:39.410 --> 00:01:40.520
in your application.

21
00:01:40.790 --> 00:01:45.920
You just need to be able to run some code in this case to run the school expression.

22
00:01:47.210 --> 00:01:54.350
So then we have a very similar scenario, but this is using Glacier, so in this case we have an archive

23
00:01:54.350 --> 00:01:57.350
on Glacier and the same situation.

24
00:01:57.350 --> 00:01:58.780
We've got a zip file maybe.

25
00:01:59.210 --> 00:02:05.270
And normally with Glacier, you would need to actually retrieve your archive and then you'd have to

26
00:02:05.270 --> 00:02:07.280
look in your archives to find your data.

27
00:02:07.850 --> 00:02:15.680
And what you can do with Glacier Select is you can actually query your cold data in your archive just

28
00:02:15.680 --> 00:02:18.230
the way that we've done up here with our S3 bucket.

29
00:02:18.620 --> 00:02:23.870
And then, for instance, you might be able to find a file in a zip file or just locate some specific

30
00:02:23.870 --> 00:02:28.270
data that you need and then only retrieve that particular data.

31
00:02:29.240 --> 00:02:35.540
So, again, that can have some good advantages in terms of being able to query your code data in Glacier

32
00:02:35.960 --> 00:02:37.940
and that can also reduce your costs.

