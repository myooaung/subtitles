1
00:00:05,310 --> 00:00:11,070
In this exam crime, I'm going to cover DNS caching and performance optimization, starting with Root

2
00:00:11,070 --> 00:00:11,730
53.

3
00:00:12,090 --> 00:00:18,060
Brown, 53, gives you domain name registry, DNS resolution and health checking of resources, and

4
00:00:18,060 --> 00:00:20,610
it's located along side edge locations.

5
00:00:21,480 --> 00:00:27,270
53 becomes the authoritative DNS server for registered domains and will create a public hosted zone

6
00:00:27,270 --> 00:00:33,300
for you with private DNS that lets you have an authoritative DNS server within your sees.

7
00:00:33,540 --> 00:00:40,110
Without exposing or DNS records, you can transfer existing domains to Route 53 if the top level domain

8
00:00:40,110 --> 00:00:40,920
is supported.

9
00:00:41,580 --> 00:00:48,000
You can also transfer domain from Route 50 free to another registrar, but you have to contact IWC support.

10
00:00:48,210 --> 00:00:53,820
You can transfer a domain to another account in IWC, but that doesn't migrate the zone by default.

11
00:00:54,420 --> 00:01:00,690
You can also have a domain registered in one IWC accounts and the hosted zone in another IWC accounts.

12
00:01:00,990 --> 00:01:04,350
So a hosted zone is a collection of records for a specified domain.

13
00:01:04,800 --> 00:01:10,950
There are two types public hosted zone for routing traffic on the internet and a private hosted zone

14
00:01:10,950 --> 00:01:14,730
for your VPC, which helps to route traffic within your VPC.

15
00:01:15,000 --> 00:01:18,670
Now, remember that routing in this case is DNS resolutions.

16
00:01:18,690 --> 00:01:23,930
What we're talking about is finding out the address of a destination so we can connect to it.

17
00:01:23,930 --> 00:01:27,150
It's not IP routing the private hosted zones.

18
00:01:27,150 --> 00:01:33,420
You must set the following BPC settings to true enable DNS hostname and enable DNS support.

19
00:01:33,600 --> 00:01:38,700
With health checks, these check the instances health by connecting to it, and you can point health

20
00:01:38,700 --> 00:01:43,440
checks on endpoints, the status of other health checks and the status of a cloud watch.

21
00:01:43,440 --> 00:01:47,130
Alarm endpoints can be IP addresses or domain names.

22
00:01:47,340 --> 00:01:52,860
There are two types of record sea name and ideas which come up in exam questions a lot, so it's useful

23
00:01:52,860 --> 00:01:54,060
to understand the difference.

24
00:01:54,180 --> 00:01:56,850
We've seen a Route 53 charges for queries.

25
00:01:57,150 --> 00:02:02,370
You can't create a name record at the top node of DNS namespace, and that's the key exam set there.

26
00:02:02,670 --> 00:02:07,620
So if you have the domain namespace example dot com, you can't create a C name, for example dot com,

27
00:02:07,860 --> 00:02:12,120
but you can, for example, dot com because that's a subdomain.

28
00:02:12,420 --> 00:02:13,740
So not the zone apacs.

29
00:02:14,280 --> 00:02:19,010
A C name can point to any DNS record hosted anywhere with aliases.

30
00:02:19,020 --> 00:02:22,440
Ralph, 53, doesn't charge for queries to AWG resources.

31
00:02:22,860 --> 00:02:28,380
You can create an alias record at his own apex, which is what you can't do with C names as a key difference.

32
00:02:28,710 --> 00:02:35,840
An alias record can only point to cloud front Elastic Beanstalk LP S3 buckets configured as static websites.

33
00:02:36,100 --> 00:02:38,640
Also another record in the same hosted zone.

34
00:02:38,820 --> 00:02:41,940
Now he went free routing policies in quite a bit of detail in the course.

35
00:02:41,940 --> 00:02:45,630
Remember, Simple is just a name to an IP address.

36
00:02:45,900 --> 00:02:52,230
Failover is where you can fail over to a novel resource when your primary resource goes down and that's

37
00:02:52,230 --> 00:02:53,310
based on health checks.

38
00:02:53,850 --> 00:03:00,480
Geo location is routing you to the closest geographic region, and proximity gives you a bit more control

39
00:03:00,690 --> 00:03:04,530
about routing to the closest region within a certain geographic area.

40
00:03:04,920 --> 00:03:09,330
Licensee is about reducing latency, directing you to the closest resource.

41
00:03:09,750 --> 00:03:15,060
Multi Value Answer returns several IP addresses, so it's almost like a load balancing function, and

42
00:03:15,360 --> 00:03:19,800
it uses relative weights like 80 percent to one record and twenty to another.

43
00:03:20,280 --> 00:03:24,960
Amazon cloud run is the seed again, as we know for caching content around the world.

44
00:03:25,350 --> 00:03:32,040
You can define a maximum time to live and a default TCL for records, and those are defined at the behavior

45
00:03:32,040 --> 00:03:33,240
level and cloud front.

46
00:03:33,930 --> 00:03:38,820
This can be used to define different skills for different file types, so you could have a different

47
00:03:38,820 --> 00:03:41,400
time to lift your pages versus your JPEGs.

48
00:03:41,580 --> 00:03:45,300
After exploration, Cloud Front checks the origin for any new requests.

49
00:03:45,510 --> 00:03:50,700
Headers can be used to control the cache, so you've got the cache control max age in seconds, and

50
00:03:50,700 --> 00:03:57,240
that specifies how long before cloud fun gets the objects again from the origin server and then expires,

51
00:03:57,240 --> 00:04:00,180
which specifies an expiration time and date.

52
00:04:00,540 --> 00:04:02,910
You can also cache based on request headers.

53
00:04:03,240 --> 00:04:06,120
You can configure cloud funds with forward headers in the viewer.

54
00:04:06,120 --> 00:04:13,200
Request to the Origin Cloud run can then cache multiple versions of an object based on the values in

55
00:04:13,200 --> 00:04:17,760
one or more request settings, and that's controlled in a behavior to do one of the following forward

56
00:04:17,760 --> 00:04:23,100
all headers to your origin, which means the objects are not cached for the whitelist of headers that

57
00:04:23,100 --> 00:04:29,040
you specify or forward only the default headers, and then it doesn't cache the objects based on values.

58
00:04:29,220 --> 00:04:33,510
In the request, headers then got signed, URLs and cookies was signed your URLs.

59
00:04:33,840 --> 00:04:36,540
These provide more control over access to content.

60
00:04:36,960 --> 00:04:42,540
You can specify the beginning and expiration date and time and IP addresses or ranges of IP addresses

61
00:04:42,540 --> 00:04:46,380
for users with sign cookies that similar to signed URLs.

62
00:04:46,800 --> 00:04:51,840
And you can use these when you don't want to change URLs, and they can also be used when you want to

63
00:04:51,840 --> 00:04:55,260
provide access to multiple restricted files as a key difference.

64
00:04:55,620 --> 00:05:01,170
A signed your URL is for a single object, whereas if you want multiple objects to be included, then

65
00:05:01,170 --> 00:05:02,370
you should use sign cookies.

66
00:05:02,820 --> 00:05:04,320
We then have lambda at edge.

67
00:05:04,820 --> 00:05:09,890
This is where you run Node.js and Python lambda functions to customize the content that cloud front

68
00:05:09,890 --> 00:05:14,720
delivers, and it executes the functions closer to the view of a better performance.

69
00:05:14,900 --> 00:05:19,790
You can run Landore edge at the following points off the cloud front receives a request from a viewer

70
00:05:19,790 --> 00:05:23,210
that's called a viewer request before cloud run forwards.

71
00:05:23,210 --> 00:05:28,860
The request to the origin that's an origin request off the cloud front receives the response from the

72
00:05:28,860 --> 00:05:30,350
Origin Origin response.

73
00:05:30,770 --> 00:05:35,720
And lastly, before cloud forwards, the response to the viewer and that's called the viewer response.

74
00:05:36,020 --> 00:05:37,280
And that's it for this example.

