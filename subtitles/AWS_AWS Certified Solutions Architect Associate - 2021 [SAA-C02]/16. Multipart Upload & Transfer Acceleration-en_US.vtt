WEBVTT
1
00:00:05.290 --> 00:00:10.570
Hi, guys, and this lesson I'm going to teach you about two different features of free ones called

2
00:00:10.750 --> 00:00:17.440
multiple upload, and the other is called transfer acceleration, and both of these are around uploading

3
00:00:17.440 --> 00:00:18.850
objects to as free.

4
00:00:18.880 --> 00:00:21.070
So how do we do it most efficiently?

5
00:00:21.760 --> 00:00:24.040
So let's start with multiple upload.

6
00:00:24.430 --> 00:00:30.430
This uploads objects in parts independently, in parallel and in any order.

7
00:00:30.760 --> 00:00:37.150
So in other words, you can split your files, your big files into multiple parts, and then you can

8
00:00:37.150 --> 00:00:40.000
upload them in parallel for greater efficiency.

9
00:00:40.660 --> 00:00:47.380
This is performed using the S3 multiple upload API, and it's recommended for any objects that exceed

10
00:00:47.560 --> 00:00:49.480
100 megabytes in size.

11
00:00:50.020 --> 00:00:57.220
It can be used for any objects from five megabytes right up to five terabytes, and it must be used

12
00:00:57.430 --> 00:01:00.940
for any objects that are larger than five gigabytes.

13
00:01:01.420 --> 00:01:07.000
Now, you don't need to go through the implementation for this exam, but it's just useful to understand

14
00:01:07.240 --> 00:01:10.300
that this exists, how it works and what the advantages are.

15
00:01:10.690 --> 00:01:14.120
So the key is it's about breaking your big files into parts.

16
00:01:14.500 --> 00:01:19.450
Remember that for anything over 100 megabytes, it's recommended to do it this way.

17
00:01:19.690 --> 00:01:26.290
And the key benefit is about optimization of throughput because you're sending your parts in parallel

18
00:01:26.680 --> 00:01:32.770
also means that if you have your application written correctly, you can recover from failed parts quite

19
00:01:32.770 --> 00:01:34.480
easily as well and retransmit them.

20
00:01:35.110 --> 00:01:39.090
So next, we have a free transfer acceleration now.

21
00:01:39.220 --> 00:01:45.580
Transfer acceleration is about using the Amazon Cloud Front Edge locations to improve the performance

22
00:01:45.580 --> 00:01:49.090
of transfers from a client to an ice free bucket.

23
00:01:49.390 --> 00:01:52.900
Now, cloud front is a topic that we're going to cover a bit later on in the course.

24
00:01:53.260 --> 00:01:55.630
It's a content delivery network.

25
00:01:55.900 --> 00:02:02.020
And what that means is it tries to get content closer to users by caching it in locations around the

26
00:02:02.020 --> 00:02:05.500
world, and those locations are known as edge locations.

27
00:02:06.160 --> 00:02:12.430
So Cloud Front has a network as soon as you get to the edge location from wherever you are.

28
00:02:12.430 --> 00:02:19.390
So hopefully wherever you are in the world, there should be an edge location somewhere relatively close.

29
00:02:19.720 --> 00:02:24.700
So the licensee isn't too high to get to the edge location from the edge location.

30
00:02:24.700 --> 00:02:30.490
The data traverses the IWC global network, which has great throughput and low latency.

31
00:02:30.880 --> 00:02:33.010
So performance should be better.

32
00:02:33.430 --> 00:02:36.370
Now it's not guaranteed, it's going to be better, but it might be.

33
00:02:36.730 --> 00:02:41.680
So let's say you've got some users somewhere in the world and they're a long way away from where your

34
00:02:41.680 --> 00:02:43.000
actual bucket is.

35
00:02:43.300 --> 00:02:49.330
Your bucket might be a UX one, and maybe your clients are in Australia trying to upload some large

36
00:02:49.330 --> 00:02:53.440
files if they make the upload using transfer acceleration.

37
00:02:53.770 --> 00:02:59.350
It's going to be uploaded to an edge location nearby and then traverse the global network, which should

38
00:02:59.350 --> 00:03:00.010
be faster.

39
00:03:00.610 --> 00:03:02.470
So let's say it dies grammatically.

40
00:03:02.620 --> 00:03:03.490
We've got a bucket.

41
00:03:03.850 --> 00:03:07.720
We've got an application and we've got an edge location somewhere in the world.

42
00:03:07.990 --> 00:03:12.160
In our example, that might be in Australia, but the bucket is in US east.

43
00:03:12.700 --> 00:03:20.660
So the application uploads the file to the edge location, and from there it traverses the global network.

44
00:03:21.430 --> 00:03:24.700
Now, with transfer acceleration, the endpoint is slightly different.

45
00:03:25.030 --> 00:03:28.270
So as you can see, it's got the S3 dash accelerating it.

46
00:03:28.580 --> 00:03:34.540
Eight of us will only charge you for using transfer acceleration if there's a performance improvement.

47
00:03:34.930 --> 00:03:41.980
So you do get charged extra, but only if you've actually got an advantage by using transfer acceleration.

48
00:03:42.400 --> 00:03:45.310
You enable transfer acceleration at the bucket level.

49
00:03:45.910 --> 00:03:52.120
Watch out for exam questions where a company is looking to improve the speed of uploading from a very

50
00:03:52.120 --> 00:03:55.990
remote location somewhere far away from the bucket in that case.

51
00:03:56.200 --> 00:03:59.650
Uploads can be accelerated using transfer acceleration.

