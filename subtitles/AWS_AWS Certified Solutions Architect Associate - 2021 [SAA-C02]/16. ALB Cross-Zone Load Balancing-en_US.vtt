WEBVTT
1
00:00:01.840 --> 00:00:07.140
Hi guys so this is the last lap for cross own load balancing we're carrying on from the lab perform

2
00:00:07.180 --> 00:00:11.810
we should have our free instances running across two Availability Zones.

3
00:00:12.010 --> 00:00:16.140
Now what I'm gonna do is create a application load balancer.

4
00:00:16.180 --> 00:00:21.190
Now we did have a target group leftover from before but I just wanted to make sure you realize that

5
00:00:21.430 --> 00:00:26.470
when the protocol is TGP you won't be able to use it with an application load balancer.

6
00:00:26.530 --> 00:00:31.460
So we're going to delete our target group and we're going to go to create a new low balancer.

7
00:00:31.510 --> 00:00:33.730
I'm going to call this my Albee.

8
00:00:33.730 --> 00:00:35.370
It's going to be Internet facing.

9
00:00:35.530 --> 00:00:42.420
We're gonna have HDTV for the low balance of protocol and I need to select the two Availability Zones

10
00:00:42.420 --> 00:00:44.460
where my incidences are located.

11
00:00:44.470 --> 00:00:46.280
Can you use web access security group.

12
00:00:46.290 --> 00:00:51.840
And I'm going to create another target group called CGI one but this time it's gonna be using the protocol

13
00:00:51.840 --> 00:00:58.860
as hasty T.P. gonna just change the healthy threshold to two and let's go and register all three of

14
00:00:58.860 --> 00:01:01.950
our targets and we create our load balancer.

15
00:01:01.950 --> 00:01:06.480
So that would take a few minutes and then we're going to have a look at how cross own load balancing

16
00:01:06.480 --> 00:01:09.430
works with an application load balancer.

17
00:01:09.450 --> 00:01:15.980
Now you may remember from a slide from earlier on that we've an application load balancer the cross

18
00:01:15.980 --> 00:01:21.090
own load balancing is enabled in all cases and you don't have any option you can't disable it.

19
00:01:21.090 --> 00:01:24.000
So there's really only one behavior to look at in this lab.

20
00:01:24.030 --> 00:01:30.390
It's been a few minutes now and our LP is active so let's copy the DNS name.

21
00:01:30.630 --> 00:01:40.020
Open new tab and straight away we get to other and then census and then ever and then Celina and then

22
00:01:41.860 --> 00:01:48.430
we seem to be now cycling through equally between each of the instances.

23
00:01:48.500 --> 00:01:50.920
So that's exactly what I expected to see.

24
00:01:50.930 --> 00:01:58.800
So this is the cross own load balancing working with an application load balancer.

25
00:01:58.830 --> 00:02:04.050
Now if we just go back to this diagram this is what we're looking at with an application load balancer

26
00:02:05.530 --> 00:02:08.180
cross so no balancing is always enabled.

27
00:02:08.180 --> 00:02:13.640
So what we're seeing is that 33 percent of the traffic is going to each of these free instances.

28
00:02:13.670 --> 00:02:15.420
So that's all we need to cover in this lab.

29
00:02:15.420 --> 00:02:18.590
Guys just remember the information in this table.

30
00:02:18.680 --> 00:02:25.760
So of an I'll be cross I know balancing is always enabled with an MLP it's disabled but it can be enabled

31
00:02:25.820 --> 00:02:31.070
with a classic load balancer it's enabled if you create the low balance of through the console it's

32
00:02:31.070 --> 00:02:37.620
disabled if you create the low balance of through the CLIA or API and you can enable or disable it manually.

33
00:02:37.670 --> 00:02:39.810
So that's s across line load balancing guys.

34
00:02:39.920 --> 00:02:45.320
Don't forget to delete your application load balancer and also terminate all three of your instances.

