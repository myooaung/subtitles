WEBVTT
1
00:00:05.420 --> 00:00:10.940
We've talked a little bit before about public and private subnets now when we have private subnets,

2
00:00:10.940 --> 00:00:14.120
we might want to deploy something called a bastion host.

3
00:00:14.390 --> 00:00:19.160
And this helps us to connect to the instances in our private subnets.

4
00:00:19.160 --> 00:00:24.230
And in this lesson, we're going to go into a bit more detail on public versus private subnets and how

5
00:00:24.230 --> 00:00:25.790
we might use bastion hosts.

6
00:00:26.180 --> 00:00:29.750
So we have a region and within that region, we've created a VPC.

7
00:00:30.350 --> 00:00:33.890
We then have an availability zone and we have a public subnet.

8
00:00:34.670 --> 00:00:41.900
Now the public subnet has a round table associated with it, and that round table will have a route

9
00:00:42.020 --> 00:00:42.890
to the internet.

10
00:00:43.400 --> 00:00:45.350
So let's just have a look at the root table here.

11
00:00:45.980 --> 00:00:48.960
The first address is the cyber block.

12
00:00:48.980 --> 00:00:52.160
So the overall address block for the VPC.

13
00:00:52.580 --> 00:00:59.600
So what that means is any address block in the VPC is going to be within this range of addresses.

14
00:01:00.170 --> 00:01:05.810
Now, if you're sending a network communication and it's within this address block, what's going to

15
00:01:05.810 --> 00:01:08.750
happen is it's going to be routed locally.

16
00:01:08.840 --> 00:01:15.350
So that means it's going to use the VPC router, which routes within your VPC that will go over Seider

17
00:01:15.350 --> 00:01:18.770
address blocks and how to create them later on in the course.

18
00:01:19.100 --> 00:01:27.680
The second entry in the round table essentially says any other address, so the 0.0.0.0 slash zero means

19
00:01:27.980 --> 00:01:28.940
anything else.

20
00:01:29.300 --> 00:01:34.550
So essentially anything that's not within this range will match this rule.

21
00:01:34.910 --> 00:01:37.760
And this rule says go to an internet gateway.

22
00:01:38.030 --> 00:01:40.610
So the internet gateways the way to the outside world.

23
00:01:40.910 --> 00:01:47.330
And it basically means that if you're not sending a network communication within the or address block

24
00:01:47.330 --> 00:01:50.270
for the VPC, then it should be rooted out to the internet.

25
00:01:51.330 --> 00:01:57.810
Now next, we have our private subnet, a private subnet, has a separate root table, and the key difference

26
00:01:57.810 --> 00:02:01.100
here is it doesn't have a route to the internet.

27
00:02:01.110 --> 00:02:04.650
You cannot attach an internet gateway to a private subnet.

28
00:02:05.040 --> 00:02:06.630
Now what is the actual difference?

29
00:02:06.660 --> 00:02:10.010
It's really just configuration with the public subnet.

30
00:02:10.020 --> 00:02:15.690
We've configured the public subnet to assign public IP addresses to the instances.

31
00:02:16.140 --> 00:02:20.730
So every instance you launch by default is going to have a public IP address.

32
00:02:21.180 --> 00:02:26.430
Now, in a private subnet, we simply don't configure that option, and it's actually the default when

33
00:02:26.430 --> 00:02:27.330
you create a subnet.

34
00:02:27.600 --> 00:02:33.270
So that means we're not going to have public IP addresses assigned to the instances in the private subnet.

35
00:02:33.900 --> 00:02:38.730
And therefore, without having a public address, they are unable to use an internet gateway.

36
00:02:39.210 --> 00:02:44.220
So even if you had an internet gateway specified in the round table, it wouldn't work.

37
00:02:44.610 --> 00:02:50.130
So the two key attributes here to make this a private subnet are that we're not assigning public IP

38
00:02:50.130 --> 00:02:51.540
addresses to our instances.

39
00:02:51.840 --> 00:02:57.630
And we have a round table associated that doesn't have an internet gateway attached to it.

40
00:02:57.900 --> 00:02:59.790
So therefore our instance are a private.

41
00:02:59.790 --> 00:03:05.160
They cannot communicate to the outside world and the outside world cannot communicate to the private

42
00:03:05.160 --> 00:03:05.580
subnet.

43
00:03:06.390 --> 00:03:12.540
But we've still got the entry routing within the VPC, which means communication between public and

44
00:03:12.540 --> 00:03:14.700
private subnets can still occur.

45
00:03:15.150 --> 00:03:20.130
So let's say we launch a couple of instances one in our public subnet and one in our private subnet.

46
00:03:20.400 --> 00:03:23.310
Now, of course, these subnets could be in different availability zones.

47
00:03:23.310 --> 00:03:24.120
That doesn't matter.

48
00:03:24.120 --> 00:03:25.980
That doesn't change this configuration.

49
00:03:26.310 --> 00:03:28.530
The availability zone isn't important here.

50
00:03:29.100 --> 00:03:34.260
What's important is we have one instance in the public subnet and one in a private subnet, and we want

51
00:03:34.260 --> 00:03:37.350
to be able to connect to all instance in our private subnet.

52
00:03:37.860 --> 00:03:44.460
We have an internet gateway and we want to be able to connect from a computer in the outside world to

53
00:03:44.760 --> 00:03:46.770
our instance in our private subnet.

54
00:03:47.160 --> 00:03:48.270
Now how are we going to do that?

55
00:03:48.300 --> 00:03:53.610
Well, actually, we can't, because remember, there's no way that the private subnet instances can

56
00:03:53.610 --> 00:03:55.160
communicate with an internet gateway.

57
00:03:55.170 --> 00:03:58.380
They don't have a route and they don't have a public IP address.

58
00:03:59.220 --> 00:04:03.690
So what we're going to do here is we're going to connect to our instance in our public subnet.

59
00:04:04.020 --> 00:04:09.810
The instance does have a public IP address, and it's in a subnet that has a round table associated

60
00:04:09.810 --> 00:04:15.210
with it, with a route to an internet gateway, which allows bidirectional communication to and from

61
00:04:15.210 --> 00:04:15.750
the incident.

62
00:04:16.560 --> 00:04:22.290
So what we can do now, now that we've connected to this issue to instance using the secure shell,

63
00:04:22.290 --> 00:04:29.790
for example, or IDP, if it's a Windows instance, we can then jump across to our private subnet instance

64
00:04:30.090 --> 00:04:31.980
using private IP addresses.

65
00:04:32.460 --> 00:04:38.820
So this instance and this instance both have a private IP within this range, which means there's already

66
00:04:38.820 --> 00:04:45.900
a rule or an entry in the root table that allows them to communicate using the local target, which

67
00:04:45.900 --> 00:04:48.720
is the VPC router, which you don't see depicted here.

68
00:04:48.720 --> 00:04:49.530
But it exists.

69
00:04:49.830 --> 00:04:55.890
So this is where we're using this instance in the public subnet as something that we call a bastion

70
00:04:55.890 --> 00:05:00.480
host or a jump host, and that simply means that we're connecting to this instance.

71
00:05:00.840 --> 00:05:04.440
And then from here, we're connecting to our instance in a private subnet.

72
00:05:04.740 --> 00:05:10.380
So now, you know a lot more about private and public subnets and also how to use bastion hosts.

73
00:05:10.680 --> 00:05:16.350
Now what we'll do in the next lesson is we're going to do a hands on and we're actually going to configure

74
00:05:16.530 --> 00:05:21.780
an instance in a public subnet as a bastion host and connect to an instance in a private subnet.

