WEBVTT
1
00:00:02.580 --> 00:00:03.020
Hi guys.

2
00:00:03.030 --> 00:00:08.270
This is a fairy lesson in which I just want to talk to you about a multi tier web architecture.

3
00:00:08.460 --> 00:00:14.590
And just to make sure that you are familiar and fully understand how this all works so we're not going

4
00:00:14.590 --> 00:00:16.290
to actually build something out like this.

5
00:00:16.290 --> 00:00:20.310
And the reason being is that we'd need some application logic and that's a bit beyond the scope of this

6
00:00:20.310 --> 00:00:22.850
course so it's not so easy to set something like this up.

7
00:00:23.340 --> 00:00:27.320
But what I do want to do is just show you a architecture.

8
00:00:27.420 --> 00:00:35.070
Make sure you understand that and especially the security group configuration that applies to this design.

9
00:00:35.070 --> 00:00:41.310
So what we have here is we have public subnets and we have a web front end in here so we've got an auto

10
00:00:41.310 --> 00:00:43.270
scanning group with four instances.

11
00:00:43.290 --> 00:00:47.830
We then have an application layer which is in private subnets.

12
00:00:47.880 --> 00:00:49.280
So this is quite typical.

13
00:00:49.290 --> 00:00:54.270
You might have your web front end here receiving traffic from the Internet.

14
00:00:54.270 --> 00:01:00.470
Then it forwards that traffic to an application layer where some application logic processes that data.

15
00:01:00.510 --> 00:01:04.830
Now typically you then have some other layer if it's going to go straight to storage or it's going to

16
00:01:04.830 --> 00:01:06.260
go into a database.

17
00:01:06.330 --> 00:01:10.920
So there'd be another layer and you'll be able to apply the same logic and concepts to that layer as

18
00:01:10.920 --> 00:01:13.770
we do to the two layers that you can see here.

19
00:01:13.800 --> 00:01:20.050
So the way this is set up is you have an Internet facing load balancer an internal load balancer.

20
00:01:20.070 --> 00:01:25.380
Now the Internet facing load balancer distributes traffic to the auto scanning group in the web front

21
00:01:25.380 --> 00:01:33.030
end the web front end then connects to the internal Albee and the internal LP distributes the traffic

22
00:01:33.030 --> 00:01:39.000
to the instances in the private subnet so you understand all these concepts we've been through this

23
00:01:39.000 --> 00:01:39.680
before.

24
00:01:39.690 --> 00:01:43.900
If anything the most important thing about this lesson is to understand the security groups.

25
00:01:43.920 --> 00:01:46.280
So this is the security group configuration.

26
00:01:46.360 --> 00:01:49.470
Now it's very similar to what you saw in the previous lab.

27
00:01:49.500 --> 00:01:54.730
What we have for the Internet facing Alby is a security group called Public OLB.

28
00:01:54.750 --> 00:02:00.480
It's receiving traffic imports 80 for web traffic and it's got a rule that says that it can only send

29
00:02:00.510 --> 00:02:02.260
outbound traffic to the public.

30
00:02:02.280 --> 00:02:06.560
Easy to security group and that's the Web front end security group.

31
00:02:06.660 --> 00:02:10.760
That security group is only allowed to receive traffic from the ALP.

32
00:02:10.830 --> 00:02:14.420
So that's secure because it means that no one else can talk to this.

33
00:02:14.430 --> 00:02:19.410
The only inbound rule that has allows port 80 from the ALP.

34
00:02:19.500 --> 00:02:24.430
It then has an outbound rule that forwards port 80 to the private Alby.

35
00:02:24.480 --> 00:02:26.430
Don't get hung up on the ports.

36
00:02:26.430 --> 00:02:28.660
You probably wouldn't send it support ACA again.

37
00:02:28.740 --> 00:02:33.660
You'd send it to some kind of application port could be one of many depending on what type of application

38
00:02:33.660 --> 00:02:35.760
you're running but forget about the ports.

39
00:02:35.760 --> 00:02:37.740
Just think about the process here.

40
00:02:37.800 --> 00:02:45.030
So the private Alby security group is this security group here where your internal Alby resides and

41
00:02:45.120 --> 00:02:51.840
it will only receive traffic from the web front hence it's secured so that it's only allowed to receive

42
00:02:51.840 --> 00:02:55.550
traffic on whatever your application port is might not be port 80.

43
00:02:55.590 --> 00:02:58.520
From the web front end and then in turn.

44
00:02:58.590 --> 00:03:04.340
It's only allowed to send traffic outbound to the private easy to security group here.

45
00:03:04.410 --> 00:03:11.000
And of course the private easy 2 Security Group is only allowing inbound traffic from the internal Alby.

46
00:03:11.070 --> 00:03:12.860
So you understand how this works.

47
00:03:12.870 --> 00:03:19.380
And if you had a database layer you would then apply the same security group pattern to your database

48
00:03:19.380 --> 00:03:25.830
layer so your application layer would then only be allowed to send traffic to the port of your database

49
00:03:26.340 --> 00:03:31.050
and your database would have an inbound rule that only allows traffic from the application layer.

50
00:03:31.050 --> 00:03:33.110
So that's just how it all works.

51
00:03:33.120 --> 00:03:39.700
So going back to the diagram the Internet facing load balancer only allows port 80 inbound or maybe

52
00:03:39.700 --> 00:03:41.040
four for free as well.

53
00:03:41.040 --> 00:03:47.190
It then has a rule that only allows outbound traffic to the security group in which the web front end

54
00:03:47.190 --> 00:03:54.510
resides the web front end has a security group that only allows outbound access to the internal Alby

55
00:03:54.660 --> 00:04:00.870
and the internal Albee has a rule that only allows inbound from the web front end and outbound to the

56
00:04:00.870 --> 00:04:07.800
private easy to instances security group and they only allow traffic inbound from the internal ALP.

57
00:04:07.800 --> 00:04:12.420
Now management is another matter you might need port twenty to you might need port 80 outbound.

58
00:04:12.420 --> 00:04:15.380
You might be able to do that three separate security groups.

59
00:04:15.510 --> 00:04:18.140
That's a secure configuration than putting them into these.

60
00:04:18.150 --> 00:04:24.960
So you might have separate security groups for management so that you can assess each into your instances.

61
00:04:24.960 --> 00:04:30.180
And so that you can get out to the Internet and actually access updates and binaries and so on.

62
00:04:30.180 --> 00:04:35.970
So that's a multi tier web architecture and hopefully you understand now the best practice for applying

63
00:04:35.970 --> 00:04:36.870
security groups.

