WEBVTT
1
00:00:05.370 --> 00:00:08.870
Hi, guys, and welcome to the exam cram for Amazon EC2.

2
00:00:09.390 --> 00:00:15.150
So let's get started with EC2, you launch virtual server instances on the IWC cloud.

3
00:00:15.630 --> 00:00:19.560
Each virtual server is known as an instance with easy to you.

4
00:00:19.560 --> 00:00:26.760
Get full control at the operating system, layer keypads and then use to securely connect to instances.

5
00:00:27.240 --> 00:00:34.260
And the storage is even Amazon EBS, which is persistent storage, or Instant Store, which is non persistent

6
00:00:34.260 --> 00:00:34.830
storage.

7
00:00:35.430 --> 00:00:42.570
An Amazon machine image provides the information required to launch an instance, and an army includes

8
00:00:42.870 --> 00:00:49.200
a template for the volume of the instance, launch permissions and a block device mapping, which specifies

9
00:00:49.200 --> 00:00:51.420
which volume to attach to the instance.

10
00:00:52.020 --> 00:00:58.410
Armies are regional, so you can only launch an ally from the region in which it is created, but you

11
00:00:58.410 --> 00:01:04.380
can copy armies to other regions using the console command line or the API instance.

12
00:01:04.380 --> 00:01:10.620
Metadata is the data about your instance that you can use to configure or manage the running instance.

13
00:01:11.070 --> 00:01:17.370
Whereas user data is data that gets supplied in the form of a script and that runs at system startup

14
00:01:17.970 --> 00:01:18.480
instance.

15
00:01:18.480 --> 00:01:23.970
Metadata is available at this URL and user data is available at this URL.

16
00:01:24.450 --> 00:01:25.770
I haven't seen those coming up.

17
00:01:25.770 --> 00:01:28.230
An exam questions any more, not for quite a long time.

18
00:01:28.470 --> 00:01:32.170
So you probably don't need to remember these by heart for the exam, but it's still useful to know.

19
00:01:32.970 --> 00:01:39.420
Benefits of Amazon Easy to include elastic computing You can easily launch hundreds to thousands of

20
00:01:39.420 --> 00:01:41.340
easy to instances within minutes.

21
00:01:41.910 --> 00:01:46.020
You get complete control with full root and administrative access.

22
00:01:46.440 --> 00:01:47.370
They're flexible.

23
00:01:47.380 --> 00:01:52.200
You have a choice of instance types, operating system, software packages, the type of storage you're

24
00:01:52.200 --> 00:01:53.550
adding, and so on and so forth.

25
00:01:54.360 --> 00:02:00.480
They're reliable, easy to offers, very high levels of availability, and instances can be rapidly

26
00:02:00.480 --> 00:02:02.400
commissioned and replace where needed.

27
00:02:03.510 --> 00:02:09.360
It's secure, it's fully integrated with Amazon, VPC and the security features of IWC.

28
00:02:09.660 --> 00:02:15.510
It's also relatively inexpensive, so it can be very low cost and you only pay for what you use.

29
00:02:16.460 --> 00:02:21.200
Now, remember, the different types of IP address we've got the public IP address, the private and

30
00:02:21.200 --> 00:02:21.950
the elastic.

31
00:02:22.340 --> 00:02:25.400
The key things about the public address are it gets lost.

32
00:02:25.400 --> 00:02:28.580
When you stop your instance, you'll get a new one the next time you start it.

33
00:02:29.030 --> 00:02:32.090
They used in public subnets and you don't get charged for them.

34
00:02:33.910 --> 00:02:38.710
We've private IP addresses, they are retained when the instance is stopped and you use those in all

35
00:02:38.710 --> 00:02:39.660
types of subnets.

36
00:02:40.220 --> 00:02:41.420
We have an elastic IP.

37
00:02:41.440 --> 00:02:47.590
This is another public IP address, but it is actually attached to your instance such that it's still

38
00:02:47.590 --> 00:02:50.140
going to be there when you stop the instance and started again.

39
00:02:50.680 --> 00:02:57.100
And you can move these around so you can move your elastic IP between different instances or is moving

40
00:02:57.100 --> 00:02:58.330
onto placement groups.

41
00:02:58.330 --> 00:03:03.700
The Cluster Placement Group is designed to keep instances very close for low latency.

42
00:03:03.970 --> 00:03:10.060
Think about high performance computing, tightly coupled applications where you've got nodes, no communication

43
00:03:10.060 --> 00:03:11.890
and you need extremely low latency.

44
00:03:12.640 --> 00:03:19.660
Partition will spread your instances across logical partitions so that the groups in one partition don't

45
00:03:19.660 --> 00:03:23.620
share the same underlying hardware with other groups of instances.

46
00:03:23.860 --> 00:03:25.960
So you can use this for high availability.

47
00:03:26.500 --> 00:03:29.920
It's usually used with distributed and replicated workloads.

48
00:03:30.190 --> 00:03:32.950
For example, Hadoop, Cassandra and Kafka.

49
00:03:33.490 --> 00:03:35.650
Lastly, we have the Spread Placement Group.

50
00:03:35.920 --> 00:03:41.950
This will place a small group of instances across distinct underlying hardware to reduce any kind of

51
00:03:41.950 --> 00:03:43.060
correlated failures.

52
00:03:43.240 --> 00:03:48.610
So all instances are on different hardware, not instances versus not gateways.

53
00:03:48.940 --> 00:03:51.220
So remember the key differences between these?

54
00:03:51.610 --> 00:03:53.830
Then that instance is fully managed by you.

55
00:03:53.830 --> 00:03:59.740
It's really the old way of doing things that gateway is likely to be the best solution in most use cases.

56
00:03:59.950 --> 00:04:01.960
It's fully managed by IWC.

57
00:04:02.260 --> 00:04:04.420
You get more scalability have in that gateway.

58
00:04:04.660 --> 00:04:07.030
You get automatic high availability as well.

59
00:04:07.570 --> 00:04:12.460
The only real limitations of the NAT Gateway are things like you can't use it as a bastion host, but

60
00:04:12.460 --> 00:04:15.310
you should probably separate that into a different instance anyway.

61
00:04:16.030 --> 00:04:19.990
There are also no security groups within that gateway, whereas there are within that instance.

62
00:04:20.200 --> 00:04:23.410
Whether that's a pro or con really depends on your use case.

63
00:04:23.830 --> 00:04:26.680
Let's quickly run through the two instance lifecycle.

64
00:04:27.190 --> 00:04:32.980
Stopping instances works only for EBS backed instances, and there's no charge for a stopped instance.

65
00:04:33.250 --> 00:04:40.300
But there is a charge for any EBS volumes in terms of the amount of data that stored data and RAM gets

66
00:04:40.300 --> 00:04:40.720
lost.

67
00:04:41.140 --> 00:04:44.650
And typically, the instance is migrated to a different host.

68
00:04:44.800 --> 00:04:51.940
When you started again, private IPv4 and IPv6 addresses are retained, public addresses lost.

69
00:04:52.330 --> 00:04:55.510
Any associated elastic IP will, of course, be retained.

70
00:04:55.990 --> 00:04:57.190
Then we've got hibernation.

71
00:04:57.820 --> 00:05:01.810
Hibernation applies to demand or reserved Linux instances.

72
00:05:02.080 --> 00:05:04.840
The contents of RAM get saved to an earpiece.

73
00:05:04.840 --> 00:05:11.710
Volume has to be enabled for hibernation when launched, and specific prerequisites do apply when you

74
00:05:11.710 --> 00:05:16.450
start an instance after hibernation, the root volume is restored to its previous state.

75
00:05:16.900 --> 00:05:22.240
The RAM contents are then reloaded and the processes that were previously running on the instance get

76
00:05:22.240 --> 00:05:22.720
resumed.

77
00:05:24.300 --> 00:05:30.270
And he previously attached volumes, are we attached an instance retains this instance I.D. the reboot's

78
00:05:30.270 --> 00:05:36.300
against and says this is the equivalent to an operating system reboot the DNS name and IP address and

79
00:05:36.300 --> 00:05:37.020
gets retained.

80
00:05:37.320 --> 00:05:41.610
It doesn't affect billing at all because the instance is still running and it hasn't stopped and started.

81
00:05:41.610 --> 00:05:43.320
So it's not a new billing lifecycle.

82
00:05:43.790 --> 00:05:50.160
AWB may sometimes retire instances if there's some irreparable failure of the underlying hardware,

83
00:05:50.400 --> 00:05:53.490
or when an instance reaches its scheduled retirement date.

84
00:05:53.700 --> 00:05:58.620
It might be stopped or terminated by AWB as of course, they'll notify you if that happens.

85
00:05:58.830 --> 00:06:04.530
Sermonizing EC2 instances essentially means deleting the instance, and you can't recover a terminated

86
00:06:04.530 --> 00:06:06.090
instance by default.

87
00:06:06.270 --> 00:06:10.800
The EBS volumes are deleted, and for recovering instances.

88
00:06:10.800 --> 00:06:17.460
This is where Cloud Watch is monitoring the system status and you can recover the instance if required.

89
00:06:17.910 --> 00:06:23.520
It applies if the instance becomes impaired due to underlying hardware or platform issues.

90
00:06:23.760 --> 00:06:27.570
So not necessarily application or operating system layer problems.

91
00:06:28.320 --> 00:06:32.100
A recovered instance is identical to the original instance.

92
00:06:32.490 --> 00:06:40.020
The Nitro system is the underlying platform for the newer generation EC2 instances, and it breaks logical

93
00:06:40.020 --> 00:06:42.900
functions into specialized hardware with a hypervisor.

94
00:06:43.470 --> 00:06:51.060
The hardware includes the Nitro cards, the VPC, EBS Instant Storage, a card controller, a security

95
00:06:51.060 --> 00:06:55.500
chip and the hypervisor itself, and also on Clyde's.

96
00:06:57.450 --> 00:07:00.640
Nitro aims to improve performance, security and innovation.

97
00:07:00.690 --> 00:07:04.500
The performance is close to bare metal, even for virtualized instances.

98
00:07:05.070 --> 00:07:07.130
It gives you the DNA and the EFI.

99
00:07:07.320 --> 00:07:13.050
You have more available bare metal instance types you can use, and it gives you higher network performance.

100
00:07:13.440 --> 00:07:20.130
It's also good for HPC because there's more optimizations for high performance computing, and it can

101
00:07:20.130 --> 00:07:22.890
also have dense storage instances as well.

102
00:07:23.130 --> 00:07:29.130
Nitro enclaves are isolated compute environments that run on hardened virtual machines.

103
00:07:29.400 --> 00:07:35.340
There's no persistent storage, interactive access or external networking, and it uses cryptographic

104
00:07:35.340 --> 00:07:40.980
attestation to ensure only the authorized code is running and integrates with K Mass.

105
00:07:41.250 --> 00:07:47.850
It's good for securing and protecting highly sensitive data like PII health care data, financial data

106
00:07:48.120 --> 00:07:49.770
or intellectual property data.

107
00:07:49.980 --> 00:07:54.090
For easy to pricing options we've got on demand, which is the standard rate.

108
00:07:54.090 --> 00:07:56.400
There's no discount, there's no commitment.

109
00:07:56.640 --> 00:08:01.350
And so it's very good for any kind of short term requirements or unpredictable workloads.

110
00:08:01.890 --> 00:08:07.980
We then got reserved one or three year commitment, but you get a good discount with spotty instances.

111
00:08:07.980 --> 00:08:14.010
You get very low price because you're essentially using unused capacity so you can get a large discount,

112
00:08:14.130 --> 00:08:16.710
but you can also be terminated at any time.

113
00:08:17.550 --> 00:08:23.850
Dedicated instances of a physical isolation at the host hardware level from instances belonging to other

114
00:08:23.850 --> 00:08:24.450
customers.

115
00:08:24.780 --> 00:08:33.060
A new paper instance dedicated hosts is physical servers dedicated for your use, so you get the actual

116
00:08:33.060 --> 00:08:34.830
hardware dedicated for you.

117
00:08:34.830 --> 00:08:36.150
There's no sharing going on there.

118
00:08:36.150 --> 00:08:39.510
It's all including with workloads from your own accounts.

119
00:08:39.720 --> 00:08:45.900
And then lastly, that savings plans where you can commit to a certain amount of usage for various compute

120
00:08:45.900 --> 00:08:46.590
services.

121
00:08:46.770 --> 00:08:49.260
And again, you have a one or three year commitment.

122
00:08:49.470 --> 00:08:52.500
So dedicated instances and dedicated hosts.

123
00:08:52.710 --> 00:08:55.530
A few of the key differences are on the screen for you here.

124
00:08:55.860 --> 00:09:01.650
Of course, one that jumps out is the way your build your peld, per instance for dedicated instances

125
00:09:01.830 --> 00:09:04.200
and per host for dedicated hosts.

126
00:09:04.410 --> 00:09:10.200
You get deeper insights and control with dedicated hosts, you can see the sockets the cause.

127
00:09:10.440 --> 00:09:15.270
You can assign certain instances to certain hardware in that kind of thing, and that's it for this

128
00:09:15.270 --> 00:09:15.900
exam crime.

