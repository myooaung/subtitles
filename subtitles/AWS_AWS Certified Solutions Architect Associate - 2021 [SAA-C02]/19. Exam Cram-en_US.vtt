WEBVTT
1
00:00:02.090 --> 00:00:05.770
Hello and welcome to the exam cram for Section Six.

2
00:00:05.780 --> 00:00:13.940
So let's start with AWS Route 53. Route 53 offers the domain registry DNS resolution and

3
00:00:13.940 --> 00:00:15.570
health checking functions.

4
00:00:15.710 --> 00:00:19.500
It's located alongside all edge locations around the world.

5
00:00:19.730 --> 00:00:24.710
And when you register a domain with Route 53 it becomes the authoritative DNS server for that

6
00:00:24.710 --> 00:00:29.750
domain and creates a public hosted zone and we've seen that if you actually created or registered your

7
00:00:29.750 --> 00:00:35.600
own domain or watched me doing it earlier in the course you can transfer domains to Route 53 as

8
00:00:35.600 --> 00:00:41.330
long as the top level domain name is supported you can transfer domain from Route 53 to another

9
00:00:41.330 --> 00:00:47.870
registrar if you need to by contacting AWS support and you can transfer a domain to another account

10
00:00:47.900 --> 00:00:54.920
in AWS but it doesn't migrate the hosting zone by default it's possible to have the domain registered

11
00:00:54.920 --> 00:00:58.880
in one IWC account and the host its own and another one.

12
00:00:58.880 --> 00:01:04.730
Now you've also got private DNS which is Route 53 feature that lets you create an informative

13
00:01:04.790 --> 00:01:11.870
DNS server within your V.P. seas without exposing any of your DNS records to the public Internet.

14
00:01:12.320 --> 00:01:19.960
You can use the IWC management console or API to register domain names a hosted zone is the collection

15
00:01:20.020 --> 00:01:26.380
of records so the records such as your records your aliases you'll see names and so on for a specific

16
00:01:26.380 --> 00:01:31.810
domain hosted its own is essentially similar to a traditional DNS zone file so it's a collection

17
00:01:31.810 --> 00:01:34.510
of records that are managed together.

18
00:01:34.510 --> 00:01:35.870
There are two types of zones.

19
00:01:35.920 --> 00:01:37.030
We just mentioned this before.

20
00:01:37.040 --> 00:01:40.890
You've got the public zone and the private zone for private zones.

21
00:01:40.930 --> 00:01:48.000
You must set the VPC settings to true that is enabled DNS hostname and enabled DNS support.

22
00:01:48.010 --> 00:01:50.940
You also have to create a DHCP option set.

23
00:01:50.980 --> 00:01:57.410
So that's the dynamic Host Configuration Protocol and it's what will assign IP addresses to your instances.

24
00:01:57.410 --> 00:02:04.970
You have to make sure you have the DNS entries specified. Route 53 does Health checking and this checks

25
00:02:04.980 --> 00:02:11.120
the instance by connects him to it and it can connect to endpoints the status of other health checks

26
00:02:11.390 --> 00:02:12.560
and the status of the cloud.

27
00:02:12.560 --> 00:02:17.360
Watch along endpoints can be an IP address or a domain name.

28
00:02:17.500 --> 00:02:22.810
Now you don't need to remember all these records but just understand that rule 53 supports lots of the

29
00:02:22.810 --> 00:02:28.360
standard records that you're probably familiar with the CNAME and Alias are definitely the ones that

30
00:02:28.360 --> 00:02:32.110
we need to concentrate on for the solutions architect's exam.

31
00:02:32.110 --> 00:02:34.360
I'll give you a bit more detail about those shortly.

32
00:02:34.420 --> 00:02:38.110
So the alias record is round 53 specific.

33
00:02:38.290 --> 00:02:44.140
It's pointed at the DNS name of a service and this is how we compare it to a CNAME.

34
00:02:44.710 --> 00:02:52.630
So a CNAME is a canonical name so that means it maps one domain name to another domain name not to

35
00:02:52.630 --> 00:02:53.410
an IP address.

36
00:02:54.400 --> 00:03:03.070
An alias is similar differences are firstly Route 53 doesn't charge for alias queries you can create

37
00:03:03.070 --> 00:03:04.340
them at the zone apex.

38
00:03:04.360 --> 00:03:11.070
So if you took Amazon.com. Amazon.com is the zone APEX it's the top level domain for Amazon.

39
00:03:11.200 --> 00:03:12.820
You can't do that with CNAMEs.

40
00:03:12.820 --> 00:03:14.080
That's a key difference.

41
00:03:14.080 --> 00:03:21.790
The alias records can only point to AWS sources such as cloudfront distributions, elastic beanstalk

42
00:03:21.790 --> 00:03:28.390
environments, load balancers, S3 Buckets that are configured as static web sites or another record

43
00:03:28.390 --> 00:03:29.760
in the same hosted zone.

44
00:03:29.770 --> 00:03:32.830
So these are the route 53 routing policies.

45
00:03:32.830 --> 00:03:34.470
We're going to go through these now.

46
00:03:34.540 --> 00:03:42.400
So remember you got the simple failleover, geo-location, geo-proximity, latency, multivalue answer and weighted.

47
00:03:42.580 --> 00:03:45.320
And so let's have a look at these and a bit more detail.

48
00:03:45.340 --> 00:03:49.050
The simple is where you map an A record to an IP address.

49
00:03:49.090 --> 00:03:55.000
So if you have multiple IP addresses associated with any record it does round robin so it just rotates

50
00:03:55.000 --> 00:03:57.520
between them doesn't support health checks.

51
00:03:57.550 --> 00:03:58.810
You think of failover.

52
00:03:58.840 --> 00:04:05.550
So this is where you have a primary and a secondary IP address is associated with a health check.

53
00:04:05.560 --> 00:04:13.900
Use it for active passive scenarios so traffic gets sent to the active IP address until it fails its

54
00:04:13.900 --> 00:04:14.830
health check.

55
00:04:14.830 --> 00:04:21.130
Then it assumes that the instance is down and sends the traffic to the passive IP address and you can

56
00:04:21.130 --> 00:04:23.440
use that with ALBs as well.

57
00:04:23.440 --> 00:04:28.750
Geo location is for catering to different users in different countries in different languages and it

58
00:04:28.750 --> 00:04:33.130
contains users within a particular geography and offers them a customized version of the workload.

59
00:04:33.150 --> 00:04:38.410
So you might have a customized version of your website and what Ralph 53 is doing is just directing

60
00:04:38.410 --> 00:04:41.510
people there based on the location that they're in.

61
00:04:41.530 --> 00:04:46.390
So this is just a bit more about some of the use cases that you can use for localizing content protecting

62
00:04:46.390 --> 00:04:50.580
distribution rights as well and even spreading load between regions.

63
00:04:50.680 --> 00:04:55.420
If you have multiple records for overlapping regions Route 53 routes to the smallest geographic

64
00:04:55.420 --> 00:04:57.520
region then got geo proximity.

65
00:04:57.520 --> 00:05:02.770
This is used for routing traffic based on the location of resources and optionally shifting traffic

66
00:05:02.770 --> 00:05:05.280
from resources in one location to another.

67
00:05:06.300 --> 00:05:08.460
Then we have latenct based routing.

68
00:05:08.460 --> 00:05:13.680
This is where AWS maintains a database of latency from different parts of the world.

69
00:05:13.740 --> 00:05:19.980
So essentially they're saying if you're closer and therefore have lower latency it will send you to

70
00:05:20.220 --> 00:05:26.430
that IP address or that application instance to try and improve performance for users.

71
00:05:26.430 --> 00:05:28.100
We then have multivalue answer.

72
00:05:28.140 --> 00:05:33.330
This is where you can respond to a DNS query with up to eight records selected at random so you can

73
00:05:33.330 --> 00:05:40.300
use that as a kind of load balancer weights it is similar to simple but you specify a weight for IP addresses

74
00:05:40.300 --> 00:05:46.720
so that you can try and direct more traffic to one record rather than another record then have something

75
00:05:46.720 --> 00:05:51.520
called traffic flow in Route 53 which is a global traffic management service.

76
00:05:51.610 --> 00:05:57.340
You can create policies around complex routing configurations for resources using different types of

77
00:05:57.340 --> 00:05:59.170
routing policy.

78
00:05:59.250 --> 00:06:05.190
So this is something that you might want to use for creating more complex scenarios where you have to

79
00:06:05.490 --> 00:06:12.060
not just use a single routing policy but you might take into account multiple routing policy scenarios

80
00:06:12.060 --> 00:06:17.250
such as adding a backup page in history for a Web site building sophisticated routing policies that

81
00:06:17.250 --> 00:06:23.870
consider the users geographic location as well as proximity to an AWS region and the health of an endpoint.

82
00:06:23.960 --> 00:06:25.570
We have Route 53 Resolver.

83
00:06:25.770 --> 00:06:27.180
We saw this in the labs as well.

84
00:06:27.180 --> 00:06:33.570
It's a set of features to enable bi directional querying between on premises and AWS over private

85
00:06:33.570 --> 00:06:34.620
connections.

86
00:06:34.620 --> 00:06:39.150
So you can use this for enabling DNS resolution for hybrid clouds.

87
00:06:39.300 --> 00:06:46.320
You have endpoints in Route 53 resolve on the inbound query capability provided by Route 53

88
00:06:46.320 --> 00:06:52.390
Resolver endpoints allows DNS queries that originate on premises to resolve AWS hosted domains.

89
00:06:52.500 --> 00:06:58.350
So you have to establish connectivity between your on premises DNS and AWS through direct connect or

90
00:06:58.350 --> 00:07:04.230
virtual private network and the endpoints are configured for IP address assignment in each subnet for

91
00:07:04.230 --> 00:07:05.850
which you would like to provide a resolve.

92
00:07:06.090 --> 00:07:07.120
So we saw this.

93
00:07:07.200 --> 00:07:09.750
You can create those endpoints in different subnets.

94
00:07:09.750 --> 00:07:15.480
We did this in the lab and it means to the client in a corporate data sense a can query a DNS server

95
00:07:15.510 --> 00:07:22.050
in their datacenter and it will realize that the records that you're trying to find out about are actually

96
00:07:22.050 --> 00:07:23.430
located in Route 53.

97
00:07:23.430 --> 00:07:28.020
So it goes into the resolver endpoint which forwards it to Route 53.

98
00:07:28.020 --> 00:07:33.570
We then have the conditional forwarding rules so this is outbound DNS queries enabled for a conditional

99
00:07:33.570 --> 00:07:39.630
forwarding rules domains hosted within your own premises DNS infrastructure can be configured as forwarding

100
00:07:39.630 --> 00:07:39.990
rules.

101
00:07:39.990 --> 00:07:41.560
In Route 53 we resolve it.

102
00:07:41.700 --> 00:07:47.010
So let's just jump straight into here because it's obviously easier in this case to look at a diagram.

103
00:07:47.250 --> 00:07:51.680
So your EC2 instance is configured to talk to Route 53

104
00:07:51.930 --> 00:07:53.940
But in this case it's the other way round.

105
00:07:53.940 --> 00:07:59.400
So this time we want to query something that's a record in a DNS server in the corporate data.

106
00:07:59.540 --> 00:08:03.900
So Route 53 users resolve to forward that traffic.

107
00:08:04.200 --> 00:08:07.300
Lastly we have AWS Global Accelerator.

108
00:08:07.320 --> 00:08:12.710
This is something which is a fairly new service and is only really applicable if you're doing the 

109
00:08:12.710 --> 00:08:19.080
SAA-C02 version of the exam as it's a service which is now definitely going to be tested on in the new

110
00:08:19.080 --> 00:08:19.740
exam.

111
00:08:19.740 --> 00:08:25.200
What Global Accelerator does is provides availability and performance of applications with local or

112
00:08:25.200 --> 00:08:26.380
global users.

113
00:08:26.400 --> 00:08:33.210
Now what that really means is it provides static IP addresses and these are a fixed entry point to application

114
00:08:33.240 --> 00:08:41.330
endpoints in single all multiple AWS regions and those can be ALBs, network load balancers, or EC2

115
00:08:41.340 --> 00:08:42.710
instances.

116
00:08:42.720 --> 00:08:50.190
So think of Global Accelerator as a way that you can have two static IP addresses and those can direct

117
00:08:50.190 --> 00:08:57.660
traffic to resource endpoints in multiple regions and it will choose the region that's closest or use

118
00:08:57.660 --> 00:09:02.060
the weightings that you assign to choose which region to send the traffic.

119
00:09:02.460 --> 00:09:09.120
And it does so using edge locations and then the global network so actually uses the AWS global network

120
00:09:09.440 --> 00:09:14.110
and this optimizes the path from users to applications.

121
00:09:14.250 --> 00:09:20.070
And it definitely means that there's going to be a lot lower latency than using the internet. Global

122
00:09:20.070 --> 00:09:26.910
accelerator uses health checks and it can respond to failures and redirect traffic in less than a minute.

123
00:09:27.510 --> 00:09:33.090
So it's using static any cost IP addresses so you get two of those and it doesn't matter where your

124
00:09:33.090 --> 00:09:38.310
users are in the world they only need to use those two IP addresses and they'll be connected to the

125
00:09:38.340 --> 00:09:42.870
closest region or the region which you want to direct most traffic to.

126
00:09:42.870 --> 00:09:49.050
As I mentioned before it uses edge locations and the addresses are associated to regional AWS resources

127
00:09:49.050 --> 00:09:50.100
or endpoints.

128
00:09:50.370 --> 00:09:55.470
Global accelerators IP addresses are the front-end interface for applications of so you can use Route 53

129
00:09:55.470 --> 00:10:00.930
to resolve those IP addresses as well but then you don't need to change those IP addresses where

130
00:10:00.930 --> 00:10:06.090
you fail over your traffic it does intelligent traffic distribution and targeting.

131
00:10:06.090 --> 00:10:10.950
As I mentioned before can be EC2 load balancers both ALB and NLB.

