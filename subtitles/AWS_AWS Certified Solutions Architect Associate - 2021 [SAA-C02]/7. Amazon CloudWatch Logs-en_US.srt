1
00:00:02,480 --> 00:00:08,120
Hi, guys, I'm now going to cover cloud watch logs, so this is another one that we've used a few times

2
00:00:08,120 --> 00:00:13,090
during this course and mainly with lambda functions, but also with other services as well.

3
00:00:13,490 --> 00:00:19,370
But we've seen that when we create a lambda function, we can send logs to cloud, which logs actually

4
00:00:19,370 --> 00:00:20,440
does it by default.

5
00:00:20,720 --> 00:00:22,340
We then have Amazon EC2.

6
00:00:22,340 --> 00:00:28,280
So, as you know, easy to sense metrics, the cloud watch, but it doesn't send system logs or application

7
00:00:28,280 --> 00:00:29,270
logs by default.

8
00:00:29,600 --> 00:00:34,140
So if you want to do that, the best way is to install the cloud watch agent.

9
00:00:34,460 --> 00:00:40,070
Now there is another way where you can use some Perl scripts and there's also a cloud watch logs agent

10
00:00:40,220 --> 00:00:42,470
and that's different to the cloud watch agent.

11
00:00:42,470 --> 00:00:44,740
And we'll talk about that a bit more in this section.

12
00:00:45,380 --> 00:00:52,040
But by installing an agent, you can then capture application and sys logs and you can do the same thing,

13
00:00:52,430 --> 00:00:55,640
installing the agent on an on premises server as well.

14
00:00:55,640 --> 00:00:59,000
And again, you can capture application logs and system logs.

15
00:00:59,190 --> 00:01:04,600
I'm going to head over to the console now and just give you a refresh on LAMDA and how it does logging.

16
00:01:04,820 --> 00:01:06,500
So I'm in the lambda console.

17
00:01:06,500 --> 00:01:07,600
I'm going to create a function.

18
00:01:07,730 --> 00:01:15,230
I'm just going to call this test cloud watch logs and I'll leave it as no JS and then just choose one

19
00:01:15,230 --> 00:01:20,300
of my existing execution roles, my lamda basic execution and create function.

20
00:01:20,480 --> 00:01:25,810
Now one of the things to note is there's no destination for cloud watch logs or for cloud watch at all.

21
00:01:26,120 --> 00:01:31,410
So they used to be used to create your function and it would by default have cloud watch here.

22
00:01:31,670 --> 00:01:33,200
Now you don't need to do that anymore.

23
00:01:33,200 --> 00:01:34,760
It's integrated by default.

24
00:01:34,760 --> 00:01:38,920
So you don't need to go and add a destination and actually add cloud watch.

25
00:01:39,260 --> 00:01:45,830
Now, with our default code, we're still going to get a log entry, but we're not actually writing

26
00:01:45,830 --> 00:01:46,850
anything specific.

27
00:01:46,860 --> 00:01:53,300
So if you do want to write something specific into your code or into your log entry, rather, then

28
00:01:53,300 --> 00:01:55,010
you are going to need to put some code in there.

29
00:01:55,020 --> 00:02:01,190
So if you had an incoming event that invokes your lambda function and there was some data in the event

30
00:02:01,400 --> 00:02:05,600
and you want that written into cloud, which logs, then you would need to write down your code.

31
00:02:05,600 --> 00:02:07,490
And we've done that a few times in this course.

32
00:02:07,640 --> 00:02:12,410
So all I'm going to do now is click on test scores so I can generate a single event.

33
00:02:12,410 --> 00:02:18,200
Just call it T1 using the Hallowell template, click on Create and then Choose Test.

34
00:02:18,290 --> 00:02:20,420
And so that's executed successfully.

35
00:02:20,660 --> 00:02:23,580
Let's go to monitoring and view logs and cloud, which logs.

36
00:02:23,840 --> 00:02:29,060
Now that takes us into a log group and a stream for us.

37
00:02:29,060 --> 00:02:36,080
Lambda test cloud watch logs and we can see in the stream we have a single execution event, so I start

38
00:02:36,080 --> 00:02:37,430
an end and then a report.

39
00:02:37,700 --> 00:02:42,890
And this is a bit of information here, the build duration, the memory size and how long it took and

40
00:02:42,890 --> 00:02:43,560
that kind of thing.

41
00:02:43,970 --> 00:02:45,650
So that's what Lambda looks like.

42
00:02:45,920 --> 00:02:52,130
Now, we've run some Ekta instances recently, so let's have a look into log groups and we can see we

43
00:02:52,130 --> 00:02:54,020
don't have anything here for SETI.

44
00:02:54,350 --> 00:02:59,480
So we have some excellent groups and we have LAMDA, but there's nothing for you to do.

45
00:02:59,480 --> 00:03:05,360
So again, for that you would need to install the agent or use the API or the postscripts.

46
00:03:05,720 --> 00:03:11,030
So Cloud, which logs, enables you to centralize the logs from all your systems, applications and

47
00:03:11,540 --> 00:03:12,230
services.

48
00:03:12,680 --> 00:03:19,160
A few of the features are you can monitor logs from EC2 and that's application and sys logs and you

49
00:03:19,160 --> 00:03:21,470
can then also trigger notifications.

50
00:03:22,160 --> 00:03:28,490
You can monitor cloud logged events and so you can actually create an alarm in cloud watch based on

51
00:03:28,490 --> 00:03:31,140
API activity in in cloud trail.

52
00:03:31,490 --> 00:03:37,280
So, for instance, you've got API activity happening in creating a logged event in cloud trail and

53
00:03:37,280 --> 00:03:43,550
then you can use cloud watch alarms to send some kind of notification in terms of log retention by default,

54
00:03:43,550 --> 00:03:49,430
they're retained indefinitely and it's configurable per load group from one day to ten years.

55
00:03:49,670 --> 00:03:51,020
The logs agent.

56
00:03:51,040 --> 00:03:57,140
So this is the cloud watch logs agent provides an automated way to send log data to cloud watch logs

57
00:03:57,380 --> 00:03:58,760
for AC2 instances.

58
00:03:59,300 --> 00:04:02,210
And then there's what's called the cloud watch agent.

59
00:04:02,210 --> 00:04:03,920
So this is a unified agent.

60
00:04:03,920 --> 00:04:07,880
So this actually isn't just about logging, it's about metrics as well.

61
00:04:08,330 --> 00:04:14,180
And the Unified Cloud Watch agent includes metrics such as memory and disk utilization.

62
00:04:14,180 --> 00:04:20,360
So this is another way that you can have some custom metrics generated by your two instances.

63
00:04:20,600 --> 00:04:23,840
So let's have a look at a bit more detail about the cloud watch agent.

64
00:04:24,020 --> 00:04:29,120
You can collect system level metrics from easy to instances across our operating systems.

65
00:04:29,600 --> 00:04:36,500
You can get in guess metrics in addition to the standard metrics for you, and you can collect system

66
00:04:36,500 --> 00:04:38,780
level metrics from on premises servers.

67
00:04:39,230 --> 00:04:45,380
And they can be servers in a hybrid environment as well as servers that are not managed by us.

68
00:04:45,650 --> 00:04:51,380
You can also retrieve custom metrics from applications or services using the stats d and collect the

69
00:04:51,380 --> 00:04:52,040
protocols.

70
00:04:52,340 --> 00:04:53,630
So that's it for this lesson.

71
00:04:53,630 --> 00:04:57,410
And in the next lesson, we're going to have a look at cloud watch events.

