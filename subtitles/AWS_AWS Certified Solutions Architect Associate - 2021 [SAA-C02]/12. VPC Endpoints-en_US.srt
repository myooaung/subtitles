1
00:00:05,350 --> 00:00:10,540
You'll remember that earlier in the course, I talked about how some IWC services are private and that

2
00:00:10,540 --> 00:00:17,530
they run within a VPC like EC2, whereas other services are public because they have a public endpoint

3
00:00:17,530 --> 00:00:19,360
like Amazon is free, for example.

4
00:00:19,840 --> 00:00:22,030
So that means when you connect to Amazon, it's free.

5
00:00:22,030 --> 00:00:26,170
You use a public DNS name to connect to it as a public end point.

6
00:00:26,800 --> 00:00:33,250
Now what if you wanted to connect an instance to Amazon free, but you didn't want to use the public

7
00:00:33,250 --> 00:00:33,640
internet?

8
00:00:33,640 --> 00:00:36,040
It might be an instance in a private subnet.

9
00:00:36,310 --> 00:00:41,530
Well, that's where the IPC endpoints come in, and there's a few use cases for PPC endpoints with connecting

10
00:00:41,530 --> 00:00:43,210
privately to S3 being one of them.

11
00:00:43,660 --> 00:00:44,860
And there are two different types.

12
00:00:44,860 --> 00:00:49,230
There's a VPC interface endpoint and a VPC gateway endpoint.

13
00:00:49,240 --> 00:00:54,430
The Gateway endpoint is one which we could use for free, and the interface endpoint is slightly different

14
00:00:54,480 --> 00:00:55,960
is used for other services.

15
00:00:56,200 --> 00:00:57,550
So let's start there first.

16
00:00:57,880 --> 00:01:01,810
Let's look at an example using a VPC interface endpoint.

17
00:01:02,350 --> 00:01:08,680
So we've got EC2 running in a private subnet, and we don't want this instance to have a public IP,

18
00:01:08,830 --> 00:01:12,250
and we don't want it to be rousted out to the internet via a NAT gateway.

19
00:01:12,880 --> 00:01:18,670
So we provision an interface endpoint, which creates an Illinois in the subnet.

20
00:01:19,420 --> 00:01:26,710
And then the instance can connect via that Illinois to public services, but it's using private IP addresses

21
00:01:26,710 --> 00:01:27,640
to connect to them.

22
00:01:28,330 --> 00:01:36,040
Now, each interface endpoint can connect to one of many services, and you can connect to an AWG private

23
00:01:36,040 --> 00:01:37,380
link powered service as well.

24
00:01:37,390 --> 00:01:39,490
We'll look at that shortly to see what that means.

25
00:01:39,910 --> 00:01:46,510
So this is a way that we can connect or two instances to these services using private IP addresses.

26
00:01:47,410 --> 00:01:50,410
Now let's look at the difference between that and a gateway endpoint.

27
00:01:50,920 --> 00:01:56,470
So in this case, I want to connect to Amazon as free to store data in an S3 bucket.

28
00:01:56,480 --> 00:01:59,260
And again, I don't want to have a public IP address.

29
00:01:59,260 --> 00:02:00,940
So an instance at a public subnet.

30
00:02:01,330 --> 00:02:03,370
In this case, it isn't a private subnet.

31
00:02:03,550 --> 00:02:05,350
And I don't want a provision in that gateway.

32
00:02:05,350 --> 00:02:12,220
Or at least I don't want this traffic to go out to the internet so I could provision a free gateway

33
00:02:12,220 --> 00:02:12,670
endpoint.

34
00:02:13,180 --> 00:02:14,200
This is slightly different.

35
00:02:14,560 --> 00:02:16,720
It uses a route table entry.

36
00:02:16,900 --> 00:02:23,440
So we now have to put a round table entry to point our traffic to the free gateway endpoint, and that

37
00:02:23,440 --> 00:02:26,830
uses the prefix list for the S3 and the Gateway.

38
00:02:27,520 --> 00:02:33,160
The instance again connects using a private IP address to the gateway endpoint, and then from there

39
00:02:33,160 --> 00:02:34,840
it connects to Amazon S3.

40
00:02:35,230 --> 00:02:40,150
Now you can secure this with IAM policies so you can apply a policy to the endpoint.

41
00:02:40,570 --> 00:02:42,520
And you can also apply bucket policies.

42
00:02:42,820 --> 00:02:49,150
So, for example, you can have a bucket policy that limits access to any traffic that's coming from

43
00:02:49,150 --> 00:02:50,110
the gateway endpoint.

44
00:02:50,620 --> 00:02:56,800
So you now have a bucket, which will only accept traffic from instances that are using the S3 gateway

45
00:02:56,800 --> 00:02:57,220
endpoint.

46
00:02:57,550 --> 00:03:01,120
So let's just recap the differences with the interface endpoint.

47
00:03:01,240 --> 00:03:05,530
You've got an elastic network interface with a private IP with a gateway endpoint.

48
00:03:05,680 --> 00:03:09,670
You have a target in your root table for the Gateway.

49
00:03:09,970 --> 00:03:11,230
So interface endpoints.

50
00:03:11,230 --> 00:03:17,080
We use DNS entries to redirect traffic, whereas gateway endpoints use the prefix list in the roundtable

51
00:03:17,080 --> 00:03:18,190
to redirect traffic.

52
00:03:18,700 --> 00:03:19,710
Now what services?

53
00:03:19,720 --> 00:03:24,880
While there's quite a few with an interface, endpoint API Gateway Cloud formation and cloud blocks

54
00:03:24,880 --> 00:03:26,140
are just a few examples.

55
00:03:26,320 --> 00:03:32,590
Lots of the public services can be accessed via an interface endpoint, but a gateway endpoint is restricted

56
00:03:32,590 --> 00:03:35,740
to Amazon S3 and Dynamo DB only.

57
00:03:36,100 --> 00:03:41,170
With an interface endpoint, you use security groups to control traffic, whereas with a gateway endpoint,

58
00:03:41,170 --> 00:03:43,240
you can use VPC endpoint policies.

59
00:03:44,020 --> 00:03:48,130
Now lastly, let's look at how we can use this in a service provider model.

60
00:03:48,730 --> 00:03:55,930
So what I mean is we have a consumer of APC and a service provider PPC, so we've got a couple of subnets

61
00:03:55,930 --> 00:03:57,370
in each VPC.

62
00:03:58,090 --> 00:04:05,080
And what's happening is the service provider is creating a service and that service is behind a network

63
00:04:05,080 --> 00:04:08,920
load balancer and they want to provide that service to consumers.

64
00:04:09,670 --> 00:04:16,150
So what happens as a consumer is you provision an endpoint and then you use that endpoint to access

65
00:04:16,150 --> 00:04:16,750
the service.

66
00:04:17,380 --> 00:04:23,680
So we're actually publishing a service in one side and then we're consuming it in the VPC, on the left

67
00:04:23,950 --> 00:04:28,060
and using an interface endpoint to actually consume that service.

68
00:04:28,510 --> 00:04:29,740
So that's how it works.

69
00:04:29,740 --> 00:04:32,740
And in the next lesson, we're going to set up a gateway endpoint.

