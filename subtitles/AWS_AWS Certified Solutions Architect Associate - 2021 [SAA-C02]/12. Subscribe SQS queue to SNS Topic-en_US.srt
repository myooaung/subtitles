1
00:00:02,270 --> 00:00:08,270
Hi, guys, and this lesson, we're going to use S.A.S. with excuse and Lamda, so this will be a hands

2
00:00:08,270 --> 00:00:08,800
on lab.

3
00:00:09,020 --> 00:00:10,020
We're going to go over.

4
00:00:10,040 --> 00:00:13,160
We're going to try and S.A.S. topic and excuse.

5
00:00:13,190 --> 00:00:15,110
Q and a LAMDA function.

6
00:00:15,470 --> 00:00:20,750
And what's going to happen is the when we send a message to the topic, it's going to get put into the

7
00:00:20,750 --> 00:00:26,270
Q Lamda will poll the Q and it will write an event, a cloud watch logs and won't be able to read the

8
00:00:26,270 --> 00:00:28,460
message that we sent to the topic.

9
00:00:28,970 --> 00:00:31,430
So let's head over to the console and build this out.

10
00:00:32,700 --> 00:00:39,840
So first off, I'm going to create my topic, I go into S.A.S. and choose Creutz topic, and I'm just

11
00:00:39,840 --> 00:00:43,080
going to call this one my first topic.

12
00:00:43,230 --> 00:00:46,020
You can optionally put it in a display name.

13
00:00:46,860 --> 00:00:48,150
You can set encryption.

14
00:00:48,160 --> 00:00:55,680
So in this case, you can use encryption and by default, it's going to use ECMC from CM's or you can

15
00:00:55,680 --> 00:00:57,240
select a custom SMK.

16
00:00:57,630 --> 00:00:58,800
I'm going to disable that.

17
00:00:59,250 --> 00:01:00,990
We then have an access policy.

18
00:01:01,260 --> 00:01:06,960
Now, we don't need to modify this now, but you can see here you have the basic option or advanced

19
00:01:06,960 --> 00:01:08,910
where you just do the device on yourself.

20
00:01:08,910 --> 00:01:10,830
You have to put in your own JSON code.

21
00:01:11,670 --> 00:01:19,020
If you choose basic, then on the left here we can change these settings and automatically change the

22
00:01:19,020 --> 00:01:19,560
policy.

23
00:01:20,720 --> 00:01:27,290
So we could put in a specified AWB account change position for everyone to be able to publish to this

24
00:01:27,290 --> 00:01:29,720
topic or just the owner of the topic.

25
00:01:30,230 --> 00:01:32,790
Similarly, we can do the same for subscribers.

26
00:01:33,350 --> 00:01:34,780
I'm going to leave those defaults.

27
00:01:35,150 --> 00:01:42,290
We then have the delivery retry policy and we can also configure logging and the role that's used by

28
00:01:42,380 --> 00:01:43,460
S.A.S. for logging.

29
00:01:44,120 --> 00:01:46,900
I don't need to change any of those, so I'm just going to choose.

30
00:01:46,910 --> 00:01:47,660
Great topic.

31
00:01:48,140 --> 00:01:51,140
The next thing I want to do is go over to us.

32
00:01:52,090 --> 00:01:59,500
And we're going to create a queue, just going to call this my US queue, and it will be a standard

33
00:01:59,500 --> 00:02:01,240
queue and just choose quick creates.

34
00:02:01,540 --> 00:02:06,250
Now that we've created the queue, we can actually subscribe the queue to the next topic.

35
00:02:07,120 --> 00:02:11,980
So if we come in here, we can find our topic and choose, subscribe, and that's successful.

36
00:02:12,590 --> 00:02:15,430
So let's just test out this portion of the set up.

37
00:02:16,340 --> 00:02:23,090
If we come back and go to subscriptions, we can now see that we have a subscription to us and that's

38
00:02:23,090 --> 00:02:24,380
been automatically created.

39
00:02:25,000 --> 00:02:27,440
Let's go back to topics, choose our topic.

40
00:02:28,380 --> 00:02:34,830
Publish a message and we'll put first test message in the subject line.

41
00:02:36,340 --> 00:02:38,080
And then I'm just going to type.

42
00:02:39,600 --> 00:02:46,260
My test message in the message body here, and I don't need to change anything else, so that's published

43
00:02:46,260 --> 00:02:46,770
a message.

44
00:02:47,660 --> 00:02:54,650
Now, if we head over to us and hit refresh, we can see we've got the message and if we go into the

45
00:02:54,650 --> 00:03:01,670
Q and poll, we can actually pick up that message and see that we've got the subjects and the message

46
00:03:01,670 --> 00:03:02,340
body in there.

47
00:03:03,080 --> 00:03:04,310
So that's all working great.

48
00:03:05,290 --> 00:03:13,540
Let's go over to LAMDA now, and I'm going to create a function, I'll call it my excuse, S.A.S. test,

49
00:03:13,990 --> 00:03:15,460
it's going to be no notorious.

50
00:03:15,970 --> 00:03:21,560
I'm going to choose an execution row and go down and choose my lambda basic execution.

51
00:03:22,030 --> 00:03:27,370
Now, I've already got the permissions I need here, but what you're going to need to do if you're using

52
00:03:27,370 --> 00:03:34,260
a new role is come in to the role and attach the lambda queue execution roles.

53
00:03:34,270 --> 00:03:40,640
So just going to attach policies and attach that policy and that will give us the privileges we need.

54
00:03:40,660 --> 00:03:47,350
So we need to allow them to be able to receive message and delete message and get Q attributes.

55
00:03:47,920 --> 00:03:50,920
And it will also be able to log to Clowned, which logs.

56
00:03:51,400 --> 00:03:52,330
So that looks good.

57
00:03:53,610 --> 00:03:59,720
Let's come back and what we're going to do in our function is we need to copy over this code.

58
00:04:00,150 --> 00:04:01,460
So I've got this code here.

59
00:04:01,920 --> 00:04:04,320
And if you go into your code directory.

60
00:04:05,350 --> 00:04:12,220
In the course download, you'll find this under S.A.S., Lambda Code, S.A.S. test, and you just need

61
00:04:12,220 --> 00:04:17,440
to copy this code and then delete out all the code from the function and paste that in.

62
00:04:18,280 --> 00:04:25,040
So what this is going to do is it's going to actually log the body of the message it receives from us.

63
00:04:25,300 --> 00:04:31,510
So this will mean that the payload, in other words, the message body, so whatever we write into the

64
00:04:31,990 --> 00:04:34,380
message will end up in cloud, which logs.

65
00:04:35,020 --> 00:04:41,650
And in this case, because we're using S.A.S. to create the message, it's going to be whatever we write

66
00:04:41,650 --> 00:04:44,880
in our S.A.S. message that ends up in cloud watch.

67
00:04:45,400 --> 00:04:46,600
So I'm going to save that.

68
00:04:47,380 --> 00:04:50,350
And now we need to actually create the trigger.

69
00:04:50,830 --> 00:04:52,360
So I'm going to do it the other way around.

70
00:04:52,360 --> 00:04:56,880
This time before, in a previous lab, I showed you how to do it from us.

71
00:04:57,220 --> 00:04:59,590
So we went in and configure a trigger for Lambda.

72
00:05:00,220 --> 00:05:04,200
But you can also do the same thing here so you can just use and trigger.

73
00:05:04,960 --> 00:05:07,870
I'm going to put in ask us to filter the view.

74
00:05:08,890 --> 00:05:12,940
And then let's choose our cue and leave it on a table trigger.

75
00:05:14,420 --> 00:05:15,990
So that's it, we've got our trigger.

76
00:05:16,340 --> 00:05:24,020
Let's come back and it's publish a message I'm going to call this second test message and that's right

77
00:05:24,020 --> 00:05:27,650
in this is a message from S.A..

78
00:05:28,580 --> 00:05:35,060
And she's published message, so hopefully now that should end up going through the queue and it will

79
00:05:35,060 --> 00:05:38,920
be processed by Lambda, S.C. Both of those messages have gone now.

80
00:05:39,170 --> 00:05:46,340
And if we come back to Lambda, go to monitoring and view cloud watch logs and we've got two log streams

81
00:05:46,340 --> 00:05:46,520
here.

82
00:05:46,520 --> 00:05:48,490
So let's have a look into this one here.

83
00:05:49,010 --> 00:05:54,080
And if we go into info, we can see the second text message.

84
00:05:54,290 --> 00:05:59,470
This is a message from S.A.S. so that messages come through from S.A.S..

85
00:06:00,230 --> 00:06:03,620
So back in our diagram, what we've done is we created a topic.

86
00:06:03,620 --> 00:06:06,410
In essence, we've published a message to the topic.

87
00:06:06,620 --> 00:06:10,270
That message has then gone to the subscriber, which is the excuse.

88
00:06:10,280 --> 00:06:10,730
Q.

89
00:06:11,870 --> 00:06:18,410
And then Lamda has polled the key, found the message, run the function code and written an event cloud

90
00:06:18,410 --> 00:06:18,960
watch logs.

91
00:06:19,400 --> 00:06:25,160
So I hope you enjoyed that, guys, in terms of clean up, very, very simple to go back in and just

92
00:06:25,160 --> 00:06:26,680
delete your topic.

93
00:06:26,930 --> 00:06:28,520
You just have to put in delete me.

94
00:06:28,820 --> 00:06:30,800
You can delete your subscription.

95
00:06:34,170 --> 00:06:41,190
And back and ask us to leave the queue, go to functions on the lamda and then just delete your function.

