WEBVTT
1
00:00:02.020 --> 00:00:02.630
Hi, guys.

2
00:00:02.650 --> 00:00:06.270
We've already used Amazon Cloud Watch quite a lot in this course.

3
00:00:06.730 --> 00:00:12.550
However, in this section, what I want to do is give you a deeper level of knowledge, cover some of

4
00:00:12.580 --> 00:00:18.220
the key features of cloud watch and also give you some key facts that you're going to need to know for

5
00:00:18.220 --> 00:00:18.840
the exam.

6
00:00:19.180 --> 00:00:24.040
So on your screen here, what I'm trying to represent is the fact that we have cloud watch in the middle

7
00:00:24.370 --> 00:00:29.300
and you can see some of the various features of cloud watch and the services that it integrates with.

8
00:00:29.560 --> 00:00:32.980
Now, of course, there's lots more services that are integrated with cloud watch.

9
00:00:33.130 --> 00:00:34.540
So these are just examples.

10
00:00:35.140 --> 00:00:43.150
But for example, we can have an Amazon EC2 instance and it can be using cloud watch logs to send application

11
00:00:43.150 --> 00:00:45.080
and system logs to cloud watch.

12
00:00:45.400 --> 00:00:51.880
So not just the logs about Ekta itself, but these could be logs about your application or that are

13
00:00:51.880 --> 00:00:54.000
being generated from your application.

14
00:00:54.940 --> 00:01:00.580
You've then got metrics, so this is the most common way we use cloud watch, we have performance metrics

15
00:01:00.580 --> 00:01:03.120
being sent by services to cloud watch.

16
00:01:03.430 --> 00:01:08.600
So the service publishes the metrics periodically and then we can view them in the dashboard.

17
00:01:08.890 --> 00:01:14.890
So in this example here, Dinamo DB is sending some metrics about consumed rate, capacity and right

18
00:01:14.890 --> 00:01:15.490
capacity.

19
00:01:15.490 --> 00:01:19.080
And of course, there's lots more metrics that Dinamo DB can send as well.

20
00:01:20.170 --> 00:01:26.290
And on the bottom right hand side here, we have also scanning and also scanning in this case is also

21
00:01:26.290 --> 00:01:32.080
sending CPU utilization metrics and and many other metrics along with that.

22
00:01:32.470 --> 00:01:35.110
But in this case, what we're doing is we've set an alarm.

23
00:01:35.260 --> 00:01:42.760
So we're using cloud, which alarms to initiate a scaling event when the CPU utilization reaches a specific

24
00:01:42.760 --> 00:01:43.340
threshold.

25
00:01:43.750 --> 00:01:45.660
We also have cloud watch events.

26
00:01:46.090 --> 00:01:52.040
Now, what cloud watch events does is it tracks the state change in your services.

27
00:01:52.420 --> 00:01:58.120
So in this example, we have the Elastic Container Service and what we're doing is we're tracking the

28
00:01:58.120 --> 00:02:03.310
exact task state changes and the exact container instant state changes.

29
00:02:03.790 --> 00:02:11.830
And when those state changes are received by cloud watch, we can then trigger something such as an

30
00:02:11.830 --> 00:02:14.080
awp lambda function in this case.

31
00:02:14.740 --> 00:02:19.840
So Cloud Watch monitors your resources and applications in real time.

32
00:02:20.260 --> 00:02:27.160
It collects and tracks metrics and metrics are the data points that get published to cloud watch.

33
00:02:27.490 --> 00:02:33.670
We have cloud watch alarms which can monitor those metrics and automatically initiate actions and we

34
00:02:33.670 --> 00:02:34.810
have cloud watch logs.

35
00:02:34.810 --> 00:02:40.480
And we've seen this quite a lot in this course where, for instance, we've had a lamda logging to cloud

36
00:02:40.480 --> 00:02:45.820
watch logs and then we can go and review some of the activity associated with Lambda Cloud.

37
00:02:45.820 --> 00:02:53.280
Watch events is the service that delivers the stream of system events that describe changes in AWG resources.

38
00:02:53.620 --> 00:02:56.890
So let's head over to the console now and just have a quick look around cloud.

39
00:02:56.890 --> 00:02:59.740
Watch some on the management console.

40
00:02:59.740 --> 00:03:03.160
Let's go down to management and governance and cloud watch.

41
00:03:03.430 --> 00:03:05.470
And you've certainly seen a lot of this before.

42
00:03:05.710 --> 00:03:07.300
But let's go and have a look at a few things.

43
00:03:07.300 --> 00:03:08.740
Firstly, you've got a dashboard.

44
00:03:08.740 --> 00:03:10.480
I've got one here called my dash.

45
00:03:10.750 --> 00:03:17.200
So if you go into that, then you can then add your widgets or let's just create a new one for demonstration's

46
00:03:17.200 --> 00:03:17.520
sake.

47
00:03:17.530 --> 00:03:22.600
So just call this my new dash and create a dashboard.

48
00:03:22.720 --> 00:03:26.850
And then within the dashboard, we can create a series of different widgets.

49
00:03:27.040 --> 00:03:31.450
So, for instance, you can have a line, a stacked area, a no text or query results.

50
00:03:31.810 --> 00:03:37.200
So let's choose a line, click on Configure and then we can go and choose our metrics.

51
00:03:37.450 --> 00:03:43.870
So, for example, has got to let's just say, per instance, and you can select your instance, you

52
00:03:43.870 --> 00:03:49.660
can see the instance ID here, and then you might want to sort of just add a few metrics, such as we've

53
00:03:49.660 --> 00:03:56.320
got a few CPU metrics here, we've got the CPU utilization, we've got the discrete bytes and we're

54
00:03:56.320 --> 00:03:56.770
going down.

55
00:03:56.770 --> 00:03:59.380
There's quite a few different instances in here.

56
00:03:59.530 --> 00:04:01.390
And then you can just choose create widget.

57
00:04:02.050 --> 00:04:04.960
And so now you've got your widget, so then you can just create another one.

58
00:04:05.170 --> 00:04:06.940
This one might be a stacked area.

59
00:04:07.240 --> 00:04:09.340
Choose, configure, choose Dinham.

60
00:04:09.340 --> 00:04:14.740
I'd be this time let's look at some table metrics and then just aren't consumed, read and consumed

61
00:04:14.740 --> 00:04:17.700
right capacity units and let's create that widget.

62
00:04:18.190 --> 00:04:23.320
So again now we have a couple of widgets so you can do that, you can save your dashboard and then you

63
00:04:23.320 --> 00:04:27.490
can come back to this whatever you want to and find these various different graphs.

64
00:04:27.640 --> 00:04:29.290
We then have alarms now.

65
00:04:29.290 --> 00:04:33.840
We've seen alarms earlier in the course and we'll certainly see them again in this section that has

66
00:04:33.850 --> 00:04:38.020
couple left over here where probably the resources have been deleted.

67
00:04:38.030 --> 00:04:43.510
So it's saying insufficient data, which basically means it doesn't have enough data to ascertain the

68
00:04:43.510 --> 00:04:44.650
state of this alarm.

69
00:04:45.460 --> 00:04:49.000
And of course, we could go in and create an alarm here, choose a metric.

70
00:04:50.170 --> 00:04:56.500
Sture, per instance, Metrick, and then we might choose CPU utilization, click on Select and then

71
00:04:56.500 --> 00:05:02.320
we can use an average over five minutes and then say if it's greater than a certain threshold, like

72
00:05:02.320 --> 00:05:04.990
80 percent, then we're going to do something.

73
00:05:04.990 --> 00:05:11.440
And that action could be to send something to an S.A.S. topic or an auto scanning action or an easy

74
00:05:11.440 --> 00:05:12.070
to action.

75
00:05:12.080 --> 00:05:13.330
So let's cancel out of there.

76
00:05:14.140 --> 00:05:18.860
And in this case, you can say again, we've got these insufficient information, error messages.

77
00:05:19.240 --> 00:05:24.580
Next up, we have logs and we've seen logs before a few times.

78
00:05:24.820 --> 00:05:28.930
And in this case, I've got lots and lot groups here from where we've been doing various labs in this

79
00:05:28.930 --> 00:05:29.380
course.

80
00:05:29.980 --> 00:05:34.570
And if you go into one of these, you'll then find a log stream and in the log stream, you'll then

81
00:05:34.570 --> 00:05:35.710
find some log entries.

82
00:05:35.890 --> 00:05:37.030
Not many under this one.

83
00:05:37.330 --> 00:05:39.320
Underneath you have then the matrix.

84
00:05:39.340 --> 00:05:43.210
So in here you can see all the metrics for us, names, bases.

85
00:05:43.360 --> 00:05:45.540
And then I've got a few custom metrics in here as well.

86
00:05:45.550 --> 00:05:47.080
We'll see these later in this section.

87
00:05:47.470 --> 00:05:52.860
And in this case, what you're going to see is determined by what you've been running in your account.

88
00:05:53.170 --> 00:05:58.180
So, for instance, if there's a specific service that you haven't run and therefore you have never

89
00:05:58.180 --> 00:06:02.400
collected any metrics for it, you're not going to see it here underneath we have events.

90
00:06:02.620 --> 00:06:08.680
So this is where you can actually use an event pattern to trigger some kind of target response.

91
00:06:08.870 --> 00:06:16.180
So, for instance, you could choose to say all events and then have a target of a specific LAMBA function

92
00:06:16.360 --> 00:06:19.540
when an event occurs and cancel out of that one.

93
00:06:19.840 --> 00:06:25.420
Now, the next few features under here service synthetics and contribute insights are not on the exam

94
00:06:25.420 --> 00:06:25.600
yet.

95
00:06:25.600 --> 00:06:27.430
So we're not going to be covering those in this section.

96
00:06:27.700 --> 00:06:30.790
But that's just a quick overview to show you around the console again.

97
00:06:30.970 --> 00:06:34.180
And we'll get into some more hands on labs later in this section.

