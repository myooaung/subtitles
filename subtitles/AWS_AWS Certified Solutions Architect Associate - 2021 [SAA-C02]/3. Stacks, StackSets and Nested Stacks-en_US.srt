1
00:00:02,640 --> 00:00:07,650
So you should be quite familiar with stacks by now, but we're also going to talk about tax sets and

2
00:00:07,650 --> 00:00:09,320
nested stacks in this section.

3
00:00:09,600 --> 00:00:16,470
So just as a reminder, the stack is the deployed resources based on a template and you create update

4
00:00:16,470 --> 00:00:21,780
and delete stacks using your templates and you can deploy them through the management console, the

5
00:00:21,780 --> 00:00:23,520
Seelie or the APIs.

6
00:00:24,330 --> 00:00:30,530
Now, if any errors do occur during stack creation by default, automatic rollback is enabled.

7
00:00:30,750 --> 00:00:35,460
And just to understand, you do get charged for resources provisioned even if you roll back.

8
00:00:37,110 --> 00:00:46,150
So understand sets, stack sets allow you to create update and delete stacks across accounts and regions.

9
00:00:46,440 --> 00:00:55,020
So that means you can have multiple accounts across multiple regions and you can still using a single

10
00:00:55,020 --> 00:00:59,460
template, actually update stacks across those accounts and regions.

11
00:00:59,820 --> 00:01:01,910
And you can do that with a single operation.

12
00:01:02,760 --> 00:01:08,490
So you use an administrator account and you define and manage your cloud formation template and then

13
00:01:08,490 --> 00:01:13,710
use that as the basis for provisioning stacks into target accounts across different regions.

14
00:01:14,400 --> 00:01:21,240
The administrator account is the account in which you create the stacks and stacks is managed by signing

15
00:01:21,240 --> 00:01:23,700
in to the administrator account in which it was created.

16
00:01:23,910 --> 00:01:29,700
The target account is then the account into which you create update or delete a stack in your stack

17
00:01:29,700 --> 00:01:30,090
set.

18
00:01:30,990 --> 00:01:32,970
So moving on to nested stacks.

19
00:01:33,240 --> 00:01:39,980
So this is a way that you can allow the reuse of cloud formation code for common use cases.

20
00:01:40,530 --> 00:01:46,320
So, for example, you might have a separate stack for your load balancer, your web server and your

21
00:01:46,320 --> 00:01:53,340
application server, and then you join those by using references between the stacks and build them into

22
00:01:53,340 --> 00:01:54,210
a hierarchy.

23
00:01:54,360 --> 00:01:56,160
So that's it for nested stacks.

24
00:01:56,340 --> 00:01:59,250
In the next lesson, we're going to look at change sets.

