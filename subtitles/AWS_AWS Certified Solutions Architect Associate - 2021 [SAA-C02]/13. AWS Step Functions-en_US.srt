1
00:00:02,990 --> 00:00:08,600
AWS Step Functions makes it easy to coordinate the components of distributed applications as a series

2
00:00:08,600 --> 00:00:09,880
of steps.

3
00:00:09,950 --> 00:00:16,610
And it does so in a visual workflow so you can define your code and then you can see for a visual workflow

4
00:00:17,060 --> 00:00:23,390
what the execution of that code looks like what we're going to do in this lab is just run a very simple

5
00:00:24,200 --> 00:00:27,410
Hello World application using the Get Started button.

6
00:00:27,410 --> 00:00:34,130
So if you're on the splash screen of AWS Step Functions you'll see this button here get started let's

7
00:00:34,130 --> 00:00:41,090
just click on that and you can now see the code and the code is written in Amazon states language and

8
00:00:41,120 --> 00:00:45,770
as you can see on the left hand side here you have the code and then on the right you have the graph

9
00:00:45,800 --> 00:00:49,000
which shows you a visual workflow.

10
00:00:49,310 --> 00:00:51,260
We're not gonna change any of this code.

11
00:00:51,260 --> 00:00:56,740
We're just going to click next and I am role can then be specified or in this case we're just going

12
00:00:56,740 --> 00:00:57,680
to leave

13
00:00:57,680 --> 00:01:03,290
Step Functions to create one for us and we can choose create state machine.

14
00:01:03,290 --> 00:01:11,850
Once it's created it then offers to run a new execution and in that execution we have some code and

15
00:01:11,870 --> 00:01:15,290
I'm just gonna copy that's on my clipboard so we can rerun this as well.

16
00:01:15,410 --> 00:01:18,320
And this just says is hello world example code on true.

17
00:01:18,320 --> 00:01:20,410
So the code is looking for this value.

18
00:01:20,720 --> 00:01:21,710
So let's click.

19
00:01:21,710 --> 00:01:30,530
Start execution and you can now see the visual workflow here and it's got to a point where it's waiting

20
00:01:30,530 --> 00:01:36,890
for three seconds and then it's going to continue and complete very quickly.

21
00:01:37,040 --> 00:01:38,380
So that's what it looks like.

22
00:01:38,380 --> 00:01:41,400
So you can actually see your applications executing.

23
00:01:41,660 --> 00:01:45,570
You get the input here and you get whatever output here.

24
00:01:45,830 --> 00:01:48,590
You can then just go and rerun that execution.

25
00:01:48,590 --> 00:01:53,240
We can do the same as you already got the code in there so you can start execution and just see that

26
00:01:53,240 --> 00:01:54,890
run through again.

27
00:01:54,890 --> 00:02:01,180
Now if you scroll down you can also get a history of your execution events back at the top here.

28
00:02:01,190 --> 00:02:04,970
You can then go to activities and create an activity.

29
00:02:04,970 --> 00:02:11,270
And this enables you to have tasks in the state machine where the work is performed by EC2,

30
00:02:11,750 --> 00:02:14,670
mobile devices, and pretty much from anywhere.

31
00:02:14,690 --> 00:02:20,240
As I mentioned at the beginning of the section, AWS are recommending that you use Step Functions instead

32
00:02:20,240 --> 00:02:24,390
of simple workflow service for new applications.

33
00:02:24,470 --> 00:02:30,710
So unless you have a specific requirement for SWF, Step Functions is likely to be the answer in any

34
00:02:30,710 --> 00:02:34,370
question that asks for coordinated workflows.

35
00:02:34,370 --> 00:02:38,380
Also look out on the exam for mention of a visual workflow.

36
00:02:38,390 --> 00:02:44,420
Now if you have human interaction with your orchestration or your workflow you then might have to go

37
00:02:44,420 --> 00:02:47,150
to SWF and we're going to talk about that in the next lab.

