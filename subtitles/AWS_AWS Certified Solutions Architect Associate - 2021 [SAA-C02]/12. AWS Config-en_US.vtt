WEBVTT
1
00:00:02.560 --> 00:00:05.590
Hi, guys, this is a quick lesson on AWB conflict.

2
00:00:05.860 --> 00:00:11.530
This is a service that may come up for maybe one question in your exam, but it's definitely worth covering

3
00:00:11.530 --> 00:00:16.180
off just so that you know what it is, because it's also a useful tool that you might come across in

4
00:00:16.180 --> 00:00:17.340
your day to day work.

5
00:00:17.350 --> 00:00:21.000
AWB conflict gives you a resource inventory.

6
00:00:21.010 --> 00:00:25.780
So what it does is it will inventory your resources.

7
00:00:26.020 --> 00:00:28.740
And what we're talking about here is their configuration.

8
00:00:28.750 --> 00:00:32.380
So it creates a configuration item for each of your resources.

9
00:00:32.770 --> 00:00:34.920
And these are just a few examples services.

10
00:00:34.930 --> 00:00:39.240
This could include pretty much anything in AWB and within your account.

11
00:00:39.400 --> 00:00:46.150
So it creates a configuration history for your resources in AWB.

12
00:00:46.930 --> 00:00:53.660
And what it can also do then is alert you if your resources change from that state.

13
00:00:53.710 --> 00:00:55.840
So we call that the desired state.

14
00:00:55.840 --> 00:00:58.930
So we create a desired state in AWB config.

15
00:00:58.930 --> 00:01:04.590
We say, for instance, we want to make sure that our security group has a certain rule that blocks

16
00:01:04.590 --> 00:01:11.680
support or Amazon EC2 instance must have a certain configuration applied for monitoring.

17
00:01:12.250 --> 00:01:19.960
And then we can check periodically to make sure that our resources do match that desired configuration.

18
00:01:20.260 --> 00:01:26.650
And if they don't match that desired configuration, then we can actually send an alert through S.A.C.

19
00:01:26.650 --> 00:01:31.640
and we can also perform remediation actions to try and rectify the issue.

20
00:01:31.810 --> 00:01:38.530
Now the configuration is stored in S3, so the configuration items for each of your resources, all

21
00:01:38.530 --> 00:01:44.190
that history is actually stored in S3 and we'll have a look into an extra bucket where this information

22
00:01:44.210 --> 00:01:47.510
stored when we do the lab after the ferry section.

23
00:01:47.680 --> 00:01:54.670
So when configuration changes occur, that information gets sent to AWEX config and then config will

24
00:01:54.670 --> 00:02:01.840
evaluate the configuration against the desired configurations that you have configured within HWC config.

25
00:02:01.850 --> 00:02:07.610
And then after it's evaluated the configuration, it will display that information and dashboards.

26
00:02:07.610 --> 00:02:12.300
So you can see it with Benowitz config and then also it can send it via S.A.S..

27
00:02:12.490 --> 00:02:18.580
So a bit more background on config conflicts, a fully managed service that provides you with an AWB

28
00:02:18.580 --> 00:02:25.840
resource inventory configuration, history and configuration change notifications for security and governance

29
00:02:26.560 --> 00:02:32.560
so you can discover existing resources, export a complete inventory of your resources with all configuration

30
00:02:32.560 --> 00:02:37.750
details, and also determine how a resource was configured at any point in time.

31
00:02:37.750 --> 00:02:44.770
So you can go back in time and look at how was this particular Ekta instance configured when some kind

32
00:02:44.770 --> 00:02:46.060
of service issue occurred.

33
00:02:46.060 --> 00:02:51.880
You could use these capabilities to enable compliance auditing, security analysis, resource change,

34
00:02:51.880 --> 00:02:58.110
tracking and troubleshooting so you can assess, audit and evaluate configurations of your resources.

35
00:02:58.510 --> 00:03:02.430
So really useful for configuration management as part of an Excel program.

36
00:03:03.310 --> 00:03:07.690
Now, you might be wondering what is the difference then between config and cloud trail?

37
00:03:07.690 --> 00:03:09.580
Because we talked a bit about auditing here.

38
00:03:10.060 --> 00:03:12.370
So Cloud Trail is also about auditing.

39
00:03:12.760 --> 00:03:20.890
Remember Kotaro records user API activity on your accounts, so it allows you to see who did what at

40
00:03:20.890 --> 00:03:26.680
a point in time, whereas config records point in time, configuration details for your resources as

41
00:03:26.680 --> 00:03:27.940
configuration items.

42
00:03:28.840 --> 00:03:35.770
So you use config to answer the question, what did my resource look like at a specific point in time?

43
00:03:36.160 --> 00:03:42.070
Whereas you use cloud trail to answer the question, who made an API call to modify this resource?

44
00:03:42.370 --> 00:03:47.860
So you might use these two tools together, but they do slightly different things.

45
00:03:47.950 --> 00:03:49.450
So hopefully that clears that up.

46
00:03:50.140 --> 00:03:55.600
And what we'll do next is we're going to go into the management console and we're going to have a look

47
00:03:55.600 --> 00:04:00.040
at AWB config and we're going to set up a simple rule and see it in action.

