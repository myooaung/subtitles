1
00:00:02,120 --> 00:00:02,720
Hi guys.

2
00:00:02,720 --> 00:00:08,720
The next item on our list for securing our account is to create individual IAM users.

3
00:00:08,720 --> 00:00:14,090
Now what this means is we're going to create a user account that we can log on which isn't the root account.

4
00:00:14,150 --> 00:00:17,410
Now I keep telling you about the root account and how important that is.

5
00:00:17,510 --> 00:00:22,920
And I just want to show you an article here and all the links that I show you in this course.

6
00:00:23,030 --> 00:00:28,820
And any code that we use is going to be in the course downloads so you can find this link there.

7
00:00:28,820 --> 00:00:35,330
Otherwise just search for AWS tasks that require AWS account root user credentials and you can see

8
00:00:35,330 --> 00:00:37,200
some of the things that require root.

9
00:00:37,310 --> 00:00:43,880
So changing support plans closing the accounts there's billing changes using the billing and cost management

10
00:00:43,880 --> 00:00:45,290
console and so on.

11
00:00:45,320 --> 00:00:48,300
So have a look through those and try and understand what they are.

12
00:00:48,440 --> 00:00:52,930
But for the most part we're going to just be logging on as an individual IAM user.

13
00:00:53,000 --> 00:00:58,430
We can click the down arrow and choose manage users or we can just go up to users here.

14
00:00:58,430 --> 00:00:59,870
It's the same thing.

15
00:00:59,870 --> 00:01:03,140
And what we want to do is add a user.

16
00:01:03,140 --> 00:01:10,220
Now I'm just going to call this Neal and then we have two access types programmatic access is where

17
00:01:10,220 --> 00:01:13,640
we create an access key I.D. and a secret access key.

18
00:01:13,670 --> 00:01:16,640
So these are used for the AWSAPI.

19
00:01:16,640 --> 00:01:23,960
The CLI the SDK and other development tools I do want to be able to use programmatic access so I'm

20
00:01:23,960 --> 00:01:25,240
going to enable that.

21
00:01:25,520 --> 00:01:30,980
The other type of access is management console access and this is where we have a username and password

22
00:01:30,980 --> 00:01:33,560
to log in and use the management console.

23
00:01:33,560 --> 00:01:35,350
So you don't have to have both of these.

24
00:01:35,420 --> 00:01:38,300
You can have one or the other or both together.

25
00:01:38,690 --> 00:01:42,890
We can then choose to auto generate a password or set a custom password.

26
00:01:42,950 --> 00:01:49,480
In this case I'm going to set my own password and I'm going to select this option because I don't want

27
00:01:49,480 --> 00:01:58,250
to have to reset it then go next to permissions we have the option to create a group and I do want to

28
00:01:58,250 --> 00:02:04,100
do this I want to create a group and I want to give that group administrator access I'm going to call

29
00:02:04,100 --> 00:02:12,740
the group AWS-Admins and so this will create a group called a AWS-Admins and it will add the

30
00:02:12,740 --> 00:02:18,380
user that we're creating to that group we're going to select the administrator access policy and this

31
00:02:18,380 --> 00:02:23,330
is going to give full administrative privileges to our user through the group.

32
00:02:23,330 --> 00:02:30,260
Now if you go down and look at the JSON code here JSON stands for JavaScript object notation and it's

33
00:02:30,260 --> 00:02:32,990
the type of code that you write these policy statements in.

34
00:02:33,230 --> 00:02:39,770
There's always a version then there's a statement and then you can see the effect is to allow the action

35
00:02:40,070 --> 00:02:42,380
and the star means a wild card.

36
00:02:42,380 --> 00:02:48,300
So anything, and then the resource is a star also which means any resource.

37
00:02:48,320 --> 00:02:52,490
So this allows any action on any resource.

38
00:02:52,490 --> 00:02:58,970
So it's a very privileged policy and you need to be careful who this is assigned to.

39
00:02:58,970 --> 00:03:04,550
Now that we have our policy selected in our group name instead we can just choose create group.

40
00:03:04,550 --> 00:03:11,160
And so we're now creating our user and we're creating our group we can choose to assign tags which are

41
00:03:11,160 --> 00:03:16,960
key value pairs and you can use this for assigning metadata to resources in AWS.

42
00:03:17,070 --> 00:03:23,010
I'm just gonna leave it blank for now and then we can go to review and we can see the user name the

43
00:03:23,040 --> 00:03:29,490
access types that we've assigned that we've set a custom password and we can see the group that we've

44
00:03:29,500 --> 00:03:35,340
enabled and now we're just going to choose crate user and the user has been created.

45
00:03:35,340 --> 00:03:41,340
Now you'll see that you get an access key idea and a secret access key really important thing to note

46
00:03:41,850 --> 00:03:46,540
is firstly these are very security sensitive.

47
00:03:46,550 --> 00:03:52,160
Anybody who has these keys will be able to do whatever you have privileges to do in your account.

48
00:03:52,160 --> 00:03:58,100
So if someone got ahold of this access key and secret I.D. they would be able to do almost anything

49
00:03:58,100 --> 00:03:58,760
in the account.

50
00:03:58,760 --> 00:04:04,070
Anything that this user has privileges to which due to the policy we just assigned through the group

51
00:04:04,640 --> 00:04:07,200
is going to be a lot of privileges.

52
00:04:07,200 --> 00:04:10,960
The other thing you need to know is you can only see this once.

53
00:04:11,040 --> 00:04:18,510
So this secret access key is only generated at creation time so it's only visible at creation time.

54
00:04:18,510 --> 00:04:22,790
So what you need to do is actually take a copy of this.

55
00:04:23,070 --> 00:04:26,850
Keep it somewhere very secure and make sure no one gets access to it.

56
00:04:27,360 --> 00:04:31,110
Now I'm not worried about you guys seeing it because I'm recording this and I'm just going to delete

57
00:04:31,110 --> 00:04:35,980
my access key I.D. and create a new one well before I release this course.

58
00:04:36,060 --> 00:04:39,620
But in normal circumstances you won't want to share this.

59
00:04:39,690 --> 00:04:46,230
I've copied my access key idea and secret access key and now I can choose close so let's just have a

60
00:04:46,230 --> 00:04:47,840
look at what we've created.

61
00:04:48,030 --> 00:04:52,260
We've got a group and the group is called AWS-Admins.

62
00:04:52,260 --> 00:04:54,570
And that group has the following permissions.

63
00:04:54,570 --> 00:04:57,440
It has a policy for administrator access.

64
00:04:57,570 --> 00:05:02,190
And as we've seen that policy has very extensive permissions.

65
00:05:02,190 --> 00:05:04,630
We can do anything on any resource.

66
00:05:04,980 --> 00:05:12,140
We then created a user called Neal and that user is a member of this group.

67
00:05:12,150 --> 00:05:17,700
So when you see permissions here you can see that the user has these permissions attached through the

68
00:05:17,700 --> 00:05:18,170
group.

69
00:05:18,330 --> 00:05:21,100
And you could then go over to access advisor.

70
00:05:21,120 --> 00:05:25,890
What this does is it shows you the service permissions that are granted to this user.

71
00:05:25,890 --> 00:05:30,150
So in this case it's a very extensive list obviously because of the group and the policy that we've

72
00:05:30,150 --> 00:05:35,760
assigned to this user and actually tells you which policy grants the permissions in this case is just

73
00:05:35,760 --> 00:05:36,450
one policy.

74
00:05:36,480 --> 00:05:38,960
But in many cases it will be lots of different policies.

75
00:05:38,970 --> 00:05:43,170
So this gives you a good idea of where the permissions have been granted from.

76
00:05:43,170 --> 00:05:48,390
That's all we need to do now but what we can do is choose sign out and we're going to sign back into

77
00:05:48,390 --> 00:05:49,290
the console.

78
00:05:49,290 --> 00:05:54,360
Now in this case we're going to choose sign into a different account and we're going to enter the account

79
00:05:54,390 --> 00:05:58,750
alias which I said earlier as DCTLabs and choose next.

80
00:05:58,920 --> 00:06:04,230
We now get this screen again where we've got the accounts I.D. or alias which is DCT labs and we get

81
00:06:04,230 --> 00:06:05,910
to put in our user name.

82
00:06:05,910 --> 00:06:09,900
So I'm going to put in my username and my password and sign in.

83
00:06:09,900 --> 00:06:10,470
So that's it.

84
00:06:10,470 --> 00:06:16,560
We've now logged in with our new user account and if we go to Identity and Access Management we can

85
00:06:16,560 --> 00:06:21,390
now see that we've created an individual IAM user and use the group to assign permissions.

86
00:06:21,390 --> 00:06:23,370
So we've got a couple more nice texts.

87
00:06:23,400 --> 00:06:27,960
The next thing we need to do is apply an IAM password policy and we're gonna have a look at that in

88
00:06:27,960 --> 00:06:28,560
the next lab.

