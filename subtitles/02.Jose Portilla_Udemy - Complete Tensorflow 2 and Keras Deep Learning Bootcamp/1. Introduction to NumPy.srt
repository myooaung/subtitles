1
00:00:05,610 --> 00:00:09,810
Welcome everyone to this section of the course on nut pie in this lecture.

2
00:00:09,810 --> 00:00:13,680
We're going to give you an overview of what we're going to cover in this section of the course as well

3
00:00:13,680 --> 00:00:20,190
as give you a basic brief overview an introduction to the none high library so as mentioned the section

4
00:00:20,190 --> 00:00:24,580
of the course is going to focus on just a quick crash course on Empire basics.

5
00:00:24,600 --> 00:00:26,320
We're going to cover the following topics.

6
00:00:26,490 --> 00:00:28,910
What is an empire and why we use the Empire.

7
00:00:28,950 --> 00:00:35,790
Then we'll talk about actually using empire res and matrices how to index and slice information or elements

8
00:00:35,880 --> 00:00:37,420
out of those arrays or matrices.

9
00:00:37,590 --> 00:00:42,570
Various nut pie operations and we'll finish this off with a set of exercise questions and then go through

10
00:00:42,570 --> 00:00:44,200
those solutions.

11
00:00:44,250 --> 00:00:51,240
So what actually is num pi num pi stands for numerical python and it's an open source numerical library

12
00:00:51,480 --> 00:00:57,270
used for working with mathematical functions of multidimensional array and Matrix data structures.

13
00:00:57,270 --> 00:01:02,550
It's already installed in our environment and it's actually very common library use in data science

14
00:01:02,610 --> 00:01:07,510
in machine learning so why would we actually want to use num pi.

15
00:01:07,570 --> 00:01:11,530
We mentioned that we're going to be learning how to use num pi arrays and matrices but if you're already

16
00:01:11,530 --> 00:01:16,540
familiar with Python then you know that Python actually has a built in list structure that can act as

17
00:01:16,540 --> 00:01:17,320
an array.

18
00:01:17,380 --> 00:01:21,370
So what do we actually need num pi instead of just using the core Python list.

19
00:01:21,760 --> 00:01:26,340
Well no pi arrays use less memory than a normal Python list.

20
00:01:26,380 --> 00:01:31,900
A normal Python list is actually a group of pointers to separate Python objects for example pointing

21
00:01:32,170 --> 00:01:37,650
to the individual Python no objects inside of the list a num PIRA.

22
00:01:37,730 --> 00:01:43,940
It's designed to be an array of uniform values without using extra memory space for type pointers.

23
00:01:43,940 --> 00:01:48,740
This makes it much more efficient and actually use a lot less memory than a normal Python list.

24
00:01:49,970 --> 00:01:56,210
Num pi can also read in information faster than normal python and has lots convenient broadcasting operations

25
00:01:56,570 --> 00:01:59,460
that can be performed across array dimensions.

26
00:01:59,540 --> 00:02:04,190
So as we learn more about an umpire race will begin to see capabilities that they have that a normal

27
00:02:04,190 --> 00:02:10,500
Python list doesn't later in the course we're going to be using them praise for quick data generation

28
00:02:10,950 --> 00:02:15,090
and many tensor flow functions look extremely similar to number of functions.

29
00:02:15,090 --> 00:02:20,250
So learning them pie sets us up for a great foundation for working of data later on in the course.

30
00:02:20,760 --> 00:02:22,840
OK let's go ahead and get started.

31
00:02:22,890 --> 00:02:23,970
I'll see you at the next lecture.
