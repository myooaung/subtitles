1
00:00:05,390 --> 00:00:11,730
Welcome back everyone to this lecture on Seabourn seaborne is a visualization library built using map

2
00:00:11,730 --> 00:00:17,760
plot lib that focuses on creating standard statistical plots with a simple one line function call in

3
00:00:17,770 --> 00:00:21,120
a works especially well with the panel's data frame.

4
00:00:21,120 --> 00:00:26,070
This comes at the cost of less customization options than pure map plot lib.

5
00:00:26,070 --> 00:00:30,900
So keep in mind you're not going to be able to customize every seaborne plot exactly how you see fit

6
00:00:31,230 --> 00:00:33,280
through straight seaborne parameter calls.

7
00:00:33,300 --> 00:00:39,300
Sometimes you'll have to reach in to map pup lib to actually work with the plot for further customizations

8
00:00:40,750 --> 00:00:45,760
so as I mentioned you can still affect plot attributes created and Seabourn by adding pure matte plot

9
00:00:45,770 --> 00:00:51,520
lib the pipe plot calls for more information on the full depth of the seaborne library you can visit

10
00:00:51,520 --> 00:00:55,470
the official online documentation at seaborne the PI data the org.

11
00:00:55,570 --> 00:01:00,790
For now let's head over to a Jupiter notebook and show the very basics of how to create the school plots

12
00:01:00,850 --> 00:01:02,040
with the seaborne library.

13
00:01:02,050 --> 00:01:03,550
Let's jump to a notebook now.

14
00:01:03,560 --> 00:01:07,490
OK here we are at this Jupiter notebook to begin working with Seabourn.

15
00:01:07,540 --> 00:01:09,400
What we first need is a data set.

16
00:01:09,400 --> 00:01:16,270
So if you actually look under the visualization Crash Course folder and then open up Seabourn basics.

17
00:01:16,270 --> 00:01:18,490
The notebook that corresponds of this lecture.

18
00:01:18,700 --> 00:01:21,380
We have a full rundown on the data we're going to be using.

19
00:01:21,550 --> 00:01:26,860
And we're actually going to be using a medical data set that has a bunch of information about patients

20
00:01:26,980 --> 00:01:30,530
and then whether or not they had the presence of heart disease.

21
00:01:30,730 --> 00:01:36,100
So we can see here we have their age years their sex male or female chest pain type cholesterol levels

22
00:01:36,130 --> 00:01:37,060
et cetera.

23
00:01:37,090 --> 00:01:41,160
So if you want information on what all these columns represent the information is right here for you.

24
00:01:41,200 --> 00:01:45,640
But keep in mind this data is located under our overall data folder.

25
00:01:45,710 --> 00:01:50,510
You're gonna make sure to read that incorrectly and then you should be able to read in that data frame.

26
00:01:50,590 --> 00:01:54,370
Pay careful close attention to your actual full file path when reading it in.

27
00:01:54,730 --> 00:02:03,380
So I'm going to say my data frame is equal to PD read CSB and I'm going to since I'm located in the

28
00:02:03,380 --> 00:02:10,130
exact same location as the actual Seabourn basics notebook have to go out one generation to data and

29
00:02:10,130 --> 00:02:18,290
this file's called Heart that CSP to begin working to see more than we import seaborne as S and S So

30
00:02:18,290 --> 00:02:21,220
let's discuss just a few of the basic plot types.

31
00:02:21,400 --> 00:02:25,140
There's a distribution plot which is essentially a histogram.

32
00:02:25,310 --> 00:02:34,190
And if we call S.A. that this plot we can call it on a single column and it will show you the distribution

33
00:02:34,250 --> 00:02:34,790
of the data.

34
00:02:35,150 --> 00:02:40,800
So if I say DFA age this will show me the actual distribution of the overall H data.

35
00:02:40,970 --> 00:02:46,430
It has both a kernel density estimation which is this line essentially estimating what a probability

36
00:02:46,430 --> 00:02:52,030
function would look like for this data and then it has a histogram if you want to turn off this case

37
00:02:52,040 --> 00:02:59,540
the E line where you can do is say Katie is equal to False run that and then here we see our actual

38
00:02:59,660 --> 00:03:04,430
essentially histogram and histogram is essentially just a count per bin.

39
00:03:04,790 --> 00:03:08,110
So I can see here that have these what look like columns.

40
00:03:08,180 --> 00:03:16,340
Well each of these is actually a bin and the y axis is defined by how many counts fall for the left

41
00:03:16,340 --> 00:03:18,640
side and right side of that bin.

42
00:03:18,650 --> 00:03:23,680
So for example here on this kind of really tall bend the tallest bend there is.

43
00:03:23,810 --> 00:03:30,270
It looks like there's about a little over 60 count and that means that for this range in the bin.

44
00:03:30,290 --> 00:03:35,430
So looks like ages maybe something like 58 up to 60.

45
00:03:35,430 --> 00:03:37,490
There happens to be around 60 people there.

46
00:03:37,610 --> 00:03:38,700
Now for what.

47
00:03:38,750 --> 00:03:45,300
I can't affect the bins by saying no beans is equal to maybe I only want to beans.

48
00:03:45,410 --> 00:03:49,880
In which case if I run that now I just have two beans which essentially goes from a little less than

49
00:03:49,880 --> 00:03:56,180
30 to kind of midway around maybe fifty four and the count there is somewhere between one hundred and

50
00:03:56,180 --> 00:03:57,640
one twenty five points.

51
00:03:57,770 --> 00:04:03,800
So obviously depending on the size here dataset you can affect this number of beans which in turn affects

52
00:04:03,800 --> 00:04:06,110
the actual with the beans.

53
00:04:06,110 --> 00:04:11,000
Now keep in mind if you start asking for too many beans for example let's make this something like beans

54
00:04:11,000 --> 00:04:11,970
is equal to 50.

55
00:04:12,140 --> 00:04:17,330
You'll end up with lots of empty spots because there happens to be no data points for that particular

56
00:04:17,420 --> 00:04:22,320
bean OK now if you do want to change the size of this plot.

57
00:04:22,590 --> 00:04:30,600
Well you can do is make a call right before this seaborne using map plot line by saying PDT that figure

58
00:04:31,230 --> 00:04:36,810
which essentially calls the underlying figure that seaborne is working with and then say fig size is

59
00:04:36,810 --> 00:04:38,040
equal to.

60
00:04:38,040 --> 00:04:41,440
And then you pass in a tuple of how large you want the figure.

61
00:04:41,580 --> 00:04:43,600
So I can say something like 12 by eight.

62
00:04:43,650 --> 00:04:49,440
And the story sizes too tall by eight inches and we can kind of stretch it out if we want to.

63
00:04:49,440 --> 00:04:55,620
So for example if I made this three by 15 you can see how that stretched out.

64
00:04:55,620 --> 00:05:01,140
So this three representing kind of along the x axis is 50 representing the Y.

65
00:05:01,140 --> 00:05:01,650
Okay.

66
00:05:01,800 --> 00:05:03,210
So other things we can do here.

67
00:05:03,270 --> 00:05:08,230
Let me turn this back into a more normal looking plot just say eight by eight.

68
00:05:08,250 --> 00:05:09,570
Other things I can do here.

69
00:05:09,570 --> 00:05:14,730
In fact we can make it a little smaller eight by four so other things I can do here are set the color

70
00:05:15,000 --> 00:05:16,650
so I can set color strings.

71
00:05:16,650 --> 00:05:21,930
Just we mentioned before so I can say something like the color is red and I can also play around the

72
00:05:21,930 --> 00:05:27,300
bin size if you do ship type here and expand on this it will show you the various other things you can

73
00:05:27,300 --> 00:05:32,430
do such as different fittings for the KDE e different labels et cetera.

74
00:05:32,490 --> 00:05:35,930
But keep in mind most of this is designed to be just very simple calls.

75
00:05:35,940 --> 00:05:42,360
In fact you'll notice that the X label or the label for the x axis was automatically determined from

76
00:05:42,360 --> 00:05:44,750
the name of the data frames column.

77
00:05:44,760 --> 00:05:50,330
So now let's go ahead and show you a counter plot since we'll be doing that as well if I take a look

78
00:05:50,390 --> 00:05:56,150
at the head of my data frame again here maybe I'm interested in the account of the label.

79
00:05:56,150 --> 00:06:01,260
Essentially the target whether or not they have presence of heart disease per sex male or female.

80
00:06:01,670 --> 00:06:11,340
So I can say S.A. count plot state that I want the X to be equal to the sex feature and then say my

81
00:06:11,340 --> 00:06:14,820
data is equal to the state of frame def run that.

82
00:06:14,850 --> 00:06:21,420
And essentially what this does this is essentially a group by whatever you have on the x axis for a

83
00:06:21,510 --> 00:06:22,650
count call.

84
00:06:22,650 --> 00:06:27,590
So this shows you the counts for in this case x is equal to sex.

85
00:06:27,600 --> 00:06:32,130
So how many males you haven't dataset versus how many females then we can do this same thing for the

86
00:06:32,130 --> 00:06:36,230
target which is really important actually later on in machine learning.

87
00:06:36,240 --> 00:06:37,100
We'll see that.

88
00:06:37,200 --> 00:06:40,010
It's usually a good if you have balanced classes.

89
00:06:40,020 --> 00:06:44,670
So here I have roughly the same amount of zero targets as I have one targets.

90
00:06:44,910 --> 00:06:51,150
Then we can do other things like CPE which if you go back to the actual notebook you can look this up

91
00:06:51,420 --> 00:06:52,950
and see that it's like chest pain type.

92
00:06:52,950 --> 00:06:57,040
So there's actually various types of chest pains and we can see the count for that as well.

93
00:06:57,060 --> 00:07:02,710
Now maybe you're interested in the types of chest pains not just the count but count per six.

94
00:07:02,790 --> 00:07:09,870
So it's really cool about Seabourn is you can add this hue call and add another categorical feature

95
00:07:09,960 --> 00:07:18,090
such as sex and it will then divvy this up not just by the pain type in their chest but by the hue.

96
00:07:18,150 --> 00:07:18,870
So I'll show you.

97
00:07:18,900 --> 00:07:20,250
For both male and female.

98
00:07:20,400 --> 00:07:27,430
Per C.P. OK now the last thing I want to show you is that you can actually affect the palate here.

99
00:07:27,480 --> 00:07:35,070
So if you don't like these colors you can say palate is equal to and then you can pass in a string code

100
00:07:35,190 --> 00:07:39,110
that corresponds to the color mappings that are available in map plot lib.

101
00:07:39,510 --> 00:07:47,190
And if you take a look again at our notebook and scroll down we discuss this right here where we essentially

102
00:07:47,190 --> 00:07:52,530
provide you a link to all the color mappings so you can add colors based on the color maps sometimes

103
00:07:52,530 --> 00:07:56,040
certain color maps don't make sense for every dataset you want to be careful.

104
00:07:56,100 --> 00:08:00,960
For example here it looks like we're dealing with categorical data so it might make sense to deal with

105
00:08:01,110 --> 00:08:03,060
category based color mappings.

106
00:08:03,120 --> 00:08:07,680
So if you come over here to choosing color maps and map lib as you mentioned Seabourn is built directly

107
00:08:07,680 --> 00:08:08,680
off the map plot lib.

108
00:08:08,910 --> 00:08:10,540
Simply scroll down here.

109
00:08:10,620 --> 00:08:11,760
Here it sees all the code.

110
00:08:11,760 --> 00:08:14,270
But this is actually the colors that we can use.

111
00:08:14,280 --> 00:08:18,720
So there's sequential color maps there's two types of sequential color maps there's diverging color

112
00:08:18,720 --> 00:08:23,250
maps that go from one color and diverge into what is kind of like an opposite color.

113
00:08:23,250 --> 00:08:24,780
There's cyclic color mappings.

114
00:08:24,780 --> 00:08:26,210
There's qualitative color maps.

115
00:08:26,220 --> 00:08:30,420
These would probably be good choices for things like categories and then they're just miscellaneous

116
00:08:30,420 --> 00:08:31,200
color mappings.

117
00:08:31,200 --> 00:08:34,450
So here are all the string codes that correspond to those as well.

118
00:08:34,530 --> 00:08:36,890
And you're free to choose whatever you want.

119
00:08:37,020 --> 00:08:41,850
So we'll come back to Seabourn basics and recall for a lot of these seaborne commands you affect that

120
00:08:41,850 --> 00:08:43,420
by choosing palette.

121
00:08:43,500 --> 00:08:43,830
All right.

122
00:08:43,830 --> 00:08:47,880
The next plot type I want to share with you is known as a box plot.

123
00:08:47,880 --> 00:08:52,650
And I'm going to quickly explain what the box plot is in our Seabourn basics notebook.

124
00:08:52,650 --> 00:08:54,960
We have this little image here of a single box plot.

125
00:08:55,350 --> 00:08:59,040
So if you were to know what the box plot is go ahead and kind of fast forward for this part.

126
00:08:59,040 --> 00:09:04,470
But I'm going to quickly explain the basics of what this is trying to display visually with the box

127
00:09:04,470 --> 00:09:10,140
plot attempts to do is show you the distribution and specifically the distribution across different

128
00:09:10,140 --> 00:09:12,240
categorical features.

129
00:09:12,690 --> 00:09:17,640
So here we see just a single box plot which shows just a single distribution.

130
00:09:17,640 --> 00:09:22,320
And what this does is it splits up the data into four equal parts.

131
00:09:22,320 --> 00:09:27,830
So here we have these different percentiles and we have right here in the middle.

132
00:09:27,900 --> 00:09:30,720
This what's known as the inter quartile range.

133
00:09:30,810 --> 00:09:39,330
The data points between Q1 and Q3 were Q1 is the 25th percentile in Q3 is the seventy fifth percentile.

134
00:09:39,330 --> 00:09:43,430
So essentially what that means is the middle 50 percent of all points.

135
00:09:43,440 --> 00:09:49,930
So if you had one hundred data points then the middle 50 points are in between somewhere in this box.

136
00:09:50,010 --> 00:09:54,260
This line in the middle the box then splits up all the points and half.

137
00:09:54,360 --> 00:10:00,240
So 50 percent of the points on one side of the median and then the other 50 percent of the points on

138
00:10:00,240 --> 00:10:06,510
the other side of the median then we have these minimum and maximum values which are calculated with

139
00:10:06,510 --> 00:10:07,970
the inter quartile range.

140
00:10:07,980 --> 00:10:13,290
So these are often known as box and whisker plots because we have these whiskers extending off of that

141
00:10:13,350 --> 00:10:20,580
middle 50 percent and this minimum is established as key one minus one point five times this entire

142
00:10:20,580 --> 00:10:26,430
quartile range and then we decide that anything outside that particular minimum or maximum based off

143
00:10:26,430 --> 00:10:29,600
the inter quartile range are going to be outliers.

144
00:10:29,610 --> 00:10:31,950
So then we just label those as points.

145
00:10:31,950 --> 00:10:37,740
OK so let's build our own box plots and see why they can be useful and head back to our notebook that

146
00:10:37,740 --> 00:10:39,190
we've been working with.

147
00:10:39,190 --> 00:10:45,210
What I'm going to do is call S.A. thought box plot

148
00:10:48,380 --> 00:10:56,950
and let's set the x axis to sex and then I want to see the distribution of H across this category.

149
00:10:57,020 --> 00:11:06,110
So again for box plots the Y should be a continuous feature the X should be a categorical one and then

150
00:11:06,110 --> 00:11:15,080
we just need to say data is equal to def and I can see the distribution of the ages across sex 0 and

151
00:11:15,080 --> 00:11:16,420
sex 1.

152
00:11:16,490 --> 00:11:22,570
So here we can see that it looks like sex 1 on average tends to be a little younger than sex 0.

153
00:11:22,580 --> 00:11:25,310
Now what I can also do is start kind of comparing other things.

154
00:11:25,310 --> 00:11:32,010
Maybe I want to compare the actual target against categorical zeros and ones against a feature.

155
00:11:32,030 --> 00:11:38,690
So one of the features could be if we look back a seaborne basics and come up here there's this maximum

156
00:11:38,690 --> 00:11:40,370
heart rate achieved feature.

157
00:11:40,610 --> 00:11:47,330
So let's go ahead and kind of copy that one in we'll come back here and set that as our y z and run

158
00:11:47,330 --> 00:11:48,330
this.

159
00:11:48,620 --> 00:11:53,390
And now we can compare the maximum heart rates achieved for people with the presence of heart disease

160
00:11:53,450 --> 00:11:54,680
versus not having it.

161
00:11:54,830 --> 00:12:00,050
And it looks like there's kind of something different here between them especially between the averages

162
00:12:00,050 --> 00:12:00,460
of them.

163
00:12:00,960 --> 00:12:07,370
OK then maybe I want to add a hue here to see how this is affected by sex and what I can do is say Hugh

164
00:12:07,550 --> 00:12:15,830
is equal to sex and now I can see not just the heart rate per target category but the heart rate per

165
00:12:15,830 --> 00:12:17,510
target category per sex.

166
00:12:17,540 --> 00:12:21,530
So now I have these four box distributions that I can play around with.

167
00:12:21,710 --> 00:12:26,870
And if you want to see more examples of this you can definitely check out the Seabourn documentation.

168
00:12:26,870 --> 00:12:32,230
I want to show you two more things which are scatter plots and then a pair plot which essentially a

169
00:12:32,230 --> 00:12:34,570
scatter plot for your entire data frame.

170
00:12:34,760 --> 00:12:37,130
So let's show you what a scatter plot looks like.

171
00:12:37,130 --> 00:12:40,730
You should already pretty much be familiar scatter plots if you have some interest in machine learning.

172
00:12:41,240 --> 00:12:47,930
But essentially what this does is you pass in some feature along the x axis and some feature along the

173
00:12:47,930 --> 00:12:49,260
y axis.

174
00:12:49,320 --> 00:12:55,310
So I'm studying some sort of beats per minute feature and then stay our data run that.

175
00:12:55,580 --> 00:12:57,170
And here you can see a scatter plot.

176
00:12:57,290 --> 00:13:03,060
So essentially for each data point we just grab these two values and put a point on the map.

177
00:13:03,080 --> 00:13:08,750
So what I can also do is start adding in hues to color points differently based off a category.

178
00:13:08,840 --> 00:13:14,630
Again maybe I can choose sex for this and then I can also do a start playing around the palette so maybe

179
00:13:14,630 --> 00:13:21,170
I want these to be colored differently I can say palette is equal to dark two for instance and then

180
00:13:21,170 --> 00:13:23,510
I can see these results.

181
00:13:23,630 --> 00:13:28,490
So if you're colorblind you may want to play around the palette until you can distinguish the points

182
00:13:28,700 --> 00:13:35,540
correctly and you should also be keeping people that are colorblind in mind when you're performing visualizations

183
00:13:35,660 --> 00:13:37,700
that are dependent on color.

184
00:13:37,700 --> 00:13:42,440
And finally we can do is we can also change the size of these points based off a feature.

185
00:13:42,440 --> 00:13:49,400
So for example I can say size is equal to H and you'll you'll notice that the larger the point is the

186
00:13:49,430 --> 00:13:51,410
older that particular person is.

187
00:13:51,410 --> 00:13:58,340
So as we begin to play around with these visualizations we can actually display a lot of feature dimensions

188
00:13:58,590 --> 00:13:59,530
on a to the plot.

189
00:13:59,990 --> 00:14:06,110
So here we're actually showing not just this beats per minute versus this cholesterol feature but we're

190
00:14:06,110 --> 00:14:08,750
showing also the sex and the age.

191
00:14:08,750 --> 00:14:12,580
So lots of information here on what is actually just a simple scatter plot.

192
00:14:12,650 --> 00:14:14,230
So very useful.

193
00:14:14,270 --> 00:14:17,570
And then last thing I want to show you is something called a pair plot.

194
00:14:17,570 --> 00:14:21,740
Often when you're dealing with a smaller dataset such as the IRS data set.

195
00:14:21,770 --> 00:14:22,960
So let me load that in.

196
00:14:23,000 --> 00:14:33,050
We'll say IRS equal to PD read CSP and then we'll say data Iris that CSB so the iris dataset is probably

197
00:14:33,050 --> 00:14:34,690
something you are familiar with.

198
00:14:34,700 --> 00:14:39,860
Essentially it shows you four features of flower pedals and simple lengths and widths and then the species

199
00:14:39,860 --> 00:14:40,280
of flower.

200
00:14:40,280 --> 00:14:48,230
It actually is what you can do here is you can call S.A. dot pair plot and then you just pass in either

201
00:14:48,230 --> 00:14:52,480
an entire data frame or a subset of data frame columns run that.

202
00:14:52,580 --> 00:14:56,370
And what Seabourn will automatically do for you is the following pair plot.

203
00:14:56,510 --> 00:15:04,370
And what this does is it creates a histogram of each of these features along the diagonal here and then

204
00:15:04,370 --> 00:15:07,540
performs a scatter plot for each comparison.

205
00:15:07,820 --> 00:15:12,920
And you should know that for some of these essentially along a diagonal you should get duplicates.

206
00:15:12,920 --> 00:15:19,010
So for instance here we can see pedal width versus pedal length and it looks like there's a strong relationship

207
00:15:19,010 --> 00:15:19,720
there.

208
00:15:19,790 --> 00:15:24,740
And if you keep going across the diagonal you'll notice the exact same plot pedal with versus pedal

209
00:15:24,740 --> 00:15:25,340
lengths.

210
00:15:25,370 --> 00:15:28,760
So it should essentially be mirrored across this diagonal.

211
00:15:28,760 --> 00:15:30,370
Now there's lots of different options here.

212
00:15:30,380 --> 00:15:31,720
You can play around with.

213
00:15:31,730 --> 00:15:33,440
You can start adding cues.

214
00:15:34,130 --> 00:15:45,470
So for example you can say Give me the Hugh Herr species of flower run that and then you'll see the

215
00:15:45,470 --> 00:15:51,200
actual change the histogram to be K.D. essentially kernel density estimation plots or distributions

216
00:15:51,590 --> 00:15:54,650
of these actual features per species.

217
00:15:54,650 --> 00:15:59,660
So this is a really nice way to quickly get an understanding of all your data but you should keep in

218
00:15:59,660 --> 00:16:06,170
mind that the larger your data frame especially on number of rows and number of columns the larger this

219
00:16:06,170 --> 00:16:10,940
pair plots going to be and it's gonna be harder to interpret and it's gonna take seaborne longer to

220
00:16:10,940 --> 00:16:12,090
actually develop it.

221
00:16:12,170 --> 00:16:18,350
So don't just run pair plot on huge data frames otherwise your duper notebook will be stuck all day

222
00:16:18,470 --> 00:16:24,770
waiting to render this giant plot that may not be useful to you instead maybe try to select subsections

223
00:16:24,890 --> 00:16:29,870
of the plot based on some sort of analysis of the data frame beforehand and keep in mind you can always

224
00:16:29,870 --> 00:16:35,330
just perform your own histogram or on distribution plots or your own scatter plots for any combination

225
00:16:35,330 --> 00:16:36,360
of features you're interested in.

226
00:16:37,060 --> 00:16:38,690
OK thanks.

227
00:16:38,690 --> 00:16:43,220
And coming up next we're going to set you loose on some exercise to test your new Seabourn my pop live

228
00:16:43,220 --> 00:16:43,930
skills.

229
00:16:43,970 --> 00:16:44,510
I'll see you there.
