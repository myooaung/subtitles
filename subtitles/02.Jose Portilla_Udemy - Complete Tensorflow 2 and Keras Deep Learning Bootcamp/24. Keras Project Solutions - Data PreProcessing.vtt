WEBVTT
1
00:00:05.330 --> 00:00:06.470
Welcome back everyone.

2
00:00:06.470 --> 00:00:10.010
In this lecture we're going to do some pre process into the data.

3
00:00:10.070 --> 00:00:15.020
We've already taken care of missing values and converted any categorical values to either continuous

4
00:00:15.020 --> 00:00:16.970
calls or dummy variables.

5
00:00:16.970 --> 00:00:21.230
Now it's time to perform a train test split and normalize the data afterwards.

6
00:00:21.230 --> 00:00:22.590
We can then create the model.

7
00:00:22.670 --> 00:00:24.040
Let's get started okay.

8
00:00:24.050 --> 00:00:25.450
Here we are back at the notebook.

9
00:00:25.490 --> 00:00:31.040
The next step is to import train test split from psychic learn so we can do that simply by saying from

10
00:00:31.100 --> 00:00:34.370
S.K. learn that model selection.

11
00:00:34.370 --> 00:00:37.560
Go ahead and import train test split.

12
00:00:37.940 --> 00:00:43.310
And after we'd done that the next task is to drop the lone status column we created earlier since it's

13
00:00:43.310 --> 00:00:48.080
essentially a duplicate of the loan repaid column and we'll use the loan repaid column since it's already

14
00:00:48.080 --> 00:00:49.650
in zeros and ones.

15
00:00:49.730 --> 00:00:56.960
So we'll do the following we'll say the f is equal to the F thought drop and then say loan underscore

16
00:00:57.290 --> 00:01:02.300
status and then say axis is equal to 1.

17
00:01:02.450 --> 00:01:08.250
OK after that we'll set x and y variables to the values of the feature and the label so we can do that

18
00:01:08.250 --> 00:01:18.260
by simply saying X is equal to D F go ahead and drop loan repaid along axis is equal to 1.

19
00:01:18.450 --> 00:01:27.910
And I just want the values there and then Y is going to be equal to the F loan repaid and then grab

20
00:01:27.910 --> 00:01:32.640
those values and run that all right.

21
00:01:32.650 --> 00:01:37.420
Now this next step is completely optional it really depends on how you're running this.

22
00:01:37.420 --> 00:01:43.140
So if you're not running this on the Google Cloud Platform and instead you're running this locally.

23
00:01:43.240 --> 00:01:48.850
If you have lower ram or you're not using GP you you may want to optionally to save a little bit on

24
00:01:48.850 --> 00:01:49.810
the train time.

25
00:01:49.840 --> 00:01:53.370
Just grab a sample from this entire dataset.

26
00:01:53.410 --> 00:01:57.430
Keep in mind if you only grab a sample you probably won't perform as well because you're not seeing

27
00:01:57.430 --> 00:01:59.170
as many correct examples.

28
00:01:59.170 --> 00:02:05.470
So there are methods here for you to sample and that is you can say the F sample and you can provide

29
00:02:05.500 --> 00:02:10.720
a sampling that you want to take maybe only want to take 10 percent or 20 percent of the data and set

30
00:02:10.720 --> 00:02:12.160
that as your data frame.

31
00:02:12.160 --> 00:02:17.050
Since I'm running this on a GP I'll go ahead and keep the entire data frame but keep in mind if you're

32
00:02:17.050 --> 00:02:21.090
just kind of following along but don't really need to spend all the time with the training.

33
00:02:21.190 --> 00:02:28.740
You could take just a sample of the data next we'll perform a train test split so we can simply say

34
00:02:28.740 --> 00:02:32.610
train test split we'll go ahead and copy this from the doc string.

35
00:02:32.640 --> 00:02:38.120
So scroll down here until you see this result.

36
00:02:38.140 --> 00:02:45.280
Copy and paste that in and we'll go ahead and set our test size to zero point two and to make sure you

37
00:02:45.280 --> 00:02:46.630
get the same split I do.

38
00:02:46.630 --> 00:02:51.420
Go ahead and set your random state to this arbitrary value of 1 0 1.

39
00:02:51.490 --> 00:02:55.900
We run that and now that we've done the train test split we can normalize our data.

40
00:02:56.110 --> 00:03:00.960
We'll go ahead and use them in Max scalar that we've been using throughout the course we'll say from

41
00:03:00.970 --> 00:03:11.870
scalar and pre processing import min max scalar create an instance of that min max scalar and then go

42
00:03:11.870 --> 00:03:13.430
ahead and start transforming your data.

43
00:03:13.460 --> 00:03:23.650
So we'll say X train is equal to scalar and we'll just call a fit transform in one step on our current

44
00:03:23.710 --> 00:03:29.710
x training dataset run that and then for the X test dataset we don't want to fit to that we just want

45
00:03:29.710 --> 00:03:33.540
to transform to prevent any data leakage from our test set.

46
00:03:34.990 --> 00:03:40.780
Okay so we've normalized the data and then up next we'll go ahead and create the model so we'll see

47
00:03:40.780 --> 00:03:44.500
you in the next lecture where we focus on creating the model we'll see other.
