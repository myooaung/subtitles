1
00:00:05,200 --> 00:00:06,320
Welcome back everyone.

2
00:00:06,340 --> 00:00:10,440
In this lecture we're going to go over the solutions to the panel's exercise questions.

3
00:00:10,480 --> 00:00:11,140
Let's get started.

4
00:00:11,840 --> 00:00:13,630
OK here we are at the exercise notebook.

5
00:00:14,080 --> 00:00:16,360
Let's go ahead and begin with the first couple of tasks.

6
00:00:16,360 --> 00:00:24,000
First we want to import pandas so we'll say import pandas as PD run that then the next task is to read

7
00:00:24,000 --> 00:00:27,190
in the African econ crisis that CSP file.

8
00:00:27,430 --> 00:00:32,650
So to do that on ADF is equal to PD that read CSP.

9
00:00:33,250 --> 00:00:39,520
And since I'm located in the exact same location as the CSP file I just need to say a F R and I should

10
00:00:39,520 --> 00:00:41,810
be able to autocomplete this.

11
00:00:41,830 --> 00:00:42,920
So there we go.

12
00:00:43,150 --> 00:00:46,590
And let's display the first five rows the data set.

13
00:00:46,810 --> 00:00:51,790
We can do this by saying the f the head there we have it we can see the different columns and we can

14
00:00:51,790 --> 00:00:57,420
notice that it's actually organized looks like alphabetically by country and then by year.

15
00:00:57,580 --> 00:01:00,410
So how many countries are represented in this dataset.

16
00:01:00,520 --> 00:01:01,830
Lots different ways we can do this.

17
00:01:01,840 --> 00:01:10,750
One easy way is to say D F go ahead and grab the country column and just ask unique actually ask and

18
00:01:10,750 --> 00:01:11,730
unique.

19
00:01:12,100 --> 00:01:17,470
And that returns back 13 the very next question asks what are the countries represented in which case

20
00:01:18,190 --> 00:01:26,600
you want just unique and that returns back this array of unique countries represented in the dataset.

21
00:01:26,620 --> 00:01:31,540
Next question was what country had the highest annual CPI inflation rate and what was the inflation

22
00:01:31,540 --> 00:01:31,750
rate.

23
00:01:32,380 --> 00:01:34,310
So how can we do this.

24
00:01:34,380 --> 00:01:37,500
Well we could do is sort values by inflation.

25
00:01:37,510 --> 00:01:41,780
Annual CPI which is the column that corresponds to annual CPI inflation rate.

26
00:01:41,950 --> 00:01:46,060
And if you have questions on that you could just look at the bullet points and read what the columns

27
00:01:46,060 --> 00:01:47,380
represent.

28
00:01:47,380 --> 00:01:54,230
But what I'm going to do is just say the have sought values and then I will say by inflation underscore

29
00:01:54,800 --> 00:02:02,840
annual underscore CPI and we'll say ascending is equal to False.

30
00:02:02,840 --> 00:02:08,260
So if I run that that sorts everything by that highest annual CPI inflation rate.

31
00:02:08,450 --> 00:02:09,880
I just want to know the country.

32
00:02:09,920 --> 00:02:15,680
So what I could do is just say head of one which grabs the very first row on this which is Zimbabwe.

33
00:02:15,680 --> 00:02:21,410
And if I really wanted to I could then ask for the country and that gives it back Zimbabwe.

34
00:02:21,410 --> 00:02:24,320
But here we can see the results are quite clearly just Zimbabwe.

35
00:02:24,560 --> 00:02:27,130
If you want you can go ahead and grab that singular country out of it.

36
00:02:27,940 --> 00:02:29,050
OK.

37
00:02:29,250 --> 00:02:32,480
In what year the Kenya have its first system crises.

38
00:02:32,480 --> 00:02:36,220
So what we need to do is first filter out the state offering.

39
00:02:36,260 --> 00:02:38,390
So my approach would be the following.

40
00:02:38,450 --> 00:02:49,680
First only grab the entries for Kenya and we can do this by saying DLF country is equal to Kenya and

41
00:02:49,680 --> 00:02:51,070
the other condition I want.

42
00:02:51,090 --> 00:02:55,130
So we'll say ampersand is where it actually had a systemic crisis.

43
00:02:55,320 --> 00:02:59,810
So we'll say systemic crisis is equal to one.

44
00:03:00,050 --> 00:03:02,100
Wrap that up in parentheses for the book for them.

45
00:03:03,240 --> 00:03:05,330
And then filter out.

46
00:03:05,340 --> 00:03:12,810
So now this remaining data frame rate here if we take a look at it only has where the country Kenya

47
00:03:12,960 --> 00:03:14,610
had a systemic crisis.

48
00:03:14,610 --> 00:03:21,570
And then if I wanted to know what you that have it's first one I would sort by here so I could say that

49
00:03:22,920 --> 00:03:28,800
sort values by year in this case doesn't actually make a difference it was already sorted by country

50
00:03:28,820 --> 00:03:29,760
then by year.

51
00:03:29,880 --> 00:03:34,960
And if I really wanted to I could say that ILO c 0.

52
00:03:35,160 --> 00:03:40,200
And that will return back the very first item here and then we could get the year from that nineteen

53
00:03:40,200 --> 00:03:41,040
eighty five.

54
00:03:41,040 --> 00:03:47,310
So if I really wanted to I could continue passing year off of this series run that just to get nineteen

55
00:03:47,310 --> 00:03:51,600
eighty five or you don't need that extra stuff and just read off as shown here.

56
00:03:51,600 --> 00:03:53,110
It's up to you.

57
00:03:53,180 --> 00:03:56,450
OK so we know that in what you can you have its first system crisis.

58
00:03:56,450 --> 00:03:57,890
The answer is nineteen eighty five.

59
00:03:57,890 --> 00:04:00,150
Lots of different ways you can get this one.

60
00:04:00,410 --> 00:04:04,810
Next was how many yearly systemic crises have occurred per country.

61
00:04:04,940 --> 00:04:11,510
What we can do here is go ahead and grab a subset of the data frame where we actually have a crisis

62
00:04:11,960 --> 00:04:25,390
so we can say crises is equal to the F where systemic crisis is equal to one or true.

63
00:04:25,560 --> 00:04:30,590
Then once we do that we'll go ahead and different ways we can do this.

64
00:04:30,660 --> 00:04:39,430
We could say crises go ahead and group by the country and then just count the instances per country.

65
00:04:39,510 --> 00:04:44,730
So if you run that you'll notice that accounts for each column which theoretically should be the same

66
00:04:44,730 --> 00:04:47,700
values essentially same number of instances per column.

67
00:04:47,700 --> 00:04:56,720
So you can just grab any column you want here such as systemic underscore crises run that and those

68
00:04:56,720 --> 00:04:58,070
are the answers.

69
00:04:58,090 --> 00:04:58,820
Okay.

70
00:04:59,090 --> 00:05:05,000
Next was how many years that Zimbabwe have a sovereign external debt default occur.

71
00:05:05,300 --> 00:05:07,460
So again just doing a little bit of filtering here.

72
00:05:07,850 --> 00:05:15,420
We're going to first only grab Zimbabwe so say where the country is equal to Zimbabwe.

73
00:05:15,420 --> 00:05:17,280
You could also use the country codes if you wanted to.

74
00:05:17,790 --> 00:05:20,460
So that's our first condition for the filtering.

75
00:05:20,460 --> 00:05:26,040
Next what I want to know is where the sovereign external debt default.

76
00:05:26,040 --> 00:05:34,350
I just had autocomplete that also occurred so that's equal to one and then if I grab this and run it.

77
00:05:34,510 --> 00:05:41,290
This returns back all the rows where my country Zimbabwe and we have had a sovereign external debt default

78
00:05:41,290 --> 00:05:43,000
occur and only one of those.

79
00:05:43,150 --> 00:05:46,960
How many of them are so I can just check the length of this and it returns back 30.

80
00:05:46,990 --> 00:05:52,510
So in thirty total years Zimbabwe had a sovereign external debt default occur.

81
00:05:52,660 --> 00:05:57,190
Now the one thing I pay attention to is depending on how this data was organized you should be careful

82
00:05:57,190 --> 00:05:59,250
to make sure there weren't any repeat years.

83
00:05:59,260 --> 00:06:04,000
But in this case because we can see that data is organized by year then there are no repeated years

84
00:06:04,600 --> 00:06:07,440
that that's the only danger there and just taking the length of this guy.

85
00:06:08,520 --> 00:06:13,440
OK the last one wasn't what year that Algeria have its highest exchange rate.

86
00:06:13,440 --> 00:06:15,360
Well lots of different ways you can do this one.

87
00:06:15,360 --> 00:06:23,790
One way is to simply filter out where the country is equal to Algeria.

88
00:06:24,130 --> 00:06:26,280
So now I have all the entrances of Algeria.

89
00:06:26,320 --> 00:06:35,180
I'll go ahead and sort values by the exchange rate so he can say XY H underscore USD.

90
00:06:35,530 --> 00:06:41,970
We'll set a spending equal to False and really I'm just interested in the first one of this.

91
00:06:42,160 --> 00:06:45,230
So this is the highest exchange rate it ever had.

92
00:06:45,430 --> 00:06:47,650
According to this data.

93
00:06:47,680 --> 00:06:49,360
OK so that's it.

94
00:06:49,360 --> 00:06:52,600
Keep in mind lots of different ways you could answer a lot of these questions.

95
00:06:52,780 --> 00:06:56,080
And also you could always just keep filtering out a lot of these.

96
00:06:56,080 --> 00:06:58,520
So here are the real answers 2014.

97
00:06:58,530 --> 00:07:02,320
So if I really wanted to I could add in year here to return back.

98
00:07:02,320 --> 00:07:06,290
Just 2014 it's really up to you how deep into the weeds you want to go.

99
00:07:06,310 --> 00:07:10,630
But I would encourage you to really explore this dataset and explore the links that we have provided

100
00:07:10,630 --> 00:07:14,790
for you at the very top of this notebook to player on a bit further.

101
00:07:14,920 --> 00:07:17,020
Thanks and I'll see you at the next section of the course.
