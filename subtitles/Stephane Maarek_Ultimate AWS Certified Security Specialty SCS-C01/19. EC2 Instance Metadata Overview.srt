1
1

00:00:00,120  -->  00:00:00,953
<v ->So now let's talk</v>
2

2

00:00:00,953  -->  00:00:04,260
about the AWS EC2 Instance Metadata Service,
3

3

00:00:04,260  -->  00:00:05,613
also called IMDS.
4

4

00:00:06,780  -->  00:00:08,640
So this service gives you information
5

5

00:00:08,640  -->  00:00:09,930
about an EC2 instance.
6

6

00:00:09,930  -->  00:00:12,600
For example, it's hostname, the instance type,
7

7

00:00:12,600  -->  00:00:14,550
the network settings, and so on.
8

8

00:00:14,550  -->  00:00:15,750
And how do we know about this?
9

9

00:00:15,750  -->  00:00:18,720
Well, there is this special URL that you can access
10

10

00:00:18,720  -->  00:00:21,120
from within the EC2 instance itself,
11

11

00:00:21,120  -->  00:00:22,710
and it's called the metadata service.
12

12

00:00:22,710  -->  00:00:24,540
So this is the URL right here:
13

13

00:00:24,540  -->  00:00:29,540
169.254.169.254/latest/meta-data.
14

14

00:00:30,750  -->  00:00:33,840
It's called the IMDS Service Endpoint.
15

15

00:00:33,840  -->  00:00:36,060
And so when you have an EC2 instance
16

16

00:00:36,060  -->  00:00:38,580
you can just perform Http request into it
17

17

00:00:38,580  -->  00:00:39,720
and get some information.
18

18

00:00:39,720  -->  00:00:42,270
So you can either use some CLI tools
19

19

00:00:42,270  -->  00:00:43,770
such as Curl or Web gets,
20

20

00:00:43,770  -->  00:00:47,190
or use the EC2 API from AWS.
21

21

00:00:47,190  -->  00:00:51,660
So the metadata inside of this IMDS service
22

22

00:00:51,660  -->  00:00:54,330
is going to be stored in key value pairs.
23

23

00:00:54,330  -->  00:00:55,620
So when do you use this?
24

24

00:00:55,620  -->  00:00:57,060
Well, it's very helpful
25

25

00:00:57,060  -->  00:00:58,590
when you want to be automating tasks
26

26

00:00:58,590  -->  00:01:00,630
such as setting up an instance hostname,
27

27

00:01:00,630  -->  00:01:03,570
configure networking or installing software.
28

28

00:01:03,570  -->  00:01:05,430
So I'm gonna give you a couple of information
29

29

00:01:05,430  -->  00:01:10,430
around what can be obtained as of using the IMDS service.
30

30

00:01:10,800  -->  00:01:12,600
So you can get the ami-id,
31

31

00:01:12,600  -->  00:01:14,940
the block-device-mappings for your disks,
32

32

00:01:14,940  -->  00:01:16,110
the instance-id,
33

33

00:01:16,110  -->  00:01:18,000
the instance-type, the network.
34

34

00:01:18,000  -->  00:01:20,640
You can get the hostname, the local-hostname
35

35

00:01:20,640  -->  00:01:23,367
the local-ipv4, the public-hostname,
36

36

00:01:23,367  -->  00:01:25,410
and the public-ipv4.
37

37

00:01:25,410  -->  00:01:28,080
You can get some information around Iam
38

38

00:01:28,080  -->  00:01:32,040
such as the InstanceProfileArn, and the InstanceId.
39

39

00:01:32,040  -->  00:01:34,590
You can even get temporary credentials
40

40

00:01:34,590  -->  00:01:36,120
for the role attached to your instance.
41

41

00:01:36,120  -->  00:01:38,640
This is the magic behind Iam roles.
42

42

00:01:38,640  -->  00:01:39,750
I will show you in a second
43

43

00:01:39,750  -->  00:01:42,000
in the diagram how that works.
44

44

00:01:42,000  -->  00:01:44,640
You can also get the placement information
45

45

00:01:44,640  -->  00:01:46,560
for your EC2 instance,
46

46

00:01:46,560  -->  00:01:48,840
such as the region has been launched in,
47

47

00:01:48,840  -->  00:01:50,580
the AZ it's been launched in,
48

48

00:01:50,580  -->  00:01:52,740
or the placement group name.
49

49

00:01:52,740  -->  00:01:55,530
So for example, if you have a cluster or spread
50

50

00:01:55,530  -->  00:01:57,660
or a partition placement group,
51

51

00:01:57,660  -->  00:02:00,390
you have security groups so the names of the security groups
52

52

00:02:00,390  -->  00:02:02,490
that are attached onto the instance
53

53

00:02:02,490  -->  00:02:05,100
as well as any tags attached to the instance.
54

54

00:02:05,100  -->  00:02:07,470
So as you can see from within the EC2 instance,
55

55

00:02:07,470  -->  00:02:09,600
you can get a lot of information
56

56

00:02:09,600  -->  00:02:12,870
from the Instance Metadata Service.
57

57

00:02:12,870  -->  00:02:15,360
So how does it work for the EC2 instance role?
58

58

00:02:15,360  -->  00:02:18,420
How does the EC2 instance actually obtain credentials?
59

59

00:02:18,420  -->  00:02:22,290
Well, whenever you have an application on your EC2 instance
60

60

00:02:22,290  -->  00:02:25,050
that leverages the SDK or the CLI
61

61

00:02:25,050  -->  00:02:27,840
and makes an API call into AWS,
62

62

00:02:27,840  -->  00:02:30,390
the SDK itself or the CLI is going to
63

63

00:02:30,390  -->  00:02:34,410
make first a call into the security credentials part
64

64

00:02:34,410  -->  00:02:36,330
of the metadata service.
65

65

00:02:36,330  -->  00:02:39,000
And then the IMDS service endpoint is going
66

66

00:02:39,000  -->  00:02:41,460
to be returning an access key id,
67

67

00:02:41,460  -->  00:02:44,640
a secret access key and an exploration in a token,
68

68

00:02:44,640  -->  00:02:46,650
which means that you have temporary credentials
69

69

00:02:46,650  -->  00:02:48,510
onto your EC2 instances.
70

70

00:02:48,510  -->  00:02:51,720
And these temporary credentials are allowed
71

71

00:02:51,720  -->  00:02:53,250
to do whatever you have assigned
72

72

00:02:53,250  -->  00:02:57,120
in terms of policy for the EC2 instance Iam role.
73

73

00:02:57,120  -->  00:02:58,890
And this is the magic behind
74

74

00:02:58,890  -->  00:03:01,710
how EC2 instances actually get credentials
75

75

00:03:01,710  -->  00:03:05,250
to perform the API calls they need against AWS.
76

76

00:03:05,250  -->  00:03:07,740
You may also want sometimes to restrict access
77

77

00:03:07,740  -->  00:03:10,080
to the EC2 Instance Metadata Service.
78

78

00:03:10,080  -->  00:03:11,580
So two ways you can do it.
79

79

00:03:11,580  -->  00:03:14,700
Number one is to use local firewall rules
80

80

00:03:14,700  -->  00:03:16,170
which is going to disable access
81

81

00:03:16,170  -->  00:03:19,590
for some or all processes on your EC2 instance.
82

82

00:03:19,590  -->  00:03:21,570
So you can use IP tables for Linux
83

83

00:03:21,570  -->  00:03:25,770
or PF or IPFW for FreeBSD.
84

84

00:03:25,770  -->  00:03:27,697
So this is the kind of command you can have and you say,
85

85

00:03:27,697  -->  00:03:32,697
"Hey, reject any traffic going into 169.254."
86

86

00:03:33,090  -->  00:03:36,000
That 169.254. which is the URL
87

87

00:03:36,000  -->  00:03:38,580
for the EC2 instance metadata service.
88

88

00:03:38,580  -->  00:03:43,050
Or you can simply turn off access using the AWS console
89

89

00:03:43,050  -->  00:03:46,110
or the CLI when you start an EC2 instance.
90

90

00:03:46,110  -->  00:03:49,980
It's called HttpEndpoint equals disabled.
91

91

00:03:49,980  -->  00:03:53,400
And this is very important because this ap, this part,
92

92

00:03:53,400  -->  00:03:55,470
the HttpEndpoint equal disabled can come
93

93

00:03:55,470  -->  00:03:57,720
up sometimes in Iam policies.
94

94

00:03:57,720  -->  00:03:59,340
Alright, so that's it for this lecture.
95

95

00:03:59,340  -->  00:04:02,403
I hope you liked it and I will see you in the next lecture.
