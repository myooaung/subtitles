WEBVTT
1
1

00:00:00.180  -->  00:00:02.490
<v Instructor>Now let's talk about KMS key deletion.</v>
2

2

00:00:02.490  -->  00:00:04.800
So you can delete the generated keys,
3

3

00:00:04.800  -->  00:00:07.350
they are keys created from within KMS
4

4

00:00:07.350  -->  00:00:09.330
in which case these keys, when you create them,
5

5

00:00:09.330  -->  00:00:11.190
they have no expiration dates
6

6

00:00:11.190  -->  00:00:13.470
and you cannot immediately delete them.
7

7

00:00:13.470  -->  00:00:15.180
Instead, you need to delete
8

8

00:00:15.180  -->  00:00:18.810
and then they will have a seven to 30 days waiting period
9

9

00:00:18.810  -->  00:00:20.490
for your key to be deleted.
10

10

00:00:20.490  -->  00:00:21.720
During this waiting period,
11

11

00:00:21.720  -->  00:00:24.750
you can cancel the key deletion at any time
12

12

00:00:24.750  -->  00:00:27.480
and during the waiting period
13

13

00:00:27.480  -->  00:00:30.180
if you try to use the KMS key for encrypt
14

14

00:00:30.180  -->  00:00:31.680
or decrypt operation,
15

15

00:00:31.680  -->  00:00:33.870
you're going to get a failure.
16

16

00:00:33.870  -->  00:00:35.940
At the end of the waiting period,
17

17

00:00:35.940  -->  00:00:37.380
everything is going to be deleted,
18

18

00:00:37.380  -->  00:00:40.830
so the KMS key and the key material.
19

19

00:00:40.830  -->  00:00:42.210
Instead of deleting the key,
20

20

00:00:42.210  -->  00:00:44.340
you may choose to disable it as well
21

21

00:00:44.340  -->  00:00:46.890
and when you disable it, it just happens immediately
22

22

00:00:46.890  -->  00:00:49.770
but you can re-enable the key later on.
23

23

00:00:49.770  -->  00:00:53.160
If you have imported keys from outside the KMS,
24

24

00:00:53.160  -->  00:00:55.680
then you may set an expiration period on the key
25

25

00:00:55.680  -->  00:00:58.080
so that automatically it will expire.
26

26

00:00:58.080  -->  00:00:59.430
Then if you do do that
27

27

00:00:59.430  -->  00:01:02.220
then KMS will delete the key material
28

28

00:01:02.220  -->  00:01:03.510
or if you choose to do so
29

29

00:01:03.510  -->  00:01:06.270
you can delete the key material on demand.
30

30

00:01:06.270  -->  00:01:07.290
What's going to happen is that
31

31

00:01:07.290  -->  00:01:09.360
even if you delete the key material,
32

32

00:01:09.360  -->  00:01:11.520
then the metadata is going to be kept
33

33

00:01:11.520  -->  00:01:15.360
and you can reimport the key material in the future.
34

34

00:01:15.360  -->  00:01:18.360
You may also choose to disable the key entirely
35

35

00:01:18.360  -->  00:01:19.860
and schedule for deletion,
36

36

00:01:19.860  -->  00:01:22.650
which is going to delete both the key metadata
37

37

00:01:22.650  -->  00:01:24.810
and the key material.
38

38

00:01:24.810  -->  00:01:29.490
Finally, for the AWS managed keys or the AWS owned keys,
39

39

00:01:29.490  -->  00:01:31.203
they cannot be deleted.
40

40

00:01:32.550  -->  00:01:35.550
So how can we detect if a key being deleted
41

41

00:01:35.550  -->  00:01:37.170
is actually being used?
42

42

00:01:37.170  -->  00:01:39.450
Well, with a combination of CloudTrail,
43

43

00:01:39.450  -->  00:01:41.910
CloudWatch Logs, CloudWatch Alarms and SNS,
44

44

00:01:41.910  -->  00:01:44.010
you can be notified when there is someone tries
45

45

00:01:44.010  -->  00:01:47.460
to use a KMS key that's in the pending deletion state
46

46

00:01:47.460  -->  00:01:51.060
for any cryptographic operations such as encrypt or decrypt.
47

47

00:01:51.060  -->  00:01:52.050
How does that work?
48

48

00:01:52.050  -->  00:01:53.880
Well, we have a KMS key.
49

49

00:01:53.880  -->  00:01:55.560
It's pending deletion,
50

50

00:01:55.560  -->  00:01:58.620
and then a user will try to do encrypt or decrypt.
51

51

00:01:58.620  -->  00:02:00.330
Of course, this API call will not work
52

52

00:02:00.330  -->  00:02:02.730
because we are in the pending deletion state,
53

53

00:02:02.730  -->  00:02:06.810
but this API call is still going to be logged by CloudTrail.
54

54

00:02:06.810  -->  00:02:08.880
Then it will be denied in CloudTrail,
55

55

00:02:08.880  -->  00:02:11.610
and we can from CloudTrail send all the API calls
56

56

00:02:11.610  -->  00:02:15.150
to CloudWatch Logs where we can set up a metric filter
57

57

00:02:15.150  -->  00:02:18.240
to look for is pending deletion.
58

58

00:02:18.240  -->  00:02:20.700
Then this will transform into a CloudWatch Alarm
59

59

00:02:20.700  -->  00:02:23.430
and this CloudWatch Alarm, if it has a positive value,
60

60

00:02:23.430  -->  00:02:26.283
can send an alert into an Amazon SNS topic.
61

61

00:02:27.270  -->  00:02:30.060
So there's another way to get notifications
62

62

00:02:30.060  -->  00:02:32.760
of keys being deleted or disabled,
63

63

00:02:32.760  -->  00:02:34.680
this is to use CloudTrail and EventBridge.
64

64

00:02:34.680  -->  00:02:36.330
So the use case is a little bit different.
65

65

00:02:36.330  -->  00:02:38.850
This time, we want to know whenever a user
66

66

00:02:38.850  -->  00:02:42.060
is going to do the API call to either disable a key
67

67

00:02:42.060  -->  00:02:43.590
or schedule a key deletion
68

68

00:02:43.590  -->  00:02:45.720
because this may be very bad actions
69

69

00:02:45.720  -->  00:02:49.890
if then KMS cannot be used and if they're not done properly.
70

70

00:02:49.890  -->  00:02:52.980
So whenever we are doing such an API call
71

71

00:02:52.980  -->  00:02:54.510
through CloudTrail integration
72

72

00:02:54.510  -->  00:02:58.290
we have an event of that API call in Amazon EventBridge.
73

73

00:02:58.290  -->  00:02:59.190
So we will trigger,
74

74

00:02:59.190  -->  00:03:03.030
for example an SNS topic to send an email to administrator,
75

75

00:03:03.030  -->  00:03:05.790
or if we wanted to completely disable this
76

76

00:03:05.790  -->  00:03:08.820
we may want to revert the disabled key operation
77

77

00:03:08.820  -->  00:03:11.040
or the schedule key deletion operation.
78

78

00:03:11.040  -->  00:03:13.710
Thanks to systems manager automation,
79

79

00:03:13.710  -->  00:03:16.770
you should run a AWS config remediation,
80

80

00:03:16.770  -->  00:03:17.670
cancel key deletion
81

81

00:03:17.670  -->  00:03:19.590
so that's the key is back to normal.
82

82

00:03:19.590  -->  00:03:21.570
This is when you know that you're for sure
83

83

00:03:21.570  -->  00:03:23.823
never want to delete any KMS keys.
84

84

00:03:24.900  -->  00:03:28.620
Now, in case of a KMS multi region key, how does that work?
85

85

00:03:28.620  -->  00:03:31.530
Well, first you need to delete the replica keys
86

86

00:03:31.530  -->  00:03:34.650
which is less risky because it can always be recreated
87

87

00:03:34.650  -->  00:03:36.480
from the primary key
88

88

00:03:36.480  -->  00:03:38.580
and you must also, for these keys,
89

89

00:03:38.580  -->  00:03:42.360
schedule your deletions so seven to 30 day waiting period.
90

90

00:03:42.360  -->  00:03:45.330
And then when this waiting period is over,
91

91

00:03:45.330  -->  00:03:47.580
then you can delete the primary key.
92

92

00:03:47.580  -->  00:03:49.410
So the primary key can only be deleted
93

93

00:03:49.410  -->  00:03:52.080
if all the replicas have been deleted.
94

94

00:03:52.080  -->  00:03:54.480
And then if you prefer to delete the primary
95

95

00:03:54.480  -->  00:03:55.680
but keep a replica,
96

96

00:03:55.680  -->  00:03:58.710
what you must do first is to take one of these replicas
97

97

00:03:58.710  -->  00:04:01.500
and then you're going to promote it as primary,
98

98

00:04:01.500  -->  00:04:03.900
and then you delete the old primary.
99

99

00:04:03.900  -->  00:04:06.840
And again, deleting the primary key must be scheduled
100

100

00:04:06.840  -->  00:04:09.180
and takes, again, seven to 30 days
101

101

00:04:09.180  -->  00:04:11.250
so if you delete first replicas
102

102

00:04:11.250  -->  00:04:12.750
and then you delete the primary key,
103

103

00:04:12.750  -->  00:04:16.050
you have a minimum waiting period of 14 days in total.
104

104

00:04:16.050  -->  00:04:17.160
All right, that's it for this lecture.
105

105

00:04:17.160  -->  00:04:20.160
I hope you liked it, and I will see you in the next lecture.
