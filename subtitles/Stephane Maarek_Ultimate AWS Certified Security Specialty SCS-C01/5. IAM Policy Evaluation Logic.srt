1
1

00:00:00,180  -->  00:00:01,290
<v ->So now let's talk about</v>
2

2

00:00:01,290  -->  00:00:04,050
the evaluation logic of IAM policies.
3

3

00:00:04,050  -->  00:00:06,030
So here is a simplified version,
4

4

00:00:06,030  -->  00:00:08,550
and then we'll see the more complicated version.
5

5

00:00:08,550  -->  00:00:12,090
So by default, all the requests are implicitly denied
6

6

00:00:12,090  -->  00:00:14,220
except for the root user,
7

7

00:00:14,220  -->  00:00:16,083
which has full access no matter what.
8

8

00:00:17,070  -->  00:00:19,350
An explicit allow in an identity-based
9

9

00:00:19,350  -->  00:00:22,380
or resource-based policy overrides the default in one,
10

10

00:00:22,380  -->  00:00:24,750
so that means that everything was implicitly denied
11

11

00:00:24,750  -->  00:00:26,130
but then we have an explicit denied,
12

12

00:00:26,130  -->  00:00:28,860
so things are going to be accepted.
13

13

00:00:28,860  -->  00:00:30,930
If there is a permission boundary,
14

14

00:00:30,930  -->  00:00:33,960
or an Organization SCP, or a session policy,
15

15

00:00:33,960  -->  00:00:37,470
then an explicit allow is used to limit actions,
16

16

00:00:37,470  -->  00:00:39,720
so anything that is not explicitly allowed
17

17

00:00:39,720  -->  00:00:42,000
through a permission boundary, an SCP,
18

18

00:00:42,000  -->  00:00:45,450
or a session policy is going to be an implicit denied,
19

19

00:00:45,450  -->  00:00:48,090
and then the final decision will be overridden.
20

20

00:00:48,090  -->  00:00:49,113
It will be a deny.
21

21

00:00:49,950  -->  00:00:51,750
Any explicit deny, finally,
22

22

00:00:51,750  -->  00:00:55,320
in any policy overrides any allows you've ever had.
23

23

00:00:55,320  -->  00:00:58,800
So bottom line is if you have an organizational SCP,
24

24

00:00:58,800  -->  00:01:00,600
a permission boundary, or a session policy,
25

25

00:01:00,600  -->  00:01:04,380
you must see an explicit allow, but it's not enough.
26

26

00:01:04,380  -->  00:01:06,000
You must also have an explicit allow
27

27

00:01:06,000  -->  00:01:09,120
in an identity-based or resource-based policy.
28

28

00:01:09,120  -->  00:01:10,980
That's for the simplified version.
29

29

00:01:10,980  -->  00:01:13,620
It may take a few times for you to agree with this,
30

30

00:01:13,620  -->  00:01:16,110
and here is the longer graph.
31

31

00:01:16,110  -->  00:01:18,240
So you have a look at all these things.
32

32

00:01:18,240  -->  00:01:20,280
So we start at deny,
33

33

00:01:20,280  -->  00:01:23,010
and then we evaluate all applicable policies.
34

34

00:01:23,010  -->  00:01:23,843
Then we look at
35

35

00:01:23,843  -->  00:01:26,490
if there is an explicit deny amongst all policies.
36

36

00:01:26,490  -->  00:01:28,590
If yes, the final decision is denied.
37

37

00:01:28,590  -->  00:01:30,210
There is no way around it.
38

38

00:01:30,210  -->  00:01:33,480
Then we look at if there is an SCP, and if there's an SCP,
39

39

00:01:33,480  -->  00:01:37,050
as we said before, there must be an explicit allow.
40

40

00:01:37,050  -->  00:01:39,360
Good. Then we move on to the next phase.
41

41

00:01:39,360  -->  00:01:41,760
We looked at resource-based policies.
42

42

00:01:41,760  -->  00:01:44,490
So if we have a resource-based policy,
43

43

00:01:44,490  -->  00:01:46,830
we have a look at if there's an allow,
44

44

00:01:46,830  -->  00:01:49,530
and if there's an allow, it is good enough.
45

45

00:01:49,530  -->  00:01:51,600
Else, we look into what's next,
46

46

00:01:51,600  -->  00:01:54,180
and if there is an identity-based policy.
47

47

00:01:54,180  -->  00:01:56,940
So if there is an identity-based policy, yes,
48

48

00:01:56,940  -->  00:01:59,430
we look at whether or not there is an allow.
49

49

00:01:59,430  -->  00:02:02,070
If there's an allow, we look at permission boundaries
50

50

00:02:02,070  -->  00:02:03,330
to make sure that the boundaries
51

51

00:02:03,330  -->  00:02:05,880
of your identity-based policies are correct,
52

52

00:02:05,880  -->  00:02:08,730
and if there is a permission boundary, if it's present,
53

53

00:02:08,730  -->  00:02:11,490
and there is an allow, we are good. Otherwise, no.
54

54

00:02:11,490  -->  00:02:13,650
And finally, we look at session policies.
55

55

00:02:13,650  -->  00:02:16,350
So this is when we have a role session and so on,
56

56

00:02:16,350  -->  00:02:18,360
so this is the more complicated version,
57

57

00:02:18,360  -->  00:02:21,300
but the version I just gave you from before should be enough
58

58

00:02:21,300  -->  00:02:24,930
for you to understand how to evaluate some logic.
59

59

00:02:24,930  -->  00:02:27,450
So we'll walk through several examples in this course,
60

60

00:02:27,450  -->  00:02:30,420
so don't worry too much, but you have the basics.
61

61

00:02:30,420  -->  00:02:33,240
So let's take a look at this policy right here.
62

62

00:02:33,240  -->  00:02:36,990
We have deny sqs star and allow sqs delete queue.
63

63

00:02:36,990  -->  00:02:37,823
What can we do?
64

64

00:02:37,823  -->  00:02:39,870
So can we create a queue?
65

65

00:02:39,870  -->  00:02:41,850
Well, the answer is no.
66

66

00:02:41,850  -->  00:02:45,900
We cannot create a queue because we have deny sqs star.
67

67

00:02:45,900  -->  00:02:48,660
And can we delete a queue?
68

68

00:02:48,660  -->  00:02:51,690
Well, it's been explicitly allowed, sure,
69

69

00:02:51,690  -->  00:02:53,730
but it's also been explicitly denied
70

70

00:02:53,730  -->  00:02:58,730
for the first statement, so we cannot do SQS delete queue.
71

71

00:02:58,950  -->  00:03:01,800
And finally, can we do ec2:DescribeInstances?
72

72

00:03:01,800  -->  00:03:03,360
The answer is no, it's not ...
73

73

00:03:03,360  -->  00:03:05,190
it hasn't been explicitly allowed,
74

74

00:03:05,190  -->  00:03:08,730
and so therefore it's been implicitly denied.
75

75

00:03:08,730  -->  00:03:11,010
Okay, when we go cross-account,
76

76

00:03:11,010  -->  00:03:12,960
it gets a little bit more funky,
77

77

00:03:12,960  -->  00:03:16,170
so let's take an example of the account A that has Alice
78

78

00:03:16,170  -->  00:03:18,855
and account B that has an S3 bucket,
79

79

00:03:18,855  -->  00:03:22,440
and we look at a request from account A to account B.
80

80

00:03:22,440  -->  00:03:25,080
So the requester in account A must have
81

81

00:03:25,080  -->  00:03:28,620
an identity-based policy that allows the action
82

82

00:03:28,620  -->  00:03:30,510
on the S3 buckets,
83

83

00:03:30,510  -->  00:03:34,080
and then in the bucket in account B,
84

84

00:03:34,080  -->  00:03:36,840
you must have a resource policy that is going to
85

85

00:03:36,840  -->  00:03:40,980
allow the requester in account A to access the resource.
86

86

00:03:40,980  -->  00:03:43,530
So this is different from being in the same accounts
87

87

00:03:43,530  -->  00:03:45,180
because when you're in the same accounts,
88

88

00:03:45,180  -->  00:03:46,860
you look at the combination
89

89

00:03:46,860  -->  00:03:49,920
of the identity-based policy and the resource policy,
90

90

00:03:49,920  -->  00:03:52,860
and you look for one allow in between them two,
91

91

00:03:52,860  -->  00:03:54,930
but when you have two accounts, you look at
92

92

00:03:54,930  -->  00:03:58,410
whether or not do both accounts allow the request.
93

93

00:03:58,410  -->  00:04:00,420
That's why I was saying it's a bit more funky
94

94

00:04:00,420  -->  00:04:03,030
with cross-account access.
95

95

00:04:03,030  -->  00:04:05,040
So if you have a look of the simple use-case
96

96

00:04:05,040  -->  00:04:08,880
of an IAM policy and a resource policy in the same account,
97

97

00:04:08,880  -->  00:04:11,550
if we have an MT IAM user IAM policy
98

98

00:04:11,550  -->  00:04:13,080
but then the S3 bucket policy,
99

99

00:04:13,080  -->  00:04:17,490
the resource policy actually explicitly allows this A,
100

100

00:04:17,490  -->  00:04:20,580
this user through its arn to access the bucket,
101

101

00:04:20,580  -->  00:04:22,050
then this is allowed.
102

102

00:04:22,050  -->  00:04:24,120
Remember, this is not allowed cross-account,
103

103

00:04:24,120  -->  00:04:25,140
but in the same account,
104

104

00:04:25,140  -->  00:04:26,970
it is going to be allowed.
105

105

00:04:26,970  -->  00:04:29,940
If we take a look at a more complicated use-case
106

106

00:04:29,940  -->  00:04:33,480
where we have an IAM policy, a VPC endpoint policy,
107

107

00:04:33,480  -->  00:04:36,210
and a resource policy, what is evaluated?
108

108

00:04:36,210  -->  00:04:39,000
So we have a look at the instance role.
109

109

00:04:39,000  -->  00:04:40,380
Here we have s three star,
110

110

00:04:40,380  -->  00:04:42,840
so we are allowed to do stuff on s3.
111

111

00:04:42,840  -->  00:04:46,410
Then the VPC endpoint policy does allow us to do
112

112

00:04:46,410  -->  00:04:48,210
list bucket, get object,
113

113

00:04:48,210  -->  00:04:50,640
and put object on the bucket itself,
114

114

00:04:50,640  -->  00:04:53,280
so we've restricted the actions that are being made
115

115

00:04:53,280  -->  00:04:54,270
on the bucket.
116

116

00:04:54,270  -->  00:04:56,130
And finally, the bucket policy is saying,
117

117

00:04:56,130  -->  00:04:58,620
you cannot access me unless you come from
118

118

00:04:58,620  -->  00:05:00,810
the specific VPC endpoints.
119

119

00:05:00,810  -->  00:05:01,860
So as a whole,
120

120

00:05:01,860  -->  00:05:04,890
the ec2:instance will be allowed to do list bucket,
121

121

00:05:04,890  -->  00:05:09,060
get object, and put object on the VPC endpoint
122

122

00:05:09,060  -->  00:05:12,030
and only through VPC endpoint
123

123

00:05:12,030  -->  00:05:14,550
because if the ec2:instance tries to access
124

124

00:05:14,550  -->  00:05:16,140
the S3 bucket directly,
125

125

00:05:16,140  -->  00:05:18,030
as you can see on the right hand side,
126

126

00:05:18,030  -->  00:05:20,610
the policy is saying deny,
127

127

00:05:20,610  -->  00:05:22,620
and so we have an explicit deny,
128

128

00:05:22,620  -->  00:05:23,730
and because of the condition,
129

129

00:05:23,730  -->  00:05:25,620
if we try to access it without the VPC endpoint,
130

130

00:05:25,620  -->  00:05:27,630
the condition is going to trigger,
131

131

00:05:27,630  -->  00:05:29,940
and so we'll get an explicit deny.
132

132

00:05:29,940  -->  00:05:33,090
So with this setup, we have effectively forced
133

133

00:05:33,090  -->  00:05:35,670
the ec2:instance to access the S3 bucket
134

134

00:05:35,670  -->  00:05:39,030
through the VPC endpoint, and the VPC endpoint itself
135

135

00:05:39,030  -->  00:05:42,060
must trigger ... restricted the type of actions
136

136

00:05:42,060  -->  00:05:45,630
that the ec2:instance could do on our S3 bucket.
137

137

00:05:45,630  -->  00:05:48,330
Hopefully all of that makes sense for you now.
138

138

00:05:48,330  -->  00:05:49,920
Okay, so that's it for this lecture.
139

139

00:05:49,920  -->  00:05:52,923
I hope you liked it, and I will see you in the next lecture.
