WEBVTT
1
1

00:00:00.180  -->  00:00:02.520
<v Narrator>Now let's look at AWS Control Tower.</v>
2

2

00:00:02.520  -->  00:00:05.610
So it's an easy way for you to set up and govern a secure
3

3

00:00:05.610  -->  00:00:08.070
and compliant multi-account AWS environments based
4

4

00:00:08.070  -->  00:00:09.690
on best practices.
5

5

00:00:09.690  -->  00:00:11.580
So out of it you're going to get
6

6

00:00:11.580  -->  00:00:13.780
your environment automated in just a few clicks.
7

7

00:00:13.780  -->  00:00:16.470
You're going to have ongoing policy management
8

8

00:00:16.470  -->  00:00:18.267
using guardrails and we see this in this lecture.
9

9

00:00:18.267  -->  00:00:20.250
We're going to detect policy violations
10

10

00:00:20.250  -->  00:00:21.813
and remediate them automatically
11

11

00:00:21.813  -->  00:00:23.550
and we can monitor compliance
12

12

00:00:23.550  -->  00:00:25.740
through an interactive dashboard.
13

13

00:00:25.740  -->  00:00:26.970
So Control Tower is a way for you
14

14

00:00:26.970  -->  00:00:29.400
to really automate best practice multi-accounts
15

15

00:00:29.400  -->  00:00:32.010
and it runs on top of AWS organizations.
16

16

00:00:32.010  -->  00:00:33.990
So it's going to set up an organization for you
17

17

00:00:33.990  -->  00:00:35.160
and then organize these accounts
18

18

00:00:35.160  -->  00:00:36.780
and implement automatically
19

19

00:00:36.780  -->  00:00:39.570
the service control policies you need.
20

20

00:00:39.570  -->  00:00:41.280
So out of it, there is the account factory.
21

21

00:00:41.280  -->  00:00:44.820
And since you automate account provisioning and deployments
22

22

00:00:44.820  -->  00:00:47.940
and it allows you to create pre-approved baseline
23

23

00:00:47.940  -->  00:00:50.610
and configuration options for all the accounts
24

24

00:00:50.610  -->  00:00:52.770
in your organization, such as, for example
25

25

00:00:52.770  -->  00:00:55.860
configuring the default VPC, configuring the subnets
26

26

00:00:55.860  -->  00:00:57.490
the regions and so on.
27

27

00:00:57.490  -->  00:01:01.410
And to do so is going to use the underlying service called
28

28

00:01:01.410  -->  00:01:04.230
the AWS Service Catalog to provision these new accounts.
29

29

00:01:04.230  -->  00:01:05.063
So let's have a look
30

30

00:01:05.063  -->  00:01:07.140
in where an account feature will be very helpful.
31

31

00:01:07.140  -->  00:01:09.124
So we have in a cloud computing environments
32

32

00:01:09.124  -->  00:01:11.280
and then we have a data center
33

33

00:01:11.280  -->  00:01:14.850
with an ADFS and an active directory.
34

34

00:01:14.850  -->  00:01:16.410
And now we are going to establish a VPN
35

35

00:01:16.410  -->  00:01:17.340
or direct connect connection
36

36

00:01:17.340  -->  00:01:20.370
between the cloud and the corporate data center.
37

37

00:01:20.370  -->  00:01:22.980
And so therefore, in the control tower lending
38

38

00:01:22.980  -->  00:01:25.770
zone that we create through the account factory,
39

39

00:01:25.770  -->  00:01:28.163
we're going to have an SSO directory that is linked directly
40

40

00:01:28.163  -->  00:01:31.098
to AD connector and that has a two-way trust
41

41

00:01:31.098  -->  00:01:36.098
with our active directory federation services.
42

42

00:01:36.720  -->  00:01:38.370
And therefore what's going to happen is
43

43

00:01:38.370  -->  00:01:40.741
that any member's accounts that we provision as part
44

44

00:01:40.741  -->  00:01:44.880
of this landing zone, we can configure them automatically
45

45

00:01:44.880  -->  00:01:48.303
and make sure that they all leverage the SSO authentication
46

46

00:01:48.303  -->  00:01:51.056
from the learning fact, the lending zone itself.
47

47

00:01:51.056  -->  00:01:52.920
So that means that all the accounts will be
48

48

00:01:52.920  -->  00:01:55.533
coming properly configured thanks to Control Tower.
49

49

00:01:56.400  -->  00:01:57.450
Now there's another thing
50

50

00:01:57.450  -->  00:01:59.310
with Control Tower called guardrails.
51

51

00:01:59.310  -->  00:02:01.860
And this is used to detect and remediate policy violations.
52

52

00:02:01.860  -->  00:02:04.230
So it's going to give you ongoing governance.
53

53

00:02:04.230  -->  00:02:06.390
And then you have two kinds of guardrails.
54

54

00:02:06.390  -->  00:02:08.841
You have preventive guardrails where you use SCP's.
55

55

00:02:08.841  -->  00:02:12.288
And this is for example, to have an action to disable
56

56

00:02:12.288  -->  00:02:17.250
or disallow the creation of access keys from the root user.
57

57

00:02:17.250  -->  00:02:19.392
That's one way or detective where you want to
58

58

00:02:19.392  -->  00:02:21.180
give all permissions to your accounts
59

59

00:02:21.180  -->  00:02:23.820
but then you use config to detect for example
60

60

00:02:23.820  -->  00:02:27.690
whether or not MFA is enabled for the root user and so on.
61

61

00:02:27.690  -->  00:02:28.830
And config will be very helpful
62

62

00:02:28.830  -->  00:02:30.330
because it gives you compliance
63

63

00:02:30.330  -->  00:02:32.820
or non-compliance of resources.
64

64

00:02:32.820  -->  00:02:33.960
And so here's an example.
65

65

00:02:33.960  -->  00:02:37.230
We for example, want to see which resources are untagged.
66

66

00:02:37.230  -->  00:02:38.786
So we have a detective guardrail
67

67

00:02:38.786  -->  00:02:42.600
in control tower using config and it's going to monitor
68

68

00:02:42.600  -->  00:02:45.000
for untagged resources in your member accounts
69

69

00:02:45.000  -->  00:02:47.370
as part of your organization is going to trigger
70

70

00:02:47.370  -->  00:02:49.345
if it's non-compliance and SNS topic
71

71

00:02:49.345  -->  00:02:52.113
which can notify an admin maybe invoke another function
72

72

00:02:52.113  -->  00:02:54.229
in that Lambda function itself can remediate
73

73

00:02:54.229  -->  00:02:57.030
to this and add tags where needed.
74

74

00:02:57.030  -->  00:02:59.850
So there are a few guardrail levels for control tower.
75

75

00:02:59.850  -->  00:03:01.163
There is the mandatory guardrail
76

76

00:03:01.163  -->  00:03:02.970
which is automatically enabled
77

77

00:03:02.970  -->  00:03:05.580
and enforced by AWS Control Tower.
78

78

00:03:05.580  -->  00:03:08.490
So for example, you want to disallow public read access
79

79

00:03:08.490  -->  00:03:09.695
to the log archive accounts.
80

80

00:03:09.695  -->  00:03:11.940
And this is mandatory.
81

81

00:03:11.940  -->  00:03:12.930
Strongly recommended.
82

82

00:03:12.930  -->  00:03:15.330
Which is based on AWS practices.
83

83

00:03:15.330  -->  00:03:17.130
And for example, you want to say you want to
84

84

00:03:17.130  -->  00:03:19.834
enable EBS volumes attached to EC2 instances.
85

85

00:03:19.834  -->  00:03:22.170
And then you have elective guardrails
86

86

00:03:22.170  -->  00:03:23.580
which is commonly used by enterprises.
87

87

00:03:23.580  -->  00:03:25.083
This is optional as well, for example
88

88

00:03:25.083  -->  00:03:29.610
to disallow delete actions without MFA in S3 buckets.
89

89

00:03:29.610  -->  00:03:31.059
Okay. So that's it for Control Tower.
90

90

00:03:31.059  -->  00:03:34.263
I hope you liked it and I will see you in the next lecture.
