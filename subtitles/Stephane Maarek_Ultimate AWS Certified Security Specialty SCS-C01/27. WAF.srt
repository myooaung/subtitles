1
1

00:00:00,270  -->  00:00:03,180
<v ->Next we have WAF, the Web Application Firewall</v>
2

2

00:00:03,180  -->  00:00:04,950
which allows you to protect your web applications
3

3

00:00:04,950  -->  00:00:07,770
from common web exploits at the Layer 7.
4

4

00:00:07,770  -->  00:00:09,600
So, this is the HTTP Layer.
5

5

00:00:09,600  -->  00:00:11,880
You can deploy it on the Application Load Balancer
6

6

00:00:11,880  -->  00:00:13,350
to get localized rules.
7

7

00:00:13,350  -->  00:00:15,750
You can deploy it on the API Gateway
8

8

00:00:15,750  -->  00:00:19,290
to get rules running at the regional or edge level.
9

9

00:00:19,290  -->  00:00:20,580
You can deploy on CloudFront
10

10

00:00:20,580  -->  00:00:22,800
and these rules are going to be running globally
11

11

00:00:22,800  -->  00:00:25,312
on all edge locations where CloudFront is.
12

12

00:00:25,312  -->  00:00:26,970
And this can be used for example,
13

13

00:00:26,970  -->  00:00:29,370
if you wanted to have a Web Application Firewall
14

14

00:00:29,370  -->  00:00:31,410
for your Cloud Load Balancer,
15

15

00:00:31,410  -->  00:00:34,650
your EC2 instances, custom origins or S3 websites.
16

16

00:00:34,650  -->  00:00:36,430
You would have CloudFront
17

17

00:00:36,430  -->  00:00:38,040
and then deploy WAF on CloudFront.
18

18

00:00:38,040  -->  00:00:39,930
You can also deploy it on AppSync
19

19

00:00:39,930  -->  00:00:41,880
and this is going to allow you to protect
20

20

00:00:41,880  -->  00:00:44,220
your GraphQL APIs directly.
21

21

00:00:44,220  -->  00:00:47,160
So, remember that WAF is not used for DDoS protection.
22

22

00:00:47,160  -->  00:00:48,390
For this we have Shield.
23

23

00:00:48,390  -->  00:00:51,834
WAF is used for Layer 7 type of exploits.
24

24

00:00:51,834  -->  00:00:54,267
So, for this you're going to define Web ACL.
25

25

00:00:54,267  -->  00:00:56,700
So, the Web Access Control List.
26

26

00:00:56,700  -->  00:00:59,543
And the rules can include IP addresses filtering,
27

27

00:00:59,543  -->  00:01:01,962
HTTP headers, HTTP body, URL strings.
28

28

00:01:01,962  -->  00:01:04,200
You can have common attacks protections
29

29

00:01:04,200  -->  00:01:08,670
such as SQL injection or Cross-site Scripting, XSS.
30

30

00:01:08,670  -->  00:01:10,597
You can have size constraints to say,
31

31

00:01:10,597  -->  00:01:13,950
"Hey any request bigger than 20 megabytes at once."
32

32

00:01:13,950  -->  00:01:16,695
You can have Geo match to block or allow a specific country.
33

33

00:01:16,695  -->  00:01:18,810
And you can have rate-based rules.
34

34

00:01:18,810  -->  00:01:20,520
So, to count occurrences of events
35

35

00:01:20,520  -->  00:01:21,840
and say, "Hey if this happened
36

36

00:01:21,840  -->  00:01:24,390
more than five times per second,
37

37

00:01:24,390  -->  00:01:26,580
this looks fishy, block it."
38

38

00:01:26,580  -->  00:01:27,945
And the rule actions can be
39

39

00:01:27,945  -->  00:01:30,030
allow or block as we know
40

40

00:01:30,030  -->  00:01:32,070
to allow or to block traffic.
41

41

00:01:32,070  -->  00:01:33,090
They could be Count.
42

42

00:01:33,090  -->  00:01:33,990
And that's an interesting one.
43

43

00:01:33,990  -->  00:01:37,350
This is to see if a rule would be in effect or not.
44

44

00:01:37,350  -->  00:01:40,140
So, this allows you to detect false positives ahead of time.
45

45

00:01:40,140  -->  00:01:41,880
So, you would just count occurrences
46

46

00:01:41,880  -->  00:01:44,580
and analyze the result of a account operation
47

47

00:01:44,580  -->  00:01:46,680
but the traffic is still allowed through.
48

48

00:01:46,680  -->  00:01:49,380
So, you do Count before Block or CAPTCHA
49

49

00:01:49,380  -->  00:01:51,160
if you wanted to protect some traffic
50

50

00:01:51,160  -->  00:01:53,160
with a CAPTCHA to make sure
51

51

00:01:53,160  -->  00:01:55,830
that there is some some client side verification
52

52

00:01:55,830  -->  00:01:58,140
before it gets to you.
53

53

00:01:58,140  -->  00:01:59,430
So, something super important
54

54

00:01:59,430  -->  00:02:01,680
for you to know is that WAF has Managed Rules.
55

55

00:02:01,680  -->  00:02:03,150
You need to know it for the exam.
56

56

00:02:03,150  -->  00:02:05,370
So, there are over 190 Managed Rules
57

57

00:02:05,370  -->  00:02:07,980
and I'll give you some of the most important.
58

58

00:02:07,980  -->  00:02:09,840
They are ready to use Managed Rules
59

59

00:02:09,840  -->  00:02:12,415
that will be from AWS or the Marketplace Sellers
60

60

00:02:12,415  -->  00:02:15,574
and they allow you to just power up WAF very quickly.
61

61

00:02:15,574  -->  00:02:17,400
So, you get Baseline Rule Groups
62

62

00:02:17,400  -->  00:02:19,243
which is general protection from common threats.
63

63

00:02:19,243  -->  00:02:23,010
And this include the Managed Rules Common Rule Sets,
64

64

00:02:23,010  -->  00:02:25,032
the Managed Rules Admin Protection Rule Set and so on.
65

65

00:02:25,032  -->  00:02:27,727
So, they're just baseline for common protection.
66

66

00:02:27,727  -->  00:02:30,251
Then you have Use-case Specific Rule Groups
67

67

00:02:30,251  -->  00:02:33,600
and they give you protection for many use-cases
68

68

00:02:33,600  -->  00:02:37,500
such as the SQL Rule Sets, the Windows Rule Sets,
69

69

00:02:37,500  -->  00:02:39,540
the PHP Rule Sets, the WordPress Rule Sets
70

70

00:02:39,540  -->  00:02:42,540
to protect these kind of applications.
71

71

00:02:42,540  -->  00:02:44,647
Then you get IP Reputation Rule Group.
72

72

00:02:44,647  -->  00:02:48,630
And this is to block request based on the source IP.
73

73

00:02:48,630  -->  00:02:50,534
So for example, you have a malicious IP
74

74

00:02:50,534  -->  00:02:52,770
and there is this very important rule called
75

75

00:02:52,770  -->  00:02:55,638
the Managed Rules Amazon IP Reputation List.
76

76

00:02:55,638  -->  00:02:57,600
Which is a list of all the IPs
77

77

00:02:57,600  -->  00:03:00,840
that are trusted by AWS and those are not trusted by AWS.
78

78

00:03:00,840  -->  00:03:03,254
And this can help you block spammers very quickly.
79

79

00:03:03,254  -->  00:03:07,980
You can also get anonymous IP List as a rule and so on.
80

80

00:03:07,980  -->  00:03:11,066
And finally there's Bot Control Managed Rule Group
81

81

00:03:11,066  -->  00:03:13,650
to block and manage request from bots.
82

82

00:03:13,650  -->  00:03:14,760
So this includes, for example,
83

83

00:03:14,760  -->  00:03:17,880
the AWS Manage Rule Bots Control Rule Set.
84

84

00:03:17,880  -->  00:03:19,920
So, as you can see we have four kinds
85

85

00:03:19,920  -->  00:03:22,080
of Managed Rule buckets Baseline,
86

86

00:03:22,080  -->  00:03:24,900
Use-case Specific, IP Reputation and Bot Control.
87

87

00:03:24,900  -->  00:03:26,490
And the thing that can come up in the exam
88

88

00:03:26,490  -->  00:03:29,940
is one of these including the Amazon IP Reputation List.
89

89

00:03:29,940  -->  00:03:32,040
Okay, so what about logging for WAF?
90

90

00:03:32,040  -->  00:03:33,773
This is also something that can come up in the exam.
91

91

00:03:33,773  -->  00:03:37,710
So, well WAF can send logs to Amazon CloudWatch Log Groups
92

92

00:03:37,710  -->  00:03:40,374
and you get a debit of five megabytes per second maximum.
93

93

00:03:40,374  -->  00:03:43,620
You can also send it to Amazon S3 bucket
94

94

00:03:43,620  -->  00:03:46,027
and the logs will be sent every five minutes.
95

95

00:03:46,027  -->  00:03:48,330
Or if you want to have more control,
96

96

00:03:48,330  -->  00:03:49,640
well you can send it directly from WAF
97

97

00:03:49,640  -->  00:03:51,420
to Kinesis Data Firehose
98

98

00:03:51,420  -->  00:03:54,553
in which case you are only limited by the Firehose quotas.
99

99

00:03:54,553  -->  00:03:56,640
Well, while would you do this, well, for example,
100

100

00:03:56,640  -->  00:03:58,290
if you have very high traffic
101

101

00:03:58,290  -->  00:04:00,390
very high logging capacity requirements
102

102

00:04:00,390  -->  00:04:03,330
then using KDF could be a very good thing.
103

103

00:04:03,330  -->  00:04:04,710
And then from Kinesis Firehose
104

104

00:04:04,710  -->  00:04:07,471
you can send it to any destination supported by Kinesis
105

105

00:04:07,471  -->  00:04:12,453
such as Amazon S3, Redshift, OpenSearch, and so on.
106

106

00:04:13,500  -->  00:04:16,170
So, using WAF there is a solution architecture
107

107

00:04:16,170  -->  00:04:17,790
you need to know which is to enhance
108

108

00:04:17,790  -->  00:04:19,620
CloudFront Origin Security.
109

109

00:04:19,620  -->  00:04:21,270
So, let's say we have CloudFront
110

110

00:04:21,270  -->  00:04:23,220
in front of an Application Load Balancer
111

111

00:04:23,220  -->  00:04:25,410
talking to EC2 instances
112

112

00:04:25,410  -->  00:04:28,620
and we want to make sure that only the traffic coming
113

113

00:04:28,620  -->  00:04:30,810
from Amazon CloudFront is allowed
114

114

00:04:30,810  -->  00:04:33,450
into the Application Load Balancer and not,
115

115

00:04:33,450  -->  00:04:36,450
for example, site traffic if we were to have the URL
116

116

00:04:36,450  -->  00:04:38,610
of the Application Load Balancer.
117

117

00:04:38,610  -->  00:04:39,626
So, how would we do this?
118

118

00:04:39,626  -->  00:04:42,700
Well, using WAF we can already set up some Web ACLs
119

119

00:04:42,700  -->  00:04:44,940
on the CloudFront level.
120

120

00:04:44,940  -->  00:04:46,110
This is not going to help us
121

121

00:04:46,110  -->  00:04:47,190
with the Application Load Balancer
122

122

00:04:47,190  -->  00:04:48,960
but at least we control some level
123

123

00:04:48,960  -->  00:04:51,111
of security on the client.
124

124

00:04:51,111  -->  00:04:53,954
Okay, next, what's going to happen is that
125

125

00:04:53,954  -->  00:04:56,340
on the Amazon CloudFront you can create what's
126

126

00:04:56,340  -->  00:04:59,070
called a custom HTTP Header
127

127

00:04:59,070  -->  00:05:00,750
and you have it, for example,
128

128

00:05:00,750  -->  00:05:04,089
set to X-Origin Verify and then a secret string.
129

129

00:05:04,089  -->  00:05:07,140
And so this will be added to every request
130

130

00:05:07,140  -->  00:05:09,540
that goes through Amazon CloudFront.
131

131

00:05:09,540  -->  00:05:11,990
The result of which is that we can also set up WAF
132

132

00:05:11,990  -->  00:05:14,970
on the Application Load Balancer
133

133

00:05:14,970  -->  00:05:17,460
and we create a Filtering Rule that says that
134

134

00:05:17,460  -->  00:05:22,460
any traffic that has this header, the X-Origin Verify,
135

135

00:05:22,500  -->  00:05:24,210
and the value will be allowed
136

136

00:05:24,210  -->  00:05:26,880
and anything else will be rejected.
137

137

00:05:26,880  -->  00:05:28,248
So, that means that someone, a user,
138

138

00:05:28,248  -->  00:05:30,974
trying to access directly the ALB,
139

139

00:05:30,974  -->  00:05:33,330
of course they don't know about the fact
140

140

00:05:33,330  -->  00:05:34,980
you're using custom HTTP Headers
141

141

00:05:34,980  -->  00:05:36,600
because they're heading from the user.
142

142

00:05:36,600  -->  00:05:39,120
Therefore, they cannot access your ALB
143

143

00:05:39,120  -->  00:05:41,878
because they will be blocked by WAF directly.
144

144

00:05:41,878  -->  00:05:43,410
On top of it,
145

145

00:05:43,410  -->  00:05:46,603
you can set up auto-rotation of this HTTP Header
146

146

00:05:46,603  -->  00:05:48,930
to have maximum security.
147

147

00:05:48,930  -->  00:05:51,011
So, using Secrets Manager, we can have a secret
148

148

00:05:51,011  -->  00:05:52,950
that is automatically rotated
149

149

00:05:52,950  -->  00:05:54,840
using a Lambda Function,
150

150

00:05:54,840  -->  00:05:57,623
and the Lambda Function will update once in a while
151

151

00:05:57,623  -->  00:06:00,240
the custom HTTP Header Value
152

152

00:06:00,240  -->  00:06:02,400
with a new value in CloudFront,
153

153

00:06:02,400  -->  00:06:06,453
and of course update the Filtering Rule in AWS WAF.
154

154

00:06:07,800  -->  00:06:08,940
So, that's it for this lecture.
155

155

00:06:08,940  -->  00:06:12,153
I hope you liked it and I will see you in the next lecture.
