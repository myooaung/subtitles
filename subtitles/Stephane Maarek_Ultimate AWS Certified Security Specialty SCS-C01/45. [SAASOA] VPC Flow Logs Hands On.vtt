WEBVTT
1
1

00:00:00.480  -->  00:00:02.370
<v Stephane>Okay, so now we're going to practice</v>
2

2

00:00:02.370  -->  00:00:04.140
VPC flow logs.
3

3

00:00:04.140  -->  00:00:07.260
And to do so, well, we'll go into our demo VPC
4

4

00:00:07.260  -->  00:00:09.480
under flow logs and we can create a flow log.
5

5

00:00:09.480  -->  00:00:11.250
So we have a few types of flow logs.
6

6

00:00:11.250  -->  00:00:13.500
So I'll call this one DemoS3FlowLog.
7

7

00:00:14.760  -->  00:00:15.593
And we have a filter.
8

8

00:00:15.593  -->  00:00:18.330
Do we want the accept type, reject type,
9

9

00:00:18.330  -->  00:00:19.860
or all kind of traffic.
10

10

00:00:19.860  -->  00:00:21.060
So if you're trying to debug
11

11

00:00:21.060  -->  00:00:22.710
why some traffic is not going through,
12

12

00:00:22.710  -->  00:00:24.300
maybe reject is more relevant,
13

13

00:00:24.300  -->  00:00:26.730
otherwise all or accept are good as well.
14

14

00:00:26.730  -->  00:00:28.650
The maximum aggregation interval.
15

15

00:00:28.650  -->  00:00:31.050
So how long you need to wait to aggregate
16

16

00:00:31.050  -->  00:00:32.430
and you can look at the info.
17

17

00:00:32.430  -->  00:00:35.910
So you can optionally specify a one minute aggregation
18

18

00:00:35.910  -->  00:00:36.743
but if you do so,
19

19

00:00:36.743  -->  00:00:38.460
then there's gonna be more records being created
20

20

00:00:38.460  -->  00:00:41.384
because it's possible that you have lots of records
21

21

00:00:41.384  -->  00:00:43.020
getting created over time,
22

22

00:00:43.020  -->  00:00:45.450
and obviously every one minute written to S3
23

23

00:00:45.450  -->  00:00:47.940
or CloudWatch Logs can be very expensive.
24

24

00:00:47.940  -->  00:00:50.370
So let's just do one minute just for the sake of the demo
25

25

00:00:50.370  -->  00:00:52.890
and to go quicker, but 10 minutes is usually a better option
26

26

00:00:52.890  -->  00:00:53.723
if you're looking at it,
27

27

00:00:53.723  -->  00:00:56.100
especially after a little bit of time.
28

28

00:00:56.100  -->  00:00:57.530
So two options.
29

29

00:00:57.530  -->  00:00:59.280
We can send it to CloudWatch Logs or to Amazon S3.
30

30

00:00:59.280  -->  00:01:01.590
So for Amazon S3 we need to specify your bucket ARN,
31

31

00:01:01.590  -->  00:01:04.230
and for CloudWatch Logs we need to specify a log group.
32

32

00:01:04.230  -->  00:01:06.420
So let's start with Amazon S3.
33

33

00:01:06.420  -->  00:01:10.720
So to do so, I'm going to go into the S3 service in here
34

34

00:01:11.700  -->  00:01:13.560
and I will create a bucket
35

35

00:01:13.560  -->  00:01:17.013
and I'll call it demo-stephane-vpc-flow-logs-v2.
36

36

00:01:17.850  -->  00:01:21.600
Okay, in the same region where my VPC is obviously.
37

37

00:01:21.600  -->  00:01:23.350
And then I will create this bucket.
38

38

00:01:24.480  -->  00:01:26.310
Now view the details of the bucket.
39

39

00:01:26.310  -->  00:01:28.290
And now we need to get the bucket ARN.
40

40

00:01:28.290  -->  00:01:29.760
So to do so, here it is,
41

41

00:01:29.760  -->  00:01:31.980
I can just copy it from the properties.
42

42

00:01:31.980  -->  00:01:33.210
So let's play this in.
43

43

00:01:33.210  -->  00:01:35.280
And as we can see, a resource based policy
44

44

00:01:35.280  -->  00:01:37.380
will be created for you and attached to the target bucket.
45

45

00:01:37.380  -->  00:01:39.960
So bucket policy will be created for us automatically
46

46

00:01:39.960  -->  00:01:43.890
so that the VPC service can send data into our S3 buckets.
47

47

00:01:43.890  -->  00:01:45.120
Now the format looks like this.
48

48

00:01:45.120  -->  00:01:47.700
This is the default format of AWS.
49

49

00:01:47.700  -->  00:01:50.343
And next I will click on create flow log.
50

50

00:01:51.750  -->  00:01:54.930
Okay, so this first flow log has been created. Perfect.
51

51

00:01:54.930  -->  00:01:57.150
And I will go ahead and create a second flow log now.
52

52

00:01:57.150  -->  00:01:59.220
So I'll click create flow log.
53

53

00:01:59.220  -->  00:02:02.343
And this one is going to be DemoFlowLogCWLogs.
54

54

00:02:05.730  -->  00:02:08.040
All kind of traffic, one minute interval,
55

55

00:02:08.040  -->  00:02:08.940
to CloudWatch Logs.
56

56

00:02:08.940  -->  00:02:13.080
And we need to create a log group and an IAM role, okay.
57

57

00:02:13.080  -->  00:02:15.180
So let's do both of these things.
58

58

00:02:15.180  -->  00:02:18.963
So to do so, we need to click on setup permissions.
59

59

00:02:20.220  -->  00:02:23.280
So let's create a role. So we are going to create a role.
60

60

00:02:23.280  -->  00:02:26.250
This is a custom trust policy.
61

61

00:02:26.250  -->  00:02:29.670
And in here for principle, just go to the new line.
62

62

00:02:29.670  -->  00:02:33.540
You're going to enter service in between quotes, then colon,
63

63

00:02:33.540  -->  00:02:38.070
and then service is vpc-flow-logs.amazonaws.com.
64

64

00:02:39.210  -->  00:02:42.150
So make sure you have this in between quotes as well.
65

65

00:02:42.150  -->  00:02:44.910
So this is going to say that this role can be assumed
66

66

00:02:44.910  -->  00:02:46.740
by VPC flow logs.
67

67

00:02:46.740  -->  00:02:48.120
Click on next.
68

68

00:02:48.120  -->  00:02:49.440
Now for permissions policy,
69

69

00:02:49.440  -->  00:02:53.580
we need CloudWatch Logs full access.
70

70

00:02:53.580  -->  00:02:57.000
So we're going to have this one CloudWatch Log full access,
71

71

00:02:57.000  -->  00:02:58.440
which is enough.
72

72

00:02:58.440  -->  00:02:59.760
Then click on next.
73

73

00:02:59.760  -->  00:03:03.157
And this role name is going to be flowlogsrole.
74

74

00:03:05.610  -->  00:03:06.813
Then create this role.
75

75

00:03:11.640  -->  00:03:12.870
And now this role is created.
76

76

00:03:12.870  -->  00:03:16.140
So if I refresh this and look for flowlogroles,
77

77

00:03:16.140  -->  00:03:17.940
here we go, it is created.
78

78

00:03:17.940  -->  00:03:18.990
And now we need a log group.
79

79

00:03:18.990  -->  00:03:23.133
So let's go into the CloudWatch Logs console.
80

80

00:03:24.840  -->  00:03:26.253
So let's click on it here.
81

81

00:03:29.190  -->  00:03:33.330
And under logs, log groups, I'm going to create a log group.
82

82

00:03:33.330  -->  00:03:34.653
I'll call it VPCFlowLogs.
83

83

00:03:36.540  -->  00:03:40.713
And I will set the retention to one day and click on create.
84

84

00:03:42.000  -->  00:03:43.800
Click on this log group here.
85

85

00:03:43.800  -->  00:03:46.770
Now refresh this and the VPC flow logs is appearing,
86

86

00:03:46.770  -->  00:03:48.180
so we're good to go.
87

87

00:03:48.180  -->  00:03:50.160
Now let's create this flow log.
88

88

00:03:50.160  -->  00:03:52.050
And yet again, so now we have two flow logs.
89

89

00:03:52.050  -->  00:03:53.340
One flowing into Amazon S3
90

90

00:03:53.340  -->  00:03:56.100
and one flowing into CloudWatch Logs.
91

91

00:03:56.100  -->  00:03:59.820
So into Amazon S3, under my objects, I can refresh this.
92

92

00:03:59.820  -->  00:04:02.940
And as we can see, some AWS Logs have already been created.
93

93

00:04:02.940  -->  00:04:05.250
I can click on it, look at the VPC flow logs
94

94

00:04:05.250  -->  00:04:08.133
for EU Central one, and then we have a timestamp.
95

95

00:04:09.270  -->  00:04:12.810
And we have here the VPC flow logs available to us.
96

96

00:04:12.810  -->  00:04:16.050
So now let's go into the CloudWatch Logs and refresh this
97

97

00:04:16.050  -->  00:04:17.760
and have two log streams,
98

98

00:04:17.760  -->  00:04:19.860
and these log streams correspond to the ENIs
99

99

00:04:19.860  -->  00:04:21.240
within my account.
100

100

00:04:21.240  -->  00:04:26.190
So if we have a look at the ENI of my BastionHost, this one,
101

101

00:04:26.190  -->  00:04:28.500
and we have a look at the ENI numbers,
102

102

00:04:28.500  -->  00:04:30.810
so we go under networking,
103

103

00:04:30.810  -->  00:04:33.450
and what I'm going to do is put this up a little bit
104

104

00:04:33.450  -->  00:04:34.770
and look for the ENI ID.
105

105

00:04:34.770  -->  00:04:38.310
So the ENI ID is 0835.
106

106

00:04:38.310  -->  00:04:43.260
So let's go into here and look for 0835. This one, perfect.
107

107

00:04:43.260  -->  00:04:45.030
So this is showing us the kind of traffic
108

108

00:04:45.030  -->  00:04:47.730
that is happening onto my EC2 instance.
109

109

00:04:47.730  -->  00:04:50.190
And if you look at it, well, it seems that some people
110

110

00:04:50.190  -->  00:04:53.160
are trying to access my EC2 instance,
111

111

00:04:53.160  -->  00:04:54.420
but it's getting rejected.
112

112

00:04:54.420  -->  00:04:56.850
So this is the version, this is like all these fields,
113

113

00:04:56.850  -->  00:04:59.070
okay, the ENI ID and this IP address,
114

114

00:04:59.070  -->  00:05:00.090
which is a public IP address,
115

115

00:05:00.090  -->  00:05:02.670
is trying to access my EC2 instance.
116

116

00:05:02.670  -->  00:05:04.350
And this is really, like, this kind of attackers
117

117

00:05:04.350  -->  00:05:05.520
who are like attacking your instance
118

118

00:05:05.520  -->  00:05:08.100
and just scanning the web for holes and so on.
119

119

00:05:08.100  -->  00:05:10.830
So you're gonna have a lot of this kind of traffic.
120

120

00:05:10.830  -->  00:05:12.780
And you know, if I wanted to get some defense,
121

121

00:05:12.780  -->  00:05:14.940
I could, for example, if this IP address
122

122

00:05:14.940  -->  00:05:16.890
was annoying me too much,
123

123

00:05:16.890  -->  00:05:20.070
I could block it at the knuckle level, for example,
124

124

00:05:20.070  -->  00:05:21.330
and not have this traffic.
125

125

00:05:21.330  -->  00:05:24.720
But as we can see, a lot of traffic is appearing in here
126

126

00:05:24.720  -->  00:05:25.800
and it's all reject.
127

127

00:05:25.800  -->  00:05:28.349
But if I were to do some activity on my students
128

128

00:05:28.349  -->  00:05:29.182
(speaking indistinctly)
129

129

00:05:29.182  -->  00:05:32.250
for example, we would see some traffic with accept as well.
130

130

00:05:32.250  -->  00:05:36.660
And the same kind of data is going to appear on Amazon S3.
131

131

00:05:36.660  -->  00:05:39.600
So if I go here, you will have a lot of data, okay.
132

132

00:05:39.600  -->  00:05:42.480
So you use CloudWatch events like CloudWatch Logs,
133

133

00:05:42.480  -->  00:05:44.880
sorry, if you want to have like some kind of metrics filter
134

134

00:05:44.880  -->  00:05:46.380
to do some, like, real-time analysis
135

135

00:05:46.380  -->  00:05:47.400
in case you're being attacked
136

136

00:05:47.400  -->  00:05:48.990
or a lot of traffic is being rejected and so on.
137

137

00:05:48.990  -->  00:05:50.820
So this is very helpful.
138

138

00:05:50.820  -->  00:05:52.290
And you would use Amazon S3
139

139

00:05:52.290  -->  00:05:55.140
if you wanted to do some more bigger analysis,
140

140

00:05:55.140  -->  00:05:57.390
for example, using Athena.
141

141

00:05:57.390  -->  00:05:59.730
So let's go ahead and practice using Athena
142

142

00:05:59.730  -->  00:06:01.890
to query this data into my S3 bucket.
143

143

00:06:01.890  -->  00:06:04.560
So in Athena, what I'm going to do
144

144

00:06:04.560  -->  00:06:08.610
is to first set up a query result location in Amazon S3.
145

145

00:06:08.610  -->  00:06:11.670
So I'm going to click on new settings, manage,
146

146

00:06:11.670  -->  00:06:14.430
and then I need to specify an S3 bucket
147

147

00:06:14.430  -->  00:06:16.080
where I'm going to store my results.
148

148

00:06:16.080  -->  00:06:18.150
So back into Amazon S3,
149

149

00:06:18.150  -->  00:06:20.400
what I'm going to do is just quickly create an S3 bucket
150

150

00:06:20.400  -->  00:06:21.780
because this wasn't set up for this account.
151

151

00:06:21.780  -->  00:06:26.780
So I'll call this one demo-athena-stephane-v2.
152

152

00:06:27.090  -->  00:06:28.680
And this should work.
153

153

00:06:28.680  -->  00:06:30.580
Now let's click on create this bucket.
154

154

00:06:31.980  -->  00:06:34.980
View details, and I can just use this S3 bucket.
155

155

00:06:34.980  -->  00:06:39.390
So, properties, I will copy the ARN back into Athena
156

156

00:06:39.390  -->  00:06:42.000
and then click on save.
157

157

00:06:42.000  -->  00:06:45.210
So I need to just do slash and then Athena
158

158

00:06:45.210  -->  00:06:50.210
and then something like, S3://, here we go.
159

159

00:06:50.820  -->  00:06:52.110
Okay, this is good.
160

160

00:06:52.110  -->  00:06:53.820
So let's click on save.
161

161

00:06:53.820  -->  00:06:56.940
And now we have this query location being saved.
162

162

00:06:56.940  -->  00:06:59.670
And I need to go ahead and start creating a database
163

163

00:06:59.670  -->  00:07:00.750
and then create some data.
164

164

00:07:00.750  -->  00:07:03.330
So what I need to do is to go in here
165

165

00:07:03.330  -->  00:07:07.757
and I will type AWS VPC Flow Logs Athena.
166

166

00:07:09.090  -->  00:07:11.610
And this is going to take me into a tutorial
167

167

00:07:11.610  -->  00:07:12.900
on how to do it.
168

168

00:07:12.900  -->  00:07:15.780
So to do so, we need to create a table.
169

169

00:07:15.780  -->  00:07:18.210
And this whole statement right here shows you how.
170

170

00:07:18.210  -->  00:07:23.070
So let's go ahead and paste this in my Athena UI,
171

171

00:07:23.070  -->  00:07:24.510
so here we go.
172

172

00:07:24.510  -->  00:07:27.690
And we need to specify where the data is.
173

173

00:07:27.690  -->  00:07:30.960
So the log bucket, the prefixed logs, and then account ID,
174

174

00:07:30.960  -->  00:07:33.060
VPC flow logs and region code.
175

175

00:07:33.060  -->  00:07:35.850
So let's find it. So let's go back in here.
176

176

00:07:35.850  -->  00:07:37.263
This is my Athena buckets.
177

177

00:07:38.100  -->  00:07:40.560
No, this is my VPC flow logs bucket. Here we go.
178

178

00:07:40.560  -->  00:07:42.390
So let's go to the top of it just to go back.
179

179

00:07:42.390  -->  00:07:46.770
So, logs, the account ID, VPC flow logs, region.
180

180

00:07:46.770  -->  00:07:47.880
Okay, we got it.
181

181

00:07:47.880  -->  00:07:50.730
Now we're going to copy this S3 URI
182

182

00:07:50.730  -->  00:07:55.730
directly back into Athena and I'm going to paste this in.
183

183

00:07:56.190  -->  00:07:57.690
Okay, perfect.
184

184

00:07:57.690  -->  00:07:59.793
And let's run this statement.
185

185

00:08:01.560  -->  00:08:02.640
So this completed,
186

186

00:08:02.640  -->  00:08:06.300
and now we have a VPC flow log table in here.
187

187

00:08:06.300  -->  00:08:08.100
Okay, and it is partitioned.
188

188

00:08:08.100  -->  00:08:11.220
So as you can see, we have all the information in here.
189

189

00:08:11.220  -->  00:08:12.690
Now the second thing we need to do
190

190

00:08:12.690  -->  00:08:13.860
is to run another statement.
191

191

00:08:13.860  -->  00:08:18.860
So let's go here and find this alter table, okay,
192

192

00:08:21.180  -->  00:08:23.490
to create partitions to read this data.
193

193

00:08:23.490  -->  00:08:27.960
So let's copy this, paste this in,
194

194

00:08:27.960  -->  00:08:31.080
and again, we need to specify a date
195

195

00:08:31.080  -->  00:08:34.560
and as well as the entire replacement
196

196

00:08:34.560  -->  00:08:37.290
for month, year, and day.
197

197

00:08:37.290  -->  00:08:38.730
Okay, so let's go ahead and do this.
198

198

00:08:38.730  -->  00:08:43.730
So back into Amazon S3, into my objects,
199

199

00:08:43.950  -->  00:08:46.740
I will click, click and click.
200

200

00:08:46.740  -->  00:08:51.740
Go back to properties and paste this copy and paste this in.
201

201

00:08:52.320  -->  00:08:53.550
So we're good to go.
202

202

00:08:53.550  -->  00:08:58.470
And then we need to add a partition. So 2021-10-06.
203

203

00:08:58.470  -->  00:08:59.640
And this is quite manual
204

204

00:08:59.640  -->  00:09:02.550
but Google can help with automating this.
205

205

00:09:02.550  -->  00:09:04.680
Now let's run the statement.
206

206

00:09:04.680  -->  00:09:06.240
And the statement was successfully completed,
207

207

00:09:06.240  -->  00:09:08.880
so now we have added one partition into our table.
208

208

00:09:08.880  -->  00:09:10.980
And then finally we can query the flow logs
209

209

00:09:10.980  -->  00:09:12.810
just by doing a select.
210

210

00:09:12.810  -->  00:09:17.810
So let's do this to find all the reject traffic
211

211

00:09:18.900  -->  00:09:20.613
and then click on run.
212

212

00:09:22.920  -->  00:09:23.753
And this has worked.
213

213

00:09:23.753  -->  00:09:26.820
And now we have 46 results and we can have a look.
214

214

00:09:26.820  -->  00:09:31.820
So, day, date, interface ID, source address, action, reject,
215

215

00:09:31.860  -->  00:09:33.450
protocol, six.
216

216

00:09:33.450  -->  00:09:35.190
So we can get a lot of information from Athena.
217

217

00:09:35.190  -->  00:09:37.380
We can start doing some complex queries to try to group,
218

218

00:09:37.380  -->  00:09:39.060
for example, by IP addresses,
219

219

00:09:39.060  -->  00:09:41.010
see who is attacking us the most,
220

220

00:09:41.010  -->  00:09:42.330
where we're attacked the most, and so on.
221

221

00:09:42.330  -->  00:09:43.230
So this could be quite helpful
222

222

00:09:43.230  -->  00:09:45.660
for doing some batch analysis, okay.
223

223

00:09:45.660  -->  00:09:47.610
But that's it, we've seen how to set a VPC flow logs,
224

224

00:09:47.610  -->  00:09:49.980
we've sent to CloudWatch Logs and to Amazon S3.
225

225

00:09:49.980  -->  00:09:52.140
We've used Athena to query these logs in Amazon S3.
226

226

00:09:52.140  -->  00:09:53.880
So, very complete demo.
227

227

00:09:53.880  -->  00:09:56.730
And what I'm going to do now is just disable these logs.
228

228

00:09:56.730  -->  00:09:57.960
I'm going to delete them,
229

229

00:09:57.960  -->  00:10:00.510
just not to run any ongoing cost, okay?
230

230

00:10:00.510  -->  00:10:01.343
So that's it.
231

231

00:10:01.343  -->  00:10:04.290
I hope you liked it, and I will see you in the next lecture.
