1
1

00:00:00,030  -->  00:00:00,960
<v Instructor>Okay, so let's talk</v>
2

2

00:00:00,960  -->  00:00:04,380
about SSL encryption for your Elastic Load Balancer.
3

3

00:00:04,380  -->  00:00:06,660
So this is our classic architecture,
4

4

00:00:06,660  -->  00:00:09,030
and the idea is that you could have termination
5

5

00:00:09,030  -->  00:00:10,470
at the ELB level
6

6

00:00:10,470  -->  00:00:13,830
by having an SSL or TLS certificate loaded onto it.
7

7

00:00:13,830  -->  00:00:17,160
In which case, while our users will access our ELB
8

8

00:00:17,160  -->  00:00:18,630
using an encrypted connection
9

9

00:00:18,630  -->  00:00:22,650
for example, HTTPS, but there is going to be a termination
10

10

00:00:22,650  -->  00:00:25,890
because then the ELB will just send HTTP traffic
11

11

00:00:25,890  -->  00:00:30,060
over your prior VPC into your EC2 instances.
12

12

00:00:30,060  -->  00:00:32,610
So you would load an SSL or TLS certificate
13

13

00:00:32,610  -->  00:00:35,580
on the ELB and to manage these certificates,
14

14

00:00:35,580  -->  00:00:39,420
you need to use ACM, which is AWS Certificate Manager.
15

15

00:00:39,420  -->  00:00:42,480
You can upload your own certificates as well onto ACM
16

16

00:00:42,480  -->  00:00:44,760
and then have them used by the ELB.
17

17

00:00:44,760  -->  00:00:46,590
For your HTTPS listener,
18

18

00:00:46,590  -->  00:00:49,170
you must specify a default certificate
19

19

00:00:49,170  -->  00:00:52,200
and you can have as well an optional list of certificates
20

20

00:00:52,200  -->  00:00:54,840
if you wanted to support multiple domains.
21

21

00:00:54,840  -->  00:00:55,673
And as we'll see,
22

22

00:00:55,673  -->  00:00:58,650
there's something called Server Name Indication, SNI,
23

23

00:00:58,650  -->  00:01:00,900
to allow clients to specify the domain
24

24

00:01:00,900  -->  00:01:02,610
the hostname they're gonna trying to reach
25

25

00:01:02,610  -->  00:01:05,460
and therefore your ELB will be able to send back
26

26

00:01:05,460  -->  00:01:07,200
the correct certificates.
27

27

00:01:07,200  -->  00:01:10,200
You can also specify an SSL Security Policy
28

28

00:01:10,200  -->  00:01:12,780
for compliance features, compatibility, or security
29

29

00:01:12,780  -->  00:01:15,600
as we'll see in the very next slides.
30

30

00:01:15,600  -->  00:01:19,200
So now let's talk about SNI or Server Name Indication.
31

31

00:01:19,200  -->  00:01:21,060
The idea is that SNI will solve the problem
32

32

00:01:21,060  -->  00:01:23,250
of loading multiple SSL certificates
33

33

00:01:23,250  -->  00:01:25,800
onto one single web server
34

34

00:01:25,800  -->  00:01:28,260
that will be serving multiple websites and domains.
35

35

00:01:28,260  -->  00:01:31,110
So we have our ALB and say, we have two target groups.
36

36

00:01:31,110  -->  00:01:35,280
One is www.mycorp.com, which has EC2 instances.
37

37

00:01:35,280  -->  00:01:39,030
And the other target group will be serving demo.example.com
38

38

00:01:39,030  -->  00:01:41,520
with other sets of EC2 instances.
39

39

00:01:41,520  -->  00:01:42,900
The idea is that on our ALB
40

40

00:01:42,900  -->  00:01:45,417
we're going to have routing based on hostname.
41

41

00:01:45,417  -->  00:01:48,210
And so therefore the hostname when indicated
42

42

00:01:48,210  -->  00:01:51,510
will be served by the right target group.
43

43

00:01:51,510  -->  00:01:53,850
Now, we're also going to load a lot of certificates
44

44

00:01:53,850  -->  00:01:54,683
on the ALB.
45

45

00:01:54,683  -->  00:01:57,120
So we're going to load demo.example.com,
46

46

00:01:57,120  -->  00:02:00,570
but also www.mycorp.com as well as maybe other ones
47

47

00:02:00,570  -->  00:02:03,000
and a default SSL Certificates.
48

48

00:02:03,000  -->  00:02:03,833
What's going to happen
49

49

00:02:03,833  -->  00:02:06,390
is that a client when it connects to your ALB,
50

50

00:02:06,390  -->  00:02:08,880
will indicate the server name, the hostname.
51

51

00:02:08,880  -->  00:02:12,660
So I would like to connect to www.mycorp.com
52

52

00:02:12,660  -->  00:02:14,453
and thanks to the SNI feature,
53

53

00:02:14,453  -->  00:02:17,010
the ALB will know which SSL certificate
54

54

00:02:17,010  -->  00:02:20,280
to use to establish the connection with the clients
55

55

00:02:20,280  -->  00:02:22,470
and make sure it is correctly encrypted.
56

56

00:02:22,470  -->  00:02:25,590
So SNI is quote in quote, a newer protocol
57

57

00:02:25,590  -->  00:02:27,870
and requires the client to indicate the hostname
58

58

00:02:27,870  -->  00:02:30,210
of the target it tries to connect to
59

59

00:02:30,210  -->  00:02:31,890
during the initial SSL handshake.
60

60

00:02:31,890  -->  00:02:32,820
And therefore,
61

61

00:02:32,820  -->  00:02:34,800
the server will find the correct certificates.
62

62

00:02:34,800  -->  00:02:38,550
This only works therefore for the newer generations types
63

63

00:02:38,550  -->  00:02:41,160
of load balancer, such as the Application Load Balancer
64

64

00:02:41,160  -->  00:02:42,813
and the Network Load Balancer.
65

65

00:02:43,830  -->  00:02:46,830
Now, these SSL certificates can be loaded onto the CLB.
66

66

00:02:46,830  -->  00:02:49,770
So the CLB supports only one SSL certificate.
67

67

00:02:49,770  -->  00:02:51,840
And if you wanted to support multiple hostnames
68

68

00:02:51,840  -->  00:02:54,420
through your CLB, you would need to use SAN.
69

69

00:02:54,420  -->  00:02:57,990
So Subject Alternate Name on your SSL certificates.
70

70

00:02:57,990  -->  00:02:59,340
But the idea is that anytime you will need
71

71

00:02:59,340  -->  00:03:01,380
to add or remove a domain name,
72

72

00:03:01,380  -->  00:03:05,070
you will need to edit the SSL certificate with new SANs.
73

73

00:03:05,070  -->  00:03:07,320
And so therefore it is a complicated process
74

74

00:03:07,320  -->  00:03:09,120
because you will need to reissue
75

75

00:03:09,120  -->  00:03:12,210
and reassign these certificates over time.
76

76

00:03:12,210  -->  00:03:15,720
Therefore, sometimes the best option is to use multiple CLBs
77

77

00:03:15,720  -->  00:03:19,440
for multiple hostnames with multiple SSL certificates.
78

78

00:03:19,440  -->  00:03:21,480
But if you can transition away
79

79

00:03:21,480  -->  00:03:23,700
from the CLB and use the ALB instead,
80

80

00:03:23,700  -->  00:03:26,130
because the ALB has the Server Name Indication feature
81

81

00:03:26,130  -->  00:03:28,740
that we just saw that will simplify your life.
82

82

00:03:28,740  -->  00:03:29,940
So talking about the ALB,
83

83

00:03:29,940  -->  00:03:32,280
it supports multiple HTTPS listeners
84

84

00:03:32,280  -->  00:03:34,500
and multiple SSL certificates.
85

85

00:03:34,500  -->  00:03:36,450
And then in order to make it work
86

86

00:03:36,450  -->  00:03:37,860
with multiple hostnames,
87

87

00:03:37,860  -->  00:03:40,440
then we're going to use this Server Name Indication feature,
88

88

00:03:40,440  -->  00:03:42,240
the SNI feature we just saw.
89

89

00:03:42,240  -->  00:03:43,350
The NLB is similar.
90

90

00:03:43,350  -->  00:03:44,580
It supports multiple listeners
91

91

00:03:44,580  -->  00:03:46,440
with multiple SSL certificates.
92

92

00:03:46,440  -->  00:03:48,570
And we're also going to use SNI
93

93

00:03:48,570  -->  00:03:50,703
to serve the correct SSL certificates.
94

94

00:03:51,630  -->  00:03:53,400
Now, finally, it is possible for you
95

95

00:03:53,400  -->  00:03:54,990
to set up a security policy
96

96

00:03:54,990  -->  00:03:58,650
for your HTTPS or your SSL listener.
97

97

00:03:58,650  -->  00:04:01,380
So security policy is a combination
98

98

00:04:01,380  -->  00:04:04,590
of SSL protocols, SSL ciphers
99

99

00:04:04,590  -->  00:04:06,780
and Server Order Preference option
100

100

00:04:06,780  -->  00:04:10,170
that's going to be supported during the SSL negotiation.
101

101

00:04:10,170  -->  00:04:12,090
That is when your client is connecting
102

102

00:04:12,090  -->  00:04:15,210
to your server and establishing a secure connection.
103

103

00:04:15,210  -->  00:04:18,180
So you can use some predefined security policies
104

104

00:04:18,180  -->  00:04:22,290
for example, the ELBSecurityPolicy-2016-08
105

105

00:04:22,290  -->  00:04:25,860
and then apply it to your load balancer.
106

106

00:04:25,860  -->  00:04:28,260
So if you consider the Application Load Balancer
107

107

00:04:28,260  -->  00:04:30,510
and the Network Load Balancer,
108

108

00:04:30,510  -->  00:04:32,970
then in case of frontend connections,
109

109

00:04:32,970  -->  00:04:36,270
so connections from the client to your load balancer,
110

110

00:04:36,270  -->  00:04:39,960
then you can use a predefined security policy.
111

111

00:04:39,960  -->  00:04:42,120
And for backend connections,
112

112

00:04:42,120  -->  00:04:46,440
then you must use the ELBSecurityPolicy-2016-08.
113

113

00:04:46,440  -->  00:04:48,450
It's going to be always used.
114

114

00:04:48,450  -->  00:04:52,410
So what can we set for predefined security policy?
115

115

00:04:52,410  -->  00:04:53,370
We have different ones.
116

116

00:04:53,370  -->  00:04:54,450
We have the default I just showed you.
117

117

00:04:54,450  -->  00:04:58,770
But also you can use the ELBSecurityPolicy-TLS policies.
118

118

00:04:58,770  -->  00:05:01,680
So in this case, you must meet compliance
119

119

00:05:01,680  -->  00:05:03,750
and security standards that require
120

120

00:05:03,750  -->  00:05:06,960
to only use certain TLS protocol version.
121

121

00:05:06,960  -->  00:05:09,780
That may be something internally within your company.
122

122

00:05:09,780  -->  00:05:10,860
And also if you wanted
123

123

00:05:10,860  -->  00:05:13,980
to sometimes support older versions
124

124

00:05:13,980  -->  00:05:18,720
of SSL and TLS for your legacy clients and application.
125

125

00:05:18,720  -->  00:05:20,910
The other kind of policies you may want
126

126

00:05:20,910  -->  00:05:24,750
to use is the ELBSecurityPolicy-FS.
127

127

00:05:24,750  -->  00:05:28,290
And this is when you require Forward Secrecy.
128

128

00:05:28,290  -->  00:05:30,000
So the idea is that with this,
129

129

00:05:30,000  -->  00:05:32,670
you're going to get additional safeguards
130

130

00:05:32,670  -->  00:05:35,460
against the eavesdropping of encrypted data
131

131

00:05:35,460  -->  00:05:38,520
by using during the negotiation,
132

132

00:05:38,520  -->  00:05:41,430
a unique, random session key
133

133

00:05:41,430  -->  00:05:43,590
and that can come up in the exam.
134

134

00:05:43,590  -->  00:05:44,820
So anytime you see,
135

135

00:05:44,820  -->  00:05:48,750
how do we use a unique random session key for your ALB,
136

136

00:05:48,750  -->  00:05:53,750
think of a Forward Secrecy policy for your load balancer.
137

137

00:05:55,200  -->  00:05:57,210
Okay, so that's it for this lecture.
138

138

00:05:57,210  -->  00:05:58,110
I hope you liked it.
139

139

00:05:58,110  -->  00:06:00,243
And I will see you in the next lecture.
