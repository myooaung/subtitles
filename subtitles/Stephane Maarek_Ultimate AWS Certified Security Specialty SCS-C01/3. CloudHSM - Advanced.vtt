WEBVTT
1
1

00:00:00.150  -->  00:00:00.983
<v Instructor>So let's talk</v>
2

2

00:00:00.983  -->  00:00:03.450
about some advanced features of CloudHSM.
3

3

00:00:03.450  -->  00:00:05.430
The first one is that you have integrations
4

4

00:00:05.430  -->  00:00:09.720
with AWS Services by basically going through KMS.
5

5

00:00:09.720  -->  00:00:11.190
So when you go through KMS,
6

6

00:00:11.190  -->  00:00:14.280
you configure a KMS Custom Key Store,
7

7

00:00:14.280  -->  00:00:17.220
and this Key Store is going to be backed by CloudHSM.
8

8

00:00:17.220  -->  00:00:20.550
And this is how the CloudHSM can be used
9

9

00:00:20.550  -->  00:00:22.680
by doing integrations, for example,
10

10

00:00:22.680  -->  00:00:26.160
with EBS volumes, or encrypting S3 objects,
11

11

00:00:26.160  -->  00:00:28.410
or RDS database, et cetera, et cetera.
12

12

00:00:28.410  -->  00:00:29.243
On top of it,
13

13

00:00:29.243  -->  00:00:33.390
you can also support RDS Oracle TDE through KMS.
14

14

00:00:33.390  -->  00:00:35.130
So the diagram looks like this.
15

15

00:00:35.130  -->  00:00:36.933
We create an HSM cluster,
16

16

00:00:36.933  -->  00:00:41.070
and we connect it to AWS KMS through a custom key store.
17

17

00:00:41.070  -->  00:00:44.130
And then whenever you want to integrate a key
18

18

00:00:44.130  -->  00:00:46.830
with RDS, for example, or an EBS volume,
19

19

00:00:46.830  -->  00:00:49.230
you just set up KMS encryption,
20

20

00:00:49.230  -->  00:00:50.130
and then automatically,
21

21

00:00:50.130  -->  00:00:52.680
your data will be encrypted with CloudHSM.
22

22

00:00:52.680  -->  00:00:56.220
And the benefit of doing this is that any API calls made
23

23

00:00:56.220  -->  00:00:59.610
in KMS is going to be logged in CloudTrail.
24

24

00:00:59.610  -->  00:01:01.800
And because this key is backed by CloudHSM,
25

25

00:01:01.800  -->  00:01:05.310
we effectively have created a key usage log
26

26

00:01:05.310  -->  00:01:07.860
of CloudHSM through CloudTrail.
27

27

00:01:07.860  -->  00:01:08.850
You also have integration
28

28

00:01:08.850  -->  00:01:11.070
with third-party services with CloudHSM,
29

29

00:01:11.070  -->  00:01:14.310
so you can create and store keys in CloudHSM,
30

30

00:01:14.310  -->  00:01:17.460
and then you can perform SSL or TLS offload,
31

31

00:01:17.460  -->  00:01:19.650
Windows Server Certificate Authority,
32

32

00:01:19.650  -->  00:01:24.510
Oracle TDE, Microsoft SignTool, Java Keytool, and so on.
33

33

00:01:24.510  -->  00:01:26.010
Another thing you need to know is how
34

34

00:01:26.010  -->  00:01:28.855
to share a CloudHSM cluster across accounts.
35

35

00:01:28.855  -->  00:01:29.940
You can actually
36

36

00:01:29.940  -->  00:01:33.900
share the private subnets your CloudHSM cluster resides in
37

37

00:01:33.900  -->  00:01:35.220
using RAM,
38

38

00:01:35.220  -->  00:01:38.550
but you cannot share the CloudHSM cluster itself.
39

39

00:01:38.550  -->  00:01:40.830
So if you look at a diagram, this is what you have.
40

40

00:01:40.830  -->  00:01:42.210
You'll have a private subnet
41

41

00:01:42.210  -->  00:01:44.340
which contains your CloudHSM cluster,
42

42

00:01:44.340  -->  00:01:45.330
and then several accounts
43

43

00:01:45.330  -->  00:01:47.550
that want to access your CloudHSM cluster.
44

44

00:01:47.550  -->  00:01:50.670
What you'll do is that you share the subnets themselves
45

45

00:01:50.670  -->  00:01:53.100
within your organization, for example,
46

46

00:01:53.100  -->  00:01:55.740
or specific OUs or specific accounts.
47

47

00:01:55.740  -->  00:01:56.880
And then these accounts,
48

48

00:01:56.880  -->  00:01:59.940
because they have network connectivity into your subnets,
49

49

00:01:59.940  -->  00:02:02.280
because they can deploy stuff within your subnets,
50

50

00:02:02.280  -->  00:02:04.920
they will have access to your CloudHSM cluster.
51

51

00:02:04.920  -->  00:02:05.790
And then, of course,
52

52

00:02:05.790  -->  00:02:07.920
you need to make sure that your security groups
53

53

00:02:07.920  -->  00:02:11.550
allow traffic from clients that are in different accounts.
54

54

00:02:11.550  -->  00:02:14.580
But you cannot share a CloudHSM cluster using RAM,
55

55

00:02:14.580  -->  00:02:18.330
you must share the underlying subnet instead.
56

56

00:02:18.330  -->  00:02:19.163
Okay, that's it.
57

57

00:02:19.163  -->  00:02:20.070
I hope you liked it,
58

58

00:02:20.070  -->  00:02:22.020
and I will see you in the next lecture.
