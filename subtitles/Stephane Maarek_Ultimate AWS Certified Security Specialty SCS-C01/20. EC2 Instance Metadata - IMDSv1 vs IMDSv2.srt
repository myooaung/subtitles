1
1

00:00:00,330  -->  00:00:01,710
<v ->So let's talk about the difference</v>
2

2

00:00:01,710  -->  00:00:05,070
between IMDSv1 and IMDSv2.
3

3

00:00:05,070  -->  00:00:05,970
So you have two versions.
4

4

00:00:05,970  -->  00:00:09,480
The first version is accessible at this URL
5

5

00:00:09,480  -->  00:00:12,390
and the second version is more secure
6

6

00:00:12,390  -->  00:00:14,010
and is done in actually two steps.
7

7

00:00:14,010  -->  00:00:16,470
The first one is to get a session token
8

8

00:00:16,470  -->  00:00:18,150
using headers and PUT.
9

9

00:00:18,150  -->  00:00:20,280
This will be the kind of request you do so,
10

10

00:00:20,280  -->  00:00:23,394
you query the same IP, but this time the path is
11

11

00:00:23,394  -->  00:00:25,950
/ latest / API / token
12

12

00:00:25,950  -->  00:00:27,840
And you do a PUT on there
13

13

00:00:27,840  -->  00:00:31,200
and you define a TTL for that token, so time to live.
14

14

00:00:31,200  -->  00:00:35,220
And then using the token you will get out of this API call.
15

15

00:00:35,220  -->  00:00:37,800
You're going to use that token in
16

16

00:00:37,800  -->  00:00:40,050
IMDSv2 calls using headers.
17

17

00:00:40,050  -->  00:00:42,780
So they're the same API calls as before
18

18

00:00:42,780  -->  00:00:44,640
but this time you add a header
19

19

00:00:44,640  -->  00:00:47,310
and the header is passing the token you had before
20

20

00:00:47,310  -->  00:00:50,880
as the AWS EC2 metadata token.
21

21

00:00:50,880  -->  00:00:55,080
So this may seem just like one extra step and that's it.
22

22

00:00:55,080  -->  00:00:57,660
But the version two has security implications
23

23

00:00:57,660  -->  00:01:00,390
that AWS is describing on their own blog.
24

24

00:01:00,390  -->  00:01:01,650
I won't argue with it
25

25

00:01:01,650  -->  00:01:03,210
but you can have a long read if you want.
26

26

00:01:03,210  -->  00:01:04,470
It's quite a long piece.
27

27

00:01:04,470  -->  00:01:07,530
But the idea is that you have a newer version of IMDSv2
28

28

00:01:07,530  -->  00:01:10,230
that's more secure and has two steps now.
29

29

00:01:10,230  -->  00:01:15,210
And it's preferable to use IMDSv2 than IMDSv1.
30

30

00:01:15,210  -->  00:01:19,050
So how do we require the usage of IMDSv2?
31

31

00:01:19,050  -->  00:01:20,760
Well, it turns out that both versions
32

32

00:01:20,760  -->  00:01:23,670
are available no matter what they're enabled by default.
33

33

00:01:23,670  -->  00:01:25,440
But then there's a CloudWatch metric
34

34

00:01:25,440  -->  00:01:30,440
called Metadata No Token that shows how much IMDSv1 is used.
35

35

00:01:30,960  -->  00:01:33,150
Why is it called Metadata No Token?
36

36

00:01:33,150  -->  00:01:35,520
Well, if you don't use a token to access
37

37

00:01:35,520  -->  00:01:38,100
the metadata service which is IMDSv1
38

38

00:01:38,100  -->  00:01:40,260
then you're using Metadata No Token.
39

39

00:01:40,260  -->  00:01:43,680
And so therefore, if that metric is greater than zero
40

40

00:01:43,680  -->  00:01:45,830
that means that you are still using IMDSv1.
41

41

00:01:46,830  -->  00:01:48,330
You can also, if you wanted to
42

42

00:01:48,330  -->  00:01:51,240
force Metadata version 2 at instance launch
43

43

00:01:51,240  -->  00:01:52,920
using either the console.
44

44

00:01:52,920  -->  00:01:55,500
So there's an option when you start your EC2 Instance
45

45

00:01:55,500  -->  00:01:58,830
to say "Hey, I want V1 and V2" or "I want V2 only"
46

46

00:01:58,830  -->  00:02:00,990
where the token is required.
47

47

00:02:00,990  -->  00:02:05,010
Or using the CLI saying "Hey, HTP tokens required"
48

48

00:02:05,010  -->  00:02:08,103
Again, remember tokens means IMDSv2.
49

49

00:02:09,180  -->  00:02:11,490
Finally, when you create an AMI,
50

50

00:02:11,490  -->  00:02:13,890
you can also require IMDSv2
51

51

00:02:13,890  -->  00:02:16,530
by using the command line option.
52

52

00:02:16,530  -->  00:02:21,000
IMDS support V2 when registering that AMI.
53

53

00:02:21,000  -->  00:02:22,350
There's also other ways you can do,
54

54

00:02:22,350  -->  00:02:24,600
so for example, you can make sure that
55

55

00:02:24,600  -->  00:02:27,241
the Role Credentials are retrieved
56

56

00:02:27,241  -->  00:02:30,780
for the EC2 instance is only from IMDSv2.
57

57

00:02:30,780  -->  00:02:32,100
Well, how?
58

58

00:02:32,100  -->  00:02:36,120
Well when you have a roll delivered to your EC2 instance,
59

59

00:02:36,120  -->  00:02:38,790
now there is a IAM contacts key
60

60

00:02:38,790  -->  00:02:40,740
called the EC2 Role Delivery.
61

61

00:02:40,740  -->  00:02:42,690
Which is going to be equal to 1.0
62

62

00:02:42,690  -->  00:02:45,840
if you're using IMDSv1 and 2.0
63

63

00:02:45,840  -->  00:02:48,150
if you're using IMDSv2.
64

64

00:02:48,150  -->  00:02:51,210
So if we have this policy
65

65

00:02:51,210  -->  00:02:53,670
that's attached to the IAM role of an EC2 instance
66

66

00:02:53,670  -->  00:02:56,160
and we say "Hey deny everything,
67

67

00:02:56,160  -->  00:02:59,730
if the EC2 role delivery is less than 2.0"
68

68

00:02:59,730  -->  00:03:01,200
What's going to happen is
69

69

00:03:01,200  -->  00:03:05,100
that if you are getting credentials for role delivery 1
70

70

00:03:05,100  -->  00:03:06,960
then this denied statement is going to come
71

71

00:03:06,960  -->  00:03:09,270
into place and everything is going to be denied.
72

72

00:03:09,270  -->  00:03:10,860
So that's one way of doing it.
73

73

00:03:10,860  -->  00:03:13,860
The other way to protect only some resources,
74

74

00:03:13,860  -->  00:03:16,710
for example, would be to attach the same policy
75

75

00:03:16,710  -->  00:03:18,090
to an S3 bucket.
76

76

00:03:18,090  -->  00:03:21,270
And what you would do is that any EC2 instance
77

77

00:03:21,270  -->  00:03:24,030
that would've obtained role credentials
78

78

00:03:24,030  -->  00:03:28,500
with IMDSv1 one would be refused into the S3 buckets.
79

79

00:03:28,500  -->  00:03:31,140
And if you want to restrict an entire account
80

80

00:03:31,140  -->  00:03:35,460
for IMDSv2, then you can attach this very same policy
81

81

00:03:35,460  -->  00:03:37,560
as an SCP in your account
82

82

00:03:37,560  -->  00:03:40,800
and then you will force IMDSv2 to be used everywhere.
83

83

00:03:40,800  -->  00:03:43,290
Otherwise API calls will be denied.
84

84

00:03:43,290  -->  00:03:45,600
So to prevent the launch
85

85

00:03:45,600  -->  00:03:49,620
of an EC2 two instance using old instance metadata,
86

86

00:03:49,620  -->  00:03:52,830
what you can do is that you can attach it as an SCP
87

87

00:03:52,830  -->  00:03:55,980
or an IAM policy, whatever you want, you can attach this
88

88

00:03:55,980  -->  00:03:58,980
and it says deny EC2 two run instances
89

89

00:03:58,980  -->  00:04:02,700
when metadata tokens is not equals to required.
90

90

00:04:02,700  -->  00:04:04,440
So if we don't specify tokens
91

91

00:04:04,440  -->  00:04:06,690
then you cannot launch run instances.
92

92

00:04:06,690  -->  00:04:07,950
So that makes sense.
93

93

00:04:07,950  -->  00:04:10,680
Or if you have an instance that's already running
94

94

00:04:10,680  -->  00:04:12,570
you can modify the metadata option.
95

95

00:04:12,570  -->  00:04:14,820
It's called modify instance metadata options
96

96

00:04:14,820  -->  00:04:17,107
API call for EC2, and you can say
97

97

00:04:17,107  -->  00:04:21,268
"Hey deny this API call" except if you are, for example
98

98

00:04:21,268  -->  00:04:26,268
an admin that has the ability to re enable IMDSv1.
99

99

00:04:26,640  -->  00:04:28,470
So those are some options
100

100

00:04:28,470  -->  00:04:32,400
but you can definitely force IMDSv2 in several ways.
101

101

00:04:32,400  -->  00:04:34,184
So that's it for this lecture.
102

102

00:04:34,184  -->  00:04:37,073
I hope you liked it and I will see you in the next lecture.
