1
1

00:00:00,000  -->  00:00:03,120
<v Instructor>So let's talk about AWS Glue Security.</v>
2

2

00:00:03,120  -->  00:00:05,340
So you have encryption at rest using KMS
3

3

00:00:05,340  -->  00:00:06,780
for all your Glue concepts,
4

4

00:00:06,780  -->  00:00:09,240
such as databases, table, Job Bookmarks,
5

5

00:00:09,240  -->  00:00:11,415
and you get encryption in transit using TLS.
6

6

00:00:11,415  -->  00:00:13,881
Now, to get access to Glue for the security,
7

7

00:00:13,881  -->  00:00:16,302
either you define IAM policies,
8

8

00:00:16,302  -->  00:00:19,350
and you attach them to users, group roles, or services,
9

9

00:00:19,350  -->  00:00:21,180
and they can access Glue resources.
10

10

00:00:21,180  -->  00:00:22,530
That's one way of doing it.
11

11

00:00:22,530  -->  00:00:25,655
The other way is to use resource-based policies.
12

12

00:00:25,655  -->  00:00:27,326
This is when you attach a resource
13

13

00:00:27,326  -->  00:00:30,173
such as, very similar to an S3 bucket policy.
14

14

00:00:30,173  -->  00:00:31,839
You attach it to a Glue data catalog
15

15

00:00:31,839  -->  00:00:34,623
and that grants access to IAM identities,
16

16

00:00:34,623  -->  00:00:39,623
which is very helpful in the case of cross-account access.
17

17

00:00:39,629  -->  00:00:40,950
The next thing we have
18

18

00:00:40,950  -->  00:00:43,380
is a centralized data catalog for Glue.
19

19

00:00:43,380  -->  00:00:44,430
So how does that work?
20

20

00:00:44,430  -->  00:00:46,020
Well, we will have cross-account concerns
21

21

00:00:46,020  -->  00:00:47,892
because we want to centralize everything in Glue.
22

22

00:00:47,892  -->  00:00:49,589
So we'll have a producer account,
23

23

00:00:49,589  -->  00:00:51,430
and we'll have a consumer account,
24

24

00:00:51,430  -->  00:00:52,679
and the producer account
25

25

00:00:52,679  -->  00:00:56,259
will have the Glue data catalog connected to an S3 bucket,
26

26

00:00:56,259  -->  00:00:57,551
and say the consumer account
27

27

00:00:57,551  -->  00:01:02,280
wants to be able to query this S3 bucket through Athena,
28

28

00:01:02,280  -->  00:01:03,699
and then it wants to reference the table
29

29

00:01:03,699  -->  00:01:05,400
from the Glue data catalog.
30

30

00:01:05,400  -->  00:01:06,480
So how does that work?
31

31

00:01:06,480  -->  00:01:09,178
Well, we create a Glue data catalog policy,
32

32

00:01:09,178  -->  00:01:10,616
and in this policy,
33

33

00:01:10,616  -->  00:01:13,890
we allow a principal from another account.
34

34

00:01:13,890  -->  00:01:16,920
So this account 444, 555 and so on,
35

35

00:01:16,920  -->  00:01:20,760
to get access to the catalog, the database,
36

36

00:01:20,760  -->  00:01:23,666
and the table of our own accounts.
37

37

00:01:23,666  -->  00:01:26,350
And this is the data catalog policy
38

38

00:01:26,350  -->  00:01:28,020
and it's a resource policy.
39

39

00:01:28,020  -->  00:01:29,613
And this will allow the other accounts,
40

40

00:01:29,613  -->  00:01:31,933
if they have the proper IAM policies, of course,
41

41

00:01:31,933  -->  00:01:35,398
to query the data of our Glue data catalog.
42

42

00:01:35,398  -->  00:01:39,167
So the S3 bucket policy also must have security in place.
43

43

00:01:39,167  -->  00:01:41,460
So because the S3 bucket policy
44

44

00:01:41,460  -->  00:01:43,444
is going to be queried by Athena,
45

45

00:01:43,444  -->  00:01:46,290
you need to have also an allow statement
46

46

00:01:46,290  -->  00:01:48,579
to allow Athena or the other accounts
47

47

00:01:48,579  -->  00:01:52,950
to do a get object or list object on our buckets
48

48

00:01:52,950  -->  00:01:54,436
and our buckets' objects.
49

49

00:01:54,436  -->  00:01:56,310
So hopefully that makes sense.
50

50

00:01:56,310  -->  00:01:57,450
I hope you liked it,
51

51

00:01:57,450  -->  00:01:59,463
and I will see you in the next lecture.
