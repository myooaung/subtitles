1
1

00:00:00,240  -->  00:00:01,170
<v Instructor>So let's have a look</v>
2

2

00:00:01,170  -->  00:00:02,490
at IAM Roles for Services.
3

3

00:00:02,490  -->  00:00:04,740
So we know that some services will need
4

4

00:00:04,740  -->  00:00:06,750
to perform actions on our behalf,
5

5

00:00:06,750  -->  00:00:11,730
and so therefore we must assign permissions to AWS services,
6

6

00:00:11,730  -->  00:00:13,770
and we are using for this IAM roles.
7

7

00:00:13,770  -->  00:00:14,940
So we know this for a fact.
8

8

00:00:14,940  -->  00:00:17,340
Whenever we have an EC2 instance that wants
9

9

00:00:17,340  -->  00:00:21,660
to access the APIs of AWS, we must assign it an IAM role
10

10

00:00:21,660  -->  00:00:23,520
and then it will be able to access
11

11

00:00:23,520  -->  00:00:25,680
and allocate the DynamoDB table and so on.
12

12

00:00:25,680  -->  00:00:28,290
So I'm not telling you anything new here, I hope,
13

13

00:00:28,290  -->  00:00:31,110
so the common roles will be EC2 instance roles,
14

14

00:00:31,110  -->  00:00:33,330
Lambda function roles, roles for CloudFormation
15

15

00:00:33,330  -->  00:00:37,290
but really I think pretty much every AWS service
16

16

00:00:37,290  -->  00:00:40,143
at some point requires to have a role being created.
17

17

00:00:41,010  -->  00:00:42,390
The other thing you should know about role
18

18

00:00:42,390  -->  00:00:45,570
is how to pass a role to AWS services.
19

19

00:00:45,570  -->  00:00:49,410
So you can grant a user to pass an IAM role to a service
20

20

00:00:49,410  -->  00:00:51,510
and that's maybe something that you do not know.
21

21

00:00:51,510  -->  00:00:54,330
So with this permission, you can ensure
22

22

00:00:54,330  -->  00:00:58,530
that only the approved users can configure an AWS service
23

23

00:00:58,530  -->  00:01:00,900
with an IAM role that grants permissions.
24

24

00:01:00,900  -->  00:01:02,700
So for this, for the user to be able
25

25

00:01:02,700  -->  00:01:05,430
to pass a role to a service
26

26

00:01:05,430  -->  00:01:10,430
you have the IAM action, API call called iam:PassRole.
27

27

00:01:10,890  -->  00:01:14,640
And this can be assigned, for example, to a user.
28

28

00:01:14,640  -->  00:01:17,220
And in this example we have the GetRole
29

29

00:01:17,220  -->  00:01:20,850
and the PassRole assigned to a very specific role.
30

30

00:01:20,850  -->  00:01:22,710
So we have resource and then we have a star.
31

31

00:01:22,710  -->  00:01:27,710
So we match all roles that have the prefix EC2 roles for.
32

32

00:01:28,440  -->  00:01:31,920
And so that means that this user will be only
33

33

00:01:31,920  -->  00:01:36,630
able to PassRole that starts with EC2 roles for.
34

34

00:01:36,630  -->  00:01:39,120
And so we have effectively restricted which roles
35

35

00:01:39,120  -->  00:01:42,450
a user can pass to EC2 instances.
36

36

00:01:42,450  -->  00:01:45,120
So PassRole is not an API call on its own
37

37

00:01:45,120  -->  00:01:46,980
so you will not have any CloudTrail logs
38

38

00:01:46,980  -->  00:01:48,630
generated out of it.
39

39

00:01:48,630  -->  00:01:51,300
But instead you can review the CloudTrail log
40

40

00:01:51,300  -->  00:01:53,670
for the API call that actually created
41

41

00:01:53,670  -->  00:01:58,080
or modified the resource receiving the target IAM role.
42

42

00:01:58,080  -->  00:01:59,700
So if you create an EC2 instance
43

43

00:01:59,700  -->  00:02:01,920
and you assign it an IAM role
44

44

00:02:01,920  -->  00:02:04,530
then this is where you will find who assigned
45

45

00:02:04,530  -->  00:02:07,590
which IAM role to that EC2 instance.
46

46

00:02:07,590  -->  00:02:08,430
Alright, that's it.
47

47

00:02:08,430  -->  00:02:11,493
I hope you liked it and I will see you in the next lecture.
