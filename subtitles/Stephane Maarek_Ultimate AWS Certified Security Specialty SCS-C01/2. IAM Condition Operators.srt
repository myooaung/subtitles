1
1

00:00:00,000  -->  00:00:00,833
<v Instructor>So, now let's talk</v>
2

2

00:00:00,833  -->  00:00:02,820
about IAM condition operators.
3

3

00:00:02,820  -->  00:00:04,020
They're the operators that allow you
4

4

00:00:04,020  -->  00:00:05,940
to construct a condition,
5

5

00:00:05,940  -->  00:00:08,670
and we've seen StringEquals or StringNotEquals
6

6

00:00:08,670  -->  00:00:11,610
which is a case sensitive way of doing exact matching.
7

7

00:00:11,610  -->  00:00:13,860
In this example, we compare the principle tag
8

8

00:00:13,860  -->  00:00:18,660
of type job category to the value IAM user admin.
9

9

00:00:18,660  -->  00:00:21,000
We have StringLike and StringNotLike,
10

10

00:00:21,000  -->  00:00:22,740
and this is very similar to StringEquals,
11

11

00:00:22,740  -->  00:00:25,890
but now we allow partial matching using
12

12

00:00:25,890  -->  00:00:28,380
the star or a question mark.
13

13

00:00:28,380  -->  00:00:30,570
So, for example, in here we look at whether
14

14

00:00:30,570  -->  00:00:33,150
or not the S3 prefix of the object
15

15

00:00:33,150  -->  00:00:36,570
is corresponding to home/*/data.
16

16

00:00:36,570  -->  00:00:39,210
So, star can be replaced by anything we want.
17

17

00:00:39,210  -->  00:00:40,140
This is extremely helpful,
18

18

00:00:40,140  -->  00:00:42,570
for example, when you compare ARNs
19

19

00:00:42,570  -->  00:00:45,270
and you want to remove the account iID
20

20

00:00:45,270  -->  00:00:46,530
so you just put a star instead,
21

21

00:00:46,530  -->  00:00:47,400
and you've seen this,
22

22

00:00:47,400  -->  00:00:48,720
you must have seen this quite a lot
23

23

00:00:48,720  -->  00:00:50,160
in your experience.
24

24

00:00:50,160  -->  00:00:51,870
Then, we have DateEquals,
25

25

00:00:51,870  -->  00:00:53,373
DateLessThan, DateGreaterThan.
26

26

00:00:54,630  -->  00:00:57,390
So for example, you can compare the token issued time
27

27

00:00:57,390  -->  00:00:59,790
of your credentials to a specific timestamp,
28

28

00:00:59,790  -->  00:01:03,630
and we'll see a use case of this in some future lectures.
29

29

00:01:03,630  -->  00:01:06,090
Then, we have ArnLike and ArnNotLike.
30

30

00:01:06,090  -->  00:01:08,460
So, this is very similar to StringLike and StringNotLike,
31

31

00:01:08,460  -->  00:01:09,990
but this is used specifically
32

32

00:01:09,990  -->  00:01:12,390
for ARNs because it just works better.
33

33

00:01:12,390  -->  00:01:16,440
So, anytime you must compare ARNs with partial matching
34

34

00:01:16,440  -->  00:01:19,640
then use ArnLike and ArnNotLike.
35

35

00:01:20,550  -->  00:01:23,160
We have Bool to check for the value of a boolean.
36

36

00:01:23,160  -->  00:01:27,000
So, here we have Bool awsSecureTransport, false.
37

37

00:01:27,000  -->  00:01:28,710
So, we wanna know at runtime
38

38

00:01:28,710  -->  00:01:30,990
if secure transport is false
39

39

00:01:30,990  -->  00:01:32,190
this is how you read it,
40

40

00:01:32,190  -->  00:01:34,050
and so when secure transport is false,
41

41

00:01:34,050  -->  00:01:36,360
that means that you don't use HTTPS.
42

42

00:01:36,360  -->  00:01:37,680
This is something you'll see
43

43

00:01:37,680  -->  00:01:40,740
when we deal with S3 bucket policies, for example.
44

44

00:01:40,740  -->  00:01:42,990
We have IpAddress and NotIpAddress.
45

45

00:01:42,990  -->  00:01:44,550
So, this is a CIDR format,
46

46

00:01:44,550  -->  00:01:46,770
and here we are going to have a look whether or not,
47

47

00:01:46,770  -->  00:01:49,860
for example, the source IP of the API call
48

48

00:01:49,860  -->  00:01:52,770
corresponds to the CIDR on the right hand side.
49

49

00:01:52,770  -->  00:01:55,080
So, this is going to resolve to the IP address
50

50

00:01:55,080  -->  00:01:57,210
that the request originates from.
51

51

00:01:57,210  -->  00:01:59,460
and it's only works for public IPs,
52

52

00:01:59,460  -->  00:02:02,880
it does not apply to request made through VPC endpoints,
53

53

00:02:02,880  -->  00:02:05,670
but we'll see the type of conditions we can have
54

54

00:02:05,670  -->  00:02:09,690
for VPC endpoints to compare on private IP addresses.
55

55

00:02:09,690  -->  00:02:10,523
So, that's it.
56

56

00:02:10,523  -->  00:02:12,810
There was just a short intro around IAM conditions.
57

57

00:02:12,810  -->  00:02:13,830
I hope you liked it
58

58

00:02:13,830  -->  00:02:15,780
and I will see you in the next lecture.
