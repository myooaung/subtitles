WEBVTT
1
1

00:00:00.000  -->  00:00:00.833
<v Instructor>Let's talk about some</v>
2

2

00:00:00.833  -->  00:00:02.400
interesting security concepts
3

3

00:00:02.400  -->  00:00:04.320
around the Network Load Balancer.
4

4

00:00:04.320  -->  00:00:07.380
The first one is the client IP preservation concept.
5

5

00:00:07.380  -->  00:00:09.750
So the client IP addresses,
6

6

00:00:09.750  -->  00:00:12.750
they're forwarded to the Network Load Balancer targets
7

7

00:00:12.750  -->  00:00:14.520
but we have several options.
8

8

00:00:14.520  -->  00:00:16.200
So the client talks to the Network Load Balancer
9

9

00:00:16.200  -->  00:00:20.760
and of course the traffic goes to the EC2 instances.
10

10

00:00:20.760  -->  00:00:24.600
It turns out that when client IP preservation is turned on
11

11

00:00:24.600  -->  00:00:26.220
the EC2 instances
12

12

00:00:26.220  -->  00:00:29.850
see the request coming from the source IP of the client
13

13

00:00:29.850  -->  00:00:33.000
and not from the source IP of the NLB.
14

14

00:00:33.000  -->  00:00:34.410
But when you disable it,
15

15

00:00:34.410  -->  00:00:35.970
then the Network Load Balancer
16

16

00:00:35.970  -->  00:00:37.800
becomes the client's IP address
17

17

00:00:37.800  -->  00:00:39.600
for all incoming traffics.
18

18

00:00:39.600  -->  00:00:42.570
So when do we have client IP preservation
19

19

00:00:42.570  -->  00:00:45.960
and when don't we have client IP preservation?
20

20

00:00:45.960  -->  00:00:48.000
Well, when you have a target
21

21

00:00:48.000  -->  00:00:50.760
by instance ID or ECS task,
22

22

00:00:50.760  -->  00:00:53.460
Client IP preservation will be enabled,
23

23

00:00:53.460  -->  00:00:57.390
when you have targets by IP addresses for TCP traffic
24

24

00:00:57.390  -->  00:01:01.020
and TLS is going to be disabled by default
25

25

00:01:01.020  -->  00:01:04.579
and then when you have targets by IP address for UDP
26

26

00:01:04.579  -->  00:01:08.730
and TCP_UDP, then it's going to be enabled by default.
27

27

00:01:08.730  -->  00:01:09.810
So it's always enabled
28

28

00:01:09.810  -->  00:01:14.580
except when you have IP address for TCP and TLS.
29

29

00:01:14.580  -->  00:01:17.130
Now you can obviously change this thing
30

30

00:01:17.130  -->  00:01:21.570
but you cannot disable it for targets by instance ID
31

31

00:01:21.570  -->  00:01:26.570
and by IP address of UDP, TCP_UDP, okay?
32

32

00:01:26.850  -->  00:01:29.760
So why is it important, this setting?
33

33

00:01:29.760  -->  00:01:32.490
Well for security groups because, well
34

34

00:01:32.490  -->  00:01:33.510
the Network Load Balancers
35

35

00:01:33.510  -->  00:01:36.120
do not have associated security groups.
36

36

00:01:36.120  -->  00:01:37.710
They just pass on the traffic
37

37

00:01:37.710  -->  00:01:39.720
and the security is actually managed
38

38

00:01:39.720  -->  00:01:43.350
at the target group level for your EC2 instances.
39

39

00:01:43.350  -->  00:01:46.950
So if we have the client with a specific IP
40

40

00:01:46.950  -->  00:01:50.460
and then we're going to want the client source
41

41

00:01:50.460  -->  00:01:52.740
to go into our security group,
42

42

00:01:52.740  -->  00:01:57.740
then we must allow the specific IP of the client.
43

43

00:01:57.810  -->  00:02:01.530
And it turns out that the targets can only use IP,
44

44

00:02:01.530  -->  00:02:05.400
the target security groups can only use IP level filtering.
45

45

00:02:05.400  -->  00:02:08.100
They cannot use another security group
46

46

00:02:08.100  -->  00:02:09.797
that we are used to when we do, for example,
47

47

00:02:09.797  -->  00:02:13.650
EC2 to EC2 communication and so on.
48

48

00:02:13.650  -->  00:02:15.750
So the client goes to the NLB
49

49

00:02:15.750  -->  00:02:18.330
and then the traffic is forward to security group,
50

50

00:02:18.330  -->  00:02:21.330
either with client IP preservation
51

51

00:02:21.330  -->  00:02:24.240
or without client IP preservation.
52

52

00:02:24.240  -->  00:02:26.940
So when we have a client IP preservation enabled,
53

53

00:02:26.940  -->  00:02:28.200
what's happening is that
54

54

00:02:28.200  -->  00:02:30.720
the app traffic is gonna be forwarded
55

55

00:02:30.720  -->  00:02:34.350
directly into the EC2 instance itself
56

56

00:02:34.350  -->  00:02:36.120
which sees the original traffic
57

57

00:02:36.120  -->  00:02:38.340
coming from the IP of the client.
58

58

00:02:38.340  -->  00:02:41.550
But then we'll still have health check type of traffic
59

59

00:02:41.550  -->  00:02:42.930
coming from the Network Load Balancer
60

60

00:02:42.930  -->  00:02:44.700
into your EC2 instances
61

61

00:02:44.700  -->  00:02:48.300
and that traffic originates from the Network Load Balancer.
62

62

00:02:48.300  -->  00:02:51.810
So your inbound rules for your security groups
63

63

00:02:51.810  -->  00:02:54.930
is going to be from an application perspective.
64

64

00:02:54.930  -->  00:02:57.000
You allow the client's IP
65

65

00:02:57.000  -->  00:03:00.120
or the VPC CIDR where the client is.
66

66

00:03:00.120  -->  00:03:01.920
This is going to be for app traffic.
67

67

00:03:01.920  -->  00:03:05.700
And the second rule is to allow traffic from within your VPC
68

68

00:03:05.700  -->  00:03:07.380
on the protocol of the health check
69

69

00:03:07.380  -->  00:03:09.180
and the port range of the health check
70

70

00:03:09.180  -->  00:03:11.760
to allow the Network Load Balancer to do health check.
71

71

00:03:11.760  -->  00:03:12.720
So as you can see,
72

72

00:03:12.720  -->  00:03:14.430
these two rules can have different sources
73

73

00:03:14.430  -->  00:03:16.410
because one is coming from the client,
74

74

00:03:16.410  -->  00:03:18.750
the other one is coming from the NLB.
75

75

00:03:18.750  -->  00:03:21.900
Now if you disable client's IP preservation
76

76

00:03:21.900  -->  00:03:22.800
then what do we have?
77

77

00:03:22.800  -->  00:03:27.420
Well, the same traffic source is the Network Load Balancer
78

78

00:03:27.420  -->  00:03:29.790
regardless if it's app traffic or health check,
79

79

00:03:29.790  -->  00:03:31.470
which makes it easier to manage.
80

80

00:03:31.470  -->  00:03:34.050
So the source in this time is the VPC CIDR.
81

81

00:03:34.050  -->  00:03:37.140
So wherever your network low balancer is deployed.
82

82

00:03:37.140  -->  00:03:39.210
And then the protocol is either the listener
83

83

00:03:39.210  -->  00:03:40.260
or the health checks
84

84

00:03:40.260  -->  00:03:43.290
which allows you to get both app traffic
85

85

00:03:43.290  -->  00:03:45.540
and health checks coming from the NLB.
86

86

00:03:45.540  -->  00:03:47.130
Of course, on top of target groups,
87

87

00:03:47.130  -->  00:03:48.990
we also have network ACLs.
88

88

00:03:48.990  -->  00:03:50.190
So how does that work?
89

89

00:03:50.190  -->  00:03:52.800
Well say we have this kind of traffic
90

90

00:03:52.800  -->  00:03:55.890
and it goes into an NLB that goes into security,
91

91

00:03:55.890  -->  00:03:57.480
two EC2 instances.
92

92

00:03:57.480  -->  00:03:59.460
We have a NACL on the NLB subnets
93

93

00:03:59.460  -->  00:04:02.010
and we'll have a NACL on the private subnets
94

94

00:04:02.010  -->  00:04:04.320
where your EC2 instances are.
95

95

00:04:04.320  -->  00:04:07.530
So how do we have rules for inbound and outbound
96

96

00:04:07.530  -->  00:04:09.420
for the NLB subnets NACL
97

97

00:04:09.420  -->  00:04:12.120
and then of course the target subnets.
98

98

00:04:12.120  -->  00:04:16.020
So for the inbound of the NLB subnets, what do we need?
99

99

00:04:16.020  -->  00:04:19.380
We need to allow traffic from the client and the internet.
100

100

00:04:19.380  -->  00:04:21.420
So we have the client's IP as a source
101

101

00:04:21.420  -->  00:04:23.280
on the listener ports.
102

102

00:04:23.280  -->  00:04:26.820
And then we want to also allow the health check traffic.
103

103

00:04:26.820  -->  00:04:30.450
So anything on the VPC CIDR on a ephemeral port,
104

104

00:04:30.450  -->  00:04:33.441
so wide port range, should be allowed for outbound.
105

105

00:04:33.441  -->  00:04:36.930
We want to allow responses to the client and the internet.
106

106

00:04:36.930  -->  00:04:39.810
So again, we'll have the client IP as a listener
107

107

00:04:39.810  -->  00:04:42.450
but also we want to allow health check traffic.
108

108

00:04:42.450  -->  00:04:43.830
This is the rules we have right here.
109

109

00:04:43.830  -->  00:04:47.340
So either the health check port or a random port.
110

110

00:04:47.340  -->  00:04:49.680
Now for the target subnet NACL,
111

111

00:04:49.680  -->  00:04:53.610
we have the allowing client IP traffic from the internet.
112

112

00:04:53.610  -->  00:04:56.670
So again, if you have client IP preservation
113

113

00:04:56.670  -->  00:04:59.430
you do need to allow the client's IP
114

114

00:04:59.430  -->  00:05:01.140
and the health check protocol.
115

115

00:05:01.140  -->  00:05:04.110
And then on the way back, again, you want to allow responses
116

116

00:05:04.110  -->  00:05:07.740
to the client because, well, the target traffic is gonna go
117

117

00:05:07.740  -->  00:05:09.720
to the source IP that you received
118

118

00:05:09.720  -->  00:05:11.580
from the client IP preservation.
119

119

00:05:11.580  -->  00:05:13.290
So hopefully this shouldn't make sense
120

120

00:05:13.290  -->  00:05:14.460
but it's good to specify
121

121

00:05:14.460  -->  00:05:17.760
that network ACLs also must be properly updated
122

122

00:05:17.760  -->  00:05:21.060
to take into account the client's IP preservation.
123

123

00:05:21.060  -->  00:05:22.350
Now for troubleshooting,
124

124

00:05:22.350  -->  00:05:25.020
if a registered target is not in service,
125

125

00:05:25.020  -->  00:05:27.540
it could be because the health check is failing.
126

126

00:05:27.540  -->  00:05:28.890
And so you need to make sure
127

127

00:05:28.890  -->  00:05:31.410
that the target security group, for example,
128

128

00:05:31.410  -->  00:05:33.870
does allow traffic on the health check port
129

129

00:05:33.870  -->  00:05:36.960
and protocol from the NLB as we saw from before.
130

130

00:05:36.960  -->  00:05:39.630
We can also look at the subnet NACLs
131

131

00:05:39.630  -->  00:05:43.170
and in case the target is in service
132

132

00:05:43.170  -->  00:05:46.080
but the requests are not rooted to targets, that's possible,
133

133

00:05:46.080  -->  00:05:47.580
it's because the target security group
134

134

00:05:47.580  -->  00:05:49.050
does not allow traffic.
135

135

00:05:49.050  -->  00:05:51.197
And again, if we have client IP preservation,
136

136

00:05:51.197  -->  00:05:54.565
you must allow traffic from your client IP addresses.
137

137

00:05:54.565  -->  00:05:56.990
And if you have client's IP preservation disabled,
138

138

00:05:56.990  -->  00:05:58.686
you must allow traffic
139

139

00:05:58.686  -->  00:06:02.070
from the Network Load Balancer IP addresses.
140

140

00:06:02.070  -->  00:06:05.970
And also you need to look at your target network targets
141

141

00:06:05.970  -->  00:06:08.370
EC2 instances subnet NACL
142

142

00:06:08.370  -->  00:06:10.530
to make sure that it does allow traffic.
143

143

00:06:10.530  -->  00:06:12.960
And also you need to make sure you have enabled
144

144

00:06:12.960  -->  00:06:14.580
the target AZ because
145

145

00:06:14.580  -->  00:06:17.910
for every AZ your Network Load Balancer is going to run on.
146

146

00:06:17.910  -->  00:06:20.460
You also need to enable that AZ.
147

147

00:06:20.460  -->  00:06:24.840
Also, finally, if your EC2 instances are in a peer VPC,
148

148

00:06:24.840  -->  00:06:27.330
then you cannot register them by instance ID
149

149

00:06:27.330  -->  00:06:30.630
you must register them by IP addresses.
150

150

00:06:30.630  -->  00:06:32.400
So it's quite a lot around the Network Load Balancer
151

151

00:06:32.400  -->  00:06:34.170
for its security in the networking
152

152

00:06:34.170  -->  00:06:36.660
but it can come handy at the exam for one question.
153

153

00:06:36.660  -->  00:06:37.920
So I hope you liked it
154

154

00:06:37.920  -->  00:06:39.873
and I will see you in the next lecture.
