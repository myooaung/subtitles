WEBVTT
1
1

00:00:00.150  -->  00:00:01.530
<v Instructor>Another very short lecture</v>
2

2

00:00:01.530  -->  00:00:05.820
on how KMS is integrated with the SSM parameter store.
3

3

00:00:05.820  -->  00:00:08.850
So we know we can use KMS keys to actually encrypt
4

4

00:00:08.850  -->  00:00:10.800
and decrypt the parameters
5

5

00:00:10.800  -->  00:00:13.980
in the parameter store of type secure string.
6

6

00:00:13.980  -->  00:00:15.810
So here we pass in the parameter value.
7

7

00:00:15.810  -->  00:00:17.490
For example, the API Key,
8

8

00:00:17.490  -->  00:00:20.550
and the SSM parameter store will automatically
9

9

00:00:20.550  -->  00:00:22.620
call the KMS service to encrypt it
10

10

00:00:22.620  -->  00:00:26.730
and get back the encrypted value of that parameter.
11

11

00:00:26.730  -->  00:00:27.960
Now, there are two types
12

12

00:00:27.960  -->  00:00:31.470
of secure string parameters in the SSM parameter store.
13

13

00:00:31.470  -->  00:00:33.450
The first one is the standard.
14

14

00:00:33.450  -->  00:00:35.820
And so all these parameters will be encrypted
15

15

00:00:35.820  -->  00:00:37.710
using the same KMS keys,
16

16

00:00:37.710  -->  00:00:40.470
but if you're using the advanced type of parameter,
17

17

00:00:40.470  -->  00:00:41.700
they can actually be bigger
18

18

00:00:41.700  -->  00:00:44.070
than what KMS allows for encryption.
19

19

00:00:44.070  -->  00:00:46.170
And so therefore, each parameter is going
20

20

00:00:46.170  -->  00:00:49.920
to be encrypted thanks to encryption envelope.
21

21

00:00:49.920  -->  00:00:53.880
So using a unique data key, and this is the concept
22

22

00:00:53.880  -->  00:00:56.850
of encryption for advanced type of parameters.
23

23

00:00:56.850  -->  00:00:58.320
So to encrypt it,
24

24

00:00:58.320  -->  00:01:00.630
we simply specify the KMS key we wants,
25

25

00:01:00.630  -->  00:01:01.830
if it's a custom one,
26

26

00:01:01.830  -->  00:01:06.570
or we can use the AWS-managed key, the AWS SSM key.
27

27

00:01:06.570  -->  00:01:09.300
It only works for symmetric KMS keys
28

28

00:01:09.300  -->  00:01:12.510
and all the encryption will happen within KMS.
29

29

00:01:12.510  -->  00:01:15.780
So to make sure that we can access a parameter
30

30

00:01:15.780  -->  00:01:18.720
in the parameter store that has been KMS encrypted,
31

31

00:01:18.720  -->  00:01:21.630
we must have access to both the KMS key
32

32

00:01:21.630  -->  00:01:25.170
and the SSM parameter from an IAM perspective.
33

33

00:01:25.170  -->  00:01:26.010
All right, that's it.
34

34

00:01:26.010  -->  00:01:28.960
I hope you liked it and I will see you in the next lecture.
