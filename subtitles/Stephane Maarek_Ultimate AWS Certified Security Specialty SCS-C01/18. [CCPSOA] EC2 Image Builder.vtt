WEBVTT
1
1

00:00:00.560  -->  00:00:03.010
<v Instructor>Okay, so let's talk about a new service</v>
2

2

00:00:03.010  -->  00:00:05.950
that I really like and that does come up in the exam now.
3

3

00:00:05.950  -->  00:00:08.810
It is called EC2 Image Builder.
4

4

00:00:08.810  -->  00:00:11.080
It is used to automate the creation
5

5

00:00:11.080  -->  00:00:14.870
of virtual machines or container images.
6

6

00:00:14.870  -->  00:00:17.090
Concretely, what does that mean for the exam?
7

7

00:00:17.090  -->  00:00:18.540
That means that you're gonna be able
8

8

00:00:18.540  -->  00:00:20.190
with EC2 Image Builder
9

9

00:00:20.190  -->  00:00:23.530
to automate the creation, maintain, validate
10

10

00:00:23.530  -->  00:00:27.690
and test AMIs for EC2 instances.
11

11

00:00:27.690  -->  00:00:28.980
So let's have a look at a diagram
12

12

00:00:28.980  -->  00:00:31.100
to see how that works in a detail.
13

13

00:00:31.100  -->  00:00:33.880
So we have the EC2 Image Builder service,
14

14

00:00:33.880  -->  00:00:35.070
and we're going to set it up,
15

15

00:00:35.070  -->  00:00:36.720
as we'll see in the next lecture.
16

16

00:00:36.720  -->  00:00:39.310
And it is automatically, when it's going to run,
17

17

00:00:39.310  -->  00:00:41.730
it is going to create an EC2 instance
18

18

00:00:41.730  -->  00:00:43.610
called a Builder EC2 instance.
19

19

00:00:43.610  -->  00:00:47.630
And that EC2 instance is going to build components
20

20

00:00:47.630  -->  00:00:49.090
and customize a software.
21

21

00:00:49.090  -->  00:00:52.800
For example, install Java, update the CLI,
22

22

00:00:52.800  -->  00:00:55.690
update the software system, maybe install firewalls,
23

23

00:00:55.690  -->  00:00:58.550
whatever you define to happen on that EC2 instance,
24

24

00:00:58.550  -->  00:01:00.400
maybe install your application.
25

25

00:01:00.400  -->  00:01:02.290
And then once this is done,
26

26

00:01:02.290  -->  00:01:04.990
then an AMI is going to be created
27

27

00:01:04.990  -->  00:01:07.170
out of that EC2 instance.
28

28

00:01:07.170  -->  00:01:09.613
But all of this is obviously automated.
29

29

00:01:10.470  -->  00:01:12.800
Then the AMI is created, but we want to validate it.
30

30

00:01:12.800  -->  00:01:16.980
So EC2 Image Builder will automatically create
31

31

00:01:16.980  -->  00:01:20.530
a test EC2 instance from that AMI
32

32

00:01:20.530  -->  00:01:22.690
and going to run a bunch of tests
33

33

00:01:22.690  -->  00:01:24.830
that you are defining in advance.
34

34

00:01:24.830  -->  00:01:25.890
And if you don't wanna run any tests,
35

35

00:01:25.890  -->  00:01:28.270
obviously, you can just skip that test.
36

36

00:01:28.270  -->  00:01:30.670
But the test can be asking,
37

37

00:01:30.670  -->  00:01:31.870
is the AMI working?
38

38

00:01:31.870  -->  00:01:32.970
Is it secure?
39

39

00:01:32.970  -->  00:01:34.920
Is my application running correctly?
40

40

00:01:34.920  -->  00:01:36.310
All these kind of things.
41

41

00:01:36.310  -->  00:01:39.490
And then once the AMI is tested,
42

42

00:01:39.490  -->  00:01:42.050
then the AMI is going to be distributed.
43

43

00:01:42.050  -->  00:01:45.390
So while EC2 Image Builder is original service,
44

44

00:01:45.390  -->  00:01:48.180
it is possible for you to take that AMI
45

45

00:01:48.180  -->  00:01:50.980
and distribute it to multiple regions,
46

46

00:01:50.980  -->  00:01:52.420
therefore allowing your application
47

47

00:01:52.420  -->  00:01:54.713
and your workflow to be truly global.
48

48

00:01:56.090  -->  00:01:59.800
Next, EC2 Image Builder can be run on a schedule,
49

49

00:01:59.800  -->  00:02:01.750
so you can define a weekly schedule,
50

50

00:02:01.750  -->  00:02:04.770
or you can run whenever packages are updated,
51

51

00:02:04.770  -->  00:02:07.410
or you can run them manually, et cetera, et cetera.
52

52

00:02:07.410  -->  00:02:09.000
And it is a free service,
53

53

00:02:09.000  -->  00:02:12.450
so you're only going to pay for the underlying resources.
54

54

00:02:12.450  -->  00:02:13.400
What does that mean?
55

55

00:02:13.400  -->  00:02:17.000
Well, that means that if you create an EC2 instance
56

56

00:02:17.000  -->  00:02:18.670
during this process,
57

57

00:02:18.670  -->  00:02:22.290
and EC2 Image Builder will create these EC2 instances,
58

58

00:02:22.290  -->  00:02:24.830
then you're going to pay for these EC2 instances.
59

59

00:02:24.830  -->  00:02:27.400
And when the AMI is created and distributed,
60

60

00:02:27.400  -->  00:02:28.940
you're going to pay for the storage
61

61

00:02:28.940  -->  00:02:32.010
of that AMI wherever it has been created
62

62

00:02:32.010  -->  00:02:34.040
and wherever it has been distributed,
63

63

00:02:34.040  -->  00:02:35.470
but that should make sense, right?
64

64

00:02:35.470  -->  00:02:37.210
So in the next lecture, we'll have a look
65

65

00:02:37.210  -->  00:02:41.010
at how this service works to really have a concrete idea
66

66

00:02:41.010  -->  00:02:44.860
of the automation provided by EC2 Image Builder.
67

67

00:02:44.860  -->  00:02:46.760
So I will see you in the next lecture.
