1
1

00:00:00,120  -->  00:00:02,160
<v ->So now let's talk about VPC endpoints.</v>
2

2

00:00:02,160  -->  00:00:04,410
And they are at the core of the exam,
3

3

00:00:04,410  -->  00:00:06,660
so super important for you to know about them.
4

4

00:00:06,660  -->  00:00:09,840
These endpoints allow you to connect to AWS services
5

5

00:00:09,840  -->  00:00:12,210
using a private network instead of going over
6

6

00:00:12,210  -->  00:00:15,660
the public internet network like you usually do.
7

7

00:00:15,660  -->  00:00:18,120
These VPC endpoints will scale horizontally,
8

8

00:00:18,120  -->  00:00:19,260
and they will be redundant,
9

9

00:00:19,260  -->  00:00:22,230
so that you can survive the loss of an availability zone.
10

10

00:00:22,230  -->  00:00:24,480
So you don't need to manage internet gateways
11

11

00:00:24,480  -->  00:00:26,910
or net gateways then to access services,
12

12

00:00:26,910  -->  00:00:28,320
because you don't access them
13

13

00:00:28,320  -->  00:00:31,740
over the public internet anymore; you access them privately.
14

14

00:00:31,740  -->  00:00:33,390
So that means that an EC2 instance
15

15

00:00:33,390  -->  00:00:36,390
in the private subnet has the chance, for example,
16

16

00:00:36,390  -->  00:00:40,260
through a VPC endpoint gateway to access Amazon S3
17

17

00:00:40,260  -->  00:00:41,730
and then DynamoDB.
18

18

00:00:41,730  -->  00:00:45,060
So VPC endpoint gateway only support S3 and DynamoDB.
19

19

00:00:45,060  -->  00:00:46,380
So this way, as you can see,
20

20

00:00:46,380  -->  00:00:49,620
no net gateways needed, no internet gateways needed.
21

21

00:00:49,620  -->  00:00:52,220
Just the VPC endpoint gateway and you're good to go.
22

22

00:00:53,130  -->  00:00:55,830
Next we have the VPC endpoint interface,
23

23

00:00:55,830  -->  00:00:58,740
which supports all services except DynamoDB.
24

24

00:00:58,740  -->  00:01:01,290
So for example, if you want to privately access CloudWatch,
25

25

00:01:01,290  -->  00:01:03,630
for example, to push metrics and logs
26

26

00:01:03,630  -->  00:01:06,150
from a private EC2 instance onto CloudWatch,
27

27

00:01:06,150  -->  00:01:06,983
what you would do is
28

28

00:01:06,983  -->  00:01:09,570
that you would create a VPC endpoint interface,
29

29

00:01:09,570  -->  00:01:12,900
which is an ENI that will live in your private subnet.
30

30

00:01:12,900  -->  00:01:14,970
And then by connecting to this ENI,
31

31

00:01:14,970  -->  00:01:17,940
we will be connected directly to the CloudWatch service.
32

32

00:01:17,940  -->  00:01:20,370
In case you're having issues with VPC endpoints,
33

33

00:01:20,370  -->  00:01:23,970
you must check the DNS setting resolution in your VPC,
34

34

00:01:23,970  -->  00:01:26,040
because it leverages the DNS in the backend
35

35

00:01:26,040  -->  00:01:28,380
to make it transparent for your applications.
36

36

00:01:28,380  -->  00:01:31,110
And also you must check the route tables to make sure,
37

37

00:01:31,110  -->  00:01:33,420
for example, when you have a VPC endpoint gateway,
38

38

00:01:33,420  -->  00:01:35,790
that the correct routing is in place.
39

39

00:01:35,790  -->  00:01:39,360
Let's do a drill down into now the VPC endpoint gateway.
40

40

00:01:39,360  -->  00:01:42,870
So this only works for S3 and DynamoDB,
41

41

00:01:42,870  -->  00:01:46,200
and you must create one gateway per VPC.
42

42

00:01:46,200  -->  00:01:48,690
So for this, you must update the route tables entries,
43

43

00:01:48,690  -->  00:01:50,760
so you don't manage any security groups.
44

44

00:01:50,760  -->  00:01:53,040
All you do is network related.
45

45

00:01:53,040  -->  00:01:55,830
The gateway is going to be defined at the VPC level.
46

46

00:01:55,830  -->  00:01:59,490
So for example, we'll have a VPC endpoint gateway for S3,
47

47

00:01:59,490  -->  00:02:02,163
and then this EC2 instance: to be able to access
48

48

00:02:02,163  -->  00:02:07,050
this VPC endpoint gateway, you must define a route table.
49

49

00:02:07,050  -->  00:02:08,700
And this route table will contain,
50

50

00:02:08,700  -->  00:02:11,340
for example as you can see here on the second line,
51

51

00:02:11,340  -->  00:02:15,210
the fact that the destination is for Amazon S3
52

52

00:02:15,210  -->  00:02:19,020
and that the target goes through this VPC endpoint gateway.
53

53

00:02:19,020  -->  00:02:21,240
And therefore, thanks to this route table,
54

54

00:02:21,240  -->  00:02:23,640
whenever the EC2 instance tries to connect
55

55

00:02:23,640  -->  00:02:24,870
to the S3 service,
56

56

00:02:24,870  -->  00:02:29,190
it will be routed through the VPC endpoint gateway.
57

57

00:02:29,190  -->  00:02:30,540
For this to work, you must make sure
58

58

00:02:30,540  -->  00:02:34,680
that the DNS resolution is enabled at the VPC level,
59

59

00:02:34,680  -->  00:02:38,010
because this is also leveraging DNS names.
60

60

00:02:38,010  -->  00:02:39,420
Then once you have this in place,
61

61

00:02:39,420  -->  00:02:42,090
you can use the public host name for Amazon S3
62

62

00:02:42,090  -->  00:02:44,130
to access it privately, because well...
63

63

00:02:44,130  -->  00:02:46,320
the routing will happen on the private internet
64

64

00:02:46,320  -->  00:02:48,960
on your private network no matter what.
65

65

00:02:48,960  -->  00:02:51,300
Now this VPC endpoint gateway,
66

66

00:02:51,300  -->  00:02:54,090
it cannot be extended out of your VPC.
67

67

00:02:54,090  -->  00:02:56,220
So VPN connections do not work.
68

68

00:02:56,220  -->  00:02:57,870
Direct connect does not work.
69

69

00:02:57,870  -->  00:02:59,190
Transit gateway does not work,
70

70

00:02:59,190  -->  00:03:00,960
or VPC peering does not work.
71

71

00:03:00,960  -->  00:03:01,830
That's why you have to create
72

72

00:03:01,830  -->  00:03:06,450
one VPC endpoint per gateway per VPC you have
73

73

00:03:06,450  -->  00:03:08,223
if you have multiple VPCs.
74

74

00:03:09,660  -->  00:03:12,990
VPC Endpoints Interface are slightly different.
75

75

00:03:12,990  -->  00:03:16,440
They provide you an Elastic Network Interface: ENI.
76

76

00:03:16,440  -->  00:03:19,890
They will have a private endpoint interface host name.
77

77

00:03:19,890  -->  00:03:22,260
This will--is going to leverage the security groups
78

78

00:03:22,260  -->  00:03:25,350
for security, and you're going to have a private DNS,
79

79

00:03:25,350  -->  00:03:28,050
which is a setting when you create the endpoint.
80

80

00:03:28,050  -->  00:03:31,740
That means that the public host name of your service
81

81

00:03:31,740  -->  00:03:32,760
is going to resolve
82

82

00:03:32,760  -->  00:03:35,580
to the private endpoint interface host name.
83

83

00:03:35,580  -->  00:03:37,860
So you must make sure that the VPC settings
84

84

00:03:37,860  -->  00:03:40,950
enable DNS host names and enable DNS support
85

85

00:03:40,950  -->  00:03:42,450
are set to true.
86

86

00:03:42,450  -->  00:03:43,740
And then for Athena where you will get,
87

87

00:03:43,740  -->  00:03:46,890
well, you will get this URL. This one.
88

88

00:03:46,890  -->  00:03:48,960
This one, which are AZ specific URL.
89

89

00:03:48,960  -->  00:03:51,780
Before that was a region specific URL.
90

90

00:03:51,780  -->  00:03:54,630
As well as a public URL,
91

91

00:03:54,630  -->  00:03:58,620
which is going to resolve to the private DNS names above.
92

92

00:03:58,620  -->  00:04:00,780
So your clients can use, for example,
93

93

00:04:00,780  -->  00:04:02,860
Athena.us-east-1.amazonaws.com
94

94

00:04:04,440  -->  00:04:09,000
to resolve to any of the top addresses on the top.
95

95

00:04:09,000  -->  00:04:11,370
Now, these interfaces can be accessed
96

96

00:04:11,370  -->  00:04:13,410
as well from outside your VPC.
97

97

00:04:13,410  -->  00:04:15,840
So if you have direct connect or site to site VPN.
98

98

00:04:15,840  -->  00:04:18,960
it is completely possible for your on-premises application
99

99

00:04:18,960  -->  00:04:22,863
to access services on AWS through these interfaces.
100

100

00:04:23,850  -->  00:04:25,920
So to summarize, we have a VPC
101

101

00:04:25,920  -->  00:04:28,080
in which we enable the DNS support
102

102

00:04:28,080  -->  00:04:30,270
and the DNS host name settings.
103

103

00:04:30,270  -->  00:04:33,030
And then we have a private subnet with an EC2 instance
104

104

00:04:33,030  -->  00:04:36,000
in which we create a VPC endpoint interface
105

105

00:04:36,000  -->  00:04:38,160
that will get a specific IP.
106

106

00:04:38,160  -->  00:04:41,400
Automatically upon creating VPC endpoint interface,
107

107

00:04:41,400  -->  00:04:43,740
the DNS names are going to be registered
108

108

00:04:43,740  -->  00:04:47,160
within the private Route 53 resolver.
109

109

00:04:47,160  -->  00:04:50,227
And so whenever your EC2 instance will ask, for example,
110

110

00:04:50,227  -->  00:04:55,110
"Hey, where can I find Athena.us-east-one.amazonaws.com?"
111

111

00:04:55,110  -->  00:04:57,510
Well, the thing will reply, "you should access it
112

112

00:04:57,510  -->  00:05:02,510
through this IP address of type A, which is 10.0.0.10,"
113

113

00:05:03,210  -->  00:05:06,480
and this IP address is going to point directly
114

114

00:05:06,480  -->  00:05:08,790
to the VPC endpoint interface,
115

115

00:05:08,790  -->  00:05:11,280
and therefore will be accessing Athena privately.
116

116

00:05:11,280  -->  00:05:14,070
So this is all transparent for your applications
117

117

00:05:14,070  -->  00:05:16,770
as long as you enable DNS settings.
118

118

00:05:16,770  -->  00:05:18,510
All right, that's it for this lecture.
119

119

00:05:18,510  -->  00:05:21,510
I hope you liked it, and I will see you in the next lecture.
