WEBVTT
1
1

00:00:00.090  -->  00:00:02.610
<v Teacher>So, now lets talk about Origin Access Control</v>
2

2

00:00:02.610  -->  00:00:05.370
with an S3 Bucket that is server-side encrypted
3

3

00:00:05.370  -->  00:00:07.260
with KMS security.
4

4

00:00:07.260  -->  00:00:09.330
So, the benefits of Origin Access Control,
5

5

00:00:09.330  -->  00:00:12.810
which is the newest version of Origin Access Identity,
6

6

00:00:12.810  -->  00:00:16.620
is that OAC supports SSE-KMS natively
7

7

00:00:16.620  -->  00:00:19.230
because all the requests coming from OAC
8

8

00:00:19.230  -->  00:00:21.090
are going to be signed using Sigv4
9

9

00:00:21.090  -->  00:00:23.190
which is a security mechanism.
10

10

00:00:23.190  -->  00:00:25.680
So, all we need to do is add a statement
11

11

00:00:25.680  -->  00:00:30.450
to the KMS Key Policy to authorize its usage by the OAC.
12

12

00:00:30.450  -->  00:00:31.500
So, you have the KMS Key
13

13

00:00:31.500  -->  00:00:33.540
and you're going to edit the Key Policy,
14

14

00:00:33.540  -->  00:00:35.850
and you're going to add a condition saying
15

15

00:00:35.850  -->  00:00:39.990
that as long as the SourceARN is the ARN of your OAC,
16

16

00:00:39.990  -->  00:00:41.940
your Origin Access Control,
17

17

00:00:41.940  -->  00:00:44.430
then you will be able to do the decrypt encrypt
18

18

00:00:44.430  -->  00:00:46.590
and generate there the key operations and therefore,
19

19

00:00:46.590  -->  00:00:49.530
CloudFront can communicate with your S3 Bucket
20

20

00:00:49.530  -->  00:00:51.393
that is enabled with SSE-KMS.
21

21

00:00:52.380  -->  00:00:54.240
So, this looks very simple because, well,
22

22

00:00:54.240  -->  00:00:57.120
if we were using Origin Access Identity
23

23

00:00:57.120  -->  00:00:59.220
this would be much more difficult.
24

24

00:00:59.220  -->  00:01:00.690
So, Origin Access Identity
25

25

00:01:00.690  -->  00:01:03.210
does not support SSE-KMS natively,
26

26

00:01:03.210  -->  00:01:07.200
it only supports SSE-S3, and this is why OAC got released.
27

27

00:01:07.200  -->  00:01:11.040
And so, in the previous case we had to use Lambda@Edge
28

28

00:01:11.040  -->  00:01:13.740
to actually sign requests from CloudFront to S3,
29

29

00:01:13.740  -->  00:01:16.260
and also disable OAI for this to work.
30

30

00:01:16.260  -->  00:01:17.670
So, what's the process?
31

31

00:01:17.670  -->  00:01:20.700
Well, we have our users, and they access CloudFront,
32

32

00:01:20.700  -->  00:01:24.360
then a Lambda@Edge is going to modify the origin request,
33

33

00:01:24.360  -->  00:01:26.220
and it is going to actually sign this request
34

34

00:01:26.220  -->  00:01:28.290
using the Sigv4 mechanism,
35

35

00:01:28.290  -->  00:01:30.750
so that CloudFront can access your S3 Bucket
36

36

00:01:30.750  -->  00:01:33.570
with the SSE-KMS security mechanism,
37

37

00:01:33.570  -->  00:01:35.040
which is going to return the file,
38

38

00:01:35.040  -->  00:01:36.720
and then send it back to the user.
39

39

00:01:36.720  -->  00:01:40.170
Now this is an architecture you may find in the exam still,
40

40

00:01:40.170  -->  00:01:43.080
but overall is going to be deprecated over time,
41

41

00:01:43.080  -->  00:01:46.530
and the correct solution is to use an Origin Access Control
42

42

00:01:46.530  -->  00:01:49.650
because we don't need to use any Lambda@Edge function
43

43

00:01:49.650  -->  00:01:51.930
and everything is working as expected
44

44

00:01:51.930  -->  00:01:55.680
with both SSE-S3 and SSE-KMS.
45

45

00:01:55.680  -->  00:01:56.640
All right, that's it.
46

46

00:01:56.640  -->  00:01:59.640
I hope you liked it, and I will see you in the next lecture.
