1
1

00:00:00,300  -->  00:00:02,760
<v Instructor>So what if you lose an SSH key pair?</v>
2

2

00:00:02,760  -->  00:00:06,240
How do you regain access into your EC2 instance?
3

3

00:00:06,240  -->  00:00:07,320
There are so many methods,
4

4

00:00:07,320  -->  00:00:09,270
and I'm going to show you a few of them.
5

5

00:00:09,270  -->  00:00:12,900
So the number one is to use the EC2 User Data.
6

6

00:00:12,900  -->  00:00:13,733
So how does that work?
7

7

00:00:13,733  -->  00:00:15,060
Well, we lost a key pair,
8

8

00:00:15,060  -->  00:00:17,100
so we're going to create a new key pair
9

9

00:00:17,100  -->  00:00:19,470
and then we copy the public key.
10

10

00:00:19,470  -->  00:00:20,370
So as we can see,
11

11

00:00:20,370  -->  00:00:22,980
the old key pair is blue on my EC2 instance,
12

12

00:00:22,980  -->  00:00:25,650
and now the new public key pair is green.
13

13

00:00:25,650  -->  00:00:27,180
So we stop the instance,
14

14

00:00:27,180  -->  00:00:30,150
and then we update the EC2 User Data.
15

15

00:00:30,150  -->  00:00:31,500
And it turns out that
16

16

00:00:31,500  -->  00:00:33,810
if you're using the cloud-conflict format
17

17

00:00:33,810  -->  00:00:36,720
for the EC2 user data, which looks like this,
18

18

00:00:36,720  -->  00:00:37,860
this actually gets run
19

19

00:00:37,860  -->  00:00:40,740
at every start of your EC2 instance.
20

20

00:00:40,740  -->  00:00:44,310
And if you notice what I've done in this EC2 user data,
21

21

00:00:44,310  -->  00:00:46,650
I've added a name and I've added
22

22

00:00:46,650  -->  00:00:48,930
an SSH authorized keys in there.
23

23

00:00:48,930  -->  00:00:51,240
So we are telling the EC2 instance
24

24

00:00:51,240  -->  00:00:52,830
that the next time it starts,
25

25

00:00:52,830  -->  00:00:55,020
it looks up the EC2 user data
26

26

00:00:55,020  -->  00:00:57,030
and actually creates a new username
27

27

00:00:57,030  -->  00:00:59,970
and adds an SSH authorized key.
28

28

00:00:59,970  -->  00:01:01,800
So then we start the instance,
29

29

00:01:01,800  -->  00:01:03,120
and then what's going to happen is
30

30

00:01:03,120  -->  00:01:05,730
that by looking up the EC2 user data,
31

31

00:01:05,730  -->  00:01:08,095
then the added public key is going to be
32

32

00:01:08,095  -->  00:01:10,170
in that specific file,
33

33

00:01:10,170  -->  00:01:14,400
and then we can simply SSH into the EC2 instance.
34

34

00:01:14,400  -->  00:01:17,640
So please note that this method only adds authorized keys.
35

35

00:01:17,640  -->  00:01:20,460
It doesn't delete any existing public keys.
36

36

00:01:20,460  -->  00:01:21,600
And then once you're done
37

37

00:01:21,600  -->  00:01:24,270
with this one time setup of EC2 User Data,
38

38

00:01:24,270  -->  00:01:26,760
you can just delete it so that's the EC2 instance
39

39

00:01:26,760  -->  00:01:29,910
doesn't write a new key every time it boots up.
40

40

00:01:29,910  -->  00:01:31,530
So that's technique number one.
41

41

00:01:31,530  -->  00:01:33,630
Technique number two is to use Systems Manager.
42

42

00:01:33,630  -->  00:01:35,400
So you need to have an EC2 instance
43

43

00:01:35,400  -->  00:01:38,880
with the SSM agent installed and the proper IAM Role.
44

44

00:01:38,880  -->  00:01:41,550
And then from the Systems Manager Console,
45

45

00:01:41,550  -->  00:01:46,200
we can run an automation, such as AWSSupport-ResetAccess,
46

46

00:01:46,200  -->  00:01:50,070
and this automation is going to create a new key pair,
47

47

00:01:50,070  -->  00:01:52,410
so a public key and a private key.
48

48

00:01:52,410  -->  00:01:54,300
It's going to store automatically
49

49

00:01:54,300  -->  00:01:57,240
that private key into the parameter store,
50

50

00:01:57,240  -->  00:02:00,287
and then is going to store the corresponding public key
51

51

00:02:00,287  -->  00:02:02,640
on the EC2 instance.
52

52

00:02:02,640  -->  00:02:05,760
So you as a user, then you go into the Parameter Store,
53

53

00:02:05,760  -->  00:02:07,650
you retrieve the private key,
54

54

00:02:07,650  -->  00:02:10,290
you delete obviously the entry in Parameter Store,
55

55

00:02:10,290  -->  00:02:13,260
and then you can directly SSH onto your instance.
56

56

00:02:13,260  -->  00:02:16,080
So this works both for Linux and Windows.
57

57

00:02:16,080  -->  00:02:18,690
And this is where the private key is going to be stored
58

58

00:02:18,690  -->  00:02:19,860
in the Parameter Store.
59

59

00:02:19,860  -->  00:02:20,820
And for this, as I said,
60

60

00:02:20,820  -->  00:02:23,070
you need to have the SSM agent installed
61

61

00:02:23,070  -->  00:02:25,983
with the correct IAM Role on the EC2 instance.
62

62

00:02:26,880  -->  00:02:30,270
Another method is to use the EC2 Instance Connect Service.
63

63

00:02:30,270  -->  00:02:32,850
So for this, we need to have the Instance Connect agent,
64

64

00:02:32,850  -->  00:02:35,340
and this is already happening on Amazon Linux 2
65

65

00:02:35,340  -->  00:02:37,620
or Ubuntu 16 or later.
66

66

00:02:37,620  -->  00:02:41,160
And then it's going to connect to the EC2 instance
67

67

00:02:41,160  -->  00:02:43,950
using the EC2 Instance Connect Service temporarily.
68

68

00:02:43,950  -->  00:02:47,820
And then we're going to edit that SSH authorized keys file,
69

69

00:02:47,820  -->  00:02:51,180
and we're going to write a new SSH public key in there.
70

70

00:02:51,180  -->  00:02:52,410
So let's summarize it.
71

71

00:02:52,410  -->  00:02:56,190
So we're going to launch the EC2 Instance Connect Service
72

72

00:02:56,190  -->  00:03:00,450
to go and actually be SSH into our EC2 instance,
73

73

00:03:00,450  -->  00:03:03,480
and then we're going to actually write the new key
74

74

00:03:03,480  -->  00:03:05,340
in the SSH authorized keys.
75

75

00:03:05,340  -->  00:03:06,960
And therefore we can directly connect
76

76

00:03:06,960  -->  00:03:09,573
to the instance using our own computer.
77

77

00:03:11,040  -->  00:03:13,770
You can also use the EC2 Serial Console.
78

78

00:03:13,770  -->  00:03:16,440
So this is when you don't have a working network connection
79

79

00:03:16,440  -->  00:03:17,273
for whatever reason,
80

80

00:03:17,273  -->  00:03:20,550
and this is only for Nitro-based EC2 instances.
81

81

00:03:20,550  -->  00:03:23,250
Remember, you need to enable the EC2 Serial Console
82

82

00:03:23,250  -->  00:03:26,010
at the account level before using it, okay?
83

83

00:03:26,010  -->  00:03:27,330
But it's very simple.
84

84

00:03:27,330  -->  00:03:29,010
You connect using the Serial Console,
85

85

00:03:29,010  -->  00:03:30,120
and then using the terminal,
86

86

00:03:30,120  -->  00:03:32,520
you just store the new key, the new public key,
87

87

00:03:32,520  -->  00:03:34,830
in the SSH authorized key file.
88

88

00:03:34,830  -->  00:03:36,297
And, of course, if you don't have network connectivity,
89

89

00:03:36,297  -->  00:03:37,953
you should also fix that.
90

90

00:03:38,940  -->  00:03:41,910
Okay, let's observe one last method to connect
91

91

00:03:41,910  -->  00:03:45,090
to an EC2 instance with a last key pair.
92

92

00:03:45,090  -->  00:03:47,970
So this technique is called the EBS Volume Swap.
93

93

00:03:47,970  -->  00:03:50,940
So we know that the authorized keys file
94

94

00:03:50,940  -->  00:03:54,570
is on the file on the EBS route volume of our EC2 instance.
95

95

00:03:54,570  -->  00:03:57,450
And so what we can do is that we can create again
96

96

00:03:57,450  -->  00:04:01,230
a new private key and a new public key, so a key pair.
97

97

00:04:01,230  -->  00:04:03,990
We stop the original EC2 instance,
98

98

00:04:03,990  -->  00:04:06,720
then we detach the EBS root volume,
99

99

00:04:06,720  -->  00:04:09,990
and we're going to create a new EC2 instance.
100

100

00:04:09,990  -->  00:04:11,460
And on that new EC2 instance,
101

101

00:04:11,460  -->  00:04:13,080
what we're going to do is that we're going
102

102

00:04:13,080  -->  00:04:17,820
to attach the EBS volume of the previous instance.
103

103

00:04:17,820  -->  00:04:20,340
So now the new EC2 instance has two volumes,
104

104

00:04:20,340  -->  00:04:22,590
the primary one and then the secondary one,
105

105

00:04:22,590  -->  00:04:24,930
which was attached from the previous instance.
106

106

00:04:24,930  -->  00:04:28,530
So we can SSH easily onto the new EC2 instance
107

107

00:04:28,530  -->  00:04:29,790
because it's been set up correctly
108

108

00:04:29,790  -->  00:04:31,470
and we haven't lost that key.
109

109

00:04:31,470  -->  00:04:33,960
Then by going into that EC2 instance,
110

110

00:04:33,960  -->  00:04:38,040
we can modify on the second volume, the authorized key file,
111

111

00:04:38,040  -->  00:04:40,860
to just add whatever entry we need.
112

112

00:04:40,860  -->  00:04:45,660
And then we can just detach okay the volume,
113

113

00:04:45,660  -->  00:04:48,450
reattach it onto the previous EC2 instance,
114

114

00:04:48,450  -->  00:04:51,630
which will now have the correct public key written
115

115

00:04:51,630  -->  00:04:53,520
into the authorized key files,
116

116

00:04:53,520  -->  00:04:57,600
and then restart the instance in SSH and we're good to go.
117

117

00:04:57,600  -->  00:04:59,040
So that's it for this lecture.
118

118

00:04:59,040  -->  00:05:01,990
I hope you liked it and I will see you in the next lecture.
