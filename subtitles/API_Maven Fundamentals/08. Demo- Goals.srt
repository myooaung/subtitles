1
00:00:00,740 --> 00:00:04,640
Now that we've seen some of the goals that we can add to our application,

2
00:00:04,640 --> 00:00:09,140
let's go ahead and change a few things inside of our project.

3
00:00:09,140 --> 00:00:13,740
First, I'm going to go ahead and right‑click on our project,

4
00:00:13,740 --> 00:00:20,240
and go down to Configure, and Convert this to a Maven Project.

5
00:00:20,240 --> 00:00:22,940
It will download a few things for a second,

6
00:00:22,940 --> 00:00:28,570
and set up the structure of our project very similar to what we had before,

7
00:00:28,570 --> 00:00:30,570
but showing it in a different view,

8
00:00:30,570 --> 00:00:32,870
and I'll explain what I mean here in just a second.

9
00:00:32,870 --> 00:00:36,440
I'm going to open up my pom.xml,

10
00:00:36,440 --> 00:00:40,840
and you'll notice that we don't have a dependency section in here yet.

11
00:00:40,840 --> 00:00:44,780
So I'm going to go ahead and give me a little white space between

12
00:00:44,780 --> 00:00:48,240
packaging and the build section that we added,

13
00:00:48,240 --> 00:00:49,790
and add dependencies.

14
00:00:49,790 --> 00:00:52,470
Now one of the reasons I wanted to convert this to a Maven project is it

15
00:00:52,470 --> 00:00:56,440
gets smarter with these suggestions that we add in here.

16
00:00:56,440 --> 00:00:58,450
So I'm going to add our dependency section,

17
00:00:58,450 --> 00:01:03,270
and then I'm going to add a dependency, singular,

18
00:01:03,270 --> 00:01:06,440
inside that section.

19
00:01:06,440 --> 00:01:09,840
And we start off with the three things that we always need,

20
00:01:09,840 --> 00:01:20,740
a groupId, and for our groupId, we want to do org.apache.commons,

21
00:01:20,740 --> 00:01:31,940
And then for our artifactId, we want to add in here commons‑lang3.

22
00:01:31,940 --> 00:01:33,010
Now,

23
00:01:33,010 --> 00:01:39,080
some people get hung up on why there is a number in this particular dependency,

24
00:01:39,080 --> 00:01:44,860
and it's because they have different versions of this code base,

25
00:01:44,860 --> 00:01:47,950
and then they have releases of that code base.

26
00:01:47,950 --> 00:01:51,840
So this is specifically for lang3.

27
00:01:51,840 --> 00:01:57,040
Now the next thing we're going to add in here and the last thing is our version,

28
00:01:57,040 --> 00:02:00,170
and we're looking for 3.8.1.

29
00:02:00,170 --> 00:02:03,640
Now when I click Save,

30
00:02:03,640 --> 00:02:06,840
you're going to see a couple things maybe flash on the screen.

31
00:02:06,840 --> 00:02:08,850
What happens is it will go through,

32
00:02:08,850 --> 00:02:12,440
and it's building my workspace and downloading some dependencies,

33
00:02:12,440 --> 00:02:15,810
and I'm going to show you over here on our left‑hand side,

34
00:02:15,810 --> 00:02:21,220
we now have a Maven Dependencies source folder over here,

35
00:02:21,220 --> 00:02:27,090
and we have commons‑lang3 added to our class path.

36
00:02:27,090 --> 00:02:31,630
So let's automatically pull that down and set it up to build

37
00:02:31,630 --> 00:02:34,740
our application based off that class path.

38
00:02:34,740 --> 00:02:38,040
Let's look and see what this does for our goals off in the command line.

39
00:02:38,040 --> 00:02:40,880
I've gone ahead and gone to the route of our application,

40
00:02:40,880 --> 00:02:48,140
C:\dev\workspace\HelloWorld, and I'm going to type in here maven clean.

41
00:02:48,140 --> 00:02:49,340
We ran this once before,

42
00:02:49,340 --> 00:02:52,970
so it's not going to go ahead and download a bunch of dependencies

43
00:02:52,970 --> 00:02:55,940
like it did before the first time we ran it.

44
00:02:55,940 --> 00:02:58,340
We'll do maven compile,

45
00:02:58,340 --> 00:03:01,050
and this will compile our source code, and we actually haven't changed our

46
00:03:01,050 --> 00:03:04,890
source code, we just added things to our class path.

47
00:03:04,890 --> 00:03:09,820
We could go utilize the Commons library to do something inside

48
00:03:09,820 --> 00:03:13,410
of our source code, but you get the idea here. And then I'm

49
00:03:13,410 --> 00:03:16,140
going to run a new one for you, maven Install.

50
00:03:16,140 --> 00:03:19,270
Now before I click Enter here, I want to point out to you two things.

51
00:03:19,270 --> 00:03:24,240
It's going to go ahead and download all the dependencies that it needs,

52
00:03:24,240 --> 00:03:28,620
package up the application, and then install it in our local repository.

53
00:03:28,620 --> 00:03:30,110
So when I click Enter here,

54
00:03:30,110 --> 00:03:34,970
you'll see it download some dependencies, and we'll go through

55
00:03:34,970 --> 00:03:39,540
and run any tests that we have inside of our application, and

56
00:03:39,540 --> 00:03:41,940
package it up, and then install it.

57
00:03:41,940 --> 00:03:43,300
And if you look at the text,

58
00:03:43,300 --> 00:03:45,660
you can see that it says it's installing

59
00:03:45,660 --> 00:03:55,840
C:\dev\workspace\HelloWorld\target\HelloWorld‑1.0‑SNAPSHOT.jar to this location on

60
00:03:55,840 --> 00:03:56,600
my hard drive.

61
00:03:56,600 --> 00:03:59,940
So everything there in that info section, it can tell you it's doing there.

62
00:03:59,940 --> 00:04:03,630
And if you look and compare that to what we had before,

63
00:04:03,630 --> 00:04:06,820
this is everything that we had specified for our project structure.

64
00:04:06,820 --> 00:04:12,080
We had our groupId of com.pluralsight, our artifact of HelloWorld,

65
00:04:12,080 --> 00:04:16,540
and our version 1.0‑SNAPSHOT, and that's exactly where it installed

66
00:04:16,540 --> 00:04:18,130
it to our local repository,

67
00:04:18,130 --> 00:04:25,140
com.pluralsight\HelloWorld\1.0‑SNAPSHOT, and then the artifactId.

68
00:04:25,140 --> 00:04:28,840
So you're starting to see how it organizes these things in

69
00:04:28,840 --> 00:04:32,860
your local workspace. I want to go a step further though and

70
00:04:32,860 --> 00:04:35,600
pull up my M2 repository directory.

71
00:04:35,600 --> 00:04:41,040
So I'm going to move this out of the way, and I want to go to my

72
00:04:41,040 --> 00:04:46,340
user directory, so we're going to go to C:\Users,

73
00:04:46,340 --> 00:04:48,960
Bryan,, and you'll see this M2 directory.

74
00:04:48,960 --> 00:04:53,750
This is the Maven home. Inside of here, you'll see repository, and

75
00:04:53,750 --> 00:05:03,600
you'll see com, Pluralsight, HelloWorld, our 1.0‑SNAPSHOT, and here

76
00:05:03,600 --> 00:05:06,320
is our artifact that it uploaded for us.

77
00:05:06,320 --> 00:05:10,130
So here's everything from the beginning of us running

78
00:05:10,130 --> 00:05:12,990
that project to running install,

79
00:05:12,990 --> 00:05:15,940
it went through and built this folder structure based off of our

80
00:05:15,940 --> 00:05:21,040
groupId, artifactId, packaging type, and version.

81
00:05:21,040 --> 00:05:30,000
So we have all of our application ran through that configuration and installed based off those POM properties.

