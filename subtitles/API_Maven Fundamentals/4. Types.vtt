WEBVTT
1
00:00:00.840 --> 00:00:04.030
Types refer to the type of resource that we want to

2
00:00:04.030 --> 00:00:06.640
include inside of our application.

3
00:00:06.640 --> 00:00:09.800
The current core packaging types are pom,

4
00:00:09.800 --> 00:00:16.240
jar, mavenâ€‘plugin, ejb, war, ear, rar, and par.

5
00:00:16.240 --> 00:00:22.040
Now, jar, war, ear, rar, and par are all just glorified zip files,

6
00:00:22.040 --> 00:00:24.240
for all intents and purposes.

7
00:00:24.240 --> 00:00:29.680
The default, and most often used type, is a jar.

8
00:00:29.680 --> 00:00:33.640
The one here that's interesting to me, though, is the type of pom.

9
00:00:33.640 --> 00:00:35.990
If we do something of type pom,

10
00:00:35.990 --> 00:00:40.410
all of the dependencies inside that pom are downloaded into our application,

11
00:00:40.410 --> 00:00:44.760
and they actually refer to it as a dependency pom. The

12
00:00:44.760 --> 00:00:48.270
dependency pom, say you have web services in your organization

13
00:00:48.270 --> 00:00:51.110
and you want to group all of these dependencies that we use for

14
00:00:51.110 --> 00:00:53.230
any time we do a web service, you know,

15
00:00:53.230 --> 00:00:56.730
jersey libraries or some other libraries, and there's a bunch of

16
00:00:56.730 --> 00:01:00.500
different XML or JSON dependencies that we have, you can put those

17
00:01:00.500 --> 00:01:04.840
in a RESTful services pom and reference that pom and it will

18
00:01:04.840 --> 00:01:07.540
download that into our application.

19
00:01:07.540 --> 00:01:11.740
Packaging types refer to packaging inside of our application.

20
00:01:11.740 --> 00:01:14.840
If we're building an artifact for other people to consume,

21
00:01:14.840 --> 00:01:18.710
we are specifically going to reference that with our packaging

22
00:01:18.710 --> 00:01:22.130
here. The artifact that we want to use has a pom,

23
00:01:22.130 --> 00:01:27.150
and its pom has a packaging set on it of jar, war, ear, or pom,

24
00:01:27.150 --> 00:01:28.340
as I mentioned.

25
00:01:28.340 --> 00:01:30.980
And that's what gets pulled into our application. Your

26
00:01:30.980 --> 00:01:38.000
packaging and the type that somebody is going to request, what your artifact is are the same thing.

