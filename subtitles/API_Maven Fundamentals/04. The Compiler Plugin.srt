1
00:00:00,840 --> 00:00:04,240
The compiler plugin is exactly what it sounds like.

2
00:00:04,240 --> 00:00:09,240
It's the plugin that we use to compile our source code in our application.

3
00:00:09,240 --> 00:00:13,970
We use this compiler for both our source code and our test code,

4
00:00:13,970 --> 00:00:17,550
although it does run in different phases for each.

5
00:00:17,550 --> 00:00:20,890
One thing of note is that it does invoke javac,

6
00:00:20,890 --> 00:00:23,230
but it does a lot more than that.

7
00:00:23,230 --> 00:00:28,140
It does so by setting the class path with the dependencies from our application.

8
00:00:28,140 --> 00:00:30,930
So if you remember from the previous module when we defined

9
00:00:30,930 --> 00:00:33,550
our dependencies and they have scopes that are associated

10
00:00:33,550 --> 00:00:35,900
with them or those types of things,

11
00:00:35,900 --> 00:00:39,570
the compiler plugin will build our class path based off of what those

12
00:00:39,570 --> 00:00:43,340
dependencies are and their classification of scope.

13
00:00:43,340 --> 00:00:48,310
One thing of note is that it does default to an older version of Java,

14
00:00:48,310 --> 00:00:53,170
Java 1.7, regardless of what JDK you have installed.

15
00:00:53,170 --> 00:00:54,990
For this reason alone,

16
00:00:54,990 --> 00:00:59,260
I would say that the compiler plugin is the most overwritten plugin

17
00:00:59,260 --> 00:01:02,740
as far as customization inside of all the plugins.

18
00:01:02,740 --> 00:01:08,440
We can customize this plugin by defining the configuration section.

19
00:01:08,440 --> 00:01:13,640
Now, the plugins documentation or description looks just like this on the left.

20
00:01:13,640 --> 00:01:16,640
This is how we define it inside of our application.

21
00:01:16,640 --> 00:01:18,100
It looks pretty straightforward.

22
00:01:18,100 --> 00:01:21,340
We can see a few things here that we have, our groupId, our

23
00:01:21,340 --> 00:01:25,260
artifactId, and then our version, but then we have the configuration

24
00:01:25,260 --> 00:01:28,640
section where we can specify a handful of things.

25
00:01:28,640 --> 00:01:33,280
We can tell that we want it to fork, which means to spin off on its own thread.

26
00:01:33,280 --> 00:01:36,940
We can set the min and max memory.

27
00:01:36,940 --> 00:01:39,320
So if you've ever run into compilation problems where you

28
00:01:39,320 --> 00:01:41,640
haven't had enough memory on the heap or whatever,

29
00:01:41,640 --> 00:01:46,040
you can specify those memory settings here inside your configuration.

30
00:01:46,040 --> 00:01:49,010
We also have our source and target directories,

31
00:01:49,010 --> 00:01:56,000
which is mainly the two features that people overwrite the most to tell it to use a different target than what we're compiling to.

