1
00:00:00,840 --> 00:00:05,580
In this module. we learned that goals are really just configured plugins

2
00:00:05,580 --> 00:00:09,620
inside of our application, and we just accept the defaults that are

3
00:00:09,620 --> 00:00:13,800
actually coming out of the Super POM that plugins are tied to and one of

4
00:00:13,800 --> 00:00:18,050
the defined phases. We can usually override these to do specific things

5
00:00:18,050 --> 00:00:21,990
for our application, though. The Compiler Plugin is defined for us,

6
00:00:21,990 --> 00:00:25,570
but we usually need to change that to specify a version of Java.

7
00:00:25,570 --> 00:00:30,170
The default is six, and that will shortly be upgraded to probably

8
00:00:30,170 --> 00:00:33,950
seven or eight because they are near end of life, and we usually

9
00:00:33,950 --> 00:00:36,620
want whatever the latest version is, anyways.

10
00:00:36,620 --> 00:00:40,080
The jar plugin is one of the default plugins that's also configured for

11
00:00:40,080 --> 00:00:43,690
us automatically, but we can override that to do things like generate

12
00:00:43,690 --> 00:00:48,300
our manifest file or do includes or excludes based upon files we want

13
00:00:48,300 --> 00:00:50,240
to include inside of our jar.

14
00:00:50,240 --> 00:00:50,880
And lastly,

15
00:00:50,880 --> 00:00:54,330
the Source and Javadocs Plugin can easily be configured to

16
00:00:54,330 --> 00:00:56,800
generate our code and install them with our corporate

17
00:00:56,800 --> 00:00:59,730
repository for use by other developers.

18
00:00:59,730 --> 00:01:01,900
This is really a good practice as we're stepping

19
00:01:01,900 --> 00:01:03,560
through code or debugging things.

20
00:01:03,560 --> 00:01:07,430
We usually want to see what code is tied to it and why it's breaking. We

21
00:01:07,430 --> 00:01:11,060
can step through that source code or find help for those Javadocs, and

22
00:01:11,060 --> 00:01:13,440
it makes it a lot easier for developers.

23
00:01:13,440 --> 00:01:17,100
This is becoming more and more important with microservice

24
00:01:17,100 --> 00:01:24,000
architectures and having separate teams work on separate pieces of the application.

