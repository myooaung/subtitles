1
00:00:00,940 --> 00:00:04,340
The goals that we can run off of our basic application are pretty

2
00:00:04,340 --> 00:00:08,230
straightforward. They're much what you would expect to have from just

3
00:00:08,230 --> 00:00:12,130
basic functionality, and since we're using a lot of the defaults, they're

4
00:00:12,130 --> 00:00:16,310
already defined for us. We have a clean goal.

5
00:00:16,310 --> 00:00:21,140
The clean goal deletes the target directory and any of its generated sources.

6
00:00:21,140 --> 00:00:25,510
We have a compile goal. Compile is exactly what you think it's going to

7
00:00:25,510 --> 00:00:28,050
be, we're going to compile all of the source code.

8
00:00:28,050 --> 00:00:32,430
We're also going to generate any files if we're using a library

9
00:00:32,430 --> 00:00:35,300
such as web services or something like that,

10
00:00:35,300 --> 00:00:39,280
that would generate stubs and skeletons or other source code,

11
00:00:39,280 --> 00:00:42,340
and it will place that into our classes directory.

12
00:00:42,340 --> 00:00:45,840
If you have a .properties file or things like that,

13
00:00:45,840 --> 00:00:47,750
they're going to get copied over into our classes

14
00:00:47,750 --> 00:00:50,540
directory underneath our target, as well.

15
00:00:50,540 --> 00:00:55,930
We also have a package command. The package command will run compile first,

16
00:00:55,930 --> 00:00:58,590
so we don't have to tell it to run compile,

17
00:00:58,590 --> 00:01:01,440
but we can daisy chain goals.

18
00:01:01,440 --> 00:01:05,920
It will run any unit tests that we have and package that up based off

19
00:01:05,920 --> 00:01:09,240
the type that we have defined inside of our POM.

20
00:01:09,240 --> 00:01:13,000
The install goal is a little bit different than what some people

21
00:01:13,000 --> 00:01:16,250
think. Install will run the package command,

22
00:01:16,250 --> 00:01:19,540
and then it will install it in your local repository.

23
00:01:19,540 --> 00:01:23,450
It will copy your JAR or WAR file, or however it's packaged,

24
00:01:23,450 --> 00:01:26,140
and place it inside of your repository.

25
00:01:26,140 --> 00:01:31,640
The default of that is your home directory .m2. Now deploy

26
00:01:31,640 --> 00:01:33,740
is a little bit confusing to people.

27
00:01:33,740 --> 00:01:37,080
Deploy does not mean deploy it to an app server.

28
00:01:37,080 --> 00:01:40,300
Deploy runs the install command and then deploys it to

29
00:01:40,300 --> 00:01:42,940
a corporate or remote repository.

30
00:01:42,940 --> 00:01:46,060
If you're using a corporate internal repository,

31
00:01:46,060 --> 00:01:49,740
deploy is going to copy it up to that internal repository.

32
00:01:49,740 --> 00:01:52,490
Now that can be as simple as a file share somewhere or

33
00:01:52,490 --> 00:01:56,530
something else, but install and deploy often get confused and

34
00:01:56,530 --> 00:02:04,000
backwards. As far as you're concerned, install will install it locally, deploy will install it remotely.

