1
00:00:01,200 --> 00:00:05,760
Wir haben also eine Migration erstellt und möchten einige Dummy-Daten.

2
00:00:05,760 --> 00:00:07,650
Und warum wollen wir ein paar Dummy-Daten?

3
00:00:07,650 --> 00:00:13,470
Nun, wir haben eine ganze Reihe von Dingen im Frontend, die statisch sind, und ich möchte dies

4
00:00:13,470 --> 00:00:15,090
ein bisschen dynamischer gestalten.

5
00:00:15,140 --> 00:00:16,000
OK.

6
00:00:16,260 --> 00:00:18,140
Und vor allem aus der Datenbank.

7
00:00:18,150 --> 00:00:18,530
Recht.

8
00:00:18,540 --> 00:00:25,170
Also lasst uns weitermachen und das erste, was ich tun möchte, ist, schnell eine Beziehung aufzubauen.

9
00:00:25,170 --> 00:00:32,630
Also werde ich gleich hier zur Wahl gehen und eine Beziehung aufbauen.

10
00:00:33,290 --> 00:00:37,940
Ich werde sagen, dass jede Pose einen Benutzer OK haben wird.

11
00:00:37,960 --> 00:00:40,770
Also werde ich das hier nur sagen und dann kehre ich zurück.

12
00:00:40,780 --> 00:00:49,000
Das gehört dazu und ich werde einfach so eine statische Klasse verwenden.

13
00:00:49,220 --> 00:00:51,670
Und das bringt mich einfach zu dieser Benutzerklasse.

14
00:00:54,880 --> 00:00:55,280
Jetzt.

15
00:00:55,290 --> 00:01:02,490
Ich kann natürlich zum Benutzermodell gehen und ich werde gut sagen, dass Sie wissen, wenn der Benutzer der Post einen Benutzer hat,

16
00:01:03,360 --> 00:01:09,510
können wir sagen, dass der Benutzer viele verschiedene Posts hat und ich nur diese Funktion erstelle, können Sie

17
00:01:09,510 --> 00:01:11,840
diese Funktionen benennen irgendwas du willst.

18
00:01:12,030 --> 00:01:14,910
Aber hier mache ich nicht nach.

19
00:01:14,910 --> 00:01:16,740
Das muss so sein.

20
00:01:16,770 --> 00:01:19,370
Wenn Sie die gewünschten Daten zurückgeben möchten.

21
00:01:19,590 --> 00:01:21,320
In diesem Fall möchten wir viele Umfragen zurückgeben.

22
00:01:21,330 --> 00:01:27,490
Wir werden also sagen, dass der Benutzer viele hat, wenn ich diese Funktionsbeiträge verwende.

23
00:01:27,540 --> 00:01:31,180
Wir lernen dieses Zeug direkt in den Beziehungen.

24
00:01:31,620 --> 00:01:38,740
Aber ich könnte es aus dem App-Namespace richtig machen.

25
00:01:38,750 --> 00:01:44,550
Und dann wäre die Post.

26
00:01:45,450 --> 00:01:54,290
Aber ich könnte Sie auch verwenden, je mehr ich sicherer oder besser oder sauberer sage.

27
00:01:54,360 --> 00:02:03,080
Im Moment möchte ich statisch eine ganze Reihe von Dummy-Daten erstellen.

28
00:02:03,190 --> 00:02:12,700
Also ich habe hier schon Migrationen OK.

29
00:02:12,760 --> 00:02:19,910
Und ich habe auch Fabriken in Saatgut, mit denen ich viele Daten erstellen kann.

30
00:02:19,990 --> 00:02:23,720
In der Fabrik hier definieren wir also.

31
00:02:24,020 --> 00:02:27,660
Und Sie können hier sehen, dass unsere Fabrik definiert werden musste.

32
00:02:27,760 --> 00:02:37,210
Ich könnte eine andere Fabrik erstellen, indem ich einen befehlshabenden PSP-Künstler namens Make factory BHP artist make make

33
00:02:37,240 --> 00:02:38,320
right ausführe.

34
00:02:38,640 --> 00:02:44,590
Und ich könnte ihm einen Fabriknamen geben, den ich möchte, zum Beispiel könnte ich BHP-Handwerker

35
00:02:44,590 --> 00:02:49,860
speichern, um Nachrichten hier zu löschen, damit Sie es klar sehen können.

36
00:02:50,080 --> 00:02:55,300
Dies ist das Gleiche wie die Verwendung Ihrer Terminal-Leute.

37
00:02:55,390 --> 00:02:57,970
Ich benutze nur das Gebäudeterminal von BHP Storm.

38
00:02:58,000 --> 00:03:05,280
OK, also BHP-Handwerker machen Fabrik und Sie gaben ihr den Fabriknamen. Ich könnte

39
00:03:09,400 --> 00:03:16,820
sagen, Sie wissen, was ich Fabrik auferlegen möchte, und Sie übergeben seine Flagge

40
00:03:16,820 --> 00:03:18,000
so.

41
00:03:18,020 --> 00:03:19,630
Das ist das Modell.

42
00:03:20,000 --> 00:03:27,010
Und dann haben Sie ihm das gleiche Symbol und das Modell gegeben, mit dem dies zusammenhängen soll.

43
00:03:27,130 --> 00:03:34,300
Wenn ich diese Flagge nicht passiere, wird ein Modell wie dieses erstellt, aber es wird mir dort

44
00:03:34,300 --> 00:03:38,740
eine Art Dummy-Klasse geben, und ich wundere mich nicht.

45
00:03:38,790 --> 00:03:43,890
Ich möchte also, wenn ich eine Fabrik erstelle, mir die Klasse des Modells geben, mit dem ich verwandt bin.

46
00:03:43,890 --> 00:03:46,070
Deshalb passiere ich diese Flagge hier.

47
00:03:46,170 --> 00:03:52,610
Drücken Sie die Eingabetaste, um die Fabrik hier zu sehen, und Sie werden sehen, dass er "Post OK" sagt.

48
00:03:52,840 --> 00:03:55,650
Jetzt gebe ich ihm die Daten.

49
00:03:56,640 --> 00:04:04,820
Nun, wir wissen, dass das erste, was er hat, ein Benutzer I ist. D. D. Richtig, was ich mit dieser

50
00:04:04,820 --> 00:04:13,950
Benutzeridee hier machen werde, wenn Sie sich bei einem Benutzer angemeldet haben. Ich kann mir einige der Dinge ansehen, die

51
00:04:13,950 --> 00:04:17,210
er hat, aber ich möchte als Werkshilfefunktion hinzufügen.

52
00:04:17,220 --> 00:04:18,210
OK.

53
00:04:18,450 --> 00:04:20,280
Und ich möchte gut sagen, weißt du was?

54
00:04:20,280 --> 00:04:25,810
Factory Ich möchte, dass du mir die

55
00:04:28,720 --> 00:04:36,230
Klasse der Post gibst, die so hilft, also ist es

56
00:04:39,110 --> 00:04:42,290
tatsächlich der Benutzer.

57
00:04:42,740 --> 00:04:44,320
Es tut uns leid.

58
00:04:44,330 --> 00:04:57,850
Was ich hier jetzt sage, ist, diese Benutzer I in Beziehung zu setzen. D. D. Feld mit dem Modell oder dem Klassenbenutzer, aber

59
00:04:57,850 --> 00:05:03,820
gleichzeitig verwenden wir diese Factory-Funktion, die uns helfen kann, Daten zu

60
00:05:04,360 --> 00:05:09,230
produzieren oder zu verknüpfen, wenn Sie über Factory sprechen.

61
00:05:09,310 --> 00:05:13,590
Sie müssen sich daran erinnern, dass Sie über das Erstellen vieler Daten sprechen.

62
00:05:13,660 --> 00:05:16,050
Das wird uns die Fabrik helfen.

63
00:05:16,090 --> 00:05:17,140
Du wirst es in einer Minute sehen.

64
00:05:17,440 --> 00:05:25,300
Wenn ich dies mache und nur eine mache, werden alle meine Dummy-Daten erstellt. Wenn

65
00:05:25,300 --> 00:05:35,440
ich dies mache und später eine Funktion verwende, um die Erstellung dieser Daten in Beziehung zu setzen, wird immer

66
00:05:35,440 --> 00:05:45,090
danach gesucht Das Modell wird es sagen. Ich verwende hier ein Modell, damit der Benutzer das immer tut.

67
00:05:45,090 --> 00:05:51,650
Anstatt statisch zu sein, werden dynamische Daten verwendet und automatisch für uns hinzugefügt.

68
00:05:51,660 --> 00:05:53,970
Sie werden sehen, wie es sowieso funktioniert.

69
00:05:53,970 --> 00:06:01,670
Es ist besser, es zu sehen oder zu tun, damit Sie es verstehen, als es von mir zu hören.

70
00:06:01,700 --> 00:06:11,270
OK, der Titel wird also nur der Satz sein und hier werde ich sagen, dass das Posenbild in Ordnung ist.

71
00:06:11,300 --> 00:06:22,650
Denken Sie daran, dass diese anderen Spaltennamen vielleicht eine Art Bild sein werden, das Sie oder ich haben, dass er das hat, und es wird 900 sein. Ich

72
00:06:24,440 --> 00:06:31,520
weiß nicht, dass das funktionieren wird, aber ich werde es trotzdem tun und dreihundert, wenn Er tut

73
00:06:31,520 --> 00:06:34,810
es nicht, wir werden einen Weg finden.

74
00:06:34,880 --> 00:06:45,060
Tatsächlich wissen Sie, dass wir einen Dummy erstellen. Schauen wir uns die

75
00:06:45,090 --> 00:06:49,640
Dummy-Daten für unsere Heimmeister an.

76
00:06:49,640 --> 00:06:54,580
Ressourcen verwenden Komponente.

77
00:06:55,150 --> 00:06:57,560
Und wir haben einen Blog-Beitrag, den wir wollen.

78
00:06:57,580 --> 00:07:02,720
Es gibt also einige Dummy-Daten hier, einen Platzhalter, also werde ich dies hier einfügen.

79
00:07:02,820 --> 00:07:09,510
Jetzt weiß ich, dass ich denke, dass Sie mit diesem Bild alles sind, was Sie produzieren werden. OK, aber

80
00:07:09,510 --> 00:07:15,270
ich weiß nicht, ob er dies mit der Höhe automatisch tun wird, die wir versuchen können.

81
00:07:15,270 --> 00:07:16,560
Lass es uns einfach so versuchen.

82
00:07:16,560 --> 00:07:22,380
Und wenn es dann nicht funktioniert, fügen wir einfach statischen Text ein, um alle Bilder so groß zu machen.

83
00:07:22,380 --> 00:07:23,290
OK.

84
00:07:23,580 --> 00:07:26,350
Also lasst uns den

85
00:07:29,800 --> 00:07:33,820
Körper und die Fälscherbibliothek einfach helfen.

86
00:07:33,850 --> 00:07:39,880
Er hat nur eine Menge eingebauter Methoden und Eigenschaftsnamen, die Daten enthalten, die wir verwenden können. Es ist

87
00:07:39,880 --> 00:07:45,100
nur eine Bibliothek, die mit Lobo geliefert wird, da ich dieses Video aufnehme, vielleicht in

88
00:07:45,100 --> 00:07:45,890
Zukunft anders.

89
00:07:46,310 --> 00:07:46,980
OK.

90
00:07:47,230 --> 00:07:55,780
Sie können also immer irgendwo hier nach der gefälschten Bibliothek suchen, was auch immer der Fälscher BHP Larrabee

91
00:07:55,780 --> 00:08:05,170
ist, und er wird sie wahrscheinlich auf die Gay Hub-Seite bringen, wo Sie alle Methoden finden, die Sie wollen. OK.

92
00:08:05,200 --> 00:08:08,200
U. S. Stadtstraßen OK.

93
00:08:08,330 --> 00:08:15,710
Einheiten Zeitstempel Jobs Firma Jobtitel Hüte Kragen Bild.

94
00:08:15,710 --> 00:08:16,340
Sieh dir das an.

95
00:08:17,190 --> 00:08:18,360
OK.

96
00:08:18,410 --> 00:08:19,990
Genau das wollen wir genau dort.

97
00:08:20,000 --> 00:08:21,470
Mal sehen, ob das für uns klappt.

98
00:08:21,470 --> 00:08:22,720
Recht.

99
00:08:22,760 --> 00:08:24,350
Sie haben hier alle Arten von Daten.

100
00:08:24,380 --> 00:08:27,580
Aber trotzdem funktioniert das.

101
00:08:27,590 --> 00:08:33,530
Aber bevor wir dies tun, stellen wir sicher, dass wir beim Erstellen von

102
00:08:34,130 --> 00:08:42,420
Daten kein Problem haben, da es im Post-Modell oder in jedem Modell diese Funktion gibt, die Lara als Massenzuweisung verwendet.

103
00:08:42,490 --> 00:08:48,070
Wenn Sie also eine Menge Daten erstellen, die Sie wie "create mad" verwenden, erledigen sie all diese Dinge.

104
00:08:48,070 --> 00:08:52,990
Ich habe dir das schon im Großen und Ganzen erklärt, aber wir müssen sicherstellen, dass unsere Phillipos

105
00:08:55,600 --> 00:09:00,750
oder hier OK NGS ein Array sind und du musst wissen wie ein Hören, dass der Titel OK ist.

106
00:09:00,970 --> 00:09:02,040
Das Bild wird analysiert.

107
00:09:02,050 --> 00:09:02,370
OK.

108
00:09:02,380 --> 00:09:03,520
Du musst alles erzählen.

109
00:09:03,640 --> 00:09:10,060
Die Spalten sind in Ordnung, um Daten in Massen zu erstellen oder Daten zu erstellen, aber das werden wir nicht tun.

110
00:09:10,060 --> 00:09:14,510
Was ich tun werde, ist, dass ich etwas anderes verwenden werde und dann habe ich es Eigentum bekommen.

111
00:09:14,530 --> 00:09:20,590
Jetzt werde ich sicherstellen, dass diese Arrays leer sind, damit ich nicht all das Zeug auffüllen muss.

112
00:09:20,590 --> 00:09:23,560
Wenn Sie in der Produktion sind, möchten Sie vielleicht Ihre Phillipos erstellen.

113
00:09:23,560 --> 00:09:25,230
Mach weiter und mach das.

114
00:09:25,630 --> 00:09:31,010
Aber mir geht es gut, mir geht es gut, weil ich das nur mit euch als Projekt für die Klasse mache.

115
00:09:31,060 --> 00:09:33,450
Das ist mir also kein Anliegen.

116
00:09:34,190 --> 00:09:34,550
OK.

117
00:09:35,290 --> 00:09:37,390
Es sieht also so aus, als wären Fabriken bereit.

118
00:09:37,450 --> 00:09:40,140
So lass uns gehen.

119
00:09:40,180 --> 00:09:44,680
Und dies ist unsere Fabrik. Lassen Sie es uns noch einmal überprüfen.

120
00:09:44,680 --> 00:09:46,000
Es sieht gut aus.

121
00:09:46,000 --> 00:09:51,010
Wir werden später eine Enge bekommen oder nicht, wir können auch hier eine statische Klasse verwenden, Leute.

122
00:09:51,010 --> 00:10:02,040
Denken Sie also daran, dass Sie dies nur verwenden können, um es sauberer zu machen. Stellen Sie sicher, dass Sie.

123
00:10:02,360 --> 00:10:11,750
Aber ich werde das hier nur verwenden, damit ich sowieso nichts importieren muss, damit es so aussieht, als wäre es

124
00:10:11,750 --> 00:10:18,160
erledigt. Ich bin mit all dem fertig und werde das Tool verwenden.

125
00:10:18,170 --> 00:10:20,060
Ich weiß nicht, ob ich Sie bereits vorgestellt habe.

126
00:10:20,060 --> 00:10:26,440
BHP Denker ein Werkzeug, das mit La Belle richtig kommt.

127
00:10:26,580 --> 00:10:33,480
Wir können in die Datenbank springen und einige Daten erstellen. Wenn Sie Daten

128
00:10:33,480 --> 00:10:47,090
außerhalb dieser Schnittstelle oder dieser Befehlszeile erstellen möchten, können wir zur Datenbank und dann zu Seeds wechseln und hier können wir tatsächlich einen Faktor aufrufen lass

129
00:10:47,090 --> 00:10:49,560
es uns hier machen.

130
00:10:49,580 --> 00:10:58,440
Auf diese Weise müssen wir dies nicht in einer Befehlszeile tun. Erstellen wir also hier eine Factory. Dann werde ich sagen,

131
00:10:58,440 --> 00:11:04,320
dass Sie wissen, was ich für eine Benutzerfactory erstellen möchte. Verwenden Sie eine Factory,

132
00:11:08,780 --> 00:11:15,490
von der Sie wissen, warum ich sie nicht möchte Um auf diesen Benutzer zu zielen, mache

133
00:11:15,490 --> 00:11:17,170
ich es mit

134
00:11:20,240 --> 00:11:22,890
diesem Namespace und mache 10 Benutzer.

135
00:11:22,930 --> 00:11:33,880
OK, das werden automatisch 10 Benutzer erstellen, wenn wir das jetzt tun.

136
00:11:33,880 --> 00:11:35,020
Wir werden sehen.

137
00:11:35,020 --> 00:11:42,500
Also PSB schon D senden. B. B. Collins Samen OK.

138
00:11:42,730 --> 00:11:51,480
Dieser Befehl hier ruft diesen Klassendatenbank-Seeder auf und diese Funktion wird ausgeführt, um die Factory-Hilfsfunktion

139
00:11:51,480 --> 00:11:56,010
abzurufen, mit der unser Klassenbenutzer ausgeführt wird.

140
00:11:56,130 --> 00:11:59,160
Es werden 10 dieser Datensätze erstellt.

141
00:11:59,160 --> 00:12:04,610
Denken Sie daran, dass diese Fabrik hier anrufen wird, sie wird hier hingehen und die Fabrik richtig erstellen und anrufen.

142
00:12:07,320 --> 00:12:12,820
Die Postfabrik ist eigentlich eine andere Postfabrik.

143
00:12:12,970 --> 00:12:17,990
Wir müssen die Fabrik anrufen.

144
00:12:18,020 --> 00:12:19,880
Tut mir leid wegen den Jungs.

145
00:12:19,880 --> 00:12:29,380
Also ja, diese Klasse hier unterscheidet sich von der Post-Klasse. Natürlich wurde dies als Benutzer bezeichnet und der Post, den wir Post

146
00:12:29,390 --> 00:12:30,290
nennen.

147
00:12:30,290 --> 00:12:33,110
Aber hier ist der Deal.

148
00:12:33,110 --> 00:12:40,610
Normalerweise erstellen die Benutzer im Datenbank-Seeder in dieser Datei normalerweise eine Art von Hardcode-Daten, als würden sie

149
00:12:40,610 --> 00:12:48,660
auf diese Klasse D zugreifen. B. B. und sie können anfangen zu tippen,

150
00:12:48,660 --> 00:12:56,580
wissen Sie, hey, ich möchte einige Benutzer erstellen und hier werde ich einfügen und das habe ich in allen Projekten

151
00:12:57,210 --> 00:13:06,090
getan und ich möchte einige Daten erstellen und dann hier in diesem Array beginnen wir zu setzen In den Daten möchten wir

152
00:13:06,090 --> 00:13:11,910
den Namen des Benutzers, den Sie kennen, und dann beginnen Sie, diesen dort einzutragen.

153
00:13:12,090 --> 00:13:18,060
Das ist es, was Sie die meiste Zeit in Datenbankzedern tun, aber wenn Sie bereits Fabriken haben, können Sie das.

154
00:13:18,060 --> 00:13:19,580
Das musst du nicht benutzen.

155
00:13:19,710 --> 00:13:21,420
Sie können einfach die Fabrik benutzen.

156
00:13:21,420 --> 00:13:22,250
OK.

157
00:13:22,290 --> 00:13:29,460
Es macht für mich keinen Sinn und so wissen Sie wie Ja. Wenn Sie eine große Anwendung haben, können Sie

158
00:13:29,460 --> 00:13:37,290
mit dem Erstellen einer kleinen Anwendung beginnen. Sie können ein bisschen kalten harten Code wie mit einer DB-Klasse erstellen, und das können

159
00:13:37,290 --> 00:13:38,480
Sie hier tun.

160
00:13:38,490 --> 00:13:42,040
Wenn Sie jedoch eine große Anwendung haben, möchten Sie Fabriken erstellen.

161
00:13:42,090 --> 00:13:43,560
OK, viele von ihnen.

162
00:13:43,560 --> 00:13:50,010
Aber trotzdem, ja, wir haben den Benutzer, aber ich möchte nicht nur 10 Benutzer erstellen, wie wir dies ausführen und sehen,

163
00:13:50,010 --> 00:13:56,030
was er eingibt, und er sagt, dass er es nicht findet, lassen Sie es uns noch einmal tun.

164
00:13:56,070 --> 00:13:56,540
Na, bitte.

165
00:13:56,540 --> 00:13:57,950
Es heißt vervollständigen.

166
00:13:58,410 --> 00:14:03,970
Schauen wir uns unsere Datenbank ganz schnell an. Aktualisieren wir hier.

167
00:14:04,240 --> 00:14:06,040
Und während wir unterwegs waren, haben wir 10 Benutzer.

168
00:14:06,040 --> 00:14:08,060
Nett.

169
00:14:08,080 --> 00:14:09,620
OK.

170
00:14:09,730 --> 00:14:12,350
Was ich jetzt tun möchte, ist, dass ich das löschen möchte.

171
00:14:13,750 --> 00:14:23,750
Lassen Sie mich also fortfahren und diese Benutzer erstellen und löschen und in den Lead gehen, den Sie nicht müssen.

172
00:14:23,750 --> 00:14:25,500
Aber ich will.

173
00:14:25,500 --> 00:14:25,910
Gut.

174
00:14:26,220 --> 00:14:30,970
Ich möchte also 10 Benutzer erstellen, aber gleichzeitig möchte ich Tempel erstellen.

175
00:14:31,260 --> 00:14:32,580
Und Sie könnten fragen, ist das so.

176
00:14:32,630 --> 00:14:34,750
Und wie machen wir das gut? Lassen Sie sich von mir zeigen.

177
00:14:34,770 --> 00:14:41,430
In dieser Erstellungsmethode werde ich also jede Funktion ändern.

178
00:14:41,460 --> 00:14:52,570
Diese jede Funktion wird einen Rückruf haben oder ich möchte Ihnen zeigen, dass dieser Rückruf hier einen Benutzer aus

179
00:14:52,570 --> 00:14:55,430
seinem OK zusammenfassen kann.

180
00:14:55,450 --> 00:14:58,090
Jetzt wird dieser Rückruf diesen Benutzer haben.

181
00:14:58,090 --> 00:15:02,190
Lassen Sie mich sehen, was damit los ist.

182
00:15:02,200 --> 00:15:04,330
Nun, das ist in Ordnung.

183
00:15:04,480 --> 00:15:14,600
Jetzt verwenden wir diesen Benutzer hier, um auf die Beziehung zuzugreifen, die die Beziehung einfach so veröffentlicht, und dann werden wir dort gut sagen,

184
00:15:14,630 --> 00:15:17,690
dass ich speichern möchte, und wir verwenden

185
00:15:20,430 --> 00:15:22,110
wieder eine Fabrik.

186
00:15:22,110 --> 00:15:23,550
Und hier

187
00:15:26,610 --> 00:15:37,290
sagen wir gut, ich möchte einen Beitrag wie diesen speichern, aber weniger verkettet hier, wo wir verketten müssen,

188
00:15:37,290 --> 00:15:42,560
ist eine Make-Funktion, die einfach so gemacht wird.

189
00:15:42,570 --> 00:15:42,840
Gut.

190
00:15:42,840 --> 00:15:44,630
Wir werden sehen.

191
00:15:44,660 --> 00:15:50,700
Das ist also eine Funktion, die wie eine Funktion aussieht.

192
00:15:50,720 --> 00:15:52,430
Na, bitte.

193
00:15:52,490 --> 00:15:52,910
Na, bitte.

194
00:15:52,910 --> 00:15:54,840
Das sieht viel besser aus.

195
00:15:55,080 --> 00:16:01,550
OK, wir erstellen eine Factory oder 10 Benutzer, aber gleichzeitig ändern wir dies.

196
00:16:01,560 --> 00:16:02,190
Jede Funktion.

197
00:16:02,190 --> 00:16:03,960
Dies ist nicht der einzige Ort, an dem Sie Änderungen vornehmen können.

198
00:16:03,990 --> 00:16:09,570
Sie können jede Funktion in viele Methoden ändern und dann den Benutzer, den Sie erstellen, hier herausziehen.

199
00:16:09,570 --> 00:16:10,850
Sie ziehen sie heraus.

200
00:16:11,010 --> 00:16:17,220
Dadurch wird eine Instanz erstellt, in der wir auf diese Beziehung in der Beziehung zugreifen, in der Sie auf diese von Larrabee

201
00:16:17,220 --> 00:16:21,840
angebotene Methode namens Speichern zugreifen können, mit der Sie Inhalte in der Datenbank speichern können.

202
00:16:21,870 --> 00:16:26,230
Nachdem wir einen Benutzer erstellt haben, den wir speichern, geben wir Daten ein.

203
00:16:26,400 --> 00:16:32,580
Wir geben einen verwandten Modellcode-Beitrag ein und das wird funktionieren, weil wir den Benutzer I haben. D. D. in

204
00:16:32,580 --> 00:16:36,160
dieser Posttabelle.

205
00:16:36,380 --> 00:16:37,170
OK.

206
00:16:37,220 --> 00:16:39,140
Wir haben diesen Benutzer I. D. D. genau hier.

207
00:16:39,140 --> 00:16:44,450
So lächerlich, wenn sie diesen Benutzer in der Partitur I ergreifen wollten. D. D. weiß, dass er

208
00:16:44,450 --> 00:16:49,050
dort das zugehörige Modell oder die zugehörigen Daten ablegen muss.

209
00:16:49,070 --> 00:16:49,940
Gut.

210
00:16:49,940 --> 00:16:56,320
Also lasst uns weitermachen und diesen Arbeitssong auf dem PSP-Handwerker D sehen. B. B. Samen wieder eintreten.

211
00:16:56,350 --> 00:17:02,980
Wenn ich jetzt zu den Daten hier zurückkehre, wenn ich sie aktualisiere, hast du 10 Beiträge und 10 Benutzer.

212
00:17:02,990 --> 00:17:12,950
Aber schau dir den Benutzer I an. D. D. Dieser erste Beitrag hat eine Idee von 11 und wenn Sie sich diesen Kerl

213
00:17:12,950 --> 00:17:16,370
hier ansehen, haben Sie eine Idee von elf, wenn dies für Sie zu verwirrend ist.

214
00:17:16,370 --> 00:17:20,050
Löschen Sie alle Daten und wiederholen Sie den Vorgang. OK.

215
00:17:20,440 --> 00:17:27,330
Nun, Sie können meinen Migrations-Reset durchführen und wir haben alles in Ordnung gesagt. Sie sehen, wie einfach das war.

216
00:17:27,330 --> 00:17:32,950
Jetzt lasse ich es dort, damit du es verstehen kannst, aber trotzdem vielen Dank, dass du Jungs beobachtet

217
00:17:32,950 --> 00:17:35,170
hast, und wir sehen uns im Netzvortrag.
