1
1

00:00:00,320  -->  00:00:01,360
<v ->Hi, welcome back.</v>
2

2

00:00:01,360  -->  00:00:04,070
In this video we're going to add logging to our
3

3

00:00:04,070  -->  00:00:05,290
scraping app.
4

4

00:00:05,290  -->  00:00:08,810
Just to get a bit better of an idea of how to add logging
5

5

00:00:08,810  -->  00:00:11,200
to an application like this.
6

6

00:00:11,200  -->  00:00:13,680
By the way I always recommend adding logging
7

7

00:00:13,680  -->  00:00:17,360
as you start your application and not add the logging
8

8

00:00:17,360  -->  00:00:20,090
all at the end, like we've done here.
9

9

00:00:20,090  -->  00:00:23,430
When you start, as you develop, you can add logging
10

10

00:00:23,430  -->  00:00:25,460
and it'll make more sense.
11

11

00:00:25,460  -->  00:00:27,668
Once you're done, you sort of lose a bit of the
12

12

00:00:27,668  -->  00:00:30,650
bigger picture, and sometimes adding logging
13

13

00:00:30,650  -->  00:00:32,340
can be a bit more tricky.
14

14

00:00:32,340  -->  00:00:35,830
So by all means, add the logging while you develop,
15

15

00:00:35,830  -->  00:00:37,850
not all at the end.
16

16

00:00:37,850  -->  00:00:40,830
But nonetheless, in order to save you time and not to
17

17

00:00:40,830  -->  00:00:42,970
add logging in every video and so forth, we've added
18

18

00:00:42,970  -->  00:00:44,781
it all at the end here.
19

19

00:00:44,781  -->  00:00:47,510
And, but again, don't do this normally.
20

20

00:00:47,510  -->  00:00:49,980
The first thing we have to do is import the logging
21

21

00:00:49,980  -->  00:00:52,560
module, and then we're going to configure the logging
22

22

00:00:52,560  -->  00:00:55,440
module so we're going to do logging dot basic config
23

23

00:00:55,440  -->  00:00:58,650
and then in here we're gonna paste in format, which is going
24

24

00:00:58,650  -->  00:01:01,420
to be the format of the logger.
25

25

00:01:01,420  -->  00:01:04,840
And this is in all Python string format.
26

26

00:01:04,840  -->  00:01:07,960
And syntax, you've seen it before, I've showed you
27

27

00:01:07,960  -->  00:01:11,950
this earlier, and what we're gonna do is print out
28

28

00:01:13,365  -->  00:01:18,365
and the current time and the current level like debug
29

29

00:01:19,820  -->  00:01:23,780
or info and so forth, but this is always going to be eight
30

30

00:01:23,780  -->  00:01:28,310
characters long, so that the longest level, critical,
31

31

00:01:28,310  -->  00:01:31,200
will be the same width as the shortest level, info.
32

32

00:01:31,200  -->  00:01:33,071
They're all gonna be eight spaces, and it's just gonna
33

33

00:01:33,071  -->  00:01:35,270
pad with spaces at the end.
34

34

00:01:36,770  -->  00:01:39,290
Then we're going to add the file name.
35

35

00:01:40,420  -->  00:01:41,610
File name.
36

36

00:01:41,610  -->  00:01:44,640
By the way, the S at the end just means string.
37

37

00:01:44,640  -->  00:01:47,750
It's just Python's way of assuring that what we're
38

38

00:01:47,750  -->  00:01:49,250
printing out here are strings.
39

39

00:01:50,250  -->  00:01:52,740
D is for number.
40

40

00:01:53,910  -->  00:01:56,250
And finally we're going to add the message, which is
41

41

00:01:56,250  -->  00:01:57,530
gonna be an S as well.
42

42

00:01:59,320  -->  00:02:02,630
So as you can see our format is the time, then the level
43

43

00:02:02,630  -->  00:02:07,210
name, filename, and line number of where this was logged.
44

44

00:02:07,210  -->  00:02:09,350
And finally the message that we logged.
45

45

00:02:12,000  -->  00:02:14,890
The date format, that's what this argument is for,
46

46

00:02:14,890  -->  00:02:18,400
is what format you want to print your dates in.
47

47

00:02:18,400  -->  00:02:21,680
Percent D, percent M, percent Y is gonna be date, month,
48

48

00:02:21,680  -->  00:02:24,130
and year, year has four digits.
49

49

00:02:24,130  -->  00:02:28,810
And then percent H percent M percent S is going to give you
50

50

00:02:28,810  -->  00:02:30,410
hours, minutes, and seconds.
51

51

00:02:30,410  -->  00:02:34,260
So I think this is pretty good accuracy there.
52

52

00:02:34,260  -->  00:02:38,550
The level is gonna be logging dot debug as a start.
53

53

00:02:38,550  -->  00:02:42,870
And then we can turn it down to info or even to warning
54

54

00:02:42,870  -->  00:02:43,703
if we want.
55

55

00:02:44,640  -->  00:02:47,350
And finally, if you paste in the filename here like
56

56

00:02:47,350  -->  00:02:50,340
logs dot txt, then it's just going to write all your
57

57

00:02:50,340  -->  00:02:53,530
logs to that file instead of showing them on the console.
58

58

00:02:53,530  -->  00:02:55,130
So this is normally a good idea.
59

59

00:02:56,730  -->  00:02:58,360
Then we're going to get a logger,
60

60

00:02:58,360  -->  00:02:59,850
so we're going to say logger.
61

61

00:03:01,350  -->  00:03:06,350
Nope, cannot type logger equals logging dot get logger.
62

62

00:03:07,400  -->  00:03:09,710
And we're gonna get our base logger, which is
63

63

00:03:09,710  -->  00:03:10,960
gonna be called scraping.
64

64

00:03:11,970  -->  00:03:15,480
Okay, so in app dot PY, the logger is going to be
65

65

00:03:15,480  -->  00:03:18,320
called scraping, and as soon as you do get logger
66

66

00:03:18,320  -->  00:03:21,100
and you paste in the name, the logging module
67

67

00:03:21,100  -->  00:03:23,440
is going to create a logger in the background.
68

68

00:03:24,320  -->  00:03:27,320
In any other file when you paste in the same name
69

69

00:03:27,320  -->  00:03:28,560
it's gonna get the same logger.
70

70

00:03:28,560  -->  00:03:32,764
So there's only one instance of a logger at any given time.
71

71

00:03:32,764  -->  00:03:34,790
And this is in case you're interested in an example of
72

72

00:03:34,790  -->  00:03:37,720
a singleton pattern in software development,
73

73

00:03:37,720  -->  00:03:39,740
this is an implementation of a singleton.
74

74

00:03:39,740  -->  00:03:41,860
If you don't know what a singleton is, don't worry,
75

75

00:03:41,860  -->  00:03:44,878
we're gonna look into that much later in the course.
76

76

00:03:44,878  -->  00:03:49,010
Okay, then we can start logging using this logger.
77

77

00:03:50,070  -->  00:03:52,870
So what can we log at line 13?
78

78

00:03:52,870  -->  00:03:56,530
Well, whenever we import something from app, we're gonna
79

79

00:03:56,530  -->  00:03:59,900
run through these lines of code, then start getting
80

80

00:03:59,900  -->  00:04:03,270
the books and then finally it read over all the pages
81

81

00:04:03,270  -->  00:04:05,720
and get all the books in each page.
82

82

00:04:05,720  -->  00:04:07,680
What we can start logging here is that we are about
83

83

00:04:07,680  -->  00:04:09,020
to load the books list.
84

84

00:04:15,077  -->  00:04:16,520
Loading books list.
85

85

00:04:16,520  -->  00:04:20,950
By the way, my typos are generally caused by me
86

86

00:04:20,950  -->  00:04:22,780
having a microphone on my face and not being
87

87

00:04:22,780  -->  00:04:25,560
able to see my keyboard at all, so I apologise
88

88

00:04:25,560  -->  00:04:26,393
for any typos.
89

89

00:04:27,950  -->  00:04:30,900
So what we're seeing here is, we're loading the books list,
90

90

00:04:31,810  -->  00:04:34,810
and that's what's gonna appear in our logs when we run this.
91

91

00:04:34,810  -->  00:04:36,600
Let's run the menu again.
92

92

00:04:38,020  -->  00:04:40,040
It's gonna go through all of this stuff.
93

93

00:04:41,300  -->  00:04:44,360
It's going through, or it has already gone through line 13.
94

94

00:04:46,350  -->  00:04:49,700
And it's now loaded everything, we can see for example
95

95

00:04:49,700  -->  00:04:51,550
the best books and we can exit.
96

96

00:04:52,630  -->  00:04:55,160
Then you get here, logs dot text.
97

97

00:04:55,160  -->  00:04:56,470
So let me open that up.
98

98

00:04:57,690  -->  00:05:00,290
You can see that this contains quite a lot of stuff.
99

99

00:05:01,520  -->  00:05:05,280
One info message at the top are saying app dot PY
100

100

00:05:05,280  -->  00:05:07,920
line 13 loading books list.
101

101

00:05:07,920  -->  00:05:11,520
And then it's got a bunch of debug messages.
102

102

00:05:11,520  -->  00:05:15,140
These debug messages are not added by us,
103

103

00:05:15,140  -->  00:05:18,330
they were printed out by another library that prints
104

104

00:05:18,330  -->  00:05:22,180
out debug messages and that's the requests library.
105

105

00:05:23,100  -->  00:05:26,770
So here it just says starting a new http connection
106

106

00:05:26,770  -->  00:05:30,030
to books dot to scrape dot com.
107

107

00:05:30,030  -->  00:05:32,260
And then it's starting another one to books dot to scrape
108

108

00:05:32,260  -->  00:05:35,919
dot com, but now it's trying to get catalogue slash page two
109

109

00:05:35,919  -->  00:05:39,610
slash HTML, and so for page three, four, five, and so forth
110

110

00:05:39,610  -->  00:05:42,080
up all the way up to 50.
111

111

00:05:43,133  -->  00:05:46,772
And as you can see, you also get the response so that's
112

112

00:05:46,772  -->  00:05:49,500
the code 200.
113

113

00:05:49,500  -->  00:05:51,370
That means all is good.
114

114

00:05:51,370  -->  00:05:55,250
So these logs here tell you that all your requests
115

115

00:05:55,250  -->  00:05:59,130
to the page succeeded because they're all code 200.
116

116

00:05:59,130  -->  00:06:00,860
So this is good.
117

117

00:06:00,860  -->  00:06:03,975
If you don't want to see these messages
118

118

00:06:03,975  -->  00:06:07,060
because you're not interested in such a low level operation
119

119

00:06:07,060  -->  00:06:09,880
of your application, all you have to do is turn the level
120

120

00:06:09,880  -->  00:06:12,680
up to info and then they will disappear.
121

121

00:06:12,680  -->  00:06:17,030
Okay, so if you're showing a debug message that is only
122

122

00:06:17,030  -->  00:06:19,670
for when you're developing and you wanna know exactly
123

123

00:06:19,670  -->  00:06:21,640
what's going on, use debug.
124

124

00:06:21,640  -->  00:06:25,410
If you want to give some information that is not needed,
125

125

00:06:25,410  -->  00:06:26,850
use info.
126

126

00:06:26,850  -->  00:06:28,810
And of course if you wanna talk about warnings and errors
127

127

00:06:28,810  -->  00:06:31,840
and criticals and so forth, use those levels.
128

128

00:06:31,840  -->  00:06:35,510
But normally you'd be using debug info at this level, okay.
129

129

00:06:39,780  -->  00:06:43,190
For example, we could put a debug message here,
130

130

00:06:44,150  -->  00:06:45,540
logger dot debug.
131

131

00:06:46,590  -->  00:06:51,530
Creating all books page from page content.
132

132

00:06:53,280  -->  00:06:54,113
Like that.
133

133

00:06:54,950  -->  00:06:58,590
Maybe not the most necessary message, but if there is
134

134

00:06:58,590  -->  00:07:01,910
a problem between the debug message and this message
135

135

00:07:01,910  -->  00:07:03,960
here you know that something has gone wrong retrieving
136

136

00:07:03,960  -->  00:07:05,290
the content of the page.
137

137

00:07:07,670  -->  00:07:11,460
Now let's go over to our books page and we can
138

138

00:07:11,460  -->  00:07:12,940
do some logging in there as well.
139

139

00:07:12,940  -->  00:07:14,060
Let's go in here.
140

140

00:07:14,060  -->  00:07:19,060
Once again, all we have to do import logging and down here
141

141

00:07:19,590  -->  00:07:20,850
create out logger.
142

142

00:07:24,500  -->  00:07:27,960
And inside the logger here, nope, by the way I'm gonna
143

143

00:07:27,960  -->  00:07:30,520
make sure to use the right letter there.
144

144

00:07:30,520  -->  00:07:35,520
We're gonna say scraping dot all books page.
145

145

00:07:36,130  -->  00:07:39,040
This is going to give me a child logger of the
146

146

00:07:39,040  -->  00:07:42,700
scraping logger, the base logger that we defined earlier.
147

147

00:07:42,700  -->  00:07:45,120
And so all configuration and everything is going to
148

148

00:07:45,120  -->  00:07:47,210
be inherited, so if anything,
149

149

00:07:47,210  -->  00:07:50,310
if we'd set up anything on the scraping logger it would
150

150

00:07:50,310  -->  00:07:52,820
also be available on this child logger.
151

151

00:07:52,820  -->  00:07:56,940
But generally the usefulness is also to keep them related.
152

152

00:07:56,940  -->  00:08:00,000
So you'd know that this logger is also related to your main
153

153

00:08:00,000  -->  00:08:02,150
logger, they're part of the same application.
154

154

00:08:02,150  -->  00:08:03,560
You know, you've written them it's not
155

155

00:08:03,560  -->  00:08:07,260
like some other library is doing the logging for you.
156

156

00:08:13,060  -->  00:08:15,800
So here we could have something like parsing page content
157

157

00:08:15,800  -->  00:08:17,070
with beautiful soup.
158

158

00:08:20,860  -->  00:08:24,260
Inside the books function you could add something.
159

159

00:08:34,470  -->  00:08:37,680
Like that, finding all books in a page using the all books
160

160

00:08:37,680  -->  00:08:40,650
page locator dot books is gonna give you the locator
161

161

00:08:40,650  -->  00:08:44,040
in your logs, so then as you are analysing the logs
162

162

00:08:44,040  -->  00:08:47,380
if something goes wrong you can look back and see what
163

163

00:08:47,380  -->  00:08:49,710
locator you tried to use and then identify if maybe
164

164

00:08:49,710  -->  00:08:51,960
it's changed now, if something does go wrong.
165

165

00:08:54,700  -->  00:08:58,180
Similarly in the page count here you could add some logging,
166

166

00:08:58,180  -->  00:09:02,580
logger dot debug finding all number of
167

167

00:09:02,580  -->  00:09:04,440
catalogue pages available.
168

168

00:09:06,578  -->  00:09:11,578
And then you can do things like logger dot info.
169

169

00:09:12,620  -->  00:09:15,750
Found number of catalogue pages available.
170

170

00:09:21,000  -->  00:09:22,350
Something like that.
171

171

00:09:22,350  -->  00:09:25,140
This is going to print an info message, so it's gonna
172

172

00:09:25,140  -->  00:09:28,680
appear even if you've got, if you have debug
173

173

00:09:28,680  -->  00:09:30,910
disabled but that can be useful, I think that
174

174

00:09:30,910  -->  00:09:33,440
printing out this message can be interesting
175

175

00:09:33,440  -->  00:09:36,690
so that in your logs if you do strip out the debug
176

176

00:09:36,690  -->  00:09:38,660
messages you'll still see how many pages you're gonna
177

177

00:09:38,660  -->  00:09:40,172
go through.
178

178

00:09:40,172  -->  00:09:41,572
And that can be interesting.
179

179

00:09:51,523  -->  00:09:54,010
And here we're gonna debug the message that we've
180

180

00:09:54,010  -->  00:09:56,770
managed to extract a number of pages as integer.
181

181

00:09:56,770  -->  00:09:58,610
If we fail we know that something's wrong with
182

182

00:09:58,610  -->  00:10:00,190
our pattern or something here.
183

183

00:10:01,100  -->  00:10:02,820
Notice how by the way I'm putting these things
184

184

00:10:02,820  -->  00:10:05,950
around backticks, that's just to tell me that
185

185

00:10:05,950  -->  00:10:08,660
this is a value that's come from the code.
186

186

00:10:08,660  -->  00:10:11,130
It's not just a string.
187

187

00:10:11,130  -->  00:10:15,460
This will appear on the logs as backtick page one of 50
188

188

00:10:15,460  -->  00:10:17,962
backtick, and then you can look at it and see, okay,
189

189

00:10:17,962  -->  00:10:20,670
this is something that's actually been printed from
190

190

00:10:20,670  -->  00:10:22,830
the code and it's not just a string that we've
191

191

00:10:22,830  -->  00:10:23,940
printed out in the logs.
192

192

00:10:23,940  -->  00:10:27,860
And so if this is, for example, like none,
193

193

00:10:27,860  -->  00:10:29,850
you maybe think there's an error there.
194

194

00:10:29,850  -->  00:10:31,260
So that's why it's in backticks, so it's
195

195

00:10:31,260  -->  00:10:32,260
a bit easier to see.
196

196

00:10:34,580  -->  00:10:38,520
We can now go to our book parser, for example,
197

197

00:10:38,520  -->  00:10:39,970
and see what we've got there.
198

198

00:10:41,890  -->  00:10:44,980
And we can, again, import the login module.
199

199

00:10:47,670  -->  00:10:48,780
And create our logger.
200

200

00:10:56,660  -->  00:10:57,600
And that's it.
201

201

00:10:57,600  -->  00:11:02,600
Then we can use this logger inside the module here.
202

202

00:11:11,870  -->  00:11:14,890
We could do something like this, new book parser
203

203

00:11:14,890  -->  00:11:17,180
created from the parent.
204

204

00:11:17,180  -->  00:11:21,090
And this is actually going to print out the entire HTML
205

205

00:11:21,090  -->  00:11:23,920
that you decided you wanted to create the book
206

206

00:11:23,920  -->  00:11:25,550
parser from in your code.
207

207

00:11:25,550  -->  00:11:26,934
So this is gonna be a really long log, 'cause it's gonna
208

208

00:11:26,934  -->  00:11:30,230
print out the entire HTML of the parent but it
209

209

00:11:30,230  -->  00:11:33,390
can be useful for when you're debugging something
210

210

00:11:33,390  -->  00:11:35,520
that went wrong in your book parser.
211

211

00:11:35,520  -->  00:11:38,150
So I'm gonna leave it as that, but you may want to print
212

212

00:11:38,150  -->  00:11:43,150
something less verbose, less HTML code in here
213

213

00:11:43,690  -->  00:11:47,070
if you are going to be using this extensively.
214

214

00:11:55,498  -->  00:11:57,050
Here we print that we're finding a book name
215

215

00:11:57,050  -->  00:12:00,900
and then down here we're gonna say that we found it.
216

216

00:12:08,000  -->  00:12:10,280
That way if something does happen after finding
217

217

00:12:10,280  -->  00:12:13,180
the book name we know that is a problem here
218

218

00:12:13,180  -->  00:12:15,670
and not elsewhere in our code.
219

219

00:12:15,670  -->  00:12:18,290
And we can do the same thing for these others.
220

220

00:12:20,310  -->  00:12:22,110
So we're going to do that.
221

221

00:12:26,500  -->  00:12:29,360
Of course, changing these things.
222

222

00:12:33,710  -->  00:12:36,200
And finally, of course, we're gonna print also that
223

223

00:12:36,200  -->  00:12:37,780
we found the thing.
224

224

00:12:49,960  -->  00:12:52,630
We're gonna extract the price here to a variable
225

225

00:12:52,630  -->  00:12:56,650
just so we can then print it out.
226

226

00:12:59,080  -->  00:13:00,410
From the book price.
227

227

00:13:02,040  -->  00:13:03,810
And this is gonna be float price.
228

228

00:13:11,040  -->  00:13:11,920
Like that.
229

229

00:13:13,160  -->  00:13:18,160
So again, we're just adding in here the different
230

230

00:13:18,310  -->  00:13:20,690
things that we may need in order to understand what's
231

231

00:13:20,690  -->  00:13:22,605
going on through our programme.
232

232

00:13:22,605  -->  00:13:24,410
And so that's it.
233

233

00:13:25,460  -->  00:13:27,190
Make sure to not delete the colon there,
234

234

00:13:27,190  -->  00:13:29,870
that's gonna be pretty useful.
235

235

00:13:29,870  -->  00:13:33,810
And then we are going to do this thing here.
236

236

00:13:33,810  -->  00:13:36,790
I'm just gonna paste it from the code.
237

237

00:13:41,190  -->  00:13:43,130
Like that, okay.
238

238

00:13:46,190  -->  00:13:49,740
Well, that is pretty much it for our logging.
239

239

00:13:49,740  -->  00:13:51,800
We could add some logging over to your menu
240

240

00:13:51,800  -->  00:13:53,130
if you want.
241

241

00:13:53,130  -->  00:13:54,840
It would be fairly straight forward, there's not
242

242

00:13:54,840  -->  00:13:56,790
much logging to add in here.
243

243

00:13:59,400  -->  00:14:01,370
But we can do it just for completeness.
244

244

00:14:05,820  -->  00:14:07,180
Like that.
245

245

00:14:07,180  -->  00:14:10,460
And then we can add some logging when we try to print out.
246

246

00:14:16,370  -->  00:14:17,830
Like that.
247

247

00:14:17,830  -->  00:14:20,130
These are info messages because they're not really
248

248

00:14:20,130  -->  00:14:23,240
concerned with how the application is working
249

249

00:14:23,240  -->  00:14:24,670
or what it's doing.
250

250

00:14:24,670  -->  00:14:28,200
It's more like informative messages of what you did.
251

251

00:14:28,200  -->  00:14:30,530
And so that's why I'm making them info messages,
252

252

00:14:30,530  -->  00:14:33,709
but again this is all a matter of thinking about
253

253

00:14:33,709  -->  00:14:36,440
how you're gonna look at your logs.
254

254

00:14:40,920  -->  00:14:42,450
If you're not gonna look at your logs of course
255

255

00:14:42,450  -->  00:14:44,580
it maybe doesn't make so much sense to do
256

256

00:14:44,580  -->  00:14:45,820
any logging at all.
257

257

00:14:46,900  -->  00:14:49,310
And down here we're gonna do a debug message
258

258

00:14:49,310  -->  00:14:50,950
after terminating programme.
259

259

00:14:52,760  -->  00:14:54,980
Okay, so now we can run our menu.
260

260

00:14:56,640  -->  00:15:01,010
This is going, again, through all of that logging.
261

261

00:15:01,010  -->  00:15:03,780
Therefore the connection handlers and, you know,
262

262

00:15:03,780  -->  00:15:07,270
getting all the pages and then we end up here
263

263

00:15:07,270  -->  00:15:12,270
we can do something like B or C, and then queue.
264

264

00:15:12,620  -->  00:15:16,310
Now, our logs file is going to be enormous.
265

265

00:15:16,310  -->  00:15:18,660
By the way, these logs here are from earlier
266

266

00:15:18,660  -->  00:15:23,660
because it's now 21:42, so we are going down here
267

267

00:15:25,402  -->  00:15:28,060
these are now, we're low in the book space, this is
268

268

00:15:28,060  -->  00:15:31,240
our programme starting again the second that we run it.
269

269

00:15:31,240  -->  00:15:34,580
We started to get the HTTP connection
270

270

00:15:34,580  -->  00:15:37,210
and you can see here that in the books page
271

271

00:15:37,210  -->  00:15:39,880
we started parsing the content with beautiful soup.
272

272

00:15:39,880  -->  00:15:41,880
Then we started finding all the books in the page
273

273

00:15:41,880  -->  00:15:44,050
using that locator.
274

274

00:15:45,000  -->  00:15:46,830
And it seems like we succeeded.
275

275

00:15:46,830  -->  00:15:50,140
And then we say new book parser created from and then we
276

276

00:15:50,140  -->  00:15:52,250
started printing out the parent.
277

277

00:15:52,250  -->  00:15:55,110
So here we have all our article and everything that is
278

278

00:15:55,110  -->  00:15:58,490
inside that parent that we're gonna extract data from.
279

279

00:15:58,490  -->  00:16:01,390
And then we moved on to the next book parser.
280

280

00:16:01,390  -->  00:16:03,530
And so from here you can see there's quite
281

281

00:16:03,530  -->  00:16:05,330
a lot of these book parsers in here.
282

282

00:16:06,530  -->  00:16:10,420
Should be a couple thousand, a thousand exactly.
283

283

00:16:10,420  -->  00:16:13,790
And eventually you go down here and we say that we
284

284

00:16:13,790  -->  00:16:16,580
finding the best books by rating.
285

285

00:16:16,580  -->  00:16:18,810
And then we're finding a book rating and we found it for
286

286

00:16:18,810  -->  00:16:21,950
a book that was three, another book rating was one,
287

287

00:16:21,950  -->  00:16:24,740
and so I'm sure you can add some more information here
288

288

00:16:24,740  -->  00:16:26,810
like the name of the book maybe.
289

289

00:16:26,810  -->  00:16:28,360
And for which this was found.
290

290

00:16:28,360  -->  00:16:30,850
And then we're finding a price,
291

291

00:16:31,800  -->  00:16:34,540
and then we found a name, and so forth for the other books
292

292

00:16:34,540  -->  00:16:35,890
that we were searching for.
293

293

00:16:37,210  -->  00:16:40,530
Notice that when we print, when we call the repr method
294

294

00:16:40,530  -->  00:16:43,540
of a book, that finds the name, the price,
295

295

00:16:43,540  -->  00:16:44,928
and the rating again.
296

296

00:16:44,928  -->  00:16:49,540
So there is definitely some duplication here in our logs.
297

297

00:16:49,540  -->  00:16:52,650
But you know, they give us all the information we need
298

298

00:16:52,650  -->  00:16:54,560
in order to understand exactly what happened.
299

299

00:16:54,560  -->  00:16:58,210
And if there was an error, for example, here after we said
300

300

00:16:58,210  -->  00:17:02,580
finding book rating, we would know that the error is
301

301

00:17:02,580  -->  00:17:06,080
inside the rating property of our book parser.
302

302

00:17:06,080  -->  00:17:08,670
And we wouldn't have to go searching anywhere, we'd know
303

303

00:17:08,670  -->  00:17:10,850
that something's gone wrong there.
304

304

00:17:10,850  -->  00:17:14,380
So the logs can be really useful, particularly when they
305

305

00:17:14,380  -->  00:17:17,010
stop in the middle of somewhere.
306

306

00:17:17,010  -->  00:17:18,560
You don't see your terminated programme or anything,
307

307

00:17:18,560  -->  00:17:21,950
they just stop suddenly and you know that you've encountered
308

308

00:17:21,950  -->  00:17:23,440
some problem there.
309

309

00:17:23,440  -->  00:17:26,940
You normally wouldn't read all the logs, there are 31,000
310

310

00:17:26,940  -->  00:17:28,830
lines in here, you wouldn't read them.
311

311

00:17:28,830  -->  00:17:31,710
You would just look at them when there is a problem
312

312

00:17:31,710  -->  00:17:34,710
and you'd see what has gone wrong.
313

313

00:17:34,710  -->  00:17:38,615
So having good logs is important but sometimes of course
314

314

00:17:38,615  -->  00:17:41,330
particularly after we're done developing
315

315

00:17:41,330  -->  00:17:43,940
and we're sort of, you know, confident of what's going on,
316

316

00:17:43,940  -->  00:17:47,870
we may want to decrease the logging level down to info
317

317

00:17:47,870  -->  00:17:50,060
so that we can look at the logs and more or less
318

318

00:17:50,060  -->  00:17:52,240
see what happened at each point in time.
319

319

00:17:53,300  -->  00:17:54,690
So we can do that.
320

320

00:17:54,690  -->  00:17:57,390
Then I'm gonna delete logs dot txt, let's delete that.
321

321

00:17:58,370  -->  00:17:59,870
And we're on the menu again.
322

322

00:18:01,840  -->  00:18:04,549
And believe it or not, all this level of logging actually
323

323

00:18:04,549  -->  00:18:08,680
takes time, it slows down your application.
324

324

00:18:10,780  -->  00:18:13,620
So that's definitely something to be wary of
325

325

00:18:14,730  -->  00:18:17,270
when you do a lot of logging, make sure that when your
326

326

00:18:17,270  -->  00:18:19,960
application is running and you need the performance
327

327

00:18:19,960  -->  00:18:21,440
to not go too far.
328

328

00:18:23,460  -->  00:18:27,260
And here we have something here, I think my rating
329

329

00:18:28,930  -->  00:18:31,789
here was an info message but it should have been
330

330

00:18:31,789  -->  00:18:33,900
a debug, my bad.
331

331

00:18:33,900  -->  00:18:35,670
So this should've been a debug, I copy and pasted
332

332

00:18:35,670  -->  00:18:37,760
it from my notes and it was an info there.
333

333

00:18:37,760  -->  00:18:40,210
And let's delete that and run it again.
334

334

00:18:40,210  -->  00:18:43,220
Just for you to look at what's happening there.
335

335

00:18:50,690  -->  00:18:51,740
And there we have it.
336

336

00:18:55,776  -->  00:18:58,330
Then we have our logs and as you can see
337

337

00:18:58,330  -->  00:19:01,220
when we only print info
338

338

00:19:01,220  -->  00:19:03,560
it's sort of very straightforward.
339

339

00:19:03,560  -->  00:19:06,610
When loading the books list, found the number of
340

340

00:19:06,610  -->  00:19:08,900
pages we're going through, then we found the best
341

341

00:19:08,900  -->  00:19:10,600
books by rating and then we found them by price
342

342

00:19:10,600  -->  00:19:13,140
and that was it, nothing else happened really.
343

343

00:19:14,210  -->  00:19:16,610
And I'm sure there are improvements that can be made
344

344

00:19:16,610  -->  00:19:19,760
to this, you'll want to log warning messages
345

345

00:19:19,760  -->  00:19:22,430
in moments when you think you might get warnings.
346

346

00:19:22,430  -->  00:19:24,970
Like if you are on a try except block.
347

347

00:19:24,970  -->  00:19:26,960
In the except block you'll probably want to log
348

348

00:19:26,960  -->  00:19:29,810
some sort of warning or error to tell you that
349

349

00:19:29,810  -->  00:19:33,260
there was an error that happened here but you caught it.
350

350

00:19:33,260  -->  00:19:34,620
And so forth.
351

351

00:19:34,620  -->  00:19:38,030
And of course in some cases you cannot deal with an error
352

352

00:19:38,030  -->  00:19:42,200
because the error happened and your programme cannot continue
353

353

00:19:42,200  -->  00:19:44,670
and in those cases you should log a critical error.
354

354

00:19:44,670  -->  00:19:47,790
Critical message to say the programme crashed at this point.
355

355

00:19:47,790  -->  00:19:49,340
And you should know about that.
356

356

00:19:50,306  -->  00:19:54,300
Debug and info messages not so useful in your logs,
357

357

00:19:54,300  -->  00:19:57,590
so normally you would be on warn and above
358

358

00:19:57,590  -->  00:20:02,070
when your application is running for users in the wild.
359

359

00:20:02,070  -->  00:20:05,700
When you're developing debug and info can be very useful.
360

360

00:20:06,790  -->  00:20:08,170
Alright that's it for this video, I just wanted
361

361

00:20:08,170  -->  00:20:11,810
to show you really quick how to get logging
362

362

00:20:11,810  -->  00:20:14,680
into your application, again, give you a few examples
363

363

00:20:14,680  -->  00:20:17,760
of how the logging module works and how you can
364

364

00:20:17,760  -->  00:20:20,520
just put it in anywhere you want and then
365

365

00:20:20,520  -->  00:20:23,070
some examples of looking at your logs and what
366

366

00:20:23,070  -->  00:20:25,133
sort of things you can find.
367

367

00:20:25,133  -->  00:20:28,540
And that's it for this video, I'll see you on the next one.
