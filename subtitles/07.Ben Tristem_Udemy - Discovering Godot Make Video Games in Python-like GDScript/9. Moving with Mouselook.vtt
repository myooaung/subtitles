WEBVTT
1
00:00:05.080 --> 00:00:10.150
Welcome back delightful people in this video with a built on the theory that we had in the last one

2
00:00:10.210 --> 00:00:11.580
and we're actually getting it moving.

3
00:00:11.580 --> 00:00:13.980
Working with mouse look has a decent amount of code here.

4
00:00:13.990 --> 00:00:17.890
But if we keep it nice and organized I think it can be easier to follow.

5
00:00:18.160 --> 00:00:19.730
So what do we actually need to do.

6
00:00:19.750 --> 00:00:21.160
Well the first is pretty simple.

7
00:00:21.160 --> 00:00:24.310
What we need is to add a jump key that's easy enough.

8
00:00:24.310 --> 00:00:29.790
The second is to find a way of separating Judy and 3D movement information.

9
00:00:29.980 --> 00:00:33.320
Then we're going to apply to any movement to the camera transform.

10
00:00:33.340 --> 00:00:38.980
What I mean by that is when we press a key We're going to figure out where should I be moving it really

11
00:00:39.190 --> 00:00:40.540
relative to the camera.

12
00:00:40.580 --> 00:00:43.520
That was quite hard to say and I don't know why.

13
00:00:43.900 --> 00:00:49.130
Finally we're going to get the vertical movement going to figure out jumping in gravity might even polish

14
00:00:49.130 --> 00:00:52.370
this up by using an acceleration deceleration we shouldn't take on.

15
00:00:52.700 --> 00:00:55.380
Okay so let's get into the game.

16
00:00:55.840 --> 00:00:59.970
We're going to spend our time in our script someone to put this in distraction free mode.

17
00:01:00.010 --> 00:01:02.870
And I need to move some things around.

18
00:01:02.890 --> 00:01:07.780
Right now we've got this variable here motion which is kind of a catch all but I'm going to separate

19
00:01:07.780 --> 00:01:10.720
out velocity and direction because they're different things.

20
00:01:10.720 --> 00:01:15.090
So let's get rid of motion entirely and going to call this velocity.

21
00:01:15.290 --> 00:01:20.920
Then I make a new one and I call it direction.

22
00:01:21.010 --> 00:01:25.810
You'll notice I'm not actually calling it direction I'm calling it a bell but these mean velocity in

23
00:01:25.810 --> 00:01:28.180
direction if you want right velocity and direction.

24
00:01:28.300 --> 00:01:33.130
I'm also going to need a few movement constants because if I'm going to be adding things like acceleration

25
00:01:33.160 --> 00:01:41.000
deceleration gravity jumps to be there should go here so let's do that as a constant for gravity.

26
00:01:41.380 --> 00:01:45.360
And this is going to be a negative value as it were moving down in the y axis right.

27
00:01:45.370 --> 00:01:48.560
So let's say for now negative 45.

28
00:01:48.640 --> 00:01:52.910
Trial and error show me that with this system this is a good value that we can fix this later.

29
00:01:52.910 --> 00:01:57.430
Now we've already got an up value but I'm going to put this here with my movement variables because

30
00:01:57.430 --> 00:02:03.760
it feels like it's the right place for it in fact let's give this a heading this is movement costs.

31
00:02:05.190 --> 00:02:10.460
Let's put a space fair and spot Constance correctly just so we're very clear what's happening.

32
00:02:10.510 --> 00:02:11.920
We should also do something with speed.

33
00:02:11.920 --> 00:02:15.100
In fact I'm not going to using speed I mean using max speed.

34
00:02:15.100 --> 00:02:17.740
We're going to be using some acceleration and deceleration.

35
00:02:17.890 --> 00:02:27.300
So let's move this down here and call this max speed and our maximum speed might see 24.

36
00:02:27.300 --> 00:02:32.900
Now again we can fix these when we need to and we can reshuffle these as well as we go.

37
00:02:33.100 --> 00:02:33.860
Couple more things on it.

38
00:02:33.910 --> 00:02:36.470
I've been talking about acceleration and deceleration.

39
00:02:36.550 --> 00:02:37.390
So let's put those in.

40
00:02:37.390 --> 00:02:41.440
These are constants right we're going to and this is how much we're going accelerate by how much would

41
00:02:41.450 --> 00:02:44.430
be a decelerate by his acceleration.

42
00:02:45.040 --> 00:02:49.610
Let's call that five and a deceleration.

43
00:02:49.760 --> 00:02:53.640
Let us go and get a call that 10.

44
00:02:53.900 --> 00:02:56.670
I got a lot up my.

45
00:02:56.950 --> 00:02:57.730
It's not a.

46
00:02:57.730 --> 00:02:59.540
Cos it's not much a pang.

47
00:02:59.560 --> 00:03:05.290
I got quite a lot of this information or the structure from the demos that I was talking about I have

48
00:03:05.290 --> 00:03:11.590
made some serious tweaks so if you can see these looking the same the official godso examples and tutorials

49
00:03:11.770 --> 00:03:15.480
have a lot of this information including excel and DSL.

50
00:03:17.390 --> 00:03:21.350
DSL isn't really a thing this should be DSL shouldn't decelerate.

51
00:03:21.440 --> 00:03:27.360
One more concern I know going to need is jump speed and finality call that 15.

52
00:03:28.100 --> 00:03:31.460
Let's put gravity and just speak close to each other just so I can see them.

53
00:03:31.460 --> 00:03:34.250
So speed and acceleration are all connected.

54
00:03:34.460 --> 00:03:36.410
I'm now reasonably happy with these constants.

55
00:03:36.440 --> 00:03:37.830
Let's get coding.

56
00:03:38.090 --> 00:03:39.400
We are going to.

57
00:03:40.190 --> 00:03:46.610
Look at our move function and all of this is going to be pulled out because we need to do is set is

58
00:03:46.610 --> 00:03:50.510
separate out the two dimensional movement and we're not using motion at all.

59
00:03:50.540 --> 00:03:53.460
Instead let's make a new variable.

60
00:03:53.500 --> 00:04:02.360
We call this movement's direction movement direction is which directions the player wants to move in

61
00:04:02.510 --> 00:04:06.650
and we know this because of this forward back left right and in a moment space.

62
00:04:06.720 --> 00:04:07.280
Right.

63
00:04:07.340 --> 00:04:09.780
And that's going to be a vector too.

64
00:04:10.100 --> 00:04:11.400
And that's key.

65
00:04:11.420 --> 00:04:13.500
This is a vector to not a vector 3.

66
00:04:13.520 --> 00:04:19.220
And before I forget let's actually put in an input mapping that jumps into project settings input map

67
00:04:19.250 --> 00:04:21.400
as I make a new thing called Jump.

68
00:04:21.490 --> 00:04:22.680
Have been capitalizing these.

69
00:04:22.700 --> 00:04:24.170
Okay.

70
00:04:25.070 --> 00:04:27.440
I mean the key for space.

71
00:04:28.340 --> 00:04:31.500
Right now this is a vector too but where am I going to get the to front.

72
00:04:31.530 --> 00:04:35.850
I'm going to make a new functionless call that gets to be mint.

73
00:04:36.240 --> 00:04:39.390
And before I forget it I'll put it right here.

74
00:04:39.670 --> 00:04:44.710
We're going to call it get chimley movements.

75
00:04:45.600 --> 00:04:48.570
So I now know that this is a function that I have to write.

76
00:04:48.600 --> 00:04:51.420
I'm going to be getting the 2d movement.

77
00:04:51.480 --> 00:04:59.990
I also need to get the camera right so make a variable called camera x form X form is short for transform.

78
00:05:00.210 --> 00:05:01.020
What is that.

79
00:05:01.020 --> 00:05:09.220
Well it's camera up dot get global transform.

80
00:05:09.510 --> 00:05:12.290
So we now have the camera transform.

81
00:05:12.910 --> 00:05:14.730
Okay let's do some work with this.

82
00:05:14.730 --> 00:05:23.630
What we need is the direction is going to be this camera transform.

83
00:05:24.210 --> 00:05:26.460
And what do we need and it's only the basis.

84
00:05:27.050 --> 00:05:27.320
Great.

85
00:05:27.360 --> 00:05:28.560
So I have the basis of it.

86
00:05:28.620 --> 00:05:29.830
I don't need all the basis.

87
00:05:29.940 --> 00:05:32.760
I just want a standard access right.

88
00:05:32.760 --> 00:05:39.030
I want the forward backward motion the forward backward motion on this axis is Z right in three dimensions

89
00:05:39.210 --> 00:05:41.750
towards and away from the screen of the z axis.

90
00:05:42.090 --> 00:05:47.700
And I should probably normalize this as you might remember from kudi Kick about if we don't normalize

91
00:05:47.700 --> 00:05:50.940
this when we move diagonally going to move faster because Pythagoras.

92
00:05:51.000 --> 00:05:53.630
Now I don't set this to be the carrier transform.

93
00:05:53.640 --> 00:05:55.430
I want to change it.

94
00:05:55.450 --> 00:05:57.520
I don't want to add plus.

95
00:05:57.600 --> 00:06:04.830
And the reason why is if I'm looking to the left and moving to the right I need to subtract it so when

96
00:06:04.830 --> 00:06:11.820
to subtract the camera transform basis Z normalized and we need some change in it by the movements to

97
00:06:11.820 --> 00:06:12.290
do that.

98
00:06:12.300 --> 00:06:16.460
Now multiply it in movement under score direction.

99
00:06:16.560 --> 00:06:17.160
Why.

100
00:06:17.440 --> 00:06:17.920
OK.

101
00:06:18.090 --> 00:06:20.640
There's quite a lot happening here.

102
00:06:20.760 --> 00:06:23.390
All of this is going to live in movement direction.

103
00:06:23.390 --> 00:06:29.730
So what's happening is when I press forward take that why valued because this is now a two dimensional

104
00:06:30.090 --> 00:06:32.400
transform like this isn't 2D access.

105
00:06:32.430 --> 00:06:34.240
So why is up down.

106
00:06:34.530 --> 00:06:36.360
So as I move up.

107
00:06:37.020 --> 00:06:38.850
Get the camera transform.

108
00:06:40.350 --> 00:06:47.430
Get the basis on the z axis normalize it and multiply it by this value with a change motion out in the

109
00:06:47.430 --> 00:06:48.450
moment.

110
00:06:48.780 --> 00:06:54.180
So it feels a little complicated a little magical at first but it is logical it does make sense.

111
00:06:54.360 --> 00:06:55.890
So that's our why access.

112
00:06:55.890 --> 00:06:57.500
Let's do the same thing on the x axis.

113
00:06:57.510 --> 00:07:00.890
So direction negative equal.

114
00:07:01.020 --> 00:07:04.560
And because only thing negative equal not equal I'm not replacing this value.

115
00:07:04.560 --> 00:07:12.180
I'm altering it caser camera transform dot basis and this is the x axis.

116
00:07:12.470 --> 00:07:14.530
A sis can type.

117
00:07:14.600 --> 00:07:15.030
There.

118
00:07:15.180 --> 00:07:15.760
X.

119
00:07:15.810 --> 00:07:20.750
Dot normalize normalize not normalize.

120
00:07:21.680 --> 00:07:25.270
Multiplied by movement underscored direction.

121
00:07:25.270 --> 00:07:26.490
Dot X..

122
00:07:26.520 --> 00:07:27.190
Alright.

123
00:07:27.810 --> 00:07:35.970
So what's going to happen is we're gonna make this direction change by the basis multiplied by where

124
00:07:35.970 --> 00:07:36.960
we're trying to move.

125
00:07:36.960 --> 00:07:38.670
So what we're doing is are altering this value.

126
00:07:38.670 --> 00:07:40.270
We're doing it twice.

127
00:07:40.290 --> 00:07:41.350
We do it on this axis.

128
00:07:41.400 --> 00:07:45.420
And this axis you notice we're not doing the y axis which is great.

129
00:07:45.420 --> 00:07:46.290
This means I can move.

130
00:07:46.320 --> 00:07:49.360
I can look up and down anyone actually change that movement.

131
00:07:49.370 --> 00:07:54.690
Now all of these motions I'm going to have to change to make that simple let's just move them for now

132
00:07:54.700 --> 00:07:57.040
they are going to live in.

133
00:07:57.090 --> 00:07:59.450
Where do you go get to demat movement.

134
00:07:59.460 --> 00:08:02.850
So just put me in copy paste them if you're happy with that.

135
00:08:02.880 --> 00:08:06.280
Let's just make two spaces between functions very nice.

136
00:08:06.330 --> 00:08:10.200
So this is going to be need need to be change because right now motion doesn't exist.

137
00:08:10.200 --> 00:08:11.520
It's not a real thing.

138
00:08:11.550 --> 00:08:15.210
Now I need to start passing these values on and make new functions.

139
00:08:15.210 --> 00:08:21.150
The first thing to do is I need a function called move quickly and I'm in a set direction equals move

140
00:08:21.810 --> 00:08:23.520
vertically.

141
00:08:23.520 --> 00:08:28.860
Now you'll notice that I've just altered direction here and here I am setting it and that could be an

142
00:08:28.860 --> 00:08:29.700
issue.

143
00:08:29.700 --> 00:08:32.100
Now I do want this to be a new value.

144
00:08:32.190 --> 00:08:37.050
So what do we do on a pass direction into it and then return this value back.

145
00:08:37.170 --> 00:08:38.600
So it's going to be the new value.

146
00:08:38.610 --> 00:08:41.590
I also need to give it Delta because we need the delta in there.

147
00:08:41.610 --> 00:08:47.910
Now we have all the directions that's put in some velocity and our velocity is going to up their losses.

148
00:08:47.920 --> 00:08:51.660
There it is is going to need its own new function.

149
00:08:51.660 --> 00:08:53.550
Here we want an accelerate function.

150
00:08:53.560 --> 00:08:57.290
Right direction is which way are moving velocities how fast.

151
00:08:57.330 --> 00:09:00.930
So velocity is going to be this new horizontal acceleration.

152
00:09:01.400 --> 00:09:05.790
Excel will write it like that because acceleration is hutzpah.

153
00:09:05.940 --> 00:09:10.370
And again I'm going to pass in a direction and Delta.

154
00:09:10.380 --> 00:09:11.910
We have quite a lot going on here.

155
00:09:11.910 --> 00:09:13.880
Going to be making some new functions.

156
00:09:13.920 --> 00:09:18.600
We're almost done with this section and all they need to do now is change this motion because this motion

157
00:09:18.840 --> 00:09:19.710
no longer exists.

158
00:09:19.710 --> 00:09:22.480
There is no very awkward motion so this is going to velocity.

159
00:09:22.560 --> 00:09:22.880
Right.

160
00:09:22.980 --> 00:09:29.230
And what's the velocity is the horizontal acceleration which is going to do something with this direction.

161
00:09:29.460 --> 00:09:32.790
And Delta we now have some new functions we need to make.

162
00:09:32.790 --> 00:09:37.920
But before we do that I'd like to challenge you to fix get to the movement right now.

163
00:09:37.920 --> 00:09:39.570
It's not going to work right.

164
00:09:39.570 --> 00:09:47.730
So what I'd like to do is change this new function get to the movement to return a to d movement vector

165
00:09:47.790 --> 00:09:50.030
to the main move function and just to make it really simple for you.

166
00:09:50.030 --> 00:09:52.300
I'm going to start you off by going variable.

167
00:09:52.650 --> 00:09:56.410
What should we call this as call this movement vector.

168
00:09:56.820 --> 00:09:58.250
And it's a vector hoodie.

169
00:09:58.380 --> 00:09:58.680
Right.

170
00:09:58.680 --> 00:10:02.140
So just to just to make that really simple for me.

171
00:10:02.370 --> 00:10:07.220
What I'd like you to do is return the value Movent factor to the main move function.

172
00:10:07.230 --> 00:10:11.510
Now this is going to be altered depending on what's happening with the.

173
00:10:11.570 --> 00:10:13.820
Going to use all those inputs that we've just moved in there.

174
00:10:13.890 --> 00:10:16.470
And here's a tip you might want to normalize this.

175
00:10:16.470 --> 00:10:17.460
And I've written normalize.

176
00:10:17.460 --> 00:10:22.370
But what I mean is I had the normalized function to pause the video give that a shot.

177
00:10:22.380 --> 00:10:24.410
When you come back I'll show you my solution.

178
00:10:28.650 --> 00:10:30.150
And welcome back.

179
00:10:30.830 --> 00:10:33.180
Okay so most of this is fine.

180
00:10:33.230 --> 00:10:33.790
Right.

181
00:10:34.020 --> 00:10:37.570
What I do want to do is change motion and I'm going to use movement vector.

182
00:10:37.610 --> 00:10:38.890
I'm going to copy and paste.

183
00:10:38.900 --> 00:10:43.020
So let's copy and paste that.

184
00:10:43.550 --> 00:10:44.510
So far so good.

185
00:10:44.510 --> 00:10:46.780
We've now got two values.

186
00:10:46.790 --> 00:10:50.720
However I can't use z z won't work in vector 2.

187
00:10:50.720 --> 00:10:57.840
There are only two vectors in this array so I need a y k so why is my 4 up and down.

188
00:10:57.870 --> 00:11:03.420
Or in this case forward and backwards and X is my left and right my horizontal.

189
00:11:03.590 --> 00:11:06.550
One more thing I need to do is actually return this value.

190
00:11:06.590 --> 00:11:08.380
Do that and we've done it a couple times.

191
00:11:08.660 --> 00:11:09.830
I'm just going to go return.

192
00:11:09.830 --> 00:11:10.760
Let's scroll down.

193
00:11:10.790 --> 00:11:17.610
It's maximum doing turn movement vector and I want is normalized.

194
00:11:17.750 --> 00:11:19.240
Why are we normalizing this.

195
00:11:19.280 --> 00:11:20.760
Because as we've seen before.

196
00:11:20.870 --> 00:11:27.830
If I move forward and right we're not going to get a simple value of one we're going to get a sample

197
00:11:27.830 --> 00:11:33.980
of one point something one point for I think it is by using normalize we bring that back down to one

198
00:11:33.980 --> 00:11:36.320
that's going to give us a nice consistent movement rate.

199
00:11:36.350 --> 00:11:40.090
So what we need to do just to be very clear what's happening here.

200
00:11:40.100 --> 00:11:46.220
I know I'm doing quite a lot of code in this video is thank you.

201
00:11:46.310 --> 00:11:48.860
We have movement vector set in motion.

202
00:11:48.920 --> 00:11:53.740
We have x and y instead of x and z and we are returning the value.

203
00:11:53.810 --> 00:11:57.420
So we get to call this function and send this back.

204
00:11:57.430 --> 00:12:03.250
Now we're asking for movement direction and what we're returning is a variable called movement vector.

205
00:12:03.410 --> 00:12:05.920
Except it's okay we're not returning.

206
00:12:05.930 --> 00:12:11.240
A variable called movement vector we're returning for value it doesn't matter what the function get

207
00:12:11.230 --> 00:12:13.240
to see movement calls it.

208
00:12:13.280 --> 00:12:19.720
What matters is what the value of that is and move is now going to call movement direction.

209
00:12:19.850 --> 00:12:25.070
Whatever this value is so it's now called movement direction which is great because now when I move

210
00:12:25.220 --> 00:12:32.510
on by say D it's going to use these values that we now have and put to the camera tracks.

211
00:12:33.290 --> 00:12:36.230
Okay so how are we going to move vertically What is it.

212
00:12:36.230 --> 00:12:40.090
Well this handles jumping and gravity which is why I'm going to need some deltora in here.

213
00:12:40.640 --> 00:12:50.580
Let's put this above an inmate right here so function and calling it do do move vertically.

214
00:12:50.680 --> 00:12:51.540
Perfect.

215
00:12:54.450 --> 00:12:59.420
And this gets to values right direction and only gets Delta than a colon.

216
00:12:59.780 --> 00:13:04.120
Okay I need to isolate the uptown and the up down is the y axis here right.

217
00:13:04.180 --> 00:13:05.550
Because we work in three dimensions.

218
00:13:05.550 --> 00:13:10.560
Get back to a three dimensional value and how do we know because velocity is a vector.

219
00:13:10.560 --> 00:13:15.000
3 Our Velocity on the y axis is plus equal.

220
00:13:15.020 --> 00:13:19.110
I'm going to be adding gravity times Delta.

221
00:13:19.250 --> 00:13:22.700
Let's program in a jump if input.

222
00:13:22.800 --> 00:13:25.860
Is action just pressed.

223
00:13:25.950 --> 00:13:29.920
Great and I want to jump.

224
00:13:30.480 --> 00:13:37.980
So if I if play is just press jump and we're on the floor is on the floor is on floor is going to work

225
00:13:37.980 --> 00:13:45.100
because with defined up in our move and slide which is due to right here you're on the floor and press

226
00:13:45.120 --> 00:13:45.690
jump.

227
00:13:45.720 --> 00:13:47.830
Then I'm going to reset vostock.

228
00:13:47.850 --> 00:13:48.450
I've lost it all.

229
00:13:48.460 --> 00:13:50.820
Why is going to be jumpseat.

230
00:13:50.910 --> 00:13:53.280
Whatever this value is whatever the why.

231
00:13:53.310 --> 00:13:59.520
Part of the vector 3 known as velocity is it's now jump speed right in with set jumps speed at the moment

232
00:13:59.730 --> 00:14:00.890
to 15.

233
00:14:00.890 --> 00:14:03.460
So you're going to lose 15 up in the air.

234
00:14:03.630 --> 00:14:06.600
Alright so what if that isn't the case.

235
00:14:07.010 --> 00:14:12.450
Elf is on floor.

236
00:14:13.260 --> 00:14:15.480
Well Don why he zero.

237
00:14:15.510 --> 00:14:17.410
So let's see what's going to be happening here.

238
00:14:17.880 --> 00:14:22.120
Every frame set the all Y axis of velocity.

239
00:14:22.120 --> 00:14:25.890
So might be down to velocity by gravity times delta.

240
00:14:26.010 --> 00:14:29.920
Okay now we're already applying Delta in moving slide right.

241
00:14:29.940 --> 00:14:32.360
It's built in to moving the slide right.

242
00:14:32.580 --> 00:14:38.010
So what we're actually doing is gravity times Delta times Delta which is gravity times Delta squared

243
00:14:38.520 --> 00:14:39.210
gravity times.

244
00:14:39.210 --> 00:14:41.330
Time squared is an acceleration.

245
00:14:41.340 --> 00:14:43.460
So going to accelerate down.

246
00:14:43.530 --> 00:14:50.820
However if I'm on the floor and if pressed jump set there's value to positive 15 and if I'm just on

247
00:14:50.820 --> 00:14:53.570
the floor and I'm not pressing jump set the value to zero.

248
00:14:53.580 --> 00:14:56.510
So this gravity will only apply if I'm in the air.

249
00:14:56.520 --> 00:15:03.630
Now remember we got here by setting direction to be move vertically with direction and Delta coming

250
00:15:03.630 --> 00:15:04.260
in.

251
00:15:04.770 --> 00:15:07.240
I need to do a couple of tweaks right.

252
00:15:07.590 --> 00:15:11.570
I want direction dot y to be 0.

253
00:15:12.780 --> 00:15:18.580
And I want to normalize it against a direction towards direction not normalized.

254
00:15:19.070 --> 00:15:24.680
Quick recap when we check for move vertically every frame we're taking this direction which is going

255
00:15:24.680 --> 00:15:28.930
to be which whale moving on the x and y with passing in direction.

256
00:15:28.950 --> 00:15:32.520
Doctor we are changing velocity.

257
00:15:32.670 --> 00:15:34.440
We're applying gravity if we need to.

258
00:15:34.520 --> 00:15:39.260
We're jumping if we done otherwise we're setting velocity 0 and then just making sure that the direction

259
00:15:39.260 --> 00:15:40.790
on the y axis doesn't change.

260
00:15:40.790 --> 00:15:44.780
So the mouse isn't affecting where we're moving and we're returning that value.

261
00:15:45.170 --> 00:15:49.430
We don't have to return velocity because this is the first time we are using it right it's being set

262
00:15:49.430 --> 00:15:54.740
up here as an instance variable and it's not being changed in get to the movement as it shouldn't be.

263
00:15:55.010 --> 00:15:58.850
While I'm here I've just noticed moving the slide I changed motion to the losty.

264
00:15:58.850 --> 00:15:59.440
Fantastic.

265
00:15:59.440 --> 00:16:02.010
What it didn't do is get rid of speed.

266
00:16:02.180 --> 00:16:04.450
Were not using inning of which you knew velocity.

267
00:16:04.670 --> 00:16:09.590
Now we just need to worry about horizontal acceleration slowing down and speeding up and this one is

268
00:16:10.250 --> 00:16:10.970
not too difficult.

269
00:16:10.970 --> 00:16:16.690
So let's go in here function and what we call this I forgot what I called it.

270
00:16:16.730 --> 00:16:17.380
Excel.

271
00:16:17.390 --> 00:16:18.580
Perfect.

272
00:16:21.440 --> 00:16:27.560
Function horizontal acceleration which is going to pass the argument direction and Delta again I need

273
00:16:27.560 --> 00:16:35.090
to separate out the 2d That's make a new variable and I'm dealing with speed and I'm dealing with acceleration.

274
00:16:35.090 --> 00:16:40.580
So any of the velocities I would call the get velocity to the energy have set that as the velocity and

275
00:16:40.650 --> 00:16:43.610
when tweak it now because this is 2D.

276
00:16:43.610 --> 00:16:47.370
I'm going to zero out the losty Scott to day.

277
00:16:47.630 --> 00:16:52.890
Why we call 0 0 out the up and down information and I don't care about that that's going to stay that

278
00:16:52.910 --> 00:16:58.370
is because then I can add the velocity to the information back to velocity.

279
00:16:58.430 --> 00:16:59.680
Let's play this capital D.

280
00:16:59.680 --> 00:17:01.010
I can see on doing.

281
00:17:01.490 --> 00:17:03.190
And it's not going to break everything.

282
00:17:04.310 --> 00:17:05.030
OK.

283
00:17:05.360 --> 00:17:06.350
New variable.

284
00:17:06.350 --> 00:17:09.710
I'm going to call this Target.

285
00:17:09.760 --> 00:17:13.330
Target is going to be what how fast do I want to be going.

286
00:17:13.360 --> 00:17:13.560
Right.

287
00:17:13.570 --> 00:17:20.020
Which direction we're going to target is going to be itself tyne's Equals.

288
00:17:20.050 --> 00:17:21.290
There's a new one we have used before.

289
00:17:21.340 --> 00:17:23.640
Max speed go.

290
00:17:23.890 --> 00:17:25.480
So what our Max speed.

291
00:17:25.480 --> 00:17:26.780
That's what I'm going to be aiming for.

292
00:17:26.780 --> 00:17:33.740
So from going forward that's going to be a one effect negative one multiplied by the macspeech.

293
00:17:33.770 --> 00:17:36.170
I want to be heading in that direction to that amount.

294
00:17:36.270 --> 00:17:37.110
But I'm not there yet.

295
00:17:37.110 --> 00:17:41.770
So what I need to do is to accelerate make a new variable again excel.

296
00:17:41.770 --> 00:17:45.260
And this is in lower case this isn't the same as the constant.

297
00:17:45.280 --> 00:17:50.770
It's not our acceleration rate it's our current acceleration and now any TV was a dot product which

298
00:17:50.770 --> 00:17:53.800
is kind of magical maths a little bit.

299
00:17:53.800 --> 00:17:58.870
But what I care about is what's the length of this vector was the length of velocity underscored to

300
00:17:58.870 --> 00:17:59.870
Dean.

301
00:18:00.170 --> 00:18:01.790
And is it greater than zero.

302
00:18:03.900 --> 00:18:10.220
If so my Excel variable is equal to my acceleration rate right.

303
00:18:10.330 --> 00:18:20.570
It's not my boobs it's my right leg or else it's not my Excel variable is equal to my deceleration rate.

304
00:18:20.580 --> 00:18:24.420
This is a really nice weight solution and I say this because I didn't come up with it this comes from

305
00:18:24.420 --> 00:18:28.050
the got documentation that got examples right on to make that very clear.

306
00:18:28.170 --> 00:18:29.760
This code is great.

307
00:18:29.760 --> 00:18:32.230
I had to tweak it so I could figure out what was going on with it.

308
00:18:32.250 --> 00:18:33.790
But it's lovely.

309
00:18:33.820 --> 00:18:37.520
Okay now we don't want this value to be magically up or down right.

310
00:18:37.590 --> 00:18:38.970
I don't want to go.

311
00:18:39.240 --> 00:18:42.600
I want to speed up or slow down to do that.

312
00:18:42.600 --> 00:18:46.450
We're gonna use a lot of velocity 2D.

313
00:18:46.890 --> 00:18:47.510
There it is.

314
00:18:48.490 --> 00:18:57.100
Eagles velocity to day not linear interpolate which is our lung function.

315
00:18:57.300 --> 00:19:04.350
And what are we doing or we're taking it target and the next value is acceleration by Delta because

316
00:19:04.350 --> 00:19:07.030
we are accelerating this isn't a constant speed.

317
00:19:07.180 --> 00:19:08.310
It's a linae interpolate.

318
00:19:08.310 --> 00:19:09.560
We've seen the lap function perform.

319
00:19:09.570 --> 00:19:14.850
But just to remind you what's on vector so effective 3 right what value were changing and how much we

320
00:19:14.850 --> 00:19:15.450
change it by.

321
00:19:15.450 --> 00:19:22.100
Well we're changing our target which is where do we want to be moving in a 2D plane.

322
00:19:22.140 --> 00:19:24.290
And we only have two year mission here.

323
00:19:24.630 --> 00:19:27.960
And then we're accelerating using acceleration times doctor.

324
00:19:27.960 --> 00:19:28.230
Right.

325
00:19:28.290 --> 00:19:30.680
So we accelerating Robert just moving at a flat rate.

326
00:19:30.820 --> 00:19:32.460
Okay so we have the Losey 2D.

327
00:19:32.460 --> 00:19:35.270
We need to put this into velocity and almost is velocity.

328
00:19:35.300 --> 00:19:42.790
Dot X equals velocity underscored two d legs and then the same thing with Z.

329
00:19:42.810 --> 00:19:45.350
And I'm not going to change the Y.

330
00:19:45.690 --> 00:19:50.860
So the Losey he doesn't care about the y axis so we're not going to change that.

331
00:19:51.000 --> 00:19:55.320
And if I've done everything correctly this is the moment of truth was done quite a lot of code that

332
00:19:55.320 --> 00:19:57.300
Checking have me ever pressed play.

333
00:19:57.300 --> 00:20:01.400
I'm going to crash because I've forgotten something incredibly silly.

334
00:20:01.430 --> 00:20:04.690
I make sure the error message I want to find not found Delta.

335
00:20:04.860 --> 00:20:08.490
But wait and you've written Delta everywhere it's here it's here it's at you know I haven't written

336
00:20:08.490 --> 00:20:09.730
it in move.

337
00:20:09.750 --> 00:20:15.080
I didn't pass the delta function to move because I am a mullet.

338
00:20:15.080 --> 00:20:15.970
Am I a yarn.

339
00:20:15.990 --> 00:20:17.250
Or am I a Muppet.

340
00:20:17.250 --> 00:20:19.680
If I'm a Muppet I'm a very manly Muppet.

341
00:20:19.680 --> 00:20:25.490
Second thing I copy and pasted a bunch of variables over existing variables and I didn't check them

342
00:20:25.500 --> 00:20:27.740
so that needs to be like this.

343
00:20:28.810 --> 00:20:35.230
Third thing I went to called this or C to D in caps except here where it didn't notice what I was typing

344
00:20:35.230 --> 00:20:36.720
so let's change that.

345
00:20:36.730 --> 00:20:42.260
And thirdly I need to remember just because I haven't touched anime doesn't mean I'll work.

346
00:20:42.400 --> 00:20:44.500
Motion length will no longer work.

347
00:20:44.500 --> 00:20:47.370
Instead I need velocity like a veiled length.

348
00:20:47.380 --> 00:20:50.430
Now if I press play we can look around.

349
00:20:50.430 --> 00:20:52.430
I can press forward moving backwards.

350
00:20:52.480 --> 00:20:53.270
Oh dear.

351
00:20:53.290 --> 00:20:55.620
Oh either of us okay.

352
00:20:56.230 --> 00:21:00.100
This is the problem when Yan thinks he understands maths Sometimes I make silly mistakes.

353
00:21:00.100 --> 00:21:01.760
This actually shouldn't be a negative call.

354
00:21:01.780 --> 00:21:04.270
It should be a plus for meshwork fine.

355
00:21:04.500 --> 00:21:05.300
Pressplay.

356
00:21:07.220 --> 00:21:07.720
Forward.

357
00:21:07.730 --> 00:21:09.160
I can go back and I left.

358
00:21:09.170 --> 00:21:12.620
I can go right and then when I press forward in this direction it'll change.

359
00:21:12.620 --> 00:21:17.270
Now what I haven't done is stop myself from moving right here in the move function.

360
00:21:17.660 --> 00:21:26.710
Just after I declare my variables I'm sure the reset direction to 0 direction is vector 3 0 0 0 0.

361
00:21:27.080 --> 00:21:30.920
Now I'll probably have to tweak some values but I can now stop.

362
00:21:30.950 --> 00:21:33.890
I say tweaks in values because look the animation.

363
00:21:34.580 --> 00:21:35.880
Is it quite there.

364
00:21:36.020 --> 00:21:42.770
What's happening here is the blend Idol amount which is right here is too small some a change at zero

365
00:21:42.770 --> 00:21:45.520
point to see how that works.

366
00:21:47.430 --> 00:21:48.240
Better.

367
00:21:51.140 --> 00:21:51.940
And care.

368
00:21:52.280 --> 00:21:56.410
And I think my acceleration could do with my deceleration could do with tweaking so much as tweak that

369
00:21:56.420 --> 00:21:56.780
real quick.

370
00:21:56.780 --> 00:22:01.480
My decelerations cardio 10 let's matel of the 15 you know slow down much faster you accelerate.

371
00:22:03.840 --> 00:22:06.850
So a basic acceleration and basic deceleration.

372
00:22:06.900 --> 00:22:11.520
Now we could keep tweaking this idle value so my blender idle.

373
00:22:11.520 --> 00:22:14.250
Is there a point to maybe zero point five.

374
00:22:14.640 --> 00:22:17.840
So you're actually moving quite a lot for it to do anything.

375
00:22:18.450 --> 00:22:19.890
It's a little jerky though isn't it.

376
00:22:19.890 --> 00:22:22.780
So let's just change that to zero point two five.

377
00:22:25.340 --> 00:22:26.200
But look at what we have.

378
00:22:26.210 --> 00:22:29.080
I can move relative to the mouse.

379
00:22:29.090 --> 00:22:39.020
Here I go moving around the desk the giant desk and I can jump over the desk which is still the same

380
00:22:39.020 --> 00:22:40.570
colour as the floor because reasons.

381
00:22:40.580 --> 00:22:41.760
But I can do it.

382
00:22:41.990 --> 00:22:46.700
And if I'm on the desk I can jump because the desk counts floor and from the floor I can jump but I

383
00:22:46.700 --> 00:22:47.980
can't double jump.

384
00:22:48.020 --> 00:22:52.910
We have three mouse movement and some of it might feel a little complicated.

385
00:22:52.910 --> 00:22:55.910
Don't be afraid to go through this again or to ask questions.

386
00:22:55.910 --> 00:23:02.650
But look in this video we've gotten a basis from a transform we've separated to see in 3D.

387
00:23:02.810 --> 00:23:06.620
And we are now moving with mouse like quite a lot going on in this video.

388
00:23:06.620 --> 00:23:08.180
So please share experiences.

389
00:23:08.180 --> 00:23:09.640
Do you have a better solution.

390
00:23:09.650 --> 00:23:10.980
Do you have better variable names.

391
00:23:11.000 --> 00:23:14.140
Did you spot all those mistakes I made and not make them yourself.

392
00:23:14.180 --> 00:23:15.830
I'd love to hear how you're getting on.

393
00:23:15.980 --> 00:23:18.950
And meanwhile excellent work and I'll see you in the next few years.
