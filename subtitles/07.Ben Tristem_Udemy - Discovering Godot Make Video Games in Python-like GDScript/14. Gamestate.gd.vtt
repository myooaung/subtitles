WEBVTT
1
00:00:04.880 --> 00:00:09.650
Hello again you Gloria's got two people in this video all talk about the game state G.D. will make a

2
00:00:09.650 --> 00:00:15.980
brand new script put it right at the top of our level and have it manage the game how why are we doing

3
00:00:15.980 --> 00:00:16.700
this.

4
00:00:16.730 --> 00:00:20.930
Well we're doing this because of something called the Single Responsibility Principle and I've mentioned

5
00:00:20.930 --> 00:00:23.570
this briefly in Looney lips but it goes like this.

6
00:00:23.570 --> 00:00:26.680
A class should only have one reason to change.

7
00:00:26.750 --> 00:00:30.890
This is Robert C. Martin in his article principles of object oriented design which is quite hard to

8
00:00:30.890 --> 00:00:31.710
say.

9
00:00:31.850 --> 00:00:32.570
What does this mean.

10
00:00:32.570 --> 00:00:36.110
It means every script every node should do one thing.

11
00:00:36.110 --> 00:00:37.970
It should only care about the thing it does.

12
00:00:37.970 --> 00:00:40.960
And it should just do one thing at the moment.

13
00:00:41.050 --> 00:00:45.800
Bunnies doing multiple things and child I mean I go to the bunny script right.

14
00:00:45.800 --> 00:00:51.050
We have all these things here apply gravity jump move animate and unhip boost.

15
00:00:51.110 --> 00:00:53.750
All of these relate to movement which makes sense.

16
00:00:53.750 --> 00:00:58.560
Right we have a play a script where the player controls the movement the control Bunny but we've also

17
00:00:58.560 --> 00:00:59.860
got end game and hurt.

18
00:00:59.870 --> 00:01:01.860
And these are about the rules of the game.

19
00:01:01.940 --> 00:01:05.060
I want to move end game and heart out of this script.

20
00:01:05.060 --> 00:01:07.150
This script is just coming about play a movement.

21
00:01:07.250 --> 00:01:11.520
So if we look at a map of what we're doing we've got a gang state script coming in here at Gamestop

22
00:01:11.600 --> 00:01:13.720
G.D. responsible for running the game.

23
00:01:13.810 --> 00:01:17.270
Players can read in the movement an animator is going to be for animating.

24
00:01:17.460 --> 00:01:22.700
So first thing to do is get into gotto and make a brand new script and open at level one.

25
00:01:22.700 --> 00:01:25.310
And I'm going to call this game state to GTA

26
00:01:28.870 --> 00:01:29.300
now.

27
00:01:29.360 --> 00:01:30.980
Why am I not calling Level 1.

28
00:01:30.980 --> 00:01:33.310
Well what if we want multiple levels right.

29
00:01:33.440 --> 00:01:36.990
Each level should have its own name but they're all gonna run from the same script.

30
00:01:37.580 --> 00:01:38.710
Let's create that.

31
00:01:38.720 --> 00:01:42.630
Doing this in levels like what's the levels that's fine as create this here.

32
00:01:43.110 --> 00:01:43.470
OK.

33
00:01:43.490 --> 00:01:45.830
First thing that games is going to track is the amount of.

34
00:01:45.860 --> 00:01:48.800
So lives equals three.

35
00:01:48.800 --> 00:01:50.710
Now I can move this out of here.

36
00:01:50.710 --> 00:01:54.300
Let's just delete it from the player script entirely and we complaints in a minute.

37
00:01:54.310 --> 00:01:54.530
Right.

38
00:01:54.530 --> 00:01:56.510
Because hut has lives in it.

39
00:01:56.540 --> 00:02:02.710
So I'm going to remove line 63 lives minus equals one that's not handled by the player anymore.

40
00:02:02.870 --> 00:02:05.690
And you know what let's comment out 64 and 65.

41
00:02:05.690 --> 00:02:11.540
If lines less than zero end game press control okay and comment that out why am i commenting not deleting

42
00:02:12.020 --> 00:02:16.220
because I need to just keep an eye on this and remind myself I haven't handled end game yet.

43
00:02:16.820 --> 00:02:18.670
All right let's make a function called hurt.

44
00:02:19.790 --> 00:02:24.720
And the first is going to happen when your heart is lives minus equals 1.

45
00:02:24.950 --> 00:02:30.910
And now I'm going to assume that the player is always going to be 1 level below level 1.

46
00:02:30.980 --> 00:02:31.420
Right.

47
00:02:31.430 --> 00:02:32.760
It's not going to be a grandchild.

48
00:02:32.760 --> 00:02:34.400
No one is going to be a direct child.

49
00:02:34.400 --> 00:02:44.460
So I think a player dot out and I'm going to put a comment in here if lives is less than zero.

50
00:02:44.490 --> 00:02:46.450
End of the game.

51
00:02:46.450 --> 00:02:47.290
Just remember to do it.

52
00:02:47.580 --> 00:02:47.840
OK.

53
00:02:47.850 --> 00:02:51.440
Before we go any further something interesting is happening here.

54
00:02:51.760 --> 00:02:56.100
Hazards is going to call hot on the player right.

55
00:02:56.110 --> 00:03:03.010
The only thing you can it can detect is the player but that means game states never going to have this

56
00:03:03.010 --> 00:03:03.500
function.

57
00:03:03.520 --> 00:03:10.030
So I need a way of all hazards or spikes and later all MP pieces to call this.

58
00:03:10.090 --> 00:03:17.640
So what we could do is we could go and connect every single hazard to game state.

59
00:03:17.680 --> 00:03:23.470
I don't really want to do that because if I have to do this manually it's going to get really messy.

60
00:03:23.480 --> 00:03:25.160
So what do we do instead.

61
00:03:25.370 --> 00:03:28.280
Well I'd like to introduce a concept called groups.

62
00:03:28.290 --> 00:03:29.830
Now we talked about this briefly before.

63
00:03:29.840 --> 00:03:31.560
But let me just bring up my Droid hat.

64
00:03:31.680 --> 00:03:35.430
Okay so we've been using signals and signals are wonderful.

65
00:03:35.480 --> 00:03:44.680
So we've got a note here and when something happens it sends a predetermined message to a predetermined

66
00:03:44.680 --> 00:03:47.760
recipient.

67
00:03:47.890 --> 00:03:53.980
So it's like sending a text message spending way too much time trying these things.

68
00:03:53.980 --> 00:04:00.760
However the key here is predetermined right we need to know where everything is and that it's there

69
00:04:00.790 --> 00:04:02.090
and what it's called.

70
00:04:02.410 --> 00:04:06.220
What if we want to connect to lots and lots of different things we could connect the same signal to

71
00:04:06.300 --> 00:04:11.720
two different things that's perfectly doable but what if we don't know how many things are in the same

72
00:04:11.720 --> 00:04:13.010
tree at the same time.

73
00:04:13.070 --> 00:04:15.200
What if we don't know all of them.

74
00:04:15.200 --> 00:04:17.450
What if some of them care and some of them don't.

75
00:04:17.480 --> 00:04:23.870
For this we're going to use a group and a group is not like sending a message on a cell phone or a mobile

76
00:04:23.870 --> 00:04:24.610
phone.

77
00:04:24.710 --> 00:04:25.400
It's like

78
00:04:29.000 --> 00:04:29.930
a radio tower.

79
00:04:29.930 --> 00:04:31.840
We are broadcasting a message.

80
00:04:31.910 --> 00:04:36.510
We are broadcasting a message to anyone who might care.

81
00:04:36.650 --> 00:04:40.790
Now you might want this unless doodling terms a signal is a predetermined message from a known send

82
00:04:40.790 --> 00:04:41.870
it to an end recipient.

83
00:04:41.870 --> 00:04:44.780
A group is a broadcast to anyone who might be listening for it.

84
00:04:44.780 --> 00:04:48.890
So what I'm to do is I'm going to put game state level one here.

85
00:04:49.000 --> 00:04:51.660
I won't put it in a group if you know.

86
00:04:51.680 --> 00:04:56.070
Let's do this in the script so we make more levels I don't have to change a thing.

87
00:04:56.870 --> 00:05:04.020
It's got to function ready and adds to group.

88
00:05:04.560 --> 00:05:08.950
And when I call the script and call this group game states.

89
00:05:08.980 --> 00:05:13.800
So that being a game any node that has this script will be added to the group game state.

90
00:05:13.800 --> 00:05:14.580
OK.

91
00:05:14.580 --> 00:05:18.940
So how do you get this working back into habits instead of body dot hubs.

92
00:05:18.990 --> 00:05:27.150
I'm going to do get 23 core group game states.

93
00:05:27.150 --> 00:05:32.010
So that's the name of the group and a string for what it's going to call.

94
00:05:32.040 --> 00:05:39.870
So call hard now every single hazard will automatically broadcast on the channel.

95
00:05:39.870 --> 00:05:43.670
Game states rights are any node that is a member of this group.

96
00:05:43.770 --> 00:05:48.870
This function if it doesn't have this function it will ignore it which will come in really handy more

97
00:05:48.870 --> 00:05:51.670
complicated games before we go any further.

98
00:05:51.810 --> 00:05:53.760
At the moment we have no way of seeing the life.

99
00:05:53.760 --> 00:05:57.430
So I was going to print lives OK.

100
00:05:57.460 --> 00:05:58.290
So let's see how this works.

101
00:05:59.810 --> 00:06:01.180
That's a jump to a spike.

102
00:06:01.440 --> 00:06:04.590
Two one zero minus one.

103
00:06:04.600 --> 00:06:05.060
Right.

104
00:06:05.400 --> 00:06:05.940
OK.

105
00:06:05.950 --> 00:06:06.530
So that's good.

106
00:06:06.550 --> 00:06:09.370
That's working well now let's fix this bit.

107
00:06:09.400 --> 00:06:13.110
So if lives is less than zero.

108
00:06:14.980 --> 00:06:16.700
And Game 2.

109
00:06:16.840 --> 00:06:19.350
So now we want to make a functional end game

110
00:06:23.880 --> 00:06:26.530
and here's my challenge for you.

111
00:06:27.030 --> 00:06:32.790
I'd like you to move end game from the plant G.D. script to the game state or G.D. script.

112
00:06:32.790 --> 00:06:37.840
Remember we also need to call this if the bunny falls below world limit.

113
00:06:37.920 --> 00:06:38.430
OK.

114
00:06:38.460 --> 00:06:40.590
There's a few ways you can do this but pulls a video.

115
00:06:40.590 --> 00:06:41.450
Give us a shot.

116
00:06:41.580 --> 00:06:43.100
And when you come back I'll show you my solution.

117
00:06:48.420 --> 00:06:49.410
I'm OK Mac.

118
00:06:49.440 --> 00:06:53.570
So first thing I do is I'm going to cut end game and put it in hot

119
00:06:56.320 --> 00:06:58.090
burn because it's gonna do the exact same thing.

120
00:06:58.180 --> 00:06:59.600
Get tree change scene.

121
00:06:59.650 --> 00:07:00.570
Right so that's fine.

122
00:07:00.580 --> 00:07:02.150
How they're now in play.

123
00:07:02.150 --> 00:07:04.210
We're now calling and game and this is what we need to do.

124
00:07:04.540 --> 00:07:09.490
So instead of end game what I'm gonna do is I'm gonna go get tree I'm gonna use the group which is set

125
00:07:09.490 --> 00:07:10.010
up right.

126
00:07:10.120 --> 00:07:12.430
Coal Group.

127
00:07:13.140 --> 00:07:14.290
It's gonna be game states

128
00:07:17.050 --> 00:07:19.150
and we are now calling and game.

129
00:07:20.290 --> 00:07:22.720
Let's just double check that's how it smelt and game.

130
00:07:22.780 --> 00:07:23.060
Yeah.

131
00:07:23.970 --> 00:07:24.370
Okay.

132
00:07:24.400 --> 00:07:31.150
So now that should work so first things first jump off the edge and that looks great.

133
00:07:31.150 --> 00:07:33.240
I noticed the spikes.

134
00:07:33.370 --> 00:07:36.170
One two three dead.

135
00:07:36.200 --> 00:07:36.560
Great.

136
00:07:36.620 --> 00:07:37.590
So everything's working.

137
00:07:37.700 --> 00:07:41.870
What we've done now is we've moved everything that isn't motion outside of the player.

138
00:07:41.900 --> 00:07:47.240
It now only reacts to being hurt by moving and playing a sound effect.

139
00:07:47.240 --> 00:07:49.550
We could move this sound effect somewhere else.

140
00:07:49.610 --> 00:07:52.550
For now I'm okay with this and it's got a game state.

141
00:07:52.550 --> 00:07:53.730
Just remove this comment.

142
00:07:53.750 --> 00:07:55.110
Don't need that anymore.

143
00:07:55.220 --> 00:08:01.480
And if we wanted to get another comment we are pure awesome.

144
00:08:01.490 --> 00:08:04.310
I'm not gonna leave this comment in as the kind of thing that really annoys Ben.

145
00:08:04.370 --> 00:08:05.030
I don't get rid of that.

146
00:08:05.150 --> 00:08:07.980
But if you wanted to you could leave it in and that's fine.

147
00:08:08.000 --> 00:08:08.630
Look at that.

148
00:08:08.630 --> 00:08:09.170
We're all done.

149
00:08:09.170 --> 00:08:14.630
We've now made our game site scripts and I say that's and this is a great time to end the video in this

150
00:08:14.630 --> 00:08:15.270
video.

151
00:08:15.290 --> 00:08:19.700
We've looked at the single responsibility principle which for some reason I have a lot of trouble saying

152
00:08:20.330 --> 00:08:26.050
we've decided what behavior each note will track and we've moved end game to the correct script.

153
00:08:26.060 --> 00:08:29.110
Now this is really important we start making larger and larger games.

154
00:08:29.120 --> 00:08:36.800
Right this way every single class every single node will do exactly what we expect and nothing else.

155
00:08:36.800 --> 00:08:43.790
We've also used groups here to make sure we've got some sort of redundancy if for some reason the method

156
00:08:43.880 --> 00:08:46.820
isn't in game state or game state is properly loaded.

157
00:08:46.820 --> 00:08:51.680
The game won't crash it won't do the behavior we want but it'll work just fine.

158
00:08:51.680 --> 00:08:55.540
So we've made a much more robust code so excellent work.

159
00:08:55.640 --> 00:08:56.750
And I'll see you on the next video.
