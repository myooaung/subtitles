1
00:00:05,020 --> 00:00:09,150
Hello you lovely God people in this video we're going to talk about a new script.

2
00:00:09,160 --> 00:00:11,240
We're going make a script called Game state Judy.

3
00:00:11,320 --> 00:00:12,340
Why are we doing that.

4
00:00:12,340 --> 00:00:17,100
Well you know I've been talking about how each script should do one thing in each function should it

5
00:00:17,100 --> 00:00:18,190
do one thing.

6
00:00:18,190 --> 00:00:22,120
What we're talking about here is the single responsibility principle.

7
00:00:22,120 --> 00:00:27,220
This is the idea that every object should be responsible for single behaviour or in the words of Robert

8
00:00:27,220 --> 00:00:33,500
C. Martin who first came up with this class should only have one reason to change.

9
00:00:33,580 --> 00:00:34,930
What does that mean for us.

10
00:00:34,930 --> 00:00:39,010
Well currently we have player g d and player animation Judy.

11
00:00:39,040 --> 00:00:44,110
And they're responsible for a single thing play egd will move the player and play animation well and

12
00:00:44,120 --> 00:00:45,370
make the player.

13
00:00:45,370 --> 00:00:47,650
We're going to create game state we're going to run the game.

14
00:00:47,650 --> 00:00:49,480
It's going to hold the rules right.

15
00:00:49,480 --> 00:00:50,990
How many lives do you start with.

16
00:00:51,010 --> 00:00:52,520
What happens when you lose a life.

17
00:00:52,570 --> 00:00:53,850
How many coins you start with.

18
00:00:53,920 --> 00:00:55,940
What happens when you gain a coin.

19
00:00:55,940 --> 00:00:57,130
So nice and easy.

20
00:00:57,130 --> 00:01:00,210
Let's create a brandnew script.

21
00:01:00,340 --> 00:01:03,040
I'm going to create my script on level 1 now.

22
00:01:03,100 --> 00:01:07,660
This is going to work because this is a one level game if this is a multi-level game I do that little

23
00:01:07,660 --> 00:01:08,860
differently.

24
00:01:08,860 --> 00:01:13,000
When we look at singletons and auto loading scripts and a few videos.

25
00:01:12,990 --> 00:01:14,790
TIME That's where I would do that.

26
00:01:14,790 --> 00:01:16,290
But for now let's put it in level 1.

27
00:01:16,420 --> 00:01:19,300
I'm going to call this game state not level 1

28
00:01:22,600 --> 00:01:24,740
and let's put it like that.

29
00:01:24,740 --> 00:01:27,040
It's going to be a dot g d.

30
00:01:27,100 --> 00:01:28,900
Got in a what kind of script it is.

31
00:01:28,900 --> 00:01:34,190
Also note I'm not putting it in scenes file folder not file folder and put it in the scripts folder.

32
00:01:35,530 --> 00:01:37,810
And I don't want any comments and would just go from there.

33
00:01:37,810 --> 00:01:39,710
So let's start by making this nice and easy.

34
00:01:39,720 --> 00:01:43,000
In the next video and the ones after that will start adding more functionality to it.

35
00:01:43,120 --> 00:01:48,100
But before we start linking it to the gooey in things I'd like you to move the end game function out

36
00:01:48,100 --> 00:01:51,430
of play a dog midi and into game state.

37
00:01:51,430 --> 00:01:56,280
And remember you need to call it from player dog Eady if Bonnie falls by the world limit.

38
00:01:56,280 --> 00:02:03,190
So if Bonnie falls too far we're going to say now call end game in game state is a couple ways you could

39
00:02:03,190 --> 00:02:03,760
do this.

40
00:02:03,760 --> 00:02:07,440
Suppose the video give it a shot and when you come back I'll show you my solution.

41
00:02:10,410 --> 00:02:11,210
And walk back.

42
00:02:11,220 --> 00:02:15,690
First thing I do is I'm going to find end game as a function and I'm going to remove it entirely.

43
00:02:15,690 --> 00:02:20,210
So just cut and let's go to a game say Judy and paste.

44
00:02:20,490 --> 00:02:21,630
Well that was easy.

45
00:02:21,630 --> 00:02:27,030
Now this should still work because we haven't moved this scene but we've got some string referencing

46
00:02:27,030 --> 00:02:29,150
here that Ben has strong feelings about.

47
00:02:29,180 --> 00:02:31,070
He If you've watched any of his code review.

48
00:02:31,090 --> 00:02:33,960
But hollidays if you happen to catch John I'll switch channel.

49
00:02:33,960 --> 00:02:38,090
You'll know that Ben has feelings about String referencing and with good with good reason.

50
00:02:38,100 --> 00:02:39,600
We will fix that in later V.

51
00:02:39,630 --> 00:02:41,420
But for now let's leave it as it is.

52
00:02:43,450 --> 00:02:47,230
So instead of end game I'm just going to get parent figures.

53
00:02:47,260 --> 00:02:54,030
Level 1 is the parent of player and I'm going to call the function and the function is going to be end

54
00:02:54,040 --> 00:02:56,740
game and that's all that needs to happen.

55
00:02:56,740 --> 00:02:58,390
Now you could use a signal for this.

56
00:02:58,390 --> 00:03:02,030
That's perfectly fine but I'm going do this because it's much simpler now.

57
00:03:02,050 --> 00:03:04,810
Note we have a problem here.

58
00:03:04,930 --> 00:03:09,430
This relies on player being a direct child of level 1.

59
00:03:09,430 --> 00:03:15,380
If for some reason we change that lets say that we make player a child of an organizing node.

60
00:03:15,760 --> 00:03:19,620
I don't know I will call it moving things or characters or something else.

61
00:03:19,630 --> 00:03:22,260
If we put player with in another node.

62
00:03:22,300 --> 00:03:23,820
This won't work.

63
00:03:25,700 --> 00:03:28,760
Now we are going to fix that in a in a later video.

64
00:03:28,880 --> 00:03:30,410
But for now this will work fine.

65
00:03:30,440 --> 00:03:33,100
And let's just make sure of that so I'm going to press play.

66
00:03:35,220 --> 00:03:39,360
And let's make bunny fall by fall off the world.

67
00:03:39,360 --> 00:03:41,130
Done nice and easy.

68
00:03:41,260 --> 00:03:42,450
Which brings to the end of the video.

69
00:03:42,460 --> 00:03:47,470
Nice and short but pretty simple with looked at what the single responsibility principle is.

70
00:03:47,540 --> 00:03:52,410
Decided what behaviour each node will track and we've moved end game to the correct script so the weakest

71
00:03:52,430 --> 00:03:53,860
link in the go is the game state.

72
00:03:53,860 --> 00:03:58,060
We can start tracking coins and lines and really getting some functionality in the game by putting everything

73
00:03:58,330 --> 00:03:59,830
in the correct place.

74
00:03:59,830 --> 00:04:04,540
Why do we want to do that because it makes it much easier to debug and to find things.

75
00:04:04,540 --> 00:04:09,460
If you come back to the script in six months you'll very easily be able to track what bit of the code

76
00:04:09,460 --> 00:04:10,680
does what.

77
00:04:10,780 --> 00:04:12,820
Which also makes solving problems easier.

78
00:04:12,830 --> 00:04:15,000
So great work and I'll see you in the next video.
