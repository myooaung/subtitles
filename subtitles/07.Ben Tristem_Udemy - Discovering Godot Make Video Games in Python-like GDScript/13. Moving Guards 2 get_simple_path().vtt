WEBVTT
1
00:00:04.900 --> 00:00:05.500
Welcome back.

2
00:00:05.500 --> 00:00:09.280
You radiant go to people and use radiant yet quite like it in this video.

3
00:00:09.280 --> 00:00:12.310
We're going to continue with our task of navigating the gods.

4
00:00:12.310 --> 00:00:13.850
We have made the gods move around.

5
00:00:13.860 --> 00:00:19.990
We're going to do that by using get simple path which is a function within navigation 2D.

6
00:00:21.040 --> 00:00:24.790
What this is going to do is give us a variable called Path.

7
00:00:24.790 --> 00:00:26.590
In fact it's gonna be an array.

8
00:00:26.650 --> 00:00:31.270
Let's take a really quick whistle stop tour how we're going to use that and they get into engine and

9
00:00:31.290 --> 00:00:32.800
see what the practicalities are.

10
00:00:33.490 --> 00:00:38.160
So using navigation paths we're going to make a very local path which is just gonna be an empty array.

11
00:00:38.200 --> 00:00:42.780
And then when we tell it get simple path we'll say we are here we want to go there.

12
00:00:42.910 --> 00:00:45.830
Draw a series of lines from one to the other.

13
00:00:45.910 --> 00:00:47.020
That's not going to draw them.

14
00:00:47.020 --> 00:00:50.770
It's just going to fill the path with vector 2s.

15
00:00:50.830 --> 00:00:58.030
So we'll have an array of vector 2s and as you can see the first one which will be entry 0 which is

16
00:00:58.210 --> 00:00:59.440
this one right here.

17
00:00:59.680 --> 00:01:01.590
That's at 0 0 hours in the world.

18
00:01:01.600 --> 00:01:05.610
The next one which will be path 1 is 100 minus 80.

19
00:01:05.680 --> 00:01:10.270
I'm highlighting this because remember that in an array we always count from zero the first entry is

20
00:01:10.270 --> 00:01:11.210
entry zero.

21
00:01:11.260 --> 00:01:12.790
It's really an offset.

22
00:01:12.850 --> 00:01:16.170
This is important because otherwise we're gonna get some very bad off by 1 errors.

23
00:01:16.180 --> 00:01:16.360
Okay.

24
00:01:16.370 --> 00:01:22.720
Once we've done that what we can do is tell gotto move the character to path zero and then when you're

25
00:01:22.780 --> 00:01:30.160
at it or close enough to it we can remove entry zero from our path and say Okay now move to the next

26
00:01:30.220 --> 00:01:36.250
entry 0 and this will happen until there is only one left when there's one left which could generate

27
00:01:36.250 --> 00:01:37.410
a new path.

28
00:01:37.570 --> 00:01:41.560
What the player will see is the Guard's going to move to a waypoint that immediately moves the next

29
00:01:41.560 --> 00:01:46.210
waypoint move the next point when they get to the destination they're going to generate a new path we're

30
00:01:46.210 --> 00:01:50.080
gonna put a timer in so that the guard pauses that for a few seconds but that's what it's gonna look

31
00:01:50.080 --> 00:01:50.700
like.

32
00:01:50.880 --> 00:01:53.640
Okay so that's not a theory let's get into the game.

33
00:01:53.710 --> 00:02:01.920
Here we are in gotto open character's gonna open and pieces gonna open the gods scene he our God and

34
00:02:02.010 --> 00:02:06.610
just check with the right script we do that and Chasen's last time and when we hear let's add a torch

35
00:02:06.640 --> 00:02:12.730
not a torch while we hear it's a timer we could press the plus button we control a and just type in

36
00:02:12.730 --> 00:02:19.940
a timer simple time a. ode when we connect it with a signal on time out connect to the route.

37
00:02:19.930 --> 00:02:25.780
God if that's not the route that's the god right now sort of do a thing we're gonna put in there and

38
00:02:25.780 --> 00:02:26.920
we're now good to go.

39
00:02:27.040 --> 00:02:33.400
First thing I want to do is if I'm gonna be running get simple path from here and that's part of navigation

40
00:02:33.400 --> 00:02:36.970
to me I need a way of telling it where navigation Tootie is.

41
00:02:36.980 --> 00:02:39.340
So want to put that as a variable right at the top.

42
00:02:39.430 --> 00:02:44.240
Now there are a few different ways you can do this if I go to level one to change a 2D view to make

43
00:02:44.240 --> 00:02:45.980
it very clear where I am.

44
00:02:46.060 --> 00:02:47.190
Here are the gods right.

45
00:02:47.290 --> 00:02:52.100
Each God is a child of this node called gods which is a child of either one.

46
00:02:52.120 --> 00:02:58.820
It could in theory say get parent get parent get node but what happens if we start shuffling this round.

47
00:02:58.840 --> 00:02:59.280
Right.

48
00:02:59.320 --> 00:03:02.470
All we've done is with tighter selves down to having to use this architecture.

49
00:03:02.470 --> 00:03:04.000
Let's put some flexibility into this.

50
00:03:04.000 --> 00:03:09.520
Let's make this as malleable as we can and trying to find other words flexible to do that.

51
00:03:09.520 --> 00:03:16.120
What I'm to do is say get the root which remember is the invisible node above the top one so it's above

52
00:03:16.120 --> 00:03:18.100
level one get the root.

53
00:03:18.580 --> 00:03:19.830
And now from root.

54
00:03:19.870 --> 00:03:24.870
Find a node called navigation 2D so let's look at how we can do that into the script.

55
00:03:24.940 --> 00:03:30.190
Now let's go into distraction free mode and have a variable loops maybe finally type into the field

56
00:03:30.520 --> 00:03:33.120
have a variable and I'm gonna call it navigation.

57
00:03:33.130 --> 00:03:37.920
I don't have it with a small N because if I have it with a big N it's going to change color.

58
00:03:37.980 --> 00:03:38.810
Why.

59
00:03:38.920 --> 00:03:45.040
Because this isn't a node it's a class navigation is the 3D version of navigation 2D that's gonna get

60
00:03:45.040 --> 00:03:46.360
confusing so let's just do that.

61
00:03:48.130 --> 00:03:49.790
And now I need to set.

62
00:03:49.810 --> 00:03:54.170
So let's set this as get loops get tree go.

63
00:03:54.790 --> 00:03:55.570
And that's just gonna sell it.

64
00:03:55.600 --> 00:04:01.200
Okay we're now playing with the scenery so get the same tree and now get root.

65
00:04:01.480 --> 00:04:06.510
And from here we can find node and we've done this before right.

66
00:04:06.520 --> 00:04:07.720
So the first image is the string.

67
00:04:07.720 --> 00:04:10.950
This is the navigation 2D.

68
00:04:10.990 --> 00:04:12.800
Remember checking capitalization.

69
00:04:12.930 --> 00:04:13.660
Is it recursive.

70
00:04:13.720 --> 00:04:16.200
Yes please check all children and grandchildren.

71
00:04:16.270 --> 00:04:17.470
Is it owned by this node.

72
00:04:17.470 --> 00:04:19.060
No it is not.

73
00:04:19.610 --> 00:04:21.490
Great navigation is now set.

74
00:04:21.520 --> 00:04:24.030
However if I run this and I'll show you this.

75
00:04:24.030 --> 00:04:26.280
We're gonna get an error.

76
00:04:27.400 --> 00:04:29.430
You're trying to get root of a null instance.

77
00:04:29.620 --> 00:04:31.070
Why this should be working right.

78
00:04:31.270 --> 00:04:36.370
Well the reason for this is that the scene hasn't finished loading it's not ready.

79
00:04:36.370 --> 00:04:40.810
So we're trying to find a node that may or may not be there yet to solve this.

80
00:04:40.810 --> 00:04:47.800
We're going to add a new keyword before variable and add on ready on ready means go find this when you

81
00:04:47.800 --> 00:04:51.430
run the ready function when everything in the scene is finished and you start.

82
00:04:51.490 --> 00:04:57.700
Now go find this and now this will run just fine won't do anything but it'll run boom.

83
00:04:58.370 --> 00:05:01.590
Okay so I've done that we've probably got the destinations don't we.

84
00:05:01.600 --> 00:05:05.190
So let's do another on ready because I don't want it beforehand variable.

85
00:05:06.200 --> 00:05:13.600
Let's call this available v level destinations.

86
00:05:13.880 --> 00:05:18.040
And this is going to be navigation dot.

87
00:05:18.050 --> 00:05:22.160
Now I'm going to do dot because I can't really do this yet right.

88
00:05:22.160 --> 00:05:27.770
That's gonna get confusing so dot get node and what is that called destinations with a capital D.

89
00:05:27.770 --> 00:05:29.040
I think it was.

90
00:05:29.420 --> 00:05:30.850
Yes that's exactly what it does.

91
00:05:30.860 --> 00:05:32.920
So dest loops.

92
00:05:33.140 --> 00:05:37.420
Destinations.

93
00:05:37.480 --> 00:05:37.840
There it is.

94
00:05:39.160 --> 00:05:42.460
Okay we're gonna need a few more variables we can add them in.

95
00:05:42.520 --> 00:05:47.230
What if and now we're gonna be moving we'll be using moving slide so let's set up a motion variable

96
00:05:47.610 --> 00:05:49.030
motion.

97
00:05:49.480 --> 00:05:53.770
We could tell it it's a vector too but there's no real need to do that with me that blank we're gonna

98
00:05:53.770 --> 00:05:59.600
need a variable of possible destinations.

99
00:06:00.470 --> 00:06:05.360
So what this is going to do is set this once the scene is finished loading it's gonna go to available

100
00:06:05.360 --> 00:06:07.120
destinations and get all of the children.

101
00:06:07.120 --> 00:06:08.890
That's what that's going to be.

102
00:06:09.440 --> 00:06:14.250
You know what that should be about a name shouldn't let's call it destinations.

103
00:06:14.250 --> 00:06:18.850
Great variable for the path.

104
00:06:18.850 --> 00:06:20.520
Again I could set this as an empty array.

105
00:06:20.560 --> 00:06:21.740
No need to.

106
00:06:21.740 --> 00:06:22.530
To can handle that us.

107
00:06:22.540 --> 00:06:27.150
So we put it like this and do anything else.

108
00:06:27.280 --> 00:06:29.390
I mean we do but we'll come to that when we get to it.

109
00:06:29.410 --> 00:06:31.980
I want to give too many spoilers.

110
00:06:32.000 --> 00:06:32.260
OK.

111
00:06:32.260 --> 00:06:33.190
Function ready.

112
00:06:33.250 --> 00:06:34.830
Let's actually do some scripting.

113
00:06:34.960 --> 00:06:38.920
First thing we do is we'll set randomize why I want to pick random destinations.

114
00:06:38.920 --> 00:06:40.750
I want them different every time we play the game.

115
00:06:40.750 --> 00:06:42.220
So I need randomize.

116
00:06:42.220 --> 00:06:43.990
Otherwise think of it as a deck of cards.

117
00:06:43.990 --> 00:06:47.700
The deck will be in the same order every time we play so let's shuffle them.

118
00:06:47.710 --> 00:06:49.350
We've shuffled out random cards.

119
00:06:49.480 --> 00:06:54.610
Now let's set possible destinations and possible destination equals.

120
00:06:54.610 --> 00:06:57.730
And this is going to be destinations.

121
00:06:57.730 --> 00:06:59.700
Dot get children.

122
00:07:01.210 --> 00:07:03.390
So she's going to have all of the children.

123
00:07:03.430 --> 00:07:05.030
Now we have that as an array.

124
00:07:05.050 --> 00:07:08.570
We could print that if we wanted to it can print every possible position today.

125
00:07:08.770 --> 00:07:10.630
There is advantage in doing this way.

126
00:07:10.630 --> 00:07:12.180
This will now work for every level.

127
00:07:12.180 --> 00:07:12.330
Right.

128
00:07:12.340 --> 00:07:16.620
We don't have to have them manually put him we'd only Jason files what is going to do at the beginning

129
00:07:16.630 --> 00:07:22.090
each level it's going to go to the destination file and just pull all of these position 2D and we can

130
00:07:22.090 --> 00:07:26.590
move them around between games we can have as many levels we like we can shuffle them do whatever we

131
00:07:26.590 --> 00:07:26.820
want.

132
00:07:26.820 --> 00:07:32.030
It doesn't matter it'll just pick them back into the scene and the script.

133
00:07:32.060 --> 00:07:32.270
Okay.

134
00:07:32.290 --> 00:07:37.780
Next we need to do is make a path make path as a branding function that I'm going to make right now

135
00:07:37.840 --> 00:07:40.590
which is new function McBath.

136
00:07:40.600 --> 00:07:45.180
Boo boo boo boo boo doesn't take any arguments and it's good to go.

137
00:07:45.450 --> 00:07:47.100
I only make a path.

138
00:07:47.260 --> 00:07:50.380
The first thing I need to do is figure out what our destination is gonna be.

139
00:07:50.410 --> 00:07:55.540
Let's make a new variable called new destination.

140
00:07:55.540 --> 00:07:57.700
Every time we run this we want a new destination.

141
00:07:57.940 --> 00:08:01.600
And this is gonna be a random choice from the possible destinations so we can write that.

142
00:08:01.720 --> 00:08:03.270
Possible destinations.

143
00:08:03.270 --> 00:08:04.830
And I want a specific one.

144
00:08:04.840 --> 00:08:09.760
So let's get a random integer so get one of.

145
00:08:10.120 --> 00:08:12.740
So pick a random entry from here.

146
00:08:12.740 --> 00:08:14.950
Well I don't want any random number has to be within range.

147
00:08:14.980 --> 00:08:21.160
So it's modulate that by possible destinations size and we'll be very careful of an off by one error

148
00:08:21.610 --> 00:08:26.410
the size of the array is going to be different from the positions of the array.

149
00:08:26.410 --> 00:08:31.410
If there is only one entry in the array the size is one but that entry is in position zero.

150
00:08:31.420 --> 00:08:34.900
So let's subtract one now.

151
00:08:35.050 --> 00:08:43.080
Let's set path somebody's path equals navigation dot get simple path.

152
00:08:43.120 --> 00:08:45.350
You'll notice it's not auto completing.

153
00:08:45.550 --> 00:08:50.320
Why isn't it auto completing because at the moment it doesn't know what kind of note this is.

154
00:08:50.320 --> 00:08:50.800
Right.

155
00:08:50.800 --> 00:08:55.750
Once the game runs and the script is ready it'll go find out what this is.

156
00:08:55.750 --> 00:08:57.100
At the moment it has no idea.

157
00:08:57.130 --> 00:09:00.990
So I can't look up the health I'm holding control clicking nothing's happening.

158
00:09:01.090 --> 00:09:06.130
Couple of ways we do this we could go into search and type it in or I could go back into the crime scene

159
00:09:06.940 --> 00:09:10.630
and in my view right click on navigation to and to open documentation.

160
00:09:10.630 --> 00:09:16.420
Let's take a look at get a simple path get simple path.

161
00:09:16.420 --> 00:09:18.720
Returns the path between two given points.

162
00:09:18.730 --> 00:09:24.810
Points are in local coordinate space if optimize is true the default path is smooth by moving past seconds

163
00:09:24.970 --> 00:09:25.700
when possible.

164
00:09:26.500 --> 00:09:30.730
OK so let's see how comfortable you are with this right now.

165
00:09:30.730 --> 00:09:33.040
Don't worry if this is a little bit beyond you.

166
00:09:33.040 --> 00:09:36.630
This is kind of a challenging one for some of you to be trivial for some it'll be very difficult.

167
00:09:36.640 --> 00:09:40.510
This is a chance for you to figure out where you are and you know demons go back and look at these videos

168
00:09:40.510 --> 00:09:45.250
you have questions to ask where the symbol to use the documentation to put the right arguments and get

169
00:09:45.250 --> 00:09:46.300
simple path.

170
00:09:46.300 --> 00:09:48.470
So path equals get symbol path.

171
00:09:48.520 --> 00:09:53.290
Don't worry about the third argument yet it's not important but just make it so that we're going to

172
00:09:53.290 --> 00:09:56.220
create a path from where we are to where we're going.

173
00:09:56.230 --> 00:09:58.960
Post the video give it a shot when you come back I show you my solution

174
00:10:03.810 --> 00:10:04.500
and walk back.

175
00:10:05.170 --> 00:10:11.800
OK so let's get back to the script path it goes navigation get simple path must start with a position

176
00:10:13.330 --> 00:10:14.350
where I am right.

177
00:10:14.350 --> 00:10:15.550
That's my position.

178
00:10:15.550 --> 00:10:16.770
If I'm not sure what that's called.

179
00:10:16.810 --> 00:10:21.490
I could just click on it and go to transform and that's my position right mouse over it.

180
00:10:21.490 --> 00:10:22.240
Position.

181
00:10:22.240 --> 00:10:23.370
Awesome.

182
00:10:23.410 --> 00:10:28.480
Now my second argument is where we're going to do this.

183
00:10:28.510 --> 00:10:30.360
I'm going to pick new destinations.

184
00:10:30.370 --> 00:10:34.160
So new destination dot position.

185
00:10:34.600 --> 00:10:38.730
And that should be fine to test of it's fine print path.

186
00:10:38.950 --> 00:10:42.910
And if this has worked we should get a nice little ride on here.

187
00:10:42.910 --> 00:10:47.740
It's clear that Megan isn't easy and embrace play boom.

188
00:10:47.750 --> 00:10:48.260
Look at that.

189
00:10:48.330 --> 00:10:51.360
Each God has picked a destination and got to random one.

190
00:10:51.360 --> 00:10:55.300
And if I rerun it I should get completely different numbers.

191
00:10:55.320 --> 00:10:56.000
Awesome.

192
00:10:56.010 --> 00:11:02.560
So now we have a way of picking a random destination and generating a path to it.

193
00:11:02.670 --> 00:11:04.400
Next thing we have to do is move.

194
00:11:04.420 --> 00:11:05.990
Now let's run this on.

195
00:11:06.000 --> 00:11:09.840
Physics process so function physics process Delta.

196
00:11:10.950 --> 00:11:17.180
Every single frame of physics process we're going to navigate.

197
00:11:17.460 --> 00:11:20.010
So we run a function called navigate which we haven't written yet.

198
00:11:20.040 --> 00:11:27.540
I'm going to put a placeholder in there navigates and pass just so it doesn't throw up this area and

199
00:11:27.540 --> 00:11:28.790
in fact that's all it needs to do.

200
00:11:28.790 --> 00:11:34.830
So I don't need a book pass in here at all do I navigate is going to handle am I at my destination or

201
00:11:34.950 --> 00:11:36.210
should I keep moving.

202
00:11:36.210 --> 00:11:39.440
Well let's figure out how close we are to the destination.

203
00:11:39.450 --> 00:11:42.090
I don't want you to have to get to exactly the right pixel.

204
00:11:42.090 --> 00:11:44.250
Something might be in the way.

205
00:11:44.280 --> 00:11:45.450
There might be a bad piece of placement.

206
00:11:45.450 --> 00:11:50.800
Let's have a a minimum amount that you have to get to a threshold so can you variable.

207
00:11:50.820 --> 00:11:52.450
Let's put this as an export variable.

208
00:11:52.560 --> 00:11:57.530
Export variable and let's call this finding good names is tricky.

209
00:11:57.570 --> 00:11:59.230
And it's one of the hardest things in programming.

210
00:11:59.370 --> 00:12:00.590
What's a good name for this.

211
00:12:00.590 --> 00:12:09.070
Minimum distance to destination is really long distance to destination.

212
00:12:09.080 --> 00:12:10.410
No it's too long.

213
00:12:10.410 --> 00:12:13.730
I want to keep this a two words if I can.

214
00:12:15.210 --> 00:12:18.350
Destination threshold.

215
00:12:18.930 --> 00:12:22.890
So the reason I'm hesitating is I had a previous one and it was a terrible name.

216
00:12:22.920 --> 00:12:23.900
Like a really terrible name.

217
00:12:24.210 --> 00:12:25.820
I don't mean that he could spell threshold.

218
00:12:25.920 --> 00:12:34.130
Let's call it minimum arrival distance.

219
00:12:34.230 --> 00:12:35.970
It's bad but at least I can see what it is.

220
00:12:35.970 --> 00:12:40.340
I must set this to 5 pixels so if you're within five pixels we get to go.

221
00:12:40.350 --> 00:12:44.340
We also did mention before that we want the guards to go half the speed so let's do that.

222
00:12:44.470 --> 00:12:45.960
Export export.

223
00:12:45.960 --> 00:12:50.000
No export variable walk speed.

224
00:12:50.010 --> 00:12:53.540
He calls zero point five.

225
00:12:53.630 --> 00:12:57.220
So getting a half the speed right now this won't do anything but it will soon.

226
00:12:58.110 --> 00:13:02.520
Okay back to navigate Let's actually make this work so we have minimum arrival distance and a need to

227
00:13:02.520 --> 00:13:05.140
get there.

228
00:13:05.160 --> 00:13:12.630
Well let's make a variable called distance to destination.

229
00:13:12.720 --> 00:13:15.480
This is how many pixels are we from our destination.

230
00:13:15.480 --> 00:13:20.270
So let's pick position Dot.

231
00:13:20.460 --> 00:13:23.990
Distance to and what's the distance to what.

232
00:13:24.030 --> 00:13:26.590
It's where we're going which is path entry 0

233
00:13:35.880 --> 00:13:37.070
okay now.

234
00:13:37.420 --> 00:13:37.740
Whoops.

235
00:13:37.800 --> 00:13:40.700
That's nice path path.

236
00:13:41.550 --> 00:13:43.350
And we want entry 0 in path.

237
00:13:43.350 --> 00:13:47.760
Okay so we're just gonna calculate the distance from where we are to where we're going.

238
00:13:47.760 --> 00:13:56.370
Now let's check it if if we're far enough away so if distance to destination is greater than what I

239
00:13:56.380 --> 00:14:01.320
call this minimum arrival terrible time minimum arrival this distance.

240
00:14:01.380 --> 00:14:07.300
So how far we are if that's greater than currently 5 pixels which we can change then do a thing.

241
00:14:09.460 --> 00:14:16.420
Let's have a function called move let's put that function in so function move and for now you can just

242
00:14:16.420 --> 00:14:17.610
pass.

243
00:14:19.610 --> 00:14:19.900
Okay.

244
00:14:19.920 --> 00:14:27.310
So if we're far enough away keep moving if we're not we want to update the path or me another function

245
00:14:27.310 --> 00:14:28.890
called update path.

246
00:14:28.900 --> 00:14:30.510
You know what let's start with that one.

247
00:14:30.550 --> 00:14:32.960
So get out here.

248
00:14:32.980 --> 00:14:35.350
I'm trying to write them in the order they appear on the screen.

249
00:14:35.350 --> 00:14:40.440
Function Update path don't need that comment.

250
00:14:40.780 --> 00:14:42.360
Time to fast my fingers sometimes.

251
00:14:42.370 --> 00:14:43.170
Do you do that.

252
00:14:43.170 --> 00:14:44.350
I do that.

253
00:14:44.350 --> 00:14:44.880
What was I doing.

254
00:14:45.070 --> 00:14:48.600
Updating the path if the path Dot.

255
00:14:48.600 --> 00:14:53.830
Sighs So how many entries are in this array is one.

256
00:14:53.830 --> 00:14:56.350
This is important I don't want to wait until this is 0.

257
00:14:56.350 --> 00:14:58.560
That's going to cause all kinds of problems if the path is zero.

258
00:14:58.570 --> 00:15:01.010
That means we don't have a destination that means the game will crash.

259
00:15:01.090 --> 00:15:08.260
So there's only one entry left and the timer has stopped and is stopped.

260
00:15:12.010 --> 00:15:15.740
Okay there's only one entry and the timer hasn't yet started.

261
00:15:15.760 --> 00:15:19.670
We want to do something and what we want to do we want to start the timer.

262
00:15:19.670 --> 00:15:20.740
Why are we here.

263
00:15:20.800 --> 00:15:23.490
Let's take a quick look at the timer.

264
00:15:23.610 --> 00:15:27.160
It's kind of set for one second and three seconds sounds good.

265
00:15:27.220 --> 00:15:30.300
So wait for three seconds okay.

266
00:15:30.310 --> 00:15:34.600
So if there's only one entry and the timer isn't yet running stop the timer.

267
00:15:34.720 --> 00:15:37.720
If on the other hand we still have entries in the path.

268
00:15:37.720 --> 00:15:42.340
That means we haven't reached our destination yet so we're going to do is we're going to remove Position

269
00:15:42.340 --> 00:15:42.800
ZERO.

270
00:15:42.820 --> 00:15:48.120
Now I could do path dot remove Zero that will not find easy way of doing this.

271
00:15:48.130 --> 00:15:52.660
We just gonna go pop front now just means remove the very first thing.

272
00:15:52.660 --> 00:15:53.610
There's also a pop back.

273
00:15:53.650 --> 00:15:55.690
Remove the very last thing upfront is great.

274
00:15:55.780 --> 00:15:56.600
Let's see how it go.

275
00:15:56.600 --> 00:16:00.320
We've got almost everything we don't have move yet and we haven't filled in the timeless feel at time

276
00:16:00.320 --> 00:16:00.900
right now.

277
00:16:00.910 --> 00:16:02.290
This is just make a path right.

278
00:16:02.290 --> 00:16:05.600
If we get to this stage the timer started great.

279
00:16:05.620 --> 00:16:06.640
If it's finished.

280
00:16:06.640 --> 00:16:08.430
Make a new path.

281
00:16:09.160 --> 00:16:11.050
And now we just need move.

282
00:16:11.110 --> 00:16:13.060
And that should be everything before we test it.

283
00:16:13.060 --> 00:16:14.560
See if I've messed everything up.

284
00:16:14.650 --> 00:16:16.380
Hopefully I haven't one lie.

285
00:16:16.390 --> 00:16:18.370
This is not my first attempt to recording this video.

286
00:16:18.370 --> 00:16:20.600
It's a very hot day and my brain is not working very well.

287
00:16:20.730 --> 00:16:21.660
OK.

288
00:16:22.360 --> 00:16:24.760
When we move I kind of want wanna look at where we're going so let's do that.

289
00:16:24.760 --> 00:16:26.700
Let's look at.

290
00:16:27.290 --> 00:16:30.370
And what are we looking to do with a variable called destination.

291
00:16:30.370 --> 00:16:31.480
We don't do we.

292
00:16:31.510 --> 00:16:36.650
Okay so let's just go look at Path zero.

293
00:16:36.700 --> 00:16:37.740
We're gonna keep looking.

294
00:16:37.780 --> 00:16:40.240
And we should be running this every frame that we're actually moving.

295
00:16:40.240 --> 00:16:45.130
We look at where we're going to the garbage can look at whatever the next waypoint is and the destination

296
00:16:45.160 --> 00:16:47.100
that's gonna look reasonably realistic.

297
00:16:47.110 --> 00:16:48.010
Now let's set motion.

298
00:16:48.010 --> 00:16:49.790
Motion equals.

299
00:16:50.860 --> 00:16:53.820
Now we figured this out before we did in line of sight.

300
00:16:53.820 --> 00:16:54.570
Very similar idea.

301
00:16:54.610 --> 00:16:55.120
Right.

302
00:16:55.120 --> 00:16:59.340
I want to calculate where I'm going minus my position.

303
00:16:59.390 --> 00:17:10.220
So path zero minus position however I need to normalize this.

304
00:17:10.220 --> 00:17:14.640
What that means is it's got me a number between 0 and 1 because otherwise we'll move diagonally gonna

305
00:17:14.660 --> 00:17:19.430
move at a different speed so as to dot normalized

306
00:17:22.520 --> 00:17:25.310
and now I want to make sure that we're going at the right speed.

307
00:17:25.310 --> 00:17:28.950
So multiply that by Max speed.

308
00:17:29.430 --> 00:17:30.430
Where's that coming from.

309
00:17:30.440 --> 00:17:37.280
That's coming from the template script right Max speed is right here and I want to multiply that by

310
00:17:37.580 --> 00:17:43.850
walk speed and just make it nice and clear and I'll put this in brackets.

311
00:17:44.270 --> 00:17:47.080
We probably don't need to to be honest but I'm do anyway.

312
00:17:47.090 --> 00:17:47.370
Okay.

313
00:17:47.380 --> 00:17:48.020
This is pretty good.

314
00:17:48.020 --> 00:17:54.490
One more thing we do actually move it so move and slide because we are moving with a of massive body

315
00:17:54.950 --> 00:17:58.520
and we are moved by motion and that should be everything.

316
00:17:58.550 --> 00:18:01.190
Let's see if this works pressing play and it doesn't.

317
00:18:01.530 --> 00:18:01.840
Okay.

318
00:18:01.850 --> 00:18:02.140
Why.

319
00:18:02.780 --> 00:18:05.510
Because pop front is not a thing in a pool vector to a right.

320
00:18:05.540 --> 00:18:12.140
Okay what's happening here is path here is not an action array it's a vector to array which for some

321
00:18:12.140 --> 00:18:13.980
reason isn't accepting pop front.

322
00:18:14.000 --> 00:18:14.890
Not problem.

323
00:18:15.080 --> 00:18:21.420
Remove entry 0 and that's fine meal time.

324
00:18:21.800 --> 00:18:22.310
Boom.

325
00:18:22.330 --> 00:18:23.070
Oh God.

326
00:18:23.080 --> 00:18:24.130
Now he has moved.

327
00:18:24.130 --> 00:18:26.430
But look they're both stuck.

328
00:18:26.710 --> 00:18:27.970
That's bad.

329
00:18:28.000 --> 00:18:29.150
Couple of ways we can fix that.

330
00:18:29.260 --> 00:18:37.180
First thing to do is when we're getting a simple path which is down here on make path we can use our

331
00:18:37.180 --> 00:18:37.840
third entry

332
00:18:40.740 --> 00:18:42.270
which is false.

333
00:18:42.270 --> 00:18:43.710
I believe I just checked the navigation

334
00:18:46.750 --> 00:18:52.050
the U.S. defaults is true should get better so let's take a look and see.

335
00:18:52.050 --> 00:18:54.620
Guards are eye moving.

336
00:18:54.630 --> 00:18:55.260
Moving is good.

337
00:18:55.260 --> 00:18:57.650
I like moving and it crashes.

338
00:18:57.720 --> 00:18:58.180
Okay.

339
00:18:58.230 --> 00:19:00.800
Why is it crashing on the somehow.

340
00:19:01.130 --> 00:19:06.750
Somehow we are getting to have no entries in the path that tells me we're removing them too early.

341
00:19:06.840 --> 00:19:10.360
So we're going to do is when the scroll down here and I think the problem is here.

342
00:19:10.440 --> 00:19:17.790
If the path size is 1 and the timer is stopped do that otherwise remove the path.

343
00:19:17.970 --> 00:19:19.230
But if we do this

344
00:19:22.160 --> 00:19:29.130
now what it's saying if this is one check has the time stopped.

345
00:19:29.180 --> 00:19:33.250
If not wait and if it isn't go then let's take a look at that.

346
00:19:33.270 --> 00:19:33.730
Let's play

347
00:19:36.870 --> 00:19:43.680
and hopefully now the gods will get to their destination and stop.

348
00:19:43.720 --> 00:19:49.060
However they're bumping into things and what's gonna happen occasionally they're gonna get stuck especially

349
00:19:49.060 --> 00:19:55.210
they touch each other let's fix that next let's go into two to do to do probably move spirit and move

350
00:19:55.240 --> 00:19:56.380
just before move and slide.

351
00:19:56.950 --> 00:19:59.470
So while you're moving check have you bumped into something.

352
00:19:59.810 --> 00:20:02.660
F is on.

353
00:20:02.920 --> 00:20:07.180
Now remember we used is on your own floor is on ceiling but we haven't defined it up.

354
00:20:07.180 --> 00:20:13.760
Doesn't matter is on wall if you want touching an obstacle make a new path.

355
00:20:16.190 --> 00:20:17.840
Let's see how we're going press play.

356
00:20:17.900 --> 00:20:19.580
God's moving.

357
00:20:19.700 --> 00:20:24.080
God's moving not an each other what happens they touch me boop.

358
00:20:24.140 --> 00:20:24.740
New Path.

359
00:20:24.750 --> 00:20:25.690
Perfect.

360
00:20:25.700 --> 00:20:26.080
Let's check.

361
00:20:26.090 --> 00:20:30.930
They can actually stop Why is there a camera in the middle of floor.

362
00:20:30.970 --> 00:20:32.460
I shouldn't be there.

363
00:20:32.980 --> 00:20:36.110
Got stopped for three seconds and should now be moving.

364
00:20:36.110 --> 00:20:41.100
We have to be getting back stealth game Hi folks Fijian here.

365
00:20:41.160 --> 00:20:45.600
You might have a bug you might have a situation where the guards will start moving gets their first

366
00:20:45.600 --> 00:20:49.290
destination then start moving again.

367
00:20:49.290 --> 00:20:54.420
And after three seconds no matter what is happening they're going to immediately picking your destination.

368
00:20:54.420 --> 00:20:55.740
If that's going on.

369
00:20:55.740 --> 00:20:56.390
Go to your guard.

370
00:20:56.400 --> 00:20:59.400
Go to your timer and make sure you have one shot selected.

371
00:20:59.850 --> 00:21:02.940
If you don't it's going to trigger every three seconds.

372
00:21:02.940 --> 00:21:04.350
We don't want to do that we'll just stop.

373
00:21:04.350 --> 00:21:10.360
So make sure that selected and now back to your regular schedule time zone I want to move my camera

374
00:21:10.360 --> 00:21:12.360
really quick because it's annoying me.

375
00:21:12.640 --> 00:21:22.830
Level 1 that you just move you over there nice dramatic awesome check that works from a gameplay point

376
00:21:22.830 --> 00:21:23.100
of view.

377
00:21:27.690 --> 00:21:29.780
Yeah that's pretty tense.

378
00:21:29.910 --> 00:21:33.900
Also we now have guards that can go from destination to destination and check if you're in sight.

379
00:21:34.110 --> 00:21:37.230
Kind of a complicated couple of videos but we've done some great stuff.

380
00:21:37.260 --> 00:21:43.200
So in this video we've looked at how to use get simple path how to move the next points in the path

381
00:21:43.470 --> 00:21:46.140
and how to make path finding what law to take in here.

382
00:21:46.140 --> 00:21:49.110
Don't be afraid to have a bunch of questions but excellent work.

383
00:21:49.170 --> 00:21:50.460
And I'll see you in the next video.
