WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.870
Let's look at the concept off Italian virtual machine and gas in this video.

00:00:04.870 --> 00:00:07.020
If you're a programmer,

00:00:07.020 --> 00:00:10.150
you would have definitely come across this concept of compiling right.

00:00:10.150 --> 00:00:14.420
Any of the smart contracts that are built on Ethereum Blockchain is compared to a lower

00:00:14.420 --> 00:00:16.350
level cold called us up cold.

00:00:16.350 --> 00:00:21.650
So this up court needs to be executed by something in H and every Nordoff,

00:00:21.650 --> 00:00:26.360
the Blockchain to verify the smart contract is true and the transactions that's happening,

00:00:26.360 --> 00:00:26.960
it's valid,

00:00:26.960 --> 00:00:27.550
right?

00:00:27.550 --> 00:00:29.250
So for this,

00:00:29.250 --> 00:00:34.950
we have this concept called this atrium Virtual machine Etienne Virtual Ricin or the Veum

00:00:34.950 --> 00:00:39.440
is the one that runs this up courts to perform the transaction and added to the Blockchain

00:00:39.440 --> 00:00:39.440
.

00:00:39.440 --> 00:00:41.900
If you have used Java,

00:00:41.900 --> 00:00:43.530
we have this Java virtual machine,

00:00:43.530 --> 00:00:47.950
which works in a similar vein that runs the lower level court in the mission.

00:00:47.950 --> 00:00:51.080
So why do we have virtual machines in general?

00:00:51.080 --> 00:00:56.270
It's that if I'm running this program in the mat book or if I'm running it in clinics or

00:00:56.270 --> 00:00:56.850
windows,

00:00:56.850 --> 00:01:01.240
this program execution by the machine should not be affected by the OS.

00:01:01.240 --> 00:01:04.180
Are the configuration off the system in which it is running?

00:01:04.180 --> 00:01:09.780
It needs to provide a level of abstraction between the system in which it is running on the

00:01:09.780 --> 00:01:11.450
actual running off the court itself.

00:01:11.450 --> 00:01:14.020
The Ethereum nodes are different.

00:01:14.020 --> 00:01:18.800
A number Let's say there's ago Ethereum nor called get are there is a parity.

00:01:18.800 --> 00:01:20.530
Norwich is based on vital,

00:01:20.530 --> 00:01:25.090
So these are different types of plans that bacterium can be run on.

00:01:25.090 --> 00:01:26.790
I respect you off.

00:01:26.790 --> 00:01:27.860
If you have a great area,

00:01:27.860 --> 00:01:28.770
more parity.

00:01:28.770 --> 00:01:33.680
It should not affect the execution of this month contracts as off course in your machine.

00:01:33.680 --> 00:01:37.680
That is the reason we're separating virtual machines on the actual system.

00:01:37.680 --> 00:01:41.210
There is also the problem off private face.

00:01:41.210 --> 00:01:43.780
If I am running a tedium lord in my laptop,

00:01:43.780 --> 00:01:47.360
and I want to execute the concept of smart contracts in my laptop,

00:01:47.360 --> 00:01:52.750
what if there is a smart contract which steals my private daytime vice from my laptop?

00:01:52.750 --> 00:01:54.610
That shouldn't be a case,

00:01:54.610 --> 00:01:56.500
and hence I want a virtual machine,

00:01:56.500 --> 00:01:58.670
which is abstracted from my machine itself.

00:01:58.670 --> 00:02:00.170
Also,

00:02:00.170 --> 00:02:03.400
if there is a malware or virus that is there in my system,

00:02:03.400 --> 00:02:05.470
that shouldn't affect the Italian note on.

00:02:05.470 --> 00:02:05.910
Hence,

00:02:05.910 --> 00:02:07.400
because of all these tricks,

00:02:07.400 --> 00:02:11.350
we have this concept of Ethereum virtual machine which runs on the up course.

00:02:11.350 --> 00:02:14.200
Next we look at the concept of gas.

00:02:14.200 --> 00:02:21.740
So what is gas in the Ethereum Blockchain whenever you execute a smart contract that is

00:02:21.740 --> 00:02:25.400
changing something in the Blockchain and that becomes a plant section of the Blockchain?

00:02:25.400 --> 00:02:28.690
Until for any transaction that happens in a Blockchain,

00:02:28.690 --> 00:02:30.550
we need to pay something to the miners.

00:02:30.550 --> 00:02:35.280
Any programming language that as a for loop on my look or an if condition,

00:02:35.280 --> 00:02:36.470
which does not work well,

00:02:36.470 --> 00:02:38.380
there might be a possibility off.

00:02:38.380 --> 00:02:40.290
Infinite loops are inefficient.

00:02:40.290 --> 00:02:40.640
Cool.

00:02:40.640 --> 00:02:46.400
Let's say you are using an indigent variable in a place where you need to only use bullion

00:02:46.400 --> 00:02:46.400
.

00:02:46.400 --> 00:02:50.980
This will all be a storage or the transaction in the Italian Blockchain,

00:02:50.980 --> 00:02:54.780
so we don't want developers to write inefficient cool.

00:02:54.780 --> 00:02:59.640
We wanted to be very cautious when they're choosing the variables on when they are writing

00:02:59.640 --> 00:03:01.670
loops or any of conditions as well.

00:03:01.670 --> 00:03:05.070
That's why we have the solution called us.

00:03:05.070 --> 00:03:10.380
Guess gas is nothing but the amount that we pay to the Italian Blockchain for every

00:03:10.380 --> 00:03:13.920
transaction or every storage that we are doing In the Italian Blockchain,

00:03:13.920 --> 00:03:15.820
for example,

00:03:15.820 --> 00:03:18.390
addition takes three gas multiplication,

00:03:18.390 --> 00:03:19.450
takes three Yes.

00:03:19.450 --> 00:03:21.590
And just like transaction fees,

00:03:21.590 --> 00:03:24.180
I can descend upon what eater place?

00:03:24.180 --> 00:03:27.190
I am going to paper gas to exit your these transactions.

00:03:27.190 --> 00:03:31.180
Let's say I am doing an audition operation within my smartphone.

00:03:31.180 --> 00:03:36.960
Like I can choose that I'm gonna pay one meter but gas in during May transaction execution

00:03:36.960 --> 00:03:36.960
.

00:03:36.960 --> 00:03:42.340
So the total fees that I'll be paying today three induction will be three Gaspar tradition

00:03:42.340 --> 00:03:43.190
into one meter.

00:03:43.190 --> 00:03:47.180
Reach So three Either will be the amount that I will be paying for the Ethereum Blockchain

00:03:47.180 --> 00:03:47.180
.

00:03:47.180 --> 00:03:51.960
So why do we have this concept of gas in the first place when we have either Already,

00:03:51.960 --> 00:03:54.360
we could very well say addition takes three.

00:03:54.360 --> 00:03:57.610
Either multiplication takes toe to eat or things like that.

00:03:57.610 --> 00:04:04.610
That's because we don't for programmers to face the wall agility that pass in the market to

00:04:04.610 --> 00:04:08.900
rave him and executing an addition Operation I shouldn't take the $100 for it.

00:04:08.900 --> 00:04:09.510
And tomorrow,

00:04:09.510 --> 00:04:11.160
if I'm doing the same operation,

00:04:11.160 --> 00:04:16.250
I pay $1000 for it because the median price has increased five times between today and

00:04:16.250 --> 00:04:16.750
tomorrow.

00:04:16.750 --> 00:04:19.700
That is a problem that we face in the real world.

00:04:19.700 --> 00:04:21.950
And hence they comes to concept of gas.

00:04:21.950 --> 00:04:23.400
So tomorrow,

00:04:23.400 --> 00:04:25.680
even if Italian goes up by five times,

00:04:25.680 --> 00:04:31.050
I can choose to pay the same $200 by reducing my part gas costs when I'm doing the

00:04:31.050 --> 00:04:31.610
transaction.

00:04:31.610 --> 00:04:37.930
This separation between gas and neither is what gives the gas place or any operation placed

00:04:37.930 --> 00:04:40.300
in the smart contracts at a constant level,

00:04:40.300 --> 00:04:45.970
just like we saw block explorers to explore all the blocks in any off the block chance.

00:04:45.970 --> 00:04:47.530
Like Bitcoin or ethereum.

00:04:47.530 --> 00:04:53.100
We also have this website called Us Idiots Gas Station Parking for Let's Take a quick look

00:04:53.100 --> 00:04:54.210
at water choices.

00:04:54.210 --> 00:05:00.480
So when I come toe idiots gas station darting for I can see that the recommended gas praise

00:05:00.480 --> 00:05:01.300
is given here.

00:05:01.300 --> 00:05:03.710
If you want your transaction to be very fast,

00:05:03.710 --> 00:05:07.800
as in you posted in the transaction pool and miners want to picket fast,

00:05:07.800 --> 00:05:09.680
you need to give more transaction fees,

00:05:09.680 --> 00:05:10.110
right,

00:05:10.110 --> 00:05:16.180
so this stays 0.31 part transfer is what you need to pay in terms of gas to make a

00:05:16.180 --> 00:05:17.150
transaction fast.

00:05:17.150 --> 00:05:19.990
The standard and the low prices are also given here.

00:05:19.990 --> 00:05:21.000
If you pick,

00:05:21.000 --> 00:05:22.440
choose the lower value,

00:05:22.440 --> 00:05:26.880
then your transaction will be a bit slower because miners will take some time to pick your

00:05:26.880 --> 00:05:28.250
conceptions from the transaction.

00:05:28.250 --> 00:05:32.680
It also says Eat 25 leaderboard where,

00:05:32.680 --> 00:05:34.730
how much eaters was spent on average,

00:05:34.730 --> 00:05:35.910
the way US devalue.

00:05:35.910 --> 00:05:42.480
Except we can also see in transaction calculator that the gas uses 21,000.

00:05:42.480 --> 00:05:45.020
And if I'm willing to pay 1.1 jiggery,

00:05:45.020 --> 00:05:50.580
then what is the amount of transaction fee in terms of ethereum on the feet place?

00:05:50.580 --> 00:05:51.650
In this calculation,

00:05:51.650 --> 00:05:55.640
I can also see the transaction pools here.

00:05:55.640 --> 00:06:01.180
The gas burners hasn't how much percent a store transaction called they have done.

00:06:01.180 --> 00:06:04.290
Except so it is gas station.

00:06:04.290 --> 00:06:08.550
Daren four gives you more information about the gas that used in the Syrian Blockchain.

00:06:08.550 --> 00:06:10.730
Also,

00:06:10.730 --> 00:06:12.040
there is an excellent sheet.

00:06:12.040 --> 00:06:16.530
I get the link off this in the resources section so you can go through the sheet as well.

00:06:16.530 --> 00:06:22.360
This convinced all the operations X possible in the Syrian virtual machine and also gives

00:06:22.360 --> 00:06:24.150
how much is the gas used for that.

00:06:24.150 --> 00:06:25.660
For addition,

00:06:25.660 --> 00:06:27.160
we take three multiplication,

00:06:27.160 --> 00:06:28.400
five subtraction,

00:06:28.400 --> 00:06:30.310
three division five and so on.

00:06:30.310 --> 00:06:34.000
It acts all off it like andare functions.

00:06:34.000 --> 00:06:36.200
These are all the functions that's possible.

00:06:36.200 --> 00:06:37.220
Our operations.

00:06:37.220 --> 00:06:38.950
That's possible in a smart contract.

00:06:38.950 --> 00:06:44.380
One thing that you might want to keep it in mind.

00:06:44.380 --> 00:06:50.330
Now is that any transaction that you do with the abruption or the smart contract that

00:06:50.330 --> 00:06:52.040
changes the state of the Blockchain?

00:06:52.040 --> 00:06:56.170
You need to pay a guest because that needs to go as a transaction.

00:06:56.170 --> 00:06:56.900
But then,

00:06:56.900 --> 00:07:01.350
if I want to just look at who is the one off a particular house currently,

00:07:01.350 --> 00:07:05.060
then I don't need to pay any gas for that because I'm not changing anything in the

00:07:05.060 --> 00:07:05.420
Blockchain.

00:07:05.420 --> 00:07:07.790
I'm just reading some data from Deduction,

00:07:07.790 --> 00:07:09.270
and that can be done for free.

00:07:09.270 --> 00:07:12.780
Which means if I'm doing that kind of a transaction,

00:07:12.780 --> 00:07:14.300
Vera only leading data.

00:07:14.300 --> 00:07:15.820
I don't need to pay any gas,

00:07:15.820 --> 00:07:18.270
and hence it does not cost me anything to do it.

00:07:18.270 --> 00:07:21.560
So that's it about gas and TV ums.

00:07:21.560 --> 00:07:24.650
We'll look at the double on the double attack in the next video

