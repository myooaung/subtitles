WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.030
Displaying an image on the screen or onto

00:00:03.030 --> 00:00:06.915
the canvas is now a big step towards our application working.

00:00:06.915 --> 00:00:12.060
But the next thing we want to do is to allow the user to click on the file uploader,

00:00:12.060 --> 00:00:14.505
select a image of their choice,

00:00:14.505 --> 00:00:16.785
and then display this to the canvas.

00:00:16.785 --> 00:00:18.900
At the moment, we're just hard coding

00:00:18.900 --> 00:00:23.445
an image source with the image which is inside of our project folder.

00:00:23.445 --> 00:00:26.370
That's what we're going to do now in this video.

00:00:26.370 --> 00:00:31.240
We're going to begin by creating a new FileReader object,

00:00:33.950 --> 00:00:39.160
and then we can store this inside of a constant called reader.

00:00:39.200 --> 00:00:44.045
This FileReader is going to allow us to read contents of files,

00:00:44.045 --> 00:00:48.469
or in our case, the image which is stored on the user's computer.

00:00:48.469 --> 00:00:51.830
This is going to allow us to use the file uploader,

00:00:51.830 --> 00:00:55.280
and this is the input which we added in the HTML.

00:00:55.280 --> 00:01:00.010
We can then select an image and then set this as our image source.

00:01:00.010 --> 00:01:03.260
The first step for this to happen is to go with

00:01:03.260 --> 00:01:08.474
our index and inside here if we take a look for our uploader,

00:01:08.474 --> 00:01:10.865
this has the ID of uploader.

00:01:10.865 --> 00:01:15.340
We're going to use getElementById to select this input,

00:01:15.340 --> 00:01:18.885
and then trigger a function when this is changed.

00:01:18.885 --> 00:01:23.130
Back to our scripts at the bottom,

00:01:23.130 --> 00:01:27.600
we can create a reference to this input called imageLoader,

00:01:28.790 --> 00:01:33.315
grab the ID with getElementById,

00:01:33.315 --> 00:01:36.600
and the ID was uploader.

00:01:36.600 --> 00:01:42.555
We can then select our constant of imageLoader and add an EventListener.

00:01:42.555 --> 00:01:46.170
The event we want to listen out for is the change event,

00:01:46.170 --> 00:01:49.610
and this will occur when a new file has been uploaded.

00:01:49.610 --> 00:01:54.960
When this happens, we are going to create a function called uploadImage.

00:01:55.850 --> 00:02:01.780
Then let's create this function just above, which was uploadImage.

00:02:03.860 --> 00:02:06.980
This uploadImage is also going to get past

00:02:06.980 --> 00:02:10.790
the event information since we're using a input.

00:02:10.790 --> 00:02:12.440
To get started in this function,

00:02:12.440 --> 00:02:18.125
we're going to do a console log and simply output the value of our file reader.

00:02:18.125 --> 00:02:22.700
Let's output our reader, all to the browser,

00:02:22.700 --> 00:02:28.280
right-click and inspect, and we can see what data is passed in the console.

00:02:28.280 --> 00:02:33.810
Choose our file, select any image,

00:02:34.430 --> 00:02:38.575
and then here we can see the output of our file reader.

00:02:38.575 --> 00:02:41.900
Currently, all of our values including the result,

00:02:41.900 --> 00:02:44.085
is set to a value of null.

00:02:44.085 --> 00:02:47.365
This is because although we have a file reader object setup,

00:02:47.365 --> 00:02:50.305
we have not yet passed it our image data.

00:02:50.305 --> 00:02:53.620
The file data comes from our image uploader,

00:02:53.620 --> 00:02:56.545
which is stored inside of this e variable.

00:02:56.545 --> 00:03:01.900
Now let's take a look at the value of e, reload the browser,

00:03:01.900 --> 00:03:04.535
and we can select a new image,

00:03:04.535 --> 00:03:08.410
open this up, this is all of the information

00:03:08.410 --> 00:03:12.205
which is passed to this function about our change event.

00:03:12.205 --> 00:03:14.020
If we then open up the target,

00:03:14.020 --> 00:03:15.565
which is our input,

00:03:15.565 --> 00:03:19.390
click on the arrow, and then scroll down,

00:03:19.390 --> 00:03:21.670
we have this value called files.

00:03:21.670 --> 00:03:27.020
This is a list of all the files which has been uploaded from our file uploader.

00:03:27.020 --> 00:03:30.485
Of course, we have only allowed a single file to be uploaded.

00:03:30.485 --> 00:03:33.275
So this is just going to have the value of zero.

00:03:33.275 --> 00:03:36.230
This is our name, which is bridge.jpg.

00:03:36.230 --> 00:03:40.480
We can now pass this image data to our file reader.

00:03:40.480 --> 00:03:43.425
Remember we access the event,

00:03:43.425 --> 00:03:45.539
we then access the targets,

00:03:45.539 --> 00:03:47.655
we then access the files,

00:03:47.655 --> 00:03:50.440
and the first file of zero.

00:03:50.840 --> 00:03:55.300
Back to our function, we can now target our reader,

00:03:55.300 --> 00:04:00.960
and then we can set this file URL with readAsDataURL.

00:04:01.010 --> 00:04:05.630
Inside of his method, we then pass in the location of our file,

00:04:05.630 --> 00:04:14.105
which was e.targets.files, and the first file which is the index of zero.

00:04:14.105 --> 00:04:16.880
Now let's do a new console log again with

00:04:16.880 --> 00:04:20.360
the value of reader and see what happens this time.

00:04:20.360 --> 00:04:22.160
Remember, last time we did this,

00:04:22.160 --> 00:04:24.155
we got the value of null.

00:04:24.155 --> 00:04:26.525
So open up the console,

00:04:26.525 --> 00:04:29.190
select the new file.

00:04:30.230 --> 00:04:33.195
We have our FileReader object,

00:04:33.195 --> 00:04:35.780
and now inside of this result at the bottom,

00:04:35.780 --> 00:04:39.865
we now have some file data rather than the value of null.

00:04:39.865 --> 00:04:43.290
This FileReader now has all of the data which we need.

00:04:43.290 --> 00:04:47.275
Now, all we need to do is to access our reader,

00:04:47.275 --> 00:04:50.240
and then just like we did above with our image,

00:04:50.240 --> 00:04:54.850
we're also going to trigger a function once this has finished loading.

00:04:54.850 --> 00:04:59.195
This now leaves us in the same position that we had just above here,

00:04:59.195 --> 00:05:01.010
where we have our image source,

00:05:01.010 --> 00:05:03.695
and then we need to load this onto the canvas.

00:05:03.695 --> 00:05:07.055
To do this, we can move the section just here,

00:05:07.055 --> 00:05:10.505
paste this inside of our onload function,

00:05:10.505 --> 00:05:14.330
and now instead of his hard-coded value of bridge.jpg,

00:05:14.330 --> 00:05:17.870
we're now going to set the image source to be equal to the reader and

00:05:17.870 --> 00:05:21.955
also access the result value that we've just seen in the console.

00:05:21.955 --> 00:05:26.630
Now all that's left to do is to save this and test this over in the browser.

00:05:26.630 --> 00:05:31.135
So we choose a file, grab any image,

00:05:31.135 --> 00:05:35.045
and this file is now displayed inside the canvas.

00:05:35.045 --> 00:05:38.010
Hopefully, this is now all working for you too.

00:05:38.010 --> 00:05:39.570
It is quite a bit going on here,

00:05:39.570 --> 00:05:41.530
so let's do a quick recap.

00:05:41.530 --> 00:05:43.615
If we go back to our script.

00:05:43.615 --> 00:05:49.370
First, we grabbed our file input and stored this inside of a constant called imageLoader.

00:05:49.370 --> 00:05:52.240
Add all this way and listen for any changes

00:05:52.240 --> 00:05:55.775
which occurred once a new file has been uploaded.

00:05:55.775 --> 00:05:59.370
This is then going to trigger our uploadImage function,

00:05:59.370 --> 00:06:01.290
which we set just here.

00:06:01.290 --> 00:06:06.955
We created a reader variable which is equal to a new FileReader object.

00:06:06.955 --> 00:06:10.900
This file reader allows us to read the contents of any uploaded file,

00:06:10.900 --> 00:06:13.265
which is images in our case.

00:06:13.265 --> 00:06:16.305
Once this uploadImage function has run,

00:06:16.305 --> 00:06:18.730
it will then get pass the event information,

00:06:18.730 --> 00:06:22.460
which contains the image the user has uploaded.

00:06:22.460 --> 00:06:26.725
This file information is then passed to our FileReader,

00:06:26.725 --> 00:06:31.150
and we do this with a method called readAsDataURL.

00:06:31.150 --> 00:06:34.780
Finally, when all of this has finished and fully loaded,

00:06:34.780 --> 00:06:38.020
we then going to set the image source and then display this

00:06:38.020 --> 00:06:41.425
onto the canvas with our images.

00:06:41.425 --> 00:06:44.170
Now uploading. Next, we're going to learn about how to

00:06:44.170 --> 00:06:47.410
access all the pixels which make up these images.

00:06:47.410 --> 00:06:51.145
Once we then understand about how all pixels make up an image,

00:06:51.145 --> 00:06:55.160
we can then play around with them to create our effects.
