WEBVTT
1
00:00:00.007 --> 00:00:03.004
- [Instructor] Up until now, you might be thinking,

2
00:00:03.004 --> 00:00:07.009
do I need to use a terminal and start learning AWS commands,

3
00:00:07.009 --> 00:00:11.008
just to be able to build a simple AWS lambda?

4
00:00:11.008 --> 00:00:16.002
You could use AWS CLI and a web console to configure and

5
00:00:16.002 --> 00:00:18.001
deploy serverless apps.

6
00:00:18.001 --> 00:00:21.001
However, with AWS toolkit,

7
00:00:21.001 --> 00:00:25.004
it makes it much easier to manage serverless apps straight

8
00:00:25.004 --> 00:00:30.001
from ID with no prior AWS experience.

9
00:00:30.001 --> 00:00:31.006
Start with source code,

10
00:00:31.006 --> 00:00:35.002
and the toolkit will do all the heavy lifting for us.

11
00:00:35.002 --> 00:00:38.009
When it comes to building serverless applications.

12
00:00:38.009 --> 00:00:41.009
It takes care of identification,

13
00:00:41.009 --> 00:00:45.006
debug and run configurations, deployment,

14
00:00:45.006 --> 00:00:50.005
empowering you to spend more time focusing on your code.

15
00:00:50.005 --> 00:00:53.007
It also gives you access to cloudWatch logs,

16
00:00:53.007 --> 00:00:57.009
through the ID, which can be helpful when troubleshooting,

17
00:00:57.009 --> 00:01:01.004
and you can explore other AWS resources

18
00:01:01.004 --> 00:01:04.004
with a built in Explorer.

19
00:01:04.004 --> 00:01:08.006
Amazon also has its own ID called Cloud9,

20
00:01:08.006 --> 00:01:12.003
which is hosted on Amazon, easy to instance,

21
00:01:12.003 --> 00:01:16.009
and you can write, run and debug straight from your browser.

22
00:01:16.009 --> 00:01:19.009
And it already has everything itself.

23
00:01:19.009 --> 00:01:24.006
Here we will be focusing on setting up AWS toolkit with

24
00:01:24.006 --> 00:01:25.008
IntelliJ.

25
00:01:25.008 --> 00:01:29.002
There is also a toolkit available for Eclipse.

26
00:01:29.002 --> 00:01:31.005
If that is the ID of your choice,

27
00:01:31.005 --> 00:01:38.004
check out instructions at aws.amazon.com/eclipse.

28
00:01:38.004 --> 00:01:44.000
AWS toolkit requires installation of AWS CLI,

29
00:01:44.000 --> 00:01:48.000
Docker to debug and run local serverless apps

30
00:01:48.000 --> 00:01:51.001
and AWS SAM CLI,

31
00:01:51.001 --> 00:01:55.006
which is short for serverless application model CLI

32
00:01:55.006 --> 00:01:58.005
as prerequisite.

33
00:01:58.005 --> 00:02:02.007
Assuming you already have AWS CLI, Docker and

34
00:02:02.007 --> 00:02:07.009
IntelliJ installed. Let's set up our plugin and install SAM.

35
00:02:07.009 --> 00:02:10.008
First open IntelliJ,

36
00:02:10.008 --> 00:02:14.000
head off to preferences plugins,

37
00:02:14.000 --> 00:02:18.006
and search for "AWS toolkit".

38
00:02:18.006 --> 00:02:26.005
Once installed, go ahead and let your ID restart.

39
00:02:26.005 --> 00:02:28.008
Notice that on the left side,

40
00:02:28.008 --> 00:02:34.000
we have a new tab called "AWS Explorer" and at the bottom

41
00:02:34.000 --> 00:02:37.004
"AWS configuration settings".

42
00:02:37.004 --> 00:02:41.006
First, we need to connect to our AWS account.

43
00:02:41.006 --> 00:02:43.007
If you have already done the setup

44
00:02:43.007 --> 00:02:46.005
using AWS configure command,

45
00:02:46.005 --> 00:02:49.006
then the toolkit can already use credentials

46
00:02:49.006 --> 00:02:51.006
from that configuration.

47
00:02:51.006 --> 00:02:53.001
If not,

48
00:02:53.001 --> 00:02:55.000
click on AWS,

49
00:02:55.000 --> 00:02:58.000
no credential selected

50
00:02:58.000 --> 00:03:02.002
and choose "edit credentials file".

51
00:03:02.002 --> 00:03:05.000
Click on "create".

52
00:03:05.000 --> 00:03:07.003
In the file, under default,

53
00:03:07.003 --> 00:03:12.009
for AWS access key ID and AWS secret access key,

54
00:03:12.009 --> 00:03:15.009
replace it with the values key and secret

55
00:03:15.009 --> 00:03:21.007
you have obtained while creating an IM development user.

56
00:03:21.007 --> 00:03:23.008
Save and close the file,

57
00:03:23.008 --> 00:03:29.008
and now, click on "region" and choose the default profile.

58
00:03:29.008 --> 00:03:36.008
You should now see AWS resources listed in the AWS Explorer.

59
00:03:36.008 --> 00:03:39.006
Since I don't have anything deployed yet,

60
00:03:39.006 --> 00:03:41.009
all resources are empty.

61
00:03:41.009 --> 00:03:45.001
In order to create our first lambda function,

62
00:03:45.001 --> 00:03:47.007
we need to have SAM installed.

63
00:03:47.007 --> 00:03:51.003
SAM is an open source framework for building serverless

64
00:03:51.003 --> 00:03:56.002
applications, allowing you to model functions, APIs,

65
00:03:56.002 --> 00:04:01.004
databases, and more, using few short lines.

66
00:04:01.004 --> 00:04:05.007
SAM is an extension of cloud formation used to speed up

67
00:04:05.007 --> 00:04:09.006
cloud set up with infrastructure as a code.

68
00:04:09.006 --> 00:04:11.007
If we don't install SAM,

69
00:04:11.007 --> 00:04:15.005
we would need to upload our code and set up all

70
00:04:15.005 --> 00:04:17.006
configuration manually.

71
00:04:17.006 --> 00:04:21.003
SAM requires a Docker container to provide a local

72
00:04:21.003 --> 00:04:25.008
environment that is similar to the AWS lambda environment,

73
00:04:25.008 --> 00:04:29.004
so you can run and debug lambda locally,

74
00:04:29.004 --> 00:04:34.001
make sure to have Docker installed, and check that it is

75
00:04:34.001 --> 00:04:40.002
running by executing "Docker PS" command.

76
00:04:40.002 --> 00:04:44.006
Next, let's install SAM, since I'm using a Mac,

77
00:04:44.006 --> 00:04:47.009
the easiest way is to use home brew.

78
00:04:47.009 --> 00:04:50.006
If you're using windows or Linux,

79
00:04:50.006 --> 00:04:55.008
please check the tutorial on AWS resources.

80
00:04:55.008 --> 00:05:02.009
Type in "brew tap aws/tap",

81
00:05:02.009 --> 00:05:13.006
and then, "brew install aws-sam-cli".

82
00:05:13.006 --> 00:05:15.002
SAM is now installed,

83
00:05:15.002 --> 00:05:19.000
which means we can start with our first exercise.

