WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.920 --> 00:00:03.990
Let me log in and also log out.

00:00:03.990 --> 00:00:05.985
We know by the header up at the top,

00:00:05.985 --> 00:00:08.505
that's how a user state is changing,

00:00:08.505 --> 00:00:11.415
but we also want to be redirected to.

00:00:11.415 --> 00:00:16.920
After we log in, we should be taken to the boards page and I logout,

00:00:16.920 --> 00:00:19.630
should return us back to this login page.

00:00:19.630 --> 00:00:25.425
We also going to add some error messages too when signing in and also logging in,

00:00:25.425 --> 00:00:28.320
so let the user know if their email and password was

00:00:28.320 --> 00:00:33.300
wrong or if the user's email is currently taken when signing up.

00:00:33.300 --> 00:00:35.955
All the in the off context file,

00:00:35.955 --> 00:00:38.895
which is the off context dot js.

00:00:38.895 --> 00:00:42.590
We have all of our user related methods inside here.

00:00:42.590 --> 00:00:46.220
It's going to be in here where we ask the redirects.

00:00:46.220 --> 00:00:50.365
To use redirect, we need to access the react router.

00:00:50.365 --> 00:00:55.280
Let's scroll up to the top and we can pull this from our routes package.

00:00:55.280 --> 00:00:58.775
The package name we want to import is we've router,

00:00:58.775 --> 00:01:00.590
which we've used earlier,

00:01:00.590 --> 00:01:04.500
and we import this from the react router dom.

00:01:05.630 --> 00:01:07.820
Then as we know from early,

00:01:07.820 --> 00:01:10.945
we also need to wrap this component when exporting.

00:01:10.945 --> 00:01:13.820
Let's scroll down to the bottom.

00:01:13.910 --> 00:01:16.899
I'm going to take out our auth provider,

00:01:16.899 --> 00:01:18.515
which we export in here,

00:01:18.515 --> 00:01:20.915
leaving in the consumer.

00:01:20.915 --> 00:01:24.010
Then are they export default above.

00:01:24.010 --> 00:01:27.510
We can then wrap our components with router,

00:01:27.510 --> 00:01:30.235
person in the auth provider.

00:01:30.235 --> 00:01:33.800
Save this file and then over in the app dot js,

00:01:33.800 --> 00:01:35.645
inside of this file about the top,

00:01:35.645 --> 00:01:39.110
we also need to change the import since it's now

00:01:39.110 --> 00:01:44.150
a default export by removing needs surrounding curly braces.

00:01:45.730 --> 00:01:48.380
With this now in place, we can go back to

00:01:48.380 --> 00:01:53.940
our off context and then first we need to setup an off message into states.

00:01:54.050 --> 00:01:56.895
Let's go up to our state's objects.

00:01:56.895 --> 00:01:58.770
Then just after the user,

00:01:58.770 --> 00:02:01.689
we can add a off message.

00:02:01.790 --> 00:02:05.605
Which we're going to set initially to an empty string,

00:02:05.605 --> 00:02:08.540
go down to our sign up method.

00:02:09.470 --> 00:02:12.130
Once a user is signed in,

00:02:12.130 --> 00:02:14.830
we can then redirect to the boards URL,

00:02:14.830 --> 00:02:17.745
which is made up of the user ID.

00:02:17.745 --> 00:02:21.295
After we sign in with the email and password,

00:02:21.295 --> 00:02:23.345
we can access this,

00:02:23.345 --> 00:02:26.715
dot props, dot history,

00:02:26.715 --> 00:02:30.730
dot push to access the push dates of the router.

00:02:30.730 --> 00:02:32.470
Then inside of the back ticks,

00:02:32.470 --> 00:02:34.510
we're going to insert the URL,

00:02:34.510 --> 00:02:36.000
which is forward slash.

00:02:36.000 --> 00:02:39.460
Then as a variable, we can also insert our user ID,

00:02:39.460 --> 00:02:41.050
which is available from this,

00:02:41.050 --> 00:02:45.145
dot state, dot user, dot ID.

00:02:45.145 --> 00:02:49.340
After this, we also need to go to forward slash boards,

00:02:49.340 --> 00:02:52.535
is then going to be the cut section below which receives

00:02:52.535 --> 00:02:57.145
any error messages and we can use the message to set the state.

00:02:57.145 --> 00:02:59.895
Inside here we can remove the comments.

00:02:59.895 --> 00:03:05.360
Then we can set the states and this state is going to be equal to our error message.

00:03:05.360 --> 00:03:12.520
We can set the off message to be equal to error dot message.

00:03:12.560 --> 00:03:17.120
Below this the logging component is going to be exactly the same.

00:03:17.120 --> 00:03:21.530
The first thing we need to do is to cause a redirect to the user's boards.

00:03:21.530 --> 00:03:25.480
We can grab the line of code from the sign up section.

00:03:25.480 --> 00:03:31.110
We can then paste this in after where we sign up with our email and password.

00:03:31.110 --> 00:03:35.465
We can also catch any error messages and set this to state too.

00:03:35.465 --> 00:03:38.155
With this dot set state.

00:03:38.155 --> 00:03:40.565
We can pass in the off message,

00:03:40.565 --> 00:03:45.280
which is again going to be equal to error message.

00:03:45.280 --> 00:03:47.670
Down in the logout method,

00:03:47.670 --> 00:03:49.110
which is below this,

00:03:49.110 --> 00:03:52.805
a logout should cause the user to redirect to the home route,

00:03:52.805 --> 00:03:55.570
which displays the login components.

00:03:55.570 --> 00:03:59.085
After we sign out and set the state,

00:03:59.085 --> 00:04:02.730
we can also redirect with the push methods.

00:04:02.730 --> 00:04:05.820
All we want to do inside here is redirect to

00:04:05.820 --> 00:04:09.640
the forward slash but at least where we catch any errors.

00:04:09.640 --> 00:04:15.090
We can also set the state which is going to update our off message.

00:04:22.120 --> 00:04:26.000
In next step to add our off message from state to

00:04:26.000 --> 00:04:30.080
the provider so it can be used inside of other components.

00:04:30.080 --> 00:04:34.435
After logout, we can also add the off message,

00:04:34.435 --> 00:04:37.365
which is going to be equal to this,

00:04:37.365 --> 00:04:41.160
dot state, dot off message.

00:04:41.160 --> 00:04:43.475
Now I have all of this in place.

00:04:43.475 --> 00:04:48.650
The component we want to use is over in the user form dot js.

00:04:48.650 --> 00:04:51.630
We can find this inside the side bar,

00:04:52.700 --> 00:04:55.260
down in our off consumer.

00:04:55.260 --> 00:04:58.569
We can also pass in this off message.

00:04:58.730 --> 00:05:02.120
There is an off message pass from states.

00:05:02.120 --> 00:05:04.915
It can be displayed just above the form.

00:05:04.915 --> 00:05:09.110
Let's scroll down to our form with the class of sign-up form.

00:05:09.110 --> 00:05:13.399
We can then add a ternary operator inside of the curly braces,

00:05:13.399 --> 00:05:18.060
where we check if there is a off message, if there is,

00:05:18.060 --> 00:05:21.350
we're going to output a span elements which is going to

00:05:21.350 --> 00:05:25.585
output our off message inside of the curly braces.

00:05:25.585 --> 00:05:27.890
If off message is false,

00:05:27.890 --> 00:05:30.725
this means that no message has been set the state,

00:05:30.725 --> 00:05:32.675
so after the colon,

00:05:32.675 --> 00:05:36.205
we can simply set this to be an empty string.

00:05:36.205 --> 00:05:38.715
Now let's save this,

00:05:38.715 --> 00:05:42.515
on to the browser and integral sign of components.

00:05:42.515 --> 00:05:45.140
We can first test this with a wrong email and

00:05:45.140 --> 00:05:49.615
password to check our message is being passed to this components.

00:05:49.615 --> 00:05:55.250
Let's find error inside of the email with the correct password.

00:05:55.250 --> 00:05:58.230
I'll plot the console.

00:05:59.020 --> 00:06:01.675
Let's try to login.

00:06:01.675 --> 00:06:07.175
We get the error inside the console and also the error message on the screen.

00:06:07.175 --> 00:06:11.075
Let me use and know that no user record has been found.

00:06:11.075 --> 00:06:18.180
Let's try adding the email incorrectly or removing a digit from the password, login.

00:06:18.180 --> 00:06:23.510
We again see a error inside the console and then the updated message on the screen.

00:06:23.510 --> 00:06:26.575
Let's correct this and correctly login,

00:06:26.575 --> 00:06:29.510
which then redirects us to the board's view.

00:06:29.510 --> 00:06:32.000
Also passing in the user ID,

00:06:32.000 --> 00:06:35.015
meaning we don't need to type these in each time we login.

00:06:35.015 --> 00:06:40.285
Let's also remove this user ID from the screen since no longer need this.

00:06:40.285 --> 00:06:43.305
This was added over in the home components.

00:06:43.305 --> 00:06:45.405
We go to the home dot js.

00:06:45.405 --> 00:06:47.734
Let's take a look for the span elements,

00:06:47.734 --> 00:06:52.140
which is right at the top here. We can remove this.

00:06:54.140 --> 00:07:00.110
Another case we can handle is a logged in user returning back to the home route,

00:07:00.110 --> 00:07:03.695
is now currently who logged in and then click on the home icon,

00:07:03.695 --> 00:07:06.085
will then taken to the sign up page.

00:07:06.085 --> 00:07:09.200
If we on this page and we also logged in,

00:07:09.200 --> 00:07:12.455
we no longer need to sign in or create an account.

00:07:12.455 --> 00:07:15.215
Instead what we need to do is add a button,

00:07:15.215 --> 00:07:19.250
which is going to redirect the user back to the board's view.

00:07:19.250 --> 00:07:22.730
We can again make use of the ternary operator to

00:07:22.730 --> 00:07:26.295
only show the form if there is no user logged in.

00:07:26.295 --> 00:07:29.780
Let's do this over in Visual Studio Code.

00:07:29.780 --> 00:07:35.620
Lets go to the user form and then the div with the class of a sign-up-wrapper.

00:07:35.620 --> 00:07:37.690
Above this, we're going to again use

00:07:37.690 --> 00:07:42.650
the ternary operator to hide or sign-up form if the user is logged in.

00:07:42.650 --> 00:07:47.695
The first we're going to do is to check if the user ID is not present.

00:07:47.695 --> 00:07:50.170
We can use this with the exclamation mark,

00:07:50.170 --> 00:07:54.925
to check if the user dot ID is not currently set.

00:07:54.925 --> 00:07:58.510
After the question mark, we can then open up our brackets.

00:07:58.510 --> 00:08:02.080
We can then wrap the rest of our sign-up-wrapper by taking these

00:08:02.080 --> 00:08:05.605
two and in brackets close it out in place.

00:08:05.605 --> 00:08:09.380
Then scroll down to the closing div,

00:08:09.800 --> 00:08:12.660
right down to the very bottom.

00:08:12.660 --> 00:08:14.700
After our closing wrapper div,

00:08:14.700 --> 00:08:16.155
we can paste this in.

00:08:16.155 --> 00:08:19.915
We can then ask the second condition after the colon,

00:08:19.915 --> 00:08:21.580
open up the brackets.

00:08:21.580 --> 00:08:24.610
Then this is the case of if the user is logged in.

00:08:24.610 --> 00:08:30.200
We then going to output a button which will redirect the user back to the board's.

00:08:30.200 --> 00:08:33.465
Let's add a H more button inside here.

00:08:33.465 --> 00:08:35.920
A onclick event handler,

00:08:35.920 --> 00:08:38.289
which is going to trigger an inline function.

00:08:38.289 --> 00:08:41.320
Let's set up an error function inside here,

00:08:41.320 --> 00:08:45.075
which we're going to create in a moment called redirects.

00:08:45.075 --> 00:08:48.590
Redirecting is taking the user dot ID,

00:08:48.590 --> 00:08:51.800
and then it takes between the opening and closing elements.

00:08:51.800 --> 00:08:54.385
I've go to my boards.

00:08:54.385 --> 00:08:59.770
This ternary operator will hide the form if the User is not logged in.

00:08:59.770 --> 00:09:01.480
If the user is logged in,

00:09:01.480 --> 00:09:03.730
we're then going to render a button,

00:09:03.730 --> 00:09:07.640
which when clicked, is going to redirect the user to the board's view.

00:09:07.640 --> 00:09:09.505
To do this, we need to create

00:09:09.505 --> 00:09:15.290
this redirect method outside of our render. Let's scroll up.

00:09:15.560 --> 00:09:21.375
Create our redirects, which takes in the user ID,

00:09:21.375 --> 00:09:24.490
set up our function and the only thing is

00:09:24.490 --> 00:09:29.165
redirect method is going to do is to push to a new URL.

00:09:29.165 --> 00:09:34.060
We can access this, dot props, dot history.

00:09:34.060 --> 00:09:37.265
Access the push method.

00:09:37.265 --> 00:09:39.500
Inside the back ticks.

00:09:39.500 --> 00:09:41.985
We can redirect two forward slash,

00:09:41.985 --> 00:09:43.670
add in our variable,

00:09:43.670 --> 00:09:45.865
which is going to be user ID,

00:09:45.865 --> 00:09:48.870
and then forward slash boards.

00:09:48.870 --> 00:09:52.670
Let's save this and go over to our project in the browser.

00:09:52.670 --> 00:09:54.320
Since we're now logged in,

00:09:54.320 --> 00:09:55.730
we can now click on this button,

00:09:55.730 --> 00:09:57.230
I'll go to my boards.

00:09:57.230 --> 00:10:00.305
This will then redirect us to our user ID,

00:10:00.305 --> 00:10:02.320
followed by the boards.

00:10:02.320 --> 00:10:05.345
As a final redirect for this video,

00:10:05.345 --> 00:10:08.860
we can also work with the home emoji up in the header.

00:10:08.860 --> 00:10:13.265
This always links to the home route but when a user is logged in,

00:10:13.265 --> 00:10:16.265
it would be better to link to the user's boards.

00:10:16.265 --> 00:10:19.740
Let's go over to our header dot js.

00:10:19.940 --> 00:10:22.750
Let's scroll up to our link,

00:10:22.750 --> 00:10:25.015
which is outputs in our emoji.

00:10:25.015 --> 00:10:28.180
As I href, instead of this forward slash,

00:10:28.180 --> 00:10:30.140
I'm going to remove this,

00:10:30.140 --> 00:10:31.890
add in the curly braces.

00:10:31.890 --> 00:10:33.495
We can make this dynamic.

00:10:33.495 --> 00:10:35.830
Then inside here we can also make use of

00:10:35.830 --> 00:10:40.800
the ternary operator to check if the User dot ID is present.

00:10:40.800 --> 00:10:43.865
If is inside of the back ticks,

00:10:43.865 --> 00:10:46.565
we then want to again redirect to the boards,

00:10:46.565 --> 00:10:48.275
which is forward slash,

00:10:48.275 --> 00:10:52.420
we then pass in the user dot ID,

00:10:52.420 --> 00:10:55.830
followed by forward slash boards.

00:10:55.830 --> 00:11:00.140
Afterwards, we can also add the else condition and then redirect to

00:11:00.140 --> 00:11:05.390
the forward slash route if the user is not logged in. Let's try this out.

00:11:05.390 --> 00:11:08.299
If we now save, alter the projects,

00:11:08.299 --> 00:11:11.290
we now logged in, let's click on the emoji.

00:11:11.290 --> 00:11:13.965
We redirected to our boards.

00:11:13.965 --> 00:11:18.035
If we now log out would then take into the sign-up form.

00:11:18.035 --> 00:11:22.195
This emoji will still redirect us to this home routes.

00:11:22.195 --> 00:11:25.080
These user redirects a something which will

00:11:25.080 --> 00:11:29.340
benefit the user when navigating around our app.
