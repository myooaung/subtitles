WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.110 --> 00:00:04.080
In the last video, we displayed each board item by

00:00:04.080 --> 00:00:07.560
leaping through and I'll put in the HTML elements.

00:00:07.560 --> 00:00:10.800
Now we are going to replace these three elements,

00:00:10.800 --> 00:00:12.795
which was the board ID,

00:00:12.795 --> 00:00:17.640
the board [inaudible] and the background color with a board components.

00:00:17.640 --> 00:00:21.195
If we go over to the app.js,

00:00:21.195 --> 00:00:25.170
we already have the board components imported at the top of the file.

00:00:25.170 --> 00:00:30.750
So now we can use this in side of the map method in place of all the existing code.

00:00:30.750 --> 00:00:33.750
Rather than this surround DIV,

00:00:33.750 --> 00:00:35.610
we can replace this.

00:00:35.610 --> 00:00:37.170
Then inside the map method,

00:00:37.170 --> 00:00:39.930
we're going to simply output the board.

00:00:39.930 --> 00:00:43.660
If I now save this and go over to the browser,

00:00:43.670 --> 00:00:46.355
there is quite a lot going on here.

00:00:46.355 --> 00:00:50.105
So we can clean up the board components to simplify things.

00:00:50.105 --> 00:00:53.150
So let's go to the board.js,

00:00:53.150 --> 00:00:55.670
currently I'll put in the title.

00:00:55.670 --> 00:01:03.275
Then two list components at your place is just with the title of board components.

00:01:03.275 --> 00:01:05.045
If we save this,

00:01:05.045 --> 00:01:09.620
things become a lot more clearer since we're now output in our three boards.

00:01:09.620 --> 00:01:12.760
One for each item in our sample data.

00:01:12.760 --> 00:01:18.449
In the app.js, just because we have this board components nested inside,

00:01:18.449 --> 00:01:22.945
this doesn't mean inherits all of the data which it needs.

00:01:22.945 --> 00:01:27.325
We have to pass any data to the board using props,

00:01:27.325 --> 00:01:31.115
props is a way we pass data to child components,

00:01:31.115 --> 00:01:35.080
i.e, props always get passed down the component tree.

00:01:35.080 --> 00:01:38.635
This is one of the golden rules of react.

00:01:38.635 --> 00:01:41.305
We've pass down data as a prop,

00:01:41.305 --> 00:01:44.420
with state we always lift it up,

00:01:44.420 --> 00:01:48.535
meaning if we had a state which is shared by two components,

00:01:48.535 --> 00:01:52.330
we always lift the state up to a parent component.

00:01:52.330 --> 00:01:55.990
So both components can then have access to it.

00:01:55.990 --> 00:02:02.335
We passed on props just like a HTML attributes and then give it a name and a value.

00:02:02.335 --> 00:02:05.530
So for example, we want to pass our props from

00:02:05.530 --> 00:02:08.720
this board information to this board components.

00:02:08.720 --> 00:02:13.260
We can add the attributes and we're going to set this prop name to the board.

00:02:13.260 --> 00:02:15.410
The data we want to pass is going to be in

00:02:15.410 --> 00:02:20.350
the curly braces and that this is going to be the board data from our map.

00:02:20.350 --> 00:02:22.770
Let's add board into here,

00:02:22.770 --> 00:02:24.390
give this a save.

00:02:24.390 --> 00:02:29.259
We can then access the board prop inside of the board components.

00:02:29.259 --> 00:02:32.055
So head over to the board.js.

00:02:32.055 --> 00:02:35.150
The way we access this is very similar to what we did with

00:02:35.150 --> 00:02:39.349
states rather than [inaudible] state inside the curly braces,

00:02:39.349 --> 00:02:42.920
we access the props with this top props.

00:02:42.920 --> 00:02:47.890
The name of the prop which you pass down was the board.

00:02:47.890 --> 00:02:50.805
So this top props to board.

00:02:50.805 --> 00:02:53.690
Then we have access to the board title,

00:02:53.690 --> 00:02:56.390
just like we did before in the last video.

00:02:56.390 --> 00:02:59.900
With the browser, we now see our three board titles,

00:02:59.900 --> 00:03:02.765
of course, house, and garden ideas.

00:03:02.765 --> 00:03:07.220
We can also pass props down more than one component level 2.

00:03:07.220 --> 00:03:09.535
We'll cover this very soon.

00:03:09.535 --> 00:03:14.465
Now I want to put this into practice a bit more by creating the homepage,

00:03:14.465 --> 00:03:17.675
which will display a board preview components.

00:03:17.675 --> 00:03:20.270
Take any look at the final project.

00:03:20.270 --> 00:03:22.315
This is what we are going to be creating.

00:03:22.315 --> 00:03:27.770
There will be a board preview components for each one of the boards on the screen.

00:03:27.770 --> 00:03:32.350
Then if we click on this, it will be taken to the full board view.

00:03:32.350 --> 00:03:38.240
Let's create this inside of a new component folder, open sidebar.

00:03:38.240 --> 00:03:43.805
We can organize the components by creating a Pages folder inside here.

00:03:43.805 --> 00:03:48.095
As in this Pages folder has no difference on our components.

00:03:48.095 --> 00:03:52.060
The only change we need to make is the file path when importing.

00:03:52.060 --> 00:03:53.810
Inside of this pages folder,

00:03:53.810 --> 00:03:55.745
I'm going to create our file,

00:03:55.745 --> 00:04:00.145
the view [inaudible] scene and call this home.js.

00:04:00.145 --> 00:04:05.205
Home is also a component too but since this is going to be a page view,

00:04:05.205 --> 00:04:08.760
I've added this to the Pages folder to keep things more organized.

00:04:08.760 --> 00:04:17.735
Now we can go ahead and create our components by importing react from 'react'.

00:04:17.735 --> 00:04:21.900
This is also going to be a class components,

00:04:22.060 --> 00:04:27.215
which is going to extend React.Components.

00:04:27.215 --> 00:04:33.925
The curly braces, this needs the render method,

00:04:33.925 --> 00:04:37.960
which is going to return sum JSX.

00:04:38.150 --> 00:04:44.130
All I'm going to add for now is a level 1 heading with a title of home.

00:04:44.130 --> 00:04:47.600
The final thing to do down at the bottom of the file is to

00:04:47.600 --> 00:04:51.550
also export this with the export defaults.

00:04:51.550 --> 00:04:53.925
The name of our class, which is Home.

00:04:53.925 --> 00:04:55.180
This home components.

00:04:55.180 --> 00:04:57.680
If we take a look at the finish view,

00:04:57.680 --> 00:05:01.405
is going to be wrapper for all of these board previews.

00:05:01.405 --> 00:05:07.595
It's then going to pass down the props for the board title and also the background color.

00:05:07.595 --> 00:05:11.405
So first we need to create the board preview components,

00:05:11.405 --> 00:05:14.135
which will be used for each one of these items.

00:05:14.135 --> 00:05:17.075
Let's create a new file in the sidebar.

00:05:17.075 --> 00:05:18.800
This is not in the pages,

00:05:18.800 --> 00:05:21.665
this is just straight in to the components.

00:05:21.665 --> 00:05:28.210
Now this is going to be the BoardPreview.js.

00:05:28.210 --> 00:05:31.140
This is also a class-based components.

00:05:31.140 --> 00:05:38.700
So let's import Reacts from 'react', creates our class.

00:05:38.700 --> 00:05:42.340
This one is called the BoardPreview.

00:05:42.590 --> 00:05:51.640
So extends React.components, pass in the render method.

00:05:52.580 --> 00:05:56.015
Then return our GIS X code,

00:05:56.015 --> 00:06:01.610
which for now is going to be a simple P elements of board preview.

00:06:01.610 --> 00:06:06.899
Then at the bottom, let's not forget to export default,

00:06:07.700 --> 00:06:12.030
our class name of board preview.

00:06:12.030 --> 00:06:15.770
Then once you're done, give this file a safe.

00:06:15.770 --> 00:06:21.400
So we now have a situation where we need to pass down our props down two levels.

00:06:21.400 --> 00:06:25.110
Our state is stored in the app.js.

00:06:25.110 --> 00:06:28.880
We'll then it's passes data down to the home components,

00:06:28.880 --> 00:06:30.520
which is this wrapper.

00:06:30.520 --> 00:06:34.700
Then from the home component down to each one of these ball previews.

00:06:34.700 --> 00:06:37.370
Luckily, this is not too difficult to do.

00:06:37.370 --> 00:06:40.990
The first step is to actually display the home components.

00:06:40.990 --> 00:06:43.220
If you go to the app.js,

00:06:43.220 --> 00:06:47.240
we can first import the home component which we

00:06:47.240 --> 00:06:54.765
created from our file path, which is./components.

00:06:54.765 --> 00:06:58.790
Remember this is also in the Pages folder and the name of

00:06:58.790 --> 00:07:03.560
home down in the return section of our render method.

00:07:03.560 --> 00:07:08.370
We can also replace all of this with the home components.

00:07:08.540 --> 00:07:13.155
As we check, this is displaying in our projects.

00:07:13.155 --> 00:07:15.450
So now we see the home components.

00:07:15.450 --> 00:07:17.805
The next step is the pass this home components,

00:07:17.805 --> 00:07:19.605
these state of boards,

00:07:19.605 --> 00:07:21.915
so we can do this via props.

00:07:21.915 --> 00:07:26.800
The board is going to be equal to this.state.boards.

00:07:27.290 --> 00:07:31.695
So this is our props now pass down one level.

00:07:31.695 --> 00:07:34.395
Let's go over to the home.js,

00:07:34.395 --> 00:07:36.960
where we can now access these props.

00:07:36.960 --> 00:07:42.045
The next stage is the pass down from his home components to the board preview.

00:07:42.045 --> 00:07:46.910
The first thing we need to do is to actually import the board preview.

00:07:49.040 --> 00:07:52.965
This just lives inside of the components folder.

00:07:52.965 --> 00:07:58.140
We can access this with dot dot slash and then ball preview.

00:07:58.140 --> 00:08:00.480
Down in the random effort,

00:08:00.480 --> 00:08:03.255
we could simply output the board preview.

00:08:03.255 --> 00:08:05.970
But remember we do have multiple boards.

00:08:05.970 --> 00:08:08.955
In our case, we have three starred into states.

00:08:08.955 --> 00:08:12.315
Therefore, we need to map through this data

00:08:12.315 --> 00:08:16.290
and then output a ball preview component for each one.

00:08:16.290 --> 00:08:21.480
Just like before, we use this top props, the boards.

00:08:21.480 --> 00:08:25.750
Since there is three of them, we're going to call the JavaScript map method.

00:08:25.750 --> 00:08:31.515
For each one, we're going to get a key which we use in just a moment.

00:08:31.515 --> 00:08:35.110
But first, let's output the board preview.

00:08:35.660 --> 00:08:40.065
Each item is stored inside of this key variable,

00:08:40.065 --> 00:08:45.915
which we can now use as a key and imposter each individual board as a prop.

00:08:45.915 --> 00:08:49.620
As we know from before, we also need to pass these key as

00:08:49.620 --> 00:08:54.150
an attribute and set this equal to our variable of key.

00:08:54.150 --> 00:08:57.090
Then we need to pass down the individual bond to

00:08:57.090 --> 00:09:02.130
this board preview that's at this on a separate lines so it's more readable.

00:09:02.130 --> 00:09:06.525
We can pass down the individual board and we can access is

00:09:06.525 --> 00:09:11.225
with this dot props, dot boards.

00:09:11.225 --> 00:09:15.125
This is accessing all the boards which we received via props.

00:09:15.125 --> 00:09:20.650
We can then pass in a key to get the individual board from the boards array.

00:09:20.650 --> 00:09:24.435
Remember that this key is each individual item.

00:09:24.435 --> 00:09:26.490
The first time we lived through the boards,

00:09:26.490 --> 00:09:30.285
it will then output a board components or a board preview,

00:09:30.285 --> 00:09:32.700
and then pass the individual board.

00:09:32.700 --> 00:09:34.845
It will then live through the second one,

00:09:34.845 --> 00:09:41.070
also outputs a second board preview and then also pass the second board as a prop.

00:09:41.070 --> 00:09:44.355
It will enter this for each item in our array.

00:09:44.355 --> 00:09:49.740
Now if we say this, we can now go to the board preview and make use of this board prop.

00:09:49.740 --> 00:09:53.820
The [inaudible] inside, let's return statements.

00:09:53.820 --> 00:09:56.535
We can remove the hard-coded board preview.

00:09:56.535 --> 00:10:00.015
We can then access this dot props,

00:10:00.015 --> 00:10:04.485
the board prop and then we can access the board title.

00:10:04.485 --> 00:10:07.020
Let's save this and refresh before we go any

00:10:07.020 --> 00:10:11.535
further and we'll see in the console we have an error.

00:10:11.535 --> 00:10:15.465
We have no unexpected token in the home dot js.

00:10:15.465 --> 00:10:17.145
Back over to the home.

00:10:17.145 --> 00:10:22.560
This is because in our returns section we are putting in two adjacent components.

00:10:22.560 --> 00:10:26.650
Slight remove this and surrounded in a div.

00:10:26.650 --> 00:10:32.795
But remember, reacts will only allow us to have one parent item as a rapper.

00:10:32.795 --> 00:10:35.600
At the end of the result section,

00:10:35.600 --> 00:10:40.410
we can close this off, reload.

00:10:40.910 --> 00:10:47.535
This now gives us a error message of "Cannot read property title of undefined."

00:10:47.535 --> 00:10:52.005
Why can we not read the title inside of our components?

00:10:52.005 --> 00:10:53.505
The board preview.

00:10:53.505 --> 00:10:56.010
This is this line of code just here.

00:10:56.010 --> 00:10:58.830
Well, the reason this is happening is because although

00:10:58.830 --> 00:11:03.435
all boards in these sample data are stored as an array,

00:11:03.435 --> 00:11:07.110
each individual board is stored as an object,

00:11:07.110 --> 00:11:10.455
so we have in-state an array of objects.

00:11:10.455 --> 00:11:15.840
If we go to the home components inside here we use.map method.

00:11:15.840 --> 00:11:18.210
Map is an array method.

00:11:18.210 --> 00:11:21.675
What we are trying to use it here on a board, objects.

00:11:21.675 --> 00:11:23.730
To fix these we can wrap this.

00:11:23.730 --> 00:11:29.580
props.boards which is an objects in the object.keys method.

00:11:29.580 --> 00:11:37.620
Let's cut this.props,.boards and then we can use objects.keys.

00:11:37.620 --> 00:11:41.355
Then inside of the brackets we can paste this back in.

00:11:41.355 --> 00:11:46.020
Object.keys is a object method which will pull out

00:11:46.020 --> 00:11:50.535
all of the object's property names and then return an array.

00:11:50.535 --> 00:11:55.590
Here we are basically converting this object data to being array.

00:11:55.590 --> 00:12:01.260
Therefore, we can use the.map method and everything you should now work as intended.

00:12:01.260 --> 00:12:05.145
This object.keys is a regular JavaScript method.

00:12:05.145 --> 00:12:08.365
Again, nothing specific to react.

00:12:08.365 --> 00:12:12.320
Now if we save this file and go back over to the browser,

00:12:12.320 --> 00:12:14.615
this error now goes away,

00:12:14.615 --> 00:12:17.015
good and things and are working correctly.

00:12:17.015 --> 00:12:19.100
We've passed the board state down

00:12:19.100 --> 00:12:23.200
two levels and then I'll put the title in the board preview.

00:12:23.200 --> 00:12:26.775
We now ask a stage where we have nested components.

00:12:26.775 --> 00:12:30.435
Uncommonly, all we can see is plain text in the browser.

00:12:30.435 --> 00:12:32.700
Without having a router in place,

00:12:32.700 --> 00:12:35.415
a switch between our pages or components.

00:12:35.415 --> 00:12:40.615
It can become hard to visualize exactly what is going on with our components.

00:12:40.615 --> 00:12:44.150
To help with this, we can use the React Developer Tools,

00:12:44.150 --> 00:12:47.710
which is available for Chrome and Firefox.

00:12:47.710 --> 00:12:52.710
If you have installed them early in the course when setting things up, great.

00:12:52.710 --> 00:12:54.540
If not, go ahead and search for

00:12:54.540 --> 00:13:00.010
the reactive tools and add the extension for Chrome or Firefox.

00:13:00.080 --> 00:13:05.640
Once this is done, you'll be able to right click and then inspect and

00:13:05.640 --> 00:13:10.725
now we should see the react developer tools available to select, so click on this.

00:13:10.725 --> 00:13:15.090
The React developer tools is something which we will use quite a lot for this course.

00:13:15.090 --> 00:13:17.085
We'll get lots more practice.

00:13:17.085 --> 00:13:20.085
We can see currently in the component tree,

00:13:20.085 --> 00:13:22.095
we have the main app wrapper.

00:13:22.095 --> 00:13:25.035
We can open this up and then inside we have

00:13:25.035 --> 00:13:28.904
a surrounding div which will contain our home components.

00:13:28.904 --> 00:13:32.400
This is exactly what we see in the app.js.

00:13:32.400 --> 00:13:34.410
We have our components,

00:13:34.410 --> 00:13:39.000
we have our div and then we have our home component nested inside,

00:13:39.000 --> 00:13:41.865
which is passing down the boards as props.

00:13:41.865 --> 00:13:45.345
We can also see the props inside the developer tools.

00:13:45.345 --> 00:13:47.805
If we click on the home components,

00:13:47.805 --> 00:13:50.835
we see we're passing down the boards as props,

00:13:50.835 --> 00:13:53.190
which is an array with three items.

00:13:53.190 --> 00:13:57.780
We can inspect this and see all the information for each item.

00:13:57.780 --> 00:14:00.570
We see that a lot, these boards are an array.

00:14:00.570 --> 00:14:03.105
These individual items are an object,

00:14:03.105 --> 00:14:08.340
which is why we needed to convert each item with object.keys.

00:14:08.340 --> 00:14:10.770
If we open up the home wrapper,

00:14:10.770 --> 00:14:14.340
we then see inside each of the board previews.

00:14:14.340 --> 00:14:19.875
They also have the key to allow to react to correctly update each list item.

00:14:19.875 --> 00:14:24.360
We can select these and we also see the props which are passed down.

00:14:24.360 --> 00:14:28.995
This is an object with the individual board where we can access the background,

00:14:28.995 --> 00:14:30.990
the ID and the title.

00:14:30.990 --> 00:14:36.450
It says title, which we've used to output the browser, as well as props.

00:14:36.450 --> 00:14:38.790
If you go to the main app components,

00:14:38.790 --> 00:14:43.110
we also see the state which is component holds and this is the information

00:14:43.110 --> 00:14:48.195
which you pull in from the sample data and then pass down via props.

00:14:48.195 --> 00:14:51.330
These developer tools are really useful and

00:14:51.330 --> 00:14:54.180
we'll make use of these as we go through the course.

00:14:54.180 --> 00:14:57.555
Next up, we're going to stick with the subjective props

00:14:57.555 --> 00:15:02.020
and take a look at how we can pass methods between components.
