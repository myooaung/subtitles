WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:02.180 --> 00:00:06.750
The formed out new card is going to be similar to the last video,

00:00:06.750 --> 00:00:08.820
so we'll get a little bit more practice using

00:00:08.820 --> 00:00:12.570
graphs and also pushing to all states object.

00:00:12.570 --> 00:00:18.465
This will be the new card inputs we see at the bottom of each of these three lists,

00:00:18.465 --> 00:00:22.380
minimum connected in the least components on this cards.

00:00:22.380 --> 00:00:25.380
Let's head over to the list.js.

00:00:25.380 --> 00:00:29.445
Inside of the list components and underneath our current section,

00:00:29.445 --> 00:00:31.515
we can also add a new form,

00:00:31.515 --> 00:00:36.330
so just under our loop and also still within this surrounding div,

00:00:36.330 --> 00:00:38.800
we can then add a form.

00:00:38.800 --> 00:00:42.615
The form is going to have a on submit method,

00:00:42.615 --> 00:00:48.530
which is going to be equal to the value of this.createNewCard.

00:00:49.760 --> 00:00:57.910
We can also add a class name and set this to new-card-wrapper.

00:00:59.420 --> 00:01:03.490
Also add this to the on-line, so it's more clear.

00:01:05.110 --> 00:01:07.270
Now inside of this form,

00:01:07.270 --> 00:01:09.850
we can go ahead and add our one and our input,

00:01:09.850 --> 00:01:12.595
just like we did when adding a new list.

00:01:12.595 --> 00:01:16.790
The input is going to have the type of text.

00:01:16.850 --> 00:01:21.885
Let's close this off, and on a new line we can add the type.

00:01:21.885 --> 00:01:28.095
After this, this is also going to have the name and this is equal to name,

00:01:28.095 --> 00:01:30.470
and then finally a placeholder,

00:01:30.470 --> 00:01:33.890
which just like the last video is going to be a plus symbol,

00:01:33.890 --> 00:01:36.955
and then the text of new card.

00:01:36.955 --> 00:01:40.215
This is all we need to do for our form.

00:01:40.215 --> 00:01:42.450
This will also need a ref too,

00:01:42.450 --> 00:01:45.810
so we can create this at the top of our class.

00:01:46.490 --> 00:01:51.820
Just above our random effort we can add our nameInput,

00:01:52.010 --> 00:01:56.910
answer this to React.createRef.

00:01:56.910 --> 00:02:02.145
We then need to grab this nameInput and add this to our form.

00:02:02.145 --> 00:02:05.540
Inside the input as an attribute we can add the ref,

00:02:05.540 --> 00:02:07.265
just like we've used before,

00:02:07.265 --> 00:02:11.090
and so it's to the value of this.nameInput ,

00:02:11.090 --> 00:02:15.270
linking the value of this input to our ref.

00:02:15.270 --> 00:02:17.660
At the moment for simplicity our cards are

00:02:17.660 --> 00:02:21.110
contained inside of the lists in the sample data.

00:02:21.110 --> 00:02:23.060
Soon all the boards,

00:02:23.060 --> 00:02:26.900
lists and also the cards will also be independence,

00:02:26.900 --> 00:02:29.650
and then we link these via IDs.

00:02:29.650 --> 00:02:35.455
We can begin this process by adding the current card states inside the E2.

00:02:35.455 --> 00:02:38.360
Up at the top of these components,

00:02:38.360 --> 00:02:40.749
we can create our state object,

00:02:40.749 --> 00:02:46.180
and this state is going to be responsible for storing the current cards.

00:02:46.180 --> 00:02:48.140
At the moment though, this is

00:02:48.140 --> 00:02:52.070
the initial state which is going to be set to an empty array,

00:02:52.070 --> 00:02:55.430
and the process of creating a new card is

00:02:55.430 --> 00:02:59.405
very similar to the last video when we added a new list.

00:02:59.405 --> 00:03:02.510
All we need to do is go below our ref

00:03:02.510 --> 00:03:07.405
outside of our random effort and then we can create a new card,

00:03:07.405 --> 00:03:13.675
and remember this name most link up with the method which we are added on submit,

00:03:13.675 --> 00:03:20.145
so "create new card" is going to be a function which is going to take in the event info.

00:03:20.145 --> 00:03:23.285
We'll set up our arrow function just like this.

00:03:23.285 --> 00:03:29.825
We can then prevent the default behavior to stop the browser from reloading,

00:03:29.825 --> 00:03:31.600
then creates our card.

00:03:31.600 --> 00:03:36.880
We can store this card inside of a constant and save this to an object.

00:03:36.880 --> 00:03:39.915
The card object is going to have the text,

00:03:39.915 --> 00:03:42.505
the list ID which is linked to,

00:03:42.505 --> 00:03:44.374
an array of labels,

00:03:44.374 --> 00:03:47.215
and also the date which it was created out.

00:03:47.215 --> 00:03:52.805
First of all, the text which is for this card we can grab from our refs.

00:03:52.805 --> 00:03:55.445
This is stored inside of nameInput,

00:03:55.445 --> 00:04:00.730
and once again we can grab the value with.currrent.value.

00:04:00.730 --> 00:04:03.315
Separated with the comma,

00:04:03.315 --> 00:04:08.170
we can also link this to a list by adding a listId.

00:04:08.170 --> 00:04:13.970
Later on in this course, this listId will be automatically placed in follows,

00:04:13.970 --> 00:04:17.045
but for now we can add any value inside here.

00:04:17.045 --> 00:04:20.975
Next to up a card will also need an array of labels,

00:04:20.975 --> 00:04:24.200
so let's set this to an initial empty array,

00:04:24.200 --> 00:04:26.590
and also the createdAt,

00:04:26.590 --> 00:04:30.125
which is going to be equal to a new JavaScript date.

00:04:30.125 --> 00:04:33.440
Below this object, we can also set the states,

00:04:33.440 --> 00:04:37.895
but just before we do this we'll check if the card.text is present,

00:04:37.895 --> 00:04:42.805
which will stop any form inputs from being submitted, which has no value.

00:04:42.805 --> 00:04:46.275
We can then call this.setState,

00:04:46.275 --> 00:04:48.765
as in our objects.

00:04:48.765 --> 00:04:52.260
These states which we want to set is the colored cards,

00:04:52.260 --> 00:04:55.130
so we're going to do what we've done previously.

00:04:55.130 --> 00:04:57.485
Inside this state object we're going to set

00:04:57.485 --> 00:05:02.240
the currentCards by imagining the currentState with the spread operator,

00:05:02.240 --> 00:05:11.060
so this.state.currentCards, then separated by comma will also add in our new card.

00:05:11.060 --> 00:05:16.270
The next thing to do after this is to also reset our form input,

00:05:16.270 --> 00:05:20.040
so let's just add this onto a new line so it's more clear.

00:05:20.410 --> 00:05:25.700
Then below this curly brace for the if statements we can then reset

00:05:25.700 --> 00:05:31.230
the text input box by accessing the ref with nameInput,

00:05:31.370 --> 00:05:37.785
and then set the current.value to be equal to an empty string.

00:05:37.785 --> 00:05:41.080
To check if this is working, we can do a quick console log just

00:05:41.080 --> 00:05:45.290
after this with the string of new card added,

00:05:45.320 --> 00:05:53.310
and we can add onto the end the card.text or to the browser.

00:05:53.310 --> 00:05:57.615
We now have our new card form inputs at the end of each list,

00:05:57.615 --> 00:05:59.895
so let's add anything onto here.

00:05:59.895 --> 00:06:02.985
Let me get new card added and then text.

00:06:02.985 --> 00:06:10.945
Let's try this one, and now these are all working fine.

00:06:10.945 --> 00:06:13.870
I'm going to leave the cards as they are for now,

00:06:13.870 --> 00:06:18.055
since we'll begin the real card data from [inaudible] base in a later section,

00:06:18.055 --> 00:06:21.350
and then linking these cards to each list.
