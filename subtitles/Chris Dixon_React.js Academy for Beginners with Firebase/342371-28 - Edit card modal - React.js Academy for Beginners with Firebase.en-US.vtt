WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.740 --> 00:00:05.265
On the finished version of the project which I have opened here,

00:00:05.265 --> 00:00:09.375
if we click on any of these cards it takes us to a proper modal.

00:00:09.375 --> 00:00:13.380
This modal will allow us to edit the text on the cards,

00:00:13.380 --> 00:00:15.945
and also to add and remove labels too.

00:00:15.945 --> 00:00:20.295
Labels are something which Trello uses as a tagging system.

00:00:20.295 --> 00:00:25.410
As an example if you wanted to visibly see all of our cards which we've completed,

00:00:25.410 --> 00:00:28.725
we may want to add a green label to show this.

00:00:28.725 --> 00:00:33.030
This modal is going to be a new component to handle all of this,

00:00:33.030 --> 00:00:36.985
and this is what we're going to go ahead and create now.

00:00:36.985 --> 00:00:42.035
The styling for the modal has already been provided in the CSS styles,

00:00:42.035 --> 00:00:44.180
which you should have downloaded earlier.

00:00:44.180 --> 00:00:47.960
Just added some basic positioning and styling so

00:00:47.960 --> 00:00:52.145
we can focus on the HTML and JavaScript inside of our component.

00:00:52.145 --> 00:00:55.985
Let's start by creating this over in the components folder.

00:00:55.985 --> 00:01:03.860
Let's create a new file called EditCardModal.js extension.

00:01:03.860 --> 00:01:06.845
This component deals with props but for now,

00:01:06.845 --> 00:01:09.410
I'm just going to create the basic markup,

00:01:09.410 --> 00:01:12.245
and then we'll come back to and edit this soon.

00:01:12.245 --> 00:01:16.080
Let's begin with importing React.

00:01:16.280 --> 00:01:22.785
Then we can create our class base component which is going to be called EditCardModal.

00:01:22.785 --> 00:01:29.230
As ever this is going to extends React.Component.

00:01:29.360 --> 00:01:33.000
Inside here we can set our initial state,

00:01:33.000 --> 00:01:34.804
so it's a bubble object,

00:01:34.804 --> 00:01:39.980
and then the first piece of states which I'm going to add is for the available labels.

00:01:39.980 --> 00:01:45.190
This is going to be an array which is going to contain six different values,

00:01:45.190 --> 00:01:47.905
for the colors which are available to select.

00:01:47.905 --> 00:01:54.645
The first one is a hex value of 80ccff separated by a comma,

00:01:54.645 --> 00:01:58.150
I'm then going to copy and then paste this in five more times,

00:01:58.150 --> 00:02:00.460
to give us six different values.

00:02:00.460 --> 00:02:04.445
This second one, this is going to have the value of 80ffaa.

00:02:04.445 --> 00:02:13.540
The third one, this is going to be f94a1e.

00:02:14.150 --> 00:02:17.950
The third one is going to be ffb3ff.

00:02:19.510 --> 00:02:23.220
Number five is going to be bf00ff.

00:02:24.340 --> 00:02:29.245
The last one is ffad33,

00:02:29.245 --> 00:02:31.370
separated by a comma.

00:02:31.370 --> 00:02:33.590
We can also add a empty array,

00:02:33.590 --> 00:02:36.035
which is for the selectedLabels.

00:02:36.035 --> 00:02:40.925
SelectedLabels will hold each one of these values once a user clicks on them.

00:02:40.925 --> 00:02:43.400
Below this after our states,

00:02:43.400 --> 00:02:46.690
we can add the render method inside here,

00:02:46.690 --> 00:02:50.355
and we can return our jsx.

00:02:50.355 --> 00:02:54.140
First of all this is going to be surrounded in a wrapper,

00:02:54.140 --> 00:02:56.945
which is going to be contained in a div.

00:02:56.945 --> 00:03:01.230
The class name is going to be equal to modal-wrapper.

00:03:02.270 --> 00:03:07.505
Close this off. Inside here we can nest in a second div,

00:03:07.505 --> 00:03:11.580
which will have the class name of modal-body.

00:03:15.470 --> 00:03:19.625
This modal-body is going to have a form section.

00:03:19.625 --> 00:03:23.985
Let's take a look at the finished version, click on one of these.

00:03:23.985 --> 00:03:27.605
This modal is going to have a close button at the top right,

00:03:27.605 --> 00:03:30.920
which when we click on this will return us back to the board view.

00:03:30.920 --> 00:03:32.720
We're going to add a title,

00:03:32.720 --> 00:03:36.610
then we're going to loop through these available labels which you just set the state,

00:03:36.610 --> 00:03:38.250
and then display these.

00:03:38.250 --> 00:03:43.070
After this we'll have a edit area where the user can edit the text for the cards,

00:03:43.070 --> 00:03:47.390
followed by the selected labels which was the second item in our state,

00:03:47.390 --> 00:03:50.890
and then a submit button to save these changes.

00:03:50.890 --> 00:03:55.010
Let's go ahead and construct this now inside of this div.

00:03:55.010 --> 00:04:02.220
First of all inside here we can add a form nested inside.

00:04:02.220 --> 00:04:05.420
We're going to add a div and this is going to be a div

00:04:05.420 --> 00:04:09.320
for the first section which is for the available labels.

00:04:09.320 --> 00:04:11.675
The top of this modal section had

00:04:11.675 --> 00:04:15.380
a cross which a user could click on it to close down the modal.

00:04:15.380 --> 00:04:20.550
We can add this with a HTML entity which is &times;.

00:04:20.560 --> 00:04:23.915
This is also going to have a className,

00:04:23.915 --> 00:04:28.595
to provide the CSS of modal-close.

00:04:28.595 --> 00:04:31.525
Just close down the sidebar to give us some more space,

00:04:31.525 --> 00:04:34.235
and then just after this span,

00:04:34.235 --> 00:04:40.980
a p element which is going to be for the text of add / remove labels.

00:04:41.930 --> 00:04:45.520
This also has a className,

00:04:45.800 --> 00:04:50.020
which is for label-title.

00:04:50.140 --> 00:04:53.210
Just after this title we're then going to loop

00:04:53.210 --> 00:04:55.745
through each one of these items in the array.

00:04:55.745 --> 00:05:00.350
Since it's now JavaScript to open up the curly braces we can access

00:05:00.350 --> 00:05:06.030
the available labels in states with this.state.availableLabels.

00:05:06.030 --> 00:05:08.240
We're then go to map through each one of

00:05:08.240 --> 00:05:14.465
these six values stored on each item inside of this label variable.

00:05:14.465 --> 00:05:22.520
Inside here we can return a HTML span elements for each available label. Close this off.

00:05:22.520 --> 00:05:25.160
The span is going to have a className,

00:05:25.160 --> 00:05:28.145
which is going to be equal to label.

00:05:28.145 --> 00:05:32.755
The key parts of this span element is going to be a style property.

00:05:32.755 --> 00:05:35.740
The style property is going to give the label the background

00:05:35.740 --> 00:05:39.275
color which we have set in state.

00:05:39.275 --> 00:05:43.585
Down just after our label we can set the style,

00:05:43.585 --> 00:05:46.150
open up the double curly braces,

00:05:46.150 --> 00:05:50.210
and in fact lets add this onto it's own line so its more readable.

00:05:50.210 --> 00:05:56.020
Inside the curly braces we can set the background to be equal to the label.

00:05:56.020 --> 00:05:59.635
Then to finish off this div section with a horizontal line,

00:05:59.635 --> 00:06:03.030
so the hr elements just below this div.

00:06:03.030 --> 00:06:04.945
We're then going to add a second div,

00:06:04.945 --> 00:06:07.870
which is going to be for our second section.

00:06:07.870 --> 00:06:10.860
The second section if we click on any of these,

00:06:10.860 --> 00:06:12.995
it's going to be this edit area.

00:06:12.995 --> 00:06:17.179
We're going to have a HTML entity which is going to be this little pencil,

00:06:17.179 --> 00:06:22.075
and then we're also going to have the input where the user can change the card text.

00:06:22.075 --> 00:06:28.120
Let's add this now. This div is going to have a className of edit-area.

00:06:30.920 --> 00:06:36.125
Then the first thing is going to be a span for our HTML entity.

00:06:36.125 --> 00:06:42.190
The className which is edit-icon.

00:06:42.190 --> 00:06:51.600
The HTML entity for the pencil is the &#x270E;.

00:06:52.430 --> 00:06:57.330
After the span we can then add the input which is for the text.

00:06:57.330 --> 00:07:03.040
The input also has a className which is going to be equal to textbox-edit.

00:07:04.250 --> 00:07:07.470
This is all we need now for this section.

00:07:07.470 --> 00:07:12.100
After this text area div we're also going to create a third div section.

00:07:12.100 --> 00:07:16.645
This is going to be for our labels which the user has selected.

00:07:16.645 --> 00:07:19.490
Let's start with a p element which is going to have

00:07:19.490 --> 00:07:23.285
the title of labels, followed by a colon.

00:07:23.285 --> 00:07:26.074
P elements has a className,

00:07:26.074 --> 00:07:30.670
which is going to be equal to label-title.

00:07:30.670 --> 00:07:33.920
Then afterwards we're going to add some JavaScript which

00:07:33.920 --> 00:07:36.440
is going to loop through all of the labels,

00:07:36.440 --> 00:07:38.435
and then display them on the screen.

00:07:38.435 --> 00:07:41.795
For now though I'm just going to add a TODO section,

00:07:41.795 --> 00:07:44.725
and then we'll say display labels,

00:07:44.725 --> 00:07:49.025
comment this section out and then we'll come back to this in a later video.

00:07:49.025 --> 00:07:52.625
The final thing for this form is to add a button.

00:07:52.625 --> 00:07:57.565
This button in is going to submit the form so it needs the type of submit,

00:07:57.565 --> 00:08:00.870
the text of Save changes.

00:08:00.870 --> 00:08:11.050
Then finally for this component we need to export default the name of EditCardModal.

00:08:12.020 --> 00:08:17.565
Let's give this file a save and then we can go over to the card.js component,

00:08:17.565 --> 00:08:19.875
where we can import this new file.

00:08:19.875 --> 00:08:22.605
Up at the very top lets add this,

00:08:22.605 --> 00:08:31.335
which was the EditCardModal from./EditCardModal.

00:08:31.335 --> 00:08:36.485
Scrolling down into our random method we can now output this into the browser.

00:08:36.485 --> 00:08:39.370
Let's do this right at the very end.

00:08:39.370 --> 00:08:44.115
This will be called EditCardModal, close this off.

00:08:44.115 --> 00:08:47.240
Now because we have two elements side-by-side,

00:08:47.240 --> 00:08:52.520
we also need to add this in a fragment, so React.Fragment.

00:08:52.520 --> 00:08:57.695
We can then take the closing tag and add this to the very end.

00:08:57.695 --> 00:09:01.190
If all goes well we should now see this over in the browser.

00:09:01.190 --> 00:09:03.365
If we go to our project,

00:09:03.365 --> 00:09:05.750
and then we need to add a card,

00:09:05.750 --> 00:09:07.340
let's quickly add some lists,

00:09:07.340 --> 00:09:11.885
so abc, refresh and let's add a card,

00:09:11.885 --> 00:09:14.790
1, 2, and then 3.

00:09:16.100 --> 00:09:20.330
We now have some content on the screen we have all of the labels,

00:09:20.330 --> 00:09:21.920
we have the text area,

00:09:21.920 --> 00:09:24.320
and also the label section at the bottom.

00:09:24.320 --> 00:09:28.990
We have the cross to close it down and also the button to save the changes.

00:09:28.990 --> 00:09:32.040
Obviously none of this will work just yet,

00:09:32.040 --> 00:09:35.240
and we also only want to show this when the card is clicked on.

00:09:35.240 --> 00:09:42.245
[inaudible] we can add a Boolean value to our local state over in the card.js.

00:09:42.245 --> 00:09:49.380
Up at the very top we can add some state so it's a bubble object,

00:09:49.380 --> 00:09:54.335
and then we can set the initial state of modalOpen to be false.

00:09:54.335 --> 00:10:00.350
Then below this we can create a new method which will toggle this between true and false.

00:10:00.350 --> 00:10:03.275
Let's call this toggleModal,

00:10:03.275 --> 00:10:06.024
so it's a bubble function,

00:10:06.024 --> 00:10:11.250
and then we can toggle the state with this.setState.

00:10:11.450 --> 00:10:16.070
Inside of our object the state we want to toggle is modalOpen.

00:10:16.070 --> 00:10:20.820
We're going to set this to a value of this.state.modalOpen.

00:10:22.550 --> 00:10:26.345
We can then add the exclamation mark just before this,

00:10:26.345 --> 00:10:30.245
which will do the opposite of what is currently set in state.

00:10:30.245 --> 00:10:33.619
Each time this is clicked it will take what is currently there,

00:10:33.619 --> 00:10:35.435
and then do the opposite.

00:10:35.435 --> 00:10:40.730
We want this toggleModal method to be triggered each time the card text has been clicked,

00:10:40.730 --> 00:10:44.350
so we can add a click handler onto the text below.

00:10:44.350 --> 00:10:48.075
Into our random method, the p element.

00:10:48.075 --> 00:10:51.835
We can then add a click handler inside of the opening bracket,

00:10:51.835 --> 00:10:56.180
and set this equal to this.toggle.Modal.

00:10:56.180 --> 00:11:01.100
Remember inside of this card is where we're going to render out our modal.

00:11:01.100 --> 00:11:04.550
This modal needs to be aware of this toggle state,

00:11:04.550 --> 00:11:09.110
so we can pass it down as a prop, so modalOpen.

00:11:09.110 --> 00:11:14.645
We'll set this to this.state.modalOpen,

00:11:14.645 --> 00:11:18.605
save this file and then we can head over to our modal component.

00:11:18.605 --> 00:11:20.705
Now this prop can be used to set

00:11:20.705 --> 00:11:24.460
the display type using a JavaScript [inaudible] operator.

00:11:24.460 --> 00:11:29.185
Let's scroll up to our modal wrapper which is this div just here,

00:11:29.185 --> 00:11:32.030
and then just afterwards we can set the style,

00:11:32.030 --> 00:11:34.400
lets add this onto a new line.

00:11:34.400 --> 00:11:39.230
We can set the CSS style property with the double braces.

00:11:39.230 --> 00:11:48.010
We can set the display type of this modal to be equal to this.props.modalOpen.

00:11:48.010 --> 00:11:51.105
If this Boolean value is true we're then going to

00:11:51.105 --> 00:11:53.960
set this display type to be equal to block.

00:11:53.960 --> 00:11:57.860
Or if this is set to false we'll set the display type to be none,

00:11:57.860 --> 00:12:00.610
which will hide this modal component.

00:12:00.610 --> 00:12:05.670
Now let's save this and then test this over in the browser, into our project.

00:12:05.670 --> 00:12:08.330
We immediately see that we have our cards and list,

00:12:08.330 --> 00:12:11.315
but we don't have the modal component displaying.

00:12:11.315 --> 00:12:13.835
Let's try clicking on the text,

00:12:13.835 --> 00:12:17.780
which will now trigger this method and open up the modal.

00:12:17.780 --> 00:12:21.680
However though if we click on this x in the corner to remove,

00:12:21.680 --> 00:12:24.064
it does not work at the moment.

00:12:24.064 --> 00:12:27.760
For this we also need to pass down this toggleModal method,

00:12:27.760 --> 00:12:30.905
so let's go back to the card.js.

00:12:30.905 --> 00:12:33.950
We have this toggleModal, which is just here.

00:12:33.950 --> 00:12:38.060
We can also pass this down to our EditCardModal as a prop.

00:12:38.060 --> 00:12:45.820
On a new line, we can add toggleModal which is going to be equal to our method.

00:12:45.820 --> 00:12:48.765
Back over to the modal components,

00:12:48.765 --> 00:12:52.515
we can now trigger this method when the x has been clicked.

00:12:52.515 --> 00:12:55.905
This is the span which has the x.

00:12:55.905 --> 00:12:58.850
We can add a click handler just like we did before,

00:12:58.850 --> 00:13:03.245
which is going to run this prop, so on click.

00:13:03.245 --> 00:13:09.295
We can set this to this.props.toggleModal.

00:13:09.295 --> 00:13:12.900
Back over to the browser we can now give this a go.

00:13:12.900 --> 00:13:16.320
Let's click on the modal which should pop this up.

00:13:16.320 --> 00:13:19.230
Then click on the x in the corner which now runs

00:13:19.230 --> 00:13:24.000
the toggleModal method and then sets the state to be the opposite which is false.

00:13:24.000 --> 00:13:28.320
This has now taken a little bit of typing to get this modal working.

00:13:28.320 --> 00:13:33.080
All we need to now do is to connect it to some methods to edit the card,

00:13:33.080 --> 00:13:36.660
and this will be our task in the next video.
