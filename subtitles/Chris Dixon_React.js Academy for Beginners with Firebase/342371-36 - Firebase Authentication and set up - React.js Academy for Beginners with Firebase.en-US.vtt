WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.010 --> 00:00:05.805
We will be using this context API we looked at in the last video,

00:00:05.805 --> 00:00:09.790
plus the currently logged-in user to different components.

00:00:09.790 --> 00:00:13.380
We will be doing this with the Firebase authentication package,

00:00:13.380 --> 00:00:16.905
which will have the ability for users to sign-up and login,

00:00:16.905 --> 00:00:21.210
and it will also listen for any changes and then update our state.

00:00:21.210 --> 00:00:24.135
For example, when a user logs out,

00:00:24.135 --> 00:00:27.130
state will then be updated and this will then let

00:00:27.130 --> 00:00:30.645
us hide any information which they shouldn't see.

00:00:30.645 --> 00:00:35.060
Another benefit of having a logged-in user is we can also use

00:00:35.060 --> 00:00:40.420
the user's unique ID when creating a new list board account.

00:00:40.420 --> 00:00:44.030
This means we can then filter the data which we get back from

00:00:44.030 --> 00:00:48.730
Firebase to only show the items created by the logged in user.

00:00:48.730 --> 00:00:51.115
Also the Firebase console,

00:00:51.115 --> 00:00:53.320
we've currently been using this database link,

00:00:53.320 --> 00:00:56.305
but we can set up the authentication just to both.

00:00:56.305 --> 00:00:58.035
Go to the sign-up method,

00:00:58.035 --> 00:01:00.030
which is this button just here.

00:01:00.030 --> 00:01:04.705
Firebase provides us with lots of different ways which we can sign in users.

00:01:04.705 --> 00:01:07.115
We have options to use social media,

00:01:07.115 --> 00:01:09.140
such as Facebook or Twitter,

00:01:09.140 --> 00:01:13.280
but the one I'm going to add is an email and password combination.

00:01:13.280 --> 00:01:15.365
Let's go up to this at the top,

00:01:15.365 --> 00:01:18.740
click on here, enable this,

00:01:18.740 --> 00:01:21.575
and then we can save using this button here.

00:01:21.575 --> 00:01:26.930
The next thing to do is to go to our Firebase Config inside of our projects,

00:01:26.930 --> 00:01:29.705
which is the Firebase.js,

00:01:29.705 --> 00:01:32.045
and then inside here we can also import

00:01:32.045 --> 00:01:36.235
the Auth package just like we did above with firestore,

00:01:36.235 --> 00:01:42.750
so import from Firebase, the auth package.

00:01:42.750 --> 00:01:46.010
Then below the configuration I'm going to add

00:01:46.010 --> 00:01:50.720
a shortcut to the off method and then store it inside of a constant.

00:01:50.720 --> 00:01:56.460
Below of database, I'm going to call this constant, the firebaseAuth,

00:01:56.460 --> 00:02:03.405
and set this equal to firebase and then the Auth method.

00:02:03.405 --> 00:02:06.940
We can then import this reference into each file which needs

00:02:06.940 --> 00:02:11.580
it and then access the authentication methods provided by Firebase.

00:02:11.580 --> 00:02:14.060
To do this we also need to export this,

00:02:14.060 --> 00:02:16.975
go down at the bottom as I named exports,

00:02:16.975 --> 00:02:19.420
we can add firebaseAuth.

00:02:19.420 --> 00:02:22.935
To create a new user, we also need a form,

00:02:22.935 --> 00:02:27.490
so we'll create a new component for this inside of the Components folder.

00:02:27.490 --> 00:02:35.795
Let's create a new file called the UserForm.js. Close down the sidebar.

00:02:35.795 --> 00:02:40.600
We can then import React from reacts,

00:02:41.660 --> 00:02:50.290
inside of a class-based components called the UserForm, which extends React.Component.

00:02:51.040 --> 00:02:53.810
I'm going to set up two different methods,

00:02:53.810 --> 00:02:55.250
which is going to be for the email and

00:02:55.250 --> 00:02:59.255
password so we can drop the data which the user has entered.

00:02:59.255 --> 00:03:02.540
The first one is reference to our email input,

00:03:02.540 --> 00:03:04.910
and then we can create our ref,

00:03:04.910 --> 00:03:07.210
just like we've done in previous videos.

00:03:07.210 --> 00:03:11.980
We want to duplicate this and then change this to be the password,

00:03:12.470 --> 00:03:18.100
and create our render method which we are going to return our form.

00:03:19.790 --> 00:03:24.070
We can surround this with a React Fragments.

00:03:24.170 --> 00:03:27.470
Then inside we can add our div,

00:03:27.470 --> 00:03:33.540
which is going to have a class name for our CSS called sign-up-wrapper.

00:03:35.030 --> 00:03:38.135
At the top, we're going to add a level two heading,

00:03:38.135 --> 00:03:42.450
which is going to be the text of sign in or create account.

00:03:46.010 --> 00:03:49.200
Then our form, which has the two inputs.

00:03:49.200 --> 00:03:52.220
Remember From here we use in the email and password combination,

00:03:52.220 --> 00:03:54.985
so we need to add these to our form.

00:03:54.985 --> 00:04:00.910
Let's create a form with a class name of sign-up form.

00:04:03.250 --> 00:04:07.520
We can add a div which is going to surround each input.

00:04:07.520 --> 00:04:12.575
The first input is going to be for our email and we can attach our ref,

00:04:12.575 --> 00:04:14.270
which we created just above,

00:04:14.270 --> 00:04:17.960
which is equal to this dot email input.

00:04:17.960 --> 00:04:22.620
On the next line. This has a type of email.

00:04:23.000 --> 00:04:27.570
Also, a name which is going to be equal to email,

00:04:28.190 --> 00:04:32.400
and then a placeholder of email too.

00:04:35.230 --> 00:04:38.075
Then our second div just below.

00:04:38.075 --> 00:04:40.100
Let's grab this section here,

00:04:40.100 --> 00:04:44.185
copy this in, and we can change this to be the password,

00:04:44.185 --> 00:04:49.090
so the input is going to have a ref of password input,

00:04:49.090 --> 00:04:52.340
the type of password,

00:04:52.830 --> 00:04:55.404
the name of password,

00:04:55.404 --> 00:04:58.250
and also the placeholder too.

00:04:58.780 --> 00:05:02.390
Just after this div, we can also add a button.

00:05:02.390 --> 00:05:06.655
Let's create a wrapper div, then a button.

00:05:06.655 --> 00:05:09.570
Then inside here the text of sign-up.

00:05:09.570 --> 00:05:11.275
Finally down at the bottom,

00:05:11.275 --> 00:05:18.155
let's not forget to exploit this with an export defaults with the name of UserForm.

00:05:18.155 --> 00:05:21.384
The sign-up form will be the initial components

00:05:21.384 --> 00:05:25.045
a user will see when they first visit our application.

00:05:25.045 --> 00:05:31.065
We can add it inside of the router on the home route or in the app.js.

00:05:31.065 --> 00:05:35.740
Let's first import these components at the very top.

00:05:36.140 --> 00:05:39.615
This is called the UserForm,

00:05:39.615 --> 00:05:44.775
which is available from./Components,

00:05:44.775 --> 00:05:46.765
and then you use a form.

00:05:46.765 --> 00:05:50.530
We can add this below down in our router.

00:05:51.440 --> 00:05:54.815
Currently if we scroll through all of our routes,

00:05:54.815 --> 00:05:57.875
we don't have a forward slash route for the home,

00:05:57.875 --> 00:06:00.515
so we can add this right at the very top.

00:06:00.515 --> 00:06:02.435
We can create a new route.

00:06:02.435 --> 00:06:07.890
We can set this to be exact with the file path from home route,

00:06:07.890 --> 00:06:09.225
or the forward slash.

00:06:09.225 --> 00:06:13.860
Then the components which we want to render out is this UserForm.

00:06:14.840 --> 00:06:17.890
Also the browser, we can now test this out,

00:06:17.890 --> 00:06:21.685
if you go to our project and then go to forward slash,

00:06:21.685 --> 00:06:24.945
we now see the UserForm components.

00:06:24.945 --> 00:06:28.460
We now have this user form at the root of our projects.

00:06:28.460 --> 00:06:31.220
In the next video, we will make use of this form to

00:06:31.220 --> 00:06:34.770
allow us to push a new user to Firebase.
