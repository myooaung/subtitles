WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.590 --> 00:00:04.350
Rather than typing in our dynamic URLs,

00:00:04.350 --> 00:00:06.420
which we done in the last video,

00:00:06.420 --> 00:00:10.020
we instead need a way to push them via our app.

00:00:10.020 --> 00:00:14.370
If we go over to our project in local host and then search for 1,

00:00:14.370 --> 00:00:17.235
2, 3, both flash bonds.

00:00:17.235 --> 00:00:21.090
We have our free bonds here from the sample data.

00:00:21.090 --> 00:00:25.650
It would be good to be able to click on any of these and then be taken to

00:00:25.650 --> 00:00:30.465
the board components with the board ID as part of the URL.

00:00:30.465 --> 00:00:33.360
To do this, we can use the react router,

00:00:33.360 --> 00:00:39.090
to navigate to a particular URL and we can do this using the push method.

00:00:39.090 --> 00:00:41.060
While we are on this page,

00:00:41.060 --> 00:00:44.090
we can go to the reactive tools and open up

00:00:44.090 --> 00:00:48.450
the history object inside of the home components.

00:00:48.580 --> 00:00:55.140
Let's go down to the history inside the props. If we open this up.

00:00:56.060 --> 00:01:00.335
Inside here is where this push method is located.

00:01:00.335 --> 00:01:03.380
This push method will add a new entry onto

00:01:03.380 --> 00:01:07.450
the browser's history stock meaning you can use the browser's back and forth,

00:01:07.450 --> 00:01:11.150
Watson, and then his page will be stored into history.

00:01:11.150 --> 00:01:13.380
These free bonds, of course,

00:01:13.380 --> 00:01:18.854
house and garden ideas are located inside of the board preview components.

00:01:18.854 --> 00:01:21.640
This will leave us with a small issue.

00:01:21.640 --> 00:01:26.695
If we go to the DevTools and search for the board preview.

00:01:26.695 --> 00:01:29.590
If we select any of these board previews,

00:01:29.590 --> 00:01:32.855
the only props which you have is the actual board.

00:01:32.855 --> 00:01:37.360
We don't have access to the history object where push is located.

00:01:37.360 --> 00:01:42.265
You may think here we can just pass down the props like we did with the other components,

00:01:42.265 --> 00:01:46.070
and the answer is no or not directly.

00:01:46.070 --> 00:01:50.290
This board preview is a child of the home components.

00:01:50.290 --> 00:01:54.325
Therefore, it's not directly rendered by the router.

00:01:54.325 --> 00:01:56.770
Inside of the app.js,

00:01:56.770 --> 00:01:59.920
the only components which are child components of

00:01:59.920 --> 00:02:04.985
a router is this home components and also the board.

00:02:04.985 --> 00:02:08.390
The way around this is to use a package called the router.

00:02:08.390 --> 00:02:14.079
The router is a higher order components which will wrap our board preview.

00:02:14.079 --> 00:02:18.490
Therefore, passing the same much location and history props,

00:02:18.490 --> 00:02:21.380
and the router is also available in this same

00:02:21.380 --> 00:02:24.875
react router package which you already have installed.

00:02:24.875 --> 00:02:30.350
Let's go over to the board preview and we can import this at the top of the file.

00:02:30.350 --> 00:02:32.105
This is a named Export.

00:02:32.105 --> 00:02:34.645
Sony, to use the curly braces.

00:02:34.645 --> 00:02:38.825
We have router. This is from the same package,

00:02:38.825 --> 00:02:42.480
which is react-router dom.

00:02:43.760 --> 00:02:48.745
Then we can replace the contents inside of the random effort.

00:02:48.745 --> 00:02:53.975
Rather than just outputs in this.props.board.title.

00:02:53.975 --> 00:02:56.820
But I'm going to display a unordered list,

00:02:56.820 --> 00:03:00.910
and then each item inside here is going to be a list item.

00:03:00.910 --> 00:03:02.995
Each item is the board,

00:03:02.995 --> 00:03:10.505
so therefore we can then output this.prompts.board.title.

00:03:10.505 --> 00:03:14.545
Let's save this and take a look at the home components.

00:03:14.545 --> 00:03:17.680
We still have our free balls display in here.

00:03:17.680 --> 00:03:22.195
Let's add a little bit of styling inside of our unordered list.

00:03:22.195 --> 00:03:26.980
First of all, we can add a class name to trigger the CSS.

00:03:26.980 --> 00:03:30.350
This is board preview item.

00:03:30.580 --> 00:03:34.625
On the next line we're going to add a onclick event handler,

00:03:34.625 --> 00:03:38.730
which is going to trigger a method called goToBoard.

00:03:40.580 --> 00:03:44.405
Next up we're going to add a inline style,

00:03:44.405 --> 00:03:49.265
which is going to set the background color of each one is board previews.

00:03:49.265 --> 00:03:51.650
This will reflect the background-color,

00:03:51.650 --> 00:03:54.565
which we set when we create a new board.

00:03:54.565 --> 00:04:00.910
We can do this with a inline CSS property called background-color.

00:04:00.910 --> 00:04:03.005
Since this is JavaScript,

00:04:03.005 --> 00:04:06.500
we need to use the color case background-color rather than using

00:04:06.500 --> 00:04:11.650
the dash and lowercase values as we would with a regular CSS.

00:04:11.650 --> 00:04:20.740
We're going to set its background color equal to this.props.board.background.

00:04:20.740 --> 00:04:27.170
Now above this we can create our goToBoard method outside of the random method.

00:04:27.170 --> 00:04:31.730
Lets go just after our board preview class,

00:04:31.730 --> 00:04:38.470
we can create goToBoard, setup our function.

00:04:38.780 --> 00:04:42.470
First of all, we're going to grab the board ID,

00:04:42.470 --> 00:04:44.840
which we currently have insider props.

00:04:44.840 --> 00:04:47.605
If we go to the ball preview.

00:04:47.605 --> 00:04:49.890
Inside of the DevTools,

00:04:49.890 --> 00:04:53.550
inside the props, you have all board information which we need.

00:04:53.550 --> 00:04:59.160
First Iet's scrab probably bought ID installed this in sideway constant.

00:04:59.630 --> 00:05:06.640
Board ID is going to be equal to this.props.board.id.

00:05:06.640 --> 00:05:09.350
The second pass todays is then use

00:05:09.350 --> 00:05:14.210
the react router push method to centers to a different URL.

00:05:14.210 --> 00:05:18.140
What want to do is click on any of these links.

00:05:18.140 --> 00:05:21.470
Then we want to be taken to a new URL.

00:05:21.470 --> 00:05:25.310
So board, and then forward /theboardid,

00:05:25.310 --> 00:05:31.305
which we have stored inside of this variable. Let's do this now.

00:05:31.305 --> 00:05:33.700
This.props.history.

00:05:35.870 --> 00:05:38.590
Access the push method.

00:05:38.590 --> 00:05:43.775
This is going to take in an object where we can specify the path name.

00:05:43.775 --> 00:05:47.200
Since this pathname we'll use this board id variable.

00:05:47.200 --> 00:05:50.305
We need to use the back ticks to construct this.

00:05:50.305 --> 00:05:55.135
First of all, we can navigate to forward slashboard and then forward slash.

00:05:55.135 --> 00:06:00.655
We can use the template syntax of the Italo symbol curly braces,

00:06:00.655 --> 00:06:03.220
and then pass in the board ID.

00:06:03.220 --> 00:06:08.120
If we now say this file and then go over to our home components.

00:06:09.090 --> 00:06:13.255
We now have the free list items for our boards,

00:06:13.255 --> 00:06:19.755
which is also getting the background color from this.props.board.background.

00:06:19.755 --> 00:06:24.905
Now let's click on one of these and see if the push method will work.

00:06:24.905 --> 00:06:29.555
We now see your message off cannot read property push of undefined.

00:06:29.555 --> 00:06:32.405
This is not working because as we mentioned earlier,

00:06:32.405 --> 00:06:35.645
the package which we are important at the top of the file,

00:06:35.645 --> 00:06:37.924
which is called router,

00:06:37.924 --> 00:06:42.095
will now need to be a rapper for these components.

00:06:42.095 --> 00:06:45.950
We can do this pretty easily if we go down to our export,

00:06:45.950 --> 00:06:51.100
and then we can wrap our board preview components with router,

00:06:51.100 --> 00:06:54.860
and then inside here we can pass in our board preview,

00:06:54.860 --> 00:06:58.055
save this file, and then let's check this out over in the browser.

00:06:58.055 --> 00:07:03.700
We can click on any of these boards and then we take it to the board components.

00:07:03.700 --> 00:07:06.630
This is board number 2,000.

00:07:06.630 --> 00:07:09.390
Let's go back and try cause ideas.

00:07:09.390 --> 00:07:12.210
This is now board number 1,000.

00:07:12.210 --> 00:07:15.260
Also the same for the garden ideas.

00:07:15.260 --> 00:07:18.650
Later on in the course, when we get to use in Firebase,

00:07:18.650 --> 00:07:21.170
we will use this board ID to get

00:07:21.170 --> 00:07:26.285
the unique ball data rather than at this cargo diversion, which you see here.

00:07:26.285 --> 00:07:29.780
But for now this is a step in the right direction,

00:07:29.780 --> 00:07:34.830
and next up we'll take a look at how we can pass state using react router.
