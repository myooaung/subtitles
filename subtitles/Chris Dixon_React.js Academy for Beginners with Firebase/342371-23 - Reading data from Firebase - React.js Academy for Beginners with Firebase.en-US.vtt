WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.920 --> 00:00:07.065
The sample data which we imported earlier is no longer needed in our project.

00:00:07.065 --> 00:00:11.340
So we can now begin to remove it and work from our database.

00:00:11.340 --> 00:00:14.385
We can do this over in the app.js.

00:00:14.385 --> 00:00:18.915
First of all, we can remove the import, so import data,

00:00:18.915 --> 00:00:22.005
let's remove this line and then down below,

00:00:22.005 --> 00:00:24.585
we have a component did mount,

00:00:24.585 --> 00:00:27.390
which sets the state using this sample data.

00:00:27.390 --> 00:00:29.250
Let's remove this line too.

00:00:29.250 --> 00:00:32.175
In place of this, I'm going to create a method which will get

00:00:32.175 --> 00:00:36.270
our boards from firebase but only when we actually need them.

00:00:36.270 --> 00:00:38.715
Just below this component did mount,

00:00:38.715 --> 00:00:42.820
we want to create a new method called get boards.

00:00:43.670 --> 00:00:47.040
This is going to be a async function,

00:00:47.040 --> 00:00:49.895
which is going to take in the user ID,

00:00:49.895 --> 00:00:51.745
which is going to pass to it.

00:00:51.745 --> 00:00:54.295
Instead of our arrow function,

00:00:54.295 --> 00:00:59.510
create a try section and also a catch,

00:00:59.510 --> 00:01:02.180
which takes in the error,

00:01:02.180 --> 00:01:07.060
that you're still a console log with the error message of area getting

00:01:07.060 --> 00:01:14.870
boards and also passing in the error message just after this.

00:01:14.870 --> 00:01:19.700
The first thing we want to do when getting at the new boards from firebase,

00:01:19.700 --> 00:01:22.495
is to set the state to be empty.

00:01:22.495 --> 00:01:24.145
So inside the try block,

00:01:24.145 --> 00:01:29.645
we can do with this.set state and then inside here we can add our state objects,

00:01:29.645 --> 00:01:33.485
which is going to set the boards to be an empty array.

00:01:33.485 --> 00:01:36.350
This will just ensure that any previous boards and

00:01:36.350 --> 00:01:40.595
states will be removed before make a new call to firebase.

00:01:40.595 --> 00:01:44.975
Up at the top, we already have our board reference imported from firebase.

00:01:44.975 --> 00:01:47.600
So we can now use this to get the contents of

00:01:47.600 --> 00:01:52.375
the boards collection and we can do this by calling the get method.

00:01:52.375 --> 00:01:54.935
So just below the set state,

00:01:54.935 --> 00:02:00.560
we can start to obey constants with the name of boards and then we can await our data

00:02:00.560 --> 00:02:07.375
back by grabbing our boards reference and then calling the.get method.

00:02:07.375 --> 00:02:11.675
This will get the contents of our boards collection only once.

00:02:11.675 --> 00:02:17.305
It won't listen for any changes but we will look at how to do this later in the course.

00:02:17.305 --> 00:02:20.600
The board's constants, which we have just here,

00:02:20.600 --> 00:02:22.495
holds all of our boards,

00:02:22.495 --> 00:02:24.635
meaning you can then loop through them,

00:02:24.635 --> 00:02:28.450
get each one and then save these to our state.

00:02:28.450 --> 00:02:31.595
Firebase will allow us to do this by using a for

00:02:31.595 --> 00:02:35.400
each method and we can do this just below this line.

00:02:35.400 --> 00:02:38.470
We can select our board constants,

00:02:38.470 --> 00:02:41.750
we can loop through with for each.

00:02:41.750 --> 00:02:44.060
Inside here we're going to store

00:02:44.060 --> 00:02:49.800
each item inside of our boards into a variable called board.

00:02:50.130 --> 00:02:52.750
Inside of this function body,

00:02:52.750 --> 00:02:58.520
we can begin by doing a console log and then load the value of our board.

00:02:58.520 --> 00:03:00.820
Before we save this state,

00:03:00.820 --> 00:03:02.515
we're going to do a console log,

00:03:02.515 --> 00:03:07.460
since it can be a little confusing without seeing what comes back from firebase.

00:03:07.460 --> 00:03:13.480
To run this, we can temporarily add this method above when the component mounts.

00:03:13.480 --> 00:03:17.900
So inside here we can call it with this.get boards.

00:03:18.560 --> 00:03:22.000
Okay. Once this is done, we can open up the terminal,

00:03:22.000 --> 00:03:27.080
make sure that the server has started with an NPM start.

00:03:27.800 --> 00:03:33.720
Let's kick this off. We can

00:03:33.720 --> 00:03:38.610
then go over to the project and then if we right-click and then inspect,

00:03:38.610 --> 00:03:42.745
open this up in the console and let's do a refresh.

00:03:42.745 --> 00:03:48.095
Inside the console, we see what is called a query document snapshot,

00:03:48.095 --> 00:03:53.405
which is a snapshot of the document we're reading from firebase at that particular time.

00:03:53.405 --> 00:03:57.665
If we open this up, it does contain the board ID,

00:03:57.665 --> 00:03:59.060
which you can see here.

00:03:59.060 --> 00:04:03.905
We do need to grab this but if we only want the actual document data,

00:04:03.905 --> 00:04:05.765
rather than all of these metadata,

00:04:05.765 --> 00:04:08.930
which we see here along with the firebase references,

00:04:08.930 --> 00:04:12.590
we can change our console log to call the data method,

00:04:12.590 --> 00:04:15.865
which will extract all the fields as an object.

00:04:15.865 --> 00:04:18.185
So down in our console log,

00:04:18.185 --> 00:04:21.650
we can also add the.data method onto the ends.

00:04:21.650 --> 00:04:24.845
Also add the brackets to call this as a method.

00:04:24.845 --> 00:04:28.345
We now see our four board objects. We can open this up.

00:04:28.345 --> 00:04:32.055
We can open up the board and now we see the properties of

00:04:32.055 --> 00:04:35.920
background created at title and also the user.

00:04:35.920 --> 00:04:38.555
This is stored in a board object,

00:04:38.555 --> 00:04:40.940
which you can see just here with the calibraces.

00:04:40.940 --> 00:04:46.340
So we can drill down further by adding.board onto the end of our console log.

00:04:46.340 --> 00:04:48.630
Let's go over now and then on the end of data,

00:04:48.630 --> 00:04:52.904
we can add.board to access the individual objects,

00:04:52.904 --> 00:04:57.435
reload and then we take them straight into our object.

00:04:57.435 --> 00:05:00.230
This is the exact data we need.

00:05:00.230 --> 00:05:02.300
The only missing field is the ID,

00:05:02.300 --> 00:05:06.640
which we mentioned before but we can grab this directly from the board.

00:05:06.640 --> 00:05:12.585
Now we can store this data inside of a constant of in the app.js.

00:05:12.585 --> 00:05:14.930
So rather than this console log,

00:05:14.930 --> 00:05:16.370
we can now remove this,

00:05:16.370 --> 00:05:19.610
we can set obey constant called data,

00:05:19.610 --> 00:05:24.620
which is going to be equal to board.data.board,

00:05:25.640 --> 00:05:31.560
which we've seen in the console log and then we can create a new board object.

00:05:31.560 --> 00:05:36.590
Let's take this board data and then mix it in with the missing ID.

00:05:36.590 --> 00:05:40.445
On the next line we create a second constant,

00:05:40.445 --> 00:05:44.730
which is for the board objects.

00:05:44.830 --> 00:05:47.269
Setup our objects.

00:05:47.269 --> 00:05:49.730
First of all, we can mix in the ID.

00:05:49.730 --> 00:05:53.160
We can grab this directly from board.Id,

00:05:53.360 --> 00:05:56.700
then we can spread in with the three dots.

00:05:56.700 --> 00:06:00.665
The data, which is this constant from just above.

00:06:00.665 --> 00:06:02.870
Just after this object,

00:06:02.870 --> 00:06:07.220
we can now set the state with this.set state.

00:06:07.220 --> 00:06:11.600
Inside here we're going to target the boards object.

00:06:11.600 --> 00:06:14.060
We're going to set this to an array,

00:06:14.060 --> 00:06:16.820
so we're going to take a copy of the existing state,

00:06:16.820 --> 00:06:22.380
with this.state,.boards, separated by a comma,

00:06:22.380 --> 00:06:25.285
we can then add in our new board object,

00:06:25.285 --> 00:06:29.065
save this file and then we can test this over in the browser.

00:06:29.065 --> 00:06:33.435
This is a good start. We see the board's being pulled in from firebase.

00:06:33.435 --> 00:06:37.245
Let's add a new object or a new board object.

00:06:37.245 --> 00:06:39.750
Let's go to the react developer tools,

00:06:39.750 --> 00:06:42.525
search for our home component.

00:06:42.525 --> 00:06:44.580
We have our boards as props,

00:06:44.580 --> 00:06:47.460
am going to see the array with our four new boards.

00:06:47.460 --> 00:06:49.545
Let's try and add in one more.

00:06:49.545 --> 00:06:54.450
Let's go forward to do the color of orange,

00:06:54.450 --> 00:06:57.920
create new boards and now I have an extra object pushed to

00:06:57.920 --> 00:07:02.200
our state and this is constructed in the same way as all the rest.

00:07:02.200 --> 00:07:06.470
We've mixed in the ID with all of the rest of the board data.

00:07:06.470 --> 00:07:09.740
So currently we've added this call to get our board from

00:07:09.740 --> 00:07:13.730
firebase inside of the component did mount.

00:07:13.730 --> 00:07:16.010
We only want to grab these boards when the home

00:07:16.010 --> 00:07:18.860
component loads rather than the actual app,

00:07:18.860 --> 00:07:21.325
since this is where they're going to be displayed.

00:07:21.325 --> 00:07:24.240
All we need to do for this is to move the component

00:07:24.240 --> 00:07:27.360
did mount code to the home components.

00:07:27.360 --> 00:07:30.870
Let's cut the component did mount section.

00:07:30.870 --> 00:07:33.450
We no longer need this and then we can go over to

00:07:33.450 --> 00:07:38.105
our home components and then we can paste this in right at the very top,

00:07:38.105 --> 00:07:40.615
just above our random method.

00:07:40.615 --> 00:07:43.990
Since we now access in this get board method,

00:07:43.990 --> 00:07:45.960
which is in the app.js,

00:07:45.960 --> 00:07:48.815
we need to now pass this down as a prop.

00:07:48.815 --> 00:07:54.335
Let's scroll down to our router and then inside of the home link,

00:07:54.335 --> 00:07:56.285
which is this one just here,

00:07:56.285 --> 00:07:59.480
we can also add a prop called get boards,

00:07:59.480 --> 00:08:04.025
which is going to be equal to our method of this.get boards,

00:08:04.025 --> 00:08:09.665
save this file and now over to our component did mount inside our home.js,

00:08:09.665 --> 00:08:12.110
we now need to access this via props.

00:08:12.110 --> 00:08:20.800
So this is this.props.board and then add this to our prop validation down at the bottom.

00:08:21.780 --> 00:08:27.925
Get boards is going to be our prop types and this is

00:08:27.925 --> 00:08:34.125
a function which is also required to either come at the end.

00:08:34.125 --> 00:08:37.820
Then we can now save this and go over to the browser.

00:08:37.820 --> 00:08:42.250
Inside here, the boards are still showing in the browser,

00:08:42.250 --> 00:08:46.180
but they are now only loaded when we're viewing this whole components.

00:08:46.180 --> 00:08:49.255
If we go ahead and click on any of these,

00:08:49.255 --> 00:08:52.450
we still see our sample data inside here,

00:08:52.450 --> 00:08:55.165
and we'll fix this in the next video.

00:08:55.165 --> 00:08:58.315
When we created the link to this board earlier,

00:08:58.315 --> 00:09:02.829
we also passed this board ID via the URL parameters.

00:09:02.829 --> 00:09:08.440
We can now use this board ID to fetch the current loaded bar details from Firebase,

00:09:08.440 --> 00:09:11.020
rather than from our sample data.

00:09:11.020 --> 00:09:14.830
This will be stored into local state i.e.

00:09:14.830 --> 00:09:16.675
inside of this components,

00:09:16.675 --> 00:09:19.810
and will be used to display the ball title and also

00:09:19.810 --> 00:09:24.445
the background color rather than using the sample data which we see now.

00:09:24.445 --> 00:09:29.965
Let's do this now this is the board components will go over to the board.layers.

00:09:29.965 --> 00:09:33.565
Up at the very top were importing in the List Ref.

00:09:33.565 --> 00:09:37.120
So we also need to ground the reference to the Board 2.

00:09:37.120 --> 00:09:42.800
We are going to be loading up the current board so we can also add this state.

00:09:42.900 --> 00:09:45.760
So this is the current board.

00:09:45.760 --> 00:09:49.390
We can set this up initially as an empty object.

00:09:49.390 --> 00:09:54.940
Then now below we can also set up a custom method just below component did mount,

00:09:54.940 --> 00:09:58.390
which is going to get our current board from Firebase.

00:09:58.390 --> 00:10:03.430
Lets call this method. The get board is going to be a sync,

00:10:03.430 --> 00:10:06.130
and it's also going to take in the board ID.

00:10:06.130 --> 00:10:09.535
So we only get these single board from Firebase.

00:10:09.535 --> 00:10:15.020
We can set up our method at a try section.

00:10:15.930 --> 00:10:20.840
Also a catch section below which is going to take in the error.

00:10:21.120 --> 00:10:25.810
This is going to send out a console log with the message of error,

00:10:25.810 --> 00:10:32.955
getting boards, and also passing the error.

00:10:32.955 --> 00:10:36.660
So the first thing to do in the try section up here

00:10:36.660 --> 00:10:40.940
is to create a constant which is going to store our single board.

00:10:40.940 --> 00:10:44.815
We can await this information back from Firebase.

00:10:44.815 --> 00:10:47.245
This is in the boards Ref.

00:10:47.245 --> 00:10:50.290
We want to use the document reference,

00:10:50.290 --> 00:10:53.095
which is going to be the single board ID,

00:10:53.095 --> 00:10:56.180
which is going to pass in when we call it.

00:10:57.270 --> 00:11:00.325
We're passing this. Then we can call

00:11:00.325 --> 00:11:04.855
the.get method to grab all the contents from our board.

00:11:04.855 --> 00:11:08.260
Once we have our board we can now say this is state.

00:11:08.260 --> 00:11:11.125
With this set state,

00:11:11.125 --> 00:11:16.490
state which you want to update is this current board which you have just here.

00:11:18.060 --> 00:11:22.015
Set is equal to the value of our constants,

00:11:22.015 --> 00:11:26.230
and it's also needs to be board Ref. So make this change.

00:11:26.230 --> 00:11:29.770
So we don't want to set the state just like this.

00:11:29.770 --> 00:11:32.725
I'll make sure this is boards too just above the top.

00:11:32.725 --> 00:11:36.625
So currently we set in this board object in the state,

00:11:36.625 --> 00:11:39.625
but we don't want to do it just like we see here.

00:11:39.625 --> 00:11:44.845
Remember earlier when we got all of the boards over in the app.js.

00:11:44.845 --> 00:11:47.770
If we go up to the gap boards method,

00:11:47.770 --> 00:11:49.855
when we added a console log,

00:11:49.855 --> 00:11:52.585
we see that we got back a query snapshot.

00:11:52.585 --> 00:11:55.885
This is the same here so it can access the board objects,

00:11:55.885 --> 00:11:58.600
in the exact same way as this by colon need

00:11:58.600 --> 00:12:02.770
dot data method and then access in the board object.

00:12:02.770 --> 00:12:07.150
So let's do this now. We already have this board we can

00:12:07.150 --> 00:12:12.565
call.data and then access the board object just like this.

00:12:12.565 --> 00:12:16.735
This board data needs to be available immediately.

00:12:16.735 --> 00:12:23.065
So we can call it from component did mount passing in the current board ID.

00:12:23.065 --> 00:12:28.150
Let's scroll up inside of component did mount.

00:12:28.150 --> 00:12:33.940
We can now call get board inside here by using this.get board.

00:12:33.940 --> 00:12:38.875
Then we need to pass in the ID which is received inside this method.

00:12:38.875 --> 00:12:41.695
So to grab the current ID,

00:12:41.695 --> 00:12:45.205
we know this is stored inside of the URL parameters.

00:12:45.205 --> 00:12:47.485
Which you can see up at the top here,

00:12:47.485 --> 00:12:51.130
and we already know how to access the router parameters.

00:12:51.130 --> 00:12:54.925
We can do this with this.props,

00:12:54.925 --> 00:12:58.765
the prop name of match which is from the router.

00:12:58.765 --> 00:13:01.225
We're going to access the params,

00:13:01.225 --> 00:13:02.875
and then the parameter name,

00:13:02.875 --> 00:13:06.100
which in this case is called the board ID.

00:13:06.100 --> 00:13:10.360
Save this file and now over to the board inside of the browser.

00:13:10.360 --> 00:13:13.765
So as soon as this board component will load,

00:13:13.765 --> 00:13:17.995
let's go to the reactive tools and check we have the data which we need.

00:13:17.995 --> 00:13:21.085
Let's do a search for the board components.

00:13:21.085 --> 00:13:25.000
Select this inside the state we have the current board.

00:13:25.000 --> 00:13:27.970
Let's open this up and now we see all the data

00:13:27.970 --> 00:13:31.180
which we need such as the background-color and the title.

00:13:31.180 --> 00:13:34.030
So we can now use this in our random method inside of

00:13:34.030 --> 00:13:37.510
the board to set the title and also the background.

00:13:37.510 --> 00:13:40.435
So let's scroll down to the random method.

00:13:40.435 --> 00:13:43.930
Then the first thing to do is to set the background color.

00:13:43.930 --> 00:13:46.795
So rather than using the router props,

00:13:46.795 --> 00:13:52.495
let's remove this, and then instead we can use the data which is stored in state.

00:13:52.495 --> 00:13:56.200
So this.state,.current board.

00:13:56.200 --> 00:13:59.230
We can access the background property.

00:13:59.230 --> 00:14:01.930
Just below inside the level three heading,

00:14:01.930 --> 00:14:10.550
we can access this.state dot.current board and then it grab the title.

00:14:10.860 --> 00:14:14.020
Check this is still working over in the browser.

00:14:14.020 --> 00:14:15.654
Load at the board components,

00:14:15.654 --> 00:14:18.625
and we still see the title and the background color.

00:14:18.625 --> 00:14:21.880
When we go into each one of these boards.

00:14:21.880 --> 00:14:26.500
With this now working we can go over to the board preview components,

00:14:26.500 --> 00:14:30.130
and also remove the state which is passed down by the router.

00:14:30.130 --> 00:14:31.930
So this is no longer needed.

00:14:31.930 --> 00:14:39.820
So can remove these state objects and leaving just the path name for the redirect.

00:14:39.820 --> 00:14:43.435
They should still not working okay inside the browser.

00:14:43.435 --> 00:14:46.720
So you may have noticed that this was all working completely fine

00:14:46.720 --> 00:14:51.505
before we had the background color and the title passed by the router.

00:14:51.505 --> 00:14:54.610
So you may be wondering why changes at all.

00:14:54.610 --> 00:14:58.074
The reason is for updating the components.

00:14:58.074 --> 00:15:02.350
Before we passed the ID and background to the board component.

00:15:02.350 --> 00:15:04.990
This meant that once the board was loaded,

00:15:04.990 --> 00:15:07.870
we then stick with it this exact data.

00:15:07.870 --> 00:15:13.525
However, when fetching the board data from Firebase and storing it in this state,

00:15:13.525 --> 00:15:17.995
this will mean that later on when we update the board such as the title,

00:15:17.995 --> 00:15:22.570
any changes will then be dynamic and also update the component two.

00:15:22.570 --> 00:15:24.025
So it is now in place,

00:15:24.025 --> 00:15:26.900
let's now move on to the next video.
