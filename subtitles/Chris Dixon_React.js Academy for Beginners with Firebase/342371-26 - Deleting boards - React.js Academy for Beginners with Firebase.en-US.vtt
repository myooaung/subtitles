WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.260 --> 00:00:04.980
Deleting the board is a little more involved than the last video.

00:00:04.980 --> 00:00:07.755
Let's not feel we have not looked at yet.

00:00:07.755 --> 00:00:10.950
This is because we need to find the board itself.

00:00:10.950 --> 00:00:16.050
Then all of the associated lists and cards which belongs to the board.

00:00:16.050 --> 00:00:19.155
Before then deleting in all three of these collections.

00:00:19.155 --> 00:00:21.035
If we go to the board view,

00:00:21.035 --> 00:00:24.520
we already have a Delete board button up at the top.

00:00:24.520 --> 00:00:27.710
All of the, board related methods and also

00:00:27.710 --> 00:00:31.940
the ball state is then kept over in the app.js.

00:00:31.940 --> 00:00:35.740
Someone's added a Delete Board method inside here too.

00:00:35.740 --> 00:00:39.635
Who then goes pass it down as props to the ball components.,

00:00:39.635 --> 00:00:42.965
so it can be triggered when the button is clicked.

00:00:42.965 --> 00:00:46.500
The first step is to create the Delete Board method,

00:00:46.500 --> 00:00:49.210
which will pass to it the board Id.

00:00:49.210 --> 00:00:53.135
Let's go down just above the random method.

00:00:53.135 --> 00:00:56.280
We can create our Delete Board.

00:00:57.860 --> 00:01:00.705
This is going to be async.

00:01:00.705 --> 00:01:07.145
We're going to pass in the board ID when we call this and then setup our arrow function.

00:01:07.145 --> 00:01:11.620
First of all, we can create the try and catch sections.

00:01:11.620 --> 00:01:15.075
Passing in the error as always.

00:01:15.075 --> 00:01:20.800
Then we could do a console.error with the text of error deleting board,

00:01:21.770 --> 00:01:25.920
a colon, and then pass in the error.

00:01:25.920 --> 00:01:30.560
Since we are calling this method from the button in the board components,

00:01:30.560 --> 00:01:32.885
we need to pass it down as props.

00:01:32.885 --> 00:01:35.660
Let's scroll down to our router.

00:01:35.660 --> 00:01:39.390
We need to find the board components.

00:01:39.890 --> 00:01:43.580
Which is just here, just after the router problem,

00:01:43.580 --> 00:01:45.350
we can pass in delete board,

00:01:45.350 --> 00:01:49.975
which is going to be equal to our method of the stores delete board.

00:01:49.975 --> 00:01:53.535
If we go over to the board.js,

00:01:53.535 --> 00:01:56.660
before we forget, let's add the proper validation.

00:01:56.660 --> 00:02:00.895
We need to import this since we have not used it just yet,

00:02:00.895 --> 00:02:04.420
import the prop types.

00:02:04.580 --> 00:02:06.875
Then down at the bottom,

00:02:06.875 --> 00:02:12.335
we can create our prop types just above where we export this file,

00:02:12.335 --> 00:02:19.170
so bold B, prop types, setup above objects.

00:02:19.170 --> 00:02:21.410
The only prop which we get in at the minute,

00:02:21.410 --> 00:02:23.470
is going to be the delete board.

00:02:23.470 --> 00:02:29.265
The Delete board is the prop type of function, so we use.func.

00:02:29.265 --> 00:02:32.525
This is also going to be required too.

00:02:32.525 --> 00:02:34.735
Inside of the random method,

00:02:34.735 --> 00:02:38.620
we already have a button to add on click ''Listener To.''

00:02:38.620 --> 00:02:44.230
Let's scroll up and take a look for our button and which is this one just here.

00:02:44.230 --> 00:02:48.255
We can then add on click inside here.

00:02:48.255 --> 00:02:50.265
This is going to trigger a method,

00:02:50.265 --> 00:02:53.565
so let's create this.Delete Board.

00:02:53.565 --> 00:02:56.950
This totally board is not the method which will pass

00:02:56.950 --> 00:03:00.440
down because we have an access this via props.

00:03:00.440 --> 00:03:06.190
Now we can go ahead and create Delete Board just above outside the random method.

00:03:06.190 --> 00:03:08.980
Delete board method, which we're going to add now,

00:03:08.980 --> 00:03:13.100
is going to be responsible for grabbing the ID of this current board.

00:03:13.100 --> 00:03:17.840
Then call in need Delete Board method which is being passed as props,

00:03:17.840 --> 00:03:21.880
so let's add this Delete Board.

00:03:22.190 --> 00:03:27.750
This is a async. Then inside here

00:03:27.750 --> 00:03:29.205
the first thing to do is to grab

00:03:29.205 --> 00:03:34.100
the current board ID and install this inside of a constant.

00:03:34.100 --> 00:03:38.020
board ID is going to be available from props.

00:03:38.020 --> 00:03:46.145
This top props.match.params.boardId.

00:03:46.145 --> 00:03:48.660
Remember, match.params,

00:03:48.660 --> 00:03:50.160
is the router props,

00:03:50.160 --> 00:03:52.810
and the params is going to be this board Id,

00:03:52.810 --> 00:03:54.280
which you can grab from here.

00:03:54.280 --> 00:03:56.450
We store this inside a variable,

00:03:56.450 --> 00:04:00.185
therefore we can now pass this when we call our Delete Board method,

00:04:00.185 --> 00:04:03.445
which we just created in app.js.

00:04:03.445 --> 00:04:07.545
This top props, totally board,

00:04:07.545 --> 00:04:10.690
as in the board ID.

00:04:11.000 --> 00:04:13.275
Before we go any further,

00:04:13.275 --> 00:04:15.360
let's test, this is all working.

00:04:15.360 --> 00:04:17.375
Over in the app.js,

00:04:17.375 --> 00:04:20.570
we don't have any content inside of this try section.

00:04:20.570 --> 00:04:25.130
Let's do a simple alert with the variable name of board ID,

00:04:25.130 --> 00:04:27.005
which is just being passed.

00:04:27.005 --> 00:04:31.800
Save this over to our projects.

00:04:32.150 --> 00:04:34.875
Let's try deleting the board.

00:04:34.875 --> 00:04:40.145
Great. Now we get the alert with the same board ID which is in the URL,

00:04:40.145 --> 00:04:42.640
when all the method is now being called.

00:04:42.640 --> 00:04:46.705
We can now use the ID to grab all boards from Firebase,

00:04:46.705 --> 00:04:50.305
update the state, and then finally the delete the board.

00:04:50.305 --> 00:04:53.730
Step one, we're going to move the alert,

00:04:53.730 --> 00:04:57.010
and then we can save the current board to a constant.

00:04:57.010 --> 00:05:01.085
We can do this by awaiting our boards Ref.

00:05:01.085 --> 00:05:06.160
Grab the document, and the document which you want to grab is by the ID.

00:05:06.160 --> 00:05:10.510
The ID is stored inside of the board ID variable.

00:05:10.510 --> 00:05:16.150
The next step is to update the state with this.set state.

00:05:16.150 --> 00:05:19.480
Inside here you can pass in our state object where

00:05:19.480 --> 00:05:22.660
we're going to update the Boards inside the State,

00:05:22.660 --> 00:05:25.100
will set this up as an array.

00:05:25.100 --> 00:05:28.720
The first thing is to use the Spread Operator to grab

00:05:28.720 --> 00:05:33.794
the current state of this state boards.

00:05:33.794 --> 00:05:37.345
This will take a copy of all of the board's currently in states,

00:05:37.345 --> 00:05:40.285
but if we want to remove a particular board,

00:05:40.285 --> 00:05:42.025
how can we do this?

00:05:42.025 --> 00:05:45.085
Well, we can use a JavaScript Filter method,

00:05:45.085 --> 00:05:48.835
which will filter out any particular Board from States.

00:05:48.835 --> 00:05:52.390
Inside here, we're going to store each board inside of

00:05:52.390 --> 00:05:56.285
this variable and then run a function for each one.

00:05:56.285 --> 00:06:00.385
This function is going to be responsible for only returning

00:06:00.385 --> 00:06:05.150
any boards from States which doesn't match this board ID.

00:06:05.150 --> 00:06:07.830
Let's add our return statement.

00:06:07.830 --> 00:06:15.190
We want to return any boards where the ID is not equal to this board ID,

00:06:15.190 --> 00:06:16.970
which we just deleted.

00:06:16.970 --> 00:06:20.620
Step number three, just outside of this cut section,

00:06:20.620 --> 00:06:26.075
we're going to call board.Delete to remove this from Firebase.

00:06:26.075 --> 00:06:29.030
We don't want to test this out just yet,

00:06:29.030 --> 00:06:34.415
because we also want to remove the lists and cards for this board at the same time.

00:06:34.415 --> 00:06:36.780
Let's begin with the lists,

00:06:36.780 --> 00:06:39.075
so over the top of our trying section.

00:06:39.075 --> 00:06:42.940
We can start with creating a constant called Lists.

00:06:42.940 --> 00:06:46.925
Inside here we're going to await our list graph,

00:06:46.925 --> 00:06:49.710
which is our list collection.

00:06:49.710 --> 00:06:52.045
Inside of this list constant,

00:06:52.045 --> 00:06:57.245
we want to filter down all of the lists which are related to this board ID.

00:06:57.245 --> 00:06:59.925
We can do this with the web method.

00:06:59.925 --> 00:07:01.805
It takes in three parameters.

00:07:01.805 --> 00:07:05.275
The first one is going to be the list.board.

00:07:05.275 --> 00:07:08.765
The second one is equal to as a string,

00:07:08.765 --> 00:07:12.760
and then the third value is the board ID.

00:07:12.770 --> 00:07:16.780
This is going to filter out all of our lists where

00:07:16.780 --> 00:07:20.915
the board property is equal to the board which was passed in,

00:07:20.915 --> 00:07:25.065
then we can find the grab all these weighted, they.get method.

00:07:25.065 --> 00:07:26.900
Since we now using this list draft,

00:07:26.900 --> 00:07:29.870
we can now go up to the very top of this file where

00:07:29.870 --> 00:07:33.805
we added the import and also at this too,

00:07:33.805 --> 00:07:37.360
then back down to our method.

00:07:37.710 --> 00:07:40.300
With this list data,

00:07:40.300 --> 00:07:41.515
which we now go back,

00:07:41.515 --> 00:07:43.705
we now need to do two things.

00:07:43.705 --> 00:07:46.690
First of all, we need to add an if statement to actually

00:07:46.690 --> 00:07:49.810
check if there are any lists saved this current board,

00:07:49.810 --> 00:07:52.060
before we go ahead and delete them.

00:07:52.060 --> 00:07:54.684
Number 2, if the list available,

00:07:54.684 --> 00:07:57.595
we need to look through them and then delete.

00:07:57.595 --> 00:08:01.330
Just under Get, we can add an if statement.

00:08:01.330 --> 00:08:03.550
We can check if lists,

00:08:03.550 --> 00:08:10.044
docs dot length is not equal to zero,

00:08:10.044 --> 00:08:15.805
then the code inside of this if statement will only run if there is more than one list.

00:08:15.805 --> 00:08:20.500
If these lists, we can then leave for you with the for each method.

00:08:20.500 --> 00:08:25.240
For each, we're going to store each item inside of this list variable,

00:08:25.240 --> 00:08:27.640
sets up a function for each one.

00:08:27.640 --> 00:08:31.540
Now this leaves us in a similar position to the last video.

00:08:31.540 --> 00:08:33.745
We have lists we need to delete,

00:08:33.745 --> 00:08:39.190
and we also have to find the cards for each list too and then go ahead and delete them.

00:08:39.190 --> 00:08:42.460
Meaning we now have some shared functionality.

00:08:42.460 --> 00:08:48.895
If we go over to the list app.js and then take a look for the delete list method.

00:08:48.895 --> 00:08:52.330
We created this method in the last video to do this.

00:08:52.330 --> 00:08:54.580
So rather than duplicate it,

00:08:54.580 --> 00:08:59.770
we can lift this up to the app.js and then shall the use of this function.

00:08:59.770 --> 00:09:03.655
Let's start by cutting out the full method.

00:09:03.655 --> 00:09:11.770
Will be closing curly brace up to deletelist hosted app.js.

00:09:11.770 --> 00:09:14.905
Let's paste this in and just above the clipboard.

00:09:14.905 --> 00:09:18.190
This method uses the firebase cards href,

00:09:18.190 --> 00:09:21.160
which you can see if we scroll up just a here.

00:09:21.160 --> 00:09:30.235
We need to import this at the very top and then back down to this deletelist method.

00:09:30.235 --> 00:09:34.675
Hope at the very top here we have a constant called listId.

00:09:34.675 --> 00:09:37.375
This line is getting the data from props,

00:09:37.375 --> 00:09:42.985
but we don't have this list proper available now in this app.js so we remove this line.

00:09:42.985 --> 00:09:45.040
and then instead when we call,

00:09:45.040 --> 00:09:48.010
this method will pass in this listId.

00:09:48.010 --> 00:09:50.200
This in the brackets.

00:09:50.200 --> 00:09:54.010
Since we removed this deletelist from the list components,

00:09:54.010 --> 00:09:57.115
we now need to pass it back down via props.

00:09:57.115 --> 00:09:59.665
Let's go down to our board.

00:09:59.665 --> 00:10:01.750
Inside of the router.

00:10:01.750 --> 00:10:04.330
You can then add this as a prop.

00:10:04.330 --> 00:10:11.350
This is the deletelist and this is going to be equal to this, dot deletelist.

00:10:11.350 --> 00:10:13.960
Then go to the board app.js.

00:10:13.960 --> 00:10:16.270
We can add these in as a prop type.

00:10:16.270 --> 00:10:20.620
Let's duplicate this and this was deletelist.

00:10:20.620 --> 00:10:24.280
Link list was down inside of the list component.

00:10:24.280 --> 00:10:30.070
Now we can pass this down as a prop inside of this list components.

00:10:30.070 --> 00:10:32.065
Just after a list,

00:10:32.065 --> 00:10:34.660
we can also add our deletelist prop,

00:10:34.660 --> 00:10:40.510
which is going to be available from this top props, dots deletelist.

00:10:40.510 --> 00:10:45.910
Now we again have this deletelist functionality available in the list.

00:10:45.910 --> 00:10:48.625
This is now receiving this as props.

00:10:48.625 --> 00:10:51.925
We can add it into the prop times at the bottom.

00:10:51.925 --> 00:10:54.805
This is the deletelists.

00:10:54.805 --> 00:11:01.420
The prop type is a type of function which is also required,

00:11:01.420 --> 00:11:03.340
add a coma in between.

00:11:03.340 --> 00:11:06.700
Inside of the random method for this list,

00:11:06.700 --> 00:11:11.290
we have a span element which is calling our delete list method.

00:11:11.290 --> 00:11:16.390
We can recreate this above to call the method which you pass down as props.

00:11:16.390 --> 00:11:23.860
Outside render, we can create our new method called list deletelist,

00:11:23.860 --> 00:11:30.865
setup our function and then inside this function we want to do two things.

00:11:30.865 --> 00:11:33.850
First of all, we want to grab the listId.

00:11:33.850 --> 00:11:37.555
Because remember from before over in the app.js,

00:11:37.555 --> 00:11:41.245
When we moved over this deletelist method.

00:11:41.245 --> 00:11:45.880
Let's scroll back up. We also pass this in as a listId.

00:11:45.880 --> 00:11:51.040
This listId is available inside this list component via props.

00:11:51.040 --> 00:11:55.435
This top prompts dot list dot id.

00:11:55.435 --> 00:12:01.330
Then we can finally go ahead and call our deletelist method with this dot prompts.

00:12:01.330 --> 00:12:05.960
Dot deletelist, which is going to pass in the listId.

00:12:06.030 --> 00:12:08.710
Save this file and before we go any further,

00:12:08.710 --> 00:12:16.735
we can test this list is being removed and issues wants to be lists-ref and the app.js.

00:12:16.735 --> 00:12:26.300
Let's add an s inside here and also 63 and 67.

00:12:26.970 --> 00:12:30.970
That's on the end. Also here too.

00:12:30.970 --> 00:12:32.905
Good. It is now working.

00:12:32.905 --> 00:12:34.960
Let's try to remove a list.

00:12:34.960 --> 00:12:38.120
Let's add list one inside here.

00:12:38.250 --> 00:12:42.160
Refresh, click on Next.

00:12:42.160 --> 00:12:45.490
Now if we reload this, this has now been removed.

00:12:45.490 --> 00:12:49.055
Let's also try one of these into different components.

00:12:49.055 --> 00:12:54.060
This new click on Next.

00:12:54.060 --> 00:12:56.445
Now we can also remove this too.

00:12:56.445 --> 00:13:01.245
Now this was a little bit of extra work to get this into different components.

00:13:01.245 --> 00:13:05.730
But it means we can now go back over to our app.js where we originally

00:13:05.730 --> 00:13:11.665
started and then we can make use of this deletelist method for each list which we have.

00:13:11.665 --> 00:13:14.650
Now we're looping through each one of the lists or when

00:13:14.650 --> 00:13:17.575
it's now do is call this deletelist method,

00:13:17.575 --> 00:13:20.710
which we now have available in this component.

00:13:20.710 --> 00:13:23.740
This dot deletelist.

00:13:23.740 --> 00:13:26.470
Deletelist also needs to be passed in an

00:13:26.470 --> 00:13:31.225
id and firebase storage this inside of an object called ref.

00:13:31.225 --> 00:13:37.765
We can access this with list dot ref, dot id.

00:13:37.765 --> 00:13:41.770
Now we just need to give this a test and in fact,

00:13:41.770 --> 00:13:47.365
this responds to be our list constant rather than our list ref. It gives us a save.

00:13:47.365 --> 00:13:50.395
Now if we go into one of these boards,

00:13:50.395 --> 00:13:53.005
let's go for our Test 2.

00:13:53.005 --> 00:13:55.630
Inside a here we have a list of one,

00:13:55.630 --> 00:13:58.570
two and three and also the cause of a, b,

00:13:58.570 --> 00:14:04.855
and c. Now if we try to delete our board, let's refresh.

00:14:04.855 --> 00:14:08.200
I will now see all the data has been removed.

00:14:08.200 --> 00:14:11.680
We can check this out over in the firebase console.

00:14:11.680 --> 00:14:15.295
Let's check our list on our cards have been removed too.

00:14:15.295 --> 00:14:18.175
Lets first start with our lists.

00:14:18.175 --> 00:14:21.430
We only have the single list on here rather than number 1,

00:14:21.430 --> 00:14:24.280
2 and 3 in our cards.

00:14:24.280 --> 00:14:27.640
You still have the single card 2 and we don't see a, b,

00:14:27.640 --> 00:14:31.450
and c. This is now all of the deleting methods which we need for

00:14:31.450 --> 00:14:34.420
this project and in the next section we will look at

00:14:34.420 --> 00:14:38.630
how we can update our data inside a firebase.
