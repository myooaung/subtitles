WEBVTT
ï»¿1
00:00:00.000 --> 00:00:13.990
Let's now move on to look at the second conditional structure provided by B B.

2
00:00:13.990 --> 00:00:16.550
A select case statement.

3
00:00:16.550 --> 00:00:19.650
So in 11 using condition ALS and looping,

4
00:00:19.650 --> 00:00:24.050
let's open zero to You didn't select case statements.

5
00:00:24.050 --> 00:00:26.370
And in this example,

6
00:00:26.370 --> 00:00:30.430
what we want to do is to display a formal date in this cell,

7
00:00:30.430 --> 00:00:36.850
one that includes the use of an ordinary Let's go into developer visual basic.

8
00:00:36.850 --> 00:00:41.350
And here you'll see we've got the function that we wrote in the last video,

9
00:00:41.350 --> 00:00:45.550
unless I didn't there just for comparison.

10
00:00:45.550 --> 00:00:50.190
The reason that we used if else if in that example,

11
00:00:50.190 --> 00:00:52.950
is that we had a complex test,

12
00:00:52.950 --> 00:00:56.080
so we were testing for a different possibility.

13
00:00:56.080 --> 00:01:00.950
Each time where you're evaluating the same expression each time,

14
00:01:00.950 --> 00:01:04.370
it's more efficient to use a select case statement.

15
00:01:04.370 --> 00:01:09.250
So if we were purely evaluated and Engy version and nothing else,

16
00:01:09.250 --> 00:01:12.160
select case would have been a better option.

17
00:01:12.160 --> 00:01:17.260
Let's write a function that uses select case as opposed to,

18
00:01:17.260 --> 00:01:31.850
if insert procedure tight assumption and let's call it dates with war journal Excel likes

19
00:01:31.850 --> 00:01:34.030
to put new functions at the bottom of the page.

20
00:01:34.030 --> 00:01:36.760
Sunday is in the movies to the top for convenience.

21
00:01:36.760 --> 00:01:43.980
How function won't need any input.

22
00:01:43.980 --> 00:01:46.200
So nothing goes inside the parentheses.

23
00:01:46.200 --> 00:01:50.150
All we need to specify is the type of data it returns.

24
00:01:50.150 --> 00:01:53.240
And since we're gonna be using concatenation,

25
00:01:53.240 --> 00:01:55.010
we'll end up with a string.

26
00:01:55.010 --> 00:01:57.370
So after the closing parenthesis,

27
00:01:57.370 --> 00:01:59.380
we need a string.

28
00:01:59.380 --> 00:02:01.210
Next.

29
00:02:01.210 --> 00:02:04.300
Let's create a couple of variables to make life easy for ourselves.

30
00:02:04.300 --> 00:02:06.260
So first of all,

31
00:02:06.260 --> 00:02:17.310
we have a variable toe hold the ordinary itself them str orginal a string and then let's

32
00:02:17.310 --> 00:02:28.140
have an integer variable toe hold the day of the month So dim LNG day as long next week and

33
00:02:28.140 --> 00:02:29.850
populate l N g day.

34
00:02:29.850 --> 00:02:40.890
So let's day equal and we can use the BB a day v v a date time,

35
00:02:40.890 --> 00:02:42.650
don't they?

36
00:02:42.650 --> 00:02:49.700
It takes a single granite and which is the date they killed all equals a man.

37
00:02:49.700 --> 00:02:57.450
We again used to be a to specify today's date again deviate update time.

38
00:02:57.450 --> 00:03:00.260
In this time we use the date function.

39
00:03:00.260 --> 00:03:10.550
Now let's have a look of the generic structure of a select case statement.

40
00:03:10.550 --> 00:03:14.630
We have the keywords select case.

41
00:03:14.630 --> 00:03:17.450
Then we haven't test expression.

42
00:03:17.450 --> 00:03:24.350
Then we have a series of case tests and you'll notice that we can combine them into a comma

43
00:03:24.350 --> 00:03:30.190
separated list after each case statement specify what we want to do.

44
00:03:30.190 --> 00:03:33.770
If any of these values proves to be true,

45
00:03:33.770 --> 00:03:40.130
just as we have the option for a cattle else statement when we're working with if

46
00:03:40.130 --> 00:03:45.250
statements with the length case we have case else,

47
00:03:45.250 --> 00:03:48.930
they all of the case statements proved to be false.

48
00:03:48.930 --> 00:03:56.740
Case else will apply and then we use in select to close the whole structure.

49
00:03:56.740 --> 00:04:04.480
So now scenario the test expression will simply be LNG date.

50
00:04:04.480 --> 00:04:15.590
That's something we're evaluating and then we need to test for S t nd on rt So s t we test

51
00:04:15.590 --> 00:04:19.450
for 1 21 and 31.

52
00:04:19.450 --> 00:04:20.850
And of course,

53
00:04:20.850 --> 00:04:31.690
if LNG day he calls any of those three our str orginal needs to contain S t and then we can

54
00:04:31.690 --> 00:04:59.900
just copy that for nd on rd so nd would be to or 22 and R D would be three or 23 if LNG

55
00:04:59.900 --> 00:05:02.450
contains none of these values.

56
00:05:02.450 --> 00:05:14.910
Enter case else we want str orginal to equal th So now we have our ordered all we can

57
00:05:14.910 --> 00:05:18.030
construct our final date on return.

58
00:05:18.030 --> 00:05:20.550
That date is the value of our function.

59
00:05:20.550 --> 00:05:23.250
So after the select a statement,

60
00:05:23.250 --> 00:05:24.960
we simply say,

61
00:05:24.960 --> 00:05:26.550
Let my function.

62
00:05:26.550 --> 00:05:27.390
In other words,

63
00:05:27.390 --> 00:05:37.940
let's date with orginal equal most of all the day which is contained in L N G Day and then

64
00:05:37.940 --> 00:05:39.760
we use an percent to tag on.

65
00:05:39.760 --> 00:05:44.150
Str orginal amber send.

66
00:05:44.150 --> 00:05:50.240
I meant to generate the rest of the date I The month in the year we used the very

67
00:05:50.240 --> 00:05:52.650
convenient all that function.

68
00:05:52.650 --> 00:05:57.850
So that is a string function so excited we ve a got strings.

69
00:05:57.850 --> 00:06:08.120
No formats on the expression that we format in on the expression that we format in is the

70
00:06:08.120 --> 00:06:18.030
date that's BB a hot date time don't date comma And then the four minutes which has to go

71
00:06:18.030 --> 00:06:23.410
in close will be a space followed by the full name of the month.

72
00:06:23.410 --> 00:06:29.200
So four times space followed by the full year.

73
00:06:29.200 --> 00:06:34.600
So for wise and closed parentheses,

74
00:06:34.600 --> 00:06:36.950
toe end the full meant function.

75
00:06:36.950 --> 00:06:39.880
So that's our function.

76
00:06:39.880 --> 00:06:51.210
Let's just test it and then let's use it in our worksheet so he can delete the static date

77
00:06:51.210 --> 00:07:00.160
and replace it with equals states with little way enter,

78
00:07:00.160 --> 00:07:02.590
we get our dates,

79
00:07:02.590 --> 00:07:04.050
which includes the orginal

