WEBVTT
ï»¿1
00:00:00.000 --> 00:00:15.480
created a user defined function in a particular workbook means that that function will only

2
00:00:15.480 --> 00:00:18.250
be available within that workbook.

3
00:00:18.250 --> 00:00:20.050
In this video,

4
00:00:20.050 --> 00:00:25.450
we'll look at how you store functions in Microsoft's personal workbook,

5
00:00:25.450 --> 00:00:28.150
making them university available.

6
00:00:28.150 --> 00:00:31.650
09 even started.

7
00:00:31.650 --> 00:00:42.690
That's no open up the final filed 05 and you'll notice that this workbook has the file

8
00:00:42.690 --> 00:00:44.750
extension XLs sex.

9
00:00:44.750 --> 00:00:47.650
There's not a macro enabled workbook,

10
00:00:47.650 --> 00:00:55.150
So what we're going to do is to create a macro which lives in excels personal workbook.

11
00:00:55.150 --> 00:01:01.450
Whenever you create a user defined function in excels personal macro workbook,

12
00:01:01.450 --> 00:01:05.950
that function is available for use in any workbook.

13
00:01:05.950 --> 00:01:10.550
And you don't have to save your workbook in the special macro enabled Hornet.

14
00:01:10.550 --> 00:01:14.250
If all you started writing B B A,

15
00:01:14.250 --> 00:01:17.350
the personal workbook will be visible,

16
00:01:17.350 --> 00:01:23.850
so we're going to developer and click on Visual Basic Toe launched a visual basic editor.

17
00:01:23.850 --> 00:01:28.500
You'll see that the only project that we have is full,

18
00:01:28.500 --> 00:01:30.060
the file that I'm just opened.

19
00:01:30.060 --> 00:01:34.150
So what we want to do is to write a function,

20
00:01:34.150 --> 00:01:38.360
but we don't want to store it in this particular work.

21
00:01:38.360 --> 00:01:42.350
We want to story in excels own macro work,

22
00:01:42.350 --> 00:01:44.050
so it's always available.

23
00:01:44.050 --> 00:01:50.590
So a simple trick for making the personal macro workbook available is to use the macro

24
00:01:50.590 --> 00:01:51.250
recorder.

25
00:01:51.250 --> 00:01:54.850
If I simply click on record Macro,

26
00:01:54.850 --> 00:01:57.220
I don't actually want to record a macro.

27
00:01:57.220 --> 00:02:00.840
I'm just doing this to make the personal micro workbook available.

28
00:02:00.840 --> 00:02:05.350
So the key thing is here in this drop down stall the macro in,

29
00:02:05.350 --> 00:02:10.650
make sure we choose personal macro workbook and when we click OK,

30
00:02:10.650 --> 00:02:16.450
Excel creates the macro stores it in the personal macro workbook,

31
00:02:16.450 --> 00:02:20.150
thereby making the personal macro work with visible.

32
00:02:20.150 --> 00:02:22.110
So without doing anything,

33
00:02:22.110 --> 00:02:24.250
we can now just click on Stop recorded.

34
00:02:24.250 --> 00:02:27.250
When we go back to the visual basic editor,

35
00:02:27.250 --> 00:02:32.750
we now have an extra project or the personal bankers workbook.

36
00:02:32.750 --> 00:02:39.140
And inside it we have a models folder and inside that the model that has been generated

37
00:02:39.140 --> 00:02:43.300
automatically for us to store the macro that we started.

38
00:02:43.300 --> 00:02:44.770
Obviously,

39
00:02:44.770 --> 00:02:47.250
we don't need this macro so we can just delete it.

40
00:02:47.250 --> 00:02:54.450
But that simple trick basically enables you to make the personal macron workbook available

41
00:02:54.450 --> 00:03:00.870
so you can start using it for your user defined functions for convenience.

42
00:03:00.870 --> 00:03:05.170
We're not gonna take this approach during this course will just put out Macron's in

43
00:03:05.170 --> 00:03:06.610
individual Worth books,

44
00:03:06.610 --> 00:03:08.850
which is the least efficient way of working.

45
00:03:08.850 --> 00:03:10.310
But for training purposes,

46
00:03:10.310 --> 00:03:11.080
it's fine.

47
00:03:11.080 --> 00:03:14.120
When you come to write your own user defined functions,

48
00:03:14.120 --> 00:03:18.470
you'll probably find that this is a good way of having more user defined functions always

49
00:03:18.470 --> 00:03:19.150
available.

50
00:03:19.150 --> 00:03:22.550
So let's just rename the module.

51
00:03:22.550 --> 00:03:34.450
I'm gonna call it M U T X and let's write our second user defined function.

52
00:03:34.450 --> 00:03:37.940
So for this example,

53
00:03:37.940 --> 00:03:41.950
we're going to have a function which does a simple conversion.

54
00:03:41.950 --> 00:03:46.250
That missile give us a chance to work with function arguments.

55
00:03:46.250 --> 00:03:56.050
So in the training folder we open up 05 right in the UDF in the personal workbook dot txt.

56
00:03:56.050 --> 00:04:01.370
We have a simple conversion formula on.

57
00:04:01.370 --> 00:04:05.050
We want to encapsulate that into a user defined function.

58
00:04:05.050 --> 00:04:12.180
So let's just copulate formula and we're now going to write a function which does that

59
00:04:12.180 --> 00:04:19.850
conversion that you create the function we can use insert procedure.

60
00:04:19.850 --> 00:04:25.710
Specify that type is being a function the scope of defaults to public,

61
00:04:25.710 --> 00:04:26.850
which is what we want,

62
00:04:26.850 --> 00:04:32.550
and this function will calculate a person's body mass index B m I.

63
00:04:32.550 --> 00:04:37.290
So let's call it be at mine or to be more accurate.

64
00:04:37.290 --> 00:04:40.550
Let's say B M I under school Imperial,

65
00:04:40.550 --> 00:04:43.450
there's a function,

66
00:04:43.450 --> 00:04:47.810
but this time we do need to specify arguments.

67
00:04:47.810 --> 00:04:56.350
So let's begin by pasted in the generic formula on will convert this into a comment.

68
00:04:56.350 --> 00:05:00.150
And we do that by putting an apostrophe at the start of the line,

69
00:05:00.150 --> 00:05:07.030
and their function is to enable you to explain the lines of code that you're writing.

70
00:05:07.030 --> 00:05:10.020
This is both for the benefit of other people.

71
00:05:10.020 --> 00:05:15.620
Read in your code and for yourself when you come back to the code and it's not this

72
00:05:15.620 --> 00:05:17.550
familiar is when you initially wrote it,

73
00:05:17.550 --> 00:05:23.250
so we can see from the formula that the two bits of information that we need are the weight

74
00:05:23.250 --> 00:05:26.250
in pounds on the height in inches.

75
00:05:26.250 --> 00:05:31.950
So those are the two arguments that we need to specify within the parentheses,

76
00:05:31.950 --> 00:05:34.950
so we can simply call them wait.

77
00:05:34.950 --> 00:05:38.420
And if you remember from the previous video,

78
00:05:38.420 --> 00:05:44.150
we then specify the type of data that this parameter will our human will accept.

79
00:05:44.150 --> 00:05:46.330
We do that with the keyword,

80
00:05:46.330 --> 00:05:50.650
as so this is going to be a decimal number,

81
00:05:50.650 --> 00:05:58.250
and the data type that will use for that is referred to a single coma,

82
00:05:58.250 --> 00:06:01.910
and then we have the heights if we can.

83
00:06:01.910 --> 00:06:09.470
Also specify is a single when the final part of the definition is the data type that's

84
00:06:09.470 --> 00:06:10.980
returned by our function,

85
00:06:10.980 --> 00:06:13.750
which will also be single.

86
00:06:13.750 --> 00:06:19.450
So now we can specify the results produced by the function.

87
00:06:19.450 --> 00:06:25.470
I'll just press tab to invent the line and to specify the results.

88
00:06:25.470 --> 00:06:36.150
Muse the keyword Let and we use the name of the function equal the necessary calculation,

89
00:06:36.150 --> 00:06:38.690
and we can just follow the generic formula.

90
00:06:38.690 --> 00:06:42.070
So open parentheses wait,

91
00:06:42.070 --> 00:06:44.950
divided by open parentheses.

92
00:06:44.950 --> 00:06:49.350
Height multiplied by heights,

93
00:06:49.350 --> 00:06:59.400
close parentheses twice multiplied by 703 That's all we need to do for this simple function

94
00:06:59.400 --> 00:06:59.400
.

95
00:06:59.400 --> 00:07:02.050
So we're input in two arguments,

96
00:07:02.050 --> 00:07:06.780
and then we use in both of those arguments in a calculation,

97
00:07:06.780 --> 00:07:12.750
especially find that our function returns the results off that calculation.

98
00:07:12.750 --> 00:07:17.650
So before testing,

99
00:07:17.650 --> 00:07:19.390
we go to debug Andrews.

100
00:07:19.390 --> 00:07:20.150
Compile.

101
00:07:20.150 --> 00:07:21.090
No,

102
00:07:21.090 --> 00:07:22.050
there is appear.

103
00:07:22.050 --> 00:07:29.290
So we good to go ahead and test one thing that you're not able to do when you put functions

104
00:07:29.290 --> 00:07:35.270
in excels personal Macron workbook is to simply start typing the function and have excel.

105
00:07:35.270 --> 00:07:36.250
Recognize it.

106
00:07:36.250 --> 00:07:38.450
So if I type for example,

107
00:07:38.450 --> 00:07:39.210
equals B.

108
00:07:39.210 --> 00:07:39.850
M I.

109
00:07:39.850 --> 00:07:43.090
You'll see there's no intelligence.

110
00:07:43.090 --> 00:07:45.850
We'll see that there's no water in completion.

111
00:07:45.850 --> 00:07:50.850
So what we need to do is to use the insert function command,

112
00:07:50.850 --> 00:07:56.650
and this is available just on the left of the formula bar in certain country.

113
00:07:56.650 --> 00:07:59.960
It's also available in the home tab in the form of his tab.

114
00:07:59.960 --> 00:08:06.440
So whichever is convenient and this brings up the insert function dialogue.

115
00:08:06.440 --> 00:08:12.250
We look at our categories as soon as you start creating user defined functions,

116
00:08:12.250 --> 00:08:15.310
an extra categories automatically created,

117
00:08:15.310 --> 00:08:16.750
called user defined.

118
00:08:16.750 --> 00:08:21.550
And within that you'll find the function that we've just written.

119
00:08:21.550 --> 00:08:25.310
And you also noticed the syntax that's required.

120
00:08:25.310 --> 00:08:29.150
Whenever you store a function in the personal macro workbook,

121
00:08:29.150 --> 00:08:34.860
you have to actually precede it with the name of the personal macro workbook and an

122
00:08:34.860 --> 00:08:37.690
exclamation month when we click.

123
00:08:37.690 --> 00:08:38.350
OK,

124
00:08:38.350 --> 00:08:41.400
because we've used the Insert Function command.

125
00:08:41.400 --> 00:08:47.480
We get this useful wizard so you can see our two parameters weight and height on using

126
00:08:47.480 --> 00:08:53.050
commanders click on the cell containing the weight and the cell containing the height,

127
00:08:53.050 --> 00:08:58.750
and our function returns the correct results.

128
00:08:58.750 --> 00:09:00.250
Speaking land.

129
00:09:00.250 --> 00:09:00.910
Just copy that,

130
00:09:00.910 --> 00:09:03.550
holding it down like any other function.

131
00:09:03.550 --> 00:09:10.560
So although the syntax used to reference the function is a pit long winded,

132
00:09:10.560 --> 00:09:15.540
it's still useful in that you can immediately distinguish between excels,

133
00:09:15.540 --> 00:09:19.150
functions and your own user defined functions.

134
00:09:19.150 --> 00:09:21.240
They makes them stand out.

135
00:09:21.240 --> 00:09:21.950
Basically,

136
00:09:21.950 --> 00:09:26.850
if we now quit excel,

137
00:09:26.850 --> 00:09:31.030
there are two things which we can save on which,

138
00:09:31.030 --> 00:09:35.850
Excel will ask is whether we want to say the changes to this workbook,

139
00:09:35.850 --> 00:09:39.950
but also the changes to the personal macro workbook.

140
00:09:39.950 --> 00:09:42.450
So let's go ahead and quit Excel.

141
00:09:42.450 --> 00:09:47.200
Do you want to save changes to this file?

142
00:09:47.200 --> 00:09:47.880
Yes,

143
00:09:47.880 --> 00:09:48.490
we do.

144
00:09:48.490 --> 00:09:51.350
But then a second message appears.

145
00:09:51.350 --> 00:09:55.250
You want to save the changes you made to the personal macro workbook,

146
00:09:55.250 --> 00:09:56.960
And of course,

147
00:09:56.960 --> 00:10:01.550
we would need to click on Save if we want to preserve those changes.

148
00:10:01.550 --> 00:10:05.130
So if you want to experiment with that feature,

149
00:10:05.130 --> 00:10:10.240
go ahead and click on Save and then the macro that you created in the personal macro

150
00:10:10.240 --> 00:10:12.650
workbook will still be available.

151
00:10:12.650 --> 00:10:15.340
But for training purposes,

152
00:10:15.340 --> 00:10:19.650
it's more convenient to store our Mac rose in individual workbooks,

153
00:10:19.650 --> 00:10:21.070
so that's what we'll be doing.

154
00:10:21.070 --> 00:10:23.450
So I'll just click on cancel for the moment

