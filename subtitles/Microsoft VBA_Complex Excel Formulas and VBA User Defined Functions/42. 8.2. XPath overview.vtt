WEBVTT
ï»¿1
00:00:00.000 --> 00:00:16.210
in the last video we used excels Web service function to retrieve information from a Web

2
00:00:16.210 --> 00:00:16.950
service,

3
00:00:16.950 --> 00:00:21.430
and the information that we retrieved was exactly the information that we wanted.

4
00:00:21.430 --> 00:00:23.940
This is not normally the case.

5
00:00:23.940 --> 00:00:28.650
What's normally returned by the Web service is a complete XML document,

6
00:00:28.650 --> 00:00:33.730
and you then need to navigate your way through this XML document to find the data that you

7
00:00:33.730 --> 00:00:34.550
actually want.

8
00:00:34.550 --> 00:00:40.860
The function that enables you to do this is filter XML,

9
00:00:40.860 --> 00:00:42.850
and it takes two parameters.

10
00:00:42.850 --> 00:00:46.240
The first is the XML that you want to work with,

11
00:00:46.240 --> 00:00:50.120
and this is normally supplied by using the Web service function.

12
00:00:50.120 --> 00:00:55.350
The second parameter filled XML is an expert statement.

13
00:00:55.350 --> 00:01:00.640
So what is expert expert is an XML technology,

14
00:01:00.640 --> 00:01:04.890
which is used to retrieve information from within an egg seminal structure,

15
00:01:04.890 --> 00:01:13.250
and the expanse statements used with filled XML are what unknown is location steps.

16
00:01:13.250 --> 00:01:20.130
So a typical experts statement will consist of one or more location steps separated by the

17
00:01:20.130 --> 00:01:21.550
forward slash character.

18
00:01:21.550 --> 00:01:28.040
The use of location steps in experts is very similar to working with a directory structure

19
00:01:28.040 --> 00:01:28.040
.

20
00:01:28.040 --> 00:01:34.130
You start on the C drive and you're going to fold a one inside folder one you find folder

21
00:01:34.130 --> 00:01:35.930
to and so forth.

22
00:01:35.930 --> 00:01:38.300
So in this illustration,

23
00:01:38.300 --> 00:01:39.790
we're working with the branches.

24
00:01:39.790 --> 00:01:46.590
But XML structure that we saw before and we use in three locations steps the first take

25
00:01:46.590 --> 00:01:47.800
sister branches,

26
00:01:47.800 --> 00:01:49.340
which is the root element.

27
00:01:49.340 --> 00:01:53.070
The second takes us to the child element of branches,

28
00:01:53.070 --> 00:01:54.090
which is branch,

29
00:01:54.090 --> 00:01:58.200
and the third takes us to a child of the branch element,

30
00:01:58.200 --> 00:01:59.990
which is branch manager.

31
00:01:59.990 --> 00:02:04.750
There are three parts to a location step statement.

32
00:02:04.750 --> 00:02:06.620
First of all,

33
00:02:06.620 --> 00:02:09.550
you specify the access that you want to travel along,

34
00:02:09.550 --> 00:02:13.700
and there are quite a few to choose from the default.

35
00:02:13.700 --> 00:02:15.180
Is the child access.

36
00:02:15.180 --> 00:02:16.340
In other words,

37
00:02:16.340 --> 00:02:20.750
you start with a parent and you look inside for one of the child elements.

38
00:02:20.750 --> 00:02:25.130
The second component is called a no test,

39
00:02:25.130 --> 00:02:29.740
and this allows you to specify the node or nodes that you want to retrieve.

40
00:02:29.740 --> 00:02:32.150
Traveling along the specified access.

41
00:02:32.150 --> 00:02:35.950
The third part of a location step is optional.

42
00:02:35.950 --> 00:02:37.870
It's called a predicate,

43
00:02:37.870 --> 00:02:43.430
and it allows you to filter out any knows that you don't need A from the note seven you've

44
00:02:43.430 --> 00:02:49.150
retrieved by traveling along a given access and looking for a particular set of nos.

45
00:02:49.150 --> 00:02:53.180
so he returns while branches.

46
00:02:53.180 --> 00:02:54.050
Example.

47
00:02:54.050 --> 00:02:56.050
We have three locations.

48
00:02:56.050 --> 00:02:56.630
Steps,

49
00:02:56.630 --> 00:02:57.520
branches,

50
00:02:57.520 --> 00:02:58.090
branch,

51
00:02:58.090 --> 00:03:02.190
branch manager in locations.

52
00:03:02.190 --> 00:03:03.120
Step one.

53
00:03:03.120 --> 00:03:09.920
We trouble along the child access to get to the branches element in location.

54
00:03:09.920 --> 00:03:10.810
Step two.

55
00:03:10.810 --> 00:03:18.660
We again travel along the child axes and this time our no test his branch and then in

56
00:03:18.660 --> 00:03:24.110
locations Step three were again traveling along the child access and this time the no test

57
00:03:24.110 --> 00:03:24.110
,

58
00:03:24.110 --> 00:03:25.350
its branch manager.

59
00:03:25.350 --> 00:03:26.970
And,

60
00:03:26.970 --> 00:03:27.440
of course,

61
00:03:27.440 --> 00:03:29.750
in none of the three location steps,

62
00:03:29.750 --> 00:03:31.560
do we use a predicate?

63
00:03:31.560 --> 00:03:32.220
As I said,

64
00:03:32.220 --> 00:03:34.270
the predicated is optional on.

65
00:03:34.270 --> 00:03:36.320
We will encounter its use later.

66
00:03:36.320 --> 00:03:40.050
So just to recap,

67
00:03:40.050 --> 00:03:44.750
location steps are separated by the forward slash character.

68
00:03:44.750 --> 00:03:47.330
Whenever you see a location step,

69
00:03:47.330 --> 00:03:50.450
which appears to consist purely of a no test,

70
00:03:50.450 --> 00:03:55.550
this means that the child access is being used because it's the default.

71
00:03:55.550 --> 00:04:02.610
You don't actually need to specify the child access you could if you wanted to,

72
00:04:02.610 --> 00:04:08.850
and this is how it would be written child fathered by two Coghlan's branches child branch

73
00:04:08.850 --> 00:04:10.480
child branch manager.

74
00:04:10.480 --> 00:04:12.160
But of course,

75
00:04:12.160 --> 00:04:13.490
because it could be omitted,

76
00:04:13.490 --> 00:04:15.670
everyone makes it so.

77
00:04:15.670 --> 00:04:18.770
It's just written branches branch branch manager.

78
00:04:18.770 --> 00:04:26.180
So that's a quick overview off X Path location steps in the next video.

79
00:04:26.180 --> 00:04:32.820
We look at the use of expert statements in conjunction with the Filter XML function and

80
00:04:32.820 --> 00:04:34.140
then in the next section,

81
00:04:34.140 --> 00:04:37.140
when we discussed the use of xsl style sheets,

82
00:04:37.140 --> 00:04:42.450
will see how expert is used to enable you to home in on the various parts of an XML

83
00:04:42.450 --> 00:04:45.750
structure as you're performing transformations.

