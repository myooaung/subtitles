WEBVTT
ï»¿1
00:00:00.000 --> 00:00:15.090
in this section will focus on some of the advanced techniques and structures that you'll

2
00:00:15.090 --> 00:00:19.350
encounter when working with look up in reference functions.

3
00:00:19.350 --> 00:00:24.360
I will begin by looking at the nest in of the V look up function.

4
00:00:24.360 --> 00:00:33.350
So we now in 05 look up in reference and it's open up 01 In this example.

5
00:00:33.350 --> 00:00:39.550
We want to find one missing piece of information before we can carry out our analysis.

6
00:00:39.550 --> 00:00:43.650
And that's the branch that each of our account handlers works.

7
00:00:43.650 --> 00:00:45.580
However,

8
00:00:45.580 --> 00:00:47.150
to make things a little tricky,

9
00:00:47.150 --> 00:00:53.320
the only information we have to start with is an invoice number on.

10
00:00:53.320 --> 00:00:54.110
Therefore,

11
00:00:54.110 --> 00:00:58.750
we need to go through a chain before we can find the information we're actually looking for

12
00:00:58.750 --> 00:00:58.750
.

13
00:00:58.750 --> 00:01:01.750
So starting with our invoice number,

14
00:01:01.750 --> 00:01:03.890
we can go across to the invoices,

15
00:01:03.890 --> 00:01:08.450
work feet and find out the client i d.

16
00:01:08.450 --> 00:01:10.770
Once we've got a client,

17
00:01:10.770 --> 00:01:11.450
I d.

18
00:01:11.450 --> 00:01:20.250
We can go to clients and find the account handler who services that clients account.

19
00:01:20.250 --> 00:01:23.050
Once we have an account handler,

20
00:01:23.050 --> 00:01:25.310
we can go to the account handlers,

21
00:01:25.310 --> 00:01:29.300
work fees and find the bronze I d.

22
00:01:29.300 --> 00:01:32.010
That that account handler works.

23
00:01:32.010 --> 00:01:34.410
And then finally,

24
00:01:34.410 --> 00:01:36.050
once we've got a branch i d.

25
00:01:36.050 --> 00:01:38.800
We can use that in the branches,

26
00:01:38.800 --> 00:01:41.750
Work feet to find the name of the branch.

27
00:01:41.750 --> 00:01:51.820
So we'll need four B look up functions on this diagram shows the manner in which we need to

28
00:01:51.820 --> 00:01:52.650
nest them.

29
00:01:52.650 --> 00:02:00.050
The innermost look up will be the one that we're starting with the invoice number.

30
00:02:00.050 --> 00:02:03.950
We used the invoice number to find the client I d.

31
00:02:03.950 --> 00:02:11.180
And then that client I d becomes the look up value off our second we look up,

32
00:02:11.180 --> 00:02:13.050
which is wrapped around the first.

33
00:02:13.050 --> 00:02:15.520
When we use that client,

34
00:02:15.520 --> 00:02:17.800
I'd be to find the account handler.

35
00:02:17.800 --> 00:02:21.770
I d that account handler.

36
00:02:21.770 --> 00:02:25.910
I d in turn becomes the input of our third look up,

37
00:02:25.910 --> 00:02:30.300
which is wrapped around the 1st 2 And with this look up,

38
00:02:30.300 --> 00:02:31.570
we're using the account handle.

39
00:02:31.570 --> 00:02:34.580
I'd be to pull back the bronze I d.

40
00:02:34.580 --> 00:02:38.100
And then all our final will be Look up,

41
00:02:38.100 --> 00:02:39.890
Which will be the outermost one.

42
00:02:39.890 --> 00:02:44.350
We used the branch I d to retrieve the Brahms name.

43
00:02:44.350 --> 00:02:50.650
Let's go ahead and write out function in F two,

44
00:02:50.650 --> 00:02:53.350
but expand formula bar.

45
00:02:53.350 --> 00:03:03.990
So we start with the outermost be look up equals we look up all tender because we're now

46
00:03:03.990 --> 00:03:05.450
gonna nest inside it.

47
00:03:05.450 --> 00:03:06.530
Another V.

48
00:03:06.530 --> 00:03:07.250
Look up.

49
00:03:07.250 --> 00:03:09.660
Well,

50
00:03:09.660 --> 00:03:09.890
Ken,

51
00:03:09.890 --> 00:03:16.470
time on the same for the third on one more.

52
00:03:16.470 --> 00:03:26.350
So this is our innermost look up and we start by looking for the invoice number.

53
00:03:26.350 --> 00:03:29.080
So look at value on his innermost.

54
00:03:29.080 --> 00:03:35.240
To be look up is going to be be to the invoice number coma.

55
00:03:35.240 --> 00:03:38.550
Then our table array will be in invoices.

56
00:03:38.550 --> 00:03:47.880
We need to go from column A to see three columns calmer.

57
00:03:47.880 --> 00:03:52.650
And the answer we want to pull back is in the third of those three columns.

58
00:03:52.650 --> 00:03:57.250
So a column index number is three comma,

59
00:03:57.250 --> 00:04:02.420
and then we're looking for an exact match so we can either put false or zero.

60
00:04:02.420 --> 00:04:10.640
So this innermost the look up now becomes but look up,

61
00:04:10.640 --> 00:04:13.340
value argument of our second.

62
00:04:13.340 --> 00:04:21.250
We look up so we can put a comma old enter and then to save space,

63
00:04:21.250 --> 00:04:24.550
I'll put the remaining three arguments along one line.

64
00:04:24.550 --> 00:04:30.770
So the table array for our second we look up will be in clients,

65
00:04:30.770 --> 00:04:38.750
and again it spans from a to see three columns coma.

66
00:04:38.750 --> 00:04:46.550
And the answer we're looking for is again in the third column and common zero for an exact

67
00:04:46.550 --> 00:04:47.150
match.

68
00:04:47.150 --> 00:04:53.250
Walt enter and then let's put the clothes in parenthesis aligned with the opening

69
00:04:53.250 --> 00:04:54.100
parenthesis.

70
00:04:54.100 --> 00:05:00.290
Then this second we look up in terms becomes the look of value,

71
00:05:00.290 --> 00:05:02.900
the first parameter of our Thirdly,

72
00:05:02.900 --> 00:05:03.450
look up.

73
00:05:03.450 --> 00:05:07.750
So we put a comma to end that argument.

74
00:05:07.750 --> 00:05:16.250
Old enter men will just align the remaining arguments underneath the first argument,

75
00:05:16.250 --> 00:05:17.450
which was to be look up.

76
00:05:17.450 --> 00:05:22.050
So table array argument is now going to be an account handless,

77
00:05:22.050 --> 00:05:28.070
and this time our table array stretches from a right across the e,

78
00:05:28.070 --> 00:05:30.090
which is where we have the branch i d.

79
00:05:30.090 --> 00:05:38.720
So five columns comma on The answer we're looking for is in the fifth column Comma and zero

80
00:05:38.720 --> 00:05:40.050
for an exact match.

81
00:05:40.050 --> 00:05:50.850
We'll enter and then we allowing the clothes in parenthesis with the opening one on this,

82
00:05:50.850 --> 00:05:57.690
our third we look up now becomes the look at value argument for our final outermost Be look

83
00:05:57.690 --> 00:06:06.940
up So comma and the argument old enter and then that sidelined.

84
00:06:06.940 --> 00:06:09.460
The remaining arguments with the first,

85
00:06:09.460 --> 00:06:16.260
which was the third we look up table array this time is going to be in branches and it

86
00:06:16.260 --> 00:06:18.750
spends just the 1st 2 columns,

87
00:06:18.750 --> 00:06:19.750
coma.

88
00:06:19.750 --> 00:06:20.770
And,

89
00:06:20.770 --> 00:06:21.150
of course,

90
00:06:21.150 --> 00:06:28.360
the second of those two columns has the branch that we're looking for and common zero toe

91
00:06:28.360 --> 00:06:30.640
end cancer.

92
00:06:30.640 --> 00:06:32.940
In the final closing,

93
00:06:32.940 --> 00:06:43.700
parenthesis aligns with the opening one off our outermost look up on That's it.

94
00:06:43.700 --> 00:06:52.260
Let's Angela formula collapse the formula bar and copy down the formula by double clicking

95
00:06:52.260 --> 00:06:53.540
on the also feel handle.

96
00:06:53.540 --> 00:06:57.770
So that's the technique,

97
00:06:57.770 --> 00:06:59.690
or nest in B look ups.

98
00:06:59.690 --> 00:07:03.940
It's a fairly common requirement where you want to look something up,

99
00:07:03.940 --> 00:07:08.350
but there's no direct route to the information that you're trying to retrieve.

100
00:07:08.350 --> 00:07:10.120
So in this scenario,

101
00:07:10.120 --> 00:07:17.070
we're probably now copy out data and then paste values rather than leaving the data

102
00:07:17.070 --> 00:07:17.820
volatile,

103
00:07:17.820 --> 00:07:23.950
constantly recalculated so they have it nested the lookups.

