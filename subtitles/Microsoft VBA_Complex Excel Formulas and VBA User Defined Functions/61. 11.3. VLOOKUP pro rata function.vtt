WEBVTT
ï»¿1
00:00:00.000 --> 00:00:20.840
if you're an experienced Excel user,

2
00:00:20.840 --> 00:00:26.980
you're probably familiar with the B look up function I won't will be doing in this video is

3
00:00:26.980 --> 00:00:29.970
creating our own variation of the V look up function,

4
00:00:29.970 --> 00:00:32.750
which has a pro rata feature.

5
00:00:32.750 --> 00:00:35.050
In this example.

6
00:00:35.050 --> 00:00:39.550
V Look up is being used to calculate the annual bonus paid to sales people.

7
00:00:39.550 --> 00:00:42.750
And if we take the first person Alexander Williams,

8
00:00:42.750 --> 00:00:48.550
you'll see that he's entitled to a bonus payments of 1.25%.

9
00:00:48.550 --> 00:00:55.440
He falls in this bracket between the quarter of a 1,000,000 half a 1,000,000 but he's much

10
00:00:55.440 --> 00:00:56.950
closer to the half a 1,000,000.

11
00:00:56.950 --> 00:01:04.580
So if a pro rata system were in place instead of getting 1.25 because he's fallen short off

12
00:01:04.580 --> 00:01:10.050
the half a 1,000,000 required for 2.5% he'd be getting a pro rata figure.

13
00:01:10.050 --> 00:01:17.230
So because his sales close to the upper limit of the band in which he falls so his bonus

14
00:01:17.230 --> 00:01:18.880
rates will also increase.

15
00:01:18.880 --> 00:01:21.640
So on our pro rata system,

16
00:01:21.640 --> 00:01:26.910
you get a bonus of about 2.4% so that's kind of visual.

17
00:01:26.910 --> 00:01:27.550
Basic.

18
00:01:27.550 --> 00:01:30.750
Let's begin by incessant module.

19
00:01:30.750 --> 00:01:38.400
I will call it M user defined,

20
00:01:38.400 --> 00:01:45.610
and now we need to insert a public function.

21
00:01:45.610 --> 00:01:52.630
I will call it be Look up pro rata.

22
00:01:52.630 --> 00:02:06.100
Let's begin by defining our variables and at the same time I'll describe the technique that

23
00:02:06.100 --> 00:02:07.930
we're going to use to come up with the answer.

24
00:02:07.930 --> 00:02:16.750
So our first step will be to identify the upper and lower limits that apply to each person

25
00:02:16.750 --> 00:02:16.750
,

26
00:02:16.750 --> 00:02:18.450
said Look at the person sales.

27
00:02:18.450 --> 00:02:22.950
And then we want to find out which band they fall into.

28
00:02:22.950 --> 00:02:29.250
So the first person is you can see Onley look up column falls into the band between quarter

29
00:02:29.250 --> 00:02:35.040
of a 1,000,000 half a 1,000,000 then on the Return column that column but contains the

30
00:02:35.040 --> 00:02:35.650
answer.

31
00:02:35.650 --> 00:02:42.050
He falls into the 1.25 to 2.5% bracket.

32
00:02:42.050 --> 00:02:44.620
And,

33
00:02:44.620 --> 00:02:45.070
of course,

34
00:02:45.070 --> 00:02:45.980
for this function,

35
00:02:45.980 --> 00:02:50.500
both the input values and the output values are numeric,

36
00:02:50.500 --> 00:02:54.850
so hence will use the double data type for all of these variables.

37
00:02:54.850 --> 00:03:09.770
Next,

38
00:03:09.770 --> 00:03:11.550
we'll calculate the look up range,

39
00:03:11.550 --> 00:03:16.350
and to do this will simply subtract the lower limits from the upper limit.

40
00:03:16.350 --> 00:03:20.050
And we'll do this both for the look up column,

41
00:03:20.050 --> 00:03:21.720
but first column.

42
00:03:21.720 --> 00:03:27.210
I'll look up table on the return column in this case,

43
00:03:27.210 --> 00:03:29.350
the second column of our look up table.

44
00:03:29.350 --> 00:03:45.850
These two figures will tell us the input and output bands within which we need to calculate

45
00:03:45.850 --> 00:03:47.500
the final pro rata figure.

46
00:03:47.500 --> 00:03:54.550
What we now need to do is to calculate where within these bands the figure actually falls

47
00:03:54.550 --> 00:03:56.610
on.

48
00:03:56.610 --> 00:04:01.820
The first step in doing this is to calculate the difference between the sales figure that

49
00:04:01.820 --> 00:04:04.250
we're looking up on the lower limit.

50
00:04:04.250 --> 00:04:06.400
So in this case,

51
00:04:06.400 --> 00:04:11.610
there'll be quite a big difference because this person sales figure is close to the upper

52
00:04:11.610 --> 00:04:12.150
limit.

53
00:04:12.150 --> 00:04:15.800
So we'll call this one DB l look up,

54
00:04:15.800 --> 00:04:16.250
def.

55
00:04:16.250 --> 00:04:21.210
Then once we have these figures in place,

56
00:04:21.210 --> 00:04:23.850
we can work out our pro grant a factor.

57
00:04:23.850 --> 00:04:33.450
And to do this will take the difference between the look up value on the lower limit.

58
00:04:33.450 --> 00:04:36.450
A man defined that by the look up a range.

59
00:04:36.450 --> 00:04:40.250
So if the person sales figure falls bang in the middle,

60
00:04:40.250 --> 00:04:42.850
we'd end up with no 0.5.

61
00:04:42.850 --> 00:04:45.950
In this example,

62
00:04:45.950 --> 00:04:49.250
this person sales figure is very close to the upper limit,

63
00:04:49.250 --> 00:05:01.600
so we end up with a figure of 0.9374 and finally will need a range variable so that we can

64
00:05:01.600 --> 00:05:04.240
loop through the range specified by the user.

65
00:05:04.240 --> 00:05:11.730
Let's now turn our attention to the other type of variables will make the parameter

66
00:05:11.730 --> 00:05:12.550
variables.

67
00:05:12.550 --> 00:05:16.830
So we compare our V look up with the built in V.

68
00:05:16.830 --> 00:05:19.050
Look up what we've got here.

69
00:05:19.050 --> 00:05:24.470
I can just click on the inside function button to bring up the function with it.

70
00:05:24.470 --> 00:05:28.050
You'll see that we've got a parameter called look up value.

71
00:05:28.050 --> 00:05:33.030
Then we've got the table of Ray and then we've got the column in.

72
00:05:33.030 --> 00:05:35.640
Next time we will need all three of these.

73
00:05:35.640 --> 00:05:38.280
We won't need the final optional parameter,

74
00:05:38.280 --> 00:05:43.550
but what we'll do is we'll use exactly the same terminology that Excel uses.

75
00:05:43.550 --> 00:05:56.820
And then finally,

76
00:05:56.820 --> 00:05:59.450
we need to specify the type of data being returned,

77
00:05:59.450 --> 00:06:05.100
which in this case is going to be a double excels,

78
00:06:05.100 --> 00:06:05.740
built envy.

79
00:06:05.740 --> 00:06:06.300
Look up can,

80
00:06:06.300 --> 00:06:06.750
of course,

81
00:06:06.750 --> 00:06:08.150
return text values.

82
00:06:08.150 --> 00:06:10.260
But for our function,

83
00:06:10.260 --> 00:06:11.760
text doesn't make any sense.

84
00:06:11.760 --> 00:06:16.650
The points of pro branta is too calculated numerical output value,

85
00:06:16.650 --> 00:06:20.650
so our function only needs to think about returning a double.

86
00:06:20.650 --> 00:06:31.940
So our first task is to locate which banned matches to overcome value so the use is going

87
00:06:31.940 --> 00:06:37.450
to specify the table the look up table by doing one of three things.

88
00:06:37.450 --> 00:06:44.510
Bacon drank across just the figures they could drink across the entire table,

89
00:06:44.510 --> 00:06:45.450
including heading.

90
00:06:45.450 --> 00:06:51.050
Or they can do what most people do and dragged across the column headings.

91
00:06:51.050 --> 00:06:58.450
So the strategy we're going to take is to start on the top left of the specified range.

92
00:06:58.450 --> 00:07:01.810
And then before we proceed well,

93
00:07:01.810 --> 00:07:06.080
there's need to calculate whether we're in a cell that contains a number,

94
00:07:06.080 --> 00:07:08.220
and if we're not weaken,

95
00:07:08.220 --> 00:07:09.970
then just move down one cell,

96
00:07:09.970 --> 00:07:14.250
which will take us to the first numerical cell within the range.

97
00:07:14.250 --> 00:07:25.450
So when we set our anti look up,

98
00:07:25.450 --> 00:07:35.160
we need to look inside our table array parameter on that has been defined as arranged.

99
00:07:35.160 --> 00:07:36.870
So since I pressed dots,

100
00:07:36.870 --> 00:07:41.010
the intelligence gives me all of the members which apply to the range.

101
00:07:41.010 --> 00:07:46.150
Object on what we're interested in is the cells within the range.

102
00:07:46.150 --> 00:07:47.710
And to get to the top left,

103
00:07:47.710 --> 00:07:48.370
we say Really,

104
00:07:48.370 --> 00:07:50.350
next one column index one.

105
00:07:50.350 --> 00:07:53.450
So that's our starting point.

106
00:07:53.450 --> 00:08:00.470
Then we can use a one line if statement to say if they sell did not contain a number.

107
00:08:00.470 --> 00:08:17.450
Let's just move down one self so that takes us to the first numerical cell.

108
00:08:17.450 --> 00:08:22.250
And then we want to keep moving down until we come to a cell,

109
00:08:22.250 --> 00:08:23.860
which either contains a value.

110
00:08:23.860 --> 00:08:25.040
It is greater than the look up.

111
00:08:25.040 --> 00:08:28.750
Values in this case will actually stop on half a 1,000,000.

112
00:08:28.750 --> 00:08:34.880
Or if this person had actually sold more than a 1,000,000 we would be taken right off the

113
00:08:34.880 --> 00:08:35.700
edge of the table.

114
00:08:35.700 --> 00:08:36.940
So you also have to say,

115
00:08:36.940 --> 00:08:38.080
Oh,

116
00:08:38.080 --> 00:08:40.210
we come to a blank cell.

117
00:08:40.210 --> 00:08:41.440
So either of those two,

118
00:08:41.440 --> 00:08:42.370
we either come to assault.

119
00:08:42.370 --> 00:08:45.170
It contains a number greater than the look up value,

120
00:08:45.170 --> 00:08:47.200
or we come to a blank cell,

121
00:08:47.200 --> 00:09:02.940
so I'm going to use a do while loop for this on.

122
00:09:02.940 --> 00:09:04.670
We simply want to move down again.

123
00:09:04.670 --> 00:09:14.170
So after this code executes,

124
00:09:14.170 --> 00:09:18.650
we're either going to be on a soul within the table in the first column of the table.

125
00:09:18.650 --> 00:09:22.520
If the users sales figures exceeded,

126
00:09:22.520 --> 00:09:25.350
the maximum value will be on that blank room.

127
00:09:25.350 --> 00:09:27.820
So let's deal with the blank row first,

128
00:09:27.820 --> 00:09:29.060
because that's the simplest.

129
00:09:29.060 --> 00:09:30.280
If they're on the blank road,

130
00:09:30.280 --> 00:09:33.270
they simply get the highest rate.

131
00:09:33.270 --> 00:09:41.030
So I just basically need to use the offset property to move up one cell and write one cell

132
00:09:41.030 --> 00:09:41.030
.

133
00:09:41.030 --> 00:09:54.460
Then that's the value that the function will return such a return of value.

134
00:09:54.460 --> 00:09:56.460
We used the name of our function,

135
00:09:56.460 --> 00:10:01.250
and we set that equal to the value wondering,

136
00:10:01.250 --> 00:10:01.560
turn.

137
00:10:01.560 --> 00:10:08.470
And of course,

138
00:10:08.470 --> 00:10:09.350
we'll meet and else.

139
00:10:09.350 --> 00:10:11.160
And then it ended.

140
00:10:11.160 --> 00:10:20.700
So in the else scenario we're on one of these cells on were then interested in populating

141
00:10:20.700 --> 00:10:28.490
our four variables to calculate the upper and lower limits of both the look up column and

142
00:10:28.490 --> 00:10:29.370
return Colin.

143
00:10:29.370 --> 00:10:36.380
I'm just going to copy this section.

144
00:10:36.380 --> 00:10:43.260
Ondas modify the code first,

145
00:10:43.260 --> 00:10:49.140
tap them in and change all of the let's all of the Dimmesdale.

146
00:10:49.140 --> 00:10:54.670
Let's on.

147
00:10:54.670 --> 00:10:57.730
We just specify what each of them is going to be.

148
00:10:57.730 --> 00:11:04.420
So the upper look up will simply be orangey look upto value,

149
00:11:04.420 --> 00:11:13.450
and then each of the others will simply get offset.

150
00:11:13.450 --> 00:11:16.460
So for this one,

151
00:11:16.460 --> 00:11:33.250
we need to go up one minus 10 and then to get to the return column.

152
00:11:33.250 --> 00:11:42.450
So if the first person this will be our orangey look up.

153
00:11:42.450 --> 00:11:45.660
So to get to the upper return limits,

154
00:11:45.660 --> 00:11:51.150
we simply need to go right one and then for the lower we get off one and write one,

155
00:11:51.150 --> 00:12:06.750
so this one will be 01 on this one will be minus 11 Next we calculate our ranges,

156
00:12:06.750 --> 00:12:10.960
and that's simply the difference between the upper and lower limits.

157
00:12:10.960 --> 00:12:28.130
On the other difference will need is the difference between the look up value on the lower

158
00:12:28.130 --> 00:12:28.650
limit,

159
00:12:28.650 --> 00:12:35.390
and this will tell us what the pro rata will need to be.

160
00:12:35.390 --> 00:12:38.370
So here we could see this person is very close to the upper limit.

161
00:12:38.370 --> 00:12:42.150
So we take his figure and subtract the lower limit from it.

162
00:12:42.150 --> 00:12:56.150
So here we using the look up,

163
00:12:56.150 --> 00:12:56.680
valued,

164
00:12:56.680 --> 00:12:58.650
specified by the user,

165
00:12:58.650 --> 00:13:05.750
and we subtracting BBO lower look up.

166
00:13:05.750 --> 00:13:10.760
So once we've got all these calculations in place,

167
00:13:10.760 --> 00:13:12.230
we're home and dry.

168
00:13:12.230 --> 00:13:15.200
We can calculate the pro rata figure,

169
00:13:15.200 --> 00:13:20.450
and then from that we can calculate the final value returned by this function.

170
00:13:20.450 --> 00:13:25.980
Said you calculate the print Bronson.

171
00:13:25.980 --> 00:13:42.050
We simply need to divide the look up def by the range that it forms part off.

172
00:13:42.050 --> 00:13:50.390
And then finally,

173
00:13:50.390 --> 00:13:52.520
to get in function to return a value.

174
00:13:52.520 --> 00:13:57.050
We used the name of the function like we did here in the positive part of the statement.

175
00:13:57.050 --> 00:14:01.580
What will need to do?

176
00:14:01.580 --> 00:14:08.310
It's festival to multiply D B l return range,

177
00:14:08.310 --> 00:14:11.690
buyout program figure,

178
00:14:11.690 --> 00:14:20.380
and then add that value to the lower limit of our return section.

179
00:14:20.380 --> 00:14:30.190
So for this first person you remember,

180
00:14:30.190 --> 00:14:33.350
he falls very close to the upper limit of his bracket.

181
00:14:33.350 --> 00:14:39.640
So he had a high de bl pro rata of no 0.9 something on.

182
00:14:39.640 --> 00:14:47.500
What we then do is we multiply that pro rata by the difference between these two.

183
00:14:47.500 --> 00:14:50.430
That gives us the programs a factor,

184
00:14:50.430 --> 00:14:53.500
which we then add to his lower limits.

185
00:14:53.500 --> 00:14:56.080
So instead of just get in the lower limit,

186
00:14:56.080 --> 00:14:56.890
which be look up,

187
00:14:56.890 --> 00:14:59.440
gives him he gets that lower limit figure,

188
00:14:59.440 --> 00:15:04.190
plus the program after amount within the band that he falls into.

189
00:15:04.190 --> 00:15:10.280
So let's save and test our code.

190
00:15:10.280 --> 00:15:13.150
And to test our code,

191
00:15:13.150 --> 00:15:17.850
we can simply delete the original look up.

192
00:15:17.850 --> 00:15:19.290
And he says,

193
00:15:19.290 --> 00:15:22.650
I run so he's inside function,

194
00:15:22.650 --> 00:15:25.490
and then your functions,

195
00:15:25.490 --> 00:15:31.880
ones that you define will be under a special category gold user defined There it is.

196
00:15:31.880 --> 00:15:32.900
You look up program.

197
00:15:32.900 --> 00:15:35.350
What mean set the function,

198
00:15:35.350 --> 00:15:41.280
All the parameters that we've defined it is blade in exactly the same way as for built in

199
00:15:41.280 --> 00:15:42.010
functions.

200
00:15:42.010 --> 00:15:52.130
So I look at value will be too table array of there's gonna use the column methods on

201
00:15:52.130 --> 00:15:56.750
drinking across the two column headings pulls the column index.

202
00:15:56.750 --> 00:15:58.290
It's called him,

203
00:15:58.290 --> 00:15:58.750
too.

204
00:15:58.750 --> 00:16:08.470
America is so his bonus rate instead of Bean 1.25 it would have bean with you.

205
00:16:08.470 --> 00:16:14.300
Look up is now closer to the upper limit on his 2.5.

206
00:16:14.300 --> 00:16:17.560
I just double click to copy that down for everyone,

207
00:16:17.560 --> 00:16:20.560
and we could do one final test.

208
00:16:20.560 --> 00:16:24.290
If I put a 1,000,000 in front of his figure.

209
00:16:24.290 --> 00:16:30.050
He now gets the upper limits of 7.5.

210
00:16:30.050 --> 00:16:33.800
So let's just don't do so.

211
00:16:33.800 --> 00:16:39.080
That's an example of where you might use a user defined function where you want to

212
00:16:39.080 --> 00:16:42.670
calculate a value within the body of the worksheet on.

213
00:16:42.670 --> 00:16:47.290
There isn't an Excel built in function that will do exactly what you need

