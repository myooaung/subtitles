WEBVTT
ï»¿1
00:00:00.000 --> 00:00:15.470
in this section will move on to look at another type of Advanced Excel formula called an

2
00:00:15.470 --> 00:00:16.580
array formula,

3
00:00:16.580 --> 00:00:19.650
and to start the ball rolling in this video.

4
00:00:19.650 --> 00:00:20.250
Well,

5
00:00:20.250 --> 00:00:22.750
look at exactly what in a rape Bolnar is.

6
00:00:22.750 --> 00:00:25.450
So in 07 rate formulas,

7
00:00:25.450 --> 00:00:29.450
let's open 01 array formula basics.

8
00:00:29.450 --> 00:00:40.000
The classic implementation of formula in Excel is to create an initial formula and then to

9
00:00:40.000 --> 00:00:42.850
copy that formula into adjacent cells.

10
00:00:42.850 --> 00:00:44.120
So,

11
00:00:44.120 --> 00:00:44.800
for example,

12
00:00:44.800 --> 00:00:45.950
in this worksheet,

13
00:00:45.950 --> 00:00:48.650
which contains rows of data,

14
00:00:48.650 --> 00:00:51.350
each of which recorded sales transaction,

15
00:00:51.350 --> 00:00:55.280
if we wanted to have a total price on each row,

16
00:00:55.280 --> 00:01:01.250
we would create a simple formula which multiplied the quantity by the unit price.

17
00:01:01.250 --> 00:01:04.450
And then we'd copy this four minute down for every road,

18
00:01:04.450 --> 00:01:11.850
having added the total formula for every road we could then aggregate that Total column.

19
00:01:11.850 --> 00:01:15.950
But what if we were only interested in the aggregation?

20
00:01:15.950 --> 00:01:20.480
What if the row by row D sale was purely an overhead,

21
00:01:20.480 --> 00:01:25.750
a calculation overhead which had to be tolerated every time we opened the workbook.

22
00:01:25.750 --> 00:01:27.560
For example,

23
00:01:27.560 --> 00:01:28.650
in this work feet,

24
00:01:28.650 --> 00:01:32.450
we have 34,000 rows.

25
00:01:32.450 --> 00:01:34.710
What if we had half,

26
00:01:34.710 --> 00:01:34.830
um,

27
00:01:34.830 --> 00:01:35.340
Indian,

28
00:01:35.340 --> 00:01:42.570
so clearly place in a calculation on every single road when all you want is toe aggregate,

29
00:01:42.570 --> 00:01:45.450
that calculation is quite an overhead,

30
00:01:45.450 --> 00:01:51.640
and it's in this kind of scenario that you can use what's called an array formula.

31
00:01:51.640 --> 00:01:57.050
Before we get into the nuts and bolts of how rate formulas work,

32
00:01:57.050 --> 00:02:01.560
let's create a couple of useful named ranges for ourselves,

33
00:02:01.560 --> 00:02:03.700
which we can then reference in our formula.

34
00:02:03.700 --> 00:02:11.810
The two columns were interested in analysing our quantity in Munich price when working with

35
00:02:11.810 --> 00:02:15.750
a Wraith formulas because they're so process or intensive,

36
00:02:15.750 --> 00:02:19.970
Excel doesn't allow you to reference an entire column,

37
00:02:19.970 --> 00:02:26.050
so for that reason will need to create a reference purely to the data.

38
00:02:26.050 --> 00:02:33.990
So the unit price we click in J one and press control ship Down Arrow to select all the way

39
00:02:33.990 --> 00:02:38.150
to the bottom of the data and then to name the selected data.

40
00:02:38.150 --> 00:02:43.250
We can get across to the Formulas tab and in the defined names group,

41
00:02:43.250 --> 00:02:50.890
click on Create from Selection and we ask Excel to use the text in the top row as the name

42
00:02:50.890 --> 00:02:51.850
of the range,

43
00:02:51.850 --> 00:02:56.150
and then let's do the same for quantity.

44
00:02:56.150 --> 00:03:03.100
You're gonna one press control shift down arrow and then create from selection,

45
00:03:03.100 --> 00:03:05.670
extracting the name from the top row.

46
00:03:05.670 --> 00:03:09.530
And if we click on the name box,

47
00:03:09.530 --> 00:03:12.550
we can see the two names which have been created.

48
00:03:12.550 --> 00:03:14.260
No space is allowed,

49
00:03:14.260 --> 00:03:20.750
so unit underscore Price is automatically applied to the original text unit price.

50
00:03:20.750 --> 00:03:27.080
Let's now move across to the summary work feeds and look at the aggregation that we want to

51
00:03:27.080 --> 00:03:33.650
perform the 1st 2 white into straightforward because they only require reference to one

52
00:03:33.650 --> 00:03:36.890
color to find the unit.

53
00:03:36.890 --> 00:03:46.720
So we simply need to refer to the quantity column so we can say equal some and then use the

54
00:03:46.720 --> 00:03:50.150
quantity name that Excel has just created for us.

55
00:03:50.150 --> 00:03:53.220
And then similarly,

56
00:03:53.220 --> 00:03:57.900
the average equals average and again quantity,

57
00:03:57.900 --> 00:04:05.050
so the average quantity per transaction is 11.

58
00:04:05.050 --> 00:04:07.650
And if we wanted a bit more precision,

59
00:04:07.650 --> 00:04:10.350
you could just increase the number of decimals.

60
00:04:10.350 --> 00:04:12.590
However,

61
00:04:12.590 --> 00:04:15.550
when we come to do the total on average revenue,

62
00:04:15.550 --> 00:04:17.750
it's not quite so straightforward,

63
00:04:17.750 --> 00:04:25.870
because what we want to do now is to multiply the quantity by the unit price on.

64
00:04:25.870 --> 00:04:28.650
We have to do this on a row by row basis.

65
00:04:28.650 --> 00:04:34.450
So the very thing that we're trying to escape doing individual calculations.

66
00:04:34.450 --> 00:04:41.650
We still have to find a way of achieving on the way that it's achieved in an array formula

67
00:04:41.650 --> 00:04:46.850
is that you can perform calculations on an entire array.

68
00:04:46.850 --> 00:04:51.450
Honore is simply a collection of values,

69
00:04:51.450 --> 00:04:53.940
so in this case we have an array,

70
00:04:53.940 --> 00:04:59.250
which has a width of one Colin on a height of 34,000 rows.

71
00:04:59.250 --> 00:05:06.060
The values within that range constitute the array and what you're permitted to do in an

72
00:05:06.060 --> 00:05:07.130
array formula.

73
00:05:07.130 --> 00:05:14.150
What you can't do in an ordinary formula is to carry out operations on entire arrays,

74
00:05:14.150 --> 00:05:20.750
And the thing that makes it work is the fact that the arrays in this case both have exactly

75
00:05:20.750 --> 00:05:21.760
the same shape.

76
00:05:21.760 --> 00:05:25.650
They've got the same number of columns in the same number of rows,

77
00:05:25.650 --> 00:05:26.990
and therefore,

78
00:05:26.990 --> 00:05:30.850
when we perform a calculation on the to raise,

79
00:05:30.850 --> 00:05:36.450
Excel simply marries up each of the rose within the two arrays,

80
00:05:36.450 --> 00:05:46.150
so formula will still need to use the some function and will only need a single argument.

81
00:05:46.150 --> 00:05:54.840
But that argument is a calculation on the calculation involves to a raise the array that

82
00:05:54.840 --> 00:05:56.240
we've called quantity,

83
00:05:56.240 --> 00:06:01.970
which is all the data in the quantity column needs to be multiplied by the array,

84
00:06:01.970 --> 00:06:03.450
called Unit Price.

85
00:06:03.450 --> 00:06:06.800
And because both the rays have the same shape,

86
00:06:06.800 --> 00:06:12.970
Excel is able to multiply the quantity on the first row of the array by the first unit

87
00:06:12.970 --> 00:06:13.650
price,

88
00:06:13.650 --> 00:06:20.010
second quantity by second unit price all the way down to the bottom on the result of

89
00:06:20.010 --> 00:06:20.730
calculating,

90
00:06:20.730 --> 00:06:24.050
each row is stored in a virtual array,

91
00:06:24.050 --> 00:06:26.850
an array that exists only in memory.

92
00:06:26.850 --> 00:06:27.430
And,

93
00:06:27.430 --> 00:06:27.890
of course,

94
00:06:27.890 --> 00:06:29.500
battery has the same shape.

95
00:06:29.500 --> 00:06:30.370
One column,

96
00:06:30.370 --> 00:06:31.850
34,000 rows.

97
00:06:31.850 --> 00:06:40.150
So the sum function will simply be the total off this result in virtual array.

98
00:06:40.150 --> 00:06:47.670
So now that we have the luxury of named Ranges,

99
00:06:47.670 --> 00:06:49.050
the function is very simple.

100
00:06:49.050 --> 00:06:49.700
It's all right.

101
00:06:49.700 --> 00:06:54.350
We need equal,

102
00:06:54.350 --> 00:07:06.110
some quantity multiplied by unit price as a normal excel formula.

103
00:07:06.110 --> 00:07:08.050
It doesn't make any sense.

104
00:07:08.050 --> 00:07:16.150
A normal Excel formula would require us to multiply a single value by a mother single value

105
00:07:16.150 --> 00:07:16.150
,

106
00:07:16.150 --> 00:07:17.640
for example,

107
00:07:17.640 --> 00:07:22.350
see to my D to so we simply press enter.

108
00:07:22.350 --> 00:07:27.650
The result that we get will never be the correct one.

109
00:07:27.650 --> 00:07:32.650
So what we have to tell Excel is that this is not an ordinary formula.

110
00:07:32.650 --> 00:07:41.080
We want the entire A raise to be included in The calculation on the signal that Microsoft

111
00:07:41.080 --> 00:07:47.020
came up with is that you press control shift enter to indicate that this is an array for

112
00:07:47.020 --> 00:07:49.790
regular instead of precedence,

113
00:07:49.790 --> 00:07:51.450
I press control ship Bento.

114
00:07:51.450 --> 00:07:54.250
Then we get the result that we're looking for,

115
00:07:54.250 --> 00:08:03.660
and we can do the same thing for the average equals average quantity multiplied by unit

116
00:08:03.660 --> 00:08:04.450
price.

117
00:08:04.450 --> 00:08:09.610
But the important thing here is that we then press control shift,

118
00:08:09.610 --> 00:08:10.250
enter,

119
00:08:10.250 --> 00:08:15.150
and we probably want to show the decimals on this one.

120
00:08:15.150 --> 00:08:22.850
That's the basic introduction to how array formulas work.

121
00:08:22.850 --> 00:08:30.620
So the key thing it's performing a calculation on rays of data rather than on individual

122
00:08:30.620 --> 00:08:31.300
cells.

123
00:08:31.300 --> 00:08:34.450
And to signal this to excel,

124
00:08:34.450 --> 00:08:36.950
you press control shift enter.

125
00:08:36.950 --> 00:08:39.280
And that's often abbreviated to C.

126
00:08:39.280 --> 00:08:40.080
S E.

127
00:08:40.080 --> 00:08:42.180
So when you're searching on Google,

128
00:08:42.180 --> 00:08:44.550
if you search for CSE formulas,

129
00:08:44.550 --> 00:08:47.110
you're talking about a ray formulas,

130
00:08:47.110 --> 00:08:49.550
which require that you press control shift,

131
00:08:49.550 --> 00:08:53.050
enter whenever you create or edit the formula

