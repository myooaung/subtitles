1
00:00:00,000 --> 00:00:16,920
if you've upgraded to Excel 2016 When working with multiple conditions as well as using

2
00:00:16,920 --> 00:00:17,850
nested ifs,

3
00:00:17,850 --> 00:00:21,550
you now have the option of using a function called ifs.

4
00:00:21,550 --> 00:00:28,250
Let's have a look at how it works that's open 03 the dysfunction.

5
00:00:28,250 --> 00:00:32,950
And here we have the same example of unsold in the previous exercise.

6
00:00:32,950 --> 00:00:39,680
So before creating our formula that's have a look at the mechanism of the dysfunction.

7
00:00:39,680 --> 00:00:43,350
Now it differs from a regular if and nested ifs.

8
00:00:43,350 --> 00:00:47,750
This diagram shows the basic structure.

9
00:00:47,750 --> 00:00:48,490
Seven.

10
00:00:48,490 --> 00:00:49,650
It's formula.

11
00:00:49,650 --> 00:00:54,750
The first thing to notice is that there is only one ifs,

12
00:00:54,750 --> 00:01:02,590
and this single function takes as its arguments multiple logical test and value it true

13
00:01:02,590 --> 00:01:03,350
pairs.

14
00:01:03,350 --> 00:01:07,270
So we proceed exactly as we did in the last video.

15
00:01:07,270 --> 00:01:09,860
You start with the highest value,

16
00:01:09,860 --> 00:01:11,920
so our test is overdue,

17
00:01:11,920 --> 00:01:17,310
greater than or equal to 1 20 which is we saw before is false,

18
00:01:17,310 --> 00:01:20,150
and then the value true would be bad.

19
00:01:20,150 --> 00:01:21,640
It's in states over deuce.

20
00:01:21,640 --> 00:01:22,350
20

21
00:01:22,350 --> 00:01:25,550
This first test proved to be false,

22
00:01:25,550 --> 00:01:35,210
so we go into the next one testing for 90 intestine for 60 then testing for 30 now when we

23
00:01:35,210 --> 00:01:39,650
were working with nested ifs that was the last test that we needed to do,

24
00:01:39,650 --> 00:01:47,250
because when you nest YPF's the third argument of the final statement becomes a cattle.

25
00:01:47,250 --> 00:01:50,580
So you simply put the value that you want to appear.

26
00:01:50,580 --> 00:01:53,850
If none of your previous tests proved to be true,

27
00:01:53,850 --> 00:01:59,050
and it's very important to note that this is not the case with the dysfunction,

28
00:01:59,050 --> 00:02:01,050
there is no cattle.

29
00:02:01,050 --> 00:02:06,250
You simply continue with that structure up to 127 times.

30
00:02:06,250 --> 00:02:08,540
So in this example,

31
00:02:08,540 --> 00:02:14,420
we will need to do a final and fifth test to cater for that circumstance.

32
00:02:14,420 --> 00:02:19,950
When the days overdue is less than 30 we need to explicitly put a test to cater for it.

33
00:02:19,950 --> 00:02:25,950
And this is what you might call the Achilles heel of the dysfunction.

34
00:02:25,950 --> 00:02:28,050
If there were a casual,

35
00:02:28,050 --> 00:02:34,170
it will be exactly equivalent to invest it if and we could stop using nested lives and use

36
00:02:34,170 --> 00:02:35,250
its instead.

37
00:02:35,250 --> 00:02:42,080
But because there is no cattle and you have to manually cater for all eventualities you may

38
00:02:42,080 --> 00:02:43,620
find in some scenarios,

39
00:02:43,620 --> 00:02:48,500
this makes you a little nervous because obviously you have more testing to do just to make

40
00:02:48,500 --> 00:02:51,150
sure that you haven't let anything slip through.

41
00:02:51,150 --> 00:02:55,470
So let's now right,

42
00:02:55,470 --> 00:02:58,550
the function going to need to.

43
00:02:58,550 --> 00:03:00,190
And as usual,

44
00:03:00,190 --> 00:03:04,520
I'm going to increase the size of the formula bar and split the function onto multiple

45
00:03:04,520 --> 00:03:05,150
lines.

46
00:03:05,150 --> 00:03:09,650
They're equals gifts.

47
00:03:09,650 --> 00:03:18,300
So our first test is going to be whether it be to is greater than or equal to on this time

48
00:03:18,300 --> 00:03:18,300
.

49
00:03:18,300 --> 00:03:21,150
Instead of putting the literal values like we did last time,

50
00:03:21,150 --> 00:03:23,450
let's use the values in this table,

51
00:03:23,450 --> 00:03:28,290
so I'll simply click on the cell that contains 1 20 And,

52
00:03:28,290 --> 00:03:28,720
of course,

53
00:03:28,720 --> 00:03:30,170
since we intend to copy,

54
00:03:30,170 --> 00:03:33,700
this formula amounted to press F or hopefully,

55
00:03:33,700 --> 00:03:33,950
you know,

56
00:03:33,950 --> 00:03:37,780
factual cut so that Excel will insert dollar signs.

57
00:03:37,780 --> 00:03:38,490
Hence,

58
00:03:38,490 --> 00:03:39,750
when I copy the formula,

59
00:03:39,750 --> 00:03:41,750
that cell reference won't change.

60
00:03:41,750 --> 00:03:46,050
So that becomes my logical test one.

61
00:03:46,050 --> 00:03:49,440
And I put in a coma we now want to.

62
00:03:49,440 --> 00:03:58,000
Value is true one and value it true is in this table 86 So I click on the cell and once

63
00:03:58,000 --> 00:04:00,850
more press F four and then a comma,

64
00:04:00,850 --> 00:04:04,600
and that's the way the its function is structured.

65
00:04:04,600 --> 00:04:13,150
I simply repeat this parent logical test by the true logical test on drew up to 127 times

66
00:04:13,150 --> 00:04:14,630
So in our case,

67
00:04:14,630 --> 00:04:16,840
we need fire again.

68
00:04:16,840 --> 00:04:17,950
I'll just call me back,

69
00:04:17,950 --> 00:04:20,950
use old enter to move down,

70
00:04:20,950 --> 00:04:23,960
um,

71
00:04:23,960 --> 00:04:25,750
and control the paste.

72
00:04:25,750 --> 00:04:30,830
On this time,

73
00:04:30,830 --> 00:04:32,350
I'll copy the space as well.

74
00:04:32,350 --> 00:04:42,850
So old Enter control the entire control the control the and delete the final comma.

75
00:04:42,850 --> 00:04:46,560
Now all I have to do is to change the number each time.

76
00:04:46,560 --> 00:04:50,600
So we're working up that time.

77
00:04:50,600 --> 00:04:56,000
Thanks All it's a strain.

78
00:04:56,000 --> 00:05:06,010
And finally to on this final test needs a modification,

79
00:05:06,010 --> 00:05:06,750
doesn't it?

80
00:05:06,750 --> 00:05:12,540
So we're test in G three on.

81
00:05:12,540 --> 00:05:18,470
We're making sure that it's less Stan g three and to complete the formula,

82
00:05:18,470 --> 00:05:21,890
we've only used one function this time.

83
00:05:21,890 --> 00:05:27,280
So we just need one close in parenthesis and that completes our formula.

84
00:05:27,280 --> 00:05:36,660
But we present collapse the formula bar back to its normal size and copy down by double

85
00:05:36,660 --> 00:05:37,130
clicking on.

86
00:05:37,130 --> 00:05:38,450
We also feel handle.

87
00:05:38,450 --> 00:05:40,690
But in many ways,

88
00:05:40,690 --> 00:05:46,950
using ifs is a neater and easier alternative to using nested IPs.

89
00:05:46,950 --> 00:05:48,370
But as I said,

90
00:05:48,370 --> 00:05:52,780
it has not this sting in its tail that there is no option for a catch.

91
00:05:52,780 --> 00:05:53,700
Alvar al you.

92
00:05:53,700 --> 00:05:58,650
When you're working with something as straightforward as numeric values,

93
00:05:58,650 --> 00:06:04,550
it's very convenient and it's fairly easy to make sure that you cater for all eventualities

94
00:06:04,550 --> 00:06:04,550
.

95
00:06:04,550 --> 00:06:07,010
But in some other circumstances,

96
00:06:07,010 --> 00:06:08,950
it may need a bit more balls.

97
00:06:08,950 --> 00:06:10,670
So for that reason,

98
00:06:10,670 --> 00:06:14,020
the dysfunction is perhaps not quite as useful as it should be.

99
00:06:14,020 --> 00:06:18,030
I'll just demonstrate the danger to which I'm allude in.

100
00:06:18,030 --> 00:06:25,850
If we increase the size of formula bar again and simply take out this equal sign,

101
00:06:25,850 --> 00:06:33,820
we're now seeing greater than 30 in less than 30 a symbol era we now make.

102
00:06:33,820 --> 00:06:35,600
This found you exactly 30.

103
00:06:35,600 --> 00:06:40,170
Our logic hasn't tater for that number,

104
00:06:40,170 --> 00:06:42,850
so we get the not available error.

105
00:06:42,850 --> 00:06:43,780
Obviously,

106
00:06:43,780 --> 00:06:44,810
with numeric values,

107
00:06:44,810 --> 00:06:47,090
it's fairly easy to avoid making that error.

108
00:06:47,090 --> 00:06:49,370
But just to emphasize that,

109
00:06:49,370 --> 00:06:55,240
that's the danger with the assumption there is no capital that you have to cater for every

110
00:06:55,240 --> 00:06:59,260
possible outcome within the scenario that your evaluation

