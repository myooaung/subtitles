WEBVTT
ï»¿1
00:00:00.000 --> 00:00:11.680
in all the examples with views over,

2
00:00:11.680 --> 00:00:15.910
we've only been working with one axis the child access,

3
00:00:15.910 --> 00:00:20.050
which is the default and therefore doesn't need to be specified.

4
00:00:20.050 --> 00:00:22.070
In this video.

5
00:00:22.070 --> 00:00:24.810
We'll talk about another access that you'll encounter,

6
00:00:24.810 --> 00:00:28.250
which is the descendant or self access.

7
00:00:28.250 --> 00:00:35.640
So that's going toe hold of five where we finished up our expense claims.

8
00:00:35.640 --> 00:00:36.550
Examples.

9
00:00:36.550 --> 00:00:45.150
Let's just copy that and paste it into folders seven and then open up the completed file.

10
00:00:45.150 --> 00:00:52.480
So here's the formula.

11
00:00:52.480 --> 00:00:54.050
We ended up creating,

12
00:00:54.050 --> 00:00:59.330
and all I want to show you in this video is how you can avoid having toe.

13
00:00:59.330 --> 00:01:01.850
Always use an absolute pass,

14
00:01:01.850 --> 00:01:02.340
which,

15
00:01:02.340 --> 00:01:02.930
if you remember,

16
00:01:02.930 --> 00:01:05.140
is one that starts with a forward slash.

17
00:01:05.140 --> 00:01:09.880
And that's fine use in the descendant or self access.

18
00:01:09.880 --> 00:01:11.570
So let's look,

19
00:01:11.570 --> 00:01:22.870
first of all at the longhand if I deletes forward slash heads forward slash and time

20
00:01:22.870 --> 00:01:33.910
Descendant iPhone away hyphens Self Colon Coghlan's That's the longhand way of specifying

21
00:01:33.910 --> 00:01:35.950
the descendants of self access.

22
00:01:35.950 --> 00:01:37.600
And if I presenter,

23
00:01:37.600 --> 00:01:44.450
you'll see I get exactly the same result on what the descendant or self access enables you

24
00:01:44.450 --> 00:01:52.470
to do is in this case to find head elements wherever they occur within the document without

25
00:01:52.470 --> 00:01:56.310
having to navigate through the XML structure,

26
00:01:56.310 --> 00:02:01.110
starting with the rooms element and then working your way down so you'll find Descendant

27
00:02:01.110 --> 00:02:02.820
ourself used quite a lot.

28
00:02:02.820 --> 00:02:06.280
What you won't find is the longhand that I've just written.

29
00:02:06.280 --> 00:02:10.640
I rose it like that just to emphasize that this is the access that we working with.

30
00:02:10.640 --> 00:02:14.650
But the shorthand way of writing it is to forward slashes.

31
00:02:14.650 --> 00:02:17.940
So whenever you see these two forward slashes,

32
00:02:17.940 --> 00:02:20.610
just remember that this is what's going on.

33
00:02:20.610 --> 00:02:25.040
Instead of having an absolute path which starts at the document,

34
00:02:25.040 --> 00:02:29.260
Root goes to the root element and works its way down.

35
00:02:29.260 --> 00:02:35.550
You simply use the descendant or self access to find an element wherever it occurs within a

36
00:02:35.550 --> 00:02:36.250
document.

37
00:02:36.250 --> 00:02:39.150
So because it is such a useful shorthand,

38
00:02:39.150 --> 00:02:42.450
you'll encounter this in tax quite a lot.

39
00:02:42.450 --> 00:02:48.010
So hopefully that's just given you more of an idea of what's going on when you see an

40
00:02:48.010 --> 00:02:51.810
expert statement containing these two forward slashes.

41
00:02:51.810 --> 00:02:59.670
So that completes our initial look at Expo in the next section will move on to look a xsl t

42
00:02:59.670 --> 00:03:05.050
on will continue using X path in the context of xsl transformations

