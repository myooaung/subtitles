WEBVTT

00:02.350 --> 00:07.000
On the categories screen we want to make sure that our item can be touched there.

00:07.020 --> 00:13.590
So I will import touchable and I will import touchable opacity here to have a slight opacity effect

00:13.740 --> 00:15.000
but of course is up to you.

00:15.090 --> 00:17.100
Which pattern of which component you use.

00:17.100 --> 00:23.730
There should be a touchable component though which you wrap around your item here and now on touchable

00:23.730 --> 00:24.750
opacity.

00:24.750 --> 00:30.060
I'll add on press so that we can do something when this swell is pressed.

00:30.060 --> 00:31.400
What do we want to do.

00:31.440 --> 00:38.760
We want to go to the category meals screen which is kind of the detail page for a chosen category to

00:38.760 --> 00:40.830
show all recipes for that category.

00:40.830 --> 00:43.910
We have no recipes yet but I still want to go to the page already.

00:44.610 --> 00:50.100
So therefore here we need to trigger a navigation action and previously we did this with props navigation

00:50.280 --> 00:51.470
navigate right.

00:51.480 --> 00:56.550
The problem is we don't have props available here because we're inside of the render grid item function

00:56.670 --> 00:59.090
which is outside of our component.

00:59.130 --> 01:04.610
Now we can simply moved is inside of our component to fix this problem.

01:04.770 --> 01:10.470
If we create that function in there then we do have access to props because we're now inside of our

01:10.470 --> 01:17.070
component function and now we'll be able to call navigate here we can call navigate and I want to go

01:17.070 --> 01:23.310
to a room name and of course the root name I want to go to you can be found in our navigator is category

01:23.310 --> 01:27.510
meals right because we want to load all meals for the chosen category.

01:27.510 --> 01:33.660
So we go to category meals here and if we add does and we save this we've seen our styling is a bit

01:33.660 --> 01:37.560
broken I'll fix this in a second but the navigation works.

01:37.560 --> 01:44.520
We also have to zoom past you facts that's working now fixing the styling is easy we just lost it because

01:44.520 --> 01:47.080
I wrapped touchable opacity around my view.

01:47.220 --> 01:53.760
We just need to add this style here which adds the margin around our items on two touchable opacity

01:53.760 --> 02:00.230
instead of tip that you here with Dad we got that style back and does this now working as it should.

02:00.270 --> 02:06.630
The more interesting question is how we can actually set our header title and for that we get a couple

02:06.630 --> 02:07.720
of options.

02:07.800 --> 02:13.740
Let's have a look at option number one on every react component which you'll load as a screen.

02:13.740 --> 02:22.420
Which means what you map to such a screen name in for example the stack navigator you can add a prop..

02:22.410 --> 02:28.590
Now keep in mind that categories screen is of course a react component but technically it's a javascript

02:28.590 --> 02:29.370
function right.

02:29.370 --> 02:34.290
It's a function that receives the props argument and then runs this body which returns some today as

02:34.290 --> 02:37.390
X and therefore reacts able to use this as a component.

02:37.530 --> 02:39.840
But technically it's a javascript function.

02:39.840 --> 02:43.490
Now JavaScript functions are just objects.

02:43.500 --> 02:44.720
That's javascript.

02:44.790 --> 02:52.800
Functions are objects and on objects we can add properties so categories screen is just a javascript

02:52.890 --> 02:53.630
object.

02:53.730 --> 02:57.150
Hence we can add a property after creating it.

02:57.150 --> 03:07.040
So here after defining our categories screen function and therefore this object we can access it and

03:07.040 --> 03:13.250
we can add a property with a dot notation that's how javascript works you can simply add such a private

03:13.250 --> 03:14.250
property.

03:14.260 --> 03:20.870
Now you can add a special property here for which react navigation will look and that's the navigation

03:21.350 --> 03:22.970
options property.

03:22.970 --> 03:26.270
You don't have to edit and that won't be a problem if you don't do it.

03:26.270 --> 03:32.000
We haven't done it thus far but you can edit if you do edit it will be respected by react navigation

03:33.210 --> 03:38.480
that there are a bunch of options you can set up there and a full list can of course be found in the

03:38.480 --> 03:40.120
official docs.

03:40.270 --> 03:45.100
In the simplest form you simply assign a javascript object here with well that bunch of options you

03:45.100 --> 03:51.880
can now set up and does object and the object I'm interested in here is the header title.

03:52.030 --> 04:00.440
Dad can simply be set to a text for example meal categories because we're on the categories screen so

04:00.430 --> 04:03.970
Dad would be a fitting title if we save this.

04:03.970 --> 04:09.090
You now see meal categories as a title here in the header.

04:09.120 --> 04:14.970
Now you also can style the header here with the help of the header style property.

04:14.970 --> 04:21.200
This takes a style object where you can generally set up what you can set up as style on use as well.

04:21.310 --> 04:27.090
And there you could add a background color which is the most common style you typically apply.

04:27.210 --> 04:32.610
Now I want to set up a color here and I'll use an approach I used early on of course already.

04:32.670 --> 04:43.350
I'll add a constants folder and in there I'll add colors dot J as file in which all then export a javascript

04:43.440 --> 04:48.470
object where all the colors I want to use over and over again in the app are setup.

04:48.600 --> 04:56.790
They're all set of a primary color for which I preselected a hex code for a 1 4 8 C but of course you

04:56.790 --> 05:03.060
can experiment with different colors if you want to and I'll set up an accent color or a secondary color

05:03.270 --> 05:07.920
which tax code is F F 6 f 0 0.

05:07.920 --> 05:13.470
These are just the colors I picked as I mentioned you can use different ones of course back in the category

05:13.470 --> 05:13.850
screen.

05:13.860 --> 05:21.030
I now want to use colors and for this you need to import it import colors with a capital C which is

05:21.030 --> 05:29.730
just a convention I'm using to indicate that this is a constant from constants colors all the name of

05:29.730 --> 05:38.420
the capital C. And then here we use colors that primary color for example if you do this you will see

05:38.420 --> 05:43.730
that your header now has this dark purple color which I picked that makes the title a bit hard to read

05:44.030 --> 05:48.670
but thankfully you can style this is as well not with the header style because that's just the that

05:48.720 --> 05:56.300
the box for the header so to say not its content but the title can be styled with the header tint color

05:56.450 --> 06:01.090
and again the official docs is the place where you can learn all about these available options.

06:01.100 --> 06:02.380
That's how I know about them.

06:02.390 --> 06:04.470
That's where you would read about them.

06:04.550 --> 06:10.820
No header tint color can always be a color for example white here simply which fits my default color.

06:10.820 --> 06:19.120
And now you see this is white you of course might also want a different look for Android and I guess

06:19.120 --> 06:23.690
you might want to look where this looks more IWC ish.

06:23.740 --> 06:29.560
Which means you don't have a colored collar background but just a text is colored and you can achieve

06:29.560 --> 06:35.980
this with the good old platform API which you learned about early on of course we can use the platform

06:35.980 --> 06:42.490
API to dynamically switch which colors we use here based on the platform our app is running on.

06:42.490 --> 06:47.630
So here for the background color we can use platform OS and see whether debts Android.

06:47.640 --> 06:53.850
In which case I want to use the primary color else and this ternary expression I'll use no color.

06:53.920 --> 07:00.940
So we can use y2 for example in normal white background or simply set up no color at all like this and

07:00.940 --> 07:07.150
you will then get the default background color and for a 10 color it's the same I check if the operating

07:07.150 --> 07:10.810
system is Android in which the text color should be white.

07:10.810 --> 07:20.360
Otherwise I will set this to colors primary color with that you now have does more I guess that more

07:20.360 --> 07:27.530
IOW typical look here on our and you have to default android look which is more colorful on Android.

07:27.530 --> 07:31.100
So that's how you can set up navigation options here.

07:31.130 --> 07:39.170
Now what about this screen however where we go to our details here to the Italian meals or to the quick

07:39.170 --> 07:45.500
and easy meals would be nice if we could see quick and easy here or Italian here in the header in that

07:45.500 --> 07:46.400
case.

07:46.400 --> 07:51.230
So that's the next thing we should take care of and for this we need to pass some information from this

07:51.230 --> 07:55.940
screen to this screen so we'll have a look at how that works in the next video.
