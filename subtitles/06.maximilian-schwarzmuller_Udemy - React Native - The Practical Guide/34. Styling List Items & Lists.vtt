WEBVTT

00:02.320 --> 00:08.260
When it comes to styling a list we of course can style both the list items and all the while the list

00:08.260 --> 00:08.810
itself.

00:08.840 --> 00:10.830
So let's start with the items.

00:10.840 --> 00:17.440
And here I'll actually cut that mark up here so to say so that J has X code for item and I'll add a

00:17.440 --> 00:22.420
new function outside of the component function because we don't really need anything from inside the

00:22.420 --> 00:27.380
component and I'll just named as render list item the name is up to you.

00:27.490 --> 00:33.850
It's a function and dysfunction in the end should return some J is X code here.

00:33.850 --> 00:41.320
So it should return this j as X code here and to work correctly it of course needs to get let's say

00:41.690 --> 00:44.320
our our value which we want to output.

00:44.320 --> 00:50.950
So you're all that use the value as a key and output value here between the text tax and now we can

00:50.950 --> 00:54.240
use render list item down there where we call map.

00:54.250 --> 01:01.850
And here while there I simply want to execute render list item for every item we're mapping and a forward

01:01.880 --> 01:05.410
guest to that as a value in a render list item.

01:05.440 --> 01:08.620
Now if we do that we should see the same result as before.

01:08.630 --> 01:13.720
So nothing too fancy here but now we have a leaner markup down there leaner.

01:13.730 --> 01:17.690
J is X code down there and have our list item j has X code here.

01:17.870 --> 01:23.930
Now we can style this and of course I want to style my view here for this I'll add a style here from

01:23.930 --> 01:28.640
the style sheet which I'll name list in there.

01:28.650 --> 01:33.600
I actually now want to have two text items and one should be the number of the round and the second

01:33.600 --> 01:34.710
should be the value.

01:34.710 --> 01:41.940
So here I need an additional argument I need to value but also the number off the round or NUM of round

01:41.940 --> 01:42.980
as I name it here.

01:43.080 --> 01:45.640
And I want to output does dynamically here.

01:45.720 --> 01:49.800
Maybe with this hash symbol in front of it just for stylistic reasons.

01:50.250 --> 01:54.030
So now we have these two texts in this list here and there.

01:54.030 --> 01:59.350
I actually don't want to use the text but the body text so did I have my my default text styling.

01:59.370 --> 02:06.030
So for Dad let's import body text from components body text and use body text instead of the normal

02:06.030 --> 02:10.860
text here in our list item with Dad we're using the right fund.

02:10.860 --> 02:17.730
And now let's add dead list object to our style sheet so that we can style the list item actually.

02:17.730 --> 02:21.040
This should be called list item therefore and not list.

02:21.040 --> 02:25.030
So let's add list item to the style sheet now like this.

02:25.390 --> 02:29.490
And now of course you can style is in whatever way you want.

02:29.860 --> 02:38.800
I will style it in a relatively easy way here just give it a border color of let's say black or maybe

02:38.800 --> 02:47.080
just slight grayish color here a padding in all directions of let's say 15 to have some spacing margin

02:47.500 --> 02:49.360
on the vertical axis of 10.

02:49.360 --> 02:55.480
So did we have some spacing between the list items and they don't sit right next to each other a background

02:55.480 --> 02:57.280
color of white maybe.

02:57.280 --> 03:01.210
And of course you can use different colors here if you want to.

03:01.290 --> 03:03.060
Now that's a start.

03:03.060 --> 03:07.650
Now when we're setting a border color we also need to set up border with here though otherwise we won't

03:07.650 --> 03:08.370
see a border.

03:08.370 --> 03:14.850
And I'll set this to one and very important I want to have these two text components in my view sit

03:14.850 --> 03:20.220
next to each other and not above each other which would be the default because a view uses flex blocks

03:20.430 --> 03:25.830
and uses a default flex direction of column to have the item sit next to each other on the horizontal

03:25.830 --> 03:30.540
axis we add flex direction row here just like this.

03:30.540 --> 03:35.990
With that if we safeties and the app rebuilds let's give it a try and see how that looks like.

03:36.030 --> 03:40.320
Yeah that looks okay ish but there still is room for improvement.

03:40.320 --> 03:46.320
For example I want to set a width on that list item to make sure that it's not just as wide as its content

03:46.350 --> 03:54.360
needs it to be but as wide as well as we tell it now to add a width you can add with heater to list

03:54.420 --> 03:54.940
item.

03:55.020 --> 04:01.200
But if we do that and set this to let's say 80 percent you'll actually see that this behaves not in

04:01.200 --> 04:03.110
the way you want it to behave right.

04:03.110 --> 04:04.570
So this does not look right.

04:04.680 --> 04:13.260
Now the content is somehow moved but the the item itself is certainly not wider to style a list properly.

04:13.260 --> 04:18.510
The best way is to simply wrap it into a view and then styled as view.

04:18.510 --> 04:20.000
So here we can add a view.

04:20.010 --> 04:22.290
Give it a style of let's say list.

04:22.290 --> 04:29.130
So here I'm referring to starts list and at this list object to our style sheet now like this.

04:29.130 --> 04:36.240
And on this list we can now set a width of 80 percent and get rid of the width here on the list item.

04:36.240 --> 04:41.880
If we do this with this wrapping view you now see the list items have the correct look and that's just

04:41.880 --> 04:43.620
something to be aware of.

04:43.740 --> 04:50.430
If you want to control the height or the width of your list of your scroll view then don't add the style

04:50.430 --> 04:51.650
to the list items.

04:51.690 --> 04:57.450
Also don't add it necessarily directly to the scroll view because of how it is works internally but

04:57.450 --> 05:03.250
instead simply wrap a view around the scroll view where you set that desired width and height.

05:03.290 --> 05:09.320
Now what you'll notice is dead on the list item it would be nice if we had the round number being all

05:09.360 --> 05:15.630
put there and then had some spacing between the round number and our actual guests and to achieve this

05:15.630 --> 05:18.590
for one we need to set a style here on list item.

05:18.720 --> 05:26.670
We can set justified content which controls how the content of this view is laid out along the main

05:26.670 --> 05:33.070
axis which reflects direction as the horizontal axis and they are all use space around to distribute

05:33.210 --> 05:40.260
available free space around our text items here and now to all the output the number of the round which

05:40.260 --> 05:48.360
we expect as an argument here in render list item we can go down to our map function and there we actually

05:48.360 --> 05:54.510
do get a second argument in this function which map calls automatically and that's the index of the

05:54.510 --> 05:55.680
item we're all putting.

05:55.680 --> 06:03.030
So we could forward that index here to render list item or index plus 1 since it will start at 0 and

06:03.030 --> 06:07.560
we probably want to print one for the first round instead of 0.

06:07.560 --> 06:15.300
Now with that out of the way if we add this now it is looks a bit better and maybe we actually switch

06:15.300 --> 06:20.980
does look here from space around to space between I think that looks nicer but before I safe does an

06:20.980 --> 06:27.390
update this you will also notice that one issue you have with that is that the round number is not actually

06:27.390 --> 06:27.970
correct.

06:28.020 --> 06:33.030
The first round is the bottom most round because we add new rounds at the beginning of the list.

06:33.030 --> 06:39.390
Therefore the index is not the right measure for the root number because the index is always well 0

06:39.450 --> 06:42.620
or if we add 1 it's 1 for the first list item.

06:42.650 --> 06:45.700
But the first list item is actually not our first round.

06:45.780 --> 06:51.330
Instead since we add new rounds as the first list item the first list item is our latest round and certainly

06:51.330 --> 06:52.940
not the first one.

06:52.980 --> 07:02.670
So to fix that what we can do is here in a render list items instead of using the index we can of course

07:02.880 --> 07:12.300
use our past guesses list here and get the length of that list and then deduct the index from that.

07:12.370 --> 07:16.810
And that gives us actually the correct round number for a given list item.

07:17.500 --> 07:24.310
So now if we do that and we restart this now we see round number one is to guess seven and that stays

07:24.310 --> 07:26.230
number one if we add a number of guests.

07:26.260 --> 07:29.520
And now this seems to work correctly here.

07:29.560 --> 07:36.180
You will also see that as soon as we exceed our boundaries here of course we can scroll the list.

07:36.310 --> 07:39.430
And that also seems to work just the way it should.

07:39.430 --> 07:48.280
Let's also give this a try on Android here starting a new game there and let's hope we don't win too

07:48.280 --> 07:51.000
early yet.

07:51.010 --> 07:54.640
That seems to work but there I actually can scroll.

07:54.640 --> 07:57.820
So on Android this is actually not working correctly.

07:57.820 --> 07:59.850
This list does not scroll the there.

07:59.860 --> 08:01.320
So what's wrong and Android.

08:01.510 --> 08:04.930
Now while it's it does scroll fine on ISIS for the scroll.

08:04.930 --> 08:12.490
You nested in a view to scroll fine on Android as well make sure that the surrounding view actually

08:12.820 --> 08:15.080
uses flex one.

08:15.100 --> 08:20.320
So add this to the list style here which is the style applied to the view which is wrapped around the

08:20.320 --> 08:21.570
scroll view.

08:21.820 --> 08:25.120
With that added If we now try this again on Android

08:28.940 --> 08:34.700
you'll now notice that now does this scroll lable as soon as you exceeds the boundaries of the screen.

08:34.700 --> 08:37.460
And on our Web site it should still work as before.

08:37.580 --> 08:40.810
And that being I w we can even scroll without it exceeding the boundaries.

08:40.820 --> 08:45.090
That's just the default IOW behavior that you can balance such lists of it.

08:45.710 --> 08:51.800
So now we have to scroll the whole list here with scroll view and map and it works on both Android and

08:51.800 --> 08:52.310
I was.
