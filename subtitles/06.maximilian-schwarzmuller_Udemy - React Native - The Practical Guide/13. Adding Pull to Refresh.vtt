WEBVTT

00:02.180 --> 00:03.960
So that's our app here.

00:04.190 --> 00:08.750
Now in this application we added a lot of functionality but there's one more thing I want to add and

00:08.750 --> 00:10.910
that's pulled to refresh.

00:10.910 --> 00:14.640
Let's say I went to Bill to fetch all the products from inside this page.

00:14.720 --> 00:18.380
So without leaving it and coming back which will fetch the latest products.

00:18.470 --> 00:23.450
But from inside this page by simply using this pull to refresh pattern where you drag down and then

00:23.450 --> 00:27.910
it reloads thankfully that's really easy to do in React Native.

00:27.920 --> 00:33.960
If you're using flat list or a scroll view because it's built into these components here in the products

00:34.000 --> 00:40.430
overview screen on flat list you can implement it by simply adding to props to the flat list to first

00:40.430 --> 00:42.500
prop is on refresh.

00:42.500 --> 00:48.860
You need to at this initial point and a function which is executed when the user pulls down.

00:48.860 --> 00:51.900
So when the user starts this pull to refresh action.

00:52.060 --> 00:57.290
And here in the products overview screen we can of course simply point at load products because that

00:57.320 --> 00:59.510
isn't the end to function it loads our product.

00:59.510 --> 01:01.610
So this is perfect.

01:01.610 --> 01:09.620
So here we can just point ad load products now by adding this we automatically get this functionality

01:09.770 --> 01:15.260
but here we go also get an error that the refreshing prop must be set because that's the other thing

01:15.260 --> 01:21.980
you always have to set when you add on refresh setting on refresh automatically unlocks all this behavior

01:22.010 --> 01:23.090
and all does nice.

01:23.090 --> 01:28.850
Spinner you get by default React Native will do all of that for you but it only does so if you also

01:28.850 --> 01:36.700
at the refreshing prop the refreshing prop is required to let risk native know when you're done.

01:36.700 --> 01:43.270
And this should therefore point at variable at a state full variable so at some state which indicates

01:43.270 --> 01:45.280
where you're currently loading or not.

01:45.340 --> 01:49.530
And of course that's great because we have our is loading prop here.

01:49.840 --> 01:54.720
So that does tell us whether we're loading or not we'll just have one problem.

01:55.030 --> 01:59.680
If we're loading I replaced the entire content of the screen and that's of course not what I want to

01:59.680 --> 02:08.260
do for reloading so we'll fix this in a simple fix could be that we removed a set as loading part here

02:08.260 --> 02:14.800
from load products both setting it to true and to false and instead do that only for the initial load

02:14.800 --> 02:20.530
here in use effect where we trigger a load products when the component loads and then here using this

02:20.590 --> 02:26.530
then syntax set us to fault when once we're done we can do that because load products will return a

02:26.530 --> 02:32.720
promise because it's having this async keyword therefore it returns a promise and with that we get the

02:32.720 --> 02:36.050
loading spinner when this initially loads but not when it reloads.

02:36.050 --> 02:41.330
That also means that when we visit this page we don't see the spinner but that might be fine.

02:41.340 --> 02:43.250
We have some content on there anyways.

02:43.290 --> 02:50.190
And if depth and updates after we was it that this page that might be OK so now we're not setting is

02:50.190 --> 02:53.480
loading here but we can now set a different state here.

02:53.550 --> 02:59.030
Let's name it is refreshing maybe and set is refreshing here.

02:59.100 --> 03:04.200
I want to manage a state which initially is false just like it is loading and that's now what I want

03:04.200 --> 03:05.210
to set here.

03:05.220 --> 03:17.370
So set is refreshing to true here and also here loops here after try catch set it to false.

03:17.380 --> 03:25.950
Once you're done so of course this works in the same way as is loading but now I won't use is refreshing

03:26.100 --> 03:32.760
to replace the entire content of the screen but instead is refreshing can now be fed back into the flat

03:32.760 --> 03:39.360
list on his refreshing prop and the offer on initial load this will exact before but now here we get

03:39.360 --> 03:45.720
this nice Pull to Refresh functionality you see it here I can pull down get that spinner and this will

03:45.780 --> 03:51.000
automatically reload and it can prove this by editing this on his server if I add an extra layer or

03:51.000 --> 03:57.890
a couple of extra exclamation marks there we can get those exclamation marks here by pulling and refreshing

03:58.160 --> 04:03.530
here you see that the same of course on Android they're yours You got that functionality out of the

04:03.530 --> 04:10.280
box and this is how easy you can add Pull to Refresh functionality to your React Native application.
