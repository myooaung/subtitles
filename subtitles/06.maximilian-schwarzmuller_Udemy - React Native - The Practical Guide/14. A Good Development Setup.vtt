WEBVTT

00:02.540 --> 00:09.790
So over the last lectures you learned how to run your react native app on a simulator or a real device,

00:09.790 --> 00:15.560
here I got it running on Android simulator next to an iOS simulator and this is basically the set up

00:15.580 --> 00:19.650
I'll use to basically show all the changes.

00:19.660 --> 00:27.490
Now one important thing about both the simulators and the real device, I will have a debugging section

00:27.490 --> 00:32.620
later in the course where I show you how you may debug your application but there's one important thing

00:32.620 --> 00:39.700
you should know right away, when running your simulators, you can press command or control depending on

00:39.700 --> 00:48.100
which platform you are on, command or control M on the Android simulator to open this debugging or developer

00:48.100 --> 00:49.310
menu here.

00:49.330 --> 00:55.510
There you can reload your app which you can do when you added it your code but you can also turn on live

00:55.510 --> 01:00.970
reload which is useful for automatically reloading the app whenever you edit the code so that you don't

01:00.970 --> 01:07.960
have to manually do that or you turn on hot reloading which means it will live reload but it even tries

01:07.960 --> 01:12.210
to avoid this and just change the view you're currently viewing,

01:12.370 --> 01:15.880
mostly useful when you're just changing some styling.

01:15.880 --> 01:20.830
We also got some other tools here and I will dive into some of them later in this course in the debugging

01:20.830 --> 01:21.540
section,

01:21.550 --> 01:30.220
for now let's turn on hot reloading. Now on your Android simulator, this was command or control M, on a

01:30.220 --> 01:32.970
real device you of course can't press this,

01:33.070 --> 01:39.610
there you simply have to shake the device to open up the developer menu. On the iOS simulator,

01:39.640 --> 01:44.170
you could also shake the device too but this doesn't work here,

01:44.200 --> 01:51.190
it only worked with the real device or you simulate a device shake here, shake gesture, then you open

01:51.190 --> 01:53.420
the developer menu on iOS too

01:54.070 --> 01:56.890
but shaking is only required if you run it in a real device,

01:56.920 --> 02:03.040
here we use a simulator and there, you can also press command or control D. So command

02:03.090 --> 02:06.240
M on Android, command D on iOS,

02:06.280 --> 02:07.270
the results are the same,

02:07.270 --> 02:11.670
you get this developer menu and you can turn on hot reloading here too.

02:11.920 --> 02:17.800
So with that, I now got the simulators to run in a state where they should automatically reload when

02:17.800 --> 02:19.060
we change something,

02:19.270 --> 02:23.970
let's simply try this out by going back to our development environment,

02:23.990 --> 02:31.180
I'll shrink this built-in terminal here and now I will simply edit this here, so I'll remove all that text and

02:31.180 --> 02:32.520
enter a new one,

02:32.680 --> 02:36.550
here text simply say something changed,

02:36.550 --> 02:38.260
now let's see if something did change,

02:38.260 --> 02:45.630
make sure to save the file and saving this should automatically reload the app on your devices and it

02:45.640 --> 02:46.400
does.

02:46.540 --> 02:50.260
One important note, for this to be automatically reloaded,

02:50.320 --> 02:57.250
you need to keep this terminal which was opened automatically when you ran npm run Android or npm run

02:57.290 --> 02:58.110
iOS,

02:58.300 --> 03:02.510
you need this process running, you shouldn't exit out of it,

03:02.560 --> 03:04.650
you can kill it with control C

03:04.780 --> 03:07.740
but if you do so, your app will no longer reload,

03:07.750 --> 03:14.230
you will no longer automatically fetch new versions of your app. This fetching works because in development

03:14.230 --> 03:20.660
mode when your react native app is compiled for development, you don't just get the compiled version

03:20.680 --> 03:26.650
of your app as you will later ship it but react native also adds a little development hook into your

03:26.650 --> 03:32.320
native app so to say, a hook which is able to connect to this development javascript server and fetch

03:32.380 --> 03:35.590
updates to the code. So this is just including this function,

03:35.590 --> 03:39.700
of course this will not be included once you build your app for production.

03:39.820 --> 03:43.020
So that's the set up I'm going to use for the next videos

03:43.120 --> 03:48.880
and with that, let's finally dive into the components and let's do more exciting things than just outputting

03:48.970 --> 03:50.120
something changed.
