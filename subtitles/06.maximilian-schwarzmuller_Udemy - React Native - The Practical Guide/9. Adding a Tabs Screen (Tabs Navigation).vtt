WEBVTT

00:02.320 --> 00:06.200
In the last lectures we successfully added our auth screen,

00:06.200 --> 00:07.790
that's a great first step,

00:07.790 --> 00:13.510
now let's also make sure we can leave that. I'll implement the actual authentication functionality later,

00:13.520 --> 00:16.310
for now I want to focus on the navigation part.

00:16.310 --> 00:24.110
So on this screen, let me now simply implement a button where we can basically login and then let's simply

00:24.110 --> 00:24.650
fake that

00:24.650 --> 00:26.440
we did successfully login.

00:26.570 --> 00:28.150
So let's add a button here,

00:28.200 --> 00:29.610
self-closing tag

00:29.810 --> 00:38.700
and let's set the title maybe to login. Now I'll also add the on press listener and on pressing this, I

00:38.700 --> 00:40.090
want to login

00:40.170 --> 00:47.250
so here I'll name this login handler, it's this method I want to execute

00:47.420 --> 00:53.960
once we did actually login or once we did click this button for the moment. And now the question is,

00:53.960 --> 00:58.280
here how do we continue, how do we get to a different screen?

00:58.510 --> 01:04.840
Well first of all we need a different screen and there, I actually want to use a tab so a tab based

01:04.840 --> 01:06.110
screen.

01:06.110 --> 01:08.380
Now there are different ways you can set this up,

01:08.390 --> 01:15.770
I'm going to add a new folder here to my screens folder and I'm going to name it main tabs because

01:15.770 --> 01:24.080
it's basically the main part of my application and in there, I'm going to add a file which is called

01:24.770 --> 01:30.860
start main tabs and it's deliberately written like this with a lowercase s at the beginning because

01:30.860 --> 01:34.290
this will not hold a react component,

01:34.580 --> 01:42.590
instead here, I will run some code from react native navigations so let's import something from there to

01:42.590 --> 01:45.890
start a tab based app and that's what I meant,

01:45.890 --> 01:49.580
start something app sounds like it starts a new app,

01:49.730 --> 01:56.310
it simply resets the navigation approach react native currently uses you could say. So here I'll again

01:56.330 --> 02:04.690
import navigation from react native navigation and now I want to load some tabs, now to load tabs

02:04.700 --> 02:05.890
we need screens

02:06.010 --> 02:14.060
between we can tell around, so let's add two new screens here, let's say. So let's add one screen which we name

02:14.080 --> 02:17.480
share place which allows us to share a place,

02:17.570 --> 02:24.020
so this will no longer be on the same screen as the list of places because that will be our second tab,

02:24.530 --> 02:31.180
I'll add a find place tab where we can see a list of all places that have been shared.

02:32.690 --> 02:39.910
So with that, let's work on both and I'll simply create normal class based components here,

02:39.920 --> 02:50.150
so import from react and then simply create the share place screen here which extends component,

02:50.150 --> 02:54.050
make sure to export this as the default

02:57.100 --> 03:02.410
and of course, this should have a render method where we return some jsx

03:02.530 --> 03:06.200
and I'm also going to import something to display here.

03:06.340 --> 03:16.120
So import a view and a text maybe from react native navigation and then here, I'm going to render

03:16.120 --> 03:17.260
my view,

03:17.410 --> 03:24.710
so here we are in the shared place screen, so I'm going to output this on share place screen, let's close

03:24.710 --> 03:30.590
the text and I'm going to save this and then copy the entire content of this file and paste it into

03:30.590 --> 03:36.690
find place, just rename this here to find place in all occurrences

03:37.010 --> 03:39.100
and we're done. With that,

03:39.200 --> 03:40.670
well tiny error,

03:40.700 --> 03:46.430
we of course should import our components here from react native not react native navigation,

03:46.610 --> 03:49.270
so that's something which we need to fix

03:49.370 --> 03:52.400
but with that I got these screens set up,

03:52.400 --> 03:57.610
we can now work on the tab start main tab file again.

03:57.880 --> 04:04.220
If you have a look at the documentation, we see there is this start tab based command we can execute,

04:04.430 --> 04:09.190
so we can run navigation start tab based app

04:09.350 --> 04:15.110
and it's an alternative to the single screen app, the tab based app automatically renders you this tab bar and

04:15.110 --> 04:16.150
so on.

04:16.640 --> 04:19.280
So for this, you see how I can configure it,

04:19.490 --> 04:25.670
you pass a javascript object where you need to have a tabs property which is an array of all the tabs

04:25.670 --> 04:32.270
you use and you can add as many as you need, well at some point it's probably going to look ugly but

04:32.570 --> 04:33.910
you can add multiple tabs here,

04:33.920 --> 04:40.370
that's the thing I want you to take away. A tab then is just a javascript object with these options,

04:40.400 --> 04:44.760
most of them are optional by the way so you don't have to set them.

04:45.500 --> 04:50.350
Let's add here a tab here, a configuration you have to set is the screen,

04:50.390 --> 04:56.300
so which screen should be loaded when this tab is pressed and this hold a tab was pressed, do something

04:56.300 --> 05:00.900
stuff will automatically be handled by react native navigation.

05:00.950 --> 05:06.710
Now to load a screen, we need a unique identifier and for that, we need to register the component first,

05:06.740 --> 05:11.760
we could do this in this file but it's a good approach to do this all in the app.js

05:11.810 --> 05:17.160
file here to have a good overview over which screens we are aware of.

05:17.240 --> 05:20.480
So let's execute register component here,

05:20.710 --> 05:22.360
awesome-places.

05:22.370 --> 05:29.250
and then the share place screen, that could be our unique identifier for the share place screen.

05:29.540 --> 05:39.110
Now we also need to import this, share place screen from ./src/screens/SharePlace/SharePlace

05:39.650 --> 05:51.470
and also import find place screen from ./src/screens/FindPlace/FindPlace.

05:51.530 --> 05:57.380
So for the share place screen which we just set up, the second argument is our generator function which

05:57.380 --> 06:05.810
returns the share place screen and then I'm just going to duplicate this and replace share place screen

06:05.810 --> 06:08.590
here with find place screen.

06:09.050 --> 06:11.380
So now we register these two new screens,

06:11.540 --> 06:16.460
we registered them in the app component but we can use them anywhere in the app, that's the cool thing. So

06:16.460 --> 06:20.430
we can also use them in the start main tabs file here,

06:20.450 --> 06:25.940
so here the screen I want to load is awesome-places.

06:26.060 --> 06:30.210
and now let's say it's the find place screen,

06:30.380 --> 06:38.550
so this unique identifier we assigned here, awesome-places.FindPlaceScreen, let me copy it in to avoid

06:38.580 --> 06:40.280
any typos.

06:40.320 --> 06:45.860
So that's one kind of configuration we have to set, all the other ones are basically optional

06:45.990 --> 06:49.700
but I also want to set two other configurations here,

06:49.890 --> 06:57.720
I want to set a label which is find place and a title which is also find place, the table appears on

06:57.720 --> 07:00.880
the tab, the title appears in the nav bar at the top.

07:01.290 --> 07:07.520
Then I'm going to duplicate this and add it as a second argument or element in this array of tabs,

07:07.620 --> 07:09.140
here I'm going to use the share

07:09.170 --> 07:10.520
place screen

07:10.560 --> 07:14.270
and please note that you don't need to import the screens in the startMainTabs.js

07:14.320 --> 07:15.220
file,

07:15.240 --> 07:19.680
we just need to use the unique identifiers of the screens we registered earlier.

07:20.100 --> 07:23.290
And then here I'm going to say share place and share place

07:23.310 --> 07:25.570
and of course these strings could be different.

07:26.790 --> 07:33.780
With that, we got our navigation start tab based command here, it would now run

07:33.780 --> 07:36.770
whenever we import start main tabs.

07:36.780 --> 07:39.200
Now that's not exactly what I want,

07:39.270 --> 07:45.430
instead I want to export a function which I can run whenever I want to then run this command.

07:45.750 --> 07:48.360
So I will actually create a function here

07:49.250 --> 07:52.010
and I'll name it starts tabs, the name is up to you,

07:52.340 --> 07:59.450
it's an arrow function, could be a normal javascript function too though and I'm just going to cut all

07:59.450 --> 08:03.370
the code and put it inside of this function body.

08:03.470 --> 08:11.900
Now I can export this as my default in this file and whenever I execute this function, we execute this

08:11.900 --> 08:12.470
code,

08:12.470 --> 08:19.460
so then react native navigation will replace the current app, the current navigation approach with this

08:19.460 --> 08:20.810
one.

08:20.900 --> 08:22.000
So that's the idea,

08:22.000 --> 08:28.550
it should do that whenever we click the button in our auth component, whenever we click the login button.

08:28.550 --> 08:36.380
So let's simply import start main tabs maybe from

08:36.480 --> 08:42.240
and now we just go to the main tabs folder and there, the start main tabs file,

08:42.240 --> 08:44.520
we want to do this when this button is pressed,

08:44.520 --> 08:47.680
so here I will then execute start main tabs.

08:47.910 --> 08:54.380
Make sure to save all files and reload your app to make sure it has the latest version of your code,

08:54.480 --> 08:59.160
let me turn on live reload here and now if you click log, login,

08:59.160 --> 09:04.640
indeed you see we get tabs at the bottom and I can switch between them and you see that the title and

09:04.680 --> 09:10.170
the content on the screen changes and the text also changes its color.

09:10.170 --> 09:17.550
Now on Android if we click login, we see that we got no icons defined because for Android, we actually

09:17.550 --> 09:19.160
need icons.

09:19.170 --> 09:25.610
The good thing is in the last module, we already added a package which gives us some icons.

09:25.800 --> 09:29.370
So let me show you how to add icons to this approach in the next lecture.
