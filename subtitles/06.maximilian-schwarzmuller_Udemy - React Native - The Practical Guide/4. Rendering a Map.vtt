WEBVTT

00:02.370 --> 00:08.890
In the last lecture we set up react native maps, let's now use it and I want to use it here on our share

00:08.890 --> 00:16.210
place screen. There we have the pick location component and if we have a look at this component, pick

00:16.210 --> 00:22.500
location, there we get this view which should serve or which currently serves as a placeholder

00:22.660 --> 00:29.080
and we got our view where we essentially have the button which should auto-locate us.

00:29.080 --> 00:34.510
Now I'm going to replace this view which is the placeholder with a real map view now because that's of

00:34.510 --> 00:36.560
course our goal,

00:36.600 --> 00:42.570
it now will also make sense that this is a class based component because there will be some internal state

00:42.580 --> 00:49.180
I want to manage in here and as always, you can of course connect that to redux to manage it application

00:49.180 --> 00:49.770
wide

00:49.840 --> 00:55.160
but what I plan on doing here actually is only relevant to this component.

00:55.180 --> 01:02.950
So first of all, let's import something from react native maps and that something is actually the map

01:02.950 --> 01:03.350
view,

01:03.400 --> 01:08.140
now you can name this whatever you want because it's the default export of that package but I'm going to

01:08.140 --> 01:13.840
name it map view written like this from react native maps.

01:13.830 --> 01:15.040
This is the import path

01:15.040 --> 01:17.260
we have to add to use it.

01:17.260 --> 01:22.780
Now we want to dump it into our component, we want to use that instead of the placeholder,

01:22.780 --> 01:30.490
so I'm going to replace this view which is our placeholder with my map view, now we can write this as self-closing

01:30.490 --> 01:31.800
tag here for now

01:32.080 --> 01:36.570
and now we need to configure this map view to display something,

01:36.570 --> 01:42.250
for example we need to tell which part of the world do we want to see, so which location do we want to

01:42.250 --> 01:42.880
see

01:43.030 --> 01:45.650
and then how much should it be zoomed in

01:45.710 --> 01:52.220
so how much should fit into the box we're rendering as a map here, we'll also need to set the styles

01:52.220 --> 01:56.960
so to define the width and so on of this map view box.

01:56.980 --> 01:59.910
So these are the things I want to do here,

02:00.180 --> 02:06.160
therefore the first two things we need to define are the initial region prop which is a prop which allows

02:06.160 --> 02:14.470
us well to pass an object describing the part of the map we want to view and the normal style prop to

02:14.470 --> 02:17.340
give this map view some styling.

02:17.670 --> 02:23.350
So let's start with the style and I'll go back and we no longer need the old placeholder style here, I guess

02:23.350 --> 02:24.060
so I'll name it

02:24.070 --> 02:28.260
map and in there, I want to set a width and height.

02:28.710 --> 02:36.210
So let's go with width 100% and maybe a height of 250 pixels,

02:36.210 --> 02:41.520
remember this pick location complete in the end will be rendered inside a scroll view so we won't have

02:41.520 --> 02:44.160
problems with the height and so on.

02:44.160 --> 02:47.370
So with that, let's assign this here, let's assign styles and

02:47.370 --> 02:52.570
map as a value for style on our map view.

02:52.590 --> 02:58.880
Now of course we also want to initialize our initial region here,

02:58.980 --> 03:04.100
I'm going to manage that through state because this region needs to be flexible,

03:04.170 --> 03:11.310
we need to be able to change it so that when the user picks a location, we actually re-render the view with

03:11.310 --> 03:14.270
that picked location as the initial region,

03:14.310 --> 03:20.850
so therefore I'm going to manage it in my state and there I'll add a focused region or focused location,

03:20.850 --> 03:23.520
whatever you want to name it property

03:23.670 --> 03:27.070
and now how is such a region defined?

03:27.240 --> 03:30.720
You can read this of course in the official react native maps docs,

03:30.910 --> 03:40.410
a region is basically two coordinates, latitude and longitude which you commonly use to describe locations

03:40.920 --> 03:45.780
plus the two deltas of these properties.

03:45.780 --> 03:52.760
So you have to think of a region of course not as a single point but a single point in a square,

03:52.950 --> 03:56.070
so we need to add two pieces of information,

03:56.070 --> 04:01.250
how big of a radius do we basically want to display it, though that would be a circle,

04:01.260 --> 04:03.360
so that's why we have two dimensions,

04:03.360 --> 04:10.380
how much additional latitude and longitude do we want to display, so that if we have the .11 which

04:10.380 --> 04:17.070
would be a single point, we can create a rectangle by adding the information, also show everything which

04:17.070 --> 04:24.210
is half a latitude, to say it like this above that and below that and how much longitude is it above

04:24.240 --> 04:25.930
and below that.

04:25.950 --> 04:33.430
So what we also have is the latitude delta and the longitude delta

04:34.020 --> 04:40.890
and you have to make sure that you get these spelled correctly, longitude and latitude and the deltas

04:40.890 --> 04:49.290
because we will pass this state to initial region and map view react native maps expects to get an

04:49.290 --> 04:53.430
argument of this style, of this structure.

04:53.730 --> 04:57.090
So with these four pieces of information, we can start.

04:57.090 --> 05:00.470
Now the question of course is with which region do we want to start?

05:00.540 --> 05:05.490
Now I picked a nice location, San Francisco, you can of course always pick another region, just go to

05:05.490 --> 05:10.640
Google Maps, search something and then in the url, you will find latitude and longitude,

05:10.890 --> 05:17.540
so I'll start with 37.7900352 as latitude

05:18.000 --> 05:24.600
and my starting longitude will be -122.4013726

05:25.170 --> 05:26.790
.

05:27.000 --> 05:29.900
and of course again you can pick other locations.

05:29.940 --> 05:33.830
Now regarding the delta, I like the zooming level

05:33.900 --> 05:41.270
basically, if I pick 0.0122 and you can always play around with that to see how it changes

05:42.180 --> 05:49.530
and now the longitude delta should take the aspect ratio of our device into account.

05:49.530 --> 05:57.720
So what I want to do is I want to calculate this dynamically here, so therefore I will actually import

05:57.840 --> 06:09.360
the dimensions API in this file and then here, I will use dimensions get the window and there, the width

06:11.790 --> 06:14.710
divided by dimensions

06:14.760 --> 06:24.250
get window and now the height, this gives me the aspect ratio and now I want to multiply the aspect ratio

06:24.580 --> 06:33.100
with this latitude delta factor, so that the longitude delta matches this, taking our aspect ratio into

06:33.100 --> 06:34.000
account,

06:34.000 --> 06:36.100
so here, I'll multiply it with that, now

06:41.930 --> 06:47.660
we can also split this over multiple lines to make it a bit easier to read.

06:48.210 --> 06:51.660
So with that, we got a focused location set up,

06:51.990 --> 06:59.610
let's now assign this here by simply referring to this state focused location and saving it

07:00.120 --> 07:03.660
and now with that, we should be able to see a map

07:03.820 --> 07:10.000
and if you're seeing errors here, this is pretty normal after you added native libraries to the project,

07:10.180 --> 07:17.590
simply close both apps here, maybe even uninstall them on the devices to have a really clear fresh

07:17.590 --> 07:18.570
new start,

07:19.800 --> 07:25.620
also close that development server running an extra terminal which was opened automatically and then simply

07:25.620 --> 07:32.610
rerun iOS and Android to completely rebuild these projects taking into account the new native libraries

07:32.610 --> 07:35.760
you added, like in this case react native maps,

07:35.880 --> 07:39.820
so that's pretty normal that you need to do this once you added native packages.

07:40.050 --> 07:42.270
So here I finished for iOS,

07:42.330 --> 07:44.160
let me do the same for Android

07:45.300 --> 07:50.170
and it should then automatically install them and launch them and here you see for iOS, it's already working,

07:50.170 --> 07:52.290
Android is also currently being built

07:52.480 --> 07:54.160
and with that, we got both running.

07:54.160 --> 07:55.900
Now let's see if that works,

07:56.020 --> 07:59.340
let's enter some data so that we can log in here and

07:59.350 --> 08:03.860
let's go to share place and it works for the

08:03.880 --> 08:05.790
iPhone here, I see a map

08:05.860 --> 08:07.240
so that's working.

08:07.480 --> 08:08.370
Thanks to the scrolls view,

08:08.400 --> 08:10.020
we haven't got an issue here,

08:10.090 --> 08:12.200
I like that view here.

08:12.430 --> 08:14.400
So with that, let's now test it on Android,

08:14.440 --> 08:22.240
so there I'll also enter my credentials, side note, you always need to pick the @ sign from the keyboard

08:22.360 --> 08:24.210
down there, from the soft keyboard

08:24.550 --> 08:29.830
and on Android, you might end up with that, a blank screen for the map.

08:29.830 --> 08:34.420
You see the Google icon, so it somehow work but you don't see the map.

08:34.510 --> 08:41.500
Now for one, there are detailed troubleshooting guides on the react native maps github page on the

08:41.500 --> 08:42.600
documentation

08:42.760 --> 08:46.810
where this problem here is solved solid, blank map issue on Android,

08:46.810 --> 08:50.980
so definitely feel free to go through these but not all of these have to work

08:50.980 --> 08:56.410
for example we use different stylings and still it will work because I found that there are two major

08:56.410 --> 08:58.310
problems which can cause this,

08:58.360 --> 08:59.600
let's dive into them.

08:59.860 --> 09:07.270
For that I open the Android studio and there, the first thing you should ensure is that under tools SDK

09:07.270 --> 09:13.000
manager, that there you ensure that under SDK tools,

09:13.180 --> 09:16.480
you got Google Play services checked and installed,

09:16.480 --> 09:24.270
so make sure that this is the case. The second thing which could cause this is the emulator, the simulator

09:24.270 --> 09:30.780
you're running, so under abt manager where you see all your devices, here for example I'm using an API

09:30.900 --> 09:37.610
of 27 which at the point that I'm recording this is a cutting edge API, so a cutting edge Android version

09:37.950 --> 09:40.050
and that can cause a problem too.

09:40.350 --> 09:46.310
So what I'll do is I'll quit this emulator, the Android emulator and I'm going to create a new virtual

09:46.320 --> 09:51.010
device and there, I'll go again with the pixel

09:51.270 --> 09:58.320
but then here I'll pick the Oreo Android version which is the latest one or the newest one besides our cutting

09:58.320 --> 09:59.250
edge API

09:59.260 --> 10:01.240
here at the point of time I'm recording this,

10:01.270 --> 10:05.610
you can always download them by clicking on the download link if you don't have them yet.

10:05.670 --> 10:10.950
So I pick Android and then I'll just leave the defaults as they are, click finish and then I'll start

10:11.010 --> 10:19.290
this brand new Oreo simulator. And thereafter with Google Play services installed and this simulator

10:19.290 --> 10:22.230
using Android Oreo, it should work so

10:22.270 --> 10:24.520
let's wait for this to boot up

10:24.960 --> 10:26.660
and now that it did boot,

10:26.850 --> 10:34.270
let's go to our project and rerun npm run Android to build it again and ship it to this new simulator

10:35.320 --> 10:43.270
and once it did ship to it, so once the building finished, we should have our application here.

10:43.510 --> 10:44.940
And now let's try this again,

10:44.950 --> 10:47.450
let's quickly log in here

10:49.880 --> 10:54.850
and now here, you should see the map too with the same snippet as we see it here on the right.

10:55.070 --> 11:00.320
So now we get Google Maps here in the Google in the Android app and we've got Apple maps here in the

11:00.460 --> 11:02.100
iOS app, with that,

11:02.120 --> 11:07.820
let's now continue and let's see how we can finally use this to allow the user to locate himself or

11:07.850 --> 11:10.000
pick a place manually on the map.
