WEBVTT

00:02.230 --> 00:05.950
So we want to run our application on the Android simulator

00:05.950 --> 00:13.480
and for that, you have to visit developer.android.com/studio/index.html or simply

00:13.480 --> 00:15.330
search for Android Studio.

00:15.540 --> 00:18.310
That's the development environment for Android

00:18.340 --> 00:24.270
and it comes with all the tools you need to run Android apps on a simulator or a real device.

00:25.600 --> 00:29.740
On this page once you visited it, you can download Android Studio,

00:29.740 --> 00:33.870
now I'm on a Mac here but you will see the same link on Windows

00:33.940 --> 00:35.580
and the steps are the same,

00:35.620 --> 00:42.020
it will also work on Windows unlike Xcode which we'll cover later which only works on a Mac.

00:42.400 --> 00:49.720
So there, you have to agree to these terms and conditions and then download Android Studio for your operating

00:49.720 --> 00:52.140
system.

00:52.140 --> 00:55.010
Now I just started the download and this will take a while,

00:55.140 --> 01:00.180
I'll be back once it finish to walk through the installer and then show you what else you need to

01:00.180 --> 01:07.970
do to run your application on an Android simulator. So the download finished, I'll now execute this to start

01:07.970 --> 01:09.000
the installer

01:10.420 --> 01:15.220
and there, the steps will simply vary depending on where you are running this, on Mac OS you simply

01:15.220 --> 01:18.610
need to drag Android Studio into the applications folder, on Windows,

01:18.610 --> 01:23.770
you'll walk through some steps, by the end you will have Android Studio installed,

01:23.860 --> 01:25.110
that's the core thing

01:25.120 --> 01:27.810
so let's now start it.

01:27.880 --> 01:30.090
So I finished the installation,

01:30.170 --> 01:34.880
now I started Android Studio for the first time when I get this wizard, the set up wizard,

01:34.880 --> 01:37.410
you might not get this if you already have it installed,

01:37.520 --> 01:43.090
now there I'll simply pick custom to see what I can set up for the installation, I will use this Darcula theme

01:43.090 --> 01:45.940
to get this dark look next.

01:45.950 --> 01:47.850
Now here that's important,

01:48.410 --> 01:54.890
I'll choose Android SDK here, it actually added this automatically and Android virtual device which

01:54.890 --> 01:57.540
is the simulator, so make sure these are installed,

01:57.540 --> 02:03.160
I will also show you how to access this in the readily configured Android Studio in a second.

02:03.170 --> 02:06.460
So basically I got all of that checked and will hit next here,

02:06.850 --> 02:12.800
I'll leave the emulator settings to default, continue here and click finish and now it will download

02:12.800 --> 02:17.340
more components and set up Android Studio according to this set up,

02:17.360 --> 02:19.050
I'll be back once this finished.

02:19.880 --> 02:21.930
So the installation finished for me

02:21.930 --> 02:25.410
and with that, we can now open Android Studio.

02:25.410 --> 02:30.870
Now actually we can choose open an existing Android Studio project here because even though we haven't

02:30.880 --> 02:38.580
created one, well we kind of did create one, simply navigate into this create native app project we created

02:38.820 --> 02:41.560
and there, remember this Android folder, open it,

02:42.330 --> 02:48.710
this is your Android project, so you can simply open this folder here as an Android Studio project.

02:48.900 --> 02:55.170
Because this is a normal Android project which you could know also build and edit through Android Studio

02:55.220 --> 03:00.000
though we won't do that and you shouldn't really do that because it's easy to mess up things there, you

03:00.000 --> 03:04.670
will sometimes have to go in there and edit some things when you add third party libraries

03:04.680 --> 03:06.070
but I will walk you through that

03:06.080 --> 03:11.250
but one reason why I wanted to open it is because I want to manage my SDK version,

03:11.280 --> 03:13.750
so the Android version for which we can build

03:13.920 --> 03:22.200
and I also want to show you how to run a simulator. Now in Android Studio, you can always go to tools

03:22.650 --> 03:25.080
and there you should find Android,

03:25.110 --> 03:32.710
now if you don't find the Android option here as I do, you might have this error down here, this gradle

03:32.740 --> 03:39.510
Android error, that it can't find the SDK version for your build target, you can then click this link to

03:39.510 --> 03:41.600
install the missing platforms,

03:41.870 --> 03:47.990
accept this license agreement and in this case, it installs Android SDK platform 23,

03:48.000 --> 03:53.790
it's not the latest one but the latest one supported by this react native distribution here. So I'll

03:53.820 --> 03:55.750
simply wait for this to finish,

03:57.120 --> 04:01.910
thereafter we'll see that it also misses the build tools,

04:01.940 --> 04:05.810
so also click this and you might not get all these errors here,

04:05.810 --> 04:07.900
that really depends on the version of react

04:07.900 --> 04:08.770
native you are using

04:08.810 --> 04:11.510
and the point of time you're installing it,

04:11.510 --> 04:18.590
the latest Android SDK which was used by default and so on. Now with all that it should do something,

04:18.590 --> 04:23.200
here at the bottom you should see that gradle builds your project

04:23.410 --> 04:28.800
and once all of that is done, you should see Android under your tools window here.

04:28.810 --> 04:30.850
Now there are two important things,

04:30.850 --> 04:33.580
let's start with the SDK manager,

04:33.610 --> 04:37.260
we basically just installed the SDK version we need

04:37.450 --> 04:40.530
but make sure that here you install all the versions you need,

04:40.540 --> 04:41.120
typically

04:41.140 --> 04:42.550
that's the latest one

04:42.640 --> 04:45.340
but then you also got an error, we got an error here.

04:45.370 --> 04:53.140
So we also were prompted to install SDK version 23 and for you, these versiosn might differ, if you basically

04:53.140 --> 04:58.910
run into issues with running and building your app for Android, try out different versions,

04:59.080 --> 05:06.070
these are the versions supported by react native then, this by the way does not mean that you can't run

05:06.070 --> 05:09.250
it on devices with a later version.

05:09.310 --> 05:17.890
So that's the SDK version we built for, the next thing I want to do is under Android, tools Android, open

05:17.890 --> 05:24.910
the AVD manager, the Android virtual device manager, there you can launch a simulator,

05:24.950 --> 05:26.560
I already got one by default,

05:26.680 --> 05:33.420
you can also create a new virtual device, pick from some presets, I'll use a pixel device, the Android pixel

05:33.430 --> 05:34.670
phone which is emulated,

05:34.690 --> 05:38.930
click next and you should be able to leave all the settings as they are

05:38.950 --> 05:45.700
so I will leave it as this, use the latest API version which proves that the app also runs there and leave

05:45.700 --> 05:48.350
everything as it is here and click Finish.

05:50.650 --> 05:55.440
Now with that, we get this available and with this play button on the right here,

05:55.600 --> 06:03.180
we can now launch this virtual device and this will now bring up this simulator which looks like an

06:03.210 --> 06:09.840
Android phone and which allows us to basically run our application on it as we could on a real Android

06:09.840 --> 06:10.650
device.

06:10.680 --> 06:13.550
Side note, we'll also run it on the real device in a second

06:13.560 --> 06:15.680
but for now, let's stick to the simulator.

06:15.870 --> 06:22.440
Let's wait for this to boot up and once this did finish booting, you can go back to your react native

06:22.440 --> 06:27.110
project and in the terminal there, run npm run Android.

06:27.270 --> 06:31.610
What this will do is it will now build your project for Android, here it

06:31.710 --> 06:35.720
throws me an error that no java runtime is available, you probably do have that

06:35.730 --> 06:42.040
but in case you don't, make sure to install Java that's required because Android runs on Java and for the build

06:42.050 --> 06:43.480
process, we need Java.

06:44.660 --> 06:49.520
Once you got that installed, you can rerun the command and this time, it should be able to build your Android

06:49.520 --> 06:54.330
app and what it will do here is it really compiles it to Android code.

06:54.350 --> 07:00.800
That's important to understand, it really compiles your application to Android code and it does this by

07:00.830 --> 07:07.730
translating all these UI components like view and text to their Android equivalents and your javascript

07:07.730 --> 07:14.720
code as mentioned in the first course module runs in some tiny separate thread simply spun up by some

07:14.990 --> 07:18.320
other Android code created by react native

07:18.350 --> 07:21.700
because always keep in mind, react native is managing your entire project.

07:21.830 --> 07:24.180
So it's taking care that all these things run there

07:24.260 --> 07:29.450
but in the end it gives you an Android app which really uses native Android code.

07:29.990 --> 07:32.810
So with that, we got all of that set up,

07:32.840 --> 07:36.760
it launches an extra terminal or a command prompt window which you should keep running,

07:36.770 --> 07:43.070
this is essentially used for live reloading of your app, some convenience feature which makes sure

07:43.070 --> 07:48.260
that you don't have to rebuild your app whenever you change something but that this happens automatically

07:48.260 --> 07:52.460
and that it ships a new version to your simulator automatically.

07:52.700 --> 07:55.930
But here you can see, it doesn't really run on my simulator

07:55.970 --> 07:57.830
and this might be different for you,

07:57.830 --> 08:02.090
for me it doesn't run because this adb command which stands for Android

08:02.120 --> 08:04.680
debug breach wasn't found.

08:04.700 --> 08:06.250
Now this should be available

08:06.260 --> 08:11.570
once you installed the Android SDK build tools but sometimes it's not

08:11.570 --> 08:13.310
added to your global path,

08:13.370 --> 08:15.400
so the command is not known

08:15.440 --> 08:21.220
even though you installed the SDK build tools. Now attached to this video, you'll find a file where

08:21.260 --> 08:24.620
I will describe how to fix this on Mac and windows. On Mac,

08:24.620 --> 08:29.960
you can simply copy in this command which you find in the attached file

08:30.140 --> 08:32.350
to add something to your global path variable,

08:32.360 --> 08:35.250
just make sure to insert your username here

08:39.360 --> 08:44.220
and once you did so, you can run adb to see if this works, shouldn't give you an error anymore.

08:44.400 --> 08:49.800
So if you now repeat npm run Android, it should actually be able to not only build the project

08:50.130 --> 08:54.270
but also to launch it on your simulator.

08:54.450 --> 08:59.520
So there let's wait for this to finish,

08:59.600 --> 09:02.370
if you see it starts in a tab and it starts our app.

09:02.450 --> 09:05.840
Now the first time this starts, this can take quite some time,

09:05.870 --> 09:12.790
on the left here it's a bit small but you can see that there, it's building this project and thereafter

09:12.810 --> 09:16.790
here, we see our application run on a real simulator.

09:16.790 --> 09:21.950
So these were quite some steps but depending on which set up you already had, this might have been less

09:21.950 --> 09:23.130
work for you.

09:23.150 --> 09:25.760
With that, we get it running on the Android simulator,

09:25.760 --> 09:31.130
now if that's all you want, you can skip the next videos and we go right back into the code and start

09:31.160 --> 09:36.870
working on that, dive deeper into components and so on. Before we do that in the next videos,

09:36.920 --> 09:43.100
I will show you how to run this on a real Android device and then how to run it on an Xcode simulator

09:43.190 --> 09:44.730
and a real iPhone.

09:44.850 --> 09:46.940
So let's move on to this in the next lecture.
