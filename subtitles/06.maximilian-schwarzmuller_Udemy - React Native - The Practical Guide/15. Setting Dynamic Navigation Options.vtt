WEBVTT

00:02.250 --> 00:07.650
We're extracting our category here in our component because we're getting our parameter there with the

00:07.650 --> 00:09.130
help of navigation props.

00:09.150 --> 00:12.980
Now actually I want to output the title in my header though.

00:13.050 --> 00:18.520
Now you'll learn how you can configure debt header with the help of the navigation options.

00:18.630 --> 00:25.170
So on the category meal screen component and therefore this is a function Dale for does this an object

00:25.530 --> 00:30.300
we can add navigation options and you'll learn that this is a childless group object where you can set

00:30.300 --> 00:35.670
up a header title and header title now should be my category name.

00:35.700 --> 00:43.910
The problem here is that here selected category is available but that's inside of the component function.

00:43.910 --> 00:49.670
That of course on the other hand is not something we can access here because this happens after the

00:49.670 --> 00:50.990
function definition.

00:51.350 --> 00:55.150
So we don't have access to the category we identified there.

00:55.220 --> 00:56.920
That's a problem.

00:56.930 --> 01:04.390
The good thing is navigation options can be an object if you have static hardcoded configuration values

01:05.000 --> 01:11.990
but it also can be a function if you need a dynamic configuration that depends on changing data.

01:12.020 --> 01:17.300
And of course the data we depend on here is changing because we're using one and the same screen for

01:17.300 --> 01:22.820
different categories and therefore the idea and the title of the category changes every time you use

01:22.820 --> 01:26.140
that screen one time we're using it for the Italian category.

01:26.140 --> 01:32.360
The next time we're using it for the exotic category this function which you can also use this is of

01:32.360 --> 01:34.700
course supported by rack navigation.

01:34.700 --> 01:40.220
And if this is a function what you're passing to Navy navigation options react navigation will call

01:40.220 --> 01:48.740
it for you and will pass in some navigation data so it will pass an object with some data that should

01:48.740 --> 01:54.800
help you we'll have a look at what's in there in a second because we can simply log this navigation

01:54.800 --> 01:55.850
data here.

01:55.970 --> 01:57.610
Let's start with that.

01:57.710 --> 02:01.210
Let's now go to this page and let's see what's in there.

02:01.310 --> 02:05.850
If I expand this here this is the log I got.

02:05.850 --> 02:14.570
And you see oh we got another navigation prop in the navigation data there we have actions we have navigate

02:14.580 --> 02:15.390
pop push.

02:15.390 --> 02:20.010
So basically what we knew we also have get parent there and that should be useful.

02:20.010 --> 02:28.050
This because this will allow us to extract data here inside of our navigation options in the end which

02:28.110 --> 02:36.880
should be super helpful so in the end we get the same navigation prop we all get on our component props.

02:37.040 --> 02:48.110
So here we can now use navigation data dot navigation dot get param to get my category idea exactly

02:48.110 --> 02:54.660
what we did in the component so we can repeat the code we had in a component and get the selected category

02:54.660 --> 03:02.020
not just in that component but now also in this function which we use to setup our navigation options.

03:02.040 --> 03:08.130
So now here we all get access to these select that category and now navigation options does function

03:08.220 --> 03:13.460
if it is a function should of course return an object with your navigation options.

03:13.470 --> 03:19.860
So what we previously directly set as navigation options when we only had hardcoded values now has to

03:19.860 --> 03:20.550
be returned.

03:20.610 --> 03:26.950
But now can use these dynamically derived data where the dynamically derived information here.

03:26.970 --> 03:33.600
So now we can still set up a header title here and the header title now can be selected category dot

03:33.720 --> 03:35.450
title.

03:35.510 --> 03:41.300
This is how we can dynamically derive this and therefore now if you go back you see Italian here you

03:41.300 --> 03:47.420
see quick and easy here you see German here and that just works.

03:47.420 --> 03:55.280
Please note that you all by default get a back button text which is the previous screen's title that's

03:55.280 --> 04:01.130
no default feature reactive negation gives you we see back to meal categories here because we're coming

04:01.130 --> 04:05.720
from meal categories only on quick and easy where this would be too long.

04:05.720 --> 04:13.010
Next to this a bit longer title it reverts and defaults to back which is a good default behavior which

04:13.010 --> 04:19.400
you could override but which I'm happy with here on Android we don't have a back text but of course

04:19.400 --> 04:25.340
we have a back button and there the header also is populated correctly for the screens which is loaded

04:26.240 --> 04:32.030
so that is how we can always get our data dynamically here in New navigation options one issue you might

04:32.030 --> 04:37.430
notice though which is most visible here on Android is that the header on the new screen we're loading

04:37.700 --> 04:44.450
doesn't have the same styling as our header here it doesn't have the background color namely no of course

04:44.480 --> 04:51.620
that's easily fixed because on navigation options off the category meals we can simply bring in the

04:51.620 --> 04:58.250
had her style and had her tint color we set up here on the other screen as well so we can copy that

04:58.250 --> 05:06.200
over here and that just means we have to import the platform API and of course our constant color.

05:06.550 --> 05:18.730
So import colors from constants colors like this and when we do that we'll see that if we go there we

05:18.730 --> 05:25.570
now have the same hairstyle for this new page which is of course what you typically want what you don't

05:25.600 --> 05:31.300
typically want however is that you have to copy the same configuration to every screen because in this

05:31.300 --> 05:36.070
app we don't have that many screens we can certainly do that but in bigger apps where you have more

05:36.070 --> 05:42.520
screens that would be super annoying and super cumbersome so it's definitely not the way to go there.

05:42.520 --> 05:44.740
So let's have a look at an alternative in the next lecture.
