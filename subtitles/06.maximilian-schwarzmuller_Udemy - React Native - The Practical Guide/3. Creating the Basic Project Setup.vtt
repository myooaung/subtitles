WEBVTT

00:02.160 --> 00:05.140
For this module in Ford is aperture building.

00:05.160 --> 00:11.310
Again you'll find a starting Project attached to this lecture which you can use to get started with

00:11.310 --> 00:15.480
this or you can create a new Expo app on your own of course.

00:15.480 --> 00:21.300
Now this is the app I attached very basic app with an app which we can barely see which doesn't matter

00:21.330 --> 00:23.980
because I will not keep this text through anyways.

00:24.160 --> 00:26.370
And we only got that one app just follow.

00:26.430 --> 00:32.130
Now a lot of the things I do in this module will be things you saw in the previous modules because obviously

00:32.130 --> 00:33.660
that's the core idea here.

00:33.660 --> 00:39.480
We'll practice what we learned thus far and there will be some new things or some patterns which might

00:39.480 --> 00:41.710
be interesting to you as well.

00:41.730 --> 00:47.160
Now of course in the Zap which I sketched out in the last lecture we'll have a couple of screens so

00:47.160 --> 00:52.230
therefore we'll definitely need navigation and Hensel at a navigation folder so that I can store my

00:52.230 --> 00:54.380
navigation configuration there.

00:54.420 --> 00:57.480
That's of course just one possible setup.

00:57.480 --> 01:03.690
As I mentioned before you can work with any folder structure you want and that works for you besides

01:03.690 --> 01:04.740
the navigation folder.

01:04.740 --> 01:09.690
I also want to have a screens folder here in that screens folder.

01:09.690 --> 01:15.660
I also want to store well the screens we can navigate between and I'll add a components folder for all

01:15.660 --> 01:18.460
my regular components of course screens.

01:18.520 --> 01:24.450
Also our ReACT components but the normal components I mean here are the components we don't directly

01:24.450 --> 01:30.720
load as screens but which we embed into screens instead or into other components so that's what we'll

01:30.720 --> 01:37.500
have here I'll also add a constants folder because again I'll work with my column constants here so

01:37.500 --> 01:43.860
that I can use my preselected colors throughout the entire application.

01:43.880 --> 01:49.280
Now there are a bunch of different ways of getting started what I like to do first in my absence that

01:49.280 --> 01:51.020
I start with the screens.

01:51.020 --> 01:56.870
Even though if I don't add the content to all of them yet I like adding this general structure so that

01:56.870 --> 02:01.570
I can always see what I still need to work on which features are still missing.

02:01.880 --> 02:04.980
So therefore I'll add the screens which I'll have and as app.

02:05.180 --> 02:09.890
And here I'll do something which I haven't done before and which is totally optional but I'll organize

02:09.890 --> 02:12.120
my screens into separate sub folders.

02:12.170 --> 02:15.770
I'll have one folder with my shop related screens.

02:15.770 --> 02:20.930
And of course since we'll build a shopping app all tweens are kind of shopper related but here I want

02:20.930 --> 02:26.540
to have the screens which directly help us with viewing our products with adding them to the cart and

02:26.540 --> 02:27.120
so on.

02:27.530 --> 02:34.430
And then I want to have a separate folder and that's my my user folder you could say dear I want to

02:34.430 --> 02:36.400
have the user related screens.

02:36.470 --> 02:40.370
So that would be my user products and administrating products.

02:40.440 --> 02:42.590
That's how I will divide this.

02:42.590 --> 02:45.950
But of course you can organize that whatever however you want.

02:45.950 --> 02:52.670
So in the shop folder here for example I want to have my product overview screen and that will be the

02:52.760 --> 02:58.340
screen we see when the app loads where we have all the products to work with and where we can then select

02:58.340 --> 03:04.880
a product or direct the added to the card will therefore also need a product detailed screen that's

03:04.880 --> 03:10.520
the screen we see when we select a product and we want to learn more about it then we can click it at

03:10.520 --> 03:16.940
or tap it and are taken to that detailed screen we'll all need a card screen that's unsurprisingly the

03:16.940 --> 03:22.430
screen we see when we add items to cart or not which we didn't see but which you can visit to view the

03:22.430 --> 03:23.000
item there.

03:23.000 --> 03:24.440
So that's something we can do there.

03:25.470 --> 03:30.600
And I'll also add our orders screen where we can view our orders.

03:30.600 --> 03:35.730
Now you could by the way argue that the card screen and to order a screen kind of belong to the user

03:35.730 --> 03:39.450
folder because they are a kind of exclusive to the user.

03:39.450 --> 03:44.340
Every user has its own orders and its own cart and therefore you could go either way.

03:44.340 --> 03:47.970
I believe there a bit more on the shop product related side.

03:47.970 --> 03:51.960
But again that is totally up to you in the user folder.

03:51.960 --> 03:58.980
I want to have my user products screened so that will be the screen where I see a list of all the products

03:59.040 --> 04:06.570
that belong to that user and the added product screen which is the screen we'll use for adding new products

04:06.690 --> 04:08.710
or for editing existing products.

04:08.730 --> 04:10.940
We will be able to reuse that.

04:11.160 --> 04:13.490
These are the screens will work in fraud.

04:13.500 --> 04:20.280
This module and will not populate them with life all immediately right now will instead work on that

04:20.280 --> 04:20.990
step by step.

04:21.000 --> 04:23.090
But it is what we'll need.

04:23.220 --> 04:27.450
And of course there also is a number folder we can add already and that's the store folder where we

04:27.450 --> 04:32.820
will manage our redux store and our redux state data for which is our state management system.

04:32.820 --> 04:38.070
I want to work with which we of course need because we got many screens that all have to work on kind

04:38.070 --> 04:44.280
of the related data and hence we need to manage that data our products and what's in the card and so

04:44.280 --> 04:45.090
on.

04:45.090 --> 04:48.200
On some global level and redux is really great for that.

04:48.240 --> 04:53.520
So we'll definitely need debt on the same note we also need to install some packages.

04:53.550 --> 05:00.900
So I will run npm install dash dash safe and install redux and also react redux will all need react

05:00.900 --> 05:07.480
dash navigation because of course will add navigation again so we can already throw that in there.

05:07.500 --> 05:14.540
I will also already add react navigation dash header buttons because I will add Hatter buttons here.

05:14.550 --> 05:19.380
Now I want to have these nicely styled and positioned buttons without having to do all that styling

05:19.380 --> 05:22.650
positioning on my own and that should be it for now.

05:22.950 --> 05:28.770
So we'll install all these packages already we'll need them from this module and with these packages

05:28.770 --> 05:36.570
installed in these basic files created we we have a solid base setup to to get started with.

05:36.580 --> 05:41.820
Now besides these packages we also need to install two other packages with the help of the Expo install

05:41.820 --> 05:49.050
command and that's react dash native dash gesture dash handler so Expo install react native gesture

05:49.050 --> 05:55.800
handler and also do react dash native dash reanimated package both packages also need to be installed

05:55.980 --> 05:58.800
with the expo install command.

05:58.860 --> 06:02.100
Now of course it's all about populating that with life dear.

06:02.190 --> 06:06.720
I want to start with the first screen will actually see which is the products overview screen.
