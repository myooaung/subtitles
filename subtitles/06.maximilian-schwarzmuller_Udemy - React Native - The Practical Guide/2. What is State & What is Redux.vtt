WEBVTT

00:02.570 --> 00:08.780
State can be complex and it's important to understand this to understand which problems state management

00:08.780 --> 00:12.220
solutions like redux actually solve.

00:12.320 --> 00:17.930
If we had an app like this which is not the app we built but which could be an app you're building where

00:17.930 --> 00:23.180
you have two different areas one where you manage your users where users can sign in where users can

00:23.180 --> 00:28.100
manage their dashboards see their dashboard IDs on and one where you have products and a list which

00:28.100 --> 00:30.100
users can add to a card.

00:30.100 --> 00:35.480
Then these areas are actually not totally independent but in your app they will be rendered on different

00:35.480 --> 00:38.290
screens so pretty separated from each other.

00:38.630 --> 00:44.630
But the question whether a user is signed in which you need here might also be relevant in another part

00:44.630 --> 00:46.100
of your application.

00:46.280 --> 00:52.550
And right now you normally would have to pass that data around manually through props but passing it

00:52.550 --> 00:57.930
from component A to B to C to D all the way up to E where you'd then maybe need this.

00:57.970 --> 01:00.490
That's not really very convenient.

01:00.500 --> 01:06.980
Instead you want to have an application setup where something changes for example a user signs in or

01:06.980 --> 01:07.900
in our meals app.

01:07.910 --> 01:15.080
You set a certain filter and you save that and then this information is kind of propagated to your app

01:15.080 --> 01:19.420
and automatically passed to the places where you need it but not through props.

01:19.520 --> 01:26.120
But with some behind the scenes mechanism that helps you regarding this and that's where redux is a

01:26.120 --> 01:31.370
common solution we use in react and react native apps to manage that state.

01:31.370 --> 01:33.170
Now how does redux work.

01:33.200 --> 01:38.420
First of all redux as a third party library which you can add to react native to use it there and it's

01:38.450 --> 01:45.050
all about having a central store redux introduces a central store in memory not a database but it's

01:45.110 --> 01:51.950
in memory and JavaScript memory so to say where your application state so to date different parts of

01:51.950 --> 01:58.070
your app depend on can be stored in and then when in one component you have something that wants to

01:58.070 --> 01:59.280
manipulate that state.

01:59.330 --> 02:03.740
For example we're setting a filter or we're marking a meal as a favorite.

02:03.770 --> 02:10.610
We then dispatch a so-called action that's pre-defined information package she would say having a certain

02:10.610 --> 02:15.840
schema which can be handled by redux as configured by you.

02:15.860 --> 02:20.800
This action reaches a so-called reducer and you will be the one writing that reducer.

02:20.810 --> 02:25.270
As a developer so you can control which kind of action every user accepts.

02:26.060 --> 02:32.180
So which kind of information package your reducer requires and that reducer then receives the action

02:32.480 --> 02:39.670
and derives a new state based on the old state which then updates is centrally stored state so the reducer

02:39.660 --> 02:42.500
is there to update the state in the end.

02:42.500 --> 02:48.080
And when dead store changes when the state and their changes you can alter have subscriptions to that

02:48.080 --> 02:53.050
store from other components D subscriptions will be triggered when you're stored when your state to

02:53.090 --> 02:57.340
are changes and the updated state is then passed on to the places in your app.

02:57.380 --> 03:01.040
So to the components who are interested in these changes.

03:01.040 --> 03:05.720
For example this component here could be interested in some updates while then it can set up a subscription

03:05.900 --> 03:08.190
and it will be informed about the update and get.

03:08.190 --> 03:14.130
Didn't you state through its props or also with react hooks as you will learn in this module.

03:14.240 --> 03:19.620
This is how redux works and that's the idea behind redux.

03:19.700 --> 03:27.020
Now one important note if you're a bit further into react you all do probably know D react context API

03:27.050 --> 03:29.770
which is built into react.

03:29.810 --> 03:36.980
This can also be used for some behind the scenes state and data management but it's not a good replacement

03:36.980 --> 03:39.710
for all use cases where you use redux.

03:39.710 --> 03:45.160
I'll not dive deeper into this here because this isn't really a course about the in and outs of different

03:45.170 --> 03:50.930
react constructs instead we want to learn react native here but attached you find some resources that

03:50.930 --> 03:58.030
help you with that comparison between react context API and redux and when to use which in this module

03:58.050 --> 04:02.490
we'll use regex which is very flexible which you can definitely use and I will show you how to set it

04:02.490 --> 04:05.870
up with react native and how you then of course may work with it.
