WEBVTT

00:02.430 --> 00:06.210
So with all the work on logging the user in and keeping him logged in,

00:06.240 --> 00:10.320
let's make sure the user can also logout by pressing the signout button.

00:10.330 --> 00:12.360
Now that actually shouldn't be too hard,

00:12.390 --> 00:14.590
we have that side drawer here

00:14.820 --> 00:20.370
and the goal will be to simply dispatch an action when we click our button here, the sign out button

00:20.370 --> 00:25.480
we actually created on our own and then simply dispatch an action which triggers

00:25.530 --> 00:26.710
an action here

00:26.820 --> 00:32.290
that essentially clears our storage and removes the token from the redux store.

00:32.580 --> 00:42.090
So I'll create an action type, export const auth remove token because that is what we'll essentially do by the

00:42.090 --> 00:51.270
end, auth remove token and I will create a new action type here, a new action creator I mean, export const auth

00:51.300 --> 00:52.140
logout,

00:52.140 --> 00:54.120
that's the first thing I want to do.

00:54.420 --> 01:00.340
This will be an action creator that allows us to run side effects

01:00.550 --> 01:07.870
and here, I actually want to dispatch auth clear storage,

01:07.930 --> 01:13.990
I also want to make sure that we go back to the auth page though and if you remember, we load the auth

01:13.990 --> 01:17.980
page from the app.js file right, there

01:17.980 --> 01:21.820
we have this start single screen map function

01:21.820 --> 01:26.190
we are executing. Well essentially I want to execute this again now.

01:26.560 --> 01:28.190
Well nothing easier than that,

01:28.240 --> 01:36.010
we export as a default an arrow function which then run this code, this makes it available to us to

01:36.010 --> 01:41.560
be imported and executed in other files so that we just import app as a function we execute that will

01:41.560 --> 01:43.610
then effectively run this code.

01:44.050 --> 01:49.960
So I first of all have to go to my index files where I import app and I now need to execute this as a

01:49.960 --> 01:54.020
function in both index.ios and Android,

01:54.040 --> 02:01.390
make sure to save both files and now I can take advantage of that in my auth.js file and import it

02:01.390 --> 02:05.640
here too, import app from

02:08.850 --> 02:19.120
my app file and execute this as a function to start with the auth screen, like that. Now one issue we could

02:19.120 --> 02:27.860
run into here is that we haven't cleared the storage yet and therefore, we still find our refresh token and so

02:28.000 --> 02:28.810
on there

02:28.900 --> 02:36.670
and since we try to auto login from our auth screen, we could automatically log the user in again. To

02:36.670 --> 02:38.830
prevent this from happening,

02:39.070 --> 02:46.750
what I will do is I will first of all add something to clear storage and also clear the refresh token

02:46.750 --> 02:47.430
here

02:48.880 --> 02:54.430
because we only dispatch this if we got no refresh token or if we really want to get rid of it.

02:54.960 --> 03:01.130
And then here, I will ensure that I return this from this dispatch function

03:01.350 --> 03:05.230
so that here I can actually subscribe to it because that will be a promise,

03:05.310 --> 03:10.710
what async storage gives us and I only call app if that is completed,

03:10.950 --> 03:18.390
so if we actually did successfully delete this item so that we can't enter this infinite loop. Now that's

03:18.390 --> 03:19.050
one thing,

03:19.080 --> 03:26.470
I also want to clear the internal state and for that, I'll import auth remove token

03:26.850 --> 03:29.200
and I'll add an action creator for that,

03:29.340 --> 03:37.770
so export const auth remove token, gets no arguments and will be a good old normal action creator where

03:37.770 --> 03:44.800
i just return a javascript object where I set the type to auth remove token and nothing else,

03:44.920 --> 03:47.130
no payload needs to be passed.

03:47.130 --> 03:54.550
This is something I'll also dispatch here, I will dispatch next to my auth clear storage action, I'll dispatch

03:54.610 --> 03:57.520
auth remove token.

03:57.610 --> 04:01.080
With that we can work on the reducer

04:01.090 --> 04:05.370
but before I do this, I want to make auth logout globally available,

04:05.440 --> 04:13.930
so I'll go to the index.js file and simply export it here, auth logout and then I'll go to my auth reducer

04:13.960 --> 04:18.850
to also handle the case for auth remove tokened, this new action type we added,

04:18.850 --> 04:26.140
so let's add it here too, let's add case auth remove token,

04:26.210 --> 04:29.690
let's return a javascript object where we copy the old state

04:29.690 --> 04:32.020
even though we only have the token here

04:32.030 --> 04:32.980
but anyways

04:33.200 --> 04:36.060
and let's set the token to null.

04:36.290 --> 04:38.660
With that we get the reducer updated,

04:38.780 --> 04:43.630
now we just need to make sure that we dispatch our logout action here.

04:44.000 --> 04:45.700
We already export it in index.js,

04:45.740 --> 04:46.460
.

04:46.490 --> 04:51.140
now I just have to go to my side drawer and connect it to react redux.

04:51.170 --> 04:54.550
So let's first of all import connect here,

04:54.680 --> 04:55.390
whoops,

04:58.860 --> 05:06.220
from react redux and then we'll add good old map dispatch to props here at the bottom,

05:16.470 --> 05:20.460
get the dispatch function and then return

05:23.190 --> 05:30.090
our mapping object where we might have an logout method which in the end will be an arrow function where

05:30.090 --> 05:36.010
we dispatch. Now we need to import a new action because that is what we want to dispatch,

05:36.180 --> 05:43.920
so I'll import something from and now I'll go to the store folder and there to actions and there to the index

05:43.920 --> 05:47.800
file and from there we can import auth logout.

05:47.850 --> 05:50.310
Now this is what I'll dispatch down here,

05:50.340 --> 05:56.250
I'll run auth logout which will give us the action I want to send to the store.

05:56.700 --> 06:03.930
And now we can use this prop not before connecting it though, so connect null for map states to props

06:04.020 --> 06:08.340
but then map dispatch to props as the second argument

06:09.600 --> 06:14.740
and now I want to use that when I click this button,

06:14.910 --> 06:23.300
so I'll add on press here to touchable opacity and assign this to this props on logout.

06:23.730 --> 06:28.770
Now for this to work, we need to make sure that the side drawer has access to our store,

06:29.010 --> 06:35.140
so in app.js where we register components, we have to change the setup for the side drawer and also

06:35.140 --> 06:37.880
pass store and the provider here.

06:38.190 --> 06:44.220
Now let's save all of that and go back to our application and reload it

06:44.460 --> 06:50.460
and then let's click sign out and I'm back on the auth screen and if I reload, I'm also not logged in

06:50.460 --> 06:54.050
again, if I manually login though,

06:54.950 --> 06:56.470
this still works

06:56.510 --> 06:59.180
and then I'm back in the auto login mode.

06:59.270 --> 07:01.770
So let's also try this on Android,

07:02.090 --> 07:04.440
there if I sign out,

07:04.610 --> 07:05.900
looks good,

07:05.900 --> 07:08.820
now let's sign in again there

07:11.830 --> 07:14.290
and let's maybe also try to share an image again.

07:14.320 --> 07:15.480
So take a photo,

07:16.630 --> 07:17.670
like this,

07:18.040 --> 07:18.840
yes,

07:20.180 --> 07:21.610
pick a location,

07:24.100 --> 07:25.290
let's share it

07:25.450 --> 07:28.160
and click on share the place,

07:28.230 --> 07:29.500
this seems to work,

07:29.520 --> 07:32.380
let's find the place here

07:32.550 --> 07:39.110
and we see it's empty, only when we reload and find the places we can see it.

07:39.280 --> 07:42.660
Now that is something we'll fix in the next module

07:42.730 --> 07:49.960
but for now we got this whole authentication flow going, it should be working fine here. Was quite a lot of

07:49.960 --> 07:50.220
work

07:50.230 --> 07:54.310
but I wanted to show you in detail how you can set this up,

07:54.340 --> 08:00.280
you can of course always fine tune this to your needs, simplify it, maybe write it a bit better,

08:00.280 --> 08:07.120
I deliberately used a bit of a more verbose solution but I'm happy we got a working solution here and

08:07.120 --> 08:11.080
we now support login, sign up, auto login

08:11.200 --> 08:13.980
and also user logout.
