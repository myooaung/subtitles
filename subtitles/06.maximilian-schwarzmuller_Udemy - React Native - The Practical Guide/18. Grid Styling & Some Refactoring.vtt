WEBVTT

00:02.250 --> 00:07.290
Now that we got the basics about navigation down that we're able to pass data around.

00:07.350 --> 00:14.200
Let's take a step back and focus on the app we're building which is of course not looking that great.

00:14.190 --> 00:18.450
And let's focus on these category items here in the grid.

00:18.450 --> 00:21.210
We can tap them but obviously this is not an app.

00:21.210 --> 00:27.200
You would like to use now to make that more usable in the categories screen here.

00:27.240 --> 00:30.400
I'll actually wrap this item here.

00:30.490 --> 00:36.030
Detachable opacity so this grid item and outsourced this into a separate component not something you

00:36.030 --> 00:43.210
must do but something you might want to consider doing simply to keep your components leaner and cleaner.

00:43.260 --> 00:49.890
Pour down the components folder I'll add a category grid tile jazz file the name is of course totally

00:49.890 --> 00:56.400
up to you and in there we need to import react from reactive will certainly also need some stuff from

00:56.400 --> 01:03.990
React Native to build a component in there namely you will need touchable opacity of course will need

01:04.020 --> 01:11.550
the view will need text and we'll need a style sheet so that we can also styled as here and now we can

01:11.550 --> 01:14.900
create the stack category.

01:14.940 --> 01:22.980
Great style component here which receives some props we will need a style sheet here which I'll store

01:22.980 --> 01:31.110
in the styles constant and of course as always we can thereafter export the component and inside of

01:31.110 --> 01:39.810
this component function I'll return the j as X code I just cut out of the category categories screen

01:39.810 --> 01:46.810
here so you're the touchable past you set up this grid item is set up but will have to change a couple

01:46.810 --> 01:52.560
of things in a categories screen for example I'm setting up the grid item style here now we could leave

01:52.560 --> 01:58.530
it here and kind of pass it into our grid tile and that emerged together there as you learned it but

01:58.530 --> 02:03.510
I will simply set up all the styling in the component itself because we'll only use to category grid

02:03.540 --> 02:09.810
tile well in the grid on the categories screen so I'll add the grid item style here to the style sheet

02:09.870 --> 02:10.830
in this file.

02:10.860 --> 02:17.280
Hence this works again the on press handler will not work yet we'll fix this soon and now we can go

02:17.280 --> 02:24.720
back to the categories screen and of course import our component so import to category great style component

02:24.750 --> 02:28.250
there from the components folder and there.

02:28.290 --> 02:37.080
Group category grids tile and now simply well return this year when we render a new item.

02:37.080 --> 02:38.990
Now of course like this it won't work.

02:39.000 --> 02:45.300
We need to forward some data into the grids tall for it to work correctly there and we all need to make

02:45.300 --> 02:53.880
sure that pressing this does navigate us now for debt I'll pass on the data which we need there which

02:53.880 --> 03:01.140
is the title so that's item data dot item dot title and that's now a properly can use in the category

03:01.140 --> 03:08.910
grid style and I also want to pass in a number prop which passes in a function which we then can execute

03:08.940 --> 03:18.240
to navigate and I'll name this on select but you can name is whatever you want and in there I just want

03:18.240 --> 03:26.700
to execute the code which I currently execute in on press so I'll cut this from here out of the category

03:26.700 --> 03:33.000
grid tell moved us back into the categories screen into this function I passed two on select and all

03:33.000 --> 03:38.700
we have to do is trigger on select from inside the category grid tall that's of course a normal pattern

03:38.730 --> 03:48.110
you'd know from react so back in the category grid style on press can simply point at props on select

03:48.320 --> 03:52.390
to trigger to function that's passed into on select prop.

03:52.550 --> 03:57.370
Now the title I'm out putting here also can just be prop start.

03:57.380 --> 04:03.380
Title because we're getting this title prop as a prop on our category grids tall we're passing it here

04:05.100 --> 04:11.460
with Dad we split our component a little bit but of course now I also want to work on the styling a

04:11.460 --> 04:17.130
bit more so back in the category grids tall I for example want to use to color I'm setting up because

04:17.130 --> 04:21.580
every category gets a color stored in that color property here.

04:21.660 --> 04:28.620
So would be nice used and hence we can forward that the critic category grid tall as well forward color

04:28.620 --> 04:34.070
here you can of course named as proper whatever you want on the item dot color property.

04:34.200 --> 04:40.950
And here it has to be dot color because we named the property color here in the model and now in a category

04:40.950 --> 04:44.360
grid tile we can use that color to style this year.

04:44.460 --> 04:50.760
So how do Eden style is how it should does look like by adding a style to the view we have inside of

04:50.760 --> 04:56.460
the touchable opacity because the touchable opacity opacity component itself is invisible but the view

04:56.460 --> 05:01.250
isn't there we can pass no object and set the background color here.

05:01.260 --> 05:04.620
Cue props start color.

05:04.740 --> 05:08.860
Well let's see how that looks like if we save that we wait for it to reload.

05:08.950 --> 05:11.080
Doesn't look too bad but it's too small.

05:11.110 --> 05:15.970
It should fill out the entire grid item and not just to the row with the text in there.

05:16.180 --> 05:25.210
So to improve that I'll actually have this inline stall here but I'll merge this together into surrounding

05:25.210 --> 05:33.770
object with no stalling configuration which I set up in the stall sheet and I'll named is container.

05:33.790 --> 05:35.610
You can name it whatever you want.

05:35.680 --> 05:39.270
Styles container more.

05:39.620 --> 05:47.450
Pull out all the key value pairs in there as well so that we merge these styles here and now container

05:47.540 --> 05:54.530
is a style sheet object we can add down there and then there we can set flex one to make sure that every

05:54.530 --> 05:58.880
item fills out all the space it gets and now it is looks way better.

05:59.030 --> 06:02.330
Now I'm still not 100 percent happy.

06:03.080 --> 06:10.080
I want to add a little bit of a border radius here let's say of 10 to have some rounded corners.

06:10.400 --> 06:14.310
And of course you can set up any styling you want here you prefer.

06:14.570 --> 06:28.320
I will also set up a shadow color of black and a shadow opacity of dots to six and a shadow offset of

06:28.380 --> 06:37.010
with zero height two and a shadow radius of ten and elevation of free elevation for Android.

06:37.020 --> 06:42.720
If you'll remember because these shadow properties only affect us so that we get a little bit of this

06:42.810 --> 06:48.680
three dimensional car look and of course as I mentioned you can styled as in whichever way you want.

06:48.690 --> 06:54.240
Now in addition I want to make sure that this text here sits in the bottom right corner and has a little

06:54.240 --> 06:55.380
bit of padding around it.

06:55.380 --> 07:00.960
Of course a little bit of spacing around it so I'll add a little bit of padding here.

07:01.140 --> 07:08.730
Let's say off 10 and now set justify content to flex and the Flex direction the container of course

07:08.730 --> 07:14.340
is top to bottom because it's column so flex and we'll move this to the bottom here and now to all of

07:14.340 --> 07:17.100
the move it to the right on the horizontal axis.

07:17.220 --> 07:22.770
I set a line items to flex and as well and this moves that to the end of the Cross axis which is left

07:22.800 --> 07:29.900
to right in a normal view where you didn't change to flex direction with that we get this look which

07:29.930 --> 07:36.230
I'd say is better but of course the the text here the text styling could also change and a little bit

07:36.230 --> 07:37.430
more padding might look good.

07:37.430 --> 07:43.100
Maybe 15 but of course you can experiment with that and also one important side note in this app I'll

07:43.100 --> 07:47.330
not focus on building a totally responsive experience here.

07:47.330 --> 07:53.450
I'll try to keep this short and concise because the main focus of this module of course is navigation

07:53.690 --> 07:58.720
hence all not optimized is for all possible screens and platforms.

07:58.720 --> 08:01.200
This is something you can of course do as a practice.

08:01.250 --> 08:06.860
I'll not do adhere to not unnecessarily bloat this module so I'll just set up some styling that looks

08:06.860 --> 08:08.450
good on these emulators.

08:08.450 --> 08:14.520
That being said a little bit more padding might make sense and I also want to style the title here.

08:14.720 --> 08:17.740
Hence I'll add let's say title style here.

08:17.810 --> 08:19.330
Set up in the style sheet.

08:19.430 --> 08:22.040
Let's add it here and there.

08:22.040 --> 08:28.670
I want to use my font family open Sands bold which I can use of course because I'm registering it here

08:28.670 --> 08:39.110
in app J.S. so open sends bold is added now whips here and maybe also change the font size a little

08:39.110 --> 08:42.870
bit to 20 to we save.

08:42.880 --> 08:45.340
This does looks quite decent.

08:45.470 --> 08:48.560
Now there's one last thing which I want to do.

08:49.750 --> 08:58.330
On my category grid tall on the text here I'll set the number of lines to 2 so that any text that would

08:58.330 --> 09:07.800
be longer than that actually just gets cut off which I think looks a bit nicer and last but not least.

09:07.870 --> 09:14.560
You might notice that on Android for light and lovely does this on the left here because it's broken

09:14.560 --> 09:19.670
into two lines to make sure that this is all on the right on the title here.

09:19.720 --> 09:27.900
All set text a line to write to whips to write to forest is to be on the right.

09:28.000 --> 09:30.420
So let's wait for that to reload.

09:33.070 --> 09:35.720
And now that's looking the way it should.

09:35.720 --> 09:38.020
Now that's not too bad here.

09:38.060 --> 09:43.850
Now you might notice that the effect looks a bit strange if I tap I am here we get this strange extra

09:43.850 --> 09:46.520
border around it.

09:46.550 --> 09:53.750
Now one thing I will still do here which is totally optional but still all added here all at the platform

09:53.750 --> 10:00.710
API and also add touchable native feedback to actually use the ripple effect instead of touchable opacity

10:00.710 --> 10:02.090
if supported.

10:02.090 --> 10:11.600
So here I'll have my touchable component which by default is touchable opacity.

10:11.790 --> 10:21.510
But if platform the OS equals Android and as you learned early in the course the word Shine is greater

10:21.510 --> 10:26.340
or equal than 21 then we know that touchable native feedback is supported.

10:26.340 --> 10:31.100
So then I'll set touchable component equal to touchable native feedback like this.

10:31.290 --> 10:35.820
Use touchable component here instead of touchable opacity.

10:35.820 --> 10:38.730
And with that we should have a nice ripple effect on Android on ISIS.

10:38.730 --> 10:41.000
We have the capacity of fact which we want.

10:41.130 --> 10:46.070
And on Android we now have a ripple effect.

10:46.080 --> 10:50.520
But styling is off now.

10:50.550 --> 10:57.830
This however is something we can fix by adding extra view around this which receives our grid items

10:57.840 --> 11:01.840
style instead of the touchable component here.

11:02.010 --> 11:08.220
And with that we just need to add one extra styled property on the touchable component and set flex

11:08.220 --> 11:08.700
one.

11:08.730 --> 11:10.430
I'm doing it with an inline style here.

11:10.440 --> 11:16.770
Quick and dirty you could add a separate style in the style sheet with dad it looks and feels the same

11:16.800 --> 11:17.800
on ISIS.

11:17.910 --> 11:21.370
And now also on Android ripple effect is stair.

11:21.370 --> 11:27.870
Now it's not using our rounded corners though instead it renders a square or a rectangle.

11:28.080 --> 11:31.100
And you also learned earlier how to fix stead to fix it.

11:31.110 --> 11:35.820
All we have to do is on the grid item we at the border radius of 10.

11:35.910 --> 11:42.930
And then we actually add overflow hidden to make sure that child items can't be rendered outside of

11:42.930 --> 11:43.950
that wrapping view.

11:43.950 --> 11:49.010
Which means that the ripple effect can go outside of that rounded box.

11:49.020 --> 11:54.540
Now we have Dad look and that's the one adjustment I want to make here for different platforms.

11:54.540 --> 11:58.050
And with that that doesn't look too bad I'd say.

11:58.050 --> 12:04.110
Now of course you can tweak the look of dad you can tweak the font size and so on make it look really

12:04.110 --> 12:07.080
good on your device as you you're testing.

12:07.080 --> 12:11.940
I'm happy with this look and now it's really time to alter or render some recipes.

12:11.970 --> 12:13.470
When we select a category here.
