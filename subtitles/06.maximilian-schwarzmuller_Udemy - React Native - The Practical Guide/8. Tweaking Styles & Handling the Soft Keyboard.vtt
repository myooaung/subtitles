WEBVTT

00:02.450 --> 00:06.590
So for this error message in the input component we're getting the text from outside.

00:06.620 --> 00:09.240
But I want to control the style from inside.

00:09.260 --> 00:16.730
So here in the end I will wrap this text here in a view component simply to have more styling options

00:16.730 --> 00:26.180
you could say and assign a style here of air or container maybe and on the text itself all assign a

00:26.180 --> 00:31.910
style of air or text but these identifiers as always are totally up to you.

00:31.910 --> 00:36.230
I also don't always want to show it as if it's invalid but instead I want to show it if it's invalid

00:36.350 --> 00:39.800
end this input has been touched.

00:39.800 --> 00:44.750
That's why I'm managing this touched state so that the user at least has a chance of entering something

00:44.870 --> 00:46.780
before I yell at him.

00:46.820 --> 00:52.370
So now air container and error text can be added and of course you are totally free to stall this in

00:52.370 --> 00:53.710
whatever way you want.

00:53.750 --> 01:01.150
I'll give the arrow container a margin vertical of let's say five and then for the error text here again

01:01.190 --> 01:17.060
up to you I will assign a fun family of open sands here a color of red maybe and a font size of 14 to

01:17.060 --> 01:23.980
give it a little bit smaller or 13 and how is that what you'll see if this reloads and let's test this

01:23.980 --> 01:26.310
on Android as well of course not just on I.

01:26.320 --> 01:29.080
So if we wait for this to load on Android

01:32.210 --> 01:39.190
There we go to admin and unfortunately the android emulator is a bit slower which is why this takes

01:39.190 --> 01:40.200
a bit longer.

01:40.660 --> 01:44.550
And we add a new product here.

01:44.570 --> 01:47.150
Now first of all you would try to submit it like this.

01:47.150 --> 01:49.880
I get an error as it should be the case.

01:50.120 --> 01:54.140
And if I start entering here I can do that.

01:54.170 --> 02:00.660
However please note that after a touch the image and input if it's invalid I get an error.

02:00.820 --> 02:02.570
And that's exactly how it should be the case.

02:02.570 --> 02:06.280
So I can enter all of this.

02:06.320 --> 02:12.320
Now we have another issue my keyboard is overlapping the description inputs it will have to fix this.

02:12.560 --> 02:16.940
First of all let me enter something valid into all the other inputs.

02:16.940 --> 02:21.590
Even if it's an invalid image you are L we're not checking whether it's have valid you are L here just

02:21.590 --> 02:23.380
whether it's some text at all.

02:23.420 --> 02:28.580
So I don't care about the exact you or L validation here of course you could add a regular expression

02:28.580 --> 02:34.820
check for this but now I'll just enter some valid input into all these fields and thereafter if I hit

02:34.820 --> 02:46.250
save here this is saved and also can be found here at the bottom and it did create two here one behind

02:46.250 --> 02:48.730
the scenes but this is where it is coming from.

02:50.510 --> 02:55.100
Let's now make sure that we can all the reach all inputs and for this back and he had a product screen

02:55.190 --> 02:59.360
I'll use a component which you already saw earlier in the course I'll remove these two imports which

02:59.360 --> 03:04.850
we don't need anymore and instead at the keyboard a widening view to make sure we can always reach all

03:04.850 --> 03:05.860
our inputs.

03:06.110 --> 03:13.570
And now does keyboard avoiding view here can be used in the edit product screen who can be wrapped around

03:13.600 --> 03:16.210
our scroll view like this

03:25.140 --> 03:29.970
around the entire scroll view.

03:30.150 --> 03:34.530
And there you might don't want to play around with how you configure disregarding that behavior.

03:34.530 --> 03:39.040
You can all use the platform API to use a different behavior for different platforms.

03:39.150 --> 03:45.080
All will try padding here and add a keyboard word Nicole offset all.

03:45.090 --> 03:51.870
Let's say one hundred two add a lot of padding so that we really move up all the inputs quite a bit

03:51.890 --> 03:57.750
because there they're rather large with a label we have that the input itself which isn't super small

03:57.760 --> 04:00.230
so I definitely want to move it up quite a bit.

04:00.330 --> 04:05.940
And in addition and that's important you need to add a style here and I'll quickly add inline style

04:05.940 --> 04:06.360
here.

04:06.360 --> 04:10.940
Of course you could also use to stalls sheet and add flex one here and that's super important.

04:10.950 --> 04:15.720
You need to add this to the keyboard avoiding view which you wrap around your scroll view to have an

04:15.720 --> 04:20.730
effect because it basically needs to reserve for itself the entire screen size.

04:20.730 --> 04:27.040
There is a scroll view in there and that will still be able to scroll but you also need that now with

04:27.040 --> 04:33.240
that let's say give this a try on Android but since this takes a bit lot load I'll also quickly have

04:33.240 --> 04:34.610
a look at ISIS.

04:34.770 --> 04:40.620
And there you see you still can scroll unfortunately your keyboard isn't even close to our description

04:40.900 --> 04:44.060
by the way we can add multiple lines there as well as you see.

04:44.160 --> 04:46.500
But now let's have a look at our

04:49.000 --> 04:49.930
Android app here

04:52.900 --> 04:54.370
go to the admins action there

04:58.080 --> 05:02.950
and in there if I go to my description here you'll see this is now moved up.

05:02.950 --> 05:11.300
If I'm in the image you are El typing some stuff there now click into description does is reachable

05:11.300 --> 05:12.230
now.

05:12.230 --> 05:18.650
So now with dead we make sure that we can always reach all the inputs which of course is important in

05:18.650 --> 05:19.470
an application.

05:19.490 --> 05:21.830
You want to make sure that you can reach all your inputs.

05:21.890 --> 05:26.540
We're validating the data we're saving the data and we're doing this in a highly reusable way.
