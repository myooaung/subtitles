WEBVTT

00:02.080 --> 00:06.910
For the user allocation we got another package built into export which we can easily use and that's

00:06.910 --> 00:08.740
location package.

00:08.780 --> 00:14.230
No justice before you install it by following the instructions here and then you also see a usage example

00:14.230 --> 00:15.520
down there.

00:15.520 --> 00:17.130
So let's quickly do that.

00:17.140 --> 00:24.580
Let's run Expo install Expo dash location in our project and with it installed we can now also add a

00:24.570 --> 00:27.580
number of component besides the image picker component.

00:27.580 --> 00:33.340
I'll add the location picker J as file because that's another thing I want to be able to do in this

00:33.340 --> 00:38.920
app I want to be able to pick well location for debt in the location picker component.

00:38.920 --> 00:45.490
I'll import react from react of course because it will be a regular react component in the end and import

00:45.490 --> 00:54.040
a couple of things from react native and amongst these things is the view a button which allows us to

00:54.040 --> 01:00.610
start getting the user location some text all the to show a default fallback text while no place has

01:00.610 --> 01:06.640
been selected an activity indicator to show a spinner whilst we're waiting for the location to be fetched

01:07.300 --> 01:13.840
and maybe also alert to show an alert if something goes wrong and also the stalls should of course to

01:13.840 --> 01:16.840
stall this component.

01:16.860 --> 01:24.390
Now here I have my location picker component which receives props and then we'll do something set up

01:24.390 --> 01:33.390
the styles object with style sheet create and in the end export the location picture component here

01:33.450 --> 01:40.870
as the default like that now for that component how should its JS exe code look like.

01:40.940 --> 01:47.540
Ultimately that's as always up to you but I will start very simple here and just have a view with a

01:47.540 --> 01:48.460
button in there.

01:49.590 --> 01:56.580
Which will allow me to start getting the user location and also a never view in there which shows for

01:56.580 --> 02:04.080
example my fallback text no location chosen yet which will later be replaced for a little preview of

02:04.110 --> 02:05.890
the place on a map.

02:05.910 --> 02:10.010
So that's something I'll add later here on the button all day for say

02:13.220 --> 02:20.990
user location for example set the color to colors start primary and for that as always make sure you

02:20.990 --> 02:27.430
import that color is constant and up on pressing design Well unsurprisingly want to start fetching the

02:27.430 --> 02:28.500
user location.

02:28.610 --> 02:38.180
So here I'll add a new constant get location handler which is a function that will then use that location

02:38.210 --> 02:43.760
API we just installed to well get the user location and that's what I trigger when I click this button

02:45.530 --> 02:57.040
now for the styling here I'll add a style location picker on this view here I'll add another style map

02:57.190 --> 03:03.790
preview we could all install this text but I'll stick to the default and now add these two styles to

03:03.790 --> 03:15.570
the style sheet so location picker here they're all at a margin to the bottom of let's say 15 and on

03:15.570 --> 03:27.820
the map preview they're all all the ad margin to the bottom of let's say 10 and the width of one hundred

03:27.820 --> 03:33.380
percent to take all the available with a height of maybe one hundred and fifty.

03:33.570 --> 03:41.310
And also border color OFT is a grayish color with D CCC hex code and a border width of one.

03:41.540 --> 03:47.620
It's a little bit like the image preview box with that we have this component set up.

03:47.620 --> 03:50.170
We can now included in the new place screen.

03:50.200 --> 04:00.970
So in that screen component all the location picker from components location picker like this and added

04:00.970 --> 04:05.750
into J is X code below the image picker just like that.

04:05.900 --> 04:10.540
If we now save that and we have a look we see this box here.

04:10.560 --> 04:16.110
Now when I click get user location unsurprisingly the idea is that I will start getting the user location

04:18.460 --> 04:26.110
for that in our location picker a component will need to import some things here will import everything

04:26.200 --> 04:33.610
as location from the expo location package which we just installed in addition for location justice

04:33.610 --> 04:40.030
for the camera will have to ask for permissions so we'll input everything as permissions from Expo permissions

04:40.060 --> 04:47.970
that's also required with that added here in the get location handler I have first of all want to check

04:48.090 --> 04:54.540
my permissions and for Dad I can copy the approach I use in the image picker there we have this verify

04:54.540 --> 04:59.010
permissions function which we could of course therefore also outsource and write in a more generic way

04:59.010 --> 05:04.800
to work in different components here I'll just copy it verify permissions of course here I'm not asking

05:04.800 --> 05:12.750
for the camera roll but for a location instead and you need to grand location permissions to use does

05:12.750 --> 05:20.820
app and now verify permissions is executed here in the get location handler we can use async await here

05:20.850 --> 05:28.870
again to await the result of this check so has permission is what I want to check here and if not so

05:29.020 --> 05:33.040
if we don't have permissions well then I'll just return here.

05:33.040 --> 05:39.790
There is no need to continue because will not be allowed to fetch the location anyways now otherwise

05:39.970 --> 05:47.680
we can't continue and now we can use the location package to get to current position async and this

05:47.680 --> 05:53.230
does what the name implies it gets the current user position now locating the user can take a while

05:53.230 --> 05:58.150
which is why it is this an asynchronous task and why this returns a promise a promise which will resolve

05:58.180 --> 06:04.230
once we got the user location or which will be rejected if it fails to fetch one we can also configure

06:04.240 --> 06:09.400
this with an object you pass to it again as always in the official box you learn all about all options

06:09.400 --> 06:16.550
you can set there for example one option you can set us a timeout and set us to five time out and set

06:16.550 --> 06:22.670
us to five seconds to make sure that if we couldn't fetch a location for five seconds we stop trying

06:22.670 --> 06:23.870
and we throw an error.

06:23.870 --> 06:27.260
So the promise would then be rejected.

06:27.310 --> 06:34.930
Now we can await this and of course wrap it into a try catch block that's important to make sure we

06:35.590 --> 06:42.610
do handle errors if we fail to fetch a location here I will then simply use the alert component which

06:42.610 --> 06:52.410
I'm already importing to an alert could not fetch location and then here please try again later or pick

06:52.840 --> 06:59.940
a location on the map which is not possible right now but which will soon add and here a button where

06:59.940 --> 07:07.920
we say OK so that's an alert I show if fetching you a location failed for some reason.

07:08.880 --> 07:10.090
Eyebrow wise here.

07:10.130 --> 07:12.470
I expect to get back a location.

07:12.500 --> 07:15.200
So that's the result of this promise in the end.

07:15.200 --> 07:16.920
A location which we can use.

07:17.120 --> 07:25.720
Now we can then utilize this location with the help of U.S. state to manage some internal state here

07:26.830 --> 07:36.250
that's the picked location and set picked location and there we can call U.S. State which has no initial

07:36.250 --> 07:37.810
value here.

07:37.810 --> 07:45.550
And then here in the location handler we can set the picked location.

07:45.600 --> 07:52.230
Q Well to something we'll have to see to what for now to now but before we said anything here let's

07:52.290 --> 07:57.530
actually console log location to get a feeling for what's inside there.

07:57.540 --> 08:03.740
Now I also want to show a spinner whilst we are fetching soul manage never state in here and that city

08:03.740 --> 08:10.190
is fetching state and initially that is of course false.

08:10.220 --> 08:12.260
But initially we're not fetching.

08:12.650 --> 08:19.670
But then you're in the get location handler before we start getting the location all set is fetching

08:19.670 --> 08:21.090
to troop.

08:21.260 --> 08:24.410
And once we're done and that also includes if we got an error.

08:24.410 --> 08:31.220
So thereafter I'll set it back to false and now we can use as fetching to show a spinner whilst we are

08:31.220 --> 08:31.640
fetching.

08:31.640 --> 08:39.740
So here it is fetching as true I'll show the activity indicator and only otherwise I'll show this text

08:39.950 --> 08:45.920
and later will of course not just show the text but will also show a map snippet.

08:45.920 --> 08:48.260
Now the activity indicator can be configured.

08:48.260 --> 08:55.440
We can set the size to large and the color to color is the primary if you want to with all that.

08:55.440 --> 08:57.940
Let's go back and give it a try.

08:57.960 --> 09:03.060
Hero Nye west because whilst I can't add a image here at least I can check the location and click on

09:03.060 --> 09:07.980
get user location and I'm asked whether I want to grant permissions which I do want to allow.

09:08.040 --> 09:14.820
Always allow and well you see that spinner it's super fast because it's a simulator it also by the way

09:14.820 --> 09:19.270
it simulates the location it's not the real location of your computer where you're running the zone

09:19.480 --> 09:25.750
instead it's set default dummy location in San Francisco and here on Android it's the same if I click

09:25.780 --> 09:33.100
get user location here I need to grant permissions once I did that you see the spinner here and then

09:33.100 --> 09:39.700
you will see nothing but in the logs of course you see something there you see the objects which were

09:39.700 --> 09:45.670
being locked where you have a coords sup object so to say so a field named coords and the object which

09:45.670 --> 09:53.230
is a no object with dy accuracy and then a latitude longitude paired that describes this fake location

09:53.290 --> 10:00.170
both simulators use fake locations you also got a timestamp.

10:00.210 --> 10:01.700
So now we know what's in there.

10:01.740 --> 10:08.790
So we can set the pick location we can now set this to let's say an object where you store a latitude

10:09.540 --> 10:17.330
of location dot keywords the latitude that's what's in there right and along it you'd LNG off location

10:17.330 --> 10:20.280
dot keywords stored long etude.

10:20.320 --> 10:26.140
So now we have that picked location available and that picked location can now be used to for example

10:26.440 --> 10:28.440
show a little map snippet here.

10:28.480 --> 10:34.420
Once we do have a location before I do that just one tiny thing I want to make sure that both the text

10:34.720 --> 10:41.920
and the spin in here is centered so on the map preview I'll actually also set justified content to center

10:42.280 --> 10:48.490
and a line items to center so that all the content in there is centered horizontally and vertically

10:48.500 --> 10:50.310
that's just a tiny thing.

10:50.320 --> 10:52.290
So now you see that all in the center.

10:52.300 --> 10:58.390
But with that let's now make sure we show a little map snippet that shows the location the user picked.
