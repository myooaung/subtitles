WEBVTT

00:02.140 --> 00:06.630
Now we started working on the input and it doesn't look too bad but we want to make sure that users

00:06.630 --> 00:13.980
can only enter numbers that are digits only and that we can't enter a dot here or a comma or paste in

00:13.980 --> 00:16.440
some non numeric content for that.

00:16.530 --> 00:20.280
We of course need to validate what the user entered here.

00:20.550 --> 00:27.900
Now for validating what the user entered I want to as I showed it before already basically saved the

00:27.900 --> 00:28.440
value.

00:28.440 --> 00:33.510
The user entered on every keystroke and feed it back into the input but after every keystroke I also

00:33.510 --> 00:39.000
want to validate the input to make sure that we're having a valid value there.

00:39.000 --> 00:44.770
So basically a number for that first of all we need to manage some state here in the start game screen

00:44.860 --> 00:54.510
soul import use state and then up here at the beginning of this component all set up my use state call

00:54.520 --> 01:02.180
so register some state and that will be the entered value and even though that will be a number later

01:02.300 --> 01:08.000
technically it is a string at the beginning because all input is just a string and you manually have

01:08.000 --> 01:09.080
to convert this to a number.

01:09.080 --> 01:15.170
And if you want to I will also add a set entered value function here.

01:15.170 --> 01:19.220
The second element we retrieve from that array use state gives us.

01:19.430 --> 01:25.660
And now we can add a constant here which will name no input handler or whatever you want to name it.

01:25.700 --> 01:32.830
This will get the the input text and that's the function because that's just a function storing in this

01:32.830 --> 01:40.690
constant which I want to connect to my input and they're two on change text point at d no input handler

01:40.960 --> 01:43.930
and feed the value back in and that's our entered.

01:43.930 --> 01:48.330
Value.

01:48.420 --> 01:54.480
Now normally we would just say set entered value in here and set the input text to be our new entered

01:54.480 --> 01:56.720
value which we feed back into the input.

01:56.820 --> 02:01.220
But here are actually first of all validate the input.

02:01.290 --> 02:06.300
So what I'll do here is I'll not set my insured value right to the text here.

02:06.330 --> 02:15.790
Instead I'll set it to my input text where I replace and I can call replace because input text will

02:15.790 --> 02:22.450
be a string and that's a normal javascript method that exists on strings where I replace some content

02:22.450 --> 02:27.430
based on a regular expression no regular expressions can be scary but that's a simple one we created

02:27.430 --> 02:36.010
with two forward slashes and in there I'll add square brackets and basically with this expression say

02:36.040 --> 02:45.250
that I'm replacing anything that's not a numbers zero to nine so not a number globally in the entire

02:45.250 --> 02:51.630
text so that means it will not just look for the first hit basically but it will search the entire text

02:52.850 --> 02:53.940
I will replace that

02:56.620 --> 03:02.440
with an empty strings all basically drop any non number of value that's what's happening here and that's

03:02.440 --> 03:04.540
what I store in my new state.

03:04.600 --> 03:09.460
With that we should make sure that the user can't enter anything which is not a number.

03:09.460 --> 03:11.410
So let's check this here on Android.

03:11.410 --> 03:16.720
If I press the comma you'll see that instantly gets removed and that's exactly what we need here.

03:16.720 --> 03:19.960
We only allow no values.

03:19.960 --> 03:24.030
So that's a little bit of validation we have in place here.

03:24.030 --> 03:32.890
It's not all I want though but we're still not done with the input because on Io s if we are in that

03:32.890 --> 03:37.410
input mode and we want to close that keyboard right now that's not really doable.

03:37.420 --> 03:44.500
We can't click outside and close it and it would be nice if we could know to make sure that we can and

03:44.500 --> 03:47.960
that we close to keyboard if the user taps somewhere else.

03:48.160 --> 03:56.020
I will actually wrap the entire view here with a special component provided by react native and that's

03:56.020 --> 03:58.490
the touchable without feedback component.

03:58.630 --> 04:04.960
So component that allows us to register a touch listener without giving any visual feedback because

04:04.960 --> 04:07.060
that's exactly what we need here.

04:07.150 --> 04:11.080
We can wrap our entire screen with this.

04:11.080 --> 04:18.190
So our entire view can be wrapped with this touchable without feedback listener so that in there or

04:18.190 --> 04:24.070
on there we can now register or listen to the press event and when a press happens I want to dismiss

04:24.070 --> 04:30.010
de keyboard and for dad react native gives us a useful API we can import from risk native and that's

04:30.010 --> 04:37.240
to keyboard API that's now not a component but that's the API where we can interact with the native

04:37.240 --> 04:43.820
device itself so to say in this case with the keyboard and here up on a press of this button I want

04:43.820 --> 04:50.230
to fire a function and here I'll go with a simple inline function of a short anonymous function you

04:50.230 --> 04:52.700
could of course all use a named function instead.

04:52.870 --> 04:57.230
But here all I want to do is I want to call keyboard dot dismiss.

04:57.310 --> 05:02.680
That's a function this keyboard API which we're importing from risk native gives us and this does just

05:02.680 --> 05:04.220
what the names adjusts.

05:04.360 --> 05:06.570
So that now if we tap here we can type.

05:06.580 --> 05:12.610
But if I tap somewhere else we dismissed a keyboard and that of course happens on both platforms.

05:12.640 --> 05:17.740
I think that's a better user experience because that's what you would expect that you closed to keyboard

05:18.160 --> 05:21.040
if you tap somewhere else on the screen.
