WEBVTT

00:02.190 --> 00:08.880
One important note the dimensions API is by far most important API you have and React Native when it

00:08.880 --> 00:12.390
comes to dynamically working with the way lable width and height.

00:12.420 --> 00:16.640
It's part of React Native and does not depend on export or anything like that.

00:16.810 --> 00:24.690
Ex bill however also gives you an API you can use you can import something from expo in this day for

00:24.690 --> 00:30.240
only works and expo apps of course and that's the screen orientation object.

00:30.270 --> 00:36.210
This is an object which helps you detect screen orientation changes and also lock the screen orientation

00:36.210 --> 00:37.740
when your app is running.

00:37.860 --> 00:43.800
So even if you initially set no lock here in your app Jason file you can still add one after you started

00:43.800 --> 00:46.560
your app with the help of that API.

00:46.770 --> 00:52.890
The screen orientation API has a couple of functionalities and I want to quickly walk you through them.

00:52.890 --> 00:56.460
You can of course play around with them to learn more about them.

00:56.490 --> 01:05.070
For example you have to lock async method this locks the orientation in the end and you set the lock.

01:05.070 --> 01:12.060
By and by now using screen orientation dot and there you set this to orientation lock and then for example

01:12.060 --> 01:18.930
to portrayed or portrait down portrait ops or a lot of configuration possibilities you have here and

01:18.930 --> 01:20.910
now I'm calling this in the game screen.

01:20.910 --> 01:27.660
This means that I can freely rotate this as long as I'm configuring the game but as soon as the game

01:27.660 --> 01:33.570
starts you'll see that the orientation doesn't change anymore so that can be useful if you need to lock

01:33.570 --> 01:36.830
this down when your app reaches a certain point.

01:37.020 --> 01:44.370
In addition to that discrete orientation API here also gives you a function to get the current orientation

01:44.460 --> 01:49.080
and async simply means that this gives you a promise that doesn't immediately do that.

01:49.080 --> 01:54.080
It gives you a promise where you eventually get the result but the result will be data very quick.

01:54.120 --> 02:01.090
Just not in the next code line immediately and you can also set up a orientation change listener for

02:01.090 --> 02:05.070
example and this orientation change listener will do what it sounds like.

02:05.110 --> 02:10.840
It fires a function whenever your orientation changes that can be useful if you have different layouts

02:10.840 --> 02:16.050
that only depend on the question whether you're in portrait or landscape mode and not so much on the

02:16.060 --> 02:21.620
dimensions because of course it's important to keep in mind that with the code we wrote here with use

02:21.640 --> 02:27.850
effect where we listen to changes in the dimensions we technically don't just react to orientation changes

02:28.000 --> 02:31.430
though that typically is what changes the available width and height.

02:31.480 --> 02:36.790
There isn't really anything else that could change it but you're not strictly only checking for whether

02:36.790 --> 02:43.830
your orientation changed and you can't directly check for the orientation changed and is now portrayed.

02:43.900 --> 02:49.720
Instead you could listen for a change and then in the function you fire checked a new available with

02:49.900 --> 02:50.890
and kind of find out.

02:50.920 --> 02:51.190
OK.

02:51.220 --> 02:57.520
This is a lot of with we're probably in landscape now that is something you can guess but you don't

02:57.580 --> 03:02.290
know because you're checking for the width and the height not for the orientation.

03:03.430 --> 03:05.990
Now typically it's the width and height that matters to you.

03:05.990 --> 03:11.040
Though you might not be interested whether you're in landscape mode and have a lot of width or whether

03:11.040 --> 03:15.830
the app is running one eye patch and therefore has more width than on a phone you just might be interested

03:15.830 --> 03:21.020
in the question how much with do I have and then render your layout based on that no matter if that's

03:21.020 --> 03:25.090
the case because you're in the landscape phone or a portrait mode iPad.

03:25.390 --> 03:31.250
So they offered you dimensions API is the important API but I didn't want to hide the screen orientation

03:31.250 --> 03:37.430
API Expo exposes from you especially because it can also be used for locking and unlocking of course

03:37.560 --> 03:40.700
the orientation at runtime which can be useful at times.
