WEBVTT

00:02.410 --> 00:07.070
So for this module attached you find again a simple starting Project.

00:07.090 --> 00:09.640
There you have the app just filed with the empty view.

00:09.790 --> 00:11.680
So not too much happening there.

00:11.770 --> 00:16.870
Get a constant folder with a basic color which is set up for you and that's it.

00:16.870 --> 00:21.010
I've written that there is nothing interesting in here it's a very basic application which will now

00:21.010 --> 00:25.320
use to build this application which I just sketched out.

00:25.420 --> 00:28.930
Now of course you can absolutely go ahead and build the basics on your own.

00:28.930 --> 00:34.870
So these three different screens which mean the end need or for different screens one for all the places

00:34.870 --> 00:40.390
one for the place details one for creating a new place and one for that full screen map which we also

00:40.390 --> 00:45.590
want to show you can absolutely do that and build the base skeleton for these screens on your own.

00:45.590 --> 00:51.100
Also set up the basic navigation because these are of course all things we already did multiple times

00:51.370 --> 00:52.600
in this course.

00:52.750 --> 00:57.310
It's all the things I will start with in the next lectures in case you want to follow along there or

00:57.310 --> 01:01.000
compare your solution to mine and there after will dive into D.

01:01.090 --> 01:09.150
The meat of this module will dive into how to add native device capabilities so let's get started with

01:09.210 --> 01:10.510
with the basics they offer.

01:10.510 --> 01:17.080
I'll add a new folder screens with the four screens I want to have and that would be the places list

01:17.080 --> 01:28.360
screen file the place detail screen file the new place screen file and also the map screen where we

01:28.360 --> 01:33.770
can then see this full screen map and I'll populate them with content throughout this module.

01:33.820 --> 01:36.970
But these are the four basic screens which I'll need.

01:36.970 --> 01:43.460
I'll also add a navigation folder so that we can setup navigation in there and here I'll set up my places

01:43.470 --> 01:51.030
as navigator J as file now in the starting Project I provided react navigation and all its dependencies

01:51.450 --> 01:52.920
are already installed.

01:52.920 --> 01:56.720
So if you're using that you don't need to manually install it.

01:58.260 --> 02:03.480
Otherwise if you're using your own starting project make sure you install react navigation with npm

02:03.480 --> 02:09.660
install req navigation and also make sure you installed these extra dependencies here to make sure that

02:09.660 --> 02:12.280
react navigation works with expo.

02:12.330 --> 02:19.290
So with that installed now of course we can setup navigation here in the places Navigator and Ford ad

02:19.380 --> 02:24.150
in here all import from react navigation

02:26.730 --> 02:31.020
and what I'll import is of course the stack navigator creation function.

02:31.020 --> 02:37.110
So create stack navigator and also create app container which we also need to do because we'll need

02:37.110 --> 02:41.580
to do both create a stack navigator and setup the app container thereafter.

02:41.580 --> 02:46.830
Now we also need to import the screens you want to work with and that would be the places list screen

02:47.070 --> 02:53.640
which I'll import from the screens folder and there it's to place this list screen we'll all need to

02:53.640 --> 02:59.910
place detailed screen of course place detailed screen which is important from screens place detailed

02:59.910 --> 03:02.850
screen and also obviously the average screens.

03:02.850 --> 03:12.800
So we got the new place screen from screens new place screen at last but not least we also need to import

03:12.830 --> 03:18.770
our map screen here from the screens folder and then that would be the map screen.

03:18.770 --> 03:26.800
Now we can set up our stack navigator here and I'll store it is places navigator in a constant.

03:26.990 --> 03:31.440
And as you all learned we're now mapping identifiers to our screens.

03:31.550 --> 03:38.720
So we got maybe the places identifier mapped to the places list screen we got the place detail identifier

03:38.840 --> 03:41.180
mapped to the place detailed screen.

03:41.180 --> 03:49.300
We also got the new place identifier map to the new place screen and last but not least maybe map mapped

03:49.330 --> 03:57.040
to map screen with that weekends it up some default navigation options here so I'll pass in a second

03:57.130 --> 04:02.680
argument and of course setting this up is totally optional but I'll add details NAF options to every

04:02.680 --> 04:09.970
screen therefore and I wanted to find my header style in here and make sure did there we're using a

04:09.970 --> 04:14.010
background color depending on whether we're running on Android or not.

04:14.140 --> 04:21.880
Hence I'll import this platform API thing from react native and I will also need my color so I'll also

04:21.910 --> 04:30.790
import colors from Constance collars that's also required because with Dad we can now check whether

04:30.790 --> 04:37.120
to platform operating system is Android and if it is we can make sure that the background color of the

04:37.120 --> 04:39.400
header is our primary color.

04:39.580 --> 04:46.600
Otherwise I'll set no color I want to use the default transparent look which I was uses and here also

04:46.600 --> 04:53.080
set up a header tint color for the text on there again checking for the platform because if de platform

04:53.080 --> 04:59.560
is Android since we have a a solid background I'll set the Tim color to white for ISIS I'll do the opposite

04:59.590 --> 05:06.520
there I'll set it to my primary color now that is it here I have no custom fonts in this project of

05:06.520 --> 05:12.790
course you could add some if you want to with this setup we can export our app container which we therefore

05:12.790 --> 05:21.230
need to create with create our container and pass in the places navigator here now that's navigation

05:21.230 --> 05:21.790
setup.

05:21.890 --> 05:24.620
Of course in the app us file we can now use it.

05:24.620 --> 05:32.200
So here we should import the places Navigator from the navigation folder places navigator.

05:32.240 --> 05:39.920
We don't need to view import here anymore therefore we can just return places navigator since I'm not

05:39.920 --> 05:44.540
loading any custom fund cycles that don't need to do this app loading stuff.

05:44.540 --> 05:49.610
We did an early out or in other modules here I can just return this right from the start.

05:51.500 --> 05:58.660
Now in these screens here in the places list screen all import react from react.

05:58.700 --> 06:01.190
I'll import couple of things from.

06:01.220 --> 06:02.070
React Native.

06:02.120 --> 06:08.180
Probably a view a text and a style sheet and then we can see if we need something else later from Rick

06:08.180 --> 06:08.570
native.

06:08.600 --> 06:15.740
And then set off to set up the constant here places list screen as a normal react component which receives

06:15.740 --> 06:19.550
props in which the end returns some content.

06:19.550 --> 06:24.330
Here I'll just return of you with a text of places list screen.

06:24.590 --> 06:30.230
So just some dummy content for now and all they have to style she'd set up here with style she'd create

06:31.190 --> 06:34.800
and ultimately export the places list screen.

06:34.800 --> 06:37.420
And this will be the base skeleton we can use for every view.

06:37.430 --> 06:40.880
So I will drop it into every view and just adjust this name here.

06:40.880 --> 06:48.250
So here we have to place detailed screen which I want to use and then copy it all in the new place screen

06:48.850 --> 06:52.720
and replace this name here in all three places.

06:52.720 --> 06:58.300
And last but not least all the drop this into the map screen to have that here as well.

06:58.300 --> 07:02.650
And then we'll of course add the real content for all this module.

07:02.800 --> 07:05.530
So that's the screens created.

07:05.530 --> 07:12.190
If we now save that and you run does with NPM start or with Expo start and you run it on your favorite

07:12.220 --> 07:18.660
emulator or emulators Wednesday's finished building we should see the places list screen in the end

07:18.990 --> 07:21.020
like this.

07:21.120 --> 07:26.790
Now of course we're not having a header title here so let's make sure we we do set one all on Android

07:27.180 --> 07:34.830
by going to the places list screen and in there we can add places list screen navigation options and

07:34.830 --> 07:42.690
set us to a static object here where we can add a header title of all places or something like that.

07:42.690 --> 07:47.840
And with that of course once this reloads we see that title here on the places list screen.

07:48.030 --> 07:55.260
So that's the basic screen setup which will need for it is module here with that before we dive any

07:55.260 --> 07:58.530
deeper into you the content of the our screens.

07:58.650 --> 08:04.020
Let's actually make sure that we have a plus button here in the header as well which takes us to the

08:04.020 --> 08:10.770
new place screen because deaths stand where we can get started with tapping into native otherwise functionalities

08:10.770 --> 08:13.010
end with adding places.

08:13.090 --> 08:20.200
Now of course you know how to add a button to the header of your navigator all you need to do is install

08:20.200 --> 08:27.040
and you package with npm install dash dash safe and that's the react navigation header Dash Buttons

08:27.040 --> 08:32.170
package which we use a couple of times wrote this course and I will use it in exactly the same way I

08:32.170 --> 08:33.790
used it in the rest of the course.

08:33.880 --> 08:39.880
So I'll create a components folder in which I can set up my own header button component to have that

08:40.000 --> 08:51.020
reconfigured reusable button component and in that component I import header button from this react

08:51.080 --> 09:02.460
delegation header buttons package we just installed import ionic ins from Expo Wexler icons.

09:02.510 --> 09:07.110
A package which you might want to install in case you are getting errors here with npm install dash

09:07.110 --> 09:18.840
to save and also import the colors constant from the constants folder and they are the colors file and

09:18.840 --> 09:24.870
then here we have a regular component custom header button which receives props which return some J

09:24.880 --> 09:31.260
as X and here a one to return the the header button which we're importing but now we'll just configure

09:31.260 --> 09:32.750
it to our requirements.

09:33.000 --> 09:39.240
First of all by forwarding all props to it and then we can set the icon component to ionic and so that

09:39.270 --> 09:40.480
this is used.

09:40.590 --> 09:47.250
Set the icon size here maybe to 20 free because I think that worked quite well thus far and set the

09:47.250 --> 09:48.870
color to you.

09:48.870 --> 09:57.240
And now I'll need one other import I'll need to import platform from react whoops from react native

09:57.600 --> 09:59.940
because now I want to check the platform here.

10:01.560 --> 10:07.470
And if the platform is Android we'll have a solid background of then I want to use white as I can color

10:07.800 --> 10:10.680
opera wise I use my primary colour.

10:10.740 --> 10:16.080
Now with that the only thing that's left to do is to export does custom header button here and now we

10:16.080 --> 10:20.600
can start using it in the places list screen in there.

10:20.610 --> 10:29.280
Although as before I import Q Ever packages from react navigation header buttons to observe things from

10:29.280 --> 10:36.480
this package and that would be my header buttons and item both needs to be imported and in addition

10:36.480 --> 10:42.810
we can also import our own custom header button now from the components folder and there from this header

10:42.810 --> 10:48.060
button file which we just worked in but with that imported we can change our navigation options here

10:48.060 --> 10:53.880
to be dynamic where we have this function that gives us the NAV data and which then eventually returns

10:54.270 --> 11:00.750
does configuration object because this will then allow us to also bind the button to some function which

11:00.750 --> 11:07.380
we receive why I wrote parents because here I want to add header right to add my head or buttons and

11:07.380 --> 11:12.540
of course does now all the pattern we did many many times wrote this course we added he had her buttons

11:12.540 --> 11:19.560
like this and have to item in there on the header buttons component we can set the header button component

11:19.590 --> 11:27.330
and point our custom header button component here and on the item we now set a title like at place and

11:27.330 --> 11:31.930
we set out I can name here which depends on the platform.

11:32.010 --> 11:39.870
So therefore I will actually import this platform API here from react native and we can check if platform

11:39.960 --> 11:48.090
operating system is Android if that's the case then I want to set this to MDA add our wise to IOW add

11:48.240 --> 11:52.560
which adds add a plus button for the specific platform.

11:52.560 --> 11:58.290
So following the specific look of that platform we also need to add the on press function and there

11:58.290 --> 12:05.160
if we tap on this I simply want to navigate with the navigate method here and that's why we need to

12:05.160 --> 12:11.310
have to stand Nemec function here so that we get access to NAV data and then navigation navigate to

12:11.430 --> 12:19.990
new place and new place here of course is my identifier in the places navigator of this new place screen.

12:20.040 --> 12:24.780
So with that we have a wealth going to that screen and hence if we saved us we should be able to do

12:24.780 --> 12:25.960
that.

12:26.100 --> 12:32.800
Obviously I'm getting an error because in my header button component since I have a react component

12:32.920 --> 12:38.680
in there importing react from react doesn't sound like the worst idea is let's quickly fix that here

12:38.680 --> 12:45.290
and you had her button component but now with that as this reloads we have this plus button and we can

12:45.290 --> 12:51.760
go to the new places screen to the new place screen also here on Android of course.

12:51.980 --> 12:57.680
Now on that new place screen we can therefore also add navigation options to set a title new place screen

12:58.070 --> 13:04.010
navigation options set it to some static object for the moment because we right now don't need this

13:04.010 --> 13:11.210
to be a function we don't need access to the NAV data we just need to set the header title to add lace

13:11.930 --> 13:17.340
and with that if we save it obviously if we go there we see that title in the header.

13:17.540 --> 13:20.440
So this is this basic set here.

13:20.570 --> 13:25.430
Now we can work on that ad place screen to make sure that we well can add a place.
