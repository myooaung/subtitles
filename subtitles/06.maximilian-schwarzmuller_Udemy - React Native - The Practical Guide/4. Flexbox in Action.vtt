WEBVTT

00:02.540 --> 00:05.220
So let's start working on this auth screen,

00:05.220 --> 00:08.060
I will work on it throughout this module,

00:08.070 --> 00:13.080
now I just want to add some elements so that we can play around with them from a styling perspective.

00:14.040 --> 00:20.430
On this auth screen, I guess it makes sense to have some heading where we say please login, maybe something

00:20.430 --> 00:21.610
like that,

00:21.900 --> 00:28.390
then I eventually want to have a button where we can switch between login and sign up,

00:28.440 --> 00:33.690
so here I'll just hard code switch to login but we'll later dynamically change this depending in which

00:33.690 --> 00:39.630
mode we are, then we have our submit button so I'm going to change the title and then I want to have

00:39.690 --> 00:43.430
up to three text inputs, either two text inputs

00:43.470 --> 00:51.240
if we are in login mode just for email and password or three text inputs if we are in sign up mode for

00:51.660 --> 00:55.330
one extra input to also confirm the password.

00:55.380 --> 01:00.620
So for that, I'll first of all also import text input from react native,

01:00.660 --> 01:08.060
now let's add the text input here in our component and the text input is a self-closing element.

01:08.490 --> 01:12.950
Now we can always hook this up and make it work correctly later,

01:12.960 --> 01:23.450
for now I just want to add a placeholder here where I say your email address and then I'll add two more

01:24.260 --> 01:25.400
for now,

01:25.400 --> 01:33.430
the second one should accept the user password and the third one will accept the confirm password.

01:33.500 --> 01:40.910
Now as I said, I will hook up this form later so that we have two-way binding and we also will show different

01:40.910 --> 01:43.110
soft keyboards for different inputs,

01:43.190 --> 01:44.660
all of that will be done later,

01:44.660 --> 01:46.530
now I want to focus on the styling.

01:46.820 --> 01:48.060
Let's save this

01:48.320 --> 01:54.550
and if you turn on life reloading on your applications, you see it works,

01:54.560 --> 02:01.580
we get a warning here on the right that we're missing the onPress hook on our button, we'll add this soon

02:01.740 --> 02:03.590
but here we get our inputs.

02:03.830 --> 02:10.400
Now obviously the styling of these inputs could be improved and the overall styling of the login form

02:10.400 --> 02:14.150
of the authentication page is not where I want it to be.

02:14.510 --> 02:21.000
I want to have my entire login content here centered in the page,

02:21.000 --> 02:26.640
so in the middle so that the user immediately sees it when he looks at my page and of course, I want

02:26.640 --> 02:28.950
to change the way this text looks,

02:28.950 --> 02:32.740
I want to maybe also change the way these inputs look,

02:32.790 --> 02:37.260
I want to have some padding between the edge of my screen and all these elements,

02:37.260 --> 02:39.810
these are all things I want to improve.

02:39.810 --> 02:41.940
Now let's do that step by step,

02:42.390 --> 02:44.940
let's first of all center everything.

02:44.940 --> 02:48.050
How does centering work?

02:48.070 --> 02:52.240
I touched on this earlier in this course, we use flex box for this,

02:52.240 --> 02:59.680
keep in mind all our content here is held by a view and a view is a container which we can style with

02:59.780 --> 03:05.180
flex box where we can lay out the child elements with flex box. 

03:05.200 --> 03:10.480
So for this first of all, let's create a stylesheet here because you learn you should use one if possible,

03:10.630 --> 03:16.540
so let's create a new styles property here below our component code

03:17.010 --> 03:23.520
and that actually is reaching out to stylesheet and calls the create method where we pass a javascript

03:23.520 --> 03:25.970
object configuring our stylesheet

03:26.070 --> 03:28.580
and here I want to have some container property

03:28.820 --> 03:34.550
and regarding the naming of these properties, it's totally up to you but it makes sense to give the wrapping

03:34.560 --> 03:40.830
container a name like container so that if someone else looks at your code, has an easy time finding

03:40.830 --> 03:43.510
out where this style might be applied to.

03:43.670 --> 03:47.400
Let's first of all give this a border color of red,

03:47.430 --> 03:52.740
just to see where this container starts and ends, to see that border,

03:52.740 --> 03:56.460
we also need to set border width to at least one though.

03:56.520 --> 04:03.640
Now let's assign this container to this view by setting the style property there to styles container.

04:03.720 --> 04:05.240
Let's save this

04:05.550 --> 04:07.950
and now if our application reloads,

04:08.180 --> 04:11.330
we reload it manually if doesn't automatically,

04:11.520 --> 04:13.710
you should see this red border.

04:13.710 --> 04:19.020
Now one thing we can immediately see is that our container which contains the entire content of the

04:19.020 --> 04:22.820
auth screen doesn't take the full available space.

04:22.830 --> 04:24.540
Now you learned why that is,

04:24.570 --> 04:32.320
you learned that you need to set one specific style property if you want that behavior.

04:32.470 --> 04:35.180
Now let's first of all inspect this,

04:35.260 --> 04:37.330
you can turn on the inspector,

04:37.330 --> 04:43.360
the cool thing is if react native debugger is attached and you click on there, it also selects the

04:43.360 --> 04:48.610
element here on the right in this component view,

04:48.910 --> 04:52.760
so wherever you click here, it then selects that element here on the right too

04:52.860 --> 04:54.550
so that's pretty convenient,

04:54.610 --> 05:00.430
we turn on the inspector and turn off the inspector now. And I'm interested in that view which is my wrapper

05:00.460 --> 05:02.400
for the auth screen, if

05:02.710 --> 05:04.720
we have a look at the auth screen itself,

05:04.780 --> 05:06.450
it has no style,

05:06.490 --> 05:12.720
the view however has some styling, here you see this is the default styling it assumes

05:13.120 --> 05:15.670
and you see our rules down there.

05:15.670 --> 05:19.350
Now you can click here next to this curly brace to add a new style

05:19.600 --> 05:22.900
and watch what happens if I now enter flex one here.

05:23.170 --> 05:28.500
Now you see suddenly the red border spans the entire screen size,

05:28.540 --> 05:35.680
the reason for this is that flex one basically instructs this view to take all the available space, to

05:35.680 --> 05:37.110
be very precise,

05:37.120 --> 05:44.020
flex one simply tells your priority to get a piece of the available space is one.

05:44.080 --> 05:46.950
If we had a sibling element to this view,

05:47.050 --> 05:49.460
so a sibling in auth screen which we don't

05:49.480 --> 05:56.440
but if we had this and this sibling would also have flex one, then each would get 50% of the

05:56.440 --> 06:02.890
screen because they have the same priority, here it's the only element but previously without flex one,

06:02.980 --> 06:07.770
it had no priority, so it only took what it needs defined by its children.

06:07.840 --> 06:11.900
If you set flex one, it takes what it get sent here with no sibling,

06:11.920 --> 06:14.070
that's actually all the space.

06:14.560 --> 06:20.350
So we need to set flex one to have the full space available because only if we have the full space available

06:20.650 --> 06:22.880
we can position our elements in there

06:22.990 --> 06:28.150
and if I want to center them in the middle of our page, I first of all need to get access to the full

06:28.150 --> 06:29.580
page.

06:29.600 --> 06:36.700
So with that, let's actually remove the border color red, the border width and let's add flex one.

06:36.740 --> 06:38.640
Now let's save this

06:38.810 --> 06:44.440
and if it reloads, it's looks just like before because we haven't added any other meaningful rule.

06:44.810 --> 06:46.600
Let's dive into that again,

06:47.630 --> 06:55.460
so let's expand this until we get this view again and let's add another style, let's play

06:55.460 --> 06:58.780
around with justify content and align items.

06:58.850 --> 07:05.510
Remember the slides I showed you earlier in this course, justify content is used to distribute elements

07:05.630 --> 07:12.120
along the main axis, the main axis is defined by the direction of flex box and the default direction is

07:12.130 --> 07:12.850
column,

07:12.860 --> 07:15.080
so from top to bottom.

07:15.380 --> 07:23.150
So if we add justified content here and set this to center, it should actually be centered in the middle

07:23.150 --> 07:25.250
of the page vertically,

07:25.280 --> 07:28.230
so let's add center without quotation marks

07:28.460 --> 07:31.640
and now our content is centered in the middle of the screen.

07:32.180 --> 07:40.920
You can also see that if I now add flex direction, all camel case because we're not using real css here

07:41.720 --> 07:43.870
and I would set this to row,

07:44.180 --> 07:49.910
it actually is totally messed up because now it's distributing it from left to right. Now the default

07:49.910 --> 07:52.110
which we don't have to set is column

07:52.220 --> 07:55.800
but again we don't have to set this because well, it's the default.

07:55.880 --> 08:02.000
So this is already looking a bit better but it would also be nice to have horizontal centering then

08:02.000 --> 08:02.480
right,

08:03.260 --> 08:06.880
well for this we need to center on the cross axis

08:06.980 --> 08:13.840
and as you learned earlier, you can do this with align items. Align item centers only cross axis

08:13.910 --> 08:20.900
since our axis or our direction is column from top to bottom, the cross axis is from left to right.

08:20.900 --> 08:29.070
So here if we enter center, now we got horizontal centering too and all of a sudden this looks much better.

08:29.210 --> 08:38.510
So let's add these set ups or these styles here, let's set justify content to and here you need quotation

08:38.510 --> 08:44.930
marks to center because otherwise it would try to refer to some variable named center and also align

08:45.050 --> 08:47.450
items to center.

08:47.450 --> 08:53.000
Now if we save both and let it reload, we should have the styling we saw before but now out of the box,

08:53.600 --> 08:58.330
clearly the widths of our inputs aren't awesome, especially on Android

08:58.330 --> 09:04.580
we can see this, it only takes the width it needs to take and it doesn't respect the placeholder for that,

09:04.640 --> 09:07.120
so we will need to do something about that.

09:07.370 --> 09:14.120
But at least we got our flex box positioning done and definitely play around with that to feel very

09:14.120 --> 09:21.200
confident using flex box because it's so important to be aware of how to use it to create nice looking

09:21.290 --> 09:22.820
appealing UIs.
