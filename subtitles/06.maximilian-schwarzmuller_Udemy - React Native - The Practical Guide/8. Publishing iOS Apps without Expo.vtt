WEBVTT

00:02.450 --> 00:09.560
So we saw how we can build and deploy an app with expo in the managed workflow which was pretty convenient.

00:09.560 --> 00:15.770
Now let's say we have an app for example built with the React Native seal I hear I'm not using any native

00:15.770 --> 00:21.650
modules but if I were I would have of course have updated my android and I was configuration files to

00:21.650 --> 00:27.410
request the right permissions and so on and I showed all of that in the non Expo module earlier in the

00:27.410 --> 00:27.830
course.

00:28.130 --> 00:32.870
So now let's say we're happy with the app and we want to publish it to the Apple App Store into Google

00:32.870 --> 00:34.190
Play store.

00:34.190 --> 00:38.900
Now do you officially react native talks are a great place to get started with that they're in the documentation

00:38.930 --> 00:44.660
under a guides you all to find is running on the Vice Guide where you can learn how you build your app

00:45.050 --> 00:50.000
for IWM or Android on the different operating systems you might be working on important.

00:50.000 --> 00:55.190
You can only build for I guess on Mac OS now Linux and Windows don't work because now we're not building

00:55.190 --> 01:01.250
the app in the cloud as we did with Expo but locally on our machine and there Apple has this restriction

01:01.460 --> 01:03.730
that you can only build I apps on a Mac.

01:03.740 --> 01:04.580
It is what it is.

01:05.510 --> 01:12.820
So now what you need now is an apple developer account right now and not necessarily a paid one just

01:12.820 --> 01:13.480
to build the app.

01:13.480 --> 01:17.590
However if you want to build it for the app stores you need a paid one.

01:17.590 --> 01:20.950
As mentioned earlier this module so you should set up such a.

01:20.950 --> 01:27.550
Apple Developer account and then open your project here your eyes project to be precise with X code

01:28.330 --> 01:35.980
there you can click open a number project go into your project folder there to the Iaw folder and there

01:35.980 --> 01:41.560
select is XY workspace folder or file here to open doors with X code.

01:41.620 --> 01:48.940
This opens your project your IOW project which includes your react native code of course in X code no

01:48.990 --> 01:53.810
it's there where you now configure this app where you set up your identifier for example that's this

01:53.870 --> 02:02.910
inverse you are Ella was talking about which could be calm that academy and Dot are n no Expo test something

02:02.910 --> 02:08.330
like this where you set a version numbers which your users will see and your build number which can

02:08.330 --> 02:13.280
simply be a number that you increment here where you should choose automatically manage signing and

02:13.280 --> 02:20.320
where you now need to choose a team which should be shown here if not add an account and there log in

02:20.320 --> 02:26.350
with your Apple I.D. to add your apple developer account as an account here and there often you should

02:26.350 --> 02:31.360
be able to choose your team here which will be required for automatically signing the app which will

02:31.360 --> 02:32.830
then be done by Apple.

02:32.830 --> 02:38.970
So to say you can in general configure your app here of course and prepared for deployment.

02:39.010 --> 02:44.640
And one important configuration is of course related to the icons you want to use in Expo.

02:44.650 --> 02:50.430
We set up the icons conveniently in a configuration and expo generated all the icons for us.

02:50.470 --> 02:52.410
Now it won't work like this.

02:52.480 --> 02:59.650
Now you need to set up these icons on your own and you do this by clicking on this arrow here which

02:59.650 --> 03:06.570
takes you to the assets catalog and there you can now provide icons and you need to provide icons in

03:06.570 --> 03:09.050
different sizes here as you can tell.

03:09.270 --> 03:11.610
Obviously that was a convenient thing by Expo.

03:11.610 --> 03:17.690
It did create these icons for you and you didn't have to manually create all these icons attached however

03:17.690 --> 03:22.550
you find the icons zip file which includes icons you can drag and drop in here.

03:22.550 --> 03:29.740
So that's what all now do and the icons are labeled such that it should be clear what you have to drag

03:29.740 --> 03:35.560
where and with that you got the icons configured.

03:35.750 --> 03:40.790
You also might want to configure the launch screen for that you can expand this folder and there you

03:40.790 --> 03:48.610
find this launch screen CIB file does in the end allows you to customize your long screen there you

03:48.610 --> 03:55.660
can add new widgets to it drag images into a changed text you see here for example and configured to

03:55.660 --> 04:01.920
launch screen in general you can learn more about this in the X code docs of course and once you did

04:01.920 --> 04:09.700
configure all of that you can build your app here for that you can also for example test it on a simulator

04:09.700 --> 04:14.710
first by choosing a simulator where you and then clicking the play button here and this will now build

04:14.710 --> 04:19.920
your app and run it on a simulator and thereafter of course you can also build it for deployment.

04:19.930 --> 04:27.840
Let's just see where design all works it launches it is bundler process which you already saw earlier.

04:27.850 --> 04:33.630
For it is standalone app because of course that's still part of development experience here.

04:33.700 --> 04:42.070
It's still a wreck native app after all which you use for building does native app and now it is succeeded

04:42.100 --> 04:44.140
and it launches the app on a simulator.

04:44.140 --> 04:49.270
Now I'm not too interested in the app there because I will only have a very basic app there which doesn't

04:49.270 --> 04:53.370
do anything fancy but this proves that building works.

04:53.480 --> 04:57.970
Knowing the official docs if you scroll down further still and is running on the Y section you also

04:57.970 --> 05:00.030
learn how to build your app for production.

05:00.520 --> 05:05.510
If it's an on Expo app and there we have got two important things to do.

05:05.530 --> 05:10.900
The first important thing is that in our project you hear by clicking on this folder and then on this

05:10.900 --> 05:20.290
I can hear you expand this folder and then go to the info P list and now there you'll find this app

05:20.290 --> 05:22.820
transport security settings key.

05:22.870 --> 05:29.470
This kind of controls how ISIS controls to which Web pages or web servers your app may talk and by default.

05:29.470 --> 05:35.470
It only allows access to H2 P S servers so SSL Secure in service.

05:35.470 --> 05:39.270
That's a good default but you might have some exceptions which you can add here.

05:39.370 --> 05:44.120
And one exception in the exception domains list is local host.

05:44.180 --> 05:49.450
Now that's required for development because your react native app in the end talks to this development

05:49.450 --> 05:51.680
server here which runs on your local host.

05:51.820 --> 05:55.820
Which is not using SSL normally IAW would block this.

05:55.900 --> 06:01.000
Now to not block it this is the exceptions list to build this for production.

06:01.060 --> 06:02.080
You should remove this.

06:02.080 --> 06:08.230
You can simply clear this key here by removing it with the delete key and that's a that's one thing

06:08.230 --> 06:15.630
you should configure for deployment and then you need to configure such a release scheme for that you'd

06:15.640 --> 06:24.700
go to product scheme added scheme and set this from debug to release here for a run and then close this

06:25.760 --> 06:30.470
with that you can now run product build here to build your app.

06:30.470 --> 06:35.090
And now this is built for release built for production so it's optimized and so on.

06:35.090 --> 06:37.530
So this builds your app now for production.

06:38.720 --> 06:39.980
Now wants this build runs.

06:39.980 --> 06:42.940
Let's make sure we can also upload it to the Apple App Store.

06:42.950 --> 06:48.590
And for this you should go to your Apple Developer account and here you now definitely need a paid account

06:49.550 --> 06:55.250
and there you now need to set up a couple of things you need to go to certificates I.D. and profiles

06:55.250 --> 06:58.370
here and go to identifiers.

06:58.370 --> 07:02.140
And then here add a new app I.D. just here.

07:02.150 --> 07:07.690
The first setting at an app idea and you need to add the app I.D. which is set up in your project.

07:07.700 --> 07:14.240
So the app IDC bundle identifier you find here dead exact identifier needs to be added here you can

07:14.240 --> 07:22.840
add a description R and demo whatever you want but then here you need to add this I.D. Now you can check

07:22.870 --> 07:26.410
any special capabilities your app requires which my app doesn't.

07:26.410 --> 07:31.740
So I don't need to check anything there and then I can continue confirmed as and register.

07:31.750 --> 07:32.680
Now this is required.

07:32.680 --> 07:36.010
Otherwise you won't be able to publish your app.

07:36.040 --> 07:42.510
Now with that I.D. registered you need to go to iTunes Connect and you can simply google for that which

07:42.510 --> 07:48.090
isn't the end the service where you create that store page and where you now in your queue will set

07:48.090 --> 07:57.710
up your app there you can go to my apps and add a new app here by clicking the plus new app here.

07:57.710 --> 08:06.010
By the way you also see the app we built with expo so click new app here I give it a name like r n no

08:06.160 --> 08:08.070
Expo which of course is a beautiful name.

08:08.140 --> 08:11.110
Which you wouldn't really want to use but it's good for us here.

08:11.260 --> 08:17.600
Then choose your language your building your app for choose to bundle I.D. and there choose to I.D..

08:17.620 --> 08:19.210
You just set up.

08:19.360 --> 08:26.060
If it's not showing up yet come back a couple of minutes later it will be there then you can then also

08:26.060 --> 08:32.750
add your own custom identifier which will show up on your invoice as basically ends on our end no Expo

08:32.750 --> 08:39.170
whatever you want and click Create and this now creates the app here in I iTunes Connect.

08:39.260 --> 08:44.750
This is an all where you can manage your app for the app store and set it up set up its pricing and

08:44.750 --> 08:45.910
so on.

08:45.980 --> 08:52.870
Now with all of that done let's wait for our bill to finish here and if it failed like it did for me.

08:52.870 --> 08:59.220
Reason for that is you need to set us to generic IOW device so make sure you have this set.

08:59.220 --> 09:03.810
Also make sure to add on this our end without export test you select your development team that's the

09:03.810 --> 09:05.170
number error I got here.

09:06.150 --> 09:14.510
If you're still getting an error as IDE you press command 1 here in X code click on build settings here

09:14.600 --> 09:17.020
with all these things selected as you see it here.

09:19.930 --> 09:26.170
In the linking section which you'll find if you scroll down a bit and in the debt code stripping part

09:26.180 --> 09:32.180
here under release set this from yes to no.

09:32.200 --> 09:36.280
This is a work around around this era which seems to be related to the automatic tests which are set

09:36.280 --> 09:45.020
up and once it did this tried again run the build one more time and now this should succeed Wednesday's

09:45.020 --> 09:49.760
build exceed that you can go back to product and now the archive option is available.

09:49.850 --> 09:56.570
If you now run this this archives your app which is nothing else than building that bundle which previously

09:56.570 --> 09:59.490
was built on exposed cloud servers.

09:59.810 --> 10:01.340
So let's wait for this to finish.

10:02.490 --> 10:03.430
Once this is done.

10:03.430 --> 10:08.620
You should see your archive for archives as you are and the process more than once here and now here

10:08.620 --> 10:13.660
you could distribute your app to the App Store with the configurations made on iTunes Connect and so

10:13.660 --> 10:15.310
on which has showed earlier.

10:15.360 --> 10:20.890
No I'll not do this here but this is how you would deploy your react native only app without Expo managed.
