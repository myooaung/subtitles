WEBVTT

00:02.380 --> 00:08.420
Let's start with the confirmation dialog here and edit product screen we can simply import the alert

00:08.450 --> 00:16.490
API from React Native which allows us to show an ice alert and then add a new method here maybe we could

00:16.490 --> 00:22.830
all do it in line but to have a little bit more structured code where I have my delete handler.

00:23.020 --> 00:28.600
By the way how you name your functions is totally up to you I just like this handler naming here if

00:28.600 --> 00:35.950
I assign that to my event emitters into J as X code so to say and then there we can call alert dot alert

00:35.980 --> 00:37.690
to show an alert with the title of.

00:37.720 --> 00:38.960
Are you sure.

00:39.880 --> 00:45.670
Message do you really want to delete this item.

00:45.670 --> 00:48.940
And then an array with all the buttons we want to present.

00:48.940 --> 00:58.020
Where to button no one has a text of no and a style of default.

00:58.060 --> 01:02.800
There are only free default styles or reconfigure styles you can choose from and no special handler

01:02.800 --> 01:03.930
on this first button.

01:04.030 --> 01:07.180
Second Button has yes there.

01:07.190 --> 01:10.640
I want to have a style of destructive to mark this as hate.

01:10.640 --> 01:17.900
This will delete something and to on press handler here is Dan in the end holding a function that will

01:17.900 --> 01:20.540
really dispatch to delete action.

01:20.610 --> 01:28.110
So now it's the delete handler which I want to execute when we click on that delete button and therefore

01:28.110 --> 01:30.080
of course I'm in the wrong component I just saw.

01:30.210 --> 01:31.610
Let's cut this.

01:31.800 --> 01:33.740
It's not inside of the edit product screen.

01:33.750 --> 01:35.440
We don't need the alert import there.

01:35.460 --> 01:41.310
It's the user products screen I'm talking about there we need to import alert there we should add this

01:41.700 --> 01:47.380
handler and now the delete handler should be assigned to this delete button here.

01:47.400 --> 01:53.730
So here we can just pointed to the lead handler and this anonymous function can be cut from down there

01:53.980 --> 02:00.790
and can be moved here and replaced this on press handler for this button and now with Dad we should

02:00.790 --> 02:07.320
get this pop up as confirmation dialog before we actually delete something.

02:07.330 --> 02:09.790
So if I click on The Lead now I'm asking if I press.

02:09.790 --> 02:10.210
No.

02:10.210 --> 02:11.640
Nothing happens only for click.

02:11.650 --> 02:16.060
Yes we delete this tiny mistake of course.

02:16.060 --> 02:17.920
Is that the item data we need.

02:20.570 --> 02:21.790
Needs to be available.

02:21.830 --> 02:24.920
So here we forward the idea we want to delete.

02:24.920 --> 02:30.180
So actually for the delete handler we need the idea of the product we're applying this handler to.

02:30.410 --> 02:35.360
So that here I have that idea weight label and that means that when the delete handler is called down

02:35.360 --> 02:37.980
there we need to make sure it gets the idea.

02:38.510 --> 02:40.150
So there are two ways of doing that.

02:40.400 --> 02:46.100
An anonymous function in which we execute delete handler manually and forward item data dot item dot

02:46.100 --> 02:55.000
I.D. or alternative to that pass and delete handler like this but use bind to reconfigure any arguments

02:55.000 --> 03:01.150
dysfunctional get bind always needs value for the this keyword inside of the function will execute there

03:01.150 --> 03:04.170
we can just pass this it does not matter.

03:04.360 --> 03:08.290
But the second argument now is the first argument to delete handler will get.

03:08.620 --> 03:15.640
So here we pass item data dot item dot I.D. now with dad make sure that we can actually press yes and

03:15.640 --> 03:22.530
it will work if we now go back here to admin click delete press yes.

03:22.600 --> 03:27.700
This now really works and if we press know nothing happens yes deletes it.

03:27.700 --> 03:29.020
So that's the first thing.

03:29.230 --> 03:34.450
And to make sure that we navigate back if we save this now we need to go to the edit product screen

03:34.750 --> 03:41.680
and there in our submit handler no matter if we dispatch to update or create product action in the end.

03:41.680 --> 03:51.870
I want to all the code props navigation go back to go back to the previous screen and we now save this

03:53.430 --> 03:58.920
and we go to the admin screen and I do for now submit an empty product

04:01.990 --> 04:07.750
I of course get a warning but this generally works this going back and if I edit a product does all

04:07.750 --> 04:08.890
the works.

04:08.950 --> 04:13.470
So now with this we're done regarding all that input management.

04:13.510 --> 04:18.920
The remaining thing I now want to do before I really finish all of this up is to now I want to optimize

04:18.920 --> 04:20.850
the product item a little bit more.

04:21.040 --> 04:26.800
And the way we're reusing our card look here with the shadow and so on because we're using that in multiple

04:27.040 --> 04:28.270
components.

04:28.270 --> 04:33.940
And if you find yourself using something in multiple components you might always want to think about

04:33.940 --> 04:35.920
whether you can optimize does a bit more.

04:35.980 --> 04:39.370
And indeed here we have optimization potential.

04:39.490 --> 04:42.600
So how can we optimized as though.

04:42.720 --> 04:48.720
Well we could create a separate component here in our UI folder of the components folder which we name

04:49.080 --> 04:55.800
card J.S. where we just store discard look in a card component can be a very simple component in the

04:55.800 --> 05:05.140
end we import react from react here because we need to create a component and we import a view from

05:05.260 --> 05:13.990
react native just like that and now here we create our card component where we simply get our props.

05:14.030 --> 05:21.000
Return some J is X and export this component in the end though we'll also need to set up some styling

05:21.000 --> 05:23.390
because that's the core idea behind this component.

05:23.400 --> 05:30.370
It's all about giving us some reconfigured styles so I'll also add my styles constant with style sheet

05:30.680 --> 05:31.750
dot create.

05:31.770 --> 05:36.710
Down there and now what is the J is X what I want to return here.

05:36.760 --> 05:41.920
Well that's a view a view which will actually wrap whatever we pass in there.

05:41.950 --> 05:46.870
So between the tags of my component so just props children in there.

05:46.930 --> 05:53.690
But now that view can get some default styling here which will named card and Dad should be the styles

05:53.690 --> 05:56.090
with which Abra Y's copy around.

05:56.110 --> 06:01.780
So here are my card style in this card component is exactly what I have here the product item it's does

06:01.780 --> 06:02.880
shadows stuff here.

06:02.900 --> 06:09.540
The elevation the border radius and the background color you can cut all of that and move it into the

06:09.540 --> 06:10.260
card here.

06:11.580 --> 06:16.890
Now to still be able to configure it as a bit I'll actually enhance this and set style to an object

06:16.890 --> 06:27.540
where I merge in my styles card values and any values I get on the style prop here like this.

06:27.540 --> 06:32.970
So now we can even set a style problem we use our card and pass in our own styles that will be merged

06:32.970 --> 06:39.240
together with these default cards styles because this now allows me to use the card here and a product

06:39.300 --> 06:50.780
item for example by importing card from now up one level into the UI folder into the card file and replace

06:51.000 --> 06:52.460
this view here.

06:52.500 --> 06:54.830
Is our view with card.

06:54.860 --> 07:01.410
And of course then for all to replace the closing tag and still parsing my product specifics to alter

07:01.410 --> 07:01.880
here.

07:01.910 --> 07:08.360
So this and the margin this will be merged with the average card looks and everything between the opening

07:08.360 --> 07:11.570
and closing tax of card will just work.

07:11.570 --> 07:15.030
I passed as into my card here with the help of props.

07:15.020 --> 07:18.820
Children notice same for the order item there.

07:18.830 --> 07:25.280
We just need to import card from and now go into the UI folder to card here.

07:26.240 --> 07:29.690
And then use card instead of that view that our view here.

07:29.700 --> 07:34.570
Replace it with a card and get rid of these card styles here.

07:34.590 --> 07:39.330
The shadow stuff the elevation border radius and background color and only keep the special stylus you

07:39.330 --> 07:45.640
want to merge in and now the last thing the last place where we can use this is the card screen there.

07:45.660 --> 07:49.440
I also have my summary which uses these card styles.

07:49.770 --> 07:56.870
Well again we can import the card component from the components folder.

07:56.920 --> 08:04.930
The UI folder there in there from the card J.S. file and now use the card component instead of view

08:05.320 --> 08:07.290
in the place where we want these card styles.

08:07.300 --> 08:11.380
So here that would be the view which had the summary styles.

08:11.380 --> 08:16.590
I'll replace this with card and down at the summary styles.

08:16.650 --> 08:22.170
We keep everything that specific to this screen or to this component but we can't get rid of the shadow

08:22.170 --> 08:27.260
color had a radius elevation border radius background color that can all be removed.

08:27.290 --> 08:32.480
Now let's save that and you will see that of course the app still works and looks the same way as it

08:32.480 --> 08:33.800
did before.

08:34.630 --> 08:41.320
If I add this to the card for example that ordered this and I have a look at my orders it all looks

08:41.320 --> 08:48.760
the way it did before but now it does so with a little bit of a more optimal code where we actually

08:48.760 --> 08:53.610
reuse our styles and have a separate presentational component for them.

08:53.650 --> 08:59.170
So did our Robert components can be a bit leaner and we don't repeat ourselves as often when setting

08:59.170 --> 09:05.710
up the card look and no advantages that we can't miss type if we set schedule radius to eight and one

09:05.710 --> 09:11.220
component and 10 in a number then our app might look slightly inconsistent.

09:11.260 --> 09:17.830
We are white this by having some central styling focused components which set up these core styles which

09:17.830 --> 09:20.410
we then use in our components as we're doing it here.
