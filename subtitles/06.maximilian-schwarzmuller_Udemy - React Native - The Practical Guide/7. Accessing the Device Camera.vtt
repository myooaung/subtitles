WEBVTT

00:02.100 --> 00:07.110
Now this week native application is built with the help of expo as you know now as I mentioned at the

00:07.110 --> 00:12.690
beginning of the course this still is a regular React Native application day for Expo.

00:12.690 --> 00:19.170
Just as an extra wrapper which provides a lot of convenience features out of the box that makes building

00:19.170 --> 00:20.820
this app easier.

00:20.820 --> 00:27.770
And it's like a shell app in which our app runs which therefore makes tapping into a lot of native devise

00:27.780 --> 00:31.860
functional is easier and especially easier to setup.

00:31.860 --> 00:37.380
Now as I also mentioned at the beginning of this module in a separate module I will show you how you

00:37.380 --> 00:40.590
can add native device features to non Expo apps.

00:40.890 --> 00:46.170
But actually if you don't have a reason for not using expo I would strongly recommend that you do use

00:46.170 --> 00:53.400
it because Expo if you check their docs has a lot of built in features and a lot of built in native

00:53.400 --> 00:54.570
modules you can use.

00:54.570 --> 00:56.460
So native device features you can easily add.

00:57.090 --> 01:01.620
And you see a full list here by going to the docs and there to the API reference.

01:01.620 --> 01:07.650
Here you see a bunch of things you can add to your app and these are mostly native device functionalities

01:08.070 --> 01:11.220
which are all provided by Expo out of the box.

01:11.340 --> 01:16.770
So you'll still need to install something but you'll need to do no manual configuration.

01:16.770 --> 01:23.700
And as you'll see in the building an app without Expo module there is quite some configuration you might

01:23.790 --> 01:30.270
need to do if you're adding native modules native device feature packages to a non Expo app.

01:30.270 --> 01:32.560
So this is really sweet here.

01:32.650 --> 01:38.360
Now I want to use a camera and indeed there is a camera package which you can add.

01:38.610 --> 01:42.510
We could actually use that to access the device camera.

01:42.510 --> 01:43.620
This is perfect.

01:43.620 --> 01:49.620
If you need to build an application dad really needs to do a lot with the camera.

01:49.620 --> 01:55.440
If you're building like like Instagram like an application where you really want to control the entire

01:55.440 --> 02:00.760
camera screen and the entire camera flow it's actually not what I want to do here.

02:00.780 --> 02:02.960
I want to use the regular device camera.

02:02.970 --> 02:04.660
Don't need anything special there.

02:04.740 --> 02:08.150
I just care about getting an image which the user can take.

02:08.230 --> 02:13.620
And for Dad we actually get the image picture does all allows us to use the device camera but it doesn't

02:13.620 --> 02:16.200
allow us to customize the camera that much.

02:16.200 --> 02:18.450
But that's exactly what I need here.

02:18.450 --> 02:25.050
Now all we need to do to get access to it is run this expo install command which by the way is like

02:25.170 --> 02:30.750
npm install just that it makes sure that it installs a version of the package that is guaranteed to

02:30.750 --> 02:38.070
work with our specific version of Expo we're using in this app so I'll just copy this command.

02:38.090 --> 02:45.530
And then in this project we can run Expo install Expo image picker hit enter and this will now install

02:45.530 --> 02:49.580
this package with npm install behind the scenes does what it does here.

02:49.610 --> 02:55.880
Justin we're networking that fits our expo SDK where we're using in this project and this will now install

02:55.880 --> 02:58.190
it and that's it.

02:58.190 --> 03:00.410
No extra configuration is needed.

03:00.410 --> 03:02.800
We don't need to touch any config file.

03:02.810 --> 03:04.570
We don't need to do anything else.

03:04.640 --> 03:07.970
This make sure that we can use this functionality.

03:07.970 --> 03:09.690
And that's of course very easy.

03:09.770 --> 03:15.280
With that we can start using it and want to start using it here on the new place screen where we have

03:15.350 --> 03:17.270
text input right there.

03:17.270 --> 03:22.480
I also want to now add a button which to use you can press to open up the camera.

03:22.490 --> 03:27.680
Now of course for all these native device features and all of the many features we of course can't cover

03:27.680 --> 03:32.660
in this course you always learn how you may use them here in your official Expo dog stare you learn

03:32.660 --> 03:38.260
which methods and properties you can access to air you find some short examples for many packages.

03:38.300 --> 03:43.220
So that's definitely something you should check out for the camera of course you can also follow along

03:43.220 --> 03:46.920
because well well use it to gather here to take a picture.

03:46.970 --> 03:54.830
I'll actually create a new component image selector dot Che as you can name it whatever you want in

03:54.830 --> 04:05.810
which I import react from react and where I am or a view and a button and also a text from react native.

04:06.290 --> 04:11.710
And also the style sheet of course because I want to style my image picker.

04:11.870 --> 04:16.130
Let's actually name it image picker I like that my image picker component.

04:16.790 --> 04:23.570
So you're image picker is then a regular component of course where I want to set up some styles with

04:23.580 --> 04:31.290
the style sheet create method and where I in the end export the image picker component.

04:31.310 --> 04:37.510
Now what's going to happen here in the image picker component in the end in here.

04:37.780 --> 04:44.750
I'll return a view which should then hold a number of you where I can display a preview of the image.

04:44.770 --> 04:50.500
So in there I want to have the text component where I say no image picked yet which is my fallback content

04:50.530 --> 04:52.840
if well no image was picked yet.

04:52.930 --> 04:54.920
Otherwise I'll display an image.

04:54.940 --> 04:59.700
So we'll all need to import the image component from reactive and below that view.

04:59.710 --> 05:09.180
I'll add a button with a title of take image where I want to set the color to colors dot primaries over

05:09.190 --> 05:17.410
dad make sure you import that color is constant and upon a press I well want to open up the camera and

05:17.500 --> 05:27.530
display it to the user so I'll also add a constant here take image handler and that's a function which

05:27.530 --> 05:29.480
should open up the camera.

05:29.480 --> 05:33.140
And that's the functional bind to this button.

05:33.170 --> 05:42.470
Now some styling would be nice all that out of you all add a style of image picker on this interview

05:42.800 --> 05:45.860
which displays a preview of my image.

05:45.860 --> 05:55.020
I'll add a style of image preview then this texture could all be styled but I actually need no special

05:55.020 --> 06:02.910
style there and of course I also want to output an image here and I'll soon add a if else condition

06:02.910 --> 06:05.120
to only display Uber to text or to image.

06:05.270 --> 06:09.030
And this should also get some style of maybe just image.

06:09.030 --> 06:13.620
So now we have free style identifiers which we need to add to the style sheet.

06:13.890 --> 06:17.440
Get the image picker for the overall component.

06:17.610 --> 06:22.440
Get the image preview and then we got the image itself.

06:22.440 --> 06:28.560
The image itself is simple there I just want to set a width of 100 percent and a height of 100 percent

06:28.560 --> 06:32.670
so that it takes the full with the height of the surrounding preview container.

06:32.670 --> 06:36.750
That container then can of course be configured however you want to configure it.

06:36.870 --> 06:41.550
I'll give it a width of 100 percent and a height of 200 pixels.

06:41.550 --> 06:47.880
But of course you can change that or calculate it dynamically with the dimensions API add a margin to

06:47.880 --> 06:55.400
the bottom of 10 and make sure that my placeholder text would actually be centered by adding justify

06:55.400 --> 06:59.470
a content center and a line items center here.

06:59.730 --> 07:08.460
And besides dead I also will add a border year with border color light gray color and border width of

07:08.460 --> 07:09.500
one.

07:09.720 --> 07:15.270
Now for the image picker component component in general all just set this to a line items centered to

07:15.270 --> 07:19.020
make sure that all the items are centered horizontally.

07:19.080 --> 07:22.910
But now we're all here to really open the device camera right.

07:23.010 --> 07:28.680
So before we do anything else here regarding the preview ends on let's make sure that here in detail

07:28.700 --> 07:40.720
take image handler we do actually open up the camera and for that let's import everything as image picker

07:41.500 --> 07:48.460
from export image pictures from this package you just installed now.

07:48.490 --> 07:54.360
Since I used image picker here and all over the component will have a name clash so I'll name this iron

07:54.390 --> 07:59.860
Jeep picker here just to a white horse named clash which would otherwise cause problems.

07:59.920 --> 08:02.910
Also change changed here in the export of course.

08:02.920 --> 08:06.610
So now with the image picker imported here we can use it here.

08:06.610 --> 08:07.700
Image picker.

08:07.840 --> 08:10.930
And there we can call launch camera async.

08:10.960 --> 08:13.810
You can also open the gallery instead if you wanted to.

08:13.810 --> 08:18.000
But here all call launch camera async.

08:18.140 --> 08:25.070
Now this will open up the device camera and the async part here kind of implies that this so is an async

08:25.070 --> 08:26.120
operation.

08:26.120 --> 08:31.550
Indeed this does return a promise which makes sense because it opens to camera and we don't know when

08:31.550 --> 08:33.740
the user will be done taking the image.

08:33.740 --> 08:39.920
So it will then just register a function which it should execute once the user is done and resolve the

08:39.920 --> 08:44.930
promise to execute that function well once that happens once the user is done or although of course

08:44.930 --> 08:51.400
once he was or cancels we can handle all of that and the result and so on later for now let's see whether

08:51.400 --> 08:57.450
that works and for that let's include the image picker component in the new place screen.

08:57.490 --> 09:03.670
So there we can import Image picker and here of course we can use that name because we're not using

09:03.670 --> 09:10.960
the image picker package in here import that from components from the image picker component and add

09:10.990 --> 09:17.780
this image picker here below our text input as a self closing component like this.

09:17.800 --> 09:22.300
Now if we save that let's have a look here.

09:22.320 --> 09:27.720
That text is on that's not positioned properly we don't need to worry about that right now let's instead

09:27.720 --> 09:35.930
press take image and what you'll see is that nothing happens but then I get a warning missing camera

09:35.960 --> 09:45.360
or camera roll permission on Android if I try it dare I ask whether I want to grant permissions I need

09:45.360 --> 09:51.240
to press allow here with that the camera does open so that's good.

09:51.240 --> 09:52.450
It generally works.

09:52.470 --> 09:56.790
I can use it I can press this button they offer and then confirm the image I took.

09:57.090 --> 10:04.440
But on ISIS it does not work and why is that the case well on IAW we got a permission error here.

10:04.480 --> 10:05.260
Right.

10:05.320 --> 10:10.810
And that simply happens because permissions are important but they work differently on ISIS and Android

10:11.500 --> 10:12.100
on Android.

10:12.100 --> 10:18.600
You also set up permissions in advance and since we're using this expo application where Expo provides

10:18.600 --> 10:26.440
this rapper Expo actually does all this permissions set up and requesting for us for I the permission

10:26.440 --> 10:28.310
system works a bit differently.

10:28.360 --> 10:34.390
You don't really set it up such that you have a conflict file where you define all permissions in advance

10:34.390 --> 10:34.900
and that's it.

10:34.900 --> 10:38.540
Instead you have to ask for permission at runtime.

10:38.590 --> 10:43.040
Side note by the way in some versions of Android you also now should do that.

10:43.210 --> 10:49.600
Still there expo as you see does it for use for Android it kind of works like that on I guess it doesn't.

10:49.600 --> 10:56.050
You need to ask the user for a permission to access the camera and that's simply something we need to

10:56.050 --> 10:59.890
do here and we can do it with the help of a never Expo package.

10:59.890 --> 11:02.680
And that is the permissions package.

11:02.710 --> 11:08.890
You also need to install that with disk command here into your project so that you can ask the user

11:08.890 --> 11:10.230
for permissions.

11:10.420 --> 11:12.640
So let's do this here in the project.

11:12.640 --> 11:19.570
Let's run Expo install export permissions which again is just as wrapper around NPM install to install

11:19.570 --> 11:26.050
the permissions for this project or to install this package where it is project and then in the image

11:26.050 --> 11:33.580
picker before we try launching the camera and opening the camera we'll need to ask for permissions for

11:33.580 --> 11:41.260
that all actually add a new constant here get or verify pur missions.

11:41.430 --> 11:47.310
And this is a function that holds a function which will use this newly added permissions package.

11:47.310 --> 11:52.050
So here I input everything ask permissions from Expo permissions.

11:52.050 --> 11:55.280
So the same kind of import as we have it for the image picker.

11:55.590 --> 12:00.420
And then there we can use permissions and ask asynchronously.

12:00.420 --> 12:06.270
Again that's an async task which returns a promise because this will open up a prompt and before the

12:06.270 --> 12:08.810
user has chosen answer nothing will happen.

12:08.820 --> 12:14.760
So therefore we have the promise which resolves or is rejected once to use or confirmed or declined

12:16.560 --> 12:20.090
so here we then need to be more specific about which permission we need though.

12:20.100 --> 12:26.940
So we pass something to ask async and that's a constant we get from the permissions object we're importing

12:26.940 --> 12:27.270
here.

12:27.660 --> 12:33.630
So if the dot notation here we can access different kinds of permissions and here all these capitalized

12:33.690 --> 12:36.660
names are the different permissions you can't ask for.

12:36.660 --> 12:41.660
Now here we need the camera permission because we want to access the camera.

12:41.710 --> 12:46.340
He wanted to access to gallery that would be the camera roll permission by the way.

12:47.850 --> 12:49.850
Now I'll go for a camera here.

12:50.700 --> 12:54.390
And as I said This returns a promise I want he was async await here.

12:54.420 --> 13:00.410
Hence I can add async here in front of the function and then await this and get the result and stored

13:00.440 --> 13:01.500
in a constant.

13:01.500 --> 13:06.470
The alternative to that would be using then and catch on this.

13:06.780 --> 13:14.010
And there we now can check if result dot status is not equal to granted which means the user declined.

13:14.010 --> 13:16.210
The user did not grant permissions.

13:16.290 --> 13:18.770
In that case we can't continue.

13:18.780 --> 13:25.590
So here I'll actually throw an alert then so import alert from React Native and throw an alert where

13:25.590 --> 13:40.420
I say alert dot alert insufficient permissions you need two grand camera app permissions to use this

13:40.480 --> 13:42.890
app or any output you want to show.

13:43.000 --> 13:49.690
And then I'll add one button here where I say OK now the user will need to change the permissions in

13:49.690 --> 13:55.000
these system settings after declining them anyways so we can't ask for permissions again here once they

13:55.000 --> 13:56.950
were declined.

13:56.950 --> 14:02.950
So here I want to return false because it's hard to verify permissions function and I want to return

14:02.950 --> 14:06.790
False if the user kind of didn't grant us permissions.

14:06.790 --> 14:10.080
I return true otherwise because now we know we have permissions.

14:10.090 --> 14:14.920
By the way if we call this function multiple times and the user did already grant permissions in the

14:14.920 --> 14:20.050
past the user will not be presented with this prompt again the same by the wave.

14:20.050 --> 14:27.880
The user declined in both cases D result is stored automatically by ISIS and dysfunction will just return

14:27.880 --> 14:33.400
true or false depending on whether the user denied or granted access in the past.

14:33.400 --> 14:37.350
So verify permissions is now simply a function which we need to call in to take.

14:37.350 --> 14:40.590
Image handler before we try to use the camera.

14:40.780 --> 14:46.600
So here I also want to use async await because verify permissions of course is a function that returns

14:46.660 --> 14:47.600
a promise.

14:47.770 --> 14:55.080
So I will await this and store to resolve which all stored content named has permission.

14:56.100 --> 15:01.020
Because this is either true or false depending on whether the user granted permissions or not.

15:01.020 --> 15:05.580
Now if this is false so if it's not true I'll just return here.

15:05.580 --> 15:11.100
I won't continue I won't open a camera because I'll not be allowed to do that anyways so we just can't

15:11.100 --> 15:11.580
continue.

15:11.580 --> 15:12.360
That's the thing.

15:13.500 --> 15:17.910
Otherwise we can continue and now we should be able to launch a camera on ISIS as well.

15:17.940 --> 15:18.810
So let's give it a try.

15:18.810 --> 15:19.720
Let's save that.

15:19.830 --> 15:25.750
And now with that changed I'll actually uninstall expo here to make sure dad regarding the permissions

15:25.750 --> 15:29.530
I granted their IDs back to the initial state.

15:29.640 --> 15:33.860
You probably don't need to do that if you never granted any permissions in your expo.

15:33.900 --> 15:39.810
But if you played around with permissions and native packages before you should uninstall and then reinstall

15:39.810 --> 15:44.870
the expo app by again running your app on IAW by pressing ie in the console down there to make sure

15:44.890 --> 15:47.910
that all these permissions are reset.

15:47.910 --> 15:53.220
So now if we go through the new play screen and take click take image I'm asked whether I want to grant

15:53.490 --> 16:00.120
access to the camera and here I can click OK and now we still get that error.

16:01.490 --> 16:07.420
Now the only reason for that is that even though we're trying to access the camera here there's actually

16:07.420 --> 16:12.450
and that's just something got an overdose package requires permissions for the full camera roll.

16:12.450 --> 16:16.020
So let's change this to ask for permissions to the camera roll here.

16:22.830 --> 16:25.880
With that go back and click take image.

16:25.880 --> 16:32.550
Now I'm asking for a one to access allow access to photos and now I would like yes I get camera and

16:32.560 --> 16:37.710
all the way to the simulator which now is a different era and is pretty clear regarding what's the issue.

16:37.780 --> 16:43.510
The IAW simulator simply doesn't have a camera so we'll continue on Android from now on but of course

16:43.510 --> 16:47.380
you can test us on a real iPhone to see that there.

16:47.380 --> 16:54.250
It also does work if you dare scan your expo barcode with the expo app and run the app there as you

16:54.250 --> 16:56.000
saw it at the beginning of the course.

16:56.050 --> 17:02.020
You can take images with a real phone and I'll all demonstrate the finished app at the end of this module

17:02.200 --> 17:05.750
on both Iaw and Android devices on real devices.

17:05.890 --> 17:10.600
So for the moment I'll focus on Android and they are of course we were already able to open this.

17:10.690 --> 17:18.530
I'm again ask here but now I can open this and take an image that's of course nice but taking the image

17:18.530 --> 17:20.490
like this is not everything I want to do.

17:20.570 --> 17:24.590
I also want you able to configure how I take it and I want to be able to use it.
