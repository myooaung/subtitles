WEBVTT

00:02.390 --> 00:05.370
In the last lectures we set up react native navigation,

00:05.390 --> 00:11.570
now we've got a broken app where we just see a splash screen. That's normal because react native navigation

00:11.720 --> 00:16.300
has its own way of rendering screens, well to the screen.

00:16.760 --> 00:24.680
It consists of two main parts, two main things we have to do, we have to register some screens and then

00:24.740 --> 00:32.060
we have to start an app so to say and that can be confusing because we can't even start an app if we already

00:32.060 --> 00:33.260
have a running one

00:33.260 --> 00:39.890
but an app simply means you have to tell react native navigation what to display, you programmatically

00:39.890 --> 00:47.440
load something, you no longer declare your starting component as we previously did in our index file.

00:47.480 --> 00:50.050
So why don't we do that?

00:50.330 --> 00:51.560
Let's make it simple,

00:51.740 --> 00:59.340
let's simply remove all that redux related code from our index.android file,

01:00.140 --> 01:02.290
don't need the provider in there anymore,

01:02.720 --> 01:08.700
let's just import our app here and let's render app again.

01:08.770 --> 01:14.300
This is the setup we had earlier in this course and I'm going to copy this and paste it into my iOS

01:14.320 --> 01:16.940
file too. Now app

01:16.940 --> 01:22.120
on the other hand is also not what we can load, app is our app container,

01:22.160 --> 01:29.300
now what I will do is in my source folder, I'll create a new folder which I'll name screens,

01:29.390 --> 01:32.840
screens will just be components but components

01:32.840 --> 01:35.600
we load through navigation not components

01:35.600 --> 01:43.040
we include as part of our jsx code. And there, I want to start this application with an authentication

01:43.040 --> 01:49.350
screen where the user has to sign up or sign in, we'll add this functionality later in the course,

01:49.370 --> 01:51.480
I already want to add the screen.

01:51.740 --> 01:57.250
So I'll add a new subfolder in screens and I'll just name it auth and in there I'll add an Auth.js

01:57.290 --> 01:59.710
file, my authentication screen.

02:00.830 --> 02:04.220
Now screens basically are just containers,

02:04.220 --> 02:09.650
so first of all, they are react components and typically they are stateful components,

02:09.770 --> 02:14.210
so in a web based app, we would have called them containers and in web based apps,

02:14.210 --> 02:17.610
screens are typically what you would have loaded with the router.

02:17.960 --> 02:24.440
So here, I will simply import react and component because I plan on creating a class based component

02:25.010 --> 02:30.660
from react and then I create my class and I'll name it auth screen, that's optional,

02:30.680 --> 02:32.320
you could name it just auth

02:32.360 --> 02:36.020
but since it represents a screen here, I want to name it as such.

02:36.350 --> 02:39.230
So then I extend my component here,

02:39.510 --> 02:41.250
I have a render function,

02:41.300 --> 02:44.850
so this is just a normal react component, that's important

02:45.110 --> 02:50.310
and then I export as a default, auth screen just like that.

02:50.630 --> 02:54.870
Now this auth screen will be brand new,

02:54.950 --> 02:57.930
I won't reuse an existing component for that,

02:57.950 --> 03:04.140
we will rewrite quite a lot of our application to be honest and just to see how we can load it,

03:04.190 --> 03:14.750
let's start very simple, let's simply import a view and a text from react native and let's render that.

03:14.990 --> 03:24.350
So I'll render a view here and we might view text, I'll output a text where I say auth screen and we'll work on

03:24.350 --> 03:28.870
the content of that screen later but for now, I just want to hear something on the screen

03:29.450 --> 03:31.570
and that's text I'll have.

03:31.610 --> 03:39.890
So this is my auth screen and the goal now is to load this through react native navigation, to achieve

03:39.920 --> 03:40.690
this,

03:40.940 --> 03:51.460
I'm actually going to go to my app.js file and remove all the code that's in there,

03:51.500 --> 03:53.650
yep it's all gone now.

03:53.720 --> 03:57.620
We as I said, we'll rewrite a lot of parts of our application,

03:57.620 --> 04:02.910
now we're getting serious and we're diving into our well, our app as it should look at the end,

04:02.960 --> 04:07.730
so we're going to rewrite a lot of that. In app.js

04:07.760 --> 04:08.420
.

04:08.570 --> 04:11.870
I won't render any component,

04:12.080 --> 04:19.460
instead here I will do the two things I mentioned, register screens and start an application for react

04:19.460 --> 04:21.570
native navigation.

04:21.560 --> 04:29.960
Therefore I first of all will import something from react native navigation and that something is an

04:29.960 --> 04:35.160
object called navigation with a capital N though.

04:35.180 --> 04:41.210
Now the first step is to as I said, register some screens because when using react native navigation,

04:41.540 --> 04:48.310
we load screens by an ID which we assign and we can only load screens which we registered in advance,

04:48.320 --> 04:50.670
so before we try to load them basically.

04:51.110 --> 04:55.430
So therefore here I want to do just that with navigation

04:55.430 --> 04:59.480
and then there is a register component method I can call.

04:59.480 --> 05:07.380
Now one important thing, you have to register a component before you can load it through react native navigation,

05:07.400 --> 05:09.490
you can't load other components,

05:09.680 --> 05:16.040
you can load other components as part of the jsx code of the screens you're loading but you can't

05:16.040 --> 05:19.800
load them directly through react native navigation,

05:19.820 --> 05:22.810
so we want to register a new component here,

05:22.880 --> 05:28.790
so a component which we can load from navigation. Let's import it, I'll name it auth screen and import it

05:28.790 --> 05:32.650
from source screens auth,

05:32.780 --> 05:40.600
so from that file. The register component method we're calling here takes at least two arguments,

05:41.700 --> 05:45.550
the first argument is a unique identifier of that screen

05:45.750 --> 05:47.310
and you can choose any you want,

05:47.400 --> 05:48.970
just make sure it's unique,

05:49.020 --> 05:55.170
I'm going to use awesome-places.AuthScreen and that's a typical pattern,

05:55.170 --> 06:01.050
you have something like your app name then a dot and then the screen name and this should be unique.

06:01.830 --> 06:05.140
The second argument here is a function,

06:05.490 --> 06:11.260
so here this is an arrow function in my case where you simply return the auth screen,

06:11.520 --> 06:18.090
it's essentially the function react native navigation will execute when it actually needs to load your

06:18.090 --> 06:18.820
screen,

06:19.080 --> 06:26.670
you might recall this pattern from the index.js file where you also executed this code

06:27.320 --> 06:31.200
as a function here for registering a component.

06:31.240 --> 06:39.860
So back in our app.js file, we registered our component here, navigation register a component,

06:39.960 --> 06:47.910
the next step is to start an app and again, this can be confusing the app of course has started, this is simply

06:47.910 --> 06:54.720
an app for react native navigation so to say. Here when you visit react native navigation, you can

06:54.720 --> 06:59.910
visit the top level API guide and there you find two different ways of starting an app,

07:00.060 --> 07:05.820
a tab based app so an application with tabs at the bottom or a single screen app where the full screen

07:05.820 --> 07:07.520
is just one screen.

07:07.530 --> 07:09.540
It's what I want to use for the auth screen,

07:09.630 --> 07:11.550 
we'll also implement tabs later,

07:11.580 --> 07:16.220
but obviously, the auth screen should be one single full screen screen.

07:17.030 --> 07:26.480
For that I'll reach out to navigation and there, I'll start a single screen app, so execute this command.

07:27.460 --> 07:33.020
Now as you see, there are a lot of options you can pass through it, definitely read through them and style it and configure

07:33.020 --> 07:35.380
it whichever way you want to use it,

07:35.390 --> 07:42.740
I'll use a very basic set up here so I will execute this method, pass a javascript object and the one

07:42.740 --> 07:48.850
thing we definitely have to pass is the screen configuration where we say which screen to load.

07:48.980 --> 07:55.590
Now screen just is another javascript object where you configure which screen to load and which title

07:55.590 --> 07:58.130
it has in the nav bar and so on.

07:58.130 --> 08:03.740
So inside screen, there is another screen property and here, you use your unique identifier,

08:03.740 --> 08:06.600
so in this case of the only screen we have

08:07.130 --> 08:11.570
and then I'll also add a title property here and say login,

08:11.570 --> 08:18.250
so this should be displayed in the nav bar which will automatically be added by this library.

08:18.260 --> 08:21.360
Now with that we got everything in place,

08:21.440 --> 08:22.880
how do we proceed?

08:23.210 --> 08:25.100
Super simple, let's go back to index.ios,

08:25.100 --> 08:31.240
we no longer need to use app registry, react native navigation will do that for us,

08:31.340 --> 08:33.030
we just need to import app

08:33.230 --> 08:36.180
and of course, we could have run that code in that file for this reason

08:36.320 --> 08:40.870
but since we have two different entry points, to not duplicate our code, I outsourced it.

08:41.180 --> 08:43.590
So we just import app here

08:43.820 --> 08:47.250
and why is this enough, why don't we have to do anything else?

08:47.450 --> 08:53.570
Because in app, we instantly run all our code and we execute this code which will just load a screen.

08:54.410 --> 09:01.160
So with that, make sure to save all files and then if you reload your applications, already worked here for

09:01.160 --> 09:01.750
iOS,

09:01.760 --> 09:02.750
we see the auth screen,

09:02.780 --> 09:06.310
it's great, for Android it seems to be stuck,

09:07.700 --> 09:12.510
so simply let's clear it here and let's try restarting the app.

09:12.570 --> 09:15.490
It still doesn't like you, try rebuilding it

09:15.820 --> 09:18.310
and you should eventually also see auth screen there

09:18.310 --> 09:23.860
and as you see, you get this nav bar with login for free in the respective style of the platform you're

09:23.860 --> 09:24.780
running this on,

09:24.880 --> 09:30.310
so that's even more than you get from most native components, you get styling which adapts to the platform

09:30.310 --> 09:31.030
you're running it on,

09:31.030 --> 09:32.180
great.

09:32.230 --> 09:34.130
So we started a single screen app,

09:34.150 --> 09:36.210
we have a single screen,

09:36.310 --> 09:41.560
now obviously we could continue working on the auth screen but I want to postpone this and dive deeper

09:41.560 --> 09:42.980
into navigation,

09:43.210 --> 09:49.600
so let's now see how we can leave that screen to move on in the app and possibly go to a tab based navigation

09:49.600 --> 09:51.990
once we did successfully login.

09:52.000 --> 09:55.020
So let's see how that works in the next lectures.
