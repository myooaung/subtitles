WEBVTT

00:02.160 --> 00:07.040
So let's work on the orders screen now and output more than just this boring text.

00:07.040 --> 00:12.390
Now just as with the card screen and the products overview screen I want a more complex order item and

00:12.390 --> 00:17.970
deal for all create a separate order item component in the components folder and there in a shop folder.

00:18.000 --> 00:20.550
As always it's up to you whether you also do that.

00:20.550 --> 00:26.420
But since this will be an not a super small component I prefer having it in a separate file.

00:26.550 --> 00:32.880
So important react from react here and unsurprisingly of course import a bunch of things from React

00:32.880 --> 00:39.660
Native and that would be the view text style sheet since we'll certainly set up some styles as well

00:39.990 --> 00:47.100
and also button because I also want to be able to expand and order so that we don't always see all the

00:47.100 --> 00:54.200
items that are part of the order but that we can view them if we wish to notice that we can create our

00:54.290 --> 01:00.710
order item constant here so that will be the component itself which receives props and then in the end

01:00.740 --> 01:08.460
will have its body here and returns and J as X code and need a stylus object here with style sheet create

01:08.520 --> 01:13.990
like this and all the export order item as a default.

01:14.070 --> 01:16.460
Now how should an order item look like.

01:16.470 --> 01:23.280
Now as always it's up to you but I'll work with a view here and my idea is that I always show like The

01:23.280 --> 01:29.880
total amount of that order and the date and then show Details button which we can press to view the

01:29.880 --> 01:35.130
individual items that are part of the order and for these items I'll actually use the card item component

01:35.130 --> 01:39.620
here because I wonder rendered the exact same items as a display in a cart.

01:39.690 --> 01:46.190
So we'll actually import card item from the card item component and reuse that component here.

01:46.380 --> 01:48.400
Back to Dad Jay has X code though.

01:48.540 --> 01:54.110
So we have a wrapping view around our entire order object our entire order entry here.

01:54.270 --> 01:58.980
Now in there I want to have a first row and therefore I'll use another number view so that we can styled

01:58.980 --> 02:06.660
is appropriately which should hold some text that displays our total so to some of that order let's

02:06.660 --> 02:13.470
say in the number text where I show the date and D should be in the same row with space in between them

02:14.370 --> 02:20.660
below them as I mentioned should be a button which we can press to show the details which then show

02:20.660 --> 02:25.440
us all the items that are a part of that order now.

02:25.470 --> 02:32.040
With that setup of course it's clear that the amount here should be received with the help of props.

02:32.040 --> 02:38.100
So there I expect to get an amount prop and I will call to fixed to to output the appropriate amount

02:38.100 --> 02:40.350
of decimal places for the date.

02:40.350 --> 02:49.360
I want to output props date here so that we have a date we can output for the styling overall here.

02:49.380 --> 02:55.860
I want to have a order item style assignments so that we can stall the whole order and then there we

02:55.860 --> 03:00.380
need like let's say stalls summaries so that we can styled this row.

03:00.450 --> 03:09.240
And regarding the text here this should have a style of let's say total amount as always d style identifiers

03:09.300 --> 03:10.290
are up to you.

03:10.290 --> 03:12.720
Here I want to have a date style

03:16.000 --> 03:21.640
the button also should get its own color which I'll get from the colors content therefore does import

03:21.640 --> 03:22.830
needs to be added in there.

03:22.840 --> 03:26.130
I'll use my primary color OK.

03:26.610 --> 03:27.430
So that's it for now.

03:27.450 --> 03:29.160
Welcome back to the details in a second.

03:29.160 --> 03:36.380
Now let's apply some styling here so that we can see something for the order item itself.

03:36.480 --> 03:43.050
All again reuse that card look which I already have in the product item sole copy all these settings

03:43.050 --> 03:46.770
here from the product item and move them over to the order item.

03:46.770 --> 03:51.770
So did a shadow is applied a background color a border radius all that should be applied.

03:52.010 --> 03:57.210
An additional add a margin of 20 in all directions so that each order item has some spacing around it

03:58.790 --> 04:03.830
inside of the order item all the while I have a padding of 10 so that the content in their dozens sits

04:03.830 --> 04:10.800
directly on the edges of the surrounding border and so on now for the summary which is this view that

04:10.800 --> 04:13.700
holds the two text pieces there.

04:13.770 --> 04:17.940
The styling should actually be that we have a flex directional for row of course because items should

04:17.940 --> 04:22.590
be sitting next to each other justify content should be space between.

04:22.590 --> 04:31.230
And besides that a line items should be center so that on the cross axis which here is the vertical

04:31.230 --> 04:34.280
axis items are centered.

04:34.290 --> 04:40.160
I also want to ensure that we take the full available width here to distribute the text now for the

04:40.180 --> 04:47.620
total amount which is the styling applied to this first text piece which outputs the amount there.

04:47.830 --> 04:53.350
As always you can solid whoever you want but also the font family of open sounds bold to use that bold

04:53.350 --> 05:01.180
version of my fund and give it a font size of 16 let's say and then for the date which is my style I

05:01.180 --> 05:04.630
apply to that date text here dare I.

05:04.630 --> 05:10.840
In the end all the want to use a font size of 16 but font family will just be open sans without the

05:10.840 --> 05:12.010
bold wording.

05:12.040 --> 05:20.800
And in addition we can also reuse that dark grayish color here now with this let's give it a try and

05:20.810 --> 05:24.080
let's use that order item in the orders screen.

05:24.080 --> 05:29.480
So in there we first of all need to import order item from.

05:29.480 --> 05:34.970
And then of course go to the components folder there to the shop folder and then import order item from

05:34.970 --> 05:36.520
that order item file.

05:36.710 --> 05:42.800
And here instead of rendering that text we now render dead order item here as a self closing tag.

05:42.800 --> 05:44.710
And of course we need to configure this.

05:44.720 --> 05:50.780
This requires us to pass in the amount and the date and later also the detail items.

05:50.780 --> 05:52.160
So the items in the order.

05:52.190 --> 05:54.400
But that will come in a second step.

05:54.410 --> 06:02.120
So for now here we need to pass in the amount and that of course is simply item data dot item which

06:02.120 --> 06:03.290
is a single order.

06:03.290 --> 06:07.020
Don't forget we're looping through all orders here which is an array of orders.

06:07.040 --> 06:08.260
So that's a single order.

06:08.720 --> 06:15.030
And in there the amount if we have a look at our order model is stored in the total amount field data

06:15.030 --> 06:16.830
set and stored in that date field.

06:16.850 --> 06:21.980
So here we access the total amount field and for the date prop which we all need to pass and we can

06:21.980 --> 06:28.070
access item data on item dot date if we know safeties and we have a look at that.

06:28.070 --> 06:37.940
Let's add some corn here ordered this and then go to our orders screen and we get this error.

06:38.030 --> 06:42.980
No dessert for us to objects not being valid is actually written and shows us that in the end it's the

06:42.980 --> 06:50.010
state object it's having a problem with and that makes sense because date in our order when we create

06:50.010 --> 06:54.540
it here now redux store is a date javascript object.

06:54.650 --> 06:58.150
Now we can't output this as text like that to output it.

06:58.160 --> 07:03.230
We can go to our model though here which is in the end the blueprint we use for creating the orders

07:03.820 --> 07:09.830
and in the order model we can do something we haven't done before we can add a method to this model

07:10.070 --> 07:15.650
or to be precise a getter which is a default javascript feature of modern javascript.

07:15.650 --> 07:21.200
So here we can use to get keyword and then any name of your love choice like readable date which is

07:21.200 --> 07:26.330
like a function but not a function you call like a function but what you access like a property in the

07:26.330 --> 07:32.600
end which returns a calculated value and there I want to return this state so to date object which is

07:32.600 --> 07:40.100
stored for this object but then we can call to low kill date string which is a built in JavaScript method

07:40.130 --> 07:46.790
we can use on date objects to convert does object to a human readable date there we pass in the language

07:46.790 --> 07:52.190
for which we want to optimize it like this for example and now we can configure it is with a second

07:52.220 --> 07:58.100
argument which is a javascript object there you can define how two years should be configured and attached

07:58.100 --> 08:03.260
you find a detailed box for this method if you want to learn all about it and for example we can set

08:03.260 --> 08:11.020
the year to numeric the month too long the day to numeric

08:14.470 --> 08:22.980
the our 2 2 digit and the minute also 2 2 digit.

08:23.160 --> 08:28.650
Now we have that readable data property which we can access on any order item and Dale for now in the

08:29.190 --> 08:34.960
orders screen instead of passing in the data object like this I access readable data which is now does

08:35.010 --> 08:41.520
new gather property we added and now what you'll see is that if I again placed his order here by clicking

08:41.520 --> 08:48.960
order now and I now go to my orders now you see the total amount and this cleanly for month date and

08:48.960 --> 08:55.320
now if I do the same on Android I place an order here and I go to my orders screen you see the same

08:55.320 --> 09:02.130
there now data I just want to tweak that button a little bit in general all on OS it shouldn't be as

09:02.130 --> 09:09.840
broad not as wide here so in the order item component where I have this button in the end what we can

09:09.840 --> 09:21.750
do is on this view here we can add a line items center to center de content along the cross axis which

09:21.750 --> 09:28.550
is left to right and therefore now if I tried this again I placed this order in I go to orders you see

09:28.550 --> 09:32.760
this is now not principal there and it's even clearer on Android if we reloaded their

09:35.950 --> 09:43.060
and I place does order real quick here go to the orders screen now we have this button now of course

09:43.060 --> 09:50.530
the goal is that when we press this button this order expands here what you'll note on Android by the

09:50.530 --> 09:53.460
way is that this state isn't displayed correctly.

09:53.470 --> 09:56.970
So that's another thing we need to fix.

09:57.050 --> 10:02.240
Now the reason for that not being displayed correctly is how react native works internally which JavaScript

10:02.300 --> 10:08.810
engine it uses internally and the one it uses for Android there or on Android platforms does simply

10:08.810 --> 10:13.980
not support does nice to local data string method I'm using here.

10:14.180 --> 10:17.500
That engine use the Iaw does spot on android.

10:17.510 --> 10:23.030
That's not the case which is of course inconvenient and not that great.

10:23.030 --> 10:26.030
So what can we do an android to fix this.

10:26.030 --> 10:34.610
The solution is to install a separate library which is called moment J.S. we installed with NPM installed

10:34.610 --> 10:36.440
dash dash save moment.

10:36.740 --> 10:39.580
Does a third party library that will work on both platforms.

10:39.590 --> 10:43.830
Which makes formatting dates also super simple.

10:44.420 --> 10:47.000
So let's wait for it as installation to complete.

10:47.090 --> 10:53.400
Now with that installed you import everything asked moment from moments from the library you just installed

10:53.570 --> 10:56.530
and now you can use it in this file here.

10:56.540 --> 11:03.950
Now we can come and out this down here and instead return moment executed like a function and pass in

11:03.950 --> 11:05.030
this start date.

11:05.050 --> 11:12.800
So to date object we want to format and call format now form it takes the string where you can configure

11:12.800 --> 11:16.880
how to format this and attached you all to find a link to the official docs where you can learn all

11:16.880 --> 11:19.330
about the possibilities you have there.

11:19.360 --> 11:26.760
Now here one example one way of formatting this lets say a long month.

11:26.770 --> 11:34.570
What you do with 4 capital M's then the old we have a nicely formatted date in that month though day

11:34.570 --> 11:44.730
in month output year represented by four digits and then an hour always represented with two digits

11:45.180 --> 11:47.160
and the minutes.

11:47.180 --> 11:56.250
Now if we safeties and we give this a try start on our s whips add this here to the cart go to the card

11:56.250 --> 11:57.840
and ordered this and now go to orders.

11:57.840 --> 11:58.870
This looks good.

11:59.040 --> 12:02.440
And now if we give this a try on Android as well we ordered that.

12:02.730 --> 12:06.860
And then here we go to orders does not all looks nice there.

12:06.960 --> 12:10.610
Now that's a little fixed now let's work on the button and give it some spacing as well.

12:10.740 --> 12:17.220
Besides shrinking its size and that can be done by going to to the summary here which is the style apply

12:17.220 --> 12:22.260
to the view which holds the two text pieces there we can simply add a margin to the bottom of let's

12:22.260 --> 12:29.190
say 15 so that we have some spacing between that summary row which is this text row at the top and the

12:29.190 --> 12:36.540
button below it so I'll add this to my card here ordered as then go back here go to orders.

12:36.690 --> 12:37.750
Now it looks good.

12:37.770 --> 12:39.300
Now let's make sure to show details.

12:39.300 --> 12:41.000
Button does something as well.
