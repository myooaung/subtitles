WEBVTT

00:02.200 --> 00:04.510
So now what have we learned about all these alternatives.

00:04.510 --> 00:09.860
The obvious question is which approach should you use for your application.

00:09.860 --> 00:15.250
No I think fraught the course you saw that he was an expert in general is an awesome development experience.

00:15.260 --> 00:21.000
Everything is super fast it's easy to test changes both on simulators and real devices.

00:21.050 --> 00:22.940
You don't need to build locally.

00:22.960 --> 00:29.990
Therefore for you can also build and test for and on IAW on Windows systems and Linux which is not possible

00:30.170 --> 00:32.050
without the managed workflow.

00:32.390 --> 00:34.150
And that's all pretty cool.

00:34.370 --> 00:39.950
But when we compare Expo to non exposed setups and with non expo I mean both creating it with React

00:39.950 --> 00:43.610
Native Seelye or using a bear expert workflow.

00:43.610 --> 00:45.760
Then of course we have to compare all the things.

00:45.770 --> 00:52.760
So as mentioned with expo with the managed workflow it's easy to use that easy to develop non-taxable

00:52.820 --> 00:55.970
means more manual setup and so on.

00:55.970 --> 01:01.310
Now you also will will have an easy time deploying your app as you will also see in the deployment section

01:01.700 --> 01:06.260
and you can even build and deploy for ISIS if you're on the Windows or Linux machine something which

01:06.260 --> 01:09.500
is not possible without the managed workflow.

01:09.860 --> 01:15.590
So there you have some restrictions there and deployment as you will see also takes more manual work

01:15.710 --> 01:23.520
like the non expert workflow does in general when in the Expo managed workflow world we all have a rich

01:23.520 --> 01:25.200
suit of native modules.

01:25.260 --> 01:32.760
So all these Expo API eyes which are always easy to use just the expo installed away don't need any

01:32.760 --> 01:33.200
setup.

01:33.210 --> 01:38.070
So that's really amazing and you got pretty much everything you could want in the native app there.

01:38.070 --> 01:41.440
Camera location filesystem it's all there.

01:41.910 --> 01:46.440
If you sometimes need something which is not supported though or you need to write your own native code

01:46.470 --> 01:52.560
that you want to connect to react native your own package or whatever it is then non Expo is the solution.

01:52.560 --> 01:59.700
So there you can use any native code but of course you need to set it up manually and that might be

01:59.700 --> 02:07.140
easy with React Native link as you saw or even some auto linking libraries but you might also have libraries

02:07.140 --> 02:09.060
that take more effort.

02:09.060 --> 02:14.820
In addition it's worth noting that of course third party libraries need to be maintained to stay up

02:14.820 --> 02:20.850
to date with three act native and your words of HREOC native but also they need to stay up to date with

02:20.940 --> 02:22.160
Android and ISIS.

02:22.170 --> 02:22.440
Right.

02:22.440 --> 02:27.740
Because these platforms also evolve and introduce new features or deprecate old features.

02:27.930 --> 02:34.410
The expo API eyes are pretty guaranteed to be maintained because the expo team is active is working

02:34.410 --> 02:37.710
on that and it's a whole ecosystem that works together.

02:37.950 --> 02:40.740
That might not be true for all third party packages.

02:40.740 --> 02:45.840
So does extra security you get with the actual packages is definitely pretty nice.

02:45.840 --> 02:52.920
That being said as you saw with the bare workflow you can of course also add certain but not all Expo

02:52.920 --> 02:55.160
API is to non managed apps.

02:55.170 --> 03:02.910
That is possible but takes a bit more work now of course to manage workflow has downsides.

03:02.910 --> 03:07.600
It's a wrapper around your app and that of course impacts both the size and performance.

03:07.710 --> 03:14.640
Most likely not in a way that you will feel or see but it's worth noting there is a thin extra wrapper

03:14.840 --> 03:19.610
and you don't have that in the bare workflow or when just working with the react native seal.

03:20.520 --> 03:24.000
And of course as mentioned you're restricted to the built in native modules.

03:24.000 --> 03:27.700
There are a bunch of those and probably everything you might ever need.

03:28.200 --> 03:31.580
But if you need something else which is not built into x.

03:31.620 --> 03:36.390
So an API which is not supported by Expo then there is no way to get it to work.

03:36.390 --> 03:39.710
Then you need to eject because only non excel.

03:39.720 --> 03:46.790
And with that I mean non managed workflow apps support all third party packages and all native modules

03:46.800 --> 03:48.550
you might want to use.

03:48.780 --> 03:54.000
So Dale for my suggestion would be that for most apps pretty much all apps probably.

03:54.000 --> 04:00.690
You work with excel because of the great development experience and the great flexibility you have there.

04:00.690 --> 04:07.230
Since you can always eject there there's not much to lose you can always go back to a non Expo managed

04:07.230 --> 04:08.340
app if you want to.

04:08.370 --> 04:12.340
As you saw starting with such a non Expo app.

04:12.360 --> 04:17.180
So with a better app or even with just the react NATO supply app is a good idea.

04:17.190 --> 04:23.460
If you know that you will need a lot of native functionalities that are not supported by expo or if

04:23.460 --> 04:29.460
you're building a high performance application where every kilobytes of extra wrapping matters.

04:29.460 --> 04:35.820
Then of course you might start with such app but otherwise I really see no strong reason for why not

04:35.820 --> 04:37.000
to use Expo.

04:37.290 --> 04:42.120
And especially if you're not working in a huge team in a corporation or anything like that.

04:42.330 --> 04:46.860
Being able to build ISIS apps on Windows 2 is really a nice thing.

04:46.860 --> 04:54.420
So that alone is also good reason for staying in the managed world so that are my two cents on that

04:54.420 --> 04:55.890
since you can eject.

04:55.890 --> 04:58.490
It's not like you have to stick with one solution.

04:58.500 --> 05:05.700
If you started with it just going back from the bear or the react native seal I only setup to the managed

05:05.700 --> 05:11.250
workflow is a bit more tricky because there you need to create a new export managed project.

05:11.250 --> 05:18.330
Copy over your code and if you did use any third party libraries that are not from Expo you won't be

05:18.330 --> 05:19.280
able to use them anymore.

05:19.290 --> 05:21.450
So switching back can be hard.

05:21.450 --> 05:26.610
Switching from Expo managed to Expo non managed that is pretty easy with ejecting.
