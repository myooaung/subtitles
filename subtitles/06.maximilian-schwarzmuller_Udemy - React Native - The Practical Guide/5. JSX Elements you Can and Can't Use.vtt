WEBVTT

00:02.280 --> 00:07.710
We created this react native app here and we opened the app.js file.

00:07.710 --> 00:15.180
Now if you analyze this file, what you will see is that this app component here is just a normal react

00:15.180 --> 00:16.010
component,

00:16.080 --> 00:24.330
here I am importing react from react and you might also know a different syntax where we pull out the

00:24.330 --> 00:28.370
component element in this extra named import here,

00:28.380 --> 00:34.100
well you can do the same here and then simply extend component instead of react.component.

00:34.230 --> 00:41.160
So this really is the same syntax you might know from a web project built with react, the special part

00:41.160 --> 00:47.950
of course comes here, the react native imports. This part up here is just normal react,

00:48.000 --> 00:53.400
you can confirm this by looking into the package.json, the dependency is react, a beta version

00:53.400 --> 00:55.010
of react 16 here for me

00:55.020 --> 00:58.020
but at the point of time you're viewing this, it's probably a higher one

00:58.110 --> 01:00.270
and even this one is absolutely fine.

01:00.450 --> 01:02.760
So it's the normal react package,

01:02.760 --> 01:05.580
so the react native part is the special thing.

01:05.700 --> 01:08.750
That's a cool thing about react native, in its core,

01:08.790 --> 01:15.420
we use react but then we need a lot of parts from the react native package namely all the components

01:15.420 --> 01:17.940
and functionality it exposes.

01:17.940 --> 01:22.870
You can think of react itself as a wrapper which knows how to create components,

01:22.980 --> 01:24.080
that's the main thing react

01:24.220 --> 01:24.750
knows

01:24.870 --> 01:30.440
and it doesn't care whether these components run on the web or on a real device.

01:30.570 --> 01:34.660
Obviously, the device, the target does care though,

01:34.710 --> 01:40.620
if you were building an application for the web, you have to use elements known by the web, like a div,

01:40.730 --> 01:44.270
a h1 tag, a span and so on.

01:44.500 --> 01:52.710
If you're building for a native device like an android or an iOS smartphone, you have to use elements these devices

01:52.810 --> 01:59.500
know and since they use different operating systems, there is no standardized set of components.

01:59.520 --> 02:02.840
That's the reason why we use this react native package and the components

02:02.850 --> 02:04.270
we import from it,

02:04.350 --> 02:10.430
remember that slide from the first course module, react native does one major job for us,

02:10.470 --> 02:18.090
it provides us components to be seen here on the very right which in the end are translated to their

02:18.090 --> 02:25.770
counterparts automatically during the build process, so that when our application runs on an Android device,

02:25.770 --> 02:26.940
we use an android

02:26.940 --> 02:27.730
view

02:28.000 --> 02:34.470
or on iOS, we would use the UI view component which are simply two different elements for different

02:34.530 --> 02:36.550
operating systems.

02:36.630 --> 02:44.160
So that is why in a react native project, we can't use divs, inputs, h1 tags and so on,

02:44.250 --> 02:49.700
these native devices wouldn't know what they are because our app doesn't run in the browser,

02:49.740 --> 02:54.570
it's not like an ionicon app which is a web app hosted by a native app,

02:54.750 --> 02:58.220
it's a real native app compiled to native code,

02:58.260 --> 03:01.840
hence we have to use code this device understands.

03:01.950 --> 03:07.680
And I'm really stressing this because it's so important to understand, you can't use your web elements

03:07.680 --> 03:13.730
in a react native app, use these components provided by react native instead.

03:13.740 --> 03:18.700
Now at this point, you might already wonder which components can you use and for that,

03:18.720 --> 03:22.220
I visited the official react native documentation,

03:22.440 --> 03:29.340
you can find it on facebook.github.io/react-native/docs.

03:29.430 --> 03:32.810
Now you can read through these docs but you don't need to,

03:32.880 --> 03:40.740
I will teach you react native but if you scroll down, you will see these components section here and there

03:40.740 --> 03:46.620
you see all the components react native currently has and it's very possible that when you're viewing

03:46.620 --> 03:50.730
this at some later point of time, there are some new components,

03:50.730 --> 03:54.520
I already told you that react native is under active development.

03:54.930 --> 04:00.360
So here you see all the components react native ships with and you could think these are many or

04:00.360 --> 04:06.210
maybe you don't think it, I don't think these are many but actually you got all the core components you

04:06.210 --> 04:08.160
need to build native apps

04:08.370 --> 04:10.420
and as you will learn throughout the course,

04:10.440 --> 04:17.010
you also often import third party packages if you need to add some new component which in the end might

04:17.010 --> 04:22.740
be composed from these base components but which gives you a new functionality or which is a completely

04:22.740 --> 04:29.760
new component on its own because these base components you can use here are essentially components

04:29.760 --> 04:37.170
for which the react native team made the effort of providing their native code counterparts under the

04:37.170 --> 04:45.750
hood, so that when these components here are used by us once we build our app are compiled to their native

04:45.750 --> 04:47.470
code equivalents.

04:47.700 --> 04:49.570
That's really important to understand,

04:49.620 --> 04:57.960
that's the reason why we must only use components imported from react native or some react native third

04:57.960 --> 04:59.230
party library

04:59.490 --> 05:07.100
if we want to use them here in our jsx code, we can't use divs and so on here, really important to understand

05:07.100 --> 05:08.030
this.

05:08.380 --> 05:11.740
Now with all this talking, let's start working on this

05:11.770 --> 05:14.910
and before we start building our own components and so on,

05:14.920 --> 05:20.390
I already want to run this on a real simulator and a real device.

05:20.470 --> 05:22.500
I will show you how to achieve this

05:22.600 --> 05:29.800
and for this I will actually eject this application so I will leave the create react native app world.

05:29.800 --> 05:35.560
The reason for this simply is that as long as we stay in this set up, we can run it on a real device

05:35.860 --> 05:41.020
but it will always be managed and wrapped by this expose service and I don't want it,

05:41.050 --> 05:43.920
I want to have a real native app without any strings.
