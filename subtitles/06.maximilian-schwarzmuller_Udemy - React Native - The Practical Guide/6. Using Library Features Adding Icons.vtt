WEBVTT

00:02.210 --> 00:05.520
So in the last lectures, we added the library to our set up.

00:05.550 --> 00:09.440
Now I want to add an icon because that is what we include at the library,

00:09.440 --> 00:10.820
right.

00:10.970 --> 00:17.060
Adding an icon is super simple but where can we add it? Maybe the place detail, let's say we don't want to

00:17.060 --> 00:23.430
have a delete button like this but we want to create our own button which has this trash bin

00:23.570 --> 00:30.250
icon essentially. Now this button here can only be used with text so I'm going to remove it

00:31.710 --> 00:37.230
and instead I want to create my own icon and you learned that for this, we first of all need the touchable

00:37.260 --> 00:42.340
components. Now I'm going to use touchable opacity to make it transparent when we click on it,

00:43.190 --> 00:50.250
then I'm going to add my touchable opacity component here,

00:52.360 --> 00:59.580
in there I now want to use an icon in my trash bin icon. Since we just added react native vector items,

00:59.740 --> 01:07.660
I can now import icon from react native vector icons and then slash the font you want to use, so in my case

01:07.730 --> 01:11.080
ionicon, without ttf

01:11.350 --> 01:13.840
and it's ionicons actually.

01:13.990 --> 01:17.720
So with that I get my icon, now I want to use that in here

01:17.800 --> 01:21.040
so I'm just going to use icon, self-closing tag,

01:21.340 --> 01:27.130
we can now add a size property and you can find more information about the usage in the official documentation

01:27.130 --> 01:28.660
if you scroll down,

01:28.920 --> 01:30.620
there you see the icon component,

01:30.640 --> 01:32.610
you can set the size name and color,

01:35.230 --> 01:37.370
so size maybe 30,

01:37.390 --> 01:39.100
let's see if that's fine.

01:39.160 --> 01:44.500
Now for the name, for that I have to go to the ionicons page and search for trash here,

01:44.710 --> 01:46.090
maybe use this one,

01:46.120 --> 01:53.640
so I'll copy iOS trash as the name, simply add the name property here then and it's just a string, iOS

01:53.730 --> 01:54.900
trash

01:55.240 --> 01:58.810
and then finally, let's also add a color,

01:59.080 --> 02:08.550
maybe red. Now let's save all of that and chances are your app is now broken because we added a new

02:08.550 --> 02:10.990
package and even added some native code,

02:11.130 --> 02:18.840
so a good fix then always is to quit the process running in your development window here, in your javascript

02:18.840 --> 02:20.250
development process,

02:20.250 --> 02:29.270
quit that and rerun it with npm start or simply rerun npm android to well basically also restart that

02:29.320 --> 02:34.880
and I'm also going to rerun iOS to make sure that this is also rebuilt correctly thereafter.

02:35.050 --> 02:39.880
Now these rebuilds may take a bit longer because you did edit the date of code in the end, you added a

02:39.880 --> 02:44.100
package, so let's wait for it to finish,

02:45.330 --> 02:46.220
android finished,

02:46.230 --> 02:54.320
let me now rerun npm run ios to also rebuild that with our new native code. And now both applications are running

02:54.320 --> 03:03.780
again, let me now add a new place and open it here and we see an icon, we should see it at least and the

03:03.780 --> 03:07.320
same should also work on Android.

03:08.200 --> 03:13.990
In case it's broken as it is here, sometimes it is when you change the native code, simply kill it and

03:13.990 --> 03:18.900
restart the app or if it still fails, simply uninstall it

03:20.870 --> 03:27.560
and rebuild it again. After all of that, it should finally work there too and this is really just because

03:27.560 --> 03:30.020
we added a package and then sometimes it just breaks

03:30.170 --> 03:36.500
but there we can also see the trash bin and I just temporarily quit react native debugging tools because

03:36.500 --> 03:40.810
that also can sometimes block it, simply feel free to restart them thereafter.

03:40.850 --> 03:46.280
You don't need to do that that often, readjust if you add such libraries, it can break your development

03:46.310 --> 03:47.890
process from time to time.

03:48.080 --> 03:49.760
But we're back up and running,

03:49.760 --> 03:51.740
we got our trash bin in there,

03:51.740 --> 03:53.450
we got our icon in there,

03:53.480 --> 03:57.700
now of course we can improve the styling of that a little bit,

03:57.810 --> 04:05.520
could center it and for that, what we can do is we can simply add a view to wrap our little

04:05.540 --> 04:17.250
icon here and give that icon that view, its own style, delete button maybe where we align items in the

04:17.270 --> 04:20.550
center.

04:20.670 --> 04:23.480
Let's now assign a delete button style to the view here,

04:23.490 --> 04:26.210
style should be styles

04:26.210 --> 04:27.340
delete button.

04:27.360 --> 04:36.650
Save this file and this looks much better, now hot reloading isn't turned on here on the Android simulator

04:36.650 --> 04:40.140
because I reloaded everything there, so that's why it didn't reload

04:40.340 --> 04:44.440
but if I add Munich there again and open this, here it's now also centered.

04:44.780 --> 04:50.330
Now we get our buttons and we can click them, nothing happens of course but only because it didn't connect

04:50.330 --> 04:57.910
the click listener so let's add on press to touchable opacity again and then simply execute props on what

04:57.910 --> 04:59.660
was it called, item deleted.

05:02.370 --> 05:07.310
Let's quickly check our app.js file on item deleted,

05:07.510 --> 05:10.400
so that's the property I want to execute here.

05:10.430 --> 05:17.920
So let me save this again, now clicking that also closes it and deletes the item. And with that, we added

05:17.920 --> 05:22.060
our third party library hooking into native device features to the app.
