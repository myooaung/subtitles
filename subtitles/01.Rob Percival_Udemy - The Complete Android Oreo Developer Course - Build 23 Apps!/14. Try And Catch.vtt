WEBVTT
1
00:00:00.640 --> 00:00:00.940
All right.

2
00:00:00.940 --> 00:00:04.290
So I promised that we were going to go learn how to download some web content.

3
00:00:04.300 --> 00:00:09.190
But before we do that there's a general principle in Java that I want to teach you about and I think

4
00:00:09.190 --> 00:00:14.320
it's best to kind of do it here and just sort of a one off situation that's not worth creating a whole

5
00:00:14.320 --> 00:00:19.780
app over we're going to use this Browndown x y just like we've done before braue x y dot com.

6
00:00:19.810 --> 00:00:25.900
And what we're going to do is we're going to see how we can use try and catch to work with some exceptions.

7
00:00:25.900 --> 00:00:29.930
So I'm going to give you a really awesome example to see how that all works.

8
00:00:29.950 --> 00:00:32.660
And then you'll see how that applies to web content.

9
00:00:32.770 --> 00:00:33.970
In our next lecture.

10
00:00:33.970 --> 00:00:37.540
So first to get started here just go ahead and hit the try button there.

11
00:00:37.540 --> 00:00:43.210
That's going to get you started with the little hello world example here this gives us most importantly

12
00:00:43.240 --> 00:00:43.980
our starting menu.

13
00:00:43.990 --> 00:00:47.160
But let's go and get rid of this print line for now.

14
00:00:47.170 --> 00:00:52.000
Now couple of challenge for you here the first one that I want you to do is I want you to create an

15
00:00:52.000 --> 00:00:55.350
array that holds three integers.

16
00:00:55.360 --> 00:00:57.070
Now don't create an array list.

17
00:00:57.070 --> 00:01:00.040
I want you to create an array that holds three integers.

18
00:01:00.040 --> 00:01:03.460
You don't have to say what those integers are going to be to but just create the array.

19
00:01:03.460 --> 00:01:05.370
All right go ahead and hit pause.

20
00:01:05.440 --> 00:01:07.630
Now.

21
00:01:07.910 --> 00:01:10.160
All right so hopefully that went well for you.

22
00:01:10.160 --> 00:01:14.820
The answer to this is used to end with the square brackets to specify that you're doing the array.

23
00:01:15.080 --> 00:01:20.700
Let's get this very boring name of just array and we'll go ahead and say that this is going to be an

24
00:01:21.500 --> 00:01:25.990
array of three items and then we'll set a semi-colon.

25
00:01:26.360 --> 00:01:32.060
So then once we have this the next challenge that I have for you is I want you to be able Oh and excuse

26
00:01:32.060 --> 00:01:36.740
me I forgot we need to have a new IF and if you ever want to check your code to make sure it's OK.

27
00:01:36.740 --> 00:01:43.330
Just go ahead and hit this start button here and it'll tell you if you had any issues.

28
00:01:43.670 --> 00:01:49.520
So with that the next challenge that I have for you is I want you to do a for loop where you then add

29
00:01:49.520 --> 00:01:54.000
three numbers to this array and the number should be zero 1 to game.

30
00:01:54.080 --> 00:01:56.720
So very simple straightforward you can do this.

31
00:01:56.720 --> 00:01:57.440
Hit pause.

32
00:01:57.480 --> 00:01:59.470
Now.

33
00:01:59.660 --> 00:02:01.790
All right so hopefully that went well again.

34
00:02:01.820 --> 00:02:05.530
We are creating a for loop and inside of this for loop.

35
00:02:05.930 --> 00:02:10.820
And you got to I'm so used to Android studio of making my ending curly brackets for me.

36
00:02:10.820 --> 00:02:16.550
I got to make sure that I add that they're going to have an event called I which is initially said equal

37
00:02:16.550 --> 00:02:17.490
to zero.

38
00:02:17.730 --> 00:02:23.880
And while I is less than three then we are going to say I.

39
00:02:23.960 --> 00:02:25.110
Plus plus.

40
00:02:25.220 --> 00:02:26.810
Just like that.

41
00:02:27.350 --> 00:02:34.670
Then as far as code inside of here what we want to do is we're going to say OK array index of II is

42
00:02:34.670 --> 00:02:36.660
going to be equal to whatever.

43
00:02:36.680 --> 00:02:41.510
So you know the zero index we want that to be equal to zero and then the one index we want that to be

44
00:02:41.620 --> 00:02:44.310
the one so on and so forth.

45
00:02:44.420 --> 00:02:49.760
So after this to make sure that the array looks like and is what we were expecting we're going to go

46
00:02:49.760 --> 00:02:50.590
ahead and print it out.

47
00:02:50.590 --> 00:02:57.500
So we're going to do our system out that print line.

48
00:02:57.710 --> 00:03:03.350
And then inside of here we've got to turn our array into a string so we're going to say capital array

49
00:03:04.580 --> 00:03:12.190
with an s to string and then we're going to pass in our array.

50
00:03:13.490 --> 00:03:15.230
Don't forget our semi-colon there.

51
00:03:15.230 --> 00:03:17.540
And with that let's go ahead and hit start.

52
00:03:17.630 --> 00:03:18.780
See what we get here.

53
00:03:18.940 --> 00:03:21.810
So we've got to err on line 11.

54
00:03:22.100 --> 00:03:22.640
Let's see.

55
00:03:22.640 --> 00:03:26.380
Cannot find symbol variable arrays.

56
00:03:26.510 --> 00:03:28.180
That's because we have to import it.

57
00:03:28.220 --> 00:03:29.600
OK.

58
00:03:30.050 --> 00:03:31.730
Thank you for alerting me about that.

59
00:03:31.730 --> 00:03:36.910
OK so we've got import and then we're going to say Java.

60
00:03:36.970 --> 00:03:38.180
You still do.

61
00:03:38.180 --> 00:03:43.940
Hopefully this helps you realize how cool Android studio is right like if we had just done arrays of

62
00:03:43.940 --> 00:03:47.330
the capital S and hit enter it would have automatically done this import for us.

63
00:03:47.330 --> 00:03:50.930
We would have all sorts of auto complete stuff.

64
00:03:51.020 --> 00:03:56.000
It's kind of good sometimes to go through the painful stuff to know OK this is what the good life is

65
00:03:56.000 --> 00:03:56.510
all about.

66
00:03:56.540 --> 00:03:59.280
And it looks like I'm still on.

67
00:03:59.300 --> 00:04:01.740
I did until instead of you till.

68
00:04:02.120 --> 00:04:02.560
OK.

69
00:04:02.600 --> 00:04:03.970
One of these days.

70
00:04:04.040 --> 00:04:05.220
And I call that Java.

71
00:04:05.230 --> 00:04:07.720
Good gracious.

72
00:04:07.940 --> 00:04:09.580
I got to work on my spelling here.

73
00:04:09.590 --> 00:04:13.920
But eventually we do get 0 1 and 2.

74
00:04:14.010 --> 00:04:14.690
OK.

75
00:04:15.050 --> 00:04:16.110
So that's excellent.

76
00:04:16.130 --> 00:04:21.230
Everything's working but now I need to introduce you to the concept of the try catch.

77
00:04:21.230 --> 00:04:26.140
So the basic idea here is there are sometimes errors in your code right.

78
00:04:26.150 --> 00:04:30.860
Something happens for example here if I make this for loop go through for four items.

79
00:04:30.860 --> 00:04:33.130
Even though our arrays only three things wrong.

80
00:04:33.440 --> 00:04:37.610
If I go ahead and run this code look what we get we get this exception.

81
00:04:37.610 --> 00:04:42.710
And you know right now it doesn't look that bad but it's an Android app if you ever get an exception

82
00:04:42.760 --> 00:04:44.930
and it's not handled properly.

83
00:04:44.930 --> 00:04:48.370
Your entire app crashes the user has no idea what's happened.

84
00:04:48.410 --> 00:04:53.570
They would have to reopen the app if they want to like that sort of worst case scenario for app is just

85
00:04:53.570 --> 00:04:59.540
that everything crashes like this so you don't want to have uncaught exceptions inside of your code

86
00:04:59.570 --> 00:05:05.480
in the way that you can handle this is using something called a try catch and basically the try catch

87
00:05:05.570 --> 00:05:09.150
literally allows you to try out some code and if there's a problem with it.

88
00:05:09.290 --> 00:05:14.810
You can catch that problem and then handle the response the response appropriately.

89
00:05:14.810 --> 00:05:21.110
So for example with this for loop we could say try with an opening curly bracket and we'll put an end

90
00:05:21.110 --> 00:05:27.140
in one there which then means all this code we need to tab forward and then we're going to put a catch

91
00:05:27.140 --> 00:05:27.750
here.

92
00:05:27.920 --> 00:05:33.800
And with this catch We're going to say capital exception just like that.

93
00:05:33.980 --> 00:05:35.910
And then we're going to call it lower case.

94
00:05:35.930 --> 00:05:37.310
That's typically what people do.

95
00:05:37.310 --> 00:05:39.300
There's nothing special about either.

96
00:05:39.440 --> 00:05:43.990
Like you could you know name that error if you wanted to or lower case exception.

97
00:05:44.000 --> 00:05:49.040
But people usually just do lowercase E and just to see if this is working.

98
00:05:49.040 --> 00:06:00.350
We're going to go ahead and do a print line here and we'll say something very simple like there was

99
00:06:00.740 --> 00:06:05.060
a problem and we've got our all caps so that it's very dramatic.

100
00:06:05.240 --> 00:06:11.210
So go ahead and run this and you'll see what's happened here is it ran through the for loop and when

101
00:06:11.210 --> 00:06:15.350
it found the exception when you know it says oh you know there was too many things here.

102
00:06:15.530 --> 00:06:20.410
We were able to successfully print out hey there was a problem we didn't crash the program or anything

103
00:06:20.420 --> 00:06:25.730
and in fact it was still able to move forward and say hey I'm going to print out whatever's inside of

104
00:06:25.730 --> 00:06:27.020
array and print it out.

105
00:06:27.020 --> 00:06:27.790
0 1 2.

106
00:06:27.790 --> 00:06:31.760
So it kind of kept moving forward which is really awesome.

107
00:06:31.820 --> 00:06:35.450
And there's all sorts of great information here inside of E.

108
00:06:35.450 --> 00:06:40.680
So for example if we didn't want to print out there was a problem if we want to you know print out whatever

109
00:06:40.680 --> 00:06:47.300
is inside of the we can actually do that and you can see it says oh Java dot length array index out

110
00:06:47.300 --> 00:06:48.700
of bounds exception.

111
00:06:48.740 --> 00:06:54.260
So it's telling us oh ok you know you're trying to access something in the array that you know doesn't

112
00:06:54.260 --> 00:06:54.760
exist.

113
00:06:54.770 --> 00:06:56.780
And that's where your problem is.

114
00:06:56.780 --> 00:07:00.730
And so we could you know run the code if we wanted to do that.

115
00:07:00.730 --> 00:07:05.740
And also with these exceptions because there's lots of different types of exceptions you can actually

116
00:07:06.250 --> 00:07:08.410
catch for a particular exception.

117
00:07:08.410 --> 00:07:15.430
So if we go ahead and just copy the name of this one and go ahead and copy that and paste there we can

118
00:07:16.270 --> 00:07:23.980
for the X for this one maybe say something just like out of bounds and then if we want to we could catch

119
00:07:24.520 --> 00:07:26.010
just a more general.

120
00:07:26.020 --> 00:07:32.820
All other exceptions just like this or say exception lower case.

121
00:07:33.070 --> 00:07:41.300
And you know maybe on this one will do our system not out of print line and we'll do that one for E.

122
00:07:41.770 --> 00:07:45.300
OK so let me go ahead and start this.

123
00:07:45.640 --> 00:07:51.190
So you'll see it went to out-of-bounds and it didn't print out what was in this case so when you have

124
00:07:51.190 --> 00:07:58.240
two catches for different exceptions if whatever one matches the exception exactly it's going to run

125
00:07:58.240 --> 00:08:00.830
the code in those curly brackets and it won't run the others.

126
00:08:00.910 --> 00:08:04.960
But sometimes you know you run some code and you're not sure what the exception is going to be.

127
00:08:04.960 --> 00:08:09.400
That's why you can have this general exception here to say hey something happens let's you know do this

128
00:08:09.400 --> 00:08:10.620
general thing.

129
00:08:10.630 --> 00:08:15.820
So the reason I taught this to you is when you're downloading web content there can be all sorts of

130
00:08:15.820 --> 00:08:20.770
issues that happen you don't get back the right information maybe the user's internet connection isn't

131
00:08:20.770 --> 00:08:21.820
there or whatever.

132
00:08:21.820 --> 00:08:26.680
There's all sorts of exceptions that can happen and you need to be able to handle that so that you know

133
00:08:26.680 --> 00:08:33.070
the app just doesn't explode right like if an app crashed every time someone's user's the user's internet

134
00:08:33.070 --> 00:08:35.200
wasn't working like how terrible would that be.

135
00:08:35.200 --> 00:08:40.850
Maybe the user forgot that they were in airplane mode or you know their wife I went out for a second

136
00:08:40.940 --> 00:08:45.240
you would want to give them something more helpful like oh you know your internet's not working.

137
00:08:45.250 --> 00:08:47.260
Check your connection blah blah blah.

138
00:08:47.350 --> 00:08:48.960
Something like that.

139
00:08:49.630 --> 00:08:51.400
So hopefully enjoyed learning about that.

140
00:08:51.400 --> 00:08:55.170
With that let's go ahead and move forward with learning how to download some web content.
