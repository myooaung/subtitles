WEBVTT
1
00:00:00.440 --> 00:00:05.550
So in this video we're going to take a little break from learning about fundamental coding concepts

2
00:00:05.610 --> 00:00:10.810
and techniques in Java going to use what we've learned so far in this section to build a nice fun but

3
00:00:10.860 --> 00:00:13.140
simple app called higher or lower.

4
00:00:13.350 --> 00:00:16.320
You may have played this game before but it's pretty simple.

5
00:00:16.320 --> 00:00:21.790
The app generates a random number between 120 and we have to get it.

6
00:00:21.860 --> 00:00:22.980
So let's see it in action.

7
00:00:23.070 --> 00:00:29.330
If I get 10 for example the apple tell me that I need to go higher.

8
00:00:29.970 --> 00:00:40.950
OK so I'll guess 15 again lower sets lower than 15 August 13 lower again I guess 12 and I got it right

9
00:00:41.010 --> 00:00:44.560
and then I get the option to try again with a new random number.

10
00:00:45.000 --> 00:00:50.730
So pretty simple but should use everything we've learned so far this section and you'll need to google

11
00:00:50.730 --> 00:00:51.750
a couple of things as well.

12
00:00:51.750 --> 00:00:56.630
The main one will be how to generate a random number which we haven't done before.

13
00:00:56.790 --> 00:00:58.650
So I think you'll be able to manage that.

14
00:00:58.670 --> 00:01:03.090
But as always if you have any problems or would rather just follow along with me doing it you can do

15
00:01:03.090 --> 00:01:05.040
that as well.

16
00:01:05.040 --> 00:01:06.910
Now I have a go to it yourself.

17
00:01:07.020 --> 00:01:11.650
Take time to pause the video and create your higher or lower app.

18
00:01:11.650 --> 00:01:12.360
Go for it.

19
00:01:16.730 --> 00:01:17.380
OK.

20
00:01:17.730 --> 00:01:18.690
As always that way.

21
00:01:18.710 --> 00:01:21.240
Well let's get cracking.

22
00:01:21.300 --> 00:01:25.020
So I'll start with a new project.

23
00:01:25.260 --> 00:01:28.790
I'll call it higher or lower.

24
00:01:29.880 --> 00:01:32.710
And then pick all the usual options

25
00:01:36.390 --> 00:01:39.190
and let that set itself up.

26
00:01:39.600 --> 00:01:40.300
OK.

27
00:01:40.710 --> 00:01:51.010
As usual we'll start by designing the look of our app so we'll get rid of that text we and then add

28
00:01:51.010 --> 00:01:52.200
in a new one.

29
00:01:52.350 --> 00:01:54.030
Just give us a bit more room to work with

30
00:02:00.970 --> 00:02:03.630
and then change the text to you.

31
00:02:03.630 --> 00:02:12.130
I'm thinking of a number between 1 and 20

32
00:02:16.370 --> 00:02:17.220
there we go.

33
00:02:17.280 --> 00:02:19.790
And I think we'll Centuri

34
00:02:22.640 --> 00:02:29.850
go in left right and top margins and then we'll bring in a second text view.

35
00:02:36.210 --> 00:02:38.290
Saying Can you guess it.

36
00:02:40.670 --> 00:02:45.210
And we'll make it all the same but a little bit just to bring a bit more attention to it.

37
00:02:49.060 --> 00:02:54.440
And then we'll set the same margins for that one too.

38
00:02:57.090 --> 00:02:59.400
OK then we'll bring in our number

39
00:03:01.910 --> 00:03:02.650
text Phil

40
00:03:08.050 --> 00:03:08.740
which I'll leave

41
00:03:11.620 --> 00:03:19.570
as non-full with this time I think we need a whole full screen with just a number between 1 and 20.

42
00:03:19.570 --> 00:03:21.190
And finally we'll need a button

43
00:03:27.810 --> 00:03:28.560
which

44
00:03:31.510 --> 00:03:38.110
will contain the word guess and the on click method will also be guess

45
00:03:41.720 --> 00:03:45.680
and let's add some constraints to make the button centered as well.

46
00:03:47.970 --> 00:03:49.350
I the constraints for the text.

47
00:03:49.350 --> 00:03:50.260
I did.

48
00:03:50.760 --> 00:03:51.360
Excellent.

49
00:03:51.570 --> 00:03:52.040
OK.

50
00:03:52.130 --> 00:03:55.670
That looks good as usual.

51
00:03:56.450 --> 00:03:59.180
I'll just run it in the background while I'm writing my code.

52
00:04:01.700 --> 00:04:03.210
Save me time later on.

53
00:04:03.620 --> 00:04:11.150
And then all I'm going to do for now is just create a public method which doesn't return anything called

54
00:04:11.360 --> 00:04:15.850
Guess which is called by a view.

55
00:04:16.310 --> 00:04:21.350
And to add the View class it's been a few videos since you've done this now.

56
00:04:22.050 --> 00:04:30.200
So it might be slightly rusty I'm sure it will come flooding back to you or any other low class and

57
00:04:30.200 --> 00:04:34.880
then in FE and Button

58
00:04:43.250 --> 00:04:45.290
OK.

59
00:04:45.540 --> 00:04:46.670
There we go.

60
00:04:46.950 --> 00:04:50.540
Now can you predict what will happen if i guess now.

61
00:04:52.810 --> 00:05:01.920
We actually have our first app crash and that's of course because I added the guess method to the guest

62
00:05:01.930 --> 00:05:10.370
button before I had written the code so it tried to run the gas method but the message didn't exist.

63
00:05:10.490 --> 00:05:13.910
So let's try again.

64
00:05:15.860 --> 00:05:18.070
Now that we've actually written the code for the gas method

65
00:05:21.310 --> 00:05:26.180
I have a little look in the logs that we get button is pressed.

66
00:05:26.250 --> 00:05:32.430
All right so now for the meat of the app the first thing that we need to do is actually find a random

67
00:05:32.430 --> 00:05:34.800
number or generate a random number.

68
00:05:35.180 --> 00:05:39.330
And that's something we don't know have to do yet.

69
00:05:39.720 --> 00:05:40.980
So let's have a look.

70
00:05:42.840 --> 00:05:45.670
I hope we get Java.

71
00:05:45.690 --> 00:05:47.920
Generate a random number.

72
00:05:48.130 --> 00:05:54.190
Notice I didn't put Android in there there's nothing particularly specific to Android about generating

73
00:05:54.190 --> 00:06:00.960
a random number so I'm just searching for Java.

74
00:06:01.010 --> 00:06:01.620
Here we go.

75
00:06:01.620 --> 00:06:10.070
So looks like we need the random class and then we create a new variable of type random name rand which

76
00:06:10.070 --> 00:06:15.180
is a new random object of the class random.

77
00:06:15.380 --> 00:06:18.710
We'll be looking more about objects and classes and a couple of videos time.

78
00:06:18.710 --> 00:06:23.930
So that should become slightly clearer what this thing is and then we create an integer.

79
00:06:23.930 --> 00:06:27.720
So a whole number N which is equal to.

80
00:06:27.720 --> 00:06:29.330
Now this is slightly odd.

81
00:06:29.330 --> 00:06:36.080
We take our Random object and then create an INT from it.

82
00:06:36.080 --> 00:06:42.430
So the next it essentially creates a random number from our Random object.

83
00:06:42.580 --> 00:06:50.860
And as you can see in the comments down here the next and 50 here on its own creates a random number

84
00:06:50.860 --> 00:06:53.740
between 0 and 49.

85
00:06:53.740 --> 00:06:58.270
So if we want a random number between 1 and 50 we need to do next and 50 plus one.

86
00:06:58.720 --> 00:07:01.020
We want a random number between 1 and 20.

87
00:07:01.030 --> 00:07:03.400
So what will we need.

88
00:07:03.400 --> 00:07:04.830
I'm sure you got that next.

89
00:07:05.020 --> 00:07:07.960
Twenty plus one.

90
00:07:07.990 --> 00:07:10.480
So let's copy this code.

91
00:07:10.590 --> 00:07:15.190
We don't need to copy the input bit because Android studio should do that for us.

92
00:07:15.210 --> 00:07:18.620
Let's think a little about when we actually want to create the random number.

93
00:07:18.810 --> 00:07:21.430
We don't want to do it when they've pressed the guest button.

94
00:07:21.450 --> 00:07:25.290
Otherwise we'll generate a new random number every time they try and guess and they could be there for

95
00:07:25.290 --> 00:07:26.940
a very long time.

96
00:07:27.000 --> 00:07:32.420
So we'll create a random number in the on create method.

97
00:07:32.460 --> 00:07:36.720
We haven't actually used this yet but we noticed it back in the first section.

98
00:07:36.960 --> 00:07:42.720
And if you remember this runs code when the app is loaded.

99
00:07:42.720 --> 00:07:47.260
So this is a good place to create our random number.

100
00:07:48.030 --> 00:07:49.310
So let's paste that in.

101
00:07:49.320 --> 00:07:49.850
There we go.

102
00:07:49.860 --> 00:07:52.900
It's offering to add the random class for us.

103
00:07:55.710 --> 00:08:01.320
And we want to change the bound as it's known to the upper bound in this case to 20

104
00:08:06.310 --> 00:08:10.910
and we'll call this random number.

105
00:08:10.980 --> 00:08:19.260
All right so now we've generated our random number we need to be able to access it in our guess method.

106
00:08:19.290 --> 00:08:27.400
Now you may have noticed if I try and type random number it doesn't give me the order predict.

107
00:08:27.400 --> 00:08:32.420
Now we've already talked a little bit about variable's scope and this is a case where it's very important

108
00:08:32.440 --> 00:08:37.800
we've created the variable random number inside the create method.

109
00:08:37.930 --> 00:08:42.120
That means it's not available anywhere outside that method.

110
00:08:42.760 --> 00:08:46.270
So an easy way round that is to create the variable

111
00:08:49.060 --> 00:08:49.480
in

112
00:08:52.390 --> 00:08:56.710
the main activity class itself.

113
00:08:56.710 --> 00:09:03.000
We don't need to give it a value yet but then we can use it anywhere in the main activity class.

114
00:09:03.010 --> 00:09:10.480
So in the gas method in the uncreate method wherever we like so we don't need to create it again we

115
00:09:10.480 --> 00:09:11.820
can just access it.

116
00:09:12.460 --> 00:09:18.370
And now we'll be able to use it inside our guess method as well.

117
00:09:22.060 --> 00:09:22.700
Excellent.

118
00:09:22.990 --> 00:09:29.850
So let's just quickly change our logging code so that it locks the value of random number.

119
00:09:29.890 --> 00:09:35.710
Just said that we know that we've got a random number and we're accessing it correctly.

120
00:09:35.710 --> 00:09:37.930
So we've got an integer here to be able to log it.

121
00:09:37.930 --> 00:09:40.240
We're going to need to convert it to a string.

122
00:09:41.130 --> 00:09:42.980
So let's do a quick search.

123
00:09:42.990 --> 00:09:47.380
Java convert it to string

124
00:09:50.630 --> 00:09:51.300
we get.

125
00:09:51.320 --> 00:09:53.460
I think we can be pretty sure of that.

126
00:09:53.630 --> 00:09:58.950
It's very familiar to integer to string.

127
00:09:59.240 --> 00:10:03.270
And the thing we want to convert to a string is random number

128
00:10:07.440 --> 00:10:08.080
OK.

129
00:10:08.370 --> 00:10:20.070
So now when we press the guest button we should find in the locks our random number that's like

130
00:10:23.630 --> 00:10:25.410
that we get we've got to 5.

131
00:10:25.680 --> 00:10:26.770
Fantastic.

132
00:10:26.820 --> 00:10:29.700
That looks very promising.

133
00:10:29.790 --> 00:10:35.280
So now it's a matter of getting the value that the user has entered and comparing that to the random

134
00:10:35.280 --> 00:10:40.050
number to see if it's higher or lower or if they've got it right.

135
00:10:40.050 --> 00:10:47.840
So I should be familiar with this by now will create and edit text.

136
00:10:48.260 --> 00:10:56.660
We're going to need to cast it as an edit text because we're going to get it using find view by id and

137
00:10:56.660 --> 00:11:01.040
the ID is going to be our ID to edit text which is the default.

138
00:11:01.100 --> 00:11:03.000
I didn't change it.

139
00:11:04.160 --> 00:11:08.260
And then again just to take it really slow.

140
00:11:12.640 --> 00:11:13.480
Well Loek

141
00:11:16.220 --> 00:11:28.110
the end to the valley which is going to be added text don't get text taught to string and I'll just

142
00:11:28.110 --> 00:11:31.210
update that say random number

143
00:11:34.260 --> 00:11:40.260
OK and then once we've just verified that we're getting the entered number and the random number correctly

144
00:11:40.470 --> 00:11:42.060
we'll do our comparisons.

145
00:11:44.050 --> 00:11:50.290
Here we go so into the number 6 and fantastics have entered the value of 6 which is right.

146
00:11:50.300 --> 00:11:53.980
And a new random number all looks very promising.

147
00:11:56.990 --> 00:12:03.290
So in order to check whether our number is bigger or smaller or equal to the random number we're going

148
00:12:03.290 --> 00:12:05.850
to need to convert it to an integer.

149
00:12:06.260 --> 00:12:11.300
You can probably guess how we might do that.

150
00:12:13.740 --> 00:12:17.650
But let's just do a quick search anyway.

151
00:12:17.710 --> 00:12:22.250
Ok then we're going to go integer instead of pass double as we used before.

152
00:12:22.290 --> 00:12:26.640
We're going to use pass in OK.

153
00:12:27.690 --> 00:12:29.760
So let's create an integer variable

154
00:12:33.060 --> 00:12:34.910
we'll call it guess value.

155
00:12:35.800 --> 00:12:38.890
And that's going to be integer to pass in.

156
00:12:38.940 --> 00:12:46.240
And the thing we want to convert is our edit text don't get text

157
00:12:50.970 --> 00:12:53.720
dot to string.

158
00:12:54.810 --> 00:12:55.970
OK.

159
00:12:56.460 --> 00:13:02.240
Now we'll have the first about if statements.

160
00:13:02.450 --> 00:13:12.280
So if the guess value is greater than the random number

161
00:13:16.950 --> 00:13:19.910
then we want to display a message to the user through a toast.

162
00:13:19.980 --> 00:13:22.610
And that message is going to be I need to go lower.

163
00:13:22.740 --> 00:13:25.810
Now I could write my toast command right here.

164
00:13:26.040 --> 00:13:33.330
But actually I'm going to need that several times or rather than writing out TOSed code several times.

165
00:13:33.480 --> 00:13:43.290
I'm going to get round that by creating a string called message and then we'll just update the message

166
00:13:43.860 --> 00:13:45.360
depending on the outcome.

167
00:13:45.360 --> 00:13:51.060
And then we can have just a single TOSed command which will save us code which keeps it easier to read

168
00:13:51.330 --> 00:13:55.090
leaner and easy to update as well.

169
00:13:55.090 --> 00:14:04.750
So if their guess is too high the message is simply going to be lower else.

170
00:14:04.750 --> 00:14:17.440
Another option is that guess value is less than the random number in which case they need to go higher.

171
00:14:22.620 --> 00:14:28.760
Well the only other option is that they got it right.

172
00:14:35.500 --> 00:14:36.940
So it will say You've got it

173
00:14:40.050 --> 00:14:43.720
and then regardless of what the outcome is we want to create a toast

174
00:14:47.500 --> 00:14:55.220
and the text is simply going to be message.

175
00:14:55.250 --> 00:15:00.610
All right let's give it a gang.

176
00:15:00.680 --> 00:15:04.980
So I'm going to start by guessing 10 or higher.

177
00:15:04.980 --> 00:15:05.630
All right.

178
00:15:05.670 --> 00:15:08.530
15 lower 12.

179
00:15:08.730 --> 00:15:09.400
Lower.

180
00:15:09.480 --> 00:15:13.110
OK so it must be 11.

181
00:15:13.110 --> 00:15:15.000
Fantastic.

182
00:15:15.690 --> 00:15:16.700
Works perfect.

183
00:15:16.710 --> 00:15:21.940
The only thing it doesn't do is allow us to play again once we've got it right.

184
00:15:22.350 --> 00:15:31.470
So let's just add in a bit of code to generate a new random number when they get it right which we can

185
00:15:31.470 --> 00:15:34.970
do by just copying that code there.

186
00:15:35.280 --> 00:15:42.440
Now we could leave that as it is but we've now got the same code twice which I don't like.

187
00:15:42.900 --> 00:15:47.880
So let's get into good habits and create a method for it.

188
00:15:50.240 --> 00:15:53.900
So we'll call it generate random number

189
00:16:00.530 --> 00:16:02.060
and creates

190
00:16:06.340 --> 00:16:14.180
a new random object from which will generate a random number equal to the random number variable.

191
00:16:14.860 --> 00:16:17.670
Then we can just use generate random number there.

192
00:16:17.980 --> 00:16:20.350
And also here.

193
00:16:21.470 --> 00:16:27.460
So if we decided that we wanted the game to last a bit longer we could change that to a 50 say and we

194
00:16:27.460 --> 00:16:30.520
wouldn't have to change it twice in our code.

195
00:16:31.510 --> 00:16:38.230
So a minor timesaving in a app as simple as this but in a more complicated app sort of changes can make

196
00:16:38.230 --> 00:16:40.320
huge differences.

197
00:16:40.390 --> 00:16:43.260
So you got it.

198
00:16:43.270 --> 00:16:43.990
Try again.

199
00:16:47.460 --> 00:16:48.000
All right.

200
00:16:48.060 --> 00:16:49.550
Let's just give that a try.

201
00:16:53.540 --> 00:16:57.220
So I'm going to go for the same tactic again 10.

202
00:16:57.260 --> 00:17:00.070
We need to get higher 15 0.

203
00:17:00.110 --> 00:17:00.800
There we go.

204
00:17:00.800 --> 00:17:02.300
Got it straight away.

205
00:17:03.060 --> 00:17:07.600
Guess 15 again so now we've got a new random number.

206
00:17:07.920 --> 00:17:13.120
It's still low for still lower to still lower.

207
00:17:13.170 --> 00:17:14.310
So it must be a 1.

208
00:17:14.330 --> 00:17:15.640
We got it.

209
00:17:16.370 --> 00:17:17.450
Fantastic.

210
00:17:17.450 --> 00:17:17.840
That's it.

211
00:17:17.840 --> 00:17:21.220
So I hope you manage to do something reasonably similar to that.

212
00:17:21.230 --> 00:17:25.660
Now let's get back to our Java deep dive and learn about loops.
