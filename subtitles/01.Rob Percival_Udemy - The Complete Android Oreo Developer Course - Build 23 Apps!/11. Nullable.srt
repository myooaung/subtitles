1
00:00:00,580 --> 00:00:03,340
So in this lecture we're going to be talking about nullable.

2
00:00:03,340 --> 00:00:07,950
And if you've ever worked with swift programming before this is the same concept as optionals.

3
00:00:07,990 --> 00:00:13,180
I know this is in a couple of different programming languages but do want to go over here and we actually

4
00:00:13,180 --> 00:00:18,130
do touch on this inside of one of the Android apps but I figure we've been rolling through you might

5
00:00:18,130 --> 00:00:19,660
as well see what this is all about.

6
00:00:19,660 --> 00:00:24,770
So any time you see question marks exclamation points inside of cotland that's usually because it's

7
00:00:24,790 --> 00:00:31,780
dealing with a nullable in the basic idea is if I'm going to make something like a variable for my age

8
00:00:32,200 --> 00:00:34,930
I set it equal to like 28 or something.

9
00:00:34,930 --> 00:00:37,980
You know I should be able to change this as much as I want.

10
00:00:38,100 --> 00:00:43,810
So all of sudden my age is now 45 but if you want to make this nullable this variable here nullable

11
00:00:43,810 --> 00:00:49,030
that's so that you can eventually say something like age is equal to null and it's sort of your way

12
00:00:49,030 --> 00:00:51,490
of saying it's equal to nothing.

13
00:00:51,510 --> 00:00:53,800
And you might be wondering why like why would you do that.

14
00:00:53,800 --> 00:00:58,600
Well we typically see it in functions where it's a way to say that you know something hasn't been set

15
00:00:58,600 --> 00:01:00,350
up yet or maybe something went wrong.

16
00:01:00,340 --> 00:01:03,570
There's all sorts of different situations for this.

17
00:01:03,730 --> 00:01:08,200
But in order to make something nullable for example because this variable.

18
00:01:08,200 --> 00:01:14,770
This is a variable if I want to make it a nullable variable I have to specify here that this is of type

19
00:01:14,860 --> 00:01:21,130
int and then just simply put a question mark after it and then all of a sudden this code becomes valid

20
00:01:21,130 --> 00:01:26,880
where I can say OK age is now equal to nil and I can sort of move on from there.

21
00:01:26,890 --> 00:01:27,650
All right.

22
00:01:27,970 --> 00:01:34,900
So you can make any type that you want nullable In fact you know if we end made like our dog class for

23
00:01:34,900 --> 00:01:43,240
example and we go ahead and create a dog object var my dog I could specify that I want this to be a

24
00:01:43,240 --> 00:01:49,060
dog nullable so that when I create a new dog object at some point if I want to say you know what dog

25
00:01:49,060 --> 00:01:52,920
you are no longer existing I can set it equal to null.

26
00:01:52,960 --> 00:01:54,200
That's totally valid.

27
00:01:54,250 --> 00:01:54,700
OK.

28
00:01:55,000 --> 00:02:01,090
So you might be wondering OK well how is this going to affect my code like what do I need to know in

29
00:02:01,090 --> 00:02:02,260
order to work through this.

30
00:02:02,260 --> 00:02:09,120
Well something to note here is let's say for example you want to turn something unknowable.

31
00:02:09,130 --> 00:02:11,390
You can do that by saying age.

32
00:02:11,470 --> 00:02:16,030
In this case which is knowable and then do two exclamation points after it and that's why if you're

33
00:02:16,030 --> 00:02:21,920
saying I'm going to turn this into a non-nil I guess calling it non-nil assertion.

34
00:02:21,960 --> 00:02:27,520
But you know just to kind of prove what's going on here if I say create a new variable called like new

35
00:02:28,090 --> 00:02:31,530
number and I set this equal to age as I type.

36
00:02:31,570 --> 00:02:33,830
Start typing out new number.

37
00:02:33,940 --> 00:02:36,550
You can see over here that it's type isn't it.

38
00:02:36,790 --> 00:02:42,420
Nullable but if I say age when I first set something into a new number if I do age exclamation point

39
00:02:42,430 --> 00:02:43,850
exclamation point.

40
00:02:43,870 --> 00:02:49,590
Now when I type out new number it's just a straight up and object so that's kind of how that can work.

41
00:02:49,600 --> 00:02:55,100
You can unwrap neoliberals if you want to you know check and see if something is known or not.

42
00:02:55,120 --> 00:03:02,050
Probably the most typical way to do something like this is you say all right if in parentheses age is

43
00:03:03,190 --> 00:03:10,990
not equal to M. Then you can go ahead and then print the C's write some code and that's in this situation

44
00:03:10,990 --> 00:03:15,610
that you're then safe to say something you know like Ades exclamation point exclamation point because

45
00:03:15,610 --> 00:03:21,420
now you know for sure OK this thing is not equal to Nolte's when I put two exclamation points there.

46
00:03:21,550 --> 00:03:27,030
I know for sure that there's an actual number inside of there and it's not equal to nil.

47
00:03:27,130 --> 00:03:27,810
OK.

48
00:03:28,090 --> 00:03:33,480
So those are the basics what I'm going to do for you is just provide a very simple challenge.

49
00:03:33,670 --> 00:03:39,340
I really think you're going to want to see what Knolles in nullable stuff looks like in the quote unquote

50
00:03:39,340 --> 00:03:44,440
wild as you program as we work through our different projects one example that I guess I'll show you

51
00:03:44,440 --> 00:03:52,020
before the challenge here is let's say I make a dictionary or a map I keep referring to it as a dictionary.

52
00:03:52,090 --> 00:04:01,120
Let's say you know the variable dogs map and I set this equal to map of and I'll provide something like

53
00:04:01,360 --> 00:04:04,890
you know Feydeau to and then do that.

54
00:04:04,900 --> 00:04:06,890
This is kind of an example we had earlier right.

55
00:04:06,940 --> 00:04:12,810
So let's say I try and pull something out of this dog's map but I give it a key that doesn't exist like

56
00:04:12,820 --> 00:04:20,590
I just try to pass and something like ABC if I go ahead in print what's going to come out of here.

57
00:04:21,550 --> 00:04:23,230
You'll notice that it will be a no.

58
00:04:23,230 --> 00:04:29,920
Because this is kind of a good example of that where you know and map says hey you pass me a key here

59
00:04:29,950 --> 00:04:35,910
ABC that doesn't exist inside of this map so I'm not sure what to give you back so it gives back Noal

60
00:04:35,920 --> 00:04:41,210
is sort of its way of saying that thing does not exist and you can really see this.

61
00:04:41,310 --> 00:04:46,810
You know we put this into a new variable where we assume this would be something like the dog age you

62
00:04:46,810 --> 00:04:47,850
know is equal to this.

63
00:04:47,860 --> 00:04:54,740
If we check out the type of dog age you can see that is an innate nullable because it's saying I'm not

64
00:04:54,910 --> 00:04:57,840
for sure if that you know is going to come through or not.

65
00:04:58,000 --> 00:05:03,100
So that's kind of one I guess more concrete example that you can look to for that.

66
00:05:03,100 --> 00:05:11,620
So my challenge for you here is I want you to make very simply a string nullable that's it.

67
00:05:11,790 --> 00:05:16,770
I just want to make sure you know what the syntax is and can move forward so go ahead and do that now.

68
00:05:18,780 --> 00:05:19,220
OK.

69
00:05:19,230 --> 00:05:21,610
So hopefully that went well again.

70
00:05:21,660 --> 00:05:27,460
All you got to do is take some sort of string and set it to be a nullable.

71
00:05:27,600 --> 00:05:32,670
So I'm going to do like my fav candy which is equal to Snickers.

72
00:05:32,970 --> 00:05:33,560
All right.

73
00:05:33,650 --> 00:05:36,390
But let's say you know I want this thing to be knowable.

74
00:05:36,390 --> 00:05:37,980
I can just say all right you know what.

75
00:05:37,980 --> 00:05:45,210
This is going to be a string knowable and then it for whatever point let's say I'm going on some sort

76
00:05:45,210 --> 00:05:47,380
of crazy diet where I don't eat sugar.

77
00:05:47,390 --> 00:05:51,530
I can now all of a sudden say I don't have a favorite candy anymore because I don't eat that.

78
00:05:51,960 --> 00:05:55,980
But hopefully that never comes for me because I love candy.

79
00:05:56,250 --> 00:05:56,630
All right.

80
00:05:56,640 --> 00:06:00,000
So that give you a nice little introduction into Nolla.

81
00:06:00,060 --> 00:06:03,200
Again one more lecture here to talk about Cartland and Java.

82
00:06:03,210 --> 00:06:06,030
How you could integrate it into an existing project.

83
00:06:06,270 --> 00:06:08,130
And we'll talk about that in the next one.
