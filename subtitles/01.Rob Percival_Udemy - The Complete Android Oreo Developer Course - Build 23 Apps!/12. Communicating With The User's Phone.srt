1
00:00:00,680 --> 00:00:05,040
In this lecture we're going to be talking about a really interesting topic which is how we can get a

2
00:00:05,070 --> 00:00:11,440
watch and a phone to talk back and forth with each other and it is simpler than you think it might be.

3
00:00:11,460 --> 00:00:14,440
In fact I think Android has done a great job with this.

4
00:00:14,460 --> 00:00:20,180
I've worked on the iOS side of things with how to communicate between iOS app and an Apple Watch app

5
00:00:20,190 --> 00:00:21,900
and I think this is much much cleaner.

6
00:00:21,900 --> 00:00:23,970
So props to Android for this.

7
00:00:24,030 --> 00:00:26,170
So let's go ahead and start a new project.

8
00:00:26,310 --> 00:00:28,570
You can go ahead and call this whatever you like.

9
00:00:28,590 --> 00:00:36,860
I'm just going to maybe call this watch and phone fun and we'll go ahead and hit next here.

10
00:00:36,870 --> 00:00:42,520
Now the important thing here is this is something you know sort of new that we haven't done before.

11
00:00:42,540 --> 00:00:47,130
We're going to have both a phone app and we're going to have where apps are going to put both of these

12
00:00:47,190 --> 00:00:51,990
API I-26 just to have the latest and greatest on both.

13
00:00:51,990 --> 00:00:56,880
And this will be interesting you'll see here first it's going to ask us what activity you want for the

14
00:00:57,150 --> 00:01:00,740
phone side of things and I'll say empty activity that seems fine.

15
00:01:00,810 --> 00:01:03,850
Then it asks also for the ware app.

16
00:01:03,870 --> 00:01:05,990
You know what do you want there and same thing.

17
00:01:05,990 --> 00:01:10,000
I just want blank activities ready to rock and roll.

18
00:01:10,080 --> 00:01:14,140
So we'll go ahead and move forward with that.

19
00:01:14,460 --> 00:01:19,710
And unfortunately this is going to be another situation where we can't really test this out on the emulators

20
00:01:19,710 --> 00:01:20,850
to see what it would look like.

21
00:01:20,850 --> 00:01:26,900
You have to have an actual Android Wear device in order to do that but we'll get pretty far here with

22
00:01:26,970 --> 00:01:30,180
walking through the code and if you were to run this it would work.

23
00:01:30,180 --> 00:01:37,170
So let's go ahead first we're going to start on the watch side of things so we're going to go to your

24
00:01:37,170 --> 00:01:44,940
main activity that is included here for that extends wearable activity because this is where the basic

25
00:01:44,940 --> 00:01:50,370
idea here is that we'd have some piece of information that we want to send from the watch to the phone.

26
00:01:50,370 --> 00:01:56,490
So let's say on your watch you know you had selected a friend maybe from that friend list that we had

27
00:01:56,490 --> 00:01:57,150
done earlier.

28
00:01:57,150 --> 00:01:57,870
Right.

29
00:01:57,870 --> 00:02:05,340
So let's say you have a string here that we're going to call friend and this is equal to Bob or something

30
00:02:05,340 --> 00:02:05,820
like that.

31
00:02:05,850 --> 00:02:06,450
OK.

32
00:02:06,810 --> 00:02:09,690
So we have a friend Bob that has been selected on the watch.

33
00:02:09,690 --> 00:02:14,850
That's what we're just kind of setting up here and we want to send this to the phone app.

34
00:02:14,850 --> 00:02:16,890
Well how do we do that.

35
00:02:16,920 --> 00:02:21,960
So it's going to be through something called a put data map request and let me just go ahead and walk

36
00:02:21,960 --> 00:02:24,180
you through how to create one of those.

37
00:02:24,210 --> 00:02:31,020
So we're going to make a new put data map request just like that and we're going to give it some sort

38
00:02:31,020 --> 00:02:36,480
of name I'm going to call it just lower case put data map request simple enough I'm going to say this

39
00:02:36,480 --> 00:02:39,380
is equal to in capital.

40
00:02:39,390 --> 00:02:46,620
Put a map request and then we're going to do dot create and then this is kind of interesting and you

41
00:02:46,620 --> 00:02:50,850
can create directories where you want to be storing this information.

42
00:02:50,850 --> 00:02:54,660
So if you hadn't that that did a lot of different things like you might want to have a directory for

43
00:02:54,660 --> 00:03:00,260
images one for data and one for you know X-amount whatever it is that your story in there.

44
00:03:00,270 --> 00:03:05,850
But in this case we're just going to have one general one called data so we're just going to do a forward

45
00:03:05,850 --> 00:03:07,890
slash data just like that.

46
00:03:07,950 --> 00:03:08,840
OK.

47
00:03:09,300 --> 00:03:15,030
So this is saying we're making this new put data map request and we want to save it at a location in

48
00:03:15,030 --> 00:03:16,520
a directory called data.

49
00:03:16,740 --> 00:03:23,430
So once we have that there we're going to take this put data map request and we're going to say get

50
00:03:23,790 --> 00:03:31,570
data map dot put string and you can see there's all different types that you could add onto here ints

51
00:03:31,640 --> 00:03:34,430
floats strings longs bytes.

52
00:03:34,430 --> 00:03:36,620
But in this case we just want to put a string.

53
00:03:36,860 --> 00:03:40,070
So first you have to give a name to what it is that you're trying to save.

54
00:03:40,070 --> 00:03:45,980
So this we would probably say something like a lowercase friend and then we would provide the actual

55
00:03:46,070 --> 00:03:48,410
friend string which in this case is Bob.

56
00:03:48,410 --> 00:03:51,350
So we'll go ahead and pass that in there.

57
00:03:51,620 --> 00:03:57,890
Once we've done that then we're going to create a put data request so that you can see it's mid in the

58
00:03:57,890 --> 00:04:05,480
map there but we're going to say put data request that we'll just call this put data request equal to

59
00:04:07,290 --> 00:04:14,400
put data map request dot as put data request.

60
00:04:15,060 --> 00:04:19,350
So it kind of does some conversion from a map request down to this put data request and if you're wondering

61
00:04:19,440 --> 00:04:21,030
why this is the case.

62
00:04:21,060 --> 00:04:27,420
Well this is what the Android where documentation told us and so we're just following their orders with

63
00:04:27,420 --> 00:04:33,660
this when we go ahead and send this information we want to have it come forward as something called

64
00:04:33,690 --> 00:04:34,740
a pending result.

65
00:04:34,750 --> 00:04:39,010
And so we're going to say pending result.

66
00:04:39,270 --> 00:04:46,760
And this is going to be of a particular data type here and that is capital data API.

67
00:04:46,830 --> 00:04:52,630
So go ahead and hit enter on that dot data item result.

68
00:04:52,750 --> 00:04:53,610
Okay.

69
00:04:53,760 --> 00:04:56,250
So go ahead and call this pending result.

70
00:04:56,540 --> 00:04:59,380
I will say this is equal to capital.

71
00:04:59,400 --> 00:05:12,000
Where will dot data API not put data item and we are going to get something called a Google API client

72
00:05:12,000 --> 00:05:13,260
which we have to create.

73
00:05:13,340 --> 00:05:15,660
So we're going to take a quick pause here.

74
00:05:15,690 --> 00:05:20,640
We're going to go up to the top where we have this text view which we're not really currently using

75
00:05:20,670 --> 00:05:24,080
but I don't think it's worth it to even delete it at this point.

76
00:05:24,150 --> 00:05:30,840
We're going to make a new Google API client and this is really what allows us to do the communication

77
00:05:30,840 --> 00:05:37,590
between the two devices and we'll just call this lowercase Google API client and we're going to pass

78
00:05:37,590 --> 00:05:44,850
in this Google API client that we have let's say lower lowercase Google API client and then we're going

79
00:05:44,850 --> 00:05:47,870
to add this put data request.

80
00:05:48,040 --> 00:05:53,430
So go ahead add that in there and that allows us to then send that information.

81
00:05:53,430 --> 00:05:58,260
Now in order to do this there's a few things that we've got to do with the class that we have.

82
00:05:58,260 --> 00:06:05,490
So after we extends wearable activity we're going to say this class implements we're going to do first

83
00:06:05,580 --> 00:06:16,980
data API dot data Lisner that's one that we want to add in there do a comma the next one is a Google

84
00:06:18,090 --> 00:06:28,790
API client dot connection callbacks There we go and we'll do Khama one more to add here.

85
00:06:28,790 --> 00:06:35,950
Google API client dot on connection.

86
00:06:36,010 --> 00:06:42,070
Oh forgot my capital on connection failed listeners so that's in case things didn't work out.

87
00:06:42,080 --> 00:06:45,250
So with all these things in place we're going to get this red air.

88
00:06:45,250 --> 00:06:49,340
But if we go ahead and hover over this with this light bulb we can say hey go implement the methods

89
00:06:49,340 --> 00:06:55,070
for this we'll go ahead and hit OK there and you can see we get all these awesome results here that

90
00:06:55,070 --> 00:07:01,670
say whenever and these basically tell us hey when their connection has started when it's lost if it's

91
00:07:01,670 --> 00:07:04,370
failed or when we start getting some data or stuff.

92
00:07:04,370 --> 00:07:09,740
These are functions that we can use to kind of maintain the communication between the two devices.

93
00:07:09,740 --> 00:07:17,330
So this is going to right now we're only simulating you know sending data from the watch up to the actual

94
00:07:17,330 --> 00:07:17,960
phone.

95
00:07:18,110 --> 00:07:21,870
But this is going to get us to a great starting place.

96
00:07:21,890 --> 00:07:28,040
So with this we still have an air here and that's because we actually have the wrong pending result.

97
00:07:28,040 --> 00:07:34,280
In fact if we go up here to import and we go ahead and look at this is in the broadcast receiver We

98
00:07:34,280 --> 00:07:41,060
just want to go ahead and delete that and we're going to change this to be just a pending result.

99
00:07:41,370 --> 00:07:46,280
And we've got to make sure now as we type out this pending result we want to get the one that comes

100
00:07:46,280 --> 00:07:50,990
here from the Compaq Google Android long list there.

101
00:07:50,990 --> 00:07:54,770
So make sure you have that in place and that should get rid of your.

102
00:07:54,830 --> 00:07:59,870
Now with this all in place this will be able to send the information and we can have some awesome communication

103
00:07:59,870 --> 00:08:01,430
with the phone here.

104
00:08:01,430 --> 00:08:07,670
But we want to do essentially the same thing over on the phone side so I'm going to copy all this code

105
00:08:07,670 --> 00:08:15,580
that we did for the implements and we'll go ahead and copy that and come now to the actual phone device.

106
00:08:15,800 --> 00:08:22,340
Then after we do the extends we'll go ahead and say OK there now we've implemented that and we're going

107
00:08:22,340 --> 00:08:27,770
to get the same error here saying hey you've got to you know implement these methods all say OK implement

108
00:08:27,770 --> 00:08:32,900
methods and that's going to go at the appropriate methods there for us.

109
00:08:32,900 --> 00:08:39,770
Now in order for this phone app to listen to the watch for any information that's coming through we

110
00:08:39,770 --> 00:08:43,970
have to set up a Google API client just like we had done earlier.

111
00:08:43,970 --> 00:08:51,320
So we're going to set up a Google API client the world's called Google API client here inside of her

112
00:08:51,320 --> 00:08:52,030
and create.

113
00:08:52,130 --> 00:08:57,890
We're going to set up some listeners and different things here so to say Google API client is equal

114
00:08:58,460 --> 00:09:01,900
to new capital Google API client.

115
00:09:02,150 --> 00:09:06,320
And with this we don't want a hole that we just cut here.

116
00:09:06,320 --> 00:09:13,460
So let's go ahead and say we want the new Google API client and then dot builder.

117
00:09:13,640 --> 00:09:18,860
And this is where we're going to set this up so we're going to first pass in this next thing after that

118
00:09:18,950 --> 00:09:25,720
is we're going to do dot and we want to add an API so the API we're looking for is the wearable stuff

119
00:09:25,730 --> 00:09:30,010
so we're going to say wearable DOD API just like that.

120
00:09:30,340 --> 00:09:36,890
Then we're going to say Dot add connection callbacks.

121
00:09:36,890 --> 00:09:37,900
There we go.

122
00:09:38,150 --> 00:09:43,000
And we're going to pass in this for that we're basically saying look to this class for all your information

123
00:09:43,010 --> 00:09:45,700
like when you get back information send it here.

124
00:09:45,710 --> 00:09:49,340
And again we're going to have to add an add on.

125
00:09:49,340 --> 00:09:51,620
Connection failed listener.

126
00:09:51,620 --> 00:09:55,670
We want that to be this and then we'll do a build.

127
00:09:55,840 --> 00:09:56,490
OK.

128
00:09:56,600 --> 00:10:01,460
So if you wanted to get all this information back on the watch device you would have been sending that

129
00:10:01,460 --> 00:10:03,050
up inside of uncreate there.

130
00:10:03,060 --> 00:10:07,010
But in this situation we're just trying to send it over to this activity.

131
00:10:07,070 --> 00:10:14,090
So we'll get all of this set up in place and then we're going to come down and implement some functionality

132
00:10:14,240 --> 00:10:15,830
on these methods.

133
00:10:15,830 --> 00:10:18,920
So there's a few things to set up here.

134
00:10:18,950 --> 00:10:24,770
The first one really is just that in this unconnected if this is all working then we want to set up

135
00:10:24,770 --> 00:10:25,450
our listener.

136
00:10:25,460 --> 00:10:28,670
This is when it first connects with the watch device.

137
00:10:28,670 --> 00:10:34,770
So we're going to go ahead and say wearable dot capital data API.

138
00:10:35,110 --> 00:10:41,730
And listener and inside of here we want to pass in that Google API client and we also want to pass in

139
00:10:41,780 --> 00:10:42,510
this.

140
00:10:42,540 --> 00:10:44,560
So it's saying hey we've made a connection.

141
00:10:44,600 --> 00:10:51,740
Now we're going to be listening for any data and it's up to us inside of this on data changed method

142
00:10:51,800 --> 00:10:55,720
to then take the appropriate data and handle it accordingly.

143
00:10:55,730 --> 00:10:59,390
So you'll see what we get from this is a data event buffer.

144
00:10:59,420 --> 00:11:03,780
So we're going to use this to turn it into some actual data.

145
00:11:04,400 --> 00:11:09,890
So first thing that we're going to do is a for loop where we can go ahead and move through everything

146
00:11:09,890 --> 00:11:12,280
inside of that data buffer.

147
00:11:12,470 --> 00:11:21,290
So we're going to say for data event and we'll go ahead and call this just an event.

148
00:11:21,300 --> 00:11:27,280
Colon data event buffer this will go ahead and loop through all the data that we're getting now we're

149
00:11:27,280 --> 00:11:43,570
going to say if set up if statement here if event get type is equal to capital data event dot an all

150
00:11:43,570 --> 00:11:45,190
caps type changed.

151
00:11:45,200 --> 00:11:45,730
OK.

152
00:11:46,060 --> 00:11:50,430
So to say if you know we have some sort of new data we want to know about that.

153
00:11:50,560 --> 00:11:58,150
We're going to create a new data item and we're going to simply call this item and this is going to

154
00:11:58,150 --> 00:12:04,010
be equal to an event dot get data item.

155
00:12:04,140 --> 00:12:10,230
So with that in place we'll go ahead and do an if statement here and the next thing that we want to

156
00:12:10,230 --> 00:12:17,250
be checking for is to make sure that this information is coming from the correct path.

157
00:12:17,250 --> 00:12:21,460
And so remember here when we said you know we want to do this in the slash data directory.

158
00:12:21,690 --> 00:12:23,490
That's all we're going to confirm here.

159
00:12:23,820 --> 00:12:33,140
So we're going to say item not yet you are I dot get path as we go.

160
00:12:33,300 --> 00:12:40,200
Compared to how we're going to pass in our slash data just like we had done on the other activity and

161
00:12:40,200 --> 00:12:43,070
see if this is equal to zero.

162
00:12:43,080 --> 00:12:48,210
So if this is the case this means we actually have some data there and we can now go ahead and create

163
00:12:48,240 --> 00:12:56,640
a data map which will just call lower data map and this we can get that data map by saying Capitol data

164
00:12:56,700 --> 00:13:04,620
map item data map item dot from data item.

165
00:13:04,620 --> 00:13:11,060
We're going to pass in our item and then we'll see it get data a map.

166
00:13:11,070 --> 00:13:17,420
So a lot of work here but that eventually gives us this data map which then we can simply say lower

167
00:13:17,420 --> 00:13:20,280
case data map dot get.

168
00:13:20,280 --> 00:13:23,670
And you can see we can get bite's booleans double's floats.

169
00:13:23,670 --> 00:13:28,100
It's just like you know we could have set them before but we can also get a string.

170
00:13:28,110 --> 00:13:32,250
So we're going to get a string for the term friend.

171
00:13:32,420 --> 00:13:33,040
OK.

172
00:13:33,360 --> 00:13:36,880
So if we do that we could then you know put this inside of a new string.

173
00:13:36,930 --> 00:13:43,950
We could say you know something like string friend is equal to this and then we're free to use friend.

174
00:13:43,950 --> 00:13:45,420
However it is we would like.

175
00:13:45,420 --> 00:13:50,550
So we'll just kind of leave a comment here that says Use friend.

176
00:13:50,550 --> 00:13:51,320
So there you have it.

177
00:13:51,330 --> 00:13:56,940
This is the full steps that you need in order to take something from your where device here like the

178
00:13:56,940 --> 00:13:57,790
string Bob.

179
00:13:57,980 --> 00:14:03,750
You go ahead and get it inside of this data request and we send it out comes over here because we've

180
00:14:03,750 --> 00:14:09,870
set up this Google API client and we set up all these listeners once we have a connection we add that

181
00:14:10,320 --> 00:14:14,400
and then we can go ahead and sort of breakthrough and get that information.

182
00:14:14,400 --> 00:14:18,140
So a little bit wordy with all the information that we've got to put out.

183
00:14:18,150 --> 00:14:23,180
But essentially once this is here we now have open communication between the two devices.

184
00:14:23,180 --> 00:14:23,820
OK.

185
00:14:24,210 --> 00:14:25,860
So I hope you enjoyed learning about that.

186
00:14:25,860 --> 00:14:30,000
We have covered a lot here with Android Wear but still a little bit more to cover.

187
00:14:30,150 --> 00:14:31,800
So let's keep moving forward.
