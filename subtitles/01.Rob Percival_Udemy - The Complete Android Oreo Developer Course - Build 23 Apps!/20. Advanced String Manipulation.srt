1
00:00:00,360 --> 00:00:05,130
Hello and welcome to the lecture where we're gonna do a little bit of prep work before we dive into

2
00:00:05,130 --> 00:00:07,320
making our guest the celebrity app.

3
00:00:07,590 --> 00:00:13,140
Basically in order to get all these celebrities and get the right information and images and stuff like

4
00:00:13,140 --> 00:00:17,820
that we're going to have to be able to work with text and be a little bit more advanced with how we

5
00:00:17,820 --> 00:00:18,800
can work with string.

6
00:00:18,810 --> 00:00:26,340
So there's this Web site that I found posh 24 dot SC slash Candace SA 4.

7
00:00:26,820 --> 00:00:31,170
I'm not exactly sure the whole background behind the site but they seem to have a top one hundred of

8
00:00:31,170 --> 00:00:34,320
celebrities who knows how they go ahead and choose these.

9
00:00:34,540 --> 00:00:40,980
But this is gonna be a great resource for us to say oh look here's the top 100 celebrities and pictures

10
00:00:41,070 --> 00:00:41,800
of them.

11
00:00:41,910 --> 00:00:49,110
Now in order to get access to them if we go ahead and inspect the page source again depending if you're

12
00:00:49,110 --> 00:00:53,040
Chrome or Firefox it might be different how you get to that but if you right click you should be able

13
00:00:53,040 --> 00:00:54,360
to see that.

14
00:00:54,360 --> 00:00:59,460
But at some point you know if you scroll down here you can see there's like different sections for everybody

15
00:00:59,470 --> 00:01:04,940
so here's like the Taylor Swift section and here's the link to the image of her.

16
00:01:05,100 --> 00:01:11,760
And then also in the alt tag like there's her name and so there's Taylor Swift and then Blake Shelton

17
00:01:12,120 --> 00:01:18,420
and then Sophia Ritchie and like if you just kind of go down through here like you can see each celebrity

18
00:01:18,420 --> 00:01:24,530
has their own little thing and so it's our job to be able to find sort of take this whole H team and

19
00:01:24,570 --> 00:01:30,810
document as a big string and pass it to say Oh hey what's the you are all for this celebrity and what

20
00:01:30,810 --> 00:01:36,720
is the name for the celebrity if we can do that we're gonna be able to make our next app so in order

21
00:01:36,720 --> 00:01:42,990
to learn this we're gonna move over to brow x y dot com just to get a little bit of practice here so

22
00:01:42,990 --> 00:01:48,960
let's go ahead and hit try on the hello world thing and hit start just to get this up and running and

23
00:01:50,040 --> 00:01:55,050
that looks really weird on my computer how all that Texas laid out and then open up maybe something

24
00:01:55,050 --> 00:02:02,010
like Firefox and we'll open up the same Web site but just so that you can see it a little bit better

25
00:02:02,010 --> 00:02:05,050
there at the try button.

26
00:02:05,100 --> 00:02:06,930
Yeah that's looking a lot better.

27
00:02:07,100 --> 00:02:08,100
Guess I'll hit start.

28
00:02:08,100 --> 00:02:10,250
Make sure we get the proper output there.

29
00:02:10,260 --> 00:02:10,550
Yep.

30
00:02:10,620 --> 00:02:11,130
Looks good.

31
00:02:11,490 --> 00:02:16,020
Now the first thing that I want to show you is how we can split a string which is basically taking a

32
00:02:16,020 --> 00:02:19,530
big string and splitting it into smaller pieces.

33
00:02:19,530 --> 00:02:23,210
So in order to do that we have to make our big string first.

34
00:02:23,550 --> 00:02:29,490
So I'm going to go ahead and make a string and I'll simply just call my string and I'll set this equal

35
00:02:29,490 --> 00:02:40,610
to basically a bunch of names so I'm going to have Nick X Sean X Fido X Sarah.

36
00:02:40,650 --> 00:02:46,110
So I'm sort of just listing out a bunch of names with sort of these X's in between and then what we

37
00:02:46,110 --> 00:02:51,660
can do is we can split this string into smaller pieces and what that actually does is it gives us a

38
00:02:51,660 --> 00:02:52,980
string array.

39
00:02:52,980 --> 00:02:57,990
So when I say string with the square brackets which gets us the string array and we're going to call

40
00:02:57,990 --> 00:03:05,420
this may be split string and this will be equal to my string right.

41
00:03:05,460 --> 00:03:11,580
This variable that we just created up there dot split.

42
00:03:11,580 --> 00:03:17,340
And with that we have to say how it is that we want to split the string up and in this case we want

43
00:03:17,340 --> 00:03:21,360
to go ahead and split it up by X or we're saying hey wherever there's an X that's where you should cut

44
00:03:21,360 --> 00:03:22,100
this up.

45
00:03:22,260 --> 00:03:28,290
I forgot the semicolon up there but if we've successfully done this we should be able to print it out

46
00:03:28,290 --> 00:03:30,450
and see what this array looks like.

47
00:03:30,450 --> 00:03:36,870
Now in order to do that we're gonna have to import some core code here so when I say import Java dot

48
00:03:36,900 --> 00:03:40,950
you till dot capital arrays.

49
00:03:41,130 --> 00:03:50,040
All right then we'll come down here and say system dot out the print line and we are going to print

50
00:03:50,040 --> 00:04:02,490
out arrays with an S dot to capital string and inside of there we're going to add these split string.

51
00:04:02,740 --> 00:04:07,020
Let me make sure I don't forget my capital there and the semicolon.

52
00:04:07,020 --> 00:04:13,870
So let's go ahead and hit start here and when we do this C we're loading look at that.

53
00:04:13,900 --> 00:04:22,060
We have Nick Sean Fido Sarah and it looks pretty good although we do have one issue and it's you know

54
00:04:22,060 --> 00:04:27,550
there's kind of some random spaces like why is there space in front of Sean and you know Fido and like

55
00:04:27,550 --> 00:04:30,510
space in front Sarah but not after but there was space after Nick.

56
00:04:30,520 --> 00:04:32,340
Like it's kind of weird right.

57
00:04:32,350 --> 00:04:38,800
Well the issue is is when we do a split you basically say whenever you find this character take whatever

58
00:04:38,800 --> 00:04:43,810
was before it and you know put a slice and then you know start taking whatever after it.

59
00:04:43,810 --> 00:04:49,420
So if we literally are slicing on these X pieces we're getting Nick space and then we're getting space

60
00:04:49,480 --> 00:04:53,690
Sean space space Fido space and space Sarah.

61
00:04:53,830 --> 00:04:58,970
So if we want to fix this we can go into the head and say oh let's go ahead and split on space x space

62
00:04:58,970 --> 00:05:02,820
so then it will take you know anything that's in between those two.

63
00:05:02,890 --> 00:05:10,140
So let's go ahead and hit start and you'll notice when we do this it's just very simply Nick.

64
00:05:10,160 --> 00:05:11,630
Sean Fido Sarah.

65
00:05:11,660 --> 00:05:15,070
We don't have any of the extra spaces in there.

66
00:05:15,110 --> 00:05:18,230
All right so let's go ahead and try this with an actual word here.

67
00:05:18,230 --> 00:05:19,340
This will be a little bit fun.

68
00:05:19,340 --> 00:05:26,390
So we're gonna make a new string here and it's gonna be Mississippi for the Mississippi Roper so am

69
00:05:26,410 --> 00:05:35,330
I SSI SSI P P I that was the little song I learned on the playground but so we're gonna make this new

70
00:05:35,330 --> 00:05:36,340
string called River.

71
00:05:36,350 --> 00:05:41,880
That's Mississippi and let's say we want to split this string everywhere that there's an S..

72
00:05:41,930 --> 00:05:43,920
So let's go ahead and put an s in here.

73
00:05:44,000 --> 00:05:49,520
So we're gonna take this new string River and we're going to split it wherever there's an S and then

74
00:05:49,520 --> 00:05:54,200
we'll still call the split string and go ahead and print that out but go ahead hit the start button

75
00:05:54,200 --> 00:05:57,590
here and you'll notice it's pretty interesting with what we get.

76
00:05:57,590 --> 00:05:59,200
So we have M I.

77
00:05:59,210 --> 00:06:01,070
And then then s come so you would expect that.

78
00:06:01,070 --> 00:06:01,280
Right.

79
00:06:01,280 --> 00:06:07,640
Like we do a split here but then there's another S and there's no characters or anything in between

80
00:06:07,640 --> 00:06:07,720
it.

81
00:06:07,720 --> 00:06:13,010
So the next object we get in this array of strings is actually an empty string like there's just nothing

82
00:06:13,040 --> 00:06:13,960
inside of it.

83
00:06:14,030 --> 00:06:18,620
Then there's an eye and you know then there's another S so then we get like an empty string and then

84
00:06:18,620 --> 00:06:20,830
there's the I BPI.

85
00:06:20,870 --> 00:06:28,130
So when you're doing a split you need to know that it is possible to get you know empty strings inside

86
00:06:28,130 --> 00:06:31,590
of there if you have two things right up next to each other.

87
00:06:31,610 --> 00:06:38,940
Now the next thing that I want to talk about is let's keep this string for the River Mississippi.

88
00:06:39,230 --> 00:06:45,500
But rather than doing a split on this we can actually go get a substring which is a way to just get

89
00:06:45,500 --> 00:06:51,560
a portion of the bigger string and so we're gonna go ahead and create a new string which we'll call

90
00:06:51,620 --> 00:06:52,970
river part.

91
00:06:52,970 --> 00:06:59,600
And this is going to be equal to the river string dot and then we're gonna type out sub string.

92
00:06:59,600 --> 00:07:04,810
And this allows us to provide you know the numbers of where it is that we want to cut this.

93
00:07:04,810 --> 00:07:11,970
So for example if I put it to column five I'll go ahead and run this and you'll see what we get here.

94
00:07:12,160 --> 00:07:13,770
And we want to now print out.

95
00:07:14,030 --> 00:07:17,480
River part instead of doing this whole arrays to string stuff.

96
00:07:17,480 --> 00:07:20,310
So let's go ahead and run that and there we go.

97
00:07:20,310 --> 00:07:21,280
We get SSI.

98
00:07:21,300 --> 00:07:22,770
So here's basically what's happening.

99
00:07:22,770 --> 00:07:27,690
So when you get these substring of a string you the first number that you provide is where you want

100
00:07:27,690 --> 00:07:28,500
to start.

101
00:07:28,500 --> 00:07:35,130
So if we start counting this with a zero based index we'd go 0 1 2 and that would give us this beginning

102
00:07:35,190 --> 00:07:39,030
s and then the second number that we provide is where it is that you want to stop.

103
00:07:39,030 --> 00:07:43,420
So 0 1 2 3 4 5.

104
00:07:43,470 --> 00:07:48,570
It's basically the second ask but it doesn't include that one it's basically saying that's where I want

105
00:07:48,570 --> 00:07:48,990
to stop.

106
00:07:48,990 --> 00:07:54,390
So if we say 0 1 2 3 4 and then stop before we use 5.

107
00:07:54,390 --> 00:07:55,500
That's how that works.

108
00:07:55,500 --> 00:07:56,210
OK.

109
00:07:56,310 --> 00:07:58,110
So a little bit of a challenge for you.

110
00:07:58,140 --> 00:08:03,930
I want you to write the code so that you can go get the term from this string.

111
00:08:03,940 --> 00:08:09,750
I SSI so I want you to get back to substring of I S S I can.

112
00:08:09,750 --> 00:08:13,850
Go ahead hit pause on your video and write the code in order for that to happen.

113
00:08:13,890 --> 00:08:16,910
Now OK.

114
00:08:17,000 --> 00:08:18,330
So hopefully that went well for you.

115
00:08:18,890 --> 00:08:21,440
You would have had to just count on this thing.

116
00:08:21,440 --> 00:08:24,010
So there's two ISIS size that you could choose.

117
00:08:24,020 --> 00:08:26,540
So the first one would be 0 1.

118
00:08:27,140 --> 00:08:32,660
So we changed this to one and then we go 0 1 2 3 4 5.

119
00:08:32,660 --> 00:08:33,890
We'd keep that at five.

120
00:08:34,250 --> 00:08:37,580
If we go ahead and run that we get EI SSI.

121
00:08:37,670 --> 00:08:42,680
There's also a second I SSI there and that's 0 1 2 3 4.

122
00:08:42,770 --> 00:08:50,420
So we could put a four inside of there and then go fives five six seven eight so eight is that p we

123
00:08:50,420 --> 00:08:53,150
don't want the P so we'll put eight.

124
00:08:53,150 --> 00:08:54,650
That's our stopping point.

125
00:08:54,710 --> 00:08:59,750
So if we do four and eight for example that will also give us EI SSI.

126
00:08:59,950 --> 00:09:01,190
OK.

127
00:09:01,610 --> 00:09:09,530
So pretty cool how that all works there but there's still yet another way that we can work with these

128
00:09:09,710 --> 00:09:14,510
strings which is pretty cool and it's something called regex and Reg X is really powerful it's not something

129
00:09:14,510 --> 00:09:21,500
unique to Java you it can be used in almost any programming language regex stands for regular expressions

130
00:09:21,770 --> 00:09:22,710
if you'd like to know more.

131
00:09:22,710 --> 00:09:24,580
There's some awesome tutorials online.

132
00:09:24,620 --> 00:09:30,260
If you just search regex plenty of information out there and it can get really complicated really quickly

133
00:09:30,260 --> 00:09:34,880
which is why I don't want to get too intensive with it but I'm gonna show you how we can use it because

134
00:09:34,880 --> 00:09:41,330
the big goal that we have is we want to be able to get all the information about these celebrities and

135
00:09:41,380 --> 00:09:47,420
you know put that into usable information for us so we're gonna keep this string river.

136
00:09:47,420 --> 00:09:50,960
But now we're going to sort of dissect it using regex.

137
00:09:51,350 --> 00:09:54,690
So the first thing that we need to do is we need to create something called a pattern.

138
00:09:55,100 --> 00:10:00,980
So just type out capital pattern and we'll give it the name of P. and we're gonna say capital pattern

139
00:10:01,700 --> 00:10:05,210
dot compile.

140
00:10:05,330 --> 00:10:11,990
And with this we are going to then provide a string inside of here and this is where the actual regex

141
00:10:11,990 --> 00:10:12,800
lives.

142
00:10:12,800 --> 00:10:15,500
So let me go ahead and make some space here.

143
00:10:15,590 --> 00:10:20,180
So inside of this string we need to say what the beginning part that we're looking for so let's say

144
00:10:20,480 --> 00:10:25,700
we want to get everything between M I NPI we want to get the rest of the string that's in the middle

145
00:10:25,700 --> 00:10:29,420
of that so we can provide type out capital M I.

146
00:10:30,140 --> 00:10:35,480
And then this is where we're gonna say to parentheses and then within those parentheses we'll do dot

147
00:10:36,110 --> 00:10:38,420
star question mark.

148
00:10:38,420 --> 00:10:40,920
And then afterwards we're going to type API.

149
00:10:41,180 --> 00:10:45,740
So again don't want to get into all the nitty gritty details of regular expressions but basically what

150
00:10:45,740 --> 00:10:52,870
we're doing here is we're saying Go find it wherever you find M I then go find anything you can until

151
00:10:52,880 --> 00:10:59,840
you hit P I once you find P.I. stop and then give us back this portion so we're basically saying start

152
00:10:59,860 --> 00:11:05,980
at P.I. or start at M I wait till you find P.I. and give us everything in between those two.

153
00:11:06,100 --> 00:11:06,780
OK.

154
00:11:06,830 --> 00:11:11,270
That's what this code is doing then once you have this pattern you need to create something called a

155
00:11:11,270 --> 00:11:12,210
matter.

156
00:11:12,220 --> 00:11:20,600
So I can say match or M is equal to p dot matter and we're gonna pass in the string here.

157
00:11:20,600 --> 00:11:31,050
River OK so once we get this these pieces in place then we need to go ahead and do some code to get

158
00:11:31,050 --> 00:11:32,480
this information out.

159
00:11:32,550 --> 00:11:38,070
So we're going to do a while loop and let's go ahead do the parentheses and then the curly brackets

160
00:11:39,330 --> 00:11:46,080
in inside of here we're gonna say M which is our manager dot find with parentheses and this will basically

161
00:11:46,080 --> 00:11:50,510
go through and try and find this pattern as many times as it can.

162
00:11:50,790 --> 00:11:58,500
And then inside of here we want to do our system thought out up print line but we want to print out

163
00:11:58,920 --> 00:12:05,070
m dot group and inside of the group we're going to pass in the number one and that basically gives us

164
00:12:05,130 --> 00:12:10,030
access to this sort of whatever between M I NPI.

165
00:12:10,220 --> 00:12:16,140
OK so before we can go ahead and run this code there's a little bit that we have to import up at the

166
00:12:16,140 --> 00:12:17,370
top of our code.

167
00:12:17,370 --> 00:12:22,050
So let's go ahead and scroll up to the top here.

168
00:12:22,380 --> 00:12:34,260
We need to say import Java you still dot rejects regex capital pattern and we need to also do this for

169
00:12:34,260 --> 00:12:35,300
the matter.

170
00:12:35,400 --> 00:12:38,590
So I'll just go ahead and copy paste but change this to match.

171
00:12:38,820 --> 00:12:39,140
All right.

172
00:12:39,780 --> 00:12:41,770
So let's go ahead and run this.

173
00:12:42,000 --> 00:12:53,270
See what we get and looks like a probably misspelled something on line 10 pattern Dot.

174
00:12:54,390 --> 00:12:56,820
Oh I misspelled compile compile.

175
00:12:56,820 --> 00:12:58,620
There we go.

176
00:12:58,620 --> 00:13:00,710
Let's start here and look at that.

177
00:13:00,720 --> 00:13:03,240
We get SSI SS IP.

178
00:13:03,570 --> 00:13:09,810
So it basically just grabbed like we had said here everything between my NPI and if you notice if we

179
00:13:09,810 --> 00:13:15,080
copy this and paste it let's do it like three times so we have Mississippi Mississippi Mississippi and

180
00:13:15,090 --> 00:13:17,170
we go ahead and we run this.

181
00:13:17,340 --> 00:13:22,740
You will notice it gets printed out three times and that's because this wall loop keeps looking through

182
00:13:22,740 --> 00:13:26,970
this string until it finds it as many times as it needs to.

183
00:13:26,970 --> 00:13:27,700
OK.

184
00:13:28,020 --> 00:13:30,050
So this is pretty excellent this regex thing.

185
00:13:30,060 --> 00:13:35,040
If you haven't sort of seen the light yet let me sort of show you how this is gonna be applicable to

186
00:13:35,040 --> 00:13:36,070
what we're doing.

187
00:13:36,240 --> 00:13:40,410
If we go back to this code here where we're searching through the celebrities we need to go through

188
00:13:40,410 --> 00:13:48,240
this big thing this big string to where we can find where this images and then also where the celebrity's

189
00:13:48,240 --> 00:13:48,660
name is.

190
00:13:48,660 --> 00:13:48,900
Right.

191
00:13:48,900 --> 00:13:51,240
So we need to kind of go through each of these.

192
00:13:51,330 --> 00:13:57,510
So let's go ahead and grab Taylor Swift I like Taylor Swift and we want to grab just for example sake

193
00:13:57,540 --> 00:14:01,510
everything from this first div down to the second.

194
00:14:01,530 --> 00:14:08,850
So again if you go to this Web site patch 24 that a slash Candice SAR you need to right click into either

195
00:14:08,850 --> 00:14:14,610
inspect element or page source you just need to get to the HDL and copy this chunk here case so the

196
00:14:15,090 --> 00:14:19,760
div class image image with this source all Taylor Swift and that ending div.

197
00:14:19,770 --> 00:14:27,360
So we're going to copy that and we're going to come back to brownout x y and rather than have these

198
00:14:27,360 --> 00:14:35,540
string river we are going to have a new string called H T Mal and this is going to be equal to.

199
00:14:35,550 --> 00:14:39,950
I'll do my double quotes the semicolon and I'm going to paste in that big chunk.

200
00:14:39,960 --> 00:14:42,920
Now a couple of things one we need to get rid of the spacing.

201
00:14:43,080 --> 00:14:51,330
So go ahead and do some deleting and tell this is nice one big thing but then also there's lots of double

202
00:14:51,330 --> 00:14:56,230
quotes or double quotations inside of the string right.

203
00:14:56,220 --> 00:15:00,450
And whenever you have one like Java thinks that this is the end of the string here.

204
00:15:00,450 --> 00:15:06,450
So we need to escape those by putting a backslash and we just everywhere that we see a double quote

205
00:15:06,480 --> 00:15:13,680
If we put a backslash there we can extend this out go ahead and just keep doing that all the way.

206
00:15:13,680 --> 00:15:15,790
That should be our last one.

207
00:15:15,810 --> 00:15:16,350
There we go.

208
00:15:16,350 --> 00:15:23,670
Now this is one big string so my challenge for you is I want you to be able to find a pattern that you'll

209
00:15:23,670 --> 00:15:29,230
be able to determine what the you are L is for Taylor Swift.

210
00:15:29,330 --> 00:15:29,600
OK.

211
00:15:29,730 --> 00:15:30,590
So go ahead.

212
00:15:30,660 --> 00:15:35,310
Hit pause on the video try and get a regex pattern that gets us the U.R.L. OK.

213
00:15:35,340 --> 00:15:35,940
Hit pause.

214
00:15:35,940 --> 00:15:39,000
Now all right.

215
00:15:39,010 --> 00:15:40,660
So hopefully that went well for you.

216
00:15:40,990 --> 00:15:44,670
First what we need to do here is because we have a new String name h t AML.

217
00:15:44,830 --> 00:15:51,730
We're gonna go ahead and paste that in there and so rather than doing the MRI in the P.I. the thing

218
00:15:51,730 --> 00:15:58,170
that we should probably look for before we get the URL is this source equals with the double quote.

219
00:15:58,200 --> 00:15:58,420
OK.

220
00:15:58,450 --> 00:16:03,550
So this is in h t mail you'll see this every time before you see an image and in fact if you want to

221
00:16:03,550 --> 00:16:10,210
be even more careful you could do like this full image named source with that double quotes we'll go

222
00:16:10,210 --> 00:16:16,440
ahead and copy that in a pace that in there and then sort of the ending of the U.R.L..

223
00:16:16,450 --> 00:16:21,700
Is that double quotes will go ahead and copy that one and say that's going to be our ending portion.

224
00:16:21,730 --> 00:16:26,050
So let's go ahead and start this and hit run and look at that.

225
00:16:26,050 --> 00:16:28,600
We successfully got the U.R.L..

226
00:16:28,660 --> 00:16:34,900
So now my next challenge for you is go ahead and make it so that you can get the appropriate name for

227
00:16:34,900 --> 00:16:35,530
the celebrity.

228
00:16:35,530 --> 00:16:41,080
So in this case you should be able to do a separate rejects for Taylor Swift now for this.

229
00:16:41,080 --> 00:16:48,340
You're basically just going to write out the same code here except this time you don't have to re-establish

230
00:16:48,340 --> 00:16:53,350
pattern you can just say you know P is equal to this and Emma's equal to this but you're gonna have

231
00:16:53,350 --> 00:16:55,990
to change a regex code to go ahead and get the name.

232
00:16:55,990 --> 00:16:56,980
So go ahead.

233
00:16:56,980 --> 00:17:00,720
Hit pause now all right.

234
00:17:00,720 --> 00:17:03,120
So hopefully that went well for you.

235
00:17:03,120 --> 00:17:07,880
So when we're looking for the celebrity name we're going to do this.

236
00:17:07,960 --> 00:17:18,780
Ault equals where we escape the quotation so we'll go ahead and put that there and we still I think

237
00:17:18,810 --> 00:17:22,680
just want that double quote as our ending one so we can keep that the same.

238
00:17:22,680 --> 00:17:25,270
Let's go ahead and hit start here and look at that.

239
00:17:25,290 --> 00:17:30,050
We get the image U.R.L. and we get the celebrity name and that's it.

240
00:17:30,180 --> 00:17:36,270
With this information we are an excellent point now where we could take a whole HCM El string here and

241
00:17:36,270 --> 00:17:40,950
be able to run through and say OK I've got this celebrity image this celebrity image this celebrity

242
00:17:40,950 --> 00:17:45,570
image this name this name this name you know it's sort of we can match it up put that in an array and

243
00:17:45,600 --> 00:17:47,600
use it for our guests.

244
00:17:47,610 --> 00:17:48,680
The celebrity app.

245
00:17:48,780 --> 00:17:53,730
So with that let's go ahead and end this lecture but then move on to making that app.
