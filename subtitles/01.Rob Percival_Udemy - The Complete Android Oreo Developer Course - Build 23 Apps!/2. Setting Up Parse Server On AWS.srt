1
00:00:00,780 --> 00:00:01,140
All right.

2
00:00:01,140 --> 00:00:05,640
So I'll go ahead and get the section all started by talking about what it is that we're trying to build.

3
00:00:05,640 --> 00:00:09,630
So we're trying to build little Instagram clone and if you don't know what Instagram is it's an app

4
00:00:09,630 --> 00:00:11,850
where you can take some pictures.

5
00:00:11,910 --> 00:00:15,160
Post those other friends can see them.

6
00:00:15,240 --> 00:00:19,410
I mean we're going to build a simple version of Instagram if we were trying to build the actual real

7
00:00:19,410 --> 00:00:25,290
deal we need like you know a team of hundreds of developers and millions and millions of dollars to

8
00:00:25,290 --> 00:00:25,930
do that.

9
00:00:26,160 --> 00:00:32,640
But it is pretty amazing with you know using technology like parce and androids to you we can get fairly

10
00:00:32,640 --> 00:00:34,980
far with just working by ourselves.

11
00:00:34,990 --> 00:00:39,000
So anyways this is the end goal of what we're moving towards.

12
00:00:39,000 --> 00:00:41,500
Now I kind of mentioned Parsa before.

13
00:00:41,700 --> 00:00:45,000
Parce is a place for us to make the whole back end for app.

14
00:00:45,000 --> 00:00:47,220
We're going to store our photos there.

15
00:00:47,250 --> 00:00:52,080
We're also going to have you know some communications about like creating user accounts and whatnot.

16
00:00:52,080 --> 00:00:58,830
So to get access to parse and learn more about it go to parse dot com.

17
00:00:58,830 --> 00:01:04,780
This is going to force you to parse platform or so parse was a company that helped you build the back

18
00:01:04,780 --> 00:01:07,800
ends for apps whether you're making an Android app an iPhone app.

19
00:01:07,800 --> 00:01:14,310
I think even worked with like Windows Phone and then Facebook acquired them and then Facebook decided

20
00:01:14,310 --> 00:01:20,190
at some point that they were going to shut this part of the business down and so they kind of gave everyone

21
00:01:20,190 --> 00:01:26,850
some time to get their apps off of parce but then they decided to open source parks.

22
00:01:26,850 --> 00:01:33,720
And so it's been pretty interesting now all the parks has been open sourced and people have been updating

23
00:01:33,720 --> 00:01:38,760
it on their own which is pretty great to see and the awesome thing about parce being open source now

24
00:01:38,760 --> 00:01:45,130
is that if you want to run this parce on your own server it is completely yours.

25
00:01:45,150 --> 00:01:45,430
Right.

26
00:01:45,430 --> 00:01:51,360
Like there's no chance of Facebook shutting this down or you know Google they have firebase of them

27
00:01:51,360 --> 00:01:57,480
shutting that down like if you use parce server that is now open sourced or on your own server you are

28
00:01:57,480 --> 00:01:59,820
in complete control of it.

29
00:01:59,940 --> 00:02:06,510
So it's obviously hasn't seen as many updates you know as it did before when you know there was a dedicated

30
00:02:06,510 --> 00:02:08,830
team working on it with money behind it.

31
00:02:08,940 --> 00:02:14,580
But still pretty impressive that you can get all this functionality in this very awesome open source

32
00:02:14,610 --> 00:02:15,210
project.

33
00:02:15,210 --> 00:02:21,650
So anyways this is what we're gonna be working with and there's all sorts of great tools there.

34
00:02:21,690 --> 00:02:25,740
The next thing is you know where are we going to host this content rank.

35
00:02:25,770 --> 00:02:27,770
I said we need to save it onto a server.

36
00:02:27,990 --> 00:02:33,600
So we are going to be doing that on the world's most popular hosting service and that's Amazon's Web

37
00:02:33,600 --> 00:02:38,400
services so you might have heard it before it's commonly referred to as AWOS.

38
00:02:38,430 --> 00:02:42,970
So just go to AWOS dot Amazon Dot com.

39
00:02:42,980 --> 00:02:48,150
Jane this is where we're going to go ahead and get all signed up and everything.

40
00:02:48,150 --> 00:02:54,630
And so again this is where we're going to host the server code is on a server here from AWOS And what's

41
00:02:54,630 --> 00:03:01,500
awesome about AWOS is they have a free tier where we can run our app and not have to pay for anything

42
00:03:01,500 --> 00:03:03,960
because it's going to be such a small footprint.

43
00:03:03,960 --> 00:03:10,000
So anyways go ahead and get moving forward by creating an AWOS account.

44
00:03:10,140 --> 00:03:15,270
Go ahead and plug in your information and then I'll rejoin you once you're finished with that.

45
00:03:15,270 --> 00:03:19,740
So while you're signing up if you're concerned when they prompt you to put in some credit card information

46
00:03:19,770 --> 00:03:23,340
they say hey we're not going to charge you unless you break the free tier if you want to know more about

47
00:03:23,340 --> 00:03:24,480
the free tier.

48
00:03:24,480 --> 00:03:29,850
Go to AWOS on Amazon.com slash free and go ahead and show you everything here.

49
00:03:29,850 --> 00:03:33,900
So Amazon E.S. is what we're going to be working with.

50
00:03:33,960 --> 00:03:37,110
And as you can see you get 12 months of free here so.

51
00:03:37,170 --> 00:03:39,300
Pretty awesome stuff.

52
00:03:39,480 --> 00:03:40,190
But anyways.

53
00:03:40,230 --> 00:03:40,900
Yes.

54
00:03:40,980 --> 00:03:45,610
Just wanted to kind of if you're having concerns like I'm not sure if I want to put in this information.

55
00:03:45,610 --> 00:03:51,330
Here's more information about the free tier which we will definitely be working inside of.

56
00:03:51,330 --> 00:03:53,010
All right once you are signed in.

57
00:03:53,040 --> 00:03:58,920
You want to go up to the top here to services and we want to click on E.C to the stands for elastic

58
00:03:58,920 --> 00:04:04,230
compute 2 and basically the idea here is that it's going to be the server that can run the parse code

59
00:04:04,230 --> 00:04:06,530
that can grow and shrink as needed.

60
00:04:06,660 --> 00:04:14,250
So with this let's go ahead and click on launch instance this is going to start a new two server with

61
00:04:14,250 --> 00:04:14,480
that.

62
00:04:14,490 --> 00:04:18,750
There's all sorts of different starting points for your server that you can come from.

63
00:04:19,020 --> 00:04:25,520
But we want to go to the AWOS marketplace here and we are simply just going to do a search for PARSE.

64
00:04:25,620 --> 00:04:31,730
So go ahead and search for PARSE and we want to get this parse server powered by bit NAMI.

65
00:04:31,770 --> 00:04:39,570
So go ahead and select this and once you're here go ahead take a look at you know the different hourly

66
00:04:39,570 --> 00:04:40,480
fees that are there.

67
00:04:40,500 --> 00:04:46,980
Like I said for we're going to be working within the free tier free tier eligible to go ahead and hit

68
00:04:46,980 --> 00:04:49,340
continue there.

69
00:04:49,350 --> 00:04:54,710
Now you want to make sure that you have this T-2 micro the one that says free tier eligible.

70
00:04:54,990 --> 00:05:00,910
We'll go ahead and move forward with that by saying review and launch.

71
00:05:01,050 --> 00:05:01,690
Okay.

72
00:05:02,070 --> 00:05:04,390
So just go ahead and hit that now.

73
00:05:04,590 --> 00:05:09,570
Once you have this in place you just want to you know kind of confirm here that this is what we're looking

74
00:05:09,570 --> 00:05:15,390
for PARSE server powered by bit NAMI and the awesome thing about this is it basically launches a server

75
00:05:15,390 --> 00:05:19,350
with this parse server code all ready to rock and roll which is pretty great.

76
00:05:19,350 --> 00:05:21,390
So we'll go ahead and hit launch.

77
00:05:21,390 --> 00:05:25,590
Now once we do this we're going to have to create this key pair.

78
00:05:25,680 --> 00:05:32,010
And so once you see this in place what we're going to do is first come here and say we want to create

79
00:05:32,010 --> 00:05:33,030
a new key pair.

80
00:05:33,030 --> 00:05:34,660
When we got to give it a name.

81
00:05:34,950 --> 00:05:42,120
So let's just go ahead and call this Instagram Android or something like that there's nothing magical

82
00:05:42,120 --> 00:05:44,420
about that name you just have to pick something.

83
00:05:44,580 --> 00:05:51,390
And once you have that go ahead and hit download key pair so that you have this on your computer you

84
00:05:51,390 --> 00:05:54,250
can see we've got that as a text file.

85
00:05:55,100 --> 00:06:02,520
And there once we have it let's go ahead and say watch instance can pull this will go through and get

86
00:06:02,520 --> 00:06:04,260
everything set up.

87
00:06:04,260 --> 00:06:10,170
This will take a little bit of time here so I'm going to go ahead and restart the video once this is

88
00:06:10,170 --> 00:06:11,500
finished.

89
00:06:11,520 --> 00:06:16,140
Now once you have that finished go ahead and click on this link so you can look at your instance.

90
00:06:16,140 --> 00:06:22,650
If you ever get lost you can always go back to services and then go to YouTube and click on the you

91
00:06:22,650 --> 00:06:26,380
know should be only one instance that you have running now.

92
00:06:26,760 --> 00:06:31,980
And once you're at this place then we want to go ahead and hit this connect button because this is going

93
00:06:31,980 --> 00:06:38,160
to allow us to log into the server which is basically just a computer that Amazon's hosting for us that

94
00:06:38,610 --> 00:06:42,650
has all this parsed code on it so go ahead and hit the connect button.

95
00:06:42,730 --> 00:06:45,150
Now there's two options here.

96
00:06:45,160 --> 00:06:51,230
There's a standalone S-sh client and a Java S-sh client and you're saying well what's an S-sh client.

97
00:06:51,540 --> 00:06:59,070
Well a S-sh client allows us to communicate with the computer and it does it via text so if you've ever

98
00:06:59,070 --> 00:07:03,280
used the terminal on a Mac I'll go ahead and open it up here.

99
00:07:03,300 --> 00:07:09,730
This is also like the command prompt in Windows where you just via text are interfacing with the computer.

100
00:07:09,810 --> 00:07:13,680
That's how you work with your server here on A.W..

101
00:07:13,680 --> 00:07:21,150
So unfortunately the Java client really doesn't work as well as it claims to be so we want to go ahead

102
00:07:21,150 --> 00:07:28,260
and use the standard standalone S-sh client so you're going to have to find one on your computer so

103
00:07:28,260 --> 00:07:29,760
on the Mac it's the terminal.

104
00:07:29,760 --> 00:07:34,880
So if you go ahead and do a command spacebar to open up spots spotlight just go ahead and search for

105
00:07:34,890 --> 00:07:35,960
terminal.

106
00:07:36,030 --> 00:07:40,670
And if you're on Windows I would recommend using something called puttee.

107
00:07:40,690 --> 00:07:44,300
And luckily they have a link to it here which is pretty great.

108
00:07:44,460 --> 00:07:48,420
So with this in place let's go ahead move forward.

109
00:07:48,420 --> 00:07:55,970
The one thing that we do want to check is that the file that we had downloaded was downloaded as a dot

110
00:07:56,110 --> 00:07:56,770
text.

111
00:07:56,780 --> 00:08:01,790
He might have been I was a little bit concerned about that.

112
00:08:01,840 --> 00:08:08,370
So let's go ahead and switch to this to date added PEM that text so I'm going to remove just the text

113
00:08:08,370 --> 00:08:10,720
on the end of our downloaded file.

114
00:08:10,770 --> 00:08:16,650
And in fact we're going to keep that is dropped him and I'm going to go ahead and move that to my desktop

115
00:08:17,130 --> 00:08:19,140
so I can easily access that.

116
00:08:19,280 --> 00:08:20,140
OK.

117
00:08:20,610 --> 00:08:27,060
So once we have that in place we're just going to go ahead and follow the instructions that we have

118
00:08:27,060 --> 00:08:27,300
here.

119
00:08:27,300 --> 00:08:33,530
So again remember you're going to have to you know tweak this according to your situation.

120
00:08:33,540 --> 00:08:37,420
But on the Mac here let's go ahead and open up the terminal.

121
00:08:37,620 --> 00:08:42,810
So the first thing we've got to do is get to where our keys are.

122
00:08:42,810 --> 00:08:48,330
So we're going to ours are on the desktop so I'm going to say CD which is short for change directory

123
00:08:48,330 --> 00:08:52,100
space Capitol desktop.

124
00:08:52,560 --> 00:08:57,240
And if we do that we should see that it's moved us into the desktop and we want to do an ls and hit

125
00:08:57,300 --> 00:08:58,080
enter.

126
00:08:58,260 --> 00:09:02,340
That shows you all the files that are in the current directory that you're showing and there's that

127
00:09:02,340 --> 00:09:07,040
Instagram Android PIMs So we know OK we're in a good place.

128
00:09:07,440 --> 00:09:13,020
So once we've done that we want to run this code to make sure that we're going to be able to access

129
00:09:13,020 --> 00:09:18,990
this so we're going to do the S.H. maade 400 for the instagram pen and now that we're in the correct

130
00:09:18,990 --> 00:09:21,530
place we'll just go ahead and hit enter on that.

131
00:09:21,930 --> 00:09:25,980
Then we want to use copy this right here.

132
00:09:26,070 --> 00:09:32,490
And well might as we'll copy this whole thing because this is going to allow us to log into our instance

133
00:09:32,490 --> 00:09:36,260
here so we're going to go ahead and copy this line of code.

134
00:09:36,540 --> 00:09:38,340
Go ahead and paste it in there.

135
00:09:38,340 --> 00:09:40,480
It's going to say are you sure that you want to connect to this.

136
00:09:40,490 --> 00:09:41,850
I'm going to say yes.

137
00:09:42,030 --> 00:09:48,660
And if you see this screen this means that you have successfully been able to connect and you are ready

138
00:09:48,660 --> 00:09:49,830
to rock and roll.

139
00:09:50,160 --> 00:09:56,960
So once you get to the screen we need to move in to where the parts code is to kind of do some setup

140
00:09:57,000 --> 00:10:05,640
so inside of now which is our server AWOS we're going to say CD space apps slash.

141
00:10:05,730 --> 00:10:12,530
This is all lowercase parce slash H.T. docs just like that.

142
00:10:12,530 --> 00:10:15,700
So go ahead and hit enter.

143
00:10:15,770 --> 00:10:17,720
Next we have a file that we need to edit.

144
00:10:17,720 --> 00:10:26,190
So we're going to use vi here which is going to allow us to edit this code so we can say Vi server dot

145
00:10:26,310 --> 00:10:28,390
J.S. all lowercase there.

146
00:10:28,520 --> 00:10:30,930
So go ahead and hit enter on this.

147
00:10:30,990 --> 00:10:38,360
This is going to bring up a screen here where we can go and get all these different pieces here.

148
00:10:38,360 --> 00:10:43,180
So there's you know like an app idea master key We're going to need all of this in order to connect

149
00:10:43,190 --> 00:10:47,710
so once we have this in place where we're in a good position here there's something else that we've

150
00:10:47,710 --> 00:10:49,220
got to go grab.

151
00:10:49,220 --> 00:10:55,500
So open up a new tab in your browser and we need to go and get something from Rob's Web site so we're

152
00:10:55,500 --> 00:10:59,660
going to go to Android of course dot com.

153
00:11:00,110 --> 00:11:09,080
And then once we've done that we are going to do lowercase parce project dot zip and just go ahead and

154
00:11:09,080 --> 00:11:09,940
hit enter on that.

155
00:11:09,950 --> 00:11:15,800
That should prompt a download that's going to come to your computer so this is just an android studio

156
00:11:15,800 --> 00:11:21,290
project that's sort of a starting point for you to move forward with it's got the parts code all ready

157
00:11:21,290 --> 00:11:28,090
to rock and roll and so it just kind of saves us one extra step in working with us.

158
00:11:28,220 --> 00:11:35,180
So we're going to go ahead and once this is finished downloading then we'll have find you here ready

159
00:11:35,180 --> 00:11:40,570
to take our folders so I'm going to move this to our desktop for the time being.

160
00:11:41,000 --> 00:11:47,780
And once you're inside of here you can see this is just like any other you know project that we've opened

161
00:11:47,780 --> 00:11:54,260
before so if we go ahead and get Android studio opened up we can use it to open up this project and

162
00:11:54,740 --> 00:11:55,990
move forward from there.

163
00:11:56,180 --> 00:12:00,730
So give Android studio a second to load here.

164
00:12:04,590 --> 00:12:10,700
And this is bringing up our last project that I was working on so we'll close that out.

165
00:12:10,840 --> 00:12:18,850
Now I want to do open an existing Android studio project will point to the desktop and will say open

166
00:12:18,850 --> 00:12:23,020
that and into a studio SDK.

167
00:12:23,020 --> 00:12:26,690
OK so it's saying it's going to be putting that in the new location.

168
00:12:26,790 --> 00:12:29,260
Okay that sounds good to me.

169
00:12:29,590 --> 00:12:32,820
So we'll wait for this to pop up.

170
00:12:32,860 --> 00:12:39,490
So when the project opens up you might not have the same build tools that the project has.

171
00:12:39,490 --> 00:12:45,220
So if not you want to go ahead and just click install build tools and Android studio will go through

172
00:12:45,220 --> 00:12:52,390
and get you all the right pieces of information that you need in order to get that up and running.

173
00:12:52,450 --> 00:12:57,310
So whatever prompts you need in order to get this moving you just want to go ahead and move forward

174
00:12:57,310 --> 00:12:57,790
with those.

175
00:12:57,790 --> 00:13:01,800
But and look it already finished up there so that's pretty great.

176
00:13:02,140 --> 00:13:05,180
And while this is opening up.

177
00:13:05,380 --> 00:13:10,660
So let's talk about the code that is inside of you and I'm going to open this up so you can kind of

178
00:13:10,660 --> 00:13:18,970
see what we've got inside of here so is a typical main activity that you'd like have in any other place

179
00:13:19,210 --> 00:13:23,680
and it looks pretty standard except we've got this parse analytics.

180
00:13:24,840 --> 00:13:27,690
And yes let's go ahead and do an update here.

181
00:13:28,450 --> 00:13:34,690
But this parse analytics and this is going to essentially allow us to do some checks on our code to

182
00:13:34,690 --> 00:13:39,270
see how many how much a user is using the app and stuff like that.

183
00:13:39,280 --> 00:13:46,420
But the real interesting stuff here is in this starter application because this has some code that allows

184
00:13:46,420 --> 00:13:51,940
us to connect to a parson you know down here we're going to create some objects that we're going to

185
00:13:51,940 --> 00:13:56,050
put in that parse server and you know try and get them and read them back.

186
00:13:56,050 --> 00:14:04,300
And so with all of this we've got to then plug in some stuff like the application ID client key server

187
00:14:04,720 --> 00:14:06,090
all that good stuff.

188
00:14:06,100 --> 00:14:10,390
So luckily we have all this information inside of our terminal.

189
00:14:10,390 --> 00:14:14,410
So we just need to go ahead and move forward with entering that information.

190
00:14:14,410 --> 00:14:16,980
So the first one is the application ID.

191
00:14:17,050 --> 00:14:22,780
You can see we've got an app ID here so don't get the double quotes but go grab that huge string of

192
00:14:22,780 --> 00:14:28,440
letters and numbers and we're going to go ahead and paste that into our app.

193
00:14:28,930 --> 00:14:34,520
Android studio here is taking a second so let's see.

194
00:14:37,310 --> 00:14:44,430
Try and update get through some of our issues there but I'll go ahead and paste that one in the next

195
00:14:44,430 --> 00:14:46,920
one that we need is the client key.

196
00:14:47,280 --> 00:14:49,800
So this is going to be what's the file key.

197
00:14:49,800 --> 00:14:55,500
Make sure you don't do or the Master Key don't do the file key so we're going to copy the master key

198
00:14:56,460 --> 00:15:00,730
and we'll go ahead and paste it there.

199
00:15:00,870 --> 00:15:01,570
All right.

200
00:15:01,650 --> 00:15:04,560
And then the last one that we need is the server.

201
00:15:04,730 --> 00:15:08,050
So and we've got more errors here.

202
00:15:09,450 --> 00:15:20,250
So and support and let's open up a terminal here we want to get the server your l.

203
00:15:20,310 --> 00:15:26,620
So grab all of that including the HTP all the way to parse and we'll go ahead and paste that in.

204
00:15:26,700 --> 00:15:34,090
And the one kind of additional bonus thing that we need to add is a slash here on the end of the code.

205
00:15:34,710 --> 00:15:42,300
So with this in place we now successfully have everything that we need in order to connect to this parse

206
00:15:42,390 --> 00:15:43,650
instance.

207
00:15:43,770 --> 00:15:49,980
And so what we're going to do is we're going to run this and see if we can get this code to run and

208
00:15:49,980 --> 00:15:56,790
if it works successfully it's going to log some information on to or it's going to save some information

209
00:15:56,790 --> 00:16:03,630
onto the server and we'll actually be able to via a web browser check that everything worked.

210
00:16:03,630 --> 00:16:05,430
And you know move forward from there.

211
00:16:05,430 --> 00:16:08,600
So let's go ahead and hit the start button here.

212
00:16:08,630 --> 00:16:11,300
We're going to have to pick a device to work with.

213
00:16:11,300 --> 00:16:19,400
So go ahead and use this and I'll come back and start the video when the emulator is ready to rock n

214
00:16:19,400 --> 00:16:19,550
roll.

215
00:16:19,550 --> 00:16:25,730
Well I guess actually while it's going we can talk about how we can get to the correct u r l in order

216
00:16:25,730 --> 00:16:28,300
to check out the code.

217
00:16:28,370 --> 00:16:35,880
So what we're going to do is go back to our code or even the terminal here.

218
00:16:36,240 --> 00:16:42,960
We just need to be able to get to this parse location so we're going to go ahead copy whatever the L

219
00:16:42,960 --> 00:16:50,580
is and we're going to paste this in and after this instead of doing the slash parse we are going to

220
00:16:50,580 --> 00:16:55,260
do slash and we're going to just type in apps just like that.

221
00:16:55,740 --> 00:17:03,720
So if we go ahead and hit enter on that you can see this then brings us to a log in page here for the

222
00:17:04,020 --> 00:17:09,390
parse server now to log in the username is just user or that set by default.

223
00:17:09,390 --> 00:17:14,400
Now the password is something a bit NAMI has created for us and they've actually spit it out in the

224
00:17:14,400 --> 00:17:17,010
logs but it takes a little bit of work to go find that.

225
00:17:17,010 --> 00:17:21,470
So we're going to go to our SETI Management Council page and we'll x out of this.

226
00:17:21,690 --> 00:17:28,890
And on our instance page we're going to go to actions instant settings get System log and if we click

227
00:17:28,890 --> 00:17:33,090
on this this has got a ton of information about when it was all set up and stuff.

228
00:17:33,100 --> 00:17:35,510
And what's been happening on that server.

229
00:17:35,520 --> 00:17:42,120
But if we keep scrolling we want to look for a box like this says setin bit NAMI application password

230
00:17:42,120 --> 00:17:43,640
to follow.

231
00:17:43,650 --> 00:17:49,530
And so we want to go ahead and just copy this code and it might be worth it to you know somewhere in

232
00:17:49,530 --> 00:17:55,350
your Android studio project maybe leave this as a comment so that you make sure you remember this.

233
00:17:55,350 --> 00:18:05,370
You can go oh looks like and copy this right click copy if you want to go and change his password to

234
00:18:05,370 --> 00:18:09,090
maybe something more secure and a something that you would actually remember.

235
00:18:09,360 --> 00:18:15,820
But with that we can go back to the parce dashboard go ahead and paste that in and log in.

236
00:18:16,350 --> 00:18:21,500
So there you can see my bit Namli bit NAMI parce API that's all there.

237
00:18:21,500 --> 00:18:21,920
That's right.

238
00:18:21,920 --> 00:18:22,920
Rock n Roll.

239
00:18:22,920 --> 00:18:26,450
Let's see if our emulator opened up and yes it did.

240
00:18:26,450 --> 00:18:28,230
So that's a good starting point.

241
00:18:28,230 --> 00:18:30,950
We'll go back to android studio.

242
00:18:30,990 --> 00:18:36,750
Let's go ahead and check log cat because we had said if things are successful here we should say successful

243
00:18:36,970 --> 00:18:38,550
along that Parsa result.

244
00:18:38,580 --> 00:18:45,000
Successful So we know that it worked here at least in the code but to really confirm that everything

245
00:18:45,240 --> 00:18:49,880
worked here we're going to go into back to the project here.

246
00:18:50,000 --> 00:18:55,800
Click on this and we should see if we go check out this thing called example object something that says

247
00:18:55,800 --> 00:18:56,270
Rob.

248
00:18:56,270 --> 00:18:57,320
One two three.

249
00:18:57,360 --> 00:19:03,240
And the awesome thing about this is if we go back to our code this is the thing that we put in over

250
00:19:03,240 --> 00:19:08,610
there we said we're going to make something called Rob with one two three and we're going to save this

251
00:19:08,610 --> 00:19:11,280
to the server and look it is there.

252
00:19:11,280 --> 00:19:14,520
So you may be saying this.

253
00:19:14,550 --> 00:19:16,070
OK we got it up and running.

254
00:19:16,080 --> 00:19:17,270
You know whatever.

255
00:19:17,550 --> 00:19:21,360
I can't tell you how big of a deal this is that we have it up and running.

256
00:19:21,360 --> 00:19:26,460
I've tried to make my own back end servers for my apps before and I've written them from scratch rather

257
00:19:26,460 --> 00:19:28,080
than using something like parson.

258
00:19:28,080 --> 00:19:33,540
Holy cow what a drain that was trying to get things up and running.

259
00:19:33,540 --> 00:19:37,870
And the fact that we are here were able to work with parce.

260
00:19:37,980 --> 00:19:42,730
It's a great starting point to just keep rocking with the rest of the app.

261
00:19:42,780 --> 00:19:46,800
So we still got more to do but the fact that we're here is a great starting point.

262
00:19:46,800 --> 00:19:48,910
Let's go ahead and move on to the next one.
