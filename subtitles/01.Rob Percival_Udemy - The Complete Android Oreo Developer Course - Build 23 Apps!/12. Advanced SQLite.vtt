WEBVTT
1
00:00:00.690 --> 00:00:06.360
Hello and welcome to this lecture where we're going to dive a little bit deeper into learning as well.

2
00:00:06.540 --> 00:00:10.170
We want to make sure you've got a good grasp on what's going on here and I want to show you some extra

3
00:00:10.170 --> 00:00:12.080
tools that you can use.

4
00:00:12.090 --> 00:00:17.370
So the first order of business here is I know we just worked to create this whole database of work with

5
00:00:17.370 --> 00:00:18.000
events.

6
00:00:18.060 --> 00:00:24.570
I want you to now manipulate this code so that it creates the database called users and then switches

7
00:00:24.570 --> 00:00:25.380
back to users.

8
00:00:25.380 --> 00:00:29.560
Case so go ahead take a second update just to be working with users now.

9
00:00:31.570 --> 00:00:33.580
All right so hopefully that went well for you.

10
00:00:33.910 --> 00:00:40.540
We wanted to update this to say this new database is going to be users I guess it's not new.

11
00:00:40.540 --> 00:00:42.450
We've already created this before.

12
00:00:42.550 --> 00:00:48.610
And again we're going to update this to say users and we had chose to have name and age for our two

13
00:00:48.610 --> 00:00:55.690
options so I'll go ahead and you know put back something like Nick here and let's go ahead and do something

14
00:00:56.170 --> 00:01:01.080
maybe like Dave here we have Dave B 14.

15
00:01:01.270 --> 00:01:05.880
So rather than you know working with the events table we want that to be users.

16
00:01:06.070 --> 00:01:12.280
Users here also want this to be users instead of year.

17
00:01:12.280 --> 00:01:13.940
We want that to be age.

18
00:01:14.000 --> 00:01:17.760
So we're going to have to switch that to age.

19
00:01:17.920 --> 00:01:23.890
That's the name age yeah that's looking pretty good from users that when we come down here we're going

20
00:01:23.890 --> 00:01:31.690
to call this user results user results that we want this to be updated to be age and they'll be age

21
00:01:31.880 --> 00:01:33.020
index.

22
00:01:33.310 --> 00:01:34.030
Excellent.

23
00:01:34.030 --> 00:01:35.530
So that should be working.

24
00:01:35.530 --> 00:01:37.330
Let's go ahead and give that a run.

25
00:01:37.330 --> 00:01:43.420
Make sure it's exactly what we're hoping for there but yeah we want to bring this back to users so I

26
00:01:43.420 --> 00:01:47.920
can show you how to do a few more sort of awesome examples here.

27
00:01:47.920 --> 00:01:48.630
OK.

28
00:01:49.270 --> 00:01:52.580
So we'll go ahead and give this a second to run.

29
00:01:52.600 --> 00:01:57.580
I want this to pop up on the emulator although we're just going to be looking at log cat so we'll go

30
00:01:57.580 --> 00:02:01.120
ahead and get that fired up there.

31
00:02:01.510 --> 00:02:07.530
OK so here comes the app.

32
00:02:08.730 --> 00:02:17.110
You're still waiting here hear what hand-write studio we believe in you.

33
00:02:17.120 --> 00:02:21.960
Come on.

34
00:02:21.970 --> 00:02:22.230
All right.

35
00:02:22.240 --> 00:02:27.430
Well this is going I'm going to teach you just a little something here so the next thing that I want

36
00:02:27.430 --> 00:02:34.420
to talk about is how you can specifically query from a database you don't have to do a big general like

37
00:02:34.430 --> 00:02:40.480
just go ahead and get all the users you can say hey no only give me this amount of people or people

38
00:02:40.480 --> 00:02:41.650
that are related to this thing.

39
00:02:41.650 --> 00:02:49.360
So for example with people's age you can say you know what we only want you to get the adults from the

40
00:02:49.360 --> 00:02:56.500
database meaning we only want you to go get people who are older than age 18 and just real quick here

41
00:02:56.500 --> 00:02:57.430
I want to show.

42
00:02:57.430 --> 00:03:02.140
Looks like the app opened up and look at printed out all these people Nick Shonn Nick Dave.

43
00:03:02.500 --> 00:03:05.590
So we don't need to insert any more people into our database.

44
00:03:05.590 --> 00:03:07.070
We're going to comment that out for a second.

45
00:03:07.090 --> 00:03:12.040
But again getting back to what I was just talking about if we want to get only users who are above age

46
00:03:12.070 --> 00:03:19.620
18 after we create our query where we say select star select everything from users we can say capitol

47
00:03:19.630 --> 00:03:25.170
where and add some sort of qualifier to say you know get all the people where.

48
00:03:25.210 --> 00:03:32.560
Meaning all the people that for example are older than 18 if we want to do that with that age greater

49
00:03:32.560 --> 00:03:38.860
than 18 so this will give us all the adults and if we go back to our log cat here looks like everyone

50
00:03:38.860 --> 00:03:44.680
here is an adult except for a very last one Dave so we should see Nick and Shawn showing up.

51
00:03:44.680 --> 00:03:46.150
No 14 year old Dave.

52
00:03:46.150 --> 00:03:50.340
So let's go ahead and run this one more time.

53
00:03:50.530 --> 00:03:55.570
Hopefully we should see a little bit more of a quicker turnaround here with the emulator now that we

54
00:03:55.570 --> 00:03:57.590
got that run for the first time and look at that.

55
00:03:57.610 --> 00:03:59.890
This is going much faster.

56
00:03:59.990 --> 00:04:03.910
So at this it comes through and let's go check what we get.

57
00:04:03.910 --> 00:04:04.380
Look at that.

58
00:04:04.390 --> 00:04:07.560
We've got Nick Shonn Nick Shawn Nick but no Dave.

59
00:04:07.570 --> 00:04:08.520
Age 14.

60
00:04:08.520 --> 00:04:15.550
And conversely if we said give us everyone under the age of 18 if we go ahead and change that we should

61
00:04:15.550 --> 00:04:21.450
only have Dave coming back from that situation so let's go ahead and confirm that that's the case.

62
00:04:23.600 --> 00:04:26.810
And when we do this let's scroll up there and look at that.

63
00:04:26.810 --> 00:04:27.800
We only get back Dave.

64
00:04:27.800 --> 00:04:32.840
So this is how you can kind of be a little bit more selective about this and you may be wondering you

65
00:04:32.840 --> 00:04:37.550
know can I just do a select star from users and then here inside of this wall loop kind of do a check

66
00:04:37.550 --> 00:04:42.620
to say oh only if they're age older than 18 Do I want to you know use them or something like that you

67
00:04:42.620 --> 00:04:43.460
can.

68
00:04:43.580 --> 00:04:48.320
But doing these queery with these specific wear tags it's so much more efficient than looping through

69
00:04:48.320 --> 00:04:54.740
on your own the cue a light database has its own code written to do things like that and it just goes

70
00:04:54.740 --> 00:04:59.690
so much faster than if you tried this on your own especially when you have like thousands or millions

71
00:04:59.690 --> 00:05:02.810
of records that would be able to handle that much better.

72
00:05:02.810 --> 00:05:08.450
So not only can you take an integer and see you know if its greater or less than that other things that

73
00:05:08.450 --> 00:05:14.150
you can do for example is we could check the name and say you know go ahead and just give us every one

74
00:05:14.150 --> 00:05:15.550
that has the name Nick.

75
00:05:15.590 --> 00:05:17.370
So with as.

76
00:05:17.370 --> 00:05:22.730
Q Well you only have to do one single equal sign there were in Java IF statements you have to do to

77
00:05:22.730 --> 00:05:29.350
equal sign but you just have the one for example and do capital Nic and let's see if that gives us back

78
00:05:29.840 --> 00:05:39.620
all the users named Nick so go ahead and run this and wait for app here boom.

79
00:05:39.620 --> 00:05:40.220
Come look at that.

80
00:05:40.220 --> 00:05:45.950
And look we have three Nicks inside of the database that's kind of crazy that that happened.

81
00:05:46.160 --> 00:05:49.930
So here to kind of just prove something real quick let's add one more Nick to the database.

82
00:05:49.940 --> 00:05:59.290
But let's add maybe a neck that's like 23 and let's add a nick to the database that's like 43.

83
00:05:59.300 --> 00:05:59.800
OK.

84
00:05:59.960 --> 00:06:05.030
So we're going to add Nick that's 23 in a neck that's 43 and then we have these next two are 28 so let's

85
00:06:05.030 --> 00:06:15.500
say we wanted to find all the Nicks who were you know had the name Nick but then also were equal to

86
00:06:15.500 --> 00:06:21.170
the age of 43 for example like we're trying to just get that specific one where we could say where name

87
00:06:21.170 --> 00:06:22.100
is equal to Nick.

88
00:06:22.130 --> 00:06:27.630
And then if we do all caps and we can set another sort of conditional element where we could say age

89
00:06:27.640 --> 00:06:30.080
is equal to 43.

90
00:06:30.080 --> 00:06:35.450
So now if we go ahead and run this we're saying give us all the users where the names equal to Nick

91
00:06:35.530 --> 00:06:37.460
and the age is equal to 43.

92
00:06:37.460 --> 00:06:40.430
That's kind of nice how that reads out like English right.

93
00:06:40.430 --> 00:06:45.410
Give us all users where the name is equal the Nick and the age is 43 so if we do that we should only

94
00:06:45.410 --> 00:06:51.980
get that one if we wanted to be you know a little trick here we could say where you know someone's age

95
00:06:51.980 --> 00:06:54.940
is less than 30.

96
00:06:55.010 --> 00:07:01.730
For example if we do this it should give us all the 28 year old nics and the 23 year old Nick would

97
00:07:01.730 --> 00:07:04.370
be pretty cool to see so let's go ahead and run that real quick

98
00:07:06.950 --> 00:07:07.400
right.

99
00:07:07.400 --> 00:07:08.530
Here comes the code.

100
00:07:08.540 --> 00:07:14.660
And look at that we got all the 28 and the 23 year old Nick and realized we're running this code again

101
00:07:14.660 --> 00:07:17.300
and again so we're just adding more nicks into the database.

102
00:07:17.290 --> 00:07:20.810
There's probably too many necks at this point.

103
00:07:20.890 --> 00:07:21.460
OK.

104
00:07:21.680 --> 00:07:28.210
Other things that you can do is you know let's say I believe we had the database was full of Nick Shan's

105
00:07:28.250 --> 00:07:35.990
and Dave's other things that you can do is you can find users inside of the database and say like if

106
00:07:35.990 --> 00:07:42.300
you just want to check people whose names start with a particular letter so you could say where the

107
00:07:42.300 --> 00:07:52.190
name capital like and then you could say something like in single quotes and percentage signs that says

108
00:07:52.190 --> 00:07:58.400
Get everyone who's name starts with and then so we only have Nicks inside of the database so this one

109
00:07:58.490 --> 00:08:04.670
won't be as exciting but you will see everyone whose name starts with and then which again in this case

110
00:08:04.670 --> 00:08:05.510
is on the neck.

111
00:08:05.780 --> 00:08:07.820
But it goes ahead and it grabs all of them.

112
00:08:07.820 --> 00:08:12.230
Now something else that you can do with this like is you could say you know I just want anyone that

113
00:08:12.230 --> 00:08:17.820
has like an A in their name so I think this should get Dave and Sean that we had earlier so if you do

114
00:08:17.820 --> 00:08:24.290
a percentage sign a percentage sign that saying anyone that has anything before and anything after an

115
00:08:24.350 --> 00:08:31.070
a go find that person inside of the database so let's go ahead and run this again looking for Shawn

116
00:08:31.070 --> 00:08:34.150
and Dave to show up with this kind of query.

117
00:08:34.280 --> 00:08:37.320
So we go ahead and we hit run on that.

118
00:08:37.520 --> 00:08:42.630
And if we scroll up to the top there look at that we get both Shan's and Dave's there.

119
00:08:42.650 --> 00:08:49.040
So something that you do want to do whenever you're searching for users like this in a query you always

120
00:08:49.040 --> 00:08:54.230
want to after you specify your where to say if you're looking for one particular person you would want

121
00:08:54.230 --> 00:08:55.970
to say limit one.

122
00:08:55.970 --> 00:09:02.030
And the reason for this is that you know sometimes you're going to get back multiple people and if you're

123
00:09:02.180 --> 00:09:08.420
looking to delete that particular user or do something with them if you get multiple ones sometimes

124
00:09:08.420 --> 00:09:09.100
you can have an issue.

125
00:09:09.110 --> 00:09:14.630
So you don't always have to do a live one but if you're trying to delete a particular user or do something

126
00:09:14.630 --> 00:09:21.140
it's good to have that limit one to make sure you don't by accident you know write some query that actually

127
00:09:21.140 --> 00:09:26.470
gets everyone from the database and then you know deletes every single person or something like that.

128
00:09:26.480 --> 00:09:31.370
So that can be a good check for you when you're trying to run things.

129
00:09:31.370 --> 00:09:36.920
So with all of this let's go ahead and talk about how we can delete someone from the database.

130
00:09:36.980 --> 00:09:41.770
So let's go ahead and just move this back to slick star from users.

131
00:09:41.830 --> 00:09:48.440
We just want every user there and I'm going to show you how you can do one of these deletions So we're

132
00:09:48.440 --> 00:09:55.040
going to take this as well light database and we're going to do dot execute as well.

133
00:09:55.250 --> 00:10:01.970
And this is how you delete a particular In this case user from the users table.

134
00:10:01.970 --> 00:10:10.430
You do all caps delete space from lowercase users that's the name of our table and will say Kapell the

135
00:10:10.430 --> 00:10:11.470
where.

136
00:10:11.780 --> 00:10:16.370
And then after that we're going to say name equal to.

137
00:10:16.550 --> 00:10:18.860
And let's get rid of one of these next.

138
00:10:18.920 --> 00:10:21.730
For example don't I don't want double quotes on one single quote.

139
00:10:21.740 --> 00:10:22.770
So will do.

140
00:10:22.880 --> 00:10:24.250
Her name is equal to Nick.

141
00:10:24.260 --> 00:10:30.210
Now if we just left this as is this would delete all the nicks from the database.

142
00:10:30.380 --> 00:10:32.270
But if we want to delete only one.

143
00:10:32.270 --> 00:10:36.610
This is where we'd want to say limit 1 right.

144
00:10:36.680 --> 00:10:39.840
So let's go ahead and provide that we're saying limit 1.

145
00:10:39.860 --> 00:10:46.670
But you'll notice that we do get a bit of an error here in the situation is that when you're deleting

146
00:10:46.670 --> 00:10:48.430
something you can't say limit 1.

147
00:10:48.470 --> 00:10:52.720
You have to delete all or nothing which kind of leaves a strange situation.

148
00:10:52.760 --> 00:10:54.850
So let me tell you how to fix that in a second.

149
00:10:54.850 --> 00:11:01.340
But since we can only delete one of the next let's go ahead and delete our one Dave.

150
00:11:01.340 --> 00:11:04.700
So we're just going to say hey if your name's equal to Dave we're going to get Legia.

151
00:11:04.730 --> 00:11:09.240
So let's go ahead and run this.

152
00:11:09.480 --> 00:11:13.870
And we should see that Dave will no longer be in there because we're all delete him here.

153
00:11:13.920 --> 00:11:19.560
The next line will say hey go grab all the users so if we do that like that we only have Nick and Shawn

154
00:11:19.860 --> 00:11:20.750
showing up.

155
00:11:20.820 --> 00:11:21.700
OK.

156
00:11:21.720 --> 00:11:26.850
Now the next step for us is you know we would want to delete all.

157
00:11:26.880 --> 00:11:32.730
Just like one particular Nick and if we do want to do that we have to update our table a little bit.

158
00:11:32.730 --> 00:11:38.880
So in order to do this let's go ahead and gives ourselves some space we have to add an extra property

159
00:11:38.880 --> 00:11:44.820
to this table an extra column called The ID which is going to be something called a primary key which

160
00:11:44.820 --> 00:11:50.070
basically allows you to give a unique number to everyone that's inside of the row.

161
00:11:50.250 --> 00:11:56.400
And it allows you to say oh even though there's two nicks who were aged twenty eight you know they look

162
00:11:56.400 --> 00:12:01.010
identical they have different ideas so I can differentiate between the two.

163
00:12:01.020 --> 00:12:02.400
So we're going to update here a little bit.

164
00:12:02.400 --> 00:12:08.070
We're going to keep that database called users but we're going to make a new table that we are going

165
00:12:08.070 --> 00:12:15.360
to call new users just like that and we're going to keep the name Vardar we're going to keep the year

166
00:12:15.420 --> 00:12:21.720
end but we're going to add one new property here one new column called ID and it is going to be a type

167
00:12:21.720 --> 00:12:23.890
capital integer.

168
00:12:24.000 --> 00:12:25.510
So just go ahead type that out.

169
00:12:25.800 --> 00:12:31.160
And we're also going to say space primary space key.

170
00:12:31.350 --> 00:12:36.650
So it's saying this last column here idea is going to be an integer and you knows we don't do it with

171
00:12:36.650 --> 00:12:41.820
a number in there we're just saying an integer which I can't remember with the default size of that

172
00:12:41.820 --> 00:12:47.900
is but I think it's enough to handle up to I'd guess at least to the hundreds of thousands place.

173
00:12:47.910 --> 00:12:54.960
But we're sense we're making this a primary key this is going to automatically count this ID value for

174
00:12:54.960 --> 00:12:55.380
us.

175
00:12:55.380 --> 00:13:01.020
So moving forward through here I'm going to go ahead and uncomment these lines.

176
00:13:01.020 --> 00:13:07.470
So these will still go ahead and create and I'm going to comment out the delete one.

177
00:13:07.500 --> 00:13:12.690
These will still go ahead and insert new users and you can see we don't specify like oh I want Heidi

178
00:13:13.110 --> 00:13:15.650
to be equal to like five or something like that.

179
00:13:15.650 --> 00:13:18.800
No we want this to just automatically pick the IDs for us.

180
00:13:18.810 --> 00:13:25.170
And as to a light is far enough to say hey if they want a primary key all of us ought to automatically

181
00:13:25.170 --> 00:13:27.870
increment that as I'm supposed to.

182
00:13:28.010 --> 00:13:31.300
And then just sort of move forward with the rest of that code.

183
00:13:31.350 --> 00:13:34.510
So if we're going to have this new idea we should be able to see it.

184
00:13:34.740 --> 00:13:40.110
So we're going to make a new in here called ID index.

185
00:13:40.110 --> 00:13:46.230
We're going to have this be equal to see get column index for ID.

186
00:13:46.630 --> 00:13:47.490
Excellent.

187
00:13:47.820 --> 00:13:54.910
And then we can go ahead and print out the ideas well so we'll paste that in.

188
00:13:54.960 --> 00:13:59.910
We're going to change that to say id and this should be id index.

189
00:13:59.910 --> 00:14:04.080
All right so with this all in place this is a completely new table so these are going to be the only

190
00:14:04.080 --> 00:14:10.890
3 users that are going to be inside of this new table in an existing database but new table.

191
00:14:10.890 --> 00:14:16.250
So we're going to go ahead and hit run on this and we should see all of them printed out with their

192
00:14:16.890 --> 00:14:18.480
proper IDs there.

193
00:14:18.480 --> 00:14:22.510
So let's go ahead and see what we get.

194
00:14:22.980 --> 00:14:24.900
It will open up long cat here.

195
00:14:25.290 --> 00:14:33.900
And if we scroll up to the top here who failed to read Roe This is because I have not updated this to

196
00:14:33.900 --> 00:14:38.290
be new users so let's go ahead and do that.

197
00:14:38.350 --> 00:14:40.950
Try running one more time.

198
00:14:41.250 --> 00:14:45.540
So I had a soul doing the query where we were selecting from users.

199
00:14:45.570 --> 00:14:53.400
Oh and I'm trying to add these new user objects into the users array.

200
00:14:53.400 --> 00:15:00.760
I want this to be the new capital users so I'm going to have to copy and paste and update that.

201
00:15:00.810 --> 00:15:06.450
This is where ESC gets tricky because it's all just sort of these strings and you have to make sure

202
00:15:06.450 --> 00:15:07.380
that it all works.

203
00:15:07.380 --> 00:15:11.900
And you know Java doesn't really have a good way to check to say Oh did you mean new users here right.

204
00:15:11.900 --> 00:15:20.540
Like you can have to be on top of things but finally got things in place and oh my goodness we still

205
00:15:20.540 --> 00:15:29.210
don't have this is because when I created new users it was supposed to I should change this to age instead

206
00:15:29.210 --> 00:15:30.940
of year.

207
00:15:30.950 --> 00:15:33.200
So let me go ahead and switch them back.

208
00:15:33.420 --> 00:15:38.640
And so maybe I'm going to have to call this something besides new users.

209
00:15:38.660 --> 00:15:41.950
Well let's just see.

210
00:15:42.690 --> 00:15:49.370
Know let's let's call this maybe the new users because we really waft on that one.

211
00:15:49.370 --> 00:15:53.320
So go ahead and paste this and all right.

212
00:15:53.480 --> 00:16:00.560
And let's try this now with that table called the new users they've got a name age and an I.D. and this

213
00:16:00.560 --> 00:16:01.160
should work.

214
00:16:01.160 --> 00:16:02.270
Finally this time.

215
00:16:02.300 --> 00:16:05.060
So let's see app comes down.

216
00:16:05.060 --> 00:16:05.860
And look at that.

217
00:16:05.870 --> 00:16:09.880
It took three or four tries there but we finally got it so there's Nick who's 23.

218
00:16:09.880 --> 00:16:12.560
Nick who's 43 and Dave who's 14 right.

219
00:16:12.590 --> 00:16:14.540
Those are the three users that we inserted.

220
00:16:14.540 --> 00:16:17.810
But look one has an idea of when one has an idea of two.

221
00:16:17.810 --> 00:16:19.760
One has an idea of three and we are.

222
00:16:19.970 --> 00:16:25.100
If we were to run this one more time this Nick would have an idea of four 5 and six and there would

223
00:16:25.100 --> 00:16:31.700
be a total of six users inside of that database so I'm going to comment out these insert lines just

224
00:16:31.700 --> 00:16:35.840
for a moment here because I want to show you now with an idea.

225
00:16:35.860 --> 00:16:37.780
Let's say you know what.

226
00:16:37.790 --> 00:16:42.220
I've got two nicks in the database and I want to get rid of one of them.

227
00:16:42.260 --> 00:16:45.140
You know I want to get rid of this Nick who's 43.

228
00:16:45.140 --> 00:16:53.270
I can just now say on this as cue a light queery or this command I can say delete from users where I

229
00:16:53.270 --> 00:16:56.150
now just say I d is equal to.

230
00:16:56.390 --> 00:17:01.880
And if it's this Nick who's 43 that I want to get rid of I just put where ideas equal to two.

231
00:17:02.120 --> 00:17:05.560
And that's going to automatically get rid of that specific Nick.

232
00:17:05.570 --> 00:17:07.410
So let's go ahead and run this.

233
00:17:07.520 --> 00:17:13.610
Make sure that that is the case King app opens up.

234
00:17:13.640 --> 00:17:21.050
And if we scroll no such column I column I d.

235
00:17:21.190 --> 00:17:23.170
That is what I had named it.

236
00:17:23.250 --> 00:17:28.420
Oh and look at that because I'm still using the wrong one to have to call the table.

237
00:17:28.440 --> 00:17:31.190
The new users are right.

238
00:17:31.290 --> 00:17:36.390
You can see I'm not perfect with this rescue l stuff it's you know I really like Java and that when

239
00:17:36.390 --> 00:17:40.520
you use variable names like it checks to make sure you kind of used in the right stuff.

240
00:17:40.530 --> 00:17:45.420
But the rescue stuff is a little bit of the wild wild west so we open this up and look at that.

241
00:17:45.430 --> 00:17:51.990
It has Nick who's 23 with an idea of one and Dave who's 14 whose idea is three in the middle neck is

242
00:17:51.990 --> 00:17:54.030
just gone completely.

243
00:17:54.030 --> 00:18:02.400
So there you got it a little bit more detailed information into this advanced cue a light stuff now

244
00:18:02.400 --> 00:18:03.690
that you got a good grasp on this.

245
00:18:03.690 --> 00:18:05.340
I think we're ready to move forward.

246
00:18:05.340 --> 00:18:07.350
So let's talk about it in the next lecture.
