1
00:00:00,300 --> 00:00:07,110
So now we've got our background and our bird and our bird moves just how we want him to be up and down

2
00:00:07,110 --> 00:00:08,640
like that wonderful.

3
00:00:08,640 --> 00:00:11,270
The next thing to add is the chooks.

4
00:00:11,310 --> 00:00:12,760
So here is a quick challenge for you.

5
00:00:12,810 --> 00:00:19,590
Can you add the troops using top tube and bottom tube so that they are the top one coming down from

6
00:00:19,590 --> 00:00:20,790
the top like that.

7
00:00:20,790 --> 00:00:26,330
And the bottom one coming up from the bottom so that there's a certain gap in the middle of them.

8
00:00:26,340 --> 00:00:26,880
Good luck.

9
00:00:34,920 --> 00:00:36,390
I hope you managed it.

10
00:00:36,390 --> 00:00:37,200
And here we go.

11
00:00:37,560 --> 00:00:43,460
I'm going to start by creating textures for them so we can have a texture.

12
00:00:44,900 --> 00:00:56,600
Called top tube and a texture called bottom and cheap multi all the cheap stuff together here.

13
00:00:57,290 --> 00:01:07,310
So I took cheap he's going to be a new texture for cheap energy.

14
00:01:08,740 --> 00:01:12,310
And bottom Chib is also going to be a new texture.

15
00:01:12,850 --> 00:01:16,700
But of course this time from bottom cheap PLG

16
00:01:19,730 --> 00:01:20,560
very good.

17
00:01:21,010 --> 00:01:31,160
So now let's have them in and we'll add them here where the game state is not zero.

18
00:01:31,180 --> 00:01:33,890
So the game is active.

19
00:01:34,300 --> 00:01:36,040
So I will need to start a batch

20
00:01:39,930 --> 00:01:44,460
then I'll just have the patch and come on there as well.

21
00:01:45,050 --> 00:01:53,750
And then as before we need batched dot draw and the texture up I'll start with top tube.

22
00:01:53,960 --> 00:01:58,170
Now let's think about where we want to put this so we want the x coordinate first.

23
00:01:58,520 --> 00:02:05,940
So the top Choop we want the bottom left to be around here.

24
00:02:06,160 --> 00:02:11,560
So if there's the center of the screen we want to shift it up by half of whatever the gap is going to

25
00:02:11,560 --> 00:02:11,970
be.

26
00:02:11,980 --> 00:02:14,800
So the gap between the two keeps there.

27
00:02:14,810 --> 00:02:22,210
So if that is the center of the screen we want to shift it up by half of the gap and left by half of

28
00:02:22,720 --> 00:02:24,250
the width of the tube.

29
00:02:24,310 --> 00:02:26,230
So that will keep it central.

30
00:02:27,010 --> 00:02:36,770
So we get the center of the screen which we get from GDX dark graphics it's get with.

31
00:02:36,880 --> 00:02:38,120
So that's the width of the screen.

32
00:02:38,130 --> 00:02:46,440
Divide that by two to get the center of the screen and then we want to subtract the width of the cheap

33
00:02:47,190 --> 00:02:56,250
so that top Chib dot width get with divided by two.

34
00:02:56,390 --> 00:03:03,420
So that's the x coordinates the y coordinates is fairly similar.

35
00:03:03,440 --> 00:03:10,330
We're going to get the GDX graphics don't get height and we want to divide that by T.

36
00:03:12,940 --> 00:03:16,930
And we want to add half of the gap.

37
00:03:17,050 --> 00:03:23,080
Now the gap is something that we might want to alter to make the game easier or harder.

38
00:03:23,740 --> 00:03:27,100
So I'm going to create that as a flight

39
00:03:30,750 --> 00:03:35,780
and I'll start off with it at 400 and see how that works out.

40
00:03:38,590 --> 00:03:43,440
So we want half of the gap there we go.

41
00:03:44,590 --> 00:03:48,760
And we didn't specify the width and height because we can just use the full width and height of the

42
00:03:48,820 --> 00:03:56,240
sprites themselves and then very similar for the bottom Chib.

43
00:03:56,420 --> 00:03:59,510
So the x coordinate is going to be exactly the same.

44
00:03:59,620 --> 00:04:05,460
So GDX dot graphics dot get with over two.

45
00:04:06,020 --> 00:04:09,270
And we'll use bottom Chib even though they both have the same width.

46
00:04:09,560 --> 00:04:10,760
It doesn't really matter.

47
00:04:14,460 --> 00:04:21,300
The y coordinate is going to be a bit different because for the top tube we wanted the bottom left to

48
00:04:21,300 --> 00:04:26,780
be around here for the bottom of the bottom left is actually going to be way off the bottom of the screen.

49
00:04:28,060 --> 00:04:29,950
So we're going to want to get to the center.

50
00:04:30,280 --> 00:04:38,860
Then subtract half the gap to move half the gap down and then subtract the height of the tube to take

51
00:04:38,860 --> 00:04:44,380
us to the bottom left of the tube which is going to be way way down here somewhere.

52
00:04:44,400 --> 00:04:53,070
So we get that using GDX graphics don't get height over to minus

53
00:04:55,310 --> 00:04:58,900
captivity and minus.

54
00:04:58,900 --> 00:05:01,480
Again the the height of the tube

55
00:05:04,180 --> 00:05:10,790
say bottom Chib don't get hiked.

56
00:05:10,920 --> 00:05:18,000
And just before we run that we're going to have one issue here and that is that the back ground is drawn

57
00:05:18,090 --> 00:05:25,620
after the chooks and because the background is full screen that's going to be on top of the tubes so

58
00:05:25,620 --> 00:05:27,350
you won't actually see the tubes at all.

59
00:05:27,510 --> 00:05:29,000
So that's not great.

60
00:05:29,010 --> 00:05:33,480
So what I'm going to do is actually begin the Bache

61
00:05:36,250 --> 00:05:42,670
right at the beginning here and then we'll do the background first and then we'll just use the same

62
00:05:42,670 --> 00:05:47,080
batch here to draw the troops.

63
00:05:47,160 --> 00:05:52,590
So then we're drawing back ground first and then the troops and then the bird.

64
00:05:53,080 --> 00:05:56,240
The bird is never going to be on top of the tubes anyway so it doesn't really matter.

65
00:05:56,260 --> 00:05:59,800
But even if it was we'd probably want the bird to be in front of the tubes.

66
00:05:59,860 --> 00:06:02,580
So I'm happy with that ordering.

67
00:06:02,590 --> 00:06:04,470
So a quick summary there.

68
00:06:04,660 --> 00:06:09,820
The order that you draw these in is the order that they will be displayed or lay it on the screen so

69
00:06:09,820 --> 00:06:14,390
the later ones will be in front of the earlier ones.

70
00:06:14,470 --> 00:06:15,110
Let's have a look.

71
00:06:15,130 --> 00:06:16,190
And there we go.

72
00:06:16,390 --> 00:06:18,290
There's out.

73
00:06:18,760 --> 00:06:19,620
Wonderful.

74
00:06:19,630 --> 00:06:20,970
So happy with that.

75
00:06:21,220 --> 00:06:25,240
And I'll keep that distance as 400 for the moment when we play the game we might just tip it that looks

76
00:06:25,240 --> 00:06:26,670
all right to me.

77
00:06:26,890 --> 00:06:30,700
Now next thing we're going to need is to randomize the position of the Jews.

78
00:06:30,700 --> 00:06:34,940
We don't want them to be central every time we want them to shift up and down.

79
00:06:35,050 --> 00:06:38,990
The tricky question is how much do we want to move them up and down.

80
00:06:39,070 --> 00:06:42,910
We want to use the full height of the screen really but we obviously don't want them off the top of

81
00:06:42,910 --> 00:06:44,380
the screen.

82
00:06:44,410 --> 00:06:50,980
I think what I'm going to do is consider this to be half of the gap and then say another hundred for

83
00:06:51,190 --> 00:06:54,760
that bit there because we don't want that bit to be off the screen I don't think either.

84
00:06:54,760 --> 00:07:00,040
So then the maximum amount that we want to move them up from the center point is going to be half of

85
00:07:00,040 --> 00:07:02,290
the height of the screen which would take them right to the top.

86
00:07:02,410 --> 00:07:08,060
Minus half of the gap and then the hundred for this top bit here.

87
00:07:08,530 --> 00:07:11,810
So that was half the height of the screen minus half of the gap.

88
00:07:11,980 --> 00:07:13,990
Minus one hundred.

89
00:07:14,650 --> 00:07:17,180
So let's set that up.

90
00:07:17,440 --> 00:07:21,040
So that's going to be maximum Shoup offset.

91
00:07:21,310 --> 00:07:25,950
So the amount it's moved up and down and that's going to be a flute

92
00:07:30,300 --> 00:07:35,600
and we'll set loops are actually want to set that up here.

93
00:07:38,380 --> 00:07:41,560
And then we'll set it here as well so Max cheap offset.

94
00:07:41,740 --> 00:07:44,610
As I said was going to be half the height of the screen.

95
00:07:45,250 --> 00:07:55,510
So GDX graphics don't get height over to minus half of the gap.

96
00:07:55,810 --> 00:08:00,330
So gap over to minus 100.

97
00:08:00,740 --> 00:08:05,830
And then we're going to need a random number generator to generate a random gap.

98
00:08:05,900 --> 00:08:12,040
So let's set that up and have a random random generator

99
00:08:16,140 --> 00:08:17,430
bring that in.

100
00:08:18,180 --> 00:08:25,920
So down here what I'm actually going to do temporarily is create a new random number every time the

101
00:08:25,920 --> 00:08:30,410
screen is tapped and then we'll just see that it's it is randomly moving up and down.

102
00:08:30,610 --> 00:08:35,100
But then will move that cage to some way better later on because we don't want to move the pipes every

103
00:08:35,100 --> 00:08:36,220
time the screen is tapped.

104
00:08:36,240 --> 00:08:38,310
In the final game.

105
00:08:38,640 --> 00:08:40,400
So let's have a flight

106
00:08:43,260 --> 00:08:44,310
cheap offset

107
00:08:48,860 --> 00:08:50,610
and we're going to set that here.

108
00:08:52,240 --> 00:08:53,610
So cheap offset

109
00:08:56,200 --> 00:08:58,590
and we want a random generator.

110
00:08:58,630 --> 00:09:02,610
I don't think we've actually set up a random generator so let's do that here.

111
00:09:05,210 --> 00:09:11,890
It's just going to be a new random.

112
00:09:12,320 --> 00:09:20,030
And then we want to create a flight from that random generator and remember random generator next float

113
00:09:20,330 --> 00:09:24,400
creates a random number between 0 and 1.

114
00:09:24,410 --> 00:09:31,010
So first off we want to not have a number between 0 and 1 but we want to have a number between a half

115
00:09:31,070 --> 00:09:35,150
and minus a half because we're working from the center of the screen here.

116
00:09:35,480 --> 00:09:41,400
So I'm going to take my random number generator and subtract not point five from it.

117
00:09:41,810 --> 00:09:45,480
I need to specify that that nought point five is a float.

118
00:09:45,590 --> 00:09:48,670
So that's the types are not a problem.

119
00:09:48,680 --> 00:09:52,800
So now we've got a random number between 4.5 and mine is no point five.

120
00:09:53,720 --> 00:09:57,640
We want to multiply that by the kind of scale factor as it were.

121
00:09:57,650 --> 00:10:05,610
So remember we wanted our maximum value to be half of the top of the screen minus half of the gap minus

122
00:10:05,640 --> 00:10:07,940
one hundred.

123
00:10:07,940 --> 00:10:12,200
Now we've already got a half here because the maximum of this is 1 1/2.

124
00:10:12,230 --> 00:10:26,830
So if we get the top of the screen that's GDX graphics don't get height and then subtract the gap.

125
00:10:26,830 --> 00:10:31,780
So this will mean that if this has a maximum value of a half then the maximum value of the whole thing

126
00:10:31,780 --> 00:10:35,840
is going to be half of the height minus the gap which is almost what we want.

127
00:10:35,920 --> 00:10:41,590
But we wanted it to be half of the height minus the gap minus 100.

128
00:10:41,650 --> 00:10:50,190
So we're going to need to minus an extra 200 there because remember we're multiplying by half here.

129
00:10:50,530 --> 00:10:56,340
So this will give give us a maximum possible value of this time to a half months this times a half man

130
00:10:56,380 --> 00:11:00,200
that times a half and a minimum value of the negative of all of that.

131
00:11:00,610 --> 00:11:06,940
So in short we're going to go from the center of the screen and we're going to move up to around there.

132
00:11:07,270 --> 00:11:13,430
So the top of the screen minus the gap minus 100 pixels OK.

133
00:11:13,570 --> 00:11:15,190
So that's our Chib offsets.

134
00:11:16,590 --> 00:11:22,200
So all we need to do is add that to each of the y coordinates here.

135
00:11:31,960 --> 00:11:32,580
There we go.

136
00:11:32,830 --> 00:11:40,360
So that will shift it up or down depending on whether the random number here is more or less than a

137
00:11:40,360 --> 00:11:42,260
half.

138
00:11:42,430 --> 00:11:47,920
So now every time we type that that should give us a new Chib offset so we should see these troops moving

139
00:11:47,920 --> 00:11:50,740
up and down with each tap.

140
00:11:50,740 --> 00:11:53,140
Let's take a look.

141
00:11:53,230 --> 00:11:53,770
Here we go.

142
00:11:53,780 --> 00:11:54,730
So first tap.

143
00:11:54,750 --> 00:11:55,460
Excellent.

144
00:11:55,510 --> 00:12:01,930
And then one before look at that they're shifting up and down perfectly and they're not going too high

145
00:12:02,740 --> 00:12:07,020
and they're not going to look wonderful.

146
00:12:07,620 --> 00:12:08,130
OK.

147
00:12:08,320 --> 00:12:09,650
And there's my bet.

148
00:12:09,910 --> 00:12:10,490
Right.

149
00:12:10,510 --> 00:12:12,870
So I'm very happy with my chips.

150
00:12:12,910 --> 00:12:17,150
The last thing that we're going to want these chips to do is move to the left side.

151
00:12:17,170 --> 00:12:19,930
Let's set that up.

152
00:12:20,050 --> 00:12:24,160
I'm going to create a cube velocity

153
00:12:26,680 --> 00:12:27,850
and try this out.

154
00:12:27,850 --> 00:12:34,000
I reckon H.E. velocity of 4 should work out about right and then we're going to need to keep track of

155
00:12:34,000 --> 00:12:40,660
the cheaps x coordinate because that's going to change as it's moving left.

156
00:12:40,760 --> 00:12:42,680
So I'll call that Choop X

157
00:12:46,600 --> 00:12:59,410
and then initially we want to set Choop X to be this value here which was our initial x coordinate.

158
00:12:59,760 --> 00:13:02,340
So that's cheap X now.

159
00:13:03,300 --> 00:13:06,470
And same with this one.

160
00:13:07,130 --> 00:13:14,540
And then let's see what happens if each time we decreased D-Backs by 4

161
00:13:20,980 --> 00:13:33,470
and actually what I'm going to do is again reset Chib x each time we tap just so that we can bring that

162
00:13:33,770 --> 00:13:38,650
back into the middle and get a good look at it when we want to.

163
00:13:38,680 --> 00:13:39,630
Here we go.

164
00:13:39,710 --> 00:13:42,430
So we'll tap and there it is moving.

165
00:13:42,430 --> 00:13:48,940
And what I think is a perfectly good speed to the left wonderful.

166
00:13:48,980 --> 00:13:51,960
So now we've got actually more or less behaving as we'd like.

167
00:13:52,010 --> 00:13:55,650
What you're probably thinking is how are we going to create more than one cube.

168
00:13:56,270 --> 00:14:01,160
Well the way I'm going to do it and as often the case is lots of solutions to these problems is I'm

169
00:14:01,160 --> 00:14:07,700
going to have four sets of tubes so top and bottom and I'm going to move them from the right to the

170
00:14:07,700 --> 00:14:08,260
left.

171
00:14:08,540 --> 00:14:14,360
And then when they're off the screen to the left I'm going to change their x position so that they jump

172
00:14:14,660 --> 00:14:20,690
back to the right of the screen and that will look like an unlimited infinite set of cheaps coming from

173
00:14:20,690 --> 00:14:21,380
the right to the left.

174
00:14:21,380 --> 00:14:26,450
But actually there's only four of them and I've chosen four just because if you were applying this on

175
00:14:26,450 --> 00:14:32,060
a big screen then you might be able to see lots of cheaps or once on the screen we could probably get

176
00:14:32,060 --> 00:14:35,970
away with three or maybe even two but I'm going to go with four just to be safe.

177
00:14:36,200 --> 00:14:42,050
And I'm also going to put them half a screen with a part and if I do that then we shouldn't have any

178
00:14:42,050 --> 00:14:46,590
problems with missing tubes or not enough troops to display to the user.

179
00:14:47,930 --> 00:14:49,350
All right.

180
00:14:49,350 --> 00:14:57,040
So let's have a couple more variables whoops up here.

181
00:14:57,760 --> 00:15:04,390
So I'll have a number of tubes as a variable and that's going to be for.

182
00:15:05,250 --> 00:15:08,160
Oh yes I forgot to actually use my cheap velocity here.

183
00:15:08,180 --> 00:15:14,720
And rather than fix that let's call at Chib velocity great.

184
00:15:14,810 --> 00:15:16,230
So the number of jobs is for.

185
00:15:16,470 --> 00:15:26,380
And also distance between groups you don't have to put these up here but it just makes them very easy

186
00:15:26,380 --> 00:15:30,730
to edit later on if you decide that the game is too easy or too difficult or you want to change it in

187
00:15:30,730 --> 00:15:32,470
some way.

188
00:15:33,790 --> 00:15:39,640
So here we can set up the distance between tube's as I said half the width of the screen.

189
00:15:39,670 --> 00:15:44,420
So GDX art graphics don't get wet.

190
00:15:46,930 --> 00:15:47,890
Divided by T.

191
00:15:49,170 --> 00:15:52,420
OK now let's create these cheeps.

192
00:15:52,420 --> 00:15:58,430
So some of these We're going to need to change them slightly so we're not going to have just one Chib

193
00:15:58,430 --> 00:15:59,910
X now we're going to have four.

194
00:16:00,190 --> 00:16:04,870
So I'm going to make this an array of flights.

195
00:16:05,050 --> 00:16:06,940
And so this is going to be a new

196
00:16:09,580 --> 00:16:14,520
float array with a size of four.

197
00:16:14,590 --> 00:16:16,000
In fact we could use

198
00:16:20,280 --> 00:16:28,460
size number of chips and it doesn't like that because I need number of cheaps to be an integer.

199
00:16:28,640 --> 00:16:29,270
That's fine.

200
00:16:29,270 --> 00:16:30,030
There's no need.

201
00:16:30,400 --> 00:16:32,260
No reason it needs to be a float.

202
00:16:32,740 --> 00:16:33,020
OK.

203
00:16:33,020 --> 00:16:41,010
Similarly the offsets are going to be different for each pair of cubes.

204
00:16:41,150 --> 00:16:46,150
So let's make there is an array as well.

205
00:16:54,720 --> 00:16:55,710
OK.

206
00:16:56,050 --> 00:17:01,130
So then down here we're going to set up our troops.

207
00:17:01,690 --> 00:17:09,680
So I'm going to do this with a full loop so we'll have an AI which starts at zero.

208
00:17:10,660 --> 00:17:23,050
It carries on as long as it's less than the number of troops and each time increments

209
00:17:27,700 --> 00:17:29,060
say for each pair of shoes.

210
00:17:29,080 --> 00:17:34,000
Initially we want to set their x coordinate and their offset.

211
00:17:34,450 --> 00:17:38,400
So let's now bring our code out.

212
00:17:38,420 --> 00:17:45,740
They just touch method and into they create method.

213
00:17:46,180 --> 00:17:55,360
So instead of Choop offset now we're using Chib offset by

214
00:17:58,410 --> 00:18:01,870
and some sheave X we want to be Chib Hex.

215
00:18:01,870 --> 00:18:09,820
I and so that first one the offset that's absolutely fine as it is because we want each one to be random

216
00:18:10,230 --> 00:18:13,660
but for this one we don't want each to have same x coordinates.

217
00:18:13,660 --> 00:18:18,990
We want for now the first one to have that x coordinate because we wanted to appear in the middle of

218
00:18:18,990 --> 00:18:20,480
the screen so we can see it straight away.

219
00:18:20,580 --> 00:18:24,690
But later on we're going to want to add to that so that the first one is off the edge of the screen

220
00:18:25,620 --> 00:18:35,360
but for each one we're going to want to multiply by the distance between the tubes.

221
00:18:39,310 --> 00:18:41,130
So the first one is going to be in the center.

222
00:18:41,140 --> 00:18:46,730
The second one is going to be half a screen away because distance between the tubes is half a screen.

223
00:18:46,840 --> 00:18:50,800
That one's going to be a whole screen away and the fourth one is going to be one and a half screens

224
00:18:50,800 --> 00:18:51,680
away.

225
00:18:52,210 --> 00:18:52,500
All right.

226
00:18:52,500 --> 00:18:56,870
So that should now create the necessary cheeps.

227
00:18:56,950 --> 00:18:59,910
So let's now display all of those tubes.

228
00:18:59,950 --> 00:19:09,890
So I'm going to copy this for a leap because I want exactly the same fully paid.

229
00:19:09,900 --> 00:19:10,550
There we go.

230
00:19:10,610 --> 00:19:19,260
And instead of Chib X we want you back I and Chewbacca I again.

231
00:19:19,870 --> 00:19:23,880
And then we're still using top bottom cheap they don't change from one to the other.

232
00:19:24,130 --> 00:19:25,910
But Choop X does.

233
00:19:26,140 --> 00:19:27,720
So we're now working with D-Backs.

234
00:19:27,740 --> 00:19:32,820
I and we also want Chib offset.

235
00:19:33,100 --> 00:19:36,040
I rather than just cheap offset

236
00:19:39,610 --> 00:19:40,210
OK.

237
00:19:40,510 --> 00:19:48,740
So with any luck that should now display for us all with random offsets.

238
00:19:48,760 --> 00:19:58,400
So up and down from the center and they should move steadily from the initial position to the left.

239
00:19:58,450 --> 00:19:59,030
Here we go.

240
00:19:59,020 --> 00:20:00,080
Let's have a look.

241
00:20:00,100 --> 00:20:00,920
There we go.

242
00:20:06,210 --> 00:20:09,860
Wonderful.

243
00:20:09,910 --> 00:20:13,060
OK so I'm happy with that.

244
00:20:13,090 --> 00:20:16,750
The one issue that you may have notice of course is that the tubes are disappearing.

245
00:20:16,750 --> 00:20:18,980
They're moving to the left in them and not doing anything else.

246
00:20:19,000 --> 00:20:26,080
As I said we need to do a check to make sure that when they get off the edge of the screen then they

247
00:20:26,080 --> 00:20:29,600
are shifted back over to the right of the screen.

248
00:20:30,130 --> 00:20:32,430
So we'll do this a check here.

249
00:20:33,150 --> 00:20:38,230
So if Chib x y

250
00:20:41,320 --> 00:20:48,370
is less than now we need to be a little bit careful we can't just use 0 because then it will magically

251
00:20:48,370 --> 00:20:52,680
move over even when it appears on the screen there.

252
00:20:52,750 --> 00:21:01,660
So we actually want to use minus and then the width of the top tube or bottom G-B doesn't really matter

253
00:21:01,660 --> 00:21:08,170
which we use.

254
00:21:08,470 --> 00:21:14,370
So that will make sure that it's off the edge of the screen because it will have gone to the coordinate

255
00:21:14,380 --> 00:21:22,510
down here somewhere which is one tubes with to the left of the screen definitely will be fully off the

256
00:21:22,510 --> 00:21:22,860
screen.

257
00:21:22,860 --> 00:21:24,540
By this point.

258
00:21:25,210 --> 00:21:31,220
So if that's the case we want to shift it to the right and to do that.

259
00:21:31,420 --> 00:21:46,080
We're going to take Choop X Y and add to it well we're going to want for half screen with this because

260
00:21:46,080 --> 00:21:48,490
that's the total distance between our troops.

261
00:21:49,050 --> 00:21:57,330
But in the general case that's going to be a number of tubes multiplied by distance between ships.

262
00:21:58,050 --> 00:22:04,650
So that should shift it over to the right the correct amount so that it can then come back in again.

263
00:22:05,190 --> 00:22:10,560
And then if it's not off the edge of the cheaps of the edge of the screen sorry then we'll move it to

264
00:22:10,560 --> 00:22:13,070
the left as we initially planned.

265
00:22:18,120 --> 00:22:20,220
Okay well that's compiling.

266
00:22:20,220 --> 00:22:24,330
I did think that perhaps the tubes were slightly too close together.

267
00:22:27,230 --> 00:22:34,250
So let's just try changing that to instead of half the screen with would change it to three quarters

268
00:22:34,250 --> 00:22:38,860
of the screen with just a C doesn't really matter.

269
00:22:39,050 --> 00:22:42,360
But I think that'll make the game a little bit more playable.

270
00:22:43,540 --> 00:22:49,440
OK so now we've got one t three four.

271
00:22:50,120 --> 00:22:51,610
We're going to get another Chib we are.

272
00:22:51,620 --> 00:22:54,760
There's the fifth one and Brillion.

273
00:22:54,920 --> 00:22:59,150
So those chips are now coming thick and fast all the way

274
00:23:02,030 --> 00:23:02,650
William.

275
00:23:02,670 --> 00:23:06,840
So now we've got our troops we've got them hopefully a reasonable distance apart.

276
00:23:06,870 --> 00:23:11,760
The main thing obviously that the game is not currently doing is any kind of collision detection.

277
00:23:11,880 --> 00:23:18,120
So we obviously want the bird to see if it hits the tubes for the game to be over.

278
00:23:18,120 --> 00:23:20,320
And that's what we're going to do in the next video.

279
00:23:20,420 --> 00:23:20,880
See you then.
