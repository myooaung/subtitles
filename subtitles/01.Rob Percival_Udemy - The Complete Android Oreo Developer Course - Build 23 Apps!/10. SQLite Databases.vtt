WEBVTT
1
00:00:00.590 --> 00:00:00.890
All right.

2
00:00:00.890 --> 00:00:05.200
In this lecture we are gonna be learning about how to work with databases.

3
00:00:05.210 --> 00:00:10.160
And we're gonna work the particular type of database called an S Q L lite database.

4
00:00:10.160 --> 00:00:15.620
So if you haven't heard of Eskew well before it stands for server query and language it's a basic way

5
00:00:15.620 --> 00:00:21.500
to store some data inside of something called a database and then access it that information and edit

6
00:00:21.500 --> 00:00:26.180
it change it delete it whatever you need to do and you might be wondering and I don't even know what

7
00:00:26.180 --> 00:00:27.170
a database is.

8
00:00:27.200 --> 00:00:32.900
Well just think of a database as a place to store large amounts of information when and when you think

9
00:00:32.900 --> 00:00:36.260
about databases at their very biggest.

10
00:00:36.260 --> 00:00:42.440
Think about a company like Facebook or Twitter where they have to store millions and millions of Facebook

11
00:00:42.440 --> 00:00:45.600
posts or millions and millions of tweets.

12
00:00:45.860 --> 00:00:48.070
I mean maybe that even gets up into the billions.

13
00:00:48.080 --> 00:00:52.710
But you know it has to store all this information in something called the database.

14
00:00:52.760 --> 00:00:57.980
And the awesome thing about databases is they're really good about handling large amounts of information

15
00:00:58.010 --> 00:01:03.080
like that so our shared preferences that we've been working with before for example if we wanted to

16
00:01:03.080 --> 00:01:08.710
store let's say for example we're making an app that was going to catalog all of our music.

17
00:01:08.720 --> 00:01:15.140
So you know music that has a bunch of artists and those artists have albums and those albums have songs

18
00:01:15.140 --> 00:01:22.460
and stuff like if we had 40000 songs that we wanted to list inside of a string array that would go terribly

19
00:01:22.460 --> 00:01:25.700
if we tried to save that in the shared preferences and take a long time to save.

20
00:01:25.700 --> 00:01:31.130
But with a database that's built to handle something like that it could go much much faster and process

21
00:01:31.130 --> 00:01:33.920
that in a much better way for the user.

22
00:01:33.920 --> 00:01:39.350
So what I want to teach you is how to work with an ask you old database and then through this you'll

23
00:01:39.350 --> 00:01:44.280
see how you can store information and ultimately the more robust of an application you want.

24
00:01:44.280 --> 00:01:46.780
You're gonna want to tend to side more with.

25
00:01:46.800 --> 00:01:53.050
Q Well databases versus you know if it's kind of a smaller task shared preferences might work.

26
00:01:53.060 --> 00:01:57.440
But I want to show you a little bit more of what the heavy duty world is like so let's go ahead and

27
00:01:57.440 --> 00:02:00.110
create a new Android Studio project.

28
00:02:00.110 --> 00:02:06.410
I think we can just go ahead and call this database demo and we'll just use defaults for everything

29
00:02:06.410 --> 00:02:06.600
here.

30
00:02:06.620 --> 00:02:12.050
We're not going to do anything visual this is is gonna be all V a code but basically the main thing

31
00:02:12.050 --> 00:02:17.810
that I want to get across to you here is that I think the best way to think about a database is to think

32
00:02:17.810 --> 00:02:22.250
of it as an Excel spreadsheet or a Google Sheet.

33
00:02:22.270 --> 00:02:28.510
If you don't have if you've never used Microsoft Excel before but basically a s.

34
00:02:28.510 --> 00:02:34.760
Q Well database consists of something called Well first the database and I would think of that if you

35
00:02:34.760 --> 00:02:40.730
have like a spreadsheet file like this the whole file this is called the database.

36
00:02:40.730 --> 00:02:43.370
And in this database you could have multiple tables.

37
00:02:43.370 --> 00:02:50.080
So for example here you can see one table and maybe I'm you know for example in our example we're gonna

38
00:02:50.090 --> 00:02:51.950
make a database that holds users.

39
00:02:51.950 --> 00:02:55.700
So I would call this the users database.

40
00:02:55.810 --> 00:03:02.420
OK so with this database let's say I want to store some information about users like I want to know

41
00:03:02.780 --> 00:03:04.040
what their name is.

42
00:03:04.040 --> 00:03:06.320
And I also want to know what their ages.

43
00:03:06.350 --> 00:03:11.770
So these are like two pieces of information that I want to store about a particular user.

44
00:03:11.840 --> 00:03:14.440
And then as you know I get more and more users.

45
00:03:14.450 --> 00:03:15.640
I would add something.

46
00:03:15.650 --> 00:03:20.360
I would insert something into this table so I would say OK there's someone named Nick.

47
00:03:20.360 --> 00:03:21.730
And he's 28 years old.

48
00:03:21.740 --> 00:03:24.490
And then there's someone named Sara.

49
00:03:24.620 --> 00:03:26.690
And she is 35 years old.

50
00:03:26.690 --> 00:03:28.230
There's someone named Jane.

51
00:03:28.250 --> 00:03:30.870
She is six years old.

52
00:03:30.890 --> 00:03:35.150
There's someone named Rob and we go.

53
00:03:35.270 --> 00:03:40.070
And he is 14 years old and you can kind of just go like this and you are adding people to your table

54
00:03:40.070 --> 00:03:41.480
here called users.

55
00:03:41.510 --> 00:03:46.520
So really a database at the end of the day sort of represents the same thing that this sheet does.

56
00:03:46.520 --> 00:03:51.180
So we're gonna come back and references but I just want you to have this idea in your mind.

57
00:03:51.230 --> 00:03:54.440
So let's go ahead and open up Android Studio.

58
00:03:54.440 --> 00:03:56.330
We're just gonna do everything here and on create.

59
00:03:56.330 --> 00:04:00.560
And like I said I'm just going to show you how to get a table database set up and we're not going to

60
00:04:00.560 --> 00:04:03.980
do any visual stuff we're just going to log out some information.

61
00:04:04.370 --> 00:04:10.010
So step one for us to create an S Q L light database and I will mention if you want to know about more

62
00:04:10.010 --> 00:04:12.160
about S Q Well and how databases work.

63
00:04:12.260 --> 00:04:13.100
Please go Google it.

64
00:04:13.100 --> 00:04:17.660
There's tons of information but hopefully I've got enough for you here to get off the ground.

65
00:04:17.720 --> 00:04:24.590
So first thing that we're gonna create is an S Q A LIGHT database so capital Eskew a light database

66
00:04:25.220 --> 00:04:28.010
and we'll just go ahead and call this my database.

67
00:04:28.010 --> 00:04:33.350
There's nothing special about that name it's just a name that I created and we're gonna say this is

68
00:04:33.350 --> 00:04:38.160
equal to this dot open or create database.

69
00:04:38.180 --> 00:04:43.400
So the cool thing about this is when you want to create a new database you give it a name and by using

70
00:04:43.400 --> 00:04:48.680
this open or create a saying hey if there's already an existing one well then I'll go ahead and just

71
00:04:48.710 --> 00:04:49.160
open that.

72
00:04:49.160 --> 00:04:51.550
But if there's not one then I'll go ahead and create it.

73
00:04:51.560 --> 00:04:53.690
So this is kind of a cool function there.

74
00:04:53.720 --> 00:04:59.330
So we have to give a name for our database which if we think about our spreadsheet example that would

75
00:04:59.380 --> 00:05:01.390
be like naming this file.

76
00:05:01.390 --> 00:05:09.040
And so if we come back to our example here I would maybe call this capital users like that but all the

77
00:05:09.040 --> 00:05:10.690
lowercase there.

78
00:05:10.690 --> 00:05:14.410
So that's typically what you do with the name of the databases you give the first letter of the capital

79
00:05:14.410 --> 00:05:16.420
and everything else lowercase.

80
00:05:16.420 --> 00:05:19.690
Then we have to set what kind of mode that we want this in.

81
00:05:19.690 --> 00:05:23.220
And so just like we did with shared preferences let's do mode.

82
00:05:23.210 --> 00:05:25.990
Private that says only this app can access this.

83
00:05:26.200 --> 00:05:30.190
You know you could do something else if you want to let other apps access it but most the time you want

84
00:05:30.190 --> 00:05:31.360
mode private.

85
00:05:31.360 --> 00:05:34.900
And then lastly there's some special things you can do with exceptions.

86
00:05:34.900 --> 00:05:36.670
But we're just going to put all for this.

87
00:05:36.670 --> 00:05:39.460
We just want to go ahead and roll the default way.

88
00:05:39.460 --> 00:05:45.700
So this is first line of code this creates a new database force or if that database already exists it

89
00:05:45.700 --> 00:05:47.890
will open it back up for us.

90
00:05:47.890 --> 00:05:52.540
And then once we have a database we need to create a table.

91
00:05:52.570 --> 00:05:58.480
So again if we open up a new file we would have to create a new table for exists.

92
00:05:58.540 --> 00:06:00.910
For example here may be called users.

93
00:06:00.910 --> 00:06:07.780
So if we come back to Android Studio here we need to now take my database and we're going to do dot

94
00:06:08.170 --> 00:06:12.310
e XY C S Q Well and this is short for execute Eskew well.

95
00:06:12.490 --> 00:06:16.540
And again S Q Well is this whole separate language from like Java.

96
00:06:16.550 --> 00:06:19.150
It's a way to interact with databases.

97
00:06:19.330 --> 00:06:24.520
And so we're going to put some information into a string and the code that we put in there is s q well

98
00:06:24.520 --> 00:06:29.050
and get if you want to learn more Eskew L you can definitely Google it but this is the code that we

99
00:06:29.050 --> 00:06:33.880
write in order to like make tables insert things in there and you'll see as we go.

100
00:06:34.570 --> 00:06:40.960
So typically Eskew well as in all capitals except for when you're working with the names of like databases

101
00:06:40.990 --> 00:06:46.970
and variables table name stuff like that so we're going to type out just follow me here for a second.

102
00:06:47.110 --> 00:07:01.780
All Caps create space table space if not a this and then we're gonna go lowercase users and then we're

103
00:07:01.780 --> 00:07:11.440
gonna do in parentheses here we're going to say lower case name space var capital var char comma age

104
00:07:11.500 --> 00:07:18.910
space capital int we're going to do parentheses put the number three inside of there and that's it.

105
00:07:18.910 --> 00:07:24.750
Okay so this is what we're creating and essentially this is what this line of S Q Well Code says that

106
00:07:24.760 --> 00:07:27.220
says create table if not exists.

107
00:07:27.220 --> 00:07:31.570
Now the grammar on this isn't excellent but it's pretty close to English here we're saying make a new

108
00:07:31.570 --> 00:07:35.010
table in this database if it doesn't exist.

109
00:07:35.020 --> 00:07:39.130
Now if it does exist then it will just skip this line of code but as same as long as this doesn't exist

110
00:07:39.130 --> 00:07:44.200
create a new table called the users and it's typically OK to call the name of one of your tables the

111
00:07:44.200 --> 00:07:46.570
same thing as your fault your database.

112
00:07:46.570 --> 00:07:47.830
That's usually fine.

113
00:07:47.830 --> 00:07:53.260
So we're saying create a new table as long as it doesn't exist called users and then within that we

114
00:07:53.260 --> 00:07:55.560
want to have two properties of a user.

115
00:07:55.600 --> 00:07:56.190
Right.

116
00:07:56.230 --> 00:07:58.920
We want to know the user's name and their age.

117
00:07:59.020 --> 00:07:59.260
Right.

118
00:07:59.260 --> 00:08:03.350
So if we go back to our example here in numbers.

119
00:08:03.580 --> 00:08:09.470
So we made a new table called users and we said we want to know somebody whose name and their age.

120
00:08:09.550 --> 00:08:15.280
Now with a database you have to be specific that you say Ok name are going to be something called a

121
00:08:15.280 --> 00:08:16.680
var char in a var charge.

122
00:08:16.690 --> 00:08:21.940
Just think of that as a string char is short for characters and it's saying it's a collection of characters

123
00:08:21.940 --> 00:08:25.270
so name is a var char a.k.a. a string.

124
00:08:25.270 --> 00:08:30.160
And then age is an int and the number that we pass in the parentheses is that's how many digits you

125
00:08:30.160 --> 00:08:30.940
want to go to.

126
00:08:31.270 --> 00:08:35.140
So I can't imagine someone being older than nine hundred and ninety nine years old.

127
00:08:35.140 --> 00:08:36.610
So that's why I kept that as three.

128
00:08:36.610 --> 00:08:40.610
But you know we could make this for 10 whatever it is that we want to be.

129
00:08:40.810 --> 00:08:43.750
But in this case I think we're OK with three.

130
00:08:44.020 --> 00:08:48.450
So yeah that's all that this line of code says it says make a new table called users and we're going

131
00:08:48.450 --> 00:08:53.610
to have a name and age where name is a string and age represents an end.

132
00:08:53.640 --> 00:08:54.420
OK.

133
00:08:54.610 --> 00:08:59.290
So after that line of code the next thing that we're gonna do is we're actually going to put some information

134
00:08:59.290 --> 00:09:01.180
into this table.

135
00:09:01.180 --> 00:09:07.570
So that would be the equivalent of going to our spreadsheet here and saying you know Nick and putting

136
00:09:07.570 --> 00:09:13.320
in 50 or something I guess or we already have Nick up there let's change this to a Rick for example.

137
00:09:13.330 --> 00:09:16.300
So maybe let's just do this top on right.

138
00:09:16.300 --> 00:09:18.910
Let's just add Nick with an age of 28.

139
00:09:18.940 --> 00:09:25.030
So if we come back to our code here again we're gonna do my database start execute fast Q Well this

140
00:09:25.030 --> 00:09:27.720
is how you connect with the database.

141
00:09:27.730 --> 00:09:29.580
So it's looking for a string.

142
00:09:29.690 --> 00:09:36.340
And in this one we're going to say in all caps insert N2 and we're trying to insert something into our

143
00:09:36.340 --> 00:09:39.970
table which is called users here so we'll do lower case users.

144
00:09:40.210 --> 00:09:46.410
So insert into users and what we're trying to insert is in both a name and an age.

145
00:09:46.420 --> 00:09:52.090
So we put those both in parentheses comma separating the two and then we say what values are going to

146
00:09:52.090 --> 00:09:53.660
be connected with those.

147
00:09:53.740 --> 00:10:01.450
So we you say the values of and let's go ahead and put in parentheses first we're going to put the name

148
00:10:01.450 --> 00:10:02.560
that we want to put through.

149
00:10:02.560 --> 00:10:09.840
Go ahead and put whenever you're using a string or I guess technically a var char here in Eskew Well

150
00:10:09.850 --> 00:10:10.890
you use single quotes.

151
00:10:10.900 --> 00:10:17.320
So I'm going to put for example Nick right in there and then I'm going to say comma and then put it

152
00:10:17.320 --> 00:10:19.280
an age like twenty eight.

153
00:10:19.290 --> 00:10:21.190
OK so let's walk through what we did.

154
00:10:21.190 --> 00:10:28.030
We said insert into users we want to add something into the user's table and we want to add a name and

155
00:10:28.030 --> 00:10:31.630
an age and we're saying OK for name and the age here's the values.

156
00:10:31.720 --> 00:10:35.010
So what's the name going to be equal to names going to be equal to Nick.

157
00:10:35.020 --> 00:10:38.140
What's age going to be equal to age is equal to 28.

158
00:10:38.160 --> 00:10:38.480
Okay.

159
00:10:38.530 --> 00:10:41.250
And you'll notice for the name we had to put the single quote around it.

160
00:10:41.260 --> 00:10:45.580
That's how we represent that and the age we just did a straight up number.

161
00:10:45.570 --> 00:10:54.100
So that is the exact same thing as going to here and saying OK I'm going to add in insert Nick and he

162
00:10:54.100 --> 00:10:55.180
has an age of 28.

163
00:10:55.180 --> 00:10:59.000
I've inserted a row into this table.

164
00:10:59.180 --> 00:11:00.070
OK.

165
00:11:00.640 --> 00:11:06.920
So to make sure you're comprehending what's going on I want you to add one more person into your database

166
00:11:06.930 --> 00:11:09.940
it may be yourself if you already put your own name and age in there.

167
00:11:09.940 --> 00:11:13.010
Go ahead and pick someone else but add someone to your database.

168
00:11:13.000 --> 00:11:17.610
Now all right hopefully that went well for you.

169
00:11:17.920 --> 00:11:19.930
It's going to be very similar to what we have up top.

170
00:11:19.930 --> 00:11:25.290
So I'm just going to copy and paste this and say insert into user's name and age but instead of Nick

171
00:11:25.300 --> 00:11:32.040
in 28 maybe I'll do Sean who is let's do 33.

172
00:11:32.080 --> 00:11:32.810
OK.

173
00:11:32.980 --> 00:11:37.360
So now I have two people that are going to go inside of my database.

174
00:11:37.360 --> 00:11:43.300
Now this is how you add people to a database the question then becomes how do you pull people out of

175
00:11:43.300 --> 00:11:45.820
a database like how do you get someone's information.

176
00:11:45.820 --> 00:11:48.910
Well you use something called a cursor.

177
00:11:48.970 --> 00:11:54.600
So go ahead and just start typing out cursor hit enter to make sure you get the proper imports there.

178
00:11:54.720 --> 00:12:03.160
Also cursor c is equal and that's usually what people call it cursor C cursor c b equal to my capital

179
00:12:03.160 --> 00:12:04.640
database.

180
00:12:04.990 --> 00:12:12.280
Dot raw query and a queries whenever you're pulling something out of the database here we're like creating

181
00:12:12.280 --> 00:12:15.940
new tables inserting things in a queries when you're taking something back out.

182
00:12:15.970 --> 00:12:22.060
So a raw query and we can have to provide a string with this and the string that we want to provide

183
00:12:22.060 --> 00:12:27.510
is we're gonna say we just want to say give us every single thing that's inside of the user's table.

184
00:12:27.550 --> 00:12:30.700
It'd be the same thing as saying give us everything that's listed down here.

185
00:12:30.700 --> 00:12:33.380
So if we had maybe just to keep things consistent.

186
00:12:33.380 --> 00:12:33.720
Right.

187
00:12:33.780 --> 00:12:36.470
Thirty 33 we're saying give us both these lines.

188
00:12:36.580 --> 00:12:44.620
And if there were more lines I'd say give me those but so we're gonna say Here call caps select star

189
00:12:45.430 --> 00:12:51.790
capital from and then we're gonna give the name of the table which is lower case users in this select

190
00:12:51.790 --> 00:12:57.610
star from us it saying select everything the star represents everything so we're saying select everything

191
00:12:57.610 --> 00:12:59.870
from the table users.

192
00:12:59.890 --> 00:13:00.160
All right.

193
00:13:00.160 --> 00:13:04.720
Once you've provided the you well query we have to provide one more parameter.

194
00:13:04.720 --> 00:13:09.700
And in this case there's some special things you can provide when you're doing a query but we're just

195
00:13:09.700 --> 00:13:11.620
going to go ahead and put it all there.

196
00:13:11.620 --> 00:13:13.110
So we'll just do that.

197
00:13:13.120 --> 00:13:13.840
OK.

198
00:13:13.900 --> 00:13:19.420
So with all of that in place the next thing that we want to do is if we want to access the name and

199
00:13:19.450 --> 00:13:23.740
age we're gonna have to get the indexes for those and you might not know what an index is now but just

200
00:13:23.830 --> 00:13:25.790
walk with me for a second here.

201
00:13:25.830 --> 00:13:36.430
I to say index or int name index is equal to C dot get and we won't get column index and we're gonna

202
00:13:36.460 --> 00:13:41.350
pass in the name of one of the columns so we're going to say name and if you're wondering what a column

203
00:13:41.350 --> 00:13:43.250
is inside of a table.

204
00:13:43.330 --> 00:13:45.450
So this would be considered a column.

205
00:13:45.460 --> 00:13:46.960
This is the name column.

206
00:13:47.080 --> 00:13:50.470
This is the age column so that's what it's going for here.

207
00:13:50.470 --> 00:13:55.180
So it's come back to our code so we're saying we have a name index that says Get us the column index

208
00:13:55.180 --> 00:13:59.750
for name there was a int age index.

209
00:13:59.770 --> 00:14:08.080
It's going to be equal to C Dog get column index for age just like that all right.

210
00:14:08.080 --> 00:14:14.590
So with these two pieces of information in place we have to take our cursor and get it to the starting

211
00:14:14.590 --> 00:14:19.030
position so we're going to say see dot move to first.

212
00:14:19.390 --> 00:14:25.210
And essentially what this does is we're saying hey move our cursor to the starting position which is

213
00:14:25.270 --> 00:14:28.290
if we were looking at this here it would get us to Nick.

214
00:14:28.300 --> 00:14:33.790
So it's sort of saying hey start right here ready to process this first row of code then you know it

215
00:14:33.790 --> 00:14:36.260
can eventually move on to all the items.

216
00:14:36.310 --> 00:14:42.040
So we're going to come back to Android Studio here and once we're at the first position we want to loop

217
00:14:42.040 --> 00:14:44.950
through each row inside of the table right.

218
00:14:44.950 --> 00:14:47.480
We want to go to here to here to here to here.

219
00:14:47.500 --> 00:14:54.610
So we're going to set up a wall loop in order to do that so we're going to say Wall C is not equal to

220
00:14:54.610 --> 00:14:58.630
null then we want to go ahead and do the following information.

221
00:14:58.630 --> 00:15:03.240
So if there is nothing inside of the database see we'll be equal to nil and it won't run this code.

222
00:15:03.250 --> 00:15:08.590
But if we say see you've moved to first and there is something there then C is going to have the information

223
00:15:08.590 --> 00:15:10.030
for that first item.

224
00:15:10.150 --> 00:15:13.090
So to get that information we're going to do a log.

225
00:15:13.090 --> 00:15:20.320
We're going to say log dot I and we'll say this first is going to represent the name and then to get

226
00:15:20.320 --> 00:15:27.710
the actual name information we're going to say see dot get string and we need to provide it.

227
00:15:27.760 --> 00:15:30.010
You can see an ENT and we're going to provide it.

228
00:15:30.010 --> 00:15:34.210
One of the name index to say that we want to get to the names we're going to go ahead and provide name

229
00:15:34.210 --> 00:15:35.200
index there.

230
00:15:35.410 --> 00:15:41.200
And that's going to get the string of whatever that person's name is and then it's afterward done with

231
00:15:41.200 --> 00:15:41.880
this.

232
00:15:41.920 --> 00:15:50.500
We're going to go ahead and loop on to the next one so we're going to say see dot move to next.

233
00:15:50.680 --> 00:15:55.960
And that will go on to the next item and once it runs out of items see will eventually become null right

234
00:15:55.960 --> 00:15:57.430
which at that point and we'll do that.

235
00:15:58.120 --> 00:16:05.800
But what I want you to do is I want you to add the proper code to log out the age in addition to the

236
00:16:05.800 --> 00:16:06.220
name.

237
00:16:06.250 --> 00:16:11.520
So go ahead do it on your own make sure you can log out the age as well as a name hit pause.

238
00:16:11.530 --> 00:16:14.350
Now OK.

239
00:16:14.400 --> 00:16:16.510
Hopefully that went well for you.

240
00:16:16.740 --> 00:16:21.200
It's almost the same thing as this except we're just want to know about the age.

241
00:16:21.210 --> 00:16:24.540
So we've got to update this with age index.

242
00:16:24.540 --> 00:16:25.470
OK.

243
00:16:25.680 --> 00:16:31.320
So with this information in place you are ready to go ahead and give this a try.

244
00:16:31.320 --> 00:16:35.880
So let's go ahead and run this on our emulator.

245
00:16:35.880 --> 00:16:42.340
So we should see what happens is that when we run this it's going to come through and say hey open our

246
00:16:42.350 --> 00:16:47.070
created database while we haven't created any data bases before so it's going to create this new database

247
00:16:47.070 --> 00:16:51.870
called users that's going to say hey if this table doesn't exist create this new table called users

248
00:16:52.320 --> 00:16:57.270
and because it doesn't exist it will create one and it's going to have a column for names and a column

249
00:16:57.270 --> 00:17:01.550
for ages then we're going to add two people into that database.

250
00:17:01.560 --> 00:17:07.920
So we're going to add one person named Nick who's 28 and one person named Sean who's 33 then once we've

251
00:17:07.920 --> 00:17:13.950
added those two people to the table inside of the database we are going to do a query where we say hey

252
00:17:14.190 --> 00:17:20.760
don't give us every single person inside of the user's table then we're gonna get the name index and

253
00:17:20.760 --> 00:17:26.100
the age index so we can get the proper information from this query but then we're gonna get our cursor

254
00:17:26.190 --> 00:17:30.720
moved to the very first one and then we're gonna do this while loop that says Okay print out the name

255
00:17:30.720 --> 00:17:36.330
and age for the current place of the cursor is that and then we're gonna say see Dot moved to next in

256
00:17:36.330 --> 00:17:38.070
this C dot move to next.

257
00:17:38.070 --> 00:17:44.100
Essentially is doing this it's you know if we've started here and we're looking at this row when I say

258
00:17:44.100 --> 00:17:50.510
see dot move the next moves down to the next row and moves down to the next to the next to the next.

259
00:17:50.550 --> 00:17:55.800
So you know if there was a bunch of information like if we had this repeated a bunch of times right

260
00:17:55.830 --> 00:18:01.170
it would move down and once it goes you know it's on this line it moves to the next and there's nothing.

261
00:18:01.170 --> 00:18:08.220
Well that's when C would be equal to NULL which then means we would you know this while loop would stop.

262
00:18:08.640 --> 00:18:14.430
So let's go ahead and open up blog cat see what information we got and let's go ahead and scroll the

263
00:18:14.430 --> 00:18:15.630
top and look at that.

264
00:18:15.780 --> 00:18:20.220
We have it printed out Nick 28 Shawn 33.

265
00:18:20.490 --> 00:18:25.650
Now if we wanted to run this one more time it would come through.

266
00:18:25.650 --> 00:18:29.310
It wouldn't recreate the database because it started there wouldn't recreate the table because already

267
00:18:29.310 --> 00:18:29.810
there.

268
00:18:29.940 --> 00:18:32.200
But it would add in the same users.

269
00:18:32.220 --> 00:18:38.490
So in fact if we hit run here one more time we're going to see the number of users jump from two to

270
00:18:38.490 --> 00:18:39.000
four.

271
00:18:39.420 --> 00:18:42.420
So let's go ahead and look at log cat here and look at that.

272
00:18:42.420 --> 00:18:43.890
The exact thing happened.

273
00:18:43.920 --> 00:18:47.780
So we have Nick 28 Shawn 33 Nick 28 Shawn 33.

274
00:18:47.780 --> 00:18:53.820
So if we want to make it so we don't add any more people we just comment out these two lines of code

275
00:18:53.820 --> 00:18:56.990
and say look we don't need to do that anymore.

276
00:18:57.000 --> 00:18:59.910
And now if we've run the app one more time

277
00:19:03.320 --> 00:19:05.830
all right we'll give this a second to come around here.

278
00:19:10.170 --> 00:19:10.740
Look at that.

279
00:19:10.740 --> 00:19:11.890
It says Nick.

280
00:19:11.940 --> 00:19:12.410
Sean.

281
00:19:12.420 --> 00:19:12.680
Nick.

282
00:19:12.680 --> 00:19:17.010
Sean so it only had the four people because we essentially said hey quit adding people to this we just

283
00:19:17.010 --> 00:19:19.500
want to pull people out of it.

284
00:19:19.620 --> 00:19:23.130
Now to confirm and make sure that you've really got a good grasp on this.

285
00:19:23.130 --> 00:19:24.690
I have a challenge for you.

286
00:19:25.110 --> 00:19:27.110
So I want you to do is to.

287
00:19:27.120 --> 00:19:31.830
You can go back and reference the previous video to see some of this code to make sure you're doing

288
00:19:31.830 --> 00:19:33.120
things correctly.

289
00:19:33.120 --> 00:19:39.960
But what I want you to do is I want you to create a new database and a new table that represents some

290
00:19:39.960 --> 00:19:40.610
events.

291
00:19:40.650 --> 00:19:44.520
So in event table is going to have the name of the event.

292
00:19:44.520 --> 00:19:48.330
It's also going to have the year in which that event happened.

293
00:19:48.330 --> 00:19:52.680
So I'm kind of thinking like big world changing event type of thing.

294
00:19:52.680 --> 00:19:59.010
So go ahead and recreate a completely new database and table where it's dealing with events.

295
00:19:59.010 --> 00:20:01.220
Again the event is going to have a name.

296
00:20:01.230 --> 00:20:03.810
And then also a year in which that event happened.

297
00:20:03.800 --> 00:20:04.440
OK.

298
00:20:04.440 --> 00:20:05.670
So go ahead hit pause.

299
00:20:05.670 --> 00:20:09.130
Do that now all right.

300
00:20:09.150 --> 00:20:11.500
So hopefully that went well for you.

301
00:20:11.520 --> 00:20:15.450
We're gonna cut this out so that we can start from scratch here.

302
00:20:15.720 --> 00:20:21.480
And if you've noticed we've had a couple of errors here with problems that happen and I should have

303
00:20:21.480 --> 00:20:26.370
surrounded everything in a try catch to make this code a little bit more elegant.

304
00:20:26.370 --> 00:20:28.920
So on this one we'll go ahead and do that.

305
00:20:29.010 --> 00:20:39.270
So I set up a try catch skills to catch all those exceptions and we'll print those out and get them.

306
00:20:39.270 --> 00:20:39.550
All right.

307
00:20:39.570 --> 00:20:42.960
So with this try the first thing that we want to do.

308
00:20:42.960 --> 00:20:48.420
Just like before is we're gonna get our database and this one I'll just call it lowercase as cool light

309
00:20:48.430 --> 00:20:49.910
database.

310
00:20:49.920 --> 00:20:54.460
And this is going to be equal to this dot open or create database.

311
00:20:54.990 --> 00:21:01.610
And this time I'm going to call it capital events and I want this to be mode private.

312
00:21:01.620 --> 00:21:04.200
And we don't need any special exception stuff.

313
00:21:04.200 --> 00:21:05.580
So the sleeve that no.

314
00:21:05.940 --> 00:21:08.920
Next thing that we've got to do is we've got to set up the table.

315
00:21:08.940 --> 00:21:15.060
So we're gonna take as QoL light database dot executes on this.

316
00:21:15.060 --> 00:21:27.590
Q Well on that and we're gonna say in all caps create table if not exists and we want that to be lowercase

317
00:21:27.790 --> 00:21:36.700
events and then we'll go and say in parentheses an event should have a name which we should have represented

318
00:21:36.700 --> 00:21:37.760
by a var char.

319
00:21:37.980 --> 00:21:38.770
Okay a string.

320
00:21:38.770 --> 00:21:39.070
Right.

321
00:21:39.580 --> 00:21:44.530
And then we also want to have a year that we should be represented by an end and we should have this

322
00:21:44.530 --> 00:21:46.300
in be at least four digits long.

323
00:21:46.300 --> 00:21:46.510
Right.

324
00:21:46.510 --> 00:21:54.070
Because a year nineteen fifty five nineteen forty seven whatever it is you want to be able to do the

325
00:21:54.070 --> 00:21:55.030
four numbers there.

326
00:21:55.220 --> 00:21:56.010
OK.

327
00:21:56.140 --> 00:22:03.060
So that creates our table next we want to insert some data inside of there so again Askew a light database

328
00:22:03.160 --> 00:22:06.040
that lets execute some as well.

329
00:22:06.070 --> 00:22:16.000
So we're gonna say capital insert and we want to do in two events and we're gonna say we're gonna provide

330
00:22:16.030 --> 00:22:20.760
a name and a year that's just the name of those two properties right.

331
00:22:20.800 --> 00:22:26.270
And then the values for those properties are going to be.

332
00:22:26.410 --> 00:22:31.720
So let's go ahead and let's we should correct this insert.

333
00:22:31.750 --> 00:22:33.030
There we go.

334
00:22:33.040 --> 00:22:36.310
So what's the name of some famous event.

335
00:22:36.340 --> 00:22:41.670
Well I guess there was the the millennium which millennium.

336
00:22:41.890 --> 00:22:46.210
I don't think I spelled that correctly but that was the year 2000 right.

337
00:22:46.210 --> 00:22:51.070
Although I guess technically it was 2001 because the way the calendar works who knows what.

338
00:22:51.100 --> 00:22:54.220
But everybody went crazy in the year 2000 for the millennium.

339
00:22:54.260 --> 00:22:57.760
OK so that's one thing that we've got there.

340
00:22:57.910 --> 00:23:02.030
Let's go ahead and go ahead and add another life event.

341
00:23:02.290 --> 00:23:04.990
So this one was so monumental.

342
00:23:04.990 --> 00:23:06.910
Next started teaching.

343
00:23:07.750 --> 00:23:14.730
So that happened back in 2014 to me that's kind of a personal one like oh yeah that was a cool time.

344
00:23:14.730 --> 00:23:16.510
And I've loved it ever since.

345
00:23:16.510 --> 00:23:18.700
But so sorry.

346
00:23:18.700 --> 00:23:23.290
Getting cheesy on you here but we've added we've created this event's table we've added some information

347
00:23:23.320 --> 00:23:24.380
into it.

348
00:23:24.490 --> 00:23:31.180
The next thing that we need to do is create our cursor so we'll make our cursor see that should be equal

349
00:23:31.180 --> 00:23:34.100
to our rescue flight database.

350
00:23:34.120 --> 00:23:45.190
Dot raw query and this is where we'll say select star from the events just like that.

351
00:23:45.190 --> 00:23:46.780
We also want to provide a node there.

352
00:23:46.840 --> 00:23:52.450
We don't need any special stuff then with this cursor we're going to get the event index and the year

353
00:23:52.450 --> 00:23:52.890
index.

354
00:23:52.900 --> 00:24:06.760
So we'll say and event index it's going to be equal to C dot get to column index for or I don't want

355
00:24:06.760 --> 00:24:10.480
this to be event index I want it to be name index.

356
00:24:10.480 --> 00:24:16.900
So we'll do that for name and we'll do the same thing but we want to copy it for year so we'll call

357
00:24:16.900 --> 00:24:22.920
that year index and change that to b year.

358
00:24:22.990 --> 00:24:23.950
All right.

359
00:24:23.950 --> 00:24:31.720
So with all of that in place we're ready to say see dot move to first to get up to the first position

360
00:24:32.380 --> 00:24:42.700
then we'll do our while loop here J and we'll say as long as C is not equal to null then we want to

361
00:24:42.760 --> 00:24:44.070
log out some information.

362
00:24:44.080 --> 00:24:47.240
So we're gonna say log dot I.

363
00:24:48.450 --> 00:25:02.620
And with this we'll say results for the event is going to be equal to C dot to get string for the event

364
00:25:05.210 --> 00:25:07.790
sorry the name index.

365
00:25:07.820 --> 00:25:08.420
There we go.

366
00:25:09.170 --> 00:25:17.410
And we want to do something similar for the results.

367
00:25:18.460 --> 00:25:21.800
And that should be results name not event and then results.

368
00:25:21.790 --> 00:25:25.710
Yea and then it's on this one.

369
00:25:26.030 --> 00:25:31.820
I guess last time I did things a little bit improperly so if we're gonna grab an int from the database

370
00:25:31.820 --> 00:25:39.410
we should probably instead of doing get string we should do dot get int and we'll provide the year index

371
00:25:39.410 --> 00:25:43.520
there and then since we're gonna be logging this we have to say OK.

372
00:25:43.520 --> 00:25:52.130
Capital integer to string and then we can go ahead and surround that there and then put our semicolon

373
00:25:52.340 --> 00:25:55.230
on all that.

374
00:25:55.290 --> 00:25:55.820
There we go.

375
00:25:55.920 --> 00:26:00.250
Oh in this get rid of see dot get it.

376
00:26:00.480 --> 00:26:00.960
There we go.

377
00:26:01.590 --> 00:26:02.010
OK.

378
00:26:02.040 --> 00:26:06.460
So that should properly do all that and we got to make sure the while loop that we say see that moved

379
00:26:06.460 --> 00:26:06.950
to next.

380
00:26:06.960 --> 00:26:11.950
So if we don't have this move to not first move to next.

381
00:26:12.090 --> 00:26:15.300
It's just going to keep looping and looping through that very first one.

382
00:26:15.300 --> 00:26:18.690
That would be bad news for our situation here.

383
00:26:18.690 --> 00:26:25.650
So let's go ahead and run run this is kind of our moment of truth and kind of just sort of confirm what's

384
00:26:25.650 --> 00:26:27.020
going on here right.

385
00:26:27.030 --> 00:26:34.800
If we followed this example in the spreadsheet it'd be like renaming this file to be the name of events

386
00:26:35.300 --> 00:26:39.810
and then we would name this table to be events.

387
00:26:39.950 --> 00:26:40.490
OK.

388
00:26:40.530 --> 00:26:45.810
And it's not let me do a lower case there but the name of the table should be lower case than the name

389
00:26:45.810 --> 00:26:46.820
of these properties.

390
00:26:46.830 --> 00:26:50.310
We still want to keep name but this one is going to be a year.

391
00:26:50.310 --> 00:26:53.160
Again those should be lower case but that's fine.

392
00:26:53.160 --> 00:27:03.600
And it's like if we came and said OK the millennium was in the year 2000 we would even pulled over the

393
00:27:03.600 --> 00:27:06.510
green text that was kind of cool.

394
00:27:06.510 --> 00:27:13.980
And then if we come back to the code we copy Nick started teaching.

395
00:27:14.550 --> 00:27:15.470
Boom.

396
00:27:15.490 --> 00:27:17.990
We put it in 2014 there.

397
00:27:18.260 --> 00:27:20.130
Make sure 2000.

398
00:27:20.190 --> 00:27:20.390
All right.

399
00:27:20.390 --> 00:27:22.850
So that's essentially what's happening here right.

400
00:27:22.860 --> 00:27:27.680
So I just kind of do this example because I know databases can be a little bit of a foreign topic.

401
00:27:27.720 --> 00:27:29.940
But let's go ahead and open a blog Kat.

402
00:27:29.970 --> 00:27:32.100
See what we got here.

403
00:27:32.100 --> 00:27:33.930
And if we open it up look at that.

404
00:27:33.930 --> 00:27:41.010
It says Millennium 2000 Nick started teaching 2014 and also the air that we were getting before was

405
00:27:41.010 --> 00:27:43.610
now appropriately handled with this exception.

406
00:27:43.620 --> 00:27:46.400
So pretty cool stuff there.

407
00:27:46.410 --> 00:27:47.760
All right.

408
00:27:47.760 --> 00:27:52.510
Now that we've got that let's go ahead we still have some more details to learn about how to work with

409
00:27:52.510 --> 00:27:53.070
the database.

410
00:27:53.070 --> 00:27:58.620
But you know in the short little lecture you've had a proper introduction you've created two databases

411
00:27:58.620 --> 00:28:04.380
now and you know you've got to learn a little bit more knowledge about how tables and insertion works.

412
00:28:04.380 --> 00:28:05.220
You're looking great.

413
00:28:05.220 --> 00:28:06.970
So let's keep moving forward.
