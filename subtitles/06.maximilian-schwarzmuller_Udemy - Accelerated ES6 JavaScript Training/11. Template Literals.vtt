WEBVTT

00:00:01.240 --> 00:00:04.770
Another interesting addition to year 6 are template literals.

00:00:05.010 --> 00:00:13.550
Now template literals are basically kind of strings with extra features and I showed it to you.

00:00:13.830 --> 00:00:20.420
So first create a traditional variable here name where the value Max.

00:00:20.520 --> 00:00:21.770
And of course it could print that out.

00:00:21.780 --> 00:00:26.040
But asperin you this because well it's pretty straightforward what you would see.

00:00:26.220 --> 00:00:29.770
Then I will create another variable which will name risk description.

00:00:29.850 --> 00:00:33.190
And here I want to use a template literal.

00:00:33.270 --> 00:00:40.650
I do this by using the back take that's the character you've never heard before in on your keeper on

00:00:40.650 --> 00:00:41.730
your keyboard.

00:00:41.730 --> 00:00:45.300
It stays angled.

00:00:45.300 --> 00:00:53.430
Quotation mark here is so does not in normal single quotation mark but there bed leaning to the left

00:00:53.430 --> 00:00:54.740
quotation mark.

00:00:54.960 --> 00:01:01.070
You need two of them and then you might write multiline strings for example like this.

00:01:01.230 --> 00:01:11.380
If I now print this description here and I hit run you'll see the asterisk literal.

00:01:11.400 --> 00:01:17.190
Now that is a big difference already because of normal strings of course this would throw an error or

00:01:17.190 --> 00:01:23.820
if I try to do something like this you would get an syntax error so that already is an addition.

00:01:23.820 --> 00:01:30.690
It allows us to write multi-line strings like that but it also has more in its pocket than just that

00:01:30.690 --> 00:01:30.860
.

00:01:30.870 --> 00:01:37.500
For example we might use the variables inside of our template literal.

00:01:37.500 --> 00:01:44.170
So I might write Hello all I am and then notice also that I don't have to escape years.

00:01:44.180 --> 00:01:47.020
And so I use these back to ignore Haitian.

00:01:47.220 --> 00:01:53.550
And then I can use the following syntax to print out a variable which is defined outside of this template

00:01:53.550 --> 00:01:54.090
literal.

00:01:54.090 --> 00:02:01.320
For example my name I use a dollar sign for this and then curly braces and inside of those calling braces

00:02:01.380 --> 00:02:03.190
the name of the very low one to print.

00:02:03.240 --> 00:02:07.590
So name here if I know where to run what you think we'll see.

00:02:08.100 --> 00:02:08.520
We'll see.

00:02:08.520 --> 00:02:09.910
Hello I'm Max.

00:02:09.960 --> 00:02:17.310
So with the syntax I'm able to insert a variable inside my string here like this without having to exit

00:02:17.340 --> 00:02:22.500
out of my string plus value plus quotation marks string like before.

00:02:22.530 --> 00:02:29.190
Here you have one text and you can dynamically output values tets word a named template literals comes

00:02:29.190 --> 00:02:29.940
from.

00:02:29.940 --> 00:02:38.370
It kind of always might resemble if you're using that some templating engines you might use when doing

00:02:38.370 --> 00:02:45.420
some server side or some general app development where you word also have special syntax to insert values

00:02:45.450 --> 00:02:46.870
in your HDMI code.

00:02:46.890 --> 00:02:51.420
If that is something you're aware of or you're using.

00:02:51.510 --> 00:02:53.380
So that's kind of comparable here.

00:02:53.550 --> 00:02:59.640
And with that we have a very quick and good way to write more complex text and stored in the variable

00:02:59.640 --> 00:03:08.220
use multi-line and so on and also output our very world inside of it inside of this template expression

00:03:08.230 --> 00:03:08.300
.

00:03:08.370 --> 00:03:16.340
You might also add text again so like multiple exclamation marks.

00:03:16.380 --> 00:03:19.720
So for now run you see them here.

00:03:19.740 --> 00:03:25.270
So even though that's inside of this template expression inside of days call a brace block here.

00:03:25.470 --> 00:03:30.040
Well I add that like we used to with a plus sign and then the string.

00:03:30.150 --> 00:03:35.340
So in the end what we're doing here is between Neela's calling process you have to enter something which

00:03:35.340 --> 00:03:37.770
can be resolved to to whispering.

00:03:38.040 --> 00:03:43.650
And then you might do whatever you want to do here run some calculations and so on as long as the result

00:03:43.650 --> 00:03:50.240
of whatever you're doing here inside of the curly braces returns a string that's really important.

00:03:50.460 --> 00:03:58.620
By the way if for some reason you have a template literal where you need to actually print this out

00:03:58.650 --> 00:04:04.680
instead of replacing it with this variable and so you can simply escape it with a backslash.

00:04:04.680 --> 00:04:12.540
So now if I had run you'll see the whole template expression here and I'm not actually replacing name

00:04:12.540 --> 00:04:13.480
with Max.

00:04:13.560 --> 00:04:16.390
So that is how you can escape it if you need to.

00:04:16.770 --> 00:04:22.800
And that our template literal is a nice little addition to allow you to quickly write more complex text

00:04:22.830 --> 00:04:28.080
and stored them in variables as well as access different variables surrounding those template literals

00:04:28.090 --> 00:04:29.080
.