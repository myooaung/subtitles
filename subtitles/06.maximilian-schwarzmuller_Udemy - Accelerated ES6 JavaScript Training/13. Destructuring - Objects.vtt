WEBVTT

00:00:01.100 --> 00:00:07.520
It's not we always considered race and destructuring is also available for objects.

00:00:07.650 --> 00:00:13.200
Basically it works exactly the same and all the tricks are things that show you are also true for objects

00:00:13.210 --> 00:00:13.290
.

00:00:13.410 --> 00:00:15.170
But I still want to show it.

00:00:15.360 --> 00:00:21.580
So I'll create an object and just like with theory I don't have to create it.

00:00:21.600 --> 00:00:26.540
And then the structure I could do it on one step like a sword and the last lecture on arrays.

00:00:26.700 --> 00:00:30.760
But I'll still do it in two steps just to make it clearer clearer.

00:00:31.260 --> 00:00:40.020
So I'll have a name Max and then age 27 and next I want to restructure this.

00:00:40.050 --> 00:00:44.640
So I went to get the name and the age of this object.

00:00:44.640 --> 00:00:48.560
Now this would be yes you use it with arrays with the square brackets.

00:00:48.570 --> 00:00:51.510
However here we're destructuring an object and there were four.

00:00:51.510 --> 00:00:53.310
We have to change this.

00:00:53.370 --> 00:00:56.120
We have to use call braces here now.

00:00:56.250 --> 00:00:58.880
No I be structured like this.

00:00:59.100 --> 00:01:05.640
And this will pull out the name at H field from my object and store it in individual variables.

00:01:05.820 --> 00:01:14.230
So I can now print name and age like this if I know Heidrun what you think I'll see.

00:01:14.930 --> 00:01:19.710
Well of course I get max and 20:7 So this works exactly as I just described it.

00:01:19.800 --> 00:01:22.830
If I also have agreed to function here like this

00:01:27.850 --> 00:01:33.890
do you think I also can pull out discrete function but say simply by doing that.

00:01:34.200 --> 00:01:38.050
And let's leave out the middle one just Restylane reasons.

00:01:38.130 --> 00:01:45.360
If I now call read like this do you think this will work what will happen if I had run this doesn't

00:01:45.360 --> 00:01:45.970
work.

00:01:46.250 --> 00:01:52.920
Because for stylin reasons we could do this in the array where we have a clear order with an object

00:01:52.930 --> 00:01:57.200
pre-conscious skip a certain value here.

00:01:57.240 --> 00:02:03.990
So I simply can leave it out though because we're very not having order properties here we are identifying

00:02:03.990 --> 00:02:05.540
them by name anyways.

00:02:05.790 --> 00:02:10.930
So I can do this if I know mid-run what I think will happen.

00:02:11.160 --> 00:02:12.290
Now you see Hello there.

00:02:12.300 --> 00:02:13.600
So this does work.

00:02:13.680 --> 00:02:18.690
But it's important to understand why this syntax didn't work.

00:02:18.690 --> 00:02:25.770
And the reason for this is as I said we're already referencing them by a name not by position in the

00:02:25.770 --> 00:02:26.240
array.

00:02:26.290 --> 00:02:29.420
We're deconstructing them by position.

00:02:29.430 --> 00:02:33.060
Now we're deconstructing this object by name.

00:02:33.060 --> 00:02:38.830
Therefore if we have Name one year for example this also will create one.

00:02:38.840 --> 00:02:45.030
Now it run this also it wouldn't work because grid one isn't found as a property in this object.

00:02:45.030 --> 00:02:47.430
Those names here have to match.

00:02:47.610 --> 00:02:50.840
That is really important to understand.

00:02:50.910 --> 00:02:55.590
Now explain that names have to match so name has to match name and create Testament's greed in order

00:02:55.590 --> 00:02:58.580
to successfully deconstruct this object.

00:02:58.650 --> 00:03:02.340
But sometimes you want a different name for this variable.

00:03:02.340 --> 00:03:06.510
Outside of this object then you are using inside of this object.

00:03:06.510 --> 00:03:12.960
That's why when deconstructing objects or destructuring objects you can use aliases.

00:03:12.990 --> 00:03:19.500
So for example I could give greed and Al yours off hello and then I could rename this function here

00:03:19.500 --> 00:03:20.630
too.

00:03:20.840 --> 00:03:27.360
If Now Naledge run it still works because now Greta you're referring to the property name and the size

00:03:27.360 --> 00:03:28.340
of the object.

00:03:28.470 --> 00:03:36.270
But hello will be the name I use outside of this object like here and if I still try to use greed will

00:03:36.270 --> 00:03:37.020
that still work.

00:03:37.020 --> 00:03:40.400
What do you think of what will happen if I had run.

00:03:40.680 --> 00:03:45.700
This won't work anymore because now hello is the only name we may use outside of this object.

00:03:45.810 --> 00:03:47.200
So we have to stick to it