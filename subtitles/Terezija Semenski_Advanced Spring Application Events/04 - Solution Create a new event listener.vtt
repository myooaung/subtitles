WEBVTT
1
00:00:00.000 --> 00:00:06.007
(upbeat music)

2
00:00:06.007 --> 00:00:08.002
- [Instructor] Welcome back.

3
00:00:08.002 --> 00:00:10.006
How did you make out with the challenge?

4
00:00:10.006 --> 00:00:12.009
I hope you were successful.

5
00:00:12.009 --> 00:00:15.003
I will walk you through my solution.

6
00:00:15.003 --> 00:00:19.008
Now it might look different than yours, but that's fine,

7
00:00:19.008 --> 00:00:22.003
as long as the outcome is the same.

8
00:00:22.003 --> 00:00:25.004
First, between the customer package,

9
00:00:25.004 --> 00:00:30.001
we will create a new class, CustomerRemovedEvent,

10
00:00:30.001 --> 00:00:33.003
which will be used as an event class.

11
00:00:33.003 --> 00:00:37.009
This is just a POJO that needs to hold a customer object.

12
00:00:37.009 --> 00:00:40.000
I like to use long block annotations

13
00:00:40.000 --> 00:00:42.007
to make things less cluttered.

14
00:00:42.007 --> 00:00:47.000
Now in our customer service, remove customer method,

15
00:00:47.000 --> 00:00:50.008
make sure after the customer has been removed,

16
00:00:50.008 --> 00:00:53.009
we publish an event.

17
00:00:53.009 --> 00:00:58.000
ApplicationEventPublisher has already been injected

18
00:00:58.000 --> 00:01:00.003
from the previous exercise,

19
00:01:00.003 --> 00:01:06.001
so we can use it to publish a new CustomerRemovedEvent.

20
00:01:06.001 --> 00:01:08.008
In the new CustomerRemovedEvent,

21
00:01:08.008 --> 00:01:11.006
we need to also include a reference

22
00:01:11.006 --> 00:01:14.008
through removed customer.

23
00:01:14.008 --> 00:01:17.009
Between EventListener's class,

24
00:01:17.009 --> 00:01:22.009
create a new method called onCustomerRemovedEvent

25
00:01:22.009 --> 00:01:26.003
with the argument CustomerRemovedEvent

26
00:01:26.003 --> 00:01:34.009
and annotate it with @EventListener.

27
00:01:34.009 --> 00:01:38.003
For sending an email, we will use an existing method

28
00:01:38.003 --> 00:01:42.003
from email service, sendCustomerRemovedEmail,

29
00:01:42.003 --> 00:01:45.001
and call it between our method.

30
00:01:45.001 --> 00:01:51.000
Keep in mind, this method is just doing log print.

31
00:01:51.000 --> 00:01:55.002
And finally, you can run a test method to test

32
00:01:55.002 --> 00:01:58.000
if email service has been called up,

33
00:01:58.000 --> 00:02:06.007
and it was a removal.

34
00:02:06.007 --> 00:02:08.006
And there you have it.

35
00:02:08.006 --> 00:02:11.009
We managed to extend existing functionalities

36
00:02:11.009 --> 00:02:14.000
by using events.

