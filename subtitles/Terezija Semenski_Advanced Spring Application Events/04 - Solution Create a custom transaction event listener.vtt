WEBVTT
1
00:00:00.005 --> 00:00:06.004
(upbeat music)

2
00:00:06.004 --> 00:00:08.003
- [Instructor] How was the challenge?

3
00:00:08.003 --> 00:00:11.008
I hope you were able to solve it and verify the solution

4
00:00:11.008 --> 00:00:13.009
with provided tests.

5
00:00:13.009 --> 00:00:18.002
I will work through it step by step towards the solution.

6
00:00:18.002 --> 00:00:23.000
First, we need to create a transaction event listener.

7
00:00:23.000 --> 00:00:25.005
We can use some existing class,

8
00:00:25.005 --> 00:00:29.004
but I would recommend a new one in a ticket package

9
00:00:29.004 --> 00:00:36.006
called ticket order failed listener.

10
00:00:36.006 --> 00:00:38.006
This is also string bean,

11
00:00:38.006 --> 00:00:43.006
so we need to annotate it with add component.

12
00:00:43.006 --> 00:00:47.002
In the class we need a new method of type void

13
00:00:47.002 --> 00:00:50.005
called on order completed event

14
00:00:50.005 --> 00:00:56.006
with order complete the event as an argument.

15
00:00:56.006 --> 00:01:01.004
This method should only get involved on rollback.

16
00:01:01.004 --> 00:01:03.006
Since we need to delay invocation,

17
00:01:03.006 --> 00:01:06.006
only on a certain phase of the transaction

18
00:01:06.006 --> 00:01:11.002
adds through sectional event listener is a perfect fit.

19
00:01:11.002 --> 00:01:13.006
We should also define the phase,

20
00:01:13.006 --> 00:01:17.009
which in this case is after rollback.

21
00:01:17.009 --> 00:01:22.001
What is left to do is called ticket service.

22
00:01:22.001 --> 00:01:30.009
So we will inject it with construction injection.

23
00:01:30.009 --> 00:01:32.009
In the method body now,

24
00:01:32.009 --> 00:01:37.006
we can call ticket service dot create ticket

25
00:01:37.006 --> 00:01:42.000
with an order as an argument.

26
00:01:42.000 --> 00:01:55.003
To verify solution, we need to run the test.

27
00:01:55.003 --> 00:01:59.000
And now we can see our test went through.

