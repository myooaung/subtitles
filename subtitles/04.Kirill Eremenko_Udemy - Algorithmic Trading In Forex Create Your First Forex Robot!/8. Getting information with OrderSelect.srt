1
00:00:07,590 --> 00:00:13,620
Hello this is Carol from Foxborough dot com and welcome to our kill for tutorial on algorithmic training

2
00:00:13,620 --> 00:00:14,580
for beginners.

3
00:00:14,730 --> 00:00:24,300
In the previous two trials we looked at how to open orders how to close orders how to modify them etc.

4
00:00:25,110 --> 00:00:31,860
but now we have a question what do we do if we already have an order in the market and we want to find

5
00:00:32,130 --> 00:00:33,650
out information about it.

6
00:00:33,750 --> 00:00:41,400
So we don't necessarily want to do anything yet but we just want to understand is this order what the

7
00:00:41,400 --> 00:00:44,320
stop losses for this are or what the profit is.

8
00:00:44,490 --> 00:00:53,640
What instrument this order has been executed on what the volume is and all this other information which

9
00:00:53,670 --> 00:00:56,290
is related to order how do we find that out.

10
00:00:56,340 --> 00:00:59,020
And that's exactly what we're going to be looking at today.

11
00:00:59,040 --> 00:01:08,190
So let's proceed to meet Ed. And we're going to take our Tauriel 19 over here which we worked on previously

12
00:01:08,850 --> 00:01:21,210
and we're going to save it as Tauriel 20 as we often do and change this up here comp. that that compiles

13
00:01:21,240 --> 00:01:22,440
perfectly fine.

14
00:01:22,440 --> 00:01:29,310
So we're going to leave this first part which you are by now very familiar with the part where we send

15
00:01:29,310 --> 00:01:36,330
the order and then we have a failsafe mechanism to check everything was done correctly and then we will

16
00:01:36,330 --> 00:01:44,530
even leave this part where we tell the trader about our order and then we delay execution for this is

17
00:01:44,600 --> 00:01:45,850
five seconds.

18
00:01:46,290 --> 00:01:47,890
To be precise.

19
00:01:48,150 --> 00:01:54,090
Now we're going to get rid of these two bits just to save some space so we had the closing of the order

20
00:01:54,090 --> 00:01:54,820
here.

21
00:01:55,140 --> 00:01:56,670
Get rid of that.

22
00:01:56,760 --> 00:02:02,460
That was commented out anyway and then the modifying the order that previous tural will also get rid

23
00:02:02,460 --> 00:02:04,160
of that.

24
00:02:04,410 --> 00:02:08,190
And today we're going to be looking at just getting information.

25
00:02:08,200 --> 00:02:11,880
So the situation is we've sent the order to the market.

26
00:02:11,880 --> 00:02:13,960
Here it is we have the ticket number.

27
00:02:14,040 --> 00:02:21,590
We know the unique identifier so we know what the order is but we will.

28
00:02:21,660 --> 00:02:24,770
Now we want to get more information on this order.

29
00:02:24,770 --> 00:02:27,000
So we want to hear.

30
00:02:27,030 --> 00:02:37,920
We want to find out information like stop loss level or take profit level or the instrument and other

31
00:02:37,920 --> 00:02:43,200
information like the direction of the order and it might seem trivial at this stage because we do already

32
00:02:43,200 --> 00:02:46,150
have this information program.

33
00:02:46,380 --> 00:02:53,700
Let's imagine for a second that we don't that we we were just our program was able to pick up this ticket

34
00:02:53,700 --> 00:02:58,850
number now but it doesn't know all of this other information that we need to retrieve it.

35
00:02:58,980 --> 00:03:05,760
Or you could imagine it in this way that after the order was sent sufficient time has passed for things

36
00:03:05,760 --> 00:03:08,250
to change for example.

37
00:03:09,070 --> 00:03:10,600
Or it could have been closed.

38
00:03:10,770 --> 00:03:16,530
And we still have the ticket and we need to find out if the order is closed or still open and this is

39
00:03:16,740 --> 00:03:24,160
probably the most crucial part because all of the other things like stop loss take profit and other

40
00:03:24,600 --> 00:03:34,230
like the parameters of the order we won't be focusing on that as much in this beginner's course but

41
00:03:34,530 --> 00:03:37,080
what we will need when we're coding our

42
00:03:39,900 --> 00:03:45,480
standalone algorithmic trading system down the track we will need to be able to find out if the order

43
00:03:45,480 --> 00:03:46,740
has been closed or not.

44
00:03:46,740 --> 00:03:49,740
So I'll point that out when we get to.

45
00:03:49,760 --> 00:03:53,870
But let's just start writing the code now.

46
00:03:53,880 --> 00:04:05,520
So we we've told our program to wait for 5 seconds and now we're going to select the order and to do

47
00:04:05,520 --> 00:04:09,950
that we need to use the order select function.

48
00:04:10,290 --> 00:04:14,330
And here where it says index.

49
00:04:14,520 --> 00:04:20,480
We put in the ticket number and then a second parameter I'm just going to tell you what it is it's like

50
00:04:20,510 --> 00:04:23,430
buy a ticket don't worry about the other one at this stage.

51
00:04:23,430 --> 00:04:30,870
So just four or de-select This tells your program or your script.

52
00:04:30,870 --> 00:04:38,540
In this case to select this order that we have the ticket number four and remember the selection.

53
00:04:38,550 --> 00:04:47,640
So once again order select returns returns a boolean values telling us if the selection was successful

54
00:04:47,640 --> 00:04:48,330
or not.

55
00:04:48,330 --> 00:04:51,770
So we have to implement a failsafe mechanism.

56
00:04:51,830 --> 00:04:57,920
A result is orders select and then we have to check our results as we did previously.

57
00:04:57,930 --> 00:05:07,900
If a result is false then we have to tell the truth to something like Error selecting order.

58
00:05:08,150 --> 00:05:14,930
So he knows that we weren't able to select the order and we won't be proceeding with the next step otherwise

59
00:05:15,260 --> 00:05:27,700
else if everything was all right we're going to tell the trader that the order selected successfully.

60
00:05:27,760 --> 00:05:36,490
Very similar to what we've done we did before and for ourselves we'll just write a column on here that

61
00:05:36,490 --> 00:05:43,100
now we can all work with this selected order.

62
00:05:43,540 --> 00:05:50,490
And what that means is basically that the terminal has saved this election.

63
00:05:50,700 --> 00:05:54,030
You will understand what this means in a second.

64
00:05:54,030 --> 00:06:03,050
The timing of this election has been saved us by the terminal.

65
00:06:03,130 --> 00:06:08,740
All right and now we're going to tell the trader more information about this or are we going to extract

66
00:06:08,740 --> 00:06:12,460
this information through this selection.

67
00:06:12,460 --> 00:06:17,170
So we did the selection here and now that selection will last is checked.

68
00:06:17,170 --> 00:06:23,840
Extract information mention about order and hash tag for number.

69
00:06:24,220 --> 00:06:28,980
And then we want to put in the ticket number.

70
00:06:29,050 --> 00:06:33,520
Usually I just want to make this clear because I'm not sure if I was clear enough about this before

71
00:06:33,970 --> 00:06:40,650
what would usually do is or we can do is we will take the ticket number.

72
00:06:41,790 --> 00:06:48,290
But in order to actually convert it to searching we'll type conversion here string.

73
00:06:48,520 --> 00:06:50,480
Take it as you recall and then.

74
00:06:50,500 --> 00:06:53,820
So this becomes a string and then we concatenated with the rest.

75
00:06:54,110 --> 00:07:02,200
But the statement by itself this function allows you to actually put parameters or call like separate

76
00:07:02,200 --> 00:07:03,450
them just by calmer.

77
00:07:03,640 --> 00:07:06,790
And then you don't have to do this part.

78
00:07:06,820 --> 00:07:12,160
You can just put an integer and it will automatically churn into strings so I don't think I was clear

79
00:07:12,160 --> 00:07:13,100
enough about that.

80
00:07:13,150 --> 00:07:18,880
Both ways a fine so you can concatenated with a plus sign but then you have to turn into a string.

81
00:07:19,090 --> 00:07:24,240
Or you can just use a comma and we'll use a column today and that will put another column when that

82
00:07:24,250 --> 00:07:29,590
and we'll just put the like call on so we know that the parameters come afterwards or the information

83
00:07:29,590 --> 00:07:30,970
comes afterwards.

84
00:07:30,970 --> 00:07:35,800
So the trader knows that and then we're going to just have a series of alerts statements telling us

85
00:07:35,800 --> 00:07:41,800
more about this or and will extract everything we can or everything we need at this stage.

86
00:07:41,800 --> 00:07:43,990
So what instrument.

87
00:07:43,990 --> 00:07:52,090
What financial instrument is has this order been created on the this is how it is done.

88
00:07:52,090 --> 00:07:53,530
So this is the important bit.

89
00:07:53,530 --> 00:07:54,900
So instrument.

90
00:07:55,060 --> 00:07:57,390
That's OK but where do we get the instrument.

91
00:07:57,400 --> 00:08:03,820
We hold the order symbol function a function as you can see doesn't take any void here.

92
00:08:03,850 --> 00:08:10,870
Void means that doesn't take any parameters and it returns a string here on the left that says string.

93
00:08:10,900 --> 00:08:18,440
That means this is how you call the function just empty brackets name function empty brackets and return

94
00:08:18,440 --> 00:08:25,600
a string which we will add to the alert by means of this comma and what it will return is the financial

95
00:08:25,600 --> 00:08:34,960
instrument where this order was opened so or where this order is opened.

96
00:08:34,960 --> 00:08:42,050
So by selecting the order here we are now working with that order.

97
00:08:42,160 --> 00:08:43,970
Why this function.

98
00:08:44,090 --> 00:08:51,410
OK so let's do a couple more and that will make more sense or the like it more easy to understand.

99
00:08:51,410 --> 00:08:58,960
So what about type of water meaning is it a buy or a sell order order type.

100
00:08:58,990 --> 00:08:59,640
There you go.

101
00:08:59,650 --> 00:09:07,200
So that will tell us the type of the order which was selected by the order select from function.

102
00:09:07,210 --> 00:09:12,050
That's why I wrote here that selection has been saved by the terminals so he knows which was selected

103
00:09:12,070 --> 00:09:21,520
so whenever we call these functions he knows the terminal knows which order to go to extract those values.

104
00:09:21,960 --> 00:09:22,540
All right.

105
00:09:22,610 --> 00:09:25,840
Is going to be quite a few open time.

106
00:09:26,680 --> 00:09:34,860
Order open time is when the order was opened.

107
00:09:36,090 --> 00:09:40,840
Open price is when the order

108
00:09:44,940 --> 00:09:46,470
was what what.

109
00:09:46,500 --> 00:09:49,000
At what price the order was opened.

110
00:09:49,280 --> 00:09:56,580
Alert Hubei the volume now that will be Homi a lots.

111
00:09:56,580 --> 00:09:59,720
So the function is order lots here.

112
00:10:00,480 --> 00:10:05,310
So the volume or the order next will do stop loss.

113
00:10:05,700 --> 00:10:14,530
So here we will be able to pull out the current stop loss and that will be it can change if we've modified

114
00:10:14,530 --> 00:10:21,640
the order of order modify as you remember in the previous examples and then it will always tell us the

115
00:10:21,760 --> 00:10:33,600
most recent stop loss the one that's currently set for the Order order take profit similar to crowd

116
00:10:33,650 --> 00:10:34,420
comment.

117
00:10:34,440 --> 00:10:40,760
Remember that comment that we put my first order exclamation mark.

118
00:10:40,830 --> 00:10:44,440
So that's be the Calment or any other comment.

119
00:10:44,460 --> 00:10:51,720
If you said a different comment how blocked What else do we have order.

120
00:10:52,080 --> 00:10:55,670
I guess it's an important one order close time.

121
00:10:55,950 --> 00:10:59,500
So I'm I'd stop here for a second.

122
00:11:01,730 --> 00:11:09,590
Because this is what I mentioned at the beginning that this is going to be how we find out if the order

123
00:11:09,590 --> 00:11:10,750
has been closed or not.

124
00:11:10,750 --> 00:11:24,890
So here if closed then great then this will be a greater than zero value not closed then it will be

125
00:11:24,890 --> 00:11:28,370
less then only equals zero.

126
00:11:28,370 --> 00:11:29,680
So that's how this works.

127
00:11:29,690 --> 00:11:36,410
If if the order has been closed and we still have this ticket we're still holding on to this ticket

128
00:11:36,410 --> 00:11:43,310
number but because sufficient time has passed and the market conditions have either hit the stop loss

129
00:11:43,310 --> 00:11:48,460
or take profit or we could have closed that or our selves freezing or reclose function.

130
00:11:48,680 --> 00:11:55,400
In any case the order has been closed and the best way to find that out and this is my recommended way

131
00:11:55,400 --> 00:12:00,110
and probably a lot of traders do it this way.

132
00:12:00,140 --> 00:12:02,870
Check the order close time function.

133
00:12:02,870 --> 00:12:07,850
So if the order close time is greater than zero that means that order has been closed.

134
00:12:07,850 --> 00:12:14,470
It does have a closed time if it has not yet been closed the order closed time will always be zero.

135
00:12:14,510 --> 00:12:19,190
So it's a very safe way to check if the order has been closed or not.

136
00:12:19,190 --> 00:12:19,890
All right.

137
00:12:20,020 --> 00:12:24,140
Order or close price.

138
00:12:24,530 --> 00:12:31,250
So here for the close price very similar.

139
00:12:32,930 --> 00:12:38,280
So if the order close price it's a bit tricky oil.

140
00:12:38,450 --> 00:12:45,680
Basically if the order has been close in this case then it will have the price at which it was close.

141
00:12:45,680 --> 00:13:00,250
So will will type in something similar if closed then close price or price at close if not closed.

142
00:13:01,280 --> 00:13:06,200
Then a hug or possible

143
00:13:08,510 --> 00:13:11,030
price to close.

144
00:13:11,140 --> 00:13:11,800
So I'll just

145
00:13:14,830 --> 00:13:17,640
put this on your line so you can see.

146
00:13:18,130 --> 00:13:24,280
So this one is interesting in the way that if the order has been closed which you can check why this

147
00:13:24,280 --> 00:13:26,620
function as the prescribed method.

148
00:13:26,830 --> 00:13:33,810
So if the order has been closed then this value will be the closed prized and that's it that's done.

149
00:13:33,880 --> 00:13:42,720
But if the order is still open instead of returning nothing or a zero or something useless and kill

150
00:13:42,720 --> 00:13:51,580
for actually does a very useful thing and it returns the Kalat price at which you can close the Order

151
00:13:51,720 --> 00:13:52,320
By.

152
00:13:52,330 --> 00:13:55,940
If you are going to close it right now by the market.

153
00:13:56,050 --> 00:14:05,560
And so that's very useful in the sense that because say buy order would always be closed at the bid

154
00:14:05,560 --> 00:14:06,320
price.

155
00:14:06,400 --> 00:14:13,000
So the cheaper price and sell order would always be called Closer and ask price at the dear price.

156
00:14:13,060 --> 00:14:19,630
It's always usually you'd have to run a check so if you orders a buy order close it at that bid if you

157
00:14:19,630 --> 00:14:22,420
order a sell order close to the ask.

158
00:14:22,460 --> 00:14:27,780
However because you have this order Crooke close price it basically already incorporates that.

159
00:14:27,790 --> 00:14:37,120
So if you're orders of order or close price will be your current bid price if your orders sell order

160
00:14:37,150 --> 00:14:42,790
order clause price who'll be asked price current the current price so and kill for makes it very easy

161
00:14:42,790 --> 00:14:49,180
for you to quickly understand at which price to close your order regardless of whether it's a buy or

162
00:14:49,180 --> 00:14:49,680
sell.

163
00:14:49,690 --> 00:14:51,630
You just have to use or close price.

164
00:14:51,760 --> 00:14:56,510
So it's kind of a sneaky sneaky cheat code in and kill for don't have to use it.

165
00:14:56,560 --> 00:15:01,400
If you if you don't want to but I find it quite handy sometimes.

166
00:15:01,540 --> 00:15:12,460
So profit one more is the profit which will tell you either the profit of a closed order or the current

167
00:15:12,460 --> 00:15:14,530
running profit of an open order.

168
00:15:14,800 --> 00:15:17,230
So I'm just khush of time here.

169
00:15:17,230 --> 00:15:25,330
This is becoming one of the long term deals and we'll just go and quickly see how this works will compile

170
00:15:25,350 --> 00:15:28,510
that no errors or warnings which is great.

171
00:15:28,600 --> 00:15:31,990
Go to the terminal scripts.

172
00:15:32,010 --> 00:15:32,800
That's fine.

173
00:15:32,810 --> 00:15:34,480
Our structural 20.

174
00:15:34,600 --> 00:15:40,150
So I'm going to drag this input's for now I'm going to change anything.

175
00:15:40,840 --> 00:15:41,140
OK.

176
00:15:41,140 --> 00:15:42,120
Sorry my bad.

177
00:15:42,280 --> 00:15:44,150
The training wasn't on.

178
00:15:44,230 --> 00:15:45,920
So trading is on now.

179
00:15:46,060 --> 00:15:49,840
That's because I changed the account to have a fresh balance here.

180
00:15:49,900 --> 00:15:52,600
Every time you change your card you go to change that as well.

181
00:15:52,600 --> 00:15:56,160
Or you have to apply the urelements settings.

182
00:15:56,320 --> 00:15:58,380
Anyway back to tural drag.

183
00:15:58,810 --> 00:16:00,050
OK.

184
00:16:00,640 --> 00:16:03,570
And there we go.

185
00:16:03,850 --> 00:16:10,990
So starting from here don't worry about that on our ticket and waited five seconds and then then this

186
00:16:10,990 --> 00:16:12,580
is the information we've brought up.

187
00:16:12,730 --> 00:16:18,940
So I was just going to quickly bring up the windows magnifier so it's easier to see so it's over here

188
00:16:18,940 --> 00:16:24,880
on the right this window and I'm just going to go through this so this was our first message for this

189
00:16:25,330 --> 00:16:27,420
launch of the script.

190
00:16:27,580 --> 00:16:28,630
That's the order.

191
00:16:28,630 --> 00:16:33,010
If you if we look down here that's the word tonight for on the end tonight.

192
00:16:33,010 --> 00:16:35,170
For now we've selected.

193
00:16:35,170 --> 00:16:41,570
So we launched it then we waited five seconds between here you can see the time for 15:30 420 So we

194
00:16:41,570 --> 00:16:47,890
waited five seconds and then we have information about or soon nine that's that order.

195
00:16:47,920 --> 00:16:49,990
So instruments used dollar.

196
00:16:49,990 --> 00:16:50,740
That's correct.

197
00:16:50,740 --> 00:16:53,980
That's true in recent scented with Type 0.

198
00:16:53,980 --> 00:16:59,760
Don't get afraid that this is zero in kill for zero means by one means sell.

199
00:16:59,770 --> 00:17:07,320
That's just historically how it has developed open time one for this very long number.

200
00:17:07,390 --> 00:17:15,350
It is actually a code and that's how state tie dates and times date times basically are stored and am

201
00:17:15,370 --> 00:17:24,450
kill for this is the number of seconds that has passed since 1970 from January 1970 until the time and

202
00:17:24,450 --> 00:17:26,540
date when the order was actually opened.

203
00:17:26,560 --> 00:17:30,160
So we can convert this into a proper date time but we won't bother about it.

204
00:17:30,170 --> 00:17:33,400
We'll just believe that this is the correct date and time.

205
00:17:33,430 --> 00:17:33,790
All right.

206
00:17:33,790 --> 00:17:41,370
More importantly open price 1 3 5 1.3 5:27 Let's go down here and check if it is the correct open price

207
00:17:42,070 --> 00:17:44,230
one point thirty five twenty seven.

208
00:17:44,230 --> 00:17:45,520
That is correct.

209
00:17:45,520 --> 00:17:45,920
All right.

210
00:17:45,920 --> 00:17:53,650
Volume it was one lot that that is how many That's how big an order we requested.

211
00:17:53,650 --> 00:17:55,160
That's good.

212
00:17:55,240 --> 00:18:00,180
Stop Loss 135 15 and take profit 135 thirty five.

213
00:18:00,190 --> 00:18:03,010
Let's check that quickly going down here.

214
00:18:03,060 --> 00:18:07,430
Stop-Loss 135 15 take profit 135 235.

215
00:18:07,600 --> 00:18:09,670
So the information has been extracted correctly.

216
00:18:09,670 --> 00:18:12,120
Comment My first order exclamation mark.

217
00:18:12,280 --> 00:18:13,830
That is our comment.

218
00:18:13,870 --> 00:18:14,410
All right.

219
00:18:14,430 --> 00:18:20,130
And to the very important bit order clothes time the order clothes time is zero.

220
00:18:20,230 --> 00:18:27,220
That means that order is still active which you can see over here it is still in the market and order

221
00:18:27,220 --> 00:18:34,480
close price 130 525 that is the price at which we could have closed the order at the time when we launched

222
00:18:34,480 --> 00:18:35,350
the script.

223
00:18:35,470 --> 00:18:43,510
And as we discussed this for the for this order because by order this represents the bid price at that

224
00:18:43,510 --> 00:18:44,350
time.

225
00:18:44,680 --> 00:18:52,260
And finally profit minus 20 is just basically means that that's what the profit was profit.

226
00:18:52,290 --> 00:18:56,020
The order had when we launched the script.

227
00:18:56,020 --> 00:19:02,500
So that's that's also correct dreadnoughts minus 30 but it's one pip lower than it was when we launched

228
00:19:02,500 --> 00:19:03,120
the script.

229
00:19:03,250 --> 00:19:07,840
So that's basically how you get all the information from an existing order.

230
00:19:07,840 --> 00:19:12,860
If you have the ticket number on it is going to close this doesn't bother us anymore and I hope that

231
00:19:12,860 --> 00:19:13,950
will make sense.

232
00:19:13,990 --> 00:19:21,780
We will be using some of this information very like we'll be relying very heavily especially this order

233
00:19:21,790 --> 00:19:27,700
clothes time where we develop power algorithmic trading system.

234
00:19:27,710 --> 00:19:30,790
I hope to see you on the next tutorial and until then happy coding.
