1
00:00:00,420 --> 00:00:01,350
I I'm a friend.

2
00:00:01,350 --> 00:00:07,890
I hope you had no trouble at all to train that came his model on the data set in order to identify that

3
00:00:08,040 --> 00:00:15,240
optimal five number of clusters which we figured out thanks to the Elbow Method because indeed in order

4
00:00:15,240 --> 00:00:22,740
to do this you just had to do exactly the same as what we did here inside this loop by just replacing

5
00:00:22,950 --> 00:00:23,790
that eye.

6
00:00:23,850 --> 00:00:30,580
Number of classes here which is the iterated variable by 5 because now we know that we want to build

7
00:00:30,580 --> 00:00:35,200
a train and run the Caymans algorithm to identify five clusters.

8
00:00:35,310 --> 00:00:43,800
And therefore here we're simply going to take these two lines of code and we're going to paste that

9
00:00:43,950 --> 00:00:52,260
right below in a new code cell to indeed train or came into model to identify five clusters.

10
00:00:52,380 --> 00:00:53,280
All right.

11
00:00:53,280 --> 00:00:58,030
And we don't have to import the Caymans class again because this was important here.

12
00:00:58,060 --> 00:00:59,190
You know right here.

13
00:00:59,190 --> 00:01:01,100
And this cell was already executed.

14
00:01:01,110 --> 00:01:06,900
So no problem at all here we can just call this class directly and input here of course not.

15
00:01:06,900 --> 00:01:15,250
I clusters but five clusters to identify and same deal we use the Caymans plus plus in method to avoid

16
00:01:15,250 --> 00:01:21,510
the random initialization trap and we keep a random state of 42 in order for us to have the same result

17
00:01:21,600 --> 00:01:23,910
displayed on our notebook.

18
00:01:24,030 --> 00:01:31,320
And now this line of code actually indeed trains to came in tomorrow on the data set to identify five

19
00:01:31,320 --> 00:01:32,220
clusters.

20
00:01:32,340 --> 00:01:39,360
But as I told you in the previous tutorial we also want to do something else which is to build that

21
00:01:39,450 --> 00:01:46,350
dependent variable finally of which the values are you know exactly these clusters from one to 5.

22
00:01:46,380 --> 00:01:53,280
So actually you know the values of this dependent variable will be one two three four five one will

23
00:01:53,280 --> 00:01:58,350
be you know let's say cluster one two will be cluster two three will be cluster three four will be cluster

24
00:01:58,380 --> 00:02:04,920
four and five will be close to five and each of these clusters will actually be a certain group of customers

25
00:02:04,950 --> 00:02:11,340
because remember that our dataset is composed of customers which will actually be grouped or segmented

26
00:02:11,430 --> 00:02:14,250
into these clusters these five clusters.

27
00:02:14,250 --> 00:02:20,060
And so there you go that dependent variable which we're about to create will split through its values.

28
00:02:20,100 --> 00:02:23,230
Well all these customers into different groups.

29
00:02:23,250 --> 00:02:27,930
All right so that's what I meant by we are creating indeed a dependent variable.

30
00:02:28,080 --> 00:02:28,940
And so there you go.

31
00:02:28,950 --> 00:02:30,800
That's our next step here.

32
00:02:30,840 --> 00:02:33,420
How are we going to create that dependent variable.

33
00:02:33,840 --> 00:02:35,630
Well I'm going to show you a little trick.

34
00:02:35,790 --> 00:02:42,060
If you look at the API cycle learned four K means you know the Caymans class well you will notice that

35
00:02:42,060 --> 00:02:50,760
there is actually a fit on this core predict method and that fit pretty method not only trains your

36
00:02:50,880 --> 00:02:57,840
Caymans model on the data set but also it returns exactly that dependent variable which we're about

37
00:02:57,840 --> 00:03:01,950
to create you know with the five different values taken by that variable.

38
00:03:01,950 --> 00:03:07,260
You know one two three four five which of course correspond to these five different clusters containing

39
00:03:07,560 --> 00:03:11,240
different groups of customers and in each group.

40
00:03:11,250 --> 00:03:17,820
Well the customers are grouped by similarities you know they contain similar information in each group

41
00:03:17,910 --> 00:03:23,640
and in the next step you know when visualizing the clusters you will perfectly understand what will

42
00:03:23,640 --> 00:03:26,970
be exactly these information but I don't want to reveal them now.

43
00:03:27,060 --> 00:03:30,950
So we're just going to create that dependent variable for now.

44
00:03:31,110 --> 00:03:37,130
And since as I've just told you while this fit predict method returns that they've been invaluable Well

45
00:03:37,140 --> 00:03:43,800
we're going to create a new variable here which we're going to call y underscore k means you can call

46
00:03:43,800 --> 00:03:46,780
it y key means or you can call it y pred if you want.

47
00:03:46,790 --> 00:03:50,960
You know that's also the name we usually choose for our dependent variables.

48
00:03:51,090 --> 00:03:57,060
But since it results from the Caymans algorithm I prefer to call it wiki means plus we won't have to

49
00:03:57,060 --> 00:03:59,130
compare it with a White House variable.

50
00:03:59,130 --> 00:04:01,400
So that's why I want to make it a bit different.

51
00:04:01,410 --> 00:04:07,020
But there you go here with this line of code you know calling the FID break method we create indeed

52
00:04:07,230 --> 00:04:15,300
this dependent variable resulting from training or a K Means algorithm with five clusters to identify

53
00:04:15,450 --> 00:04:17,060
five clusters.

54
00:04:17,070 --> 00:04:17,520
Okay.

55
00:04:17,580 --> 00:04:19,070
So let's see if this works.

56
00:04:19,230 --> 00:04:26,610
Let's run this cell to train came its algorithm to identify five clusters and all good it was run properly

57
00:04:27,090 --> 00:04:33,510
and now I'm just going to show you what we just created you know why k means so I'm going to input here

58
00:04:33,510 --> 00:04:38,400
why on underscore score k means inside this print There you go.

59
00:04:38,580 --> 00:04:41,820
Let's run it and let's see what we created.

60
00:04:42,240 --> 00:04:48,480
And well there you go you can see now all the different clusters to which belongs each customer.

61
00:04:48,490 --> 00:04:54,030
So here you have to read it this way the first customer belongs to cluster three so that's actually

62
00:04:54,030 --> 00:04:56,610
customer I.D. number one customer right.

63
00:04:56,610 --> 00:05:01,930
Number one belongs to cluster three and actually belongs to class and number four because this is only

64
00:05:01,930 --> 00:05:03,930
the index of the cluster.

65
00:05:03,940 --> 00:05:06,820
And remember that index is in bytes and start from zero.

66
00:05:06,820 --> 00:05:11,830
So here actually the numbers of the classes are 0 1 2 3 and 4.

67
00:05:11,830 --> 00:05:13,790
So let's be careful what we say with them.

68
00:05:13,870 --> 00:05:15,090
So let's do it again.

69
00:05:15,100 --> 00:05:18,800
Customer idea number one belongs to the fourth cluster.

70
00:05:18,940 --> 00:05:24,550
Then a customer idea on the two belongs to the first cluster customer idea number three belongs to the

71
00:05:24,550 --> 00:05:31,360
fourth cluster and etc. And the last customer I.D. belongs to.

72
00:05:31,420 --> 00:05:33,510
Well I have to go to the second page here.

73
00:05:33,520 --> 00:05:40,160
There you go the customer I.D. number 200 belongs to the third cluster or cluster of index 2.

74
00:05:40,210 --> 00:05:41,770
All right so there you go.

75
00:05:41,800 --> 00:05:47,280
That's the dependent variable that is created through the training of the Caymans algorithm.

76
00:05:47,380 --> 00:05:50,420
And so now let's proceed to our last tip.

77
00:05:50,440 --> 00:05:56,840
We're going to visualize two clusters on a 2D plot where you're gonna have on the x axis.

78
00:05:56,920 --> 00:05:59,690
Well you know the annual income.

79
00:05:59,710 --> 00:06:01,210
That's our first feature.

80
00:06:01,210 --> 00:06:08,200
And on the y axis the spending score and we will see how our different customers and different customers

81
00:06:08,200 --> 00:06:11,430
of the more were grouped into these clusters.

82
00:06:11,440 --> 00:06:17,310
And we're going to clearly see the different clusters and their centroid from one to five on this truly

83
00:06:17,350 --> 00:06:17,890
plot.

84
00:06:17,890 --> 00:06:18,180
Okay.

85
00:06:18,190 --> 00:06:23,200
So I actually can't wait to show you this because it's going to be a very clear graph.

86
00:06:23,200 --> 00:06:28,860
And once again that's the reason I only want to keep two features here to be able to visualize this

87
00:06:28,870 --> 00:06:33,450
clearly and well that's exactly what we're going to do in the next tutorial.

88
00:06:33,460 --> 00:06:37,720
So as soon as you're ready join me I want to ask you to implement this on your own.

89
00:06:37,720 --> 00:06:42,130
We will do it together and we will enjoy the results together.

90
00:06:42,160 --> 00:06:43,980
And until then enjoy machine learning.
