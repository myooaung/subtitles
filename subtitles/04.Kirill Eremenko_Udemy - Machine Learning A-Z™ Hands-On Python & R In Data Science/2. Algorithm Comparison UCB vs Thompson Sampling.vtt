WEBVTT
1
00:00:01.380 --> 00:00:06.240
Hello and welcome back to the course on machine learning I hope you enjoyed the previous tutorials and

2
00:00:06.270 --> 00:00:12.030
now you're quite confident with the confidence bound and the Tompson sampling algorithm or at least

3
00:00:12.030 --> 00:00:13.490
the intuition behind them.

4
00:00:13.530 --> 00:00:18.120
And today we're going to quickly compare the two because they do solve the same problem they solve the

5
00:00:18.120 --> 00:00:24.990
problem of the multi armed bandit and let's have a look at some of the pros and cons of each of the

6
00:00:24.990 --> 00:00:25.710
algorithms.

7
00:00:25.860 --> 00:00:31.590
So there of course is lots and lots of different advanced and disadvantage and differences between the

8
00:00:31.590 --> 00:00:34.630
two but we'll just highlight the main ones.

9
00:00:34.650 --> 00:00:36.500
So here we've got the two algorithms on the left.

10
00:00:36.510 --> 00:00:43.170
We've got the ECB and the image from the intuition tutorial that will help us to remember what it's

11
00:00:43.230 --> 00:00:43.790
what it's about.

12
00:00:43.800 --> 00:00:47.760
And the Tompson sampling algorithm and same the image behind it.

13
00:00:47.760 --> 00:00:55.590
So the first characteristic is probably that is different is that the UCB is a deterministic algorithm

14
00:00:55.650 --> 00:01:03.950
and actually there's lots of different there's lots of different modifications to these algorithm.

15
00:01:03.960 --> 00:01:08.460
You can find them online there's lots of different white papers on how they use the algorithm can be

16
00:01:08.460 --> 00:01:17.370
modified to improve it and to make it better at one thing or like as one advantage made makes this a

17
00:01:17.370 --> 00:01:22.580
bit better a result but it makes it more can potentially intensive or the other way around and so on.

18
00:01:22.590 --> 00:01:29.160
So but all of that all of those algorithms belong to a family of UCB Algren's Opper confident Bollen

19
00:01:29.190 --> 00:01:34.620
algorithms which are all deterministic and basically what that means is that it is very straightforward.

20
00:01:34.620 --> 00:01:44.890
Right so once you have certain round it is very very straightforward what's going to happen.

21
00:01:44.940 --> 00:01:48.870
You just look at the upper corner of Hezbollah and whichever one has the highest that's the one you

22
00:01:48.870 --> 00:01:50.050
pick.

23
00:01:50.130 --> 00:01:55.800
You pull the algorithm Yes or you pull you pull the lever yes then you do get like a random value from

24
00:01:55.800 --> 00:01:56.450
the machine.

25
00:01:56.520 --> 00:02:01.340
But that's that's that's it's that's on the side of the machine.

26
00:02:01.350 --> 00:02:06.240
So that's what randomness is on the side of a machine on the machine and then but then whatever value

27
00:02:06.240 --> 00:02:08.900
get it is very determined.

28
00:02:08.910 --> 00:02:12.700
It is very deterministic what the to be is going to do with that value.

29
00:02:13.050 --> 00:02:18.310
And so all the steps that the U.S. actually takes they're very deterministic.

30
00:02:18.990 --> 00:02:21.330
There's no randomness in the algorithm itself.

31
00:02:21.600 --> 00:02:26.790
Whereas on the other hand the Tomsen sampling algorithm is a probabilistic algorithm because in that

32
00:02:26.820 --> 00:02:33.390
the algorithm itself it has these distributions which represent our perception of the world and where

33
00:02:33.390 --> 00:02:39.620
we think the actual expected returns of each of those machines might lie.

34
00:02:39.690 --> 00:02:49.230
And therefore every time we are implementing or iterating in the temporal sampling algorithm we actually

35
00:02:49.230 --> 00:02:52.270
generate random values from those distributions.

36
00:02:52.290 --> 00:03:00.300
So if you rerun around in the UCB algorithm just one given round after you've received the value from

37
00:03:00.600 --> 00:03:04.430
the previous value from the machine and then you rerun the round.

38
00:03:04.440 --> 00:03:05.950
It's always going to be the same result.

39
00:03:06.210 --> 00:03:11.070
Whereas in the sampling Algren after you've received the previous value from the machine and you rerun

40
00:03:11.070 --> 00:03:12.740
the current round.

41
00:03:13.130 --> 00:03:21.450
So it's always going to be different because you're always sampling from your distributions which characterize

42
00:03:21.450 --> 00:03:27.290
your perception of the world and that is a whole different type of algorithm.

43
00:03:27.290 --> 00:03:28.860
It's a probabilistic algorithm.

44
00:03:29.150 --> 00:03:35.720
And those two things they actually have a few different implications.

45
00:03:35.730 --> 00:03:35.970
Right.

46
00:03:35.970 --> 00:03:42.630
So for instance one important one is that the UCB requires an update at every round.

47
00:03:42.630 --> 00:03:48.010
Right so basically the value that you get back from the use from the machine.

48
00:03:48.020 --> 00:03:52.640
So once you've pulled the lever and you get a value back from that machine that value you have to incorporate

49
00:03:52.640 --> 00:03:57.930
it right away in order to proceed to the next round you cannot proceed to the next round until you have

50
00:03:59.670 --> 00:04:06.840
incorporated that value until you have made an adjustment to the algorithm based on that value because

51
00:04:06.840 --> 00:04:11.150
if you don't make the adjustment then nothing changes and you're going to be stuck.

52
00:04:11.400 --> 00:04:16.130
Whereas in the Tompson sampling it can accommodate delayed feedback and it's very important.

53
00:04:16.290 --> 00:04:22.410
This basically means that if you pull the lever and you only will get the results you will only know

54
00:04:22.410 --> 00:04:26.570
the result of pulling the lever 500 rounds down the track.

55
00:04:26.580 --> 00:04:26.820
Right.

56
00:04:26.820 --> 00:04:31.010
Not right away you'll only get to know all 500 rounds later.

57
00:04:31.080 --> 00:04:32.830
THOMPSON The sampling Algor will still work.

58
00:04:32.820 --> 00:04:39.600
Why will it work because if you now run the algorithm without even updating your perception of the world

59
00:04:39.600 --> 00:04:46.440
you're still going to get a new set of hypothetical bandits.

60
00:04:46.440 --> 00:04:51.930
Right you're going to generate a new and you expected return for everybody because you are generating

61
00:04:51.930 --> 00:04:53.910
them in a probabilistic manner.

62
00:04:53.910 --> 00:04:59.010
And this is very important to understand because this gives the Tompson sampling that advantage that

63
00:04:59.010 --> 00:05:02.790
you don't have to update the algorithm with the result every time.

64
00:05:02.790 --> 00:05:09.290
And in terms of just terms of bandas of course it doesn't really matter that much because if you're

65
00:05:09.300 --> 00:05:14.430
playing in the casino and out of sight if some hypothetical person is playing in a casino and they're

66
00:05:14.430 --> 00:05:17.160
pulling these lever's they get to the results right away.

67
00:05:17.160 --> 00:05:18.450
So they could update Algor.

68
00:05:18.690 --> 00:05:23.210
But in terms of Web sites and ads that is a big deal right.

69
00:05:23.220 --> 00:05:32.430
So not even just not even just displaying ads on a Web site or you could use this for like AB testing

70
00:05:32.430 --> 00:05:38.540
different instead of AB testing the different layouts of your Web site right.

71
00:05:38.550 --> 00:05:46.560
You could you could use a Tompson sampling algorithm to have that balance between exploitation exploration

72
00:05:46.560 --> 00:05:47.170
right away.

73
00:05:47.280 --> 00:05:54.720
So basically anything you're doing on the web with Thomson sampling or like solving a multi armed bandit

74
00:05:54.720 --> 00:06:00.020
problem for your business or for a business on the web.

75
00:06:00.610 --> 00:06:04.430
You getting all these thousands and tens of thousands of clicks right.

76
00:06:04.440 --> 00:06:12.120
And to update the algorithm right away that would be very highly computationally computationally costly

77
00:06:12.750 --> 00:06:19.230
or it might require additional resources and a complex process whereas if you were what the and sampling

78
00:06:19.230 --> 00:06:24.680
algorithm allows you to do is to update your dataset or your information algorithm in a batch manner

79
00:06:24.690 --> 00:06:28.800
so you you wait until you get 500 clicks or you wait until you get 5000 clicks.

80
00:06:28.890 --> 00:06:32.850
You update the algorithm and then you let it run and then it runs runs runs and then you get another

81
00:06:32.850 --> 00:06:39.410
5000 clicks and then you update the algorithm again and it will still work and that's a very important

82
00:06:39.440 --> 00:06:44.960
thing that that flexibility that the Tompson sampling algorithm creates.

83
00:06:44.990 --> 00:06:52.700
And finally again we're not going to go into too much detail on the pros and cons but the Tompson sampling

84
00:06:52.700 --> 00:06:57.060
algorithm is actually it has better empirical evidence than they used to be.

85
00:06:57.140 --> 00:07:06.380
And they you find this phrase better empirical evidence and that's because up until recently the the

86
00:07:06.380 --> 00:07:12.290
theory behind the Tompson sampling algorithm or you know the whole research wasn't wasn't complete it's

87
00:07:12.290 --> 00:07:19.040
only been researched very detail in a lot of detail called just a few years ago and you know now you

88
00:07:19.040 --> 00:07:25.160
can find a lot of information on Thompson sampling algorithm where previously people just see that from

89
00:07:25.640 --> 00:07:30.010
experimental evidence that Thompson sampling algorithm does work better than these would be.

90
00:07:30.050 --> 00:07:33.190
And that's exactly what we're going to see.

91
00:07:33.200 --> 00:07:34.110
Spoiler alert.

92
00:07:34.140 --> 00:07:39.830
And that's exactly what you're going to see in the practical tutorials for this section.

93
00:07:39.830 --> 00:07:46.400
So we're going to be now coding or had lunch we'll walk you through coding the same exercise the same

94
00:07:46.400 --> 00:07:49.130
problem that we had previously with these would be no.

95
00:07:49.340 --> 00:07:55.430
Are you going to be solving it with some Tompson sampling algorithm and you will see actually some very

96
00:07:55.430 --> 00:07:56.550
interesting results.

97
00:07:56.610 --> 00:08:02.600
We'll leave it at that and I hope you enjoy these intuition tutorials and off we go to the practical

98
00:08:02.600 --> 00:08:04.880
side of things can wait for you to get started.

99
00:08:04.880 --> 00:08:09.040
Had lunch we'll show you all around and I'll see you back here next time.

100
00:08:09.050 --> 00:08:10.760
Until then in Germany learning.
