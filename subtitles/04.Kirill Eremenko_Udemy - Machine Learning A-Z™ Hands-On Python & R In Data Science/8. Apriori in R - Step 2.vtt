WEBVTT
1

00:00:00.210  -->  00:00:02.410
Hello and welcome to this art Tauriel.

2

00:00:02.670  -->  00:00:07.680
So in the previews to toy with the data pre-processing step we first imported the data set the usual

3

00:00:07.680  -->  00:00:13.590
way with the reader function but then we explained that we needed to create a sparse matrix containing

4

00:00:13.650  -->  00:00:18.900
all the transactions that occurred in the store during a whole week and to build the sparse matrix we

5

00:00:18.900  -->  00:00:24.480
used to read that transaction's function including the r.m duplicates argument to remove all the duplicates

6

00:00:24.780  -->  00:00:29.980
and this parse matrix is exactly what we need to train our apriori model on the dataset.

7

00:00:30.090  -->  00:00:34.060
And that's what we're going to do in this tutorial we're going to make the rules.

8

00:00:34.110  -->  00:00:35.240
If I can say that.

9

00:00:35.560  -->  00:00:41.790
OK so now thanks to the Avril's package the training is going to be very simple because we're just going

10

00:00:41.790  -->  00:00:47.690
to use one function which is by the way called the a priori function with only two arguments.

11

00:00:47.760  -->  00:00:48.680
So let's do it.

12

00:00:48.690  -->  00:00:54.900
We're going to create a new variable and we'll call it rules because this variable will contain in some

13

00:00:54.900  -->  00:00:58.350
way the different rules of our business problem.

14

00:00:58.350  -->  00:01:04.680
So rules here and then equals and that's where we use the a priori function with the different arguments

15

00:01:04.680  -->  00:01:05.040
.

16

00:01:05.040  -->  00:01:11.250
And so we going to put two arguments the first argument is going to be our dataset and the second argument

17

00:01:11.250  -->  00:01:17.790
is going to be the parameter argument that will contain the choice of a minimum support and a choice

18

00:01:17.790  -->  00:01:19.130
of a confident support.

19

00:01:19.320  -->  00:01:20.660
So let's have a look at these arguments.

20

00:01:20.660  -->  00:01:26.700
I'm going to press one here and here I have some info about the primary function.

21

00:01:26.700  -->  00:01:29.130
So as you can see the first argument is data.

22

00:01:29.140  -->  00:01:30.400
So let's put it.

23

00:01:30.400  -->  00:01:33.130
Now that's the easiest argument to input.

24

00:01:33.160  -->  00:01:38.390
So data equals data set and then come up and then the second argument.

25

00:01:38.700  -->  00:01:45.610
So the second argument is parameter and as it's written here the parameters is object of class AP parameter

26

00:01:45.630  -->  00:01:45.800
.

27

00:01:45.810  -->  00:01:52.800
And so this object will contain the minimum support that we will set ourselves and a minimum confidence

28

00:01:52.980  -->  00:01:59.400
and we can also specify a maximum of items you want to have in the rules that's given with Maxton.

29

00:01:59.400  -->  00:02:04.740
And actually it's also possible to include a minimum specifying the minimum number of products you want

30

00:02:04.740  -->  00:02:07.340
to have in your rules but we won't actually need that.

31

00:02:07.380  -->  00:02:11.370
And what we will need inevitably is the support and the confidence.

32

00:02:11.370  -->  00:02:14.610
So let's improve that so parameter here.

33

00:02:15.000  -->  00:02:18.890
And we need to include the support and the confidence in this parameter.

34

00:02:18.960  -->  00:02:24.660
The following way we're going to take the list function and then this list we're going to input the

35

00:02:24.660  -->  00:02:26.160
support and the confidence.

36

00:02:26.250  -->  00:02:31.050
So I'm going to add the two arguments here and then we'll see what value we will input for these two

37

00:02:31.050  -->  00:02:32.790
arguments.

38

00:02:32.790  -->  00:02:33.270
All right.

39

00:02:33.390  -->  00:02:38.940
So let's take the slide of the intuition tutorial about the apriori algorithm and let's see what the

40

00:02:38.940  -->  00:02:41.000
different steps of this algorithm are.

41

00:02:41.130  -->  00:02:45.870
So the first step is you can see is to set a minimum support and confidence.

42

00:02:45.880  -->  00:02:48.600
So that's exactly what we are about to do right now.

43

00:02:48.600  -->  00:02:55.020
We are in the first step of the apriori algorithm and that consists of choosing a report and a confidence

44

00:02:55.040  -->  00:02:55.300
.

45

00:02:55.530  -->  00:02:59.960
So the choice of the support and confidence is not a general rule.

46

00:03:00.000  -->  00:03:04.970
We cannot express the support or the confidence with the explicit equation.

47

00:03:05.220  -->  00:03:07.470
It actually depends on the business problem itself.

48

00:03:07.470  -->  00:03:09.420
It actually depends on your goals.

49

00:03:09.420  -->  00:03:11.750
The goal related to your business problem.

50

00:03:11.850  -->  00:03:16.590
It also depends on your dataset the number of observations you have the number of items.

51

00:03:16.710  -->  00:03:23.130
So that depends on different circumstances that don't allow us to make some general rule about how to

52

00:03:23.130  -->  00:03:24.880
calculate the support in the conference.

53

00:03:24.900  -->  00:03:30.360
But don't worry it will make a lot of sense when we explain how we calculate the support in the conference

54

00:03:30.360  -->  00:03:34.310
here and you will be able to apply it to your business problem.

55

00:03:34.740  -->  00:03:39.350
OK so let's start with the support the support of a set of items I.

56

00:03:39.420  -->  00:03:42.980
Is equal to the number of transactions contained in this set of items.

57

00:03:42.990  -->  00:03:49.290
I divided by the total number of transactions and the support argument that we are putting here is actually

58

00:03:49.290  -->  00:03:51.870
the minimum support you want to have in your rules.

59

00:03:51.870  -->  00:03:58.620
That means that the items that are going to appear in your rules will have a higher support than this

60

00:03:58.620  -->  00:04:01.380
minimum support here and same for the confidence.

61

00:04:01.620  -->  00:04:07.380
So what we must ask ourselves Is that what supports Do we want to have all our different items in the

62

00:04:07.380  -->  00:04:13.320
rules so that the rules are relevant because for example if we go back to the plot here with actually

63

00:04:13.320  -->  00:04:16.230
the 100 observations which is this one.

64

00:04:16.230  -->  00:04:22.050
If we zoom on it well we can see that we have a lot of products that are not pre-Chase very frequently

65

00:04:22.290  -->  00:04:27.390
in these specific products other products with small supports because a few transactions contain these

66

00:04:27.390  -->  00:04:28.320
products here.

67

00:04:28.320  -->  00:04:33.180
So when you divide the number of transactions containing this products by the total number of transactions

68

00:04:33.510  -->  00:04:38.890
then you'll get a small support and you know since these products are not pre-Chase very often they're

69

00:04:38.910  -->  00:04:43.810
not very relevant for optimization problem because you know we want to optimize the sales.

70

00:04:43.830  -->  00:04:45.250
That's what we want to optimize.

71

00:04:45.250  -->  00:04:46.760
Roll is the revenue.

72

00:04:46.890  -->  00:04:51.960
And since the revenue is a linear combination of the different numbers of products where the coefficients

73

00:04:51.960  -->  00:04:53.830
are actually the prices of these products.

74

00:04:53.940  -->  00:04:59.220
Well in order to optimize the revenue we would need to optimize the sales of these products here that

75

00:04:59.220  -->  00:05:04.200
are pre-Chase very often rather than these products here there are less pre-Chase.

76

00:05:04.200  -->  00:05:11.100
And so what we need to choose here is the support that will only include the products on the left of

77

00:05:11.440  -->  00:05:14.870
this vertical bar here that will correspond to the minimum support.

78

00:05:14.880  -->  00:05:21.130
So for example let's say the value here on the y axis is in 0 5.

79

00:05:21.200  -->  00:05:25.980
Then that means that all the products on the left of this vertical bar will have a support higher than

80

00:05:25.980  -->  00:05:27.380
0.05.

81

00:05:27.410  -->  00:05:33.590
And so if we set a minimum support of 0.05 then the rules will only contain the different products of

82

00:05:33.600  -->  00:05:36.120
this left side of the vertical bar here.

83

00:05:36.380  -->  00:05:38.100
And so now how to choose to support.

84

00:05:38.220  -->  00:05:43.320
Well we need to look at the products that are pre-Chase rather frequently like at least three or four

85

00:05:43.310  -->  00:05:44.510
times a day.

86

00:05:44.510  -->  00:05:46.960
Again that depends on your business goal.

87

00:05:47.040  -->  00:05:52.890
But what's for sure is that if we manage to find some strong rules about items that are bought at least

88

00:05:52.920  -->  00:05:58.650
three or four times a day then by associating them and placing them together customers will be more

89

00:05:58.640  -->  00:06:03.630
likely to put them in their basket and therefore more of these products will be purchased and therefore

90

00:06:03.620  -->  00:06:05.150
the sales will increase.

91

00:06:05.160  -->  00:06:09.950
So that will be the starting point of how we're going to set the minimum support.

92

00:06:10.010  -->  00:06:11.700
We're going to consider the product.

93

00:06:11.730  -->  00:06:16.890
There are pre-Chase at least three or four times a day and then we will look at the rules and of course

94

00:06:16.880  -->  00:06:20.980
if we're not convinced by the rules we will change this value of the support.

95

00:06:21.000  -->  00:06:23.100
That's how we work with the a priori model.

96

00:06:23.100  -->  00:06:28.790
You know we try different values of support different values of confidence until we are satisfied with

97

00:06:28.800  -->  00:06:31.020
the rules and until we think it makes sense.

98

00:06:31.110  -->  00:06:35.600
And you know we can also try these rules within a certain period of time and then if we look at the

99

00:06:35.610  -->  00:06:41.070
impact on the revenue and if we don't observe a meaningful increase in the sales revenue we can later

100

00:06:41.060  -->  00:06:46.590
change the support and the confidence to change the rules and then experience again until we find the

101

00:06:46.590  -->  00:06:49.260
strongest rules that are in sales.

102

00:06:49.290  -->  00:06:51.210
So that's actually what happened in real life.

103

00:06:51.240  -->  00:06:56.070
But of course in these tutorials we're going to try with products purchased three or four times a day

104

00:06:56.080  -->  00:06:56.190
.

105

00:06:56.340  -->  00:06:57.830
And so we'll see what happens.

106

00:06:57.980  -->  00:06:58.500
Okay.

107

00:06:58.560  -->  00:07:04.340
So actually we didn't set the support yet we just decided that we'll look at the products or pre-Chase

108

00:07:04.350  -->  00:07:10.230
that these three or four times a day but that will quickly lead us to support because if a product is

109

00:07:10.230  -->  00:07:16.430
bought let's say three times a day that means it's pre-Chase three times seven equals 21 times a week

110

00:07:16.460  -->  00:07:16.700
.

111

00:07:16.940  -->  00:07:22.200
And since the support is the number of transaction contained in this product over the total number of

112

00:07:22.200  -->  00:07:28.530
transactions and since there are 7500 transactions then we get the minimum support that is equal to

113

00:07:28.520  -->  00:07:32.250
seven times three over 7500.

114

00:07:32.460  -->  00:07:35.060
So let me explain that by writing this here.

115

00:07:35.060  -->  00:07:35.820
So OK.

116

00:07:35.850  -->  00:07:39.190
We said we considered the products that are purchased three times a day.

117

00:07:39.260  -->  00:07:44.720
That's three here then since the total number of transactions were registered over a week.

118

00:07:44.750  -->  00:07:49.430
That means that if we consider the products that are pre-Chase three times a day that means or pre-Chase

119

00:07:49.440  -->  00:07:52.950
on average three times seven times a week.

120

00:07:52.950  -->  00:07:59.940
So this three times seven equals 21 Here is the number of transactions contained in this product but

121

00:07:59.940  -->  00:08:02.240
three times a day over the whole week.

122

00:08:02.550  -->  00:08:09.230
And now we need to divide by the total number of transactions to get this minimum support and the total

123

00:08:09.240  -->  00:08:15.960
number of transactions is actually seven thousand five hundred and this value here that we're about

124

00:08:15.960  -->  00:08:22.920
to compute is nothing else than the support of a product that is purchased three times a day.

125

00:08:23.270  -->  00:08:26.520
And you know we want our rules to consider only the products.

126

00:08:26.690  -->  00:08:28.530
Are at least three times a day.

127

00:08:28.620  -->  00:08:34.320
So all the products of our rules will have a higher support than their support here that we're about

128

00:08:34.320  -->  00:08:34.960
to compute.

129

00:08:35.070  -->  00:08:36.200
So let's compute it.

130

00:08:36.210  -->  00:08:37.540
Let's find out what it is.

131

00:08:37.640  -->  00:08:41.310
And that's the value we will give to this support parameter here.

132

00:08:41.310  -->  00:08:45.720
So right now I just need to press enter and that's the value open.

133

00:08:45.870  -->  00:08:46.820
Oh 28.

134

00:08:46.830  -->  00:08:49.530
We will round this to 0 1 0 3.

135

00:08:49.800  -->  00:08:56.500
And so that is the minimum support of the product that will be considered by our rules.

136

00:08:56.510  -->  00:09:00.830
So let's put its own point 0 3 right.

137

00:09:01.250  -->  00:09:01.550
Okay.

138

00:09:01.560  -->  00:09:03.140
So that's it for the support.

139

00:09:03.140  -->  00:09:08.150
Now the second subtype are Step one is to set a minimum confidence.

140

00:09:08.220  -->  00:09:14.050
So the choice of the confidence still depends on the business problem but mostly on your business goals

141

00:09:14.060  -->  00:09:14.320
.

142

00:09:14.340  -->  00:09:19.710
So what we'll do now is we're not going to compute confidence like we computed the support we're going

143

00:09:19.710  -->  00:09:27.330
to start with the default value and then decrease the confidence step by step until we get some relevant

144

00:09:27.330  -->  00:09:32.060
rules because you know the confidence is kind of a arbitrary choice.

145

00:09:32.100  -->  00:09:37.310
We don't want to have a too high confidence because if we get too high confidence we will get to obvious

146

00:09:37.400  -->  00:09:42.480
rules you know rules that we don't need a machine learning algorithm to understand where we need to

147

00:09:42.480  -->  00:09:44.230
place the products next to each other.

148

00:09:44.340  -->  00:09:50.340
And we shouldn't have a too small confidence because if we get too small confidence we will get some

149

00:09:50.420  -->  00:09:55.630
nonsense rules like you know if I'm buying chocolate I want to buy shampoo.

150

00:09:55.670  -->  00:09:58.220
That's a nonsense rule that doesn't make any sense.

151

00:09:58.380  -->  00:10:02.160
And that's the kind of rule we'll get if we sell it to small confidence.

152

00:10:02.150  -->  00:10:06.540
So we will start with the default value which is actually 0.8.

153

00:10:06.560  -->  00:10:08.170
I think we will have a look at it.

154

00:10:08.180  -->  00:10:15.590
We can go back to help here to look at the description and if we want to have the info about these two

155

00:10:15.600  -->  00:10:17.820
arguments here support and confidence.

156

00:10:17.820  -->  00:10:22.320
What we need to do is click on this AP parameter here which is the class.

157

00:10:22.430  -->  00:10:23.480
And here we go.

158

00:10:23.510  -->  00:10:29.640
That gives you the information of the parameter argument a priori and Ekla and Clydes the other model

159

00:10:29.630  -->  00:10:31.960
that will make after this section.

160

00:10:32.100  -->  00:10:38.670
And as you can see we get informations about the support and confidence in other arguments.

161

00:10:38.660  -->  00:10:43.160
So these are actually the arguments that are both in a priori and a cloud.

162

00:10:43.350  -->  00:10:49.800
And below you have some additional arguments that are only for apiary because you'll see that the Ekla

163

00:10:49.830  -->  00:10:55.680
algorithm doesn't have a confidence in its algorithm and only consider the support.

164

00:10:55.730  -->  00:10:57.090
We all see that afterwards.

165

00:10:57.200  -->  00:11:00.770
But right now what we're interested in is actually the confidence.

166

00:11:01.050  -->  00:11:04.660
And you can see that the full value is 0.8.

167

00:11:04.700  -->  00:11:07.650
So that's what we will start with.

168

00:11:07.700  -->  00:11:10.340
I'm not saying we will get some interesting results.

169

00:11:10.500  -->  00:11:15.980
You can already imagine what we're going to get because 0.08 is a very high confidence.

170

00:11:16.050  -->  00:11:22.050
Try to guess what we'll get with this high confidence 0.8 and worry we will divide it by 2 to try some

171

00:11:22.050  -->  00:11:25.200
smaller confidences until we get some relevant rules.

172

00:11:25.470  -->  00:11:30.810
Okay so that's actually ready with the single line of code containing only these two parameters the

173

00:11:30.810  -->  00:11:36.020
data set and this parameter here with the minimum support and the minimum confidence.

174

00:11:36.170  -->  00:11:44.520
We train our pre remodel on our dataset so let's select this line and execute.

175

00:11:44.560  -->  00:11:50.680
And here we go are a priori model is created and by the way the rules are also created.

176

00:11:50.930  -->  00:11:52.640
So let's have a look at the info here.

177

00:11:52.660  -->  00:11:58.770
All right so that's the a priori model and here we have the default parameters of this parameter argument

178

00:11:58.760  -->  00:11:59.580
here.

179

00:11:59.580  -->  00:12:06.600
So we can see that we have the minimum confidence here on AIDS and the minimum support 0.03 And we also

180

00:12:06.600  -->  00:12:08.370
have the middleman of the basket.

181

00:12:08.370  -->  00:12:13.440
That means that the basket of the rules we'll consider will contain at least one product.

182

00:12:13.530  -->  00:12:18.010
Well we could have actually set to here to have at least two products in the role.

183

00:12:18.090  -->  00:12:20.000
We'll see if we get a problem with that.

184

00:12:20.040  -->  00:12:25.310
But so far the most important arguments we need to improve our support and the confidence.

185

00:12:25.700  -->  00:12:26.270
Okay.

186

00:12:26.390  -->  00:12:29.150
So the algorithmic control that's not very important for us.

187

00:12:29.150  -->  00:12:34.850
Now that's kind of a little more advanced and here we get some other interesting informations.

188

00:12:35.070  -->  00:12:41.370
The most important information when you look at here is the number of rules we can actually see zero

189

00:12:41.370  -->  00:12:42.320
rules here.

190

00:12:42.360  -->  00:12:49.070
That means that when we trained our a priori model here this model actually found zero rule.

191

00:12:49.400  -->  00:12:50.950
And can you guess why.

192

00:12:51.330  -->  00:12:57.280
Well of course it's used to the choice of our minimum conscience because by setting this minimum confidence

193

00:12:57.390  -->  00:13:04.450
0.8 that means that all the rules made by our a priori algorithm have a confidence higher than 0.8.

194

00:13:04.470  -->  00:13:05.760
And what does that mean.

195

00:13:05.750  -->  00:13:11.960
That means that each rule should be correct at least on 80 percent of the transactions.

196

00:13:12.030  -->  00:13:17.540
So 80 percent is a lot that means that the rule must be true at least four times out of five.

197

00:13:17.610  -->  00:13:24.820
And that's why we found zero rule with a minimum confidence of 0.8 because no rule is true at least

198

00:13:24.840  -->  00:13:26.650
Fortune's actions are five.

199

00:13:26.930  -->  00:13:28.390
So that's what I was telling you.

200

00:13:28.430  -->  00:13:30.140
We can start with a default value.

201

00:13:30.160  -->  00:13:35.650
But since we have a lot of transactions and a lot of products that the customers can pre-Chase.

202

00:13:35.930  -->  00:13:40.630
Well of course we need to set smaller confidence so we will divide it by 2.

203

00:13:40.760  -->  00:13:42.840
So we will try now 0.4.

204

00:13:42.920  -->  00:13:44.680
And now let's see what we get.

205

00:13:44.690  -->  00:13:47.030
So let's really execute this line.

206

00:13:47.040  -->  00:13:52.810
It will retrain the operating model on a data set and recreate some new rules.

207

00:13:52.830  -->  00:13:53.430
Here we go.

208

00:13:53.420  -->  00:13:57.150
Now we have two hundred and eighty one rules much better.

209

00:13:57.140  -->  00:13:58.460
So that's a relief.

210

00:13:58.500  -->  00:14:02.700
And now of course what we're going to do is look at the rules themselves.

211

00:14:02.710  -->  00:14:05.080
We're going to visually see what the rules are.

212

00:14:05.100  -->  00:14:09.590
So we're going to see exactly which products should be placed next to each other and we will see the

213

00:14:09.600  -->  00:14:11.240
strongest association rules.

214

00:14:11.250  -->  00:14:15.520
We will see what Prak customers pre-Chase if they buy another product.

215

00:14:15.600  -->  00:14:20.940
So we will see all this very explicitly and that's what we're going to do in the next to Teutul Psylocke

216

00:14:20.930  -->  00:14:23.000
forward to discovering these rules with you.

217

00:14:23.020  -->  00:14:24.750
And until then Joe machine learning
