1
00:00:00,300 --> 00:00:00,830
All right.

2
00:00:00,870 --> 00:00:02,250
I'm ready to do some cleaning.

3
00:00:02,460 --> 00:00:07,470
Yes good because now we're about to do a deep cleaning of the text.

4
00:00:07,470 --> 00:00:07,800
Right.

5
00:00:07,800 --> 00:00:14,790
So far the texts have punctuation different characters other than letters that capital letters lowercase

6
00:00:15,060 --> 00:00:17,130
the verbs are conjugated differently.

7
00:00:17,130 --> 00:00:22,500
Well we're going to simplify all this and that's indeed an essential step when doing natural language

8
00:00:22,500 --> 00:00:23,340
processing.

9
00:00:23,370 --> 00:00:30,570
We need to clean the texts as much as we can in order to ease the learning process of the future machinery

10
00:00:30,570 --> 00:00:36,510
model which we will train to understand the reviews understand English basically and predict if the

11
00:00:36,510 --> 00:00:39,060
reviews are positive or negative.

12
00:00:39,060 --> 00:00:39,480
All right.

13
00:00:39,480 --> 00:00:40,440
So let's do this.

14
00:00:40,530 --> 00:00:45,790
Let's first import the library's meaning the tools which will allow us to clean these decks.

15
00:00:45,810 --> 00:00:51,320
So the first one and that's the main one the most essential one it is the library art.

16
00:00:51,680 --> 00:00:51,920
Right.

17
00:00:51,930 --> 00:00:54,170
So let me just import it first.

18
00:00:54,180 --> 00:00:56,840
It's simply called R E and that's library.

19
00:00:56,850 --> 00:00:57,930
You know will use to.

20
00:00:58,320 --> 00:00:58,620
Yes.

21
00:00:58,620 --> 00:01:04,440
This one the first one that the library will use to simplify basically the issues but this is not the

22
00:01:04,440 --> 00:01:06,740
library that will allow us to do the stemming.

23
00:01:06,930 --> 00:01:08,970
Which I will remain and re-explain later on.

24
00:01:09,140 --> 00:01:09,690
OK.

25
00:01:09,750 --> 00:01:10,490
So are you.

26
00:01:10,830 --> 00:01:18,480
Then we will import of course that and LTE K library very classic library in natural language processing

27
00:01:18,720 --> 00:01:22,260
which will allow us to download the and symbol of stop words.

28
00:01:22,260 --> 00:01:23,910
So what are the top words.

29
00:01:23,910 --> 00:01:29,460
These are you know the words we don't want to include in our reviews you know after cleaning the texts

30
00:01:29,820 --> 00:01:36,060
which you know are words that are not relevant to help the predictions of whether a review is positive

31
00:01:36,150 --> 00:01:37,050
or negative.

32
00:01:37,050 --> 00:01:42,120
And these words include you know the simple ones like the you know all the articles like the.

33
00:01:43,140 --> 00:01:49,170
And you know all these words which don't give any hint of whether a review is positive or negative.

34
00:01:49,170 --> 00:01:54,450
So we will remove all these words you know all the words there are not helpful to predict if a review

35
00:01:54,450 --> 00:01:56,080
is positive or negative.

36
00:01:56,100 --> 00:02:04,320
And speaking of these stop words well now that we import an A.K. we can call an A.K. and from which

37
00:02:04,380 --> 00:02:06,170
we are going to download.

38
00:02:06,440 --> 00:02:08,120
Well oldest upwards.

39
00:02:08,160 --> 00:02:13,740
And to specify this we need to enter here in quotes inside this download function from the penalty library

40
00:02:14,040 --> 00:02:20,850
stop words and this will get all the stop words and you'll see later on how we use this to indeed not

41
00:02:20,850 --> 00:02:24,630
include these non relevant words in our reviews.

42
00:02:24,630 --> 00:02:25,010
OK.

43
00:02:25,450 --> 00:02:27,010
So good.

44
00:02:27,010 --> 00:02:35,030
Now we're not done with an A.K. yet because from an LTE T.K. And then from the corpus module of an antique

45
00:02:35,030 --> 00:02:40,980
a library we will import all these stuff words that we just downloaded before.

46
00:02:40,980 --> 00:02:41,760
There we go.

47
00:02:41,760 --> 00:02:48,120
So basically this line of code downloads them and this line of code imports them into our notebook.

48
00:02:48,300 --> 00:02:49,000
OK.

49
00:02:49,050 --> 00:02:58,090
So all these top words and finally still from an LTE K and from the stem module from the N.A. library.

50
00:02:58,140 --> 00:03:04,220
And then once again from the poorer sub module of the stem module of the end I'll take a library.

51
00:03:04,230 --> 00:03:10,530
Well we're going to import a class which is the porter demo class.

52
00:03:10,530 --> 00:03:11,370
Perfect.

53
00:03:11,400 --> 00:03:16,080
And this is a class we'll use of course to apply stemming on our reviews.

54
00:03:16,080 --> 00:03:23,550
So now let me remind what this is about stemming consist of taking only the root of a word that indicates

55
00:03:23,610 --> 00:03:25,920
enough about what this word means.

56
00:03:25,920 --> 00:03:31,920
So for example let's say there is a review that says oh I loved this restaurant okay.

57
00:03:32,010 --> 00:03:35,310
And let's say we want to apply stemming to the word loved.

58
00:03:35,340 --> 00:03:41,580
Well what it will do is that it will transform Luft into love just to simplify the review.

59
00:03:41,580 --> 00:03:46,480
Because whether we say oh I loved this restaurant or Oh I love this restaurant.

60
00:03:46,560 --> 00:03:47,880
Well you know that means the same.

61
00:03:47,880 --> 00:03:49,490
That means that the review is positive.

62
00:03:49,590 --> 00:03:55,410
So we can totally remove all the conjugation of the verbs you know just keeping the present tense so

63
00:03:55,410 --> 00:04:00,060
that we can indeed simplify the reviews because remember at the end you know after cleaning the text

64
00:04:00,090 --> 00:04:06,810
when creating actually the bag of words model we will create a sparse matrix where in each column we

65
00:04:06,810 --> 00:04:10,590
will have all the different words of all our different reviews.

66
00:04:10,590 --> 00:04:16,710
And therefore in order to optimize or minimize the dimension of this sparse matrix where the dimension

67
00:04:16,710 --> 00:04:22,410
is exactly the number of columns well we need to simplify as much as we can the words.

68
00:04:22,410 --> 00:04:27,630
And if we don't apply stemming Well you know in the sparse matrix we will have one column for love and

69
00:04:27,630 --> 00:04:29,150
one column for Luft.

70
00:04:29,220 --> 00:04:34,590
And since that means the same thing that would be redundant and that would make the sparse matrix even

71
00:04:34,740 --> 00:04:37,860
more complex you know where the higher dimensions that would be wrong.

72
00:04:37,860 --> 00:04:44,310
So that's exactly what stemming is about it consists of reducing the final dimension of the sparse matrix

73
00:04:44,550 --> 00:04:50,790
so that we can indeed have not too much trouble to learn the text from our machinery model.

74
00:04:50,790 --> 00:04:51,180
All right.

75
00:04:51,270 --> 00:04:54,400
So that's what this poorest dimmer class will do.

76
00:04:54,420 --> 00:04:55,950
And now there you go my friend.

77
00:04:56,010 --> 00:05:03,080
We can start cleaning the text we have all the tools we need so the first thing we'll do is create a

78
00:05:03,080 --> 00:05:05,600
new list which we'll call Corpus.

79
00:05:05,600 --> 00:05:06,410
All right.

80
00:05:06,410 --> 00:05:09,620
And we will initialize this list as an empty list.

81
00:05:09,620 --> 00:05:11,790
And what will this list be exactly.

82
00:05:11,810 --> 00:05:13,220
Know what will it contain.

83
00:05:13,220 --> 00:05:16,670
Well it will simply contain all our different reviews.

84
00:05:16,670 --> 00:05:23,780
You know all the different reviews from our data set but all cleaned and all into this list corpus.

85
00:05:23,780 --> 00:05:28,730
So what we'll do actually is you know we will make a full loop to iterate through all the different

86
00:05:28,730 --> 00:05:35,570
reviews of our data set and for each of these review we will apply a cleaning process you know by putting

87
00:05:35,630 --> 00:05:41,410
all the letters in lowercase and removing the punctuation and removing the stop words.

88
00:05:41,480 --> 00:05:46,200
All these things and we will do that one review after another and each time we clean a review.

89
00:05:46,230 --> 00:05:48,870
Well we will add it to this corpus.

90
00:05:48,890 --> 00:05:52,290
So this corpus will only get in the end all the clean reviews.

91
00:05:52,340 --> 00:05:52,730
Okay.

92
00:05:53,270 --> 00:05:57,360
And we do this of course because then the future functions will use in the next steps.

93
00:05:57,440 --> 00:06:00,510
Expect our reviews in the list and all cleaned.

94
00:06:00,530 --> 00:06:00,840
Okay.

95
00:06:00,920 --> 00:06:07,310
So corpus and now now that we initialize this list well we're going to populate it with a clean reviews

96
00:06:07,550 --> 00:06:15,920
through a for loop a full loop which will iterate you know with this classic looping variable ie in

97
00:06:16,190 --> 00:06:20,270
the range from 0 to well guess what.

98
00:06:20,270 --> 00:06:21,900
Guess what is the upper bound.

99
00:06:21,900 --> 00:06:27,250
You know we will simply iterate through all the reviews and since we have 1000 reviews in our dataset.

100
00:06:27,320 --> 00:06:31,310
Well I will simply go from zero to 1000.

101
00:06:31,320 --> 00:06:31,790
Right.

102
00:06:31,820 --> 00:06:32,750
As simple as that.

103
00:06:32,750 --> 00:06:38,690
It will iterate through the indexes of the reviews which go effectively from zero to nine hundred and

104
00:06:38,690 --> 00:06:39,270
ninety nine.

105
00:06:39,520 --> 00:06:40,030
Okay.

106
00:06:40,280 --> 00:06:43,910
So for loop ready and now we can go inside the for loop.

107
00:06:43,910 --> 00:06:44,930
And there we go.

108
00:06:44,930 --> 00:06:51,110
Now we're going to apply different steps to clean each and every single review of our data sets.

109
00:06:51,110 --> 00:06:57,290
So first of all we will create a new variable which will call review and that variable will exactly

110
00:06:57,290 --> 00:06:58,900
be that cleans review.

111
00:06:58,940 --> 00:07:00,910
But you know we will clean it step by step.

112
00:07:00,950 --> 00:07:05,530
So we'll update review each time we proceed to a new kind of cleaning.

113
00:07:05,600 --> 00:07:10,220
And the first kind of cleaning will do will be to remove all punctuation.

114
00:07:10,250 --> 00:07:14,210
In other words it will be to keep only the letters in our reviews.

115
00:07:14,240 --> 00:07:14,960
All right.

116
00:07:14,960 --> 00:07:22,730
And to do this we're gonna call r r e library from which we're gonna call the sub function which is

117
00:07:22,730 --> 00:07:29,220
a function that can replace anything in a text you know in a string actually by anything else you want.

118
00:07:29,300 --> 00:07:36,890
And what we're gonna replace actually is any element that is not a letter you know from it is that by

119
00:07:37,100 --> 00:07:44,630
a space so that every punctuation like quotes double quotes commas or Collins or anything you want will

120
00:07:44,630 --> 00:07:50,090
be replaced by a space and it has to be replaced by space because otherwise we can have two words that

121
00:07:50,090 --> 00:07:50,960
stick together.

122
00:07:50,960 --> 00:07:56,450
So we need to make sure we replace the punctuation by spaces so that we can indeed still separate the

123
00:07:56,450 --> 00:07:56,930
words.

124
00:07:56,930 --> 00:07:57,680
All right.

125
00:07:57,710 --> 00:08:03,140
And the way to do this thanks to this sub function is to enter here in the parameters first what we

126
00:08:03,140 --> 00:08:09,260
want to replace and the trick to say that we want to replace anything that is not a letter is to do

127
00:08:09,260 --> 00:08:10,250
it this way.

128
00:08:10,250 --> 00:08:13,460
You start with a pair of square brackets here just like that.

129
00:08:13,460 --> 00:08:20,210
So that what's inside this pair of square brackets will be what will be replaced you know by the spaces.

130
00:08:20,210 --> 00:08:25,190
And the trick to say that what we want to replace are anything but letters is to include a hat here

131
00:08:25,400 --> 00:08:28,400
and I will explain what this means and then add a.

132
00:08:28,490 --> 00:08:37,760
So have to do it like that actually double had a k a dash z so all the lowercase letters from a to z

133
00:08:37,910 --> 00:08:43,090
but also then all the capital letters from a to z.

134
00:08:43,100 --> 00:08:43,820
All right.

135
00:08:43,820 --> 00:08:50,780
And what this hat means is exactly not you know this symbol in mathematics or computer science means

136
00:08:51,020 --> 00:08:57,860
not meaning not all the letters from a to z in lowercase nor the capital letters from a to z which is

137
00:08:57,860 --> 00:09:02,750
exactly what we want we want to replace anything that is not the letters from it is that in lowercase

138
00:09:02,750 --> 00:09:11,600
or capitals by spaces and the way to specify that we want to replace all these by spaces is well exactly

139
00:09:11,600 --> 00:09:17,660
what we have to enter here as a second parameter and which we will enter in you know quotes but inside

140
00:09:17,780 --> 00:09:25,000
a space right what's inside these quotes is exactly what we want to replace those non letters here by.

141
00:09:25,010 --> 00:09:25,580
All right.

142
00:09:25,580 --> 00:09:30,270
So we're going to replace everything that is not letters meaning all the punctuation by this space.

143
00:09:30,290 --> 00:09:31,090
Okay.

144
00:09:31,130 --> 00:09:37,670
And then finally we have to enter one final argument which is of course where we want to do all these

145
00:09:37,670 --> 00:09:42,340
replacement you know inside the what inside which review right inside which text.

146
00:09:42,410 --> 00:09:47,480
And so very simply the third parameter we have to enter here is the review in which we want to do all

147
00:09:47,480 --> 00:09:53,230
these replacements and to access to review Well that's very easy we need to take our data set.

148
00:09:53,390 --> 00:09:58,090
There we go then we need to take the right column of the data set which contains the reviews and that's

149
00:09:58,100 --> 00:10:02,960
of course the first column which we can either access with the eye log function and then specify in

150
00:10:02,970 --> 00:10:03,970
the index 0.

151
00:10:03,990 --> 00:10:10,480
Or I'll show you another trick by adding here a pair of square brackets and then just entering in quotes.

152
00:10:10,500 --> 00:10:14,820
Well the name of the column which is read the view right.

153
00:10:14,850 --> 00:10:20,070
If we go back to our dataset you will see that the name of the first column is review.

154
00:10:20,070 --> 00:10:20,580
Okay.

155
00:10:20,790 --> 00:10:21,620
So as you want.

156
00:10:21,690 --> 00:10:23,340
I look works very well too.

157
00:10:23,460 --> 00:10:25,770
And now do we need to add something here.

158
00:10:26,010 --> 00:10:31,140
Well of course because this only gets the first column containing all the reviews.

159
00:10:31,140 --> 00:10:37,200
But now we are dealing with a specific review the one of index i and therefore to catch that specific

160
00:10:37,200 --> 00:10:40,220
review which we want to clean right now inside this full loop.

161
00:10:40,380 --> 00:10:43,910
Well it's simply to add in a new pair of square brackets.

162
00:10:44,350 --> 00:10:44,960
All right.

163
00:10:45,030 --> 00:10:51,660
This will get the review of indexed I in this first column review of the dataset and that's exactly

164
00:10:51,660 --> 00:10:52,230
what we want.

165
00:10:52,890 --> 00:10:53,410
All right.

166
00:10:53,460 --> 00:10:54,930
First cleaning done.

167
00:10:55,110 --> 00:10:57,900
Now we will proceed to two other types of cleaning.

168
00:10:57,900 --> 00:11:01,620
Then we will take a little break and then we will proceed to stemming.

169
00:11:01,740 --> 00:11:07,400
Which will consist of you know simplifying the words in order to get only the root and therefore simplifying.

170
00:11:07,400 --> 00:11:10,000
Eventually the sparse matrix.

171
00:11:10,100 --> 00:11:15,920
All right so that new step will be to transform all the capital letters into lowercase.

172
00:11:15,990 --> 00:11:22,770
And that's very easy to do this we just need to take our review variable from which we can now call

173
00:11:22,920 --> 00:11:23,990
a specific function.

174
00:11:24,000 --> 00:11:30,360
Because you know we created this variable as an output of this sub function by the R E library and therefore

175
00:11:30,360 --> 00:11:35,610
like objects it now has some attributes and functions or you know methods that you can call in that

176
00:11:35,610 --> 00:11:43,750
function we want now to simplify all the letters into lowercase is the lower function and that's it.

177
00:11:43,770 --> 00:11:47,020
You just have to enter it like that review that lower.

178
00:11:47,400 --> 00:11:51,440
But this will return the review with only lowercase letters.

179
00:11:51,480 --> 00:11:59,430
And since we want to update our review variable Well we simply need to adhere review equals write equals

180
00:11:59,430 --> 00:12:04,740
the result of applying the lower function to our previous version of the review.

181
00:12:04,740 --> 00:12:05,130
Okay.

182
00:12:05,220 --> 00:12:06,620
So very easy.

183
00:12:06,660 --> 00:12:11,700
And then one final cleaning before we proceed to stemming in the next material.

184
00:12:11,760 --> 00:12:17,970
Well actually what we have to do now is something to prepare for the stemming and that something is

185
00:12:17,970 --> 00:12:23,730
to split the different elements of the reviews in different words actually because the different elements

186
00:12:23,790 --> 00:12:25,020
are now words.

187
00:12:25,080 --> 00:12:30,870
So we're going to split the review into its different words so that then we can apply stemming to each

188
00:12:30,960 --> 00:12:34,200
of these words you know by simplifying them by their root.

189
00:12:34,200 --> 00:12:34,880
Okay.

190
00:12:34,890 --> 00:12:41,940
So the way to do this is very simple once again you know I'm gonna copy this and it here and instead

191
00:12:41,940 --> 00:12:47,440
of calling the lower function I'm simply going to call the split function as simple as that.

192
00:12:47,460 --> 00:12:51,600
This will split your review into its different words and now.

193
00:12:51,600 --> 00:12:53,870
Now my friends we're ready for this Deming.
