1
00:00:00,320 --> 00:00:01,410
All right my friends.

2
00:00:01,410 --> 00:00:06,390
Are you ready to train the Priory moral on the whole dataset.

3
00:00:06,390 --> 00:00:07,880
Well I bet you are.

4
00:00:07,920 --> 00:00:13,470
Because indeed we actually did the most difficult part you know the most difficult part was to make

5
00:00:13,470 --> 00:00:19,470
that transactions list containing all the different transactions of our dataset you know the seven thousand

6
00:00:19,470 --> 00:00:26,250
five hundred one transactions we all put them into this transactions list with strings for each of the

7
00:00:26,250 --> 00:00:26,790
products.

8
00:00:27,060 --> 00:00:33,660
And these transactions list will be the input of the primary function which will use right now to train

9
00:00:33,670 --> 00:00:36,080
the primary model on this data set.

10
00:00:36,090 --> 00:00:37,700
And so that's what I'm talking about.

11
00:00:37,740 --> 00:00:43,560
Most of the job is done because now the only thing that we have to do is just call this a primary function

12
00:00:43,560 --> 00:00:50,190
from this a binary package which we installed in the first cell and call that function with some relevant

13
00:00:50,190 --> 00:00:52,140
values of the parameters.

14
00:00:52,140 --> 00:00:58,200
And that will be most of the reflection we'll have when building and training this primary model.

15
00:00:58,200 --> 00:00:58,700
All right.

16
00:00:58,710 --> 00:00:59,620
I'm ready.

17
00:00:59,610 --> 00:01:00,420
Let's do this.

18
00:01:00,480 --> 00:01:03,250
Let's create a new code cell.

19
00:01:03,300 --> 00:01:10,050
So the first thing to do will be to import effectively that a primary function because so far.

20
00:01:10,050 --> 00:01:16,210
Make sure to understand that we only installed the parry package but we haven't importers anything.

21
00:01:16,230 --> 00:01:20,670
The only libraries we import were named by Matt Blunt lib and pandas.

22
00:01:20,700 --> 00:01:29,010
So now we need indeed to upload this primary function and its primary function belongs to a binary package

23
00:01:29,040 --> 00:01:30,360
which we installed first.

24
00:01:30,360 --> 00:01:35,750
Therefore we need to start from that a binary package.

25
00:01:35,760 --> 00:01:38,750
There you go from which we import.

26
00:01:38,770 --> 00:01:41,300
That's a primary function.

27
00:01:41,310 --> 00:01:42,060
All right.

28
00:01:42,060 --> 00:01:44,790
There we go again a primary and now.

29
00:01:44,850 --> 00:01:47,150
Now we can call that function.

30
00:01:47,150 --> 00:01:47,400
All right.

31
00:01:47,400 --> 00:01:53,010
So first thing to understand is that this function will actually return the rules you know not only

32
00:01:53,010 --> 00:01:57,810
rule change that your primary model on the data set but also the same time this function will indeed

33
00:01:57,810 --> 00:02:01,550
train the sobriety model and in the end return the final rules.

34
00:02:01,560 --> 00:02:07,530
You know with the different supports confidences and lifts and therefore since we are now ready to call

35
00:02:07,530 --> 00:02:12,630
this function and since this function returns the rules well let's create a new variable here which

36
00:02:12,630 --> 00:02:14,960
we're simply going to call rules.

37
00:02:14,970 --> 00:02:15,300
All right.

38
00:02:15,300 --> 00:02:18,370
And that will be the output of that function.

39
00:02:18,390 --> 00:02:22,460
And speaking of that function well let's call it right now a primary.

40
00:02:22,530 --> 00:02:23,620
That's the function.

41
00:02:23,730 --> 00:02:27,040
Therefore I'm adding some parentheses and now there we go.

42
00:02:27,060 --> 00:02:30,600
Let's see what parameters we have to input.

43
00:02:30,630 --> 00:02:30,870
All right.

44
00:02:30,900 --> 00:02:37,620
So this function takes as input some very intuitive arguments we could actually you know almost guessed

45
00:02:37,680 --> 00:02:42,450
all of them the first one is of course well the dataset you know the dataset on which you're going to

46
00:02:42,450 --> 00:02:48,930
train your primary model and the name for that parameter is transactions actually you know because the

47
00:02:48,960 --> 00:02:56,010
primary model is mostly used to compute some correlations and association rules among transactions.

48
00:02:56,010 --> 00:02:58,500
So that's actually the name of the parameter.

49
00:02:58,590 --> 00:03:00,930
And of course the value for that parameter must be.

50
00:03:01,110 --> 00:03:09,510
Well that same transactions list which we created in the right format right before this tutorial in

51
00:03:09,540 --> 00:03:11,130
the data pricing phase.

52
00:03:11,130 --> 00:03:11,430
OK.

53
00:03:11,430 --> 00:03:16,560
So this is the name of the parameter and this is the name of our transactions list which is the value

54
00:03:16,680 --> 00:03:18,260
of indeed that parameter.

55
00:03:18,450 --> 00:03:18,700
Okay.

56
00:03:18,720 --> 00:03:19,010
Good.

57
00:03:19,010 --> 00:03:20,460
So that's for the first argument.

58
00:03:20,460 --> 00:03:21,860
That was an obvious one.

59
00:03:21,960 --> 00:03:26,340
And now according to you what would be the next argument.

60
00:03:26,340 --> 00:03:32,190
Well the next argument has to do with the support of course it's going to be a simple support because

61
00:03:32,370 --> 00:03:34,590
we have a support for each rule.

62
00:03:34,590 --> 00:03:42,000
But what we can set is actually a minimum support you know in order not to compute all the rules but

63
00:03:42,000 --> 00:03:45,290
only the rules that have at least some certain relevance.

64
00:03:45,420 --> 00:03:51,990
And therefore we will set a minimum support value in order to take not all the rules but only the rules

65
00:03:51,990 --> 00:03:55,590
that have a support higher than this minimum support.

66
00:03:55,590 --> 00:04:02,310
All right so let's first enter the name of the parameter here which is men underscore support.

67
00:04:02,490 --> 00:04:03,510
Right.

68
00:04:03,570 --> 00:04:08,490
And now according to you what should we choose as a minimum support here.

69
00:04:08,490 --> 00:04:13,440
Well this has to do of course with our situation you know the problem itself.

70
00:04:13,440 --> 00:04:15,480
And of course some common sense.

71
00:04:15,510 --> 00:04:16,800
So let's recap.

72
00:04:16,830 --> 00:04:24,430
We have in total seven thousand five hundred and one transactions that were recorded over one full week.

73
00:04:24,570 --> 00:04:29,880
And among these seven thousand five hundred one transactions we want to get the most relevant rules

74
00:04:29,880 --> 00:04:36,030
you know the were the strongest rules of two elements.

75
00:04:36,030 --> 00:04:41,070
You know with one element of the left hand side of the rule you know one product and one element in

76
00:04:41,070 --> 00:04:46,410
the right hand side of the rule which is another product and we want therefore these products to appear

77
00:04:46,470 --> 00:04:47,830
a minimum amount of time.

78
00:04:47,880 --> 00:04:50,310
And that's exactly what the support is about.

79
00:04:50,310 --> 00:04:56,340
Remember the support of a couple of products a and b is the number of transactions containing these

80
00:04:56,340 --> 00:05:00,260
two drugs and be divided by the total number of transact.

81
00:05:00,710 --> 00:05:06,980
So we need to see here you know for a couple of products a and b how many times per week we need to

82
00:05:06,980 --> 00:05:09,470
have at least these two products in the transactions.

83
00:05:09,980 --> 00:05:16,100
Well you know let's use some common sense let's say that each day we would like to consider the products

84
00:05:16,280 --> 00:05:20,440
that appear in at least three transactions in a day.

85
00:05:20,450 --> 00:05:25,760
All right three transactions in a day because all the products that appear in only one transaction or

86
00:05:25,760 --> 00:05:31,580
two transactions you know are actually not frequent and we would not build some strong rules out of

87
00:05:31,580 --> 00:05:32,570
these products.

88
00:05:32,570 --> 00:05:38,750
So our common sense here is to only consider the products that appear at least three times a day.

89
00:05:38,930 --> 00:05:45,950
And therefore since the 7500 and one transactions were recorded during the full week Well we need to

90
00:05:45,950 --> 00:05:52,130
multiply this number of three transactions per day by seven in order to get you know that minimum number

91
00:05:52,130 --> 00:05:56,960
of times we want to see these products in the transactions per week and therefore that number of times

92
00:05:56,960 --> 00:05:59,870
is three times seven equals 21.

93
00:05:59,930 --> 00:06:05,570
And since the support is the number of times the products appear in the transactions divided by the

94
00:06:05,570 --> 00:06:11,090
total number of transactions Well the minimum support considering that we want to see minimum three

95
00:06:11,090 --> 00:06:18,050
times per day the product must be three times seven divided by seven thousand five hundred and one.

96
00:06:18,050 --> 00:06:23,450
All right so that's purely based on common sense you could choose another minimum support but there

97
00:06:23,450 --> 00:06:23,850
you go.

98
00:06:23,870 --> 00:06:28,900
That's a minimum support that goes well with our scenario you know with our business case study.

99
00:06:29,150 --> 00:06:36,440
And therefore when I'm simply going to do now is just open a new tab here to quickly compute well three

100
00:06:36,590 --> 00:06:42,950
as in minimum three times want to see the products appear in the transactions per day then times seven

101
00:06:43,190 --> 00:06:47,880
because the seven thousand five hundred and one transactions are recorded over a week.

102
00:06:47,900 --> 00:06:52,880
And therefore when calculating the support and dividing by the total number of transactions the numerator

103
00:06:52,880 --> 00:06:58,840
and denominator must be in the same unit of time which is one week and then divided by seven thousand

104
00:06:58,830 --> 00:07:01,040
five hundred and one.

105
00:07:01,220 --> 00:07:02,720
Total transactions.

106
00:07:02,750 --> 00:07:03,920
There's just press enter.

107
00:07:03,980 --> 00:07:12,980
We'll get the result which is 0 point 0 0 27 and we can round that up to open 0 0 3 and open 0 3 will

108
00:07:12,980 --> 00:07:15,710
be exactly our minimum support.

109
00:07:15,740 --> 00:07:21,400
So I'm going to close this and I'm going to enter here 0 point 0 0 3.

110
00:07:21,410 --> 00:07:22,010
Perfect.

111
00:07:22,040 --> 00:07:24,530
So that's for our minimum support.

112
00:07:24,530 --> 00:07:27,560
Now the next argument what do you think it's going to be.

113
00:07:27,560 --> 00:07:33,780
Well you probably guess that this time we're gonna choose a minimum confidence.

114
00:07:33,780 --> 00:07:34,390
Right.

115
00:07:34,520 --> 00:07:36,670
A minimum confidence.

116
00:07:36,680 --> 00:07:36,860
All right.

117
00:07:36,890 --> 00:07:42,920
So this time what should we set as the minimum confidence should we use again common sense or should

118
00:07:42,920 --> 00:07:44,770
we try some different values.

119
00:07:44,780 --> 00:07:49,430
Well this time we won't do the same kind of calculation as we did for the support this time.

120
00:07:49,460 --> 00:07:54,130
I'm rather going to give you some rule of songs you know which you can try when doing association will

121
00:07:54,130 --> 00:08:00,110
learning so I know from the other packages you know the one from R because there is actually a great

122
00:08:00,110 --> 00:08:00,990
function in art.

123
00:08:01,000 --> 00:08:06,800
Do association rule learning and it has indeed a default value for the minimum confidence which is 0

124
00:08:06,800 --> 00:08:07,850
point 8.

125
00:08:07,850 --> 00:08:13,700
So what actually did you know for this problem is to start first with open eight but this was way too

126
00:08:13,700 --> 00:08:18,250
high because open eight would require the world to be correct 80 percent of the time.

127
00:08:18,530 --> 00:08:21,170
And therefore I ended up with actually no rule.

128
00:08:21,200 --> 00:08:27,660
So I had to reduce the confidence so I divided by two so that I can try a minimum confidence of open

129
00:08:27,770 --> 00:08:34,460
four but still I got very few rules and so I divided it by two again and thus with open two I actually

130
00:08:34,460 --> 00:08:38,890
got some great rules you know not too much not too few but a dozen of them.

131
00:08:38,900 --> 00:08:42,690
So that was a good choice and that's how I chose this minimum of confidence.

132
00:08:42,710 --> 00:08:48,080
Therefore here for this minimum confidence we will set it equal to four point two.

133
00:08:48,410 --> 00:08:49,040
OK.

134
00:08:49,160 --> 00:08:54,460
Once again no rule of thumb you can try different values depending on your business requirements.

135
00:08:54,470 --> 00:08:58,340
All right then next parameter I'm sure you get it as well.

136
00:08:58,340 --> 00:09:05,390
That is this time the minimum lift you know that other metric which measures the quality of a rule or

137
00:09:05,390 --> 00:09:07,020
the relevance of a rule.

138
00:09:07,070 --> 00:09:10,940
And so now according to you what would be a good minimum lift.

139
00:09:10,940 --> 00:09:16,880
Well that kind of decision to make you know you get them with experience you will see through the many

140
00:09:16,970 --> 00:09:20,800
association rule learning models that you're going to build on your data sets.

141
00:09:20,820 --> 00:09:27,220
That's generally a good lift is at least three you know three four five six seven eight nine you know

142
00:09:27,230 --> 00:09:33,580
these are good lifts but lift below three make the rules not that relevant and therefore this is gonna

143
00:09:33,590 --> 00:09:38,420
be a rule of thumb that I'm giving you here it is not based on common sense rather based on experience

144
00:09:38,750 --> 00:09:43,270
and therefore I recommend to choose a minimum lift of three.

145
00:09:43,280 --> 00:09:43,870
All right.

146
00:09:43,910 --> 00:09:47,480
And with this minimum lift we will get good rules you know relevant rules.

147
00:09:47,480 --> 00:09:47,760
OK.

148
00:09:47,780 --> 00:09:54,590
So minimum lifting equals three and then we have two less arguments that are actually very very important

149
00:09:54,740 --> 00:10:02,590
and in fact compulsory for our business problem it has to do the fact that you know we want to identify

150
00:10:02,590 --> 00:10:10,150
the best deals of buy one product A and get another product be for free and therefore the rules we want

151
00:10:10,150 --> 00:10:16,510
to get in the end must have only two products one product in the left hand side of the rule and one

152
00:10:16,510 --> 00:10:18,780
product in the right hand side of the rule.

153
00:10:18,790 --> 00:10:19,150
All right.

154
00:10:19,150 --> 00:10:24,050
And therefore to make sure we have this one product a on the left and one for a B on the right.

155
00:10:24,130 --> 00:10:29,330
Well we need to add two more arguments here which is first mean length.

156
00:10:29,410 --> 00:10:30,360
OK.

157
00:10:30,400 --> 00:10:38,080
And then max length where of course men length is the minimum number of elements you want to have in

158
00:10:38,080 --> 00:10:43,450
your rule you know left or right and max length is the maximum number of elements you want to have in

159
00:10:43,450 --> 00:10:44,950
your room left or right.

160
00:10:44,950 --> 00:10:50,080
And therefore here to make sure we only have two in our rule no one on the left and one on the right.

161
00:10:50,080 --> 00:10:55,490
Well obviously we need to set min length to two and max length.

162
00:10:55,600 --> 00:10:57,460
Same to two.

163
00:10:57,640 --> 00:11:03,460
And that's only because in our business problem we want to find these best deals of buying one product

164
00:11:03,520 --> 00:11:05,490
A and get one rugby for free.

165
00:11:05,500 --> 00:11:09,360
Therefore our rules must have exactly two elements.

166
00:11:09,430 --> 00:11:15,160
Then imagine you wanted to find the best deals of by two products and get a third one for free.

167
00:11:15,160 --> 00:11:21,460
Then you would set min length to three and max length to three and if you want to be very very flexible

168
00:11:21,460 --> 00:11:26,590
on your deals like you know you could have deals with buy one product A and get one per rugby for free

169
00:11:26,590 --> 00:11:33,100
or buy two breaks a and get one product be for free or you know by 10 products and get one for free.

170
00:11:33,100 --> 00:11:37,770
Well in this case you would set many links to two and then Max lengths to eleven.

171
00:11:37,820 --> 00:11:41,730
OK so that really depends on your business requirements your business problem.

172
00:11:41,740 --> 00:11:47,110
Yeah we just want to find the best deals of two products buy one product a get one product be for free

173
00:11:47,350 --> 00:11:47,930
and that's it.

174
00:11:47,950 --> 00:11:54,170
And that's why we set min links 2 and Max lengths to 2 so that our rule can have only two products.

175
00:11:54,220 --> 00:11:54,550
All right.

176
00:11:54,550 --> 00:11:55,120
And that's it.

177
00:11:55,330 --> 00:12:01,450
Well you know we're done with this a primary function which will return the rules respecting all these

178
00:12:01,690 --> 00:12:08,440
values we set for the parameters a minimum support of open 0 3 which means that the products in the

179
00:12:08,440 --> 00:12:12,550
rules appear at least all point 3 percent of the time.

180
00:12:12,760 --> 00:12:18,250
Then a minimum confidence which means that for each product a in the left hand side of the rules well

181
00:12:18,250 --> 00:12:23,320
we will have product B in the right hand side of the rule at least 20 percent of the time and then we

182
00:12:23,320 --> 00:12:24,850
have a minimum lift of three.

183
00:12:24,850 --> 00:12:28,420
And we have only two products in our rules.

184
00:12:28,420 --> 00:12:32,090
Thanks to this mission x equals two and max length equals two.

185
00:12:32,110 --> 00:12:33,950
All right so I'm ready.

186
00:12:33,970 --> 00:12:38,850
I'm ready to run that sale to get the rules we won't have them displayed in the output.

187
00:12:38,860 --> 00:12:41,980
Don't worry we will visualize them right after this tutorial.

188
00:12:41,980 --> 00:12:42,980
In the last part.

189
00:12:43,090 --> 00:12:44,140
So let's do this.

190
00:12:44,200 --> 00:12:45,860
Let's play this cell.

191
00:12:46,010 --> 00:12:47,050
And there we go.

192
00:12:47,050 --> 00:12:48,580
Now my friends we have the rules.
