WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:06.880
I have said this a 1,000,000 times by now that objects can literally be used just as any

00:00:06.880 --> 00:00:07.750
other data type.

00:00:07.750 --> 00:00:10.940
Any other primitive type like and float etcetera.

00:00:10.940 --> 00:00:15.100
This is one such example which explains the same.

00:00:15.100 --> 00:00:24.380
I'm going to demonstrate you how to send an object as a perimeter to a matter and also how

00:00:24.380 --> 00:00:26.270
to written an object from a method.

00:00:26.270 --> 00:00:30.150
The same thing is applicable even for constructors.

00:00:30.150 --> 00:00:37.300
Now what I want to do is I have two objects.

00:00:37.300 --> 00:00:41.980
Greater one is derived from the maths class and the other one is from the car glass.

00:00:41.980 --> 00:00:43.740
Inside this car class,

00:00:43.740 --> 00:00:49.390
I'm going to write a new method which will take the input which will take which will have

00:00:49.390 --> 00:00:52.200
the perimeter often object.

00:00:52.200 --> 00:00:55.880
And the object that I'm going to send is off the mats class.

00:00:55.880 --> 00:01:06.240
So let's see how it goes going to get inside this wide.

00:01:06.240 --> 00:01:14.060
I'm going to give this matter and name who object?

00:01:14.060 --> 00:01:14.850
Param.

00:01:14.850 --> 00:01:16.130
Example.

00:01:16.130 --> 00:01:19.550
Mats.

00:01:19.550 --> 00:01:25.720
My tie object.

00:01:25.720 --> 00:01:29.050
And I couldn't do anything with that object in here.

00:01:29.050 --> 00:01:32.190
Mats object.

00:01:32.190 --> 00:01:35.410
The x equals 100.

00:01:35.410 --> 00:01:40.670
I'm going to leave the y value,

00:01:40.670 --> 00:01:46.390
not taking it off this What is the data type here,

00:01:46.390 --> 00:01:47.310
It's Matt.

00:01:47.310 --> 00:01:51.030
It's a user defined data time or you can call it as and non primitive.

00:01:51.030 --> 00:01:58.490
That or even you can call it as a reference type and obviously way too.

00:01:58.490 --> 00:02:02.350
Call that matter from here using the car object.

00:02:02.350 --> 00:02:08.050
Let's save the file.

00:02:08.050 --> 00:02:14.550
Now we have all of these set some values while creating the object itself.

00:02:14.550 --> 00:02:18.450
The seven is for X and 10 years for away.

00:02:18.450 --> 00:02:27.640
But with this statement we have reserved the value off X 200 if we run this program okay,

00:02:27.640 --> 00:02:28.120
before that,

00:02:28.120 --> 00:02:31.180
let's right down another line.

00:02:31.180 --> 00:02:40.120
It's Mad Edition now.

00:02:40.120 --> 00:02:45.990
This will was a result off the sum of Xingwei that's on the program.

00:02:45.990 --> 00:02:54.890
Great.

00:02:54.890 --> 00:02:56.900
The result is as expected.

00:02:56.900 --> 00:03:02.300
Now let's see how we can written an object from a method.

00:03:02.300 --> 00:03:05.200
Again,

00:03:05.200 --> 00:03:14.820
let's introduce one more method this time the written Type A's off Matt object instead of

00:03:14.820 --> 00:03:18.650
wide example.

00:03:18.650 --> 00:03:26.310
And in here I'm just simply going to return a new object altogether.

00:03:26.310 --> 00:03:32.420
Sandy,

00:03:32.420 --> 00:03:36.650
an age 48 her for simplicity.

00:03:36.650 --> 00:03:41.550
Let's make it 30 so that the some of these two numbers would be 100.

00:03:41.550 --> 00:03:46.660
This will create a new object,

00:03:46.660 --> 00:03:48.730
correct,

00:03:48.730 --> 00:03:50.160
and the violence affects,

00:03:50.160 --> 00:03:52.050
and why will be set to 70 and 30.

00:03:52.050 --> 00:03:57.140
We need to collect whatever is being written from this method.

00:03:57.140 --> 00:03:58.560
Let's do that.

00:03:58.560 --> 00:04:06.860
That's coming down these two lines again.

00:04:06.860 --> 00:04:14.030
Car object Dart Hard to Britain.

00:04:14.030 --> 00:04:14.740
Example.

00:04:14.740 --> 00:04:20.890
Now we could a the right mats.

00:04:20.890 --> 00:04:30.890
New object equals this and new object Dark edition blah,

00:04:30.890 --> 00:04:31.070
blah,

00:04:31.070 --> 00:04:40.960
blah The system daughter Our dog print Ellen He could ever write it this way are simply cut

00:04:40.960 --> 00:04:51.650
off all this stuff and simply can just do start our dot print Helen,

00:04:51.650 --> 00:04:55.770
you can simply just use the door for operator right here.

00:04:55.770 --> 00:05:02.670
That said the file and run the program.

00:05:02.670 --> 00:05:10.330
The result should be 100.

00:05:10.330 --> 00:05:13.650
It iss great.

00:05:13.650 --> 00:05:16.320
By the way,

00:05:16.320 --> 00:05:18.910
we haven't talked about this dot operator,

00:05:18.910 --> 00:05:20.450
but by no,

00:05:20.450 --> 00:05:22.670
I'm sure you must have understood what it is doing.

00:05:22.670 --> 00:05:25.040
It will let us access the instance.

00:05:25.040 --> 00:05:27.430
Members be it instance.

00:05:27.430 --> 00:05:29.010
Variables are instance.

00:05:29.010 --> 00:05:32.840
Methods also weaken ascend some values.

00:05:32.840 --> 00:05:34.090
For example,

00:05:34.090 --> 00:05:37.880
in here using the daughter operator,

00:05:37.880 --> 00:05:42.550
we got control of that particular field and we're saying their value.

00:05:42.550 --> 00:05:45.840
All right,

00:05:45.840 --> 00:05:47.200
See you in my next radio.

00:05:47.200 --> 00:05:51.710
We're gonna talk about passed by while you and possible reference.

00:05:51.710 --> 00:05:55.750
This is one of the most confusing terms you often hear,

00:05:55.750 --> 00:05:59.450
especially if you have a bag runoff C language.

00:05:59.450 --> 00:06:02.600
Then you're the one to get confused on that.

00:06:02.600 --> 00:06:05.600
Let me help you get clarity on it.

00:06:05.600 --> 00:06:07.170
See you in my next video.

