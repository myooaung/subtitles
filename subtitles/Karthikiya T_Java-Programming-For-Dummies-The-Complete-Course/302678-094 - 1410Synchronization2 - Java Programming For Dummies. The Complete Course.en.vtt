WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.480
All right,

00:00:01.480 --> 00:00:02.390
let's continue.

00:00:02.390 --> 00:00:06.760
Have created another project with the name multi threading too.

00:00:06.760 --> 00:00:13.850
And I'm continuing writing my examples in that you might want to import this project to

00:00:13.850 --> 00:00:22.690
follow along have created this file and it has the code from our previous examples.

00:00:22.690 --> 00:00:28.650
All I'm doing here is have created couple of threats and I want them to run simultaneously

00:00:28.650 --> 00:00:28.650
.

00:00:28.650 --> 00:00:37.350
We also have created an object off the sink example which we're going to use pretty soon.

00:00:37.350 --> 00:00:39.020
Currently,

00:00:39.020 --> 00:00:40.070
this glass is empty,

00:00:40.070 --> 00:00:44.700
but I'm going to introduce a method that will cause the problem off thread,

00:00:44.700 --> 00:00:45.550
indifference.

00:00:45.550 --> 00:00:52.290
So what I want to do here is I want to take the string as an argument and print each one

00:00:52.290 --> 00:01:00.960
off those characters in that string with the delay off one second so public wide display

00:01:00.960 --> 00:01:23.850
string str and I want to use four loop to look through all those characters.

00:01:23.850 --> 00:01:37.190
I'm going to you sis out care at the index I This will print all the characters one by one

00:01:37.190 --> 00:01:37.190
,

00:01:37.190 --> 00:01:40.150
separated with the new land character.

00:01:40.150 --> 00:01:52.850
But we want to have a delay thread dot sleep and I want to delay it by one second her 1000

00:01:52.850 --> 00:01:53.790
milliseconds.

00:01:53.790 --> 00:01:56.180
We need to have a try.

00:01:56.180 --> 00:02:01.350
Catch block Colette's years,

00:02:01.350 --> 00:02:07.130
Brent instead of print held in and using this object,

00:02:07.130 --> 00:02:10.990
I'm going to call that mattered from dread.

00:02:10.990 --> 00:02:11.790
T one.

00:02:11.790 --> 00:02:15.160
I'm passing the argument apple,

00:02:15.160 --> 00:02:20.250
and I'm going to have the exact same statement,

00:02:20.250 --> 00:02:21.800
even in thread,

00:02:21.800 --> 00:02:22.610
too,

00:02:22.610 --> 00:02:24.450
but with a different argument.

00:02:24.450 --> 00:02:26.400
Banana.

00:02:26.400 --> 00:02:31.950
Now can you precisely guess on the or put off this program?

00:02:31.950 --> 00:02:36.360
We may get Apple Banana are but an apple.

00:02:36.360 --> 00:02:38.110
But that's not the case.

00:02:38.110 --> 00:02:42.840
Nobody in this planet Earth can predict the or put off this.

00:02:42.840 --> 00:02:48.440
Let's run the program and see the crazy output in this programme.

00:02:48.440 --> 00:02:51.750
We got WBAP in hell.

00:02:51.750 --> 00:02:54.800
We got B A P a.

00:02:54.800 --> 00:02:55.750
Etcetera.

00:02:55.750 --> 00:02:58.250
You don't find this Warren dictionary.

00:02:58.250 --> 00:02:59.190
No,

00:02:59.190 --> 00:03:00.730
let's run the program once again.

00:03:00.730 --> 00:03:03.030
You may not see the same result,

00:03:03.030 --> 00:03:15.220
so this time it's a B,

00:03:15.220 --> 00:03:17.460
a p p and nail whatever.

00:03:17.460 --> 00:03:19.060
So every time you run,

00:03:19.060 --> 00:03:21.740
the result is going to be different.

00:03:21.740 --> 00:03:27.320
But the point that I want to make here is it's very inconsistent and we need to solve this

00:03:27.320 --> 00:03:27.960
problem,

00:03:27.960 --> 00:03:35.820
and this is caused due to simultaneous access off this section off good by more than one

00:03:35.820 --> 00:03:36.250
thread.

00:03:36.250 --> 00:03:40.820
Now let's see how we can make use off the locking mechanism.

00:03:40.820 --> 00:03:46.080
Every object is going to have a lock on its own.

00:03:46.080 --> 00:03:52.910
And any time only one threat can acquire the clock to enter inside that lockable section,

00:03:52.910 --> 00:03:56.930
we want to make this section lockable.

00:03:56.930 --> 00:04:03.890
This is like the private room or the changing room in our example.

00:04:03.890 --> 00:04:06.650
So let's do so.

00:04:06.650 --> 00:04:08.140
And for that purpose,

00:04:08.140 --> 00:04:10.790
I'm going to have to create the lock.

00:04:10.790 --> 00:04:14.960
And the way I do it is like,

00:04:14.960 --> 00:04:15.650
Sil,

00:04:15.650 --> 00:04:20.380
I'm going to use interface lock new.

00:04:20.380 --> 00:04:31.250
I'm going to say green trend lock and I'll do control shift Oh,

00:04:31.250 --> 00:04:33.470
to import the class.

00:04:33.470 --> 00:04:34.840
So basically,

00:04:34.840 --> 00:04:43.750
this look is an interface and the implementation off that lock interface is done in here.

00:04:43.750 --> 00:04:47.880
So we have created an instance off this class,

00:04:47.880 --> 00:04:51.650
but we have the interface as the reference type.

00:04:51.650 --> 00:04:52.500
Now,

00:04:52.500 --> 00:04:57.150
what we want to do with this the poster that's going to enter inside this section,

00:04:57.150 --> 00:04:59.950
we want the threat to acquire that lock.

00:04:59.950 --> 00:05:06.820
So I'm going to do log dot lock this convening.

00:05:06.820 --> 00:05:10.230
And once we're done,

00:05:10.230 --> 00:05:14.100
once that thread executes all instructions induct,

00:05:14.100 --> 00:05:17.750
we're so log dot Unlock.

00:05:17.750 --> 00:05:19.990
So now with this code,

00:05:19.990 --> 00:05:25.050
the first red that's going to enter inside this section is going to acquire that lock.

00:05:25.050 --> 00:05:28.250
Do whatever worries instructed in here,

00:05:28.250 --> 00:05:31.610
and it's going to release that Locke for another threat to enter.

00:05:31.610 --> 00:05:32.430
Inside this,

00:05:32.430 --> 00:05:39.970
let's assume that Thread Scheduler decided to give opportunity to the one first So t one

00:05:39.970 --> 00:05:41.250
will entrance at this,

00:05:41.250 --> 00:05:42.440
acquire the lock,

00:05:42.440 --> 00:05:43.510
perform Ali's.

00:05:43.510 --> 00:05:47.070
And while Threat T one is executing these instructions,

00:05:47.070 --> 00:05:51.090
Tito will be in a state called Waiting.

00:05:51.090 --> 00:05:56.150
It's waiting for 21 to release the lock.

00:05:56.150 --> 00:05:57.480
Meanwhile,

00:05:57.480 --> 00:06:00.080
Threat T one pernicious all these instructions.

00:06:00.080 --> 00:06:06.270
And when it comes across with this instructions going to release that lock and so is

00:06:06.270 --> 00:06:09.360
available for threat to to grab the clock,

00:06:09.360 --> 00:06:15.850
it goes on the same day for all the simultaneous thread for this section off court.

00:06:15.850 --> 00:06:20.550
So at a time,

00:06:20.550 --> 00:06:26.190
only one thread is eggs during that section off court and this shirts all our problem.

00:06:26.190 --> 00:06:34.280
So we should rather see apple banana or been an apple whichever thread gets executed first

00:06:34.280 --> 00:06:34.280
.

00:06:34.280 --> 00:06:46.060
So thread Scheduler gave opportunity to threat the one first and now threat.

00:06:46.060 --> 00:06:48.090
Tito got opportunity in here.

00:06:48.090 --> 00:06:54.450
Then we're done eggs getting basically this is a bad practice off code.

00:06:54.450 --> 00:06:59.840
We want this unlock statement to be reciting inside the finally block because there could

00:06:59.840 --> 00:07:06.520
be a possibility off having an exception in these lines said to to get it off all that kind

00:07:06.520 --> 00:07:07.270
of mess,

00:07:07.270 --> 00:07:09.920
having to deal with locking,

00:07:09.920 --> 00:07:12.760
unlocking and creating an object off lock,

00:07:12.760 --> 00:07:13.500
etcetera.

00:07:13.500 --> 00:07:20.600
You can get rid off everything in here like so instead,

00:07:20.600 --> 00:07:24.000
you're going to use the world synchronized.

00:07:24.000 --> 00:07:26.330
This will make this entire code inside.

00:07:26.330 --> 00:07:30.990
This mattered a private section and not to be confused private,

00:07:30.990 --> 00:07:33.910
as in the private room example that were talked about.

00:07:33.910 --> 00:07:37.080
I'm not talking about the access person for private.

00:07:37.080 --> 00:07:39.250
Please don't get confused there.

00:07:39.250 --> 00:07:43.950
Now let's run the program and expect a consistent result.

00:07:43.950 --> 00:07:47.240
It's apple,

00:07:47.240 --> 00:07:55.700
and then it will be banana pretty well and good.

