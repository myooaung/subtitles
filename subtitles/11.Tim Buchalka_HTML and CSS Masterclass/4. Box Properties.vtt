WEBVTT
1
00:00:05.200 --> 00:00:10.370
In this lecture we will learn about several box properties that CSF provides us to allow us to modify

2
00:00:10.370 --> 00:00:18.340
an elements box the combination of its content padding border and margins the box sizing property allows

3
00:00:18.340 --> 00:00:23.260
us to specify whether or not padding and borders should affect the elements width and height of value

4
00:00:23.260 --> 00:00:28.030
of content box means that the full height and width will be the height and width values plus the values

5
00:00:28.030 --> 00:00:29.760
of the borders and padding.

6
00:00:29.980 --> 00:00:35.770
Note that content box is also the default value for this example lets first add a paragraph element

7
00:00:35.770 --> 00:00:41.990
or some example text to our Web page then we will add an opening and closing style tag to our code.

8
00:00:42.130 --> 00:00:47.120
We will use the paragraph element selector and give our element a background color of blue.

9
00:00:47.230 --> 00:00:51.560
We will also use the box sizing property and give it a value of content box.

10
00:00:51.640 --> 00:00:56.970
We will give our element a height and width of 100 pixels and a petting value of 20 pixels.

11
00:00:57.220 --> 00:01:02.200
Then we will go to the web browser and run our code.

12
00:01:02.250 --> 00:01:03.600
Let's jump back to the editor

13
00:01:06.970 --> 00:01:11.640
of value of border box means that the box will have the specified width and height regardless of borders

14
00:01:11.640 --> 00:01:13.080
and padding.

15
00:01:13.220 --> 00:01:16.940
Let's give the box sizing property a value of border box and then run our code

16
00:01:20.810 --> 00:01:23.820
then we will go back to the editor and look at another example.

17
00:01:26.880 --> 00:01:33.030
We can use the min with Max with min height and max height properties to specify the minimum or maximum

18
00:01:33.030 --> 00:01:34.980
height and width for elements.

19
00:01:35.220 --> 00:01:40.020
If these values are specified the web page will automatically rescale our element to meet the specified

20
00:01:40.020 --> 00:01:46.200
values domain with property specifies the minimum with for an element that prevents the specified with

21
00:01:46.200 --> 00:01:50.140
aliment from being less than the value we assign the men with property.

22
00:01:50.160 --> 00:01:56.130
Let's build on the current example and give our element of menwith of 120 pixels even though we gave

23
00:01:56.130 --> 00:02:02.700
our aliment a width of 100 pixels the main with is 120 pixels so our element will display at a width

24
00:02:02.700 --> 00:02:04.850
of 120 pixels.

25
00:02:04.860 --> 00:02:06.840
Let's go to the web browser and run our code

26
00:02:11.540 --> 00:02:13.000
then we will jump back to the editor

27
00:02:15.920 --> 00:02:21.320
the max with property lets us specify the maximum with for an element if the element goes past this

28
00:02:21.320 --> 00:02:28.370
with it will be rescaled to fit inside of the specified Max with for example a text element that overflows

29
00:02:28.370 --> 00:02:34.160
past this with will force text exceeding a specified Max way to go to the next line so that the text

30
00:02:34.160 --> 00:02:36.870
does not go past the specified max width.

31
00:02:37.220 --> 00:02:41.840
Then we will use the max with property and give it a value of 100 pixels.

32
00:02:41.840 --> 00:02:49.270
Then we will run our code in the web browser as you can see our paragraph element was resized since

33
00:02:49.270 --> 00:02:51.940
we gave it a max width of 100 pixels.

34
00:02:51.940 --> 00:02:59.760
Let's jump back to the editor for the next examples we will add two developments to our Web page.

35
00:02:59.810 --> 00:03:05.690
We will give the first different idea of Div 1 and the second give an idea of Div 2 will give both divs

36
00:03:05.690 --> 00:03:08.830
a heightened with the 50 pixels and a background color of red.

37
00:03:09.080 --> 00:03:13.930
We will give our second div a position of relative and aleft value of 300 pixels.

38
00:03:13.940 --> 00:03:19.670
This will allow us to clearly see both gives the Monheit properties specifies the minimum height for

39
00:03:19.670 --> 00:03:20.850
an element.

40
00:03:20.930 --> 00:03:26.150
It prevents the specified elements height from being less than the value we assign the min height property.

41
00:03:26.150 --> 00:03:30.360
Let's give our first div a min height property with a value of 100 pixels.

42
00:03:30.530 --> 00:03:32.400
Then we will run our code in the browser.

43
00:03:34.590 --> 00:03:40.710
As you can see our first def has a height of 100 pixels even though we give both divs a height of 50

44
00:03:40.710 --> 00:03:41.580
pixels.

45
00:03:41.610 --> 00:03:45.450
We specify that our first divs minimum height is 100 pixels.

46
00:03:45.480 --> 00:03:48.110
Let's go back to the editor and look at another example.

47
00:03:50.450 --> 00:03:53.910
The max height property lets us specify the maximum height for an element.

48
00:03:54.200 --> 00:03:58.810
If an element height exceeds the specified max height the element will overflow.

49
00:03:59.030 --> 00:04:03.290
But we can specify an overflow behavior by adding the overflow property.

50
00:04:03.290 --> 00:04:10.570
Let's give our div one element the max height of 10 pixels and then run our code in the browser as you

51
00:04:10.570 --> 00:04:16.480
can see our first div has a height of 10 pixels even though both divs were given a height of 50 pixels

52
00:04:16.870 --> 00:04:20.420
we specify the max height of our first to be 10 pixels.

53
00:04:20.470 --> 00:04:28.100
Let's jump back to the editor for the following examples let's go back to using a paragraph element.

54
00:04:28.440 --> 00:04:33.800
The box Shatto property let's say had a box Shatto to our elements to make this element look right.

55
00:04:33.840 --> 00:04:39.330
We want to add a border around our element as the box shadow will be in the shape of a rectangular box.

56
00:04:39.330 --> 00:04:44.520
Let's give our element a box shadow with a horizontal offset of 5 pixels and a vertical offset of 10

57
00:04:44.520 --> 00:04:45.530
pixels.

58
00:04:45.660 --> 00:04:53.110
Then we will run our code in the web browser as you can see there is now a box shadow behind our element.

59
00:04:53.380 --> 00:05:01.800
Let's go back to the editor the box Shatto property as to required values horizontal offset and vertical

60
00:05:01.800 --> 00:05:02.790
offset.

61
00:05:02.790 --> 00:05:06.010
There are several optional values for the box Shatto property.

62
00:05:06.180 --> 00:05:08.390
We can add a blurb to a box châteaux.

63
00:05:08.520 --> 00:05:11.590
The higher the blur value the more it will be blurred.

64
00:05:11.610 --> 00:05:17.220
Let's add a blur of five pixels to a drop shadow then we will go to the web browser and run our code.

65
00:05:19.060 --> 00:05:22.640
As you can see our box shadow now has a 5 pixel blar.

66
00:05:22.960 --> 00:05:26.460
Let's jump back to the editor.

67
00:05:26.520 --> 00:05:31.950
We can also add a spread to Harbach châteaux the higher the value of the spread the larger our shadow

68
00:05:31.950 --> 00:05:32.880
will be.

69
00:05:32.970 --> 00:05:40.110
We'll give our box shadow a spread of 12 pixels and then run our code as you can see our back shadow

70
00:05:40.140 --> 00:05:43.380
increased in size since we gave it a positive spread value.

71
00:05:43.380 --> 00:05:49.470
Let's go back to the editor and negative value will decrease the size of the shadow.

72
00:05:49.650 --> 00:05:56.630
We will give our box shadow a spread of negative 2 pixels and then run our code as you can see our back

73
00:05:56.630 --> 00:05:59.700
Shadow got smaller since we gave it a negative spread.

74
00:05:59.720 --> 00:06:02.670
Let's go back to the editor.

75
00:06:02.710 --> 00:06:07.230
We also have the option of getting a color you are shadowed by supplying a color value.

76
00:06:07.240 --> 00:06:14.750
Let's give our box shadow a color of purple then we will run our code as you can see our BOQ shadow

77
00:06:14.750 --> 00:06:16.260
is now the color purple.

78
00:06:16.350 --> 00:06:19.080
We will go back to the editor and look at another example.

79
00:06:20.870 --> 00:06:25.830
Adding an inset value makes no shadow an internal shadow as opposed to an external shadow.

80
00:06:26.150 --> 00:06:32.990
Let's give our element in insets shadow and then run our code as you can see the shadow on our element

81
00:06:32.990 --> 00:06:35.370
is now internal as opposed to external.

82
00:06:35.630 --> 00:06:38.810
Let's go back to the editor.

83
00:06:38.870 --> 00:06:43.610
We can also add multiple shadows by separating the group of values for each shadow by a comma.

84
00:06:43.940 --> 00:06:49.490
Let's say another box Shatto to our element with a horizontal offset of 5 pixels a vertical offset of

85
00:06:49.490 --> 00:06:57.500
10 pixels a blur of 5 pixels a spread of negative 2 pixels and the color blue then we will run our code

86
00:06:57.500 --> 00:06:58.460
in the browser.

87
00:06:59.950 --> 00:07:05.590
You will notice that the second box Shatto that we added to our element is displayed in the next lecture.

88
00:07:05.590 --> 00:07:08.920
We will learn about the outline properties that CSSA gives us access to.
