1
00:00:05,230 --> 00:00:10,630
In this lecture we will look at the many properties that CSSA gives us access to in order to style text

2
00:00:11,140 --> 00:00:15,020
transforming text means to change its capitalization in some way.

3
00:00:15,160 --> 00:00:22,930
CSSA gives us the text transform property which can have one of several values non capitalize uppercase

4
00:00:23,110 --> 00:00:30,050
lowercase initial and inherit to see these examples of how we can modify text using CSSA.

5
00:00:30,430 --> 00:00:35,920
Let's first add a paragraph element with some example text to a webpage of value of non-means that the

6
00:00:35,920 --> 00:00:39,370
text capitalization will not be modified in any way.

7
00:00:39,400 --> 00:00:44,290
Let's say it an opening and closing style tagged to a web page and give our paragraph the text transform

8
00:00:44,290 --> 00:00:48,540
property with a value of None then we will go to the web browser and run our code

9
00:00:51,430 --> 00:00:57,340
as you can see no special styling was applied to our text since we assigned the text to transform property

10
00:00:57,340 --> 00:00:58,440
of value of None.

11
00:00:58,720 --> 00:01:05,530
Let's jump back to the editor of value of capitalized will make the first letter of each word capital.

12
00:01:05,640 --> 00:01:11,070
We will give our text the text transfer value of capitalized and then run our code in the web browser

13
00:01:13,100 --> 00:01:17,240
as you can see the first letter in each word is capitalized.

14
00:01:17,240 --> 00:01:24,590
Let's jump back to the editor of value of uppercase will make all of the letters in a text element uppercase.

15
00:01:24,760 --> 00:01:29,770
We will change the text transform property to a value of uppercase and then go to the web browser and

16
00:01:29,770 --> 00:01:36,700
run our code as you can see all of the letters in our text are now uppercase.

17
00:01:36,990 --> 00:01:45,260
Let's jump back to the editor of value of lowercase to make all of the letters in a text element lowercase.

18
00:01:45,300 --> 00:01:49,700
Let's change the text transfer value to lowercase and then run our code in the browser.

19
00:01:51,430 --> 00:01:54,120
All of the letters in our text are now lowercase.

20
00:01:54,130 --> 00:01:56,730
Let's go back to the editor and look at another example.

21
00:01:58,660 --> 00:02:03,910
A value of initial will change transform text back to its original state before it was modified by any

22
00:02:03,910 --> 00:02:05,110
transformations.

23
00:02:05,110 --> 00:02:10,330
We will assign the text transform property of value of initial and then run our code in the browser.

24
00:02:12,370 --> 00:02:18,310
As you can see our text is now back to how we typed it as the content for a paragraph element.

25
00:02:18,310 --> 00:02:20,340
Next let's jump back to the editor.

26
00:02:20,690 --> 00:02:25,750
A value of inherit will make the text inherit the text transferred value of its parent element.

27
00:02:25,750 --> 00:02:31,990
For example if the parent element has a text transform value of uppercase the child element will inherit

28
00:02:31,990 --> 00:02:33,490
that value as well.

29
00:02:33,490 --> 00:02:38,560
Let's say at a parent development around our current paragraph element and give it a text transform

30
00:02:38,560 --> 00:02:44,530
value of uppercase We will also add a style to our code specifying the text transform of the text on

31
00:02:44,530 --> 00:02:46,610
a web page to be set to lowercase.

32
00:02:46,720 --> 00:02:51,400
Then we will give our child text element the value of inherit which will make it inherit the parent

33
00:02:51,400 --> 00:02:54,030
elements uppercase text transform.

34
00:02:54,040 --> 00:02:59,020
If we did not use the text to transform value of inherit then our text would be lowercase due to the

35
00:02:59,020 --> 00:03:01,000
style that we just defined.

36
00:03:01,000 --> 00:03:06,910
However due to the text transform value of inherit it will inherit the text transfer value of its parent

37
00:03:06,910 --> 00:03:07,560
div.

38
00:03:07,570 --> 00:03:15,170
We will go to the web browser and run our code as you can see the child element has inherited the text

39
00:03:15,170 --> 00:03:20,350
transfer value of its parent causing all of the letters in the text to become uppercase.

40
00:03:20,360 --> 00:03:25,180
Let's jump back to the editor for the next examples.

41
00:03:25,180 --> 00:03:30,790
We will put our code back to the way we had it before with one paragraph element on our Web page at

42
00:03:30,790 --> 00:03:34,120
an opening and closing tag where we will add our style code.

43
00:03:34,330 --> 00:03:40,870
The text decoration property allows you to underline over line and cross out text giving or text declaration

44
00:03:40,870 --> 00:03:44,200
property a value of underline underlines the text.

45
00:03:44,560 --> 00:03:50,110
Let's say I add the text declaration property to our style code and assign it a value of underlying.

46
00:03:50,260 --> 00:03:57,420
Then we will go to the web browser and run our code as you can see our text is now underlined.

47
00:03:57,630 --> 00:04:04,860
Let's jump back to the editor of value of Oberlin will draw a line above our text.

48
00:04:04,970 --> 00:04:09,980
We will give the text decoration property of value of overlying and then run our code in the web browser

49
00:04:12,420 --> 00:04:14,700
text now has an over line above it.

50
00:04:14,910 --> 00:04:22,260
Let's go back to the editor of value of line through will draw a cross out through the text.

51
00:04:22,320 --> 00:04:29,460
We will change the text decoration to line through and then run our code in the web browser as you can

52
00:04:29,460 --> 00:04:31,740
see there is never a line through our text.

53
00:04:31,920 --> 00:04:38,790
Then we will go back to the editor to get additional customization over text decoration.

54
00:04:38,860 --> 00:04:46,000
We can use the more detailed properties of text decoration line text decoration color and text decoration

55
00:04:46,000 --> 00:04:49,350
style using the text decoration line property.

56
00:04:49,360 --> 00:04:51,970
We can combine multiple keyword values.

57
00:04:52,030 --> 00:04:55,520
For example we can both underline an overlying R-Tex.

58
00:04:55,870 --> 00:05:02,560
Let's use the text decoration line property and assign it a value of over line and also a value of underline.

59
00:05:02,740 --> 00:05:10,670
Then we will go to the web browser and run our code as you can see the text is now over lines and underlined.

60
00:05:10,750 --> 00:05:13,890
Let's jump back to the editor.

61
00:05:13,930 --> 00:05:19,160
We can also use the text decoration color property to assign a color to a text decoration.

62
00:05:19,210 --> 00:05:22,230
All of the color types we learned about previously apply here.

63
00:05:22,240 --> 00:05:27,140
We can specify a color name hex color or G.B. color etc..

64
00:05:27,280 --> 00:05:32,830
For this example we will use the text decoration color property to make or underline an overlying the

65
00:05:32,830 --> 00:05:33,780
color blue.

66
00:05:34,030 --> 00:05:42,460
Let's go to the web browser and run our code as you can see the text decorations are overlong and underline

67
00:05:42,790 --> 00:05:50,580
are now the color blue then we will go back to the editor the text decoration style property is used

68
00:05:50,580 --> 00:05:59,820
to specify the style of the line we can specify a value of solid double dashed dotted or wavy a value

69
00:05:59,820 --> 00:06:02,080
of solid will draw a single line.

70
00:06:02,100 --> 00:06:06,270
Let's see the text decoration style property and give it a value of solid.

71
00:06:06,360 --> 00:06:11,030
Then we will go to the web browser and run our code.

72
00:06:11,040 --> 00:06:15,640
Let's jump back to the editor of value of double will draw a double line.

73
00:06:15,690 --> 00:06:20,910
Let's change the text decoration style property to a value of double and then run our code in the web

74
00:06:20,910 --> 00:06:28,110
browser as you can see both the overlying and underline are now double lines.

75
00:06:28,370 --> 00:06:34,870
Let's jump back to the editor of value of dotted will draw a dotted line.

76
00:06:34,870 --> 00:06:41,900
Let's change the text decoration style to a value of dotted and then run our code as you can see the

77
00:06:41,900 --> 00:06:48,930
overlay on an underline are now dotted then we will go back to the editor of value of Dasht will draw

78
00:06:48,930 --> 00:06:49,980
a dashed line.

79
00:06:50,160 --> 00:06:55,440
We will change the text decoration style to a value of Dasht and then run our code in the browser.

80
00:06:57,090 --> 00:07:00,570
As you can see the overlying and underline are now dashed.

81
00:07:00,570 --> 00:07:03,420
Let's go back to the editor and look at another example.

82
00:07:04,890 --> 00:07:07,600
A value of wavy will draw a wavy line.

83
00:07:07,770 --> 00:07:13,330
We will change our text decoration style to a value of wavy and then run our code in the browser.

84
00:07:15,730 --> 00:07:19,560
As you can see the on and underline are now wavy.

85
00:07:19,570 --> 00:07:22,570
Let's go back to the editor.

86
00:07:22,660 --> 00:07:27,740
The real fun comes in combining these three properties to get an interesting resulting line.

87
00:07:27,790 --> 00:07:33,040
You are probably familiar with the red wavy underline that some text editors use to highlight misspelled

88
00:07:33,040 --> 00:07:35,860
words to replicate this effect.

89
00:07:35,890 --> 00:07:41,800
Let's give our paragraph element the text decoration line property with a value of underline a text

90
00:07:41,800 --> 00:07:47,710
decoration color property of red and a text decoration style property of wavy.

91
00:07:47,890 --> 00:07:50,340
Then we will go to the web browser and run our code.

92
00:07:52,140 --> 00:07:57,450
As you can see our text is now underlined with the red wavy line that we just created.

93
00:07:57,450 --> 00:08:00,840
Let's go back to the editor.

94
00:08:01,010 --> 00:08:08,050
We can you CSSA is text indent property to indent the first line in a paragraph of text.

95
00:08:08,070 --> 00:08:13,710
Let's give our paragraph elements a multi-line text content then we will give our element a text indent

96
00:08:13,710 --> 00:08:15,650
value of thirty pixels.

97
00:08:15,690 --> 00:08:22,750
Let's run our code in the web browser as you can see the first line of our text is indented.

98
00:08:22,820 --> 00:08:26,420
Then we will go back to the editor.

99
00:08:26,490 --> 00:08:31,860
We can also use the letter spacing property to control how much space is between each of the letters

100
00:08:31,860 --> 00:08:33,130
in a text element.

101
00:08:33,450 --> 00:08:39,100
Let's use the letter spacing property to add a space of five pixels between each letter of R-Tex.

102
00:08:39,510 --> 00:08:42,750
Then we will go to the web browser and run the code to see the result.

103
00:08:44,640 --> 00:08:51,770
Let's jump back to the editor a positive value for the letter spacing property will increase the spacing

104
00:08:51,770 --> 00:08:58,190
between characters as we saw in the last example when we gave our text a letter spacing value of 5 pixels

105
00:08:58,490 --> 00:09:03,920
a negative value for the letter spacing property will decrease the spacing between characters.

106
00:09:03,920 --> 00:09:09,560
Let's change the letter spacing property value to negative 5 pixels and then run our code in the web

107
00:09:09,560 --> 00:09:13,090
browser as you can see.

108
00:09:13,170 --> 00:09:16,830
This has greatly decreased the space between the letters and R-Tex.

109
00:09:17,220 --> 00:09:22,140
In the next lecture we will learn about basic text effects we can create using CSF.
