WEBVTT
1
00:00:05.210 --> 00:00:10.310
In this lecture we will learn about the concept of debugging while programming there are going to be

2
00:00:10.310 --> 00:00:13.460
times when your code doesn't work the way that you want it to.

3
00:00:13.490 --> 00:00:18.170
Perhaps things on your web page simply won't display properly or maybe things aren't working the way

4
00:00:18.170 --> 00:00:19.230
that you intended.

5
00:00:19.370 --> 00:00:23.200
The process of finding and fixing errors in your code is called debugging.

6
00:00:23.450 --> 00:00:27.530
Debugging is one of the most important skills that a developer can have.

7
00:00:27.530 --> 00:00:30.840
There are several strategies that you can use to debug your code.

8
00:00:30.860 --> 00:00:36.230
Chrome has a built in set of dev tools that you can use to inspect and debug code on your web page.

9
00:00:36.230 --> 00:00:40.970
These tools allow us to inspect our HDMI elements and diagnose what is wrong with our code.

10
00:00:41.090 --> 00:00:45.510
When you first start out programming debugging may seem like a daunting process.

11
00:00:45.560 --> 00:00:50.990
However as you build more experience you will quickly realize how valuable debugging is and how becoming

12
00:00:50.990 --> 00:00:53.730
skilled at debugging can save you development time.

13
00:00:54.020 --> 00:01:00.710
There are two main types of errors in HVM all syntax errors and logic errors a syntax error means that

14
00:01:00.710 --> 00:01:03.160
you typed something wrong as a result.

15
00:01:03.260 --> 00:01:06.090
The code may not work properly or may not work at all.

16
00:01:06.170 --> 00:01:11.510
In order for the browser to understand how to properly render a web page it is important that the syntax

17
00:01:11.510 --> 00:01:15.250
of each team be correct with proper closing tags where they belong.

18
00:01:15.260 --> 00:01:17.240
Proper attributes etc..

19
00:01:17.270 --> 00:01:22.860
Failing to adhere to all of the syntactical rules of HVM could lead to your web page working improperly

20
00:01:22.880 --> 00:01:28.970
and providing a bad user experience a logic ever means that the code runs fine and no error is thrown

21
00:01:29.030 --> 00:01:31.380
but that the code doesn't work the way that you intended.

22
00:01:31.460 --> 00:01:34.220
All of the code you wrote is syntactically valid.

23
00:01:34.220 --> 00:01:38.870
The issue is that you thought the logic you wrote worked one way but the web page is behaving in a way

24
00:01:38.870 --> 00:01:41.000
different that you didn't anticipate.

25
00:01:41.000 --> 00:01:45.830
Logic errors can be difficult to debug since there is no actual ever shown in the code so they can be

26
00:01:45.830 --> 00:01:48.200
hard to track down in the next lecture.

27
00:01:48.200 --> 00:01:50.530
We will look at common errors and how to fix them.
