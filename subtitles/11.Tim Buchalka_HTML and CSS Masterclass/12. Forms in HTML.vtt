WEBVTT
1
00:00:05.180 --> 00:00:09.530
In this lecture we will learn about forms and HVM L in HVM.

2
00:00:09.590 --> 00:00:12.000
A form is used to obtain user input.

3
00:00:12.260 --> 00:00:18.260
When you go to the doctor and fill out paperwork you're filling out form forms and HVM or a digital

4
00:00:18.260 --> 00:00:24.530
version of this type of form and involves giving the user input fields to submit data to forms and able

5
00:00:24.530 --> 00:00:30.470
to use it or send data to the Web site and are an important concept in user interaction with web pages.

6
00:00:30.470 --> 00:00:38.210
This data is then sent to a web server to form tagged defines a form in each female to start or form.

7
00:00:38.210 --> 00:00:40.250
We will define an opening and closing form.

8
00:00:40.250 --> 00:00:44.330
Tag HVM all forms are made up of form elements.

9
00:00:44.360 --> 00:00:49.310
The most important of these elements is the input element which is used for obtaining user input.

10
00:00:49.370 --> 00:00:54.850
The input tag has a type attribute which specifies the type of input that a user can give.

11
00:00:54.980 --> 00:01:00.680
If we want to add a text field we can assign the type attribute value of text then we will go to the

12
00:01:00.680 --> 00:01:07.370
web browser and run our code as you can see an input field is displayed on the web page that we can

13
00:01:07.370 --> 00:01:09.090
type text into.

14
00:01:09.110 --> 00:01:15.670
After that we will go back to the editor notice that the input element doesn't use a closing tag.

15
00:01:15.670 --> 00:01:19.190
Forms are a little bit different than your usual HVM element.

16
00:01:19.240 --> 00:01:25.180
You can add text directly anywhere in your form element without using paragraph tags or any other sort

17
00:01:25.180 --> 00:01:25.920
of tag.

18
00:01:26.140 --> 00:01:31.990
For example let's add some text to tell the user what to input in the input field we just created.

19
00:01:32.320 --> 00:01:33.250
We will add the text.

20
00:01:33.250 --> 00:01:37.820
Please enter your name so that the user knows to enter their name into the input field.

21
00:01:37.840 --> 00:01:42.550
Once we have typed this we will jump back to the web browser and run our code to see this text label

22
00:01:42.550 --> 00:01:47.780
added to our form's input field.

23
00:01:48.020 --> 00:01:50.810
Then we will go back to the editor and build on this example.

24
00:01:52.430 --> 00:01:57.650
In the current state of the code the label an input field will be on the same line with no space in

25
00:01:57.650 --> 00:02:00.810
between to add spacing between the two.

26
00:02:00.920 --> 00:02:07.650
We can use the non-breaking space character ampersand and be as p semi-colon.

27
00:02:07.700 --> 00:02:10.880
Then we will go to the web browser and run our code to see the result.

28
00:02:12.450 --> 00:02:17.240
Notice that there is now a horizontal space between our text and the input field.

29
00:02:17.400 --> 00:02:23.100
Then we will go back to the editor if we want to put the label in the input field on separate lines.

30
00:02:23.100 --> 00:02:26.880
We would use the break element to add a line break once we have done this.

31
00:02:26.880 --> 00:02:33.750
We will go back to the web browser and run this code as you can see the label is now on a different

32
00:02:33.750 --> 00:02:35.220
line than the input field.

33
00:02:35.520 --> 00:02:37.990
Let's go back to the editor.

34
00:02:38.000 --> 00:02:41.670
There are many types of input that can be specified in addition to text.

35
00:02:41.870 --> 00:02:46.340
Let's run through some examples so that you can see just how diverse your options of obtaining user

36
00:02:46.340 --> 00:02:48.780
input are when creating forms and each GMO.

37
00:02:49.010 --> 00:02:52.760
Let's remove our text from the form and just leave an input field.

38
00:02:52.760 --> 00:02:55.230
We will change the type of the input to color.

39
00:02:55.490 --> 00:03:00.080
Once we have done that we will go to the web browser and run our code.

40
00:03:00.160 --> 00:03:03.010
Notice that a color picker is now displayed in the browser.

41
00:03:03.280 --> 00:03:09.040
Clicking on the color picker will allow the user to select the color we will go back to the editor.

42
00:03:09.100 --> 00:03:11.560
Let's change the input type to range next.

43
00:03:11.740 --> 00:03:17.200
Then we will drag the file into our browser to run the code as you can see.

44
00:03:17.210 --> 00:03:20.930
This allows the user to use a slider to input information.

45
00:03:20.930 --> 00:03:27.300
Let's go back to the editor changing the input type to checkbox will display a checkbox and allow the

46
00:03:27.300 --> 00:03:30.970
user to toggle a checkbox checked or unchecked by clicking on it.

47
00:03:31.350 --> 00:03:37.230
Let's go to the browser and run the code we just wrote.

48
00:03:37.280 --> 00:03:44.420
Next we will go back to the editor if we change the type to file it will allow the user to choose a

49
00:03:44.420 --> 00:03:46.240
file on their computer.

50
00:03:46.250 --> 00:03:48.560
Let's run the code in the browser to see its effect.

51
00:03:52.860 --> 00:03:58.150
Then we will go back to the editor if we want to allow the user to enter a date.

52
00:03:58.180 --> 00:04:01.030
We could change the value of the type attribute to date.

53
00:04:01.180 --> 00:04:07.720
This will give the user interface to specify the date in an m m d d y y y y format.

54
00:04:07.840 --> 00:04:10.090
Let's go to the web browser and run this code.

55
00:04:14.450 --> 00:04:17.260
Then we will go back to the editor.

56
00:04:17.310 --> 00:04:21.480
There are several other types that we can use within the input element but let's take a look at some

57
00:04:21.480 --> 00:04:24.370
of the other elements we can use inside of a form.

58
00:04:24.600 --> 00:04:29.790
Most forms allow the user to click a button to submit information they H-G a M-L button element allows

59
00:04:29.790 --> 00:04:31.920
us to create a button for our form.

60
00:04:32.070 --> 00:04:36.900
We will add an opening and closing button tag with the text that will appear over the button between

61
00:04:36.900 --> 00:04:39.020
the opening and closing tags.

62
00:04:39.180 --> 00:04:41.510
Then we will go to the browser and run our code.

63
00:04:43.580 --> 00:04:48.140
The content of our element defines the text that will be displayed on our button.

64
00:04:48.140 --> 00:04:52.750
In this case we are specifying that we want the word button to be displayed on our button.

65
00:04:52.760 --> 00:04:58.880
Let's jump back to the editor buttons similar to input fields have a type attribute that specifies the

66
00:04:58.880 --> 00:04:59.980
type of button.

67
00:05:00.200 --> 00:05:03.710
There are three values that the type attribute for a button can have.

68
00:05:03.710 --> 00:05:09.310
They are button submit and reset button type is set to reset.

69
00:05:09.440 --> 00:05:13.520
Then it will reset all of the fields on a form back to their default state.

70
00:05:13.520 --> 00:05:18.410
If a button type is set to submit it will allow the user to submit the data that they have entered into

71
00:05:18.410 --> 00:05:20.880
the form to the web server of the Web site.

72
00:05:21.110 --> 00:05:26.420
If the button type is set to button it will allow the user to click a button and perform an action that

73
00:05:26.420 --> 00:05:28.820
we can specify in the On Click attribute.

74
00:05:28.820 --> 00:05:31.190
Let's first make our button a reset button.

75
00:05:31.400 --> 00:05:35.660
We will add an input element to our form and give it a type of text.

76
00:05:35.660 --> 00:05:40.760
Next we will add a type attribute to our button with a value of reset so that the button resets are

77
00:05:40.760 --> 00:05:42.780
text and put field when we click it.

78
00:05:42.920 --> 00:05:44.720
Time to see our code in action.

79
00:05:44.930 --> 00:05:46.640
Let's run our code in the web browser.

80
00:05:48.760 --> 00:05:54.020
Then we will type some text into our input field and click on our button to reset it next.

81
00:05:54.040 --> 00:06:00.600
Let's jump back to the editor buttons that have a type attribute of submit send information to the server.

82
00:06:00.600 --> 00:06:06.600
Since doing this requires some HP scripting that is outside the scope of this course we can also link

83
00:06:06.600 --> 00:06:08.910
buttons to their own custom functions.

84
00:06:09.000 --> 00:06:13.030
First let's change the value of the type attribute on our button to button.

85
00:06:13.080 --> 00:06:18.450
In this case we will display within the alert box whatever text the user is typed into our input field

86
00:06:18.780 --> 00:06:19.640
to do this.

87
00:06:19.710 --> 00:06:22.440
We will first give our input element and ID.

88
00:06:22.440 --> 00:06:27.650
Next we will add an opening and closing script tagged for each DML document outside of our form.

89
00:06:27.720 --> 00:06:32.070
The script tag is where we can embed javascript inside of each DML code.

90
00:06:32.070 --> 00:06:37.200
Then we will create a function that we can call on click of our form button the name of our function

91
00:06:37.200 --> 00:06:43.090
will be display message we will store the value of the user input in a variable name tax.

92
00:06:43.140 --> 00:06:48.810
Next we will call javascript's alert function and pass in the text variable that we just created.

93
00:06:48.810 --> 00:06:54.510
Finally we will add an on click attribute to our button tag with a value of a function call to the function

94
00:06:54.510 --> 00:06:55.560
we wrote.

95
00:06:55.770 --> 00:06:59.980
After that we will go to the web browser and run our code.

96
00:07:00.030 --> 00:07:05.520
Now when we typed text into our input field and then click a button you should see a window pop up with

97
00:07:05.520 --> 00:07:07.930
the text that has been typed into the input field.

98
00:07:08.280 --> 00:07:11.330
Let's go back to the editor.

99
00:07:11.410 --> 00:07:17.230
The next form element we are going to look at is a text area a text area is an input field that supports

100
00:07:17.230 --> 00:07:22.780
multi-line input and could have a specified width and height to create a text area element.

101
00:07:22.960 --> 00:07:26.370
We can add an opening and closing text area tagged to our code.

102
00:07:26.710 --> 00:07:32.650
Any text that we put between these tags will be default text that displays in our text area the row

103
00:07:32.650 --> 00:07:36.520
attribute specifies the number of lines that a text area can support.

104
00:07:36.520 --> 00:07:42.700
Assigning a value of 12 to a rose attribute will allow the text area to display up to 12 lines of text.

105
00:07:42.880 --> 00:07:45.800
The cauls attribute specifies a with for text area.

106
00:07:45.850 --> 00:07:50.980
Let's say I add a column attribute to our text area to define it's with thanks to the textarea element

107
00:07:51.040 --> 00:07:54.300
users can type multiple lines of input into our form.

108
00:07:54.310 --> 00:07:56.680
Let's run this code in the browser to see the result.

109
00:08:02.100 --> 00:08:08.180
Then we will jump back to the editor the select element is used to add a dropdown menu to our form to

110
00:08:08.180 --> 00:08:12.890
give the user the ability to select a dropdown option as input to start.

111
00:08:12.890 --> 00:08:18.530
We will add a select element to our form by putting an opening and closing select tag into our code.

112
00:08:18.530 --> 00:08:25.190
Next we will add options for the user to select to do so we can use the option element option elements

113
00:08:25.190 --> 00:08:30.770
have opening and closing tags in between these tags goes the text which will be the option that the

114
00:08:30.770 --> 00:08:33.010
user will see when they click on the dropdown.

115
00:08:33.290 --> 00:08:36.010
Let's say I add a few more options to our dropdown menu.

116
00:08:36.260 --> 00:08:41.930
Let's go to the web browser and run our code.

117
00:08:41.950 --> 00:08:44.890
Let's jump back to the editor.

118
00:08:45.100 --> 00:08:49.470
We can specify an option that we want to pre-select by using the selected attribute.

119
00:08:49.840 --> 00:08:55.600
We can also disable an option to make it unable to be selected by the user or disabled the menu option

120
00:08:55.600 --> 00:09:00.700
will also appear greyed out when the user clicks on the dropdown to display the options.

121
00:09:00.820 --> 00:09:07.300
Once we have typed all of that we can run our code in the browser as you can see our select menu has

122
00:09:07.300 --> 00:09:09.130
the three options we specified.

123
00:09:09.130 --> 00:09:16.900
Option 1 option 2 and Option 3 option 2 is selected and Option 3 is disabled since we used the selected

124
00:09:16.900 --> 00:09:23.470
attribute on option 2 and the disabled attribute on option 3 forms are an important concept and HVM

125
00:09:23.500 --> 00:09:30.070
L as they are how we obtain user input on web pages in this lecture we covered several form elements

126
00:09:30.070 --> 00:09:36.910
including input button text area and so that in the next lecture we will look at a recap of what we

127
00:09:36.910 --> 00:09:37.840
learned in this section.
