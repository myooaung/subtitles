WEBVTT
1
00:00:05.180 --> 00:00:10.400
In this lecture we will look at how we can change the font that our text is displayed in when working

2
00:00:10.400 --> 00:00:14.380
with text elements the font that we choose can be important.

3
00:00:14.450 --> 00:00:20.240
Not only are fonts aesthetically important but some web browsers may not support certain fonts.

4
00:00:20.300 --> 00:00:25.310
It is important that when building web pages we select fonts that will fit the design and look of our

5
00:00:25.310 --> 00:00:29.570
Web site and also be able to be displayed across browsers.

6
00:00:29.600 --> 00:00:36.440
The concept of a font family is important when programming in C Ss a font family is a set of fonts one

7
00:00:36.440 --> 00:00:37.570
after the other.

8
00:00:37.760 --> 00:00:44.030
If a browser does not support the first font it tries to use the second and so forth using a font family

9
00:00:44.030 --> 00:00:48.770
can be one way to help ensure that your web page will look good across all browsers.

10
00:00:48.770 --> 00:00:55.430
There are two types of font families of font family refers to specific font types such as Times New

11
00:00:55.430 --> 00:00:56.400
Roman.

12
00:00:56.600 --> 00:01:00.350
A generic family refers to a group of font families that look similar.

13
00:01:00.350 --> 00:01:07.360
It is usually best to specify multiple font families that you want an element to have separated by commas.

14
00:01:07.460 --> 00:01:12.800
The last family you specify should be a generic family in case none of the specific font families you

15
00:01:12.800 --> 00:01:15.060
specified are supported by the web browser.

16
00:01:15.350 --> 00:01:18.920
First let's say it a paragraph element to a web page.

17
00:01:19.130 --> 00:01:22.510
Then we will add an opening and closing style tag to our code.

18
00:01:22.580 --> 00:01:29.260
We will give our element of font family with fonts Times New Roman Arielle and sans serif.

19
00:01:29.450 --> 00:01:35.210
And this example Times New Roman is the first font we are specifying it is in quotes because there are

20
00:01:35.210 --> 00:01:37.640
spaces between the words.

21
00:01:37.640 --> 00:01:40.670
Next we have specified the RDL font family.

22
00:01:40.700 --> 00:01:44.440
Finally we specified a generic font sans serif.

23
00:01:44.540 --> 00:01:49.910
If the browser does not support Times New Roman or Arial the browser will search for a sans serif font

24
00:01:49.910 --> 00:01:50.760
to use.

25
00:01:50.990 --> 00:01:57.010
Let's jump to the web browser and run our code to see the font that is displayed in.

26
00:01:57.340 --> 00:02:04.450
Then we will go back to the editor and look at another example CSSA also gives us access to the font

27
00:02:04.450 --> 00:02:08.450
style property to specify a style for a font.

28
00:02:08.470 --> 00:02:13.040
The main feature of the font style properties that we can show are text in italic.

29
00:02:13.310 --> 00:02:18.140
Let's give our text a font style of italic and then run our code in the web browser.

30
00:02:19.990 --> 00:02:23.340
As you can see our text is displayed in italic.

31
00:02:23.620 --> 00:02:31.490
Let's go back to the editor other values that we can assign are normal and all Bleek normal is the text

32
00:02:31.490 --> 00:02:35.800
without any style and all Bleek is a style very similar to italic.

33
00:02:35.840 --> 00:02:43.130
Let's change the font style to normal and then run our code as you can see our text is displayed without

34
00:02:43.130 --> 00:02:45.290
any style applied to it as a result.

35
00:02:45.590 --> 00:02:48.080
Let's jump back to the editor.

36
00:02:48.250 --> 00:02:52.450
We will change our font style to old boutique and then run our code in the web browser.

37
00:02:53.660 --> 00:02:57.580
As you can see our text is displayed in all Bleek of font style.

38
00:02:57.590 --> 00:02:59.400
Very similar to italic.

39
00:02:59.420 --> 00:03:07.040
Let's jump back to the editor CSSA also gives us the font size property which allows us to size our

40
00:03:07.040 --> 00:03:07.700
fun.

41
00:03:08.000 --> 00:03:11.160
There are several ways that we can specify a font size.

42
00:03:11.210 --> 00:03:17.970
Let's run the gamut from smallest to largest to X X small value will make our text extra extra small.

43
00:03:18.200 --> 00:03:22.760
Let's give our text the font size property and give it a value of x x small.

44
00:03:22.760 --> 00:03:29.740
Then we will run our code in the web browser as you can see our text is displayed very small in the

45
00:03:29.740 --> 00:03:30.880
web browser.

46
00:03:30.880 --> 00:03:38.610
Let's jump back to the editor the next smallest size that we can assign our text is the size of x small

47
00:03:38.910 --> 00:03:46.680
meaning extra small we will change the font size to X small and then run our code in the browser our

48
00:03:46.680 --> 00:03:49.480
text is larger than before but still pretty small.

49
00:03:49.680 --> 00:03:56.640
Then we will go back to the editor we can assign our text the font size of small to make our text render

50
00:03:56.640 --> 00:03:57.450
small.

51
00:03:57.670 --> 00:04:00.020
We will give our text the font size of small.

52
00:04:00.280 --> 00:04:01.990
Let's run our code in the web browser

53
00:04:05.830 --> 00:04:09.180
then we will go back to the editor.

54
00:04:09.480 --> 00:04:14.090
We can give our text the font size of medium to render our text medium in the web browser.

55
00:04:14.130 --> 00:04:23.030
We will change our font size to medium and run our code then we will go back to the editor.

56
00:04:23.480 --> 00:04:26.150
We can give our text a font size of large as well.

57
00:04:26.420 --> 00:04:30.760
Let's change the font size to large and run our code.

58
00:04:30.840 --> 00:04:32.960
You will notice the difference in text size.

59
00:04:33.210 --> 00:04:35.960
Let's go back to the editor and look at another example.

60
00:04:38.060 --> 00:04:42.470
Giving our text the font size of x large will render our front extra large in the web browser.

61
00:04:42.510 --> 00:04:49.210
We will give our text the font size of x large and then run our code as you can see our text is now

62
00:04:49.210 --> 00:04:50.440
extra large.

63
00:04:50.440 --> 00:04:53.750
Let's go back to the editor.

64
00:04:53.820 --> 00:04:59.670
Finally the largest size that we can assign are text in this manner is a value of x x large or double

65
00:04:59.670 --> 00:05:00.890
extra large.

66
00:05:00.930 --> 00:05:07.650
Let's change the font size of our text to x x large and then run our code in the browser.

67
00:05:07.810 --> 00:05:14.020
You will notice the increase in text size then we will go back to the editor.

68
00:05:14.120 --> 00:05:17.480
We can also set a font size and a length such as pixels.

69
00:05:17.480 --> 00:05:21.980
For example let's give our text a font size of 25 pixels.

70
00:05:22.220 --> 00:05:25.760
Then we will run our code in the web browser to see the effect of this change.

71
00:05:27.480 --> 00:05:30.870
Let's jump back to the editor.

72
00:05:30.930 --> 00:05:35.390
In addition we can also specify a percentage to assign a font size to our text.

73
00:05:35.460 --> 00:05:40.530
We will change the font size to 50 percent and then run our code in the web browser to see the result.

74
00:05:42.580 --> 00:05:49.380
Let's go back to the editor the CSSA font weight property specifies how thick or thin a font should

75
00:05:49.380 --> 00:05:55.140
be displayed a value of bold will make our text thick we will change the font weight property to have

76
00:05:55.140 --> 00:06:02.780
a value of bold and then run our code as you can see the text is now bold on the web page.

77
00:06:02.800 --> 00:06:06.150
Let's jump back to the editor.

78
00:06:06.220 --> 00:06:12.670
We can also assign a number value to this property from 100 to 900 in increments of 100.

79
00:06:12.790 --> 00:06:24.910
So valid number values for this property are 100 200 300 400 500 600 700 800 and 900.

80
00:06:25.000 --> 00:06:27.360
Note that 400 is the same as normal.

81
00:06:27.520 --> 00:06:33.190
And 700 is the same as bold to see an example of assigning a number value for this property.

82
00:06:33.250 --> 00:06:36.370
We will give our text a fine wheat value of 100.

83
00:06:36.370 --> 00:06:37.350
Let's run our code

84
00:06:41.830 --> 00:06:45.650
in the next lecture we will learn about text properties and CSSA.
