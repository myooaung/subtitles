WEBVTT
1
00:00:05.230 --> 00:00:10.870
In this lecture we will learn about properties that CSL gives us to modify table alignment and layout.

2
00:00:10.990 --> 00:00:16.630
We will build off of some of the basic table code that we wrote in The Last Lecture the text align property

3
00:00:16.630 --> 00:00:22.650
allows us to specify if the text in our table should be aligned to the left right or center.

4
00:00:23.020 --> 00:00:25.930
The text in our table is aligned to the left by default.

5
00:00:26.330 --> 00:00:32.430
If you want to align the text to the left you can also assign a value of left to the text align property.

6
00:00:32.440 --> 00:00:35.240
Let's say the text align property to our styles.

7
00:00:35.410 --> 00:00:39.570
Assign it a value of left and then go to the web browser and run our code.

8
00:00:42.380 --> 00:00:45.460
You will notice that the text is left aligned in the cells in our table.

9
00:00:45.650 --> 00:00:46.860
Let's go back to the editor

10
00:00:49.700 --> 00:00:55.190
assigning this property a value of center will allow us to send the text in the cells in our table.

11
00:00:55.190 --> 00:01:00.490
Let's change the value of the text align property to center and then run our code in the web browser.

12
00:01:03.510 --> 00:01:06.640
The text is now aligned in the center of the cells in our table.

13
00:01:06.960 --> 00:01:08.190
Let's go back to the editor

14
00:01:11.080 --> 00:01:15.940
if we give the text align property a value of right our text will be right aligned in the cells of our

15
00:01:15.940 --> 00:01:16.640
table.

16
00:01:16.870 --> 00:01:20.630
We will change the value of the text align property to right and then run our code

17
00:01:23.490 --> 00:01:27.720
as you can see the text is now right aligned in the cells of our table.

18
00:01:27.720 --> 00:01:28.920
Let's go back to the editor

19
00:01:31.830 --> 00:01:37.680
the text aligned property allows us to align text inside of cells horizontally to align the text vertically

20
00:01:37.680 --> 00:01:38.270
in the cells.

21
00:01:38.280 --> 00:01:41.690
We can use the vertical align property first.

22
00:01:41.730 --> 00:01:46.440
Let's specify a height for the cells in our table so that we can clearly see the effect of this property

23
00:01:46.440 --> 00:01:47.580
in action.

24
00:01:47.580 --> 00:01:53.430
We will give the cells in our table a height of 40 pixels the vertical align property allows us to specify

25
00:01:53.430 --> 00:01:59.670
how text is aligned vertically inside of the cells in our table by default text is vertically aligned

26
00:01:59.670 --> 00:02:01.080
to the middle of a cell.

27
00:02:01.170 --> 00:02:05.730
When we run our code in the web browser you will notice that the text is centered vertically within

28
00:02:05.730 --> 00:02:06.950
the cells of our table.

29
00:02:07.050 --> 00:02:14.630
Let's go back to the editor of value of top will place the text vertically at the top of the cells.

30
00:02:14.770 --> 00:02:19.520
We will add the vertical align property to our style code and give it a value of top.

31
00:02:19.840 --> 00:02:21.820
Let's go to the web browser and run our code

32
00:02:24.760 --> 00:02:29.470
as you can see the text is now vertically aligned at the top of the cells in our table.

33
00:02:29.470 --> 00:02:30.820
Let's jump back to the editor

34
00:02:33.730 --> 00:02:39.480
assigning the vertical align property of value of bottom will place the text at the bottom of the cells.

35
00:02:39.580 --> 00:02:44.290
We will change the value of the vertical align property to bottom and then go to the web browser and

36
00:02:44.290 --> 00:02:47.740
run our code.

37
00:02:47.830 --> 00:02:51.460
You will notice that the text is vertically aligned to the bottom of our table.

38
00:02:51.460 --> 00:02:58.680
Let's go back to the editor the table layout property allows us to specify the algorithm used for the

39
00:02:58.680 --> 00:03:05.880
table layout CSSA gives us two values we can assign to this property auto and fixed to see the difference

40
00:03:05.880 --> 00:03:08.650
in effect between these two table layout algorithms.

41
00:03:08.760 --> 00:03:13.860
We will go to our column one heading and add some text to make it longer assigning the table layout

42
00:03:13.890 --> 00:03:18.870
property value of auto we'll tell the browser to use an automatic table layout algorithm.

43
00:03:18.900 --> 00:03:24.210
This is the default and the width of the table cells are adjusted based on the size of the content inside

44
00:03:24.210 --> 00:03:24.780
of them.

45
00:03:25.080 --> 00:03:29.570
We will add the table layout property to our table and give it a value of auto.

46
00:03:29.580 --> 00:03:31.590
Let's go to the web browser and run our code

47
00:03:36.720 --> 00:03:38.160
then we will go back to the editor

48
00:03:41.380 --> 00:03:46.210
if we give the table layout property of value or fixed the width of the cell is not dependent on their

49
00:03:46.210 --> 00:03:47.320
content.

50
00:03:47.320 --> 00:03:52.120
Each cell in the table is the same size and the size of the cells is based on the size of the table

51
00:03:52.120 --> 00:03:53.470
and its columns.

52
00:03:53.470 --> 00:03:58.010
Let's give our table layout property of value of fixed and then run our code in the browser

53
00:04:03.130 --> 00:04:05.410
a table with a table layout value of order.

54
00:04:05.410 --> 00:04:09.380
It takes longer to display than a table with a table layout value affects.

55
00:04:09.630 --> 00:04:14.640
The algorithm used with the auto layout reads through all of the contents of the table before actually

56
00:04:14.640 --> 00:04:16.740
displaying the table on the webpage.

57
00:04:16.770 --> 00:04:19.620
So it can be slow depending on the size of the table.

58
00:04:19.830 --> 00:04:24.420
The algorithm used with the fixed layout is faster as it starts displaying the table after it reads

59
00:04:24.420 --> 00:04:25.700
through the first row.

60
00:04:25.980 --> 00:04:31.020
Since the width of the columns is independent of the column content it knows which for each column without

61
00:04:31.020 --> 00:04:34.480
having to read through the whole table in the next lecture.

62
00:04:34.650 --> 00:04:38.320
We will learn about some cool effects that we can add to our tables using CSSA.
