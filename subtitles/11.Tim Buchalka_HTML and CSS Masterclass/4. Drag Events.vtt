WEBVTT
1
00:00:05.210 --> 00:00:08.240
In this lecture we will learn about the each team will drag events.

2
00:00:08.390 --> 00:00:14.050
All of these events were added as if each team L5 the drag events that each team gives us are on drugs

3
00:00:14.050 --> 00:00:17.950
stored on drag on drag and on drag.

4
00:00:17.950 --> 00:00:24.980
Enter on drag over on drag leave and don't drop the Andreyko start event is fired when the user starts

5
00:00:24.980 --> 00:00:31.190
to drag the element.

6
00:00:31.420 --> 00:00:37.390
Let's go to the web browser and run our code.

7
00:00:37.680 --> 00:00:40.810
Then we will go back to the editor and look at another example.

8
00:00:40.800 --> 00:00:47.630
The on drag event is fired when the element is dragged.

9
00:00:47.660 --> 00:00:59.550
Next we will go to the web browser and run our code.

10
00:00:59.860 --> 00:01:02.930
Then we will go back to the editor and look at another example.

11
00:01:03.130 --> 00:01:06.070
The on drag end event is run at the end of the drag.

12
00:01:09.690 --> 00:01:17.280
Let's go to the web browser and run our code.

13
00:01:17.620 --> 00:01:22.540
Then we will go back to the editor and look at another example to look at the next set of drag events

14
00:01:22.540 --> 00:01:23.610
in HVM L.

15
00:01:23.770 --> 00:01:28.510
We will write some code that will allow us to have drag text and a target box where we will be able

16
00:01:28.510 --> 00:01:31.190
to drag and drop the text into first.

17
00:01:31.210 --> 00:01:32.970
We will create the drag it will text.

18
00:01:33.040 --> 00:01:37.610
We will give it an ID and also make it drag a will by using the draggle attribute.

19
00:01:37.630 --> 00:01:41.380
Next we will make the container where the text can be dropped into.

20
00:01:41.440 --> 00:01:44.230
We will give it a height width and border

21
00:01:51.210 --> 00:01:56.280
let's write the code to handle the functionality of the drag and drop our allowed drop function will

22
00:01:56.280 --> 00:02:02.010
take in an event and call the prevent default method on it to prevent default method stops the default

23
00:02:02.010 --> 00:02:06.660
action which in this case would be the element going back to its original position.

24
00:02:06.660 --> 00:02:12.140
Next we will write the drag element function which allows us to set type and data of the drag data.

25
00:02:12.360 --> 00:02:14.940
Finally we will write the drop element function

26
00:02:32.690 --> 00:02:39.270
the on drag enter event is run when an element does drag to a drop target on drag over is a drag event

27
00:02:39.270 --> 00:02:44.390
that is fired when an element is Tregg over a drop target the on drag leave event is run.

28
00:02:44.460 --> 00:02:49.630
When an element leaves a drop target the On Drop event is Renren an element is dropped.

29
00:02:50.760 --> 00:02:55.560
In our development which will function as the drop zone we will add the on drag over event and make

30
00:02:55.560 --> 00:02:57.360
it call or allow drop function.

31
00:02:57.360 --> 00:03:02.760
We will also add the On Drop event to our development and make it call or drop elephant function.

32
00:03:02.760 --> 00:03:08.880
We need to have the on start event fire the drag element function we wrote when the user starts to drag

33
00:03:08.880 --> 00:03:14.150
the text in the paragraph element so we will add the following line to the opening tag.

34
00:03:14.160 --> 00:03:16.460
Let's go to the web browser and run our code.

35
00:03:16.710 --> 00:03:21.660
When we put all of this code together you will notice that we can now drag the text and drop it into

36
00:03:21.660 --> 00:03:22.970
a box.

37
00:03:23.030 --> 00:03:27.330
Females drag events are useful when we want to code functionality around the dragging and dropping of

38
00:03:27.330 --> 00:03:30.060
elements on the web page in the next lecture.

39
00:03:30.090 --> 00:03:32.390
We will learn about clipboard events and HMO.
