1
00:00:05,210 --> 00:00:09,850
In this lecture we will learn how to use HVM to embed video into our webpage.

2
00:00:09,890 --> 00:00:16,620
HDMI allows us to embed video into our web pages TED video to your web page use the video tag.

3
00:00:16,790 --> 00:00:20,810
We will start by getting an opening and closing video tag to our code.

4
00:00:20,900 --> 00:00:25,320
We will specify a web for video using the with attribute of the video tag.

5
00:00:25,670 --> 00:00:29,340
Next we will specify the height of our video using the height attribute.

6
00:00:29,510 --> 00:00:34,610
We will also add a source element inside the video tags as this will reference the video file of the

7
00:00:34,610 --> 00:00:36,270
video to be shown.

8
00:00:36,650 --> 00:00:39,620
HVM supports three types of video.

9
00:00:39,760 --> 00:00:45,450
MP for webcam and old Gigi we need to specify the type as well.

10
00:00:45,530 --> 00:00:50,660
We can do this by adding the type attribute to our source element and giving it a value of video forward

11
00:00:50,660 --> 00:00:53,430
slash whatever type of video we are using.

12
00:00:53,720 --> 00:01:01,260
Let's go to the web browser and run our code as you can see the video is embedded into our web page.

13
00:01:01,260 --> 00:01:03,900
Let's jump back to the editor and build on this example.

14
00:01:05,700 --> 00:01:10,410
The videotape has several attributes that we can set if we want the user to be able to pause and play

15
00:01:10,410 --> 00:01:13,650
the video as well as make it full screen cetera.

16
00:01:13,890 --> 00:01:18,780
We can add the controls attribute to the opening video tag then we will go to the web browser and run

17
00:01:18,780 --> 00:01:30,570
our code as you can see there are now controls on our video.

18
00:01:30,590 --> 00:01:31,900
Let's jump back to the editor

19
00:01:34,730 --> 00:01:38,280
if you want the video to automatically play once the web page is loaded.

20
00:01:38,390 --> 00:01:41,480
You can add the auto play attribute to the opening video tag.

21
00:01:41,780 --> 00:01:45,980
Let's say the auto play attribute to the opening video tag and then run our code in the browser.

22
00:01:46,280 --> 00:01:51,800
Make sure to run this code in Firefox as Google Chrome has disabled the auto play attribute as you can

23
00:01:51,800 --> 00:01:55,310
see the video starts playing as soon as the web page loads.

24
00:01:55,430 --> 00:01:57,230
Since we used to auto play attribute.

25
00:01:57,350 --> 00:01:58,680
Let's jump back to the editor

26
00:02:02,040 --> 00:02:06,720
if we want the video to start over each time it is finished and automatically loop we can add the loop

27
00:02:06,720 --> 00:02:08,790
attribute to our openings video tag.

28
00:02:08,910 --> 00:02:12,860
Let's say the loop attribute to the opening video tag and then run our code in the browser.

29
00:02:16,860 --> 00:02:22,350
As you can see once the video finishes playing it automatically replays since we had the loop attribute

30
00:02:22,350 --> 00:02:28,340
to the opening video tag.

31
00:02:28,360 --> 00:02:29,700
Let's jump back to the editor

32
00:02:32,600 --> 00:02:34,570
if we want to play the video without any audio.

33
00:02:34,580 --> 00:02:36,500
We can use the muted attribute.

34
00:02:36,770 --> 00:02:42,010
We had the muted attribute to the opening video tag just like we did for the other attributes we added.

35
00:02:42,200 --> 00:02:46,910
If we want to show an image before the user clicks play on the video we can use the poster attribute

36
00:02:47,330 --> 00:02:50,560
the poster attribute takes a value of the source of our image.

37
00:02:50,600 --> 00:02:54,540
Let's use the poster attribute and give it a value V-Star star PMG image.

38
00:02:54,590 --> 00:02:59,060
We will also remove the auto play attribute so that our video doesn't start playing as soon as the web

39
00:02:59,060 --> 00:03:01,650
page loads when we run our code.

40
00:03:01,700 --> 00:03:03,590
You will notice that the star images displayed

41
00:03:09,560 --> 00:03:16,760
Let's jump back to the editor we can use the preload attribute to specify how the video should be preloaded.

42
00:03:16,760 --> 00:03:20,210
There are three possible values that we can assign to the pre-load attribute.

43
00:03:20,390 --> 00:03:26,150
If we set the preload attribute to Ortal the browser will load the entire video on the web page loads.

44
00:03:26,360 --> 00:03:31,220
If we set the preload attribute to metadata the browser will only pre-load the videos metadata when

45
00:03:31,220 --> 00:03:32,870
the web page loads.

46
00:03:32,900 --> 00:03:37,490
We can also set the preload attribute to none so that the browser doesn't pre-load the video and the

47
00:03:37,490 --> 00:03:43,360
web page loads the web page will wait to load the video until the user actually clicks the play button.

48
00:03:43,370 --> 00:03:48,240
If our video does not load for whatever reason we can display fallback text to the user.

49
00:03:48,320 --> 00:03:53,600
We do this by adding text inside of our opening and closing video tags or such from any video files

50
00:03:53,600 --> 00:03:54,770
to our Web page.

51
00:03:54,770 --> 00:04:00,380
It is also possible for us to embed YouTube videos into our Web page embedding YouTube videos into our

52
00:04:00,380 --> 00:04:05,190
web page as opposed to video files has the advantage that you don't have to convert your videos into

53
00:04:05,210 --> 00:04:11,600
different file format every YouTube video has a YouTube video ID we can use this idea to reference a

54
00:04:11,600 --> 00:04:14,410
YouTube video to embedded into our webpage.

55
00:04:14,660 --> 00:04:18,920
In order to display a YouTube video on our Web page we can use the I-frame element.

56
00:04:19,100 --> 00:04:22,040
Let's add an opening and closing I-frame tag to our code.

57
00:04:22,100 --> 00:04:25,960
We will give our I-frame a width of 1000 a height of 500.

58
00:04:25,970 --> 00:04:30,860
We will also add the source attribute to the opening I-frame tag and specify that you are Alef the video

59
00:04:30,860 --> 00:04:32,930
we want to embed in our web page.

60
00:04:32,930 --> 00:04:39,020
The source attribute will have YouTube's you R-AL forward slash embed forward slash the youtoo by D.

61
00:04:39,290 --> 00:04:46,040
Then we will go to the web browser and run our code as you can see the YouTube video is embedded into

62
00:04:46,040 --> 00:04:46,790
our webpage

63
00:04:49,450 --> 00:04:53,560
adding attributes like auto play and loop to our YouTube videos is a bit different than adding them

64
00:04:53,560 --> 00:04:58,960
to our video files that we embed with the video tag in order to understand how to add these attributes

65
00:04:59,230 --> 00:05:05,140
to the YouTube videos embed you are all we need to quickly review query string parameters a query string

66
00:05:05,140 --> 00:05:08,750
parameter is a piece of information appended to the end of a URL.

67
00:05:08,770 --> 00:05:12,210
It consists of a variable and equal sign and a value.

68
00:05:12,430 --> 00:05:16,320
The first query string parameter will have a question mark in front of it.

69
00:05:16,360 --> 00:05:20,800
Any additional query string parameters will be separated by an ampersand.

70
00:05:20,800 --> 00:05:23,450
There are four such attributes that YouTube supports.

71
00:05:23,560 --> 00:05:27,160
Auto play controls loop and playlists.

72
00:05:27,490 --> 00:05:30,190
Let's look at the auto play attribute first.

73
00:05:30,190 --> 00:05:35,680
We had a question mark followed by auto play equals 1 to tell the video to play as soon as the web page

74
00:05:35,680 --> 00:05:41,020
loads a value of zero for this attribute would explicitly specify that the video not auto play when

75
00:05:41,020 --> 00:05:45,730
the web page loads we will have to run this example in Firefox to see the result.

76
00:05:47,700 --> 00:05:51,630
As you can see the video starts playing as soon as the web page loads.

77
00:05:51,840 --> 00:05:54,440
Let's jump back to the editor and look at another example.

78
00:05:56,480 --> 00:06:03,320
We can also add controls to let the user be able to have controls like play pause in large etc. giving

79
00:06:03,320 --> 00:06:08,060
the controls attribute a value of 1 specify that the user should be shown video controls.

80
00:06:08,060 --> 00:06:10,050
Note that this is the default option.

81
00:06:10,370 --> 00:06:15,550
If a value of 0 is assigned to the controls attribute this specifies that the user should not have controls.

82
00:06:15,560 --> 00:06:22,310
Let's jump to the web browser and run our code as you can see there are controls on our video.

83
00:06:22,490 --> 00:06:25,340
Let's go back to the editor and look at another example.

84
00:06:27,480 --> 00:06:31,820
We can use the loop attribute combined with the playlist attribute to play videos one after another.

85
00:06:31,920 --> 00:06:36,250
The playlist attribute allows us to specify other videos to play after this video ends.

86
00:06:36,330 --> 00:06:41,520
We separate these video ideas by commune's lets use the playlist attribute and specify other videos

87
00:06:41,520 --> 00:06:42,830
to play after this video.

88
00:06:42,840 --> 00:06:45,570
Then we will run our code in the browser to see the result.

89
00:06:53,910 --> 00:06:58,500
In the next lecture we will learn how to embed audio into a web page using H T-Mo.
