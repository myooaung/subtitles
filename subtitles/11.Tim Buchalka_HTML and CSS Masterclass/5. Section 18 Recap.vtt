WEBVTT
1
00:00:05.240 --> 00:00:09.920
In this section we learned about CSSA properties useful for styling tables.

2
00:00:09.920 --> 00:00:14.990
First we looked at properties that we can use to modify the style and display of tables.

3
00:00:15.110 --> 00:00:21.470
The border property allows us to add a border of a specified with style and color to our table and the

4
00:00:21.470 --> 00:00:23.000
cells in our table.

5
00:00:23.090 --> 00:00:28.580
The border collapse property allows us to collapse the table border and cell borders into one border

6
00:00:29.170 --> 00:00:33.000
the width and height properties allow us to add a width and height to our table.

7
00:00:33.170 --> 00:00:39.060
The table caption property allows us to specify where to place the table caption assigning this property

8
00:00:39.060 --> 00:00:44.690
a value of top will position the caption above our table of value of bottom we'll put the caption below

9
00:00:44.690 --> 00:00:45.410
our table.

10
00:00:45.590 --> 00:00:50.660
Next we learned about CSSA properties that we can use to align the text within the cells in our table

11
00:00:50.960 --> 00:00:55.790
the text align property allows us to specify if the text in our tables should be aligned to the left

12
00:00:56.300 --> 00:00:58.180
right or center.

13
00:00:58.280 --> 00:01:01.640
The text in our table is aligned to the left by default.

14
00:01:01.910 --> 00:01:06.890
The vertical align property allows us to specify how text is aligned vertically inside of the cells

15
00:01:06.890 --> 00:01:07.860
in our table.

16
00:01:07.940 --> 00:01:13.280
We can specify a value of top middle or bottom for the vertical align property.

17
00:01:13.280 --> 00:01:19.040
The table layout property allows us to specify the algorithm used for the table layout CSSA gives us

18
00:01:19.040 --> 00:01:25.940
two values we can assign to this property auto and fixed assigning the table layout property to a value

19
00:01:25.940 --> 00:01:30.590
of auto will tell the browser to use an automatic table layout algorithm.

20
00:01:30.650 --> 00:01:35.420
This algorithm goes through the entire table before it is displayed and calculates the size of the cells

21
00:01:35.420 --> 00:01:36.700
based on their content.

22
00:01:36.950 --> 00:01:42.140
If we give the table lay out property value of fixed the width of the cells is not dependent on their

23
00:01:42.140 --> 00:01:43.090
content.

24
00:01:43.130 --> 00:01:48.320
Each shell in the table is the same size and the size of the cells is based on the size of the table

25
00:01:48.320 --> 00:01:50.090
and its columns.

26
00:01:50.090 --> 00:01:55.370
The fixed algorithm is faster at displaying the table in the auto algorithm due to the fact that the

27
00:01:55.370 --> 00:02:01.610
auto algorithm goes through the entire table before displaying it whereas the fixed algorithm does not.

28
00:02:01.610 --> 00:02:03.970
Finally we learned about a few selectors.

29
00:02:04.000 --> 00:02:06.730
SS gives us they had cool effects to our table.

30
00:02:07.100 --> 00:02:10.660
The hover selector lets us modify the elements that we hover over.

31
00:02:10.760 --> 00:02:14.840
We looked at how we could change the background color of the table rose as we hovered over them with

32
00:02:14.840 --> 00:02:16.620
our mouse using this property.

33
00:02:16.910 --> 00:02:22.940
The end to child selector allows us to apply styles to specified rows we can use that even in odd keywords

34
00:02:22.940 --> 00:02:26.210
to apply these styles to the even and odd rows in our table.

35
00:02:26.210 --> 00:02:31.160
We can also specify a number which represents the number of rows to be affected by the style we specify

36
00:02:31.680 --> 00:02:32.900
in the next section.

37
00:02:32.990 --> 00:02:35.540
We will learn about styling lists using CSF.
