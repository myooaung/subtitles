1
00:00:05,200 --> 00:00:10,010
In this lecture we will learn about the different units that CSF gives us for expressing the size of

2
00:00:10,010 --> 00:00:11,470
our elements.

3
00:00:11,480 --> 00:00:18,160
There are two types of sizes that we can work with in CSSA absolute and relative an absolute length

4
00:00:18,160 --> 00:00:24,380
is a fixed unit that will make an element display the exact size specified a relative length takes into

5
00:00:24,380 --> 00:00:27,880
account factors like viewport size when scaling an element.

6
00:00:28,010 --> 00:00:34,070
When programming web pages for the computer it is best to use a relative length so that users viewing

7
00:00:34,070 --> 00:00:39,130
the web page on different sized screens can see the elements at the proper proportions.

8
00:00:39,500 --> 00:00:41,030
Let's go over absolute length.

9
00:00:41,030 --> 00:00:47,450
First we will look at the units from smallest to largest in that order the absolute length units that

10
00:00:47,450 --> 00:00:56,900
CSSA gives us access to our pixels point millimeters peakers centimeters and inches.

11
00:00:56,900 --> 00:01:00,390
First we had a paragraph element with some example text.

12
00:01:00,410 --> 00:01:06,790
Next we will give our paragraph element a style attribute the style will specify a font size in pixels.

13
00:01:06,950 --> 00:01:10,810
In this example we will give our element a font size of one pixel.

14
00:01:11,090 --> 00:01:14,620
The abbreviation for pixels in CSSA is p x.

15
00:01:14,630 --> 00:01:17,730
Let's go to the web browser and run our code to see the result.

16
00:01:20,300 --> 00:01:25,220
As you can see the result is very very small text on our Web page.

17
00:01:25,220 --> 00:01:32,630
Let's jump back to the editor if we change the font size to one point you will notice the increase in

18
00:01:32,630 --> 00:01:33,410
size.

19
00:01:33,410 --> 00:01:36,920
The abbreviation for points and CSSA is Peetie.

20
00:01:36,920 --> 00:01:44,530
We will go to the web browser and what are called as you can see the text is slightly larger than the

21
00:01:44,530 --> 00:01:45,780
last size.

22
00:01:45,820 --> 00:01:49,360
This is because points are slightly larger and pixels.

23
00:01:49,390 --> 00:01:52,740
Let's go back to the editor.

24
00:01:52,790 --> 00:01:55,790
Next up is millimeters which are larger than points.

25
00:01:56,090 --> 00:01:59,720
The abbreviation for millimeters and CSSA is Amam.

26
00:01:59,750 --> 00:02:03,390
We will change our code to give our text the size of one millimeter.

27
00:02:03,530 --> 00:02:08,540
Then we will go to the web browser and run our code.

28
00:02:08,760 --> 00:02:11,310
The text this time is larger and more readable.

29
00:02:11,460 --> 00:02:18,560
Let's go back to the editor after that come peakers which are larger than millimeters.

30
00:02:18,560 --> 00:02:21,870
The abbreviation for peakers and CSSA is PC.

31
00:02:22,040 --> 00:02:28,460
Let's change the unit of our font size to peakers and then run our code in the web browser.

32
00:02:28,780 --> 00:02:32,890
At this point you will notice a considerable difference in the size of the text.

33
00:02:32,890 --> 00:02:41,000
Let's go back to the editor then come centimeters which are larger than peakers the abbreviation for

34
00:02:41,000 --> 00:02:47,240
centimeters and CSSA is S.M. we will change the unit of our font size to CM and then run our code in

35
00:02:47,240 --> 00:02:48,380
the web browser.

36
00:02:51,120 --> 00:02:54,070
Now you will notice that our taxes even larger than before.

37
00:02:54,420 --> 00:02:58,090
Let's go back to the editor.

38
00:02:58,180 --> 00:03:01,580
Finally we have inches which are larger than centimeters.

39
00:03:01,840 --> 00:03:08,980
The abbreviation for inches and CSSA is an inch is the largest absolute length that CSSA provides us.

40
00:03:09,040 --> 00:03:19,020
We will change the unit in our code to inches and then run our code in the web browser.

41
00:03:19,070 --> 00:03:20,310
Let's jump back to the editor

42
00:03:23,090 --> 00:03:26,150
and that's it for our absolute length CSSA unit.

43
00:03:26,390 --> 00:03:32,000
Now it's time to go over the relative length c SS units that we can use to specify an element size in

44
00:03:32,000 --> 00:03:43,400
terms of relative sizes we can specify units and E M E X S.H. R.E.M. VW VH the men the max and percent

45
00:03:44,000 --> 00:03:49,820
and E-M is relative to the font size of an element say that we have a div with some text inside of it.

46
00:03:51,880 --> 00:03:55,750
Then we have a span inside of our day with some more text inside of it.

47
00:03:55,750 --> 00:04:01,120
We will give our div a font size of 10 pixels using the style attribute and then give our span a font

48
00:04:01,120 --> 00:04:02,140
size of AM

49
00:04:05,070 --> 00:04:10,220
when we run our code you will notice that the text in our span is twice as large as the text in Argive.

50
00:04:10,230 --> 00:04:15,300
This is because we gave it a font size of Chewey which means two times the current font size.

51
00:04:15,570 --> 00:04:21,630
Since the current font size is 10 pixels the spam's text is displayed at a size of twenty pixels.

52
00:04:21,630 --> 00:04:24,480
Let's go back to the editor and look at another example.

53
00:04:24,480 --> 00:04:28,050
One rarely used unit in CSSA is the x unit.

54
00:04:28,050 --> 00:04:32,850
This unit is based on the size of the lower case X in whatever font we use.

55
00:04:32,850 --> 00:04:39,270
If we change the M in E-M from our last example to an X and run our code you will notice the change

56
00:04:39,270 --> 00:04:40,180
in size.

57
00:04:45,560 --> 00:04:47,250
Let's jump back to the editor.

58
00:04:47,300 --> 00:04:52,480
Another relative font unit S.H. bases its size on the number 0 in a font.

59
00:04:52,520 --> 00:04:54,410
C-h stands for character.

60
00:04:54,410 --> 00:05:00,200
If we change our code to have a font size of two S.H. you will see the alteration in font size of font

61
00:05:00,200 --> 00:05:04,960
size of two S.H. means that the size will be twice the size of the number zero character in the font

62
00:05:04,970 --> 00:05:06,490
we are using.

63
00:05:06,500 --> 00:05:08,510
Let's go to the web browser and run our code

64
00:05:12,920 --> 00:05:15,970
then we will jump back to the editor.

65
00:05:16,180 --> 00:05:23,320
The relative unit R.E.M. says the font size based on the font size of the web page R.E.M. stands for

66
00:05:23,320 --> 00:05:28,150
a root E-M it bases the size around the size of the root element.

67
00:05:28,150 --> 00:05:34,240
If the body element on a web page has a size of 10 pixels and we give our text inspanned text the font

68
00:05:34,240 --> 00:05:39,810
size of R.E.M. the size of our div and span text will be 400 pixels.

69
00:05:39,940 --> 00:05:41,910
We will go to the web browser and run our code

70
00:05:47,910 --> 00:05:55,140
then we will jump back to the editor of VW Stenstrom viewport with unit 1 VW is equivalent to 1 percent

71
00:05:55,140 --> 00:05:56,560
of the viewport.

72
00:05:56,970 --> 00:06:03,450
So if we change our divin span to have a font size of VW or font size will be based on 4 percent of

73
00:06:03,450 --> 00:06:04,820
the viewport width.

74
00:06:05,160 --> 00:06:07,360
Let's run our code in the web browser or see the result

75
00:06:10,400 --> 00:06:13,400
then we will go back to the editor and look at another example.

76
00:06:16,660 --> 00:06:23,510
Of the H stands for a viewport height Unit 1 VHS equivalent to 1 percent of the viewport height.

77
00:06:23,530 --> 00:06:30,070
So if we change our div and span to have a font size of 4 VH or font size will be based on 4 percent

78
00:06:30,070 --> 00:06:35,220
of the viewport height we will jump to the web browser and run our code to see the result.

79
00:06:38,660 --> 00:06:46,500
Then we will go back to the editor the for a viewport minimum and this relative unit is based on either

80
00:06:46,500 --> 00:06:48,500
the height or width of the viewport.

81
00:06:48,630 --> 00:06:54,840
Whichever one is smaller if we change our font size unit to the men and run our code you will notice

82
00:06:54,870 --> 00:06:56,170
the change in font size

83
00:06:58,900 --> 00:07:05,200
then we will go back to the editor the max stands for viewport maximum and this relative unit is also

84
00:07:05,200 --> 00:07:07,330
based on the height and width of the viewport.

85
00:07:07,450 --> 00:07:13,570
Whichever one is larger if we change your font size unit to the max and run our code you will notice

86
00:07:13,600 --> 00:07:19,330
the change in font size.

87
00:07:19,350 --> 00:07:21,100
Let's go back to the editor.

88
00:07:21,300 --> 00:07:27,240
The final relative unit that CSSA gives us access to is percent the percent value is relative to the

89
00:07:27,240 --> 00:07:29,520
size of the percent element.

90
00:07:29,520 --> 00:07:35,790
Let's give our development the font size of 100 pixels since our span element is a child of the div

91
00:07:36,120 --> 00:07:42,060
we could specify a percentage that we want it to be relative to the divs size specifying a size of 50

92
00:07:42,060 --> 00:07:45,600
percent will make our span font size 50 pixels.

93
00:07:45,600 --> 00:07:53,390
Half of the font size of its parent element we will go to the web browser and run our code as we can

94
00:07:53,390 --> 00:07:59,660
see the text in our span is now half the size of the text in the parent element in this lecture we covered

95
00:07:59,660 --> 00:08:05,110
the units that CSF gives us to specify sizes for elements in the next lecture.

96
00:08:05,180 --> 00:08:07,990
We will recap what we learned in this section of the course.
