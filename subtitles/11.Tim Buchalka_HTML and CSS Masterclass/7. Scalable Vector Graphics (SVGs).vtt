WEBVTT
1
00:00:05.200 --> 00:00:10.350
In this lecture we will learn about scalable vector graphics commonly referred to by the acronym as

2
00:00:10.380 --> 00:00:16.080
Viji unscalable vector graphic is useful because it is able to scale up and down without any loss in

3
00:00:16.080 --> 00:00:17.020
resolution.

4
00:00:17.280 --> 00:00:22.770
It is invaluable in that it will look the same at any screen size without any loss in graphic quality

5
00:00:23.280 --> 00:00:24.960
to create an SVGA element.

6
00:00:24.960 --> 00:00:31.650
We use that as Viji tag inside of the starting SVGA tag we need to specify a width and height for our

7
00:00:31.670 --> 00:00:33.240
SVGA element.

8
00:00:33.720 --> 00:00:39.190
Next we add a tag as content of our SVGA element of the shape we are trying to draw.

9
00:00:39.480 --> 00:00:43.220
If we want to draw a rectangle we could use direct tag.

10
00:00:43.530 --> 00:00:49.620
We will also give our rectangle a within a height then we will run our code in the web browser.

11
00:00:51.350 --> 00:00:55.270
You can see the rectangle as Viji that we created displayed on the webpage.

12
00:00:55.280 --> 00:00:58.150
Let's jump back to the editor and look at another example.

13
00:00:59.530 --> 00:01:01.900
We can also use SVGA to draw other shapes.

14
00:01:01.900 --> 00:01:10.230
For example a circle we also need to give our circle an x and y position specified by the C X and see

15
00:01:10.230 --> 00:01:16.780
y attributes as well as the radius specified by the R attribute to see or circle so far.

16
00:01:16.910 --> 00:01:24.420
Let's jump to the web browser and run our code as you can see the circle SVGA that we created is displayed

17
00:01:24.420 --> 00:01:25.580
on the web page.

18
00:01:25.590 --> 00:01:28.430
Let's jump back to the editor.

19
00:01:28.510 --> 00:01:33.070
We can also include the fill attribute to give our circle of fill of a specified color.

20
00:01:33.070 --> 00:01:37.870
Let's use the fill attribute and give it a value of red then we will go to the web browser and run our

21
00:01:37.870 --> 00:01:41.360
code as you can see.

22
00:01:41.460 --> 00:01:43.830
Our circle is now filled in the color red.

23
00:01:43.950 --> 00:01:51.120
Then we will go back to the editor as Viji also allows us to render text to our web page using the text

24
00:01:51.120 --> 00:01:57.240
tag we need to specify the x and y attributes which are the X and Y positions to render this text on

25
00:01:57.240 --> 00:02:03.720
the screen as content to this text element we will specify the text we want to display by typing it

26
00:02:03.720 --> 00:02:06.540
between the opening and closing text tags.

27
00:02:06.540 --> 00:02:14.150
Let's go to the web browser and run our code as you can see our text SPG was added to the web page.

28
00:02:14.160 --> 00:02:15.790
Let's jump back to the editor.

29
00:02:17.690 --> 00:02:21.090
We can change the size of our text by using the font size attribute.

30
00:02:21.380 --> 00:02:27.960
Let's change the font size of our text and then run our code in the browser as you can see the font

31
00:02:27.960 --> 00:02:29.340
size was updated.

32
00:02:29.340 --> 00:02:32.510
Let's go back to the editor.

33
00:02:32.650 --> 00:02:35.650
We can change the color of our text by using the fill attribute.

34
00:02:35.860 --> 00:02:42.450
Let's use the fill attribute to color our text then we will go to the web browser and run our code.

35
00:02:42.600 --> 00:02:46.910
You will notice that our text is now the color that we specified using the fel attribute.

36
00:02:46.920 --> 00:02:49.750
Let's go back to the editor and look at another example.

37
00:02:51.610 --> 00:02:56.820
Additionally we can specify what font we want the text to render and by using the font family attribute

38
00:02:57.490 --> 00:03:02.770
for example specifying a value of Aeriel will make or text display in every Alfon

39
00:03:05.980 --> 00:03:11.260
you may be wondering which is better for you to use one of rendering to the browser and HVM l can visit

40
00:03:11.260 --> 00:03:13.290
or scalable vector graphics.

41
00:03:13.360 --> 00:03:19.900
Both of these approaches to rendering have their own advantages disadvantages and ideal use cases you

42
00:03:19.900 --> 00:03:26.470
can embed SVGA directly into your HVM L to draw shapes and render text with the canvas you need to use

43
00:03:26.470 --> 00:03:29.770
some javascript to draw to the canvas context.

44
00:03:29.770 --> 00:03:33.940
The canvas is rendered pixel by pixel and is therefore resolution dependent.

45
00:03:33.970 --> 00:03:39.280
The images that you add to the canvas cannot be scaled up or down indefinitely without losing some image

46
00:03:39.280 --> 00:03:40.150
quality.

47
00:03:40.210 --> 00:03:46.420
In contrast all SPG elements can be drawn at any resolution without losing quality as they are vector

48
00:03:46.420 --> 00:03:49.000
based images instead of pixel based.

49
00:03:49.000 --> 00:03:54.430
The canvas is good for rendering interactive games and complex animations as Viji is good for rendering

50
00:03:54.430 --> 00:03:57.970
static images to the webpage in the next lecture.

51
00:03:57.970 --> 00:04:00.900
We will look at a recap of what we learned in this section.
