WEBVTT
1
00:00:05.210 --> 00:00:10.560
In this lecture we will learn about how we can use a CSSA validator to find errors in our CSSA code.

2
00:00:10.560 --> 00:00:16.590
We learned about using W3 CS h t m l validator in the H team l debugging section the World Wide Web

3
00:00:16.590 --> 00:00:22.980
Consortium also has a CSSA validator that can be used to validate CSSA only files HVM meld with CSSA

4
00:00:22.980 --> 00:00:23.780
embedded in it.

5
00:00:23.820 --> 00:00:30.210
And each team with CSSA embedded in it using a CSSA validator is very similar to using HVM all validator

6
00:00:30.600 --> 00:00:33.730
to access the World Wide Web Consortium CSSA validator.

7
00:00:33.750 --> 00:00:41.670
We will open up our browser and go to HEG P.S. colon slash slash jigsaw dot W3 dot org slash CSSA hyphen

8
00:00:41.670 --> 00:00:47.610
validator forward slash the CSSA validator gives us the same options that the H.T. mail validator did

9
00:00:48.150 --> 00:00:54.420
the option enter or you or I upload a file or directly input the CSSA into the validator.

10
00:00:54.420 --> 00:01:00.660
If we clicked the by file upload tab and choose our pizza CSSA file from the hands on CSSA section.

11
00:01:00.690 --> 00:01:04.350
We can check it to make sure that there are no syntax errors in the code.

12
00:01:04.350 --> 00:01:10.570
We can also validate our C access code by direct input as you can see when we click on the third tab.

13
00:01:10.660 --> 00:01:14.760
There is a text area where we can directly input CSSA code into to check it.

14
00:01:14.850 --> 00:01:19.950
We can copy and paste code that we have written and run it through the validator just like the HGL validator

15
00:01:20.040 --> 00:01:22.060
the CSSA validator is definitely a tool.

16
00:01:22.080 --> 00:01:26.970
You should bookmark and use frequently when developing web pages and the next lecture we will recap

17
00:01:26.970 --> 00:01:28.680
what we learned in this section of the course.
