WEBVTT
1
00:00:05.190 --> 00:00:11.350
In this lecture we will learn about global attributes that are specific to HVM L5 the content editable

2
00:00:11.350 --> 00:00:15.140
attribute allows us to specify our element is editable or not.

3
00:00:15.340 --> 00:00:21.070
If we make the content of a paragraph element editable For example we will be able to click into it

4
00:00:21.160 --> 00:00:23.550
and edit it on our Web page.

5
00:00:23.620 --> 00:00:27.790
Let's add a paragraph element with some example text to our Web page.

6
00:00:27.790 --> 00:00:32.790
We will give our paragraph element the content editable attribute with a value of true.

7
00:00:33.130 --> 00:00:39.190
Then we will go to the web browser and run our code as you can see we can click on the text and modify

8
00:00:39.190 --> 00:00:39.310
it.

9
00:00:39.310 --> 00:00:42.040
Thanks to the content editable attribute.

10
00:00:42.100 --> 00:00:48.250
Let's go back to the editor the context menu attribute allows us to create a context menu that will

11
00:00:48.250 --> 00:00:53.650
appear when we right click on an element let's add the context menu attribute to our paragraph element

12
00:00:54.190 --> 00:01:00.250
and then we will give it a value of menu inside of our paragraph element we will add some text content

13
00:01:00.370 --> 00:01:05.140
which will be the text that we can right click on to open our menu and we will also add a menu element

14
00:01:05.530 --> 00:01:09.790
the type will be set to context and the idea will be set to menu.

15
00:01:09.970 --> 00:01:16.600
We will add two menu item elements as the content for our menu and label them option 1 and option 2.

16
00:01:16.780 --> 00:01:20.410
Don't forget to close these menu item elements with a closing tag.

17
00:01:20.410 --> 00:01:26.130
Then we will also close our menu and paragraph elements respectively to run this example.

18
00:01:26.170 --> 00:01:32.690
We will have to use the Firefox web browser as the context menu attribute doesn't work in Google Chrome.

19
00:01:33.070 --> 00:01:34.910
We will open up Firefox.

20
00:01:34.990 --> 00:01:38.560
Run the code and right click on our example menu text.

21
00:01:38.710 --> 00:01:43.670
We should see our context menu options option 1 and Option 2 displayed.

22
00:01:43.690 --> 00:01:50.380
Let's jump back to the editing we can embed custom data into our HVM elements using the data attribute.

23
00:01:50.380 --> 00:01:57.280
Basically we can create custom attributes using data then a hyphen followed by lower case strings that

24
00:01:57.280 --> 00:01:59.800
can also be separated by hyphens.

25
00:01:59.800 --> 00:02:02.830
Examples are data for type and data.

26
00:02:02.830 --> 00:02:04.350
Programming language.

27
00:02:04.570 --> 00:02:09.330
The draggle attribute allows us to specify whether or not an element is draggle.

28
00:02:09.520 --> 00:02:13.870
Assigning this attribute value of true means that the element can be dragged.

29
00:02:14.140 --> 00:02:19.990
Let's jump to the web browser and run our code as you can see if we attempt to drag the text by left

30
00:02:19.990 --> 00:02:22.270
clicking and dragging on it with our mouse.

31
00:02:22.390 --> 00:02:28.180
We are able to then we will go back to the editor if we give the attribute value of false.

32
00:02:28.210 --> 00:02:30.280
The element will not be drag nable.

33
00:02:30.430 --> 00:02:36.910
Let's change the draggle attribute to a value of false and go back to the browser to run our code.

34
00:02:36.910 --> 00:02:42.430
If we try to drag the text as we did a moment ago you will notice that we cannot drag the text.

35
00:02:42.430 --> 00:02:43.790
Let's jump back to the editor

36
00:02:46.640 --> 00:02:49.440
to hide an element we can use the hidden attribute.

37
00:02:49.670 --> 00:02:54.530
If we add the hidden natural beaute to an element opening tag the element will be hidden on the web

38
00:02:54.530 --> 00:02:55.440
page.

39
00:02:55.490 --> 00:02:59.120
Let's head to head match beaute to our opening paragraph tag.

40
00:02:59.120 --> 00:03:01.970
Note that the hidden attribute is a Boolean attribute.

41
00:03:01.970 --> 00:03:04.160
So we do not assign it a value.

42
00:03:04.160 --> 00:03:06.910
Let's go to the web browser and run in the code.

43
00:03:06.920 --> 00:03:12.560
Let's go to the web browser and run the code as you can see the paragraph element is no longer displayed

44
00:03:12.560 --> 00:03:15.940
on the web page since we added the hidden attribute to it.

45
00:03:16.310 --> 00:03:17.910
Let's jump back to the editor.

46
00:03:18.080 --> 00:03:22.350
The spellcheck attribute allows us to have the contents of our elements spell checked.

47
00:03:22.550 --> 00:03:27.770
We can use the content editable attribute along with the spellcheck attribute to spellcheck the text

48
00:03:27.830 --> 00:03:34.490
that the user types in we will add the content editable attribute to our opening paragraph tag and assign

49
00:03:34.490 --> 00:03:35.920
it a value of true.

50
00:03:35.960 --> 00:03:40.360
We will also add the spellcheck attribute and give it a value of true.

51
00:03:40.460 --> 00:03:46.260
Once we have done this we will go to the web browser and run our code if we spell the word incorrectly.

52
00:03:46.310 --> 00:03:52.130
You will notice that the word is underlined with a red squiggly line showing that it is spelled wrong.

53
00:03:52.130 --> 00:03:57.290
Let's jump back to the editor the translate attribute specifies whether or not an element is allowed

54
00:03:57.290 --> 00:04:04.370
to be translated into another language a value of yes allows the text to be translated to other languages.

55
00:04:04.700 --> 00:04:11.350
A value of no specifies that the text cannot be translated to other languages in the next lecture.

56
00:04:11.390 --> 00:04:13.510
We will recap what we learned in this section.
