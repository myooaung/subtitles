1
00:00:05,190 --> 00:00:10,480
In this lecture we will learn about clipping and masking and see SS clipping and masking or both techniques

2
00:00:10,480 --> 00:00:15,940
to control which part of an image is hidden and which part of an image is shown the difference between

3
00:00:15,940 --> 00:00:22,540
the two is that clipping is done via a vector path and masking is done via a mask image with clipping

4
00:00:22,900 --> 00:00:28,940
anything that is inside of the vector image is visible and anything outside of the vector image is invisible.

5
00:00:29,010 --> 00:00:33,670
SS gives us a clip path property to define a clip path for image.

6
00:00:33,880 --> 00:00:39,970
We can give this property the value of a basic shape that will be the clip path for image a basic shape

7
00:00:39,970 --> 00:00:47,590
is a circle inset ellipsis or polygon assigning a value of circle will make any part of our image inside

8
00:00:47,590 --> 00:00:52,470
of the circle visible and any part of our image outside of the circle invisible.

9
00:00:52,480 --> 00:00:57,220
Let's start off for example by adding an image element to our Web page and then giving it a source of

10
00:00:57,220 --> 00:00:59,440
our checkerboard jpeg image.

11
00:00:59,440 --> 00:01:02,780
Then we will get an opening and closing style tag to our code.

12
00:01:02,890 --> 00:01:08,430
We will give our image a clip path and use the circle function to clip our image in the shape of a circle.

13
00:01:08,470 --> 00:01:10,780
Then we will go to the web browser and run our code

14
00:01:13,530 --> 00:01:16,840
as you can see our image is now displayed in the shape of a circle.

15
00:01:16,890 --> 00:01:20,910
Let's jump back to the editor.

16
00:01:21,160 --> 00:01:27,040
We can use the inset function to give our image an insert Clearpath an insect is a rectangle and we

17
00:01:27,040 --> 00:01:31,540
can supply a value to tell the function how much of our current image to clip off.

18
00:01:31,540 --> 00:01:37,660
For example calling the inset function with a value of 10 pixels will chop 10 pixels off all four sides

19
00:01:37,660 --> 00:01:38,710
of our image.

20
00:01:38,710 --> 00:01:45,890
Let's change the clip pair the inset and past the inset function of value of 10 pixels.

21
00:01:46,020 --> 00:01:50,460
When we run our code in the web browser you will notice that 10 pixels were clipped off of each side

22
00:01:50,460 --> 00:01:51,630
of our image.

23
00:01:51,630 --> 00:01:54,410
Let's jump back to the editor and look at another example.

24
00:01:56,640 --> 00:02:00,520
We can use the ellipse function to give our image an ellipse shaped path.

25
00:02:00,630 --> 00:02:04,200
Let's use the ellipse function and pass it a value of 50 pixels.

26
00:02:04,200 --> 00:02:10,920
Then we will go to the web browser and run our code as you can see our image was clipped in the shape

27
00:02:10,920 --> 00:02:12,090
of an ellipse.

28
00:02:12,090 --> 00:02:16,470
Let's jump back to the editor.

29
00:02:16,770 --> 00:02:22,410
We can use the polygon function to create a polygon clip path for image the polygon function takes three

30
00:02:22,410 --> 00:02:28,340
or more arguments which are x y coordinates separated by a space the number of arguments that you supply

31
00:02:28,350 --> 00:02:33,660
in this way defines the number of vertices for your polygon where each x y point you specified defines

32
00:02:33,660 --> 00:02:34,860
a vertex.

33
00:02:34,860 --> 00:02:38,160
We will use the polygon function and passings 0 0.

34
00:02:38,340 --> 00:02:45,150
Then 100 percent to 100 percent and then 0 80 percent then we will go to the web browser and run our

35
00:02:45,150 --> 00:02:45,510
code

36
00:02:48,360 --> 00:02:53,250
as you can see our image was clipped in the shape of a triangle based on the three points that we passed

37
00:02:53,250 --> 00:02:55,230
into the polygon function.

38
00:02:55,230 --> 00:02:56,520
Let's jump back to the editor

39
00:02:59,470 --> 00:03:04,870
masking is similar to clipping but an image is used as opposed to a vector path anywhere that the mask

40
00:03:04,870 --> 00:03:10,660
is fully white will be opaque and anywhere where the mask is fully black will be transparent anywhere

41
00:03:10,660 --> 00:03:13,330
where the mask is a grayscale color between black and white.

42
00:03:13,330 --> 00:03:15,130
It will be semi-transparent.

43
00:03:15,130 --> 00:03:17,560
We can create a custom gradient as our mask.

44
00:03:17,740 --> 00:03:23,380
First let's use our blue JPEG image for this example we will use the Web Kit mask image property and

45
00:03:23,380 --> 00:03:36,430
create a Web Kit gradient.

46
00:03:36,690 --> 00:03:41,040
After we take the code for our custom gradient we will go to the web browser and run our code

47
00:03:43,840 --> 00:03:50,080
as you can see our images masked with the gradient that we find which alters its transparency in the

48
00:03:50,080 --> 00:03:50,970
next lecture.

49
00:03:51,100 --> 00:03:54,730
We will learn about some of the other properties that CSSA gives us access to.
