WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:130000

1
00:00:00.070 --> 00:00:01.920
- Over the remaining
lessons in this section,

2
00:00:01.920 --> 00:00:04.480
we will explore the starter
project more in depth,

3
00:00:04.480 --> 00:00:06.170
so that you can more easily find your way

4
00:00:06.170 --> 00:00:07.520
around the code base.

5
00:00:07.520 --> 00:00:08.770
And to make your life easier,

6
00:00:08.770 --> 00:00:11.490
I've also documented a
lot of the existing code,

7
00:00:11.490 --> 00:00:12.920
so that you can better understand

8
00:00:12.920 --> 00:00:15.320
the purpose of all the
classes that you'll find.

9
00:00:16.500 --> 00:00:18.240
Okay, so let me start by giving you

10
00:00:18.240 --> 00:00:20.620
a quick tour of the project structure.

11
00:00:20.620 --> 00:00:24.473
And as usual, everything
starts from the main.dart file.

12
00:00:25.470 --> 00:00:27.320
Which is where we run the app

13
00:00:27.320 --> 00:00:29.423
with the root widget of the application.

14
00:00:30.260 --> 00:00:31.280
And in addition to this,

15
00:00:31.280 --> 00:00:33.750
I've also added some
custom error handling code,

16
00:00:33.750 --> 00:00:36.600
which is useful to show
any unhandled errors

17
00:00:36.600 --> 00:00:37.660
directly in the UI.

18
00:00:37.660 --> 00:00:39.800
And if you've never seen this code before,

19
00:00:39.800 --> 00:00:42.343
you can find more info
by opening this link.

20
00:00:44.410 --> 00:00:46.610
Okay, so let's get back to our code,

21
00:00:46.610 --> 00:00:49.520
and next up we can comment
click, or contra click,

22
00:00:49.520 --> 00:00:51.870
to look at the root widget of our app,

23
00:00:51.870 --> 00:00:53.343
which is located over here.

24
00:00:54.460 --> 00:00:56.980
Now, this doesn't really
do anything special,

25
00:00:56.980 --> 00:00:59.830
because it just returns
a standard material app,

26
00:00:59.830 --> 00:01:03.370
which defines some basic
team data properties,

27
00:01:03.370 --> 00:01:05.430
and uses this products list screen

28
00:01:05.430 --> 00:01:08.130
as the homepage that
you can see over here.

29
00:01:08.130 --> 00:01:10.390
So at this stage, it's a
good idea to take a look

30
00:01:10.390 --> 00:01:12.620
at the various folders
in the file explorer,

31
00:01:12.620 --> 00:01:13.960
so that we can get a better feel

32
00:01:13.960 --> 00:01:15.793
for how this project is structured.

33
00:01:17.060 --> 00:01:19.310
And as you can see, all
the files in the project

34
00:01:19.310 --> 00:01:21.880
are located inside this source folder,

35
00:01:21.880 --> 00:01:24.410
which contains all these sub folders.

36
00:01:24.410 --> 00:01:25.530
And out of them,

37
00:01:25.530 --> 00:01:29.550
the most interesting ones are
called features and models.

38
00:01:29.550 --> 00:01:32.330
And the main idea here
is that inside features,

39
00:01:32.330 --> 00:01:35.470
we can find one folder
for each of the pages

40
00:01:35.470 --> 00:01:37.300
that you can see in the app.

41
00:01:37.300 --> 00:01:39.870
For example, the product
list screen that is loaded

42
00:01:39.870 --> 00:01:41.510
when we first start the app,

43
00:01:41.510 --> 00:01:43.880
is located inside products list,

44
00:01:43.880 --> 00:01:46.780
in file called products list screen.

45
00:01:46.780 --> 00:01:49.280
And likewise, each one of these folders

46
00:01:49.280 --> 00:01:53.170
contains a file that
ends with screen.dart,

47
00:01:53.170 --> 00:01:55.140
along with any other custom widgets

48
00:01:55.140 --> 00:01:56.890
that are used by that screen.

49
00:01:56.890 --> 00:02:00.160
And of course, if you open
any of these screen files,

50
00:02:00.160 --> 00:02:03.170
you can easily find out which
other widgets it depends on,

51
00:02:03.170 --> 00:02:06.110
based on the imports
at the top of the file.

52
00:02:06.110 --> 00:02:09.400
But for now, don't worry
about all these files,

53
00:02:09.400 --> 00:02:11.120
because I'll give you a better overview

54
00:02:11.120 --> 00:02:13.370
about all the existing widgets and pages,

55
00:02:13.370 --> 00:02:14.960
in the coming lessons.

56
00:02:14.960 --> 00:02:16.800
However, the thing that does matter,

57
00:02:16.800 --> 00:02:19.100
is that I've chosen to
structure this project

58
00:02:19.100 --> 00:02:21.320
using a feature-first strategy.

59
00:02:21.320 --> 00:02:23.100
At least in regards to all the widgets

60
00:02:23.100 --> 00:02:25.370
and pages that exist in this app.

61
00:02:25.370 --> 00:02:27.340
And one of the advantages
of this approach,

62
00:02:27.340 --> 00:02:28.830
is that all the source files

63
00:02:28.830 --> 00:02:30.460
that belong to a certain feature,

64
00:02:30.460 --> 00:02:32.960
are grouped together
inside the same folder.

65
00:02:32.960 --> 00:02:34.660
And we'll cover project structure

66
00:02:34.660 --> 00:02:36.630
more in detail in a later section,

67
00:02:36.630 --> 00:02:39.480
where we will talk about app architecture.

68
00:02:39.480 --> 00:02:43.700
Instead, right now I want to
focus on this models folder.

69
00:02:43.700 --> 00:02:45.520
Because this is an important folder,

70
00:02:45.520 --> 00:02:47.320
that contains all the data models

71
00:02:47.320 --> 00:02:49.290
that we need to show in the UI.

72
00:02:49.290 --> 00:02:52.720
For example, here we can
select this product class,

73
00:02:52.720 --> 00:02:54.520
which contains important properties,

74
00:02:54.520 --> 00:02:59.050
such as the image URL, the
title, description, price,

75
00:02:59.050 --> 00:03:01.540
and any other information
that we may want to show

76
00:03:01.540 --> 00:03:03.980
on the product page over here.

77
00:03:03.980 --> 00:03:06.550
And if you take a look at
all the other model classes,

78
00:03:06.550 --> 00:03:08.280
you'll find that they are very simple,

79
00:03:08.280 --> 00:03:11.650
because all they do is to
define a set of properties,

80
00:03:11.650 --> 00:03:13.032
along with a const constructor,

81
00:03:13.032 --> 00:03:15.056
that we can use to initialize them.

82
00:03:15.056 --> 00:03:17.310
And one thing that I want to point out,

83
00:03:17.310 --> 00:03:20.140
is that all these properties are final.

84
00:03:20.140 --> 00:03:22.650
And this means that once an
instance of a model class

85
00:03:22.650 --> 00:03:25.200
has been created then it is immutable,

86
00:03:25.200 --> 00:03:28.370
meaning that we cannot change
these properties directly.

87
00:03:28.370 --> 00:03:29.940
And as we will learn later,

88
00:03:29.940 --> 00:03:31.750
working with immutable model classes

89
00:03:31.750 --> 00:03:33.650
has a number of advantages.

90
00:03:33.650 --> 00:03:36.660
Also, one thing that you won't
find in these model classes,

91
00:03:36.660 --> 00:03:40.060
is the code for parsing
these properties from JSON.

92
00:03:40.060 --> 00:03:43.240
And this is certainly something
that we will need later on.

93
00:03:43.240 --> 00:03:45.960
But as I said for now,
this app doesn't really use

94
00:03:45.960 --> 00:03:49.010
a networking service, or
database to retrieve the data.

95
00:03:49.010 --> 00:03:52.050
And instead, all the products
that you can see over here,

96
00:03:52.050 --> 00:03:54.720
are hard coded, and they are all defined

97
00:03:54.720 --> 00:03:57.653
inside this file called test products.

98
00:03:58.660 --> 00:04:02.430
And what we can find here, is
this global const variable,

99
00:04:02.430 --> 00:04:04.360
that defines all the product data

100
00:04:04.360 --> 00:04:06.670
that we can see on the main screen.

101
00:04:06.670 --> 00:04:09.700
And as you can see the
image URL for each one

102
00:04:09.700 --> 00:04:13.000
of these products, points
to each of the image files

103
00:04:13.000 --> 00:04:14.760
that we have included in the project.

104
00:04:14.760 --> 00:04:17.550
Meaning that all these
images are loaded directly

105
00:04:17.550 --> 00:04:19.730
from the application bundle.

106
00:04:19.730 --> 00:04:21.140
And since we are already here,

107
00:04:21.140 --> 00:04:24.000
let's take a look at this
folder called constant.

108
00:04:24.000 --> 00:04:28.420
And over here, we'll find a
file called app sizes.dart.

109
00:04:28.420 --> 00:04:30.950
Which contains this class, called sizes,

110
00:04:30.950 --> 00:04:33.450
that defines all the constant sizes

111
00:04:33.450 --> 00:04:35.630
that are in use throughout the UI.

112
00:04:35.630 --> 00:04:37.850
And these are all multiples of four,

113
00:04:37.850 --> 00:04:41.267
which is a good idea if we
want our UI to be consistent.

114
00:04:41.267 --> 00:04:45.400
Also, I have defined some
global gap constants,

115
00:04:45.400 --> 00:04:48.750
which represent some size
boxes that are often used

116
00:04:48.750 --> 00:04:51.960
to space out widgets inside
row or column layouts.

117
00:04:51.960 --> 00:04:54.970
So if you see these constants
in the various widget classes,

118
00:04:54.970 --> 00:04:56.550
now you know what they are.

119
00:04:56.550 --> 00:04:59.803
Finally, we also have a utils folder,

120
00:05:00.851 --> 00:05:04.410
which includes these two files
called currency formatter,

121
00:05:04.410 --> 00:05:05.748
and date formatter.

122
00:05:05.748 --> 00:05:07.750
And these are quite useful

123
00:05:07.750 --> 00:05:10.630
whenever we need to display
a date or a currency,

124
00:05:10.630 --> 00:05:12.230
like in this product card,

125
00:05:12.230 --> 00:05:14.810
where we show the price
of a given product.

126
00:05:14.810 --> 00:05:17.450
So, once again there
isn't anything surprising

127
00:05:17.450 --> 00:05:18.810
in this starter project.

128
00:05:18.810 --> 00:05:21.110
And if you know the basics
of Flutter and Dart,

129
00:05:21.110 --> 00:05:22.950
you should be able to spend a bit of time

130
00:05:22.950 --> 00:05:24.660
getting familiar with this code base,

131
00:05:24.660 --> 00:05:28.140
without finding anything
shocking, or hard to understand.

132
00:05:28.140 --> 00:05:30.620
With that said, there is
a fair amount of UI code

133
00:05:30.620 --> 00:05:33.320
that I have included as part
of this starter project,

134
00:05:33.320 --> 00:05:35.720
and we'll have plenty
of time to explore this

135
00:05:35.720 --> 00:05:38.120
more in detail, as we make
progress with the course.

136
00:05:38.120 --> 00:05:39.960
Including in the next section,

137
00:05:39.960 --> 00:05:42.400
which will be all about navigation.

138
00:05:42.400 --> 00:05:44.320
Okay, so let's continue
you on the next lesson,

139
00:05:44.320 --> 00:05:45.980
where I'll give you a better overview

140
00:05:45.980 --> 00:05:47.483
of the UI side of things.

