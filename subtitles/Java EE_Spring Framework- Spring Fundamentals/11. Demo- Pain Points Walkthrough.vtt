WEBVTT
1
00:00:01.072 --> 00:00:05.209
So to specifically call out some of the pain points we're going to address,

2
00:00:05.209 --> 00:00:07.936
notice here in this code on line 7,

3
00:00:07.936 --> 00:00:12.778
I have the keyword new and I'm referencing the SpeakerServiceImpl.

4
00:00:12.778 --> 00:00:13.585
So already,

5
00:00:13.585 --> 00:00:17.217
my application knows and has a hard-coded reference

6
00:00:17.217 --> 00:00:21.085
to this SpeakerServiceImpl object.

7
00:00:21.085 --> 00:00:23.626
These are the types of things that we're going to use

8
00:00:23.626 --> 00:00:26.555
Spring to eliminate from our code.

9
00:00:26.555 --> 00:00:29.561
I could create some instance of a factory or an abstract

10
00:00:29.561 --> 00:00:32.138
factory to go ahead and load this code in there,

11
00:00:32.138 --> 00:00:34.200
but Spring already does all this for us.

12
00:00:34.200 --> 00:00:37.003
Likewise, if you go into our SpeakerServiceImpl,

13
00:00:37.003 --> 00:00:40.541
you'll notice here on line 11, again,

14
00:00:40.541 --> 00:00:45.373
we have the keyword new referencing this HibernateSpeakerRepositoryImpl.

15
00:00:45.373 --> 00:00:47.059
If I ever want to change this,

16
00:00:47.059 --> 00:00:50.680
even though I have the interface and I've coded my application to the interface,

17
00:00:50.680 --> 00:00:56.022
I have to rebuild my entire application based off of this configuration.

18
00:00:56.022 --> 00:00:58.373
Also, if you go into our HibernateSpeakerRepository,

19
00:00:58.373 --> 00:01:01.989
and I alluded to this in our example,

20
00:01:01.989 --> 00:01:05.918
I have code inside of here that stubbed out until we

21
00:01:05.918 --> 00:01:08.922
have our database instance ready to go.

22
00:01:08.922 --> 00:01:12.389
There's no reason why we couldn't just use a stub here and

23
00:01:12.389 --> 00:01:15.382
use Spring to load into our ServiceImpl,

24
00:01:15.382 --> 00:01:18.299
that stubbed out class,

25
00:01:18.299 --> 00:01:21.058
that we could then swap out when the actual

26
00:01:21.058 --> 00:01:24.265
configuration for our database is done,

27
00:01:24.265 --> 00:01:26.611
and our application doesn't need to change.

28
00:01:26.611 --> 00:01:28.922
We don't need to go recompile code or introduce

29
00:01:28.922 --> 00:01:33.813
other changes into our source code, rather just change configuration.

30
00:01:33.813 --> 00:01:40.000
Let's look at how we can now bring Spring into our application to help us with those pain points.

