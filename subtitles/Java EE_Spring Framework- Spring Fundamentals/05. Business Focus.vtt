WEBVTT
1
00:00:01.185 --> 00:00:03.762
As I mentioned in the previous slides,

2
00:00:03.762 --> 00:00:08.438
that Spring helps us focus on the business need.

3
00:00:08.438 --> 00:00:13.187
If you've ever done much database development in Java, you've used JDBC.

4
00:00:13.187 --> 00:00:15.677
JDBC, at first glance, doesn't look that bad,

5
00:00:15.677 --> 00:00:18.118
but then you really start picking it apart,

6
00:00:18.118 --> 00:00:20.705
and it's really not very pretty.

7
00:00:20.705 --> 00:00:23.007
Look at all this extra stuff we have in our code just

8
00:00:23.007 --> 00:00:25.152
to do a simple SELECT statement.

9
00:00:25.152 --> 00:00:27.617
We have connections, and prepared statements,

10
00:00:27.617 --> 00:00:31.359
and result sets, and then we have this try catch block.

11
00:00:31.359 --> 00:00:33.046
We have a DriverManager.

12
00:00:33.046 --> 00:00:35.509
We have all this stuff in there.

13
00:00:35.509 --> 00:00:40.730
And look at that great big finally block or the if rs = null,

14
00:00:40.730 --> 00:00:44.916
if statement = null, and if connection = null.

15
00:00:44.916 --> 00:00:48.821
Then we had this empty curly brace catching exceptions.

16
00:00:48.821 --> 00:00:53.053
There's a big bunch of just code in here when really all our business cares

17
00:00:53.053 --> 00:00:58.718
about is this line here where we say select whatever our fields are from

18
00:00:58.718 --> 00:01:02.411
the CAR table where this ID equals whatever,

19
00:01:02.411 --> 00:01:05.651
and then the only other line that our business really

20
00:01:05.651 --> 00:01:10.194
cares about is where we grab that actual string and store

21
00:01:10.194 --> 00:01:13.320
it in an object and return it.

22
00:01:13.320 --> 00:01:17.965
Now this may look like a great selling point for Hibernate instead of Spring,

23
00:01:17.965 --> 00:01:20.451
but actually I'm going to show you a few things that

24
00:01:20.451 --> 00:01:22.828
Spring does to make this easier.

25
00:01:22.828 --> 00:01:25.900
So, all these places where we're assigning things,

26
00:01:25.900 --> 00:01:27.859
and handling, and closing,

27
00:01:27.859 --> 00:01:39.000
and all that type of stuff can easily be contained by Spring for us. We should handle this by using Spring to inject these resources into our code.

