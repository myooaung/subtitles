1
00:00:01,287 --> 00:00:03,623
To start the configuration of our application,

2
00:00:03,623 --> 00:00:08,451
we're going to use an @ configuration annotation.

3
00:00:08,451 --> 00:00:13,815
The Java files that have the configuration annotation replace any

4
00:00:13,815 --> 00:00:18,250
XML files that we could've used historically.

5
00:00:18,250 --> 00:00:22,400
Configuration is a class-level annotation and looks something

6
00:00:22,400 --> 00:00:25,443
like the annotation in the snippet above.

7
00:00:25,443 --> 00:00:29,521
In that AppConfig file that we just created in our demo,

8
00:00:29,521 --> 00:00:34,700
we now put an @Configuration annotation at the top of that class.

9
00:00:34,700 --> 00:00:38,002
Methods used in conjunction with the bean annotation are

10
00:00:38,002 --> 00:00:41,006
used to get instances of Spring beans.

11
00:00:41,006 --> 00:00:46,359
Now, we're throwing a couple of topics at you here really quickly,

12
00:00:46,359 --> 00:00:48,797
and there's a short, but steep learning curve.

13
00:00:48,797 --> 00:00:53,683
We're going to explain what a bean is and what a configuration file is as we go.

14
00:00:53,683 --> 00:00:56,954
We just have to show you these two concepts as we dive into it.

15
00:00:56,954 --> 00:01:00,695
We add an @ method level annotation for Bean,

16
00:01:00,695 --> 00:01:05,182
and it looks similar to this where we're saying that what this

17
00:01:05,182 --> 00:01:09,055
method returns is an instance of a bean and that the bean is now

18
00:01:09,055 --> 00:01:13,360
registered inside of Spring and available for us to use inside of

19
00:01:13,360 --> 00:01:14,802
our Spring application.

20
00:01:14,802 --> 00:01:17,580
Classes and method names can be anything.

21
00:01:17,580 --> 00:01:19,627
Spring really doesn't care.

22
00:01:19,627 --> 00:01:25,272
It doesn't have to be named getCustomerRepository or anything specific.

23
00:01:25,272 --> 00:01:27,787
We can call our methods _____ foo just as long as

24
00:01:27,787 --> 00:01:29,878
when it goes to create these beans,

25
00:01:29,878 --> 00:01:33,967
we have them marked as a bean and in a configuration file.

26
00:01:33,967 --> 00:01:38,167
Let's begin by starting to add some of this configuration to

27
00:01:38,167 --> 00:01:41,245
that AppConfig file that we just created.

28
00:01:41,245 --> 00:01:44,305
I've switched back over to our IDE.

29
00:01:44,305 --> 00:01:47,596
I want to go ahead at the class level and say @Configuration.

30
00:01:47,596 --> 00:01:51,057
And you can see that as we're typing it,

31
00:01:51,057 --> 00:01:53,869
it wants to go ahead and suggest what it should be.

32
00:01:53,869 --> 00:01:56,392
We want to choose that second one, the configuration,

33
00:01:56,392 --> 00:01:58,981
not configurable, configuration, and choose it,

34
00:01:58,981 --> 00:02:04,442
and it will automatically import that annotation for us.

35
00:02:04,442 --> 00:02:09,613
Now this signifies that this file is to be used for configuration purposes.

36
00:02:09,613 --> 00:02:12,838
To add a bean, a Spring component down here,

37
00:02:12,838 --> 00:02:15,649
we can start off by just creating a method,

38
00:02:15,649 --> 00:02:19,260
so I want to call this public,

39
00:02:19,260 --> 00:02:24,650
and I want to return an instance of the SpeakerService.

40
00:02:24,650 --> 00:02:29,664
And I'm going to just call this getSpeakerService.

41
00:02:29,664 --> 00:02:35,134
I'm going to use a no arguments method signature.

42
00:02:35,134 --> 00:02:38,344
And I want to return inside of here just a new

43
00:02:38,344 --> 00:02:40,788
instance of that SpeakerServiceImpl.

44
00:02:40,788 --> 00:02:45,609
So I'm going to say return new SpeakerServiceImpl.

45
00:02:45,609 --> 00:02:49,898
And it's even suggesting to return the implementation of it.

46
00:02:49,898 --> 00:02:56,755
So I can save that, and now we have our method signature and structure complete,

47
00:02:56,755 --> 00:03:00,181
but we still need to tell it that this is a bean.

48
00:03:00,181 --> 00:03:03,599
So we want to say @Bean.

49
00:03:03,599 --> 00:03:08,644
And we can optionally, we don't have to, optionally give this a name.

50
00:03:08,644 --> 00:03:11,474
And I'd like to, and I want to call this the speakerService,

51
00:03:11,474 --> 00:03:18,739
and I'm going to do this camel case, just like we would a variable name.

52
00:03:18,739 --> 00:03:20,667
This is it.

53
00:03:20,667 --> 00:03:24,087
We've literally Spring enabled our application.

54
00:03:24,087 --> 00:03:26,648
We've told it to configure this as a Spring app,

55
00:03:26,648 --> 00:03:29,579
and we've created a bean, our speakerService,

56
00:03:29,579 --> 00:03:42,000
and we're going to show you how we transform that out of the application to be in this registry or this configuration that's now a bean.

