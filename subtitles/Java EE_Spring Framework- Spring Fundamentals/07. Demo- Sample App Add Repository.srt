1
00:00:01,938 --> 00:00:03,763
application that we're going to add,

2
00:00:03,763 --> 00:00:06,826
and it's arguably the most complex piece of the

3
00:00:06,826 --> 00:00:10,303
small app that we're going to do, is the repository tier.

4
00:00:10,303 --> 00:00:12,189
I'm going to exit out of fullscreen mode here,

5
00:00:12,189 --> 00:00:14,653
and you want to navigate down to your source,

6
00:00:14,653 --> 00:00:16,674
main, java directory.

7
00:00:16,674 --> 00:00:19,770
Right-click and say New, Java Class.

8
00:00:19,770 --> 00:00:20,478
And just like before,

9
00:00:20,478 --> 00:00:23,524
we're going to enter in our package structure here of com.pluralsight,

10
00:00:23,524 --> 00:00:37,290
but this time we're going to do a repository.HibernateSpeakerRepositoryImpl,

11
00:00:37,290 --> 00:00:39,989
and click Enter, and that should've created another package.

12
00:00:39,989 --> 00:00:41,861
As you can see over here on the left,

13
00:00:41,861 --> 00:00:44,039
I now have the model and repository package,

14
00:00:44,039 --> 00:00:47,639
and then the class would've been named HibernateSpeakerRepositoyImpl,

15
00:00:47,639 --> 00:00:51,599
so make sure yours looks like mine does here.

16
00:00:51,599 --> 00:00:57,179
And you may argue that I don't like having the implementation in the class name,

17
00:00:57,179 --> 00:00:59,380
and I actually agree with you.

18
00:00:59,380 --> 00:01:02,427
The implementation in the class name can sometimes

19
00:01:02,427 --> 00:01:04,718
be thought of as a code smell,

20
00:01:04,718 --> 00:01:07,495
but the beauty of Spring is is that we code to an interface,

21
00:01:07,495 --> 00:01:11,693
so when this is all done, we're going to have a speaker repository interface,

22
00:01:11,693 --> 00:01:14,218
and that's all our app cares about.

23
00:01:14,218 --> 00:01:17,531
We can swap out these back implementations based upon

24
00:01:17,531 --> 00:01:19,463
what stage of development we're in.

25
00:01:19,463 --> 00:01:19,961
In fact,

26
00:01:19,961 --> 00:01:24,183
this is a good practice to do if I have a database team that I'm

27
00:01:24,183 --> 00:01:28,252
waiting for tables or views or those types of things for.

28
00:01:28,252 --> 00:01:32,026
I can create a speaker repository stub and extract

29
00:01:32,026 --> 00:01:36,408
my interface out against that, and my contract will stay the same.

30
00:01:36,408 --> 00:01:38,520
So let's go ahead and add a method inside of here.

31
00:01:38,520 --> 00:01:43,310
We're going to do a public List of Speakers,

32
00:01:43,310 --> 00:01:49,544
and we want to name this method findAll.

33
00:01:49,544 --> 00:01:52,522
And inside of here,

34
00:01:52,522 --> 00:01:56,556
we just want to create a basic list and return some stuff from that,

35
00:01:56,556 --> 00:01:59,536
so we'll say that we have our Speaker,

36
00:01:59,536 --> 00:02:11,435
and this is going to just be speakers = new ArrayList.

37
00:02:11,435 --> 00:02:15,486
And inside of here, we want to create an instance of a speaker,

38
00:02:15,486 --> 00:02:20,913
so we'll say Speaker speaker = new Speaker.

39
00:02:20,913 --> 00:02:24,574
And I'm going to just use my name.

40
00:02:24,574 --> 00:02:27,792
Go ahead and customize it to yours if you want,

41
00:02:27,792 --> 00:02:37,493
say speaker.setFirstName, and I'll put Bryan inside of here,

42
00:02:37,493 --> 00:02:39,215
and speaker.setLastName.

43
00:02:39,215 --> 00:02:43,278
And here we have our basic speaker object,

44
00:02:43,278 --> 00:02:46,080
and we want to add that to our speakers list,

45
00:02:46,080 --> 00:02:52,899
so we'll say speakers.add (speaker), and then,

46
00:02:52,899 --> 00:02:56,943
lastly, return our speakers, and save that.

47
00:02:56,943 --> 00:03:01,118
There are a couple ways we can extract an interface

48
00:03:01,118 --> 00:03:03,465
or create an interface for this.

49
00:03:03,465 --> 00:03:06,271
One is I could navigate over to my source,

50
00:03:06,271 --> 00:03:06,565
main,

51
00:03:06,565 --> 00:03:09,804
java directory again and go into my com.pluralsight

52
00:03:09,804 --> 00:03:13,337
repository package and create a new interface,

53
00:03:13,337 --> 00:03:17,460
but the easier approach is to just right-click inside of my

54
00:03:17,460 --> 00:03:22,369
class and say Refactor and Extract Interface.

55
00:03:22,369 --> 00:03:24,015
It's going to bring up a dialog,

56
00:03:24,015 --> 00:03:28,090
and it's going to ask me what I want for the class to

57
00:03:28,090 --> 00:03:29,982
extract from and the interface name.

58
00:03:29,982 --> 00:03:35,846
I'm going to change this to SpeakerRepository.

59
00:03:35,846 --> 00:03:38,652
And the package is correct and the target is correct,

60
00:03:38,652 --> 00:03:42,423
and I want to choose the findAll():List Speaker

61
00:03:42,423 --> 00:03:46,601
members to make an interface force,

62
00:03:46,601 --> 00:03:51,998
so it's going to extract those method names out into the interface for me.

63
00:03:51,998 --> 00:03:56,766
I'm going to click Refactor, and if this is the first time that you've done this,

64
00:03:56,766 --> 00:03:58,370
it will show you that it's made changes,

65
00:03:58,370 --> 00:04:01,448
and you say, Yes, I want to proceed.

66
00:04:01,448 --> 00:04:05,631
And we haven't used this anywhere else, so we're good to proceed with that.

67
00:04:05,631 --> 00:04:09,021
And we can open this up and see our SpeakerRepository

68
00:04:09,021 --> 00:04:12,243
with our findAll method inside of here.

69
00:04:12,243 --> 00:04:17,306
So it's just gone ahead and changed our implements SpeakerRepository

70
00:04:17,306 --> 00:04:22,406
signature on our class name and created the interface for it.

71
00:04:22,406 --> 00:04:24,770
Now when we're utilizing this inside of our code,

72
00:04:24,770 --> 00:04:33,000
we can just go ahead and reference it by SpeakerRepository rather than that implementation with hibernate in the name.

