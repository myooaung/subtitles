WEBVTT
1
00:00:00.645 --> 00:00:04.027
Getting Spring inside of our application is actually quite easy.

2
00:00:04.027 --> 00:00:06.634
All we have to do is open up our POM,

3
00:00:06.634 --> 00:00:11.355
and I'm going to give myself some whitespace in between our version from our

4
00:00:11.355 --> 00:00:15.267
POM to our build section and add a dependency section.

5
00:00:15.267 --> 00:00:19.728
Inside of here, I'm going to add a dependency,

6
00:00:19.728 --> 00:00:23.394
and the group ID is org.springframework,

7
00:00:23.394 --> 00:00:31.171
and the artifactId is spring-context.

8
00:00:31.171 --> 00:00:33.625
From here, all we have to do is add a version,

9
00:00:33.625 --> 00:00:37.644
and you can look on their website to see what the current version is.

10
00:00:37.644 --> 00:00:46.908
At the time of doing this course, it was 5.2 .0 .RELEASE, and save that.

11
00:00:46.908 --> 00:00:50.403
And you can tell that you've done it right inside of your application if you

12
00:00:50.403 --> 00:00:55.944
look at your external libraries and see that it's imported all of the Spring

13
00:00:55.944 --> 00:00:58.902
libraries with their transitive dependencies.

14
00:00:58.902 --> 00:01:04.468
So you can see there's the spring-context 5.2 .0 that we asked for

15
00:01:04.468 --> 00:01:07.621
directly to be inserted into our application,

16
00:01:07.621 --> 00:01:10.445
but there's the transitive dependencies of Spring AOP,

17
00:01:10.445 --> 00:01:12.532
Spring beans, Spring core, Expression,

18
00:01:12.532 --> 00:01:16.366
and JCL that it pulled in as transitive dependencies.

19
00:01:16.366 --> 00:01:17.611
Now if that doesn't make sense to you,

20
00:01:17.611 --> 00:01:20.846
you may want to go refresh yourself on the Maven

21
00:01:20.846 --> 00:01:22.744
course like I mentioned earlier,

22
00:01:22.744 --> 00:01:32.000
but this should get you up and running for Spring inside of your application. That's really all we had to do to download it and get it into our app.

