WEBVTT
1
00:00:01.307 --> 00:00:01.759
Autowired.

2
00:00:01.759 --> 00:00:05.921
Autowiring is where I would say that most people start to think that

3
00:00:05.921 --> 00:00:10.556
there is some magic that's taking place inside of Spring.

4
00:00:10.556 --> 00:00:14.091
Autowiring is a great technique used to reduce the

5
00:00:14.091 --> 00:00:17.311
wiring up and configuration of code.

6
00:00:17.311 --> 00:00:23.394
If you've ever heard the term convention over configuration, this is it.

7
00:00:23.394 --> 00:00:26.271
To autowire our applications using the Java configuration,

8
00:00:26.271 --> 00:00:31.915
we just simply need to add a component scan to our configuration file

9
00:00:31.915 --> 00:00:33.930
with an annotation that looks something like this.

10
00:00:33.930 --> 00:00:37.482
The text inside of the annotation, com.pluralsight,

11
00:00:37.482 --> 00:00:44.356
just says that this is where I should begin looking for autowired annotations.

12
00:00:44.356 --> 00:00:50.222
To use autowiring, you just mark whatever bean you want as autowired.

13
00:00:50.222 --> 00:00:54.579
You can choose by name, and that uses the @Bean name or by type,

14
00:00:54.579 --> 00:00:56.671
and that uses the instance type.

15
00:00:56.671 --> 00:01:01.309
One thing I like about the Java configuration over XML

16
00:01:01.309 --> 00:01:04.322
configuration for autowiring is that using Java,

17
00:01:04.322 --> 00:01:07.563
I can mix pieces that I want and it feels more natural,

18
00:01:07.563 --> 00:01:13.262
so I can have a bean that I defined as autowired with another bean into it,

19
00:01:13.262 --> 00:01:21.000
and it makes more sense where those beans are coming from. We'll show you how that configuration plays out in this next demo.

