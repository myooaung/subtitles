1
00:00:01,245 --> 00:00:02,486
How does this all work?

2
00:00:02,486 --> 00:00:05,825
Great, we've seen that it can reduce business focus for us,

3
00:00:05,825 --> 00:00:07,527
but how does it do this?

4
00:00:07,527 --> 00:00:11,531
Well, as I mentioned earlier, everything in Spring is a simple POJO,

5
00:00:11,531 --> 00:00:13,604
a plain old Java object.

6
00:00:13,604 --> 00:00:16,454
Spring itself can be thought of as a glorified HashMap.

7
00:00:16,454 --> 00:00:19,905
It's actually called the application context.

8
00:00:19,905 --> 00:00:23,263
The application context is the configured Spring container

9
00:00:23,263 --> 00:00:27,194
with all of the dependencies wired up in it.

10
00:00:27,194 --> 00:00:29,271
Now I don't want to simplify it too much.

11
00:00:29,271 --> 00:00:33,314
It's doing more than just creating a HashMap and shoving objects in there,

12
00:00:33,314 --> 00:00:36,219
but I also don't want people to be afraid of it because

13
00:00:36,219 --> 00:00:38,465
there's too much going on behind the scenes.

14
00:00:38,465 --> 00:00:42,359
There's too much magic happening with Spring because there's really not.

15
00:00:42,359 --> 00:00:47,702
Spring can also be used as a registry and that's how I'm going to

16
00:00:47,702 --> 00:00:50,200
show you to start with because we're just going to use a little

17
00:00:50,200 --> 00:00:52,430
main method and an application to run it.

18
00:00:52,430 --> 00:01:00,000
But to really get all the benefit of Spring, we'll go through its wiring constructs and use it to autowire our application.

