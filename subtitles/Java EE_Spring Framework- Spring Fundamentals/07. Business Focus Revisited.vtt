WEBVTT
1
00:00:01.155 --> 00:00:03.217
Let's look at that business focus slide again,

2
00:00:03.217 --> 00:00:06.050
the JDBC code that we had looked at earlier,

3
00:00:06.050 --> 00:00:10.562
and show what it could look like by using the Spring Framework.

4
00:00:10.562 --> 00:00:13.935
This was our code before with all of the getConnection,

5
00:00:13.935 --> 00:00:16.708
DriverManager, prepareStatement stuff,

6
00:00:16.708 --> 00:00:20.051
that huge finally block that essentially does

7
00:00:20.051 --> 00:00:22.923
nothing but close connections for us.

8
00:00:22.923 --> 00:00:28.209
And then let's see what that code could look like while utilizing Spring.

9
00:00:28.209 --> 00:00:31.580
Now I will say that this one particular library in Spring,

10
00:00:31.580 --> 00:00:35.796
not necessarily Spring core, that this is the Spring JDBC template code,

11
00:00:35.796 --> 00:00:40.407
but it's the same concept that we're trying to drive in Spring.

12
00:00:40.407 --> 00:00:45.110
Notice that nowhere in here has it mentioned a connection result set,

13
00:00:45.110 --> 00:00:48.503
a prepared statement, a DriverManager.

14
00:00:48.503 --> 00:00:50.751
It doesn't talk about closing any of that stuff off.

15
00:00:50.751 --> 00:00:56.165
In fact, there's not even a try catch finally statement in here at all.

16
00:00:56.165 --> 00:00:59.015
We have our find by and our return statement,

17
00:00:59.015 --> 00:01:02.619
and this is using the EntityManager stuff in there,

18
00:01:02.619 --> 00:01:08.038
but this example of a template method pattern is just being done for us.

19
00:01:08.038 --> 00:01:11.299
This is one of those cases where Spring is using a template method pattern,

20
00:01:11.299 --> 00:01:16.024
and we don't really have to know how or what it's doing behind the scenes.

21
00:01:16.024 --> 00:01:20.766
Now this may scare some of you that there is this huge black box with Spring,

22
00:01:20.766 --> 00:01:24.596
and I hope to alleviate those concerns for you throughout this course,

23
00:01:24.596 --> 00:01:28.270
but look at how much smaller and more condensed this code is,

24
00:01:28.270 --> 00:01:31.282
and it's really just doing what we want it to do.

25
00:01:31.282 --> 00:01:39.000
There's no reason we should have to write what's on the left for every query we need to make inside of our application.

