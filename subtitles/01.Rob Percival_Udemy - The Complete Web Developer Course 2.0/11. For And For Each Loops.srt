1
00:00:00,360 --> 00:00:07,620
Loops along with if statements are one of the fundamental ways of affecting the flow of your code modern

2
00:00:07,620 --> 00:00:10,910
computer programs simply wouldn't be possible without loops.

3
00:00:11,730 --> 00:00:16,680
And it's pretty easy to imagine where they might be used for example when your G-mail is showing you

4
00:00:16,680 --> 00:00:17,690
all of your emails.

5
00:00:17,760 --> 00:00:22,680
That's a loop because it's looping through all of the emails that it finds in the database and then

6
00:00:22,680 --> 00:00:23,880
displaying them to you.

7
00:00:23,910 --> 00:00:26,450
So loops are definitely something you're going to need to get to grips with.

8
00:00:26,590 --> 00:00:29,720
And I'm going to start by showing you the follow.

9
00:00:30,090 --> 00:00:32,200
So we start off with our FOR loop.

10
00:00:32,340 --> 00:00:34,740
Exactly as in Javascript.

11
00:00:34,740 --> 00:00:41,040
And then if you remember in javascript we start off by creating our counter variable which usually we

12
00:00:41,040 --> 00:00:44,740
call something like I and setting it equal to its initial value.

13
00:00:45,120 --> 00:00:47,770
So we do exactly the same in Page Pate.

14
00:00:48,390 --> 00:00:52,460
We set I is equal to zero.

15
00:00:53,560 --> 00:00:59,000
Then as in javascript we set the conditions for the loop to continue.

16
00:00:59,250 --> 00:01:05,780
So we might want to keep going as long as I is less than 10 for example.

17
00:01:06,960 --> 00:01:13,710
And then once we've got the initial condition and the condition for the loop to be true we set the rule

18
00:01:13,740 --> 00:01:19,650
for what happens to each time it goes around the loop and the usual one which hopefully I remember is

19
00:01:19,710 --> 00:01:26,510
I plus plus which is another way of saying increment I buy one or increase by one each time.

20
00:01:28,910 --> 00:01:30,970
So that's how we define our loop.

21
00:01:31,370 --> 00:01:40,080
And then I'm just going to display each item in the loop separated by a line break.

22
00:01:44,270 --> 00:01:44,540
All right.

23
00:01:44,540 --> 00:01:45,650
So a very quick question for you.

24
00:01:45,650 --> 00:01:56,550
Can you tell me what values will actually be displayed on the page when I run that code.

25
00:01:56,570 --> 00:01:58,160
Did you get it.

26
00:01:58,160 --> 00:01:58,940
Take a look.

27
00:01:59,120 --> 00:02:02,830
So starting with 0 of course and then increasing by 1 each time.

28
00:02:02,830 --> 00:02:07,580
And we don't get the 10 that was maybe the slightly tricky part of the question because this keeps going

29
00:02:07,610 --> 00:02:09,810
as long as it's less than 10.

30
00:02:10,160 --> 00:02:16,270
If we wanted to include 10 then we would have to change that to less than or equal to.

31
00:02:16,280 --> 00:02:16,600
All right.

32
00:02:16,610 --> 00:02:23,990
Another quick challenge can you change this so that we get all the even numbers from 2 to 30 inclusive

33
00:02:24,710 --> 00:02:35,010
all the even numbers from 2 to 30 inclusive different.

34
00:02:35,210 --> 00:02:36,860
Did you get it.

35
00:02:36,860 --> 00:02:39,480
We just need to start at 2.

36
00:02:39,790 --> 00:02:47,980
Keep going as long as I'm less than or equal to 30 and then increase I by two every time.

37
00:02:49,830 --> 00:02:56,920
And the command for that is that say I equals I plus two and that should give us 2 4 6 8 all the way

38
00:02:56,920 --> 00:03:00,700
up to 30 just to change everything around a little bit.

39
00:03:00,700 --> 00:03:04,060
Can you do a count down from 10 to zero.

40
00:03:04,060 --> 00:03:06,180
So all the way down from 10 to 0.

41
00:03:06,190 --> 00:03:09,190
Ten nine eight seven six five four three two one zero.

42
00:03:09,520 --> 00:03:10,090
Go for it.

43
00:03:15,610 --> 00:03:16,940
OK.

44
00:03:17,940 --> 00:03:18,820
So you got that.

45
00:03:18,820 --> 00:03:20,660
So we want to start at 10.

46
00:03:20,920 --> 00:03:27,180
We want to keep going as long as I is greater than or equal to zero.

47
00:03:27,850 --> 00:03:37,900
And then we want to decrease one by eye every time and we can actually do that using minus minus something

48
00:03:38,150 --> 00:03:41,780
like 10 on it's of his ex-wife or three two one zero.

49
00:03:41,980 --> 00:03:42,860
Great.

50
00:03:43,470 --> 00:03:43,970
OK.

51
00:03:44,200 --> 00:03:51,160
So one of the most useful uses of for loops is looping through arrays and that's the couple of examples

52
00:03:51,160 --> 00:03:55,720
that I gave you were looping through tweets or emails.

53
00:03:55,780 --> 00:04:01,230
They would likely be stored as arrays on the server which was providing them to you.

54
00:04:01,690 --> 00:04:03,960
And we can use for loops to do that.

55
00:04:03,970 --> 00:04:09,630
So let's set up our good old family right.

56
00:04:10,420 --> 00:04:11,620
Can't go wrong.

57
00:04:11,630 --> 00:04:20,440
We're up Kersten Tommy and Ralphie.

58
00:04:20,930 --> 00:04:26,030
And in fact also this is a little challenge so can you set up a for loop just like this which displays

59
00:04:26,060 --> 00:04:38,420
each of the values of family in 10 different.

60
00:04:38,440 --> 00:04:39,080
All right.

61
00:04:39,080 --> 00:04:40,840
How did you manage that.

62
00:04:40,980 --> 00:04:47,820
You should have done something like creating and setting it equal to zero initially.

63
00:04:48,430 --> 00:04:54,120
And we want to keep going as long as pie is less than.

64
00:04:54,470 --> 00:04:58,850
So this is going to be 0 1 2 3.

65
00:04:58,920 --> 00:05:09,240
So we want to keep going as long as I is less than four or alternatively we could use size of and family

66
00:05:10,460 --> 00:05:16,340
bonus points if you did it that way because that's more flexible because it allows us to add I add people

67
00:05:16,340 --> 00:05:18,150
to the family or indeed remove them.

68
00:05:18,300 --> 00:05:20,180
And this code will still work.

69
00:05:21,360 --> 00:05:30,480
So well on a few If you did that and then we just increment i each time and then to display them.

70
00:05:30,490 --> 00:05:39,610
We use family and then we want the youth one each time and we have a line break in them as well.

71
00:05:39,610 --> 00:05:41,140
There we go.

72
00:05:41,710 --> 00:05:43,450
So that's how to do it with a for loop.

73
00:05:43,630 --> 00:05:51,520
But there's a really nice alternative method which actually my favorite type of loop in HP and that

74
00:05:51,520 --> 00:05:59,020
is the foreach which basically builds this in so you don't have to write out all those fiddly settings

75
00:05:59,020 --> 00:06:00,390
every time.

76
00:06:00,520 --> 00:06:02,690
And the for loop works like this.

77
00:06:04,560 --> 00:06:10,860
So we take out a right family and we want to loop through it as.

78
00:06:11,580 --> 00:06:19,090
And then we specify the variables that we want to contain the key or the index.

79
00:06:19,320 --> 00:06:22,820
And then this our symbol again equals and greater than

80
00:06:25,810 --> 00:06:28,250
and value.

81
00:06:28,270 --> 00:06:34,540
So what this will do is it will loop through all of the items in the family array and we can do something

82
00:06:34,540 --> 00:06:38,140
with them involving their key and their value.

83
00:06:38,740 --> 00:06:42,610
So if I just want to display them for example then I could say

84
00:06:45,900 --> 00:06:56,290
all right I am and then key is and then follow you.

85
00:06:56,800 --> 00:07:03,270
And that will loop through all of them and give us both the key of the index and the value.

86
00:07:03,280 --> 00:07:05,390
Let's put a line break in the

87
00:07:10,700 --> 00:07:12,120
Geiser array item 0.

88
00:07:12,130 --> 00:07:15,240
Is Robert rafted one is Caston et cetera.

89
00:07:15,660 --> 00:07:18,630
And that's not only a great way to display the items in an array.

90
00:07:18,720 --> 00:07:22,320
You can also use it to amend them or change them in some way.

91
00:07:22,340 --> 00:07:28,350
So if I wanted to pop the surname onto each of these in fact see if you can work out how to do that

92
00:07:28,710 --> 00:07:35,770
can you add Percival to the end of each of these names in one line within this for each loop.

93
00:07:36,150 --> 00:07:36,720
Go for it.

94
00:07:43,510 --> 00:07:44,100
OK.

95
00:07:44,240 --> 00:07:49,550
So all it is is we'd find family

96
00:07:52,110 --> 00:07:57,010
and key and this will get the one that we're working with at the moment and we want to set about equal

97
00:07:57,020 --> 00:08:05,610
to a value and then we append to that Percival

98
00:08:08,470 --> 00:08:08,890
and that's it.

99
00:08:08,890 --> 00:08:15,630
So that we'll get the value as it was and append Percival to it and then save that to the array itself.

100
00:08:15,670 --> 00:08:16,930
Let's have a look.

101
00:08:17,010 --> 00:08:18,170
Great.

102
00:08:18,310 --> 00:08:22,520
So you notice it hasn't appended it up here because this value was what we had before.

103
00:08:22,540 --> 00:08:27,820
But it has appended it when we loop through the second time just like that.

104
00:08:27,950 --> 00:08:28,370
Great.

105
00:08:28,420 --> 00:08:34,270
So we'll be using foreach loops a lot as we go through arrays and especially when working with series

106
00:08:34,270 --> 00:08:36,460
of items in databases for example.

107
00:08:36,460 --> 00:08:40,420
But there is a third type of leap that I want to show you which again is particularly useful when it

108
00:08:40,420 --> 00:08:43,300
comes to databases and that is the while loop.
