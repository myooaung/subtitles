WEBVTT
1
00:00:00.240 --> 00:00:05.190
Now that we've seen how to retrieve data from a database Let's see how we added in.

2
00:00:05.190 --> 00:00:09.870
So you would use this for example if someone signing up to your website once they've signed up successfully

3
00:00:09.890 --> 00:00:15.540
you're going to have their user name and password to your database so that they can log in later on

4
00:00:15.540 --> 00:00:16.260
as well.

5
00:00:17.280 --> 00:00:21.350
So we do this in a similar way to how we retrieved the data.

6
00:00:21.390 --> 00:00:29.410
We start off with a query and then we're going to write some Majeski Well and that's going to insert

7
00:00:29.440 --> 00:00:31.740
the data that we need.

8
00:00:32.470 --> 00:00:38.650
So as before it's fairly straightforward I say well it's insert into.

9
00:00:39.040 --> 00:00:44.470
So we're obviously inserting some data into a table and then the table that we want to insert into A

10
00:00:45.160 --> 00:00:56.770
is uses and then we put the names of the fields that we want to insert values into and then we have

11
00:00:56.770 --> 00:00:58.670
a pair of parentheses.

12
00:00:58.780 --> 00:01:04.330
And inside these parentheses we're going to put the names of the fields that we want to include values

13
00:01:04.330 --> 00:01:05.250
for.

14
00:01:05.860 --> 00:01:12.310
So those two fields for us are email and password.

15
00:01:12.500 --> 00:01:14.090
Or you can just leave them like that.

16
00:01:14.120 --> 00:01:20.920
But it's a good habit to get into to surround them with those quotes.

17
00:01:20.970 --> 00:01:23.480
That's essentially an acute accent.

18
00:01:23.720 --> 00:01:26.880
And for me it's next to the Zed key on my keyboard.

19
00:01:27.170 --> 00:01:33.220
It's not quite a quote but it's what we used to contain the names of fields in my school.

20
00:01:33.350 --> 00:01:38.430
And we also use it to contain the names of tables if you want to.

21
00:01:38.520 --> 00:01:43.340
Again that would work with or without but it is a good habit to get into.

22
00:01:45.140 --> 00:01:50.590
And then we put the values that we want to have for them.

23
00:01:50.690 --> 00:01:52.730
And again these are in parentheses.

24
00:01:52.730 --> 00:01:57.190
But for values we use the normal single quites.

25
00:01:57.410 --> 00:02:00.890
So I've already signed up to this.

26
00:02:01.830 --> 00:02:07.230
So let's have Keston First of all the current UK as our next user.

27
00:02:07.290 --> 00:02:15.500
So I'm putting her in single quites there and then let's give her a decent password.

28
00:02:17.160 --> 00:02:22.140
That way she's much more secure than I am.

29
00:02:22.340 --> 00:02:24.980
So that's how queery that's how you.

30
00:02:26.120 --> 00:02:27.610
And then run that query.

31
00:02:27.830 --> 00:02:30.390
We do it in the same way that we did before.

32
00:02:31.160 --> 00:02:43.100
So my ask you well I underscore a query and then link and query.

33
00:02:43.240 --> 00:02:43.980
All right.

34
00:02:44.040 --> 00:02:50.460
That won't return anything in itself other than a success but we will be able to see in my admin that

35
00:02:50.460 --> 00:02:51.890
it's been added.

36
00:02:52.770 --> 00:02:59.790
So let's just save that and run it and the results will be exactly the same because this code that we've

37
00:03:00.060 --> 00:03:03.370
got here only returns the first item.

38
00:03:03.600 --> 00:03:06.990
We'll see how to return more than one item in the next video.

39
00:03:07.380 --> 00:03:11.980
So let's jump back into HP my admin to see if this really has worked.

40
00:03:12.030 --> 00:03:20.280
A quick way to get that if you know the IP address of your database is to start typing the IP address.

41
00:03:20.280 --> 00:03:32.550
So for us it's 79 to 1 7 0 4 4 2 1 2 5 and then slash ph P my admin and then that will take you straight

42
00:03:32.550 --> 00:03:40.780
to PH my admin and from there you can enter the username and password for the database itself.

43
00:03:44.020 --> 00:03:49.730
And that will get you an OK so fingers crossed.

44
00:03:49.730 --> 00:03:55.810
We now have a new item of data in our users table and there it is fantastic.

45
00:03:56.240 --> 00:03:59.830
So let's just add one more item.

46
00:03:59.930 --> 00:04:01.550
So let's put Tommy in here.

47
00:04:03.720 --> 00:04:05.280
You can be at gmail dot com

48
00:04:09.320 --> 00:04:15.910
and we'll give him probably the sort of password that he'll go for when he grows up.

49
00:04:15.950 --> 00:04:16.880
So let's refresh.

50
00:04:16.880 --> 00:04:21.080
That's And there we go.

51
00:04:21.100 --> 00:04:23.870
So now we've got three items in our database.

52
00:04:23.890 --> 00:04:25.600
What if we want to update some of these.

53
00:04:25.600 --> 00:04:29.120
So say someone wants to change their e-mail address or change their password.

54
00:04:29.470 --> 00:04:31.530
Well that's actually pretty straightforward as well.

55
00:04:33.400 --> 00:04:38.620
So I'm just going to comment out that query to leave it in there but we don't want to add those.

56
00:04:38.620 --> 00:04:40.910
Every time we run the script.

57
00:04:41.030 --> 00:04:42.740
So let's have a new query.

58
00:04:44.270 --> 00:04:46.660
And this is going to be an update query.

59
00:04:49.850 --> 00:04:53.470
So say we want to update my e-mail address to something else.

60
00:04:53.690 --> 00:05:01.410
Then we can have update and then the table name contained by the acute accent then.

61
00:05:01.640 --> 00:05:13.960
So we want to update the users table and we want to set the email to and then say I changed my email

62
00:05:13.960 --> 00:05:19.800
address to wrote Percival 80 at gmail dot com.

63
00:05:19.930 --> 00:05:27.800
Now if I ran that query that would update the email address of all of these two or 80 at gmail dot com

64
00:05:27.890 --> 00:05:30.390
which is something we obviously do not want to do.

65
00:05:30.570 --> 00:05:35.600
And it's a very dangerous sort of a query to have because if you code it wrong you could lose all the

66
00:05:35.600 --> 00:05:37.570
data in your database.

67
00:05:37.610 --> 00:05:45.170
So we want to set a where instruction which limits which rows of the table will be updated.

68
00:05:45.170 --> 00:05:55.550
So you can see my ID is 1 so we can limit that to where ID is equal to one that will only update the

69
00:05:55.550 --> 00:06:04.610
users table for my particular way and what I like doing is something that is kind of an extra safety

70
00:06:04.970 --> 00:06:10.740
net that whenever you are doing an update You should always put a limit at the end.

71
00:06:10.740 --> 00:06:14.780
And what that does is simply limit the number of rows that it will update.

72
00:06:14.780 --> 00:06:21.350
So if you're only expecting one user to be updated then put limit one at the end and that just saves

73
00:06:21.350 --> 00:06:27.680
you from writing a piece of bad code or making a mistake which then updates the whole of your database

74
00:06:27.980 --> 00:06:32.990
and loses you a bunch of data which is definitely something you want to avoid.

75
00:06:32.990 --> 00:06:33.680
All right.

76
00:06:33.680 --> 00:06:34.540
So let's have a look.

77
00:06:38.470 --> 00:06:38.930
OK.

78
00:06:39.020 --> 00:06:43.790
You can see that actually worked straight away because that first result that's returned.

79
00:06:43.800 --> 00:06:50.300
Been changed from Rob Percival but how do you get to a possibility at gmail dot com if we have a look

80
00:06:50.390 --> 00:06:53.020
in the database on page we might admit as well.

81
00:06:53.060 --> 00:07:00.350
You can see that that's updated that quite is a mini challenge for you then can you change my password

82
00:07:01.790 --> 00:07:08.420
to something rather more secure than that but instead of using the ID in the WHERE clause I'd like to

83
00:07:08.420 --> 00:07:19.860
use my e-mail address airfreight.

84
00:07:19.880 --> 00:07:20.560
All right.

85
00:07:20.660 --> 00:07:21.980
How did you manage that.

86
00:07:22.370 --> 00:07:24.870
So let's just get rid of all of this.

87
00:07:25.020 --> 00:07:26.480
Obviously the first bit stays the same.

88
00:07:26.480 --> 00:07:30.630
Update uses this time we want to set the password.

89
00:07:30.680 --> 00:07:40.400
He will say and then let's just pick some random string that we get in single quotes of course and we

90
00:07:40.400 --> 00:07:50.440
want to do that this time where e-mail is equal to a and then Rob Percival 80 at gmail dot com.

91
00:07:50.700 --> 00:07:58.010
And because this is a string we need to put it in single quotes when we had I.D. was 1 1 is not a string

92
00:07:58.010 --> 00:07:59.540
here it's stored as an integer.

93
00:07:59.540 --> 00:08:04.390
So we didn't need quites but for a string you take.

94
00:08:04.460 --> 00:08:06.960
And just to be safe we'll pop.

95
00:08:06.990 --> 00:08:08.540
Limit 1 on the end

96
00:08:11.490 --> 00:08:11.950
OK.

97
00:08:12.060 --> 00:08:13.780
Let's take a look.

98
00:08:14.250 --> 00:08:17.440
That's updated the password as well quite.

99
00:08:17.580 --> 00:08:21.510
So that's how we insert an update data in our database.

100
00:08:21.720 --> 00:08:27.360
In the next video we'll see how we can return more than one result from a query and also how we can

101
00:08:27.360 --> 00:08:33.990
do more advanced queries that allow us to select particular columns from our database and to be more

102
00:08:33.990 --> 00:08:38.020
fussy about the sort of uses that get selected as well.

103
00:08:38.370 --> 00:08:38.840
See them.
