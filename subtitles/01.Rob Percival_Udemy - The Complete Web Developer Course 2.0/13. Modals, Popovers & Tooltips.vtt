WEBVTT
1
00:00:00.360 --> 00:00:05.850
The bootstrap components that we looked at in the previous video were mostly about style about how our

2
00:00:05.850 --> 00:00:09.750
various elements looked in this video.

3
00:00:09.750 --> 00:00:14.790
We'll be looking at ones that are more about function and we'll be doing a bit of Jey queries as well

4
00:00:14.790 --> 00:00:16.700
to interact with those elements.

5
00:00:17.370 --> 00:00:26.990
And I'm going to start by looking at modals which are essentially pop up boxes to show your user some

6
00:00:26.990 --> 00:00:32.300
information or to allow them to do its particular action like send a tweet or something like that.

7
00:00:33.560 --> 00:00:34.400
So they're really useful.

8
00:00:34.400 --> 00:00:41.930
And again you can use them without any javascript but we can use some javascript if we want to do something

9
00:00:41.930 --> 00:00:43.680
a bit more fancy.

10
00:00:43.820 --> 00:00:46.520
So I'm going for the live demo option.

11
00:00:49.630 --> 00:00:51.250
Which I want to run on my site.

12
00:00:51.430 --> 00:00:56.980
I don't want to spoil the surprise by trying it on the bootstrap site to see how it looks.

13
00:00:56.980 --> 00:01:07.450
I've copied the whole code I'm going to get rid of everything here and then paste that code in.

14
00:01:07.450 --> 00:01:11.430
So let's take a look and see what it does and then we'll run through the code.

15
00:01:11.530 --> 00:01:17.740
So we've got now is a button click that motile appears.

16
00:01:17.970 --> 00:01:21.450
So you can see it's got this nice kind of slide in from the top.

17
00:01:21.540 --> 00:01:26.610
It fades out the background and makes the background clickable as well in that you can interact with

18
00:01:26.610 --> 00:01:26.870
it.

19
00:01:26.940 --> 00:01:31.350
But if you do click on the background it closes the modal which is what the user would expect.

20
00:01:31.440 --> 00:01:33.150
And you've got two different buttons.

21
00:01:33.200 --> 00:01:34.730
A close and a.

22
00:01:34.830 --> 00:01:40.050
That could be a send button or an OK button depending on what the motor was doing.

23
00:01:40.060 --> 00:01:43.140
So hopefully you can imagine a huge number of uses for that.

24
00:01:43.230 --> 00:01:45.900
Let's have a quick look and see how the code works.

25
00:01:46.920 --> 00:01:49.420
So the bus in itself is pretty straight forward.

26
00:01:49.420 --> 00:01:54.160
It's just a button with classes to make it large and blue.

27
00:01:54.820 --> 00:01:58.070
But we're toggling the existence of a motile here.

28
00:01:58.210 --> 00:02:03.940
And the particular modal the target that we're working with has an ID of my motile and that's it.

29
00:02:03.940 --> 00:02:07.920
That's all we need to give to the button on the modem itself.

30
00:02:07.960 --> 00:02:13.210
We've got a div with a class of motile and then Faid because this is going to be fading motile you can

31
00:02:13.210 --> 00:02:19.350
see if we remove the Faid class it still appears just a little bit more quickly.

32
00:02:19.420 --> 00:02:23.470
So the phase kind of brings in a gradual slide from the top.

33
00:02:23.800 --> 00:02:30.460
We've got that idea then this new attribute Kuttab index this is used because a lot of people navigate

34
00:02:30.460 --> 00:02:34.740
through Web sites using the tab button or particularly through forms because the tab button can take

35
00:02:34.740 --> 00:02:37.630
you from one form input to the next.

36
00:02:37.630 --> 00:02:41.030
But we wouldn't want a user that was doing that to end up on our mobile.

37
00:02:41.080 --> 00:02:47.440
We set the tab index to minus one and then anything on this Modal won't be considered part of the tap

38
00:02:47.440 --> 00:02:50.980
flow as the use of taps through the content of the main page.

39
00:02:51.070 --> 00:02:56.860
The role of the modal is a dialog box dialog essentially is another word for modal and then got some

40
00:02:56.860 --> 00:02:59.920
accessibility information as well.

41
00:03:00.070 --> 00:03:03.220
Then we've got another div within that which has a class of modal dialog.

42
00:03:03.220 --> 00:03:08.380
This is the document so this is a kind of container for the modal itself.

43
00:03:08.510 --> 00:03:10.720
Then we've got a container for the modal.

44
00:03:10.720 --> 00:03:15.460
Then we've got a container for the head part of the modal bit easier if we can see them.

45
00:03:16.120 --> 00:03:16.880
So there it is.

46
00:03:16.930 --> 00:03:23.320
So the header has the X button on the right there which we saw in the previous video when we were looking

47
00:03:23.320 --> 00:03:24.190
at alerts.

48
00:03:24.340 --> 00:03:26.370
It says exactly the same as that.

49
00:03:26.620 --> 00:03:33.500
And then we've got an H for with a particular class of modal title to fit in with the modal and ID.

50
00:03:33.550 --> 00:03:39.130
And then the title itself then the modal body so we can put anything in there and then the modal furter

51
00:03:39.400 --> 00:03:44.980
which generally will contain buttons to either do something or not do something depending on what the

52
00:03:44.980 --> 00:03:46.220
user chooses.

53
00:03:46.720 --> 00:03:49.650
So hopefully you get the idea that's how modals work.

54
00:03:49.810 --> 00:03:56.010
But I want to use modals as a quick example of how we can use Jey query to interact bootstrap component

55
00:03:56.080 --> 00:03:57.660
such as a mobile.

56
00:03:58.300 --> 00:04:08.880
So if we go back and have a look at the bootstrap page on modals you can see we've got options and methods

57
00:04:08.940 --> 00:04:10.340
and events here.

58
00:04:10.680 --> 00:04:15.250
So you'll remember hopefully those from when we were looking at Jay Querrey plug ins specifically Jacquier

59
00:04:15.300 --> 00:04:21.990
UI so options are things that we can add to our motile to make it display in a certain way.

60
00:04:21.990 --> 00:04:24.900
Methods are making the motile do something.

61
00:04:24.900 --> 00:04:30.840
So with methods we can make the modal do some things so toggle its existence for example show or hide

62
00:04:30.990 --> 00:04:32.770
or apply some options to it.

63
00:04:33.060 --> 00:04:39.040
And finally events are things that happen when the modem is interacting with.

64
00:04:39.060 --> 00:04:43.410
So we might want to do something when the modem is shown for example and that's what I'm going to do

65
00:04:43.410 --> 00:04:44.080
here.

66
00:04:44.340 --> 00:04:53.770
I'm going to imagine that we've got three buttons which are all contacts buttons which send an e-mail.

67
00:04:54.410 --> 00:05:00.710
So let's change our code from launch demo modal to e-mail.

68
00:05:00.740 --> 00:05:11.590
Rob and then I'm going to have a second button email Keston and let's have a third button.

69
00:05:13.490 --> 00:05:18.440
Email to me Rafi's too young to get e-mail at this point.

70
00:05:18.440 --> 00:05:19.150
There we go.

71
00:05:19.460 --> 00:05:22.010
So each of these links to the same motile

72
00:05:26.360 --> 00:05:32.470
at that moment and what we want to avoid doing is having three completely different modals for each

73
00:05:32.470 --> 00:05:35.650
of these because they're all going to have very similar code.

74
00:05:35.650 --> 00:05:37.390
The only thing different is the e-mail address.

75
00:05:37.540 --> 00:05:48.030
So let's see how we can work with the query in Bootstrap to make that happen with just one motile code.

76
00:05:48.160 --> 00:05:49.870
So I jump through a lot of options there.

77
00:05:50.140 --> 00:05:54.280
You're very welcome to look at those in more detail if you like but I'm more interested in the code

78
00:05:54.280 --> 00:05:55.240
at this point.

79
00:05:55.660 --> 00:05:58.770
So this is the main thing that we're going to be using.

80
00:05:59.080 --> 00:06:03.560
So we use a J-20 selector as usual to select all modal.

81
00:06:03.580 --> 00:06:11.080
And what we're looking at is we're looking at the event when the motile is shown and this is called

82
00:06:11.080 --> 00:06:13.580
here show top bootstrap model.

83
00:06:13.600 --> 00:06:19.510
Then when that happens we want to call a function which is the code that we can add down here.

84
00:06:19.900 --> 00:06:25.480
And that function is going to have a variable called event which as we've seen before contains a bit

85
00:06:25.480 --> 00:06:29.430
of information about what triggered the motile.

86
00:06:29.500 --> 00:06:36.320
So let's copy everything over and see if we can figure a way to integrate it with our code so I'm going

87
00:06:36.320 --> 00:06:41.450
to put my Jay queery Kate in its own script.

88
00:06:46.290 --> 00:06:50.730
S. But make sure you do it after Jay query and bootstrap.

89
00:06:50.800 --> 00:06:53.940
Otherwise you may have problems.

90
00:06:54.130 --> 00:06:58.240
So let's get rid of these comments for the moment.

91
00:07:00.740 --> 00:07:02.260
And in the end everything

92
00:07:05.040 --> 00:07:09.640
nicely.

93
00:07:09.730 --> 00:07:11.820
So let's work our way through this.

94
00:07:11.840 --> 00:07:17.560
But invariable we get from event this variable here not related target.

95
00:07:17.710 --> 00:07:25.240
So that gives us the button that was clicked and then we can take from that button it's data attributes.

96
00:07:25.240 --> 00:07:37.570
So for example I might want to get the data name attribute and then I could very neatly set data Dasch

97
00:07:37.930 --> 00:07:41.520
name attribute for each of these.

98
00:07:41.530 --> 00:07:42.070
So Rob

99
00:07:45.910 --> 00:07:46.630
Keston

100
00:07:49.830 --> 00:07:56.680
and tell me and then I would I would be able to access that down here.

101
00:07:56.700 --> 00:08:08.790
So for now before I do anything too fancy that's a lot recipient and we should find then that now when

102
00:08:08.790 --> 00:08:11.010
we click on the button as well as launching the modal

103
00:08:15.460 --> 00:08:16.790
it does the.

104
00:08:16.860 --> 00:08:18.420
But of course it doesn't.

105
00:08:18.420 --> 00:08:21.250
Why is that.

106
00:08:21.310 --> 00:08:29.740
I think because I've kept it as example motile rather than my mobile which was the ID of the correct

107
00:08:29.830 --> 00:08:36.070
motile that we actually used one of the dangers of copying and pasting especially from two different

108
00:08:36.070 --> 00:08:37.160
sections.

109
00:08:37.480 --> 00:08:38.500
There we go.

110
00:08:38.530 --> 00:08:43.500
So now we've got our alert and motile as well.

111
00:08:46.090 --> 00:08:52.610
Let's put those back in then we're using this this key word that we've seen before.

112
00:08:52.800 --> 00:08:55.050
It's the motile that we're working with here.

113
00:08:55.100 --> 00:09:04.500
So it's essentially my motile so I could use that as well and it would work exactly the same but this

114
00:09:04.500 --> 00:09:08.940
makes it a bit more flexible if you update the ID here for some reason you don't need to update it there

115
00:09:08.940 --> 00:09:10.020
as well.

116
00:09:10.110 --> 00:09:16.620
And then we're looking within the motile and we're finding the class of modal title and then we're changing

117
00:09:16.620 --> 00:09:25.590
that to have a text of new message to and then recipient and then we're updating an input there but

118
00:09:25.590 --> 00:09:28.200
we don't have that input so I'm just going to get rid of that bit.

119
00:09:30.820 --> 00:09:42.880
So now when we run it we should find that we get new message to rub a new message to cast an and new

120
00:09:42.880 --> 00:09:45.960
message to tell me.

121
00:09:46.140 --> 00:09:46.600
All right.

122
00:09:46.650 --> 00:09:49.070
So that's how we work with the javascript here.

123
00:09:49.080 --> 00:09:50.880
I'm going to give you a quick challenge.

124
00:09:50.970 --> 00:09:58.580
Can you do something similar so that when the modal is closed you get an alert saying modal closed.

125
00:09:58.590 --> 00:10:01.190
So really simple when the modal is closed.

126
00:10:01.290 --> 00:10:05.530
Whichever one it is you get an alert saying modal closed.

127
00:10:05.880 --> 00:10:14.690
Go for it.

128
00:10:14.740 --> 00:10:16.470
Did you manage it.

129
00:10:16.660 --> 00:10:22.540
You may have gone back to the bootstrap page to have a look at the events.

130
00:10:22.540 --> 00:10:26.540
I think this one is going to be the one that we're interested in but let's have a look at the events.

131
00:10:26.590 --> 00:10:29.600
So we've got high heat bootstrap motile.

132
00:10:29.680 --> 00:10:34.520
We could also use hidden bootstrap motile which happens when the hiding process is complete.

133
00:10:37.260 --> 00:10:39.680
So what we need is a string.

134
00:10:39.750 --> 00:10:52.820
We want to select my modem again and we want to do something on heat dot bootstrap modal.

135
00:10:53.830 --> 00:10:56.360
And the thing we want today is a function.

136
00:10:56.560 --> 00:11:01.840
Again it's going to have an event even though we don't care about the details of that event.

137
00:11:03.650 --> 00:11:11.570
And I don't mean to close my parentheses there and all we want to do is when the model is closed.

138
00:11:11.570 --> 00:11:17.730
Alert motile closed.

139
00:11:17.810 --> 00:11:20.990
All right let's check that in action.

140
00:11:20.990 --> 00:11:25.140
Say the message to a great plays that down.

141
00:11:25.370 --> 00:11:30.310
And of course it does nothing because I've got my hash symbol.

142
00:11:30.590 --> 00:11:32.000
Just try that one more time.

143
00:11:32.000 --> 00:11:35.300
There's told me close that down and modal closed.

144
00:11:35.420 --> 00:11:39.980
So I noticed that this popped up actually just before the modal was closed.

145
00:11:40.670 --> 00:11:49.100
If we wanted to have it just after we changed it to a hidden top strapped on modal and then we get the

146
00:11:49.100 --> 00:11:51.540
alert after the middle is closed.

147
00:11:53.590 --> 00:11:58.390
All right so hopefully that gives you a bit of insight into how you can interact with these bootstrap

148
00:11:58.600 --> 00:12:02.990
javascript components and make them behave the way you want them to.

149
00:12:03.010 --> 00:12:07.020
Let's just have a very quick look at a couple of the other cool javascript components.

150
00:12:07.060 --> 00:12:10.430
First one we'll look at is the pop up

151
00:12:14.010 --> 00:12:21.190
which is a way of displaying information next to or around another element.

152
00:12:21.190 --> 00:12:26.700
So I'll show you the live demo this time to speed things up a little bit and it looks like that pretty

153
00:12:26.700 --> 00:12:27.060
cool.

154
00:12:27.150 --> 00:12:32.680
And you can get rid of it by clicking on the button again.

155
00:12:32.710 --> 00:12:36.010
So let's copy the whole lot then

156
00:12:40.310 --> 00:12:43.390
and we'll add that in underneath our buttons.

157
00:12:46.610 --> 00:12:48.770
So let's just have a quick look at the code that does that.

158
00:12:48.770 --> 00:12:54.500
It's very simple it's just a single button with the type of button and then classes for styling.

159
00:12:54.680 --> 00:12:59.510
But this time we're toggling a pop over and the actual content of the popovers is actually contained

160
00:12:59.510 --> 00:13:02.780
within data elements in the button itself.

161
00:13:02.780 --> 00:13:07.280
So I've got the title and we've got the content right there.

162
00:13:07.280 --> 00:13:11.180
Notice that if we run this and click.

163
00:13:11.180 --> 00:13:12.950
Nothing happens.

164
00:13:12.950 --> 00:13:14.630
Now that's for two reasons.

165
00:13:14.630 --> 00:13:22.280
Firstly we need to include a third party library to get popovers working and we can see that up here

166
00:13:22.400 --> 00:13:29.480
the popovers rely on the third party library Teather for positioning so we have to include that file

167
00:13:30.320 --> 00:13:32.230
in order to make it work.

168
00:13:32.420 --> 00:13:39.080
So let's do that let's find a Cdn or content delivery network for Teather

169
00:13:45.290 --> 00:13:46.880
CDN.

170
00:13:47.050 --> 00:13:47.750
Stock come

171
00:13:50.520 --> 00:13:50.920
great.

172
00:13:51.090 --> 00:13:55.800
So all we need is the teather javascript and we might as well go for the mini fied version.

173
00:13:56.750 --> 00:13:58.470
So I'm just going to copy that link.

174
00:14:00.310 --> 00:14:09.250
And then I'll insert it just before the bootstrap code and the usual way says script SIRC equals and

175
00:14:09.250 --> 00:14:16.150
then we want that whole link there and then end the script we don't need any integrity of cross origin

176
00:14:16.150 --> 00:14:23.860
attributes the sun and of course if you want to download the script instead then you could just do that

177
00:14:23.860 --> 00:14:25.110
directly from there.

178
00:14:25.570 --> 00:14:30.020
And the advantage then would be it's stored on your site and you have more control over it.

179
00:14:30.070 --> 00:14:30.490
All right.

180
00:14:30.490 --> 00:14:32.220
There is one more thing we need to do though.

181
00:14:32.620 --> 00:14:37.230
Unlike modals popovers are not enabled by default for formants reasons.

182
00:14:37.390 --> 00:14:44.420
So if you want to use them we need to manually enable them using a code similar to this.

183
00:14:44.800 --> 00:14:51.880
So I'm going to pop this in to my javascript just there on the page and this will select all of the

184
00:14:51.880 --> 00:14:55.130
items with the data Toko of pop over I.

185
00:14:55.300 --> 00:14:56.340
All the popovers.

186
00:14:56.530 --> 00:15:01.230
And then it will apply the Papaver function to them which will make them pop Ifis.

187
00:15:01.870 --> 00:15:05.410
So that was two fairly major steps that we needed to do for popovers.

188
00:15:05.420 --> 00:15:14.830
I wanted to show you but now we should find that when we click pop over it it displays So there I probably

189
00:15:14.830 --> 00:15:17.100
want to do pop over and then hit the button.

190
00:15:17.110 --> 00:15:18.250
So here's a quick challenge for you.

191
00:15:18.250 --> 00:15:28.310
Can you switch the pop diva says at the bottom of the button rather than on the right.

192
00:15:28.360 --> 00:15:30.260
Did you manage it.

193
00:15:30.400 --> 00:15:34.020
It's just a matter of looking at the relative code.

194
00:15:34.020 --> 00:15:36.520
So we've got Pavelka on top.

195
00:15:36.630 --> 00:15:37.530
Right.

196
00:15:38.080 --> 00:15:43.040
And then underneath that one bottom so we're going to want a third one along.

197
00:15:43.120 --> 00:15:43.930
Let's have a look.

198
00:15:43.990 --> 00:15:46.630
What's the code data placement.

199
00:15:46.630 --> 00:15:50.500
Bottom line looks very relevant for us.

200
00:15:50.620 --> 00:15:53.410
So let's just add that in.

201
00:15:53.650 --> 00:15:58.200
Could get anywhere in our button code.

202
00:15:58.460 --> 00:16:03.080
And then when that again and now the paper is at the bottom.

203
00:16:03.080 --> 00:16:03.780
Fantastic.

204
00:16:03.950 --> 00:16:08.610
So the last thing I want to show you then is tool tips and these are very similar to popovers.

205
00:16:08.710 --> 00:16:15.020
But popovers tend to stay there till you manually dismiss them by clicking the button whereas tool tips

206
00:16:15.530 --> 00:16:17.430
just appear on hover.

207
00:16:17.850 --> 00:16:26.650
So back on bootstrap again then that's have a very quick look at tool tips.

208
00:16:26.880 --> 00:16:33.810
And again for time I'll show you how they work on the site

209
00:16:36.940 --> 00:16:41.350
and notice that we're going to need to enable them again.

210
00:16:41.860 --> 00:16:43.320
They require tether as well.

211
00:16:43.450 --> 00:16:47.390
But that's OK because we've already got tether set up.

212
00:16:47.390 --> 00:16:49.450
So that's our code for that there.

213
00:16:49.630 --> 00:16:50.200
And then

214
00:16:53.010 --> 00:16:54.950
let's go for a tooltip on the bottom

215
00:17:00.990 --> 00:17:04.010
for the same reason a put paper on the bottom.

216
00:17:04.590 --> 00:17:07.980
So now we should be out to get that working.

217
00:17:07.980 --> 00:17:08.750
There we go.

218
00:17:08.940 --> 00:17:16.090
So the tool tips appear on hover and disappear when you move out of the button.

219
00:17:16.660 --> 00:17:20.710
So a very quick final challenge then to see if you've got the hang of interacting with these things

220
00:17:21.310 --> 00:17:28.060
can you create an alert which displays as soon as the tooltip itself displays.

221
00:17:28.150 --> 00:17:36.800
Go for it.

222
00:17:36.970 --> 00:17:37.750
All right.

223
00:17:38.080 --> 00:17:38.900
Hey people that of

224
00:17:42.240 --> 00:17:44.550
to do something when something else happens.

225
00:17:44.580 --> 00:17:52.140
We're definitely looking at an event here OK and we've got show shown hide and hidden.

226
00:17:52.210 --> 00:17:57.400
We definitely get to one either show or shown pending on whether you want it just before the tooltip

227
00:17:57.490 --> 00:17:59.340
displays or just after.

228
00:17:59.530 --> 00:18:06.070
I'm going to go for Sharon I think and we can see this a very similar syntax to what we used for the

229
00:18:06.070 --> 00:18:17.040
motile So let's type it out ourselves because I think we can check out to see if tooltip has an ID.

230
00:18:17.140 --> 00:18:17.980
No it doesn't.

231
00:18:17.980 --> 00:18:21.020
So we could select it using this.

232
00:18:21.270 --> 00:18:28.150
But I want to be a bit more specific so I'm going to give it an I.D. and my tool tip seems sensible.

233
00:18:29.230 --> 00:18:40.080
That became And then we just selected in the usual way so with a hash for I.D. and then my Tooltip and

234
00:18:40.090 --> 00:18:48.160
we want to do something on ID when a certain math certain event happens and the event that we're after

235
00:18:48.220 --> 00:18:52.090
is not hidden it's showing up.

236
00:18:52.130 --> 00:18:54.350
Strap docked tooltip

237
00:18:57.490 --> 00:18:59.640
and we want that to happen.

238
00:18:59.840 --> 00:19:10.480
Oh we want a certain function to happen when that's done and the function that we want is alert tooltip

239
00:19:10.540 --> 00:19:14.250
displayed OK.

240
00:19:14.450 --> 00:19:16.240
Cleanse the parenthesis.

241
00:19:16.880 --> 00:19:17.400
And there we go.

242
00:19:17.410 --> 00:19:18.700
That should do it.

243
00:19:19.340 --> 00:19:20.600
Let's have a look.

244
00:19:21.200 --> 00:19:24.250
Wonderful tooltip displayed.

245
00:19:24.350 --> 00:19:25.270
Brilliant.

246
00:19:25.910 --> 00:19:30.980
So that's giving you a bit of an idea how we interact with these components and a bit more detail using

247
00:19:30.980 --> 00:19:36.910
Jay Querrey in the next video which is the final one before our big bootstrap challenge.

248
00:19:36.950 --> 00:19:42.980
I'm going to get you to attempt to figure out how these scroll spy plugin works and create a working

249
00:19:42.980 --> 00:19:46.870
version and you're bootstrapped or HVM our page.
