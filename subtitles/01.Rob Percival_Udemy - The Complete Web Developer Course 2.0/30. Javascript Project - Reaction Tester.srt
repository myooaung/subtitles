1
00:00:00,570 --> 00:00:06,180
Congratulations on making it to the end of the javascript's section of this course you've covered a

2
00:00:06,180 --> 00:00:07,410
huge amount.

3
00:00:07,410 --> 00:00:12,900
You've gone from pretty much zero knowledge of javascript to understanding how to make your javascript

4
00:00:12,960 --> 00:00:17,870
interact with your age DML how to make your pages behave as you want them.

5
00:00:18,030 --> 00:00:25,620
And then how to create complex code structures using variables arrays loops and if statements.

6
00:00:25,860 --> 00:00:31,990
In this video we're going to put all of that together to make a great fun reaction tester.

7
00:00:32,460 --> 00:00:33,810
And this is how it's going to work.

8
00:00:35,290 --> 00:00:39,370
So I've got nice instructions at the top there and all it's going to do is measure how long it takes

9
00:00:39,370 --> 00:00:42,780
for you to click on the box after it appears.

10
00:00:42,790 --> 00:00:46,060
So once I click there that took me quite a long time.

11
00:00:46,060 --> 00:00:47,490
That was quite a bit quicker.

12
00:00:49,120 --> 00:00:52,190
And now with keeping the speed pretty high.

13
00:00:52,480 --> 00:00:54,610
So you can see we've got a lot of randomness here.

14
00:00:54,760 --> 00:00:58,650
It's randomly positioned it's randomly sized.

15
00:00:58,900 --> 00:01:05,910
It's randomly colored and it's randomly a square or a circle.

16
00:01:06,060 --> 00:01:08,100
So there's a lot of randomness built in there.

17
00:01:08,250 --> 00:01:14,940
And there are a couple of new things that we haven't seen so we haven't used timers before with using

18
00:01:14,940 --> 00:01:23,220
time as both to measure the length of time and to have a bit of random delay before the next square

19
00:01:23,250 --> 00:01:24,540
or circle appears.

20
00:01:24,810 --> 00:01:26,000
So those two things are new.

21
00:01:26,160 --> 00:01:28,840
And we haven't used random colors before either.

22
00:01:29,100 --> 00:01:32,760
But all three of those are pretty accessible with a quick Google.

23
00:01:32,790 --> 00:01:38,820
So I definitely recommend you have a good go at making this one yourself.

24
00:01:38,820 --> 00:01:44,070
As always though if you have any problems you can just watch me do it and see if you would have done

25
00:01:44,070 --> 00:01:45,020
it a different way.

26
00:01:45,240 --> 00:01:48,720
So I'll give you a minute now to pause the video and give it a shot.

27
00:01:48,720 --> 00:01:58,630
Best of luck.

28
00:01:58,850 --> 00:02:04,610
So I'm going to start off by keeping things fairly simple and I'm just going to have a simple red square

29
00:02:04,790 --> 00:02:07,350
which will then click on to make disappear.

30
00:02:07,610 --> 00:02:12,040
So much like our disappearing circles program from a few years ago.

31
00:02:12,740 --> 00:02:14,530
So this should be pretty straightforward.

32
00:02:16,770 --> 00:02:22,870
I'm going to call it shape because I know that it's going to be a circle later on as well.

33
00:02:23,220 --> 00:02:36,210
And then in the head we'll have a bit of style with a type of text slash CSSA and then we'll select

34
00:02:36,330 --> 00:02:51,280
our shape ID and we'll go for a width of 200 pixels and a height of 200 pixels and a background color

35
00:02:53,430 --> 00:02:54,610
of red.

36
00:02:57,410 --> 00:03:05,100
Ok lovely that we got next then is the challenge to make it so that when we click on it it disappears.

37
00:03:06,150 --> 00:03:07,890
Shouldn't be too bad.

38
00:03:08,880 --> 00:03:12,580
So the documents don't get on by ID as we're used to.

39
00:03:12,870 --> 00:03:23,360
The ID is shaped and we want to add an on click and set it equal to a function.

40
00:03:23,650 --> 00:03:26,510
We want that function to do is to make the shape disappear.

41
00:03:27,410 --> 00:03:36,690
And we do that using again document get element by the shape and hopefully you'll remember from an earlier

42
00:03:36,690 --> 00:03:47,520
video that we do style dots display and we will see nothing.

43
00:03:47,770 --> 00:03:49,530
OK let's take a look.

44
00:03:52,040 --> 00:03:58,330
That didn't work I suspect because we need the known to be in quotes.

45
00:03:58,450 --> 00:04:01,550
We get the world and if you didn't make that mistake.

46
00:04:01,660 --> 00:04:02,160
All right.

47
00:04:02,180 --> 00:04:08,100
Now the main new thing as I mentioned here is the idea of a timer which we haven't introduced.

48
00:04:08,170 --> 00:04:13,380
Let's see if we can have a Google and figure something out.

49
00:04:13,760 --> 00:04:21,130
I'll go for something like javascript timer javascript timing events and it's premising and it's good

50
00:04:21,130 --> 00:04:23,560
O.W. W3 schools as well.

51
00:04:23,690 --> 00:04:32,850
So we want to work out how long it takes before the user has tapped on the square now set time out excusive

52
00:04:32,870 --> 00:04:33,280
function.

53
00:04:33,290 --> 00:04:39,170
After waiting a specified number of milliseconds we will need that actually later on when we want to

54
00:04:39,170 --> 00:04:42,350
make the square appear after a random period of time.

55
00:04:42,350 --> 00:04:45,950
But that's not what we need it at the moment we need a time to measure

56
00:04:49,250 --> 00:04:50,690
how long it takes.

57
00:04:50,850 --> 00:04:53,950
And I don't think this page is going to give me that.

58
00:04:54,680 --> 00:04:57,170
OK maybe I need to be a bit more detailed in my googling.

59
00:04:57,170 --> 00:05:00,090
I'm going to leave that live there because we'll need it later on.

60
00:05:00,920 --> 00:05:06,320
As Dr javascript's measure time something like that

61
00:05:08,930 --> 00:05:15,160
measuring time taken for a function to execute OK.

62
00:05:15,160 --> 00:05:19,600
We don't quite want to measure how long it takes to function but we do want to measure how much time

63
00:05:19,600 --> 00:05:23,250
has passed and this is now looking very promising.

64
00:05:23,290 --> 00:05:31,600
So it looks like we can use the Date Time function to get the current time and then we can use it again

65
00:05:31,630 --> 00:05:34,630
later on to work out the difference.

66
00:05:34,630 --> 00:05:35,560
Fantastic.

67
00:05:37,920 --> 00:05:38,480
Okay.

68
00:05:38,810 --> 00:05:40,700
So let's try that out.

69
00:05:43,840 --> 00:05:53,100
And I'll carry it so I'll make it so that the time is first measured when the page is loaded and then

70
00:05:53,130 --> 00:05:59,790
when we click we want to see get a new time so we'll call this and

71
00:06:03,130 --> 00:06:10,030
then according to this case we just subtract the T and then that should give us the time that's passed

72
00:06:10,120 --> 00:06:12,210
in milliseconds.

73
00:06:13,300 --> 00:06:18,240
So we'll call this time taken.

74
00:06:18,260 --> 00:06:21,820
And that is and minus start

75
00:06:24,690 --> 00:06:30,950
and then let's just do an alert for now Alert time taken.

76
00:06:30,950 --> 00:06:33,820
All right let's have a look.

77
00:06:34,050 --> 00:06:38,990
And actually we want to make it disappear straight away so we'll do that before we do any alerting or

78
00:06:38,990 --> 00:06:42,900
anything else OK.

79
00:06:43,000 --> 00:06:46,720
See if we click on there 1 9 7 6 that sounds about right.

80
00:06:46,950 --> 00:06:48,930
So that's just under 2 seconds.

81
00:06:49,060 --> 00:06:53,130
If I do it quicker we get a smaller number.

82
00:06:53,640 --> 00:06:57,030
So first off Bear in mind that this is in milliseconds.

83
00:06:57,540 --> 00:07:06,760
So let's divide it by a thousand to get the time in seconds.

84
00:07:09,030 --> 00:07:16,110
And let's also add a paragraph which is going to contain the time.

85
00:07:16,110 --> 00:07:21,530
We don't want to alerting every time and the way we do that is with a span

86
00:07:28,270 --> 00:07:31,400
I'll call it time taken.

87
00:07:31,600 --> 00:07:32,000
There we go.

88
00:07:32,020 --> 00:07:33,970
And it doesn't need to have any content.

89
00:07:33,990 --> 00:07:37,950
Initially we're just going to fill it in here.

90
00:07:37,950 --> 00:07:50,340
So instead of alerting time taken we're going to find the time taken by its id get element by id and

91
00:07:50,340 --> 00:07:58,980
time taken so that we'll get the span and then we want to set the interface DML of that span to be time

92
00:07:58,980 --> 00:07:59,610
taken.

93
00:07:59,880 --> 00:08:10,950
And then we want to have an s to make it clear that this is seconds we're talking about.

94
00:08:10,950 --> 00:08:12,280
All right let's take a look.

95
00:08:12,280 --> 00:08:20,520
So now instead of alerting his shit display my time there Birnam OK.

96
00:08:20,810 --> 00:08:23,590
So now we've got our basic functionality in place.

97
00:08:23,630 --> 00:08:29,270
Our next challenge is to get our shape to appear after a certain number of seconds.

98
00:08:29,330 --> 00:08:35,790
So as it happens the first google link that I clicked on showed us how to do that.

99
00:08:36,410 --> 00:08:38,720
So this is the set timeout method.

100
00:08:38,870 --> 00:08:43,460
I always prefer looking at the examples rather than the kind of definition I think that make it a bit

101
00:08:43,460 --> 00:08:44,340
clearer.

102
00:08:46,150 --> 00:08:55,340
And here so we can use set time outs to run my function after three seconds or three thousand milliseconds.

103
00:08:55,390 --> 00:08:57,530
Fantastic that's exactly what we want today.

104
00:08:57,880 --> 00:09:04,690
And we know all about functions because we learned about them in the previous video.

105
00:09:04,910 --> 00:09:08,420
So let's set up our function first off

106
00:09:12,460 --> 00:09:16,560
the way I copied that really I didn't need see we could have typed that out ourselves but we've got

107
00:09:16,560 --> 00:09:17,350
it now.

108
00:09:17,940 --> 00:09:21,030
So my function is a little bit vague.

109
00:09:21,030 --> 00:09:26,040
We wanted to make shipe

110
00:09:29,220 --> 00:09:34,860
say we do this using document to get element by ID.

111
00:09:35,230 --> 00:09:47,940
And once again it's shape and we set that display again this time not to none but to a different option

112
00:09:47,940 --> 00:09:51,690
which will make it appear now.

113
00:09:55,540 --> 00:09:56,510
We haven't done that before.

114
00:09:56,560 --> 00:09:57,670
So we should just check.

115
00:09:57,700 --> 00:10:04,900
I think something like this ok that one looks promising hide and reveal text and graphics we already

116
00:10:04,900 --> 00:10:06,060
know how to hide it.

117
00:10:06,250 --> 00:10:12,010
We just need to make it display and there we go.

118
00:10:12,230 --> 00:10:14,360
So style display is none.

119
00:10:14,360 --> 00:10:18,140
We've already used so style display is block.

120
00:10:18,320 --> 00:10:24,080
That's what we need to make it display so that essentially brings it back into the flow of the page

121
00:10:24,080 --> 00:10:32,810
again by giving it a display property of block.

122
00:10:33,080 --> 00:10:34,720
OK so that will make the shape appear.

123
00:10:34,840 --> 00:10:38,030
We also want to start the timer at that point.

124
00:10:38,320 --> 00:10:51,650
So what I'm going to do is all the fine my start up there and then I'll update it when the shape appears.

125
00:10:51,650 --> 00:10:55,430
So this will run as soon as the page runs.

126
00:10:55,430 --> 00:11:03,380
And because the start variable is defined out here and then the function is defined within that we'll

127
00:11:03,380 --> 00:11:08,900
be able to use the start variable inside that function.

128
00:11:08,900 --> 00:11:10,670
So again this is about scope.

129
00:11:10,760 --> 00:11:15,830
Anything that's defined inside the function can't be used outside the function but things that are defined

130
00:11:15,890 --> 00:11:19,670
outside the function can be used inside the function.

131
00:11:19,670 --> 00:11:25,350
That makes sense and then we just need a command to make the shape appear after.

132
00:11:25,370 --> 00:11:30,650
Let's say one second for the moment and it looks like the command that we need for that is set time

133
00:11:30,650 --> 00:11:36,990
out and then the name of the function and then the number of milliseconds.

134
00:11:37,020 --> 00:11:39,250
So let's do that here.

135
00:11:40,310 --> 00:11:41,980
So I don't want to run my function.

136
00:11:42,010 --> 00:11:50,410
I want to run make shape appear and let's do it after 1000 milliseconds.

137
00:11:50,410 --> 00:11:50,850
All right.

138
00:11:50,860 --> 00:11:52,170
So hopefully that makes sense.

139
00:11:52,270 --> 00:11:56,430
If not just go back and forth the last few seconds again because we did quite a lot of new stuff.

140
00:11:56,800 --> 00:12:06,330
One thing I will need to change is I need to actually hide the square before we start otherwise making

141
00:12:06,330 --> 00:12:07,770
it appear won't make any difference.

142
00:12:09,140 --> 00:12:11,870
All right let's take a look see if fingers crossed.

143
00:12:12,020 --> 00:12:20,510
The shape will now appear after one second that we get and it will then counter-counter from when it

144
00:12:20,510 --> 00:12:28,270
appears this is the first time that the reaction time actually works let's see how quick I can get there.

145
00:12:28,280 --> 00:12:29,210
No point two seconds.

146
00:12:29,210 --> 00:12:29,980
Not bad.

147
00:12:30,040 --> 00:12:31,620
See if you can do better than that.

148
00:12:33,920 --> 00:12:34,740
All right.

149
00:12:34,910 --> 00:12:37,840
So I'm happy with things how things are going at the moment.

150
00:12:37,850 --> 00:12:43,530
Next I'm going to make it so the amount of time that it takes for the square to appear is not fixed.

151
00:12:44,990 --> 00:12:50,980
So we've got a thousand here so let's make it a random number instead.

152
00:12:51,020 --> 00:12:53,780
So I think we can put that straight in here.

153
00:12:54,620 --> 00:13:00,080
We know how to create a random number so this will create a random number between 0 and 1.

154
00:13:00,230 --> 00:13:04,010
We need to decide the maximum length of time that we want for this to appear so we don't want it to

155
00:13:04,010 --> 00:13:05,000
be 10 minutes.

156
00:13:05,000 --> 00:13:07,080
Otherwise the user is going to get very bored.

157
00:13:07,190 --> 00:13:11,690
So let's say two seconds from now.

158
00:13:11,690 --> 00:13:18,660
So this will give a random number between 0 and 2000 so up to two seconds.

159
00:13:18,710 --> 00:13:20,390
Just check that that works.

160
00:13:20,790 --> 00:13:21,240
Yes.

161
00:13:21,350 --> 00:13:22,220
Looks promising.

162
00:13:24,070 --> 00:13:25,490
I think that was different to before.

163
00:13:25,720 --> 00:13:26,810
We'll have to wait and see.

164
00:13:28,700 --> 00:13:29,460
All right.

165
00:13:29,510 --> 00:13:31,680
So we're moving along pretty quickly here.

166
00:13:31,730 --> 00:13:33,780
We've got our random time.

167
00:13:33,860 --> 00:13:38,690
The main issue of course is that it only happens once and then the game is over.

168
00:13:39,020 --> 00:13:45,300
Which isn't great but that's actually really easy to fix because of the way that we've set up this function.

169
00:13:45,350 --> 00:13:53,810
So now all we need to do is when the user clicks on the shape is to run the function make shape appear

170
00:13:54,050 --> 00:13:54,680
again.

171
00:13:55,310 --> 00:13:59,180
And then this will make the shape appear.

172
00:13:59,210 --> 00:14:03,000
One problem though is that that's going to do it immediately.

173
00:14:03,380 --> 00:14:08,270
So soon as I click on it it's going to reappear immediately.

174
00:14:08,330 --> 00:14:10,630
So there's two solutions to that either.

175
00:14:10,820 --> 00:14:14,890
I could bring in the set timeout method here as well.

176
00:14:15,440 --> 00:14:19,310
Or I could bring the set timeout method into the function.

177
00:14:19,700 --> 00:14:24,050
And hopefully if you've been listening carefully to what I've been saying about functions you'll want

178
00:14:24,050 --> 00:14:31,310
to do the second one because we avoid having the same code twice in our script if we possibly can.

179
00:14:31,610 --> 00:14:35,970
So it makes more sense I think to set up a function

180
00:14:39,610 --> 00:14:49,280
with a small f which I'll call say appear after delay

181
00:14:53,080 --> 00:14:54,700
and then that's where we'll put

182
00:14:57,510 --> 00:15:00,070
our instruction to make the shape appear.

183
00:15:00,480 --> 00:15:09,480
And then instead of calling that directly we'll have a pair after delay there and also appear after

184
00:15:09,480 --> 00:15:10,190
a delay.

185
00:15:10,240 --> 00:15:15,120
Inside our Click code as well.

186
00:15:15,360 --> 00:15:19,860
So hopefully that makes more sense if you can imagine an immediate benefit of that is that if we didn't

187
00:15:19,860 --> 00:15:23,080
do it that way we'd have to have the set timeout method twice.

188
00:15:23,220 --> 00:15:28,860
So if we wanted to change the maximum from two seconds to five seconds for example then we'd have to

189
00:15:28,860 --> 00:15:32,580
change that in two places which isn't a nice thing to have to do.

190
00:15:32,880 --> 00:15:35,960
So I think it makes more sense to keep it as it is.

191
00:15:37,520 --> 00:15:39,800
All right them let's have a look.

192
00:15:39,820 --> 00:15:41,570
So we should get a bit of a delay.

193
00:15:42,380 --> 00:15:42,910
All right.

194
00:15:42,910 --> 00:15:50,460
Bit too much of a delay there because I've forgotten the parentheses always a parentheses when you've

195
00:15:50,460 --> 00:15:53,580
got a function that you are using.

196
00:15:54,180 --> 00:15:55,860
Let's try that again.

197
00:15:56,280 --> 00:15:56,960
OK.

198
00:15:59,100 --> 00:16:00,280
Fantastic.

199
00:16:03,600 --> 00:16:06,340
That's working really well.

200
00:16:06,340 --> 00:16:06,780
Brilliant.

201
00:16:06,840 --> 00:16:12,900
So now we're going to make the game a little trickier by moving the square around.

202
00:16:13,110 --> 00:16:16,450
And as always there's a few ways that you could do this.

203
00:16:16,530 --> 00:16:19,350
I'm going to do it with positioning.

204
00:16:19,350 --> 00:16:27,810
So you'll remember hopefully that we if we set our position to relative and we can do things like setting

205
00:16:27,840 --> 00:16:40,020
the top to 100 pixels which will shift it down 100 pixels and we can also have the left to say 200 pixels

206
00:16:40,470 --> 00:16:45,840
which will shift it right or give it a left margin of 200 pixels.

207
00:16:45,840 --> 00:16:50,410
So what we want to do is to introduce a element of randomness

208
00:16:53,520 --> 00:16:58,910
with the top and left so we'll do that and they make shape appear

209
00:17:02,650 --> 00:17:06,620
and you should be able to guess really how we do that with javascript.

210
00:17:06,700 --> 00:17:11,450
We get the shape in the usual way and then we're affecting its style here.

211
00:17:13,040 --> 00:17:17,840
And we're affecting the top.

212
00:17:18,160 --> 00:17:24,540
I'm going to set that up just before we introduce any randomness.

213
00:17:24,570 --> 00:17:30,580
Let's just set the top 50 pixels and then we'll just check it should be down 50 pixels.

214
00:17:30,580 --> 00:17:31,310
There we go.

215
00:17:31,680 --> 00:17:37,260
So we have moved it down a certain number of pixels using javascript.

216
00:17:37,440 --> 00:17:39,290
We want that to be a random number.

217
00:17:39,810 --> 00:17:47,840
So let's get rid of our 50 and let's bring in a variable I call it top.

218
00:17:48,180 --> 00:17:54,540
And this is going to be the number of pixels and we want that to be a random number.

219
00:17:55,080 --> 00:18:04,440
So math random and that's 50 pixels that say up to a maximum of 400

220
00:18:07,260 --> 00:18:08,330
pixels.

221
00:18:09,090 --> 00:18:18,110
And then we just use top plus and then peaks on the end to be clear it is pixels that we want to move

222
00:18:18,120 --> 00:18:19,650
it.

223
00:18:19,740 --> 00:18:25,410
So now it should be in a random position vertically each time we get

224
00:18:28,990 --> 00:18:30,600
excellent.

225
00:18:30,640 --> 00:18:34,450
So now sit just the same thing with left.

226
00:18:34,450 --> 00:18:41,920
So let's have a left which is math Matho random times let's go for 400 again.

227
00:18:43,870 --> 00:18:46,340
And then we want to do exactly the same thing

228
00:18:49,720 --> 00:18:51,520
get the shape element by its ID.

229
00:18:51,560 --> 00:19:01,600
And this time will set the style dot left and that's going to be left and then pixels on the end to

230
00:19:01,720 --> 00:19:03,550
give out units.

231
00:19:04,240 --> 00:19:09,390
So now it should be randomly positioned both vertically and horizontally

232
00:19:11,940 --> 00:19:14,330
Brenham.

233
00:19:14,450 --> 00:19:17,900
We're really getting that OK.

234
00:19:20,140 --> 00:19:25,090
Well we're really into our randomness I want to give it a random size as well.

235
00:19:25,090 --> 00:19:33,360
So let's give it a random width of let's go up to

236
00:19:37,240 --> 00:19:38,810
400 pixels.

237
00:19:39,130 --> 00:19:44,380
That's going to potentially let it be really small but let's see how that works out.

238
00:19:46,530 --> 00:19:48,900
And then once again get the elements

239
00:19:51,810 --> 00:20:04,570
and set its width to width plus X and I'll set the height to the same thing.

240
00:20:06,490 --> 00:20:11,410
Because I don't think we want sort of strange shaped boxes I want to keep them all at squares.

241
00:20:13,190 --> 00:20:15,590
So let's see what effect that has

242
00:20:20,620 --> 00:20:23,700
Yeah I quite like that.

243
00:20:23,730 --> 00:20:24,820
I think that makes it interesting

244
00:20:27,600 --> 00:20:28,050
OK.

245
00:20:28,260 --> 00:20:32,760
400 maybe a little bit large scale for 300.

246
00:20:33,280 --> 00:20:33,700
All right.

247
00:20:33,700 --> 00:20:37,000
So really it's now just a matter of refining the game a little bit.

248
00:20:37,000 --> 00:20:41,280
And one thing I definitely want is a random color generator.

249
00:20:42,600 --> 00:20:44,830
So this is again something we haven't done before.

250
00:20:49,120 --> 00:20:57,240
So let's see what we can get from a google random color generator in javascript that looks pretty good.

251
00:20:59,560 --> 00:21:01,040
Let's have a look.

252
00:21:01,770 --> 00:21:02,380
OK.

253
00:21:02,380 --> 00:21:03,040
Then test it.

254
00:21:03,040 --> 00:21:04,990
So this looks like it does what we want.

255
00:21:04,990 --> 00:21:09,620
Let's just run through it and make sure that we understand what's going on.

256
00:21:12,420 --> 00:21:13,890
OK.

257
00:21:14,550 --> 00:21:14,940
Right.

258
00:21:14,940 --> 00:21:23,100
So what this is doing is taking the letters and numbers that make up our DML Colaco and splitting them

259
00:21:23,460 --> 00:21:24,560
into an array.

260
00:21:24,870 --> 00:21:31,010
So this dot split splits a string into an array.

261
00:21:31,380 --> 00:21:39,830
So what we've got here is letters being an array of 0 1 2 3 4 5 6 7 8 9 and a b c d e f.

262
00:21:39,850 --> 00:21:43,620
Then we've got our color string which starts off with a hash.

263
00:21:43,830 --> 00:21:45,760
As I told him all colors always do.

264
00:21:46,170 --> 00:21:53,380
And then we got a for loop which starts with Isaac with zero goes on as long as I is less than six and

265
00:21:53,480 --> 00:21:54,000
increments.

266
00:21:54,030 --> 00:21:59,450
I buy one each time and then we haven't seen this before.

267
00:21:59,730 --> 00:22:02,700
This is a way of appending to a string.

268
00:22:02,730 --> 00:22:09,930
So color plus equals means we take color as it is and we add to it letters.

269
00:22:10,120 --> 00:22:12,360
So that's this array up here.

270
00:22:13,480 --> 00:22:16,070
And this is now familiar to us as well.

271
00:22:16,090 --> 00:22:22,500
So getting a random number up to 16 and we're using math floor to effectively get a random integer or

272
00:22:22,510 --> 00:22:26,400
whole number between 0 and 15.

273
00:22:26,410 --> 00:22:33,260
So essentially this is creating a random h g l color code brilliant.

274
00:22:33,390 --> 00:22:37,750
So we learned a couple of new tricks there as well as got some code that will be useful for us.

275
00:22:39,980 --> 00:22:45,980
So let's add this function definition to our code

276
00:22:49,030 --> 00:22:51,900
and some nice automatic indenting for us.

277
00:22:56,020 --> 00:22:56,510
Lovely.

278
00:22:56,580 --> 00:23:08,100
So now we've got our code in them let's change our background color a document get element by id shape

279
00:23:09,060 --> 00:23:12,200
and then style and.

280
00:23:12,220 --> 00:23:17,780
Whereas background color just see it all on one line.

281
00:23:18,050 --> 00:23:20,180
So we're going to want to get random color

282
00:23:24,090 --> 00:23:30,510
empty pair of parentheses because it doesn't need any variables passed to it and that's it.

283
00:23:30,510 --> 00:23:34,320
So that should give us a random color each time as well.

284
00:23:38,820 --> 00:23:48,130
Gang Green purple the gray probably pink fantastic little bit agree.

285
00:23:48,570 --> 00:23:49,180
OK.

286
00:23:49,320 --> 00:23:50,560
This is looking great.

287
00:23:50,580 --> 00:23:55,860
So there's actually only one more feature I want to add on the shape itself and that is I want to occasionally

288
00:23:55,860 --> 00:23:58,180
to appear as a circle.

289
00:23:58,440 --> 00:24:04,380
So let's say we wanted to be a circle 50 percent of the time.

290
00:24:04,380 --> 00:24:12,390
We can do that with an if statement and we'll take once again.

291
00:24:12,390 --> 00:24:15,020
Good old math taught random.

292
00:24:15,030 --> 00:24:18,720
And so if that's bigger than no point five

293
00:24:21,550 --> 00:24:23,340
then we'll make it a circle.

294
00:24:23,500 --> 00:24:25,260
We could have less than there as well.

295
00:24:25,300 --> 00:24:26,220
It doesn't make any difference.

296
00:24:26,230 --> 00:24:30,370
But this will happen on average half the time.

297
00:24:30,370 --> 00:24:42,040
So to make it a circle hopefully you remember we get the element by its ID as before and style.

298
00:24:42,230 --> 00:24:54,530
And we want to do is set the border radius to be 50 percent.

299
00:24:54,600 --> 00:24:57,000
So that means it should be a circle.

300
00:24:57,070 --> 00:25:05,140
We get 50 percent of the time two circles three circles four circles.

301
00:25:08,590 --> 00:25:10,210
And it's vanished.

302
00:25:10,750 --> 00:25:12,880
I think that's a problem with our code.

303
00:25:12,880 --> 00:25:17,970
I think it's there somewhere but it's so small I can't see it.

304
00:25:18,000 --> 00:25:22,830
So I think we're going to need a minimum size.

305
00:25:22,910 --> 00:25:24,190
It does appear to be a circle.

306
00:25:24,230 --> 00:25:25,280
Every time

307
00:25:28,230 --> 00:25:32,170
which is unlikely.

308
00:25:32,360 --> 00:25:34,980
Let's have a look and see if something's gone wrong.

309
00:25:35,660 --> 00:25:36,560
Ah yes.

310
00:25:36,560 --> 00:25:38,060
Can you see what the issue is.

311
00:25:38,060 --> 00:25:39,050
It's quite a good one.

312
00:25:42,080 --> 00:25:50,000
What it is is because it was a circle the first time we set the border radius to 50 percent and then

313
00:25:50,150 --> 00:25:52,620
the border radius was set to 50 percent full stop.

314
00:25:52,620 --> 00:25:57,330
So even if it wasn't greater than 0.5 the second time it was still a circle.

315
00:25:57,830 --> 00:26:05,990
So we need to had an instruction to say if that's not the case then set the border radius back to zero

316
00:26:05,990 --> 00:26:06,310
or

317
00:26:09,080 --> 00:26:13,570
well-done if you spotted that as before.

318
00:26:13,680 --> 00:26:16,580
Border radius

319
00:26:19,000 --> 00:26:19,870
zero.

320
00:26:22,560 --> 00:26:24,070
OK let's have a look.

321
00:26:24,070 --> 00:26:27,250
So now we've got a square and a circle

322
00:26:31,740 --> 00:26:33,100
and something very small.

323
00:26:33,100 --> 00:26:33,570
There it is

324
00:26:36,460 --> 00:26:37,080
a square

325
00:26:40,120 --> 00:26:42,170
and something very small again.

326
00:26:42,480 --> 00:26:44,780
OK we definitely want to have a minimum size here.

327
00:26:47,420 --> 00:26:59,550
So let's change the width to be a random number from 0 to 200 and then we'll add 100 to that.

328
00:26:59,720 --> 00:27:04,190
And that effectively gives us a random number between 100 and 300.

329
00:27:04,730 --> 00:27:09,620
So it shouldn't get too small every day.

330
00:27:14,110 --> 00:27:18,050
Pretty So we're nearly done.

331
00:27:18,170 --> 00:27:23,060
All I'm going to do is wrap it up a little bit give it a nice font and a bit of a title at the top so

332
00:27:23,060 --> 00:27:25,500
it looks like more of a finished article.

333
00:27:29,330 --> 00:27:31,780
So that's pretty trivial in the scheme of things.

334
00:27:35,660 --> 00:27:38,390
But still makes all the difference.

335
00:27:39,930 --> 00:27:49,930
So it will cool it reaction time them and then we'll have an H1 which says test your reactions

336
00:27:53,280 --> 00:27:56,160
and a little bit of instruction.

337
00:27:56,160 --> 00:28:05,670
So let's say click on the boxes and circles as quickly as you can.

338
00:28:10,290 --> 00:28:17,630
And I'm going to use a neat sensor font and we'll do that for everything.

339
00:28:17,940 --> 00:28:23,180
So I'll use body and then we'll set the phone family too.

340
00:28:23,520 --> 00:28:30,460
I'll keep it simple and just choose sans serif see how that looks.

341
00:28:30,750 --> 00:28:31,730
OK.

342
00:28:31,740 --> 00:28:33,720
Nice.

343
00:28:33,720 --> 00:28:42,170
I'd like a little bit more emphasis of your time down here in say let's make that bold

344
00:28:45,970 --> 00:29:01,200
and we'll do that with a class of bold so funny white is old and then we go so let's have a look that's

345
00:29:01,220 --> 00:29:02,380
working great.

346
00:29:06,670 --> 00:29:07,780
Fantastic.

347
00:29:08,170 --> 00:29:09,120
Hope you enjoyed that one.

348
00:29:09,130 --> 00:29:11,480
See if you can get a better time than me.

349
00:29:12,040 --> 00:29:17,790
And as always there's a lot of ways you could extend this so you might want to save the as quickest

350
00:29:17,800 --> 00:29:18,870
time for example.

351
00:29:18,870 --> 00:29:21,890
So it displays that constantly and then that gives them a challenge to beat it.

352
00:29:21,910 --> 00:29:27,970
You might want to show their average time or you might want to change the way the box display is completely

353
00:29:27,970 --> 00:29:28,860
up to you.

354
00:29:29,500 --> 00:29:30,440
But I hope you enjoy that.

355
00:29:30,450 --> 00:29:36,100
And as always I hope you manage to do a fair bit of it yourself or if not that you realized after we

356
00:29:36,100 --> 00:29:36,740
completed it.

357
00:29:36,820 --> 00:29:38,910
Yeah maybe I could have done more of that.

358
00:29:39,400 --> 00:29:44,380
Congratulations once again forgetting pretty much to the end of this chapter we've just got one small

359
00:29:44,380 --> 00:29:51,070
video left and that's going to show you just like with CSX how we can store our javascript in a separate

360
00:29:51,070 --> 00:29:53,860
file using external javascript.
