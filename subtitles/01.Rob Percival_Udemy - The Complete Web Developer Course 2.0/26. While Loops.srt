1
00:00:00,630 --> 00:00:05,140
All right so now we've seen how four loops can be used to cycle through arrays.

2
00:00:05,160 --> 00:00:09,750
We'll see how we can do exactly the same thing with a WHILE loop and then we'll see a different example

3
00:00:09,900 --> 00:00:14,930
that shows the situation that you might prefer using a while loop rather than a flip.

4
00:00:15,090 --> 00:00:18,690
So I'm going to take what we've got here and just turn it into a WHILE loop.

5
00:00:18,690 --> 00:00:25,550
First off from a follow up should hopefully make it pretty clear how while loops work.

6
00:00:25,600 --> 00:00:30,430
So remember with a for loop we start off with stating that I is initially zero.

7
00:00:30,480 --> 00:00:35,640
And then we keep going as long as I is less than the number of tweets or the number of items in this

8
00:00:35,640 --> 00:00:36,300
array.

9
00:00:36,540 --> 00:00:39,400
And we increased by one every time.

10
00:00:39,750 --> 00:00:47,580
So to do that with a WHILE loop we would set high to be zero outside the loop this time.

11
00:00:47,580 --> 00:00:56,660
And then we get rid of our four instructions and replace that with a while and then always state in

12
00:00:57,170 --> 00:01:02,720
the definition of loop is the condition for the while loop to continue.

13
00:01:02,720 --> 00:01:10,700
So while I is less than and again tweets dot length

14
00:01:13,720 --> 00:01:18,920
so this will now keep going as long as I is less than tweet length.

15
00:01:19,060 --> 00:01:23,060
What we don't have yet is an instruction to increase.

16
00:01:23,070 --> 00:01:29,470
I buy one every time and that is now a complete while League which will do exactly the same thing as

17
00:01:29,470 --> 00:01:31,340
the for loop that we had before.

18
00:01:31,690 --> 00:01:34,630
So let's just check yeah.

19
00:01:34,780 --> 00:01:35,250
There we go.

20
00:01:35,260 --> 00:01:39,340
We get exactly the same output but you can see the logic is a little bit different.

21
00:01:39,340 --> 00:01:44,590
We're defining our count variable first then we're saying keep going as long as our count variable is

22
00:01:44,590 --> 00:01:45,590
less than this.

23
00:01:45,820 --> 00:01:50,780
And then each time the loop goes through we're manually adding 1 to i.

24
00:01:50,900 --> 00:01:54,290
So it's the same thing but structured slightly differently.

25
00:01:54,370 --> 00:01:58,870
I actually prefer while loops generally because they're a bit more flexible but in most cases when you're

26
00:01:58,870 --> 00:02:01,390
using a for loop you could use a while loop.

27
00:02:01,450 --> 00:02:02,420
It's up to you.

28
00:02:02,710 --> 00:02:05,270
So when Mike a while loop be a good idea.

29
00:02:05,410 --> 00:02:12,310
Well to demonstrate that I'm going to go back to how how many fingers app but I'm going to turn it around.

30
00:02:12,310 --> 00:02:17,950
So instead of us guessing how many fingers the computer is holding up the computer has to guess how

31
00:02:17,950 --> 00:02:19,900
many fingers we're holding up.

32
00:02:19,900 --> 00:02:24,330
And essentially I'm going to set it up so we state how many fingers we're holding up.

33
00:02:24,460 --> 00:02:30,250
And then the computer keeps taking random guesses until it gets it right and then it tells you how many

34
00:02:30,250 --> 00:02:32,230
guesses it took.

35
00:02:32,350 --> 00:02:35,640
So I'm going to set this as a optional challenge.

36
00:02:35,710 --> 00:02:38,790
So it's quite a tricky one but we're not going to do any googling.

37
00:02:38,790 --> 00:02:40,330
There's no new information here.

38
00:02:40,450 --> 00:02:43,810
It's just using wild loops in a more advanced way.

39
00:02:44,080 --> 00:02:47,600
So I'll give you a moment to put the video and give it a shot if you're feeling confident.

40
00:02:53,420 --> 00:02:54,470
All right.

41
00:02:54,860 --> 00:02:58,820
Well don't worry if it didn't it was a tricky one as I said.

42
00:02:58,820 --> 00:03:03,980
So I'm going to start by saying how many fingers are you.

43
00:03:04,130 --> 00:03:08,880
That is the user of the Web site holding up.

44
00:03:09,290 --> 00:03:17,080
And then we'll have an input with I type of text.

45
00:03:17,140 --> 00:03:22,410
I had an ID of let's call it my number

46
00:03:33,710 --> 00:03:34,970
and then I button

47
00:03:38,510 --> 00:03:47,900
that says guess and we'll give that an idea of guess that's it.

48
00:03:47,900 --> 00:03:56,230
So the idea is that we'll say three and then the computer will have to guess so as usual we want the

49
00:03:56,230 --> 00:03:59,720
action to commence when the guest button is pressed.

50
00:04:00,040 --> 00:04:03,610
So we'll set that up document or get an element by id

51
00:04:06,040 --> 00:04:17,010
guess and then we want to add an own click to that which is our usual function and then curly brackets.

52
00:04:17,890 --> 00:04:22,600
And then I'm not going to do a check immediately this time because I'm pretty confident about that but

53
00:04:22,600 --> 00:04:32,380
I'll set up a variable my number which is going to equal whatever the user has entered.

54
00:04:33,040 --> 00:04:42,940
So that's going to be document to get element by id and the ID is my number and we want the value of

55
00:04:42,940 --> 00:04:43,370
that.

56
00:04:43,420 --> 00:04:50,970
As we've seen before and I'm just going to let my number just because I don't want to do too much before

57
00:04:54,290 --> 00:04:55,730
we know that everything is set up.

58
00:04:55,790 --> 00:04:59,830
OK William that's looking good.

59
00:04:59,930 --> 00:05:05,570
So now we're going to get the computer to choose a random number between 0 and 5.

60
00:05:05,930 --> 00:05:07,640
So we've done this before.

61
00:05:09,320 --> 00:05:11,030
So we'll call this guess.

62
00:05:11,300 --> 00:05:19,720
And that's initially going to be math to random then we most play by six

63
00:05:24,000 --> 00:05:36,600
and then we use math floor to make it a whole number between 0 and 5.

64
00:05:36,600 --> 00:05:39,660
All right then we want to do a check to see if

65
00:05:42,720 --> 00:05:45,190
the computer got it right.

66
00:05:45,210 --> 00:05:50,030
So if guess is equal to my number.

67
00:05:52,020 --> 00:05:54,280
Then the computer got it right.

68
00:05:54,900 --> 00:05:57,680
So for now I'm just going to put a little comment in there.

69
00:06:01,570 --> 00:06:03,300
Computers correct else

70
00:06:05,790 --> 00:06:08,950
computer is wrong.

71
00:06:09,870 --> 00:06:16,340
So what we want to happen is we want this to go on and on and on until we get to here.

72
00:06:16,650 --> 00:06:17,990
The computer is correct.

73
00:06:18,060 --> 00:06:21,500
And then we want to tell the user how many goals it took.

74
00:06:21,990 --> 00:06:28,860
So what I'm going to do is set up a variable called.

75
00:06:29,070 --> 00:06:30,520
Got it.

76
00:06:31,140 --> 00:06:36,960
And this is going to be a new type of variable that we haven't seen before which is called a Boullion

77
00:06:37,620 --> 00:06:40,850
and a boolean variable is either true or false.

78
00:06:40,890 --> 00:06:45,590
So initially I got it is false because it hasn't got it yet.

79
00:06:45,870 --> 00:06:47,160
And then when it has got it we'll set.

80
00:06:47,160 --> 00:06:58,350
Got it to say this is the clever bit we're going to keep going as long as it is false.

81
00:06:59,040 --> 00:07:07,520
And we're actually going to keep doing all of this until it is no longer false.

82
00:07:07,560 --> 00:07:11,460
So let's end on that so that we can say this is all part of the While loop.

83
00:07:11,610 --> 00:07:14,810
So remember the computer gets it at this point.

84
00:07:14,820 --> 00:07:18,060
If gas is equal to my number.

85
00:07:18,740 --> 00:07:20,640
So at this point we will set.

86
00:07:20,640 --> 00:07:21,950
Got it.

87
00:07:21,970 --> 00:07:24,190
Is equal to true.

88
00:07:25,990 --> 00:07:28,780
And we also want to let

89
00:07:32,130 --> 00:07:33,970
go it

90
00:07:38,020 --> 00:07:44,870
and now if they're wrong we want to just add one to the number of guesses so that we know how many guesses

91
00:07:45,260 --> 00:07:48,440
the computer has had.

92
00:07:48,440 --> 00:07:54,170
So let's set that number of guesses.

93
00:07:54,470 --> 00:07:59,040
So we'll start off one because it's going to take the computer at least one guess.

94
00:07:59,690 --> 00:08:07,060
And then if the computer gets it wrong we'll add 1 to the number of guesses.

95
00:08:07,100 --> 00:08:09,640
So take a moment just to see the logic of this.

96
00:08:10,130 --> 00:08:13,690
As long as it is false We're going to go round and round.

97
00:08:13,790 --> 00:08:15,920
In fact there's a slight problem there.

98
00:08:15,980 --> 00:08:17,900
I closed my curly bracket.

99
00:08:18,310 --> 00:08:19,090
Yeah that's better.

100
00:08:19,220 --> 00:08:25,250
So as long as God it is false We're going to go round and round keep guessing until got it becomes true

101
00:08:25,640 --> 00:08:27,600
and then we won't do it again.

102
00:08:27,980 --> 00:08:34,430
So you can hopefully see one big advantage of this is that while loops can have varying lengths.

103
00:08:34,430 --> 00:08:36,230
Now that is true for Phillips as well.

104
00:08:36,290 --> 00:08:39,540
But while loops are kind of set up for that more naturally.

105
00:08:39,690 --> 00:08:44,590
So this is simply going to keep going until the computer gets it right.

106
00:08:44,660 --> 00:08:47,780
So let's just justify that we've got it right by

107
00:08:50,680 --> 00:08:52,340
telling the user what it was.

108
00:08:52,930 --> 00:08:54,100
So it was I.

109
00:08:54,250 --> 00:08:58,490
And then we're going to we could use either guess or my number here.

110
00:08:58,600 --> 00:09:00,540
They're both the same doesn't really matter.

111
00:09:00,850 --> 00:09:02,230
Or use guess.

112
00:09:02,500 --> 00:09:13,510
And then we need to say it took me and then let's just expand this so we can see it clearly number of

113
00:09:13,510 --> 00:09:16,930
guesses guesses.

114
00:09:17,430 --> 00:09:18,640
Hopefully if that makes sense.

115
00:09:18,640 --> 00:09:19,020
We're going to say.

116
00:09:19,020 --> 00:09:19,650
Got it.

117
00:09:19,660 --> 00:09:20,280
It was.

118
00:09:20,320 --> 00:09:21,610
And then whatever the number was.

119
00:09:21,760 --> 00:09:25,070
It took me a number of guesses guesses.

120
00:09:26,920 --> 00:09:28,350
So let's have a look.

121
00:09:28,350 --> 00:09:32,500
I've done quite a lot there without checking so fingers crossed it work.

122
00:09:32,610 --> 00:09:36,280
So let's try three and guess.

123
00:09:36,340 --> 00:09:36,840
Got it.

124
00:09:36,850 --> 00:09:37,610
It was a three.

125
00:09:37,610 --> 00:09:40,730
It took me nine guesses.

126
00:09:40,770 --> 00:09:43,760
Sounds about right to me two guesses.

127
00:09:43,800 --> 00:09:45,020
Excellent.

128
00:09:45,020 --> 00:09:48,650
So it looks like our system is working.

129
00:09:48,660 --> 00:09:50,470
Fantastic.

130
00:09:51,510 --> 00:09:58,690
All right so that's how a while loop here works and how potentially it can go on until something happens.

131
00:09:58,830 --> 00:10:03,070
We don't necessarily have to state how many times it's going to happen in advance.

132
00:10:03,090 --> 00:10:05,920
It does give me the opportunity for a quick warning though.

133
00:10:06,240 --> 00:10:11,640
And when you use while loops like this we need to be careful that our while loop is not going to potentially

134
00:10:11,640 --> 00:10:13,750
go on forever.

135
00:10:13,800 --> 00:10:19,380
Now we're guessing continue random numbers here that this is a very small possibility we could go on

136
00:10:19,590 --> 00:10:21,870
for ages and ages before the computer gets it right.

137
00:10:21,870 --> 00:10:24,910
But that's pretty unlikely and I'd be willing to let that go.

138
00:10:24,990 --> 00:10:28,440
But as we've got a free input here.

139
00:10:28,670 --> 00:10:32,200
They use a kid and a six for example.

140
00:10:32,310 --> 00:10:36,420
And if we press guess now something very bad is going to happen.

141
00:10:36,420 --> 00:10:40,860
And essentially what we've done is we've crash the browser because the computer is never going to get

142
00:10:40,860 --> 00:10:44,550
it because the computer only guess is 0 1 2 3 4 or 5.

143
00:10:44,580 --> 00:10:47,300
So it's not going to get 6.

144
00:10:47,370 --> 00:10:50,010
So we'd have to have a check in place.

145
00:10:50,010 --> 00:10:54,420
I'm just going to restart that page hopefully it will let me.

146
00:10:54,420 --> 00:11:00,300
But we should definitely have a check to make sure that the user has entered 0 1 2 3 4 or 5.

147
00:11:00,310 --> 00:11:00,850
There we go.

148
00:11:00,900 --> 00:11:04,040
It's even become unresponsive.

149
00:11:04,260 --> 00:11:05,190
Yikes.

150
00:11:05,190 --> 00:11:07,010
We definitely want to avoid that.

151
00:11:07,020 --> 00:11:09,850
So a better option here would be a drop down.

152
00:11:10,380 --> 00:11:18,900
So my final challenge for you for this video is to change the input to a dropdown or select which only

153
00:11:18,900 --> 00:11:30,180
allows the user to enter 0 1 2 3 4 or 5 different.

154
00:11:30,190 --> 00:11:30,930
All right.

155
00:11:31,090 --> 00:11:32,580
You remember how to do it.

156
00:11:32,700 --> 00:11:38,360
I've actually realized that I've forgotten to close the Powerball off as well so let's do that.

157
00:11:38,360 --> 00:11:49,570
So instead of an input we're going to have a select the ID will remain the same but then we'll have

158
00:11:49,630 --> 00:11:52,120
our options.

159
00:11:52,150 --> 00:11:53,190
So we've got 0

160
00:11:56,230 --> 00:12:00,520
1 2 3 4 5 is in

161
00:12:08,870 --> 00:12:14,400
there we go and the select and then have a button.

162
00:12:14,620 --> 00:12:17,920
And I think we slightly need to actually to put the paragraph down there.

163
00:12:18,750 --> 00:12:20,330
There we go.

164
00:12:21,340 --> 00:12:22,790
So let's take a look.

165
00:12:22,870 --> 00:12:30,570
This now is cleaner and there should be no way that they should crash.

166
00:12:30,910 --> 00:12:34,690
One final way that you could be absolutely certain would be to have a check at some point to see if

167
00:12:34,690 --> 00:12:37,640
the number of guesses was bigger than 100 or something like that.

168
00:12:37,690 --> 00:12:40,250
And if that was the case then something's probably going wrong.

169
00:12:40,450 --> 00:12:44,060
Now be a good way to make absolutely sure this thing wasn't going to crash.

170
00:12:45,550 --> 00:12:45,900
All right.

171
00:12:45,900 --> 00:12:48,310
So that's a good use of while loops.

172
00:12:48,310 --> 00:12:52,060
You'll be pleased to hear that you've nearly made it to the end of the JavaScript section.

173
00:12:52,060 --> 00:12:55,780
We've got one more video on functions coming up next.

174
00:12:55,810 --> 00:13:00,630
And then we're going to be making our big javascript project which is a reaction.
