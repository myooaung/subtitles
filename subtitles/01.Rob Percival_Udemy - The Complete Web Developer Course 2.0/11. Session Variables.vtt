WEBVTT
1
00:00:00.330 --> 00:00:06.830
So now we know how to create a sign up form and save the users data on our database.

2
00:00:06.900 --> 00:00:11.910
We need to have a way of actually keeping them signed into our Web site so that we know who they are

3
00:00:12.120 --> 00:00:14.020
and can show them the right information.

4
00:00:14.370 --> 00:00:17.290
And one way to do that is with session variables.

5
00:00:17.640 --> 00:00:25.770
So I'm actually going to do that on a new ph file for reasons that I'll show you later on.

6
00:00:25.770 --> 00:00:30.220
So let's create a file called session ph.

7
00:00:31.500 --> 00:00:36.570
And then I'll use command control on windows to open it in my text Tota

8
00:00:41.180 --> 00:00:50.120
and then we'll just change the R L here to S. dot ph P and I'll do a quick test to make sure everything

9
00:00:50.120 --> 00:00:53.530
is connected up there again.

10
00:00:54.050 --> 00:00:55.730
So to use session variables

11
00:00:59.220 --> 00:01:07.090
we first have to start our session and we do that using session underscore.

12
00:01:07.330 --> 00:01:12.870
Start simple enough and then to use the session variables.

13
00:01:12.870 --> 00:01:16.230
We do it in exactly the same way as with get and post.

14
00:01:16.440 --> 00:01:17.820
So if I wanted to set up

15
00:01:20.730 --> 00:01:29.800
session user name for example I might do something like that and then set it equal to Percival.

16
00:01:29.850 --> 00:01:31.920
So now I've created a session variable.

17
00:01:31.920 --> 00:01:33.450
So what's special about that.

18
00:01:33.780 --> 00:01:39.330
Well the great thing about it is that this session variable will remain live while the user is browsing

19
00:01:39.350 --> 00:01:43.100
our Web site as long as they don't shut down their browser.

20
00:01:43.110 --> 00:01:49.170
So what I mean by that is if I carry the session variable

21
00:01:52.210 --> 00:02:00.710
username then obviously first time I do it it comes up with raw Percival that we get.

22
00:02:01.080 --> 00:02:10.450
But the great thing is if I now take out that line and run the code again it still knows what that username

23
00:02:10.560 --> 00:02:12.470
variable is.

24
00:02:12.480 --> 00:02:17.190
So this is a great way of keeping a user essentially logged in because at the beginning of each of your

25
00:02:17.190 --> 00:02:21.160
scripts you can check to see if there's a session variable for user name.

26
00:02:21.270 --> 00:02:24.470
And if it is then show the user name they logged in page.

27
00:02:24.480 --> 00:02:28.320
If not then you'll probably show them a log in or sign up page.

28
00:02:28.800 --> 00:02:33.540
One quick thing to note is that you can use session variables on different pages of your website but

29
00:02:33.540 --> 00:02:38.520
you need to have sessions start at the beginning of each page.

30
00:02:38.580 --> 00:02:43.440
If you load a page on your site without a session start then that will lose the session.

31
00:02:43.440 --> 00:02:49.500
It's also a good idea to avoid putting any HVM l code before you start your session because that can

32
00:02:49.500 --> 00:02:52.090
break your session as well.

33
00:02:52.110 --> 00:02:52.610
All right.

34
00:02:52.650 --> 00:02:56.190
So let's close that down for a moment and let's

35
00:02:58.980 --> 00:03:02.120
go back to our index top page file.

36
00:03:04.320 --> 00:03:05.090
Over here.

37
00:03:05.220 --> 00:03:21.390
And let's start our session here as well and then let's just make sure that we can access that use a

38
00:03:21.420 --> 00:03:25.070
name variable and there you go.

39
00:03:25.110 --> 00:03:26.740
You can see that we can.

40
00:03:26.850 --> 00:03:29.640
So that's a completely different script on our server.

41
00:03:29.730 --> 00:03:34.220
But we've still got the session variable.

42
00:03:34.350 --> 00:03:35.190
All right.

43
00:03:35.190 --> 00:03:39.780
So that's great to give you a bit more of an idea about how we might use this in practice.

44
00:03:40.020 --> 00:03:44.210
I'm going to change our script so that's when the user is signed up.

45
00:03:44.220 --> 00:03:51.810
It doesn't just sign them up but it adds their email address as a session variable and then read directs

46
00:03:51.810 --> 00:04:00.210
them to a second page which then we show them some information about their new account so we can do

47
00:04:00.210 --> 00:04:01.630
that pretty easily.

48
00:04:04.760 --> 00:04:17.750
We'll just set session email equal to the email address that I signed up with and then we'll do the

49
00:04:17.750 --> 00:04:29.270
redirect which we do by setting a header and that header is a new location and the location is the location

50
00:04:29.270 --> 00:04:31.430
of the script that we want to send them.

51
00:04:31.460 --> 00:04:34.960
I'm going to send them to my session doc ph P

52
00:04:39.100 --> 00:04:39.610
file.

53
00:04:39.630 --> 00:04:42.590
So we'll just call it Session top HP.

54
00:04:43.110 --> 00:04:49.930
So now this will add them into the database and then adds the email to a session variable and then we

55
00:04:49.960 --> 00:04:55.720
direct them to our new logged in page.

56
00:04:56.030 --> 00:05:00.770
So now this is the challenge for you when that editing session appears to be what I want you to do is

57
00:05:00.770 --> 00:05:10.970
check to see if there is a session email variable and if there is show them a bit of text like you are

58
00:05:10.970 --> 00:05:18.680
logged in and if not redirect them back to the initial logon page.

59
00:05:18.760 --> 00:05:20.080
So if they are logged in.

60
00:05:20.080 --> 00:05:23.440
Show them any kind of log in text and if they're not.

61
00:05:23.440 --> 00:05:29.340
Redirect them back to the page with the log in form go for it.

62
00:05:40.430 --> 00:05:40.790
All right.

63
00:05:40.820 --> 00:05:41.570
Have you managed it.

64
00:05:41.570 --> 00:05:44.080
That was quite a tricky one.

65
00:05:44.120 --> 00:05:45.710
We could do something like If

66
00:05:48.390 --> 00:05:56.300
session e-mail exists then you are logged in.

67
00:05:56.890 --> 00:06:02.730
And it was like what we would actually do in reality is show them the home page for our app or whatever

68
00:06:02.730 --> 00:06:06.260
it was and if not.

69
00:06:06.270 --> 00:06:11.190
So if they're trying to go to the log in page but they're not logged in then we're going to redirect

70
00:06:11.190 --> 00:06:24.800
them using header and then location and we want to send them back to index top HP.

71
00:06:24.820 --> 00:06:25.370
All right.

72
00:06:25.390 --> 00:06:33.710
So got two scripts working together that let's see if we can make them work.

73
00:06:33.980 --> 00:06:40.770
I do still have my session user name that I'm just going to get rid of that to avoid any confusion that

74
00:06:40.780 --> 00:06:41.250
we get.

75
00:06:41.260 --> 00:06:46.870
So let's sign up with a new e-mail address is Roback me dot com.

76
00:06:47.500 --> 00:06:53.680
Put in a random password and then click sign up.

77
00:06:53.680 --> 00:06:57.320
So now there we go saying you are logged in.

78
00:06:57.790 --> 00:07:02.200
And that's actually on a completely new page on our site.

79
00:07:02.500 --> 00:07:04.430
So what we've done there is pretty powerful.

80
00:07:04.510 --> 00:07:09.400
We've said that as long as the user doesn't close their browser down they can navigate from one page

81
00:07:09.400 --> 00:07:14.400
to another on our site and our site will know who they are and that they are locked in.

82
00:07:14.680 --> 00:07:18.510
So we've essentially got a log in system up and running.

83
00:07:19.270 --> 00:07:20.230
So that's pretty good.

84
00:07:20.350 --> 00:07:26.560
But what if you want your user sessions to be a bit more persistent you want them to continue even if

85
00:07:26.560 --> 00:07:29.940
the user shuts down their browser and comes back a few days later.

86
00:07:30.400 --> 00:07:35.290
Well for that we use cookies and I'll show you how they work in the next video.
