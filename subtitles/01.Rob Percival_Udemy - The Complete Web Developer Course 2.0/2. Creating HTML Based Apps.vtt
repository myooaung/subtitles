WEBVTT
1
00:00:00.150 --> 00:00:05.880
In this section we'll learn how to create a real mobile app that you can put on the App Store or Google

2
00:00:05.880 --> 00:00:09.480
Play with M L C S S and Javascript.

3
00:00:09.510 --> 00:00:11.970
There are a number of obvious benefits to doing this.

4
00:00:11.970 --> 00:00:17.910
First and foremost that you can just develop once and then deploy your app to a number of different

5
00:00:17.910 --> 00:00:18.780
systems.

6
00:00:18.780 --> 00:00:24.420
It also of course allows you to use your HDMI and Javascript skills in app creation without having to

7
00:00:24.420 --> 00:00:29.630
learn the specific languages and systems of each different mobile platform.

8
00:00:29.670 --> 00:00:34.020
I should say at this point that there are some disadvantages of doing it this way and although we'll

9
00:00:34.020 --> 00:00:41.160
see how to access many of the phones features such as the accelerometer and the camera.

10
00:00:41.160 --> 00:00:47.160
We won't have access to all of the features that we would get if we were developing the app natively.

11
00:00:47.160 --> 00:00:53.400
You also can experience performance issues because you are running effectively a mobile web site within

12
00:00:53.580 --> 00:00:54.330
your app.

13
00:00:54.330 --> 00:00:58.470
So it's not going to be as fast or as fluid as a native app.

14
00:00:58.470 --> 00:01:02.370
Having said that though if you just want to make something pretty simple or you want to get a demo out

15
00:01:02.370 --> 00:01:07.600
there as quickly as possible then building apps with aged him L is a perfectly good option.

16
00:01:07.620 --> 00:01:12.690
There are a number of different frameworks and platforms to choose from when developing HDMI based apps

17
00:01:12.960 --> 00:01:19.920
but we're going to focus on two in this section and the first is app dot J.S. which you can download

18
00:01:19.980 --> 00:01:23.930
code dot K-K dot com slash app slash to.

19
00:01:24.240 --> 00:01:30.480
And this is just a collection of CSSA styles and Javascript functions that make it much easier to make

20
00:01:30.480 --> 00:01:35.360
your TNL page look and behave like an app on that page.

21
00:01:35.360 --> 00:01:43.010
You can see a few of the demos and so here we can change the color of the title bar at the top there

22
00:01:43.520 --> 00:01:54.370
and we can also view lists buttons inputs etc. and you can see that it behaves pretty similar to how

23
00:01:54.370 --> 00:01:55.870
a mobile app does.

24
00:01:55.900 --> 00:02:01.420
It also looks pretty modern and has a style fairly similar to the default iOS stylings but this is what

25
00:02:01.420 --> 00:02:03.630
we'll be using on the HD M-L side.

26
00:02:03.850 --> 00:02:10.390
Then once we've built the app we're going to be using phone gap build to actually deploy it to a number

27
00:02:10.390 --> 00:02:17.030
of different platforms and I'm going to show you specifically how to deploy to Android and iOS so finger

28
00:02:17.120 --> 00:02:23.620
build is free to use for a single app and you'll be able to get your app not only on iOS and Android

29
00:02:23.620 --> 00:02:26.330
but pretty much every mobile platform that's out there.

30
00:02:26.560 --> 00:02:32.260
So it's a really great system and it also includes a huge range of plugins which allow you to do a number

31
00:02:32.260 --> 00:02:40.510
of specific things on particular devices and use the particular phone features such as camera accelerometer

32
00:02:40.700 --> 00:02:42.520
et cetera.

33
00:02:42.580 --> 00:02:47.980
So there's a whole new world opening up to us here and we're going to start looking at J.S. in the next

34
00:02:47.980 --> 00:02:48.260
video.
