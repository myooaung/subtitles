WEBVTT
1
00:00:00.470 --> 00:00:05.820
OK so now that we've set up our key and submitted our AP K to Google Play we're going to see how to

2
00:00:05.820 --> 00:00:09.910
do a similar thing for submitting to the iOS App Store.

3
00:00:10.020 --> 00:00:14.880
So just like with Android we need to create a key and like with Android we need to pay some money to

4
00:00:14.880 --> 00:00:16.140
do that as well.

5
00:00:16.140 --> 00:00:21.300
Apple charge $99 a year to be part of the developer program and you will need to pay that if you want

6
00:00:21.300 --> 00:00:23.840
to put your apps on the App Store.

7
00:00:23.970 --> 00:00:33.300
So assuming you want to do that we start at the iOS provisioning portal which allows us to provision

8
00:00:33.330 --> 00:00:40.250
our apps for iOS so do a quick google for that and then click there.

9
00:00:40.420 --> 00:00:45.220
If you're not already signed in then you'll be asked to sign in there and if you're not already a registered

10
00:00:45.220 --> 00:00:49.550
developer you need to create an account and pay the $99.

11
00:00:49.660 --> 00:00:54.370
But once you've gone through that process you'll get to this page and you'll need to click certificates

12
00:00:55.750 --> 00:00:59.210
then click plus to create a new certificate.

13
00:01:00.090 --> 00:01:05.860
And we want an app store production certificate to put it on the App Store.

14
00:01:07.540 --> 00:01:13.190
And then click continue and then we'll need a CSR file.

15
00:01:13.210 --> 00:01:18.050
Now you can create these on a PC but it's a very complex process and I wouldn't recommend it.

16
00:01:18.070 --> 00:01:23.590
Essentially if you want to be developing iOS apps even HDMI based ones I'd strongly recommend getting

17
00:01:23.590 --> 00:01:23.980
a Mac.

18
00:01:23.980 --> 00:01:25.370
It makes your life a lot easier.

19
00:01:25.450 --> 00:01:28.160
So here I'm only going to show you the instructions on a Mac.

20
00:01:28.390 --> 00:01:34.000
But if you Google something like create iOS provisioning profile on a PC you will get instructions on

21
00:01:34.000 --> 00:01:34.770
how to do it.

22
00:01:34.840 --> 00:01:36.490
But I warn you it's not fun.

23
00:01:36.700 --> 00:01:38.840
So we can follow the instructions here.

24
00:01:39.370 --> 00:01:43.350
We need the key chain Access app.

25
00:01:43.610 --> 00:01:51.500
So I'd just use command space to get spotlight up and then start I can keep an Access and that will

26
00:01:51.500 --> 00:01:56.560
give you a bunch of keys that are stored on your device.

27
00:01:56.960 --> 00:02:01.910
And as you can see here we want to Ki-Chan access significant assistent request a certificate for my

28
00:02:01.910 --> 00:02:04.470
certificate of authority.

29
00:02:04.530 --> 00:02:10.310
So let's do that key chain access if get assistant request certificate from a certificate authority

30
00:02:11.810 --> 00:02:15.260
and then you can put in your e-mail address that

31
00:02:18.130 --> 00:02:25.850
common name and e-mail address again and I'd recommend using save to this kid.

32
00:02:26.130 --> 00:02:28.140
But you can e-mail it to yourself if you prefer.

33
00:02:28.650 --> 00:02:36.620
And I'm going to leave they specify keep the information blank and then we can just save it right there

34
00:02:36.690 --> 00:02:37.330
on the desktop

35
00:02:40.320 --> 00:02:42.890
that will then save the certificate request.

36
00:02:43.230 --> 00:02:53.730
So I clicked on back over to the apple developer site then click continue and then choose File and we'll

37
00:02:53.730 --> 00:03:05.300
choose the file that we just created click open and then generate and then download.

38
00:03:05.350 --> 00:03:09.230
So now we've created an iOS distribution certificate.

39
00:03:09.240 --> 00:03:11.890
Now we need to create our provisioning profile.

40
00:03:12.000 --> 00:03:20.370
So I'm going to hold down the back button and go back to certificates identifiers and profiles and that

41
00:03:20.370 --> 00:03:21.700
will take me to here.

42
00:03:21.720 --> 00:03:29.940
And this time I want to go to provisioning profiles and once again I want to create a new one and this

43
00:03:29.940 --> 00:03:35.040
is going to be an app store distribution certificate.

44
00:03:35.040 --> 00:03:36.380
Click Continue.

45
00:03:37.020 --> 00:03:41.790
And we need to have an app ID able to create a provisioning profile.

46
00:03:41.790 --> 00:03:49.520
So I'm just going to control click on app IDs over here and open that up in a new tab and then we're

47
00:03:49.520 --> 00:03:51.390
going to create a new app ID

48
00:03:55.650 --> 00:03:58.460
and I'll just call it email by Rob again

49
00:04:01.360 --> 00:04:05.470
and here we need to specify the app ID.

50
00:04:05.590 --> 00:04:10.130
Now we set this up in the previous video when we were setting things up for Android.

51
00:04:10.600 --> 00:04:20.000
It's the same as the package name there so conduct code says dot whatever you want to call your app.

52
00:04:20.410 --> 00:04:22.060
That's how bad.

53
00:04:23.320 --> 00:04:25.550
And then we don't need any of these special services.

54
00:04:25.570 --> 00:04:37.510
But if you did you could select them then and then continue and submit that then creates our Heidi.

55
00:04:38.330 --> 00:04:49.630
So I click on and now we go back over to our provisioning profile page refresh that's And let's just

56
00:04:49.630 --> 00:04:52.970
select that again distribution AppStore.

57
00:04:52.990 --> 00:04:57.230
And we should now be able to select that we get email app by Rob

58
00:05:00.210 --> 00:05:05.010
continue and then choose the certificate that we just created.

59
00:05:05.010 --> 00:05:15.350
So for me that's this one will last for a year and then continue at a profile name.

60
00:05:17.810 --> 00:05:26.120
I'm just going to use the app name then and then generate.

61
00:05:26.900 --> 00:05:30.740
And then we can download that's provisioning Prairieville

62
00:05:33.490 --> 00:05:35.210
lovely nearly there.

63
00:05:35.410 --> 00:05:43.390
We now need the certificate and key bundle which we create in key chain access and we do that by clicking

64
00:05:43.390 --> 00:05:51.300
file and import items and then we import the certificate that we've just created.

65
00:05:55.040 --> 00:05:58.190
And you should be able to find it by its expiry date.

66
00:05:58.190 --> 00:06:08.650
So first of March 2017 for me and then we control click on that and export.

67
00:06:08.670 --> 00:06:14.730
So finally we can say that as our 12 file on the desktop as well.

68
00:06:15.060 --> 00:06:15.570
And again

69
00:06:20.010 --> 00:06:25.620
a nice password that you'll remember will not be easily guessable to protect that.

70
00:06:25.760 --> 00:06:28.380
And then I'm just going to enter my machine password.

71
00:06:28.380 --> 00:06:33.810
So we now have all the files that we need to upload the phone get build.

72
00:06:34.230 --> 00:06:43.400
So we scroll back up Click on our profile at the top there and edit accounts and then we click signing

73
00:06:43.400 --> 00:06:44.440
keys.

74
00:06:44.840 --> 00:06:49.920
And just as we did with Android we're going to add a key for iOS.

75
00:06:49.960 --> 00:06:50.830
It's title.

76
00:06:50.840 --> 00:06:52.880
I'll just put the name of the app.

77
00:06:53.550 --> 00:06:56.030
So email in fact e-mail is key.

78
00:06:56.060 --> 00:06:56.890
Why not.

79
00:06:57.410 --> 00:07:01.800
And then we need the 12 file.

80
00:07:01.870 --> 00:07:02.620
There it is.

81
00:07:04.460 --> 00:07:07.380
And we need the provisioning profile as well.

82
00:07:07.880 --> 00:07:10.320
So that's the mobile provision file

83
00:07:13.520 --> 00:07:15.740
OK submit those keys.

84
00:07:15.740 --> 00:07:20.450
And once again we're going to need to unlock them.

85
00:07:20.930 --> 00:07:24.430
So you put in the password that you entered for.

86
00:07:24.500 --> 00:07:25.660
These are difficult.

87
00:07:25.850 --> 00:07:28.370
And then if that works should be unlocked.

88
00:07:28.790 --> 00:07:31.020
Then we go back to the apps

89
00:07:33.770 --> 00:07:45.800
and just as we did for Android we click on the app name and we select our key and we wait and hope that

90
00:07:45.800 --> 00:07:52.550
this is all going to work and that we'll be able to download our file and it is wonderful.

91
00:07:52.550 --> 00:07:58.140
So instead of an AP K we get an IP file for working with us.

92
00:07:58.220 --> 00:08:01.910
So I'm going to download that again to my desktop.

93
00:08:01.910 --> 00:08:05.440
Now all that remains is to submit to the App Store.

94
00:08:05.960 --> 00:08:15.280
So let's open up a new tab to do that and we do that in an app a Web site called iTunes Connect.

95
00:08:16.040 --> 00:08:23.990
So I choose connect dot apple dot com and again you'll need to have a page developer account to be able

96
00:08:23.990 --> 00:08:27.920
to access this.

97
00:08:28.770 --> 00:08:31.140
But if you've got one you should be able to get in here.

98
00:08:32.300 --> 00:08:38.000
And then we're just going to create a new app on iTunes Connect and upload the file that we've just

99
00:08:38.000 --> 00:08:46.580
downloaded over to my apps and then plus to create a new app

100
00:08:51.110 --> 00:08:56.130
again I'll call it email app by Rob unlady.

101
00:08:56.170 --> 00:09:00.720
We should be able to choose the bundle ID because we've already created it.

102
00:09:00.730 --> 00:09:08.460
There it is email by rope from primary language English.

103
00:09:08.880 --> 00:09:12.810
And then the S-K you hear is the app ID.

104
00:09:13.410 --> 00:09:15.040
So it will select that again.

105
00:09:15.050 --> 00:09:16.750
I didn't make any mistakes.

106
00:09:20.500 --> 00:09:25.550
And then don't forget to select iOS and then click Create

107
00:09:28.740 --> 00:09:29.370
it again.

108
00:09:29.710 --> 00:09:35.950
So as with Android there's a bunch of information that you should fill in about your app there and you

109
00:09:35.950 --> 00:09:43.930
can click features and you can select pricing and availability information there as well.

110
00:09:44.720 --> 00:09:50.100
But the bit that we're interested in is the prepare for submission.

111
00:09:50.250 --> 00:09:56.100
And here is again where you put your screenshots description keywords et cetera et cetera.

112
00:09:56.990 --> 00:09:59.690
But the main thing for us is the build.

113
00:09:59.750 --> 00:10:06.990
So you'd normally use X code if you were making a native app we're going to use application loader 3.0.

114
00:10:08.000 --> 00:10:14.930
So that or download the application loader app to your computer which is what we'll use to upload the

115
00:10:15.570 --> 00:10:19.790
IP file that phone get build created for us.

116
00:10:20.090 --> 00:10:29.360
And once that's done I put up the downloaded file which will install application load for us.

117
00:10:29.360 --> 00:10:38.360
Double click on application later dot package install and see your password and this will then go through

118
00:10:38.360 --> 00:10:41.090
the installation process for the application to load up

119
00:10:46.640 --> 00:10:47.730
so close that down.

120
00:10:47.730 --> 00:10:53.190
And then I'm going to use command space to open up spotlight's and then we should find application loader

121
00:10:54.960 --> 00:10:59.280
in applications agree to the temporary conditions put in your

122
00:11:02.760 --> 00:11:06.260
Apple ID and Password keep yourself signed in.

123
00:11:06.560 --> 00:11:13.670
And then this will sign you into iTunes Connect and we want to deliver our app so let's choose that

124
00:11:14.660 --> 00:11:19.780
then we select our IPA file that we downloaded.

125
00:11:21.520 --> 00:11:28.660
And then it would link that to the application by the you that is the conduct co-star's to email client

126
00:11:28.660 --> 00:11:30.650
by Rob in my case.

127
00:11:30.650 --> 00:11:39.370
So then click next and then it will upload to iTunes Connect for us.

128
00:11:39.520 --> 00:11:42.340
Once again keep your fingers crossed.

129
00:11:43.590 --> 00:11:46.140
And we have some warnings there but that should be OK.

130
00:11:46.190 --> 00:11:50.380
We can add the icon files in iTunes Connect.

131
00:11:50.440 --> 00:11:59.330
So just click next and then done and then if we refresh the page here.

132
00:12:02.630 --> 00:12:07.050
We should see the app as being uploaded.

133
00:12:07.170 --> 00:12:11.260
Well that can take a little while so we might not be able to see that here.

134
00:12:14.960 --> 00:12:21.200
We don't have the build quite yet but that can take an hour or so from here it's just a matter of adding

135
00:12:21.200 --> 00:12:28.790
your screen shots descriptions et cetera et cetera and then submitting for review usually takes about

136
00:12:28.790 --> 00:12:30.850
10 days for your first apt to get reviewed.

137
00:12:30.890 --> 00:12:34.540
And with any luck it will be successful and you'll be on the store.

138
00:12:34.640 --> 00:12:40.070
I've now waited about 10 minutes and I received an email from iTunes Connect saying that the processing

139
00:12:40.070 --> 00:12:47.300
has completed and if we now scroll down to build you can see it says select to build before you submit

140
00:12:47.300 --> 00:12:51.410
your app and then you can choose that built that was uploaded.

141
00:12:51.410 --> 00:12:56.290
Obviously we want to update the icon there and click done.

142
00:12:56.460 --> 00:12:57.450
And that's your build.

143
00:12:57.500 --> 00:13:04.610
So from there it really is just a matter of filling in the various images and description etc. before

144
00:13:04.610 --> 00:13:06.530
submitting your app for review.

145
00:13:06.950 --> 00:13:11.360
So congratulations if you manage to follow along and create all of the various different provisioning

146
00:13:11.360 --> 00:13:15.830
profiles and certificates and that brings us to the end of this section.

147
00:13:15.830 --> 00:13:22.670
So you now know how to make both Front-End and backend sections for a mobile app as well as how to package

148
00:13:22.670 --> 00:13:31.550
that as HVM LCS s and javascript files and then use phone get built to repackage it again for all the

149
00:13:31.550 --> 00:13:38.450
different obstacles and I've shown you specifically how to work with iOS and Android processes for the

150
00:13:38.450 --> 00:13:41.120
other app stores are fairly straightforward as well.

151
00:13:41.120 --> 00:13:44.540
So I hope you've enjoyed the section I'll go off and make the next viral app.
