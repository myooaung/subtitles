WEBVTT
1
00:00:00.080 --> 00:00:03.090
- Let's step back into the legacy application space

2
00:00:03.090 --> 00:00:05.070
for a moment.

3
00:00:05.070 --> 00:00:09.030
Often times, you as a developer, write a feature

4
00:00:09.030 --> 00:00:12.050
and that feature gets staged to a non-prod environment

5
00:00:12.050 --> 00:00:15.060
for an extended period of time.

6
00:00:15.060 --> 00:00:17.090
Once a release is ready is to go,

7
00:00:17.090 --> 00:00:19.070
your feature, and many others,

8
00:00:19.070 --> 00:00:21.070
are packaged up as a release

9
00:00:21.070 --> 00:00:24.030
and moved through several non-prod environments

10
00:00:24.030 --> 00:00:27.020
for integration and testing.

11
00:00:27.020 --> 00:00:30.010
Any defect requires a decision

12
00:00:30.010 --> 00:00:32.040
to hold the release for a fix

13
00:00:32.040 --> 00:00:36.020
or accept the buggy code into the higher environment.

14
00:00:36.020 --> 00:00:39.040
Eventually, sometimes months later,

15
00:00:39.040 --> 00:00:42.040
your code is deployed by someone else,

16
00:00:42.040 --> 00:00:46.020
after you have forgotten about the code you wrote.

17
00:00:46.020 --> 00:00:49.040
This lapse of time, from dev to prod,

18
00:00:49.040 --> 00:00:52.010
often yields a wide gap

19
00:00:52.010 --> 00:00:54.040
between what production looks like

20
00:00:54.040 --> 00:00:56.060
and what development looks like,

21
00:00:56.060 --> 00:00:59.060
increasing a risk of bugs.

22
00:00:59.060 --> 00:01:03.030
Also, these environments tend to be very large

23
00:01:03.030 --> 00:01:07.000
and as such, the resources of a production

24
00:01:07.000 --> 00:01:10.060
are very different than the lower environments.

25
00:01:10.060 --> 00:01:12.090
This difference in resources

26
00:01:12.090 --> 00:01:16.010
can also cause software defects.

27
00:01:16.010 --> 00:01:17.050
It's a vicious cycle

28
00:01:17.050 --> 00:01:22.020
because the time it takes to get a fix to production.

29
00:01:22.020 --> 00:01:25.070
Enter the 12-factor way of dealing with this,

30
00:01:25.070 --> 00:01:28.080
and that very simply is to not allow

31
00:01:28.080 --> 00:01:32.010
a wide gap between your environments.

32
00:01:32.010 --> 00:01:34.020
In a 12-factor world,

33
00:01:34.020 --> 00:01:38.080
the differences between production code and development code

34
00:01:38.080 --> 00:01:42.040
is a few working features at most.

35
00:01:42.040 --> 00:01:44.080
Once a feature is completed,

36
00:01:44.080 --> 00:01:48.010
it is quickly rolled to production

37
00:01:48.010 --> 00:01:51.090
to keep the non-prod and prod environments in synced

38
00:01:51.090 --> 00:01:54.010
as much as possible.

39
00:01:54.010 --> 00:01:56.020
In addition to the code,

40
00:01:56.020 --> 00:02:00.000
the resources and technologies used in production

41
00:02:00.000 --> 00:02:03.020
are the same as those used in non-prod.

42
00:02:03.020 --> 00:02:05.090
Another element outside the code

43
00:02:05.090 --> 00:02:08.050
with regards to dev-prod parody,

44
00:02:08.050 --> 00:02:10.070
is the people involved.

45
00:02:10.070 --> 00:02:14.010
A 12-factor application is often deployed to

46
00:02:14.010 --> 00:02:16.020
a non-production environment

47
00:02:16.020 --> 00:02:19.020
as it is to a production environment,

48
00:02:19.020 --> 00:02:24.040
usually by the same people and processes.

49
00:02:24.040 --> 00:02:27.080
Now, moving a legacy application to this model

50
00:02:27.080 --> 00:02:30.040
is less about code and more about

51
00:02:30.040 --> 00:02:33.040
the software development life cycle for the team

52
00:02:33.040 --> 00:02:37.000
and the ecosystem as a whole that they work in.

53
00:02:37.000 --> 00:02:40.080
The organization needs a fairly radical mindset

54
00:02:40.080 --> 00:02:42.090
to move to this model.

55
00:02:42.090 --> 00:02:45.030
Large companies that I have spoken with

56
00:02:45.030 --> 00:02:47.050
that have evolved to this model,

57
00:02:47.050 --> 00:02:50.020
have gone from one to two releases a year

58
00:02:50.020 --> 00:02:54.000
to as many as 10 to 20 a day or more.

59
00:02:54.000 --> 00:02:55.090
This isn't an easy change

60
00:02:55.090 --> 00:02:58.060
but I have found using example teams

61
00:02:58.060 --> 00:03:01.020
and train-the-trainer type models

62
00:03:01.020 --> 00:03:04.020
helps make this transition smoother.

63
00:03:04.020 --> 00:03:06.050
You will need buy-in to this model,

64
00:03:06.050 --> 00:03:08.090
not only from your development team,

65
00:03:08.090 --> 00:03:11.020
but also the managers.

66
00:03:11.020 --> 00:03:13.040
However, when a feature

67
00:03:13.040 --> 00:03:15.070
that takes time and resources to develop

68
00:03:15.070 --> 00:03:18.050
is available immediately to the customer,

69
00:03:18.050 --> 00:03:20.050
people will quickly notice

70
00:03:20.050 --> 00:03:23.070
and when that annoying bug is quickly fixed,

71
00:03:23.070 --> 00:03:26.000
people will start wanting to be part of that process.

