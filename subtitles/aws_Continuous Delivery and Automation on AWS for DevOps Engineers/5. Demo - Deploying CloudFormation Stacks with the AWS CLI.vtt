WEBVTT
1
00:00:01.140 --> 00:00:04.400
So we've already used CloudFormation inside of the AWS console,

2
00:00:04.400 --> 00:00:07.800
but if we wanted to use it inside of the AWS CLI,

3
00:00:07.800 --> 00:00:10.910
we'd have to make sure we set up the CLI with the AWS

4
00:00:10.910 --> 00:00:13.580
credentials we'd need before we dived into that.

5
00:00:13.580 --> 00:00:17.120
So if you need help with that process and you haven't yet set up the AWS

6
00:00:17.120 --> 00:00:20.740
CLI or generated credentials to work with the CLI,

7
00:00:20.740 --> 00:00:24.440
go to the Instruction section of the materials download for this course.

8
00:00:24.440 --> 00:00:27.500
There should be a bunch of information there to get you to that point,

9
00:00:27.500 --> 00:00:29.440
which is where I'm at right now.

10
00:00:29.440 --> 00:00:32.220
The first thing I'll need to do is make sure I have a stack

11
00:00:32.220 --> 00:00:34.430
that I want to deploy using CloudFormation.

12
00:00:34.430 --> 00:00:37.870
In this case, I'll be using a new stack called dynamodb‑stack.

13
00:00:37.870 --> 00:00:39.820
Inside of here, we have another resource,

14
00:00:39.820 --> 00:00:43.490
not an SNS topic this time, called globomanticsTable.

15
00:00:43.490 --> 00:00:47.510
It has the Type of an AWS::DynamoDB::Table and a bunch of different

16
00:00:47.510 --> 00:00:51.350
properties that describe how this table will be put together, including

17
00:00:51.350 --> 00:00:53.920
some different AttributeDefinitions for the table,

18
00:00:53.920 --> 00:00:56.210
and if we scroll down, a KeySchema,

19
00:00:56.210 --> 00:00:59.440
as well as ProvisionedThroughput and the TableName.

20
00:00:59.440 --> 00:01:01.800
With all this information included in the resource,

21
00:01:01.800 --> 00:01:05.350
we should be able to use this stack to deploy a DynamoDB table.

22
00:01:05.350 --> 00:01:07.960
So, let's try this using the AWS CLI.

23
00:01:07.960 --> 00:01:11.560
I have a handy commands.txt file here to help give you the

24
00:01:11.560 --> 00:01:13.940
commands to do this process using CloudFormation,

25
00:01:13.940 --> 00:01:16.740
in case you're not able to follow along with me here.

26
00:01:16.740 --> 00:01:21.840
We'll start by using the aws cloudformation deploy command.

27
00:01:21.840 --> 00:01:25.070
Now this will take a few different flags, so I'm going to put a space and

28
00:01:25.070 --> 00:01:28.540
then a backslash and hit Enter to make sure that I can type out the rest

29
00:01:28.540 --> 00:01:31.540
of the commands somewhere you can see them and escape the new lines that

30
00:01:31.540 --> 00:01:33.540
I'm hitting when I'm pressing Enter.

31
00:01:33.540 --> 00:01:39.190
So, I'll do ‑‑template‑file, like you see in the commands.txt file,

32
00:01:39.190 --> 00:01:43.450
and I'll pass in the name of the file that I want to include as the stack,

33
00:01:43.450 --> 00:01:48.030
in this case it's dynamodb‑stack.json.

34
00:01:48.030 --> 00:01:50.290
And I'll do another backslash and hit Enter here so we

35
00:01:50.290 --> 00:01:52.540
can type a new line for this command.

36
00:01:52.540 --> 00:01:54.840
I'll also need to give this stack a stack name,

37
00:01:54.840 --> 00:02:01.890
so I'll call this stack‑name demo‑dynamodb‑stack.

38
00:02:01.890 --> 00:02:06.130
So once I hit Enter, it'll take our dynamodb.stack.json file,

39
00:02:06.130 --> 00:02:07.910
move it over into CloudFormation,

40
00:02:07.910 --> 00:02:10.910
and have CloudFormation deploy the resources inside of that.

41
00:02:10.910 --> 00:02:13.000
It'll keep an eye on this from the command line and

42
00:02:13.000 --> 00:02:14.540
give us the results back here.

43
00:02:14.540 --> 00:02:18.020
But we could also go back to the AWS CloudFormation console.

44
00:02:18.020 --> 00:02:20.440
If we look for this inside of the Services drop‑down,

45
00:02:20.440 --> 00:02:24.660
we can find CloudFormation, and then it'll probably be at the very top here,

46
00:02:24.660 --> 00:02:26.860
in this case demo‑dynamodb‑stack.

47
00:02:26.860 --> 00:02:28.630
You'll notice that this has already finished

48
00:02:28.630 --> 00:02:30.390
deploying our resources pretty quickly,

49
00:02:30.390 --> 00:02:33.580
and we can see the entire deployment process if we went to the Events

50
00:02:33.580 --> 00:02:36.950
section where it started the process of creating our stack,

51
00:02:36.950 --> 00:02:39.900
and then went into the process of creating a particular resource,

52
00:02:39.900 --> 00:02:42.230
like the globomanticsTable, and finally,

53
00:02:42.230 --> 00:02:45.640
finished creating the table and the stack itself.

54
00:02:45.640 --> 00:02:48.410
So if we wanted to check this, we could go to the Services section,

55
00:02:48.410 --> 00:02:50.240
look for DynamoDB,

56
00:02:50.240 --> 00:02:53.840
and depending on your AWS console and how many resources you have already,

57
00:02:53.840 --> 00:02:55.350
it might look different than mine.

58
00:02:55.350 --> 00:02:59.560
But we should be able to find, if we search through the table names here,

59
00:02:59.560 --> 00:03:01.470
and if I look for Globomantics,

60
00:03:01.470 --> 00:03:04.440
we have our globomanticsTable that we just created.

61
00:03:04.440 --> 00:03:08.390
And this is how we deploy a CloudFormation stack using the AWS CLI.

62
00:03:08.390 --> 00:03:10.140
Now if we were done with the infrastructure and we

63
00:03:10.140 --> 00:03:11.730
wanted to remove it completely,

64
00:03:11.730 --> 00:03:16.940
we could run the aws cloudformation delete‑stack command.

65
00:03:16.940 --> 00:03:18.840
Now, this runs over a little bit on my screen,

66
00:03:18.840 --> 00:03:21.630
so I'm going to minimize this here so we can see the entire thing.

67
00:03:21.630 --> 00:03:26.240
Then I'll put a backslash, hit Enter, do ‑‑stack‑name,

68
00:03:26.240 --> 00:03:30.330
and then demo‑dynamodb‑stack.

69
00:03:30.330 --> 00:03:32.430
And we have to make sure it's the exact same stack

70
00:03:32.430 --> 00:03:34.070
name as we were seeing earlier.

71
00:03:34.070 --> 00:03:35.360
Now once I've run this,

72
00:03:35.360 --> 00:03:37.950
I should be able to go back to the CloudFormation console,

73
00:03:37.950 --> 00:03:42.420
and if I go back from DynamoDB over to the CloudFormation

74
00:03:42.420 --> 00:03:44.520
section and refresh the screen a little bit,

75
00:03:44.520 --> 00:03:48.340
you'll see that we now have a DELETE_IN_PROGRESS for this entire stack.

76
00:03:48.340 --> 00:03:49.860
Now, we've done this from the CLI,

77
00:03:49.860 --> 00:03:52.060
but if we wanted to do this in the AWS console,

78
00:03:52.060 --> 00:03:53.090
that's also an option.

79
00:03:53.090 --> 00:03:55.070
So let's delete our old stack.

80
00:03:55.070 --> 00:03:57.900
I'm going to click on this deveops‑sns stack that

81
00:03:57.900 --> 00:04:01.590
we created in the last section, and let's click the Delete button here,

82
00:04:01.590 --> 00:04:02.960
and delete this stack.

83
00:04:02.960 --> 00:04:05.360
Both ways are perfectly legitimate ways of getting

84
00:04:05.360 --> 00:04:06.690
rid of your old infrastructure.

85
00:04:06.690 --> 00:04:11.040
The nice thing is because we've only created AWS resources using CloudFormation,

86
00:04:11.040 --> 00:04:12.700
when we delete these stacks,

87
00:04:12.700 --> 00:04:14.470
we don't have to worry about anything being left

88
00:04:14.470 --> 00:04:17.540
behind from everything we've just done.

89
00:04:17.540 --> 00:04:20.430
So now that you know how to both create stacks and delete stacks

90
00:04:20.430 --> 00:04:23.690
using both the AWS console and the AWS CLI,

91
00:04:23.690 --> 00:04:26.140
you should be pretty ready to get started learning

92
00:04:26.140 --> 00:04:32.000
more about CloudFormation later on, and all the other sorts of infrastructure resources that you could create.

