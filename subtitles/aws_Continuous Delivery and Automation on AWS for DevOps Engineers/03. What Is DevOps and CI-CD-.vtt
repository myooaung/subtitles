WEBVTT
1
00:00:01.640 --> 00:00:04.410
So let's look at defining some terms really quickly.

2
00:00:04.410 --> 00:00:07.840
What is DevOps and what is CI/CD?

3
00:00:07.840 --> 00:00:12.800
DevOps is a blanket term that we'll be using for tooling, practices, and ideas

4
00:00:12.800 --> 00:00:16.640
that allow organizations to build better software faster.

5
00:00:16.640 --> 00:00:16.920
Now,

6
00:00:16.920 --> 00:00:20.450
some examples of things that might fall under a DevOps umbrella could

7
00:00:20.450 --> 00:00:23.910
be things like source control systems or agile software development

8
00:00:23.910 --> 00:00:26.570
practices, as well as infrastructure as code,

9
00:00:26.570 --> 00:00:29.880
automated testing, or even automated deployments.

10
00:00:29.880 --> 00:00:32.560
Now you might already have some of these in your organization,

11
00:00:32.560 --> 00:00:36.240
but we'll look at how they can all work together throughout this course.

12
00:00:36.240 --> 00:00:41.340
In addition to DevOps, let's look at what the concept of CI/CD means.

13
00:00:41.340 --> 00:00:45.310
Let's start by defining the CI, which stands for continuous integration.

14
00:00:45.310 --> 00:00:48.640
Continuous integration happens from when you very first commit your

15
00:00:48.640 --> 00:00:52.310
code changes into a source control repository. Then,

16
00:00:52.310 --> 00:00:55.320
with continuous integration, if your code needs to be built,

17
00:00:55.320 --> 00:00:57.170
you'll end up building code.

18
00:00:57.170 --> 00:01:00.040
And then if you have things like tests that you're running,

19
00:01:00.040 --> 00:01:02.140
you'll also run those tests as well.

20
00:01:02.140 --> 00:01:05.720
Now this is all allowing you to integrate your code and prepare it for things

21
00:01:05.720 --> 00:01:09.740
like deployment and maybe tests inside of a test environment.

22
00:01:09.740 --> 00:01:13.230
Continuous integration stops at the point where you're running those

23
00:01:13.230 --> 00:01:16.340
tests against your built code that you've just committed.

24
00:01:16.340 --> 00:01:19.010
If you'd like to extend this process a little further,

25
00:01:19.010 --> 00:01:20.810
you could use continuous delivery,

26
00:01:20.810 --> 00:01:24.380
which would go through all the same steps here, except it would extend to

27
00:01:24.380 --> 00:01:28.390
deploying your code to a test environment and then potentially deploying

28
00:01:28.390 --> 00:01:31.740
it to production after a manual approval.

29
00:01:31.740 --> 00:01:33.780
Now there's another term that you might hear thrown around

30
00:01:33.780 --> 00:01:38.490
for CD instead of continuous delivery, which is continuous deployment.

31
00:01:38.490 --> 00:01:42.340
The difference there is that there's no manual approval process inside of

32
00:01:42.340 --> 00:01:45.870
the continuous deployment pipeline here. You go straight from committing

33
00:01:45.870 --> 00:01:49.700
code to building the code if it needs to be built to any unit tests that

34
00:01:49.700 --> 00:01:51.040
you might need to run against it,

35
00:01:51.040 --> 00:01:53.780
and then you might deploy it into a test environment and run some

36
00:01:53.780 --> 00:01:56.900
things like integration tests inside of a test environment before

37
00:01:56.900 --> 00:01:59.030
automatically deploying it to production.

38
00:01:59.030 --> 00:02:01.370
That manual approval step is only there for continuous

39
00:02:01.370 --> 00:02:05.820
delivery. So now that we know what CI/CD stands for and what

40
00:02:05.820 --> 00:02:12.000
DevOps is in a little bit more detail, you should know what we're going to be focusing on inside of this course.

