WEBVTT
ï»¿1
00:00:00.000 --> 00:00:03.855
Prince here, our concept is how to use Docker,

2
00:00:03.855 --> 00:00:06.270
amaze your tags while pulling images,

3
00:00:06.270 --> 00:00:09.945
or simply how to download required Docker image Washington.

4
00:00:09.945 --> 00:00:12.465
Now, let me go with our docker host.

5
00:00:12.465 --> 00:00:17.655
If you remember, we already pulled or downloaded to Docker images.

6
00:00:17.655 --> 00:00:20.910
Let me display them by using docker images.

7
00:00:20.910 --> 00:00:22.995
Now, see the output.

8
00:00:22.995 --> 00:00:25.715
We are having two images.

9
00:00:25.715 --> 00:00:27.860
One is open to, one is sent waves.

10
00:00:27.860 --> 00:00:31.445
And if you observe this output here we have a tag as well.

11
00:00:31.445 --> 00:00:35.720
Now these are tag is like Latest for your both images.

12
00:00:35.720 --> 00:00:37.055
What is mean by elitist?

13
00:00:37.055 --> 00:00:42.125
So simply latest is nothing but latest available image anywhere.

14
00:00:42.125 --> 00:00:44.435
Docker hub for your image.

15
00:00:44.435 --> 00:00:46.190
Now, if you remember,

16
00:00:46.190 --> 00:00:50.960
we already created two containers by using these two images.

17
00:00:50.960 --> 00:00:52.745
Now these two are the container's.

18
00:00:52.745 --> 00:00:55.475
No, let me enter into any one of the container.

19
00:00:55.475 --> 00:00:58.040
Let's say open to container,

20
00:00:58.040 --> 00:00:59.660
simply Docker, EXE c,

21
00:00:59.660 --> 00:01:03.950
hyphen IT, then you are contained an ID, then Bash shell.

22
00:01:03.950 --> 00:01:07.485
So here I'm using Bash shell to enter into your container.

23
00:01:07.485 --> 00:01:09.835
Now we are inside of our container.

24
00:01:09.835 --> 00:01:15.040
Now let me display the waste information of this container C that 20.

25
00:01:15.040 --> 00:01:18.055
So as of now, for Open to server,

26
00:01:18.055 --> 00:01:19.285
this is the latest version.

27
00:01:19.285 --> 00:01:21.535
That is the meaning of Latest here.

28
00:01:21.535 --> 00:01:25.435
Suppose now I need a container with open to

29
00:01:25.435 --> 00:01:30.190
waste worship as edu.duke before then how we can create it.

30
00:01:30.190 --> 00:01:36.775
Now first, let me come out from this container simply by pressing control p, q.

31
00:01:36.775 --> 00:01:38.080
Fine.

32
00:01:38.080 --> 00:01:45.160
So as of now our images or open to and CentOS,

33
00:01:45.160 --> 00:01:48.130
Now I need a weapon to image with

34
00:01:48.130 --> 00:01:52.865
18 dot-dot-dot O4 waste wash and see that how I'm going to do it.

35
00:01:52.865 --> 00:01:58.910
Docker pull open to see simply if you run docker,

36
00:01:58.910 --> 00:02:03.470
pull open to, it will download the latest version,

37
00:02:03.470 --> 00:02:07.670
but I need particular version so that you had to pass as a tag.

38
00:02:07.670 --> 00:02:10.700
So here tag is nothing but simply a Techstar worship.

39
00:02:10.700 --> 00:02:14.435
Now see that colon 1804.

40
00:02:14.435 --> 00:02:18.710
Actually we how it indoors for version for our open to operating system.

41
00:02:18.710 --> 00:02:21.200
That's why I'm giving that as a tag here.

42
00:02:21.200 --> 00:02:24.410
Be clear while giving peg to pass colon here.

43
00:02:24.410 --> 00:02:26.090
Now let me enter,

44
00:02:26.090 --> 00:02:32.015
see that it is downloading 18 dot-dot-dot O4 open to Watson.

45
00:02:32.015 --> 00:02:36.995
Now, let me list our images which are there without Docker host.

46
00:02:36.995 --> 00:02:39.305
Previously, we were having only two.

47
00:02:39.305 --> 00:02:42.230
Now we are having three images.

48
00:02:42.230 --> 00:02:46.505
So open to latest on also open to four.

49
00:02:46.505 --> 00:02:53.015
Now let me create a container using open to 18 dot-dot-dot for how to create it.

50
00:02:53.015 --> 00:02:56.344
See basically, if you want to create a container,

51
00:02:56.344 --> 00:02:59.135
we have a command like docker,

52
00:02:59.135 --> 00:03:03.590
run hyphen, hyphen D, then image name.

53
00:03:03.590 --> 00:03:06.035
Now here you fight, you simply open to,

54
00:03:06.035 --> 00:03:10.130
it will create a container with the latest open to humans.

55
00:03:10.130 --> 00:03:14.195
But I need with this attack, then you were.

56
00:03:14.195 --> 00:03:16.970
Image colon you were tagged cutting.

57
00:03:16.970 --> 00:03:18.245
Now let me enter.

58
00:03:18.245 --> 00:03:23.270
Now it has been created a container with open to 18 dot-dot-dot for.

59
00:03:23.270 --> 00:03:26.060
Now, let me display the running containers.

60
00:03:26.060 --> 00:03:29.285
Previously we were having only two, now we have three.

61
00:03:29.285 --> 00:03:32.045
See, this is the latest container which we created.

62
00:03:32.045 --> 00:03:37.310
And see that image has been used by open to know,

63
00:03:37.310 --> 00:03:39.155
let me enter into this container.

64
00:03:39.155 --> 00:03:41.375
Now to enter into that container,

65
00:03:41.375 --> 00:03:43.850
simply command is Docker EX DC,

66
00:03:43.850 --> 00:03:46.655
hyphen IT your container ID,

67
00:03:46.655 --> 00:03:48.770
then which type of shell you wanna use.

68
00:03:48.770 --> 00:03:51.635
Suppose I want to use Bash shell to connect with that.

69
00:03:51.635 --> 00:03:52.490
Yes.

70
00:03:52.490 --> 00:03:55.100
Now we enter into container.

71
00:03:55.100 --> 00:03:59.704
Now let me see. Where is information.

72
00:03:59.704 --> 00:04:03.455
Now it is 18 dot-dot-dot for fine.

73
00:04:03.455 --> 00:04:08.120
Now let me come out from this container by pressing control pq.

74
00:04:08.120 --> 00:04:16.670
Now be clear, we how these three images and containers.

75
00:04:16.670 --> 00:04:17.630
Fine.

76
00:04:17.630 --> 00:04:22.085
And one more thing you have to remember that using only one image,

77
00:04:22.085 --> 00:04:24.844
we can create n number of containers.

78
00:04:24.844 --> 00:04:28.430
Whenever if you create a container automatically darker,

79
00:04:28.430 --> 00:04:33.740
we'll do some container ID to separate your container uniquely.

80
00:04:33.740 --> 00:04:36.785
And anyway, it is also going to give some random name.

81
00:04:36.785 --> 00:04:38.090
That's fine.

82
00:04:38.090 --> 00:04:40.430
Now, one more thing.

83
00:04:40.430 --> 00:04:45.260
Suppose here we are using CentOS latest version. Now what is that version?

84
00:04:45.260 --> 00:04:48.335
Let me verify it by entering into

85
00:04:48.335 --> 00:04:53.120
this container because this container has been created by your latest CentOS image.

86
00:04:53.120 --> 00:04:59.600
Now let me enter into Docker EX EC hyphen IT this container with the bash shell.

87
00:04:59.600 --> 00:05:01.445
Sorry, what happened?

88
00:05:01.445 --> 00:05:04.160
Sorry, we need to provide a container ID.

89
00:05:04.160 --> 00:05:09.245
So docker EX EC hyphen IT container ID bash.

90
00:05:09.245 --> 00:05:12.395
Now see your ways information.

91
00:05:12.395 --> 00:05:14.510
It is sent to waste a,

92
00:05:14.510 --> 00:05:17.435
suppose I need send two ways with the,

93
00:05:17.435 --> 00:05:19.290
let say six version.

94
00:05:19.290 --> 00:05:26.390
Now just come out from your container. Now let me pull.

95
00:05:26.730 --> 00:05:32.320
Let's say sent weighs six dot.

96
00:05:32.320 --> 00:05:34.585
If it is there, it will do.

97
00:05:34.585 --> 00:05:37.060
If it is not there, you will get some exception.

98
00:05:37.060 --> 00:05:40.810
See that CentOS six dots is not fun.

99
00:05:40.810 --> 00:05:43.580
Let me try with six dot.

100
00:05:43.680 --> 00:05:46.135
It is there.

101
00:05:46.135 --> 00:05:50.080
But now let me download it.

102
00:05:50.080 --> 00:05:51.445
Fine.

103
00:05:51.445 --> 00:05:54.145
Now let me verify Docker images.

104
00:05:54.145 --> 00:06:01.335
See that open to image with the tag as latest and open to image with the tag as 1804.

105
00:06:01.335 --> 00:06:06.785
Waves with the tag has the latest one and sent away is with the tag as 6.8.

106
00:06:06.785 --> 00:06:12.425
Now if you want to create a container using CentOS six 0.8c, Yes, we can create it.

107
00:06:12.425 --> 00:06:14.150
And one more thing, actually,

108
00:06:14.150 --> 00:06:15.455
to create a container,

109
00:06:15.455 --> 00:06:18.710
you no need to download or pull your image.

110
00:06:18.710 --> 00:06:22.115
If you're directly run docker,

111
00:06:22.115 --> 00:06:26.255
run command to create your container with your required image.

112
00:06:26.255 --> 00:06:28.745
If the image is there on your Docker host,

113
00:06:28.745 --> 00:06:31.025
it will use that otherwise automatically it will

114
00:06:31.025 --> 00:06:33.680
download read we pulled from your Docker Hub.

115
00:06:33.680 --> 00:06:38.165
I will do one thing. Let me remove Docker.

116
00:06:38.165 --> 00:06:39.845
One image.

117
00:06:39.845 --> 00:06:43.245
Let's say this image idea I'm removing.

118
00:06:43.245 --> 00:06:45.805
Now. As of now,

119
00:06:45.805 --> 00:06:47.935
if you observe your images or three,

120
00:06:47.935 --> 00:06:51.625
now I'm creating a container docker.

121
00:06:51.625 --> 00:06:57.130
Run iphone IT hyphen D. Send two ways with the

122
00:06:57.130 --> 00:07:02.305
six dot h. Now if I enter,

123
00:07:02.305 --> 00:07:05.410
it will create a container within this image anyway

124
00:07:05.410 --> 00:07:09.085
as off node that images not there with your Docker host, no problem.

125
00:07:09.085 --> 00:07:11.170
If it is there, it will use that image.

126
00:07:11.170 --> 00:07:12.460
If it is not there.

127
00:07:12.460 --> 00:07:17.680
Docker command will automatically download that from our docker hub,

128
00:07:17.680 --> 00:07:19.150
hub dot dot, dot.com.

129
00:07:19.150 --> 00:07:26.580
Now let me enter, see that it is downloading,

130
00:07:26.580 --> 00:07:28.640
unable to find the image locally.

131
00:07:28.640 --> 00:07:32.210
That's why it is pulling your image from your remote server.

132
00:07:32.210 --> 00:07:35.045
After pulling it is creating that container.

133
00:07:35.045 --> 00:07:38.075
Now see that Docker images.

134
00:07:38.075 --> 00:07:45.320
Just know your docker run command created a container using CentOS six dot-dot-dot.

135
00:07:45.320 --> 00:07:47.210
So while creating that it,

136
00:07:47.210 --> 00:07:49.310
it downloaded, it pulled,

137
00:07:49.310 --> 00:07:51.350
you are sent waves 6.25x1.

138
00:07:51.350 --> 00:07:54.215
You are getting here CentOS six dot eight, fine.

139
00:07:54.215 --> 00:07:56.870
Now let me list containers.

140
00:07:56.870 --> 00:07:59.645
Docker bs c here.

141
00:07:59.645 --> 00:08:05.795
Yeah, this one is the latest container which has been created by using CentOS six dot.

142
00:08:05.795 --> 00:08:09.670
That's you know, if you want to verify simply Dockery,

143
00:08:09.670 --> 00:08:13.225
FCC iphone IT, they were Container ID,

144
00:08:13.225 --> 00:08:15.835
then use Bash shell to connect with that.

145
00:08:15.835 --> 00:08:19.900
Now, we are inside of our newly created a container.

146
00:08:19.900 --> 00:08:22.300
No, let me verify the ways information.

147
00:08:22.300 --> 00:08:24.985
So this is six dot eight.

148
00:08:24.985 --> 00:08:27.745
I'm not sure whether we have waves released file or not.

149
00:08:27.745 --> 00:08:33.160
Instead of that, let say,

150
00:08:33.160 --> 00:08:35.590
yeah, Red Hat release.

151
00:08:35.590 --> 00:08:38.245
Now using this way, you can verify it.

152
00:08:38.245 --> 00:08:40.600
That's it. Okay.

153
00:08:40.600 --> 00:08:44.110
Okay, now let me come out from your container.

154
00:08:44.110 --> 00:08:45.160
That's great.

155
00:08:45.160 --> 00:08:51.000
So friends, simply remember that Docker image tags are useful to you.

156
00:08:51.000 --> 00:08:55.700
Required image from your hub dot dot, dot.com.

157
00:08:55.700 --> 00:08:58.070
If you don't mention any tag by default,

158
00:08:58.070 --> 00:09:01.610
it will pull or download the latest image.

159
00:09:01.610 --> 00:09:02.945
If you mention the tag,

160
00:09:02.945 --> 00:09:05.870
it will download your required image.

161
00:09:05.870 --> 00:09:06.755
That's it.

162
00:09:06.755 --> 00:09:08.510
Anyway, we will also create

163
00:09:08.510 --> 00:09:13.760
our required a docker images at the time also will create our custom tags.

164
00:09:13.760 --> 00:09:14.660
We will see that.

165
00:09:14.660 --> 00:09:15.230
Okay.

166
00:09:15.230 --> 00:09:18.060
Okay guys, thank you for watching this video.

