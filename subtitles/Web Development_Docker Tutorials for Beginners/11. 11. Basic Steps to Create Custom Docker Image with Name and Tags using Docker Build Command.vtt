WEBVTT
ï»¿1
00:00:00.000 --> 00:00:04.680
And here we are discussing about steps to create custom Docker image with

2
00:00:04.680 --> 00:00:09.674
the docker build command and also providing name and tax for custom Docker images.

3
00:00:09.674 --> 00:00:11.265
Now let me go with that.

4
00:00:11.265 --> 00:00:14.940
See, we already know that that is docker build command is

5
00:00:14.940 --> 00:00:18.690
used to build a custom Docker image from a Dockerfile.

6
00:00:18.690 --> 00:00:21.330
Anyway, whenever, if you want to create

7
00:00:21.330 --> 00:00:26.070
a custom Docker image from a Docker file by executing docker build command,

8
00:00:26.070 --> 00:00:28.545
actually, we need to follow some steps.

9
00:00:28.545 --> 00:00:30.435
Now let me go with step-by-step.

10
00:00:30.435 --> 00:00:36.014
Now, very first step is you have to create a folder based on project or application.

11
00:00:36.014 --> 00:00:37.380
Let's say in our case,

12
00:00:37.380 --> 00:00:42.250
suppose we are going to build a Jenkins custom Docker image.

13
00:00:42.250 --> 00:00:47.045
And in that case you have to create Jenkins folder in your Docker host.

14
00:00:47.045 --> 00:00:52.100
Now here suppose I'm creating Jenkins folder.

15
00:00:52.100 --> 00:00:54.815
You can create anywhere on your host.

16
00:00:54.815 --> 00:00:58.985
Then after that, we have to navigate into Jenkins holder,

17
00:00:58.985 --> 00:01:01.160
and then we have to create a Docker file.

18
00:01:01.160 --> 00:01:05.360
Now let me navigate into my Jenkins folder.

19
00:01:05.360 --> 00:01:08.105
Now we're under Jenkins folder or directory.

20
00:01:08.105 --> 00:01:12.005
And here we need to create docker file.

21
00:01:12.005 --> 00:01:13.985
Now anyway, as of now,

22
00:01:13.985 --> 00:01:17.285
we are not good width how to create docker file.

23
00:01:17.285 --> 00:01:19.475
We will see that for time me again,

24
00:01:19.475 --> 00:01:21.575
I will use existing Docker file.

25
00:01:21.575 --> 00:01:25.205
Now if you remember, we have our docker file.

26
00:01:25.205 --> 00:01:29.465
Well, let me copy that into current location.

27
00:01:29.465 --> 00:01:31.985
Now we have our Dockerfile.

28
00:01:31.985 --> 00:01:33.080
Fine.

29
00:01:33.080 --> 00:01:38.795
So once if you how your Docker file in your required directory,

30
00:01:38.795 --> 00:01:45.200
then you how to run docker build command that is like the occur dot.

31
00:01:45.200 --> 00:01:51.470
Now let me run the occur in the current location we hope Docker file.

32
00:01:51.470 --> 00:01:56.135
So it will take some time because I'm going to execute it at very first-time.

33
00:01:56.135 --> 00:02:01.580
Actually, we created a Docker image from this Docker file in our last video,

34
00:02:01.580 --> 00:02:04.070
but I deleted all my old images.

35
00:02:04.070 --> 00:02:06.995
I want to create it from first.

36
00:02:06.995 --> 00:02:08.855
That's why I deleted old images.

37
00:02:08.855 --> 00:02:11.420
Now I'm running docker build command.

38
00:02:11.420 --> 00:02:13.895
So it is like you are going to run at very first ten.

39
00:02:13.895 --> 00:02:16.310
That's right, is going to take some time.

40
00:02:16.310 --> 00:02:18.720
Just wait for that.

41
00:02:25.300 --> 00:02:30.575
Once it is done, then we will list our docker images

42
00:02:30.575 --> 00:02:35.210
with the help of docker images command or simply Docker image.

43
00:02:35.210 --> 00:02:40.040
Unless we have two types of commands to list your Docker images.

44
00:02:40.040 --> 00:02:42.270
I will show you them.

45
00:02:54.460 --> 00:02:57.200
Kate is almost done.

46
00:02:57.200 --> 00:03:01.865
Just wait for three or four seconds. Then.

47
00:03:01.865 --> 00:03:07.775
Now, just now it has been a created a custom Docker image within the image ID.

48
00:03:07.775 --> 00:03:09.365
Let me clear my screen.

49
00:03:09.365 --> 00:03:14.915
See that to list1 Docker images actually we are using docker images command.

50
00:03:14.915 --> 00:03:17.870
Anyway, just now a week later, the image ID.

51
00:03:17.870 --> 00:03:22.205
And while running or docker build command simply we ran in this way, that way.

52
00:03:22.205 --> 00:03:27.110
This command is not creating any tags or name for your image.

53
00:03:27.110 --> 00:03:28.580
That's fine.

54
00:03:28.580 --> 00:03:31.565
And to list your Docker images,

55
00:03:31.565 --> 00:03:34.685
we have one more command called Docker image Ls.

56
00:03:34.685 --> 00:03:38.435
Both are giving same result. That's fine.

57
00:03:38.435 --> 00:03:45.845
Now, see that as of now you how your image without any tax or without any name,

58
00:03:45.845 --> 00:03:52.850
but assume that I need to provide name under tags for my custom images.

59
00:03:52.850 --> 00:03:55.175
Then in that case, you have to run simply.

60
00:03:55.175 --> 00:03:57.380
Now Corbay hyphen p,

61
00:03:57.380 --> 00:04:01.160
let say we are going to create Jenkins custom image,

62
00:04:01.160 --> 00:04:03.050
innovate that using CentOS.

63
00:04:03.050 --> 00:04:06.619
So you can write your options slash CentOS,

64
00:04:06.619 --> 00:04:09.590
then colon, whatever the tag you want to mention.

65
00:04:09.590 --> 00:04:11.430
Let say this is Washington,

66
00:04:11.430 --> 00:04:19.220
then space dot c. Now let me listed Docker images.

67
00:04:19.220 --> 00:04:22.685
So that CentOS version V1,

68
00:04:22.685 --> 00:04:27.575
this image anyway, without any modifying your Docker file, you run.

69
00:04:27.575 --> 00:04:33.365
That's why it going to take same image ID even for this image.

70
00:04:33.365 --> 00:04:37.745
Suppose I'm going to run once again by taking V2.

71
00:04:37.745 --> 00:04:41.300
But be clear, we did not modify the Docker file.

72
00:04:41.300 --> 00:04:45.050
So I'm rerunning simply docker build command with version two.

73
00:04:45.050 --> 00:04:46.940
Now see Docker images.

74
00:04:46.940 --> 00:04:48.740
For both the images,

75
00:04:48.740 --> 00:04:51.260
you house same image ID.

76
00:04:51.260 --> 00:04:54.845
Now what I will do is I will modify Dockerfile.

77
00:04:54.845 --> 00:04:57.890
Let's say I'm going to come in a last command,

78
00:04:57.890 --> 00:05:00.770
lost instruction in your Docker file.

79
00:05:00.770 --> 00:05:05.150
Let me do lasted two commands.

80
00:05:05.150 --> 00:05:08.240
Comment. No.

81
00:05:08.240 --> 00:05:11.270
We commented loss of two instructions in our docker file.

82
00:05:11.270 --> 00:05:13.864
So anyway, finally, you modified your Dockerfile.

83
00:05:13.864 --> 00:05:20.645
Now, I wanna create what shouldn't three. Now see the result.

84
00:05:20.645 --> 00:05:22.955
See Docker images.

85
00:05:22.955 --> 00:05:24.980
Now for you or version three,

86
00:05:24.980 --> 00:05:27.260
there is a new image ID because there is

87
00:05:27.260 --> 00:05:30.200
a change in your Docker file in case if you don't

88
00:05:30.200 --> 00:05:35.540
have any change and if you run your docker build command by providing your tags always,

89
00:05:35.540 --> 00:05:37.310
it will take you an existing image ID

90
00:05:37.310 --> 00:05:39.605
only whenever there is a change in your Docker file,

91
00:05:39.605 --> 00:05:42.275
then only it will create a new image ID.

92
00:05:42.275 --> 00:05:43.820
That's it.

93
00:05:43.820 --> 00:05:46.955
And one more thing. Suppose if you build in this way,

94
00:05:46.955 --> 00:05:48.605
I mean without any tax,

95
00:05:48.605 --> 00:05:51.050
then by default it will take tag as,

96
00:05:51.050 --> 00:05:55.160
let us say that it is giving tag as Latest.

97
00:05:55.160 --> 00:06:00.785
Or else we can simply run your Docker images and see that there is a latest image.

98
00:06:00.785 --> 00:06:03.110
So if you provide tag, then we'll take that.

99
00:06:03.110 --> 00:06:04.520
If you don't provide by default,

100
00:06:04.520 --> 00:06:06.905
it will consider that as latest.

101
00:06:06.905 --> 00:06:07.745
Fine.

102
00:06:07.745 --> 00:06:13.655
So that is the simple way to build your Docker images from your Docker file.

103
00:06:13.655 --> 00:06:14.570
C.

104
00:06:14.570 --> 00:06:19.880
We are also having one more command to build your custom Docker image.

105
00:06:19.880 --> 00:06:22.130
That is with the help of Docker image.

106
00:06:22.130 --> 00:06:24.170
Both will use same result.

107
00:06:24.170 --> 00:06:27.320
And this is very simple docker build command.

108
00:06:27.320 --> 00:06:31.265
So if you go with your official Docker documentation,

109
00:06:31.265 --> 00:06:34.490
there is a docker build or if you go somewhere down you how

110
00:06:34.490 --> 00:06:39.470
Docker image in both the options,

111
00:06:39.470 --> 00:06:44.420
you how Docker image bead or simply Docker build file.

112
00:06:44.420 --> 00:06:48.814
If you click on that, see that there are different options.

113
00:06:48.814 --> 00:06:51.845
So anyway, we are at beginning stays that way.

114
00:06:51.845 --> 00:06:53.465
I'm not going to touch them.

115
00:06:53.465 --> 00:06:59.405
Later. We will see step-by-step all the advanced uses of your docker build command.

116
00:06:59.405 --> 00:07:03.080
We haven't a lot of options with your docker build command.

117
00:07:03.080 --> 00:07:06.095
But these are, I mean,

118
00:07:06.095 --> 00:07:07.250
this is very simple,

119
00:07:07.250 --> 00:07:09.830
basic uses of your docker build command.

120
00:07:09.830 --> 00:07:10.775
Okay?

121
00:07:10.775 --> 00:07:13.710
Okay guys, thank you for watching this video.

