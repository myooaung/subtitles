WEBVTT
ï»¿1
00:00:00.000 --> 00:00:03.765
Friends here or concepts or how Docker identifies

2
00:00:03.765 --> 00:00:07.589
a container and how to name or rename Docker containers.

3
00:00:07.589 --> 00:00:09.030
Now let me go with that.

4
00:00:09.030 --> 00:00:14.190
See by default, Docker uses three ways to identify any container.

5
00:00:14.190 --> 00:00:16.440
They are using UUID,

6
00:00:16.440 --> 00:00:18.645
long shot, and name.

7
00:00:18.645 --> 00:00:22.495
So here you UID means universally unique ID.

8
00:00:22.495 --> 00:00:25.895
Let me show you them on our command line C,

9
00:00:25.895 --> 00:00:27.095
this is our docker host.

10
00:00:27.095 --> 00:00:29.255
Now already we are running with some containers.

11
00:00:29.255 --> 00:00:32.270
These are the running containers on my Docker host.

12
00:00:32.270 --> 00:00:35.840
Now if you update this output for every container,

13
00:00:35.840 --> 00:00:37.610
you how one container ID.

14
00:00:37.610 --> 00:00:41.120
This is nothing but actually UUID short ID.

15
00:00:41.120 --> 00:00:44.495
And anyway, for this container already we have some name.

16
00:00:44.495 --> 00:00:47.300
Now let me show you UUID long.

17
00:00:47.300 --> 00:00:50.300
Say if you want to see the UUID long,

18
00:00:50.300 --> 00:00:53.134
we have a command called docker inspect.

19
00:00:53.134 --> 00:00:56.045
We will see in detail about inspect command later.

20
00:00:56.045 --> 00:00:58.535
As of now, just let me go with that docker.

21
00:00:58.535 --> 00:01:01.940
Inspect. You can provide your container ID.

22
00:01:01.940 --> 00:01:06.575
That is nothing but UUID is short. Just enter.

23
00:01:06.575 --> 00:01:08.165
Now see that very first,

24
00:01:08.165 --> 00:01:11.360
you will get your UUID long.

25
00:01:11.360 --> 00:01:12.980
Let me scroll up.

26
00:01:12.980 --> 00:01:14.960
This is UUID long.

27
00:01:14.960 --> 00:01:20.600
And here if you observe in this part is your UUID shot,

28
00:01:20.600 --> 00:01:25.115
see that this part is nothing but your container ID.

29
00:01:25.115 --> 00:01:27.365
That is you UID shot.

30
00:01:27.365 --> 00:01:32.795
And one more thing, you are docker will use either container ID,

31
00:01:32.795 --> 00:01:37.820
that is nothing but UUID short or UUID longer AD,

32
00:01:37.820 --> 00:01:42.514
or even a name of your container to work with your containers.

33
00:01:42.514 --> 00:01:47.825
Now see, what I am doing is docker inspect.

34
00:01:47.825 --> 00:01:50.120
Instead of giving container ID,

35
00:01:50.120 --> 00:01:54.995
I can also provide name of your container C that it is giving same output.

36
00:01:54.995 --> 00:02:02.525
That means Docker is using any one of these three names to identify your containers.

37
00:02:02.525 --> 00:02:03.605
That's fine.

38
00:02:03.605 --> 00:02:06.710
Now, let me go with how to provide a custom name to

39
00:02:06.710 --> 00:02:11.495
a container C. Whenever if you create a container using docker run command,

40
00:02:11.495 --> 00:02:16.130
it will create a container by giving some random name to your container.

41
00:02:16.130 --> 00:02:20.885
Now let me create one container by using docker run hyphen,

42
00:02:20.885 --> 00:02:27.755
hyphen D. Then let's say I want to create sent weighs six dot A2 or Shen.

43
00:02:27.755 --> 00:02:32.390
Now see that while creating this container,

44
00:02:32.390 --> 00:02:35.135
it is giving UUID long.

45
00:02:35.135 --> 00:02:36.755
That's fine. Now in days,

46
00:02:36.755 --> 00:02:40.505
actually the first two characters are nothing but your container ID.

47
00:02:40.505 --> 00:02:43.280
Now let me do one thing, docker ps c,

48
00:02:43.280 --> 00:02:45.635
that up to this.

49
00:02:45.635 --> 00:02:47.720
That is what container ID.

50
00:02:47.720 --> 00:02:51.500
Anyway, whenever if you create a container for your container,

51
00:02:51.500 --> 00:02:56.810
automatically, you are going to get one container ID on also are going to get some name.

52
00:02:56.810 --> 00:02:58.460
Not this name is random name,

53
00:02:58.460 --> 00:03:00.740
but I want to do my custom name to that.

54
00:03:00.740 --> 00:03:02.300
Yes, we can provide, no,

55
00:03:02.300 --> 00:03:06.920
let me create one more container by taking same image.

56
00:03:06.920 --> 00:03:11.585
But now I am giving custom name with option as hyphen, hyphen name.

57
00:03:11.585 --> 00:03:16.189
Let's say we are using this container to run some headshot application.

58
00:03:16.189 --> 00:03:20.240
Now I'm taking head char app container.

59
00:03:20.240 --> 00:03:22.790
That's, you know, let me run.

60
00:03:22.790 --> 00:03:29.255
Now, let me run docker ps c that this is the container just no weekly at it.

61
00:03:29.255 --> 00:03:32.060
And now further, we have given our custom name.

62
00:03:32.060 --> 00:03:36.095
So this is the way how we can provide a custom name to a container.

63
00:03:36.095 --> 00:03:41.840
We can also rename of an existing container and see how we can do it.

64
00:03:41.840 --> 00:03:44.705
Very simple using Docker rename,

65
00:03:44.705 --> 00:03:47.330
you were adjusting container name with a new name.

66
00:03:47.330 --> 00:03:49.850
Let me do that for one of the container.

67
00:03:49.850 --> 00:03:52.805
Suppose I'm using this container,

68
00:03:52.805 --> 00:03:57.890
simply docker, rename your old name.

69
00:03:57.890 --> 00:04:01.080
I mean existing name of your container.

70
00:04:01.450 --> 00:04:03.275
Then new name.

71
00:04:03.275 --> 00:04:11.329
Let's say this container I will use just to run some for employee salaries.

72
00:04:11.329 --> 00:04:16.760
Just assume they're not treat.

73
00:04:16.760 --> 00:04:22.490
Now let me run docker ps c that previously we were having different name.

74
00:04:22.490 --> 00:04:24.380
Now we have given our custom name,

75
00:04:24.380 --> 00:04:26.810
we renamed existing container name.

76
00:04:26.810 --> 00:04:27.620
That's it.

77
00:04:27.620 --> 00:04:30.780
Okay guys, thank you for watching this video.

