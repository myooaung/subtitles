WEBVTT
ï»¿1
00:00:00.000 --> 00:00:06.075
Friends here or concept is what is work DAR instruction in Docker file?

2
00:00:06.075 --> 00:00:08.310
Basically it is for working directory.

3
00:00:08.310 --> 00:00:09.885
Now let me go with that.

4
00:00:09.885 --> 00:00:13.500
See, the VaR instruction is used to

5
00:00:13.500 --> 00:00:17.400
define the default working there three of your Docker image.

6
00:00:17.400 --> 00:00:20.970
Anyway, whatever you have default values with your Docker image,

7
00:00:20.970 --> 00:00:23.910
same values you will get in your container whenever,

8
00:00:23.910 --> 00:00:26.805
if you launch your container using that image.

9
00:00:26.805 --> 00:00:32.325
Now, to get more idea about work directly, work BAR,

10
00:00:32.325 --> 00:00:33.930
let me login into,

11
00:00:33.930 --> 00:00:39.530
let me enter into one of our previously launched container, let's say container.

12
00:00:39.530 --> 00:00:43.670
So simply Docker e FCC hyphen IT, that container.

13
00:00:43.670 --> 00:00:46.475
After entering into your container,

14
00:00:46.475 --> 00:00:48.859
immediately simply run PWD.

15
00:00:48.859 --> 00:00:50.825
Then what you are getting slash.

16
00:00:50.825 --> 00:00:56.510
So now for this container slashes the default working that at p,

17
00:00:56.510 --> 00:00:59.030
because after entering into your container,

18
00:00:59.030 --> 00:01:01.040
you are getting the path as slash,

19
00:01:01.040 --> 00:01:03.050
that is the default working directly.

20
00:01:03.050 --> 00:01:06.620
So same thing you have in your image.

21
00:01:06.620 --> 00:01:08.060
That's why you're getting in your container.

22
00:01:08.060 --> 00:01:11.120
Because from that image only you cratered container.

23
00:01:11.120 --> 00:01:13.340
Now suppose instead of slash,

24
00:01:13.340 --> 00:01:16.505
I want to take some different working directly.

25
00:01:16.505 --> 00:01:20.870
Let say suppose we are using this containers to run Flask applications.

26
00:01:20.870 --> 00:01:26.810
Now whenever, if I enter into my container than I hoped to get working

27
00:01:26.810 --> 00:01:33.920
there as let say some Python flask or some Flask application part.

28
00:01:33.920 --> 00:01:37.580
So how we can do that simply in your Docker file,

29
00:01:37.580 --> 00:01:41.825
you have to modify that and you need to rebuild your image.

30
00:01:41.825 --> 00:01:43.445
Let me do that.

31
00:01:43.445 --> 00:01:45.575
C, be clear.

32
00:01:45.575 --> 00:01:51.935
You are getting in our registering container default working directory as slash.

33
00:01:51.935 --> 00:01:57.470
That means our base image default working directory is defined as a slash.

34
00:01:57.470 --> 00:01:59.165
Now I want to modify that.

35
00:01:59.165 --> 00:02:01.010
Yes, you can modify that.

36
00:02:01.010 --> 00:02:02.345
Work.

37
00:02:02.345 --> 00:02:08.180
Var, let's say from default location Flask app.

38
00:02:08.180 --> 00:02:10.505
That is the path I want.

39
00:02:10.505 --> 00:02:11.555
Ok.

40
00:02:11.555 --> 00:02:15.770
Actually we need to modify the below lines as well, but we will see that.

41
00:02:15.770 --> 00:02:18.230
So first let me build image.

42
00:02:18.230 --> 00:02:21.575
So as of now we how images as in this way.

43
00:02:21.575 --> 00:02:25.700
Let me Docker build hyphen T.

44
00:02:25.700 --> 00:02:29.460
Now, Washington as we three.

45
00:02:30.400 --> 00:02:35.175
So image has been created and I'll see that images.

46
00:02:35.175 --> 00:02:39.210
And these are the two running containers on,

47
00:02:39.210 --> 00:02:43.720
on my Docker host 5 thousand and age range 0 ports are already in use.

48
00:02:43.720 --> 00:02:47.455
Now what I will do is using this latest image,

49
00:02:47.455 --> 00:02:49.420
I will create a container C,

50
00:02:49.420 --> 00:02:52.975
that Docker run hyphen IT, hyphen D.

51
00:02:52.975 --> 00:02:56.440
Then let's say iPhone, iPhone name, work,

52
00:02:56.440 --> 00:03:01.555
DIR, usage, then ports.

53
00:03:01.555 --> 00:03:04.180
So what I will do is on my Docker host,

54
00:03:04.180 --> 00:03:11.290
I will take 6 thousand port and I will map that with 5 thousand in my Docker container,

55
00:03:11.290 --> 00:03:13.495
then image as this one.

56
00:03:13.495 --> 00:03:14.605
See that?

57
00:03:14.605 --> 00:03:17.120
So docker ps.

58
00:03:17.170 --> 00:03:21.680
No, we created a container but it is not displaying here.

59
00:03:21.680 --> 00:03:26.240
Now let me see that in the exited container list.

60
00:03:26.240 --> 00:03:28.040
Yes, it is there.

61
00:03:28.040 --> 00:03:30.290
So it is exited with some error code.

62
00:03:30.290 --> 00:03:32.435
Actually the reason for that is,

63
00:03:32.435 --> 00:03:34.400
well, let me Doc open Docker file.

64
00:03:34.400 --> 00:03:36.125
And here I will explain.

65
00:03:36.125 --> 00:03:43.190
See previously we thought this line the default working directory slash.

66
00:03:43.190 --> 00:03:46.820
That's why while running this Python command, I mean,

67
00:03:46.820 --> 00:03:48.500
with respect to your app.js,

68
00:03:48.500 --> 00:03:51.485
non-incremental slash app PY.

69
00:03:51.485 --> 00:03:56.465
But no, you modified your default working directory into slashed Flask app,

70
00:03:56.465 --> 00:03:58.910
mature app.use away, not in this location,

71
00:03:58.910 --> 00:04:00.620
it is there in slash.

72
00:04:00.620 --> 00:04:05.255
That's why you need to write here slash.

73
00:04:05.255 --> 00:04:09.755
So even though you are taking what library as slash Flask app,

74
00:04:09.755 --> 00:04:12.620
still you're copying your files into root level,

75
00:04:12.620 --> 00:04:14.240
I mean slash app.use way.

76
00:04:14.240 --> 00:04:17.825
So in this location slash location or how app.js,

77
00:04:17.825 --> 00:04:20.375
that's why here I need to mention slash.

78
00:04:20.375 --> 00:04:24.335
Suppose if you don't mention slash year here and a here,

79
00:04:24.335 --> 00:04:27.380
then this file will be copied into this location.

80
00:04:27.380 --> 00:04:29.825
Because once if you define work directly,

81
00:04:29.825 --> 00:04:34.175
then offer that whatever the instructions we are getting like run copy,

82
00:04:34.175 --> 00:04:36.140
add entry point command.

83
00:04:36.140 --> 00:04:37.475
For all those commands,

84
00:04:37.475 --> 00:04:42.375
your Docker will treat location as this one.

85
00:04:42.375 --> 00:04:44.800
Anyway, I will show you that.

86
00:04:44.800 --> 00:04:49.750
Now let me save it and let me rebuild our Docker image.

87
00:04:49.750 --> 00:04:53.710
Now I am dealing with Washington as let's

88
00:04:53.710 --> 00:05:00.910
say we For it has been created.

89
00:05:00.910 --> 00:05:03.070
So images, docker, ps,

90
00:05:03.070 --> 00:05:05.470
iPhone q, sorry, hyphen.

91
00:05:05.470 --> 00:05:08.290
A. So what I will do is I will remove

92
00:05:08.290 --> 00:05:15.940
our exited container on Docker images.

93
00:05:15.940 --> 00:05:19.030
Docker ps now Docker run hyphen IT,

94
00:05:19.030 --> 00:05:22.675
hyphen v, let's say name as WordNet tree.

95
00:05:22.675 --> 00:05:23.740
You say.

96
00:05:23.740 --> 00:05:28.870
Then Let's say 6 thousand port on my Docker host,

97
00:05:28.870 --> 00:05:30.925
I want to map with 5 thousand.

98
00:05:30.925 --> 00:05:35.245
Then I want to use this latest image.

99
00:05:35.245 --> 00:05:40.975
Now see docker ps is working perfectly these up and running.

100
00:05:40.975 --> 00:05:45.100
Now, let me enter into a container.

101
00:05:45.100 --> 00:05:47.185
And after entering into your container,

102
00:05:47.185 --> 00:05:53.560
immediately see that you are in slash Flask app because we defined that directory.

103
00:05:53.560 --> 00:05:59.815
Right? And so I told that once if you define the word what their tea,

104
00:05:59.815 --> 00:06:01.735
then they run copy,

105
00:06:01.735 --> 00:06:04.600
add entry point and command instructions.

106
00:06:04.600 --> 00:06:06.655
Follow the work directory instruction,

107
00:06:06.655 --> 00:06:10.680
what it means. Let me show you that.

108
00:06:11.290 --> 00:06:17.615
See, once we if we define a work directly after that, whenever, I mean,

109
00:06:17.615 --> 00:06:20.869
if you are using copy or entry point command,

110
00:06:20.869 --> 00:06:23.165
add instructions or RUN instruction,

111
00:06:23.165 --> 00:06:29.315
all those instructions we treat the present working directory in your image as this one.

112
00:06:29.315 --> 00:06:33.755
That's why suppose if I don't mention complete path here and here,

113
00:06:33.755 --> 00:06:41.495
then your app.js file will copy into this location B to this name.

114
00:06:41.495 --> 00:06:43.550
And your Python three,

115
00:06:43.550 --> 00:06:46.655
we'll run this app dot PY bike concerning

116
00:06:46.655 --> 00:06:49.910
current working directory or present working directory as this one.

117
00:06:49.910 --> 00:06:52.205
That is the meaning of work mandatory.

118
00:06:52.205 --> 00:06:57.845
So if you don't want to copy your app.js into this work that it,

119
00:06:57.845 --> 00:06:59.555
then you ought to mention complete path.

120
00:06:59.555 --> 00:07:00.890
If you don't mention any pattern,

121
00:07:00.890 --> 00:07:04.265
simply if you mentioned a path and file name here,

122
00:07:04.265 --> 00:07:06.200
then from our docker host,

123
00:07:06.200 --> 00:07:07.805
whatever the file we are copying,

124
00:07:07.805 --> 00:07:10.685
that file content will copy into this file.

125
00:07:10.685 --> 00:07:14.390
But the file will be created in this word marital location.

126
00:07:14.390 --> 00:07:15.395
That's it.

127
00:07:15.395 --> 00:07:17.580
Now let me save it.

128
00:07:18.790 --> 00:07:30.140
And let me rebuild our image by taking v phi version.

129
00:07:30.210 --> 00:07:36.010
Fine. Now, the occur images and let's say docker ps c,

130
00:07:36.010 --> 00:07:40.555
why I'm running docker ps means I want to know which ports are used on my Docker host.

131
00:07:40.555 --> 00:07:45.730
Actually now I am going to create a new container with the,

132
00:07:45.730 --> 00:07:49.645
let's say work directory.

133
00:07:49.645 --> 00:07:52.045
You say two.

134
00:07:52.045 --> 00:07:54.280
Then ports.

135
00:07:54.280 --> 00:07:56.395
So already six thousand and five thousand,

136
00:07:56.395 --> 00:08:00.400
eight hundred zero ports are huge on my Docker host and

137
00:08:00.400 --> 00:08:05.305
80 port is already used on my Docker goes to because I am running unix services as well.

138
00:08:05.305 --> 00:08:09.760
So what I will do is I will take 8 thousand port.

139
00:08:09.760 --> 00:08:12.460
Then inside of my container anyway,

140
00:08:12.460 --> 00:08:16.420
I will get my Flask application port has 5 thousand.

141
00:08:16.420 --> 00:08:23.200
Now let me take, let us the container and we launch today container.

142
00:08:23.200 --> 00:08:27.445
So docker, ps c,

143
00:08:27.445 --> 00:08:29.500
Just now we launched this container.

144
00:08:29.500 --> 00:08:32.365
So enter into that container,

145
00:08:32.365 --> 00:08:37.615
Docker EXE, you see, hyphen IT back.

146
00:08:37.615 --> 00:08:40.000
Now by default, you anyway,

147
00:08:40.000 --> 00:08:41.680
you will get your work that it trusts.

148
00:08:41.680 --> 00:08:45.925
Flask, App, Engine, app slash because that's what we mentioned in our docker file.

149
00:08:45.925 --> 00:08:48.130
And if you run ls command c, that add dot p,

150
00:08:48.130 --> 00:08:52.505
y is there here only, not anymore route.

151
00:08:52.505 --> 00:08:55.370
So here we are not having, right?

152
00:08:55.370 --> 00:08:59.210
So that is the uses of your work that at three.

153
00:08:59.210 --> 00:09:00.410
So be clear.

154
00:09:00.410 --> 00:09:02.765
Once if you define your work directory,

155
00:09:02.765 --> 00:09:05.450
then after that in your remaining instructions,

156
00:09:05.450 --> 00:09:07.355
if you don't mention complete path,

157
00:09:07.355 --> 00:09:13.340
then you what Docker will treat the present working directory as this work matter tree.

158
00:09:13.340 --> 00:09:16.835
And if you mentioned complete path wherever you need,

159
00:09:16.835 --> 00:09:19.715
then that path only it will take if you don't mention complete path,

160
00:09:19.715 --> 00:09:21.770
then only it will take work directory path as

161
00:09:21.770 --> 00:09:26.255
the default path for your remaining instructions.

162
00:09:26.255 --> 00:09:29.030
I mean, not all only for R1, copy,

163
00:09:29.030 --> 00:09:32.645
add, entry point and command instructions.

164
00:09:32.645 --> 00:09:33.665
Okay?

165
00:09:33.665 --> 00:09:37.385
Okay guys, this is the simple uses of your work directory.

166
00:09:37.385 --> 00:09:40.310
And actually we have a command called docker inspect.

167
00:09:40.310 --> 00:09:46.400
Using that command, we can verify the working directory of your container or image.

168
00:09:46.400 --> 00:09:48.380
Let me show you that very simple.

169
00:09:48.380 --> 00:09:50.495
Let me list containers.

170
00:09:50.495 --> 00:09:53.885
See this container we launched or using this image.

171
00:09:53.885 --> 00:09:56.720
Now let me run simply docker,

172
00:09:56.720 --> 00:10:00.110
inspect your image ID.

173
00:10:00.110 --> 00:10:02.405
Now you are going to get a lot of parameters here.

174
00:10:02.405 --> 00:10:06.800
As of now, suppose we need working directory and see that there is a working directory.

175
00:10:06.800 --> 00:10:08.990
This is the default working directory for

176
00:10:08.990 --> 00:10:13.865
this Docker image are able to see entry point as well.

177
00:10:13.865 --> 00:10:19.355
Now let me execute it for our container as well.

178
00:10:19.355 --> 00:10:22.685
So simply docker ps certainly take container ID.

179
00:10:22.685 --> 00:10:28.205
So docker, inspect container.

180
00:10:28.205 --> 00:10:30.800
Just scroll up somewhere.

181
00:10:30.800 --> 00:10:34.130
You will see working laboratory and also entry point as well.

182
00:10:34.130 --> 00:10:37.820
So docker inspect command is very useful to see the list of

183
00:10:37.820 --> 00:10:41.750
parameters about Dewar container or you are image.

184
00:10:41.750 --> 00:10:43.505
Okay, fine.

185
00:10:43.505 --> 00:10:47.210
And we can also define multiple working directories.

186
00:10:47.210 --> 00:10:50.119
But as of now, I don't want to make you confuse.

187
00:10:50.119 --> 00:10:53.420
But whenever situation comes at the time,

188
00:10:53.420 --> 00:10:57.170
I will use multiple times working directories.

189
00:10:57.170 --> 00:10:58.325
Okay.

190
00:10:58.325 --> 00:11:01.140
Okay, guys, thank you for watching this video.

