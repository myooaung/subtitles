WEBVTT
1
1

00:00:05.300  -->  00:00:07.330
In the previous video, we installed
2

2

00:00:07.330  -->  00:00:10.870
Python 3.6 onto this Mac computer.
3

3

00:00:10.870  -->  00:00:12.230
Now we're going to have a quick look at idle.
4

4

00:00:12.230  -->  00:00:14.600
Now when developing software in any
5

5

00:00:14.600  -->  00:00:16.610
programming language and integrated
6

6

00:00:16.610  -->  00:00:19.460
development environment or IDE makes a
7

7

00:00:19.460  -->  00:00:21.070
lot a lot easier for developers and
8

8

00:00:21.070  -->  00:00:22.930
that's because it allows you to enter,
9

9

00:00:22.930  -->  00:00:25.550
compile and run your programs without
10

10

00:00:25.550  -->  00:00:28.180
having to actually leave the editor and
11

11

00:00:28.180  -->  00:00:30.160
basically you can avoid using the
12

12

00:00:30.160  -->  00:00:31.820
command-line from a lot of programming
13

13

00:00:31.820  -->  00:00:32.800
and it just makes things a lot easier.
14

14

00:00:32.800  -->  00:00:35.870
Now Python provides a very simple IDE
15

15

00:00:35.870  -->  00:00:38.180
called idle, which we installed in the
16

16

00:00:38.180  -->  00:00:40.430
previous video. Now the name idle was a
17

17

00:00:40.430  -->  00:00:42.530
homage to Eric Idle one of the members
18

18

00:00:42.530  -->  00:00:44.750
of the comedy group Monty Python.
19

19

00:00:44.750  -->  00:00:46.790
Now idle wood interfaces directly with the
20

20

00:00:46.790  -->  00:00:49.340
Python interpreter. Now for a number of
21

21

00:00:49.340  -->  00:00:51.320
reasons that will become apparent as we
22

22

00:00:51.320  -->  00:00:53.360
progress through the course, we suggest
23

23

00:00:53.360  -->  00:00:54.890
using IntelliJ IDEA
24

24

00:00:54.890  -->  00:00:58.340
or pycharm instead of idle and in fact
25

25

00:00:58.340  -->  00:00:59.480
in the next video, I'm going to be
26

26

00:00:59.480  -->  00:01:00.640
showing you how to go about installing
27

27

00:01:00.640  -->  00:01:03.110
it but if you prefer to stick with idle
28

28

00:01:03.110  -->  00:01:04.720
for any reason or if you have to access
29

29

00:01:04.720  -->  00:01:07.430
idle it can sometimes be very useful.
30

30

00:01:07.430  -->  00:01:09.380
So consequently in this video, we're going
31

31

00:01:09.380  -->  00:01:11.200
to show you how to use the basics of
32

32

00:01:11.200  -->  00:01:13.490
idle. Now this probably going to assume
33

33

00:01:13.490  -->  00:01:15.610
that you've installed Python 3.6 as
34

34

00:01:15.610  -->  00:01:18.020
shown in the last video, so you want to
35

35

00:01:18.020  -->  00:01:21.280
start idle 3 either by the command space
36

36

00:01:21.280  -->  00:01:24.020
trick and type of idle, you can also type
37

37

00:01:24.020  -->  00:01:25.420
idle 3 the terminal window.
38

38

00:01:25.420  -->  00:01:27.250
Alternatively you can open up your
39

39

00:01:27.250  -->  00:01:29.630
applications folder as I've done here
40

40

00:01:29.630  -->  00:01:31.520
and I can go into the python sub folder
41

41

00:01:31.520  -->  00:01:33.100
that was created with the install video
42

42

00:01:33.100  -->  00:01:34.780
and I can just double click idle that
43

43

00:01:34.780  -->  00:01:37.180
way, either way you want to start up idle
44

44

00:01:37.180  -->  00:01:38.740
and I'm just going to bring this up,
45

45

00:01:38.740  -->  00:01:40.570
centered a little bit and just size it
46

46

00:01:40.570  -->  00:01:42.640
up, so we can see what we're doing.
47

47

00:01:42.640  -->  00:01:44.350
Now note that two Mac systems also have
48

48

00:01:44.350  -->  00:01:46.570
Python 2.7 installed and I talked about
49

49

00:01:46.570  -->  00:01:48.430
that previously so you do want to make
50

50

00:01:48.430  -->  00:01:50.320
sure that you're running idle three and
51

51

00:01:50.320  -->  00:01:52.310
not idle and as you can see now that
52

52

00:01:52.310  -->  00:01:54.380
I've started I've idle has Python three
53

53

00:01:54.380  -->  00:01:55.990
point six point two, so I know that I'm
54

54

00:01:55.990  -->  00:01:57.880
running the right version. Now the other
55

55

00:01:57.880  -->  00:01:59.410
thing that might happen is you might get
56

56

00:01:59.410  -->  00:02:01.840
a message saying warning the version of
57

57

00:02:01.840  -->  00:02:06.020
tcl/tk in use may be unstable and you
58

58

00:02:06.020  -->  00:02:07.310
can see that I've actually got this here
59

59

00:02:07.310  -->  00:02:10.760
the version of tcl/tk 8.59 in use may be
60

60

00:02:10.760  -->  00:02:12.860
unstable. If your version is showing
61

61

00:02:12.860  -->  00:02:14.440
eight point five point nine as mine is
62

62

00:02:14.440  -->  00:02:16.330
currently showing, you can ignore that
63

63

00:02:16.330  -->  00:02:19.010
warning and the site here linked to that
64

64

00:02:19.010  -->  00:02:22.190
message suggests 8.59 as an alternative
65

65

00:02:22.190  -->  00:02:24.020
and then in flags eight point five point
66

66

00:02:24.020  -->  00:02:26.270
seven, it's not recommended so in other
67

67

00:02:26.270  -->  00:02:28.130
words, you can just ignore that and what
68

68

00:02:28.130  -->  00:02:30.770
we can do is just press enter on our
69

69

00:02:30.770  -->  00:02:33.020
keyboard, we get the idle prompt to
70

70

00:02:33.020  -->  00:02:34.430
appear now and we can actually use it as
71

71

00:02:34.430  -->  00:02:36.560
per normal and I don't have a Mac that shows
72

72

00:02:36.560  -->  00:02:38.510
older version, but if your
73

73

00:02:38.510  -->  00:02:40.220
message does indicate you have tcl
74

74

00:02:40.220  -->  00:02:42.260
version eight point five point seven
75

75

00:02:42.260  -->  00:02:44.600
then visit that link to download one of
76

76

00:02:44.600  -->  00:02:46.270
the stable versions that they suggest.
77

77

00:02:46.270  -->  00:02:48.620
Alright, so once I idle ws running anything
78

78

00:02:48.620  -->  00:02:50.690
you type will be passed to the Python
79

79

00:02:50.690  -->  00:02:53.060
interpreter and the results displayed on
80

80

00:02:53.060  -->  00:02:55.640
the screen. Now, ordinarily in a program
81

81

00:02:55.640  -->  00:02:57.410
you need to use the print statement to
82

82

00:02:57.410  -->  00:02:59.180
display a result and you'll learn more
83

83

00:02:59.180  -->  00:03:00.740
about that in later videos in this
84

84

00:03:00.740  -->  00:03:02.630
course, but you don't know if you need to
85

85

00:03:02.630  -->  00:03:04.550
do that in the idle shell and to show
86

86

00:03:04.550  -->  00:03:06.650
you that we can just click into here we
87

87

00:03:06.650  -->  00:03:09.650
can type two plus four and press
88

88

00:03:09.650  -->  00:03:11.960
enter now, you can see we immediately get
89

89

00:03:11.960  -->  00:03:14.360
the answer of six. Alright, so I'm going
90

90

00:03:14.360  -->  00:03:16.580
to type in a bit of code here now.
91

91

00:03:16.580  -->  00:03:18.380
Now it's important to not worry too much
92

92

00:03:18.380  -->  00:03:20.840
about exactly what this code means,
93

93

00:03:20.840  -->  00:03:22.430
you really don't need to understand it at
94

94

00:03:22.430  -->  00:03:24.470
this stage and that's because I'm just
95

95

00:03:24.470  -->  00:03:26.900
showing you how idle works in the later
96

96

00:03:26.900  -->  00:03:29.060
videos, if you're learning the syntax of
97

97

00:03:29.060  -->  00:03:31.580
Python, this video is demonstrating idle
98

98

00:03:31.580  -->  00:03:33.590
not explaining the Python language at
99

99

00:03:33.590  -->  00:03:36.410
this stage. Now in the course examples,
100

100

00:03:36.410  -->  00:03:38.630
you'll often have to enter code blocks
101

101

00:03:38.630  -->  00:03:41.120
and that blocks of code spanning several
102

102

00:03:41.120  -->  00:03:43.700
lines. Now idle knows when you're going
103

103

00:03:43.700  -->  00:03:45.290
to type such a block and won't
104

104

00:03:45.290  -->  00:03:47.180
immediately execute anything until you
105

105

00:03:47.180  -->  00:03:49.270
finish the block and you know generally
106

106

00:03:49.270  -->  00:03:50.630
when it's expecting more text because
107

107

00:03:50.630  -->  00:03:51.890
the chevrons appearing you can see
108

108

00:03:51.890  -->  00:03:53.390
that's the case right now under the six
109

109

00:03:53.390  -->  00:03:54.890
and three chevrons or three greater than
110

110

00:03:54.890  -->  00:03:58.270
signs, so python clearly knows that you
111

111

00:03:58.270  -->  00:03:59.930
finish but if we start typing some code
112

112

00:03:59.930  -->  00:04:05.520
enough for space i space in space range
113

113

00:04:05.520  -->  00:04:09.290
parentheses ten closing parentheses
114

114

00:04:09.290  -->  00:04:10.580
they're going to press a colon or type
115

115

00:04:10.580  -->  00:04:13.370
of colon now and press enter, this is
116

116

00:04:13.370  -->  00:04:14.810
what I mean about idle knowing that
117

117

00:04:14.810  -->  00:04:16.700
you've got more text to type in now,
118

118

00:04:16.700  -->  00:04:18.610
because the chevron's aren't showing and
119

119

00:04:18.610  -->  00:04:21.550
the codes also been indented and
120

120

00:04:21.550  -->  00:04:23.030
incident in the colon at the end of
121

121

00:04:23.030  -->  00:04:24.860
the line is very important and that's
122

122

00:04:24.860  -->  00:04:26.930
the reason that tells python in this
123

123

00:04:26.930  -->  00:04:28.940
case, that two more information is
124

124

00:04:28.940  -->  00:04:30.660
expected in the code block.
125

125

00:04:30.660  -->  00:04:32.200
So remember then I'll type in print
126

126

00:04:32.200  -->  00:04:34.530
left parenthesis, i right
127

127

00:04:34.530  -->  00:04:36.510
parentheses, I'm going to press enter
128

128

00:04:36.510  -->  00:04:39.330
again, but this time we've now finished a
129

129

00:04:39.330  -->  00:04:41.160
code, so I'm now going to press the
130

130

00:04:41.160  -->  00:04:43.830
backspace button. Once I do that, we go
131

131

00:04:43.830  -->  00:04:45.980
back to the left hand side there that
132

132

00:04:45.980  -->  00:04:47.520
tells idle that we've finished the code
133

133

00:04:47.520  -->  00:04:49.320
blocks and then when we press enter
134

134

00:04:49.320  -->  00:04:51.930
again, it's going to actually execute the
135

135

00:04:51.930  -->  00:04:54.630
cod, so I'm going to do that and you can
136

136

00:04:54.630  -->  00:04:57.170
see the code got executed on the screen.
137

137

00:04:57.170  -->  00:05:00.270
So what this does is for each
138

138

00:05:00.270  -->  00:05:01.830
element in the range it's printing out
139

139

00:05:01.830  -->  00:05:03.330
the value, so in other words you can see
140

140

00:05:03.330  -->  00:05:04.560
on the screen there we've got the values
141

141

00:05:04.560  -->  00:05:08.130
0 through 9 printed out. Now again don't
142

142

00:05:08.130  -->  00:05:09.870
worry too much about understanding the
143

143

00:05:09.870  -->  00:05:11.450
code, you don't need to understand the
144

144

00:05:11.450  -->  00:05:14.040
code at this stage what you can see is
145

145

00:05:14.040  -->  00:05:16.040
that idle has some basic capabilities to
146

146

00:05:16.040  -->  00:05:18.450
run Python code then this is not very
147

147

00:05:18.450  -->  00:05:20.250
useful for checking simple instructions,
148

148

00:05:20.250  -->  00:05:22.470
but editing what you've typed isn't very
149

149

00:05:22.470  -->  00:05:25.350
intuitive in idle, so let's just say we
150

150

00:05:25.350  -->  00:05:27.420
wanted to change the number 10 to 11.
151

151

00:05:27.420  -->  00:05:29.130
What we can do is we can move our cursor
152

152

00:05:29.130  -->  00:05:32.940
up to that line, up here and we can press
153

153

00:05:32.940  -->  00:05:35.580
enter and that copies the line down
154

154

00:05:35.580  -->  00:05:37.530
below as you can see and then we can
155

155

00:05:37.530  -->  00:05:39.120
actually then move the cursor up and
156

156

00:05:39.120  -->  00:05:42.750
move it over, delete the 0 and make it a 1,
157

157

00:05:42.750  -->  00:05:44.970
and if I go down to the second line with
158

158

00:05:44.970  -->  00:05:46.650
a down arrow key press enter and press
159

159

00:05:46.650  -->  00:05:49.730
backspace, we're back up the stage now
160

160

00:05:49.730  -->  00:05:51.150
where we can execute the program and I
161

161

00:05:51.150  -->  00:05:54.150
can press enter again now and you can
162

162

00:05:54.150  -->  00:05:56.160
see that's now went through and printed
163

163

00:05:56.160  -->  00:05:57.390
out the numbers this time from 0 through
164

164

00:05:57.390  -->  00:05:59.450
10 and that's because we change the
165

165

00:05:59.450  -->  00:06:02.400
number 10 to a number 11. So that's one
166

166

00:06:02.400  -->  00:06:04.170
way of executing code in idle and it can
167

167

00:06:04.170  -->  00:06:05.580
be useful if you just want to check out
168

168

00:06:05.580  -->  00:06:08.480
a bit of code. However you often want to
169

169

00:06:08.480  -->  00:06:11.040
save programs in a separate file and run
170

170

00:06:11.040  -->  00:06:13.140
them from there, so from the file menu
171

171

00:06:13.140  -->  00:06:18.060
click on new file, I'll just bring this over
172

172

00:06:18.060  -->  00:06:20.430
and let's just type into that new file
173

173

00:06:20.430  -->  00:06:24.140
print left parenthesis double quote
174

174

00:06:24.140  -->  00:06:29.250
hello world then another double quote
175

175

00:06:29.250  -->  00:06:30.810
and then a right parenthesis then press
176

176

00:06:30.810  -->  00:06:33.330
enter to go to the second line, so we
177

177

00:06:33.330  -->  00:06:34.850
can now run what we've typed in by
178

178

00:06:34.850  -->  00:06:37.410
coming up here to the run window and
179

179

00:06:37.410  -->  00:06:39.750
clicking on run module or selecting run
180

180

00:06:39.750  -->  00:06:41.580
module, alternatively we can just press
181

181

00:06:41.580  -->  00:06:44.010
the f5 button, so I'll do that now press f5
182

182

00:06:44.010  -->  00:06:46.950
in my case it says source code must
183

183

00:06:46.950  -->  00:06:48.570
be saved, ok to save I'm going to click
184

184

00:06:48.570  -->  00:06:51.960
on ok to save it and what I'm going to
185

185

00:06:51.960  -->  00:06:55.410
do save this to my desktop and I'm just
186

186

00:06:55.410  -->  00:07:00.570
going to call this one hello world so
187

187

00:07:00.570  -->  00:07:01.980
you can see what happened firstly it
188

188

00:07:01.980  -->  00:07:03.960
actually saved it and you can see the
189

189

00:07:03.960  -->  00:07:06.150
file down on my desktop, but secondly you
190

190

00:07:06.150  -->  00:07:07.890
can see that it executed the program as
191

191

00:07:07.890  -->  00:07:09.420
well I'm getting the hello world output
192

192

00:07:09.420  -->  00:07:10.910
on the bottom of the screen.
193

193

00:07:10.910  -->  00:07:13.260
Now again, I would recommend that you use
194

194

00:07:13.260  -->  00:07:16.050
IntelliJ IDEA instead of idle
195

195

00:07:16.050  -->  00:07:17.940
because idle is really basic and doesn't
196

196

00:07:17.940  -->  00:07:20.490
provide any hints, code checking or all
197

197

00:07:20.490  -->  00:07:22.290
the other great features of a full IDE
198

198

00:07:22.290  -->  00:07:24.360
like IntelliJ, but if you want to stick
199

199

00:07:24.360  -->  00:07:26.280
with idle though, this brief introduction
200

200

00:07:26.280  -->  00:07:28.110
should have got you started.
201

201

00:07:28.110  -->  00:07:30.030
Now installing IntelliJ IDEA that will be
202

202

00:07:30.030  -->  00:07:32.490
covered in the next video, so I just want
203

203

00:07:32.490  -->  00:07:33.600
to give you a few reasons why you're
204

204

00:07:33.600  -->  00:07:35.250
consider using that rather than using
205

205

00:07:35.250  -->  00:07:37.790
idle firstly code checking as you type
206

206

00:07:37.790  -->  00:07:40.020
IntelliJ IDEA checks the code as you
207

207

00:07:40.020  -->  00:07:42.600
type it and actually flags errors with a
208

208

00:07:42.600  -->  00:07:45.030
marker in the right margin and it also
209

209

00:07:45.030  -->  00:07:47.250
suggests improvements in both the style
210

210

00:07:47.250  -->  00:07:49.730
of your code as well as the content.
211

211

00:07:49.730  -->  00:07:51.720
Now this is incredibly useful as you find
212

212

00:07:51.720  -->  00:07:53.480
especially when starting out with the
213

213

00:07:53.480  -->  00:07:56.370
new language, it also has auto completion
214

214

00:07:56.370  -->  00:07:58.290
which works across the there is Python
215

215

00:07:58.290  -->  00:08:00.960
libraries to provide rapid selection of
216

216

00:08:00.960  -->  00:08:03.030
the methods or functions and hints on
217

217

00:08:03.030  -->  00:08:05.580
the syntax and idle unfortunately only
218

218

00:08:05.580  -->  00:08:07.670
copes with the core functionality
219

219

00:08:07.670  -->  00:08:10.260
IntelliJ IDEA is also got auto indenting,
220

220

00:08:10.260  -->  00:08:12.810
it also allows editing of xml and text
221

221

00:08:12.810  -->  00:08:15.360
files, so the same tool can be used to
222

222

00:08:15.360  -->  00:08:18.000
extend to examine data, it's got
223

223

00:08:18.000  -->  00:08:20.220
excellent refactoring tools, it's got an
224

224

00:08:20.220  -->  00:08:23.070
integrated part of debugger, support for
225

225

00:08:23.070  -->  00:08:24.960
the django and google app engine
226

226

00:08:24.960  -->  00:08:27.930
projects it also supports many languages
227

227

00:08:27.930  -->  00:08:30.300
in addition to python such as java
228

228

00:08:30.300  -->  00:08:33.060
scala, perl, groovy as well as many
229

229

00:08:33.060  -->  00:08:34.950
frameworks, so that you only really need
230

230

00:08:34.950  -->  00:08:37.820
to learn one IDE for all development and
231

231

00:08:37.820  -->  00:08:40.080
also keep in mind that google's android
232

232

00:08:40.080  -->  00:08:42.720
studio which is for android development
233

233

00:08:42.720  -->  00:08:45.060
is basically IntelliJ IDEA under the
234

234

00:08:45.060  -->  00:08:47.040
hood. So although I'm going to be using
235

235

00:08:47.040  -->  00:08:49.740
IntelliJ IDEA in this course, you can use
236

236

00:08:49.740  -->  00:08:51.990
your favorite IDE instead if you prefer.
237

237

00:08:51.990  -->  00:08:53.760
So if you're already using something
238

238

00:08:53.760  -->  00:08:55.680
like eclipse or pycharm or one of the
239

239

00:08:55.680  -->  00:08:57.590
many other Python IDE's then by
240

240

00:08:57.590  -->  00:09:00.860
all means carry on using them. Alright so
241

241

00:09:00.860  -->  00:09:02.180
what I'm going to do now is finish by
242

242

00:09:02.180  -->  00:09:03.860
running a short program that we've
243

243

00:09:03.860  -->  00:09:06.200
created to demonstrate some of the power
244

244

00:09:06.200  -->  00:09:08.570
of the Python language, so this program
245

245

00:09:08.570  -->  00:09:11.270
is going to collect real-time exchange
246

246

00:09:11.270  -->  00:09:13.430
rate data from the internet and then
247

247

00:09:13.430  -->  00:09:15.230
produce a graph showing three currencies
248

248

00:09:15.230  -->  00:09:17.930
for the last 12 months. Now the complete
249

249

00:09:17.930  -->  00:09:19.670
programs less than 100 lines of code
250

250

00:09:19.670  -->  00:09:21.650
which i think is pretty impressive for
251

251

00:09:21.650  -->  00:09:23.780
what it's doing. Now I strongly recommend
252

252

00:09:23.780  -->  00:09:25.520
that you type in the code while watching
253

253

00:09:25.520  -->  00:09:27.620
videos in this course, I can't really
254

254

00:09:27.620  -->  00:09:29.930
stress that enough, typing in code rather
255

255

00:09:29.930  -->  00:09:31.880
than just watching me type it really
256

256

00:09:31.880  -->  00:09:33.830
does help you to learn faster and
257

257

00:09:33.830  -->  00:09:36.230
consolidate what you're doing and that
258

258

00:09:36.230  -->  00:09:38.330
really is important and without going
259

259

00:09:38.330  -->  00:09:40.430
into a lot of Education Theory, you'll
260

260

00:09:40.430  -->  00:09:42.230
retain about 80% of things you do
261

261

00:09:42.230  -->  00:09:44.540
compared to about 30% of the things you
262

262

00:09:44.540  -->  00:09:46.970
just see, if that doesn't persuade you
263

263

00:09:46.970  -->  00:09:49.190
I'll actually add that we learned by
264

264

00:09:49.190  -->  00:09:52.220
typing in code, back when Jean Paul and
265

265

00:09:52.220  -->  00:09:54.320
myself was starting up programming we
266

266

00:09:54.320  -->  00:09:56.120
didn't have the internet back then so we
267

267

00:09:56.120  -->  00:09:57.890
just copied the code from magazines and
268

268

00:09:57.890  -->  00:10:00.530
books and the act of typing in really
269

269

00:10:00.530  -->  00:10:02.060
makes you focus on each word that you're
270

270

00:10:02.060  -->  00:10:03.920
typing and correcting the typing errors
271

271

00:10:03.920  -->  00:10:05.840
afterwards really does help you learn
272

272

00:10:05.840  -->  00:10:08.870
what's going on and it also recommended
273

273

00:10:08.870  -->  00:10:10.670
you watch each video again after you've
274

274

00:10:10.670  -->  00:10:12.770
typed the code, so you can focus on the
275

275

00:10:12.770  -->  00:10:16.340
explanation of what it's doing but with
276

276

00:10:16.340  -->  00:10:18.200
that said this next bits an exception to
277

277

00:10:18.200  -->  00:10:19.970
that and that's because the code that
278

278

00:10:19.970  -->  00:10:21.680
I'm about to show you is quite complex.
279

279

00:10:21.680  -->  00:10:23.780
Now we produced this program to show you
280

280

00:10:23.780  -->  00:10:25.940
the power of Python and there's a lot of
281

281

00:10:25.940  -->  00:10:27.500
things in the code that won't make sense
282

282

00:10:27.500  -->  00:10:30.110
at this moment and the program uses
283

283

00:10:30.110  -->  00:10:32.600
functions, generators external modules
284

284

00:10:32.600  -->  00:10:35.150
and things like lists and tuples, by the
285

285

00:10:35.150  -->  00:10:36.500
time you finish the course, you'll
286

286

00:10:36.500  -->  00:10:38.270
understand what all those things are and
287

287

00:10:38.270  -->  00:10:39.980
more importantly how to use them in your
288

288

00:10:39.980  -->  00:10:42.200
own programs, in fact you'll understand a
289

289

00:10:42.200  -->  00:10:45.080
lot more than that, but now though relax and run
290

290

00:10:45.080  -->  00:10:46.280
the program they're going to fuel for
291

291

00:10:46.280  -->  00:10:48.950
what you can do with Python. Now I'm
292

292

00:10:48.950  -->  00:10:50.030
going to actually show you how to
293

293

00:10:50.030  -->  00:10:51.650
download this program from the internet
294

294

00:10:51.650  -->  00:10:57.230
so we're going to open up a browser even
295

295

00:10:57.230  -->  00:11:03.130
get to learn programming dot academy forward slash
296

296

00:11:03.130  -->  00:11:06.640
py download or one words of html learn
297

297

00:11:06.640  -->  00:11:10.690
programming academy slash py download html
298

298

00:11:10.690  -->  00:11:14.440
as in to there, we get this web page
299

299

00:11:14.440  -->  00:11:16.270
pop-up and we just need to come
300

300

00:11:16.270  -->  00:11:18.390
over here as it says right click then
301

301

00:11:18.390  -->  00:11:20.770
I'm going to click on save link as,
302

302

00:11:20.770  -->  00:11:24.320
we want to save the path and files and you
303

303

00:11:24.320  -->  00:11:26.300
can see that it's a Python the script
304

304

00:11:26.300  -->  00:11:27.640
down the bottom there and it's going
305

305

00:11:27.640  -->  00:11:29.140
it's wanting to save that somewhere, so I'm
306

306

00:11:29.140  -->  00:11:31.310
going to never get to my desktop and
307

307

00:11:31.310  -->  00:11:34.450
save it in there, you can see down the
308

308

00:11:34.450  -->  00:11:35.890
bottom left hand corner it's now finished.
309

309

00:11:35.890  -->  00:11:36.860
So I'm going to close down the browser,
310

310

00:11:36.860  -->  00:11:39.620
any very small file to mention to the
311

311

00:11:39.620  -->  00:11:42.560
700 lines of code. Alright, so remembering
312

312

00:11:42.560  -->  00:11:44.260
where you've downloaded that we need to
313

313

00:11:44.260  -->  00:11:45.640
switch back to idle which you can see
314

314

00:11:45.640  -->  00:11:47.880
I'm in there now. Now from the file menu,
315

315

00:11:47.880  -->  00:11:51.400
click on Python file I'm going to click
316

316

00:11:51.400  -->  00:11:53.710
on open this time, I'm going to navigate
317

317

00:11:53.710  -->  00:11:56.000
to my desktop folder again I'm going to
318

318

00:11:56.000  -->  00:11:58.130
select exchange underscore chart dot pu
319

319

00:11:58.130  -->  00:11:59.250
which was the file that is downloaded,
320

320

00:11:59.250  -->  00:12:03.380
click on open and we'll move this
321

321

00:12:03.380  -->  00:12:06.680
code over here, this is the code that I
322

322

00:12:06.680  -->  00:12:08.710
was talking about, it is a bit complex
323

323

00:12:08.710  -->  00:12:10.130
and certainly not anything you need to
324

324

00:12:10.130  -->  00:12:11.950
understand right now, but you will be
325

325

00:12:11.950  -->  00:12:13.000
learning this as we go through the
326

326

00:12:13.000  -->  00:12:15.400
course and what we're going to do is
327

327

00:12:15.400  -->  00:12:17.140
we're going to run it and again
328

328

00:12:17.140  -->  00:12:19.190
we can run a python script by clicking
329

329

00:12:19.190  -->  00:12:21.700
on run, run module or in this case
330

330

00:12:21.700  -->  00:12:23.870
pressing the f5, I will select them on
331

331

00:12:23.870  -->  00:12:27.640
the menu option this time, so selected
332

332

00:12:27.640  -->  00:12:29.930
run in a moment just move this over here
333

333

00:12:29.930  -->  00:12:32.360
to the middle and this is actually
334

334

00:12:32.360  -->  00:12:34.040
downloading the current exchange rates
335

335

00:12:34.040  -->  00:12:36.460
in real time and then generating a graph
336

336

00:12:36.460  -->  00:12:38.750
and you can see that's now complete,
337

337

00:12:38.750  -->  00:12:40.940
so getting a chart now showing the exchange
338

338

00:12:40.940  -->  00:12:43.370
rates for Australian dollars, Great
339

339

00:12:43.370  -->  00:12:45.560
Britain pounds and the Euro against the
340

340

00:12:45.560  -->  00:12:47.950
US dollar. Now the program displays the
341

341

00:12:47.950  -->  00:12:50.000
data for the last 12 months, so you'll
342

342

00:12:50.000  -->  00:12:51.320
get different month showing along the
343

343

00:12:51.320  -->  00:12:53.000
x-axis depending on when you're actually
344

344

00:12:53.000  -->  00:12:55.210
running this, you can see that this video
345

345

00:12:55.210  -->  00:12:58.390
is being recorded in August 2017,
346

346

00:12:58.390  -->  00:12:59.690
so that's the most current month but this
347

347

00:12:59.690  -->  00:13:01.900
will change depending on when you're
348

348

00:13:01.900  -->  00:13:04.330
running this and I think you'd probably
349

349

00:13:04.330  -->  00:13:05.890
agree that that's pretty impressive to
350

350

00:13:05.890  -->  00:13:07.000
be able to have all that functionality
351

351

00:13:07.000  -->  00:13:10.240
packed into less than 100 lines of
352

352

00:13:10.240  -->  00:13:13.390
in fact I think it's 95 lines,
353

353

00:13:13.390  -->  00:13:16.840
there's the code there and confirming that
354

354

00:13:16.840  -->  00:13:18.280
I'm not going to explain how that code
355

355

00:13:18.280  -->  00:13:20.320
works at the moment because it uses a
356

356

00:13:20.320  -->  00:13:22.390
lot of parts and features but everything
357

357

00:13:22.390  -->  00:13:24.310
it does will be explained in this course,
358

358

00:13:24.310  -->  00:13:26.680
so it will all simply make sense as you
359

359

00:13:26.680  -->  00:13:28.780
work through these videos. Alright so
360

360

00:13:28.780  -->  00:13:30.850
that's a brief tour of idle, in the next
361

361

00:13:30.850  -->  00:13:31.960
video, we're going to install and
362

362

00:13:31.960  -->  00:13:33.610
configure another IDE which we've talked
363

363

00:13:33.610  -->  00:13:36.280
about IntelliJ IDEA and I'm also going
364

364

00:13:36.280  -->  00:13:37.930
to talk about downloading pycharm
365

365

00:13:37.930  -->  00:13:39.910
instead if you prefer and that's because
366

366

00:13:39.910  -->  00:13:42.310
it looks exactly the same as I did but
367

367

00:13:42.310  -->  00:13:45.160
only supports Python programming,
368

368

00:13:45.160  -->  00:13:49.110
as said though if you're already using an IDE.
