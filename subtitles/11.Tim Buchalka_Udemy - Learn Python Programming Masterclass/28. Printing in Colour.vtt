WEBVTT
1
00:00:05.630 --> 00:00:10.100
En este video, crearemos una función que nos permitirá imprimir texto con diferentes efectos.

2
00:00:10.790 --> 00:00:16.250
Incluiré códigos de escape para los colores principales, así como texto en negrita, subrayado e invertido.

3
00:00:16.770 --> 00:00:21.560
Ahora, mencioné en el último video que estos códigos de escape eran horribles, algo así como una barra invertida.

4
00:00:21.650 --> 00:00:23.720
Es fácil de escribir y bastante fácil de recordar.

5
00:00:24.230 --> 00:00:27.800
El código que necesitamos no es que no voy a pedirle que los escriba.

6
00:00:27.950 --> 00:00:29.960
Y diablos, ni siquiera voy a escribirlos en mí mismo.

7
00:00:30.380 --> 00:00:31.370
Los encontrarás en el color.

8
00:00:31.410 --> 00:00:34.760
Subraya los códigos de ese archivo de texto en los recursos para este video.

9
00:00:35.690 --> 00:00:37.340
Necesitamos crear un nuevo camino y caer.

10
00:00:38.420 --> 00:00:40.170
Seguiremos adelante y haremos eso en nuestro proyecto actual.

11
00:00:40.850 --> 00:00:41.990
Voy a llamar a este un color.

12
00:00:42.060 --> 00:00:43.230
Y solo ve a imprimir alto.

13
00:00:51.950 --> 00:00:54.890
Y conseguimos pegar el contenido de ese archivo de texto.

14
00:00:55.950 --> 00:01:00.080
Entonces, las secuencias de escape se definen en una serie de constantes de Python.

15
00:01:00.660 --> 00:01:01.710
Podemos definirlos una vez.

16
00:01:01.770 --> 00:01:03.210
Luego usa los nombres amigables.

17
00:01:03.570 --> 00:01:08.310
Y eso es mucho mejor que recordar que el escape rojo se abre donde el corchete tres es M.

18
00:01:10.870 --> 00:01:13.990
El carácter de escape, por cierto, es el carácter ASCII 27.

19
00:01:14.350 --> 00:01:20.410
Ese es uno hexadecimal, y es más fácil incluir los caracteres que usan el carácter Unicode hexadecimal.

20
00:01:21.170 --> 00:01:26.950
Ahora, esto es un poco confuso porque un carácter de barra diagonal inversa también se llama carácter de escape en

21
00:01:26.950 --> 00:01:28.600
Python y algunos otros idiomas.

22
00:01:29.200 --> 00:01:35.140
Se le llamó el carácter de escape porque cambia el significado de lo que viene después cuando una T. Y. terminal recibió un carácter

23
00:01:35.220 --> 00:01:36.490
de escape.

24
00:01:36.790 --> 00:01:39.460
Sabía que debía interpretar los siguientes personajes de manera diferente.

25
00:01:41.600 --> 00:01:44.260
La barra diagonal inversa en las cadenas de Python hace lo mismo.

26
00:01:44.710 --> 00:01:48.460
Le dice a Python que debe interpretar lo que viene después de una manera especial.

27
00:01:48.940 --> 00:01:51.310
Entonces Backslash N es una nueva línea.

28
00:01:51.610 --> 00:01:54.160
La barra diagonal inversa representa una barra diagonal inversa.

29
00:01:54.550 --> 00:01:56.290
Tienes que escapar de tu personaje de escape.

30
00:01:56.620 --> 00:02:02.680
Si desea que se reconozca, literalmente, esas secuencias de escape RNC en las líneas dos, tres, 14.

31
00:02:03.100 --> 00:02:06.280
Comience con un código de escape seguido de solo corchetes.

32
00:02:06.670 --> 00:02:11.830
Entonces eso le dice a la terminal que los próximos caracteres serán comandos especiales que debe realizar.

33
00:02:12.670 --> 00:02:18.040
O debe usar estas secuencias de escape para imprimirlas en un terminal que comprenda las secuencias de

34
00:02:18.040 --> 00:02:18.670
respuesta.

35
00:02:19.240 --> 00:02:22.180
La buena noticia es que la ventana de ejecución de inteligencia los comprende.

36
00:02:23.050 --> 00:02:24.380
Así que vamos a hacerlo en línea.

37
00:02:24.740 --> 00:02:31.270
Dieciséis, voy a hablar de letra impresa, paréntesis, coma roja entre comillas dobles.

38
00:02:31.660 --> 00:02:32.810
Esto será en rojo.

39
00:02:34.800 --> 00:02:35.000
OKAY.

40
00:02:35.160 --> 00:02:38.560
Cuando ejecuto esto, solo creo que esta ejecución se fue al fondo.

41
00:02:41.460 --> 00:02:41.670
Todo bien.

42
00:02:41.820 --> 00:02:43.200
Es seguro decir que eso está en rojo.

43
00:02:45.630 --> 00:02:49.800
Si usa Windows y usa una RDA diferente, es posible que no vea el cambio de color.

44
00:02:50.340 --> 00:02:55.110
Si está ejecutando un código en un símbolo del sistema de Windows, entonces probablemente tampoco eliminará el texto.

45
00:02:55.470 --> 00:02:59.490
Esto podría cambiar a medida que Microsoft reemplaza el símbolo del sistema con el terminal de Windows.

46
00:02:59.730 --> 00:03:04.950
Pero a partir del momento en que grabo esto, Windows no reconoce las secuencias Air-Sea Escape de forma predeterminada.

47
00:03:05.580 --> 00:03:08.550
No se preocupe, le mostrarán cómo hacer que esto funcione en los próximos videos.

48
00:03:08.850 --> 00:03:12.570
Sigue viendo y escribiendo el código y todo funcionará mágicamente pronto.

49
00:03:14.230 --> 00:03:18.410
Muy bien, así que escribí texto en rojo, como pueden ver, en el terminal de ejecución de inteligencia.

50
00:03:18.770 --> 00:03:21.740
Lo que no es obvio es que todo el aeropuerto ahora es rojo.

51
00:03:22.250 --> 00:03:24.200
Entonces, si agrego otra línea, hagámoslo.

52
00:03:26.350 --> 00:03:28.840
Imprimir, paréntesis, y así es esto.

53
00:03:30.600 --> 00:03:31.440
Si corremos esto.

54
00:03:34.480 --> 00:03:38.140
Aunque no especificamos rojo, esta vez, el aeropuerto sigue siendo rojo.

55
00:03:38.440 --> 00:03:42.640
Los cambios que hacemos en los colores, etc., permanecerán vigentes hasta que los cancelemos.

56
00:03:43.240 --> 00:03:46.990
No podemos restablecer el efecto de texto o imprimir la secuencia de restablecimiento.

57
00:03:47.500 --> 00:03:49.090
Eso está en la línea 10, como puedes ver allí.

58
00:03:49.360 --> 00:03:51.190
Va a ser un poco tedioso hacer eso cada vez.

59
00:03:51.190 --> 00:03:52.930
Esto suena como un buen uso para la función.

60
00:03:53.650 --> 00:03:58.630
Así que voy a eliminar esas dos líneas de eso, ponerlas en la línea 16 17 y reemplazarlas con una declaración

61
00:03:58.630 --> 00:04:01.540
de función para llamar a este color de función en la escuela.

62
00:04:01.540 --> 00:04:04.180
Las impresiones son dif color Alesco imprimir.

63
00:04:05.070 --> 00:04:14.850
Y entre paréntesis, el espacio de dos puntos de texto es tr coma, dos puntos falsos se cierran muy cerca del paréntesis derecho y devuelve la flecha

64
00:04:15.090 --> 00:04:20.250
de O'Connor de ninguna a un guión en mayor que ninguno y dos puntos.

65
00:04:21.730 --> 00:04:26.120
Y puede ver que he anotado la función, toma el texto para imprimir una cadena como

66
00:04:26.150 --> 00:04:27.760
su primer argumento y ajuste.

67
00:04:27.860 --> 00:04:32.660
Queremos nuevamente que una cadena para la segunda no devuelva ninguna porque no devuelve nada útil.

68
00:04:32.990 --> 00:04:34.250
La función se imprime en la pantalla.

69
00:04:34.280 --> 00:04:39.950
No devuelve un valle ni afuera, sino un documento que dice que voy a hacer eso con un doctor.

70
00:04:40.040 --> 00:04:43.250
Entonces tres comillas dobles de nuevo entran allí.

71
00:04:43.550 --> 00:04:46.150
Y nuestro panel de ejecución más cercano, pueden ver eso mejor.

72
00:04:46.880 --> 00:04:50.030
Y vamos a imprimir liberar mis garrapatas de nuevo.

73
00:04:50.720 --> 00:04:51.260
Texto.

74
00:04:53.650 --> 00:04:56.110
Usando la secuencia RNC.

75
00:04:57.780 --> 00:05:00.210
Bueno, secuencias, más bien, para cambiar de color, etc.

76
00:05:03.560 --> 00:05:07.610
Los términos de son los parámetros, tenemos texto, que es un texto para imprimir.

77
00:05:10.560 --> 00:05:11.550
Y en efecto.

78
00:05:13.060 --> 00:05:14.160
Bueno, ese es el efecto, ¿qué?

79
00:05:18.980 --> 00:05:20.380
Es uno de los Constance.

80
00:05:22.830 --> 00:05:24.930
Definido al inicio de este presupuesto.

81
00:05:28.130 --> 00:05:31.540
Muy bien, voy a eliminar return porque el hecho de que no devolvemos nada.

82
00:05:36.410 --> 00:05:39.470
Bien, entonces el cuerpo de la función será bastante simple.

83
00:05:39.790 --> 00:05:41.990
Desea imprimir la secuencia de escape de respuesta.

84
00:05:42.200 --> 00:05:44.270
Luego, la cadena que se pasó a la función.

85
00:05:44.570 --> 00:05:45.800
Luego la secuencia de reinicio.

86
00:05:46.580 --> 00:05:49.550
Comencemos construyendo la cadena usando el formato de punto e imprima aquí.

87
00:05:50.690 --> 00:05:51.440
Los que a eso.

88
00:05:51.490 --> 00:05:56.240
Voy a agregar otra línea aquí para enmarcar porque recuerde, tendremos dos líneas en blanco entre el inicio

89
00:05:56.300 --> 00:05:58.490
y el final de una definición de función.

90
00:05:59.040 --> 00:05:59.230
Correcto.

91
00:05:59.230 --> 00:06:04.520
Entonces 125 ahora la salida superior es costarring es igual a.

92
00:06:05.660 --> 00:06:11.980
En todo deporte a través de cadenas de reemplazo, entonces cero en llaves, una y claramente llaves y

93
00:06:11.980 --> 00:06:13.980
dos en llaves y Belzec.

94
00:06:14.140 --> 00:06:22.750
Tenemos un tema, un formato bastante descartado y entre paréntesis afecta el texto, la coma y luego el restablecimiento, que es nuestra

95
00:06:22.750 --> 00:06:23.440
constante.

96
00:06:24.890 --> 00:06:25.700
Para encontrar una linterna.

97
00:06:26.640 --> 00:06:26.860
OKAY.

98
00:06:26.920 --> 00:06:28.220
Entonces, ¿dónde encontrar su cadena de salida?

99
00:06:28.490 --> 00:06:29.180
Imprimámoslo ahora.

100
00:06:29.190 --> 00:06:31.910
Imprime nuestra puesta en este reparto.

101
00:06:33.080 --> 00:06:41.160
Así que agreguemos algo de claridad, algo de Tesco divagando aquí para agregar dos líneas en blanco después del final de nuestra línea de función.

102
00:06:41.200 --> 00:06:45.100
Veintinueve, voy a pegar un código aquí, también disponible en la sección de recursos.

103
00:06:46.080 --> 00:06:51.870
Por lo tanto, puede decir que estamos accediendo a cualquier función que no sea la línea 31 de uso de la función

104
00:06:51.870 --> 00:06:57.030
de impresión integrada para imprimir texto que pruebe que nuestra función ha restablecido correctamente el terminal al color predeterminado.

105
00:06:58.230 --> 00:07:00.880
Para ejecutar el programa ahora y maravillarse con lo que hemos hecho.

106
00:07:06.400 --> 00:07:07.240
Eso es muy bueno.

107
00:07:07.270 --> 00:07:11.440
Y podemos hacer que nuestro aeropuerto sea más interesante si no obtuvo los diferentes colores y efectos, no se

108
00:07:11.440 --> 00:07:11.740
preocupe.

109
00:07:11.890 --> 00:07:13.950
Como dije, haremos un pequeño cambio.

110
00:07:14.050 --> 00:07:15.940
Este código te funciona muy pronto.

111
00:07:16.600 --> 00:07:17.980
Sin embargo, una función no es perfecta.

112
00:07:18.340 --> 00:07:22.130
No hay forma de poner amarillo en negrita o azul e invertido, por ejemplo.

113
00:07:22.750 --> 00:07:23.770
Eso se hace fácilmente.

114
00:07:24.040 --> 00:07:25.930
Pero necesitamos saber un poco más sobre las funciones.

115
00:07:26.230 --> 00:07:30.670
Hemos descubierto cómo escribir funciones que toman un número variable de argumentos, y eso es lo que

116
00:07:30.670 --> 00:07:31.200
necesitamos aquí.

117
00:07:31.870 --> 00:07:35.320
Una vez que hayamos cubierto Star ARG, volveremos a esta función y la mejoraremos.

118
00:07:35.740 --> 00:07:36.730
Lo haremos un poco más tarde.

119
00:07:37.450 --> 00:07:37.730
Todo bien.

120
00:07:37.770 --> 00:07:41.180
Así que asegúrese de probar el experimento de cuerdas de huckstering usando esta función.

121
00:07:41.250 --> 00:07:44.710
Y luego, el próximo video ejecutará este código de la manera en que nuestros usuarios lo ejecutarán.

122
00:07:45.040 --> 00:07:46.420
Esa es una prueba muy importante.

123
00:07:46.720 --> 00:07:48.430
Y diremos que no funciona en Windows.

124
00:07:48.730 --> 00:07:49.770
Nos vemos en el próximo video.
