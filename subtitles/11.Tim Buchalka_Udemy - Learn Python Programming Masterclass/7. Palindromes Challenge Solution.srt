1
00:00:05,180 --> 00:00:08,090
O dije que este es un palíndromo, desafío, solución.

2
00:00:08,390 --> 00:00:08,980
¿Cómo se fue?

3
00:00:08,990 --> 00:00:13,070
¿Lograste resolverlo realmente para este método de tres cadenas que podrías haber usado?

4
00:00:13,580 --> 00:00:18,260
Aunque Todd Harper en caso seguido, generalmente reserva el punto delgado de Periton más bajo.

5
00:00:18,980 --> 00:00:19,320
Oh si.

6
00:00:19,580 --> 00:00:21,110
Caso adelante en mi solución.

7
00:00:22,000 --> 00:00:27,380
El código que necesitamos cambiar está en la línea nueve, que es donde realizamos la comparación de las dos cadenas.

8
00:00:28,250 --> 00:00:31,730
Voy a agregar primero después del corchete de Rod Square, un punto.

9
00:00:31,850 --> 00:00:34,640
Archivo de casos allí para llamar a ese método.

10
00:00:35,050 --> 00:00:39,250
Agregarán otra llamada equivalente allí después de un pliegue de mayúsculas y minúsculas.

11
00:00:40,220 --> 00:00:41,630
También dejando entre paréntesis.

12
00:00:42,180 --> 00:00:45,820
Ahora que lo hemos hecho por cadenas, conviértase a minúsculas antes de compararlas.

13
00:00:46,510 --> 00:00:47,490
Voy a ejecutar el programa nuevamente.

14
00:00:47,490 --> 00:00:48,510
Animal prueba esto.

15
00:00:50,880 --> 00:00:52,980
Encabezando la palabra jinete nuevamente con una R mayúscula

16
00:00:55,260 --> 00:00:57,930
Este Tanikaze aquí está funcionando, e intentaremos algo más.

17
00:00:58,650 --> 00:00:59,850
Python para asegurarse.

18
00:01:00,900 --> 00:01:03,340
Todavía archiva, y eso está funcionando.

19
00:01:04,460 --> 00:01:07,450
Muy bien, así que no tuvimos que cambiar ninguno de nuestros códigos principales.

20
00:01:07,990 --> 00:01:11,680
Esa es otra ventaja de las funciones cuando arreglas un problema con tu función.

21
00:01:12,040 --> 00:01:15,100
Todo el código que lo llama tiene la ventaja de la solución.

22
00:01:17,340 --> 00:01:22,320
Nuestra función solo funciona con palabras, aunque no podemos usarla para verificar si una oración es un palíndromo.

23
00:01:22,950 --> 00:01:25,200
Las reglas para una oración son un poco más complicadas.

24
00:01:25,620 --> 00:01:26,730
Solo las letras cuentan.

25
00:01:27,180 --> 00:01:31,650
Tenemos que ignorar los espacios y la puntuación con lo que hemos cubierto hasta ahora.

26
00:01:31,890 --> 00:01:35,670
La forma más fácil de hacerlo es crear una nueva cadena.

27
00:01:36,250 --> 00:01:39,900
La nueva cadena solo debe contener los caracteres alfanuméricos.

28
00:01:40,620 --> 00:01:43,830
Has visto cómo hacer algo así en las cadenas del programa PI.

29
00:01:44,190 --> 00:01:46,920
Eso estaba de vuelta en el programa Control de flujo en la sección Python.

30
00:01:47,750 --> 00:01:50,780
Te dije allí porque ese será tu próximo desafío.

31
00:01:52,650 --> 00:01:57,280
Entonces, el desafío es crear una nueva función llamada palíndromo y oración de discurso.

32
00:01:57,840 --> 00:02:03,490
La función debe devolver verdadero, si la oración es un palíndromo, amigos, de lo contrario recuerden que ignoramos

33
00:02:03,490 --> 00:02:07,120
los espacios, la puntuación, cosas como tabulaciones y saltos de línea.

34
00:02:07,540 --> 00:02:10,330
Solo nos interesan los caracteres alfanuméricos.

35
00:02:10,870 --> 00:02:16,090
Consulte los métodos de cadena en la documentación para encontrar uno que sea adecuado para identificar si un

36
00:02:16,090 --> 00:02:17,020
carácter es alfanumérico.

37
00:02:17,740 --> 00:02:21,730
Hay dos métodos que podría usar dependiendo de si desea permitir números o no.

38
00:02:23,830 --> 00:02:28,510
Una vez que lo ha excluido, los personajes de la pantalla permanecen con las oficinas funcionales, similar a

39
00:02:28,900 --> 00:02:31,360
lo que hicimos para la función IS Palindrome.

40
00:02:32,070 --> 00:02:34,240
Asegúrate de probar tu código a fondo también.

41
00:02:36,610 --> 00:02:41,860
Algunos ejemplos de oraciones de palíndromos para ayudarlo, ¿dónde están, en primer lugar, fue un automóvil o un gato?

42
00:02:41,920 --> 00:02:48,880
Vi a dos Gaist Secord que no se adaptaban mucho a los sentidos, pero Google definitivamente se olvidará.

43
00:02:48,880 --> 00:02:49,600
Más ejemplos.

44
00:02:50,020 --> 00:02:53,980
Recuerde también que una prueba con oraciones que no son palíndromos tiene una oportunidad.

45
00:02:54,070 --> 00:02:56,560
Y repaso mi solución en el siguiente video.
