WEBVTT
1
00:00:05.180 --> 00:00:08.720
Neste vídeo, queremos falar sobre anotações de funções e dicas de tipo.

2
00:00:09.440 --> 00:00:13.550
Eles não são exatamente a mesma coisa, embora você encontre os termos usados de forma intercambiável.

3
00:00:14.450 --> 00:00:20.360
As anotações de função são basicamente um caso especial de dicas de tipo aplicadas aos parâmetros de função e valores de

4
00:00:20.360 --> 00:00:20.900
retorno.

5
00:00:21.910 --> 00:00:25.720
Antes de examinarmos a documentação, adicionarei algumas anotações às nossas funções.

6
00:00:26.860 --> 00:00:29.280
Portanto, verifique se você tem funções incluídas na sua RDA.

7
00:00:29.750 --> 00:00:32.980
Você tem que começar com a segunda função é e é chamada palíndromo.

8
00:00:35.890 --> 00:00:41.530
Essa função pega uma string como argumento e retorna uma função bool. As anotações fornecem uma maneira

9
00:00:41.530 --> 00:00:44.470
de descrevê-la sem precisar se referir à string.

10
00:00:45.130 --> 00:00:48.070
Então, eu vou assumir a função para discutir o que fiz.

11
00:00:48.730 --> 00:00:50.140
Se você tiver algum ponto de interrupção definido.

12
00:00:50.230 --> 00:00:56.380
Certifique-se de limpá-las primeiro e subir aqui agora para a linha 18 e, com o tipo depois que essa

13
00:00:57.040 --> 00:01:04.210
sequência de dois pontos é TR e fora do espaço entre parênteses à direita, um traço e um crédito e assim por diante.

14
00:01:05.380 --> 00:01:08.330
Booleano antes da coluna toxo.

15
00:01:09.470 --> 00:01:14.630
Indicamos o tipo de retorno com essa seta, um mineiro seguido pelo maior e, depois disso, temos

16
00:01:14.630 --> 00:01:15.860
o retorno ao bool.

17
00:01:16.280 --> 00:01:19.100
Nesse caso, a insulina Collen normalmente.

18
00:01:19.570 --> 00:01:22.250
Qualquer linha inicia, um novo bloco de código sempre termina com dois pontos.

19
00:01:23.590 --> 00:01:29.380
Então, acho que as definições das funções estão mais claras agora, podemos ver que tipo de parâmetro é e que a função

20
00:01:29.380 --> 00:01:30.290
retorna uma bola.

21
00:01:30.700 --> 00:01:34.900
É certo que chamou a string de parâmetros, então talvez não tenhamos melhorado muito.

22
00:01:35.470 --> 00:01:36.490
Então, o que ganhamos?

23
00:01:37.270 --> 00:01:40.150
Bem, eu vou chamar essa função no final deste arquivo.

24
00:01:41.170 --> 00:01:42.220
É chamado para o fundo lá.

25
00:01:44.290 --> 00:01:46.260
Comece na linha 66 e conversaremos.

26
00:01:46.370 --> 00:01:51.170
P igual a é um palíndromo de pontuação.

27
00:01:55.680 --> 00:02:01.330
A enfermeira, após um pequeno atraso, sua inteligência mostra que o cólon da corda da dica superior é TIAR.

28
00:02:02.260 --> 00:02:06.530
Com apenas um parâmetro que é chamado de string, você provavelmente chama de não-impressionado.

29
00:02:07.070 --> 00:02:11.660
Então, vamos anotar a próxima função palíndromo, sublinhar a frase, voltar e fazer isso.

30
00:02:15.320 --> 00:02:21.540
Então chegamos aqui depois da frase, Colin Spice como T. R. tem os parênteses certos e pode colocar

31
00:02:21.540 --> 00:02:24.640
um tempero, um traço e um maior que a flecha novamente.

32
00:02:25.440 --> 00:02:26.010
Paul novamente.

33
00:02:26.640 --> 00:02:28.110
E deixe a coluna como estava.

34
00:02:28.920 --> 00:02:29.100
Certo.

35
00:02:29.130 --> 00:02:31.430
Quando fizemos isso, voltamos à linha 66.

36
00:02:32.270 --> 00:02:34.140
Nós vamos excluir isso.

37
00:02:34.260 --> 00:02:38.490
Eu fui chamado aqui de palíndromo em vez de mudá-lo para usar a frase do palíndromo.

38
00:02:38.520 --> 00:02:41.790
Então palíndromo frase alesco.

39
00:02:43.380 --> 00:02:45.510
Desta vez, acho que você concorda com os hits um pouco mais úteis.

40
00:02:45.810 --> 00:02:47.880
Não precisamos nos perguntar sobre quais frases.

41
00:02:48.150 --> 00:02:50.400
É uma string para ser concluída.

42
00:02:50.520 --> 00:02:54.270
Farei o mesmo para nossa função de Fibonacci na linha quarenta e sete.

43
00:02:56.300 --> 00:03:00.780
No espaço dos dois pontos, ele está na seta fora dos parênteses.

44
00:03:00.990 --> 00:03:02.940
Portanto, é um traço, um sinal maior que.

45
00:03:03.770 --> 00:03:06.830
Desta vez, trata-se de retornar uma polegada em vez de uma bola.

46
00:03:07.740 --> 00:03:11.800
Eles vão para a linha 64 se clicarmos em Fibonacci e sua fila de controle.

47
00:03:13.750 --> 00:03:17.380
Os geradores incluíram nossa dica principal na documentação, como você pode ver lá.

48
00:03:17.980 --> 00:03:22.300
Poderíamos facilmente dizer que a função Fibonacci recebe um int e retorna nela.

49
00:03:23.010 --> 00:03:27.620
E foi por isso que não mencionei o topo dos argumentos e retornamos valores nas strings de nossos documentos.

50
00:03:28.120 --> 00:03:32.650
Se você não usar anotações de função, o seu médico deverá mencionar os tipos.

51
00:03:33.070 --> 00:03:36.880
Mas acho que as anotações de função são mais claras e as usarei em nossos exemplos.

52
00:03:38.170 --> 00:03:41.330
Um caso que deixa a função multiplicar no início do outono.

53
00:03:41.520 --> 00:03:46.730
Volte e verifique isso para durar, porque é um pouco menos direto.

54
00:03:47.150 --> 00:03:54.560
Os parâmetros X e Y podem ser também flutuantes quando você faz anotações no Veliz como se fosse flutuante.

55
00:03:55.670 --> 00:03:57.860
Você pode usá-lo sempre que for necessário um flutuador.

56
00:03:58.160 --> 00:04:01.790
O poço quatro oito quatro sugere o uso da fala flutuante em casos como este.

57
00:04:01.910 --> 00:04:02.450
Vamos fazer isso.

58
00:04:02.840 --> 00:04:07.800
Tem que haver o X Colen float para fazer o mesmo com os brancos.

59
00:04:07.850 --> 00:04:09.470
É por isso que Colen flutua.

60
00:04:10.280 --> 00:04:11.600
Sabemos que retorna um carro alegórico.

61
00:04:11.990 --> 00:04:13.490
Então, vou colocar a nossa vitória novamente aqui.

62
00:04:13.580 --> 00:04:14.800
Desh Credit e assim por diante.

63
00:04:15.320 --> 00:04:15.890
Flutuador.

64
00:04:17.050 --> 00:04:18.090
Tudo bem, então vamos multiplicar.

65
00:04:18.150 --> 00:04:22.530
Tecnicamente, podemos passar qualquer parte superior da sequência, bem como um número para esse segundo parâmetro.

66
00:04:22.830 --> 00:04:25.020
E há maneiras de especificar uma anotação como essa.

67
00:04:25.290 --> 00:04:27.730
Mas é muito mais detalhado do que eu quero entrar no momento.

68
00:04:30.020 --> 00:04:31.190
Vamos funcionar anotações.

69
00:04:31.220 --> 00:04:37.130
Eles esclarecem quais tipos de valores suas funções podem aceitar e o que retornam anotará a maioria

70
00:04:37.130 --> 00:04:39.980
das funções que criamos no restante deste curso.

71
00:04:40.540 --> 00:04:42.980
Também examinamos como o tipo genérico anotado.

72
00:04:43.520 --> 00:04:47.480
Essa é uma lista de números inteiros, por exemplo, para indicar que uma lista de seqüências de caracteres não é adequada.

73
00:04:47.960 --> 00:04:50.870
Vamos ver como fazer isso quando escrevermos uma função que aceita uma lista.

74
00:04:52.730 --> 00:04:57.500
Não usaremos as principais dicas em geral neste curso quando chegarmos a um exemplo adequado.

75
00:04:57.740 --> 00:05:02.120
Incluirei algumas dicas de tipo, mas é útil vê-las para que você saiba o que são quando

76
00:05:02.120 --> 00:05:02.690
as encontrar.

77
00:05:03.470 --> 00:05:07.580
Eles podem ser úteis em programas muito grandes, mas seriam demais em nossos exemplos.

78
00:05:07.610 --> 00:05:10.400
Eles desorganizam o código e não fornecem nenhum benefício útil.

79
00:05:11.270 --> 00:05:13.970
Observe que estou me referindo apenas ao código neste curso.

80
00:05:14.000 --> 00:05:18.650
Certamente não estou dizendo que você não deve usar dicas de tipo se estiver trabalhando para uma empresa que as

81
00:05:18.650 --> 00:05:19.070
usa.

82
00:05:19.390 --> 00:05:20.150
E você deveria também.

83
00:05:21.080 --> 00:05:23.780
Certo, então vamos terminar este vídeo de uma verificação e obter alguma documentação.

84
00:05:24.520 --> 00:05:28.760
Começaremos com a documentação do módulo de cobertura, os introduzidos no Python, três pontos

85
00:05:28.760 --> 00:05:29.150
cinco.

86
00:05:30.290 --> 00:05:31.190
Postado um link aqui.

87
00:05:34.570 --> 00:05:37.860
Então comecei aqui porque começa com uma lista de todos os pips relevantes.

88
00:05:38.160 --> 00:05:39.240
E há muito.

89
00:05:39.660 --> 00:05:42.370
Existem sete dicas relacionadas, se você incluir o pit quatro às três.

90
00:05:42.720 --> 00:05:46.140
De fato, existem oito pips, três um e sete não aparecem nessa lista.

91
00:05:46.650 --> 00:05:52.000
Principalmente, eles fazem o cabelo para implementar as principais dicas e se tornar bastante técnico, a menos que você seja um programador

92
00:05:52.000 --> 00:05:52.490
experiente.

93
00:05:52.770 --> 00:05:54.330
Eu não sugeriria tentar ler a maioria deles.

94
00:05:54.840 --> 00:05:57.510
O que é importante, porém, é a nota no topo deste documento.

95
00:05:58.110 --> 00:06:03.030
O tempo de execução do Python não aplica anotações de função e tipo de variável.

96
00:06:03.960 --> 00:06:06.690
Está bem documentado, formal e informalmente.

97
00:06:06.960 --> 00:06:09.870
O python não se tornará uma linguagem de tipo estaticamente.

98
00:06:10.410 --> 00:06:15.720
Você não precisa anotar suas funções e poderá executá-lo mesmo se usar anotações incorretas.

99
00:06:16.380 --> 00:06:19.320
Se útil é quando ferramentas de terceiros as verificam.

100
00:06:19.910 --> 00:06:22.260
O verificador de inteligência, por exemplo, verificará seu código.

101
00:06:22.650 --> 00:06:26.750
Se você tentar passar quando uma string for esperada, a inteligência o avisará.

102
00:06:27.390 --> 00:06:28.410
Podemos ver isso em nosso código.

103
00:06:28.410 --> 00:06:32.940
Na verdade, volte ao cardeal até a linha 66.

104
00:06:35.610 --> 00:06:39.370
Nunca tente transmiti-lo para a função de sentença palíndromo, tamanho do bloco.

105
00:06:39.450 --> 00:06:41.030
Acabei de colocar alguns deles.

106
00:06:45.760 --> 00:06:50.500
Eles podem dizer que a coleta de informações é um aviso aqui; a sequência de tipos esperados foi inserida.

107
00:06:51.450 --> 00:06:52.800
É por isso que você pode querer usá-los.

108
00:06:53.150 --> 00:06:55.350
Eles podem impedir que você cometa erros tolos no seu código.

109
00:06:56.010 --> 00:06:57.140
Então volte ao navegador.

110
00:07:01.040 --> 00:07:05.930
Eu li que a lógica e os fundamentos das seções de anotações de funções aqui nesta página.

111
00:07:06.690 --> 00:07:08.000
Estes são os três, um, oito, sete.

112
00:07:09.140 --> 00:07:10.430
Muito útil para ler isso.

113
00:07:11.520 --> 00:07:12.960
Vejo você no próximo vídeo.
