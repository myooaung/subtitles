1
1

00:00:05,340  -->  00:00:08,670
So, in the previous two videos
we've talked about lists and
2

2

00:00:08,670  -->  00:00:10,580
figured out how they work in Python.
3

3

00:00:10,580  -->  00:00:14,560
So, what I'm gonna do now is just
run you through another example
4

4

00:00:14,560  -->  00:00:17,930
of a more complicated version and
then move onto a challenge.
5

5

00:00:17,930  -->  00:00:20,950
Now, what we're gonna do is we're gonna
use a concept we've used earlier,
6

6

00:00:20,950  -->  00:00:22,150
which is a meal in a cafe.
7

7

00:00:22,150  -->  00:00:24,670
So, what I'm going to do
is type in some code.
8

8

00:00:24,670  -->  00:00:25,590
I'm going to actually delete what
9

9

00:00:25,590  -->  00:00:27,580
we've got on the screen here
because we don't need it anymore.
10

10

00:00:29,090  -->  00:00:33,140
And I'm going to start typing menu
equals two empty square brackets,
11

11

00:00:33,140  -->  00:00:34,380
which is an empty list.
12

12

00:00:34,380  -->  00:00:35,110
Then we do menu.append.
13

13

00:00:35,110  -->  00:00:38,980
Notice the square brackets.
14

14

00:00:38,980  -->  00:00:43,140
Egg, spam, bacon.
15

15

00:00:43,140  -->  00:00:44,510
Bacon like so.
16

16

00:00:44,510  -->  00:00:48,000
So that's our first entry and I'm just
gonna copy the first part of this so
17

17

00:00:48,000  -->  00:00:51,220
I can copy it and
paste it rather than type it each time.
18

18

00:00:51,220  -->  00:00:57,970
The next menu option is going to be egg,
sausage, bacon.
19

19

00:00:57,970  -->  00:01:05,070
Next one is going to be egg, and spam.
20

20

00:01:05,070  -->  00:01:11,910
Next one, egg, bacon, spam.
21

21

00:01:11,910  -->  00:01:17,780
Next one, egg, bacon,
22

22

00:01:17,780  -->  00:01:21,990
sausage, spam.
23

23

00:01:21,990  -->  00:01:29,470
Next one is going to be spam,
bacon, sausage, and more spam.
24

24

00:01:30,500  -->  00:01:31,000
Oops.
25

25

00:01:34,790  -->  00:01:36,730
Then we're going to have two more here.
26

26

00:01:36,730  -->  00:01:41,130
Spam, egg, spam.
27

27

00:01:41,130  -->  00:01:48,250
Spam, bacon, spam.
28

28

00:01:48,250  -->  00:01:53,550
And the last one we're gonna have is spam,
29

29

00:01:53,550  -->  00:01:56,490
egg, sausage, spam.
30

30

00:01:58,750  -->  00:02:01,120
So first things first,
you might be wondering why is there so
31

31

00:02:01,120  -->  00:02:02,450
much spam in these meals?
32

32

00:02:02,450  -->  00:02:06,130
Well, the menu's actually taken
from a Monty Python sketch.
33

33

00:02:06,130  -->  00:02:09,470
And if you want to search the Internet for
Monty Python spam sketch,
34

34

00:02:09,470  -->  00:02:11,030
then you can find out more about that.
35

35

00:02:11,030  -->  00:02:13,850
You actually watch it on YouTube as well
when you feel you need to take a break.
36

36

00:02:13,850  -->  00:02:17,730
So incidentally that sketch is the reason
we now refer to junk email as a spam.
37

37

00:02:17,730  -->  00:02:20,580
But anyway so what we've done here is
we've actually created the empty list
38

38

00:02:20,580  -->  00:02:22,160
as you saw on line one.
39

39

00:02:22,160  -->  00:02:24,810
And we then went through and
appended each of the meals to it.
40

40

00:02:24,810  -->  00:02:28,640
And of course each of the meals as you'll
now see in square brackets is actually
41

41

00:02:28,640  -->  00:02:31,500
listed its own right containing
the details of that meal.
42

42

00:02:31,500  -->  00:02:33,040
So we can actually print something out.
43

43

00:02:33,040  -->  00:02:35,580
We can type print Menu.
44

44

00:02:37,560  -->  00:02:38,350
Actually run that.
45

45

00:02:40,830  -->  00:02:43,110
We can actually see the entries.
46

46

00:02:43,110  -->  00:02:46,510
So it's a little bit hard to see because
it's actually menus within menus,
47

47

00:02:46,510  -->  00:02:49,590
but you can sort of see that there's
the first on there on the screen,
48

48

00:02:49,590  -->  00:02:52,830
separated by a comma, and they've
each got their own square brackets to
49

49

00:02:52,830  -->  00:02:55,530
indicate they're actually each
a list in their own right.
50

50

00:02:55,530  -->  00:02:58,880
Now that we've actually got a list and
we've got a lot of entries.
51

51

00:02:58,880  -->  00:03:01,020
We can actually start writing a for
loop and
52

52

00:03:01,020  -->  00:03:03,970
actually testing to see
how the in operator works.
53

53

00:03:03,970  -->  00:03:07,120
So we could do something like for
meal in menu.
54

54

00:03:07,120  -->  00:03:12,420
Then we could put if not spam
55

55

00:03:12,420  -->  00:03:16,810
in meal, print meal.
56

56

00:03:16,810  -->  00:03:19,590
So if we actually run this and
57

57

00:03:19,590  -->  00:03:24,130
I'll just comment out this first line
here, just to remove the confusion.
58

58

00:03:24,130  -->  00:03:28,080
And what that should do, and what that
actually does is only shows the entry
59

59

00:03:28,080  -->  00:03:31,050
which is on line three
that doesn't contain spam.
60

60

00:03:31,050  -->  00:03:33,740
And again each of the items on
the menu are themselves lists.
61

61

00:03:33,740  -->  00:03:37,040
So the for loop here initially, for
meal in menu, is going through and
62

62

00:03:37,040  -->  00:03:39,160
grabbing a list with each iteration.
63

63

00:03:39,160  -->  00:03:40,590
So the first time it goes through the for
64

64

00:03:40,590  -->  00:03:46,320
loop, the meal variable is set to the
list, which is the first list in the list.
65

65

00:03:46,320  -->  00:03:47,270
So to speak.
66

66

00:03:47,270  -->  00:03:49,340
And from there we can put
if not spam in meal, and
67

67

00:03:49,340  -->  00:03:52,760
that's actually searching through that
individual list, the list that of
68

68

00:03:52,760  -->  00:03:56,160
course is sort of a sub-list of
a major list, if that makes sense.
69

69

00:03:56,160  -->  00:03:59,410
Then we're actually determining that that
wasn't in there, and we're only printing
70

70

00:03:59,410  -->  00:04:04,060
out the contents if the word spam wasn't
found as one of the list entries.
71

71

00:04:04,060  -->  00:04:07,120
So again, you can see that
Python is extremely powerful,
72

72

00:04:07,120  -->  00:04:10,970
the way it's been designed and how it
actually handles this, is like this.
73

73

00:04:10,970  -->  00:04:11,910
Okay, so it's time for a challenge.
74

74

00:04:11,910  -->  00:04:16,800
What I am going to do is go to the first
line and paste in the challenge.
75

75

00:04:18,170  -->  00:04:19,570
And that should be without spam.
76

76

00:04:21,180  -->  00:04:24,440
So let's actually talk now about what
the challenge is actually about.
77

77

00:04:24,440  -->  00:04:27,690
So what you need to do is
add to the program below.
78

78

00:04:27,690  -->  00:04:30,170
So that if it finds a meal
without spam in it,
79

79

00:04:30,170  -->  00:04:33,050
that it then prints out each of
the ingredients of the meal.
80

80

00:04:33,050  -->  00:04:37,010
At this stage you can see that we printed
out everything, but you need to actually
81

81

00:04:37,010  -->  00:04:40,300
go through each individual item,
rather than just printing the entire list.
82

82

00:04:40,300  -->  00:04:45,630
So you'll need to set up the menu as
we did in lines five to 13 there.
83

83

00:04:45,630  -->  00:04:48,970
So type that in to start with, and
then you'll need to modify the for
84

84

00:04:48,970  -->  00:04:50,160
loop in some way.
85

85

00:04:50,160  -->  00:04:51,780
This code down here.
86

86

00:04:51,780  -->  00:04:55,160
So then, basically prints out
each ingredient separately,
87

87

00:04:55,160  -->  00:04:57,900
rather than just printing out just
the list as it's currently doing.
88

88

00:04:57,900  -->  00:04:59,650
Okay?
So, pause the video.
89

89

00:04:59,650  -->  00:05:02,440
Go away and actually see if you can
come up with a solution to that.
90

90

00:05:02,440  -->  00:05:05,650
When you're finished,
come back and check my solution.
91

91

00:05:10,710  -->  00:05:11,880
Okay so how did you get under?
92

92

00:05:11,880  -->  00:05:12,920
Did you figure it out?
93

93

00:05:12,920  -->  00:05:14,230
So we're actually on the right track here.
94

94

00:05:14,230  -->  00:05:16,670
We've actually got a lot of
the code in build already.
95

95

00:05:16,670  -->  00:05:20,060
So we've got the first loop the outside
loop with is going through each meal
96

96

00:05:20,060  -->  00:05:22,780
that's in the menu list
then grabbing that meal.
97

97

00:05:22,780  -->  00:05:23,660
So that needs to stay there.
98

98

00:05:23,660  -->  00:05:26,670
We also need to put the if not in there,
so
99

99

00:05:26,670  -->  00:05:29,990
that we only get the meals
that haven't got spam in them.
100

100

00:05:29,990  -->  00:05:31,320
And we can print out this initial list.
101

101

00:05:31,320  -->  00:05:33,410
We can leave that in there like
we're seeing on the screen.
102

102

00:05:33,410  -->  00:05:37,210
But what we then need to do is
iterate through the list of
103

103

00:05:37,210  -->  00:05:40,510
entries in this particular meal and
print those out.
104

104

00:05:40,510  -->  00:05:44,740
So to do that, we stay at this indentation
level cuz we're only processing a meal
105

105

00:05:44,740  -->  00:05:45,830
if it doesn't contain spam.
106

106

00:05:45,830  -->  00:05:51,030
And we type in for ingredient in meal,
107

107

00:05:51,030  -->  00:05:58,040
colon print ingredient,
so that is literally it.
108

108

00:05:58,040  -->  00:06:02,060
So we are taking it to the next level
we're actually now going through the list
109

109

00:06:02,060  -->  00:06:03,580
from the meal.
110

110

00:06:03,580  -->  00:06:06,830
So first, the outer entry, the initial for
loop, that was the master list,
111

111

00:06:06,830  -->  00:06:10,730
the list of all the menus, whereas the
inner list for ingredient in meals is just
112

112

00:06:10,730  -->  00:06:14,350
as you can see it's actually
the ingredients within a specific list.
113

113

00:06:14,350  -->  00:06:15,490
So, if we actually run that now.
114

114

00:06:16,850  -->  00:06:19,110
We finally get the output egg,
sausage, bacon, and
115

115

00:06:19,110  -->  00:06:22,090
we're getting that because there's only
one entry in here that hasn't got spam..
116

116

00:06:22,090  -->  00:06:25,700
And then also, we're then cycling
through that list that we retrieved, and
117

117

00:06:25,700  -->  00:06:27,510
actually printing out
the individual items.
118

118

00:06:27,510  -->  00:06:28,030
So, that's it.
119

119

00:06:28,030  -->  00:06:29,770
That's the challenge,
I hope you did well with that.
120

120

00:06:29,770  -->  00:06:31,470
And, I hope you've got
a lot out of this section.
121

121

00:06:31,470  -->  00:06:33,000
And, I'll see you in the next video.
