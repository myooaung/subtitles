1
00:00:05,310 --> 00:00:06,600
Así que este fue un desafío fácil.

2
00:00:06,870 --> 00:00:11,820
Probablemente más fácil que algunos de los anteriores que configuramos porque queríamos enfatizar algo que puede

3
00:00:11,820 --> 00:00:12,810
no ser obvio.

4
00:00:13,440 --> 00:00:18,540
Si no es obvio, puede causar un problema en su código, pero puede confundirlo cuando lee el código

5
00:00:18,540 --> 00:00:19,620
de otra persona.

6
00:00:20,130 --> 00:00:23,210
Tengo que dejar de escribir mi solución de la manera obvia.

7
00:00:24,230 --> 00:00:32,280
Vamos a bajar aquí a la línea ocho buscando agregar una llamada a else y luego la siguiente línea, imprimir, paréntesis, comillas dobles

8
00:00:32,550 --> 00:00:36,230
usando un campo de reemplazo para poner a cero en.

9
00:00:37,480 --> 00:00:38,310
No es un número válido.

10
00:00:42,070 --> 00:00:44,710
Hora de cierre, un formato de parada silencioso temp.

11
00:00:46,950 --> 00:00:51,470
Nuevamente, asegurándonos de mantener dos líneas en blanco entre el final de la función y las nubes que comienzan a lo largo

12
00:00:51,470 --> 00:00:52,110
de 13.

13
00:00:53,060 --> 00:00:57,710
Entonces, si la entrada es un número válido, nuestra función devuelve es, oye, eso es durante una línea ocho.

14
00:00:58,370 --> 00:01:02,120
La forma obvia de resolver un desafío es agregar un bloque, lo cual hice.

15
00:01:02,960 --> 00:01:07,040
Si ingresan algo que no se puede convertir a él, imprimimos el mensaje.

16
00:01:07,480 --> 00:01:08,470
El código esta bien.

17
00:01:08,840 --> 00:01:09,400
Funciona.

18
00:01:09,410 --> 00:01:11,300
Y muchos programadores lo escribirían de esa manera.

19
00:01:12,080 --> 00:01:15,530
Lo que puede no haber sido obvio es que no se necesita Ilse.

20
00:01:16,250 --> 00:01:22,100
Si se ejecuta el retorno en la línea ocho, el nuevo código después de esa línea no será la función que terminará en

21
00:01:22,100 --> 00:01:24,470
ese punto y volverá al código de llamada.

22
00:01:25,440 --> 00:01:28,080
Eso significa que algunos programadores no usarán el otro.

23
00:01:28,530 --> 00:01:30,590
En cambio, lo que harán es algo como esto.

24
00:01:30,630 --> 00:01:31,950
O llámalo Ilse.

25
00:01:34,140 --> 00:01:37,390
Puedo mover la sangría nuevamente al mismo nivel que el IF.

26
00:01:38,450 --> 00:01:41,700
Así que la impresión en la línea 10 tiene sangría, un reverso maravilloso.

27
00:01:41,720 --> 00:01:42,840
No es parte del bloque.

28
00:01:43,010 --> 00:01:48,880
Como era antes de ls, este orden es exactamente lo mismo si se presenta un número válido.

29
00:01:49,250 --> 00:01:53,180
La función regresará si el usuario ingresa algo que no es válido.

30
00:01:53,540 --> 00:01:54,650
Recibimos el mensaje impreso.

31
00:01:55,340 --> 00:02:01,260
Para ser claros, solo llegamos a la línea diez si se ingresa una importación no válida para ejecutar el programa que están haciendo y

32
00:02:01,260 --> 00:02:02,760
nos aseguramos de que funcione.

33
00:02:04,100 --> 00:02:05,650
Buscando en algunos personajes al azar.

34
00:02:07,400 --> 00:02:08,210
Recibimos el mensaje.

35
00:02:08,460 --> 00:02:14,780
El verdadero personaje de Sartaj no es válido para no orinar en Cerdeña, pero al ingresar cualquier cosa vuelve y dice

36
00:02:14,780 --> 00:02:16,670
que no es un no válido.

37
00:02:17,870 --> 00:02:18,740
Es un 500.

38
00:02:20,180 --> 00:02:22,060
La función regresa en bastante 500.

39
00:02:22,140 --> 00:02:23,290
Y no recibimos el mensaje.

40
00:02:23,820 --> 00:02:25,600
Terminaré con cero para terminar el programa.

41
00:02:27,740 --> 00:02:31,700
Por lo tanto, encontrará código escrito de esa manera en lugar de utilizar la cláusula LS.

42
00:02:32,460 --> 00:02:37,470
Entonces, vamos a llevar una copia de su código shogunato negro al dolor del proyecto.

43
00:02:38,020 --> 00:02:41,270
Quiero mostrarle una comparación de cinco conjuntos de código.

44
00:02:41,750 --> 00:02:42,650
Entonces copiaremos esto.

45
00:02:45,460 --> 00:02:48,280
Lo pegaremos y llamaré al segundo juego de adivinanzas más.

46
00:02:50,560 --> 00:02:53,320
Con el código else, haré esa versión del archivo.

47
00:02:53,790 --> 00:02:55,960
Voy a dejar la LCN y hacer la sangría.

48
00:02:56,980 --> 00:03:01,910
Entonces tienes ambas versiones y tenemos la versión Elst y también la versión en la que trabajamos y ejecutamos

49
00:03:01,910 --> 00:03:03,800
que no tiene la de Thiele.

50
00:03:04,820 --> 00:03:05,970
Si todavía sube a la ventana.

51
00:03:07,090 --> 00:03:09,340
Seleccione Ed Taps y divídalos verticalmente.

52
00:03:15,400 --> 00:03:17,560
Debería poder cerrar estas ventanas, Daniel.

53
00:03:18,760 --> 00:03:20,290
Podemos ver ambas versiones del código.

54
00:03:23,800 --> 00:03:28,720
Puede ver allí que la comparación, la versión izquierda es la versión de Ayles.

55
00:03:29,090 --> 00:03:34,420
Y eso tiene la cláusula Elst en el otoño en el lado derecho tiene comentarios de Ale y el

56
00:03:34,420 --> 00:03:39,010
nivel de sangría de la impresión está en el mismo nivel que la declaración if.

57
00:03:39,730 --> 00:03:41,950
Cualquiera que sea la historia que prefiera, depende de usted.

58
00:03:42,370 --> 00:03:43,780
Lo demás es innecesario.

59
00:03:43,990 --> 00:03:46,390
Pero puede sentir que hace que el código sea fácil de entender.

60
00:03:46,810 --> 00:03:48,400
No hay diferencia en el rendimiento.

61
00:03:48,430 --> 00:03:51,290
Ambos compilan a un bytecode casi idéntico.

62
00:03:52,540 --> 00:03:54,930
Asegúrese de entender el flujo de ejecución aquí.

63
00:03:55,540 --> 00:03:59,380
El retorno en la línea ocho evitará que se ejecute más código.

64
00:04:00,040 --> 00:04:04,990
Si desea utilizar el depurador para verificar en lugar de Breakpoint en la línea siete, puede experimentar

65
00:04:04,990 --> 00:04:09,780
con números válidos e inválidos para verificar que ambos enfoques harán lo mismo cuando esté contento

66
00:04:09,790 --> 00:04:12,610
de publicar formas de escribir exactamente la misma cosa.

67
00:04:13,210 --> 00:04:14,410
Nos vemos en el próximo video.
