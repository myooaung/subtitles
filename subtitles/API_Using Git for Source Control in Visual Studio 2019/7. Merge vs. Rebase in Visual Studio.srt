1
00:00:02,157 --> 00:00:02,692
In this demonstration,

2
00:00:02,692 --> 00:00:07,167
you will learn how to do a merge and a rebase in Visual Studio,

3
00:00:07,167 --> 00:00:10,217
so let's switch to Visual Studio.

4
00:00:10,217 --> 00:00:11,397
As you can see,

5
00:00:11,397 --> 00:00:16,160
we work again as user Thomas and we are here on the

6
00:00:16,160 --> 00:00:17,157
feature/coffeeShopCommands branch.

7
00:00:17,157 --> 00:00:21,207
Now let's bring back the latest changes from master into that branch.

8
00:00:21,207 --> 00:00:24,207
So let's go to the Branches page of Team Explorer.

9
00:00:24,207 --> 00:00:26,237
Here you can merge or rebase.

10
00:00:26,237 --> 00:00:30,177
Let's first click on Merge so that you can see this.

11
00:00:30,177 --> 00:00:34,182
Here you can select now that you want to merge from the

12
00:00:34,182 --> 00:00:37,167
master branch into the feature branch.

13
00:00:37,167 --> 00:00:40,662
You can test this very easily by unchecking this

14
00:00:40,662 --> 00:00:43,187
Commit changes after merging checkbox.

15
00:00:43,187 --> 00:00:45,217
Now let's click the Merge button.

16
00:00:45,217 --> 00:00:48,177
You can see Merge in Progress.

17
00:00:48,177 --> 00:00:51,187
Let's go to the Changes page of Team Explorer.

18
00:00:51,187 --> 00:00:55,157
Here you can see the Staged Changes of this merge commit.

19
00:00:55,157 --> 00:00:58,147
Let's double-click the CoffeeShop.cs file,

20
00:00:58,147 --> 00:01:01,207
and here you can see that a PaperCupsInStock property

21
00:01:01,207 --> 00:01:04,167
was added on the master branch.

22
00:01:04,167 --> 00:01:06,177
Let's go again to Team Explorer,

23
00:01:06,177 --> 00:01:10,187
and let's also double-click on the CoffeeShopDataProvider.cs file.

24
00:01:10,187 --> 00:01:12,889
Here you can see that the new PaperCupsInStock

25
00:01:12,889 --> 00:01:16,167
property is also filled with data.

26
00:01:16,167 --> 00:01:20,147
Now let's close this again, and let's go back to Team Explorer.

27
00:01:20,147 --> 00:01:23,227
Now to do this merge, you would enter here a commit message,

28
00:01:23,227 --> 00:01:27,187
Merge latest changes from master.

29
00:01:27,187 --> 00:01:31,167
And then you commit and you have actually the merge commit.

30
00:01:31,167 --> 00:01:33,147
But instead of doing this,

31
00:01:33,147 --> 00:01:37,187
let's click here Abort to undo all the changes from the merge.

32
00:01:37,187 --> 00:01:39,237
And let's remove that message here.

33
00:01:39,237 --> 00:01:41,237
Now let's go back to the Branches page.

34
00:01:41,237 --> 00:01:47,187
Instead of doing a merge here, let's click, this time, on Rebase.

35
00:01:47,187 --> 00:01:50,147
Now you can rebase here the current branch

36
00:01:50,147 --> 00:01:53,217
feature/coffeeShopCommands onto another branch.

37
00:01:53,217 --> 00:01:57,207
We want to rebase our feature branch onto master.

38
00:01:57,207 --> 00:02:04,207
Let's click now on Rebase, and you can see here, it will replay all the commits.

39
00:02:04,207 --> 00:02:06,167
Now the rebase was done.

40
00:02:06,167 --> 00:02:08,167
Let's go to the Changes page.

41
00:02:08,167 --> 00:02:10,177
We don't have any changes.

42
00:02:10,177 --> 00:02:15,207
Visual Studio automatically replayed the commits, and there were no conflicts.

43
00:02:15,207 --> 00:02:17,207
If we would have had conflicts,

44
00:02:17,207 --> 00:02:22,157
we would have seen a message like when we get conflicts with a merge.

45
00:02:22,157 --> 00:02:26,207
In a rebase, you solve the conflicts in the same way like in a merge.

46
00:02:26,207 --> 00:02:31,147
So now let's click here on the branch again to go back to the Branches page.

47
00:02:31,147 --> 00:02:33,237
Now let's right-click on this coffeeShopCommands branch,

48
00:02:33,237 --> 00:02:36,227
and let's take a look at the history.

49
00:02:36,227 --> 00:02:40,167
You can see now, it looks like our two commits,

50
00:02:40,167 --> 00:02:45,353
Handle coffee shop commands and Introduce command handlers happened after

51
00:02:45,353 --> 00:02:49,187
Julia has implemented her PaperCupsInStock feature,

52
00:02:49,187 --> 00:02:52,177
but in fact, we did these two commits before,

53
00:02:52,177 --> 00:02:56,207
but now these are new commits with new commit IDs.

54
00:02:56,207 --> 00:03:01,003
The rebase just took this current commit from the master branch and it

55
00:03:01,003 --> 00:03:05,197
replayed our two commits from the feature branch on top of it.

56
00:03:05,197 --> 00:03:08,237
This leads to a very clean structure here in our branch.

57
00:03:08,237 --> 00:03:11,207
And we don't have the merge commit.

58
00:03:11,207 --> 00:03:15,293
Now let's go to the Synchronization page to push our

59
00:03:15,293 --> 00:03:17,187
changes to the remote repository.

60
00:03:17,187 --> 00:03:21,207
So let's go to Team Explorer and let's select here Sync.

61
00:03:21,207 --> 00:03:26,157
You can see, we are on our feature/coffeeShopCommands branch.

62
00:03:26,157 --> 00:03:28,197
We have four outgoing commits,

63
00:03:28,197 --> 00:03:32,540
the two commits from Julia and our two commits to handle the coffee

64
00:03:32,540 --> 00:03:36,167
shop commands and to introduce the command handlers.

65
00:03:36,167 --> 00:03:38,167
Then there are two incoming commits,

66
00:03:38,167 --> 00:03:42,167
Handle coffee shop commands and Introduce command handlers.

67
00:03:42,167 --> 00:03:45,217
This might be a bit confusing, but what happened?

68
00:03:45,217 --> 00:03:49,237
We have pushed these two commits already to the remote repository,

69
00:03:49,237 --> 00:03:54,363
and now we repeated them as part of a rebase so they got

70
00:03:54,363 --> 00:03:57,177
new commit IDs in our local repository.

71
00:03:57,177 --> 00:03:59,828
So they are different commits than the two commits that

72
00:03:59,828 --> 00:04:02,237
you see here from the remote repository.

73
00:04:02,237 --> 00:04:04,187
Let's double-click, for example,

74
00:04:04,187 --> 00:04:08,217
this Introduce command handlers commit from the remote repository.

75
00:04:08,217 --> 00:04:13,167
Here you can see the commit ID 5098, and so on.

76
00:04:13,167 --> 00:04:14,310
Now let's go back,

77
00:04:14,310 --> 00:04:16,767
and let's double-click the Introduce command handlers

78
00:04:16,767 --> 00:04:19,207
commit from our local repository.

79
00:04:19,207 --> 00:04:23,217
Here you can see the commit ID 1f25, and so on.

80
00:04:23,217 --> 00:04:26,147
So it's a different commit.

81
00:04:26,147 --> 00:04:29,227
Now what you want to do in this case, if you have already pushed commit,

82
00:04:29,227 --> 00:04:32,897
you want to overwrite the commits in the remote repository

83
00:04:32,897 --> 00:04:35,187
with the commits that you have locally.

84
00:04:35,187 --> 00:04:39,157
And to do this, you need to do a force push.

85
00:04:39,157 --> 00:04:43,147
So let's just click here on Push, and let's see what happens.

86
00:04:43,147 --> 00:04:46,187
As you can see in the Output window, we got an error.

87
00:04:46,187 --> 00:04:48,923
Updates were rejected because the tip of your current

88
00:04:48,923 --> 00:04:52,217
branch is behind its remote counterpart.

89
00:04:52,217 --> 00:04:55,177
What you can do now is a force push,

90
00:04:55,177 --> 00:04:58,217
but you have to explicitly turn this on in the settings.

91
00:04:58,217 --> 00:05:02,207
So let's go to the Settings, let's click here on Global Settings,

92
00:05:02,207 --> 00:05:06,187
and let's check here this option Enable push-force.

93
00:05:06,187 --> 00:05:08,217
And let's click on Update.

94
00:05:08,217 --> 00:05:11,217
Now let's go back to the Synchronization page.

95
00:05:11,217 --> 00:05:15,669
Now you can force to push these four commits to the remote

96
00:05:15,669 --> 00:05:18,227
repository and to overwrite these two commits.

97
00:05:18,227 --> 00:05:20,237
But if you do such a force push,

98
00:05:20,237 --> 00:05:25,187
you should inform other developers that might work on that branch.

99
00:05:25,187 --> 00:05:28,783
Because imagine they could have these two commits already locally,

100
00:05:28,783 --> 00:05:31,207
and they build up on these two commits,

101
00:05:31,207 --> 00:05:35,167
and now you just overwrite them with your local commits.

102
00:05:35,167 --> 00:05:38,187
This can lead to ugly side effects on their sides.

103
00:05:38,187 --> 00:05:39,534
But in this case,

104
00:05:39,534 --> 00:05:44,207
Thomas is the only developer on that feature/coffeeShopCommands branch,

105
00:05:44,207 --> 00:05:47,974
so it's fine to force push these four commits to the remote

106
00:05:47,974 --> 00:05:51,187
repository and to overwrite these two commits.

107
00:05:51,187 --> 00:05:55,167
Let's do this now and let's click here on Push.

108
00:05:55,167 --> 00:05:59,187
Now you can see the same message that we just saw in the Output window.

109
00:05:59,187 --> 00:06:02,207
This branch is behind its remote counterpart.

110
00:06:02,207 --> 00:06:06,237
Visual Studio says it cannot be pushed without forcing the operation.

111
00:06:06,237 --> 00:06:10,157
Would you like to overwrite the remote commits?

112
00:06:10,157 --> 00:06:15,187
Yes, actually, we want to overwrite these two commits with these four commits.

113
00:06:15,187 --> 00:06:17,167
So let's do the force push.

114
00:06:17,167 --> 00:06:19,227
Let's click here on Yes.

115
00:06:19,227 --> 00:06:24,609
Now the changes were successfully pushed to the remote

116
00:06:24,609 --> 00:06:26,197
feature/coffeeShopCommands branch.

117
00:06:26,197 --> 00:06:28,237
Now let's just go back to the Settings page.

118
00:06:28,237 --> 00:06:30,227
Let's go to the Global Settings,

119
00:06:30,227 --> 00:06:34,177
and let's uncheck this Enable push-force setting again.

120
00:06:34,177 --> 00:06:36,197
All right, so now we pushed, actually,

121
00:06:36,197 --> 00:06:41,147
this structure to our remote feature/coffeeShopCommands branch.

122
00:06:41,147 --> 00:06:44,187
It includes the commits from Julia, and she can review this branch,

123
00:06:44,187 --> 00:06:46,227
and she can merge it then to master,

124
00:06:46,227 --> 00:06:49,237
but if we want that Julia matches that branch to master,

125
00:06:49,237 --> 00:06:52,187
we can send her out a pull request.

126
00:06:52,187 --> 00:07:00,000
You will learn how to do this in the next module. Now let's wrap up what you have learned in this module.

