1
00:00:01,604 --> 00:00:02,584
In this demonstration,

2
00:00:02,584 --> 00:00:06,067
we will continue to work on the feature branch

3
00:00:06,067 --> 00:00:08,544
coffeeShopCommands with the user Thomas.

4
00:00:08,544 --> 00:00:11,574
Let's switch to Visual Studio.

5
00:00:11,574 --> 00:00:14,614
As you can see, we work here as user Thomas.

6
00:00:14,614 --> 00:00:20,534
In Team Explorer, let's click here on Branches to navigate to the Branches page.

7
00:00:20,534 --> 00:00:24,584
Here you can see that we are on the feature coffeeShopCommands branch.

8
00:00:24,584 --> 00:00:27,554
You can also see this down here in the status bar.

9
00:00:27,554 --> 00:00:32,604
As you know, in the meantime, Julia has made commits to the master branch,

10
00:00:32,604 --> 00:00:36,624
but as we are here with the user Thomas on this coffeeShopCommands branch,

11
00:00:36,624 --> 00:00:39,604
we are not affected by these commits.

12
00:00:39,604 --> 00:00:42,574
We can just continue to work on our feature.

13
00:00:42,574 --> 00:00:47,534
As you can see, I have opened here already the Program.cs file.

14
00:00:47,534 --> 00:00:51,028
You might remember we have implemented here this else block with the

15
00:00:51,028 --> 00:00:54,604
user Thomas where we handled the coffee shop commands.

16
00:00:54,604 --> 00:01:00,544
But the whole Program.cs file got a bit big, so let's refactor our code.

17
00:01:00,544 --> 00:01:05,604
Then we select all the statements in this else block, and let's press Ctrl+X.

18
00:01:05,604 --> 00:01:09,614
Let's create here a variable, and let's call it commandHandler.

19
00:01:09,614 --> 00:01:15,554
Let's initialize it with a new CoffeeShopCommandHandler instance,

20
00:01:15,554 --> 00:01:19,265
and that instance takes the coffeeShops list and also

21
00:01:19,265 --> 00:01:21,614
the line that the user has entered.

22
00:01:21,614 --> 00:01:25,352
Then we press Ctrl+dot to generate this

23
00:01:25,352 --> 00:01:27,594
CoffeeShopCommandHandler class in a new file.

24
00:01:27,594 --> 00:01:29,604
Now let's use this commandHandler instance,

25
00:01:29,604 --> 00:01:33,554
and let's call the HandleCommand method.

26
00:01:33,554 --> 00:01:37,047
Let's press Ctrl+dot again to generate this method in

27
00:01:37,047 --> 00:01:38,624
the CoffeeShopCommandHandler class.

28
00:01:38,624 --> 00:01:41,564
Now let's go to the Solution Explorer.

29
00:01:41,564 --> 00:01:44,624
Here you can see this new CoffeeShopCommandHandler.cs file.

30
00:01:44,624 --> 00:01:46,594
Let's double-click it.

31
00:01:46,594 --> 00:01:50,624
Visual Studio has created this constructor for us that takes the coffee shops

32
00:01:50,624 --> 00:01:54,594
and the line that the user has entered on the command line.

33
00:01:54,594 --> 00:01:58,554
Both parameters are stored in private fields.

34
00:01:58,554 --> 00:02:01,534
Then you can see here, the HandleCommand method.

35
00:02:01,534 --> 00:02:02,614
Let's make it public.

36
00:02:02,614 --> 00:02:04,534
Now in this method,

37
00:02:04,534 --> 00:02:07,322
let's paste the logic that we have cut from the Program.cs

38
00:02:07,322 --> 00:02:10,544
file to handle the coffee shop commands.

39
00:02:10,544 --> 00:02:13,338
Let me put the cursor here on the Where method and let's press

40
00:02:13,338 --> 00:02:16,554
Ctrl+dot to add a using for System.Linq.

41
00:02:16,554 --> 00:02:20,584
Now when I scroll down, you can see we don't have any errors.

42
00:02:20,584 --> 00:02:22,624
Let's go back to the Program.cs file.

43
00:02:22,624 --> 00:02:25,574
This looks now much cleaner.

44
00:02:25,574 --> 00:02:28,574
Now let's do the same to handle the head command.

45
00:02:28,574 --> 00:02:33,594
Let's also cut this code here, and let's create a commandHandler variable.

46
00:02:33,594 --> 00:02:38,544
And let's initialize it with a new HelpCommandHandler instance.

47
00:02:38,544 --> 00:02:41,574
That constructor just takes the coffee shops.

48
00:02:41,574 --> 00:02:45,574
Then we press Ctrl+dot to generate this class in a new file.

49
00:02:45,574 --> 00:02:47,544
Now on this commandHandler,

50
00:02:47,544 --> 00:02:52,624
let's call also a HandleCommand method and let's press Ctrl+dot to generate it.

51
00:02:52,624 --> 00:02:56,584
Now let me right-click this class and let's Go To Definition.

52
00:02:56,584 --> 00:03:00,085
Let's paste the code that we cut from the Program.cs

53
00:03:00,085 --> 00:03:02,604
file into the HandleCommand method,

54
00:03:02,604 --> 00:03:06,544
and let's also make this HandleCommand method public.

55
00:03:06,544 --> 00:03:08,417
And here we don't need the dollar sign if we

56
00:03:08,417 --> 00:03:11,534
concatenate the string by using the plus.

57
00:03:11,534 --> 00:03:15,554
But let's keep the dollar sign and let's use an interpolated string here.

58
00:03:15,554 --> 00:03:19,604
Now we have two command handlers, and both have a HandleCommand method.

59
00:03:19,604 --> 00:03:23,494
We can optimize the code in the Program.cs file even further if we

60
00:03:23,494 --> 00:03:26,574
have an interface for both command handlers.

61
00:03:26,574 --> 00:03:29,564
So let me put the cursor on this HelpCommandHandler class,

62
00:03:29,564 --> 00:03:33,614
and let's press Ctrl+dot to extract an interface.

63
00:03:33,614 --> 00:03:37,534
Let's call the interface ICommandHandler,

64
00:03:37,534 --> 00:03:39,584
and let's use that HandleCommand method.

65
00:03:39,584 --> 00:03:40,624
Let's click OK.

66
00:03:40,624 --> 00:03:44,614
Now you see the HelpCommandHandler class implements this interface.

67
00:03:44,614 --> 00:03:48,604
The interface is now also part of our command line tool.

68
00:03:48,604 --> 00:03:53,534
Let's go to the CoffeeShopCommandHandler and let's scroll up,

69
00:03:53,534 --> 00:03:55,614
and let's also implement the interface here,

70
00:03:55,614 --> 00:03:57,604
ICommandHandler.

71
00:03:57,604 --> 00:04:01,594
As you know, this class has already here a HandleCommand method.

72
00:04:01,594 --> 00:04:04,564
Now let's go back to the Program.cs file.

73
00:04:04,564 --> 00:04:06,624
Here we can optimize our code now.

74
00:04:06,624 --> 00:04:11,584
We can create here before this if statement an ICommandHandler variable,

75
00:04:11,584 --> 00:04:13,574
let's call it commandHandler,

76
00:04:13,574 --> 00:04:17,554
and then we just assign the command handlers to that variable.

77
00:04:17,554 --> 00:04:20,594
This means we can call this HandleCommand method

78
00:04:20,594 --> 00:04:24,604
just once after this whole block.

79
00:04:24,604 --> 00:04:27,584
And of course here, I need a semicolon.

80
00:04:27,584 --> 00:04:32,544
Now we can even optimize it further by using the conditional operator.

81
00:04:32,544 --> 00:04:33,554
So let's do this.

82
00:04:33,554 --> 00:04:36,534
Let's initialize the variable directly here,

83
00:04:36,534 --> 00:04:40,624
and let's check if the string that was entered by the user equals help,

84
00:04:40,624 --> 00:04:42,594
and if that's the case,

85
00:04:42,594 --> 00:04:47,754
then we just use a new HelpCommandHandler and else we

86
00:04:47,754 --> 00:04:50,594
use a new CoffeeShopCommandHandler.

87
00:04:50,594 --> 00:04:51,614
Now when I hover this,

88
00:04:51,614 --> 00:04:54,604
you can see there is no implicit conversion between

89
00:04:54,604 --> 00:04:57,574
HelpCommandHandler and CoffeeShopCommandHandler.

90
00:04:57,574 --> 00:05:02,554
Let's solve this by writing here explicitly as ICommandHandler.

91
00:05:02,554 --> 00:05:05,624
And let's use here, instead of the interface, the var keyword.

92
00:05:05,624 --> 00:05:05,998
Great!

93
00:05:05,998 --> 00:05:08,614
Now I'm really happy with this code.

94
00:05:08,614 --> 00:05:12,594
Let's run the application and let's see if it still works.

95
00:05:12,594 --> 00:05:16,564
Let's type in help, and we can see the available coffee shop commands.

96
00:05:16,564 --> 00:05:20,604
Let's type in, for example, Freiburg, and we can see in Freiburg,

97
00:05:20,604 --> 00:05:24,604
we have 23 kg of coffee beans in stock.

98
00:05:24,604 --> 00:05:25,098
Great!

99
00:05:25,098 --> 00:05:28,554
Let's enter quit to exit the application.

100
00:05:28,554 --> 00:05:32,594
Now the user Thomas has refactored his code and he is done with this feature.

101
00:05:32,594 --> 00:05:36,584
Down here in the status bar, we can see that we have four changes.

102
00:05:36,584 --> 00:05:40,624
Let's click on this to navigate to the Changes page of Team Explorer.

103
00:05:40,624 --> 00:05:43,544
Now let's enter here a commit message.

104
00:05:43,544 --> 00:05:47,534
Let's write here, Introduce command handlers,

105
00:05:47,534 --> 00:05:50,604
and let's select from the drop-down Commit All and Push.

106
00:05:50,604 --> 00:05:52,614
Now you see here the outgoing commit,

107
00:05:52,614 --> 00:05:58,544
and now we successfully pushed to the remote branch feature/coffeeShopCommands.

108
00:05:58,544 --> 00:06:01,564
Now we did a lot of changes with the user Thomas.

109
00:06:01,564 --> 00:06:05,454
I think it would be good if Julia could review our feature

110
00:06:05,454 --> 00:06:08,534
branch with the new coffee shop commands.

111
00:06:08,534 --> 00:06:09,574
But for such a review,

112
00:06:09,574 --> 00:06:14,554
we should have the latest commits of the master branch in our feature branch.

113
00:06:14,554 --> 00:06:17,624
So let's check if there are changes on the master branch.

114
00:06:17,624 --> 00:06:19,584
Let's go to the Branches page,

115
00:06:19,584 --> 00:06:23,564
and let's double-click on master to check out the master branch.

116
00:06:23,564 --> 00:06:28,574
Now let's go to the Synchronization page, and let's click here on Fetch.

117
00:06:28,574 --> 00:06:32,673
The user Thomas can see now that Julia has made two

118
00:06:32,673 --> 00:06:34,554
commits on the master branch.

119
00:06:34,554 --> 00:06:37,534
She added the PaperCupsInStock property,

120
00:06:37,534 --> 00:06:41,534
and then she merged her feature branch into the master branch.

121
00:06:41,534 --> 00:06:44,458
Now let's click on Pull to pull these two commits from the

122
00:06:44,458 --> 00:06:47,554
remote repository into our local master branch.

123
00:06:47,554 --> 00:06:51,544
Now we have the two commits from Julia in our local master branch,

124
00:06:51,544 --> 00:06:54,614
but we don't have them in the feature/coffeeShopCommands branch.

125
00:06:54,614 --> 00:06:57,324
Let me show you in the next clip how you can bring these

126
00:06:57,324 --> 00:07:05,000
two commits from Julia from the master branch to the feature/coffeeShopCommands branch.

