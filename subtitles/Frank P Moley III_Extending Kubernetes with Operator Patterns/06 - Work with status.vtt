WEBVTT
1
00:00:00.005 --> 00:00:01.009
- [Instructor] Having a distinct status

2
00:00:01.009 --> 00:00:05.003
on a custom resource is very valuable when doing operations,

3
00:00:05.003 --> 00:00:09.003
especially within the CLI and using Kube Cuddle.

4
00:00:09.003 --> 00:00:12.002
By leveraging a status, it makes the operational integrity

5
00:00:12.002 --> 00:00:14.001
of the system much more clear

6
00:00:14.001 --> 00:00:17.001
for the operator of that system.

7
00:00:17.001 --> 00:00:21.006
So let's take a look at how to add status to our CRD.

8
00:00:21.006 --> 00:00:22.008
The first thing that I want you to do

9
00:00:22.008 --> 00:00:26.008
is to go ahead and open up your api and your v1alpha

10
00:00:26.008 --> 00:00:30.003
and then your objstore_type.

11
00:00:30.003 --> 00:00:32.003
We're going to navigate up here to the top.

12
00:00:32.003 --> 00:00:35.008
And we are going to add a constant to this file.

13
00:00:35.008 --> 00:00:38.008
We're actually going to add four of them.

14
00:00:38.008 --> 00:00:45.002
So PENDING_STATE with a text of PENDING,

15
00:00:45.002 --> 00:00:49.001
CREATED_STATE with, as you might guess,

16
00:00:49.001 --> 00:00:53.003
a text of CREATED,

17
00:00:53.003 --> 00:00:59.005
CREATING_STATE with a text of CREATING.

18
00:00:59.005 --> 00:01:04.000
And the final one we're going to do is an ERROR_STATE

19
00:01:04.000 --> 00:01:06.006
and we will call that ERROR.

20
00:01:06.006 --> 00:01:08.009
All right. So now scroll down here a little bit

21
00:01:08.009 --> 00:01:13.001
to this ObjStoreStatus on line 44 now.

22
00:01:13.001 --> 00:01:14.008
We're going to delete all of these notes

23
00:01:14.008 --> 00:01:18.007
and we are going to simply put a value in here called State.

24
00:01:18.007 --> 00:01:21.001
And that State will be a string.

25
00:01:21.001 --> 00:01:22.005
And, of course, we need to do our json

26
00:01:22.005 --> 00:01:25.007
to say that this is a state element.

27
00:01:25.007 --> 00:01:28.000
Now, there's one more element that we need to do.

28
00:01:28.000 --> 00:01:30.008
We need to go to where we see these markers,

29
00:01:30.008 --> 00:01:31.009
as they're called,

30
00:01:31.009 --> 00:01:34.005
these markers are things to let the system know,

31
00:01:34.005 --> 00:01:35.004
Kubebuilder know,

32
00:01:35.004 --> 00:01:36.008
things that it needs to provide,

33
00:01:36.008 --> 00:01:38.008
such as RBAC and stuff like that.

34
00:01:38.008 --> 00:01:43.002
We're going to add a marker for Kubebuilder.

35
00:01:43.002 --> 00:01:45.001
And the marker that we are going to add

36
00:01:45.001 --> 00:01:58.000
is printcolumn:name="State",type=string

37
00:01:58.000 --> 00:02:00.004
and that's going to come from this JSONPath

38
00:02:00.004 --> 00:02:01.009
and that JSONPath.

39
00:02:01.009 --> 00:02:05.003
And this is the tick that is up by the one key

40
00:02:05.003 --> 00:02:08.005
if you're on a US keyboard, not the single quote.

41
00:02:08.005 --> 00:02:10.004
So this is just a tick.

42
00:02:10.004 --> 00:02:13.006
And it's a .status.state.

43
00:02:13.006 --> 00:02:15.004
And then we'll do that single take again.

44
00:02:15.004 --> 00:02:17.001
Now, let's talk about what we just did.

45
00:02:17.001 --> 00:02:21.003
So when you do a get command on the object store,

46
00:02:21.003 --> 00:02:24.000
you'll notice before we saw the name and then a time.

47
00:02:24.000 --> 00:02:27.007
What this is saying is I want you to print a column

48
00:02:27.007 --> 00:02:31.007
called state, and I want you to look into the actual CR,

49
00:02:31.007 --> 00:02:34.003
go to the status section,

50
00:02:34.003 --> 00:02:36.005
and look for the state element in there.

51
00:02:36.005 --> 00:02:40.002
And that's what I want you to display in the column itself.

52
00:02:40.002 --> 00:02:41.009
So that will give us some more visibility

53
00:02:41.009 --> 00:02:44.001
while we're going through the Kube API

54
00:02:44.001 --> 00:02:47.000
of where we're at in things.

55
00:02:47.000 --> 00:02:48.004
So the next thing that we need to do

56
00:02:48.004 --> 00:02:50.009
is we need actually see the state in action.

57
00:02:50.009 --> 00:02:52.001
We're going to write a little bit

58
00:02:52.001 --> 00:02:54.000
of throwaway code and that's okay

59
00:02:54.000 --> 00:02:56.006
because we're are trying to build this system out.

60
00:02:56.006 --> 00:02:59.007
So let's go into our object store controller,

61
00:02:59.007 --> 00:03:01.005
and in our object store controller,

62
00:03:01.005 --> 00:03:03.002
we're going to put this throwaway code

63
00:03:03.002 --> 00:03:05.004
in a method called reconcile.

64
00:03:05.004 --> 00:03:07.004
And we're going to talk a lot about reconcile,

65
00:03:07.004 --> 00:03:09.009
but for right now, just kind of follow along

66
00:03:09.009 --> 00:03:11.009
so I can show you what we're going to build.

67
00:03:11.009 --> 00:03:15.000
So we're going to create an instance of our log.

68
00:03:15.000 --> 00:03:17.000
And now we are going to grab our instance

69
00:03:17.000 --> 00:03:21.002
by creating a reference to it.

70
00:03:21.002 --> 00:03:26.003
So this is going to be cninfv1alpha.ObjStore.

71
00:03:26.003 --> 00:03:27.005
And now once we have that,

72
00:03:27.005 --> 00:03:32.003
we can do an if err, assign that from r.Get.

73
00:03:32.003 --> 00:03:36.009
And r.Get will call a built in dynamic Kubernetes client

74
00:03:36.009 --> 00:03:40.002
that you get as part of the structure.

75
00:03:40.002 --> 00:03:42.008
So to that, we need to pass our context.

76
00:03:42.008 --> 00:03:46.002
And then we need to call in the NamespacedName.

77
00:03:46.002 --> 00:03:47.006
That is the only thing that we have,

78
00:03:47.006 --> 00:03:50.006
is the NamespacedName of the object that's coming in.

79
00:03:50.006 --> 00:03:52.000
We don't actually have the object

80
00:03:52.000 --> 00:03:53.007
so that's why we're loading it.

81
00:03:53.007 --> 00:03:55.003
And we're going to get an instance

82
00:03:55.003 --> 00:03:57.009
from the one that we created.

83
00:03:57.009 --> 00:04:01.008
And then we will do a nil check on err.

84
00:04:01.008 --> 00:04:02.009
And now we're down into the meat.

85
00:04:02.009 --> 00:04:04.006
So we're going to do a log.Error,

86
00:04:04.006 --> 00:04:07.008
and this is going to cause a problem, but that's okay.

87
00:04:07.008 --> 00:04:09.002
We're going to show you that problem

88
00:04:09.002 --> 00:04:11.003
so that you can understand what's going on.

89
00:04:11.003 --> 00:04:13.007
It will go away later.

90
00:04:13.007 --> 00:04:15.002
And once again, this is a great time

91
00:04:15.002 --> 00:04:17.009
for me to remind you that this is demo code,

92
00:04:17.009 --> 00:04:19.008
this is not production code.

93
00:04:19.008 --> 00:04:20.006
There's a reason

94
00:04:20.006 --> 00:04:22.006
that we're are doing things in certain ways,

95
00:04:22.006 --> 00:04:23.009
and sometimes it's simplicity,

96
00:04:23.009 --> 00:04:27.003
and sometimes it's just to show things off.

97
00:04:27.003 --> 00:04:29.009
In this case, it's I want to show something off.

98
00:04:29.009 --> 00:04:33.006
So we are going to return ctrl.Result,

99
00:04:33.006 --> 00:04:38.005
or client.IgnoreNotFound on the err.

100
00:04:38.005 --> 00:04:41.003
So if it's not found, we don't actually want to

101
00:04:41.003 --> 00:04:44.006
break the system, we just want to log that and move on.

102
00:04:44.006 --> 00:04:46.005
All right. So now that we have this,

103
00:04:46.005 --> 00:04:47.004
so now we're going to do a check.

104
00:04:47.004 --> 00:04:52.005
So if instant.Status.State is empty.

105
00:04:52.005 --> 00:04:55.007
So only if it's empty, what I want you to do here,

106
00:04:55.007 --> 00:05:00.007
is do an instant.Status.State =,

107
00:05:00.007 --> 00:05:03.008
and we are going to set to PENDING_STATE.

108
00:05:03.008 --> 00:05:07.007
Now, we're going to do an r.Status.Update.

109
00:05:07.007 --> 00:05:08.008
And this is important.

110
00:05:08.008 --> 00:05:11.001
We're updating the status and not the object,

111
00:05:11.001 --> 00:05:13.001
because the only thing we want to update here

112
00:05:13.001 --> 00:05:16.003
is the status itself, not the object.

113
00:05:16.003 --> 00:05:17.009
That's just part of doing this.

114
00:05:17.009 --> 00:05:19.003
There's times you update the object.

115
00:05:19.003 --> 00:05:21.003
There's times that you update the status.

116
00:05:21.003 --> 00:05:23.004
In this case, we're just updating the status.

117
00:05:23.004 --> 00:05:26.001
So that's all that we need to do to actually go test this.

118
00:05:26.001 --> 00:05:27.009
So let's jump into our terminal,

119
00:05:27.009 --> 00:05:29.008
and in our terminal, there's a few commands

120
00:05:29.008 --> 00:05:31.004
that we are going to execute.

121
00:05:31.004 --> 00:05:32.009
So the first thing that we're going to do

122
00:05:32.009 --> 00:05:35.003
is we are going to delete our crd,

123
00:05:35.003 --> 00:05:41.001
and it's called objectstores.cninf.lil.frankmoley,

124
00:05:41.001 --> 00:05:42.008
in my case, .com.

125
00:05:42.008 --> 00:05:44.004
If you don't remember the name of it,

126
00:05:44.004 --> 00:05:47.002
just go ahead and do a, get on the crd,

127
00:05:47.002 --> 00:05:48.005
find the name, and delete it.

128
00:05:48.005 --> 00:05:50.005
But I've now deleted that from there.

129
00:05:50.005 --> 00:05:52.003
So now I'm going to do a couple commands

130
00:05:52.003 --> 00:05:53.009
and I do these every time,

131
00:05:53.009 --> 00:05:55.009
even though I don't always have to,

132
00:05:55.009 --> 00:05:58.003
it's just habit because I don't want to ever forget

133
00:05:58.003 --> 00:06:00.000
the right one that I need to do.

134
00:06:00.000 --> 00:06:01.009
So I'm going to call make,

135
00:06:01.009 --> 00:06:05.008
and then I'm going to make the manifests,

136
00:06:05.008 --> 00:06:09.005
and just spell that right.

137
00:06:09.005 --> 00:06:13.004
And now I need to do a generate.

138
00:06:13.004 --> 00:06:17.000
And now I'm going to install to put the new instance

139
00:06:17.000 --> 00:06:19.008
of the crd back out there.

140
00:06:19.008 --> 00:06:22.009
And now I can run this thing.

141
00:06:22.009 --> 00:06:24.001
Now, I'm going to let this run, and we're going to look

142
00:06:24.001 --> 00:06:27.005
at some of the messages that come across.

143
00:06:27.005 --> 00:06:29.009
All right. So now I'm going to open up a new instance

144
00:06:29.009 --> 00:06:34.005
of my console and I'm going to go to the same location.

145
00:06:34.005 --> 00:06:39.005
So code for me, extending-kubernetes/cninf.

146
00:06:39.005 --> 00:06:40.008
Now, from here, I'm going to do

147
00:06:40.008 --> 00:06:47.002
a k apply - n lil -f config samples,

148
00:06:47.002 --> 00:06:49.003
and we are going to go ahead and apply that yaml.

149
00:06:49.003 --> 00:06:50.007
So now it has been applied.

150
00:06:50.007 --> 00:06:53.006
If I jump back over to the previous terminal window,

151
00:06:53.006 --> 00:06:55.007
you'll see that we've got the workers started.

152
00:06:55.007 --> 00:06:57.001
We don't have really any indication

153
00:06:57.001 --> 00:06:58.003
that we've done anything,

154
00:06:58.003 --> 00:07:02.005
but if we take a look at the object store,

155
00:07:02.005 --> 00:07:05.002
you'll see that its status pending.

156
00:07:05.002 --> 00:07:06.007
And the only way we would've done that

157
00:07:06.007 --> 00:07:09.002
is through that update command and the controller.

158
00:07:09.002 --> 00:07:11.001
Now, again, we're going to talk a lot more

159
00:07:11.001 --> 00:07:13.000
about the controllers later, but for now,

160
00:07:13.000 --> 00:07:15.000
this is the important thing to see

161
00:07:15.000 --> 00:07:16.004
is that we actually have updated

162
00:07:16.004 --> 00:07:19.009
this CR based on our controller.

163
00:07:19.009 --> 00:07:22.004
The last thing I want to do is I want to describe this element.

164
00:07:22.004 --> 00:07:30.006
So we will do a describe on ObjStore fpmlil-01 -n lil,

165
00:07:30.006 --> 00:07:33.008
and you can see that the timestamp of creation

166
00:07:33.008 --> 00:07:37.007
and the timestamp of update are the same

167
00:07:37.007 --> 00:07:39.006
because we haven't actually updated the object,

168
00:07:39.006 --> 00:07:42.003
but we have set the state to be pending,

169
00:07:42.003 --> 00:07:45.003
but all the rest of our fields maintain the same.

170
00:07:45.003 --> 00:07:47.000
So that's how you update status.

171
00:07:47.000 --> 00:07:48.006
And, obviously, you could go much further

172
00:07:48.006 --> 00:07:50.007
than this than just having one field,

173
00:07:50.007 --> 00:07:52.005
maybe you've got multiple status fields,

174
00:07:52.005 --> 00:07:55.000
but this gives you an idea of how to do that.

