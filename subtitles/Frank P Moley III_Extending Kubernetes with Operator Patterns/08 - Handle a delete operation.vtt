WEBVTT
1
00:00:00.004 --> 00:00:03.004
- [Instructor] Deletions to your CR can be detrimental

2
00:00:03.004 --> 00:00:07.000
to your system as a whole with remote resources.

3
00:00:07.000 --> 00:00:10.000
If you don't properly handle deletion flows,

4
00:00:10.000 --> 00:00:11.009
you could leave resources hanging around

5
00:00:11.009 --> 00:00:13.008
and those can be both a security risk

6
00:00:13.008 --> 00:00:16.006
as well as a financial risk for no reason.

7
00:00:16.006 --> 00:00:20.001
Enter into the picture finalizers.

8
00:00:20.001 --> 00:00:21.002
The first thing that I want to do

9
00:00:21.002 --> 00:00:25.001
is I want to utilize that env.list that we created last time.

10
00:00:25.001 --> 00:00:29.000
So we're going to jump in to our make file

11
00:00:29.000 --> 00:00:32.004
and we're going to go to where it says make run,

12
00:00:32.004 --> 00:00:34.004
which is right here on line 68,

13
00:00:34.004 --> 00:00:37.001
and we're going to make a change to line 70.

14
00:00:37.001 --> 00:00:42.008
What we're going to do is we're going to source our env.list

15
00:00:42.008 --> 00:00:44.003
and go run.

16
00:00:44.003 --> 00:00:45.009
So this way it'll do that sourcing

17
00:00:45.009 --> 00:00:48.001
every time we run this locally

18
00:00:48.001 --> 00:00:48.009
so that we're sure

19
00:00:48.009 --> 00:00:52.003
that we have our environment variables for AWS.

20
00:00:52.003 --> 00:00:56.000
Now once that is done, let's jump into our controller.

21
00:00:56.000 --> 00:00:58.000
And there's a few things that we need to do here

22
00:00:58.000 --> 00:00:59.000
in our controller.

23
00:00:59.000 --> 00:01:00.001
The first thing that we're going to do

24
00:01:00.001 --> 00:01:02.000
is we're going to change this constant

25
00:01:02.000 --> 00:01:04.005
to actually be multiple constants

26
00:01:04.005 --> 00:01:05.008
and the first one that we're going to create

27
00:01:05.008 --> 00:01:08.004
is we're going to create a constant called finalizer.

28
00:01:08.004 --> 00:01:10.001
And this is just a string

29
00:01:10.001 --> 00:01:12.004
but the string should make sense for your system.

30
00:01:12.004 --> 00:01:18.009
So I'm going to use objstores.cninf.lil.frankmole.com

31
00:01:18.009 --> 00:01:21.000
to match my domain.

32
00:01:21.000 --> 00:01:23.009
And then I'm going to call this finalizer.

33
00:01:23.009 --> 00:01:25.000
All right, now that that's done,

34
00:01:25.000 --> 00:01:28.004
let's drop down into our reconcile method

35
00:01:28.004 --> 00:01:30.008
and we are going to get rid of this error statement.

36
00:01:30.008 --> 00:01:33.005
We saw before when we deleted the resource

37
00:01:33.005 --> 00:01:34.007
that we got an error

38
00:01:34.007 --> 00:01:37.006
and that's because every update, even a delete

39
00:01:37.006 --> 00:01:40.009
will trigger the reconcile function to be called.

40
00:01:40.009 --> 00:01:43.006
And what happens is, is once the delete processes,

41
00:01:43.006 --> 00:01:46.006
there is no CR for this to be read,

42
00:01:46.006 --> 00:01:48.004
so it actually will error.

43
00:01:48.004 --> 00:01:50.008
I don't really like this aspect of Cube Builder.

44
00:01:50.008 --> 00:01:52.007
It's just something you have to deal with.

45
00:01:52.007 --> 00:01:54.008
So let's get rid of this error statement

46
00:01:54.008 --> 00:01:57.009
and we'll just rely on it returning a error

47
00:01:57.009 --> 00:02:00.001
where it ignores it if it's not found

48
00:02:00.001 --> 00:02:03.004
and that's the proper way to handle it in this flow.

49
00:02:03.004 --> 00:02:05.007
So now let's drop down below

50
00:02:05.007 --> 00:02:07.006
and we are going to make a code change here

51
00:02:07.006 --> 00:02:16.001
to say if instance.ObjectMetadata.DeletionTimestamp.IsZero.

52
00:02:16.001 --> 00:02:20.001
So what this is saying is if the deletion stamp is zero

53
00:02:20.001 --> 00:02:23.001
and when that happens is anytime there's an update

54
00:02:23.001 --> 00:02:27.000
to the CR or a creation, it will be zero.

55
00:02:27.000 --> 00:02:30.005
Once you do a delete, until that CR is deleted,

56
00:02:30.005 --> 00:02:32.002
it has a deletion timestamp

57
00:02:32.002 --> 00:02:35.008
from when you called cube cuddle delete in the CLI.

58
00:02:35.008 --> 00:02:39.005
So any other time, it's going to be zero

59
00:02:39.005 --> 00:02:43.000
but once it's called out for deletion, it will be a value.

60
00:02:43.000 --> 00:02:46.004
So we'll go ahead and leave our pending state in here.

61
00:02:46.004 --> 00:02:47.007
But now what we're going to do

62
00:02:47.007 --> 00:02:53.000
is we are going to call controllerutill.AddFinalizer

63
00:02:53.000 --> 00:02:57.004
and we pass that the instance and our finalizer string.

64
00:02:57.004 --> 00:03:02.004
And now we are going to do if err := r.Update

65
00:03:02.004 --> 00:03:03.009
and we are not updating the status here.

66
00:03:03.009 --> 00:03:07.002
We're actually updating the CR.

67
00:03:07.002 --> 00:03:11.008
So we will call update by itself

68
00:03:11.008 --> 00:03:14.004
and error does not equal nil.

69
00:03:14.004 --> 00:03:18.003
So as long as that update processed correctly,

70
00:03:18.003 --> 00:03:26.008
we will then rephrase.

71
00:03:26.008 --> 00:03:28.004
Error equals nil.

72
00:03:28.004 --> 00:03:30.007
So as long as the update processes correctly,

73
00:03:30.007 --> 00:03:33.009
we won't get here, but if it does not process correctly,

74
00:03:33.009 --> 00:03:41.004
we will simply return the ctrl.result and pass the error.

75
00:03:41.004 --> 00:03:43.009
Now, after this, we need to put an else block

76
00:03:43.009 --> 00:03:46.001
and this else block is going to be what happens

77
00:03:46.001 --> 00:03:47.009
when delete is called.

78
00:03:47.009 --> 00:03:51.000
And for now, we're just going to put a log message out here,

79
00:03:51.000 --> 00:03:52.007
log.info

80
00:03:52.007 --> 00:03:55.006
and we will simply say that we are in the deletion flow.

81
00:03:55.006 --> 00:03:57.002
All right, so now let's run this.

82
00:03:57.002 --> 00:03:59.004
So we're going to jump into our terminal.

83
00:03:59.004 --> 00:04:00.002
Okay, so the first thing we're going to do

84
00:04:00.002 --> 00:04:01.009
is we're going to do a make install,

85
00:04:01.009 --> 00:04:05.003
just because I want to make sure everything is out there.

86
00:04:05.003 --> 00:04:08.000
We will do a make run.

87
00:04:08.000 --> 00:04:11.002
And because we provided that environment,

88
00:04:11.002 --> 00:04:14.000
we're actually passing those into our running operation.

89
00:04:14.000 --> 00:04:16.006
So we're not going to get an error out of the main method

90
00:04:16.006 --> 00:04:18.008
because we've got those values

91
00:04:18.008 --> 00:04:20.009
for the AWS secret credentials.

92
00:04:20.009 --> 00:04:23.004
So our controller is now running.

93
00:04:23.004 --> 00:04:29.003
Let's pop open a new terminal and we will go to our code.

94
00:04:29.003 --> 00:04:32.009
Obviously, this is where you are running yours from.

95
00:04:32.009 --> 00:04:38.000
Let's go ahead and apply to our name space, our file

96
00:04:38.000 --> 00:04:40.009
and remember, it's in config/samples.

97
00:04:40.009 --> 00:04:42.006
Excellent, so it has been created

98
00:04:42.006 --> 00:04:47.009
and we can do a k get ObjStore -n lil

99
00:04:47.009 --> 00:04:49.000
and you'll see, we've got it there.

100
00:04:49.000 --> 00:04:50.000
It's in a pending state

101
00:04:50.000 --> 00:04:52.002
which is what we would expect it to be in.

102
00:04:52.002 --> 00:04:59.000
So let's go ahead and describe this element now.

103
00:04:59.000 --> 00:05:02.002
And you can see that we have a finalizer defined here,

104
00:05:02.002 --> 00:05:03.009
towards the middle of the screen.

105
00:05:03.009 --> 00:05:05.007
That's what we want to see.

106
00:05:05.007 --> 00:05:06.009
Now here's where it gets interesting.

107
00:05:06.009 --> 00:05:11.005
If I try to delete this,

108
00:05:11.005 --> 00:05:13.008
what's going to happen is is it's going to hang.

109
00:05:13.008 --> 00:05:15.005
I'm actually hanging right now

110
00:05:15.005 --> 00:05:16.007
and the reason I'm hanging

111
00:05:16.007 --> 00:05:18.006
is because there's a finalizer on it

112
00:05:18.006 --> 00:05:20.004
and Kubernetes is saying, wait a minute,

113
00:05:20.004 --> 00:05:21.002
you can't delete it.

114
00:05:21.002 --> 00:05:23.002
The finalizer hasn't been released.

115
00:05:23.002 --> 00:05:26.003
So the only way to get out of this is to control+C

116
00:05:26.003 --> 00:05:29.006
and you'll see if we go and look at it, it's still there

117
00:05:29.006 --> 00:05:30.009
because we can't delete it.

118
00:05:30.009 --> 00:05:32.008
There's no way for that to happen.

119
00:05:32.008 --> 00:05:37.003
So let's stop our process and let's jump back into our IDE.

120
00:05:37.003 --> 00:05:40.005
So let's go ahead and in our deletion flow,

121
00:05:40.005 --> 00:05:46.000
we're going to do a call to controllerutil.RemoveFinalizer.

122
00:05:46.000 --> 00:05:49.001
And once again, we will pass our instance

123
00:05:49.001 --> 00:05:50.007
and then our finalizer string,

124
00:05:50.007 --> 00:05:52.002
and this will remove the finalizer.

125
00:05:52.002 --> 00:05:54.009
So this is only happening in the delete flow.

126
00:05:54.009 --> 00:05:57.001
Now, what you would do is you would do this

127
00:05:57.001 --> 00:06:00.003
when you are done with all of your delete actions

128
00:06:00.003 --> 00:06:03.009
and that will allow Kubernetes to delete the object.

129
00:06:03.009 --> 00:06:07.001
So once again, we need to update this

130
00:06:07.001 --> 00:06:11.007
and check if an error condition happened.

131
00:06:11.007 --> 00:06:15.008
And if so, we will simply return,

132
00:06:15.008 --> 00:06:18.003
and our error,

133
00:06:18.003 --> 00:06:20.006
and now we are ready to run this again.

134
00:06:20.006 --> 00:06:23.007
So let's go back and run this.

135
00:06:23.007 --> 00:06:25.003
So I will run.

136
00:06:25.003 --> 00:06:26.007
Now, what's going to be interesting here,

137
00:06:26.007 --> 00:06:30.000
and this is what I was talking about with the delete value,

138
00:06:30.000 --> 00:06:32.007
so everything is running, you'll see this last log line here

139
00:06:32.007 --> 00:06:34.006
that the deletion flow happened.

140
00:06:34.006 --> 00:06:36.007
And that's because that instance of the CR

141
00:06:36.007 --> 00:06:38.005
had already been marked for deletion

142
00:06:38.005 --> 00:06:41.004
and now we've got code in here that will remove it

143
00:06:41.004 --> 00:06:43.005
because it removes the finalizer.

144
00:06:43.005 --> 00:06:46.002
So let's go back over here to our other terminal window

145
00:06:46.002 --> 00:06:48.008
and prove to you that indeed it's gone.

146
00:06:48.008 --> 00:06:52.000
We can now apply it once again.

147
00:06:52.000 --> 00:06:53.008
It's now been created.

148
00:06:53.008 --> 00:06:57.003
If we look at it, it's in a pending state.

149
00:06:57.003 --> 00:06:58.007
We haven't done anything with it yet.

150
00:06:58.007 --> 00:07:02.004
And now if I delete it, it's gone.

151
00:07:02.004 --> 00:07:03.008
I'm no longer hanging.

152
00:07:03.008 --> 00:07:06.005
So that finalizer prevented you from deleting it

153
00:07:06.005 --> 00:07:07.009
until you were done with it.

154
00:07:07.009 --> 00:07:10.001
Now we're going to go get a little bit more code together

155
00:07:10.001 --> 00:07:13.000
so we can actually do some work.

