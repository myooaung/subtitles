WEBVTT
1
00:00:00.005 --> 00:00:01.009
- [Instructor] If you are taking this course,

2
00:00:01.009 --> 00:00:04.004
I assume you have experienced

3
00:00:04.004 --> 00:00:07.004
some real-world operations with Kubernetes,

4
00:00:07.004 --> 00:00:08.002
and as such,

5
00:00:08.002 --> 00:00:10.007
these operations will probably be seen

6
00:00:10.007 --> 00:00:12.008
as everyday things that you did,

7
00:00:12.008 --> 00:00:14.009
and that's kind of the point.

8
00:00:14.009 --> 00:00:16.007
With regards to Kubernetes.

9
00:00:16.007 --> 00:00:20.005
Let's talk about what operations generally are.

10
00:00:20.005 --> 00:00:22.007
Usually, at least at first,

11
00:00:22.007 --> 00:00:24.009
they're human tasks.

12
00:00:24.009 --> 00:00:28.002
Usually, human tasks that are repeatable.

13
00:00:28.002 --> 00:00:31.004
Meaning they tend to be highly automatable.

14
00:00:31.004 --> 00:00:34.007
Generally, they are about managing the service

15
00:00:34.007 --> 00:00:37.006
or set of services deployed to a run time.

16
00:00:37.006 --> 00:00:39.007
In this case, Kubernetes.

17
00:00:39.007 --> 00:00:41.004
Now management of services

18
00:00:41.004 --> 00:00:44.003
is a big and vague concept

19
00:00:44.003 --> 00:00:45.005
but that is on purpose

20
00:00:45.005 --> 00:00:47.007
because with Kubernetes operators,

21
00:00:47.007 --> 00:00:50.005
you can do almost any type of management

22
00:00:50.005 --> 00:00:52.003
you can think of.

23
00:00:52.003 --> 00:00:54.003
One common operator that we see

24
00:00:54.003 --> 00:00:56.003
is on service deployments.

25
00:00:56.003 --> 00:00:57.007
By leveraging what is called

26
00:00:57.007 --> 00:00:59.006
a custom resource definition

27
00:00:59.006 --> 00:01:00.009
or C R D.

28
00:01:00.009 --> 00:01:02.007
You can configure service,

29
00:01:02.007 --> 00:01:05.002
and allow for it to be installed.

30
00:01:05.002 --> 00:01:07.000
This is not only the use case

31
00:01:07.000 --> 00:01:08.009
of a Kubernetes operator,

32
00:01:08.009 --> 00:01:10.007
but is a very common use case

33
00:01:10.007 --> 00:01:12.008
that you will see in the wild,

34
00:01:12.008 --> 00:01:15.006
because oftentimes the standard pod

35
00:01:15.006 --> 00:01:18.001
or deployment isn't sufficient,

36
00:01:18.001 --> 00:01:21.001
for how we need to deploy our applications.

37
00:01:21.001 --> 00:01:23.001
Another common example is fixing

38
00:01:23.001 --> 00:01:24.006
what is broken,

39
00:01:24.006 --> 00:01:26.009
tasks like scaling can be controlled

40
00:01:26.009 --> 00:01:29.004
or configured via an operator,

41
00:01:29.004 --> 00:01:31.004
but scaling isn't the only thing

42
00:01:31.004 --> 00:01:32.006
you'll see resolution

43
00:01:32.006 --> 00:01:34.007
with on Kubernetes operators.

44
00:01:34.007 --> 00:01:36.006
Again, if you can dream it,

45
00:01:36.006 --> 00:01:38.008
and the feedback loop supports it,

46
00:01:38.008 --> 00:01:40.005
you can automate it.

47
00:01:40.005 --> 00:01:43.009
Ultimately, I look at operations as control.

48
00:01:43.009 --> 00:01:47.004
Controlling the good, the bad and the ugly.

49
00:01:47.004 --> 00:01:49.006
And again, specifically control

50
00:01:49.006 --> 00:01:51.007
of the Kubernetes environment.

51
00:01:51.007 --> 00:01:53.009
Things like controlling the flow of actions

52
00:01:53.009 --> 00:01:55.009
is a common pattern I have used

53
00:01:55.009 --> 00:01:57.009
for Kubernetes operators.

54
00:01:57.009 --> 00:02:00.005
Things like controlling the order resources

55
00:02:00.005 --> 00:02:03.003
come up when they're installed together

56
00:02:03.003 --> 00:02:06.007
is a prime example of controlling the flow.

57
00:02:06.007 --> 00:02:08.004
Another use of control comes from

58
00:02:08.004 --> 00:02:10.006
solving that which hasn't solved.

59
00:02:10.006 --> 00:02:11.009
And with software,

60
00:02:11.009 --> 00:02:14.009
we are talking about extending functionality.

61
00:02:14.009 --> 00:02:16.006
Every single developer

62
00:02:16.006 --> 00:02:18.009
who has used an API has said

63
00:02:18.009 --> 00:02:21.000
to him or herself at some point,

64
00:02:21.000 --> 00:02:24.006
"I sure wish this API did X."

65
00:02:24.006 --> 00:02:27.002
Operational control is at times

66
00:02:27.002 --> 00:02:29.006
about doing just this thing,

67
00:02:29.006 --> 00:02:32.004
making the tool again, Kubernetes.

68
00:02:32.004 --> 00:02:36.002
Do what you wish it did out of the box.

69
00:02:36.002 --> 00:02:38.003
Now we briefly talked about remediations

70
00:02:38.003 --> 00:02:41.003
in the form of errors, but with operations,

71
00:02:41.003 --> 00:02:44.001
we are not only focusing on error states,

72
00:02:44.001 --> 00:02:46.004
we want to control the entire life cycle

73
00:02:46.004 --> 00:02:49.009
of the application and remediate issues

74
00:02:49.009 --> 00:02:52.004
before they become a pain point.

75
00:02:52.004 --> 00:02:56.000
And that's sort of the utopia of the SRE role.

76
00:02:56.000 --> 00:02:58.006
And the grand gesture of control

77
00:02:58.006 --> 00:03:01.000
is outright modification.

78
00:03:01.000 --> 00:03:03.009
Again, every developer or operator has said

79
00:03:03.009 --> 00:03:05.002
to him or herself

80
00:03:05.002 --> 00:03:08.003
that something is done wrong and as such,

81
00:03:08.003 --> 00:03:09.009
it should be changed.

82
00:03:09.009 --> 00:03:13.000
No one knows your use cases like you do.

83
00:03:13.000 --> 00:03:13.009
And as such,

84
00:03:13.009 --> 00:03:17.004
sometimes you just need to change the behavior.

85
00:03:17.004 --> 00:03:18.004
And again, in this case,

86
00:03:18.004 --> 00:03:20.006
we're talking about Kubernetes.

87
00:03:20.006 --> 00:03:22.007
Now this again has been very vague,

88
00:03:22.007 --> 00:03:26.000
and again on purpose while we will focus

89
00:03:26.000 --> 00:03:29.009
on one very concise use case in this course.

90
00:03:29.009 --> 00:03:32.008
You as an experienced Kubernetes developer

91
00:03:32.008 --> 00:03:34.000
or operator,

92
00:03:34.000 --> 00:03:36.006
have your own very clear cases

93
00:03:36.006 --> 00:03:40.000
of operations that would fit into this course.

94
00:03:40.000 --> 00:03:42.000
That is what I'm hoping anyway

95
00:03:42.000 --> 00:03:44.001
that you can see what operations

96
00:03:44.001 --> 00:03:45.002
we are going to solve,

97
00:03:45.002 --> 00:03:47.007
and apply that to your use cases

98
00:03:47.007 --> 00:03:51.000
to make your team more efficient.

