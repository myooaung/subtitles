WEBVTT
1
00:00:00.005 --> 00:00:01.004
- [Instructor] There's a lot of code

2
00:00:01.004 --> 00:00:05.006
that isn't super important for learning the operator itself

3
00:00:05.006 --> 00:00:08.000
but that we're going to need for this course.

4
00:00:08.000 --> 00:00:10.005
Now, instead of having you watch me type the code

5
00:00:10.005 --> 00:00:12.002
and you trying to keep along,

6
00:00:12.002 --> 00:00:15.003
what I've done is I've provided all of the scaffolding code

7
00:00:15.003 --> 00:00:17.007
for you in the exercise files.

8
00:00:17.007 --> 00:00:20.002
And instead of having you just blindly accept that code,

9
00:00:20.002 --> 00:00:23.006
I want to walk through it, and explain what we're doing

10
00:00:23.006 --> 00:00:27.002
so you can continue to formulate in your mind the structure

11
00:00:27.002 --> 00:00:30.003
of the operator while at the same time saving your fingers

12
00:00:30.003 --> 00:00:32.008
and your ears to having to listen to me type

13
00:00:32.008 --> 00:00:35.007
through all of that code.

14
00:00:35.007 --> 00:00:37.009
So I'd like you to jump into your IDE

15
00:00:37.009 --> 00:00:40.008
and we're going to start in our objstore_controller

16
00:00:40.008 --> 00:00:43.009
in the cninf controller's directory.

17
00:00:43.009 --> 00:00:45.002
The first thing that I want you to notice here

18
00:00:45.002 --> 00:00:48.002
is on line 35, I've created a constant

19
00:00:48.002 --> 00:00:51.006
with a format name for a configMapName,

20
00:00:51.006 --> 00:00:53.003
and you'll understand why we're doing this here

21
00:00:53.003 --> 00:00:54.007
in a little bit.

22
00:00:54.007 --> 00:00:57.003
On line 41, I've added an instance

23
00:00:57.003 --> 00:01:02.006
of the S3 service to our ObjStoreReconciler.

24
00:01:02.006 --> 00:01:05.002
This is sort of how I deal with clients

25
00:01:05.002 --> 00:01:07.000
that are used in more than one place

26
00:01:07.000 --> 00:01:08.005
and I thought I'd bring that here

27
00:01:08.005 --> 00:01:09.009
even though this is the only place

28
00:01:09.009 --> 00:01:11.000
that we're using the client.

29
00:01:11.000 --> 00:01:12.000
I want to create it once

30
00:01:12.000 --> 00:01:14.004
and then use it everywhere that I can.

31
00:01:14.004 --> 00:01:16.002
Now, the next one is a marker

32
00:01:16.002 --> 00:01:18.002
that we've added here on line 47,

33
00:01:18.002 --> 00:01:20.002
and this one's really important to understand.

34
00:01:20.002 --> 00:01:22.005
So we are going to give our controller

35
00:01:22.005 --> 00:01:26.003
and any operations that come out of our controller access

36
00:01:26.003 --> 00:01:30.009
to resources called ConfigMaps out of the core group.

37
00:01:30.009 --> 00:01:32.008
And of course, we've all used ConfigMaps.

38
00:01:32.008 --> 00:01:35.001
It's a standard part of Kubernetes.

39
00:01:35.001 --> 00:01:37.003
But if we don't put this marker here,

40
00:01:37.003 --> 00:01:39.007
our controller, as it's running,

41
00:01:39.007 --> 00:01:43.005
will actually not have access to manipulate ConfigMaps.

42
00:01:43.005 --> 00:01:47.000
This is the same way for any resource that you want to add.

43
00:01:47.000 --> 00:01:50.002
You'll see that by default, Kubebuilder built us markers

44
00:01:50.002 --> 00:01:51.005
for our object stores

45
00:01:51.005 --> 00:01:54.005
if we need to add anything else down the road.

46
00:01:54.005 --> 00:01:57.004
And if we're going to extend this use case,

47
00:01:57.004 --> 00:01:59.008
adding things like secrets might make sense here

48
00:01:59.008 --> 00:02:01.009
or other values within Kubernetes.

49
00:02:01.009 --> 00:02:04.005
But for now, we're just going to stick with ConfigMaps

50
00:02:04.005 --> 00:02:06.007
'cause that's all that we're writing code for.

51
00:02:06.007 --> 00:02:10.004
So now I want to jump down to the bottom of this file,

52
00:02:10.004 --> 00:02:12.006
line 83 is where we're going to start.

53
00:02:12.006 --> 00:02:16.002
So I have created a method here called createResources.

54
00:02:16.002 --> 00:02:17.005
And it's going to take a context

55
00:02:17.005 --> 00:02:19.008
and an instance of our objStore.

56
00:02:19.008 --> 00:02:23.008
And its whole purpose is is to manage the creation

57
00:02:23.008 --> 00:02:27.002
of the resources that we need based on our CR.

58
00:02:27.002 --> 00:02:30.006
So we're going to start by setting our state to creating

59
00:02:30.006 --> 00:02:33.001
and then once we have the state of creating,

60
00:02:33.001 --> 00:02:36.001
we're going to validate that we can update that status.

61
00:02:36.001 --> 00:02:37.008
Once the status is updated,

62
00:02:37.008 --> 00:02:40.003
we are then going to call into the AWS API

63
00:02:40.003 --> 00:02:42.003
and create our bucket.

64
00:02:42.003 --> 00:02:44.000
And we're going to do that creation

65
00:02:44.000 --> 00:02:46.006
and then as we get down to line 99,

66
00:02:46.006 --> 00:02:48.009
we're going to wait until that bucket exists.

67
00:02:48.009 --> 00:02:50.006
So once the bucket exists,

68
00:02:50.006 --> 00:02:52.005
then we're able to proceed.

69
00:02:52.005 --> 00:02:53.006
And once we do that,

70
00:02:53.006 --> 00:02:56.004
we are then going to create a ConfigMap,

71
00:02:56.004 --> 00:02:58.005
and we're going to use a pretty standard pattern here.

72
00:02:58.005 --> 00:03:01.008
So we're going to create a data map

73
00:03:01.008 --> 00:03:03.009
and that data map is going to contain two elements,

74
00:03:03.009 --> 00:03:07.003
a bucketName, which comes from the spec of our objStore

75
00:03:07.003 --> 00:03:09.003
and it's the name that we provided the bucket.

76
00:03:09.003 --> 00:03:10.007
If you look back above,

77
00:03:10.007 --> 00:03:13.000
that's what we used to create that bucket.

78
00:03:13.000 --> 00:03:15.007
And then we are going to use the location

79
00:03:15.007 --> 00:03:19.000
and the location came back from the create bucket call.

80
00:03:19.000 --> 00:03:21.006
Then we'll create that ConfigMap itself.

81
00:03:21.006 --> 00:03:24.007
We're going to specify the TypeMeta of ConfigMap

82
00:03:24.007 --> 00:03:27.005
as the kind and v1 as the APIVersion.

83
00:03:27.005 --> 00:03:29.002
And then in the ObjectMeta,

84
00:03:29.002 --> 00:03:31.000
we are going to create the name

85
00:03:31.000 --> 00:03:33.009
of this ConfigMap to match the name

86
00:03:33.009 --> 00:03:37.000
of our objStore, so of the CR itself

87
00:03:37.000 --> 00:03:39.004
and what namespace it lives in.

88
00:03:39.004 --> 00:03:42.004
And then we will provide the data on line 116.

89
00:03:42.004 --> 00:03:45.001
So then we're going to create that ConfigMap.

90
00:03:45.001 --> 00:03:46.005
And once we are done with all that,

91
00:03:46.005 --> 00:03:49.005
we will modify our objStore

92
00:03:49.005 --> 00:03:51.009
to be a state of created

93
00:03:51.009 --> 00:03:53.005
and we'll update the status of that.

94
00:03:53.005 --> 00:03:54.008
So at this point,

95
00:03:54.008 --> 00:03:58.006
the CR itself should have a state of created

96
00:03:58.006 --> 00:04:01.008
after having gone through the creating phase.

97
00:04:01.008 --> 00:04:05.004
Now, on line 130, I kind of have undone all of this.

98
00:04:05.004 --> 00:04:08.000
So we are going to do a delete resources

99
00:04:08.000 --> 00:04:09.001
and in our delete,

100
00:04:09.001 --> 00:04:11.004
we are going to delete the bucket first

101
00:04:11.004 --> 00:04:13.008
and we're not going to actually wait for the bucket to delete

102
00:04:13.008 --> 00:04:15.007
because it's less important here

103
00:04:15.007 --> 00:04:17.004
to make sure that it's deleted.

104
00:04:17.004 --> 00:04:19.004
There's always reasons it may not.

105
00:04:19.004 --> 00:04:21.009
So we're just going to call delete and leave it alone.

106
00:04:21.009 --> 00:04:24.002
Now then we will find our ConfigMap

107
00:04:24.002 --> 00:04:26.008
and we have to find it by building an instance

108
00:04:26.008 --> 00:04:28.004
of an object key.

109
00:04:28.004 --> 00:04:29.007
So the only way to find things

110
00:04:29.007 --> 00:04:32.004
with the dynamic client is with this object key,

111
00:04:32.004 --> 00:04:34.007
which is a mixture of namespace and name,

112
00:04:34.007 --> 00:04:36.001
and we are going to do that

113
00:04:36.001 --> 00:04:38.000
using the objStore name once again

114
00:04:38.000 --> 00:04:41.000
and the namespace that the objStore lives in

115
00:04:41.000 --> 00:04:43.001
that will build us a object key

116
00:04:43.001 --> 00:04:45.000
that we can use to call into the client

117
00:04:45.000 --> 00:04:46.006
to get the ConfigMap.

118
00:04:46.006 --> 00:04:47.007
Once we have the ConfigMap,

119
00:04:47.007 --> 00:04:49.005
we will delete that ConfigMap.

120
00:04:49.005 --> 00:04:51.007
And at that point, we are done.

121
00:04:51.007 --> 00:04:54.004
You may ask why don't we modify the status again?

122
00:04:54.004 --> 00:04:56.003
Because there's nothing left to view.

123
00:04:56.003 --> 00:04:58.001
Once it's marked for deletion,

124
00:04:58.001 --> 00:05:00.003
there's no reason to update the status, it's gone.

125
00:05:00.003 --> 00:05:01.002
It will never show up.

126
00:05:01.002 --> 00:05:03.004
So we're not going to mess with the deleted status

127
00:05:03.004 --> 00:05:06.003
but that's the gist of most of this code.

128
00:05:06.003 --> 00:05:08.000
So let's jump into main.

129
00:05:08.000 --> 00:05:11.001
In main, we have a couple changes that we made,

130
00:05:11.001 --> 00:05:14.004
specifically around how we are going to build the client.

131
00:05:14.004 --> 00:05:17.003
So let's start here on line 86.

132
00:05:17.003 --> 00:05:19.008
So we're going to do an os.LookupEnv

133
00:05:19.008 --> 00:05:21.008
and this is important when we're running this later.

134
00:05:21.008 --> 00:05:23.003
We're going to look up the environment.

135
00:05:23.003 --> 00:05:25.008
From the environment, we're going to get the AWS access key

136
00:05:25.008 --> 00:05:27.003
and the AWS secret.

137
00:05:27.003 --> 00:05:28.009
We are then going to create

138
00:05:28.009 --> 00:05:30.007
new static credentials from those.

139
00:05:30.007 --> 00:05:34.001
So as opposed to loading them from AWS credentials,

140
00:05:34.001 --> 00:05:35.005
we want to build them in code

141
00:05:35.005 --> 00:05:37.009
because we will not have a credentials file

142
00:05:37.009 --> 00:05:39.005
on our Kubernetes clusters.

143
00:05:39.005 --> 00:05:42.004
And then we just create an instance of the session

144
00:05:42.004 --> 00:05:45.009
and then a new instance of S3 on line 103

145
00:05:45.009 --> 00:05:48.006
to pass into our controller creation

146
00:05:48.006 --> 00:05:51.006
such that we now have a client in our controller.

147
00:05:51.006 --> 00:05:54.000
And that's the gist of all of our scaffolding code.

