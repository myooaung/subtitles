WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.210
Let's set up adaptive and responsive designs in Figma.

00:00:03.210 --> 00:00:06.435
As usually you can follow along with Sketch it's pretty much the same.

00:00:06.435 --> 00:00:09.700
Let's first look at adaptive layout.

00:00:10.430 --> 00:00:12.870
For my responsive testing,

00:00:12.870 --> 00:00:15.920
I said I would own page here called Responsive Testing.

00:00:15.920 --> 00:00:19.115
As you might have noticed, I did not include this under development.

00:00:19.115 --> 00:00:23.960
This is because I simply want to use this page to try out how different components

00:00:23.960 --> 00:00:28.985
behave and if they work well across all screen sizes and in case I need to adopt them,

00:00:28.985 --> 00:00:30.890
I will note that down here in components.

00:00:30.890 --> 00:00:34.130
Because I don't want to hand over all of those screens to development,

00:00:34.130 --> 00:00:36.234
that will be very confusing.

00:00:36.234 --> 00:00:40.730
For our example, I'm using again my 12-column Bootstrap grid.

00:00:40.730 --> 00:00:43.910
It's a very classic grid you can use any other system.

00:00:43.910 --> 00:00:47.165
What you might notice is that they come with similar breakpoints.

00:00:47.165 --> 00:00:49.820
You can of course also use something like CSS grid

00:00:49.820 --> 00:00:53.000
which I really like using and setup your own breakpoints.

00:00:53.000 --> 00:00:56.375
If you're new to this, these breakpoints might seem a little strange,

00:00:56.375 --> 00:00:57.845
odd numbers to you.

00:00:57.845 --> 00:01:03.605
What they're based on is that there basically grouping similar devices,

00:01:03.605 --> 00:01:07.895
so you will get the best possible breakpoints from experience and research.

00:01:07.895 --> 00:01:09.290
If you're interested in that,

00:01:09.290 --> 00:01:11.075
have a read it's very interesting,

00:01:11.075 --> 00:01:14.155
but you can also just take them as they're given here.

00:01:14.155 --> 00:01:17.025
Remember how those breakpoints work.

00:01:17.025 --> 00:01:19.085
Basically you're given those breakpoints up here,

00:01:19.085 --> 00:01:21.260
and this is your container size.

00:01:21.260 --> 00:01:24.140
Let's take small here for an example.

00:01:24.140 --> 00:01:26.135
This is my S, my small.

00:01:26.135 --> 00:01:34.830
I'm having 576 pixels up to 766 pixels in which this design will be active,

00:01:34.830 --> 00:01:36.950
and my container size which is this here,

00:01:36.950 --> 00:01:40.375
540 is what you're seeing here.

00:01:40.375 --> 00:01:44.630
I can just show you the set up in such a way that if I now stretch this,

00:01:44.630 --> 00:01:47.810
you can see that the container sits nicely in the middle and this is

00:01:47.810 --> 00:01:52.260
how my designs would also work in an adaptive layout.

00:01:53.120 --> 00:01:57.710
We will pick now a base size and that base size is basically the size that

00:01:57.710 --> 00:02:01.850
I'm basing all my designs upon and that I'll also use as my hand off,

00:02:01.850 --> 00:02:04.850
and then I'll make sure that on all the other sizes,

00:02:04.850 --> 00:02:06.950
these elements will also work well.

00:02:06.950 --> 00:02:08.285
Only if there're differences,

00:02:08.285 --> 00:02:09.470
I have to mention them.

00:02:09.470 --> 00:02:12.920
My base has is the size L. I found this because I looked at

00:02:12.920 --> 00:02:17.080
my Google statistics and saw that in the past in my old website,

00:02:17.080 --> 00:02:19.050
this was where I got most traffic.

00:02:19.050 --> 00:02:21.410
This is my base size I'm using.

00:02:21.410 --> 00:02:25.220
I also set up a mobile view because in pretty much every project you will also

00:02:25.220 --> 00:02:29.155
need mobile and it will probably be very different from the larger screen sizes.

00:02:29.155 --> 00:02:31.310
If you don't have any numbers to refer to,

00:02:31.310 --> 00:02:34.220
then I'll also add your link here at the bottom.

00:02:34.220 --> 00:02:37.175
You can have a look, this is the most popular screen sizes.

00:02:37.175 --> 00:02:40.010
I think right now it's probably this size around,

00:02:40.010 --> 00:02:42.065
I think 1,400 or something like that,

00:02:42.065 --> 00:02:43.220
but it keeps on changing.

00:02:43.220 --> 00:02:45.530
But just refer to that page and you can set

00:02:45.530 --> 00:02:48.900
up your design to the most popular current version.

00:02:49.040 --> 00:02:52.380
Sketching Figma also come with preset screen sizes.

00:02:52.380 --> 00:02:54.195
Just press F in Figma,

00:02:54.195 --> 00:02:57.500
A in Sketch, and then on the right-hand side here you get those sizes.

00:02:57.500 --> 00:03:00.395
Here for example, is my desktop sizes.

00:03:00.395 --> 00:03:01.910
I use this one,

00:03:01.910 --> 00:03:06.665
the MacBook Pro size which is 1,152.

00:03:06.665 --> 00:03:12.460
Let me just show you if I would now stretch this,

00:03:12.460 --> 00:03:15.560
1,152, it's something around that so you can see that

00:03:15.560 --> 00:03:18.715
lies in that range that I chose as my base size.

00:03:18.715 --> 00:03:22.490
Now, I'm going to add some of my components to see how they behave,

00:03:22.490 --> 00:03:23.810
and I'm going to start with my mobile.

00:03:23.810 --> 00:03:27.140
Because remember my development team told me they want to develop mobile

00:03:27.140 --> 00:03:30.500
first and I set up my writing sites for mobile,

00:03:30.500 --> 00:03:32.590
so that's my first screen.

00:03:32.590 --> 00:03:35.080
I put those here.

00:03:35.420 --> 00:03:39.860
Now, I'm going over to my hero size and I'm seeing here already added

00:03:39.860 --> 00:03:43.580
the menu because I know that's going to be different than mobile for sure.

00:03:43.580 --> 00:03:46.145
Now I'm just adding my mobile elements.

00:03:46.145 --> 00:03:50.365
What I need to do now is now I need to adapt them to the grid.

00:03:50.365 --> 00:03:52.080
To position them in the grid,

00:03:52.080 --> 00:03:54.150
you need to set a thing called constraints,

00:03:54.150 --> 00:03:56.055
constraints live over here.

00:03:56.055 --> 00:03:57.860
If you're not used to constraints,

00:03:57.860 --> 00:04:00.935
they're pretty much the same in Sketch and in Figma.

00:04:00.935 --> 00:04:04.490
Definitely have a look at the documentation because they're a little tricky to

00:04:04.490 --> 00:04:07.980
get your head around it and it takes a little bit time to get used to.

00:04:07.980 --> 00:04:09.095
But after a while,

00:04:09.095 --> 00:04:10.885
you'll understand how they work.

00:04:10.885 --> 00:04:12.960
They're not perfect I have to say,

00:04:12.960 --> 00:04:15.780
but they're the best solution we have right now.

00:04:15.940 --> 00:04:18.650
Let me give you a little example of how that works.

00:04:18.650 --> 00:04:20.450
For example, my menu here.

00:04:20.450 --> 00:04:28.610
I'm going to set to be pinned to the right and always have the same distance to the top.

00:04:28.610 --> 00:04:31.160
Then this one here,

00:04:31.160 --> 00:04:34.565
I set this to stretch left and right.

00:04:34.565 --> 00:04:37.160
What it does is if I do this,

00:04:37.160 --> 00:04:40.190
you can see that this one adapts and

00:04:40.190 --> 00:04:43.300
you will also notice that this causes this little gap here.

00:04:43.300 --> 00:04:46.795
There's a thing called auto layout in Figma.

00:04:46.795 --> 00:04:50.915
If you set up auto layout that would basically make

00:04:50.915 --> 00:04:55.580
this little sub-line jump up and always be positioned into correct padding.

00:04:55.580 --> 00:04:58.520
However, auto-layout doesn't work with constraints right now,

00:04:58.520 --> 00:05:00.740
so it's little annoying and yes,

00:05:00.740 --> 00:05:02.150
it's a bit of trial and error here.

00:05:02.150 --> 00:05:05.875
But I'm also sure that's going to be fixed within the next releases.

00:05:05.875 --> 00:05:07.900
You can set up all this behavior.

00:05:07.900 --> 00:05:11.780
For example, here you see I set this up in my master component.

00:05:11.780 --> 00:05:15.215
In this one here, the writings always pinned to the left.

00:05:15.215 --> 00:05:16.790
You can also see that I made

00:05:16.790 --> 00:05:22.280
this two components which it would actually be handy if it was one,

00:05:22.280 --> 00:05:25.705
but there is a really annoying thing which is that

00:05:25.705 --> 00:05:30.240
neither in Figma nor in Sketch do the images scale proportionately.

00:05:30.240 --> 00:05:32.870
I also believe that's going to be fixed within the next releases.

00:05:32.870 --> 00:05:34.595
Right now that's not working out,

00:05:34.595 --> 00:05:41.275
so I still have to have this separately and then basically scale them like

00:05:41.275 --> 00:05:44.790
this which is really

00:05:44.790 --> 00:05:49.260
tedious but the best solution I have so far and then you need to adapt this here.

00:05:49.260 --> 00:05:52.835
Because as you scale this basically we don't want this to scale

00:05:52.835 --> 00:05:56.600
the padding because we want to keep the padding and we want to keep the writing the same.

00:05:56.600 --> 00:06:00.080
This is also the reason that I'm not using the scale tool up here.

00:06:00.080 --> 00:06:01.580
If you would use the scale tool,

00:06:01.580 --> 00:06:03.845
it would seem that it's much easier to scale,

00:06:03.845 --> 00:06:08.195
but then you're scaling really everything which in case you're using percentages,

00:06:08.195 --> 00:06:10.235
that might be an option.

00:06:10.235 --> 00:06:13.980
I'm just going to speed this up and show you how it works.

00:06:30.050 --> 00:06:33.500
Now because in this layout,

00:06:33.500 --> 00:06:41.180
this is basically a fixed size that's living inside these two sizes,

00:06:41.180 --> 00:06:45.420
what I need to do is I need to actually center all of them.

00:06:45.420 --> 00:06:47.790
I want them to stay centered when this moves,

00:06:47.790 --> 00:06:52.440
and now I can move it like this.

00:06:52.440 --> 00:06:59.240
Also I obviously want to look at this with my background.

00:06:59.240 --> 00:07:03.330
Let's get rid of the grid for a second and

00:07:03.330 --> 00:07:08.530
then you can really see what that design will look like.

00:07:09.980 --> 00:07:13.400
If I want to test this for all my break points,

00:07:13.400 --> 00:07:14.690
this is what it would look like.

00:07:14.690 --> 00:07:17.690
You can see that I can make sure that it looks

00:07:17.690 --> 00:07:21.230
good on all screen sizes and I have a perfect overview.

00:07:21.230 --> 00:07:22.820
Now, the question is,

00:07:22.820 --> 00:07:26.570
how would I communicate this to my development team because as you can see,

00:07:26.570 --> 00:07:32.240
I didn't change a component but what I changed is at sometimes it's just one of

00:07:32.240 --> 00:07:38.435
those and sometimes it's in six columns or in two columns while you set this up?

00:07:38.435 --> 00:07:42.950
What I would do is I would add this to my style guide or components.

00:07:42.950 --> 00:07:47.209
For example, here is the information about my images so they can see the components,

00:07:47.209 --> 00:07:49.790
these exactly the same as a description as you saw

00:07:49.790 --> 00:07:53.045
about the component and the component section is always the same,

00:07:53.045 --> 00:07:57.200
same topography size, same spacing, same image ratio.

00:07:57.200 --> 00:07:59.900
The only thing that changes for the smallest screens,

00:07:59.900 --> 00:08:04.190
this is how it sits in a grid and for the larger screens from medium to large,

00:08:04.190 --> 00:08:06.660
this is how it would sit into grid.

00:08:07.070 --> 00:08:09.800
Now, in a perfect world this is how you

00:08:09.800 --> 00:08:11.840
should set up all your components that you need to have

00:08:11.840 --> 00:08:16.700
one components and it just changes in distribution inside the grid.

00:08:16.700 --> 00:08:21.500
If however you would need a different component for mobile or desktop, that's also fine.

00:08:21.500 --> 00:08:23.945
Just make sure that in your components section,

00:08:23.945 --> 00:08:26.930
you then show those to different components and

00:08:26.930 --> 00:08:30.215
make sure to assign a size where they used.

00:08:30.215 --> 00:08:34.520
The other thing that you need to adapt is topography.

00:08:34.520 --> 00:08:35.630
We talked about this earlier.

00:08:35.630 --> 00:08:37.280
As you can see here, this looks quite good.

00:08:37.280 --> 00:08:41.710
This still looks quite good, but then here it starts looking a little weird.

00:08:41.710 --> 00:08:46.470
Let's jump into our screen size L where things start looking a little off.

00:08:46.470 --> 00:08:51.605
I picked my hero from H1 here and I'm going to detach it.

00:08:51.605 --> 00:08:53.930
Now I'm going to have a look.

00:08:53.930 --> 00:08:56.480
I think something around 50 will be good.

00:08:56.480 --> 00:09:01.880
Remember my line-height, I want to keep the same to have as little changes as possible.

00:09:01.880 --> 00:09:05.755
This is 1.250 times 1.2 in this case.

00:09:05.755 --> 00:09:15.360
Now, I just need to adjust a little bit to padding to make sure I get the same result.

00:09:22.450 --> 00:09:27.730
Put this back up here, at 40.

00:09:27.730 --> 00:09:30.920
Now you can see if I resize this,

00:09:30.920 --> 00:09:35.895
that will look much better and it sits nicely in the grid.

00:09:35.895 --> 00:09:38.720
How I would add this, I would go to my style guide.

00:09:38.720 --> 00:09:41.345
Remember the style guide we set up for typography.

00:09:41.345 --> 00:09:43.265
Here you can see I've already added it.

00:09:43.265 --> 00:09:45.860
Here's my base size, my base fonts,

00:09:45.860 --> 00:09:48.890
and only if I really need to change it, I changed them.

00:09:48.890 --> 00:09:51.080
Here for my headline I definitely need it.

00:09:51.080 --> 00:09:53.900
I change it for size L, 250.

00:09:53.900 --> 00:09:56.345
Then full-size XL, I test it further.

00:09:56.345 --> 00:09:58.880
I still need a larger font and I here also need to

00:09:58.880 --> 00:10:01.940
adapt to sub-line a little bit for it to look right.

00:10:01.940 --> 00:10:03.320
Then once I've done this,

00:10:03.320 --> 00:10:05.870
you can see here I've added them to my styles,

00:10:05.870 --> 00:10:10.775
so I just have my base style here and then you can see for L and for XL,

00:10:10.775 --> 00:10:13.990
I would use different sizes, and that's it.

00:10:13.990 --> 00:10:17.600
That's how you can set up your typography nicely and now it's

00:10:17.600 --> 00:10:22.620
very clear to development team what you're using and what changes will occur.

00:10:22.930 --> 00:10:26.690
Now remember there were two kinds of responsive layouts to

00:10:26.690 --> 00:10:29.735
adaptive layout that we just looked at and then the responsive one,

00:10:29.735 --> 00:10:33.520
the actual response one that behaves fluid within those boundaries.

00:10:33.520 --> 00:10:35.575
Let's have a look how we set up that one.

00:10:35.575 --> 00:10:37.955
If we use our Bootstrap example again,

00:10:37.955 --> 00:10:40.325
you see that we're using pretty much the same setup,

00:10:40.325 --> 00:10:42.425
so we still have our same breakpoints.

00:10:42.425 --> 00:10:44.045
The only thing that changes,

00:10:44.045 --> 00:10:49.055
is that we get rid of our fixed containers and you can see that then within our range,

00:10:49.055 --> 00:10:52.920
now our container is behaving fluidly.

00:10:53.330 --> 00:10:57.980
If you look for examples on responsive design with Figma and Sketch,

00:10:57.980 --> 00:11:02.390
and you getting all of those little examples that work really wonderfully.

00:11:02.390 --> 00:11:04.490
That looks really great on first sight.

00:11:04.490 --> 00:11:06.050
What they do is,

00:11:06.050 --> 00:11:09.110
you actually just instead of setting this to center,

00:11:09.110 --> 00:11:11.830
you set this to stretch from left to right,

00:11:11.830 --> 00:11:13.565
and then it behaves with the grid.

00:11:13.565 --> 00:11:16.820
You can keep things like the menu still attached to the right,

00:11:16.820 --> 00:11:19.040
and then you get this really nice effect.

00:11:19.040 --> 00:11:23.210
Now, this really looks good as long as you don't add any images.

00:11:23.210 --> 00:11:25.820
Because where this tends to break a little bit and

00:11:25.820 --> 00:11:28.910
not give you the real thing is because what you could do,

00:11:28.910 --> 00:11:32.465
you can say, now this is my mobile and then I go up here.

00:11:32.465 --> 00:11:34.295
Actually because it's fluid,

00:11:34.295 --> 00:11:36.475
I don't need to do anymore layouts,

00:11:36.475 --> 00:11:38.445
and it's just going to look like this.

00:11:38.445 --> 00:11:42.320
Now this is obviously not going to look like this because this image for example,

00:11:42.320 --> 00:11:44.495
would scale proportionally and not like that.

00:11:44.495 --> 00:11:49.055
Then it would also jump up here as your text uses up more space.

00:11:49.055 --> 00:11:51.980
But you can't really do that yet with Figma and Sketch.

00:11:51.980 --> 00:11:53.780
I'm sure that is going to be fixed soon,

00:11:53.780 --> 00:11:56.810
but for now we're stuck a little bit on this solution.

00:11:56.810 --> 00:11:59.570
Now use exactly the same example as we use for

00:11:59.570 --> 00:12:02.600
the adaptive layout and just change everything to stretch.

00:12:02.600 --> 00:12:05.150
I need to change the grid to be stretched and I

00:12:05.150 --> 00:12:08.680
need to change all my elements in it to go from left to right.

00:12:08.680 --> 00:12:10.955
In this case, I can just do this,

00:12:10.955 --> 00:12:14.660
but you see that it just breaks a little bit with the images.

00:12:14.660 --> 00:12:17.780
However, this is really still good enough to try

00:12:17.780 --> 00:12:20.990
out the topography as we did in the other examples,

00:12:20.990 --> 00:12:23.780
and to then see how you images need to sit.

00:12:23.780 --> 00:12:27.410
Because basically what I did if I'm going up on this side,

00:12:27.410 --> 00:12:29.820
let me just delete those.

00:12:30.940 --> 00:12:36.455
I would take those in here and I would do exactly as I showed you with the adaptive grid.

00:12:36.455 --> 00:12:38.870
I would just need to size them up and then I

00:12:38.870 --> 00:12:41.600
can still be sure that everything looks fine.

00:12:41.600 --> 00:12:44.855
Just in anything in between so In this range,

00:12:44.855 --> 00:12:49.400
I just need to have a little bit of faith to be honest.

00:12:49.400 --> 00:12:54.350
Again, with the typography I can do exactly the same as I did with my adaptive layout.

00:12:54.350 --> 00:12:57.305
I will just try out here and then the size,

00:12:57.305 --> 00:13:00.295
and then I can see when things start looking good again.

00:13:00.295 --> 00:13:05.839
To sum up there's two ways that your grid can behave to adaptive layout and to responsive

00:13:05.839 --> 00:13:11.225
layout that is liquid in between different breakpoints.

00:13:11.225 --> 00:13:15.320
You probably have the similar setup and topography of a probably have

00:13:15.320 --> 00:13:19.955
the same changes and your components will probably more or less sit exactly the same.

00:13:19.955 --> 00:13:22.405
It's actually not such a huge difference.

00:13:22.405 --> 00:13:24.675
I find adaptive as I said,

00:13:24.675 --> 00:13:26.630
a little better when you really want stuff

00:13:26.630 --> 00:13:28.730
to be precise and if you have pretty small elements,

00:13:28.730 --> 00:13:31.325
because you can really fix it to the point.

00:13:31.325 --> 00:13:33.500
If you have something with large images,

00:13:33.500 --> 00:13:36.385
then the responsive one is usually a little nicer.

00:13:36.385 --> 00:13:38.735
But you can use both of them perfectly well.

00:13:38.735 --> 00:13:41.240
Make sure you check with your development team and make

00:13:41.240 --> 00:13:44.120
sure that anything you change across those sizes,

00:13:44.120 --> 00:13:48.480
you put into your style guides and into your component description.
