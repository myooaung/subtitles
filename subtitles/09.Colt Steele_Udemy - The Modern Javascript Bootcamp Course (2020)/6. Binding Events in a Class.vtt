WEBVTT
1
00:00:01.060 --> 00:00:04.000
All right now we have a better idea of what we're going to do here at this class of timer.

2
00:00:04.030 --> 00:00:06.820
Let's go back over to our code editor and start implementing it.

3
00:00:06.910 --> 00:00:10.180
Again I want to repeat that if this seems really confusing right now no problem.

4
00:00:10.180 --> 00:00:13.300
I fully expect that it does as we start to write some code.

5
00:00:13.300 --> 00:00:16.880
You're going to very quickly get a better idea of what we're trying to do.

6
00:00:16.900 --> 00:00:17.130
OK.

7
00:00:17.190 --> 00:00:20.530
I got to go back over to my index dot J.S. file inside of here.

8
00:00:20.530 --> 00:00:22.600
We currently have our console log of Hi there.

9
00:00:22.600 --> 00:00:28.340
So I'll just delete that and replace it with class timer so instead of here I'm going to first define

10
00:00:28.400 --> 00:00:29.880
our constructor method.

11
00:00:29.960 --> 00:00:32.510
Remember the constructor is a very special function.

12
00:00:32.600 --> 00:00:36.540
It's going to be called automatically whenever you create a new instance of timer.

13
00:00:36.590 --> 00:00:43.230
So in other words if I say down here new timer in passing an argument of like hi there what actually

14
00:00:43.230 --> 00:00:46.140
gets called Behind the scenes is the constructor function.

15
00:00:46.410 --> 00:00:50.880
And the first argument to the constructor function will be that message of Hi there.

16
00:00:50.880 --> 00:00:56.980
So if we receive that variable of message and like did a console log of it I would expect to see a council

17
00:00:56.980 --> 00:00:57.980
log of the string.

18
00:00:57.990 --> 00:01:06.480
Hi there appear inside of our console so for us we're going to eventually tried to pass in references

19
00:01:06.480 --> 00:01:10.890
to DOM elements that our Timer class are going to listen into.

20
00:01:10.890 --> 00:01:16.080
Sorry Timer class is going to listen for say a click on the Start button or click on the pause button

21
00:01:16.650 --> 00:01:22.590
or someone to change the duration input right there as well whenever those events occur our Timer class

22
00:01:22.620 --> 00:01:29.030
is going to run some method defined inside of it so inside of here I'm going to look at the constructor

23
00:01:29.240 --> 00:01:32.750
and I'm going to receive an argument of duration input.

24
00:01:32.750 --> 00:01:37.170
So again this is going to be a reference to a dumb element that is a text input.

25
00:01:37.300 --> 00:01:41.510
So whenever we create a timer we are going to have to make sure that we pass in as the first argument

26
00:01:41.750 --> 00:01:47.040
a reference to a text input and our second will be the start button.

27
00:01:47.260 --> 00:01:53.740
And then finally the third is the pause button then inside of here we're going to we immediately take

28
00:01:53.740 --> 00:01:58.330
these three different arguments and assign them to instance variables so we can refer back to these

29
00:01:58.330 --> 00:02:02.160
DOM elements from other methods inside of our class if we so choose.

30
00:02:02.530 --> 00:02:12.830
They'll say this dot duration input is duration input this dot start button is start button and this

31
00:02:12.830 --> 00:02:17.520
dot pause button is pause button

32
00:02:20.380 --> 00:02:24.620
next thing we're going to do is set up some event handlers on these different DOM elements.

33
00:02:24.700 --> 00:02:29.410
So as I've said many times now whenever users say clicks on the play button we're going to want to call

34
00:02:29.440 --> 00:02:32.440
a start method that is defined inside of our class.

35
00:02:32.570 --> 00:02:35.520
So let's just start to worry about that pause assuming that play button.

36
00:02:35.530 --> 00:02:40.390
Right now we won't worry about pause or the text input let's just try to make sure that whenever user

37
00:02:40.390 --> 00:02:46.580
clicks on that play button we end up calling some method inside of our class called Start tobacco over

38
00:02:46.580 --> 00:02:46.970
here.

39
00:02:46.970 --> 00:02:53.090
I'm going to first define a method called Start and inside there I'll do a console log of time to start

40
00:02:53.780 --> 00:03:00.890
the timer then to make sure that we call this method any time a user clicks on the start button.

41
00:03:00.890 --> 00:03:07.000
We could set up an event listener from directly inside of our constructor so we'll say this dot start

42
00:03:07.000 --> 00:03:14.650
button add event listener we're gonna watch for a click event and any time that occurs we will call

43
00:03:14.920 --> 00:03:18.420
this dot start and that's pretty much it.

44
00:03:18.430 --> 00:03:22.960
So that's how we're going to receive some arguments inside of our constructor we're going to store a

45
00:03:22.960 --> 00:03:26.620
reference to each of them in case we need to work with them at some point in the future inside of all

46
00:03:26.620 --> 00:03:27.880
of our different methods.

47
00:03:28.030 --> 00:03:32.780
And then right away we will bind some event listeners to those elements as well.

48
00:03:33.130 --> 00:03:38.230
And that's how we're going to eventually call some method that is defined inside of our class okay.

49
00:03:38.260 --> 00:03:43.750
So now we've put this together let's try to create a duration and put inside of our HCM l document we're

50
00:03:43.750 --> 00:03:48.760
going to create a start button and a pause button we'll then create an instance of our timer class and

51
00:03:48.760 --> 00:03:55.000
pass in references to those three elements so going to first go back to my index start each CML file

52
00:03:56.400 --> 00:04:04.050
over here I'm going to create an input element and I'm going to give it an idea of duration just to

53
00:04:04.040 --> 00:04:09.390
make it really easy to select I'll also make a button with an idea of starts.

54
00:04:09.440 --> 00:04:16.860
Once again just to make it easy to select and I'll give that button some texts like start and then finally

55
00:04:17.910 --> 00:04:18.930
another button with an idea.

56
00:04:18.930 --> 00:04:21.150
Pause.

57
00:04:21.370 --> 00:04:25.060
I'll give it some text a pause and close off that tag as well.

58
00:04:25.080 --> 00:04:29.910
So now we can attempt to select each of these three different elements and then create an instance out

59
00:04:29.910 --> 00:04:32.160
of our timer using them.

60
00:04:32.200 --> 00:04:36.350
It's a back inside of index not a US at the bottom of the file.

61
00:04:36.390 --> 00:04:40.260
I'm going to select those three different elements using some query selectors.

62
00:04:40.260 --> 00:04:43.850
We can either use a query selector or get element by I.D..

63
00:04:44.010 --> 00:04:49.080
In this case I'm just going to use the query selector method because honestly I just personally prefer

64
00:04:49.080 --> 00:04:49.620
to use it.

65
00:04:49.620 --> 00:04:57.880
You could definitely use a get element by idea if you so chose it's all say duration input will be document

66
00:04:58.080 --> 00:05:03.780
query selector pound duration so remember that is how we select an element by I.D. when we're using

67
00:05:03.780 --> 00:05:11.590
query selector then start button be document dot query selector.

68
00:05:11.610 --> 00:05:22.680
Start and finally pause button we document query selector element pause and then finally we can create

69
00:05:22.710 --> 00:05:28.530
our instance of the timer and pass in those three elements so we just selected those counts.

70
00:05:28.530 --> 00:05:33.930
Timer is a new timer and we will pass in duration input.

71
00:05:33.930 --> 00:05:36.420
Start button and pause button

72
00:05:39.970 --> 00:05:40.720
all right.

73
00:05:40.730 --> 00:05:45.630
It's now the instant that we create a new instance of the timer and pass in those three elements.

74
00:05:45.650 --> 00:05:50.600
Our Timer class is going to automatically set up that event listener for us whenever user clicks on

75
00:05:50.600 --> 00:05:51.300
the Start button.

76
00:05:51.350 --> 00:05:53.190
We're going to run that console log.

77
00:05:53.230 --> 00:05:58.160
So right now this is some very basic interaction but I'm sure you can start to imagine how over time

78
00:05:58.220 --> 00:06:02.510
we might start to implement different parts of the timer by wiring up events that are occurring to those

79
00:06:02.510 --> 00:06:07.420
different elements to different methods inside of our class.

80
00:06:07.430 --> 00:06:10.200
All right so let's go back over to our index not each single file.

81
00:06:10.340 --> 00:06:14.490
I'm going to refresh the page and I'll see those three elements appear.

82
00:06:14.580 --> 00:06:18.250
I'm going to zoom in my screen just you can see these different elements very easily.

83
00:06:18.260 --> 00:06:23.450
Just remember that as you start to look at my screen you're going to see these elements very large and

84
00:06:23.510 --> 00:06:28.800
they're only large on my screen because I'm far very far zoomed in so now to test this We'll click on

85
00:06:28.800 --> 00:06:33.240
the start button and as soon as we do so we should see time to start the timer.

86
00:06:33.240 --> 00:06:37.710
So that's going to be our signal to start to run some code inside of our class that's going to start

87
00:06:37.710 --> 00:06:42.960
up the timer and start ticking down seconds and every time we tick over a second we're going to update

88
00:06:43.020 --> 00:06:45.870
some text representation of the timer at the same time.

89
00:06:47.250 --> 00:06:47.470
Okay.

90
00:06:47.500 --> 00:06:49.420
So we made some pretty good progress here.

91
00:06:49.420 --> 00:06:50.230
Let's take a pause.

92
00:06:50.230 --> 00:06:53.740
We're going to come back the next video and continue working on our timer class.
