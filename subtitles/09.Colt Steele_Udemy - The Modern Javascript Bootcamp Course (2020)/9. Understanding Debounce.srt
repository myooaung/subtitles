1
00:00:00,600 --> 00:00:05,170
In the last video we added in some code to make sure that we only call our search function after the

2
00:00:05,170 --> 00:00:09,290
user stops pressing on their key inside that input for about one second or so.

3
00:00:09,460 --> 00:00:13,420
This entire process right here is referred to as D bouncing in input.

4
00:00:13,420 --> 00:00:17,220
So this is when we are going to wait or some amount of time to pass.

5
00:00:17,260 --> 00:00:23,110
After this last event before we actually run some function there is actually many different scenarios

6
00:00:23,110 --> 00:00:29,080
in which we might want to d bounce some event inside of a web application not just for text inputs.

7
00:00:29,110 --> 00:00:33,580
There might be some other scenarios that we want to limit how often we call it an order for performance

8
00:00:33,580 --> 00:00:39,890
reasons exactly like what we just did for our API because of that I think that it might be useful to

9
00:00:39,890 --> 00:00:44,900
think of some way to refactor the code that we just wrote right here and make it more usable in nature

10
00:00:45,460 --> 00:00:49,700
because like I just said it might turn out that we have to balance other things inside of our application

11
00:00:49,700 --> 00:00:51,350
at some future point in time.

12
00:00:51,680 --> 00:00:56,150
And I don't know about you but this code right here is kind of hard to read and hard to understand.

13
00:00:56,150 --> 00:01:01,490
So it would be nice to make this more reusable and kind of hide the complexity or hide the implementation

14
00:01:01,730 --> 00:01:04,310
of the actual DB bouncing logic.

15
00:01:04,320 --> 00:01:05,940
That's exactly what we're going to do.

16
00:01:05,990 --> 00:01:11,120
We're going to refactor this into some more reusable fashion so we don't have to think about these like

17
00:01:11,360 --> 00:01:14,810
really complicated set time out and clear time out calls and whatnot.

18
00:01:16,530 --> 00:01:20,610
Now before we start to write this code I want to show you a diagram to just help you understand how

19
00:01:20,610 --> 00:01:25,140
this refactor is going to work because it is going to be slightly complicated.

20
00:01:25,170 --> 00:01:30,940
So here's what we're going to do right now we are essentially trying to D balance the on input vector

21
00:01:30,960 --> 00:01:32,430
the on input function.

22
00:01:32,430 --> 00:01:38,160
We're saying that we don't want to receive any notifications of a change to that input after until after

23
00:01:38,160 --> 00:01:40,470
some amount of time occurs.

24
00:01:40,470 --> 00:01:45,670
So we kind of want to guard access to the en input function to make that happen.

25
00:01:45,720 --> 00:01:50,550
We're going to create a new helper function called the D balance function.

26
00:01:50,550 --> 00:01:56,820
This DB bounce function is going to be a little bit complicated for exactly one reason we're going to

27
00:01:56,820 --> 00:02:01,750
pass a callback or a function into this D bounce function.

28
00:02:01,870 --> 00:02:07,140
The thing that makes it complicated is that the DB bounce function itself is going to return a function

29
00:02:07,200 --> 00:02:08,190
as well.

30
00:02:08,190 --> 00:02:10,360
That's what is complicated in my opinion.

31
00:02:10,380 --> 00:02:14,220
Maybe that's really easy to understand but I think it's kind of hard to grasp the very first time you

32
00:02:14,220 --> 00:02:14,960
see it.

33
00:02:15,920 --> 00:02:20,990
Now like I said we're gonna pass a function in to the DB function that is something that is probably

34
00:02:20,990 --> 00:02:23,300
not going to be a big shock to you throughout this course.

35
00:02:23,300 --> 00:02:28,160
We've seen several times already where we pass callback functions to other functions and we're already

36
00:02:28,160 --> 00:02:29,290
doing it back over here.

37
00:02:29,330 --> 00:02:34,400
We are passing a function into add event listener so that on input can be called at some point in the

38
00:02:34,400 --> 00:02:40,510
future when the user input something into our text input so that part passing a function into another

39
00:02:40,510 --> 00:02:42,130
function not that bad.

40
00:02:42,130 --> 00:02:47,570
The only hard part to understand here is understanding that DB bounce is going to return a new function.

41
00:02:47,740 --> 00:02:50,820
So this green box right here represents a new function.

42
00:02:50,860 --> 00:02:56,640
It's like a wrapper of sorts that's going to restrict calls to the original on input.

43
00:02:56,680 --> 00:03:01,540
So this on put input right here is the same function as that one.

44
00:03:01,610 --> 00:03:06,090
So again this green box it just restricts access to on inputs.

45
00:03:06,330 --> 00:03:10,800
It might be better to visualize this using a slightly different diagram from this diagram.

46
00:03:10,800 --> 00:03:16,200
We saw the green box that represents kind of like a wrapper function of sorts that restricts access.

47
00:03:16,200 --> 00:03:20,940
You can imagine that the green function this wrapper kind of has like a shield of sorts and it's going

48
00:03:20,940 --> 00:03:25,230
to guard against repetitive instantaneous calls too on input.

49
00:03:25,650 --> 00:03:30,180
So if we start to call on input very quickly several times in a row the shield is going to step in and

50
00:03:30,180 --> 00:03:31,980
say Sorry you can't get through.

51
00:03:31,980 --> 00:03:37,190
You have to wait some amount of time before I'm actually going to execute your call so we can imagine

52
00:03:37,190 --> 00:03:40,970
that maybe one second passes and we end up like down here.

53
00:03:41,110 --> 00:03:46,490
And at that point in time the shield is going to say okay you know what most recent call to on input

54
00:03:46,610 --> 00:03:51,510
I'm going to actually let you through is one second did pass and you were the last person to call this.

55
00:03:51,620 --> 00:03:53,550
So I'm going to let you through.

56
00:03:53,570 --> 00:03:57,650
So again we can imagine the green function right here as being like that little shield that's going

57
00:03:57,650 --> 00:04:01,120
to deflect all those other calls that's the idea.

58
00:04:01,900 --> 00:04:03,300
So let's take a quick pause right here.

59
00:04:03,310 --> 00:04:07,930
When we come back the next video we're going to refactor our code and build out this D bounce helper

60
00:04:07,960 --> 00:04:08,410
function.
