1
00:00:00,800 --> 00:00:05,890
Just a moment ago we were able to run our program and see a console log of all of our different files.

2
00:00:05,930 --> 00:00:10,910
Now when we put this function together or specifically the reader function I had said to you Oh yeah.

3
00:00:10,910 --> 00:00:15,800
If we put in a string of just period that means take a look at all the files in the current working

4
00:00:15,800 --> 00:00:19,080
directory we can actually see that that works correctly.

5
00:00:19,130 --> 00:00:23,470
If we go back over to our terminal I'm back inside of my list directory.

6
00:00:23,470 --> 00:00:30,450
If I now go up one folder and then run a node list index dot J.S. from here.

7
00:00:30,450 --> 00:00:35,400
Now this is going to or that period inside the index dot j ust file is when to use the contents of the

8
00:00:35,400 --> 00:00:41,520
directory that I ran node from as the essentially current working directory for my program.

9
00:00:41,520 --> 00:00:46,620
So that little period is really powerful and it's going to change exactly what folder we are pointing

10
00:00:46,620 --> 00:00:47,300
at.

11
00:00:47,550 --> 00:00:53,800
But usually we do not use that period little shortcut right there that often instead we're going to

12
00:00:54,010 --> 00:00:59,240
use a little built in function to node that belongs to another module inside the standard library.

13
00:00:59,290 --> 00:01:03,280
Let's pull up the documentation and get a better idea of how we're going to replace that little dot

14
00:01:03,280 --> 00:01:07,240
right there with something a little bit more effective.

15
00:01:07,280 --> 00:01:14,110
So back at the node documentation on the left hand side I'm going to find a section called process an

16
00:01:14,190 --> 00:01:14,810
inside of here.

17
00:01:14,820 --> 00:01:18,760
I'm going to do a search for C W D.

18
00:01:18,810 --> 00:01:20,270
There it is right there.

19
00:01:20,270 --> 00:01:26,540
I'll click on it so this CW D stands for current working directory.

20
00:01:26,570 --> 00:01:32,090
This is going to return the path of the directory that our program is executed from at the terminal.

21
00:01:32,090 --> 00:01:36,200
We're going to very frequently use current working directory here instead of that dot because it has

22
00:01:36,200 --> 00:01:39,490
much better cross platform compatibility.

23
00:01:39,590 --> 00:01:44,750
So in other words if you run this function on a Windows or a Mac or a Linux based system it's going

24
00:01:44,750 --> 00:01:49,160
to be a lot more reliable than just throwing in that little dot even though that essentially means the

25
00:01:49,160 --> 00:01:50,120
same thing.

26
00:01:51,500 --> 00:01:53,630
So I'm going to go back over to my editor.

27
00:01:53,750 --> 00:01:59,990
I'm going to find that dot right there and I'm going to replace it with process dot see WD you're going

28
00:01:59,990 --> 00:02:06,100
to notice right away that I did not do a require statement for the process module at the very top.

29
00:02:06,110 --> 00:02:10,800
In other words I did not say process require process.

30
00:02:10,910 --> 00:02:16,680
So it turns out that the process module is automatically added into the global scope of every project.

31
00:02:16,700 --> 00:02:20,090
So it does not have to be it required ahead of time to actually make use of it.

32
00:02:20,120 --> 00:02:23,210
We can just access this module directly.

33
00:02:23,210 --> 00:02:26,480
This is one of a very few or only modules that behaves in that way.

34
00:02:26,480 --> 00:02:30,110
So just about every single other module we see listed off here on the left hand side.

35
00:02:30,160 --> 00:02:36,860
We're going to have to add a require statement for now if I say this file again go back over to my terminal

36
00:02:37,460 --> 00:02:41,840
I'm once again inside my workspace directory and I can see the list folder that I just greeted right

37
00:02:41,840 --> 00:02:42,440
there.

38
00:02:42,440 --> 00:02:49,530
So if I now do node list index dot J.S. again I'm going to get the exact same output.

39
00:02:49,530 --> 00:02:55,650
I can go back into the list folder do node index dot j ust directly and I still get the same output.

40
00:02:55,650 --> 00:02:57,110
So it seems like nothing is different.

41
00:02:57,150 --> 00:03:00,630
And to be honest well there's not really a lot of different functionality here.

42
00:03:00,690 --> 00:03:05,340
But again we usually favor using that process dot current working directory if we ever want to figure

43
00:03:05,340 --> 00:03:09,750
out where exactly our program was executed from.

44
00:03:09,770 --> 00:03:11,750
That's a good little stability improvement.

45
00:03:11,750 --> 00:03:12,890
Let's take another pause right here.

46
00:03:12,890 --> 00:03:14,120
Continue in just a moment.
