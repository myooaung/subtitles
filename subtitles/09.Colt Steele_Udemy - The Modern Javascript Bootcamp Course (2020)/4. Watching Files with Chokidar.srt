1
00:00:01,180 --> 00:00:01,440
All right.

2
00:00:01,480 --> 00:00:02,240
Let's get started.

3
00:00:02,380 --> 00:00:07,540
So the first thing we're going to need to do is to make sure that we can detect whenever a file changes

4
00:00:07,690 --> 00:00:09,700
inside of some given directory.

5
00:00:09,730 --> 00:00:12,610
So again for that we're going to use that choke in our package.

6
00:00:12,760 --> 00:00:16,410
We first need to make sure that we install this package into our project.

7
00:00:16,650 --> 00:00:19,990
So to do so we can go over to our command line.

8
00:00:19,990 --> 00:00:22,550
I'll make sure that I'm inside of my project directory.

9
00:00:22,750 --> 00:00:28,130
And then once inside of here I can automatically install that package by executing npm install stroke

10
00:00:28,130 --> 00:00:33,070
ADR I'm probably pronouncing it differently every time I say the word.

11
00:00:33,070 --> 00:00:34,230
You get the idea.

12
00:00:34,300 --> 00:00:36,070
So very quickly we're going to install it.

13
00:00:36,220 --> 00:00:37,120
And that's pretty much it.

14
00:00:37,300 --> 00:00:41,420
So now we can go back over to our Ed over here.

15
00:00:41,470 --> 00:00:45,040
We'll see that if we open up our package not Jason File.

16
00:00:45,190 --> 00:00:48,460
We now have a dependency section side of here that lists out that depends.

17
00:00:48,460 --> 00:00:53,650
Dependency that we just installed will also see that there is the node modules directory that was created

18
00:00:54,070 --> 00:00:57,140
that contains the code for the dependency that we just installed.

19
00:00:57,140 --> 00:00:58,330
So there's choke it out right there.

20
00:00:58,810 --> 00:01:02,470
Once again we can see that there are many other folders inside of here as well.

21
00:01:02,470 --> 00:01:07,720
These are other dependencies that are required by Chuck in our.

22
00:01:07,790 --> 00:01:08,060
All right.

23
00:01:08,090 --> 00:01:13,350
So I'll go back over to my index not just file and we'll figure out how to use this joke in our thing.

24
00:01:13,350 --> 00:01:16,680
So inside of here I'm going to first delete the console log.

25
00:01:16,910 --> 00:01:20,420
I'm going to require Ian choke it out so I'll say choke it out is require

26
00:01:23,730 --> 00:01:24,540
an inside of here.

27
00:01:24,570 --> 00:01:29,730
We can start this thing up really easily and tell it to start to watch the current directory using something

28
00:01:29,730 --> 00:01:35,480
very similar to the code snippet that we saw just a moment ago on the read me page so I'm going to say

29
00:01:35,900 --> 00:01:38,240
choke it are dot watch.

30
00:01:38,450 --> 00:01:39,780
I'll put in a dot to mean.

31
00:01:39,800 --> 00:01:47,030
Watch the current working directory and then we can either change on a event listener and watch for

32
00:01:47,330 --> 00:01:50,280
all that's going to essentially call our function right here.

33
00:01:50,310 --> 00:01:52,270
Anytime any event happens.

34
00:01:52,370 --> 00:01:56,790
However if we do that there are some other events that are going to be emitted by the choke in our library.

35
00:01:56,810 --> 00:02:01,250
Besides just when a file is added edited or deleted.

36
00:02:01,250 --> 00:02:05,300
So we're going to be a little bit more specific and we're going to tell chuck it are that we want to

37
00:02:05,300 --> 00:02:09,130
run some code only when one of three different things occur.

38
00:02:10,200 --> 00:02:15,960
So I'm going to remove the dot on I just added and I'm going to go down to the next line indent in and

39
00:02:15,960 --> 00:02:19,210
then chain on a dot on statement.

40
00:02:19,320 --> 00:02:23,570
Notice that I did not put a semicolon on a line above the inside of here.

41
00:02:23,630 --> 00:02:36,050
I'll say add and I'll put in a function that will do a console log of file added or then indent again

42
00:02:36,140 --> 00:02:37,040
onto the next line.

43
00:02:37,070 --> 00:02:48,660
I'll do on change I want to do again do a console log of file changed and then finally I'll do an on

44
00:02:49,500 --> 00:02:59,190
unlink I'll throw in a function and once again do a console log of I'll unlinked OK.

45
00:02:59,210 --> 00:03:00,120
So let's save this.

46
00:03:00,140 --> 00:03:05,960
And without really saying anything about the code we just wrote I'm gonna go back over to my index dot

47
00:03:06,000 --> 00:03:09,710
J.S. or something to my turtle and we're going to run our index dot J.S. file.

48
00:03:09,710 --> 00:03:16,500
We can either run it by doing node index dot J.S. or by running the watch its command directly.

49
00:03:16,610 --> 00:03:20,780
Right now it doesn't really make a difference because we don't have any CLIA arguments to pass in or

50
00:03:20,780 --> 00:03:22,320
anything like that.

51
00:03:22,340 --> 00:03:28,070
So go ahead and run this and right away I can see a ton of spam right here saying file added.

52
00:03:28,070 --> 00:03:30,410
Again and again and again and again.

53
00:03:30,470 --> 00:03:31,540
So what's going on here.

54
00:03:33,230 --> 00:03:38,620
Before I explain that let's try going back over to our Ed inside my project directory.

55
00:03:38,660 --> 00:03:44,110
I'm going to make a new file called Test dot J.S. as soon as I create that file.

56
00:03:44,150 --> 00:03:45,770
I'll then go back over to my terminal.

57
00:03:45,800 --> 00:03:51,680
I don't really see a change here just yet but whatever inside of test dot ust are going to do a console

58
00:03:51,680 --> 00:04:00,710
log of test and then save the file if I go back over I can now see a council log file changed and then

59
00:04:00,710 --> 00:04:04,190
finally if I go back over and delete this test at J ust file

60
00:04:07,120 --> 00:04:10,040
and go to my terminal once again I'll see file unlinked.

61
00:04:10,950 --> 00:04:15,560
OK so let's talk about what all these console logs really mean to us.

62
00:04:15,780 --> 00:04:16,460
All right.

63
00:04:16,570 --> 00:04:20,760
So inside the next dot j ust file we added on three different event listeners.

64
00:04:20,890 --> 00:04:24,320
The first one was at I bet you can guess what that means.

65
00:04:24,520 --> 00:04:29,110
The ad callback right here is going to be invoked whenever we create a new file inside of our project

66
00:04:29,110 --> 00:04:29,870
directory.

67
00:04:30,130 --> 00:04:36,780
But that's not the only time that it gets called the add function or the ad callback gets called anytime

68
00:04:36,970 --> 00:04:44,330
that a file is created or when choke it our first starts up in sees a file inside of a project directory.

69
00:04:44,480 --> 00:04:49,120
So you noticed when we started up our program we immediately saw a ton of different console log statements.

70
00:04:49,120 --> 00:04:53,930
That's because choke da saw all the different files inside of our project directory it saw indexed at

71
00:04:53,930 --> 00:05:00,520
J.S. and package dash lock Jace on a package lock and also slot everything inside the node modules directory

72
00:05:00,550 --> 00:05:01,680
as well.

73
00:05:02,010 --> 00:05:07,150
And so every single time that it saw one of these new files that it started to track it invoked this

74
00:05:07,210 --> 00:05:11,950
ad event right here or triggered the ad event and invoked our callback function which is why we saw

75
00:05:11,950 --> 00:05:16,550
that spam of file added right away.

76
00:05:16,620 --> 00:05:22,440
Next up as soon as we changed a file like when we made a change to the test dot J.S. file and saved

77
00:05:22,440 --> 00:05:22,870
it.

78
00:05:22,920 --> 00:05:28,880
That triggered the change event which means that we changed a file inside of our project finally when

79
00:05:28,880 --> 00:05:30,760
we deleted the test J.S. file.

80
00:05:31,110 --> 00:05:37,060
Well we think of that as deleting but internally chuck it out refers to that as unblinking a file.

81
00:05:37,190 --> 00:05:42,260
So this unlink event right here means that a file was deleted inside of our project directory.

82
00:05:42,810 --> 00:05:46,610
So that's the meaning of these different events the change one is really the only one that's kind of

83
00:05:46,640 --> 00:05:47,170
obvious.

84
00:05:47,180 --> 00:05:53,660
Hey if I was change it again unlink means that if I was deleted ad means that a file was added or it

85
00:05:53,660 --> 00:05:55,760
means that choke it out is starting for the first time.

86
00:05:55,880 --> 00:06:02,030
And it's kind of seeing all these different files for the very first time and registering their existence.

87
00:06:02,270 --> 00:06:02,510
All right.

88
00:06:02,630 --> 00:06:04,610
So now do we understand these different callbacks.

89
00:06:04,610 --> 00:06:05,680
Let's take a pause right here.

90
00:06:05,690 --> 00:06:10,190
Come back the next video and I want to mention something kind of awkward about the behavior of this

91
00:06:10,280 --> 00:06:11,060
ad event.
