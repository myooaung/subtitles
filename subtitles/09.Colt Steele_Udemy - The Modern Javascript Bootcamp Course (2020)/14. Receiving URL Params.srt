1
00:00:00,880 --> 00:00:02,940
All right we've got our link put together right here.

2
00:00:02,980 --> 00:00:08,470
Now we need to put together a rep handler to receive a request coming to this your l going to go back

3
00:00:08,470 --> 00:00:09,870
to my editor.

4
00:00:09,980 --> 00:00:16,090
I'm gonna go to my roots admin products dot J.S. file you're just right here and then down the bottom

5
00:00:16,090 --> 00:00:19,190
the file I get put together a router dot get.

6
00:00:19,250 --> 00:00:20,320
So that's what's happening right now.

7
00:00:20,320 --> 00:00:24,370
Whenever a user clicks on that link remember that is making a get request.

8
00:00:24,460 --> 00:00:27,790
So we're going to watch for request to admin products.

9
00:00:27,910 --> 00:00:33,160
And now right here we need to reflect that we want to receive the I.D. of the product being visited.

10
00:00:33,160 --> 00:00:38,440
Obviously we don't want to put together every combination of product I.D. possible because we are randomly

11
00:00:38,440 --> 00:00:43,190
generating that I.D. and we don't really know ahead of time what the possible range of product ideas

12
00:00:43,210 --> 00:00:44,060
are.

13
00:00:44,080 --> 00:00:47,890
So we do want to put in something like that and just hope that we lucked out into typing in the correct

14
00:00:47,890 --> 00:00:48,760
I.D..

15
00:00:48,760 --> 00:00:51,750
So instead we're going to essentially put in a wild card.

16
00:00:52,040 --> 00:00:53,190
Second right write right there.

17
00:00:53,290 --> 00:01:03,270
Colon I.D. and then slash edit This means that whenever a request comes in to admin products slash anything

18
00:01:03,660 --> 00:01:10,450
any characters whatsoever slash edit it's going to match up to this root handler we're then going to

19
00:01:10,450 --> 00:01:15,940
receive whatever string of characters are right there as a variable on our request object.

20
00:01:15,940 --> 00:01:22,090
So inside of our root handler we can reference our request object and see exactly what I.D. was provided

21
00:01:22,150 --> 00:01:25,290
when it user came to this root handler.

22
00:01:25,490 --> 00:01:34,010
It's now put on my rec AndrÃ©s and inside of here right now I'll just do a console log of rec dot prams

23
00:01:34,220 --> 00:01:35,150
dot I.D..

24
00:01:35,720 --> 00:01:42,550
So this is what is going to capture or give us whatever value is right there inside the euro let's save

25
00:01:42,550 --> 00:01:43,170
this.

26
00:01:43,210 --> 00:01:45,910
I'm gonna go back over to my product listing.

27
00:01:45,920 --> 00:01:50,530
Going to click on any of these edit buttons as soon as I do I'm just gonna see a spinner because right

28
00:01:50,530 --> 00:01:53,330
now our server is not doing anything that with that request.

29
00:01:53,530 --> 00:01:57,630
But if we go back over to our terminal we'll see a console log of that product's I.D..

30
00:01:57,880 --> 00:02:03,370
So it's clear that we captured that part of the url and it is available to us again on the erect prams

31
00:02:03,460 --> 00:02:08,620
object we can go back and try clicking on a different link.

32
00:02:08,690 --> 00:02:14,630
Now we'll see a very different console log and once again for this third product and I'll see the idea

33
00:02:14,630 --> 00:02:17,040
of that product appear okay.

34
00:02:17,140 --> 00:02:23,020
So we are definitely now capturing the appropriate I.D. and so we know exactly what products we are

35
00:02:23,020 --> 00:02:28,050
trying to show this edit form for it's now the next thing we're going to do inside of here.

36
00:02:28,260 --> 00:02:32,850
Once we know the idea of the product we want to show the form for we need to retrieve that product out

37
00:02:32,850 --> 00:02:38,760
of our products repository is again we want to show some different attributes of the product we're trying

38
00:02:38,760 --> 00:02:40,480
to edit inside of our form.

39
00:02:40,500 --> 00:02:45,720
In other words we want to get the title we want to get the price and stuff them as the default values

40
00:02:46,080 --> 00:02:53,150
into our edit form itself so to get access to the product we're going to use our products repo which

41
00:02:53,150 --> 00:02:55,610
we have already required up here at the top.

42
00:02:55,610 --> 00:03:02,330
Remember that our repository if we go to repositories dot repository or repository dot J.S. one of the

43
00:03:02,330 --> 00:03:06,980
different methods we have inside of here is get one.

44
00:03:07,060 --> 00:03:11,710
Now if we call get one with an I.D. that's going to give us back the I.D. or something just the record

45
00:03:11,710 --> 00:03:17,170
that corresponds to that I.D. it's back inside of products such as.

46
00:03:17,500 --> 00:03:23,590
Here's the get handler I'm going to mark the enclosing function as async because we need to run some

47
00:03:23,620 --> 00:03:30,470
asynchronous code and then inside of you I will say Conte's product is a awaits products repo.

48
00:03:30,720 --> 00:03:36,660
Get one and we'll throw in the idea of the product that we're trying to find which is wreck dot prams

49
00:03:36,960 --> 00:03:43,830
dot I.D..

50
00:03:43,870 --> 00:03:48,940
So now remember that a user might come to this root handler with some invalid I.D. right there.

51
00:03:48,940 --> 00:03:55,840
So in other words a user might manually try to type in some I.D. So like admin slash product slash whatever

52
00:03:55,870 --> 00:03:58,970
slash edits and they might try to visit this link.

53
00:03:59,220 --> 00:04:04,230
And so that idea right there might not actually correspond to a real product maybe a user wrote down

54
00:04:04,230 --> 00:04:09,000
the URL of some product they want to edit and they are typing it back in and they accidentally make

55
00:04:09,000 --> 00:04:10,050
a typo.

56
00:04:10,200 --> 00:04:16,080
Or another good case is a user might bookmark a page to edit a product and then tried to visit that

57
00:04:16,080 --> 00:04:19,050
link at some point in the future after we have deleted it.

58
00:04:19,080 --> 00:04:24,740
So it is entirely possible that we might not find a product corresponding to that I.D..

59
00:04:25,020 --> 00:04:28,280
So we first need to check and make sure that we did actually find a product.

60
00:04:28,290 --> 00:04:35,390
So I'll say if there is no product if we did not just find one let's return early and we'll do a resort

61
00:04:35,390 --> 00:04:45,200
send product not found then only after that down here do we feel safe to say OK we found a product and

62
00:04:45,200 --> 00:04:47,440
we need to render a template with it.

63
00:04:47,720 --> 00:04:50,200
So we don't have a template for our form just yet.

64
00:04:50,270 --> 00:04:54,920
So we'll throw in some boilerplate code right here of what we probably know the template function is

65
00:04:54,920 --> 00:04:55,830
going to look like.

66
00:04:55,940 --> 00:04:59,580
Well then take a pause and start to implement the template in just a moment.

67
00:04:59,660 --> 00:05:05,330
Down here we'll do something like resort scent and then just like we did before we'll call some function

68
00:05:05,330 --> 00:05:13,610
like products new template or something like that local products edit template and as usual I'm going

69
00:05:13,610 --> 00:05:21,720
to pass on an object that contains the product we care about and as usual identical keys and values

70
00:05:21,810 --> 00:05:28,550
so we can get dense it down to just product like so so then at the top let's try to require in this

71
00:05:28,550 --> 00:05:29,330
template.

72
00:05:29,330 --> 00:05:30,520
Again it doesn't exist yet.

73
00:05:30,530 --> 00:05:32,330
We're going to work on it in just a moment.

74
00:05:32,340 --> 00:05:33,750
Well it's just add in the require statement.

75
00:05:33,750 --> 00:05:40,120
So the next video we can just start working on the template directly at the very top right after the

76
00:05:40,160 --> 00:05:48,410
two require statements for templates where we have all due products edit template and require that from

77
00:05:49,320 --> 00:05:56,090
up one directory up another use admin products at okay.

78
00:05:56,270 --> 00:06:01,710
Now if we save this as is we're going to see an error message specifically over at our terminal because

79
00:06:01,710 --> 00:06:04,380
again we have not yet to find that template.

80
00:06:04,380 --> 00:06:05,240
Let's take a pause here.

81
00:06:05,250 --> 00:06:08,820
We'll come back in just a moment and we'll start working on that template file to make sure that we

82
00:06:08,820 --> 00:06:11,400
can edit a template or headed a product.
