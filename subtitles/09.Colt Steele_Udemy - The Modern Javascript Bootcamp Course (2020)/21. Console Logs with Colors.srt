1
00:00:01,040 --> 00:00:05,660
Like I mentioned in the last video the real goal of our application is not to say true or false whether

2
00:00:05,660 --> 00:00:11,030
something is a file but to color code all the different files and folders that we find here.

3
00:00:11,060 --> 00:00:14,050
So in other words since empty folder is a folder it should be.

4
00:00:14,050 --> 00:00:17,090
I don't know a different color or bolded or something like that.

5
00:00:17,930 --> 00:00:22,190
So in order to figure out how to color code these things we can either go back to our council statement

6
00:00:22,280 --> 00:00:27,420
right here and figure out how to make console log actually shows something with different colors.

7
00:00:27,530 --> 00:00:32,410
Or alternatively we can have someone else figure that out for us.

8
00:00:32,490 --> 00:00:35,030
Let me show you what I mean inside my browser.

9
00:00:35,060 --> 00:00:39,020
I'm going to navigate to NPM J.S. dot com.

10
00:00:39,130 --> 00:00:45,220
This is a repository or a registry of thousands and thousands of open source packages that we can very

11
00:00:45,220 --> 00:00:52,870
easily add into our project NPM is included with the node j ust download number we downloaded and installed

12
00:00:52,870 --> 00:00:58,570
node a little bit earlier NPM is a command line tool and also the name of this company that maintains

13
00:00:58,570 --> 00:01:04,390
this repository so we can search through thousands of different packages and find one that will take

14
00:01:04,390 --> 00:01:08,140
care of coloring at these console log statements for us.

15
00:01:08,170 --> 00:01:10,980
I already took the liberty of looking up a package that we can use.

16
00:01:11,170 --> 00:01:18,990
So we're going to search for something called Chuck c h a elk so the first result right here is Chuck.

17
00:01:19,150 --> 00:01:23,450
If I click on it we're going to see some documentation for this package.

18
00:01:23,500 --> 00:01:29,060
So this is a package that we can very easily install and use inside of our project as you can see right

19
00:01:29,060 --> 00:01:29,270
here.

20
00:01:29,270 --> 00:01:33,590
The entire goal of this package is to essentially format console log statements.

21
00:01:33,710 --> 00:01:38,330
So we're going to use this to handle all this formatting of files and folders as opposed to figuring

22
00:01:38,330 --> 00:01:39,620
out how to do it ourselves.

23
00:01:40,740 --> 00:01:47,400
In order to make use this project we're going to install it into our project with the command npm install

24
00:01:47,520 --> 00:01:52,770
and then the name of the package which in this case is Chuck if you look up here towards the top right

25
00:01:52,770 --> 00:01:54,480
where it says install.

26
00:01:54,480 --> 00:01:56,800
It says that another way of installing it is NPM.

27
00:01:56,810 --> 00:02:04,050
I chuck NPM I chuck and npm install Chuck are the exact same commands you're going to see some documentation

28
00:02:04,050 --> 00:02:05,460
refer to one or the other.

29
00:02:05,460 --> 00:02:11,090
Again you can run either one second go back over to my terminal I'm going to make sure I'm inside my

30
00:02:11,090 --> 00:02:19,410
project directory and then I will run npm install Chuck that's going to reach out to the NPM registry

31
00:02:19,620 --> 00:02:22,860
download that package and add it into my project.

32
00:02:22,860 --> 00:02:25,850
Let's not go back over to our project and see exactly what happened.

33
00:02:26,640 --> 00:02:27,480
So back over here.

34
00:02:27,480 --> 00:02:34,450
If I open up my package dot JS on file I'll see that I now have a cent section inside of your call dependencies.

35
00:02:34,650 --> 00:02:36,440
And Chuck was added to it.

36
00:02:36,580 --> 00:02:41,520
So this is telling anyone else who takes a look at my project that my project depends upon one outside

37
00:02:41,520 --> 00:02:43,720
package and it's called Chuck.

38
00:02:43,830 --> 00:02:48,590
And that is the version that my project needs to work correctly.

39
00:02:48,740 --> 00:02:55,100
In addition to this update to the package dot J's on file I'll also find inside my folder Explorer here

40
00:02:55,110 --> 00:02:59,170
on the left hand side that I've got a new folder called Node modules.

41
00:02:59,340 --> 00:03:04,230
That is where all the dependencies that were installed for my project to get placed when we open up

42
00:03:04,230 --> 00:03:04,800
that folder.

43
00:03:04,800 --> 00:03:09,480
You'll see that there are many different entries inside there even though we only ran npm install for

44
00:03:09,480 --> 00:03:15,730
a single project so the reason we see so many folders right here is that when we installed Chuck Chuck

45
00:03:15,730 --> 00:03:19,480
itself has some dependencies that it requires to work correctly.

46
00:03:19,480 --> 00:03:26,450
So the other folders we see inside of your are dependencies that are required by Chuck for it to work.

47
00:03:26,650 --> 00:03:32,860
Now in order to use this package this Chuck package we can go back over to our indexed J.S. file at

48
00:03:32,860 --> 00:03:33,750
the very top.

49
00:03:33,790 --> 00:03:39,490
We're going to require it into this file just like we would a normal node standard library module just

50
00:03:39,490 --> 00:03:45,960
like we've done with S and you till all say const Chuck is required.

51
00:03:46,240 --> 00:03:52,520
Chuck and that's how we get access to this library now if you want to figure out how to actually use

52
00:03:52,520 --> 00:03:57,320
it to console log some different colored strings out we can go and take a look at the documentation

53
00:03:57,870 --> 00:04:03,500
so I can go back over to the docs I can scroll down a little bit and it will tell us exactly how to

54
00:04:03,500 --> 00:04:04,850
use this thing.

55
00:04:04,960 --> 00:04:10,110
So if we want to console log something out the color blue we will call choc dot blue.

56
00:04:10,110 --> 00:04:14,560
Passing the string we want to log and then call it console log on the result.

57
00:04:14,790 --> 00:04:15,980
So that is pretty much it.

58
00:04:17,090 --> 00:04:19,420
Talk has support for many different colors.

59
00:04:19,440 --> 00:04:27,710
We can look them up either through the documentation here or we can go down towards the bottom and see

60
00:04:27,710 --> 00:04:33,330
all the different ways we can modify the different styles so we can add on some bold text we can italicized

61
00:04:33,410 --> 00:04:37,130
underline and here's all the different colors so we can use as well.

62
00:04:39,010 --> 00:04:44,920
So to delineate or distinguish between a file and a folder I'm just going to fold the folders.

63
00:04:45,010 --> 00:04:49,090
You can definitely add in a color and you absolute can as a matter of fact I recommend you try out a

64
00:04:49,100 --> 00:04:54,970
color but in my case I don't know if you are running a terminal with like a back black round or a white

65
00:04:54,970 --> 00:04:55,480
one.

66
00:04:55,510 --> 00:04:59,150
And so I do want to use some color here that's going to look really ugly on your machine.

67
00:04:59,170 --> 00:05:04,080
So instead I'm just going to use bolt just to keep things nice and simple OK.

68
00:05:04,130 --> 00:05:06,200
So I'm going to go back over to my editor.

69
00:05:06,590 --> 00:05:11,780
I'm going to go down to where we have our console logs I'm going to change up the syntax here just a

70
00:05:11,780 --> 00:05:12,170
little bit.

71
00:05:12,200 --> 00:05:24,090
I'll say if stats dot is file and I want to print out that file name normally otherwise if it is not

72
00:05:24,090 --> 00:05:34,040
a file so if it is a directory I'll do console dot log and then chalk dot bold file names at index and

73
00:05:34,040 --> 00:05:37,370
I'm going to delete that previous console log that we had right there.

74
00:05:37,370 --> 00:05:45,430
So now files should be printed out normally folders should be printed out with bold text instead going

75
00:05:45,430 --> 00:05:46,340
to save this.

76
00:05:46,550 --> 00:05:50,690
I'll go back over a run MLS and there we go.

77
00:05:50,720 --> 00:05:55,850
It's kind of subtle to see right here but the folders that I have now empty folder and mode modules

78
00:05:56,060 --> 00:06:01,880
are now just a little bit folder in the files of next day yes and so on are can normal text or standard

79
00:06:02,720 --> 00:06:08,060
like I mentioned if you want to you can always add on some colors instead so you could use red yellow

80
00:06:08,060 --> 00:06:09,780
blue whatever you want to try out.

81
00:06:09,920 --> 00:06:13,120
But like I just mentioned I don't know what theme you are using.

82
00:06:13,160 --> 00:06:18,230
So I don't want to show like using white here and then have you not able to see any of the actual text

83
00:06:18,230 --> 00:06:21,800
that gets printed out so I'm going to stick with Bolt OK.

84
00:06:21,830 --> 00:06:23,450
So that's pretty much it.

85
00:06:23,450 --> 00:06:25,250
Well our project is looking good.

86
00:06:25,310 --> 00:06:28,300
There is one last little thing we need to take care of however.

87
00:06:28,310 --> 00:06:31,750
So quick pause and we'll tackle this last little item in just a moment.
