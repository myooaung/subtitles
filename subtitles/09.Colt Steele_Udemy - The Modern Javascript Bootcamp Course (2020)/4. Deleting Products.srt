1
00:00:01,380 --> 00:00:01,640
All right.

2
00:00:01,650 --> 00:00:06,660
The very last thing we do on our products list or the admin panel overall is to make sure that we can

3
00:00:06,660 --> 00:00:08,670
delete an existing product.

4
00:00:08,670 --> 00:00:13,080
So we need to make sure that whenever we click on this button we delete the appropriate thing out of

5
00:00:13,080 --> 00:00:15,540
our big old repo of all of our different products.

6
00:00:16,290 --> 00:00:20,670
So to get started on this we're going to find the template that renders this HCM out.

7
00:00:20,960 --> 00:00:28,690
So you might recall that that is inside of our views admin products index such as file it's inside of

8
00:00:28,690 --> 00:00:34,500
here we can scroll down a little bit and find our delete button right there so in order to make sure

9
00:00:34,500 --> 00:00:38,940
that clicking on this thing actually deletes the appropriate product we're just going to wrap it inside

10
00:00:38,940 --> 00:00:40,680
of a form element.

11
00:00:40,780 --> 00:00:45,010
It's going to wrap this inside of a form.

12
00:00:45,160 --> 00:00:50,590
We're not going to give this thing any kind of input or anything like that recently just using the submission

13
00:00:50,650 --> 00:00:55,140
of the form as a sign that we want to delete the appropriate product.

14
00:00:55,260 --> 00:01:00,850
It might be kind of curious why we are doing a form element right here for deletion as opposed to like

15
00:01:00,940 --> 00:01:03,180
a normal anchor tag or something like that.

16
00:01:03,280 --> 00:01:07,030
Like why don't we have an anchor tag that wraps that button and then whenever we click on the anchor

17
00:01:07,030 --> 00:01:10,250
tag we visit a route that deletes the corresponding product.

18
00:01:10,300 --> 00:01:13,150
The reason for that is pretty simple an anchor tag.

19
00:01:13,150 --> 00:01:16,860
Whenever we click on it is going to make a GET request to that you're out.

20
00:01:17,110 --> 00:01:19,410
We instead want to make a post request.

21
00:01:19,480 --> 00:01:24,750
In general we consider a POST request to be a sign that we want to modify some data in some way just

22
00:01:24,750 --> 00:01:29,260
so you know we've been using get requests and post requests quite a bit throughout this application.

23
00:01:29,260 --> 00:01:33,970
There are other types of requests that are technically more appropriate for this operation.

24
00:01:34,030 --> 00:01:38,390
So there is a type of HDTV request called a DELETE request which.

25
00:01:38,410 --> 00:01:40,570
Yeah without a doubt totally appropriate.

26
00:01:40,570 --> 00:01:47,680
The issue is that a form element only some only supports get requests and post requests as the means

27
00:01:47,680 --> 00:01:54,490
of submission so we cannot use a form element to actually make a DELETE request.

28
00:01:54,490 --> 00:01:59,680
We technically can by using some really tricky magic but that's something that's very much outside the

29
00:01:59,680 --> 00:02:00,640
realm of this course.

30
00:02:00,670 --> 00:02:02,120
So we're not gonna worry about it too much.

31
00:02:02,170 --> 00:02:08,050
We're just going to rely upon a POST request from this form to actually do our delete okay.

32
00:02:08,080 --> 00:02:14,560
So on this forum I'm going to give it a method of post and I'm going to give it one other attribute

33
00:02:14,590 --> 00:02:15,010
as well.

34
00:02:15,010 --> 00:02:17,700
I'm going to give it an attribute of action.

35
00:02:17,950 --> 00:02:23,800
So this action tribute right here specifies the URL that we're going to make the post requests to usually

36
00:02:23,800 --> 00:02:28,980
by default the action property is equal to whatever the current you URL is.

37
00:02:28,990 --> 00:02:34,450
So if we clicked on delete right now we would make a post request to admit slash products.

38
00:02:34,450 --> 00:02:39,040
The issue is that with that we don't have any easy way to communicate what the I.D. of the product is

39
00:02:39,040 --> 00:02:40,900
that we want to delete.

40
00:02:40,900 --> 00:02:46,510
So we're going to instead add the action actually right here so we can manually specify the URL that

41
00:02:46,510 --> 00:02:53,850
we're going to make our post request to the we're going to make our post request to admin products product

42
00:02:53,940 --> 00:03:00,620
dot I.D. slash Delete.

43
00:03:00,730 --> 00:03:05,000
It's now in every click on that button POST request to that you URL right there.

44
00:03:05,170 --> 00:03:10,050
It's now all we have to do is open up our different root handlers around our products and add in a post

45
00:03:10,050 --> 00:03:13,440
request handler to watch for a request that you are El.

46
00:03:13,620 --> 00:03:15,260
Let's do that right now.

47
00:03:15,360 --> 00:03:17,360
I'm going to go back to product stop J.S..

48
00:03:17,490 --> 00:03:21,520
So this is inside of my roots admin directory.

49
00:03:21,630 --> 00:03:27,700
I'm going to go down to the very bottom of the file and down here I'll add in a router and we'll watch

50
00:03:27,700 --> 00:03:35,040
for a post request to admin products I.D. with the cold in front of it.

51
00:03:35,050 --> 00:03:37,840
Because remember we don't know exactly what this idea is going to be.

52
00:03:37,840 --> 00:03:40,120
It's essentially a wild card of sorts.

53
00:03:40,120 --> 00:03:46,900
Flash delete then as usual we want to do a require off to make sure that only someone who is authenticated

54
00:03:47,200 --> 00:03:56,330
can access this route and we'll put on our rec and Our rez with our actual route handling function inside

55
00:03:56,330 --> 00:03:56,690
of here.

56
00:03:56,690 --> 00:04:01,820
We need to reach into our products repo and delete the appropriate post because we're going to reach

57
00:04:01,820 --> 00:04:02,960
into our repo.

58
00:04:02,960 --> 00:04:07,010
Well that's definitely going to be an asynchronous action so I'm going to mark the enclosing function

59
00:04:07,040 --> 00:04:15,260
as async then if we again take a look at our repositories repository DHS file inside of here you'll

60
00:04:15,260 --> 00:04:17,570
recall that we put together a delete function.

61
00:04:17,740 --> 00:04:19,240
Here it is right here.

62
00:04:19,280 --> 00:04:22,780
So all we have to do is call delete with the appropriate I.D.

63
00:04:25,820 --> 00:04:27,220
a back inside of our handler.

64
00:04:27,240 --> 00:04:35,440
We can do in a products repo not delete and the idea of the product that we want to delete will be at

65
00:04:35,530 --> 00:04:36,900
risk dot prams.

66
00:04:36,910 --> 00:04:37,440
That idea.

67
00:04:37,450 --> 00:04:45,560
Remember racked up prams is how we get access to the I.D. out of the incoming request in the URL.

68
00:04:45,630 --> 00:04:50,690
Then finally after successfully deleting this thing we'll send the user back to our big list of products.

69
00:04:50,740 --> 00:04:55,840
So that'll be another rez redirect slash admin slash products

70
00:05:00,120 --> 00:05:01,310
that should pretty much be set.

71
00:05:01,380 --> 00:05:03,450
So let's save this.

72
00:05:03,500 --> 00:05:04,300
I'm going to go back over.

73
00:05:04,310 --> 00:05:10,100
I'm going to refresh this page and I should be able to click on delete and see that product go away.

74
00:05:10,100 --> 00:05:11,330
Delete goes away.

75
00:05:11,330 --> 00:05:15,550
Delete it never and left with an empty list okay.

76
00:05:15,580 --> 00:05:20,280
So that's pretty much the full functionality we've got the ability to create products we can edit them

77
00:05:20,320 --> 00:05:21,000
we can delete them.

78
00:05:21,010 --> 00:05:26,290
And of course we can list them out on here as well that that is pretty much it for our administration

79
00:05:26,290 --> 00:05:27,010
panel.

80
00:05:27,010 --> 00:05:32,710
It's now the last thing that we need to really take care of is our ability to list out all of our different

81
00:05:32,710 --> 00:05:38,850
products to our user and allow them to add those items to a shopping cart as well.

82
00:05:38,850 --> 00:05:42,570
So as usual quick pause right here and we'll start all that stuff up in the next video.
