WEBVTT
1
00:00:01.510 --> 00:00:01.770
OK.

2
00:00:01.810 --> 00:00:03.260
So we don't have two things to do.

3
00:00:03.260 --> 00:00:08.030
We need to somehow figure out how we can pull out all this validation logic outside of our orthodoxy

4
00:00:08.060 --> 00:00:08.850
as vile.

5
00:00:08.960 --> 00:00:12.250
Like I mentioned at this rate this file is going to be really hard to work with.

6
00:00:12.260 --> 00:00:18.230
Very quickly other and we need to do is to figure out if we have any errors right here how to somehow

7
00:00:18.230 --> 00:00:22.640
showed the original form and display those errors inside of that form.

8
00:00:22.640 --> 00:00:27.500
Let's first take care of extracting some this validation logic out because that's definitely going to

9
00:00:27.500 --> 00:00:31.460
make figuring everything else out inside of here a little bit easier once we don't have to scroll up

10
00:00:31.460 --> 00:00:37.030
and down through this giant block of code to extract all the stuff I can create a new file inside of

11
00:00:37.030 --> 00:00:43.600
my roots admin directory inside the admin directory I going to make a new file called validators not

12
00:00:43.620 --> 00:00:50.510
J.S. so inside of here we're going to create all those different validators essentially just the validation

13
00:00:50.510 --> 00:00:55.940
chains and then export them so they can be easily used or referenced from other files inside of our

14
00:00:55.940 --> 00:01:04.940
project so inside a validator such as I'm going to define that check function or require it from the

15
00:01:04.940 --> 00:01:08.530
Express validator library.

16
00:01:08.760 --> 00:01:16.410
We know that our validator also requires the user's repo so I'm also going to add in users repo and

17
00:01:16.410 --> 00:01:22.110
to get that I'm going to go up one directory to roots up one directory to my root folder and then into

18
00:01:22.110 --> 00:01:23.280
repositories.

19
00:01:23.280 --> 00:01:32.640
So up one up one repositories Whoops there we go inside of here I'll do a module that exports and I'm

20
00:01:32.640 --> 00:01:35.220
going to export an object.

21
00:01:35.250 --> 00:01:39.870
Now one thing that I want to point out here is if we go back to our Oct J.S. file and we take a look

22
00:01:39.870 --> 00:01:41.910
at each these validation chains.

23
00:01:42.060 --> 00:01:46.340
Notice how they do not require any input from anything else inside this file.

24
00:01:46.350 --> 00:01:52.590
In other words there is no direct coupling between this little chain right here and any request object

25
00:01:52.620 --> 00:01:55.220
or response object or anything like that.

26
00:01:55.230 --> 00:02:00.330
So in theory we can really define this chain of method calls anywhere inside of our project and then

27
00:02:00.390 --> 00:02:01.490
import the result of it.

28
00:02:01.500 --> 00:02:03.600
And just like stick it in right there.

29
00:02:03.600 --> 00:02:05.170
So let me show you what I mean.

30
00:02:05.340 --> 00:02:08.920
I'm going to select this first validation chain around that email.

31
00:02:09.140 --> 00:02:10.670
I'm going to cut it.

32
00:02:10.670 --> 00:02:17.540
I'm going to take it back over to validators and I'm gonna add in a new key to this thing of require

33
00:02:17.870 --> 00:02:26.290
email and then I'm going to paste in my validator like so so now I have the result of this entire validation

34
00:02:26.290 --> 00:02:26.900
chain.

35
00:02:26.980 --> 00:02:31.510
The end result of all of it is a function to be used as a middleware and I'm assigning the result of

36
00:02:31.510 --> 00:02:38.300
all that to require email so now to make use of this entire validated chain back inside of that root

37
00:02:38.300 --> 00:02:38.690
handler.

38
00:02:38.690 --> 00:02:47.640
We were just working on I will go back over to Art J.S. I'm gonna go up to the top and underneath our

39
00:02:47.730 --> 00:02:49.180
template require statements.

40
00:02:49.560 --> 00:02:56.520
I'm going to require in and d structure off at the same time that object specifically the require email

41
00:02:56.550 --> 00:02:57.640
property.

42
00:02:57.680 --> 00:03:04.370
It's like a d structure require email from same directory because we're currently inside of.

43
00:03:04.370 --> 00:03:09.480
Off I want to get that validators file so now require e-mail.

44
00:03:09.480 --> 00:03:09.620
Right.

45
00:03:09.620 --> 00:03:14.730
Here is the exact same thing that we were working with just a second ago this entire big validation

46
00:03:14.730 --> 00:03:18.100
chain or I should say the result of that big validation chain.

47
00:03:18.150 --> 00:03:22.860
Now I can just take that variable right there that single variable and stick it in where I previously

48
00:03:22.860 --> 00:03:27.010
had the giant validation chain so I could put it right there as the first argument or the first element

49
00:03:27.020 --> 00:03:31.630
side that array require email and that's pretty much it.

50
00:03:33.630 --> 00:03:37.990
Now we're going to repeat that process for these two other validation chains as well.

51
00:03:38.040 --> 00:03:42.320
I'm going to take check password I'm going to cut it.

52
00:03:42.400 --> 00:03:46.680
I'll go over to validators she's going to add in a new key value pair to this thing.

53
00:03:46.690 --> 00:03:56.900
So I'll say require a password paste in that entire check for password go back to author James at the

54
00:03:56.900 --> 00:03:57.230
top.

55
00:03:57.260 --> 00:04:02.450
I'm going to d structure require a password and then I'll stick.

56
00:04:02.450 --> 00:04:09.530
Require a password in as the second element and I will repeat that one that's time for password confirmation.

57
00:04:09.590 --> 00:04:17.250
So I'll cut all that n validators make sure I get a comma at the end of the last little block there

58
00:04:19.020 --> 00:04:26.450
I'll put require password confirmation and then stick in that whole validation chain as well.

59
00:04:28.320 --> 00:04:38.600
Say this go back over to off J.S. go to the top d structure off require a password confirmation.

60
00:04:38.840 --> 00:04:43.360
And then finally stick that in to the third element.

61
00:04:43.490 --> 00:04:48.440
Now we have everything essentially at the end the day exactly identical to how it was before all we've

62
00:04:48.440 --> 00:04:55.270
done is moved the declaration of these different validators into this other file so over time if we

63
00:04:55.270 --> 00:04:59.680
need any other validation statements or any other validation chains like the ones you put together right

64
00:04:59.680 --> 00:05:04.780
here we will just continue to add them into this object with some appropriate names like require email

65
00:05:04.780 --> 00:05:08.100
require a password require password confirmation and so on.

66
00:05:08.140 --> 00:05:13.240
So it's going to keep adding them in over here and to the thing over time and we can easily reuse them

67
00:05:13.270 --> 00:05:15.320
throughout the rest of our project as well.

68
00:05:15.340 --> 00:05:20.140
So if there ever happens to be any other area where we need to require an email or anything like that

69
00:05:20.500 --> 00:05:27.410
we could simply require in require email and then make use of it inside of some other root handler.

70
00:05:27.440 --> 00:05:32.150
The other benefit is that inside of our off dot J.S. file everything inside of here is way more legible

71
00:05:32.150 --> 00:05:32.770
now.

72
00:05:32.780 --> 00:05:37.820
Now I can almost see the entire post request handler on like one screen of code whereas before that

73
00:05:37.820 --> 00:05:39.970
was definitely not possible as at all.

74
00:05:40.130 --> 00:05:45.470
As a matter of fact if I save this those three lines get condensed down to one and now this is way more

75
00:05:45.470 --> 00:05:48.200
legible than what I had previously.

76
00:05:48.200 --> 00:05:53.510
In addition the names of each of these validation attempts right here make it really clear about what

77
00:05:53.510 --> 00:05:54.680
I'm trying to validate.

78
00:05:54.920 --> 00:05:59.740
So I can at a glance take a look at this poster request handler for sign up and understand that.

79
00:05:59.780 --> 00:06:05.300
OK this thing is going to have some email validation password validation and password confirmation validation

80
00:06:05.330 --> 00:06:08.310
as well though this is definitely a good improvement.

81
00:06:08.320 --> 00:06:13.200
We've moved allows code to some other file where it can be more easily reused in the future.

82
00:06:13.290 --> 00:06:17.440
Now the last thing we have to figure out around all this validation stuff is how to take the result

83
00:06:17.680 --> 00:06:23.780
of any errors that occurred during that validation attempt and show them on our original form.

84
00:06:23.890 --> 00:06:26.140
So quite possible take care of that in just a moment.
