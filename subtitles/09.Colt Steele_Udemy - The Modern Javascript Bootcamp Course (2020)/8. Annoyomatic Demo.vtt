WEBVTT
1
00:00:00.180 --> 00:00:03.860
Next up I'd like to expand upon aero functions and this.

2
00:00:04.050 --> 00:00:09.230
Why do aero functions not get their own this and how can it be useful sometimes.

3
00:00:09.300 --> 00:00:10.820
So we're gonna make a little example.

4
00:00:10.920 --> 00:00:15.360
I'm calling it the annoying Matic or the annoy or annoy Tron.

5
00:00:15.450 --> 00:00:23.590
It's going to have a list of annoying phrases these phrases these drive me insane literally cray cray.

6
00:00:23.610 --> 00:00:27.480
I can't even totes YOLO and Can't Stop Won't Stop.

7
00:00:27.480 --> 00:00:28.350
They don't drive me insane.

8
00:00:28.350 --> 00:00:33.630
That's a bit over the top but I'm not a fan of these phrases so we're gonna make this little Neuer that

9
00:00:33.750 --> 00:00:39.960
every second every two seconds every 500 milliseconds prints one of these random phrases to the console

10
00:00:40.380 --> 00:00:45.630
and we just fill up the entire console with a bunch of annoying phrases and the way we're going to structure

11
00:00:45.630 --> 00:00:47.540
it is by using an object.

12
00:00:47.640 --> 00:00:49.590
So I'm gonna make an object here.

13
00:00:49.920 --> 00:00:57.630
I'll call it a Neuer and I'm gonna add this array and you can put whatever array you want in there if

14
00:00:57.630 --> 00:00:58.820
you like some of these phrases.

15
00:00:58.830 --> 00:01:01.070
I am very sorry if I'm offending you here.

16
00:01:01.080 --> 00:01:02.710
Please pick your own phrases.

17
00:01:02.760 --> 00:01:08.080
I'm sure you can find a good number of annoying phrases to draw upon just from my own courses.

18
00:01:08.220 --> 00:01:14.640
I say at the end of the day pretty much every video no matter what time of day it is or essentially

19
00:01:14.760 --> 00:01:17.730
basically oh gosh I can't listen to my own videos.

20
00:01:17.790 --> 00:01:25.380
OK so I'm going to add phrases as a key here into my object and then I'm going to add a method.

21
00:01:25.380 --> 00:01:30.540
The idea is that I'll have a method called Start and another one called stop and I want to be able to

22
00:01:30.540 --> 00:01:31.780
call a lawyer.

23
00:01:31.800 --> 00:01:38.340
Dots start and that will start printing one of these every second and I can call a lawyer that stop

24
00:01:39.000 --> 00:01:40.670
to stop it.

25
00:01:40.800 --> 00:01:48.110
So to do this we'll take advantage of a built in function called set interval set interval is a global.

26
00:01:48.180 --> 00:01:49.500
It's located on the window.

27
00:01:49.530 --> 00:01:53.460
If we look at the window it comes in your browser for free.

28
00:01:53.550 --> 00:01:59.440
If we scroll way down all the way down to s Where are you set interval right there.

29
00:01:59.460 --> 00:02:04.360
So it's a function we call it and we have to pass in a couple of things set interval.

30
00:02:04.620 --> 00:02:10.270
We need to give it a funk to run and a time or the interval.

31
00:02:10.410 --> 00:02:16.350
So for us we'll start something we'll start with something easy like three thousand milliseconds so

32
00:02:16.350 --> 00:02:20.820
whatever function I put here will run every three seconds.

33
00:02:21.300 --> 00:02:26.340
So I'm gonna delete that and instead add a method called start.

34
00:02:26.340 --> 00:02:37.590
So after my phrases I'll add a method called start I need a comma here which will be a function and

35
00:02:37.590 --> 00:02:43.380
then actually I'll use a shorthand get rid of this function keyword that's nicer I'm also gonna add

36
00:02:43.380 --> 00:02:49.800
a method called pick or choose phrase or something so that we can easily get one of these so I'll define

37
00:02:49.800 --> 00:02:50.470
that first.

38
00:02:50.730 --> 00:02:59.520
How about just pick a phrase and in here I'm going to reference this stock phrases which we've seen

39
00:02:59.820 --> 00:03:06.470
that works as long as I'm calling this as annoying dot pick phrase or something dot pick phrase.

40
00:03:06.900 --> 00:03:09.590
I just don't want to be calling it as a non method.

41
00:03:10.020 --> 00:03:15.670
So this dot phrases will be the phrases it's the entire array to pick one randomly.

42
00:03:15.810 --> 00:03:23.620
What I need to do is get the length of this array and when I need to do a math dot random multiply that

43
00:03:23.740 --> 00:03:32.150
by this dot phrases dot blank and I'll probably make this its own variable concept phrase is equal to

44
00:03:32.160 --> 00:03:39.440
this stop phrases or D structure const phrases equals this.

45
00:03:39.980 --> 00:03:46.130
So math not random times phrases dot length and then I need to floor that.

46
00:03:46.130 --> 00:03:53.340
So math dot flower and then I'll call this concept index.

47
00:03:53.340 --> 00:03:57.570
So that gives me a random index from this array.

48
00:03:57.570 --> 00:04:04.770
If we add two more two phrases this will reflect to update that when I call phrases or pick phrase this

49
00:04:04.770 --> 00:04:08.500
dot phrases will reference the current version of phrases.

50
00:04:08.560 --> 00:04:16.080
OK so that gives me that but then I need to access it out of phrases using that index and I'll return

51
00:04:16.080 --> 00:04:23.170
that so I use these structuring here just so I didn't have to reference this stop phrases dot length

52
00:04:23.230 --> 00:04:25.620
and this dot phrases of index.

53
00:04:25.720 --> 00:04:30.460
Maybe it's overkill but we also just learned de structuring so it's always good to get some reinforcement

54
00:04:30.460 --> 00:04:31.390
there.

55
00:04:31.540 --> 00:04:33.040
If I run this code right now.

56
00:04:33.550 --> 00:04:34.720
Oh my gosh.

57
00:04:34.750 --> 00:04:40.930
Gonna clear my console if it will stop lagging the window object made it very unhappy.

58
00:04:40.930 --> 00:04:41.360
All right.

59
00:04:41.380 --> 00:04:42.780
She'll be back to normal.

60
00:04:42.880 --> 00:04:47.640
Refresh my code a Neuer dot pic phrase.

61
00:04:48.460 --> 00:04:50.810
We got yellow and then cray cray.

62
00:04:50.830 --> 00:04:52.150
I can't even YOLO.

63
00:04:52.180 --> 00:04:54.500
Literally I can't even totes.

64
00:04:54.520 --> 00:04:57.930
OK so we're getting a random element each time.

65
00:04:57.940 --> 00:04:59.380
Can't stop won't stop.

66
00:04:59.410 --> 00:05:00.160
Great.

67
00:05:00.280 --> 00:05:07.960
I will stop what we're going to do now is call pick phrases instead of start using set interval so remember

68
00:05:07.960 --> 00:05:12.160
set interval takes two arguments.

69
00:05:12.160 --> 00:05:18.340
The thing that we wanted to call so I'll just write an anonymous function here and I'll start by just

70
00:05:18.370 --> 00:05:26.590
consider logging some random letters and then the second argument is how often I want it to repeat we'll

71
00:05:26.590 --> 00:05:29.050
do three thousand milliseconds.

72
00:05:29.050 --> 00:05:30.910
So right now we're not using pick phrase.

73
00:05:31.090 --> 00:05:42.070
I'm just concerned that logging some gibberish and if I execute and Neuer dot start wait 3 seconds come

74
00:05:42.070 --> 00:05:42.450
on.

75
00:05:42.460 --> 00:05:42.880
There we go.

76
00:05:42.880 --> 00:05:43.840
We got our first one.

77
00:05:43.900 --> 00:05:47.470
Three more seconds we get our second one three more seconds.

78
00:05:47.590 --> 00:05:52.560
We get the third one but what I want to do is console that log pick phrase.

79
00:05:52.810 --> 00:05:59.110
Now this is where the keyword this comes in because we know instead of a method start I can use this

80
00:05:59.170 --> 00:06:01.540
to refer to the object.

81
00:06:01.540 --> 00:06:03.820
So I could call this dot pick phrase.

82
00:06:03.820 --> 00:06:09.970
So if we just tried it once up top here in the method console that log this stop pick phrase.

83
00:06:11.490 --> 00:06:14.140
And I run this annoying dot start.

84
00:06:14.140 --> 00:06:19.720
We get literally and that works and then the set of interval kicks in.

85
00:06:19.720 --> 00:06:27.280
But if I want to call this code this function instead of constant logging I will do the exact same thing

86
00:06:27.480 --> 00:06:30.280
console dot log this dot pick phrase.

87
00:06:30.280 --> 00:06:33.520
But if I move it in this function everything changes

88
00:06:36.240 --> 00:06:40.310
the first one works because it's up top but then we get an error.

89
00:06:40.380 --> 00:06:42.810
This dot pick phrase is not a function.

90
00:06:42.810 --> 00:06:44.840
So why is this different.

91
00:06:44.850 --> 00:06:48.270
Where instead of this function why is it not working.

92
00:06:48.330 --> 00:06:49.800
Well let's look at this.

93
00:06:49.950 --> 00:06:53.340
What do you think the value of this is right here.

94
00:06:53.340 --> 00:06:54.100
One more time.

95
00:06:54.120 --> 00:06:56.930
Enjoy your dot start cray cray.

96
00:06:56.940 --> 00:06:58.970
That's coming from 9/11.

97
00:06:58.980 --> 00:07:01.720
And then this is set to the window.

98
00:07:01.860 --> 00:07:08.880
So why is this right here set to the object but inside another function it's set to the window.

99
00:07:08.880 --> 00:07:11.780
Remember this changes depending on how it's called.

100
00:07:11.790 --> 00:07:15.960
Now we're executing start ourselves as an object or as a method.

101
00:07:15.960 --> 00:07:22.410
We're doing this annoying dot start but this function is being executed not by us but by a set interval

102
00:07:23.110 --> 00:07:27.500
its source code calls this function every three seconds or whatever number we have here.

103
00:07:27.960 --> 00:07:29.250
So we're not calling it.

104
00:07:29.460 --> 00:07:35.580
And that means that this because the way it's called is set to be the window object just like if we

105
00:07:35.580 --> 00:07:41.070
had a random function and we called this we'd done this a couple of times in the past few videos if

106
00:07:41.070 --> 00:07:43.520
we don't execute it as a method on an object.

107
00:07:43.620 --> 00:07:46.610
This is set to the global scope to the window.

108
00:07:46.800 --> 00:07:53.100
So all of this has been set up to talk about aero functions in the past before air functions where a

109
00:07:53.100 --> 00:08:00.120
thing if we wanted to make this work if I want to have a reference to the object the version of this

110
00:08:00.120 --> 00:08:05.700
we have right here I want to be able to call this dot pick phrase in this function the nested function.

111
00:08:05.910 --> 00:08:10.200
What some people would do is make a variable and store it.

112
00:08:10.230 --> 00:08:18.720
You'd see things like const that equals this so we have a reference to this which is the object and

113
00:08:18.720 --> 00:08:26.160
if the console dialog that I call annoying dot start we'll still get an error because we're doing this

114
00:08:26.160 --> 00:08:30.330
stuff pick phrase but that is a reference to the previous.

115
00:08:30.330 --> 00:08:36.090
This from the level above from the start function.

116
00:08:36.090 --> 00:08:38.370
So this is not ideal writing it this way.

117
00:08:38.370 --> 00:08:44.490
Also they wouldn't have used const because it was nothing you would have seen var still not a great

118
00:08:44.490 --> 00:08:45.510
approach.

119
00:08:45.510 --> 00:08:50.250
Once we talk about bind call and apply there are other ways of getting this to work.

120
00:08:50.370 --> 00:08:57.570
But now that we have arrow functions it's actually easier if we instead use an arrow function here we

121
00:08:57.570 --> 00:08:59.310
avoid the problem entirely.

122
00:08:59.310 --> 00:09:01.290
Remember that arrow functions don't get their own.

123
00:09:01.290 --> 00:09:07.590
This the this in an arrow function won't change from the this of its parent or of its nearest.

124
00:09:07.590 --> 00:09:13.980
This the local execution context if we have appear this has a value we've already seen it.

125
00:09:14.010 --> 00:09:20.100
If I type this right here it's referencing the object because I'm not using an arrow function I'm getting

126
00:09:20.130 --> 00:09:25.760
a new this but if I turn this into an arrow function instead like that.

127
00:09:26.130 --> 00:09:28.480
Now we have no problem.

128
00:09:28.560 --> 00:09:30.120
It shouldn't be an issue.

129
00:09:30.180 --> 00:09:35.280
This is going to be the same in this arrow function because arrow functions don't get their own special.

130
00:09:35.280 --> 00:09:40.670
This that means it just relies on the this we have from start.

131
00:09:41.130 --> 00:09:48.450
Let's make sure we'll run it and come on.

132
00:09:48.570 --> 00:09:51.900
I can't even and three seconds later.

133
00:09:51.950 --> 00:09:53.210
Can't stop won't stop.

134
00:09:53.220 --> 00:09:54.130
Oh so annoying.

135
00:09:54.170 --> 00:09:55.120
Who built this thing.

136
00:09:55.280 --> 00:10:00.290
Cray cray and literally it's working.

137
00:10:00.290 --> 00:10:05.210
So that's really what I want to focus on in this video is showing you that sometimes aero functions

138
00:10:05.240 --> 00:10:11.480
are better to use because you don't want a new this but the other side of that coin is that they suck

139
00:10:11.600 --> 00:10:15.730
as regular methods on an object because you don't get access to the.

140
00:10:15.740 --> 00:10:20.570
This referencing the object your this references that window.

141
00:10:20.570 --> 00:10:26.900
So that's nice in a situation like we have here because we will use this from start but it's not nice

142
00:10:26.990 --> 00:10:32.630
if I had tried to write start as an arrow function instead of a regular function expression.

143
00:10:32.630 --> 00:10:35.390
Now one other thing this is not related to this.

144
00:10:35.540 --> 00:10:37.780
This interval is going on and on and on.

145
00:10:37.810 --> 00:10:40.800
We'll keep going until I refresh the page or close the window.

146
00:10:40.820 --> 00:10:46.190
It's best practice to provide a way to stop that interval to stop something from repeating over and

147
00:10:46.190 --> 00:10:49.140
over not to mention the fact that it's incredibly annoying.

148
00:10:49.190 --> 00:10:56.450
Whoever built this evil piece of code what we can do is save the return value from set interval set

149
00:10:56.450 --> 00:11:03.350
interval will return a I.D. and there's a another function we can call called Stop interval or no clear

150
00:11:03.350 --> 00:11:07.080
interval which will stop the interval from running.

151
00:11:07.100 --> 00:11:10.700
So how could I do this if I wanted to have a stop method.

152
00:11:11.210 --> 00:11:16.040
I want to call clear interval but I need to pass in an idea.

153
00:11:16.250 --> 00:11:18.410
But I'm getting the idea from here.

154
00:11:18.440 --> 00:11:19.880
This is going to return it.

155
00:11:20.060 --> 00:11:28.550
If I just make a variable like concept idea equals set interval I have no access to ideas over here.

156
00:11:28.550 --> 00:11:31.310
What I can do is add it to this.

157
00:11:31.400 --> 00:11:39.320
This dot timer idea let's call it that equals set interval let's take a look at what happens now if

158
00:11:39.320 --> 00:11:43.330
we inspect and Neuer open this up.

159
00:11:43.410 --> 00:11:49.440
Well I haven't executed I haven't called a start so I need to run that but now if we look at a Neuer

160
00:11:51.400 --> 00:11:57.780
we do have a timer I.D. that wasn't there before but the code ran start was executed.

161
00:11:57.850 --> 00:12:00.450
This is set to the object.

162
00:12:00.520 --> 00:12:06.940
So this time timer I.D. added a new property called timer I.D. just like we had done this except the

163
00:12:06.940 --> 00:12:12.580
I.D. is not hardcoded as one if we have multiple times we have different ideas.

164
00:12:12.700 --> 00:12:14.580
So just stop it.

165
00:12:14.740 --> 00:12:25.610
My method called Stop would just call clear interval this dot timer I.D. so set interval clear interval.

166
00:12:25.620 --> 00:12:31.020
That's not really the focus of this video if you're struggling with the syntax it's more about this

167
00:12:31.380 --> 00:12:35.180
and error functions and contexts and all that fun stuff.

168
00:12:35.340 --> 00:12:37.820
Let's add a quick console dot log at the end.

169
00:12:37.830 --> 00:12:41.380
Phew thank heavens that is over.

170
00:12:42.030 --> 00:12:42.560
OK.

171
00:12:42.750 --> 00:12:44.330
So I'm going to run my code.

172
00:12:44.490 --> 00:12:47.460
I'll do a Neuer dot start

173
00:12:50.120 --> 00:12:52.090
and eventually I will stop it.

174
00:12:52.100 --> 00:12:53.190
I won't run it yet.

175
00:12:53.210 --> 00:12:55.990
We'll get a few of them one more.

176
00:12:56.410 --> 00:12:57.090
OK one more.

177
00:12:57.090 --> 00:13:01.810
Other than cray cray and it stops iterating or it stops interval.

178
00:13:02.340 --> 00:13:07.230
I don't think that's the right terminology but it's not printing out those annoying phrases anymore.

179
00:13:07.320 --> 00:13:07.920
All right.

180
00:13:07.920 --> 00:13:13.380
So kind of an obscure demo but hopefully this illustrates that sometimes aero functions are great to

181
00:13:13.380 --> 00:13:17.390
use because of the very fact that they don't get their own this.

182
00:13:17.430 --> 00:13:22.620
So what seems like potentially a shortcoming in what is a shortcoming when it comes to defining methods

183
00:13:22.950 --> 00:13:28.860
is an advantage when you have to deal with nested functions and callbacks and different execution contexts

184
00:13:29.160 --> 00:13:31.520
where this gets really annoying.

185
00:13:31.670 --> 00:13:36.150
Use an error function and you don't have to worry about it because this will be identical to the this

186
00:13:36.330 --> 00:13:40.200
of the parent function of start in our case.

187
00:13:40.590 --> 00:13:43.490
This is just a just a joy to teach.

188
00:13:43.560 --> 00:13:47.520
Hopefully you're still there you're still alive you're surviving and you're with me.

189
00:13:47.520 --> 00:13:50.700
Next we're going to see some examples of using this in methods.

190
00:13:50.850 --> 00:13:55.980
And we'll talk more about why you would even bother creating methods why organize our functions like

191
00:13:55.980 --> 00:13:56.450
this.

192
00:13:56.490 --> 00:13:59.760
We could have just written a function called start and stop.

193
00:13:59.790 --> 00:14:02.000
We could have had a global variable called phrases.

194
00:14:02.100 --> 00:14:03.720
So we'll talk about that in the next video.
