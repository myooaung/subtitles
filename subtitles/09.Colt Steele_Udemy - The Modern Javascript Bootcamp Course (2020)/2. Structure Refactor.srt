1
00:00:00,880 --> 00:00:01,080
All right.

2
00:00:01,090 --> 00:00:05,680
Let's get started on the three factor in this video we're going to focus on extracting several different

3
00:00:05,680 --> 00:00:13,490
root handlers from our index j ust file into a new routes admin off dot J File instead it's a back inside

4
00:00:13,520 --> 00:00:13,860
my code.

5
00:00:13,860 --> 00:00:20,530
Ed I'm going to create a new folder inside my project directory called Roots then inside there I'll

6
00:00:20,530 --> 00:00:22,900
make another new folder called admin.

7
00:00:23,110 --> 00:00:28,900
And finally inside of that folder I'll make a new file called off dot J.S. inside of here is where we're

8
00:00:28,900 --> 00:00:31,060
going to essentially just cut and paste.

9
00:00:31,060 --> 00:00:36,760
To be honest all the different root handlers that we put together so far are gonna open up the index

10
00:00:36,760 --> 00:00:44,900
dot J S file I'm going to find our first root handler of app dot get sign up and I'm going to select

11
00:00:44,960 --> 00:00:50,290
everything down to the end of our sign in route handle it.

12
00:00:50,300 --> 00:00:55,870
So essentially just a right above the app dot listen I'm going to highlight all that stuff I'm going

13
00:00:55,870 --> 00:01:01,890
to cut it over to off dot J J.S. and paste

14
00:01:04,690 --> 00:01:04,930
OK.

15
00:01:04,960 --> 00:01:16,480
So I've now got inside of here one 2 3 4 and 5 different root handlers.

16
00:01:16,540 --> 00:01:20,420
Now we need to immediately start to require some different stuff into this file.

17
00:01:20,420 --> 00:01:23,960
For example this file definitely relies upon the user's repo.

18
00:01:24,020 --> 00:01:28,220
So we need to make sure that we require the user's repo into this update J.S. file.

19
00:01:28,280 --> 00:01:30,800
Let's do that right away at the top.

20
00:01:30,800 --> 00:01:37,460
I'm going to add in concept users repo is required and then remember any time that we require in a file

21
00:01:37,460 --> 00:01:42,650
that you and I wrote we have to provide a relative path from this off dot J.S. file that we're currently

22
00:01:42,650 --> 00:01:45,740
working in to the file that we want to get access to.

23
00:01:45,740 --> 00:01:51,350
So in this case we have to go up into the roots directory and then into our home directory and then

24
00:01:51,410 --> 00:01:58,540
into repositories and then get the users file but to do so we're going to go up into roots.

25
00:01:58,640 --> 00:02:02,040
So dot dot slash up into the root rectory.

26
00:02:02,060 --> 00:02:10,190
So another dot dot slash and go into repositories and then get users.

27
00:02:10,300 --> 00:02:13,740
That's how we write out that require statement okay.

28
00:02:13,780 --> 00:02:15,020
That looks good.

29
00:02:15,020 --> 00:02:20,030
Next up we'll do a quick scan and see if there are any other things we need to require inside of here.

30
00:02:20,090 --> 00:02:25,300
So I'm looking through really quickly I don't really see anything else that we are leaving out besides

31
00:02:25,330 --> 00:02:26,130
users repo.

32
00:02:26,700 --> 00:02:27,130
OK.

33
00:02:27,190 --> 00:02:29,950
So that's a pretty easy fix aren't the require statements.

34
00:02:29,950 --> 00:02:31,050
The next two we need to figure out.

35
00:02:31,060 --> 00:02:33,300
That's gonna be a little bit more complicated is.

36
00:02:33,310 --> 00:02:36,120
Well the root handlers themselves.

37
00:02:36,280 --> 00:02:41,410
So all of our different root handlers we are changing on a different route to our app object but the

38
00:02:41,410 --> 00:02:45,420
app object is created inside the index not J.S. file.

39
00:02:45,490 --> 00:02:50,690
So how are we going to somehow associate all these different root handlers with that app object well

40
00:02:50,700 --> 00:02:55,980
in order to get all these root handlers kind of migrated or linked back up inside of the index not just

41
00:02:55,980 --> 00:02:56,560
file.

42
00:02:56,640 --> 00:03:01,530
We're going to create something called a sub router inside of the order J.S. files so the one that we

43
00:03:01,530 --> 00:03:08,730
just created a sub router is essentially the same kind of router that is built into the app that we

44
00:03:08,730 --> 00:03:16,450
created back over here or we can create a separate router separately or less inside that off J.S. file

45
00:03:16,930 --> 00:03:23,820
export it then require it into index not J.S. and link it up to at even though that might sound really

46
00:03:23,820 --> 00:03:24,550
complicated.

47
00:03:24,600 --> 00:03:29,670
Honestly at the end of the day you can imagine that we're really just going to create a second app inside

48
00:03:29,670 --> 00:03:36,740
of here more or less associate our roots with it export that app required into indexed J.S. and link

49
00:03:36,750 --> 00:03:38,040
it up to this one.

50
00:03:38,430 --> 00:03:40,690
That's kind of what you can pretend what is happening.

51
00:03:40,800 --> 00:03:43,380
It's really not going to be as bad as it might sound.

52
00:03:43,380 --> 00:03:47,690
So here's what we're going to do at the very top I'm going to require in

53
00:03:50,340 --> 00:03:59,860
Express and then after all of our require statements I'm gonna write out ruder equals express dot router.

54
00:03:59,910 --> 00:04:00,350
Like so.

55
00:04:00,890 --> 00:04:05,700
So even though I'm calling this router we really can think of it as being just like that app object.

56
00:04:05,700 --> 00:04:09,920
It's essentially an object that's gonna keep track of all of the different root handlers that we set

57
00:04:09,920 --> 00:04:10,560
up.

58
00:04:10,560 --> 00:04:15,930
The only difference is that with this router object we can link it back up to our app inside the index

59
00:04:15,930 --> 00:04:19,450
not just file so to make use of this router.

60
00:04:19,510 --> 00:04:24,610
We're going to go to all five of our root handlers inside of Opt-Out J.S. and wherever we currently

61
00:04:24,610 --> 00:04:27,010
have app we're going to replace it with router.

62
00:04:27,010 --> 00:04:28,830
That's pretty much it.

63
00:04:28,860 --> 00:04:31,300
Here's number one I'll replace app with router

64
00:04:34,050 --> 00:04:36,210
here's an order to replace app with router

65
00:04:39,480 --> 00:04:53,350
number three number four and number five and at the very bottom to file we'll do a module dot exports

66
00:04:54,070 --> 00:04:58,510
of the router so we can make all these different root handlers available to other files inside of our

67
00:04:58,510 --> 00:05:00,480
project.

68
00:05:00,650 --> 00:05:06,730
Now to associate this router with our app we'll go back to index dot J.S. at the top.

69
00:05:06,840 --> 00:05:11,070
I'm going to remove the user's repo require statement since we don't need that inside of here anymore.

70
00:05:13,050 --> 00:05:17,430
Or then require in the router that we just created from that update J.S. file.

71
00:05:17,570 --> 00:05:29,370
So I'll say off router is roots admin off and then to hook up that router with our app object and make

72
00:05:29,370 --> 00:05:35,540
sure that all the routes so we bound to it are accessible just as they were before right after our apt

73
00:05:35,540 --> 00:05:36,710
use cookie session.

74
00:05:36,710 --> 00:05:40,700
Make sure it's right after really important that we add this after the two middleware so we've hooked

75
00:05:40,700 --> 00:05:45,980
up so far we'll do app not use off router.

76
00:05:46,150 --> 00:05:49,650
Like so and that's pretty much it.

77
00:05:49,680 --> 00:05:54,020
So that is how we are going to extract different root handlers into different files.

78
00:05:54,030 --> 00:05:57,430
All you have to do is create the other file inside that file.

79
00:05:57,450 --> 00:06:03,670
We're going to create a router we'll associate some different root handlers with that router well then

80
00:06:03,730 --> 00:06:10,150
import the router into our index dot J as file and do app dot use whatever the name of the router it's

81
00:06:12,220 --> 00:06:14,560
not to make sure that we didn't break anything as usual.

82
00:06:14,560 --> 00:06:17,730
Let's go back over to our browser.

83
00:06:17,740 --> 00:06:24,090
I'll go to local those three thousand refresh and whatever your l I try to access here like sign up

84
00:06:24,480 --> 00:06:27,380
I should still see the same forms that I saw before.

85
00:06:27,530 --> 00:06:33,720
Log out or see me sign out my mistake and so on to make sure that all the same year ls so we've been

86
00:06:33,720 --> 00:06:39,480
accessing so far still work with the of course obvious exception of the route routes we don't have anything

87
00:06:39,480 --> 00:06:40,740
at our route route anymore.

88
00:06:40,740 --> 00:06:46,620
We used to have our sign up form there but we extracted that into a separate u r l of slash sign up

89
00:06:48,060 --> 00:06:48,370
okay.

90
00:06:48,390 --> 00:06:51,510
That is a pretty good start for our refactor so quick pause right here.

91
00:06:51,540 --> 00:06:55,830
When we come back the next video we're gonna start to extract a lot of the HD email that we're putting

92
00:06:55,830 --> 00:07:00,690
together into a couple of different files that we're going to locate inside this abuse directory.

93
00:07:00,690 --> 00:07:02,750
So let's take care of that in just a moment.
