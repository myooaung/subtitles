1
00:00:00,420 --> 00:00:04,690
Next up we have yet another array method that expects you to pass in a callback.

2
00:00:04,710 --> 00:00:10,910
It's called The Filter filter allows us to filter out subsets of an array.

3
00:00:10,920 --> 00:00:14,400
Basically we re Passing a function which returns True or false.

4
00:00:14,400 --> 00:00:21,270
A test function and if an element passes that function it will be added into the returned or the result

5
00:00:21,270 --> 00:00:22,190
array.

6
00:00:22,230 --> 00:00:27,690
So if we had an array of a bunch of numbers we want to create a new array with only the Evens we could

7
00:00:27,690 --> 00:00:29,520
filter that evens out.

8
00:00:29,640 --> 00:00:34,950
It doesn't update the original it doesn't mutate it so filtering it out makes it sound like we're removing

9
00:00:34,950 --> 00:00:35,490
them.

10
00:00:35,550 --> 00:00:41,030
We're really just creating a copy with specific targeted information or elements.

11
00:00:41,220 --> 00:00:43,080
So let's do a couple of examples.

12
00:00:43,140 --> 00:00:44,430
We'll start simple with numbers.

13
00:00:44,460 --> 00:00:49,250
I know it's boring concept numbers equals and I'll just type some random numbers in here.

14
00:00:49,320 --> 00:00:51,150
That's good enough there.

15
00:00:51,300 --> 00:00:58,460
And if I wanted to filter so that I get a new array only with odd numbers I could call numbers or no

16
00:00:58,460 --> 00:01:07,920
doubt filter and I'll use a single line arrow function implicit return and is my parameter and mod 2

17
00:01:08,700 --> 00:01:09,330
equals 1.

18
00:01:09,330 --> 00:01:11,500
That's how we know if something is odd.

19
00:01:11,580 --> 00:01:14,300
So this function right here is a boolean function.

20
00:01:14,430 --> 00:01:16,200
It's what's called a test function.

21
00:01:16,260 --> 00:01:20,550
At least if you look at the docs for a filter it returns true or false.

22
00:01:20,580 --> 00:01:26,580
So filter it's going to start with an empty array and it's going to try thirty four and pass it into

23
00:01:26,580 --> 00:01:27,940
our test function.

24
00:01:28,020 --> 00:01:28,770
Does that pass.

25
00:01:28,770 --> 00:01:30,060
Do we get true.

26
00:01:30,060 --> 00:01:31,080
No we do not.

27
00:01:31,080 --> 00:01:35,790
Because this is even so it goes to 35 that does pass this test.

28
00:01:35,790 --> 00:01:37,190
It returns true.

29
00:01:37,190 --> 00:01:41,970
So thirty five is added to the result and then sixty seven would be added.

30
00:01:41,970 --> 00:01:43,940
And then fifty four would not be added.

31
00:01:44,040 --> 00:01:47,940
And then as soon as it hits the end of the array it returns this result.

32
00:01:48,240 --> 00:01:51,860
So I can save this to a variable called odds.

33
00:01:52,350 --> 00:01:54,450
Let's check it out.

34
00:01:54,930 --> 00:01:59,190
There's odds it contains the four odd numbers.

35
00:01:59,190 --> 00:02:04,850
If we look at numbers it's not altered in any way so we're not removing them.

36
00:02:04,890 --> 00:02:10,680
We're simply creating a new array with those values we could do the same thing for evens.

37
00:02:10,770 --> 00:02:18,760
It'd be very simple change name the variable evens and then say num mod two equals zero.

38
00:02:18,760 --> 00:02:21,750
There's no remainder when we divide by two.

39
00:02:21,750 --> 00:02:27,150
So numbers unchanged but now we have evens containing the even numbers.

40
00:02:27,150 --> 00:02:31,570
If I wanted to get large numbers I'll call them big numbers.

41
00:02:31,770 --> 00:02:40,930
I could do num stop filter with the parameter name of and again where n is greater than How about 50.

42
00:02:41,070 --> 00:02:46,740
So this will give me an array of numbers where each number is larger than 50.

43
00:02:46,940 --> 00:02:53,160
To save my code run it over here we'll look at big numbers and now we have sixty seven for 1 0 9 and

44
00:02:53,160 --> 00:02:53,870
1 0 2.

45
00:02:54,180 --> 00:02:57,150
So we write a function that returns true or false.

46
00:02:57,150 --> 00:03:01,630
If that function returns true for an element it's added into the result that we get.

47
00:03:02,100 --> 00:03:03,960
Otherwise it's ignored.

48
00:03:03,960 --> 00:03:06,250
Let's do a few more complex examples.

49
00:03:06,300 --> 00:03:12,540
I've updated this books array to include more books but also each book has some new properties.

50
00:03:12,600 --> 00:03:17,310
We have a genre or genres property which is an array of genres.

51
00:03:17,310 --> 00:03:19,900
We have more books that each have a rating.

52
00:03:20,160 --> 00:03:21,210
And that's pretty much it.

53
00:03:21,230 --> 00:03:23,780
There's what 10 or so books in here maybe eight.

54
00:03:24,660 --> 00:03:30,910
Now imagine that we're actually creating a e-commerce bookstore or a Web site like good reads dot com

55
00:03:30,930 --> 00:03:37,620
where you can search for books add them to your reading list and it's a show a social network for books.

56
00:03:37,620 --> 00:03:43,890
A lot of the time we want to give users the ability to search for things to search for a book based

57
00:03:43,890 --> 00:03:51,670
off of a title or to narrow down search results so that they could check a box that says rating you

58
00:03:51,680 --> 00:03:56,250
know a four star or greater rating or only fantasy books.

59
00:03:56,430 --> 00:04:00,430
We would use filter to narrow down the results that we're showing.

60
00:04:00,870 --> 00:04:02,700
So let's do a couple examples.

61
00:04:02,760 --> 00:04:04,040
Let's start with a simple one.

62
00:04:04,230 --> 00:04:10,440
Let's select the ratings are the books that have high ratings so their rating is greater than maybe

63
00:04:10,440 --> 00:04:11,370
four point three.

64
00:04:12,660 --> 00:04:23,970
So that would be concept good books equals books dot filter for B we want b to be greater than four

65
00:04:23,970 --> 00:04:24,720
point three.

66
00:04:26,160 --> 00:04:29,550
Let's see what we get good books.

67
00:04:29,550 --> 00:04:29,970
All right.

68
00:04:30,360 --> 00:04:32,060
Well that's my fault.

69
00:04:32,190 --> 00:04:34,180
I'm comparing the entire book.

70
00:04:34,200 --> 00:04:38,100
This is an object I need to compare B that rating.

71
00:04:38,100 --> 00:04:40,140
Try that again.

72
00:04:40,530 --> 00:04:46,440
And now we have four books bone which has a rating of four point for two gentlemen in Moscow.

73
00:04:46,440 --> 00:04:48,240
Great book four point thirty six.

74
00:04:48,240 --> 00:04:49,130
Name of the wind.

75
00:04:49,130 --> 00:04:50,610
Four point five four.

76
00:04:50,610 --> 00:04:51,780
And the way of kings.

77
00:04:51,780 --> 00:04:53,680
Four point six five.

78
00:04:53,700 --> 00:04:53,940
Okay.

79
00:04:53,960 --> 00:04:56,160
So we just grabbed the highest rated books.

80
00:04:56,220 --> 00:04:58,080
But again books is unchanged.

81
00:04:58,080 --> 00:04:59,670
It still has nine books in it.

82
00:05:00,690 --> 00:05:09,990
If a user then wanted to pivot and look at let's say only fantasy books Let's filter where genre includes

83
00:05:10,020 --> 00:05:10,600
fantasy.

84
00:05:11,160 --> 00:05:14,720
So we have a couple of them here in order to do that.

85
00:05:14,820 --> 00:05:21,670
We'll use filter so concept fantasy books equals book Stop filter.

86
00:05:21,700 --> 00:05:27,940
This one is probably going to be a bit long for a single line so I'll do for each book or that would

87
00:05:27,940 --> 00:05:30,270
be the name of the parameter.

88
00:05:30,280 --> 00:05:33,460
I'll use an implicit return with parentheses.

89
00:05:33,820 --> 00:05:37,140
We want book dot chakras.

90
00:05:37,330 --> 00:05:42,460
Dot includes fantasy.

91
00:05:42,460 --> 00:05:46,200
We could do this on one line but hopes no semicolon in there.

92
00:05:46,480 --> 00:05:48,000
And let's see what we get.

93
00:05:48,010 --> 00:05:49,300
Run it over here.

94
00:05:49,300 --> 00:05:55,430
Fantasy books we get five books each one should include fantasy as one of its genres.

95
00:05:55,630 --> 00:05:57,710
So this one has fantasy.

96
00:05:57,760 --> 00:06:00,030
This one has fantasy American Gods.

97
00:06:00,040 --> 00:06:04,630
Bowen has fantasy and good omens does as well.

98
00:06:04,720 --> 00:06:13,210
Okay let's do another example where we filter for short form books where basically it's either essays

99
00:06:13,390 --> 00:06:14,320
or short stories.

100
00:06:14,320 --> 00:06:20,380
I don't know what you would call those small books made up of smaller pieces anthology books we'll call

101
00:06:20,380 --> 00:06:27,520
it short form so const short form equals books that filter book is Our parameter name and then I'll

102
00:06:27,520 --> 00:06:29,040
do another implicit return.

103
00:06:29,200 --> 00:06:38,340
We want to check if book dot genres dot includes either short stories.

104
00:06:38,560 --> 00:06:48,100
Just make sure it was short stories plural or I want essays so I'll do or book out genres that includes

105
00:06:49,810 --> 00:06:52,180
essays.

106
00:06:52,230 --> 00:06:53,970
Let's see what we get for short form.

107
00:06:54,780 --> 00:06:55,770
We have two results.

108
00:06:55,770 --> 00:06:58,830
The first one is changing my mind by Zadie Smith.

109
00:06:59,010 --> 00:07:01,080
In genres we can see essays.

110
00:07:01,380 --> 00:07:07,590
The second one is by Richard Powers called the over story really cool book short stories is in genres

111
00:07:07,590 --> 00:07:08,530
as well.

112
00:07:09,300 --> 00:07:12,930
So a whole bunch of different ways to filter just this one array of books.

113
00:07:12,930 --> 00:07:16,860
Think of any e-commerce website you can filter by rating.

114
00:07:16,860 --> 00:07:20,640
You can filter by searching for something so let's try that.

115
00:07:20,640 --> 00:07:28,740
Let's search through a title and find books that contain I don't know the in their title so to mimic

116
00:07:28,740 --> 00:07:35,510
a search box let's make a variable called query and this will be coming from a user.

117
00:07:35,550 --> 00:07:42,270
We don't know what it is so I'll leave it blank for now and then we'll do books dot filter.

118
00:07:42,270 --> 00:07:50,250
I'll save this to a variable called results and we'll filter where the book title includes that query

119
00:07:50,640 --> 00:07:52,300
and to be extra sure.

120
00:07:52,350 --> 00:08:01,940
We'll also down case everything so it's case insensitive so book we'll do book dot title dot to lower

121
00:08:01,940 --> 00:08:12,450
case dot includes and then I want to make sure I'm lower casing the query as well query dot to lowercase

122
00:08:14,520 --> 00:08:21,510
let's give this a bit more room and honestly in this scenario this is fine as a one liner but just for

123
00:08:21,510 --> 00:08:22,610
some variety.

124
00:08:22,710 --> 00:08:29,160
I'll break this up so I'll use a regular aero function where I need to explicitly return something so

125
00:08:29,190 --> 00:08:31,370
I'll extract this to a variable I'll call it.

126
00:08:31,410 --> 00:08:39,440
Title equals folks out title or book titled to lower case lowercase and then I'll just do return title

127
00:08:39,450 --> 00:08:46,520
DOD includes query DOD not local lowercase regular lowercase.

128
00:08:46,710 --> 00:08:52,380
All right so whatever the user searches for let's say they're searching for Mm hmm.

129
00:08:52,380 --> 00:08:55,240
Is there anything we could get multiple results with.

130
00:08:55,560 --> 00:09:03,060
I guess we've got the it's quite boring but if the user types the we're going to down case this right

131
00:09:03,060 --> 00:09:08,880
here and we're going to compare it to every book title by down casing the title so that we don't care

132
00:09:08,880 --> 00:09:10,140
about casing at all.

133
00:09:10,170 --> 00:09:16,200
Then we'll just check as each title include that lower case query if it does this returns true.

134
00:09:16,320 --> 00:09:17,890
It gets added to our results.

135
00:09:17,910 --> 00:09:19,770
Let's run it let's get results.

136
00:09:20,790 --> 00:09:22,320
We get 5.

137
00:09:22,320 --> 00:09:28,200
They all contain the phone the complete as a complete journey complete story complete addition the name

138
00:09:28,200 --> 00:09:31,910
of the wind the over story the way of kings and Lord of the Flies.

139
00:09:32,070 --> 00:09:35,670
Here we don't have an upper case the here we do have uppercase.

140
00:09:36,090 --> 00:09:38,850
So those are some examples of using filter.

141
00:09:38,850 --> 00:09:40,140
It's a great method.

142
00:09:40,140 --> 00:09:46,790
There's so many applications where you need to narrow down an array to smaller a smaller portion.

143
00:09:46,800 --> 00:09:51,420
Remember you're not actually updating or mutating the original but it gives you a return value that

144
00:09:51,420 --> 00:09:53,480
you can save and then work with.

145
00:09:53,490 --> 00:09:55,270
So I use filter all the time.

146
00:09:55,380 --> 00:10:00,090
It's relatively simple you pass in a test function that you write it returns true or false.

147
00:10:00,090 --> 00:10:04,910
If it's true for a given element then that element is added to the filtered result array.
