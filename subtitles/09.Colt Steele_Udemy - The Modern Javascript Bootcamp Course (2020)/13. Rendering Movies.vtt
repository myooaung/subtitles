WEBVTT
1
00:00:01.500 --> 00:00:05.760
Now that we have all of our data inside the on input function let's make sure that we can iterate over

2
00:00:05.760 --> 00:00:07.090
this list of movies right here.

3
00:00:07.320 --> 00:00:12.300
And for every movie that we have fetched we're going to try to create a div element that kind of summarizes

4
00:00:12.300 --> 00:00:13.020
the movie.

5
00:00:13.200 --> 00:00:16.030
In particular I want to take every movie that we fetch.

6
00:00:16.200 --> 00:00:19.360
I WANT TO GET THE POSTER PRINTED OUT as an image on the screen.

7
00:00:19.460 --> 00:00:22.270
And I want to show that title for every movie as well.

8
00:00:22.470 --> 00:00:25.090
So let's get to it.

9
00:00:25.110 --> 00:00:29.820
I'm going to remove that console log and I'm going to replace it with a for of loop.

10
00:00:30.000 --> 00:00:37.750
So I'll say for let movie of movies like so now we can use a for of loop right here.

11
00:00:37.770 --> 00:00:39.060
We could use a normal for loop.

12
00:00:39.060 --> 00:00:42.150
We can use a while loop for each map statement.

13
00:00:42.180 --> 00:00:43.560
It's really up to you.

14
00:00:43.770 --> 00:00:48.480
Personally I rather enjoy using four of loops because they're really easy to see and pretty easy to

15
00:00:48.480 --> 00:00:50.220
understand as well.

16
00:00:50.250 --> 00:00:54.900
So as we start to iterate over this list of movies right here we're going to get the movie variable

17
00:00:54.900 --> 00:00:56.160
inside the loop.

18
00:00:56.160 --> 00:01:01.290
So that movie variable is going to be the same objects that we're looking at inside of our console right

19
00:01:01.290 --> 00:01:02.270
here.

20
00:01:02.370 --> 00:01:07.920
So that right there is going to be the first movie variable and then we're going to go over the second

21
00:01:08.430 --> 00:01:13.440
movie and then so on it's now inside of my loop.

22
00:01:13.660 --> 00:01:14.680
I'm going to create a div

23
00:01:20.540 --> 00:01:26.570
and then going to set the inner each to Mel on this div so I'll say div dot inner each team l I'm going

24
00:01:26.570 --> 00:01:32.960
to use a set of back ticks here like so because I want to have a multi line string so I can nicely format

25
00:01:32.990 --> 00:01:39.080
my HCM although I want to write out make note that you are supposed to use back tricks here we can not

26
00:01:39.080 --> 00:01:43.940
use single quotes to form a multi line string in JavaScript that would be a syntax error to make sure

27
00:01:43.940 --> 00:01:47.660
you have a back to character instead than inside of here.

28
00:01:47.670 --> 00:01:55.420
I'm going to display an image that's going to show the poster for my movie to get the Your L for this

29
00:01:55.450 --> 00:01:57.420
image or the s our C property.

30
00:01:57.430 --> 00:02:01.210
Let's take another quick look at the movie object that we are working with.

31
00:02:01.230 --> 00:02:04.710
So again this is the movie object that we are currently working with right here.

32
00:02:04.710 --> 00:02:12.480
Notice that it has a poster property and that is a your URL to the poster image or this movie also take

33
00:02:12.480 --> 00:02:14.890
note that its poster with a capital P..

34
00:02:14.910 --> 00:02:21.240
So we need to make sure that we spell the property with capital P inside of our code as well so back

35
00:02:21.240 --> 00:02:27.580
over here we're going to set the s RC on the image and remember to inject a javascript variable into

36
00:02:27.640 --> 00:02:29.440
a string formed with tactics.

37
00:02:29.440 --> 00:02:31.240
We use a dollar sign.

38
00:02:31.240 --> 00:02:37.800
Curly braces like so we'll say movie dot poster with a capital P..

39
00:02:37.810 --> 00:02:39.820
Now this right here is not quite correct.

40
00:02:39.820 --> 00:02:44.200
There's a very small gotcha in there in order to write out a correct image tag.

41
00:02:44.200 --> 00:02:50.670
We're supposed to write s our see a set of double quotes and then our link inside of their do whatever

42
00:02:50.670 --> 00:02:52.700
it might be right now.

43
00:02:52.710 --> 00:02:57.870
If we ran this code right here it would just take whatever the U.R.L. is and stick the oil directly

44
00:02:57.870 --> 00:03:00.250
in without any double quotes.

45
00:03:00.280 --> 00:03:04.920
So in other words we would end up with something like that which is not quite what we want.

46
00:03:04.920 --> 00:03:07.350
Again we want to have some double quotes around it.

47
00:03:07.440 --> 00:03:09.240
Let's make sure we get double quotes around.

48
00:03:09.240 --> 00:03:11.320
Well we have to put them in ourselves.

49
00:03:11.340 --> 00:03:13.920
I'm going to put double quote right there and a double quote.

50
00:03:13.920 --> 00:03:18.760
On the other side next up I'm going to put an H one right after it.

51
00:03:20.540 --> 00:03:24.920
Inside that each one I'm going to try to show the title of the movie so we can get the title of the

52
00:03:24.920 --> 00:03:27.280
movie by referencing the title property.

53
00:03:27.290 --> 00:03:35.150
And again notice it has a capital T inside the H one I'll do dollar sign curly braces with movie dot

54
00:03:35.540 --> 00:03:35.900
title

55
00:03:39.150 --> 00:03:39.530
okay.

56
00:03:39.570 --> 00:03:40.880
That looks pretty good.

57
00:03:40.890 --> 00:03:45.860
It's now the last thing we need to do is take the day we just created and insert it into her dorm somewhere

58
00:03:45.860 --> 00:03:47.830
so that we can actually see it.

59
00:03:47.870 --> 00:03:52.340
Let's go back over to our index dot each team L and we're going to make sure that we create some element

60
00:03:52.340 --> 00:03:58.160
inside there that's going to list out all these different divs that we are creating they'll go back

61
00:03:58.160 --> 00:04:05.810
over I'll find where we have our class Container and I'm going to add in a div with an I.D. of target.

62
00:04:05.840 --> 00:04:11.000
This is not a really good practice right here to use an idea of target because well we might end up

63
00:04:11.000 --> 00:04:16.130
with many different targets so to speak or things that we want to render content to inside of our application

64
00:04:16.690 --> 00:04:21.890
but to be honest we're going to very quickly replace this date with something else like very very soon.

65
00:04:21.890 --> 00:04:28.080
And that's why I'm just going to use it here very temporarily it's now back after we create our div

66
00:04:28.950 --> 00:04:35.420
we can use a query selector to select that element with I.D. of target that we just added We'll do a

67
00:04:35.420 --> 00:04:44.210
document dot query selector I'll look for pound target and I'll append child the div we've just created

68
00:04:46.660 --> 00:04:54.370
okay and that should be at going to save this I'll go back over I'll refresh the page then I'll do a

69
00:04:54.370 --> 00:04:58.270
search for Avengers and there we go.

70
00:04:58.570 --> 00:05:06.100
So I can see my first poster right there I can see a title the next one and so on down the list so we

71
00:05:06.100 --> 00:05:08.250
can definitely at least show some content now.

72
00:05:08.350 --> 00:05:12.970
However I want you to notice that while I was typing this out I also got an error over here which is

73
00:05:12.970 --> 00:05:14.190
kind of unexpected.

74
00:05:14.350 --> 00:05:15.750
So let's take a quick pause.

75
00:05:15.820 --> 00:05:20.720
It looks like everything worked but didn't quite work out quite as expected because we got an error.

76
00:05:20.890 --> 00:05:22.190
So we'll come back in just a moment.

77
00:05:22.210 --> 00:05:25.630
We're gonna figure out why we're seeing this error message and we're going to try to fix it.
