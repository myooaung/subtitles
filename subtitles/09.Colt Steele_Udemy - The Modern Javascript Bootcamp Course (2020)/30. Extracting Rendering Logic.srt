1
00:00:00,560 --> 00:00:04,620
Our first test worked out pretty well so let's continue on with this refactor.

2
00:00:04,620 --> 00:00:09,590
I'm inside of my index dot J.S. file inside of here we've got the three create auto complete function

3
00:00:09,590 --> 00:00:10,790
calls in a row.

4
00:00:10,790 --> 00:00:13,040
We don't really need three different auto completes.

5
00:00:13,040 --> 00:00:19,160
I just did that for testing purposes so I'm going to delete the two right there and we're going to go

6
00:00:19,160 --> 00:00:25,400
back to just one call to create auto complete I'm also going to go to my index dot HDMI file and remove

7
00:00:25,430 --> 00:00:29,450
those two extra Divs.

8
00:00:29,500 --> 00:00:32,470
All right so let's continue on with this refactor.

9
00:00:32,470 --> 00:00:37,900
I want to continue to add in some additional functions to that config object that we're passing to the

10
00:00:37,960 --> 00:00:40,130
create autocomplete function.

11
00:00:40,150 --> 00:00:45,190
We're then going to refactor the function to make sure that it uses the functions we had provided instead

12
00:00:45,190 --> 00:00:49,950
of locating all that logic directly inside of the Create autocomplete function.

13
00:00:49,960 --> 00:00:53,740
So I think the next one we should try working on is render option.

14
00:00:53,770 --> 00:00:56,230
So this is going to be a function that is going to be called.

15
00:00:56,230 --> 00:01:01,990
With each different option or each kind of object that we're getting back from that API we're going

16
00:01:01,990 --> 00:01:07,210
to pass it into this function and that function needs to return some kind of string that's going to

17
00:01:07,210 --> 00:01:14,050
be the h t email that shows up inside of the dropdown So in short if we go back over to autocomplete

18
00:01:14,070 --> 00:01:22,710
J.S. year create autocomplete and if we go down to our for of loop right now right about here essentially

19
00:01:23,460 --> 00:01:25,580
where we're setting the inter h t melody option.

20
00:01:25,590 --> 00:01:31,230
Remember we had said that this is assuming 100 percent that we always want to show an image.

21
00:01:31,380 --> 00:01:35,850
And then the title right next to it but we might decide that we want our autocomplete to work in some

22
00:01:35,850 --> 00:01:36,780
very different way.

23
00:01:36,810 --> 00:01:39,900
Like for example maybe we won't have an image at all.

24
00:01:40,100 --> 00:01:40,880
So right now.

25
00:01:40,880 --> 00:01:45,890
This would be really challenging to customize because this is code that is located inside of our autocomplete

26
00:01:45,980 --> 00:01:50,270
file which we want to be as reusable as possible.

27
00:01:50,270 --> 00:01:56,000
So instead I want to extract the logic that decides what this thing looks like to a helper function

28
00:01:56,120 --> 00:01:58,390
on that config object.

29
00:01:58,630 --> 00:02:03,490
We're going to assume that that helper function is going to be called with each movie object we are

30
00:02:03,490 --> 00:02:04,900
iterating over.

31
00:02:04,960 --> 00:02:07,800
Now I know you see the variable movie inside of here quite a bit still.

32
00:02:07,810 --> 00:02:12,280
And like I'm still using the term movie we are going to eventually refactor the terminology inside of

33
00:02:12,280 --> 00:02:14,200
here to not refer to movie anymore.

34
00:02:14,260 --> 00:02:17,180
I just want to throw that out there really quickly.

35
00:02:17,420 --> 00:02:24,540
So back inside of our next j ust file and when to find where we create the autocomplete I'm gonna pass

36
00:02:24,540 --> 00:02:33,630
in a second property into this object I'm going to call it render option we could make this a function

37
00:02:33,660 --> 00:02:39,630
like so we can also assign it as an arrow function no difference whatsoever we can really use either

38
00:02:39,630 --> 00:02:47,000
syntax so passed into this function I'm going to expect to receive some object like each individual

39
00:02:47,000 --> 00:02:54,360
object that represents some possible movie or whatever else and I'll just refer to it as movie then

40
00:02:54,360 --> 00:02:59,130
inside we're going to generate some H CML and return it and this will be the H SYMBOL to get shown for

41
00:02:59,130 --> 00:03:05,080
each individual option we're going to have to extract all the logic we had around that it's not only

42
00:03:05,080 --> 00:03:10,600
the HMO right there we also have to extract that line where we got the image s our C is remember in

43
00:03:10,600 --> 00:03:16,650
some cases the poster link was an A and we needed to make sure we handle that as well so I'm going to

44
00:03:16,650 --> 00:03:23,240
take the image s our C line right there I'm going to cut it I'm gonna go paste it back inside of render

45
00:03:23,240 --> 00:03:29,310
option I'll then go and get the inner each team mail that we had created right here.

46
00:03:29,360 --> 00:03:36,750
I'm gonna cut it go back over to render option I'll paste it in here and return it.

47
00:03:38,340 --> 00:03:43,700
So now we have extracted all of our rendering logic into this render option function and it's going

48
00:03:43,700 --> 00:03:49,420
to be called many times automatically with each movie that the autocomplete fetches.

49
00:03:49,520 --> 00:03:54,170
Now we just need to make sure that the accrete autocomplete function references this function to figure

50
00:03:54,170 --> 00:04:00,200
out what each option should look like so to do so we'll go back over to the other file I'm going to

51
00:04:00,200 --> 00:04:07,870
go up to the very top where we're going to make sure that we d structure off the render option function

52
00:04:09,280 --> 00:04:14,200
and we'll go back down to that same or of loop.

53
00:04:14,250 --> 00:04:15,170
It is right here.

54
00:04:15,860 --> 00:04:21,680
I'll find where I left the option enter HCM CML so to generate the H CML to show for this option we're

55
00:04:21,680 --> 00:04:29,590
going to call render option with the movie that we are currently iterating over and there we go.

56
00:04:29,680 --> 00:04:36,160
Now once again we've extracted some custom logic that is only appropriate for this movie related stuff.

57
00:04:36,160 --> 00:04:39,400
And if we ever decide that we want the autocomplete to look very different.

58
00:04:39,430 --> 00:04:44,320
So if you want to generate some H team mail for each individual option we only have to update the render

59
00:04:44,350 --> 00:04:52,720
option function back inside of index J Yes it's all now save this and do a quick test makeover here.

60
00:04:52,720 --> 00:04:54,180
I'll refresh.

61
00:04:54,180 --> 00:04:57,640
I'll look for Avengers and I still see the same thing.

62
00:04:57,640 --> 00:05:02,710
Let's try making a change to the render option function just to see how easy it is now to make a change

63
00:05:02,710 --> 00:05:07,240
and get something looks slightly different as a quick reminder inside of the data that we get back from

64
00:05:07,240 --> 00:05:08,120
our API.

65
00:05:08,230 --> 00:05:10,960
It contains the year that the movie was created.

66
00:05:11,100 --> 00:05:15,730
So let's try printing out the year that the movie was created next to each option as well but to do

67
00:05:15,730 --> 00:05:17,200
so I no longer.

68
00:05:17,230 --> 00:05:18,700
This is the entire key right here.

69
00:05:18,700 --> 00:05:24,970
This is the part to like listen to in other words I no longer have to go hunting through and searching

70
00:05:24,970 --> 00:05:29,950
through all the source code of the Create autocomplete function to figure out how to change what each

71
00:05:29,980 --> 00:05:31,500
individual item looks like.

72
00:05:31,510 --> 00:05:37,160
Instead I can look at my render option function right here which is very appropriately named.

73
00:05:37,360 --> 00:05:38,220
I see that name.

74
00:05:38,230 --> 00:05:43,150
Chances are I would think to myself Oh this is where we decide how to change what each individual option

75
00:05:43,150 --> 00:05:44,270
looks like.

76
00:05:44,290 --> 00:05:49,360
So then inside of here right after the movie title I could put down like maybe a set of parentheses

77
00:05:49,670 --> 00:05:52,740
and an inside their print out using dollar sign and curly brace.

78
00:05:52,870 --> 00:05:57,340
Movie dot yea so we can save that.

79
00:05:57,550 --> 00:06:03,460
Go back over refresh look for Avengers again and now I see the year on there.

80
00:06:03,460 --> 00:06:07,630
So hopefully this change is a little bit more meaningful when we start talking about all this refactoring

81
00:06:07,660 --> 00:06:10,310
and add a reusable logic stuff.

82
00:06:10,390 --> 00:06:14,920
It is the presence of this function right here that will make it really clear to other engineers how

83
00:06:14,920 --> 00:06:21,040
to customize and get some version of the autocomplete that works for their particular application.

84
00:06:21,040 --> 00:06:25,330
I'm sure you can imagine that if we wanted to make even more changes to how each individual option looks

85
00:06:25,630 --> 00:06:29,050
we would just make some more changes to render option and that's it.

86
00:06:30,290 --> 00:06:35,060
So hopefully now you're starting to get a little bit more sense of the purpose of this whole refactor.

87
00:06:35,060 --> 00:06:37,970
Those take a quick pause right here and continue in the next video.
