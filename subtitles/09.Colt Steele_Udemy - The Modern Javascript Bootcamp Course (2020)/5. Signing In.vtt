WEBVTT
1
00:00:00.850 --> 00:00:04.780
All right let's put together our poster questing and alert for handling a submission of these sign in

2
00:00:04.780 --> 00:00:05.290
form.

3
00:00:05.680 --> 00:00:10.120
So inside of here we're going to have to go through a similar series of steps as we did when we signed

4
00:00:10.180 --> 00:00:12.460
up a user just a little bit ago.

5
00:00:12.550 --> 00:00:15.500
So in the case of signing in a user here's what we're going to have to do.

6
00:00:15.760 --> 00:00:20.650
We first need to make sure that a user has signed up with the provided email if no one has ever signed

7
00:00:20.650 --> 00:00:22.080
up for this given e-mail before.

8
00:00:22.090 --> 00:00:24.670
That means that there's nothing for this user to sign into.

9
00:00:25.270 --> 00:00:28.790
So if no one has signed up with this e-mail then we're going to show an error.

10
00:00:28.840 --> 00:00:34.570
After that we'll compare the password of the saved user with one that was just provided if they're identical.

11
00:00:34.600 --> 00:00:36.110
Then we're going to sign in the user.

12
00:00:36.250 --> 00:00:39.670
Otherwise if they're different then we're going to show an heir to the user.

13
00:00:39.730 --> 00:00:45.540
So let's start to put that stuff together back inside of our post request handler for sign in.

14
00:00:45.800 --> 00:00:51.080
I'm first going to try to find inside of our Rec object the email and password that were provided inside

15
00:00:51.080 --> 00:00:52.170
the form.

16
00:00:52.190 --> 00:00:59.230
Remember all of our form data is contained inside of the wrecked body property.

17
00:00:59.230 --> 00:01:02.080
So I going to d structure out the email and password.

18
00:01:02.380 --> 00:01:07.060
We know that the erect body property is going to have an email and password specifically because those

19
00:01:07.060 --> 00:01:14.750
are the names so we put on the two inputs inside of our form email and password and we'll take the email

20
00:01:14.760 --> 00:01:18.960
that was provided and we'll check to see if there is an existing user inside of our database with that

21
00:01:18.960 --> 00:01:19.940
email.

22
00:01:20.070 --> 00:01:26.190
So I will do consider user is a weight user so many users repo.

23
00:01:26.190 --> 00:01:27.800
Let's double check the spelling on that.

24
00:01:27.820 --> 00:01:31.040
Yep users plural so users repo.

25
00:01:31.320 --> 00:01:34.570
And we're going to do the get one by method.

26
00:01:34.840 --> 00:01:37.380
Remember that's the method that we use whenever we want to search.

27
00:01:37.410 --> 00:01:44.510
Given some criteria like say just the users email then we'll pass in we want to find an email or any

28
00:01:44.550 --> 00:01:47.810
user with the email of the email provided.

29
00:01:47.810 --> 00:01:49.810
Once again we've got a key and valued that are identical.

30
00:01:49.820 --> 00:01:56.490
So a collapse it down like so then after that we'll say if there is not a user that was found.

31
00:01:56.500 --> 00:01:59.890
Because remember if we don't find a user the state is going to return undefined.

32
00:02:00.280 --> 00:02:05.530
So there is no user that means something went wrong and we need to return early and we'll send back

33
00:02:05.530 --> 00:02:10.420
an error message the user that says email not found

34
00:02:13.590 --> 00:02:17.690
and after that if we get past That's IF statement that means that we did find a user.

35
00:02:17.720 --> 00:02:21.910
So then at that point in time we need to check and see if the user is safe password is equal to the

36
00:02:21.910 --> 00:02:23.500
one that was just provided.

37
00:02:23.500 --> 00:02:33.200
So we'll say if user dot password is not equal to the password that was provided then let's once again

38
00:02:33.200 --> 00:02:33.830
return.

39
00:02:33.950 --> 00:02:42.120
We'll do a resort sense and we'll send back an error like invalid password now if we get past both those

40
00:02:42.120 --> 00:02:46.320
checks it means that the user is valid and their attempt to sign in is good.

41
00:02:46.560 --> 00:02:51.270
So we're going to want to consider this user to now be signed into our application in order to consider

42
00:02:51.270 --> 00:02:52.250
used to be signed in.

43
00:02:52.260 --> 00:02:58.350
Remember we're going to set the REC dot session dot user I.D. property to the I.D. of the user that

44
00:02:58.350 --> 00:03:03.720
we just retrieved out of our database if that property is assigned it is a assigned that essentially

45
00:03:03.720 --> 00:03:11.030
this user is signed into our application so after those two statements will say rec not session not

46
00:03:11.030 --> 00:03:15.370
user I.D. is user that I.D..

47
00:03:15.550 --> 00:03:22.580
So again that is what is making our user be considered to be authenticated with our app then after that

48
00:03:22.580 --> 00:03:31.340
will send back you are signed in and that's pretty much it okay.

49
00:03:31.350 --> 00:03:33.560
So let's save this and we'll test out this fall.

50
00:03:33.600 --> 00:03:38.010
Low so I'm going to go back to my application.

51
00:03:38.210 --> 00:03:42.160
I have not yet really created an account with an email and password that I can remember.

52
00:03:42.170 --> 00:03:48.520
So going to go back to the slash sign up route I'm going to sign up with a new email of test three at

53
00:03:48.520 --> 00:03:53.730
test dot com a password of password and a password confirmation a password as well.

54
00:03:54.730 --> 00:04:00.310
They'll sign up the account was created if I now go back to my sign up form.

55
00:04:00.330 --> 00:04:05.640
I'll see my I.D. right there which is a sign that I am signed in so I'm going to try to sign out of

56
00:04:05.640 --> 00:04:06.730
my application.

57
00:04:06.750 --> 00:04:11.250
Remember we can do that by going to a local host flash these locos 3000 slash.

58
00:04:11.280 --> 00:04:13.030
Sign out.

59
00:04:13.030 --> 00:04:17.980
So now logged out and now to sign back in I'll go to slash.

60
00:04:17.980 --> 00:04:25.870
Sign in and now have to enter in my valid email and password so I'll put in test to at test dot com

61
00:04:26.710 --> 00:04:32.900
and password and then sign it and I just immediately put in the incorrect e-mail.

62
00:04:32.900 --> 00:04:35.210
Well let me check what I just typed in there really quickly.

63
00:04:35.220 --> 00:04:37.200
So I put in 0 Test 3.

64
00:04:37.200 --> 00:04:43.280
My mistake all these we know that email not found error is working correctly yes.

65
00:04:43.290 --> 00:04:47.150
So there's my valid information and there we go now and signed in.

66
00:04:47.150 --> 00:04:50.400
Now just to make sure that we are going to handle some of those different errors correctly.

67
00:04:50.430 --> 00:04:52.990
Let's test that stuff out very quickly as well.

68
00:04:53.060 --> 00:05:00.600
So I got to first sign out once again by going to slash sign out well then go back to slash sign in

69
00:05:02.690 --> 00:05:04.120
now put in a garbage e-mail

70
00:05:06.930 --> 00:05:11.840
and some random password and for this I'm going to expect to see something it says e-mail not found.

71
00:05:11.870 --> 00:05:13.410
Yep sure enough I do.

72
00:05:13.640 --> 00:05:16.970
Now we've tried to enter an invalid e-mail but an invalid password.

73
00:05:16.970 --> 00:05:21.440
So do test three which is a valid e-mail but an invalid password.

74
00:05:21.470 --> 00:05:23.580
So essentially just random characters.

75
00:05:23.650 --> 00:05:27.240
Now when I try to sign in I get invalid password okay.

76
00:05:27.260 --> 00:05:28.620
So that looks pretty good.

77
00:05:28.640 --> 00:05:34.930
So not go now have the full flow but together we can sign up log out sign in.

78
00:05:35.000 --> 00:05:37.150
All that kind of good stuff now.

79
00:05:37.230 --> 00:05:42.690
This flow that we put together is pretty solid but there is one very large issue from a security standpoint

80
00:05:42.870 --> 00:05:47.160
that we need to resolve before we really consider this entire flow to be in a good state.

81
00:05:47.190 --> 00:05:48.190
Let's pause right here.

82
00:05:48.210 --> 00:05:49.320
We'll come back the next video.

83
00:05:49.320 --> 00:05:53.430
We're going to discuss the big security hole that we currently have inside of our application.
