1
00:00:00,970 --> 00:00:01,180
All right.

2
00:00:01,180 --> 00:00:05,380
Like I said at the end of last video several times we're not gonna start to put together our products

3
00:00:05,470 --> 00:00:10,300
edit templates before we do so however I just wanna mention really quickly that for our GET request

4
00:00:10,300 --> 00:00:16,450
right here for the form let's make sure that we add in a require off middleware so that a user can only

5
00:00:16,450 --> 00:00:19,540
access this edit form if they are signed in.

6
00:00:19,540 --> 00:00:19,770
OK.

7
00:00:19,840 --> 00:00:26,690
So now instead of our views admin products directory we'll create a new file called edit dot J.S. the

8
00:00:26,740 --> 00:00:30,830
form we put together inside of here is gonna be very similar to all the other forms we've put together.

9
00:00:30,910 --> 00:00:33,010
So let's get through it rather quickly.

10
00:00:33,010 --> 00:00:34,570
At the top we will get our layout

11
00:00:37,930 --> 00:00:43,510
will then do our module dot experts and we know that this thing is going to be called with an object

12
00:00:45,090 --> 00:00:47,950
that has some product inside of it that we want to edit.

13
00:00:47,970 --> 00:00:53,370
So we want to take some information out of that object and show it inside of a form as the default values

14
00:00:53,370 --> 00:01:00,970
for some inputs so I'm then going to return our layout and remember to show allow layout we show layout

15
00:01:01,060 --> 00:01:03,220
with an object that has a content property

16
00:01:06,340 --> 00:01:11,540
well then put in our multi line string that will contain our actual HD email so we'll show a form with

17
00:01:11,540 --> 00:01:12,850
a method of post

18
00:01:15,650 --> 00:01:18,750
or then show in input with the name of title.

19
00:01:18,830 --> 00:01:24,230
And again we want to kind of preload or pre populate these different inputs so to do so we can assign

20
00:01:24,230 --> 00:01:30,200
the value property and we'll assign value whatever the current product's title is.

21
00:01:30,200 --> 00:01:36,520
It's all say product title once again make sure that you've got some double quotes around the product

22
00:01:36,520 --> 00:01:42,010
title because when we put product title in there by default there will be no double quotes added in

23
00:01:42,790 --> 00:01:46,720
and usually whenever we add in H.M. attributes and they're supposed to be a string they do have to be

24
00:01:46,720 --> 00:01:49,360
wrapped with double quotes.

25
00:01:49,400 --> 00:01:59,990
Now it can duplicate that for the price as well so product dot price also show a button on here to submit

26
00:02:00,000 --> 00:02:00,370
the form

27
00:02:05,390 --> 00:02:06,590
let's go back over.

28
00:02:06,590 --> 00:02:12,290
I'm going to click on any of these different edit buttons and I should see the title other product and

29
00:02:12,290 --> 00:02:18,890
the price default values inside of these two inputs so I can go back to one of the other edit forms.

30
00:02:19,010 --> 00:02:23,000
See that title in price and that title in price as well.

31
00:02:23,030 --> 00:02:23,990
Deftly works out.

32
00:02:23,990 --> 00:02:28,760
But of course we probably also want to show some kind of input to edit or otherwise change the product

33
00:02:28,820 --> 00:02:33,660
image so to show a product image and allow a user to edit it.

34
00:02:33,660 --> 00:02:36,450
We can try to use the same kind of input approach.

35
00:02:36,500 --> 00:02:45,240
I'll do an input with the name of image a type of file and then we will try to take the value and throw

36
00:02:45,240 --> 00:02:47,610
it in as product dot image

37
00:02:50,480 --> 00:02:53,300
and unfortunately this is not going to work out.

38
00:02:53,310 --> 00:02:59,210
Remember when we add in a input of type file recently going to take a file off the harddrive throw it

39
00:02:59,220 --> 00:03:03,930
into that input and then upload that to our back and server when we got it to our server.

40
00:03:03,930 --> 00:03:10,410
We took the contents of that file and encoded it as a base 64 string so the downside to this approach

41
00:03:10,410 --> 00:03:13,390
is that we've now got some representation this file.

42
00:03:13,470 --> 00:03:18,960
It is not at all equivalent to the original file the original file was an actual image file and we have

43
00:03:19,020 --> 00:03:25,500
a base64 encoded string so not only can we not take that string and kind of represented back inside

44
00:03:25,500 --> 00:03:26,460
this input.

45
00:03:26,460 --> 00:03:32,550
In addition we are not allowed to kind of preset the value of a input of type file as well so we can

46
00:03:32,550 --> 00:03:33,420
try this right here.

47
00:03:33,420 --> 00:03:39,150
Don't get me wrong we can refresh but we're going to see of course no file chosen right here so we can't

48
00:03:39,150 --> 00:03:44,250
really kind of pre populate or preselect the form or see the file inside that input.

49
00:03:44,400 --> 00:03:49,850
So I'm going to remove the value property off their So how are we going to handle this.

50
00:03:49,850 --> 00:03:56,300
Well we're just going to say that if a user ever adds in a file to this input then we're going to assume

51
00:03:56,300 --> 00:04:00,290
that they want to change the image that is tied to a product.

52
00:04:00,290 --> 00:04:04,820
However if a user attempts to submit this form without choosing any file right here whatsoever we're

53
00:04:04,820 --> 00:04:09,830
just going to leave the image as it is for our product and we'll just attempt to instead update the

54
00:04:10,130 --> 00:04:13,170
title and the price okay.

55
00:04:13,180 --> 00:04:13,990
So this looks pretty good.

56
00:04:13,990 --> 00:04:15,210
Good start.

57
00:04:15,250 --> 00:04:22,750
Let's now go back over to our products roots so roots admin products at the very bottom will add in

58
00:04:22,810 --> 00:04:32,750
a post request handler to receive the submission of that form we'll do a router post to admin products

59
00:04:33,080 --> 00:04:37,670
and again we need to encode that we don't know what the idea is going to be right here so we'll do colon

60
00:04:37,730 --> 00:04:47,440
I.D. slash EDIT Once again we're going to require off in order to get access to this root handler and

61
00:04:47,450 --> 00:04:54,200
I'll put in the actual callback function itself so req and rez and I'll make sure that I annotate that

62
00:04:54,230 --> 00:05:00,190
as being async because we're definitely and have some async code inside of here okay.

63
00:05:00,320 --> 00:05:02,850
Now let's remember that we are doing a form submission here.

64
00:05:02,900 --> 00:05:07,640
We're also doing a possible file upload so we're going to go through all the same steps we've been doing

65
00:05:07,640 --> 00:05:10,420
for all of our different form submissions.

66
00:05:10,580 --> 00:05:15,770
We need to make sure that we possibly handle the image upload we need to have some validators we also

67
00:05:15,770 --> 00:05:18,980
need to make sure that we handle any possible errors as well.

68
00:05:19,100 --> 00:05:20,170
Let's do another quick pause.

69
00:05:20,180 --> 00:05:22,250
In handle all that stuff in the next video.
