1
00:00:00,800 --> 00:00:05,570
We just spoke about the differences of creating a bunch of H mell to support a widget inside of our

2
00:00:05,670 --> 00:00:08,560
each small file versus our javascript code.

3
00:00:08,570 --> 00:00:12,950
Now one thing only mentioned here is that this discussion is really about the creation of JavaScript

4
00:00:12,950 --> 00:00:15,070
heavy reusable widgets.

5
00:00:15,140 --> 00:00:19,370
There's still going to be many times where you're going to want to create some eat smell inside of an

6
00:00:19,390 --> 00:00:21,820
eight style document and that's totally fine.

7
00:00:21,860 --> 00:00:26,600
We're really just thinking about moving a single generation over to our javascript code when we are

8
00:00:26,600 --> 00:00:32,540
thinking about widgets that we want to make easily reusable between different projects or even on the

9
00:00:32,540 --> 00:00:36,100
same project or this autocomplete.

10
00:00:36,100 --> 00:00:41,440
We know that we need to show two different auto completes on the screen and so our options are to either

11
00:00:41,500 --> 00:00:46,330
write out all that code like one time or that a small structure one time inside of our JavaScript file

12
00:00:46,720 --> 00:00:51,030
or write it out twice inside the index dot each email file.

13
00:00:51,220 --> 00:00:56,110
Definitely the easier thing to do is create some javascript code that can create this widget for us.

14
00:00:56,110 --> 00:01:00,700
As many times as we want but there's definitely going to be some other elements that we're going to

15
00:01:00,700 --> 00:01:06,040
throw directly into our each html file for example that header element that's already visible right

16
00:01:06,040 --> 00:01:06,840
there.

17
00:01:06,880 --> 00:01:12,080
That's not something that is quite appropriate to try to display from our javascript code so.

18
00:01:12,250 --> 00:01:15,980
Cos that thing is like just there's only one there's not really any interactivity.

19
00:01:16,000 --> 00:01:23,060
I don't expect to reuse it totally appropriate to create that inside of our HDD and I'll file OK so

20
00:01:23,120 --> 00:01:23,810
back over.

21
00:01:23,810 --> 00:01:28,550
We're gonna do a little bit of a refactor and move some of this e-mail generation to our javascript

22
00:01:28,840 --> 00:01:33,320
so that involves essentially deleting a love the e-mail that we just wrote out here.

23
00:01:33,350 --> 00:01:37,670
I know it's kind of a pain to delete some of the Asian all that we just wrote but I wanted to write

24
00:01:37,670 --> 00:01:38,900
this out for two reasons.

25
00:01:38,900 --> 00:01:43,250
First off so you understood the difference between option number one and option number two and secondly

26
00:01:43,250 --> 00:01:48,530
it's that you just understood that if we use this e-mail structure right here with these very particular

27
00:01:48,530 --> 00:01:53,520
class names we'll make CSX would kick in and style that stuff for us automatically.

28
00:01:53,540 --> 00:01:57,300
So I apologize to the delete stuff we just wrote but again that's why we did it.

29
00:01:58,280 --> 00:02:02,500
Okay so I got to find everything inside of class Container and delete it.

30
00:02:02,500 --> 00:02:06,680
Now we're going to replace it with one single element instead.

31
00:02:06,830 --> 00:02:13,760
I'm gonna do a deal with the class of auto complete like so now we can go back over to our javascript

32
00:02:13,760 --> 00:02:14,440
code.

33
00:02:14,540 --> 00:02:20,680
We're going to select that element so back over right above where we get that input.

34
00:02:20,810 --> 00:02:26,060
I'm going to add in some code to select that thing I'm going to call it root because it kind of represents

35
00:02:26,060 --> 00:02:36,290
the root element of our autocomplete widget so we'll do a query selector with DOT auto complete and

36
00:02:36,290 --> 00:02:43,040
then immediately after that we're going to do a root dot in our HCM L and put in all the e-mail that

37
00:02:43,040 --> 00:02:48,920
we need to make our auto complete was at work so essentially we're talking about adding in all the e-mail

38
00:02:48,950 --> 00:02:54,710
that we just deleted from the ECMO file so it might seem like we're just kind of shoveling HMO creation

39
00:02:54,710 --> 00:02:57,380
from one location to another that's totally accurate.

40
00:02:57,380 --> 00:02:58,730
That is what we're doing.

41
00:02:58,760 --> 00:03:02,500
Again the point is to reduce the coupling between these different files.

42
00:03:02,690 --> 00:03:04,780
The HMO still has to be created somewhere.

43
00:03:04,820 --> 00:03:08,610
We're just moving it over to the javascript side.

44
00:03:08,720 --> 00:03:13,110
So inside of the thing we're going to add in pretty much the same structure we just had.

45
00:03:13,180 --> 00:03:16,190
I'm going to put in one or two more elements and class names.

46
00:03:16,320 --> 00:03:20,860
That's just going to kind of represent the final styling of this widget that we're going for it's going

47
00:03:20,890 --> 00:03:25,990
to put in a label that has a B element to bold the text in here.

48
00:03:26,190 --> 00:03:30,220
And for the text I'll say search for a movie.

49
00:03:30,260 --> 00:03:37,090
I'll then close off the B element and close off the label after that I'll put down the input.

50
00:03:37,090 --> 00:03:38,710
We still need an input.

51
00:03:38,860 --> 00:03:44,370
I'm gonna give this one a class of inputs like so and then after that I'm going to start to show the

52
00:03:44,370 --> 00:03:45,160
dropdown.

53
00:03:45,210 --> 00:03:50,730
Now previously we wrapped up the input with a dropdown this time for like no great reason it can do

54
00:03:50,730 --> 00:03:51,980
things slightly differently.

55
00:03:52,040 --> 00:03:56,150
It's gonna put the dropdown right after the input element.

56
00:03:56,190 --> 00:04:03,200
It's also a day with the class of dropdown gonna close that off inside there I'll do a deal with the

57
00:04:03,200 --> 00:04:08,720
class up dropdown dash menu and close it off.

58
00:04:08,830 --> 00:04:13,160
And then finally a div with the class of dropdown content.

59
00:04:13,300 --> 00:04:16,120
And this time around I'm also gonna put in a class name of results.

60
00:04:16,210 --> 00:04:21,730
That is just for some additional little styling does some C Ss no other special reason for that class

61
00:04:21,730 --> 00:04:26,260
besides a little bit of styling okay.

62
00:04:26,290 --> 00:04:30,390
So now we are creating all of our e-mail on the javascript side and that means we can create as many

63
00:04:30,390 --> 00:04:32,130
of these autocomplete widgets as we want.

64
00:04:32,130 --> 00:04:33,500
Eventually.

65
00:04:33,650 --> 00:04:38,100
So now we're going to go through this and we're going to select a couple of the different elements inside

66
00:04:38,100 --> 00:04:40,270
of here that we know that we're going to need.

67
00:04:40,290 --> 00:04:42,760
We already have a selector for that input.

68
00:04:42,930 --> 00:04:48,090
We're going to make sure that we also get a selector for that div right there that says dropdown content

69
00:04:48,190 --> 00:04:52,870
because remember that's where we're going to eventually show all the different search results we get.

70
00:04:52,890 --> 00:04:56,930
We're also going to get a selector for this div with class of dropdown as well.

71
00:04:56,970 --> 00:05:02,730
The reason for that is that we can hide and show the drop down menu depending upon whether or not this

72
00:05:02,760 --> 00:05:07,010
element has a class of is Dash active.

73
00:05:07,030 --> 00:05:09,150
This is not some like magic javascript thing.

74
00:05:09,160 --> 00:05:15,220
This is another little bit of styling from bonuses SS if we actually go back over to the documentation

75
00:05:15,220 --> 00:05:15,920
over here.

76
00:05:16,980 --> 00:05:21,630
You'll notice that the root element in their example has is active.

77
00:05:21,630 --> 00:05:26,320
If that element has the class is active then the dropdown is going to be displayed.

78
00:05:26,400 --> 00:05:29,830
Otherwise if the class is not there the dropdown will be hidden.

79
00:05:29,880 --> 00:05:31,590
That is normal CSF behavior.

80
00:05:31,590 --> 00:05:38,970
They just have a little CSF selector to say either apply a display of block or none to this thing to

81
00:05:38,970 --> 00:05:40,350
show and hide it.

82
00:05:40,440 --> 00:05:44,890
So we're going to leave off is active because by default we want this thing to be closed.

83
00:05:44,890 --> 00:05:49,260
But like I said we're going to get a selector to that element so we can add that class on eventually

84
00:05:49,260 --> 00:05:55,190
an open or closed the dropdown so next to our input element right here we're going to add in some more

85
00:05:55,190 --> 00:06:01,520
selectors to get those two other elements we just discussed one to open the thing up and one to eventually

86
00:06:01,550 --> 00:06:09,350
render some contents inside their going to add in a selector for dropdown and that will be document

87
00:06:09,500 --> 00:06:12,980
query selector not dropdown

88
00:06:15,850 --> 00:06:24,860
and I'll also get a we'll call it tab out results wrapper there'll be a document query selector or Dutch

89
00:06:24,920 --> 00:06:25,630
results.

90
00:06:25,670 --> 00:06:28,050
And as you would guess that's that element right there.

91
00:06:28,100 --> 00:06:32,360
I'm calling it results wrapper because essentially it's going to wrap all the rendered results that

92
00:06:32,360 --> 00:06:35,030
we're trying to show to the user.

93
00:06:35,170 --> 00:06:35,390
Okay.

94
00:06:35,420 --> 00:06:36,770
So this looks good.

95
00:06:36,770 --> 00:06:38,110
Now this video is going a little bit long.

96
00:06:38,150 --> 00:06:39,470
Let's take a quick pause right here.

97
00:06:39,500 --> 00:06:43,910
When we come back the next video we're going to update some of the code inside of our on input function

98
00:06:44,270 --> 00:06:50,190
to make sure that we render some input or excuse me some output into these particular elements.

99
00:06:50,340 --> 00:06:52,190
Took pause and I'll see you in just a minute.
