WEBVTT
1
00:00:00.770 --> 00:00:02.660
And this X are going to start to take a look at.

2
00:00:02.660 --> 00:00:03.770
No J Yes.

3
00:00:03.830 --> 00:00:05.560
So what's not all about.

4
00:00:05.630 --> 00:00:10.150
Well up to this point in this course we've been running code exclusively inside of our browser.

5
00:00:10.190 --> 00:00:14.500
In other words we created a single file we linked a javascript file to it.

6
00:00:14.540 --> 00:00:19.040
Then we loaded both up inside the browser and the browser executed our javascript code.

7
00:00:19.100 --> 00:00:24.770
We start to run code with no J.S. we're going to instead run code directly on our machine or a computer

8
00:00:24.950 --> 00:00:27.590
without any browser being involved.

9
00:00:27.590 --> 00:00:31.940
Understanding the differences between running code with no J S in the browser is easiest if we do a

10
00:00:31.940 --> 00:00:34.090
direct compare and contrast.

11
00:00:34.190 --> 00:00:38.480
So let's think about some the differences between running JavaScript in the browser and running javascript

12
00:00:38.510 --> 00:00:39.830
with node.

13
00:00:39.830 --> 00:00:44.780
So first off like we just mentioned when we'd run javascript in the browser we're adding script tags

14
00:00:44.780 --> 00:00:50.660
to an H T.M. document that causes the browser to fetch that JavaScript file and execute all the code

15
00:00:50.660 --> 00:00:52.040
inside of it.

16
00:00:52.040 --> 00:00:58.010
When we start to make use of node however we're going to use a program called the node CLIA or command

17
00:00:58.010 --> 00:01:04.520
line interface to take in a javascript file and run all the code inside when we run javascript in the

18
00:01:04.520 --> 00:01:06.430
browser we get access to the DOM.

19
00:01:06.440 --> 00:01:11.540
So that's all of our typical age to know stuff that we've discussed and we get access to a lot of related

20
00:01:11.570 --> 00:01:13.940
objects to that such as the window object.

21
00:01:13.940 --> 00:01:17.010
It's a global object that has a lot of helpful methods on it.

22
00:01:17.330 --> 00:01:21.230
When we run javascript with node however there is no DOB.

23
00:01:21.230 --> 00:01:24.030
So when we use node we're not trying to manipulate a dom.

24
00:01:24.050 --> 00:01:27.260
We're not messing around with each e-mail or anything like that.

25
00:01:28.490 --> 00:01:34.040
In the browser we can load up many different files and code in between those different files can reference

26
00:01:34.040 --> 00:01:38.300
variables or functions or objects defined in other files very easily.

27
00:01:38.420 --> 00:01:40.610
And that's pretty much an automatic process.

28
00:01:40.610 --> 00:01:45.590
We can have one file with the reference to code that has been written inside of another file and there's

29
00:01:45.590 --> 00:01:52.410
not a lot of direct setup that we have to do to make that relationship work however in node.

30
00:01:52.410 --> 00:01:55.020
This is a very different system.

31
00:01:55.020 --> 00:02:00.150
So if we start to have multiple different files with node we have to treat each different file as its

32
00:02:00.210 --> 00:02:04.160
own separate world where its own separate kind of silo.

33
00:02:04.230 --> 00:02:08.760
In other words all the different variables functions and objects we define inside of a file with no

34
00:02:08.760 --> 00:02:14.730
J us are isolated to that single file and if we want to share that code with another file we have to

35
00:02:14.730 --> 00:02:21.110
go through a very manual and distinct process finally when we'd run javascript in the browser.

36
00:02:21.110 --> 00:02:27.110
We always include libraries by adding in script tags and do keep in mind that there are some more complicated

37
00:02:27.110 --> 00:02:32.330
solutions for getting libraries included into a browser based project and we're gonna discuss those

38
00:02:32.330 --> 00:02:38.050
later but right now really just thinking about including libraries through the use of script texts when

39
00:02:38.050 --> 00:02:44.970
we move over to note however we get a first class package management system called NPM or the node package

40
00:02:44.980 --> 00:02:51.640
manager NPM is a tool that we can use to very easily add in libraries or dependencies that we want to

41
00:02:51.640 --> 00:02:53.230
use in a project.

42
00:02:53.230 --> 00:02:58.090
And so when we start to make use of node we start to make use of a lot of other libraries very quickly.

43
00:02:58.090 --> 00:03:02.860
And so this is where it starts to become important to understand how some other libraries work in some

44
00:03:02.860 --> 00:03:08.590
common libraries in the javascript ecosystem all right before we make use of node.

45
00:03:08.610 --> 00:03:11.680
We do have to make sure that it is installed on our local system.

46
00:03:11.760 --> 00:03:16.140
Now it is entirely possible that you have already installed node and you might have already done it

47
00:03:16.180 --> 00:03:18.390
or earlier inside this course.

48
00:03:18.390 --> 00:03:21.600
You don't have to do this install if you already have node installed.

49
00:03:21.660 --> 00:03:29.190
If you're not sure if you do you can change over to your terminal very quickly and run node if you see

50
00:03:29.190 --> 00:03:30.410
something like this appear.

51
00:03:30.450 --> 00:03:35.820
That means you have node installed but if you see something it says command node not found or something

52
00:03:35.820 --> 00:03:36.180
like that.

53
00:03:36.180 --> 00:03:39.720
That means that you have to go through the installation process by the way.

54
00:03:39.720 --> 00:03:46.930
Once you get to this point you can exit out by pressing control see so if you got an error you need

55
00:03:46.930 --> 00:03:50.130
to go through the download and set up process very quickly.

56
00:03:50.140 --> 00:03:51.670
This is a really fast thing to do.

57
00:03:51.670 --> 00:03:53.940
So I'll walk you through it right now.

58
00:03:53.940 --> 00:03:56.950
I'm gonna copy that link and open it up inside of a new browser tab.

59
00:04:00.080 --> 00:04:05.600
Once over here I'll scroll debt scroll down just a little bit and we can find the Windows Installer

60
00:04:05.690 --> 00:04:12.080
Mac OS or if you are running a Linux distribution you can download the binaries right here or use a

61
00:04:12.140 --> 00:04:18.410
linux package manager to download install node automatically at any rate go ahead and grab the appropriate

62
00:04:18.410 --> 00:04:21.770
installer download it and run it once you install node.

63
00:04:21.800 --> 00:04:26.360
You should be able to go back over to your terminal restart your terminal to make sure you restart it.

64
00:04:26.360 --> 00:04:31.680
I'm not gonna show restarting my terminal but do make sure you restart yours and then tried to run node

65
00:04:31.900 --> 00:04:35.670
and once again you should see something like that appear okay.

66
00:04:35.710 --> 00:04:40.860
So now we've got node up and running and we've discussed some of the very small differences.

67
00:04:40.870 --> 00:04:42.060
Let's take a quick pause right here.

68
00:04:42.070 --> 00:04:46.270
When we come back the next video we're gonna start to play around with node and write some javascript

69
00:04:46.450 --> 00:04:48.610
that's going to run outside of our browser.
