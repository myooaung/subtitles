1
00:00:00,270 --> 00:00:02,690
Next up let's talk about using forms.

2
00:00:02,850 --> 00:00:09,720
So we saw how we could use the key down key press key up events to run some code when a user types in

3
00:00:09,720 --> 00:00:11,000
a single input.

4
00:00:11,070 --> 00:00:15,180
But what if we want to do something when a user submits an entire form.

5
00:00:15,210 --> 00:00:18,470
So let's start with a simple form that will add in.

6
00:00:18,630 --> 00:00:20,490
Let's do a couple of different inputs.

7
00:00:20,490 --> 00:00:23,200
We'll have an input type equals text.

8
00:00:23,220 --> 00:00:31,060
What should we do for this one let's go with place holder equals credit card number.

9
00:00:31,410 --> 00:00:31,790
Sure.

10
00:00:31,800 --> 00:00:34,680
This is not going to be a real credit card form.

11
00:00:34,740 --> 00:00:35,920
We'll do another input.

12
00:00:35,940 --> 00:00:38,660
This one will be type equals.

13
00:00:38,730 --> 00:00:44,490
Let's do a checkbox and let's put a label around it.

14
00:00:44,490 --> 00:00:47,810
So I'll move it inside the label.

15
00:00:47,880 --> 00:00:52,020
I don't need a four if I'm embedding my input inside the label.

16
00:00:52,020 --> 00:00:53,670
I'll put some text in here.

17
00:00:53,670 --> 00:00:55,020
Let's do a checkbox.

18
00:00:55,020 --> 00:01:04,830
I agree to sell my soul to your company and we don't need a place holder for a checkbox.

19
00:01:05,190 --> 00:01:06,660
Let's also do.

20
00:01:06,660 --> 00:01:11,370
How about a select a select where we have different options.

21
00:01:12,600 --> 00:01:17,620
If you're not super familiar with a select it's how you can get a drop down menu basically.

22
00:01:17,640 --> 00:01:20,900
So why don't we pick some options.

23
00:01:20,910 --> 00:01:22,280
We'll just do something boring.

24
00:01:22,290 --> 00:01:30,630
Let's do vegetables eggplants and asparagus and carrot.

25
00:01:30,650 --> 00:01:30,860
All right.

26
00:01:30,890 --> 00:01:36,390
So I'll put corresponding values and we'll do eggplant there.

27
00:01:36,440 --> 00:01:36,680
OK.

28
00:01:36,680 --> 00:01:44,240
So we have a couple different inputs now and I'll also add in a button to submit this input type equals

29
00:01:44,390 --> 00:01:50,340
submit and let's see what we end up with when I open it up here.

30
00:01:50,520 --> 00:01:53,210
Kind of an ugly form but we have a couple different inputs.

31
00:01:53,220 --> 00:01:55,140
We've got a select.

32
00:01:55,140 --> 00:01:59,280
We've got a checkbox and we have our credit card input which is just a text input.

33
00:01:59,280 --> 00:02:02,430
No validations and then our submit.

34
00:02:02,460 --> 00:02:08,540
Now if you're familiar with forms you'll know what happens when I click Submit the page refreshes.

35
00:02:08,840 --> 00:02:15,410
A form is made to take data that we get from an input and submit it or send it somewhere.

36
00:02:15,510 --> 00:02:22,090
Traditionally we would submit our data to one you or some you are like Slash sign up.

37
00:02:22,200 --> 00:02:24,500
So this would be an end point on our own server.

38
00:02:24,570 --> 00:02:30,110
The data would be sent to slash sign up and then on our server side we would do something.

39
00:02:30,210 --> 00:02:35,190
Create a new user in the database and then respond with a new page that would load.

40
00:02:35,190 --> 00:02:40,530
And so you would end up going to a completely new page but with JavaScript and the rise of single page

41
00:02:40,530 --> 00:02:47,400
apps and things like react in angular and view or just vanilla J.S. we can work with forms in a slightly

42
00:02:47,400 --> 00:02:48,600
different way.

43
00:02:48,600 --> 00:02:55,290
What we'll do is submit the form or when it's submitted we'll intercepted and say Don't send that request

44
00:02:55,320 --> 00:03:00,360
don't refresh the page just to show you right now if I submit this I have to refresh to get that new

45
00:03:00,870 --> 00:03:07,000
attribute if I submit this right now it takes me to slash sign up which doesn't exist.

46
00:03:07,740 --> 00:03:13,920
So what we'll do with javascript is take the form when it's submitted we'll say Stop don't actually

47
00:03:13,920 --> 00:03:14,690
send a request.

48
00:03:14,700 --> 00:03:16,380
Don't take us anywhere else.

49
00:03:16,380 --> 00:03:18,020
I just want to capture that event.

50
00:03:18,030 --> 00:03:23,850
I want to trigger some javascript code when the user submits a form then we can extract the information

51
00:03:23,850 --> 00:03:30,210
we want and do something with it whether it's simply to display it back to the user whatever we're doing

52
00:03:30,210 --> 00:03:35,130
here or maybe we'll send the data to a database somewhere to a server but we won't actually refresh

53
00:03:35,130 --> 00:03:41,070
the page we'll do it using javascript on the same page we're currently on and we could maintain a single

54
00:03:41,070 --> 00:03:42,450
page application.

55
00:03:42,450 --> 00:03:46,560
So we're not really at the point where we're sending requests right now but you'll see where we could

56
00:03:46,560 --> 00:03:47,890
easily add that.

57
00:03:48,240 --> 00:03:51,090
So there is a form event called submit.

58
00:03:51,390 --> 00:03:57,270
You could attach an on submit which I don't recommend doing with any of those on events.

59
00:03:57,270 --> 00:04:03,750
Those properties are just not ideal but in our javascript if we select our form let's call this a sign

60
00:04:03,750 --> 00:04:12,090
up form as the I.D. and then select it and so document that query selector the I.D. sign and then sign

61
00:04:12,090 --> 00:04:25,440
up form save that to a variable we can add in a form dots add event listener for the submit event and

62
00:04:25,560 --> 00:04:35,120
we'll use the event object why don't I start by alerting submitted the form and let's see what happens.

63
00:04:35,850 --> 00:04:38,160
So I'll refresh my page.

64
00:04:38,160 --> 00:04:39,270
Click Submit.

65
00:04:39,360 --> 00:04:39,980
OK.

66
00:04:40,110 --> 00:04:44,340
So we get that event triggering but then our page reloads.

67
00:04:44,400 --> 00:04:51,060
I don't know if you can tell that if I go back to what I had before I gave it an action equal slash.

68
00:04:51,130 --> 00:04:55,890
No let's do that and we'll do method equals get.

69
00:04:56,430 --> 00:04:57,920
This is a traditional form.

70
00:04:58,020 --> 00:05:04,200
If I submit it now we get our alert from the event handler but then it still continues on.

71
00:05:04,310 --> 00:05:05,960
It does what it did earlier.

72
00:05:05,970 --> 00:05:07,740
It takes me to a different page.

73
00:05:07,800 --> 00:05:13,110
So we are capturing that event we're doing something when that event is triggered but we're not preventing

74
00:05:13,110 --> 00:05:15,360
the typical form behavior.

75
00:05:15,420 --> 00:05:21,930
And if I want to capture the data but not go to a new page and not send a request we have a way of doing

76
00:05:21,930 --> 00:05:22,700
it.

77
00:05:22,740 --> 00:05:25,320
There is a method on the event object.

78
00:05:25,590 --> 00:05:28,010
It's called prevent default.

79
00:05:28,050 --> 00:05:34,660
So e if I'm calling my event Object e dot prevent defaults.

80
00:05:34,860 --> 00:05:40,380
And what this will do when we execute it is prevent the default behavior and the default behavior in

81
00:05:40,380 --> 00:05:47,190
this case with a form when it's submitted is to continue sending on your data sending a request to whatever

82
00:05:47,190 --> 00:05:47,580
you are.

83
00:05:47,590 --> 00:05:51,020
We specified in our case slash No.

84
00:05:51,450 --> 00:05:53,580
As a GET request.

85
00:05:53,670 --> 00:05:56,150
So now if we try it let's see if it works.

86
00:05:56,250 --> 00:06:00,850
I click submit we get the alert and we don't go anywhere.

87
00:06:00,870 --> 00:06:06,840
Our form has not actually submitted the submit event has run but we haven't actually submitted data

88
00:06:06,870 --> 00:06:07,690
anywhere.

89
00:06:07,830 --> 00:06:14,460
And this leaves us free to now extract data if we wanted to get all the data at once and send it to

90
00:06:14,460 --> 00:06:20,640
an API using Ajax using a client side request again something we haven't learned yet.

91
00:06:20,700 --> 00:06:26,670
But the point is we have the flexibility to do something with the data and we can still capture the

92
00:06:26,670 --> 00:06:33,300
submit event and what's nice about doing it this way as opposed to capturing each input as it changes

93
00:06:33,630 --> 00:06:37,920
every single time like we could have a key down or key press on here.

94
00:06:37,920 --> 00:06:44,400
And anytime this input changes we could create a variable in our javascript that is in sync with that.

95
00:06:44,520 --> 00:06:50,160
And anytime you select a different option we could immediately update that variable or a second variable

96
00:06:50,850 --> 00:06:53,220
but that means attaching a bunch of event listeners.

97
00:06:53,250 --> 00:07:00,360
We need to attach one here one to the checkbox one here and then one for the submission as well but

98
00:07:00,360 --> 00:07:06,060
by adding a submit event listener there's just one event we're waiting for we tell it not to behave

99
00:07:06,060 --> 00:07:07,470
the way it normally behaves.

100
00:07:07,470 --> 00:07:10,650
And then we can extract our data in here.

101
00:07:10,650 --> 00:07:15,080
So why don't we take a look at the event object for just a moment.

102
00:07:15,720 --> 00:07:18,310
I'll open up my console we'll click submit.

103
00:07:18,330 --> 00:07:20,140
Let's put some data right there.

104
00:07:20,160 --> 00:07:24,250
Let's select carrot submit we get our alert.

105
00:07:24,300 --> 00:07:25,550
Here's the event.

106
00:07:25,650 --> 00:07:30,360
Notice it has type set to submit and then we have the target here.

107
00:07:30,360 --> 00:07:32,970
Target is the form that was submitted.

108
00:07:33,270 --> 00:07:39,240
And we also have this property called default prevented which is set to TRUE because we did prevent

109
00:07:39,330 --> 00:07:39,820
default.

110
00:07:40,750 --> 00:07:41,950
All righty.

111
00:07:42,000 --> 00:07:47,670
Now that we have the submit event and we're preventing default let's extract the data from the form

112
00:07:48,030 --> 00:07:50,250
and do something kind of trivial with it.

113
00:07:51,420 --> 00:07:56,210
So to extract the data we need to be able to select the individual elements.

114
00:07:56,280 --> 00:08:03,010
So we've got an input another input with type equals checkbox and then we select.

115
00:08:03,060 --> 00:08:05,570
So why don't we start with the text input that went.

116
00:08:05,580 --> 00:08:06,780
Easy enough.

117
00:08:06,780 --> 00:08:07,850
I'll select them all.

118
00:08:07,920 --> 00:08:10,890
So const what we call it credit card number.

119
00:08:11,280 --> 00:08:22,740
Let's go with credit card equals document Dot's query selector and we give ideas to these inputs will

120
00:08:22,770 --> 00:08:28,560
be easiest if we just do an I.D. let's do credit card or C.C. for the checkbox.

121
00:08:28,560 --> 00:08:35,930
Let's go with whom I agree to sell my soul to your company terms check or something or just terms.

122
00:08:36,000 --> 00:08:41,160
And for our select let's go with I.D. of veggie

123
00:08:44,940 --> 00:08:52,020
and then we'll go into our app J.S. we'll select based off of that I.D. credit card and we'll also select

124
00:08:52,020 --> 00:08:53,420
the other options.

125
00:08:53,490 --> 00:08:58,100
So we had credit card then we had terms check.

126
00:08:58,320 --> 00:09:04,440
What are we gonna call that in terms checkbox credit card input maybe just to be more descriptive.

127
00:09:04,890 --> 00:09:12,150
And this was the idea of terms and then we have the veggie select with the idea of veggie.

128
00:09:12,150 --> 00:09:18,360
So now we have our three inputs what we would do and here is probably just access each one of those

129
00:09:18,480 --> 00:09:24,750
input values although they do differ a little bit because we have a regular input text input.

130
00:09:24,810 --> 00:09:32,910
So why don't we control that log credit card input that value and maybe we'll just add C.C. comma so

131
00:09:32,910 --> 00:09:34,200
we can see both of them.

132
00:09:34,380 --> 00:09:38,270
So we can see what we're printing out then to get the checkbox.

133
00:09:38,400 --> 00:09:40,620
How do we get the value from a checkbox.

134
00:09:40,650 --> 00:09:48,210
Well why don't we start with just doing terms checkbox or printout terms and then for the last one we

135
00:09:48,210 --> 00:09:59,150
have veggie select veggie select and then here we'll do veggie select dot value.

136
00:09:59,430 --> 00:10:00,300
Let's see what we get.

137
00:10:01,230 --> 00:10:04,440
So I'll refresh let's fill something out in here.

138
00:10:04,450 --> 00:10:08,320
Credit card number just make up fake number.

139
00:10:08,350 --> 00:10:17,680
Then we'll do let's do agree and go with asparagus submit and here's what we have credit card.

140
00:10:17,690 --> 00:10:20,540
We got the value out correctly four terms.

141
00:10:20,540 --> 00:10:21,640
We got on.

142
00:10:21,740 --> 00:10:23,290
Which is the checkbox here.

143
00:10:23,390 --> 00:10:24,610
I submit again.

144
00:10:24,860 --> 00:10:29,980
We still get on even though it's not checked anymore so value maybe isn't what we want to use.

145
00:10:29,990 --> 00:10:30,930
I'll show you the.

146
00:10:31,000 --> 00:10:32,060
The better attribute.

147
00:10:32,060 --> 00:10:34,190
In just a moment the better property.

148
00:10:34,190 --> 00:10:35,120
And then very select.

149
00:10:35,120 --> 00:10:37,000
We did get asparagus.

150
00:10:37,220 --> 00:10:39,200
Notice we're getting the value we set.

151
00:10:39,200 --> 00:10:41,440
So it's eggplant with a capital E..

152
00:10:41,540 --> 00:10:45,830
But the value I gave as an attribute was eggplant lowercase E.

153
00:10:45,920 --> 00:10:49,770
So this is what we're getting we're not getting this here.

154
00:10:50,000 --> 00:10:56,630
And if we go back to our app J.S. instead of printing out terms checkbox that value there is a property

155
00:10:56,630 --> 00:11:02,620
called checked on inputs with type equaled check your type equal to check.

156
00:11:02,780 --> 00:11:04,310
And it's a boolean property.

157
00:11:04,310 --> 00:11:06,450
So we've got false.

158
00:11:06,680 --> 00:11:11,120
Now we've got Drew cool so we have our data.

159
00:11:11,160 --> 00:11:12,690
We could put it in variables.

160
00:11:12,690 --> 00:11:17,400
I won't spend too much time here doing that because it really just depends on what you're trying to

161
00:11:17,400 --> 00:11:17,960
do with it.

162
00:11:18,180 --> 00:11:20,890
But we have access to the data from that form.

163
00:11:20,910 --> 00:11:26,820
But the point here is that we can stop prevent default from a form submission and then tap into the

164
00:11:26,820 --> 00:11:30,480
form or to the inputs get the values we want and then do something else.

165
00:11:30,480 --> 00:11:41,400
We could send form data to database or append something to page using form data.

166
00:11:41,430 --> 00:11:42,530
It's totally up to you.

167
00:11:42,540 --> 00:11:44,340
But the process looks like this.

168
00:11:44,340 --> 00:11:46,280
We have a submit event on a form.

169
00:11:46,410 --> 00:11:52,530
We prevent the defaults which I like to put up top just so it's clear you can see it's still working

170
00:11:52,650 --> 00:11:57,600
the way we had it written but it makes it very obvious what we're doing first we're stopping default

171
00:11:57,600 --> 00:12:01,890
submission behavior for a form and then we're extracting the information we want.
