WEBVTT
1
00:00:00.120 --> 00:00:03.630
So we just saw three different methods that we can use to select elements.

2
00:00:03.840 --> 00:00:07.310
But there's actually a fourth method that rules them all.

3
00:00:07.320 --> 00:00:13.080
It's called query selector and I put an image of a Swiss Army knife here because query selector is like

4
00:00:13.080 --> 00:00:15.660
the Swiss army knife of Dom selectors.

5
00:00:15.660 --> 00:00:23.070
It can select everything that we used it can replicate the functionality of all of the selectors here

6
00:00:23.490 --> 00:00:29.220
we can select by an I.D. or a tag name or class name or many other criteria.

7
00:00:29.220 --> 00:00:37.230
The way it works is that we pass in a CSX style selector so we can select a I.D. using CSX where we

8
00:00:37.230 --> 00:00:43.920
pass in the hash symbol or a class we use a dot we can select an element just by writing the name of

9
00:00:43.920 --> 00:00:48.760
the element just like we do in CSX over here in my style sheet.

10
00:00:48.900 --> 00:00:49.890
Where are you.

11
00:00:49.890 --> 00:00:55.890
Here we are we're selecting by I.D. We're selecting H1 so we're selecting by class we can select by

12
00:00:55.890 --> 00:01:02.850
attribute we can do the same thing using query selector so query selector has not been a thing from

13
00:01:02.850 --> 00:01:09.450
the get go it hasn't been around as long as things like get element by I.D. which is why the other ones

14
00:01:09.450 --> 00:01:14.930
exist because this one is so much more versatile query selector seems like it's all you would ever need

15
00:01:15.300 --> 00:01:21.390
and you can use it for everything it just hasn't been around as long but it is supported in all the

16
00:01:21.390 --> 00:01:27.660
modern browsers including Internet Explorer it does work there unlike a lot of other features that we

17
00:01:27.660 --> 00:01:33.300
wish would work and there are two versions of query selector what we're looking at here query selector

18
00:01:33.420 --> 00:01:40.680
and also query selector all which does the same thing except it returns a collection query selector.

19
00:01:40.740 --> 00:01:44.130
This slide only returns a single element at most.

20
00:01:44.670 --> 00:01:51.750
So let's try it out over here if we want to select the H1 on the page we could do document dot and query

21
00:01:51.750 --> 00:02:03.270
selector H1 and we pass in the string each one and we get that H1 right there if we wanted to select

22
00:02:03.310 --> 00:02:10.270
the paragraph the first paragraph we could do it this way but remember it only gives us the first match

23
00:02:10.300 --> 00:02:14.370
and there are two paragraphs on this page so we only get the first one.

24
00:02:15.040 --> 00:02:23.530
I could also select the first input and this is essentially replicating get elements by tag name except

25
00:02:23.590 --> 00:02:29.770
we're getting the first match remember that get elements by tag name gives us a array like list versus

26
00:02:29.830 --> 00:02:35.890
query selector just gives us the first item the first match but we can do more complex things we could

27
00:02:35.890 --> 00:02:42.970
select by an IED we have to use the hash sign in order to select an idea just like we do when we're

28
00:02:42.970 --> 00:02:50.320
writing CSX so I have better photo I think if I can remember yep that's our idea for the image here.

29
00:02:50.560 --> 00:02:58.930
I also had a different idea what we're you mean we could select the second paragraph by using hash and

30
00:02:58.930 --> 00:03:05.240
then main so this is just like document I get element by I.D. main.

31
00:03:05.680 --> 00:03:11.110
But here we don't say it's an I.D. we just pass in a string it's assumed it's an I.D. when we use query

32
00:03:11.110 --> 00:03:13.060
selector we have to be more specific.

33
00:03:13.090 --> 00:03:15.930
We pass in D.C. CSF style selector.

34
00:03:16.270 --> 00:03:18.420
So I'm getting the same paragraph.

35
00:03:18.580 --> 00:03:21.110
Now what does query selector actually returned to us.

36
00:03:21.160 --> 00:03:23.310
Why don't we save both of those to a variable.

37
00:03:23.860 --> 00:03:31.840
So the first one I'll save to a variable called main one and then the second one where we use get element

38
00:03:31.840 --> 00:03:32.580
by I.D..

39
00:03:32.650 --> 00:03:40.150
I'll save two main two I'll clear my screen and then let's do the annoying console that desire our main

40
00:03:40.150 --> 00:03:43.520
one open it up.

41
00:03:43.680 --> 00:03:44.600
It looks like an object.

42
00:03:44.610 --> 00:03:45.480
It is an object.

43
00:03:45.600 --> 00:03:48.310
It's an H HD AML paragraph element.

44
00:03:48.420 --> 00:03:51.630
Let's do the same thing for main two.

45
00:03:51.840 --> 00:03:54.030
Looks like an object scroll down.

46
00:03:54.060 --> 00:03:57.590
It is an object and it's also an h him out paragraph element.

47
00:03:57.630 --> 00:03:57.870
All right.

48
00:03:58.080 --> 00:04:03.830
So they both give us the same thing in this case it's just two different ways of selecting.

49
00:04:03.990 --> 00:04:05.900
We can also select by class.

50
00:04:06.210 --> 00:04:10.090
If I wanted to select these elements I can only pick one.

51
00:04:10.120 --> 00:04:13.050
Remember this class is used in three different places.

52
00:04:13.050 --> 00:04:22.660
It's called What is it special so I can do a document that query selector of the I.D. special where

53
00:04:22.660 --> 00:04:25.630
I need to use a period to signify it's an I.D..

54
00:04:26.410 --> 00:04:28.020
So that gives me the first match.

55
00:04:28.030 --> 00:04:34.900
This paragraph here but because I can pass in a CSF selector I can get more complex I can say the first

56
00:04:34.990 --> 00:04:38.950
ally with the class of special and this is just valid CSX.

57
00:04:39.130 --> 00:04:40.650
So this is no new syntax.

58
00:04:40.750 --> 00:04:45.760
Assuming that you have some experience with CSX and that's why I did that whole video about making sure

59
00:04:45.760 --> 00:04:51.320
you're cool with H2 amounts to SS anyway let's go ahead and try something a little more complex.

60
00:04:51.430 --> 00:04:53.120
I'll add in a second.

61
00:04:53.290 --> 00:04:59.140
Well with a couple allies but instead of doing it just out in the open inside the body how come down

62
00:04:59.140 --> 00:05:02.040
to the end and add adding another you will.

63
00:05:02.080 --> 00:05:08.530
But I'll put it inside of a section tag and then I'll have my well and a couple allies I'll do vegetables

64
00:05:08.560 --> 00:05:15.160
I guess carrots peas and broccoli.

65
00:05:16.670 --> 00:05:18.500
Broccoli is there to season that.

66
00:05:19.380 --> 00:05:20.600
Yeah I think so.

67
00:05:20.600 --> 00:05:21.920
I don't know if I'm wrong.

68
00:05:21.920 --> 00:05:23.480
I'm really sorry.

69
00:05:23.780 --> 00:05:25.040
Okay so I've got those in there.

70
00:05:25.220 --> 00:05:29.000
Let's give peas the class of special as well.

71
00:05:29.000 --> 00:05:35.630
So if I want to select this ally right here using query selector I need to refresh my page and I want

72
00:05:35.630 --> 00:05:39.590
to select that ally right there with query selector.

73
00:05:39.650 --> 00:05:44.930
It's not going to work just by selecting the class of special because we're getting the first special

74
00:05:45.290 --> 00:05:51.230
which is up here and it's not going to work to say ally with the class of special because we have this

75
00:05:51.230 --> 00:05:55.800
first one that has an ally or is is an ally with a class of special.

76
00:05:55.970 --> 00:05:57.860
So how could I get more specific.

77
00:05:57.860 --> 00:06:03.610
Well this one is located inside of a section tag so I could do this.

78
00:06:03.620 --> 00:06:11.180
This is valid CSX section allied dot special I could even get more specific it won't make a difference

79
00:06:11.180 --> 00:06:15.020
here but it's also nested in a UL instead of a section.

80
00:06:15.170 --> 00:06:21.290
So this is saying find me a list item with the class of special that is nested somewhere in a U L that

81
00:06:21.290 --> 00:06:26.930
is itself nested somewhere in a section tag I mean I could even do this if I really wanted to body and

82
00:06:26.930 --> 00:06:31.360
get extra specific so that's another variation of query selector.

83
00:06:31.370 --> 00:06:34.360
That's just a valid C Ss selector syntax.

84
00:06:34.490 --> 00:06:36.970
We can also select based off of attributes.

85
00:06:37.130 --> 00:06:42.950
So if I want to get this password input right now if I do document that query selector of input you

86
00:06:42.950 --> 00:06:44.120
know what will happen.

87
00:06:44.120 --> 00:06:45.250
We have multiple inputs.

88
00:06:45.260 --> 00:06:52.220
We only get the first one which is right here typeset to text if I want that second one I can do input

89
00:06:53.120 --> 00:06:56.750
where type equals and then password.

90
00:06:57.350 --> 00:07:04.580
So this is using the CSX attribute selector syntax and now I get that input and we saw this syntax a

91
00:07:04.580 --> 00:07:07.600
couple videos ago with CSX we did the same thing.

92
00:07:07.700 --> 00:07:13.400
It's the identical selector we just moved it into a javascript string and passed it into query selector

93
00:07:14.210 --> 00:07:16.490
so we're not styling anything using this.

94
00:07:16.490 --> 00:07:18.300
We're purely selecting all right.

95
00:07:18.320 --> 00:07:20.850
So we've seen that query selector is pretty powerful.

96
00:07:20.990 --> 00:07:23.080
We can get a lot more specific.

97
00:07:23.210 --> 00:07:27.500
We can even ignoring that ignoring the fact that we can get more specific and detailed.

98
00:07:27.620 --> 00:07:32.630
We can use query selector in place of all those other methods we saw and then we have query selector

99
00:07:32.630 --> 00:07:40.500
all which uses the exact same syntax except it returns to us a collection so not just the first result.

100
00:07:40.610 --> 00:07:44.540
So if I do document that query selector of input I get the first input.

101
00:07:44.540 --> 00:07:50.600
If I do a query selector all I get all inputs that match and there's three of them.

102
00:07:50.750 --> 00:07:57.560
If I did document that query selector all dots let's do the class of special.

103
00:07:57.560 --> 00:08:05.570
We have four items the paragraph is special and then the three allies if I do ally we get six of them

104
00:08:05.600 --> 00:08:08.370
because there's six total allies on this page.

105
00:08:08.450 --> 00:08:13.180
If I do something like the idea of did we have one called Main.

106
00:08:13.190 --> 00:08:19.010
I think so when this paragraph or this paragraph is the idea of main we still get a collection just

107
00:08:19.010 --> 00:08:20.800
with one item in it.

108
00:08:20.840 --> 00:08:27.120
Notice something kind of odd this result that we're getting back is a node list.

109
00:08:27.380 --> 00:08:36.690
But when we do document that let's do get elements by tag name elements by tag name of allies.

110
00:08:37.190 --> 00:08:42.040
We get in H team out collection here we got something called a node list.

111
00:08:42.830 --> 00:08:44.270
So what does a node list.

112
00:08:44.270 --> 00:08:46.560
It's another type of a collection.

113
00:08:46.580 --> 00:08:48.610
You don't need to worry about it too much here.

114
00:08:48.770 --> 00:08:55.460
But if we look at what the notice contains this paragraph is still in H came out paragraph element.

115
00:08:55.460 --> 00:08:58.510
It's just put it in a different container from query selector all.

116
00:08:58.520 --> 00:08:59.630
That's how it works.

117
00:08:59.720 --> 00:09:02.420
A node list is another array like object.

118
00:09:02.690 --> 00:09:05.830
And if we play around with it we can save it to a variable.

119
00:09:05.840 --> 00:09:07.300
So let's get all of the.

120
00:09:07.640 --> 00:09:08.660
Which one should we do.

121
00:09:08.690 --> 00:09:16.790
Let's save all of the special class elements to a variable we'll call it specials and I'll clear my

122
00:09:16.790 --> 00:09:17.250
console.

123
00:09:17.270 --> 00:09:18.200
Make some more room.

124
00:09:18.350 --> 00:09:19.740
So we have specials.

125
00:09:20.060 --> 00:09:24.290
It is an array like object so I can do specials of 0.

126
00:09:24.380 --> 00:09:31.860
I can do specials dots length and then if we do specials dot and then look at what else we have.

127
00:09:32.120 --> 00:09:35.500
There's really not much else but we do have for each.

128
00:09:35.510 --> 00:09:39.090
So this was not available to us with a HD him our collection.

129
00:09:39.200 --> 00:09:42.400
It is available with a node list but don't get bogged down.

130
00:09:42.410 --> 00:09:43.390
Don't worry about it.

131
00:09:43.400 --> 00:09:45.950
Honestly it's not a big deal at this point.

132
00:09:45.950 --> 00:09:48.410
I just wanted to highlight that there is a slight difference.

133
00:09:48.530 --> 00:09:51.040
They're not the exact same type.

134
00:09:51.080 --> 00:09:54.980
They're not they're not the exact same collection that we get back or the container is different.

135
00:09:55.010 --> 00:10:01.190
Both of them are fake lightweight versions of arrays so that is one difference when you use query selector

136
00:10:01.820 --> 00:10:06.960
and also another difference to know about query selector is that it is a little less performance.

137
00:10:07.040 --> 00:10:11.780
It's really not a big deal for the stuff we're doing but as you can imagine depending on the selector

138
00:10:11.780 --> 00:10:18.530
you pass in it could have to do a lot of work compared to some of these older versions like get element

139
00:10:18.530 --> 00:10:21.080
by idea or get elements by tag name.

140
00:10:21.140 --> 00:10:26.660
Generally those are a little bit more optimized or a little faster but I definitely definitely would

141
00:10:26.660 --> 00:10:30.980
recommend you go with query selector and it's not a good enough reason it's not a good enough difference

142
00:10:31.220 --> 00:10:34.140
to not use or to avoid query selector.

143
00:10:34.150 --> 00:10:37.610
All right so query SELECT your query selector all very useful.

144
00:10:37.670 --> 00:10:42.890
It's what I'll be using for most of the course here because we can get more specific but also it's just

145
00:10:42.890 --> 00:10:48.020
nice to use one method and not have to worry about those other methods you pass in a CSF selector as

146
00:10:48.020 --> 00:10:54.290
a string and you get back either the first match if you're using query selector or you get back a collection

147
00:10:54.290 --> 00:10:55.490
of all matches.

148
00:10:55.490 --> 00:10:57.020
If you use query selector all.
