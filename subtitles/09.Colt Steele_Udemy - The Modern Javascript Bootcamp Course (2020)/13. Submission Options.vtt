WEBVTT
1
00:00:00.820 --> 00:00:05.620
Let's get started putting together a POST request handler to deal with a user trying to add an item

2
00:00:05.620 --> 00:00:06.730
to a cart.

3
00:00:06.730 --> 00:00:11.410
So again the idea here is we want to make sure that clicking on the Add To Cart button triggers a POST

4
00:00:11.410 --> 00:00:12.610
request.

5
00:00:12.610 --> 00:00:15.570
So let's first open up our template that is generating this.

6
00:00:15.610 --> 00:00:18.830
Each team right here essentially our big product's listing.

7
00:00:19.120 --> 00:00:20.920
We're gonna find that button right there.

8
00:00:20.980 --> 00:00:25.150
We're going to make sure that is wrapped inside of a form element that's going to trigger a POST request

9
00:00:26.290 --> 00:00:30.480
so defined the template that renders out all that big listing of products.

10
00:00:30.530 --> 00:00:36.890
We'll find our views directory inside there we'll find the products directory and then inside of that

11
00:00:36.890 --> 00:00:39.070
we'll find index dot J.S..

12
00:00:39.110 --> 00:00:45.400
So this is a file that we just copy pasted a pretty good amount of H2 into just a moment to go inside

13
00:00:45.400 --> 00:00:51.540
of here inside of the rendered products map statement we can find a footer element.

14
00:00:51.610 --> 00:00:56.200
So this photo right here is what is responsible for showing that button all the way at the bottom of

15
00:00:56.290 --> 00:01:01.880
each individual product listing inside of that footer you'll see that there is the button with the text

16
00:01:01.880 --> 00:01:03.830
that says add to cart.

17
00:01:03.830 --> 00:01:07.100
In addition there is already a form element inside there.

18
00:01:07.100 --> 00:01:11.150
So I took the liberty of putting in that form element because I think we've done that stuff enough already

19
00:01:11.150 --> 00:01:16.380
inside this course and you probably don't really want to put together another form so you'll notice

20
00:01:16.380 --> 00:01:19.130
that the form has a method of post which is what we want.

21
00:01:19.320 --> 00:01:21.720
And it also has a defined action property.

22
00:01:21.870 --> 00:01:26.300
Remember the action defines where the browser is going to submit this form data to.

23
00:01:26.520 --> 00:01:32.250
Right now it's going to attempt to submit all this or this request to an end point of slash cart slash

24
00:01:32.250 --> 00:01:33.600
products.

25
00:01:33.600 --> 00:01:38.820
Now that's definitely OK but there's a little issue with that approach right now that form doesn't actually

26
00:01:38.820 --> 00:01:43.150
contain any meaningful inputs and there are many forms on the screen.

27
00:01:43.250 --> 00:01:48.570
So right now if we were to click on any of these buttons we would really have no idea of what product

28
00:01:48.810 --> 00:01:52.160
we were trying to add we wouldn't have any idea of OK.

29
00:01:52.170 --> 00:01:55.790
We want to add the gloves as opposed to khaki pants.

30
00:01:56.010 --> 00:02:00.750
So we need to make sure that when a user clicks on that form element we somehow communicate some information

31
00:02:00.750 --> 00:02:05.600
about the product that we're trying to add into the shopping cart to do so.

32
00:02:05.600 --> 00:02:07.930
There are two different approaches we can use.

33
00:02:08.090 --> 00:02:13.440
We can either put the idea the product that we want to add into our cart at the very end of that year

34
00:02:13.450 --> 00:02:19.820
L. so we could say something like Dollar Sign curly brace product dot I.D..

35
00:02:19.970 --> 00:02:26.030
So now we would be submitting our form to an end point of cart products slash the idea of this product

36
00:02:26.690 --> 00:02:31.550
so we could definitely form our request handler to make sure that it reads in the last part of the URL

37
00:02:31.820 --> 00:02:38.030
as a parameter just as we've done once before and essentially read whatever string is right after that

38
00:02:38.030 --> 00:02:43.370
slash right there that is the first way that we could somehow decide what product we're trying to add

39
00:02:43.370 --> 00:02:51.420
to a cart the other way that we could approach this is to add an input element into the form itself.

40
00:02:51.420 --> 00:02:55.380
We could have this input be hidden so user would not see it at all.

41
00:02:55.590 --> 00:03:05.080
And then here's the critical step we could assign a value of product dot I.D. So now whenever a user

42
00:03:05.080 --> 00:03:10.780
submits this form behind the scenes totally invisible to the user there's also going to be an input

43
00:03:10.840 --> 00:03:16.780
inside there and the input is going to have a value of the products I.D. And so inside of our post request

44
00:03:16.780 --> 00:03:24.180
handler we could read from req dot body and get the information stored inside that input so those are

45
00:03:24.180 --> 00:03:26.730
two different ways to achieve the exact same thing.

46
00:03:27.880 --> 00:03:32.590
Just for variety sake we're going to try to use this hidden input as a way to figure out what product

47
00:03:32.650 --> 00:03:35.180
we're trying to add into the cart.

48
00:03:35.210 --> 00:03:40.770
I'm going to make sure that this input also has a name property so that we know how to actually access

49
00:03:40.770 --> 00:03:48.260
this product I.D. so call it about a name of product I.D. makes enough sense okay.

50
00:03:48.350 --> 00:03:51.700
So now we're going to want to put together a post request handler.

51
00:03:51.770 --> 00:03:56.180
We're going to make sure that we receive a post request to cart slash products.

52
00:03:56.180 --> 00:04:02.150
And then inside that handler we're going to try to get the REC dot body dot product I.D. and that is

53
00:04:02.150 --> 00:04:06.330
gonna be the idea of the product that we're trying to add to the user's cart.

54
00:04:06.540 --> 00:04:14.860
Let's go back to our carts route file right underneath the first comment I'll add in router dot post.

55
00:04:15.110 --> 00:04:18.800
We're going to watch for a post request to cart slash products

56
00:04:23.880 --> 00:04:29.460
I'll put in my callback function with rec and rez and then inside of here right now we'll just do a

57
00:04:29.460 --> 00:04:32.130
wreck not body dot product I.D..

58
00:04:32.130 --> 00:04:36.810
So again that's going to be the idea the product we want to add to our cart and then at the bottom.

59
00:04:36.840 --> 00:04:43.600
Right now I'll just do a resort send of product added about product added to cart just to be a little

60
00:04:43.600 --> 00:04:46.020
bit more specific okay.

61
00:04:46.060 --> 00:04:48.070
Let's save that.

62
00:04:48.170 --> 00:04:54.680
I'm gonna go back over to the browser or refresh I'll hit add to cart I see the text product added to

63
00:04:54.680 --> 00:04:54.950
cart.

64
00:04:54.950 --> 00:04:55.730
Very good.

65
00:04:55.730 --> 00:05:01.850
And if I go to my terminal I will see the idea of the product that I just tried to add right.

66
00:05:01.860 --> 00:05:04.280
So this definitely works out as a first step.

67
00:05:04.300 --> 00:05:06.740
So now we know exactly what product we're trying to add.

68
00:05:06.810 --> 00:05:10.500
Now we just need to figure out all that kind of cart related logic.

69
00:05:10.500 --> 00:05:12.900
So in other words all the stuff we saw on this diagram.

70
00:05:12.900 --> 00:05:16.530
So we need to make sure that we create a cart and store it inside of a repository.

71
00:05:16.620 --> 00:05:21.240
And when we create that cart we need to make sure that we store the idea the cart that was created on

72
00:05:21.240 --> 00:05:24.930
the user's cookie so that it gets appended onto follow up requests.

73
00:05:24.930 --> 00:05:28.350
And we know that this cart belongs to that user.

74
00:05:28.350 --> 00:05:29.990
So still a pretty good amount of work to do.

75
00:05:30.000 --> 00:05:31.950
Let's get started in the next video.
