1
00:00:01,850 --> 00:00:03,200
Tick method definitely works.

2
00:00:03,210 --> 00:00:06,480
But I want to point out something kind of awkward about it right now.

3
00:00:06,480 --> 00:00:10,920
Right now in order to figure out what the current value of our time remaining is we're going to always

4
00:00:10,920 --> 00:00:16,830
have to run that chunk of code right there at present inside of our tick class or assuming our Timer

5
00:00:16,830 --> 00:00:17,700
class.

6
00:00:17,700 --> 00:00:21,930
This is the only location where we really need to figure out what the current time remaining is.

7
00:00:21,930 --> 00:00:26,580
However in the future we might have many different methods inside of our class in each those different

8
00:00:26,580 --> 00:00:29,120
methods might need to access the current time.

9
00:00:29,310 --> 00:00:34,010
And so we would all have that little repeated piece of code right there.

10
00:00:34,190 --> 00:00:37,570
The same thing is true of updating the value inside the input as well.

11
00:00:37,760 --> 00:00:42,080
Every single time we want to update the value we have to reference this dot duration input dot value

12
00:00:42,560 --> 00:00:46,120
which again starts to get just a little bit old pretty quickly.

13
00:00:46,130 --> 00:00:51,650
So in this video I want to try to extract that little expression right there where we get a value out

14
00:00:51,650 --> 00:00:55,280
of our text input and pass it with the pass flow method.

15
00:00:55,350 --> 00:01:02,430
I want to extract out that part right there where we set the value of our duration input as well so

16
00:01:02,440 --> 00:01:06,330
to do this we could define it to a helper methods inside of our class.

17
00:01:06,340 --> 00:01:12,650
We could say something like get time or get time remaining or something like that.

18
00:01:12,730 --> 00:01:20,830
I'll go with get time and we could also define set time as well so inside of get time we could do something

19
00:01:20,830 --> 00:01:23,950
like return hours.

20
00:01:23,980 --> 00:01:32,100
Float this dot duration input dot value and on set time we could receive some new time and then set

21
00:01:32,100 --> 00:01:34,880
that inside of the duration input.

22
00:01:34,890 --> 00:01:36,710
Like so.

23
00:01:36,740 --> 00:01:41,030
So this is definitely an approach that would work any time we want to get our time call that method

24
00:01:41,060 --> 00:01:46,190
any time we want to set it call that method and we no longer have to worry or remember at all about

25
00:01:46,190 --> 00:01:51,530
how we actually get a value out of there but rather than using these two functions there's a little

26
00:01:51,530 --> 00:01:56,380
bit better way of handling this by using a feature inside of our javascript classes.

27
00:01:56,570 --> 00:02:01,240
So the better way of handling this is to use a getter and a setter method.

28
00:02:01,240 --> 00:02:04,860
Well let's figure out how those work it's going to delete those two methods.

29
00:02:04,970 --> 00:02:12,220
I'm going to set up a getter and a center for a new property that I'm going to call time remaining so

30
00:02:12,410 --> 00:02:20,920
I gonna say get time remaining to notice how I've got a keyword in front of the method name so inside

31
00:02:20,920 --> 00:02:25,300
of here we're going to write out the code that's going to get the time remaining out of our duration

32
00:02:25,330 --> 00:02:25,930
input.

33
00:02:25,930 --> 00:02:37,180
So I will return RS float this dot duration input dot value so now because we have to get keyword right

34
00:02:37,180 --> 00:02:42,400
here in order to run this method rather than saying something like back up inside of tick we're going

35
00:02:42,400 --> 00:02:45,440
to eventually replace that right there so I'm just going to delete it right away.

36
00:02:45,490 --> 00:02:51,580
So rather than saying this time remaining and calling it like a method because the keyword is right

37
00:02:51,580 --> 00:02:57,910
here we can instead treat this as though it were an instance variable so we can just say this dot time

38
00:02:57,970 --> 00:03:03,610
remaining that is going to automatically invoke this function right here even though we don't have the

39
00:03:03,610 --> 00:03:05,530
parentheses on the end.

40
00:03:05,530 --> 00:03:09,550
The reason it gets invoked is because of that get keyword we set up a getter.

41
00:03:09,550 --> 00:03:14,140
This is how we add in some logic that's going to essentially retrieve a variable inside of our class

42
00:03:14,740 --> 00:03:17,740
and we don't have to call a method or anything like that.

43
00:03:17,830 --> 00:03:19,620
So this might seem like a very small difference.

44
00:03:19,620 --> 00:03:24,040
Like at the end of day what is the difference between putting on time remaining with the parentheses

45
00:03:24,160 --> 00:03:29,830
in not the difference is that when we are able to write out just this time remaining it makes it kind

46
00:03:29,830 --> 00:03:34,780
of a little bit more clear to other engineers or we kind of trick other engineers another way of putting

47
00:03:34,780 --> 00:03:42,440
it into thinking that we are just retrieving a instance variable or like a property of the class and

48
00:03:42,440 --> 00:03:48,020
we are essentially hiding away all the confusion about what is really going on with trying to get some

49
00:03:48,020 --> 00:03:51,140
value out of that input inside the Skitter.

50
00:03:51,140 --> 00:03:56,700
So we could even like collapse this thing right here and we could forget about the implementation entirely.

51
00:03:56,750 --> 00:04:00,650
And as far as another engineer is concerned as they read this they're just gonna look at this and think

52
00:04:00,710 --> 00:04:01,080
OK.

53
00:04:01,100 --> 00:04:04,930
There's like a time remaining instance variable and they won't have to worry about the fact that this

54
00:04:05,030 --> 00:04:09,320
actually technically is a function or anything like that.

55
00:04:09,360 --> 00:04:11,210
Now we can use a very similar approach.

56
00:04:11,250 --> 00:04:15,180
We can set up a setter to change the value inside the input.

57
00:04:15,180 --> 00:04:19,830
And once again we can essentially hide away all the complexity around actually setting the value as

58
00:04:19,830 --> 00:04:28,880
well so I can say set time remaining we're going to call this with the updated time and inside of here

59
00:04:28,880 --> 00:04:31,160
we'll have these same implementation we had before.

60
00:04:31,270 --> 00:04:35,140
We'll say this dot duration input dot value equals time

61
00:04:38,090 --> 00:04:44,570
start to make use of the setter we can just attempt to set a value to the variable time remaining so

62
00:04:44,570 --> 00:04:50,090
backup here rather than saying this dot duration input dot value we could instead just say this dot

63
00:04:50,210 --> 00:04:59,250
time remaining equals time remaining minus 1 so in this case we are attempting to set a value or essentially

64
00:04:59,250 --> 00:05:04,680
assign a value to the value or speed to the property time remaining time remaining is actually technically

65
00:05:04,680 --> 00:05:10,320
a function but again because we put these set keyword inside of here when we assign a value to it whatever

66
00:05:10,410 --> 00:05:16,400
this value is right here is going to be automatically provided as the argument right here of time.

67
00:05:16,710 --> 00:05:21,720
And so again we're essentially going to hide away all the complexity around how we actually update the

68
00:05:21,750 --> 00:05:24,890
variable time remaining inside of our class.

69
00:05:25,050 --> 00:05:35,120
It's now in total this entire tick method can be condensed down to just this time remaining equals this

70
00:05:35,120 --> 00:05:38,890
dot time remaining minus 1.

71
00:05:38,900 --> 00:05:43,940
So again behind the scenes we are calling the getter right there to retrieve that value and recalling

72
00:05:43,970 --> 00:05:48,070
the setter right here whenever we want to update the value.

73
00:05:48,300 --> 00:05:52,730
And I can't say enough I can say it for like the fourth time inside this video we have hidden away all

74
00:05:52,730 --> 00:05:58,940
the complexity on how we get at that value and how how we set it OK.

75
00:05:58,970 --> 00:06:01,550
So I would definitely say this is a big improvement.

76
00:06:01,760 --> 00:06:04,010
And this is another good reason.

77
00:06:04,010 --> 00:06:08,900
In this particular case again this is not super popular approach these days but it's a good reason to

78
00:06:08,900 --> 00:06:14,420
go with option number two is one of the reasons that in the past we as javascript developers kind of

79
00:06:14,510 --> 00:06:19,730
moved away from option number two is that we always had to write out some really confusing code like

80
00:06:19,790 --> 00:06:25,010
this right here and this right here in order to update values inside the DOM whenever we are storing

81
00:06:25,220 --> 00:06:30,800
values on Dom elements but because we now have access to getters and setters which are a newer feature

82
00:06:30,800 --> 00:06:35,330
inside of JavaScript we can write out methods that look like this that makes storing this data a lot

83
00:06:35,360 --> 00:06:39,820
easier than it had been in the past okay.

84
00:06:39,850 --> 00:06:40,870
Let's save this.

85
00:06:40,870 --> 00:06:45,940
We're going to do another quick test so I'll flip back over I'll refresh it starts and we are still

86
00:06:45,940 --> 00:06:52,960
counting down successfully I can pause again update the value it start and it still works correctly

87
00:06:54,090 --> 00:06:54,300
okay.

88
00:06:54,330 --> 00:06:56,620
So this is definitely looking pretty good.

89
00:06:56,640 --> 00:06:59,670
Let's take a quick pause right here and continue in just a moment.
