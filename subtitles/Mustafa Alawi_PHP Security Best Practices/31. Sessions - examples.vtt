WEBVTT
1
00:00:00.580 --> 00:00:01.270
Welcome back.

2
00:00:01.660 --> 00:00:09.340
Now, let me show you a sample card of how you can protect your application against station hijacking.

3
00:00:09.850 --> 00:00:14.920
So, first of all, as you know, whenever you want to create a session, you need to start the session

4
00:00:14.920 --> 00:00:16.210
by saying session start.

5
00:00:16.900 --> 00:00:26.170
And then this good is very, very effective in terms of checking who is the user and who is logged in

6
00:00:26.560 --> 00:00:33.070
and how long the session has been, how long since the decision has been created?

7
00:00:33.510 --> 00:00:34.720
All all of these things.

8
00:00:34.720 --> 00:00:42.910
And which IP address and whether the IP address matches the the IP address that logged in.

9
00:00:43.300 --> 00:00:44.680
So let me walk you through this.

10
00:00:44.890 --> 00:00:52.360
So this first of all, this if statement is going to check whether the remote adder is not equal to

11
00:00:52.360 --> 00:00:53.890
the IP address.

12
00:00:54.520 --> 00:01:00.220
So in other words, this if statement is going to ask this question, does the IP address match?

13
00:01:01.000 --> 00:01:02.740
Does the IP address match or not?

14
00:01:03.340 --> 00:01:09.220
If it doesn't match, then it is going to unset decision and destroy the session immediately.

15
00:01:09.580 --> 00:01:13.150
This is what I was talking about, which is destroying the session.

16
00:01:13.150 --> 00:01:19.300
Whenever something is off, always destroy the session when you find that something is off.

17
00:01:19.930 --> 00:01:27.550
The second if statement is going to ask this question Does user agent agent match if the server a HTP

18
00:01:27.550 --> 00:01:34.240
user agent is not equal to the sessions user agent, then we need to destroy the session.

19
00:01:34.570 --> 00:01:40.780
And notice here in these two if statements we are comparing the server, the servers remote other which

20
00:01:40.780 --> 00:01:45.520
is the IP address with the sessions IP address.

21
00:01:45.820 --> 00:01:46.570
And here we are.

22
00:01:46.660 --> 00:01:52.300
We are also comparing the servers HTP user agent with the sessions, the user agent.

23
00:01:52.720 --> 00:01:57.580
And if they don't match for some reason, then we need to destroy the session immediately.

24
00:01:58.450 --> 00:02:00.040
The third if statement.

25
00:02:01.170 --> 00:02:05.130
Is going to check the the length of the session.

26
00:02:05.130 --> 00:02:06.480
So it's going to ask this question.

27
00:02:07.810 --> 00:02:11.020
Is their last access over an hour ago.

28
00:02:11.830 --> 00:02:17.530
So if logging in happened over one hour, then we need to destroy the session, meaning that the user

29
00:02:17.530 --> 00:02:18.310
must log in.

30
00:02:19.240 --> 00:02:25.690
If they don't use their my your application for more than one hour.

31
00:02:26.020 --> 00:02:32.470
So if they are if they are, if they have been inactive for more than one hour, then we need to destroy

32
00:02:32.470 --> 00:02:36.310
the session and they must log in after that amount of time.

33
00:02:36.550 --> 00:02:38.680
And of course, you can modify this time.

34
00:02:38.680 --> 00:02:42.700
Maybe your time is only half an hour or maybe 15 minutes.

35
00:02:43.000 --> 00:02:52.180
So applications such as bank accounts, applications and financial institutions must save this to only

36
00:02:52.180 --> 00:03:01.180
15 minutes or 10 minutes, because otherwise this could pose a big problem through their applications.

37
00:03:02.110 --> 00:03:11.470
And finally, here ls if the user is still using your application and the time is is is not more than

38
00:03:11.470 --> 00:03:14.470
one hour, then the time is going to be equal to their last access.

39
00:03:14.770 --> 00:03:16.540
And we saw the last access in this session.

40
00:03:17.050 --> 00:03:24.550
And we always check the last access by using by comparing the time, by increasing by adding a time

41
00:03:24.550 --> 00:03:25.960
to the to the current time.

42
00:03:26.530 --> 00:03:28.960
So again, this good is very effective.

43
00:03:28.960 --> 00:03:30.310
I'd recommend using this code.

44
00:03:30.310 --> 00:03:32.560
You can add this code to your application.

45
00:03:32.560 --> 00:03:34.090
Always add this, go to your application.

46
00:03:34.510 --> 00:03:36.580
But of course, this is not the only code.

47
00:03:36.580 --> 00:03:42.940
You always need to check the session who is logged in and always check the session.

48
00:03:43.240 --> 00:03:49.840
But this code is important because many developers don't know about how to check the IP address and

49
00:03:49.840 --> 00:03:51.940
also check the agent, the user agent.

50
00:03:52.360 --> 00:03:54.540
And also many users, unfortunately, don't.

51
00:03:54.550 --> 00:04:00.730
Many developers, unfortunately, don't know how to set decision to a specific amount of time and then

52
00:04:00.730 --> 00:04:04.150
destroy that session if that time has been exceeded.

53
00:04:06.430 --> 00:04:08.440
So this code is very important.

54
00:04:08.440 --> 00:04:14.380
And again, I recommend adding this code to your application whenever you are developing a new application

55
00:04:14.380 --> 00:04:16.600
or even in your all applications.

56
00:04:16.600 --> 00:04:23.830
I recommend tapping this code to check the session and check the these things before allowing users

57
00:04:23.830 --> 00:04:26.290
to continue using your application.
