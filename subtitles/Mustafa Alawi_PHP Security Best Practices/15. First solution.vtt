WEBVTT
1
00:00:00.830 --> 00:00:06.950
So what are the solutions that would protect our application against ill injection?

2
00:00:07.550 --> 00:00:14.240
Well, there are so many solutions, but the most common solutions are using PD or whenever you are

3
00:00:14.240 --> 00:00:22.550
connecting to your database, you need to use video PD or or you can use the repair function where they

4
00:00:22.580 --> 00:00:26.360
might ask you, I object.

5
00:00:26.510 --> 00:00:27.500
So you have to.

6
00:00:27.680 --> 00:00:37.700
These are the most common two solutions that you can use in order to prevent hackers and bad users from

7
00:00:37.700 --> 00:00:47.930
injecting or using you inject injection technique to get access to your database or harm your database.

8
00:00:48.530 --> 00:00:54.530
So let me show you how these things, these two solutions could be helpful.

9
00:00:54.920 --> 00:01:00.740
So I have here prepared this document where it shows the two the the two solutions.

10
00:01:00.740 --> 00:01:04.730
And I'm going to be implementing the two solutions and showing you how to use them.

11
00:01:05.210 --> 00:01:07.070
So the first solution is BDO.

12
00:01:07.460 --> 00:01:14.360
So with BDO, all you need to do is that instead of using the simple minus connection function, you

13
00:01:14.360 --> 00:01:19.220
can use the PD or object to connect to the database.

14
00:01:19.610 --> 00:01:29.450
And then you need to use the prepare to prepare the prepare function and then and then just pass the,

15
00:01:30.830 --> 00:01:32.630
the scale query.

16
00:01:32.660 --> 00:01:39.260
However, here you aren't going to pass the the piece of data that the user is going to provide you

17
00:01:39.680 --> 00:01:41.090
directly to the query.

18
00:01:41.110 --> 00:01:48.140
Instead, you are just going to pass here some kind of a holder, and then you will use the mind program

19
00:01:48.650 --> 00:01:52.610
to pass that piece of data that the user is going to provide you.

20
00:01:52.610 --> 00:01:56.180
And in our case, it's a user ID and then.

21
00:01:57.510 --> 00:02:04.170
Then you can use the execute function to execute that query and everything is going to be fine.

22
00:02:04.560 --> 00:02:05.880
So this is the first solution.

23
00:02:06.420 --> 00:02:11.880
The second solution is to use my usual AI, as we already used, as we as we already have.

24
00:02:12.600 --> 00:02:19.950
But the only difference is that instead of using the wide scale query function, we will be using the

25
00:02:19.950 --> 00:02:20.800
preparer function.

26
00:02:20.820 --> 00:02:28.410
The proper function is more secure and it allows you to have here some kind of a holder.

27
00:02:28.920 --> 00:02:35.250
And then you can use the excuse function and pass the the data that you want to pass to the query using

28
00:02:35.250 --> 00:02:36.390
the execute function.

29
00:02:36.810 --> 00:02:44.640
So this way you will be protecting your database against your your application and database against

30
00:02:44.640 --> 00:02:45.720
this Google injection.

31
00:02:46.080 --> 00:02:47.880
So let's implement these two solutions.

32
00:02:48.360 --> 00:02:49.890
Let me start with video.

33
00:02:50.430 --> 00:02:52.230
So remember, here we have this application.

34
00:02:52.770 --> 00:02:59.540
Allow me again, go back to the first example, which is the college example student.

35
00:03:03.940 --> 00:03:04.660
Finder.

36
00:03:06.530 --> 00:03:09.860
And let me fill my database.

37
00:03:10.220 --> 00:03:14.570
My my tables with my table with data is I have this command.

38
00:03:15.320 --> 00:03:19.940
Let me first insert remember I deleted I was a hacker.

39
00:03:19.940 --> 00:03:27.830
I was pretending that I was a hacker and I deleted the the table completely let so like my database

40
00:03:27.830 --> 00:03:30.800
and let me insert the table one more time.

41
00:03:32.420 --> 00:03:36.080
So let me here click on go and set the table and insert the data.

42
00:03:36.080 --> 00:03:43.910
So now I have the I have the users table again in my database.

43
00:03:44.630 --> 00:03:47.720
Let me now go back to the index.

44
00:03:48.260 --> 00:03:56.690
And now what I'm going to do is that I am going to use instead of using the config here, I'm going

45
00:03:56.690 --> 00:03:57.950
to remove this config.

46
00:03:58.670 --> 00:04:03.290
Instead I'm going to use New and then PDR.

47
00:04:05.980 --> 00:04:07.060
And then I'm going to say here.

48
00:04:09.200 --> 00:04:10.100
PD oh.

49
00:04:10.130 --> 00:04:12.500
Is equal to or let's say con.

50
00:04:13.040 --> 00:04:15.850
Yes, con is equal to PDR.

51
00:04:16.370 --> 00:04:17.840
And then I'm going to pass the credentials.

52
00:04:17.840 --> 00:04:19.370
So the credentials are here.

53
00:04:19.880 --> 00:04:21.230
So these are the credentials.

54
00:04:21.920 --> 00:04:25.970
Let me copy them and let me pass them here to this BDO.

55
00:04:26.300 --> 00:04:31.730
So the PDR function takes the first parameter is the database name.

56
00:04:32.840 --> 00:04:34.010
So this is the database.

57
00:04:36.440 --> 00:04:37.250
This is the.

58
00:04:39.720 --> 00:04:40.590
The limit.

59
00:04:40.590 --> 00:04:41.430
Take one more time.

60
00:04:41.790 --> 00:04:44.160
So the first one is my database name.

61
00:04:44.640 --> 00:04:47.070
First, we need to pass the database name and then the host.

62
00:04:47.790 --> 00:04:50.410
So here's what I'm going to do, is that I'm going to pass the database name.

63
00:04:50.880 --> 00:04:55.350
The name of the database must be here, BHP and then underscore project.

64
00:04:56.640 --> 00:04:58.230
And then the second parameter.

65
00:05:00.090 --> 00:05:02.310
Is the remember the second parameter?

66
00:05:03.240 --> 00:05:08.250
Let me copy it from here in order not to go back and forth because they want to save some time.

67
00:05:08.250 --> 00:05:10.950
So here might ask you a data database.

68
00:05:10.950 --> 00:05:17.100
The database is here is project P2P underscore project.

69
00:05:18.120 --> 00:05:21.660
The second parameter is host is equal to localhost.

70
00:05:21.660 --> 00:05:22.230
So here.

71
00:05:23.930 --> 00:05:24.680
Look out.

72
00:05:25.880 --> 00:05:26.290
Lost.

73
00:05:27.620 --> 00:05:29.110
The third parameter is the username.

74
00:05:29.120 --> 00:05:32.980
The username is root and the last parameter is the password.

75
00:05:32.990 --> 00:05:34.220
The password is nothing.

76
00:05:35.180 --> 00:05:36.200
The password is nothing.

77
00:05:36.200 --> 00:05:40.250
So this is the, the, the parameter.

78
00:05:40.550 --> 00:05:43.400
This is the variable that I'm going to be using to connect to the database.

79
00:05:44.120 --> 00:05:48.470
Then what we need to do is that we need to use the prepare function.

80
00:05:49.130 --> 00:05:51.110
So what I'm going to do here is that I'm going to say.

81
00:05:52.080 --> 00:05:53.850
Here inside this statement.

82
00:05:54.740 --> 00:06:03.960
Instead of using my excuse, Ill agree I'm going to remove this and I'm going to say con and then I'm

83
00:06:03.960 --> 00:06:08.350
going to call a function called repair and then I'm going to pass the query.

84
00:06:08.370 --> 00:06:16.920
Select all from users where user ID is equal to this time, the user ID is going to be equal to a placeholder,

85
00:06:16.920 --> 00:06:20.860
so it's going to be equal to colon and then user underscore IP.

86
00:06:30.370 --> 00:06:36.520
And then what we need to do is that Laney check this one more time is that we need to use this and maybe

87
00:06:36.520 --> 00:06:37.260
copy this code.

88
00:06:37.420 --> 00:06:39.040
Me copy the complete code instead of.

89
00:06:40.420 --> 00:06:41.500
Going back and forth.

90
00:06:42.400 --> 00:06:46.480
So I'm going to piece that code here and I'm going to delete what needs to be deleted.

91
00:06:47.170 --> 00:06:54.070
First, I'm going to remove this line and I'm going to remove this one and this free and.

92
00:06:56.290 --> 00:06:56.680
Here.

93
00:06:56.680 --> 00:07:01.630
What we need to do is that we need to address like this and here the user I.D. and then execute.

94
00:07:02.110 --> 00:07:06.250
And then finally, we need to remove this and we need to echo.

95
00:07:07.910 --> 00:07:09.380
We need to say.

96
00:07:14.490 --> 00:07:15.450
Your echo.

97
00:07:15.450 --> 00:07:19.700
And then the result, the result now is going to be here.

98
00:07:19.710 --> 00:07:22.920
So instead of saying result, I'm going to I'm going to remove this.

99
00:07:25.020 --> 00:07:25.770
Conviction.

100
00:07:27.220 --> 00:07:30.250
I'm going to remove this and then I'm going to say statement is the edge.

101
00:07:30.970 --> 00:07:32.410
And then here I'm going to say result.

102
00:07:32.420 --> 00:07:35.950
So the result is going to be equal to the executed here.

103
00:07:36.580 --> 00:07:39.760
Result is equal to execute, but we cannot use the associate here.

104
00:07:40.460 --> 00:07:45.760
Instead, we can use the in order to display the result.

105
00:07:45.760 --> 00:07:50.230
I think we can use the var, let's use the var dump or the print instead.

106
00:07:51.010 --> 00:07:55.210
So instead of using this, I'm going to comment this out and then I'm going to say.

107
00:07:56.200 --> 00:07:57.890
Var dump.

108
00:08:00.900 --> 00:08:02.910
I'm going I'm going to use here the result.

109
00:08:04.800 --> 00:08:07.390
Let me now sleep and let me hear the negative to twist.

110
00:08:08.700 --> 00:08:15.870
So now, now let me first remove this parameter and then refresh.

111
00:08:16.380 --> 00:08:19.290
And now we have the college student finder application.

112
00:08:19.680 --> 00:08:22.620
Let me give you type three, for example, and let me click on find.

113
00:08:23.160 --> 00:08:25.110
If you click on find, I'm going to get to your boolean.

114
00:08:25.110 --> 00:08:25.380
True.

115
00:08:25.390 --> 00:08:27.050
So I should get the result.

116
00:08:27.570 --> 00:08:31.560
And to display the result, you can display the result.

117
00:08:31.560 --> 00:08:40.740
We can here use the fetch function so you can here say it's a sketch and then sketch all.

118
00:08:41.840 --> 00:08:45.230
And this is going to print all the the original.

119
00:08:45.860 --> 00:08:53.120
So here, if I refresh, as you can see, I'm going to get the, uh, I'm going to get the complete

120
00:08:54.650 --> 00:08:55.060
array.

121
00:08:55.070 --> 00:08:56.420
But this is not helpful.

122
00:08:56.630 --> 00:09:00.400
Usually in real applications, you would, you wouldn't use the dump.

123
00:09:00.410 --> 00:09:04.670
Instead, you would use while or for each, let's use for each.

124
00:09:05.450 --> 00:09:07.010
So here I'm going to say for each.

125
00:09:08.550 --> 00:09:11.910
And then for each weight for each.

126
00:09:13.650 --> 00:09:23.910
For each SDH Finch all pitch, all as raw.

127
00:09:25.350 --> 00:09:32.550
And then for each row, we want to display the username, the the, the username, the email.

128
00:09:32.550 --> 00:09:35.820
Let me save and let me pay the number back and refresh.

129
00:09:36.450 --> 00:09:38.550
And as you can see, I am going to get the username of the email.

130
00:09:38.550 --> 00:09:46.410
If I say fly, for example, I'm going to get the name and the email and let's now test whether I will

131
00:09:46.410 --> 00:09:48.750
I will be able to inject or not.

132
00:09:49.260 --> 00:09:56.610
So here I'm going to say one or one is equal to one, and then I'm going to click on Find.

133
00:09:58.030 --> 00:10:01.830
So as you can see, I will not be able to inject a scale.

134
00:10:01.930 --> 00:10:04.750
I will only get the first user.

135
00:10:04.750 --> 00:10:12.160
If I say two or one is equal to one, I will not be able to do that either.

136
00:10:12.790 --> 00:10:22.240
So I have predicted now in my application against against this bath practice also let me here try to

137
00:10:22.270 --> 00:10:30.580
say one and then drop user drop table users.

138
00:10:32.620 --> 00:10:36.370
So it's not going to drop the table in here.

139
00:10:36.880 --> 00:10:39.970
Refresh and check whether the table has been dropped or not.

140
00:10:40.600 --> 00:10:42.250
So the table is there.

141
00:10:42.260 --> 00:10:43.810
The table has not been dropped.

142
00:10:43.960 --> 00:10:54.010
Of course, hackers every day try to come up with new ideas and new methods to get around the protection

143
00:10:54.010 --> 00:10:56.470
that we have that many developers have.

144
00:10:56.470 --> 00:11:01.810
And they they unfortunately succeeded a lot in doing this.

145
00:11:02.140 --> 00:11:07.570
So what you need to do is that you need to be up to date when it comes to protecting your application.

146
00:11:08.200 --> 00:11:16.600
But if you follow best practices, you will not be vulnerable to these attacks and you will always protect

147
00:11:16.600 --> 00:11:18.220
your applications.

148
00:11:19.450 --> 00:11:26.020
So it's very, very important to take security into account while developing your application and be

149
00:11:26.020 --> 00:11:31.930
up to date when it comes to best practices and what you need to do and what you need to avoid in order

150
00:11:31.930 --> 00:11:35.530
not to be vulnerable to these kinds of attacks.
