1
00:00:02,220 --> 00:00:02,880
Welcome back.

2
00:00:03,570 --> 00:00:10,950
One of the ways that hackers used to steal things from your Web application and hurt your application

3
00:00:11,310 --> 00:00:16,950
or users is to do what's called the station hijacking.

4
00:00:17,340 --> 00:00:18,960
So what is session hijacking?

5
00:00:19,320 --> 00:00:25,740
A session hijacking is stealing information from a currently logged in user.

6
00:00:26,130 --> 00:00:33,930
So normally whenever you whenever you have a log in system usually and most websites app log in and

7
00:00:33,930 --> 00:00:36,780
registration system users would log in.

8
00:00:37,110 --> 00:00:45,330
And once they log in, their information will be stored in your in the browser, not, not in the database.

9
00:00:45,340 --> 00:00:47,250
So let me explain this.

10
00:00:47,670 --> 00:00:51,180
So suppose that you have your A website.

11
00:00:51,210 --> 00:00:52,140
This is a website.

12
00:00:52,650 --> 00:00:55,710
And here a user comes over to your website and logs in.

13
00:00:55,860 --> 00:00:58,590
This is a user user.

14
00:00:59,040 --> 00:01:03,330
So a user would come to your website and log in.

15
00:01:04,020 --> 00:01:05,400
So a user would log in.

16
00:01:06,180 --> 00:01:13,410
So of course, in order to log in, they type their email and password.

17
00:01:14,670 --> 00:01:22,890
And you would normally bring things from the database such as their name, their information, and store

18
00:01:22,890 --> 00:01:23,820
them in a session.

19
00:01:24,480 --> 00:01:26,250
You would normally store that in a session.

20
00:01:26,340 --> 00:01:26,880
Why?

21
00:01:27,240 --> 00:01:28,440
Why would you want to do this?

22
00:01:28,800 --> 00:01:31,800
Because you want to display information.

23
00:01:32,190 --> 00:01:37,140
Maybe you have a profile page and you want to display their information so that they know their information

24
00:01:37,140 --> 00:01:38,640
or want to update their information.

25
00:01:39,420 --> 00:01:51,960
But unfortunately, a hacker, a hacker could use aka could use the this this technique, the session

26
00:01:51,960 --> 00:01:55,110
hijacking to steal this session.

27
00:01:55,860 --> 00:01:57,660
So there are so many ways to do this.

28
00:01:57,660 --> 00:02:05,310
And hackers, again, come up with new ideas and techniques to do to do session hijacking.

29
00:02:06,450 --> 00:02:13,080
But the point is that you as a developer, you need to protect your application against session hijacking.

30
00:02:13,440 --> 00:02:14,580
So what would you do?

31
00:02:14,910 --> 00:02:19,710
Well, first of all, first of all, you need to use.

32
00:02:21,510 --> 00:02:28,140
You need to use session or sessions in a B2B.

33
00:02:29,370 --> 00:02:30,390
Sessions.

34
00:02:30,390 --> 00:02:32,940
You need to use sessions wisely.

35
00:02:35,100 --> 00:02:37,800
And not just wisely, actually effectively, I should say.

36
00:02:38,460 --> 00:02:41,590
Effectively, because I think.

37
00:02:43,320 --> 00:02:44,570
Tively because about.

38
00:02:44,610 --> 00:02:48,780
Good, good, good, good, good.

39
00:02:49,140 --> 00:02:49,710
You're good.

40
00:02:49,710 --> 00:02:51,780
Could hurt you could hurt your application.

41
00:02:52,080 --> 00:03:00,150
So you need to write an effective good effective good that that always checks the session and how long

42
00:03:00,150 --> 00:03:05,760
the session has been and who is logged in and when did when did that person log in?

43
00:03:06,120 --> 00:03:11,040
And always, always, always, always, always destroy.

44
00:03:12,030 --> 00:03:14,300
Destroy session.

45
00:03:15,280 --> 00:03:16,170
We never.

46
00:03:17,710 --> 00:03:18,730
Whenever.

47
00:03:22,250 --> 00:03:22,970
Something.

48
00:03:24,240 --> 00:03:24,730
It wrong.

49
00:03:29,140 --> 00:03:30,550
Whenever something is wrong.

50
00:03:31,750 --> 00:03:34,090
Whenever something is wrong, you need to destroy the position.

51
00:03:34,480 --> 00:03:41,170
Unfortunately, many, many developers think that stations is a secure way to store data because the

52
00:03:41,170 --> 00:03:47,440
data will be deleted automatically if a user logs out, looks out, or if a user leaves the browser

53
00:03:47,440 --> 00:03:51,070
and logs down, the browser decision will be deleted.

54
00:03:51,370 --> 00:04:00,670
And this is not correct because a hacker could still steal the session and hijack sessions.

55
00:04:01,960 --> 00:04:06,670
So this is a one technique which is destroying the station and using your could effectively.

56
00:04:07,030 --> 00:04:12,850
The second solution is to use is to use H.

57
00:04:13,660 --> 00:04:20,800
The ETP s always use https, especially whenever you have a payment system.

58
00:04:21,610 --> 00:04:23,650
So this is method number one.

59
00:04:23,680 --> 00:04:24,700
Let me hear say one.

60
00:04:27,600 --> 00:04:28,550
And to reduce it.

61
00:04:28,680 --> 00:04:39,150
If you don't use it or use it, if you don't use HDP, just stupid use HDP, it's always third.

62
00:04:40,450 --> 00:04:42,940
You need to warn users.

63
00:04:43,300 --> 00:04:52,270
Unfortunately, this is this method is the user is the user responsibility.

64
00:04:52,540 --> 00:04:54,670
It's not unfortunately, it's not your responsibility.

65
00:04:54,670 --> 00:05:03,970
Because if you do everything and a user doesn't use the the the your application wisely.

66
00:05:05,860 --> 00:05:12,580
And if the user doesn't use your application the right way, they could put their data in in jeopardy

67
00:05:12,580 --> 00:05:16,800
by not by not following best practices.

68
00:05:16,810 --> 00:05:23,290
So a user could, for example, log in and leave their phone or their PC open.

69
00:05:23,680 --> 00:05:31,840
So this could allow other users to or or hackers to steal their information.

70
00:05:33,280 --> 00:05:45,130
If a user, for example, logs in and never logs out again, a hacker could still steal a user's information.

71
00:05:45,970 --> 00:05:49,570
And you need to warn users.

72
00:05:50,810 --> 00:05:51,290
To.

73
00:05:53,460 --> 00:06:00,030
Look out when ever they are done.

74
00:06:00,660 --> 00:06:06,930
So if they are done, always tell users to look out here.

75
00:06:07,410 --> 00:06:16,410
Always let them know that they must look out whenever they are done and never log in and stay logged

76
00:06:16,410 --> 00:06:16,740
in.

77
00:06:17,370 --> 00:06:18,040
When they are.

78
00:06:18,090 --> 00:06:20,940
When they are finished, they must look out when they are done.

79
00:06:21,690 --> 00:06:26,220
A fourth method which is regenerating the session.

80
00:06:26,880 --> 00:06:36,720
So many developers only a session and store it in in cookies and they don't regenerate decision for

81
00:06:36,720 --> 00:06:37,530
a very long time.

82
00:06:37,530 --> 00:06:38,700
And this is not a good thing.

83
00:06:39,030 --> 00:06:40,500
You need to regenerate.

84
00:06:41,940 --> 00:06:42,420
Session.

85
00:06:43,350 --> 00:06:43,770
So.

86
00:06:44,750 --> 00:06:54,560
Three he married cision, so whenever a user logs out you need to remove the station and then whenever

87
00:06:54,560 --> 00:06:58,130
they log in, you need to you know, you need to.

88
00:07:00,440 --> 00:07:09,020
Three visionaries, you need to recreate their cookie or session and or session and always remove the

89
00:07:09,290 --> 00:07:12,050
cookie or session after a specific amount of time.
