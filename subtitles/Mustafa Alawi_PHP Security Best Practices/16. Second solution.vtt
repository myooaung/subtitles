WEBVTT
1
00:00:00.960 --> 00:00:01.590
Welcome back.

2
00:00:01.980 --> 00:00:08.820
So the second solution to protect your application against a serial injection is to use the repair function

3
00:00:09.840 --> 00:00:10.680
of the MRI.

4
00:00:10.680 --> 00:00:11.390
Is Q ill.

5
00:00:11.400 --> 00:00:13.080
I object.

6
00:00:13.090 --> 00:00:15.570
So here I have a sample card.

7
00:00:15.570 --> 00:00:16.020
It's only me.

8
00:00:16.020 --> 00:00:19.380
Copy this code and use it in my application.

9
00:00:20.010 --> 00:00:23.130
So here let me first base it.

10
00:00:23.160 --> 00:00:26.190
And of course we need to change many, many things.

11
00:00:26.190 --> 00:00:32.400
I'm going to first base it here and then instead of using my instead of using new video, I'm going

12
00:00:32.400 --> 00:00:33.090
to remove this.

13
00:00:34.010 --> 00:00:36.500
Instead, I'm going to be using the my skill.

14
00:00:36.510 --> 00:00:38.700
I object.

15
00:00:38.700 --> 00:00:40.560
I'm going to here base this here.

16
00:00:40.560 --> 00:00:45.420
And then the first parameter is is the host, which is localhost.

17
00:00:46.050 --> 00:00:51.810
The second parameter is the second parameter is the username.

18
00:00:51.810 --> 00:00:53.160
So the username is root.

19
00:00:53.850 --> 00:00:55.410
The third parameter is the password.

20
00:00:55.920 --> 00:00:58.290
So the password is nothing in my application.

21
00:00:59.100 --> 00:01:01.740
The fourth parameter is the database name.

22
00:01:01.740 --> 00:01:05.910
So the database name is BHP Project, BHP underscore project.

23
00:01:06.750 --> 00:01:08.730
And here I have a problem.

24
00:01:09.630 --> 00:01:11.180
Let me try this one more time.

25
00:01:11.190 --> 00:01:11.580
Why?

26
00:01:12.670 --> 00:01:15.610
You and then my askew ill I.

27
00:01:19.660 --> 00:01:21.760
And here, let me type this one more time.

28
00:01:24.280 --> 00:01:30.910
This in our case I'm using since I'm using just this application for testing, my database username

29
00:01:31.240 --> 00:01:32.770
is root and the password is nothing.

30
00:01:33.100 --> 00:01:40.300
But of course in real applications you need to set a password and have a different username.

31
00:01:41.290 --> 00:01:45.820
Next, what we need to do is that we need to get the user I.D., we got the user I.D. we don't have

32
00:01:45.820 --> 00:01:46.420
a city.

33
00:01:47.590 --> 00:01:49.270
So here.

34
00:01:49.270 --> 00:01:50.320
And instead of saying.

35
00:01:52.200 --> 00:01:52.420
Here.

36
00:01:52.470 --> 00:01:53.580
I need to repeat this.

37
00:01:53.580 --> 00:01:56.140
My skill I have been.

38
00:01:56.190 --> 00:01:58.080
I'm going to call the repair.

39
00:01:59.290 --> 00:02:00.010
Prepare.

40
00:02:04.090 --> 00:02:07.000
And then prepare and then select.

41
00:02:07.000 --> 00:02:08.220
What do we want to select?

42
00:02:08.240 --> 00:02:10.510
We want to select all I'm going to say select.

43
00:02:11.640 --> 00:02:13.440
All from.

44
00:02:14.640 --> 00:02:24.060
Users where user name user ID user underscore ID is equal to question mark.

45
00:02:24.060 --> 00:02:25.350
So we add the question mark.

46
00:02:25.800 --> 00:02:32.820
This question mark is going to work as a holder and then we use here statement and then bind param and

47
00:02:32.850 --> 00:02:34.530
then s or I.

48
00:02:35.190 --> 00:02:37.740
S stands for string.

49
00:02:38.160 --> 00:02:40.140
I stands for integer.

50
00:02:40.500 --> 00:02:44.070
So since we are passing a user ID, which is an integer, we need to say I.

51
00:02:44.520 --> 00:02:46.620
And then the second parameter is the user ID.

52
00:02:46.800 --> 00:02:47.730
So here I'm going to say.

53
00:02:48.820 --> 00:02:49.510
User.

54
00:02:50.660 --> 00:02:51.090
Heidi.

55
00:02:53.480 --> 00:02:55.700
So this year.

56
00:02:56.700 --> 00:02:58.020
This user I.D..

57
00:02:58.680 --> 00:02:59.390
User I.D..

58
00:03:01.020 --> 00:03:04.030
Will be passed by the user.

59
00:03:04.050 --> 00:03:10.650
However, we as developers are using the bind param which is going to take care of that user only and

60
00:03:10.650 --> 00:03:11.700
is going to replace it.

61
00:03:12.990 --> 00:03:15.750
Replace that question mark with with this user ID.

62
00:03:16.260 --> 00:03:20.550
So the byte RAM is going to take this user idea and add it here instead of instead of this question

63
00:03:20.550 --> 00:03:20.850
mark.

64
00:03:21.240 --> 00:03:25.770
And it's going to make sure that issue injection is not going to take place.

65
00:03:26.280 --> 00:03:33.270
And then here we need to say excuse to execute the query and then we need to say bind param to to bind

66
00:03:33.510 --> 00:03:36.150
bind result to bind the resulting in a variable.

67
00:03:36.150 --> 00:03:40.470
You can say result, for example, result instead of.

68
00:03:41.950 --> 00:03:44.470
This and then fetch and then print.

69
00:03:45.040 --> 00:03:46.140
And you can see.

70
00:03:47.340 --> 00:03:53.790
You can see results and then results.

71
00:03:55.080 --> 00:03:56.310
Because we have only one.

72
00:03:57.980 --> 00:03:58.610
Results.

73
00:04:00.990 --> 00:04:06.420
However, since we are getting all here, we are getting all we are querying everything from the database.

74
00:04:06.960 --> 00:04:09.780
We cannot get a specific result.

75
00:04:10.260 --> 00:04:12.570
So we have two solutions we have.

76
00:04:12.570 --> 00:04:13.860
We can get this specific thing.

77
00:04:13.860 --> 00:04:19.410
For example, select, let's say select email, user email, user email.

78
00:04:19.410 --> 00:04:21.630
If we say select user email, this is going to work.

79
00:04:22.110 --> 00:04:23.880
The result is going to be a user email.

80
00:04:24.570 --> 00:04:30.660
And since we have only one now parameter, we need to say here result only result and then s only one.

81
00:04:30.660 --> 00:04:32.250
S because we have only one result.

82
00:04:32.940 --> 00:04:35.280
Let me save and let's save then over to the browser to test.

83
00:04:40.290 --> 00:04:43.410
So I'm going to refresh my application and then I'm going to click on Find.

84
00:04:43.890 --> 00:04:49.290
And as you can see, I'm going to get student here, student email.

85
00:04:49.740 --> 00:04:56.620
So this is in case you want to get a specific parameter, specific result, for example, the user email.

86
00:04:56.880 --> 00:05:02.190
But if you want to get everything, you cannot use the here to bind param unless you have a specific

87
00:05:02.190 --> 00:05:03.900
number of fields you want to get.

88
00:05:04.380 --> 00:05:11.970
So instead of using the bind result, I'm going to remove the bind result and instead I'm going to use

89
00:05:11.970 --> 00:05:13.200
the get result function.

90
00:05:13.200 --> 00:05:20.190
I'm going to say is the empty and then get underscore result and then I'm going to store this in a variable

91
00:05:20.190 --> 00:05:21.660
called result.

92
00:05:22.230 --> 00:05:25.140
The result is going to be equal to statement, gift result.

93
00:05:25.770 --> 00:05:30.270
And finally, we need instead of using the print, I'm going to use a while loop.

94
00:05:30.270 --> 00:05:31.200
I'm going to say while.

95
00:05:32.340 --> 00:05:36.150
Raul is equal to Fitch.

96
00:05:39.500 --> 00:05:40.300
A source.

97
00:05:40.310 --> 00:05:44.060
Why is google fetch?

98
00:05:44.090 --> 00:05:45.980
Actually I should say result which.

99
00:05:47.130 --> 00:05:47.910
Result.

100
00:05:50.870 --> 00:05:53.690
Fetch a sauce and then we can.

101
00:05:54.810 --> 00:05:55.710
You say raw.

102
00:05:56.340 --> 00:06:01.950
And then we can echo, for example, the user email and then.

103
00:06:03.050 --> 00:06:03.590
Raw.

104
00:06:05.010 --> 00:06:06.270
And then username.

105
00:06:08.040 --> 00:06:09.320
Use it under scrutiny.

106
00:06:10.440 --> 00:06:12.890
At the beginning of the beginning, we need to say echo.

107
00:06:14.630 --> 00:06:18.290
Let me now save and let's head on over to the browser to test.

108
00:06:19.820 --> 00:06:20.450
So the browser.

109
00:06:20.450 --> 00:06:21.290
I'm going to refresh.

110
00:06:23.220 --> 00:06:26.820
And as you can see, I got this error, a non numeric value encountered.

111
00:06:27.510 --> 00:06:35.610
And the problem is is that I have a syntax error here I should say double course and then here hyphen

112
00:06:35.610 --> 00:06:38.130
and then dot here and that here.

113
00:06:39.840 --> 00:06:41.310
Here's some space and here's some space.

114
00:06:41.820 --> 00:06:44.610
This should fix the problem now in the browser.

115
00:06:44.610 --> 00:06:50.250
Let me refresh and as you can see, I'm going to get the name and the email, let me say five and then

116
00:06:50.250 --> 00:06:53.010
I'm going to click on find and then I'm going to get the name of the email.

117
00:06:53.400 --> 00:06:56.510
Let's now try to inject some excuse.

118
00:06:56.670 --> 00:07:03.030
I'm going to say four and then or one is equal to one and see what's going to happen.

119
00:07:03.630 --> 00:07:10.950
So if you click on find, as you can see, I'm not I'm only going to get the user idea and injection

120
00:07:10.950 --> 00:07:12.240
isn't going to take place.

121
00:07:12.900 --> 00:07:21.180
And also if I try for example one and then the drop table users.

122
00:07:22.250 --> 00:07:23.820
Alimi click on find.

123
00:07:26.440 --> 00:07:28.210
This now.

124
00:07:28.210 --> 00:07:29.800
Shouldn't delete the database.

125
00:07:29.980 --> 00:07:31.030
Shouldn't delete the table.

126
00:07:31.240 --> 00:07:36.190
Refresh my my database and check whether the table has been reset or not.

127
00:07:37.060 --> 00:07:39.730
So the table the table is still there.

128
00:07:40.120 --> 00:07:47.680
So that table has not been deleted, which means that SKU injection hasn't taken place, which is amazing.

129
00:07:47.680 --> 00:07:49.510
And now our application is protected.

130
00:07:49.840 --> 00:07:59.260
And again, you need to and again, hackers around the world always come up with new ideas and new techniques,

131
00:07:59.260 --> 00:08:00.640
and you need to be up to date.

132
00:08:00.970 --> 00:08:06.130
Otherwise, it will be your your application will be vulnerable honourable to these attacks.
