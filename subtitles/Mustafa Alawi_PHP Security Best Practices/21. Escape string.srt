1
00:00:00,630 --> 00:00:01,320
Welcome back.

2
00:00:02,040 --> 00:00:07,560
Now, suppose that you have a year, a form that allows users to update their email addresses using

3
00:00:07,560 --> 00:00:14,970
their I.D. so the user would provide you with their email and with their ID and their new email in order

4
00:00:14,970 --> 00:00:16,650
to update the current email.

5
00:00:17,130 --> 00:00:18,660
And let me show you the code for this.

6
00:00:18,930 --> 00:00:25,350
So this is the code record is just going to take the ID from the user and the new email and then it's

7
00:00:25,350 --> 00:00:28,920
going to get the ID and the email and store them in variables.

8
00:00:29,400 --> 00:00:35,250
And then we have here a statement that says update users, set user email, question mark, and then

9
00:00:35,250 --> 00:00:37,980
where user IDs is equal to question mark.

10
00:00:38,340 --> 00:00:45,780
And then here I'm using the bind bar and I the S for string because the email is a string and I for

11
00:00:46,470 --> 00:00:48,330
integer because the ID is integer.

12
00:00:48,690 --> 00:00:51,630
And then here I just have a very simple

13
00:00:54,120 --> 00:00:56,390
script out here says echo email.

14
00:00:56,400 --> 00:01:00,090
And here I executed this query and then I, I printed the email.

15
00:01:00,390 --> 00:01:02,520
So let me show you the problem with this.

16
00:01:03,210 --> 00:01:04,860
This so far is great.

17
00:01:04,860 --> 00:01:05,940
There is no problem with it.

18
00:01:06,390 --> 00:01:11,700
The prepaid function is going to take care of the the injection problem.

19
00:01:12,540 --> 00:01:14,760
So you don't have you don't have to worry about anything.

20
00:01:14,760 --> 00:01:18,840
But we still have a problem with the with displaying the data.

21
00:01:19,200 --> 00:01:21,150
So let me show you the way the problem is.

22
00:01:21,510 --> 00:01:21,930
So here.

23
00:01:21,930 --> 00:01:27,420
Suppose that they want to edit my email and suppose that I am a user number 31.

24
00:01:27,750 --> 00:01:33,120
So I'm going to say here my email, my current email, this is admin for at the example dot com.

25
00:01:33,450 --> 00:01:37,590
So here I'm going to say my ID is 31, so I'm going to say 31.

26
00:01:38,010 --> 00:01:39,780
And then let me you type in your email.

27
00:01:40,140 --> 00:01:43,320
I'm going to say my new email.

28
00:01:44,470 --> 00:01:54,910
At example dot com let me click on find I should by the way I should say instead of find I should say

29
00:01:54,910 --> 00:01:56,530
update here update.

30
00:01:58,270 --> 00:02:02,110
So anyways, here is going to be the email and it's going to print the new email.

31
00:02:02,590 --> 00:02:07,840
So as you can see, if you refresh the database, you'll find that my email has been updated and it

32
00:02:07,840 --> 00:02:08,950
says my new email.

33
00:02:09,520 --> 00:02:11,800
However bad users.

34
00:02:11,800 --> 00:02:12,190
Good.

35
00:02:13,330 --> 00:02:19,380
Instead of using this like this, they could inject HD email or JavaScript.

36
00:02:19,400 --> 00:02:19,670
Good.

37
00:02:20,090 --> 00:02:25,250
So here, for example, I could say 31 and then I could say script.

38
00:02:26,910 --> 00:02:27,510
And then.

39
00:02:28,780 --> 00:02:29,530
Script.

40
00:02:30,880 --> 00:02:31,990
Let me say here.

41
00:02:32,890 --> 00:02:33,490
Alert.

42
00:02:35,940 --> 00:02:37,050
I'm going I'm going to say hi.

43
00:02:38,040 --> 00:02:39,330
I'm going to click on Update.

44
00:02:39,750 --> 00:02:45,310
And if I click on update, as you can see, the good the JavaScript code was executed, which is a problem.

45
00:02:45,960 --> 00:02:54,510
And, and in the database, if I refresh if I refresh here, my new email is a JavaScript, which is

46
00:02:54,510 --> 00:02:55,260
also a problem.

47
00:02:55,650 --> 00:03:03,660
However, if the effect of this has been taken care of by the repair.

48
00:03:04,320 --> 00:03:08,220
However, we still need to use two functions.

49
00:03:08,520 --> 00:03:10,320
First, we need to use the my.

50
00:03:11,340 --> 00:03:14,360
They make the real scape spring.

51
00:03:14,370 --> 00:03:20,010
So we need to say here Mai Mai is your ally.

52
00:03:20,520 --> 00:03:23,190
Then we need to call a function called real scape string.

53
00:03:23,550 --> 00:03:25,050
And then we need to pass the email.

54
00:03:25,590 --> 00:03:26,700
We need to pass the email.

55
00:03:28,430 --> 00:03:36,400
And whenever we are whenever we are displaying something, we need to use the HD email entities.

56
00:03:37,280 --> 00:03:38,330
And it is.

57
00:03:41,240 --> 00:03:42,260
Let me remove this.

58
00:03:43,470 --> 00:03:47,570
Let me say female entities, and then I'm going to pass the email.

59
00:03:49,180 --> 00:03:54,910
So as a rule of thumb, whenever you are inserting something critical to your database, you need to

60
00:03:54,910 --> 00:03:56,260
use the real shape string.

61
00:03:56,920 --> 00:03:59,350
But the main problem is with displaying something.

62
00:03:59,950 --> 00:04:01,120
So displaying something.

63
00:04:01,120 --> 00:04:07,180
Whenever you are displaying something, you you cannot you cannot guarantee that the user who is using

64
00:04:07,180 --> 00:04:09,790
your application is an ethical user.

65
00:04:10,300 --> 00:04:13,660
A user who is using your application could be a hacker.

66
00:04:14,050 --> 00:04:20,200
Therefore, you need to always use the email entities and also recommended it's recommended to use the

67
00:04:20,200 --> 00:04:21,190
real scape string.

68
00:04:21,670 --> 00:04:25,930
So let me now show you the difference when it comes to displaying something.

69
00:04:26,380 --> 00:04:32,170
First, let me your remove this and instead I'm going to type an email.

70
00:04:32,170 --> 00:04:33,220
I'm going to say admin.

71
00:04:36,210 --> 00:04:38,820
31, at example.

72
00:04:40,020 --> 00:04:40,540
Dot com.

73
00:04:41,100 --> 00:04:43,770
LME now trying to update my email.

74
00:04:44,250 --> 00:04:48,570
So here I'm going to say 31 and again I'm going to try to inject a JavaScript.

75
00:04:48,840 --> 00:04:49,770
I'm going to say script.

76
00:04:51,010 --> 00:04:51,790
Scripts.

77
00:04:53,280 --> 00:04:54,060
Script.

78
00:04:55,320 --> 00:04:57,180
And then in between, I'm going to say.

79
00:04:58,280 --> 00:04:59,960
You're alert.

80
00:05:01,400 --> 00:05:02,030
Black.

81
00:05:03,130 --> 00:05:05,470
At Alamy.

82
00:05:06,110 --> 00:05:07,090
Click on.

83
00:05:08,180 --> 00:05:08,780
Update.

84
00:05:09,560 --> 00:05:14,540
If you click on update, as you can see, the card will not be executed.

85
00:05:14,870 --> 00:05:16,260
The card will not be executed.

86
00:05:16,280 --> 00:05:19,790
As you can see, the code will be displayed as a text.

87
00:05:20,060 --> 00:05:24,860
So the JavaScript good has been blocked by the function.

88
00:05:25,250 --> 00:05:31,460
It has been locked by the email entities because if you are using the email entities, it will block

89
00:05:31,460 --> 00:05:32,930
this code from being executed.

90
00:05:33,410 --> 00:05:39,290
So the main problem here is other users, because if you are storing this in your database, if you

91
00:05:39,290 --> 00:05:47,600
are storing about God in your database and somebody gets that code into their browser, it could hurt

92
00:05:47,600 --> 00:05:56,270
their their their account or their browser or any other thing as long as it's interpreted as a JavaScript

93
00:05:56,270 --> 00:05:56,690
script.

94
00:05:57,170 --> 00:06:02,360
But if it's if it has been interpreted as a text, it is not going to do anything.

95
00:06:02,360 --> 00:06:10,460
As you can see, it's not going to do anything because because party now knew that this code is a bad

96
00:06:10,700 --> 00:06:15,710
is about code and it used the email entities to block that code from being executed.

97
00:06:17,460 --> 00:06:24,420
So whenever you are whenever you are setting something, something into the database, it's very important

98
00:06:24,420 --> 00:06:26,550
to use the real scape string.

99
00:06:27,300 --> 00:06:32,460
And whenever you are displaying something, you need to use the HD email entities or the female

100
00:06:35,550 --> 00:06:39,840
characters of HD special characters that they have already shown you earlier.

101
00:06:40,530 --> 00:06:47,700
So this is how you can stop any bytecode, any bytecode from being executed, especially JavaScript.

102
00:06:47,700 --> 00:06:53,820
Good, because JavaScript code is the most common code that a hacker could use to insert into your system.

103
00:06:54,330 --> 00:07:00,390
So again, use the real scape string, the entities they prepare.

104
00:07:00,690 --> 00:07:07,470
You can also use the DDR, as I have already shown you, the PDR, PDR take.

105
00:07:07,650 --> 00:07:14,220
You need to take everything into account, and you need to apply all techniques that I have shown you

106
00:07:14,640 --> 00:07:17,040
always to take these things into account.

107
00:07:17,310 --> 00:07:26,160
Never use a code that is that that assumes that your customer is a good user and has good intentions.

108
00:07:26,370 --> 00:07:28,110
Always assume the worst.

109
00:07:28,500 --> 00:07:37,500
Whenever you assume the worst, you will take security seriously and you will apply all the techniques

110
00:07:37,830 --> 00:07:44,100
that are needed in order to protect your application and websites against any kind of attack.
