WEBVTT
1
00:00:00.930 --> 00:00:01.590
Welcome back.

2
00:00:02.400 --> 00:00:04.740
So what does 3600 mean?

3
00:00:05.670 --> 00:00:08.400
3600 means.

4
00:00:09.210 --> 00:00:10.920
60 multiplied by 60.

5
00:00:11.220 --> 00:00:14.070
60 minutes multiplied by 60 seconds.

6
00:00:14.070 --> 00:00:16.080
And you are going to get one hour.

7
00:00:16.320 --> 00:00:17.850
So what does this mean?

8
00:00:18.090 --> 00:00:27.000
This code means that if the user is not and is not active for one hour or more, then you should destroy

9
00:00:27.000 --> 00:00:27.450
this session.

10
00:00:27.690 --> 00:00:31.740
So again, I'm explaining this one more time because this code is very important.

11
00:00:32.310 --> 00:00:35.290
You always need to add this code to your website or web application.

12
00:00:35.820 --> 00:00:45.300
And many developers want to want to allow users to and let users to log in only after a short period

13
00:00:45.300 --> 00:00:46.420
of inactivity.

14
00:00:46.440 --> 00:00:51.090
Maybe, for example, you want users to log in every 15 minutes.

15
00:00:51.540 --> 00:00:59.820
So if if you want users to log in every 15 minutes, then you should think of it like this first.

16
00:00:59.820 --> 00:01:00.390
You should.

17
00:01:00.840 --> 00:01:04.190
You should I say 15 minutes.

18
00:01:04.200 --> 00:01:07.430
So how many seconds in 15 minutes?

19
00:01:07.440 --> 00:01:14.640
There are obviously 60 seconds multiply multiplied by 15 minutes.

20
00:01:14.640 --> 00:01:16.500
Then you are going to get the number of seconds.

21
00:01:16.500 --> 00:01:17.460
So how many seconds?

22
00:01:17.730 --> 00:01:25.680
If you multiply 15 by 60, you should get six, four, six multiplied by five is zero.

23
00:01:25.680 --> 00:01:26.580
And one here.

24
00:01:26.910 --> 00:01:28.500
So six multiplied by.

25
00:01:29.890 --> 00:01:31.990
Six multiplied by one is six plus three.

26
00:01:32.980 --> 00:01:33.970
Then you are going to get.

27
00:01:37.910 --> 00:01:38.480
Nine.

28
00:01:39.050 --> 00:01:46.460
So if you want users to log in every 15 minutes, you should say here, 900.

29
00:01:46.970 --> 00:01:54.980
So this means that if the user is inactive for 15 minutes, then they will they should log in again.

30
00:01:55.550 --> 00:02:00.050
If you want users to log in every 30 minutes, then you should say 30.

31
00:02:00.920 --> 00:02:04.150
So 30 is going to be equal to two.

32
00:02:04.520 --> 00:02:06.470
How many seconds in 30?

33
00:02:06.470 --> 00:02:10.700
So you should say 30 multiplied by 60.

34
00:02:11.120 --> 00:02:12.680
So 30 multiplied by 60.

35
00:02:12.680 --> 00:02:19.860
And the result is going to be six, multiplied by three is one 818.

36
00:02:20.270 --> 00:02:21.740
So you need to say here.

37
00:02:23.030 --> 00:02:30.470
1800 if you want users to log in every 30 minutes of inactivity.

38
00:02:31.070 --> 00:02:40.190
So this is how you can calculate the number of seconds that you want users to log in if they are inactive

39
00:02:41.000 --> 00:02:43.430
for that number of seconds or more.

40
00:02:43.970 --> 00:02:47.990
And again, this number depends upon the your application.

41
00:02:48.290 --> 00:02:55.280
So this number is the number of seconds that you should allow users to you should you should log users

42
00:02:55.280 --> 00:03:02.210
out and should should allow them to log in after that number of seconds of inactivity.

43
00:03:02.960 --> 00:03:07.250
So here, one 1800 means 30 minutes.

44
00:03:07.520 --> 00:03:14.240
So this code now means that if a user is inactive for more than 30 minutes, they should be logged out

45
00:03:14.570 --> 00:03:16.580
and they should log in again.
