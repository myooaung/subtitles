1
00:00:00,000 --> 00:00:01,695
All right guys, welcome back.

2
00:00:01,695 --> 00:00:04,170
In this lesson we're going to talk all about Liquid.

3
00:00:04,170 --> 00:00:05,685
In the previous lessons,

4
00:00:05,685 --> 00:00:08,909
we looked at our theme code and we talked about the structure,

5
00:00:08,909 --> 00:00:10,455
and I showed you that diagram,

6
00:00:10,455 --> 00:00:12,210
but throughout our theme code,

7
00:00:12,210 --> 00:00:15,510
if we go to any of our templates sections or snippets,

8
00:00:15,510 --> 00:00:19,135
we're inevitably going to see some liquid.

9
00:00:19,135 --> 00:00:20,780
Look at this one, for instance.

10
00:00:20,780 --> 00:00:22,740
The product dash template.

11
00:00:22,740 --> 00:00:25,830
We've got lines and lines of Liquid.

12
00:00:25,830 --> 00:00:27,795
You should be familiar with HTML.

13
00:00:27,795 --> 00:00:30,570
You can see here, there's HTML,

14
00:00:30,570 --> 00:00:36,175
but there's plenty of liquid around it as well and there's also liquid inside.

15
00:00:36,175 --> 00:00:40,625
Liquid is like the templating language of your Shopify theme.

16
00:00:40,625 --> 00:00:44,870
It's kind of like a dumb down programming language that,

17
00:00:44,870 --> 00:00:50,780
as it says here, gives you some programming logic that tells a template what to do.

18
00:00:50,780 --> 00:00:55,190
Tags are wrapped in these characters except

19
00:00:55,190 --> 00:00:59,575
for when we're just outputting a simple variable.

20
00:00:59,575 --> 00:01:02,705
Instead of using the percentage sign,

21
00:01:02,705 --> 00:01:05,600
we put out a second curly bracket.

22
00:01:05,600 --> 00:01:10,700
If you're wondering what's the difference between these ones which start and end

23
00:01:10,700 --> 00:01:13,310
with two curly brackets and this one which

24
00:01:13,310 --> 00:01:16,160
starts with a curly bracket and a percentage sign,

25
00:01:16,160 --> 00:01:18,940
this is when we're performing logic,

26
00:01:18,940 --> 00:01:24,005
and this is when we're just outputting a variable to the screen.

27
00:01:24,005 --> 00:01:26,000
This dash here also,

28
00:01:26,000 --> 00:01:29,570
I recently learned that, that removes whitespace.

29
00:01:29,570 --> 00:01:33,695
So,if I just remove this from either side,

30
00:01:33,695 --> 00:01:35,825
it's going to register a new line in

31
00:01:35,825 --> 00:01:38,525
your code and so you're going to get some whitespace.

32
00:01:38,525 --> 00:01:41,120
It doesn't actually affect the logic,

33
00:01:41,120 --> 00:01:45,725
it's still going to work, but you'll see in your output file,

34
00:01:45,725 --> 00:01:48,755
if you don't use these dashes,

35
00:01:48,755 --> 00:01:51,470
that you'll get a lot of whitespace and that might make

36
00:01:51,470 --> 00:01:54,920
your site load slower. Just as a side note.

37
00:01:54,920 --> 00:01:57,350
How are we going to break up this section?

38
00:01:57,350 --> 00:01:59,930
Obviously there's a lot to cover with Liquid.

39
00:01:59,930 --> 00:02:02,930
We're going to talk about variable tags,

40
00:02:02,930 --> 00:02:06,740
theme tags, control flow tags and iteration tags,

41
00:02:06,740 --> 00:02:09,835
in a kind of high level broad way,

42
00:02:09,835 --> 00:02:12,605
and if you want to go deeper into any of these,

43
00:02:12,605 --> 00:02:16,890
inevitably you're going to have to do so the deeper you go into theme development,

44
00:02:16,890 --> 00:02:19,075
this is the place that you'd want to look.

45
00:02:19,075 --> 00:02:26,435
There's also a quick reference called the Shopify Liquid Cheat Sheet.

46
00:02:26,435 --> 00:02:32,575
If I just type in Liquid Cheat Sheet,

47
00:02:32,575 --> 00:02:35,145
I can grab this.

48
00:02:35,145 --> 00:02:36,440
This is the original I believe,

49
00:02:36,440 --> 00:02:37,825
but it's now broken,

50
00:02:37,825 --> 00:02:40,970
so the one that's on the Shopify website,

51
00:02:40,970 --> 00:02:42,790
it's probably going to be better.

52
00:02:42,790 --> 00:02:46,010
Now you can see the cheat sheet,

53
00:02:46,010 --> 00:02:51,620
which basically has all the different options and what they do.

54
00:02:51,620 --> 00:02:58,955
Say for instance, if I just press command-F or Control-F on Windows,

55
00:02:58,955 --> 00:03:04,685
I can now search the page and maybe I want to find the title of a product.

56
00:03:04,685 --> 00:03:09,645
I'm going to type in, products dot title,

57
00:03:09,645 --> 00:03:13,320
and then I can learn more about what it does.

58
00:03:13,320 --> 00:03:15,855
Just simply returns the title of the product.

59
00:03:15,855 --> 00:03:19,170
I was thinking, maybe it's a product name,

60
00:03:19,170 --> 00:03:22,845
search that, that doesn't come up, title.

61
00:03:22,845 --> 00:03:27,800
That's the key word I got to use or maybe I'll go just to product and see

62
00:03:27,800 --> 00:03:33,270
what variables I have available on the product object and then,

63
00:03:33,270 --> 00:03:36,270
I see, that's the one I'm looking for.

64
00:03:36,270 --> 00:03:38,370
The cheat sheet's really valuable.

65
00:03:38,370 --> 00:03:41,870
Some people recommend printing it out and having it on your desktop,

66
00:03:41,870 --> 00:03:45,320
but you've got this link here at all times and

67
00:03:45,320 --> 00:03:49,160
at least you can search if it's in your browser.

68
00:03:49,160 --> 00:03:51,800
I always like to keep the cheat sheet handy,

69
00:03:51,800 --> 00:03:56,630
but luckily, it's only a short Google search away.

70
00:03:56,630 --> 00:03:59,435
Definitely reference this as a quick reference,

71
00:03:59,435 --> 00:04:04,100
and then you've got your Shopify documentation for deeper learnings.

72
00:04:04,100 --> 00:04:07,900
What I'm going to do is start from the bottom up.

73
00:04:07,900 --> 00:04:10,880
I'm going to click on variable tags first,

74
00:04:10,880 --> 00:04:14,610
and let's learn about our variable tags.

75
00:04:14,620 --> 00:04:16,655
As you can see here,

76
00:04:16,655 --> 00:04:19,640
there's a summary and we can go to each of

77
00:04:19,640 --> 00:04:24,330
these different ways of interacting with variables.

78
00:04:24,460 --> 00:04:27,740
The main one is going to be Assign.

79
00:04:27,740 --> 00:04:29,810
If you've done any programming in the past,

80
00:04:29,810 --> 00:04:31,475
you should be familiar with assignment.

81
00:04:31,475 --> 00:04:35,290
In Liquid, we just need to use the word assign,

82
00:04:35,290 --> 00:04:37,495
and then a variable name,

83
00:04:37,495 --> 00:04:39,085
then the equals sign,

84
00:04:39,085 --> 00:04:41,770
and then the value we want to assign to it.

85
00:04:41,770 --> 00:04:44,935
As you can see here, a very basic example,

86
00:04:44,935 --> 00:04:47,020
assign apples to favorite food,

87
00:04:47,020 --> 00:04:50,800
and then when we use the double curly brackets syntax,

88
00:04:50,800 --> 00:04:53,475
we can just output the value of that,

89
00:04:53,475 --> 00:04:55,350
and then your output's going to be this.

90
00:04:55,350 --> 00:04:57,835
If we go into our code,

91
00:04:57,835 --> 00:05:03,205
we can see here a lot of the signs for product, dash, template.

92
00:05:03,205 --> 00:05:06,370
Assigns make it easier for us to say,

93
00:05:06,370 --> 00:05:10,060
for instance, we have a value that we want to use multiple times on the page,

94
00:05:10,060 --> 00:05:13,120
maybe it's a good idea to assign it as a variable

95
00:05:13,120 --> 00:05:16,310
at the top and then you can change it in one place or maybe you

96
00:05:16,310 --> 00:05:23,330
have a very long string like this product dot selected underscore or underscore first,

97
00:05:23,330 --> 00:05:24,780
so on, so forth.

98
00:05:24,780 --> 00:05:27,490
You don't want to have to write that every single time,

99
00:05:27,490 --> 00:05:33,110
so you can put it into a smaller variable name that's perhaps more descriptive.

100
00:05:33,110 --> 00:05:36,935
Here, we have a Case Statement which we'll get to in a sec,

101
00:05:36,935 --> 00:05:41,860
where I'm assigning the value of things based on different cases.

102
00:05:41,860 --> 00:05:44,780
If I take this,

103
00:05:44,780 --> 00:05:49,735
this is obviously where it's being assigned and I search it for other code.

104
00:05:49,735 --> 00:05:53,225
This right here is obviously where it's being outputted.

105
00:05:53,225 --> 00:05:55,789
You may assign variables yourself,

106
00:05:55,789 --> 00:06:00,950
but more likely you'll be using variables that are on objects.

107
00:06:00,950 --> 00:06:04,390
If we go back to our reference,

108
00:06:04,390 --> 00:06:06,980
and we go into our theme cheat sheet,

109
00:06:06,980 --> 00:06:08,630
we can go down and look at

110
00:06:08,630 --> 00:06:12,150
the different objects and what variables are available to them.

111
00:06:12,150 --> 00:06:14,120
So, we have an object for cut,

112
00:06:14,120 --> 00:06:15,695
we have an object for checkout,

113
00:06:15,695 --> 00:06:18,740
object for article, object for address.

114
00:06:18,740 --> 00:06:20,135
So many different objects.

115
00:06:20,135 --> 00:06:21,835
The more obvious ones,

116
00:06:21,835 --> 00:06:27,975
products object right here.

117
00:06:27,975 --> 00:06:30,125
When we're working with the products,

118
00:06:30,125 --> 00:06:34,885
we want to be able to access all of these different variables within a product.

119
00:06:34,885 --> 00:06:39,560
We've got the page object right here.

120
00:06:39,560 --> 00:06:42,520
The great thing about Shopify is it's quite logical in

121
00:06:42,520 --> 00:06:45,790
the sense that if I'm in the page template,

122
00:06:45,790 --> 00:06:48,325
I have access to the page object.

123
00:06:48,325 --> 00:06:50,290
If I'm in the product template,

124
00:06:50,290 --> 00:06:53,420
I have access to the product object.

125
00:06:53,420 --> 00:06:56,020
Just showing you as an example,

126
00:06:56,020 --> 00:06:59,830
we had a look at the page template before.

127
00:06:59,830 --> 00:07:03,250
If I go to this one right here,

128
00:07:03,250 --> 00:07:05,395
you see we're in a page template right now.

129
00:07:05,395 --> 00:07:07,960
We have access to the page object,

130
00:07:07,960 --> 00:07:14,150
and then we can call a variable of the page object right here by going dot title.

131
00:07:14,150 --> 00:07:17,150
You can see here, I haven't assigned a title to page.

132
00:07:17,150 --> 00:07:19,700
There's no assignment in the code itself.

133
00:07:19,700 --> 00:07:24,740
What it's doing is it's looking at the page we're currently on and finding the title,

134
00:07:24,740 --> 00:07:28,350
as we said in our pages admin area.

135
00:07:28,350 --> 00:07:30,410
That's probably more common,

136
00:07:30,410 --> 00:07:31,805
at least in the beginning,

137
00:07:31,805 --> 00:07:33,710
than assigning your own variables,

138
00:07:33,710 --> 00:07:37,640
you're going to be looking at variables that come on the object that you're dealing

139
00:07:37,640 --> 00:07:43,230
with and you're going to either output them or do other operations with them.

140
00:07:56,960 --> 00:08:00,150
That covers "variable tags."

141
00:08:00,150 --> 00:08:02,850
Obviously, there was a few others in there.

142
00:08:02,850 --> 00:08:04,470
Sorry, I'll just go back to it.

143
00:08:04,470 --> 00:08:06,995
You may want to look at "capture",

144
00:08:06,995 --> 00:08:10,385
"increment", "decrement," but "assign" is the main one.

145
00:08:10,385 --> 00:08:14,270
I definitely recommend you go back and read this documentation,

146
00:08:14,270 --> 00:08:17,630
but we're going to breeze through this in this lesson

147
00:08:17,630 --> 00:08:22,060
because it's only one lesson to go over the entirety of Liquid.

148
00:08:22,060 --> 00:08:25,964
All right. So going into our "theme" tag section,

149
00:08:25,964 --> 00:08:28,635
these are things like "include",

150
00:08:28,635 --> 00:08:32,175
"layout" that we saw before, "section",

151
00:08:32,175 --> 00:08:36,315
so anytime we included a "snippet."

152
00:08:36,315 --> 00:08:42,660
If I go to "theme.liquid" we're probably going to see the best example of all of these.

153
00:08:42,660 --> 00:08:49,125
So remember we created this "snippet" earlier that is considered a "theme" tag.

154
00:08:49,125 --> 00:08:51,015
And obviously if we go down,

155
00:08:51,015 --> 00:08:58,245
we've got "sections" and then "layout" was one we used in our "page.about."

156
00:08:58,245 --> 00:09:04,830
We decided to use an alternative "layout" that we set out in our "layout folder", okay?

157
00:09:04,830 --> 00:09:06,480
What other ones do we have here?

158
00:09:06,480 --> 00:09:07,860
We also have "Comment."

159
00:09:07,860 --> 00:09:11,670
So if we want to make a comment in the code,

160
00:09:11,670 --> 00:09:17,595
we can do so using the "comment" tag pretty common in any programming language.

161
00:09:17,595 --> 00:09:20,115
"Include" for "snippets."

162
00:09:20,115 --> 00:09:23,655
We can also send variables to the "snippet."

163
00:09:23,655 --> 00:09:26,925
If I include this snippet name,

164
00:09:26,925 --> 00:09:30,300
it's going to obviously include the content of that,

165
00:09:30,300 --> 00:09:34,455
but then it's also going to give that "snippet" access to variables that I sent to it.

166
00:09:34,455 --> 00:09:42,420
Okay. Also if you're creating a "form" instead of using a standard "form" tag in HTML,

167
00:09:42,420 --> 00:09:48,315
you can use a more intelligent version in Liquid by using the "form" and "endform" tags.

168
00:09:48,315 --> 00:09:51,570
Okay. We're going to breeze over that because we could

169
00:09:51,570 --> 00:09:54,915
get caught up on "forms" for quite a while in itself.

170
00:09:54,915 --> 00:09:58,290
There's a bunch of different "forms" in Shopify.

171
00:09:58,290 --> 00:10:00,915
And if we use this syntax,

172
00:10:00,915 --> 00:10:05,880
we can take advantage of some of the built-in logic of Shopify.

173
00:10:05,880 --> 00:10:08,550
All right. "Layout" we used before.

174
00:10:08,550 --> 00:10:12,840
"Pagination." This is really cool because "pagination" can be a pain in

175
00:10:12,840 --> 00:10:17,085
the ass to program yourself but in Liquid, it's quite simple.

176
00:10:17,085 --> 00:10:18,570
We just need to "wrap"

177
00:10:18,570 --> 00:10:24,990
the thing we want to "paginate" in this "paginate" and "end paginate" tags. All right.

178
00:10:24,990 --> 00:10:28,575
Then we can "paginate" by five or whatever value we want.

179
00:10:28,575 --> 00:10:32,085
"Raw" allows us to put out Liquid in raw form.

180
00:10:32,085 --> 00:10:34,170
I don't know why you would ever need to do that.

181
00:10:34,170 --> 00:10:41,670
"Section" we saw and we can use "style" to output some styles in a actual template.

182
00:10:41,670 --> 00:10:45,375
The reason why you might want to do that is because it allows us to make

183
00:10:45,375 --> 00:10:49,845
live color updates from the theme editor without a full page refresh.

184
00:10:49,845 --> 00:10:52,470
So if you saw before when we were working with our

185
00:10:52,470 --> 00:10:56,745
"customizer" and we edited something and then it came up "live."

186
00:10:56,745 --> 00:11:02,190
Like if we changed a color and right next to it in the preview, it updated instantly.

187
00:11:02,190 --> 00:11:06,105
It's because we're using these "liquid style" tags.

188
00:11:06,105 --> 00:11:09,900
I'm pretty sure if you put in your own "style" tags that aren't Liquid,

189
00:11:09,900 --> 00:11:13,215
so if you just put in the standard HTML ones that look like this,

190
00:11:13,215 --> 00:11:15,285
it won't update automatically,

191
00:11:15,285 --> 00:11:16,665
but it will still work.

192
00:11:16,665 --> 00:11:20,530
It's better just to use this because then you get instant feedback.

193
00:11:20,690 --> 00:11:23,820
"Theme" tags are handy.

194
00:11:23,820 --> 00:11:26,025
They're used throughout your theme.

195
00:11:26,025 --> 00:11:27,960
They're the ones that are more of

196
00:11:27,960 --> 00:11:31,905
the "programming type" ones that you'd see in any programming language.

197
00:11:31,905 --> 00:11:34,050
"Control-flow and Iteration".

198
00:11:34,050 --> 00:11:36,285
Lets go over those right now.

199
00:11:36,285 --> 00:11:40,260
"Control flow" is basically conditionals.

200
00:11:40,260 --> 00:11:42,690
So if you've done any programming before,

201
00:11:42,690 --> 00:11:45,405
you would have seen an "if then" statement.

202
00:11:45,405 --> 00:11:53,550
So right here, it says "if product title equals awesome shoes" then it will output that.

203
00:11:53,550 --> 00:11:55,950
If that's the case, you will get this.

204
00:11:55,950 --> 00:11:58,320
If not, you won't get anything,

205
00:11:58,320 --> 00:12:00,810
unless it's like the opposite of "if."

206
00:12:00,810 --> 00:12:04,050
It's basically the same as "if product title does

207
00:12:04,050 --> 00:12:07,590
not equal awesome shoes" then you get that.

208
00:12:07,590 --> 00:12:11,475
You can also add in an "else if."

209
00:12:11,475 --> 00:12:15,120
If it hits this and it doesn't,

210
00:12:15,120 --> 00:12:19,890
then go this one, and if it matches that, then output this.

211
00:12:19,890 --> 00:12:24,750
But if it doesn't, then you can go to an "else" and then you end the "if."

212
00:12:24,750 --> 00:12:28,065
That's pretty standard in any programming language.

213
00:12:28,065 --> 00:12:29,865
Also a "case" statement.

214
00:12:29,865 --> 00:12:32,820
If you have one variable and you want to

215
00:12:32,820 --> 00:12:36,165
check the value on that for a different variables.

216
00:12:36,165 --> 00:12:42,615
This is a nicer way of writing conditional rather than having to do "if",

217
00:12:42,615 --> 00:12:45,300
"else-if" and on and on and on.

218
00:12:45,300 --> 00:12:48,285
If you want to have multiple conditions,

219
00:12:48,285 --> 00:12:51,165
you can use the keywords "and" and "or"

220
00:12:51,165 --> 00:12:54,240
which is good because it's just standard language.

221
00:12:54,240 --> 00:12:58,275
It's not pipe or other kind of weird characters.

222
00:12:58,275 --> 00:13:00,165
This reads pretty nicely.

223
00:13:00,165 --> 00:13:04,035
"If line_item.grams is greater than 2 thousand and

224
00:13:04,035 --> 00:13:12,495
customer_address.city equals Ottawa" then it'll output this code in-between these tags.

225
00:13:12,495 --> 00:13:14,610
That reads quite nicely.

226
00:13:14,610 --> 00:13:18,255
It just make sense in English reading it.

227
00:13:18,255 --> 00:13:21,220
On the flip side you can use "or."

228
00:13:21,620 --> 00:13:25,365
We'll have a look at a few examples in just a second.

229
00:13:25,365 --> 00:13:28,590
Let's go into "Iteration" tags finally.

230
00:13:28,590 --> 00:13:31,620
This is stuff like loops.

231
00:13:31,620 --> 00:13:36,270
The main one that you're going to see over and over again in liquid is "for."

232
00:13:36,270 --> 00:13:42,060
The language for "for" in liquid is pretty self-explanatory as well.

233
00:13:42,060 --> 00:13:47,205
You're going to loop through every product in "collections.products" and

234
00:13:47,205 --> 00:13:52,695
you're going to grab that particular product object using this word.

235
00:13:52,695 --> 00:13:54,675
This word could be anything you want.

236
00:13:54,675 --> 00:13:56,985
It's just best to use a descriptive word.

237
00:13:56,985 --> 00:14:00,490
For product in "collection.products"

238
00:14:01,760 --> 00:14:07,710
you have access now within that loop cycle to the particular product,

239
00:14:07,710 --> 00:14:09,300
to that particular object,

240
00:14:09,300 --> 00:14:11,895
and then you can do stuff with that.

241
00:14:11,895 --> 00:14:15,780
I know that's vague, but there's a lot of things you can put within here,

242
00:14:15,780 --> 00:14:18,870
but this is a great example of you're going to want

243
00:14:18,870 --> 00:14:22,485
to loop through a collection of products at some time.

244
00:14:22,485 --> 00:14:27,825
This is pretty standard in Liquid and any programming language for that matter.

245
00:14:27,825 --> 00:14:31,050
You can also put an "else" statement within a "for."

246
00:14:31,050 --> 00:14:34,350
You can break the loop if it matches the sonic condition.

247
00:14:34,350 --> 00:14:38,580
You can also skip one cycle of the loop if

248
00:14:38,580 --> 00:14:43,545
something matches a certain condition and you can limit offset,

249
00:14:43,545 --> 00:14:46,515
define a range of different things with "for."

250
00:14:46,515 --> 00:14:50,520
But usually, it's just as simple as this right here,

251
00:14:50,520 --> 00:14:54,240
just cycling through a list of objects and outputting

252
00:14:54,240 --> 00:15:00,310
the same thing for each of those objects in that collection of objects.

253
00:15:00,500 --> 00:15:04,830
Like I said, it probably makes more sense to actually see it.

254
00:15:04,830 --> 00:15:09,210
Let's take a look at some random Liquid code now and see what's going on.

255
00:15:09,210 --> 00:15:10,560
Actually, before we do that,

256
00:15:10,560 --> 00:15:13,200
there is one more thing that we need to look at

257
00:15:13,200 --> 00:15:16,230
with Liquid that is going to trip you up if you don't know,

258
00:15:16,230 --> 00:15:18,555
and that is "filters."

259
00:15:18,555 --> 00:15:23,520
Quickly, we're just going to have a look at "filters" before we dive into the code.

260
00:15:23,520 --> 00:15:26,820
"Filters" is kind of a unique thing to Liquid.

261
00:15:26,820 --> 00:15:29,130
If you're familiar with other programming languages,

262
00:15:29,130 --> 00:15:32,880
usually you would use functions or methods

263
00:15:32,880 --> 00:15:36,825
to get the same result as what a "filter" does in liquid.

264
00:15:36,825 --> 00:15:41,400
Once you get used to "Liquid filters" you'll find that they're actually quite simple

265
00:15:41,400 --> 00:15:46,920
and it's pretty easy to be able to "filter" content that actually makes sense.

266
00:15:46,920 --> 00:15:49,305
Let's look at an example right here.

267
00:15:49,305 --> 00:15:52,485
We've got the product title that we just want to output on the screen.

268
00:15:52,485 --> 00:15:55,500
But now we've got a "filter" that says "upcase."

269
00:15:55,500 --> 00:16:00,920
What that does, is it'll take whatever is here and make it uppercase.

270
00:16:00,920 --> 00:16:03,080
Your output is going to be,

271
00:16:03,080 --> 00:16:06,335
if the product title was "awesome shoes" which it is here,

272
00:16:06,335 --> 00:16:11,545
it's going to create an uppercase version of that and then output that to the screen.

273
00:16:11,545 --> 00:16:14,365
There is, of course, lots of different "filters."

274
00:16:14,365 --> 00:16:16,570
One of them is "remove."

275
00:16:16,570 --> 00:16:21,685
This filter will remove "awesome" from the "product.title" so you'll just get shoes.

276
00:16:21,685 --> 00:16:24,590
You can also "chain" multiple filters together.

277
00:16:24,590 --> 00:16:28,200
You've got "product title" "upcase" and "remove."

278
00:16:28,200 --> 00:16:30,965
We're going to "upcase" the "product.title"

279
00:16:30,965 --> 00:16:33,905
and then after that we're going to remove "awesome" from it.

280
00:16:33,905 --> 00:16:37,235
Then you just get "shoes" in uppercase.

281
00:16:37,235 --> 00:16:40,040
Let's have a look at a few others.

282
00:16:40,040 --> 00:16:43,040
Obviously, we're not going to be able to get through all of them.

283
00:16:43,040 --> 00:16:46,255
Yeah, actually, there are way too many to look at.

284
00:16:46,255 --> 00:16:51,385
Let me have a look at some that we might see often.

285
00:16:51,385 --> 00:16:54,620
"Image" tag is a good one.

286
00:16:54,620 --> 00:17:02,340
We can just put the name of the image and we can grab the "asset URL" of that.

287
00:17:02,340 --> 00:17:07,915
We can also "wrap" that in an "image" tag and so you'll get this,

288
00:17:07,915 --> 00:17:09,170
which is pretty cool.

289
00:17:09,170 --> 00:17:12,220
That's an example where tags really come in handy,

290
00:17:12,220 --> 00:17:15,670
instead of trying to find the address of

291
00:17:15,670 --> 00:17:19,450
this image and then having to put tags around it,

292
00:17:19,450 --> 00:17:24,970
you can literally just define the image name in your assets and then

293
00:17:24,970 --> 00:17:31,615
find the "asset URL" wrap that around that and then find "image" tag,

294
00:17:31,615 --> 00:17:37,460
wrap that around the output of those and you've got this.

295
00:17:37,460 --> 00:17:40,385
You can "chain" a bunch of them.

296
00:17:40,385 --> 00:17:44,495
Sometimes you want to put in a colon and some options.

297
00:17:44,495 --> 00:17:47,720
Other times you just put in the "filter" by itself,

298
00:17:47,720 --> 00:17:50,330
but without going deep into all the different

299
00:17:50,330 --> 00:17:54,590
"filters" that's essentially what's happening when you see a "pipe."

300
00:17:54,590 --> 00:18:00,545
You'll see a piece of "content" then you'll see a "pipe" and then a "filter" name.

301
00:18:00,545 --> 00:18:02,120
If you don't know what's going on,

302
00:18:02,120 --> 00:18:08,910
all you need to do is look it up.If I search this in our cheat sheet.

303
00:18:09,990 --> 00:18:19,060
I can go in here and see it returns the URL of a file in the assets folder of a theme.

304
00:18:19,060 --> 00:18:23,635
Very descriptive, and it shows us a pretty good example right here.

305
00:18:23,635 --> 00:18:26,740
So, that's the final thing.

306
00:18:26,740 --> 00:18:28,179
We've got our tags,

307
00:18:28,179 --> 00:18:32,200
and we talked about objects and filters is also important,

308
00:18:32,200 --> 00:18:34,600
but filters goes quite deep.

309
00:18:34,600 --> 00:18:37,210
Let's dive into the code now and see some examples,

310
00:18:37,210 --> 00:18:41,755
because I think that's where it's going to make the most sense and hit home the most.

311
00:18:41,755 --> 00:18:45,220
Okay, so right here we've got a really basic template.

312
00:18:45,220 --> 00:18:47,440
I like to show the page template,

313
00:18:47,440 --> 00:18:49,285
because it is quite basic,

314
00:18:49,285 --> 00:18:53,350
but we're inevitably going to get ones are a little bit more complicated.

315
00:18:53,350 --> 00:18:58,760
If I go into the product dash template in sections.

316
00:18:58,920 --> 00:19:04,105
You'll see here we've got a bunch of variables that we're assigning.

317
00:19:04,105 --> 00:19:06,055
Then we've got a case statement,and

318
00:19:06,055 --> 00:19:09,700
the case statement is to figure out what we're going to

319
00:19:09,700 --> 00:19:15,564
assign to these variables based on the image size set in our section settings.

320
00:19:15,564 --> 00:19:18,580
Now remember, when we see Section dot settings,

321
00:19:18,580 --> 00:19:21,010
that is set in the schema below.

322
00:19:21,010 --> 00:19:26,035
All right, we're going to dive deeper into sections in the next lesson.

323
00:19:26,035 --> 00:19:29,845
So we're going to have a little bit more exposure to sections,

324
00:19:29,845 --> 00:19:33,610
so you'll learn more a bit about what's going on here and how to use it.

325
00:19:33,610 --> 00:19:35,530
Here we can see a for loop.

326
00:19:35,530 --> 00:19:37,420
And this for loop,

327
00:19:37,420 --> 00:19:40,255
as we can probably tell from just reading it,

328
00:19:40,255 --> 00:19:44,035
it takes the image out of the product images.

329
00:19:44,035 --> 00:19:50,125
For each of them, it does a bunch of stuff amongst just displaying the image.

330
00:19:50,125 --> 00:19:52,750
If you're wondering what all this is,

331
00:19:52,750 --> 00:19:55,930
this is how it does responsive images.

332
00:19:55,930 --> 00:19:58,795
Instead of just doing image SRC,

333
00:19:58,795 --> 00:20:04,255
this is like a New Age HTML thing where we can output a lot

334
00:20:04,255 --> 00:20:10,270
of different images based on the screen size and resolution.

335
00:20:10,270 --> 00:20:15,940
Just a side note for those who aren't familiar with responsive images, okay?

336
00:20:15,940 --> 00:20:18,640
We can see throughout our template,

337
00:20:18,640 --> 00:20:24,299
we're getting just variables that we want to output into various sections of HTML,

338
00:20:24,299 --> 00:20:27,165
and we can see that the loop is ending here.

339
00:20:27,165 --> 00:20:29,760
Now we can see an if tag here.

340
00:20:29,760 --> 00:20:33,490
So if products, dot image sizes, dot size.

341
00:20:33,490 --> 00:20:39,205
That's basically if the length of product images or how many products images there are,

342
00:20:39,205 --> 00:20:41,005
if that is greater than one,

343
00:20:41,005 --> 00:20:42,460
then we do all of this,

344
00:20:42,460 --> 00:20:47,200
and if it's greater than three then we want to enable thumbnails.

345
00:20:47,200 --> 00:20:49,570
So, a lot of logic in here.

346
00:20:49,570 --> 00:20:51,910
You're not going to be able to get your head around it straight

347
00:20:51,910 --> 00:20:54,880
away on something as complex as this.

348
00:20:54,880 --> 00:21:01,420
But, we'll soon see when we work with blocks in a section in the next lesson,

349
00:21:01,420 --> 00:21:04,825
you'll start to see that for-loops, case statements,

350
00:21:04,825 --> 00:21:08,740
if statements they are very common and then not that scary.

351
00:21:08,740 --> 00:21:10,105
It's just in this one,

352
00:21:10,105 --> 00:21:13,345
we're seeing a lot of it all matched together.

353
00:21:13,345 --> 00:21:15,490
Here you can see a filter.

354
00:21:15,490 --> 00:21:18,985
Here's an example of a filter that you're going to see throughout your project,

355
00:21:18,985 --> 00:21:20,445
is the translate one.

356
00:21:20,445 --> 00:21:25,675
This one is a special one because it looks up this variable in our languages file,

357
00:21:25,675 --> 00:21:30,100
and it outputs the text based on what language we're in.

358
00:21:30,100 --> 00:21:31,810
A more common filter,

359
00:21:31,810 --> 00:21:34,420
let's have a look, escape.

360
00:21:34,420 --> 00:21:36,520
Using what I showed you before,

361
00:21:36,520 --> 00:21:39,595
if we wanted to figure out what this filter is doing.

362
00:21:39,595 --> 00:21:41,575
Obviously we're outputting a value,

363
00:21:41,575 --> 00:21:44,050
but we want to see what escape does.

364
00:21:44,050 --> 00:21:51,440
Let's go to our cheat sheet and type in escape.

365
00:21:52,860 --> 00:21:55,855
Here we go, string filters.

366
00:21:55,855 --> 00:21:58,225
Escape. Escapes a string.

367
00:21:58,225 --> 00:22:02,020
That's a bad example because basically what we're doing is,

368
00:22:02,020 --> 00:22:06,400
we're taking the string and we want to actually output the HTML tags.

369
00:22:06,400 --> 00:22:08,080
Let's look for another one.

370
00:22:08,080 --> 00:22:10,240
Another filter.

371
00:22:10,240 --> 00:22:12,205
Here we go, pipe json.

372
00:22:12,205 --> 00:22:15,220
All right, so let's look in here.

373
00:22:15,220 --> 00:22:17,740
We can see general filters.

374
00:22:17,740 --> 00:22:19,915
So, what does the json filter do?

375
00:22:19,915 --> 00:22:22,480
It converts a string into json format.

376
00:22:22,480 --> 00:22:25,150
Again, not the best example because it's a little bit complicated,

377
00:22:25,150 --> 00:22:27,865
but we're taking a piece of string here,

378
00:22:27,865 --> 00:22:34,765
converting it to json and you'll see here that we get this json version of the object.

379
00:22:34,765 --> 00:22:37,285
Let's try and find a more simple filter,

380
00:22:37,285 --> 00:22:40,150
because I don't want to overwhelm you with these crazy filters

381
00:22:40,150 --> 00:22:43,765
and you just think that they're too hard or too complicated.

382
00:22:43,765 --> 00:22:45,670
We can see image URL here.

383
00:22:45,670 --> 00:22:50,125
We're taking the logo that we've set in our section settings.

384
00:22:50,125 --> 00:22:52,900
We're running it through a filter of image URL,

385
00:22:52,900 --> 00:22:55,930
with the argument of one by one.

386
00:22:55,930 --> 00:22:58,720
Let's look up that one in the cheat sheet.

387
00:22:58,720 --> 00:23:03,340
Image URL. Click on this one,

388
00:23:03,340 --> 00:23:05,395
returns the URL of an image,

389
00:23:05,395 --> 00:23:08,110
accepts image size as a parameter.

390
00:23:08,110 --> 00:23:11,440
So, if we put in one by one,

391
00:23:11,440 --> 00:23:15,610
it's going to put in a one-by-one image.

392
00:23:15,610 --> 00:23:18,865
You might be wondering why we're putting one-by-one in.

393
00:23:18,865 --> 00:23:24,140
Well, we're running it through replace again with a dynamic width.

394
00:23:24,630 --> 00:23:27,940
Probably another complicated example,

395
00:23:27,940 --> 00:23:32,545
but we'll try and use some more simple filters in a later video.

396
00:23:32,545 --> 00:23:36,655
Here's one that's a little bit more simple, append.

397
00:23:36,655 --> 00:23:39,069
If we search for append,

398
00:23:39,069 --> 00:23:42,115
it just appends a character to a string.

399
00:23:42,115 --> 00:23:44,920
So, sales append JPEG,

400
00:23:44,920 --> 00:23:46,510
it just adds it to the string.

401
00:23:46,510 --> 00:23:48,130
So, that one's a simple one.

402
00:23:48,130 --> 00:23:52,195
We're just taking this and we're adding an X to the end of it.

403
00:23:52,195 --> 00:23:55,220
That's pretty simple, let's end on that one.

404
00:23:55,620 --> 00:23:59,515
Going back to our documentation,

405
00:23:59,515 --> 00:24:02,275
if you need to review more about liquid,

406
00:24:02,275 --> 00:24:06,250
I definitely recommend you go in and read more.

407
00:24:06,250 --> 00:24:08,365
Probably the way you're going to learn better,

408
00:24:08,365 --> 00:24:12,460
is by going into the code and just trying to figure it out.

409
00:24:12,460 --> 00:24:16,030
Start with the less complicated templates first,

410
00:24:16,030 --> 00:24:20,049
and if you see a filter that you don't recognize,

411
00:24:20,049 --> 00:24:22,750
which is going to be pretty much all of them if you are new to this.

412
00:24:22,750 --> 00:24:27,385
Actually go in, look it up in the cheat sheet, or the documentation.

413
00:24:27,385 --> 00:24:29,710
Sometimes you might need more information.

414
00:24:29,710 --> 00:24:32,590
The cheat sheet is good, because if you click learn more,

415
00:24:32,590 --> 00:24:35,980
it's going to take you to that part of the documentation.

416
00:24:35,980 --> 00:24:39,130
But the cheat sheets a good reference because you've got

417
00:24:39,130 --> 00:24:42,325
everything on one page and you can just search for it.

418
00:24:42,325 --> 00:24:46,840
Obviously, there's a lot on this page and there's a lot in documentation,

419
00:24:46,840 --> 00:24:52,435
we don't have forever to go over every option in liquid.

420
00:24:52,435 --> 00:24:58,840
But I think it's a good idea to do as much as you can when you're developing your theme.

421
00:24:58,840 --> 00:25:01,300
And whenever you come up against something,

422
00:25:01,300 --> 00:25:04,165
look at the cheat sheet, look at the documentation,

423
00:25:04,165 --> 00:25:07,930
and hopefully you can start to get a grasp on what liquid tag you

424
00:25:07,930 --> 00:25:12,805
need or what liquid tags that are already on your project are doing.

425
00:25:12,805 --> 00:25:14,920
So, that's liquid.

426
00:25:14,920 --> 00:25:20,200
In the next section we're going to bring our knowledge of the structure of

427
00:25:20,200 --> 00:25:23,140
our template code and what we've just learned with

428
00:25:23,140 --> 00:25:26,050
liquid to build our own custom section,

429
00:25:26,050 --> 00:25:29,290
and then we're going to include it on a template.

430
00:25:29,290 --> 00:25:32,260
So I'm excited to tie and what we've learned already and show you

431
00:25:32,260 --> 00:25:36,740
the exciting power of sections in the next video. So I'll see you there.

