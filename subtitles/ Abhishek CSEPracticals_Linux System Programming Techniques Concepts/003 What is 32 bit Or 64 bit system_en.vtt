WEBVTT
1
00:00:04.970 --> 00:00:12.140
So, guys, now let us discuss next that what does it mean when we see that my system is 32 bit system

2
00:00:12.140 --> 00:00:14.640
or my system is 64 bit system?

3
00:00:15.590 --> 00:00:21.620
Many times you must have come across this phrase or this saying that, hey, what is your system?

4
00:00:21.620 --> 00:00:24.860
Is your system 32 bit system or 64 bit system?

5
00:00:25.520 --> 00:00:31.550
All you must have experienced that while downloading certain software or packages from the Internet,

6
00:00:31.940 --> 00:00:38.660
you are prompted whether you want to download a particular software for a 32 bit operating system or

7
00:00:38.660 --> 00:00:40.250
64 bit operating system.

8
00:00:40.700 --> 00:00:47.360
So now let's discuss in this lecture that what does it actually mean when we say that our system is

9
00:00:47.360 --> 00:00:51.590
32 bit system or my system is 64 bit system?

10
00:00:52.070 --> 00:00:58.550
So let us discuss in the context of 32 bit system, whatever reasoning we apply to attach it to a big

11
00:00:58.550 --> 00:00:59.090
system.

12
00:00:59.360 --> 00:01:02.580
The same reasoning applies to a 64 bit system.

13
00:01:03.110 --> 00:01:06.290
So suppose we have a system which is 32 bit system.

14
00:01:06.560 --> 00:01:15.170
It simply means that all processes in execution have theoretically to react to the power 32 virtual

15
00:01:15.170 --> 00:01:18.710
addresses in its process, which will address the space.

16
00:01:19.340 --> 00:01:25.970
So you can see that on the right hand side I have again drawn the process control block diagram of a

17
00:01:25.970 --> 00:01:31.400
process and this diagram shows the memory layout of a process.

18
00:01:32.560 --> 00:01:39.340
Now, as I said, that if the system is a 32 bit system, it means that the size of the process, which

19
00:01:39.340 --> 00:01:44.320
will address the space of a process, will be to restore the power to 32 bytes.

20
00:01:44.800 --> 00:01:51.640
Now, every byte has an address, so it means how many Whelchel addresses will be there in process,

21
00:01:51.640 --> 00:01:52.850
which will address the space.

22
00:01:53.410 --> 00:01:59.410
There will be to restore the power 32 virtual addresses or logical addresses.

23
00:02:00.580 --> 00:02:07.990
So if we assume that the lowest logical address of a process is zero, then the highest logical address

24
00:02:07.990 --> 00:02:11.220
for going to be to restore the power to minus one.

25
00:02:12.010 --> 00:02:19.720
So addresses are nothing, but they are just 32 bit integers, which identifies Mahmoudi locations right

26
00:02:20.740 --> 00:02:21.010
now.

27
00:02:21.020 --> 00:02:24.350
This memory location could be any location in this process.

28
00:02:24.350 --> 00:02:29.770
Quadrilaterals, the space, the starting from the memory location zero to the highest memory location.

29
00:02:29.770 --> 00:02:33.070
Whose address is Trudi's to the power to two to minus one.

30
00:02:33.880 --> 00:02:38.260
So suppose in your program you print an address of a variable.

31
00:02:39.070 --> 00:02:39.470
Right.

32
00:02:39.700 --> 00:02:44.930
So basically this statement will going to print the virtual address of a variable eight.

33
00:02:45.490 --> 00:02:51.330
So what's your address means the address of some byte in this process which will address the space.

34
00:02:52.330 --> 00:02:58.300
So I'm -- sure that you must have written subprogram and you must have printed addresses in order

35
00:02:58.300 --> 00:03:00.850
to suppose debug your program.

36
00:03:01.210 --> 00:03:07.830
So those addresses which you see on the output are actually virtual addresses of variables.

37
00:03:08.110 --> 00:03:14.980
Those are not physical addresses, but those are words on addresses which you are printing on the screen.

38
00:03:15.890 --> 00:03:22.400
Now, when I say that my system is a 32 bit system, it also means that the size of the database is

39
00:03:22.400 --> 00:03:27.050
32 bits and the size of the address box is 32 bits.

40
00:03:27.560 --> 00:03:29.990
So now we will going to discuss next that.

41
00:03:29.990 --> 00:03:36.020
What does it mean when we see the size of the database has 32 bits and the size of the address was is

42
00:03:36.320 --> 00:03:37.310
32 bits.

43
00:03:38.600 --> 00:03:48.110
Now, the fact that your system is a 32 bit system also determines that how many bytes your CPU actually

44
00:03:48.110 --> 00:03:52.730
read or write into physical memory or virtual memory at a time.

45
00:03:53.270 --> 00:04:00.110
Now, let us discuss next that what is data, buzz and adverse buzz and how do they work on a 32 bit

46
00:04:00.110 --> 00:04:00.670
system?

