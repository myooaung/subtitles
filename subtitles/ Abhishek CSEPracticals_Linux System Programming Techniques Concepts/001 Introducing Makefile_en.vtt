WEBVTT
1
00:00:05.540 --> 00:00:06.950
So welcome back, guys.

2
00:00:07.280 --> 00:00:12.510
Now, in this module, we will going to learn the purpose and how to write a make file.

3
00:00:13.400 --> 00:00:15.470
So what exactly Makefile is?

4
00:00:16.010 --> 00:00:23.930
Makefile is nothing, but it is a program building tool which runs on your next Lennix and their equivalent

5
00:00:23.930 --> 00:00:33.290
Flavour's Makefile AIDS in simplifying building the software program that made dependent on various

6
00:00:33.290 --> 00:00:34.380
other libraries.

7
00:00:34.850 --> 00:00:38.310
So let us try to understand this point with the help of an example.

8
00:00:39.230 --> 00:00:46.610
So, for example, suppose you have a software program and that software program is big enough that

9
00:00:46.610 --> 00:00:51.560
it consists of 200 Sourcefire and 20 hydrofoils.

10
00:00:53.650 --> 00:01:01.270
Now, out of these 200 source file and 20 header files, you need to create certain dishes from the

11
00:01:01.270 --> 00:01:02.540
above raw material.

12
00:01:02.770 --> 00:01:09.250
So let us call this as the raw material, because you need to cook up this raw material to prepare a

13
00:01:09.250 --> 00:01:10.570
certain set of dishes.

14
00:01:10.870 --> 00:01:12.260
Now, what are the dishes here?

15
00:01:12.670 --> 00:01:17.870
Dishes are nothing but the final product that you want to create out of these source files.

16
00:01:18.160 --> 00:01:26.050
So suppose that out of these 200 source file, you need to create 10 static libraries, five shared

17
00:01:26.050 --> 00:01:28.420
libraries and three executable.

18
00:01:28.930 --> 00:01:29.310
Right.

19
00:01:29.950 --> 00:01:38.920
And note that in the production code, the size of this software program can as big as it may have thousands

20
00:01:38.920 --> 00:01:41.980
of source files and hundreds of flights.

21
00:01:43.060 --> 00:01:50.680
So the question is that how will you going to build such a huge software program which consists of so

22
00:01:50.680 --> 00:01:57.300
many source file and other files, so the answer is that you need to make use of make file.

23
00:01:59.080 --> 00:02:05.800
If you do not make use of makefile in building such huge software programs, then of course you will

24
00:02:05.800 --> 00:02:09.310
go mad if you compile each source file one by one.

25
00:02:09.910 --> 00:02:13.570
In fact, it is infeasible and not possible thing to do.

26
00:02:14.350 --> 00:02:20.350
So make file contains all the commands required to bring all the dishes you need and what other dishes

27
00:02:20.350 --> 00:02:23.230
here, the final and product that you want to build.

28
00:02:24.010 --> 00:02:25.420
So these are dishes.

29
00:02:26.530 --> 00:02:32.350
So here are dishes is an informal term that we are using to refer to the final product that you want

30
00:02:32.350 --> 00:02:32.810
to build.

31
00:02:33.850 --> 00:02:41.320
I have seen that 99 percent of the students never make use of make files in their academic tenure to

32
00:02:41.320 --> 00:02:44.980
build and compile their C or C++ programs.

33
00:02:45.190 --> 00:02:47.460
And that is really something very sad.

34
00:02:48.190 --> 00:02:55.060
In fact, unless you start working for a company in the industry, then only I have seen that students

35
00:02:55.060 --> 00:02:57.880
encounter for the first time with the Makefile.

36
00:03:00.590 --> 00:03:08.060
So it is for this reason, I have decided to include one more deal on Makefile itself so that you develop

37
00:03:08.060 --> 00:03:12.500
the habit of building your software programs using make files.

38
00:03:12.830 --> 00:03:19.190
You will see that making use of make files in building your software program is a one time effort and

39
00:03:19.190 --> 00:03:24.770
it is very convenient that pays off when a software program grows in size.

40
00:03:27.120 --> 00:03:32.550
Now, let us go through the functions of a make file, that is what is the purpose of make.

41
00:03:34.620 --> 00:03:38.770
So the very first and the basic function of the file is the compilation.

42
00:03:39.270 --> 00:03:44.460
So this involves the compilation of source file to create the corresponding object files.

43
00:03:45.600 --> 00:03:48.720
Then linking is also done using make files.

44
00:03:49.320 --> 00:03:55.050
Make file is also used to create required libraries, which could be static or dynamic.

45
00:03:55.830 --> 00:03:59.880
And of course, Makefile is used to create the required executables.

46
00:04:00.210 --> 00:04:06.650
Makefile is also used for the installation of libraries and executables on your system.

47
00:04:07.350 --> 00:04:11.640
And of course Makefile is used to update the dependencies.

48
00:04:13.080 --> 00:04:21.420
So you can see diagrammatically here that Makefile is used to create libraries, executables, installation,

49
00:04:21.790 --> 00:04:22.140
right.

50
00:04:23.070 --> 00:04:26.970
And of course, the input to the Makefile is the raw material here.

51
00:04:26.970 --> 00:04:30.480
Raw material means the source file and her files.

52
00:04:30.960 --> 00:04:37.950
And of course, you may be provided with pre compiled libraries and object files from third party libraries.

53
00:04:38.670 --> 00:04:45.940
So those pre compiled libraries can also be created to file in order to create your final products.

54
00:04:47.160 --> 00:04:52.370
So in order to learn how to write a make file, we will do a short assignment.

55
00:04:53.610 --> 00:04:59.580
So as an exercise, we will be developing a very small software package using a make file.

