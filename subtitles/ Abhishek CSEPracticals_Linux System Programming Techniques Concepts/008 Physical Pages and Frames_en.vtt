WEBVTT
1
00:00:05.220 --> 00:00:06.840
So, guys, welcome back.

2
00:00:07.140 --> 00:00:14.130
Now let us get ourselves familiar with physical pages and physical frames so shown in the diagram on

3
00:00:14.130 --> 00:00:15.670
the left hand side is a typical.

4
00:00:16.890 --> 00:00:21.420
Let us say that it is the main memory whose size is four gigabytes.

5
00:00:22.080 --> 00:00:28.860
Therefore, the address of the last byte in this random access memory is to restore the power to minus

6
00:00:28.860 --> 00:00:29.130
one.

7
00:00:29.910 --> 00:00:34.140
This will be the physical address of the last byte in this physical memory.

8
00:00:35.130 --> 00:00:43.530
Now, if the fragment, this main memory in blocks of equal size, each block is then called a frame.

9
00:00:44.280 --> 00:00:44.740
Right.

10
00:00:45.150 --> 00:00:52.680
So you can see that we have logically divided this physical memory into blocks of equal size on more

11
00:00:52.700 --> 00:00:54.060
system architecture.

12
00:00:54.270 --> 00:00:57.480
The size of the frame is taken as four kilobytes.

13
00:00:57.820 --> 00:00:58.220
Right.

14
00:00:58.590 --> 00:01:03.060
So this is one frame and the size of one frame is four kilobytes.

15
00:01:04.379 --> 00:01:07.650
This size is configurable and you can change it.

16
00:01:08.160 --> 00:01:15.690
But the operating system designers have chosen four kilobytes as the most optimal value used as a size

17
00:01:15.690 --> 00:01:16.410
of a frame.

18
00:01:17.550 --> 00:01:23.280
So now the question is, how many frames are there in this of physical memory?

19
00:01:23.790 --> 00:01:30.120
Just apply a simple mathematics and you will get that number of frames will be equal to size of physical

20
00:01:30.120 --> 00:01:32.900
memory, divided by a size of one frame.

21
00:01:33.240 --> 00:01:41.280
So it means that this form of physical memory is divided into two is to the power 20 frames of equal

22
00:01:41.280 --> 00:01:41.880
size.

23
00:01:43.710 --> 00:01:51.240
Now coming to the physical page, but a snapshot of the data stored in a frame of a physical memory

24
00:01:51.540 --> 00:01:59.130
is called a physical Fage right subframe of a physical memory is nothing, but it is a block of physical

25
00:01:59.130 --> 00:02:01.250
memory of size, particular bytes.

26
00:02:01.770 --> 00:02:03.480
And of course, it's a physical memory.

27
00:02:03.510 --> 00:02:08.160
Therefore, you will have some data over here right now.

28
00:02:08.160 --> 00:02:15.870
If you pick up a camera and take the picture or a snapshot of this frame of this physical memory, then

29
00:02:15.870 --> 00:02:22.710
what you will get is that snapshot of the data which is stored in this portion of the physical memory.

30
00:02:23.370 --> 00:02:26.170
That snapshot is called physical page.

31
00:02:27.540 --> 00:02:33.280
So obviously the size of the physical page is equal to the size of a frame of physical memory.

32
00:02:34.050 --> 00:02:40.080
So you can always think the physical memory frames as a container of physical pages.

33
00:02:41.010 --> 00:02:48.240
So the important takeaway from this slide is that a physical page is nothing, but it is a snapshot

34
00:02:48.510 --> 00:02:51.370
of one of the frame of the physical memory.

35
00:02:52.350 --> 00:02:55.420
So you can understand it better with the help of an analogy.

36
00:02:56.010 --> 00:03:03.330
So analog here is that suppose you have a container and inside that container you can keep a maximum

37
00:03:03.330 --> 00:03:05.820
of three apples, right?

38
00:03:06.930 --> 00:03:11.160
And your target is that you have to carry nine apples from one place to another.

39
00:03:11.880 --> 00:03:12.870
So what will you do?

40
00:03:13.380 --> 00:03:17.430
You will take a container, you will put three apples inside that container.

41
00:03:17.610 --> 00:03:23.220
You will then transport those three apples from your current position to new position.

42
00:03:23.580 --> 00:03:29.730
You will come back with the empty container because you have taken out those three apples at your destination

43
00:03:29.730 --> 00:03:30.400
spot.

44
00:03:30.750 --> 00:03:38.460
Again, we will place the next three apples in the container and again, transport those three apples

45
00:03:38.700 --> 00:03:40.160
to your new location.

46
00:03:40.350 --> 00:03:45.240
And again, you will come back with an empty container and you will repeat this exercise.

47
00:03:46.730 --> 00:03:52.940
So in this analogy, your container is like a main mammary, which has maximum of to restore the power

48
00:03:52.940 --> 00:04:00.440
20 frames, whereas a number of physical pages existing in the system is not limited by memory size.

49
00:04:02.000 --> 00:04:08.150
You can have extremely, very large number of physical pages and we will see in the next slide that

50
00:04:08.990 --> 00:04:14.230
only to restore the power to the physical pages can be capped in the main memory at maximum.

51
00:04:14.540 --> 00:04:18.100
The rest of the physical pages have to reside on a disk.

