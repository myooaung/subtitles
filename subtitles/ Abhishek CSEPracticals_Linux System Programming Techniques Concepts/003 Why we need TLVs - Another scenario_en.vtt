WEBVTT
1
00:00:05.580 --> 00:00:12.160
So, guys, going forward, let us see the same problem due to another reason.

2
00:00:14.100 --> 00:00:21.670
So let's say machine is software is upgraded such that it introduces a new member and the structure.

3
00:00:23.250 --> 00:00:30.480
So here, let us say that the software that is running on the machine A has been upgraded.

4
00:00:30.660 --> 00:00:33.360
That is a new member.

5
00:00:33.370 --> 00:00:37.320
Our new data structures are new fields have been introduced.

6
00:00:37.320 --> 00:00:44.640
And the message that was being generated by the machine A SO to simulate the software upgradation on

7
00:00:44.640 --> 00:00:51.840
machine A, let us add two additional members in the structure text message.

8
00:00:53.240 --> 00:00:53.610
Right.

9
00:00:54.020 --> 00:01:01.670
So this is equivalent to like the lottery is being manufactured by some company, let's say the company

10
00:01:01.670 --> 00:01:10.520
name is Cisco and Cisco Engineers, or the Cisco company has invented some new technology as a result

11
00:01:10.520 --> 00:01:12.910
of which they need to upgrade their software.

12
00:01:14.060 --> 00:01:21.110
So software upgradation means that certain data structures or functionality of the software is enhanced.

13
00:01:22.010 --> 00:01:25.940
So let us add two additional fields in the existing structure.

14
00:01:26.360 --> 00:01:32.390
Text message, which is simulating like software has been upgraded on a.

15
00:01:34.420 --> 00:01:42.730
Whereas the B and C are manufactured by some other companies, let's say Juniper or Brocade.

16
00:01:44.760 --> 00:01:53.190
And the Protocol B, which they are running, is still the same, that is they have not upgraded their

17
00:01:53.190 --> 00:01:56.930
software and they are running the older version of software.

18
00:01:58.230 --> 00:02:07.680
Now, the older format of the message, that is when the software running on the machine was not upgraded,

19
00:02:07.680 --> 00:02:09.910
then the message slipped out of a structure.

20
00:02:09.910 --> 00:02:11.930
Text message was something like this.

21
00:02:13.260 --> 00:02:13.700
Right.

22
00:02:15.270 --> 00:02:21.840
And when the software is upgraded on the machine, a so let's call that particular message as a dot

23
00:02:21.840 --> 00:02:22.200
one.

24
00:02:23.460 --> 00:02:32.250
And you can see that two additional fields have been inserted in the message, so the message lay out

25
00:02:33.030 --> 00:02:38.490
that is generated by the machine when placed on the wire, looks like this.

26
00:02:40.510 --> 00:02:40.950
Right.

27
00:02:44.530 --> 00:02:49.450
So you can see that the two additional fields are actually Mac addresses of the interfaces.

28
00:02:50.660 --> 00:02:53.360
And Mac addresses are six byte fields.

29
00:02:56.020 --> 00:03:04.240
So so to six bye, it feels that is Mac addresses have been added to the message X message and now the

30
00:03:04.240 --> 00:03:08.740
machine generates a message, a not one instead of message A.

31
00:03:10.450 --> 00:03:10.860
Right.

32
00:03:12.830 --> 00:03:20.540
So the machine is generating the masses, not one, whereas Machine B and C still generates the older

33
00:03:20.540 --> 00:03:25.580
version of the message because the software on machine B and C have not been upgraded.

34
00:03:26.210 --> 00:03:26.540
Right.

35
00:03:27.020 --> 00:03:33.170
So what will happen when the machine B and C receives the new message that is generated by the machine?

36
00:03:33.170 --> 00:03:37.940
E will be able to pass the message and read the content of the message.

37
00:03:38.690 --> 00:03:40.490
The answer is no.

38
00:03:41.330 --> 00:03:48.290
So Machine B and C when receives the new message A one generated by the machine E, they will try to

39
00:03:48.290 --> 00:03:53.070
read the message according to their own definition of text message.

40
00:03:53.510 --> 00:03:55.040
And what is their own definition?

41
00:03:55.070 --> 00:04:02.780
The definition is this one that is Machine B and C are not even aware that the message has to be that

42
00:04:02.780 --> 00:04:05.030
the message has two additional fields now.

43
00:04:06.260 --> 00:04:14.000
So they will typecast the message into text message format and they will try to read it right.

44
00:04:14.400 --> 00:04:17.290
So they will end up in reading the garbage.

45
00:04:17.300 --> 00:04:22.720
That is, they will end up in reading the message and the wrong way.

46
00:04:22.940 --> 00:04:26.660
And this is called data corruption on machine B and C.

47
00:04:27.610 --> 00:04:34.960
So what will happen, the protocol functionality will fail between machine A and machine B and C.

48
00:04:36.610 --> 00:04:37.010
Right.

49
00:04:37.810 --> 00:04:46.180
So remember, networking routing protocols needs to work by exchanging messages, and when exchange

50
00:04:46.180 --> 00:04:51.430
of the messages between the machines deployed in the network fails, then the entire routing protocol

51
00:04:51.430 --> 00:04:51.960
fails.

52
00:04:53.290 --> 00:04:55.380
So you can see there are so many problems.

53
00:04:55.390 --> 00:05:01.810
The window manufacturer has invented new patented technology, but he cannot upgrade his software with

54
00:05:01.810 --> 00:05:08.400
the new technology because other machines in the network won't work with his new version of software.

55
00:05:08.950 --> 00:05:10.770
So competitors will be happy.

56
00:05:11.080 --> 00:05:11.440
Right.

57
00:05:11.740 --> 00:05:19.030
And this is a very funny thing that you are able to invent a new technology and you are in a position

58
00:05:19.030 --> 00:05:21.480
to capture more business and more market.

59
00:05:21.850 --> 00:05:26.080
But this problem is not allowing you to upgrade your software.

60
00:05:26.410 --> 00:05:30.700
So this is really something very funny and it should really not happen.

61
00:05:31.930 --> 00:05:38.980
So networking is a field where various network equipment's being manufactured by various vendors need

62
00:05:38.980 --> 00:05:45.730
to work in complete cooperation and harmony with each other for the network protocol to work.

63
00:05:47.200 --> 00:05:52.720
So machines need to comply with each other for the network functionality to work correctly.

64
00:05:53.260 --> 00:06:00.640
Yet at the same time, network vendors should be free to innovate, upgrade and update their software

65
00:06:00.940 --> 00:06:06.880
without breaking the existing compliance with the other machines deployed in the network.

66
00:06:08.440 --> 00:06:13.200
So the concept of pelvis solves these problems very easily.

67
00:06:13.810 --> 00:06:16.300
So let's discuss the deal with now.

