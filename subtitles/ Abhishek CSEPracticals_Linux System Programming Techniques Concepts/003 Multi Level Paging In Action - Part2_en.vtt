WEBVTT
1
00:00:06.040 --> 00:00:13.360
Now, let us see that physical address, the following Botterill address map Stroope so suppose the

2
00:00:13.360 --> 00:00:19.090
caption reads the following which will address now the first two weeks of this virtual address is used

3
00:00:19.090 --> 00:00:21.710
as an indexing to the top level page table.

4
00:00:22.720 --> 00:00:24.610
So one zero corresponds to two.

5
00:00:25.090 --> 00:00:28.030
It means the second entry of the space table is hit.

6
00:00:29.110 --> 00:00:30.810
Now here you have a physical address.

7
00:00:30.820 --> 00:00:31.500
Twenty four.

8
00:00:32.259 --> 00:00:39.420
It means that we need to reference our next level best table, which is loaded at physical at restaurants

9
00:00:39.430 --> 00:00:40.550
four in the main memory.

10
00:00:42.220 --> 00:00:48.310
So this is table that is P1 three is located in frame number six of physical memory.

11
00:00:49.450 --> 00:00:58.780
Now, the next bit is again, two, it means that second index entry of the space table will hit and

12
00:00:58.780 --> 00:01:02.950
the second level peace table is located at physical address trending.

13
00:01:03.850 --> 00:01:07.730
So now we have arrived at Penn State will be two, three.

14
00:01:08.680 --> 00:01:15.020
Now, the next set of Bluebird's in this virtual atlas is one one, which corresponds to three.

15
00:01:15.700 --> 00:01:21.300
So the entry corresponding to index number three will be hit and Penn State will be to the three.

16
00:01:22.210 --> 00:01:28.650
And this is the final level of base table that for this eleven represents the frame number.

17
00:01:29.680 --> 00:01:34.250
So we have mapped to frame number 11 in the main memory so far.

18
00:01:35.410 --> 00:01:43.600
Now, the last two weeks of this virtual address is an offset and this offset corresponds to one, therefore

19
00:01:43.600 --> 00:01:47.290
adding one to the starting physical address of frame eleven.

20
00:01:47.540 --> 00:01:49.900
We get the physical atlas forty five.

21
00:01:50.710 --> 00:01:55.090
It means that this virtual address maps to the physical atlas.

22
00:01:55.090 --> 00:01:57.070
Forty five in physical memory.

23
00:01:57.970 --> 00:02:01.550
So you can see that multi-level purging is quite easy.

24
00:02:03.040 --> 00:02:08.289
In fact, you should practice numerical example based on multilevel paging.

25
00:02:09.130 --> 00:02:14.350
You can find certain practice questions and assignment section of this lecture.

26
00:02:16.580 --> 00:02:23.470
You can also see that various entries in this piece table are actually null, for example, in pairs.

27
00:02:23.660 --> 00:02:28.610
What we went to corresponding to the index, number one, the entry is null.

28
00:02:29.810 --> 00:02:37.520
It simply means that there exists no second level page table corresponding to this entry in page number

29
00:02:37.730 --> 00:02:38.510
one or two.

30
00:02:39.980 --> 00:02:46.550
So now let us do the comparison between multilevel paging scheme and a single level paging scheme.

31
00:02:47.990 --> 00:02:54.410
Now you can see that if this configuration used single level paging scheme, then what would have been

32
00:02:54.410 --> 00:02:56.060
the size of page table?

33
00:02:56.570 --> 00:03:02.630
We know the size of the peace table is equal to the peace table and to size and the number of virtual

34
00:03:02.630 --> 00:03:04.270
pages of a process.

35
00:03:05.300 --> 00:03:10.640
So far, a single level painting scheme the size of the piece tables would have been sixty four bytes.

36
00:03:11.630 --> 00:03:18.290
Now you already know how to compute this, whereas in case of multilevel paging scheme, the size of

37
00:03:18.290 --> 00:03:23.540
the peace table is always fixed and constant and it is equal to the frame size.

38
00:03:24.050 --> 00:03:29.530
So that appears stable, can be completely loaded in exactly one frame of the main memory.

39
00:03:30.230 --> 00:03:36.860
Therefore, the size of the table will going to be four bytes because the size of the frame as per our

40
00:03:36.860 --> 00:03:38.570
configuration is four bytes.

41
00:03:40.740 --> 00:03:45.930
In single level trading scheme, each process has exactly one page table.

42
00:03:46.620 --> 00:03:51.420
Right, but this doesn't hold good in case of multilevel trading scheme.

43
00:03:52.260 --> 00:04:00.990
No stable part process in our example can be maximum of sixty five per process here.

44
00:04:01.020 --> 00:04:04.980
The additional one is because of top level page table.

45
00:04:07.060 --> 00:04:14.350
So you can see in the previous slide, if there were normal values in the peace table and trees, and

46
00:04:14.350 --> 00:04:20.680
let us suppose that each peace table entry points to the peace table at the next level.

47
00:04:20.980 --> 00:04:25.840
So the maximum number of peace tables would have been sixty five, right.

48
00:04:27.410 --> 00:04:34.120
Number of tables at second level would have been folded into four and no page tables at first label

49
00:04:34.120 --> 00:04:37.990
is four and then we have one top level page.

50
00:04:38.590 --> 00:04:47.200
So the maximum number of pages, tables that a process can use is sixty five now coming to the memory

51
00:04:47.200 --> 00:04:50.910
differences in single level page scheme.

52
00:04:51.220 --> 00:04:57.460
But what that does is map to the physical address by using one memory reference by memory difference,

53
00:04:57.460 --> 00:05:04.210
which means that how many times we need to look up into a page table since in single level in the scheme

54
00:05:04.210 --> 00:05:05.920
we have only one page table.

55
00:05:06.160 --> 00:05:13.510
Therefore we need to look up only one time in a given page table in order to locate a frame number of

56
00:05:13.510 --> 00:05:14.320
uninterest.

57
00:05:15.640 --> 00:05:23.320
Whereas in our example of multi-level paging scheme, we have three levels of pages and hence we need

58
00:05:23.320 --> 00:05:31.360
to look up into page tables three times in order to map a given virtual address to physical address.

59
00:05:32.370 --> 00:05:38.640
So it was for this reason that multilabel page in the scheme performs as low as compared to single level

60
00:05:38.640 --> 00:05:39.480
trading scheme.

61
00:05:41.460 --> 00:05:49.280
And we have already illustrated that how far small processors, most of the peace table is empty, right.

62
00:05:49.800 --> 00:05:58.650
But in the multilevel trading scheme, we do not even create peace tables when there is no need to recreate

63
00:05:58.650 --> 00:06:00.930
and delete peace tables on demand.

64
00:06:02.100 --> 00:06:08.810
For example, in our multilabel paging scheme for all the virtual addresses which belongs to this sect.

65
00:06:09.400 --> 00:06:12.080
Now, here, acts represent don't care.

66
00:06:12.450 --> 00:06:15.320
It means that it could be one or it could be zero.

67
00:06:16.680 --> 00:06:23.580
So for all the virtual addresses which belongs to this family or this said, there are no peace table

68
00:06:23.580 --> 00:06:28.260
created for mapping virtual address to a physical address for the strange.

69
00:06:29.570 --> 00:06:36.290
Similarly, another example of what will address space, which required creation of nopales table is

70
00:06:36.290 --> 00:06:37.720
the following which will address.

71
00:06:38.450 --> 00:06:44.000
So let us see how this works, will address, do not require us to create peace tables.

72
00:06:44.630 --> 00:06:49.250
So the return address is zero zero one, followed by all access.

73
00:06:49.820 --> 00:06:55.360
So I will address as zero zero one followed by a five times don't care.

74
00:06:56.660 --> 00:07:00.250
So let us see this virtual address mapping in our example.

75
00:07:00.950 --> 00:07:08.420
So we have virtual address zero zero one and five times X right now.

76
00:07:08.420 --> 00:07:11.930
The first two bits of this virtual address maps to the end.

77
00:07:11.930 --> 00:07:22.340
Exito, which take us to the next page tab will be one dot one, not the next two bits is one x one

78
00:07:22.340 --> 00:07:25.160
X corresponds to two as well as three.

79
00:07:25.820 --> 00:07:32.350
If X value is zero, then it means two and if X value is one, then it means three.

80
00:07:32.810 --> 00:07:36.590
Now in both situations there is no next level peace table.

81
00:07:38.080 --> 00:07:45.220
So it means that there is no need to create next level peace table if the process has not used what

82
00:07:45.310 --> 00:07:49.390
that does to space, which belongs to this set of virtual addresses.

83
00:07:51.180 --> 00:07:56.620
So multi-level pitching scheme also solves the problem of hominess stables.

84
00:07:57.240 --> 00:08:03.510
We don't have to create unnecessary beds, tables or peace table entries corresponding to virtual addresses,

85
00:08:03.510 --> 00:08:05.800
which is not being used by a process.

86
00:08:06.480 --> 00:08:12.250
Now, you must do various numerical examples that are given in the assignment section of this lecture.

87
00:08:13.020 --> 00:08:17.420
There are many new medicals which are often asked based on multilevel paging.

88
00:08:18.090 --> 00:08:24.870
In fact, doing assignments on multi-level paging Will will give you better insight and understanding

89
00:08:25.110 --> 00:08:27.060
into multilevel paging scheme.

