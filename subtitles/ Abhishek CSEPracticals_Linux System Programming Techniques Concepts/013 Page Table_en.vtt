WEBVTT
1
00:00:05.390 --> 00:00:12.020
So, guys, now next, let us discuss what is peace table, so peace table is a data structure which

2
00:00:12.020 --> 00:00:17.150
is maintained by operating system for every process that is running in the system.

3
00:00:17.690 --> 00:00:26.820
Remember, peace table is for every process that does every process has its own private table based

4
00:00:26.820 --> 00:00:34.460
table is used to map the virtual address of process, which will address the space to our physical address

5
00:00:34.460 --> 00:00:35.140
in RAM.

6
00:00:36.080 --> 00:00:43.540
So let us see the contents of page table and how does it help to map the virtual address in a process

7
00:00:43.550 --> 00:00:47.310
which will address the space to our physical address offramp.

8
00:00:48.140 --> 00:00:53.200
So let us suppose that following represents the virtual memory of some particular process.

9
00:00:53.960 --> 00:01:02.090
Let us say that this virtual memory of a process is fragmented into five virtual pages, and the diagram

10
00:01:02.090 --> 00:01:04.940
on the right hand side represents random access memory.

11
00:01:04.940 --> 00:01:10.340
That is physical memory, which is a split it up into seven frames.

12
00:01:12.000 --> 00:01:18.120
So this is a physical memory, and we already know that physical memory is a noncontiguous memory,

13
00:01:19.500 --> 00:01:28.110
noncontiguous here means that physical pages of a process which are contiguous need not be present in

14
00:01:28.110 --> 00:01:30.770
Adderson frames in this main memory.

15
00:01:31.260 --> 00:01:38.640
So you can see that the physical page p0 is present in frame F.T. and physical page P1 is present in

16
00:01:38.640 --> 00:01:43.950
frame FIP and frame F3 and F5 are not adjusted frames.

17
00:01:44.490 --> 00:01:51.480
It is for this reason that physical memory is called noncontiguous memory, whereas virtual memory is

18
00:01:51.480 --> 00:01:58.080
called contiguous memory, because virtual pages in this virtual memory has to be strictly laid down

19
00:01:58.080 --> 00:01:59.460
in ascending order.

20
00:02:00.750 --> 00:02:01.980
Now let us see that.

21
00:02:01.980 --> 00:02:03.830
Where does the page table fit?

22
00:02:04.410 --> 00:02:08.120
So you can see that table is like a marriage maker.

23
00:02:08.130 --> 00:02:15.450
Between virtual memory of a process and the physical memory supposed to be contains three columns.

24
00:02:15.900 --> 00:02:19.380
The first column is the virtual page number of a process.

25
00:02:20.010 --> 00:02:26.070
The second column is the corresponding physical page number, which this virtual page number maps,

26
00:02:26.640 --> 00:02:28.800
and the third column is the frame number.

27
00:02:29.370 --> 00:02:31.950
So in this example, the virtual page, No.

28
00:02:31.950 --> 00:02:36.050
Zero maps to the physical page, number zero of a process.

29
00:02:36.600 --> 00:02:41.520
Similarly, Whelchel page number one maps to the physical page number one and so on.

30
00:02:42.490 --> 00:02:47.840
So in normal scenario, the virtual page number is always equal to the physical space number.

31
00:02:48.580 --> 00:02:54.790
We will see later that in what's an annual ritual, page number may not be equal to physical page number

32
00:02:55.300 --> 00:02:56.380
in a stable.

33
00:02:58.360 --> 00:03:05.260
And the third column is the frame, no frame, no means the frame number of a main memory in which this

34
00:03:05.260 --> 00:03:06.560
physical page is loaded.

35
00:03:07.060 --> 00:03:13.480
For example, physical page number one is present in frame number five of physical memory.

36
00:03:14.440 --> 00:03:14.710
Right.

37
00:03:15.220 --> 00:03:21.460
So you can see that physical space, number one, is present in frame number five of physical memory.

38
00:03:23.060 --> 00:03:28.040
Similarly, physical space number two is present in frame number one of physical memory.

39
00:03:29.180 --> 00:03:31.430
So here you can see that, right?

40
00:03:33.570 --> 00:03:40.080
So we use the best able to know that corresponding to a given virtual page, number of physical page

41
00:03:40.080 --> 00:03:43.650
number is loaded in which frame of a physical memory.

42
00:03:44.340 --> 00:03:51.150
For example, in order to do a look up into the space table, we will supply, which is number as a

43
00:03:51.270 --> 00:03:51.820
key.

44
00:03:52.500 --> 00:03:59.070
So suppose the key supplied is for so corresponding to the virtual page number for the physical piece

45
00:03:59.100 --> 00:04:06.300
number is four and the physical page number four has not been assigned any frame number in the physical

46
00:04:06.300 --> 00:04:06.750
memory.

47
00:04:07.350 --> 00:04:15.070
It simply means that physical page number four is present on a desk instead of main memory.

48
00:04:16.050 --> 00:04:23.640
And remember, we already know that corresponding to every virtual page of a process that exists, corresponding

49
00:04:23.640 --> 00:04:24.600
physical page.

50
00:04:25.800 --> 00:04:32.940
Now, I ask you one question, what are the number of rows in the page table, right?

51
00:04:33.330 --> 00:04:39.480
So the number of rows in the peace table must be equal to the number of pages in virtual memory of a

52
00:04:39.480 --> 00:04:45.800
precise number of virtual pages in a process where two letters, the space is to restore the Potente.

53
00:04:46.410 --> 00:04:53.340
So it means that number of entries in a peace table is equal to to restore the power 20 on a 32 bit

54
00:04:53.340 --> 00:04:54.390
operating systems.

55
00:04:56.330 --> 00:05:01.670
So no frills in a peace table is equal to number of pages in the process, which will address space.

56
00:05:03.130 --> 00:05:10.060
Right, and this makes sense because the key to the peace table is the first column, which is what

57
00:05:10.360 --> 00:05:15.970
is no right and the maximum, which is no asterisk to the 20 minus one.

58
00:05:16.870 --> 00:05:22.870
Now, let us take an example to illustrate how Atlas mapping from Virtual Atlas to Physical Atlas happens.

59
00:05:23.480 --> 00:05:31.510
I hope I'm able to explain that what is stable and how does space will help us to map a virtual page,

60
00:05:31.750 --> 00:05:32.830
a physical page?

61
00:05:33.040 --> 00:05:40.750
And how about space to help us to find out that a given physical page is located in which frame number

62
00:05:40.750 --> 00:05:41.870
of a physical memory.

63
00:05:42.400 --> 00:05:50.410
So from this table, you can immediately see that if I give you an input as virtual page no as three.

64
00:05:50.740 --> 00:05:57.430
So you should be able to see that virtual page number three maps to our physical page number three.

65
00:05:57.640 --> 00:06:03.060
And this physical piece number three is present in frame number two of a physical memory.

66
00:06:03.520 --> 00:06:09.250
So you should be able to read the meaning of a particular entry in a page table.

67
00:06:11.050 --> 00:06:16.690
Again, by default, virtual page number is always equal to the physical page number in a page table

68
00:06:16.990 --> 00:06:22.810
when we shall be discussing the advanced concepts such as shared memory are -- that.

69
00:06:22.810 --> 00:06:28.060
In this scenario, we will see that virtual space number may not be equal to the physical space number

70
00:06:28.060 --> 00:06:28.960
in the peace table.

