WEBVTT
1
00:00:05.360 --> 00:00:10.160
So, guys, now let us discuss something about a special pointer called Breakpoint.

2
00:00:10.610 --> 00:00:17.570
So Break is actually a special pointer, which is maintained by the operating system, part process.

3
00:00:17.990 --> 00:00:18.400
Right.

4
00:00:18.650 --> 00:00:22.130
And it points to the top of heap memory segment.

5
00:00:22.580 --> 00:00:28.130
So you can see in the diagram on the right hand side, the portion that is in white is the heap memory

6
00:00:28.130 --> 00:00:30.950
segment of the process that does the space.

7
00:00:31.580 --> 00:00:36.560
So you can see that this arrow represents the start of the heap memory segment.

8
00:00:37.040 --> 00:00:44.240
And we already know that as process claims more memory from the operating system, the heap memory segment

9
00:00:44.240 --> 00:00:51.920
of the process grows upwards right now, going by the definition of break pointer breakpoint.

10
00:00:51.920 --> 00:00:56.110
That is a pointer which is maintained by operating system, part process.

11
00:00:56.570 --> 00:01:03.260
So for one process, there will going to be one break pointer and break pointer points to the top of

12
00:01:03.260 --> 00:01:04.550
the heap memory segment.

13
00:01:04.970 --> 00:01:10.040
So you can see in this diagram that the big pointer will restore this address.

14
00:01:10.340 --> 00:01:13.600
That is the topmost address of the Heap memory segment.

15
00:01:14.120 --> 00:01:21.740
So breakpoint that points up to which memory is being used by the process and the memory which is above

16
00:01:21.740 --> 00:01:26.080
the break pointer is not a valid memory to be used by the process.

17
00:01:26.390 --> 00:01:26.720
Right.

18
00:01:27.080 --> 00:01:35.480
So any memory which is above the pointer is actually the memory which is unusable by the process breakpoint

19
00:01:35.480 --> 00:01:37.640
or moves towards higher address.

20
00:01:37.880 --> 00:01:44.090
Increasing the heat memory region as process claims more memory from the operating system.

21
00:01:44.840 --> 00:01:50.540
So I guess the big pointer reminds you of XP, right?

22
00:01:50.870 --> 00:01:57.730
So what E.S.P was to the stack memory is what Blak Pointer is to the Heat memory.

23
00:01:58.160 --> 00:02:04.600
So Breakpoint Pointer moves back towards Lobert address as process frees the memory.

24
00:02:04.820 --> 00:02:05.180
Right?

25
00:02:06.850 --> 00:02:12.910
So it is important to understand the concept of breakpoint there, because we will going to discuss

26
00:02:13.060 --> 00:02:20.410
the internal implementation of Mallock and free API and to understand the internal implementation,

27
00:02:20.590 --> 00:02:24.360
you must have an idea regarding how Breakpoint works.

