WEBVTT
1
00:00:06.310 --> 00:00:12.580
So, guys, now let us discuss the solution to reconcile dependency problem, so we had a source file

2
00:00:12.580 --> 00:00:21.150
ANC, so in the source file you need to write something which is called forward declaration of a structure.

3
00:00:22.060 --> 00:00:27.820
So the formal declaration simply means that type out the name of the structure as it is.

4
00:00:28.540 --> 00:00:32.080
So just type out the name of the structure, followed by semicolon.

5
00:00:32.619 --> 00:00:34.780
So this is called forward declaration.

6
00:00:35.050 --> 00:00:42.280
And forward declaration means that you are telling the compiler that there is some structure called

7
00:00:42.280 --> 00:00:49.170
a struct O.S.S. underscore T and this is structure definition will be defined in future.

8
00:00:49.690 --> 00:00:54.420
So compiler, please don't read it if it is used as a pointer.

9
00:00:54.820 --> 00:00:55.200
Right.

10
00:00:55.570 --> 00:00:57.750
And this is called forward declaration.

11
00:00:58.210 --> 00:00:58.520
Right.

12
00:00:58.780 --> 00:01:05.019
So by writing this line, you are actually telling the compiler that this structure definition will

13
00:01:05.019 --> 00:01:09.940
be encountered somewhere later in the source file if you encounter the.

14
00:01:11.350 --> 00:01:15.470
Point usage of this structure, please tolerate it.

15
00:01:15.880 --> 00:01:18.060
So now let us see what does it mean?

16
00:01:21.110 --> 00:01:29.360
So now you can see that I have changed this line from complete usage to pointer usage, that is the

17
00:01:29.360 --> 00:01:37.400
implied structure is now using the structure occupation as a pointer usage instead of complete usage.

18
00:01:38.120 --> 00:01:44.840
So now if the compiler compiles the source file from top to bottom, now, the compiler will be able

19
00:01:44.840 --> 00:01:50.030
to compile the definition of a structure and apply because now the compiler knows.

20
00:01:51.490 --> 00:01:57.670
The size of each member field of this structure, so the size of the name field will be 32 bites, the

21
00:01:57.670 --> 00:02:00.370
size of employee 80 field will be four bites.

22
00:02:00.610 --> 00:02:08.919
And as we know that the size of all the variables on the 32 bit machine is four bytes and on a 64 bit

23
00:02:08.919 --> 00:02:10.419
machine is eight bytes.

24
00:02:11.230 --> 00:02:18.040
So now you can see that the compiler knows the size of each member field of the structure employee and

25
00:02:18.040 --> 00:02:22.720
has the compiler will be able to compile the definition of this structure.

26
00:02:23.260 --> 00:02:30.580
Now, at this point of completion in the source file, the compiler has already seen the definition

27
00:02:30.580 --> 00:02:31.810
of structure implied.

28
00:02:32.380 --> 00:02:32.760
Right.

29
00:02:33.190 --> 00:02:40.300
So there is no problem with the complete usage of structure employee in the structure occupation and

30
00:02:40.300 --> 00:02:45.850
hence the compiler will be able to compile the structure definition of occupation structure.

31
00:02:46.850 --> 00:02:53.990
So you can see that we have broken the records of dependency by using the pointer usage instead of complete

32
00:02:53.990 --> 00:03:01.610
usage, and one additional thing that we need to do is to declare the forward declaration of the structure

33
00:03:02.180 --> 00:03:09.800
whose definition the compiler will not see before its usage while compiling the source file from top

34
00:03:09.800 --> 00:03:10.370
to bottom.

35
00:03:12.110 --> 00:03:17.720
So as a result, if you compile the source file, Edward S. now, it will compile.

36
00:03:18.980 --> 00:03:20.790
So now let us see the demonstration.

37
00:03:21.380 --> 00:03:27.410
So here you can see that on the right hand side, we had the same version of Old File, a ANC which

38
00:03:27.410 --> 00:03:30.400
was suffering from the problem of recursive dependency.

39
00:03:31.290 --> 00:03:37.380
So now let us make the chord changes, which we have just discussed so you can see that I have defined

40
00:03:37.380 --> 00:03:43.230
the forward declaration of the structure occupation and I have changed the usage of this structure from

41
00:03:43.230 --> 00:03:45.150
complete 2.0 usage.

42
00:03:46.710 --> 00:03:47.130
Right.

43
00:03:47.430 --> 00:03:53.190
And now I will compile this file and you can see that the file compiles.

44
00:03:54.560 --> 00:04:02.360
So this was recursive dependancy for you, please take care of that while designing your project, avoid

45
00:04:02.360 --> 00:04:08.050
designing your data structures in a way that introduces recursive dependency.

46
00:04:09.380 --> 00:04:16.399
And if your application design is such that that you cannot avoid the recursive dependency, then use

47
00:04:16.399 --> 00:04:22.310
the concept of forward declaration in order to get to the problem of recursive dependency.

