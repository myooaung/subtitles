WEBVTT
1
00:00:05.920 --> 00:00:07.380
So welcome back, guys.

2
00:00:07.780 --> 00:00:12.950
Now, in this module, we shall resume with the development of our inkless library.

3
00:00:13.390 --> 00:00:13.780
Right.

4
00:00:14.440 --> 00:00:21.070
So so far now we have a basic working, doubly linked list code in the form of high profile and source

5
00:00:21.070 --> 00:00:21.430
file.

6
00:00:22.150 --> 00:00:28.300
So now we will formally translate our list code into a linked list library.

7
00:00:29.560 --> 00:00:31.140
So what does a library?

8
00:00:31.180 --> 00:00:36.160
A library is nothing, but it is a collection of related object files.

9
00:00:36.430 --> 00:00:37.660
And what object files?

10
00:00:37.840 --> 00:00:41.200
Object files are the compile version of source files.

11
00:00:42.880 --> 00:00:44.410
So far, big libraries.

12
00:00:44.620 --> 00:00:50.630
It is very much possible that the library code expands across multiple source files like.

13
00:00:51.100 --> 00:00:56.680
So, for example, if you have a big library, that it might be possible that the library has many source

14
00:00:56.680 --> 00:00:57.150
files.

15
00:00:58.180 --> 00:01:02.950
So these multiple source files are compiled to create a corresponding object files.

16
00:01:03.280 --> 00:01:03.650
Right.

17
00:01:03.940 --> 00:01:10.960
So if you have one dot see-saw trial to dot seesaws while and three dot seesaws file and many other

18
00:01:10.960 --> 00:01:16.320
sorts, while these source files are compiled to create the corresponding object files.

19
00:01:17.140 --> 00:01:17.580
Right.

20
00:01:18.250 --> 00:01:22.210
So Object Files has an extension of all in the end.

21
00:01:24.670 --> 00:01:32.200
These object files then are bundled together to create one unit called a library, so you can see that

22
00:01:32.200 --> 00:01:38.480
all these object files are bundled together to create one unit, which we call it as library.

23
00:01:39.730 --> 00:01:47.010
So going forward, so far, we have added only two very basic function to our double-dealing list library.

24
00:01:47.590 --> 00:01:47.880
Right.

25
00:01:48.250 --> 00:01:49.570
And what are those functions?

26
00:01:51.190 --> 00:02:00.550
So if you take a look at DL dot s file, so here I have opened the file and we had added only two functions.

27
00:02:00.550 --> 00:02:04.720
That is get NewDeal and add data to JLL.

28
00:02:05.140 --> 00:02:10.360
So our linked list library supports only these two basic functions so far.

29
00:02:11.320 --> 00:02:18.520
So what we will going to do is that we will going to create a link this library by adding more functions

30
00:02:18.520 --> 00:02:22.100
to it so that our library will support more functionality.

31
00:02:23.530 --> 00:02:29.590
So we will add and implement the following functions, but we will add this function definition in a

32
00:02:29.590 --> 00:02:33.370
separate source file called DL Util Nazi.

33
00:02:33.790 --> 00:02:40.510
And the declaration of those functions will go in the same high profile that is DL and attach.

34
00:02:42.570 --> 00:02:49.560
So we are doing this for the sake that our library record at least spans across two source lines.

35
00:02:49.890 --> 00:02:54.750
It means that we will have to object files to be bundled together to create a library.

36
00:02:55.290 --> 00:02:55.660
Right.

37
00:02:56.160 --> 00:03:03.180
So we are just adding two more functions to our library, but we will add those two functions in a separate

38
00:03:03.180 --> 00:03:09.420
source file so that we will have at least two object files to be bundled together to create a library.

39
00:03:11.040 --> 00:03:17.150
So the functions that we will going to add are the following that does not remove data from the linked

40
00:03:17.280 --> 00:03:23.130
list by data pointer, so it is the name of the function and argument to this function is the pointer

41
00:03:23.130 --> 00:03:28.830
to your linked list and the data pointer, which you want to remove from the list.

42
00:03:29.910 --> 00:03:31.170
So what does function do?

43
00:03:31.170 --> 00:03:34.530
This function is exactly opposite to the function.

44
00:03:34.740 --> 00:03:40.500
Add data to the little function that is this function, right?

45
00:03:40.740 --> 00:03:46.800
So this function simply remove the node from the linked list, which points to the data which is parsed

46
00:03:46.800 --> 00:03:48.390
as an argument to this function.

47
00:03:49.110 --> 00:03:54.840
Similarly, the second function that you should add to the library is the function with checks, whether

48
00:03:54.850 --> 00:03:57.900
your list has any data in it or not.

49
00:03:58.990 --> 00:03:59.410
Right.

50
00:03:59.710 --> 00:04:06.460
And the third function that you should add to your library is train underscored the so this function

51
00:04:06.460 --> 00:04:10.270
does nothing, but it deletes all the notes from a linked list.

52
00:04:10.600 --> 00:04:17.170
But note that it simply deletes the load of a linked list, but a do not free the application data,

53
00:04:17.170 --> 00:04:20.500
which is held by those nodes of a link list.

54
00:04:22.550 --> 00:04:29.780
So basically, we have this deal dot file and we will going to add the declaration of these new functions

55
00:04:29.780 --> 00:04:32.260
to this profile, right.

56
00:04:34.010 --> 00:04:43.700
And we will create a new file called DRL Util Doxy, so I'm showing you the sample file that is Jallal

57
00:04:43.700 --> 00:04:44.680
Util Dorsey.

58
00:04:45.320 --> 00:04:50.160
And in this file we will going to provide the implementation of these three functions.

59
00:04:51.110 --> 00:04:57.380
So I expect you to provide the implementation of these three functions because this course assume that

60
00:04:57.380 --> 00:05:03.980
you are very much aware of the functioning of doubly linked list and you are very much capable to implement

61
00:05:03.980 --> 00:05:05.000
these three functions.

62
00:05:05.870 --> 00:05:11.210
So in the rest of the module, I assume that you have implemented all these three functions in your

63
00:05:11.900 --> 00:05:18.710
library, and I request you to thoroughly test the correctness of your functions by writing a sample

64
00:05:18.710 --> 00:05:24.680
application which will make use of your double-dealing list library and make use of these functions

65
00:05:25.220 --> 00:05:29.930
surpass the correctness of your library that the function that you implement are correct.

66
00:05:31.070 --> 00:05:38.850
So you can find the implementation of these functions in this part, that is library design, more functions.

67
00:05:39.200 --> 00:05:44.870
So this part contains the version of list code which have all these functions implemented.

68
00:05:45.860 --> 00:05:49.130
So you can refer to this court in case you need help.

