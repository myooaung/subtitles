WEBVTT
1
00:00:05.580 --> 00:00:07.010
So welcome back, guys.

2
00:00:07.440 --> 00:00:13.950
Now, in this lecture video, we will discuss that, how Beijing helps to solve the problem of external

3
00:00:13.950 --> 00:00:14.810
fragmentation.

4
00:00:16.020 --> 00:00:23.340
So we have already learned that same size of the physical memory is always choose an equal to the size

5
00:00:23.340 --> 00:00:24.480
of physical page.

6
00:00:25.110 --> 00:00:31.140
Or in other words, you can say that the size of the physical page has been chosen equal to the size

7
00:00:31.140 --> 00:00:32.940
of a frame of a physical memory.

8
00:00:34.320 --> 00:00:42.640
So on a 32 bit system built, the frame size and physical size has been chosen as four kilobytes.

9
00:00:43.650 --> 00:00:49.650
Now, there is a good reason that why frame size has been chosen equal to the size of a physical page

10
00:00:49.650 --> 00:00:50.550
of a process.

11
00:00:51.630 --> 00:00:56.430
Not that a physical page is always loaded at the boundary of a frame.

12
00:00:57.390 --> 00:01:02.940
Now, in this diagram, suppose this is a frame of a physical memory, right?

13
00:01:03.330 --> 00:01:06.210
And this block represents the physical page.

14
00:01:08.270 --> 00:01:14.630
Right, so you can see that the size of the frame is actually more than the size of a physical page.

15
00:01:16.350 --> 00:01:22.680
Now, if you load this physical page into this frame of the physical memory, it will look something

16
00:01:22.680 --> 00:01:23.430
like this.

17
00:01:24.930 --> 00:01:30.660
Now, in this example, the size of the physical page is not equal to the size of a frame of a physical

18
00:01:30.660 --> 00:01:31.110
memory.

19
00:01:31.830 --> 00:01:35.940
In fact, the frame size is more than the size of a physical page.

20
00:01:36.540 --> 00:01:42.660
Now, when this happens, you can see there is a small portion of the physical memory within a frame

21
00:01:42.930 --> 00:01:45.300
which is wasted and unusable.

22
00:01:46.980 --> 00:01:47.390
Right.

23
00:01:47.910 --> 00:01:55.920
So this problem is called the problem of external fragmentation and using frame size exactly equal to

24
00:01:55.920 --> 00:01:57.470
the size of a physical page.

25
00:01:57.690 --> 00:02:04.370
The problem of external fragmentation has been completely prevented by concept of paging.

26
00:02:05.430 --> 00:02:12.270
There will be no external fragmentation if the size of a frame is equal to the size of a physical page

27
00:02:12.450 --> 00:02:14.160
which is loaded into a frame.

