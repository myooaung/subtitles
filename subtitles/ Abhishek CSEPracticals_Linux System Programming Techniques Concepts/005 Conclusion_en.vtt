WEBVTT
1
00:00:06.900 --> 00:00:12.420
So, guys, now let us conclude on the big pointers, the production code, that is the code which you

2
00:00:12.420 --> 00:00:17.460
handle while working as a developer and the company, the production code base is huge.

3
00:00:17.470 --> 00:00:23.550
There are millions of lines of code across thousands of lines and hundreds of libraries are in use and

4
00:00:23.550 --> 00:00:26.250
tons of teams are working on them independently.

5
00:00:26.820 --> 00:00:27.240
Right.

6
00:00:27.480 --> 00:00:34.230
So opaque pointers ensure code isolation across components, while seamless integration is also ensured.

7
00:00:34.920 --> 00:00:39.480
Opaque library is like a black box to an external world, right?

8
00:00:39.670 --> 00:00:49.590
Application owners can use it through exposed public APIs, but application owners must not bother about

9
00:00:49.590 --> 00:00:52.440
its internal design and implementation.

10
00:00:53.010 --> 00:01:00.080
If public exposed API gives wrong result in application, seesaws file application developer can say

11
00:01:00.100 --> 00:01:05.880
there is something wrong with the library code and blame the team owning the library or maintenance

12
00:01:05.880 --> 00:01:11.630
development work so it takes less time to decide where does the bug lies?

13
00:01:11.820 --> 00:01:16.170
Is it either in the application tazi source file or in our linked list?

14
00:01:16.170 --> 00:01:23.400
Library library owning team can enhance the library functionality independent of applications using

15
00:01:23.400 --> 00:01:31.530
the library, independent of applications which are using library public APIs as long as public APIs

16
00:01:31.530 --> 00:01:34.020
in and out is not impacted.

17
00:01:34.320 --> 00:01:34.740
Right.

18
00:01:35.430 --> 00:01:42.240
So library public APIs is a sort of interface between library and the rest of the world, or as long

19
00:01:42.240 --> 00:01:48.690
as the input parameters supplied to these public APIs as well as the output parameters obtained from

20
00:01:48.690 --> 00:01:51.500
this public APIs are not changed.

21
00:01:52.080 --> 00:01:59.430
The library owning team can enhance the internal functionality of the library independent of the applications

22
00:01:59.430 --> 00:02:05.870
which are using them opaque pointers and showed that you are a user of library.

23
00:02:06.030 --> 00:02:11.850
You are not supposed to be into the internal design and structure of the library, right?

24
00:02:12.120 --> 00:02:17.760
Just use the library through public APIs, which has been provided by the library itself.

25
00:02:18.510 --> 00:02:23.300
So the way you write a code shows your maturity or experience as a programmer.

26
00:02:23.460 --> 00:02:30.780
So from now on, whatever library you develop, always try to make your library as a black box using

27
00:02:30.780 --> 00:02:32.850
concept of opaque pointers.

