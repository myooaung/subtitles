WEBVTT
1
00:00:05.280 --> 00:00:06.600
So what is the relevance of the.

2
00:00:07.590 --> 00:00:13.260
So one of the most common programming concepts that you would come across as the timeless, timeless

3
00:00:13.260 --> 00:00:20.040
houts and scheduling the events in future are periodically timeless, are extensively used in many domain

4
00:00:20.040 --> 00:00:22.740
of computer science, especially in networking.

5
00:00:23.010 --> 00:00:27.070
Networking just do not exist without timers as simple as that.

6
00:00:27.570 --> 00:00:33.750
For example, if you have studied DSP protocol and TCP uses various types of tumors, for example,

7
00:00:33.750 --> 00:00:40.710
time or for scheduling an acknowledgement packet all timer to run its backoff algorithm, then in real

8
00:00:40.710 --> 00:00:45.990
world applications you must have got OTP on your mobile phone when you do certain transactions on the

9
00:00:45.990 --> 00:00:50.270
website so that OTP is linked to a time out time period.

10
00:00:50.280 --> 00:00:53.130
If you do not use that OTP, then do not work.

11
00:00:53.820 --> 00:00:57.820
If you do not use the OTP within that time bound and it expires.

12
00:00:57.840 --> 00:00:58.220
Right.

13
00:00:58.770 --> 00:01:04.500
Similarly, if you login to certain websites and there is a timer running behind the scenes and if you

14
00:01:04.500 --> 00:01:08.010
do not show any activity activity, then the session log out.

15
00:01:08.430 --> 00:01:13.740
Similarly, as I said that in networking, it is a very common scenario that the network application

16
00:01:13.760 --> 00:01:18.030
send out periodic packets to some other remote machines in the network.

17
00:01:18.480 --> 00:01:24.970
Various networking protocols has the requirement to send out periodic backups for their implementation.

18
00:01:25.380 --> 00:01:30.870
So not working as a complete domain would have not existed had there been no timers done.

19
00:01:30.870 --> 00:01:34.200
Time outs are also used for deviling or scheduling the computation.

20
00:01:34.530 --> 00:01:41.550
So in this section we will going to study Linux and will POSIX compliant Taimur APIs and on the top

21
00:01:41.550 --> 00:01:46.290
of those APIs we will going to build our own custom more controllable Tiber's.

22
00:01:46.290 --> 00:01:46.710
Right?

23
00:01:47.310 --> 00:01:53.010
If we are dealing with the timer based applications as a developer or programmer, you must have a steering

24
00:01:53.010 --> 00:01:54.830
wheel in your hand.

25
00:01:54.840 --> 00:02:00.720
For example, you must be able to start the timer past the timer, assume the timer, kill the timer

26
00:02:00.960 --> 00:02:03.090
or reschedule the timer at your will.

27
00:02:03.330 --> 00:02:03.750
Right.

28
00:02:04.140 --> 00:02:07.830
So we will going to see how to develop all those APIs and concepts.

