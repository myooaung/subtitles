WEBVTT
1
00:00:05.800 --> 00:00:12.890
So, guys, now let us discuss in totality that how you actually access physical memory.

2
00:00:13.810 --> 00:00:21.470
So in this slide, you can see that there are three devices, the CPU, amamou and the physical memory.

3
00:00:22.420 --> 00:00:27.790
Now, we have already discussed that CPU generates logical addresses, logical.

4
00:00:27.790 --> 00:00:29.290
That just means virtual address.

5
00:00:29.830 --> 00:00:33.970
So let's say, for example, this logical address is one hundred and fifty six.

6
00:00:34.570 --> 00:00:34.930
Right.

7
00:00:35.410 --> 00:00:39.320
We have just chosen a random number which represent logical address.

8
00:00:40.030 --> 00:00:46.520
Now, Amamou is a hardware unit which converts each logical address into physical address.

9
00:00:47.140 --> 00:00:51.450
So let us say in our example, Amamou converts the logical address.

10
00:00:51.460 --> 00:00:54.200
One hundred and fifty six to fifty six.

11
00:00:54.760 --> 00:00:56.950
So 56 is a physical address.

12
00:00:57.580 --> 00:01:03.490
Now, what is the science behind converting logical address to physical address that we will going to

13
00:01:03.490 --> 00:01:07.330
discuss later when we will be discussing the concept of paging?

14
00:01:09.530 --> 00:01:15.390
For now, just understand that Amamou has converted logical address to physical address.

15
00:01:15.920 --> 00:01:21.650
We have arbitrarily chosen this value of 56, which represents a physical address.

16
00:01:23.190 --> 00:01:28.690
Now, there is an address, Busse, between Amamou and physical memory.

17
00:01:29.190 --> 00:01:36.330
This address best connect the amamou and physical memory using 32 metallic wires.

18
00:01:37.530 --> 00:01:45.630
Why, there are 32 metallic wires because we are discussing computer architecture for a 32 bit systems,

19
00:01:45.930 --> 00:01:46.350
right?

20
00:01:46.710 --> 00:01:54.990
So for the 32 bit system, the Atlas bus will have 32 bit lines or 32 metallic wires.

21
00:01:56.220 --> 00:01:59.790
Now, we have assumed that the physical address is fifty six.

22
00:02:01.140 --> 00:02:11.009
The voltage levels on these metallic wires of an adverse bus is set such that physical at 56 is represented

23
00:02:11.009 --> 00:02:17.930
by the equivalent binary encoding derived from the voltage levels on these 32 bit lines.

24
00:02:18.420 --> 00:02:21.630
So you can see that this represents 56.

25
00:02:22.110 --> 00:02:26.940
Now, 56 is a memory location of a in a physical memory.

26
00:02:27.690 --> 00:02:35.670
So whatever value we set on this 32 bit address, both corresponding to that memory location in a physical

27
00:02:35.670 --> 00:02:41.360
memory, is accessed because in this example, the physical address is fifty six.

28
00:02:41.820 --> 00:02:49.260
Therefore, the address bus will map to a memory location whose physical address is fifty six in physical

29
00:02:49.260 --> 00:02:49.720
memory.

30
00:02:50.460 --> 00:02:57.660
Now, once a particular memory location in a physical memory is identified C.P.U, then issues read

31
00:02:57.660 --> 00:03:02.020
or write operations to be performed on both physical memory locations.

32
00:03:02.520 --> 00:03:09.720
Now, until this point, CPU has identified the memory location in the physical memory on which it needs

33
00:03:09.720 --> 00:03:12.210
to perform, read or right operation.

34
00:03:14.220 --> 00:03:22.080
Now, to facilitate data transfer between CPU and physical memory, there is another buzz called data

35
00:03:22.080 --> 00:03:22.590
buzz.

36
00:03:24.040 --> 00:03:31.380
So you can see that in this database, there are four buses, that is zero, bus one, bus two and bus

37
00:03:31.420 --> 00:03:35.950
three, each bus intones, carry it metallic wires.

38
00:03:36.440 --> 00:03:41.850
It means that each bus carrying eight electrical signals corresponding to a bit.

39
00:03:42.610 --> 00:03:44.700
It means that each bus ride.

40
00:03:44.710 --> 00:03:45.400
All right.

41
00:03:45.400 --> 00:03:48.610
One bit of data from physical memory, right.

42
00:03:48.910 --> 00:03:56.620
Since there are four buses, therefore, database can carry, therefore, database can carry four bites

43
00:03:56.620 --> 00:04:02.290
of data from CPU main memory as well as from main memory to CPU.

44
00:04:04.050 --> 00:04:10.710
So this one also carry it metallic wires, bus to also carry it, metallic wires and bus three also

45
00:04:10.710 --> 00:04:15.590
carry eight metallic wires, so a total of 32 metallic wires.

46
00:04:16.050 --> 00:04:24.000
So on a 32 bit system the size of Atlus bus is 32 bit lines and the size of the bus is, again, 32.

47
00:04:24.010 --> 00:04:31.950
But Dateline's so you can see that you can perform, read and write operations on a physical memory

48
00:04:32.490 --> 00:04:37.950
of four bytes in total in one CPU clock cycle on a physical memory.

49
00:04:39.210 --> 00:04:47.280
So you can perform, read or write for bytes of data in one CPU cycle because the size of that database

50
00:04:47.280 --> 00:04:48.450
is four bytes.

51
00:04:49.260 --> 00:04:56.160
So you can see that in this example, CPU identified the memory location number fifty six and the physical

52
00:04:56.160 --> 00:04:59.730
memory and CPU wants to read.

53
00:04:59.820 --> 00:05:04.800
The value was present at address fifty six and at fifty seven.

54
00:05:05.100 --> 00:05:09.240
Let's say for example CPU wants to read to bytes of data.

55
00:05:09.720 --> 00:05:16.560
So whatever data is present in these memory locations, that is on memory location number 56 and 57

56
00:05:16.830 --> 00:05:18.180
in physical memory.

57
00:05:18.930 --> 00:05:23.340
The same data is then pulled on these database wires.

58
00:05:24.030 --> 00:05:24.500
Right.

59
00:05:25.290 --> 00:05:32.280
So you can see that since the CPU was interested in reading the data at memory location 56 and 57,

60
00:05:32.550 --> 00:05:39.690
therefore, whatever data was present at memory, location 56 is set on the metallic wires of plus one

61
00:05:39.690 --> 00:05:40.680
of the database.

62
00:05:41.250 --> 00:05:49.350
And similarly, the data of the content present at memory location 57 is set on metalic Vires or bus

63
00:05:49.350 --> 00:05:51.220
number two of database.

64
00:05:51.990 --> 00:05:58.040
So from this diagram, you can understand that CPU can read maximum of four bytes of data from the main

65
00:05:58.110 --> 00:06:01.080
memory in one CPU clock cycle.

66
00:06:02.290 --> 00:06:07.120
So going by that suppose in your program, you write the following statement.

67
00:06:07.750 --> 00:06:11.770
Now let us assume that long data type is of size.

68
00:06:11.770 --> 00:06:12.660
It bites.

69
00:06:13.570 --> 00:06:17.260
So it means that we are trying to copy it.

70
00:06:17.260 --> 00:06:21.820
Bytes of data into a memory location identified by variable one.

71
00:06:23.020 --> 00:06:29.550
Now, on a 32 bit system, you can perform, read and write operation of four bytes in one sweep clock

72
00:06:29.560 --> 00:06:30.070
cycle.

73
00:06:30.640 --> 00:06:39.370
Therefore, in order to copy it bytes of data into this memory location, CPU will have to perform right

74
00:06:39.370 --> 00:06:42.000
operation and to CPU clock cycles.

75
00:06:42.670 --> 00:06:43.080
Right.

76
00:06:45.590 --> 00:06:52.760
So CPR will take two CPR cycles to store the data in a physical memory on a 32 bit system.

77
00:06:52.970 --> 00:07:01.250
And if your system was 64 bit operating system, then CPR would have taken one CPR clock cycle in order

78
00:07:01.250 --> 00:07:02.770
to perform the same operation.

79
00:07:04.100 --> 00:07:11.460
So that was actually defines how many bytes of data CPU can read or write into the physical memory.

80
00:07:12.110 --> 00:07:19.020
So for a 32 bit system, it is four bytes and for a 64 bit system it is Ed Bytes.

81
00:07:20.060 --> 00:07:26.810
So this is how address, books and database collaborate together to facilitate communication or data

82
00:07:26.810 --> 00:07:29.960
exchange between CPU and physical memory.

83
00:07:30.710 --> 00:07:32.660
Now, I will ask you one question.

84
00:07:33.980 --> 00:07:38.000
What is the maximum address the address book can carry?

85
00:07:39.080 --> 00:07:41.680
Now, Atlas Bus has 32 bit lines.

86
00:07:42.170 --> 00:07:45.830
So on each line, even if you set the high voltage level.

87
00:07:46.100 --> 00:07:53.930
So the maximum value or memory location that does bus can carry is to restore the power to minus one.

88
00:07:55.960 --> 00:08:03.670
It means that you can access the bite number in the physical memory whose address is maximum of tourists

89
00:08:03.670 --> 00:08:05.410
to the power 32 minus one.

90
00:08:07.710 --> 00:08:14.730
Now, we already know that to restore the power to do is equal to four gigabytes, so it simply means

91
00:08:14.730 --> 00:08:22.530
that if you try to install physical memory greater than four GB on your computer system, it is absolutely

92
00:08:22.530 --> 00:08:23.970
useless thing to do.

93
00:08:26.310 --> 00:08:33.659
You can never access a memory location on your physical memory whose address is greater than to restore

94
00:08:33.659 --> 00:08:37.380
the power today to minus one, it means maximum.

95
00:08:37.380 --> 00:08:45.510
All four of them you can install on your 32 bit system if you try to install RAM, which is greater

96
00:08:45.510 --> 00:08:48.290
than 4G in size on a little bit system.

97
00:08:48.780 --> 00:08:54.990
The memory locations beyond the address to restore the power 32 minus one will never going to be used

98
00:08:54.990 --> 00:08:58.490
by a CPU and it will remain unused.

99
00:08:59.070 --> 00:09:05.430
So it is for this reason that today we have 64 bit systems on 64 bit system.

100
00:09:05.430 --> 00:09:11.370
You can install physical memory of maximum size to restore the power 64 minus one bytes.

101
00:09:12.030 --> 00:09:14.430
Now, this is absolutely huge.

102
00:09:16.050 --> 00:09:23.430
So this interview question that why on a 32 bit system, you cannot install physical memory beyond size,

103
00:09:23.430 --> 00:09:24.770
all four gigabytes.

104
00:09:26.100 --> 00:09:28.230
So I have a little advice for you.

105
00:09:28.530 --> 00:09:34.220
You must learn this diagram through of the courts in order to explain the concepts in interviews.

106
00:09:34.800 --> 00:09:41.040
So you must have this diagram in your mind so that when you are asked a question, you can draw the

107
00:09:41.040 --> 00:09:46.600
same diagram on a board or a paper in order to explain the concepts to the interviewer.

108
00:09:48.120 --> 00:09:55.560
So I advise you to just not listen and understand the concept, but rather practice the concept by drawing

109
00:09:55.560 --> 00:10:00.360
it on a piece of paper so that it will stay persistent in your mind.

110
00:10:00.510 --> 00:10:03.620
And you can explain it clearly to the individual.

111
00:10:04.260 --> 00:10:11.070
Many times I have realized that students knows the stuff, but they are not able to explain it because

112
00:10:11.070 --> 00:10:16.630
simply the students have not practiced to how to explain the stuff to the interviewer.

113
00:10:17.040 --> 00:10:23.940
So take it as an advice to practice all these concepts by drawing once on a piece of paper.

