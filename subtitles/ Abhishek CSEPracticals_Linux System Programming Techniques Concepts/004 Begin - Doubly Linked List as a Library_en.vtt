WEBVTT
1
00:00:05.170 --> 00:00:11.140
And this course, we will going to understand the concepts related to implementation and designing a

2
00:00:11.140 --> 00:00:18.190
good library, so for that purpose, we will going to implement our own library called Public Library.

3
00:00:19.510 --> 00:00:23.230
So to start with, you can download the source code from this.

4
00:00:23.230 --> 00:00:25.410
You are then using Git Clone Command.

5
00:00:25.690 --> 00:00:29.260
And inside this directory, please go inside the directory.

6
00:00:29.410 --> 00:00:31.000
Live File Organization.

7
00:00:32.520 --> 00:00:39.480
So you can see that I am already in this directory that is live fire organization, and in this directory

8
00:00:39.480 --> 00:00:42.950
you will find a lot at Andeel, a lot of wine.

9
00:00:43.800 --> 00:00:50.010
So let's see what is there and deal a lot at file stands for Double-dealing List.

10
00:00:51.400 --> 00:00:57.750
And on the right hand side, I am opening the file, the alleged doxy that this source while.

11
00:01:00.250 --> 00:01:05.250
So you can see that I have a source file on the right hand side and header a file on the left hand side,

12
00:01:05.920 --> 00:01:10.180
so we were going to implement that list as a library in discourse.

13
00:01:10.810 --> 00:01:12.730
So you can see that in the header file.

14
00:01:12.730 --> 00:01:16.780
On the left hand side, I have the structure definitions defined.

15
00:01:17.290 --> 00:01:24.970
The FUSA structure defines the node of a list and the second structure defines the list itself.

16
00:01:25.720 --> 00:01:30.480
So of course the list needs to have a pointer to the head of a list.

17
00:01:31.270 --> 00:01:31.630
Right.

18
00:01:31.900 --> 00:01:34.060
So this is not the structure definitions.

19
00:01:34.210 --> 00:01:40.110
And because this is structure, definitions needs to be shared across several source files which Rishi's

20
00:01:40.240 --> 00:01:43.450
which wishes to make use of linked lists utility.

21
00:01:43.660 --> 00:01:48.500
Therefore, these structure definitions needs to be specified in the file.

22
00:01:49.840 --> 00:01:55.630
Now, related to this doubly linked list, there are two functions which have been declared in this

23
00:01:55.930 --> 00:01:56.680
have defined.

24
00:01:57.310 --> 00:02:02.970
The first function is get NewDeal, which returns a pointer to an empty list.

25
00:02:03.460 --> 00:02:11.410
And the second function is a function which which allows you to add the application data to this list.

26
00:02:12.190 --> 00:02:18.310
So you can see on the right hand side we have a source file and the first thing that we do in the source

27
00:02:18.310 --> 00:02:24.690
file is to hash include all the header files on which the source file is dependent.

28
00:02:25.810 --> 00:02:32.800
So you can see that in the source file we have actually implemented the logic of functions which were

29
00:02:32.800 --> 00:02:34.170
declared in the header file.

30
00:02:34.600 --> 00:02:41.290
That is, we have actually implemented the logic of that New Deal function as well as we have implemented

31
00:02:41.290 --> 00:02:42.790
the logic of function.

32
00:02:42.970 --> 00:02:49.570
Add data to the island so you can see that the function definition should be present in the source file,

33
00:02:49.810 --> 00:02:53.250
whereas function declaration should be present in the header file.

34
00:02:53.980 --> 00:02:55.800
So it is an assignment for you.

35
00:02:55.810 --> 00:03:04.030
Just do not watch my Gord's start implementing your own version of Double-dealing List Library, so

36
00:03:04.210 --> 00:03:10.630
you create your own high profile and source file and provide the implementation of some functions in

37
00:03:10.630 --> 00:03:12.550
your library.

38
00:03:13.450 --> 00:03:16.270
So of course you should try to implement more functions.

39
00:03:16.510 --> 00:03:21.730
This court's assume that you are already aware of fundamentals of the link list.

