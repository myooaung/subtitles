1
00:00:00,630 --> 00:00:07,530
In a previous lesson we've already written this line of code from s killer and linear model import linear

2
00:00:07,530 --> 00:00:08,980
regression.

3
00:00:09,060 --> 00:00:14,610
In other words we've already imported our linear regression functionality into this python intro notebook

4
00:00:15,630 --> 00:00:16,590
for consistency.

5
00:00:16,620 --> 00:00:21,350
Let's follow the same pattern that we employed when we were estimating our movie revenue.

6
00:00:21,450 --> 00:00:27,510
We're going to create a variable called rigour and this variable is going to store our linear regression

7
00:00:27,510 --> 00:00:28,020
object

8
00:00:31,280 --> 00:00:32,830
to run our regression.

9
00:00:32,840 --> 00:00:36,710
All we have to do is call the good ole fit method.

10
00:00:36,710 --> 00:00:40,250
So we're gonna see record dot fit.

11
00:00:40,250 --> 00:00:47,840
Open the parentheses and then for our explanatory or independent variable we're going to use the amount

12
00:00:47,840 --> 00:00:49,670
of drugs in the tissue.

13
00:00:49,670 --> 00:00:53,550
So we're gonna type LSD and then put a comma after it.

14
00:00:53,690 --> 00:01:01,070
And now we can add our dependent variable or the values that we're going to try to predict.

15
00:01:01,070 --> 00:01:07,040
In this case this is the school and that's it.

16
00:01:07,070 --> 00:01:13,430
Now if you remember previously our explanatory variable was called Capital X and our dependent variable

17
00:01:13,430 --> 00:01:17,270
was called lowercase y.

18
00:01:17,270 --> 00:01:24,570
Now remember our cycle loans fit method essentially computes the parameters of this equation.

19
00:01:24,650 --> 00:01:29,870
We've got our theta zero which is our intercept and we've got our theta one which is our coefficient

20
00:01:29,990 --> 00:01:33,110
in front of our explanatory variable.

21
00:01:33,170 --> 00:01:37,380
Let's see what happens now when we try to run our regression.

22
00:01:37,910 --> 00:01:40,220
We in fact get an error.

23
00:01:40,370 --> 00:01:49,080
Looking down we see that we get a value error found input variables with inconsistent numbers of samples.

24
00:01:49,080 --> 00:01:50,520
Now this is odd right.

25
00:01:50,520 --> 00:01:53,900
Why would there be an inconsistent number of samples.

26
00:01:53,940 --> 00:01:58,780
We've got seven rows in each of our two columns.

27
00:01:58,980 --> 00:02:03,660
We've got seven roads and LSD and we've got seven rows in the math school.

28
00:02:03,660 --> 00:02:06,810
So why would there be an inconsistent number of samples.

29
00:02:06,890 --> 00:02:11,030
Now even though this error message seems a little bit like a red herring.

30
00:02:11,280 --> 00:02:16,350
The reason that we're getting this problem actually has to do with the fact that we are working with

31
00:02:16,350 --> 00:02:24,690
series and not data frames we're getting this error because this notation here data square brackets

32
00:02:25,230 --> 00:02:33,150
and then the column name actually extracts an object of type series instead of an object of type data

33
00:02:33,150 --> 00:02:34,360
frame.

34
00:02:34,350 --> 00:02:40,470
Now if you recall the way to get a data frame from another data frame is to double up on the square

35
00:02:40,500 --> 00:02:41,520
brackets.

36
00:02:41,550 --> 00:02:51,270
So if we add an additional pair of square brackets this notation now will extract an object of type

37
00:02:51,480 --> 00:02:55,770
data frame and store it in LSD and in school.

38
00:02:55,800 --> 00:03:03,600
So if I press shift enter now we are now no longer working with series we are working with data frames

39
00:03:04,290 --> 00:03:09,750
going back down to where we're fitting our regression I can press shift enter again to rerun this line

40
00:03:09,750 --> 00:03:15,270
of code and we can see that our regression runs without a problem.

41
00:03:15,270 --> 00:03:17,190
Now you don't have to take my word for it.

42
00:03:17,220 --> 00:03:23,550
Regarding the change in types you can double check this yourself so you can always add a cell below

43
00:03:23,940 --> 00:03:32,820
and check the types if I say type LSD then I see it is a data frame and if I take away the square brackets

44
00:03:33,060 --> 00:03:40,380
press shift enter and rerun this again I can see that it is a series in this case and this is what we've

45
00:03:40,710 --> 00:03:44,600
talked about when working with data frames in the previous lesson.

46
00:03:44,640 --> 00:03:50,340
So now that we've successfully fitted our regression let's take a look at the values of this theta one

47
00:03:50,460 --> 00:03:52,650
and this theta zero parameter.

48
00:03:52,650 --> 00:03:58,890
If you remember the way we did this in the past it was looking at the attribute of our regression object

49
00:03:59,370 --> 00:04:03,480
the attribute in question was called co F with an underscore.

50
00:04:03,810 --> 00:04:11,000
So let's add that here regular dot co f underscore and let's it shift and to see what happens.

51
00:04:11,160 --> 00:04:15,610
Our Jupiter notebook will print out array then parentheses.

52
00:04:15,630 --> 00:04:22,840
Then one set of square brackets two set of square brackets and then the value of our theta one parameter

53
00:04:24,010 --> 00:04:28,970
so we can see that our coefficient is stored inside an array.

54
00:04:29,110 --> 00:04:31,420
It's an array of one element.

55
00:04:31,480 --> 00:04:32,710
Let's pick that element out.

56
00:04:32,740 --> 00:04:38,500
So I'm going to say square brackets zero to access the first element in the array.

57
00:04:38,620 --> 00:04:41,860
Let's see what happens when I press shift and turn now.

58
00:04:41,900 --> 00:04:42,560
Huh.

59
00:04:44,080 --> 00:04:50,680
In this case one of the square brackets has disappeared but we're still left with an array.

60
00:04:50,680 --> 00:04:55,130
We're not yet able to access the number inside directly.

61
00:04:55,180 --> 00:04:59,400
We're still getting a collection containing just one element.

62
00:04:59,710 --> 00:05:02,350
So you might ask did this just work.

63
00:05:02,350 --> 00:05:06,860
We access the first element of our array and we still got an array.

64
00:05:06,940 --> 00:05:09,210
It seems like a bug right.

65
00:05:09,310 --> 00:05:13,810
Well the answer is is that we have to go one level deeper to get the raw value.

66
00:05:13,840 --> 00:05:17,080
You've probably noticed that there was one square bracket less right.

67
00:05:17,080 --> 00:05:24,220
So if I don't have this at the end I have two square brackets but if I do access an element inside my

68
00:05:24,220 --> 00:05:26,490
array I have one square bracket.

69
00:05:27,400 --> 00:05:30,640
And the reason we get this is that we have to go to level steep.

70
00:05:30,640 --> 00:05:34,910
We actually have an array of arrays.

71
00:05:35,140 --> 00:05:42,480
Mind blown right our coefficient is buried inside an array that's inside another array.

72
00:05:42,490 --> 00:05:44,380
So how do we access and arrange set an array.

73
00:05:44,650 --> 00:05:50,980
Well we can access the first element which is the array and then we can access the first element of

74
00:05:50,980 --> 00:05:53,870
that array again to get the raw value.

75
00:05:54,980 --> 00:05:59,860
And this is how you would access a particular value of a nested array.

76
00:05:59,920 --> 00:06:01,500
Let me add this to a print statement.

77
00:06:01,510 --> 00:06:15,840
Similarly print and just say theta one semicolon maybe space comma and then close up brackets here.

78
00:06:15,840 --> 00:06:18,720
So may I add this to a print statement like this.

79
00:06:18,730 --> 00:06:24,340
Now let's take a look at our intercept our intercept was the intercept on the school attribute from

80
00:06:24,370 --> 00:06:32,440
our regression object so I can see record dot intercept on the school press shift enter and we see that

81
00:06:32,890 --> 00:06:37,530
our intercept is also inside a collection that's also inside of an array.

82
00:06:37,840 --> 00:06:45,430
But there's only one set of square brackets here so we can access the raw value inside just having that

83
00:06:45,520 --> 00:06:50,560
square brackets 0 following the name of the attribute.

84
00:06:50,560 --> 00:06:59,370
If I had shift enter we see the raw value printed out and again I can wrap this inside a print statement

85
00:07:01,130 --> 00:07:11,560
intercept semicolon single quote comma space rigger intercept and close the parentheses at the end.

86
00:07:11,830 --> 00:07:12,280
There we go.

87
00:07:12,280 --> 00:07:13,750
So here's our intercept.

88
00:07:13,750 --> 00:07:17,500
Now what about the goodness of fit or R squared.

89
00:07:17,500 --> 00:07:23,560
To find out how much of the variation in our data is explained by the amount of drugs in the volunteers

90
00:07:23,560 --> 00:07:24,550
tissue.

91
00:07:24,550 --> 00:07:28,050
We call the score method on our regression.

92
00:07:28,150 --> 00:07:33,160
So we type rigour don't school and then we have to provide two values.

93
00:07:33,310 --> 00:07:41,740
One is our explanatory variable and the other one is our dependent variable which was school so regardless

94
00:07:41,760 --> 00:07:45,200
school parentheses LSD comma school.

95
00:07:45,480 --> 00:07:53,190
Print this out we see that r r squared is approximately point eight eight let's wrap this inside a print

96
00:07:53,190 --> 00:08:05,270
statement as well r squared semicolon single quote comma we go.

97
00:08:05,270 --> 00:08:11,330
So in this cell we fitted our regression so we've run our machine learning model and we're printing

98
00:08:11,330 --> 00:08:18,470
out a couple of stats about our regression a couple of the a couple of the statistics that describe

99
00:08:18,680 --> 00:08:25,130
what went on with the calculation one of them is the coefficient another one is the intercept of our

100
00:08:25,130 --> 00:08:30,120
line and another one is the squid or the goodness of fit.

101
00:08:30,320 --> 00:08:36,440
So we've got some basic information about our regression and we see that the amount of drugs in the

102
00:08:36,440 --> 00:08:44,120
contestants tissue explains close to eighty eight percent of the math test performance and we also see

103
00:08:44,120 --> 00:08:51,650
that for every increase in LSD parts per million our volunteers math performance was approximately 9

104
00:08:51,650 --> 00:08:57,420
percent worse than the control this is what the theta one is telling us how.

105
00:08:58,070 --> 00:09:03,770
Now even though this is all very well and good it be really nice to represent this graphically because

106
00:09:03,950 --> 00:09:10,880
we like pictures pictures are very very important for making sense of data so let's create another plot

107
00:09:11,610 --> 00:09:13,760
I'm going to do this in the cell below.

108
00:09:13,790 --> 00:09:20,150
Now one thing that you've already seen a little bit in the python code is that when creating nice looking

109
00:09:20,150 --> 00:09:25,230
graphs it's a two part process in the first part.

110
00:09:25,250 --> 00:09:30,290
We do all the styling and in the second part we plot the data and show it off.

111
00:09:30,290 --> 00:09:32,880
So what I'm going to do isn't wedded to the second part first.

112
00:09:32,920 --> 00:09:37,160
I want to plot the data and then when I had my styling code later on.

113
00:09:37,160 --> 00:09:46,460
So plotting the data as it is I can write BLT dot scatter and then provide the inputs to our scatter

114
00:09:46,460 --> 00:09:54,010
plot and that's going to be the LSD parts per million come up and then the school.

115
00:09:54,050 --> 00:09:55,390
These are the math scores.

116
00:09:55,490 --> 00:09:57,950
So let's see what this plot looks like.

117
00:09:57,950 --> 00:10:03,870
By adding by adding PDT dots show beneath.

118
00:10:04,040 --> 00:10:04,700
Here we go.

119
00:10:04,700 --> 00:10:09,800
This is what our plot looks like before we've done any styling on it.

120
00:10:09,890 --> 00:10:12,080
Now I think this chart looks.

121
00:10:12,440 --> 00:10:19,540
I think this looks super ugly actually though we're going to have to do something about this for starters

122
00:10:19,630 --> 00:10:23,410
let's add some arguments by keyword to this plot.

123
00:10:23,410 --> 00:10:29,680
So in your scatter method you're going to put a comma at the end after school and then write.

124
00:10:29,690 --> 00:10:33,600
Color is equal to and then single quotes.

125
00:10:33,790 --> 00:10:40,670
Blue let's shift and to see what it looks like now we've got our data points in blue.

126
00:10:40,790 --> 00:10:44,920
So this is a slight improvement to the black and white version.

127
00:10:44,930 --> 00:10:46,880
Now we don't have many dots on here.

128
00:10:46,880 --> 00:10:48,930
We don't have many many data points.

129
00:10:49,100 --> 00:10:55,860
So let's increase the size of these individual dots on our chart.

130
00:10:56,240 --> 00:10:59,920
And I want to leave this to you as a challenge.

131
00:11:00,020 --> 00:11:06,640
So I've got the documentation of the scatter method up in front of you right now.

132
00:11:06,890 --> 00:11:13,280
And what I would like you to do is I'd like you to look at this documentation and see if you can figure

133
00:11:13,280 --> 00:11:17,930
out how to increase the size of these data points.

134
00:11:18,140 --> 00:11:25,100
And also maybe add some transparency in other words instead of having it a solid blue color make those

135
00:11:25,100 --> 00:11:28,290
blue dots slightly transparent.

136
00:11:28,430 --> 00:11:31,330
I'll give you a few seconds to pause the video.

137
00:11:31,520 --> 00:11:39,400
The hint I'll give you is that it's going to be in the keyword arguments of the scatter function hand.

138
00:11:39,400 --> 00:11:41,020
Here's the solution.

139
00:11:41,080 --> 00:11:45,530
So we wanted to increase the size of our dots.

140
00:11:45,700 --> 00:11:49,790
So the way to do this is to look at these keyword arguments.

141
00:11:49,810 --> 00:12:00,040
So for example s is the size in points of our dots and the transparency is this alpha value here.

142
00:12:00,370 --> 00:12:08,220
The alpha value will be between zero which is transparent and one which is opaque coming back to our

143
00:12:08,220 --> 00:12:09,100
Python code.

144
00:12:09,150 --> 00:12:13,200
We can add these key word arguments to our scatter method.

145
00:12:13,260 --> 00:12:23,070
So after Blue I'm going to add a comma and then I'm going to see as equals and let's experiment here

146
00:12:23,070 --> 00:12:23,900
a little bit.

147
00:12:23,940 --> 00:12:28,390
So what happens if I say s equals 500 in a hit shift enter.

148
00:12:28,640 --> 00:12:36,180
I get enormous blue dots does actually doesn't look half bad but I think I'm going to go with something

149
00:12:36,180 --> 00:12:44,440
like maybe 100 is the right value here so that's the size of our data points covered.

150
00:12:44,870 --> 00:12:46,640
Let's change a transparency now.

151
00:12:46,820 --> 00:12:50,050
This was in the alpha parameter so messy.

152
00:12:50,060 --> 00:12:52,640
Alpha is equal to I don't know.

153
00:12:52,760 --> 00:12:58,470
Zero point seven head's gonna be a value between 0 and 1 remember.

154
00:12:58,550 --> 00:13:06,680
So hitting shift enter I get a nice little bit of transparency here on my data points which I have a

155
00:13:06,680 --> 00:13:08,960
little bit larger so we can actually tell what's going on.

156
00:13:09,980 --> 00:13:11,570
OK so we'll leave it at that.

157
00:13:11,660 --> 00:13:19,370
And now I'm going to add some labels to our chart and make it look a little nicer since we've done this

158
00:13:19,370 --> 00:13:19,790
before.

159
00:13:19,790 --> 00:13:23,870
I'm going to leave this to you as a challenge so you can return and remember the python code that you

160
00:13:23,870 --> 00:13:24,580
wrote.

161
00:13:24,770 --> 00:13:33,260
Can you set the title of the plot as a whole as arithmetic versus LSD 25 and then add some labels on

162
00:13:33,260 --> 00:13:40,070
the side one for the x axis that reads tissue LSD parts per million and one for the y axis that reads

163
00:13:40,070 --> 00:13:40,990
performance school

164
00:13:43,740 --> 00:13:45,720
and here's the solution.

165
00:13:45,720 --> 00:13:53,490
So we take our plotting object put a dot after it and write title parentheses and then provide the string

166
00:13:54,400 --> 00:14:08,010
a rhythmic tick vs. LSD 25 and then we do the same for the labels on the x axis and y axis PDT dot X

167
00:14:08,010 --> 00:14:17,490
label parentheses tissue LSD the parts per million and peel T dot why label

168
00:14:21,960 --> 00:14:26,460
performance type performance school.

169
00:14:26,460 --> 00:14:27,520
There we go.

170
00:14:27,510 --> 00:14:34,410
Let's shift and take a look at what this looks like and we see that may be the thing to do is to increase

171
00:14:34,590 --> 00:14:38,470
the font size a little bit on these three labels.

172
00:14:38,580 --> 00:14:46,140
I think in our previous chart 17 for the title and 14 for the labels worked really well some as a font

173
00:14:46,140 --> 00:14:57,110
size equals 17 for the title and then when I add another keyword argument to our X labels and Y labels

174
00:14:57,380 --> 00:15:05,730
font size equals 14 and font size equals 14 again.

175
00:15:06,090 --> 00:15:07,650
So let's take a look.

176
00:15:07,800 --> 00:15:10,240
That's starting to look pretty good.

177
00:15:10,350 --> 00:15:13,000
Now to round things off a little bit.

178
00:15:13,260 --> 00:15:16,060
We can try again setting a limit on the range.

179
00:15:16,080 --> 00:15:17,740
So why.

180
00:15:19,160 --> 00:15:34,850
It's gonna be between 25 and 85 25 and eighty five and exclaim it's gonna be between maybe one and six

181
00:15:34,850 --> 00:15:38,710
point five yeah.

182
00:15:38,800 --> 00:15:40,600
Doesn't need to go all the way to seven.

183
00:15:40,600 --> 00:15:46,710
I reckon and for the style maybe P.L. Dot's style.

184
00:15:46,810 --> 00:15:50,890
Use then we can choose our good old friend.

185
00:15:51,160 --> 00:15:59,480
Five thirty eight shift and to apply the changes.

186
00:15:59,690 --> 00:16:02,130
I don't think that I think that worked.

187
00:16:02,150 --> 00:16:03,150
Try again.

188
00:16:03,350 --> 00:16:04,370
Okay so here we go.

189
00:16:04,400 --> 00:16:11,240
This is how it would look like with our styling as it is currently.

190
00:16:11,540 --> 00:16:14,420
We've got our range set.

191
00:16:14,670 --> 00:16:21,250
We've got our colors set and we've got the font size set as well.

192
00:16:21,270 --> 00:16:29,520
At the very top of the cell I'm going to add again this little percentage sign and write that plot lib

193
00:16:30,150 --> 00:16:31,470
in line.

194
00:16:31,470 --> 00:16:41,900
And what this does is it tells Jupiter notebook to export this graph as it is when we say file download

195
00:16:41,900 --> 00:16:44,120
adds notebook.

196
00:16:44,120 --> 00:16:50,790
So there's really only one thing left to do which is plotting our regression line on here.

197
00:16:51,200 --> 00:16:58,070
Because at the moment we've got our data points we've got our chart nicely formatted and looking good.

198
00:16:58,250 --> 00:17:06,350
All we have to do now is plot our predictions from our machine learning model on here so our machine

199
00:17:06,350 --> 00:17:16,340
learning model will have a prediction for every level of LSD tissue concentration in the data set to

200
00:17:16,340 --> 00:17:17,720
get hold of these predictions.

201
00:17:17,720 --> 00:17:22,990
We use a method called predict so we would write rigour.

202
00:17:23,240 --> 00:17:26,440
Don't predict.

203
00:17:26,790 --> 00:17:31,410
And as a parameter here has an argument here.

204
00:17:31,410 --> 00:17:35,790
We would supply the LSD tissue concentration.

205
00:17:35,790 --> 00:17:43,790
So this predicts a math school based on the amount of drugs in the tissue.

206
00:17:43,800 --> 00:17:46,710
Now we'll want to store that information somewhere.

207
00:17:46,710 --> 00:17:53,940
So I'm going to create a variable called predicted under school school and set it equal to the output

208
00:17:54,540 --> 00:17:57,770
from this method right here.

209
00:17:57,780 --> 00:18:02,570
Now remember you've got a press shift enter to actually run the cell.

210
00:18:02,760 --> 00:18:07,170
Otherwise the cells below won't know about this code that we've just written.

211
00:18:07,370 --> 00:18:09,120
So when shift enter now

212
00:18:11,920 --> 00:18:16,430
so looking down at our chart we see the actual scores indicated by the blue dots.

213
00:18:16,800 --> 00:18:25,500
And now we just have to plot the predicted scores alongside these actual ones had all these predicted

214
00:18:25,500 --> 00:18:28,800
scores are gonna be connected by a line.

215
00:18:28,800 --> 00:18:37,710
This is the line that we want to superimpose on our graph so we can write PDT dot plot and then provide

216
00:18:38,810 --> 00:18:40,160
the line that we want to draw.

217
00:18:40,250 --> 00:18:50,640
It's gonna be the Alice the tissue concentration on the x axis and then on the y axis it's gonna be

218
00:18:50,640 --> 00:18:52,580
are what are predicted scores right.

219
00:18:56,140 --> 00:18:59,370
Predicted on the school school.

220
00:19:00,040 --> 00:19:01,800
Now let's hit shift enter.

221
00:19:01,990 --> 00:19:03,220
And here we go.

222
00:19:03,220 --> 00:19:10,700
We've got our predicted values connected by a line superimposed upon our scatter plot.

223
00:19:10,960 --> 00:19:13,750
Of course we can start this line any way we want to.

224
00:19:13,900 --> 00:19:29,630
So I'm going to say color equals red and line width equals three.

225
00:19:29,910 --> 00:19:35,810
Now we've got a chart with you in more contrast between the blue data points and our red fitted regression

226
00:19:35,810 --> 00:19:37,210
line.

227
00:19:37,280 --> 00:19:43,260
So I think that concludes all the analysis that we're gonna do for our Python intro.

228
00:19:43,610 --> 00:19:45,870
And what have we learned from all this.

229
00:19:45,920 --> 00:19:48,200
Well drugs are bad for you.

230
00:19:48,200 --> 00:19:52,760
Boys and girls especially if you're studying math tests.

231
00:19:52,760 --> 00:19:57,770
But the other thing that you'll notice is that if you look at the original paper and you look at the

232
00:19:57,770 --> 00:20:05,030
equation that the researchers have estimated we can actually see what their estimate was for the intercept

233
00:20:05,480 --> 00:20:09,470
and the coefficient that we've estimated it as well.

234
00:20:09,530 --> 00:20:17,800
So they've got eighty nine point seven for the intercept and negative nine point four for four.

235
00:20:17,870 --> 00:20:27,350
The coefficient in their equation in contrast our coefficient is negative nine point zero in our intercept

236
00:20:27,470 --> 00:20:32,150
is eighty nine point one not eighty nine point seven.

237
00:20:32,180 --> 00:20:39,690
So we can see that we're not able to reproduce the researchers output Exactly.

238
00:20:39,780 --> 00:20:47,840
Now I suspect that's because the researchers and we are not working off exactly the same numbers you

239
00:20:47,840 --> 00:20:52,310
see they actually don't provide the information on parts per million.

240
00:20:52,370 --> 00:20:56,660
And the math scores in the PDL that we're looking at.

241
00:20:56,660 --> 00:21:03,560
I actually had to hunt around the web to get these numbers and they might be slightly different from

242
00:21:03,740 --> 00:21:05,550
what's in the original paper.

243
00:21:05,840 --> 00:21:12,920
But that said I think that our results are so close that we can say that we've successfully reproduced

244
00:21:13,310 --> 00:21:16,360
the research that's in the paper there.

245
00:21:16,520 --> 00:21:21,850
Oh and by the way this is in no way relevant to the study at all.

246
00:21:21,950 --> 00:21:30,590
But many of the calculations that we just did the original authors ran on something called an IBM 360

247
00:21:30,590 --> 00:21:32,620
computer.

248
00:21:32,780 --> 00:21:39,020
The reason you've probably never heard of the IBM 360 is because you don't have one of these monstrosities

249
00:21:39,110 --> 00:21:41,420
sitting in your living room.

250
00:21:41,470 --> 00:21:42,040
How.

251
00:21:42,470 --> 00:21:48,590
I find this so funny that the researchers actually mentioned this particular computer model in their

252
00:21:48,590 --> 00:21:56,870
actual paper and I can't figure out if it's maybe some 1968 humble brag about how high tech they are

253
00:21:57,290 --> 00:22:05,690
or if IBM actually paid them for this shout out in any case plugging the computer model that you've

254
00:22:05,690 --> 00:22:11,900
done your research on in your scientific paper there's probably gone a little bit out of fashion these

255
00:22:11,900 --> 00:22:12,940
days.

256
00:22:13,770 --> 00:22:17,190
But yeah I I did find this interesting.

257
00:22:17,190 --> 00:22:21,870
And how is your reaction of me telling you about this just now was wait wait a minute.

258
00:22:22,010 --> 00:22:25,680
IBM made computers then.

259
00:22:25,940 --> 00:22:34,520
I highly highly recommend watching this documentary called Silicon cowboys silicon cowboys is a really

260
00:22:34,520 --> 00:22:41,840
really fascinating film about a little startup called Compaq that battled it out with big blue in days

261
00:22:41,840 --> 00:22:43,310
gone by.

262
00:22:43,850 --> 00:22:48,220
So yeah watch it and I'll see you in the next lessons.

263
00:22:48,230 --> 00:22:48,670
Take care.
