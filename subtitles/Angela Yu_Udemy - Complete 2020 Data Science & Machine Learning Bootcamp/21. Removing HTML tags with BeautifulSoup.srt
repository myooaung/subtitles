1
00:00:00,180 --> 00:00:06,850
In this lesson we're going to discuss how to remove the h m l tags from our emails.

2
00:00:06,930 --> 00:00:14,380
What I mean by h Tim L. tanks well H.M. is what makes an e-mail look pretty.

3
00:00:14,460 --> 00:00:18,900
If I look at the newsletter from Product Hunt here I've got wonderful formatting.

4
00:00:18,900 --> 00:00:26,890
I've got images embedded I've got animations embedded and it just looks incredibly well put together.

5
00:00:27,390 --> 00:00:33,420
The same email message in plain text will look like what I've got here on the left on the right.

6
00:00:33,420 --> 00:00:35,400
I have the rich formatting on the left.

7
00:00:35,430 --> 00:00:37,680
I have the plain text.

8
00:00:37,680 --> 00:00:46,910
So the purpose of HMO in emails and Web sites is to add both structure and some formatting.

9
00:00:46,950 --> 00:00:52,830
Let me quickly show you how to add some basic formatting using HMO and this will also show us how each

10
00:00:52,830 --> 00:00:55,330
team l tags basically work.

11
00:00:55,350 --> 00:01:03,030
See we have a regular plain text that reads Do not reply then this text will be displayed in the email

12
00:01:03,090 --> 00:01:10,210
in a standard default way however if we wanted to make this text stand out you might consider using

13
00:01:10,250 --> 00:01:18,100
ECMO to make this text bold and you can do this by surrounding this piece of text with a tag namely

14
00:01:18,280 --> 00:01:27,370
the B tag B for bold the way the HMO works is that there is a beginning and an ending tag and that way

15
00:01:27,640 --> 00:01:33,680
we can mark where the bold text begins and where the bold text should end.

16
00:01:33,760 --> 00:01:39,260
One of the best places to see each Tim Allen action of course is on the web.

17
00:01:39,370 --> 00:01:46,330
If you go to a website called example dot com and then right click on the page and go to view source

18
00:01:47,940 --> 00:01:50,080
you will get something like this.

19
00:01:50,130 --> 00:01:55,920
This is what the HMO code that's behind the Web site actually looks like this is what the developer

20
00:01:55,920 --> 00:01:58,460
for the website will have actually written.

21
00:01:58,770 --> 00:02:07,290
And thanks to our browser this code here is rendered like so looking at the HD email behind the Web

22
00:02:07,290 --> 00:02:09,970
site allows us to see a couple of things.

23
00:02:09,990 --> 00:02:18,750
For example we can see here that there's a title called example domain example domain sits in between

24
00:02:18,750 --> 00:02:22,860
two tags an opening tag and a closing tag.

25
00:02:22,860 --> 00:02:31,560
And what this little bit of code does is it makes example domain show up here on our tab bar for example.

26
00:02:31,570 --> 00:02:38,640
Another neat little trick that you can try out with this particular website or any Web site is inspecting

27
00:02:38,670 --> 00:02:47,690
particular elements about right click and then select Inspect Element I will see something like this

28
00:02:48,560 --> 00:02:52,470
when I move this over slightly move this over slightly.

29
00:02:53,700 --> 00:03:01,000
And now what I can do is I can hover over a particular element from the HDMI code and my browser will

30
00:03:01,000 --> 00:03:05,220
highlight which bits of the website the piece of code is referring to.

31
00:03:05,230 --> 00:03:12,990
So for example right now I'm hovering over a heading which is marked with the h1 tag each for heading.

32
00:03:13,360 --> 00:03:21,130
If I move my mouse down a little bit then I get to a paragraph I can explode this here and select the

33
00:03:21,130 --> 00:03:22,240
text inside.

34
00:03:22,510 --> 00:03:26,110
But the paragraph as a whole is this bit here.

35
00:03:26,380 --> 00:03:33,430
And again they each html tag for this bit here has a P 4 paragraph at the beginning and at the end.

36
00:03:33,580 --> 00:03:40,270
So this is our heading this is our paragraph and both the heading and the paragraph are contained inside

37
00:03:40,570 --> 00:03:45,120
the body and the body refers to the whole thing here.

38
00:03:45,220 --> 00:03:49,420
So that's a very short introduction to each team l tags.

39
00:03:49,420 --> 00:03:53,870
Let's see how each HTML is used inside our corpus of emails.

40
00:03:54,070 --> 00:03:59,380
One of the emails that I've looked at and a bit more detail is the one document idea number two.

41
00:03:59,680 --> 00:04:04,440
This is the email with the file name beginning 0 0 2 1 4.

42
00:04:04,610 --> 00:04:09,650
Let me show you what the body of this email looks like in Jupiter notebook.

43
00:04:09,650 --> 00:04:16,940
This email is at position number two in our message column so we can access this email with theta dot

44
00:04:17,060 --> 00:04:25,610
and square brackets 2 and then the string message in all caps.

45
00:04:25,610 --> 00:04:28,650
And what we get is something like this.

46
00:04:28,850 --> 00:04:33,270
Now personally this isn't the most helpful formatting here that we're getting.

47
00:04:33,290 --> 00:04:39,230
So let me show you how this email would look like in my atom text editor where the formatting is a bit

48
00:04:39,230 --> 00:04:42,770
more user friendly at the top.

49
00:04:42,770 --> 00:04:45,370
We've got the email header scrolling down.

50
00:04:45,440 --> 00:04:50,560
We get to the email body and at the bottom him with the syntax highlighting.

51
00:04:50,750 --> 00:04:57,970
You can easily spot the HDMI all tax if I scroll down a bit further I can show you.

52
00:04:57,990 --> 00:05:06,730
There is a paragraph in this email and you've got the do not reply part that's going to show up in bold

53
00:05:07,270 --> 00:05:12,370
due to the fact that it is surrounded by these bolding HDMI attacks.

54
00:05:12,490 --> 00:05:19,660
Now these are the HDMI tags that we're going to remove from our message bodies.

55
00:05:19,660 --> 00:05:24,520
We're going to clean our data in such a way that these H2 tags are no longer present.

56
00:05:24,700 --> 00:05:30,430
And the reason we're doing this is because we're interested in only the actual words for now as well

57
00:05:30,430 --> 00:05:36,430
as the text with our bag of words approach in our naive bayes classifier.

58
00:05:36,520 --> 00:05:42,040
So in a way we're gonna be treating these HDMI tags just as we were treating punctuation namely we're

59
00:05:42,040 --> 00:05:45,740
going to remove them back in Jupiter.

60
00:05:45,760 --> 00:05:55,390
Let me add a markdown cell here and that markdown cell is going to read removing H terminal tags from

61
00:05:55,630 --> 00:06:00,520
emails using this at property of the data frame.

62
00:06:00,520 --> 00:06:09,130
We've had a very efficient way of looking up and accessing a single value in the pan this data frame.

63
00:06:09,130 --> 00:06:17,020
This is where we specified the index name and the column name when it comes to stripping out the HDMI

64
00:06:17,100 --> 00:06:19,370
tags from this particular email.

65
00:06:19,590 --> 00:06:28,170
All the heavy lifting will be done for us by a python module called beautiful soup at the top with our

66
00:06:28,170 --> 00:06:39,100
notebook imports we're going to write from peaceful import beautiful soup then we'll hit shift until

67
00:06:39,100 --> 00:06:47,350
here scroll back down and just inside this cell here where we've access a cell in our data frame we'll

68
00:06:47,350 --> 00:06:56,020
create a variable called soup instead of equal to beautiful soup parentheses then we'll take the code

69
00:06:56,020 --> 00:07:06,900
that we've just written and just contact pasted inside here put a comma after it and then supply a string

70
00:07:06,990 --> 00:07:16,860
called H T M L dot puzzler what I've just done is applied to arguments the first one is the text that

71
00:07:16,860 --> 00:07:24,570
I would like to pass and the second one is the parser that I would like to use how the beautiful thing

72
00:07:24,570 --> 00:07:30,090
about Python is that it comes with an HDMI El Paso that is ready to go.

73
00:07:30,090 --> 00:07:37,470
That is why we can just tell beautiful soup to use the built in parser in Python with this string here

74
00:07:38,170 --> 00:07:44,790
now what we can do is print out the formatted version of this email so let's write a print statement

75
00:07:45,930 --> 00:07:48,150
and then supply the following argument.

76
00:07:48,300 --> 00:07:51,090
We're gonna say soup dot pretty define

77
00:07:54,020 --> 00:08:03,500
parentheses and hit shift into what we see now is a pretty defined version of the original text.

78
00:08:03,500 --> 00:08:10,050
So this is closer to what we saw in the atom text editor that I used earlier for make it a bit larger.

79
00:08:10,060 --> 00:08:12,490
Like so you can see it a bit better.

80
00:08:12,490 --> 00:08:13,300
There we go.

81
00:08:14,540 --> 00:08:20,390
The only thing Jupiter doesn't do here is do the syntax highlighting on our tags but other than that

82
00:08:20,870 --> 00:08:27,490
with the indentation you can actually tell which parts are H.M. and it's a lot more readable.

83
00:08:27,670 --> 00:08:28,060
All right.

84
00:08:28,090 --> 00:08:36,890
So we've seen how beautiful soup can defy a piece of text that contains HMO but it can also remove all

85
00:08:36,890 --> 00:08:37,910
our tags.

86
00:08:38,130 --> 00:08:45,380
And this is actually the primary purpose of what we're gonna be using it for so just below the cell.

87
00:08:45,930 --> 00:08:56,060
Let's remove all the HD hymnal and we can do that by calling the Get text method on our soup object.

88
00:08:56,180 --> 00:09:06,710
So soup don't get on a school text will remove our HD hymnal now our output will no longer have any

89
00:09:06,710 --> 00:09:11,530
HD hymnal in it and you can verify this by looking at the output him.

90
00:09:11,630 --> 00:09:17,750
So for example the bolding tags that used to surround do not reply have disappeared.

91
00:09:17,860 --> 00:09:19,510
Alright so that's pretty much it.

92
00:09:19,610 --> 00:09:24,620
All the heavy lifting has been done for us by Python module him.

93
00:09:24,650 --> 00:09:30,560
The next lesson we're finally gonna start tackling more of these emails and what we're gonna do is we're

94
00:09:30,560 --> 00:09:38,910
gonna put all of our work all of the cleaning all the pre processing into some Python functions.

95
00:09:38,980 --> 00:09:39,670
I'll see you there.
