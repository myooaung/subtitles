1
00:00:00,300 --> 00:00:02,150
So hit our Jupiter notebook.

2
00:00:02,280 --> 00:00:09,360
Let's investigate how wrong and how useful our house price model is and will commemorate this with a

3
00:00:09,360 --> 00:00:12,620
new section heading changes to mark down here.

4
00:00:12,810 --> 00:00:22,220
And put two hash tags there and write residuals and residual lots.

5
00:00:22,440 --> 00:00:29,310
And now what I'm going to do is I'm going to take some of our existing code and just copy it below.

6
00:00:29,610 --> 00:00:33,490
We're going to reuse themselves but modify them a little bit.

7
00:00:33,840 --> 00:00:36,050
So I'm going to take this cell right here.

8
00:00:36,180 --> 00:00:44,880
Copy it scroll down and paste it in and I'm going to add some comments here.

9
00:00:44,930 --> 00:00:57,020
I call this one modified model transformed using log prices and simplified

10
00:00:59,290 --> 00:01:02,020
dropping two features.

11
00:01:02,100 --> 00:01:05,240
Now just because I put that in the comment doesn't mean we've actually done it.

12
00:01:05,290 --> 00:01:09,580
So I'm going to come here and on this line.

13
00:01:09,580 --> 00:01:19,200
We're not just going to drop the price when it put some square brackets around price then a comma and

14
00:01:19,200 --> 00:01:26,260
then we'll drop to other features that we had earlier industry and age.

15
00:01:26,260 --> 00:01:32,320
Now let me come in here and delete this part of the code when I hit shift enter.

16
00:01:32,590 --> 00:01:40,530
And now when I add another comment here that reads using stats model so instead of our psyche learn

17
00:01:40,740 --> 00:01:46,310
we're to continue using stats model here for analyzing our residuals next.

18
00:01:46,330 --> 00:01:53,440
I'm going to come up here take these three lines of code copy them and paste them in here

19
00:01:56,850 --> 00:01:57,420
okay.

20
00:01:57,420 --> 00:01:59,700
So now we're all set up for this lesson.

21
00:01:59,700 --> 00:02:03,220
Now we can start looking at our residuals.

22
00:02:03,300 --> 00:02:13,110
It's when I add a comment here we said the residuals are equal to the difference between our observed

23
00:02:13,110 --> 00:02:17,670
values and our fitted values or our predictions.

24
00:02:17,700 --> 00:02:26,790
So the observed values y where y train and from Y train we can subtract the fitted values we can find

25
00:02:26,790 --> 00:02:32,910
these under results don't fit it values.

26
00:02:32,920 --> 00:02:35,960
Let's take a look at what these residuals actually look like.

27
00:02:35,970 --> 00:02:42,870
So residuals and shift enter will split and shuffle the data.

28
00:02:42,870 --> 00:02:47,100
Train the model and then output our residuals.

29
00:02:47,220 --> 00:02:48,300
And here we go.

30
00:02:48,300 --> 00:02:54,090
These are all 400 and for residuals from our model.

31
00:02:54,090 --> 00:03:03,360
If you're wondering what type of object we're working with here then we can see it is a panda's series.

32
00:03:03,370 --> 00:03:09,810
That's quite nice because if it's a panda series we can call a bunch of methods on it that the series

33
00:03:09,810 --> 00:03:11,950
has like describe.

34
00:03:12,600 --> 00:03:20,330
And if I do that we can see that the mean of the residuals is very very close to zero.

35
00:03:20,580 --> 00:03:22,820
But more on that later.

36
00:03:22,830 --> 00:03:31,330
So let me quickly comment this out hit shift into a hand show you that you don't actually need to do

37
00:03:31,330 --> 00:03:37,250
this calculation manually because our results object from our stats model.

38
00:03:37,390 --> 00:03:42,880
Actually already has an attribute which allows you to fetch the residuals.

39
00:03:42,880 --> 00:03:49,400
So results don't reside is the name of said attribute and heading shift enter.

40
00:03:49,530 --> 00:03:55,140
We get presented with exactly the same thing all right.

41
00:03:55,160 --> 00:03:57,460
Let me count this code out again.

42
00:03:57,890 --> 00:03:59,310
Scroll down a little bit.

43
00:03:59,350 --> 00:04:08,600
Hit shift enter and get to the interesting part namely the part where we are graphing our stuff so I'll

44
00:04:08,600 --> 00:04:20,460
add another comment here that reads graph of actual vs. predicted prices now.

45
00:04:20,470 --> 00:04:26,090
Before I write this code let me explain the rationale of what I'm about to do here.

46
00:04:26,380 --> 00:04:32,090
I want to create a chart that visualizes how good our predictions are.

47
00:04:32,110 --> 00:04:39,700
I want to see how our predictions actually stack up to the actual property prices because seeing this

48
00:04:39,700 --> 00:04:47,760
picture will put the r squared from the regression that we calculated into context if you remember from

49
00:04:47,760 --> 00:04:54,600
our earlier lessons that r squared was kind of a nice one numbers summary for our aggression but it's

50
00:04:54,600 --> 00:04:57,180
definitely not the only thing that we should be looking at.

51
00:04:57,250 --> 00:05:04,830
Now let me ask you this on this chart of the actual versus the predicted prices what would this chart

52
00:05:04,830 --> 00:05:09,450
look like if our model was perfectly accurate.

53
00:05:09,510 --> 00:05:16,360
If it had like perfect predictive capabilities what would you expect to see in that case.

54
00:05:16,400 --> 00:05:22,470
You'd expect that the predicted prices are kind of a really really close match to the actual ones.

55
00:05:22,580 --> 00:05:28,790
In fact you'd get all of these things lining up on a straight line right.

56
00:05:28,850 --> 00:05:36,180
You should have a very very strong correlation between the model's predictions and the actual results.

57
00:05:36,230 --> 00:05:44,420
Let's calculate this correlation and store it in a variable someone say core is equal to y underscore

58
00:05:44,690 --> 00:05:54,910
train dot core parentheses results dot fitted values.

59
00:05:55,180 --> 00:06:02,770
This here calculates the correlation method on our y underscore train object and we provide as an argument

60
00:06:03,310 --> 00:06:07,350
the fitted values from our regression.

61
00:06:07,570 --> 00:06:15,280
Let's put this value here as a core and head shift into the correlation that we see printed out here

62
00:06:15,440 --> 00:06:19,140
is a zero point eight nine approximately.

63
00:06:19,150 --> 00:06:21,160
That's that's quite high actually.

64
00:06:21,280 --> 00:06:23,010
Which is pretty good.

65
00:06:23,020 --> 00:06:30,850
I think one thing I'd like to do though is round this value here so round parentheses and then at the

66
00:06:30,850 --> 00:06:38,500
end here a comma and two somewhere around two decimal places close the parentheses and it shift enter

67
00:06:38,830 --> 00:06:39,540
again.

68
00:06:39,640 --> 00:06:41,460
Nice.

69
00:06:41,470 --> 00:06:47,860
Now let's create a scatter plot using map plot loop which we've stored in our PDT variable.

70
00:06:48,350 --> 00:06:53,030
So let's say party dots scatter parentheses for the x axis.

71
00:06:53,080 --> 00:06:59,950
We're gonna use r y train our actual values for the y axis.

72
00:07:00,010 --> 00:07:01,690
We're gonna use our fitted values.

73
00:07:01,690 --> 00:07:06,310
So this was results dot fitted values.

74
00:07:06,310 --> 00:07:13,150
Now I'm also going to add a color and a transparency to this scatter plot for the color.

75
00:07:13,150 --> 00:07:14,570
C equals.

76
00:07:14,800 --> 00:07:23,770
I'm going to go for maybe navy blue so Navy in single quotes and for the Alpha the transparency.

77
00:07:23,860 --> 00:07:28,180
I'm gonna go for zero point nine maybe six.

78
00:07:28,270 --> 00:07:33,460
Now let me write PDT dot show and take a look at what this looks like.

79
00:07:33,460 --> 00:07:35,510
Here we go.

80
00:07:35,710 --> 00:07:39,120
Now it's a little hard to see what's going on here.

81
00:07:39,130 --> 00:07:47,440
I think we need some labels on our axes and we should also plot a line on this graph that represents

82
00:07:47,440 --> 00:07:48,690
the perfect fit.

83
00:07:48,760 --> 00:07:53,410
So we have a reference point for this scatter plot.

84
00:07:53,410 --> 00:07:56,680
Let me hide this plot by double clicking in here.

85
00:07:57,470 --> 00:08:03,710
And updating our code now and adding our axis labels.

86
00:08:03,710 --> 00:08:12,850
I'm going to show you how you can include scientific notation or latex notation on the labels themselves.

87
00:08:12,940 --> 00:08:19,250
They take notation is something that we've used in our markdown cell but so far we haven't really integrated

88
00:08:19,430 --> 00:08:20,450
into our charts.

89
00:08:20,510 --> 00:08:21,810
So let's do that now.

90
00:08:22,030 --> 00:08:29,990
When I have party X label parentheses and then single quotes actual log prices.

91
00:08:30,440 --> 00:08:32,630
And here's the latest notation.

92
00:08:32,630 --> 00:08:34,280
Dollar Sign Dollar Sign.

93
00:08:34,460 --> 00:08:37,450
And then between the dollar signs when have Y.

94
00:08:38,270 --> 00:08:41,310
And then I want to have like an underscore and then an eye.

95
00:08:42,370 --> 00:08:51,470
Meaning this I will be shown as a subscript and anything between this opening and closing tag will be

96
00:08:51,470 --> 00:08:53,270
treated as later.

97
00:08:53,390 --> 00:09:03,660
Notation let me add a font size as well so comma font size is equal to be 14.

98
00:09:03,770 --> 00:09:05,650
Let's see what this looks like with shift.

99
00:09:05,660 --> 00:09:09,090
Enter.

100
00:09:09,100 --> 00:09:16,840
Here we go has promised we see that why has a subscript that's not the label for the y axis appeal T

101
00:09:16,870 --> 00:09:18,550
dot y label.

102
00:09:19,480 --> 00:09:20,780
And try this one more time.

103
00:09:20,800 --> 00:09:31,690
Say predicted lock prices and for the lay take notation I'm going to say y hat on the score y and I

104
00:09:31,690 --> 00:09:42,970
can do this by having that slash hat for the latest tag and then again I'll have Y underscore I and

105
00:09:42,980 --> 00:09:48,850
also font size equals 14.

106
00:09:48,960 --> 00:09:57,330
Take a look here we can see that the hash tag in the latest notation creates this look Carey symbol

107
00:09:57,900 --> 00:10:00,930
above are y here.

108
00:10:01,140 --> 00:10:02,160
Nice.

109
00:10:02,160 --> 00:10:04,550
Now let's add a title to this chart.

110
00:10:04,890 --> 00:10:14,340
And in the title we'll use both latex notation and we'll use an F string to show our correlation as

111
00:10:14,340 --> 00:10:15,100
well.

112
00:10:15,180 --> 00:10:28,920
So peel T dot title parentheses f single quotes actual verses predicted log prices colon.

113
00:10:29,090 --> 00:10:30,330
Dollar dollar.

114
00:10:30,690 --> 00:10:44,340
And between that all the science y underscore I versus dollar dollar slash had y on the score I and

115
00:10:44,350 --> 00:10:52,720
then outside the dollar sign parentheses core curly braces and then lowercase c o r r which is the name

116
00:10:53,140 --> 00:10:59,030
of our variable here and at the end of course we've got close and curly braces.

117
00:10:59,170 --> 00:11:08,840
The closing parentheses for this one single quotes finish it all off and maybe a font size of say Uh

118
00:11:08,910 --> 00:11:10,230
17.

119
00:11:10,300 --> 00:11:12,640
Let's take a look.

120
00:11:12,850 --> 00:11:15,220
Fatal Exception.

121
00:11:15,220 --> 00:11:17,290
What was the problem.

122
00:11:17,290 --> 00:11:21,470
A typo in the late hash tag.

123
00:11:21,580 --> 00:11:25,360
It should read slash hat.

124
00:11:25,390 --> 00:11:26,890
There we go.

125
00:11:26,890 --> 00:11:30,580
So I think this chant is already starting to look pretty good.

126
00:11:30,580 --> 00:11:37,510
The only thing missing is that line that represents perfect predictions and we can add that up here

127
00:11:37,540 --> 00:11:44,900
with peal T dot plot plotting a single line and that line for the X and the y will be the same.

128
00:11:45,130 --> 00:11:53,890
So in this case it would be y train comma Y train and I'm gonna give it a different color as well so

129
00:11:53,890 --> 00:12:02,160
color is equal to say scion they'll make it stand out quite nicely so check it out.

130
00:12:02,200 --> 00:12:03,330
Here we go.

131
00:12:03,550 --> 00:12:06,960
This side line would represent a perfect prediction.

132
00:12:07,030 --> 00:12:13,930
So it goes through all these great points here two into two and a half in two and a half three and three

133
00:12:13,930 --> 00:12:15,600
and a half right.

134
00:12:15,680 --> 00:12:24,160
And this allows us to see how our predictions stack up to the actual values very very clearly.

135
00:12:24,160 --> 00:12:29,530
The bigger the distance from the sine line the bigger the residual.

136
00:12:29,530 --> 00:12:35,500
In other words in this part of the chart our model is doing really really well.

137
00:12:35,500 --> 00:12:40,850
But for these data points here we have much larger residuals.

138
00:12:40,990 --> 00:12:45,130
Now what if looking at log prices isn't that helpful.

139
00:12:45,130 --> 00:12:53,070
What if you wanted to look at the actual prices the actual dollar values because that's much more intuitive.

140
00:12:53,080 --> 00:12:55,840
All we have to do is reverse our transformation right.

141
00:12:56,470 --> 00:12:59,650
So let's create a second chart below this one.

142
00:12:59,800 --> 00:13:01,910
I'll take this code here.

143
00:13:01,960 --> 00:13:04,530
Copy and paste it below.

144
00:13:05,410 --> 00:13:15,100
And then all I have to do to reverse the transformation is raise our data points to the power of E so

145
00:13:15,220 --> 00:13:17,730
n p dot e times times.

146
00:13:17,740 --> 00:13:23,040
Which raises it to the power and will do the same thing here and p dot e.

147
00:13:24,030 --> 00:13:28,320
Raise it to the power of our residuals.

148
00:13:28,320 --> 00:13:30,780
And of course we have to do the same thing here and be done.

149
00:13:30,810 --> 00:13:43,470
E How times times and p e times times and then actual prices in the label predicted prices in the label

150
00:13:43,590 --> 00:13:49,740
and then for the title will also do that to differentiate the two charts visually.

151
00:13:49,830 --> 00:13:54,010
I'm just gonna go with straightforward blue for this one source kind of plot here.

152
00:13:54,150 --> 00:14:04,930
We'll just be blue shift enter updates what we see and now our axes are transformed and we see our dollar

153
00:14:04,930 --> 00:14:09,460
prices in thousands can even add that to the label.

154
00:14:09,670 --> 00:14:27,470
So actual prices 0 0 0 S. And here predicted prices 0 0 0 s shift into and now our labels are updated.

155
00:14:27,820 --> 00:14:33,400
Now that we've got our charts pretty much where we want them to be we can start to interpret what it

156
00:14:33,400 --> 00:14:34,360
is that we're looking at.

157
00:14:35,550 --> 00:14:43,240
How do you think our predictions are stacking up to the actual values looking at these charts.

158
00:14:43,260 --> 00:14:45,100
I think we're doing actually rather well.

159
00:14:45,450 --> 00:14:49,890
And what we're seeing here pretty much ties out with the expectations that we had.

160
00:14:49,890 --> 00:14:52,510
Looking at the high R squared.

161
00:14:52,710 --> 00:14:58,520
A lot of the predictions in fact are very close to this scion line here.

162
00:14:58,520 --> 00:15:03,440
Mind you this side line is not the best fit line for the scatter plot.

163
00:15:03,440 --> 00:15:08,780
The line here shows where a points would have to be if our predictions were perfect and our residuals

164
00:15:08,810 --> 00:15:10,660
would be equal to zero.

165
00:15:10,760 --> 00:15:15,540
The sideline represents where y hat would be equal to y.

166
00:15:15,860 --> 00:15:22,270
But looking at this chart I do see something that kind of concerns me a little bit.

167
00:15:22,280 --> 00:15:25,900
Take a look at this top right corner here.

168
00:15:25,940 --> 00:15:33,300
There's definitely something kind of strange happening with the properties at the very top price bracket.

169
00:15:33,380 --> 00:15:40,460
These are the properties at the fifty thousand dollar mark here you can see that our residuals are actually

170
00:15:40,460 --> 00:15:45,850
fairly large and our model is performing quite poorly.

171
00:15:45,950 --> 00:15:53,210
If you remember we actually visualized all our target values in our data exploration stage and then

172
00:15:53,210 --> 00:16:00,230
we already spotted that there were quite a few properties at the top end of the price bracket and that

173
00:16:00,230 --> 00:16:07,460
given this histogram these kind of struck us as outliers and we suspected that maybe these might cause

174
00:16:07,460 --> 00:16:10,080
an issue down the line.

175
00:16:10,160 --> 00:16:15,140
What I'm saying is is that yes there's room for improvement in our model obviously.

176
00:16:15,350 --> 00:16:20,440
But overall I think I'm pretty happy with what we've got so far.

177
00:16:20,690 --> 00:16:28,220
After all we're dealing with a real data set so it's nice to see things line up to the extent that they

178
00:16:28,220 --> 00:16:28,490
do.
