WEBVTT
1
00:00:00.690 --> 00:00:02.380
Welcome back.

2
00:00:02.400 --> 00:00:10.720
In this video we're going to talk about what stems and words stemming as well as removing punctuation.

3
00:00:10.740 --> 00:00:16.970
These are gonna be the next two steps in our pre processing stage again and we'll work with an example

4
00:00:16.970 --> 00:00:21.330
sentence before applying the all of this to our email dataset.

5
00:00:21.560 --> 00:00:32.040
I'm going to add a quick markdown cell here that reads words stems and stemming now what do I mean when

6
00:00:32.040 --> 00:00:39.870
I say word stems and words stemming you see stemming is the process of reducing words to their base

7
00:00:39.990 --> 00:00:42.000
or their root form.

8
00:00:42.000 --> 00:00:48.370
The idea behind words stemming is to treat inflected or derived words in the same way.

9
00:00:48.420 --> 00:00:56.010
So for example the words fishing fished Fisher and fish like are all reduced by the steamer to the word

10
00:00:56.010 --> 00:01:04.860
fish endings like ISG and fishing or E.D. in fished are removed by the stemming software.

11
00:01:04.860 --> 00:01:12.760
Now the thing to note about stemming is that the steamer might not produce quote unquote proper words.

12
00:01:12.900 --> 00:01:17.010
That is to say you might not end up with a real word.

13
00:01:17.010 --> 00:01:18.780
After removing the stem.

14
00:01:19.110 --> 00:01:29.310
So for example the words argue argued argues and arguing are all stemmed to the word argue now this

15
00:01:29.310 --> 00:01:30.760
is not an error.

16
00:01:30.780 --> 00:01:38.730
The purpose of the stemming algorithm is to bring the variant forms of the word together and not to

17
00:01:38.730 --> 00:01:43.010
map a word to its paradigm form if you will.

18
00:01:43.680 --> 00:01:49.110
The stammer that I'd like to introduce to you is the de facto standard steamer for the English language

19
00:01:49.650 --> 00:01:51.660
the port EMR.

20
00:01:51.780 --> 00:01:57.840
This algorithm was written by Martin Porter all the way back in the 1980s at the University of Cambridge

21
00:01:59.130 --> 00:02:00.280
in a previous lesson.

22
00:02:00.330 --> 00:02:08.600
We've already imported the porter sum of functionality from an al T.K. at the top of our Jupiter notebook.

23
00:02:08.610 --> 00:02:11.560
Now it's time to put it to use.

24
00:02:11.580 --> 00:02:20.820
I'm going to copy this cell here and then I'm going to paste it below my marker what I can do now is

25
00:02:20.820 --> 00:02:29.250
simply save the portal stem up to a variable so I'll just say stammer equals Porto stem up parentheses

26
00:02:30.450 --> 00:02:32.730
and then to use this demo.

27
00:02:33.000 --> 00:02:40.230
I'm going to go inside my for loop just before appending the words I'll create another variable called

28
00:02:40.980 --> 00:02:49.660
stemmed underscore would and this will be equal to the result of the stem method from the stammer.

29
00:02:49.800 --> 00:02:57.240
So when I use the stammer put a dot after it called a STEM method and then hit between the parentheses

30
00:02:57.540 --> 00:03:05.220
I'm going to supply the word that our loop is looping over stem the word stored inside this variable

31
00:03:05.220 --> 00:03:12.940
here and then instead of appending the original word I will simply append the stemmed word.

32
00:03:13.020 --> 00:03:20.190
Now looking at our example sentence here the word makes is a clear clear candidate for stemming let

33
00:03:20.190 --> 00:03:28.070
me hit shift enter and see what it will be stem to makes its attempt to make.

34
00:03:28.070 --> 00:03:32.650
Now it turns out this was only one word in our example sentence that was stemmed.

35
00:03:32.780 --> 00:03:38.930
Perhaps we should add another word that's stemming candidate at the very end just to try out how the

36
00:03:38.930 --> 00:03:40.390
stem or works.

37
00:03:40.700 --> 00:03:50.240
I'm going to expand the example sentence with a few more words so I'm gonna wrap my line across two

38
00:03:50.240 --> 00:03:55.490
lines on Python so I don't have a very very long sentence all in the same line.

39
00:03:55.910 --> 00:04:01.910
So when you use that backslash that escape character which escapes me pressing enter on my keyboard

40
00:04:03.090 --> 00:04:05.910
now I'm going to add a few more words to my example sentence.

41
00:04:06.010 --> 00:04:11.110
Nobody expects the Spanish Inquisition.

42
00:04:13.340 --> 00:04:13.850
There we go.

43
00:04:14.270 --> 00:04:17.350
Let's see how our ports steamer handles this.

44
00:04:17.600 --> 00:04:27.440
So quite interesting nobody gets steamed to nobody with an eye with expect the stomach drops the S and

45
00:04:27.440 --> 00:04:34.340
with the word Inquisition the steamer drops the letters I oh and at the end now one thing I'll say is

46
00:04:34.340 --> 00:04:41.150
that you're not actually limited to using the port ACMA from the multi K tool box there's quite a few

47
00:04:41.150 --> 00:04:46.130
to choose from there's almost like a menu the reason you might want to use a different steamer other

48
00:04:46.130 --> 00:04:53.280
than the ports demo for example is if you're stemming a different language scrolling up to the top tour

49
00:04:53.300 --> 00:05:03.560
imports a popular choice for other steamers is the snowball steamer so an K dots them can also import

50
00:05:03.680 --> 00:05:11.930
the snowball steamer and the nice thing with the snowball steamer is that if I come down here copy this

51
00:05:11.930 --> 00:05:22.890
line comment this out pasted in and substitute the snowball steamer here I can choose a language for

52
00:05:22.890 --> 00:05:32.220
example yeah English obviously we can use the snowball steamer with English but if we go to the documentation

53
00:05:32.220 --> 00:05:41.850
him from an LTE K and we scroll down a bit to the snowball steamer then what you'll see is that there's

54
00:05:41.880 --> 00:05:49.890
other options to write there's Arabic there's Finnish there's French there's German there's Hungarian

55
00:05:50.610 --> 00:05:57.330
Swedish Norwegian quite a few Romanian like the list goes on right Russian so you can have a look I'll

56
00:05:57.330 --> 00:06:03.810
put the link in the lesson resources so yeah if you ever want to stem words and use this tool on text

57
00:06:03.840 --> 00:06:05.220
that is not English.

58
00:06:05.220 --> 00:06:12.810
The Snowball steamer is your friend okay so that pretty much covers stemming the next thing that will

59
00:06:12.810 --> 00:06:20.730
do to clean up the email text and the words is to remove the punctuation are spam classifier is not

60
00:06:20.730 --> 00:06:26.520
gonna be very interested in the punctuation for the sentences we can see at the moment we still have

61
00:06:26.520 --> 00:06:33.750
these full stops in our output and a exclamation mark and if we add question marks or anything else

62
00:06:34.110 --> 00:06:35.860
it'll show up as well.

63
00:06:36.730 --> 00:06:45.550
To remove the punctuation I'm going to copy the some pasted below and then also just quickly add a markdown

64
00:06:45.550 --> 00:06:48.550
cell here to commemorate what we're doing.

65
00:06:48.700 --> 00:06:58.650
So I'll say removing punctuation and then I'll delete a few of these comments here format this slightly

66
00:06:58.650 --> 00:07:06.560
differently maybe I had the odd question mark here hit shift enter and now we're ready to go.

67
00:07:06.830 --> 00:07:13.280
Removing punctuation is well I think there's like an easy way and there's a hard way and I'll show you

68
00:07:13.280 --> 00:07:21.620
the easiest way you can do this you see Python strings have a fantastic method called is alpha so if

69
00:07:21.620 --> 00:07:29.300
you've got a string say a single character the letter P and you put a dot after it and then type is

70
00:07:30.170 --> 00:07:40.310
Alpha just like so then this will check if you've got a character or punctuation in this case the method

71
00:07:40.310 --> 00:07:51.730
returns true but if we had say a question mark and wrote is alpha then this would return false move

72
00:07:51.740 --> 00:08:00.620
these cells up slightly so we've got them up here and I want to maybe pose a mini challenge to you can

73
00:08:00.620 --> 00:08:08.900
you modify our code in this cell so that all these special characters hear all these punctuation characters

74
00:08:09.020 --> 00:08:16.460
full stop question marks exclamation marks get excluded from the output what would you change in our

75
00:08:16.460 --> 00:08:24.530
code here to accomplish this I'll give you a few seconds to pause the video and then I'll show you the

76
00:08:24.530 --> 00:08:34.780
solution did you have a go what I would do is to modify this condition here not only would I check if

77
00:08:34.780 --> 00:08:43.390
the word is part of the stop words but I would also say that punctuation should not be included in our

78
00:08:43.390 --> 00:08:53.560
list so we can take the word put a dot after it and say is Alpha parentheses this bit of code will only

79
00:08:53.560 --> 00:09:03.040
return true if it hits an actual word like boy or adult it will not return true for the full stops or

80
00:09:03.040 --> 00:09:07.290
the question marks let's check it out if it works.

81
00:09:07.290 --> 00:09:11.530
Surprise surprise I've planned out this tutorial and it and it does work.

82
00:09:11.700 --> 00:09:13.860
So there you go.

83
00:09:13.860 --> 00:09:19.950
This is how you can use a built in method from the Python strings to check for punctuation and excluded

84
00:09:20.160 --> 00:09:23.210
if necessary in the next lesson.

85
00:09:23.280 --> 00:09:27.610
I'm going to show you how to tackle the HDMI tags in the emails.

86
00:09:27.660 --> 00:09:28.500
I'll see you there.

87
00:09:28.500 --> 00:09:29.100
Stay tuned.
