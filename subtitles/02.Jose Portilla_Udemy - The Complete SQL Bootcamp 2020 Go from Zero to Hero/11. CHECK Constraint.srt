1
00:00:05,310 --> 00:00:11,920
Welcome back everyone to this lecture on the cheque constraint the check constraint allows us to create

2
00:00:11,920 --> 00:00:18,220
more customized constraints that adhere to a certain condition such as making sure all inserted integer

3
00:00:18,220 --> 00:00:21,550
values fall below a certain threshold.

4
00:00:21,580 --> 00:00:27,670
So for example let's imagine we're creating a table called example and it's going to just have an example

5
00:00:27,700 --> 00:00:33,670
I.D. column which is serial PRIMARY KEY AND THEN WE HAVE AN H column and let's say for this particular

6
00:00:33,670 --> 00:00:40,570
example we have to make sure that the people are over 21 so we'll say age small integer for the data

7
00:00:40,570 --> 00:00:46,570
type and then we add in this check constraint and after the check constraint we just have some condition

8
00:00:46,630 --> 00:00:52,630
such as the H column must be greater than twenty one and we can also set conditions based off other

9
00:00:52,630 --> 00:00:53,560
columns.

10
00:00:53,560 --> 00:00:59,570
So let's add in a new column called The Parent H and then again small integer as the data type and for

11
00:00:59,570 --> 00:01:05,570
its check constraint it's going to say that the parents age column must be greater than the age column.

12
00:01:05,710 --> 00:01:12,610
And so if you try to insert a person at this table who has an age that's less than twenty one or if

13
00:01:12,610 --> 00:01:17,890
you try to insert a person here that has a parent age that is less than their own age and that doesn't

14
00:01:17,890 --> 00:01:19,040
really make sense.

15
00:01:19,210 --> 00:01:26,460
We'll go ahead and produce an error let's explore this concept a little further in P.G. admin to show

16
00:01:26,460 --> 00:01:28,800
you what we can do with the check constraint.

17
00:01:28,830 --> 00:01:35,670
I'm going to create a new table and we're going to create a table of employees let's say employees have

18
00:01:36,120 --> 00:01:44,840
an I.D. and we'll say employee I.D. that's going to be serial and it's going to be a primary key.

19
00:01:45,240 --> 00:01:51,660
Then they have a first name which we'll say is a variable character.

20
00:01:52,040 --> 00:01:57,650
Let's give them up to 50 characters for their first name and no constraints here or we can add something

21
00:01:57,650 --> 00:01:58,670
like let's say not no.

22
00:01:58,700 --> 00:02:06,800
They need to have a first name and then something else we can do is give them a last name variable character.

23
00:02:06,800 --> 00:02:14,080
Let's say 50 let's say they also need a last name and let's start adding things maybe like a birthday.

24
00:02:14,120 --> 00:02:24,740
So if we say birthday column this should be a date and let's make sure that the birthday happens to

25
00:02:24,740 --> 00:02:28,920
be greater than or past nineteen hundred.

26
00:02:29,060 --> 00:02:39,270
So we'll say check that the birthday is greater then and we'll say nineteen hundred and January 1st.

27
00:02:39,450 --> 00:02:46,440
Basically we won't allow anyone to say their birthday is before the year nineteen hundred and let's

28
00:02:46,500 --> 00:02:52,410
add in Alaska maybe last two columns one column to say the date they join.

29
00:02:52,410 --> 00:02:55,260
So we'll say higher date.

30
00:02:55,260 --> 00:03:05,410
This is a date and we want to make sure to check that there join date or higher date happens to be greater

31
00:03:05,410 --> 00:03:10,930
than their actual birth date and list changes to birth date.

32
00:03:10,960 --> 00:03:16,120
Just so it's clear that we're not referring to just the day of their birth but the actual dates of their

33
00:03:16,120 --> 00:03:17,530
birth.

34
00:03:17,760 --> 00:03:23,920
OK so we have this birth date and their birth date has to be greater than January 1st nineteen hundred

35
00:03:24,340 --> 00:03:29,320
and then we have their higher dates and their higher date has to come after the day they were born which

36
00:03:29,320 --> 00:03:30,760
makes sense.

37
00:03:31,240 --> 00:03:35,580
And then finally let's go ahead and give them a salary.

38
00:03:35,650 --> 00:03:38,450
This will be let's say a numeric data type.

39
00:03:38,470 --> 00:03:45,630
Just go ahead to have it be integer or numeric so it's say data type is integer.

40
00:03:45,880 --> 00:03:51,040
And then finally let's go ahead and make sure that the salary has to be greater than zero.

41
00:03:51,040 --> 00:03:54,160
So we can't actually input a negative salary there.

42
00:03:54,220 --> 00:03:58,330
So we have these various columns along with these check constraints.

43
00:03:58,360 --> 00:04:03,220
You have a check constraint against a date a check constraint against another column and a check constraint

44
00:04:03,670 --> 00:04:06,520
against some salary or integer.

45
00:04:06,520 --> 00:04:07,120
We run this.

46
00:04:07,120 --> 00:04:09,000
We've created that table looks good.

47
00:04:09,340 --> 00:04:18,700
Let's go ahead and now attempt to insert someone into this table so say insert into the employees table

48
00:04:19,570 --> 00:04:26,230
and then we're going to go ahead and grab those columns so those columns you only worry about the employee

49
00:04:26,230 --> 00:04:26,530
I.D..

50
00:04:26,530 --> 00:04:28,200
That was a cereal column.

51
00:04:28,300 --> 00:04:40,700
We'll say we're going to insert a first name a last name their birth date their higher date and then

52
00:04:40,700 --> 00:04:41,690
their salary.

53
00:04:41,690 --> 00:04:45,960
So those are the columns we're going to be inserting into analysis.

54
00:04:46,010 --> 00:04:48,660
Choose some values basically just made it values.

55
00:04:48,800 --> 00:04:51,650
We'll go ahead and I'll show you some of my values here.

56
00:04:51,650 --> 00:05:01,290
We'll see who's a tortilla and then what I'm going to do is let's go ahead and add in some birthdate

57
00:05:01,620 --> 00:05:06,330
I'm actually going to insert some wrong values so we can see the check constraints at work.

58
00:05:06,330 --> 00:05:21,920
So let's say I was born eighteen ninety nine let's say 11 0 3 and let's say I was hired in 2010 0 1

59
00:05:21,920 --> 00:05:27,780
0 1 and let's give me a salary of one hundred dollars.

60
00:05:27,780 --> 00:05:32,280
So if I try to run this I'm going to zoom out just a little bit so we can see kind of everything at

61
00:05:32,280 --> 00:05:32,700
once.

62
00:05:32,700 --> 00:05:34,130
We'll go ahead and run this.

63
00:05:34,200 --> 00:05:39,800
I get back error neuro for relation employee violates a check constraint on the employee's birthdate

64
00:05:39,810 --> 00:05:40,620
check.

65
00:05:40,620 --> 00:05:41,550
OK cool.

66
00:05:41,580 --> 00:05:42,490
So it looks like it.

67
00:05:42,540 --> 00:05:43,290
That worked.

68
00:05:43,530 --> 00:05:44,540
It's going to change this.

69
00:05:44,550 --> 00:05:50,480
I'll make this nineteen ninety will run this and now I was able to successfully insert that.

70
00:05:50,670 --> 00:06:01,110
Let's go ahead and add in a new employee let's call them Sammy let's call this Sammy Smith.

71
00:06:01,110 --> 00:06:02,570
We'll go ahead have him be the same birth date.

72
00:06:02,580 --> 00:06:08,140
But now let's actually say we put a negative 100 as our salary will run this.

73
00:06:08,340 --> 00:06:12,200
It looks like that fails constraint for employee salary check.

74
00:06:12,270 --> 00:06:14,750
So remove that negative.

75
00:06:14,760 --> 00:06:15,810
Run it again.

76
00:06:15,930 --> 00:06:17,730
It looks like everything's working.

77
00:06:17,730 --> 00:06:27,470
So if we select all from employees run that I have of Jose and Sammy same birthday and same salary.

78
00:06:28,140 --> 00:06:35,400
OK something that's really cool to notice here is that the cereal actually kept the count of those failed

79
00:06:35,790 --> 00:06:42,090
attempts to insert so I failed on my first attempt to insert which means it started the primary key

80
00:06:42,090 --> 00:06:44,730
at 2 then I failed another attempt.

81
00:06:44,880 --> 00:06:49,190
And then when I got Sammy right on the fourth time it gave it a primary key A4.

82
00:06:49,200 --> 00:06:54,870
So this actually lets you know that rows were either removed or insert commands failed before hos ay

83
00:06:54,960 --> 00:07:00,460
and after Hosie so kind of interesting aspect of the serial data type there.

84
00:07:01,230 --> 00:07:03,530
OK thanks and I'll see you at the next lecture.
