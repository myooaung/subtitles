WEBVTT
1
00:00:05.410 --> 00:00:10.780
Welcome back everyone to this lecture series on timestamps and extract functionality.

2
00:00:10.780 --> 00:00:11.460
In part one.

3
00:00:11.500 --> 00:00:17.860
We're going to focus on displaying current time information so as I just mentioned in this lecture we're

4
00:00:17.860 --> 00:00:23.470
going to be going over a few commands and functions that report back time and date information.

5
00:00:23.470 --> 00:00:28.930
Something to keep in mind is that these functions will be more useful when we're creating our own tables

6
00:00:28.990 --> 00:00:33.370
and databases rather than when we're just querying a database.

7
00:00:33.370 --> 00:00:37.390
We're going to be learning about creating our own tables and databases later on in the course.

8
00:00:37.480 --> 00:00:40.240
But it makes sense to learn about a few commands and data types.

9
00:00:40.240 --> 00:00:47.870
Right now so we've already seen in our tables that post graphs equal can hold date and time information.

10
00:00:47.870 --> 00:00:54.290
For example we saw that timestamp data type column for things like when a customer actually rented a

11
00:00:54.290 --> 00:00:54.890
DVD.

12
00:00:55.640 --> 00:01:00.710
Now keep in mind there's actually different subsets of data types that refer to things like storing

13
00:01:00.710 --> 00:01:07.730
time information or date information and the four main ones are the time data type which contains only

14
00:01:07.730 --> 00:01:10.630
time such as hours minutes and seconds.

15
00:01:10.850 --> 00:01:16.790
Then there's the date data type which contains only a date the month day and year.

16
00:01:16.940 --> 00:01:22.070
And then there's timestamp which essentially combines both of those and contains both date information

17
00:01:22.130 --> 00:01:29.960
and time information and there's timestamp T.C. or timestamp Time Zone which contains date time and

18
00:01:29.960 --> 00:01:34.190
time zone information something to keep in mind.

19
00:01:34.200 --> 00:01:38.680
And we'll talk about this later on when we're learning about creating our own tables and databases is.

20
00:01:38.730 --> 00:01:44.820
You should have or perform careful considerations when designing a table and database and choosing a

21
00:01:44.820 --> 00:01:46.610
time data type.

22
00:01:46.620 --> 00:01:52.470
Keep in mind depending on the situation you may or may not need the full level of dates times and time

23
00:01:52.470 --> 00:01:53.370
zones.

24
00:01:53.370 --> 00:02:00.330
For example if you're designing a table that will calculate how many hours people worked you may actually

25
00:02:00.330 --> 00:02:05.910
just need time information the time they clocked in and then the time they clock out especially if Each

26
00:02:05.910 --> 00:02:08.130
row represents a work shift.

27
00:02:08.160 --> 00:02:13.320
There's no point in keeping track of time zone because you don't expect this person to be changing time

28
00:02:13.320 --> 00:02:16.020
zones and one shift of work.

29
00:02:16.200 --> 00:02:23.430
Now something to critically remember is if you are keeping track of historical time information or date

30
00:02:23.430 --> 00:02:28.320
information or timestamp information and you're trying to perform some sort of calculation like maybe

31
00:02:28.560 --> 00:02:33.800
how many days worked or something of that nature you can always remove historical information.

32
00:02:33.870 --> 00:02:39.090
For example if you're keeping track of time stamp tizzy and later on you discover you don't actually

33
00:02:39.090 --> 00:02:40.590
need time zone information.

34
00:02:40.680 --> 00:02:46.500
You can always remove that times when information but what you cannot do is go back and add it in because

35
00:02:46.500 --> 00:02:48.850
you were never recording it in the first place.

36
00:02:48.870 --> 00:02:54.150
So that's really the careful consideration to make is that if you're recording time or date information

37
00:02:55.110 --> 00:03:00.780
and you decide later on that you wanted to go back and also record time zone information because maybe

38
00:03:00.780 --> 00:03:06.340
your company expanded globally you can't actually just make that information pop out of nowhere.

39
00:03:06.390 --> 00:03:11.970
So you should always have that careful consideration and try to think long term when choosing a particular

40
00:03:12.030 --> 00:03:18.610
time data type now if that being said I want to just quickly explore a couple of functions and operations

41
00:03:18.910 --> 00:03:22.400
related to these specific data types and those are our time zone.

42
00:03:22.540 --> 00:03:28.390
Now time of day current time and current date and as I mentioned these are more useful when we're creating

43
00:03:28.390 --> 00:03:35.170
tables or having a table automatically populate entries based off when something is actually created

44
00:03:35.170 --> 00:03:38.460
like what time is this row actually being created.

45
00:03:38.470 --> 00:03:43.180
So we're going quickly go over these and don't expect them to be super useful for queries but later

46
00:03:43.180 --> 00:03:45.150
on we'll encounter some of these functions.

47
00:03:45.250 --> 00:03:49.150
They're pretty self-explanatory so I'm just going to head straight to PGI admin and work through a few

48
00:03:49.150 --> 00:03:50.180
examples.

49
00:03:50.230 --> 00:03:50.500
OK.

50
00:03:50.500 --> 00:03:55.930
Here I am and post press sequel and I've connected to my DVD rental database.

51
00:03:55.930 --> 00:04:00.760
Now let's first show you had actually understand and grab what is your current time zone that you're

52
00:04:00.760 --> 00:04:05.070
working in and the way we do that is with the show command.

53
00:04:05.140 --> 00:04:07.110
And we haven't actually seen this before.

54
00:04:07.120 --> 00:04:11.770
Keep in mind I'm not going to do select I'm going to do show and the main command.

55
00:04:11.770 --> 00:04:14.130
People can use of show is show all.

56
00:04:14.320 --> 00:04:20.080
And if you check out the documentation for Postgres sequel on show it shows the values of a bunch of

57
00:04:20.080 --> 00:04:21.790
runtime parameters.

58
00:04:21.790 --> 00:04:26.760
And there's a list of parameters here and you can scroll down and view more information on them.

59
00:04:26.860 --> 00:04:31.110
But if you just say show all and then run this query go ahead and run that.

60
00:04:31.300 --> 00:04:37.120
You'll notice there's a name of a parameter the setting it's currently on and then a description text

61
00:04:37.150 --> 00:04:41.650
basically telling you and explaining what that name and setting refer to.

62
00:04:41.650 --> 00:04:45.120
So for example my current application is PGI admin for.

63
00:04:45.130 --> 00:04:48.910
And if I keep expanding on this they'll tell me what actual connection I'm on.

64
00:04:49.060 --> 00:04:54.450
And if you scroll down there's actually about 300 different parameters you can see here.

65
00:04:54.490 --> 00:05:01.570
And so one of them you can check out quickly is time zone go ahead and run that and you can see here

66
00:05:01.600 --> 00:05:06.940
that on the computer I'm working on that my current time zone is U.S. Eastern.

67
00:05:06.940 --> 00:05:07.450
OK.

68
00:05:07.600 --> 00:05:13.840
So let's I can figure out what time zone you're working with now if you actually want to get the current

69
00:05:13.960 --> 00:05:18.980
timestamp and recall timestamp includes both date and time information.

70
00:05:19.060 --> 00:05:22.860
Here we come back and we'll say select.

71
00:05:23.320 --> 00:05:25.310
And then we're going to call the now function.

72
00:05:25.330 --> 00:05:30.160
So it's now open and closed parentheses which basically just says Give me the timestamp information

73
00:05:30.190 --> 00:05:31.060
for right now.

74
00:05:31.150 --> 00:05:38.170
And and once you run that you'll be able to see that you get a timestamp with a time zone set of information

75
00:05:38.650 --> 00:05:45.430
so you can see the dates and then the time as well as information concerning what actual time zone you're

76
00:05:45.430 --> 00:05:53.100
in based off standard GMT which stands for Greenwich Mean Time and you can just do a quick google search

77
00:05:53.100 --> 00:05:58.580
on that which is basically just an international way of marking what time zone you're in.

78
00:05:58.650 --> 00:06:04.210
So you can you select now to get your current timestamp one thing to notice is that this gives it to

79
00:06:04.210 --> 00:06:09.670
you in kind of timestamp format which is sometimes a little hard to read if you want to as a string

80
00:06:10.030 --> 00:06:15.220
you can say select time of day open and close parentheses run that.

81
00:06:15.220 --> 00:06:22.060
And this returns back basically the same information but as a string labeling it Thursday March 19th

82
00:06:22.150 --> 00:06:26.160
and then time and then the year as well as the time zone.

83
00:06:26.170 --> 00:06:31.690
So a little easier to read and possibly a little easier to store and grab components from because it's

84
00:06:31.690 --> 00:06:33.780
just a text string with that information.

85
00:06:33.880 --> 00:06:37.940
It's actually no longer a specific time stamp style.

86
00:06:37.990 --> 00:06:43.390
And then finally the last two commands are basically subsets of this instead of grabbing the current

87
00:06:43.390 --> 00:06:44.100
timestamp.

88
00:06:44.110 --> 00:06:50.740
You can just grab just the current time which should be select current time run that that gives you

89
00:06:50.740 --> 00:06:56.320
just the time with time zone or you could change it to current dates run that and that basically just

90
00:06:56.320 --> 00:06:58.050
gives you the current dates.

91
00:06:58.240 --> 00:06:58.980
Okay.

92
00:06:58.990 --> 00:07:05.170
So now we know how to grab the time zone information the full timestamp with now functionality and then

93
00:07:05.290 --> 00:07:10.830
how to grab the time of day which is this string representation of the timestamp that it currently is.

94
00:07:10.990 --> 00:07:15.940
And then how to grab current dates and current time subcomponents of that this would be a lot more important

95
00:07:15.940 --> 00:07:21.720
when we're creating different rows and tables and then trying to log stuff of when it was actually created.

96
00:07:21.790 --> 00:07:26.590
We won't typically be asking for what the current date is which sequel just like this.

97
00:07:26.620 --> 00:07:27.910
Instead just use your clock.

98
00:07:28.450 --> 00:07:29.000
OK.

99
00:07:29.140 --> 00:07:34.330
So coming up next we're going to focus on timestamp functionality that's related to querying tables

100
00:07:34.330 --> 00:07:35.200
and databases.

101
00:07:35.230 --> 00:07:37.360
So I will see you there in the next lecture.
