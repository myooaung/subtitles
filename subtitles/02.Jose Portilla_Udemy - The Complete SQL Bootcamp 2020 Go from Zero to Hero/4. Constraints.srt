1
00:00:05,570 --> 00:00:10,430
Welcome back everyone to this lecture on constraints constraints is the last thing we're going to learn

2
00:00:10,430 --> 00:00:17,420
about theory lies before we actually head into using sequel syntax to create tables constraints are

3
00:00:17,420 --> 00:00:23,790
the rules enforced on data columns on a table that can also be used to constrain everything in a table.

4
00:00:23,810 --> 00:00:26,160
And we'll talk about that in just a second.

5
00:00:26,210 --> 00:00:30,830
So constraints are used to prevent invalid data from being entered into the database.

6
00:00:30,830 --> 00:00:37,660
This ensures the accuracy and reliability of the data in the database constraints can generally be divided

7
00:00:37,660 --> 00:00:39,330
into two main categories.

8
00:00:39,370 --> 00:00:44,920
There are constraints on a column which constrains the data in a single column to adhere to certain

9
00:00:44,920 --> 00:00:45,820
conditions.

10
00:00:45,910 --> 00:00:51,030
And then there are table constraints which are applied to the entire table rather to just an individual

11
00:00:51,040 --> 00:00:58,180
column so let's talk about some of the most common constraints used the first one is not null.

12
00:00:58,290 --> 00:01:01,200
So the not no constraint it's pretty self-explanatory.

13
00:01:01,200 --> 00:01:06,510
It's essentially telling you that a column cannot have a null value essentially if you're going to enter

14
00:01:06,510 --> 00:01:08,010
data into this row.

15
00:01:08,010 --> 00:01:09,540
That includes this column.

16
00:01:09,540 --> 00:01:12,450
It has to actually include a value for this column.

17
00:01:12,480 --> 00:01:18,030
So for example if you're creating a table that happens to take in customer information and you always

18
00:01:18,030 --> 00:01:22,760
need an email from them then you can say that the email column has a not null constraint.

19
00:01:22,830 --> 00:01:27,070
Essentially saying that you are required to provide an email for this customer.

20
00:01:27,150 --> 00:01:31,280
Otherwise it's an invalid row and it won't let you add it to the table.

21
00:01:31,440 --> 00:01:35,080
Then another constraint that's really common is the unique constraint.

22
00:01:35,100 --> 00:01:38,400
This ensures that all values in a column are different.

23
00:01:38,400 --> 00:01:44,190
So a unique constraint could be used as something like a customer I.D. column because you want each

24
00:01:44,190 --> 00:01:46,440
customer I.D. to be unique.

25
00:01:46,620 --> 00:01:51,000
You wouldn't want to use a unique constraint on something like a first name column because people can

26
00:01:51,000 --> 00:01:53,520
definitely have the same first name so unique.

27
00:01:53,520 --> 00:01:58,330
Again ensures all values in a column are distinct or different.

28
00:01:58,370 --> 00:02:01,830
Then there are primary key and foreign key constraints.

29
00:02:01,850 --> 00:02:06,140
We already learned about Primary Key and Foreign Key but the way you actually define them when you're

30
00:02:06,260 --> 00:02:09,640
constructing your own table is you set them up as a constraint.

31
00:02:09,860 --> 00:02:16,220
So the primary key uniquely identifies each row or record in the database table and a foreign key constraints

32
00:02:16,220 --> 00:02:18,530
data based on columns and other tables.

33
00:02:18,530 --> 00:02:22,940
So when you're setting up a foreign key you'll actually also set up a relationship to another table

34
00:02:22,940 --> 00:02:29,530
you created and there's two more column constraints I want to mention here and check and exclusion.

35
00:02:29,530 --> 00:02:31,990
Are these constraints they're a little more complicated.

36
00:02:32,020 --> 00:02:35,890
So I'm just going to give you the official definition for now and they're going to make more sense in

37
00:02:35,890 --> 00:02:39,340
the next series of lectures when we actually programmatically use them.

38
00:02:39,370 --> 00:02:40,510
So keep that in mind.

39
00:02:40,600 --> 00:02:45,430
Don't worry about fully understanding these constraints because it depends a lot on the additional conditions

40
00:02:45,430 --> 00:02:46,810
you apply with them.

41
00:02:46,810 --> 00:02:52,450
So the check constraint ensures that all values in a column satisfy just some certain general condition.

42
00:02:52,480 --> 00:02:58,430
So actually check against some sort of conditions such as has to be less than 20 or something like that.

43
00:02:58,870 --> 00:03:04,840
The exclusion constraint ensures that if any two rows are compared on the specified column or expression

44
00:03:04,990 --> 00:03:09,790
using the specified operator that you include the inclusion constraint that not all of these comparisons

45
00:03:09,820 --> 00:03:10,690
will return true.

46
00:03:11,140 --> 00:03:16,240
So don't worry too much right now about understanding check and exclusion because they actually depend

47
00:03:16,240 --> 00:03:20,020
a lot more on the additional conditional constraints you provide.

48
00:03:21,380 --> 00:03:26,900
OK so those were all available column constraints that you apply on an individual column and you can

49
00:03:26,900 --> 00:03:31,910
also apply constraints across an entire table and some of these table constraints just also use the

50
00:03:31,910 --> 00:03:35,040
same keyword that are used on the column constraints.

51
00:03:35,060 --> 00:03:40,490
So on the table you can also have an additional check and in parentheses you pass in some sort of condition

52
00:03:40,940 --> 00:03:45,050
so you check in condition when inserting or updating data across the entire table.

53
00:03:45,050 --> 00:03:50,510
You can also provide a references constraint which is to constrain the value stored in the column that

54
00:03:50,510 --> 00:03:52,700
must exist in a column in another table.

55
00:03:52,740 --> 00:03:59,980
So as a reference in other column at another table there's a unique column list constraint so you pass

56
00:03:59,980 --> 00:04:01,600
in a list of columns into unique.

57
00:04:01,600 --> 00:04:06,610
So it applies across multiple columns across the table and enforces the values stored in these columns

58
00:04:06,910 --> 00:04:09,400
listed inside the parentheses to be unique.

59
00:04:09,430 --> 00:04:13,210
So instead of just having something be unique within a column it's going to have to be unique within

60
00:04:13,210 --> 00:04:14,170
multiple columns.

61
00:04:14,170 --> 00:04:18,830
So that's why this is known as a table constraint because it's expanding it beyond just a single column.

62
00:04:18,910 --> 00:04:24,670
You can also do primary key on multiple columns so allies define the primary key that consists of multiple

63
00:04:24,670 --> 00:04:25,600
columns.

64
00:04:25,600 --> 00:04:30,880
Typically when you're starting off there is usually just one primary key column per table B can have

65
00:04:30,880 --> 00:04:33,070
multiple primary key columns per table.

66
00:04:33,100 --> 00:04:38,080
And if you wanted to set that up you could do it using a table constraint which is passing in multiple

67
00:04:38,080 --> 00:04:43,340
columns into this column list along with primary key and that's pretty much it.

68
00:04:43,340 --> 00:04:49,070
So we understand a couple of core concepts in theory we understand data types how to choose data types

69
00:04:49,130 --> 00:04:51,350
we understand primary keys and foreign keys.

70
00:04:51,470 --> 00:04:56,240
And then finally we understand the options for constraints these constraint options are gonna make a

71
00:04:56,240 --> 00:05:00,110
lot more sense when we actually program them out in the very next lecture.

72
00:05:00,110 --> 00:05:03,310
So don't worry too much about fully understand them right now.

73
00:05:03,320 --> 00:05:07,700
Basically I just wanted to introduce the keywords to you that way they didn't seem to come out of nowhere

74
00:05:07,700 --> 00:05:09,050
in the next lecture.

75
00:05:09,050 --> 00:05:14,560
So with all this under our belt for theory we're ready to begin using sequel syntax to create tables.

76
00:05:14,630 --> 00:05:16,820
So let's go ahead and do that and I'll see you at the next lecture.
