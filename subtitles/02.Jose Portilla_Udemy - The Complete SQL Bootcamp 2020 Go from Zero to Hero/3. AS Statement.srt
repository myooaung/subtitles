1
00:00:05,700 --> 00:00:11,290
Welcome back everyone to this lecture on the as Claus before we learn about joints.

2
00:00:11,300 --> 00:00:16,970
Let's quickly cover this as clause or as a statement which allows us to create an alias for a column

3
00:00:17,030 --> 00:00:17,750
or result.

4
00:00:17,810 --> 00:00:20,770
And what we mean by alias is just an alternative name.

5
00:00:20,870 --> 00:00:25,490
Let's say the example syntax for this is actually quite simple.

6
00:00:25,490 --> 00:00:31,430
Instead of just selecting a column from a table we say select column as and then we decide on a new

7
00:00:31,430 --> 00:00:37,960
name to display in the data output we can also use this on functions on a column.

8
00:00:38,420 --> 00:00:43,400
So we can say something like SELECT column and then have that instead of displaying as some of that

9
00:00:43,400 --> 00:00:48,310
column in the data output instead have it display as new name.

10
00:00:48,340 --> 00:00:49,830
Let's see some examples.

11
00:00:49,840 --> 00:00:55,660
So this is the way it classically works where we say select customer I.D. from payment and notice that

12
00:00:55,660 --> 00:00:58,600
the column name is the same in the data output below.

13
00:00:58,600 --> 00:01:01,030
We see customer underscore I.D..

14
00:01:01,180 --> 00:01:07,370
Now let's see what happens if we were to use the as statement so here we're saying select amount as

15
00:01:07,370 --> 00:01:09,500
rental price from payment.

16
00:01:09,530 --> 00:01:15,680
So notice here instead of having the output reported as the amount column instead we decided to give

17
00:01:15,680 --> 00:01:19,260
it an alias or rename it as rental underscore price.

18
00:01:19,340 --> 00:01:24,980
And maybe this will be easier for some other analysts to read when we actually show them our SQL query

19
00:01:24,980 --> 00:01:26,030
results.

20
00:01:26,030 --> 00:01:29,320
So really here it's just for readability on the data output.

21
00:01:29,750 --> 00:01:35,990
And this starts to make sense especially when we perform functions on a column for example select some

22
00:01:36,080 --> 00:01:42,830
amount as net revenue from payments and instead of having the output just say some of the amount here

23
00:01:42,830 --> 00:01:48,590
we can clarify it with an alias as the total net revenue from the payment table.

24
00:01:48,590 --> 00:01:54,990
So essentially in net revenue we've made around sixty one thousand three hundred twelve dollars.

25
00:01:55,000 --> 00:02:00,880
Now keep in mind the as operator gets executed at the very end of a query and this is where a lot of

26
00:02:00,880 --> 00:02:03,370
students especially beginners get confused.

27
00:02:03,370 --> 00:02:09,540
That means that we cannot use the alias inside of something like a where operator or a group by call.

28
00:02:09,730 --> 00:02:14,470
And I'm going to walk through an example of trying to do that and having it show an error because a

29
00:02:14,470 --> 00:02:17,230
lot of students get confused on that particular notion.

30
00:02:17,320 --> 00:02:21,750
You essentially only get to use that alias in the SELECT statement anywhere else.

31
00:02:21,820 --> 00:02:23,740
It's not actually going to be valid.

32
00:02:23,740 --> 00:02:26,780
So let's head over to P.G. admin and walk through an example of that.

33
00:02:26,840 --> 00:02:28,670
OK here I am at my query editor.

34
00:02:28,960 --> 00:02:38,700
What I'm going to do is say select and we're actually going to say count the amount from the payment

35
00:02:38,700 --> 00:02:39,600
column.

36
00:02:39,600 --> 00:02:44,670
So if I run this notice I get back just count as my output.

37
00:02:44,670 --> 00:02:50,250
And if I just see this data output without any regards to the query it's pretty unclear what this is

38
00:02:50,250 --> 00:02:51,660
actually counting.

39
00:02:51,660 --> 00:02:57,960
So maybe I want to clarify this using an alias so I can say as and counting the amount from the payment

40
00:02:57,960 --> 00:03:01,910
column is the same as asking how many transactions have occurred.

41
00:03:01,980 --> 00:03:09,600
So I can say a number of transactions run this and now I see that the data output has been running yet

42
00:03:09,690 --> 00:03:13,970
renamed to be num underscore transactions and recall with count.

43
00:03:13,980 --> 00:03:19,050
You can always just passin anything here to check such as an asterisk and that will be the exact same

44
00:03:19,050 --> 00:03:19,930
thing.

45
00:03:19,950 --> 00:03:27,180
So here saying count Asterix as Num transactions from payment using this alias it makes it quite clear

46
00:03:27,480 --> 00:03:31,020
what the data output is actually showing us.

47
00:03:31,050 --> 00:03:31,740
OK.

48
00:03:31,920 --> 00:03:36,950
Now let's imagine we were going to do a group by statement so let's through the following.

49
00:03:36,970 --> 00:03:46,600
Let's say select the customer I.D. and then some amount from payments.

50
00:03:46,600 --> 00:03:54,290
And then I'm going to group by customer I.D. essentially showing how much each customer actually has

51
00:03:54,350 --> 00:03:55,330
spent.

52
00:03:55,370 --> 00:04:00,760
So I run this and I get back the customer I.D. as well as some sum.

53
00:04:00,770 --> 00:04:05,450
However if I'm looking at the data output maybe it's not super clear that this sum happens to be their

54
00:04:05,450 --> 00:04:10,550
actual expenditure because I don't see a dollar sign here anywhere and unless I actually get to read

55
00:04:10,550 --> 00:04:16,310
this query and understand the thought process behind it the data output results don't specifically tell

56
00:04:16,310 --> 00:04:25,430
me that the sum happens to be their total spent so I can simply say as total spent and then as I do

57
00:04:25,430 --> 00:04:32,880
this directly after whatever column or function result I want to rename and then I run this and I get

58
00:04:32,880 --> 00:04:35,840
back here and the data output total spent.

59
00:04:35,940 --> 00:04:42,660
Now here is where I really want you to focus because this is where beginners often make a mistake.

60
00:04:42,750 --> 00:04:50,520
Let's imagine that I wanted to clarify on the sum amount we already know I can do something like this

61
00:04:51,480 --> 00:05:00,330
having some amount and let's have it be greater than 100 and we actually did pretty much this exact

62
00:05:00,330 --> 00:05:03,610
same query and I'm going to remove as total spent.

63
00:05:03,660 --> 00:05:04,890
So what am I doing here.

64
00:05:04,950 --> 00:05:09,660
I'm doing the exact same thing as before except after I've done the group by and calculated the sum

65
00:05:09,660 --> 00:05:16,040
amount I'm going to do an additional filtering using having or some amount is greater than one hundred.

66
00:05:16,110 --> 00:05:22,530
So I run this and notice now my sums are all greater than one hundred and I'm going to use again my

67
00:05:22,560 --> 00:05:23,310
alias.

68
00:05:23,340 --> 00:05:29,520
So just clarify that as total spent so I run this and now I get to see total spent here.

69
00:05:30,270 --> 00:05:37,530
Unfortunately this alias gets assigned at the very end which means I cannot do this and this is where

70
00:05:37,830 --> 00:05:39,270
beginners try to do this a lot.

71
00:05:39,270 --> 00:05:45,720
They'll say having total spent greater than one hundred and if they run this you get back an error they'll

72
00:05:45,720 --> 00:05:50,850
say column total spent does not exist which at this stage is true.

73
00:05:51,090 --> 00:05:55,530
Total Spent is only going to exist at the very end at the data output.

74
00:05:55,530 --> 00:06:01,380
So because an alias gets assigned at the very end you cannot use it in something like a where statement

75
00:06:01,440 --> 00:06:03,080
or a having clause.

76
00:06:03,110 --> 00:06:09,420
Unfortunately you have to go back and choose the original either column name or the original function.

77
00:06:09,420 --> 00:06:15,020
So we'll have to say having some amounts greater than one hundred and we see back these results.

78
00:06:15,060 --> 00:06:19,300
So keep that in mind these aliases get assigned at the very end.

79
00:06:19,440 --> 00:06:21,820
So you can't use them to filter by.

80
00:06:21,870 --> 00:06:24,230
So I'm going to show you another example of this.

81
00:06:24,360 --> 00:06:29,610
Let's just go ahead and remove group by and having some and we'll just say amount

82
00:06:32,330 --> 00:06:33,720
we'd run this.

83
00:06:33,720 --> 00:06:37,550
So here all the customer I.D. notices repeats as well as the amounts.

84
00:06:37,550 --> 00:06:41,810
Now let's imagine I wanted to qualify this for amounts greater than two dollars.

85
00:06:41,840 --> 00:06:48,270
Well I could say from payment then where amount is greater than two.

86
00:06:48,300 --> 00:06:49,280
So I run this.

87
00:06:49,460 --> 00:06:53,540
And now notice I got rid of all those one ninety nine transactions.

88
00:06:53,540 --> 00:07:01,220
Now if I happen to use an alias on amounts so we'll say as new name I run this notice new name is down

89
00:07:01,220 --> 00:07:02,190
the data output.

90
00:07:02,570 --> 00:07:04,280
Unfortunately I cannot do this.

91
00:07:04,280 --> 00:07:08,040
I cannot say where new name is greater than 2.

92
00:07:08,150 --> 00:07:10,640
If I run this I get the same error as before.

93
00:07:10,640 --> 00:07:12,350
That new name does not exist.

94
00:07:12,350 --> 00:07:18,020
So again just to clarify these aliases get a sign that the end and unfortunately you can't use them

95
00:07:18,350 --> 00:07:24,860
in the WHERE clause or the having clause to filter by instead just think of them as being used in the

96
00:07:24,860 --> 00:07:31,010
data output and you'll have to use the original column name if you plan to do any filtering or comparison

97
00:07:31,070 --> 00:07:32,540
operations on it.

98
00:07:32,540 --> 00:07:32,740
All right.

99
00:07:33,200 --> 00:07:38,870
That's it for the as statement as you can imagine as you begin to join tables using joint statements

100
00:07:39,160 --> 00:07:44,440
we'll become quite useful to be able to assign aliases for clarification.

101
00:07:44,510 --> 00:07:45,010
OK.

102
00:07:45,080 --> 00:07:47,120
Coming up next we'll begin discussing joins.

103
00:07:47,120 --> 00:07:47,660
I'll see you there.
