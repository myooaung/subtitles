WEBVTT
1
00:00:05.440 --> 00:00:10.670
Welcome everyone to this lecture on the inserts command as you may have already guessed.

2
00:00:10.680 --> 00:00:14.780
Insert allows you to add in or insert rows into a table.

3
00:00:14.780 --> 00:00:16.490
The general syntax looks like this.

4
00:00:16.490 --> 00:00:23.480
We say insert into the side on the table name and then also clarify which column values we're going

5
00:00:23.480 --> 00:00:24.910
to be providing.

6
00:00:25.040 --> 00:00:31.860
And then we say values and add in a list of values.

7
00:00:31.910 --> 00:00:36.140
Keep in mind you can also have a syntax for inserting values from another table.

8
00:00:36.140 --> 00:00:37.220
This looks kind of similar.

9
00:00:37.220 --> 00:00:43.910
We'll say insert into table the side on the columns were inserting two and then we say select those

10
00:00:43.910 --> 00:00:50.870
matching columns from some other table where some condition happens to be true so something to keep

11
00:00:50.870 --> 00:00:56.330
in mind especially for the previous statement of inserting from another table the inserted row values

12
00:00:56.420 --> 00:01:00.080
must match up for the table including constraints.

13
00:01:00.080 --> 00:01:06.890
So if one of your constraints was that the column is not normal then you must provide a value as you

14
00:01:06.890 --> 00:01:07.520
insert.

15
00:01:07.520 --> 00:01:09.200
Otherwise you'll get an error.

16
00:01:09.200 --> 00:01:15.170
If you're grabbing information from another table and inserting it into your table that you're currently

17
00:01:15.290 --> 00:01:22.400
using then you must make sure that those actual columns also match up for things like data type.

18
00:01:22.400 --> 00:01:27.140
Another thing to keep in mind is that the serial columns especially for those primary keys they actually

19
00:01:27.140 --> 00:01:29.180
do not need to be provided a value.

20
00:01:29.180 --> 00:01:35.030
Recall that Serial is a sequence so it's going to automatically update the next available integer for

21
00:01:35.030 --> 00:01:36.230
that row.

22
00:01:36.230 --> 00:01:41.180
OK let's go ahead and actually work through some syntax examples using P.G. ataman.

23
00:01:41.600 --> 00:01:41.800
All right.

24
00:01:41.810 --> 00:01:44.120
Here I am inside of P.G. admin.

25
00:01:44.210 --> 00:01:50.840
Let's go ahead and recall what we actually use for our account table that we created previously to do

26
00:01:50.840 --> 00:01:51.620
that.

27
00:01:51.620 --> 00:01:59.750
I'm going to in my query editor say select everything from accounts run this and you shouldn't get back

28
00:01:59.810 --> 00:02:02.400
any data because we haven't inserted anything yet.

29
00:02:02.630 --> 00:02:08.700
And I can see here I have user I.D. username password email created on and last log in.

30
00:02:08.900 --> 00:02:15.530
Recall that user I.D. is serial data type so I don't need to worry about providing that and also recall

31
00:02:15.890 --> 00:02:22.160
that the last log in column didn't have any constraints so I don't need to actually provide one of those.

32
00:02:22.160 --> 00:02:27.350
Everything else I believe had some sort of not novel or unique constraint so we will need to provide.

33
00:02:27.360 --> 00:02:30.630
So let's go ahead and show you how you can insert into this table.

34
00:02:30.890 --> 00:02:38.660
We're going to say insert into and then the account table name which was just account and in the columns

35
00:02:38.660 --> 00:02:39.680
we're going to provide.

36
00:02:39.800 --> 00:02:50.530
We're going to provide a user name a password an email and then we also say created on and then after

37
00:02:50.530 --> 00:02:57.610
this we're going to say values and then we provide the list of values.

38
00:02:58.040 --> 00:03:04.020
So let's go ahead and choose a username we'll go ahead and have the user name be who's a the password.

39
00:03:04.060 --> 00:03:09.100
Typically you don't save passwords as strings in a database they'll be a hashed version of a password.

40
00:03:09.100 --> 00:03:16.360
But just for learning syntax we'll say that Jose's password is password the email will go ahead and

41
00:03:16.360 --> 00:03:23.950
have this be who's a at mail dot com to the made up address and then make sure we say created on.

42
00:03:23.950 --> 00:03:25.710
So check for that type of there.

43
00:03:25.810 --> 00:03:28.000
So created on make sure that matches up.

44
00:03:28.120 --> 00:03:34.700
And now we just going to provide a timestamp and in order to save time instead of providing a long string

45
00:03:34.700 --> 00:03:41.660
code for a timestamp that includes the dates and the time I can actually use from our timestamp lectures

46
00:03:41.990 --> 00:03:52.070
the current timestamp functionality so I can say current underscore timestamp and you can review the

47
00:03:52.070 --> 00:03:58.720
documentation and or timestamp lectures for a full list of these sort of timestamp function calls.

48
00:03:58.730 --> 00:04:03.180
So this is just going to insert those values here into the table.

49
00:04:03.230 --> 00:04:10.090
So let's go ahead and run this and you should see something that says query return successfully et cetera

50
00:04:10.450 --> 00:04:15.490
and other data output will still see the same blank because we haven't actually asked again for the

51
00:04:15.490 --> 00:04:17.020
information from account.

52
00:04:17.110 --> 00:04:27.540
So let's go ahead and delete this and then say select everything from account run that.

53
00:04:27.540 --> 00:04:31.290
And notice we get back user I.D. 1 so is automatically created for us.

54
00:04:31.290 --> 00:04:37.920
We have a password whose hotmail dot com and then we have the created on a notice the last log in is

55
00:04:37.920 --> 00:04:39.420
currently no.

56
00:04:39.450 --> 00:04:47.850
So we were able to successfully insert into this new table now let's go ahead and practice inserting

57
00:04:47.880 --> 00:04:50.030
into the job table.

58
00:04:50.100 --> 00:04:52.020
So recall the job table.

59
00:04:52.020 --> 00:04:56.710
We take a look at it here has the columns job I.D. and job name recall.

60
00:04:56.730 --> 00:04:58.220
Job I.D. was surreal.

61
00:04:58.230 --> 00:05:04.650
So I don't need to worry about actually providing a job I.D. So what I'll do here is I'll say insert

62
00:05:05.340 --> 00:05:07.650
into and then we have the job.

63
00:05:07.650 --> 00:05:12.180
Table the columns I'm going to insert is just the job name.

64
00:05:12.240 --> 00:05:17.220
So what I'll do here is say job underscore.

65
00:05:17.340 --> 00:05:22.630
Name then I'll say values that I'm going to insert here.

66
00:05:22.800 --> 00:05:25.260
And job I.D. created automatically through serial.

67
00:05:25.260 --> 00:05:27.060
So I just think it's a job name.

68
00:05:27.060 --> 00:05:30.120
Let's go ahead and have the job now and be like an astronaut.

69
00:05:30.130 --> 00:05:39.070
So say astronaut go ahead and run this we get back quicker return successfully.

70
00:05:39.070 --> 00:05:47.640
Let's check on that by saying select everything from job run it and now I can I see I can see I have

71
00:05:47.640 --> 00:05:50.050
a job I.D. one job name astronaut.

72
00:05:50.280 --> 00:05:53.720
And let's add one more job just so we can explore this job.

73
00:05:53.720 --> 00:06:07.310
I.D. so we'll say insert into job and we're going to insert a job name and we'll say values.

74
00:06:07.530 --> 00:06:10.080
Let's go ahead and have it be president.

75
00:06:10.260 --> 00:06:14.080
So we'll say President has another job.

76
00:06:14.130 --> 00:06:23.000
Run that again and if we check out the table again select everything from job notice that the job I.D.

77
00:06:23.150 --> 00:06:26.960
automatically being increased for us which is really nice.

78
00:06:26.960 --> 00:06:34.140
OK so we have this job table with some job options and we have the account with basically kind of a

79
00:06:34.150 --> 00:06:36.090
fake entry into the count.

80
00:06:36.110 --> 00:06:41.900
Let's go ahead and finalize everything by actually doing one connection for an account job essentially

81
00:06:41.900 --> 00:06:47.150
assigning the account I made myself to a job that's going to be a little different because we have that

82
00:06:47.150 --> 00:06:57.450
foreign key set for us so what we're going to do here is we'll simply say like we did insert into we

83
00:06:57.460 --> 00:07:08.470
will say account job passing a user I.D. a job I.D. and a higher date and expand on this just so we

84
00:07:08.470 --> 00:07:15.380
can see the whole thing then we'll select the values we're going to insert and we'll say user I.D. is

85
00:07:15.380 --> 00:07:19.420
one because that matches up with the first person we made in the account table.

86
00:07:19.430 --> 00:07:20.880
We'll go ahead and haven't been an astronaut.

87
00:07:20.900 --> 00:07:22.910
So that's job I.D. number one.

88
00:07:22.910 --> 00:07:32.550
And then the higher dates should say current timestamp so we run this we get back query return successfully.

89
00:07:32.550 --> 00:07:36.680
So let's go ahead and delete this.

90
00:07:36.840 --> 00:07:45.830
Say select everything from the table which was account job run that then I can see user I.D. one job

91
00:07:45.830 --> 00:07:47.520
I.D. one and they hire a date.

92
00:07:47.960 --> 00:07:54.080
Let's go ahead and show you what happens if we try to insert someone whose user I.D. doesn't exist.

93
00:07:54.080 --> 00:08:00.620
So I'm actually going to do control Z a few times to get back this command so just control ze a few

94
00:08:00.620 --> 00:08:08.750
times should bring you back to insert into account job and I'm going to insert let's say user I.D. 10

95
00:08:09.260 --> 00:08:12.810
with job I.D. 10 at my current timestamp.

96
00:08:12.860 --> 00:08:18.450
Currently we don't have a user with user I.D. 10 oh we don't have a job I.D. with job I.D. 10.

97
00:08:18.470 --> 00:08:22.320
So when I tried to run this notice what happens we get this error.

98
00:08:22.490 --> 00:08:27.980
And the reason we're getting this error is because it's violating the Foreign key constraint.

99
00:08:27.980 --> 00:08:33.440
So just like we have to provide information for things that are not null we have to make sure that when

100
00:08:33.440 --> 00:08:39.170
we're inserting something that has a foreign key constraint that it actually exists in the other tables.

101
00:08:39.170 --> 00:08:41.760
This is the exact kind of behavior and error you want.

102
00:08:41.780 --> 00:08:45.070
Otherwise we're doing some sort of link that doesn't actually exist.

103
00:08:45.080 --> 00:08:46.910
There was no user I.D. of 10.

104
00:08:46.910 --> 00:08:48.320
There was no job I.D. of 10.

105
00:08:48.740 --> 00:08:50.050
So keep that in mind.

106
00:08:50.210 --> 00:08:56.990
These constraints will do things like stop information being inserted into it if it actually violates

107
00:08:57.290 --> 00:08:58.010
the constraint.

108
00:08:58.740 --> 00:08:59.420
OK.

109
00:08:59.720 --> 00:09:04.100
So that's the details for how to insert data into a table.

110
00:09:04.100 --> 00:09:05.120
We'll see you at the next lecture.
