WEBVTT
1
00:00:05.380 --> 00:00:09.910
Welcome back everyone to this lecture where we're going to be cutting through and explaining the solutions

2
00:00:09.910 --> 00:00:15.770
for the second assessment test in this lecture we're going to work through the solutions and we'll go

3
00:00:15.770 --> 00:00:20.010
back and forth between P.S. admin and the google doc with the questions.

4
00:00:20.120 --> 00:00:24.650
Keep in mind if you're just looking for the written out solutions you can check those out on the link

5
00:00:24.770 --> 00:00:26.670
in the previous lecture.

6
00:00:26.660 --> 00:00:26.920
OK.

7
00:00:26.950 --> 00:00:29.460
Let's get started by heading over to P.G. ataman.

8
00:00:29.540 --> 00:00:29.780
All right.

9
00:00:29.780 --> 00:00:35.450
Here I am in P.G. Ataman and I also have the assessment test opened up so sequel assessment test number

10
00:00:35.450 --> 00:00:40.340
two which is questions and expect the results in this there's a link to the solutions which you can

11
00:00:40.340 --> 00:00:44.360
visit and what we're going to do in this lecture just code and explain out the solutions.

12
00:00:44.360 --> 00:00:48.410
So it starts off pretty basic so we won't do a whole lot of explanations for the first couple of questions

13
00:00:48.800 --> 00:00:51.570
and then we'll start explaining as they get more complex.

14
00:00:51.590 --> 00:00:57.050
So the first question is how can you retrieve all the information from the C D that facilities table.

15
00:00:57.050 --> 00:01:03.170
So hopefully you're able to get this one quite simply by saying come to PGI admin select everything

16
00:01:03.590 --> 00:01:06.980
from C D the facilities.

17
00:01:06.990 --> 00:01:12.080
And remember we needed to include that C D because the facilities table is under the C D schema not

18
00:01:12.080 --> 00:01:13.820
the public schema.

19
00:01:13.820 --> 00:01:19.520
So we run this and we can see here we have the facility idea name member cost guess cost initial outlay

20
00:01:19.580 --> 00:01:21.380
and monthly maintenance.

21
00:01:21.380 --> 00:01:28.330
Next question was you want to print out a list of all the facilities and their costs to members.

22
00:01:28.360 --> 00:01:32.680
So we want to retrieve a list of only facility names and costs.

23
00:01:32.890 --> 00:01:37.480
That's simply coming back to PJM admin and instead of selecting everything we'll just go ahead and grab

24
00:01:37.570 --> 00:01:46.870
the facility name and the member cost which we can do by saying name comma member cost.

25
00:01:46.910 --> 00:01:49.490
Go ahead and run this.

26
00:01:49.490 --> 00:01:50.240
And there we have it.

27
00:01:50.720 --> 00:01:56.360
So we see back the various names the facilities like tennis courts Badman courts massage rooms and as

28
00:01:56.360 --> 00:02:00.310
well as how much they cost for the members.

29
00:02:00.310 --> 00:02:07.330
Question number three is how can you produce a list of facilities that charge a fee to members.

30
00:02:07.330 --> 00:02:11.980
So if we take a look back at the results from the previous question note that not all of them actually

31
00:02:11.980 --> 00:02:12.580
charge a fee.

32
00:02:12.580 --> 00:02:20.170
Some of them have a zero cost for members which means we want to go ahead and add a where statement

33
00:02:21.280 --> 00:02:25.150
which filters out member costs that are basically zero.

34
00:02:25.150 --> 00:02:28.710
So we want to see where the member cost happens to be greater than zero.

35
00:02:28.900 --> 00:02:34.390
And if we run this now we get back those five facilities and it's up to you if you want to select all

36
00:02:34.390 --> 00:02:35.530
the columns or not.

37
00:02:35.530 --> 00:02:39.970
But essentially we're just looking for the five facilities where there's actually a cost to the member

38
00:02:42.280 --> 00:02:46.240
question number four and this one starts getting a little tricky because there's some math involved

39
00:02:46.690 --> 00:02:51.460
is how can you produce a list of facilities that charge a fee to members.

40
00:02:51.460 --> 00:02:57.070
And that fee is less than one fiftieth of the monthly maintenance cost.

41
00:02:57.200 --> 00:03:03.310
And we want you to return the facility I.D. facility name member cost and monthly maintenance of the

42
00:03:03.310 --> 00:03:09.320
facilities in questions and you should actually just be two rows massage room one in massage room two.

43
00:03:09.400 --> 00:03:10.660
So how can we actually do this.

44
00:03:10.960 --> 00:03:18.150
Well first let's start by taking a look at what we already have we actually want to select more than

45
00:03:18.150 --> 00:03:20.070
just a name and member column.

46
00:03:20.070 --> 00:03:26.160
We also want to select the facility I.D. and we wanted to select the monthly maintenance.

47
00:03:26.260 --> 00:03:28.920
So say monthly maintenance.

48
00:03:28.930 --> 00:03:33.340
Make sure we spell this right from seeds facilities.

49
00:03:33.490 --> 00:03:36.620
And so far remember cost is greater than zero.

50
00:03:36.640 --> 00:03:45.930
So if you run this make sure we say monthly that we go and here we have the facility I.D. where we actually

51
00:03:45.930 --> 00:03:47.130
have a cost for this.

52
00:03:47.130 --> 00:03:53.230
Now what we want to compare is the one fiftieth of the monthly maintenance costs.

53
00:03:53.400 --> 00:03:58.820
So notice here we have the monthly maintenance two hundred three thousand etc. and the member cost.

54
00:03:58.830 --> 00:04:06.690
So what we're looking for is for this fee for the member to be less than one fiftieth of the monthly

55
00:04:06.690 --> 00:04:07.960
maintenance cost.

56
00:04:07.980 --> 00:04:10.610
So the way we can do that is by filtering out.

57
00:04:10.620 --> 00:04:21.580
So and we're gonna have another condition where we want the monthly maintenance divided by 50 and we

58
00:04:21.580 --> 00:04:27.440
have to do this with a floating point number so fifty point zero in order to get back that full decimal.

59
00:04:27.460 --> 00:04:29.880
So we're saying monthly maintenance.

60
00:04:29.890 --> 00:04:31.720
Make sure we spell this right again.

61
00:04:31.750 --> 00:04:34.010
There we go divided by 50.

62
00:04:34.030 --> 00:04:41.920
So it's essentially one fiftieth of the maintenance cost and we want to compare where that member cost

63
00:04:42.970 --> 00:04:47.240
is less than monthly maintenance divided by 50.

64
00:04:47.320 --> 00:04:52.920
And if you just run it like this you should get back the massager in one in massage room 2.

65
00:04:53.090 --> 00:05:00.460
So note here again I'm dividing monthly maintenance by 50 in order to get the one fiftieth of the maintenance

66
00:05:00.460 --> 00:05:01.300
cost.

67
00:05:01.300 --> 00:05:05.140
You always want to be careful in dealing with fractions in other way you could have done this is by

68
00:05:05.140 --> 00:05:12.150
saying one divided by fifty point zero parentheses times monthly maintenance.

69
00:05:12.310 --> 00:05:15.830
And if you run that make sure princes are balanced when you run this.

70
00:05:15.850 --> 00:05:19.420
There you go run that you should get back the same results.

71
00:05:19.510 --> 00:05:21.150
So again different ways to do this.

72
00:05:21.210 --> 00:05:23.830
Well you want to make sure is that your order of operations correct.

73
00:05:23.830 --> 00:05:28.780
You don't want to actually do one divided by 50 times monthly maintenance because that would set 50

74
00:05:28.780 --> 00:05:34.650
times monthly maintenance as a denominator OK so that's number four.

75
00:05:34.650 --> 00:05:36.370
Let's move on to number five.

76
00:05:36.380 --> 00:05:36.600
OK.

77
00:05:36.600 --> 00:05:41.430
Question number five was how can you produce a list of all facilities with the word tennis in their

78
00:05:41.430 --> 00:05:42.310
name.

79
00:05:42.310 --> 00:05:48.840
And here we have both tennis courts and table tennis which means I'm going to need to use the like operator

80
00:05:49.200 --> 00:05:53.800
in order to format tennis so it fits anywhere within that string of the name.

81
00:05:53.820 --> 00:05:55.640
So we'll come back to PGA admin.

82
00:05:55.640 --> 00:06:04.270
Let's go ahead and select everything from C.D. facilities where name.

83
00:06:04.270 --> 00:06:06.380
And this is where we have a couple of options.

84
00:06:06.460 --> 00:06:15.070
If you don't want to care about capitalization you can say I like and then we'll go ahead and have tennis

85
00:06:17.040 --> 00:06:22.080
and then the percent signs allow us to say any number of characters before tennis and any number of

86
00:06:22.080 --> 00:06:23.700
characters after tennis.

87
00:06:23.700 --> 00:06:25.860
So if I run this I can see I get back.

88
00:06:25.860 --> 00:06:29.110
Tennis court one tennis court two and table tennis.

89
00:06:29.190 --> 00:06:35.310
If you're using like then recall that capitalization does matter there and we have to have a capital

90
00:06:35.310 --> 00:06:39.270
T for tennis run that and you'll get back the same results.

91
00:06:39.270 --> 00:06:45.650
OK let's move on to the next question next question is how can you retrieve the details of facilities

92
00:06:45.650 --> 00:06:48.220
of I.D. one in five.

93
00:06:48.230 --> 00:06:51.390
And it says try to do it without using the or operator.

94
00:06:51.490 --> 00:06:55.700
Let's go ahead and show you how you would do if the or operator and then how you can do it without using

95
00:06:55.700 --> 00:06:56.750
the or operator.

96
00:06:56.770 --> 00:06:58.550
So we'll come back here.

97
00:06:58.550 --> 00:07:04.280
One way to do this is by simply saying select everything from city facilities where and then we can

98
00:07:04.280 --> 00:07:16.180
say where facility I.D. is equal to one or facility I.D. is equal to five.

99
00:07:16.250 --> 00:07:22.340
So if you run that you get back these correct results tennis court to a massage room to the way to do

100
00:07:22.340 --> 00:07:25.790
it without or is by using the in operator.

101
00:07:25.790 --> 00:07:32.590
And you make a list so you can say where facility I.D. is in one common five.

102
00:07:32.600 --> 00:07:35.360
And so that's basically not checking against this list.

103
00:07:35.480 --> 00:07:38.570
And if you run this you get back the same results.

104
00:07:38.570 --> 00:07:43.790
What's nice about this is that you can easily expand this to any number of I.D. by just adding it to

105
00:07:43.790 --> 00:07:46.740
this list instead of having to add a complete or statement.

106
00:07:46.740 --> 00:07:54.330
Again now let's move on to question number seven which is how can you produce a list of members who

107
00:07:54.330 --> 00:08:00.840
joined after the start of September 2012 returned the member I.D. surname first name and join date of

108
00:08:00.840 --> 00:08:05.740
the members in question and the expected results is 10 rows and not all of them are shown here below.

109
00:08:05.760 --> 00:08:10.010
This little figure but basically there to show you the kind of results you should expect.

110
00:08:10.020 --> 00:08:10.990
So how do we do this.

111
00:08:10.990 --> 00:08:13.330
It's come back to P.G. ataman.

112
00:08:13.510 --> 00:08:19.900
Let's go ahead and select those columns that mentioned they wanted a member I.D. column surname the

113
00:08:19.930 --> 00:08:28.810
first name and the join date and then we're gonna grab this from the see the members table and here

114
00:08:28.840 --> 00:08:34.450
we're going to specify where and they wanted where the join date is greater than or equal to.

115
00:08:35.080 --> 00:08:40.620
And then the formatting that table has is Year Month date.

116
00:08:40.680 --> 00:08:46.260
So we want people that joined either on or after September 1st 2012.

117
00:08:46.260 --> 00:08:50.600
And if you're on this you should get back those 10 people.

118
00:08:50.770 --> 00:08:51.010
OK.

119
00:08:51.010 --> 00:08:58.470
Next question is we want to know how can you produce an ordered list of the first 10 surnames in the

120
00:08:58.470 --> 00:09:01.260
members table the list must not contain duplicates.

121
00:09:01.290 --> 00:09:05.530
And we'll go ahead and let you include guest as a last name.

122
00:09:05.550 --> 00:09:07.610
So within the first one's enough medical order.

123
00:09:07.740 --> 00:09:09.120
The very last one will be guest.

124
00:09:09.150 --> 00:09:11.070
So we'll go ahead and let you include that.

125
00:09:11.070 --> 00:09:12.450
So how can we do this.

126
00:09:12.480 --> 00:09:18.130
Well we're gonna do here is simply use an order by and then limit to 10 so we'll come over here and

127
00:09:18.310 --> 00:09:22.290
let's go ahead and say select will say surname

128
00:09:25.330 --> 00:09:31.900
from C. The members order by surname.

129
00:09:31.930 --> 00:09:36.890
So if we just run this by itself we'll get back everything in order.

130
00:09:36.910 --> 00:09:40.110
Now notice that there are duplicates notices to ferals.

131
00:09:40.120 --> 00:09:42.290
And if we come over here there's two bakers.

132
00:09:42.340 --> 00:09:47.600
So the way we can't remove those is by saying distinct surnames.

133
00:09:47.600 --> 00:09:49.640
So basically only the unique surnames.

134
00:09:49.700 --> 00:09:55.220
So now that we run that that we'll get rid of the duplicates and recall that we want to limit this to

135
00:09:55.220 --> 00:10:01.390
just 10 so say limit to 10 run this.

136
00:10:01.570 --> 00:10:06.900
And now we have those top 10 if for some reason you didn't want to include guest you could easily use

137
00:10:06.900 --> 00:10:11.100
some sort of where condition to say we're not equal to guest.

138
00:10:11.190 --> 00:10:19.110
OK coming back to the assessment questions Number nine is you'd like to get the sign up date of your

139
00:10:19.110 --> 00:10:19.940
last member.

140
00:10:19.950 --> 00:10:22.240
So how can you retrieve this information.

141
00:10:22.260 --> 00:10:24.650
Essentially what is the very last person who signed up.

142
00:10:24.660 --> 00:10:25.840
When did they sign up.

143
00:10:25.920 --> 00:10:27.130
The way we can do this.

144
00:10:27.240 --> 00:10:33.120
We come over here to PGE admin is by actually using the max keyword or function.

145
00:10:33.120 --> 00:10:43.680
So if we say select join date from C. these members and we run this notice here we have all the dates.

146
00:10:43.810 --> 00:10:45.630
There's a couple of different ways we could do this.

147
00:10:45.630 --> 00:10:50.160
We could order these either in ascending or descending order depending if you wanted the first number

148
00:10:50.160 --> 00:10:53.890
the sign up or the last number to sign up and then just run a limit 1.

149
00:10:54.130 --> 00:11:04.310
Or we could do is say Max on join date run this and you would get back basically the most recent person

150
00:11:04.340 --> 00:11:09.350
to have signed up if you want the first person to have ever signed up then you would choose the minimum

151
00:11:09.350 --> 00:11:15.140
date you run that and you can see this is the minimum person essentially the very first person to sign

152
00:11:15.140 --> 00:11:15.690
up.

153
00:11:15.800 --> 00:11:19.280
So that's the way you can use minute max on dates.

154
00:11:19.280 --> 00:11:23.600
Otherwise if you're having trouble with this you could have done an order by and then just said limit

155
00:11:23.600 --> 00:11:28.340
one to get either the very first person or the very last person depending on what you were thinking

156
00:11:28.340 --> 00:11:30.440
or what the question was asking for.

157
00:11:30.440 --> 00:11:34.080
Okay let's move back to the assessment next.

158
00:11:34.090 --> 00:11:40.270
You want to produce accounts of the number of facilities that have a cost to guess of 10 or more.

159
00:11:40.660 --> 00:11:47.440
So that one should be pretty easy going to come back here to the select statement and we're going to

160
00:11:47.590 --> 00:11:52.780
select a count recall that in the count function you can pass in anything because it's just counting

161
00:11:52.780 --> 00:12:01.080
the number of rows which is independent of the columns and then will that say see these facilities where

162
00:12:01.590 --> 00:12:06.360
the guest cost is greater than or equal to 10.

163
00:12:06.470 --> 00:12:09.730
Go ahead and run this and he will get back.

164
00:12:09.730 --> 00:12:13.870
There's six facilities if you actually want is the name of those facilities.

165
00:12:14.020 --> 00:12:19.650
You could then just select everything and this would give you all the information of those facilities.

166
00:12:19.670 --> 00:12:24.290
And hey we can see the gas costs twenty five twenty five fifteen five eighty eight and seventy point

167
00:12:24.290 --> 00:12:24.860
five.

168
00:12:25.070 --> 00:12:27.240
All above ten dollars.

169
00:12:27.560 --> 00:12:27.980
OK.

170
00:12:28.160 --> 00:12:31.810
Finally these last couple of questions are going to be the most complicated.

171
00:12:31.820 --> 00:12:37.130
So number eleven is asking us to produce a list of the total number of slots booked per facility in

172
00:12:37.130 --> 00:12:38.890
the month of September 2012.

173
00:12:39.050 --> 00:12:45.080
Produce an output table consisting of facility I.D. and slots sorted by the number of slots.

174
00:12:45.110 --> 00:12:46.980
So lots of stuff going on here.

175
00:12:47.000 --> 00:12:48.530
Let's go ahead and start working through this.

176
00:12:48.530 --> 00:12:54.940
We expect the result is nine rows and there's a little screenshot here of what you would expect to see.

177
00:12:54.950 --> 00:12:57.550
So going to clear this.

178
00:12:57.680 --> 00:13:02.630
So we want to produce a list of the total number of slots booked per facility in the month of September

179
00:13:02.630 --> 00:13:03.700
2012.

180
00:13:03.770 --> 00:13:04.810
So you can do that.

181
00:13:04.810 --> 00:13:10.460
Let's go in and select the rows wrench that in our graph facility I.D. and then we also want to select

182
00:13:10.460 --> 00:13:13.280
the number of slots booked per facility.

183
00:13:13.280 --> 00:13:18.650
So that keyword per facility should basically alert you to the fact that you're going to have to use

184
00:13:18.710 --> 00:13:20.360
a group by statement.

185
00:13:20.360 --> 00:13:24.920
So here we're going to sum the number of slots available.

186
00:13:24.920 --> 00:13:35.860
So some of slots as and if we want to do this we can see as total slots from C.D. bookings and we have

187
00:13:35.860 --> 00:13:39.490
to do this just for September 2012 which means the start time.

188
00:13:39.540 --> 00:13:54.110
So say we're start time is greater than or equal to 2012 09 01 and start time is less than or equal

189
00:13:54.110 --> 00:13:58.890
to 2012 10 01.

190
00:13:58.920 --> 00:14:04.020
If you wanted to you could use a between operator but usually have to be careful of that between operator

191
00:14:04.110 --> 00:14:11.010
and dates because sometimes it will treat it as exclusive or inclusive depending on the system and how

192
00:14:11.010 --> 00:14:16.710
it thinks of the end of a day whether a day starts at zero hundred hours or ends at twenty four hundred

193
00:14:16.710 --> 00:14:17.270
hours.

194
00:14:17.340 --> 00:14:21.620
That could cause some confusion with the between operator and often for the end date.

195
00:14:21.650 --> 00:14:23.820
You have to go one day further into the future.

196
00:14:23.850 --> 00:14:28.440
So keep that in mind if you're trying to do this both the between operator and you were having trouble

197
00:14:28.740 --> 00:14:35.850
see if expanding this beyond just the last day of September 2 as I've shown here the first day of the

198
00:14:35.880 --> 00:14:37.560
tenth of the month.

199
00:14:37.590 --> 00:14:39.930
So October helps you out there.

200
00:14:39.930 --> 00:14:40.520
OK.

201
00:14:40.680 --> 00:14:49.280
So then finally we need to group by facility idea and then we're going to order by the some of slots

202
00:14:49.280 --> 00:14:51.890
just so we can see this in order.

203
00:14:52.040 --> 00:14:58.040
Recall that I can't order by total slots because this alias gets assigned to the very end.

204
00:14:58.040 --> 00:15:01.820
So there's my full query.

205
00:15:01.850 --> 00:15:07.820
Go ahead and run this and I can see here the facility I.D. and I can see the total number of slots open

206
00:15:08.450 --> 00:15:09.950
per facility.

207
00:15:10.100 --> 00:15:10.740
OK.

208
00:15:10.970 --> 00:15:15.920
Well basically total slots booked per facility coming back to the assessment.

209
00:15:16.310 --> 00:15:21.470
Next we want to produce a list of facilities with more than 1000 slots booked and produce an output

210
00:15:21.470 --> 00:15:27.380
table consisting of facility I.D. and total slots sorted by facility I.D. this time.

211
00:15:27.380 --> 00:15:31.820
So they expect the result is five rows should look something like this a facility I.D. and total number

212
00:15:31.820 --> 00:15:32.840
of slots.

213
00:15:32.840 --> 00:15:35.050
So we'll come back to our gentlemen.

214
00:15:35.150 --> 00:15:41.750
This is actually going to look extremely similar except now we want to filter by these some slots so

215
00:15:41.750 --> 00:15:47.550
because we want to filter on something that has an aggregate function on it we can't just use where.

216
00:15:47.600 --> 00:15:48.880
And so we need to use having.

217
00:15:48.910 --> 00:15:50.410
So we're no longer restricted by the month.

218
00:15:50.420 --> 00:15:57.430
So we're going to remove this where statement and we want to still group by facility I.D. but now I'm

219
00:15:57.430 --> 00:16:07.510
going to filter by using having because I'm filtering on some slots so we'll say having these some of

220
00:16:07.510 --> 00:16:11.090
the slots greater than 1000.

221
00:16:11.110 --> 00:16:16.240
And the reason I can't use wear here is because this is a column with an aggregate function being call

222
00:16:16.240 --> 00:16:21.780
on it which means I have to use the having operator to filter on something that's being aggregated.

223
00:16:21.910 --> 00:16:22.290
OK.

224
00:16:22.300 --> 00:16:28.630
And we also wanted to sort by facility idea this time we'll go ahead and run this and we get back those

225
00:16:28.690 --> 00:16:29.590
same results here.

226
00:16:30.460 --> 00:16:33.940
OK go ahead and come back to the assessment test.

227
00:16:33.940 --> 00:16:38.470
The next question on the assessment test is probably one of more complex ones since it's going to actually

228
00:16:38.470 --> 00:16:39.900
involve a join.

229
00:16:39.970 --> 00:16:46.540
And the question is how can you produce a list of the start times for bookings for tennis courts for

230
00:16:46.540 --> 00:16:51.820
the specific date of 2012 9 21 so 21st of September.

231
00:16:51.820 --> 00:16:58.220
So we want to return a list of the start time and the facility name pairings ordered by the time.

232
00:16:58.330 --> 00:17:03.260
So recall that we only want it for the tennis courts and we want their specific start time.

233
00:17:03.460 --> 00:17:07.270
If we come back to PGA I mean go ahead and clear this.

234
00:17:07.360 --> 00:17:10.110
Let's take a look at what's inside the bookings table.

235
00:17:10.120 --> 00:17:19.540
So select everything from C.D. bookings if we run this note here that we have a booking I.D. a facility

236
00:17:19.540 --> 00:17:21.610
I.D. and a start time.

237
00:17:21.670 --> 00:17:27.700
So we have a facility I.D. but we don't actually know whether it's associated with a tennis court or

238
00:17:27.700 --> 00:17:28.900
not for that.

239
00:17:28.900 --> 00:17:38.230
If we come to see that facilities run this we can see here the names tennis court one tennis court two

240
00:17:38.590 --> 00:17:40.150
and are associated facilities.

241
00:17:40.180 --> 00:17:43.510
So we have their facility as 0 and 1.

242
00:17:43.510 --> 00:17:49.840
So we can either use their name or their facility I.D. to filter out just the tennis courts and then

243
00:17:49.840 --> 00:17:55.120
we need to join this with that booking stable in order to actually grab the start time.

244
00:17:55.120 --> 00:18:00.620
So again if we take a look at the bookings table we have the actual start time.

245
00:18:00.640 --> 00:18:05.330
So the things I'm interested in are that start time and then the facility name.

246
00:18:05.330 --> 00:18:10.960
So either tennis court one or tennis court two and we can decide to filter facilities either by facility

247
00:18:10.960 --> 00:18:13.250
I.D. or facility name.

248
00:18:13.420 --> 00:18:16.070
So let's show you one way you can do this.

249
00:18:16.120 --> 00:18:19.570
This one is actually probably one of questions you can do a multitude of ways.

250
00:18:19.780 --> 00:18:23.590
But the first thing we should be doing is selecting those two columns which again if we take a look

251
00:18:23.590 --> 00:18:26.770
here it's the start time and the name.

252
00:18:26.770 --> 00:18:36.670
So we'll say select from C.D. dot bookings the start time and then also select seedy port facilities

253
00:18:38.250 --> 00:18:39.500
not name.

254
00:18:39.810 --> 00:18:47.960
And then we're going to do is select this from C.D. And we'll take the facilities table and do an inner

255
00:18:47.960 --> 00:18:48.440
join

256
00:18:52.710 --> 00:19:02.810
to see these bookings on me scrunch this down a little bit on the facility I.D. column so on C.D. that

257
00:19:04.180 --> 00:19:13.180
facilities facility I.D. is equal to S.D. dot bookings dot facility I.D. it's going to put that on on

258
00:19:13.180 --> 00:19:13.820
the same line.

259
00:19:13.840 --> 00:19:16.000
Just it's a little easier for me to read here.

260
00:19:16.090 --> 00:19:22.180
So if I just run this note that I get back all the start times and all the names.

261
00:19:22.180 --> 00:19:28.720
So now recall that I need to filter this on the start times that are on September 21st and I'm only

262
00:19:28.720 --> 00:19:35.940
looking for the facilities that are these tennis courts so I can either filter by that facility I.D.

263
00:19:36.310 --> 00:19:38.800
or the tennis courts depending which one you prefer.

264
00:19:38.830 --> 00:19:42.240
Let's go home and begin filtering so that we only get those tennis courts.

265
00:19:42.400 --> 00:19:53.990
And just so it's a little shorter I can say where C.D. dot facilities dot facility I.D. in 0 1.

266
00:19:53.990 --> 00:19:58.760
So if I want it this way No I get back only tennis court 1 and tennis court 2.

267
00:19:58.880 --> 00:20:08.420
The other option would be to say facilities name in and here I could write out tennis court one

268
00:20:11.180 --> 00:20:18.030
comma tennis court too.

269
00:20:18.260 --> 00:20:22.120
So if I run this no I get back the exact same results.

270
00:20:22.130 --> 00:20:27.230
So it's really up to you if you prefer filtering by that facility I.T. or the facility name just so

271
00:20:27.230 --> 00:20:35.450
it's a little cleaner all the facility I.D. that way I'm just typing out a 0 and 1 OK so if I run this

272
00:20:35.780 --> 00:20:39.830
so far my facilities are correct but the actual start times are not correct.

273
00:20:39.830 --> 00:20:43.560
So I'm only looking for things that start on September 21st.

274
00:20:43.670 --> 00:20:53.050
So what we can do that is by saying And C.D. that bookings the start time is greater than or equal to

275
00:20:53.980 --> 00:21:00.780
2012 09 hopes 2012 09 the 21st.

276
00:21:00.790 --> 00:21:05.920
So if I just run this that's this gets me a thing past September 21st.

277
00:21:05.920 --> 00:21:08.860
So if I keep burning notice I get twenty second twenty third and so on.

278
00:21:09.220 --> 00:21:11.880
So actually to have a stop time for this.

279
00:21:12.190 --> 00:21:20.620
So then we'll say and C.D. the bookings that start time is less than.

280
00:21:20.690 --> 00:21:26.590
No I'm just saying less than not equal to 2012 09 the twenty second.

281
00:21:26.660 --> 00:21:29.490
So if you run this it's just everything that's on the 21st.

282
00:21:29.540 --> 00:21:34.370
And if you scroll down you can confirm that by just saying twenty first and then to make sure everything

283
00:21:34.370 --> 00:21:35.680
is ordered correctly.

284
00:21:35.700 --> 00:21:40.600
Well we can do is add in one last order by which is ordered by C.D..

285
00:21:40.610 --> 00:21:48.920
The bookings that start time run that and he we get back our final result which is the start time and

286
00:21:48.920 --> 00:21:55.160
then the name tennis court 1 or tennis court 2 for everything that was on September 21st.

287
00:21:55.160 --> 00:21:57.200
OK so one final question.

288
00:21:57.200 --> 00:22:02.300
Come back to the assessment test and that is how can you produce a list of the start times for bookings

289
00:22:02.300 --> 00:22:04.910
by members named David Farrell.

290
00:22:05.030 --> 00:22:10.820
So let's go ahead and do that come back to P. gentlemen going to say select.

291
00:22:10.940 --> 00:22:19.840
And here we're really just interested in let's say Head Start Time from C.D. bookings.

292
00:22:20.000 --> 00:22:22.460
We're going to do an inner join.

293
00:22:22.460 --> 00:22:27.410
We have C.D. that members because the members actually hold the names and the bookings holds the booking

294
00:22:27.410 --> 00:22:28.450
information.

295
00:22:28.580 --> 00:22:30.910
And so I just joined this simply on member ideas.

296
00:22:30.950 --> 00:22:38.210
So we'll say members that member I.D. is equal to see these bookings that member I.D..

297
00:22:38.560 --> 00:22:45.940
And if I just run this and let's just select everything first so we can check it out so here I can see

298
00:22:45.940 --> 00:22:51.820
the booking I.D. facility I.D. and the member I.D. And if I scroll down I can see the surname and first

299
00:22:51.820 --> 00:22:52.480
name.

300
00:22:52.540 --> 00:23:03.260
So recall I'm only interested in David Burrell so we'll say where C.D. that members first name is equal

301
00:23:03.260 --> 00:23:15.610
to David and C.D. that members that his surname is equal to all.

302
00:23:15.630 --> 00:23:21.180
Make sure you get the capitalization right there run that and now I can see all the bookings for David

303
00:23:21.180 --> 00:23:24.080
for all I'm actually interested in the start time.

304
00:23:24.150 --> 00:23:30.920
So instead of selecting all the columns I'll say that bookings the start time run that.

305
00:23:31.120 --> 00:23:31.660
And there we go.

306
00:23:32.320 --> 00:23:32.560
OK.

307
00:23:32.590 --> 00:23:35.700
So it's to be three rows.

308
00:23:36.040 --> 00:23:36.580
All right.

309
00:23:36.700 --> 00:23:38.550
That's it for the assessment test.

310
00:23:38.650 --> 00:23:43.200
Please take a look at the Q and A forums if you have any questions on any of those.

311
00:23:43.210 --> 00:23:44.740
Thanks and I'll see you at the next lecture.
