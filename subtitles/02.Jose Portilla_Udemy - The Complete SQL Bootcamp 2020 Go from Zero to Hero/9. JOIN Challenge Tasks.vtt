WEBVTT
1
00:00:05.340 --> 00:00:10.230
Welcome back everyone to this lecture where we're going to challenge you and your new skills on these

2
00:00:10.260 --> 00:00:11.560
joint concepts.

3
00:00:11.610 --> 00:00:16.890
It's just going to be two quick problems but one of them is going to try to have you do something that

4
00:00:16.890 --> 00:00:19.010
we didn't exactly see in the lectures.

5
00:00:19.050 --> 00:00:25.880
So start at the first challenge is the easier the to so let's imagine that a California sales tax law

6
00:00:26.000 --> 00:00:30.710
has changed and we need to alert our customers to this through e-mail.

7
00:00:30.720 --> 00:00:37.610
So the question is what are the e-mails of the customers who live in California OK here are the expected

8
00:00:37.610 --> 00:00:39.270
results.

9
00:00:39.590 --> 00:00:43.500
So you should be able to view nine customers that live in California.

10
00:00:43.700 --> 00:00:48.170
And these are the e-mails you may not get them in this exact order depending on how you actually solve

11
00:00:48.170 --> 00:00:49.870
this problem.

12
00:00:49.880 --> 00:00:53.830
Coming up are some hints.

13
00:00:53.990 --> 00:00:58.460
So as you probably saw from the previous picture you're going to need to take a look at the district

14
00:00:58.520 --> 00:01:05.450
column for whatever reason the actual database labels the California state as a district.

15
00:01:05.450 --> 00:01:06.830
So take a look at the district column.

16
00:01:06.830 --> 00:01:11.150
That's where you're going to be using and you're going to need to use the address and customer tables

17
00:01:12.320 --> 00:01:12.880
OK.

18
00:01:12.930 --> 00:01:16.470
Let's go ahead and take a look at the solution.

19
00:01:16.560 --> 00:01:17.960
So here's the solution.

20
00:01:17.970 --> 00:01:23.980
In fact I'm going to code this out in peach cabin just so we can work through the logic a little bit.

21
00:01:24.000 --> 00:01:26.090
Let's head over the P.G. Ataman OK.

22
00:01:26.160 --> 00:01:32.700
Here I am in P.G. Ataman what I'm going to do is first explore the two tables we're working with so

23
00:01:32.700 --> 00:01:34.180
I know I have the customer table.

24
00:01:34.180 --> 00:01:39.090
I'll take a look at it and what I need to do is figure out what am I going to join the customer information

25
00:01:39.090 --> 00:01:41.610
on to the address table.

26
00:01:41.610 --> 00:01:48.390
And you should notice right away that the customers have an address I.D. and they don't really have

27
00:01:48.450 --> 00:01:51.400
any other information on their address.

28
00:01:51.420 --> 00:01:56.250
And if we take a look at the address table so let's select everything from address.

29
00:01:56.250 --> 00:02:01.950
We have this unique address I.D. that then has all the information on the address and specifically what

30
00:02:01.950 --> 00:02:05.520
we're looking for is information about this particular district.

31
00:02:05.550 --> 00:02:09.740
So that's the California district that later we're going to be filtering on.

32
00:02:09.840 --> 00:02:15.580
So since we're going to be doing an inner join because I essentially just want where the tables match

33
00:02:15.580 --> 00:02:26.280
up of a customer living in California what I can do is say select everything from address inner join

34
00:02:27.090 --> 00:02:39.640
with customer on address dot address I.D. is equal to that customer's address I.D..

35
00:02:39.980 --> 00:02:44.240
So if I just run this I should get back a whole bunch of columns.

36
00:02:44.570 --> 00:02:50.270
So notice now I essentially have this kind of mega table so to speak returned where it's just all the

37
00:02:50.270 --> 00:02:55.210
address information for that particular customer because I'm joining it by the address I.D..

38
00:02:55.340 --> 00:02:59.000
So now I get to see the address editors to district and so on.

39
00:02:59.090 --> 00:03:03.050
And if I keep scrolling all the way over now I get to see the customer information their first name

40
00:03:03.050 --> 00:03:08.780
last name email and so on and notice here address I.D. is repeated it shows up twice.

41
00:03:08.810 --> 00:03:13.580
And that's because there was to address I.D. columns one from the address table and then one from the

42
00:03:13.580 --> 00:03:14.930
customer table.

43
00:03:14.930 --> 00:03:18.740
So in theory I can actually begin filtering off the results of this.

44
00:03:19.100 --> 00:03:31.820
So now I can say where district is equal to California and if I run this notice now I get back all those

45
00:03:31.820 --> 00:03:36.710
same columns but now it's only for the districts to have California and if I expand on this a little

46
00:03:36.710 --> 00:03:40.490
bit and scroll down you should see that essentially only nine results.

47
00:03:40.610 --> 00:03:49.760
And recall really the information I was interested in was the e-mail so I can say district email columns

48
00:03:49.760 --> 00:03:53.440
from this result and I get back these results here.

49
00:03:53.720 --> 00:04:01.280
Now a really common student question is What if I wanted to say from customer inner join on address

50
00:04:01.580 --> 00:04:07.010
that's totally ok to since we're really doing an inner join and we're interested where I have entries

51
00:04:07.070 --> 00:04:10.540
for both the customer and the address.

52
00:04:10.550 --> 00:04:14.720
It's not really helpful if I don't have a customer that exists there because I'm not going to be able

53
00:04:14.720 --> 00:04:16.550
to have an e-mail for them.

54
00:04:16.550 --> 00:04:20.760
So you could technically switch out address and customer here.

55
00:04:20.780 --> 00:04:21.920
So I just want to show you that.

56
00:04:22.400 --> 00:04:30.170
So let's say I say select from customer inner join on address notice here the order doesn't matter because

57
00:04:30.170 --> 00:04:31.340
this is an inner join.

58
00:04:31.340 --> 00:04:35.120
So if I run this exact same thing I get back the exact same results.

59
00:04:35.150 --> 00:04:37.960
So for an inner join this table order doesn't matter.

60
00:04:38.000 --> 00:04:44.720
This joint column order doesn't really matter either because it's the same inner join it's that center

61
00:04:45.080 --> 00:04:50.890
of that Venn diagram where they're actually connecting and you didn't have to do this in as many steps.

62
00:04:51.080 --> 00:04:55.760
Hopefully you're able to just kind of do this in a few steps without having to select all the columns

63
00:04:55.760 --> 00:04:57.040
from the table.

64
00:04:57.050 --> 00:04:57.560
All right.

65
00:04:57.740 --> 00:05:01.610
So that's the logic for building out this first challenge.

66
00:05:01.610 --> 00:05:05.600
Now let's go ahead and go back to the second challenge which is a bit harder.

67
00:05:05.750 --> 00:05:06.020
All right.

68
00:05:06.020 --> 00:05:08.740
Your second challenge is the following situation.

69
00:05:08.990 --> 00:05:15.200
A customer walks into the store and they're a huge fan of this actor Nick Walberg and they want to know

70
00:05:15.200 --> 00:05:18.060
which movies has Nick Wahlberg been in.

71
00:05:18.170 --> 00:05:21.380
So your task is to basically get a list of all the movies.

72
00:05:21.380 --> 00:05:22.850
Nick Wahlberg has been in.

73
00:05:23.540 --> 00:05:25.540
So let's take a look at the expected results.

74
00:05:26.880 --> 00:05:28.020
Here are the expected results.

75
00:05:28.020 --> 00:05:30.510
There should be twenty five movies.

76
00:05:30.510 --> 00:05:32.530
You can get them in any order you want.

77
00:05:32.700 --> 00:05:39.270
But really what I want you to do here is just stop the video right here and don't move on to the hints

78
00:05:39.360 --> 00:05:47.010
and solution instead really push yourself to see if you're able to return the results as shown here.

79
00:05:47.010 --> 00:05:52.320
Not just the titles but also the first name and last name linked to the title to confirm.

80
00:05:52.440 --> 00:05:55.020
Nick Wahlberg is in this movie.

81
00:05:55.020 --> 00:05:59.010
And the reason I really want you to push yourself here is because you're gonna have to do something

82
00:05:59.010 --> 00:06:05.520
that we didn't exactly show in the lecture but you should be able to look up online through a stack

83
00:06:05.550 --> 00:06:10.070
overflow search a quick Google search or even the postcard sequel documentation.

84
00:06:10.230 --> 00:06:15.630
And this is really where you get to expand your skill set and become good at looking up information

85
00:06:15.690 --> 00:06:19.950
online instead of just becoming a master of memorizing everything.

86
00:06:19.950 --> 00:06:25.350
In fact it's a much more valuable skill to be able to look things up for new situations because you're

87
00:06:25.350 --> 00:06:28.650
going to always be encountering new situations.

88
00:06:28.650 --> 00:06:33.780
So I really encourage you to this pause the video and try your hardest to see if you can duplicate or

89
00:06:33.780 --> 00:06:39.720
replicate this expected result table and get back to twenty five movies that Nick Wahlberg has been

90
00:06:39.720 --> 00:06:41.160
in.

91
00:06:41.290 --> 00:06:41.640
OK.

92
00:06:41.650 --> 00:06:42.990
So I hope you gave it your best shot.

93
00:06:43.360 --> 00:06:44.320
If you're still a little stuck.

94
00:06:44.320 --> 00:06:47.160
We're gonna do is give you some hints.

95
00:06:47.310 --> 00:06:48.270
So here are the hints.

96
00:06:48.270 --> 00:06:53.760
You're actually going to need to do two joins in a row to do this in a single query.

97
00:06:53.760 --> 00:06:57.600
If you're actually already got the results be did it throughout multiple queries.

98
00:06:57.600 --> 00:07:03.950
That's ok too but I would highly encourage you to try to do this as a single SQL query call.

99
00:07:04.050 --> 00:07:09.840
And in order to do that you actually to do two joins in a row and I highly encourage you to search the

100
00:07:09.840 --> 00:07:15.330
online documentation or a simple Google search to see how this is done or if you want you can also search

101
00:07:15.330 --> 00:07:16.580
the Q and A forums.

102
00:07:16.590 --> 00:07:17.980
This question has been answered before.

103
00:07:18.000 --> 00:07:20.350
How to do multiple joins in a row.

104
00:07:20.550 --> 00:07:26.520
The tables you should be using are the actor table the film table and the film actor table.

105
00:07:26.520 --> 00:07:31.500
OK so again this is something we didn't exactly show in the lecture because we want you to be able to

106
00:07:31.500 --> 00:07:36.930
feel comfortable pushing yourself beyond your limits of what you already know and discover new information

107
00:07:37.050 --> 00:07:38.620
online by yourself.

108
00:07:39.330 --> 00:07:39.710
Okay.

109
00:07:39.720 --> 00:07:41.030
So those are the hints.

110
00:07:41.070 --> 00:07:44.460
And finally let's go over the solution.

111
00:07:44.610 --> 00:07:46.710
So this is what the solution should look like.

112
00:07:46.710 --> 00:07:51.630
As an example know we're essentially going to select Title First Name Last Name and we're going to be

113
00:07:51.630 --> 00:07:53.070
doing two joints.

114
00:07:53.070 --> 00:07:57.960
So let's go ahead and jump the PGA admin so we can walk through a little bit of the logic of what's

115
00:07:57.960 --> 00:07:59.030
happening here.

116
00:07:59.510 --> 00:07:59.750
OK.

117
00:07:59.760 --> 00:08:01.970
Here I am in PGA admin again.

118
00:08:02.100 --> 00:08:07.980
Let's go out and explore the three tables we're going to be working with and that is the film table.

119
00:08:07.980 --> 00:08:12.510
And if I run this note that the film table has the title information that I'm looking for.

120
00:08:12.720 --> 00:08:15.110
And it also has this film I.D..

121
00:08:15.320 --> 00:08:22.030
Unfortunately the film table itself has no direct information about what actors are in that film.

122
00:08:22.170 --> 00:08:29.400
And if I take a look at the actor table and run that this is the information of the first name and last

123
00:08:29.400 --> 00:08:33.130
name I can actually see Nick Wahlberg has the actor idea too.

124
00:08:33.150 --> 00:08:40.170
So he shows a second that list and it has the actor I.D. what I need to do is figure out the go between

125
00:08:40.250 --> 00:08:45.870
or connection between the film table and the accurate table which this database actually has for us

126
00:08:47.040 --> 00:08:50.170
in the form of the film underscore actor table.

127
00:08:50.550 --> 00:08:55.260
This film macro table directly connects the actor I.D. to the film I.D..

128
00:08:55.830 --> 00:09:02.770
So what I aim to do are two sets of joints essentially film to film actor I.D. and then film actor Ida

129
00:09:03.000 --> 00:09:05.640
joined a film results to the actor.

130
00:09:05.640 --> 00:09:09.240
And then I can do any filtering I want based off the first name and last name.

131
00:09:10.110 --> 00:09:11.800
Let's go ahead and check this out.

132
00:09:11.820 --> 00:09:14.680
There's lots of different ways you could do this depending on the ordering.

133
00:09:14.670 --> 00:09:20.490
You think of but let's start off by connecting the actor to the film actor table.

134
00:09:20.490 --> 00:09:34.170
So let's say select everything from actor inner join with this film actor table on actor the actor I.D.

135
00:09:37.190 --> 00:09:48.220
is equal to film actor that actor I.D. So if I just run this and see the results here.

136
00:09:48.290 --> 00:09:54.980
Now we have the information of my actors first name and last name and are actor I.D. And if I scroll

137
00:09:54.980 --> 00:10:03.350
down I now have this film I.D. which is exactly what I need to join this now with the film table.

138
00:10:03.350 --> 00:10:08.180
So this is where I need to do yet another inner join which hopefully are able to figure out through

139
00:10:08.180 --> 00:10:11.560
a little bit of google searching and if not that's OK.

140
00:10:11.560 --> 00:10:13.080
That's what this lecture is for.

141
00:10:13.240 --> 00:10:20.780
So that we're going to inner join these results with film on and this is where we have to think what

142
00:10:20.780 --> 00:10:22.490
are we actually joining here.

143
00:10:22.490 --> 00:10:29.620
Well I'm looking for the join between the film actors result for a film might be with the film.

144
00:10:30.050 --> 00:10:33.440
So I'm going to say film actor.

145
00:10:33.500 --> 00:10:34.780
The film I D.

146
00:10:34.940 --> 00:10:42.360
Equal to film that film Ida run this.

147
00:10:43.310 --> 00:10:47.960
And now I get back even more results with the actor I.D. first name last name.

148
00:10:48.020 --> 00:10:50.090
Last update actor the film.

149
00:10:50.110 --> 00:10:52.820
The film I.D. and then the title.

150
00:10:52.820 --> 00:10:54.940
So what I'm actually interested in here.

151
00:10:55.100 --> 00:10:58.860
I'm interested in the title and the first name and last name.

152
00:10:59.030 --> 00:11:07.780
So let's just select those columns Title First Name Last Name run that.

153
00:11:08.190 --> 00:11:12.620
So now I see the titles and then the actors that are in that title.

154
00:11:12.670 --> 00:11:13.510
Perfect.

155
00:11:13.510 --> 00:11:14.770
So what's next.

156
00:11:14.770 --> 00:11:19.600
I just need a full trial where the first name is equal to Nick and the last name is equal to Wahlberg.

157
00:11:19.630 --> 00:11:25.030
So we're going to do here is say where first name.

158
00:11:25.030 --> 00:11:31.360
Equal to Nick and last name.

159
00:11:31.590 --> 00:11:39.060
Equal to Wahlberg and make sure you take note of the capitalization so you run this.

160
00:11:39.090 --> 00:11:42.970
And now I get to see the titles that are associate of the actor Nick Wahlberg.

161
00:11:43.100 --> 00:11:46.270
If I scroll down I should see those twenty five titles.

162
00:11:46.300 --> 00:11:48.890
Okay so that's the logic here.

163
00:11:48.930 --> 00:11:54.630
You gonna take your first results from actor join on the film actor on the actor I.D. then join those

164
00:11:54.630 --> 00:12:00.290
results with film based off the film I.D. and technically you could have switch these orders around.

165
00:12:00.690 --> 00:12:04.230
Since we're essentially looking at the interconnection or these inner join.

166
00:12:04.230 --> 00:12:06.440
So the orders don't really matter.

167
00:12:06.520 --> 00:12:09.230
OK that's it for your challenges.

168
00:12:09.240 --> 00:12:13.910
Hopefully you were able to really push yourself on this second challenge problem.

169
00:12:13.980 --> 00:12:14.970
I'll see you at the next lecture.
