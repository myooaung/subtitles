WEBVTT
1
00:00:00.005 --> 00:00:02.002
- [Instructor] So now that we've got our config server

2
00:00:02.002 --> 00:00:03.004
up and running,

3
00:00:03.004 --> 00:00:05.007
it's time to start consuming that config

4
00:00:05.007 --> 00:00:08.006
in our other micro services.

5
00:00:08.006 --> 00:00:11.000
So let's jump over here to our IDE

6
00:00:11.000 --> 00:00:12.007
and open up our guest services,

7
00:00:12.007 --> 00:00:16.000
and I want to start here with the pom file.

8
00:00:16.000 --> 00:00:18.004
First thing we're going to do is we're going to add a new property

9
00:00:18.004 --> 00:00:20.000
and the property that we are going to add

10
00:00:20.000 --> 00:00:23.004
is spring-cloud.version.

11
00:00:23.004 --> 00:00:24.009
And we're going to set this today

12
00:00:24.009 --> 00:00:29.009
equal to the value of Hoxton.RC2.

13
00:00:29.009 --> 00:00:31.004
Now you'll want to make sure that you use

14
00:00:31.004 --> 00:00:34.006
the latest compatible version of Spring Cloud.

15
00:00:34.006 --> 00:00:37.008
And this is the easiest way to make that happen.

16
00:00:37.008 --> 00:00:39.001
So let's scroll down here

17
00:00:39.001 --> 00:00:42.007
and we are going to add a dependency.

18
00:00:42.007 --> 00:00:46.001
And the dependency that we are going to add

19
00:00:46.001 --> 00:00:51.004
is spring-cloud-config-client.

20
00:00:51.004 --> 00:00:58.004
And that is going to come from org.springframework.cloud.

21
00:00:58.004 --> 00:00:59.003
Now one thing to note

22
00:00:59.003 --> 00:01:01.008
is this may not resolve right away

23
00:01:01.008 --> 00:01:05.004
because we've got to go put in a few more values.

24
00:01:05.004 --> 00:01:06.008
The next thing that we are going to add

25
00:01:06.008 --> 00:01:10.005
is we're going to add a dependency management section

26
00:01:10.005 --> 00:01:15.007
and this is to bring in our spring cloud dependencies.

27
00:01:15.007 --> 00:01:19.003
Much the same way that spring boot operates.

28
00:01:19.003 --> 00:01:21.001
So we're going to bring in our artifact ID

29
00:01:21.001 --> 00:01:27.001
of spring-cloud-dependencies

30
00:01:27.001 --> 00:01:34.005
and this comes from org.springframework.cloud.

31
00:01:34.005 --> 00:01:37.003
And we'll bring in a version.

32
00:01:37.003 --> 00:01:39.008
And that version is going to be equal to dollar sign

33
00:01:39.008 --> 00:01:46.000
curly brace spring-cloud.version.

34
00:01:46.000 --> 00:01:50.000
And the type of this artifact is a pom.

35
00:01:50.000 --> 00:01:54.006
And the scope of this is going to be import only.

36
00:01:54.006 --> 00:01:56.009
And the last thing that we need to add

37
00:01:56.009 --> 00:02:00.006
is we need to add a repository section.

38
00:02:00.006 --> 00:02:03.005
And specifically a repository.

39
00:02:03.005 --> 00:02:08.000
And that repository will have an IDE of spring milestones

40
00:02:08.000 --> 00:02:12.008
and a name of spring milestones

41
00:02:12.008 --> 00:02:21.004
and then a URL that equals https://repo.spring.io/milestone.

42
00:02:21.004 --> 00:02:24.004
So now we'll be able to update this as we need to,

43
00:02:24.004 --> 00:02:26.005
but in the meantime we've got everything set up

44
00:02:26.005 --> 00:02:29.003
in order for our application to start, dependency wise,

45
00:02:29.003 --> 00:02:31.007
communicating with our service.

46
00:02:31.007 --> 00:02:34.007
So now we can actually go in and put in our bootstrap.

47
00:02:34.007 --> 00:02:36.006
So in source main resources,

48
00:02:36.006 --> 00:02:40.000
I want you to create a new file.

49
00:02:40.000 --> 00:02:46.005
And that file is going to be called bootstrap.properties.

50
00:02:46.005 --> 00:02:48.001
In our bootstrap.properties

51
00:02:48.001 --> 00:02:52.007
we are going to put in a spring.application.name.

52
00:02:52.007 --> 00:02:54.003
And that spring.application.name

53
00:02:54.003 --> 00:02:57.006
is going to be equal to guestservices.

54
00:02:57.006 --> 00:02:59.006
This actually needs to be the same name

55
00:02:59.006 --> 00:03:01.001
as the properties file

56
00:03:01.001 --> 00:03:03.009
that we put on the config server itself.

57
00:03:03.009 --> 00:03:04.008
Kind of makes sense.

58
00:03:04.008 --> 00:03:07.007
We have to have a one to one mapping between our service

59
00:03:07.007 --> 00:03:10.003
and the configuration itself.

60
00:03:10.003 --> 00:03:15.004
We're also going to put in here a spring.cloud.config.uri.

61
00:03:15.004 --> 00:03:18.003
In other words we're going to tell it where to go look at

62
00:03:18.003 --> 00:03:24.008
and it's going to look at http://localhost:9000.

63
00:03:24.008 --> 00:03:28.000
So at this point we've got everything that we need to do.

64
00:03:28.000 --> 00:03:30.002
We're going to leave our config server up and running.

65
00:03:30.002 --> 00:03:33.004
So if it's not go ahead and get it started.

66
00:03:33.004 --> 00:03:37.002
And now we're going to start our guest services application.

67
00:03:37.002 --> 00:03:38.005
Now if you remember earlier,

68
00:03:38.005 --> 00:03:41.006
the guest services ran on port 8080.

69
00:03:41.006 --> 00:03:44.007
So now as we start this application up,

70
00:03:44.007 --> 00:03:46.003
you can see in my little window here

71
00:03:46.003 --> 00:03:48.009
that it's actually started at 8800.

72
00:03:48.009 --> 00:03:50.001
Let's confirm that.

73
00:03:50.001 --> 00:03:52.000
We're going to go to a web browser

74
00:03:52.000 --> 00:03:58.000
and we're going to go to localhost:8080/guests.

75
00:03:58.000 --> 00:04:01.000
404, makes sense.

76
00:04:01.000 --> 00:04:02.004
We are no longer serving there,

77
00:04:02.004 --> 00:04:05.008
so we're going to change that to 8800

78
00:04:05.008 --> 00:04:07.004
and we get data back.

79
00:04:07.004 --> 00:04:09.002
So now we've configured our service

80
00:04:09.002 --> 00:04:11.002
through the externalized config

81
00:04:11.002 --> 00:04:12.008
to get its server port.

82
00:04:12.008 --> 00:04:13.009
And obviously

83
00:04:13.009 --> 00:04:16.002
this is a very trivial example of configuration,

84
00:04:16.002 --> 00:04:18.008
but no matter how complex your configuration is,

85
00:04:18.008 --> 00:04:22.000
it all operates the exact same way.

