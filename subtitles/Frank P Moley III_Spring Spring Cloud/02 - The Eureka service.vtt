WEBVTT
1
00:00:00.005 --> 00:00:02.007
- [Instructor] So now let's go set up a Eureka server

2
00:00:02.007 --> 00:00:04.006
so we can achieve service discovery

3
00:00:04.006 --> 00:00:07.001
within our little system.

4
00:00:07.001 --> 00:00:08.008
Just like we did with config-server,

5
00:00:08.008 --> 00:00:10.003
let's jump back into our project,

6
00:00:10.003 --> 00:00:13.005
and we'll create a new module.

7
00:00:13.005 --> 00:00:15.004
Again, use whatever version you want to,

8
00:00:15.004 --> 00:00:18.006
whether it's your IDE or start.spring.io

9
00:00:18.006 --> 00:00:20.002
or just manually building the pom.

10
00:00:20.002 --> 00:00:22.002
That's all up to you.

11
00:00:22.002 --> 00:00:24.005
We're going to set the group name in this example

12
00:00:24.005 --> 00:00:29.003
to be com.frankmoley.lil.

13
00:00:29.003 --> 00:00:34.002
We're going to name this artifact eureka-server.

14
00:00:34.002 --> 00:00:38.006
We want to set our Java version to be 11.

15
00:00:38.006 --> 00:00:39.005
And in this case,

16
00:00:39.005 --> 00:00:41.001
the only thing that we need to bring in

17
00:00:41.001 --> 00:00:46.001
is discovery Eureka Server.

18
00:00:46.001 --> 00:00:48.007
Go ahead and hit next.

19
00:00:48.007 --> 00:00:50.006
Accept its location.

20
00:00:50.006 --> 00:00:54.005
And we'll allow Maven to do all of its downloads.

21
00:00:54.005 --> 00:00:57.002
So now that Maven's downloaded all of our dependencies,

22
00:00:57.002 --> 00:00:59.009
let's open up a Eureka server

23
00:00:59.009 --> 00:01:03.000
and we are going to go to src/main/java

24
00:01:03.000 --> 00:01:06.003
and open up our application class,

25
00:01:06.003 --> 00:01:08.003
and we're going to annotate this class

26
00:01:08.003 --> 00:01:15.007
with @EnableEurekaServer.

27
00:01:15.007 --> 00:01:19.000
And we will now open up our src/main/resources

28
00:01:19.000 --> 00:01:21.009
and our application properties.

29
00:01:21.009 --> 00:01:25.002
So generally Eureka runs at a specific port,

30
00:01:25.002 --> 00:01:26.006
and we're going to go ahead and make sure

31
00:01:26.006 --> 00:01:28.007
that that's where our Spring Boot application runs.

32
00:01:28.007 --> 00:01:31.000
It just makes things a little bit easier.

33
00:01:31.000 --> 00:01:34.007
So we're going to run this at 8761,

34
00:01:34.007 --> 00:01:43.000
and we are going to set our Eureka client register.

35
00:01:43.000 --> 00:01:44.004
I'm going to set it equal to false.

36
00:01:44.004 --> 00:01:46.009
So we don't want to register this system

37
00:01:46.009 --> 00:01:48.009
with the server itself.

38
00:01:48.009 --> 00:01:51.007
That doesn't necessarily make sense.

39
00:01:51.007 --> 00:01:57.004
And we're also going to have this fetch the registry

40
00:01:57.004 --> 00:01:58.006
equal to false, as well.

41
00:01:58.006 --> 00:02:01.004
We don't need to do pulling operations in this case.

42
00:02:01.004 --> 00:02:04.000
So we're going to push everything to the service.

43
00:02:04.000 --> 00:02:06.008
We're not going to have the service pull back out.

44
00:02:06.008 --> 00:02:07.008
And that's all there is to it.

45
00:02:07.008 --> 00:02:11.004
We can now go ahead and start up Eureka.

46
00:02:11.004 --> 00:02:14.002
So I'm going to go back to my nice little console tool here

47
00:02:14.002 --> 00:02:16.007
and again run the main application.

48
00:02:16.007 --> 00:02:19.008
Do it whichever way makes sense for you.

49
00:02:19.008 --> 00:02:23.005
I'm going to start this application up.

50
00:02:23.005 --> 00:02:25.003
All right, now that Eureka is up and running,

51
00:02:25.003 --> 00:02:27.007
you may have seen a few warnings pop in the console.

52
00:02:27.007 --> 00:02:28.007
That's actually normal

53
00:02:28.007 --> 00:02:31.002
considering the mode that we're running this in.

54
00:02:31.002 --> 00:02:33.005
But what I want you to do is go to the Eureka console.

55
00:02:33.005 --> 00:02:36.006
So you'll notice that we're running on 8761.

56
00:02:36.006 --> 00:02:38.007
So let's jump over to a web browser

57
00:02:38.007 --> 00:02:45.005
and we will go to localhost:8761,

58
00:02:45.005 --> 00:02:47.004
and you'll see that Eureka loads up

59
00:02:47.004 --> 00:02:49.007
with a really nice web application,

60
00:02:49.007 --> 00:02:51.005
and this lets us know a lot of the details

61
00:02:51.005 --> 00:02:52.005
about our system.

62
00:02:52.005 --> 00:02:54.002
We can see the environment we're running in,

63
00:02:54.002 --> 00:02:57.001
the data center, what replicas we're running.

64
00:02:57.001 --> 00:03:00.007
This becomes very important in a production system.

65
00:03:00.007 --> 00:03:01.005
And you'll see that we have

66
00:03:01.005 --> 00:03:03.004
no instances currently registered

67
00:03:03.004 --> 00:03:05.000
'cause we didn't register ourself,

68
00:03:05.000 --> 00:03:07.001
which is what was expected.

69
00:03:07.001 --> 00:03:10.007
And then some of the basic details about the system

70
00:03:10.007 --> 00:03:12.005
and the replica itself.

71
00:03:12.005 --> 00:03:14.003
What we really are going to concern ourselves with

72
00:03:14.003 --> 00:03:15.002
right now, though,

73
00:03:15.002 --> 00:03:18.003
is the instance that's currently registered with Eureka,

74
00:03:18.003 --> 00:03:20.000
and we're going to get to that next.

