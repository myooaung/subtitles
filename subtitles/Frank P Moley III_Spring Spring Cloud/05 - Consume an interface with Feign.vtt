WEBVTT
1
00:00:00.005 --> 00:00:01.008
- [Instructor] So Ribbon allows us

2
00:00:01.008 --> 00:00:04.004
to load balance across instances,

3
00:00:04.004 --> 00:00:08.004
but what if we didn't even need to implement the call?

4
00:00:08.004 --> 00:00:11.003
That's where we can enter into the picture OpenFeign.

5
00:00:11.003 --> 00:00:12.003
So back in our IDE,

6
00:00:12.003 --> 00:00:15.005
I want you to open up the room reservation service,

7
00:00:15.005 --> 00:00:17.005
the pom.xml.

8
00:00:17.005 --> 00:00:21.000
All right, let's create a new dependency.

9
00:00:21.000 --> 00:00:31.007
And this is going to be on spring-cloud-starter-openfeign.

10
00:00:31.007 --> 00:00:32.008
And we will allow the version

11
00:00:32.008 --> 00:00:35.006
to come from dependency management.

12
00:00:35.006 --> 00:00:38.002
All right, now that our dependency has come in,

13
00:00:38.002 --> 00:00:39.006
let's go to src/main/java

14
00:00:39.006 --> 00:00:42.008
and open up our application class,

15
00:00:42.008 --> 00:00:48.005
and we're going to add an annotation for EnableFeignClients.

16
00:00:48.005 --> 00:00:50.007
Now, the way that Feign works is you build

17
00:00:50.007 --> 00:00:53.009
an interface on the consumption side

18
00:00:53.009 --> 00:00:56.008
that matches the interface on the service side

19
00:00:56.008 --> 00:00:59.005
and then you wire across that boundary.

20
00:00:59.005 --> 00:01:01.001
Let's go ahead and get that started.

21
00:01:01.001 --> 00:01:04.007
So we need to create a new interface,

22
00:01:04.007 --> 00:01:09.009
and we are going to call this RoomClient.

23
00:01:09.009 --> 00:01:13.006
Make that an interface, not a class.

24
00:01:13.006 --> 00:01:16.002
And we are going to put a FeignClient on here.

25
00:01:16.002 --> 00:01:17.008
Now, in our parentheses,

26
00:01:17.008 --> 00:01:21.002
we want to match what shows up in Eureka.

27
00:01:21.002 --> 00:01:24.001
So here we're going to do roomservices

28
00:01:24.001 --> 00:01:27.002
and we are going to do a GetMapping

29
00:01:27.002 --> 00:01:29.008
and we're going to get a list of room objects.

30
00:01:29.008 --> 00:01:31.008
Now, I don't have to match the iterable

31
00:01:31.008 --> 00:01:34.000
because both of them are collections,

32
00:01:34.000 --> 00:01:36.009
and when they get unmarshalled, it'll be fine.

33
00:01:36.009 --> 00:01:38.009
But for now, we will just make it a list

34
00:01:38.009 --> 00:01:41.009
'cause that's easier for us to deal with on our side.

35
00:01:41.009 --> 00:01:44.002
So we do getAllRooms.

36
00:01:44.002 --> 00:01:45.007
And unfortunately on this side,

37
00:01:45.007 --> 00:01:49.007
I need to put where this is at, so /rooms.

38
00:01:49.007 --> 00:01:52.000
And we're going to add another GetMapping,

39
00:01:52.000 --> 00:01:55.005
and this one is going to be at /rooms/id,

40
00:01:55.005 --> 00:01:58.001
again, to match our end use case.

41
00:01:58.001 --> 00:02:01.001
And this is going to be getRoom

42
00:02:01.001 --> 00:02:03.008
and it is going to take a path variable,

43
00:02:03.008 --> 00:02:09.007
and that path variable is of type long id.

44
00:02:09.007 --> 00:02:12.006
So again, our client looks exactly like

45
00:02:12.006 --> 00:02:14.002
the web service interface.

46
00:02:14.002 --> 00:02:15.004
That's what we want.

47
00:02:15.004 --> 00:02:18.000
It makes this super easy to implement.

48
00:02:18.000 --> 00:02:20.002
So we can now get rid of our rest template

49
00:02:20.002 --> 00:02:22.004
and the bean that went with that.

50
00:02:22.004 --> 00:02:25.000
With Feign, you're going to automatically get Ribbon.

51
00:02:25.000 --> 00:02:26.003
So Ribbon's on the class path.

52
00:02:26.003 --> 00:02:29.003
You're going to automatically get that configuration.

53
00:02:29.003 --> 00:02:33.005
So let's take a look at our web service.

54
00:02:33.005 --> 00:02:36.003
And as expected, RestTemplate starts to fail

55
00:02:36.003 --> 00:02:38.008
because we don't have it defined,

56
00:02:38.008 --> 00:02:42.004
but we are going to do a RoomClient,

57
00:02:42.004 --> 00:02:46.005
and we will add that to our constructor.

58
00:02:46.005 --> 00:02:51.002
Make that final to be more specific.

59
00:02:51.002 --> 00:02:53.004
Add that to our constructor here,

60
00:02:53.004 --> 00:02:56.001
allow it to do its thing.

61
00:02:56.001 --> 00:02:57.008
Could've just typed this,

62
00:02:57.008 --> 00:03:01.008
but I like to use tools in my IDE.

63
00:03:01.008 --> 00:03:03.008
Want to get rid of the rest template.

64
00:03:03.008 --> 00:03:06.004
No longer need it.

65
00:03:06.004 --> 00:03:09.006
Now, we're going to do a few more modifications,

66
00:03:09.006 --> 00:03:11.006
so we'll get rid of this private method.

67
00:03:11.006 --> 00:03:14.001
No longer needed.

68
00:03:14.001 --> 00:03:15.003
Rooms, in this case,

69
00:03:15.003 --> 00:03:22.006
are going to come from this.roomClient.getAllRooms.

70
00:03:22.006 --> 00:03:23.006
Makes sense.

71
00:03:23.006 --> 00:03:25.007
And everything else should be the same.

72
00:03:25.007 --> 00:03:27.005
So we'll just let this go

73
00:03:27.005 --> 00:03:32.006
and we will restart our application.

74
00:03:32.006 --> 00:03:34.007
So let's jump back into our web browser

75
00:03:34.007 --> 00:03:38.000
and we'll go ahead and just refresh this view from before,

76
00:03:38.000 --> 00:03:39.001
and we get the same data,

77
00:03:39.001 --> 00:03:41.004
which is much what we would expect.

78
00:03:41.004 --> 00:03:44.009
The difference is now we are using the Eureka system

79
00:03:44.009 --> 00:03:46.009
through Feign with Ribbon

80
00:03:46.009 --> 00:03:50.001
all with an interface and no code being written.

81
00:03:50.001 --> 00:03:51.009
That's super powerful.

82
00:03:51.009 --> 00:03:55.000
And now it's time for you to jump up to the next challenge.

