WEBVTT
1
00:00:00.005 --> 00:00:03.005
- [Instructor] So, now that we've got Eureka service set up,

2
00:00:03.005 --> 00:00:07.006
it's time to go register a service with Eureka.

3
00:00:07.006 --> 00:00:10.006
Let's jump into our guest-services application,

4
00:00:10.006 --> 00:00:13.005
and we're going to start with our pom file once again.

5
00:00:13.005 --> 00:00:16.000
Now, we've already got all of the spring cloud

6
00:00:16.000 --> 00:00:19.000
dependency structure built into this pom,

7
00:00:19.000 --> 00:00:21.004
so we just need to bring in the dependency

8
00:00:21.004 --> 00:00:23.005
for Eureka itself.

9
00:00:23.005 --> 00:00:27.001
So, we will add a dependency

10
00:00:27.001 --> 00:00:28.005
and that dependency is going to be on

11
00:00:28.005 --> 00:00:38.001
spring-cloud-starter-netflix-eureka-client,

12
00:00:38.001 --> 00:00:43.005
and that comes from org.springframework.cloud.

13
00:00:43.005 --> 00:00:45.000
We'll allow the dependency management

14
00:00:45.000 --> 00:00:47.002
to do its thing.

15
00:00:47.002 --> 00:00:51.009
Now, we're going to go to our source main Java,

16
00:00:51.009 --> 00:00:55.006
and we're going to open up our application class,

17
00:00:55.006 --> 00:01:01.001
and we are going to do @EnableDiscoveryClient.

18
00:01:01.001 --> 00:01:02.006
And again, the client acts as both

19
00:01:02.006 --> 00:01:05.002
the registration agent and the agent

20
00:01:05.002 --> 00:01:08.007
that scours for those dependencies that we need.

21
00:01:08.007 --> 00:01:10.002
That's all we need to do.

22
00:01:10.002 --> 00:01:13.002
Because we selected all of the default values

23
00:01:13.002 --> 00:01:15.001
for where Eureka is going to run,

24
00:01:15.001 --> 00:01:19.007
by default it will go to local host 8761

25
00:01:19.007 --> 00:01:22.007
to find its configuration.

26
00:01:22.007 --> 00:01:29.008
So, let's restart our GuestServicesApplication.

27
00:01:29.008 --> 00:01:32.006
So now, let's jump back into our web browser

28
00:01:32.006 --> 00:01:35.008
and we'll refresh our Eureka instance.

29
00:01:35.008 --> 00:01:37.001
Now, first thing you may notice

30
00:01:37.001 --> 00:01:38.007
is this big emergency warning.

31
00:01:38.007 --> 00:01:40.004
I'm glad we got this now.

32
00:01:40.004 --> 00:01:41.008
This is telling you that Eureka

33
00:01:41.008 --> 00:01:44.008
is only running in a single node environment.

34
00:01:44.008 --> 00:01:47.003
Again, single noded is bad when it comes

35
00:01:47.003 --> 00:01:49.000
to a single point of failure.

36
00:01:49.000 --> 00:01:51.007
So, while in a production system,

37
00:01:51.007 --> 00:01:52.008
that's a big deal.

38
00:01:52.008 --> 00:01:55.005
For right now, we can just ignore it.

39
00:01:55.005 --> 00:01:57.006
But if we scroll down here to our instances

40
00:01:57.006 --> 00:01:59.001
that are registered, you'll see we now

41
00:01:59.001 --> 00:02:02.009
have a guest services up and running.

42
00:02:02.009 --> 00:02:04.001
Let's go ahead and do the same

43
00:02:04.001 --> 00:02:06.007
for our other two web services.

44
00:02:06.007 --> 00:02:08.006
Easiest way that I found to do this

45
00:02:08.006 --> 00:02:16.006
is to just copy this dependency section,

46
00:02:16.006 --> 00:02:20.009
and then we will do this one at a time.

47
00:02:20.009 --> 00:02:27.000
So, add in the dependency.

48
00:02:27.000 --> 00:02:35.001
Open up the application.

49
00:02:35.001 --> 00:02:39.008
EnableDiscoveryClient,

50
00:02:39.008 --> 00:02:43.006
and restart the application.

51
00:02:43.006 --> 00:02:46.005
And while it's restarting, we can go ahead

52
00:02:46.005 --> 00:02:56.003
and do the room-services.

53
00:02:56.003 --> 00:02:59.008
Again, paste our dependency,

54
00:02:59.008 --> 00:03:03.004
go to the application class,

55
00:03:03.004 --> 00:03:07.005
and EnableDiscoveryClient,

56
00:03:07.005 --> 00:03:09.008
and we should now be ready to restart

57
00:03:09.008 --> 00:03:15.005
this application.

58
00:03:15.005 --> 00:03:18.000
So, now that our applications have been modified

59
00:03:18.000 --> 00:03:22.001
and they've restarted, let's jump back to Eureka

60
00:03:22.001 --> 00:03:24.004
and we'll refresh this once again.

61
00:03:24.004 --> 00:03:25.009
And now, you'll see that we have three

62
00:03:25.009 --> 00:03:27.003
of our services up and running,

63
00:03:27.003 --> 00:03:29.005
they've all registered in Eureka.

64
00:03:29.005 --> 00:03:31.006
Eureka, again, is still running in single node,

65
00:03:31.006 --> 00:03:32.007
that's fine.

66
00:03:32.007 --> 00:03:33.008
But everything is up and running,

67
00:03:33.008 --> 00:03:35.005
they've all got different ports

68
00:03:35.005 --> 00:03:37.006
and everything is ready to go.

69
00:03:37.006 --> 00:03:39.006
This is really critical before our next step

70
00:03:39.006 --> 00:03:43.000
when we're going to start consuming these services.

