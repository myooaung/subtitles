1
00:00:00,330 --> 00:00:05,190
OK, so now that you have a little bit better understanding of some of the basics of what your browser

2
00:00:05,190 --> 00:00:11,010
is doing when we're typing in new URLs, let's make something slightly more interesting now using some

3
00:00:11,010 --> 00:00:11,790
Java code.

4
00:00:12,180 --> 00:00:17,730
Now, the first thing I want to do, though, actually is we're going to install a couple of plug ins

5
00:00:17,730 --> 00:00:21,130
for our browser, for Chrome users.

6
00:00:21,450 --> 00:00:26,940
Chrome is really like kind of the industry standard anyway in many, in many respects.

7
00:00:27,870 --> 00:00:28,160
All right.

8
00:00:28,170 --> 00:00:30,630
So the first thing, though, is I'm going to stop using.

9
00:00:30,630 --> 00:00:36,030
So I'm going to stop using Safari now, and I'm going to switch over to Chrome because it has better

10
00:00:36,030 --> 00:00:40,950
general support for a lot of the standard plugins of web application development.

11
00:00:40,980 --> 00:00:41,360
OK.

12
00:00:41,610 --> 00:00:46,290
It's not that you can't do these things with safari, but we might as well get used to doing more of

13
00:00:46,290 --> 00:00:51,600
our web development work in the industry standard browser now, which is which is Chrome.

14
00:00:52,200 --> 00:00:54,030
So I'm going to open up Chrome.

15
00:00:54,330 --> 00:00:59,010
OK, so I've got Chrome here and I've already entered a search criteria here.

16
00:00:59,040 --> 00:01:03,570
So you want to search for install, live reload, plug in as I have here.

17
00:01:03,570 --> 00:01:10,140
And once you've got that, then you can come down here to the second link here chrome dot, google.com,

18
00:01:10,140 --> 00:01:11,070
live reload.

19
00:01:11,340 --> 00:01:15,060
So I'm going to click on that and then I'm going to click this button here.

20
00:01:15,060 --> 00:01:18,450
Add to Chrome, add extension.

21
00:01:18,600 --> 00:01:18,980
All right.

22
00:01:18,990 --> 00:01:21,280
And so it has been added, and there it is, right there.

23
00:01:21,310 --> 00:01:24,510
I'm going to click this little icon here of a jigsaw puzzle.

24
00:01:24,510 --> 00:01:25,820
Like this puzzle piece?

25
00:01:25,830 --> 00:01:27,600
And there's my live reload.

26
00:01:27,870 --> 00:01:32,880
So the first thing I'm going to do is pen this so that it will always show up up here.

27
00:01:33,270 --> 00:01:35,760
So I just click on that little picture there.

28
00:01:36,570 --> 00:01:36,900
All right.

29
00:01:36,930 --> 00:01:38,820
And so there's my live reload.

30
00:01:39,820 --> 00:01:40,180
All right.

31
00:01:40,690 --> 00:01:48,520
And so now I can close this tab and I'm going to open up another tab now, and I'm going to just go

32
00:01:48,520 --> 00:01:55,150
right back to my local host Colin ADHD and junk DNA html.

33
00:01:56,290 --> 00:01:58,150
All right, so there's my Hello world again.

34
00:01:58,390 --> 00:02:04,300
So this live reload plugin will be quite handy when we start going kind of back and forth with making

35
00:02:04,300 --> 00:02:09,040
code changes and then wanting to see those changes quickly in the browser.

36
00:02:09,370 --> 00:02:15,100
So the plug in basically will just allow the browser to kind of automatically refresh itself so that

37
00:02:15,100 --> 00:02:19,510
we shouldn't need to manually click the refresh button every time we want to see a change.

38
00:02:20,200 --> 00:02:24,610
All right, so now let's go ahead and make something a little bit more interesting.

39
00:02:24,610 --> 00:02:26,020
Slightly more interesting, at least.

40
00:02:26,350 --> 00:02:33,190
OK, so I'm jumping back over here to the idea now, and we're going to go ahead and create some code,

41
00:02:33,460 --> 00:02:35,260
some explicit code now.

42
00:02:35,740 --> 00:02:41,860
And the first thing I think I will do is to create a new package under this calm neutrino system that

43
00:02:41,860 --> 00:02:43,180
people deep web.

44
00:02:43,210 --> 00:02:50,770
OK, so the first package, I'm going to create someone to do a new package, and I think I'm just going

45
00:02:50,770 --> 00:02:52,120
to call this package web.

46
00:02:52,300 --> 00:02:58,780
Now I'm going to tell you now I don't normally create a web package, but I'm going to do so right now

47
00:02:58,780 --> 00:03:05,350
because I want to be kind of more explicit and obvious for you as to some of the standard layers of

48
00:03:05,350 --> 00:03:06,790
where my code is going.

49
00:03:06,940 --> 00:03:11,680
And I will explain those layers a little bit later, but I want to hurry up and get some code written

50
00:03:11,680 --> 00:03:13,510
here because I know I've talked enough already.

51
00:03:14,110 --> 00:03:14,380
All right.

52
00:03:14,390 --> 00:03:20,710
So there's web and then under here I'm going to make another package, so I'm going to do another new

53
00:03:21,070 --> 00:03:24,670
package and this one will be called controller.

54
00:03:26,740 --> 00:03:27,130
All right.

55
00:03:27,280 --> 00:03:29,500
And I'm going to make a new class.

56
00:03:30,720 --> 00:03:37,050
Java class, and this will be called People Controller New.

57
00:03:37,230 --> 00:03:37,620
All right.

58
00:03:38,310 --> 00:03:38,670
OK.

59
00:03:38,700 --> 00:03:42,300
And so now I'm going to put a bunch of stuff in here.

60
00:03:43,470 --> 00:03:44,580
Let's see, where do we want to start?

61
00:03:44,580 --> 00:03:49,170
I guess I'll start at the top so you can just follow along and I will explain these things that we're

62
00:03:49,170 --> 00:03:50,520
doing a little bit later.

63
00:03:50,520 --> 00:03:53,910
But first thing I'm going to do is put an annotation here.

64
00:03:54,870 --> 00:03:57,300
Let's see, request mapping.

65
00:03:58,200 --> 00:04:03,600
And I'm going to put inside of here some quotes and we'll call this.

66
00:04:05,050 --> 00:04:05,620
People.

67
00:04:06,790 --> 00:04:07,640
Just like that.

68
00:04:07,960 --> 00:04:15,790
Then inside of this class, I will create a method that will return a string.

69
00:04:16,390 --> 00:04:26,320
And for now, I will just call this method, get people like so and I will have this method return a

70
00:04:26,320 --> 00:04:28,420
string called people.

71
00:04:28,750 --> 00:04:29,320
All right.

72
00:04:30,700 --> 00:04:37,210
And then I'm going to annotate this method with an annotation called Get mapping.

73
00:04:37,550 --> 00:04:38,290
Like so.

74
00:04:38,410 --> 00:04:39,040
All right.

75
00:04:39,550 --> 00:04:45,580
And then over here, we're going to create a new file under the Templates folder.

76
00:04:46,000 --> 00:04:52,000
So I'm going to create a new file, and this will also be an HTML file.

77
00:04:52,630 --> 00:04:56,290
And I will call it people died HTML.

78
00:04:57,720 --> 00:04:59,670
And here I will name it, people.

79
00:05:01,060 --> 00:05:06,370
And here, let's just put another hello world style message for right now.

80
00:05:06,520 --> 00:05:07,270
Real quick here.

81
00:05:07,270 --> 00:05:09,400
So we'll say something like, I don't know.

82
00:05:09,400 --> 00:05:10,390
Well, maybe not.

83
00:05:10,390 --> 00:05:13,720
Hello, world, but maybe here are some people.

84
00:05:14,350 --> 00:05:15,640
Maybe something like that, OK?

85
00:05:16,330 --> 00:05:17,860
And that's that's all we're going to do.

86
00:05:18,310 --> 00:05:18,850
First.

87
00:05:20,290 --> 00:05:21,670
Now let me.

88
00:05:22,640 --> 00:05:23,870
Rearrange.

89
00:05:25,030 --> 00:05:28,630
My windows just a little bit here, if I can.

90
00:05:30,520 --> 00:05:33,940
It's going to be a little tough because I don't have a whole lot of.

91
00:05:37,720 --> 00:05:40,540
Room to work with, but yeah, I think that might work, OK.

92
00:05:40,900 --> 00:05:41,290
All right.

93
00:05:41,680 --> 00:05:50,500
So we've got all of that done, some going into the people controller here, and I need one of the one

94
00:05:50,500 --> 00:05:53,020
more really, really important annotation.

95
00:05:53,440 --> 00:05:58,480
It doesn't matter if I put it above or below the request mapping, but I prefer to put it above.

96
00:05:58,750 --> 00:06:01,570
I need an act controller mapping here.

97
00:06:02,290 --> 00:06:02,620
All right.

98
00:06:02,630 --> 00:06:05,390
And again, I will explain what these all do in just a moment.

99
00:06:05,430 --> 00:06:05,710
OK.

100
00:06:05,890 --> 00:06:11,350
And so now I will do another command f nine and we might see there we go.

101
00:06:11,350 --> 00:06:13,800
Yeah, we've got some stuff scrolling by there.

102
00:06:13,810 --> 00:06:17,230
OK, now if we come down here to the browser and refresh.

103
00:06:18,010 --> 00:06:18,730
There we go.

104
00:06:18,760 --> 00:06:20,480
OK, so now we see these words.

105
00:06:20,510 --> 00:06:21,760
Here are some people.

106
00:06:23,110 --> 00:06:29,020
So let me explain very briefly what is the difference between putting an HTML file under static versus

107
00:06:29,020 --> 00:06:29,830
under templates?

108
00:06:29,860 --> 00:06:38,890
The basic gist is if you want to have a HTML that is dynamic and controlled from our Java code, then

109
00:06:38,890 --> 00:06:41,640
you need to put that HTML under templates.

110
00:06:41,660 --> 00:06:49,120
OK, because this will allow us to feed some dynamically generated content into this page and make a

111
00:06:49,120 --> 00:06:50,950
more interesting web page.

112
00:06:50,950 --> 00:06:58,810
Essentially, whereas static web pages that is H.M. pages that we put under the static folder here are

113
00:06:58,810 --> 00:07:07,000
not capable of being fed data from our Java code directly.

114
00:07:07,030 --> 00:07:11,260
I'll put it that way because there are some tricks that we could do with JavaScript, where we could

115
00:07:11,260 --> 00:07:17,200
request data even from the static pages, but I don't know that we'll be getting into any of that in

116
00:07:17,200 --> 00:07:17,860
this section.

117
00:07:17,890 --> 00:07:18,280
OK.

118
00:07:18,760 --> 00:07:19,030
All right.

119
00:07:19,040 --> 00:07:21,310
So that's the first part, though.

120
00:07:21,730 --> 00:07:22,000
All right.

121
00:07:22,010 --> 00:07:26,530
So now, though, let's actually put sort of put a little bit of something dynamic in here.

122
00:07:26,560 --> 00:07:26,950
OK.

123
00:07:27,340 --> 00:07:30,910
So what I'm going to do now is let's see here.

124
00:07:30,920 --> 00:07:33,730
So we've got the Web Dot controller package.

125
00:07:34,540 --> 00:07:42,040
So let's make another package under the main combat neutrino service package, and I'm going to call

126
00:07:42,040 --> 00:07:43,030
this one.

127
00:07:43,300 --> 00:07:44,140
Oh, I don't know.

128
00:07:44,140 --> 00:07:46,040
Bill's short for business.

129
00:07:46,240 --> 00:07:50,050
In fact, you know, we can go ahead and just make a couple of packages all at once.

130
00:07:50,320 --> 00:07:51,640
There's that model.

131
00:07:51,670 --> 00:07:55,180
OK, so we're going to make a simple domain model class now.

132
00:07:55,210 --> 00:07:55,630
OK?

133
00:07:56,020 --> 00:07:59,890
And then under bizarre model, make a new class Java class.

134
00:08:00,070 --> 00:08:01,690
And let's call it person.

135
00:08:01,690 --> 00:08:04,290
So we've done this many, many times in this course already.

136
00:08:04,300 --> 00:08:06,520
OK and hit enter.

137
00:08:06,790 --> 00:08:07,210
All right.

138
00:08:07,600 --> 00:08:09,120
And let's see.

139
00:08:09,130 --> 00:08:11,140
So let's have a few fields.

140
00:08:11,650 --> 00:08:22,760
Let's have a string for the first name and a string for the last name and a local day trips.

141
00:08:24,600 --> 00:08:35,160
And a local date for a date of birth and a big decimal for a salary.

142
00:08:35,940 --> 00:08:37,230
And what am I forgetting here?

143
00:08:37,440 --> 00:08:39,060
I know I'm forgetting something, but that's OK.

144
00:08:39,270 --> 00:08:40,860
I will remember it later.

145
00:08:41,250 --> 00:08:42,120
OK, that's enough.

146
00:08:42,990 --> 00:08:49,200
Now, normally at this point since we're working with a class and not a record, I'd let the A.D. generate

147
00:08:49,200 --> 00:08:51,790
my getters and setters and all that good stuff, right?

148
00:08:51,810 --> 00:08:53,250
That's what I would normally do.

149
00:08:53,280 --> 00:09:00,180
However, now that we're using the spring framework with spring boot and we got all this cool added

150
00:09:00,750 --> 00:09:04,710
functionality here, we can do something a little more interesting.

151
00:09:04,950 --> 00:09:12,660
We're going to use a special annotation from a library called Lombok, and the annotation we will use

152
00:09:12,660 --> 00:09:13,920
is called at data.

153
00:09:14,670 --> 00:09:24,360
And so what this annotation will do is that it will allow the Lombok Library to scan this class, find

154
00:09:24,360 --> 00:09:31,980
these fields and generate getters and setters and a constructor and an equals and a hash code and a

155
00:09:32,010 --> 00:09:35,280
two string method, all for us whenever we need it.

156
00:09:35,490 --> 00:09:40,920
OK, so we're getting all of that for free now, and all we had to do is just specify the fields that

157
00:09:40,920 --> 00:09:41,670
we want.

158
00:09:41,730 --> 00:09:42,180
OK.

159
00:09:42,330 --> 00:09:44,490
So it's a super, super convenient.

160
00:09:45,240 --> 00:09:48,490
And so I think for right now, we're going to be done with this class.

161
00:09:48,510 --> 00:09:49,050
Oh, I know.

162
00:09:49,050 --> 00:09:50,820
One thing I was forgetting is the idea.

163
00:09:51,210 --> 00:09:52,560
Yeah, let's let's throw.

164
00:09:53,400 --> 00:09:55,050
Let's throw the idea in here.

165
00:09:55,470 --> 00:09:57,280
Type long and we'll make it an idea.

166
00:09:57,330 --> 00:09:58,200
OK, cool.

167
00:09:59,340 --> 00:09:59,940
All right.

168
00:10:00,120 --> 00:10:04,440
So now let's jump over here to the controller class.

169
00:10:05,100 --> 00:10:11,850
And what we want to do is we're going to first just make a few dummy people right here inside of this

170
00:10:11,850 --> 00:10:12,990
get people method.

171
00:10:13,290 --> 00:10:18,900
And we're going to have those dummy people kind of show up in the browser very simplistically for right

172
00:10:18,900 --> 00:10:19,080
now.

173
00:10:19,080 --> 00:10:24,120
But believe me, by the time we get to the end of this section, it's going to be doing all kinds of

174
00:10:24,120 --> 00:10:24,420
stuff.

175
00:10:24,810 --> 00:10:25,170
All right.

176
00:10:25,530 --> 00:10:27,060
So let's see here.

177
00:10:27,510 --> 00:10:31,980
So let's just create a, I don't know, maybe a list of.

178
00:10:33,030 --> 00:10:37,800
Some people said we'll do like a new person.

179
00:10:38,990 --> 00:10:44,300
And I will import that class and do a command P. And I'm not getting any parameters because I forget

180
00:10:44,300 --> 00:10:45,290
this every single time.

181
00:10:45,470 --> 00:10:50,510
So I need to jump back over here to the person class and we need to throw in at least one more annotation

182
00:10:50,510 --> 00:10:50,930
on here.

183
00:10:51,470 --> 00:10:56,450
So we'll throw a note is that all our constructor on here?

184
00:10:56,810 --> 00:10:57,950
Let's see if that's enough.

185
00:10:59,600 --> 00:11:00,080
There we go.

186
00:11:00,110 --> 00:11:02,680
Yes, that's what we needed the all our contract.

187
00:11:02,840 --> 00:11:04,340
Let me just tell you what that did.

188
00:11:04,370 --> 00:11:06,230
Let me explain that really quickly.

189
00:11:06,500 --> 00:11:14,090
So the data annotation did give us a constructor, but it gave us a no arg default constructor.

190
00:11:14,240 --> 00:11:20,420
But if we want an additional constructor that allows us to specify all of the arguments, then we need

191
00:11:20,420 --> 00:11:24,620
to also add in the All ARGs constructor, which is what I just did there.

192
00:11:26,060 --> 00:11:26,510
OK.

193
00:11:27,520 --> 00:11:33,040
So now I can start specifying these parameters.

194
00:11:33,250 --> 00:11:38,460
So I'm just going to, I don't know, do like a 10 10 L comma.

195
00:11:40,120 --> 00:11:47,710
And it's really fun to read and and and this is one of those things.

196
00:11:48,630 --> 00:11:54,400
And you know, if you need to believe in the much of.

197
00:11:57,360 --> 00:11:59,400
And yeah, that's fine, I'll call them people.

198
00:12:01,830 --> 00:12:12,270
Now, if I want to get this data into the browser here, I will need to pass it into something called

199
00:12:12,270 --> 00:12:13,080
a model.

200
00:12:13,290 --> 00:12:16,060
And I'm not going to explain super deeply right this minute.

201
00:12:16,080 --> 00:12:21,660
What that is, but I need to have a model and then I will pass this data into that model.

202
00:12:21,660 --> 00:12:27,180
And in that model will in turn get passed to the two, not to the browser, but to the the code that

203
00:12:27,180 --> 00:12:31,320
I'm not having to write that that renders out the the final template.

204
00:12:31,350 --> 00:12:33,180
OK, the final version of the template.

205
00:12:33,210 --> 00:12:33,540
OK.

206
00:12:33,750 --> 00:12:36,940
So to get my hands on this model, think of the model as a bucket.

207
00:12:36,960 --> 00:12:40,410
It's just a bucket into which I can put pretty much whatever I want.

208
00:12:40,770 --> 00:12:41,160
OK.

209
00:12:41,490 --> 00:12:44,730
So I am going to get myself a model here.

210
00:12:45,980 --> 00:12:47,360
And I will call it model.

211
00:12:48,900 --> 00:12:55,650
Now, the spring in the sea framework is will see that I have done these annotations, by the way,

212
00:12:55,650 --> 00:12:58,570
these annotations are all part of the spring MVC framework.

213
00:12:58,590 --> 00:12:58,780
OK.

214
00:12:58,800 --> 00:13:02,460
In this model class, here is also part of the spring MVC framework.

215
00:13:02,640 --> 00:13:03,690
Spring will see that.

216
00:13:03,690 --> 00:13:10,290
I have said that I want this method to get called with a model, and the spring MVC framework will actually

217
00:13:10,470 --> 00:13:14,520
create this model and then pass it to me, to my code rather.

218
00:13:14,760 --> 00:13:15,000
All right.

219
00:13:15,010 --> 00:13:26,220
So then what I can do is I can call model that add attribute, and then I can name this list something

220
00:13:26,220 --> 00:13:30,510
like people that would make a lot of sense and then I can bind it to this variable.

221
00:13:30,510 --> 00:13:38,670
So what I'm saying is essentially take my list of people and bind it to a holding tank inside of this

222
00:13:38,670 --> 00:13:41,430
model thing called people.

223
00:13:41,520 --> 00:13:44,950
Really, you can think of the model as a as a map.

224
00:13:44,970 --> 00:13:45,470
OK?

225
00:13:45,510 --> 00:13:48,340
We learned about maps or hash maps, things like that, right?

226
00:13:48,360 --> 00:13:49,830
You have key value pairs.

227
00:13:50,100 --> 00:13:52,260
So the key is this word, people.

228
00:13:52,590 --> 00:13:56,280
And then the value is this list of people.

229
00:13:56,310 --> 00:13:56,670
OK.

230
00:13:56,700 --> 00:13:59,700
So it's just it's really essentially kind of a map.

231
00:14:00,150 --> 00:14:00,530
All right.

232
00:14:00,540 --> 00:14:09,810
So now I can jump back over to this people that HTML file here, and I'm going to keep this relatively

233
00:14:09,810 --> 00:14:15,090
simple for right now, but we will make it much more complex and it'll look great eventually, but not

234
00:14:15,090 --> 00:14:15,600
right now.

235
00:14:15,990 --> 00:14:20,170
So what I will do now is I will use a special HTML.

236
00:14:20,190 --> 00:14:24,960
I will use one of the many HTML tags to show a list of things.

237
00:14:25,260 --> 00:14:30,840
And the tag that I will use here is, I don't know, ordered list.

238
00:14:32,830 --> 00:14:40,480
OK, and then I will have a list item, so that would be like one item in the list.

239
00:14:41,890 --> 00:14:44,510
My junk person.

240
00:14:44,530 --> 00:14:44,950
OK.

241
00:14:45,250 --> 00:14:52,090
So this will serve as kind of a template for what I kind of would like to have displayed and I will

242
00:14:52,090 --> 00:14:55,270
go ahead and now restart the application.

243
00:14:59,820 --> 00:15:05,340
OK, now what I would like to have happen in general is that whenever I restart the application and

244
00:15:05,340 --> 00:15:11,070
make changes of this sort, that this content down here would update, and now I should be able to come

245
00:15:11,070 --> 00:15:14,130
over here to this live reload and enable it.

246
00:15:15,090 --> 00:15:15,510
All right.

247
00:15:15,900 --> 00:15:16,560
So.

248
00:15:17,920 --> 00:15:24,220
Hopefully after I reload this, OK, so there's my one person now this is just hardcoded, right?

249
00:15:24,580 --> 00:15:28,870
But now we're going to make it dynamic, so I'm going to update this now.

250
00:15:29,170 --> 00:15:32,980
Oh, now in order to do this, we're going to have to update a few other things here.

251
00:15:32,980 --> 00:15:40,060
So there is a templating language that is kind of an add on, if you will, for this HTML that we're

252
00:15:40,060 --> 00:15:40,990
doing here, OK?

253
00:15:41,230 --> 00:15:46,720
And one of the things that we added when we were on the start that spring, that issue site, we had

254
00:15:46,720 --> 00:15:48,310
to add a bunch of dependencies.

255
00:15:48,310 --> 00:15:51,310
One of the dependencies we chose was something called thyme leaf.

256
00:15:51,490 --> 00:15:59,530
So Thyme Leaf is a templating library that allows us to template Ty's HTML, and it comes with a lot

257
00:15:59,530 --> 00:16:08,590
of special tags and attributes of HTML that we can utilize to generate more dynamic content within a

258
00:16:08,590 --> 00:16:09,040
browser.

259
00:16:09,040 --> 00:16:13,690
And I bet a lot of what I just said might not mean very much to you yet, but you'll start to see it.

260
00:16:13,930 --> 00:16:20,810
So we're going to allow this web page to make use of the time leaf tags and attributes, OK?

261
00:16:21,010 --> 00:16:29,980
So to do that, I'm first going to open up another tab and I will simply type in here thyme leaf and

262
00:16:31,210 --> 00:16:31,920
dot org.

263
00:16:32,230 --> 00:16:38,070
And by the way, that's to YMC Leaf Thyme Leaf.

264
00:16:38,080 --> 00:16:40,540
OK, so we're on the timewith website here.

265
00:16:40,660 --> 00:16:44,350
And let me break this tab out and make it bigger.

266
00:16:45,750 --> 00:16:46,590
For right now.

267
00:16:50,180 --> 00:16:50,600
OK.

268
00:16:51,800 --> 00:16:58,940
All right, and we will go to Knox for documentation and then we will come down here to timely 3.0.

269
00:16:58,970 --> 00:17:02,720
That's what that's the most current version as of the time of this recording.

270
00:17:02,720 --> 00:17:05,630
But the main thing is that we're just looking for the documentation.

271
00:17:05,870 --> 00:17:07,340
So read online.

272
00:17:07,790 --> 00:17:08,050
All right.

273
00:17:08,060 --> 00:17:12,140
And then over here, I'm going to click on the template engine.

274
00:17:13,350 --> 00:17:18,090
And that just gets me helps me to zoom in on what I'm really looking for, which is basically just some

275
00:17:18,090 --> 00:17:20,610
starting configuration stuff that I need.

276
00:17:20,910 --> 00:17:28,440
OK, so right here in the HTML that you see, we've got what's called an attribute here, and I'm going

277
00:17:28,440 --> 00:17:30,240
to copy all of that.

278
00:17:30,570 --> 00:17:38,310
So this XM, L.A., all of that up to and including the closing quotation mark there some copying that

279
00:17:38,460 --> 00:17:45,540
then I will jump back into the browser and I will go to this browser's HTML tag and I will put my cursor.

280
00:17:45,540 --> 00:17:50,670
No doesn't really matter if I put the cursor after the language study language in or before it.

281
00:17:50,670 --> 00:17:56,730
But somewhere inside of this HTML tag, I will paste that XM, L and S.

282
00:17:57,150 --> 00:18:04,210
So basically, what we're doing here is you can think of it as the HTML equivalent of an import statement.

283
00:18:04,230 --> 00:18:04,680
OK.

284
00:18:04,950 --> 00:18:12,600
What we're basically saying is we want to import a bunch of custom tags that come from the Time Leaf

285
00:18:12,600 --> 00:18:18,960
Library, and whenever we use those tags, we will refer to them throughout our document by starting

286
00:18:18,960 --> 00:18:21,760
with this prefix of of t h.

287
00:18:21,780 --> 00:18:22,260
OK.

288
00:18:22,740 --> 00:18:29,710
So we're importing those special custom tags under the t h namespace, if you will.

289
00:18:29,730 --> 00:18:30,090
OK.

290
00:18:30,210 --> 00:18:37,140
But you can think of this whole thing here as kind of like the HTML equivalent of doing an import statement.

291
00:18:37,200 --> 00:18:37,650
OK.

292
00:18:38,280 --> 00:18:40,500
Something very similar to that.

293
00:18:40,860 --> 00:18:41,220
OK.

294
00:18:41,370 --> 00:18:47,190
And I think that's all we will need from timely for right now, other than periodically checking in

295
00:18:47,190 --> 00:18:49,180
on some of the references and things.

296
00:18:49,200 --> 00:18:56,670
OK, so now what we want to do is we know that we've got this list of people inside of a model variable

297
00:18:56,670 --> 00:18:58,260
called people OK.

298
00:18:58,500 --> 00:19:04,230
And we want to basically just display each of those people as a list item here.

299
00:19:04,260 --> 00:19:04,590
OK.

300
00:19:04,770 --> 00:19:08,970
So let me just open back up the people page now.

301
00:19:09,330 --> 00:19:13,800
So I want that people page in the browser at the same time so that we can see things that are changing

302
00:19:14,070 --> 00:19:15,090
in real time, OK?

303
00:19:15,300 --> 00:19:24,330
So the way we will do this is we will implement the time leave slash HTML equivalent of a for loop.

304
00:19:24,360 --> 00:19:24,720
OK.

305
00:19:24,870 --> 00:19:32,220
So just as we could have an enhanced for loop that would loop over the items in a list, we can do the

306
00:19:32,580 --> 00:19:35,840
HTML equivalent of that right here.

307
00:19:35,850 --> 00:19:40,860
And the way we will do that is by putting our cursor inside of this list item tag here.

308
00:19:41,330 --> 00:19:47,010
Space to colon each equals.

309
00:19:48,470 --> 00:19:56,030
And then very similarly to the enhanced for Loop, we will specify a variable name for each instance

310
00:19:56,030 --> 00:19:58,280
or for each item in the collection.

311
00:19:58,460 --> 00:20:00,860
So here we can refer to something like person.

312
00:20:01,370 --> 00:20:02,420
And then a colon.

313
00:20:02,430 --> 00:20:06,380
So it does look a fair bit like the enhanced for loop from Java.

314
00:20:06,620 --> 00:20:11,870
And then we will specify the name of the collection that we want to iterate over.

315
00:20:12,110 --> 00:20:14,480
Now the way we do this, though, is a little bit special.

316
00:20:14,690 --> 00:20:20,210
We will use a dollar sign and then an opening and closing curly brace.

317
00:20:20,300 --> 00:20:26,960
And then inside of here we will specify the name of the variable that contains our collection or our

318
00:20:26,960 --> 00:20:29,900
list of people that we bound to the model.

319
00:20:29,930 --> 00:20:32,810
OK, so all that is is people.

320
00:20:33,080 --> 00:20:35,300
Now this this people here.

321
00:20:37,010 --> 00:20:38,390
Is coming from.

322
00:20:40,370 --> 00:20:41,270
Right here.

323
00:20:41,300 --> 00:20:41,770
OK.

324
00:20:42,080 --> 00:20:43,790
Or are actually right here.

325
00:20:44,120 --> 00:20:46,820
All right, so this modeled that ad attribute people.

326
00:20:47,240 --> 00:20:52,010
This is referring this is the name that we used to refer to this collection of people.

327
00:20:52,040 --> 00:20:52,490
OK.

328
00:20:52,670 --> 00:20:53,990
That's where that's coming from.

329
00:20:55,060 --> 00:20:56,860
And so that's what we're doing here.

330
00:20:57,550 --> 00:21:09,020
And so now what we can do is we can use another timely attribute to call and text equals dollar sign.

331
00:21:09,340 --> 00:21:11,740
Curly brace person.

332
00:21:12,190 --> 00:21:21,220
So now what this is going to do is first off this T-H each is going to extract one person at a time

333
00:21:21,220 --> 00:21:25,090
from this people collection and stored in a variable called person.

334
00:21:25,660 --> 00:21:34,510
Then we are going to use this to call and text attribute to basically display this whatever that person

335
00:21:34,510 --> 00:21:34,780
was.

336
00:21:34,810 --> 00:21:38,990
So this is in effect going to call the two string method of the person class.

337
00:21:39,010 --> 00:21:45,850
OK, now what this call and text attribute actually does, though, is it takes whatever text we are

338
00:21:45,850 --> 00:21:51,700
referring to here, and it replaces this with whatever is here.

339
00:21:51,790 --> 00:21:58,720
So if this is going to call the two string method of each instance of a person, then the output of

340
00:21:58,720 --> 00:22:01,300
that two string method is what's going to display here.

341
00:22:01,300 --> 00:22:03,580
And I'm so sorry, I know I'm seeing a lot of words.

342
00:22:03,820 --> 00:22:06,340
I hope you're following me, but let's go ahead and just run it.

343
00:22:06,340 --> 00:22:09,040
And maybe it will be even more obvious.

344
00:22:09,040 --> 00:22:11,490
I think you can intuitively kind of see where I'm going with this.

345
00:22:11,500 --> 00:22:18,340
OK, so to get this to run now, all I should need to do is a command f nine to restart my server.

346
00:22:20,760 --> 00:22:21,570
And look at that.

347
00:22:21,720 --> 00:22:29,220
We updated down here instantaneously, so you can see that this is a typical two string method output

348
00:22:29,430 --> 00:22:32,190
of that of the person class, right?

349
00:22:32,400 --> 00:22:33,690
That's what we just got there.

350
00:22:33,900 --> 00:22:35,490
Now this isn't where we're going to leave it.

351
00:22:35,490 --> 00:22:39,750
I just wanted to do something relatively simple just to get started here, OK?

352
00:22:39,900 --> 00:22:43,320
We will eventually make this look really, really nice.

353
00:22:43,800 --> 00:22:44,110
All right.

354
00:22:44,150 --> 00:22:47,120
And so let's go ahead and stop with this lesson.

355
00:22:47,130 --> 00:22:50,950
And in the next lesson, we'll do a little bit more and we'll go a little further.

356
00:22:50,970 --> 00:22:52,440
OK, so I'll see you in the next one.
