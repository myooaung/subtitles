WEBVTT
1
00:00:00.480 --> 00:00:01.500
Hey, welcome back.

2
00:00:01.530 --> 00:00:09.210
So we finally wrapped up learning all of the most common string text manipulation and recognition methods

3
00:00:09.210 --> 00:00:10.500
of the string class.

4
00:00:10.830 --> 00:00:17.430
And we are now ready to move on to what many would consider to be a more advanced topic for doing similar

5
00:00:17.430 --> 00:00:19.890
things, and that is regular expressions.

6
00:00:20.550 --> 00:00:27.480
So you heard me refer to regular expressions once or twice in some of the previous lessons, especially

7
00:00:27.480 --> 00:00:36.360
in the one where we wrote some code that had a phone number and we extracted the area code and the exchange

8
00:00:36.360 --> 00:00:37.710
and the local phone.

9
00:00:37.710 --> 00:00:42.630
I forget what the we call the the four digits at the end, but we extracted all the parts of a phone

10
00:00:42.630 --> 00:00:50.520
number using various code techniques, mostly sub string and index of to extract those bits and pieces

11
00:00:50.520 --> 00:00:53.010
out of a formatted string.

12
00:00:53.280 --> 00:00:58.320
And then at the end of that lesson, I stated, Now having done all of this, I probably wouldn't have

13
00:00:58.320 --> 00:00:59.600
done it this way at all.

14
00:00:59.610 --> 00:01:06.270
As a professional software developer myself, I most likely would have used regular expressions to do

15
00:01:06.270 --> 00:01:07.080
the same thing.

16
00:01:07.950 --> 00:01:15.570
And so we will be revisiting in an upcoming lesson that code and transforming it to use Rig X. So what

17
00:01:15.570 --> 00:01:20.270
is regex or regular expressions as we often refer to them as regex?

18
00:01:20.640 --> 00:01:28.830
So Rig X is a technique and technology and a language really a programming language in and of itself

19
00:01:29.130 --> 00:01:34.320
for expressing patterns of text using symbols.

20
00:01:34.320 --> 00:01:36.690
And those symbols are text themselves.

21
00:01:36.900 --> 00:01:43.530
But we will let various bits of text and characters represent other strings of text, essentially,

22
00:01:43.530 --> 00:01:45.390
and I'll show you what I mean in just a moment here.

23
00:01:45.420 --> 00:01:54.480
So regular expressions let us define patterns of text, and the engine of regular expressions also can

24
00:01:54.480 --> 00:01:57.780
allow us to extract sub strings of text.

25
00:01:57.810 --> 00:02:04.650
Now we don't use the substring key word, but the functions that we are able to achieve, the capabilities

26
00:02:04.650 --> 00:02:10.470
that we're able to achieve with the regular expression engine allow us to extract some strings from

27
00:02:10.470 --> 00:02:14.250
text as well, according to patterns that we define.

28
00:02:15.000 --> 00:02:22.080
So without further ado, let's jump in and see how to use this powerful technique, and I will see you

29
00:02:22.080 --> 00:02:23.280
in the next one.
