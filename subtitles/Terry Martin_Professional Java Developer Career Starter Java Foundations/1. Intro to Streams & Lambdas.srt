1
00:00:01,060 --> 00:00:02,440
Hey, welcome, welcome, welcome.

2
00:00:02,800 --> 00:00:10,630
So we're finally in the next module where we're going to learn about Java's Streams API and how they

3
00:00:10,630 --> 00:00:12,160
work with lambdas.

4
00:00:12,360 --> 00:00:19,180
Now I've already introduced you a little bit to the concept of lambdas, but in this module we'll start

5
00:00:19,360 --> 00:00:25,570
really learning more about how we can use lambdas and especially how we can use them with the Streams

6
00:00:25,570 --> 00:00:26,230
API.

7
00:00:26,380 --> 00:00:32,110
So in this intro, I'm just going to attempt to tell you very quickly what the Streams API is kind of

8
00:00:32,110 --> 00:00:37,350
all about relative to what you already have learned so far.

9
00:00:37,360 --> 00:00:38,320
I will say this.

10
00:00:38,560 --> 00:00:46,510
The streams API marginally can be thought of as a more streamlined and more advanced way to do a lot

11
00:00:46,510 --> 00:00:50,890
of the same techniques that we've been doing with collections and loops.

12
00:00:51,220 --> 00:00:58,360
So, for example, if we want to build a collection of employees, we might have some type of loop that

13
00:00:58,360 --> 00:01:01,720
loops over things and then creates that collection.

14
00:01:01,720 --> 00:01:07,780
You know, we create a collection of employees and then we pass out our employee text string, for example,

15
00:01:07,960 --> 00:01:13,000
and we create new instances of employee objects within a loop.

16
00:01:13,240 --> 00:01:16,120
And then we can add up salaries and things of that sort.

17
00:01:16,480 --> 00:01:24,370
The Streams API lets us accomplish the same types of things, but in a streamlined way where we don't

18
00:01:24,370 --> 00:01:27,580
have to explicitly create a loop to do it.

19
00:01:27,850 --> 00:01:36,240
And it's almost like magic, and it really allows us to engage in a more functional style of programming.

20
00:01:36,250 --> 00:01:42,460
So rather than keep talking about it, let's go ahead and jump in to the next lesson where we will do

21
00:01:42,460 --> 00:01:46,060
a little bit of work and you'll get to see firsthand what we're doing.

22
00:01:46,390 --> 00:01:47,410
So I'll see you there.
