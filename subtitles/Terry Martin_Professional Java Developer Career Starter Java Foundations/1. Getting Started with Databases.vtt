WEBVTT
1
00:00:00.540 --> 00:00:00.900
All right.

2
00:00:00.930 --> 00:00:06.630
Welcome back to this new module in this module, we're going to be learning about databases.

3
00:00:06.960 --> 00:00:11.850
So I think the first thing that's in order here is to discuss what is a database.

4
00:00:12.060 --> 00:00:14.160
I'm sure a lot of you have heard the term before.

5
00:00:14.160 --> 00:00:17.190
I've referred to it throughout this course here and there.

6
00:00:17.430 --> 00:00:23.850
But now let's take a deeper dive into what databases are and why they're so useful for software development.

7
00:00:24.660 --> 00:00:30.900
So the easiest way for me to explain what a database is is probably to start with another tool that

8
00:00:30.900 --> 00:00:33.390
we've already been working with throughout this course.

9
00:00:33.390 --> 00:00:35.130
And that is a spreadsheet.

10
00:00:35.430 --> 00:00:40.590
So I've got our trusty spreadsheet open here with a small sample of our people data set because it's

11
00:00:40.740 --> 00:00:42.630
data that we're pretty familiar with.

12
00:00:42.780 --> 00:00:49.830
So as we've already seen in this course, we can use a spreadsheet to open up fairly large sets of data.

13
00:00:50.160 --> 00:00:53.610
And in that data, we have rows, right?

14
00:00:53.610 --> 00:00:57.650
Like each of these rows here, I'll highlight one, right?

15
00:00:57.660 --> 00:01:06.420
So we've got these rows and we can consider these rows to be records and each row or record has columns.

16
00:01:06.780 --> 00:01:12.420
So these header fields that we have here like name, prefix, first name, so on and so forth.

17
00:01:12.690 --> 00:01:21.510
These are columns or fields of the records, and we've seen that we can group data in the spreadsheet,

18
00:01:21.510 --> 00:01:24.300
which we did back in the Streams API module.

19
00:01:24.810 --> 00:01:30.090
We can sort or order the rows by some fields as well, right?

20
00:01:30.090 --> 00:01:36.240
So we can perform aggregated mathematical functions on data, in particular columns.

21
00:01:36.300 --> 00:01:39.900
So at one point, we added up all of the salaries.

22
00:01:40.050 --> 00:01:46.160
We were also able to get the average salary we could find the maximum or the minimum salary.

23
00:01:46.170 --> 00:01:53.670
Things like that can all be done in a spreadsheet, so you can think of a database somewhat similarly

24
00:01:53.670 --> 00:01:56.550
to a very special type of spreadsheet.

25
00:01:56.760 --> 00:01:59.520
However, there are some major differences.

26
00:01:59.760 --> 00:02:06.810
First off, typically speaking, spreadsheets can only be opened up and used by one person at a time.

27
00:02:06.990 --> 00:02:09.440
That is their primary use case.

28
00:02:09.630 --> 00:02:18.210
However, databases, when used by programmers, are typically intended to be used by multiple programs

29
00:02:18.210 --> 00:02:21.180
or multiple people simultaneously.

30
00:02:21.510 --> 00:02:23.190
So that's one typical difference.

31
00:02:23.340 --> 00:02:30.960
Additionally, spreadsheets are much more limited in the amount of data they can handle at any one given

32
00:02:30.960 --> 00:02:31.530
time.

33
00:02:31.800 --> 00:02:37.680
And typically, that limitation may have a lot to do with either how much memory is in a computer or

34
00:02:37.680 --> 00:02:42.600
how much data you can squeeze into one file, which would be your spreadsheet file.

35
00:02:42.720 --> 00:02:47.400
But most professional level databases do not have these same types of restrictions.

36
00:02:47.700 --> 00:02:54.450
Databases specialize in handling massive amounts of data in the form of records and in terms of the

37
00:02:54.450 --> 00:02:57.480
number of columns you can have per record as well.

38
00:02:57.540 --> 00:03:02.490
And actually, even going further than that, what we're looking at here in the spreadsheet is just

39
00:03:02.490 --> 00:03:03.570
one table.

40
00:03:03.990 --> 00:03:10.440
But databases can also typically contain numerous tables, and you can relate the data from one table

41
00:03:10.440 --> 00:03:14.820
to another table as long as they have some data in common between them.

42
00:03:15.150 --> 00:03:20.730
Now there are actually several types of databases in common use today.

43
00:03:21.120 --> 00:03:27.960
The most popular type and probably the oldest type of database is called a relational database, and

44
00:03:27.960 --> 00:03:35.370
relational databases are probably most similar to what you see here with a spreadsheet in that you have

45
00:03:35.580 --> 00:03:42.150
records with columns and forming tables, and then you can have multiple tables and then those tables

46
00:03:42.150 --> 00:03:43.470
can relate to each other.

47
00:03:43.830 --> 00:03:49.800
There are other types of databases, though, that are not table and relationally based, as we see

48
00:03:49.800 --> 00:03:51.570
with a typical spreadsheet.

49
00:03:51.870 --> 00:03:58.710
A couple other popular types of databases are object databases and no sequel databases.

50
00:03:59.370 --> 00:04:06.180
Object databases actually have a lot in common with what we've been doing in our Java code, because

51
00:04:06.180 --> 00:04:09.070
in our Java code, we tend to create classes.

52
00:04:09.270 --> 00:04:11.760
And then from those classes, we create objects.

53
00:04:12.270 --> 00:04:17.340
If I were a typical Java applications were connecting to an object database.

54
00:04:17.580 --> 00:04:22.800
We could create these objects like the people objects that we've been creating, for example.

55
00:04:23.100 --> 00:04:30.600
And then we could save those objects directly into an object database and retrieve them back out, basically

56
00:04:30.600 --> 00:04:33.360
in the same form that they were in when we put them in.

57
00:04:33.750 --> 00:04:40.130
Whereas with relational databases and some other types of translation typically has to be done by us,

58
00:04:40.140 --> 00:04:46.680
the programmer to translate our objects from Java objects into something that's usually a little more

59
00:04:46.680 --> 00:04:50.130
flat, like what we see here in this spreadsheet.

60
00:04:50.700 --> 00:04:51.000
All right.

61
00:04:51.010 --> 00:04:59.400
So now let's talk a little bit about how databases work and how they are usually connected to our applications.

62
00:04:59.850 --> 00:05:04.860
So first off, a database can be thought of as a few different things, and you'll tend to hear the

63
00:05:04.860 --> 00:05:08.760
term database used in a few different contexts.

64
00:05:09.540 --> 00:05:15.990
So first off, at its most basic level, a database is really just a computer program.

65
00:05:16.710 --> 00:05:22.350
It's a specialized program that knows how to take in and return massive amounts of data.

66
00:05:22.890 --> 00:05:26.770
These applications actually have to be installed on a computer.

67
00:05:26.790 --> 00:05:31.500
Somewhat similarly to how any other application might be installed on a computer.

68
00:05:31.680 --> 00:05:37.650
However, unlike our spreadsheet here, which is an application that is meant to be used with a graphical

69
00:05:37.650 --> 00:05:45.540
interface for a human to interact with it, database applications usually don't come with a graphical

70
00:05:45.540 --> 00:05:49.650
user interface for users to be able to interact with the data.

71
00:05:49.890 --> 00:05:52.170
That's not what their real purpose is.

72
00:05:52.220 --> 00:06:01.590
Instead, they specialize in taking in a lot of data and returning that data, typically to other programs,

73
00:06:01.590 --> 00:06:03.600
which are called database clients.

74
00:06:03.990 --> 00:06:10.880
Now, those clients may in turn present users with a graphical interface, or they may not.

75
00:06:10.890 --> 00:06:14.730
They may just process the data and then do something with it.

76
00:06:14.940 --> 00:06:21.780
So these database applications are installed on computers now for most business purposes.

77
00:06:21.990 --> 00:06:28.830
Those computers are often dedicated computers that primarily specialize in running just the database

78
00:06:28.830 --> 00:06:34.890
software and typically computers that are used in that way are referred to as servers.

79
00:06:35.040 --> 00:06:41.790
Now, if you've got a server that is primarily or exclusively only running a database application,

80
00:06:42.000 --> 00:06:46.710
then it is common to hear the server itself referred to as the database.

81
00:06:46.890 --> 00:06:52.740
And that's why I say the term database can be used somewhat interchangeably in the business world.

82
00:06:53.160 --> 00:06:59.790
It could refer to the database software that is installed on a computer, as well as the computer itself,

83
00:06:59.790 --> 00:07:03.140
especially when the computer is only running the database software.

84
00:07:03.150 --> 00:07:09.480
We will refer to the entire computer or server as the database or a database server.

85
00:07:10.870 --> 00:07:17.260
Additionally, these computers or servers will typically be set up on a network so that they can be

86
00:07:17.260 --> 00:07:21.970
interacted with by other computers on the same network.

87
00:07:22.420 --> 00:07:28.420
These other computers that may connect to the database would be considered clients, and from this we

88
00:07:28.420 --> 00:07:31.750
get a common computing pattern called client server.

89
00:07:32.530 --> 00:07:40.810
The clients may request data from the server and then the server by way of the database application

90
00:07:40.810 --> 00:07:42.070
will look up that data.

91
00:07:42.100 --> 00:07:48.370
Typically records if it's a relational database and return those records to the client, the client

92
00:07:48.370 --> 00:07:54.670
can then process those records or display them on the screen for a user to interact with or any other

93
00:07:54.670 --> 00:07:59.200
thing like that with this type of client server architecture.

94
00:07:59.560 --> 00:08:08.800
It is possible to allow tens, hundreds, thousands or even millions of individual users to access and

95
00:08:08.800 --> 00:08:13.660
interact with the same set of data hosted on just one database server.

96
00:08:13.750 --> 00:08:21.550
It is also possible, though, to group a set of database servers together into what is called a cluster,

97
00:08:21.850 --> 00:08:29.830
thereby enabling the cluster to act as one really massive, even larger virtual database server, which

98
00:08:29.830 --> 00:08:33.310
can serve even more simultaneous users.

99
00:08:33.700 --> 00:08:40.990
So to recap, databases are applications and servers that are specialized at storing and retrieving

100
00:08:41.110 --> 00:08:45.760
massive amounts of data, at least relative to spreadsheets.

101
00:08:45.880 --> 00:08:52.300
We're talking millions or billions of records with very rapid access times on the order of milliseconds

102
00:08:52.300 --> 00:08:53.860
or even nanoseconds.

103
00:08:54.130 --> 00:09:01.030
They're also really great any time multiple users might need access to the same shared data.
