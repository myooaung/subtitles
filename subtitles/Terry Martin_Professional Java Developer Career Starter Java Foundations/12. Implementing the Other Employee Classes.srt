1
00:00:00,120 --> 00:00:09,630
All right, so in our last lesson, we created a new programmer class to encapsulate most or all of

2
00:00:09,630 --> 00:00:16,380
the functionality that had anything to do with the programmer records that we have here, OK?

3
00:00:16,680 --> 00:00:25,110
And by doing so, we were able to greatly simplify and reduce the lines of code in our programmer case.

4
00:00:25,410 --> 00:00:29,680
So we had code that looked pretty much exactly like this.

5
00:00:29,940 --> 00:00:31,920
And that became these.

6
00:00:31,920 --> 00:00:32,370
What is it?

7
00:00:32,370 --> 00:00:33,870
Three lines of code now?

8
00:00:34,470 --> 00:00:38,190
So I would say that was a nice little bit of simplification now.

9
00:00:38,190 --> 00:00:41,190
Of course, mostly all we did was move code around, right?

10
00:00:41,190 --> 00:00:47,580
We shuffled it around a lot of the code that was, you know, looking like this underneath this case

11
00:00:47,580 --> 00:00:51,900
statement has now been moved into the programmer class.

12
00:00:52,260 --> 00:00:58,320
The declarations for the rejects and everything are now fields in this class.

13
00:00:58,620 --> 00:01:02,730
And the code that actually does a lot of the parsing is now inside of the constructor.

14
00:01:02,730 --> 00:01:11,940
So we're passing in one string now and that string that we're passing in would be one line like these.

15
00:01:12,420 --> 00:01:17,370
So let me just be clear that we haven't probably reduced the total lines of code.

16
00:01:17,370 --> 00:01:23,520
We've just moved them around to make the overall application maybe more manageable in individual sections.

17
00:01:23,970 --> 00:01:24,290
All right.

18
00:01:24,300 --> 00:01:31,620
So having done that now, we're going to just do the same thing again for manager, analyst and CEO.

19
00:01:32,010 --> 00:01:33,770
So let's go ahead and get started.

20
00:01:33,780 --> 00:01:37,890
So first I will open up the project pane and let's see.

21
00:01:37,900 --> 00:01:43,320
So we've already got a manager class created, but there's probably not much in it.

22
00:01:43,710 --> 00:01:46,080
So let's let's take a look in here.

23
00:01:46,560 --> 00:01:53,280
Now, one thought that comes to my mind is what might happen if we considered copying and pasting a

24
00:01:53,280 --> 00:01:55,770
lot of code from the programmer class?

25
00:01:56,220 --> 00:02:01,620
So in the programmer class, let's see here we've got we've got our fields.

26
00:02:02,010 --> 00:02:08,100
Obviously, these three fields will be different, but these first three will all be the same.

27
00:02:08,220 --> 00:02:10,080
So that would probably be good.

28
00:02:10,530 --> 00:02:17,010
And then we could copy over our projects and our patterns and things, while maybe not from here, but

29
00:02:17,010 --> 00:02:18,810
from the main class.

30
00:02:19,170 --> 00:02:23,040
So yeah, let's let's start by copying these three fields.

31
00:02:23,310 --> 00:02:24,980
First name, last name and date of birth.

32
00:02:24,990 --> 00:02:26,610
Those are all going to be the same.

33
00:02:27,120 --> 00:02:35,430
So I'm popping over here to the manager class shift into Paste Command V. or Control V to paste.

34
00:02:35,940 --> 00:02:36,380
All right.

35
00:02:36,390 --> 00:02:38,190
So there are those.

36
00:02:39,610 --> 00:02:40,270
Fields.

37
00:02:41,020 --> 00:02:42,520
Let's see what else.

38
00:02:42,850 --> 00:02:44,230
OK, we're going to want the rig.

39
00:02:44,440 --> 00:02:46,460
So let's jump over to the main class.

40
00:02:46,480 --> 00:02:49,030
Let me make a little more room this way.

41
00:02:49,570 --> 00:02:51,460
Jump over to the main class.

42
00:02:51,970 --> 00:02:53,050
Let's see.

43
00:02:53,080 --> 00:02:55,480
So here's the manager stuff.

44
00:02:55,480 --> 00:03:07,780
So let's grab these two bits and jump back over to manager and paste those and let's make them private.

45
00:03:08,020 --> 00:03:14,650
And final guess I could have done that on both lines simultaneously private and final.

46
00:03:15,340 --> 00:03:18,850
And yeah, that's looking OK so far.

47
00:03:19,420 --> 00:03:22,820
And let's jump back over to the programmer class.

48
00:03:22,840 --> 00:03:23,920
What else?

49
00:03:24,640 --> 00:03:30,970
Let's go ahead and create the manager constructor.

50
00:03:31,390 --> 00:03:38,590
But I'm kind of wondering if we can start by just copying the body of the programmer constructor and

51
00:03:38,590 --> 00:03:40,090
then we'll just kind of change things.

52
00:03:40,090 --> 00:03:41,380
So let's see what that will look like.

53
00:03:41,620 --> 00:03:47,920
Jump over here to the manager constructor shift enter to make a couple of new lines command in Generate

54
00:03:47,920 --> 00:03:49,960
a constructor.

55
00:03:49,990 --> 00:03:52,180
This won't use well.

56
00:03:52,180 --> 00:03:55,660
We won't use any of these fields, though, so I select none.

57
00:03:56,320 --> 00:03:59,650
Then in here, I will say we're going to pass in a string.

58
00:03:59,650 --> 00:04:00,520
What did we call it?

59
00:04:00,520 --> 00:04:04,240
In the programmer we called person text, OK.

60
00:04:04,570 --> 00:04:10,750
We'll do the same here, person text shift.

61
00:04:10,750 --> 00:04:13,540
Enter, then I'm going to paste.

62
00:04:14,230 --> 00:04:14,620
All right.

63
00:04:14,620 --> 00:04:16,840
So now let's just change a few things.

64
00:04:16,840 --> 00:04:17,620
So.

65
00:04:19,330 --> 00:04:22,160
All right, so here we're referring to a people pattern.

66
00:04:22,180 --> 00:04:24,370
Let me see what we had in the program here.

67
00:04:24,400 --> 00:04:27,070
People pattern, people pattern.

68
00:04:27,080 --> 00:04:28,540
Did I not copy that?

69
00:04:28,900 --> 00:04:29,530
No, I didn't.

70
00:04:30,400 --> 00:04:34,090
OK, so we need to copy the people pattern, as is.

71
00:04:34,870 --> 00:04:37,040
So I'm just selecting that command.

72
00:04:37,060 --> 00:04:43,780
See, jump over to manager class and I'm going to paste that in.

73
00:04:44,740 --> 00:04:50,170
OK, and then I'm going to need the people rig x jumping over to the programmer.

74
00:04:50,650 --> 00:04:51,330
OK, I see.

75
00:04:51,340 --> 00:04:53,620
So I should have just grabbed both of these lines.

76
00:04:53,650 --> 00:04:54,280
That's fine.

77
00:04:54,700 --> 00:04:55,730
Copy that!

78
00:04:55,750 --> 00:04:57,340
Jump over to manager.

79
00:04:57,820 --> 00:04:59,860
I'll pace that right above it.

80
00:05:01,630 --> 00:05:02,260
There we go.

81
00:05:02,380 --> 00:05:02,680
All right.

82
00:05:02,680 --> 00:05:04,060
So that's happy now.

83
00:05:04,750 --> 00:05:08,920
And that's allowing us to pass the last name and first name.

84
00:05:09,680 --> 00:05:13,360
Then we need this format or the date, time matter.

85
00:05:13,390 --> 00:05:21,640
So jump over to programmer and grab that guy command c jump over to the manager.

86
00:05:22,120 --> 00:05:27,250
Paste that, and I see that I actually forgot to make that private and final.

87
00:05:27,700 --> 00:05:30,070
In the programmer class.

88
00:05:30,070 --> 00:05:32,080
So let me let me do that real quick.

89
00:05:33,090 --> 00:05:36,660
Yeah, let's make that private and final.

90
00:05:37,170 --> 00:05:44,490
OK, well, let's see back over to manager what else programmer pattern will become manager pattern,

91
00:05:44,920 --> 00:05:45,360
right?

92
00:05:45,960 --> 00:05:55,830
So I'm going to copy manager pattern here and then come here and just replace that name a mantra.

93
00:05:56,220 --> 00:06:05,040
And then this should become manager, matcher, MDR manager matcher.

94
00:06:06,090 --> 00:06:09,590
Then I'll copy that name and replace it everywhere.

95
00:06:09,600 --> 00:06:11,040
I see it here now.

96
00:06:11,040 --> 00:06:15,420
I guess I could have done a refactoring, but since things were kind of broken, I don't know.

97
00:06:15,660 --> 00:06:18,300
I'm just doing it kind of overly manually.

98
00:06:18,390 --> 00:06:19,230
Probably shouldn't.

99
00:06:19,230 --> 00:06:21,720
But I've already started down this road.

100
00:06:22,000 --> 00:06:27,660
So change it there and there, and they're all right.

101
00:06:27,720 --> 00:06:33,750
Now these these fields, though, are all going to be different fields for the managers.

102
00:06:33,750 --> 00:06:41,790
So let's jump back over here to Maine and see what what fields we are actually caring about for a manager

103
00:06:42,030 --> 00:06:42,460
we've got.

104
00:06:42,480 --> 00:06:45,300
Org Size and direct reports d.r.

105
00:06:45,810 --> 00:06:50,280
OK, so jumping back over to manager here, in fact, I'll just copy that.

106
00:06:50,310 --> 00:06:54,030
Org size jumping back over to manager.

107
00:06:55,720 --> 00:07:13,270
So we're going to want private and org size equals zero, private and direct reports equals zero.

108
00:07:14,230 --> 00:07:17,170
And then down here I will refer to those fields.

109
00:07:17,200 --> 00:07:18,400
Org size.

110
00:07:19,810 --> 00:07:30,220
And then I'll change this to organize, and then I will change this one to direct reports, and this

111
00:07:30,220 --> 00:07:35,890
one will be called D.R, because that's what it's actually called here in the named Capshaw Group.

112
00:07:36,100 --> 00:07:41,320
And then there were only two details that we're capturing from the manager.

113
00:07:41,470 --> 00:07:48,310
So this third one here, I will just delete with the command delete looking pretty good.

114
00:07:50,070 --> 00:07:50,370
All right.

115
00:07:50,400 --> 00:07:56,010
Jumping back over to manager, what else do we need then, because I think that finished off the constructor.

116
00:07:56,340 --> 00:07:56,610
All right.

117
00:07:56,610 --> 00:07:59,940
So then we're going to need a get salary and a two strings.

118
00:07:59,940 --> 00:08:06,510
So let me start off by just copying both of these and then I'll jump over here to the manager class

119
00:08:08,730 --> 00:08:11,430
and paste those to there.

120
00:08:11,730 --> 00:08:16,950
And I mean, let's go back to the main class and confirm the what math were we doing here?

121
00:08:16,950 --> 00:08:21,480
I think we're just doing 3500 plus or size times, direct reports.

122
00:08:21,510 --> 00:08:21,870
OK.

123
00:08:22,200 --> 00:08:24,600
So we'll jump back over here to manager.

124
00:08:24,900 --> 00:08:40,650
So here it'll be 30 500 plus org size times, direct reports and no IQ like so.

125
00:08:41,130 --> 00:08:43,320
And then the two string.

126
00:08:43,620 --> 00:08:53,760
OK, we need a money formatter, so let's jump over to the programmer and copy the money format business,

127
00:08:53,760 --> 00:08:54,960
which is right here.

128
00:08:55,740 --> 00:08:56,820
Command C..

129
00:08:58,140 --> 00:09:00,570
Jump back over to the manager.

130
00:09:01,320 --> 00:09:02,400
Go to the top.

131
00:09:03,380 --> 00:09:07,280
And I'll make a new line and paste that right there.

132
00:09:08,260 --> 00:09:09,970
And no errors there.

133
00:09:11,170 --> 00:09:14,060
OK, so maybe maybe I got everything.

134
00:09:14,110 --> 00:09:15,940
Now we'll jump back over to Main.

135
00:09:16,840 --> 00:09:28,570
And I think I am going to comment everything first inside of the manager case that is and now at the

136
00:09:28,570 --> 00:09:32,800
bottom, I'm going to follow this same pattern here.

137
00:09:32,800 --> 00:09:33,340
So

138
00:09:35,980 --> 00:09:41,560
manager manager equals new manager.

139
00:09:45,150 --> 00:09:47,940
People match your group.

140
00:09:49,950 --> 00:09:59,190
So just another reminder, People Match Report Group refers to one whole line here.

141
00:09:59,310 --> 00:10:06,720
So if you just use the Match Report Group method without passing any inputs into it, it refers to the

142
00:10:06,720 --> 00:10:09,210
entire to one entire line.

143
00:10:09,240 --> 00:10:09,660
OK.

144
00:10:11,260 --> 00:10:18,580
People Match Report Group, then I'm passing that string, this is this returns a string into the programmer

145
00:10:18,580 --> 00:10:24,100
constructor or I'm sorry into the manager constructor, which is the same same basic deal.

146
00:10:24,490 --> 00:10:24,940
OK.

147
00:10:25,330 --> 00:10:41,130
All right, then system that out, that print line manager to string and then yield manager Typekit

148
00:10:41,170 --> 00:10:44,410
get salary and semicolon.

149
00:10:46,090 --> 00:10:51,640
All right, let's confirm that we still get whatever the number was 8.6 million or so.

150
00:10:51,910 --> 00:10:55,600
So let's just run this whole thing now that we've kind of refactored it.

151
00:10:57,800 --> 00:11:03,230
Yeah, still getting eight point six million, so I don't think we've broken anything, and let's see

152
00:11:03,230 --> 00:11:05,750
some of the manager names were Barney.

153
00:11:05,970 --> 00:11:09,770
So the rebels are all the managers and there are the rebels there.

154
00:11:11,140 --> 00:11:11,440
Yeah.

155
00:11:12,830 --> 00:11:18,950
So I think we're looking pretty good there, and now I think we can get rid of all of these commented

156
00:11:18,950 --> 00:11:19,910
lines, oops!

157
00:11:20,390 --> 00:11:21,140
Went too far.

158
00:11:21,170 --> 00:11:25,610
I'm just going to delete these lines, command, delete or control.

159
00:11:25,610 --> 00:11:27,110
Why for Windows and Linux?

160
00:11:27,650 --> 00:11:28,100
All right.

161
00:11:28,110 --> 00:11:36,290
So now the programmer, case and manager case are much shorter, and now I will do the same again for

162
00:11:36,650 --> 00:11:37,430
analysts.

163
00:11:37,910 --> 00:11:44,600
And this time, maybe I'm going to just start off by copying everything in the manager class and then

164
00:11:44,600 --> 00:11:45,470
just changing.

165
00:11:46,610 --> 00:11:58,970
What I need to see if I copy all of the guts of this and go into analyst and paste, then change this

166
00:11:58,970 --> 00:12:06,410
constructor name to analyst the constructor name always has to match the name of the class.

167
00:12:07,220 --> 00:12:07,970
Always.

168
00:12:08,240 --> 00:12:09,110
All right.

169
00:12:09,470 --> 00:12:13,820
Then go grab the correct rejects and pattern.

170
00:12:13,820 --> 00:12:18,860
While the correct rejects really for the analyst, which I have in the main class.

171
00:12:19,520 --> 00:12:22,070
So analyst?

172
00:12:23,500 --> 00:12:29,170
Right there, grab all of that, jump into the analyst class.

173
00:12:32,190 --> 00:12:35,070
Replace these two bits.

174
00:12:37,810 --> 00:12:41,540
And make them both private and final.

175
00:12:41,560 --> 00:12:44,410
I'm using my two cursor trick here.

176
00:12:44,440 --> 00:12:47,990
Private final so that I can do them both at once.

177
00:12:48,100 --> 00:12:51,490
Escape to get out of the double cursor business.

178
00:12:52,810 --> 00:12:53,740
All right.

179
00:12:54,520 --> 00:12:56,050
So there's all of that.

180
00:12:57,140 --> 00:13:04,760
Now down here, I can refer to the I need a pattern.

181
00:13:05,180 --> 00:13:11,270
And so I'm going to use the analyst pattern, some copying that and then I'm going to replace this manager

182
00:13:11,270 --> 00:13:14,330
pattern with my analyst pattern instead.

183
00:13:15,850 --> 00:13:22,700
And this time, I'll be a little smarter, and I will create this matter by simply using a rename refactoring.

184
00:13:23,110 --> 00:13:27,460
So I will do a shift six and call this.

185
00:13:30,290 --> 00:13:42,770
And a list and then hit return, and now the fields that I want out of here are just one, and it's

186
00:13:42,770 --> 00:13:44,330
called project count.

187
00:13:45,170 --> 00:13:55,250
OK, so I will change this first one to project count and I will delete this last line and I need to

188
00:13:55,250 --> 00:13:58,340
store that in a field called Project Count.

189
00:13:58,940 --> 00:14:01,940
So I actually can just rename this as well.

190
00:14:01,940 --> 00:14:06,590
So I'll do a shift F6 and call it project count.

191
00:14:08,210 --> 00:14:11,420
Then I will delete this unused field here.

192
00:14:11,870 --> 00:14:13,010
Command, delete.

193
00:14:13,640 --> 00:14:14,210
All right.

194
00:14:14,240 --> 00:14:17,000
I think that's looking pretty good.

195
00:14:18,890 --> 00:14:25,880
And then let's see now what was the math that we did for the analyst to jump over here to the main class

196
00:14:26,630 --> 00:14:30,050
and for analysts, what did we do?

197
00:14:30,080 --> 00:14:34,670
We did 2500 plus project count times to here.

198
00:14:34,670 --> 00:14:45,650
Let's just grab that copy, jump over to analyst, select all of that and paste.

199
00:14:46,400 --> 00:14:47,000
There we go.

200
00:14:47,180 --> 00:14:50,450
And two string is already looking good.

201
00:14:51,020 --> 00:14:52,250
So that was even quicker.

202
00:14:52,640 --> 00:14:54,290
Now, jump back over to the main.

203
00:14:54,890 --> 00:15:00,650
And now let's comment out all of the analyst case as it currently exists.

204
00:15:00,860 --> 00:15:06,380
Command forward slash, then pop in.

205
00:15:06,530 --> 00:15:13,790
Create a new instance of our new analyst analyst analyst equals new analyst.

206
00:15:15,130 --> 00:15:19,330
Passing people matcher diet group.

207
00:15:23,080 --> 00:15:40,120
Then you analyst Dot to string shift into yield analyst Dot, get salary, semi-colon.

208
00:15:41,400 --> 00:15:44,970
Let's rerun it and make sure we still get eight point six million or so.

209
00:15:47,800 --> 00:15:50,770
There it is looking like it's still the same.

210
00:15:51,130 --> 00:15:59,470
And our analysts people are The Flintstones and they're, well, the other Flintstones, Wilma, all

211
00:15:59,470 --> 00:16:00,850
the Wilma Flintstones.

212
00:16:02,400 --> 00:16:03,840
Looking pretty good.

213
00:16:05,130 --> 00:16:05,970
All right.

214
00:16:06,930 --> 00:16:10,650
And one last one to do, which is the CEO.

215
00:16:11,460 --> 00:16:13,170
So same same deal.

216
00:16:13,260 --> 00:16:15,370
We'll start off by just yet.

217
00:16:15,490 --> 00:16:21,390
I already have all of the guts of the manager class selected, so I'm just going to do a Command C again

218
00:16:21,390 --> 00:16:22,470
to copy all of that.

219
00:16:22,770 --> 00:16:25,830
Jump into the CEO class shift.

220
00:16:25,830 --> 00:16:29,610
Enter to make a new line inside Command V to paste.

221
00:16:30,360 --> 00:16:36,990
Change the constructor name to CEO and let's see, then jump back over to Main.

222
00:16:38,280 --> 00:16:43,080
Find the CEO rejects and pattern, which are here.

223
00:16:43,290 --> 00:16:48,150
Copy these command, see jump back over to CEO class.

224
00:16:49,230 --> 00:16:57,900
Replace the manager, rejects and pattern with the CEO, rejects and pattern, jump to the beginning

225
00:16:57,900 --> 00:17:01,110
of these do an option shift.

226
00:17:01,320 --> 00:17:10,490
Click here and here to get to cursors type private final so that I can do them both at the same time.

227
00:17:10,500 --> 00:17:15,720
Escape to finish that, then look for my patterns.

228
00:17:15,720 --> 00:17:18,450
So this should be a CEO pattern, which is right here.

229
00:17:18,750 --> 00:17:22,740
Select that with a double click Command C to copy double.

230
00:17:22,740 --> 00:17:32,310
Click this one here Command V to paste, then select this manager matcher and rename it to CEO matcher

231
00:17:32,430 --> 00:17:36,210
some selecting it or clicking on it, then shift DEF Six.

232
00:17:37,170 --> 00:17:40,800
Then I will just replace the Imgur with CEO.

233
00:17:41,640 --> 00:17:42,210
Enter!

234
00:17:42,420 --> 00:17:42,990
All right.

235
00:17:43,290 --> 00:17:44,850
And let's see here.

236
00:17:44,850 --> 00:17:48,570
The named capture group that I care about is average stock price.

237
00:17:48,570 --> 00:17:53,970
I'm going to just double click that to select that whole word command C to copy.

238
00:17:54,270 --> 00:18:00,950
Then I will jump down here to this section for the CEO Match Report Find and I will replace org size.

239
00:18:00,960 --> 00:18:03,840
I'll double click that command v paste.

240
00:18:03,840 --> 00:18:10,710
Average stock price looks like we only are using one detail field, so I will delete this second line

241
00:18:10,710 --> 00:18:18,600
here and then I will rename this variable to average stock price.

242
00:18:18,930 --> 00:18:24,390
So I will do a shift of six with the cursor on it and then I can just paste since I already have it

243
00:18:24,390 --> 00:18:26,760
in memory and then enter.

244
00:18:27,270 --> 00:18:33,480
Now I will come up here and delete this line 14 for direct reports because that does not apply to the

245
00:18:33,480 --> 00:18:39,390
CEO, but my cursor anywhere on Line 14 then do a command delete to get rid of that.

246
00:18:39,990 --> 00:18:40,470
All right.

247
00:18:40,480 --> 00:18:41,370
What else?

248
00:18:41,400 --> 00:18:42,660
OK, and then the math.

249
00:18:42,780 --> 00:18:43,840
Let's see how we did it.

250
00:18:43,860 --> 00:18:44,520
Main.

251
00:18:44,640 --> 00:18:49,830
So for the CEO, oh oh, I forgot to delete the analyst stuff.

252
00:18:49,860 --> 00:18:57,570
We'll delete that in a moment for the CEO, we did 5000 times average stock price.

253
00:18:57,690 --> 00:18:58,140
OK.

254
00:18:58,710 --> 00:19:01,170
So jump back over to C.I., actually.

255
00:19:02,480 --> 00:19:07,130
So let's just copy that command, see.

256
00:19:07,490 --> 00:19:13,880
Jump back over to CEO, select all of this for the good salary and then do a command V..

257
00:19:14,510 --> 00:19:15,320
There we go.

258
00:19:15,980 --> 00:19:21,950
And I don't see any red marks, so I think we should be good here.

259
00:19:22,430 --> 00:19:24,200
So jump back over to Main.

260
00:19:25,130 --> 00:19:30,020
Let's select all of this and comment.

261
00:19:30,020 --> 00:19:30,680
Commented out.

262
00:19:32,540 --> 00:19:37,520
Shift into to make a new line and then let's create a new instance of a CEO.

263
00:19:38,180 --> 00:19:48,830
CEO CEO equals new CEO people Matt Dot Group.

264
00:19:50,930 --> 00:19:55,370
So you t CEO, get strong?

265
00:19:55,790 --> 00:19:56,840
Well, I'm sorry.

266
00:19:57,020 --> 00:20:08,030
CEOs to string shift into yield CEO don't get salary and let's run it all.

267
00:20:08,510 --> 00:20:12,170
And again, we'll be looking for a number roughly 8.6 million.

268
00:20:14,800 --> 00:20:23,050
Yet still 8.6 million, and there's Betty Rubble with 1.5 million in salary looking good.

269
00:20:23,470 --> 00:20:28,780
All right, so minimize this and now let's get rid of these commented lines

270
00:20:31,180 --> 00:20:34,930
there, and let's get rid of these ones also.

271
00:20:37,480 --> 00:20:44,890
And now let's get a bigger look at what we've got here in this while loop, so that's way shorter and

272
00:20:44,890 --> 00:20:46,570
much more manageable now.

273
00:20:47,770 --> 00:20:48,190
All right.

274
00:20:48,200 --> 00:20:54,130
So now we have finished our first level of refactoring for this program.

275
00:20:54,430 --> 00:21:00,010
And so you can see that again, mostly all we've done is just shuffle code around.

276
00:21:00,220 --> 00:21:06,550
But there's a lot of value in shuffling code around in this way if you're moving it into other classes

277
00:21:06,730 --> 00:21:08,210
by having done so.

278
00:21:08,230 --> 00:21:10,810
Let me close that for a moment.

279
00:21:10,960 --> 00:21:16,930
So by having done the shuffling that oh oh, there's one more thing that we can do now, and we should,

280
00:21:17,050 --> 00:21:21,250
I think, be able to get rid of most of these fields.

281
00:21:21,490 --> 00:21:25,140
Let's let's just see what happens here if we just comment these out.

282
00:21:25,150 --> 00:21:29,800
So I'm going to select all of these projects and patterns and then just comment them.

283
00:21:30,190 --> 00:21:32,190
Let's see if anything breaks.

284
00:21:32,200 --> 00:21:34,000
No, nothing breaks.

285
00:21:34,000 --> 00:21:36,970
So therefore they're not being they weren't being used.

286
00:21:37,240 --> 00:21:43,390
And so I think we can delete them, command, delete, make a little more space there.

287
00:21:43,630 --> 00:21:50,680
So I always feel so good when I can reduce the lines of code in one massive class, right, like we're

288
00:21:50,680 --> 00:21:54,730
doing here, this is some, you know, nice little refactoring that we're doing here.

289
00:21:55,240 --> 00:21:55,790
All right.

290
00:21:55,810 --> 00:21:59,980
And you know, for grins, let's just rerun it and make sure we didn't break anything, but I don't

291
00:21:59,980 --> 00:22:02,590
think we did because we'd be likely seeing errors.

292
00:22:04,700 --> 00:22:07,550
Yep, still getting still getting 8.6 million.

293
00:22:07,820 --> 00:22:09,740
So that is still looking good.

294
00:22:10,850 --> 00:22:11,630
All right.

295
00:22:12,350 --> 00:22:20,390
So take a look at this class now, it's gotten a lot shorter and easier to look at, easier to discern

296
00:22:20,570 --> 00:22:22,880
the big picture of what's going on here, right?

297
00:22:23,120 --> 00:22:26,990
So we've got our list of people, our list of employees.

298
00:22:27,500 --> 00:22:34,280
We've got a regex that knows how to pass them line by line.

299
00:22:34,460 --> 00:22:39,530
Then we've got our loop, which is looping over each line.

300
00:22:40,490 --> 00:22:49,280
And for each line, we're using a switch to instantiate whichever class we need based on the roll,

301
00:22:49,290 --> 00:22:49,610
right?

302
00:22:49,640 --> 00:22:57,020
So in other words, if the role is analyst, then this switch is is getting the word analyst and then

303
00:22:57,020 --> 00:23:00,470
it's saying, OK, match the case for analyst, which would be here.

304
00:23:00,710 --> 00:23:02,690
Then we end up creating a new analyst.

305
00:23:03,080 --> 00:23:09,530
And then in the constructor of that analyst, we're passing in the text representation of that analyst,

306
00:23:09,800 --> 00:23:18,380
which would be one of these lines like so that's getting passed into the constructor.

307
00:23:18,920 --> 00:23:22,460
Then we jump into the constructor with that string.

308
00:23:23,000 --> 00:23:28,570
Then we let our matcher analyze that string essentially.

309
00:23:28,580 --> 00:23:34,970
Then we create a matter which is capable of analyzing that person's string, which goes right here.

310
00:23:35,090 --> 00:23:43,490
And that matter is capable of extracting the last name, first name and date of birth, which is a string

311
00:23:43,490 --> 00:23:45,140
when it comes out of here.

312
00:23:45,410 --> 00:23:51,320
So then we use this date time format or to convert the string representation of a date date of birth

313
00:23:51,560 --> 00:23:59,780
into an actual date object, a local date so that we have more semantics behind that information.

314
00:23:59,960 --> 00:24:05,690
Then we create another matter that is specific to an analyst.

315
00:24:05,900 --> 00:24:14,690
So this matters job is to extract the information in between the curly braces here for an analyst,

316
00:24:14,840 --> 00:24:17,570
and the same is true for any other type, right?

317
00:24:18,170 --> 00:24:18,500
All right.

318
00:24:18,530 --> 00:24:26,240
And then back over here in the analyst class, now that we've got a matter for the analyst details,

319
00:24:26,480 --> 00:24:32,420
we tell that match or to go find any of those details and as long as it does, which is what this f

320
00:24:32,420 --> 00:24:39,050
block is for as long as it can find any of those details that are specific to an analyst, it can extract

321
00:24:39,050 --> 00:24:39,290
them.

322
00:24:39,290 --> 00:24:42,620
And in this case, there would only be one, which is the project count.

323
00:24:42,920 --> 00:24:47,120
We converted into an integer and then stored in a field right there.

324
00:24:47,270 --> 00:24:54,830
Then we can do math on it to get the salary, according to our arbitrary rules for how to how to determine

325
00:24:54,830 --> 00:24:55,790
the salary for a role.

326
00:24:55,910 --> 00:25:01,490
I want you to note now this formula that I've put here, this is completely arbitrarily made up and

327
00:25:01,490 --> 00:25:05,390
we could have made this as simple or as complex as we wanted it to be.

328
00:25:05,540 --> 00:25:13,070
My point with the get salary was simply to give us an excuse to have different methods of determining

329
00:25:13,070 --> 00:25:15,740
the salary based on an employee's role.

330
00:25:15,770 --> 00:25:16,130
OK.

331
00:25:16,160 --> 00:25:22,790
So for each employee of a certain role, there would be a different way to calculate their salary.

332
00:25:23,030 --> 00:25:23,450
OK.

333
00:25:23,780 --> 00:25:30,410
And I will remind you, if we were calculating salary in the in an identical fashion for all roles,

334
00:25:30,530 --> 00:25:35,370
we would not even probably need to bother creating all these classes and stuff.

335
00:25:35,400 --> 00:25:40,460
OK, we could have just done that just with the Switch statement, as we did in the very, very first

336
00:25:40,460 --> 00:25:43,100
implementation of the main class.

337
00:25:43,130 --> 00:25:49,520
OK, but then we wouldn't have a justification or a reason to get into all of this object oriented stuff

338
00:25:49,520 --> 00:25:52,010
that we're slowly traveling down.

339
00:25:52,760 --> 00:25:57,740
And then we implemented a two string method, which is identical in all of the classes.

340
00:25:57,830 --> 00:26:01,510
All right, so that's a little recap on what we did so far.

341
00:26:01,520 --> 00:26:08,570
So in the subsequent lessons, we will continue traveling down this road and we will see what else we

342
00:26:08,570 --> 00:26:17,270
can do with Java and its object orientation techniques to hopefully simplify the code even further or

343
00:26:17,270 --> 00:26:20,240
make it more flexible or a combination of the two.

344
00:26:20,540 --> 00:26:22,160
So I'll see you in the next one.
