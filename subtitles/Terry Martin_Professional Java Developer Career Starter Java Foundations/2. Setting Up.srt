1
00:00:00,330 --> 00:00:05,100
OK, so if we go up to file new project.

2
00:00:06,210 --> 00:00:07,980
We've done this a few times already.

3
00:00:08,400 --> 00:00:14,610
Make sure you have Java selected, make sure you have a project SDK, which you almost certainly will

4
00:00:14,610 --> 00:00:17,550
buy now and then you can click next.

5
00:00:18,490 --> 00:00:23,050
And don't you don't need to select anything there and then click next again.

6
00:00:23,530 --> 00:00:31,000
Now for this next project, I think we're going to make one project that's all geared towards one little

7
00:00:31,000 --> 00:00:32,440
application, if you will.

8
00:00:32,650 --> 00:00:37,630
And this application will just be a really, really simple calculator app.

9
00:00:37,810 --> 00:00:43,150
I mean, the reason we're going to do something simple with the calculator app is because that'll be

10
00:00:43,150 --> 00:00:44,410
simple to test.

11
00:00:44,860 --> 00:00:47,470
So we're going to ease you into unit testing.

12
00:00:47,950 --> 00:00:55,120
OK, so for that matter, let's call this project calculator and then you can click finish.

13
00:00:57,470 --> 00:01:03,000
And if you have other windows open, it's up to you if you want to leave them open.

14
00:01:03,070 --> 00:01:10,070
I personally will be leaving mine open because I may want to come back to some of these other windows

15
00:01:10,190 --> 00:01:13,520
in the future while I'm in the middle of talking about something.

16
00:01:13,850 --> 00:01:14,660
But it's up to you.

17
00:01:14,720 --> 00:01:17,840
You can always get back to them by just opening the projects anyway.

18
00:01:18,200 --> 00:01:20,090
So I'm going to say new window.

19
00:01:23,400 --> 00:01:26,310
And then let me resize that new window.

20
00:01:28,240 --> 00:01:30,010
So that you can see it.

21
00:01:31,580 --> 00:01:32,120
There we go.

22
00:01:32,900 --> 00:01:33,890
All right.

23
00:01:34,160 --> 00:01:36,620
And I'll move that over a little bit as well.

24
00:01:36,650 --> 00:01:40,310
OK, now we need to do something that we've never done before.

25
00:01:40,640 --> 00:01:46,790
As I mentioned in the intro, we're going to be learning how to write automated tests with the framework

26
00:01:46,790 --> 00:01:53,240
called J Unit J Unit that stands for Java unit and really it stands for Java Unit Test.

27
00:01:53,390 --> 00:01:58,040
That's a type of testing that we will be focusing on unit testing.

28
00:01:58,190 --> 00:02:06,810
So we need to pull in this third party library for for the J Unit framework.

29
00:02:06,830 --> 00:02:14,120
Now there are a few ways to do this and we will learn in the future probably the most common way to

30
00:02:14,120 --> 00:02:17,180
do this in Java development it within a company.

31
00:02:17,450 --> 00:02:19,550
But for right now, baby steps.

32
00:02:19,820 --> 00:02:25,140
And so we're going to do a kind of a middle of the road approach to this.

33
00:02:25,610 --> 00:02:27,680
So we need to pull in this library.

34
00:02:28,040 --> 00:02:34,430
Thankfully, intelligence makes it pretty easy to do this without having to become a complete expert

35
00:02:34,430 --> 00:02:36,470
in a bunch of other frameworks as well.

36
00:02:36,980 --> 00:02:44,540
So the first thing we will do is to right click on the project name calculator here.

37
00:02:46,080 --> 00:02:51,420
And then we can go down to open module settings.

38
00:02:53,170 --> 00:02:59,530
And this is an area where we can further configure our project.

39
00:02:59,890 --> 00:03:03,670
Up until now, we've just been using all of the default settings and everything.

40
00:03:04,180 --> 00:03:11,590
Now just know that the way my window here looks might be a little bit weird and a bit different from

41
00:03:11,590 --> 00:03:18,940
how yours looks because I keep my screen blown up large so that you can read everything somewhat easier.

42
00:03:18,970 --> 00:03:19,320
All right.

43
00:03:19,330 --> 00:03:25,120
So what we want to do is add a new library to this project.

44
00:03:25,300 --> 00:03:26,950
So we've got over here on the left.

45
00:03:27,190 --> 00:03:28,660
All of these project settings.

46
00:03:28,780 --> 00:03:31,310
And there's one here called libraries.

47
00:03:31,310 --> 00:03:36,160
So if you click on that, you'll see that there's not really anything here because we haven't added

48
00:03:36,160 --> 00:03:37,540
any libraries yet.

49
00:03:38,020 --> 00:03:43,750
So what we can do is click on this plus button here to add a new library.

50
00:03:44,620 --> 00:03:48,320
And we want to add a new library from MAVEN.

51
00:03:48,610 --> 00:03:52,810
Now I'm going to explain very quickly and briefly what what this is.

52
00:03:53,380 --> 00:04:01,990
So there is a very popular tool within the Java world called MAVEN, and this tool does a number of

53
00:04:01,990 --> 00:04:02,520
things.

54
00:04:02,530 --> 00:04:11,080
One of which is it standardizes how we can organize our Java projects, like what folders we put everything

55
00:04:11,080 --> 00:04:15,520
into and it can also build our projects.

56
00:04:15,700 --> 00:04:20,320
So we've been building our projects via intelligent right.

57
00:04:20,340 --> 00:04:24,250
We tell Intelligent to build our projects for us, and then it does so.

58
00:04:24,730 --> 00:04:33,130
But typically in the professional Java world, where people may be using a number of different ideas

59
00:04:33,130 --> 00:04:37,330
like some people on a team might be using intelligence, others might be using eclipse.

60
00:04:37,450 --> 00:04:40,600
Some may be using nothing at all, although I hope not.

61
00:04:40,600 --> 00:04:43,350
But there probably are people like that as well.

62
00:04:43,360 --> 00:04:52,300
And so it's problematic to assume that everyone is using the same ID and then to further assume that

63
00:04:52,300 --> 00:04:56,470
everyone can build the project in the exact same way.

64
00:04:56,800 --> 00:05:05,470
If everyone's using different IDs, especially so these third party tools such as may then give us an

65
00:05:05,470 --> 00:05:13,060
external sizable way, if you will, to standardize how we build our projects such that it won't matter

66
00:05:13,060 --> 00:05:15,520
what ID we're using anymore.

67
00:05:15,580 --> 00:05:19,270
Now, one of the other things, and this is kind of the biggest point here.

68
00:05:19,480 --> 00:05:28,180
One of the other things that MAVEN has done is they popularized the centralization of third party libraries

69
00:05:28,360 --> 00:05:31,360
that can be used with Java projects.

70
00:05:31,570 --> 00:05:40,090
So as I've already explained, we're about to use a third party library called J Unit for unit testing.

71
00:05:40,420 --> 00:05:48,970
While the MAVEN project has what are called repositories all around the world, where they've gathered

72
00:05:48,970 --> 00:05:57,550
up thousands of third party libraries and centralized them on these repositories.

73
00:05:57,700 --> 00:06:03,780
And that makes it so easy to just say, Oh, I want to use whatever library.

74
00:06:03,790 --> 00:06:11,320
Chances are that library is already in the maven repositories, so we only need to search the maven

75
00:06:11,320 --> 00:06:16,600
repositories for a given library and then we can get that library very easily.

76
00:06:17,080 --> 00:06:24,310
And now there are tools such as Intel, AJ and the clips and other ideas that know about those repositories

77
00:06:24,460 --> 00:06:31,330
and know how to search them and pull down libraries that we want to use very, very easily.

78
00:06:31,360 --> 00:06:37,870
And so what this option here is asking us is where do you want to get your library from?

79
00:06:38,470 --> 00:06:44,680
And we have the option of getting it as a Java library, which generally just means we're going to supply

80
00:06:44,680 --> 00:06:45,460
it ourselves.

81
00:06:45,460 --> 00:06:51,580
Like we've already downloaded it from somewhere and it's a file or something on our hard drive and and

82
00:06:51,580 --> 00:06:54,210
we're just going to point to it or something like that.

83
00:06:54,220 --> 00:06:59,890
And then the second option, though, is the one that we care about right now, which is to say we want

84
00:06:59,890 --> 00:07:04,480
to get the library from the standard maven repositories.

85
00:07:04,660 --> 00:07:06,640
So that's the one you're going to select.

86
00:07:07,890 --> 00:07:08,250
All right.

87
00:07:08,460 --> 00:07:16,710
And so then we get this additional dialog box that opens up, and it's asking us to type in the name

88
00:07:16,710 --> 00:07:18,900
of a library that we want.

89
00:07:19,740 --> 00:07:28,020
So now libraries that are in the MAVEN repository have what are called coordinates, if you will, and

90
00:07:28,020 --> 00:07:35,460
these coordinates or the address, if you will, are how we can specify what library we're looking for.

91
00:07:35,850 --> 00:07:43,590
Now I already happen to know the maven coordinates for the day unit library that I want to use.

92
00:07:43,860 --> 00:07:48,000
And so I'm going to just go ahead and paste that in here now.

93
00:07:48,720 --> 00:07:55,650
Like so I will supply these coordinates for you to be able to copy and paste in the lecture for this

94
00:07:55,650 --> 00:07:56,670
lesson as well.

95
00:07:56,820 --> 00:07:59,550
Or you can just type it in as you see it right now.

96
00:07:59,580 --> 00:08:00,000
OK.

97
00:08:00,210 --> 00:08:06,330
And then once you've got that pasted in, you can click on this little hourglass button to search for

98
00:08:06,330 --> 00:08:06,540
it.

99
00:08:08,090 --> 00:08:12,800
And after a little while, hopefully you should get this dropdown list.

100
00:08:13,100 --> 00:08:17,780
Now let me show you just briefly how these coordinates are comprised.

101
00:08:18,530 --> 00:08:27,020
There can be up to three parts to these coordinates, and those three parts will be separated by a colon.

102
00:08:27,450 --> 00:08:27,920
OK?

103
00:08:28,280 --> 00:08:36,950
The first part refers usually to the organization that is responsible for creating that library.

104
00:08:37,130 --> 00:08:37,550
OK.

105
00:08:38,150 --> 00:08:46,520
The second component to the coordinate will be the designation for the actual library itself.

106
00:08:46,550 --> 00:08:53,270
So, in other words, some organizations may be responsible for making lots of different libraries that

107
00:08:53,270 --> 00:08:54,680
you may want to use.

108
00:08:55,070 --> 00:08:59,480
And so you'd see the first part would be the same for that organization.

109
00:08:59,690 --> 00:09:05,840
But then within that org, they might make lots of different tools or libraries or something that you

110
00:09:05,840 --> 00:09:06,680
may want to use.

111
00:09:07,070 --> 00:09:13,970
And then the third component, which I did not supply in what I pasted, but the third component would

112
00:09:13,970 --> 00:09:18,500
be the version of the library that you want to use.

113
00:09:18,920 --> 00:09:26,060
So since I did not specify that in this dropdown list, I am being presented with every version that

114
00:09:26,060 --> 00:09:27,950
is available at this time.

115
00:09:28,280 --> 00:09:28,640
All right.

116
00:09:28,770 --> 00:09:35,540
Couple of other things to note are we're seeing some some version numbers, like five point eight point

117
00:09:35,540 --> 00:09:39,470
zero five point seven three five point seven one, et cetera, et cetera.

118
00:09:39,740 --> 00:09:47,720
And some of these have a few words after them as well, like snapshot and one snapshot rc one in general.

119
00:09:47,720 --> 00:09:55,220
Unless you know that you want something for a particular reason, you'll likely one to shy away from

120
00:09:55,220 --> 00:09:57,830
using anything that is labeled snapshot.

121
00:09:57,950 --> 00:10:07,550
That usually implies that there may be some unfinished aspect to that version, or it is currently under

122
00:10:07,550 --> 00:10:08,390
development.

123
00:10:08,660 --> 00:10:15,740
The team behind it is making it freely available for you to utilize, but it is probably still actively

124
00:10:15,740 --> 00:10:19,900
under development right now, and so maybe not totally stable.

125
00:10:19,940 --> 00:10:22,160
So I would generally shy away from that.

126
00:10:22,430 --> 00:10:24,500
I would also shy away from one.

127
00:10:24,620 --> 00:10:27,450
And also, I would shy away from RC one.

128
00:10:27,470 --> 00:10:34,360
Oftentimes that means that's a version that's really, really close to being totally releasable.

129
00:10:34,370 --> 00:10:40,640
It might even be identical, possibly to the final release for that version in this case five seven

130
00:10:40,640 --> 00:10:41,140
zero.

131
00:10:41,150 --> 00:10:44,450
But they're not 100 percent done testing everything out yet.

132
00:10:44,960 --> 00:10:51,710
So, so yes, so you'll probably want to shy away from RC one as well or RC anything?

133
00:10:52,310 --> 00:10:52,760
OK.

134
00:10:53,090 --> 00:11:01,580
So when looking for a version to use, you will probably want to usually go for the highest version

135
00:11:01,580 --> 00:11:08,600
number that looks stable, and that means the highest version number that doesn't have an RC or a snapshot

136
00:11:08,600 --> 00:11:10,220
or IM1 or anything like that.

137
00:11:10,400 --> 00:11:18,590
So as of the time of this recording, which is in June, the highest version that I'm seeing here for

138
00:11:18,620 --> 00:11:22,490
J Unit Jupiter is five point seven point two.

139
00:11:22,700 --> 00:11:25,820
That's the highest stable version that I see here.

140
00:11:26,300 --> 00:11:29,270
And so that's the one that I'm going to go for now.

141
00:11:29,300 --> 00:11:34,730
If at the time when you're watching this, there's some better version or higher version like five point

142
00:11:34,730 --> 00:11:40,520
eight point zero and there is no snapshot behind it is just five eight zero or five nine zero or five

143
00:11:40,550 --> 00:11:42,580
eight point three or whatever.

144
00:11:42,590 --> 00:11:48,350
Don't feel that you have to stick with the five point seven point two that I'm about to choose now.

145
00:11:48,650 --> 00:11:53,990
In all likelihood, we're going to be doing such simple things with G-Unit unit overall that you should

146
00:11:53,990 --> 00:11:54,470
be fine.

147
00:11:54,650 --> 00:12:01,100
Now, the one caveat to that would be that as of this time of the recording, we are on G-Unit unit

148
00:12:01,100 --> 00:12:02,150
version five.

149
00:12:02,540 --> 00:12:08,660
If you're seeing J Unit version six or seven or something like that while you're watching this, you

150
00:12:08,660 --> 00:12:15,320
might want to be a little more careful there because that means that's a major release and there very

151
00:12:15,320 --> 00:12:23,000
well might be backward breaking changes that somehow might not be compatible with some of the things.

152
00:12:23,000 --> 00:12:27,620
I'm going to show you that I think that's fairly unlikely, but it could be.

153
00:12:27,800 --> 00:12:30,710
So, you know, you kind of go at your own risk there.

154
00:12:30,860 --> 00:12:33,500
You could try out the version six or version seven.

155
00:12:33,500 --> 00:12:37,550
And then if you tried things that don't work the way that I'm showing you in the video, then you'll

156
00:12:37,550 --> 00:12:41,990
know, OK, maybe I should back off to something in the version five.

157
00:12:42,320 --> 00:12:47,570
But within version five, if you do version five point seven five point eight five point nine, you're

158
00:12:47,570 --> 00:12:48,980
likely to be just fine there.

159
00:12:49,790 --> 00:12:55,160
All right, so I'm going to click on five, seven two and then I'm going to click OK.

160
00:12:57,810 --> 00:13:06,570
Now, what that just did is that just pulled down from the internet, this library called Janet Jupiter

161
00:13:06,600 --> 00:13:13,980
five seven two, and it's telling me it's going to be added to the calculator module as intelligent

162
00:13:13,980 --> 00:13:16,530
calls it, and I'm going to click OK.

163
00:13:17,550 --> 00:13:23,460
And now I can see the actual files that just got pulled down from the internet.

164
00:13:23,700 --> 00:13:29,580
Now these files are actually initially going to be stored in your home directory.

165
00:13:29,610 --> 00:13:34,920
This isn't something you really need to care about too much, but I'm just making aware you'll see that

166
00:13:34,920 --> 00:13:41,730
these files are being referenced as being in my home directory in a directory called into.

167
00:13:42,150 --> 00:13:42,990
Not a big deal.

168
00:13:43,170 --> 00:13:43,610
All right.

169
00:13:43,620 --> 00:13:45,630
And then I'm going to click OK.

170
00:13:46,440 --> 00:13:46,830
All right.

171
00:13:47,190 --> 00:13:54,210
So now these files just got pulled down and I should be able to click over here on this external libraries.

172
00:13:54,630 --> 00:13:56,580
And there's that library right there.

173
00:13:56,850 --> 00:14:02,760
OK, so that's another way that I can see this now in in the future, I will be teaching you actually

174
00:14:02,760 --> 00:14:09,780
how to use maven and a competitor to MAVEN called Gradle to do similar things here.

175
00:14:09,780 --> 00:14:17,280
But that's when we will allow MAVEN and Gradle to sort of manage the building of our projects for us.

176
00:14:17,280 --> 00:14:24,360
Although intelligence can still remotely control maven and Gradle such that you won't really see any

177
00:14:24,360 --> 00:14:30,000
real difference from what we're doing now other than just those tools will be responsible for managing

178
00:14:30,000 --> 00:14:33,600
the libraries, which are called dependencies, by the way, in general.

179
00:14:33,750 --> 00:14:38,820
So just giving you a little sneak preview of some of the things that we'll be getting into, but again,

180
00:14:38,820 --> 00:14:40,380
we kind of want to take baby steps.

181
00:14:41,310 --> 00:14:45,000
OK, now we'll need to do a couple of other things as well.

182
00:14:45,010 --> 00:14:48,270
So I'm going to close that external libraries there.

183
00:14:48,630 --> 00:14:55,380
Now, up until now, we've mostly just been putting our source code files directly in the source folder.

184
00:14:55,680 --> 00:15:02,610
We're going to need a couple of folders, though, in order to properly handle unit testing and to get

185
00:15:02,610 --> 00:15:08,670
more acquainted with some of the typical Java programming standards that you might see at any company

186
00:15:08,670 --> 00:15:10,170
where Java development is done.

187
00:15:10,560 --> 00:15:17,760
So we're actually going to go back up on this calculator project here and right click again, and we're

188
00:15:17,760 --> 00:15:21,090
going to go back into the open module settings and I apologize.

189
00:15:21,180 --> 00:15:24,270
You can't really see my open module settings anymore.

190
00:15:24,300 --> 00:15:30,720
It has kind of fallen off the visible portion of the screen, but just look for open module settings.

191
00:15:31,080 --> 00:15:39,330
Just as you did before, and you'll want to be on modules now on the left here and down here, where

192
00:15:39,330 --> 00:15:42,060
it says SIRC for source.

193
00:15:42,390 --> 00:15:50,010
If you click on that, then you can right click on it and we want to add a couple of new folders.

194
00:15:50,250 --> 00:15:58,230
So click on New Folder and the first one we're going to create will be called Main Imay in all lowercase

195
00:15:58,230 --> 00:15:59,320
and click OK.

196
00:15:59,640 --> 00:16:01,250
And then we're going to do this again.

197
00:16:01,260 --> 00:16:05,400
Right click on SIRC again and click New Folder again.

198
00:16:05,580 --> 00:16:09,720
And this one will be called Test and then click OK.

199
00:16:10,200 --> 00:16:16,560
So now you should have in here the source folder, which was already there and then under it main and

200
00:16:16,560 --> 00:16:17,220
test.

201
00:16:17,880 --> 00:16:18,270
All right.

202
00:16:18,280 --> 00:16:25,520
So now we need to designate the purpose of these folders within intelligence.

203
00:16:25,540 --> 00:16:30,960
So in other words, we're going to tell intelligence where it should by default find our test files

204
00:16:30,960 --> 00:16:34,200
versus where it should find our main code.

205
00:16:34,830 --> 00:16:35,190
All right.

206
00:16:35,310 --> 00:16:42,810
So if you click on main, then you can click up here to this, this icon labeled sources.

207
00:16:42,990 --> 00:16:44,720
Just click on at one time.

208
00:16:44,730 --> 00:16:51,870
And by doing so, we have now told inteligente that this main folder is one of the folders where our

209
00:16:51,870 --> 00:16:54,120
main source code can be found.

210
00:16:54,360 --> 00:17:03,300
And then if you click on Test down here and then come up here and click on tests with the green icon

211
00:17:03,300 --> 00:17:05,700
there one time, just click on that.

212
00:17:05,970 --> 00:17:13,290
Now we're telling Intel that our source code for our tests that we will be writing, which are also

213
00:17:13,290 --> 00:17:17,320
written in Java, will be living in this folder.

214
00:17:17,360 --> 00:17:23,910
OK, so our main program code that would actually execute and everything would be in main.

215
00:17:24,180 --> 00:17:28,890
But our test code will live in this test folder.

216
00:17:29,220 --> 00:17:37,380
And I'll just say briefly, the reason for this designation here is because typically when you build

217
00:17:37,380 --> 00:17:46,950
your project into a final form, you do not want the tests to be packaged up with the rest of your working

218
00:17:46,950 --> 00:17:47,340
code.

219
00:17:47,640 --> 00:17:52,170
Those are only there for us to just test our code while we're writing it.

220
00:17:52,410 --> 00:17:57,570
But when we package things up and like, let's say, if we were going to build a program and sell it

221
00:17:57,570 --> 00:18:02,580
to the world, the thing that we would sell like, you know, if you're on windows, you're probably

222
00:18:02,580 --> 00:18:06,780
used to running something called ICSI an executable, right?

223
00:18:07,020 --> 00:18:12,840
That's the final form of the program or something now in Java, that's not called ICSI, but there is

224
00:18:12,840 --> 00:18:14,530
something like that in Java.

225
00:18:14,550 --> 00:18:17,040
You would not want to package up your test.

226
00:18:17,440 --> 00:18:23,310
In that final thing that you're delivering or giving to people to run your program with your tests,

227
00:18:23,320 --> 00:18:24,190
stay with you.

228
00:18:24,430 --> 00:18:31,480
And so we need to keep these things separate so that when we package up the final project or the final

229
00:18:31,480 --> 00:18:36,370
executable or whatever it's going to be, the tests don't get packaged with it.

230
00:18:36,790 --> 00:18:41,170
And so that's one of the one of the main reasons why we have this separation here.

231
00:18:41,620 --> 00:18:41,980
All right.

232
00:18:42,010 --> 00:18:44,710
And once you're done with all of that, you can click, OK.

233
00:18:45,870 --> 00:18:52,680
So now, if you come up here and click on this little greater than symbol next to the source folder

234
00:18:53,220 --> 00:18:57,420
to expand that out, now you'll have a main and a test folder.

235
00:18:57,660 --> 00:18:58,140
OK?
