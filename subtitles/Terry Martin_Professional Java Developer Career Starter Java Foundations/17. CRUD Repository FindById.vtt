WEBVTT
1
00:00:00.300 --> 00:00:00.640
All right.

2
00:00:00.660 --> 00:00:01.320
Welcome back.

3
00:00:01.500 --> 00:00:08.280
So in the in the last lesson, we created a generic creed repository and then we re-implemented the

4
00:00:08.280 --> 00:00:13.200
ability to save a person by using our new generic creed repository.

5
00:00:13.410 --> 00:00:19.020
So in this lesson, let's just keep going, and let's hit this next method here in the list, which

6
00:00:19.020 --> 00:00:20.070
is find my ID.

7
00:00:20.580 --> 00:00:24.750
So we're going to just jump right in and do this in the exact same way as before.

8
00:00:24.760 --> 00:00:31.260
So we'll start by just copying this entire find by ID method here, and then we'll jump over to the

9
00:00:31.260 --> 00:00:33.510
crud repository class.

10
00:00:33.840 --> 00:00:37.680
And then I'm just going to kind of come down here, I suppose.

11
00:00:39.010 --> 00:00:41.440
And paste that whole entire method.

12
00:00:41.770 --> 00:00:42.170
All right.

13
00:00:42.190 --> 00:00:46.510
And so now I just want to address the red, that's here.

14
00:00:46.810 --> 00:00:47.070
All right.

15
00:00:47.080 --> 00:00:52.570
So the first red bit is this right here, fine by ID sequel, which of course we do not have.

16
00:00:52.840 --> 00:00:54.680
And how did we take care of this before?

17
00:00:54.700 --> 00:01:00.910
So before we created an abstract method called Get Save sequel, so here I guess we'll extract a method

18
00:01:00.910 --> 00:01:03.610
called find by IED sequel.

19
00:01:03.700 --> 00:01:05.020
Let's try that and see.

20
00:01:05.020 --> 00:01:09.740
OK, so get fined by IED sequel.

21
00:01:09.760 --> 00:01:11.380
How did I case that?

22
00:01:11.500 --> 00:01:12.880
OK, I guess I did it that way.

23
00:01:13.240 --> 00:01:13.660
All right.

24
00:01:14.050 --> 00:01:16.520
And then we'll let the IED create that.

25
00:01:16.570 --> 00:01:23.250
And so now that this class is abstract, it gives us the option of creating an abstract method.

26
00:01:23.260 --> 00:01:24.880
And so let's pick that one.

27
00:01:25.480 --> 00:01:25.900
All right.

28
00:01:26.200 --> 00:01:28.480
And yes, this will return a string.

29
00:01:28.690 --> 00:01:29.530
And there we go.

30
00:01:29.620 --> 00:01:31.210
So that was easy enough.

31
00:01:31.330 --> 00:01:31.600
All right.

32
00:01:31.600 --> 00:01:37.870
The other read that we've got is this reference to the extract person from results set.

33
00:01:38.050 --> 00:01:43.270
And I actually think what we can do here is to simply make this a little more generic.

34
00:01:43.270 --> 00:01:48.640
And instead of calling it extract person from results that will will create a method called extract

35
00:01:48.640 --> 00:01:53.830
entity from results set, and we've already got it on the other class.

36
00:01:54.010 --> 00:01:58.000
So we may be able to just reuse it almost as is.

37
00:01:58.090 --> 00:02:00.840
So let's just do this.

38
00:02:00.850 --> 00:02:08.580
I'm going to make a new method here, abstract, and it's going to return type T, right?

39
00:02:08.590 --> 00:02:12.460
Because here this extract person from result said, is returning a person.

40
00:02:12.640 --> 00:02:17.470
And we know that our person class is something of type T, generally speaking.

41
00:02:17.470 --> 00:02:20.270
So let's see if this method just returns.

42
00:02:20.290 --> 00:02:32.920
Tea extract entity from result set and it will take an input of a result set from Java sequel.

43
00:02:33.250 --> 00:02:40.750
IRS will call it IRS and it's abstract so we won't provide a body will just close that off with a semicolon

44
00:02:40.750 --> 00:02:41.590
like so.

45
00:02:42.160 --> 00:02:48.940
And then I will just copy this method name and replace this right there.

46
00:02:49.030 --> 00:02:49.390
All right.

47
00:02:49.420 --> 00:02:51.590
Let's see now what is it not happy with?

48
00:02:51.880 --> 00:02:52.400
Oh, OK.

49
00:02:52.420 --> 00:02:58.870
And so now it's not happy because our new abstract method is declared as returning something of type

50
00:02:58.870 --> 00:02:59.380
T.

51
00:02:59.380 --> 00:03:04.870
But currently this method is expecting something of actual type person.

52
00:03:05.170 --> 00:03:11.740
So let's change this to t like so and that error went away immediately.

53
00:03:11.920 --> 00:03:15.820
Let's also rename this variable to entity just to make it more generic.

54
00:03:15.820 --> 00:03:20.620
So do a shift F6 and then into is the new name.

55
00:03:21.490 --> 00:03:22.180
All right.

56
00:03:22.630 --> 00:03:25.210
And then we've got squiggly red marks down here.

57
00:03:25.510 --> 00:03:28.270
And let's see what is this not happy with?

58
00:03:28.570 --> 00:03:28.910
OK.

59
00:03:28.930 --> 00:03:36.820
And this isn't happy with our defined return type because this method is currently defined as returning

60
00:03:36.820 --> 00:03:38.260
an optional of a person.

61
00:03:38.260 --> 00:03:41.710
So let's change that to a T also.

62
00:03:41.710 --> 00:03:45.100
And voila, that red squiggly went away.

63
00:03:45.130 --> 00:03:45.610
OK.

64
00:03:46.240 --> 00:03:51.850
So I think that's looking pretty OK so far.

65
00:03:52.300 --> 00:03:57.040
Now let's analyze if we need to templates anything else here.

66
00:03:57.400 --> 00:04:05.320
So here we are, creating our prepared statement, and then we need to bind the ID to a parameter in

67
00:04:05.320 --> 00:04:05.890
the statement.

68
00:04:05.890 --> 00:04:07.750
So here's one thing to consider now.

69
00:04:07.810 --> 00:04:15.220
If we leave this, as is which we could do, then that means that the sequel that we return from this

70
00:04:15.220 --> 00:04:22.180
abstract method here has to make sure that it defines at least one parameter and that the first parameter

71
00:04:22.180 --> 00:04:27.160
that it defines is meant to be bound to this idea.

72
00:04:27.190 --> 00:04:27.670
OK.

73
00:04:28.090 --> 00:04:34.030
So if we want to leave this hardcoded like it is, which I think we could get away with, we just have

74
00:04:34.030 --> 00:04:38.110
to ensure that this sequel implements that expectation.

75
00:04:38.290 --> 00:04:43.600
Now, one thing we may want to consider doing, especially if this crud repository class was meant to

76
00:04:43.600 --> 00:04:47.020
be reused by other people other than just you is.

77
00:04:47.020 --> 00:04:54.160
We might want to put a Java doc on this method to kind of explicitly state that that is the expectation

78
00:04:54.160 --> 00:04:54.300
here.

79
00:04:54.310 --> 00:04:59.440
So what we can do is just do a forward slash star star and then hit enter or return.

80
00:04:59.770 --> 00:05:04.180
And then we can comment this method and state that expectation.

81
00:05:04.540 --> 00:05:15.730
So we could put a comment right here that says what the return type is returns a string that represents

82
00:05:15.730 --> 00:05:21.790
the sequel needed to retrieve one.

83
00:05:25.010 --> 00:05:25.910
Entity.

84
00:05:28.780 --> 00:05:30.070
The entity.

85
00:05:31.440 --> 00:05:42.030
The sequel must contain one sequel parameter, i.e., question mark.

86
00:05:43.750 --> 00:05:49.000
That will bind to the entities.

87
00:05:50.650 --> 00:05:50.950
I'd.

88
00:05:52.650 --> 00:05:53.070
All right.

89
00:05:53.430 --> 00:05:58.290
So now let's jump back over to the person repository, people repository, sorry.

90
00:05:58.770 --> 00:06:03.270
All right, now we've got the red squiggly again because we've got more abstract methods that need to

91
00:06:03.270 --> 00:06:04.350
be implemented.

92
00:06:05.010 --> 00:06:05.340
All right.

93
00:06:05.340 --> 00:06:09.550
So I'm going to put my cursor right here, make a couple of lines to a control.

94
00:06:09.570 --> 00:06:12.780
Oh, and all right.

95
00:06:12.810 --> 00:06:17.790
And so it is now giving us three methods that need to be implemented.

96
00:06:20.200 --> 00:06:22.240
So I'm going to select these two now.

97
00:06:22.330 --> 00:06:28.870
Notice them skipping the save, because that's just saying that we could override that save method if

98
00:06:28.870 --> 00:06:29.980
we wanted to.

99
00:06:30.280 --> 00:06:33.670
So we don't want to override the save method that we are inheriting, right?

100
00:06:33.670 --> 00:06:35.140
That's doing all the work for us.

101
00:06:35.410 --> 00:06:41.440
But we do need to implement these two right here and notice because these have to be overridden.

102
00:06:41.650 --> 00:06:48.130
They are visually a little bit different with these two little side things there from this guy here

103
00:06:48.130 --> 00:06:52.150
who can optionally be overridden but doesn't have to be OK.

104
00:06:52.360 --> 00:06:53.740
So anyway, click OK.

105
00:06:53.890 --> 00:06:54.220
All right.

106
00:06:54.220 --> 00:06:55.690
So now we need to implement this.

107
00:06:55.700 --> 00:07:02.800
So I think the way we will do this is think I'm just going to copy all of this first.

108
00:07:03.770 --> 00:07:08.150
And paste it, where where am I right here and paste it, right?

109
00:07:08.300 --> 00:07:09.650
Oops, right here.

110
00:07:10.520 --> 00:07:13.730
Like so all right now I'm getting errors, and I think I know why.

111
00:07:13.730 --> 00:07:20.870
It's because I erroneously declared I defined this inherited abstract method without specifying that

112
00:07:20.870 --> 00:07:23.570
it needed to throw the sequel exception.

113
00:07:23.840 --> 00:07:29.990
So let me jump back over to the credit repository and find the abstract version of this guy.

114
00:07:30.410 --> 00:07:37.610
Yeah, and let's just declare that throws a sequel exception should have had that there.

115
00:07:38.060 --> 00:07:38.450
OK?

116
00:07:38.690 --> 00:07:44.690
And now jump back into the people repository and do the same thing here as well.

117
00:07:45.140 --> 00:07:47.360
Throws a sequel exception.

118
00:07:47.570 --> 00:07:49.130
And now that's all happy.

119
00:07:49.760 --> 00:07:57.680
And then what I think we can do now is get rid of this version here.

120
00:07:59.640 --> 00:08:02.640
Some to just get rid of it.

121
00:08:03.180 --> 00:08:07.680
And now, as soon as I do that, I get a red error right here, though.

122
00:08:07.920 --> 00:08:08.820
And that's OK.

123
00:08:09.390 --> 00:08:11.480
I will simply rename this.

124
00:08:11.480 --> 00:08:16.800
So now we'll just call the new one, which is really the original one with a new name entity.

125
00:08:17.610 --> 00:08:17.900
Yup.

126
00:08:18.330 --> 00:08:20.920
And then we've got another error right here.

127
00:08:20.940 --> 00:08:25.860
Same thing, although this one's about to go bye bye anyway, because this is defined by the method

128
00:08:25.860 --> 00:08:29.820
that we are re implementing in a more generic way entity.

129
00:08:29.820 --> 00:08:31.860
But I'll make it happy for now.

130
00:08:32.760 --> 00:08:33.510
OK.

131
00:08:33.870 --> 00:08:37.950
I think that's all that we needed there.

132
00:08:38.070 --> 00:08:42.240
And now let's implement this fine by Get Fined by ID sequel.

133
00:08:42.240 --> 00:08:49.650
So instead of returning a null, this should return the find by IDs sequel.

134
00:08:49.680 --> 00:08:49.980
Right?

135
00:08:50.310 --> 00:08:57.870
And now I think we may be ready to just comment this original fine by ID method out.

136
00:08:58.710 --> 00:09:00.060
That might be all we need.

137
00:09:00.300 --> 00:09:05.700
So again, let's jump over to the test and just run the mall and see what happens.

138
00:09:06.930 --> 00:09:07.560
Look at that.

139
00:09:07.770 --> 00:09:08.910
They all work.

140
00:09:09.060 --> 00:09:11.730
So I think we are good.

141
00:09:11.760 --> 00:09:13.770
According to the tests, at least we are.

142
00:09:14.490 --> 00:09:20.160
So with that being said, I'm now going to delete that fine by ID method.

143
00:09:20.460 --> 00:09:23.370
And now we're just using the inherited one instead.

144
00:09:23.730 --> 00:09:24.060
All right.

145
00:09:24.060 --> 00:09:27.840
So another credit method defined by ID crossed off our list.

146
00:09:28.080 --> 00:09:31.920
So in the next lesson, we'll go to the next one, which is find all.

147
00:09:32.100 --> 00:09:32.790
See you there.
