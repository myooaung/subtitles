1
00:00:00,180 --> 00:00:00,630
All right.

2
00:00:00,660 --> 00:00:07,890
Next up, we're going to learn about two methods that are kind of similar to each other and easily confused.

3
00:00:08,070 --> 00:00:12,210
One is called is empty and the other is is blank.

4
00:00:12,420 --> 00:00:15,540
So let's go back to the A.D. and take a look at these two.

5
00:00:15,780 --> 00:00:22,050
And just as we've done before, we're going to first just clear out what we had before.

6
00:00:25,510 --> 00:00:25,960
All right.

7
00:00:26,470 --> 00:00:29,200
And I don't know, I'll create another string here.

8
00:00:29,740 --> 00:00:31,240
My text.

9
00:00:33,370 --> 00:00:35,380
And so here.

10
00:00:36,650 --> 00:00:40,790
We'll start off with what is commonly referred to as an empty string.

11
00:00:41,450 --> 00:00:45,350
So that's two quotes with no space in between.

12
00:00:45,860 --> 00:00:48,300
And then on the next line, I'll do another you.

13
00:00:49,670 --> 00:00:52,130
And we will reference that variable.

14
00:00:52,520 --> 00:00:56,750
And then we will make use of one of our new methods that we're going to learn.

15
00:00:57,050 --> 00:01:01,430
So the first one will try out as the is empty method.

16
00:01:01,850 --> 00:01:04,220
So let's see what we get here.

17
00:01:05,180 --> 00:01:12,290
Now, this method will return what is called a Boolean, which again, a Boolean is a data type that

18
00:01:12,290 --> 00:01:16,010
conveys true or false yes or no on or off.

19
00:01:16,340 --> 00:01:19,130
OK, so let's run this.

20
00:01:22,100 --> 00:01:23,570
And we get true.

21
00:01:23,960 --> 00:01:24,350
OK.

22
00:01:24,560 --> 00:01:31,670
So is empty simply tells us if the length of the string is zero.

23
00:01:32,240 --> 00:01:37,820
And in this case, this string has no characters, so its length is indeed zero.

24
00:01:39,000 --> 00:01:39,390
All right.

25
00:01:39,480 --> 00:01:41,220
So let's try the.

26
00:01:42,300 --> 00:01:49,050
Well, let's try a few things here, so let's see what we get if we put one space in there and we'll

27
00:01:49,050 --> 00:01:49,860
run it again.

28
00:01:51,760 --> 00:01:53,840
OK, so now we get a false.

29
00:01:54,380 --> 00:02:05,710
So string cannot be empty if it has one or more characters and interestingly, a space is actually a

30
00:02:05,710 --> 00:02:06,910
character, OK?

31
00:02:06,940 --> 00:02:13,750
And the reason for that is because I was talking in one of the previous lessons about Unicode and the

32
00:02:13,750 --> 00:02:20,800
way that every character that can be conveyed on the screen has a code associated with it.

33
00:02:21,040 --> 00:02:26,590
Well, even a space character has a code associated with it.

34
00:02:26,800 --> 00:02:34,600
And so even though it shows up as a as a blank space, it is still a character and therefore the string

35
00:02:34,600 --> 00:02:35,710
is not empty.

36
00:02:36,950 --> 00:02:45,620
All right, so now let's try our other method, which is is blank and notice the way that I'm going

37
00:02:45,620 --> 00:02:50,150
to change this method here is I'm just going to double click there and then I'll just start.

38
00:02:50,150 --> 00:02:51,560
Typing is blank.

39
00:02:51,800 --> 00:02:55,100
And then I can just hit enter and it fills in the rest for me.

40
00:02:55,430 --> 00:02:55,750
All right.

41
00:02:55,760 --> 00:02:56,690
So now we'll see.

42
00:02:56,720 --> 00:03:02,360
Does Java think or does the string think that this space here is blank?

43
00:03:02,960 --> 00:03:04,700
So I will run this again.

44
00:03:05,940 --> 00:03:08,070
Yes, it does think it's blank.

45
00:03:08,340 --> 00:03:16,290
So the definition of whether or not a string is blank is that it determines whether or not there is

46
00:03:16,290 --> 00:03:18,480
any what's called white space.

47
00:03:18,690 --> 00:03:24,030
If there's any white space meaning no visible characters that we can see, then it is.

48
00:03:24,150 --> 00:03:26,190
The string is considered to be blank.

49
00:03:26,460 --> 00:03:29,970
A space character is is white space, as they call it.

50
00:03:30,120 --> 00:03:32,150
And therefore, yes, it is blank.

51
00:03:33,500 --> 00:03:36,380
Let's let's see what happens if we have no space.

52
00:03:37,130 --> 00:03:43,340
Yes, so no space in a string is also considered to be a blank string.

53
00:03:43,700 --> 00:03:47,690
And then let's put one letter in there and try that.

54
00:03:49,620 --> 00:03:54,990
All right, so, yeah, so if you've got a letter in there or something that you can kind of see rather

55
00:03:54,990 --> 00:03:58,080
than white space, then it is no longer considered blank.

56
00:03:58,230 --> 00:04:03,670
So let me just talk to you a little bit about why you would ever want to use any methods like these.

57
00:04:03,690 --> 00:04:10,920
So a couple of examples would be again, where you're writing a program that accepts user input like

58
00:04:10,920 --> 00:04:17,040
you might prompt the user to enter their name and you want to make sure that they actually entered something

59
00:04:17,040 --> 00:04:20,130
before you proceed with processing whatever they entered.

60
00:04:20,310 --> 00:04:25,380
So let's say, for example, that you ask them to enter their name and then you want to have some code

61
00:04:25,380 --> 00:04:28,830
that is going to capitalize the first letter of their name.

62
00:04:28,980 --> 00:04:34,530
However, you wouldn't want to do that if they didn't actually enter anything.

63
00:04:34,530 --> 00:04:43,380
And in fact, you would get an error in the code if you'd proceeded to try to capitalize nothingness,

64
00:04:43,380 --> 00:04:44,160
essentially.

65
00:04:44,310 --> 00:04:49,800
And so you might want to have a little bit of code that safeguards to make sure that before you do further

66
00:04:49,800 --> 00:04:55,800
processing on whatever words they entered that they did actually enter something so you might want to

67
00:04:55,800 --> 00:04:56,400
use.

68
00:04:56,550 --> 00:04:59,490
Typically the is blank method.

69
00:04:59,610 --> 00:05:05,940
I would probably prefer to use the is blank method rather than the is empty method, because is blank

70
00:05:05,940 --> 00:05:10,560
will be true if it's empty or just has a lot of whitespace.

71
00:05:10,710 --> 00:05:16,560
Whereas the is empty method is only true if they literally typed nothing.

72
00:05:16,560 --> 00:05:21,990
But if they hit space of a bunch of times and then hit enter, you wouldn't want that input either.

73
00:05:22,470 --> 00:05:27,900
But the is empty method would not tell you that distinction in the way that you want to know it.

74
00:05:28,200 --> 00:05:36,240
So in most cases, you may prefer to simply use the is blank method, and that's going to do it for

75
00:05:36,240 --> 00:05:36,940
this lesson.

76
00:05:36,960 --> 00:05:37,920
See, in the next one.
