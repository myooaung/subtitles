1
00:00:00,420 --> 00:00:06,450
All right, so in the last lesson, we learned how to incorporate spring JPA into our project spring

2
00:00:06,450 --> 00:00:13,120
data JPA and to create a repository and load our test or sample data.

3
00:00:13,140 --> 00:00:18,090
Our sample people records into that database using an application runner.

4
00:00:18,540 --> 00:00:20,970
And so we've got that data here now.

5
00:00:21,300 --> 00:00:26,370
So now I think it's time for us to do another part of the crud operation.

6
00:00:26,380 --> 00:00:32,340
So this data that we're showing here now, which is actually coming from the database, represents one

7
00:00:32,340 --> 00:00:38,130
variation of the read part of the crud create, read, update and delete functionality.

8
00:00:38,340 --> 00:00:45,480
But now let's go ahead and add the ability to actually create a person programmatically from the browser.

9
00:00:45,510 --> 00:00:45,930
OK.

10
00:00:46,140 --> 00:00:51,600
And so that would allow us to enter the information or the details about a person and then have that

11
00:00:51,600 --> 00:00:57,580
person added to the database and then refresh the page to show the newly added person.

12
00:00:57,600 --> 00:00:57,960
OK.

13
00:00:58,260 --> 00:01:04,830
So the first thing we're going to do is add a form to this same page so that we can actually enter the

14
00:01:04,830 --> 00:01:06,270
the details of a person.

15
00:01:06,690 --> 00:01:15,300
And one way that I would probably start off with similarly to how we started off with this table is

16
00:01:15,300 --> 00:01:21,450
I would head back over to bootstrap and find a good starting template for a form.

17
00:01:21,630 --> 00:01:22,860
So let's do that now.

18
00:01:23,820 --> 00:01:29,580
So let's see here, I will switch over to the bigger version of this that I had and go to the bootstrap

19
00:01:29,580 --> 00:01:34,830
documentation and right here we've got forms, OK, so I'm going to click on forms and then go to the

20
00:01:34,830 --> 00:01:37,950
overview here and I will scroll through a little bit.

21
00:01:37,950 --> 00:01:44,850
And basically, I'm just looking for some example form that looks like it might be a good starting point.

22
00:01:44,850 --> 00:01:48,420
And actually, I think this one here would probably be OK.

23
00:01:49,080 --> 00:01:54,120
I can scroll a little bit more really quickly and see if there's anything else that jumps out at me.

24
00:01:54,120 --> 00:01:55,890
And no, there isn't really.

25
00:01:57,030 --> 00:01:57,570
Let's see.

26
00:01:57,570 --> 00:02:00,440
Yeah, I'm just going to go for this one right here.

27
00:02:00,450 --> 00:02:07,770
So what I can do is just copy that and then I will jump back over to the ADC and.

28
00:02:10,060 --> 00:02:13,270
Go back into our template file here.

29
00:02:14,650 --> 00:02:23,020
All right, so now I need to make my oh, and I'm sorry, I just realized I'm I'm not in presentation

30
00:02:23,020 --> 00:02:27,160
mode, so again, let me switch into presentation mode real quick here.

31
00:02:28,060 --> 00:02:28,600
There we go.

32
00:02:28,600 --> 00:02:30,940
Nice and big for you to be able to see now.

33
00:02:30,970 --> 00:02:38,470
OK, so this div here is enclosing this table, so I don't want anything inside of there.

34
00:02:38,590 --> 00:02:46,270
So I think what I'm going to do is put this new form right underneath the div for that table.

35
00:02:46,330 --> 00:02:47,350
OK, does that make sense?

36
00:02:47,440 --> 00:02:48,300
Here's that table.

37
00:02:48,310 --> 00:02:53,860
Here's the end of the table, and then here's the div that we were using to enclose that table.

38
00:02:54,370 --> 00:03:00,970
So then I'm going to go ahead and just paste this sample form right here for now.

39
00:03:01,210 --> 00:03:03,640
And let me.

40
00:03:04,670 --> 00:03:11,600
Let me open back up the smaller, yeah, this guy here and then switch back over to the ADC also.

41
00:03:11,630 --> 00:03:12,020
All right.

42
00:03:12,320 --> 00:03:13,550
So now we've got all of that.

43
00:03:13,640 --> 00:03:21,290
So now let me just refresh or restart the application and see this this sample form show up, hopefully.

44
00:03:23,140 --> 00:03:28,840
OK, there it is, and so we've got that same issue now that the form itself by default wants to take

45
00:03:28,840 --> 00:03:30,070
up all of the space.

46
00:03:30,250 --> 00:03:34,390
Now I could probably address this in a couple of ways, and let's just experiment a little bit here.

47
00:03:34,420 --> 00:03:35,800
So one thing I could do?

48
00:03:36,070 --> 00:03:44,710
Maybe let's see what this form looks like if we actually put it inside of that same div.

49
00:03:44,740 --> 00:03:52,690
OK, so right under the table, I will just paste that form there, and then let's restart and see.

50
00:03:53,380 --> 00:03:53,740
OK.

51
00:03:53,770 --> 00:03:57,070
So yeah, maybe that's that's definitely better.

52
00:03:57,130 --> 00:03:57,970
That's for sure.

53
00:03:58,150 --> 00:03:58,570
OK.

54
00:03:58,960 --> 00:03:59,350
OK.

55
00:03:59,530 --> 00:04:03,370
And maybe I'm also going to give just a little more room.

56
00:04:05,630 --> 00:04:07,490
Just a little bit more room.

57
00:04:08,450 --> 00:04:12,120
To be able to see what's going on here, it's not much more, but a little bit.

58
00:04:12,140 --> 00:04:17,930
OK, so now what I think we're going to want to do, though, is to modify this table, obviously to

59
00:04:17,930 --> 00:04:23,330
have all of the fields that we need, right, like firstname, lastname, etc. And you know what?

60
00:04:23,480 --> 00:04:25,100
I knew I was forgetting a field.

61
00:04:25,130 --> 00:04:26,330
It was the email field.

62
00:04:26,330 --> 00:04:29,600
That's the field that I was forgetting in our domain model.

63
00:04:29,750 --> 00:04:34,190
So let's go ahead and add an email filled while I'm thinking about it real quick.

64
00:04:34,190 --> 00:04:42,490
So I'm going to jump over to the person class and I'm going to add email.

65
00:04:43,190 --> 00:04:46,910
It doesn't really matter where I put it, but and that'll be a string.

66
00:04:47,240 --> 00:04:54,470
OK, so we're going to add an email filled here now that's going to have some repercussions for our

67
00:04:54,470 --> 00:04:55,480
data loading right.

68
00:04:55,490 --> 00:04:58,220
So we've got that person data load or people data loader.

69
00:04:58,220 --> 00:04:59,470
I can't remember what I called it.

70
00:04:59,480 --> 00:05:01,970
Let's see data loader person data loader.

71
00:05:02,090 --> 00:05:10,100
So now this is broken because we're using the all args constructor, which now will expect us to specify

72
00:05:10,100 --> 00:05:11,990
an email address also.

73
00:05:12,320 --> 00:05:17,090
And let me see here if I put my cursor here and do a command p to show all the parameters.

74
00:05:17,090 --> 00:05:19,940
So I need to put that email right before the decimals here.

75
00:05:19,940 --> 00:05:21,380
So the big decimals.

76
00:05:21,740 --> 00:05:26,510
So for now, maybe I'll just use the same email address for everybody.

77
00:05:28,130 --> 00:05:33,980
Since this is really just kind of dummy data, anyway, some using a multi-person selection here to

78
00:05:33,980 --> 00:05:36,290
put multiple curses all at the same time.

79
00:05:36,560 --> 00:05:44,270
And then I'm going to do a string comma and then I'm going to go back, scroll over a little bit and

80
00:05:44,270 --> 00:05:44,660
I don't know.

81
00:05:44,660 --> 00:05:52,730
I'll just put dummy at sample dot com for now and then hit escape to get out of that mode.

82
00:05:52,930 --> 00:05:53,200
All right.

83
00:05:53,210 --> 00:05:56,540
So now everybody has an email address again.

84
00:05:56,780 --> 00:06:06,530
And then let's go back over to the people that age HTML file, and let's add the email column or field

85
00:06:06,530 --> 00:06:07,460
to the table.

86
00:06:07,610 --> 00:06:09,980
So I just duplicated Line 17.

87
00:06:10,160 --> 00:06:14,030
And then I'm going to add another header here called email.

88
00:06:14,210 --> 00:06:24,200
And then down here I will duplicate line 27 and I will extract the email field are the yeah, the email

89
00:06:24,200 --> 00:06:28,250
data from the person and display that as well.

90
00:06:28,520 --> 00:06:30,860
And I think that should be all we need there.

91
00:06:30,870 --> 00:06:35,570
So now let's restart and see that new email filled show up.

92
00:06:37,180 --> 00:06:37,960
There we go.

93
00:06:38,050 --> 00:06:38,690
Very good.

94
00:06:38,710 --> 00:06:41,860
So we got our email filled now.

95
00:06:42,130 --> 00:06:42,910
OK, cool.

96
00:06:43,330 --> 00:06:44,230
So now.

97
00:06:45,230 --> 00:06:55,670
Let's go down to the new form that we are beginning to customize, and I suppose we can let this one

98
00:06:55,670 --> 00:07:01,460
email Phil just remain just as it is, except that we'll probably move it in order, move it down a

99
00:07:01,460 --> 00:07:01,880
bit.

100
00:07:02,270 --> 00:07:03,500
But let's see here.

101
00:07:03,510 --> 00:07:10,640
So now the way we want to do this is that you've got a label and then you've got the actual input element

102
00:07:10,640 --> 00:07:10,850
here.

103
00:07:10,860 --> 00:07:17,210
OK, so that so this label element here corresponds to this label right here.

104
00:07:17,450 --> 00:07:24,620
And then the input widget or field, you'll hear the term widget or control or field or text box or

105
00:07:24,620 --> 00:07:28,980
whatever that corresponds to this blue box here.

106
00:07:29,000 --> 00:07:32,180
OK, so that's that's the input field.

107
00:07:32,480 --> 00:07:39,380
And then this particular field also has a little note added to it, and that is inside of this div here.

108
00:07:40,320 --> 00:07:45,870
With this text right there, OK, so that's kind of an optional thing that you could choose to have.

109
00:07:46,260 --> 00:07:50,490
OK, so I'm just kind of giving you the layout of how the form kind of works, OK?

110
00:07:50,490 --> 00:07:56,940
And then all three of these things the label, the control, the label, the text field and the little

111
00:07:56,940 --> 00:08:00,870
commentaire are all grouped together inside of they did.

112
00:08:01,110 --> 00:08:04,740
And much the same way that I put my table inside of the div.

113
00:08:04,950 --> 00:08:11,800
These three elements are put inside of a div, and part of that a margin can be defined on them.

114
00:08:11,820 --> 00:08:19,860
OK, so first thing I think we want to do is acknowledge that this label is meant to be the label for

115
00:08:19,890 --> 00:08:26,160
this input field and that is actually coded in HTML with this attribute called for.

116
00:08:26,370 --> 00:08:35,490
So this value here will actually correspond to the idea of this input field so you can have IDs associated

117
00:08:35,490 --> 00:08:39,810
with elements in HTML and you can name them pretty much whatever you want.

118
00:08:39,990 --> 00:08:40,440
OK.

119
00:08:40,590 --> 00:08:45,690
And so here they chose to name this field example input email one.

120
00:08:45,960 --> 00:08:51,810
And so up here they're saying here's a label for the example input, email one field.

121
00:08:51,870 --> 00:08:52,290
OK.

122
00:08:52,410 --> 00:08:57,660
And that just helps the HTML to know that this label corresponds to this input here, but we can name

123
00:08:57,660 --> 00:08:58,560
them whatever we want.

124
00:08:58,800 --> 00:09:05,030
So I'm going to rename this variable here on both the label for attribute and then the ID here.

125
00:09:05,040 --> 00:09:10,050
So I'm going to double clicked on that and then I'm going to hold down on option shift and I'm going

126
00:09:10,050 --> 00:09:13,620
to select this one too, so that I can change them both at the same time.

127
00:09:13,740 --> 00:09:21,510
And I'm just going to call this email like so and then I think I will go ahead and just copy this whole

128
00:09:21,510 --> 00:09:23,340
entire div with everything in it.

129
00:09:23,670 --> 00:09:29,700
I'm going to copy that and then I'm going to make the new line and then I'm going to just paste a few

130
00:09:29,700 --> 00:09:32,970
copies of this for each of our fields that we want.

131
00:09:33,210 --> 00:09:34,980
So there's one.

132
00:09:36,990 --> 00:09:41,520
Two, I don't know how many I need, but I'll do three four right now.

133
00:09:42,270 --> 00:09:46,860
And so this first one can be the first name, I suppose.

134
00:09:47,010 --> 00:09:50,120
So I'm going to again double click and select the email field.

135
00:09:50,160 --> 00:09:52,950
This email value here for the four attribute.

136
00:09:52,950 --> 00:09:58,830
And then this one here was an option shift or alt shift, I think, for Windows and Linux, and I will

137
00:09:58,830 --> 00:10:02,070
name this field first name like so.

138
00:10:03,880 --> 00:10:10,870
And now I can also define the type of data that goes into this input field, and currently it is specifically

139
00:10:10,870 --> 00:10:12,700
set to be an email filled.

140
00:10:12,940 --> 00:10:21,400
And what that means is that if I don't enter a valid email address, the browser itself can try to validate

141
00:10:21,400 --> 00:10:22,540
that form a little bit.

142
00:10:22,540 --> 00:10:28,300
And it can even try to warn me that that's not a proper email filled, since this isn't meant to be

143
00:10:28,300 --> 00:10:31,330
an email filled, though I'm going to get rid of that and I'm going to replace it.

144
00:10:31,360 --> 00:10:37,510
Now, the idea can actually give me recommendations here, so if I erase that email and into a control

145
00:10:37,510 --> 00:10:41,270
space, it will tell me what are the various options that I have?

146
00:10:41,270 --> 00:10:48,430
That's according to the standards of HTML, and the option that I'm going to one is simply text text.

147
00:10:49,060 --> 00:10:49,300
All right.

148
00:10:49,300 --> 00:10:53,560
So I want that to be a basic text field, and then I can change this bit over here.

149
00:10:53,590 --> 00:10:57,040
Now this has to do with helping people with disabilities.

150
00:10:57,550 --> 00:10:57,880
All right.

151
00:10:57,890 --> 00:11:04,300
So for now, I'm just going to rename that to first name help.

152
00:11:04,540 --> 00:11:04,960
OK.

153
00:11:06,130 --> 00:11:10,660
And then I don't want this little blurb here, so I'm just going to delete that line.

154
00:11:10,930 --> 00:11:11,320
OK?

155
00:11:11,620 --> 00:11:12,370
And in fact, you know what?

156
00:11:12,370 --> 00:11:18,320
It probably should have just maybe use this as my template for the next few fields.

157
00:11:18,320 --> 00:11:26,680
So I'm going to select those next to delete those and then come back over here and then paste that.

158
00:11:26,690 --> 00:11:28,690
And so now this will be last name.

159
00:11:28,690 --> 00:11:32,890
So I'm going to select both of these say last name.

160
00:11:35,840 --> 00:11:40,520
And change this to last last name help.

161
00:11:42,050 --> 00:11:47,030
I'm not too worried about this value here, because that's going to get replaced shortly.

162
00:11:47,300 --> 00:11:50,530
Let's see what else do I have first name, last name, date of birth.

163
00:11:50,540 --> 00:11:54,410
OK, so first name, last name, then date of birth.

164
00:11:54,590 --> 00:11:59,690
So again, I will select all of that and then replace it with my other version of this.

165
00:11:59,690 --> 00:12:04,250
My copy of the first name filled and this one will be date of birth.

166
00:12:04,250 --> 00:12:08,480
So again, I'll select that and that and change this to just Dobby.

167
00:12:08,780 --> 00:12:11,420
Then I will change this to D.O..

168
00:12:11,420 --> 00:12:14,050
Be help bob help.

169
00:12:14,860 --> 00:12:21,020
Like so now this, I can change the input type from text.

170
00:12:21,320 --> 00:12:22,790
Let's see what the other options are here.

171
00:12:22,790 --> 00:12:23,720
Control space.

172
00:12:23,930 --> 00:12:26,930
So I've got a date option right there.

173
00:12:27,050 --> 00:12:28,970
I also have a date time local.

174
00:12:29,270 --> 00:12:30,830
That would be date and time.

175
00:12:31,010 --> 00:12:36,140
We're not capturing time, though, in our domain model, so I probably wouldn't want that.

176
00:12:36,410 --> 00:12:37,580
And let's see.

177
00:12:37,580 --> 00:12:38,350
I think those are.

178
00:12:38,360 --> 00:12:41,960
And then there's a time only I definitely would not want that.

179
00:12:42,110 --> 00:12:46,010
So I think I'm going to just choose the date option here.

180
00:12:46,040 --> 00:12:46,480
All right.

181
00:12:46,490 --> 00:12:47,900
So let's see date.

182
00:12:48,860 --> 00:12:49,280
Oops.

183
00:12:49,280 --> 00:12:57,230
And I guess I actually accidentally overrode the original email field, so let me jump back over.

184
00:12:58,370 --> 00:13:04,370
Let me jump back over here, and I'm just going to grab that example again of just the email filled.

185
00:13:08,340 --> 00:13:11,580
Because that is the next field that I actually do want.

186
00:13:12,420 --> 00:13:15,030
All right, so I will paste that right here.

187
00:13:16,460 --> 00:13:22,260
Except I do still want it to be called a little bit differently email.

188
00:13:22,550 --> 00:13:22,980
OK.

189
00:13:23,480 --> 00:13:29,350
And then let me jump back over here and then salaries should be the last one.

190
00:13:29,360 --> 00:13:38,030
So then I will select this and this salary, and I guess I will change that, though to some example.

191
00:13:38,450 --> 00:13:42,740
And now I don't want this to be a password input type.

192
00:13:43,790 --> 00:13:45,740
Let's see what my options are again.

193
00:13:46,010 --> 00:13:49,060
Let's see, do we have a currency or something like that?

194
00:13:49,070 --> 00:13:51,050
I don't see currency.

195
00:13:53,110 --> 00:13:57,490
So just no is as close as I'm probably going to be able to get for right now.

196
00:13:57,910 --> 00:13:58,260
Let's see.

197
00:13:58,270 --> 00:14:04,000
And then they've also got a check box, so we don't need that checkbox, so I'm going to get rid of

198
00:14:04,000 --> 00:14:04,690
that.

199
00:14:06,770 --> 00:14:13,630
And then the button here is currently called Submit, and maybe we will just call this, I don't know,

200
00:14:13,640 --> 00:14:19,160
add person or save person, I don't know, save person, perhaps.

201
00:14:21,000 --> 00:14:23,520
And let's see how that's looking, so I'm going to restart.

202
00:14:27,000 --> 00:14:30,130
OK, so there we are.

203
00:14:30,150 --> 00:14:36,540
Yes, so we've got several fields that that little money thing there is looking weird, isn't it?

204
00:14:36,570 --> 00:14:38,310
Let's see where was that?

205
00:14:39,030 --> 00:14:43,680
Oh, sorry, I wasn't thinking that I should just say salary.

206
00:14:44,820 --> 00:14:45,360
There we go.

207
00:14:45,660 --> 00:14:48,630
Oh, and then I need to change the labels of all of these too.

208
00:14:48,660 --> 00:14:50,130
OK, so that's what that was for.

209
00:14:50,160 --> 00:14:51,750
Sorry, I wasn't looking at that correctly.

210
00:14:51,750 --> 00:14:56,100
So this should say first name.

211
00:14:56,850 --> 00:14:58,920
Maybe I want that to be capital in.

212
00:15:00,200 --> 00:15:03,590
And then this should be last name.

213
00:15:08,530 --> 00:15:09,640
Date of birth.

214
00:15:09,850 --> 00:15:16,150
I don't think I'm going to spell it out in this email address and then salary.

215
00:15:16,210 --> 00:15:17,800
Okay, let's refresh.

216
00:15:21,020 --> 00:15:28,010
There we go, first name, last name, date of birth, email address and salary, and then save person.

217
00:15:28,040 --> 00:15:29,150
OK, very good.

218
00:15:30,730 --> 00:15:32,590
All right, we're getting somewhere now.

219
00:15:32,800 --> 00:15:40,270
OK, so that's just what it takes to just kind of create the basic scaffolding of the form.

220
00:15:40,450 --> 00:15:48,040
But now we need a way to make it so that when someone fills out these fields and then clicks this button,

221
00:15:48,430 --> 00:15:50,230
something useful actually happens.

222
00:15:50,230 --> 00:15:55,810
And obviously, we want to collect all this data and get it into the back end, which is our Java code,

223
00:15:55,810 --> 00:16:02,710
so that we can process it into an actual instance of a person and then save that person into the database,

224
00:16:02,710 --> 00:16:02,970
right?

225
00:16:02,980 --> 00:16:05,830
That's the ultimate goal that we're striving for.

226
00:16:06,010 --> 00:16:07,090
So how do we do that?

227
00:16:07,480 --> 00:16:15,310
Well, we'll use a combination of additional time leaf attributes embedded throughout this form, plus

228
00:16:15,310 --> 00:16:18,820
a little bit of extra code on the back end in our controller.

229
00:16:18,850 --> 00:16:19,250
OK.

230
00:16:19,510 --> 00:16:22,990
So we can start off with those attributes here.

231
00:16:23,200 --> 00:16:29,770
So maybe one of the first things we can do starting from the top of this form is we can specify a model

232
00:16:29,800 --> 00:16:36,730
object of an object that will live in the model that should be connected to the fields that we have

233
00:16:36,730 --> 00:16:37,130
here.

234
00:16:37,150 --> 00:16:45,340
OK, so if you imagine that we took of an object of type person and we put that object into our model

235
00:16:45,340 --> 00:16:48,730
from the model view controller pattern, we put that into the model.

236
00:16:49,120 --> 00:16:52,660
And let's imagine that this would be an empty person.

237
00:16:52,660 --> 00:16:54,820
So none of its fields would be filled in.

238
00:16:54,850 --> 00:16:55,900
OK, it wouldn't be null.

239
00:16:56,020 --> 00:16:57,490
It would be an actual instance.

240
00:16:57,490 --> 00:17:02,320
But the first name, last name, all of those fields, the fields of this person instance would not

241
00:17:02,320 --> 00:17:04,990
be populated with anything most likely.

242
00:17:05,440 --> 00:17:05,860
OK.

243
00:17:06,040 --> 00:17:14,350
And then what would happen is that we can have time leave populate the values of this form with whatever

244
00:17:14,470 --> 00:17:18,290
fields are in that person instance, for one thing.

245
00:17:18,310 --> 00:17:25,630
And then when we submit this form back to the back end, all of those fields will be populated into

246
00:17:25,660 --> 00:17:27,130
an instance of a person.

247
00:17:27,250 --> 00:17:29,860
So if that doesn't make sense, hopefully it will in just a moment.

248
00:17:29,860 --> 00:17:36,040
OK, so the first thing we're going to do, though, is to connect this form to the fields of a person

249
00:17:36,040 --> 00:17:37,770
class instance, OK?

250
00:17:37,960 --> 00:17:44,050
And so the way we can do that is using a Time-Life attribute to call an object.

251
00:17:44,200 --> 00:17:44,650
OK.

252
00:17:44,680 --> 00:17:49,300
So we're going to connect this to an object and then we can give it a name.

253
00:17:49,310 --> 00:17:53,590
So this would just be the name of an object that exists in the model.

254
00:17:53,620 --> 00:18:00,760
OK, so I think a good, sensible name would be person like, so all right, now we'll want to actually

255
00:18:00,760 --> 00:18:08,920
connect each of these fields to a property of this person instance, OK?

256
00:18:09,070 --> 00:18:15,610
And the way we can do that is with another timely attribute, which is to call in field.

257
00:18:18,980 --> 00:18:22,970
And what we can do is use a little shorthand.

258
00:18:25,280 --> 00:18:26,150
Like this?

259
00:18:27,290 --> 00:18:31,970
Now, let me explain what this means, although it's probably mostly obvious, but let me explain what

260
00:18:31,970 --> 00:18:33,860
this asterisks means here.

261
00:18:34,460 --> 00:18:45,170
This asterisk means that we want to bind this input filled to the first name field of this person object

262
00:18:45,170 --> 00:18:45,530
up here.

263
00:18:45,530 --> 00:18:51,290
So this star here, this asterisk basically means the person object up here.

264
00:18:51,830 --> 00:18:57,920
Alternatively, another way you could think of it is that this is kind of like a shorthand for saying

265
00:18:57,920 --> 00:19:02,040
an alternative, which would be person dot first name, OK?

266
00:19:02,240 --> 00:19:05,750
So this person got stuff here.

267
00:19:05,870 --> 00:19:14,150
We can drop that and just use an asterisk here, OK, to specify that we are binding to the first name

268
00:19:14,150 --> 00:19:17,570
field or the first name property of this person object.

269
00:19:17,780 --> 00:19:24,350
Really, we're saying bind to the first name field of whatever object we're dealing with up here, OK?

270
00:19:24,380 --> 00:19:26,420
That's what this asterisk means.

271
00:19:27,020 --> 00:19:27,440
All right.

272
00:19:27,620 --> 00:19:31,040
And then we can go ahead and just do the same thing for the other fields now.

273
00:19:31,730 --> 00:19:34,580
Field equals star.

274
00:19:36,240 --> 00:19:37,560
Last name.

275
00:19:41,210 --> 00:19:41,780
T. H.

276
00:19:42,210 --> 00:19:43,910
Field equals.

277
00:19:46,180 --> 00:19:47,020
Star.

278
00:19:48,880 --> 00:19:49,630
Dobby.

279
00:19:51,250 --> 00:19:51,880
T. H.

280
00:19:52,190 --> 00:19:53,590
Field equals.

281
00:19:55,680 --> 00:19:57,840
And I just realized I use the dollar sign.

282
00:19:58,050 --> 00:20:03,330
That's also a standard that's another way of specifying things, but that won't work in this particular

283
00:20:03,330 --> 00:20:03,870
case.

284
00:20:04,290 --> 00:20:06,390
So I probably had a little force of habit there.

285
00:20:08,010 --> 00:20:08,330
All right.

286
00:20:08,340 --> 00:20:13,380
And this is going to be email and then we need one for the salary.

287
00:20:13,570 --> 00:20:20,880
Also, T-H field equals star email books.

288
00:20:22,640 --> 00:20:24,350
Salary, sorry, sorry.

289
00:20:24,710 --> 00:20:30,890
Okay, so we've got all of those now let's see what happens if I just restart everything.

290
00:20:34,550 --> 00:20:38,640
OK, so the program blows up and the reason.

291
00:20:38,660 --> 00:20:41,470
Well, let's actually go look at it and we'll see what it says here.

292
00:20:41,480 --> 00:20:45,170
So what we're seeing here is a stack trace that's actually showing up in the browser.

293
00:20:45,170 --> 00:20:48,890
And by the way, stack traces in browsers are usually a really bad thing.

294
00:20:49,370 --> 00:20:56,210
You really want to hide errors like this from showing up in the browser itself, because sometimes you

295
00:20:56,210 --> 00:20:56,550
could.

296
00:20:56,570 --> 00:20:59,210
Well, first off, it's scary looking to your users.

297
00:20:59,390 --> 00:21:03,110
They don't know what that is, and it's just looks really, really scary and bad.

298
00:21:03,320 --> 00:21:09,050
But also sometimes depending on the type of application you're creating, you might have information

299
00:21:09,050 --> 00:21:12,140
in that stack trace that you don't want customers to see.

300
00:21:12,140 --> 00:21:17,780
There could be passwords and security related kinds of things that are accidentally showing up in the

301
00:21:17,780 --> 00:21:18,650
stack trace.

302
00:21:18,890 --> 00:21:21,950
So you really don't want stack traces to be able to be seen.

303
00:21:22,340 --> 00:21:27,140
We may take a look in this section at how to hide that, though I don't promise you that.

304
00:21:27,260 --> 00:21:31,570
Like I said, this is meant to be an introduction to spring, not the whole entire spring course.

305
00:21:31,580 --> 00:21:31,900
OK?

306
00:21:32,300 --> 00:21:34,760
But anyway, let's take a look at this stack.

307
00:21:34,760 --> 00:21:37,010
Trace real quick and see what it is saying.

308
00:21:37,280 --> 00:21:37,730
Let's see.

309
00:21:37,760 --> 00:21:41,090
So it's mentioning something about the people there.

310
00:21:41,390 --> 00:21:48,440
It's mentioning the template at Line 48, which is right here, line 48, column 68.

311
00:21:48,590 --> 00:21:54,740
And if I put my cursor over here, let's see now because I'm in presentation mode, I'm not easily able

312
00:21:54,740 --> 00:21:58,370
to see what column I'm on, but I kind of already know what the issue is anyway.

313
00:21:58,820 --> 00:22:01,940
And let's see if I scroll a little bit more.

314
00:22:03,090 --> 00:22:03,640
There we go.

315
00:22:03,660 --> 00:22:09,840
Let's see neither binding result nor plane target object for being named person available as request

316
00:22:09,840 --> 00:22:10,260
attribute.

317
00:22:10,290 --> 00:22:18,000
OK, so what it's basically complaining about is that we are referring to a been called person, an

318
00:22:18,000 --> 00:22:22,590
instance called person, but it's basically saying there isn't one.

319
00:22:22,800 --> 00:22:25,680
And that makes sense because we haven't actually created one yet.

320
00:22:25,770 --> 00:22:27,660
OK, so now let's go create one.

321
00:22:27,840 --> 00:22:30,330
And to do that, we need to jump into the controller.

322
00:22:30,330 --> 00:22:33,120
OK, the person controller class.

323
00:22:33,660 --> 00:22:34,180
All right.

324
00:22:34,200 --> 00:22:37,080
So this is actually going to be pretty easy to do.

325
00:22:37,260 --> 00:22:44,700
So now that you know how to put data into the model using a dedicated method that has a model attribute

326
00:22:44,700 --> 00:22:51,120
annotation, you will now know how to do the next thing we're about to do, which is to simply create

327
00:22:51,120 --> 00:22:55,740
another method that will return an instance of a person, though.

328
00:22:56,490 --> 00:23:01,920
And for now, we'll just call this get person and might rename that a little more meaningfully and a

329
00:23:01,920 --> 00:23:02,250
bit.

330
00:23:02,670 --> 00:23:06,480
And then we will return a new instance of a person.

331
00:23:09,070 --> 00:23:16,060
But this will be using the no argh default constructor, which means that will create a new person,

332
00:23:16,060 --> 00:23:20,180
but it'll be, but it will end up being a blank instance of a person.

333
00:23:20,200 --> 00:23:20,650
OK.

334
00:23:20,890 --> 00:23:22,600
That's pretty much what we're doing there.

335
00:23:22,750 --> 00:23:23,140
All right.

336
00:23:23,320 --> 00:23:29,170
And then we're going to annotate this also with model attribute.

337
00:23:29,350 --> 00:23:33,280
Now one thing that we're going to do a little differently from up here, though, is I'm not even going

338
00:23:33,280 --> 00:23:40,690
to specify a name or a key for this instance, because I don't absolutely have to in this case.

339
00:23:40,690 --> 00:23:48,400
So what will happen is if I don't specify a name for this object that is about to be stored in the model

340
00:23:48,940 --> 00:23:49,660
spring.

341
00:23:49,900 --> 00:23:50,200
Oops.

342
00:23:50,200 --> 00:23:53,050
And I have a I have a typo there, don't I, person?

343
00:23:53,080 --> 00:23:53,440
OK?

344
00:23:53,860 --> 00:24:00,970
Spring will take the returned data type of person, and it will use that name as the name for the model.

345
00:24:01,000 --> 00:24:06,400
OK, so then that should match up nicely with what we're already specifying here.

346
00:24:06,400 --> 00:24:07,370
Which is person?

347
00:24:07,390 --> 00:24:09,280
OK, so let's let's see if that works.

348
00:24:10,750 --> 00:24:11,800
So I'm restarting.

349
00:24:13,440 --> 00:24:14,700
Hey, there we go.

350
00:24:17,090 --> 00:24:21,470
And now let me show you a little trick here, also now we don't need to do this, but I just want to

351
00:24:21,800 --> 00:24:25,910
solidify your understanding of what that model object is doing for us.

352
00:24:25,940 --> 00:24:33,470
OK, so if I jump back into the controller again, I could do something like this just for a kind of

353
00:24:33,470 --> 00:24:34,010
example.

354
00:24:34,040 --> 00:24:37,100
I'm going to select that and extract the variable out of it.

355
00:24:37,370 --> 00:24:38,840
Sure, we'll call it person.

356
00:24:38,930 --> 00:24:41,900
And now I'm going to set maybe like one or two fields on it.

357
00:24:42,890 --> 00:24:46,280
Person said first name to.

358
00:24:47,960 --> 00:24:48,890
Jokester.

359
00:24:49,490 --> 00:24:49,850
OK.

360
00:24:50,150 --> 00:24:51,480
And that's all I'm going to do.

361
00:24:51,710 --> 00:24:54,440
Now, can you guess what's going to happen when I restart?

362
00:24:54,990 --> 00:24:56,030
I'm going to restart.

363
00:24:57,010 --> 00:24:57,580
Look at that.

364
00:24:57,790 --> 00:25:03,400
The name jokester automatically shows up in this form, so does that help you to understand the relationship

365
00:25:03,400 --> 00:25:05,440
between the model and its attributes?

366
00:25:05,440 --> 00:25:11,110
By the way, each entry that we put into the model, if you think of the model again as as a as a map,

367
00:25:12,070 --> 00:25:14,400
then you'll have key value pairs.

368
00:25:14,410 --> 00:25:21,730
OK, so this would be an entry into a map into the model map whose key is people and the value would

369
00:25:21,730 --> 00:25:25,750
be an adorable of persons or a collection of people, essentially.

370
00:25:25,960 --> 00:25:34,060
Here's another entry in the model map whose key would be person all lowercase and whose value would

371
00:25:34,060 --> 00:25:37,790
be one instance of a person with a first name set the jokester.

372
00:25:37,810 --> 00:25:40,240
OK, so that's what this is doing.

373
00:25:40,480 --> 00:25:42,160
Someone to put that back now.

374
00:25:43,830 --> 00:25:45,420
OK, there we go.

375
00:25:46,050 --> 00:25:46,300
All right.

376
00:25:46,320 --> 00:25:49,500
So now that we've got all of that much going.

377
00:25:50,220 --> 00:25:53,250
Let's see what happens if we fill something out.

378
00:25:54,810 --> 00:26:09,780
Test Jackson Bourne one one, 2000, with an email address of Te Jack at tester dot com and a salary

379
00:26:09,780 --> 00:26:12,930
of $1000.

380
00:26:13,620 --> 00:26:16,050
All right, so let's see what happens if I hit save.

381
00:26:19,530 --> 00:26:20,070
Nothing.

382
00:26:20,370 --> 00:26:21,330
Nothing happened.

383
00:26:21,930 --> 00:26:23,100
So why is that?

384
00:26:24,150 --> 00:26:30,330
Well, I want to show you what happens now when we press the save button, so I'm actually going to

385
00:26:30,330 --> 00:26:37,830
make this browser window bigger, then I'm going to open up the dev tools with a weather option command

386
00:26:37,830 --> 00:26:40,200
I or I forgot what it was on windows.

387
00:26:40,290 --> 00:26:42,100
I think it's a control shift.

388
00:26:42,120 --> 00:26:43,530
I on windows, I think.

389
00:26:44,710 --> 00:26:45,160
All right.

390
00:26:45,490 --> 00:26:48,250
So I'm going to.

391
00:26:49,720 --> 00:26:51,160
Click this button again.

392
00:26:52,640 --> 00:26:53,150
All right.

393
00:26:53,420 --> 00:26:59,300
And so now we get to see what's actually happening here, so it's in this little, it's in this first

394
00:26:59,300 --> 00:27:00,500
line here, OK?

395
00:27:01,040 --> 00:27:07,340
And now I can see what's in this request that is being sent from the browser to the back end.

396
00:27:07,370 --> 00:27:07,730
OK.

397
00:27:08,240 --> 00:27:13,310
So if I click on payload, I can actually see what's what's being sent back.

398
00:27:13,760 --> 00:27:16,940
OK, now I'm seeing this in a couple of different ways right now.

399
00:27:16,940 --> 00:27:24,200
I'm seeing this in a kind of a nicer way, but you can see here references to each of those fields.

400
00:27:24,320 --> 00:27:24,710
Right?

401
00:27:25,220 --> 00:27:27,300
But there's no data in them.

402
00:27:28,160 --> 00:27:35,420
And I can also click on this source view that might be kind of hard to see, but this is kind of more

403
00:27:35,420 --> 00:27:40,340
like the actual way that this data is being sent to the back end.

404
00:27:40,370 --> 00:27:40,850
OK.

405
00:27:41,000 --> 00:27:46,550
In this kind of like concatenated set of key value pairs, essentially, and in this case, there are

406
00:27:46,550 --> 00:27:50,450
no values there now, if I were to put something in here like Jake.

407
00:27:52,630 --> 00:27:57,010
And then save, so now I can click on this.

408
00:27:57,430 --> 00:27:59,570
And now you see that there's a Jake there.

409
00:27:59,590 --> 00:28:06,400
And if I click on the raw source view, you can see that there's first name equals Jake Ampersand.

410
00:28:06,400 --> 00:28:10,800
Last name equals nothing, ampersand dob equals nothing, etc., etc. OK.

411
00:28:10,810 --> 00:28:14,350
So that's what's being sent to the back end.

412
00:28:14,470 --> 00:28:18,480
And one other thing I want you to note is the request method.

413
00:28:18,490 --> 00:28:20,320
OK, that is the operation right?

414
00:28:20,740 --> 00:28:22,420
Get or post or whatever.

415
00:28:22,780 --> 00:28:27,780
In this case, it's actually using get, and that isn't necessarily what I want.

416
00:28:27,790 --> 00:28:30,550
In fact, it's not what I want in this case, OK?

417
00:28:30,820 --> 00:28:37,360
So what we really want in this particular case is to use a different request method for sending this

418
00:28:37,360 --> 00:28:39,040
data back to the back end.

419
00:28:39,040 --> 00:28:47,800
And that would be a post post is the most traditional way of sending form data from the browser to the

420
00:28:47,800 --> 00:28:48,430
back end.

421
00:28:48,430 --> 00:28:49,450
Not a get.

422
00:28:49,600 --> 00:28:52,000
We can do it with a get, however.

423
00:28:53,080 --> 00:28:55,690
The problem that we are currently encountering.

424
00:28:57,480 --> 00:28:58,860
If I jump back over here.

425
00:29:00,070 --> 00:29:05,920
The problem we are currently encountering is that we already have a method forget, and it's this method

426
00:29:05,920 --> 00:29:10,610
here which doesn't do anything other than just show the the people view.

427
00:29:10,630 --> 00:29:19,840
OK, so we can create another method to handle posts and we can do that by simply coming over here and

428
00:29:19,840 --> 00:29:21,160
creating another method.

429
00:29:22,030 --> 00:29:28,450
And I will return a string and we will call this, I don't know, save person.

430
00:29:28,450 --> 00:29:31,720
Perhaps then for now, I will just do the same thing.

431
00:29:31,870 --> 00:29:39,100
Return people, but I will map this to a post using the post mapping annotation.

432
00:29:39,460 --> 00:29:46,690
So now this method should be the one that handles any time someone tries to submit data back to the

433
00:29:46,900 --> 00:29:47,770
to the back end.

434
00:29:47,780 --> 00:29:48,150
OK?

435
00:29:48,430 --> 00:29:53,680
Now, obviously, though, there's really no difference at the moment between the get mapping handler

436
00:29:53,680 --> 00:29:58,090
and the post mapping handler yet, but there's about to be in just a moment here.

437
00:29:58,480 --> 00:30:05,890
So what we can do is we want to get back these fields, OK, and we want to get them back in a way that

438
00:30:05,890 --> 00:30:08,830
we can use them to save an instance of a person.

439
00:30:09,040 --> 00:30:15,430
Well, just as we created this model attribute method that can populate the fields of the person form

440
00:30:15,670 --> 00:30:19,000
using this object, here we can go the other way also.

441
00:30:19,300 --> 00:30:28,720
So down here, I can actually just put an instance of a person in this method like so and before we

442
00:30:28,720 --> 00:30:35,470
get too fancy, we can just confirm that this is going to actually do something by just doing a little

443
00:30:35,470 --> 00:30:39,990
bit of a, you know, print out whatever gets passed into there, essentially.

444
00:30:40,000 --> 00:30:44,740
OK, so let's restart and let's see if this will work.

445
00:30:45,160 --> 00:30:46,060
And let's see.

446
00:30:46,060 --> 00:30:50,180
I'm also going to open up the console now.

447
00:30:50,440 --> 00:30:57,580
Now, sometimes I do get this little thing where I restart and I get this red error stuff, and I find

448
00:30:57,580 --> 00:31:03,910
that whenever I do get this, I often need to just kind of really restart the the server kind of a little

449
00:31:03,910 --> 00:31:04,780
more harshly.

450
00:31:04,960 --> 00:31:08,470
And I will usually just do that by clicking on this restart button right here.

451
00:31:08,710 --> 00:31:10,060
So I'm going to do that now.

452
00:31:11,310 --> 00:31:12,390
OK, there we go.

453
00:31:13,740 --> 00:31:23,130
All right, so then going back over here, let me close the dev tools and I'm going to make this smaller

454
00:31:23,130 --> 00:31:26,880
again because I want to see what's actually happening here.

455
00:31:27,300 --> 00:31:28,890
Oh now, OK?

456
00:31:28,900 --> 00:31:34,860
And then there's one more thing that I have to do, which is to actually tell the form to submit via

457
00:31:34,980 --> 00:31:36,690
post instead of a get.

458
00:31:36,720 --> 00:31:42,030
OK, so we will open up the people in HTML and go back to our form.

459
00:31:42,030 --> 00:31:44,910
And now what we can do is on this form element.

460
00:31:44,910 --> 00:31:50,130
Here we can specify a method and you see here we have get and post.

461
00:31:50,340 --> 00:31:55,260
And so now I will select post and then I will restart.

462
00:31:56,820 --> 00:31:57,360
All right.

463
00:31:59,740 --> 00:32:02,920
And just to be safe, I will also.

464
00:32:05,820 --> 00:32:13,730
Going to erase all of that and then just reload this page just to make sure everything got loaded properly,

465
00:32:13,740 --> 00:32:18,330
I just want to make absolutely certain since I restarted the server a little more harshly than usual.

466
00:32:18,360 --> 00:32:21,150
OK, so now let me fill this out.

467
00:32:21,540 --> 00:32:27,950
Sarah Smith born one one, 2000.

468
00:32:29,060 --> 00:32:35,700
Smith at person dot com with a salary of $10000.

469
00:32:35,850 --> 00:32:39,990
OK, let's hit, save and see if we get anything here.

470
00:32:42,510 --> 00:32:45,750
OK, so looks like we got an error.

471
00:32:49,050 --> 00:32:58,530
Filled error in object person on field, Dobbie rejected two thousand one one because there was a type

472
00:32:58,530 --> 00:33:02,100
mismatch going into the local date.

473
00:33:08,730 --> 00:33:16,860
Failed to convert property value of type string to required local date for property DOB.

474
00:33:16,890 --> 00:33:26,400
OK, so what's happening here is that our browser tried to send back a date in the format of let's see

475
00:33:26,400 --> 00:33:27,480
where was it at?

476
00:33:29,370 --> 00:33:38,070
Right here in this format, Ford four digit year and then two digit four digit year hyphen month month

477
00:33:38,070 --> 00:33:39,510
hyphen day day, OK?

478
00:33:39,540 --> 00:33:41,370
It tried to send it back in that format.

479
00:33:43,040 --> 00:33:49,820
And Spring was able to see that it should attempt to take those fields that we had named FirstName LastName

480
00:33:49,820 --> 00:33:56,120
all of that and populate those values to the corresponding fields of the person class.

481
00:33:56,150 --> 00:33:58,380
And it looks like it figured all of that out just fine.

482
00:33:58,400 --> 00:34:03,440
However, the data that's coming from the browser is all text based, right?

483
00:34:03,620 --> 00:34:09,710
And so remember when we were showing the date of birth and the salary and we wanted to format those

484
00:34:09,710 --> 00:34:10,520
for the table?

485
00:34:10,730 --> 00:34:15,170
So we wanted to go from a specific data type like a local date to a string.

486
00:34:15,290 --> 00:34:21,920
Well, now this is going in the opposite direction, from a string to a data type to a more specific

487
00:34:21,920 --> 00:34:22,580
data type.

488
00:34:22,760 --> 00:34:29,780
However, when it got to the date of birth, Spring didn't know how to take a date that was in that

489
00:34:29,780 --> 00:34:34,490
particular format and make it work for and convert that to a local date.

490
00:34:34,640 --> 00:34:37,430
So can you think of what the solution would be for this?

491
00:34:39,040 --> 00:34:45,250
Well, if you're thinking that we just need to go back over here to our four matters, then you would

492
00:34:45,250 --> 00:34:46,180
be correct.

493
00:34:46,480 --> 00:34:53,170
So we will open up web formatter and local date formatter here.

494
00:34:54,200 --> 00:34:56,450
And let me make a little room.

495
00:34:58,500 --> 00:35:03,070
So this print method is what's currently being used to display the dates.

496
00:35:03,090 --> 00:35:07,230
However, we want them to be displayed in the browser in the table.

497
00:35:07,620 --> 00:35:12,000
But this past method here is what is used to go the other direction.

498
00:35:12,150 --> 00:35:18,750
And so the problem that we have here is that the text representation of the dates from the form is not

499
00:35:18,750 --> 00:35:21,600
in the format that we have specified for this date format.

500
00:35:21,900 --> 00:35:26,430
So we can no longer use this same date format or for both of these methods.

501
00:35:26,490 --> 00:35:33,750
OK, so the easiest thing to do right now will be to just use a different date format or for this past

502
00:35:33,750 --> 00:35:34,170
method.

503
00:35:34,200 --> 00:35:34,560
OK.

504
00:35:34,980 --> 00:35:39,690
And let's see here actually what we can probably do.

505
00:35:39,700 --> 00:35:42,300
They date time formatter.

506
00:35:44,320 --> 00:35:49,090
If we jump into the documentation for this class.

507
00:35:51,920 --> 00:35:58,910
I think there's already a ready made version of that particular incoming format for digit year, hyphen

508
00:35:58,910 --> 00:36:02,480
month and then day, and that is called ISO local date.

509
00:36:02,780 --> 00:36:07,880
So the it happens to have already populated exactly that for us.

510
00:36:08,090 --> 00:36:12,200
So I think if we just restart now, that part will work.

511
00:36:13,070 --> 00:36:15,200
So I'm going to restart.

512
00:36:16,570 --> 00:36:16,940
All right.

513
00:36:16,960 --> 00:36:18,970
So it didn't blow up.

514
00:36:20,690 --> 00:36:22,880
Oh, look at that, there's our person.

515
00:36:23,480 --> 00:36:28,820
All right, so that's the output of the system that out person line that I put in there.

516
00:36:28,820 --> 00:36:35,330
So we've got an idea of null, which is proper because we didn't bind a field to the ID, nor should

517
00:36:35,330 --> 00:36:37,370
we because we don't want that populated.

518
00:36:37,490 --> 00:36:41,780
The database will populate that when we save the instances of the person.

519
00:36:42,290 --> 00:36:47,720
And then we got the first name, last name, date of birth is coming through properly now.

520
00:36:49,280 --> 00:36:55,670
And the email address and salary, so all of those fields are looking good now.

521
00:36:56,060 --> 00:37:00,380
So now all we need to do is jump back over to the controller.

522
00:37:02,110 --> 00:37:09,100
And in addition to printing that out, which is just optional, we can now save this person and we can

523
00:37:09,100 --> 00:37:13,300
do that with the person repository dot save.

524
00:37:14,660 --> 00:37:20,750
Person like so and that should get that person added back into the database.

525
00:37:21,230 --> 00:37:21,470
All right.

526
00:37:21,470 --> 00:37:24,540
So let's go ahead and run this and let's see if this is enough.

527
00:37:24,590 --> 00:37:25,010
OK.

528
00:37:25,250 --> 00:37:27,830
We're really, really close, but let's just see if this is enough.

529
00:37:28,640 --> 00:37:30,440
So I'm going to start.

530
00:37:32,470 --> 00:37:36,350
So now notice that that data did not get cleared out.

531
00:37:36,430 --> 00:37:42,130
OK, so just keep that in mind, except for the date of birth field, and I don't know if I'm going

532
00:37:42,130 --> 00:37:47,140
to explain real deeply right now why that is, but it has to do with the way that the browser is rendering

533
00:37:47,140 --> 00:37:47,740
this date.

534
00:37:47,740 --> 00:37:51,850
Fill the browser kind of putting several things together to make this date field work.

535
00:37:52,180 --> 00:37:57,880
So let's let's populate that again, and I'll use a different date 2000 to.

536
00:38:00,120 --> 00:38:02,580
OK, and I'll use a different salary also.

537
00:38:02,940 --> 00:38:03,510
All right.

538
00:38:04,550 --> 00:38:06,020
Let's save that.

539
00:38:07,070 --> 00:38:09,020
OK, so let's see what we're seeing here.

540
00:38:09,170 --> 00:38:14,390
So we did get the previous Sarah Smith, I don't remember if that was already there before, but the

541
00:38:14,390 --> 00:38:18,560
current Sarah Smith that we just created is not there.

542
00:38:18,800 --> 00:38:19,830
Why is that?

543
00:38:20,030 --> 00:38:20,270
Right?

544
00:38:20,270 --> 00:38:22,070
And here's the data up here, right?

545
00:38:22,250 --> 00:38:22,490
Yeah.

546
00:38:22,490 --> 00:38:25,370
So the previous one is is showing up, but not the second one.

547
00:38:25,580 --> 00:38:32,360
Well, this has to do with the way that we are capturing this information, saving it to the database

548
00:38:32,360 --> 00:38:34,520
and then returning back to the View.

549
00:38:34,880 --> 00:38:35,360
OK.

550
00:38:35,600 --> 00:38:42,920
Basically, what's happening is when we return to this view, in this way, we're not getting a fresh

551
00:38:43,220 --> 00:38:43,880
view.

552
00:38:44,360 --> 00:38:45,500
Sorry to use that word.

553
00:38:45,950 --> 00:38:49,730
We're not getting a fresh view of these model objects here.

554
00:38:49,760 --> 00:38:50,240
OK?

555
00:38:50,510 --> 00:38:51,890
That's pretty much what's happening.

556
00:38:51,890 --> 00:38:54,230
We're not getting a fresh view of these model objects.

557
00:38:54,440 --> 00:39:01,640
We can easily fix that, though, if we use a very common pattern when it comes to posting data to a

558
00:39:01,640 --> 00:39:04,550
back end and then wanting to refresh the page.

559
00:39:04,970 --> 00:39:08,600
And that pattern involves us doing something called a redirect.

560
00:39:08,660 --> 00:39:15,170
OK, so to do a redirect, we can simply put the word redirect colon and then the name of the view that

561
00:39:15,170 --> 00:39:16,640
we want to redirect to.

562
00:39:16,940 --> 00:39:23,660
Now what this is going to do is it's going to save the person and then it's going to cause our application

563
00:39:23,660 --> 00:39:31,610
to respond back to the browser, not directly with a HTML that it should read display in the page,

564
00:39:31,850 --> 00:39:37,190
but instead with a command to redirect back to the forward slash.

565
00:39:37,190 --> 00:39:38,450
People use URL.

566
00:39:38,630 --> 00:39:44,690
And so that's basically giving the browser and our application an opportunity to just kind of clear

567
00:39:44,690 --> 00:39:49,370
everything out and repopulate the model with fresh data.

568
00:39:49,400 --> 00:39:49,700
OK.

569
00:39:49,730 --> 00:39:51,060
And that's basically what we want.

570
00:39:51,080 --> 00:39:52,460
We want fresh data.

571
00:39:52,550 --> 00:39:57,680
And this is one of the easiest ways to do this, and it's it's a very common pattern, in fact, when

572
00:39:57,680 --> 00:39:59,120
you're saving data in this way.

573
00:39:59,150 --> 00:40:01,700
OK, so let's let's restart again.

574
00:40:02,670 --> 00:40:03,090
All right.

575
00:40:03,660 --> 00:40:07,530
And so now let's just put a brand new person in here.

576
00:40:10,500 --> 00:40:13,230
So I don't know, let's do person one.

577
00:40:14,310 --> 00:40:18,090
Williams with a date of three Oops!

578
00:40:18,780 --> 00:40:31,620
Three, 2003 P. Will at People.com and a salary of $3000, and then I will just hit return and let's

579
00:40:31,620 --> 00:40:32,330
see.

580
00:40:32,340 --> 00:40:33,510
There he is, person.

581
00:40:33,510 --> 00:40:36,300
One Williams There's all the information.

582
00:40:36,300 --> 00:40:37,740
$3000.

583
00:40:37,980 --> 00:40:40,290
So you see that now everything is updating.

584
00:40:40,300 --> 00:40:47,730
And also these fields of the form got cleared out now, OK, because with that redirect happening,

585
00:40:47,730 --> 00:40:52,800
we're just kind of clearing everything out and getting a fresh opportunity to recovery the database

586
00:40:52,800 --> 00:40:55,530
for all of the latest data that's in the database.

587
00:40:55,680 --> 00:40:57,160
And do all of those kinds of things.

588
00:40:57,190 --> 00:41:00,270
OK, so let's add one more person in here.

589
00:41:00,900 --> 00:41:01,750
Let's see.

590
00:41:02,490 --> 00:41:21,540
Jerry Maguire born and for four 1964 and an email address of J in C D at movie's dot com with a salary

591
00:41:21,540 --> 00:41:24,570
of one million dollars.

592
00:41:26,270 --> 00:41:26,960
Return.

593
00:41:28,680 --> 00:41:29,760
Let's see.

594
00:41:29,810 --> 00:41:31,590
Yeah, there's Jerry Maguire.

595
00:41:31,800 --> 00:41:33,800
April 4th, 1964.

596
00:41:34,020 --> 00:41:35,070
A million bucks.

597
00:41:35,200 --> 00:41:38,730
OK, so that is working the way that we want it to.

598
00:41:39,120 --> 00:41:39,360
All right.

599
00:41:39,370 --> 00:41:43,490
So there are a few things that I want to clean up here, and I think we'll do that in the next lesson,

600
00:41:43,500 --> 00:41:48,960
though, like now that we've got the ability to create people easily right here.

601
00:41:49,170 --> 00:41:52,270
Maybe we don't need that up test data anymore.

602
00:41:52,290 --> 00:41:58,410
Maybe we can allow the farm to the table to start off empty and then it will just use the data that

603
00:41:58,410 --> 00:41:58,890
we can add.

604
00:41:58,980 --> 00:42:03,090
We didn't have a way to get any data into the application really easily before.

605
00:42:03,090 --> 00:42:05,640
And so that's why we were using the application runner.

606
00:42:05,760 --> 00:42:09,450
But now that we do have this, we don't maybe need this anymore.

607
00:42:09,600 --> 00:42:13,770
And then we'll also address a few things like error validation and stuff like that.

608
00:42:13,770 --> 00:42:14,070
OK?

609
00:42:14,250 --> 00:42:15,890
So that's what we'll do in the next lesson.

610
00:42:15,900 --> 00:42:16,650
I'll see you there.
