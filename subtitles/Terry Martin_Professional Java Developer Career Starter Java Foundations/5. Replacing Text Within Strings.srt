1
00:00:00,570 --> 00:00:00,930
All right.

2
00:00:00,960 --> 00:00:07,980
Next up on our world wind tour, we're going to learn how to replace parts of text in a string.

3
00:00:08,760 --> 00:00:15,390
So going back to the ABC, I've cleared out the last bit of code that we had and we're still in the

4
00:00:15,390 --> 00:00:17,580
same learning strings class.

5
00:00:17,970 --> 00:00:24,270
And let's see, we'll make a new line is as usual and we'll create a variable.

6
00:00:26,080 --> 00:00:27,940
To hold some text.

7
00:00:33,820 --> 00:00:34,330
All right.

8
00:00:34,810 --> 00:00:38,480
And as usual, you feel free to make the text whatever you want it to be.

9
00:00:38,500 --> 00:00:39,880
It really doesn't matter.

10
00:00:40,630 --> 00:00:41,110
All right.

11
00:00:41,200 --> 00:00:49,360
So now we're going to learn how we can replace any parts of the text with anything else.

12
00:00:49,810 --> 00:00:54,900
So where this might come in handy would be there are a lot of ways that this could come in.

13
00:00:54,910 --> 00:00:59,500
Basically, this is kind of equivalent to a search and replace, but you're doing it programmatically,

14
00:00:59,800 --> 00:01:05,620
so you might accept input typed input from a user like your prompt them to enter something.

15
00:01:05,890 --> 00:01:12,910
And well, here, let's say that you're allowing users to enter text at a prompt and you want to make

16
00:01:12,910 --> 00:01:15,730
sure that they didn't enter any bad words.

17
00:01:15,850 --> 00:01:20,830
OK, now we're not going to use any real bad words here, but let's say that you want to filter out

18
00:01:20,830 --> 00:01:23,580
any time that they say the word first.

19
00:01:24,190 --> 00:01:26,370
I'm just making up a word here, right?

20
00:01:26,380 --> 00:01:29,430
So I'll put that in first.

21
00:01:30,460 --> 00:01:31,510
That's my made up.

22
00:01:31,510 --> 00:01:32,260
Bad word.

23
00:01:32,710 --> 00:01:33,080
OK.

24
00:01:33,100 --> 00:01:39,310
So any time the word first is in the text, you want to filter that out.

25
00:01:40,090 --> 00:01:40,510
All right.

26
00:01:40,750 --> 00:01:42,730
Let's see so what we can do first.

27
00:01:42,760 --> 00:01:46,890
We'll just print out the my text as it is using our trustees.

28
00:01:46,930 --> 00:01:49,700
So you t. my text.

29
00:01:49,720 --> 00:01:50,170
OK.

30
00:01:50,440 --> 00:01:52,860
So that would print out the whole regular sentence.

31
00:01:52,870 --> 00:01:58,540
However, we can call a method on the string variable so I can put a period here.

32
00:01:59,230 --> 00:02:07,450
OK, so there's a method for replacing text, and it is surprise, surprise called replace.

33
00:02:07,900 --> 00:02:13,600
There are a couple versions of it, one that just can replace one character and then another one that

34
00:02:13,600 --> 00:02:15,550
can replace basically a string.

35
00:02:15,760 --> 00:02:21,190
If you look at this signature here, you'll see that the inputs for the second one take something called

36
00:02:21,190 --> 00:02:24,280
a character sequence or care sequence.

37
00:02:24,490 --> 00:02:30,250
I'm not going to go into the details of what that is, but you can think of it as a string and it will

38
00:02:30,250 --> 00:02:31,120
accept a string.

39
00:02:31,780 --> 00:02:38,110
So the way this works is you tell it what you're looking for as the first parameter and then you tell

40
00:02:38,110 --> 00:02:42,220
it what you want to replace with as the second parameter.

41
00:02:42,520 --> 00:02:42,940
All right.

42
00:02:42,950 --> 00:02:49,510
So if I select replace here and I can tell it to look for the word first.

43
00:02:52,480 --> 00:02:55,690
And replace it with something else.

44
00:02:56,710 --> 00:02:57,400
Nice.

45
00:02:58,150 --> 00:03:04,750
OK, so any place where we see the word Firth should now be replaced by the word nice.

46
00:03:05,170 --> 00:03:07,570
So let's run this and see what we get.

47
00:03:10,460 --> 00:03:11,300
And there you go.

48
00:03:11,720 --> 00:03:14,480
Here's my awesome, nice text.

49
00:03:15,470 --> 00:03:19,610
And just to prove, by the way, I should have done this before, but just to prove that that really

50
00:03:19,610 --> 00:03:24,410
is doing a replacement, I'll just remove the replace and run it now.

51
00:03:24,410 --> 00:03:28,760
And I mean, I'm sure you'll you can all see that that's going to.

52
00:03:29,030 --> 00:03:29,630
Yeah, there we go.

53
00:03:29,660 --> 00:03:30,950
There's the word for there.

54
00:03:30,990 --> 00:03:34,370
OK, so I'll put the the replacement back.

55
00:03:34,550 --> 00:03:39,110
Now, let's see what would happen if we had that word in a few places first.

56
00:03:39,530 --> 00:03:41,780
So now I've got it in two places here.

57
00:03:41,810 --> 00:03:43,880
Let's run that and see what we get.

58
00:03:44,840 --> 00:03:45,770
OK, so great.

59
00:03:45,770 --> 00:03:51,500
So any place where our target word is found, we get a replacement there.

60
00:03:52,070 --> 00:03:54,770
Now let's also see if it's case sensitive.

61
00:03:55,250 --> 00:04:00,830
So what if we told the replace method to look for capital first?

62
00:04:02,090 --> 00:04:03,200
Let's see what we get now.

63
00:04:06,040 --> 00:04:12,880
OK, so it is case sensitive, meaning it does care whether or not you're specifying upper or lower

64
00:04:12,880 --> 00:04:14,530
case, it pays attention to that.

65
00:04:14,530 --> 00:04:20,800
So this lower case first in this upper case for are considered to be two completely different strings.

66
00:04:20,800 --> 00:04:21,970
So keep that in mind.

67
00:04:22,960 --> 00:04:23,290
All right.

68
00:04:23,320 --> 00:04:30,390
Let's also look at the other version of the replace method that is looks for characters.

69
00:04:30,400 --> 00:04:35,950
So if I if I erase what was inside of the parentheses there.

70
00:04:36,070 --> 00:04:42,160
And by the way, if I want to see what the different parameters are that that a method can take while

71
00:04:42,160 --> 00:04:50,290
the cursor is inside of the parentheses I can do on Mac Command P four parameter looks like on Windows

72
00:04:50,290 --> 00:04:51,820
and Linux, its control p.

73
00:04:52,090 --> 00:04:54,640
And so that is now showing me what the inputs are.

74
00:04:54,670 --> 00:05:01,330
So what I'm seeing here is here's one input something of type care sequence, and it's the parameters

75
00:05:01,330 --> 00:05:03,190
called target comma.

76
00:05:03,340 --> 00:05:08,600
And then the second parameter, which is also a character sequence for the replacement.

77
00:05:08,620 --> 00:05:09,130
OK.

78
00:05:09,670 --> 00:05:09,910
All right.

79
00:05:09,910 --> 00:05:13,180
So that's for that version of the method.

80
00:05:13,360 --> 00:05:17,620
And then up above that, we're seeing the other version of this method.

81
00:05:17,830 --> 00:05:21,670
So in other words, this method has there are a couple of versions of this method.

82
00:05:21,670 --> 00:05:25,690
They both are called replace, but one takes two characters.

83
00:05:25,690 --> 00:05:28,110
The other one takes two character sequences.

84
00:05:28,120 --> 00:05:28,450
OK?

85
00:05:28,570 --> 00:05:34,390
And like I said, you can think of a character sequence as basically just a string, and then a character

86
00:05:34,390 --> 00:05:38,020
is just one letter essentially in the Latin alphabet.

87
00:05:38,170 --> 00:05:41,230
One character you know of of a string.

88
00:05:41,440 --> 00:05:43,240
So let's see how that works.

89
00:05:43,250 --> 00:05:50,140
So if we tell it, we want to replace C all of the E's with a capital z.

90
00:05:50,710 --> 00:05:56,680
So the way to specify a character in Java is with a single quote rather than a double quote.

91
00:05:56,860 --> 00:05:59,890
So we're going to tell it to look for all of the E's.

92
00:06:01,030 --> 00:06:01,690
Comma.

93
00:06:03,010 --> 00:06:06,910
And then replace them single quote with Capital Z.

94
00:06:08,360 --> 00:06:10,070
Let's run that and see what we get.

95
00:06:11,440 --> 00:06:15,520
Wow, look at that, that's pretty weird looking, HCR Z.

96
00:06:16,030 --> 00:06:20,770
So, yeah, it replaced all of the lowercase E's with a capital z.

97
00:06:21,070 --> 00:06:21,400
Okay.

98
00:06:21,400 --> 00:06:23,470
So pretty, pretty straightforward.

99
00:06:24,040 --> 00:06:26,060
And I think that's going to wrap this up.

100
00:06:26,080 --> 00:06:27,200
This was an easy one.

101
00:06:27,220 --> 00:06:28,210
I'll see you in the next one.
