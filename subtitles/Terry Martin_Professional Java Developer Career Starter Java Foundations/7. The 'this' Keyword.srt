1
00:00:00,360 --> 00:00:07,770
Hey, I wanted to make a quick little side lesson here, this is almost like a side bar to go into a

2
00:00:07,770 --> 00:00:11,820
little bit more detail on the this key word.

3
00:00:11,970 --> 00:00:18,930
For those of you who feel like you may still not be 100 percent certain what that keyword is for or

4
00:00:18,930 --> 00:00:20,190
when you should use it.

5
00:00:20,340 --> 00:00:25,140
For those of you who think you've got it, you can feel free to totally skip over this lesson, though

6
00:00:25,140 --> 00:00:27,600
I will really promise to try to keep it short.

7
00:00:27,630 --> 00:00:28,110
OK.

8
00:00:28,470 --> 00:00:34,740
So I thought what I would do is revisit this diagram that we've looked at early in the course, and

9
00:00:34,740 --> 00:00:40,260
I can use this to kind of give you a little bit more of an understanding of the this keyword.

10
00:00:40,290 --> 00:00:40,740
OK.

11
00:00:41,070 --> 00:00:47,640
So what we're looking at here is a diagram of a package comporte example dot model.

12
00:00:47,820 --> 00:00:51,030
And then in this package, we've got several classes.

13
00:00:51,210 --> 00:00:57,060
We've got this big main class here, which is just kind of like a blown up class so that we can kind

14
00:00:57,060 --> 00:00:59,090
of see more of the details that are in it.

15
00:00:59,100 --> 00:01:00,750
This is the person class here.

16
00:01:00,750 --> 00:01:05,880
So this this this green square here, that's the person class.

17
00:01:06,030 --> 00:01:10,590
And then we've got a few other classes here chair, computer, car, whatever.

18
00:01:10,650 --> 00:01:16,980
So let me just review a few components of this class with you to give you a little bit more or added

19
00:01:16,980 --> 00:01:20,730
context to understand the this keyword.

20
00:01:20,820 --> 00:01:24,320
So in this class, we've got two fields.

21
00:01:24,330 --> 00:01:26,070
Well, actually, we've got three filled.

22
00:01:26,070 --> 00:01:31,470
Technically, we've got this name filled the date of birth field and then we've got this what looks

23
00:01:31,470 --> 00:01:34,920
like a three dimensional thing here, it's actually kind of standing up.

24
00:01:35,100 --> 00:01:40,740
Now this picture that I'm showing here is from a top down view, basically.

25
00:01:40,920 --> 00:01:47,610
And so it's a 2D view, but this one field here called greeting is actually in 3D kind of standing up.

26
00:01:47,610 --> 00:01:51,270
It's not a two dimensional flat thing like the name and Dobby are.

27
00:01:51,480 --> 00:01:55,020
And the reason for this is because it represents a static field.

28
00:01:55,050 --> 00:01:55,500
OK.

29
00:01:55,770 --> 00:02:03,540
Anyway, so we've got this name in this date of birth field here and then these little smaller squares

30
00:02:03,540 --> 00:02:07,890
with doors on them, they're meant to sort of imply rooms, if you will.

31
00:02:08,010 --> 00:02:09,510
These are methods.

32
00:02:09,540 --> 00:02:10,050
OK?

33
00:02:10,350 --> 00:02:17,220
And they're color coding indicates their level of visibility, with red being private and green being

34
00:02:17,220 --> 00:02:17,740
public.

35
00:02:17,760 --> 00:02:18,180
OK.

36
00:02:18,270 --> 00:02:26,850
So as you should know, by now, when our code is executing, what happens is that we have a thread

37
00:02:26,850 --> 00:02:33,230
which you can think of as a little character and the thread visits our code.

38
00:02:33,240 --> 00:02:38,830
And you know, that executable code, for the most part, can only exist inside of methods.

39
00:02:38,850 --> 00:02:39,270
OK.

40
00:02:39,780 --> 00:02:46,500
So anyway, so you can imagine then that a thread would enter a method and then that method would have

41
00:02:46,500 --> 00:02:47,280
lines of code.

42
00:02:47,460 --> 00:02:52,420
I don't think I have any example of what that would look like.

43
00:02:52,440 --> 00:02:54,360
Let me see here, actually.

44
00:02:54,390 --> 00:02:55,180
Yeah, here we go.

45
00:02:55,200 --> 00:03:01,230
I actually do have a diagram of so yeah, this little weird looking guy here, by the way, this little

46
00:03:01,230 --> 00:03:06,930
guy, he is the basically the mascot for Java and his name is Duke.

47
00:03:07,710 --> 00:03:09,840
And you can think of him as the thread.

48
00:03:10,200 --> 00:03:10,650
OK.

49
00:03:10,890 --> 00:03:18,000
And then here we have a method which I have rendered in three dimensions a three dimensional method

50
00:03:18,270 --> 00:03:19,200
called main.

51
00:03:19,470 --> 00:03:24,480
And if you see here, I've even got a line of code here.

52
00:03:24,510 --> 00:03:25,020
OK.

53
00:03:25,320 --> 00:03:27,350
So now you don't have to imagine it.

54
00:03:27,360 --> 00:03:28,110
You can actually see.

55
00:03:28,110 --> 00:03:35,670
Here's thread getting ready to go in to this main method to read and execute this line of code.

56
00:03:35,700 --> 00:03:36,120
OK.

57
00:03:36,540 --> 00:03:36,890
All right.

58
00:03:36,900 --> 00:03:39,510
So I said all of that just to set the stage.

59
00:03:39,960 --> 00:03:40,340
All right.

60
00:03:40,350 --> 00:03:46,830
So imagine that thread is inside of this method here, and he's executing lines of code.

61
00:03:47,160 --> 00:03:53,700
And let's also imagine that this method declares a variable called words.

62
00:03:54,540 --> 00:03:54,930
OK.

63
00:03:54,960 --> 00:03:58,470
This variable here is defined inside of this method.

64
00:03:58,740 --> 00:04:04,830
So because it is defined inside of this method, it only has scope within this method.

65
00:04:04,830 --> 00:04:07,950
And you can see that really clearly in this diagram.

66
00:04:08,160 --> 00:04:14,460
This word's variable here only has scope inside of this speak method.

67
00:04:14,670 --> 00:04:22,200
So when the thread moves out of this speak method and into another method like get aids, for example,

68
00:04:22,380 --> 00:04:29,190
the thread can no longer access the data in this variable called words, because this variable called

69
00:04:29,190 --> 00:04:35,520
words only exists within the speak method and does not exist in any other method.

70
00:04:35,580 --> 00:04:36,090
OK.

71
00:04:36,600 --> 00:04:47,940
However, these variables out here, which are fields of the person class because they are outside of

72
00:04:47,940 --> 00:04:49,290
these individual methods.

73
00:04:49,290 --> 00:04:56,070
But inside of this class, the thread can access these variables from anywhere.

74
00:04:56,100 --> 00:04:59,880
OK, so if the thread is inside of the speak variable.

75
00:05:00,260 --> 00:05:06,950
Thread can access name or date of birth if he's inside the Get AIDS method, he can access name or or

76
00:05:06,950 --> 00:05:08,720
date of birth, et cetera, et cetera.

77
00:05:08,750 --> 00:05:18,770
OK, now the this key word, no matter where the thread is, the thread can refer to any items that

78
00:05:18,770 --> 00:05:25,250
are directly inside of the class using the this keyword.

79
00:05:25,640 --> 00:05:30,290
Now he doesn't necessarily have to use this keyword, but he can use it.

80
00:05:30,290 --> 00:05:31,880
So that's one thing there.

81
00:05:32,240 --> 00:05:35,960
The this keyword is generally optional.

82
00:05:36,020 --> 00:05:36,540
OK.

83
00:05:37,160 --> 00:05:47,210
So if the thread was inside of this speak method here and wanted to refer to this name field here,

84
00:05:47,510 --> 00:05:51,790
we could have a line of code that says something like this dot.

85
00:05:52,000 --> 00:06:02,390
Name a line of code in here in this speak method that says this name or this date of birth and the this

86
00:06:02,390 --> 00:06:06,860
keyword really just refers to this whole entire object.

87
00:06:07,010 --> 00:06:13,340
Now I'm kind of switching back and forth between referring to this as a class versus referring to it

88
00:06:13,340 --> 00:06:13,920
as an object.

89
00:06:13,940 --> 00:06:19,290
You will hear developers do this frequently because they truly are two sides of the same coin right.

90
00:06:19,340 --> 00:06:20,870
And it just depends on the context.

91
00:06:20,870 --> 00:06:26,660
When you're talking about a thread executing code, you're almost certainly talking about an object

92
00:06:26,810 --> 00:06:30,170
when we're talking about just looking at a diagram or something.

93
00:06:30,410 --> 00:06:33,830
We're often more often talking about a class, right?

94
00:06:33,830 --> 00:06:35,570
But there are two sides of the same coin.

95
00:06:35,990 --> 00:06:44,660
So the this keyword refers to an object, though it does not refer to a class because it only has meaning

96
00:06:44,660 --> 00:06:46,880
when a thread is actually executing code.

97
00:06:47,090 --> 00:06:52,610
And for there to be something that can be referred to by this, it has to be an object.

98
00:06:52,640 --> 00:06:53,090
OK.

99
00:06:53,360 --> 00:07:00,740
So this whole entire person object instance would be this.

100
00:07:02,390 --> 00:07:10,490
So when we say this dot name, we're talking about the name variable or the name field that is directly

101
00:07:10,940 --> 00:07:17,600
inside of this instance of this class, OK, or this date of birth.

102
00:07:18,200 --> 00:07:28,490
Now you could not say this, that words here, because the variable called words is not a direct member

103
00:07:28,490 --> 00:07:30,440
of the person class.

104
00:07:30,950 --> 00:07:34,490
It is inside of the speak method.

105
00:07:34,550 --> 00:07:35,030
OK.

106
00:07:35,240 --> 00:07:44,450
So you can only use the this keyword to refer to direct members of a class which is in the form of an

107
00:07:44,450 --> 00:07:44,940
object.

108
00:07:45,050 --> 00:07:45,530
OK.

109
00:07:45,800 --> 00:07:53,990
So then these words in bar one, bar two and all these little blue things here and VAR one, VAR two

110
00:07:53,990 --> 00:07:54,440
here.

111
00:07:54,680 --> 00:08:01,760
These are not direct members of the class, and therefore you cannot say this sort VAR one when wanting

112
00:08:01,760 --> 00:08:03,170
to refer to these things.

113
00:08:03,200 --> 00:08:03,560
OK.

114
00:08:03,830 --> 00:08:08,120
Furthermore, and I apologize, I don't have an example of this, but hopefully you get it.

115
00:08:08,570 --> 00:08:17,330
If I had this name field here as a direct member of the class, but let's imagine that I also had a

116
00:08:17,330 --> 00:08:24,380
name variable, a local name variable inside of any one of these methods.

117
00:08:24,380 --> 00:08:29,540
So let's say like in this speak method here, let's imagine that maybe instead of this being called

118
00:08:29,540 --> 00:08:31,310
words, it was called name.

119
00:08:31,610 --> 00:08:35,450
So in that scenario, I would have two variables called name.

120
00:08:35,600 --> 00:08:44,030
I'd have one at the field level and then I'd have a different name variable at the method level or a

121
00:08:44,030 --> 00:08:45,020
local variable.

122
00:08:45,060 --> 00:08:54,530
OK, now in that case, if I had some code that wanted to work with this name field here and not the

123
00:08:54,530 --> 00:09:02,780
one that was local to this method, in that case, I would have to let Java know which name field was

124
00:09:02,780 --> 00:09:03,770
I talking about.

125
00:09:04,040 --> 00:09:05,990
Was I referring to the local one?

126
00:09:06,200 --> 00:09:10,580
Or was I referring to the class instance one or the member one, right?

127
00:09:10,790 --> 00:09:18,950
And in order to be clear, I would need to use this name when referring to this one.

128
00:09:19,160 --> 00:09:22,430
In that case, because otherwise there would be ambiguity.

129
00:09:22,700 --> 00:09:23,960
Does that make sense?

130
00:09:24,470 --> 00:09:31,580
But I would only need the this keyword in that circumstance where I've got the potential for ambiguity

131
00:09:31,580 --> 00:09:37,880
because I have a field member with the same name as a local variable.

132
00:09:37,910 --> 00:09:47,180
OK, now I can also use the this keyword in front of method names because they are direct members of

133
00:09:47,180 --> 00:09:47,840
the class.

134
00:09:48,020 --> 00:09:55,430
So if I'm in the speak method and I want to call the Get AIDS method, I could have a line of code that

135
00:09:55,430 --> 00:09:57,290
says this does get edge.

136
00:09:57,290 --> 00:09:58,090
I could do that.

137
00:09:58,100 --> 00:09:59,360
Do I need to know?

138
00:09:59,770 --> 00:10:04,210
But you will sometimes see code written that way, and I didn't want you to think that there's some

139
00:10:04,210 --> 00:10:10,750
magic reason why sometimes you see developers use the this keyword, and in fact, I may occasionally

140
00:10:10,750 --> 00:10:13,810
use it in places where I don't absolutely have to.

141
00:10:13,840 --> 00:10:19,930
So first off, I just want you to keep in mind that oftentimes the this keyword is optional.

142
00:10:20,260 --> 00:10:20,690
OK.

143
00:10:20,710 --> 00:10:22,240
You often don't need it.

144
00:10:22,390 --> 00:10:29,110
And in fact, probably about the only time that you do need it is to clear up any ambiguity because

145
00:10:29,320 --> 00:10:37,630
you have a field and a local variable with the exact same name, and you want to be clear as to which

146
00:10:37,990 --> 00:10:39,760
variable you're talking about.

147
00:10:39,970 --> 00:10:49,270
So here we have the constructor for our card in the enum stuff that we were learning recently, and

148
00:10:49,270 --> 00:10:54,790
this constructor has two local variables called suit and rank.

149
00:10:55,000 --> 00:11:04,210
But the class has two fields called suit and rank also, so there's potential for real ambiguity there.

150
00:11:04,450 --> 00:11:12,040
And so you can see right here in the body of this method that we're taking this local suit and we want

151
00:11:12,040 --> 00:11:15,700
to set that value on the field called suit.

152
00:11:16,000 --> 00:11:25,390
And so to make sure there's no confusion here, we must use the this keyword to say we want to set this

153
00:11:25,900 --> 00:11:29,440
suit, which is a member of this class.

154
00:11:29,560 --> 00:11:37,690
We want to set this suit to the local suit, which is getting passed into this constructor.

155
00:11:38,050 --> 00:11:46,540
OK, so that's one of the most common ways that you will see the this keyword used.

156
00:11:46,580 --> 00:11:57,400
OK, and then here I chose to use the this keyword in the two string method to refer to the rank, which

157
00:11:57,400 --> 00:11:58,540
is here now.

158
00:11:58,750 --> 00:12:02,590
I absolutely did not need this keyword here.

159
00:12:02,600 --> 00:12:05,680
I just felt like using it, to be perfectly honest with you.

160
00:12:05,680 --> 00:12:09,970
So I will delete that and nothing's going to break at all.

161
00:12:10,060 --> 00:12:14,830
This will still work just as well as it did before in this particular case.

162
00:12:15,310 --> 00:12:22,780
Now you will see a lot of developers just automatically use the this keyword any time they are referring

163
00:12:22,780 --> 00:12:32,560
to member variables or fields of a class, just so that there's no possibility for ambiguity whatsoever.

164
00:12:32,980 --> 00:12:33,400
All right.

165
00:12:33,410 --> 00:12:36,610
So I actually went longer than I was planning to as usual.

166
00:12:36,640 --> 00:12:40,330
Like I said, though, you were free to skip over this if you wanted to.

167
00:12:40,330 --> 00:12:49,300
But hopefully I have completely demolished any questions or ambiguity about what the this keyword is

168
00:12:49,300 --> 00:12:50,440
or what it does.

169
00:12:50,980 --> 00:12:52,570
So I'll see you in the next one.
