WEBVTT
1
00:00:00.420 --> 00:00:00.880
All right.

2
00:00:00.900 --> 00:00:07.620
So in the last lesson, we implemented the delete capability, and so that just leaves one more basic

3
00:00:07.620 --> 00:00:13.720
bit of functionality to complete out our crud operations, and that is the ability to update.

4
00:00:13.800 --> 00:00:16.320
OK, so let's just jump right in here and get this done.

5
00:00:16.830 --> 00:00:22.170
Now there are a lot of ways that you could go about implementing any of these operations that we've

6
00:00:22.170 --> 00:00:22.680
been doing.

7
00:00:22.680 --> 00:00:27.150
And I don't want you to have the impression that the way that I'm showing you here is the only way we

8
00:00:27.150 --> 00:00:28.980
could have done it in a lot of different ways.

9
00:00:29.280 --> 00:00:36.000
And along those lines, when we implement the edit an update capability here, this is one that I don't

10
00:00:36.000 --> 00:00:40.710
know that what I'm going to show you is the way that I would really do this if I were willing to spend

11
00:00:40.710 --> 00:00:41.730
more time on it.

12
00:00:41.730 --> 00:00:47.580
But I'm trying to weigh the expediency of just showing you an overview of how you can do basic crud

13
00:00:47.580 --> 00:00:54.330
applications in the UI without having to introduce 15 million additional technologies, which I'm already

14
00:00:54.510 --> 00:01:03.600
hitting you with timely for the for the view templating and spring MVC and the controller and HTML and

15
00:01:03.600 --> 00:01:04.380
bootstrap.

16
00:01:04.380 --> 00:01:05.880
And that's a lot already.

17
00:01:06.030 --> 00:01:12.420
And so I kind of drew the line at having to also introduce you to JavaScript, although some of you

18
00:01:12.420 --> 00:01:17.430
may already know JavaScript, but I want to try to avoid that for now, at least.

19
00:01:17.430 --> 00:01:23.400
So that decision is coloring how I am going about implementing a lot of this functionality just so you

20
00:01:23.400 --> 00:01:23.580
know.

21
00:01:23.580 --> 00:01:30.000
OK, so having said all of that, what I'm envisioning here is in order to implement the ability to

22
00:01:30.000 --> 00:01:35.800
edit, I think I want to reuse some of the functionality that's already here, namely, the checkbox

23
00:01:35.800 --> 00:01:36.150
is here.

24
00:01:36.300 --> 00:01:42.720
So what I'm envisioning is that if you wanted to edit one of these records, you would select it and

25
00:01:42.720 --> 00:01:45.630
then we will add an additional button down here.

26
00:01:45.630 --> 00:01:48.030
So like an action button for edit.

27
00:01:48.090 --> 00:01:48.510
OK.

28
00:01:48.720 --> 00:01:54.570
So you would select a row, click the edit button and then that would bring up all the details for that

29
00:01:54.570 --> 00:01:56.430
particular record down here.

30
00:01:56.640 --> 00:02:00.090
And then you could make changes to it and then and then save.

31
00:02:00.120 --> 00:02:00.430
OK.

32
00:02:00.450 --> 00:02:01.740
That's what I'm envisioning now.

33
00:02:01.890 --> 00:02:04.050
That's not ideal or perfect.

34
00:02:04.200 --> 00:02:11.790
If any of you happen to be UI UX experts UI stands for user interface, UX stands for user experience.

35
00:02:11.790 --> 00:02:18.630
So there are people who are experts at user experience who kind of study what is the best way to implement

36
00:02:18.630 --> 00:02:23.790
functionality in a page so that users will find it intuitive to do.

37
00:02:24.090 --> 00:02:30.990
And some UI UX experts might not like the fact that I'm going to use checkboxes, which technically

38
00:02:30.990 --> 00:02:35.790
allow you to select multiple items to be used for selecting Edit.

39
00:02:35.790 --> 00:02:40.530
Because obviously when we're editing, we're not editing multiple records at the same time.

40
00:02:40.530 --> 00:02:45.630
Typically, we're really just editing one at a time, though I can think of a reason why you might want

41
00:02:45.630 --> 00:02:45.930
to do that.

42
00:02:45.940 --> 00:02:49.050
But but typically you'd be doing one at a time.

43
00:02:49.050 --> 00:02:54.780
And so it could be argued that using checkboxes to select one first and then having to click edit it

44
00:02:54.780 --> 00:02:58.800
may not be the greatest usability, and I wouldn't even disagree with that.

45
00:02:58.980 --> 00:03:04.260
But again, I'm just trying to keep things sort of simple and piggyback off of what we've already done

46
00:03:04.260 --> 00:03:05.010
before.

47
00:03:05.040 --> 00:03:07.470
OK, so all right, so let's jump in here.

48
00:03:07.470 --> 00:03:10.950
So I think the first thing I want to do is add an additional button.

49
00:03:11.130 --> 00:03:16.890
So let's jump over to the template here and let's find our existing delete button.

50
00:03:16.890 --> 00:03:24.150
And I think what I want to start off doing is just copying that someone to duplicate that like so and

51
00:03:24.360 --> 00:03:29.850
I think I want delete to be the last button because that's kind of that's a dangerous button.

52
00:03:29.860 --> 00:03:32.880
So maybe we want to keep that out of the way, which is why I made it red.

53
00:03:33.270 --> 00:03:41.580
So I'm going to pick this first one here and let's change its name to edit and we'll leave the true

54
00:03:41.580 --> 00:03:42.150
there.

55
00:03:42.390 --> 00:03:43.860
And now we'll change this.

56
00:03:44.430 --> 00:03:50.670
So this style right here, this class is what is controlling the color and decoration of the button.

57
00:03:50.820 --> 00:03:51.900
So it's button danger.

58
00:03:51.990 --> 00:03:59.280
So if we jump over here to our list of button options here, I think maybe just using the primary for

59
00:03:59.280 --> 00:04:02.160
this edit button might be OK, perhaps.

60
00:04:02.370 --> 00:04:04.250
So that is BTN primary.

61
00:04:04.260 --> 00:04:09.000
In fact, I can just select that and copy it and then come over here.

62
00:04:09.510 --> 00:04:13.560
I didn't mean to overwrite that, but paste that right there, OK?

63
00:04:13.710 --> 00:04:21.030
And so then if we jump back over here and then we'll change the actual text on this to edit, and let's

64
00:04:21.030 --> 00:04:23.010
refresh the page.

65
00:04:24.670 --> 00:04:25.300
OK, cool.

66
00:04:25.480 --> 00:04:27.910
So, yeah, now we've got an edit button and a delete button.

67
00:04:28.030 --> 00:04:31.090
I wouldn't mind having a little more space between these two.

68
00:04:31.420 --> 00:04:37.600
And we should be able to do that with something like a let's see margin.

69
00:04:38.020 --> 00:04:43.960
And because it's the the right end or, you know, you've got like the beginning, which is the left

70
00:04:43.960 --> 00:04:47.780
and then you've got the right side of the button, which is considered the end.

71
00:04:48.010 --> 00:04:52.840
So m e four end, and then maybe we'll use a number of two here.

72
00:04:52.870 --> 00:04:53.320
OK.

73
00:04:53.590 --> 00:04:55.960
And let's refresh and see how that looks.

74
00:04:56.980 --> 00:04:57.850
Yeah, that's fine.

75
00:04:58.240 --> 00:04:58.630
OK.

76
00:04:58.900 --> 00:05:00.850
So we've got our edit button now.

77
00:05:02.270 --> 00:05:10.490
And you remember that the name and value bits here are only being utilized so that back in the controller,

78
00:05:10.640 --> 00:05:15.980
we can differentiate which button was actually pressed, that's what those are going to be used for.

79
00:05:16.010 --> 00:05:21.650
OK, so let's jump over to the controller now and see what we need to do here.

80
00:05:22.010 --> 00:05:26.300
Now, I think what we're pretty much going to be doing is almost exactly what we did in delete.

81
00:05:26.300 --> 00:05:34.760
So much so that maybe we can start off by just copying this, the delete method and paste that there

82
00:05:34.760 --> 00:05:36.430
and then just start making some changes.

83
00:05:36.440 --> 00:05:40.310
So first thing maybe is to change the method name.

84
00:05:40.320 --> 00:05:41.930
So this will be for editing.

85
00:05:41.930 --> 00:05:48.200
And I guess we can just simplistically simplistically call it edit person.

86
00:05:49.230 --> 00:05:49.650
All right.

87
00:05:49.890 --> 00:05:56.070
And then we'll want to change this value here to add it so that way, this method only gets called if

88
00:05:56.070 --> 00:05:58.440
the edit button was pressed.

89
00:05:59.160 --> 00:06:05.970
And we're still going to receive our selections because we're reusing the check boxes there, and we

90
00:06:05.970 --> 00:06:08.430
even probably want this conditional still.

91
00:06:08.730 --> 00:06:10.170
And so now what?

92
00:06:10.350 --> 00:06:13.050
What's the thing that we might want to do differently, though?

93
00:06:13.560 --> 00:06:20.310
I think what we'll want to do differently here is that when someone selects one of these check boxes

94
00:06:20.310 --> 00:06:25.860
and clicks edit, maybe we want to go out to the database and just retrieve the first selection.

95
00:06:25.860 --> 00:06:31.350
So if they happen to have selected multiple check boxes, maybe we're going to ignore all but the very

96
00:06:31.350 --> 00:06:32.070
first one.

97
00:06:32.070 --> 00:06:38.130
First of all, maybe that's just how we're going to make this work and we're going to go out to the

98
00:06:38.130 --> 00:06:44.010
database and reach RE- retrieve the very first record that was selected.

99
00:06:44.400 --> 00:06:45.930
And then what we can do?

100
00:06:46.050 --> 00:06:51.900
Do you remember how we were making it so that data was showing up in this form down here?

101
00:06:51.900 --> 00:06:53.400
Do you remember how we were doing that?

102
00:06:54.030 --> 00:06:54.630
Let's see here.

103
00:06:54.630 --> 00:07:03.270
So in the controller here, you may recall that we've got this method here get person, which is automatically

104
00:07:03.270 --> 00:07:08.480
being bound to the model with a name of all lowercase person.

105
00:07:08.490 --> 00:07:10.740
OK, so that's kind of like the default behavior.

106
00:07:10.740 --> 00:07:16.890
Whenever we have this form, you get a new empty person, OK, so you get empty fields here.

107
00:07:16.920 --> 00:07:26.160
OK, so any person object that we bind to the model with the name person, all lowercase will show up

108
00:07:26.160 --> 00:07:26.460
here.

109
00:07:26.760 --> 00:07:33.150
And so that means that if we want to just have all of these fields show up down here when someone clicks

110
00:07:33.150 --> 00:07:41.010
edit, all we really need to do is just grab that person from the database, put them into the model

111
00:07:41.640 --> 00:07:43.980
and then return back to this page.

112
00:07:43.980 --> 00:07:47.340
And then all of those fields will already be there, OK?

113
00:07:47.400 --> 00:07:48.120
Does that make sense?

114
00:07:48.120 --> 00:07:48.450
So.

115
00:07:48.570 --> 00:07:50.310
So that's what we're going to do.

116
00:07:50.730 --> 00:07:56.880
So first thing, let's go ahead and grab the selected person from the database.

117
00:07:56.910 --> 00:08:04.740
And so we should be able to do that by simply doing a let's see find by ID.

118
00:08:05.730 --> 00:08:12.670
OK, so there's our find by ID, and now we need to get their I.D. the actual ID of the first selection.

119
00:08:12.690 --> 00:08:16.890
OK, now this selections object here, remember, is an optional.

120
00:08:16.890 --> 00:08:23.340
So this does get that we're doing right here is simply taking the list out of the optional OK, so this

121
00:08:23.340 --> 00:08:25.620
would result in a list of longs.

122
00:08:26.100 --> 00:08:26.520
All right.

123
00:08:26.790 --> 00:08:29.890
And then from there we could do another get.

124
00:08:29.910 --> 00:08:32.230
But now this is calling get on the list.

125
00:08:32.250 --> 00:08:32.670
OK.

126
00:08:32.760 --> 00:08:36.960
And then if we want the first item in that list, that would just be zero.

127
00:08:37.320 --> 00:08:39.840
OK, so that might look a little confusing.

128
00:08:39.990 --> 00:08:42.300
So here's an optional get.

129
00:08:42.300 --> 00:08:43.410
Here's a list.

130
00:08:43.860 --> 00:08:48.940
Here's the first item in the list OK, which would be the long zero.

131
00:08:49.080 --> 00:08:53.310
And then we're saying, go find the person with whatever that ID is.

132
00:08:53.310 --> 00:08:57.450
In this case, it would be one if that was the checkbox that we had selected.

133
00:08:57.450 --> 00:08:57.840
OK?

134
00:08:58.170 --> 00:09:05.160
And so this method would return with a person object and then we can capture that person object.

135
00:09:06.670 --> 00:09:13.540
Like so now notice it's actually returning an optional of a person because it's possible that the ID

136
00:09:13.660 --> 00:09:20.200
that we passed in is not a legitimate I.D. and so they're giving us back an optional of a person.

137
00:09:20.240 --> 00:09:25.200
OK, and then we can simply bind that person to the model.

138
00:09:25.210 --> 00:09:31.600
Now we don't have access to the model here yet, but we can get that really easily if we simply refer

139
00:09:31.630 --> 00:09:36.940
to the model like so and this is how we actually started off with our very first.

140
00:09:37.630 --> 00:09:38.940
I think it was the save method.

141
00:09:38.950 --> 00:09:40.450
So I'm going to import this.

142
00:09:40.750 --> 00:09:48.580
OK, so we were letting spring MVC call our handler method and spring in D.C. will see that we have

143
00:09:48.580 --> 00:09:50.050
a parameter of type model.

144
00:09:50.050 --> 00:09:54.400
And so spring then DC will pass the model, which is what it maintains anyway.

145
00:09:54.490 --> 00:09:56.020
It'll pass that into this method.

146
00:09:56.200 --> 00:10:04.300
And then from here we can call model that add attribute and then we'll set that attribute to person

147
00:10:04.510 --> 00:10:06.430
and then pass in the person like.

148
00:10:06.430 --> 00:10:12.730
So now the last thing we want to do, though, is we don't actually want to do this redirect here.

149
00:10:12.850 --> 00:10:17.380
OK, we don't want that because if we do this redirect, we actually lose the person that we are binding

150
00:10:17.380 --> 00:10:17.980
to the model.

151
00:10:18.070 --> 00:10:20.050
And let me make sure you understand why that is.

152
00:10:20.440 --> 00:10:28.030
When we do a redirect, we are giving a command to the browser to perform a get request on the people

153
00:10:28.030 --> 00:10:29.080
resource, OK?

154
00:10:29.200 --> 00:10:36.070
And so what that would result in is the browser will make a request to people which would ultimately

155
00:10:36.070 --> 00:10:39.640
result in the browser calling the show people page.

156
00:10:39.910 --> 00:10:47.080
OK, now everything that is getting bound to the model from these to model attribute methods here,

157
00:10:47.170 --> 00:10:48.970
that would all still happen.

158
00:10:49.540 --> 00:10:50.260
But.

159
00:10:51.360 --> 00:10:56.820
This person that we're binding to the model down here when we click the edit button that would get lost.

160
00:10:56.850 --> 00:11:00.660
OK, so we don't actually want to do a redirect in this particular case.

161
00:11:00.870 --> 00:11:06.330
We just want to return back to this page with the model intact.

162
00:11:06.480 --> 00:11:10.620
OK, so we don't want to redirect in this particular case.

163
00:11:10.800 --> 00:11:17.250
And let me just remind you now the only point of this is to populate this form with whatever person

164
00:11:17.250 --> 00:11:18.210
we selected.

165
00:11:18.240 --> 00:11:18.720
OK.

166
00:11:18.780 --> 00:11:23.880
And then when we click Save, that's just going to go back to our existing save method.

167
00:11:23.910 --> 00:11:27.030
OK, so that save is going to do what it has already been doing.

168
00:11:27.480 --> 00:11:27.830
All right.

169
00:11:27.840 --> 00:11:29.580
So that's the point of this.

170
00:11:29.760 --> 00:11:30.000
All right.

171
00:11:30.000 --> 00:11:34.950
So let's refresh everything and see where we are so far.

172
00:11:36.720 --> 00:11:43.500
OK, so let's select this second person here and click Edit and see.

173
00:11:44.910 --> 00:11:47.670
OK, so yeah, that looks like it works.

174
00:11:47.880 --> 00:11:50.070
We got person to Smith.

175
00:11:50.220 --> 00:11:54.750
Now we've got that problem with the with the date field, and I do know what the solution is and we

176
00:11:54.750 --> 00:11:56.730
are going to have to actually implement something there.

177
00:11:56.940 --> 00:12:00.900
I was hoping to avoid it, but now that we're doing edit, I can't avoid it any longer.

178
00:12:00.900 --> 00:12:03.690
But but it's kind of easy to to solve.

179
00:12:03.960 --> 00:12:04.200
All right.

180
00:12:04.210 --> 00:12:05.340
And then there's the address.

181
00:12:05.340 --> 00:12:10.710
Now notice we're not seeing the address here because of the response of trickery that we implemented

182
00:12:10.710 --> 00:12:11.070
earlier.

183
00:12:11.070 --> 00:12:16.920
So if I pull this out, though, then we'll see that person's email address to Smith, right?

184
00:12:16.920 --> 00:12:18.030
So there's that.

185
00:12:18.090 --> 00:12:18.410
All right.

186
00:12:18.420 --> 00:12:21.360
And then there's the amount of money.

187
00:12:21.930 --> 00:12:28.170
So now let's see what happens, though, if we make a change in here, OK, so let's change his salary

188
00:12:28.170 --> 00:12:29.700
to something else.

189
00:12:29.700 --> 00:12:32.160
So let's do like $9000, OK?

190
00:12:32.370 --> 00:12:33.540
Let's see what happens here.

191
00:12:33.720 --> 00:12:36.730
Click Return or hit return, by the way.

192
00:12:36.750 --> 00:12:41.640
Hitting return that will trigger the save person button action.

193
00:12:41.640 --> 00:12:47.870
OK, since this form is currently active, hitting enter causes this form to submit itself.

194
00:12:47.930 --> 00:12:49.110
OK, that's how that works.

195
00:12:50.200 --> 00:12:50.930
Oh, OK.

196
00:12:50.950 --> 00:12:56.050
And our validation tripped us up because I didn't re-enter a birth date.

197
00:12:56.080 --> 00:12:56.350
All right.

198
00:12:56.350 --> 00:12:59.560
So I will use the same birth date that's already there for now.

199
00:13:00.190 --> 00:13:05.110
And so this is another reason why we really have to make sure that we do fix that and we will and just

200
00:13:05.110 --> 00:13:05.860
shortly here.

201
00:13:06.010 --> 00:13:06.280
All right.

202
00:13:06.280 --> 00:13:07.390
So return.

203
00:13:08.080 --> 00:13:09.250
Ooh, look at that.

204
00:13:09.490 --> 00:13:14.500
So it didn't update, it actually made a copy of that person.

205
00:13:14.710 --> 00:13:20.140
And now we've said we've got the same guy, essentially with the same first and last name and date of

206
00:13:20.140 --> 00:13:21.130
birth and all of that.

207
00:13:21.280 --> 00:13:23.350
And the only thing that's different is the salary.

208
00:13:23.530 --> 00:13:24.970
So why did that happen?

209
00:13:25.420 --> 00:13:26.530
Do you want to take a guess?

210
00:13:27.920 --> 00:13:35.180
OK, so here's what happened when we selected person to Smith with idea of two and clicked edit, we

211
00:13:35.180 --> 00:13:43.430
retrieved that person object from the database and we added him to the model and then we came back to

212
00:13:43.430 --> 00:13:45.740
this page and filled out this form.

213
00:13:46.070 --> 00:13:48.320
OK, so that all worked perfectly well.

214
00:13:48.680 --> 00:13:55.280
And then we clicked Save, which resulted in coming down to the saved person method with this person

215
00:13:55.280 --> 00:13:58.680
filled in, however, and this is key.

216
00:13:58.730 --> 00:14:06.230
This person object that got sent back from this form did not have an I.D. and the reason it didn't have

217
00:14:06.230 --> 00:14:12.980
an ID is because we don't have an ID filled here, so we're not capturing the ad. So in other words,

218
00:14:12.980 --> 00:14:17.570
when we selected this guy for Edit and we clicked the edit button.

219
00:14:18.750 --> 00:14:25.440
And then we populated this form, we lost his ID because we're not we're not tracking his ID down here.

220
00:14:25.560 --> 00:14:32.880
So this person that got posted back into the controller here had all of these fields filled out, but

221
00:14:32.880 --> 00:14:42.030
the ID was null and with spring data slash JP's slash hibernate when an entity and an entity is just

222
00:14:42.030 --> 00:14:44.820
an object that is meant to be used with the database.

223
00:14:44.820 --> 00:14:54.300
Essentially, when an entity doesn't have an ID or an ID is null by default, that tells Hibernate to

224
00:14:54.300 --> 00:14:56.040
go ahead and just save that entity.

225
00:14:56.040 --> 00:14:57.180
Brand new, OK?

226
00:14:57.450 --> 00:15:06.300
However, if the entity has an existing ID already, then Hibernate understands that it should not create

227
00:15:06.300 --> 00:15:07.050
a new record.

228
00:15:07.050 --> 00:15:11.820
It should not perform an insert, but instead it should perform an update.

229
00:15:11.940 --> 00:15:18.240
So Hibernate is smart enough to understand that depending on that primary key filled in there or that

230
00:15:18.240 --> 00:15:25.410
ID property, that helps it to know whether or not it's doing an insert in sequel or an update.

231
00:15:25.470 --> 00:15:25.920
OK.

232
00:15:26.160 --> 00:15:31.440
And so the key to fixing this little issue here is that we actually need the ID.

233
00:15:31.950 --> 00:15:38.880
Now here's the problem, though we don't want our users to be able to edit that ID because if they change

234
00:15:38.880 --> 00:15:43.260
that ID, that is the same thing essentially as just creating a brand new record.

235
00:15:43.260 --> 00:15:44.730
Or it could be even worse.

236
00:15:44.880 --> 00:15:50.010
You might be overwriting other records that already exist in the database, so you don't want that.

237
00:15:50.130 --> 00:15:51.840
So we need to we need to.

238
00:15:52.500 --> 00:15:59.940
We need to capture that ID when we're populating this form so that it can be sent back when we're posting

239
00:15:59.950 --> 00:16:04.290
slash saving the person, but we don't want that ID to be editable.

240
00:16:04.320 --> 00:16:04.800
OK.

241
00:16:05.040 --> 00:16:06.060
Does that make sense?

242
00:16:06.510 --> 00:16:13.110
So luckily, it's HTML has a great solution for exactly this type of issue.

243
00:16:13.290 --> 00:16:16.290
So let's jump over to our form.

244
00:16:17.820 --> 00:16:22.140
All right, so here's our form, and here are all of our fields, right, so there's the first name,

245
00:16:22.140 --> 00:16:26.680
last name, date of birth, email, salary, et cetera, et cetera.

246
00:16:27.000 --> 00:16:35.610
So luckily, what we can do here is we can introduce another input field for the ID.

247
00:16:35.900 --> 00:16:39.510
However, we can make it what they call hidden.

248
00:16:39.750 --> 00:16:41.040
We can make it hidden.

249
00:16:41.550 --> 00:16:49.500
And that will allow us to capture the data, but not show it or make it editable anywhere on the screen.

250
00:16:49.530 --> 00:16:50.030
OK.

251
00:16:51.690 --> 00:16:55.500
So that's that's an easy way that we can solve this particular issue.

252
00:16:55.920 --> 00:17:03.000
So what we will do here is I'm simply going to introduce this field just like this.

253
00:17:05.420 --> 00:17:07.790
The tape will be hidden.

254
00:17:09.320 --> 00:17:14.780
Like so so that will just tell the browser, don't even display this field, it's just kind of behind

255
00:17:14.780 --> 00:17:16.930
the scenes to hold on to that idea.

256
00:17:16.970 --> 00:17:17.450
OK.

257
00:17:17.720 --> 00:17:23.480
And for that reason, I'm not wrapping it in divs with labels and all that stuff either, because these

258
00:17:23.480 --> 00:17:29.900
divs and labels and stuff are really here for cosmetic purposes to specify the layout of this field,

259
00:17:29.910 --> 00:17:30.230
right?

260
00:17:30.380 --> 00:17:34.640
But we don't even want this field to be visible, and therefore we don't need the dibs and all of that

261
00:17:34.640 --> 00:17:35.570
stuff either.

262
00:17:35.660 --> 00:17:41.790
We just need this field to just be behind the scenes somewhere hidden, literally hidden.

263
00:17:41.810 --> 00:17:44.090
OK, so we need that.

264
00:17:44.420 --> 00:17:50.990
We won't need the class because again, class definitions are for styling and making things look a certain

265
00:17:50.990 --> 00:17:53.180
way, and we don't need any of that either.

266
00:17:53.660 --> 00:17:54.110
OK.

267
00:17:54.470 --> 00:17:59.180
And so then the next thing that we need, we don't even need this ID field here, which, by the way,

268
00:17:59.180 --> 00:18:05.660
is mostly here actually just to make the editor happy, really, because this colon field attribute

269
00:18:05.660 --> 00:18:10.740
from time will actually result in the regeneration of an ID anyway.

270
00:18:10.760 --> 00:18:11.150
OK.

271
00:18:11.930 --> 00:18:20.690
So we will do colon field equals star I.D. like so.

272
00:18:21.230 --> 00:18:25.580
And we don't need the error class either, because again, that's for cosmetic purposes when you have

273
00:18:25.580 --> 00:18:26.150
an error.

274
00:18:27.670 --> 00:18:28.750
So we won't need that.

275
00:18:29.050 --> 00:18:31.330
So I think this is all we need.

276
00:18:31.840 --> 00:18:32.260
All right.

277
00:18:32.650 --> 00:18:35.860
So let's refresh the page.

278
00:18:38.180 --> 00:18:40.520
OK, so there's that.

279
00:18:41.060 --> 00:18:47.120
And let's delete this erroneously added records, so will delete that.

280
00:18:47.330 --> 00:18:48.530
OK, so that's gone.

281
00:18:48.860 --> 00:18:54.410
And now let's select that record again, the second one with 4500 salary for edit.

282
00:18:56.030 --> 00:18:57.230
All right, there we go.

283
00:18:57.410 --> 00:19:02.810
So let's look behind the scenes of this HTML page now so we can do that so we can do that in a in a

284
00:19:02.810 --> 00:19:03.680
couple of ways.

285
00:19:04.190 --> 00:19:09.230
I can open up the dev tools and go to elements.

286
00:19:10.780 --> 00:19:16.960
And I could just kind of search like maybe the edit button here, because I know that I added that hidden

287
00:19:16.960 --> 00:19:25.630
field somewhere, and if I scroll down here to the bottom, I could select this little button here,

288
00:19:25.630 --> 00:19:30.400
and that button allows me to zoom in on elements on the page.

289
00:19:30.400 --> 00:19:36.640
So if I click that and now it's kind of primed, and then I select somewhere where I know close to where

290
00:19:36.640 --> 00:19:38.500
that hidden field should be.

291
00:19:38.620 --> 00:19:41.290
Like this last button here, I'm going to select that.

292
00:19:41.560 --> 00:19:49.060
And then what happens now is that at this element's area here zooms in on the HTML for that button right

293
00:19:49.060 --> 00:19:49.690
there, OK?

294
00:19:49.870 --> 00:19:57.370
And then right above it, though, is my hidden field with ID of ID and name of ID and value of two.

295
00:19:57.400 --> 00:20:03.400
OK, so and I probably should have shown you this before, but just to make it clear, so this h colon

296
00:20:03.400 --> 00:20:08.770
field is no longer showing up here because it kind of did its job and then it got itself out of the

297
00:20:08.770 --> 00:20:09.010
way.

298
00:20:09.020 --> 00:20:17.280
OK, so this field became an I.D. equals ID attribute and a name equals ID and a value.

299
00:20:17.290 --> 00:20:24.880
This one filled rendered all three of those attributes, and then it removed itself from the final version

300
00:20:24.880 --> 00:20:25.840
of the HTML.

301
00:20:25.840 --> 00:20:28.420
And that's why Time-Life is called a templating engine.

302
00:20:28.420 --> 00:20:28.750
OK?

303
00:20:29.080 --> 00:20:35.260
These are template commands that will result in other H.M. being rendered to the browser.

304
00:20:35.290 --> 00:20:35.650
OK.

305
00:20:36.040 --> 00:20:36.360
All right.

306
00:20:36.370 --> 00:20:40.540
So now we've got that number two, which is what we needed there.

307
00:20:40.570 --> 00:20:41.050
OK.

308
00:20:41.470 --> 00:20:49.600
And so now if I change this salary to 9000 like so l, I got to set this date of birth again.

309
00:20:50.180 --> 00:20:52.970
We'll fix that right next for four.

310
00:20:53.110 --> 00:20:55.210
I don't remember what I had there before, but that's fine.

311
00:20:55.420 --> 00:21:02.110
And then hit read well, let me let me close down the dev tools now, OK, and then I will hit return.

312
00:21:03.190 --> 00:21:03.790
Look at that.

313
00:21:03.820 --> 00:21:10.630
Now we've still got only two records, and the second record now has a salary of nine thousand OK.

314
00:21:10.780 --> 00:21:17.770
So we just needed to capture that ID value and then pass it back to the controller when we are saving

315
00:21:17.770 --> 00:21:18.520
those changes.

316
00:21:18.520 --> 00:21:23.470
So that hibernate would know this isn't a new person with a with a null ID.

317
00:21:23.800 --> 00:21:26.470
This is an existing person with an existing ID.

318
00:21:26.800 --> 00:21:29.920
And therefore we're just doing a an update in the database.

319
00:21:29.920 --> 00:21:30.340
And you know what?

320
00:21:30.340 --> 00:21:34.480
I wish I had remembered to keep our eye on the on the hibernate.

321
00:21:34.480 --> 00:21:35.920
But actually, here it is.

322
00:21:36.070 --> 00:21:36.520
In fact.

323
00:21:36.520 --> 00:21:37.660
Yeah, you can see it right here.

324
00:21:37.660 --> 00:21:41.230
So there's the update that was just executed for us.

325
00:21:41.590 --> 00:21:42.280
That's it.

326
00:21:42.370 --> 00:21:50.140
And then we did a redirect back to the main page again, where hibernate then selected all of the people

327
00:21:50.140 --> 00:21:52.040
to repopulate this table.

328
00:21:52.060 --> 00:21:55.060
OK, so there you can see what's actually happening.

329
00:21:56.170 --> 00:21:56.800
All right.

330
00:21:57.010 --> 00:22:00.670
So now what to do about the date?

331
00:22:01.420 --> 00:22:09.370
Well, the issue here, the reason why this date filled, never populates properly is because of our

332
00:22:09.520 --> 00:22:10.480
form matters.

333
00:22:10.930 --> 00:22:11.320
All right.

334
00:22:11.320 --> 00:22:14.920
So let me remind you of the formatter that we implemented.

335
00:22:15.190 --> 00:22:18.310
We have a formatter here for local dates, right?

336
00:22:18.430 --> 00:22:19.180
Right there.

337
00:22:21.150 --> 00:22:30.240
Specifically, the print method of this formatter, so we decided to customize the display of our local

338
00:22:30.240 --> 00:22:37.280
data so that we would have this nice month written out, followed by a two digit day and then the year

339
00:22:37.350 --> 00:22:38.550
up here in the table.

340
00:22:38.700 --> 00:22:39.060
All right.

341
00:22:39.270 --> 00:22:46.200
And what's happening, though, is when we change the text format of a date to this format, the browser

342
00:22:46.200 --> 00:22:52.650
no longer knows how to pass this so that it can display the date properly, and that's what's happening

343
00:22:52.650 --> 00:22:52.890
here.

344
00:22:53.040 --> 00:22:58.560
So unfortunately, if we want this guy to work as far as I know, at least as far as I know, if we

345
00:22:58.560 --> 00:23:04.690
want this guy to work, we need to put the date format back into this ISO local date format.

346
00:23:04.710 --> 00:23:06.000
That's what's needed.

347
00:23:06.030 --> 00:23:08.490
OK, so here's what we're going to do.

348
00:23:09.150 --> 00:23:12.870
We will go ahead and change this to use the ISO local data.

349
00:23:12.870 --> 00:23:16.980
And in fact, if I recall correctly, I don't I don't even know that we would even need the date, time

350
00:23:16.980 --> 00:23:22.530
format or anymore, because I think the ISO local date was the default that we were getting anyway.

351
00:23:22.770 --> 00:23:25.200
Let's let's let's try that real quick, actually.

352
00:23:25.530 --> 00:23:26.390
Let me confirm that.

353
00:23:26.400 --> 00:23:33.000
So I'm just going to comment about the component there so that this formatter won't get picked up by

354
00:23:33.000 --> 00:23:38.450
spring anymore, and therefore there will be no automated formatting of local dates.

355
00:23:38.460 --> 00:23:44.160
OK, so I'm just getting rid of that and then I'm going to restart or refresh.

356
00:23:44.670 --> 00:23:45.090
All right.

357
00:23:45.270 --> 00:23:48.660
So there are the dates that we're getting now.

358
00:23:48.660 --> 00:23:50.760
So that's the format that we're getting.

359
00:23:51.330 --> 00:23:56.010
And let's just see what we what we get, if I say, to edit one of these fields now.

360
00:23:57.650 --> 00:24:00.470
OK, so yeah, that actually still doesn't work.

361
00:24:00.680 --> 00:24:03.060
That's not the format that it needed to be.

362
00:24:03.080 --> 00:24:03.350
Yeah.

363
00:24:03.360 --> 00:24:04.550
So we do need the.

364
00:24:05.650 --> 00:24:07.810
We do need the ISO local date.

365
00:24:07.850 --> 00:24:09.970
OK, so I just wanted to test that out real quick.

366
00:24:11.290 --> 00:24:11.530
All right.

367
00:24:11.530 --> 00:24:13.270
So we will re-enable this.

368
00:24:14.720 --> 00:24:15.500
Formatter.

369
00:24:16.040 --> 00:24:24.950
And then what we will do is instead of using this custom pattern here like we were, we will replace

370
00:24:24.950 --> 00:24:26.540
that with.

371
00:24:27.550 --> 00:24:29.110
ISO local date.

372
00:24:29.500 --> 00:24:30.280
Like so.

373
00:24:31.440 --> 00:24:37.230
And that means now that I can just refer to this date time format, for instance, here.

374
00:24:38.850 --> 00:24:43.590
And that is also the instance that we're already referring to down here, OK?

375
00:24:43.710 --> 00:24:49.830
So remember, this print method is where we take our dates that are in our person in this case and then

376
00:24:49.830 --> 00:24:53.730
we convert them into a string for display purposes.

377
00:24:53.820 --> 00:25:01.380
And then this past method is where we go from posting a date to then getting it back in to the person

378
00:25:01.380 --> 00:25:01.910
class.

379
00:25:01.920 --> 00:25:02.280
OK?

380
00:25:02.310 --> 00:25:03.750
The instance of the person class.

381
00:25:03.960 --> 00:25:04.320
All right.

382
00:25:04.470 --> 00:25:08.010
So let's refresh again.

383
00:25:09.710 --> 00:25:10.680
All right, yes, so.

384
00:25:10.790 --> 00:25:11.630
So there we go.

385
00:25:11.720 --> 00:25:17.090
So now the default format is four digit year and then the month and then the day.

386
00:25:17.300 --> 00:25:18.920
And now look at that now.

387
00:25:18.920 --> 00:25:23.750
The date of birth field here populates properly, so this guy wasn't happy.

388
00:25:23.930 --> 00:25:24.860
However, now.

389
00:25:25.960 --> 00:25:26.770
I don't like that.

390
00:25:26.860 --> 00:25:29.390
I want my dates the way that I want them, OK?

391
00:25:29.770 --> 00:25:31.630
The way that we started off with all of this.

392
00:25:31.630 --> 00:25:34.300
So how can I get around this issue?

393
00:25:34.660 --> 00:25:39.220
Well, I did mention this before, but I didn't show it before, and now I will.

394
00:25:39.460 --> 00:25:46.240
We actually can format these dates using another technique and that is using time length itself.

395
00:25:46.360 --> 00:25:46.810
OK.

396
00:25:47.170 --> 00:25:56.920
So if we jump back over to our template now and let me close down that console stuff there and we find

397
00:25:56.920 --> 00:26:02.110
our table up here at the top and we go to this date of birth field here, right?

398
00:26:02.500 --> 00:26:09.040
So we actually can just format this date of birth using functions that are provided by Time-Life.

399
00:26:09.310 --> 00:26:13.780
However, it's going to be a little bit involved in what we have to do.

400
00:26:13.810 --> 00:26:17.280
So let me take you down the road so that you'll understand first.

401
00:26:17.420 --> 00:26:24.640
So we'll jump back over to the timely documentation here, and we will go to the generic documentation,

402
00:26:24.640 --> 00:26:29.830
not the one for spring, because what we're about to do now with formatting a date has nothing specifically

403
00:26:29.830 --> 00:26:31.540
to do with spring right now.

404
00:26:31.840 --> 00:26:32.050
All right.

405
00:26:32.050 --> 00:26:37.150
So we'll jump into their generic documentation and then down here at the very bottom where they've got

406
00:26:37.150 --> 00:26:40.210
all their methods and functions and stuff, we'll go down here to date.

407
00:26:40.210 --> 00:26:44.830
So I'm in the Appendix B expression utility objects and we'll go down here to dates.

408
00:26:45.040 --> 00:26:47.980
And I showed you this briefly once upon a time.

409
00:26:49.120 --> 00:26:51.130
And so they've got a method, right?

410
00:26:51.160 --> 00:26:52.860
Which one is this one right here?

411
00:26:52.870 --> 00:26:54.460
Dates dot format.

412
00:26:54.910 --> 00:26:56.890
And then you can pass in a format, OK?

413
00:26:57.010 --> 00:26:58.180
So we've got that.

414
00:26:58.390 --> 00:27:02.200
Now I'm going to cut to the chase in the interest of time, though, and tell you that this actually

415
00:27:02.200 --> 00:27:03.700
won't work for us.

416
00:27:04.030 --> 00:27:08.080
And the problem is that it is the right thing to do mostly.

417
00:27:08.170 --> 00:27:09.330
But it won't work for us.

418
00:27:09.340 --> 00:27:14.710
And the reason it won't work is because this function, this method, if you will, dates.

419
00:27:14.710 --> 00:27:20.410
That format only understands the old style Java date.

420
00:27:20.430 --> 00:27:26.920
So if you'll recall back in the daytime, in the daytime lessons that I taught, I didn't spend a whole

421
00:27:26.920 --> 00:27:33.970
lot of time on the old style date and time and calendar API because you, for the most part, should

422
00:27:33.970 --> 00:27:34.930
try to avoid that.

423
00:27:34.930 --> 00:27:41.590
If you're writing new code, it's just not as good and it's not as consistent as the current modern

424
00:27:41.740 --> 00:27:47.410
date time API where we're using everything that you've been seeing us use local dates in zone date times

425
00:27:47.410 --> 00:27:48.280
and all of that stuff.

426
00:27:48.490 --> 00:27:56.050
However, this library by default does not understand local dates and things of that sort.

427
00:27:56.170 --> 00:28:03.040
And so if we were to try to use this method, as is, our program would blow up because it would say,

428
00:28:03.130 --> 00:28:06.910
I don't know how to format a local date now.

429
00:28:07.000 --> 00:28:14.800
Happily, there is an extension to time leaf that does know how to handle what are called Java, a date

430
00:28:14.800 --> 00:28:15.940
time API.

431
00:28:16.210 --> 00:28:22.960
And so we need to incorporate that extension as a library into our application.

432
00:28:22.960 --> 00:28:26.670
And then we will be able to basically do this with one minor change.

433
00:28:26.680 --> 00:28:27.010
OK?

434
00:28:27.280 --> 00:28:31.630
So let me show you how to do that, and I'm sorry that you got to go through that, but that's just

435
00:28:31.630 --> 00:28:32.410
how it works.

436
00:28:32.620 --> 00:28:32.990
OK.

437
00:28:33.310 --> 00:28:38.620
So first thing we'll do, we're going to we're going to import a new dependency because this is an additional

438
00:28:38.620 --> 00:28:41.620
library that we need to import into our project.

439
00:28:41.800 --> 00:28:43.750
And the way we can do that is to go to Gradle.

440
00:28:44.170 --> 00:28:52.150
So I will do a commando and type in Gradle, and I want to search for files, not classes, and I want

441
00:28:52.150 --> 00:28:54.850
the wizard at the build that Gradle file.

442
00:28:54.880 --> 00:28:55.480
There it is.

443
00:28:55.510 --> 00:29:00.010
OK, so here I am at the build that Gradle file now.

444
00:29:00.010 --> 00:29:05.230
Just for a moment here, I'm going to switch out of presentation mode so that I can use MAVEN to search

445
00:29:05.230 --> 00:29:07.650
for the Gradle dependency that we need here.

446
00:29:07.660 --> 00:29:15.160
So let me switch out a presentation for a moment here, and then I will do a command in to add an additional

447
00:29:15.160 --> 00:29:16.330
Gradle dependency.

448
00:29:16.330 --> 00:29:21.310
And I think again, I always forget on Windows and Linux, I think it's a control insert.

449
00:29:21.640 --> 00:29:22.660
You can try that.

450
00:29:23.260 --> 00:29:24.490
Add dependency.

451
00:29:24.670 --> 00:29:25.060
All right.

452
00:29:25.210 --> 00:29:32.890
And then up here, I'm going to search for my dependency, so I'm going to search for time leaf and

453
00:29:32.890 --> 00:29:39.430
also Java eight, because I happen to know that those are some of the key words that are in the dependency

454
00:29:39.430 --> 00:29:40.420
that I'm looking for.

455
00:29:40.630 --> 00:29:43.390
And then I will scroll down a little bit.

456
00:29:44.450 --> 00:29:50.120
And there it is, timely extras, Java, eight time, that is the dependency that I want.

457
00:29:50.780 --> 00:29:58.070
And by default, this intelligent utility for adding additional dependencies and everything will typically

458
00:29:58.070 --> 00:30:01.220
display the most recent stable release.

459
00:30:01.490 --> 00:30:01.850
OK.

460
00:30:01.970 --> 00:30:05.270
So all I need to do now is just click, add and watch up here.

461
00:30:05.270 --> 00:30:08.370
When I click Add, that line will be added.

462
00:30:08.390 --> 00:30:09.890
There it is, right there.

463
00:30:09.920 --> 00:30:10.310
OK.

464
00:30:11.210 --> 00:30:13.640
And then I can get rid of that.

465
00:30:13.670 --> 00:30:18.980
And now I can switch back into presentation mode so that you can see what I'm doing more easily without

466
00:30:18.980 --> 00:30:22.960
me having to do a bunch of editing after the fact to zoom in and zoom out and all of that.

467
00:30:22.970 --> 00:30:23.720
It's a lot of work.

468
00:30:27.510 --> 00:30:28.470
All right, there we go.

469
00:30:28.560 --> 00:30:34.680
Now I need to actually trigger Gradle, though, to pull this dependency in.

470
00:30:34.920 --> 00:30:41.880
And so to do that, I can come over here to the Gradle tab and select that and then I can click this

471
00:30:41.880 --> 00:30:43.740
little refresh thing here.

472
00:30:45.040 --> 00:30:52.300
And so that is triggering Gradle to see that I've added a new dependency and then download that dependency

473
00:30:52.300 --> 00:30:53.770
if I didn't already have it.

474
00:30:53.950 --> 00:30:54.400
All right.

475
00:30:54.610 --> 00:30:57.130
So now I've got that dependency here.

476
00:30:57.430 --> 00:31:03.190
So the next step now I want you to kind of understand how you configured some of this out for yourself,

477
00:31:03.190 --> 00:31:03.640
by the way.

478
00:31:03.730 --> 00:31:09.940
So if you actually come over here and just copy like maybe the Java eight time word there and then open

479
00:31:09.940 --> 00:31:19.060
up a browser and you Google time leave space and then that dependency there and maybe documentation.

480
00:31:20.500 --> 00:31:26.770
Like so now I happen to know that it's not either of these first two links, but it is in this GitHub

481
00:31:26.770 --> 00:31:27.310
link here.

482
00:31:27.320 --> 00:31:28.750
So if you click on that.

483
00:31:30.240 --> 00:31:36.030
You'll get to see the very, very tiny little bit of documentation that does exist for this.

484
00:31:36.150 --> 00:31:42.060
And there's one key thing that you need to be aware of, and that's why I'm showing you this.

485
00:31:42.750 --> 00:31:49.740
So down here it says this module adds a temporal object similar to the dates or calendars one in the

486
00:31:49.740 --> 00:31:50.580
standard dialect.

487
00:31:50.580 --> 00:31:55.950
So what they're saying is if we go back over to timely documentation here, the way that Time-Life says

488
00:31:55.950 --> 00:31:59.910
you can do this, this date formatting is by embedding.

489
00:32:00.150 --> 00:32:02.790
Let me zoom in a bit is by embedding.

490
00:32:04.450 --> 00:32:05.720
Something like this.

491
00:32:05.740 --> 00:32:11.440
OK, so this is an object, and this is a method on that object, so you access that object by using

492
00:32:11.440 --> 00:32:12.820
this hashtag dates.

493
00:32:13.120 --> 00:32:20.980
So if you want to do these same kinds of things, but for Java, eight date time API instead of doing

494
00:32:20.980 --> 00:32:22.540
hashtag dates.

495
00:32:23.710 --> 00:32:26.020
You would instead do.

496
00:32:27.110 --> 00:32:28.610
Hashtag Temporal.

497
00:32:28.760 --> 00:32:31.530
OK, so that's the main difference, OK?

498
00:32:31.790 --> 00:32:36.140
That might not have been super obvious to you, and that's why I wanted to make sure that I pointed

499
00:32:36.140 --> 00:32:42.110
that out and they even show some examples right down here, in fact, which actually looks exactly like

500
00:32:42.650 --> 00:32:46.070
what's over here, except instead of dates, it says Temporal.

501
00:32:46.130 --> 00:32:46.490
All right.

502
00:32:46.760 --> 00:32:50.870
OK, so let's jump back over to the browser now and then over here.

503
00:32:51.020 --> 00:32:54.950
Let's jump back over into the template people that HTML.

504
00:32:54.950 --> 00:32:58.550
And so now all we need to do is modify this.

505
00:32:58.670 --> 00:33:03.170
Actually, I guess I should have left either either of these open.

506
00:33:03.590 --> 00:33:06.140
So the version that we really want.

507
00:33:07.230 --> 00:33:09.810
Is this one right here?

508
00:33:10.350 --> 00:33:11.400
I'll zoom in a bit.

509
00:33:12.960 --> 00:33:19.200
Timberwolves dot format where we pass in a temple, which is our date filled, and then we can pass

510
00:33:19.200 --> 00:33:24.680
in a format string just like what we've been using all along, pretty much.

511
00:33:24.690 --> 00:33:30.370
OK, so down here where we're printing out the date of birth.

512
00:33:30.510 --> 00:33:36.690
Now we won't need the double curly braces anymore because now we're not letting the formatter from spring

513
00:33:37.140 --> 00:33:39.120
do any formatting for us.

514
00:33:39.160 --> 00:33:42.980
Okay, we're going to do the formatting now using Time-Life.

515
00:33:42.990 --> 00:33:49.260
OK, so I'm going to get rid of all of that and now I'm going to basically just copy what I see here

516
00:33:49.260 --> 00:33:50.010
more or less.

517
00:33:50.220 --> 00:33:59.380
So they've got a hashtag temporal starved format, and then they refer to the date time object.

518
00:33:59.400 --> 00:34:01.230
That's what this word temporal means.

519
00:34:01.230 --> 00:34:06.920
So hours would be person didio be followed by a comma space.

520
00:34:06.930 --> 00:34:10.380
You don't need that space, but I'm putting in there and then a single tick, and I'm just going to

521
00:34:10.380 --> 00:34:12.540
put both of the text there together.

522
00:34:12.540 --> 00:34:16.200
And I'm also going to put this closing parentheses so that I won't forget them.

523
00:34:17.370 --> 00:34:17.640
All right.

524
00:34:17.650 --> 00:34:19.920
And then inside of here, I will do my formatting.

525
00:34:19.920 --> 00:34:27.360
So the format string that we were using before was for capital M's meaning we want the the month spelled

526
00:34:27.360 --> 00:34:27.690
out.

527
00:34:28.870 --> 00:34:33.880
Followed by two digit de comma and then four digit year.

528
00:34:34.240 --> 00:34:37.570
OK, so that's what we were doing before.

529
00:34:37.960 --> 00:34:38.410
All right.

530
00:34:38.620 --> 00:34:42.520
So let's come back over here and let's see if that's enough.

531
00:34:42.730 --> 00:34:43.090
All right.

532
00:34:43.390 --> 00:34:47.080
So I will restart slash refresh.

533
00:34:50.300 --> 00:34:51.560
A. And look at that.

534
00:34:51.860 --> 00:34:57.290
So we're back in business now, so we've got our date formatted nicely up here.

535
00:34:58.310 --> 00:35:04.010
And we're parsing things properly down here, which is exactly what we wanted.

536
00:35:04.050 --> 00:35:11.510
OK, so sorry that that was a little bit of a long way around just to get to that little bit of functionality,

537
00:35:11.510 --> 00:35:14.090
but sometimes that's just what you've got to do.

538
00:35:14.180 --> 00:35:14.570
All right.

539
00:35:14.780 --> 00:35:16.550
So let's see here.

540
00:35:16.550 --> 00:35:19.100
Let's add a few more records, I suppose.

541
00:35:19.550 --> 00:35:23.180
So let me finish editing this record.

542
00:35:23.180 --> 00:35:25.010
So let's change this amount again.

543
00:35:25.040 --> 00:35:28.490
Maybe we'll make it one hundred thousand one hundred to three.

544
00:35:28.820 --> 00:35:30.750
Like, so enter.

545
00:35:30.770 --> 00:35:32.770
OK, so we've got 100 grand now.

546
00:35:33.830 --> 00:35:35.900
And then let's add a new person.

547
00:35:37.390 --> 00:35:43.030
Jerry Seinfeld, I don't know when Jerry Seinfeld was born.

548
00:35:43.240 --> 00:35:45.670
Hey, Google, when was Jerry Seinfeld born?

549
00:35:45.850 --> 00:35:49.270
Jerry Seinfeld was born on April 20, 1954.

550
00:35:49.510 --> 00:35:51.700
April 29, 1954.

551
00:35:51.730 --> 00:35:53.890
Wow, he's kind of up there in age.

552
00:35:53.890 --> 00:35:54.580
A little bit, huh?

553
00:35:55.060 --> 00:35:55.420
All right.

554
00:35:55.450 --> 00:36:01.030
And Jay Seinfeld at NBC dot com.

555
00:36:01.060 --> 00:36:01.450
OK.

556
00:36:01.810 --> 00:36:06.630
And let's say he has a salary of two one two three four five six $2 million.

557
00:36:06.910 --> 00:36:07.300
All right.

558
00:36:07.420 --> 00:36:08.680
So let's add him.

559
00:36:09.050 --> 00:36:09.970
So there's Jerry.

560
00:36:10.660 --> 00:36:10.970
All right.

561
00:36:10.990 --> 00:36:13.300
And now let's edit Jerry Seinfeld.

562
00:36:14.260 --> 00:36:20.890
So we'll select him and click Edit, all right, and so now all of our fields populated, including

563
00:36:20.890 --> 00:36:28.420
the date of birth now properly, and let's say that now he is not no longer with NBC and now he's at

564
00:36:28.420 --> 00:36:30.850
Curb Your Enthusiasm or something.

565
00:36:30.850 --> 00:36:33.520
Seinfeld at Curb dot com.

566
00:36:33.520 --> 00:36:40.540
And now his salary is whatever three million one two three four five six and return.

567
00:36:41.230 --> 00:36:42.400
And very good.

568
00:36:42.400 --> 00:36:47.870
So that updated properly and well, let's check that email address.

569
00:36:47.900 --> 00:36:48.170
Yes.

570
00:36:48.180 --> 00:36:52.000
So the email address is at curb now, so.

571
00:36:53.320 --> 00:36:54.550
There we have it.

572
00:36:54.940 --> 00:37:01.660
So now we've got the ability to add, delete, edit and list out everybody there.

573
00:37:01.930 --> 00:37:08.320
Now we could do a few other tweaks, perhaps like if we selected one of these people to edit them like

574
00:37:08.320 --> 00:37:10.630
this and then we changed our minds.

575
00:37:10.870 --> 00:37:13.720
So, you know, you could have like a cancel button there.

576
00:37:13.980 --> 00:37:19.540
Maybe I'd have that button just result in a redirect back to this page again, that would clear everything

577
00:37:19.540 --> 00:37:20.410
out right there.

578
00:37:20.460 --> 00:37:20.830
Right?

579
00:37:21.160 --> 00:37:23.950
So that would be kind of an easy way to do that.

580
00:37:24.340 --> 00:37:25.450
But yeah, there you have it.

581
00:37:25.570 --> 00:37:32.200
We have now implemented a very typical crud application, and we've encountered a lot of the types of

582
00:37:32.200 --> 00:37:35.530
issues that you would really encounter when doing this type of work.

583
00:37:35.560 --> 00:37:41.200
OK, now I think I will go ahead and teach a few more techniques along these lines before we close out

584
00:37:41.200 --> 00:37:42.010
this section.

585
00:37:42.010 --> 00:37:48.100
But this is covering a lot of the core types of scenarios that you might be likely to encounter with

586
00:37:48.100 --> 00:37:50.320
this type of web application development.

587
00:37:50.330 --> 00:37:50.740
OK?

588
00:37:51.070 --> 00:37:56.290
So in the next lesson, we'll take a look at a few of the remaining techniques that I want to share

589
00:37:56.290 --> 00:37:56.680
with you.

590
00:37:56.680 --> 00:37:58.540
OK, so I'll see you in the next one.
