WEBVTT
1
00:00:00.690 --> 00:00:09.060
OK, so continuing from where we left off, I was saying in the last lesson that I would show some additional

2
00:00:09.060 --> 00:00:14.580
techniques to kind of make this maybe a little more readable.

3
00:00:14.610 --> 00:00:19.960
I don't know about that exactly, but probably to make it a little simpler.

4
00:00:20.850 --> 00:00:23.520
Before we jump completely into that, well, no.

5
00:00:23.730 --> 00:00:30.540
So the first thing I want to address is let's talk a little bit more about these capture groups.

6
00:00:30.810 --> 00:00:36.330
So as we saw, we can embed capture groups within capture groups, right?

7
00:00:36.330 --> 00:00:38.910
We can have parentheses within parentheses.

8
00:00:39.150 --> 00:00:46.710
And when we do that, that changes the way that we can address the little the bits inside of the captured

9
00:00:46.710 --> 00:00:48.060
groups that we want to reference.

10
00:00:48.090 --> 00:00:54.480
So for example, down here, we're doing Group two, Group four, six and seven because we wanted,

11
00:00:55.260 --> 00:01:00.150
you know, this second group, which is embedded within the first group here, right?

12
00:01:00.720 --> 00:01:11.280
So that was one and then two and then three right there and then four and then five.

13
00:01:12.690 --> 00:01:16.590
Six and then seven.

14
00:01:16.620 --> 00:01:16.960
Right.

15
00:01:18.570 --> 00:01:21.990
So that's how we were able to get to these.

16
00:01:22.230 --> 00:01:25.570
But there's another thing we could do to make this act.

17
00:01:25.620 --> 00:01:30.420
Well, there's a couple of techniques that we could do to make accessing the actual pertinent bits,

18
00:01:30.420 --> 00:01:35.400
the actual pertinent capture groups that we want a little more straightforward.

19
00:01:36.630 --> 00:01:44.400
So the first technique that I will show for doing this is we can actually tell the regular expression

20
00:01:44.400 --> 00:01:49.840
engine not to fully capture a group.

21
00:01:49.860 --> 00:01:56.250
OK, so a grouping is really just whenever we use the parentheses and by default, whenever we use those

22
00:01:56.250 --> 00:02:04.080
parentheses, the regular expression engine is going to try to remember whatever matched within that

23
00:02:04.080 --> 00:02:04.770
grouping.

24
00:02:04.950 --> 00:02:11.670
But we can actually tell the Rejects engine to not remember certain groupings.

25
00:02:11.970 --> 00:02:17.070
And by doing so, that will affect the numbering of the groupings themselves.

26
00:02:17.310 --> 00:02:23.790
So, for example, this first capture group right here, this one, we don't want that whole thing.

27
00:02:23.790 --> 00:02:25.560
We only want what's inside.

28
00:02:25.590 --> 00:02:25.860
Right.

29
00:02:25.870 --> 00:02:28.020
This this sub capture group.

30
00:02:28.230 --> 00:02:35.940
So we could tell the Rejects engine not to capture, if you will, the outer grouping.

31
00:02:36.480 --> 00:02:43.440
And the way to do that is simply to put on the right on the inside there, right after the opening parentheses

32
00:02:43.440 --> 00:02:44.940
of the group that you don't want.

33
00:02:45.180 --> 00:02:50.100
You'll put a question mark colon just like that.

34
00:02:50.430 --> 00:03:00.900
And so that tells the engine to not remember or to not capture that group that is inside of the parentheses.

35
00:03:01.860 --> 00:03:10.380
So if we go through and do that on all of the capture groups that we don't want to capture, thus thus

36
00:03:10.710 --> 00:03:13.770
turning them into non capture groups, if you will.

37
00:03:14.370 --> 00:03:23.190
So I'll put one there and one here as well looks just like that.

38
00:03:23.610 --> 00:03:30.030
So now what we should have is this capture group becomes one.

39
00:03:32.280 --> 00:03:34.380
This one becomes, too.

40
00:03:35.880 --> 00:03:40.830
This one becomes three and then this one becomes four.

41
00:03:41.640 --> 00:03:51.420
So if we change our numbering now one, two, three and four?

42
00:03:51.600 --> 00:03:53.370
Let's run this and see what we get.

43
00:03:55.870 --> 00:04:00.040
Look at that still works, and now it's a little more straightforward, right?

44
00:04:00.760 --> 00:04:03.940
Simple, simpler, numbering one two three four.

45
00:04:06.670 --> 00:04:15.790
And when you think about it now, this is actually pretty nice because we really didn't want to remember

46
00:04:15.790 --> 00:04:18.260
the outer grouping here.

47
00:04:18.280 --> 00:04:23.860
The only reason we have these parentheses on this outer grouping was so that we could tell the Rejects

48
00:04:23.860 --> 00:04:33.880
engine that we wanted to allow zero or one of that whole pattern, which corresponds to the country

49
00:04:33.880 --> 00:04:34.930
code, right?

50
00:04:35.710 --> 00:04:41.050
So sometimes these parentheses, you don't want to use them for capturing and remembering.

51
00:04:41.050 --> 00:04:47.710
You just want to use them for literally grouping something so that you can then put something like a

52
00:04:48.460 --> 00:04:54.340
quantifier, you know, to to specify how many times that thing should match or something like that.

53
00:04:54.490 --> 00:04:54.880
Right?

54
00:04:55.210 --> 00:05:02.920
But by default, the Rejects engine assumes that not only you may be wanting to use a quantifier, but

55
00:05:02.920 --> 00:05:07.870
you also want to remember whatever was in there so you can turn that off just like that.

56
00:05:08.020 --> 00:05:11.530
And then that has greatly simplified our numbering scheme there.

57
00:05:11.550 --> 00:05:11.890
Right?

58
00:05:12.880 --> 00:05:20.590
OK, now there's another way, and this is, in many cases, actually my preferred way to be able to

59
00:05:21.160 --> 00:05:23.200
access these capture groups.

60
00:05:23.380 --> 00:05:30.190
I'm going to I'm going to go ahead and leave the non capturing on, though, just because we already

61
00:05:30.190 --> 00:05:31.330
have it here and I'm lazy.

62
00:05:32.260 --> 00:05:39.460
But there's another way that we can get to the capture groups that we actually care about.

63
00:05:40.330 --> 00:05:46.420
And that is that is a technique where we can create what are called named capture groups.

64
00:05:46.870 --> 00:05:53.350
So instead of accessing these via numbers, which could change depending on how many capture groups

65
00:05:53.350 --> 00:06:00.550
we have within the regular expression, we could actually give each capture group a name and then reference

66
00:06:00.550 --> 00:06:01.570
them that way.

67
00:06:01.750 --> 00:06:07.330
And then it doesn't matter what order they come in or how many there are, or if you move them around

68
00:06:07.330 --> 00:06:08.160
or something like that.

69
00:06:08.170 --> 00:06:12.550
And so in many cases, that's actually my preferred way to do this.

70
00:06:12.820 --> 00:06:15.040
So let's let's see how to do that now.

71
00:06:15.940 --> 00:06:16.300
All right.

72
00:06:16.330 --> 00:06:23.290
So to do this, what we do, we still use this question mark as a starting point.

73
00:06:23.560 --> 00:06:24.670
So we'll we'll hear.

74
00:06:24.670 --> 00:06:27.150
We'll we'll we'll focus on this first one.

75
00:06:27.300 --> 00:06:29.800
So this first one is the country code, right?

76
00:06:30.160 --> 00:06:37.510
So what we can do is we put our cursor to the right of the opening parentheses for this capture group

77
00:06:37.510 --> 00:06:39.730
that we want to access.

78
00:06:40.870 --> 00:06:42.910
We put a question mark.

79
00:06:43.120 --> 00:06:49.750
But instead of a colon, we use a less than symbol and a greater than symbol just like this.

80
00:06:49.900 --> 00:06:57.670
And then inside of the in-between, rather the less than in greater than symbol, we give it a name.

81
00:06:57.970 --> 00:07:04.720
Now I'm going to use camel case in keeping with the Java standards for naming, but I'm going to name

82
00:07:04.720 --> 00:07:05.920
this something meaningful.

83
00:07:06.040 --> 00:07:09.820
Since this field represents the country code.

84
00:07:09.820 --> 00:07:17.710
I'm going to name this country code camel case with a lowercase C for the first part country and then

85
00:07:17.710 --> 00:07:20.260
a capital C for code write country code.

86
00:07:20.830 --> 00:07:21.280
All right.

87
00:07:22.180 --> 00:07:28.240
And now what I can do is I can come down here to this field for the country code, and instead of passing

88
00:07:28.240 --> 00:07:35.980
in a number, I can pass in a string, which will be that name country code.

89
00:07:36.910 --> 00:07:39.190
So just like that?

90
00:07:40.370 --> 00:07:42.640
Now let's see what happens when we run this.

91
00:07:45.100 --> 00:07:45.550
OK.

92
00:07:45.970 --> 00:07:47.980
It still works, right?

93
00:07:48.130 --> 00:07:53.140
Still works, even though we're now passing in a string instead of a a number.

94
00:07:53.230 --> 00:08:02.530
Now, if we were to pass in a name that isn't referenced up here, so I'll put a couple of digits behind

95
00:08:02.530 --> 00:08:03.280
the name there.

96
00:08:03.280 --> 00:08:06.490
So this is something that does not exist up here now, right?

97
00:08:06.730 --> 00:08:07.660
And we run this.

98
00:08:07.660 --> 00:08:08.740
Let's see what happens.

99
00:08:12.920 --> 00:08:17.720
OK, so it blows up, tells us there is no group with name country code two three.

100
00:08:17.870 --> 00:08:24.140
So yeah, so we know it's really looking at the named Captur Group.

101
00:08:24.300 --> 00:08:25.490
Someone to delete that.

102
00:08:25.880 --> 00:08:26.180
All right.

103
00:08:26.180 --> 00:08:32.120
So let's go ahead and proceed with naming the rest of these and you can do this on your own.

104
00:08:32.420 --> 00:08:34.430
But I'll do it here as well.

105
00:08:35.180 --> 00:08:35.530
Let's see.

106
00:08:35.540 --> 00:08:43.670
So the next capture group that I care about is this one, which is the area code, or at least that's

107
00:08:43.670 --> 00:08:44.570
what I'm calling it.

108
00:08:44.780 --> 00:08:47.420
So again, I'm going to put a question mark.

109
00:08:47.660 --> 00:08:52.040
Less than symbol area code and then close that.

110
00:08:52.250 --> 00:08:57.830
Be careful not to forget these symbols that the opening and the closing, it's super easy to forget

111
00:08:57.830 --> 00:09:01.400
them, and especially since this is so cryptic looking as well.

112
00:09:02.060 --> 00:09:04.790
So just try to make sure you're being really, really careful.

113
00:09:05.750 --> 00:09:11.630
OK, and then the next one goes here and that is the I called it the exchange.

114
00:09:11.990 --> 00:09:14.120
OK, so a question mark.

115
00:09:14.300 --> 00:09:17.060
Less than exchange.

116
00:09:17.540 --> 00:09:18.500
Close that.

117
00:09:19.010 --> 00:09:29.120
And then the last one goes here, and that is the line number, line number and close that.

118
00:09:29.420 --> 00:09:29.930
All right.

119
00:09:30.320 --> 00:09:42.410
And so now down here, I can just reference them area code, but I forgot to put that in quotes.

120
00:09:42.590 --> 00:09:43.250
Now look at this.

121
00:09:43.970 --> 00:09:48.640
Show you another little nice feature of intelligence.

122
00:09:50.060 --> 00:09:51.830
I forgot to put this word around.

123
00:09:51.830 --> 00:09:53.720
Quotes are quotes around it.

124
00:09:54.380 --> 00:10:01.380
I can select that whole string real quick, either with the cursor or while my cursor is anywhere in.

125
00:10:01.420 --> 00:10:02.330
In the word.

126
00:10:02.660 --> 00:10:14.750
I can do an option up arrow or control control W to select a selection in a kind of an expanding direction

127
00:10:14.750 --> 00:10:15.320
there, right?

128
00:10:15.440 --> 00:10:19.220
And then I can just hit shift quote, right?

129
00:10:19.220 --> 00:10:27.590
Like to type a quotation mark and intelligence automatically knows to wrap quotations around that quick

130
00:10:27.590 --> 00:10:28.010
side note.

131
00:10:28.010 --> 00:10:32.840
Now that does not work for you, and instead it just deletes the word and then replaces it with quotes.

132
00:10:33.020 --> 00:10:35.540
That's a setting in the preferences.

133
00:10:35.750 --> 00:10:37.580
And you can go to the preferences.

134
00:10:37.580 --> 00:10:37.850
Hold on.

135
00:10:37.850 --> 00:10:39.500
I'm sorry, I didn't show how I went there.

136
00:10:39.650 --> 00:10:47.090
So on a Mac, you can either go up to the Intel idea and then go to preferences or you can do command

137
00:10:47.090 --> 00:10:47.780
comma.

138
00:10:48.020 --> 00:10:54.320
Let me see what is the I don't know what the keyboard shortcut is on windows to get to the preferences,

139
00:10:54.320 --> 00:11:01.430
but I think it might be under help if I'm not mistaken, or it's either under help or file for the preferences

140
00:11:01.700 --> 00:11:02.330
anyway.

141
00:11:02.720 --> 00:11:08.780
And then you come over here and to the search window and you can search for, I think let's see, is

142
00:11:08.780 --> 00:11:12.950
it wrap OK if you search for surround?

143
00:11:16.290 --> 00:11:20.400
Let's see, and I believe it's under smart keys here.

144
00:11:20.700 --> 00:11:25.140
There's the settings around selection on typing, quote or brace.

145
00:11:25.410 --> 00:11:28.740
So if you have that checked, then you'll get this behavior.

146
00:11:28.740 --> 00:11:34.770
So if you didn't get that behavior in your I.D. and I think by default, it's on in the latest versions

147
00:11:34.770 --> 00:11:35.450
of intelligent.

148
00:11:35.460 --> 00:11:40.890
But if it did not work for you, you might want to come into the preferences and check to see that surround

149
00:11:40.890 --> 00:11:45.870
selection on typing quote or brace is is is selected if you want that.

150
00:11:46.470 --> 00:11:46.860
All right.

151
00:11:48.150 --> 00:11:50.660
So anyway, let's see.

152
00:11:50.660 --> 00:11:59.340
Yeah, so we got that, and then I'll replace this third one here with exchange and then the last one

153
00:12:01.050 --> 00:12:08.220
with line number and then run this again and make sure I didn't break anything.

154
00:12:10.270 --> 00:12:10.870
Looks good.

155
00:12:11.530 --> 00:12:12.070
OK.

156
00:12:12.640 --> 00:12:21.820
So, yeah, like I said, I really kind of prefer to use the named Captur groups for a couple of reasons.

157
00:12:22.120 --> 00:12:27.610
First off, like I said before, it's much less dependent on the order of things and whether or not

158
00:12:27.610 --> 00:12:33.460
you, you know, we're capturing in one place or not or whatever doesn't matter anymore.

159
00:12:34.660 --> 00:12:40.510
And then also, it's a small little bit of text that kind of gives you a little bit more of a hint as

160
00:12:40.510 --> 00:12:44.020
to what's going on in that section of the regular expression, right?

161
00:12:44.020 --> 00:12:44.900
Because look at that.

162
00:12:44.920 --> 00:12:47.560
That's, you know, it's pretty unwieldy.

163
00:12:47.560 --> 00:12:52.360
But now at least you can see the word country code in know, OK, this is the part of the expression

164
00:12:52.360 --> 00:12:56.050
where I'm capturing the country code, area code, exchange line numbers, et cetera.

165
00:12:56.530 --> 00:12:58.010
So that's that's pretty nice.

166
00:12:58.450 --> 00:13:02.290
And I think that's going to wrap up this lesson and I will see you in the next one.
