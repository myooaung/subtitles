1
00:00:00,720 --> 00:00:01,180
All right.

2
00:00:01,200 --> 00:00:08,520
So now that we've learned about big decimal and big integer and the wrapper classes and all of that,

3
00:00:09,000 --> 00:00:18,840
let's put some of this knowledge to work and let's do something a little less trivial with money based

4
00:00:19,050 --> 00:00:20,130
calculations.

5
00:00:20,640 --> 00:00:27,660
So one of my favorite things to do is to play around with compound interest calculators, either online

6
00:00:27,660 --> 00:00:28,830
or whatever.

7
00:00:28,920 --> 00:00:34,860
So let's try making a method that can calculate compound interest for us.

8
00:00:35,520 --> 00:00:39,060
And I have a formula here that I will pull up.

9
00:00:39,090 --> 00:00:47,430
So this is on the website called Money Chimp Dot Com, and they have a compound interest calculator

10
00:00:47,430 --> 00:00:51,120
that we can use to check our work when we're done implementing this.

11
00:00:51,450 --> 00:00:58,470
But on their website, they also give the formula that they use for calculating compound interest.

12
00:00:58,500 --> 00:01:02,220
Now there are a few variations on how to calculate compound interest.

13
00:01:02,580 --> 00:01:07,850
The one that I think we're going to go with is one that factors in contributions.

14
00:01:07,860 --> 00:01:15,000
And so that will be this formula right here where you can calculate a balance given that you have a

15
00:01:15,000 --> 00:01:24,750
principal and interest rate or a rate of return and some time in years and a contribution amount.

16
00:01:25,110 --> 00:01:31,440
So we're going to translate this into Java code.

17
00:01:31,590 --> 00:01:32,140
All right.

18
00:01:32,160 --> 00:01:33,840
Using a the decimal.

19
00:01:35,430 --> 00:01:35,950
All right.

20
00:01:35,970 --> 00:01:41,760
So to get started here first, let me make this window a little smaller.

21
00:01:42,450 --> 00:01:49,230
And I'm going to put it somewhere where we can keep our eye on the formula there.

22
00:01:51,350 --> 00:01:52,730
We'll make it a little bigger.

23
00:01:54,700 --> 00:01:55,180
OK.

24
00:01:56,260 --> 00:02:00,450
And then over here, what we will do is let's create a new class.

25
00:02:00,500 --> 00:02:02,860
We're going to lose this window for a moment, but we'll bring it back.

26
00:02:02,860 --> 00:02:05,470
So we're going to create a new class.

27
00:02:05,770 --> 00:02:08,380
Let's see here, Java class.

28
00:02:08,620 --> 00:02:13,450
Let's call this compound interest.

29
00:02:14,670 --> 00:02:17,400
Calc, because that's what it is.

30
00:02:20,070 --> 00:02:20,640
All right.

31
00:02:21,870 --> 00:02:27,750
And so this class is going to have a method on it.

32
00:02:31,190 --> 00:02:38,600
And because we're going to be doing compound interest calculations, the return type is going to represent

33
00:02:38,600 --> 00:02:44,660
money, and we now know because I think I've put it into everyone's head that anytime we're doing money

34
00:02:44,660 --> 00:02:48,410
based calculations in Java, we must use what type.

35
00:02:49,470 --> 00:02:52,080
If you said big decimal, you would be right.

36
00:02:52,440 --> 00:02:58,350
And so let's go ahead and make a method that's going to return a big decimal.

37
00:02:59,880 --> 00:03:03,990
And let's see, we'll call this method calculate.

38
00:03:06,110 --> 00:03:09,410
And let's take a look at our formula here.

39
00:03:09,650 --> 00:03:11,330
So what are the inputs?

40
00:03:12,930 --> 00:03:17,730
So it looks like the inputs are any of the variables that are on the right hand side because the output

41
00:03:17,730 --> 00:03:19,200
is what we're going to get back.

42
00:03:19,860 --> 00:03:22,300
So we've got a principle, right?

43
00:03:22,320 --> 00:03:23,880
That's your starting balance.

44
00:03:24,720 --> 00:03:28,610
We've got a rate of return, right?

45
00:03:28,620 --> 00:03:34,950
The R we've got Y, which stands for the time in years.

46
00:03:36,290 --> 00:03:41,240
And we've got see, which represents a annual contribution.

47
00:03:41,300 --> 00:03:45,590
OK, so principal rate years and contributions.

48
00:03:45,590 --> 00:03:48,890
So we've got four inputs here.

49
00:03:49,580 --> 00:04:00,170
OK, so let's decide that we will specify these inputs as strings because we already know that when

50
00:04:00,170 --> 00:04:06,910
dealing with big decimal, the most accurate way to initialize the big decimal is with strings.

51
00:04:06,920 --> 00:04:09,750
So let's just start right off with the strings.

52
00:04:09,800 --> 00:04:10,220
OK.

53
00:04:10,940 --> 00:04:11,210
All right.

54
00:04:11,210 --> 00:04:14,270
So first one up is the principle.

55
00:04:14,390 --> 00:04:16,520
So let's use a string.

56
00:04:17,810 --> 00:04:20,360
And we're going to call this principle.

57
00:04:20,390 --> 00:04:20,840
All right.

58
00:04:21,470 --> 00:04:27,650
Then we've got a rate and we'll use a string for that as well.

59
00:04:32,550 --> 00:04:39,960
And we've got a period which is the amount of time in years now, honestly, I'm debating whether or

60
00:04:39,960 --> 00:04:44,910
not I really want to make that a string because I think we could get away with that just being whole

61
00:04:44,910 --> 00:04:46,500
numbers like an integer.

62
00:04:46,920 --> 00:04:50,940
So I'm actually going to go ahead and model that one as an integer.

63
00:04:51,150 --> 00:04:57,000
It doesn't matter a whole lot, but I think that'll be easy enough to to work with.

64
00:04:57,330 --> 00:05:01,140
So for the period, we'll make it an integer.

65
00:05:03,010 --> 00:05:07,000
And then we've got our contribution contribution, which is money.

66
00:05:07,300 --> 00:05:11,700
And so that's definitely going to be a string because it's a floating point value.

67
00:05:12,680 --> 00:05:14,150
So we'll do a string.

68
00:05:15,800 --> 00:05:17,060
Contribution.

69
00:05:17,420 --> 00:05:18,950
All right, one, two three.

70
00:05:18,980 --> 00:05:23,810
We've got four inputs, I think that covers everything.

71
00:05:24,440 --> 00:05:25,340
All right.

72
00:05:26,060 --> 00:05:27,590
Let's get started.

73
00:05:29,090 --> 00:05:35,720
First thing I think I want to do here is to copy this formula so that I don't have to keep paging back

74
00:05:35,720 --> 00:05:36,470
and forth.

75
00:05:36,890 --> 00:05:40,520
And for now, I'll just put that right here as a as a comment.

76
00:05:40,520 --> 00:05:46,130
So notice, when I do a comment, I just do two forward splashes of space and then I can paste that

77
00:05:46,130 --> 00:05:47,540
right in just like that.

78
00:05:48,170 --> 00:05:53,150
All right, then I'm going to get rid of this project sidebar here so that we can have a little more

79
00:05:53,150 --> 00:05:53,810
room.

80
00:05:55,020 --> 00:06:00,430
So we need to translate this formula into Java code.

81
00:06:00,450 --> 00:06:08,670
Now one of the things that sticks out for me right away is that we've got this term one plus are repeated

82
00:06:09,510 --> 00:06:20,070
a couple of times here, so I'm inclined to let that term be represented by a variable so that it's

83
00:06:20,070 --> 00:06:23,370
a little bit easier for us to put this thing together.

84
00:06:23,670 --> 00:06:25,050
So let's tackle that first.

85
00:06:25,050 --> 00:06:28,610
Let's make a variable that represents this term OnePlus.

86
00:06:28,620 --> 00:06:29,130
Ah.

87
00:06:29,850 --> 00:06:34,950
So let's let everything be a big decimal, so we'll create a big decimal.

88
00:06:35,220 --> 00:06:43,920
Now, I'm not a finance major, so I don't even know if there is a an English term for what this OnePlus

89
00:06:43,920 --> 00:06:45,220
R represents.

90
00:06:45,240 --> 00:06:47,460
Unfortunately, I don't know what that is.

91
00:06:47,940 --> 00:06:54,300
So, but, but I need to name this variable something so I could either give it an abstract name, which

92
00:06:54,300 --> 00:06:59,010
I don't normally like to do, or I could name it something that reminds me of the fact that it represents

93
00:06:59,010 --> 00:07:04,650
OnePlus R or if I knew what that actually represented, I would give it the real name, but I don't

94
00:07:04,650 --> 00:07:05,340
know what that is.

95
00:07:05,350 --> 00:07:12,510
So unfortunately, I'm inclined to simply name this something somewhat abstract and not very meaningful,

96
00:07:12,510 --> 00:07:15,080
such as unfortunately a.

97
00:07:15,600 --> 00:07:17,940
So I'm going to say a equals.

98
00:07:19,060 --> 00:07:21,690
And now so we want to do one plus.

99
00:07:21,830 --> 00:07:26,020
Ah, so I'm going to start off with a big decimal now.

100
00:07:26,230 --> 00:07:34,390
I happen to know that the number one actually is a defined constant on the big decimal class, and I'll

101
00:07:34,390 --> 00:07:36,130
show you that right here.

102
00:07:36,880 --> 00:07:38,620
There it is, right there one.

103
00:07:39,520 --> 00:07:45,460
So that's a quick way that I can create a big decimal equivalent of the number one.

104
00:07:45,970 --> 00:07:47,050
Just the convenience.

105
00:07:47,380 --> 00:07:53,620
And then, as you know, we can't use the regular math operators when dealing with big decimal.

106
00:07:53,620 --> 00:07:55,240
We have to use methods.

107
00:07:55,480 --> 00:08:01,630
And so if I put a period here, I can then get to the various methods of big decimal.

108
00:08:02,140 --> 00:08:07,720
And there is an add method which takes as input, another big decimal.

109
00:08:09,520 --> 00:08:18,370
And so the other big decimal that I want here is for this R R stands for the rate and I have a rate

110
00:08:18,370 --> 00:08:19,750
which is of type string.

111
00:08:19,750 --> 00:08:23,260
So what I can do is just create a new big decimal.

112
00:08:26,280 --> 00:08:32,100
And I can use the version of the big decimal constructor that takes a string and so I can just pass

113
00:08:32,100 --> 00:08:35,010
in the rate just like that.

114
00:08:35,700 --> 00:08:36,780
And so now.

115
00:08:37,950 --> 00:08:41,160
This a equals one plus are.

116
00:08:42,220 --> 00:08:48,880
And if I want to, I can put a little comment here just reminding myself that that's what this is one

117
00:08:48,910 --> 00:08:49,570
plus ah.

118
00:08:50,080 --> 00:08:57,490
So next up, I think what I want to tackle is the innermost bits of this formula and then work my way

119
00:08:57,520 --> 00:08:58,480
out from there.

120
00:08:58,510 --> 00:09:01,030
So in other words, kind of doing loops.

121
00:09:01,600 --> 00:09:06,430
So in other words, kind of starting off with we, we tackled this right?

122
00:09:06,760 --> 00:09:14,350
And and then it looks like there's another thing where this times y is something and then this times

123
00:09:14,350 --> 00:09:17,710
y minus one is something as well.

124
00:09:17,800 --> 00:09:21,190
So I want you to kind of understand my thinking here.

125
00:09:21,700 --> 00:09:25,470
And by the way, I mean, my thinking may not be 100 percent totally ideal.

126
00:09:25,480 --> 00:09:30,850
I haven't worked this out before I started recording because I kind of want you to see how I'm thinking

127
00:09:30,850 --> 00:09:31,390
about this now.

128
00:09:31,390 --> 00:09:36,280
I have implemented compound interest calculations before, but I don't do it so often that I've got

129
00:09:36,280 --> 00:09:37,630
everything memorized, right?

130
00:09:37,840 --> 00:09:42,610
And it's been I don't know how long it's been since I last did this in Java, especially.

131
00:09:42,970 --> 00:09:50,230
So one of the things I'm thinking now is do I want to create another variable that represents the OnePlus

132
00:09:50,230 --> 00:09:52,540
hard times y and then just leave it there?

133
00:09:52,780 --> 00:10:00,430
And then a third variable that would take all of this minus one, so I could just keep building on it

134
00:10:00,430 --> 00:10:01,120
that way.

135
00:10:01,210 --> 00:10:06,310
And that certainly would be easy to do, though, you know, I'm going to have a few lines there, not

136
00:10:06,310 --> 00:10:07,600
a lot, but a few lines.

137
00:10:08,080 --> 00:10:15,400
Or do I want to get a little more adventurous and try to do the OnePlus hard times y minus one, all

138
00:10:15,400 --> 00:10:17,410
kind of in one fell swoop?

139
00:10:17,800 --> 00:10:18,940
Maybe I could do that.

140
00:10:19,150 --> 00:10:24,190
I think I'm going to keep it a little simple, though, and just do one bit at a time.

141
00:10:24,760 --> 00:10:27,220
And that way, I can kind of keep myself out of trouble.

142
00:10:27,640 --> 00:10:35,290
So the next bit that I'm going to go for is this because I've already got a which represents OnePlus

143
00:10:35,320 --> 00:10:35,950
are.

144
00:10:37,100 --> 00:10:41,960
And now all I need to do is multiply that times why and and that's easy enough.

145
00:10:42,140 --> 00:10:42,950
So let's do that.

146
00:10:43,070 --> 00:10:45,080
Now I need another name for that term.

147
00:10:45,080 --> 00:10:51,800
And again, because I don't know what if there is a an actual, meaningful name for what this represents

148
00:10:51,800 --> 00:10:52,700
mathematically.

149
00:10:52,730 --> 00:10:57,800
I'm just going to have to create a generic number or a generic name for it.

150
00:10:57,800 --> 00:10:59,270
And I've already used a.

151
00:10:59,290 --> 00:11:00,800
So my next one, I guess, will be.

152
00:11:02,030 --> 00:11:08,150
Please know I'm not a big fan of naming variables in this kind of meaningless way, but in this particular

153
00:11:08,150 --> 00:11:14,450
case, because I'm not a math or finance major, I just I don't know what these terms, if these terms

154
00:11:14,450 --> 00:11:16,310
even have any real world meanings.

155
00:11:16,310 --> 00:11:19,250
So I don't feel that I have much choice right now.

156
00:11:19,730 --> 00:11:20,510
All right, so.

157
00:11:21,680 --> 00:11:24,230
Create another big desk, the moment to call this one be.

158
00:11:25,550 --> 00:11:30,530
Equals and so now this one is going to be simply.

159
00:11:32,530 --> 00:11:37,360
Eh, because eh, is one plus are a times y, that's it.

160
00:11:37,690 --> 00:11:39,040
So that should be really easy.

161
00:11:39,040 --> 00:11:39,940
So A.

162
00:11:41,490 --> 00:11:42,690
Multiply.

163
00:11:43,740 --> 00:11:52,380
And then why now, why is the period because why stands for years?

164
00:11:52,530 --> 00:11:55,080
And so that is the period here now.

165
00:11:55,110 --> 00:12:03,510
My period here as an input is an integer, and I think I'm OK to just use that integer, as is in this

166
00:12:03,510 --> 00:12:04,680
particular case.

167
00:12:04,860 --> 00:12:09,900
I'm not worried that an integer is going to have any issues with precision or rounding because it's

168
00:12:09,900 --> 00:12:10,410
an integer.

169
00:12:10,410 --> 00:12:12,120
There's no decimal point there.

170
00:12:12,240 --> 00:12:16,530
It's kind of one of the reasons why Semi intuitively thought, you know, I don't think I can model

171
00:12:16,530 --> 00:12:17,820
that just as an integer.

172
00:12:17,970 --> 00:12:19,410
I don't need it to be a string.

173
00:12:19,860 --> 00:12:21,720
All right, so multiply that now.

174
00:12:21,720 --> 00:12:28,560
Again, the multiply method takes a big decimal, though, so I have to create a new big decimal.

175
00:12:28,800 --> 00:12:34,980
And then here, though, I can pass in just that period, and there we go.

176
00:12:35,220 --> 00:12:40,230
And then I'll use another inline comment just to remind myself of what is this?

177
00:12:40,620 --> 00:12:47,730
So I think the way I'm going to remind myself of this is this by copying this bit right here and then

178
00:12:47,730 --> 00:12:49,200
pasting it right there.

179
00:12:49,230 --> 00:12:52,620
So one plus are times why that's what this is.

180
00:12:53,070 --> 00:12:53,490
All right?

181
00:12:53,610 --> 00:12:59,880
And now I'm ready to go to the next bit, which is all of this minus one.

182
00:13:00,760 --> 00:13:02,650
And so that should be easy enough.

183
00:13:03,490 --> 00:13:05,480
So I'll create another variable.

184
00:13:05,500 --> 00:13:07,270
Again, I'm just going to name it badly.

185
00:13:07,690 --> 00:13:09,370
C equals.

186
00:13:11,350 --> 00:13:11,890
Be.

187
00:13:12,980 --> 00:13:16,760
Because B is one plus one plus our times y right?

188
00:13:16,780 --> 00:13:17,570
This whole bit.

189
00:13:17,870 --> 00:13:18,500
B.

190
00:13:21,070 --> 00:13:22,030
Subtract.

191
00:13:23,020 --> 00:13:29,020
And then one and again, I can just use the constant of one.

192
00:13:30,910 --> 00:13:31,840
Just like that.

193
00:13:32,320 --> 00:13:36,760
And so now C equals.

194
00:13:39,220 --> 00:13:41,080
All of this.

195
00:13:43,810 --> 00:13:51,270
All right, now, we're ready to get all of this divided by, AH.

196
00:13:51,610 --> 00:13:57,700
And you see what's happening here as we just slowly expand out each individual calculation is quite

197
00:13:57,700 --> 00:13:58,240
simple.

198
00:13:58,870 --> 00:14:01,540
All right, so create another big decimal.

199
00:14:02,260 --> 00:14:07,690
I'm going to just call this one D equals C.

200
00:14:09,420 --> 00:14:18,060
Divided by ARE, which is our rate, so I'll need a new big decimal and then I will pass in.

201
00:14:18,090 --> 00:14:20,340
Ah, which is the rate?

202
00:14:20,380 --> 00:14:21,060
Oh, I'm sorry.

203
00:14:21,690 --> 00:14:23,700
Rate, not our rate.

204
00:14:24,330 --> 00:14:26,910
Now if you will recall.

205
00:14:28,000 --> 00:14:36,580
When using the divide method of big decimal, you can pass in optionally an additional math context,

206
00:14:36,590 --> 00:14:43,270
in fact, there's a few variations of it where we can specify how many significant digits we want and

207
00:14:43,270 --> 00:14:46,750
how to round off like what what strategy for rounding.

208
00:14:46,870 --> 00:14:48,280
We want to use.

209
00:14:48,790 --> 00:14:54,010
So you'll need we'll need to kind of decide, do we need to specify that now or can we get away without

210
00:14:54,010 --> 00:14:54,640
doing that?

211
00:14:55,000 --> 00:15:00,160
I usually like to live a little bit on the edge, I guess so I'm and I'm kind of lazy, so I'm inclined

212
00:15:00,160 --> 00:15:04,990
not to specify that until we run the program and it blows up if it blows up.

213
00:15:04,990 --> 00:15:07,240
And then I will know, OK, maybe I should do that.

214
00:15:07,570 --> 00:15:12,760
So I'm going to leave that out for right now and just roll the dice and see what we get.

215
00:15:13,330 --> 00:15:13,750
All right.

216
00:15:14,200 --> 00:15:19,780
So now this part would be all of this.

217
00:15:21,380 --> 00:15:28,390
All right, and now we're ready to multiply D or all of this times.

218
00:15:28,430 --> 00:15:31,190
See our contribution.

219
00:15:32,030 --> 00:15:34,340
And again, that's going to be pretty easy.

220
00:15:35,380 --> 00:15:40,840
So I'm going to just call it E equals D.

221
00:15:41,880 --> 00:15:48,030
Multiplied by new big decimal contribution.

222
00:15:49,690 --> 00:15:50,260
There we go.

223
00:15:51,800 --> 00:15:52,970
And so now.

224
00:15:54,370 --> 00:15:58,900
Variable E represents all of that.

225
00:16:01,080 --> 00:16:07,620
And by the way, I mean, maybe I would I may or may not always break everything down so explicitly

226
00:16:07,620 --> 00:16:09,750
and then had these inline comments.

227
00:16:10,020 --> 00:16:14,520
I suppose I'm partially doing that for clarity for you because you're following along.

228
00:16:14,550 --> 00:16:20,040
I'm not saying that I wouldn't, though I might not do it quite so explicitly on every single line in

229
00:16:20,040 --> 00:16:20,580
real life.

230
00:16:20,580 --> 00:16:22,600
But it's not a bad way to go, really.

231
00:16:22,620 --> 00:16:24,510
You know, it's super clear, right?

232
00:16:24,690 --> 00:16:25,410
All right.

233
00:16:25,770 --> 00:16:34,650
Now what I am inclined to do is tackle this side of the plus side by itself.

234
00:16:35,400 --> 00:16:41,250
And then once I have all of that built up, then the last thing I will do is do this addition on both

235
00:16:41,610 --> 00:16:47,580
as opposed to I mean, that's pretty much the only approach that makes any sense to me because we've

236
00:16:47,580 --> 00:16:50,940
got this term already calculated in a right.

237
00:16:51,270 --> 00:16:54,630
And now we need to multiply it times the P and the Y.

238
00:16:54,630 --> 00:17:00,510
So the multiplication here would take precedence over anything we could do with this addition anyway.

239
00:17:00,690 --> 00:17:07,230
And so in terms of the order of operations and the precedent of everything, this addition would have

240
00:17:07,230 --> 00:17:09,250
to be the last thing we would do.

241
00:17:09,300 --> 00:17:09,660
Right.

242
00:17:09,660 --> 00:17:15,900
Because addition comes after multiplication in general, unless you got parentheses and things.

243
00:17:15,930 --> 00:17:24,360
Now I think we can get away with doing this multiplication of the P in the Y in this term, a all in

244
00:17:24,360 --> 00:17:27,390
one fell swoop, though let's let's see if we can.

245
00:17:27,720 --> 00:17:32,070
So let's create another big decimal we'll call this f equals.

246
00:17:32,640 --> 00:17:38,220
And I don't know, we can start off with the OnePlus R, which is a right right there.

247
00:17:38,220 --> 00:17:39,820
OnePlus R is a.

248
00:17:40,170 --> 00:17:46,980
So we can start off with a multiply times the principal p the principal.

249
00:17:46,980 --> 00:17:53,310
So we'll do a new big decimal and then we can just pass in principle like so.

250
00:17:54,210 --> 00:18:03,060
And then I think we can just do another multiply and then add in the the why, which is our period.

251
00:18:07,320 --> 00:18:15,780
Like so, OK, so here we combined a couple of math operations, all in one line, and we kind of strung

252
00:18:15,780 --> 00:18:17,250
them together a daisy chain.

253
00:18:17,340 --> 00:18:21,600
This is called method chaining when you just keep calling methods like that.

254
00:18:21,750 --> 00:18:26,070
I don't like to do a whole lot of it in many cases, but in this particular case, it's cool.

255
00:18:26,220 --> 00:18:31,020
I mean, there may have been a way that we might have figured out how to method chain the whole entire

256
00:18:31,020 --> 00:18:37,650
thing, but it would have made for a very difficult to understand and difficult to debug bit of code,

257
00:18:37,860 --> 00:18:38,820
most likely.

258
00:18:39,000 --> 00:18:43,950
And so that's why I opted not to do that for the whole entire formula or not to even try.

259
00:18:44,040 --> 00:18:44,370
All right.

260
00:18:44,400 --> 00:18:46,260
And so finally.

261
00:18:47,580 --> 00:18:50,610
I think we only have one bit more to do.

262
00:18:51,780 --> 00:18:57,850
We will now take F and ad. Let's see.

263
00:18:57,870 --> 00:19:05,730
So this term now I got to go find it's this one right here, right, which is e so f + e well, that's

264
00:19:05,730 --> 00:19:06,360
easy enough.

265
00:19:06,990 --> 00:19:08,520
F + e.

266
00:19:10,270 --> 00:19:18,190
And then we can return the result, which is, gee, there we go now, let's see if this actually works.

267
00:19:19,450 --> 00:19:25,480
So to try this out, I will create a public static void method main here so that we have a method that

268
00:19:25,480 --> 00:19:26,970
we can actually run.

269
00:19:26,980 --> 00:19:34,480
And you know, actually, since this calculate method does not depend on any variables from outside

270
00:19:34,480 --> 00:19:34,690
of it.

271
00:19:34,690 --> 00:19:38,140
In other words, all of its input is kind of self-contained.

272
00:19:38,230 --> 00:19:45,520
There's no reason why we should need to instantiate or create an instance of this calculator class.

273
00:19:45,530 --> 00:19:50,890
So if we want to call this calculate method, the easiest thing we could do is just make this method

274
00:19:50,890 --> 00:19:51,580
static.

275
00:19:53,430 --> 00:19:58,590
And that way, we don't have to create an instance of the compound interest count, if you don't know

276
00:19:58,590 --> 00:19:59,820
what I'm referring to.

277
00:19:59,850 --> 00:20:08,820
I will just remind you that when a method is static, we don't need to instantiate the class that it

278
00:20:08,820 --> 00:20:11,160
lives on in order to call it.

279
00:20:11,730 --> 00:20:12,210
OK.

280
00:20:12,690 --> 00:20:18,180
So if I had wanted to call this calculate method without making it static, I would first have had to

281
00:20:18,210 --> 00:20:20,190
do something like compound interest.

282
00:20:20,190 --> 00:20:27,390
Calc count equals new compound interest count like this.

283
00:20:27,630 --> 00:20:29,550
Then I could call Calc Dot.

284
00:20:30,890 --> 00:20:38,000
Calculate, but if I didn't want to go through all of that, I could simply make this calculate method

285
00:20:38,000 --> 00:20:38,870
static.

286
00:20:39,680 --> 00:20:51,380
And by doing so, we can just call it directly by doing compound interest, calc dot calculate just

287
00:20:51,380 --> 00:20:51,950
like that.

288
00:20:52,070 --> 00:20:53,810
And we will do so.

289
00:20:54,890 --> 00:21:02,630
So now let's come up with some values, so let's start with a principle of 10000.

290
00:21:04,250 --> 00:21:05,000
Dollars.

291
00:21:07,180 --> 00:21:21,820
And a rate of, oh, I don't know, let's two point zero eight, so eight percent and a period of 10

292
00:21:21,820 --> 00:21:31,610
years with an annual contribution of one thousand dollars and then let's capture the output of that.

293
00:21:32,440 --> 00:21:36,250
And that would be our it would be our balance.

294
00:21:37,470 --> 00:21:38,850
And then let's print that.

295
00:21:40,690 --> 00:21:41,050
All right.

296
00:21:41,080 --> 00:21:42,760
Let's run this and see what we get.

297
00:21:43,240 --> 00:21:44,650
Let's see if it blows up or not.

298
00:21:45,670 --> 00:21:57,040
OK does not blow up, so it says we would get 230000, $500 so in 10 years at eight percent with a thousand

299
00:21:57,040 --> 00:22:03,410
dollars added per year and starting with 10 grand, you'd end up with $230000.

300
00:22:03,430 --> 00:22:05,740
So now let's see if this is actually correct.

301
00:22:05,980 --> 00:22:13,960
And to do that, we will go back over to our compound interest calculator here and let's actually run

302
00:22:13,960 --> 00:22:14,230
it.

303
00:22:15,010 --> 00:22:21,910
So I just clicked on the calculator link here, so let's plug in those same numbers which have already

304
00:22:21,910 --> 00:22:22,630
kind of forgotten.

305
00:22:23,020 --> 00:22:28,600
So let's see here for the current principal, we said ten thousand.

306
00:22:30,430 --> 00:22:36,820
And for the annual edition, we said one thousand and for the years to grow, we said ten years.

307
00:22:37,000 --> 00:22:41,110
And we said and a rate of eight percent.

308
00:22:41,140 --> 00:22:47,620
Now notice here I'm entering an integer of eight because they're telling me that it's meant to be percent.

309
00:22:47,620 --> 00:22:53,490
So they're going to do the math for me and we can revise our application to to do that for us as well.

310
00:22:53,500 --> 00:22:59,530
But in our application right now, the way that it's written, we have to pass it in as an actual decimal

311
00:22:59,530 --> 00:23:01,390
point of zero point zero eight.

312
00:23:01,600 --> 00:23:02,320
All right.

313
00:23:02,650 --> 00:23:05,980
And now when we hit the calculate button, let's see what we get.

314
00:23:06,200 --> 00:23:06,610
Oh.

315
00:23:08,130 --> 00:23:09,090
Way different.

316
00:23:09,390 --> 00:23:12,390
Thirty seven thousand two hundred thirty four.

317
00:23:12,690 --> 00:23:16,560
OK, so we got the wrong answer there, so let's figure out why.

318
00:23:17,640 --> 00:23:23,890
So looking back at our formula, I think I already see what the problem is here.

319
00:23:24,600 --> 00:23:39,120
When I copied and pasted this formula into our code right here, these y's here, these two y's turned

320
00:23:39,120 --> 00:23:46,230
into terms that are being multiplied, whereas and I should have known that looked weird, whereas in

321
00:23:46,230 --> 00:23:49,890
the original formula, they are actually exponents.

322
00:23:50,400 --> 00:23:55,260
In fact, I kind of felt like it was a little easier than I was expecting it to have been.

323
00:23:55,650 --> 00:23:56,480
And that is why.

324
00:23:56,490 --> 00:23:59,480
So these y's here are an exponent.

325
00:23:59,490 --> 00:24:05,160
But when I copied and pasted them, they just turned into values that looked like they were just being

326
00:24:05,160 --> 00:24:08,070
multiplied times the rest of this.

327
00:24:08,370 --> 00:24:10,020
So we need to just fix that.

328
00:24:10,050 --> 00:24:10,470
We need.

329
00:24:10,860 --> 00:24:19,530
We don't want to multiply p times one plus our times y we want one plus r to the Y power.

330
00:24:19,650 --> 00:24:20,080
OK.

331
00:24:20,100 --> 00:24:20,970
That's what we want.

332
00:24:21,150 --> 00:24:23,460
So actually, I think this will be pretty easy.

333
00:24:23,730 --> 00:24:29,580
We stored one plus R in its own term and it was the very first term that we tackled.

334
00:24:29,820 --> 00:24:37,680
So I think what we can do is simply just add on this to the y power to that first term, and we're good.

335
00:24:38,190 --> 00:24:40,590
So we'll come over here.

336
00:24:40,650 --> 00:24:48,510
Here's that first term a right where we did one plus r here is the one plus R right here.

337
00:24:48,630 --> 00:24:53,660
And I think what we can do is simply chain one more method call on here.

338
00:24:53,670 --> 00:25:00,150
And so first off, in the comments here, I'm going to represent the raising of two a power with the

339
00:25:00,150 --> 00:25:05,730
carrot symbol, which is a common symbol used for that and a lot of programming anyway.

340
00:25:06,090 --> 00:25:11,160
So we will say that that will be raised to the Y and here Y is, period.

341
00:25:11,310 --> 00:25:11,790
OK.

342
00:25:12,360 --> 00:25:13,800
And so that's how we'll do that.

343
00:25:14,100 --> 00:25:21,090
And so here what we'll do is we'll just chain now to raise to a power.

344
00:25:21,330 --> 00:25:28,230
We use the P.O.W or power method right here and we can pass in an integer.

345
00:25:28,380 --> 00:25:35,460
And that was the other reason why I chose to model the period as an integer because as I was looking

346
00:25:35,460 --> 00:25:39,590
here and I saw that this was to be raised to that value.

347
00:25:39,660 --> 00:25:44,640
I knew that the power method would be needed and the power method takes an integer.

348
00:25:44,640 --> 00:25:48,810
And so this would be a very nice, easy, direct way to do this.

349
00:25:49,260 --> 00:25:49,590
All right.

350
00:25:49,590 --> 00:25:53,670
So we'll just pass in the word period right there.

351
00:25:53,670 --> 00:26:02,400
And now we need to fix what we were doing with this, though, where we were multiplying right here,

352
00:26:02,670 --> 00:26:10,350
one plus our times y let's see, we were doing that right here, so we no longer need to do that.

353
00:26:10,650 --> 00:26:17,310
So let's see how that's going to look now if we stop doing this.

354
00:26:17,760 --> 00:26:21,210
And what I'm thinking here is Liz's commented out and then see what breaks.

355
00:26:21,960 --> 00:26:22,420
OK?

356
00:26:22,440 --> 00:26:31,020
So we were doing b minus one, which was this one plus are supposed to be to the Y minus one.

357
00:26:31,140 --> 00:26:34,110
So I think what we can do now is simply do a.

358
00:26:36,840 --> 00:26:44,340
A, which would be one plus R to the Y power and then C would be all of that minus one.

359
00:26:44,610 --> 00:26:49,950
So look how easy it was to fix this because we broke it down into small pieces, right?

360
00:26:50,220 --> 00:26:53,250
And so, yeah, I don't think we need this metal piece.

361
00:26:53,250 --> 00:26:54,870
I'm going to go ahead and delete it now.

362
00:26:54,960 --> 00:26:59,940
Sometimes I'm what I might have done instead is just to run this whole program, but I'm pretty confident

363
00:26:59,940 --> 00:27:01,970
that we're going down the right road.

364
00:27:01,980 --> 00:27:05,550
I'm not going to promise it's all going to work perfectly just yet, but I think we're going down the

365
00:27:05,550 --> 00:27:09,480
right road, so I'm comfortable to delete this line here.

366
00:27:09,840 --> 00:27:10,580
All right.

367
00:27:10,590 --> 00:27:17,070
And in fact, let me just fix this also, and I'm going to fix that everywhere, I suppose now.

368
00:27:19,320 --> 00:27:20,190
All right.

369
00:27:21,560 --> 00:27:26,630
Let's see, we did have this term one plus R to the Y.

370
00:27:27,230 --> 00:27:29,330
A couple of times, though.

371
00:27:30,170 --> 00:27:33,230
All right, so let's run this again and see what we get now.

372
00:27:34,890 --> 00:27:38,640
Let's see, was that two hundred thirty thousand three hundred seventy nine?

373
00:27:39,690 --> 00:27:41,970
Let's see what we got over here.

374
00:27:42,810 --> 00:27:47,340
Nope, still completely wrong because here we're getting 37000.

375
00:27:48,570 --> 00:27:51,210
Here we're getting 230000.

376
00:27:51,480 --> 00:28:00,660
OK, I suspect the issue is with this this part p times one plus are to the why.

377
00:28:00,840 --> 00:28:05,220
So let's find that p times one plus are.

378
00:28:06,350 --> 00:28:11,450
OK, here, I think it is, and see, I already had forgotten to put the comment there.

379
00:28:11,840 --> 00:28:13,850
And so that took me a little longer to find it.

380
00:28:13,850 --> 00:28:18,320
So that's a good reason why I probably should have kept using the comments.

381
00:28:18,980 --> 00:28:28,730
So a which is now one plus are to the period times principle are times period.

382
00:28:28,740 --> 00:28:30,230
So we don't need this now.

383
00:28:30,260 --> 00:28:33,110
Yeah, this is wrong time period.

384
00:28:34,050 --> 00:28:35,160
We don't need that.

385
00:28:36,030 --> 00:28:37,500
In fact, we don't want that.

386
00:28:38,580 --> 00:28:46,830
OK, so now what we have is a which would be all of that.

387
00:28:48,350 --> 00:28:50,900
Oops, forgot to comment it.

388
00:28:52,510 --> 00:28:53,750
All of that.

389
00:28:54,580 --> 00:28:55,240
Times.

390
00:28:57,230 --> 00:28:57,950
Principal.

391
00:29:00,700 --> 00:29:01,810
Which is what we have here.

392
00:29:04,130 --> 00:29:05,240
P times.

393
00:29:06,330 --> 00:29:06,690
A.

394
00:29:09,400 --> 00:29:14,200
Let's run it again and see, hey, I think that's looking like a winner.

395
00:29:14,230 --> 00:29:18,340
Thirty six thousand seventy five and eighty one cents.

396
00:29:19,570 --> 00:29:21,400
Let's go back here.

397
00:29:23,150 --> 00:29:25,460
Ooh, little bit off, huh?

398
00:29:26,530 --> 00:29:30,010
We've got 37000 to 34.

399
00:29:30,640 --> 00:29:31,170
OK.

400
00:29:31,540 --> 00:29:32,890
What is that all about?

401
00:29:41,630 --> 00:29:42,270
Let's see.

402
00:29:42,290 --> 00:29:44,210
Thirty six thousand seventy five.

403
00:29:44,360 --> 00:29:47,280
Here we've got thirty seven thousand two hundred thirty four.

404
00:29:47,300 --> 00:29:53,480
Now what this may be is the difference between making annual additions at the start or at the end of

405
00:29:53,480 --> 00:29:54,570
the compounding period.

406
00:29:54,590 --> 00:29:55,700
Let's see what we get.

407
00:29:55,700 --> 00:29:59,570
If we say at the end are that that's the difference right there.

408
00:29:59,780 --> 00:30:06,560
So the formula that we were using was one that gives us the compounding at the end of each period,

409
00:30:06,560 --> 00:30:07,220
which is fine.

410
00:30:07,220 --> 00:30:08,570
I don't care which one we use.

411
00:30:08,780 --> 00:30:11,720
We just needed to make sure we were comparing apples to apples here.

412
00:30:12,110 --> 00:30:20,300
So when we switch that over, we get the exact same number 36000, 75 and 81 cents, thirty six thousand

413
00:30:20,300 --> 00:30:22,250
seventy five and 81 cents.

414
00:30:22,640 --> 00:30:23,360
There we go.

415
00:30:23,780 --> 00:30:24,250
OK.

416
00:30:24,620 --> 00:30:32,360
So we have just implemented a nice little compound interest calculator in Java, and we ran into a little

417
00:30:32,360 --> 00:30:33,050
bit of trouble.

418
00:30:33,320 --> 00:30:35,250
I'm going to leave that in this lesson.

419
00:30:35,270 --> 00:30:40,910
Hopefully, it won't confuse you, but you'll get to see that even a professional can make dumb mistakes

420
00:30:40,910 --> 00:30:42,380
sometimes in this case.

421
00:30:42,500 --> 00:30:48,530
I was led astray by the fact that I, you know, copied and pasted this in here, and then that changed

422
00:30:48,530 --> 00:30:50,900
the interpretation of the formula itself.

423
00:30:51,080 --> 00:30:58,670
And I didn't quite catch it before it hurt us, but it was easy enough to fix right now in the next

424
00:30:58,670 --> 00:30:59,340
lesson.

425
00:30:59,360 --> 00:31:06,950
Let's learn how we can format these strings so that they look nice because you wouldn't want to show

426
00:31:06,950 --> 00:31:09,770
this to your users of your program.

427
00:31:10,130 --> 00:31:11,870
So we'll do that in the next video.
