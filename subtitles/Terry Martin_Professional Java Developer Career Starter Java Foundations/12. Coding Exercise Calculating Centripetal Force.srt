1
00:00:00,540 --> 00:00:00,970
All right.

2
00:00:00,990 --> 00:00:03,210
So in this lesson, let's do some more math.

3
00:00:03,600 --> 00:00:09,330
So here in the browser, I have pulled up some random physics website someplace where it's teaching

4
00:00:09,330 --> 00:00:11,550
how to solve some physics problem.

5
00:00:11,790 --> 00:00:13,830
I don't actually care about this problem at all.

6
00:00:13,830 --> 00:00:19,020
I was just looking for something a little more difficult than what we previously did.

7
00:00:19,140 --> 00:00:27,000
And this looks like a halfway decent little problem because it looks like it requires us to solve three

8
00:00:27,000 --> 00:00:30,450
different formulas to get the final answer.

9
00:00:30,810 --> 00:00:38,730
So I want to show how we can do some maybe intermediate level, you know, math in Java or how we could

10
00:00:39,060 --> 00:00:39,630
at least.

11
00:00:39,660 --> 00:00:39,990
OK.

12
00:00:40,260 --> 00:00:42,960
So don't worry, if you don't know physics, it doesn't matter.

13
00:00:42,960 --> 00:00:44,840
We don't care about the physics of this.

14
00:00:44,850 --> 00:00:49,180
We just want to find some formulas to translate into Java code.

15
00:00:49,200 --> 00:00:51,270
That's that's really all we're trying to do here.

16
00:00:52,200 --> 00:00:52,470
All right.

17
00:00:52,480 --> 00:00:59,310
So looks like ultimately what we're wanting to solve in this particular problem is centripetal force,

18
00:00:59,580 --> 00:01:04,800
and they give a formula which is ethical a which is a pretty common formula there.

19
00:01:05,100 --> 00:01:05,430
OK?

20
00:01:05,640 --> 00:01:12,510
And it looks like the way that they plug in the numbers for M and A is partially they are given like

21
00:01:12,510 --> 00:01:20,940
this 0.2 kg is given as the mass of a ball and three point five four was calculated up here using the

22
00:01:20,940 --> 00:01:23,790
formula for centripetal acceleration.

23
00:01:24,030 --> 00:01:28,980
OK, so we're going to have to solve for centripetal acceleration and it looks like in order to solve

24
00:01:28,980 --> 00:01:37,470
for that, we need a velocity with this one point six seven and they got the velocity by calculating

25
00:01:37,470 --> 00:01:41,730
something called pass velocity using this formula here.

26
00:01:41,880 --> 00:01:47,130
So we're going to just implement these formulas and then see if we get the same answers.

27
00:01:47,580 --> 00:01:48,060
All right.

28
00:01:48,060 --> 00:01:48,900
Let's have some fun.

29
00:01:49,050 --> 00:01:49,380
All right.

30
00:01:49,390 --> 00:01:53,310
So let's start off by calculating the path velocity.

31
00:01:53,700 --> 00:01:55,290
Now it looks here.

32
00:01:55,770 --> 00:02:00,810
So first thing we want to figure out is what are our inputs for this formula?

33
00:02:01,050 --> 00:02:06,120
And I don't know if they made a mistake here because I think this three here is actually one of the

34
00:02:06,120 --> 00:02:06,540
inputs.

35
00:02:06,540 --> 00:02:11,580
I think it came from the word problem up above where it says that something is happening every three

36
00:02:11,580 --> 00:02:12,210
seconds.

37
00:02:12,210 --> 00:02:14,250
I think that's where they got that three from.

38
00:02:14,450 --> 00:02:19,320
And then I was thinking usually on the left hand side, they're showing the pure formula and then to

39
00:02:19,320 --> 00:02:21,750
the right of the equals, they're plugging in the values.

40
00:02:21,750 --> 00:02:23,370
I think they may have made a mistake here.

41
00:02:23,520 --> 00:02:27,960
So I'm going to assume that this should be a variable that we would pass in.

42
00:02:28,200 --> 00:02:28,440
All right.

43
00:02:28,440 --> 00:02:34,800
So let's let's make a function that solves for the path velocity, first of all.

44
00:02:36,000 --> 00:02:39,810
So we'll make a new function and we'll just use doubles for everything.

45
00:02:41,200 --> 00:02:43,510
Public static double.

46
00:02:43,930 --> 00:02:54,070
All right, so we'll calculate path velocity and our inputs looks like our radius.

47
00:02:54,250 --> 00:03:00,010
I don't think the two is part of it because you'll often see formulas that are related to circles and

48
00:03:00,010 --> 00:03:06,740
things like what we had just done before, where the the formula will be something like two pi are or,

49
00:03:06,760 --> 00:03:08,770
you know, something along those lines, right?

50
00:03:09,010 --> 00:03:11,740
So I'm not going to make that two part of the inputs.

51
00:03:11,740 --> 00:03:13,990
I think that's a given with the formula.

52
00:03:14,020 --> 00:03:17,470
I think our inputs will be the radius.

53
00:03:17,830 --> 00:03:21,160
And I guess this would be a period the three there.

54
00:03:21,850 --> 00:03:22,240
All right.

55
00:03:22,420 --> 00:03:24,880
So that's what I'm going to make it, at least.

56
00:03:24,880 --> 00:03:33,460
So we'll have a double of a radius again and we'll do a double for the period as well, even though

57
00:03:33,460 --> 00:03:37,330
here it is conveyed as a as an integer.

58
00:03:37,330 --> 00:03:38,260
But that's all right.

59
00:03:38,770 --> 00:03:39,430
Period.

60
00:03:41,320 --> 00:03:41,920
All right.

61
00:03:42,160 --> 00:03:49,210
And so the formula here is two pi times the radius.

62
00:03:49,900 --> 00:03:56,500
So that's really similar to what we did up here for the area of a circle, except that we raised it

63
00:03:56,500 --> 00:04:01,330
to the second power and and the pie isn't multiplied times two.

64
00:04:01,720 --> 00:04:03,610
And then all of that divided by three.

65
00:04:04,000 --> 00:04:12,490
OK, so when you want to implement formulas like this, it's really good and useful to break them down

66
00:04:12,490 --> 00:04:13,780
in some way.

67
00:04:14,110 --> 00:04:14,560
OK?

68
00:04:14,680 --> 00:04:22,120
If you know what these terms actually are in terms of the real world, you can make variables that are

69
00:04:22,120 --> 00:04:25,900
named after whatever those actually may be if you know what they are.

70
00:04:26,620 --> 00:04:32,470
OK, so to Pi R, I think is the formula for the circumference of a circle.

71
00:04:33,010 --> 00:04:33,940
I'm a little rusty.

72
00:04:34,330 --> 00:04:35,170
Let's see here.

73
00:04:35,290 --> 00:04:42,160
Circumference, loop circumference of a circle.

74
00:04:42,310 --> 00:04:43,210
Form you.

75
00:04:45,670 --> 00:04:47,020
To PR, yes, it is.

76
00:04:47,050 --> 00:04:55,300
OK, so that's the circumference of a circle, so we could make a variable inside of our function to

77
00:04:55,300 --> 00:04:59,860
first hold on to this value and call that variable circumference.

78
00:05:00,550 --> 00:05:04,990
And then it would be easier to do this division afterwards.

79
00:05:04,990 --> 00:05:08,590
So you see what I'm trying to do, I'm trying to figure out places to break this down.

80
00:05:08,770 --> 00:05:11,830
Let me go ahead and do it, and you'll see a little more of what I mean here.

81
00:05:11,830 --> 00:05:15,610
So we could create what's called a local variable.

82
00:05:15,610 --> 00:05:21,220
That's a variable that only exists within the function itself and not outside of it.

83
00:05:21,460 --> 00:05:23,620
Not like a field of the class.

84
00:05:23,680 --> 00:05:24,160
OK.

85
00:05:24,670 --> 00:05:28,090
So we'll make a variable that is a double.

86
00:05:28,360 --> 00:05:32,230
We'll call it Sir Conference.

87
00:05:33,640 --> 00:05:37,480
And will say that it is equal to two.

88
00:05:38,800 --> 00:05:47,770
Times math, not pi times radius, OK?

89
00:05:48,400 --> 00:05:52,390
That's what we have here are two times PI times radius.

90
00:05:52,480 --> 00:05:52,840
All right.

91
00:05:52,850 --> 00:06:02,590
So there's our circumference and then the path velocity is that circumference divided by what I assume

92
00:06:02,590 --> 00:06:03,580
is a period.

93
00:06:04,270 --> 00:06:08,290
Forgive me any math experts if I'm referring to these terms incorrectly.

94
00:06:08,860 --> 00:06:09,280
All right.

95
00:06:09,370 --> 00:06:18,730
So we will return circumference, which is the two pi times point zero eight here divided by.

96
00:06:20,190 --> 00:06:20,910
The period.

97
00:06:22,520 --> 00:06:22,970
OK.

98
00:06:24,160 --> 00:06:26,920
Just like that, and now we can test this out.

99
00:06:29,360 --> 00:06:40,700
So we'll do this out, we'll call calculate path velocity, and we will pass in a radius of zero point

100
00:06:40,700 --> 00:06:45,210
eight and a period of three.

101
00:06:45,440 --> 00:06:47,730
And let's run that and see what we get.

102
00:06:47,750 --> 00:06:49,640
Hopefully, we get the one point sixty seven.

103
00:06:49,820 --> 00:06:50,640
Hey, we do.

104
00:06:50,660 --> 00:06:52,820
One point six, seven and a lot more.

105
00:06:53,030 --> 00:06:56,390
OK, so I think we're we're on the right track here.

106
00:06:56,720 --> 00:06:57,200
All right.

107
00:06:58,340 --> 00:07:05,690
Now, the next thing we need to calculate is the centripetal acceleration using this formula.

108
00:07:05,870 --> 00:07:14,060
So it looks like for this one, we take the path velocity squared divided by the radius.

109
00:07:14,480 --> 00:07:20,240
OK, so let's make let's make that method now.

110
00:07:21,410 --> 00:07:29,840
So another method public static double calculate spin trip.

111
00:07:31,290 --> 00:07:36,060
It'll acceleration, and I'm just going to abbreviate that part.

112
00:07:36,180 --> 00:07:48,660
Let's see, and our input or inputs for this will be the path velocity, which will be a double path

113
00:07:48,930 --> 00:07:49,730
vehicle.

114
00:07:49,770 --> 00:07:57,630
I will call it karma and our radius, which will also be a double radius.

115
00:07:59,870 --> 00:08:00,590
All right.

116
00:08:00,890 --> 00:08:04,430
And I don't think I need to break this one down.

117
00:08:04,460 --> 00:08:06,740
This one looks a little simpler to me.

118
00:08:07,010 --> 00:08:15,050
So let's try this now I could if I wanted to, but I don't think it's necessary, so I will simply return

119
00:08:15,890 --> 00:08:16,910
the.

120
00:08:17,600 --> 00:08:23,860
So we need to we need to have the square of the path velocity.

121
00:08:23,870 --> 00:08:33,170
So to do that, we can use the masked power method and then pass in the path the ill to the second power.

122
00:08:33,180 --> 00:08:36,680
Or we could have also just done Path Ville Times Path Bill.

123
00:08:36,950 --> 00:08:37,310
Right?

124
00:08:37,400 --> 00:08:38,000
Either one.

125
00:08:39,080 --> 00:08:45,140
OK, so all of that divided by the radius.

126
00:08:46,220 --> 00:08:52,370
So I just felt like this one is simple enough that we don't need an intermediate variable, but we certainly

127
00:08:52,370 --> 00:08:56,690
could have created one if we wanted to, and I could even extract one out even now.

128
00:08:56,720 --> 00:08:59,180
In fact, I'll just show that just for grins, right?

129
00:08:59,180 --> 00:09:05,210
So I can always select this whole thing here and then do a command option v right?

130
00:09:05,420 --> 00:09:08,660
And then all this, I guess velocity.

131
00:09:08,900 --> 00:09:13,700
Right now, I'm not going to go through with this, but I was just showing you that I could have done

132
00:09:13,700 --> 00:09:15,140
that if I wanted to.

133
00:09:15,800 --> 00:09:18,560
OK, so now let's test that out.

134
00:09:19,520 --> 00:09:21,020
So if we come up here?

135
00:09:23,070 --> 00:09:24,180
I'll make a new line.

136
00:09:25,920 --> 00:09:33,960
System that out, that print line count, calculate centripetal acceleration will pass in the one point

137
00:09:33,960 --> 00:09:39,690
sixty seven and then the radius of zero point eight.

138
00:09:40,710 --> 00:09:44,780
Sorry, I know you can't see that, but there's the point eight there.

139
00:09:46,780 --> 00:09:49,900
All right, and so let's run this and see what we get.

140
00:09:50,380 --> 00:09:52,820
Three point four eight six one two five.

141
00:09:52,840 --> 00:09:55,270
Here they got three point five oh four.

142
00:09:55,280 --> 00:09:57,220
Yeah, I guess close enough.

143
00:09:58,600 --> 00:10:03,410
And so finally, we need to calculate the centripetal force.

144
00:10:03,760 --> 00:10:11,260
And that is done with F equals may or one of the variations of that equals a super common formula.

145
00:10:11,800 --> 00:10:21,430
And so now we will take a given, which is the mass of the ball point two kilograms times the centripetal

146
00:10:21,430 --> 00:10:22,450
acceleration.

147
00:10:22,450 --> 00:10:24,310
So this will be a very easy one.

148
00:10:25,520 --> 00:10:26,060
OK.

149
00:10:27,930 --> 00:10:43,140
So public static double calculate, thin tread bid or force, taking a double of the mass.

150
00:10:44,690 --> 00:10:48,860
And a double of the.

151
00:10:50,580 --> 00:10:57,150
Centripetal acceleration, which I'm just going to call ask because I don't feel like typing more and

152
00:10:57,150 --> 00:11:02,220
then we will return mass times.

153
00:11:04,680 --> 00:11:06,000
So that's a really easy one.

154
00:11:06,480 --> 00:11:07,770
C So that's so easy.

155
00:11:07,780 --> 00:11:11,460
I almost don't feel like we need to test it, but we will.

156
00:11:15,450 --> 00:11:21,120
Calculate centripetal force with a mass of point two.

157
00:11:22,650 --> 00:11:27,930
Comma and then the input of the centripetal acceleration.

158
00:11:28,620 --> 00:11:36,650
So we'll give it the given here 3.5 oh four, and then let's run that, OK?

159
00:11:36,690 --> 00:11:41,010
Yeah, and we got point seven zero zero eight and then a bunch of zeros there.

160
00:11:41,370 --> 00:11:48,360
Now we could make this final method really smart.

161
00:11:48,810 --> 00:11:56,520
Let me I'm going to move this out of the way and get back to a more reasonable size here for the HD.

162
00:11:59,860 --> 00:12:06,310
OK, now there's a few things we could do if we wanted to to make this a little more powerful here,

163
00:12:06,310 --> 00:12:09,910
since this is the main thing that we're really wanting anyway.

164
00:12:10,180 --> 00:12:18,130
We could choose to combine these methods to make one powerful method that calculates the centripetal

165
00:12:18,130 --> 00:12:23,140
force and takes a few more inputs, like takes all of the inputs that we need.

166
00:12:23,440 --> 00:12:24,910
Yeah, let's let's do that.

167
00:12:24,910 --> 00:12:31,210
Let's make what we can do is we can overload this centripetal force method and make another version

168
00:12:31,210 --> 00:12:32,680
of it that takes more inputs.

169
00:12:33,190 --> 00:12:37,240
So to do that, we'll just make another double.

170
00:12:37,930 --> 00:12:46,420
We can use the same name centripetal force and we can start off with the mass.

171
00:12:49,200 --> 00:12:55,560
But now what we'll do is we'll just reference all of the unique inputs of the other methods.

172
00:12:55,920 --> 00:13:04,590
OK, so we can just pass in whichever inputs are unique and aren't already calculated from something

173
00:13:04,590 --> 00:13:05,190
else, right?

174
00:13:05,340 --> 00:13:06,780
So we need the mass.

175
00:13:07,200 --> 00:13:10,590
We don't need this path velocity because that's calculated up here.

176
00:13:10,860 --> 00:13:13,740
So this guy's inputs are the radius and the period.

177
00:13:13,980 --> 00:13:15,150
See, is there anything else?

178
00:13:15,150 --> 00:13:18,660
So I think what we need is mass radius and period.

179
00:13:18,660 --> 00:13:25,320
So mass and then a double of the radius and then a double of the period.

180
00:13:27,710 --> 00:13:29,120
I think that's all we need.

181
00:13:30,420 --> 00:13:30,840
All right.

182
00:13:31,020 --> 00:13:40,020
And then what we can do now is to call each of these methods and turn and just get everything we needed

183
00:13:40,020 --> 00:13:49,560
all in one right, so we can create a local variable of type double, which will be the path velocity

184
00:13:51,030 --> 00:13:57,900
and then we can call that method and pass in our radius and our period.

185
00:13:59,290 --> 00:14:09,040
And then we can create a another variable local variable for these centripetal acceleration, centripetal

186
00:14:09,880 --> 00:14:15,250
acceleration, and we will call that method.

187
00:14:16,830 --> 00:14:20,640
And pass in our path velocity.

188
00:14:21,590 --> 00:14:23,060
And radius.

189
00:14:26,350 --> 00:14:32,650
And then we can finally put it all together and just return to the middle.

190
00:14:32,740 --> 00:14:37,030
Now we could capture this last bit and then return what we capture.

191
00:14:37,040 --> 00:14:38,200
In fact, they'll show you that.

192
00:14:38,470 --> 00:14:52,030
So we could calculate the centripetal force explicitly like so and call the count centripetal force

193
00:14:52,420 --> 00:14:53,110
method.

194
00:14:53,890 --> 00:15:00,910
Now notice I'm in a method called calc centripetal force, but I'm calling a method called calc centripetal

195
00:15:00,910 --> 00:15:03,490
force because I'm overloading this method, right?

196
00:15:03,730 --> 00:15:09,280
So the idea in Java are smart enough to understand what I mean here based on what inputs I passed,

197
00:15:09,280 --> 00:15:14,860
though, as long as the inputs are different, you can have the same method in terms of the naming of

198
00:15:14,860 --> 00:15:15,040
it.

199
00:15:15,460 --> 00:15:15,730
All right.

200
00:15:15,730 --> 00:15:24,430
So calc centripetal force it once a mass, so we'll pass in the mass and then at once, the acceleration.

201
00:15:24,430 --> 00:15:26,620
So centripetal acceleration.

202
00:15:28,670 --> 00:15:32,150
And then we can just return the centripetal force.

203
00:15:33,510 --> 00:15:39,000
Like so now this is a pretty nice method that does everything, in fact.

204
00:15:39,030 --> 00:15:39,300
Hold on.

205
00:15:39,300 --> 00:15:40,440
Let me just bring it back.

206
00:15:40,440 --> 00:15:46,080
That does everything that all of these separate steps we're doing.

207
00:15:46,080 --> 00:15:47,700
It puts it all together in one.

208
00:15:47,700 --> 00:15:49,890
So that's quite nice, actually.

209
00:15:50,100 --> 00:15:55,860
So what I will often do if I were breaking something down the way that I broke it down here, but then

210
00:15:55,860 --> 00:15:59,940
I was putting it all back together in one nice, easy method or something.

211
00:16:00,090 --> 00:16:08,460
There's a good chance that I might choose to make these other methods private now and hold on.

212
00:16:08,670 --> 00:16:15,670
Now just depends on how I think this class would be used in the future.

213
00:16:16,770 --> 00:16:25,500
But if I consider these methods to be intermediate methods that I only broke out just to make it easier

214
00:16:25,500 --> 00:16:30,060
for my brain to handle, you know what's going on in small little bite sized pieces?

215
00:16:30,240 --> 00:16:32,970
And then to kind of put it all together in this last one?

216
00:16:33,120 --> 00:16:40,320
And I'm thinking I or other people who may call this class don't need to directly be calling these little

217
00:16:40,320 --> 00:16:40,860
guys.

218
00:16:41,130 --> 00:16:48,270
And really all that's needed or all I want to expose is just this main guy here, then yeah, I can

219
00:16:48,270 --> 00:16:56,610
make these other methods private so that other callers of this class can't call these smaller bits right.

220
00:16:56,640 --> 00:17:00,030
They can only call this main guy here who puts it all together.

221
00:17:00,150 --> 00:17:04,560
And so that's a nice example of why you will sometimes want things.

222
00:17:04,590 --> 00:17:07,770
Some methods to be private versus public or something like that.

223
00:17:07,950 --> 00:17:14,370
But it all just depends on how you, the creator or author of the class, intend for that class to be

224
00:17:14,370 --> 00:17:15,000
used.

225
00:17:15,300 --> 00:17:18,540
OK, so now let's try out our big boy here.

226
00:17:19,530 --> 00:17:20,190
So.

227
00:17:22,860 --> 00:17:33,150
We will call centripetal force this version of it that takes three inputs a massive point two kilograms.

228
00:17:33,390 --> 00:17:37,800
Notice also we leave off the units, right, because that won't have any meaning here.

229
00:17:37,830 --> 00:17:38,610
We don't need it.

230
00:17:38,610 --> 00:17:43,560
You wouldn't use that either way if you were using a calculator or something, a massive point, two

231
00:17:43,590 --> 00:17:49,680
kilograms and then a radius of zero point eight.

232
00:17:50,310 --> 00:17:56,700
And our last parameter i just hit command p to show all of the parameters.

233
00:17:56,700 --> 00:17:59,070
Here will be the period of three.

234
00:17:59,460 --> 00:17:59,900
OK?

235
00:18:00,450 --> 00:18:05,220
By the way, I keep meaning to mention this throughout this course, and I don't know that I have ever

236
00:18:05,220 --> 00:18:05,820
mentioned it.

237
00:18:06,120 --> 00:18:11,640
You may all have wondered or noticed that we see the names of these of these arguments.

238
00:18:11,640 --> 00:18:14,160
Here are these parameters, arguments and parameters.

239
00:18:14,160 --> 00:18:18,030
They're kind of interchangeable, depending on whether you're from the perspective of whether you're

240
00:18:18,030 --> 00:18:24,420
calling them or when you're defining the the method, you'll hear developers use the terms interchangeably.

241
00:18:24,900 --> 00:18:25,200
OK.

242
00:18:25,290 --> 00:18:33,240
So anyway, this is showing these these parameter names here is not a standard of Java at all.

243
00:18:33,330 --> 00:18:39,120
Some languages actually do have what are called named parameters, and it's quite nice and helpful so

244
00:18:39,120 --> 00:18:41,430
that you can know what are these values.

245
00:18:41,610 --> 00:18:49,380
In this case, though, what's happening is that the IED is showing us the parameter names so that we

246
00:18:49,380 --> 00:18:52,440
can have a clue of what these numbers are for.

247
00:18:52,710 --> 00:18:54,990
Java actually doesn't do that.

248
00:18:55,050 --> 00:18:57,230
Many newer languages do, though.

249
00:18:57,240 --> 00:19:03,210
So anyway, I just wanted to point out that you'll likely be seeing these and these are not a standard

250
00:19:03,210 --> 00:19:04,290
part of Java.

251
00:19:04,440 --> 00:19:12,570
So if you were to write Java code in some other IED, maybe another IED wouldn't show you these parameter

252
00:19:12,570 --> 00:19:13,950
names by default.

253
00:19:14,670 --> 00:19:15,060
OK.

254
00:19:15,300 --> 00:19:21,390
So anyway, let's comment about everything else now.

255
00:19:21,540 --> 00:19:25,530
And one way that you can comment out, by the way, is you can select all the lines that you want to

256
00:19:25,530 --> 00:19:32,400
comment and then hit command forward slash and that comments out each individual line in one fell swoop.

257
00:19:32,790 --> 00:19:33,150
All right.

258
00:19:33,270 --> 00:19:40,020
And then let's go ahead and run this and see if we did this correctly and we get zero point seven zero

259
00:19:40,020 --> 00:19:44,910
one eight and that is close enough to what we got in the browser.

260
00:19:44,910 --> 00:19:54,180
Close enough for me, at least over here, we got zero point seven zero zero eight point seven zero

261
00:19:54,210 --> 00:19:55,500
one eight.

262
00:19:56,280 --> 00:20:02,010
Now that difference between what we're getting here and what we're getting, what was calculated in

263
00:20:02,010 --> 00:20:04,950
that website now, I don't know how the website did its calculations.

264
00:20:04,950 --> 00:20:12,870
However, I will warn you that the Java data types that we are currently using of well, in this case,

265
00:20:12,870 --> 00:20:18,810
double does have some issues which we will explore coming up really soon here.

266
00:20:19,020 --> 00:20:21,030
And so you will want to be careful of that.

267
00:20:21,210 --> 00:20:27,720
And this discrepancy that we're seeing may in fact be due to some of those issues that we will talk

268
00:20:27,720 --> 00:20:30,060
about in an upcoming lesson.

269
00:20:30,360 --> 00:20:33,480
So I just want to give you a little bit of warning here, but I don't know.

270
00:20:33,490 --> 00:20:36,930
I mean, is this close enough for your physics physics class?

271
00:20:37,080 --> 00:20:43,140
I guess it depends on your physics teacher or professor and how many significant digits they care about.

272
00:20:43,410 --> 00:20:46,710
For me in this lesson right now, this is good enough.

273
00:20:46,830 --> 00:20:51,480
We will I will show you, though, how you could have rock solid numbers.

274
00:20:51,660 --> 00:20:56,850
And that's all assuming, by the way, that this answer here on the website is the rock solid answer.

275
00:20:56,850 --> 00:20:58,860
I'm going to assume that it is OK.

276
00:20:59,070 --> 00:21:05,130
So we will address how to make sure that your answers are as accurate as they possibly can be really

277
00:21:05,130 --> 00:21:05,550
soon.

278
00:21:05,730 --> 00:21:12,360
But this, you know, we have shown, though, my purpose here was more so to kind of show you how to

279
00:21:12,360 --> 00:21:21,330
really use some of the math functions and how to translate math problems and formulas into Java code

280
00:21:21,330 --> 00:21:28,380
that you can actually execute and make it maintainable and readable with nice, small, easy to understand

281
00:21:28,380 --> 00:21:28,830
methods.

282
00:21:28,980 --> 00:21:33,840
Now I could have written one, just one method that did all of this, by the way, I absolutely could

283
00:21:33,840 --> 00:21:38,970
have done that, and that method might not have been like horrible either, because really, each of

284
00:21:38,970 --> 00:21:40,470
these is pretty simple.

285
00:21:40,560 --> 00:21:45,480
But I wanted to break this out a little bit so that it would be a little more readable and understandable

286
00:21:45,480 --> 00:21:45,840
to you.

287
00:21:46,050 --> 00:21:49,380
So that's going to wrap it up for this lesson, and I'll catch you in the next one.
