WEBVTT
1
00:00:00.510 --> 00:00:06.990
All right, so now we've got these people showing up in a list in our browser, but it doesn't look

2
00:00:06.990 --> 00:00:08.010
very nice, does it?

3
00:00:08.430 --> 00:00:14.490
So in this lesson, at least the first thing I want to do in this lesson is show you how you can make

4
00:00:14.490 --> 00:00:19.230
something like this look a lot better without a whole lot of effort.

5
00:00:19.260 --> 00:00:23.730
I hope you won't think it's too much effort, at least, so we're going to learn a little bit about

6
00:00:24.090 --> 00:00:26.590
something called SS frameworks.

7
00:00:26.610 --> 00:00:27.000
OK.

8
00:00:27.300 --> 00:00:33.150
And I'm going to introduce you to one of the most famous or most popular KSAZ frameworks, which is

9
00:00:33.150 --> 00:00:34.290
called bootstrap.

10
00:00:34.740 --> 00:00:38.430
Now, we're not going to really, truly learn a whole bunch of bootstrap.

11
00:00:38.430 --> 00:00:41.070
We're just going to make use of it, and you're just going to follow me.

12
00:00:41.070 --> 00:00:46.530
OK, so keep in mind, this whole entire section is really just the big template where I'm just going

13
00:00:46.530 --> 00:00:47.310
to give you.

14
00:00:47.670 --> 00:00:51.080
Here's how you can make things that look a certain way or whatever.

15
00:00:51.090 --> 00:00:51.330
Okay?

16
00:00:51.450 --> 00:00:59.070
Real quick, though, CSO stands for cascading style sheets, this is one of the top technologies associated

17
00:00:59.070 --> 00:00:59.970
with the web.

18
00:01:00.000 --> 00:01:03.120
So the first one that we've kind of learned here is HTML.

19
00:01:03.150 --> 00:01:07.260
I mean, we haven't learned it, but you've been introduced to it if you weren't already familiar with

20
00:01:07.260 --> 00:01:07.590
it, right?

21
00:01:07.590 --> 00:01:09.790
So here's here's some of our HTML.

22
00:01:09.810 --> 00:01:10.170
OK.

23
00:01:10.590 --> 00:01:15.930
But there's another technology that is strongly associated with HTML, which is access.

24
00:01:16.110 --> 00:01:27.930
CSF allows us to style our HTML or the output of it rather OK, so we can use theses to specify not

25
00:01:27.930 --> 00:01:33.840
what should be on the page, but how it should look OK and to a certain extent, even where on the page

26
00:01:33.840 --> 00:01:34.470
it should be.

27
00:01:34.500 --> 00:01:40.980
OK, so colors, sizes, positions, things like that are all handled can all be handled by.

28
00:01:42.210 --> 00:01:50.070
CSX has a reputation of being fairly notoriously difficult to understand or learn, and as a result,

29
00:01:50.460 --> 00:01:57.780
there are now a number of CSS frameworks which try to make it a lot easier to do useful things with

30
00:01:57.780 --> 00:02:01.020
CSS without having to become a CSRC genius.

31
00:02:01.050 --> 00:02:01.430
OK.

32
00:02:01.590 --> 00:02:06.870
And one of the most popular, if not the most popular possibly of these frameworks is bootstrap.

33
00:02:06.900 --> 00:02:12.540
So we're going to incorporate a little bit of bootstrap into this page and make it look a lot nicer.

34
00:02:12.720 --> 00:02:19.530
And the main thing we're going to do in particular is we're going to convert this ordered list of people

35
00:02:19.800 --> 00:02:22.920
into a table of actual people.

36
00:02:22.980 --> 00:02:23.370
OK.

37
00:02:23.880 --> 00:02:24.210
All right.

38
00:02:24.220 --> 00:02:26.190
So let's jump into that.

39
00:02:26.310 --> 00:02:26.540
All right.

40
00:02:26.550 --> 00:02:32.880
So the first thing we'll do is jump over to the other Chrome browser Chrome tab I have here and I'm

41
00:02:32.880 --> 00:02:39.420
going to open up another tab and I will search for a bootstrap five, which is as of the time of this

42
00:02:39.420 --> 00:02:42.630
recording that is the most recent version of Bootstrap.

43
00:02:42.930 --> 00:02:48.720
OK, so and I happen to have jumped right on to the documentation, but if you happened to land on the

44
00:02:48.720 --> 00:02:54.930
home page, which is here under home, then you can just click on docs just like that.

45
00:02:54.990 --> 00:02:55.380
OK?

46
00:02:55.590 --> 00:03:02.240
And the first thing we need to do is kind of, again, sort of like import bootstrap into our page.

47
00:03:02.250 --> 00:03:07.560
Now this will be done differently than what we did with that time leave stuff and you'll see what that

48
00:03:07.560 --> 00:03:08.590
is in just a moment here.

49
00:03:08.610 --> 00:03:15.270
So thankfully, they give us some pretty nice documentation on how to get started right here under Quickstart.

50
00:03:15.930 --> 00:03:22.290
If you just come down here, we've got this RSS stuff that they say we can copy and paste into a link

51
00:03:22.290 --> 00:03:23.100
into our head.

52
00:03:23.220 --> 00:03:29.940
So all we're going to do is come over here and click Copy, OK, then jump back over to the ADC and

53
00:03:29.940 --> 00:03:35.650
we're going to find the head of our HTML, which is right here.

54
00:03:35.670 --> 00:03:36.120
OK?

55
00:03:36.450 --> 00:03:43.170
And so you can paste that line anywhere in between these two, you know, anywhere in between these

56
00:03:43.170 --> 00:03:46.740
two head tags here, the opening and closing head tag.

57
00:03:46.770 --> 00:03:47.070
OK.

58
00:03:47.220 --> 00:03:51.720
So I guess I'm going to just put mine right underneath the title there, so I'm just going to paste

59
00:03:51.720 --> 00:03:52.770
that right in.

60
00:03:52.800 --> 00:03:53.250
OK.

61
00:03:53.430 --> 00:03:57.780
Like, so then I'm going to jump back over to the browser.

62
00:03:58.230 --> 00:04:01.110
And now I also want to grab this JavaScript here.

63
00:04:01.120 --> 00:04:05.520
So this is a third technology that is strongly associated with the web.

64
00:04:05.580 --> 00:04:08.370
OK, so we've got a HTML and then CSS.

65
00:04:08.550 --> 00:04:16.260
And then probably the third big one is JavaScript in order to gain the full functionality of this bootstrap

66
00:04:16.260 --> 00:04:17.410
CSS framework.

67
00:04:17.430 --> 00:04:20.760
There is a bit of JavaScript that is associated with it that they wrote.

68
00:04:20.790 --> 00:04:21.660
We don't have to write it.

69
00:04:21.660 --> 00:04:22.500
We can just use it.

70
00:04:22.530 --> 00:04:22.830
OK.

71
00:04:22.980 --> 00:04:26.100
But we do have to kind of imported into our HTML.

72
00:04:26.310 --> 00:04:31.620
And so here's a little line that we can copy and paste into our page for that.

73
00:04:31.650 --> 00:04:37.140
So again, I'm going to come over here and just click copy and then jump back over to the ADC.

74
00:04:37.440 --> 00:04:37.810
All right.

75
00:04:37.830 --> 00:04:42.820
So we will go ahead and paste that right underneath the link in the head as well.

76
00:04:42.840 --> 00:04:43.800
So right there.

77
00:04:44.930 --> 00:04:51.830
Some of you who are already very familiar with HTML and JavaScript and CSIS might traditionally prefer

78
00:04:51.830 --> 00:04:57.140
to put your script tag somewhere towards the bottom here, and you can still do that, but you do not

79
00:04:57.140 --> 00:04:57.740
have to.

80
00:04:58.040 --> 00:04:58.400
All right.

81
00:04:58.610 --> 00:05:02.300
Especially not for this very simple implementation that we're doing here.

82
00:05:02.870 --> 00:05:07.940
OK, so now that's all it takes to make use of the bootstrap framework.

83
00:05:08.330 --> 00:05:15.560
OK, so now we'll go back over to the documentation and what what we want to do is to make use of a

84
00:05:15.560 --> 00:05:16.130
table.

85
00:05:16.130 --> 00:05:18.980
OK, so we're going to show those people in a table.

86
00:05:19.280 --> 00:05:24.230
And so in order to do that, we can come down here to I think it's no, I never get it right.

87
00:05:24.230 --> 00:05:27.650
It's content down here to content and then tables.

88
00:05:28.010 --> 00:05:35.780
So they've got many nice looking templates if you want to think of it as that for various types of tables,

89
00:05:35.790 --> 00:05:36.230
OK?

90
00:05:36.530 --> 00:05:39.370
And one of the easiest things that you can do.

91
00:05:39.380 --> 00:05:39.650
All right?

92
00:05:39.860 --> 00:05:47.150
It's what I do is usually just find some example that I like and then just copy that text and then just

93
00:05:47.150 --> 00:05:48.650
copy that HTML.

94
00:05:48.890 --> 00:05:56.540
So I clicked on copy there, and then I will jump back over here to the A.D. and come over to the body

95
00:05:56.540 --> 00:05:57.050
tag.

96
00:05:57.050 --> 00:06:02.810
And maybe for now, right underneath this ordered list that I already have, I'll put a couple of spaces

97
00:06:02.810 --> 00:06:03.050
there.

98
00:06:03.260 --> 00:06:06.740
I will just paste this example table here, OK?

99
00:06:07.040 --> 00:06:09.380
Now I'd like to go ahead and see that right away.

100
00:06:09.470 --> 00:06:16.570
So let me bring back open the smaller window that I had there, which is right here and plus the A.D..

101
00:06:16.610 --> 00:06:17.480
OK, so there we go.

102
00:06:17.750 --> 00:06:23.080
So now I will just trigger the program to restart very quickly and hopefully it should refresh.

103
00:06:23.090 --> 00:06:23.900
So let's see.

104
00:06:24.230 --> 00:06:28.130
I'm doing a command F9 nine or control F9 for Windows and Linux.

105
00:06:28.160 --> 00:06:28.850
There we go.

106
00:06:28.880 --> 00:06:29.390
OK.

107
00:06:29.690 --> 00:06:35.690
And yes, so there's our table and it looks pretty much just like on the other page where we got it

108
00:06:35.690 --> 00:06:35.990
from.

109
00:06:36.200 --> 00:06:36.500
All right.

110
00:06:36.530 --> 00:06:43.010
Now, I don't like the fact that this table is taking up the entire width of the browser window.

111
00:06:43.220 --> 00:06:47.240
I would like to make it a little less wide than the browser window.

112
00:06:47.510 --> 00:06:54.890
So one way that I can do that is I can actually select the entire table, so I'm actually just putting

113
00:06:54.890 --> 00:06:55.670
my cursor.

114
00:06:55.910 --> 00:06:56.570
Let me do that again.

115
00:06:56.570 --> 00:06:59.210
I'm going to put my cursor anywhere on this table.

116
00:06:59.240 --> 00:07:00.500
I don't even have to be on the word.

117
00:07:00.500 --> 00:07:03.320
I can just be anywhere at all within the table tag.

118
00:07:03.530 --> 00:07:09.290
And then I can use the selection capability that you've seen me use many times before, where at least

119
00:07:09.290 --> 00:07:14.630
on Mac, I'm doing an option and up Arrow, which is a controlled W for Windows and Linux, and I'm

120
00:07:14.630 --> 00:07:17.360
going to keep selecting until I've got the whole thing here.

121
00:07:17.420 --> 00:07:19.910
So everything this entire table, right?

122
00:07:19.910 --> 00:07:23.450
So if I scroll down, you can see that I've selected the entire table.

123
00:07:23.660 --> 00:07:24.050
OK?

124
00:07:24.170 --> 00:07:28.700
And then I'm going to do an option command t.

125
00:07:29.710 --> 00:07:35.410
Which is surround with or control all T for Windows and Linux, and then I will do a surround with and

126
00:07:35.410 --> 00:07:39.040
I'm going to introduce a div.

127
00:07:40.440 --> 00:07:45.750
Tag here now, divs, you can imagine that a div is basically like just a box, OK?

128
00:07:45.930 --> 00:07:53.640
And anything any content that I have inside of this div is content that will be inside of what is for

129
00:07:53.640 --> 00:07:58.370
right now, an imaginary box inside of the browser window.

130
00:07:58.440 --> 00:08:07.740
OK, so I'm just making a a box that I can specify other things about, like how wide or how tall or

131
00:08:07.890 --> 00:08:10.680
what color, whatever all kinds of things like that, OK?

132
00:08:10.890 --> 00:08:18.310
So making a generic box and in this box, I will now specify some success classes.

133
00:08:18.330 --> 00:08:18.690
OK.

134
00:08:18.930 --> 00:08:26.610
So in case a class is a descriptor for how you want things to be decorated?

135
00:08:26.640 --> 00:08:27.090
OK.

136
00:08:27.540 --> 00:08:29.940
And that's maybe all I'm going to say about that for right now.

137
00:08:29.940 --> 00:08:37.710
So I'm going to specify a class, and I'm going to specify now how wide I want this div container to

138
00:08:37.710 --> 00:08:38.100
be.

139
00:08:38.520 --> 00:08:46.740
Now, the way that the bootstrap framework works is that it subdivide your browser window into 12 columns

140
00:08:46.740 --> 00:08:47.790
of equal width.

141
00:08:47.820 --> 00:08:54.600
OK, no matter how wide the browser window is, there will always be these 12 invisible columns, OK?

142
00:08:55.440 --> 00:09:01.380
And so when you know that there are these 12 columns here, you can specify how wide you want items

143
00:09:01.380 --> 00:09:04.830
in the browser window to be in terms of those columns, OK?

144
00:09:04.840 --> 00:09:08.730
By specifying how many columns wide do you want something to be?

145
00:09:08.940 --> 00:09:19.170
So if I want this table here to to be perhaps eight columns wide, I can actually use a bootstrap class

146
00:09:19.410 --> 00:09:22.410
and say serial hyphen eight.

147
00:09:22.470 --> 00:09:22.920
OK.

148
00:09:23.370 --> 00:09:29.790
And then if I want it to be centered, I can use another CSF class, Emacs Dash Auto.

149
00:09:29.970 --> 00:09:35.730
Now this next Dash Auto, what it's going to do is it's specifying that the horizontal that's what this

150
00:09:35.730 --> 00:09:36.300
X means.

151
00:09:36.300 --> 00:09:44.820
The horizontal margin around this imaginary box here or this invisible box should basically take up

152
00:09:45.180 --> 00:09:49.330
equal amounts of space on the left and the right hand side of this box.

153
00:09:49.350 --> 00:09:49.740
OK.

154
00:09:49.920 --> 00:09:51.570
If you don't understand that, that's OK.

155
00:09:51.660 --> 00:09:54.090
You can just copy me if you ever want something centered.

156
00:09:54.120 --> 00:09:57.240
OK, you can do an next Dash Auto in many cases.

157
00:09:57.270 --> 00:09:57.600
All right.

158
00:09:57.780 --> 00:10:01.290
So let's see if this does what we're wanting here.

159
00:10:01.320 --> 00:10:03.660
I'm going to restart the application again.

160
00:10:03.990 --> 00:10:04.830
Here we go.

161
00:10:04.860 --> 00:10:05.340
Look at that.

162
00:10:05.370 --> 00:10:08.970
OK, so now the table is not so unwieldy.

163
00:10:09.000 --> 00:10:09.460
OK.

164
00:10:09.510 --> 00:10:10.110
All right.

165
00:10:10.230 --> 00:10:17.760
So now the next thing I want to do is to template ties this table because we just, you know, copied

166
00:10:17.760 --> 00:10:21.320
it statically into our document here.

167
00:10:21.330 --> 00:10:24.120
But now let's kind of, you know, customize it a bit.

168
00:10:24.420 --> 00:10:28.020
So we've got a header row, which is this row here.

169
00:10:28.050 --> 00:10:28.470
OK?

170
00:10:28.830 --> 00:10:33.240
And that's what is defined underneath this T head tag here.

171
00:10:33.270 --> 00:10:33.660
OK.

172
00:10:33.840 --> 00:10:40.380
So there's the header section of the table and then within that header section, we've got one row defined.

173
00:10:40.380 --> 00:10:44.220
Okay, so it's kind of the header row is the one where I guess you could have multiple rows.

174
00:10:44.220 --> 00:10:45.810
I don't know that I've ever done that before.

175
00:10:46.050 --> 00:10:47.340
But I suppose you could.

176
00:10:47.850 --> 00:10:48.410
All right.

177
00:10:48.420 --> 00:10:51.900
And then we've got each of the columns here.

178
00:10:52.080 --> 00:10:56.570
So we've got this number sine column in first and last and handling all of this, right?

179
00:10:56.580 --> 00:10:58.410
So we're going to customize this now.

180
00:10:58.530 --> 00:11:01.920
So let's start off with the last name field first.

181
00:11:02.070 --> 00:11:07.500
So I'm going to just do an option shift down Arrow to move to change the order of these guys.

182
00:11:07.710 --> 00:11:12.030
And I want this column heading to be called last name.

183
00:11:12.390 --> 00:11:20.640
And then the next one will be first name, and then the next one can be, let's see, I guess, date

184
00:11:20.640 --> 00:11:21.480
of birth.

185
00:11:21.930 --> 00:11:24.670
And I will just call it Doby like that.

186
00:11:25.170 --> 00:11:27.030
And what else do we have there?

187
00:11:27.030 --> 00:11:28.290
The the salary?

188
00:11:28.290 --> 00:11:35.460
OK, and then so I know I just did a command to duplicate that line, the dub line to make another column.

189
00:11:35.580 --> 00:11:39.370
And then I will call this one salary like so.

190
00:11:39.390 --> 00:11:39.870
OK.

191
00:11:40.200 --> 00:11:44.790
And actually, maybe I will change this number assigned to I.D..

192
00:11:45.120 --> 00:11:45.510
OK.

193
00:11:45.960 --> 00:11:46.800
Like so.

194
00:11:47.250 --> 00:11:47.560
All right.

195
00:11:47.580 --> 00:11:51.930
So that's the end of that row and the end of the header section of the table.

196
00:11:51.930 --> 00:11:54.870
And then we enter the body section of the table.

197
00:11:54.870 --> 00:11:58.800
OK, so that's where all of the actual data goes, right?

198
00:11:58.980 --> 00:12:03.250
And so now what you see is each row is in its own table.

199
00:12:03.300 --> 00:12:07.020
So that's what TR stands for table row section, if you will.

200
00:12:07.050 --> 00:12:07.440
OK.

201
00:12:07.560 --> 00:12:15.150
So since it's the table rows that should be repeating, I'm going to re-implement the timely colon each

202
00:12:15.150 --> 00:12:19.920
attribute that we used earlier to repeat things like what we did right here.

203
00:12:20.070 --> 00:12:23.040
This list item colon each.

204
00:12:23.040 --> 00:12:29.700
So this list item thing here is equivalent functionally equivalent to the table rows here.

205
00:12:29.730 --> 00:12:30.150
OK.

206
00:12:30.360 --> 00:12:31.800
That's kind of the same thing.

207
00:12:31.950 --> 00:12:37.830
So really, we could just copy all of at least all of this.

208
00:12:38.140 --> 00:12:39.660
I'm going to leave this bit out for an.

209
00:12:40.070 --> 00:12:41.720
And you'll see why in just a moment.

210
00:12:41.960 --> 00:12:49.580
But I do want all of this someone to come down here to the first table row and I will paste that right

211
00:12:49.580 --> 00:12:50.150
there.

212
00:12:50.300 --> 00:12:50.840
All right.

213
00:12:51.140 --> 00:12:59.300
And so now in order to make all of the actual data here dynamic, I will pretty much do what we did

214
00:12:59.840 --> 00:13:00.470
up here.

215
00:13:00.470 --> 00:13:04.640
But I'm going to do it a little bit differently so I can copy this.

216
00:13:06.470 --> 00:13:09.020
Like so and then come down here.

217
00:13:09.440 --> 00:13:15.860
But instead of putting it on this table row, which wouldn't make sense here, I'm going to put it on

218
00:13:15.980 --> 00:13:17.780
each of these table cells.

219
00:13:17.810 --> 00:13:18.270
OK.

220
00:13:18.410 --> 00:13:23.120
Starting with this one right here, and it doesn't really matter where inside of the tag I put this,

221
00:13:23.360 --> 00:13:24.590
I'll just put it right there.

222
00:13:24.740 --> 00:13:29.030
Now, the data that I actually want is not the whole entire person anymore.

223
00:13:29.060 --> 00:13:35.570
Now I want to actually extract individual fields of the person because this data cell right here should

224
00:13:35.570 --> 00:13:37.610
convey the idea, right?

225
00:13:37.790 --> 00:13:43.280
And so now what I can do, I put my cursor right after that word person there, and I can just do person

226
00:13:43.280 --> 00:13:46.460
dot ID to pull that idea out.

227
00:13:46.550 --> 00:13:47.030
OK.

228
00:13:47.780 --> 00:13:49.700
And then I can just keep doing that.

229
00:13:50.060 --> 00:13:54.620
So here on the next table fell, I can paste again.

230
00:13:54.890 --> 00:13:57.710
In fact, maybe I'll go ahead and just paste all of these now.

231
00:14:00.790 --> 00:14:01.690
Like so.

232
00:14:03.260 --> 00:14:08.150
All right, so then the next bit of data that I will want is the last name.

233
00:14:08.300 --> 00:14:12.200
Notice I'm using Java standard, you know, camel case here.

234
00:14:12.230 --> 00:14:20.600
OK, so that way, the Time-Life templating engine knows how to find the getter method for a field called

235
00:14:20.600 --> 00:14:21.500
last name.

236
00:14:21.530 --> 00:14:21.950
OK.

237
00:14:22.130 --> 00:14:24.380
And then the first name.

238
00:14:24.800 --> 00:14:26.060
First name.

239
00:14:26.300 --> 00:14:32.600
And then I think I did date of birth B.o.B and then I will duplicate that line.

240
00:14:32.600 --> 00:14:36.830
And then the last one that I wanted is salary like.

241
00:14:36.830 --> 00:14:44.330
So right now, notice I don't have to get rid of the the static data that I have here.

242
00:14:44.450 --> 00:14:45.740
I don't have to do that.

243
00:14:46.130 --> 00:14:53.120
And this is one of the things that's nice about the timely framework if if you work in a particular

244
00:14:53.120 --> 00:14:53.510
way.

245
00:14:53.570 --> 00:15:02.090
OK, so real quick side note, a lot of developers who do web development will work with web designers

246
00:15:02.090 --> 00:15:06.560
who often are more expert at creating pretty HTML.

247
00:15:06.560 --> 00:15:12.950
And they may be very, very good at CSS better than the typical Java developer might be, but they may

248
00:15:12.950 --> 00:15:14.370
not be programmers.

249
00:15:14.390 --> 00:15:14.750
OK.

250
00:15:15.020 --> 00:15:21.800
And so some companies and organizations will have combinations of developers who know how to do what

251
00:15:21.800 --> 00:15:27.320
I'm showing you here, but they don't know how to make really beautiful looking HTML layouts and all

252
00:15:27.320 --> 00:15:27.680
of that.

253
00:15:27.710 --> 00:15:28.040
OK.

254
00:15:28.190 --> 00:15:33.590
And so they will be paired up with a web designer who does know how to make things look pretty, but

255
00:15:33.590 --> 00:15:34.670
they're not a programmer.

256
00:15:34.880 --> 00:15:40.280
And when you are paired with someone like that, typically what they will do is they will deliver to

257
00:15:40.280 --> 00:15:46.730
you some beautiful static html and by static, I mean, like the HTML that I just pasted in here, right?

258
00:15:46.760 --> 00:15:47.810
It's not dynamic.

259
00:15:47.810 --> 00:15:53.600
It's just like a screenshot of some beautiful example of how an HTML page could look.

260
00:15:53.810 --> 00:16:00.260
And then it becomes your job to make that page become dynamic so that it can show different kinds of

261
00:16:00.260 --> 00:16:02.750
data, which is what we're doing right now, right?

262
00:16:02.750 --> 00:16:05.450
We're tying in all of our data from the back end.

263
00:16:05.600 --> 00:16:09.860
By the way, the back in that means our Java code that's kind of running behind the browser.

264
00:16:09.890 --> 00:16:10.250
OK.

265
00:16:10.730 --> 00:16:18.950
So when these web designers deliver you these web pages that are static and look beautiful, if you're

266
00:16:18.950 --> 00:16:21.320
working in this particular way, where?

267
00:16:21.470 --> 00:16:28.100
And I'll talk more about some of the distinctions of how we can develop web web pages and web applications

268
00:16:28.100 --> 00:16:29.750
and stuff a little bit later.

269
00:16:29.750 --> 00:16:34.460
But if you're working in this particular way, you're going to you're going to take those pages and

270
00:16:34.610 --> 00:16:39.020
and just basically throw them into your application pretty much like we're doing here.

271
00:16:39.140 --> 00:16:43.160
But then you're going to have to add in things to make them dynamic.

272
00:16:43.370 --> 00:16:51.260
Now, sometimes you will have to work in a back and forth kind of a way with the web designers where

273
00:16:51.650 --> 00:16:59.090
they deliver version one of their design and then you incorporate your things into it and then you demo

274
00:16:59.090 --> 00:17:05.600
what you have to your business stakeholders or whoever the customer is or someone representing the customer.

275
00:17:05.930 --> 00:17:06.350
OK.

276
00:17:06.530 --> 00:17:13.280
You'll demo that, but they may ask for changes, and the changes that they may ask for may be changes

277
00:17:13.280 --> 00:17:17.210
that have to be implemented or that should be implemented by the web designers.

278
00:17:17.660 --> 00:17:24.680
So what can happen is you don't want that web designer if you can help it to go back to their original

279
00:17:24.680 --> 00:17:29.840
version of of their file and then make changes and then give that back to you, because now you have

280
00:17:29.840 --> 00:17:34.470
to go back and put all of this stuff in there again.

281
00:17:34.490 --> 00:17:34.820
Right?

282
00:17:34.850 --> 00:17:39.830
Every single time they make any little change and that's cumbersome and annoying and a waste of the

283
00:17:39.830 --> 00:17:41.080
company's time and money.

284
00:17:41.450 --> 00:17:48.410
What would be nicer is if you could edit what they gave you and then share that back with them.

285
00:17:48.830 --> 00:17:56.630
But if you do that, you want to make your changes in such a way that those changes don't negatively

286
00:17:56.630 --> 00:18:03.710
impact them so that when they open up whatever tool they use to make their web page, they can still

287
00:18:03.710 --> 00:18:06.080
see how it was supposed to look statically.

288
00:18:06.110 --> 00:18:06.530
OK.

289
00:18:06.800 --> 00:18:15.560
And so one of the great things that the timely framework does is it allows us to add in this dynamic

290
00:18:15.560 --> 00:18:24.590
functionality, this dynamic templating functionality to an otherwise static HTML page without having

291
00:18:24.590 --> 00:18:31.610
to necessarily change any of the original dummy static HTML that was already there.

292
00:18:31.730 --> 00:18:38.960
So if I were to give this back to a web designer and they opened up this page not using Java, but just

293
00:18:38.960 --> 00:18:46.460
in a plain old web browser, the web browser would simply ignore all of this stuff that I've added in

294
00:18:46.640 --> 00:18:48.860
any time of web browser encounters.

295
00:18:49.040 --> 00:18:52.870
Things like HTML attributes that it doesn't understand.

296
00:18:52.880 --> 00:18:54.770
It just ignores them by default.

297
00:18:54.890 --> 00:18:55.340
OK.

298
00:18:55.730 --> 00:19:02.510
And so that gives you a potentially nice way to work hand in hand with web designers such that you're

299
00:19:02.510 --> 00:19:02.700
not.

300
00:19:02.790 --> 00:19:10.770
Having to hopefully anger them by grossly modifying everything that they did, they can still see everything

301
00:19:10.770 --> 00:19:12.510
the way that they intended to see it.

302
00:19:12.600 --> 00:19:17.190
You can still see everything the way that you need to see it, to work with your Java, and you can

303
00:19:17.190 --> 00:19:19.290
both work off of the same code base.

304
00:19:19.290 --> 00:19:23.700
So maybe you're working in a repository in GitHub or something like that.

305
00:19:24.060 --> 00:19:30.030
So sorry for the long winded ness of that, but I wanted you to understand why a framework like thyme

306
00:19:30.030 --> 00:19:34.740
leaf in particular could be really great if you happen to work in that kind of a mode.

307
00:19:34.890 --> 00:19:39.840
Now, if you're a full stack developer who does not work with web designers and you are expected by

308
00:19:39.840 --> 00:19:46.320
your company or whomever to do all of the HTML layout and everything else yourself, then that particular

309
00:19:46.320 --> 00:19:49.590
capability of timely might not be of much use to you.

310
00:19:49.620 --> 00:19:50.070
OK.

311
00:19:50.430 --> 00:19:54.840
But if you do work in that kind of environment, this is a very, very awesome technology that you can

312
00:19:54.840 --> 00:19:55.200
use.

313
00:19:55.530 --> 00:20:00.000
So let's go ahead and restart and see what we get.

314
00:20:00.420 --> 00:20:02.640
I may be forgetting something I never can tell.

315
00:20:03.180 --> 00:20:06.060
And that's the nice thing about this kind of round trip approach.

316
00:20:06.090 --> 00:20:06.920
I'll look at that.

317
00:20:06.930 --> 00:20:10.800
I think that's looking pretty OK for the most part.

318
00:20:11.250 --> 00:20:16.650
Now, notice I did not get rid of these additional static rows yet.

319
00:20:16.800 --> 00:20:18.630
Okay, I've left those in.

320
00:20:18.990 --> 00:20:24.390
So the browser is just trying to do its best to figure out what to do with those bits of data, because

321
00:20:24.540 --> 00:20:32.100
I've modified the table definition a bit there, but we can see all of our data 10, 20, 30, 40,

322
00:20:32.100 --> 00:20:33.450
all of the people there, right?

323
00:20:33.690 --> 00:20:34.680
So that's kind of cool.

324
00:20:34.710 --> 00:20:41.100
And in fact, now if we let's see if we go back over to the controller and let's add one or two more

325
00:20:41.100 --> 00:20:44.040
people in here just to have some fun.

326
00:20:45.790 --> 00:20:46.520
Let's see.

327
00:20:46.530 --> 00:20:52.700
Let's do a Jerry Maguire and I'm just going to set an end.

328
00:20:52.740 --> 00:20:58.950
So we know if Jane Smith and I won't even change the birth date at this time.

329
00:20:59.070 --> 00:21:01.980
And then if I just do a command F9.

330
00:21:04.580 --> 00:21:05.570
Look at that.

331
00:21:05.610 --> 00:21:07.160
Yeah, there they are.

332
00:21:09.490 --> 00:21:16.480
Yeah, so there's Jerry Maguire and Jane Smith were upset, I guess I put their their names in.

333
00:21:17.480 --> 00:21:20.590
Trip to Jane Smith's back row, I sure did, didn't I?

334
00:21:20.620 --> 00:21:20.850
Yup.

335
00:21:21.910 --> 00:21:23.040
Yeah, I did that backwards.

336
00:21:24.490 --> 00:21:26.620
Yeah, let's restart that again.

337
00:21:28.000 --> 00:21:28.480
Where'd she go?

338
00:21:28.510 --> 00:21:32.590
There she is, Jane Smith, okay, now we got the last name showing up properly.

339
00:21:32.680 --> 00:21:33.070
All right.

340
00:21:33.070 --> 00:21:39.610
So that's a lot of great functionality that we got for not a whole lot of work, really, and that table

341
00:21:39.610 --> 00:21:41.080
looks way, way better.

342
00:21:41.080 --> 00:21:46.590
And in fact, now let's get rid of the original display that we were doing up here.

343
00:21:46.600 --> 00:21:54.460
OK, so we'll jump back into the I.D., jump back over to the people that HTML file, and let's find

344
00:21:54.490 --> 00:21:55.120
there it is.

345
00:21:55.300 --> 00:21:57.040
So let's get rid of all of this.

346
00:21:57.040 --> 00:21:57.400
Oops.

347
00:21:57.790 --> 00:21:59.000
Grabbed a little too much there.

348
00:21:59.020 --> 00:22:04.060
Let's get rid of the here are some people bit and then the ordered list there.

349
00:22:04.180 --> 00:22:08.440
So I'm just going to delete all of that and restart again.

350
00:22:10.320 --> 00:22:11.100
There we are.

351
00:22:11.340 --> 00:22:17.460
OK, now let me explain a tiny little bit more now about the what was the dependency.

352
00:22:17.460 --> 00:22:19.770
I forgot what it was called already hold on a second here.

353
00:22:20.040 --> 00:22:26.550
The the one of the dependencies that we selected when we were first creating this project in the start

354
00:22:26.550 --> 00:22:32.940
that spring that i o thing so we can actually see those dependencies if we open up the build.gradle

355
00:22:32.940 --> 00:22:33.800
file here.

356
00:22:34.170 --> 00:22:36.630
All those dependencies will actually be right here, right?

357
00:22:36.630 --> 00:22:41.250
So their spring data, DARPA and timely validation web Lombok.

358
00:22:41.430 --> 00:22:42.540
Yes, it was this one here.

359
00:22:42.540 --> 00:22:43.930
Spring boot dev tools.

360
00:22:43.950 --> 00:22:44.310
OK.

361
00:22:44.550 --> 00:22:47.340
So let me just reiterate a little bit further now.

362
00:22:47.340 --> 00:22:56.760
So every time we make a change and I do a command F9 that is triggering Intel AJ to come up here to

363
00:22:56.760 --> 00:22:57.360
build.

364
00:22:57.600 --> 00:23:00.630
And it is rebuilding the project, OK?

365
00:23:00.660 --> 00:23:01.440
That's what that's doing.

366
00:23:01.440 --> 00:23:05.490
And actually, I could just rebuild an individual file.

367
00:23:05.700 --> 00:23:10.530
I'm in fact, if I were on a file that could be rebuilt, I think that's actually what the command F9

368
00:23:10.530 --> 00:23:10.950
does.

369
00:23:11.100 --> 00:23:15.580
Let me make sure here if we come up here to build, um.

370
00:23:16.020 --> 00:23:18.630
Oh yeah, yeah, I have to do a shift command F9 actually.

371
00:23:18.630 --> 00:23:24.180
OK, so technically, I probably should be doing a shift command F9 so that I will only recompile the

372
00:23:24.180 --> 00:23:27.120
one file that I'm on rather than the entire project.

373
00:23:27.120 --> 00:23:34.920
So the death toll thing is really just enabling us to be able to quickly rebuild our project very quickly.

374
00:23:35.370 --> 00:23:38.370
That's some class loading tricks that I'm not going to get into.

375
00:23:38.610 --> 00:23:45.000
So that Java will not have to reload every single class, every single time you rebuild the project,

376
00:23:45.060 --> 00:23:50.610
and it will only reload essentially those classes that have changed and therefore the time to restart

377
00:23:50.610 --> 00:23:56.790
the application server, which is the thing that's responding to the browser requests and all of that,

378
00:23:56.880 --> 00:24:00.690
the time to restart all of that is much quicker than it might otherwise have been.

379
00:24:01.350 --> 00:24:09.810
And it also has this little live reload or server process that's running in the background, and our

380
00:24:09.810 --> 00:24:13.840
browser has that live reload plug in that we installed.

381
00:24:13.860 --> 00:24:14.280
OK.

382
00:24:14.490 --> 00:24:21.900
And so that enables the browser to become aware that something has changed on the quote unquote back

383
00:24:21.900 --> 00:24:24.180
end, which again, is our Java code.

384
00:24:24.210 --> 00:24:24.630
OK.

385
00:24:24.810 --> 00:24:30.600
We've changed something and then that will trigger the browser to refresh the page without us having

386
00:24:30.630 --> 00:24:32.070
to tell it to do so.

387
00:24:32.080 --> 00:24:32.430
OK?

388
00:24:32.580 --> 00:24:38.490
And that way we get a quicker round trip or a quicker turnaround between making changes in the Java

389
00:24:38.490 --> 00:24:44.520
code and seeing those changes take place in the browser much more quickly than they would otherwise

390
00:24:44.520 --> 00:24:49.500
do if we were not using the dev tools or some other tricks.

391
00:24:49.530 --> 00:24:56.430
Now there's at least one product, one commercial product that I'm aware of that can enable this level

392
00:24:56.430 --> 00:25:02.760
of fast turnaround in development as well, but that costs money and this is all free.

393
00:25:03.450 --> 00:25:03.790
All right.

394
00:25:03.810 --> 00:25:08.040
So now that we've got all of this working, I think we're going to stop right here and we will pick

395
00:25:08.040 --> 00:25:12.840
back up with this and do and I will show you some more neat techniques and we'll dive a little deeper

396
00:25:12.840 --> 00:25:17.400
into some more of the philosophical aspects of this type of development.

397
00:25:17.430 --> 00:25:17.760
OK.

398
00:25:17.820 --> 00:25:19.440
So I will see you in the next one.
