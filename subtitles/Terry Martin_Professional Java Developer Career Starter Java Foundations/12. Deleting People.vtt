WEBVTT
1
00:00:00.270 --> 00:00:01.230
All right, welcome back.

2
00:00:01.500 --> 00:00:08.190
So in the last lesson, we learned how to implement the validation stuff using a combination of springs

3
00:00:08.190 --> 00:00:16.350
validation support and bootstraps own validation support to decorate these widgets when there are errors,

4
00:00:16.350 --> 00:00:17.760
and that all looks great.

5
00:00:18.060 --> 00:00:21.030
So in this lesson, we're going to do two things first.

6
00:00:21.240 --> 00:00:26.670
I have a couple minor additional things that I want to do cosmetically here, and that won't take long

7
00:00:26.670 --> 00:00:27.030
at all.

8
00:00:27.030 --> 00:00:33.000
And then we're going to proceed with learning another one of the major crud operations, which is delete.

9
00:00:33.120 --> 00:00:36.260
We need to implement a way to delete records, right?

10
00:00:36.480 --> 00:00:41.850
Delete rose out of this table, for example, we've got these three dummy rows here with no data actually

11
00:00:41.850 --> 00:00:44.210
in them, and we need a good way to get rid of those.

12
00:00:44.210 --> 00:00:45.570
So we're going to learn how to do all of that.

13
00:00:45.720 --> 00:00:52.200
So first off, let's let's address one more issue that a couple more issues that I have here.

14
00:00:52.440 --> 00:00:56.190
I still don't like quite how scrunched up this table is.

15
00:00:56.400 --> 00:01:02.850
And one thing that I want to try doing here is to just change the the width a little bit more of the

16
00:01:02.850 --> 00:01:03.420
table.

17
00:01:03.600 --> 00:01:11.220
And so right here where we had this div, which is in encapsulating the table and the form, and we've

18
00:01:11.220 --> 00:01:16.920
got this column small 10 right here, I want to see what that looks like if we set that to 11.

19
00:01:20.580 --> 00:01:23.400
Oh, yeah, see, that's even a little bit better.

20
00:01:23.550 --> 00:01:28.980
And then if we come over here and drag this out, then it, then it breaks back out, though into the

21
00:01:28.980 --> 00:01:30.720
wider display.

22
00:01:30.720 --> 00:01:33.390
So yeah, I kind of like that even better.

23
00:01:33.600 --> 00:01:33.840
All right.

24
00:01:33.840 --> 00:01:35.340
So that's one thing I wanted to do.

25
00:01:35.490 --> 00:01:42.060
Then another trick that we could also do is we could also make some of the columns of this table actually

26
00:01:42.060 --> 00:01:46.590
just disappear if the width of the browser is too narrow.

27
00:01:46.740 --> 00:01:49.350
So let me show you real quick how to do that also.

28
00:01:49.590 --> 00:01:54.210
So we'll need to do some a little bit of magic, both on the table header.

29
00:01:54.420 --> 00:01:58.360
Now I'm going to pick the email column here just randomly.

30
00:01:58.390 --> 00:01:59.490
That's just the column I want.

31
00:01:59.490 --> 00:02:04.680
I could do this on any of the of the columns or all of them or whatever, but I'm going to pick the

32
00:02:04.680 --> 00:02:05.580
email column.

33
00:02:05.580 --> 00:02:09.390
And so we're going to do that header and then we'll do the data rows as well.

34
00:02:09.570 --> 00:02:12.480
So first, let's find the email header, which is right here.

35
00:02:12.690 --> 00:02:16.920
And so what we're going to do is we're going to use a bootstrap mechanism, not going to bother going

36
00:02:16.920 --> 00:02:19.500
and showing you where it is in the bootstrap documentation.

37
00:02:19.860 --> 00:02:21.450
You can you can search for that.

38
00:02:21.600 --> 00:02:25.980
But basically, we're going to add a class to this header.

39
00:02:26.220 --> 00:02:31.440
And the trick here is to use the class called the hyphen.

40
00:02:31.440 --> 00:02:35.280
And then we're going to set the breakpoint size, which will be small.

41
00:02:35.760 --> 00:02:44.070
And then if we want the email header to just disappear when we are small, then we will say none, OK,

42
00:02:44.100 --> 00:02:44.640
like that.

43
00:02:44.820 --> 00:02:48.990
And then if we're going to do that, though, then we also need to specify how it should be when we're

44
00:02:48.990 --> 00:02:49.740
not small.

45
00:02:49.920 --> 00:02:58.890
So for that, we'll do a d hyphen medium hyphen and then I can specify something like table sell.

46
00:02:58.920 --> 00:03:10.050
OK, like so and then I will grab all of that and we will do this again on the email field, in the

47
00:03:10.050 --> 00:03:11.190
data rows.

48
00:03:11.220 --> 00:03:15.840
OK, so I'll put my cursor right there space and then just paste all of that.

49
00:03:15.960 --> 00:03:20.310
All right, so let's refresh and see that the email column hopefully will disappear.

50
00:03:22.440 --> 00:03:24.210
Yep, there it is, look at that, it went away.

51
00:03:24.420 --> 00:03:28.980
But now if we come over here and we expand this window, there it is.

52
00:03:28.980 --> 00:03:29.370
See?

53
00:03:29.530 --> 00:03:30.990
Then it pops back in.

54
00:03:31.410 --> 00:03:36.180
So when we're wide, we get that email column, but when we're collapsed.

55
00:03:37.730 --> 00:03:42.770
Right at the break point, there it is, then it disappears, and so then we get even more, you know,

56
00:03:42.770 --> 00:03:48.500
real estate there, so you can use that kind of trick also to make various things disappear when you're

57
00:03:48.500 --> 00:03:50.840
a little too small or whatever, OK?

58
00:03:50.890 --> 00:03:53.250
Or when the when the window is a little too narrow.

59
00:03:53.270 --> 00:03:54.050
OK, all right.

60
00:03:54.050 --> 00:03:57.380
So that's enough of the cosmetic stuff, I think, for this lesson.

61
00:03:57.530 --> 00:04:03.140
So now we're going to get on to the big thing here, which is how can we enable ourselves to delete

62
00:04:03.470 --> 00:04:05.270
rows from the table?

63
00:04:05.270 --> 00:04:09.680
And really, what I mean is delete data were records from the database, right?

64
00:04:09.710 --> 00:04:10.520
How can we do that?

65
00:04:10.880 --> 00:04:18.200
So what I have in mind here is to make it so that we can select rows for deletion.

66
00:04:19.100 --> 00:04:25.880
And the way I'm going to do this is to add one more column here with a checkbox.

67
00:04:26.000 --> 00:04:26.480
OK.

68
00:04:26.780 --> 00:04:28.970
So we'll add a checkbox column.

69
00:04:29.270 --> 00:04:35.960
So the way we can do that is, first off, will decide where we want this checkbox to be.

70
00:04:36.200 --> 00:04:44.630
And I'm thinking, maybe we'll add another column right before the ID column here, which is this this

71
00:04:44.630 --> 00:04:46.010
column right here, right?

72
00:04:46.250 --> 00:04:52.250
So we'll add a data table data element right here, by the way.

73
00:04:52.550 --> 00:05:00.800
You may have noticed that the ID table cells here are using this T.H that stands for table header.

74
00:05:00.980 --> 00:05:06.710
The reason that's being used here is really just to make these IDs bold, and I didn't choose that.

75
00:05:06.710 --> 00:05:10.100
That was the example I think that we got when I copied this.

76
00:05:10.640 --> 00:05:11.900
You know, the template for this.

77
00:05:11.900 --> 00:05:15.650
So that's just how they decided to to make things, and I didn't bother to change it.

78
00:05:15.890 --> 00:05:18.050
So in case you were just wondering, why is there a there?

79
00:05:18.050 --> 00:05:19.160
But everything else is a TD?

80
00:05:19.460 --> 00:05:19.850
All right.

81
00:05:20.000 --> 00:05:30.470
And then to get a chat box, what we will use is the HTML input element, which we have seen right there.

82
00:05:30.500 --> 00:05:35.780
So we're going to use one of these again, however, will tell it that we want it to be a checkbox in

83
00:05:35.780 --> 00:05:36.560
the way we can do that.

84
00:05:36.560 --> 00:05:38.930
In fact, here, let me just close that off first.

85
00:05:39.110 --> 00:05:44.180
OK, so the way we can do this is with a type attribute, and there we get to see all the different

86
00:05:44.180 --> 00:05:47.240
types of input elements that exist.

87
00:05:47.240 --> 00:05:49.290
And there is a checkbox one.

88
00:05:49.310 --> 00:05:49.760
OK.

89
00:05:50.000 --> 00:05:54.230
So we can have a checkbox there and I'm going to stop right there for right now.

90
00:05:54.260 --> 00:05:59.720
We'll come back to this, but I just realized that I forgot to put the actual header in here also.

91
00:05:59.720 --> 00:06:07.160
So but up here in the header section for the table, the table header lets also add a a column in here.

92
00:06:09.030 --> 00:06:14.040
So we'll do a to and more just I should have just duplicate, I should have just copied.

93
00:06:15.060 --> 00:06:17.460
The what's already there, really?

94
00:06:17.910 --> 00:06:22.350
And I don't know, we'll just call this select, I guess.

95
00:06:23.940 --> 00:06:27.510
All right, so let's just refresh and see what we've got so far.

96
00:06:29.950 --> 00:06:30.340
OK.

97
00:06:30.400 --> 00:06:32.440
Yeah, that that works.

98
00:06:34.050 --> 00:06:37.500
We could possibly play around with the spacing a little bit.

99
00:06:38.040 --> 00:06:41.100
But for right now, I think that'll work.

100
00:06:41.520 --> 00:06:41.880
All right.

101
00:06:41.880 --> 00:06:43.920
So we've got our checkboxes there.

102
00:06:44.130 --> 00:06:48.990
Now, obviously, you can pretty much guess these checkboxes aren't going to do anything for us right

103
00:06:48.990 --> 00:06:49.590
now.

104
00:06:49.620 --> 00:06:55.080
I mean, we can come over here and we can select them, but we don't even have any way to trigger a

105
00:06:55.080 --> 00:06:56.770
deletion to occur yet.

106
00:06:56.790 --> 00:06:57.150
Right?

107
00:06:57.750 --> 00:07:01.980
So we need a way to actually say, go delete the things that we've selected here.

108
00:07:02.100 --> 00:07:08.040
And I think the easiest thing to do there is just to put a button down here below this table, like

109
00:07:08.160 --> 00:07:09.580
a button that says Delete.

110
00:07:09.630 --> 00:07:12.440
OK, so let's see what that might look like.

111
00:07:12.450 --> 00:07:15.120
So right below that table?

112
00:07:15.510 --> 00:07:17.490
Let's make a button now for this.

113
00:07:17.490 --> 00:07:25.980
I do want to jump back over to the bootstrap documentation and we will look at components buttons.

114
00:07:26.100 --> 00:07:28.980
OK, and let's see what our options are for buttons.

115
00:07:29.010 --> 00:07:33.960
OK, so here are some nice looking buttons for display purposes or whatever.

116
00:07:34.200 --> 00:07:40.170
And so in fact, what I think I will do is just copy one and I'm thinking to delete.

117
00:07:40.170 --> 00:07:42.390
I want a nice red button.

118
00:07:42.420 --> 00:07:42.870
OK.

119
00:07:43.110 --> 00:07:47.490
So I'm going to copy the example of that, which is called danger.

120
00:07:47.500 --> 00:07:49.280
So that would be this one right here.

121
00:07:49.290 --> 00:07:52.620
So I will just copy that button, for starters.

122
00:07:53.160 --> 00:07:53.550
All right.

123
00:07:54.150 --> 00:08:01.020
And I'm going to paste that right there and then jump back over here and let's just see how that looks.

124
00:08:02.460 --> 00:08:03.240
First of all.

125
00:08:04.180 --> 00:08:05.560
All right, yeah, that's OK.

126
00:08:06.430 --> 00:08:08.980
I am eventually going to want to have some space.

127
00:08:09.310 --> 00:08:15.480
In fact, let's see if we could put a little space there right now, so let's do like a margin bottom

128
00:08:15.850 --> 00:08:17.320
hyphen five.

129
00:08:17.350 --> 00:08:21.060
Let's see if this will give us the space that yeah.

130
00:08:21.070 --> 00:08:21.670
Yeah, cool.

131
00:08:21.760 --> 00:08:21.970
All right.

132
00:08:21.970 --> 00:08:23.710
So that gives a little space there.

133
00:08:24.280 --> 00:08:24.910
All right.

134
00:08:25.240 --> 00:08:28.660
So yeah, I think I am OK with that.

135
00:08:28.660 --> 00:08:32.170
And then we'll change its name from danger to delete.

136
00:08:33.490 --> 00:08:34.390
OK, cool.

137
00:08:34.900 --> 00:08:39.610
Now we just need a way to make it so that when we select some of these.

138
00:08:40.850 --> 00:08:45.410
And then click the delete button that it does something, so I'm clicking on it right now and it's doing

139
00:08:45.410 --> 00:08:45.890
nothing.

140
00:08:46.100 --> 00:08:50.600
And that makes sense because I haven't connected it to any type of functionality, right?

141
00:08:50.990 --> 00:08:57.560
So the way that we can make this work is actually pretty much what we did for our form down here.

142
00:08:57.740 --> 00:09:04.580
Basically, we're going to turn this table into a form essentially so that we so that when we click

143
00:09:04.580 --> 00:09:08.390
the the button in our in our case, appear here, be the delete button.

144
00:09:08.390 --> 00:09:15.050
But when we click that button, it submits some data from the form OK, and the form will just be these

145
00:09:15.050 --> 00:09:16.140
checkbox is here.

146
00:09:16.160 --> 00:09:16.520
All right.

147
00:09:16.730 --> 00:09:24.680
So the key to doing that is really just to wrap the table, including the button inside of another form

148
00:09:24.980 --> 00:09:25.970
element here.

149
00:09:26.270 --> 00:09:26.780
All right.

150
00:09:28.190 --> 00:09:28.640
All right.

151
00:09:28.790 --> 00:09:34.460
And in fact, the next thing I think I will do is to select all of that.

152
00:09:35.800 --> 00:09:46.000
All the way up to this table, and then I'm going to just do an option command T to surround and then

153
00:09:46.000 --> 00:09:53.110
choose T and then so I will just type form for now and then hit return.

154
00:09:53.380 --> 00:09:56.130
And let's see if that put the closing.

155
00:09:56.140 --> 00:09:56.650
Yes, it did.

156
00:09:56.650 --> 00:09:58.060
Okay, so give me a closing form there.

157
00:09:58.150 --> 00:10:01.660
So now I will just copy the rest of this that way.

158
00:10:02.890 --> 00:10:04.000
Come back up here.

159
00:10:05.720 --> 00:10:15.110
Paced all of that like, so all right, now, the form that we have down here has tied each of its fields

160
00:10:15.560 --> 00:10:19.940
to the person object that is in the model, right?

161
00:10:20.180 --> 00:10:26.330
But in this particular case, for the table, we don't have a model and all we're really wanting is

162
00:10:26.330 --> 00:10:28.310
just these check boxes here anyway.

163
00:10:28.460 --> 00:10:31.880
So we're going to do this a little differently in this particular case.

164
00:10:32.300 --> 00:10:35.660
We're not going to specify an object at all.

165
00:10:37.460 --> 00:10:40.700
And we don't need this no validate business, either.

166
00:10:41.390 --> 00:10:41.840
OK.

167
00:10:42.410 --> 00:10:46.430
And what we will do instead, we'll actually you'll see in just a moment.

168
00:10:46.520 --> 00:10:55.400
OK, so now we're going to come down here to our new check box and finish fleshing this out a bit.

169
00:10:55.550 --> 00:10:57.800
We need to specify a few more things here.

170
00:10:58.130 --> 00:11:06.830
As you may recall, in our form here, each of these fields got a name and that was part of the I.D..

171
00:11:06.860 --> 00:11:07.160
Right.

172
00:11:07.170 --> 00:11:09.420
So, yeah, like first name and blah blah blah.

173
00:11:09.440 --> 00:11:16.220
And when we submitted this form and we looked at the request that the browser was building, we saw

174
00:11:16.250 --> 00:11:24.110
that each of these fields was being sent back with whatever value was in it in text form as a text string,

175
00:11:24.110 --> 00:11:24.710
basically.

176
00:11:24.890 --> 00:11:30.380
So we want to have something similar to that happen with our checkboxes as well.

177
00:11:30.560 --> 00:11:35.810
So these check boxes are going to need to have an I.D. or some kind of a name or something like that.

178
00:11:36.260 --> 00:11:43.970
So what we can do is we can just specify a name and we're going to do this in kind of an interesting

179
00:11:43.970 --> 00:11:44.260
way.

180
00:11:44.270 --> 00:11:49.130
So let's say that we were to call these checkboxes something like selections.

181
00:11:49.250 --> 00:11:50.480
OK, let's do that.

182
00:11:50.660 --> 00:11:52.970
And then they're going to need a value, right?

183
00:11:53.750 --> 00:12:00.860
So for the value now we can use a Time-Life attribute to call in value.

184
00:12:02.060 --> 00:12:08.210
And the reason I'm using a timely attribute instead of just hard coding, something like I did here

185
00:12:08.210 --> 00:12:15.350
for name is because I want this value here of the tech box to be the ID of the person that we're iterating

186
00:12:15.350 --> 00:12:15.650
over.

187
00:12:15.680 --> 00:12:15.980
OK?

188
00:12:16.070 --> 00:12:23.510
So in other words, for each of these rows, if you were to click on any of these check boxes, that

189
00:12:23.510 --> 00:12:28.850
checkbox would be associated with a value in the value that I want is just the ID.

190
00:12:29.150 --> 00:12:32.930
And the reason I want the idea is because that's something that I know is going to be unique.

191
00:12:33.020 --> 00:12:33.470
OK.

192
00:12:33.800 --> 00:12:38.360
So the way I can do that is simply the same way that we're doing it down here.

193
00:12:38.360 --> 00:12:40.190
In fact, I can just copy this.

194
00:12:41.140 --> 00:12:44.740
I can copy that and paste it right there.

195
00:12:44.770 --> 00:12:52.300
OK, so all I'm saying is whenever someone checks one of these check boxes for any given row, that's

196
00:12:52.300 --> 00:12:58.600
going to send back the I.D. as the value for that particular check back.

197
00:12:58.660 --> 00:13:01.900
And we'll you'll see what I mean more specifically in just a minute here.

198
00:13:01.930 --> 00:13:06.190
OK, so that's how we'll get the values for each of these.

199
00:13:06.700 --> 00:13:11.380
Oh, and then one more thing, we can also decorate these checkboxes a little bit.

200
00:13:11.380 --> 00:13:14.140
So if we come over here, let's see.

201
00:13:14.140 --> 00:13:20.290
There's we can see some examples of a check box somewhere in here.

202
00:13:21.460 --> 00:13:21.880
Let's see.

203
00:13:21.880 --> 00:13:23.590
Maybe we have to go into the forms.

204
00:13:23.620 --> 00:13:24.150
There we go.

205
00:13:24.160 --> 00:13:25.250
Checks and radios.

206
00:13:25.270 --> 00:13:25.810
There we go.

207
00:13:27.240 --> 00:13:28.140
Checks.

208
00:13:28.680 --> 00:13:35.850
So let's see, OK, so yes, Bootstrap does have some custom decorations for a check box, so let's

209
00:13:35.850 --> 00:13:37.260
grab that.

210
00:13:40.120 --> 00:13:40.530
OK.

211
00:13:40.780 --> 00:13:47.140
And we'll add that I'll just put it anywhere, it doesn't matter where you put these attributes.

212
00:13:49.240 --> 00:13:51.640
Class paste all of that.

213
00:13:51.940 --> 00:13:53.890
Jump back over here and let's see.

214
00:13:54.070 --> 00:13:57.310
There will likely be a subtle difference in how that looks.

215
00:13:59.330 --> 00:14:03.990
OK, there rounded a little bit rounded and a little bit bigger.

216
00:14:04.010 --> 00:14:07.160
That's that looks like the main difference there.

217
00:14:07.190 --> 00:14:07.610
OK.

218
00:14:09.290 --> 00:14:10.530
And what else?

219
00:14:10.620 --> 00:14:17.990
OK, and then also let me just explain now what I was doing with this form, so this form here doesn't

220
00:14:17.990 --> 00:14:21.920
have an object attribute on it, the common object.

221
00:14:22.100 --> 00:14:24.680
And it really has nothing other than just the method.

222
00:14:24.690 --> 00:14:29.840
And so what'll happen here is that by default, if you don't specify any of that kind of stuff on a

223
00:14:29.840 --> 00:14:36.200
form, then the form will try to submit back to wherever its page came from.

224
00:14:36.380 --> 00:14:41.870
So in other words, this page is loading from the slash people path or resource.

225
00:14:41.990 --> 00:14:50.480
And so when I click this button by default, this form is going to try to post back to the people path,

226
00:14:50.660 --> 00:14:54.110
which we already know is going to end up going back to our controller.

227
00:14:54.140 --> 00:14:54.590
OK.

228
00:14:55.100 --> 00:15:01.370
But it's going to go back to a method that is annotated with post mapping, which right now would be

229
00:15:01.370 --> 00:15:02.580
this safe method here.

230
00:15:02.600 --> 00:15:03.950
Now that's going to be a problem.

231
00:15:04.280 --> 00:15:07.910
That's definitely going to be a problem, but we're going to address that in just a moment also.

232
00:15:07.910 --> 00:15:11.690
But I wanted to explain what what that's going to do by default, OK?

233
00:15:12.990 --> 00:15:13.330
All right.

234
00:15:13.350 --> 00:15:18.240
So, all right, so let's make a few minor changes to this button.

235
00:15:18.480 --> 00:15:24.480
So let's change its type from button to submit, and we will add a couple of attributes.

236
00:15:24.480 --> 00:15:28.380
Let's add a name to it and let's call it the leaked.

237
00:15:29.010 --> 00:15:31.590
And let's also set a value to true.

238
00:15:31.890 --> 00:15:33.960
OK, so let's refresh.

239
00:15:35.560 --> 00:15:38.050
OK, cool, so it still looks the same.

240
00:15:39.750 --> 00:15:44.730
So now I'm going to open up the developer tools.

241
00:15:46.100 --> 00:15:57.350
And I'm going to select these three blank records here and hit Delete so that we can examine what actually

242
00:15:57.350 --> 00:16:00.470
will will be sent back to the controller.

243
00:16:01.040 --> 00:16:01.390
All right.

244
00:16:01.400 --> 00:16:06.230
So I just clicked on that and I will click on the people request that we just built here.

245
00:16:08.210 --> 00:16:10.340
And if I click on payload.

246
00:16:11.000 --> 00:16:11.990
So look at that.

247
00:16:12.440 --> 00:16:15.260
So what happened is we got.

248
00:16:16.390 --> 00:16:20.980
These three roads, in fact, let's look at the Raw at kind of the raw view of this.

249
00:16:20.980 --> 00:16:24.510
This is kind of more realistic of what's actually going to be sent back.

250
00:16:24.520 --> 00:16:31.480
So you can see here that we got selections, equals three and selections equals four and selections

251
00:16:31.480 --> 00:16:35.080
equals five and delete equals true.

252
00:16:35.110 --> 00:16:35.620
OK.

253
00:16:35.980 --> 00:16:40.660
So why did I have you add the delete the delete name?

254
00:16:40.960 --> 00:16:44.080
Because that's where that delete is coming from and the value of true.

255
00:16:44.230 --> 00:16:45.310
Well, let me show you why.

256
00:16:45.670 --> 00:16:52.030
So let's jump over to the controller and you already know that by default.

257
00:16:52.030 --> 00:16:59.020
Now, when we click this delete button here, the request is going to by default, try to be routed

258
00:16:59.050 --> 00:17:04.510
to any method we have on this class that has a post mapping on it.

259
00:17:04.570 --> 00:17:05.020
OK.

260
00:17:05.440 --> 00:17:12.640
And the problem there is that we don't want this delete button to result in calling the save person

261
00:17:12.640 --> 00:17:13.120
method.

262
00:17:13.300 --> 00:17:16.420
In fact, we want to have a new method for deleting people.

263
00:17:16.720 --> 00:17:20.460
So, so let's go ahead and just start writing that method.

264
00:17:20.470 --> 00:17:24.190
OK, and then I will show you how we can differentiate between those two calls.

265
00:17:24.190 --> 00:17:29.830
So let's make a public string delete people method.

266
00:17:31.400 --> 00:17:32.210
Right here, OK?

267
00:17:32.480 --> 00:17:41.990
And for now, we'll just return another redirect back to people again whenever that is successful.

268
00:17:42.110 --> 00:17:42.560
OK?

269
00:17:43.220 --> 00:17:46.100
However, in order to tell spring in B.C..

270
00:17:47.350 --> 00:17:52.900
That we want this method to be called when we hit this delete button here, what we're going to do is

271
00:17:52.900 --> 00:18:00.280
a variation on the post mapping, so we will add a post mapping here just as we did before.

272
00:18:00.490 --> 00:18:08.050
However, we will additionally add something add an attribute called params, which stands for parameters.

273
00:18:08.290 --> 00:18:08.700
OK.

274
00:18:09.010 --> 00:18:14.620
And in this, we can actually specify delete equals true.

275
00:18:15.250 --> 00:18:21.130
So in other words, what this will do is when Spring in the Sea is trying to figure out which method

276
00:18:21.130 --> 00:18:22.840
to call for a given request.

277
00:18:23.230 --> 00:18:27.800
This will help spring in the sea to match this particular request.

278
00:18:27.820 --> 00:18:34.000
In other words, it's going to say if I received a request that has a parameter of delete with a value

279
00:18:34.000 --> 00:18:40.750
of true, then this method is the method that I should call instead of this one up here.

280
00:18:40.780 --> 00:18:41.890
That's what this is for us.

281
00:18:41.890 --> 00:18:47.590
So we're just using this as a way to differentiate one call from another call essentially, OK.

282
00:18:47.620 --> 00:18:48.610
That's what that's for.

283
00:18:48.820 --> 00:18:54.100
And then the other thing we're going to do now is how do we actually get our hands on this data here?

284
00:18:54.370 --> 00:18:54.700
Right?

285
00:18:55.060 --> 00:18:57.910
So there's some cool things we can do for that.

286
00:18:58.330 --> 00:19:06.070
So what we will do is we can actually map these selections here since they all have the same name.

287
00:19:06.430 --> 00:19:08.380
That's basically kind of like an array.

288
00:19:08.740 --> 00:19:15.040
And so we can map that kind of a pattern where you've got this repeated the same name, but with different

289
00:19:15.040 --> 00:19:15.700
values.

290
00:19:15.820 --> 00:19:21.100
We can map that to a few different things, but one of the things we can map it to is a list.

291
00:19:21.550 --> 00:19:25.410
We can map that to a list of longs.

292
00:19:25.750 --> 00:19:29.530
OK, now we could make that anything, really a list of integers, a list of longs.

293
00:19:29.530 --> 00:19:31.180
We can make it an array of longs.

294
00:19:31.390 --> 00:19:37.420
Spring MVC would figure out the right thing to do with any of those combinations because it's pretty

295
00:19:37.420 --> 00:19:37.900
smart.

296
00:19:38.320 --> 00:19:38.720
All right.

297
00:19:38.740 --> 00:19:46.990
And so I will call this selections so that it matches up with the parameter here that we're that we're

298
00:19:46.990 --> 00:19:47.680
sending in.

299
00:19:47.740 --> 00:19:48.100
OK.

300
00:19:48.610 --> 00:19:55.210
And then for right now, I'm just going to print out those selections.

301
00:19:55.240 --> 00:19:55.600
OK.

302
00:19:55.630 --> 00:19:56.500
Just like that.

303
00:19:56.890 --> 00:19:57.140
All right.

304
00:19:57.160 --> 00:20:00.970
And then one more thing that we will need to make this all work.

305
00:20:01.360 --> 00:20:09.460
We will need to help spring in D.C. to match up these parameters that are named selections to this parameter

306
00:20:09.460 --> 00:20:10.970
here called selections.

307
00:20:10.970 --> 00:20:17.320
The K and the way that we can do that is with an annotation at request.

308
00:20:17.500 --> 00:20:19.330
Perram just like that.

309
00:20:19.540 --> 00:20:19.960
OK.

310
00:20:20.170 --> 00:20:21.430
And that's really all we need.

311
00:20:21.640 --> 00:20:28.960
So as long as the parameters coming in are named the same thing as this parameter here in the method,

312
00:20:29.320 --> 00:20:32.320
then Spring MVC will be able to match those up just fine.

313
00:20:32.800 --> 00:20:35.100
If they did not match, that wouldn't be a problem.

314
00:20:35.110 --> 00:20:38.890
We could alternatively specify what they are called over here.

315
00:20:38.890 --> 00:20:45.190
So if they were called check boxes, for example, then we'd say checkboxes here and then we could call

316
00:20:45.190 --> 00:20:49.900
them whatever we want to over here, OK, but if they have the same name, then I don't even need to

317
00:20:49.900 --> 00:20:52.150
specify the parameter name there.

318
00:20:52.180 --> 00:20:52.600
All right.

319
00:20:52.990 --> 00:20:53.280
All right.

320
00:20:53.290 --> 00:20:54.610
And let's see.

321
00:20:54.610 --> 00:20:56.380
So let's refresh again.

322
00:20:56.830 --> 00:20:58.980
OK, so now let's try this out.

323
00:20:58.990 --> 00:21:06.370
So if we if I select these three rows and hit delete, in fact, hold on a second, let me clear this

324
00:21:06.370 --> 00:21:08.140
out just so I don't have to.

325
00:21:09.150 --> 00:21:10.110
Pass everything out.

326
00:21:10.500 --> 00:21:11.640
So I hit Delete.

327
00:21:11.820 --> 00:21:13.920
Look at that three, four and five.

328
00:21:14.840 --> 00:21:20.750
And then we see hibernate doing its database query to go grab the data from the database again because

329
00:21:20.750 --> 00:21:23.420
we were doing a redirect, OK, after all of that is done.

330
00:21:23.420 --> 00:21:26.150
But here's what I wanted to see was these numbers three, four and five.

331
00:21:26.150 --> 00:21:29.960
So now we can see that we are actually receiving these values.

332
00:21:30.140 --> 00:21:32.900
Now let me show you something, though we're not quite done yet.

333
00:21:33.260 --> 00:21:33.770
If.

334
00:21:34.130 --> 00:21:35.960
Let me clear this out one more time.

335
00:21:36.800 --> 00:21:41.060
Now, if I were to not select anything and then hit delete, let's see what happens.

336
00:21:41.650 --> 00:21:42.890
Ah, it blows up.

337
00:21:43.740 --> 00:21:46.860
And let's see if we get a message, so.

338
00:21:47.820 --> 00:21:48.390
There we go.

339
00:21:48.510 --> 00:21:55.170
Required request parameter selections for method parameter type list is not present, so basically it's

340
00:21:55.170 --> 00:22:03.480
just saying that if we don't actually send any parameters at all called selections, then Spring ABC

341
00:22:03.480 --> 00:22:08.070
doesn't know what to do with this and and it's kind of confused.

342
00:22:08.070 --> 00:22:09.480
It's not going to just be empty.

343
00:22:09.480 --> 00:22:12.030
It's just not going to get populated at all.

344
00:22:12.030 --> 00:22:13.350
And that's kind of a problem.

345
00:22:13.530 --> 00:22:16.680
So there are two ways, at least two ways that we can fix that.

346
00:22:16.860 --> 00:22:23.100
One way that I will show you real quick is we can actually supply an option to this request parameter,

347
00:22:23.280 --> 00:22:27.870
which is called required so we can say required equals false.

348
00:22:27.880 --> 00:22:28.830
We could do that.

349
00:22:29.340 --> 00:22:36.770
And then spring would allow this selection's variable here to be null when you don't have anything selected.

350
00:22:36.780 --> 00:22:38.190
OK, so that's one way we can do that.

351
00:22:38.190 --> 00:22:39.700
But we don't like nulls, right?

352
00:22:39.750 --> 00:22:42.390
We learned how to do cooler things than to deal with North.

353
00:22:42.690 --> 00:22:54.120
So alternatively, we could instead wrap this list in an optional so we could say that this is an optional.

354
00:22:56.360 --> 00:22:57.870
Of a list of lungs.

355
00:22:59.060 --> 00:23:01.430
Like, so let me import that.

356
00:23:02.450 --> 00:23:09.380
And by having the optional here, spring will now tolerate this scenario where we don't have anything

357
00:23:09.380 --> 00:23:13.460
selected and these selections will just be an empty, optional OK.

358
00:23:13.760 --> 00:23:15.710
So let's take a look at that real quick.

359
00:23:16.610 --> 00:23:19.190
So I'm going to restart everything.

360
00:23:19.880 --> 00:23:27.860
And it actually already resubmitted the the the previous request with no checkbox is selected, and

361
00:23:27.860 --> 00:23:34.010
now we see that we got back an optional empty online 50s when this system out that print line executed,

362
00:23:34.010 --> 00:23:35.060
that's what we got back out.

363
00:23:36.380 --> 00:23:39.140
And so now if I select four and hit delete.

364
00:23:40.380 --> 00:23:47.040
There's the four or if I do three and four and hit delete, there's the three and the four.

365
00:23:47.160 --> 00:23:51.450
And then if I do nothing, then I get an optional empty right.

366
00:23:51.600 --> 00:23:52.830
So that is what we want.

367
00:23:52.890 --> 00:23:56.520
And now we're ready to go ahead and actually delete some stuff.

368
00:23:58.140 --> 00:23:59.820
So how do we do that now?

369
00:23:59.910 --> 00:24:02.790
Well, that's should be actually pretty easy.

370
00:24:03.090 --> 00:24:09.630
If we reference the person repository, there will be an inherited method on here.

371
00:24:09.780 --> 00:24:10.620
Let's see, delete.

372
00:24:10.800 --> 00:24:13.260
We've got delete where we can pass in a person.

373
00:24:13.260 --> 00:24:15.300
We've got delete all which we definitely don't want.

374
00:24:15.390 --> 00:24:24.210
We've got delete all where we could pass in a basically a collection of people or we've got delete by

375
00:24:24.210 --> 00:24:27.900
IED or we've got delete all by ID.

376
00:24:28.440 --> 00:24:31.620
And that's the one that I think we actually will want here.

377
00:24:31.630 --> 00:24:33.420
Delete all by IED.

378
00:24:33.930 --> 00:24:35.670
So let's choose that.

379
00:24:36.390 --> 00:24:40.710
So what I'm thinking we can do here is really just wrap this.

380
00:24:42.520 --> 00:24:44.860
And a conditional.

381
00:24:45.460 --> 00:24:46.480
So we'll do an F..

382
00:24:47.230 --> 00:24:49.870
And we'll see if selections.

383
00:24:51.240 --> 00:24:54.090
Is present then.

384
00:24:55.190 --> 00:24:58.940
Simply say selections, dot get.

385
00:24:59.180 --> 00:24:59.970
And there we go.

386
00:24:59.990 --> 00:25:01.340
I think that should be it.

387
00:25:03.210 --> 00:25:06.060
So let's go ahead and restart.

388
00:25:08.760 --> 00:25:12.570
And now let's see what happens if we delete just one of these, so three.

389
00:25:13.690 --> 00:25:15.040
Hey, look, it's gone.

390
00:25:15.310 --> 00:25:20.500
You see that it's actually gone and then four and five, let's get rid of both of those at the same

391
00:25:20.500 --> 00:25:21.010
time.

392
00:25:21.280 --> 00:25:22.000
There we go.

393
00:25:22.150 --> 00:25:29.410
And so now we've got rose actually going away and we can see down here, Hibernate is actually executing

394
00:25:29.590 --> 00:25:33.550
sequel to say, delete from person where ID equals blah blah blah.

395
00:25:34.770 --> 00:25:37.290
And that is exactly what we wanted.

396
00:25:37.470 --> 00:25:42.240
And let's get rid of two more these two right here.

397
00:25:42.240 --> 00:25:43.920
In fact, let me clear that out.

398
00:25:43.920 --> 00:25:45.600
I kind of want to pay more attention to it.

399
00:25:45.610 --> 00:25:47.820
OK, so we'll get rid of these two.

400
00:25:49.110 --> 00:25:50.340
There we go now.

401
00:25:50.580 --> 00:25:54.630
It's interesting to me that hibernate is doing this in a in a particular way.

402
00:25:54.780 --> 00:25:57.540
It's actually doing one delete at a time.

403
00:25:57.540 --> 00:26:02.430
I would have thought that it would have used an end clause to do like a delete from person where I'd

404
00:26:02.610 --> 00:26:04.770
in and then it would pass in all the ads.

405
00:26:04.980 --> 00:26:06.060
But it's not doing that.

406
00:26:06.090 --> 00:26:07.740
I'm OK with this for right now.

407
00:26:08.160 --> 00:26:13.320
But that's something interesting to pay attention to, and that's one of the reasons why you sometimes

408
00:26:13.320 --> 00:26:18.480
do want to really analyze what is hibernate generating for the sequel and make sure that it is what

409
00:26:18.480 --> 00:26:20.010
you were expecting it to be.

410
00:26:20.370 --> 00:26:27.180
If we were allowing ourselves to delete thousands or, you know, thousands or tens of thousands of

411
00:26:27.180 --> 00:26:34.740
records by Edy, we almost certainly wouldn't want to do it in this way, where it has to do each deletion

412
00:26:34.740 --> 00:26:37.740
one at a time like this, that's probably not good.

413
00:26:38.220 --> 00:26:46.460
Now, most databases will only allow you to use an end clause up to like 100000 or 1024 parameters in

414
00:26:46.460 --> 00:26:47.220
enclosures.

415
00:26:47.220 --> 00:26:51.330
If you don't know what I'm talking about, I think I did briefly touch on in clauses in the database

416
00:26:51.330 --> 00:26:51.840
section.

417
00:26:51.840 --> 00:26:55.650
But you can go so you can go back there and look it up, or you can just Google it.

418
00:26:56.220 --> 00:26:56.560
All right.

419
00:26:56.580 --> 00:26:58.650
So anyway, I think we're done here.

420
00:26:58.680 --> 00:27:02.910
I think we've got the delete functionality working, and it's working pretty nicely.

421
00:27:02.910 --> 00:27:05.970
I'd say for the most part, I'm pretty happy with it.

422
00:27:06.480 --> 00:27:12.780
So now we've got the ability to display records in the table, add new records and now we can delete

423
00:27:12.780 --> 00:27:13.470
them as well.

424
00:27:13.590 --> 00:27:18.050
And so the only remaining part of crud is the update, right?

425
00:27:18.060 --> 00:27:22.920
We need a way to basically edit a record now.

426
00:27:23.040 --> 00:27:26.370
So let's go ahead and implement that in the next lesson, and I will see you there.
