1
00:00:00,390 --> 00:00:05,940
All right, so the first thing we're going to do is to build a simple Hello World Web application.

2
00:00:05,980 --> 00:00:11,780
OK, now normally we'd go into Intel, AJ, Intel, Intel, AJ to create a new project, yada yada.

3
00:00:12,090 --> 00:00:18,510
However, with spring applications, there is actually what many may consider to be a shortcut to getting

4
00:00:18,510 --> 00:00:19,050
started.

5
00:00:19,230 --> 00:00:20,940
And I'm going to show you that now.

6
00:00:21,240 --> 00:00:28,730
So the first thing we're going to do is to open up a browser and we're going to navigate to start dot

7
00:00:28,770 --> 00:00:32,700
spring dot Io and then hit return.

8
00:00:33,920 --> 00:00:38,870
And that brings us to a little Web application that the spring developers have created, which is out

9
00:00:38,870 --> 00:00:39,620
on the internet.

10
00:00:39,830 --> 00:00:45,710
And what this application will do is we can tell it what type of spring application we want to build

11
00:00:45,920 --> 00:00:50,840
and what types of features or functionality we want to have in this application.

12
00:00:51,230 --> 00:00:58,340
And then this little wizard here will generate a mostly empty project that contains all of the add on

13
00:00:58,340 --> 00:01:05,660
spring framework projects that we need, according to the functionality that we said we wanted all in

14
00:01:05,660 --> 00:01:06,380
one go.

15
00:01:06,590 --> 00:01:09,230
And that'll be a downloadable zip file.

16
00:01:09,320 --> 00:01:14,840
And then we'll download that zip file, unzip it onto our computer wherever we want, and then we can

17
00:01:14,840 --> 00:01:20,370
go into intelligence and simply open that project so it will open into its own project.

18
00:01:20,390 --> 00:01:20,780
OK?

19
00:01:21,050 --> 00:01:27,440
So it's just a nice, convenient way that isn't tied to any specific browser that we can create a new

20
00:01:27,440 --> 00:01:28,490
project from scratch.

21
00:01:28,580 --> 00:01:33,110
We don't have to do it this way, but this is one of the easiest ways to get going.

22
00:01:33,170 --> 00:01:37,220
OK, so the first thing we'll do here is to make our selections.

23
00:01:37,220 --> 00:01:42,200
So we've played a little bit with MAVEN and Gradle I may have mentioned before.

24
00:01:42,230 --> 00:01:49,010
I personally prefer Gradle a little bit over MAVEN, though MAVEN certainly came before Gradle and there

25
00:01:49,010 --> 00:01:53,270
was a long period of time years, in fact, where I was a huge proponent of MAVEN.

26
00:01:53,390 --> 00:01:58,130
But then Gradle came along and eventually I kind of decided I liked Gradle a little a little better,

27
00:01:58,310 --> 00:02:05,990
mostly just because Gradle is able to describe what is needed for a project more concisely than can

28
00:02:05,990 --> 00:02:07,670
be done with with MAVEN.

29
00:02:07,820 --> 00:02:12,440
So I'm personally picking Gradle, but it doesn't matter that much.

30
00:02:12,620 --> 00:02:16,640
I do encourage you, though, to follow me so that we're all on the same page.

31
00:02:17,150 --> 00:02:19,430
And of course, we'll make our language Java.

32
00:02:19,610 --> 00:02:26,150
Now I will point out, though, that the spring framework has fantastic support for using it with other

33
00:02:26,150 --> 00:02:28,550
languages such as Kotlin and Groovy.

34
00:02:29,630 --> 00:02:32,270
But we'll be sticking with Java in this Java course.

35
00:02:33,290 --> 00:02:37,250
And then we also need to decide what version of spring boot we want.

36
00:02:37,610 --> 00:02:43,190
We won't be using any of the experimental cutting edge features of spring, but as of the time of this

37
00:02:43,190 --> 00:02:50,640
recording, so for now, I'm picking two, six three now at the time when you're watching this video.

38
00:02:51,050 --> 00:02:57,500
If there are stable, newer versions of Java, such as 2.7, which is already looking like it's about

39
00:02:57,500 --> 00:02:59,900
to be maybe a release candidate or something.

40
00:02:59,900 --> 00:03:05,270
So if there's 2.7 here and then up here, you're seeing 2.8 m one or something like that.

41
00:03:05,420 --> 00:03:06,140
Don't worry about it.

42
00:03:06,200 --> 00:03:07,880
You can, you can pick 2.7.

43
00:03:07,880 --> 00:03:10,160
You don't have to look for 2.6 that three.

44
00:03:10,550 --> 00:03:17,120
Hopefully, by the time that they have stabilized version 3.0, I may have gone into this video or updated

45
00:03:17,120 --> 00:03:21,430
it with a little note to tell you that it's OK to pick version three.

46
00:03:21,800 --> 00:03:26,780
OK, and then down here, we'll have to tell it a little bit of metadata about our project.

47
00:03:26,930 --> 00:03:32,240
This may look familiar to you because these are the same basic questions that we are asked when we create

48
00:03:32,240 --> 00:03:35,930
a new maven or Gradle project within intelligence.

49
00:03:36,470 --> 00:03:38,660
So we'll have to specify a group.

50
00:03:38,960 --> 00:03:41,810
I will, as usual, use my own company name.

51
00:03:41,930 --> 00:03:46,850
You could use your last name, followed by your first name, whatever you want to do, or you can use

52
00:03:46,850 --> 00:03:47,660
my company name.

53
00:03:47,660 --> 00:03:49,430
It doesn't matter or your own company name.

54
00:03:49,430 --> 00:03:50,510
It really doesn't matter.

55
00:03:50,750 --> 00:03:52,100
OK, so I will do.

56
00:03:52,430 --> 00:03:55,790
Com That neutrino sis.

57
00:03:56,420 --> 00:04:01,160
And then for the artifact, that's basically the name of the project that effectively.

58
00:04:02,330 --> 00:04:11,150
So I think what we're going to build ultimately is going to be a UI version, a UI web application version

59
00:04:11,150 --> 00:04:12,980
of our people database.

60
00:04:13,250 --> 00:04:20,960
So I'm thinking, maybe I'm going to call this people D.B. hyphen web because it'll be a web application.

61
00:04:21,170 --> 00:04:23,750
Now you can feel free to call it whatever you like, though.

62
00:04:24,050 --> 00:04:24,470
All right.

63
00:04:24,480 --> 00:04:27,650
And these other fields are optional.

64
00:04:27,650 --> 00:04:36,470
I guess I'll put something in here, though a people crud application, because eventually we'll make

65
00:04:36,470 --> 00:04:41,210
this to create, read update delete functions all within a browser.

66
00:04:41,540 --> 00:04:45,590
OK, and then finally, we're just seeing the total the combined name of this.

67
00:04:45,950 --> 00:04:48,860
Com Neutrino, says people D.B. Dash Web.

68
00:04:48,860 --> 00:04:49,670
And that's fine.

69
00:04:49,910 --> 00:04:56,180
Now it's also asking us, how will we want this application to be packaged when we're done with it so

70
00:04:56,180 --> 00:04:57,620
that it can be executed?

71
00:04:57,800 --> 00:05:02,750
I'm not going to get into a whole lot of the details here, but basically our choices are a jar file

72
00:05:02,750 --> 00:05:03,830
or a war file.

73
00:05:04,200 --> 00:05:11,480
If if we choose a jar file, what that will mean is when we build the final version of our project and

74
00:05:11,480 --> 00:05:13,940
we are ready to run it somewhere.

75
00:05:14,480 --> 00:05:20,360
If you're a Windows user, a jar file is somewhat equivalent to an XY or an executable.

76
00:05:20,380 --> 00:05:26,490
OK, it's a standalone file that contains everything that's needed to make that application run.

77
00:05:26,510 --> 00:05:26,960
OK.

78
00:05:27,320 --> 00:05:31,310
For the most part, I mean, you do have to have Java installed on on a computer still.

79
00:05:31,320 --> 00:05:35,270
But but other than that, it pretty much has everything in it.

80
00:05:35,570 --> 00:05:43,340
A war file, on the other hand, is something that is meant to be deployed into what is called an application

81
00:05:43,340 --> 00:05:44,120
server.

82
00:05:44,390 --> 00:05:49,940
We won't be going too deep into that right now, but suffice it to say, we're going to be choosing

83
00:05:49,940 --> 00:05:56,720
a jar file, which tends to be the easier, more self-contained style of packaging and then for the

84
00:05:56,720 --> 00:05:57,740
version of Java.

85
00:05:57,890 --> 00:06:02,800
Why not go ahead and use the latest since we've been learning how to use the latest features anyway?

86
00:06:02,810 --> 00:06:09,110
So I'm going to target Java 17 as of the time of this recording, and again, if Java 18 or whatever

87
00:06:09,110 --> 00:06:09,560
is out.

88
00:06:09,560 --> 00:06:14,780
By the time you're watching this and that's one of your options there, you can probably feel safe to

89
00:06:14,780 --> 00:06:17,690
go ahead and select whatever that latest version is.

90
00:06:18,800 --> 00:06:25,280
OK, and now we get to choose what kinds of functionality we want this application to have.

91
00:06:25,310 --> 00:06:25,700
OK.

92
00:06:26,060 --> 00:06:33,140
So you can either click up here on this Add Dependencies button or you can click if you're on Mac Command,

93
00:06:33,170 --> 00:06:34,880
be I'm guessing for Windows.

94
00:06:34,880 --> 00:06:36,080
It's probably controlled by.

95
00:06:36,440 --> 00:06:41,930
I don't know what you'll be seeing if you're on a Windows computer, so I'm going to do the command.

96
00:06:41,960 --> 00:06:42,560
Be there.

97
00:06:43,310 --> 00:06:43,670
OK.

98
00:06:43,940 --> 00:06:50,480
And so now we get to choose from a long, long list of features and capable capabilities, and I'm just

99
00:06:50,480 --> 00:06:52,310
going to scroll through this just so you get an idea.

100
00:06:52,490 --> 00:06:56,570
I mean, there's just a ton of functionality that the spring framework supports.

101
00:06:56,690 --> 00:07:02,540
And honestly, I'm certain that not everything that the spring framework fully supports or the ecosystem

102
00:07:02,540 --> 00:07:05,500
of the spring framework is even added in here.

103
00:07:05,510 --> 00:07:08,090
Although a whole lot of the most popular things are.

104
00:07:08,390 --> 00:07:13,580
So we're going to just start at the top and just work our way down because we're going to pick a number

105
00:07:13,580 --> 00:07:14,090
of things.

106
00:07:14,390 --> 00:07:20,060
We'll start here with this spring boot dev tools, and I guess I'll try to explain very, very briefly

107
00:07:20,060 --> 00:07:21,530
what each of these will do.

108
00:07:21,560 --> 00:07:22,010
OK.

109
00:07:22,400 --> 00:07:29,030
So the spring boot dev tools package will allow us to develop our application in the.

110
00:07:29,100 --> 00:07:36,240
I.D. while it's running and whenever we make small changes to the application, even while it's running,

111
00:07:36,240 --> 00:07:39,480
so we'll be able to see the application in a web browser, right?

112
00:07:39,630 --> 00:07:47,370
That will be our finished product, but we will be able to make changes while the application is running

113
00:07:47,580 --> 00:07:54,810
and those changes will take effect much more quickly than if we did not use the spring boot dev tools

114
00:07:54,810 --> 00:07:55,530
add on.

115
00:07:55,560 --> 00:07:56,050
OK.

116
00:07:56,370 --> 00:08:02,430
So it basically just allows us to have a much quicker round trip between making a change and then seeing

117
00:08:02,430 --> 00:08:05,370
that change take effect in the browser.

118
00:08:05,550 --> 00:08:11,610
So to select that, I'm going to hold down on the command button and click on that.

119
00:08:11,850 --> 00:08:17,370
That way, I can select additional features without having to come back into this little pop-up window

120
00:08:17,370 --> 00:08:17,670
here.

121
00:08:17,700 --> 00:08:18,060
OK?

122
00:08:18,540 --> 00:08:21,660
The next feature we're going to select is Lombok.

123
00:08:21,960 --> 00:08:30,090
So if you'll recall, we learned how we could create both classes and records and records in Java are

124
00:08:30,090 --> 00:08:37,470
a relatively new feature of Java that allows us to create lighter weight classes with less boilerplate.

125
00:08:37,620 --> 00:08:43,590
So we don't have to explicitly write out the setters and getters and the two string and the equals in

126
00:08:43,590 --> 00:08:47,430
the hash code methods in particular, or even the constructor for that matter.

127
00:08:47,700 --> 00:08:50,340
Those are all essentially just get generated for us.

128
00:08:51,030 --> 00:08:59,640
Lombok is an older technology that actually implements a very similar set of capabilities for traditional

129
00:08:59,640 --> 00:09:01,690
classes rather than records.

130
00:09:01,710 --> 00:09:02,130
OK?

131
00:09:02,460 --> 00:09:10,170
And it does this by giving us annotations that we can place on our class, usually at the top of the

132
00:09:10,170 --> 00:09:10,740
class.

133
00:09:11,040 --> 00:09:16,920
And then the framework itself will generate those getters and setters and constructors and all of these

134
00:09:16,920 --> 00:09:18,090
kinds of things for us.

135
00:09:18,300 --> 00:09:24,900
Now, one major difference between Lombok and using records, though, is that records are final.

136
00:09:24,930 --> 00:09:25,410
OK.

137
00:09:25,560 --> 00:09:31,620
And because they are final, we often can't utilize them in the same ways that we would want to use

138
00:09:31,620 --> 00:09:32,320
a class.

139
00:09:32,340 --> 00:09:37,140
So for example, if we created an instance of a class and then later on, we wanted to make changes

140
00:09:37,140 --> 00:09:40,290
to properties of that, of that instance.

141
00:09:40,470 --> 00:09:44,460
You can't do that with a record, but you can do that with classes.

142
00:09:44,850 --> 00:09:49,200
And so by combining Lombok with classes, we kind of get the best of both worlds.

143
00:09:49,380 --> 00:09:55,890
We get the ability to avoid having to write out all of that boilerplate code, like you can do with

144
00:09:55,890 --> 00:09:56,550
records.

145
00:09:56,700 --> 00:10:00,180
But the instances of our classes don't have to be final.

146
00:10:00,720 --> 00:10:01,040
All right.

147
00:10:01,050 --> 00:10:06,020
So we'll we'll I'm going to hold down on the command key and choose Lombok.

148
00:10:06,030 --> 00:10:10,890
And by the way, if you forget to hold down on the command key or I guess, maybe control for Windows

149
00:10:10,890 --> 00:10:13,350
and Linux users and this window goes away.

150
00:10:13,350 --> 00:10:16,630
In fact, they here, I'll just show you real quick like this?

151
00:10:16,650 --> 00:10:17,470
Don't worry about it.

152
00:10:17,610 --> 00:10:21,720
You can just click on the Add Dependencies button again to get back in here.

153
00:10:22,050 --> 00:10:22,440
OK.

154
00:10:22,770 --> 00:10:23,130
All right.

155
00:10:23,130 --> 00:10:29,010
The next thing we're going to grab is spring web, and that represents that spring MVC framework that

156
00:10:29,010 --> 00:10:29,960
I mentioned before.

157
00:10:30,090 --> 00:10:35,460
So this is what we need to select if we want to build a web application, write an application that

158
00:10:35,460 --> 00:10:37,080
runs any web browser.

159
00:10:37,500 --> 00:10:37,830
All right.

160
00:10:37,830 --> 00:10:40,340
So we'll go ahead and select that.

161
00:10:40,710 --> 00:10:44,250
OK, then we'll scroll some more.

162
00:10:46,000 --> 00:10:49,150
The next thing we want is under this template engines.

163
00:10:49,330 --> 00:10:55,570
We want to select time timely if is going to be a little difficult for me to explain, but it has to

164
00:10:55,570 --> 00:11:02,290
do with web application development and basically making templates that represent the web pages that

165
00:11:02,290 --> 00:11:03,850
we are going to be making.

166
00:11:03,850 --> 00:11:06,580
So I will explain more about that when we get into it.

167
00:11:06,670 --> 00:11:08,290
But we we want to use that.

168
00:11:08,650 --> 00:11:12,670
So I will select Time Leaf and then scroll for more.

169
00:11:13,510 --> 00:11:17,740
And now we're getting into the database related technologies.

170
00:11:17,980 --> 00:11:27,130
So for this, we're going to choose spring data JPA So Spring Day to JPA is spring's framework that

171
00:11:27,130 --> 00:11:34,120
will enable us to interact with a relational database without having to write much code at all.

172
00:11:34,120 --> 00:11:37,470
And I mean, like, we basically almost won't write any code.

173
00:11:37,480 --> 00:11:39,880
In fact, it's it's really, really magical.

174
00:11:40,210 --> 00:11:42,100
So we will select that.

175
00:11:43,320 --> 00:11:43,770
OK.

176
00:11:44,130 --> 00:11:49,470
And we will scroll for more and we will want to use the H2 database again.

177
00:11:49,590 --> 00:11:55,350
Now there again are many databases that we could use, but I want to keep this relatively simple.

178
00:11:55,410 --> 00:11:58,270
If we wanted to use one of the other databases, we'd have to all.

179
00:11:58,320 --> 00:12:05,010
I'd have to also teach you how to either install one of those databases or use a technology called Docker

180
00:12:05,010 --> 00:12:10,950
or something like that where where you can kind of stand up a data, a proper database server.

181
00:12:11,220 --> 00:12:14,910
And I really don't want to get into all of that in this course right now.

182
00:12:15,090 --> 00:12:20,790
So we will keep this relatively easy, as we did in the last section, and we will just use the H2 database

183
00:12:20,790 --> 00:12:21,120
again.

184
00:12:21,270 --> 00:12:24,990
And at any rate, you have some familiarity with it now.

185
00:12:25,020 --> 00:12:28,380
Not that you'll need to get too deep into it in this section.

186
00:12:28,950 --> 00:12:29,250
All right.

187
00:12:29,250 --> 00:12:34,080
So we'll choose H2 and down here under IO.

188
00:12:34,110 --> 00:12:37,170
We also want the validation framework.

189
00:12:37,410 --> 00:12:42,750
This will come in handy when we're making web forms, and we want those forms to be able to validate

190
00:12:42,750 --> 00:12:44,060
the data that we're entering.

191
00:12:44,070 --> 00:12:49,860
So if we say that someone has to enter their first name, for example, and they leave that field blank,

192
00:12:49,860 --> 00:12:52,500
we don't want them to be able to submit that form.

193
00:12:52,650 --> 00:12:58,650
We want them to be stopped and be forced to and give them some feedback, telling them, Hey, you can't

194
00:12:58,650 --> 00:13:00,900
submit this form with a blank first name.

195
00:13:00,900 --> 00:13:03,390
You have to have the first name filled, filled out.

196
00:13:03,660 --> 00:13:04,670
Things of that sort.

197
00:13:04,680 --> 00:13:07,770
So that's what this validation framework will will give us.

198
00:13:08,430 --> 00:13:10,320
So let's select that.

199
00:13:11,250 --> 00:13:12,750
And that's finally it.

200
00:13:12,780 --> 00:13:13,260
OK.

201
00:13:13,590 --> 00:13:14,520
So we can.

202
00:13:14,880 --> 00:13:15,130
You can.

203
00:13:15,160 --> 00:13:19,740
I'm just going to click over here and now we can see all of the dependencies that I have chosen.

204
00:13:19,740 --> 00:13:27,690
So just to reiterate, we've got spring boot dev tools Lombok Spring Web Time, Leaf Spring Data, JPA,

205
00:13:27,720 --> 00:13:30,300
H2 database and validation.

206
00:13:30,420 --> 00:13:30,840
OK.

207
00:13:31,650 --> 00:13:36,540
So once you've got all of that and everything filled out as I do.

208
00:13:37,080 --> 00:13:39,990
Go ahead and click the Generate button.

209
00:13:42,030 --> 00:13:44,110
And that is going to generate the project.

210
00:13:44,550 --> 00:13:48,720
Zip it up into a zip file and then download it to our computer.

211
00:13:49,380 --> 00:13:52,530
So the next step is to unzip that file.

212
00:13:52,710 --> 00:13:56,880
In most cases, it will probably have downloaded into your downloads folder.

213
00:13:57,150 --> 00:13:59,630
Feel free to move that to wherever you like.

214
00:13:59,670 --> 00:14:04,980
So wherever you have been writing your code throughout this project, you may want to move that zip

215
00:14:04,980 --> 00:14:09,030
file or the unzipped version of it into whatever that folder is.

216
00:14:09,060 --> 00:14:11,250
OK, so I'm going to do that off camera.

217
00:14:12,210 --> 00:14:21,240
OK, so I went ahead and copied my people db das web zip file into the idea of projects folder on my

218
00:14:21,240 --> 00:14:21,730
computer.

219
00:14:21,750 --> 00:14:26,220
That's where most of my projects that I've been working on with you guys live.

220
00:14:26,520 --> 00:14:29,130
You can again, though, you can put yours wherever you like.

221
00:14:29,550 --> 00:14:34,110
And then I went ahead and unzipped it, as well as on Mac.

222
00:14:34,110 --> 00:14:39,060
At least you can just double click that zip file and unzip it, probably on Windows.

223
00:14:39,060 --> 00:14:43,140
You can do that in the same way as well, so hopefully you shouldn't have any trouble with that.

224
00:14:43,650 --> 00:14:49,110
OK, so now that you've gotten that done, let's meet up in the next lesson and we will write our first

225
00:14:49,110 --> 00:14:49,890
application.

226
00:14:49,890 --> 00:14:50,670
So I'll see you there.
