1
00:00:00,840 --> 00:00:04,540
[Autogenerated] how and welcome to the spring Framework Spring Data Mum Body.

2
00:00:04,540 --> 00:00:10,680
Because here on parasite manga, TB is the most popular nautical database outer.

3
00:00:10,680 --> 00:00:11,900
And for good reason.

4
00:00:11,900 --> 00:00:13,220
It's cross platform.

5
00:00:13,220 --> 00:00:15,990
It's mature, It's fast, it's scalable.

6
00:00:15,990 --> 00:00:20,810
It works with every technology stack from dot net to Java to know GS,

7
00:00:20,810 --> 00:00:22,820
and the different supports transactions,

8
00:00:22,820 --> 00:00:25,810
something very rare in the know sickle world.

9
00:00:25,810 --> 00:00:28,870
So if you're developing Java applications using spring,

10
00:00:28,870 --> 00:00:33,590
I want to learn how to effectively use among body be in your projects today.

11
00:00:33,590 --> 00:00:35,340
Then this course is for you.

12
00:00:35,340 --> 00:00:36,610
My name is Don Job Jonah.

13
00:00:36,610 --> 00:00:38,340
I'm a sneer, softer developer,

14
00:00:38,340 --> 00:00:41,840
and I've been working with Mom going to be for the past seven years.

15
00:00:41,840 --> 00:00:46,490
So to say I'm excited to host this course would be a big understatement.

16
00:00:46,490 --> 00:00:49,460
In the first module will see how to connect a spring

17
00:00:49,460 --> 00:00:53,920
application to an existing mongo server.

18
00:00:53,920 --> 00:00:55,200
More precisely,

19
00:00:55,200 --> 00:00:57,870
we'll see what we need in order to get our

20
00:00:57,870 --> 00:01:00,510
development environment up and running,

21
00:01:00,510 --> 00:01:05,810
then would go through a quick recap off some basic Mongol concepts.

22
00:01:05,810 --> 00:01:06,560
After that,

23
00:01:06,560 --> 00:01:12,080
our shoe that dependence is needed for working with more body be in spring.

24
00:01:12,080 --> 00:01:15,140
Then we'll discuss Mongo date annotations and connection

25
00:01:15,140 --> 00:01:17,510
properties and see where they come in.

26
00:01:17,510 --> 00:01:18,160
And finally,

27
00:01:18,160 --> 00:01:20,990
we'll have a demo in which we create a spring application

28
00:01:20,990 --> 00:01:23,400
and connected to among were to be severed.

29
00:01:23,400 --> 00:01:24,120
That's right.

30
00:01:24,120 --> 00:01:25,690
By the end of this module,

31
00:01:25,690 --> 00:01:29,690
you'll know how to creating Configure a spring application toe work with Mongo.

32
00:01:29,690 --> 00:01:31,630
There are some things that you should be familiar

33
00:01:31,630 --> 00:01:33,680
with before starting the scores.

34
00:01:33,680 --> 00:01:37,840
First of all, you should be comfortable writing job applications.

35
00:01:37,840 --> 00:01:42,190
Then you should have a basic experience using spring and spring boot.

36
00:01:42,190 --> 00:01:44,000
And last but not least,

37
00:01:44,000 --> 00:01:48,740
you should have at least some basic familiarity with Mongo TB.

38
00:01:48,740 --> 00:01:52,610
Getting up and running with Spring and Mongo is pretty pretty easy.

39
00:01:52,610 --> 00:01:53,510
Luckily for us,

40
00:01:53,510 --> 00:01:56,330
the guys developing the spring framework have done a terrific

41
00:01:56,330 --> 00:01:58,910
job at integrating these two technologies.

42
00:01:58,910 --> 00:02:02,240
The first thing that we need to do is prepare the development environment.

43
00:02:02,240 --> 00:02:05,340
Then we can create the name this people's application.

44
00:02:05,340 --> 00:02:05,990
After that,

45
00:02:05,990 --> 00:02:08,100
we can add the spring date among go to be starter

46
00:02:08,100 --> 00:02:10,640
dependency in the palm dot xml file.

47
00:02:10,640 --> 00:02:13,000
Then we can define the connection properties,

48
00:02:13,000 --> 00:02:14,200
and last but not least,

49
00:02:14,200 --> 00:02:18,420
we can apply the manga annotations to control how persistence is done

50
00:02:18,420 --> 00:02:22,540
Those are the five steps that we need in order to create spring

51
00:02:22,540 --> 00:02:24,760
application that can talkto among a server,

52
00:02:24,760 --> 00:02:26,700
and that's what we'll do in this module.

53
00:02:26,700 --> 00:02:28,940
The development environment is pretty standard.

54
00:02:28,940 --> 00:02:31,450
You need Javadi eight or higher.

55
00:02:31,450 --> 00:02:33,080
I'm not going to be server.

56
00:02:33,080 --> 00:02:33,980
In my case,

57
00:02:33,980 --> 00:02:37,580
I'll be running my mom go to be server locally and less

58
00:02:37,580 --> 00:02:40,210
banal istan I D are using you Tell J,

59
00:02:40,210 --> 00:02:43,640
but you can use whatever idea makes you comfortable.

60
00:02:43,640 --> 00:02:46,640
I also want to mention the manga graphical user interface

61
00:02:46,640 --> 00:02:48,730
is if you have a Mongol to be server,

62
00:02:48,730 --> 00:02:52,560
you can surely execute commands using the command prompt or terminal.

63
00:02:52,560 --> 00:02:55,120
But I think it's more practical to have a graphical user

64
00:02:55,120 --> 00:02:58,620
interface to exact comments and see welcomes.

65
00:02:58,620 --> 00:03:00,870
There are two Monk, a graphical user interface.

66
00:03:00,870 --> 00:03:03,340
Is that a particularly love Mongol compass,

67
00:03:03,340 --> 00:03:11,000
which you can find it on the monkey Beside and Robot Pretty both have free to use versions that can use right away

