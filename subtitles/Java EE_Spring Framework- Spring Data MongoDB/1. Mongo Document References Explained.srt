1
00:00:00,820 --> 00:00:03,600
[Autogenerated] I think the time has come to discuss about Mongo.

2
00:00:03,600 --> 00:00:08,990
Document references in this module will start by understanding what

3
00:00:08,990 --> 00:00:12,670
document references are from a mongo to be perspective.

4
00:00:12,670 --> 00:00:16,940
Then we'll create them in spring using at D B ref.

5
00:00:16,940 --> 00:00:20,230
After that, we'll talk about the spring manga lifecycle events,

6
00:00:20,230 --> 00:00:23,210
which are pretty useful hooks that allow us to create

7
00:00:23,210 --> 00:00:25,920
features like a skating or auditing.

8
00:00:25,920 --> 00:00:29,810
And we'll finish with a demo in which will implement document references

9
00:00:29,810 --> 00:00:33,110
and cascading in a spring application that uses Mongo TB.

10
00:00:33,110 --> 00:00:34,720
But let's start with the beginning.

11
00:00:34,720 --> 00:00:38,140
Let's discuss about Mongo Darkman references.

12
00:00:38,140 --> 00:00:38,510
Well,

13
00:00:38,510 --> 00:00:41,700
a documented reference is just a way to link together

14
00:00:41,700 --> 00:00:45,030
multiple documents that are somewhat related.

15
00:00:45,030 --> 00:00:45,520
Mongo D.

16
00:00:45,520 --> 00:00:49,770
B is a nautical database, therefore, for most cases,

17
00:00:49,770 --> 00:00:54,940
that a normalized model where the date I stored in a single document is optimal.

18
00:00:54,940 --> 00:00:58,320
The idea is that if you try to minimize the number off

19
00:00:58,320 --> 00:01:00,990
relationships between your documents,

20
00:01:00,990 --> 00:01:03,340
other parts applications stand to be complex,

21
00:01:03,340 --> 00:01:06,340
and sometimes it's pretty difficult to achieve this.

22
00:01:06,340 --> 00:01:08,200
Let's look at an example.

23
00:01:08,200 --> 00:01:12,120
We have to bank transactions stored as Mongolia P documents.

24
00:01:12,120 --> 00:01:15,740
They all have I D s amounts and customer information.

25
00:01:15,740 --> 00:01:19,290
The customer here is an embedded mongo document.

26
00:01:19,290 --> 00:01:21,970
Re duplicate this information throughout every bank

27
00:01:21,970 --> 00:01:24,640
transaction documents that we safe.

28
00:01:24,640 --> 00:01:28,320
Let's imagine that sometime in the future, the national I.

29
00:01:28,320 --> 00:01:31,740
D number for John Doe is going to change.

30
00:01:31,740 --> 00:01:33,210
Why do you do then?

31
00:01:33,210 --> 00:01:36,280
Well, we have no single entry for John Doe,

32
00:01:36,280 --> 00:01:40,290
so if you go into a bank transaction update the national I.

33
00:01:40,290 --> 00:01:40,400
D.

34
00:01:40,400 --> 00:01:45,240
Number, This won't propagate throughout the rest of the transactions.

35
00:01:45,240 --> 00:01:49,250
All we can do is scan your document and we're refined.

36
00:01:49,250 --> 00:01:52,530
John Doe, update the national the number with the correct value.

37
00:01:52,530 --> 00:01:55,830
That's one problem that we have to face when we're not

38
00:01:55,830 --> 00:01:58,560
using relationships in this case.

39
00:01:58,560 --> 00:01:58,930
Ah,

40
00:01:58,930 --> 00:02:03,780
better approach would have bean to separate the customer from the bank

41
00:02:03,780 --> 00:02:07,360
transaction and store them as two separate documents.

42
00:02:07,360 --> 00:02:11,290
We can save the customer as a mogul to be document.

43
00:02:11,290 --> 00:02:12,660
In our case, you have John Doe.

44
00:02:12,660 --> 00:02:13,150
It has an I.

45
00:02:13,150 --> 00:02:13,740
D.

46
00:02:13,740 --> 00:02:14,400
And the national I.

47
00:02:14,400 --> 00:02:14,520
D.

48
00:02:14,520 --> 00:02:15,050
Number.

49
00:02:15,050 --> 00:02:18,940
On the other hand, when we were working with bank transactions,

50
00:02:18,940 --> 00:02:22,980
we have another month would be document and we link the bank

51
00:02:22,980 --> 00:02:26,680
transaction to a customer via the idee property here.

52
00:02:26,680 --> 00:02:28,320
Customer I d.

53
00:02:28,320 --> 00:02:31,930
Is equal to the I D property of the customer document.

54
00:02:31,930 --> 00:02:37,510
That's a simple manual reference that can apply in manga TB databases.

55
00:02:37,510 --> 00:02:40,930
Now, if you try to update the national I D number for John Doe,

56
00:02:40,930 --> 00:02:44,140
this will get propagated toe every bank transaction

57
00:02:44,140 --> 00:02:46,700
because the bank transaction is no longer responsible for

58
00:02:46,700 --> 00:02:48,630
keeping those fields up to date.

59
00:02:48,630 --> 00:02:52,190
In my body be we have two types of relationships between documents.

60
00:02:52,190 --> 00:02:53,640
Manual references.

61
00:02:53,640 --> 00:02:55,490
This is what you saw a little bit harder.

62
00:02:55,490 --> 00:03:00,460
We are using the idee field of a document in another document.

63
00:03:00,460 --> 00:03:03,250
The second approach is to use the D B refs.

64
00:03:03,250 --> 00:03:07,210
You can think of deep breaths as manual references on steroids.

65
00:03:07,210 --> 00:03:09,360
You can link documents together by using the i.

66
00:03:09,360 --> 00:03:11,760
D field collection, name and database.

67
00:03:11,760 --> 00:03:16,110
Name the B ref killing documents across collections or

68
00:03:16,110 --> 00:03:19,310
even across different databases, something that we cannot achieve.

69
00:03:19,310 --> 00:03:22,440
Using manual references to resolve the refs,

70
00:03:22,440 --> 00:03:25,780
the application must perform additional queries.

71
00:03:25,780 --> 00:03:28,960
The Mongol BB drivers don't that automatically for you.

72
00:03:28,960 --> 00:03:30,070
Luckily for us,

73
00:03:30,070 --> 00:03:33,430
spring date among _____ be handles this scenario and

74
00:03:33,430 --> 00:03:36,640
fetches their little document for us.

75
00:03:36,640 --> 00:03:37,210
Also,

76
00:03:37,210 --> 00:03:41,660
be aware that cascading is not supported using the B refs if

77
00:03:41,660 --> 00:03:44,040
you have a relational database background,

78
00:03:44,040 --> 00:03:46,320
you might be tempted to think that deep you're f you

79
00:03:46,320 --> 00:03:49,850
know is some kind of foreign key, and you can perform joins with.

80
00:03:49,850 --> 00:03:53,940
Well, Debrief is a very simple construct,

81
00:03:53,940 --> 00:03:58,760
and the relationship capabilities that Mongo __ offers us are nowhere near as

82
00:03:58,760 --> 00:04:01,790
powerful as what we get from the relational counterparts.

83
00:04:01,790 --> 00:04:04,900
That's not the reason why we have no sequel databases,

84
00:04:04,900 --> 00:04:07,850
but it's good to know that you can use references to ling.

85
00:04:07,850 --> 00:04:09,840
Documents were appropriate.

86
00:04:09,840 --> 00:04:11,400
A debrief is not.

87
00:04:11,400 --> 00:04:16,870
Something very special is just a sub document with some specific fields.

88
00:04:16,870 --> 00:04:19,320
The 1st 1 is Dollar Sign Ref.

89
00:04:19,320 --> 00:04:23,640
This contains the name off the collection where the link document resides.

90
00:04:23,640 --> 00:04:26,080
Another one is better sign i d.

91
00:04:26,080 --> 00:04:30,570
As the value of Di di field off the reference document and optionally,

92
00:04:30,570 --> 00:04:33,240
we can also have dollar sign Gibby the name for the

93
00:04:33,240 --> 00:04:35,400
database where the reference document.

94
00:04:35,400 --> 00:04:38,220
Besides, we can get an example.

95
00:04:38,220 --> 00:04:41,320
We can see that the engine here is a d B ref.

96
00:04:41,320 --> 00:04:44,030
It has the three properties that are assigned ref

97
00:04:44,030 --> 00:04:46,440
Another sign I D and dollar sign.

98
00:04:46,440 --> 00:04:50,900
Gibby, let me show you how you can interpret the breath in this case,

99
00:04:50,900 --> 00:04:54,540
his engine resides in a collection called Engines.

100
00:04:54,540 --> 00:04:57,900
This is given to us by the dollar sign riff property.

101
00:04:57,900 --> 00:05:01,740
Then this particular engine that we're looking for has the following

102
00:05:01,740 --> 00:05:05,990
i d as defined by the dollar sign I d property.

103
00:05:05,990 --> 00:05:13,480
And also this engine can only be retrieved from the a t M mongo database.

104
00:05:13,480 --> 00:05:18,470
Be aware that the order off these fields in the engine sub document is very,

105
00:05:18,470 --> 00:05:19,770
very important.

106
00:05:19,770 --> 00:05:23,440
In orderto have a d b ref from a mongrel TB perspective,

107
00:05:23,440 --> 00:05:26,590
those fields need to be in a particular order.

108
00:05:26,590 --> 00:05:31,530
Dollar sign, riff, dollar sign I d and the other side to be If you mix the order,

109
00:05:31,530 --> 00:05:33,990
you won't get a document reference.

110
00:05:33,990 --> 00:05:38,550
And last but not least, be aware that deep breaths are not smart.

111
00:05:38,550 --> 00:05:48,000
Don't expect relational database capabilities out over the beer. If instead, think of it as a man, a reference with some benefits

