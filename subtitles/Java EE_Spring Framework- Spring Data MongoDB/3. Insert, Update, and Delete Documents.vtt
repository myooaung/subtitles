WEBVTT
1
00:00:01.440 --> 00:00:05.600
[Autogenerated] we looked at how we can query data using Mongo report stories.

2
00:00:05.600 --> 00:00:08.370
And now I think it's time to look at creating,

3
00:00:08.370 --> 00:00:12.440
updating and reading documents using Mongolia boy stories.

4
00:00:12.440 --> 00:00:14.680
And I have great news for you.

5
00:00:14.680 --> 00:00:18.020
The report story interfaces take care off deserts,

6
00:00:18.020 --> 00:00:21.480
updates in minutes, so there's not much we can do.

7
00:00:21.480 --> 00:00:24.120
Besides calling the appropriate methods,

8
00:00:24.120 --> 00:00:29.220
the four methods that you use to perform these operations are insert,

9
00:00:29.220 --> 00:00:32.170
save, delete and little.

10
00:00:32.170 --> 00:00:34.880
In fact, let's take a look at a couple of examples.

11
00:00:34.880 --> 00:00:37.620
We'll start with an empty report story.

12
00:00:37.620 --> 00:00:42.670
Okay, it's not really empty because airport boy story extends Mongol boy story,

13
00:00:42.670 --> 00:00:45.540
but you do not provide any additional functionality.

14
00:00:45.540 --> 00:00:47.170
Just live it as is.

15
00:00:47.170 --> 00:00:50.700
Let's assume you're creating a new airport for Madrid

16
00:00:50.700 --> 00:00:54.170
with a flights per ____ capacity of 250.

17
00:00:54.170 --> 00:00:58.980
If we call this our method, then our document is goingto be saved in a monk.

18
00:00:58.980 --> 00:01:01.030
A question and, um unique I d.

19
00:01:01.030 --> 00:01:03.940
Is going to be provided for the box.

20
00:01:03.940 --> 00:01:08.460
We can also perform badge inserts using the same method here.

21
00:01:08.460 --> 00:01:12.690
We're creating two airports, one from Madrid, gathering for Valencia.

22
00:01:12.690 --> 00:01:15.360
We are grouping them in a list of airports and they

23
00:01:15.360 --> 00:01:16.910
were calling is certain method.

24
00:01:16.910 --> 00:01:19.830
But this time we pass in the list of airports.

25
00:01:19.830 --> 00:01:24.380
This is an overloaded method on the re boy story interface.

26
00:01:24.380 --> 00:01:25.210
As an outcome,

27
00:01:25.210 --> 00:01:28.330
we have both arguments saved in the collection in a

28
00:01:28.330 --> 00:01:33.780
single round trip to the database, So insert your functions as a batch dessert.

29
00:01:33.780 --> 00:01:36.000
If you wantto update the document,

30
00:01:36.000 --> 00:01:38.740
you need to retrieve it from the collection first.

31
00:01:38.740 --> 00:01:42.280
That's what you're doing using the find by de Method.

32
00:01:42.280 --> 00:01:46.300
Then you can sit new values for their particular instance.

33
00:01:46.300 --> 00:01:50.760
Here we're setting the fights per day 2 300 then can call the

34
00:01:50.760 --> 00:01:53.990
save method and passing the updated object.

35
00:01:53.990 --> 00:02:01.220
As a result, the fights per day property will be changed from 250 to 300.

36
00:02:01.220 --> 00:02:07.170
It's worth mentioning that save functions as uncertain or update,

37
00:02:07.170 --> 00:02:11.660
so it scans the collection and tries to find a document with the matching I D.

38
00:02:11.660 --> 00:02:14.680
If no document is found for that particular I D.

39
00:02:14.680 --> 00:02:16.850
They're safe acts like insert.

40
00:02:16.850 --> 00:02:19.240
A new document is grated.

41
00:02:19.240 --> 00:02:24.840
If a document is found, then it is completely replaced with the provided one.

42
00:02:24.840 --> 00:02:26.130
It is very similar.

43
00:02:26.130 --> 00:02:29.260
Toe the behavior off the Mongol template class,

44
00:02:29.260 --> 00:02:33.540
and my recommendation remains the same use assert in creating

45
00:02:33.540 --> 00:02:36.500
the documents and save when updating them.

46
00:02:36.500 --> 00:02:39.130
I was somewhat to highlight that you cannot do

47
00:02:39.130 --> 00:02:41.860
partial updates using repositories,

48
00:02:41.860 --> 00:02:45.700
so the update capabilities off the Mongol template are a little bit

49
00:02:45.700 --> 00:02:48.270
more complex than what we have for you boy stories.

50
00:02:48.270 --> 00:02:51.140
But in most cases, this is not going to be a problem.

51
00:02:51.140 --> 00:02:54.900
If you want to remove documents from a collection you have to approach is

52
00:02:54.900 --> 00:03:00.460
the 1st 1 is when you retrieve a document from the collection and then you

53
00:03:00.460 --> 00:03:03.640
pass it to the delete method on the report story.

54
00:03:03.640 --> 00:03:08.670
This with the redevelopment, however, you have two round trips to the database,

55
00:03:08.670 --> 00:03:11.940
want Toby Development and the other one to delete it.

56
00:03:11.940 --> 00:03:12.250
Ah,

57
00:03:12.250 --> 00:03:15.400
more efficient alternative is to call the dig it by the method

58
00:03:15.400 --> 00:03:18.380
and just passing The idea of the document that you're trying to

59
00:03:18.380 --> 00:03:23.340
delete the outcome is the same, but the later query is more efficient.

60
00:03:23.340 --> 00:03:28.000
And finally, if you want to remove all the documents in a particular collection,

61
00:03:28.000 --> 00:03:29.530
you can call delete.

62
00:03:29.530 --> 00:03:37.000
All this will erase all the documents from that collection and leave your collection in an empty state

