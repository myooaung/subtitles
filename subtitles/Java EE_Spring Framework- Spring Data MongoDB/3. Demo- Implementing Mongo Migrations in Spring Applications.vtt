WEBVTT
1
00:00:00.700 --> 00:00:04.020
[Autogenerated] I'm very happy to be the demo because now I can get rid

2
00:00:04.020 --> 00:00:08.460
of the poor man's migration components that I have so far and create a

3
00:00:08.460 --> 00:00:12.520
proper solution in his demo will be implementing that immigration's in

4
00:00:12.520 --> 00:00:14.050
spring applications using mongo,

5
00:00:14.050 --> 00:00:18.250
Be well configuring will be and they will implement migration using change

6
00:00:18.250 --> 00:00:22.740
logs and Jane sets before we can start using my Uncle B.

7
00:00:22.740 --> 00:00:25.110
We need Toe added as a dependency.

8
00:00:25.110 --> 00:00:28.760
I opened the bomb that XML file and here we need to

9
00:00:28.760 --> 00:00:31.940
add in the Mongol be dependency.

10
00:00:31.940 --> 00:00:37.140
I'm going to use these snippets and have the Mongol be dependency in place.

11
00:00:37.140 --> 00:00:41.280
The group parties calm that kid have them will be and the artifact is Mongol.

12
00:00:41.280 --> 00:00:46.930
Be as of today, the current version 0 13 But it's can change in the future.

13
00:00:46.930 --> 00:00:51.580
Now we can define the Mongol be being I'm going to define the being

14
00:00:51.580 --> 00:00:54.000
and the Airport Management Application Class,

15
00:00:54.000 --> 00:00:57.840
which is the main entry point into a speedboat application.

16
00:00:57.840 --> 00:01:01.370
The big definition is participle to create a new method which returns an

17
00:01:01.370 --> 00:01:05.150
instance of Mongo B and we annotated with Al Bean.

18
00:01:05.150 --> 00:01:08.970
We grabbed two configuration items from the Application Properties file,

19
00:01:08.970 --> 00:01:14.040
the Mongol, you are I and the migrations are enabled global.

20
00:01:14.040 --> 00:01:15.360
Then we create a new Mongol.

21
00:01:15.360 --> 00:01:19.370
Be runner by passing in the Mongol your eye and we go

22
00:01:19.370 --> 00:01:22.330
ahead to configure our Mongol be business.

23
00:01:22.330 --> 00:01:27.730
We use the setting able method to define if the runner should be enabled or not.

24
00:01:27.730 --> 00:01:31.330
Then we set the change Log scan package,

25
00:01:31.330 --> 00:01:33.410
toe parasite, airport management,

26
00:01:33.410 --> 00:01:37.270
The bee that migrations All off archangel files are

27
00:01:37.270 --> 00:01:39.250
going to be defined in that package.

28
00:01:39.250 --> 00:01:44.530
In fact, it's a good practice to group your migration files in a single place.

29
00:01:44.530 --> 00:01:50.630
Then we're setting the cheese log collection, name and lock collection names.

30
00:01:50.630 --> 00:01:53.540
Now we're passing in the Mongol template.

31
00:01:53.540 --> 00:01:56.990
We want to be able to use mobile template inside the chain,

32
00:01:56.990 --> 00:02:01.050
said methods, So we have to set it here globally.

33
00:02:01.050 --> 00:02:03.010
Were you returned Runner and we're done.

34
00:02:03.010 --> 00:02:06.670
It's worth mentioning that you can declare these mongo be being

35
00:02:06.670 --> 00:02:11.210
in any class annotated with ad configuration.

36
00:02:11.210 --> 00:02:15.340
I'm going to create our first log under the migrations package.

37
00:02:15.340 --> 00:02:18.170
We're creating a class called Debbie Change log 001

38
00:02:18.170 --> 00:02:19.590
and we have the earth changed.

39
00:02:19.590 --> 00:02:23.880
Look, annotation because I want to see data in this class.

40
00:02:23.880 --> 00:02:27.070
The order has to be 001 I want this change.

41
00:02:27.070 --> 00:02:30.640
Look to be the 1st 1 that gets executed,

42
00:02:30.640 --> 00:02:35.200
and then let's go ahead with the implementation.

43
00:02:35.200 --> 00:02:37.890
The implementation should be very familiar.

44
00:02:37.890 --> 00:02:41.080
The first, Chin said, is going to see all the airports.

45
00:02:41.080 --> 00:02:43.250
Note the chain, said annotation.

46
00:02:43.250 --> 00:02:48.050
It's the first thing you said, because it has order equal to 001 It has an I.

47
00:02:48.050 --> 00:02:48.530
D.

48
00:02:48.530 --> 00:02:48.690
C.

49
00:02:48.690 --> 00:02:52.340
The airport, and he has me as an author.

50
00:02:52.340 --> 00:02:55.740
The method itself creates a couple of airports and then

51
00:02:55.740 --> 00:02:57.990
uses the Mongol template to instead, Um,

52
00:02:57.990 --> 00:03:01.110
remember, we can use the Mongol template is had the chain said,

53
00:03:01.110 --> 00:03:05.090
because you defined it globally in the being.

54
00:03:05.090 --> 00:03:08.000
After that, we can also see the flights.

55
00:03:08.000 --> 00:03:10.700
You're creating some flights and they were using the

56
00:03:10.700 --> 00:03:12.960
insert old method on the model template,

57
00:03:12.960 --> 00:03:13.900
and that's it.

58
00:03:13.900 --> 00:03:19.220
Let's go ahead and run this application and again see

59
00:03:19.220 --> 00:03:21.860
my gracious have been executed.

60
00:03:21.860 --> 00:03:27.690
Also get all the flight information in our collection Awesome.

61
00:03:27.690 --> 00:03:30.490
Let's assume that the name of an existing airport like

62
00:03:30.490 --> 00:03:32.640
room is going to change in the future.

63
00:03:32.640 --> 00:03:35.450
For that, we can create a new migration.

64
00:03:35.450 --> 00:03:36.750
Barry's in jeans logs.

65
00:03:36.750 --> 00:03:37.870
We define a new class.

66
00:03:37.870 --> 00:03:38.750
Call it d be changed.

67
00:03:38.750 --> 00:03:39.870
Logs original, too.

68
00:03:39.870 --> 00:03:44.150
We add the actual ____ annotation with the order 002 so it's

69
00:03:44.150 --> 00:03:48.580
going to get executed after the initial sitting.

70
00:03:48.580 --> 00:03:51.280
The implementation should also feel familiar.

71
00:03:51.280 --> 00:03:54.120
We have a new method called Update from Airport.

72
00:03:54.120 --> 00:03:56.240
We're passing in the mongo template.

73
00:03:56.240 --> 00:04:01.740
Everything that at Chain said annotation, is the first set of reaching block.

74
00:04:01.740 --> 00:04:03.580
We're grabbing the Rome airport,

75
00:04:03.580 --> 00:04:07.360
and we're updating the name using the set name method.

76
00:04:07.360 --> 00:04:08.920
They were saving it.

77
00:04:08.920 --> 00:04:10.740
And thats on migration.

78
00:04:10.740 --> 00:04:16.480
Let's for the application again and see if the migration is correctly applied.

79
00:04:16.480 --> 00:04:17.590
And here in the logs,

80
00:04:17.590 --> 00:04:22.360
we can see that only the change log 002 and Jane said Sierra 01 have

81
00:04:22.360 --> 00:04:26.300
bean applied the Rome airport as the new name updated,

82
00:04:26.300 --> 00:04:27.340
which is great.

83
00:04:27.340 --> 00:04:29.810
So Mongol be automatically executed.

84
00:04:29.810 --> 00:04:32.270
Only the needed change logs.

85
00:04:32.270 --> 00:04:37.250
In fact, let's go ahead and look at the data base structure.

86
00:04:37.250 --> 00:04:39.770
I fired up Mongol to be compass,

87
00:04:39.770 --> 00:04:43.480
and we have the Airport Management M seven collection,

88
00:04:43.480 --> 00:04:46.360
and we have airports and flights which are the usual collections.

89
00:04:46.360 --> 00:04:48.770
And then we have two additional collections called

90
00:04:48.770 --> 00:04:51.290
migrations and migrations lock.

91
00:04:51.290 --> 00:04:52.980
These collections are used by Manco.

92
00:04:52.980 --> 00:04:54.190
Be internally.

93
00:04:54.190 --> 00:04:57.360
Remember that We did find them when we created the Mongol.

94
00:04:57.360 --> 00:05:00.640
Be meat.

95
00:05:00.640 --> 00:05:03.260
If you open the migrations collection,

96
00:05:03.260 --> 00:05:08.810
we can see all the migrations that have been executed against this database.

97
00:05:08.810 --> 00:05:13.640
The airport seed, the flight seed and the average Rome airport.

98
00:05:13.640 --> 00:05:16.730
This is how mongo be keeps track internally of the

99
00:05:16.730 --> 00:05:18.900
migrations that have been applied.

100
00:05:18.900 --> 00:05:23.000
You can consider this. Ah, migration put it.

