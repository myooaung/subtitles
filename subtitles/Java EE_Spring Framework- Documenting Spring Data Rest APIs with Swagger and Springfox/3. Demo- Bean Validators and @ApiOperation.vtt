WEBVTT
1
00:00:02.740 --> 00:00:06.550
Let's add in the springfox‑bean‑validators library and see how

2
00:00:06.550 --> 00:00:10.560
that enhances the documentation. We'll add the @ApiModelProperty

3
00:00:10.560 --> 00:00:13.440
annotation to observe the precedence,

4
00:00:13.440 --> 00:00:18.210
then add in the additional property so our required value shows up correctly

5
00:00:18.210 --> 00:00:22.960
in the Swagger UI. We'll also look at a service with an @ApiOperation

6
00:00:22.960 --> 00:00:29.080
annotation to see where those values can change. In the employee entity,

7
00:00:29.080 --> 00:00:33.920
notice how we've added a @NotNull annotation to the department attribute. When

8
00:00:33.920 --> 00:00:38.180
we look at the Swagger UI, there's nothing to indicate that this is a required

9
00:00:38.180 --> 00:00:44.020
attribute from this documentation. Let's add in the springfox‑bean‑validators

10
00:00:44.020 --> 00:00:48.130
library so that we can automatically generate some information from that

11
00:00:48.130 --> 00:00:49.170
annotation.

12
00:00:49.170 --> 00:00:52.640
First, we'll add the dependency to the POM.

13
00:00:52.640 --> 00:00:53.190
Next,

14
00:00:53.190 --> 00:00:57.140
we'll import the BeanValidatorPluginsConfiguration class

15
00:00:57.140 --> 00:01:00.430
in our ApplicationSwaggerConfig class.

16
00:01:00.430 --> 00:01:02.030
That's all we'll do at this point.

17
00:01:02.030 --> 00:01:05.900
We've simply added the library and imported the class, and we'll restart

18
00:01:05.900 --> 00:01:12.210
our application and see what changes. We'll refresh the page, go back

19
00:01:12.210 --> 00:01:16.870
down to the Models. Notice the red asterisk next to department,

20
00:01:16.870 --> 00:01:20.390
indicating that this is a required attribute.

21
00:01:20.390 --> 00:01:25.750
What happens if we also add an @ApiModelProperty to the department

22
00:01:25.750 --> 00:01:31.910
attribute? Let's restart the application and see what happens. We'll refresh

23
00:01:31.910 --> 00:01:35.560
the Swagger UI. Notice how the description is there,

24
00:01:35.560 --> 00:01:39.740
but we're missing the asterisk next to department.

25
00:01:39.740 --> 00:01:44.090
This is because the @ApiModelProperty takes precedence over

26
00:01:44.090 --> 00:01:47.240
the @NotNull annotation for documentation.

27
00:01:47.240 --> 00:01:50.300
If you want to keep an asterisk next to department in the

28
00:01:50.300 --> 00:01:54.670
documentation, you'll need to add the required = true value

29
00:01:54.670 --> 00:01:57.570
for the @ApiModelProperty annotation.

30
00:01:57.570 --> 00:02:00.840
Let's restart,

31
00:02:00.840 --> 00:02:05.950
refresh the page, and now we have the red asterisk back in the

32
00:02:05.950 --> 00:02:11.120
documentation. To see what the @ApiOperation annotation does, let's check

33
00:02:11.120 --> 00:02:16.130
out the GET method under the example service. Notice that it's a GET, and

34
00:02:16.130 --> 00:02:21.540
by default it says getSchedule next to the URI.

35
00:02:21.540 --> 00:02:24.470
When we expand it, there's no additional information that

36
00:02:24.470 --> 00:02:28.370
appears. If we go to the ExampleService class,

37
00:02:28.370 --> 00:02:34.130
we can add the @ApiOperation annotation with a value and notes.

38
00:02:34.130 --> 00:02:39.300
Now when we restart the app and refresh our page,

39
00:02:39.300 --> 00:02:44.225
notice that now what we put in for value appears next to the schedule URI, Get

40
00:02:44.225 --> 00:02:49.360
the default schedule for employees, and what we put under the notes value

41
00:02:49.360 --> 00:02:53.380
appears underneath All employees share the same schedule.

42
00:02:53.380 --> 00:02:56.990
This is a simple way to utilize a Swagger annotation if you

43
00:02:56.990 --> 00:03:03.000
have some additional services that you've added to your Spring Data REST API project.

