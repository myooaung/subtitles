1
00:00:01,040 --> 00:00:05,720
If you want to have multiple versions of your documentation available in

2
00:00:05,720 --> 00:00:10,670
a single Swagger UI, you can use Swagger groups to accomplish this.

3
00:00:10,670 --> 00:00:14,190
Groups are configured in the Docket object.

4
00:00:14,190 --> 00:00:18,930
You'll simply call groupName and provide a name for the group. From

5
00:00:18,930 --> 00:00:22,720
the Swagger UI, you can then select from groups you have defined to

6
00:00:22,720 --> 00:00:25,340
see the documentation for that group.

7
00:00:25,340 --> 00:00:27,410
If your code is in the same code base,

8
00:00:27,410 --> 00:00:32,170
you can utilize PathSelectors to filter endpoints from each version

9
00:00:32,170 --> 00:00:38,040
into different Docket objects with different groups.

10
00:00:38,040 --> 00:00:41,580
Let's look at an example of using Swagger groups to

11
00:00:41,580 --> 00:00:43,990
create multiple Docket objects,

12
00:00:43,990 --> 00:00:46,900
each with a different group, and PathSelectors to

13
00:00:46,900 --> 00:00:50,180
filter endpoints for a specific version.

14
00:00:50,180 --> 00:00:54,670
We can then see how you can switch from one group to another in the

15
00:00:54,670 --> 00:01:00,220
Swagger UI. Here's an example of a Docket that is using a groupName. In

16
00:01:00,220 --> 00:01:03,830
this particular class we're creating three different Dockets,

17
00:01:03,830 --> 00:01:10,440
employeeApi1, employeeApi2, and employeeApi2.

18
00:01:10,440 --> 00:01:14,040
We've put a different groupName for each Docket,

19
00:01:14,040 --> 00:01:18,520
and we've also put a different path selector for each Docket. We've also

20
00:01:18,520 --> 00:01:23,970
modified to getApiInfo method to accept a version number.

21
00:01:23,970 --> 00:01:27,130
This will set the version number on the title of the Swagger.

22
00:01:27,130 --> 00:01:30,370
UI based on the version that's passed in. If you were

23
00:01:30,370 --> 00:01:33,850
maintaining multiple methods in the same code base based

24
00:01:33,850 --> 00:01:38,380
on different request mappings, this is what that would look like.

25
00:01:38,380 --> 00:01:42,910
Notice the difference between getSchedule1 and getSchedule2.

26
00:01:42,910 --> 00:01:46,140
The RequestMapping value has a different path,

27
00:01:46,140 --> 00:01:51,240
employeev1/schedule versus employeev2/schedule.

28
00:01:51,240 --> 00:01:54,900
We've also defined one for version 3 and the return message is

29
00:01:54,900 --> 00:01:59,120
different in all 3 so we can see it in action from the Swagger UI

30
00:01:59,120 --> 00:02:03,850
when we call this endpoint. Notice now in the Swagger UI there's a

31
00:02:03,850 --> 00:02:07,090
drop‑down box to select a definition.

32
00:02:07,090 --> 00:02:10,750
The three different Swagger groups that we defined all appear here,

33
00:02:10,750 --> 00:02:14,740
and we can switch between the three. For v1, notice the title is

34
00:02:14,740 --> 00:02:21,440
employee‑api‑v1, and our example service has the v1 path.

35
00:02:21,440 --> 00:02:24,470
If we switch it to v2, notice how the version on our

36
00:02:24,470 --> 00:02:28,900
documentation title has changed to employee‑api‑v2,

37
00:02:28,900 --> 00:02:33,090
as well as the URI for the example service method.

38
00:02:33,090 --> 00:02:37,270
And when we switch to v3, we can see the v3. Let's run the GET

39
00:02:37,270 --> 00:02:41,090
method for each of these three services. Notice the response

40
00:02:41,090 --> 00:02:46,010
here, Your v3 schedule is T‑F 8‑6.

41
00:02:46,010 --> 00:02:53,410
Now let's run v2. Your v2 schedule is M‑W 9‑9. And v1. And

42
00:02:53,410 --> 00:02:58,290
finally, we can see the v1 schedule is M‑F 9‑5.

43
00:02:58,290 --> 00:03:02,590
Swagger groups are a good option if you need to host multiple groups on

44
00:03:02,590 --> 00:03:09,310
the same Swagger UI. Congratulations, you've seen how to leverage

45
00:03:09,310 --> 00:03:14,000
annotations for additional documentation like the bean validator library

46
00:03:14,000 --> 00:03:19,240
for JSR‑303 annotations, as well as some Swagger annotations like

47
00:03:19,240 --> 00:03:23,140
ApiModelProperty and ApiOperation.

48
00:03:23,140 --> 00:03:27,020
You've also seen how to handle documentation for different versions of

49
00:03:27,020 --> 00:03:32,480
your API with tools like PathSelectors and Swagger groups. You're now

50
00:03:32,480 --> 00:03:37,170
ready to add great documentation to your API using Swagger and SpringFox

51
00:03:37,170 --> 00:03:39,140
with very little configuration.

52
00:03:39,140 --> 00:03:48,000
The best part is it's based off your code, so it's easier to keep up to date. I hope you have found this valuable, and thank you for watching.

