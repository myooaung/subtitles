WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.000
in the last lecture,

00:00:03.000 --> 00:00:04.140
we talked about the kids.

00:00:04.140 --> 00:00:07.320
Check out this comment also to unmodified the falls,

00:00:07.320 --> 00:00:13.050
and also it helps us to go back in time and check the state of the project on any commit we

00:00:13.050 --> 00:00:13.500
want.

00:00:13.500 --> 00:00:14.980
As remember,

00:00:14.980 --> 00:00:17.650
key check out is just a read on the command.

00:00:17.650 --> 00:00:22.850
You are not able to undo things or create a new commits in previous states off the project

00:00:22.850 --> 00:00:22.850
.

00:00:22.850 --> 00:00:28.780
Now we're going to introduce you to other commands which alot are to undo things and get

00:00:28.780 --> 00:00:32.320
the first commander I'm going to talk about is get revert.

00:00:32.320 --> 00:00:35.440
It is used to undo the changes to your projects.

00:00:35.440 --> 00:00:36.470
Commit history,

00:00:36.470 --> 00:00:42.450
certainly Revert Command takes the specified commit inverse the changes from the commit and

00:00:42.450 --> 00:00:48.700
creates a new revert commit That's gotta haven't seen practice how it actually works.

00:00:48.700 --> 00:00:49.450
At first,

00:00:49.450 --> 00:00:52.470
let's log the committees to re using get a log,

00:00:52.470 --> 00:00:53.120
dash,

00:00:53.120 --> 00:00:54.040
dash one line.

00:00:54.040 --> 00:00:55.850
So,

00:00:55.850 --> 00:00:56.920
as you see overall,

00:00:56.920 --> 00:01:02.020
we have five commits Supposed that we want to undo the changes from the committee in which

00:01:02.020 --> 00:01:05.050
we added the paragraph in the HTML document.

00:01:05.050 --> 00:01:07.020
So how can we do that?

00:01:07.020 --> 00:01:08.780
We should run the command,

00:01:08.780 --> 00:01:14.280
get revert and then we have to specify the idea after commit.

00:01:14.280 --> 00:01:16.770
So it's copy and paste it you.

00:01:16.770 --> 00:01:21.030
Once we run this command event,

00:01:21.030 --> 00:01:25.160
a new temporary file will be opened inside off our text editor.

00:01:25.160 --> 00:01:28.810
You can see here Revert with the message of the committee.

00:01:28.810 --> 00:01:29.870
Actually,

00:01:29.870 --> 00:01:31.860
we're liable to change this message,

00:01:31.860 --> 00:01:32.770
but for no,

00:01:32.770 --> 00:01:34.150
I'm going to live it as it is.

00:01:34.150 --> 00:01:35.520
Then down below,

00:01:35.520 --> 00:01:40.390
you will find that these Roberts commit and we have an i d off the committee,

00:01:40.390 --> 00:01:41.720
which we're going to revert.

00:01:41.720 --> 00:01:45.410
So now we have to close this file and once we do that,

00:01:45.410 --> 00:01:49.550
then the paragraph will be deleted from the HD more thought.

00:01:49.550 --> 00:01:50.830
And also,

00:01:50.830 --> 00:01:51.860
as we already said,

00:01:51.860 --> 00:01:53.340
the new committee will be made.

00:01:53.340 --> 00:01:56.050
So if we run gets look,

00:01:56.050 --> 00:01:56.930
dash,

00:01:56.930 --> 00:01:57.850
dash one line,

00:01:57.850 --> 00:02:03.790
then you will find that the new committee is made reverts Added paragraph.

00:02:03.790 --> 00:02:10.020
So we have gone back in time and undid the specified commit.

00:02:10.020 --> 00:02:11.080
Actually,

00:02:11.080 --> 00:02:12.520
between those two commits,

00:02:12.520 --> 00:02:15.410
we have one commit created variable.

00:02:15.410 --> 00:02:18.220
If we checked descriptor Js file,

00:02:18.220 --> 00:02:21.130
you will find that the variable still exists.

00:02:21.130 --> 00:02:24.380
It means that when you use git revert command,

00:02:24.380 --> 00:02:28.710
you don't touch any off the changes which was made in another commit.

00:02:28.710 --> 00:02:31.410
You always undo this specified commit.

00:02:31.410 --> 00:02:36.960
So this picture is very useful because sometimes you may have some mistakes in your

00:02:36.960 --> 00:02:43.080
previous specified commits and get revert allows you to fix those mistakes without changing

00:02:43.080 --> 00:02:44.140
any other commit.

00:02:44.140 --> 00:02:45.600
All right,

00:02:45.600 --> 00:02:46.980
that's my moment.

00:02:46.980 --> 00:02:48.510
Talk about Get reset,

00:02:48.510 --> 00:02:52.320
which actually is known as the dangerous and unsafe command,

00:02:52.320 --> 00:02:55.360
because it can permanently delete your work.

00:02:55.360 --> 00:02:58.040
So you should be careful with get reset.

00:02:58.040 --> 00:02:59.920
Let's go ahead and see actually,

00:02:59.920 --> 00:03:01.420
how this committed works.

00:03:01.420 --> 00:03:02.060
Before that,

00:03:02.060 --> 00:03:08.170
I'm going to add a couple of committed to our project that's create a simple navigation in

00:03:08.170 --> 00:03:18.240
HTML document used not element and then inside of heat insert least with couple off least

00:03:18.240 --> 00:03:24.470
items again.

00:03:24.470 --> 00:03:30.640
If you're not familiar with those different elements and in general with HTML or CSS or

00:03:30.640 --> 00:03:31.260
JavaScript,

00:03:31.260 --> 00:03:33.090
it's not really a problem.

00:03:33.090 --> 00:03:35.740
You can feel free and use just the text files,

00:03:35.740 --> 00:03:39.270
or even you can work with office documents like Word,

00:03:39.270 --> 00:03:40.500
Excel and someone.

00:03:40.500 --> 00:03:42.900
We just need to make some changes in our faults.

00:03:42.900 --> 00:03:44.050
All right,

00:03:44.050 --> 00:03:49.390
let's go ahead and at the index dot html file to the staging area for that we need to get

00:03:49.390 --> 00:03:58.920
at and they finally then check the status so the fall is ready to be committed.

00:03:58.920 --> 00:04:03.990
Let's make a new commit with a message,

00:04:03.990 --> 00:04:05.420
added navigation.

00:04:05.420 --> 00:04:11.900
Then let's go ahead and look to commit history.

00:04:11.900 --> 00:04:19.950
So here we have our last commit No,

00:04:19.950 --> 00:04:21.650
I'm going to make another one.

00:04:21.650 --> 00:04:25.500
Let's go to the script a Js file and create some simple function.

00:04:25.500 --> 00:04:30.170
Then,

00:04:30.170 --> 00:04:32.690
at this file to the staging area,

00:04:32.690 --> 00:04:35.240
we need get at script Archer.

00:04:35.240 --> 00:04:35.850
Yes,

00:04:35.850 --> 00:04:47.750
and finally make the commit with the message created function then logged the history.

00:04:47.750 --> 00:04:55.050
So now suppose that we want to delete those two commits,

00:04:55.050 --> 00:04:56.300
which we have just make.

00:04:56.300 --> 00:04:58.740
So how can we do that?

00:04:58.740 --> 00:05:01.440
That's the moment when get reset comes in,

00:05:01.440 --> 00:05:02.660
we can run,

00:05:02.660 --> 00:05:03.550
get reset,

00:05:03.550 --> 00:05:08.240
and now we can use three different flex,

00:05:08.240 --> 00:05:10.940
which actually act in different ways.

00:05:10.940 --> 00:05:14.020
The 1st 1 is Dash Dash mixed,

00:05:14.020 --> 00:05:17.040
which is a default flag.

00:05:17.040 --> 00:05:18.300
It means that if we run,

00:05:18.300 --> 00:05:21.870
just get reset than the mixed flag will work anyway.

00:05:21.870 --> 00:05:22.810
Besides that,

00:05:22.810 --> 00:05:26.970
we have soft and heart.

00:05:26.970 --> 00:05:31.630
I'm going to discuss all off those three flags.

00:05:31.630 --> 00:05:33.660
Let's start with mixed.

00:05:33.660 --> 00:05:40.090
So now we have to indicate the idea off the commit in this guy's when we want to delete

00:05:40.090 --> 00:05:41.200
those two commits.

00:05:41.200 --> 00:05:43.740
We have to specify the idea off the previous committee.

00:05:43.740 --> 00:05:44.400
I mean,

00:05:44.400 --> 00:05:46.900
the idea off Revert added paragraph.

00:05:46.900 --> 00:05:52.160
So if we run this command and then check the history,

00:05:52.160 --> 00:05:58.280
you will say that the last two commits are removed.

00:05:58.280 --> 00:06:03.060
But it doesn't mean that we remote physically the navigation and the function from our

00:06:03.060 --> 00:06:03.640
files.

00:06:03.640 --> 00:06:04.390
As you see,

00:06:04.390 --> 00:06:05.870
both of them still exists.

00:06:05.870 --> 00:06:10.130
So it means that we have just removed the commits from the history.

00:06:10.130 --> 00:06:11.830
If we checked status,

00:06:11.830 --> 00:06:19.300
you will find that the index dot html and this creep the jays falls are unstaged,

00:06:19.300 --> 00:06:22.900
so they no longer exists at the staging area.

00:06:22.900 --> 00:06:26.140
So in order to discourage the changes from the files,

00:06:26.140 --> 00:06:28.110
I mean to remove them permanently,

00:06:28.110 --> 00:06:29.470
we can run,

00:06:29.470 --> 00:06:32.190
get check out,

00:06:32.190 --> 00:06:35.060
then dots.

00:06:35.060 --> 00:06:37.110
Now,

00:06:37.110 --> 00:06:37.660
as you see,

00:06:37.660 --> 00:06:44.820
we no longer have here the navigation and also the function and the jobless we find If we

00:06:44.820 --> 00:06:45.850
check the status,

00:06:45.850 --> 00:06:50.080
then our working treat will be clean.

00:06:50.080 --> 00:06:54.370
So that's the way how get reset mixed works.

00:06:54.370 --> 00:06:58.840
It just removes the commits from the history and also it onstage.

00:06:58.840 --> 00:07:00.820
Too far from the staging area,

00:07:00.820 --> 00:07:03.300
they end up in the working directory.

00:07:03.300 --> 00:07:05.900
Let's go ahead and describe other flags.

00:07:05.900 --> 00:07:10.150
Let's I soft first of all lovely history.

00:07:10.150 --> 00:07:15.380
Now suppose that we want to remove the next to commits.

00:07:15.380 --> 00:07:18.770
I mean Revert added paragraph and created variable.

00:07:18.770 --> 00:07:19.950
As we said,

00:07:19.950 --> 00:07:22.140
Now we're going to use the flag soft,

00:07:22.140 --> 00:07:24.250
so let's rank it reset.

00:07:24.250 --> 00:07:25.240
Dash,

00:07:25.240 --> 00:07:26.210
dash soft.

00:07:26.210 --> 00:07:29.620
And then we have to specify the I d.

00:07:29.620 --> 00:07:35.760
Let's love the history again.

00:07:35.760 --> 00:07:38.310
As you see,

00:07:38.310 --> 00:07:39.580
commits are dilated,

00:07:39.580 --> 00:07:45.650
but like the previous case files are not change and the jobless hoof always to have

00:07:45.650 --> 00:07:46.210
variable.

00:07:46.210 --> 00:07:51.460
The difference between the soft and mixed flats is that in case of soft the files are

00:07:51.460 --> 00:07:53.370
maintained on the staging area.

00:07:53.370 --> 00:07:55.180
They are not unstaged.

00:07:55.180 --> 00:07:56.730
If we check the status,

00:07:56.730 --> 00:08:00.440
you will see that both files are green,

00:08:00.440 --> 00:08:02.430
so it means that they are staged.

00:08:02.430 --> 00:08:06.190
Now if we want to make the changes in the files,

00:08:06.190 --> 00:08:07.520
we have two onstage.

00:08:07.520 --> 00:08:11.040
Both of them for that we have to use gets reset.

00:08:11.040 --> 00:08:13.960
So in other to on stage,

00:08:13.960 --> 00:08:16.380
both files will have to place here dots.

00:08:16.380 --> 00:08:22.770
And now if we check the status files will be on stage.

00:08:22.770 --> 00:08:23.710
And finally,

00:08:23.710 --> 00:08:26.240
in order to make the changes we have to use again.

00:08:26.240 --> 00:08:29.880
Get check out with DOT.

00:08:29.880 --> 00:08:31.720
As you said,

00:08:31.720 --> 00:08:36.220
the variable is deleted from the JavaScript fought also as conceived.

00:08:36.220 --> 00:08:38.330
The paragraph is displayed back,

00:08:38.330 --> 00:08:40.980
which maybe is a slightly unexpected.

00:08:40.980 --> 00:08:45.740
It happened because we in fact deleted Revert added paragraph.

00:08:45.740 --> 00:08:46.480
Therefore,

00:08:46.480 --> 00:08:52.940
the commit added program is no longer indeed became so That's the way how get reset soft

00:08:52.940 --> 00:08:53.580
works.

00:08:53.580 --> 00:08:54.920
So both flags.

00:08:54.920 --> 00:08:56.650
I mean mixed and soft removed,

00:08:56.650 --> 00:08:57.310
he commits.

00:08:57.310 --> 00:08:59.150
But the 1st 1 on stage,

00:08:59.150 --> 00:09:01.080
the file from the staging area.

00:09:01.080 --> 00:09:06.940
As for the 2nd 1 it maintains them and doesn't onstage as is so in both cases,

00:09:06.940 --> 00:09:11.820
we have gone through a couple of steps in order to make the changes in files and not only

00:09:11.820 --> 00:09:12.810
remove the commits,

00:09:12.810 --> 00:09:17.630
but if you want to remove the commit and also make the changes in far simultaneously,

00:09:17.630 --> 00:09:20.630
you can simply use gets reset with hard flak.

00:09:20.630 --> 00:09:22.660
That's lovely history again.

00:09:22.660 --> 00:09:28.920
So now suppose that you want to delete all off the commits except the initial one,

00:09:28.920 --> 00:09:32.660
and also at the same time you want to make the changes in files as well.

00:09:32.660 --> 00:09:33.440
For that,

00:09:33.440 --> 00:09:34.450
we have to run,

00:09:34.450 --> 00:09:35.340
gets reset,

00:09:35.340 --> 00:09:37.160
dash,

00:09:37.160 --> 00:09:41.540
dash heart and then we have to specify the I.

00:09:41.540 --> 00:09:41.860
D.

00:09:41.860 --> 00:09:43.700
So,

00:09:43.700 --> 00:09:44.210
as you see,

00:09:44.210 --> 00:09:45.730
the changes are making false.

00:09:45.730 --> 00:09:46.900
The heading is removed.

00:09:46.900 --> 00:09:47.730
Also,

00:09:47.730 --> 00:09:53.010
this cryptologist file is deleted and we have the state off the project from the initial

00:09:53.010 --> 00:09:53.430
commit.

00:09:53.430 --> 00:09:55.050
If we check the status,

00:09:55.050 --> 00:09:58.640
you will see that the working tree is clean.

00:09:58.640 --> 00:09:59.460
And also,

00:09:59.460 --> 00:10:00.990
if we love the history,

00:10:00.990 --> 00:10:03.860
we will get just a single initial commit.

00:10:03.860 --> 00:10:05.650
All right,

00:10:05.650 --> 00:10:09.260
so that's the way how gets revert and get reset work.

00:10:09.260 --> 00:10:11.960
I know that it might be a little bit hard to grasp.

00:10:11.960 --> 00:10:16.690
So if you feel yourself confused if anything in this video is not clear,

00:10:16.690 --> 00:10:20.610
then I recommend to re wash this lecture and test things on your own.

00:10:20.610 --> 00:10:21.840
Okay,

00:10:21.840 --> 00:10:22.460
that's it.

00:10:22.460 --> 00:10:23.580
See you in the next video.

