WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:05.130
hello and welcome to our new section in which we're going to be talking about one off.

00:00:05.130 --> 00:00:10.470
The important features of gate which is branching and get branches are a part of our

00:00:10.470 --> 00:00:12.440
everyday developing process.

00:00:12.440 --> 00:00:13.440
For example,

00:00:13.440 --> 00:00:15.940
when you want to add a new feature to your project,

00:00:15.940 --> 00:00:20.030
or maybe you might need to fix a but then you can use branch.

00:00:20.030 --> 00:00:21.100
First of all,

00:00:21.100 --> 00:00:22.960
let's recall what branch itself is.

00:00:22.960 --> 00:00:25.120
As you can see on the diagram,

00:00:25.120 --> 00:00:28.940
there is a project timeline we have here different commits,

00:00:28.940 --> 00:00:33.260
and this timeline is actually a brunch by default.

00:00:33.260 --> 00:00:36.680
When you create a report story and then make different commits,

00:00:36.680 --> 00:00:39.270
you're working on the master brunch,

00:00:39.270 --> 00:00:43.180
which actually you have already seen lots of times in the previous sections.

00:00:43.180 --> 00:00:46.750
Sometimes you may need to add a new feature to your project,

00:00:46.750 --> 00:00:51.550
and at the same time you don't want to touch or break the current state of the project.

00:00:51.550 --> 00:00:52.970
In that case,

00:00:52.970 --> 00:00:58.400
the best solution is to create a new branch and work all the newly created brunch.

00:00:58.400 --> 00:01:00.020
I mean to add files,

00:01:00.020 --> 00:01:01.550
make commits and so on.

00:01:01.550 --> 00:01:03.740
Then,

00:01:03.740 --> 00:01:06.340
after creating and testing the new feature,

00:01:06.340 --> 00:01:11.110
if you're happy with that then you can merge this bride to the master brunch.

00:01:11.110 --> 00:01:14.660
You're able to create as many branches as you wish.

00:01:14.660 --> 00:01:15.350
Also,

00:01:15.350 --> 00:01:16.560
it's really helpful when,

00:01:16.560 --> 00:01:17.400
for example,

00:01:17.400 --> 00:01:20.260
several developers are working on the same project.

00:01:20.260 --> 00:01:25.050
Each of them can work on a different branch without breaking other developers work.

00:01:25.050 --> 00:01:26.360
All right,

00:01:26.360 --> 00:01:30.160
let's go ahead and see in practice how to work with branches again.

00:01:30.160 --> 00:01:30.560
For now,

00:01:30.560 --> 00:01:32.230
we're on the master branch.

00:01:32.230 --> 00:01:34.940
So in order to create a new branch,

00:01:34.940 --> 00:01:36.580
we need to run the following command,

00:01:36.580 --> 00:01:38.180
get branch,

00:01:38.180 --> 00:01:45.640
and now we have to specify the name off the branch and this guy's let's say feature one now

00:01:45.640 --> 00:01:45.640
,

00:01:45.640 --> 00:01:48.290
in order to check which branch we're working on,

00:01:48.290 --> 00:01:50.120
and also what branches do we have?

00:01:50.120 --> 00:01:51.060
We can run.

00:01:51.060 --> 00:01:53.970
Get branch now,

00:01:53.970 --> 00:01:54.880
As you see overall,

00:01:54.880 --> 00:01:57.700
we have two branches master and feature one,

00:01:57.700 --> 00:01:59.920
and currently we're on the master brunch.

00:01:59.920 --> 00:02:01.580
It has different color,

00:02:01.580 --> 00:02:05.010
and also in front of it there is placed an asterisk.

00:02:05.010 --> 00:02:08.470
Let's see how we can switch to a different branch.

00:02:08.470 --> 00:02:11.350
For that we have to use get check out,

00:02:11.350 --> 00:02:14.580
and then we have to specify the name off the branch.

00:02:14.580 --> 00:02:22.240
This guy's feature one as a seat Now we switch to branch feature one and it will run again

00:02:22.240 --> 00:02:22.240
.

00:02:22.240 --> 00:02:23.180
Gauge Branch.

00:02:23.180 --> 00:02:27.440
You will see that now we're working on a future.

00:02:27.440 --> 00:02:33.650
One branch also the name of the brunt inside of the parentheses is different Now.

00:02:33.650 --> 00:02:36.740
If we checked the commute history using get locked dash,

00:02:36.740 --> 00:02:37.710
dash one line,

00:02:37.710 --> 00:02:41.840
we will get all the commits which we have made so far.

00:02:41.840 --> 00:02:47.530
So we're able to use those commits and also make new ones which won't be available on the

00:02:47.530 --> 00:02:53.270
master branch In order to prove that I'm going to make some changes to the project and make

00:02:53.270 --> 00:02:59.150
a new commit that's open style dot CSS file and change the color of heading element.

00:02:59.150 --> 00:03:05.330
Let's make it green then at this file to the staging area,

00:03:05.330 --> 00:03:16.480
using kids at and finally make a new commit but the message styled heading.

00:03:16.480 --> 00:03:22.340
So now if we check the history,

00:03:22.340 --> 00:03:27.650
then we will get here than you commit Styled heading.

00:03:27.650 --> 00:03:28.820
But actually,

00:03:28.820 --> 00:03:34.150
if we switch to the master branch using get check out master,

00:03:34.150 --> 00:03:41.230
then you will see that the style for the handing of it has gone from the CSS file.

00:03:41.230 --> 00:03:42.200
And also,

00:03:42.200 --> 00:03:43.460
if we check the history,

00:03:43.460 --> 00:03:48.700
then the last commit won't be available here.

00:03:48.700 --> 00:03:50.170
All right,

00:03:50.170 --> 00:03:55.640
let's move on and see how we can create and switch to the newly created branch with just

00:03:55.640 --> 00:03:56.290
one comment.

00:03:56.290 --> 00:03:59.240
Suppose that we want to create another branch,

00:03:59.240 --> 00:04:01.800
featured two and switch to it immediately.

00:04:01.800 --> 00:04:03.250
We need to run,

00:04:03.250 --> 00:04:04.250
get check out.

00:04:04.250 --> 00:04:11.950
Then we have to use flag dash B and we have to specify the name off the branch future too.

00:04:11.950 --> 00:04:17.250
So know who run gets branch.

00:04:17.250 --> 00:04:20.160
You will find that overall,

00:04:20.160 --> 00:04:25.970
we have three different branches and currently we're on the newly created feature to branch

00:04:25.970 --> 00:04:25.970
.

00:04:25.970 --> 00:04:27.710
All right,

00:04:27.710 --> 00:04:29.600
Before we finish this lecture,

00:04:29.600 --> 00:04:31.830
I'm going to show you how to delete branches.

00:04:31.830 --> 00:04:33.720
For that we have to run,

00:04:33.720 --> 00:04:40.680
get branch and the flag tache d But we need to write it in upper case.

00:04:40.680 --> 00:04:44.020
And then we have to specify the name off the branch.

00:04:44.020 --> 00:04:50.290
Remember that you cannot Billy the branch which you're currently working on in this case

00:04:50.290 --> 00:04:51.770
we're on figure to.

00:04:51.770 --> 00:04:53.710
So if we try to delete it,

00:04:53.710 --> 00:04:59.650
then we will get an error saying that we cannot delete branch future too.

00:04:59.650 --> 00:05:02.940
But it would change feature to into,

00:05:02.940 --> 00:05:03.530
for example,

00:05:03.530 --> 00:05:06.470
feature one then it should be deleted.

00:05:06.470 --> 00:05:08.010
If we run,

00:05:08.010 --> 00:05:08.840
get brunch.

00:05:08.840 --> 00:05:12.080
Does that feature?

00:05:12.080 --> 00:05:14.250
One branch will be no longer available.

00:05:14.250 --> 00:05:15.750
All right,

00:05:15.750 --> 00:05:17.680
so that's it for now.

00:05:17.680 --> 00:05:18.500
In this lecture,

00:05:18.500 --> 00:05:21.190
we have learned about how to create a new branch,

00:05:21.190 --> 00:05:25.750
how to switch between different branches and also how to delete them.

00:05:25.750 --> 00:05:27.450
See you in the next lecture.

