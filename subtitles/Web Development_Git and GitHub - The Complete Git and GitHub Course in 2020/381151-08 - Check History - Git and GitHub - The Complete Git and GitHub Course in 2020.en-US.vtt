WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.560
all right.

00:00:01.560 --> 00:00:02.740
So in the previous lecture,

00:00:02.740 --> 00:00:04.340
we made our very first commit.

00:00:04.340 --> 00:00:06.340
We have learned about how to do that.

00:00:06.340 --> 00:00:07.130
In this video.

00:00:07.130 --> 00:00:08.820
I'm going to make some other commits,

00:00:08.820 --> 00:00:11.830
and I will show you how to check the history off the commits.

00:00:11.830 --> 00:00:13.370
So first of all,

00:00:13.370 --> 00:00:16.050
I'm going to check the status off our repository.

00:00:16.050 --> 00:00:17.890
Let's run get stages.

00:00:17.890 --> 00:00:20.250
As you see For now,

00:00:20.250 --> 00:00:21.570
we have nothing to commit,

00:00:21.570 --> 00:00:23.660
and our working tree is clean.

00:00:23.660 --> 00:00:26.790
Let's go ahead and modify slightly our files.

00:00:26.790 --> 00:00:30.950
I'm going to create a new element inside an HTML document.

00:00:30.950 --> 00:00:31.920
Again,

00:00:31.920 --> 00:00:37.010
you don't need to know about how HTML and CSS work they may think here is to change and

00:00:37.010 --> 00:00:37.940
modify the files.

00:00:37.940 --> 00:00:42.110
So let's create H one heading elements with some text.

00:00:42.110 --> 00:00:45.050
Let's say get is awesome.

00:00:45.050 --> 00:00:50.650
Then I'm going to add some styles into style that CSS file.

00:00:50.650 --> 00:00:56.910
Let's select H one heading elements and change its phone size.

00:00:56.910 --> 00:00:59.030
Make it 40 weeks.

00:00:59.030 --> 00:01:00.190
All right,

00:01:00.190 --> 00:01:02.780
so we have made some changes in both off the files.

00:01:02.780 --> 00:01:04.820
Let's check the status.

00:01:04.820 --> 00:01:06.960
So is the seat.

00:01:06.960 --> 00:01:08.610
Both falls are modified,

00:01:08.610 --> 00:01:10.690
they have red color,

00:01:10.690 --> 00:01:14.750
and the next thing that we have to do is to add them to the staging area.

00:01:14.750 --> 00:01:16.860
You already know how to do that.

00:01:16.860 --> 00:01:18.470
We have to use the command.

00:01:18.470 --> 00:01:19.450
Get at.

00:01:19.450 --> 00:01:22.100
Actually,

00:01:22.100 --> 00:01:26.500
we can either indicate both far names in one command like so.

00:01:26.500 --> 00:01:34.560
But imagine that we're working with a large project and we have to add tense off falls.

00:01:34.560 --> 00:01:38.180
Then typing file names will be really hard and painful.

00:01:38.180 --> 00:01:40.680
So in order to avoid this,

00:01:40.680 --> 00:01:47.640
we can use just dots instead of the file names and all the fast will be added to the

00:01:47.640 --> 00:01:48.480
staging area.

00:01:48.480 --> 00:01:51.250
Let's check again the status.

00:01:51.250 --> 00:01:56.680
So now both files are added to the staging area,

00:01:56.680 --> 00:02:01.340
and the next thing that have to do it to make the commit for that we have to run the

00:02:01.340 --> 00:02:01.900
command,

00:02:01.900 --> 00:02:02.950
get commit,

00:02:02.950 --> 00:02:10.150
then dash and and now we have to ease of the message.

00:02:10.150 --> 00:02:11.880
Let's say added,

00:02:11.880 --> 00:02:12.780
heading.

00:02:12.780 --> 00:02:17.060
All right,

00:02:17.060 --> 00:02:19.390
so now we have to commits in the history.

00:02:19.390 --> 00:02:21.390
I'm going to create one more commit.

00:02:21.390 --> 00:02:29.500
Let's create a new file and colleagues script thought Js So what do you think?

00:02:29.500 --> 00:02:32.250
What will be the state off the newly created file?

00:02:32.250 --> 00:02:39.930
I mean script Js Let's go ahead and see it in order to check that Let's run get status.

00:02:39.930 --> 00:02:46.290
As you see it's an untracked file because it doesn't exist in the last snapshot.

00:02:46.290 --> 00:02:48.540
In order to start tracking this file,

00:02:48.540 --> 00:02:50.800
we have to add it to the staging area.

00:02:50.800 --> 00:02:52.290
So we have to write,

00:02:52.290 --> 00:02:57.060
get at and the name of the file script or Js.

00:02:57.060 --> 00:03:03.540
Now it is staged and next we have to make a new commit for that.

00:03:03.540 --> 00:03:04.380
We have to run,

00:03:04.380 --> 00:03:06.150
get commit,

00:03:06.150 --> 00:03:08.110
Dash,

00:03:08.110 --> 00:03:08.550
Um,

00:03:08.550 --> 00:03:13.850
and as the message that's right at Js fought.

00:03:13.850 --> 00:03:17.770
All right,

00:03:17.770 --> 00:03:18.680
so at this point,

00:03:18.680 --> 00:03:23.090
we already have three commits and now I'm going to show you how we can check the history

00:03:23.090 --> 00:03:24.100
off our commits.

00:03:24.100 --> 00:03:24.880
For that,

00:03:24.880 --> 00:03:26.220
we have to run the command,

00:03:26.220 --> 00:03:27.340
get lug.

00:03:27.340 --> 00:03:30.410
As you can see,

00:03:30.410 --> 00:03:32.130
we got here three commits.

00:03:32.130 --> 00:03:34.800
Let's go ahead and describe What do we have here?

00:03:34.800 --> 00:03:40.600
The first thing that we see here is some away characters which actually is the unique

00:03:40.600 --> 00:03:46.970
identifying off the commit then we see had master the head is something like Pointer.

00:03:46.970 --> 00:03:49.950
And actually we will discuss it a little bit later.

00:03:49.950 --> 00:03:51.930
Next we have an author.

00:03:51.930 --> 00:03:56.330
It shows us the name and the email often author off this committee as remember,

00:03:56.330 --> 00:04:02.090
we added those name and email while we were trying to make our first commit and get has

00:04:02.090 --> 00:04:03.770
required some configuration.

00:04:03.770 --> 00:04:06.220
Next comes the date off the commit.

00:04:06.220 --> 00:04:08.810
And finally we have the message off the comet,

00:04:08.810 --> 00:04:14.980
as he noticed the first commit that we see here is actually the last one that we have just

00:04:14.980 --> 00:04:15.300
made.

00:04:15.300 --> 00:04:16.580
Okay,

00:04:16.580 --> 00:04:18.180
then we have second commit.

00:04:18.180 --> 00:04:23.570
It shows us the state of the project when we added heading and the last one represents our

00:04:23.570 --> 00:04:26.600
very first initial commit right.

00:04:26.600 --> 00:04:29.490
So that's the way how we can check the history of commits.

00:04:29.490 --> 00:04:32.370
For that we have to use Git Log Command.

00:04:32.370 --> 00:04:33.670
Actually,

00:04:33.670 --> 00:04:35.440
there is another way to do the same.

00:04:35.440 --> 00:04:37.950
Get law gives us some bunch of information,

00:04:37.950 --> 00:04:42.000
and if you want to get this information in kind of a concise way,

00:04:42.000 --> 00:04:46.750
then we can run this command with flag dash,

00:04:46.750 --> 00:04:48.270
dash one line.

00:04:48.270 --> 00:04:52.220
Now the information is much shorter.

00:04:52.220 --> 00:04:59.010
Each committee's Joan in one line the identify where is represented with just 1st 7

00:04:59.010 --> 00:04:59.770
characters,

00:04:59.770 --> 00:05:04.750
but a number off the characters is enough to use the identify ire in different commence.

00:05:04.750 --> 00:05:05.620
Also,

00:05:05.620 --> 00:05:11.660
we no longer have here author and date and finally we have here just the message off the

00:05:11.660 --> 00:05:12.030
committee.

00:05:12.030 --> 00:05:14.860
So you are able to use both ways.

00:05:14.860 --> 00:05:20.480
Sometimes when you have lots of commits than using that shorter way is more convenient.

00:05:20.480 --> 00:05:21.740
All right,

00:05:21.740 --> 00:05:24.610
so that's all about how we can check the history of commits.

00:05:24.610 --> 00:05:25.410
For that,

00:05:25.410 --> 00:05:26.690
we have to use commands.

00:05:26.690 --> 00:05:27.770
Get luck,

00:05:27.770 --> 00:05:30.290
or it's shorter way Get locked.

00:05:30.290 --> 00:05:30.790
Dash,

00:05:30.790 --> 00:05:31.950
dash one like.

00:05:31.950 --> 00:05:33.400
Okay,

00:05:33.400 --> 00:05:34.670
see you in the next video.

