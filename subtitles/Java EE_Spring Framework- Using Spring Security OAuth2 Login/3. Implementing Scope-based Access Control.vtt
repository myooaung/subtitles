WEBVTT
1
00:00:01.640 --> 00:00:03.220
As mentioned in a previous clip,

2
00:00:03.220 --> 00:00:07.540
Spring automatically maps values in the scopes claim into granted

3
00:00:07.540 --> 00:00:12.240
authorities and prefixes them with a capital SCOPE_.

4
00:00:12.240 --> 00:00:16.390
So let's also require access to support /admin for

5
00:00:16.390 --> 00:00:20.040
clients with a scope named support‑admin.

6
00:00:20.040 --> 00:00:20.840
Now, to achieve this,

7
00:00:20.840 --> 00:00:25.240
we use the access method where we can write a Spring expression.

8
00:00:25.240 --> 00:00:29.330
Okay, if we restart the application, and log in as Victoria,

9
00:00:29.330 --> 00:00:32.740
and then access the Admin section, boom,

10
00:00:32.740 --> 00:00:34.640
403 unauthorized.

11
00:00:34.640 --> 00:00:37.330
The reason for that is she has the role of admin,

12
00:00:37.330 --> 00:00:40.310
but the client doesn't have the approved scope to

13
00:00:40.310 --> 00:00:43.840
perform this task on her behalf.

14
00:00:43.840 --> 00:00:46.400
So let's go back to the Keycloak admin console,

15
00:00:46.400 --> 00:00:49.340
under Client Scopes, let's create that scope,

16
00:00:49.340 --> 00:00:50.940
support‑admin.

17
00:00:50.940 --> 00:00:55.320
Then for our client, crypto‑portfolio, under Client Scopes,

18
00:00:55.320 --> 00:00:59.240
we can add it as a default or even optional.

19
00:00:59.240 --> 00:00:59.490
Now,

20
00:00:59.490 --> 00:01:01.150
optional would mean that the client would actually have to

21
00:01:01.150 --> 00:01:05.740
request that scope in the authorization request.

22
00:01:05.740 --> 00:01:07.640
I'll add it as default though.

23
00:01:07.640 --> 00:01:11.040
Now, if we relog back in as Victoria,

24
00:01:11.040 --> 00:01:13.960
you can see the access token now has the new scope,

25
00:01:13.960 --> 00:01:17.240
and Victoria can now access the Admin section.

26
00:01:17.240 --> 00:01:20.840
Now, you're probably thinking, now, what's the purpose of checking this scope?

27
00:01:20.840 --> 00:01:24.330
Well, in the demo, as it stands, none really.

28
00:01:24.330 --> 00:01:26.000
But in the future,

29
00:01:26.000 --> 00:01:30.500
we could have multiple clients for the crypto‑portfolio application,

30
00:01:30.500 --> 00:01:34.890
so perhaps a mobile front‑end client or a single page application version.

31
00:01:34.890 --> 00:01:39.340
And for those clients, we might not want them to perform any admin functions,

32
00:01:39.340 --> 00:01:43.420
so we can simply not include the support‑admin scope for those clients. And

33
00:01:43.420 --> 00:01:46.810
even if a user who is an administrator is using them,

34
00:01:46.810 --> 00:01:55.000
they will not have the authority to perform admin functions. So it's a kind of a nice separation of concerns. But next, let's wrap up.

