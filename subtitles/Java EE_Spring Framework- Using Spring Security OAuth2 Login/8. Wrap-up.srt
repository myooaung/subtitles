1
00:00:01,840 --> 00:00:04,100
Our demo app has come a long way.

2
00:00:04,100 --> 00:00:06,860
Users now have the option of social login,

3
00:00:06,860 --> 00:00:09,080
which improves the user's experience,

4
00:00:09,080 --> 00:00:12,840
which should result in more people using the application.

5
00:00:12,840 --> 00:00:17,700
The key takeaways here, always prefer OpenID Connect over

6
00:00:17,700 --> 00:00:20,790
OAuth2 implementations as it's more secure,

7
00:00:20,790 --> 00:00:23,140
cleaner, and simpler to code.

8
00:00:23,140 --> 00:00:27,440
Spring Security is very customizable. If you need to change any

9
00:00:27,440 --> 00:00:30,230
part of the authentication code flow, there is an endpoint in

10
00:00:30,230 --> 00:00:32,840
Spring that represents that state,

11
00:00:32,840 --> 00:00:37,420
such as the redirect token or userinfo endpoint. Now,

12
00:00:37,420 --> 00:00:41,090
combining form and OAuth2 authentication in your application

13
00:00:41,090 --> 00:00:44,500
can work, but there is a more scalable, secure,

14
00:00:44,500 --> 00:00:49,060
cleaner, and simpler way of adding authentication to your application by

15
00:00:49,060 --> 00:00:56,000
outsourcing it completely to an authorization server. Let's look at that, next.

