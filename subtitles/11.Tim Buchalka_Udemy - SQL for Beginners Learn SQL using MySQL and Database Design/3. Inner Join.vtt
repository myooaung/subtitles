WEBVTT

00:05.300 --> 00:10.690
A case in this video we're going to be looking at in a Joines and in a joint So the most common type

00:10.690 --> 00:12.630
of join you'll encounter.

00:12.970 --> 00:14.510
So let's take a look now.

00:14.800 --> 00:21.640
So here I've selected stuff from my orders table and you can see we have the all the time for each order

00:22.010 --> 00:29.020
and we have customer ID and part of ID now tidy and saying isn't really that useful.

00:29.050 --> 00:36.470
I mean we don't really know what part of tidy one is what tidy five is free is etc. but if we were to

00:36.910 --> 00:38.790
select stuff from our products table

00:41.560 --> 00:45.170
we can see that for each product today we have a name.

00:45.250 --> 00:48.470
So this is much more useful information.

00:48.550 --> 00:56.560
So what if we wanted to select the product name field but also be all the time from the Order table

00:56.910 --> 01:00.910
would have to do a join on the orders and the products table.

01:00.910 --> 01:03.320
So let's have a look at how we can do that now.

01:03.520 --> 01:08.920
So I want to join products in the order table so that we get the product name filled from the Products

01:08.920 --> 01:12.670
table and they all the time from the Orders table.

01:12.850 --> 01:16.310
So we can write and enjoying queery to do this.

01:16.360 --> 01:22.860
So let's do that now that selects from orders.

01:23.830 --> 01:26.610
Now I've left column blank for now.

01:26.630 --> 01:28.460
I'll fill that in in a minute.

01:28.840 --> 01:39.640
So we select from orders and we want to do and enjoy in on the next line with the products table.

01:39.640 --> 01:46.000
So this is how we do and enjoying we select from one table and then we write in a drawing on the second

01:46.000 --> 01:50.100
table and then we need to write on.

01:50.590 --> 01:56.410
Now the two tables have to have a column in common to do the join.

01:56.410 --> 02:03.040
So you can see here we have in the Orders table we have a product ID field and in the products table

02:04.090 --> 02:09.300
we have an ID field and these are the two columns which are in common with each table.

02:09.550 --> 02:19.400
So on the after the on we can type orders Product ID.

02:19.480 --> 02:27.940
This is saying from the Orders table we have to put up today and that's equal to the Products table

02:30.480 --> 02:31.510
ID.

02:31.870 --> 02:39.040
So this is saying that the prototype ID column from the Orders table is equivalent to the ID field from

02:39.040 --> 02:40.460
the Products table.

02:40.480 --> 02:47.710
So when we do our join on the orders on the products table we need to type on orders dot product id

02:47.800 --> 02:49.970
x products ID.

02:50.410 --> 02:53.520
And then of course we need to finish with a semi-colon.

02:53.710 --> 02:58.130
So before we run this statement let's now select our columns.

02:58.570 --> 03:05.830
So we wanted to select the name column from the Products table and we wanted to select the order time

03:06.550 --> 03:09.960
from the Orders table.

03:09.970 --> 03:14.490
Now if we were just to type name and order a time like this like we normally do when selecting from

03:14.490 --> 03:21.830
a table my isko doesn't actually know which table to select the name field from which table to select

03:21.830 --> 03:22.840
View all the time from.

03:22.840 --> 03:25.910
Does it select from the Orders table or the products table.

03:26.230 --> 03:30.340
So again we need to first type the table name.

03:30.370 --> 03:37.420
So in this case it's product and we need to do product name.

03:37.660 --> 03:39.670
And then for all the time we need to do the same.

03:39.670 --> 03:43.360
So we need to take orders all the time.

03:43.390 --> 03:46.170
And actually the name is products no product.

03:46.180 --> 03:47.510
Say Be careful there.

03:48.150 --> 04:00.460
So select table name column name from Table 1 in enjoying table 2 ON TABLE 1 door column name ECOs table

04:00.490 --> 04:03.050
to call them name.

04:03.070 --> 04:10.510
Now let's run this statement and you can see now we have much more useful information.

04:10.510 --> 04:13.180
Instead of having the product.

04:13.180 --> 04:20.350
So one two three four five six seven we have the names so we can see espresso was ordered at this time

04:21.070 --> 04:26.510
and is ordered by the product name by default.

04:26.950 --> 04:34.210
And then you can see when macchiato is in the cappuccinos and the filters and latte's etc are ordered.

04:34.210 --> 04:37.720
So this is how we join tables using an inner join.

04:38.190 --> 04:44.930
And it's quite a lot of writing here is quite a long statement to write out.

04:45.160 --> 04:48.070
But there's actually a shorthand version of this.

04:48.370 --> 04:52.360
And let's do let's write out the shorthand version now.

04:52.450 --> 04:58.130
So I'm going to write the equivalent join stateman but I'm going to write the shorthand version.

04:58.600 --> 05:04.620
So again we start with select and instead of writing the whole table name I'm just going to write.

05:04.720 --> 05:13.620
Don't name say pay for products and then I'm going to type orders for orders.

05:13.690 --> 05:19.540
So I order time from orders

05:22.370 --> 05:24.440
an off to orders I'm just going to type.

05:24.480 --> 05:32.670
I said this is like when we did the column name radiuses we wrote the column name as another name.

05:32.670 --> 05:35.240
So this is like the equivalent of up for tables.

05:35.240 --> 05:40.310
So we're saying that the orders table is going to be referenced doesn't I.

05:40.310 --> 05:42.810
From now on this statement.

05:42.810 --> 05:46.850
And then on the next line we can actually just type join than in a join.

05:46.860 --> 05:50.190
So join in and join the same our equivalent.

05:50.190 --> 05:55.280
We need to type products and then we need to set the table alias again.

05:55.340 --> 05:58.220
So for products it's going to be pay.

05:58.280 --> 06:09.470
And then we need to do on product ID is the COO to p ID so you can see this was a lot quicker to write

06:09.480 --> 06:14.570
out when you use the table name alias's orders to IBM products to pay.

06:15.270 --> 06:21.440
And then let's run this statement and you can see it returns exactly the same information.

06:21.930 --> 06:27.750
So we can also have a where clause is an order by clause is in our Joines as well.

06:27.750 --> 06:38.640
So lets add a few now so that she can also add the price to this query.

06:38.650 --> 06:46.600
So P-doc price the price column from the products table and I'm going to add an ORDER BY statement so

06:46.600 --> 06:51.730
I'm going to say order by and I want to order it by the order time this time rather than the product

06:51.730 --> 06:52.800
name.

06:52.840 --> 06:59.580
So in the order by I need to write I because it's the orders table all the time.

07:00.550 --> 07:08.060
And let's run that query now and you can see as I did the price column from the products table.

07:08.200 --> 07:12.480
But it's no longer ordered by a product name as ordered by the all the time.

07:12.480 --> 07:20.760
So we have the first of January 2017 and then the second and third fourth etc..

07:20.980 --> 07:29.170
So remember when you're adding an order by clauses to your Joines you need to first state the table

07:29.170 --> 07:38.350
name then the column name and it's exactly the same for the where clause is the where clause where the

07:38.380 --> 07:44.760
products product ID is equal to 5.

07:45.850 --> 07:51.250
So again we need to stay the table say the product IDs from the Orders table.

07:51.490 --> 08:01.390
So we need to type doc product IDs equal to 5 and then we can run statement and you can see just returns

08:01.930 --> 08:06.390
all the orders for Product ID 5 which is a miracle.

08:06.870 --> 08:11.330
So you got Americano price and every time that was ordered at the store.

08:11.790 --> 08:13.830
OK so that's it for in a Joines.

08:13.830 --> 08:21.760
Just remember the syntax when writing enjoying queries it's like select table name dot call a name for

08:21.760 --> 08:30.310
all the columns you want to have in your resultset and then you say from Table 1 join table to all and

08:30.310 --> 08:37.750
table one doc column name it cause table to that column name and make sure that these two columns are

08:37.750 --> 08:38.920
equivalent to each other.

08:38.920 --> 08:41.740
So part of ID and ID fields.

08:42.010 --> 08:44.820
So if you want to practice you're in a joint statement.

08:44.830 --> 08:52.180
Maybe you'd like to try and write a query which joins the orders table and custom is table but that's

08:52.180 --> 08:53.300
it for this video.
