WEBVTT

00:05.080 --> 00:09.840
My case you know let's look at grouping data using a GROUP BY clause.

00:09.880 --> 00:12.770
So here Rife's selected Stoff from our bookings table.

00:13.060 --> 00:18.450
And you can see we have an ID field a screening ID field and a customer id field.

00:18.640 --> 00:23.210
And here I've written a query which says Select County ID from bookings.

00:23.230 --> 00:24.430
So let's run now.

00:25.020 --> 00:29.040
And you can see there are 410 bookings in the bookings table.

00:29.380 --> 00:36.190
But what if we want to get the number of bookings per person so let's select start from bookings again

00:36.300 --> 00:38.820
and you can see we have this customer ID.

00:39.220 --> 00:43.770
So let's try and select customer ID here.

00:47.390 --> 00:48.660
And count the ID.

00:48.680 --> 00:55.720
So hopefully this is going to show us each customer ID on the count for each customer ID from the bookings

00:55.730 --> 00:56.370
table.

00:56.600 --> 01:02.870
So hopefully we'll get the number of bookings for each customer service that's now.

01:03.430 --> 01:09.020
And you can see we've actually got an error saying we need a group by expression.

01:09.080 --> 01:16.750
So basically any color which we've stated here which isn't an aggregate function.

01:16.760 --> 01:22.690
So in this case customer ID must appear in a group by function group by clause.

01:22.730 --> 01:26.100
So I set up a group by clause now to do that.

01:26.180 --> 01:31.650
We just need to go on the next line and type group by followed by the column name.

01:31.670 --> 01:40.650
So in this case is customer ID and then we can just run this and you can see if we get rid of this error

01:40.650 --> 01:41.000
bar.

01:41.000 --> 01:45.260
Now you can see we have more than one value returns.

01:45.270 --> 01:53.880
We actually have a value for each customer ID so we can see custom one made 16 bookings in October 2017

01:54.530 --> 01:58.740
customer 2 made for customer free and made six etc etc..

01:58.860 --> 02:04.320
So now we have our count of our ID field groups by customer ID.

02:04.320 --> 02:05.900
So if you use an aggregate function.

02:05.910 --> 02:11.430
But we've got more than 1 ROI returns and that's because we've grouped by our customer id

02:42.010 --> 02:44.760
so select store from bookings again.

02:45.130 --> 02:50.820
And you can see we also have this screening I.D. select select screening I.D. as well.

02:50.860 --> 02:53.500
And this query here.

02:53.840 --> 03:02.650
So let's tie screening I.D. so as well as getting customer ID for each booking.

03:02.650 --> 03:06.630
We should also get the screening I.D. So that's right.

03:07.230 --> 03:11.560
And you can see as returns an error again saying that expression too.

03:11.590 --> 03:15.550
So the screening I.D. is not in a group by clause.

03:15.550 --> 03:21.290
So any color which we put here must appear in the group by clause.

03:21.360 --> 03:28.150
If it's not being aggregated over so we can put a second column in here we can say grouped by custom

03:28.190 --> 03:33.900
ID Colma screening ID and let's run

03:37.140 --> 03:39.390
and you can see we now have results returned.

03:39.420 --> 03:41.340
So let's have a look at their results.

03:44.570 --> 03:54.320
Say what is it saying is saying bad customer id one made one booking for a screening idea 11 he made

03:54.320 --> 04:03.200
one booking for screening ID 24 one booking for 33 37 etc. in October 2017.

04:03.590 --> 04:10.580
So we're now getting a combination of our customer ID and our screening I.D. and the number of times

04:10.930 --> 04:15.060
that customer made a booking for that screening.

04:15.110 --> 04:22.580
So a customer ID made one booking for each of these screenings and then a customer ID made one booking

04:22.580 --> 04:33.250
for each of these screenings and three four five etc. for every single customer ID.

04:33.330 --> 04:40.630
So what's happening is for every unique customer id plus screening Id say 111 11 is unique 124 is unique.

04:40.650 --> 04:45.460
1:33 is unique etc. we we're getting one value returned in the count.

04:45.480 --> 04:49.720
Id call him say 1 1 1 1 1 etc..

04:50.520 --> 04:56.250
So this is what happens when we grouped by customer ID and grouped by screening ID.

04:56.760 --> 05:02.930
So lets try and write a complicated escrow query where we are going to join four tables together and

05:02.970 --> 05:06.020
we're going to include a group by clause.

05:06.150 --> 05:12.540
So I want to join the customers table the bookings table the screenings table and the films table together

05:12.990 --> 05:16.240
to get some good information in our results.

05:16.710 --> 05:20.640
So let's type selects death dog name.

05:20.700 --> 05:24.800
So I want the film name from the name from the films table.

05:24.960 --> 05:29.550
Then I will start time so I need to go to the screenings table and get the start time

05:32.670 --> 05:41.970
I want the customers first and last name so I need to write customer first name and customer last name

05:44.520 --> 05:49.750
and then find the I want to count on the bookings Id like I did in previous query.

05:49.770 --> 06:01.050
So I want to write down the dot ID and I want to say from the films path and then I want to join the

06:01.050 --> 06:04.240
films table together with the screenings table.

06:04.470 --> 06:14.300
So when I write joy in screenings screenings ass all in half day by day.

06:14.310 --> 06:22.110
So the ID field and the films table is the crew to the film Id call them in the screenings table and

06:22.110 --> 06:25.560
then I want to join the screenings table with the bookings table.

06:25.680 --> 06:26.650
So last night.

06:26.690 --> 06:33.210
Joining bookings be on Star ID.

06:33.230 --> 06:37.770
Is he to be thought screening ID.

06:38.040 --> 06:43.660
And then the last joint I want to do is between the bookings table and the customers table select type

06:43.680 --> 06:55.020
join customers see on the customer ID is equal to see ID.

06:55.260 --> 06:56.640
So that's it for our Joines.

06:56.640 --> 07:03.570
Now we need to add a group by clause so we need to group by four different columns because we have four

07:03.570 --> 07:07.800
columns in our select stateman which are not being aggregated over.

07:07.950 --> 07:18.200
So we need to say group by name and then see your last name.

07:18.370 --> 07:20.650
See dog first name.

07:23.210 --> 07:24.780
Yes start time

07:28.530 --> 07:33.440
and then not sit for the group by an hour or so when I do order by close.

07:33.450 --> 07:41.380
So I want to order by the start time says order by astore start time and run that query

07:44.550 --> 07:48.150
and you can see we have the films here.

07:48.150 --> 07:50.040
We have the start time.

07:50.040 --> 07:56.640
We have the first and last name and then we have the number of bookings that they made for each film

07:57.690 --> 07:59.690
so we can see here.

08:00.310 --> 08:07.830
Wyong John Smith and Simon Davis all made up bookings for Dunkirk which was shown on the first day of

08:07.830 --> 08:20.010
October 1 pm and then for Blade Runner at 1:30 pm on the 1st of October we had Teresa Davis Sally and

08:20.010 --> 08:22.710
Emma Watson and so on and so on.

08:22.710 --> 08:33.540
So we had Dunkirk at 2pm from no Smith and you can look for all this data here to see who made bookings

08:33.540 --> 08:41.050
for which film and at which time and how many bookings for the group by clause for now.

08:41.130 --> 08:47.880
Just remember that any column you selects in this next statement which isnt being aggregated over must

08:47.880 --> 08:49.830
appear in the group by clause.
