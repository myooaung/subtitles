WEBVTT

00:05.080 --> 00:09.340
OK so in this video we're going to be looking at the function substring.

00:09.610 --> 00:13.020
So what do we mean by substring and my skew row.

00:13.450 --> 00:20.320
So when we use the substring function we're actually extracting only part of a full string.

00:20.320 --> 00:28.830
So if you see the example here we have select substring and then we have three pauls in brackets.

00:28.960 --> 00:32.980
So we have our string which in this case is example.

00:32.980 --> 00:34.650
Then we have two numbers.

00:34.900 --> 00:39.120
The first number is where we start our substring.

00:39.370 --> 00:43.480
And then the second number is the length of the substring.

00:43.480 --> 00:49.210
So in this case our substring is going to start the first character in the string.

00:49.660 --> 00:55.040
So a string is example and it's going to start at the third letter.

00:55.060 --> 01:00.780
So the x is a third letter and then it's going to be a length 3.

01:01.000 --> 01:03.890
So it's going to go a p.

01:04.060 --> 01:12.490
So if we run this query here we should return a column which is named sub and then a value which is

01:12.550 --> 01:13.500
I am p.

01:13.510 --> 01:14.880
So let's run this now.

01:19.820 --> 01:26.320
And you can see down here we have the sup column and the value returned is empty.

01:26.360 --> 01:30.230
So this is what happens when we use the substring function.

01:30.290 --> 01:37.590
It takes a string which we define here and then a comma and then we define the start index.

01:37.820 --> 01:43.790
So in this case it was three so we started at the third let's say is 1 x 2 is 3.

01:43.790 --> 01:47.350
So it starts there and then it has a length of three.

01:47.360 --> 01:47.870
So it goes.

01:47.900 --> 01:55.580
I am p and you see here and I've written a comment which explains that we have the substring we open

01:55.580 --> 01:56.570
a pair of brackets.

01:56.570 --> 01:59.900
We have our string in double quotes.

02:00.110 --> 02:07.040
Then we have the starting index and then we have to length now the string and the starting index are

02:07.040 --> 02:07.830
required.

02:07.880 --> 02:10.970
We can't run the substring function without these.

02:11.240 --> 02:13.210
But the length is actually optional.

02:13.580 --> 02:21.050
And if you don't include that last letter what it will do is a return the substring from the starting

02:21.050 --> 02:23.180
index all the way to the end.

02:23.510 --> 02:25.830
So let's try it now by getting rid of the three.

02:25.850 --> 02:29.510
So we just have the string and we just have the starting index.

02:30.370 --> 02:32.650
And let's run that query.

02:33.260 --> 02:37.630
And you can see it's returned the whole string starting from the third letter.

02:37.670 --> 02:41.470
So starting from May is run all the way to the end.

02:41.570 --> 02:49.520
So now let's look at a few examples of substring using cinema booking system say you can see here I've

02:49.520 --> 02:57.560
selected name from films so if I just run up it returns all the films in our database the name column.

02:57.560 --> 03:01.710
Now let's take a substring from this name column.

03:02.510 --> 03:07.620
Let's start from the first index and return a substring of length 3.

03:07.730 --> 03:16.310
So to do that we need to type to select substring and then open a pair of brackets and in that bracket

03:16.490 --> 03:18.020
first we need to name a string.

03:18.020 --> 03:24.560
So in this case is the name column is going to be all string and then the starting index.

03:24.560 --> 03:27.700
So I said we wanted to start from the first letter.

03:27.890 --> 03:30.100
So I thought an index is one.

03:30.530 --> 03:32.960
And then I wanted to return a length 3.

03:33.020 --> 03:41.440
So it's going to return the first three letters of every film and then we can use all column name alias

03:41.440 --> 03:51.140
so let's just say name or let's call as short name saying is not the full name and then we want to type

03:51.140 --> 03:54.460
from films.

03:56.500 --> 04:02.860
So let's run this query and it should just return the first three letters of each film so you can see

04:02.860 --> 04:09.670
here we have all our films with tons but only the first three letters of each film.

04:09.700 --> 04:16.810
So now let's use the substring function to return the name field from the films table but starting from

04:16.810 --> 04:20.100
the fifth letter and having a length of four.

04:20.530 --> 04:22.230
So if we copy and paste

04:25.440 --> 04:36.630
our query and just change the style from 3 to 5 from 1 to 5 sorry and our length from 3 to 4 and we

04:36.630 --> 04:37.200
can run

04:40.080 --> 04:49.600
and you can see it's returned all the films starting from the fifth letter and with a length of four.

04:49.920 --> 04:55.130
So you can see the space is counted as a character.

04:55.140 --> 04:58.150
So you can see here we have a space you

05:00.980 --> 05:10.360
and we have two E-Space I used that must be Blade Runner and Blade Runner 20 14:9 and we use our space.

05:10.560 --> 05:13.330
I saw one we.

05:13.480 --> 05:14.580
CONAN Yeah.

05:15.030 --> 05:18.330
So carry on counts as a character and then a space then.

05:18.330 --> 05:19.260
All right.

05:19.920 --> 05:21.950
And so on and so on.

05:21.990 --> 05:28.920
Now we can also define our starting index as a negative number and what that will do is rather than

05:28.920 --> 05:35.820
counting the index from the first letter is going to start from the end is going to start and they see

05:35.850 --> 05:44.090
as minus 1 and then it's going to come back minus one minus two minus three minutes for example et cetera.

05:44.160 --> 05:47.660
So let's run a substring.

05:47.700 --> 05:57.420
But with a negative starting index say let's just copy and paste a substring query again and let's change

05:57.870 --> 06:06.130
this five to a negative 2 and then let's have a length of two.

06:06.420 --> 06:14.810
So this should return the last two letters of every single film in the database in the films table.

06:15.240 --> 06:22.380
So you can see here we have a R which must have been Blade Runner and they started up the second last

06:22.740 --> 06:27.830
letter say minus two the second last letter and is returned a string of length 2.

06:28.170 --> 06:29.240
So we have a r.

06:29.490 --> 06:35.700
And then we have Blade Runner 2049 so has just returned the last two letters and so on and so on.

06:35.700 --> 06:39.060
So this starting index can also be a negative number.

06:39.660 --> 06:46.570
So let's run one final example of our substring query.

06:46.930 --> 06:48.900
Let's run a suffering.

06:48.900 --> 06:57.510
Let's keep starting in this negative plus the negative six and then a length of five.

06:57.510 --> 07:08.160
So let's run this query and you can see that it's returns a substring of the films with a length 5 starting

07:08.250 --> 07:11.370
from the six letter from the end.

07:11.520 --> 07:13.330
So you can see here we have runner.

07:13.530 --> 07:16.320
So we started from the sick letter from the end.

07:16.500 --> 07:21.820
So we have all you and your buddies suddenly returned a string of length fives.

07:21.840 --> 07:27.530
So overturn that for a while and so on and so on for every single film.

07:27.600 --> 07:30.790
So that's it for using the substring function in my ass.

07:30.820 --> 07:35.130
You will just remember that we have the substring key word.

07:35.400 --> 07:40.100
And then in brackets we have our string or our column and then we have a comma.

07:40.140 --> 07:44.290
Then we have our starting index and then we have our length.

07:44.580 --> 07:51.490
And remember the string and the starting index are required but the length is optional.

07:51.570 --> 07:58.400
So we only have to stay a string or a column and then one number which will be our starting index.

07:58.800 --> 08:03.250
But if you want to you can also state the length that you want returned.

08:03.810 --> 08:06.170
So now let's move on to the next video.
