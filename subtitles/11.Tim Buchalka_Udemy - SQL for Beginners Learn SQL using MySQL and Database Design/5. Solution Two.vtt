WEBVTT

00:05.140 --> 00:08.640
A case or Hopefully you were able to make an attempt at this question.

00:08.920 --> 00:14.560
So the challenge was which film had the most screenings in October 2017.

00:14.560 --> 00:17.410
So obviously we want to look at the screenings table.

00:17.620 --> 00:28.240
So first let's just select star from screenings and if we run this query you can see we have an I.D.

00:28.250 --> 00:31.900
a film I.D. a room I.D. and a start time.

00:31.990 --> 00:39.520
So to get the film with the most screenings we're actually going to have to do a count on the film Id

00:40.450 --> 00:43.420
So let's count the film I.D.

00:46.900 --> 00:48.130
and run that query

00:51.450 --> 00:55.070
and you can see hasn group data by film.

00:55.170 --> 00:59.010
So has just returned the number of rows in the screening table.

00:59.010 --> 01:10.900
So we're going to have to do a group by so let's tie group by film ID.

01:11.040 --> 01:20.000
So hopefully now we'll get more than one row returned and you can see as returns multiple rows of data

01:20.510 --> 01:25.290
so each one of these numbers is the number of screenings for each film.

01:25.370 --> 01:29.480
So this doesn't really tell us which film has the most screenings.

01:29.540 --> 01:33.440
So for that we're going to have to get the film name from the film table.

01:33.560 --> 01:38.140
So we're going to have to do a join between the screenings table and the films table.

01:38.840 --> 01:45.630
So let's select f doll name.

01:45.640 --> 01:51.070
So this is going to be the Name column from the films table and then we're going to do a count on the

01:51.070 --> 02:02.610
screenings top film ID column from screenings and then we're going to do a join on the films tables

02:02.610 --> 02:08.510
that join films F on f id.

02:08.530 --> 02:16.870
So the ID field in the film table which is equal to the film Id call him in the screenings table.

02:17.230 --> 02:22.320
So now we run this let's see what we get.

02:22.390 --> 02:29.980
You can see it returns to film name and the number of screenings in October 2017.

02:30.370 --> 02:36.250
So this is if you were able to get an answer like this then thats correct.

02:36.400 --> 02:45.220
We can go even further so we can type as sharings.

02:45.730 --> 02:52.890
So rather than the column being returned as Count estop from Id say as sharings.

02:52.930 --> 02:55.400
So the number of sharings.

02:55.530 --> 03:03.040
So if we run this you can see now the column is named showings and we can do an order by

03:05.770 --> 03:14.550
sharings and lets say desk because we want it from highest to lowest.

03:15.260 --> 03:22.120
And now you can see the first answer is Dunkirk which are 25 showings Blade Runner 24.

03:22.120 --> 03:29.090
So we can see that the film with the most screenings in October 2007 Ting's Dunkirk and then just to

03:29.110 --> 03:36.570
take this one step further so that the query only returns the film with the most screenings we can say

03:36.580 --> 03:39.050
limit 1.

03:39.070 --> 03:45.100
So now if we run this oh you can see that actually jigsaw had the most screenings.

03:45.100 --> 03:46.060
We have 26.

03:46.060 --> 03:52.860
So obviously it didn't just sort of show up in the last query because I needed to scroll up in their

03:52.860 --> 03:54.070
results basically.

03:54.340 --> 04:00.970
So jigsaw is the answer and it had 26 showings in October 2017.

04:00.970 --> 04:04.730
Remember all our data is only in October 2017.

04:04.900 --> 04:09.070
So we don't have to do anything to do with dates.

04:09.160 --> 04:13.830
So this is the solution always one solution to this challenge.

04:13.840 --> 04:19.730
If you've got a different solution then please post it in the Q&amp;A section and I'll take a look.

04:19.860 --> 04:27.790
But if you are able to run a query which returned jigsaw and 26 showings or 26 screenings then that's

04:27.880 --> 04:28.770
perfectly good.

04:28.780 --> 04:31.050
So let's move on to the next challenge.
