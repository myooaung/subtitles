WEBVTT

00:04.470 --> 00:10.590
The case and let's create the bookings table which is the whole point of this system or booking system

00:10.590 --> 00:18.750
database send the bookings table we have a booking ID which is and our primary key and then alter increments

00:19.290 --> 00:25.560
and then we have two other columns where the screening ID which is an end and it's a foreign key to

00:25.560 --> 00:32.940
our ID column in the screenings table and we have a customer id field which is also an int and this

00:32.940 --> 00:36.500
is a foreign key to the ID field in the Customers table.

00:36.960 --> 00:42.630
So you can see from the second picture here that the screening table and the bookings table will have

00:42.630 --> 00:44.730
a one to many relationship.

00:45.240 --> 00:54.360
So one screening can have many bookings but a booking can only be associated with one screening and

00:54.390 --> 00:59.250
then the Customers table and the bookings table have a one to many relationship.

00:59.250 --> 01:06.000
So one customer can make many bookings but any particular booking can only be associated with one customer

01:07.130 --> 01:11.320
case another open my go work bench and create the bookings table.

01:15.430 --> 01:24.700
OK so we need to create table bookings we need to open up have brackets and I'm with the semi-colon

01:25.420 --> 01:28.130
and then within the brackets we need to tie pool columns.

01:28.340 --> 01:38.820
So the first column was an ID column which was then and it was our primary key and it was auto incrementing.

01:40.090 --> 01:44.250
And then the next column was all screening ID which is going to be a foreign key.

01:44.260 --> 01:51.340
So screening ID which is an end and it has husband not no constraint and then the next caller was our

01:51.340 --> 01:52.600
customer ID.

01:52.600 --> 01:53.990
So this is also a foreign key.

01:54.010 --> 02:04.270
So customer ID and not know and then end it with a comma and then on the next line we want to start

02:04.300 --> 02:06.370
defining all foreign keys.

02:06.460 --> 02:14.760
So we need to type foreign key and then the first one is screening ID screening ID.

02:15.220 --> 02:16.690
And this is referencing

02:20.080 --> 02:21.520
the screenings table.

02:21.520 --> 02:28.210
So screenings and is referencing the ID column within the screenings tables of any type ID in brackets

02:29.110 --> 02:35.250
and then on the next line we need to define our second foreign key which is for all customer ID.

02:35.590 --> 02:46.070
So you need to type foreign key on a pair of brackets and type customer id them we need to type references

02:48.540 --> 02:57.030
and were referencing the customers table and were referencing the ID field again and then thats it.

02:57.070 --> 02:59.390
We need to run this statement.

03:00.070 --> 03:10.690
We need to tie show tables and run as well and you can see now at the top here we have our bookings

03:10.690 --> 03:11.260
table.

03:11.500 --> 03:13.890
So we now have six tables in our database.

03:13.930 --> 03:15.160
So we're almost there.

03:15.710 --> 03:23.310
And then we can type describe bookings just to see that all the data was correct.

03:24.980 --> 03:31.690
And you can see we have our free fields ID screening ID customer ID data types where they're not no

03:31.700 --> 03:32.490
no.

03:32.980 --> 03:37.180
We have our primary key which is the ID field and we have two foreign keys.

03:37.310 --> 03:42.730
None of them have a default value an ID field is set to be Autor incrementing.

03:43.190 --> 03:45.970
OK so that's it for the bookings table.

03:46.340 --> 03:50.660
Let's move on to our final table in our system our booking system database.
