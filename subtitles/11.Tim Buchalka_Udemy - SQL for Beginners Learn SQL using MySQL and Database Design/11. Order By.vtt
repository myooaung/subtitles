WEBVTT

00:05.250 --> 00:11.560
A case doing this video we're going to be looking at ordering data from lowest to highest in highest

00:11.560 --> 00:12.870
to lowest.

00:13.390 --> 00:20.950
So here I select the star from our products table and you can see as automatically ordered by the ID

00:20.950 --> 00:23.500
field which is our primary key.

00:23.500 --> 00:26.710
So it's going one two three four five.

00:26.980 --> 00:29.680
So it's all added using the ID field.

00:30.040 --> 00:34.200
But what if we want to order all data using a different field.

00:34.450 --> 00:41.350
Let's say we wanted to list the price from lowest to highest or highest lowest.

00:41.350 --> 00:42.570
How are we going to do that.

00:42.910 --> 00:47.010
Well to do that we need to enter an ORDER BY statement.

00:47.320 --> 00:55.420
So in our select from select style from products we can go and enter a new line and we can type order

00:55.870 --> 00:57.820
by the price column.

00:57.850 --> 01:03.950
So order by price and then we can stay either ascending or descending.

01:03.970 --> 01:06.290
So we want it from lowest to highest.

01:06.340 --> 01:07.850
So even ascending.

01:08.190 --> 01:16.740
So to do that we tied I see and then we can run that statement and you can see now that our result set

01:16.870 --> 01:21.160
is no longer ordered by ID but is ordered by our price column.

01:21.160 --> 01:26.860
So the first one is 2.5 free free point 2 5 3.5.

01:27.280 --> 01:36.170
So that's ordered by Price column in ascending order and similarly to do in descending order.

01:36.370 --> 01:42.810
We just need to tie the s c off to the price column.

01:42.910 --> 01:46.970
So replace a s c d c.

01:47.260 --> 01:51.070
So this is ordering by the price column in descending order.

01:51.290 --> 02:00.100
So from highest to lowest and you can see now that it starts 3.5 0 and is going down.

02:00.100 --> 02:01.810
So 3.2 5 free.

02:01.810 --> 02:03.940
And then finally 2.5.

02:04.300 --> 02:14.050
So this is how we order data in ascending and descending order so that for a price column so a number

02:14.070 --> 02:14.930
field.

02:15.010 --> 02:17.620
Now let's do it for strings.

02:17.620 --> 02:24.190
So let's select store from our customer table and here you can see as ordered by ID as well which is

02:24.190 --> 02:28.220
the primary key is always ordered by the primary key by default.

02:28.360 --> 02:42.380
But less order by last name select select stuff from customers and let's order by last name.

02:42.960 --> 02:50.000
Now first who would do it from 8 ad so from 8 that is actually ascending.

02:50.010 --> 03:00.030
So I see and you can see now it starts with the first entry which she and no value for the last name

03:00.060 --> 03:06.780
so no values come first and then it starts with a for Armstrong and then blue.

03:07.130 --> 03:10.330
And then a j o et cetera.

03:10.380 --> 03:14.210
So sending four strings is eight is that.

03:14.670 --> 03:23.760
And then if you wanted to order it from set A alphabetically you would type D S C instead.

03:23.950 --> 03:28.600
Or the last name descending and you can see restart.

03:28.710 --> 03:39.960
West so w and then T and then the Smiths and then finally we get to a and on no values so we have no

03:39.960 --> 03:42.000
values at the end when you're doing it.

03:42.000 --> 03:48.690
Descending order a to that was that way and we can also order by a date field.

03:48.840 --> 03:54.120
So let's select staw from orders.

03:55.410 --> 04:03.390
And you can see that it looks like it's ordered by date by the order Time column but it's actually ordered

04:03.390 --> 04:05.500
by the ID field.

04:05.550 --> 04:11.170
It just happens when I was entering the data that I made sure that each order was in.

04:11.180 --> 04:13.440
So in time order as well.

04:13.470 --> 04:21.900
So let's order this by the order toy all the time column instead select select store from orders and

04:21.900 --> 04:32.390
then set a WHERE clause that side where customer ID is equal to 1.

04:32.520 --> 04:42.450
So we're going to find out on which days customer I.D. is coming into our shop to buy a coffee and then

04:42.450 --> 04:46.670
we can type order by order time

04:49.760 --> 04:53.960
and let's start with sending.

04:53.970 --> 05:02.440
So this is going so you can see ascending is going from the 2nd of January to the third to the fourth.

05:02.640 --> 05:10.670
So it is going from the first time back to the the latest order which was the 20th of February.

05:12.060 --> 05:15.450
And if we were to do this in dust's descending order

05:20.220 --> 05:26.300
we would see that the first entry is on the 28 for February and then it's going back in time for the

05:26.310 --> 05:29.400
Giotto's 21st 2013.

05:29.730 --> 05:32.810
And then the ones in January.

05:33.000 --> 05:36.480
So this is how we order data by column.

05:36.570 --> 05:44.520
When we're doing select statements one more thing to add is that you can just not put the or A.S.C.

05:44.520 --> 05:45.190
at all.

05:45.510 --> 05:48.700
You can simply type order by a column.

05:49.080 --> 05:56.650
And if we run that we can see but default is to order the column from lowest to highest.

05:56.670 --> 06:06.290
So from 2.5 all the way up to 3.5 or the default is on strings is to order it from a to Zed.

06:06.570 --> 06:11.580
So you can see it starts with the no and then it's a B Accenture.

06:12.180 --> 06:16.510
So that's everything you need to know about ordering data by column in my Askey row.
