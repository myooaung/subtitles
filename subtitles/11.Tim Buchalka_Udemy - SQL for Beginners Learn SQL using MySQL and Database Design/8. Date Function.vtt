WEBVTT

00:05.050 --> 00:10.620
A case or in the next few videos we're going to be looking at some date functions which are going to

00:10.620 --> 00:16.000
make it a lot easier when we're dealing with dates or date time data types.

00:16.020 --> 00:18.120
In my ask you will.

00:18.270 --> 00:26.370
So if you remember from before in the exercises I was asking you to extract data from certain months

00:26.460 --> 00:34.200
or between two dates and it was kind of tricky because you had to write out quite a long escrow query

00:34.590 --> 00:36.210
with four day.

00:36.210 --> 00:42.990
So between this day and this day but there were some functions in my school which make it a lot easier

00:43.200 --> 00:44.750
when dealing with dates.

00:44.880 --> 00:49.130
And the one we're going to look at in this video is the Date function.

00:49.200 --> 00:56.960
So basically the Date function extracts the date from a date or a date time date type.

00:57.270 --> 01:01.960
So if we look at this example here you can see it says Select day.

01:01.980 --> 01:04.570
And then in brackets there's this date.

01:04.620 --> 01:07.970
So 2018 June the 5th.

01:08.310 --> 01:09.860
And if we run this query.

01:09.900 --> 01:23.690
So select day from this date in this bracket we can see it returns that day 2018 0 6 0 5 which is unsurprising.

01:24.020 --> 01:29.940
But if we were to modify this date by adding a time after the date.

01:29.990 --> 01:34.570
So let's say 0 7 45 32.

01:34.850 --> 01:37.970
So this is now looks like a date time data type.

01:38.360 --> 01:46.920
If we were to run the query again you can see still just extracts and returns the date part of this

01:46.920 --> 01:53.530
string and we can also apply this date function to column data within our database.

01:53.570 --> 02:03.170
So using our system our booking system let's use this date function on some column data so let's select

02:03.680 --> 02:07.640
start time from the screenings.

02:08.240 --> 02:16.010
So the start time column in the screenings table is of data type date time.

02:16.130 --> 02:20.000
So you can see from their results we have a date plus the time.

02:20.000 --> 02:25.720
So we have 2017 October the 1st and then a time and so on and so on.

02:25.920 --> 02:33.640
But if we were to use the Date function on the start time column we can actually just extract the date.

02:34.040 --> 02:42.390
So let's copy and paste our query and type dates and then put the start time in brackets.

02:42.440 --> 02:50.030
So now we're applying the Date function to the start time column from the screenings table and you can

02:50.030 --> 02:51.860
see it just returns the date.

02:51.860 --> 02:54.160
So we've got 2017 10 1.

02:54.290 --> 02:55.360
But no time.

02:55.580 --> 03:03.350
And so on and so on you can see 2017 10 or two and then it just carries on and this becomes useful when

03:03.350 --> 03:05.590
we start using WHERE clauses.

03:05.810 --> 03:14.150
Let's say we wanted to select all the data from the screenings table where the day was equal to October

03:14.150 --> 03:20.810
the 3rd 2017 we can type select store from screenings

03:23.850 --> 03:30.510
and then we can put in a WHERE clause we can put dates start time.

03:30.930 --> 03:41.130
So we're applying the Date function to the start time column again and we can say equal to 2017 10 or

03:41.220 --> 03:45.080
three in single quotes.

03:45.090 --> 03:50.770
So worse they start time as equal to 2017 10 03.

03:51.210 --> 03:59.310
And if we run that query you can see it returns all the data where the start time dates is equal to

03:59.310 --> 04:01.710
2017 10 03.

04:01.710 --> 04:10.720
So we have 2017 10 or 3 or 4 o'clock 4:30 5 7 7:30 and 8 o'clock.

04:11.150 --> 04:19.420
And if we run the same query but without using the date function you can see whatever we going to get.

04:20.160 --> 04:28.440
So we're just saying well start time is now equal to 2017 10 free and you can see it returns no data

04:28.830 --> 04:35.520
because there's no start time which exactly equals 2017 10 03.

04:35.520 --> 04:40.370
So we have to use the Date function for this to work

04:47.410 --> 04:54.290
and you can see now we have our data returned and I'll show you one final example where we'll return

04:54.290 --> 04:57.440
data from between two dates.

04:57.440 --> 05:06.670
So let's copy and paste this last query here and then we can change this ECOs to a between.

05:07.220 --> 05:18.020
So we want to return data between 2017 10 03 and 2017 10 05 so the 5th of October so we can come in

05:18.020 --> 05:20.120
here and we can type and.

05:20.540 --> 05:34.510
And then in single quotes 2017 10 0 5 and then if we run this query you can see it returns all the data

05:35.110 --> 05:41.240
from start time 2017 10 03 to 2017 10 05.

05:41.470 --> 05:49.070
So this becomes the state function becomes really useful when trying to get data from between two dates.

05:49.120 --> 05:55.120
You can see the difference if we just said where start time

05:57.980 --> 06:02.500
is between 2017 and 10 or 3 and 2017 10 or 5

06:05.370 --> 06:13.260
you can see it still returns the data for the 3rd of October and the 4th of October but it doesn't return

06:13.260 --> 06:15.730
the data for the 5th of October.

06:16.050 --> 06:21.320
And that's because of the time in the date time data type.

06:21.390 --> 06:27.420
So when we run this query without the date function on the start time is actually taking this value

06:27.420 --> 06:34.750
here to be 2017 10 0 5 0 0 0 0 0 0.

06:34.770 --> 06:43.830
So at midnight so every day time on the 5th of October is actually after this time.

06:43.830 --> 06:47.170
So it doesn't fall between these two days.

06:47.220 --> 06:56.130
So it doesn't get returns in the results whereas if we're just using the date function on the start

06:56.130 --> 06:56.910
time column

07:00.050 --> 07:07.580
obviously now is going to return all the data on this state because we're only interested in what the

07:07.580 --> 07:09.290
date says.

07:10.220 --> 07:15.820
So you can see returns from the 3rd to the 5th of October 2017.

07:16.520 --> 07:19.490
So that's it for this video on the date function.

07:19.490 --> 07:26.810
So basically what the date function does is it extracts the date from a date data type or date time

07:26.810 --> 07:27.620
data type.
