WEBVTT

00:05.510 --> 00:11.070
OK soon this video we're going to look at what Cleary's all the different types of queries within my

00:11.070 --> 00:11.870
school.

00:12.050 --> 00:19.640
So so carry all queries nested within the queries and sometimes queries are referred to as nested queries.

00:19.860 --> 00:24.870
So we can see an example where we have to select statements within one query.

00:25.170 --> 00:33.540
So we have select Id start time from screenings where film ID is in select ID from films where length

00:33.540 --> 00:36.170
man is greater than 120.

00:36.720 --> 00:38.690
So we have a query here.

00:38.790 --> 00:43.490
We have to select ID from films where length man is greater than 120.

00:43.720 --> 00:51.690
And this is referred to as the in a query and then we have the outer query which is select Id start

00:51.690 --> 00:57.110
time from screenings where film my day is in the inquiry.

00:57.320 --> 01:02.000
So some queries can be used in a select update or delete query.

01:02.090 --> 01:07.620
But in this section we're just going to be looking at queries within select statements on the nested

01:07.620 --> 01:14.010
query or in a query can be in the WHERE clause of a select statement or it can come off to the from

01:14.240 --> 01:16.470
in a select statement.

01:16.470 --> 01:22.960
And there are two types of query is non correlated queries and there's correlated so queries.

01:23.370 --> 01:28.830
So in non related queries the query can run independently of the outer query.

01:29.130 --> 01:35.420
So if we have a look at this example again we have all in a query which is select ID from films where

01:35.430 --> 01:38.020
length man is greater than 120.

01:38.310 --> 01:45.650
And then we have our outer query which is select Id start time from screenings where film ID is in the

01:45.820 --> 01:46.980
query.

01:47.040 --> 01:52.410
So if we look at the in a query select ID from Filene's where length man is greater than 120.

01:52.410 --> 01:58.680
We can actually run this independently of the outer query so we don't need the outer query for us to

01:58.680 --> 02:06.120
be able to run this in a query and in non correlated so queries the query runs first and it only runs

02:06.120 --> 02:12.710
once and it produces a set of results which are then used by the outer query.

02:12.720 --> 02:18.900
So this in a query selects ID from films where length man is greater than one hundred and twenty is

02:18.900 --> 02:24.360
going to produce a set of results is going to return a set of ideas where the film's length is greater

02:24.360 --> 02:29.790
than one hundred and twenty minutes and then the outer query is going to take this Rizo and is going

02:29.790 --> 02:36.620
to return the ID and the start time from screenings where the film ID is in the results from the in

02:36.620 --> 02:37.580
the query.

02:38.060 --> 02:45.030
But for co-related queries the query can run independently of the outer query and that's because the

02:45.210 --> 02:49.620
query is using data from the outer query.

02:49.710 --> 02:56.370
So if we have a look at the example here in the outer query we have select screening ID customer ID

02:56.430 --> 03:03.490
from bookings b so we're selecting two columns from the bookings table in the outer query and then in

03:03.490 --> 03:09.430
the in the query we're saying select count see ID from the reserved seat table.

03:09.690 --> 03:13.290
When booking ID is the queue to be to ID.

03:13.290 --> 03:18.690
So we're referring to the bookings table in the outer query within in a query.

03:18.690 --> 03:25.160
So if we run in a query independently of the query itself you can return an error because it's not going

03:25.150 --> 03:34.290
to know what B ID is because B to ID only makes sense if we've got the outer query and correlated sub

03:34.350 --> 03:38.790
queries the query runs for every row in the outer query.

03:39.060 --> 03:44.890
So the query here is going to select screening ID and custom ID from the bookings table.

03:44.940 --> 03:49.620
So it's going to return a lot of writers are you for each screening idea and customer ID and the bookings

03:49.620 --> 03:54.500
table and then the query is going to run for every single row.

03:54.600 --> 03:56.790
The outer query returns.

03:56.790 --> 04:02.370
So in a correlated subquery the in the query runs multiple times.

04:02.370 --> 04:04.980
So now we know the basics of sub queries.

04:05.010 --> 04:09.320
Let's take a look at some examples of each run in my school work bench.
