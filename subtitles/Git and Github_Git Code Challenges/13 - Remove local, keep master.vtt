WEBVTT
1
00:00:00.003 --> 00:00:03.008
(video game music)

2
00:00:03.008 --> 00:00:05.000
- As we're working on things,

3
00:00:05.000 --> 00:00:07.006
you make several branches for quick fixes,

4
00:00:07.006 --> 00:00:10.007
features, and they tend to hang around for a while.

5
00:00:10.007 --> 00:00:14.009
So how would you get rid of all extra branches

6
00:00:14.009 --> 00:00:16.008
but still keep the main branch?

7
00:00:16.008 --> 00:00:18.003
I'll give you a couple seconds to think

8
00:00:18.003 --> 00:00:20.005
about how you would do something like this.

9
00:00:20.005 --> 00:00:24.006
(video game music)

10
00:00:24.006 --> 00:00:25.004
All right.

11
00:00:25.004 --> 00:00:28.001
So the trick that I'm going to show you is really applicable.

12
00:00:28.001 --> 00:00:32.000
If you want to do things to a series of branches.

13
00:00:32.000 --> 00:00:34.002
So what I can do here is essentially

14
00:00:34.002 --> 00:00:38.005
use Unix tricks to do something sequentially

15
00:00:38.005 --> 00:00:40.009
to a number of different branches.

16
00:00:40.009 --> 00:00:43.002
right now, if I do a good branch, you'll see

17
00:00:43.002 --> 00:00:48.005
that I have a lot of, sort of weird, other files, right?

18
00:00:48.005 --> 00:00:50.001
The nice thing about doing a good branch is

19
00:00:50.001 --> 00:00:51.000
that it kind of gives 'em

20
00:00:51.000 --> 00:00:54.004
to you in a little list right here.

21
00:00:54.004 --> 00:00:58.004
So I can take advantage of that fact to sort of

22
00:00:58.004 --> 00:01:03.005
modify something as we go through that list of things.

23
00:01:03.005 --> 00:01:06.002
I'm going to say I'm going to issue a good branch command

24
00:01:06.002 --> 00:01:08.005
and then I'm going to use the pipe character.

25
00:01:08.005 --> 00:01:09.007
And this will work in Linux.

26
00:01:09.007 --> 00:01:12.008
In Linux, you can take the output

27
00:01:12.008 --> 00:01:17.004
of a command and then feed it to a separate command.

28
00:01:17.004 --> 00:01:20.006
So now I can say I want to grep.

29
00:01:20.006 --> 00:01:24.008
That means, look through my files.

30
00:01:24.008 --> 00:01:28.005
And -V will exclude something from that list.

31
00:01:28.005 --> 00:01:32.000
So I'm going to say exclude the main file

32
00:01:32.000 --> 00:01:34.003
or maybe the master branch

33
00:01:34.003 --> 00:01:37.001
if you're using like an older version of things.

34
00:01:37.001 --> 00:01:40.008
So it's going to take that list

35
00:01:40.008 --> 00:01:45.009
and give you all of the items that are not the main branch.

36
00:01:45.009 --> 00:01:48.005
You can see the list here is a little bit shorter.

37
00:01:48.005 --> 00:01:52.007
So now I can pipe that to another command if I want to.

38
00:01:52.007 --> 00:01:55.004
I'm going to hit the pipe character

39
00:01:55.004 --> 00:01:57.006
which is like a vertical line.

40
00:01:57.006 --> 00:01:59.008
Then here I can do xargs,

41
00:01:59.008 --> 00:02:01.006
which will go through the list

42
00:02:01.006 --> 00:02:06.005
of things that I just generated with this grab command.

43
00:02:06.005 --> 00:02:09.006
Then I can say, get branch -D.

44
00:02:09.006 --> 00:02:12.000
So it's going to go through each of those branches

45
00:02:12.000 --> 00:02:16.009
and then apply a git branch minus D command to each of them

46
00:02:16.009 --> 00:02:20.002
which will delete any of those other branches as well.

47
00:02:20.002 --> 00:02:22.009
So let's check it out, want to hit return.

48
00:02:22.009 --> 00:02:24.001
And it says it deleted.

49
00:02:24.001 --> 00:02:27.001
And then each of the branches that I created

50
00:02:27.001 --> 00:02:30.000
so now I'll clear this out and if I do get branch

51
00:02:30.000 --> 00:02:33.002
you'll see that I only have my main branch.

52
00:02:33.002 --> 00:02:36.002
The point here is that you can use the power

53
00:02:36.002 --> 00:02:39.002
of Linux to do something like this.

54
00:02:39.002 --> 00:02:43.006
And this last command doesn't need to be a deletion.

55
00:02:43.006 --> 00:02:47.000
It could be maybe that you need to add

56
00:02:47.000 --> 00:02:50.002
say in some of your other branches, you want to bring

57
00:02:50.002 --> 00:02:54.006
in the new versions of Bootstrap, you know, so you could

58
00:02:54.006 --> 00:02:57.002
instead of issuing this delete command here

59
00:02:57.002 --> 00:02:59.002
you can actually include whatever you want.

60
00:02:59.002 --> 00:03:02.002
This is a great way to go through a list

61
00:03:02.002 --> 00:03:06.002
of branches and perform some functionality

62
00:03:06.002 --> 00:03:08.003
that you want done to every one of them.

63
00:03:08.003 --> 00:03:10.002
It's a good thing to know that you can always

64
00:03:10.002 --> 00:03:15.000
use Unix tricks within any of your git projects.

