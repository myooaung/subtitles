1
00:00:00,000 --> 00:00:03,007
(electronic music)

2
00:00:03,007 --> 00:00:04,008
- [Instructor] Let's say you're working hard

3
00:00:04,008 --> 00:00:05,007
on a new feature

4
00:00:05,007 --> 00:00:07,002
and your boss calls you

5
00:00:07,002 --> 00:00:08,008
and all of a sudden you needs to jump

6
00:00:08,008 --> 00:00:10,008
on another feature branch.

7
00:00:10,008 --> 00:00:13,000
Is there a way to work on more than one branch

8
00:00:13,000 --> 00:00:14,009
at the same time?

9
00:00:14,009 --> 00:00:16,005
I'll give you a couple of seconds to think about

10
00:00:16,005 --> 00:00:18,003
how you would do something like that.

11
00:00:18,003 --> 00:00:22,001
(bouncy playful music)

12
00:00:22,001 --> 00:00:24,001
Now you may have been thinking about using stashes

13
00:00:24,001 --> 00:00:25,008
and that works okay,

14
00:00:25,008 --> 00:00:28,001
but worktrees are a lot more powerful.

15
00:00:28,001 --> 00:00:32,003
So you can issue a git worktree command

16
00:00:32,003 --> 00:00:33,008
and you can see all of the options.

17
00:00:33,008 --> 00:00:34,008
We can add,

18
00:00:34,008 --> 00:00:35,008
we can list,

19
00:00:35,008 --> 00:00:38,007
we can remove worktrees if we want to.

20
00:00:38,007 --> 00:00:40,002
Now let's clear this out,

21
00:00:40,002 --> 00:00:44,007
and I'll show you that I have a couple of uncommitted files.

22
00:00:44,007 --> 00:00:46,000
And it doesn't even matter.

23
00:00:46,000 --> 00:00:49,000
If I want to pull something and...

24
00:00:49,000 --> 00:00:51,007
Let's take a look at some of the branches that I have here.

25
00:00:51,007 --> 00:00:56,007
So let's say that I wanted to work with 04_01b locally

26
00:00:56,007 --> 00:00:58,001
and not have to stash anything,

27
00:00:58,001 --> 00:01:00,000
just very quickly jump into that branch.

28
00:01:00,000 --> 00:01:02,009
I'm not even going to check it out from here.

29
00:01:02,009 --> 00:01:08,004
So I'm going to do a git worktree add.

30
00:01:08,004 --> 00:01:11,005
So I want to work on a folder that's at the same level

31
00:01:11,005 --> 00:01:14,005
of this current folder called parallax.

32
00:01:14,005 --> 00:01:20,008
And so I'll do 04_01b

33
00:01:20,008 --> 00:01:23,001
and that's going to create a new worktree.

34
00:01:23,001 --> 00:01:25,001
So if we take a look now at our desktop,

35
00:01:25,001 --> 00:01:28,004
you can see that it added a new folder right here.

36
00:01:28,004 --> 00:01:31,004
And this is the folder for this new worktree.

37
00:01:31,004 --> 00:01:35,008
So I can do a git worktree list,

38
00:01:35,008 --> 00:01:38,002
and it's going to show me two different worktrees.

39
00:01:38,002 --> 00:01:40,006
If I went to switch to that folder,

40
00:01:40,006 --> 00:01:45,001
I can do a cd and then go to that folder.

41
00:01:45,001 --> 00:01:47,006
So dot, dot slash means go back a directory,

42
00:01:47,006 --> 00:01:50,006
and then I'm going to go back into this directory.

43
00:01:50,006 --> 00:01:52,003
And now I'm in this other folder

44
00:01:52,003 --> 00:01:55,004
and I can work on my changes.

45
00:01:55,004 --> 00:01:59,000
Now you would have to issue an NPM install

46
00:01:59,000 --> 00:02:03,000
because this doesn't have any of the node modules in it

47
00:02:03,000 --> 00:02:04,003
if you wanted to,

48
00:02:04,003 --> 00:02:06,003
but this is a great way of working

49
00:02:06,003 --> 00:02:09,008
on more than one branch in your project

50
00:02:09,008 --> 00:02:12,003
at the same time with minimal effort.

51
00:02:12,003 --> 00:02:13,008
If you want to get rid of this,

52
00:02:13,008 --> 00:02:15,002
let's go ahead and go back.

53
00:02:15,002 --> 00:02:17,001
Let's go ahead and go back to the parallax folder.

54
00:02:17,001 --> 00:02:20,004
So I'm going to do cd ../parallax

55
00:02:20,004 --> 00:02:23,009
and now we're back in the parallax folder.

56
00:02:23,009 --> 00:02:29,004
I can do a git worktree list

57
00:02:29,004 --> 00:02:38,000
and then do a git worktree remove 04_01b

58
00:02:38,000 --> 00:02:40,008
and that'll get rid of that other worktree.

59
00:02:40,008 --> 00:02:42,004
So we'll do a worktree list again.

60
00:02:42,004 --> 00:02:43,007
You can see that it's gone.

61
00:02:43,007 --> 00:02:46,004
This is a really cool and quick way

62
00:02:46,004 --> 00:02:49,004
of working on different parts of your project.

63
00:02:49,004 --> 00:02:51,006
Again, especially useful when you need to work

64
00:02:51,006 --> 00:02:52,009
on another branch,

65
00:02:52,009 --> 00:02:55,007
but you don't want to do anything to the current branch

66
00:02:55,007 --> 00:02:57,008
where you've been making a lot of changes.

67
00:02:57,008 --> 00:03:01,003
And perhaps you just need to, maybe...

68
00:03:01,003 --> 00:03:03,000
I know that in my blog I often...

69
00:03:03,000 --> 00:03:04,001
I'm working on new features,

70
00:03:04,001 --> 00:03:07,000
but I want to sort of add a new article

71
00:03:07,000 --> 00:03:08,008
in the current version of the site.

72
00:03:08,008 --> 00:03:10,006
So you can have as many worktrees

73
00:03:10,006 --> 00:03:12,005
as you want in your folder.

74
00:03:12,005 --> 00:03:13,008
And it's sort of cool

75
00:03:13,008 --> 00:03:19,000
because Git lets you manage those directly in its interface.

