1
00:00:00,720 --> 00:00:01,050
All right.

2
00:00:01,050 --> 00:00:04,740
So let's go ahead, create a global stage using the youth context.

3
00:00:05,940 --> 00:00:10,570
So first thing you want to do is create a fuller intake client.

4
00:00:10,590 --> 00:00:12,690
Let's create a new folder called Context.

5
00:00:13,890 --> 00:00:20,130
We can have multiple contexts, so this can begin to just create one for the theme.

6
00:00:20,880 --> 00:00:24,000
But later we may use create more contexts, right?

7
00:00:24,420 --> 00:00:30,440
So themed today is an insight here to create a context.

8
00:00:30,450 --> 00:00:32,190
First, let's import some hooks.

9
00:00:32,910 --> 00:00:34,600
So use context.

10
00:00:34,740 --> 00:00:40,100
We need we also need to use state hook and then use.

11
00:00:42,040 --> 00:00:47,700
A create context function from React.

12
00:00:49,380 --> 00:00:53,670
So we have these two hooks and this function that will help us create a context.

13
00:00:54,390 --> 00:00:57,060
So let's create a context for second.

14
00:00:57,780 --> 00:01:02,610
Let's call it theme for context equals.

15
00:01:02,610 --> 00:01:06,030
To use this function, we just execute this function.

16
00:01:08,120 --> 00:01:08,360
All right.

17
00:01:08,360 --> 00:01:10,340
So that gives us the context here.

18
00:01:10,610 --> 00:01:14,810
So we execute that function, the value we put in this variable, same context.

19
00:01:16,280 --> 00:01:16,550
All right.

20
00:01:16,550 --> 00:01:21,290
So next one, we use theme provider theme.

21
00:01:22,260 --> 00:01:22,540
Right.

22
00:01:22,710 --> 00:01:24,270
This is going to be a component.

23
00:01:24,780 --> 00:01:26,010
Now, you could use.

24
00:01:27,280 --> 00:01:32,920
Renal function here to create a component you could do like this.

25
00:01:33,190 --> 00:01:36,030
Well, you can use our function or something.

26
00:01:36,070 --> 00:01:39,490
We would use our phones in whichever way it works.

27
00:01:43,340 --> 00:01:43,700
All right.

28
00:01:43,940 --> 00:01:45,320
So we have the context now.

29
00:01:45,320 --> 00:01:48,620
We create a provider, this component, and then we're going to.

30
00:01:50,240 --> 00:01:55,530
Export and then wrap our entire application in averages.

31
00:01:56,210 --> 00:02:02,150
So first here, we need to have a state, some kind of a state where we can save the current theme,

32
00:02:02,460 --> 00:02:02,630
right?

33
00:02:02,630 --> 00:02:10,410
So whether it's a light or duck const theme, that's the state name and the object that we use.

34
00:02:10,410 --> 00:02:19,400
The function set name equals to use state and we give the default value to, let's say, light.

35
00:02:20,240 --> 00:02:28,640
So the way it's going to work is and then gives us the two stating dark, dark styles and light states.

36
00:02:28,640 --> 00:02:31,160
So it's really easy to implement this one.

37
00:02:31,430 --> 00:02:40,700
So we're going to have those both pieces here in our directory and we're going to load depending on

38
00:02:41,960 --> 00:02:42,710
this value.

39
00:02:42,800 --> 00:02:44,900
So by default we load light theme.

40
00:02:45,200 --> 00:02:49,640
But if the if you that turns to dark, then we load the dark theme.

41
00:02:49,820 --> 00:02:55,160
And that's how the application layer changes, styling changes because of the theme.

42
00:02:55,940 --> 00:02:56,150
All right.

43
00:02:56,150 --> 00:02:57,530
So that's the state.

44
00:02:57,890 --> 00:03:05,250
So once we have the state, we can return the value using the provider.

45
00:03:05,450 --> 00:03:12,470
Now, before we do that, we want to make sure that if a user change the theme, when they reload the

46
00:03:12,470 --> 00:03:19,220
peso and they come back to our application again, we want to make sure that we remember his preference,

47
00:03:19,220 --> 00:03:19,480
right?

48
00:03:19,490 --> 00:03:26,840
So we're going to always to light him by default every time he visits the site, even though the last

49
00:03:26,840 --> 00:03:28,340
time he tends to do duck.

50
00:03:28,580 --> 00:03:34,010
So if it turns that to duck, most likely he'll want to use that continuously, right?

51
00:03:34,010 --> 00:03:41,960
So to provide better user experience, we can save the value not only in the context but also in the

52
00:03:41,960 --> 00:03:46,550
applications local stories, which is here in the browsers.

53
00:03:46,550 --> 00:03:50,280
They have the local stories right click and so.

54
00:03:52,870 --> 00:04:01,160
So you can right click open view pay source a certain to business right click and click inspect.

55
00:04:01,390 --> 00:04:02,230
You get this one.

56
00:04:02,680 --> 00:04:08,230
So you go click on the producer and hear local stories.

57
00:04:08,980 --> 00:04:11,580
We have this domain to them, that screen domain.

58
00:04:11,590 --> 00:04:20,320
We have bunch of things I can remove, I guess, to let me reload so we don't have anything at the moment.

59
00:04:20,680 --> 00:04:23,440
So I enable you to change the theme.

60
00:04:24,210 --> 00:04:30,390
We can upgrade the context, but at the same time we can set that value in the local store is here with

61
00:04:30,390 --> 00:04:31,710
the key in value.

62
00:04:31,770 --> 00:04:33,480
So you can store values here.

63
00:04:33,780 --> 00:04:37,110
So this will stay there unless you manually remove.

64
00:04:37,140 --> 00:04:43,320
So that means when user reloads the base or maybe he come back to visit our site the next day.

65
00:04:43,980 --> 00:04:45,630
This value will always be here.

66
00:04:45,810 --> 00:04:49,680
So based on that, we can show his preference theme.

67
00:04:49,770 --> 00:04:51,120
You know, we can load that theme.

68
00:04:52,310 --> 00:04:52,530
All right.

69
00:04:52,910 --> 00:04:56,790
So let's see this in the local stories as well.

70
00:04:58,250 --> 00:05:01,880
So by default, we use the light theme and then.

71
00:05:03,870 --> 00:05:05,700
To load it from the local stories.

72
00:05:05,700 --> 00:05:09,360
We have another hook that's called use effect.

73
00:05:09,990 --> 00:05:11,140
Now use effect.

74
00:05:11,940 --> 00:05:18,150
Hope you will use whenever you want to run some code immediately when the component mounts immediately.

75
00:05:18,600 --> 00:05:18,840
All right.

76
00:05:19,260 --> 00:05:22,680
So use effect hook.

77
00:05:23,550 --> 00:05:27,250
This is a function and this function takes another function as an argument.

78
00:05:27,310 --> 00:05:27,600
Right.

79
00:05:28,050 --> 00:05:32,820
So we give another function so we can use elephants in here at a function.

80
00:05:34,110 --> 00:05:35,610
So that's argument, right?

81
00:05:35,850 --> 00:05:36,870
So that's our argument.

82
00:05:37,170 --> 00:05:39,270
And then second argument.

83
00:05:39,300 --> 00:05:41,190
Also, we we can give this function.

84
00:05:41,190 --> 00:05:43,760
So that's a first argument format.

85
00:05:44,370 --> 00:05:47,100
Second argument uses past empty array.

86
00:05:48,840 --> 00:05:50,880
So we will learn more about use effect later.

87
00:05:51,060 --> 00:06:02,520
The reason we do this is you pass out of the entries here to indicate that you want to load this.

88
00:06:02,650 --> 00:06:05,610
I run the code here when the component mounts.

89
00:06:05,970 --> 00:06:07,650
So that's the different behavior.

90
00:06:08,280 --> 00:06:10,560
But this is also known as.

91
00:06:12,300 --> 00:06:13,350
The dependency.

92
00:06:13,410 --> 00:06:13,680
All right.

93
00:06:13,680 --> 00:06:20,230
So whenever you want to run this call, when certain thing turns is, for example, when the theme turns

94
00:06:20,230 --> 00:06:26,940
is, then you will pass that here so that we can have this function here, whatever port you write that

95
00:06:26,940 --> 00:06:29,580
will run whenever the value is here.

96
00:06:29,910 --> 00:06:33,690
For example, if you give them over integers, this will run.

97
00:06:34,140 --> 00:06:35,250
However, we don't need that.

98
00:06:35,250 --> 00:06:39,510
We just need to run it when the component mounts for the very first time.

99
00:06:40,020 --> 00:06:44,220
So we just leave it like that and we try to load it from the local stories.

100
00:06:45,150 --> 00:06:55,080
So if local stories don't get high enough, so whenever you want, we want to access something from

101
00:06:55,080 --> 00:06:55,800
local storage.

102
00:06:55,800 --> 00:07:01,170
You can use this function get item whenever you want to save something in the local story you can use

103
00:07:01,230 --> 00:07:02,130
CET item.

104
00:07:02,460 --> 00:07:04,680
All right, so this time we want to use get item.

105
00:07:05,610 --> 00:07:12,270
You want to get the item by the key so you can see here whenever you save something in the local story,

106
00:07:12,270 --> 00:07:14,190
you with the key and the value.

107
00:07:14,400 --> 00:07:17,760
So whenever you want to get something, you give use the key name.

108
00:07:18,370 --> 00:07:25,950
So key we can use theme because we haven't received anything yet, which we will do very soon.

109
00:07:26,130 --> 00:07:34,290
But at the moment, if we have anything in the local search, we want to get that and populate the state,

110
00:07:34,500 --> 00:07:34,770
right?

111
00:07:35,880 --> 00:07:43,860
So if we have the theme in the local stories, we want to update our local state here.

112
00:07:45,790 --> 00:07:54,160
Our state said theme and the value will be whatever is in the local stories, so local stories don't

113
00:07:55,990 --> 00:07:56,920
get item.

114
00:07:56,950 --> 00:07:59,050
Again, it's the same code that we have that.

115
00:08:04,040 --> 00:08:08,390
I'd say if they have that get that and pre-populated the state.

116
00:08:08,870 --> 00:08:16,910
So the benefit of this one is if user had chose the dark theme last time, we would load that theme.

117
00:08:16,910 --> 00:08:23,780
So whenever a user visits our site, next time he will see his preferred theme in that spirit.

118
00:08:24,980 --> 00:08:25,340
All right.

119
00:08:25,340 --> 00:08:32,840
So when we want to have that, we can now return to return the theme context.

120
00:08:35,330 --> 00:08:42,110
Theme context and theme context gives us this provider to provide a property.

121
00:08:42,590 --> 00:08:46,550
This would help us provide the value here.

122
00:08:48,620 --> 00:08:49,430
What are we going to do?

123
00:08:49,430 --> 00:08:52,730
Is we going to return the props?

124
00:08:52,930 --> 00:08:53,690
Now, if you.

125
00:08:54,590 --> 00:08:56,620
I'm not sure if you know or not.

126
00:08:56,630 --> 00:09:02,450
So in react whenever you wrap a component with any other component.

127
00:09:02,720 --> 00:09:09,140
So those values will be accessible at children props so you can access them as props.

128
00:09:09,560 --> 00:09:13,400
And then here you can use proctored children.

129
00:09:14,420 --> 00:09:16,700
All right, so this children means anything.

130
00:09:16,970 --> 00:09:25,910
So when you export this component, import anywhere, for example, let's say here in the European application.

131
00:09:26,180 --> 00:09:35,030
So all this entire application becomes children and is received here as the children.

132
00:09:35,030 --> 00:09:35,570
Props.

133
00:09:35,850 --> 00:09:36,050
All right.

134
00:09:37,070 --> 00:09:44,990
Make it so you can use props to children or you can directly destruct so and so that you can just use

135
00:09:46,370 --> 00:09:47,240
children as well.

136
00:09:47,360 --> 00:09:48,280
It's nice and easy.

137
00:09:53,400 --> 00:09:54,600
So that looks are good.

138
00:09:54,610 --> 00:09:57,300
However, we shouldn't forget to provide the value.

139
00:09:57,380 --> 00:09:58,860
So that's the whole point, right?

140
00:09:58,860 --> 00:10:04,650
So this value we want to provide you so value.

141
00:10:05,870 --> 00:10:10,040
Carney Bruce and then you best that here I it's this way.

142
00:10:12,210 --> 00:10:13,640
We cannot export.

143
00:10:14,320 --> 00:10:18,810
No, this time we're not going to use the default export because we have two things to export.

144
00:10:18,840 --> 00:10:19,740
One is context.

145
00:10:19,740 --> 00:10:20,610
One is provider.

146
00:10:21,210 --> 00:10:21,480
All right.

147
00:10:21,480 --> 00:10:28,530
So instead of different export, we are exporting like this one thing, context and.

148
00:10:30,750 --> 00:10:31,150
Over.

149
00:10:32,740 --> 00:10:33,040
All right.

150
00:10:33,850 --> 00:10:34,640
And this is it.

151
00:10:34,660 --> 00:10:36,460
This is our theme context.

152
00:10:37,270 --> 00:10:39,130
Now we can.

153
00:10:40,380 --> 00:10:46,230
Import this in our abilities and access the value anywhere in our application in any basis.

154
00:10:46,260 --> 00:10:49,320
This value team in team will be able to access that.

155
00:10:49,680 --> 00:10:55,020
And then from anywhere from any basis, we will be able to obtain this state.

156
00:10:56,580 --> 00:10:56,910
Thank you.

157
00:10:57,390 --> 00:11:01,590
So let's give it a try and let's go to introduce and try importing this one.

158
00:11:05,670 --> 00:11:06,330
Input.

159
00:11:12,890 --> 00:11:18,770
By the way, you can see here in visual is to record if some imports haven't been used.

160
00:11:19,070 --> 00:11:21,200
You see there they look different.

161
00:11:21,200 --> 00:11:23,190
They'll look Greece.

162
00:11:23,230 --> 00:11:27,350
So you can to you use context haven't been used because it was needed.

163
00:11:27,620 --> 00:11:30,650
Instead we had to use create context.

164
00:11:30,830 --> 00:11:36,770
But I think I've been using the word use context all the time, even though I meant to say create context.

165
00:11:37,220 --> 00:11:39,710
All right, let's remove that so we could hear.
