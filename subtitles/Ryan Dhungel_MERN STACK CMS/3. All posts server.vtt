WEBVTT
1
00:00:00.750 --> 00:00:03.450
So we were able to create a new post.

2
00:00:04.590 --> 00:00:11.220
And then when we create a post, we are redirected to all post write to try one more time.

3
00:00:11.610 --> 00:00:17.850
So now we're going to work on this base so that we can show all the posts for the admin user.

4
00:00:18.660 --> 00:00:19.530
So let's say

5
00:00:23.220 --> 00:00:25.470
let me just create one post.

6
00:00:26.010 --> 00:00:33.750
So post post for admin in a post space.

7
00:00:38.820 --> 00:00:39.170
All right.

8
00:00:39.170 --> 00:00:40.640
So this is what we have to do.

9
00:00:40.670 --> 00:00:46.010
We have to create a road in the server, and this control function will return all the post.

10
00:00:48.070 --> 00:00:49.300
We had known.

11
00:00:52.270 --> 00:00:53.730
We can see the previous rule.

12
00:00:54.280 --> 00:00:59.590
It's this and as you can see, we are redirected to all post bits here.

13
00:00:59.690 --> 00:00:59.890
Right?

14
00:01:00.160 --> 00:01:03.250
So here what we want to do is show the post for the enemy.

15
00:01:03.670 --> 00:01:07.300
So let's go and work in.

16
00:01:07.620 --> 00:01:11.350
So it's from the robbed post.

17
00:01:15.400 --> 00:01:27.130
So rather don't get to make a get fraught post to get on the post and hear the control function or to

18
00:01:27.130 --> 00:01:28.150
record posts.

19
00:01:29.560 --> 00:01:29.830
All right.

20
00:01:30.370 --> 00:01:33.640
So we bring that from post controller.

21
00:01:34.630 --> 00:01:37.630
By the way, you can see I didn't have any metal was applied to this road.

22
00:01:37.990 --> 00:01:47.020
Maybe we will apply some Middle West later, but at the moment, let's just continue like this and we

23
00:01:47.020 --> 00:01:47.830
will come back to it.

24
00:01:47.830 --> 00:01:51.910
And if we need to make some changes, we will.

25
00:01:52.210 --> 00:01:52.510
All right.

26
00:01:53.590 --> 00:01:55.000
Let me fix this type all.

27
00:01:56.920 --> 00:02:01.660
Okay, so let's go to control and queries function controllers post.

28
00:02:05.100 --> 00:02:11.340
Export context post async request response.

29
00:02:11.410 --> 00:02:13.320
So here we try

30
00:02:15.950 --> 00:02:20.010
Kels and console.log the error.

31
00:02:20.550 --> 00:02:26.940
So here let's use let's put it in a variable post.

32
00:02:27.120 --> 00:02:30.750
Oh actually let's not use push P it's going to be the same name let's call it.

33
00:02:30.750 --> 00:02:31.080
Oh.

34
00:02:35.640 --> 00:02:37.670
Console it could soon await.

35
00:02:37.830 --> 00:02:39.120
We use the post model.

36
00:02:39.120 --> 00:02:48.150
We use the find function that we find on the posts from the database.

37
00:02:48.780 --> 00:02:52.530
And we can do a few things here.

38
00:02:52.530 --> 00:02:59.580
We will we can populate the post by name so that we have a creating the post.

39
00:02:59.580 --> 00:03:04.150
We can see the name and other information.

40
00:03:04.350 --> 00:03:06.540
So let's just select the name.

41
00:03:06.780 --> 00:03:10.320
So this way you can select whatever fields you need.

42
00:03:10.320 --> 00:03:19.020
If you don't do this, if you use just posted by then, that will give you the user information which

43
00:03:19.020 --> 00:03:20.220
will include everything.

44
00:03:20.220 --> 00:03:25.140
It will include the user name, email, password, everything that is in the database.

45
00:03:25.140 --> 00:03:26.520
So you want to select.

46
00:03:27.060 --> 00:03:29.700
So in my case, I want to set on the live.

47
00:03:30.420 --> 00:03:36.120
I don't need any other information about the posted by user, so I'll just choose the name.

48
00:03:37.000 --> 00:03:39.030
Then we can just use Dart again.

49
00:03:39.060 --> 00:03:41.460
So this is also known as method turning.

50
00:03:41.460 --> 00:03:50.430
So there's a method you can see where we are turning, we send one now it's in another of four categories

51
00:03:50.430 --> 00:03:52.920
as well, so we can use populate.

52
00:03:59.110 --> 00:04:03.700
So if you remember now we are saving only the categories.

53
00:04:03.720 --> 00:04:05.370
Add in the date of this.

54
00:04:05.380 --> 00:04:08.880
You can see this is the this is how we created the post.

55
00:04:08.880 --> 00:04:12.210
So we are sending we are saving only the categories.

56
00:04:12.210 --> 00:04:21.480
Are we so obviously sending the the random idea of the category is not useful in the reactor application

57
00:04:21.480 --> 00:04:22.230
in the front end.

58
00:04:22.530 --> 00:04:29.670
So we need to send the categories name, right, so we can select fields.

59
00:04:30.840 --> 00:04:38.280
Now we can select let's send the IED, let's send it category name and slug.

60
00:04:39.210 --> 00:04:39.510
Right?

61
00:04:39.870 --> 00:04:45.060
So let's make sure we have these fills the model category.

62
00:04:45.600 --> 00:04:52.890
Yes, we have the name, we have the slope of it so we can populate the user name, probably the categories

63
00:04:52.890 --> 00:04:55.210
named Slug Fun.

64
00:04:55.500 --> 00:04:57.270
And let's also use search.

65
00:04:57.420 --> 00:04:59.310
So it's in another method.

66
00:04:59.310 --> 00:04:59.700
Sure.

67
00:05:00.120 --> 00:05:03.360
And we can use I created it.

68
00:05:03.360 --> 00:05:11.220
So that way whichever post that was newly created, the recent ones will come and come in the front.

69
00:05:11.450 --> 00:05:11.690
Right.

70
00:05:11.700 --> 00:05:13.800
So we show the latest first.

71
00:05:14.520 --> 00:05:23.060
So search and basically that's that solving it and then we can send the response station response.

72
00:05:23.070 --> 00:05:25.170
Oh, okay.

73
00:05:25.530 --> 00:05:30.870
Now this is a get wrote so you can even try it in the browser directly.

74
00:05:30.870 --> 00:05:32.820
You should be able to see the decent response.

75
00:05:33.240 --> 00:05:34.830
So let's give that a try.

76
00:05:35.460 --> 00:05:40.260
Local Host Our server is running at 8000 less appearance this post.

77
00:05:43.520 --> 00:05:46.400
I suppose we are getting in.

78
00:05:46.700 --> 00:05:48.920
Okay, so that's 800 and make it dead.

79
00:05:51.750 --> 00:05:56.330
And you can see here we get on the policy and Z, we have the categories.

80
00:05:56.330 --> 00:05:58.610
We populated the ID name and slug.

81
00:05:58.670 --> 00:05:59.690
So you see then there.

82
00:06:00.940 --> 00:06:01.330
Boston.

83
00:06:01.330 --> 00:06:02.860
Why we populated the name.

84
00:06:02.860 --> 00:06:03.640
So it is there.

85
00:06:04.060 --> 00:06:07.030
So it is automatically selected.

86
00:06:07.150 --> 00:06:07.420
Okay.

87
00:06:07.420 --> 00:06:16.340
So that means maybe on the cutting edge you wouldn't have to put a let's go on category lists to move

88
00:06:16.360 --> 00:06:16.660
that.

89
00:06:16.850 --> 00:06:20.020
So it is always there by default, it is added.

90
00:06:21.380 --> 00:06:24.940
You should give a refresh in the end.

91
00:06:24.940 --> 00:06:25.540
That's true.

92
00:06:25.690 --> 00:06:28.470
It is automatically headed.

93
00:06:29.050 --> 00:06:29.380
Okay.

94
00:06:30.700 --> 00:06:34.090
So that means we can make a request to that endpoints.

95
00:06:34.090 --> 00:06:37.330
Less post, get on the post and render them here.

96
00:06:37.780 --> 00:06:39.340
All right, so let's do that.

97
00:06:40.840 --> 00:06:44.170
So we can close all this and go to the client.

98
00:06:47.180 --> 00:06:48.470
Base's admin.

99
00:06:52.230 --> 00:06:57.180
That one is all posts and meaningless posts.

100
00:06:59.380 --> 00:07:00.640
Most in this.
