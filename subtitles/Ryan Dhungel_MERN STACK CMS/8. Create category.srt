1
00:00:00,900 --> 00:00:03,810
All right, so we tried the request hand in mirror.

2
00:00:04,770 --> 00:00:05,460
It works.

3
00:00:06,000 --> 00:00:09,410
Now, the next thing we want to do is protect for the admin user only.

4
00:00:09,420 --> 00:00:09,690
Right?

5
00:00:10,320 --> 00:00:18,600
Now, before we do that, let's go to our controller and try to create that category.

6
00:00:21,660 --> 00:00:24,110
Because we can always dilute the categories anyway.

7
00:00:26,470 --> 00:00:28,900
Let's close everything.

8
00:00:29,040 --> 00:00:30,460
It's too many fights over.

9
00:00:33,410 --> 00:00:36,920
Close the client to go to the controls category.

10
00:00:37,490 --> 00:00:40,850
So here, let me just remove both of them.

11
00:00:41,460 --> 00:00:44,580
Now, we want to save the category.

12
00:00:44,610 --> 00:00:44,870
Right.

13
00:00:44,870 --> 00:00:50,940
So that import category, model import category from.

14
00:00:53,720 --> 00:00:54,710
So one step up.

15
00:00:54,920 --> 00:00:56,200
Go to models.

16
00:00:57,610 --> 00:01:00,190
Edit You also want to have that category.

17
00:01:00,850 --> 00:01:05,090
We can create a new category.

18
00:01:05,110 --> 00:01:10,480
Second category equals to we use a IT category that create.

19
00:01:10,510 --> 00:01:12,610
Now this is one way of doing it.

20
00:01:13,030 --> 00:01:16,810
Also the other way going category.

21
00:01:16,810 --> 00:01:26,380
It was to avoid new category so you can create a new instance of category and then to create a new category,

22
00:01:26,380 --> 00:01:27,750
we need some data, right?

23
00:01:27,760 --> 00:01:30,610
So that data we get in the request body.

24
00:01:31,120 --> 00:01:33,840
So we get to name in the request body.

25
00:01:34,000 --> 00:01:36,790
So request body name equals to whatever that is.

26
00:01:37,510 --> 00:01:41,590
That name will be used to create a new category.

27
00:01:41,620 --> 00:01:42,430
So you can see here.

28
00:01:43,300 --> 00:01:44,140
Category model.

29
00:01:45,410 --> 00:01:48,260
You can save the name and the slot.

30
00:01:48,620 --> 00:01:51,830
So we have to generate the slogan as well based on the name.

31
00:01:53,620 --> 00:01:53,720
Okay.

32
00:01:53,800 --> 00:01:57,700
So we can access the name for instead of just doing it with this body.

33
00:01:58,180 --> 00:01:58,720
We can.

34
00:02:00,060 --> 00:02:06,670
These districts of the valley of seconds name include student request board.

35
00:02:06,850 --> 00:02:09,280
This would make make it a bit more easier to use.

36
00:02:10,400 --> 00:02:18,080
All right, because request body is not enough to create a new user because we need to add a slug as

37
00:02:18,080 --> 00:02:18,350
well.

38
00:02:18,960 --> 00:02:19,190
Right.

39
00:02:19,700 --> 00:02:21,830
So you create a new category.

40
00:02:22,700 --> 00:02:24,080
Now we won't name.

41
00:02:25,370 --> 00:02:26,480
You didn't have to do this.

42
00:02:26,600 --> 00:02:28,000
It's the naming of value.

43
00:02:28,010 --> 00:02:29,660
17 is clearly like this.

44
00:02:30,320 --> 00:02:33,170
So the new category would need a name and it would need to slow.

45
00:02:33,830 --> 00:02:36,410
Now slow is going to be the name.

46
00:02:37,940 --> 00:02:41,490
But we have to make it a lower case.

47
00:02:41,630 --> 00:02:45,280
Actually, we did have to make a lower case because our schemes will do it.

48
00:02:46,690 --> 00:02:53,020
By itself, thanks to this, probably wouldn't have to make a lower case, but we have to make sure

49
00:02:53,020 --> 00:02:56,110
that any bright spots are remote.

50
00:02:56,350 --> 00:02:56,610
All right.

51
00:02:56,620 --> 00:03:01,060
So this is something we could do using some simple regular expression.

52
00:03:01,060 --> 00:03:06,540
But there is a buried library that we can use from NPR.

53
00:03:06,610 --> 00:03:10,360
So that one is called slug fight.

54
00:03:15,170 --> 00:03:16,280
So we can use this one.

55
00:03:18,120 --> 00:03:23,930
We just give the name of our category, and that was Lightfoot.

56
00:03:24,240 --> 00:03:26,460
So if the name is something like this.

57
00:03:27,800 --> 00:03:29,030
Node space.

58
00:03:29,030 --> 00:03:31,790
This, if you give that, then it will address.

59
00:03:32,720 --> 00:03:35,440
All right, so simple.

60
00:03:35,440 --> 00:03:36,450
Let's use this.

61
00:03:39,020 --> 00:03:42,590
Stop that insult.

62
00:03:42,620 --> 00:03:44,450
This one started.

63
00:03:44,480 --> 00:03:47,060
So, again, bring that slug.

64
00:03:47,060 --> 00:03:47,600
Fight you.

65
00:03:54,640 --> 00:03:56,230
And then we can use that here.

66
00:03:57,360 --> 00:03:58,230
Stratify.

67
00:03:58,590 --> 00:04:05,460
We give the category a name that will remove any white spaces, and when it is saved, obviously it

68
00:04:05,460 --> 00:04:07,400
will be saved in all lowercase.

69
00:04:07,400 --> 00:04:09,240
So that's pretty much all we need to do.

70
00:04:10,080 --> 00:04:10,320
All right.

71
00:04:10,320 --> 00:04:14,700
So we create a new category and we use dot save immediately there.

72
00:04:17,250 --> 00:04:25,200
Otherwise, if you didn't do that, you could also use Category dot C, you could do this as well.

73
00:04:25,620 --> 00:04:28,130
But if we can do it all inline, why not?

74
00:04:28,140 --> 00:04:28,410
Right.

75
00:04:28,410 --> 00:04:32,400
So let's do it all in line and then that's all we need to do.

76
00:04:32,430 --> 00:04:33,810
The category has been saved.

77
00:04:34,140 --> 00:04:37,230
If you want to have a look, you can do it once a lot.

78
00:04:40,440 --> 00:04:41,390
Let's have a look.

79
00:04:43,390 --> 00:04:46,780
And then you want to send the response as well.

80
00:04:46,790 --> 00:04:47,050
Right.

81
00:04:47,050 --> 00:04:51,130
So response dart Jason kind of give.

82
00:04:52,170 --> 00:04:58,440
I guess this way the newly created category will be received here in our client as well.

83
00:04:58,560 --> 00:05:04,560
And then when it is received, you can just put in the list and display immediately.

84
00:05:04,850 --> 00:05:05,760
Not sure you can do that.

85
00:05:07,310 --> 00:05:11,620
Now, when you do this, make sure not to use coronavirus like this.

86
00:05:11,630 --> 00:05:20,500
If you do this in the reactor application, you will be able to access this using da da da da da da

87
00:05:20,500 --> 00:05:20,840
da.

88
00:05:21,260 --> 00:05:21,860
You have to go.

89
00:05:21,860 --> 00:05:22,850
So you have to go.

90
00:05:22,850 --> 00:05:23,810
One step down.

91
00:05:24,470 --> 00:05:26,490
I don't use the card address.

92
00:05:27,080 --> 00:05:29,520
Just send like this license.

93
00:05:29,600 --> 00:05:31,070
Jason, thank you.

94
00:05:31,250 --> 00:05:34,610
And then that will give us the excuse.

95
00:05:34,610 --> 00:05:37,850
We'll be able to receive it as a response to data.

96
00:05:38,600 --> 00:05:47,570
And obviously you can destruct the data from access use in the client said it to do this I guess so

97
00:05:47,570 --> 00:05:50,810
send the response like this and let's give it a try.

98
00:05:52,490 --> 00:05:52,790
All right.

99
00:05:52,790 --> 00:05:56,030
So let's create our first category.

100
00:05:56,390 --> 00:06:00,090
And once it is created, we should be able to take out in the database.

101
00:06:02,390 --> 00:06:04,700
All right, so let's try to react.

102
00:06:06,500 --> 00:06:09,020
Perfect category created successfully.

103
00:06:09,680 --> 00:06:10,760
That's great.

104
00:06:12,170 --> 00:06:12,530
Okay.

105
00:06:12,860 --> 00:06:14,020
You see this controller?

106
00:06:14,030 --> 00:06:14,720
We did.

107
00:06:15,770 --> 00:06:16,880
Let me just confirm that.

108
00:06:17,600 --> 00:06:20,690
So that controller gives us this newly created category.

109
00:06:20,690 --> 00:06:22,890
So this is how it is saved in the database.

110
00:06:22,920 --> 00:06:27,110
You can see we give the name, we generate this log based on the name.

111
00:06:27,110 --> 00:06:30,200
So it is all lowercase, it is the slot.

112
00:06:30,680 --> 00:06:38,450
And in anything that is saved in the database, we get this unique ID and because we use the timestamps,

113
00:06:38,450 --> 00:06:43,940
we have the created, added and updated and it is beautiful.

114
00:06:45,440 --> 00:06:50,750
This is something you can also take out in the database if you go here.

115
00:06:53,570 --> 00:06:56,690
Collections, you may have to refresh this.

116
00:06:59,260 --> 00:06:59,510
Again.

117
00:06:59,590 --> 00:07:02,950
Now you can see we have the categories and we have the very first category.

118
00:07:02,950 --> 00:07:04,810
We just create beautiful.

119
00:07:07,620 --> 00:07:08,010
Okay.

120
00:07:08,100 --> 00:07:09,680
So the category has been saved.

121
00:07:09,690 --> 00:07:13,770
But like I was saying, we want to.

122
00:07:15,140 --> 00:07:19,160
Allow the users to create the category only if the user is admin.

123
00:07:19,400 --> 00:07:19,640
All right.

124
00:07:19,640 --> 00:07:28,340
So let's go ahead and create one more middleware that will take if the user actually has the role of

125
00:07:28,340 --> 00:07:28,700
an.
