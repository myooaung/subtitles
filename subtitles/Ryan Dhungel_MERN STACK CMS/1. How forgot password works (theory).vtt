WEBVTT
1
00:00:00.540 --> 00:00:03.150
So we have these signing and turnout features.

2
00:00:04.260 --> 00:00:09.300
The next thing I want to implement is this phone password.

3
00:00:09.750 --> 00:00:14.340
And we already have the end point in the back end for our password in reset passports.

4
00:00:14.360 --> 00:00:19.710
All we need to do is create a base here in the frontend and we already have the back end.

5
00:00:19.710 --> 00:00:20.000
Good.

6
00:00:20.540 --> 00:00:25.560
All right, so let's work on this one and then we pretty much is done with authentication and then we

7
00:00:25.560 --> 00:00:31.200
can now focus more into the admin dashboard.

8
00:00:31.200 --> 00:00:40.230
So we will restrict the pages for admin user and then we will allow the admin needed to create categories,

9
00:00:40.230 --> 00:00:43.080
quick push and do all those things.

10
00:00:43.530 --> 00:00:46.470
All right, so let's work on this problem classroom.

11
00:00:47.010 --> 00:00:52.500
Now, before we try, let's go to the finished application and let's see how everything works here.

12
00:00:53.310 --> 00:00:55.830
All right, so here we have the sign up bays.

13
00:00:55.830 --> 00:00:56.850
Sign in bays.

14
00:00:56.850 --> 00:01:03.690
And in our sign in, if the following the password, then they can click here and that will take them

15
00:01:03.690 --> 00:01:06.240
to a different face for the password.

16
00:01:06.240 --> 00:01:11.850
And here we are showing them this form where they can enter the email, right?

17
00:01:11.970 --> 00:01:20.460
So the way it's going to work is for example my email is and Zimmerman dot com and if I forgot my password

18
00:01:20.460 --> 00:01:25.410
then I will come on this piece and intimate email to Ryan

19
00:01:28.620 --> 00:01:36.240
and G.M. dot com I will enter my email and submit so when you submit what happens is this email is sent

20
00:01:36.240 --> 00:01:37.460
to our back end, right?

21
00:01:37.680 --> 00:01:41.580
And the back end will try to find the user.

22
00:01:42.230 --> 00:01:50.400
And based on this email from the database and if the user is found with this email, then we will get

23
00:01:50.400 --> 00:01:52.050
a successful response here.

24
00:01:52.530 --> 00:02:02.520
And that time we will also the back in our back end will send a code, salt code to this use this email.

25
00:02:03.090 --> 00:02:03.330
All right.

26
00:02:03.330 --> 00:02:07.110
So if the user is fun, then we will generate the code.

27
00:02:07.110 --> 00:02:09.360
We will save that in the database as well.

28
00:02:09.810 --> 00:02:13.290
And we also email that to the user's email.

29
00:02:14.130 --> 00:02:14.430
All right.

30
00:02:14.430 --> 00:02:22.740
So if this is a genuine user, then obviously I would be able to access material dot com and see that

31
00:02:22.740 --> 00:02:23.160
code.

32
00:02:23.310 --> 00:02:23.610
Right.

33
00:02:23.820 --> 00:02:28.820
So and I see that code, I will be able to enter that code here.

34
00:02:28.830 --> 00:02:38.400
So as soon as a hit submit our back end will generate that code, saving the database, send the email

35
00:02:38.400 --> 00:02:41.190
to this user and send a successful response here.

36
00:02:41.370 --> 00:02:48.570
So if we get a successful response, we will show under the input field where a user can enter that

37
00:02:48.570 --> 00:02:57.060
code, which they will receive in the email, and then they will enter the new password as so said that

38
00:02:57.060 --> 00:02:57.420
time.

39
00:02:57.630 --> 00:02:59.820
So, you know, that's the first step.

40
00:02:59.830 --> 00:03:05.250
Second step is the code and the new password that they want to use because the for the old one.

41
00:03:05.250 --> 00:03:05.490
Right.

42
00:03:05.700 --> 00:03:11.910
So they will enter the code in the new password and then again they will hit submit.

43
00:03:12.060 --> 00:03:14.520
So at that time we will take.

44
00:03:15.560 --> 00:03:20.570
We will try to find the user again based on the email and also the court.

45
00:03:20.830 --> 00:03:21.080
Right.

46
00:03:21.080 --> 00:03:23.120
So we have served the court as well.

47
00:03:23.330 --> 00:03:30.200
So if we can find the email, the user base on the email and also with the court, then that is the

48
00:03:30.200 --> 00:03:30.770
right use.

49
00:03:30.770 --> 00:03:36.380
And we just did that dude's password, the previous password with the new one, they just submit.

50
00:03:36.740 --> 00:03:43.610
So that's how we going forward and we should password both in the same same base and component here.

51
00:03:43.610 --> 00:03:44.360
We're going to do it.

52
00:03:44.840 --> 00:03:45.060
All right.

53
00:03:45.180 --> 00:03:46.190
That's a bit of theory.

54
00:03:46.520 --> 00:03:48.590
Now we can go ahead and implement this one.

55
00:03:49.220 --> 00:03:52.070
Now, this is not a valid email, so let let me try.

56
00:03:53.480 --> 00:03:54.680
User is not fancied.

57
00:03:54.680 --> 00:03:56.030
This user is not fun.

58
00:03:56.720 --> 00:04:04.610
So you can try the valid email and it works, but let's go ahead and just work in our application here

59
00:04:04.610 --> 00:04:05.180
anyways.

60
00:04:05.290 --> 00:04:05.400
All right.

61
00:04:05.420 --> 00:04:10.940
So first thing we need to do is create displays with the input field where they can enter the email

62
00:04:11.810 --> 00:04:16.630
and then that's how we are going to start implementing the password.
