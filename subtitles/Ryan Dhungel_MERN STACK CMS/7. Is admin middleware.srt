1
00:00:00,720 --> 00:00:01,110
All right.

2
00:00:01,120 --> 00:00:02,540
So we did some refactoring.

3
00:00:02,550 --> 00:00:08,310
Now we're going to move on to the admin route just like we have the author out.

4
00:00:08,310 --> 00:00:09,890
We going to quit admin, right?

5
00:00:10,930 --> 00:00:14,430
That will be protected for the user with the role of end.

6
00:00:14,910 --> 00:00:22,650
And we will have a different layout as well of admin layout that will have that will look similar but

7
00:00:22,650 --> 00:00:24,420
will have less features.

8
00:00:25,500 --> 00:00:31,410
So admin author will be able to create host libraries and and profile.

9
00:00:32,700 --> 00:00:40,320
So for that, obviously, first we have to work in our back in that we need to create a route that will

10
00:00:40,320 --> 00:00:43,020
take if the user has the role of author.

11
00:00:43,410 --> 00:00:48,640
Just like previously we had one for admin, so didn't close all this.

12
00:00:48,660 --> 00:00:53,820
Let's quickly have a look at our layout admin layout.

13
00:00:53,830 --> 00:01:01,140
So here you can see we are sending requests to current admin wrote in our back in and in this draft

14
00:01:01,140 --> 00:01:03,450
we have applied the is admin mid-year.

15
00:01:03,900 --> 00:01:04,860
So let's have a look.

16
00:01:09,140 --> 00:01:10,700
Meanwhile, where's index?

17
00:01:11,000 --> 00:01:14,210
Actually, it's good to get out first post.

18
00:01:17,350 --> 00:01:18,880
We have the easy and middle way.

19
00:01:18,970 --> 00:01:20,950
So if I click here, you can see.

20
00:01:22,820 --> 00:01:27,650
We find the user by adding the logged in use idea and we check for the rule.

21
00:01:27,770 --> 00:01:36,050
If it is admin then if it is not admin then we send the error, otherwise we execute it next.

22
00:01:36,140 --> 00:01:37,160
So this is a middleware.

23
00:01:37,400 --> 00:01:45,110
So we're going to create a similar middleware that will take if the user's role is also I guess if the

24
00:01:45,110 --> 00:01:50,330
role is alpha, then we, we execute this function.

25
00:01:50,450 --> 00:01:52,940
Otherwise we send the error response.

26
00:01:53,660 --> 00:01:53,960
Okay.

27
00:01:54,200 --> 00:01:55,850
So we did that first.

28
00:01:55,850 --> 00:01:57,110
Let's go to.

29
00:01:58,930 --> 00:02:02,890
Actually, we converted this middle works index from a threat that you.

30
00:02:05,630 --> 00:02:09,860
Probably we can actually even copy this one to make things easier scoping them.

31
00:02:12,810 --> 00:02:14,370
Is something it's called.

32
00:02:18,080 --> 00:02:26,450
Obviously we try to find the use of by the lovely news A.D. and then we take if the users role is not

33
00:02:26,450 --> 00:02:26,900
awesome,

34
00:02:29,990 --> 00:02:31,940
then we send this at a response.

35
00:02:31,940 --> 00:02:33,650
Otherwise we execute next.

36
00:02:35,420 --> 00:02:35,760
Awesome.

37
00:02:36,930 --> 00:02:45,740
Okay, now that we have this middleware, let's go to the post and then here and let's create the function

38
00:02:45,740 --> 00:02:46,110
as well.

39
00:02:46,130 --> 00:02:51,830
Actually, let's go to the author and we can import that here is awesome.

40
00:02:53,120 --> 00:03:01,190
And we have the take him for admin current current user.

41
00:03:01,360 --> 00:03:03,890
Actually, we can just use the current user function.

42
00:03:05,780 --> 00:03:07,280
You can see current user.

43
00:03:09,910 --> 00:03:19,060
So that's not quite as clear to the current user, to the current admin wrote When the request comes

44
00:03:19,060 --> 00:03:23,380
in, we have this middle way that makes sure users logged in.

45
00:03:23,470 --> 00:03:28,600
We have this middleware that makes sure that the user has the role of admin and if it is all good,

46
00:03:28,810 --> 00:03:30,190
this function executes.

47
00:03:30,820 --> 00:03:32,860
This function doesn't really have anything.

48
00:03:32,860 --> 00:03:34,390
It just say or get true.

49
00:03:34,510 --> 00:03:38,890
Richard This is just to give the okay response.

50
00:03:39,850 --> 00:03:46,030
So that means we can do the same thing for current affairs so far.

51
00:03:46,060 --> 00:03:46,540
And also

52
00:03:49,510 --> 00:03:55,720
only thing we need to do here it turns this middleware instead of is admin middleware we use now is

53
00:03:55,720 --> 00:04:02,440
also I guess that's something to do now from our client.

54
00:04:02,830 --> 00:04:12,280
When we make a request from our callout, we make a request to current item and we will receive the

55
00:04:12,280 --> 00:04:12,880
response.

56
00:04:12,880 --> 00:04:13,390
Okay.

57
00:04:13,600 --> 00:04:16,060
If the user is actually after.

58
00:04:16,420 --> 00:04:22,750
Right, simple, simple as before, it works the same way it worked for admin.

59
00:04:24,640 --> 00:04:27,460
Okay, so we've got the current off the root, we have the middleware.

60
00:04:27,940 --> 00:04:34,720
So that means we can now go to a client and create a layout.

61
00:04:36,340 --> 00:04:44,020
We create a layout and we create the navigation as well for auto, just like we did earlier for admin.

62
00:04:47,020 --> 00:04:49,390
So we created the admin now before.

63
00:04:50,470 --> 00:04:52,630
This is the navigation on the side where this is.

64
00:04:52,900 --> 00:04:53,920
This is admin then.

65
00:04:54,430 --> 00:05:01,360
So we need something similar for author and then we create a layout for our third.

66
00:05:01,430 --> 00:05:08,380
So using the user effect to make a request to current author.
