WEBVTT
1
00:00:01.050 --> 00:00:04.080
And we got the successful sign in response.

2
00:00:04.080 --> 00:00:05.660
We got the token and the user.

3
00:00:05.670 --> 00:00:06.840
How good is that?

4
00:00:06.840 --> 00:00:09.780
I can see the token and we get to use it.

5
00:00:09.780 --> 00:00:14.280
It's the exact same code we previously got doing the sign up as well.

6
00:00:14.430 --> 00:00:15.360
So this is good.

7
00:00:15.960 --> 00:00:17.760
Now let's try it now.

8
00:00:17.760 --> 00:00:19.630
Let's try with the wrong password possibilities.

9
00:00:20.720 --> 00:00:20.920
Tom.

10
00:00:20.930 --> 00:00:22.760
Wrong password and see what happens.

11
00:00:24.850 --> 00:00:33.040
You can see here we got this error prone parser error we are getting there hobo in a display here but

12
00:00:33.040 --> 00:00:39.800
there is obviously we can do we can take for the data error and if there is error weekend it's so simple

13
00:00:39.820 --> 00:00:46.090
just in our two figures and I guess everything is looking good if you try some invalid email that you

14
00:00:46.090 --> 00:00:47.830
can see no use a finally that email.

15
00:00:48.280 --> 00:00:49.240
So it all looks good.

16
00:00:49.250 --> 00:00:50.620
Let's finish this up.

17
00:00:51.850 --> 00:00:54.490
So let's remove the controller.

18
00:00:56.180 --> 00:00:59.510
And if it is successful, we can.

19
00:01:01.180 --> 00:01:06.850
So the toast notification, we can send the user into context and also the local story, just like we

20
00:01:06.850 --> 00:01:09.070
did before doing sign up.

21
00:01:09.530 --> 00:01:09.760
All right.

22
00:01:10.270 --> 00:01:10.600
So

23
00:01:13.090 --> 00:01:18.880
save the user and go into context.

24
00:01:20.840 --> 00:01:25.420
Save the user and token to the local stories.

25
00:01:26.350 --> 00:01:29.110
And then redirect you.

26
00:01:29.280 --> 00:01:29.500
Right.

27
00:01:29.500 --> 00:01:36.520
So when they sign in, we should redirect them to maybe their desperate or maybe home base.

28
00:01:36.730 --> 00:01:41.230
At the moment we can just redirect to home base and then later when we have these desperate, we can

29
00:01:41.230 --> 00:01:43.300
just redirect them there.

30
00:01:43.330 --> 00:01:44.800
It's going to be nice and easy.

31
00:01:45.970 --> 00:01:46.240
All right.

32
00:01:46.240 --> 00:01:47.950
So Token.

33
00:01:48.880 --> 00:01:52.090
So the context, obviously, we have to access the context.

34
00:01:52.990 --> 00:01:59.980
So let's access import our context from.

35
00:02:01.570 --> 00:02:02.830
So we are right here.

36
00:02:02.830 --> 00:02:06.190
So we go one step up, get insert context.

37
00:02:08.920 --> 00:02:09.700
Context.

38
00:02:10.300 --> 00:02:15.600
Oh, and to use the context, we need to use context.

39
00:02:15.620 --> 00:02:18.040
You guys want use context.

40
00:02:20.290 --> 00:02:23.290
And then you let's use context.

41
00:02:25.060 --> 00:02:26.710
Let me put this on top of this.

42
00:02:26.710 --> 00:02:30.250
Like to put the context on top and then local, state underneath.

43
00:02:30.820 --> 00:02:31.140
All right.

44
00:02:31.150 --> 00:02:42.090
So here we are trying to access us, set up to use context of context.

45
00:02:43.930 --> 00:02:49.090
Then we can use the set of function to update the user information in the context.

46
00:02:49.200 --> 00:02:49.630
Right to.

47
00:02:49.670 --> 00:02:49.960
Here.

48
00:02:52.600 --> 00:02:53.590
Set of.

49
00:02:56.570 --> 00:02:59.120
Let me double check the context.

50
00:03:00.710 --> 00:03:00.950
All right.

51
00:03:01.040 --> 00:03:02.480
So we have the using the two.

52
00:03:06.650 --> 00:03:07.580
So set off.

53
00:03:08.000 --> 00:03:08.850
What are you going to do?

54
00:03:08.870 --> 00:03:11.120
We don't actually have to do anything.

55
00:03:11.120 --> 00:03:16.190
We can indirectly give this data because this data has the user and context.

56
00:03:16.760 --> 00:03:24.320
So to use it and so we can directly set it, do data, use the data to set up.

57
00:03:24.620 --> 00:03:35.600
And then we want to say in the local source as well, so the local stories don't set item to save anything

58
00:03:35.600 --> 00:03:37.280
we use set item function.

59
00:03:37.670 --> 00:03:40.850
We give the key we use all.

60
00:03:42.490 --> 00:03:45.220
Then the data.

61
00:03:45.310 --> 00:03:50.020
We have to use the decent string only because we want to save this as a decent data.

62
00:03:50.050 --> 00:03:50.830
That's important.

63
00:03:51.310 --> 00:03:52.150
So decent string.

64
00:03:52.150 --> 00:03:53.770
Finally we just use data.

65
00:03:53.830 --> 00:03:56.860
So this is exactly what we did before in sign up as.

66
00:03:57.190 --> 00:03:58.180
You might remember.

67
00:03:58.180 --> 00:03:59.830
You can have a look at it here.

68
00:04:01.610 --> 00:04:03.680
All right, so we saved that and then we should.

69
00:04:03.680 --> 00:04:05.780
TUSHNET Because so let's do that.

70
00:04:05.780 --> 00:04:08.300
And then the Lori and the redirect

71
00:04:11.690 --> 00:04:13.550
and I could then redirect the user.

72
00:04:13.790 --> 00:04:16.370
So since we are redirecting, we don't have to.

73
00:04:17.710 --> 00:04:19.000
I said lowering defaults.

74
00:04:19.570 --> 00:04:22.330
You know we are redirecting anyways so.

75
00:04:25.200 --> 00:04:28.010
Let's use the toast and then redo it.

76
00:04:29.830 --> 00:04:32.130
We we have to use the user, our Roku.

77
00:04:33.630 --> 00:04:35.160
Before we do that, let's.

78
00:04:36.150 --> 00:04:39.360
So the toast notification those.

79
00:04:41.890 --> 00:04:48.250
Success successfully signed in so it's so that total notification and to reiterate the use and it's

80
00:04:48.250 --> 00:04:58.630
import the context from next to that one is called use Aurora from the next round.

81
00:04:59.410 --> 00:05:09.190
And then to use that we can use books because Aurora equals to use Aurora, we can execute that hook

82
00:05:10.780 --> 00:05:13.210
and put that value in the rather variable.

83
00:05:13.210 --> 00:05:16.840
And then this will give us all the functionalities from this function.

84
00:05:17.380 --> 00:05:20.320
And the one we are going to use now is Aurora.

85
00:05:20.320 --> 00:05:26.200
And the dart was going to use the push function and this function we have to give the URL.

86
00:05:26.230 --> 00:05:28.180
Where do you want to push the user at the moment?

87
00:05:28.180 --> 00:05:30.520
Let's just leave it to homepage for our.

88
00:05:31.420 --> 00:05:32.670
Later we come back into.

89
00:05:35.120 --> 00:05:35.480
All right.

90
00:05:35.480 --> 00:05:38.120
So I think that is all we need.

91
00:05:38.180 --> 00:05:39.620
Let's give it a try.

92
00:05:41.880 --> 00:05:46.050
I get say and Ryan and Jimmy.

93
00:05:50.630 --> 00:05:53.930
Successfully signed in and we have been redirected to home base.

94
00:05:54.980 --> 00:05:56.090
Absolutely beautiful.

95
00:05:59.320 --> 00:05:59.600
Also.

96
00:06:03.680 --> 00:06:03.900
All right.

97
00:06:03.930 --> 00:06:06.380
So the next thing we want to do now is

98
00:06:09.050 --> 00:06:10.730
implement the.

99
00:06:12.810 --> 00:06:14.640
You can see we saved it by the name of.

100
00:06:16.580 --> 00:06:17.030
I was.

101
00:06:18.260 --> 00:06:20.210
I guess this is from another application.

102
00:06:20.210 --> 00:06:20.570
Sorry.

103
00:06:20.870 --> 00:06:26.660
So what happens is if you're building more than one application at the same time and they are running

104
00:06:26.660 --> 00:06:34.130
in the same you are 3000, then you might see some data that is that belongs to the other application

105
00:06:34.130 --> 00:06:37.310
as well I guess is sometimes you may get some weird errors in that case.

106
00:06:37.310 --> 00:06:42.200
You may want to come to stories and clear all the site data.

107
00:06:42.650 --> 00:06:42.940
All right.

108
00:06:42.950 --> 00:06:43.940
So you can always do that.

109
00:06:44.300 --> 00:06:47.570
In my case, this is from the other project that I was doing.

110
00:06:47.570 --> 00:06:50.210
So let me just click and remove.

111
00:06:51.950 --> 00:06:52.310
All right.

112
00:06:52.580 --> 00:06:57.620
So let's now focus on conditionally rendering the links.

113
00:06:58.130 --> 00:07:02.300
So if user is signed in, then obviously we don't want to show these links.

114
00:07:02.300 --> 00:07:03.450
Sign up and sign it.

115
00:07:03.470 --> 00:07:03.770
Right.

116
00:07:04.070 --> 00:07:07.220
So conditional, let's hide into these links.

117
00:07:07.550 --> 00:07:13.220
And then if a user is logged in, we need to show the sign out a log out link.

118
00:07:13.730 --> 00:07:21.320
If user is not logged in, then only then we saw these two links and it's going to be same for the desperate

119
00:07:21.320 --> 00:07:21.670
as well.

120
00:07:21.890 --> 00:07:27.260
So if the logged in only then we show the desperate and desperate answer based on the users role, we

121
00:07:27.260 --> 00:07:31.400
have to make sure the links are different.

122
00:07:31.800 --> 00:07:35.690
I will implement those things step by step as we progress.
