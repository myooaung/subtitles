1
00:00:00,570 --> 00:00:04,800
All right, so let's work on showing the user role and the number of posts.

2
00:00:08,270 --> 00:00:09,680
So we've got that description.

3
00:00:10,640 --> 00:00:14,690
After the description, we can again use the meter.

4
00:00:14,930 --> 00:00:16,190
So let me just copy that.

5
00:00:18,850 --> 00:00:21,340
Here we use here to turn from.

6
00:00:25,150 --> 00:00:26,710
And that seems to use a room.

7
00:00:32,130 --> 00:00:36,900
Now I want to do one more thing and that is you can see I'm currently.

8
00:00:38,230 --> 00:00:39,850
Logged in, and that's.

9
00:00:39,850 --> 00:00:40,420
That's me.

10
00:00:40,690 --> 00:00:41,650
So I don't want to.

11
00:00:43,690 --> 00:00:44,590
Delude myself.

12
00:00:44,590 --> 00:00:46,250
I said it doesn't even work.

13
00:00:46,570 --> 00:00:48,280
But I also want to.

14
00:00:50,730 --> 00:00:52,380
Excited to kick another year.

15
00:00:52,620 --> 00:01:00,600
So I want to disable this delete and delete a link here so that it's here.

16
00:01:02,560 --> 00:01:12,460
Currently disabled, so disabled if the user turned on the school I.D., the consequence equals odds.

17
00:01:13,390 --> 00:01:15,730
Don't you jumped in the sky.

18
00:01:16,180 --> 00:01:21,610
So if it is the same user, then I want to disable that.

19
00:01:21,610 --> 00:01:22,890
So that looks great.

20
00:01:24,400 --> 00:01:24,760
All right.

21
00:01:24,760 --> 00:01:28,480
So finally, we're going to show the number of post that a user have created.

22
00:01:29,170 --> 00:01:37,570
Now, this is something we didn't plan earlier, so the user model doesn't actually have the posts properly.

23
00:01:38,800 --> 00:01:41,120
So we have to quickly go and fix that.

24
00:01:41,140 --> 00:01:46,120
But let's see how we can show that first and then we can do fix that.

25
00:01:46,810 --> 00:01:49,450
So let's copy that based here.

26
00:01:51,880 --> 00:01:52,630
So user

27
00:01:56,050 --> 00:01:56,640
posts.

28
00:01:57,430 --> 00:02:00,100
So we take here because this project doesn't exist.

29
00:02:00,100 --> 00:02:08,440
If we have user dots posts, then don't let we try to access the length.

30
00:02:10,600 --> 00:02:13,630
And let me put everything and said back to.

31
00:02:18,560 --> 00:02:19,010
Post.

32
00:02:21,970 --> 00:02:22,270
All right.

33
00:02:22,870 --> 00:02:26,590
So we trying to slow the number of posts the user had.

34
00:02:27,070 --> 00:02:29,650
Now you can see here undefined post.

35
00:02:30,040 --> 00:02:34,780
So because we don't have the post properly on the user hit.

36
00:02:37,000 --> 00:02:44,570
So if we don't have the length, then maybe we just should zero here in the upper.

37
00:02:46,260 --> 00:02:46,620
All right.

38
00:02:47,460 --> 00:02:50,610
So let's go and try to fix this one.

39
00:02:50,610 --> 00:02:56,580
So what happens is whenever the new post is created, we are saving the date of this, but we're not

40
00:02:56,580 --> 00:02:58,110
assigning that to the user.

41
00:02:58,680 --> 00:03:03,180
So each post heavy user, his post has the posted device.

42
00:03:03,190 --> 00:03:08,100
So we know the post has been created by which user we know that.

43
00:03:08,370 --> 00:03:16,980
However, when we try to find all the post of any user, then it gets tricky because as you can imagine,

44
00:03:17,250 --> 00:03:22,680
how do we find all the posts that belongs to a particular user?

45
00:03:22,770 --> 00:03:24,810
For example, if I have created five post.

46
00:03:26,350 --> 00:03:28,840
How do they now query that?

47
00:03:29,050 --> 00:03:29,650
Because.

48
00:03:31,630 --> 00:03:35,620
There's no post array in the user schema.

49
00:03:36,050 --> 00:03:36,200
Right.

50
00:03:36,270 --> 00:03:37,450
So it gets really difficult.

51
00:03:37,450 --> 00:03:38,320
So what are you going to do?

52
00:03:38,890 --> 00:03:43,120
Is we going to add the stop code in our back?

53
00:03:43,270 --> 00:03:48,160
So it's cool controls post, go to create post.

54
00:03:48,170 --> 00:03:57,460
So whenever we are creating the post at that time, we want to post this newly created post ID to the

55
00:03:57,460 --> 00:03:59,950
user's array of posts.

56
00:04:00,820 --> 00:04:09,750
So before we actually even work on this one, it's good in the model, user model and add the post array.

57
00:04:11,350 --> 00:04:16,510
So as you can see here, we previously didn't think about this one, so we don't have that.

58
00:04:16,510 --> 00:04:17,200
But that's all right.

59
00:04:17,200 --> 00:04:26,830
So let's add hosts array and this array will have the array of posts, right?

60
00:04:27,280 --> 00:04:33,740
So each object will have the will be the type of object.

61
00:04:33,820 --> 00:04:41,410
And so whenever we are saving anything here into the user's post array, we are just saving the post

62
00:04:41,950 --> 00:04:42,310
ID.

63
00:04:42,700 --> 00:04:49,510
That's all we need because later we can populate to get the entire post if we want.

64
00:04:50,070 --> 00:04:58,930
All right, so add this so that we can start saving the post 80 to the user's post.

65
00:04:58,940 --> 00:05:03,790
So we are used to make this change and then go back to your control.

66
00:05:06,870 --> 00:05:09,330
And go to that create post function.

67
00:05:11,070 --> 00:05:18,090
We post a sort of note on the off control screw to post control create post.

68
00:05:18,750 --> 00:05:20,880
So here it's called we don't.

69
00:05:22,140 --> 00:05:23,520
In this set I am not here.

70
00:05:23,520 --> 00:05:24,960
We are creating a new post.

71
00:05:26,200 --> 00:05:34,120
We saved the post and then we send the response before we send the response to the post.

72
00:05:34,120 --> 00:05:38,740
IED to users posts read.

73
00:05:43,750 --> 00:05:44,110
Okay.

74
00:05:44,500 --> 00:05:45,580
So here's what we can do.

75
00:05:46,340 --> 00:05:51,550
First, we find the user of each user find by D and update.

76
00:05:51,580 --> 00:05:54,430
Or we get the logged in new society.

77
00:06:06,300 --> 00:06:11,580
So we friend the user by adding because this push create function.

78
00:06:11,580 --> 00:06:13,950
Let me just quickly go to the world.

79
00:06:15,420 --> 00:06:16,050
Post.

80
00:06:16,900 --> 00:06:18,170
Create boost to.

81
00:06:18,170 --> 00:06:22,390
We have the requests and so obviously we get the user idea.

82
00:06:24,820 --> 00:06:36,250
So we find the user vicinity and we want to use this newly created post IED to this user's posts.

83
00:06:37,690 --> 00:06:39,700
So for that, we can use this property.

84
00:06:39,700 --> 00:06:40,920
We could use PWS.

85
00:06:42,220 --> 00:06:43,430
This is a special property.

86
00:06:43,450 --> 00:06:45,700
We could use that bot post.

87
00:06:45,700 --> 00:06:46,030
We'll

88
00:06:48,730 --> 00:06:53,440
post the duplicate IDs as well, which use it, which is not something we have to worry here.

89
00:06:53,830 --> 00:06:58,250
However, let's use another property called ADD to set out.

90
00:06:58,390 --> 00:07:04,780
The beauty of this special function is that it will not save any duplicate IDs.

91
00:07:04,990 --> 00:07:05,200
All right.

92
00:07:05,200 --> 00:07:07,720
So let's use add to set instead of post.

93
00:07:09,400 --> 00:07:15,330
So here we want to post to the posts array.

94
00:07:15,640 --> 00:07:21,490
And what we want to use is the idea of the post that is just created.

95
00:07:24,370 --> 00:07:25,990
Okay, so that's on the net.

96
00:07:26,020 --> 00:07:34,530
Now it's time a new post is created that will be also pushed to the user's post re in the database.

97
00:07:34,540 --> 00:07:39,880
So that means we can easily get on the post of that user.

98
00:07:40,780 --> 00:07:43,270
We will know how many post the users have.

99
00:07:43,540 --> 00:07:43,840
All right.

100
00:07:43,840 --> 00:07:44,860
So that's this view.

101
00:07:47,170 --> 00:07:48,490
I guess with that tense.

102
00:07:50,200 --> 00:07:53,890
Let's go back to our index space here and here.

103
00:07:53,890 --> 00:07:58,240
We should be able to show the list of just how many ports for use this has now.

104
00:07:58,390 --> 00:08:04,000
But that do work, obviously, we have to start creating from now on because previously we didn't have

105
00:08:04,000 --> 00:08:04,690
this record.

106
00:08:05,570 --> 00:08:06,530
All right, so let me.

107
00:08:09,270 --> 00:08:09,850
We sign on.

108
00:08:12,170 --> 00:08:16,940
Counterfeit properties of known and many uses index 58.

109
00:08:18,390 --> 00:08:21,030
I mean, uses index 58.

110
00:08:24,320 --> 00:08:24,710
Okay.

111
00:08:25,160 --> 00:08:26,390
So what do we need to do here?

112
00:08:27,660 --> 00:08:35,210
If it's always good to use this syntax, if we have auth, then we execute it.

113
00:08:35,270 --> 00:08:37,100
If we have a user, then we say.

114
00:08:40,140 --> 00:08:40,440
Okay.

115
00:08:42,390 --> 00:08:42,780
All right.

116
00:08:42,780 --> 00:08:44,220
So let me ask Logan.

117
00:08:44,220 --> 00:08:44,790
That's awesome.

118
00:08:58,260 --> 00:09:05,910
Juan Gonzalez I think we have this year or maybe two capture later on not.

119
00:09:08,240 --> 00:09:08,480
Okay.

120
00:09:08,480 --> 00:09:13,250
So I just had a look at my server console and noticed that there is an error.

121
00:09:13,790 --> 00:09:18,080
So let's fix this one object that is not defined in the user model.

122
00:09:18,750 --> 00:09:19,580
So let's go.

123
00:09:27,090 --> 00:09:27,270
Oh.

124
00:09:27,780 --> 00:09:29,640
Can't really see what he's.

125
00:09:30,730 --> 00:09:42,010
Using modern object I.D. so we have to distract something to seconds object 80 from schema dot types.

126
00:09:45,980 --> 00:09:46,370
Okay.

127
00:09:46,820 --> 00:09:47,240
Beautiful.

128
00:09:48,260 --> 00:09:49,100
Now let's try.

129
00:09:49,160 --> 00:09:50,900
These hues actually exist.

130
00:09:51,860 --> 00:09:52,340
Beautiful.

131
00:09:53,870 --> 00:09:55,490
Now, this user doesn't have any post.

132
00:09:55,490 --> 00:09:58,910
Let's create a few posts.

133
00:10:09,800 --> 00:10:14,990
I mean, just copy some dummy text from here and just copy that.

134
00:10:27,030 --> 00:10:27,940
Turkey taken?

135
00:10:27,940 --> 00:10:28,290
No.

136
00:10:37,400 --> 00:10:39,050
So we've got issues here.

137
00:10:41,160 --> 00:10:42,480
Users are different now.

138
00:10:42,720 --> 00:10:44,130
So users learn to find.

139
00:10:46,640 --> 00:10:48,560
That must be in our control.

140
00:10:49,310 --> 00:10:49,810
All right.

141
00:10:49,850 --> 00:10:50,810
It's important that.

142
00:10:58,730 --> 00:10:59,120
Beautiful.

143
00:11:00,680 --> 00:11:01,310
Let's try.

144
00:11:03,710 --> 00:11:04,640
Title is taken.

145
00:11:10,120 --> 00:11:10,690
All right.

146
00:11:13,140 --> 00:11:15,660
So we got bigger issues as three posts.

147
00:11:15,660 --> 00:11:16,890
Let me sign out.

148
00:11:17,580 --> 00:11:19,110
Let me sign in as an admin.

149
00:11:20,670 --> 00:11:23,640
Admins will also create one to create one.

150
00:11:36,150 --> 00:11:36,480
All right.

151
00:11:36,840 --> 00:11:37,620
I can see here.

152
00:11:40,060 --> 00:11:41,200
Go to our users.

153
00:11:41,920 --> 00:11:47,140
And you see here I have created one since we have made the to do list.

154
00:11:47,260 --> 00:11:50,410
Previously I created many, but here you can tell I created one.

155
00:11:50,770 --> 00:11:53,260
And that user, Ryan Arthur, created one.

156
00:11:55,090 --> 00:11:55,210
All right.

157
00:11:55,270 --> 00:11:59,260
So we had some issues in the the database at that time.

158
00:11:59,260 --> 00:12:00,790
I think it wasn't executed.

159
00:12:00,790 --> 00:12:02,170
So you can see one and one.

160
00:12:02,420 --> 00:12:04,030
So let's try one more time.

161
00:12:04,030 --> 00:12:11,200
Let's see one more and create one and let's make sure it works.

162
00:12:15,770 --> 00:12:18,250
So I have credit to push so far this year and heavily.

163
00:12:20,070 --> 00:12:22,060
You can see I had to post before.

164
00:12:23,490 --> 00:12:30,510
So this is how you have been able to saw the users, the email there, all the post number posts.

165
00:12:30,900 --> 00:12:36,480
And you can begin to implement, edit and delete in the coming video.
