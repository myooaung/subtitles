WEBVTT
1
00:00:00.270 --> 00:00:07.050
All right so we have and design we imported the thesis says well so let's give it a try let's try one

2
00:00:07.050 --> 00:00:09.180
of the components it offers.

3
00:00:09.570 --> 00:00:16.530
So for example, bottom component, let's give it a try and you can see that net and designs documentation

4
00:00:16.530 --> 00:00:17.670
is absolutely amazing.

5
00:00:17.760 --> 00:00:24.090
You can see plenty of examples here in the now you'll see the source code right underneath the examples.

6
00:00:24.090 --> 00:00:31.770
For example, you can see these buttons and if you want to see what code is used to generate this buttons,

7
00:00:31.780 --> 00:00:38.130
you can click here show code and you can see here, one, two, three, four, five buttons.

8
00:00:38.490 --> 00:00:40.680
One, two, three, four, five.

9
00:00:40.680 --> 00:00:43.740
So all these buttons are created differently using this.

10
00:00:43.740 --> 00:00:48.900
Now you can see this looks blue because that uses the type primary.

11
00:00:49.530 --> 00:00:55.020
This one looks plain because it doesn't use that type and another one is type and dest.

12
00:00:55.260 --> 00:00:58.260
So you can see that's how these buttons are different.

13
00:00:58.650 --> 00:01:00.540
So that's how you can create.

14
00:01:02.500 --> 00:01:06.640
This button components and with different styling.

15
00:01:07.690 --> 00:01:08.800
So let's give it a try.

16
00:01:10.720 --> 00:01:12.580
Let's get out of here.

17
00:01:12.580 --> 00:01:13.720
Let's get out of here.

18
00:01:13.730 --> 00:01:19.720
Let's go to the business index and let's give it a try.

19
00:01:20.440 --> 00:01:27.370
So to start using the button component from end design, you can just import that first.

20
00:01:27.850 --> 00:01:36.400
So import and you want to distribute button front end.

21
00:01:37.710 --> 00:01:38.020
Okay.

22
00:01:38.350 --> 00:01:42.460
So the reason we have to restructure is this end design.

23
00:01:44.140 --> 00:01:46.210
It offers many of these components.

24
00:01:46.210 --> 00:01:54.220
So if they didn't export defaults like this, then we have to destructor.

25
00:01:54.250 --> 00:02:02.260
If they would have exported like this default export, then we could import without the curly brace

26
00:02:03.220 --> 00:02:04.230
like that get.

27
00:02:04.270 --> 00:02:08.170
So that's how we could import however they have.

28
00:02:09.320 --> 00:02:11.300
Export in more than one file.

29
00:02:11.900 --> 00:02:15.530
More than one functions like this from a single file.

30
00:02:15.860 --> 00:02:19.550
So in that case, they didn't use different export, right?

31
00:02:19.730 --> 00:02:27.470
So in that case, we have to destruction because more than one, for instance, one component has been

32
00:02:27.470 --> 00:02:29.180
exported from a single file.

33
00:02:29.240 --> 00:02:35.990
In that case, we have two destructor lengths and this would have the example here as well as if you

34
00:02:35.990 --> 00:02:38.960
have a look, you can see here they have destruction.

35
00:02:39.930 --> 00:02:48.960
And so we import this button component by restructuring and then we should be able to use here.

36
00:02:48.990 --> 00:02:54.630
So let me just try button and you can see how to use this component.

37
00:02:55.110 --> 00:02:57.960
So you basically give it a name, use some type.

38
00:02:59.500 --> 00:03:00.170
Let's see.

39
00:03:02.260 --> 00:03:02.860
Click me.

40
00:03:04.040 --> 00:03:06.940
And it's just let's sit and have a look here.

41
00:03:08.510 --> 00:03:11.000
And we have this beautiful button that you can see here.

42
00:03:12.380 --> 00:03:12.880
Amazing.

43
00:03:13.700 --> 00:03:14.180
If I.

44
00:03:15.030 --> 00:03:16.200
Give it time.

45
00:03:18.330 --> 00:03:18.990
Primary.

46
00:03:21.220 --> 00:03:22.780
You see, the bottle looks different.

47
00:03:23.710 --> 00:03:26.130
I guess it looks from the blue.

48
00:03:26.140 --> 00:03:27.850
That's the primary type.

49
00:03:28.850 --> 00:03:29.620
I said this.

50
00:03:29.620 --> 00:03:37.000
This is how you can easily use these beautiful components provided by and designed to quickly build

51
00:03:37.000 --> 00:03:39.490
the UI of the case.

52
00:03:40.540 --> 00:03:40.930
Now.

53
00:03:42.190 --> 00:03:46.030
We usually will be using lots and lots of these components later.

54
00:03:46.570 --> 00:03:58.500
But the next thing I would like to implement is this a theme feature dark theme and light theme.

55
00:03:59.140 --> 00:03:59.430
All right.

56
00:03:59.680 --> 00:04:04.630
So this uses a slightly complex topic called context.

57
00:04:05.410 --> 00:04:11.080
So there is a local state in it's in every component in it.

58
00:04:11.320 --> 00:04:12.760
It's an every component.

59
00:04:12.880 --> 00:04:17.290
We can have a local state or we can have a global state.

60
00:04:17.710 --> 00:04:23.060
So local state will be accessible within this component, obviously.

61
00:04:23.170 --> 00:04:29.530
Now, if you're new to state, state basically means you store some values, right, sister?

62
00:04:29.530 --> 00:04:30.280
Some values.

63
00:04:31.270 --> 00:04:37.390
And you have a function to update that very, very simple thing of a situation where you have a form

64
00:04:37.960 --> 00:04:40.480
where a user can enter the email password.

65
00:04:40.630 --> 00:04:43.630
So when they enter the email and password, where do you want to sit?

66
00:04:43.660 --> 00:04:45.910
You need some kind of a store, right?

67
00:04:46.180 --> 00:04:48.370
So that's where the state comes in.

68
00:04:48.460 --> 00:04:55.900
So you put that value in the state and then as soon as a user type something in those changes, also

69
00:04:55.900 --> 00:04:59.620
you put in the state by updating the state.

70
00:05:00.100 --> 00:05:02.650
So that's how the state works, obviously will be.

71
00:05:04.680 --> 00:05:10.950
Going through so many estates, we'll be having so many stitched in these components.

72
00:05:11.460 --> 00:05:13.740
But global sorted is one step.

73
00:05:14.040 --> 00:05:20.250
Global state is not just within one component, but will be available for the entire application.

74
00:05:20.700 --> 00:05:25.950
Whether you are in the home biz, admin space, whatever, doesn't matter, you should be able to access.

75
00:05:26.100 --> 00:05:33.120
Okay, so we will use that global context to implement this theme.

76
00:05:34.300 --> 00:05:39.880
And we may want to know which theme we are using in some other places as well.

77
00:05:39.940 --> 00:05:46.180
Sometimes based on theme, if we are using dark theme, you may need to change the text column.

78
00:05:46.540 --> 00:05:48.250
If we are using light theme.

79
00:05:48.700 --> 00:05:49.720
You may need to.

80
00:05:52.610 --> 00:05:56.410
Turns the next corner to in a situation like that.

81
00:05:56.420 --> 00:06:00.500
Also, you should be able to access the thing.

82
00:06:00.590 --> 00:06:07.340
So that is something you should have access globally on any basis, any component.

83
00:06:07.440 --> 00:06:07.680
All right.

84
00:06:07.700 --> 00:06:11.720
So for that reason, we'll be using global context to.

85
00:06:13.490 --> 00:06:19.670
Implement this theme suite feature and then we going to work on the navigation.
