WEBVTT
1
00:00:00.850 --> 00:00:01.060
Ah.

2
00:00:01.440 --> 00:00:04.920
So the next thing we want to do is work on edit and delete.

3
00:00:04.980 --> 00:00:10.800
All right, so let's work on delete first a little bit more easier and then we welcome the editors rule.

4
00:00:10.850 --> 00:00:13.740
So for edit, let me show you the finished project.

5
00:00:15.000 --> 00:00:17.070
So for delete, it's quite straightforward.

6
00:00:17.460 --> 00:00:24.990
We created the endpoint in the back end and then we make a request, send the the category I.D. and

7
00:00:24.990 --> 00:00:28.290
we will find the category about 18 delete in the database.

8
00:00:28.290 --> 00:00:30.780
So that's done for edit.

9
00:00:31.940 --> 00:00:34.700
We hope we can use something like this so we can use a model.

10
00:00:35.210 --> 00:00:41.180
We could take the user to a separate page as well, but that's not necessary.

11
00:00:41.180 --> 00:00:42.800
So we're going to implement like this.

12
00:00:42.800 --> 00:00:51.950
So we show this currently clicked category in the model and then user can just make some changes

13
00:00:54.890 --> 00:00:57.650
in content and that will immediately object.

14
00:00:58.340 --> 00:01:00.290
All right, so that's what we're trying to achieve.

15
00:01:00.650 --> 00:01:02.550
Now let's work on the delete first.

16
00:01:03.710 --> 00:01:06.010
So let me head over to the back end.

17
00:01:07.980 --> 00:01:09.960
Create a road for delete.

18
00:01:12.100 --> 00:01:12.690
See here.

19
00:01:13.390 --> 00:01:15.640
Don't do it.

20
00:01:16.870 --> 00:01:19.090
So this is going to be a delayed request.

21
00:01:19.090 --> 00:01:21.610
So they did something called delete.

22
00:01:22.360 --> 00:01:27.100
We can use that to get post delete and for update.

23
00:01:27.100 --> 00:01:34.000
We need to use a put method after order delete to delete a category.

24
00:01:34.810 --> 00:01:37.480
We need to send the category ID.

25
00:01:38.200 --> 00:01:38.470
Right.

26
00:01:38.920 --> 00:01:40.030
So you can send the ID.

27
00:01:40.100 --> 00:01:41.260
You can send the slug.

28
00:01:41.410 --> 00:01:44.470
We have the slug as well for each category which is unique.

29
00:01:44.710 --> 00:01:46.110
So we can use that as well.

30
00:01:47.270 --> 00:01:47.510
Okay.

31
00:01:47.510 --> 00:01:55.010
So any parameters you will be sending in the round, you can grab that dynamic value using this column

32
00:01:55.370 --> 00:01:56.120
and the name.

33
00:01:56.180 --> 00:01:58.940
So whatever name you can give, it doesn't have to be a slug.

34
00:01:59.330 --> 00:02:02.450
It can be anything but whatever name you use here.

35
00:02:02.870 --> 00:02:09.330
The same name you have to use in your control function to access that value from the root params.

36
00:02:10.160 --> 00:02:10.410
Okay.

37
00:02:10.970 --> 00:02:12.140
So category slug.

38
00:02:13.550 --> 00:02:18.650
To delete the user must be logged in and user must be admin.

39
00:02:19.070 --> 00:02:19.850
So that's perfect.

40
00:02:20.750 --> 00:02:27.620
And we can call it a remove remove category.

41
00:02:30.030 --> 00:02:32.550
I guess it is around dysfunction.

42
00:02:34.620 --> 00:02:35.640
In our control

43
00:02:38.340 --> 00:02:39.480
remove category.

44
00:02:40.500 --> 00:02:45.520
It's good to control this category and this spread that.

45
00:02:48.370 --> 00:02:53.350
Export funds remove category to async.

46
00:02:55.690 --> 00:02:56.470
So we try.

47
00:02:58.510 --> 00:02:58.930
Okay.

48
00:02:58.930 --> 00:02:59.890
So let me just.

49
00:03:01.980 --> 00:03:03.930
Use this term land help.

50
00:03:04.320 --> 00:03:06.540
But I'm going to explain what's happening here.

51
00:03:06.780 --> 00:03:14.910
So we destruct a slug from the request for and so it is here and you can see any name you give in the

52
00:03:14.910 --> 00:03:17.570
route that will be accessible as a request.

53
00:03:17.580 --> 00:03:20.520
Params, I guess you could call it idea as well.

54
00:03:20.760 --> 00:03:25.880
So if you called it already, then you would be able to access that as I think.

55
00:03:25.940 --> 00:03:30.270
So whatever name you used in the road, make sure to use the same name in the control.

56
00:03:31.310 --> 00:03:37.190
So you we destock to that value from the request forms and then we tried to find the category from the

57
00:03:37.190 --> 00:03:37.700
database.

58
00:03:38.180 --> 00:03:44.880
So await category and this category model, we can use this function, find one and delete.

59
00:03:44.910 --> 00:03:50.570
So this is a function you can use with Mungo's find one and delete.

60
00:03:51.050 --> 00:03:56.620
So you want to find one by the named slug so you don't have to do this.

61
00:03:56.630 --> 00:03:58.880
It's in the key value of essentially just leave it.

62
00:04:00.050 --> 00:04:04.670
So find one and delete based on the slug.

63
00:04:04.970 --> 00:04:05.300
All right.

64
00:04:05.660 --> 00:04:09.860
And then you can send the deleted category.

65
00:04:11.060 --> 00:04:13.520
To your client.

66
00:04:14.000 --> 00:04:14.180
Right.

67
00:04:14.210 --> 00:04:17.180
So the benefit of this one, you going to send okay.

68
00:04:17.190 --> 00:04:17.600
To.

69
00:04:18.020 --> 00:04:25.280
But if you send the deleted category, then we can remove that particular category from this list and

70
00:04:25.280 --> 00:04:27.790
then update the UI immediately.

71
00:04:28.220 --> 00:04:29.240
I guess that's the beauty.

72
00:04:29.250 --> 00:04:32.990
So we can send the deleted category as a response.

73
00:04:33.350 --> 00:04:36.830
So that is all we need to remove the category.

74
00:04:39.590 --> 00:04:39.880
No.

75
00:04:40.250 --> 00:04:41.240
Let's go.

76
00:04:42.730 --> 00:04:49.270
To all categories is here in the front end and implement the delete.

77
00:04:51.590 --> 00:04:54.920
Now you said we got those links, edit and delete.

78
00:04:54.920 --> 00:04:58.820
So let's work on the edit first and click.

79
00:05:01.500 --> 00:05:05.160
I think you want to execute a function, so you add a function.

80
00:05:06.180 --> 00:05:08.670
Otherwise the court will continuously execute.

81
00:05:08.670 --> 00:05:10.650
And that is not something where you want it, right?

82
00:05:10.980 --> 00:05:13.050
So arrow function and click.

83
00:05:13.050 --> 00:05:16.950
You want to execute a function, let's call it handle.

84
00:05:19.340 --> 00:05:20.240
Andrew Tillett.

85
00:05:21.040 --> 00:05:27.310
You give the item, I guess whichever item you're trying to do, do you give them?

86
00:05:28.510 --> 00:05:36.070
Because in this function, we need to access the items slowly and we need to send that in the back in

87
00:05:37.420 --> 00:05:37.910
this way.

88
00:05:37.930 --> 00:05:43.340
So categories less, the items slow, we will be sending it.

89
00:05:47.620 --> 00:05:49.390
I got to handle that for them.

90
00:05:49.390 --> 00:05:49.720
This one.

91
00:05:56.000 --> 00:06:02.200
Const Andrew delete in Stuart async time.

92
00:06:05.280 --> 00:06:07.020
So here we try.

93
00:06:12.210 --> 00:06:17.410
Cats in control long the.

94
00:06:18.890 --> 00:06:20.640
And let me actually just.

95
00:06:21.050 --> 00:06:23.180
Okay, so we're using the toast notifications.

96
00:06:23.190 --> 00:06:23.840
That's nice.

97
00:06:26.600 --> 00:06:28.400
So if there is an error, we can.

98
00:06:28.400 --> 00:06:28.790
So.

99
00:06:29.720 --> 00:06:32.360
The toast notification as well.

100
00:06:32.820 --> 00:06:33.410
Toasted

101
00:06:36.920 --> 00:06:39.230
category delete failed.

102
00:06:39.460 --> 00:06:39.640
So.

103
00:06:39.870 --> 00:06:42.260
So that otherwise.

104
00:06:43.220 --> 00:06:53.120
Can you use excuse to pronounce data equals to await access to delete we make a delete request the endpoint

105
00:06:53.510 --> 00:06:54.760
let's use back ticks.

106
00:06:55.430 --> 00:06:57.440
So category is less.

107
00:07:00.520 --> 00:07:01.720
Delete Slim double.

108
00:07:01.720 --> 00:07:06.100
Take the right category and we have to send this log.

109
00:07:07.700 --> 00:07:10.300
So we can get the slug using item.

110
00:07:10.340 --> 00:07:11.420
Don't slug.

111
00:07:12.900 --> 00:07:13.210
That's it.

112
00:07:13.250 --> 00:07:21.710
That's how we can make a deal request send this dynamic value in the right params and here we get the

113
00:07:21.710 --> 00:07:23.990
deleted category.

114
00:07:24.890 --> 00:07:25.190
All right.

115
00:07:25.610 --> 00:07:29.840
So when you get the deleted category, what you want to do is you want to filter out.

116
00:07:30.650 --> 00:07:34.580
So this filter function takes another function as an argument against it.

117
00:07:34.580 --> 00:07:35.840
This is a error function.

118
00:07:37.980 --> 00:07:45.660
So you can see categories that filter our filter function gets access to its categories in the array,

119
00:07:46.050 --> 00:07:49.320
so it compares its categories.

120
00:07:49.320 --> 00:07:58.080
So each of them, their ID if then doesn't match with the this deleted category is 80, then all of

121
00:07:58.080 --> 00:08:04.200
them I want to filter out and set it back again as the categories.

122
00:08:04.560 --> 00:08:06.540
But the one that matters we don't want, right?

123
00:08:06.540 --> 00:08:14.280
So all the one that doesn't match, we filter out and again put them in this state using set categories.

124
00:08:15.510 --> 00:08:16.230
Now get with this.

125
00:08:16.230 --> 00:08:17.460
Now let's give it a try.

126
00:08:19.080 --> 00:08:20.940
When we delete, we should.

127
00:08:22.150 --> 00:08:24.460
See this list filter out immediately.

128
00:08:25.150 --> 00:08:28.600
So let's let's create some random category.

129
00:08:29.080 --> 00:08:30.850
Let me try to do better.

130
00:08:31.900 --> 00:08:33.880
You can see that's gone immediately.

131
00:08:34.270 --> 00:08:34.840
Beautiful.

132
00:08:35.560 --> 00:08:45.610
Now, when it is deleted, we can show some kind of full dose notification dose dot success category.

133
00:08:46.450 --> 00:08:47.680
Delete it successfully.

134
00:08:52.270 --> 00:08:52.600
All right.

135
00:08:52.930 --> 00:08:55.140
You can see we can do it.

136
00:08:56.550 --> 00:09:04.330
Maybe even though it's a success and it's just so kind of error, actually.

137
00:09:04.540 --> 00:09:05.740
Not nicely.

138
00:09:05.740 --> 00:09:06.340
You know, we should.

139
00:09:08.490 --> 00:09:09.980
Continue using it to success.

140
00:09:10.230 --> 00:09:17.220
Obviously, it might look like some kind of flicker so beautiful where you can this to lead the categories

141
00:09:17.220 --> 00:09:18.210
that we've done in it.

142
00:09:24.610 --> 00:09:25.030
Beautiful.

143
00:09:25.270 --> 00:09:29.440
So we have been able to create.

144
00:09:30.610 --> 00:09:31.510
Categories.

145
00:09:31.810 --> 00:09:32.920
Delete categories.

146
00:09:33.400 --> 00:09:35.150
So are the categories now.

147
00:09:35.170 --> 00:09:37.720
Only thing left is edit the category.
