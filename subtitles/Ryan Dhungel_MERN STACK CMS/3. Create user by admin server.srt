1
00:00:00,720 --> 00:00:04,050
All right, so let's work on this handled summit function.

2
00:00:06,150 --> 00:00:14,220
So here, when the button is clicked and the burden is click, we summit all that data which comes along

3
00:00:14,220 --> 00:00:14,820
at the moment.

4
00:00:14,820 --> 00:00:17,550
Let's it's coming down.

5
00:00:19,740 --> 00:00:21,840
So here we use the axis.

6
00:00:24,090 --> 00:00:25,770
So let's make request.

7
00:00:29,700 --> 00:00:30,300
Oh, wait.

8
00:00:30,780 --> 00:00:31,650
Excuse.

9
00:00:34,110 --> 00:00:36,450
Let's make sure to make it a async function.

10
00:00:37,960 --> 00:00:39,630
That's excuse.

11
00:00:39,630 --> 00:00:41,130
Don't post.

12
00:00:41,250 --> 00:00:48,270
So make a post request that the point is going to be we can call it create use.

13
00:00:52,420 --> 00:00:53,830
And the data we are sending.

14
00:00:55,150 --> 00:00:58,160
So all this sort of all consulates.

15
00:00:58,180 --> 00:00:58,990
Email them.

16
00:00:58,990 --> 00:01:01,170
Website passwords, role it.

17
00:01:01,480 --> 00:01:05,470
So we're sending all that and using Axios.

18
00:01:06,580 --> 00:01:10,600
And then you can console.log that if you're interested.

19
00:01:11,080 --> 00:01:14,170
We check for the error if done a dodge error.

20
00:01:14,290 --> 00:01:19,480
We want to serve that because we'll be sending the error message from the back end.

21
00:01:20,230 --> 00:01:27,520
So tostart error we can certainly enter data and if we get an error set loading defaults now if there

22
00:01:27,520 --> 00:01:30,460
is nowhere else.

23
00:01:33,420 --> 00:01:35,310
So we can show the success.

24
00:01:35,310 --> 00:01:38,130
Messi's toast success.

25
00:01:39,510 --> 00:01:41,040
User created successfully.

26
00:01:41,040 --> 00:01:44,250
We can show the misses and said lowering do false.

27
00:01:50,600 --> 00:01:50,800
Okay.

28
00:01:50,930 --> 00:01:52,580
So that is all we need to do.

29
00:01:55,160 --> 00:02:00,500
No, you if you want to, you can read the user say here.

30
00:02:03,160 --> 00:02:08,500
So once you create a user, you can redirect to all user space if you want to.

31
00:02:09,010 --> 00:02:10,930
Yeah, I'm just going to leave it like this for now.

32
00:02:12,940 --> 00:02:13,360
All right.

33
00:02:13,360 --> 00:02:21,070
So let's go ahead and create the clear user endpoint in the backend and console.log request.

34
00:02:21,070 --> 00:02:26,650
Wanted to make sure we got all this data and then if we get it, we can just save in the database.

35
00:02:27,820 --> 00:02:29,830
So that's how we're going to create a new user.

36
00:02:30,550 --> 00:02:30,790
All right.

37
00:02:30,790 --> 00:02:33,880
So let's go to so.

38
00:02:36,340 --> 00:02:37,590
The roots are.

39
00:02:39,790 --> 00:02:43,120
So this could this endpoint create?

40
00:02:45,090 --> 00:02:51,540
With youths surrounding how to boost.

41
00:02:56,000 --> 00:03:05,690
Create user, so request and must the admin and we use this function quit user which we can import from

42
00:03:07,340 --> 00:03:08,900
the school to the controller.

43
00:03:10,850 --> 00:03:22,460
It's right as export concepts create user equals to async the request response.

44
00:03:42,020 --> 00:03:42,170
So.

45
00:03:42,170 --> 00:03:42,330
Yeah.

46
00:03:42,350 --> 00:03:43,100
What do you want to do?

47
00:03:44,360 --> 00:03:47,530
To clearly user first let's make sure we got under our control.

48
00:03:47,540 --> 00:03:50,480
Law requires born.

49
00:03:53,590 --> 00:03:54,910
It just doesn't seem.

50
00:04:06,440 --> 00:04:07,650
So we got on the data.

51
00:04:07,660 --> 00:04:08,200
That's great.

52
00:04:08,220 --> 00:04:11,460
Now let's continue here with some of that.

53
00:04:11,850 --> 00:04:18,960
So first, we want to make sure that we received all those fields to a name, email, password.

54
00:04:19,140 --> 00:04:24,600
So we want to make sure we have received all of them so we can do some kind of for take here.

55
00:04:25,170 --> 00:04:30,660
And then if we if if we didn't get those fields, then we can send the error message, right?

56
00:04:31,170 --> 00:04:38,790
So if first of all, let's destock through these values from the request board is a name, email, password,

57
00:04:39,360 --> 00:04:48,270
a rule to get from request party and then we take if there is no name.

58
00:04:49,470 --> 00:04:54,990
If we didn't get the name, then we want to send the error message.

59
00:04:54,990 --> 00:04:59,250
So response and Jason error name is required.

60
00:05:00,220 --> 00:05:06,030
Okay, so that's for the name then just copy this one down here.

61
00:05:06,540 --> 00:05:13,320
Now if there is no email, then we send this message.

62
00:05:13,920 --> 00:05:15,210
Email is required.

63
00:05:17,740 --> 00:05:22,360
Now, if you want to verify the email, there are some NPM packages you can use.

64
00:05:22,360 --> 00:05:27,830
Let me quickly show you one NPM email validate.

65
00:05:27,880 --> 00:05:29,900
So this one you can use.

66
00:05:29,920 --> 00:05:31,930
You can even use it in the client side.

67
00:05:36,540 --> 00:05:36,810
Okay.

68
00:05:37,380 --> 00:05:44,370
So you import that and then you just use dot validated function and give the user inputs or whatever

69
00:05:44,370 --> 00:05:48,780
email has been injured and it will take for the email from it.

70
00:05:49,410 --> 00:05:51,800
And if it is very limited, you didn't.

71
00:05:52,710 --> 00:05:55,770
This is optionally, if you interested, you can always take that out.

72
00:05:56,970 --> 00:06:02,490
So we have the net take for the name, take for the email that's based one more time.

73
00:06:02,970 --> 00:06:05,700
And then here we can take for a password.

74
00:06:07,440 --> 00:06:11,870
Password first we make sure we have the password name.

75
00:06:11,880 --> 00:06:15,780
If we have, we want to make sure it is at least six characters long.

76
00:06:18,120 --> 00:06:29,580
So if password or password length is smaller than six, then we have to send our Mrs. password is required

77
00:06:29,580 --> 00:06:31,620
and should be six characters long.

78
00:06:33,510 --> 00:06:36,210
I guess we have the look for name, email and password.

79
00:06:36,420 --> 00:06:47,760
Next one we want to take if use exists because you may want to create a new user flexibility a new user

80
00:06:47,760 --> 00:06:52,620
with the email of Ryan at email dot com and but maybe that user.

81
00:06:52,980 --> 00:06:56,580
Ryan at email dot com is already in your database.

82
00:06:57,330 --> 00:07:04,140
You know, in that case you cannot duplicate user you know, so your email has to be always unique.

83
00:07:04,140 --> 00:07:13,770
So we can take we can use the user model, find one to try to find the user based on the email from

84
00:07:13,770 --> 00:07:14,370
the database.

85
00:07:15,780 --> 00:07:18,600
And we put that value in this exist this variable.

86
00:07:19,080 --> 00:07:27,570
So if it has value, so if exist, then we have to send some kind of error message to the user because

87
00:07:27,570 --> 00:07:31,680
the email user with that email is under the existing right.

88
00:07:31,680 --> 00:07:34,830
So in that case, we can send the error message.

89
00:07:36,240 --> 00:07:37,690
Yeah, that's it.

90
00:07:37,710 --> 00:07:39,240
Email is taken.

91
00:07:42,810 --> 00:07:44,100
Now if.

92
00:07:45,140 --> 00:07:46,020
So far so good.

93
00:07:46,040 --> 00:07:54,220
If all the ticks have been passed, then that means we can clearly use it right now when we try to what

94
00:07:54,230 --> 00:07:54,980
we need to.

95
00:07:58,100 --> 00:08:01,400
We're going to save all this information, name, e-mail, password, everything.

96
00:08:01,850 --> 00:08:05,140
Now, when we said the password, we need to has the password, right.

97
00:08:05,150 --> 00:08:07,130
So we don't set the password.

98
00:08:07,550 --> 00:08:15,860
So to has the password we can use the has password function which we import from the helpers and we

99
00:08:15,860 --> 00:08:17,060
already used in the.

100
00:08:19,000 --> 00:08:24,520
Sign in and sign a process you can see has password it has been imported from.

101
00:08:25,770 --> 00:08:29,280
To help us find here if you want to help out here.

102
00:08:29,910 --> 00:08:34,230
So this function will has the password and this one compared the bus.

103
00:08:35,550 --> 00:08:36,900
Okay, so let's continue down here.

104
00:08:39,220 --> 00:08:47,230
That's possible that if so that's possible we used that function to has the password

105
00:08:51,250 --> 00:08:55,270
contest password host equals to.

106
00:08:56,620 --> 00:09:02,260
Has password, we use that function and then we pass the blend password that we're getting in the request

107
00:09:02,260 --> 00:09:06,040
body and that will give us the result which will be asked.

108
00:09:06,040 --> 00:09:09,160
And that is what we get here in this variable.

109
00:09:10,270 --> 00:09:10,600
All right.

110
00:09:10,720 --> 00:09:14,140
So once it has the password, we can finally go ahead and recruit a user.

111
00:09:14,590 --> 00:09:16,270
We try to create a.

112
00:09:33,820 --> 00:09:38,680
So here what we want to do is we want to clear the users.

113
00:09:38,680 --> 00:09:47,470
So we to new user create a new instance of user and actually we can use that saved to save the user.

114
00:09:47,680 --> 00:09:55,030
Now here we have to give all the values that we are going to use while saving the user.

115
00:09:55,150 --> 00:09:57,970
So we have to use limit the use.

116
00:09:58,930 --> 00:10:02,140
You mean we're going to use password?

117
00:10:02,320 --> 00:10:04,600
A password is going to be best password.

118
00:10:06,080 --> 00:10:07,710
Last, but certainly to guard here.

119
00:10:08,550 --> 00:10:09,990
Are we going to use the rule?

120
00:10:11,040 --> 00:10:13,570
No ticket is not for saving in the database.

121
00:10:13,590 --> 00:10:21,210
This is to take if it doesn't click so if the text is true, then we need to send the email as well.

122
00:10:21,840 --> 00:10:22,110
Right.

123
00:10:22,110 --> 00:10:24,300
So we going to work on this a bit later.

124
00:10:24,420 --> 00:10:27,330
It's legal, so we save the role.

125
00:10:30,990 --> 00:10:34,310
And we also have one more field called website.

126
00:10:34,410 --> 00:10:34,630
Right.

127
00:10:34,640 --> 00:10:38,190
It's a website I think we don't have in our schema.

128
00:10:39,600 --> 00:10:40,980
So let's fix that.

129
00:10:41,160 --> 00:10:42,100
And it's a good model.

130
00:10:42,100 --> 00:10:50,400
So user name and password, tool or image, so we don't have the website if we want to save again and

131
00:10:51,360 --> 00:10:54,810
site type of street.

132
00:11:03,840 --> 00:11:04,140
All right.

133
00:11:05,370 --> 00:11:08,130
So once you add that, you'll be able to save in the database.

134
00:11:08,790 --> 00:11:13,120
So if there's a website, we said, that's.

135
00:11:15,900 --> 00:11:16,290
Awesome.

136
00:11:18,930 --> 00:11:23,340
Now, once we save the user, if the.

137
00:11:26,710 --> 00:11:33,770
Then you want to send send email with login details, right?

138
00:11:33,790 --> 00:11:41,620
So if text is true then you want to send the email to redeem to send the emails here will come back

139
00:11:41,620 --> 00:11:42,010
to that.

140
00:11:42,010 --> 00:11:42,220
Right.

141
00:11:42,220 --> 00:11:45,520
So let me just write here for my if said.

142
00:11:48,200 --> 00:11:50,810
We'll send an email to we'll come back to this one.

143
00:11:51,170 --> 00:11:56,240
But otherwise, we can send the response now because the user has been created.

144
00:11:56,510 --> 00:11:56,710
Right.

145
00:11:56,720 --> 00:12:02,800
So when you send the response, you don't want to send the password, but you can send everything else.

146
00:12:02,810 --> 00:12:13,160
So let's use the rest of the console password and then the rest of it destructor password and the rest

147
00:12:13,160 --> 00:12:16,970
of the values from user don't on script go.

148
00:12:19,720 --> 00:12:20,050
All right.

149
00:12:21,100 --> 00:12:29,050
So in this case, we send the response, Jason, and that's going to be rest.

150
00:12:30,280 --> 00:12:32,800
So the user has been created.

151
00:12:32,800 --> 00:12:42,160
We are sending that created user as a response except possibly, I guess be sending the rest and that

152
00:12:42,160 --> 00:12:42,780
is it.

153
00:12:42,800 --> 00:12:52,360
So this is a function that Will said the user acquired a user with all this validation and only thing

154
00:12:52,360 --> 00:12:54,130
left here is to send the email.

155
00:12:54,190 --> 00:12:55,770
Now we will take that out.

156
00:12:55,780 --> 00:12:57,330
We can give that a try.

157
00:12:57,340 --> 00:13:00,890
But before we do that, let's actually give it a try.

158
00:13:00,910 --> 00:13:02,500
Let's try creating a new user.

159
00:13:06,580 --> 00:13:10,190
First, really try creating a user that already exists.

160
00:13:10,240 --> 00:13:12,060
Let's see how we get there.

161
00:13:12,070 --> 00:13:12,540
Mrs..

162
00:13:26,190 --> 00:13:26,850
Passport.

163
00:13:27,540 --> 00:13:28,140
It's.

164
00:13:30,640 --> 00:13:33,860
If we just keep playing baseball.

165
00:13:35,450 --> 00:13:36,930
Let's not worry about this one.

166
00:13:36,950 --> 00:13:43,420
Let's make this also and let's submit images taken so you can see we have the validation.

167
00:13:43,430 --> 00:13:47,420
So let's run the fourth.

168
00:13:49,520 --> 00:13:54,320
I actually want to use a valid email address so that we can.

169
00:13:54,320 --> 00:13:54,860
I can.

170
00:13:57,110 --> 00:14:00,320
See how the email is sent to Ryan.

171
00:14:01,040 --> 00:14:02,240
Let's use ma'am.

172
00:14:02,240 --> 00:14:03,170
See Ms..

173
00:14:05,110 --> 00:14:05,500
Okay.

174
00:14:08,510 --> 00:14:12,110
To me, make him author and submit.

175
00:14:14,330 --> 00:14:14,960
Oh, really?

176
00:14:14,990 --> 00:14:16,130
That was a stigma.

177
00:14:18,220 --> 00:14:20,320
Let me just try one then.

178
00:14:24,780 --> 00:14:28,260
I think in the front end we still haven't.

179
00:14:29,620 --> 00:14:30,490
Actually we have.

180
00:14:35,270 --> 00:14:36,320
Controllers.

181
00:14:40,350 --> 00:14:41,370
Let's console.log.

182
00:14:41,370 --> 00:14:42,930
Let's see what we got.

183
00:14:43,560 --> 00:14:46,050
This website is no different out of this thing.

184
00:14:46,860 --> 00:14:48,930
So we can destock to offset as earlier.

185
00:14:55,910 --> 00:14:56,270
Okay.

186
00:14:56,810 --> 00:14:57,890
And let's try.

187
00:15:02,040 --> 00:15:02,760
Let's try again.

188
00:15:04,170 --> 00:15:06,390
He's a creative, successful, beautiful.

189
00:15:11,220 --> 00:15:14,750
I think once users do we may want to redo it all you.

190
00:15:14,880 --> 00:15:16,200
So I think that makes more sense.

191
00:15:16,530 --> 00:15:19,900
But anyways, let's have a look here in the database.

192
00:15:19,920 --> 00:15:22,950
Let's say I'm going to use.

193
00:15:28,210 --> 00:15:31,950
We have to go to the very end and begin to Mancini this one.

194
00:15:31,960 --> 00:15:34,450
So the user has been created as the website.

195
00:15:34,960 --> 00:15:37,000
The root is also beautiful.

196
00:15:37,930 --> 00:15:38,320
Awesome.

197
00:15:39,670 --> 00:15:45,130
Now in the next video we can try sending an email as well.

198
00:15:45,130 --> 00:15:47,040
So we'll see how that works.
