WEBVTT
1
00:00:00.420 --> 00:00:00.750
All right.

2
00:00:00.750 --> 00:00:04.230
So now we're going to learn about context hook.

3
00:00:04.560 --> 00:00:07.050
I guess it's a fairly advanced topic, however.

4
00:00:07.410 --> 00:00:13.530
We have a perfect situation where we can use this use context hook to create a global state.

5
00:00:13.770 --> 00:00:14.040
All right.

6
00:00:14.270 --> 00:00:15.420
So we're going to give it a try.

7
00:00:16.410 --> 00:00:20.820
So when we say hooks in React, the hooks are basically their functions.

8
00:00:21.330 --> 00:00:26.190
And you'll be able to use many hooks to add certain features to your components.

9
00:00:26.730 --> 00:00:28.560
So here we have a very simple component.

10
00:00:28.920 --> 00:00:29.700
But let's see.

11
00:00:30.060 --> 00:00:35.430
We may have a form where user can enter the name, email, password, things like that.

12
00:00:35.700 --> 00:00:40.470
So when they enter those information, we would need a place to put those information right.

13
00:00:40.710 --> 00:00:50.880
So if user enter the name, we need some kind of a state where we can store that user input like name

14
00:00:51.060 --> 00:00:54.390
for example, something like this const.

15
00:00:59.980 --> 00:01:01.870
Name two.

16
00:01:01.870 --> 00:01:08.470
That is going to be the state where we are going to store the user input for the name and then to update

17
00:01:08.470 --> 00:01:11.830
that, we're going to use set name function.

18
00:01:12.400 --> 00:01:14.110
So this is a convention.

19
00:01:14.110 --> 00:01:17.590
So whatever name you have for the state, you prefix with the state.

20
00:01:17.890 --> 00:01:21.280
So sit I guess it that's the function.

21
00:01:21.900 --> 00:01:31.090
This is a state, this is a function and we're going to use react don't use the state or you could just

22
00:01:31.090 --> 00:01:41.310
de structure in this to use I used it so this is how you could use the use state hook.

23
00:01:41.500 --> 00:01:49.330
So now if you want to use this one import and use the state from React.

24
00:01:49.330 --> 00:01:57.040
So we have to import that hook and then this is how we can use so this is how you use a local state.

25
00:01:57.400 --> 00:02:05.230
Now this state and this function is available inside this component, but not on any other components.

26
00:02:05.230 --> 00:02:13.120
For example, we have the admin, this component as well, but this name will not be available into

27
00:02:13.120 --> 00:02:15.760
the admin because that's a completely different component.

28
00:02:16.060 --> 00:02:18.010
So this will be available only here.

29
00:02:18.280 --> 00:02:20.740
So that's why we call it local state.

30
00:02:21.520 --> 00:02:26.860
However, there is a situation where you want to have some kind of a global state.

31
00:02:27.490 --> 00:02:29.860
And that situation is something that.

32
00:02:31.740 --> 00:02:37.590
Let's imagine that this name will be required in multiple places.

33
00:02:38.130 --> 00:02:43.680
So if you have a situation like that, then instead of using a local STD, you would want to use global

34
00:02:43.680 --> 00:02:51.930
state because that global state, the name and the the function to augment the state, that is something

35
00:02:52.260 --> 00:02:56.940
required for the entire application more than one phases.

36
00:02:57.000 --> 00:02:57.210
All right.

37
00:02:57.210 --> 00:03:00.720
So in that situation, you would use global state.

38
00:03:01.440 --> 00:03:03.870
In other cases, you can use local state.

39
00:03:04.260 --> 00:03:10.440
So in our case, what are we going to do now is we're going to implement this theme toggle theme feature

40
00:03:10.650 --> 00:03:13.320
to switch the theme between light and dark.

41
00:03:13.920 --> 00:03:21.660
And that is something you want to use as a global state, because we could put it technically, we could

42
00:03:21.660 --> 00:03:25.770
put it into the navigation component and we could create that component and put it there.

43
00:03:26.010 --> 00:03:32.040
However, sometimes you will come across a situation where you want to know What is the current theme

44
00:03:32.040 --> 00:03:32.640
we're using?

45
00:03:32.940 --> 00:03:33.180
All right.

46
00:03:33.180 --> 00:03:38.910
So this value, the state value, you want to know because let's imagine you have a home base and you

47
00:03:38.910 --> 00:03:41.310
have this fixed with the color white.

48
00:03:41.940 --> 00:03:46.410
Now, you may want to change this to black based on the theme.

49
00:03:47.210 --> 00:03:47.750
All right.

50
00:03:47.760 --> 00:03:56.970
I maybe you want to give some other color based and theme so it can always be helpful and maybe even

51
00:03:57.180 --> 00:03:58.590
required in application.

52
00:04:05.270 --> 00:04:12.860
So to make the team available globally, we're going to use this youth context group to create a global

53
00:04:12.860 --> 00:04:13.310
state.

54
00:04:13.670 --> 00:04:18.710
Now, if you have some experience with React, then you may have heard of Redux as well.

55
00:04:18.710 --> 00:04:25.010
Redux is another infinite library you could use to create a global state.

56
00:04:25.040 --> 00:04:32.510
However, with the introduction of hooks in React, we can use the use context group to build our own

57
00:04:33.560 --> 00:04:37.670
global state so we don't have to actually use Redux.

58
00:04:37.790 --> 00:04:40.310
All right, so let's see how we can create a context.

59
00:04:40.850 --> 00:04:44.600
And let me also explain what I was trying to demonstrate here.

60
00:04:44.780 --> 00:04:48.950
So we're going to create a global state using use context hook.

61
00:04:49.490 --> 00:04:52.400
Basically, this hook will have the state of theme.

62
00:04:52.760 --> 00:04:59.690
And to update that theme, we will have the sentiment function just like here name in Sydney.

63
00:04:59.750 --> 00:05:02.750
Similar to that, we're going to have theme and set theme.

64
00:05:03.470 --> 00:05:03.740
All right.

65
00:05:03.860 --> 00:05:11.600
And then with context, you'll be able to exit this property, provide some context to provide will

66
00:05:11.600 --> 00:05:19.520
help you provide the values that you have in the context to any in the entire application.

67
00:05:19.520 --> 00:05:27.590
So basically, we're going to create the context and then import in and reduce this and reduce it gets

68
00:05:27.590 --> 00:05:31.910
initialized before any of the phases, right?

69
00:05:32.090 --> 00:05:33.460
So that's why we import it.

70
00:05:33.470 --> 00:05:34.250
This is as well.

71
00:05:34.490 --> 00:05:41.750
So we're going to import that context and then we just wrap our application here that way at whatever

72
00:05:41.750 --> 00:05:49.070
value you have in the global context, the theme setting, they will be easily accessible in any basis

73
00:05:49.310 --> 00:05:50.270
or components.

74
00:05:51.110 --> 00:05:51.350
All right.

75
00:05:51.530 --> 00:05:54.650
So that was a bit of theory, if that may be confused, don't worry.

76
00:05:55.160 --> 00:05:56.510
We're going to do it practically.

77
00:05:56.690 --> 00:06:02.690
And that will make perfect profit since and we will also be using these these hooks many times throughout

78
00:06:02.690 --> 00:06:03.130
the course.

79
00:06:03.130 --> 00:06:09.110
So even if you don't get it at first time, don't worry, we'll be using them quite a lot of time.

80
00:06:09.120 --> 00:06:12.710
So over time you'll be fully comfortable using it.

81
00:06:13.250 --> 00:06:13.460
All right.

82
00:06:13.460 --> 00:06:18.230
So let's go ahead and create a global state using a used context hook.

83
00:06:20.160 --> 00:06:25.090
And let me also call here, go back to home base and let me just remove that we.

84
00:06:27.020 --> 00:06:28.580
They stayed here for now.
