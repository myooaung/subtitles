1
00:00:00,600 --> 00:00:02,370
Let's go ahead and work on this.

2
00:00:04,650 --> 00:00:05,070
Base.

3
00:00:05,910 --> 00:00:10,100
Looks like we don't have the base yet, so let's go ahead and create that one.

4
00:00:11,100 --> 00:00:14,370
So here in the business, create a new file for good.

5
00:00:17,350 --> 00:00:18,790
Fast forward to this.

6
00:00:20,450 --> 00:00:29,000
And here we just need a basic, basic layout which we may be able to use from one of the signing and

7
00:00:29,000 --> 00:00:29,420
signup.

8
00:00:29,420 --> 00:00:35,240
So if you have a look, look around probably from the sign in place.

9
00:00:35,450 --> 00:00:40,520
So basically, we can continue using the image field and just the overall layout.

10
00:00:40,610 --> 00:00:40,850
All right.

11
00:00:40,850 --> 00:00:43,890
So let's go ahead and copy the code from sign.

12
00:00:43,910 --> 00:00:45,410
Just to make things a bit easier.

13
00:00:45,860 --> 00:00:46,230
It's good.

14
00:00:46,260 --> 00:00:46,820
Sign in.

15
00:00:47,810 --> 00:00:50,090
And let's copy everything.

16
00:00:50,090 --> 00:00:51,830
And then we're just going to remove whatever.

17
00:00:51,830 --> 00:00:54,410
We don't need to copy everything we're signing.

18
00:00:54,950 --> 00:00:56,750
Good for the password and pasted.

19
00:00:57,350 --> 00:00:59,300
So the first thing you want to do is change the name

20
00:01:02,780 --> 00:01:03,680
for a password.

21
00:01:05,120 --> 00:01:08,180
It's fun and turns here as well.

22
00:01:10,910 --> 00:01:12,650
Oh, that's a foreign password.

23
00:01:13,490 --> 00:01:15,770
So what we need here is this function.

24
00:01:17,660 --> 00:01:18,860
This function.

25
00:01:21,470 --> 00:01:24,860
We can give it a different name as it's led me to remove this for now.

26
00:01:25,070 --> 00:01:26,240
All right, so we'll come back to it.

27
00:01:27,080 --> 00:01:30,020
So we have the form unfinished.

28
00:01:32,000 --> 00:01:32,810
Just.

29
00:01:35,060 --> 00:01:36,610
Let me remove this for now.

30
00:01:36,630 --> 00:01:38,600
You should come back to this one.

31
00:01:40,310 --> 00:01:42,050
So we call it.

32
00:01:43,690 --> 00:01:45,950
Forget fast food.

33
00:01:45,970 --> 00:01:46,270
Food.

34
00:01:46,270 --> 00:01:48,070
We keep that title.

35
00:01:50,760 --> 00:01:59,910
Let's not use initial values and assume that the bigger the form, we have the input field for email

36
00:01:59,910 --> 00:02:05,520
so we can leave that and other fields we're going to use bit later.

37
00:02:06,900 --> 00:02:11,970
The password field will be using bit later because user will be entering the new password.

38
00:02:12,390 --> 00:02:14,580
But at the moment we will not use.

39
00:02:14,610 --> 00:02:16,560
So let me just comment this out.

40
00:02:18,400 --> 00:02:19,030
Password.

41
00:02:19,510 --> 00:02:20,670
Leave it right.

42
00:02:21,440 --> 00:02:22,300
Full of password.

43
00:02:22,300 --> 00:02:22,660
Leave.

44
00:02:22,660 --> 00:02:23,830
We can't remove that.

45
00:02:27,840 --> 00:02:28,500
And then.

46
00:02:30,590 --> 00:02:38,000
Oh register now said this link also we can remove and change the name from log in to.

47
00:02:39,110 --> 00:02:41,420
Let's quickly have a look at a finished product.

48
00:02:41,420 --> 00:02:41,930
We have it.

49
00:02:41,930 --> 00:02:43,400
We just called to submit.

50
00:02:44,870 --> 00:02:46,600
All right, so let's send this to submit.

51
00:02:50,640 --> 00:02:53,400
I would say it's a very basic component.

52
00:02:53,400 --> 00:02:55,800
As you can see, we have some inputs.

53
00:02:55,800 --> 00:02:57,950
We can clear them and be clear.

54
00:02:58,020 --> 00:02:59,040
Let's leave it for now.

55
00:02:59,490 --> 00:03:06,060
So basically we have a phone with the input field for email and that's pretty much it.

56
00:03:06,300 --> 00:03:07,920
And then there's a button here.

57
00:03:08,100 --> 00:03:09,300
Simple answer.

58
00:03:09,300 --> 00:03:11,750
Let's quickly have a look how it looks and it's cool.

59
00:03:11,790 --> 00:03:13,320
Click on the phone password.

60
00:03:13,890 --> 00:03:20,170
So on that page we have this component where a user can enter the image.

61
00:03:20,190 --> 00:03:20,910
It's pretty good.

62
00:03:24,090 --> 00:03:27,490
Let me make sure there's not so it's being kept.

63
00:03:29,340 --> 00:03:31,110
So we have two breaks.

64
00:03:31,260 --> 00:03:32,370
Let's move that.

65
00:03:33,310 --> 00:03:33,560
Okay.

66
00:03:33,580 --> 00:03:34,150
So that's good.

67
00:03:34,660 --> 00:03:35,050
No.

68
00:03:37,480 --> 00:03:44,560
So we need to create a function that functions to basically send this email to the back end to the forgot

69
00:03:44,560 --> 00:03:45,820
password endpoint.

70
00:03:46,270 --> 00:03:50,590
All right, so let's write that function.

71
00:03:50,590 --> 00:03:54,140
So let's call that forgot password request.

72
00:03:54,160 --> 00:03:57,640
Let's call that context forward.

73
00:03:58,720 --> 00:04:03,340
Passwords request inputs to async

74
00:04:06,700 --> 00:04:06,970
R2.

75
00:04:07,030 --> 00:04:08,290
Here we use try.

76
00:04:11,740 --> 00:04:20,860
Kit and Eric aren't so long to enter and we want to show some toast notification.

77
00:04:20,860 --> 00:04:23,890
If there is something on toast, don't enter.

78
00:04:24,760 --> 00:04:25,690
We call it.

79
00:04:29,140 --> 00:04:30,580
For the past four fellows.

80
00:04:32,080 --> 00:04:32,680
Try again.

81
00:04:33,170 --> 00:04:34,180
That's all we can do.

82
00:04:34,180 --> 00:04:35,620
So that generate misses.

83
00:04:39,220 --> 00:04:41,260
And then we can ask for the loading, right?

84
00:04:41,260 --> 00:04:43,410
So we have the loading state here.

85
00:04:43,420 --> 00:04:48,670
So we said if there is an error, we said the loading.

86
00:04:50,080 --> 00:04:51,490
Let's put it right after this one.

87
00:04:51,490 --> 00:04:53,230
Start loading.

88
00:04:53,230 --> 00:04:54,970
We said do false.

89
00:04:56,800 --> 00:04:57,160
All right.

90
00:04:57,160 --> 00:04:59,740
So at the beginning we it to true.

91
00:05:01,930 --> 00:05:02,740
We said it's true.

92
00:05:02,740 --> 00:05:05,500
And then we use excuse to make a request to a backing.

93
00:05:06,070 --> 00:05:11,380
So that will give us the response we can destructor done.

94
00:05:12,590 --> 00:05:13,250
Oh, wait.

95
00:05:13,660 --> 00:05:14,450
Excuse.

96
00:05:17,800 --> 00:05:18,460
Excuse.

97
00:05:18,460 --> 00:05:19,290
Don't post.

98
00:05:19,300 --> 00:05:20,800
We make a post request.

99
00:05:21,360 --> 00:05:22,970
We're posting the email.

100
00:05:23,270 --> 00:05:23,500
Right.

101
00:05:23,950 --> 00:05:28,120
So the end ones are going to be forward password and we are sending the email.

102
00:05:28,750 --> 00:05:30,340
And so that's the first argument.

103
00:05:30,340 --> 00:05:34,510
The endpoint second argument is the actual data, which is email.

104
00:05:34,750 --> 00:05:40,000
By the way, if the name key and value say we don't have to write like this, we can just leave it like

105
00:05:40,000 --> 00:05:40,180
that.

106
00:05:41,920 --> 00:05:42,270
All right.

107
00:05:42,270 --> 00:05:43,000
It's beautiful.

108
00:05:43,000 --> 00:05:48,580
You can see that we are sending the email in object format that.

109
00:05:50,840 --> 00:05:56,480
Actually, we're not using the state here for storing the email.

110
00:05:56,570 --> 00:06:05,120
We are using the antigens from component and this gives us the valleys directly because we already saw

111
00:06:05,120 --> 00:06:05,870
how this works.

112
00:06:05,870 --> 00:06:06,140
Right.

113
00:06:06,350 --> 00:06:08,990
So we just have to use the unfinished function.

114
00:06:10,130 --> 00:06:14,390
Actually, it's actually use that I'm finished.

115
00:06:17,480 --> 00:06:19,400
We're going to execute that function.

116
00:06:20,960 --> 00:06:25,670
And that function is from a password request.

117
00:06:31,450 --> 00:06:31,840
All right.

118
00:06:32,530 --> 00:06:37,930
So this function will exist to have access to the values of this form.

119
00:06:43,560 --> 00:06:49,200
So we get access to the values and then that values will have the email.

120
00:06:50,430 --> 00:06:51,150
Anything else?

121
00:06:51,160 --> 00:06:52,980
Whatever is in the phone.

122
00:06:54,030 --> 00:06:54,330
All right.

123
00:06:54,330 --> 00:06:56,880
So we can just send that vanish like that.

124
00:06:58,910 --> 00:06:59,270
Then.

125
00:07:00,790 --> 00:07:01,960
We can take again.

126
00:07:01,960 --> 00:07:03,260
We can take for the air.

127
00:07:03,520 --> 00:07:09,010
If Donald Ducks enter, we can show that error message.

128
00:07:09,280 --> 00:07:11,590
Those dart error we can.

129
00:07:11,590 --> 00:07:18,820
So data dart error so whatever error message we get and we also said the cert loading defaults.

130
00:07:18,820 --> 00:07:24,940
If there's an error we show the error and then setting send the loading to false otherwise.

131
00:07:27,440 --> 00:07:34,430
Otherwise we can show the success misses because at this point, if we don't have the error, then obviously

132
00:07:34,430 --> 00:07:37,390
it is a successful request.

133
00:07:37,400 --> 00:07:40,790
So to start success, we can source some kind of success.

134
00:07:40,790 --> 00:07:44,330
Message password reset link sent to your email.

135
00:07:45,020 --> 00:07:45,320
All right.

136
00:07:45,320 --> 00:07:47,630
So you can use it, can take the email.

137
00:07:49,790 --> 00:07:57,760
And let's also let's write a password reset reset.

138
00:07:59,860 --> 00:08:01,580
Add to this for take your email.

139
00:08:05,840 --> 00:08:16,910
Password reset code is sent back so we can source some kind of message like that and then sync learning

140
00:08:20,150 --> 00:08:21,080
to false.

141
00:08:24,410 --> 00:08:25,790
So in the beginning it's true.

142
00:08:26,000 --> 00:08:33,920
But whether we get error or success of anything we set to false because we saw learning for very brief

143
00:08:33,920 --> 00:08:34,520
seconds.

144
00:08:35,270 --> 00:08:35,470
All right.

145
00:08:35,480 --> 00:08:36,710
So that's all you need to do here.

146
00:08:38,000 --> 00:08:46,130
And actually, once we get the once we get the response, we want to show one more field where user

147
00:08:46,130 --> 00:08:50,060
can enter the code which they will receive in the email.

148
00:08:50,300 --> 00:08:52,520
So we need to show access to fields.

149
00:08:53,450 --> 00:09:01,250
If this request is successful, we need to show so the two fields, one to enter the code and the other

150
00:09:01,250 --> 00:09:04,760
one is to enter the new password, right?

151
00:09:05,180 --> 00:09:10,820
So that means we need to have some kind of a state here which we can control.

152
00:09:10,820 --> 00:09:18,950
So when it is successful we said maybe we can call it some kind of visible and sent visible so we can

153
00:09:19,250 --> 00:09:21,770
use a state like venture.

154
00:09:21,770 --> 00:09:22,880
Let's write that here.

155
00:09:23,300 --> 00:09:31,940
Const visible sets visible equals to use state to give the value of false by default.

156
00:09:32,270 --> 00:09:36,410
But if we get the successful response, we want to set it to true.

157
00:09:40,010 --> 00:09:47,840
So based on this visible value, if it is true, then we want to show two more fields from fields.

158
00:09:48,200 --> 00:09:55,700
One is for password ID and one is for entering the reset code to let me just write something for a map

159
00:09:56,210 --> 00:10:00,170
and then later we going to implement so visible.

160
00:10:02,530 --> 00:10:06,640
And if visible is true, let me just right here.

161
00:10:08,620 --> 00:10:09,310
So

162
00:10:11,920 --> 00:10:17,190
from fields to end to cold and new possible.

163
00:10:17,530 --> 00:10:18,970
So let me describe this for now.

164
00:10:19,420 --> 00:10:22,720
We'll come back to it and then this walk on the farm fields.

165
00:10:23,170 --> 00:10:24,610
For now, let's leave it like this.

166
00:10:25,780 --> 00:10:26,080
Okay.

167
00:10:26,080 --> 00:10:29,530
So if the request is successful, we will show this one.

168
00:10:32,610 --> 00:10:39,420
All right and we should toss notifications and I think use you can always cancel until Donna.

169
00:10:41,100 --> 00:10:43,170
Let's also consider all of the values.

170
00:10:45,230 --> 00:10:48,380
Let's make sure that we use return.

171
00:10:52,110 --> 00:10:53,880
Just for trying.

172
00:10:54,180 --> 00:10:56,970
Just to make sure we are receiving the email as values.

173
00:10:57,720 --> 00:10:58,740
Say, let's give it a try.
