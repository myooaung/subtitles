1
00:00:00,480 --> 00:00:00,750
Okay.

2
00:00:00,750 --> 00:00:03,110
So we want to show the form.

3
00:00:03,390 --> 00:00:05,730
Put in a central component and just put it here.

4
00:00:07,230 --> 00:00:09,900
So the updating category in a morra.

5
00:00:10,620 --> 00:00:17,820
But to be honest, we can actually move the whole model to the components itself.

6
00:00:18,140 --> 00:00:18,280
All right.

7
00:00:18,300 --> 00:00:19,020
So let's do that.

8
00:00:20,160 --> 00:00:22,380
That's got this model from here.

9
00:00:23,490 --> 00:00:24,810
We'll come back to this file.

10
00:00:27,750 --> 00:00:28,950
Let me close on this.

11
00:00:29,730 --> 00:00:30,870
So we'll come back to this one.

12
00:00:31,200 --> 00:00:38,100
So let's go two components in here, then create new, more new forms called model.

13
00:00:38,650 --> 00:00:41,880
Again, we might be using a few other models as well.

14
00:00:42,180 --> 00:00:44,070
So here in a new file, let's call it

15
00:00:49,110 --> 00:00:52,620
category of date model.

16
00:00:52,740 --> 00:00:56,340
Don't tell us to contest.

17
00:00:58,360 --> 00:01:00,310
A reunion of moral equals to.

18
00:01:02,590 --> 00:01:10,450
We created this component which you and just based whatever you got from the other file.

19
00:01:11,800 --> 00:01:15,520
The model and export

20
00:01:19,000 --> 00:01:22,770
export deferral category on model.

21
00:01:23,200 --> 00:01:23,430
Okay.

22
00:01:23,710 --> 00:01:28,060
So here we need to make sure we have this model component from and

23
00:01:30,670 --> 00:01:35,350
import the model from and.

24
00:01:36,670 --> 00:01:36,970
Okay.

25
00:01:37,180 --> 00:01:41,380
Now let's try importing this one here and this push.

26
00:01:44,170 --> 00:01:45,970
All right, so let's go and talk.

27
00:01:47,410 --> 00:01:48,550
Let's remove the moral.

28
00:01:48,550 --> 00:01:49,510
We don't need that here.

29
00:01:50,290 --> 00:01:54,520
Import that component in students in both categories of moral.

30
00:01:54,520 --> 00:01:59,020
From one step to step three.

31
00:01:59,020 --> 00:02:02,170
Step of getting to a component model.

32
00:02:03,870 --> 00:02:05,070
Category update tomorrow.

33
00:02:05,220 --> 00:02:07,200
So we import that component from there.

34
00:02:08,450 --> 00:02:14,520
Now, the exact same code we had there, but now we moved here.

35
00:02:14,760 --> 00:02:15,690
That's pretty much it.

36
00:02:16,080 --> 00:02:19,170
Now we will get an error if we leave it like this.

37
00:02:21,390 --> 00:02:29,700
As you can see, I guess this component requires all the fields, for example, visible, which is not

38
00:02:29,700 --> 00:02:30,450
available here.

39
00:02:30,750 --> 00:02:33,930
So instead, visible results are not available in here.

40
00:02:33,930 --> 00:02:35,940
So we will get the error message.

41
00:02:36,030 --> 00:02:39,270
You can see here visible is not defined.

42
00:02:39,810 --> 00:02:46,680
So what we can do is we can pass these values, these values, these functions we can pass from here

43
00:02:47,010 --> 00:02:48,750
as props properties.

44
00:02:48,840 --> 00:02:49,050
Right.

45
00:02:50,850 --> 00:02:51,510
Visible.

46
00:02:53,570 --> 00:02:54,160
Invisible.

47
00:02:54,680 --> 00:02:56,520
Soot, invisible.

48
00:02:57,770 --> 00:02:58,400
Said Visit.

49
00:03:00,790 --> 00:03:04,900
I guess we can pass the props from there and then we can access them here.

50
00:03:04,930 --> 00:03:09,670
We can disrupt the visual set visual.

51
00:03:09,940 --> 00:03:15,010
If we don't destructor and use just props, then you can access it as props.

52
00:03:15,010 --> 00:03:16,720
Start visual.

53
00:03:19,210 --> 00:03:19,870
You can do that.

54
00:03:20,170 --> 00:03:22,570
But this structuring makes things easier.

55
00:03:22,930 --> 00:03:23,170
All right.

56
00:03:23,500 --> 00:03:26,930
So now it should be good.

57
00:03:26,980 --> 00:03:31,180
You can see used to get that model to having to close.

58
00:03:31,780 --> 00:03:32,260
Beautiful.

59
00:03:34,060 --> 00:03:41,200
All right, so this way we can pass that process down to other components and make make them work.

60
00:03:41,490 --> 00:03:43,960
And sometimes you can even make them reusable.

61
00:03:44,490 --> 00:03:47,860
Reuse it's components in many other files.

62
00:03:48,520 --> 00:03:52,540
Something like that we will be implementing in other.

63
00:03:54,170 --> 00:03:57,040
Of other parts of this course as well.

64
00:03:57,040 --> 00:03:57,640
Infuser.

65
00:03:57,790 --> 00:03:58,090
All right.

66
00:03:58,390 --> 00:03:59,890
So so far, so good.

67
00:03:59,890 --> 00:04:05,680
We got this model, we move there, but now we want to show the front, right?

68
00:04:05,680 --> 00:04:06,880
So let's import.

69
00:04:08,050 --> 00:04:08,330
All right.

70
00:04:08,470 --> 00:04:09,850
That we can put everything in.

71
00:04:13,840 --> 00:04:15,220
From from and.

72
00:04:15,730 --> 00:04:20,710
And just to save some time, let's go here in the next booth.

73
00:04:20,710 --> 00:04:22,180
And we all have this phone.

74
00:04:22,690 --> 00:04:25,870
So let's just try to make use of that, I guess.

75
00:04:25,900 --> 00:04:27,160
Let's use that phone.

76
00:04:28,800 --> 00:04:29,370
Copy that.

77
00:04:29,790 --> 00:04:30,330
Come here.

78
00:04:31,200 --> 00:04:39,360
And instead of that name to that phone, now you can see this request input and the button component

79
00:04:39,360 --> 00:04:39,750
as well.

80
00:04:40,410 --> 00:04:41,940
So let's make sure we have them.

81
00:04:43,050 --> 00:04:48,390
We have we should have input and button as well.

82
00:04:52,030 --> 00:04:52,390
All right.

83
00:04:52,660 --> 00:04:58,960
Now, the input from Burton, we all have.

84
00:05:00,490 --> 00:05:05,140
We don't have the edit outline, so let's input that I can as well.

85
00:05:13,670 --> 00:05:14,840
Let's have a look at this from.

86
00:05:14,840 --> 00:05:15,890
So we got the form.

87
00:05:16,250 --> 00:05:19,070
We need the unfinished functions on finis.

88
00:05:21,920 --> 00:05:23,660
This is something we.

89
00:05:23,780 --> 00:05:26,750
We can pass this function from this parent component.

90
00:05:29,360 --> 00:05:30,380
So unfairness.

91
00:05:32,390 --> 00:05:34,630
Um, so.

92
00:05:34,670 --> 00:05:38,150
So that unfinished is already used on this form to create.

93
00:05:38,420 --> 00:05:39,950
So we can give that a different name.

94
00:05:41,840 --> 00:05:43,400
We can call that handle.

95
00:05:43,400 --> 00:05:47,160
It lets us handle entities already used.

96
00:05:47,510 --> 00:05:49,880
So let's call it update handle.

97
00:05:49,880 --> 00:05:52,940
Loved it and update.

98
00:05:56,650 --> 00:05:56,980
Okay.

99
00:05:57,670 --> 00:06:02,110
So we passing handle update function as props.

100
00:06:02,350 --> 00:06:06,310
So let's write that here and update.

101
00:06:18,710 --> 00:06:24,740
So in this handle object function, what we can do is obviously we're going to make a request to back

102
00:06:24,740 --> 00:06:27,770
in, send the updating category to update.

103
00:06:27,770 --> 00:06:38,840
But for the moment, let me just use maybe alerts, make update requests, and let's leave it like this

104
00:06:38,840 --> 00:06:39,110
for now.

105
00:06:39,110 --> 00:06:39,980
We'll come back to it.

106
00:06:41,450 --> 00:06:41,840
All right.

107
00:06:41,840 --> 00:06:43,760
So we got that function as well.

108
00:06:43,760 --> 00:06:54,110
So that handle update unfitness, we can use that function handle object so we can distribute the handle

109
00:06:54,140 --> 00:06:54,980
update

110
00:06:57,680 --> 00:07:01,330
and then we can use that here.

111
00:07:03,680 --> 00:07:04,850
Handle update.

112
00:07:09,400 --> 00:07:11,020
So we can use this format as well.

113
00:07:11,020 --> 00:07:12,940
So an object is done.

114
00:07:12,940 --> 00:07:17,080
We can receive the value we.

115
00:07:18,450 --> 00:07:22,090
I do not need this one because this is Abbate.

116
00:07:22,100 --> 00:07:28,490
So the updating category will always be there, so let's not do it on that one.

117
00:07:29,570 --> 00:07:30,410
We don't need that.

118
00:07:33,770 --> 00:07:33,980
Let's.

119
00:07:33,990 --> 00:07:34,640
Let's have a look.

120
00:07:35,880 --> 00:07:36,600
Saluting.

121
00:07:36,720 --> 00:07:42,420
Saluting is something we can pass from the parent component as props.

122
00:07:50,440 --> 00:07:54,680
I guess the learning will be true when we are creating a category.

123
00:07:55,130 --> 00:07:56,090
So that time.

124
00:07:58,630 --> 00:08:00,370
This actually is not necessary.

125
00:08:00,370 --> 00:08:05,890
So we have the loading only doing the create so we could have one during update.

126
00:08:05,890 --> 00:08:09,580
But unless we have that, we don't need that.

127
00:08:09,580 --> 00:08:11,440
So let me actually remove.

128
00:08:15,240 --> 00:08:17,940
The lowering from the bottom.

129
00:08:22,340 --> 00:08:22,610
All right.

130
00:08:23,420 --> 00:08:25,430
So you can see we have got the foam.

131
00:08:25,430 --> 00:08:26,510
We have the summit button.

132
00:08:27,440 --> 00:08:32,480
When I submit make object request to that function handle object executes.

133
00:08:32,870 --> 00:08:33,740
So so far, so good.

134
00:08:33,740 --> 00:08:34,550
Everything looks good.

135
00:08:34,550 --> 00:08:37,760
Now, what we need to do is populate the value.

136
00:08:37,820 --> 00:08:44,390
So whichever is clicked, this clicked category is in this state as an updating category.

137
00:08:44,390 --> 00:08:49,730
So we need to pass that as props to this component.

138
00:08:49,960 --> 00:08:50,270
All right.

139
00:08:50,540 --> 00:08:58,460
And then we will be able to access that very nice update of did updating category.

140
00:09:02,480 --> 00:09:02,870
Okay.

141
00:09:04,050 --> 00:09:12,150
We need to pass that and this value we can access in the in this component.

142
00:09:12,150 --> 00:09:13,530
And we need to.

143
00:09:15,780 --> 00:09:16,800
And let's try this.

144
00:09:20,180 --> 00:09:21,240
So I'm dating category.

145
00:09:21,260 --> 00:09:23,240
Also, it's been passed as props.

146
00:09:24,050 --> 00:09:36,140
We destruct that and then we can pre-populated the value of this phone.

147
00:09:37,130 --> 00:09:44,300
Now, since we're using end designed for this one, you can use the initial values for it in this year.

148
00:09:48,920 --> 00:09:49,880
Initial value.

149
00:09:52,760 --> 00:09:57,620
Actually, instead of seeing initial value, we can also use fields.

150
00:09:58,670 --> 00:10:03,380
So let me use fields and here.

151
00:10:06,000 --> 00:10:14,880
In this object, we can have an array and in this area we can write the name that is near.

152
00:10:15,600 --> 00:10:24,390
You can see we are trying to target this input with the form item and the name name.

153
00:10:24,660 --> 00:10:24,960
Right.

154
00:10:24,960 --> 00:10:26,250
So that is here.

155
00:10:27,690 --> 00:10:28,140
Okay.

156
00:10:28,320 --> 00:10:32,580
It also must be inside the object within this array.

157
00:10:32,880 --> 00:10:33,440
All right.

158
00:10:33,510 --> 00:10:36,540
You can see first we use object in object.

159
00:10:36,540 --> 00:10:37,470
We have the array.

160
00:10:37,890 --> 00:10:43,410
Now, you could target more than one fields here, but we have only one field in this category that

161
00:10:43,410 --> 00:10:44,100
is called name.

162
00:10:44,490 --> 00:10:45,660
So we leave it like that.

163
00:10:45,660 --> 00:10:46,200
And then.

164
00:10:47,850 --> 00:10:48,300
Value.

165
00:10:48,720 --> 00:10:48,990
Right.

166
00:10:48,990 --> 00:10:55,350
So value for that fund is going to be I'm dating category dot net.

167
00:10:57,570 --> 00:10:57,900
All right.

168
00:10:58,950 --> 00:10:59,340
All right.

169
00:10:59,340 --> 00:11:01,770
So with this, let's give it a try.

170
00:11:03,240 --> 00:11:05,580
Let's make sure when we click.

171
00:11:06,060 --> 00:11:11,550
So if I click on Python, you see we have the updating category name that it's frightened.

172
00:11:12,090 --> 00:11:16,440
If I click on ma'am, we see ma'am, she.

173
00:11:17,040 --> 00:11:20,160
If you don't see the change for some reason, just reload once.

174
00:11:20,970 --> 00:11:23,340
And it should look like a beautiful.

175
00:11:26,220 --> 00:11:33,150
So we have been able to target the particular field by the name and said the value.

176
00:11:33,150 --> 00:11:38,370
As you know, it would be done a little differently if we were using.

177
00:11:40,080 --> 00:11:40,920
The rule of thumb.

178
00:11:41,280 --> 00:11:49,140
Oh, if we were using our local state to control the fun of even the designs, forms and design inputs

179
00:11:49,140 --> 00:11:58,380
we could control using the local state using React uses state hook and that is something we will explore

180
00:11:58,380 --> 00:11:59,430
a bit later as well.

181
00:11:59,790 --> 00:12:02,540
But at the moment we just using end is end forms to this.

182
00:12:02,700 --> 00:12:04,590
This has its own way of doing things.

183
00:12:04,590 --> 00:12:11,910
Very simply, you can see that's how we can populate the values and when the form is submitted, we

184
00:12:11,910 --> 00:12:14,010
get the form values in this function.

185
00:12:14,580 --> 00:12:15,740
All right, so handle object.

186
00:12:15,810 --> 00:12:23,370
Let me quickly go here and update here in the parent component for handle object, we get the values

187
00:12:23,370 --> 00:12:23,730
right.

188
00:12:25,260 --> 00:12:25,860
So let me.

189
00:12:27,120 --> 00:12:29,790
Remove that and take control.

190
00:12:29,790 --> 00:12:30,300
Console.log.

191
00:12:32,580 --> 00:12:37,380
Send it to back and for the.

192
00:12:40,880 --> 00:12:41,540
Values.

193
00:12:41,720 --> 00:12:42,020
Okay.

194
00:12:42,170 --> 00:12:48,110
And then let me also console.log the updating category.

195
00:12:51,110 --> 00:12:51,500
Okay.

196
00:12:51,950 --> 00:12:53,060
Just to give it a try.

197
00:12:55,170 --> 00:12:59,380
I mean, inspect console.

198
00:13:00,280 --> 00:13:01,660
Let me try.

199
00:13:01,660 --> 00:13:02,200
Ma'am.

200
00:13:03,790 --> 00:13:04,270
Ma'am?

201
00:13:07,230 --> 00:13:10,710
List says that he'd submit and begin to send it back in.

202
00:13:10,980 --> 00:13:16,320
So we have got the new name for this category and the updated category is this one.

203
00:13:16,440 --> 00:13:24,570
So when you make a request to back in, what we can do is we can send this updating name and then we

204
00:13:24,570 --> 00:13:26,280
can send this slug.

205
00:13:26,700 --> 00:13:32,130
And that way we will be able to find this category in the back end and update the name.

206
00:13:33,120 --> 00:13:33,420
All right.

207
00:13:33,540 --> 00:13:42,990
So that's what we have already done in our back in earlier, which we can have a quick look again when

208
00:13:42,990 --> 00:13:44,940
we make a request to using excuse.
