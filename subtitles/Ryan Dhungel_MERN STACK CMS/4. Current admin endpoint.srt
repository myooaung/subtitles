1
00:00:00,660 --> 00:00:00,930
All right.

2
00:00:00,930 --> 00:00:05,340
So now we're going to make some improvement here.

3
00:00:06,480 --> 00:00:11,250
So instead of taking the valley from the local stories, we're going to make a request to our back in.

4
00:00:12,690 --> 00:00:18,270
So we're going to create a endpoint where we can get the currently logged in, use this information

5
00:00:18,270 --> 00:00:26,670
from the database and we send that here and then we're going to take if we get the user then we can,

6
00:00:27,540 --> 00:00:30,710
you know, set loading defaults to show the content.

7
00:00:30,720 --> 00:00:34,920
Otherwise we show this loading spinner.

8
00:00:36,480 --> 00:00:39,690
And then later just saying loading spinner is actually not enough.

9
00:00:40,260 --> 00:00:46,050
Because if you have a look, we don't want to keep circularly, we want to throw them out of that base,

10
00:00:46,410 --> 00:00:48,660
take them to a logging phase or something like that.

11
00:00:49,110 --> 00:00:49,320
All right.

12
00:00:49,320 --> 00:00:52,680
So, for example, if you have a look at the finished application.

13
00:00:57,260 --> 00:01:04,550
So if a user is not logged in and if they try to go to admin pays, for example, then we have something

14
00:01:04,550 --> 00:01:08,310
like this redirecting in 3 to 1 and then we redo it.

15
00:01:08,320 --> 00:01:13,970
So we need to implement something like that just so that we don't the people don't just sit there looking

16
00:01:13,970 --> 00:01:20,360
at the loading screen, which is okay, but we could do something like this.

17
00:01:21,430 --> 00:01:21,670
All right.

18
00:01:22,000 --> 00:01:22,900
So we're going to do that.

19
00:01:23,470 --> 00:01:29,770
And at the moment, let's go to the back end and create the endpoint so we can make a request from here.

20
00:01:31,690 --> 00:01:37,510
Now, if you're new to building a full stack application, you might be feeling like maybe some of you

21
00:01:37,510 --> 00:01:45,610
might be feeling like there's just so much work in terms of authentication and protecting without protecting

22
00:01:45,610 --> 00:01:48,250
your backend front end, things like that.

23
00:01:50,320 --> 00:01:54,930
Whether it is because it's security is really important for any application.

24
00:01:54,940 --> 00:02:01,840
However, all these things you have to do only once in the beginning of the application.

25
00:02:02,290 --> 00:02:06,910
So when you're building an application, you always have to go through this authentication process back

26
00:02:06,910 --> 00:02:14,230
in front end, securing the bases, all that things you do once and once it is done, then you don't

27
00:02:14,230 --> 00:02:18,850
have to worry about that again and you just focus on building the actual application.

28
00:02:19,010 --> 00:02:19,270
All right.

29
00:02:19,270 --> 00:02:20,620
So we are almost done here.

30
00:02:20,920 --> 00:02:22,930
Just add this.

31
00:02:23,080 --> 00:02:28,630
We are towards the end of this whole authentication, protecting roots, spaces, all of it.

32
00:02:28,960 --> 00:02:37,650
So very soon we will be done and then we'll be able to just do these amazing things like creating post

33
00:02:37,660 --> 00:02:44,710
updating, deleting categories, media, library comments, users profile and just all this cool stuff.

34
00:02:45,160 --> 00:02:51,670
So if you want to post personal feel a bit too much, you feel like it is a bit too much about the authentication

35
00:02:51,670 --> 00:02:54,390
and protection and all that we all done.

36
00:02:55,530 --> 00:02:55,800
All right.

37
00:02:55,800 --> 00:02:56,590
So with that said.

38
00:02:56,610 --> 00:02:58,360
But I personally enjoyed it.

39
00:02:58,660 --> 00:02:59,790
It's so much fun.

40
00:02:59,790 --> 00:03:05,340
But it's maybe it's not for everyone, you know, just just so that I wanted to share this with you.

41
00:03:05,670 --> 00:03:09,420
You do it just once in the beginning of the application, and that is pretty much it.

42
00:03:10,290 --> 00:03:10,620
All right.

43
00:03:10,620 --> 00:03:10,980
So.

44
00:03:13,310 --> 00:03:19,220
You defect, we're going to use the use effect, however discovered that is taking the value from the

45
00:03:19,220 --> 00:03:23,840
context to ensure that we want to rely this data to come from our SARA.

46
00:03:23,840 --> 00:03:26,330
So now it is fully secure.

47
00:03:26,960 --> 00:03:36,620
So let's go to our server roads of let's create a endpoint and we can call that current user Aurora

48
00:03:36,620 --> 00:03:41,270
dot get we make a get request and this will be very useful as well.

49
00:03:41,270 --> 00:03:46,340
So anytime you want to know the logged in user who is the currently logged in, use it.

50
00:03:46,340 --> 00:03:51,920
Then you can always make a request to this endpoint even though you have the data in the context and

51
00:03:51,920 --> 00:03:52,180
local.

52
00:03:52,190 --> 00:03:54,530
So is just for the security reason.

53
00:03:54,530 --> 00:04:00,830
You can make a request to your back end and this will give you the currently logged in user based on

54
00:04:00,830 --> 00:04:02,930
the the token, right?

55
00:04:02,930 --> 00:04:07,250
So that response is something you can totally trust.

56
00:04:08,030 --> 00:04:15,950
So rather than get we can call it, let's call it current to use.

57
00:04:19,120 --> 00:04:20,920
Actually, let's call it current.

58
00:04:20,920 --> 00:04:23,200
Add to what?

59
00:04:23,470 --> 00:04:30,220
What I'm going to do here is I'm going to create a function in the controller that will have returned

60
00:04:30,220 --> 00:04:31,180
the current user.

61
00:04:31,900 --> 00:04:38,810
However, the endpoint we can change it to, we can call it current admin, current also current subscriber.

62
00:04:38,860 --> 00:04:39,630
We can change it.

63
00:04:39,640 --> 00:04:46,000
However, the function we will execute in the controller will be always same and that is going to be

64
00:04:46,900 --> 00:04:47,860
current to use.

65
00:04:48,800 --> 00:04:51,560
Basically what we want to do is get the current user.

66
00:04:52,160 --> 00:04:59,540
Now how I'm going to make this dynamic for the author and subscribers to that by applying a middleware

67
00:04:59,540 --> 00:04:59,810
here.

68
00:05:00,110 --> 00:05:03,590
So I'm going to upload the admin middleware that will.

69
00:05:05,730 --> 00:05:09,000
Make sure that this current user is admin.

70
00:05:09,370 --> 00:05:12,390
So I will see you also how we are going to do that.

71
00:05:12,660 --> 00:05:15,120
But for the moment, let's just focus on creating this.

72
00:05:16,990 --> 00:05:22,540
Control function, and we also need to make sure to apply that middleware.

73
00:05:22,630 --> 00:05:26,470
If we go to the category, we have applied the request handling middleware.

74
00:05:26,710 --> 00:05:27,940
So we need that one has.

75
00:05:29,990 --> 00:05:33,230
Because we need to know the.

76
00:05:40,760 --> 00:05:42,140
We need to know the.

77
00:05:43,100 --> 00:05:46,730
And to govern the society, we need to verify the token.

78
00:05:48,930 --> 00:05:52,500
And then that would give us the ID in the request to use it.

79
00:05:52,590 --> 00:05:52,800
All right.

80
00:05:52,800 --> 00:05:56,100
So we're going to update this, request it right here.

81
00:05:58,130 --> 00:06:04,250
So current user current add an endpoint, you can send a request from your React application.

82
00:06:05,270 --> 00:06:10,700
And this route has this middleware approach it will take for the token.

83
00:06:11,030 --> 00:06:17,690
If it is valid, the code here will execute and this code will try to get the user from the database

84
00:06:17,690 --> 00:06:20,690
and return to the React application.

85
00:06:21,200 --> 00:06:28,040
So current user, let's create this function that our control controls ask.

86
00:06:31,960 --> 00:06:33,080
This from Tony, an

87
00:06:35,830 --> 00:06:37,210
export concert.

88
00:06:40,970 --> 00:06:42,830
Current user account stood.

89
00:06:44,070 --> 00:06:47,640
Async requests.

90
00:06:47,650 --> 00:06:48,450
Response

91
00:06:52,260 --> 00:06:52,700
try.

92
00:06:57,030 --> 00:06:58,050
Cut the error.

93
00:07:00,870 --> 00:07:01,830
Cancel out the error.

94
00:07:02,400 --> 00:07:06,690
So here, what we want to do is we want to get the current user.

95
00:07:08,840 --> 00:07:14,030
So to give the current user, first of all, we need to make sure we have the user model, which obviously

96
00:07:14,030 --> 00:07:14,540
we have.

97
00:07:16,850 --> 00:07:27,920
So here we can use we can put this result in the variable user equal weight use the user model, the

98
00:07:27,920 --> 00:07:35,690
find by ID function, and we give the idea and that is going to be a request to use a dot underscore

99
00:07:35,690 --> 00:07:42,560
I.D. We can we we get access to this because we applied the request and in middleware in our route.

100
00:07:47,620 --> 00:07:47,890
All right.

101
00:07:47,890 --> 00:07:49,840
So we try to find the user based on the idea.

102
00:07:51,050 --> 00:07:54,260
And once we get that, all we want to do is return.

103
00:07:54,980 --> 00:07:55,760
Simple as that.

104
00:07:55,790 --> 00:07:57,230
We just want to return to use it.

105
00:08:00,290 --> 00:08:00,770
But.

106
00:08:02,150 --> 00:08:08,810
But we actually don't need this user object in our client in React because we already have the logged

107
00:08:08,810 --> 00:08:09,230
in user.

108
00:08:09,770 --> 00:08:13,040
We're doing all this just to make sure that.

109
00:08:14,970 --> 00:08:15,540
The.

110
00:08:16,660 --> 00:08:18,520
So for the security reason, right?

111
00:08:18,520 --> 00:08:23,710
So just so that someone is not messing around with the value in the level stories, right?

112
00:08:23,980 --> 00:08:25,390
So that is the only reason.

113
00:08:25,390 --> 00:08:32,520
Otherwise we could you know, we can we don't actually have to send the user to the client.

114
00:08:33,040 --> 00:08:37,090
We can just send some kind of a value face and bullet response edition.

115
00:08:39,930 --> 00:08:48,190
Okay to use something simple as this, because the data we're sending here is not really important with

116
00:08:48,270 --> 00:08:48,570
a.

117
00:08:51,360 --> 00:08:56,040
Whether the current user was there, whether the user's admin or not.

118
00:08:56,040 --> 00:08:58,370
That is the important as to here.

119
00:08:58,380 --> 00:08:59,580
We can just send the.

120
00:09:01,530 --> 00:09:02,460
No response.

121
00:09:02,470 --> 00:09:02,820
Okay.

122
00:09:02,840 --> 00:09:03,640
True or false?

123
00:09:03,660 --> 00:09:04,920
We don't really have to do anything.

124
00:09:05,070 --> 00:09:09,710
Instead, what we're going to do here is applied the EAS admin middleware here.

125
00:09:10,800 --> 00:09:15,480
That is something we have already created and we even apply it here in the category.

126
00:09:15,990 --> 00:09:19,200
So let's go to middleware index.

127
00:09:19,650 --> 00:09:21,120
So we have the is ADM.

128
00:09:21,120 --> 00:09:22,920
Basically here we are finding the user.

129
00:09:25,330 --> 00:09:27,940
If the user has the role of admin, we are.

130
00:09:29,020 --> 00:09:29,620
Returning.

131
00:09:30,310 --> 00:09:31,920
Executing this callback function.

132
00:09:31,970 --> 00:09:32,210
Right.

133
00:09:32,230 --> 00:09:35,740
So this a middleware we can use in our root you.

134
00:09:37,240 --> 00:09:38,500
The current admin group.

135
00:09:40,640 --> 00:09:43,580
That will make sure that we have the.

136
00:09:44,670 --> 00:09:51,620
Currently logged in user which is who is also an answer here and its input is an.

137
00:09:57,550 --> 00:09:57,900
Okay.

138
00:09:59,150 --> 00:09:59,470
Now.

139
00:10:00,640 --> 00:10:01,240
You can see here.

140
00:10:03,510 --> 00:10:09,360
Previously we made we use the huge effect hook that take the value from the context.

141
00:10:09,390 --> 00:10:13,590
Now we're going to change that and make a request to this endpoint.

142
00:10:14,710 --> 00:10:14,970
Okay.

143
00:10:15,310 --> 00:10:21,520
And this end point will have all these tick ticks for the validity of the token tick.

144
00:10:21,610 --> 00:10:28,210
If the user has the role of admin and if everything is good, we can send the response.

145
00:10:28,210 --> 00:10:28,600
Okay.

146
00:10:28,600 --> 00:10:28,960
True.

147
00:10:29,260 --> 00:10:29,500
Right.

148
00:10:29,800 --> 00:10:31,210
So if the response.

149
00:10:31,210 --> 00:10:31,600
Okay.

150
00:10:31,600 --> 00:10:31,960
True.

151
00:10:31,960 --> 00:10:33,280
Has been received in the.

152
00:10:34,810 --> 00:10:37,900
The client said, then we can just render the contract.

153
00:10:38,810 --> 00:10:42,080
So that means let's go to the current user.

154
00:10:42,080 --> 00:10:47,960
And I just realized that we don't actually have to even make this query to find the user from the database

155
00:10:48,470 --> 00:10:49,010
we don't have.

156
00:10:50,690 --> 00:10:53,720
You know, we can just send the response or get to.

157
00:10:55,630 --> 00:10:59,080
That's that's that's so simple and amazing.

158
00:10:59,590 --> 00:11:05,290
So we can do this because we have already done all the tech necessary here in the is admin, right?

159
00:11:05,710 --> 00:11:08,280
So if you want, you can even keep it simple like this one.

160
00:11:08,290 --> 00:11:09,670
I'm just going to leave it like this.

161
00:11:09,670 --> 00:11:10,990
I'm just gonna send this out.

162
00:11:11,590 --> 00:11:17,170
We may use later, some time, but I don't really think this.

163
00:11:17,170 --> 00:11:17,890
Leave it like this.

164
00:11:18,190 --> 00:11:19,570
So we just send the response.

165
00:11:19,570 --> 00:11:19,880
Okay.

166
00:11:20,950 --> 00:11:21,280
Okay.

167
00:11:21,820 --> 00:11:24,160
So let's go now.

168
00:11:25,250 --> 00:11:29,370
And try to make a request to this end point and let's see how we can use this.

169
00:11:30,200 --> 00:11:34,520
So response to determine whether we want to show the content or not.

170
00:11:35,090 --> 00:11:36,350
So let me close all this.

171
00:11:40,190 --> 00:11:41,230
Let me close the server.

172
00:11:41,250 --> 00:11:45,030
Go back to client and let's go to admin layout here.

173
00:11:45,450 --> 00:11:45,810
Now.

174
00:11:47,030 --> 00:11:52,670
I'm just going to comment discordant instead of working to make a request to back in I guess let me

175
00:11:52,670 --> 00:11:53,600
input excuse.

176
00:12:00,230 --> 00:12:00,920
And then here.

177
00:12:03,350 --> 00:12:06,830
And let me execute a function here and get.

178
00:12:08,250 --> 00:12:09,270
Current admin.

179
00:12:10,530 --> 00:12:12,120
And then let's try this once again.

180
00:12:16,380 --> 00:12:20,280
One of the reason is that we can't use async here.

181
00:12:22,350 --> 00:12:23,670
I guess you can't do that.

182
00:12:23,910 --> 00:12:25,110
Instead use effect.

183
00:12:26,350 --> 00:12:29,890
You could write a function like this.

184
00:12:29,890 --> 00:12:32,560
You just execute here like that.

185
00:12:33,430 --> 00:12:38,830
You can do that, or you can just leave it outside just to make things make your core a little bit cleaner.

186
00:12:39,180 --> 00:12:40,600
I So this are what I'm going to do.

187
00:12:42,480 --> 00:12:49,400
So get current admin we use excuse excuse will give us the response data we do structure data equals

188
00:12:49,410 --> 00:12:51,540
to await excuse.

189
00:12:51,540 --> 00:12:54,150
Don't make a get request to

190
00:12:57,030 --> 00:12:58,110
current admin.

191
00:12:59,950 --> 00:13:00,320
All right.

192
00:13:00,340 --> 00:13:07,120
And then when we do this, we may get the response or get to the point.

193
00:13:15,260 --> 00:13:21,200
So here's what you need to do is you can punch a lot of the big into the Donna.

194
00:13:22,240 --> 00:13:23,320
Before we do anything here.

195
00:13:24,670 --> 00:13:28,690
Now, this function executes here in the U.S..

196
00:13:28,690 --> 00:13:30,130
If it were here.

197
00:13:31,000 --> 00:13:34,060
Oh, I, too, have to do one more thing here because.

198
00:13:36,170 --> 00:13:43,270
The table the current admin to give the current admin in our back and we need to make sure the health

199
00:13:43,480 --> 00:13:49,390
token has been sent to our back so you can do not want done token.

200
00:13:52,460 --> 00:13:56,330
Because it might take few milliseconds to access this value from the context.

201
00:13:56,330 --> 00:14:01,310
So you want to make sure you have access to token before you make a request.

202
00:14:01,610 --> 00:14:07,340
So you can put this as a dependency here and then come here and give it a try.

203
00:14:07,760 --> 00:14:08,450
Let's open.

204
00:14:14,170 --> 00:14:15,760
Let's try to go to.

205
00:14:16,210 --> 00:14:17,650
Actually, we can just go from here.

206
00:14:22,770 --> 00:14:26,740
Localhost, 3000 subscribers, not phono.

207
00:14:26,760 --> 00:14:28,790
So obviously we don't have the software.

208
00:14:28,800 --> 00:14:30,210
Let's log in and add.

209
00:14:32,550 --> 00:14:34,920
And you can see immediately we got that okay too.

210
00:14:35,850 --> 00:14:37,440
We still have the loading, but.

211
00:14:37,440 --> 00:14:37,800
Okay.

212
00:14:37,800 --> 00:14:38,150
True.

213
00:14:39,150 --> 00:14:39,900
That's beautiful.

214
00:14:41,610 --> 00:14:44,690
You can see the request has been made to our backend.

215
00:14:45,660 --> 00:14:46,020
Awesome.

216
00:14:46,200 --> 00:14:48,270
So what we can do now is.

217
00:14:49,820 --> 00:14:50,570
The same thing.

218
00:14:50,810 --> 00:14:51,080
Yeah.

219
00:14:52,140 --> 00:14:53,400
Said Learning difference.

220
00:14:53,490 --> 00:15:00,260
If we got the response it removed the console.log done and let's put that here set lowering defaults

221
00:15:00,270 --> 00:15:01,170
if we've got the data.

222
00:15:03,130 --> 00:15:08,650
If there was an error, we can just redirect the use it to some other base.

223
00:15:10,320 --> 00:15:10,710
Okay.

224
00:15:10,710 --> 00:15:11,490
So we can do that.

225
00:15:12,780 --> 00:15:15,260
And this all this good executing him.

226
00:15:16,020 --> 00:15:17,790
So we don't need this code anymore.

227
00:15:20,920 --> 00:15:25,180
I'm going to actually leave it here just for the reference for you.

228
00:15:25,960 --> 00:15:29,480
So this way you could just use your context to take.

229
00:15:30,070 --> 00:15:31,720
But now we're using.

230
00:15:32,990 --> 00:15:36,800
This would be a request and the response based on their response.

231
00:15:37,340 --> 00:15:37,730
We are.

232
00:15:39,460 --> 00:15:40,870
Changing the value of loading.

233
00:15:40,870 --> 00:15:44,620
And when the loading is true, we show the alluring spinner.

234
00:15:44,620 --> 00:15:46,020
Otherwise, we saw the content.

235
00:15:47,690 --> 00:15:48,110
Okay.

236
00:15:48,800 --> 00:15:53,300
So you saw how we changed from this to this nicely.

237
00:15:55,470 --> 00:15:58,520
So now you first.

238
00:15:58,670 --> 00:15:59,360
Let's try.

239
00:15:59,400 --> 00:16:00,830
We can try one more time.

240
00:16:01,540 --> 00:16:03,590
Um, localhost, 3000.

241
00:16:07,450 --> 00:16:09,340
If you try to go to admin.

242
00:16:13,500 --> 00:16:14,970
You get redirect.

243
00:16:15,540 --> 00:16:15,930
All right.

244
00:16:16,020 --> 00:16:18,090
If you sign in.

245
00:16:18,690 --> 00:16:21,630
But not as an item, but like someone is.

246
00:16:26,900 --> 00:16:28,490
And if you try to go to any.

247
00:16:31,030 --> 00:16:37,930
We get redirected to companies, so we have been able to secure the admin base.

248
00:16:38,740 --> 00:16:41,440
Based on the response we got from our server.
