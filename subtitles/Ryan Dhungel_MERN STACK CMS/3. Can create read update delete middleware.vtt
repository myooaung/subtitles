WEBVTT
1
00:00:00.210 --> 00:00:07.560
So now we're going to go back in and create some mirrors so that we can replace is at mirror because

2
00:00:07.560 --> 00:00:14.100
no authority will be able to create post, update, delete, delete medias and so on.

3
00:00:14.940 --> 00:00:15.210
All right.

4
00:00:15.510 --> 00:00:17.790
So here now let me go to middleware.

5
00:00:17.880 --> 00:00:21.630
And it's clear to me always first is auto.

6
00:00:21.630 --> 00:00:27.740
So what are we to do here is we're going to create a few mirrors, one we're going to call it.

7
00:00:27.930 --> 00:00:35.070
Let me just right here exclude comments can create read.

8
00:00:38.780 --> 00:00:39.430
I think.

9
00:00:51.050 --> 00:00:52.940
And so this is one middleware.

10
00:00:53.420 --> 00:01:00.980
So we can upload this middleware in our roots where both admin and also we should be able to create

11
00:01:02.120 --> 00:01:03.110
something in the database.

12
00:01:03.110 --> 00:01:08.390
For example, posts, create media and be able to retrieve that.

13
00:01:09.650 --> 00:01:11.480
So read, create and read.

14
00:01:11.690 --> 00:01:11.930
All right.

15
00:01:12.350 --> 00:01:14.510
So this is one.

16
00:01:15.050 --> 00:01:20.000
Another one is update and delete because we can just take for the rule.

17
00:01:20.330 --> 00:01:30.470
We have to also make sure that the author doesn't just delete everyone else's post or media.

18
00:01:30.500 --> 00:01:30.710
Right.

19
00:01:30.710 --> 00:01:37.910
So although will we also to be able to update and delete as well besides create and read auto, we will

20
00:01:37.910 --> 00:01:45.350
be able to update and delete, but you'll be able to do those things on the post that he created.

21
00:01:45.360 --> 00:01:48.590
So something that belongs to him, not everyone else's.

22
00:01:49.100 --> 00:01:49.370
Right.

23
00:01:49.430 --> 00:01:55.220
So that's why we need to have a different middleware for update included because we have to think if

24
00:01:55.580 --> 00:01:58.940
that post is created by that particular author.

25
00:01:59.180 --> 00:01:59.420
Right.

26
00:01:59.420 --> 00:02:02.120
So we have to take that so can

27
00:02:04.950 --> 00:02:07.760
indeed delete post.

28
00:02:09.020 --> 00:02:15.620
So this is another middleware which will take to make sure that we can allow him to update or delete

29
00:02:15.620 --> 00:02:16.430
any post.

30
00:02:18.150 --> 00:02:27.870
Vis a vis one can update and delete posts, and then the next one is for deleting the bits of the media

31
00:02:27.870 --> 00:02:28.950
files images.

32
00:02:29.190 --> 00:02:37.470
So the best time to do this one we can to call it delete can delete media.

33
00:02:39.870 --> 00:02:43.770
So he can create to query and just use this middleware.

34
00:02:44.130 --> 00:02:50.490
But to delete, we need to take and make sure the media was uploaded by that user.

35
00:02:50.940 --> 00:02:58.380
Only then we would allow him to delete his own uploaded media in order to let's go ahead and work on

36
00:02:58.380 --> 00:02:59.130
these three.

37
00:02:59.170 --> 00:03:08.010
MediaWorks So the first one we could use if Al Stedman like this one, but this time I'm going to try

38
00:03:08.010 --> 00:03:08.820
something different.

39
00:03:08.820 --> 00:03:10.740
I'm going to try Sweet Kiss.

40
00:03:12.570 --> 00:03:12.660
I.

41
00:03:12.870 --> 00:03:15.570
So here, try it first.

42
00:03:15.570 --> 00:03:23.890
Let's find the user based on the, the middleware that we will be applying in our routes.

43
00:03:24.210 --> 00:03:27.270
So we can go to routes post.

44
00:03:27.870 --> 00:03:33.840
You can see we have the request and mirror that gives us the user side in the request object.

45
00:03:33.840 --> 00:03:44.820
So based on that we can find the user goes to use a good student or we use a modern find by the request

46
00:03:44.820 --> 00:03:48.450
to use your end user once we get the user.

47
00:03:49.890 --> 00:03:51.570
We can take for you this room.

48
00:03:51.870 --> 00:03:55.370
So I'm going to use a suitcase, Fitz.

49
00:03:57.150 --> 00:04:03.960
We're going to have the value there, and then we're going to take for each case.

50
00:04:04.170 --> 00:04:06.930
So treat the user to its.

51
00:04:10.470 --> 00:04:13.980
So this rule could be admin, could be author, could be subscribe.

52
00:04:13.980 --> 00:04:14.760
It could be any.

53
00:04:15.030 --> 00:04:15.270
Right.

54
00:04:15.600 --> 00:04:16.890
So we have to take you.

55
00:04:17.160 --> 00:04:20.430
So first case we're going to take is for the admin.

56
00:04:20.790 --> 00:04:24.570
So if the user goal is admin, in that case, what do you want to do?

57
00:04:25.320 --> 00:04:30.750
We want to execute the next function because that's fine.

58
00:04:30.900 --> 00:04:34.530
You know, if the user is admin, he can create post.

59
00:04:34.530 --> 00:04:35.790
So we execute next.

60
00:04:36.330 --> 00:04:37.860
Now we take for another case.

61
00:04:40.940 --> 00:04:41.510
Down here.

62
00:04:41.510 --> 00:04:43.520
KISS is awesome.

63
00:04:43.940 --> 00:04:51.680
So is the kiss also in that case, also we execute mixed because both admin and also we want to allow

64
00:04:51.680 --> 00:04:53.500
them to create boost.

65
00:04:53.860 --> 00:04:54.110
Right.

66
00:04:54.110 --> 00:04:55.710
So let's create intrigue.

67
00:04:56.300 --> 00:04:58.010
Now another kiss is.

68
00:04:59.920 --> 00:05:03.670
By the way, each case want to execute that we can use.

69
00:05:03.670 --> 00:05:04.090
We break.

70
00:05:07.410 --> 00:05:10.140
Because there's no need to execute any more code here.

71
00:05:11.160 --> 00:05:17.680
So admin officer and then the next one is we need to have a default case.

72
00:05:17.800 --> 00:05:22.620
So by default we want to send the error messages.

73
00:05:22.740 --> 00:05:32.010
So the response, send the message on throws with this static score of 403, which is unauthorised.

74
00:05:32.880 --> 00:05:37.560
So as you can see, this will work in basically text for the user role if it is admin.

75
00:05:37.680 --> 00:05:38.280
That's okay.

76
00:05:38.520 --> 00:05:44.850
If it is also that so otherwise for anything else by default we are giving the error messages.

77
00:05:46.920 --> 00:05:48.810
And that is all he needs.

78
00:05:48.990 --> 00:05:50.520
That's how great, Ingrid.

79
00:05:50.940 --> 00:05:56.340
Now, let's move on to update and delete this one.

80
00:05:56.340 --> 00:06:02.240
Also going to work similarly to this one, but we have to perform additional tech.

81
00:06:02.940 --> 00:06:05.850
So here, what are we going to be reviewing to find the user just like this?

82
00:06:06.210 --> 00:06:10.500
So you can actually copy if you want to copy, then come here.

83
00:06:12.000 --> 00:06:14.970
So now we friend the user, right?

84
00:06:15.270 --> 00:06:18.300
So once you find the user, you also want to find the post.

85
00:06:18.300 --> 00:06:22.140
Because what we going to work on here is we want to make sure.

86
00:06:23.640 --> 00:06:28.800
The particular post can be edited, updated or deleted by this user.

87
00:06:29.070 --> 00:06:31.910
So that means we need to find that post as well.

88
00:06:35.750 --> 00:06:45.770
So that post we should be receiving in the requests forums here, for example, remove post.

89
00:06:45.950 --> 00:06:47.600
So therefore deleting a post.

90
00:06:47.600 --> 00:06:51.290
We always send the post posting to edit the post.

91
00:06:51.290 --> 00:06:52.500
We are sending the post.

92
00:06:52.960 --> 00:06:53.390
All right.

93
00:06:53.450 --> 00:06:55.280
So this is the request params.

94
00:06:55.520 --> 00:06:56.540
So this is important.

95
00:06:57.410 --> 00:06:57.770
All right.

96
00:06:57.770 --> 00:07:03.560
So based on the request params, we can find this post before.

97
00:07:04.610 --> 00:07:08.450
So it's middle words are executed so we can access this value.

98
00:07:09.650 --> 00:07:10.130
So here.

99
00:07:11.290 --> 00:07:13.090
You can find the post based on that.

100
00:07:13.730 --> 00:07:19.330
Can sniff a wheat post or find by IED.

101
00:07:20.140 --> 00:07:27.310
And that's going to read, request parents post I.D. and make sure we have the post made post mortem

102
00:07:27.310 --> 00:07:29.290
laptop we don't have.

103
00:07:29.380 --> 00:07:37.030
It's important in both post for Morgan's post.

104
00:07:39.940 --> 00:07:40.210
All right.

105
00:07:40.210 --> 00:07:41.910
So we got the post.

106
00:07:42.640 --> 00:07:43.570
We got to use it.

107
00:07:44.500 --> 00:07:50.920
We got the user based on the current request to use it post based on the request params.

108
00:07:51.310 --> 00:07:56.650
Now what are we going to do is we're going to tick because it's post have the posted by.

109
00:07:57.520 --> 00:08:02.980
Property and that posted by property has the uses and we've created the post.

110
00:08:03.340 --> 00:08:03.610
Right.

111
00:08:03.820 --> 00:08:09.370
So we can compare that posted by ID with the user site.

112
00:08:09.670 --> 00:08:18.010
And if the met, that means this is the correct to use or we can allow him to edit or delete the post.

113
00:08:19.030 --> 00:08:19.330
All right.

114
00:08:19.330 --> 00:08:23.830
So that's how it's going to work so we can use suites.

115
00:08:28.380 --> 00:08:28.830
Sweet.

116
00:08:28.830 --> 00:08:31.130
And then we take for the kiss admin.

117
00:08:31.140 --> 00:08:35.880
If it is admin, then we just allow him to do.

118
00:08:36.840 --> 00:08:42.540
We don't need any additional takes and that is the extra privilege for admin for here.

119
00:08:42.540 --> 00:08:49.110
Also you can take if you want to the admin to do it only his post, not other people's first.

120
00:08:49.110 --> 00:08:55.470
You can add that, but I think for admin we want to give some extra authority, so let's leave it like

121
00:08:55.470 --> 00:08:55.710
this.

122
00:08:56.250 --> 00:08:57.210
So that's for the admin.

123
00:08:57.210 --> 00:09:00.960
If the case is admin, no worries, they can just go ahead.

124
00:09:01.230 --> 00:09:01.860
We execute.

125
00:09:01.860 --> 00:09:04.590
Next of course is awesome.

126
00:09:07.080 --> 00:09:11.400
So if the cases offer, we want him to update and delete the post.

127
00:09:11.400 --> 00:09:20.520
But before we do that we want to take I so we want to take like this if the post also.

128
00:09:21.750 --> 00:09:21.960
No.

129
00:09:21.960 --> 00:09:34.530
That's actually a poster posted by Dirk on the school I.D. I guess to not understand it's a posted by

130
00:09:34.530 --> 00:09:41.280
by default is always I.D. so we we can't access like that we just to use this okay so you can have a

131
00:09:41.280 --> 00:09:43.440
look into the post from post mortem.

132
00:09:44.760 --> 00:09:45.630
Let's quickly have a look.

133
00:09:48.090 --> 00:09:56.070
So you can see we always have that posted by users I.D. in this property when we are creating a new

134
00:09:56.070 --> 00:09:56.520
post.

135
00:09:57.360 --> 00:10:00.270
So we always get that from the post.

136
00:10:00.270 --> 00:10:06.320
So we access that post posted by, which gives us the user side.

137
00:10:06.780 --> 00:10:16.350
So if that 80 Mets triple equal met with user, which you find user I.D., I guess if that meant that

138
00:10:17.130 --> 00:10:21.300
this user is actually trying to update or delete his on post.

139
00:10:21.300 --> 00:10:22.860
So that's okay.

140
00:10:23.460 --> 00:10:23.700
All right.

141
00:10:24.030 --> 00:10:28.080
So here you can you'll notice that we have used Docstring.

142
00:10:29.550 --> 00:10:32.640
The reason for that is we are.

143
00:10:34.460 --> 00:10:38.270
Running this comparison, triple equal stripped comparison.

144
00:10:38.270 --> 00:10:42.980
So for that reason, both backs have to be converted to a strict.

145
00:10:44.030 --> 00:10:44.260
All right.

146
00:10:44.270 --> 00:10:46.160
So that's how the triple equal works.

147
00:10:46.880 --> 00:10:51.490
Now, if you don't don't want to use too strict, then that's okay.

148
00:10:51.500 --> 00:10:52.400
You don't have to.

149
00:10:52.820 --> 00:10:58.880
But in that case, you cannot use this to build equal, which is the strict.

150
00:11:00.420 --> 00:11:03.720
Strict triple strict comparison operates.

151
00:11:03.750 --> 00:11:05.830
So you have to use double equal only.

152
00:11:06.270 --> 00:11:06.920
So it's up to you.

153
00:11:06.930 --> 00:11:13.350
You can continue using double equal or if you want to use triple equals, which is used most of the

154
00:11:13.350 --> 00:11:13.680
time.

155
00:11:13.680 --> 00:11:17.250
So to avoid any confusion, we can continue using triple equal.

156
00:11:17.250 --> 00:11:24.150
But in that case you have to convert both values to strength using the two string function.

157
00:11:25.680 --> 00:11:26.010
All right.

158
00:11:26.490 --> 00:11:33.570
So if the user if the uses alpha we take if the post way in the London use society sim if it is sim,

159
00:11:34.860 --> 00:11:35.430
that's okay.

160
00:11:36.060 --> 00:11:38.820
Otherwise we can send some kind of error message.

161
00:11:39.990 --> 00:11:41.370
Now in Node.js.

162
00:11:41.370 --> 00:11:45.630
It's always good practice to check for the errors first.

163
00:11:45.780 --> 00:11:46.060
So.

164
00:11:46.620 --> 00:11:56.070
So what we can do here is instead of typically we can think if not equal, okay, so if not equal,

165
00:11:56.550 --> 00:11:58.440
then we send our misses.

166
00:11:58.440 --> 00:12:02.970
Otherwise we send mixed, we execute next.

167
00:12:03.480 --> 00:12:12.810
So if the ideas don't met, then return response that is hundred three sent on authorize.

168
00:12:13.290 --> 00:12:14.970
Otherwise it's all good.

169
00:12:14.970 --> 00:12:16.290
We execute next.

170
00:12:18.150 --> 00:12:18.430
Yes.

171
00:12:18.540 --> 00:12:19.860
If that's the case, Arthur.

172
00:12:20.460 --> 00:12:20.850
And.

173
00:12:24.960 --> 00:12:29.130
We can hirano the default case by default.

174
00:12:29.520 --> 00:12:31.370
Also, we are sending the error messages.

175
00:12:33.010 --> 00:12:33.310
All right.

176
00:12:35.240 --> 00:12:38.680
I said that's for Camp Update and delete post.

177
00:12:39.370 --> 00:12:40.960
So that's how we're going to make sure.

178
00:12:41.080 --> 00:12:46.120
Only the user only the owner is able to update into it.

179
00:12:46.730 --> 00:12:50.880
Now let's move on to the last one is for deleting media two.

180
00:12:50.890 --> 00:12:54.160
That's going to have a similar comparison.

181
00:12:54.370 --> 00:12:54.610
All right.

182
00:12:54.610 --> 00:12:56.980
So we can delete media.

183
00:12:56.980 --> 00:13:00.390
So here what we can do again for deleting media.

184
00:13:00.400 --> 00:13:04.780
Also, you will be receiving the media I.D. in the request params.

185
00:13:05.470 --> 00:13:10.180
So let me quickly go to authorize post postcards.

186
00:13:10.600 --> 00:13:16.840
And you can see here, whenever we want to delete a media, we are sending the media ID so we can access

187
00:13:16.840 --> 00:13:20.770
that and find the media first response media.

188
00:13:22.580 --> 00:13:30.320
It would still await Million Dollar Fine by i-D and that will be request for arms.

189
00:13:31.490 --> 00:13:35.600
Just IDI We didn't call it media IDI If you've called it Media IDI here.

190
00:13:36.350 --> 00:13:38.330
Then you can access like that.

191
00:13:38.340 --> 00:13:40.940
But since we call it just IDI, we can you just.

192
00:13:43.430 --> 00:13:47.150
All right, let me make sure I have this media model top.

193
00:14:00.100 --> 00:14:00.460
All right.

194
00:14:00.830 --> 00:14:02.230
No, let's cut down.

195
00:14:05.200 --> 00:14:06.220
So we find the media.

196
00:14:06.550 --> 00:14:12.820
Once we find the media again, we can take if it is take for the user room, we we use suites.

197
00:14:16.310 --> 00:14:17.900
Street user done.

198
00:14:17.920 --> 00:14:24.020
So that means we have to have the user query as well.

199
00:14:24.020 --> 00:14:25.610
So let's grab this line.

200
00:14:33.470 --> 00:14:33.770
All right.

201
00:14:35.000 --> 00:14:36.830
So we have the user, we have the media.

202
00:14:36.830 --> 00:14:39.860
Then we're going to take the case.

203
00:14:42.980 --> 00:14:50.660
Admin if the case advent we execute next week.

204
00:14:52.350 --> 00:14:53.860
Give me the stones each year.

205
00:15:03.140 --> 00:15:04.970
So if else we have the if still.

206
00:15:04.970 --> 00:15:06.530
And then again we can break.

207
00:15:09.660 --> 00:15:10.890
And by default we have that.

208
00:15:15.230 --> 00:15:18.260
So let's go down and continue here.

209
00:15:20.660 --> 00:15:27.170
So if it is admin we exclude that if the case is awesome.

210
00:15:30.020 --> 00:15:33.140
Then again, we're going to take.

211
00:15:34.760 --> 00:15:41.700
Similar, I guess if else and then vaguely scoping that space time.

212
00:15:42.590 --> 00:15:51.980
Now here this time it's forced it's going to be media rights if media also has the push to their property.

213
00:15:51.980 --> 00:15:58.610
So if posted by equals, not equals to user ID.

214
00:16:00.440 --> 00:16:10.640
Oh, actually I wouldn't have to make query using the user because request user ID we get from the middleware

215
00:16:11.240 --> 00:16:13.460
so that that is sufficient.

216
00:16:13.460 --> 00:16:14.870
So we don't have to have that.

217
00:16:17.090 --> 00:16:19.820
So let me call it a request.

218
00:16:19.880 --> 00:16:21.560
Don't use it on the scribe.

219
00:16:23.360 --> 00:16:23.630
Okay.

220
00:16:23.870 --> 00:16:27.200
And if it if it doesn't match, we send this error message.

221
00:16:27.210 --> 00:16:29.420
Otherwise, we execute next.

222
00:16:30.050 --> 00:16:31.700
That is perfect.

223
00:16:32.120 --> 00:16:37.790
Now, let me quickly fix this so we we don't have to make this additional query to the database to find

224
00:16:37.790 --> 00:16:44.150
the user, because all we need is use this idea which we get from the request to user from that request

225
00:16:44.150 --> 00:16:45.900
signing middleware.

226
00:16:45.900 --> 00:16:46.970
So let's move of that.

227
00:16:48.860 --> 00:16:52.190
I guess, make sure you use request to user from the scribe.

228
00:16:52.190 --> 00:16:56.540
We can delete millions of it's for that.

229
00:16:58.160 --> 00:16:59.510
Oh sorry.

230
00:16:59.520 --> 00:17:01.640
Sucks my bad.

231
00:17:01.730 --> 00:17:03.830
We are actually taken for the wrong answer.

232
00:17:04.590 --> 00:17:04.810
Okay.

233
00:17:04.950 --> 00:17:06.110
So we still need that.

234
00:17:07.370 --> 00:17:07.730
Okay.

235
00:17:08.360 --> 00:17:09.110
So it's all good.

236
00:17:09.590 --> 00:17:14.390
So we have it can delete media can update, delete post.

237
00:17:16.870 --> 00:17:18.190
And can create an.

238
00:17:19.060 --> 00:17:23.620
Now we're going to use these middle words in our postcards strokes you.
