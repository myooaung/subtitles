WEBVTT
1
00:00:01.020 --> 00:00:01.370
All right.

2
00:00:01.380 --> 00:00:03.540
So we worked on.

3
00:00:04.670 --> 00:00:06.260
The user profile update.

4
00:00:07.190 --> 00:00:09.080
All the users cannot read the profile.

5
00:00:09.110 --> 00:00:13.010
Now moving forward, we want to work on the post.

6
00:00:13.160 --> 00:00:13.940
So you continue.

7
00:00:14.660 --> 00:00:18.830
At the moment we are sending all the posts from the back end.

8
00:00:19.130 --> 00:00:24.940
So that means if we have hundreds or even thousands of posts, all of them are being sent that that's

9
00:00:24.950 --> 00:00:30.650
not going to work, especially if you have hundreds or thousands of posts you're sending all of them

10
00:00:30.650 --> 00:00:34.100
at once will make your website really slow.

11
00:00:34.490 --> 00:00:34.730
All right.

12
00:00:34.910 --> 00:00:39.620
So what are we going to do is we're going to implement some kind of load and more feature.

13
00:00:40.730 --> 00:00:43.910
It's similar to pagination, but it's a little more so.

14
00:00:43.910 --> 00:00:46.250
Let me show you the finished project, how I did it.

15
00:00:46.670 --> 00:00:54.980
So you can see we are just showing six ladies first when anyone learnt and this is now if they want

16
00:00:54.980 --> 00:00:59.330
to view more they will click on this button and then that would load more.

17
00:00:59.570 --> 00:01:04.040
Now we want to get the work again.

18
00:01:04.070 --> 00:01:10.760
You can click and load more and you can load more as long as there is any post remaining, right?

19
00:01:10.760 --> 00:01:12.200
So that's all the post we have now.

20
00:01:12.200 --> 00:01:17.870
So you can see we did have the button anymore and these are the post, all the posts we have.

21
00:01:18.590 --> 00:01:18.790
All right.

22
00:01:18.800 --> 00:01:19.910
So we're going to implement.

23
00:01:21.690 --> 00:01:27.210
So we're going to implement this feature a little more in our project.

24
00:01:27.480 --> 00:01:31.560
So for that, first thing we need is a walk in our back in.

25
00:01:32.040 --> 00:01:39.240
So what we need to do is we need to create to one end point and that will give us how many posts we

26
00:01:39.240 --> 00:01:40.170
have in the database.

27
00:01:40.440 --> 00:01:45.000
So the total number of the blog posts are available.

28
00:01:45.000 --> 00:01:48.670
So we need to know that number and then we can compare.

29
00:01:48.690 --> 00:01:56.370
So if that total number is higher than what we have in the state, that means we can serve the Lord,

30
00:01:56.370 --> 00:01:57.570
my partner, Richard.

31
00:01:57.570 --> 00:01:58.800
That's how we're going to implement.

32
00:01:59.310 --> 00:02:03.150
And at the moment we are making requests to get all the posts.

33
00:02:03.210 --> 00:02:09.540
So that end point also we have to slightly tooth because every time they click on the button we will

34
00:02:09.540 --> 00:02:11.520
increase the base count by one.

35
00:02:11.640 --> 00:02:13.540
And that value we send to the back end.

36
00:02:13.560 --> 00:02:17.100
So based on that count, the new post will be sent.

37
00:02:18.300 --> 00:02:25.470
All right, so let's head over to the back end and firstly, screw that and that will give us the total

38
00:02:25.470 --> 00:02:28.680
number of posts available in our database.

39
00:02:32.630 --> 00:02:35.330
So we can start with our roads post.

40
00:02:37.890 --> 00:02:40.890
I used to hear lifts and they're all relative.

41
00:02:40.890 --> 00:02:42.470
Don't get.

42
00:02:43.590 --> 00:02:45.090
We call it post count

43
00:02:47.880 --> 00:02:50.500
and we create a function post.

44
00:02:51.110 --> 00:02:58.560
Can't actually import that from our control post account.

45
00:02:59.730 --> 00:03:01.080
Controllers post.

46
00:03:01.260 --> 00:03:02.280
Let's read that here.

47
00:03:06.370 --> 00:03:11.470
Export owned post code equals to async.

48
00:03:14.200 --> 00:03:15.820
Requests response.

49
00:03:30.860 --> 00:03:38.840
So with monkeys, there's a function that we can use to get the total count of the documents using the

50
00:03:38.840 --> 00:03:40.190
count documents function.

51
00:03:40.760 --> 00:03:46.550
I guess we use the modern postmark and then use this function count documents that will give us the

52
00:03:46.550 --> 00:03:53.450
total number of the documents available to a total amount of posts available, and we can simply return

53
00:03:53.450 --> 00:03:54.170
that number.

54
00:03:55.580 --> 00:03:55.890
Okay.

55
00:03:56.240 --> 00:03:58.610
So if you want to give it a try, you can even give it a try.

56
00:03:59.610 --> 00:04:02.690
Local localhost, 8000.

57
00:04:04.930 --> 00:04:08.800
API says postcards.

58
00:04:10.150 --> 00:04:12.970
You can see we have done 14 posts so we get that number.

59
00:04:13.930 --> 00:04:15.570
So that's great.

60
00:04:15.580 --> 00:04:18.420
We have got the disk working.

61
00:04:18.420 --> 00:04:24.160
Now, next thing we need to do is we need to modify our posts.

62
00:04:24.370 --> 00:04:31.630
So this is the control function that is giving us all the post here to limit down to by going to our

63
00:04:31.630 --> 00:04:32.170
client.

64
00:04:34.360 --> 00:04:39.130
That's interfaces, posts come all the way down here.

65
00:04:39.910 --> 00:04:40.720
And yes.

66
00:04:40.720 --> 00:04:44.530
So we're making requests to less post to get on the post.

67
00:04:45.520 --> 00:04:49.600
So that means so let's go to our controller.

68
00:04:51.320 --> 00:04:52.910
Let's go to Robert Frost.

69
00:04:57.580 --> 00:04:58.630
So this post.

70
00:04:58.720 --> 00:04:59.920
All right, click here.

71
00:05:00.820 --> 00:05:08.860
So this function we have to modify so that instead of sending all the the post you want to limit.

72
00:05:08.860 --> 00:05:12.280
So maybe send ten.

73
00:05:13.440 --> 00:05:19.130
20 years, something like this time in our project I in this course, I'm just going to use 6%.

74
00:05:19.140 --> 00:05:26.910
We don't have many blockbusters to add in the six and only six post at a time, but if they click learn

75
00:05:26.910 --> 00:05:28.330
more, we get more requests.

76
00:05:28.330 --> 00:05:33.660
Then we give to Skip whatever was under the set and then send the additional ones.

77
00:05:34.260 --> 00:05:34.500
All right.

78
00:05:34.860 --> 00:05:39.570
So instead of modifying this one, I'm going to just copy and convert this out.

79
00:05:39.960 --> 00:05:43.500
I leave it here for the for your reference later if you want to use it.

80
00:05:44.040 --> 00:05:52.110
But now we're going to modify this to support the load more feature to basically pagination.

81
00:05:52.770 --> 00:05:56.730
So let's make a small change on the road first.

82
00:05:56.940 --> 00:06:02.850
So here now we will be sending this base.

83
00:06:03.090 --> 00:06:04.770
So we'll be sending the base number.

84
00:06:05.220 --> 00:06:08.310
I guess by default it would be one.

85
00:06:09.330 --> 00:06:15.060
And then if they click the Lord Mountbatten, then that will increase to two, three, four and so on.

86
00:06:15.630 --> 00:06:22.230
So based on that number, we will be sending the post here, I guess, to make this turns in your route.

87
00:06:24.480 --> 00:06:28.990
You may have to copy this front, put it on top and just streamline.

88
00:06:29.010 --> 00:06:31.200
That's a previously we were using like this one.

89
00:06:32.100 --> 00:06:35.640
There is a previous tool we were using like this one now we added base.

90
00:06:36.360 --> 00:06:37.680
Okay, so same here.

91
00:06:38.330 --> 00:06:39.090
The control.

92
00:06:41.750 --> 00:06:45.290
So previously we had this function, but now we're going to use this.

93
00:06:48.890 --> 00:06:50.720
I guess let's make some changes here.

94
00:06:50.720 --> 00:06:56.660
So first thing we want to do is we want to set how many posts we want to send on each request.

95
00:06:57.230 --> 00:07:02.000
So if we have if you don't have many posts, you can even put it three.

96
00:07:02.000 --> 00:07:02.990
One, two, three.

97
00:07:02.990 --> 00:07:03.500
Doesn't matter.

98
00:07:03.770 --> 00:07:05.420
I'm going to use six again.

99
00:07:05.900 --> 00:07:09.380
So constant or is is six.

100
00:07:09.380 --> 00:07:16.820
So we will be sending six force four based on a request and we need to access the base values.

101
00:07:16.820 --> 00:07:17.060
Right.

102
00:07:17.060 --> 00:07:19.490
So that will be coming in the request query.

103
00:07:19.640 --> 00:07:20.810
So we have already.

104
00:07:21.770 --> 00:07:23.900
So let's open the road again.

105
00:07:24.710 --> 00:07:28.490
So I wanted to make this turn so we can receive the base.

106
00:07:29.030 --> 00:07:31.100
Base from their request, perhaps.

107
00:07:33.840 --> 00:07:39.110
I guess a higher base will be receiving from request query base.

108
00:07:39.720 --> 00:07:41.050
Whatever value we are getting.

109
00:07:41.340 --> 00:07:45.900
If we don't get that, then we just use value one by default.

110
00:07:46.470 --> 00:07:46.770
All right.

111
00:07:47.220 --> 00:07:52.170
So here now all of we find the posts when we find the post.

112
00:07:53.010 --> 00:07:59.160
First thing we can do is we to skip because we will be sending requests with the Lord Mountbatten.

113
00:07:59.160 --> 00:08:03.660
We will be receiving more than one request to the same control function.

114
00:08:04.020 --> 00:08:04.950
It's the same function.

115
00:08:04.950 --> 00:08:06.660
We'll responsible to send the post.

116
00:08:07.110 --> 00:08:12.060
So we're going to skip this.

117
00:08:12.510 --> 00:08:12.990
Skip.

118
00:08:14.200 --> 00:08:14.450
It's.

119
00:08:18.010 --> 00:08:18.490
Bass.

120
00:08:19.180 --> 00:08:20.080
So whatever that is.

121
00:08:20.080 --> 00:08:22.430
One, two, three, whatever that is, minus one.

122
00:08:23.690 --> 00:08:23.860
Okay.

123
00:08:23.950 --> 00:08:28.730
So that means on the very first request, it will be one minus one.

124
00:08:28.750 --> 00:08:29.230
What then?

125
00:08:29.230 --> 00:08:30.640
What is that one minus one.

126
00:08:30.640 --> 00:08:32.330
That's zero.

127
00:08:32.740 --> 00:08:32.950
All right.

128
00:08:33.100 --> 00:08:38.760
So what that means on the very first request, they will be no ski will be sending six force.

129
00:08:39.100 --> 00:08:47.260
But on the subsequent request, if the Lord moment has been cleared, then next time it'll be 2 to 2

130
00:08:47.260 --> 00:08:47.830
minus one.

131
00:08:47.830 --> 00:08:48.570
That will be one.

132
00:08:48.580 --> 00:08:55.860
So we will be skipping the six and then if it is three, then the 12 will be skip.

133
00:08:55.900 --> 00:09:02.050
So that's how we skip the the previous post and then descend new ones.

134
00:09:03.010 --> 00:09:11.080
So Bayes minus one multiplied by our and multiply by six is that we skip the previous one and give the

135
00:09:11.100 --> 00:09:14.950
six written send the six post.

136
00:09:15.520 --> 00:09:18.940
Okay, so we skip then populate populate.

137
00:09:18.940 --> 00:09:22.750
We use all that and start out is here.

138
00:09:24.950 --> 00:09:27.590
Now let's also use the debt limit.

139
00:09:28.610 --> 00:09:33.950
So it's request will limit the amount of post that is six.

140
00:09:34.290 --> 00:09:39.270
So we're just sending six and that is all we need to do.

141
00:09:39.290 --> 00:09:45.170
So that's all the change we need to make to support the pagination, the normal feature.

142
00:09:46.640 --> 00:09:49.280
Okay, so with that, let's come here.

143
00:09:49.280 --> 00:09:50.210
Let's give it a try.

144
00:09:52.190 --> 00:09:52.400
Okay.

145
00:09:52.400 --> 00:09:53.690
So we don't get any recourse.

146
00:09:53.690 --> 00:09:54.380
We have the error.

147
00:09:54.380 --> 00:09:56.330
That's because at the moment.

148
00:09:58.200 --> 00:10:02.820
When we make request, we are sending the page in the request query again.

149
00:10:03.150 --> 00:10:04.260
So we have to send that.

150
00:10:04.740 --> 00:10:06.060
Otherwise we get the error.

151
00:10:06.420 --> 00:10:11.190
So immediately you can go to the client and here you can send.

152
00:10:11.190 --> 00:10:13.560
Let's let's hardcourt for now.

153
00:10:13.740 --> 00:10:14.040
Okay.

154
00:10:14.220 --> 00:10:17.150
To send one now if you try.

155
00:10:19.800 --> 00:10:20.550
That works.

156
00:10:21.330 --> 00:10:21.600
All right.

157
00:10:21.870 --> 00:10:26.040
So in the following video, let's implement that normal feature.

158
00:10:26.040 --> 00:10:32.790
So when the button is clicked, we increment the value we send, send a request to get additional posts

159
00:10:32.790 --> 00:10:34.290
so that we can arrange it here.
