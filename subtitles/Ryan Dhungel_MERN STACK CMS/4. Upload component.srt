1
00:00:00,630 --> 00:00:00,930
All right.

2
00:00:00,930 --> 00:00:04,730
So now we have this fight, we have these tabs, we have these companies.

3
00:00:04,740 --> 00:00:11,400
Next thing we do is actually work on the implementation of invisible reversal.

4
00:00:11,400 --> 00:00:19,140
We're going to use one endpoint in the back end that will expect the images data.

5
00:00:19,710 --> 00:00:22,560
So from data we will be sending emails as a form data.

6
00:00:23,070 --> 00:00:29,520
So we need to create the routes and the control function, but we just need one in the back end.

7
00:00:29,520 --> 00:00:34,080
But in the front end, we're going to have these two, two components.

8
00:00:34,080 --> 00:00:41,250
One will have the single route, one will have multiple routes, and it will alter so all the the media

9
00:00:41,250 --> 00:00:41,940
libraries.

10
00:00:42,390 --> 00:00:42,630
All right.

11
00:00:43,320 --> 00:00:48,870
So here we I think we have to change the name of route files to just file.

12
00:00:50,410 --> 00:00:51,460
I'm sorry about that.

13
00:00:51,490 --> 00:00:59,080
I was expecting that to be multiple upload, but instead we're going to have the multiple library in

14
00:00:59,080 --> 00:01:02,320
the library and it'll support the drag and drop as well.

15
00:01:02,740 --> 00:01:06,880
So we just got a singular single number file and media flow.

16
00:01:07,540 --> 00:01:07,720
All right.

17
00:01:07,720 --> 00:01:13,570
So let me quickly take it to the end events, official documentation, and we're going to use the upload

18
00:01:13,780 --> 00:01:19,180
component for uploading single images, which you can see here.

19
00:01:21,040 --> 00:01:28,480
That's for uploading single single file and this one for multiple files you can click or drag.

20
00:01:31,520 --> 00:01:36,020
But for both of them, we just need one endpoint in the back in two that makes things easier.

21
00:01:36,680 --> 00:01:40,940
And we basically upload to cloud an area and that will give us the you are right.

22
00:01:41,690 --> 00:01:46,370
So let me just search you upload.

23
00:01:49,760 --> 00:01:53,830
You can see so this is the button, this is the functionality you can turn on to call.

24
00:01:54,500 --> 00:01:58,640
So we're going to use that one for single upload and for multiple upload.

25
00:01:58,640 --> 00:02:02,930
We'll be using this one and not that one.

26
00:02:02,930 --> 00:02:04,580
So this one to click and drag.

27
00:02:05,660 --> 00:02:07,190
So let's quickly have a look at this one.

28
00:02:07,580 --> 00:02:09,710
So single upload, it can take out the code.

29
00:02:10,370 --> 00:02:12,290
This one looks a little bit different.

30
00:02:12,290 --> 00:02:18,350
So how it works is they have this component of and it receives the props.

31
00:02:18,350 --> 00:02:20,210
You you pass props.

32
00:02:20,540 --> 00:02:21,370
So props.

33
00:02:21,470 --> 00:02:23,420
This is where this is the props.

34
00:02:24,030 --> 00:02:24,320
Okay.

35
00:02:24,590 --> 00:02:25,790
So this is the props.

36
00:02:25,820 --> 00:02:27,050
This is basically an object.

37
00:02:27,280 --> 00:02:35,120
Now it has all these file properties, the name X and two X and basically will be the endpoint of your

38
00:02:35,120 --> 00:02:42,020
server, which will upload the image and give you the response, the uploaded image, you know, and

39
00:02:42,020 --> 00:02:49,700
have this you can turn the token in the house and whenever a user uploads on iTunes, the file is received

40
00:02:49,700 --> 00:02:50,330
like this one.

41
00:02:51,110 --> 00:02:51,440
I can.

42
00:02:53,050 --> 00:02:57,220
So you can track the status if it is uploading, if it is done.

43
00:02:57,640 --> 00:02:59,230
So that happens on tens.

44
00:03:00,640 --> 00:03:06,730
But the most important one here is you have the X and this is the endpoint that that's where the file

45
00:03:06,730 --> 00:03:07,660
will be sent.

46
00:03:07,990 --> 00:03:08,260
All right.

47
00:03:08,500 --> 00:03:10,390
And if you want to send the token, you have the header.

48
00:03:10,390 --> 00:03:15,010
So this is how we are going to upload the image using this component.

49
00:03:15,730 --> 00:03:16,000
All right.

50
00:03:16,240 --> 00:03:17,590
So let's give it a try.

51
00:03:19,950 --> 00:03:23,520
So it's good to upload a file sampler file.

52
00:03:23,940 --> 00:03:27,300
So first thing you want to do is import that from and

53
00:03:30,330 --> 00:03:40,020
import upload form and and along with that you want to import button as well.

54
00:03:40,560 --> 00:03:41,190
I need that.

55
00:03:44,550 --> 00:03:46,890
And let me just quickly down to here.

56
00:03:47,160 --> 00:03:52,890
Looks like we need to import the messages as well from and that will be used to.

57
00:03:55,320 --> 00:04:02,640
So the message to the user when it is uploaded, it is uploaded to that message to so that we can import

58
00:04:02,640 --> 00:04:05,460
messages which is which comes with.

59
00:04:05,460 --> 00:04:07,470
And so that's important as well.

60
00:04:13,880 --> 00:04:21,740
So here what we want is we want to have the access to the authentication as well.

61
00:04:21,740 --> 00:04:23,390
So we need to import context.

62
00:04:23,660 --> 00:04:28,460
The reason for that is the upload route in the back end will be secured.

63
00:04:28,520 --> 00:04:31,220
So we need to send the token, right?

64
00:04:31,220 --> 00:04:36,860
So otherwise anyone can upload so we can leave the road open like that.

65
00:04:36,860 --> 00:04:39,110
So it must be for the logged in use only.

66
00:04:39,110 --> 00:04:44,450
So that means to send the token in the heritage just like you can in the example.

67
00:04:45,140 --> 00:04:48,880
To do that we need to have access to the context.

68
00:04:49,010 --> 00:04:49,910
Let's import

69
00:04:53,360 --> 00:04:54,920
our context from

70
00:04:59,390 --> 00:05:01,640
this context.

71
00:05:03,680 --> 00:05:06,350
So we go one step, two step of.

72
00:05:09,050 --> 00:05:10,580
Context of.

73
00:05:12,160 --> 00:05:16,210
And let's also make sure we empower youth context to.

74
00:05:22,660 --> 00:05:23,020
Okay.

75
00:05:24,760 --> 00:05:30,160
And we also want to approve import the icon of your icon from Aunt

76
00:05:34,100 --> 00:05:38,530
Metro in this called upload outline.

77
00:05:40,750 --> 00:05:42,200
I did so with that.

78
00:05:42,220 --> 00:05:42,940
Let's.

79
00:05:45,680 --> 00:05:55,960
First access to the context so that we can give the token context of CET Article six, context or context

80
00:05:55,970 --> 00:05:58,010
and give us the oath.

81
00:05:58,130 --> 00:05:59,600
We can grab the token from that.

82
00:06:00,740 --> 00:06:03,420
Then we can return.

83
00:06:03,740 --> 00:06:10,160
So let's return the upload component to upload.

84
00:06:14,940 --> 00:06:22,140
So here, just like you saw in the documentation process, we have to use that so we can describe that

85
00:06:22,320 --> 00:06:24,300
second process.

86
00:06:29,660 --> 00:06:30,720
So we'll come back to it.

87
00:06:31,630 --> 00:06:38,430
So the first and then this one actually you can use for multiple upload as well.

88
00:06:38,430 --> 00:06:43,170
See, we're going to just limit to one, but you can.

89
00:06:43,440 --> 00:06:43,740
Yeah.

90
00:06:43,860 --> 00:06:45,240
Do multiple upload as well.

91
00:06:45,240 --> 00:06:49,790
So mix count to make it just one.

92
00:06:49,800 --> 00:06:50,790
We can give it one.

93
00:06:51,060 --> 00:06:56,040
The reason we're doing this is we're going to have the media library where we're going to have the drag

94
00:06:56,040 --> 00:06:57,150
and drop multiple approach.

95
00:06:57,330 --> 00:07:02,340
So we want to make it just for one upload, single upload, SIMEX second one.

96
00:07:03,690 --> 00:07:08,910
And then here basically we just need a button that says something, right?

97
00:07:08,910 --> 00:07:16,290
So button and we can call it click to upload.

98
00:07:20,050 --> 00:07:20,380
Okay.

99
00:07:20,680 --> 00:07:28,120
And then Barton, he can give the I can do the Barton that one upload our client.

100
00:07:30,990 --> 00:07:37,910
I guess we need to work on the props, but otherwise we should have this component visible with the

101
00:07:37,910 --> 00:07:38,240
button.

102
00:07:38,240 --> 00:07:39,290
Let's try.

103
00:07:49,060 --> 00:07:52,150
Objects are not valid and signed.

104
00:07:59,690 --> 00:08:00,080
Okay.

105
00:08:00,080 --> 00:08:04,250
So then that was a bit confusing.

106
00:08:07,430 --> 00:08:10,380
So what happened is it's the issues in the botnet.

107
00:08:10,850 --> 00:08:15,330
When I click, we get that of the child.

108
00:08:15,650 --> 00:08:19,340
If you meant to render a collection of children are using a reinstall.

109
00:08:20,540 --> 00:08:23,630
The problem is it's in the button.

110
00:08:23,810 --> 00:08:28,910
So I took the button and I realized that you can see the icon.

111
00:08:28,910 --> 00:08:32,280
It's actually be a component to it.

112
00:08:33,290 --> 00:08:37,730
I can is treated as a component, so we have to use it like that.

113
00:08:37,740 --> 00:08:38,960
So that was the problem.

114
00:08:39,500 --> 00:08:45,740
So things like this can be a little confusing, but hopefully you don't run into issues like this a

115
00:08:45,740 --> 00:08:46,050
lot.

116
00:08:46,700 --> 00:08:47,100
Okay.

117
00:08:47,120 --> 00:08:51,710
So I just had to use it as a component with that.

118
00:08:58,840 --> 00:09:01,520
You know, it works out.

119
00:09:01,780 --> 00:09:12,130
We have this button when we click it to open up this the file browser so we can find the images and

120
00:09:12,130 --> 00:09:12,670
upload.

121
00:09:13,930 --> 00:09:14,170
All right.

122
00:09:14,410 --> 00:09:19,180
So that means for this to work, obviously we have to work on this process, just like we saw in the

123
00:09:19,180 --> 00:09:20,440
official documentation.

124
00:09:21,280 --> 00:09:22,180
We have to.

125
00:09:25,680 --> 00:09:33,930
Make a request to the backhand in the accent to that's going to be the API endpoint and then we can

126
00:09:33,930 --> 00:09:36,830
send the token, we can handle the on tens as well.
