1
00:00:00,450 --> 00:00:00,930
Next.

2
00:00:01,110 --> 00:00:12,810
Let's go back inside, blindfolded and in the ground for let's see what we have get ignored declined

3
00:00:12,810 --> 00:00:18,600
to get ignored used to next and non-Muslims who didn't have to worry about that Ian with that local.

4
00:00:18,740 --> 00:00:24,540
This is the file we have to manually create just like in the several we had Ian V in next we have invited

5
00:00:24,540 --> 00:00:33,560
look at the city grind pseudo dot dot Ian we don't local.

6
00:00:34,640 --> 00:00:34,970
All right.

7
00:00:35,030 --> 00:00:45,840
Now let's get inside this fun pseudo v dirty invader, local place II.

8
00:00:47,060 --> 00:00:54,170
And let's insert the gold we need for Ian before it's limp.

9
00:00:54,200 --> 00:00:58,370
Copy that and put in a new file.

10
00:00:58,790 --> 00:01:00,530
Let's see if we need to make some changes.

11
00:01:01,010 --> 00:01:05,870
So the API now API because it's running in the same droplet, same domain.

12
00:01:06,380 --> 00:01:08,280
We don't have to have the full party.

13
00:01:08,280 --> 00:01:09,410
You can just leave it.

14
00:01:12,680 --> 00:01:16,700
So I think you can still use the IP address.

15
00:01:16,700 --> 00:01:20,060
But let me just get to that.

16
00:01:20,060 --> 00:01:21,810
Let's see if there's an issue.

17
00:01:21,810 --> 00:01:23,330
We will come back to this one.

18
00:01:23,600 --> 00:01:26,810
So public, maybe this runs in the grand set, so that's fine.

19
00:01:26,960 --> 00:01:33,500
However, this API we are using in the server side in the get server side prompts, so this one requires

20
00:01:33,510 --> 00:01:34,310
the full path.

21
00:01:35,060 --> 00:01:35,390
All right.

22
00:01:35,390 --> 00:01:46,430
So here we need to use the the IP address which you have here is that is the domain name at the moment.

23
00:01:46,480 --> 00:01:48,410
We don't have domain to just use IP.

24
00:01:53,940 --> 00:01:56,310
I guess a lot of us is that.

25
00:01:57,740 --> 00:01:58,460
With the IP.

26
00:01:58,790 --> 00:02:01,550
This one will be used by the server side props.

27
00:02:01,910 --> 00:02:05,600
However, for the client side we can just use less API.

28
00:02:06,110 --> 00:02:08,680
And then the strobe key.

29
00:02:08,690 --> 00:02:14,390
Obviously when you have the real payment you will get different keys, but for now you can just continue

30
00:02:14,390 --> 00:02:16,550
with this instead of Mid-Continent.

31
00:02:17,030 --> 00:02:24,740
So that's what we need in the products and at the end of it are locally based and a skip call and WQ

32
00:02:24,770 --> 00:02:25,430
hit enter.

33
00:02:26,000 --> 00:02:29,300
So that's how in V for the client as well.

34
00:02:29,990 --> 00:02:30,380
No.

35
00:02:32,350 --> 00:02:36,730
We just have to run npm install sudo npm install.

36
00:02:38,110 --> 00:02:46,660
Once it is done, we will build using NPM brand build and then we should be able to serve our app.

37
00:02:47,080 --> 00:02:47,620
Let's have a.

38
00:02:52,320 --> 00:02:55,830
Don't let me build and run.

39
00:02:55,830 --> 00:02:56,250
Build.

40
00:02:56,670 --> 00:02:57,930
Make sure to use certain.

41
00:03:04,030 --> 00:03:06,250
This may take awhile, depending on your.

42
00:03:08,780 --> 00:03:10,610
Actually, it doesn't really matter.

43
00:03:10,610 --> 00:03:14,350
You enter into and it is all running in the digital ocean.

44
00:03:15,200 --> 00:03:16,310
So hopefully.

45
00:03:17,800 --> 00:03:21,200
They're the droplet size you picked.

46
00:03:21,220 --> 00:03:24,880
I think you picked the the one that cost about 12 down.

47
00:03:25,090 --> 00:03:28,480
Hopefully, that should have enough memory to build.

48
00:03:31,580 --> 00:03:38,900
I've had some issues earlier when the application is slightly bigger and you tried to build using NPM,

49
00:03:38,900 --> 00:03:39,500
burn, build.

50
00:03:40,130 --> 00:03:45,350
It would run out of memory, would run out of RAM, but hopefully it works.

51
00:03:48,340 --> 00:03:49,090
So that's great.

52
00:03:49,090 --> 00:03:49,810
We have.

53
00:03:50,980 --> 00:03:54,370
Got this build process done.

54
00:03:54,970 --> 00:04:03,550
You can see next year automatically optimize all the bases to anything with this symbol that is completely

55
00:04:03,550 --> 00:04:04,450
services rendered.

56
00:04:04,990 --> 00:04:10,780
These are instead again, these are these are automatically generated as static as HTML plus.

57
00:04:11,170 --> 00:04:12,580
Jason So we got.

58
00:04:13,940 --> 00:04:16,100
There's different kinds of build you can see here.

59
00:04:16,790 --> 00:04:17,030
All right.

60
00:04:17,030 --> 00:04:19,550
So let's run the front end as well.

61
00:04:19,770 --> 00:04:25,010
We're going to use PM to start and PM test, test, start.

62
00:04:27,230 --> 00:04:27,670
Perfect.

63
00:04:28,460 --> 00:04:28,850
No.

64
00:04:30,640 --> 00:04:34,300
Let's have a look at our beautiful applications running live in the server.

65
00:04:36,700 --> 00:04:38,320
And there it is.

66
00:04:38,590 --> 00:04:39,910
How good is that?

67
00:04:41,110 --> 00:04:44,140
Obviously we didn't see anything, so we didn't have any coaches yet.

68
00:04:44,140 --> 00:04:45,670
But this is beautiful.

69
00:04:46,090 --> 00:04:51,640
You deployed the application to the lives of it.
