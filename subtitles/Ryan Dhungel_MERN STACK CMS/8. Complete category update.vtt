WEBVTT
1
00:00:00.330 --> 00:00:05.070
So we have got the updating category and we can make some changes as well.

2
00:00:05.070 --> 00:00:10.560
We can submit so this data we need to send to the back end and let's quickly have a look at the backend

3
00:00:11.010 --> 00:00:11.550
server.

4
00:00:11.550 --> 00:00:16.500
We have already created that fruit category put, right?

5
00:00:16.500 --> 00:00:21.030
So we have to send the slug in the root and this function executes.

6
00:00:21.030 --> 00:00:25.380
Let's quickly have a look at that function category of that category.

7
00:00:25.380 --> 00:00:32.310
So you can see here it will access the request params slug, it will access the name from the request

8
00:00:32.310 --> 00:00:34.980
body, then try to find the category.

9
00:00:36.040 --> 00:00:42.640
Based on the slope and observe the value, which is the name that you will be sending the updating category's

10
00:00:42.650 --> 00:00:42.970
name.

11
00:00:42.970 --> 00:00:46.900
And then again, we will regenerate the slug to match that name.

12
00:00:47.770 --> 00:00:52.870
And then we are sending the updated category back to the front.

13
00:00:53.170 --> 00:00:57.760
All right, so let's go and make a request using excuse to our back end.

14
00:00:57.880 --> 00:00:59.170
Let me remove that for now.

15
00:01:00.640 --> 00:01:03.660
Let's make sure we have excuse which we have.

16
00:01:03.680 --> 00:01:04.030
Okay.

17
00:01:06.200 --> 00:01:07.460
So handle update.

18
00:01:07.790 --> 00:01:08.900
So here's what I'm want to do.

19
00:01:09.620 --> 00:01:14.950
Let's use try to get into.

20
00:01:17.730 --> 00:01:25.670
Control of the air and you want to show the toast area is really if there's some issue category of did.

21
00:01:27.090 --> 00:01:34.800
All right so here what do you want to do is make a request using excuse that gives us a dollar or weight

22
00:01:34.920 --> 00:01:38.790
excuse don't put make a put request to the endpoint.

23
00:01:38.790 --> 00:01:42.780
Let's use bektic so that we can put variable slope.

24
00:01:43.590 --> 00:01:49.530
So you can see you select categories less the slope which will be the updated category slope.

25
00:01:50.070 --> 00:01:52.470
And this is something we already have in this state.

26
00:01:52.620 --> 00:01:54.180
I said that slowly sent.

27
00:01:55.360 --> 00:01:57.960
And second argument is the values, right?

28
00:01:59.080 --> 00:02:00.190
Yeah, the values.

29
00:02:00.520 --> 00:02:05.080
So this values we contain the category name which has been just updated.

30
00:02:07.250 --> 00:02:07.460
Okay.

31
00:02:07.460 --> 00:02:11.630
So this would be access as the requisite body name in our control.

32
00:02:16.110 --> 00:02:23.880
Then what are we going to do here is we will be getting the updated category two category, the data.

33
00:02:24.450 --> 00:02:27.660
This one, when we get it, it will be the updated category.

34
00:02:28.410 --> 00:02:31.050
Now, when we get the ability categories, we want to.

35
00:02:33.570 --> 00:02:37.260
Update the categories that we already have here displayed.

36
00:02:37.380 --> 00:02:41.280
So when it is updated, we want to update here in the list as well.

37
00:02:41.850 --> 00:02:48.090
Before we do that, let me actually just cancel this to make sure we get it first before we do anything

38
00:02:48.090 --> 00:02:51.840
in category that it.

39
00:02:53.730 --> 00:02:54.040
Donna.

40
00:02:54.510 --> 00:02:57.300
So let's quickly have a look at this one before we do anything further.

41
00:02:59.190 --> 00:02:59.470
All right.

42
00:02:59.470 --> 00:03:00.900
So let me try.

43
00:03:02.940 --> 00:03:06.090
And let's make it all caps, ma'am.

44
00:03:06.090 --> 00:03:06.480
Stay.

45
00:03:06.720 --> 00:03:06.990
It's.

46
00:03:06.990 --> 00:03:07.590
It's a mint.

47
00:03:08.860 --> 00:03:09.940
Category updated.

48
00:03:10.270 --> 00:03:11.100
That was quick.

49
00:03:11.110 --> 00:03:17.980
You can see we have got the category that is embedded from the back end as a response we got here.

50
00:03:18.790 --> 00:03:19.120
Okay.

51
00:03:19.450 --> 00:03:20.740
Now, when do we get the response?

52
00:03:20.890 --> 00:03:22.170
We want to do a few things.

53
00:03:22.180 --> 00:03:23.890
One, we want to close the model.

54
00:03:25.000 --> 00:03:32.300
Next, we want to immediately update this our list as well.

55
00:03:32.320 --> 00:03:40.350
So we have to find the category from the categories list in the state and update the value.

56
00:03:40.360 --> 00:03:44.670
So we have to find variety and then object in the client ID.

57
00:03:45.940 --> 00:03:48.150
So let me just remove that.

58
00:03:48.160 --> 00:03:50.380
So what we can do here is.

59
00:03:53.270 --> 00:03:55.220
We can use a math function of.

60
00:03:56.090 --> 00:03:58.270
Let's call it new categories.

61
00:03:58.280 --> 00:03:58.730
New.

62
00:04:01.640 --> 00:04:03.350
New categories.

63
00:04:06.410 --> 00:04:11.720
Equal to two categories that we have in the state at the moment.

64
00:04:11.720 --> 00:04:13.160
We use a math function.

65
00:04:15.040 --> 00:04:15.430
Map.

66
00:04:16.090 --> 00:04:18.550
So categories don't map.

67
00:04:19.270 --> 00:04:22.810
So just like filter and other functions we use earlier.

68
00:04:23.020 --> 00:04:25.840
Map also takes on another function as an argument.

69
00:04:25.960 --> 00:04:26.100
Right?

70
00:04:26.140 --> 00:04:28.240
So we use another function as an argument.

71
00:04:30.610 --> 00:04:33.160
So when we met the category.

72
00:04:34.290 --> 00:04:38.130
We get access to each of the categories from this array.

73
00:04:38.760 --> 00:04:39.030
Right.

74
00:04:39.630 --> 00:04:48.570
And then we're going to take if the little dude here first, let's call it can.

75
00:04:49.500 --> 00:04:49.700
Yes.

76
00:04:49.760 --> 00:04:51.660
A new map to all the categories.

77
00:04:54.480 --> 00:05:02.970
We get each category so we can take the category and now get all the categories we mapping through one

78
00:05:02.970 --> 00:05:03.290
by one.

79
00:05:03.310 --> 00:05:12.300
So if their ID matched with this data ID, this data has been just updated.

80
00:05:12.420 --> 00:05:12.690
Right.

81
00:05:13.200 --> 00:05:16.200
So other things since but I'd imagine.

82
00:05:16.460 --> 00:05:16.680
Right.

83
00:05:16.680 --> 00:05:17.610
So if.

84
00:05:18.660 --> 00:05:25.350
Any of the categories in the state if their ID met with this recently updated categories.

85
00:05:25.350 --> 00:05:29.160
And that means this is the category that has been updated.

86
00:05:29.550 --> 00:05:32.720
So in that case, we return the data again.

87
00:05:33.000 --> 00:05:39.690
So when we return, what happens is the categories are everything stays the same for a new mapping through.

88
00:05:39.990 --> 00:05:43.590
If we have ten categories, this function will run ten times.

89
00:05:43.710 --> 00:05:43.950
Right.

90
00:05:44.250 --> 00:05:50.070
So out of ten main times, it will return whatever it was already there.

91
00:05:51.060 --> 00:05:51.360
Okay.

92
00:05:51.690 --> 00:05:54.480
Whatever is there, it returns as it is.

93
00:05:54.690 --> 00:06:02.310
But if it finds the one that has the same idea as this one, then it will override the previous data

94
00:06:02.310 --> 00:06:08.110
and return the new data, which is the one we got, which is the updated category.

95
00:06:08.130 --> 00:06:16.050
So basically this will give us the all the categories, find the one that matched the idea and return

96
00:06:16.050 --> 00:06:22.620
the updated value for that particular category.

97
00:06:22.650 --> 00:06:32.550
So finally, we can save in the categories the state and that this time it'll be new categories.

98
00:06:34.000 --> 00:06:34.260
Okay.

99
00:06:34.260 --> 00:06:42.630
So the only difference going to be here is the one that that I missed will have the new data.

100
00:06:44.490 --> 00:06:44.580
Right.

101
00:06:44.580 --> 00:06:51.360
So this way we can set the categories lists with the updated one and.

102
00:06:53.190 --> 00:06:59.730
Oh, there's one thing we can do that is to toast years tostart successfully in certain

103
00:07:02.100 --> 00:07:03.270
categories.

104
00:07:06.390 --> 00:07:08.190
Category updated successfully.

105
00:07:08.520 --> 00:07:08.790
All right.

106
00:07:09.150 --> 00:07:12.930
And there's one more thing you can do, and that is the model you want to.

107
00:07:13.970 --> 00:07:20.330
You want to hide, you don't want to saying so anymore because it's already done or it is done.

108
00:07:20.330 --> 00:07:21.320
So said visible.

109
00:07:21.350 --> 00:07:22.580
You make it false.

110
00:07:24.220 --> 00:07:24.520
Okay.

111
00:07:24.730 --> 00:07:29.710
And then there's one more thing you want to do, and that is set of building category.

112
00:07:29.860 --> 00:07:36.460
So previously when you were going through the update of whichever has been clicked, that was in the

113
00:07:36.460 --> 00:07:36.940
state.

114
00:07:37.420 --> 00:07:43.690
But now that it is complete, you want to make that empty so you can just do this.

115
00:07:45.600 --> 00:07:46.830
Okay, beautiful.

116
00:07:48.270 --> 00:07:49.080
Let's give it a try.

117
00:07:49.590 --> 00:07:56.700
By the way, this one is something maybe it's not so important because the model will be closed anyway.

118
00:07:57.000 --> 00:08:02.430
And when you click on any of them, that then that valley will always be in the state anyways.

119
00:08:02.640 --> 00:08:08.640
So this may not be the super important, but I think it's a good practice because you want to keep the

120
00:08:08.640 --> 00:08:14.160
updating categories fairly in the State MP when you are not doing anything right.

121
00:08:14.610 --> 00:08:17.960
So with this code we should be good.

122
00:08:17.970 --> 00:08:18.840
Let's give it a try.

123
00:08:21.680 --> 00:08:22.340
Morne Steyn.

124
00:08:22.820 --> 00:08:23.120
Okay.

125
00:08:23.120 --> 00:08:26.630
So that is that's how it looks now.

126
00:08:27.170 --> 00:08:28.610
Let me just make it more.

127
00:08:31.280 --> 00:08:31.880
Submit.

128
00:08:33.050 --> 00:08:35.300
You can see we've got the total notification.

129
00:08:35.780 --> 00:08:38.240
The Valley has been instantly changed.

130
00:08:38.840 --> 00:08:40.220
The model has been closed.

131
00:08:40.400 --> 00:08:41.300
Absolutely beautiful.

132
00:08:41.630 --> 00:08:42.620
I would try another one.

133
00:08:42.860 --> 00:08:43.310
Note.

134
00:08:43.400 --> 00:08:44.630
Let's make note.

135
00:08:45.260 --> 00:08:48.260
This summit, you see.

136
00:08:48.980 --> 00:08:49.460
Beautiful.

137
00:08:49.840 --> 00:08:53.030
Now, if you refresh, this valley should stay the same.

138
00:08:57.420 --> 00:08:58.020
Beautiful.

139
00:08:59.890 --> 00:09:06.400
So this way you learn to do the quad operations for categories so you can create a category

140
00:09:10.330 --> 00:09:11.500
for the record.

141
00:09:11.650 --> 00:09:12.610
It's called.

142
00:09:17.640 --> 00:09:20.340
Full stack, you can create a category.

143
00:09:21.530 --> 00:09:23.910
You can show the categories.

144
00:09:24.590 --> 00:09:26.750
You can intend to update the UI.

145
00:09:27.260 --> 00:09:28.190
You can edit.

146
00:09:33.760 --> 00:09:35.050
And you can do it.

147
00:09:35.830 --> 00:09:36.310
Beautiful.
