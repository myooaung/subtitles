1
00:00:01,850 --> 00:00:05,028
The first thing we need to create, of course,

2
00:00:05,028 --> 00:00:07,565
is this EntityManager as an interface.

3
00:00:07,565 --> 00:00:09,777
Let us do that really quick,

4
00:00:09,777 --> 00:00:15,736
and we are going to put this interface in a package called ORM,

5
00:00:15,736 --> 00:00:18,726
like object relational mapper.

6
00:00:18,726 --> 00:00:20,873
Let me move this here.

7
00:00:20,873 --> 00:00:21,365
Okay.

8
00:00:21,365 --> 00:00:26,049
We need this factory method of in the EntityManager.

9
00:00:26,049 --> 00:00:30,592
Of course, it should work with any type T,

10
00:00:30,592 --> 00:00:35,370
so let me just change this instead of having something

11
00:00:35,370 --> 00:00:37,833
that is going to work only for Person.

12
00:00:37,833 --> 00:00:40,476
We are going to implement that in a minute.

13
00:00:40,476 --> 00:00:47,089
And from that, I need a persist method, so let me create this void persist.

14
00:00:47,089 --> 00:00:51,124
That is going to take an instance of T.

15
00:00:51,124 --> 00:00:54,477
So this is the first version of our EntityManager.

16
00:00:54,477 --> 00:01:00,699
This of method has to return an implementation of our EntityManager.

17
00:01:00,699 --> 00:01:03,825
So let me implement that.

18
00:01:03,825 --> 00:01:04,444
For the moment,

19
00:01:04,444 --> 00:01:09,714
I am going to call the implementation of this EntityManager interface,

20
00:01:09,714 --> 00:01:11,475
EntityManagerImpl.

21
00:01:11,475 --> 00:01:14,571
Now this is not a very nice name for an implementation,

22
00:01:14,571 --> 00:01:17,748
but we will change that in a minute.

23
00:01:17,748 --> 00:01:19,424
Let me create this class.

24
00:01:19,424 --> 00:01:23,825
We are going to create it in the ORM package.

25
00:01:23,825 --> 00:01:27,107
It depends on the type T, and of course,

26
00:01:27,107 --> 00:01:30,435
it needs to implement the persist method.

27
00:01:30,435 --> 00:01:34,171
So what should we do in this persist method?

28
00:01:34,171 --> 00:01:37,310
This persist method is getting your Person instance,

29
00:01:37,310 --> 00:01:40,205
this is the example we are going to take,

30
00:01:40,205 --> 00:01:43,840
and it should write the fields of that Person instance

31
00:01:43,840 --> 00:01:46,431
in a Person table from our database.

32
00:01:46,431 --> 00:01:48,504
We just created the Person table,

33
00:01:48,504 --> 00:01:53,092
so this is not the responsibility of this persist method to

34
00:01:53,092 --> 00:01:57,254
create the table that we hold the instances of T.

35
00:01:57,254 --> 00:01:59,010
There are two things we need to do.

36
00:01:59,010 --> 00:02:02,870
The first one is to generate the SQL request to

37
00:02:02,870 --> 00:02:04,691
write this object to the database,

38
00:02:04,691 --> 00:02:10,695
and the second one to execute this request on the database to insert the

39
00:02:10,695 --> 00:02:14,799
instance of T we are passed as a parameter in the database.

40
00:02:14,799 --> 00:02:16,302
So let us do that.

41
00:02:16,302 --> 00:02:16,854
For this,

42
00:02:16,854 --> 00:02:19,757
we are going to need an instance of the Metamodel

43
00:02:19,757 --> 00:02:24,256
we created in a previous module, and we are going to create it like this,

44
00:02:24,256 --> 00:02:28,907
Metamodel.of and pass t.getClass as a parameter.

45
00:02:28,907 --> 00:02:32,714
There is just a slight change in the Metamodel class

46
00:02:32,714 --> 00:02:34,971
compared to the previous module.

47
00:02:34,971 --> 00:02:40,166
I got rid of the declaration of the type at the Class level just because,

48
00:02:40,166 --> 00:02:41,990
in fact, we do not need it,

49
00:02:41,990 --> 00:02:45,696
and things are going to be most simple if we get rid of it.

50
00:02:45,696 --> 00:02:47,408
So let us go back there.

51
00:02:47,408 --> 00:02:50,535
First step, we need to build a SQL string,

52
00:02:50,535 --> 00:02:53,458
and this is probably a responsibility of the Metamodel.

53
00:02:53,458 --> 00:02:56,993
We are going to call this method buildInsertRequest,

54
00:02:56,993 --> 00:03:04,170
and with this request, we are going to create a PreparedStatement from JDBC.

55
00:03:04,170 --> 00:03:09,246
A PreparedStatement is just an object that can carry a SQL

56
00:03:09,246 --> 00:03:12,264
query from our application to the database,

57
00:03:12,264 --> 00:03:16,186
and we are going to create that object using a fluent pattern.

58
00:03:16,186 --> 00:03:19,963
So let us suppose that we first need to prepare this

59
00:03:19,963 --> 00:03:24,460
statement with the SQL query and then set the parameters

60
00:03:24,460 --> 00:03:26,765
from the object t that we have.

61
00:03:26,765 --> 00:03:28,540
And once we have this PreparedStatement,

62
00:03:28,540 --> 00:03:34,182
all we need to do is call the executeUpdate that will

63
00:03:34,182 --> 00:03:44,000
execute the query on the database engine and hopefully insert this object t in the database.

