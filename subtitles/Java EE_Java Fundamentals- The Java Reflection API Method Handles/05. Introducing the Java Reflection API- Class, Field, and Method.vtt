WEBVTT
1
00:00:01.868 --> 00:00:06.251
Let us first introduce the Reflection API itself.

2
00:00:06.251 --> 00:00:10.962
There are several fundamental classes that you need to know in this API,

3
00:00:10.962 --> 00:00:15.039
and the name of those classes are the following.

4
00:00:15.039 --> 00:00:20.266
There is a class called Class, which may be a little confusing,

5
00:00:20.266 --> 00:00:22.572
but this is the case.

6
00:00:22.572 --> 00:00:28.434
There's also a class called Field to model the fields within a class,

7
00:00:28.434 --> 00:00:33.458
and a class called Method to model the methods,

8
00:00:33.458 --> 00:00:39.637
again, within a class, and there is a bonus class called the Constructor class.

9
00:00:39.637 --> 00:00:43.057
A Constructor in the class is not really a method

10
00:00:43.057 --> 00:00:46.479
even if it looks like a method,

11
00:00:46.479 --> 00:00:50.983
and constructors are modeled using their own class.

12
00:00:50.983 --> 00:00:58.600
And then we will be also using the Annotation class, which models annotations.

13
00:00:58.600 --> 00:01:01.672
The first classes, Class, Field, Method,

14
00:01:01.672 --> 00:01:02.629
and Constructor,

15
00:01:02.629 --> 00:01:09.072
have been introduced in the very early version of the Reflection API in Java 1.

16
00:01:09.072 --> 00:01:15.015
The Annotation class is more recent since this feature has been

17
00:01:15.015 --> 00:01:19.888
added to the Java language more recently in Java 5.

18
00:01:19.888 --> 00:01:24.237
The idea you need to keep in mind is that each of those classes

19
00:01:24.237 --> 00:01:28.944
provides a model for a fundamental element of a class.

20
00:01:28.944 --> 00:01:30.134
And from the Class object,

21
00:01:30.134 --> 00:01:40.000
we are going to be able to access those fundamental elements one by one. This is what we are going to see now.

