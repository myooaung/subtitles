1
00:00:02,106 --> 00:00:06,893
Now that you have a method handle properly constructed on the field,

2
00:00:06,893 --> 00:00:10,975
a method, or a constructor, how can you use it?

3
00:00:10,975 --> 00:00:14,905
How can you use it to invoke a method or read a field?

4
00:00:14,905 --> 00:00:18,015
This is what you are going to see now.

5
00:00:18,015 --> 00:00:21,544
Invoking a method using a method handle is,

6
00:00:21,544 --> 00:00:26,662
in fact, the same kind of thing as with an instance of method.

7
00:00:26,662 --> 00:00:30,288
It uses the invoke method.

8
00:00:30,288 --> 00:00:35,280
The first argument is the object on which you want to invoke that method,

9
00:00:35,280 --> 00:00:38,733
the object that holds the invoke method,

10
00:00:38,733 --> 00:00:41,520
and the following arguments, if any,

11
00:00:41,520 --> 00:00:46,064
are just the arguments that this method is taking.

12
00:00:46,064 --> 00:00:50,476
This method may take no argument, so in this case,

13
00:00:50,476 --> 00:00:55,291
you will not add any argument to this invoke method call.

14
00:00:55,291 --> 00:00:56,794
Let us see the patterns.

15
00:00:56,794 --> 00:01:00,709
Suppose we have a Person class with a property name,

16
00:01:00,709 --> 00:01:05,832
which is a string; private field name; and public method,

17
00:01:05,832 --> 00:01:07,729
getName and setName.

18
00:01:07,729 --> 00:01:08,251
First,

19
00:01:08,251 --> 00:01:14,266
this MethodHandle is the MethodHandle on the getter method of this Person class.

20
00:01:14,266 --> 00:01:20,650
So we can just invoke this method calling nameGetter.invoke,

21
00:01:20,650 --> 00:01:25,875
pass the person as a parameter, and since the getter does not take any parameter,

22
00:01:25,875 --> 00:01:32,500
it will return the name of that person by invoking the getName method.

23
00:01:32,500 --> 00:01:37,167
And we can do the same with the nameSetter MethodHandle created

24
00:01:37,167 --> 00:01:42,000
on the setName method of this Person class.

25
00:01:42,000 --> 00:01:53,000
We invoke it by passing the person as the first parameter and the value, John, for instance, and a second parameter.

