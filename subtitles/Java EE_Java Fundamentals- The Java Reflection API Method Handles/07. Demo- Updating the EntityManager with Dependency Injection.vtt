WEBVTT
1
00:00:01.840 --> 00:00:06.665
Instead of having an abstract EntityManager that is abstract precisely

2
00:00:06.665 --> 00:00:12.672
with an abstract method in it to create the JDBC connection to the

3
00:00:12.672 --> 00:00:17.208
database server and an extension of this EntityManager holding the

4
00:00:17.208 --> 00:00:19.437
method that will provide that connection,

5
00:00:19.437 --> 00:00:24.583
what we want to do is to make this class non-abstract here,

6
00:00:24.583 --> 00:00:28.398
get rid of this abstract method,

7
00:00:28.398 --> 00:00:31.618
get rid of this code that is calling this method

8
00:00:31.618 --> 00:00:34.140
because this code is not here anymore,

9
00:00:34.140 --> 00:00:39.395
and make the connection a private field of this class.

10
00:00:39.395 --> 00:00:42.924
On this field we are going to add an annotation on it,

11
00:00:42.924 --> 00:00:45.157
which is the @Inject annotation,

12
00:00:45.157 --> 00:00:49.589
and we want to create a mechanism that is going to

13
00:00:49.589 --> 00:00:52.507
automatically inject a value in this class.

14
00:00:52.507 --> 00:00:57.758
And by the way, we are going to rename this class ManagedEntityManager.

15
00:00:57.758 --> 00:01:03.089
So this annotation does not exist, so let us create it, create annotation.

16
00:01:03.089 --> 00:01:07.819
We are going to put it in the annotation package that already exists.

17
00:01:07.819 --> 00:01:11.915
And on the other hand, we need logic to create that connection.

18
00:01:11.915 --> 00:01:15.366
We got rid of the inheritance relationship between our

19
00:01:15.366 --> 00:01:17.637
abstract EntityManager and H2 EntityManager,

20
00:01:17.637 --> 00:01:21.909
but we still need a way to create those connections.

21
00:01:21.909 --> 00:01:26.735
So what we are going to do is create another class in a provider package,

22
00:01:26.735 --> 00:01:31.364
and we are going to call this class H2ConnectionProvider.

23
00:01:31.364 --> 00:01:36.950
And the code to create this connection is going to move in this class.

24
00:01:36.950 --> 00:01:41.070
And to tell our system that this is the method it should call to

25
00:01:41.070 --> 00:01:43.908
be able to create an instance of connection,

26
00:01:43.908 --> 00:01:49.619
we are going to annotate this method with a Provides annotation.

27
00:01:49.619 --> 00:01:54.937
Let me create this annotation in the annotation package, and here we go.

28
00:01:54.937 --> 00:01:59.050
This Inject annotation should be made available at runtime,

29
00:01:59.050 --> 00:02:06.519
so let us tell this to the system and the same for this Provides annotation.

30
00:02:06.519 --> 00:02:10.332
So this H2ConnectionProvider is working properly.

31
00:02:10.332 --> 00:02:13.339
Now we do not need this H2EntityManager anymore,

32
00:02:13.339 --> 00:02:16.088
so let us get rid of this class.

33
00:02:16.088 --> 00:02:20.150
Of course, this EntityManager will not work anymore,

34
00:02:20.150 --> 00:02:23.437
so let me remove this factory method.

35
00:02:23.437 --> 00:02:27.446
ReadingObjects and WritingObjects, I'm not going to compile anymore,

36
00:02:27.446 --> 00:02:35.000
but this is normal because we are going to change the way in which we get EntityManagers.

