1
00:00:00,330 --> 00:00:00,690
All right.

2
00:00:00,690 --> 00:00:04,260
So now we're going to start looking at some stuff to make your lives much easier.

3
00:00:04,290 --> 00:00:10,020
Now, in our hotel website project, we used floats to align things, which is a pain in the neck for

4
00:00:10,020 --> 00:00:11,220
so many reasons.

5
00:00:11,220 --> 00:00:14,970
And for a long time we had to use frameworks like Bootstrap.

6
00:00:15,420 --> 00:00:21,210
And one of the biggest reasons for that was it came with a grid system to easily align elements, so

7
00:00:21,210 --> 00:00:22,680
we didn't have to use floats.

8
00:00:22,680 --> 00:00:30,570
But Flexbox was introduced in CSS version three, which allows us to align things easily without using

9
00:00:30,570 --> 00:00:32,220
floats or frameworks.

10
00:00:32,220 --> 00:00:39,750
So from now on we're going to do do away with floats and use Flexbox and or CSS grid when we get to

11
00:00:39,750 --> 00:00:40,320
that.

12
00:00:41,040 --> 00:00:44,700
So Flexbox is basically a modern layout mode.

13
00:00:44,700 --> 00:00:51,960
In CSS three, we assign flex to the display property just like we have display block display, inline

14
00:00:51,960 --> 00:00:54,810
display, inline block, display none.

15
00:00:54,810 --> 00:00:58,590
We also have display flex and it replaces floats.

16
00:00:58,590 --> 00:01:00,570
It's much more elegant to work with.

17
00:01:00,870 --> 00:01:08,760
We can align items both horizontal and vertical and flex items can also be reordered via CSS.

18
00:01:08,760 --> 00:01:15,060
So we can actually reorder the way that our our items are laid out without having to change the markup,

19
00:01:15,060 --> 00:01:17,280
without having to change the HTML.

20
00:01:17,670 --> 00:01:22,500
So let's take a quick look at how it works, and I'm going to show you all this, so don't worry about

21
00:01:22,500 --> 00:01:22,620
it.

22
00:01:22,620 --> 00:01:30,210
But just really quickly, if we assign display flex to a container div or any container element, it

23
00:01:30,210 --> 00:01:32,370
creates a flex container.

24
00:01:32,700 --> 00:01:34,260
And we can look at this image here.

25
00:01:34,260 --> 00:01:40,650
So let's say that these two boxes are divs inside of a div that we said display flex.

26
00:01:41,010 --> 00:01:47,160
So we have a flex container and then it makes all direct elements flex items.

27
00:01:47,520 --> 00:01:51,600
So each div or list item, it could be any element at all.

28
00:01:51,600 --> 00:01:59,070
Each thing inside that flex container is going to be a flex item and it's going to actually align horizontal

29
00:01:59,070 --> 00:02:00,750
in a row by default.

30
00:02:00,750 --> 00:02:07,830
So simply putting Display Flex is going to make all the child elements just automatically align horizontally.

31
00:02:07,830 --> 00:02:15,300
So basically like what floats do, but we can also do flex direction column, which will align them

32
00:02:15,300 --> 00:02:15,870
this way.

33
00:02:16,140 --> 00:02:18,000
They align them vertically.

34
00:02:18,240 --> 00:02:25,650
Now we have a cross axis which goes up and down and we have a main axis that goes this way and there's

35
00:02:25,650 --> 00:02:30,360
different CSS properties we can use to align our flex items.

36
00:02:31,410 --> 00:02:33,480
So here's some of those properties.

37
00:02:33,480 --> 00:02:37,260
So we have justified content which will align along the main axis.

38
00:02:37,260 --> 00:02:44,430
So basically horizontal along this main axis we have a line items which will align items on the cross

39
00:02:44,430 --> 00:02:45,060
axis.

40
00:02:45,060 --> 00:02:51,060
So this way and then align content which will align when there's extra space in the cross axis.

41
00:02:51,060 --> 00:02:56,550
Basically, if we have multiple rows of flex items, it'll align those.

42
00:02:56,550 --> 00:03:01,950
And I'm and I know that's confusing just saying it, but I will show you and give you examples of all

43
00:03:01,950 --> 00:03:02,640
of these.

44
00:03:02,970 --> 00:03:03,240
All right.

45
00:03:03,240 --> 00:03:07,770
So let's jump in and let's take a look at the basic fundamentals of Flexbox.

