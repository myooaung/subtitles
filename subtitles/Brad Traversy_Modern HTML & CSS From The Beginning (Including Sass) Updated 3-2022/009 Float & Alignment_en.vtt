WEBVTT
1
00:00:00.150 --> 00:00:00.630
All right, guys.

2
00:00:00.630 --> 00:00:03.630
In this video, we're going to look at aligning elements.

3
00:00:03.630 --> 00:00:08.430
We're going to look at aligning text, and we're going to look at auto margin.

4
00:00:08.430 --> 00:00:12.480
So let's create a new file here called zero seven.

5
00:00:12.480 --> 00:00:22.500
And I'm just going to call this float, underscore a line dot HTML and throw in our tags here, had

6
00:00:22.500 --> 00:00:25.500
body tags and we'll say float and align

7
00:00:27.600 --> 00:00:28.800
style.

8
00:00:30.390 --> 00:00:37.350
And all I want here is three divs with the class of box, but I want them to have separate IDs so that

9
00:00:37.350 --> 00:00:39.400
we can target them separately as well.

10
00:00:39.420 --> 00:00:41.400
Now, with Emmett, I don't think I showed you this.

11
00:00:41.400 --> 00:00:49.890
If we want to add an ID and a class, we can do like ID box one class box, we can do that.

12
00:00:50.370 --> 00:00:55.830
And then I'm just going to put an H three in here and I'm just going to say heading doesn't really matter.

13
00:00:55.830 --> 00:01:04.709
And then we'll do form 20 and we're going to copy this down two more times and just change the ID to

14
00:01:04.709 --> 00:01:06.330
two and then three.

15
00:01:07.800 --> 00:01:11.040
So we'll save that and let's open this with live server.

16
00:01:13.400 --> 00:01:14.040
Okay.

17
00:01:14.060 --> 00:01:19.430
Now, first thing I want to show you is how to center your your content or your layout.

18
00:01:19.430 --> 00:01:24.680
Because in just about all cases, every website you go to, it's in the center.

19
00:01:24.680 --> 00:01:26.900
It's not over to the to the left like this.

20
00:01:26.900 --> 00:01:30.080
Maybe in like the nineties or early 2000 it was.

21
00:01:30.080 --> 00:01:32.420
But now your stuff is going to be in the middle.

22
00:01:32.420 --> 00:01:34.130
So to do that is pretty easy.

23
00:01:34.130 --> 00:01:40.430
We just need to have a container class or ID and or container element, I should say.

24
00:01:40.430 --> 00:01:44.690
And then we need to add a width to it and set the margin to auto.

25
00:01:45.020 --> 00:01:50.750
If we set the margin to auto, it's going to add the same amount of margin on both sides, pushing it

26
00:01:50.750 --> 00:01:51.680
into the middle.

27
00:01:51.680 --> 00:01:53.570
So let me show you what I mean.

28
00:01:53.570 --> 00:01:58.940
I'm going to wrap this in a class called Container.

29
00:02:00.320 --> 00:02:05.120
You'll see the class name container often container or wrap or wrapper.

30
00:02:05.120 --> 00:02:09.919
And then we're going to grab everything here and put it inside the container.

31
00:02:11.090 --> 00:02:13.010
Let me just fix this up a little bit.

32
00:02:16.200 --> 00:02:24.060
All right, so up here in our CSIS, let's do container and let's set a width of.

33
00:02:24.060 --> 00:02:26.940
Now it's up to you how how wide you want your layout to be.

34
00:02:26.940 --> 00:02:31.320
I'm going to do 960, which is kind of kind of narrow.

35
00:02:31.800 --> 00:02:34.770
And then actually we'll just do that for now.

36
00:02:34.770 --> 00:02:42.420
And if we go back to our loops, if we go back to our content and I open up our chrome tools and take

37
00:02:42.420 --> 00:02:47.130
a look, you'll see that, oops, I want to go to the container.

38
00:02:47.130 --> 00:02:50.820
You'll see that the blue, it ends at 960 pixels.

39
00:02:51.090 --> 00:02:52.590
That's 960 wide.

40
00:02:52.770 --> 00:02:55.830
Now to move it to the middle is very simple.

41
00:02:55.830 --> 00:03:00.270
All we have to do is add in margin auto.

42
00:03:01.260 --> 00:03:02.670
If I save that, we go back.

43
00:03:02.670 --> 00:03:07.860
Now, you'll see it's in the middle and the orange part on the sides is the margin.

44
00:03:08.130 --> 00:03:09.660
And notice it's the same.

45
00:03:09.660 --> 00:03:11.280
It's even on both sides.

46
00:03:11.280 --> 00:03:13.500
That's what happens if you do margin auto.

47
00:03:13.500 --> 00:03:18.600
Now if you want to move it down a little bit, if you want margin on the top and bottom, you could

48
00:03:18.600 --> 00:03:19.980
do something like this.

49
00:03:19.980 --> 00:03:24.660
You could say 30 pixels for top and bottom auto on the left and right.

50
00:03:24.660 --> 00:03:29.310
And now if I hover over it, you'll see that there's 30 on the top and bottom.

51
00:03:31.120 --> 00:03:35.770
Now there's there's an issue with using just width in this case.

52
00:03:35.770 --> 00:03:39.010
So let me show you that it has to do with responsive design.

53
00:03:39.550 --> 00:03:43.570
You want to do all you can to make your site look decent on mobile devices.

54
00:03:43.570 --> 00:03:45.040
And we're going to get more into this later.

55
00:03:45.040 --> 00:03:50.560
But if I go down like this, like if we were to view this on a mobile device, you can't even read the

56
00:03:50.560 --> 00:03:51.040
text.

57
00:03:51.040 --> 00:03:54.410
You have this scrollbar, which is just horrible.

58
00:03:54.430 --> 00:03:56.820
We want all the text to display here.

59
00:03:56.830 --> 00:03:58.980
So to fix that is very simple.

60
00:03:58.990 --> 00:04:02.440
All we have to do is go from width to using max width.

61
00:04:02.800 --> 00:04:05.040
So if I save that, we go back.

62
00:04:05.050 --> 00:04:09.190
Now all the text is there regardless of the screen size.

63
00:04:09.190 --> 00:04:13.570
And then once I get to 960, it's going to it's going to stop.

64
00:04:13.570 --> 00:04:17.440
That's the boundary because we set a max width of 960.

65
00:04:17.829 --> 00:04:21.370
So you should always use max width on your containers.

66
00:04:23.050 --> 00:04:29.290
So next thing I'm going to do is just kind of style these boxes a little bit and the body I'm just going

67
00:04:29.290 --> 00:04:40.420
to throw in a body style of let's do font, let's do font, family, Arial, Helvetica, sans serif.

68
00:04:40.420 --> 00:04:47.380
And then I'm just going to add a line height of 1.4 REM or M

69
00:04:50.170 --> 00:04:56.020
and let's see, let's, let's style the box class a little bit.

70
00:04:58.000 --> 00:05:13.840
So for Bocks, we'll do background light gray and border one pixel solid dark gray padding 20 pixels

71
00:05:13.840 --> 00:05:19.870
and let's do margin bottom ten, 15 pixels.

72
00:05:19.990 --> 00:05:20.290
All right.

73
00:05:20.290 --> 00:05:21.670
So let's take a look at that.

74
00:05:22.300 --> 00:05:25.810
So all of our boxes now have 20 pixels padding.

75
00:05:25.810 --> 00:05:30.790
They have the border, the the background and some margin to push the the other ones down.

76
00:05:31.270 --> 00:05:36.430
So before we get into floating, I just want to look at the text align property and that's what text

77
00:05:36.430 --> 00:05:38.080
a line is used for is just text.

78
00:05:38.080 --> 00:05:40.690
It's not used to align boxes and stuff.

79
00:05:40.690 --> 00:05:43.600
So let's just target the paragraph in here.

80
00:05:44.290 --> 00:05:50.830
So I'm going to say box and then we want to grab the paragraphs within the box.

81
00:05:51.550 --> 00:05:55.600
Let's put a comment here saying this is for the text line property.

82
00:05:57.610 --> 00:06:00.580
So by default it's aligned to the left.

83
00:06:00.580 --> 00:06:03.670
If I do that, it's just going to stay how it is.

84
00:06:04.000 --> 00:06:07.090
But let's say we wanted that aligned to the right oops.

85
00:06:07.090 --> 00:06:11.170
We wanted to text a line, right?

86
00:06:11.380 --> 00:06:14.650
And if we look at that now, the text is aligned to the right.

87
00:06:15.400 --> 00:06:20.950
If we want it to the center, we could do center and it's just overwriting.

88
00:06:20.950 --> 00:06:25.180
I can leave these whatever the last one is that's going to overwrite the other ones.

89
00:06:25.180 --> 00:06:32.920
So now center, so that center and that text aligned center is used often and I could put text align

90
00:06:32.920 --> 00:06:39.220
center on the div if I wanted this and if I wanted everything within it to be centered as well.

91
00:06:41.080 --> 00:06:43.210
And then we could also do justify.

92
00:06:46.220 --> 00:06:50.330
So justify will just make the edges all even.

93
00:06:51.470 --> 00:06:53.330
You can't really tell here because.

94
00:06:53.420 --> 00:06:54.740
Because there's not much text.

95
00:06:54.740 --> 00:06:56.420
But if I make this smaller.

96
00:06:59.130 --> 00:07:01.020
See how it's all even on the edge.

97
00:07:01.020 --> 00:07:02.400
So that's justify.

98
00:07:03.580 --> 00:07:07.240
I'm sure you guys have used Justify and like Microsoft Word or something.

99
00:07:07.840 --> 00:07:08.260
All right.

100
00:07:08.260 --> 00:07:13.660
So now I want to talk about floating and I just want to explain something real quick.

101
00:07:13.660 --> 00:07:19.990
So I'm going to just do a search for HTML layout example, go to images.

102
00:07:21.580 --> 00:07:25.330
Let's see, let's look at this old bootstrap layout.

103
00:07:26.260 --> 00:07:30.790
So over here we have a sidebar and then we have a main area.

104
00:07:31.180 --> 00:07:34.330
So these are aligned horizontally.

105
00:07:34.330 --> 00:07:38.950
And then inside the main area, we have some boxes that are also aligned horizontally.

106
00:07:38.950 --> 00:07:43.420
Now we can do this with floats and that's what what we're working on right now.

107
00:07:43.420 --> 00:07:50.920
But that's not the the way that you should do it now these days, because now we have Flexbox that's

108
00:07:50.920 --> 00:07:52.000
built into CSS.

109
00:07:52.000 --> 00:07:53.740
We also have CSS grid.

110
00:07:53.740 --> 00:08:00.040
And to use those, we use the display property, we can say display flex or display grid, and then

111
00:08:00.040 --> 00:08:02.530
we have some other properties that are associated with it.

112
00:08:02.530 --> 00:08:07.270
And this is the, the, the way that you should do this stuff these days.

113
00:08:08.410 --> 00:08:14.260
A couple of years ago, we would have to use floats and floats are much more of a pain in the neck because

114
00:08:14.260 --> 00:08:15.520
you have to clear them.

115
00:08:15.970 --> 00:08:21.970
It's more of a pain dealing with responsive design, dealing with, you know, mobile devices and stuff

116
00:08:21.970 --> 00:08:22.690
like that.

117
00:08:22.690 --> 00:08:24.970
So it's not ideal anymore.

118
00:08:24.970 --> 00:08:30.010
But with that said, I still want you guys to know how to use floats.

119
00:08:30.010 --> 00:08:36.010
In fact, the project that we're going to do next, the hotel website, we are going to use floats because

120
00:08:36.010 --> 00:08:38.740
I don't want to get into flex or the grid just yet.

121
00:08:39.580 --> 00:08:41.169
So just keep that in mind.

122
00:08:41.169 --> 00:08:46.540
Just keep in mind that we're learning floats, but it's not something that you're going to use use that

123
00:08:46.540 --> 00:08:48.670
much or that you should use that much.

124
00:08:49.030 --> 00:08:53.110
So let's say that we want to take blocks two and three.

125
00:08:53.710 --> 00:09:00.070
We want box two to float to the left, come to about here or so.

126
00:09:00.070 --> 00:09:05.080
We want box three to be kind of a sidebar, a more narrow box.

127
00:09:05.080 --> 00:09:06.160
So let's do that.

128
00:09:06.160 --> 00:09:17.260
Let's jump in and let's target box two, which has an ID of box two and let's say float to the left.

129
00:09:17.740 --> 00:09:21.160
Now, if we do just that, it doesn't do much.

130
00:09:21.160 --> 00:09:27.310
You'll see that it's kind of it's kind of put it right on top of box three, but you want to add a width

131
00:09:27.310 --> 00:09:28.510
when you're floating something.

132
00:09:28.510 --> 00:09:34.450
So let's say width and I could use pixels, but it gets kind of messy.

133
00:09:34.480 --> 00:09:36.790
You're probably going to want to use percentages.

134
00:09:37.420 --> 00:09:43.660
Now the container that the boxes are in is 960 pixels max width.

135
00:09:44.560 --> 00:09:56.350
So what we can do is let's use a percentage of 70% and then we'll take box three and let's float that

136
00:09:56.350 --> 00:09:58.660
to the right.

137
00:09:58.870 --> 00:10:06.070
And let's say we want the width to be 30% because obviously 70 and 30 is 100% of its container.

138
00:10:07.060 --> 00:10:08.530
So let's see what that looks like.

139
00:10:08.530 --> 00:10:09.220
We'll save it.

140
00:10:09.220 --> 00:10:12.700
We'll go back and we have an issue.

141
00:10:12.700 --> 00:10:14.740
It's not it's not fitting.

142
00:10:14.740 --> 00:10:18.850
Now, the reason for that is because we didn't set the border box property.

143
00:10:18.850 --> 00:10:24.520
Remember, in the last video I showed you that when you add padding, which both of these have, it

144
00:10:24.520 --> 00:10:26.080
adds to the width.

145
00:10:26.620 --> 00:10:32.080
So this is another pain in the pain in the neck for for floating, it adds to the width.

146
00:10:32.080 --> 00:10:37.300
So we have to actually add a box sizing property on the asterisk.

147
00:10:40.070 --> 00:10:42.570
Well, we don't have to put it on the asterisk, but I always do.

148
00:10:42.590 --> 00:10:43.220
Just to.

149
00:10:43.580 --> 00:10:45.170
Because I want all elements.

150
00:10:45.170 --> 00:10:47.330
I want this applied to everything.

151
00:10:47.840 --> 00:10:51.350
So let's say box sizing.

152
00:10:51.350 --> 00:10:53.180
We want to set the border box.

153
00:10:53.510 --> 00:10:59.720
So once I do that, it takes away that it doesn't add the padding to the actual widths.

154
00:11:00.020 --> 00:11:01.520
So now it fits.

155
00:11:03.410 --> 00:11:05.510
But they're right on top of each other.

156
00:11:05.510 --> 00:11:09.830
So what I would do in this situation is probably just lessen the percentage.

157
00:11:10.310 --> 00:11:17.900
So instead of 74, box two, let's change it to 68 so it doesn't go all the way over.

158
00:11:18.980 --> 00:11:20.030
And there we go.

159
00:11:20.420 --> 00:11:20.810
All right.

160
00:11:20.810 --> 00:11:24.020
Now, this isn't going to look right if we make this smaller.

161
00:11:26.080 --> 00:11:28.420
But we're not going to get into that yet.

162
00:11:28.450 --> 00:11:30.610
We're not going to get into responsiveness yet.

163
00:11:30.730 --> 00:11:37.750
The website, the hotel website we build, we will be using media queries and stuff to to make it responsive.

164
00:11:38.350 --> 00:11:43.570
So, I mean, this is how we would do it before Flex and CSS grid came out.

165
00:11:43.930 --> 00:11:52.990
Now, I just want to show you guys that if we add another div below this and we'll just call this box

166
00:11:52.990 --> 00:11:53.890
four.

167
00:11:56.110 --> 00:12:01.120
So remember two, two and three are floated and then box four is under it.

168
00:12:01.120 --> 00:12:02.830
So let's see what that looks like.

169
00:12:03.280 --> 00:12:04.510
It doesn't look right.

170
00:12:04.510 --> 00:12:07.510
So it's basically put behind it.

171
00:12:07.510 --> 00:12:13.190
It doesn't push it down under the floated elements because the floated elements have to be cleared.

172
00:12:13.210 --> 00:12:16.480
This is another pain in the neck when it comes to floating.

173
00:12:17.290 --> 00:12:23.710
So what we would do or one thing we could do is add a class, a utility class.

174
00:12:23.710 --> 00:12:24.970
I'm going to put it up here.

175
00:12:25.360 --> 00:12:32.140
I'll call it class for clear and we'll set the clear property to both because we want to clear the left

176
00:12:32.140 --> 00:12:34.540
and right floats that we just created.

177
00:12:34.540 --> 00:12:39.730
And then we would have to put it right under where the float is, which is under two and three.

178
00:12:41.800 --> 00:12:43.360
So div class clear.

179
00:12:43.540 --> 00:12:47.980
Now if we go back, box four is pushed down.

180
00:12:48.880 --> 00:12:53.650
So remember, if you if you use floating, you're going to have to clear them in most cases.

181
00:12:54.520 --> 00:12:58.390
Now, another area that floating is used is in navigation bars.

182
00:12:58.420 --> 00:13:01.480
A lot of time you'll see the horizontal navigations.

183
00:13:01.480 --> 00:13:05.890
So in the next video, we're going to look at styling links and buttons.

184
00:13:05.890 --> 00:13:12.830
And we're also going to look at creating a basic navigation bar where we float the the list items.

185
00:13:12.850 --> 00:13:13.150
All right.

186
00:13:13.150 --> 00:13:14.650
So I'll see you in the next video.

