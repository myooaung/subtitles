1
00:00:00,120 --> 00:00:00,570
All right, guys.

2
00:00:00,570 --> 00:00:02,680
So we're going to jump into CSS grid here.

3
00:00:02,700 --> 00:00:08,550
Now, I've created a whole new folder called CSIS Grid Sandbox, and I'm going to create a new file

4
00:00:08,550 --> 00:00:14,430
called zero one underscore grid, underscore columns dot HTML.

5
00:00:14,430 --> 00:00:17,550
And we're going to go over just the basics of how the grid works.

6
00:00:17,940 --> 00:00:21,000
Also the grid template columns property.

7
00:00:21,000 --> 00:00:29,220
So I'm going to close the sidebar up and we'll generate our boilerplate here, let's say grid columns

8
00:00:29,220 --> 00:00:31,440
and style.

9
00:00:31,440 --> 00:00:35,730
And the fact that, you know, Flexbox, if you've been following along with the course, is going to

10
00:00:35,730 --> 00:00:42,210
benefit you because the grid works in a similar way where we take a parent element and we set display

11
00:00:42,210 --> 00:00:44,460
grid just like we would do display flex.

12
00:00:44,460 --> 00:00:51,390
And it makes all the child elements of that of that parent, it makes them grid items.

13
00:00:51,390 --> 00:00:57,510
And then we can add specific properties on the parent to affect the grid items.

14
00:00:57,510 --> 00:01:00,480
So let's go ahead and create our markup.

15
00:01:00,480 --> 00:01:02,370
I'm just going to do a class of grid.

16
00:01:02,400 --> 00:01:06,430
This is going to be the container and it doesn't matter what you call the class.

17
00:01:06,460 --> 00:01:11,790
Obviously, I just called it grid and then let's do a few divs with the class of item.

18
00:01:11,790 --> 00:01:18,570
So we'll just for the content, we'll say item and then an incrementing number and we'll do times three.

19
00:01:19,080 --> 00:01:23,940
So we have three div elements inside of our our container here.

20
00:01:23,940 --> 00:01:30,630
So let's, let's style the items first of all, just so we can kind of get a better visual picture of

21
00:01:30,630 --> 00:01:31,380
how this works.

22
00:01:31,380 --> 00:01:38,850
So I'm going to add, let's say padding, we'll do three REM and let's do a border.

23
00:01:41,080 --> 00:01:47,920
One pixel solid and a background of light gray.

24
00:01:48,940 --> 00:02:03,370
And let's do a font size of 1.3 REM will do font weight bold and lets do text align center.

25
00:02:03,940 --> 00:02:08,289
All right, so I'm going to save this and we'll go ahead and open this up with live server and we just

26
00:02:08,289 --> 00:02:11,410
have our three elements, three items here.

27
00:02:11,440 --> 00:02:18,340
So what we need to do now is add for this, this parent right here, this div we want to add display

28
00:02:18,340 --> 00:02:18,790
grid.

29
00:02:18,790 --> 00:02:25,540
So I'm going to say the class of grid, we want to do display and then grid.

30
00:02:26,030 --> 00:02:27,790
Now if I save that, nothing happens.

31
00:02:27,790 --> 00:02:31,420
It's not like flex where it automatically turns into a flex row.

32
00:02:31,420 --> 00:02:36,730
What we need to do is add a another property called grid template columns.

33
00:02:36,730 --> 00:02:43,030
So let's say grid dash template dash columns.

34
00:02:43,030 --> 00:02:51,160
And here is where we specify how many columns we want and also the width of those columns.

35
00:02:51,490 --> 00:02:55,750
So basically by columns I mean we'll have one column, another column.

36
00:02:55,750 --> 00:02:58,180
So basically going in a horizontal row.

37
00:02:58,180 --> 00:03:02,590
So let's say we want to do three columns that are 200 pixels wide.

38
00:03:02,590 --> 00:03:06,970
So 200 pixels for the first, second and third.

39
00:03:06,970 --> 00:03:10,000
And if I save that, that's exactly what we get.

40
00:03:10,510 --> 00:03:13,360
So no floats or anything like that.

41
00:03:13,360 --> 00:03:17,260
We simply create the number of columns we want and the width.

42
00:03:17,260 --> 00:03:24,460
Now, even if we have more than three, three grid items here, that's absolutely fine.

43
00:03:24,460 --> 00:03:26,800
It's just going to continue on to the next line.

44
00:03:26,800 --> 00:03:36,280
So if I were to copy this down and say four and save, it's just going to go right into the next spot.

45
00:03:36,850 --> 00:03:44,410
If we do two more and we say five, six and save, it's just going to it's just going to keep going

46
00:03:44,410 --> 00:03:47,080
in this in this sequence.

47
00:03:47,080 --> 00:03:47,470
All right.

48
00:03:47,470 --> 00:03:52,600
So this is great for like news sites, which is one of the projects that we're going to build.

49
00:03:53,170 --> 00:03:57,640
It's great for our image galleries and it's just great for just basic layout.

50
00:03:57,880 --> 00:04:02,740
It's just to if you want just a main area with a sidebar, you simply set two columns.

51
00:04:03,040 --> 00:04:03,460
All right?

52
00:04:03,460 --> 00:04:10,540
Now, this obviously doesn't go all the way across its container, which which is container is the viewport.

53
00:04:10,960 --> 00:04:16,720
But let's say we wanted the middle one to stretch so that this went all the way across.

54
00:04:16,720 --> 00:04:18,160
We could use auto.

55
00:04:18,399 --> 00:04:24,100
So if I put an auto here and I save now, it's going to give it the length that it needs to fill the

56
00:04:24,100 --> 00:04:24,670
container.

57
00:04:24,670 --> 00:04:27,730
And if I stretch it out, it's always going to fill its container.

58
00:04:29,260 --> 00:04:33,790
And let's say I wanted them all to be the same, but I wanted them to fill the container.

59
00:04:33,790 --> 00:04:34,860
I could do this.

60
00:04:34,870 --> 00:04:36,970
Let me just copy this down.

61
00:04:37,370 --> 00:04:39,490
I'll comment this out.

62
00:04:39,490 --> 00:04:46,600
And instead of doing the 200 pixels, let's do auto, let's do it three times.

63
00:04:49,090 --> 00:04:51,910
So now we have three columns that are all the same size.

64
00:04:51,910 --> 00:04:55,210
If we wanted four, we could add in another one like that.

65
00:04:55,990 --> 00:04:58,450
Now there's a better way to do this.

66
00:04:58,450 --> 00:05:04,090
If you're going to be repeating the same width like this, you can simply use repeat.

67
00:05:04,510 --> 00:05:06,580
And then this takes in two things.

68
00:05:06,580 --> 00:05:11,080
It takes in the number of times you want to repeat, which I'm going to say three, and then the width

69
00:05:11,080 --> 00:05:14,020
you want to repeat, which I'll do auto and save.

70
00:05:14,020 --> 00:05:15,670
And you see we get the same result.

71
00:05:15,670 --> 00:05:22,000
If I were to put let's say 200 pixels in here and save, it's going to repeat 200 pixels three times.

72
00:05:22,300 --> 00:05:25,390
So this is a much nicer way to do it.

73
00:05:25,750 --> 00:05:28,150
Now we used pixels here.

74
00:05:28,150 --> 00:05:31,090
You can also use other units, you can use percentages.

75
00:05:31,090 --> 00:05:36,430
But the most common unit you're going to see when using the grid is an FR unit, which is a fraction.

76
00:05:36,430 --> 00:05:43,690
So it's basically a fraction of the page and it works similar to how the, the, the flex property works.

77
00:05:43,690 --> 00:05:48,130
When we say flex one, flex two, it works similar to that.

78
00:05:48,130 --> 00:05:52,870
So I'm going to copy this down and comment that out.

79
00:05:52,870 --> 00:05:55,030
I just want you guys to have this as a reference.

80
00:05:55,180 --> 00:06:05,680
But we can do, let's say one FR for the first row, too far for the second and one fr for the third.

81
00:06:05,680 --> 00:06:09,970
And we'll save and you can see that it's split up into fractions.

82
00:06:09,970 --> 00:06:16,420
And the second one is larger and if I wanted it even larger, I could do three FR and it will extend

83
00:06:16,420 --> 00:06:20,770
more if I wanted to do two and then maybe two on the end.

84
00:06:20,770 --> 00:06:23,560
So we'll have one short and then two longer ones.

85
00:06:23,560 --> 00:06:26,470
We could do that, could do any combination we want.

86
00:06:26,950 --> 00:06:31,180
And of course we can do repeat with FR as well.

87
00:06:31,720 --> 00:06:37,720
And that's usually what I would do is repeat three one FR if I wanted three columns that were all the

88
00:06:37,720 --> 00:06:39,760
same with now.

89
00:06:40,130 --> 00:06:42,830
Notice that these are all stuck together, right?

90
00:06:42,830 --> 00:06:49,820
So instead of adding margin, there's actually a specific property we can use called grid gap.

91
00:06:50,180 --> 00:06:54,680
So we're going to say grid gap and you can put any unit here, pixels, whatever.

92
00:06:54,680 --> 00:07:00,650
I'm just going to do one REM and save and it's automatically going to add that gap, that spacing in

93
00:07:00,650 --> 00:07:01,370
between.

94
00:07:01,730 --> 00:07:02,150
All right.

95
00:07:02,150 --> 00:07:07,160
And there's no dealing with know, calculating widths or anything like that.

96
00:07:07,160 --> 00:07:08,810
It just it just simply works.

97
00:07:08,810 --> 00:07:15,500
And it doesn't matter how how wide or or narrow the browser is either.

98
00:07:16,640 --> 00:07:17,000
All right.

99
00:07:17,000 --> 00:07:23,960
So that's pretty much the basics of how to create a grid and create basically like horizontal row with

100
00:07:23,960 --> 00:07:24,890
columns.

101
00:07:25,280 --> 00:07:31,940
What I want to show you now is just how easy it is to do a simple layout like a main area and a sidebar.

102
00:07:31,940 --> 00:07:37,880
If you remember back to when we did the floats where we had to carefully choose the percentages, we

103
00:07:37,880 --> 00:07:39,890
had to clear them, stuff like that.

104
00:07:39,890 --> 00:07:41,780
So I just want to show you how simple it is.

105
00:07:41,780 --> 00:07:51,590
If we had, let's say, main and Inside Main, we want our main area or content area to be a section

106
00:07:51,950 --> 00:07:54,200
and we'll just put an H three.

107
00:07:54,290 --> 00:08:04,870
Let's say welcome to my site and we'll do a paragraph and say Lorem 30 and let's say we want an aside.

108
00:08:04,880 --> 00:08:06,710
So this would be our sidebar.

109
00:08:07,070 --> 00:08:12,950
We'll just say whatever hello and let's say Lorem ten.

110
00:08:13,550 --> 00:08:17,210
So we're going to save this and we want this to be our sidebar.

111
00:08:17,210 --> 00:08:18,980
So we want this to be over here.

112
00:08:18,980 --> 00:08:26,900
So with the grid, we could take this main because that's the parent of the section and the side and

113
00:08:26,900 --> 00:08:33,950
we could simply say display grid and we'll define our grid.

114
00:08:35,950 --> 00:08:43,000
Template columns and we'll simply do two FR for the main area or for the section and then one fr for

115
00:08:43,000 --> 00:08:44,860
the aside for the sidebar.

116
00:08:44,860 --> 00:08:52,150
And then let's give it a grid gap of, let's say 1.5 REM and save and that's it.

117
00:08:52,690 --> 00:08:57,970
So three lines instead of having to float and deal with percentages, it's very, very simple.

118
00:08:57,970 --> 00:09:05,020
If we wanted to have it split in the middle, we could do one fr, one fr like that.

119
00:09:05,380 --> 00:09:08,280
If we wanted this to be a little bigger, we could do three fr.

120
00:09:08,290 --> 00:09:15,430
So it's very simple to manipulate how your content is displayed and how things are aligned.

121
00:09:15,700 --> 00:09:16,030
All right.

122
00:09:16,030 --> 00:09:20,530
So in the next video, we're going to start to look at grid rows, because up to this point, we've

123
00:09:20,530 --> 00:09:24,130
looked at grid template columns, but there's also a grid template rows.

124
00:09:24,130 --> 00:09:26,020
So that's what we're going to get into next.

