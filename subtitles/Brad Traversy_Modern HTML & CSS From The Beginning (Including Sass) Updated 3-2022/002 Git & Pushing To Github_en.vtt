WEBVTT
1
00:00:00.330 --> 00:00:00.720
All right.

2
00:00:00.720 --> 00:00:06.360
So now what we're going to do is initialize a git repository and push it to GitHub.

3
00:00:07.380 --> 00:00:10.680
So I have my news grid website right here.

4
00:00:10.680 --> 00:00:17.960
So if I open it up and I open up the index HTML we have the website that we built in the was yeah,

5
00:00:18.000 --> 00:00:19.080
the last section.

6
00:00:19.200 --> 00:00:25.890
And what we need to do is open this folder up inside of a terminal or a command line, which is basically

7
00:00:25.890 --> 00:00:26.940
the same thing.

8
00:00:26.940 --> 00:00:31.980
Now, if you're on Windows and you downloaded Git, which you should have, you should be able to right

9
00:00:31.980 --> 00:00:39.660
click and say open with a git bash or if you want, you can say open with I think it says open with

10
00:00:39.660 --> 00:00:40.680
command line.

11
00:00:41.370 --> 00:00:50.490
If not, then just go down to the windows icon and just type in inside the run text box, type in CMD

12
00:00:50.520 --> 00:00:52.830
and you'll get your command line open.

13
00:00:53.280 --> 00:00:56.130
Now if you're on a mac, you'll use your terminal.

14
00:00:56.520 --> 00:01:03.150
If you can't find where it is, just go to the search up in the top right and type in terminal and hit

15
00:01:03.150 --> 00:01:05.880
enter and your terminal should open like that.

16
00:01:05.880 --> 00:01:10.920
Now you're going to have to be in the news grid site if you right click and you say open with get bash

17
00:01:10.920 --> 00:01:12.480
you'll you'll already be in there.

18
00:01:12.990 --> 00:01:20.190
But for me in my home directory now my project is on my desktop if I do an RLS command and by the way,

19
00:01:20.190 --> 00:01:25.320
I do have a command line crash course on YouTube as well.

20
00:01:25.320 --> 00:01:31.620
But if I do an LZ, it shows me all the folders that are in here and you can see that desktop is is

21
00:01:31.620 --> 00:01:32.040
in here.

22
00:01:32.040 --> 00:01:37.650
So I'm going to seed, which means change directory into desktop.

23
00:01:38.430 --> 00:01:41.910
Now if I do another LZ, it shows me everything that's on my desktop.

24
00:01:41.910 --> 00:01:49.320
I want to seed into my news grid website or folder and if I do an LZ, you can see all the files that

25
00:01:49.320 --> 00:01:55.440
we've that we created now to initialize a git repository locally.

26
00:01:55.650 --> 00:01:58.740
And you should first actually check to see if you have git.

27
00:01:58.740 --> 00:02:03.600
So do get dash dash version and it should show you a version.

28
00:02:04.260 --> 00:02:05.400
And I'm going to clear this up.

29
00:02:05.400 --> 00:02:07.030
We can clear this up with control.

30
00:02:07.030 --> 00:02:09.900
L Or it might be yeah, command.

31
00:02:09.900 --> 00:02:10.800
L Control.

32
00:02:11.640 --> 00:02:14.820
And then we're going to do get init.

33
00:02:15.390 --> 00:02:18.480
So this will initialize a git repository.

34
00:02:18.480 --> 00:02:22.440
What it does is it creates a hidden folder called Dot Git.

35
00:02:22.470 --> 00:02:24.720
If I do an LZ, we don't see it.

36
00:02:24.720 --> 00:02:30.840
However, if I do LZ and I add the dash a flag, that means that it's going to show everything, even

37
00:02:30.840 --> 00:02:32.730
hidden, hidden files and folders.

38
00:02:32.730 --> 00:02:36.060
And now you can see that there is actually a dot git folder here.

39
00:02:36.840 --> 00:02:37.440
All right.

40
00:02:37.830 --> 00:02:44.820
Now, we need to we need to add our files to our git repository.

41
00:02:44.820 --> 00:02:48.090
So I'm going to go ahead and say get add.

42
00:02:48.090 --> 00:02:55.050
And instead of doing writing out every file, we can simply put a dot that means get add all.

43
00:02:55.500 --> 00:02:59.520
So I'm going to run that and it's going to add it to what's called a staging area.

44
00:02:59.850 --> 00:03:00.270
All right.

45
00:03:00.270 --> 00:03:05.940
And if we want to see what's in that staging area, we can say get status and you'll see all of our

46
00:03:05.940 --> 00:03:08.010
files, our images, everything.

47
00:03:08.010 --> 00:03:13.320
So they're in the staging area and now I want to commit them to our local repository.

48
00:03:13.320 --> 00:03:19.800
So to do that, we say get commit and we're going to put a dash flag here.

49
00:03:19.800 --> 00:03:24.510
And then inside of quotes, just put a comment as to to what what we did.

50
00:03:24.510 --> 00:03:26.250
What is this commit about?

51
00:03:26.250 --> 00:03:30.120
So we're going to say initial commit since this is our first one.

52
00:03:31.140 --> 00:03:35.730
So once we do that, all of those files get committed to our local repository.

53
00:03:36.150 --> 00:03:41.000
Now what we want to do is take that local repository and push it to GitHub dotcom.

54
00:03:41.070 --> 00:03:43.260
So let's head over to GitHub.

55
00:03:43.470 --> 00:03:48.660
Now, once you sign up and you log in, you'll see something like this and you just want to go up to

56
00:03:48.660 --> 00:03:51.240
the plus sign and say new repository.

57
00:03:51.810 --> 00:03:52.200
All right.

58
00:03:52.200 --> 00:03:54.930
And then right here, you want to put your repository name.

59
00:03:54.930 --> 00:03:59.820
So I'm going to say News Grid and you can put a description if you want.

60
00:03:59.820 --> 00:04:05.160
We'll just say, I don't know, I'm just going to say sample website.

61
00:04:06.300 --> 00:04:09.240
Now here you can choose public or private.

62
00:04:09.240 --> 00:04:16.740
And private repositories were premium for a long, long time, but I believe that they just made them

63
00:04:16.740 --> 00:04:17.490
free.

64
00:04:17.790 --> 00:04:22.620
Microsoft actually acquired GitHub and I believe they made private repositories free.

65
00:04:23.160 --> 00:04:29.580
And what that means is that if they're private, other people can't see them unless you invite them.

66
00:04:29.580 --> 00:04:33.270
If it's public, other people will be able to see all your code.

67
00:04:34.200 --> 00:04:38.910
So, you know, this is a place for public repositories, for open source code.

68
00:04:39.360 --> 00:04:40.860
I'm going to choose private.

69
00:04:41.010 --> 00:04:42.810
You guys can choose public if you want.

70
00:04:42.810 --> 00:04:48.540
I just choose private because I have quite a few followers and this is a repository that I'm not going

71
00:04:48.540 --> 00:04:51.960
to keep, so I don't want people to see it and and stuff like that.

72
00:04:51.960 --> 00:04:56.520
So I'm just going to choose private and then I'm going to say Create repository.

73
00:04:57.500 --> 00:04:57.850
All right.

74
00:04:57.860 --> 00:05:03.140
Now, this pretty much gives us instructions on how to push to GitHub.

75
00:05:03.350 --> 00:05:08.750
But there's a couple of things that we don't need, like we don't need a read me file, but we already

76
00:05:08.750 --> 00:05:09.980
did this get init.

77
00:05:10.010 --> 00:05:12.800
We already added all our all of our files.

78
00:05:12.800 --> 00:05:15.380
Like I said, we don't need a read me so we're not going to do that.

79
00:05:15.380 --> 00:05:20.390
And then we did our commit, we did get commit m initial commit.

80
00:05:20.390 --> 00:05:23.750
Now we need to add this as our remote repository.

81
00:05:23.750 --> 00:05:29.060
Now if we use this right here, if we use SSH, which is what's being used, you'll need to create what

82
00:05:29.060 --> 00:05:34.730
are called SSH keys, which make it so that you don't have to log in every time you push to GitHub,

83
00:05:34.730 --> 00:05:36.890
which is something you probably want to look into.

84
00:05:37.370 --> 00:05:39.020
But I'm not going to do that here.

85
00:05:39.020 --> 00:05:44.240
I'm actually going to choose HTTPS, so I'm going to click this right here and then I'm going to grab

86
00:05:44.240 --> 00:05:45.800
this command.

87
00:05:45.800 --> 00:05:50.570
So I'm going to control C, I'm going to copy it, copy it, and then I'm going to paste it in here

88
00:05:50.690 --> 00:05:51.800
and run it.

89
00:05:52.610 --> 00:05:57.440
And then we want to grab this get push dash u origin master.

90
00:05:57.440 --> 00:06:02.240
So basically we're just saying we want to push to the master branch because in get you can have different

91
00:06:02.240 --> 00:06:06.200
branches and that's something that you'll learn about later.

92
00:06:06.680 --> 00:06:10.520
But we're going to go ahead and copy that command and put that in here.

93
00:06:12.620 --> 00:06:16.100
And it's going to push to GitHub.

94
00:06:16.490 --> 00:06:23.900
So now if I go back and I reload, you can see all of our files, all of our HTML files, our icon,

95
00:06:23.930 --> 00:06:29.330
this RDS store I probably shouldn't have pushed, but I didn't want to get into the whole get ignore

96
00:06:29.330 --> 00:06:30.260
file and all that.

97
00:06:30.260 --> 00:06:31.610
I want to keep this very basic.

98
00:06:31.610 --> 00:06:34.430
So I mean, it's not going to hurt anything to have this file.

99
00:06:34.430 --> 00:06:36.170
And if you're on windows, you won't have this.

100
00:06:36.170 --> 00:06:37.490
This is a mac thing.

101
00:06:38.030 --> 00:06:39.550
Then we have our CSS.

102
00:06:39.560 --> 00:06:47.450
We can even look at our code in GitHub, but our news grid website is now our repository is now on GitHub.

103
00:06:47.960 --> 00:06:53.720
So in the next video, what I want to do is go to net WiFi and deploy it.

104
00:06:53.720 --> 00:07:00.440
Basically take this this repository and deploy it to nullify so that we can actually view it in a browser.

105
00:07:00.440 --> 00:07:06.140
It'll give us very strange domain name at first and then we'll add our own custom domain.

