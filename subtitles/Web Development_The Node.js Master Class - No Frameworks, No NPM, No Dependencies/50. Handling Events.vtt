WEBVTT
ï»¿1
00:00:00.000 --> 00:00:05.800
as we talked about in the previous lecture.

2
00:00:05.800 --> 00:00:10.250
Every time a user puts in an input in the command line,

3
00:00:10.250 --> 00:00:13.620
it's going to emit an event on the back end,

4
00:00:13.620 --> 00:00:18.150
e dot emit and then the named event,

5
00:00:18.150 --> 00:00:22.970
which could be one of these names and then these string that they actually entered.

6
00:00:22.970 --> 00:00:24.740
In this lecture,

7
00:00:24.740 --> 00:00:29.460
we are going to build handlers for each of these events being emitted.

8
00:00:29.460 --> 00:00:34.750
And we're going to build responders which can respond and read the text of the console that

9
00:00:34.750 --> 00:00:36.540
the admin is asking for.

10
00:00:36.540 --> 00:00:45.600
So we're going to say appear we're going to put air input handlers which were actually

11
00:00:45.600 --> 00:00:48.490
going to bind to the events and then just below it,

12
00:00:48.490 --> 00:00:51.850
we're going to put our responders.

13
00:00:51.850 --> 00:01:01.980
We're going to see that CLI responders is an object,

14
00:01:01.980 --> 00:01:07.250
and then we can write each of the responders as a key on that object.

15
00:01:07.250 --> 00:01:14.040
The input handlers are not an object because they are really just finds two different

16
00:01:14.040 --> 00:01:14.590
events.

17
00:01:14.590 --> 00:01:15.940
Let's see what remain here.

18
00:01:15.940 --> 00:01:19.500
Let's bind to the man event that we could admit.

19
00:01:19.500 --> 00:01:23.870
We want to say e on man,

20
00:01:23.870 --> 00:01:30.050
and then to find the function that should get called would have taken the string that the

21
00:01:30.050 --> 00:01:30.650
user wrote,

22
00:01:30.650 --> 00:01:33.020
and now we've bound to that event.

23
00:01:33.020 --> 00:01:39.320
So we didn't have to define cli dot handlers dot eat up on or anything like that.

24
00:01:39.320 --> 00:01:43.970
We were just calling e r events class and saying on the man event.

25
00:01:43.970 --> 00:01:45.940
So when the man event gets emitted,

26
00:01:45.940 --> 00:01:48.840
call this here now inside of it,

27
00:01:48.840 --> 00:01:50.940
we want to call a responder,

28
00:01:50.940 --> 00:01:52.900
which we would have find below.

29
00:01:52.900 --> 00:02:01.860
So let's call cli dot responders dot hope because we want to call the responder that will

30
00:02:01.860 --> 00:02:04.380
call help and down below.

31
00:02:04.380 --> 00:02:06.910
We can create that responders in the next.

32
00:02:06.910 --> 00:02:10.870
Lectures were actually fill in what these responders do,

33
00:02:10.870 --> 00:02:14.820
but for now we'll just lock out that we received the question.

34
00:02:14.820 --> 00:02:25.230
So this is gonna be help slash man cli dot responders dot help is a function we don't

35
00:02:25.230 --> 00:02:31.880
actually need to take in a string here because we've already identified the question we're

36
00:02:31.880 --> 00:02:32.260
asking.

37
00:02:32.260 --> 00:02:33.700
We don't need any more information.

38
00:02:33.700 --> 00:02:35.850
We just want to log out.

39
00:02:35.850 --> 00:02:39.450
You asked for help.

40
00:02:39.450 --> 00:02:43.960
Now,

41
00:02:43.960 --> 00:02:44.670
as I mentioned,

42
00:02:44.670 --> 00:02:50.200
there is another input called help that should actually have the same response.

43
00:02:50.200 --> 00:02:55.810
And so we're going to define a different input handler for help because we need to bind to

44
00:02:55.810 --> 00:02:57.480
this unique event,

45
00:02:57.480 --> 00:03:01.350
but it's going to pass things along to the same responder.

46
00:03:01.350 --> 00:03:04.450
So e dot on help.

47
00:03:04.450 --> 00:03:12.250
It's going to be another anonymous function that calls cli responders that help.

48
00:03:12.250 --> 00:03:19.860
So there isn't necessarily a 1 to 1 relationship between the handlers that bind to the

49
00:03:19.860 --> 00:03:22.760
events and the responders that respond to them.

50
00:03:22.760 --> 00:03:28.340
Now let's go through and just quickly create the rest of handlers for the rest of the

51
00:03:28.340 --> 00:03:29.720
questions that could be asked.

52
00:03:29.720 --> 00:03:33.590
And then we'll fill in the rest of the responders some to copy this Help one,

53
00:03:33.590 --> 00:03:36.020
and we want to say that E.

54
00:03:36.020 --> 00:03:40.520
On exit exit is another string that they could enter.

55
00:03:40.520 --> 00:03:45.150
We want to call cli doubt responders dot exit.

56
00:03:45.150 --> 00:03:50.660
We don't need to pass it a string because it's already identified The question on the event

57
00:03:50.660 --> 00:03:51.710
called Stats.

58
00:03:51.710 --> 00:03:58.490
We want to call cli responders Stats on the event list users.

59
00:03:58.490 --> 00:04:08.970
We want to call cli dot responders dot list users on the event Mawr User info.

60
00:04:08.970 --> 00:04:17.150
We actually do want to pass this string to the responder because remember,

61
00:04:17.150 --> 00:04:22.480
the user is going to be entering more user info dash and then the idea of a specific user,

62
00:04:22.480 --> 00:04:27.260
so we need to look at the string they're entering in order to identify which user they're

63
00:04:27.260 --> 00:04:28.040
asking about.

64
00:04:28.040 --> 00:04:36.160
So we want to call cli dot responders dot more user info and passed the string that we

65
00:04:36.160 --> 00:04:38.140
received to that responder.

66
00:04:38.140 --> 00:04:38.780
Next,

67
00:04:38.780 --> 00:04:42.750
we want to bind to the event called list checks,

68
00:04:42.750 --> 00:04:48.490
taking the string and then call the responder called list checks.

69
00:04:48.490 --> 00:04:51.020
And we do want to pass that a string.

70
00:04:51.020 --> 00:04:53.750
And that is because list X can include a flag,

71
00:04:53.750 --> 00:04:56.160
for only the objects are only the down check.

72
00:04:56.160 --> 00:04:56.610
So again,

73
00:04:56.610 --> 00:05:02.950
we need to not just identify the question but identify the flags have added to this command

74
00:05:02.950 --> 00:05:02.950
,

75
00:05:02.950 --> 00:05:04.860
and so we need to look at the actual strength.

76
00:05:04.860 --> 00:05:05.630
Next,

77
00:05:05.630 --> 00:05:09.450
we want to bind to MAWR check info,

78
00:05:09.450 --> 00:05:15.330
and that's going to be the exact same thing where we actually want to send them.

79
00:05:15.330 --> 00:05:21.890
The string to responder called more check info because more check info needs to look at the

80
00:05:21.890 --> 00:05:24.270
string and figure out which i d.

81
00:05:24.270 --> 00:05:27.590
Of which check they're actually asking a question about for the next one.

82
00:05:27.590 --> 00:05:29.950
We want to bind to list logs,

83
00:05:29.950 --> 00:05:30.840
list logs,

84
00:05:30.840 --> 00:05:34.720
doesn't take any flags and so we can take in the string there.

85
00:05:34.720 --> 00:05:36.690
But we don't need to pass it to the responder.

86
00:05:36.690 --> 00:05:38.700
We want to call cli dot responders,

87
00:05:38.700 --> 00:05:42.820
stop list logs and not passing anything at all.

88
00:05:42.820 --> 00:05:43.720
Lastly,

89
00:05:43.720 --> 00:05:47.050
we want to bind to an event called More Log Info.

90
00:05:47.050 --> 00:05:55.150
Call a responder called more log info and actually pass it the string because we need to

91
00:05:55.150 --> 00:05:57.930
know which log the user is asking questions about.

92
00:05:57.930 --> 00:05:58.610
So,

93
00:05:58.610 --> 00:05:59.190
as you can see,

94
00:05:59.190 --> 00:06:01.200
we're calling a whole bunch of responders here.

95
00:06:01.200 --> 00:06:04.640
But those responders don't exist down here except for the help one.

96
00:06:04.640 --> 00:06:08.390
And so let's go ahead and create those now exit.

97
00:06:08.390 --> 00:06:11.320
I'm gonna copy what we have up here.

98
00:06:11.320 --> 00:06:13.670
Cli dot responders,

99
00:06:13.670 --> 00:06:20.780
not exit is just going to say you asked for exit in the future lecture.

100
00:06:20.780 --> 00:06:22.220
We're going to fill all these in,

101
00:06:22.220 --> 00:06:24.660
but we're just building in more scaffolding now.

102
00:06:24.660 --> 00:06:33.550
Stats is going to say you asked for stats.

103
00:06:33.550 --> 00:06:48.790
This users is going to say you asked to this Users more user info is going to actually take

104
00:06:48.790 --> 00:06:57.030
it a string and then say you asked for more user info and then log out the string that the

105
00:06:57.030 --> 00:07:02.400
user included this checks is going to take in a string,

106
00:07:02.400 --> 00:07:06.320
which again is just a flag saying up checks or down checks.

107
00:07:06.320 --> 00:07:16.250
And then it will say You asked to list checks and a log out the strength Mawr check Info

108
00:07:16.250 --> 00:07:18.890
will be similar.

109
00:07:18.890 --> 00:07:28.850
It will take in a string and say You asked for more check info and then the string.

110
00:07:28.850 --> 00:07:31.750
Now we need to do list logs.

111
00:07:31.750 --> 00:07:34.750
It doesn't take in a string.

112
00:07:34.750 --> 00:07:41.750
And so we just want to say you asked to list logs And lastly,

113
00:07:41.750 --> 00:07:45.810
more logs info,

114
00:07:45.810 --> 00:07:47.460
which does take in a string.

115
00:07:47.460 --> 00:07:53.900
And we want to say you asked for more info and then log out the string.

116
00:07:53.900 --> 00:07:56.240
So there we have it.

117
00:07:56.240 --> 00:07:58.810
We can start the app back up and see how these air working.

118
00:07:58.810 --> 00:08:01.270
That's call man.

119
00:08:01.270 --> 00:08:03.270
You asked for help.

120
00:08:03.270 --> 00:08:04.210
Let's call help.

121
00:08:04.210 --> 00:08:05.320
You asked for help.

122
00:08:05.320 --> 00:08:08.070
Let's call something that we can't identify.

123
00:08:08.070 --> 00:08:08.990
Sorry.

124
00:08:08.990 --> 00:08:09.590
Try again.

125
00:08:09.590 --> 00:08:10.350
Let's go.

126
00:08:10.350 --> 00:08:12.280
The rest of commands exit us.

127
00:08:12.280 --> 00:08:13.540
Brexit stats.

128
00:08:13.540 --> 00:08:16.910
You asked for mawr log info Undefined.

129
00:08:16.910 --> 00:08:20.450
Which means I must have something wrong here.

130
00:08:20.450 --> 00:08:22.050
Uh,

131
00:08:22.050 --> 00:08:26.060
I forgot to change the name of this responder.

132
00:08:26.060 --> 00:08:28.590
It should be more log info.

133
00:08:28.590 --> 00:08:37.360
Let's start this back up and let's ask for stats again.

134
00:08:37.360 --> 00:08:39.980
US.

135
00:08:39.980 --> 00:08:42.130
For stats list users.

136
00:08:42.130 --> 00:08:46.060
You asked A list users mawr User info at them.

137
00:08:46.060 --> 00:08:48.450
Let's include i d a B C D E F G.

138
00:08:48.450 --> 00:08:51.500
You ask for more user info,

139
00:08:51.500 --> 00:08:53.440
and then this is the string we wrote.

140
00:08:53.440 --> 00:08:55.600
Or use your invoke a B C D E f G.

141
00:08:55.600 --> 00:09:00.350
Now let's asked to list checks up.

142
00:09:00.350 --> 00:09:03.160
You asked to list checks these checks up.

143
00:09:03.160 --> 00:09:12.280
Now let's get mawr Check info about 12345 You asked for more Check info more Check in for

144
00:09:12.280 --> 00:09:12.490
what?

145
00:09:12.490 --> 00:09:19.100
2345 Now let's list blocks us to list logs and mawr log info.

146
00:09:19.100 --> 00:09:20.580
T T T T T.

147
00:09:20.580 --> 00:09:24.690
You asked for more log info and you said more log info TD DDT.

148
00:09:24.690 --> 00:09:32.570
So all of these CLI handlers are binding to the correct events now and the responders are

149
00:09:32.570 --> 00:09:35.270
set up to log out in response.

150
00:09:35.270 --> 00:09:41.960
Now we can move on to building each of these responders out a little bit more so that they

151
00:09:41.960 --> 00:09:44.790
can give the true responses in response to these questions.

152
00:09:44.790 --> 00:09:47.150
So now we can move on to the next lecture

