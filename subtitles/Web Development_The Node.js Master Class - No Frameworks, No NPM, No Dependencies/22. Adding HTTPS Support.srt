1
00:00:00,000 --> 00:00:04,920
so far in this course,

2
00:00:04,920 --> 00:00:08,190
we've created an http server and listened on the port.

3
00:00:08,190 --> 00:00:12,750
But we haven't done anything with http s At this point,

4
00:00:12,750 --> 00:00:17,840
it's going to be worth it to add on https support to our app.

5
00:00:17,840 --> 00:00:19,610
And so we're going to do that in this lecture.

6
00:00:19,610 --> 00:00:21,690
The first thing we're going to need to do,

7
00:00:21,690 --> 00:00:22,060
though,

8
00:00:22,060 --> 00:00:29,280
is create an SSL certificate that we can use within the app to actually facilitate the SSL

9
00:00:29,280 --> 00:00:30,550
handshake and so forth.

10
00:00:30,550 --> 00:00:32,640
In order to create the SSL certificates,

11
00:00:32,640 --> 00:00:34,420
I'm going to use open SSL.

12
00:00:34,420 --> 00:00:36,670
If you don't already have it installed,

13
00:00:36,670 --> 00:00:38,460
you can download it easily.

14
00:00:38,460 --> 00:00:50,370
I'm going to place these SSL Certs inside of a new directory called https and then CD

15
00:00:50,370 --> 00:00:51,080
inside of it.

16
00:00:51,080 --> 00:00:54,150
All right now,

17
00:00:54,150 --> 00:00:56,160
the commander going to use very long.

18
00:00:56,160 --> 00:00:58,050
I'm going to spell it out here.

19
00:00:58,050 --> 00:00:59,900
But if you want to just copy and paste it.

20
00:00:59,900 --> 00:01:03,050
Go ahead and down the code for this lecture.

21
00:01:03,050 --> 00:01:08,850
Look inside the HDP s folder and there is a text file called key generation dot text.

22
00:01:08,850 --> 00:01:11,700
You can just copy that pasted in your console,

23
00:01:11,700 --> 00:01:17,030
especially if you're on OS X and it will create two different files,

24
00:01:17,030 --> 00:01:19,350
a key dot Pam and a served up.

25
00:01:19,350 --> 00:01:21,010
Okay,

26
00:01:21,010 --> 00:01:22,380
the command is open.

27
00:01:22,380 --> 00:01:35,390
SSL wreck dash nooky R s A.

28
00:01:35,390 --> 00:01:41,870
It is to just 48 dash new dash nodes,

29
00:01:41,870 --> 00:01:52,030
dash x five or nine dash days 36.

30
00:01:52,030 --> 00:02:00,350
50 3650 days And then the key out The key that we want to come out is keyed up him.

31
00:02:00,350 --> 00:02:05,630
And the search that we want to come out,

32
00:02:05,630 --> 00:02:08,210
which is just with the dash out key,

33
00:02:08,210 --> 00:02:09,020
is certain.

34
00:02:09,020 --> 00:02:11,620
So one more time Open.

35
00:02:11,620 --> 00:02:12,740
It's a cell wreck.

36
00:02:12,740 --> 00:02:22,200
Dash nooky R s a 2048 dash New dash nodes dash x five o nine Dash days 3650 dash key out

37
00:02:22,200 --> 00:02:27,760
key dot Pim dash out served up just to clarify Here,

38
00:02:27,760 --> 00:02:29,710
this should not actually be a capital K.

39
00:02:29,710 --> 00:02:30,850
There should be a lucky escape.

40
00:02:30,850 --> 00:02:32,450
All right,

41
00:02:32,450 --> 00:02:33,990
at this point,

42
00:02:33,990 --> 00:02:36,680
you are going to be presented with a bunch of questions.

43
00:02:36,680 --> 00:02:38,450
You could answer them anyway that you want,

44
00:02:38,450 --> 00:02:40,900
especially for this example.

45
00:02:40,900 --> 00:02:41,580
In reality,

46
00:02:41,580 --> 00:02:42,880
if you're building this for production,

47
00:02:42,880 --> 00:02:46,990
go ahead and answer these questions truthfully for the business that you're creating this

48
00:02:46,990 --> 00:02:47,590
app for.

49
00:02:47,590 --> 00:02:48,390
Okay,

50
00:02:48,390 --> 00:02:49,950
So the two letter code for the country.

51
00:02:49,950 --> 00:02:52,960
For us is us the state or province name.

52
00:02:52,960 --> 00:02:57,550
California Locality in San Francisco.

53
00:02:57,550 --> 00:03:00,250
The organization name.

54
00:03:00,250 --> 00:03:01,550
It's purple.

55
00:03:01,550 --> 00:03:05,550
The organization unit Name is purple.

56
00:03:05,550 --> 00:03:07,180
The common name.

57
00:03:07,180 --> 00:03:09,710
This gets a little complicated,

58
00:03:09,710 --> 00:03:13,200
especially when you're working on local host for us,

59
00:03:13,200 --> 00:03:15,850
where it is going to write local host.

60
00:03:15,850 --> 00:03:19,370
But if you're doing a production website,

61
00:03:19,370 --> 00:03:19,900
for example,

62
00:03:19,900 --> 00:03:27,060
you're doing example dot com and you want this SSL certificate to work for www dot example

63
00:03:27,060 --> 00:03:30,530
dot com and normal example dot com.

64
00:03:30,530 --> 00:03:36,000
It will depend on who you're getting as a self certificate from for most SSL certificate

65
00:03:36,000 --> 00:03:37,090
creators.

66
00:03:37,090 --> 00:03:40,010
You can just specify example dot com,

67
00:03:40,010 --> 00:03:45,740
and they'll make sure that the certain works for Www and normal example dot com for us.

68
00:03:45,740 --> 00:03:47,180
Since we're creating a local hosting,

69
00:03:47,180 --> 00:03:48,850
this is a self signed certificate.

70
00:03:48,850 --> 00:03:50,340
It doesn't really matter.

71
00:03:50,340 --> 00:03:55,570
We're just going to write the word local host in there email address.

72
00:03:55,570 --> 00:03:58,300
Hello?

73
00:03:58,300 --> 00:03:58,680
Had,

74
00:03:58,680 --> 00:03:59,100
uh,

75
00:03:59,100 --> 00:04:01,470
come and that's it.

76
00:04:01,470 --> 00:04:03,140
So at this point,

77
00:04:03,140 --> 00:04:05,820
if we look inside this directory that way,

78
00:04:05,820 --> 00:04:08,650
or if we go ahead and explore with Adam,

79
00:04:08,650 --> 00:04:14,610
we can see that we have assert that Pym and a key dot All right.

80
00:04:14,610 --> 00:04:22,390
So what we're going to do is now use thes two files in order to create an https server.

81
00:04:22,390 --> 00:04:28,390
The first file that we want to modify is going to be config dot Js Rather than having one

82
00:04:28,390 --> 00:04:29,770
port that we listen on,

83
00:04:29,770 --> 00:04:32,120
we actually need to now listen on to ports.

84
00:04:32,120 --> 00:04:34,530
As you may be aware of,

85
00:04:34,530 --> 00:04:38,020
Http and https conflict with each other.

86
00:04:38,020 --> 00:04:43,040
And so we are due to separate out the ports on most applications.

87
00:04:43,040 --> 00:04:50,470
HDP is going to happen on Port 80 and HCPs is going to happen on port 443 Don't read too

88
00:04:50,470 --> 00:04:52,200
much into what those numbers mean.

89
00:04:52,200 --> 00:04:56,520
That's just the convention that has evolved over the years that is popular,

90
00:04:56,520 --> 00:04:58,950
and that is what most Web browsers expect.

91
00:04:58,950 --> 00:05:00,990
If you're running a local holds application,

92
00:05:00,990 --> 00:05:02,860
it really doesn't matter which ports you choose.

93
00:05:02,860 --> 00:05:08,030
But on production you might want to choose 80 and 443 if your application is facing the

94
00:05:08,030 --> 00:05:08,450
world.

95
00:05:08,450 --> 00:05:09,500
Okay,

96
00:05:09,500 --> 00:05:11,170
so for us,

97
00:05:11,170 --> 00:05:11,740
we want to.

98
00:05:11,740 --> 00:05:12,190
Now,

99
00:05:12,190 --> 00:05:14,500
instead of having poured 3000 for staging,

100
00:05:14,500 --> 00:05:16,480
we want to have two different variables.

101
00:05:16,480 --> 00:05:18,280
Http Port,

102
00:05:18,280 --> 00:05:26,050
which will leave at 3000 and http s support which we're going to change to 3000 and one

103
00:05:26,050 --> 00:05:27,980
Similarly,

104
00:05:27,980 --> 00:05:28,820
for production,

105
00:05:28,820 --> 00:05:36,850
we wanted to take away this port at 5000 and replace it with HDP port at 5000.

106
00:05:36,850 --> 00:05:40,110
And go ahead and add on HDP s court.

107
00:05:40,110 --> 00:05:42,410
That's going to be as you guessed,

108
00:05:42,410 --> 00:05:43,910
at 5000 and one.

109
00:05:43,910 --> 00:05:45,950
We'll save that file.

110
00:05:45,950 --> 00:05:47,090
And remember,

111
00:05:47,090 --> 00:05:52,170
in the index dot Js file we have used that port variable,

112
00:05:52,170 --> 00:05:55,860
so we needed to go ahead and update the places where reviews that.

113
00:05:55,860 --> 00:06:02,710
But this is also a good time to re factor this file in general because we're going to be

114
00:06:02,710 --> 00:06:07,510
creating two different servers that have the same basic functions.

115
00:06:07,510 --> 00:06:12,290
And so rather than coating up this entire server block twice,

116
00:06:12,290 --> 00:06:18,800
we want to re factor it so that all we have to do is create the server http mode and then

117
00:06:18,800 --> 00:06:26,900
pass wreck and rez to another function that will actually handle the meat of the logic.

118
00:06:26,900 --> 00:06:30,170
And then we can add on https,

119
00:06:30,170 --> 00:06:34,320
don't create server function and also have that one just pass,

120
00:06:34,320 --> 00:06:38,360
wreck and rez to that same function that will handle the meat of the logic.

121
00:06:38,360 --> 00:06:43,780
So rather than having two different create server functions that both have a whole bunch of

122
00:06:43,780 --> 00:06:44,400
logic.

123
00:06:44,400 --> 00:06:46,430
We're going to trim down this,

124
00:06:46,430 --> 00:06:47,650
creates ever function,

125
00:06:47,650 --> 00:06:50,140
create another https,

126
00:06:50,140 --> 00:06:57,190
create server function and have them both past their reckoned rez to 1/3 function that all

127
00:06:57,190 --> 00:06:58,020
make more sense.

128
00:06:58,020 --> 00:06:58,960
In a second,

129
00:06:58,960 --> 00:07:03,180
before we create the H two p s part,

130
00:07:03,180 --> 00:07:07,250
we want to just go ahead and re factor the HDP part.

131
00:07:07,250 --> 00:07:11,830
Then it will make more sense when we want to add on the https.

132
00:07:11,830 --> 00:07:15,300
As I mentioned,

133
00:07:15,300 --> 00:07:24,200
we want to create a function that's going to handle all the unified logic for both the http

134
00:07:24,200 --> 00:07:25,980
and the https server.

135
00:07:25,980 --> 00:07:29,350
So we're going to call that function unified server,

136
00:07:29,350 --> 00:07:56,750
and it's just going to accept a wreck,

137
00:07:56,750 --> 00:07:57,950
and rez is normal.

138
00:07:57,950 --> 00:08:00,170
All right,

139
00:08:00,170 --> 00:08:07,950
now what we want to do is take the entire meat of this function up here,

140
00:08:07,950 --> 00:08:15,170
starting from where it gets the girl all the way down to the end.

141
00:08:15,170 --> 00:08:25,850
Take that out of this function and put it inside of this one.

142
00:08:25,850 --> 00:08:32,060
Now,

143
00:08:32,060 --> 00:08:33,290
this server,

144
00:08:33,290 --> 00:08:36,490
rather than doing all that logic itself,

145
00:08:36,490 --> 00:08:40,650
is just going to pass its reckoned rez to unified server.

146
00:08:40,650 --> 00:08:51,230
Now it's worth pointing out that unified server isn't actually doing anything with the port

147
00:08:51,230 --> 00:08:51,230
.

148
00:08:51,230 --> 00:08:55,350
It is handling the requests that come into the server when they come in,

149
00:08:55,350 --> 00:09:00,390
which is after the point that the server has already started listening on a port and has

150
00:09:00,390 --> 00:09:02,150
logged out which port it's on.

151
00:09:02,150 --> 00:09:05,230
So we don't need to update anything.

152
00:09:05,230 --> 00:09:06,140
A unified server.

153
00:09:06,140 --> 00:09:08,960
We do need to update where we have started Server.

154
00:09:08,960 --> 00:09:10,630
So rather than conflict outpour,

155
00:09:10,630 --> 00:09:13,570
we want to have config dot HDP port.

156
00:09:13,570 --> 00:09:25,800
Then we want to say the server is listening on port config dot http report that we can get

157
00:09:25,800 --> 00:09:29,930
rid of the environment name cause we know that's worth Okay.

158
00:09:29,930 --> 00:09:34,290
Now you can see how this is coming together rather than having a huge function up here.

159
00:09:34,290 --> 00:09:35,980
We have two very small functions.

160
00:09:35,980 --> 00:09:38,070
One that in Stan.

161
00:09:38,070 --> 00:09:41,600
She hates the server and one that starts the server.

162
00:09:41,600 --> 00:09:51,350
So we can change the combat here to simply say we are in Stan Shih ating the HDP sever,

163
00:09:51,350 --> 00:09:55,490
and then we're starting the server.

164
00:09:55,490 --> 00:09:56,520
Okay,

165
00:09:56,520 --> 00:09:58,450
so now we can see what we need.

166
00:09:58,450 --> 00:10:05,150
We need to create a second server and https server that listens on a different port.

167
00:10:05,150 --> 00:10:13,040
Listens on 3001 or 5000 won and then pass it the logic to that same unified server function

168
00:10:13,040 --> 00:10:13,040
.

169
00:10:13,040 --> 00:10:13,840
To do that,

170
00:10:13,840 --> 00:10:17,920
we're going to need a different module than http and,

171
00:10:17,920 --> 00:10:18,750
predictably,

172
00:10:18,750 --> 00:10:20,600
that modules called https.

173
00:10:20,600 --> 00:10:25,350
All right,

174
00:10:25,350 --> 00:10:28,560
now,

175
00:10:28,560 --> 00:10:30,510
I'm just gonna put in comments toe outline,

176
00:10:30,510 --> 00:10:31,470
what we're going to be doing.

177
00:10:31,470 --> 00:10:32,800
We want to stand.

178
00:10:32,800 --> 00:10:38,250
She ate the https server with one function and then another function.

179
00:10:38,250 --> 00:10:41,880
We're going to start the https server.

180
00:10:41,880 --> 00:10:47,570
At this point,

181
00:10:47,570 --> 00:10:51,450
these server names air gonna get confusing.

182
00:10:51,450 --> 00:10:55,760
If we have one server called server and the other one called something else,

183
00:10:55,760 --> 00:10:56,920
it's it's kind of weird.

184
00:10:56,920 --> 00:11:03,250
So let's go ahead and change the HDP server so that it is actually called HDP server

185
00:11:03,250 --> 00:11:09,700
instead of just server and then to start it rather than calling server.

186
00:11:09,700 --> 00:11:10,120
Doubtless.

187
00:11:10,120 --> 00:11:13,270
And we're gonna have to call http server dot Listen,

188
00:11:13,270 --> 00:11:14,830
All right,

189
00:11:14,830 --> 00:11:18,900
now we have a blueprint for how we're going to create the HDP s server.

190
00:11:18,900 --> 00:11:25,510
I'm actually just going to go ahead and copy the start function from http down to ancient

191
00:11:25,510 --> 00:11:31,840
PS because it's going to work almost entirely the same way we're going to change it to

192
00:11:31,840 --> 00:11:34,090
https server dot Listen,

193
00:11:34,090 --> 00:11:44,070
config dot http s support and then console Log out that the server is listening on config

194
00:11:44,070 --> 00:11:46,050
dot HDP s support.

195
00:11:46,050 --> 00:11:47,030
All right.

196
00:11:47,030 --> 00:11:47,530
Now,

197
00:11:47,530 --> 00:11:48,230
of course,

198
00:11:48,230 --> 00:11:51,640
the HDP s server variable doesn't exist yet.

199
00:11:51,640 --> 00:11:52,430
So up here,

200
00:11:52,430 --> 00:11:53,350
we need to create it.

201
00:11:53,350 --> 00:12:00,740
But this is done a little bit differently than the HDP one,

202
00:12:00,740 --> 00:12:03,490
but I'll start with his http version,

203
00:12:03,490 --> 00:12:05,630
and now we will make some modifications to it.

204
00:12:05,630 --> 00:12:10,850
Https server equals 82 p s dot create server.

205
00:12:10,850 --> 00:12:17,120
We're actually going to add in some variables before the call back.

206
00:12:17,120 --> 00:12:25,550
So we're gonna call it HDP s server options and then put in the call back,

207
00:12:25,550 --> 00:12:28,150
and then it's going to call unified server.

208
00:12:28,150 --> 00:12:31,930
But we haven't a fine https server option,

209
00:12:31,930 --> 00:12:34,840
so let's go ahead and work backwards from there.

210
00:12:34,840 --> 00:12:36,750
That's create that object.

211
00:12:36,750 --> 00:12:44,990
Https Server options equals an empty object.

212
00:12:44,990 --> 00:12:46,000
All right,

213
00:12:46,000 --> 00:12:48,810
we're going to want to keys on this object.

214
00:12:48,810 --> 00:12:53,470
The different streams starting http and https server is that the H two Bs server has a

215
00:12:53,470 --> 00:12:56,000
whole bunch of options related to you Guessed it.

216
00:12:56,000 --> 00:12:57,560
Https and SSL.

217
00:12:57,560 --> 00:13:03,790
The two that are important and are required for creating a server are the key and the

218
00:13:03,790 --> 00:13:07,060
certificate the key in the certificate or what?

219
00:13:07,060 --> 00:13:10,320
Allow the https encryption and decryption to actually happen.

220
00:13:10,320 --> 00:13:11,930
So if we don't specify those,

221
00:13:11,930 --> 00:13:14,290
it really can to create an encrypted server.

222
00:13:14,290 --> 00:13:16,450
So we're going to create a key,

223
00:13:16,450 --> 00:13:22,510
and we're going to create a certain we have to find them in something.

224
00:13:22,510 --> 00:13:26,630
We actually want to define these two variables or these two keys.

225
00:13:26,630 --> 00:13:30,780
As the contents of you guessed it.

226
00:13:30,780 --> 00:13:34,470
These two files that live in this htp esf order,

227
00:13:34,470 --> 00:13:36,680
the cert dot pam and the key dot him.

228
00:13:36,680 --> 00:13:42,010
So we want to read those two files and synchronously so that their data can be the value of

229
00:13:42,010 --> 00:13:42,660
this key.

230
00:13:42,660 --> 00:13:44,170
In order to do that,

231
00:13:44,170 --> 00:13:50,600
we're going to require the file system module fs that comes built into note.

232
00:13:50,600 --> 00:14:01,180
So we're going to save our F s equals Require fs and the function that were using on the FS

233
00:14:01,180 --> 00:14:06,050
module is read file sync with much of the note a p I.

234
00:14:06,050 --> 00:14:11,350
You'll notice that there are sink versions of a function and a sink versions of a function

235
00:14:11,350 --> 00:14:11,350
.

236
00:14:11,350 --> 00:14:14,120
For many cases,

237
00:14:14,120 --> 00:14:16,300
you want to use the A sink whenever possible,

238
00:14:16,300 --> 00:14:20,800
since we want these files to be read in synchronously.

239
00:14:20,800 --> 00:14:29,950
The sink version of this function makes sense that we want to call fs don't read file sink

240
00:14:29,950 --> 00:14:29,950
.

241
00:14:29,950 --> 00:14:35,580
And then we're going to specify the path to the file in this case that we're specifying the

242
00:14:35,580 --> 00:14:39,540
path to the key file so dot slash https.

243
00:14:39,540 --> 00:14:40,230
Because remember,

244
00:14:40,230 --> 00:14:44,670
these air is living up a directory inside of https directory keyed up.

245
00:14:44,670 --> 00:14:48,810
And then,

246
00:14:48,810 --> 00:14:51,790
for the certain wanted to the same thing Fs docked,

247
00:14:51,790 --> 00:14:58,570
we'd file sync don't slash h two bs,

248
00:14:58,570 --> 00:15:00,430
sir Don.

249
00:15:00,430 --> 00:15:02,800
Okay,

250
00:15:02,800 --> 00:15:05,890
And that's pretty much it we're now reading in these two files,

251
00:15:05,890 --> 00:15:13,130
so h two b a server options dot key will actually be the contents of this file and Sirte

252
00:15:13,130 --> 00:15:14,050
will be the same.

253
00:15:14,050 --> 00:15:19,270
We're passing these server options to the https server when it starts so that it can

254
00:15:19,270 --> 00:15:22,510
actually create a secure server when it starts up.

255
00:15:22,510 --> 00:15:23,230
Okay,

256
00:15:23,230 --> 00:15:25,850
so I'm gonna go ahead and clear out my terminal.

257
00:15:25,850 --> 00:15:27,730
We have saved these files.

258
00:15:27,730 --> 00:15:29,980
Now we're gonna go ahead and start the app.

259
00:15:29,980 --> 00:15:32,300
I do have a small type of appearance.

260
00:15:32,300 --> 00:15:37,490
I'm gonna change require to make sure it has an e on the end before you start the app.

261
00:15:37,490 --> 00:15:40,840
Make sure you get back out of the https directory.

262
00:15:40,840 --> 00:15:43,320
So seedy up a directory.

263
00:15:43,320 --> 00:15:47,150
Make sure you're in the base directory for your app before you try to start it.

264
00:15:47,150 --> 00:15:49,840
Go ahead and started with node index Doctor.

265
00:15:49,840 --> 00:15:50,390
Yes,

266
00:15:50,390 --> 00:15:51,810
all right.

267
00:15:51,810 --> 00:15:53,750
Now I have to Long's coming to the screen.

268
00:15:53,750 --> 00:15:59,390
The servers listening on Port 3000 and the server is listening on Port 2001 Kill that

269
00:15:59,390 --> 00:16:10,130
started up again with node off equals production and the servers listening on 5000 the

270
00:16:10,130 --> 00:16:12,450
server is listening on 5000 and one.

271
00:16:12,450 --> 00:16:13,360
Now,

272
00:16:13,360 --> 00:16:16,320
we have two different servers,

273
00:16:16,320 --> 00:16:16,970
technically,

274
00:16:16,970 --> 00:16:18,860
that are listening on two different ports,

275
00:16:18,860 --> 00:16:23,850
but passing all the meat of their logic to this unified server function.

276
00:16:23,850 --> 00:16:24,100
So,

277
00:16:24,100 --> 00:16:24,960
in reality,

278
00:16:24,960 --> 00:16:27,320
these two servers are identical.

279
00:16:27,320 --> 00:16:28,880
They're working the same way.

280
00:16:28,880 --> 00:16:32,680
It's just that they need to listen on two different ports.

281
00:16:32,680 --> 00:16:37,800
And the client that wants to connect over http can connect on the first port if they want,

282
00:16:37,800 --> 00:16:39,150
can't https,

283
00:16:39,150 --> 00:16:39,640
which,

284
00:16:39,640 --> 00:16:40,490
for obvious reasons,

285
00:16:40,490 --> 00:16:41,850
is highly recommended.

286
00:16:41,850 --> 00:16:44,390
They can connect on the second Port.

287
00:16:44,390 --> 00:16:45,530
All right,

288
00:16:45,530 --> 00:16:47,290
now we can move on to the next lecture

