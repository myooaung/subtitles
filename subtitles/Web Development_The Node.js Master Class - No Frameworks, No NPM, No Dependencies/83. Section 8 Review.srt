1
00:00:00,000 --> 00:00:04,710
in this section,

2
00:00:04,710 --> 00:00:10,310
we went over all of the node modules that we hadn't previously talked about in the earlier

3
00:00:10,310 --> 00:00:11,050
sections.

4
00:00:11,050 --> 00:00:15,990
We began by talking about some deprecating ones that you really shouldn't use.

5
00:00:15,990 --> 00:00:23,960
Or you should at least avoid puny code domain and everything happening in the deprecating

6
00:00:23,960 --> 00:00:25,160
AP I section.

7
00:00:25,160 --> 00:00:26,460
Then we talked about T.

8
00:00:26,460 --> 00:00:27,170
T y.

9
00:00:27,170 --> 00:00:27,920
And how,

10
00:00:27,920 --> 00:00:31,860
while it does have interesting events that you combined two,

11
00:00:31,860 --> 00:00:34,950
you'd be unlikely to have a reason to use it directly.

12
00:00:34,950 --> 00:00:37,930
And we talked about GSM modules,

13
00:00:37,930 --> 00:00:41,940
how they're currently experimental and not yet supporting import,

14
00:00:41,940 --> 00:00:45,340
which kind of makes them illogical to use at this point.

15
00:00:45,340 --> 00:00:53,620
We talked about the tracing module and the inspector module and how you'll need third party

16
00:00:53,620 --> 00:00:54,900
tools to use those.

17
00:00:54,900 --> 00:01:01,440
And we talked about internationalisation as well as C plus plus add ons and c++ adults and

18
00:01:01,440 --> 00:01:02,200
a P I,

19
00:01:02,200 --> 00:01:09,600
and how you'll need to compile a new version of node to make use out of those modules in

20
00:01:09,600 --> 00:01:10,670
any significant way.

21
00:01:10,670 --> 00:01:11,760
After that,

22
00:01:11,760 --> 00:01:15,710
we moved on to case studies of a few specific modules.

23
00:01:15,710 --> 00:01:16,450
Http.

24
00:01:16,450 --> 00:01:20,540
Two were recreated a client and server VM were.

25
00:01:20,540 --> 00:01:27,460
We ran arbitrary code inside of a virtual machine and modify the global execution context.

26
00:01:27,460 --> 00:01:38,430
And we did you DP data Graham were recreated a kind and server and then net and TLS where

27
00:01:38,430 --> 00:01:39,350
we did the same.

28
00:01:39,350 --> 00:01:43,180
We then moved on to the rebel module,

29
00:01:43,180 --> 00:01:46,070
where we showed how easy it was to create a rappel,

30
00:01:46,070 --> 00:01:53,110
and we used a sink hooks to show how you contract the life cycle of a synchronous processes

31
00:01:53,110 --> 00:01:53,110
.

32
00:01:53,110 --> 00:01:54,100
So this point,

33
00:01:54,100 --> 00:01:56,100
that is all the modules.

34
00:01:56,100 --> 00:02:02,050
If you choose to do a deeper dive on any of the modules that we explored here,

35
00:02:02,050 --> 00:02:05,780
just make sure you're using ones that aren't too experimental.

36
00:02:05,780 --> 00:02:10,190
And if you are interested in using experimental modules like a sink cooks,

37
00:02:10,190 --> 00:02:17,650
that might be a good reason to start exploring something beyond the current LTs of node.

38
00:02:17,650 --> 00:02:20,500
The LTs is going to be stable,

39
00:02:20,500 --> 00:02:24,920
but the newer versions of know that are currently under active development might have

40
00:02:24,920 --> 00:02:29,150
resolved some issues that you will encounter when you use the experimental modules.

41
00:02:29,150 --> 00:02:30,520
With that,

42
00:02:30,520 --> 00:02:32,950
we could move on to the final lecture

