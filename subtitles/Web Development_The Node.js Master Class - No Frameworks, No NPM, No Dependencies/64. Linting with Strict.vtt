WEBVTT
ï»¿1
00:00:00.000 --> 00:00:04.250
in this lecture,

2
00:00:04.250 --> 00:00:06.840
we're going to go over how to use thestreet,

3
00:00:06.840 --> 00:00:10.560
flag toe lint or do something analogous toe limiting your code.

4
00:00:10.560 --> 00:00:15.380
True drive A script lending is different than what we're going to do today.

5
00:00:15.380 --> 00:00:22.310
Using strict mode will only catch a certain subset of issues and it won't catch syntax

6
00:00:22.310 --> 00:00:24.810
errors that don't cause major issues.

7
00:00:24.810 --> 00:00:25.880
Using strict mode,

8
00:00:25.880 --> 00:00:26.460
however,

9
00:00:26.460 --> 00:00:33.050
will allow you to catch issue such as declaring global variables or trying to delete

10
00:00:33.050 --> 00:00:37.740
undefeatable properties or other 70 failing assignments,

11
00:00:37.740 --> 00:00:38.590
etcetera.

12
00:00:38.590 --> 00:00:40.840
So to demonstrate this,

13
00:00:40.840 --> 00:00:51.820
we're going to copy index dot Js once again to index dash strict dot Js We're gonna open up

14
00:00:51.820 --> 00:00:58.580
this one and I'm going to run this file in strict mode so that you can see how it would

15
00:00:58.580 --> 00:01:07.010
normally go rather than starting this with node index dot strict dot Js I'm actually going

16
00:01:07.010 --> 00:01:15.940
to start it with node and then a flag dash dash use underscore strict and then index dash

17
00:01:15.940 --> 00:01:17.150
strict dot Js.

18
00:01:17.150 --> 00:01:18.950
As you can see,

19
00:01:18.950 --> 00:01:21.250
the execution is happening as normal.

20
00:01:21.250 --> 00:01:25.720
I'm gonna kill that and now within the top,

21
00:01:25.720 --> 00:01:35.150
I'm going to declare a global that strict mode should catch.

22
00:01:35.150 --> 00:01:39.000
So rather than calling Var Fu equals bar.

23
00:01:39.000 --> 00:01:42.060
I'm gonna get rid of this bar which will,

24
00:01:42.060 --> 00:01:42.720
by default,

25
00:01:42.720 --> 00:01:45.170
create a variable at global scope,

26
00:01:45.170 --> 00:01:49.320
which is generally something you want to avoid and so strict mode is going to catch that.

27
00:01:49.320 --> 00:01:55.960
So let's restart the app using the use strict wag and you can see it actually,

28
00:01:55.960 --> 00:01:57.310
through a reference error,

29
00:01:57.310 --> 00:01:59.870
saying Fu is not defined.

30
00:01:59.870 --> 00:02:02.610
Let's restart this without the use Strict flag.

31
00:02:02.610 --> 00:02:06.700
I'm just gonna call note in desh gastric dot Js.

32
00:02:06.700 --> 00:02:08.950
You can see that it starts up as normal.

33
00:02:08.950 --> 00:02:15.100
It's only when we used the use strict flag that these things that are normally ignored,

34
00:02:15.100 --> 00:02:20.790
like syntax errors or reference errors that don't cause major issues actually end up

35
00:02:20.790 --> 00:02:21.320
crashing.

36
00:02:21.320 --> 00:02:28.020
The app using use strict when starting up your app can help you diagnose a number of issues

37
00:02:28.020 --> 00:02:28.020
.

38
00:02:28.020 --> 00:02:34.300
And so I'd recommend that you get familiar with using it within No Js as you debug your

39
00:02:34.300 --> 00:02:35.100
applications.

40
00:02:35.100 --> 00:02:36.720
With that,

41
00:02:36.720 --> 00:02:38.080
we can move on to the next lecture

