1
00:00:00,000 --> 00:00:04,160
in this lecture,

2
00:00:04,160 --> 00:00:07,070
we're gonna build out the responder for the list checks,

3
00:00:07,070 --> 00:00:07,550
command.

4
00:00:07,550 --> 00:00:12,030
Now let's checks actually takes in two optional flags.

5
00:00:12,030 --> 00:00:21,480
So let's review the syntax by looking at the man page going to start up the f and then say

6
00:00:21,480 --> 00:00:21,850
help.

7
00:00:21,850 --> 00:00:25,560
Let's checks allows you to state dash,

8
00:00:25,560 --> 00:00:27,950
dash up or dash dash down,

9
00:00:27,950 --> 00:00:30,160
but both are optional.

10
00:00:30,160 --> 00:00:32,040
If you don't include either flag,

11
00:00:32,040 --> 00:00:34,420
it would just show you all of the checks.

12
00:00:34,420 --> 00:00:37,520
So let's go ahead and start building this out.

13
00:00:37,520 --> 00:00:43,150
I'm gonna remove the default Consul look.

14
00:00:43,150 --> 00:00:47,630
And now the first thing we want to do is just list out the checks.

15
00:00:47,630 --> 00:00:51,470
So we're gonna use our data library list checks.

16
00:00:51,470 --> 00:00:57,360
It'll pass this back in here and an array of check i d.

17
00:00:57,360 --> 00:00:57,670
S.

18
00:00:57,670 --> 00:01:01,300
If there's no error and check,

19
00:01:01,300 --> 00:01:05,570
I DS is truth E and check.

20
00:01:05,570 --> 00:01:06,050
I d.

21
00:01:06,050 --> 00:01:08,850
S has a length greater than zero.

22
00:01:08,850 --> 00:01:10,950
Then we're going to continue.

23
00:01:10,950 --> 00:01:17,310
The first thing that would do is enter a vertical space before we start running through

24
00:01:17,310 --> 00:01:22,370
each of these checks to separate out this response from any other previous responses.

25
00:01:22,370 --> 00:01:23,750
Now,

26
00:01:23,750 --> 00:01:25,870
for each of the check I d.

27
00:01:25,870 --> 00:01:26,140
S,

28
00:01:26,140 --> 00:01:33,440
we want to run through a loop that will give us the check I d.

29
00:01:33,440 --> 00:01:37,970
Individually and then we want to read the data for that check I d.

30
00:01:37,970 --> 00:01:43,070
So I want to read checks and pass it.

31
00:01:43,070 --> 00:01:47,650
Check I D and expect back in error and check data.

32
00:01:47,650 --> 00:01:49,980
Now,

33
00:01:49,980 --> 00:01:50,650
this point,

34
00:01:50,650 --> 00:01:57,090
we need to decide whether or not this is a check that should be included in our response to

35
00:01:57,090 --> 00:01:59,700
the user we wanted to fall to false.

36
00:01:59,700 --> 00:02:01,950
So I'm gonna say include check.

37
00:02:01,950 --> 00:02:05,390
It's going to default to false.

38
00:02:05,390 --> 00:02:08,850
Now this push the string down to lower case.

39
00:02:08,850 --> 00:02:17,170
They said that lower string equals str to lower case if they included dash,

40
00:02:17,170 --> 00:02:20,130
dash up or dash dash down with upper case,

41
00:02:20,130 --> 00:02:21,200
we don't want to miss it.

42
00:02:21,200 --> 00:02:25,530
So we're gonna push everything down to a lower case before we go looking for those strings

43
00:02:25,530 --> 00:02:28,210
and we want to get the state of the check,

44
00:02:28,210 --> 00:02:31,690
but default two down.

45
00:02:31,690 --> 00:02:39,130
So the state of the check is tape of check data.

46
00:02:39,130 --> 00:02:42,220
State equals strength.

47
00:02:42,220 --> 00:02:44,090
If so,

48
00:02:44,090 --> 00:02:44,690
we'll use it.

49
00:02:44,690 --> 00:02:48,550
Four will consider it down.

50
00:02:48,550 --> 00:02:52,850
If it doesn't have a state yet then the state is unknown.

51
00:02:52,850 --> 00:02:55,120
But for the purposes of this admin tool,

52
00:02:55,120 --> 00:02:56,650
we will consider that state to be down,

53
00:02:56,650 --> 00:03:01,370
and then that is the state that we're going to filter on to know whether or not to include

54
00:03:01,370 --> 00:03:01,960
this check.

55
00:03:01,960 --> 00:03:04,680
But when we write out the checks,

56
00:03:04,680 --> 00:03:08,770
we want to lump in unknowns with the downs.

57
00:03:08,770 --> 00:03:15,850
So we also want to get the state in a way that will default to unknown if there is no state

58
00:03:15,850 --> 00:03:15,850
.

59
00:03:15,850 --> 00:03:25,250
So we're gonna save our state over unknown is going to equal this same logic,

60
00:03:25,250 --> 00:03:27,350
but defaulting to unknown.

61
00:03:27,350 --> 00:03:29,510
I was gonna add a comment here,

62
00:03:29,510 --> 00:03:33,770
Get the state default to unknown,

63
00:03:33,770 --> 00:03:38,540
and you'll see the way that we use these two different variables in this next section.

64
00:03:38,540 --> 00:03:48,050
So if the user has specified the state or hasn't specified any state,

65
00:03:48,050 --> 00:03:52,550
include the current check accordingly.

66
00:03:52,550 --> 00:04:08,240
So we're going to say that if the lower string index of dash dash state over the state that

67
00:04:08,240 --> 00:04:11,210
we defined here can only either be up or down,

68
00:04:11,210 --> 00:04:15,780
the word unknown isn't there were trying to find out if when the user specified to list

69
00:04:15,780 --> 00:04:16,150
checks,

70
00:04:16,150 --> 00:04:17,600
they included the straying dash,

71
00:04:17,600 --> 00:04:19,350
dash up or dash dash down.

72
00:04:19,350 --> 00:04:23,770
So if lower string includes dash dash state,

73
00:04:23,770 --> 00:04:28,350
pour the lower string doesn't include the words down or up.

74
00:04:28,350 --> 00:04:42,830
So we're going to say or lower string index of dash dash down equals negative one and lower

75
00:04:42,830 --> 00:04:50,760
string index of dash dash up equals negative one.

76
00:04:50,760 --> 00:04:53,550
Then we want to log this out.

77
00:04:53,550 --> 00:04:54,990
So in other words,

78
00:04:54,990 --> 00:05:02,650
if the state that we read from this check when we were defaulting to down is included in

79
00:05:02,650 --> 00:05:06,300
the flags that the user set in the console as an input,

80
00:05:06,300 --> 00:05:08,390
then we want to continue.

81
00:05:08,390 --> 00:05:12,610
The only other case in which want to continue is if the user didn't specify dash,

82
00:05:12,610 --> 00:05:14,370
dash down or dash dash up,

83
00:05:14,370 --> 00:05:16,380
in which case all things should be included.

84
00:05:16,380 --> 00:05:21,800
So now we want to create the line that we're gonna lock out so far line equals is going to

85
00:05:21,800 --> 00:05:26,190
start with I D and then check data I d.

86
00:05:26,190 --> 00:05:30,610
Then we're going to spell out the method and the u.

87
00:05:30,610 --> 00:05:33,380
R l and the state of the check.

88
00:05:33,380 --> 00:05:46,730
So we're going to say check data method to upper case and then check data protocol.

89
00:05:46,730 --> 00:05:50,790
Then we're going to add on colon slash,

90
00:05:50,790 --> 00:05:53,540
slash and in the U.

91
00:05:53,540 --> 00:05:53,700
R.

92
00:05:53,700 --> 00:05:53,920
L.

93
00:05:53,920 --> 00:05:56,650
Lastly,

94
00:05:56,650 --> 00:06:00,190
we want to include the state and for that,

95
00:06:00,190 --> 00:06:05,460
we will use state or unknown because we were writing these out.

96
00:06:05,460 --> 00:06:09,190
We do want a lump in unknown things with the down checks,

97
00:06:09,190 --> 00:06:14,370
but we do want to specify that they were actually unknown not down.

98
00:06:14,370 --> 00:06:20,660
So now we're going to log out this line and then include a vertical space afterwards.

99
00:06:20,660 --> 00:06:30,770
So that's the whole this checks function that started up and try it out.

100
00:06:30,770 --> 00:06:33,410
It's a list checks,

101
00:06:33,410 --> 00:06:35,340
and I'm not gonna specify a flag.

102
00:06:35,340 --> 00:06:38,690
You can see we're hitting an error that checks.

103
00:06:38,690 --> 00:06:45,910
I DS is not defined at 2 37 That is because this array is returning.

104
00:06:45,910 --> 00:06:46,430
Check I.

105
00:06:46,430 --> 00:06:46,650
D.

106
00:06:46,650 --> 00:06:49,240
S and I am calling it checks I ds.

107
00:06:49,240 --> 00:06:50,550
So we need to correct that.

108
00:06:50,550 --> 00:06:52,050
Start the at backup,

109
00:06:52,050 --> 00:06:56,840
try again list checks with no flag,

110
00:06:56,840 --> 00:06:59,950
and you see that we have a number of checks.

111
00:06:59,950 --> 00:07:04,390
They're all spelled out with their i d method protocol colon slash,

112
00:07:04,390 --> 00:07:06,810
slash and then the or L and their current state.

113
00:07:06,810 --> 00:07:09,620
You can see that some of them are down and some of them are up.

114
00:07:09,620 --> 00:07:10,670
So let's ask again,

115
00:07:10,670 --> 00:07:12,730
List checks dash,

116
00:07:12,730 --> 00:07:13,350
dash up.

117
00:07:13,350 --> 00:07:17,050
Now we're just getting these three that are up.

118
00:07:17,050 --> 00:07:20,440
Let's try a list checks dash,

119
00:07:20,440 --> 00:07:24,350
dash down and we're just getting the three that are down.

120
00:07:24,350 --> 00:07:26,650
So everything seems to be working fine.

121
00:07:26,650 --> 00:07:31,060
We can kill this application and move on to the next lecture.

