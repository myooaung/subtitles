1
00:00:00,000 --> 00:00:04,360
in this lecture,

2
00:00:04,360 --> 00:00:08,680
we'd like to build out the responder for the man or help commands.

3
00:00:08,680 --> 00:00:09,410
If you remember,

4
00:00:09,410 --> 00:00:13,500
when the user asks for man a manual or help,

5
00:00:13,500 --> 00:00:19,290
both of those event binds are going to call the same responder cli dot responders dot help

6
00:00:19,290 --> 00:00:19,290
.

7
00:00:19,290 --> 00:00:26,450
And so we want to fill out this function with a typical man page that you'd see in any

8
00:00:26,450 --> 00:00:28,520
terminal base advocation.

9
00:00:28,520 --> 00:00:30,120
When the user asked this question,

10
00:00:30,120 --> 00:00:32,320
they asked man or they ask help.

11
00:00:32,320 --> 00:00:36,420
We want to list out all the commands they're allowed to ask,

12
00:00:36,420 --> 00:00:42,280
as well as a semi thorough description off that question so that they can see it in more

13
00:00:42,280 --> 00:00:42,820
detail.

14
00:00:42,820 --> 00:00:43,550
Remember,

15
00:00:43,550 --> 00:00:48,180
the only time of user is going to be saying man or saying help is if they really don't know

16
00:00:48,180 --> 00:00:52,810
what commands they should be entering or if they're unclear of the syntax.

17
00:00:52,810 --> 00:00:59,900
And so let's define all the commands that they are allowed to ask.

18
00:00:59,900 --> 00:01:05,500
I'm going to go down to where we codify the inputs earlier,

19
00:01:05,500 --> 00:01:09,690
and we're going to base this new object on that order,

20
00:01:09,690 --> 00:01:10,050
Ray,

21
00:01:10,050 --> 00:01:12,810
I'm gonna pay set in here,

22
00:01:12,810 --> 00:01:16,150
and then we're gonna have to modify it because that was the contents of an array,

23
00:01:16,150 --> 00:01:19,590
and now it's going to need to be the contents of an object.

24
00:01:19,590 --> 00:01:27,090
The let's take out these commas and entering some empty strings so each key of this object

25
00:01:27,090 --> 00:01:28,200
is going to be a command.

26
00:01:28,200 --> 00:01:32,190
And then the value of that key is going to be a description of that command.

27
00:01:32,190 --> 00:01:57,270
We're also going to rearrange this border a little bit so that the order representing it to

28
00:01:57,270 --> 00:01:59,150
the user is most relevant to them.

29
00:01:59,150 --> 00:02:01,450
So the exit command we're going to say,

30
00:02:01,450 --> 00:02:10,500
kill the CLI and the rest of the application for the man page.

31
00:02:10,500 --> 00:02:15,700
We're going to say that this is just what you did right now show this help.

32
00:02:15,700 --> 00:02:21,350
Page Help is an alias of the man.

33
00:02:21,350 --> 00:02:34,660
Command stats is get statistics on the underlying operating system and resource utilization

34
00:02:34,660 --> 00:02:47,170
list users is going to show a list of all the registered Take a UN deleted users in the

35
00:02:47,170 --> 00:02:47,560
system.

36
00:02:47,560 --> 00:02:56,370
More user info is actually going to need to be modified in its key because the command

37
00:02:56,370 --> 00:02:58,810
they're entering isn't simply more user info.

38
00:02:58,810 --> 00:03:00,270
It's more user info,

39
00:03:00,270 --> 00:03:00,860
dash,

40
00:03:00,860 --> 00:03:07,150
dash and then a user i d were using these brackets to represent a variable that the user

41
00:03:07,150 --> 00:03:12,930
should put in Any admin looking at this should understand that this command needs them to

42
00:03:12,930 --> 00:03:16,330
modify the bracketed portion with their own variable.

43
00:03:16,330 --> 00:03:19,910
So more user info dash dash user i D.

44
00:03:19,910 --> 00:03:26,000
It's going to show details of a specific user.

45
00:03:26,000 --> 00:03:33,620
Let's checks is going to need to be modified in its key to list checks up dash dash down

46
00:03:33,620 --> 00:03:34,340
either.

47
00:03:34,340 --> 00:03:41,750
Or so we want that to show a list of all the active checks in the system,

48
00:03:41,750 --> 00:03:44,170
including their state.

49
00:03:44,170 --> 00:03:54,470
The dash dash up and the dash dash down flags are both optional.

50
00:03:54,470 --> 00:03:56,290
For more check info,

51
00:03:56,290 --> 00:04:02,850
we want to modify the key to be dash dash check I D and we'll say,

52
00:04:02,850 --> 00:04:09,150
show details of a specified check for list logs.

53
00:04:09,150 --> 00:04:11,400
We can leave that key as it is.

54
00:04:11,400 --> 00:04:17,810
Show a list of all the log files available to be read,

55
00:04:17,810 --> 00:04:21,750
compressed and un compressed.

56
00:04:21,750 --> 00:04:24,630
For more log info.

57
00:04:24,630 --> 00:04:30,450
We want to change the key so that the user knows they need to specify Dash dash file name

58
00:04:30,450 --> 00:04:40,090
and we'll say the value is show details of a specified log file.

59
00:04:40,090 --> 00:04:45,420
So that's all the commands and their descriptions now that we have that prior to presenting

60
00:04:45,420 --> 00:04:46,440
this to the user.

61
00:04:46,440 --> 00:04:50,660
We actually want to do a little bit of formatting.

62
00:04:50,660 --> 00:04:51,570
Typically,

63
00:04:51,570 --> 00:04:53,850
when you see a man page or a help page,

64
00:04:53,850 --> 00:04:56,910
you see horizontal lines all the way across the screen.

65
00:04:56,910 --> 00:05:00,470
A bit of a title section saying This is the man page,

66
00:05:00,470 --> 00:05:01,200
etcetera.

67
00:05:01,200 --> 00:05:03,540
And so we want to include that kind of thing.

68
00:05:03,540 --> 00:05:07,210
So we're going to call some functions that will let us build a header.

69
00:05:07,210 --> 00:05:18,150
We want to show Header for the help page that is as wide as the screen.

70
00:05:18,150 --> 00:05:26,160
So we're gonna build a function called cli dot horizontal line.

71
00:05:26,160 --> 00:05:31,570
And that's just going to draw a horizontal line across the console in whatever with the

72
00:05:31,570 --> 00:05:34,090
console currently is so recalling that,

73
00:05:34,090 --> 00:05:35,130
and then later on,

74
00:05:35,130 --> 00:05:35,950
we're gonna build that.

75
00:05:35,950 --> 00:05:40,480
Next we want to write a title called CLI Manual,

76
00:05:40,480 --> 00:05:42,390
but we wanted to be centered on the screen,

77
00:05:42,390 --> 00:05:48,500
so we want to skull cli centered and then pass it the string cli manual.

78
00:05:48,500 --> 00:05:55,490
Then we want to call another horizontal line and then some vertical spaces,

79
00:05:55,490 --> 00:06:03,740
so cli vertical space and we want to pass it to because we want to vertical spaces now you

80
00:06:03,740 --> 00:06:07,070
should be getting an idea of how these functions work or is on the line.

81
00:06:07,070 --> 00:06:08,900
Draws a line centered,

82
00:06:08,900 --> 00:06:14,760
should center some text on the screen and then vertical space adds some returns.

83
00:06:14,760 --> 00:06:18,220
We will go back to actually writing those functions in just a moment.

84
00:06:18,220 --> 00:06:21,280
But for now let's assume that they're doing what they should.

85
00:06:21,280 --> 00:06:23,170
Now that we have the header in place,

86
00:06:23,170 --> 00:06:25,560
we want to show each command,

87
00:06:25,560 --> 00:06:26,470
in other words,

88
00:06:26,470 --> 00:06:30,270
looked through this object and right out each thing that the user is allowed to dio.

89
00:06:30,270 --> 00:06:31,850
So show each command,

90
00:06:31,850 --> 00:06:39,370
followed by its explanation and wait and yellow,

91
00:06:39,370 --> 00:06:40,690
respectively.

92
00:06:40,690 --> 00:06:47,270
So let's start looping through this object four fr key in commands.

93
00:06:47,270 --> 00:06:48,750
So we're looping through up here.

94
00:06:48,750 --> 00:06:57,200
If commands has Owen property key,

95
00:06:57,200 --> 00:06:58,890
then we want to continue.

96
00:06:58,890 --> 00:07:04,950
We want to say that the value equals commands keep.

97
00:07:04,950 --> 00:07:06,870
So now we've simply got in,

98
00:07:06,870 --> 00:07:08,450
whatever the value of that he was,

99
00:07:08,450 --> 00:07:11,500
and we want to build the line that we're about to write to the console.

100
00:07:11,500 --> 00:07:17,400
So we want to say that the line equals some text that makes it yellow,

101
00:07:17,400 --> 00:07:19,550
which will fill in a second plus the key,

102
00:07:19,550 --> 00:07:23,100
plus the end of that expression.

103
00:07:23,100 --> 00:07:24,110
If you remember.

104
00:07:24,110 --> 00:07:28,110
We are writing colorful things to the console down here.

105
00:07:28,110 --> 00:07:36,490
So I am actually just going to copy what we're doing here all the way up to the M after the

106
00:07:36,490 --> 00:07:36,950
number.

107
00:07:36,950 --> 00:07:41,490
And I'm going to pace that here,

108
00:07:41,490 --> 00:07:43,440
but change the 34 to 33.

109
00:07:43,440 --> 00:07:44,010
Now.

110
00:07:44,010 --> 00:07:50,540
I want to go get the rest of that string after the percent s because wherever the percent s

111
00:07:50,540 --> 00:07:56,590
is what allows console log to take whatever is here and put it between these two escape

112
00:07:56,590 --> 00:07:57,040
coats.

113
00:07:57,040 --> 00:08:02,680
So I'm just going to take the end of this escape code and paste it in here.

114
00:08:02,680 --> 00:08:03,540
Remember,

115
00:08:03,540 --> 00:08:06,800
you can simply right this way to the console log.

116
00:08:06,800 --> 00:08:11,790
You don't need to have escaped codes and then follow that up with the string.

117
00:08:11,790 --> 00:08:16,640
You can just wrap the string in the actual bits and pieces of the escape codes,

118
00:08:16,640 --> 00:08:17,790
and that's what we're doing here.

119
00:08:17,790 --> 00:08:21,310
Now we want to define how much padding that we need.

120
00:08:21,310 --> 00:08:30,790
So we want to say padding is going to equal 60 minus the length of the line that we just

121
00:08:30,790 --> 00:08:36,020
defined here because we want to say that Boren line equals that and the padding equals 60

122
00:08:36,020 --> 00:08:36,970
minus line.

123
00:08:36,970 --> 00:08:37,850
The length.

124
00:08:37,850 --> 00:08:38,500
You know,

125
00:08:38,500 --> 00:08:43,350
there was a little bit confusing that we just repeat here we're defining a key.

126
00:08:43,350 --> 00:08:46,920
We're wrapping it in escape codes to make it colorful.

127
00:08:46,920 --> 00:08:48,840
That is defined as line.

128
00:08:48,840 --> 00:08:53,090
We're getting the length of that line and we're subtracting it from 60.

129
00:08:53,090 --> 00:08:56,960
So we know how much padding to put after this key,

130
00:08:56,960 --> 00:09:02,780
so that everything that we right after this key ends up vertically aligned.

131
00:09:02,780 --> 00:09:05,440
And this will make more sense when you see this all right,

132
00:09:05,440 --> 00:09:06,210
into the console.

133
00:09:06,210 --> 00:09:08,000
So we want to do a four loop now.

134
00:09:08,000 --> 00:09:10,360
So for I equals zero,

135
00:09:10,360 --> 00:09:15,250
I was going to be less than padding I plus Plus,

136
00:09:15,250 --> 00:09:22,320
we're going to add a space onto this line until it equals 60.

137
00:09:22,320 --> 00:09:24,060
So all of these lines,

138
00:09:24,060 --> 00:09:25,610
once we get through with this loop,

139
00:09:25,610 --> 00:09:31,780
are going to have a length of 60 so everything that comes after them is going to be aligned

140
00:09:31,780 --> 00:09:31,780
.

141
00:09:31,780 --> 00:09:35,180
So we have line plus equals value,

142
00:09:35,180 --> 00:09:38,550
So we're actually adding the value on to the end.

143
00:09:38,550 --> 00:09:48,710
Now we're going to log out the line and we're going to enter a vertical space after all of

144
00:09:48,710 --> 00:09:52,850
this is done after the four loop is complete and we've logged everything out.

145
00:09:52,850 --> 00:09:56,410
We want to enter another vertical space,

146
00:09:56,410 --> 00:10:02,000
and then we want to end with another horizontal line.

147
00:10:02,000 --> 00:10:05,380
Before any of this is going toe work,

148
00:10:05,380 --> 00:10:10,120
we're actually going to need to write these functions that we used appear horizontal line

149
00:10:10,120 --> 00:10:11,590
centered and vertical space.

150
00:10:11,590 --> 00:10:13,710
So let's create the vertical space first.

151
00:10:13,710 --> 00:10:23,300
CLI vertical space is a function,

152
00:10:23,300 --> 00:10:27,020
and it takes in the number of lines that it should write to.

153
00:10:27,020 --> 00:10:32,550
The console lines should be a number,

154
00:10:32,550 --> 00:10:39,260
and it should be greater than zero if not,

155
00:10:39,260 --> 00:10:40,520
is going to default toe one.

156
00:10:40,520 --> 00:10:46,050
So now we're going to do another four Luke for I equals zero.

157
00:10:46,050 --> 00:10:53,900
I is less than the number of lines I plus.

158
00:10:53,900 --> 00:10:54,420
Plus,

159
00:10:54,420 --> 00:10:57,330
we went to console Log an empty string,

160
00:10:57,330 --> 00:10:58,160
which will,

161
00:10:58,160 --> 00:11:03,060
in effect include a carriage return and move on to the next line.

162
00:11:03,060 --> 00:11:03,880
Right now,

163
00:11:03,880 --> 00:11:11,050
we want to create a horizontal line across the screen,

164
00:11:11,050 --> 00:11:19,330
so we want to say CLI horizontal line is a function doesn't take in any inputs.

165
00:11:19,330 --> 00:11:22,620
Before we write dashes across the screen.

166
00:11:22,620 --> 00:11:26,070
We're going to do figure out how big the screen is.

167
00:11:26,070 --> 00:11:33,750
We want to get the available screen size.

168
00:11:33,750 --> 00:11:34,690
For that,

169
00:11:34,690 --> 00:11:39,450
we're going to say that the whiff is equal to process standard out,

170
00:11:39,450 --> 00:11:41,190
not columns.

171
00:11:41,190 --> 00:11:46,060
Now we're going to build a line which starts,

172
00:11:46,060 --> 00:11:49,570
is an empty string and then do yet another four loop,

173
00:11:49,570 --> 00:11:52,050
adding on dashes to that string into them.

174
00:11:52,050 --> 00:11:55,560
It's the same with as the number of columns of the screen.

175
00:11:55,560 --> 00:11:57,600
So for equal,

176
00:11:57,600 --> 00:12:01,950
zero eyes less than with I plus plus,

177
00:12:01,950 --> 00:12:07,360
we want to upend a dash to the line string.

178
00:12:07,360 --> 00:12:07,980
And then,

179
00:12:07,980 --> 00:12:09,540
after the four loop is done,

180
00:12:09,540 --> 00:12:15,250
we want to just log it out so console dot log the line.

181
00:12:15,250 --> 00:12:16,400
Lastly,

182
00:12:16,400 --> 00:12:22,750
let's create the function that lets us create centered text on the screen.

183
00:12:22,750 --> 00:12:26,420
You can probably anticipate how we're going to do this.

184
00:12:26,420 --> 00:12:29,750
We're going to need to get the width of the screen just like we did before.

185
00:12:29,750 --> 00:12:35,000
Calculate how much padding we should have on the left side of whatever we're writing.

186
00:12:35,000 --> 00:12:36,740
Put in the padding,

187
00:12:36,740 --> 00:12:39,990
using a for loop and then write the text and it'll be centered.

188
00:12:39,990 --> 00:12:48,360
So Seelye dot centered is going to take in a string which we're going to have to sanity,

189
00:12:48,360 --> 00:12:51,850
check straying equals type of string,

190
00:12:51,850 --> 00:12:56,140
equal string and has a leg.

191
00:12:56,140 --> 00:13:05,060
If so,

192
00:13:05,060 --> 00:13:05,780
we'll take it.

193
00:13:05,780 --> 00:13:08,990
It's trimmed version so that spaces on either side of it.

194
00:13:08,990 --> 00:13:13,540
Don't mess us up when we're trying to center thinks or we're gonna default it to an empty

195
00:13:13,540 --> 00:13:15,700
string and go ahead and write it anyway.

196
00:13:15,700 --> 00:13:17,490
So just like before,

197
00:13:17,490 --> 00:13:20,280
we need to get the available screen size.

198
00:13:20,280 --> 00:13:21,620
So I was gonna copy that from here.

199
00:13:21,620 --> 00:13:29,880
Now we need to calculate the left padding there should be.

200
00:13:29,880 --> 00:13:32,620
So you are left.

201
00:13:32,620 --> 00:13:36,350
Patty is going to equal math dot floor.

202
00:13:36,350 --> 00:13:43,030
So we're gonna round down the with of the screen minus the length of the string that were

203
00:13:43,030 --> 00:13:44,330
writing to the screen.

204
00:13:44,330 --> 00:13:50,050
So everything that's left when you subtract the text from the with that's already there,

205
00:13:50,050 --> 00:13:52,320
then divided by two and rounded down.

206
00:13:52,320 --> 00:13:52,990
Obviously,

207
00:13:52,990 --> 00:13:57,680
this won't be exactly centred if there aren't the correct number of otter,

208
00:13:57,680 --> 00:13:59,920
even pixels and we're rounding down.

209
00:13:59,920 --> 00:14:02,140
But this will be pretty close,

210
00:14:02,140 --> 00:14:03,050
just entered every time.

211
00:14:03,050 --> 00:14:11,650
So then we actually want to put in left padded spaces before the string itself.

212
00:14:11,650 --> 00:14:13,500
So again,

213
00:14:13,500 --> 00:14:15,950
I'm going to start with an empty line.

214
00:14:15,950 --> 00:14:18,050
That's just an empty string.

215
00:14:18,050 --> 00:14:20,080
Then I'm gonna do a four loop.

216
00:14:20,080 --> 00:14:26,820
I equals zero eyes less than left padding because that's the amount of padding we're

217
00:14:26,820 --> 00:14:29,710
putting in I plus plus.

218
00:14:29,710 --> 00:14:36,590
And then for each path of this loop I wanted to add on plus equals another space.

219
00:14:36,590 --> 00:14:39,470
And after the loop completes,

220
00:14:39,470 --> 00:14:40,930
then at the very end,

221
00:14:40,930 --> 00:14:42,970
I want to add on the street.

222
00:14:42,970 --> 00:14:49,160
So the patty comes first and then the string and then I want a log out the line.

223
00:14:49,160 --> 00:14:54,750
So now that all that is in place,

224
00:14:54,750 --> 00:14:56,880
let's go ahead and start this up.

225
00:14:56,880 --> 00:15:01,700
But I'm going to make the screen bigger so that you can really see starting up the

226
00:15:01,700 --> 00:15:02,360
application.

227
00:15:02,360 --> 00:15:08,210
I'm gonna ask for help and it wrote out what we wanted it to.

228
00:15:08,210 --> 00:15:12,430
We have a dash line going all the way across screen.

229
00:15:12,430 --> 00:15:15,860
We have sent her a text telling us that this is the CLI manual.

230
00:15:15,860 --> 00:15:21,850
We have another dash line and then we have keys and values the keys in yellow.

231
00:15:21,850 --> 00:15:24,740
The values in white key value,

232
00:15:24,740 --> 00:15:25,300
key value,

233
00:15:25,300 --> 00:15:31,140
key value and we terminate by adding another space at the end and then a dash line all the

234
00:15:31,140 --> 00:15:32,010
way across the screen.

235
00:15:32,010 --> 00:15:37,720
And so anyone who needs help figuring out how to use this application can simply type man

236
00:15:37,720 --> 00:15:41,490
or help and get this output and the next lecture.

237
00:15:41,490 --> 00:15:45,840
We're going to move on to writing the response two stats,

238
00:15:45,840 --> 00:15:51,970
which will be another pretty output like this that will give users stats of the current

239
00:15:51,970 --> 00:15:56,510
operating system usage and all that kind of stuff so we could move on to the next lecture.

