1
00:00:00,000 --> 00:00:06,130
Now that we have basic template ing working,

2
00:00:06,130 --> 00:00:13,030
we want to add a universal header and footer that will be used on every HTML page.

3
00:00:13,030 --> 00:00:20,790
And then we want to modify our get template helpers so that they pull in those universal

4
00:00:20,790 --> 00:00:26,870
header and footers and wrap them around every HTML template that gets called.

5
00:00:26,870 --> 00:00:31,320
So the first thing we want to do is create a couple more templates.

6
00:00:31,320 --> 00:00:36,150
This time we're gonna call them Underscore Footer and underscore header dot html.

7
00:00:36,150 --> 00:00:39,660
But they're going to be living in this same templates directory,

8
00:00:39,660 --> 00:00:40,980
so I'm gonna call,

9
00:00:40,980 --> 00:00:41,650
touch,

10
00:00:41,650 --> 00:00:55,220
depletes underscore footer html and touch templates underscore header dot html.

11
00:00:55,220 --> 00:01:00,970
So I'm gonna open up the header and begin composing this first.

12
00:01:00,970 --> 00:01:04,140
As I mentioned in a previous lecture.

13
00:01:04,140 --> 00:01:07,420
Since this course is not about front end,

14
00:01:07,420 --> 00:01:13,250
each team l or C s s are front and JavaScript or don manipulation or anything like that.

15
00:01:13,250 --> 00:01:19,460
I'm going to breeze very quickly through composing these templates and all of this front

16
00:01:19,460 --> 00:01:25,090
and stuff that it doesn't directly have to do with serving files or writing handlers in

17
00:01:25,090 --> 00:01:25,580
note.

18
00:01:25,580 --> 00:01:26,750
And so,

19
00:01:26,750 --> 00:01:30,130
if you want to look at these files in more detail,

20
00:01:30,130 --> 00:01:31,670
feel free to browse to get hub.

21
00:01:31,670 --> 00:01:32,730
Otherwise,

22
00:01:32,730 --> 00:01:37,550
don't worry about memorizing or keeping up with everything that we're saying here.

23
00:01:37,550 --> 00:01:40,550
When we originally wrote this index Hello,

24
00:01:40,550 --> 00:01:41,140
world.

25
00:01:41,140 --> 00:01:45,110
We wrote the opening and closing HTML tags,

26
00:01:45,110 --> 00:01:48,440
the head tags and the body tags all here.

27
00:01:48,440 --> 00:01:55,150
But we want to be able to modify this index dot html so that the only thing it needs is

28
00:01:55,150 --> 00:01:58,370
just the content that makes it different from every other page,

29
00:01:58,370 --> 00:02:01,190
namely an H one with hello world it.

30
00:02:01,190 --> 00:02:05,450
I'm gonna modify index dot html to only have an H one.

31
00:02:05,450 --> 00:02:11,300
Then we're gonna build out these header and footers so that they provide the rest of the

32
00:02:11,300 --> 00:02:13,120
tags that used to be there.

33
00:02:13,120 --> 00:02:17,320
They're just going to do it in a more complex or fully featured way.

34
00:02:17,320 --> 00:02:18,430
So within the header,

35
00:02:18,430 --> 00:02:22,780
I'm gonna have the opening HTML tag fathered by an opening head tag.

36
00:02:22,780 --> 00:02:25,320
I'm also going to include the closing head tag,

37
00:02:25,320 --> 00:02:28,550
an opening body tag,

38
00:02:28,550 --> 00:02:29,880
and then what?

39
00:02:29,880 --> 00:02:31,770
I'm calling a page rapper.

40
00:02:31,770 --> 00:02:34,650
Now you'll notice that I'm reading these comments as HTML comments,

41
00:02:34,650 --> 00:02:36,590
not as JavaScript comments.

42
00:02:36,590 --> 00:02:41,520
And so I'm using the HTML comments syntax instead of the one that we were doing earlier.

43
00:02:41,520 --> 00:02:48,950
So this is going to be the page rapper and it's just going to be a div called Class Rapper

44
00:02:48,950 --> 00:02:51,960
That's going to be opened within the header.

45
00:02:51,960 --> 00:02:58,880
But as you'll see there are that and another element called content that don't get closed

46
00:02:58,880 --> 00:03:00,070
within the header.

47
00:03:00,070 --> 00:03:01,850
They will get closed within the footer.

48
00:03:01,850 --> 00:03:03,050
So within the rapper,

49
00:03:03,050 --> 00:03:09,330
when other thing that's going to be included on every page is a header,

50
00:03:09,330 --> 00:03:10,580
But by header,

51
00:03:10,580 --> 00:03:12,290
I don't mean this whole file.

52
00:03:12,290 --> 00:03:15,140
I mean the head of the document,

53
00:03:15,140 --> 00:03:19,380
the top of the HTML page of the browser users are going to see.

54
00:03:19,380 --> 00:03:27,160
So I'm gonna say that the header is going here and that is going to be a Dave with the

55
00:03:27,160 --> 00:03:33,660
class header and I'll fill that in and details in a moment.

56
00:03:33,660 --> 00:03:39,220
This one actually is going to get closed because the header lives entirely within the

57
00:03:39,220 --> 00:03:42,570
header dot html and then as I mentioned,

58
00:03:42,570 --> 00:03:45,990
we're going to have the page specific content,

59
00:03:45,990 --> 00:03:50,650
pretended with the opening tag called content.

60
00:03:50,650 --> 00:03:52,450
So I'm going to create a death.

61
00:03:52,450 --> 00:03:54,940
Call it class content,

62
00:03:54,940 --> 00:04:01,050
but I'm not going to close it before we fill in the header and the rest of the head.

63
00:04:01,050 --> 00:04:06,030
Let's go to the footer so that we can close thes tags so that it's not so hard to keep

64
00:04:06,030 --> 00:04:08,980
track of them later on within the footer.

65
00:04:08,980 --> 00:04:12,710
I'm going to close that content,

66
00:04:12,710 --> 00:04:13,290
Div.

67
00:04:13,290 --> 00:04:19,920
Then I'm going to actually have a footer and HTML footer,

68
00:04:19,920 --> 00:04:20,120
though,

69
00:04:20,120 --> 00:04:20,730
didn't here.

70
00:04:20,730 --> 00:04:24,750
So I'm gonna created Dave with a class called Footer.

71
00:04:24,750 --> 00:04:30,280
That itself is going to be closed.

72
00:04:30,280 --> 00:04:38,210
Then I'm going to have another closing Dave here and to look back of what we're doing.

73
00:04:38,210 --> 00:04:40,350
We're actually closing the page Rapper.

74
00:04:40,350 --> 00:04:48,380
Then I'm going to have a closing body tag since the body was still open.

75
00:04:48,380 --> 00:04:53,850
And finally a closing HTML tag to make this all seem a little prettier.

76
00:04:53,850 --> 00:04:57,550
I'm just going to space thes out a little bit,

77
00:04:57,550 --> 00:04:59,620
so the body's indented.

78
00:04:59,620 --> 00:05:03,500
The closing Dev is indebted from the body.

79
00:05:03,500 --> 00:05:06,550
The footer is indebted from that closing Div,

80
00:05:06,550 --> 00:05:10,550
and then the content closure is intended as well.

81
00:05:10,550 --> 00:05:14,150
I could get rid of these empty spaces here,

82
00:05:14,150 --> 00:05:18,400
but I am going to fill in some content in the footer now while we're here,

83
00:05:18,400 --> 00:05:25,230
and that's just going to be a Dave with a class called copyright and we're going to say

84
00:05:25,230 --> 00:05:30,890
that copyright equals global dot year created,

85
00:05:30,890 --> 00:05:35,630
followed by Global,

86
00:05:35,630 --> 00:05:46,950
that company named and a pipe and all rights reserved with a closing def.

87
00:05:46,950 --> 00:05:49,200
Now you might be saying,

88
00:05:49,200 --> 00:05:52,310
What on earth is global dot your created what is global?

89
00:05:52,310 --> 00:05:53,180
A company name.

90
00:05:53,180 --> 00:05:55,710
And what is this syntax that you're using?

91
00:05:55,710 --> 00:06:01,530
Right now we are inserting a variable into this template.

92
00:06:01,530 --> 00:06:07,650
All of our templates and these are no exception are going to accept variables that are

93
00:06:07,650 --> 00:06:10,710
global or specific to the page that's being rendered.

94
00:06:10,710 --> 00:06:12,280
These two variables,

95
00:06:12,280 --> 00:06:16,200
your created and company name are just two of the global is that we're going to make

96
00:06:16,200 --> 00:06:17,050
available.

97
00:06:17,050 --> 00:06:18,860
Where did these come from?

98
00:06:18,860 --> 00:06:19,420
Well,

99
00:06:19,420 --> 00:06:20,000
as you know,

100
00:06:20,000 --> 00:06:23,300
before these templates are ever presented to a browser,

101
00:06:23,300 --> 00:06:27,110
they need to go through helper functions such as get template.

102
00:06:27,110 --> 00:06:30,610
So in a moment after we finish writing this header and footer,

103
00:06:30,610 --> 00:06:36,180
we're going to modify those helpers so that they can dynamically insert any global's that

104
00:06:36,180 --> 00:06:40,450
we want or any of the data specific to the page.

105
00:06:40,450 --> 00:06:45,440
So if you were wondering in the header how we're going to get paid specific titles,

106
00:06:45,440 --> 00:06:46,500
meta descriptions,

107
00:06:46,500 --> 00:06:47,920
all of that in the head.

108
00:06:47,920 --> 00:06:49,790
If this is a universal header,

109
00:06:49,790 --> 00:06:57,150
that is how the helpers were going to be able to pull in paid specific metadata and global

110
00:06:57,150 --> 00:07:00,390
meta data about the app the global metadata were using.

111
00:07:00,390 --> 00:07:06,060
Here is the year that this application was created and the company name that created the

112
00:07:06,060 --> 00:07:11,660
application so that we can render a copyright correctly back to the header.

113
00:07:11,660 --> 00:07:14,950
We have a whole bunch to fill in here within the head.

114
00:07:14,950 --> 00:07:23,450
We want to have some general purpose settings at the top.

115
00:07:23,450 --> 00:07:25,350
The first is the char set.

116
00:07:25,350 --> 00:07:31,200
So we're going to say that meta charset equals utf eight.

117
00:07:31,200 --> 00:07:35,540
Then we're going to say that the content language is English,

118
00:07:35,540 --> 00:07:46,550
So e n dash us made a H two b equipped equals content.

119
00:07:46,550 --> 00:07:52,850
Language content equals e n dash us.

120
00:07:52,850 --> 00:07:57,020
Now we want to include a base tag.

121
00:07:57,020 --> 00:08:00,160
This is not an HTML tag that very many people use,

122
00:08:00,160 --> 00:08:01,550
but I am quite fond of it.

123
00:08:01,550 --> 00:08:07,660
It allows all of your links to be relative to a base directory that you specify.

124
00:08:07,660 --> 00:08:14,330
So I'm going to say that the base directory that every HTML link on the page should be

125
00:08:14,330 --> 00:08:17,050
relative to is going to be global.

126
00:08:17,050 --> 00:08:19,170
Don base,

127
00:08:19,170 --> 00:08:19,850
you are out.

128
00:08:19,850 --> 00:08:26,350
This is another use of these global variables that will be inserted when these pages air

129
00:08:26,350 --> 00:08:27,050
getting rendered.

130
00:08:27,050 --> 00:08:30,400
Now we want to put in some Met attacks.

131
00:08:30,400 --> 00:08:32,390
As you can expect,

132
00:08:32,390 --> 00:08:38,640
these meta tags are going to be mostly placeholder variables that will be modified on the

133
00:08:38,640 --> 00:08:38,960
fly.

134
00:08:38,960 --> 00:08:47,750
Something include the title tag and that's going to be a very well called head title,

135
00:08:47,750 --> 00:08:54,440
followed by pipe and then global dot happening.

136
00:08:54,440 --> 00:08:55,790
So,

137
00:08:55,790 --> 00:08:56,590
for example,

138
00:08:56,590 --> 00:09:00,380
we're going to want this title to say,

139
00:09:00,380 --> 00:09:00,700
you know,

140
00:09:00,700 --> 00:09:04,750
home page pipe and then the name of the app.

141
00:09:04,750 --> 00:09:07,050
Now we want a meta description.

142
00:09:07,050 --> 00:09:12,050
Use a meta name equals description,

143
00:09:12,050 --> 00:09:20,050
but the content of the description is going to be a variable head description.

144
00:09:20,050 --> 00:09:26,250
Since we're doing this string and interpellation or this find,

145
00:09:26,250 --> 00:09:26,670
replace,

146
00:09:26,670 --> 00:09:28,500
if you will on our own,

147
00:09:28,500 --> 00:09:33,540
we don't need to worry about play saying variables within quotes or outside of quotes

148
00:09:33,540 --> 00:09:36,220
doesn't matter will be able to find it ourselves.

149
00:09:36,220 --> 00:09:41,000
Now we want to list the static assets.

150
00:09:41,000 --> 00:09:47,930
The first is a fabric all which most browsers will pull in from the right place

151
00:09:47,930 --> 00:09:48,590
automatically.

152
00:09:48,590 --> 00:09:49,730
But we might as well,

153
00:09:49,730 --> 00:09:51,240
tell them where it lives.

154
00:09:51,240 --> 00:10:01,850
That type is image slash X icon rail is icon and H ref is Colin dot ceo.

155
00:10:01,850 --> 00:10:10,770
We don't need to put a slash there because even the H ref within the fabric con link tag is

156
00:10:10,770 --> 00:10:12,860
going to be relative to the base directory.

157
00:10:12,860 --> 00:10:20,820
We're gonna have a script tag whose type is going to be text slash job script char set is

158
00:10:20,820 --> 00:10:29,350
going to equal utf Dash eight and whose source is going to be a public route that we didn't

159
00:10:29,350 --> 00:10:29,950
define yet.

160
00:10:29,950 --> 00:10:34,780
It's going to be called public slash ap dot Js In the future,

161
00:10:34,780 --> 00:10:40,600
lecture will go about rendering static assets like app dot Js on a public path.

162
00:10:40,600 --> 00:10:41,520
But for now,

163
00:10:41,520 --> 00:10:45,150
we're just going to put that reference in there on the assumption that it will exist at

164
00:10:45,150 --> 00:10:48,300
some point and then we want to close that script tag.

165
00:10:48,300 --> 00:10:51,610
Now we want to reference a style sheet,

166
00:10:51,610 --> 00:11:04,780
so we're gonna say link rail equals style sheet type equals text slash CSS and a draft

167
00:11:04,780 --> 00:11:11,050
equals public slash ap dot CSS and then this could be a self closed link.

168
00:11:11,050 --> 00:11:16,140
Then we'll have the head closed and we can move on to the body.

169
00:11:16,140 --> 00:11:19,450
The body tag itself is something that we're going to change.

170
00:11:19,450 --> 00:11:24,050
We're going to add a optional class to it,

171
00:11:24,050 --> 00:11:28,450
which has the variable body don't class.

172
00:11:28,450 --> 00:11:35,270
This will be really important for enforcing page specific styles in our CSS.

173
00:11:35,270 --> 00:11:37,460
Now within the header,

174
00:11:37,460 --> 00:11:41,050
we actually want to add a logo and then a menu.

175
00:11:41,050 --> 00:11:48,290
We say that logo goes here logo is going to be a link back to the index page with a basic

176
00:11:48,290 --> 00:11:50,490
or rail in effect in order reference index page.

177
00:11:50,490 --> 00:11:52,760
We still do want a slash there.

178
00:11:52,760 --> 00:11:55,860
We're gonna add the class called logo.

179
00:11:55,860 --> 00:11:58,150
Now we want to add a menu.

180
00:11:58,150 --> 00:12:00,050
Someone say the navigation goes here.

181
00:12:00,050 --> 00:12:09,550
The menu is going to be an a Norden list with a class of millions.

182
00:12:09,550 --> 00:12:23,910
Each link in the menu is going to be a list item that has an a tag inside.

183
00:12:23,910 --> 00:12:26,460
So I mean,

184
00:12:26,460 --> 00:12:40,000
write a blank one here and then copy it down six times 12 three for five six.

185
00:12:40,000 --> 00:12:42,350
This top link is going to be the home,

186
00:12:42,350 --> 00:12:48,050
so it'll just be a slash The next one is going to be to sign up,

187
00:12:48,050 --> 00:12:51,690
and for now I'll just put a slash him for that one,

188
00:12:51,690 --> 00:12:54,180
and all the others will for them out later.

189
00:12:54,180 --> 00:12:55,230
After sign up,

190
00:12:55,230 --> 00:12:56,170
we want log in,

191
00:12:56,170 --> 00:13:00,350
then dashboard,

192
00:13:00,350 --> 00:13:04,450
then account settings,

193
00:13:04,450 --> 00:13:09,350
then log out.

194
00:13:09,350 --> 00:13:15,350
Now you might be saying it be very strange to visit a website looking the menu and sea.

195
00:13:15,350 --> 00:13:21,970
They sign up in the large in but in the larger out band and then dashboard in settings that

196
00:13:21,970 --> 00:13:25,850
you really should only be able to get to if you are logged in.

197
00:13:25,850 --> 00:13:32,480
So we are going to add classes to some of these menu items,

198
00:13:32,480 --> 00:13:36,610
saying that they should really only be visible if the user is logged out,

199
00:13:36,610 --> 00:13:38,450
such as the log in button.

200
00:13:38,450 --> 00:13:41,230
Or they should only be visible if the user is logged in,

201
00:13:41,230 --> 00:13:42,840
such as the log out button.

202
00:13:42,840 --> 00:13:45,350
So sign up and log in.

203
00:13:45,350 --> 00:13:53,250
Are both going to have a class code logged out.

204
00:13:53,250 --> 00:13:55,080
Only logged out.

205
00:13:55,080 --> 00:13:58,640
People should be able to see this thing now.

206
00:13:58,640 --> 00:14:11,470
Dashboard account settings and log out should have a class called Log in because only

207
00:14:11,470 --> 00:14:15,850
logged in people should be able to see any of those links.

208
00:14:15,850 --> 00:14:19,660
The home button should always be visible to everybody,

209
00:14:19,660 --> 00:14:21,970
so it doesn't need a class.

210
00:14:21,970 --> 00:14:27,110
Now we have the HTML for the Universal Header,

211
00:14:27,110 --> 00:14:33,530
the Universal Footer and are modified index that's going to our helpers file.

212
00:14:33,530 --> 00:14:41,730
Now let's add some new logic that's going to let us wrap these new header and footer around

213
00:14:41,730 --> 00:14:46,690
any existing template to create a full page out of it and what we're here.

214
00:14:46,690 --> 00:14:52,420
Let's also add some logic that's going to let us perform string interpolation or,

215
00:14:52,420 --> 00:14:53,150
in other words,

216
00:14:53,150 --> 00:14:59,200
that variable replacement for any of the variables that we have put inside of our templates

217
00:14:59,200 --> 00:14:59,200
,

218
00:14:59,200 --> 00:15:03,480
whether inside of page templates inside of the header or inside the Footer.

219
00:15:03,480 --> 00:15:06,980
So we're going to modify or get template function.

220
00:15:06,980 --> 00:15:14,310
We're also going to add some new functions for adding the universal templates and doing

221
00:15:14,310 --> 00:15:15,430
string interpolation.

222
00:15:15,430 --> 00:15:18,450
Why don't we start with TheStreet interpellation?

223
00:15:18,450 --> 00:15:33,800
We want to take a given string and a data object and find slash Replace all the keys within

224
00:15:33,800 --> 00:15:34,150
it.

225
00:15:34,150 --> 00:15:39,250
So this helper is gonna be called helpers that interpolate,

226
00:15:39,250 --> 00:15:48,140
and it's going to take a string and an object with keys on values.

227
00:15:48,140 --> 00:15:50,140
First thing is going to need to do is sanity.

228
00:15:50,140 --> 00:15:51,480
Check both of these things,

229
00:15:51,480 --> 00:16:09,790
so we're going to say that string type of strange egos string and has a length otherwise

230
00:16:09,790 --> 00:16:13,720
before to an empty string data object.

231
00:16:13,720 --> 00:16:18,750
It's going to be type of data equals object,

232
00:16:18,750 --> 00:16:22,800
and it's not.

233
00:16:22,800 --> 00:16:24,050
No.

234
00:16:24,050 --> 00:16:29,610
Use the data object or default to an empty object.

235
00:16:29,610 --> 00:16:31,750
Now that we've created these defaults,

236
00:16:31,750 --> 00:16:43,140
we need to at the template Global's to the data object PRA,

237
00:16:43,140 --> 00:16:46,780
pending their key name with Global.

238
00:16:46,780 --> 00:16:49,240
So what this means is,

239
00:16:49,240 --> 00:16:51,200
in our configuration file,

240
00:16:51,200 --> 00:16:57,570
we're going to add a bunch of global's that can be used anywhere in any templates.

241
00:16:57,570 --> 00:16:58,330
For example,

242
00:16:58,330 --> 00:16:59,940
if you remember in The Footer,

243
00:16:59,940 --> 00:17:04,110
we have a global called year created and another one called company name.

244
00:17:04,110 --> 00:17:09,370
But notice how they are reference by saying global dot here created.

245
00:17:09,370 --> 00:17:13,960
That is because here in the interpolation function,

246
00:17:13,960 --> 00:17:18,740
we are going to grab those global's out of our CONFIG file,

247
00:17:18,740 --> 00:17:25,240
add them to the data object that is going to be paid specific or template specific.

248
00:17:25,240 --> 00:17:26,670
Add the global's in,

249
00:17:26,670 --> 00:17:31,470
and then we'll go about performing the find and replace.

250
00:17:31,470 --> 00:17:36,920
So we are just making sure that any time finding and replacing is happening,

251
00:17:36,920 --> 00:17:42,560
we are inserting the global's so that they are available for finding,

252
00:17:42,560 --> 00:17:44,870
replacing on any template at any time.

253
00:17:44,870 --> 00:17:56,500
So we want to say that four for key name in config dot template Global's.

254
00:17:56,500 --> 00:17:57,840
So we're just gonna loop through it.

255
00:17:57,840 --> 00:18:07,050
If config template Global's has own property key name,

256
00:18:07,050 --> 00:18:10,890
then we're gonna add it to the data object.

257
00:18:10,890 --> 00:18:28,720
So we're going to say global dot key day equals config template Global's key name because

258
00:18:28,720 --> 00:18:29,340
to clarify,

259
00:18:29,340 --> 00:18:36,890
we're not adding a global object to the data and then adding these keys as sub keys on the

260
00:18:36,890 --> 00:18:41,730
object were actually adding top level keys called global Doctor something.

261
00:18:41,730 --> 00:18:48,160
So now that we've added those in for each key in the data object,

262
00:18:48,160 --> 00:18:59,350
we want to insert its value into the string at the corresponding place order.

263
00:18:59,350 --> 00:19:06,100
So what we're going to do is cycle through all the keys and the data object and then find

264
00:19:06,100 --> 00:19:09,440
and replace those key names in the template string.

265
00:19:09,440 --> 00:19:14,850
So we're going to say for of our key and data,

266
00:19:14,850 --> 00:19:16,150
remember,

267
00:19:16,150 --> 00:19:20,840
Data now holds all the global's as well as whatever it started with.

268
00:19:20,840 --> 00:19:35,570
We're going to say if data has own property key and type of data key equals strain,

269
00:19:35,570 --> 00:19:39,310
then do the replacement.

270
00:19:39,310 --> 00:19:41,670
So we're going to get the value.

271
00:19:41,670 --> 00:19:46,380
That's what's going to be inserted.

272
00:19:46,380 --> 00:19:54,820
We need to find Is that part in the template where that key is referenced and within the

273
00:19:54,820 --> 00:19:55,690
templates?

274
00:19:55,690 --> 00:20:00,820
We reference these keys by just saying the key name and wrapping it in brackets.

275
00:20:00,820 --> 00:20:04,260
So we're going to look for a string that looks like that.

276
00:20:04,260 --> 00:20:06,050
So it's going to be an opening bracket,

277
00:20:06,050 --> 00:20:11,530
plus the key name and then a closing bracket so you can see what we're doing here.

278
00:20:11,530 --> 00:20:13,760
We're finding that and we're replacing it with that.

279
00:20:13,760 --> 00:20:18,200
So now we're saying that the string equals straying.

280
00:20:18,200 --> 00:20:19,370
Replace,

281
00:20:19,370 --> 00:20:21,950
find,

282
00:20:21,950 --> 00:20:23,050
replace.

283
00:20:23,050 --> 00:20:24,820
Lastly,

284
00:20:24,820 --> 00:20:32,190
we need to return the new string now that all the find replacing the interpellation has

285
00:20:32,190 --> 00:20:32,970
taken place.

286
00:20:32,970 --> 00:20:38,640
Now that we have this general function that's useful for fighting replacing data,

287
00:20:38,640 --> 00:20:45,700
we want to modify this helpers that get template function to actually use this

288
00:20:45,700 --> 00:20:52,210
interrelation function any time that it is returning a template to a user who is requesting

289
00:20:52,210 --> 00:20:52,370
it.

290
00:20:52,370 --> 00:20:54,470
So we're actually going to modify,

291
00:20:54,470 --> 00:20:57,450
get template to not just taking a template name anymore,

292
00:20:57,450 --> 00:21:03,450
but it taken template name and a data object and then the call back,

293
00:21:03,450 --> 00:21:10,090
and that will allow this function to pass the data object to the interpolation function so

294
00:21:10,090 --> 00:21:11,660
that the find replacing can happen.

295
00:21:11,660 --> 00:21:14,500
So we already sanity checking the template name.

296
00:21:14,500 --> 00:21:19,840
Now we want to sanity check the data object and we're going to do that the same way that we

297
00:21:19,840 --> 00:21:20,660
did down here.

298
00:21:20,660 --> 00:21:23,430
Now,

299
00:21:23,430 --> 00:21:27,330
instead of calling back the string that we pulled from the template,

300
00:21:27,330 --> 00:21:35,250
we now want to do the inter relation on this string before returning it.

301
00:21:35,250 --> 00:21:41,730
So we want to say that the final string is going to Eagle helpers Interpol,

302
00:21:41,730 --> 00:21:44,760
eight string data.

303
00:21:44,760 --> 00:21:48,180
So take the strain of this template.

304
00:21:48,180 --> 00:21:50,250
We just pull it out and insert,

305
00:21:50,250 --> 00:21:50,680
find,

306
00:21:50,680 --> 00:21:52,510
replace any of the data there.

307
00:21:52,510 --> 00:21:56,850
Now we want to call back False and this final strength.

308
00:21:56,850 --> 00:22:00,970
So that's all the variable finding and replacing that we need.

309
00:22:00,970 --> 00:22:08,370
But we still don't have an easy way to wrap these templates that will be getting with the

310
00:22:08,370 --> 00:22:09,890
header and footer that we created.

311
00:22:09,890 --> 00:22:12,160
So we're gonna add a new function for that.

312
00:22:12,160 --> 00:22:22,390
And this function is going to let us add the universal header and footer to a string and

313
00:22:22,390 --> 00:22:34,460
passed the provided data object to the header and footer for interpellation So we are going

314
00:22:34,460 --> 00:22:47,110
to say that helpers that ad universal templates is a function it takes in a string data

315
00:22:47,110 --> 00:22:47,650
object.

316
00:22:47,650 --> 00:22:56,140
And Colback we want a sanity check the 1st 2 parameters the same way we've been doing it.

317
00:22:56,140 --> 00:23:01,130
Now we want to get the header and then we're going to get the footer.

318
00:23:01,130 --> 00:23:01,340
Nothing.

319
00:23:01,340 --> 00:23:03,880
We're going to wrap those around the string that we're starting with.

320
00:23:03,880 --> 00:23:11,810
So we're going to call helpers that Get template.

321
00:23:11,810 --> 00:23:15,150
We're gonna tell it that we need Header.

322
00:23:15,150 --> 00:23:19,950
We're going to provide it the data object that were started with,

323
00:23:19,950 --> 00:23:25,670
and it's gonna pass us back air or the new header straight.

324
00:23:25,670 --> 00:23:28,950
So if there is no air and we got the header strength,

325
00:23:28,950 --> 00:23:30,550
we'll continue.

326
00:23:30,550 --> 00:23:32,080
Otherwise,

327
00:23:32,080 --> 00:23:38,060
we're gonna call back the error that we could not find the head,

328
00:23:38,060 --> 00:23:38,850
our template.

329
00:23:38,850 --> 00:23:43,160
Everything's fine for you to get the footer.

330
00:23:43,160 --> 00:23:48,160
So we're gonna call coppers,

331
00:23:48,160 --> 00:23:50,010
get template,

332
00:23:50,010 --> 00:23:52,760
tell it we need the footer,

333
00:23:52,760 --> 00:24:01,470
passes the data object and expect back and air and a flare straight.

334
00:24:01,470 --> 00:24:05,430
And if there's no air and there is a foot or strength,

335
00:24:05,430 --> 00:24:06,550
we're gonna continue.

336
00:24:06,550 --> 00:24:08,780
Otherwise,

337
00:24:08,780 --> 00:24:09,680
we would call back,

338
00:24:09,680 --> 00:24:13,850
could not find the footer template.

339
00:24:13,850 --> 00:24:19,760
Now we need to add these three strings together.

340
00:24:19,760 --> 00:24:25,760
So we're going to say that the full strength,

341
00:24:25,760 --> 00:24:29,590
all the HTML is going to be equal.

342
00:24:29,590 --> 00:24:36,380
Header string plus the string we started with plus the footer strength.

343
00:24:36,380 --> 00:24:42,160
Then we're going to call back No error and the full strength.

344
00:24:42,160 --> 00:24:48,670
So the way that this function will get used is our handlers will get the template they want

345
00:24:48,670 --> 00:24:48,670
.

346
00:24:48,670 --> 00:24:58,000
Then they'll pass that new string to this helper to have that string wrapped with the

347
00:24:58,000 --> 00:24:59,220
header and footer templates.

348
00:24:59,220 --> 00:25:00,700
Now that that exists,

349
00:25:00,700 --> 00:25:08,590
we should go to our config object and add in the global's that we will need in order for

350
00:25:08,590 --> 00:25:09,760
the interpolation to work.

351
00:25:09,760 --> 00:25:13,350
Sit down below Twilio.

352
00:25:13,350 --> 00:25:21,700
I'm gonna add a new key called Template Global's That's going to be an object that has a

353
00:25:21,700 --> 00:25:22,630
few keys.

354
00:25:22,630 --> 00:25:24,150
It's gonna have happening.

355
00:25:24,150 --> 00:25:28,550
We're just gonna call this app up time checker.

356
00:25:28,550 --> 00:25:45,380
It's gonna have a company name on it will be not a rial company incorporated year created.

357
00:25:45,380 --> 00:25:59,240
That will be 2018 and then a bass euro and in staging mode,

358
00:25:59,240 --> 00:26:07,100
that base your l is going to be http clones last last local host,

359
00:26:07,100 --> 00:26:12,840
then whatever port we're using up here in our case 3000 and then a slash.

360
00:26:12,840 --> 00:26:16,950
We can copy the template Global's down to production as well.

361
00:26:16,950 --> 00:26:21,890
You just want to fill in the base your l to be whatever your production,

362
00:26:21,890 --> 00:26:24,080
your l is for us.

363
00:26:24,080 --> 00:26:26,670
It will be local host 5000.

364
00:26:26,670 --> 00:26:30,150
Now let's go back to our handlers.

365
00:26:30,150 --> 00:26:34,700
Look at that index handler that we wrote and modify it to,

366
00:26:34,700 --> 00:26:36,830
rather than just returning.

367
00:26:36,830 --> 00:26:45,600
The contents of the index dot html template actually get indexed html wrapped with the new

368
00:26:45,600 --> 00:26:46,410
header and footer.

369
00:26:46,410 --> 00:26:49,850
So we still want to reject any method that isn't get.

370
00:26:49,850 --> 00:26:55,770
But now we want to start preparing some data for that string interpolation.

371
00:26:55,770 --> 00:26:56,370
It's gonna happen.

372
00:26:56,370 --> 00:27:00,690
So prepare data for inter poor relation.

373
00:27:00,690 --> 00:27:08,140
Remember that the header is expecting some page specific content to be passed to it.

374
00:27:08,140 --> 00:27:11,860
So the global dot base you're always going to come from the convict.

375
00:27:11,860 --> 00:27:18,150
But the title and the description as well as the body class and some others,

376
00:27:18,150 --> 00:27:24,290
whatever we define within index dot html are going to need to come paid specifically so

377
00:27:24,290 --> 00:27:27,060
they don't need to be defined in the handler for us.

378
00:27:27,060 --> 00:27:30,660
We're just gonna use a few examples and save our template.

379
00:27:30,660 --> 00:27:50,700
Data is an object Head title is this is the title had description is this is the meta

380
00:27:50,700 --> 00:28:00,660
description Body title is going to equal Hello,

381
00:28:00,660 --> 00:28:10,690
Template ID World and body class is going to equal index.

382
00:28:10,690 --> 00:28:17,600
So let's go use this new body title that we just added We're gonna go to index dot html and

383
00:28:17,600 --> 00:28:18,810
instead of saying hello,

384
00:28:18,810 --> 00:28:19,360
world,

385
00:28:19,360 --> 00:28:24,260
let's just say body title.

386
00:28:24,260 --> 00:28:27,190
Just as we used this new variable,

387
00:28:27,190 --> 00:28:29,450
we can use any variables that we define.

388
00:28:29,450 --> 00:28:32,550
If we define food in template data,

389
00:28:32,550 --> 00:28:37,380
it will be made available as food here by convention and just to keep things organized.

390
00:28:37,380 --> 00:28:42,720
I am doing dot notation so that we can keep track of which things are data that should be

391
00:28:42,720 --> 00:28:45,990
inserted similar in the head and which things are going to be inserted somewhere in the

392
00:28:45,990 --> 00:28:46,490
body.

393
00:28:46,490 --> 00:28:48,670
But it doesn't really matter.

394
00:28:48,670 --> 00:28:50,370
You can name them anything that you want.

395
00:28:50,370 --> 00:28:51,950
Now that we've named them,

396
00:28:51,950 --> 00:28:57,100
we want to read the template as a string as we have already done.

397
00:28:57,100 --> 00:29:00,610
So we're gonna go helpers don't get template index.

398
00:29:00,610 --> 00:29:02,290
But then,

399
00:29:02,290 --> 00:29:05,640
instead of just calling back the string,

400
00:29:05,640 --> 00:29:08,280
we want to call that ad.

401
00:29:08,280 --> 00:29:20,850
Universal templates function toe Add the header and footer We're gonna call helpers,

402
00:29:20,850 --> 00:29:24,380
add universal templates.

403
00:29:24,380 --> 00:29:32,350
We're going to pass it this string that we just got from the get template function and then

404
00:29:32,350 --> 00:29:37,070
we're gonna pass it All this template data that we just created And remember,

405
00:29:37,070 --> 00:29:42,510
our interpolation function is going to be smart enoughto add in the global's automatically

406
00:29:42,510 --> 00:29:42,510
.

407
00:29:42,510 --> 00:29:47,940
So we don't need to worry about redefining the global is from the configure object back

408
00:29:47,940 --> 00:29:48,470
here.

409
00:29:48,470 --> 00:29:49,760
They're gonna be inserted,

410
00:29:49,760 --> 00:29:52,230
always available in any of these templates.

411
00:29:52,230 --> 00:29:55,490
So this template could use one of the global variables if it wanted to.

412
00:29:55,490 --> 00:29:59,160
So after we pass in the template data,

413
00:29:59,160 --> 00:30:09,500
we want to expect back in air or the new full string of the whole page So then,

414
00:30:09,500 --> 00:30:11,820
if there's no air and there is a strength,

415
00:30:11,820 --> 00:30:16,160
we want to return that page as html.

416
00:30:16,160 --> 00:30:22,260
And so we'll just call back 200 the string and HTML.

417
00:30:22,260 --> 00:30:23,700
Otherwise,

418
00:30:23,700 --> 00:30:33,140
I want to call back the same error as below 500 undefined Ph.

419
00:30:33,140 --> 00:30:33,470
D mail.

420
00:30:33,470 --> 00:30:43,090
So let's start our at back up and see if these headers and footers are being added and all

421
00:30:43,090 --> 00:30:53,590
the variable replacement is happening Going to make you get to the base.

422
00:30:53,590 --> 00:30:53,700
You,

423
00:30:53,700 --> 00:30:54,220
Earl,

424
00:30:54,220 --> 00:30:55,780
this is what we saw last time.

425
00:30:55,780 --> 00:31:02,400
This time through an air says call back is not a function in the helpers file.

426
00:31:02,400 --> 00:31:09,550
So I'm gonna go to the line that they're talking about 1 30 And as you can see,

427
00:31:09,550 --> 00:31:15,940
we're getting tripped up right now because the get template function is being called in the

428
00:31:15,940 --> 00:31:16,540
old way.

429
00:31:16,540 --> 00:31:22,160
It's being called with template name call back where we've actually now inserted this data

430
00:31:22,160 --> 00:31:22,970
object.

431
00:31:22,970 --> 00:31:29,660
So we need to make sure that anyone who's calling get template is actually calling template

432
00:31:29,660 --> 00:31:32,050
name data and then call back.

433
00:31:32,050 --> 00:31:33,900
So back in our handler,

434
00:31:33,900 --> 00:31:35,030
when we're calling,

435
00:31:35,030 --> 00:31:37,970
get template to get the index from before,

436
00:31:37,970 --> 00:31:45,560
we need to make sure that we're passing in template data there as well and then stating the

437
00:31:45,560 --> 00:31:46,160
callback.

438
00:31:46,160 --> 00:31:47,550
So let's try that again.

439
00:31:47,550 --> 00:31:53,830
I'll send the request and there we go.

440
00:31:53,830 --> 00:31:56,850
You can see the source that is coming back here.

441
00:31:56,850 --> 00:31:58,550
We have ahead.

442
00:31:58,550 --> 00:32:04,950
You can see that this is the title and then the APP name is getting inserted dynamically

443
00:32:04,950 --> 00:32:06,960
using that find replace.

444
00:32:06,960 --> 00:32:09,450
There's all those static assets that don't exist yet.

445
00:32:09,450 --> 00:32:10,430
Then,

446
00:32:10,430 --> 00:32:11,630
as we scroll down,

447
00:32:11,630 --> 00:32:15,700
we can see that the footer has 2018 not a real company,

448
00:32:15,700 --> 00:32:19,360
Inc and that the body has Hello,

449
00:32:19,360 --> 00:32:20,500
template ID world.

450
00:32:20,500 --> 00:32:22,360
So all the find replaces happening.

451
00:32:22,360 --> 00:32:31,400
And also this whole header and this whole footer are being wrapped around the template

452
00:32:31,400 --> 00:32:32,070
content.

453
00:32:32,070 --> 00:32:35,690
The template is only this one line.

454
00:32:35,690 --> 00:32:36,130
Hello,

455
00:32:36,130 --> 00:32:37,050
template ID World,

456
00:32:37,050 --> 00:32:39,280
Let's go ahead and viewed in the browser.

457
00:32:39,280 --> 00:32:41,450
And here we are.

458
00:32:41,450 --> 00:32:42,350
Look,

459
00:32:42,350 --> 00:32:43,500
a host 3000.

460
00:32:43,500 --> 00:32:44,840
We have these links,

461
00:32:44,840 --> 00:32:46,930
we have Hello Template world.

462
00:32:46,930 --> 00:32:49,010
And then we have a footer.

463
00:32:49,010 --> 00:32:50,170
Obviously,

464
00:32:50,170 --> 00:32:52,980
we're gonna make this look a bit better as time goes on.

465
00:32:52,980 --> 00:32:59,950
But we know that the string in population and general use of templates is working fine now

466
00:32:59,950 --> 00:32:59,950
.

467
00:32:59,950 --> 00:33:04,680
So now we can move on to the next lecture.

