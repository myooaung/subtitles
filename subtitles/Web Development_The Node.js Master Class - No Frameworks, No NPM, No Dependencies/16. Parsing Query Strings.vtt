WEBVTT
ï»¿1
00:00:00.000 --> 00:00:07.440
Now what we like to do is get the query string as an object.

2
00:00:07.440 --> 00:00:13.050
The query string is obviously going to be useful for us later to be able to understand what

3
00:00:13.050 --> 00:00:14.330
the user is requesting,

4
00:00:14.330 --> 00:00:16.070
what the user is trying to modify.

5
00:00:16.070 --> 00:00:19.250
And so we're going to need to parse that as well,

6
00:00:19.250 --> 00:00:23.280
in between where we get the path and where we got the method.

7
00:00:23.280 --> 00:00:27.900
Let's go ahead and insert just a quick comment about what we're trying to do here.

8
00:00:27.900 --> 00:00:38.360
When I said there is that we're trying to get the query string as an object.

9
00:00:38.360 --> 00:00:40.300
This is really simple.

10
00:00:40.300 --> 00:00:43.340
We're going to create a query string,

11
00:00:43.340 --> 00:00:44.740
object variable,

12
00:00:44.740 --> 00:00:48.420
and its value is going to be parsed.

13
00:00:48.420 --> 00:00:54.050
Your l remember the parts you're well that we grabbed at the beginning dot query If you

14
00:00:54.050 --> 00:00:54.960
remember a moment ago,

15
00:00:54.960 --> 00:00:59.110
I talked about this parameter tour false boolean that gets passed to you,

16
00:00:59.110 --> 00:01:00.460
r l dot parse.

17
00:01:00.460 --> 00:01:07.780
Remember that this is telling your l dot pars to go ahead and throw its query string

18
00:01:07.780 --> 00:01:15.000
operations to the query strings library building to node so that this object that comes

19
00:01:15.000 --> 00:01:21.840
back the parsed U R l dark query object that comes back is the same as if we had used that

20
00:01:21.840 --> 00:01:23.980
query string object ourselves.

21
00:01:23.980 --> 00:01:25.360
Namely,

22
00:01:25.360 --> 00:01:31.360
What that means for our case is that when someone sends a your l with a bunch of query

23
00:01:31.360 --> 00:01:32.490
parameters on the end,

24
00:01:32.490 --> 00:01:34.800
you know fully equals bar etcetera,

25
00:01:34.800 --> 00:01:41.430
those air all going to be parsed and put nicely inside of this object with keys and values

26
00:01:41.430 --> 00:01:41.430
.

27
00:01:41.430 --> 00:01:43.550
Let's see what that means.

28
00:01:43.550 --> 00:01:45.000
And in order to do that,

29
00:01:45.000 --> 00:01:45.390
let's,

30
00:01:45.390 --> 00:01:45.750
uh,

31
00:01:45.750 --> 00:01:48.300
log out what's coming out here is well,

32
00:01:48.300 --> 00:01:57.850
so we're saying that the request had received on this path with this method and let's say

33
00:01:57.850 --> 00:02:11.880
with these query string parameters and then log out the query string object itself.

34
00:02:11.880 --> 00:02:14.170
All right,

35
00:02:14.170 --> 00:02:23.020
so let's go ahead and start up the APP again knowed index dot yes and send a car Oh,

36
00:02:23.020 --> 00:02:25.650
to curl local host slash fu.

37
00:02:25.650 --> 00:02:31.640
We can see that the query string parameters that came back is an empty object.

38
00:02:31.640 --> 00:02:32.110
Why?

39
00:02:32.110 --> 00:02:34.240
Because we didn't have any query string parameters.

40
00:02:34.240 --> 00:02:36.520
So let's go ahead and write that girl request again.

41
00:02:36.520 --> 00:02:37.300
But this time,

42
00:02:37.300 --> 00:02:39.980
let's add some query parameters on it.

43
00:02:39.980 --> 00:02:47.000
So we're going to add a question mark and then fizz equals buzz.

44
00:02:47.000 --> 00:02:48.370
All right,

45
00:02:48.370 --> 00:02:50.430
and we got hello world back again.

46
00:02:50.430 --> 00:02:51.370
If we look,

47
00:02:51.370 --> 00:02:54.880
the APP is understood that the path was still just food,

48
00:02:54.880 --> 00:03:01.250
that the method was get but that the query string was set to fizz equals butts.

49
00:03:01.250 --> 00:03:07.510
So that's how you get a query string object from a girl and we can move on to the next

50
00:03:07.510 --> 00:03:07.790
section.

