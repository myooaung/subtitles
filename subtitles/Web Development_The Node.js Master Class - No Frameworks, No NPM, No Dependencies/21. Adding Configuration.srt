1
00:00:00,000 --> 00:00:04,390
At this point,

2
00:00:04,390 --> 00:00:09,600
the APP has reached sufficient complexity that we need to add some kind of configuration

3
00:00:09,600 --> 00:00:15,320
file to store different configuration variables so we can start the app in different ways

4
00:00:15,320 --> 00:00:16,750
for different environments.

5
00:00:16,750 --> 00:00:18,780
What we like to accomplish is relevant.

6
00:00:18,780 --> 00:00:28,630
Starting the app with node index dot Js we'd like to say no off equals And then what other

7
00:00:28,630 --> 00:00:29,630
environment name?

8
00:00:29,630 --> 00:00:38,770
We want such a stating and then node index dot Js as normal as we went over in an earlier

9
00:00:38,770 --> 00:00:39,280
lecture,

10
00:00:39,280 --> 00:00:46,650
this note arms command line argument becomes available to us within the APP as a global.

11
00:00:46,650 --> 00:00:47,800
In reality,

12
00:00:47,800 --> 00:00:51,460
we could say environment equals staging or known environment.

13
00:00:51,460 --> 00:00:52,300
You could say Jing,

14
00:00:52,300 --> 00:00:57,430
we could have come any command line variable that we want named here knowed underscore e

15
00:00:57,430 --> 00:01:02,070
envy is just a convention that many applications use and so we're going to use it here.

16
00:01:02,070 --> 00:01:03,940
In order to accomplish this,

17
00:01:03,940 --> 00:01:07,440
we're going to create a second file in addition to our index dot gs,

18
00:01:07,440 --> 00:01:12,640
we're gonna call that config dot Js and it's going to live in the same directory just

19
00:01:12,640 --> 00:01:19,290
within the app for then we're going to modify indexed SJs so that it requires that new

20
00:01:19,290 --> 00:01:24,620
convict library and uses thebe configuration defined within it.

21
00:01:24,620 --> 00:01:26,220
Within the configuration file,

22
00:01:26,220 --> 00:01:30,320
we're going to define several different environments and the variables that should exist

23
00:01:30,320 --> 00:01:31,680
within those environments.

24
00:01:31,680 --> 00:01:36,080
And then we're actually going to export Onley,

25
00:01:36,080 --> 00:01:40,340
the environment that has currently been called by the command line,

26
00:01:40,340 --> 00:01:44,660
so that when another file such as index dot Js requires that one,

27
00:01:44,660 --> 00:01:51,640
all it sees is an object interface with the variables defined as they should be for the

28
00:01:51,640 --> 00:01:52,540
specific environment.

29
00:01:52,540 --> 00:01:52,990
That's it.

30
00:01:52,990 --> 00:01:55,010
If that was a little confusing,

31
00:01:55,010 --> 00:01:55,550
don't worry.

32
00:01:55,550 --> 00:01:56,880
It'll make sense as we go along.

33
00:01:56,880 --> 00:01:57,770
As I mentioned,

34
00:01:57,770 --> 00:02:00,650
the first thing we're going to do is create this new file.

35
00:02:00,650 --> 00:02:03,360
So touch,

36
00:02:03,360 --> 00:02:05,220
don't you?

37
00:02:05,220 --> 00:02:05,750
Yes.

38
00:02:05,750 --> 00:02:10,050
And within here,

39
00:02:10,050 --> 00:02:15,570
which is going to note that we're going to create and export configuration variables?

40
00:02:15,570 --> 00:02:28,180
Okay,

41
00:02:28,180 --> 00:02:33,050
the first thing we want to create is just a general container for all the environments.

42
00:02:33,050 --> 00:02:51,140
This is the object is going to hold all of the different environments and their sub keys as

43
00:02:51,140 --> 00:02:52,830
keys on its own object.

44
00:02:52,830 --> 00:02:57,130
But rather than exporting the entire environments object later on,

45
00:02:57,130 --> 00:03:01,840
we're going to have some logic that determines which exact environment should.

46
00:03:01,840 --> 00:03:07,690
It gets exported and then exports Onley that sub object from the environments up For now,

47
00:03:07,690 --> 00:03:09,940
we're going to create two environments.

48
00:03:09,940 --> 00:03:16,450
One is staging that will be using most the time and the next one is production for our

49
00:03:16,450 --> 00:03:17,380
purposes.

50
00:03:17,380 --> 00:03:22,590
Since we don't always want to have note on equal staging passed along,

51
00:03:22,590 --> 00:03:27,570
we're actually going to set staging as the default environment so that if the user has not

52
00:03:27,570 --> 00:03:29,770
defined note off equals anything,

53
00:03:29,770 --> 00:03:31,790
it's going to go ahead and default staging.

54
00:03:31,790 --> 00:03:33,430
So first,

55
00:03:33,430 --> 00:03:54,600
I'm going to create this staging object and next I'm going to create a production.

56
00:03:54,600 --> 00:04:09,390
Okay,

57
00:04:09,390 --> 00:04:10,970
Within both of these objects,

58
00:04:10,970 --> 00:04:15,370
I'm just going to define some pretty straightforward keys.

59
00:04:15,370 --> 00:04:18,900
I'm going to find the port that they should run on if it's in staging or production,

60
00:04:18,900 --> 00:04:19,750
respectively,

61
00:04:19,750 --> 00:04:27,270
and also create a key called off name that will allow anyone using this config object to

62
00:04:27,270 --> 00:04:30,500
know exactly the name of the environment that they're in right now.

63
00:04:30,500 --> 00:04:56,230
Okay,

64
00:04:56,230 --> 00:04:57,890
So as you can see here,

65
00:04:57,890 --> 00:05:02,850
all I did was created port and off name King on both objects.

66
00:05:02,850 --> 00:05:09,470
The only major difference is that staging is running on Port 3000 and production is running

67
00:05:09,470 --> 00:05:10,410
on 5000.

68
00:05:10,410 --> 00:05:11,410
You can choose any numbers.

69
00:05:11,410 --> 00:05:14,250
You want these air just for this example.

70
00:05:14,250 --> 00:05:15,440
Off name.

71
00:05:15,440 --> 00:05:22,550
We've just go ahead and add a key to these objects That is the same as the name of the

72
00:05:22,550 --> 00:05:23,240
environment.

73
00:05:23,240 --> 00:05:28,940
This is because reaction going to end up exporting the inner pieces of these objects.

74
00:05:28,940 --> 00:05:31,040
And so the key,

75
00:05:31,040 --> 00:05:32,910
such as staging up here,

76
00:05:32,910 --> 00:05:34,200
isn't going to be visible.

77
00:05:34,200 --> 00:05:39,160
So we're gonna have to create something like off name in order for the user to know exactly

78
00:05:39,160 --> 00:05:44,750
what environment they're dealing with at the time without having to parse that note off,

79
00:05:44,750 --> 00:05:45,680
uh,

80
00:05:45,680 --> 00:05:46,750
committed my variable again.

81
00:05:46,750 --> 00:05:47,880
Okay,

82
00:05:47,880 --> 00:05:50,040
so now we have these two different environments,

83
00:05:50,040 --> 00:05:55,850
and we want to determine which one should be exploited out.

84
00:05:55,850 --> 00:06:10,790
As I mentioned,

85
00:06:10,790 --> 00:06:18,550
this is easily accomplice with the global called process dot off dot node,

86
00:06:18,550 --> 00:06:19,440
underscore arm.

87
00:06:19,440 --> 00:06:24,680
And so we're going to go ahead and checked to see if that exists.

88
00:06:24,680 --> 00:06:26,430
See if it is not undefined,

89
00:06:26,430 --> 00:06:28,160
and if it is defined,

90
00:06:28,160 --> 00:06:30,150
we're going to push it down to lower case.

91
00:06:30,150 --> 00:06:43,290
We're gonna say the current environment equals type of process.

92
00:06:43,290 --> 00:06:49,430
I don't know equals string,

93
00:06:49,430 --> 00:06:53,790
So if it equals a string and we want it,

94
00:06:53,790 --> 00:07:01,170
so we're going to say process done to lower case.

95
00:07:01,170 --> 00:07:03,700
Otherwise,

96
00:07:03,700 --> 00:07:05,350
this gives us back in a peace treaty.

97
00:07:05,350 --> 00:07:08,840
All right,

98
00:07:08,840 --> 00:07:16,000
now we want to check that the current environment is actually one of the environments that

99
00:07:16,000 --> 00:07:19,730
is defined up here because it's quite possible that someone might have started the APP and

100
00:07:19,730 --> 00:07:26,340
said Node equals local host or note off equals food bar.

101
00:07:26,340 --> 00:07:31,240
And we haven't defined a food bar or a local host environment here.

102
00:07:31,240 --> 00:07:34,990
And so we don't just want to check that the current environment it's set,

103
00:07:34,990 --> 00:07:56,180
but that it's set to one of the keys on our greater environments up yet before,

104
00:07:56,180 --> 00:08:02,740
if the environment that's being passed or the one that we've grabbed right here is not one

105
00:08:02,740 --> 00:08:04,710
of the keys on the environments object,

106
00:08:04,710 --> 00:08:08,090
we're going to go ahead and default to the staging environment instead.

107
00:08:08,090 --> 00:08:15,260
So we're going to say that far the environment to export,

108
00:08:15,260 --> 00:08:20,720
So the one that really needs to get pushed out to anyone who's requiring this library is

109
00:08:20,720 --> 00:08:28,950
going to equal take off environments kind of environment,

110
00:08:28,950 --> 00:08:36,950
which is this variable here equals of it.

111
00:08:36,950 --> 00:08:38,950
If it does,

112
00:08:38,950 --> 00:08:48,580
then that's the one we want environments trying to Otherwise we wanted to folk to

113
00:08:48,580 --> 00:08:49,400
environments,

114
00:08:49,400 --> 00:08:50,520
Doc.

115
00:08:50,520 --> 00:08:52,950
So at this point,

116
00:08:52,950 --> 00:09:00,240
this environment export variable is going to contain this whole object or in this whole

117
00:09:00,240 --> 00:09:00,610
object,

118
00:09:00,610 --> 00:09:05,120
it's always gonna be one of the two because either they define staging defined production

119
00:09:05,120 --> 00:09:06,760
or it defaulted to staging.

120
00:09:06,760 --> 00:09:10,740
It's always going to contain something we don't have to default to staging.

121
00:09:10,740 --> 00:09:14,080
We're choosing to do that in this case just for convenience.

122
00:09:14,080 --> 00:09:16,980
So the last thing that we need to do is actually export market,

123
00:09:16,980 --> 00:09:22,770
and we're going to use the normal convention for that that we talked about earlier.

124
00:09:22,770 --> 00:09:25,340
Montel dot exports equals.

125
00:09:25,340 --> 00:09:26,780
But in this case,

126
00:09:26,780 --> 00:09:27,580
as I mentioned,

127
00:09:27,580 --> 00:09:28,560
rather than exporting,

128
00:09:28,560 --> 00:09:34,590
all the environments were on Lee going to export the one that we walked the require er to

129
00:09:34,590 --> 00:09:34,880
see.

130
00:09:34,880 --> 00:09:41,650
So in module dot exports equals environment to export.

131
00:09:41,650 --> 00:09:43,160
All right,

132
00:09:43,160 --> 00:09:45,700
that's everything that we have to do in the config dot Js file.

133
00:09:45,700 --> 00:09:46,420
But at this point,

134
00:09:46,420 --> 00:09:47,690
it's just a file that exists.

135
00:09:47,690 --> 00:09:52,600
The note APP is going to completely ignore it because we're starting up the index dot Js

136
00:09:52,600 --> 00:09:57,680
file and the index that Js file is making no reference to config dot Js So now we need to

137
00:09:57,680 --> 00:10:00,750
modify index dot Js to use the conflict.

138
00:10:00,750 --> 00:10:01,450
Violence step.

139
00:10:01,450 --> 00:10:02,240
All right,

140
00:10:02,240 --> 00:10:04,450
so let's go ahead and require that file,

141
00:10:04,450 --> 00:10:07,770
but passing a relative path to it.

142
00:10:07,770 --> 00:10:14,070
So we're going to say that the variable can fake equals require.

143
00:10:14,070 --> 00:10:15,420
And remember,

144
00:10:15,420 --> 00:10:17,550
this is in the same directory that we're in right now,

145
00:10:17,550 --> 00:10:21,450
So we're just going to go dot slash can pick.

146
00:10:21,450 --> 00:10:25,660
We could just as easily do dot slash config dot Js.

147
00:10:25,660 --> 00:10:26,390
But remember,

148
00:10:26,390 --> 00:10:33,020
notice smart enough to assume that you mean dot Js and so we don't need to tell it that

149
00:10:33,020 --> 00:10:33,350
part,

150
00:10:33,350 --> 00:10:36,240
so config equals require too thick.

151
00:10:36,240 --> 00:10:41,170
And now this variable is going to equal whatever is being exported from here.

152
00:10:41,170 --> 00:10:49,710
So we can change some of the variables that we're using within this file to use

153
00:10:49,710 --> 00:10:51,650
configuration variables to find there.

154
00:10:51,650 --> 00:10:53,560
There's a lot of things that we could do,

155
00:10:53,560 --> 00:10:56,130
but for our purposes right now,

156
00:10:56,130 --> 00:11:01,320
all we're really caring about is the port and the environment name cause those two

157
00:11:01,320 --> 00:11:05,750
variables that are defined in to convict So let's go down to where we actually start the

158
00:11:05,750 --> 00:11:07,060
server server.

159
00:11:07,060 --> 00:11:07,700
Don't listen.

160
00:11:07,700 --> 00:11:14,670
And rather than hard coating in 3000 were going to say that we're starting to server and

161
00:11:14,670 --> 00:11:15,750
let's just take away.

162
00:11:15,750 --> 00:11:20,990
Haven't listen on 14,000 we're going Teoh dynamically set the pork to whatever is defined

163
00:11:20,990 --> 00:11:21,690
in the config.

164
00:11:21,690 --> 00:11:28,550
So rather than saying 3000 willing to say config dot court just to review where we got that

165
00:11:28,550 --> 00:11:33,540
the object is being exported is going to be the same as one of these two objects here.

166
00:11:33,540 --> 00:11:34,800
In either case,

167
00:11:34,800 --> 00:11:37,680
they both have a port key defined on them.

168
00:11:37,680 --> 00:11:44,790
And so that object docked port was gonna equal 3000 this case or staging in this case if we

169
00:11:44,790 --> 00:11:47,990
started in default mode or if we started instead.

170
00:11:47,990 --> 00:11:50,240
Okay,

171
00:11:50,240 --> 00:11:53,050
so we're listening on CONFIG port.

172
00:11:53,050 --> 00:11:54,840
Now this measures that we log out,

173
00:11:54,840 --> 00:11:56,990
the server is listening on port 3000.

174
00:11:56,990 --> 00:12:01,440
We could go ahead and modify that to include the dynamic variable instead,

175
00:12:01,440 --> 00:12:06,150
config dot port.

176
00:12:06,150 --> 00:12:15,350
Let's go a step further and go ahead and log out exactly which environment that we're in.

177
00:12:15,350 --> 00:12:15,880
Because remember,

178
00:12:15,880 --> 00:12:20,880
the off name is one of the variables available to us in that config object.

179
00:12:20,880 --> 00:12:33,830
So the server is listening on a port can fake port and then we want to say in,

180
00:12:33,830 --> 00:12:44,860
I think name good.

181
00:12:44,860 --> 00:12:45,640
So,

182
00:12:45,640 --> 00:12:46,090
for example,

183
00:12:46,090 --> 00:12:52,350
this would say the servers listening on a port 3000 staging or hopefully will say that.

184
00:12:52,350 --> 00:12:53,230
Okay,

185
00:12:53,230 --> 00:12:56,450
so those are all the modifications we need to make the index dot Js file.

186
00:12:56,450 --> 00:13:03,750
Let's go ahead and start up the as normal and see if the defaulting to staging works.

187
00:13:03,750 --> 00:13:11,190
So no index dot Js The server is listening on a port 3000 in staging mode.

188
00:13:11,190 --> 00:13:15,270
Let's go ahead and pass note on equal staging.

189
00:13:15,270 --> 00:13:17,890
No indexed out.

190
00:13:17,890 --> 00:13:18,520
Yes.

191
00:13:18,520 --> 00:13:23,090
See if he says the same thing it does.

192
00:13:23,090 --> 00:13:23,790
All right,

193
00:13:23,790 --> 00:13:24,640
let's kill the server.

194
00:13:24,640 --> 00:13:28,950
And this time we're going to start up and no equals abduction,

195
00:13:28,950 --> 00:13:35,360
no index statue the services thing on port 5000 in production.

196
00:13:35,360 --> 00:13:41,200
So you can see depending on the note variable that we start the act with.

197
00:13:41,200 --> 00:13:48,160
Now the index dot Js file is going to inherit two completely different sets of

198
00:13:48,160 --> 00:13:52,920
configuration variables because this config library that we just created is only going to

199
00:13:52,920 --> 00:13:56,450
export their variables that are useful for that specific environment.

200
00:13:56,450 --> 00:13:59,300
This is a really simple example of adding configuration.

201
00:13:59,300 --> 00:14:00,920
We're gonna add a few more keys later,

202
00:14:00,920 --> 00:14:06,190
but I just wanted you to see exactly how this works and how we're going to be using it.

203
00:14:06,190 --> 00:14:10,050
So I'm gonna go ahead and clear out this console now and we can move on to the next venture

204
00:14:10,050 --> 00:14:10,050
.

