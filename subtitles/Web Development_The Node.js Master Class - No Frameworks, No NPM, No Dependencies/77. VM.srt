1
00:00:00,000 --> 00:00:04,260
in this lecture,

2
00:00:04,260 --> 00:00:12,050
we're going to go over how to run arbitrary JavaScript inside of a virtual machine using no

3
00:00:12,050 --> 00:00:12,730
Js.

4
00:00:12,730 --> 00:00:19,280
So I'm gonna start by creating a new file in this miscellaneous voter called vm dot Js So

5
00:00:19,280 --> 00:00:26,640
I'm gonna go touch misc v m dot Js Open up this file within here.

6
00:00:26,640 --> 00:00:35,950
I'm going to read a comment that this is an example VM running some arbitrary commands.

7
00:00:35,950 --> 00:00:38,980
We're only gonna have one dependency.

8
00:00:38,980 --> 00:00:44,150
And that is that for VM is going to equal require VM,

9
00:00:44,150 --> 00:00:48,080
which gives us access to the virtual machine built into note.

10
00:00:48,080 --> 00:00:53,150
The first thing we need to do is define a context.

11
00:00:53,150 --> 00:01:01,020
Employed this script to run in a context allows you to find a whole bunch of variables that

12
00:01:01,020 --> 00:01:06,520
will become available within the executing script when it runs out.

13
00:01:06,520 --> 00:01:15,280
So the context for us is just going to include a global called food that equals 25.

14
00:01:15,280 --> 00:01:23,200
Now we want to define the script that should execute.

15
00:01:23,200 --> 00:01:29,990
So we're going to say script equals new vm dot capital script.

16
00:01:29,990 --> 00:01:32,110
No,

17
00:01:32,110 --> 00:01:38,060
everything within here is arbitrary JavaScript and this should be encapsulated by tick

18
00:01:38,060 --> 00:01:38,490
marks.

19
00:01:38,490 --> 00:01:45,470
So I'm gonna put a tick mark at the beginning and at the end of this script,

20
00:01:45,470 --> 00:01:47,950
no one in here we can just write whatever you want.

21
00:01:47,950 --> 00:01:58,300
I'm gonna write that food equals food Times two and that far far equals food plus one.

22
00:01:58,300 --> 00:02:03,150
And that for phase equals 52.

23
00:02:03,150 --> 00:02:06,790
Now we can actually tell the script to run.

24
00:02:06,790 --> 00:02:08,600
And after we run the script,

25
00:02:08,600 --> 00:02:14,470
we can log out the context again to see the results of that script having been run.

26
00:02:14,470 --> 00:02:16,650
So we want to run the script,

27
00:02:16,650 --> 00:02:24,890
which is going to say Script that we defined above don't run in new context and then we

28
00:02:24,890 --> 00:02:25,610
pass it.

29
00:02:25,610 --> 00:02:34,490
This context that we created above remember script is a new instance of V m DOT script,

30
00:02:34,490 --> 00:02:40,710
so it includes a bunch of functions that a normal string would not so script running new

31
00:02:40,710 --> 00:02:41,270
contacts.

32
00:02:41,270 --> 00:02:42,440
We pass it the context,

33
00:02:42,440 --> 00:02:45,130
and then we can simply log out console,

34
00:02:45,130 --> 00:02:45,530
log,

35
00:02:45,530 --> 00:02:46,900
whatever the context is.

36
00:02:46,900 --> 00:02:49,450
Now let's go ahead and run this script.

37
00:02:49,450 --> 00:02:59,220
Note miscellaneous slash v m dot Js You can see it ran,

38
00:02:59,220 --> 00:03:00,960
and then it logged out The context.

39
00:03:00,960 --> 00:03:04,720
The context now is that food equals 50.

40
00:03:04,720 --> 00:03:08,770
That bar equals 51 fizz equals 52.

41
00:03:08,770 --> 00:03:14,170
White is full legal 50 because the context started with Fu equaling 25.

42
00:03:14,170 --> 00:03:16,250
But as soon as we ran the script,

43
00:03:16,250 --> 00:03:22,010
we multiplied food times two to make it 50 bar we got from the existing value of food.

44
00:03:22,010 --> 00:03:24,090
But we added one and phase.

45
00:03:24,090 --> 00:03:25,650
We define statically to 52.

46
00:03:25,650 --> 00:03:28,770
So that is a brief overview of how use the VM.

47
00:03:28,770 --> 00:03:33,760
If you have any reason to run arbitrary JavaScript code either because you got it from a

48
00:03:33,760 --> 00:03:34,400
user,

49
00:03:34,400 --> 00:03:39,310
someone put it in and ask you to run it or because you're trying to run your code in

50
00:03:39,310 --> 00:03:46,380
isolation to debug some issues or what have you A VM might be a good choice.

51
00:03:46,380 --> 00:03:47,160
Obviously,

52
00:03:47,160 --> 00:03:52,990
you need to be very careful when you're running arbitrary JavaScript if you've got it from

53
00:03:52,990 --> 00:03:54,200
an untrusted user,

54
00:03:54,200 --> 00:03:56,500
someone who wasn't part of your team.

55
00:03:56,500 --> 00:04:02,700
But if you're building your own C I c D tool to run your code or prepared for production,

56
00:04:02,700 --> 00:04:04,550
maybe that would be a good use case.

57
00:04:04,550 --> 00:04:05,930
But just again,

58
00:04:05,930 --> 00:04:06,430
be very,

59
00:04:06,430 --> 00:04:07,320
very careful.

60
00:04:07,320 --> 00:04:12,480
If you're allowing users to specify JavaScript that should be executed on your machine if

61
00:04:12,480 --> 00:04:13,090
you want to,

62
00:04:13,090 --> 00:04:14,910
then this is how you would go about doing it.

63
00:04:14,910 --> 00:04:15,820
With that,

64
00:04:15,820 --> 00:04:17,250
we can move on to the next lecture

