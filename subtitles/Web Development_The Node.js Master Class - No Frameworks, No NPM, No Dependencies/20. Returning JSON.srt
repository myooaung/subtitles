1
00:00:00,000 --> 00:00:07,660
The next thing we need to do is formalize the fact that we're sending Jason back to the

2
00:00:07,660 --> 00:00:08,100
user.

3
00:00:08,100 --> 00:00:09,990
If you remember from the last lecture,

4
00:00:09,990 --> 00:00:13,350
handlers must send us a object back.

5
00:00:13,350 --> 00:00:14,970
If they don't send us an object,

6
00:00:14,970 --> 00:00:17,080
we default to a empty object,

7
00:00:17,080 --> 00:00:23,080
and we always turn that object or empty object into a Jace on string and then returned it

8
00:00:23,080 --> 00:00:24,050
to the user here.

9
00:00:24,050 --> 00:00:28,370
But we don't actually tell the user that we are returning them,

10
00:00:28,370 --> 00:00:29,090
Jason.

11
00:00:29,090 --> 00:00:31,970
And so we want to formalize that a bit more.

12
00:00:31,970 --> 00:00:32,450
Now.

13
00:00:32,450 --> 00:00:39,320
We're going to do that by sending the header content type with our response.

14
00:00:39,320 --> 00:00:43,940
So we're going to send a headers that says Content type is application slash Jason.

15
00:00:43,940 --> 00:00:49,600
The way that we do that is again a using a built in function that comes on this response.

16
00:00:49,600 --> 00:00:53,650
Object so you to do rez dot set header,

17
00:00:53,650 --> 00:00:58,130
and this can take in anything we want.

18
00:00:58,130 --> 00:00:59,530
Its key value.

19
00:00:59,530 --> 00:01:00,660
It takes two parameters,

20
00:01:00,660 --> 00:01:01,390
a key and a value.

21
00:01:01,390 --> 00:01:07,400
So we're going to say that the key is content type and the value,

22
00:01:07,400 --> 00:01:16,150
which is the next parameter is application slash Jason.

23
00:01:16,150 --> 00:01:23,100
Now it's telling any browser anyone who understands content types that we're sending Jason

24
00:01:23,100 --> 00:01:23,100
,

25
00:01:23,100 --> 00:01:26,750
and it should parse this response as if it was Jason.

26
00:01:26,750 --> 00:01:30,350
So let's go ahead and start up our server again.

27
00:01:30,350 --> 00:01:32,980
Go back to postman,

28
00:01:32,980 --> 00:01:34,930
send the same response.

29
00:01:34,930 --> 00:01:38,170
We can see that this was the response that we got the last time we sent it.

30
00:01:38,170 --> 00:01:44,150
Now we're going to send this response and you can see it changed from just a bit of black

31
00:01:44,150 --> 00:01:47,290
text to a parse Jason object.

32
00:01:47,290 --> 00:01:54,050
That is because this application postman looked at that content type that we just returned

33
00:01:54,050 --> 00:01:54,050
.

34
00:01:54,050 --> 00:01:59,020
See that we returned content type application,

35
00:01:59,020 --> 00:01:59,700
Jason,

36
00:01:59,700 --> 00:02:02,860
and it's going to understand.

37
00:02:02,860 --> 00:02:03,410
Okay,

38
00:02:03,410 --> 00:02:04,380
this is Jason.

39
00:02:04,380 --> 00:02:09,470
I'm gonna go ahead and parse it and show it back to the user in a pretty way.

40
00:02:09,470 --> 00:02:12,480
If we look at the raw response is,

41
00:02:12,480 --> 00:02:13,240
there's no difference.

42
00:02:13,240 --> 00:02:15,520
We're always returning this raw string.

43
00:02:15,520 --> 00:02:19,770
There's nothing changed about the formatting or the coloring or anything like that of what

44
00:02:19,770 --> 00:02:24,340
were returned is just that a browser or a a mobile client.

45
00:02:24,340 --> 00:02:25,360
Or in this case,

46
00:02:25,360 --> 00:02:28,780
Postman understands that when you're sending Jason,

47
00:02:28,780 --> 00:02:30,730
it's a little nicer for the user.

48
00:02:30,730 --> 00:02:33,080
If I format it in a nice way,

49
00:02:33,080 --> 00:02:37,540
so it's doing that is doing this color highlighting for us because we told Postman,

50
00:02:37,540 --> 00:02:38,010
you know,

51
00:02:38,010 --> 00:02:38,960
this is Jason.

52
00:02:38,960 --> 00:02:40,560
All right,

53
00:02:40,560 --> 00:02:42,330
so that's how you specify Jason.

54
00:02:42,330 --> 00:02:42,990
Later on,

55
00:02:42,990 --> 00:02:47,000
we'll deal with specifying different types of payloads.

56
00:02:47,000 --> 00:02:47,700
But for now,

57
00:02:47,700 --> 00:02:49,100
we're building this A p I.

58
00:02:49,100 --> 00:02:50,770
That is purely in Jace.

59
00:02:50,770 --> 00:02:55,210
On every request that we received,

60
00:02:55,210 --> 00:02:57,440
we're going to respond to with Jason,

61
00:02:57,440 --> 00:02:58,660
at least for now.

62
00:02:58,660 --> 00:03:00,450
And so at this point,

63
00:03:00,450 --> 00:03:01,610
we are done.

64
00:03:01,610 --> 00:03:02,950
I'm gonna go ahead and kill the server.

65
00:03:02,950 --> 00:03:04,750
We can move on to the next lecture.

