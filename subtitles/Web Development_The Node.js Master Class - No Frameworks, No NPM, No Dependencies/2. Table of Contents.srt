1
00:00:00,000 --> 00:00:02,630
this course is separated into eight sections.

2
00:00:02,630 --> 00:00:05,160
The first section is the one you're in right now.

3
00:00:05,160 --> 00:00:10,230
The introductions in overviews in this section will introduce the course and myself,

4
00:00:10,230 --> 00:00:10,940
the instructor.

5
00:00:10,940 --> 00:00:14,790
Then we'll get you set up with everything you need to complete the exercises that come

6
00:00:14,790 --> 00:00:15,250
later.

7
00:00:15,250 --> 00:00:19,370
We'll also go over the requirements and prerequisites for the scores to ensure your in the

8
00:00:19,370 --> 00:00:24,960
right place and you're ready to go through it in Section two will give you a conceptual

9
00:00:24,960 --> 00:00:27,290
overview of node and the story behind it.

10
00:00:27,290 --> 00:00:29,150
We'll start with the history of note.

11
00:00:29,150 --> 00:00:30,130
It's quite a story,

12
00:00:30,130 --> 00:00:34,930
and I'm sure you enjoy it after that will walk through the nuts and bolts of what note is

13
00:00:34,930 --> 00:00:37,600
and what via is how they both work,

14
00:00:37,600 --> 00:00:39,350
as well as how they relate to each other.

15
00:00:39,350 --> 00:00:40,000
Well,

16
00:00:40,000 --> 00:00:45,150
then show you a sample note app so we can apply what we just learn to a real world example

17
00:00:45,150 --> 00:00:48,860
to cement our understanding of how a note application really works.

18
00:00:48,860 --> 00:00:49,490
Well,

19
00:00:49,490 --> 00:00:54,610
then talk about a few common note conventions used as well as differences between reading

20
00:00:54,610 --> 00:00:57,450
JavaScript for no Js and writing it for the browser.

21
00:00:57,450 --> 00:01:03,070
We'll also go over the differences between note AP eyes and build in JavaScript functions,

22
00:01:03,070 --> 00:01:08,560
and we'll go over the read evil print loop rebel that comes with note in Section three.

23
00:01:08,560 --> 00:01:11,850
We're going to jump right in and build a rest for a P I together.

24
00:01:11,850 --> 00:01:17,060
Doing this exercise will get you familiar with several key sections of the No Js docks.

25
00:01:17,060 --> 00:01:18,990
Fs the file system.

26
00:01:18,990 --> 00:01:26,410
Http crypto lib string decoder and path to name a few in Section four,

27
00:01:26,410 --> 00:01:28,850
we're going to build a sample Web G Y.

28
00:01:28,850 --> 00:01:32,880
The major purpose of this app will be to consume the A P I we just built,

29
00:01:32,880 --> 00:01:37,890
but also use it as an excuse to show you how you can build complex template ID views within

30
00:01:37,890 --> 00:01:38,250
note.

31
00:01:38,250 --> 00:01:40,290
In Section five,

32
00:01:40,290 --> 00:01:44,750
you're going to build a command line application that takes user inputs from the console,

33
00:01:44,750 --> 00:01:48,590
processes them and writes outputs back out to the console.

34
00:01:48,590 --> 00:01:51,110
This will get you acquainted with nodes,

35
00:01:51,110 --> 00:01:53,380
read line events,

36
00:01:53,380 --> 00:01:53,780
TT,

37
00:01:53,780 --> 00:01:54,430
Y,

38
00:01:54,430 --> 00:01:56,500
V eight and OS modules.

39
00:01:56,500 --> 00:01:57,670
Very feud.

40
00:01:57,670 --> 00:02:01,130
No developers have ever built a command line tool and note.

41
00:02:01,130 --> 00:02:02,530
After this section,

42
00:02:02,530 --> 00:02:03,800
you'll be one of them,

43
00:02:03,800 --> 00:02:06,290
and you'll have done it without a framework.

44
00:02:06,290 --> 00:02:10,350
How about that section six is all about testing.

45
00:02:10,350 --> 00:02:15,840
Did you know that note has a built in assertion library and that writing tests is as easy

46
00:02:15,840 --> 00:02:16,750
as creating file?

47
00:02:16,750 --> 00:02:20,540
No quote unquote test runners or pipelines air needed?

48
00:02:20,540 --> 00:02:21,980
Here in this section,

49
00:02:21,980 --> 00:02:25,470
you're going to write tests for a few of the functions that we wrote in the fever these

50
00:02:25,470 --> 00:02:26,250
projects.

51
00:02:26,250 --> 00:02:31,920
We're going to write unit tests and also show some examples of how you test your new A.

52
00:02:31,920 --> 00:02:37,690
P I over http will also explore how to use the strict JavaScript flag,

53
00:02:37,690 --> 00:02:38,320
Teoh Lynch,

54
00:02:38,320 --> 00:02:43,610
your code for syntax errors and how to use the D bugger to pinpoint issues during execution

55
00:02:43,610 --> 00:02:43,610
.

56
00:02:43,610 --> 00:02:51,660
Section seven Speed and scalability or two of the most popular reasons that Dev's choose to

57
00:02:51,660 --> 00:02:52,450
work in note.

58
00:02:52,450 --> 00:02:57,900
But few know how to profile or benchmark their code or tweak it for performance.

59
00:02:57,900 --> 00:03:04,030
Section seven will be a crash course in performance optimization and all things speed and

60
00:03:04,030 --> 00:03:09,210
scalability here will re factor some of our earlier app so that they're less resource

61
00:03:09,210 --> 00:03:15,340
hungry and then use the performance hooks module to time the execution of certain processes

62
00:03:15,340 --> 00:03:15,340
.

63
00:03:15,340 --> 00:03:18,050
Then we'll dive into nodes,

64
00:03:18,050 --> 00:03:24,790
cluster and child processes modules to explore how any note app can take advantage of all

65
00:03:24,790 --> 00:03:26,400
the cores available to it.

66
00:03:26,400 --> 00:03:31,260
Section eight once you reach Section eight Yobe,

67
00:03:31,260 --> 00:03:33,020
a development force to be reckoned with,

68
00:03:33,020 --> 00:03:38,280
but you'll still be missing experience with a few key no J ASAP eyes that we didn't fit

69
00:03:38,280 --> 00:03:39,670
into the earlier lectures.

70
00:03:39,670 --> 00:03:43,050
Section eight is dedicated to all these loose ends.

71
00:03:43,050 --> 00:03:44,170
In this section,

72
00:03:44,170 --> 00:03:47,490
you'll get experience with HDP two VM,

73
00:03:47,490 --> 00:03:48,510
UDP,

74
00:03:48,510 --> 00:03:50,660
Net TLS and more.

75
00:03:50,660 --> 00:03:52,590
Once this section is done,

76
00:03:52,590 --> 00:03:53,560
you're done.

77
00:03:53,560 --> 00:03:55,880
There really won't be anything left to teach you.

78
00:03:55,880 --> 00:03:57,760
As far as lecture format.

79
00:03:57,760 --> 00:04:02,050
The majority of this course will show a text editor on one side of the screen and a

80
00:04:02,050 --> 00:04:03,250
terminal on the other.

81
00:04:03,250 --> 00:04:09,320
I encourage you to make this video full screen on a full size laptop or desktop so you can

82
00:04:09,320 --> 00:04:14,720
see the text as it might be quite small if you'd like to download the code rather than

83
00:04:14,720 --> 00:04:17,330
write it from scratch along side the video.

84
00:04:17,330 --> 00:04:23,310
Each lectures code base is available to download or clone from our get up or from the

85
00:04:23,310 --> 00:04:23,950
course site.

