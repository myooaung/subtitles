1
00:00:00,000 --> 00:00:05,050
congratulations.

2
00:00:05,050 --> 00:00:10,550
You've reached the end of the section on building a CLI command line application.

3
00:00:10,550 --> 00:00:12,310
In this section,

4
00:00:12,310 --> 00:00:16,200
we used a few modules that we had never used before.

5
00:00:16,200 --> 00:00:18,240
The first was events.

6
00:00:18,240 --> 00:00:18,860
Obviously,

7
00:00:18,860 --> 00:00:23,800
we built this command my tool very differently than we had built the A p I,

8
00:00:23,800 --> 00:00:30,440
rather than passing information around functionally when the user interest texts as an

9
00:00:30,440 --> 00:00:35,610
input in the command line that ends up emitting an event that we need to bind to.

10
00:00:35,610 --> 00:00:40,950
All of that was done through the event a meter through the event class.

11
00:00:40,950 --> 00:00:45,480
One of the other modules that we introduced here was the OS module.

12
00:00:45,480 --> 00:00:52,110
This is the one that we used in order to get information such as CP use and load averages

13
00:00:52,110 --> 00:00:58,900
when the user's asked the question stats in order to respond with specific metrics,

14
00:00:58,900 --> 00:01:05,750
we pulled in this module and we also put in the eight module to get information like keep

15
00:01:05,750 --> 00:01:06,560
statistics.

16
00:01:06,560 --> 00:01:07,820
Lastly,

17
00:01:07,820 --> 00:01:09,950
to read input from the console,

18
00:01:09,950 --> 00:01:15,030
we implemented our CLI using the read line module,

19
00:01:15,030 --> 00:01:22,510
and this allowed us to read in text from the console one man at a time and then send that

20
00:01:22,510 --> 00:01:25,760
text to an input processor off our own design.

21
00:01:25,760 --> 00:01:28,410
These four new modules were introduced here,

22
00:01:28,410 --> 00:01:33,010
and there will be several more modules introduced in the coming sections.

23
00:01:33,010 --> 00:01:34,220
Coming up,

24
00:01:34,220 --> 00:01:40,690
we're going to turn to a section on debugging and adding stability with test coverage.

25
00:01:40,690 --> 00:01:42,790
So without further ado,

26
00:01:42,790 --> 00:01:44,440
let's move on to the next section.

