WEBVTT
ï»¿1
00:00:00.000 --> 00:00:04.270
in this lecture,

2
00:00:04.270 --> 00:00:06.000
we want to build out the functionality.

3
00:00:06.000 --> 00:00:07.980
For more check info,

4
00:00:07.980 --> 00:00:12.470
let's look at the man page and review the syntax of that command.

5
00:00:12.470 --> 00:00:22.600
As you can see,

6
00:00:22.600 --> 00:00:26.290
more check info works just like more user info,

7
00:00:26.290 --> 00:00:28.610
where they state more check info,

8
00:00:28.610 --> 00:00:32.150
then do dash dash and then the idea of a check.

9
00:00:32.150 --> 00:00:34.500
Because of the similarities,

10
00:00:34.500 --> 00:00:39.770
we can actually copy the logic from more user info and then customize it slightly toward

11
00:00:39.770 --> 00:00:40.250
needs.

12
00:00:40.250 --> 00:00:43.960
So I'm going down here to more user info.

13
00:00:43.960 --> 00:00:47.380
I'm gonna copy the meat of this function,

14
00:00:47.380 --> 00:00:51.680
then move on down to more check info and just paste it in here.

15
00:00:51.680 --> 00:00:54.130
Just like more user info.

16
00:00:54.130 --> 00:00:56.250
We want to get the I D from the string.

17
00:00:56.250 --> 00:01:01.120
We want to split on dash dash and get the second element in the array.

18
00:01:01.120 --> 00:01:05.180
But the second element is not going to be a user.

19
00:01:05.180 --> 00:01:05.500
I d.

20
00:01:05.500 --> 00:01:06.890
It's going to be a check.

21
00:01:06.890 --> 00:01:07.300
I d.

22
00:01:07.300 --> 00:01:09.930
Then we want to continue.

23
00:01:09.930 --> 00:01:11.090
If there is a check,

24
00:01:11.090 --> 00:01:11.570
i D.

25
00:01:11.570 --> 00:01:14.150
And then we want to look up the check.

26
00:01:14.150 --> 00:01:18.250
So we want to do with data read from the checks collection,

27
00:01:18.250 --> 00:01:20.370
not from the user collection,

28
00:01:20.370 --> 00:01:22.450
and we want to read by check,

29
00:01:22.450 --> 00:01:22.900
i d.

30
00:01:22.900 --> 00:01:26.850
It's going to return back in air and check data,

31
00:01:26.850 --> 00:01:29.340
and then we want to continue on.

32
00:01:29.340 --> 00:01:31.750
If there is no error and there is check data,

33
00:01:31.750 --> 00:01:37.580
we don't need to remove the hash password because there's no such thing in the Czech object

34
00:01:37.580 --> 00:01:37.580
.

35
00:01:37.580 --> 00:01:41.650
And then we want to print the Jason object with text highlighting.

36
00:01:41.650 --> 00:01:44.970
But it's going to be checked data,

37
00:01:44.970 --> 00:01:46.250
not user data,

38
00:01:46.250 --> 00:01:50.430
and we'll wrap it in vertical space on each side.

39
00:01:50.430 --> 00:01:52.850
So that's all we need to do.

40
00:01:52.850 --> 00:02:01.410
Let's go ahead and start the at backup and first will list the checks so we can get the

41
00:02:01.410 --> 00:02:02.170
idea of a check.

42
00:02:02.170 --> 00:02:05.530
I'm gonna grab this last check,

43
00:02:05.530 --> 00:02:10.660
i d and now I'm going to say mawr check info,

44
00:02:10.660 --> 00:02:11.520
Dash,

45
00:02:11.520 --> 00:02:11.990
dash,

46
00:02:11.990 --> 00:02:12.860
this I d.

47
00:02:12.860 --> 00:02:18.420
You can see it spat out the object for this check.

48
00:02:18.420 --> 00:02:19.160
We have the i.

49
00:02:19.160 --> 00:02:19.580
D.

50
00:02:19.580 --> 00:02:20.290
The user phone,

51
00:02:20.290 --> 00:02:23.950
the protocol and all the other data about this check.

52
00:02:23.950 --> 00:02:29.980
So more check info seems to be working just fine so we can kill this application and move

53
00:02:29.980 --> 00:02:31.050
on to the next lecture

