WEBVTT
1
00:00:01.319 --> 00:00:01.914
In this demo,

2
00:00:01.914 --> 00:00:05.044
some of the things that we're going to be doing includes

3
00:00:05.044 --> 00:00:08.368
getting familiar with the Amazon Athena Console,

4
00:00:08.368 --> 00:00:13.098
creating a database and a table with Amazon Athena,

5
00:00:13.098 --> 00:00:18.896
and querying the data with SQL in the Amazon Athena Query Editor.

6
00:00:18.896 --> 00:00:22.404
Log into your AWS Management Console.

7
00:00:22.404 --> 00:00:28.040
Start typing Athena in the search bar, and when you see it, click on it.

8
00:00:28.040 --> 00:00:30.218
This is the Amazon Athena Query Editor.

9
00:00:30.218 --> 00:00:35.947
It opens up with a sample of writing Hive DDL statements

10
00:00:35.947 --> 00:00:42.473
and using ANSI SQL to query the tables, which is great if you're a beginner.

11
00:00:42.473 --> 00:00:45.567
At the top, there's a tab that reads Tutorial,

12
00:00:45.567 --> 00:00:46.935
and if you click that,

13
00:00:46.935 --> 00:00:52.364
there's actually a wizard that walks you through creating a table for

14
00:00:52.364 --> 00:00:56.992
Elastic Load Balancer Data using Amazon Athena,

15
00:00:56.992 --> 00:00:58.383
which I think is pretty cool.

16
00:00:58.383 --> 00:01:03.153
It's integrated right into the console of Amazon Athena.

17
00:01:03.153 --> 00:01:07.444
Let's take a quick look at the Amazon Athena interface.

18
00:01:07.444 --> 00:01:12.635
You have the Query Editor where you'll be spending most of your time.

19
00:01:12.635 --> 00:01:16.875
You have a tab for Saved Queries, and if you click on it,

20
00:01:16.875 --> 00:01:18.985
you get your list of saved queries,

21
00:01:18.985 --> 00:01:25.519
which is more important than you think because the whole goal of creating

22
00:01:25.519 --> 00:01:32.400
queries in Amazon Athena is to be able to use the same queries over and over

23
00:01:32.400 --> 00:01:35.813
again on the same data as the schema changes.

24
00:01:35.813 --> 00:01:41.276
So when you write your queries, you have to kind of keep that in mind.

25
00:01:41.276 --> 00:01:45.106
There's also a History tab, and if you click on that,

26
00:01:45.106 --> 00:01:50.111
you have your history for 45 days, where you get a lot of information,

27
00:01:50.111 --> 00:01:53.820
including if the query succeeded or failed,

28
00:01:53.820 --> 00:01:57.197
the runtime, the amount of data scanned,

29
00:01:57.197 --> 00:02:00.811
and you can also download the results and do whatever you

30
00:02:00.811 --> 00:02:03.301
need to with those particular queries.

31
00:02:03.301 --> 00:02:06.689
If you click on the Settings tab,

32
00:02:06.689 --> 00:02:10.857
you can set the Query result location to be wherever

33
00:02:10.857 --> 00:02:16.985
you want it to be in Amazon S3, as well as a couple of other setting tweaks.

34
00:02:16.985 --> 00:02:24.017
Anything that you change in the Settings popup doesn't apply to past queries,

35
00:02:24.017 --> 00:02:27.267
but it does apply to anything moving forward.

36
00:02:27.267 --> 00:02:32.200
There's also a tab for the Workgroup that you're using.

37
00:02:32.200 --> 00:02:36.079
I'll explain workgroups for you in an upcoming section.

38
00:02:36.079 --> 00:02:38.254
Let's click on the Workgroup tab.

39
00:02:38.254 --> 00:02:42.192
If you don't create a workgroup by default,

40
00:02:42.192 --> 00:02:49.658
Amazon Athena associates a primary workgroup to your Athena instances.

41
00:02:49.658 --> 00:02:52.966
If I click the radio button next to the primary workgroup,

42
00:02:52.966 --> 00:02:55.662
and I click on View details,

43
00:02:55.662 --> 00:03:01.446
it opens up four tabs that gives you more information about cost control,

44
00:03:01.446 --> 00:03:06.515
metrics, and other things having to do with a workgroup,

45
00:03:06.515 --> 00:03:12.534
which are primarily used within companies or a team to

46
00:03:12.534 --> 00:03:15.150
isolate certain people into workgroups.

47
00:03:15.150 --> 00:03:18.145
Let's return to the Query Editor.

48
00:03:18.145 --> 00:03:20.916
Under the Database pane, if you click the drop-down list,

49
00:03:20.916 --> 00:03:27.034
it will show you all the databases that you've worked with in Amazon Athena.

50
00:03:27.034 --> 00:03:29.644
So let's create a database.

51
00:03:29.644 --> 00:03:33.630
This is a bare-bones CREATE DATABASE IF NOT EXISTS DDL statement,

52
00:03:33.630 --> 00:03:35.743
and when we create a table,

53
00:03:35.743 --> 00:03:40.622
we're going to create it in the sakiladb because the table will hold

54
00:03:40.622 --> 00:03:45.180
information about NBA players for Globomantics.

55
00:03:45.180 --> 00:03:49.725
This bare-bones DDL statement creates a database

56
00:03:49.725 --> 00:03:53.817
with the IF NOT EXISTS parameter, we're adding a comment,

57
00:03:53.817 --> 00:04:01.280
we're adding a location in S3, and we're defining some database properties.

58
00:04:01.280 --> 00:04:06.861
So let's run this CREATE DATABASE, and it says the query was successful.

59
00:04:06.861 --> 00:04:12.709
So, let's go over to the Database pane, click the Refresh button,

60
00:04:12.709 --> 00:04:17.014
and then look for the name of the whatever database in the drop-down list,

61
00:04:17.014 --> 00:04:19.706
and right here is whatever.

62
00:04:19.706 --> 00:04:24.010
You can also create databases very simply by just staying

63
00:04:24.010 --> 00:04:26.083
create database and giving it a name.

64
00:04:26.083 --> 00:04:32.486
Let's run this, and it says the query is successful, and here is kimmysdatabase.

65
00:04:32.486 --> 00:04:35.974
So it's pretty easy to create a database,

66
00:04:35.974 --> 00:04:39.635
and whatever properties that you want to include is great,

67
00:04:39.635 --> 00:04:42.437
but you really don't have to.

68
00:04:42.437 --> 00:04:44.546
Now you will have to add some of the mandatory

69
00:04:44.546 --> 00:04:48.221
properties later like the S3 location,

70
00:04:48.221 --> 00:04:53.441
but let's say if you wanted a placeholder with a particular name,

71
00:04:53.441 --> 00:05:00.789
you could do it this way rather than stating everything upon database creation.

72
00:05:00.789 --> 00:05:07.239
I've zoomed out in the browser so that we can see the entire CREATE EXTERNAL

73
00:05:07.239 --> 00:05:13.919
TABLE command because what we're going to do right now is create a new table

74
00:05:13.919 --> 00:05:17.495
and then look at it in the Glue Data Catalog.

75
00:05:17.495 --> 00:05:23.249
We're going to create this table in the sakila database because

76
00:05:23.249 --> 00:05:29.440
the sakila database contains all the tables that have to do

77
00:05:29.440 --> 00:05:32.833
with NBA players for Globomantics.

78
00:05:32.833 --> 00:05:36.896
We give the table a name, which is nba_elo.

79
00:05:36.896 --> 00:05:43.081
The Elo rating system is a way to calculate the relative

80
00:05:43.081 --> 00:05:46.793
skill levels of players in zero-sum games.

81
00:05:46.793 --> 00:05:53.279
The Elo system was originally invented as an improved chess

82
00:05:53.279 --> 00:05:56.879
rating system over the previously-used system,

83
00:05:56.879 --> 00:06:01.922
but it's also used as a rating system for multiplayer

84
00:06:01.922 --> 00:06:06.333
competitions in a number of video games,

85
00:06:06.333 --> 00:06:10.638
football, basketball, baseball, table tennis,

86
00:06:10.638 --> 00:06:15.198
Scrabble, and different board games.

87
00:06:15.198 --> 00:06:18.579
So in the table definition, we have the name,

88
00:06:18.579 --> 00:06:22.695
the column names, the data type for the column names,

89
00:06:22.695 --> 00:06:29.764
row format is delimited by a comma, it has an input format,

90
00:06:29.764 --> 00:06:35.934
an output format, the location in S3, and various table properties.

91
00:06:35.934 --> 00:06:43.456
I've returned the browser size to the 100%, so we get to see more of the screen.

92
00:06:43.456 --> 00:06:49.447
Let's run this, and if I move this up, you can see that the query was successful.

93
00:06:49.447 --> 00:06:52.484
And if we look over here, automatically it shows.

94
00:06:52.484 --> 00:07:00.336
So we have the nbaelo_nba_elo_, table, and these are the columns.

95
00:07:00.336 --> 00:07:04.276
So now, let's query the new table.

96
00:07:04.276 --> 00:07:07.693
SELECT * FROM sakiladb database .nbaelo_nba_elo,

97
00:07:07.693 --> 00:07:15.050
and I'm going to limit this to 100 rows.

98
00:07:15.050 --> 00:07:19.881
Let's run this, and move this up, and here we have it.

99
00:07:19.881 --> 00:07:23.097
It's a very interesting dataset if you look at the information and

100
00:07:23.097 --> 00:07:28.159
look up what it all means because it's a big deal every year to have

101
00:07:28.159 --> 00:07:32.422
the Elo predictions for each NBA player.

102
00:07:32.422 --> 00:07:37.607
Returning to the Query Editor after scrolling through the results of the query,

103
00:07:37.607 --> 00:07:42.098
notice after you've run a SELECT query, you have the option to Save the query,

104
00:07:42.098 --> 00:07:47.393
you can Create a table from the query, and Create a view from the query.

105
00:07:47.393 --> 00:07:50.441
You can also format if you want to.

106
00:07:50.441 --> 00:07:57.409
So now let's look at the Glue Data Catalog for this entry of the NBA Elo table,

107
00:07:57.409 --> 00:08:04.280
and you can go right there from a tab in Amazon Athena's interface.

108
00:08:04.280 --> 00:08:07.874
And we are in the sakiladb, and right here we have nba_elo.

109
00:08:07.874 --> 00:08:15.048
So it's really cool that AWS Glue and Amazon Athena share the same data

110
00:08:15.048 --> 00:08:22.449
catalog because that's very powerful in so far as eliminating data silos and

111
00:08:22.449 --> 00:08:25.236
having one source of truth for all of your data,

112
00:08:25.236 --> 00:08:28.435
no matter where it exists.

113
00:08:28.435 --> 00:08:34.962
And you can click on the name of the table to see the properties,

114
00:08:34.962 --> 00:08:36.462
statistics, schema,

115
00:08:36.462 --> 00:08:39.351
and more like we've done when we've created other

116
00:08:39.351 --> 00:08:41.814
tables in the Glue Data Catalog.

117
00:08:41.814 --> 00:08:47.068
In the next section, I'll cover using workgroups in Amazon Athena,

118
00:08:47.068 --> 00:08:51.948
using partitions in Amazon Athena tables,

119
00:08:51.948 --> 00:08:57.649
and monitoring Athena, which is kind of tricky because the data is instantaneous,

120
00:08:57.649 --> 00:09:01.297
and it's ephemeral, I mean it just happens in a second,

121
00:09:01.297 --> 00:09:06.354
and how do you capture that information in order to see what's going on?

122
00:09:06.354 --> 00:09:11.000
Well, I'll show you how in the next section. See you there.

