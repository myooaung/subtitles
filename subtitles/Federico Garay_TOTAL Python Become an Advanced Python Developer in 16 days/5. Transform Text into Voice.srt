1
00:00:08,090 --> 00:00:13,640
So we've succeeded in getting the assistant to understand what we say and they can transform it into

2
00:00:13,640 --> 00:00:14,360
text.

3
00:00:15,050 --> 00:00:22,280
So all of this we can program in this function which I can make smaller as to not occupy so much space.

4
00:00:23,000 --> 00:00:28,970
But before we do this, transform the voice into text, the code doesn't have any instructions about

5
00:00:28,970 --> 00:00:30,710
what to do with our request.

6
00:00:31,040 --> 00:00:32,940
So for now, it doesn't do anything.

7
00:00:32,960 --> 00:00:35,090
It simply prints it on the screen.

8
00:00:35,450 --> 00:00:41,780
So before we continue making our assistant do something with our request, we must also achieve the

9
00:00:41,780 --> 00:00:43,070
opposite process.

10
00:00:43,340 --> 00:00:49,700
We must succeed in transforming the response which our program is going to give us as a text so it can

11
00:00:49,700 --> 00:00:52,910
return this response with the sound of a human voice.

12
00:00:53,900 --> 00:00:59,510
So here we're going to delete this call, which was only to test if everything worked okay.

13
00:01:00,110 --> 00:01:04,790
And now we're going to write a function that the assistant can be heard.

14
00:01:05,660 --> 00:01:11,690
And we should define it as speed and it needs a parameter, which is the text it has to say.

15
00:01:12,680 --> 00:01:18,590
So we call message in the parameter, and now we will need two or three lines of code.

16
00:01:19,690 --> 00:01:24,390
The first will be and listen to this for Start Engine.

17
00:01:24,600 --> 00:01:26,460
You would be saying what engine?

18
00:01:27,250 --> 00:01:30,610
So the engine of ptsx3.

19
00:01:31,530 --> 00:01:35,250
The tool needed by default so that we started.

20
00:01:36,480 --> 00:01:38,700
So we can name this variable engine.

21
00:01:39,120 --> 00:01:47,340
It's going to be the same as P T6 three and it starts with the method in it and then comes the code

22
00:01:47,340 --> 00:01:48,990
for deliver message.

23
00:01:49,500 --> 00:01:52,650
The engine is going to say our message.

24
00:01:53,250 --> 00:01:55,890
Then engine is going to implement the method.

25
00:01:55,890 --> 00:01:57,180
Run and wait.

26
00:01:58,030 --> 00:02:04,330
So these two lines are in charge of what is said, that it is executed and that it waits.

27
00:02:05,140 --> 00:02:11,140
So let's call, speak, and we're going to give it a phrase that could be our famous hello world.

28
00:02:13,360 --> 00:02:15,490
If we execute it, it should say.

29
00:02:16,370 --> 00:02:17,150
Hello world.

30
00:02:17,300 --> 00:02:18,320
Did you hear it?

31
00:02:18,560 --> 00:02:19,530
Marvelous.

32
00:02:19,550 --> 00:02:22,130
I'm going to execute it again because I love it.

33
00:02:23,210 --> 00:02:24,050
Hello, world.

34
00:02:24,620 --> 00:02:28,820
Okay, so the voice you heard there is the voice I've programmed on my computer.

35
00:02:29,510 --> 00:02:35,060
Every time I execute a program of text to voice, my computer's programmed to use the voice in English.

36
00:02:35,780 --> 00:02:39,950
You must check that you have your computer configured to a voice in your language.

37
00:02:40,130 --> 00:02:44,450
There are certain interesting considerations to remember when dealing with language.

38
00:02:44,660 --> 00:02:50,000
And in the next lesson, we're going to see how to make this voice sound exactly how we want.
