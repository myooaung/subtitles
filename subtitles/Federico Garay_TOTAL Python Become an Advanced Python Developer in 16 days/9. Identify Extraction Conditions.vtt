WEBVTT
1
00:00:07.910 --> 00:00:12.620
We already know how to get our program to explore different pages when doing a search.

2
00:00:12.890 --> 00:00:18.410
Now we have to figure out how to extract only the titles of four and five style books.

3
00:00:18.680 --> 00:00:24.140
So we have to find out a way how these stars look like in the HTML code.

4
00:00:25.400 --> 00:00:28.100
Let's right click and inspect these stars.

5
00:00:28.850 --> 00:00:35.630
Here we have the HTML code and here we can see these five lines of code where there's a class named

6
00:00:35.630 --> 00:00:37.250
Icon Star.

7
00:00:38.300 --> 00:00:43.520
Since this book has three stars, we should be able to spot some difference between these three lines

8
00:00:43.520 --> 00:00:48.860
which correspond to the yellow stars and these two lines which correspond to the empty stars.

9
00:00:50.070 --> 00:00:52.140
Well, they look exactly the same.

10
00:00:52.350 --> 00:00:56.040
Which means the difference doesn't lie in this part of the code.

11
00:00:56.580 --> 00:01:00.030
Therefore, this is not how we're going to extract those titles.

12
00:01:00.990 --> 00:01:06.360
On the other hand, we can see that these five lines are inside another class, which is a paragraph

13
00:01:06.360 --> 00:01:08.640
named Star Rating three.

14
00:01:09.000 --> 00:01:15.240
So this is how we'll be able to identify the rating of each book through the name of this class.

15
00:01:15.780 --> 00:01:21.720
We won't use the number of lines, since there will always be five of them for any of the books.

16
00:01:21.750 --> 00:01:25.950
Instead, we're going to use the number at the end of the class name.

17
00:01:26.490 --> 00:01:31.140
So I want to look up the title of this book, which is rated three stars.

18
00:01:31.560 --> 00:01:35.630
Where can I find this title here in the code.

19
00:01:35.640 --> 00:01:43.620
If I position myself here and choose inspect, I'll see that the title is in this H three tag which

20
00:01:43.620 --> 00:01:51.060
reads a h, r, e, f and contains the title tag which is Slow States of Collapse.

21
00:01:51.900 --> 00:01:53.160
So there's a problem.

22
00:01:53.820 --> 00:01:57.240
Both the stars and the title are on the same level.

23
00:01:57.780 --> 00:02:01.410
So let's close this and we see that they are on the same level.

24
00:02:01.440 --> 00:02:03.510
It's not that one is inside the other.

25
00:02:03.870 --> 00:02:10.380
So taking into account the tools we have, which allows us to only identify one tag inside another,

26
00:02:10.470 --> 00:02:14.010
we won't be able to do this since they are on the same level.

27
00:02:14.790 --> 00:02:15.900
So look at this.

28
00:02:16.140 --> 00:02:22.740
Both stars and title are inside the tag reading article whose name is Class Product Pod.

29
00:02:23.940 --> 00:02:28.200
If we position ourselves here, the book and its data are highlighted.

30
00:02:29.070 --> 00:02:31.320
So this is the special rule.

31
00:02:31.620 --> 00:02:38.790
We have to look for product pod and extract the title of books that have a specific number of stars

32
00:02:38.790 --> 00:02:41.940
in the name of the class star rating.

33
00:02:42.900 --> 00:02:46.440
So let's go to pie chart to see how we can do this with code.

34
00:02:47.760 --> 00:02:51.270
Let's delete this loop and create our first call.

35
00:02:51.990 --> 00:02:54.480
Let's store in result requests.

36
00:02:54.480 --> 00:02:55.500
Dot get.

37
00:02:55.840 --> 00:02:58.650
And here we're going to save basic URL.

38
00:02:59.570 --> 00:03:05.390
We're going to work with page one for now, and then we're going to figure out how to iterate over the

39
00:03:05.390 --> 00:03:06.770
other pages with a loop.

40
00:03:08.210 --> 00:03:10.830
So let's generate a soup that contains B.

41
00:03:10.880 --> 00:03:13.100
S for beautiful soup.

42
00:03:13.640 --> 00:03:19.970
And here we type result text and pick HTML parser as method.

43
00:03:20.740 --> 00:03:22.840
This is something we know by heart.

44
00:03:23.410 --> 00:03:31.320
We want to print super select and here we select dot and the class named product pod.

45
00:03:32.650 --> 00:03:33.790
So let's execute it.

46
00:03:33.790 --> 00:03:38.350
And here we have a type error since string object is not callable.

47
00:03:38.950 --> 00:03:42.540
Of course, that's because I haven't entered the format.

48
00:03:42.550 --> 00:03:43.150
Keep up.

49
00:03:43.150 --> 00:03:43.690
Very.

50
00:03:45.190 --> 00:03:49.270
Okay, let's execute it and we receive a lot of text.

51
00:03:50.080 --> 00:03:54.430
If we take a closer look, we'll see a list containing all the class product pod.

52
00:03:54.910 --> 00:03:57.520
Let's start with article class product pod.

53
00:03:58.420 --> 00:04:02.860
They are followed by a div tag and a tag and a div tag again.

54
00:04:03.130 --> 00:04:06.130
And there's the number of stars and the title.

55
00:04:07.270 --> 00:04:10.090
Hey, we should have as many elements as page one.

56
00:04:10.450 --> 00:04:16.210
So if we go back to our website and scroll all the way down, we see that there are 20 results for each

57
00:04:16.210 --> 00:04:16.930
page.

58
00:04:17.260 --> 00:04:20.950
Yeah, 20 results from pages 41 to 60.

59
00:04:21.430 --> 00:04:22.960
That's what we should be seeing.

60
00:04:23.410 --> 00:04:26.110
So we can confirm that by printing the length.

61
00:04:26.990 --> 00:04:28.190
Which tells us.

62
00:04:29.570 --> 00:04:31.270
We have 20 elements.

63
00:04:31.280 --> 00:04:32.180
Perfect.

64
00:04:32.960 --> 00:04:39.620
So we've managed to get our code to capture all the products with titles and stars in the first page.

65
00:04:40.470 --> 00:04:41.400
For our next lesson.

66
00:04:41.400 --> 00:04:44.610
We'll spice it up a bit so as to work towards our goal.

67
00:04:45.270 --> 00:04:46.200
I'll see you there.
