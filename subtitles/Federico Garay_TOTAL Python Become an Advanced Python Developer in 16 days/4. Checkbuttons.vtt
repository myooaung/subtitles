WEBVTT
1
00:00:08.250 --> 00:00:13.020
So now that we've finished our application structure, we have to include elements that we can later

2
00:00:13.020 --> 00:00:13.590
see.

3
00:00:14.100 --> 00:00:19.500
So we're going to create the lists of food, drinks and desserts that should be included on the left

4
00:00:19.500 --> 00:00:20.580
panel menus.

5
00:00:21.420 --> 00:00:24.900
In order to enter that data, we first need to store them somewhere.

6
00:00:25.410 --> 00:00:27.930
So let's create some lists which can hold them.

7
00:00:28.920 --> 00:00:32.490
Let's type product lists and create three lists.

8
00:00:33.150 --> 00:00:39.900
The first one is food list, and we should add eight options such as chicken, lamb, salmon, hake,

9
00:00:39.930 --> 00:00:43.920
kebabs, pizza one, pizza two and pizza three.

10
00:00:44.310 --> 00:00:45.300
That should do it.

11
00:00:46.590 --> 00:00:49.230
Now let's add eight options for drink list.

12
00:00:49.830 --> 00:00:57.510
Lemonade, soda, juice, cola, wine, one wine, two, beer, one and beer two.

13
00:00:58.590 --> 00:00:59.820
These are our drinks.

14
00:01:00.840 --> 00:01:07.130
Finally, let's create the dessert list, which can include ice cream fruit, which is very healthy.

15
00:01:07.140 --> 00:01:10.500
Brownies, pudding, cheesecake.

16
00:01:10.530 --> 00:01:12.600
And I've already run out of ideas.

17
00:01:12.600 --> 00:01:15.240
So cake one, cake two and cake three.

18
00:01:15.810 --> 00:01:19.680
So we're selling 24 products now.

19
00:01:19.680 --> 00:01:25.980
We have to place all these names in our food, drink and dessert panels, and we're going to use a loop

20
00:01:25.980 --> 00:01:26.640
for that.

21
00:01:27.720 --> 00:01:31.230
We need a loop that creates a check button for each of them.

22
00:01:31.650 --> 00:01:36.930
That way, the user will be able to check off the products that their clients have bought.

23
00:01:38.190 --> 00:01:44.430
First, we need a variable named counter, which increases a value as we loop through everything.

24
00:01:44.940 --> 00:01:49.500
As a result, we can establish which position each product occupies.

25
00:01:50.070 --> 00:01:54.750
So for each food in food list, we'll do the following.

26
00:01:55.200 --> 00:02:02.100
We'll make food the one corresponding to each iteration be equal to check button, which is a t k enter

27
00:02:02.100 --> 00:02:02.760
element.

28
00:02:03.720 --> 00:02:05.550
Where will our food be?

29
00:02:06.090 --> 00:02:07.920
Inside Food Panel.

30
00:02:08.640 --> 00:02:15.120
Then we're going to manipulate the text on each tag from these check buttons and they all have to be

31
00:02:15.120 --> 00:02:18.060
different as they will contain different plates.

32
00:02:19.300 --> 00:02:22.350
I will create those texts with food title.

33
00:02:22.980 --> 00:02:26.100
That is the name of each food in food list.

34
00:02:26.310 --> 00:02:28.110
And that's the second attribute.

35
00:02:29.160 --> 00:02:32.280
Then font, which will be the same for all of them.

36
00:02:32.550 --> 00:02:36.420
It will be doses size 19 in bold.

37
00:02:37.200 --> 00:02:41.250
Here we press comma and enter to continue on the next line.

38
00:02:42.540 --> 00:02:47.490
And here we'll enter on value one and off value zero.

39
00:02:48.000 --> 00:02:48.380
What?

40
00:02:48.380 --> 00:02:49.380
What's this?

41
00:02:49.410 --> 00:02:56.970
You may ask the former is the value that this checkbox will return when it's activated, and the latter

42
00:02:56.970 --> 00:03:00.990
is the value it will contain when the checkbox is deactivated.

43
00:03:01.680 --> 00:03:06.780
So if it's deactivated, its value will be zero, otherwise it will be one.

44
00:03:07.620 --> 00:03:14.190
These two values will let us programmatically identify the state of the products they are linked to,

45
00:03:14.520 --> 00:03:17.130
regardless of being chosen or not.

46
00:03:17.880 --> 00:03:21.390
Consequently, we'll be able to make decisions about it.

47
00:03:22.560 --> 00:03:28.800
So we've finished configuring our food for now, and once we create the check buttons, we can place

48
00:03:28.800 --> 00:03:30.330
them inside the panel.

49
00:03:31.500 --> 00:03:39.030
So we call food again, but we use the grid method and we can create columns and rows using that method,

50
00:03:39.030 --> 00:03:39.660
remember?

51
00:03:40.290 --> 00:03:46.350
So our food panel will have a column containing all the objects, one on top of the other.

52
00:03:46.830 --> 00:03:49.410
So we're only going to change rows.

53
00:03:50.420 --> 00:03:56.570
Roe will be equal to the value of counter because we'll make that value change in each iteration.

54
00:03:57.050 --> 00:03:59.330
The first one will be in row zero.

55
00:03:59.510 --> 00:04:02.690
The second will be in row one and so on.

56
00:04:03.500 --> 00:04:06.080
And which column will we place them in?

57
00:04:06.320 --> 00:04:09.840
Well, all the check buttons will be placed in column zero.

58
00:04:09.860 --> 00:04:11.330
That won't change.

59
00:04:12.140 --> 00:04:19.430
And in order to always place this text on the left side of the screen will put stick y equals w.

60
00:04:19.970 --> 00:04:23.210
Due to this, everything will be organized on that side.

61
00:04:24.260 --> 00:04:27.260
So we need to set up one more thing inside our loop.

62
00:04:27.710 --> 00:04:34.670
Let's call counter and make it increase one value so that it values change according to each iteration.

63
00:04:36.170 --> 00:04:38.750
Let's execute this to see it on the screen.

64
00:04:39.230 --> 00:04:41.630
Well, now our panel is visible.

65
00:04:42.830 --> 00:04:49.730
Food panel contains its food tag, and this is followed by all the plates and their checked buttons.

66
00:04:50.180 --> 00:04:57.830
So if we activate or dis activate any of them, their values in on value and off value will be zero

67
00:04:57.830 --> 00:04:58.520
or one.

68
00:04:58.730 --> 00:05:03.490
That value is not linked to anything so far, so nothing happens.

69
00:05:03.500 --> 00:05:08.480
We need to add such value zero or one to a variable that we can manipulate.

70
00:05:08.990 --> 00:05:15.050
Since we have to create one variable for each of those 24 elements, we're going to do that in dynamic

71
00:05:15.050 --> 00:05:15.560
way.

72
00:05:15.800 --> 00:05:21.920
Let's create a list named Food Variables, which will be equal to an empty list, and we'll create each

73
00:05:21.920 --> 00:05:23.870
of those elements inside our loop.

74
00:05:24.870 --> 00:05:32.430
So above our variable, we'll type create food items so as to explain what task this block of code performs

75
00:05:34.050 --> 00:05:35.190
inside our loop.

76
00:05:35.190 --> 00:05:42.120
The for creating the check buttons will call food variables and apply the append method to it so as

77
00:05:42.120 --> 00:05:44.430
to add one element in each iteration.

78
00:05:45.450 --> 00:05:46.800
That element will be empty.

79
00:05:46.800 --> 00:05:49.950
So we're going to put an empty string and that's it.

80
00:05:50.340 --> 00:05:55.380
Moreover, we'll make that element the one we added changed to an integer variable.

81
00:05:55.710 --> 00:05:58.890
In T.K. Enter, we can do so like this.

82
00:05:59.100 --> 00:06:04.890
We call the food variables element, which is in the counter index, which will initialize as zero and

83
00:06:04.890 --> 00:06:10.500
which will change according to each iteration and it will be equal to an int var.

84
00:06:11.700 --> 00:06:13.980
This stands for integer variable.

85
00:06:14.700 --> 00:06:20.370
It is a t k into class with which we can create these specific variables.

86
00:06:21.180 --> 00:06:27.330
Since an int var is going to be created in each loop, we'll make those variables contain the value

87
00:06:27.330 --> 00:06:30.600
of our check button, which can be zero or one.

88
00:06:31.740 --> 00:06:39.600
So inside check button we add another parameter which is variable, and this is equal to food variables

89
00:06:39.600 --> 00:06:41.880
along with its index counter.

90
00:06:41.880 --> 00:06:42.930
And that's it.

91
00:06:44.370 --> 00:06:49.980
So far, if we open our window, we won't see any changes affecting our program, although we don't

92
00:06:49.980 --> 00:06:50.490
see it.

93
00:06:50.490 --> 00:06:56.130
We already have variables in which we're going to store values that will allow us to make decisions.

94
00:06:56.610 --> 00:07:00.630
Now we only need to do the same with drink and dessert panels.

95
00:07:01.230 --> 00:07:05.340
Let's keep it simple and copy this block of code and paste it here.

96
00:07:05.880 --> 00:07:08.070
Just replace food with drink.

97
00:07:08.220 --> 00:07:10.500
So let's make several selections.

98
00:07:10.500 --> 00:07:18.000
Now let's position ourselves on the first f press alt and without releasing click at the beginning of

99
00:07:18.000 --> 00:07:22.320
each food and now we delete everything and type drink.

100
00:07:22.800 --> 00:07:25.680
All right, let's execute this.

101
00:07:25.680 --> 00:07:28.800
And now we have our two panels and their checkboxes.

102
00:07:29.490 --> 00:07:31.500
Let's do the same with dessert.

103
00:07:32.550 --> 00:07:38.520
We'll paste another block of code where we'll add the check buttons for dessert, we repeat the same

104
00:07:38.520 --> 00:07:41.610
process, delete and type dessert.

105
00:07:42.180 --> 00:07:45.360
We execute it and everything is in the right place.

106
00:07:45.840 --> 00:07:50.370
Notice that these three panels have been placed in the middle of left panel.

107
00:07:51.240 --> 00:07:55.860
When we set up the cost panel below, everything will be arranged properly.

108
00:07:56.250 --> 00:07:56.560
Okay.

109
00:07:56.610 --> 00:08:00.420
We succeeded in adding the check buttons for all of our products.

110
00:08:00.720 --> 00:08:04.050
Let's go to the next lesson and keep on moving forward.
