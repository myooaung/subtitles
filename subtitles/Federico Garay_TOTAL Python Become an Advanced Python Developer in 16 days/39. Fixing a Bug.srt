1
00:00:08,660 --> 00:00:13,430
Welcome to this extra lesson that we're going to do to correct a little bug that our program has.

2
00:00:14,290 --> 00:00:18,880
Maybe you've already played the game and you haven't found any problem, or maybe you've found it as

3
00:00:18,880 --> 00:00:19,510
I did.

4
00:00:19,670 --> 00:00:26,110
Jesuit David Bolivar, a very attentive student who said, Hey, fatty, here's a problem.

5
00:00:26,860 --> 00:00:29,710
So let's run our game to see what Jez will.

6
00:00:29,740 --> 00:00:32,320
I hope I'm pronouncing the name right has discovered.

7
00:00:33,670 --> 00:00:38,320
We notice that something strange happens if we choose more than once a correct letter.

8
00:00:38,740 --> 00:00:41,460
Look, let's try E, right?

9
00:00:41,620 --> 00:00:45,350
This word has an E in it, so let's keep entering E!

10
00:00:45,370 --> 00:00:46,450
One more time.

11
00:00:46,630 --> 00:00:47,980
One more time.

12
00:00:47,980 --> 00:00:49,060
One more time.

13
00:00:49,060 --> 00:00:54,160
And of course, it doesn't improve our performance because it keeps showing the same hits and it doesn't

14
00:00:54,160 --> 00:00:57,190
add anything and it doesn't subtract lives.

15
00:00:57,490 --> 00:01:02,770
But look what happens if I keep putting the E as many times as there are letters in our word.

16
00:01:02,890 --> 00:01:07,300
So it gets to a point where it tells me congratulations, but this is not correct.

17
00:01:07,300 --> 00:01:09,880
It is a bug because I did not find the word.

18
00:01:10,450 --> 00:01:15,640
So the explanation is that the match marker keeps increasing as I enter a letter that I've already found

19
00:01:15,640 --> 00:01:16,300
before.

20
00:01:17,170 --> 00:01:18,780
So how do we correct this?

21
00:01:18,790 --> 00:01:23,710
Well, luckily, Jessel not only spotted the problem, but he offered me a solution that I'm going to

22
00:01:23,710 --> 00:01:25,960
take because it's a very smart solution.

23
00:01:26,170 --> 00:01:31,840
He realized that within the check letter function, we check to see if chosen letter is in hidden word

24
00:01:31,840 --> 00:01:32,980
and nothing else.

25
00:01:32,980 --> 00:01:36,640
And this causes us to make decisions that caused this error to occur.

26
00:01:37,420 --> 00:01:43,720
What he proposes is that in addition to checking if two chosen letter is in hidden word, we also add

27
00:01:43,720 --> 00:01:46,510
one more condition that is to say and.

28
00:01:46,510 --> 00:01:52,300
And we check if chosen word is not in correct letters and this solves it.

29
00:01:52,450 --> 00:01:53,530
So why so?

30
00:01:53,890 --> 00:01:59,050
Because it will not only check that the letter is in hidden word, as we see here, but it will also

31
00:01:59,050 --> 00:02:02,770
check that it is not been previously added to the correct letters list.

32
00:02:02,770 --> 00:02:08,980
And so it would also not allow us to enter this block of code that would add chosen letter into correct

33
00:02:08,980 --> 00:02:11,800
letters and that would increase the number of matches.

34
00:02:12,670 --> 00:02:16,240
So this is the solution offered by well and it was totally correct.

35
00:02:16,510 --> 00:02:20,590
But let's add one more element, because this solution generates a new problem.

36
00:02:20,890 --> 00:02:26,440
In fact, it makes that when we put a letter that we already have, have we also lose a try?

37
00:02:26,440 --> 00:02:32,440
Because when not entering here it is going to enter this ls that deducts a try.

38
00:02:32,500 --> 00:02:40,360
Then after the if we're going to create an ELIF that checks both things, it will check if chosen letter

39
00:02:40,360 --> 00:02:45,070
is in hidden word and it will also check if chosen letter is incorrect letters.

40
00:02:46,060 --> 00:02:52,030
If it is found in both lists, it means that a letter that has already been found before is being repeated.

41
00:02:52,300 --> 00:02:57,610
And here, instead of subtracting tries or increasing matches, we will simply print a warning that

42
00:02:57,610 --> 00:03:03,400
tells the player, You have already found that letter, try with another one and with this we have solved

43
00:03:03,400 --> 00:03:03,790
it.

44
00:03:04,180 --> 00:03:09,220
So notice that if we now run our program and intentionally make the same mistake, let's try with the

45
00:03:09,220 --> 00:03:09,790
E.

46
00:03:09,880 --> 00:03:15,940
No matter how many times I put the E, I get the warning message, and even if I do it many times,

47
00:03:15,940 --> 00:03:18,580
it will never declare me the winner ahead of time.

48
00:03:19,180 --> 00:03:20,650
So thank you very much, Jess.

49
00:03:20,650 --> 00:03:23,710
Will students like you help the course progress?

50
00:03:23,710 --> 00:03:25,630
So see you in the next lesson.
