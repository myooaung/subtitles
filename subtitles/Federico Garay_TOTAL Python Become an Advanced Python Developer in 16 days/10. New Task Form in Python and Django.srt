1
00:00:07,910 --> 00:00:13,580
So this choice complements the previous one in which we had managed to create a link that takes us to

2
00:00:13,580 --> 00:00:20,360
this site for creating new tasks which has the title tasks form, but which does not yet have a form.

3
00:00:21,200 --> 00:00:23,300
That's what we're going to do in this lesson.

4
00:00:23,960 --> 00:00:31,430
We're going to go to task from HTML where we only have a header and we're going to add a tag to add

5
00:00:31,430 --> 00:00:32,150
a form.

6
00:00:32,450 --> 00:00:34,340
This tag is called form.

7
00:00:35,330 --> 00:00:38,960
We're going to set up the form here before we close the opening tag.

8
00:00:39,950 --> 00:00:44,840
We need to give it a parameter called method, which can have two different values.

9
00:00:45,260 --> 00:00:48,380
The one we're going to use now is the value post.

10
00:00:48,710 --> 00:00:52,580
The other value that we can go in method is get.

11
00:00:53,540 --> 00:00:59,270
We use that option when we want to create a form to obtain or retrieve information, for example, a

12
00:00:59,270 --> 00:01:01,220
form to query a database.

13
00:01:01,850 --> 00:01:07,250
But as in this case, we want to create a form to publish something, to deliver information, not to

14
00:01:07,250 --> 00:01:07,970
get it.

15
00:01:08,120 --> 00:01:10,730
And that's why in this case, we use the post.

16
00:01:11,330 --> 00:01:13,850
Another parameter we're going to need is action.

17
00:01:14,360 --> 00:01:18,710
And this is to determine to which URL we want to send this information.

18
00:01:19,520 --> 00:01:22,870
As in this case, it will be stored and published on this site.

19
00:01:22,880 --> 00:01:26,480
We don't need to put anything here and we can leave it empty.

20
00:01:27,680 --> 00:01:32,480
The first visual element we're going to add to our form is going to be the send button.

21
00:01:32,540 --> 00:01:39,170
We do this with an input tag just as we use input in Python to ask the user for information.

22
00:01:39,200 --> 00:01:44,420
Here we use input to create element labels where the user has to do something.

23
00:01:45,740 --> 00:01:51,620
The input in this case is going to have a type because there are different types of input tools.

24
00:01:52,460 --> 00:01:54,770
The one we want to use here is submit.

25
00:01:55,280 --> 00:01:58,730
We want an input of type submit.

26
00:01:59,480 --> 00:02:05,180
If I create a submit button, look, we're actually going to put it and we're going to put the text

27
00:02:05,180 --> 00:02:07,130
with a value equal to send.

28
00:02:08,300 --> 00:02:10,970
If I come to the form and I refresh it.

29
00:02:11,150 --> 00:02:12,740
Here's my submit button.

30
00:02:13,460 --> 00:02:15,770
See, it's in that default form.

31
00:02:17,390 --> 00:02:26,240
If I had put another type here instead of submit to, let's say, email, well, what would we see?

32
00:02:26,510 --> 00:02:29,090
We'd see a button that has a different shape.

33
00:02:29,120 --> 00:02:30,800
It's more elongated.

34
00:02:30,890 --> 00:02:33,020
It's for putting an email address.

35
00:02:33,320 --> 00:02:34,720
Well, that's not what we want.

36
00:02:34,730 --> 00:02:38,300
We want a submit so we can undo it and we put submit.

37
00:02:39,290 --> 00:02:41,750
So we've got a button as we want it.

38
00:02:41,750 --> 00:02:47,120
And then the site is ready with its button, but it doesn't have the form yet.

39
00:02:48,020 --> 00:02:49,910
That's what we're going to add up here.

40
00:02:50,360 --> 00:02:55,370
The form is actually already there because it's been created automatically and we just need to load

41
00:02:55,370 --> 00:02:57,560
it into our HTML here.

42
00:02:57,560 --> 00:02:59,030
We have to put the fields.

43
00:02:59,150 --> 00:03:04,760
It's as simple as adding an element with the double square brackets that says form inside.

44
00:03:04,940 --> 00:03:07,160
With this, we should now have the form.

45
00:03:07,280 --> 00:03:13,340
If I refresh it, we see this, which is not at all attractive, of course, but the form is there.

46
00:03:14,090 --> 00:03:15,710
So how do we rearrange it?

47
00:03:16,160 --> 00:03:18,530
We have three ways to display the form.

48
00:03:18,590 --> 00:03:24,970
If we put form dot as table, it's displayed as a table and that is what we're looking at now.

49
00:03:24,980 --> 00:03:28,250
This is the default, but it's not the one we like the most.

50
00:03:29,300 --> 00:03:35,240
We can show it as UL, and if we see it like that, we're going to see some kind of list.

51
00:03:35,270 --> 00:03:37,340
UL is user list.

52
00:03:38,150 --> 00:03:46,880
So here you have these dots before each field, but the one I want to choose is as P for paragraph because

53
00:03:46,880 --> 00:03:49,970
if we've refresh now, it looks a little bit better.

54
00:03:50,840 --> 00:03:52,730
Of course it's still like style.

55
00:03:52,940 --> 00:03:55,700
Don't worry, we're just working on the hard code.

56
00:03:56,240 --> 00:04:00,470
The visual style, colours, shapes are all a matter for the end.

57
00:04:00,470 --> 00:04:02,210
I always insist on that.

58
00:04:02,220 --> 00:04:05,150
And now let's create a task to see how this works.

59
00:04:05,720 --> 00:04:07,910
The user is going to be wind ten.

60
00:04:08,180 --> 00:04:11,000
The title can be made up task.

61
00:04:11,780 --> 00:04:15,950
Here we put any description and send it and we get an error.

62
00:04:16,910 --> 00:04:17,720
It tells me.

63
00:04:17,750 --> 00:04:20,540
See SRF verification failed.

64
00:04:21,080 --> 00:04:22,280
What does this mean?

65
00:04:22,730 --> 00:04:26,060
Well, let's solve it first and then I'll explain it to you.

66
00:04:26,180 --> 00:04:32,330
So we're going to add here, first of all, a square bracket and the percent signs to put inside the

67
00:04:32,330 --> 00:04:35,540
expression CSF token.

68
00:04:36,440 --> 00:04:37,520
And what is this?

69
00:04:37,790 --> 00:04:45,560
CSF tokens prevent a common security hole in web applications known as cross-site request forgery.

70
00:04:46,010 --> 00:04:52,040
Basically, what they are preventing here is a security attack that allows a malicious person to modify

71
00:04:52,040 --> 00:04:55,220
the state of the server by impersonating a user.

72
00:04:55,490 --> 00:05:00,740
If we did not put this, the website would trust that user, but the request would not.

73
00:05:00,810 --> 00:05:03,420
Be real and will be spoofed by the attacker.

74
00:05:03,750 --> 00:05:09,420
As the website trusts the user, by default, it performs the requested operations and processes them

75
00:05:09,420 --> 00:05:11,040
as if it were a real user.

76
00:05:11,690 --> 00:05:16,880
This CSF token prevents it and is necessary to put it.

77
00:05:17,240 --> 00:05:19,970
Otherwise it will not allow us to move forward.

78
00:05:20,960 --> 00:05:24,230
So let's go back to our site and let's create a new task.

79
00:05:24,710 --> 00:05:27,470
Let's put made up task again.

80
00:05:27,950 --> 00:05:33,260
Put anything inside, say it's completed, send it and we get an error.

81
00:05:34,310 --> 00:05:35,750
Okay, let's look at this.

82
00:05:35,930 --> 00:05:39,560
It says no reverse match at create task.

83
00:05:40,300 --> 00:05:40,700
Okay.

84
00:05:40,700 --> 00:05:44,760
So this message tells us that it hasn't found the site we want to send the user to.

85
00:05:44,780 --> 00:05:46,610
After creating the new task.

86
00:05:47,390 --> 00:05:52,010
So we should go back to tasks, but it's not finding any site called tasks.

87
00:05:52,820 --> 00:05:57,320
I honestly don't understand why, as the original site should be called tasks.

88
00:05:57,710 --> 00:06:01,640
So if we go to views, we see that we've spelt it right.

89
00:06:01,670 --> 00:06:05,270
Reverse lazy is pointing to tasks as it should be.

90
00:06:05,900 --> 00:06:08,120
And let's see if the URL is correct.

91
00:06:08,510 --> 00:06:10,190
No, it's not right.

92
00:06:10,220 --> 00:06:14,810
The name we've given to this URL is pending and it should be tasks.

93
00:06:14,900 --> 00:06:16,460
That's the explanation.

94
00:06:17,480 --> 00:06:21,800
So I've been assuming the home was called tasks, but it was called pending.

95
00:06:21,950 --> 00:06:23,030
Sorry about that.

96
00:06:23,480 --> 00:06:27,020
I could have edited this so that in the video you don't see my mistakes.

97
00:06:27,110 --> 00:06:32,030
But I think it's important that you also see the reasoning we use when we get an error so that we can

98
00:06:32,030 --> 00:06:33,260
get to the cause of it.

99
00:06:34,100 --> 00:06:38,090
In fact, I think it's best to leave tasks as the name of the home.

100
00:06:38,870 --> 00:06:43,580
So we come back here and note that although we have received an error, this happened when the site

101
00:06:43,580 --> 00:06:47,880
wanted to redirect us to the home after having created the new task.

102
00:06:47,900 --> 00:06:51,290
This means that the task was actually created successfully.

103
00:06:51,680 --> 00:06:53,960
It was the following process that failed.

104
00:06:54,110 --> 00:06:58,070
So if we come back here, made up task already exists.

105
00:06:58,250 --> 00:07:00,010
So that part works fine.

106
00:07:00,020 --> 00:07:03,510
Now let's check if we've solved the sending us to the home.

107
00:07:03,530 --> 00:07:05,280
So let's create another task.

108
00:07:05,300 --> 00:07:08,900
Let's put another task and let's put anything here.

109
00:07:08,930 --> 00:07:09,920
Let's send.

110
00:07:09,920 --> 00:07:10,460
And now?

111
00:07:10,460 --> 00:07:10,850
Yes.

112
00:07:10,850 --> 00:07:14,510
After creating the task, it sends us back to the pending list.

113
00:07:15,080 --> 00:07:18,950
It already has the original tasks, plus the ones we've just created.

114
00:07:20,150 --> 00:07:25,460
Well, so that you don't get confused about what we did in this lesson, let's briefly review what we

115
00:07:25,460 --> 00:07:26,060
have done.

116
00:07:27,020 --> 00:07:32,930
First, we generated a form in which, although we didn't load any fields, these fields were automatically

117
00:07:32,930 --> 00:07:33,680
assigned.

118
00:07:33,920 --> 00:07:34,640
Why?

119
00:07:35,330 --> 00:07:36,800
Because inside views.

120
00:07:36,800 --> 00:07:44,060
We have created a class which inherits from Create View, which provides us with a type of view that

121
00:07:44,060 --> 00:07:46,940
allows us to create elements to this class.

122
00:07:46,940 --> 00:07:54,170
We've given a model which is task, and then we have asked it that the fields of this create view are

123
00:07:54,170 --> 00:07:56,690
all those that exist within the task model.

124
00:07:57,140 --> 00:08:02,630
And we have also told it that when it finishes creating a task, it should send us back to tasks.

125
00:08:03,710 --> 00:08:10,790
So here it is important to note that the fields all attribute is the one that made our form know which

126
00:08:10,790 --> 00:08:11,900
fields to show.

127
00:08:12,800 --> 00:08:14,780
So that's what we've done so far.

128
00:08:15,540 --> 00:08:20,830
But we're going to do in the next lesson is add the ability for the user to modify tasks that have already

129
00:08:20,830 --> 00:08:27,730
been created because people sometimes make mistakes or change their minds and they want to modify what

130
00:08:27,730 --> 00:08:28,630
they've created.

131
00:08:29,320 --> 00:08:33,460
So we're going to make it possible for our user to do that in the next lesson.
