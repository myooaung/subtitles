WEBVTT
1
00:00:08.040 --> 00:00:13.230
The first step to build any facial recognition application is to have the images we're going to work

2
00:00:13.230 --> 00:00:16.620
with and to be able to load them and then process them.

3
00:00:17.680 --> 00:00:22.600
In this case, I'm going to work with three pictures that you can find in the resources of this lesson

4
00:00:22.870 --> 00:00:24.100
and that I have here.

5
00:00:25.060 --> 00:00:27.430
Picture A is a picture of me.

6
00:00:28.090 --> 00:00:33.970
Picture B is another picture of me, but in a completely different position with another angle and another

7
00:00:33.970 --> 00:00:34.540
light.

8
00:00:34.750 --> 00:00:40.510
And this is intentional so that I can make a comparison and see if the system recognizes that I am the

9
00:00:40.510 --> 00:00:41.410
same person.

10
00:00:41.800 --> 00:00:45.760
And a third photo picture C that belongs to Brad Pitt.

11
00:00:45.760 --> 00:00:46.330
With who?

12
00:00:46.330 --> 00:00:48.700
I'm not very similar, let's face it.

13
00:00:49.210 --> 00:00:55.570
So I'm going to use this picture to see if the system is able to recognize when it's not the same person.

14
00:00:56.200 --> 00:01:00.790
So I hope I'm different enough from Brad Pitt so that the system doesn't get confused.

15
00:01:01.240 --> 00:01:05.650
We're going to close the pictures and we're going to go back to our code and we're going to make an

16
00:01:05.650 --> 00:01:11.560
explanation saying that here we're going to load images here.

17
00:01:11.560 --> 00:01:17.260
We're going to set the variable that we call controlled picture to have a picture that's going to be

18
00:01:17.260 --> 00:01:18.940
the one that's the base picture.

19
00:01:19.450 --> 00:01:24.490
The system is going to know who this picture belongs to and then compare it with another one.

20
00:01:25.570 --> 00:01:29.080
The variable is going to be equal to face recognition.

21
00:01:29.080 --> 00:01:35.590
That would be f r since that's why we put this nickname and we're going to call the method load image

22
00:01:35.590 --> 00:01:42.430
file and in brackets it asks us to put the name of the file that we're going to load and the location

23
00:01:42.910 --> 00:01:44.440
as I have it in the same folder.

24
00:01:44.440 --> 00:01:50.020
I don't need to put any path, just the name, which is picture a jpg.

25
00:01:51.790 --> 00:01:56.560
If you want to use the same pictures as me, you can then download them from the resources in this lesson

26
00:01:56.800 --> 00:01:58.690
and you should use the same file name.

27
00:01:59.500 --> 00:02:04.870
And if you want to try with your own photos or photos of family members and have some fun, remember

28
00:02:04.870 --> 00:02:07.780
to put the name that corresponds to the photo here.

29
00:02:09.190 --> 00:02:14.720
Then we're going to load another picture which is going to be picture B, which I'm going to use as

30
00:02:14.720 --> 00:02:22.480
a test picture, and it's going to be equal to f r dot load image file and it's going to contain picture

31
00:02:22.510 --> 00:02:23.020
b.

32
00:02:23.140 --> 00:02:33.490
JPG Now I need to make a change on both images, which is to establish how they will do color processing.

33
00:02:33.730 --> 00:02:39.940
Face recognition only understands images that have an AGB format, which is a way of structuring the

34
00:02:39.940 --> 00:02:41.140
color of the image.

35
00:02:41.620 --> 00:02:46.240
Therefore, we're going to make sure that our pictures are in the IGB format.

36
00:02:47.230 --> 00:02:53.680
For that we're going to call control picture, but now we're going to say that it is equal to cv2,

37
00:02:53.920 --> 00:03:01.330
which we have already imported with the method CVT color, which is the one that allows us to transform

38
00:03:01.330 --> 00:03:02.500
its color structure.

39
00:03:03.460 --> 00:03:10.150
So it asks us for two parameters first source, which would be the picture to modify, which is going

40
00:03:10.150 --> 00:03:11.950
to be control picture.

41
00:03:12.790 --> 00:03:20.050
And then we have to set the color code, which in this case is going to be CV two dot color underscore

42
00:03:20.080 --> 00:03:29.800
b, gr2, r, g b these letters may seem a little confusing, but they basically say that we switch

43
00:03:29.980 --> 00:03:36.100
from the BGR system to the GB system and that's what we're doing.

44
00:03:37.030 --> 00:03:43.570
We're going to copy the same thing to apply it to a test picture and we're going to change test picture

45
00:03:43.570 --> 00:03:45.820
here and here.

46
00:03:45.820 --> 00:03:52.630
We have already transformed the two pictures, so let's clear it up by putting transform images into

47
00:03:52.630 --> 00:03:53.530
our g b.

48
00:03:54.400 --> 00:03:56.680
Now we have the images as we need them.

49
00:03:57.900 --> 00:04:00.840
So here, let's do something to show images.

50
00:04:01.380 --> 00:04:03.360
While this is not necessary for the code.

51
00:04:03.390 --> 00:04:08.580
Let's learn how to use CV to to display our images once we run the code.

52
00:04:08.880 --> 00:04:11.430
It is with CV two with the method.

53
00:04:11.880 --> 00:04:14.790
I am show for image show.

54
00:04:14.970 --> 00:04:17.220
And now it asks for two parameters.

55
00:04:17.340 --> 00:04:23.880
One is the name we're going to give to the image to be displayed, i.e. to be shown as the title of

56
00:04:23.880 --> 00:04:24.480
the image.

57
00:04:24.960 --> 00:04:31.530
So let's say it's going to show the title My Control Picture, and then it needs to know which picture

58
00:04:31.530 --> 00:04:33.330
is the one we're going to show.

59
00:04:33.780 --> 00:04:36.420
Of course it is control picture.

60
00:04:37.890 --> 00:04:45.630
So we do the same with CV two for I am show to show the second picture, which we're going to title

61
00:04:45.630 --> 00:04:51.000
my test picture and which is going to show logically the test image picture.

62
00:04:52.350 --> 00:04:57.630
So as these images would disappear immediately after being shown, because the code ends right there

63
00:04:57.630 --> 00:05:02.100
and the execution of the program is finished and everything that is open will be closed.

64
00:05:02.280 --> 00:05:07.050
So we're going to leave a line of code to keep the program working.

65
00:05:07.920 --> 00:05:14.190
And we're going to do this with a tool of CV two called Weight Key, which is a method that leaves the

66
00:05:14.190 --> 00:05:16.680
program waiting until a key is pressed.

67
00:05:17.550 --> 00:05:21.390
We put a zero as parameter and we can execute it.

68
00:05:21.960 --> 00:05:23.670
So run, run.

69
00:05:23.670 --> 00:05:29.220
And we choose facial recognition moment, which is the name of my file.

70
00:05:29.970 --> 00:05:31.440
It takes a few seconds.

71
00:05:31.710 --> 00:05:37.350
And here the two images I asked for are opened control picture and test picture.

72
00:05:37.950 --> 00:05:40.050
You can see the names in the headers.

73
00:05:41.130 --> 00:05:42.840
So this is step one.

74
00:05:42.840 --> 00:05:47.040
Load the pictures and we're going to do step two in the next lesson.
