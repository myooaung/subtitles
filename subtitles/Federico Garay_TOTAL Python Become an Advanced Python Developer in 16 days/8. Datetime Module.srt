1
00:00:08,040 --> 00:00:12,180
The daytime module is built into Python and we can import it.

2
00:00:12,240 --> 00:00:17,820
Well, you already know how daytime allows us to manipulate time.

3
00:00:18,060 --> 00:00:18,990
Don't get excited.

4
00:00:19,020 --> 00:00:25,560
It's not like you imagine, but you will be able to store data about date and time and variables and

5
00:00:25,560 --> 00:00:29,870
do calculations between time periods and display them in different ways.

6
00:00:29,880 --> 00:00:35,910
It is a module that all programmers should have in their toolbox, so lets get to know it in Pi Charm.

7
00:00:36,480 --> 00:00:42,090
In order to start working with date and time, we need to import this module name date time.

8
00:00:42,660 --> 00:00:43,680
Here we have it.

9
00:00:44,070 --> 00:00:48,030
Let's create a variable named my time which will store a time value.

10
00:00:48,810 --> 00:00:51,210
My time will be a date time object.

11
00:00:51,900 --> 00:00:54,240
Add a dot and you'll see several options.

12
00:00:55,350 --> 00:01:01,110
We can choose date time in order to have both values, or we can choose either date or time in order

13
00:01:01,110 --> 00:01:02,760
to have the corresponding value.

14
00:01:03,240 --> 00:01:06,780
We'll choose time and pass the arguments it requires.

15
00:01:07,260 --> 00:01:11,610
To begin with, we have to input an integer that represents our an hour.

16
00:01:11,970 --> 00:01:14,370
We should use the 24 hour clock for this.

17
00:01:14,370 --> 00:01:17,070
So let's enter 17 comma.

18
00:01:17,070 --> 00:01:21,900
And the next thing we have to do is input an integer that represents the minutes.

19
00:01:22,080 --> 00:01:23,820
So let's type 35.

20
00:01:24,300 --> 00:01:30,450
We could also add seconds, microseconds and the time zone, but if we only complete up to a certain

21
00:01:30,450 --> 00:01:33,600
argument, the rest will be automatically assigned values of zero.

22
00:01:33,780 --> 00:01:37,590
So now we're going to print the type of data we're working with in my time.

23
00:01:38,700 --> 00:01:39,750
Let's execute it.

24
00:01:39,750 --> 00:01:44,330
And the software tells us that we have an object of the class datetime time.

25
00:01:44,520 --> 00:01:45,330
Perfect.

26
00:01:45,630 --> 00:01:51,270
However, I also want what value my time contains if I execute it.

27
00:01:51,270 --> 00:01:59,220
The software returns 17 colon, 35 colon and 0 seconds, and it doesn't return microseconds because

28
00:01:59,220 --> 00:02:00,570
I didn't enter a value.

29
00:02:00,840 --> 00:02:04,080
So this is how the time looks when I print it.

30
00:02:04,500 --> 00:02:06,600
I can also print more specific elements.

31
00:02:06,720 --> 00:02:11,100
So if I type my time and a dot, I can choose hours or minutes.

32
00:02:11,100 --> 00:02:15,570
And if I choose to see the minutes, the software will return 35 minutes.

33
00:02:16,320 --> 00:02:19,500
If I had chosen hour, it would have returned 17.

34
00:02:20,220 --> 00:02:24,450
That's the way we can print specific elements in order to manipulate them if we need to.

35
00:02:25,020 --> 00:02:26,790
So we can keep on adding information.

36
00:02:26,790 --> 00:02:35,520
And if we type 50 seconds here and 1500 microseconds here and we print my time, the software will return

37
00:02:35,520 --> 00:02:37,080
all the information we entered.

38
00:02:38,260 --> 00:02:45,760
Moreover, we can use dates, so we'll create a date time which will return a date and let's change

39
00:02:45,760 --> 00:02:48,550
its name to my day date.

40
00:02:48,550 --> 00:02:52,120
Time date requires year, month and day.

41
00:02:52,390 --> 00:02:57,340
So let's type 20, 25, ten and 17.

42
00:02:57,670 --> 00:03:01,300
This would be October the 17th, 2025.

43
00:03:01,510 --> 00:03:05,290
If we print my day, we'll see the next format.

44
00:03:05,320 --> 00:03:06,640
2025.

45
00:03:06,640 --> 00:03:09,220
Hyphen ten, hyphen 17.

46
00:03:09,910 --> 00:03:11,560
Always in descending order.

47
00:03:11,560 --> 00:03:12,640
Year month.

48
00:03:12,640 --> 00:03:13,240
Date.

49
00:03:13,750 --> 00:03:17,200
This date object only contains dates, not time.

50
00:03:17,680 --> 00:03:19,810
We can also print specific elements.

51
00:03:20,780 --> 00:03:25,790
We just want to see the year we execute it in order to see 2025.

52
00:03:26,750 --> 00:03:30,010
We can show this information using a different format as well.

53
00:03:30,020 --> 00:03:36,240
If we choose see time, the software will show a different time format which shows day.

54
00:03:36,260 --> 00:03:43,580
Friday, October the 17th time, which is empty because it's a date object, not a date time object.

55
00:03:43,580 --> 00:03:45,020
And finally year.

56
00:03:46,140 --> 00:03:47,910
So there's something else I want to show you.

57
00:03:48,120 --> 00:03:51,030
My day is a type of date object.

58
00:03:51,270 --> 00:03:57,900
So if I want to see today instead of the information it contains, the software will turn this the exact

59
00:03:57,900 --> 00:03:59,400
date I'm recording this.

60
00:03:59,550 --> 00:04:03,150
When you execute it, you'll see a different date, obviously.

61
00:04:03,480 --> 00:04:11,340
So keep in mind that today contains information that is independent of that contained in my day today

62
00:04:11,340 --> 00:04:17,640
only requires that my day or the variable you have be a type of date or date time object.

63
00:04:18,060 --> 00:04:19,140
So let's go on.

64
00:04:19,770 --> 00:04:22,440
Now I want to combine date and time.

65
00:04:22,800 --> 00:04:27,060
So I import from date time, import date time.

66
00:04:28,350 --> 00:04:32,210
So this may sound strange and redundant, but this is a way to execute this.

67
00:04:32,220 --> 00:04:36,550
It is an object contained inside date time and it has the same name.

68
00:04:36,570 --> 00:04:40,920
So we'll use my date once again and it will be equal to date time.

69
00:04:41,400 --> 00:04:44,490
We don't have to specify if the date or time.

70
00:04:44,700 --> 00:04:47,070
And we can pass all the information here.

71
00:04:47,340 --> 00:05:01,020
Year 2025, month five, day 15, then our 22 minutes, 10 seconds, 15 and microseconds 2500.

72
00:05:01,860 --> 00:05:05,580
Let's print my date in order to see how it looks on the screen.

73
00:05:05,880 --> 00:05:10,050
And voila, here we have the complete information we needed.

74
00:05:10,530 --> 00:05:11,910
Date and time.

75
00:05:12,810 --> 00:05:16,140
If I wanted to change something, I could retype my date.

76
00:05:17,120 --> 00:05:21,110
And make it be equal to my date using the replace method.

77
00:05:22,620 --> 00:05:24,420
We don't need to retype anything.

78
00:05:24,420 --> 00:05:27,150
We'll just specify which element we want to change.

79
00:05:27,150 --> 00:05:30,120
Suppose that we change our mind and don't want to be made.

80
00:05:30,240 --> 00:05:35,190
We want to make month B equal to another specific month, say November.

81
00:05:36,090 --> 00:05:40,500
Then we can print my date, which was modified with replace.

82
00:05:40,920 --> 00:05:45,070
The software will return 2025 November 15.

83
00:05:45,090 --> 00:05:46,740
The rest remains the same.

84
00:05:46,950 --> 00:05:53,670
So besides showing date and time information, we can also calculate the time elapsed between two moments,

85
00:05:53,670 --> 00:05:55,380
whether they are dates or hours.

86
00:05:55,710 --> 00:06:02,640
To do so will input date and as an example, will enter a person's time of birth and death so as to

87
00:06:02,640 --> 00:06:04,350
calculate how much time they lived.

88
00:06:04,650 --> 00:06:09,930
Birth will be equal to date, which can be 1995, March and Day five.

89
00:06:10,740 --> 00:06:15,180
So let's also add death, which will be equal to another type of date object.

90
00:06:15,780 --> 00:06:19,230
This person will have lived for a long time, say 100 years.

91
00:06:19,890 --> 00:06:26,970
Now let's enter 2095 and say they died in the sixth month on the 19th.

92
00:06:27,510 --> 00:06:28,140
All right.

93
00:06:28,140 --> 00:06:32,640
Now we can calculate the difference by creating a new variable named life.

94
00:06:33,450 --> 00:06:35,490
That's a nice name for a variable.

95
00:06:35,520 --> 00:06:41,190
We'll make that variable be equal to the time elapsed by subtracting death minus birth.

96
00:06:41,670 --> 00:06:44,010
This will tell us how long this person lived.

97
00:06:45,210 --> 00:06:52,350
Let's print life and it will tell us that the person lived for 36,631 days.

98
00:06:52,590 --> 00:06:57,120
We didn't pass a parameter to time, so it has a variable of zero.

99
00:06:58,110 --> 00:07:01,520
And if we want to see the days, we can enter dot days.

100
00:07:01,530 --> 00:07:03,150
And that's what we will see.

101
00:07:04,200 --> 00:07:08,820
And if we want to calculate the hours, we won't be able to do it without providing the software with

102
00:07:08,820 --> 00:07:10,410
information about days.

103
00:07:10,890 --> 00:07:14,280
Time requires a date in order to calculate hours accurately.

104
00:07:14,550 --> 00:07:21,960
So we'll import date time once again, and now we'll calculate how long a person has been awoken since

105
00:07:21,960 --> 00:07:23,880
they woke up until they went to bed.

106
00:07:24,060 --> 00:07:31,260
We'll create a variable named woke up and then we'll use a date time object to state the following in

107
00:07:31,260 --> 00:07:32,730
2022.

108
00:07:32,850 --> 00:07:38,730
In the 10th month, on the fifth day, this person woke up at 7 hours, 30 minutes.

109
00:07:39,420 --> 00:07:44,220
Now let's create a variable named went to sleep and we'll use a datetime object as well.

110
00:07:44,910 --> 00:07:47,010
This person went to sleep the same year.

111
00:07:47,010 --> 00:07:47,970
On the same day.

112
00:07:47,970 --> 00:07:53,490
That is October day five, and they went to sleep at 2345.

113
00:07:54,130 --> 00:08:00,720
Okay, now we can create a variable named wakefulness, which will be the result of went to sleep minus

114
00:08:00,720 --> 00:08:01,500
woke up.

115
00:08:03,180 --> 00:08:09,210
If we print wakefulness, we find out that our friend stayed awake for 16 hours and 15 minutes on this

116
00:08:09,210 --> 00:08:09,690
day.

117
00:08:10,050 --> 00:08:11,910
I can calculate seconds too.

118
00:08:12,090 --> 00:08:14,190
I just have to apply seconds here.

119
00:08:14,370 --> 00:08:17,940
And this person stayed awake for 58000 seconds.

120
00:08:18,420 --> 00:08:19,260
Interesting.

121
00:08:19,380 --> 00:08:23,940
That's the approximate amount of time we stay awake every day, which isn't little.

122
00:08:24,060 --> 00:08:30,780
During those 58000 seconds, we get to live, love, cry, conquer, learn, and more.

123
00:08:30,960 --> 00:08:34,110
And on top of it, each second is an opportunity.

124
00:08:34,140 --> 00:08:39,630
This is the amount of time we have each day to seize new opportunities, just like you're doing right

125
00:08:39,630 --> 00:08:40,170
now.

126
00:08:40,290 --> 00:08:45,000
Your studying and learning in order to be a better person full of new chances.

127
00:08:45,390 --> 00:08:46,680
Congratulations on that.

128
00:08:47,160 --> 00:08:48,600
And see you in the next lecture.
