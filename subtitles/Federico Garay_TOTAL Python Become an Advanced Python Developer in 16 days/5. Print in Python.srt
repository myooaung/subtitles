1
00:00:07,950 --> 00:00:14,430
Finally, it's time to start writing, and we're going to start by learning how to use print one of

2
00:00:14,430 --> 00:00:17,670
the most basic and common statements in Python.

3
00:00:18,390 --> 00:00:23,970
When we say print in Python, we don't mean print like on paper using a printer.

4
00:00:24,300 --> 00:00:26,340
We mean print on the screen.

5
00:00:26,880 --> 00:00:32,050
So print actually means to show to display on the screen.

6
00:00:32,790 --> 00:00:37,500
And as I told you before, Python is a very simple language to understand.

7
00:00:37,860 --> 00:00:45,960
So if we want Python to display or print on a screen a sentence like Hello World, for example, we

8
00:00:45,960 --> 00:00:48,330
just say print Hello World.

9
00:00:49,110 --> 00:00:52,800
As you can see, the print structure is very simple.

10
00:00:53,160 --> 00:00:54,690
The key word, print.

11
00:00:55,050 --> 00:00:58,920
And then we put in parentheses whatever we want to print.

12
00:00:59,700 --> 00:01:06,420
If it is text, it will go between quotation marks and there can be double or single quotation marks.

13
00:01:06,690 --> 00:01:12,780
It doesn't matter if they are numbers or other functions, and we do it without quotation marks.

14
00:01:13,140 --> 00:01:16,500
But don't worry about that because we are going to deal with this later.

15
00:01:17,160 --> 00:01:23,460
For now, let's go to pie chart with Federico so that we can learn together how to use the word print

16
00:01:23,700 --> 00:01:25,500
to write your first text.

17
00:01:26,940 --> 00:01:29,580
And so it's time to write our first line of code.

18
00:01:30,060 --> 00:01:31,190
We are empire charm.

19
00:01:31,200 --> 00:01:32,770
We have a space here to write.

20
00:01:33,280 --> 00:01:39,000
We're going to enlarge it by clicking here in project so that this column folds out and we can see more

21
00:01:39,000 --> 00:01:39,540
clearly.

22
00:01:39,720 --> 00:01:41,040
Space to write code.

23
00:01:41,130 --> 00:01:47,340
We're going to begin to use the statement print so we write it directly after typing print.

24
00:01:47,760 --> 00:01:54,300
Here you can see that we get a help that tells us that print is followed by the bracket signs and inside

25
00:01:54,300 --> 00:01:55,410
we can put values.

26
00:01:55,890 --> 00:01:57,570
These helpers are very useful.

27
00:01:57,690 --> 00:01:59,610
It shows them for pi charm all the time.

28
00:02:00,210 --> 00:02:04,860
If you come to the points and click, you will see that you can sort by name.

29
00:02:05,160 --> 00:02:11,100
But the most important thing is that you have a quick documentation or a quick definition, and these

30
00:02:11,100 --> 00:02:16,020
are very useful when you're working with code that is starting to get a little bit complicated.

31
00:02:16,590 --> 00:02:18,510
But for now, let's stick with print.

32
00:02:19,750 --> 00:02:21,250
We're going to open the brackets.

33
00:02:21,430 --> 00:02:24,160
And we said that we're going to write the text.

34
00:02:24,280 --> 00:02:27,820
We're going to write with quotation marks, whatever is inside.

35
00:02:28,270 --> 00:02:31,870
And what we are going to put here is the expression Hello world.

36
00:02:33,440 --> 00:02:39,230
With this, it would be enough so that when we execute it, we can see that Hello World is printed on

37
00:02:39,230 --> 00:02:39,770
the screen.

38
00:02:40,130 --> 00:02:42,140
But first I want you to notice the colors.

39
00:02:42,350 --> 00:02:46,670
As you can see, print is written in blue because it is a key word.

40
00:02:47,000 --> 00:02:49,220
Then the brackets appear in a different color.

41
00:02:49,280 --> 00:02:54,170
So you can easily identify when the content of print begins and ends.

42
00:02:54,770 --> 00:02:58,310
And the content, the text we have entered is in green.

43
00:02:58,790 --> 00:03:05,220
Then what follows is to run this program to see what appears in console, to run it.

44
00:03:05,240 --> 00:03:07,040
We're going to come here to run.

45
00:03:08,070 --> 00:03:11,850
And it gives us a choice whether which file we want to run.

46
00:03:12,360 --> 00:03:17,070
Main was the file that appeared at the beginning, which is generated automatically.

47
00:03:17,340 --> 00:03:18,780
It is not the one we want to run.

48
00:03:19,440 --> 00:03:21,690
The one we want to run is first project.

49
00:03:21,810 --> 00:03:26,340
So once we choose it, the console appears here and it shows us the path of this file.

50
00:03:27,000 --> 00:03:31,050
Then the result of the execution of our program that shows us Hello World.

51
00:03:32,010 --> 00:03:38,820
And here it simply says the IS has finished executing the code so as already exited the execution is

52
00:03:38,820 --> 00:03:39,630
very simple.

53
00:03:39,660 --> 00:03:41,220
It only has one command.

54
00:03:41,370 --> 00:03:42,960
It says Hello world.

55
00:03:44,070 --> 00:03:49,470
So I want you to notice what happens if I change something was with respect to the quotation marks.

56
00:03:49,980 --> 00:03:52,320
Let's say I remove the last quotation mark.

57
00:03:52,860 --> 00:03:57,540
In that case, you can see now that everything is green and it marks a serious error.

58
00:03:57,840 --> 00:04:04,050
This time it is in red because not having told Python when the text ended, I thought that the brackets

59
00:04:04,320 --> 00:04:06,480
were part of the text and included it.

60
00:04:06,510 --> 00:04:08,250
So there it is, marking in error.

61
00:04:08,910 --> 00:04:13,590
It is normal that this can happen frequently or that you forget the brackets, for example.

62
00:04:13,620 --> 00:04:18,390
It will also warn you and that you would be the most common of errors for this type of text.

63
00:04:19,410 --> 00:04:25,020
In fact, if we want to execute it without the quotation marks, let's suppose that we have not seen

64
00:04:25,020 --> 00:04:28,320
the error that announces it and we go to execute.

65
00:04:28,530 --> 00:04:33,600
This time we can do it from here because first project has already been loaded and we can click here

66
00:04:33,600 --> 00:04:34,230
on Run.

67
00:04:34,830 --> 00:04:36,900
Well, the result now is no longer.

68
00:04:36,900 --> 00:04:39,540
Hello world is a syntax error.

69
00:04:39,810 --> 00:04:42,360
This is how you are going to read the errors when they appear.

70
00:04:42,570 --> 00:04:44,730
You're going to see what kind of error you have.

71
00:04:45,210 --> 00:04:51,810
And we can actually see in the example of a text that is marking is here that this error where the error

72
00:04:51,810 --> 00:04:52,920
is apparently located.

73
00:04:53,100 --> 00:04:56,820
So part time is quite clever helping us solve our code problems.

74
00:04:57,570 --> 00:05:00,870
So we return the quotes and now a code is back to normal.

75
00:05:01,500 --> 00:05:07,170
Note that in print you can write whatever you want and some considerations if you wanted to write something

76
00:05:07,170 --> 00:05:07,770
with quotes.

77
00:05:07,770 --> 00:05:10,500
For example Hello world I say hello.

78
00:05:11,990 --> 00:05:14,780
And I want to put it like that with quotes.

79
00:05:15,380 --> 00:05:20,690
Well, what problem I'm going to have here that when I want a quotation mark to appear in my text,

80
00:05:20,870 --> 00:05:25,310
unfortunately, Python is going to misinterpret these quotation marks and it's going to think that I'm

81
00:05:25,310 --> 00:05:28,520
ending the text here and I start again here.

82
00:05:28,520 --> 00:05:31,220
And this hello doesn't understand it.

83
00:05:31,400 --> 00:05:32,600
It marks it as an error.

84
00:05:32,840 --> 00:05:34,700
It's not a word that Python understands.

85
00:05:34,910 --> 00:05:41,120
So when you want to put quotation marks inside your text, we can use single quotation marks and Python

86
00:05:41,120 --> 00:05:47,750
will differentiate from the double quotation marks and understand that they are simply part of the text.

87
00:05:48,500 --> 00:05:54,350
You can also do the other way around, put single quotes outside and double quotes inside.

88
00:05:55,630 --> 00:05:58,570
For text interpretation purposes, it is the same thing.

89
00:05:58,900 --> 00:06:02,110
So if I run this now, you'll see that it says Hello world.

90
00:06:02,140 --> 00:06:03,370
I say hello.

91
00:06:04,090 --> 00:06:04,540
Print.

92
00:06:04,540 --> 00:06:08,680
As I explained in print, not only text but also numbers.

93
00:06:09,130 --> 00:06:11,230
And here I can put 100 if I run it.

94
00:06:12,680 --> 00:06:15,080
What will come out here is the number 100.

95
00:06:15,980 --> 00:06:17,990
And the numbers do not need quotation marks.

96
00:06:18,740 --> 00:06:20,000
It will print them as they are.

97
00:06:20,930 --> 00:06:23,510
You can also actually print operations.

98
00:06:24,080 --> 00:06:29,870
If I put in 100 plus 50 and run this, that's going to come out here as 150.

99
00:06:31,090 --> 00:06:36,790
If I wanted the operation to show, I could have put quotation marks at the beginning, quotation marks

100
00:06:36,790 --> 00:06:42,340
at the end show it's a text and then we see 100 plus 50 and not the result.

101
00:06:43,430 --> 00:06:49,400
When you put numbers without the quotation marks directly, what print does is to execute the operation

102
00:06:49,400 --> 00:06:50,540
that it finds inside.

103
00:06:52,270 --> 00:06:54,580
This is all to start with working with print.

104
00:06:55,270 --> 00:07:00,070
So I thank you again for joining us in this lecture and we will learn a little bit more about this in

105
00:07:00,070 --> 00:07:00,490
the next.
