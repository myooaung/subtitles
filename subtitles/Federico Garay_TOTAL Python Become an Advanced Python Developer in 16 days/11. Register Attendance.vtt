WEBVTT
1
00:00:08.640 --> 00:00:14.070
In this last lesson of today, we're going to generate the record that stores all the incomes, people

2
00:00:14.070 --> 00:00:16.710
and schedules that have entered the work today.

3
00:00:17.610 --> 00:00:20.190
And we're going to do that with a function here.

4
00:00:20.190 --> 00:00:23.490
We have our only function so far, which is encode.

5
00:00:23.670 --> 00:00:30.510
And at the end of this function, we're going to create another one which is dedicated to record attendance.

6
00:00:31.200 --> 00:00:37.680
The function is going to be called record attendance and it's going to need to pass parameters to it.

7
00:00:37.980 --> 00:00:39.930
Yes, of course it does.

8
00:00:39.930 --> 00:00:42.030
We're going to pass person.

9
00:00:42.210 --> 00:00:46.380
Every time a person enters, you're going to pass them their information.

10
00:00:47.130 --> 00:00:49.740
You can do a lot of things here in this function.

11
00:00:49.740 --> 00:00:55.380
You can record the name, you can recall the day, the time they entered, and you can save the image

12
00:00:55.380 --> 00:00:56.670
taken by the camera.

13
00:00:56.940 --> 00:01:02.970
You can link it to a database to associate it with a whole series of other information and so on.

14
00:01:03.660 --> 00:01:09.450
But in this case, to keep it simple, we're just going to record the name and the time of attendance

15
00:01:09.450 --> 00:01:12.720
and save it in a CSV formatted spreadsheet.

16
00:01:13.680 --> 00:01:20.880
To do that, we're going to need to use another library which you already know which is date time from

17
00:01:20.880 --> 00:01:23.490
which we're going to import date time.

18
00:01:23.910 --> 00:01:32.760
Now we have tools to work with time we're going to create manually inside py charm a record in CSV format.

19
00:01:33.540 --> 00:01:41.310
So for that you can come directly here in day 14, right click and go to new file and this time we choose

20
00:01:41.310 --> 00:01:50.280
a name for our file like register and it will not be dot p but dot c csv if you're not used to working

21
00:01:50.280 --> 00:01:58.890
with spreadsheets, csv books are files that store records in row format and are called CSV four comma

22
00:01:58.890 --> 00:02:00.390
separated values.

23
00:02:01.550 --> 00:02:09.560
Pressing enter our register csv has been generated and I have generated it inside day 14.

24
00:02:09.830 --> 00:02:11.780
It is inside that folder.

25
00:02:12.530 --> 00:02:17.390
So here we have everything we are using to work with and we have registered.

26
00:02:17.780 --> 00:02:25.940
CSV as you can see in my case, I have it with the Excel logo because I have configured CSV files to

27
00:02:25.940 --> 00:02:31.550
open in Excel, but they can also open in text file that is indistinct.

28
00:02:31.880 --> 00:02:38.810
Now in this file that I've created, I'm going to write in the first line name comma our.

29
00:02:39.700 --> 00:02:43.030
So if we open this file and I click on it.

30
00:02:43.780 --> 00:02:47.920
See that these headers are already saved here as first information.

31
00:02:48.310 --> 00:02:54.010
I've written this manually, but the next information in this record is going to be generated via code

32
00:02:54.040 --> 00:02:55.150
dynamically.

33
00:02:55.780 --> 00:02:59.800
Each line is going to represent an employee reporting for work.

34
00:03:00.970 --> 00:03:05.650
So now I'm going to go back to the function that we were working with, and we're going to create a

35
00:03:05.650 --> 00:03:13.690
file here called F, which is equal to open, and we're going to open registered CSV and we're going

36
00:03:13.690 --> 00:03:16.630
to open it in a format that is R plus.

37
00:03:17.620 --> 00:03:21.280
So that we can not only open it but also write it.

38
00:03:22.610 --> 00:03:29.870
Fatalist is going to be a variable that we're going to use to store f dot red lines, this function

39
00:03:29.870 --> 00:03:34.400
that we have already learned and that serves to read all the lines of our text file.

40
00:03:35.250 --> 00:03:40.890
Then we're going to create a list called Register Names that is going to start as empty.

41
00:03:41.190 --> 00:03:42.090
Why so?

42
00:03:42.390 --> 00:03:47.430
Because this is where we're going to store the people who have registered in our database, shown on

43
00:03:47.430 --> 00:03:48.030
camera.

44
00:03:49.020 --> 00:03:55.380
And now we say that for each line that we find in data lists, we're going to do the following.

45
00:03:56.430 --> 00:04:03.960
We're going to create a variable that's called newcomer, that's equal to line dot split, and that's

46
00:04:03.960 --> 00:04:06.900
going to split wherever it finds a comma.

47
00:04:08.130 --> 00:04:13.950
And we're going to make register names, take care of storing in that list with a pen.

48
00:04:14.580 --> 00:04:17.580
Whatever's in newcomer at index zero.

49
00:04:18.290 --> 00:04:19.550
So why do we do this?

50
00:04:19.760 --> 00:04:23.390
So that later we can check once we get out of the loop.

51
00:04:23.390 --> 00:04:26.690
If person is not in register names.

52
00:04:26.690 --> 00:04:31.610
Because if it is not in register names, it means that it has not yet entered the job today.

53
00:04:32.690 --> 00:04:37.100
Now we're going to generate the variable right now that stores the time.

54
00:04:37.940 --> 00:04:39.770
It's going to set what time it is.

55
00:04:40.830 --> 00:04:48.180
We do it with date time now and we will have already stored the current time inside the variable right

56
00:04:48.180 --> 00:04:48.720
now.

57
00:04:50.380 --> 00:04:55.390
How we're going to transform that information into a string and we're going to store it in a variable

58
00:04:55.390 --> 00:05:04.870
called string right now, which is going to be equal to right now dot str f time, which transforms

59
00:05:04.870 --> 00:05:06.490
the data into a string.

60
00:05:07.000 --> 00:05:09.350
And there's a very handy way of doing that.

61
00:05:09.370 --> 00:05:14.410
We haven't used it before, but you know, there are different ways of achieving the same thing.

62
00:05:14.500 --> 00:05:20.320
So inside inverted commas, we're going to put percentage hedge.

63
00:05:21.200 --> 00:05:24.680
She's going to get the our colon percentage.

64
00:05:24.710 --> 00:05:29.090
M Which is going to get the minutes colon percentage.

65
00:05:29.120 --> 00:05:31.550
SW which is going to get the second.

66
00:05:32.510 --> 00:05:39.320
With that, we build a format to show the time and then we call again the file F and we use the method

67
00:05:39.320 --> 00:05:40.730
write lines.

68
00:05:41.120 --> 00:05:46.280
And there, as long as that person has not been registered that day, we're going to write a little

69
00:05:46.280 --> 00:05:53.930
string that makes a line break that invokes person that we can write there, the name of the person

70
00:05:53.930 --> 00:05:59.300
which will be received through the parameters of the function when we call it then a comma, because

71
00:05:59.300 --> 00:06:04.520
we are writing in a CSV file that contains comma separated values.

72
00:06:04.640 --> 00:06:07.400
And finally, a call to string.

73
00:06:07.400 --> 00:06:10.310
Right now, the one we just created.

74
00:06:10.980 --> 00:06:16.830
So this would write into our CSB record the name of the person and the time that they were detected

75
00:06:16.830 --> 00:06:17.730
by the camera.

76
00:06:18.990 --> 00:06:23.820
We would call this function and we go all the way down here.

77
00:06:24.590 --> 00:06:26.600
But we finished building everything.

78
00:06:26.750 --> 00:06:29.150
But before displaying the image, of course.

79
00:06:30.230 --> 00:06:33.350
And here we're going to call the function record attendance.

80
00:06:33.800 --> 00:06:39.560
And as person we're going to load employee name, which is the variable that we have already loaded

81
00:06:39.560 --> 00:06:41.690
with the name of the detected person.

82
00:06:42.290 --> 00:06:43.790
We're going to execute this.

83
00:06:43.790 --> 00:06:46.190
And first I will appear on the screen.

84
00:06:46.430 --> 00:06:50.780
It's going to be generated from the database and here comes the camera.

85
00:06:51.320 --> 00:06:52.190
I'm getting ready.

86
00:06:52.190 --> 00:06:57.410
Well, this time I didn't go as bad as last time, so everything worked fine.

87
00:06:57.590 --> 00:07:05.570
It detected the I am Federico Garai and if I come to our file it says Federico Garai and the time the

88
00:07:05.570 --> 00:07:06.710
photo was taken.

89
00:07:07.570 --> 00:07:10.270
I'm going to do it again with George's photo.

90
00:07:10.720 --> 00:07:12.700
So we restart everything.

91
00:07:13.120 --> 00:07:18.130
We wait and I'm putting the phone with George there so that it can take it.

92
00:07:19.330 --> 00:07:21.790
And here we have George Constanza.

93
00:07:22.300 --> 00:07:24.040
Let's look at the log now.

94
00:07:24.250 --> 00:07:28.840
And George Constanza has been added just a minute after me.

95
00:07:29.470 --> 00:07:35.710
Let's see if I'll now show it again myself on camera to see what happens when someone is already registered

96
00:07:35.710 --> 00:07:36.790
in register.

97
00:07:36.830 --> 00:07:38.320
Si se ve.

98
00:07:40.390 --> 00:07:43.390
He's going to take my picture and it recognizes me.

99
00:07:43.690 --> 00:07:50.860
But if I look at the register now, it didn't add one more element because when I compare if that person

100
00:07:50.860 --> 00:07:55.060
is not in the registry, it saw that he already is registered.

101
00:07:55.240 --> 00:08:01.420
And it didn't add me to the registry and I'm going to repeat the operation one last time, but now I'm

102
00:08:01.420 --> 00:08:06.160
calling a different friend, someone who is not actually on the original employee list.

103
00:08:06.880 --> 00:08:12.250
I put them in front of the camera to see what happens when he shows up and it tells us that he does

104
00:08:12.250 --> 00:08:14.080
not match any of our employees.

105
00:08:14.470 --> 00:08:20.770
In other words, none of the values were a significant match, and he doesn't match any of our employees.

106
00:08:21.580 --> 00:08:24.280
Our program works just as we expected it.

107
00:08:25.330 --> 00:08:29.980
So of course, you can still improve it and modify it in any way you want, whether it's with a much

108
00:08:29.980 --> 00:08:36.640
better graphical interface generating more data within register, CSV or whatever twist you need.

109
00:08:36.970 --> 00:08:41.770
The important thing is that at the beginning of the day you didn't know how to do facial recognition.

110
00:08:41.770 --> 00:08:44.260
And here you are now, an expert.

111
00:08:45.310 --> 00:08:50.770
So let's go to the next section where you'll have to take a tranquilizer to master the adrenaline that

112
00:08:50.770 --> 00:08:52.360
the new learning will generate.

113
00:08:52.750 --> 00:08:53.830
See you tomorrow.
