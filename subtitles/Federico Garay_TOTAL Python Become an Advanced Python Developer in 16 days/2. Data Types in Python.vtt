WEBVTT
1
00:00:07.920 --> 00:00:10.890
Welcome to this lecture about data types.

2
00:00:11.220 --> 00:00:12.450
What are they exactly?

3
00:00:12.780 --> 00:00:20.010
Well, when we write code, we manipulate data or information, just like we did when we printed the

4
00:00:20.010 --> 00:00:22.770
words Hello world or your name?

5
00:00:23.010 --> 00:00:23.820
Some numbers.

6
00:00:24.060 --> 00:00:25.710
All that information or data.

7
00:00:26.460 --> 00:00:28.590
The data comes in different types.

8
00:00:28.980 --> 00:00:38.730
The word hello is a text data type or string, and the number 150 is a numeric data type.

9
00:00:39.840 --> 00:00:47.640
So far we have used the definitions, print and input to manipulate only text and numbers.

10
00:00:48.270 --> 00:00:54.150
But text and numbers are just two different types of data, and those are not the only ones.

11
00:00:54.390 --> 00:01:00.780
And in this lecture, I want to introduce you to the most common ones in programming.

12
00:01:00.810 --> 00:01:04.710
Text is known as a string and is defined by the letters.

13
00:01:05.010 --> 00:01:13.170
S t are any word, sign space or even number that is enclosed in quotes is a string.

14
00:01:13.650 --> 00:01:15.780
We also have integers.

15
00:01:16.200 --> 00:01:17.430
You already know them.

16
00:01:17.730 --> 00:01:27.480
In programming we define integers as I and T, and any integer, positive or negative that is not enclosed

17
00:01:27.480 --> 00:01:29.850
in quotes is an integer.

18
00:01:30.330 --> 00:01:37.380
The main advantage of integers is that you can do operations on them, their numbers, but they are

19
00:01:37.380 --> 00:01:45.300
not the only numbers that exist because there is another type of data known as floating or float, which

20
00:01:45.300 --> 00:01:46.530
are decimal numbers.

21
00:01:46.920 --> 00:01:48.600
Also positive or negative.

22
00:01:48.930 --> 00:01:51.870
And you can do operations between them as well.

23
00:01:51.870 --> 00:01:53.760
If they are not enclosed in quotes.

24
00:01:54.120 --> 00:01:59.310
If they are enclosed in quotes, they will no longer be float and will become strings.

25
00:02:00.300 --> 00:02:05.970
The following group of data types that I am going to mention are considered as collections, because

26
00:02:05.970 --> 00:02:11.610
even when they are also data types themselves, they contain groups of elements inside them.

27
00:02:12.420 --> 00:02:18.420
The first of these collections are the lists and its definition is LCT.

28
00:02:19.170 --> 00:02:23.220
A list is nothing more than an ordered collection of objects.

29
00:02:23.550 --> 00:02:29.340
Lists are written in square brackets, and they can contain objects of all kinds.

30
00:02:29.640 --> 00:02:35.640
They can be many strings, integers or floats, or even a collection of elements of different types

31
00:02:35.790 --> 00:02:36.360
of data.

32
00:02:36.840 --> 00:02:43.530
The important thing about this is that the order of their elements is important, as each element has

33
00:02:43.530 --> 00:02:47.760
a numbered place or index from zero upwards.

34
00:02:48.720 --> 00:02:55.500
In this example, the word mahs has the index number for the next data type.

35
00:02:55.500 --> 00:02:58.560
Also a collection data type are the dictionaries.

36
00:02:58.920 --> 00:03:06.240
This data type is defined as DCT and its contents are written between phrases.

37
00:03:06.660 --> 00:03:10.140
Dictionaries consist of grouped pairs of words.

38
00:03:10.680 --> 00:03:16.380
Each pair contains two elements a key and a value.

39
00:03:16.830 --> 00:03:24.840
Think of the dictionaries you already know, which consist of a set of pairs that are a word and a definition.

40
00:03:25.500 --> 00:03:29.580
Well, here you have something similar, a key and its value.

41
00:03:30.180 --> 00:03:37.020
Note, however, that pairs are not ordered within the dictionaries while each pair has its internal

42
00:03:37.020 --> 00:03:37.470
order.

43
00:03:37.860 --> 00:03:39.750
First the key and then the value.

44
00:03:40.080 --> 00:03:44.400
The pairs are not ordered with an index within a dictionary.

45
00:03:45.420 --> 00:03:50.610
I know it all seems to get complicated from here, but I promise that when you see these data types

46
00:03:50.610 --> 00:03:55.890
in action and see what we use them for, it will be much clearer than it is right now.

47
00:03:56.460 --> 00:03:58.680
What follows are tuples or tables?

48
00:03:58.680 --> 00:04:00.690
Tuples, however you want to pronounce it.

49
00:04:00.930 --> 00:04:02.830
And they are defined as tough.

50
00:04:03.540 --> 00:04:07.620
They are written in brackets and are very similar to lists.

51
00:04:07.860 --> 00:04:13.380
Since they are and ordered a set of elements and their elements can be any data type.

52
00:04:13.920 --> 00:04:17.100
However, they have a fundamental difference there.

53
00:04:17.130 --> 00:04:19.940
Order is immutable and lists.

54
00:04:19.950 --> 00:04:24.540
There are methods that allow you to add, delete and even reorder elements.

55
00:04:24.780 --> 00:04:29.730
Tuple elements, on the other hand, are elements that have an order that can never be modified.

56
00:04:30.300 --> 00:04:37.410
This limitation may seem unnecessary, but as we will see later, it can be very useful in some occasions.

57
00:04:37.860 --> 00:04:41.910
Another common data type, also a collection are the sets.

58
00:04:42.450 --> 00:04:47.100
They are defined as set and are written between braces.

59
00:04:47.580 --> 00:04:51.750
A set is nothing more than an ordered set of unique elements.

60
00:04:52.290 --> 00:05:00.120
All this dictionaries and tuples can have repeated elements and that is what differentiates sets in.

61
00:05:00.240 --> 00:05:04.050
This case, each of its elements is unique and unrepeatable.

62
00:05:04.800 --> 00:05:07.620
And finally, we are going to mention another data type.

63
00:05:07.950 --> 00:05:15.270
And this one is not a collection, but a simple data type called booleans or balls, which are very

64
00:05:15.270 --> 00:05:17.010
simple, logical values.

65
00:05:17.310 --> 00:05:20.650
A boolean is data that can only have two values.

66
00:05:20.790 --> 00:05:21.900
True or false?

67
00:05:22.440 --> 00:05:27.390
This type of data is very, very useful, especially when we need our code to make decisions.

68
00:05:27.900 --> 00:05:32.520
In those cases, we are going to use Booleans to know if a condition is fulfilled.

69
00:05:32.790 --> 00:05:35.100
True or it is not fulfilled.

70
00:05:35.430 --> 00:05:35.880
False.

71
00:05:36.720 --> 00:05:42.090
To achieve today's goal and create the code for our program, we will continue working with text and

72
00:05:42.090 --> 00:05:47.790
numbers or strings and integers and we will add decimal numbers or floats.

73
00:05:48.270 --> 00:05:53.430
We are going to know them in more depth and we are also going to do some interesting things like conversions

74
00:05:53.430 --> 00:06:01.170
between types of data, for example, transforming a string into an integer and vice versa or an integer

75
00:06:01.170 --> 00:06:01.860
into a float.

76
00:06:02.400 --> 00:06:06.840
In the near future of this course, you will need to start working with the other data types I just

77
00:06:06.840 --> 00:06:07.380
mentioned.

78
00:06:07.650 --> 00:06:14.130
But these lectures are fundamental, so pay close attention to all the practices and above all, have

79
00:06:14.130 --> 00:06:14.790
a lot of fun.
