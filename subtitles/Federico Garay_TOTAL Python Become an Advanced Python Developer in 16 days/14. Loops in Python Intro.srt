1
00:00:07,850 --> 00:00:12,260
Did you think that what you've seen so far was going to be the highlight of the day?

2
00:00:12,290 --> 00:00:19,310
If so, then you've missed the entire point because loops are another cornerstone of programming code.

3
00:00:19,580 --> 00:00:20,730
And what is a loop?

4
00:00:20,750 --> 00:00:25,670
Well, as you may know, a loop means to make something happen again and again.

5
00:00:25,670 --> 00:00:33,080
For example, when you like a music track so much that you activate this function to play it over and

6
00:00:33,080 --> 00:00:36,380
over again, well, that's a loop in programming.

7
00:00:36,380 --> 00:00:39,980
It is when you want a block of code to run more than once.

8
00:00:40,190 --> 00:00:46,970
In these situations, loops are great because if you have to make something happen, say, 100 times,

9
00:00:46,970 --> 00:00:50,240
you don't need to write that block of code 100 times.

10
00:00:50,240 --> 00:00:55,250
You just put that block inside a loop that is programmed to repeat 100 times.

11
00:00:55,760 --> 00:01:01,040
You can also put your code in the loop that repeats an indefinite amount of times until a certain condition

12
00:01:01,040 --> 00:01:01,550
is met.

13
00:01:01,550 --> 00:01:07,640
For example, make the player in your game, run the code fire missiles non-stop until the condition

14
00:01:07,640 --> 00:01:11,270
number of projectiles equals zero is met.

15
00:01:11,270 --> 00:01:17,240
Before moving on to the next lecture, I want to teach you a concept that is closely related to loops,

16
00:01:17,240 --> 00:01:20,510
and that is the iterable concept.

17
00:01:20,930 --> 00:01:24,590
In programming, there are some objects that are iterable.

18
00:01:24,650 --> 00:01:30,440
This means that you can iterate or go through their internal elements one at a time.

19
00:01:30,440 --> 00:01:32,050
For example, a list.

20
00:01:32,330 --> 00:01:39,740
Any list has a specific number of elements, let's say five, then a list is iterable, because you

21
00:01:39,740 --> 00:01:44,840
can execute a loop that does a repetition for each element of the list.

22
00:01:45,140 --> 00:01:52,040
You can create a code that prints the objects in a list, one at a time until the list is exhausted.

23
00:01:52,040 --> 00:01:53,900
We will see how this is implemented.

24
00:01:53,900 --> 00:02:00,350
But the most important thing for now is that you understand that all objects that have a number of elements

25
00:02:00,350 --> 00:02:07,310
that you can iterate on, such as list dictionaries or strings, are iterable objects, and we will

26
00:02:07,310 --> 00:02:08,510
see this in more depth.

27
00:02:08,510 --> 00:02:15,140
To sum up loops repeat a block of code as many times as necessary, and there are two different types

28
00:02:15,140 --> 00:02:21,980
of loops those that repeat for a defined number of iterations and those that repeat for an indefinite

29
00:02:21,980 --> 00:02:23,900
number of iterations.

30
00:02:24,470 --> 00:02:31,460
In the next two lectures, we are going to look at both types, starting with the for loop, which belongs

31
00:02:31,460 --> 00:02:35,960
to the first group, and then the wild loop which belongs to the second.

32
00:02:35,990 --> 00:02:37,280
You don't want to miss them.

33
00:02:37,280 --> 00:02:39,830
So jump to the next lecture right now.
