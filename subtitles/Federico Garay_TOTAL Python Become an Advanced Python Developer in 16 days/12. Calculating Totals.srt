1
00:00:08,210 --> 00:00:10,370
Welcome to this new lesson here.

2
00:00:10,370 --> 00:00:15,050
We'll learn how to calculate costs, totals and subtitles in cost panel.

3
00:00:15,440 --> 00:00:21,140
All those calculations should be entered as we click on Total, so we'll manage to make the costs of

4
00:00:21,140 --> 00:00:25,430
everything the customer has bought magically appear right here.

5
00:00:26,030 --> 00:00:28,130
But before that, let's solve one problem.

6
00:00:28,130 --> 00:00:30,620
I noticed as soon as we finished the last lesson.

7
00:00:31,220 --> 00:00:36,530
Although our checkboxes work properly, since we can type numbers in here, what was entered in the

8
00:00:36,530 --> 00:00:39,980
previous checkbox disappears when another checkbox is activated.

9
00:00:40,340 --> 00:00:46,280
In other words, if I enter three here and one here and now I activate pudding.

10
00:00:46,490 --> 00:00:48,320
What I enter before has gone.

11
00:00:49,160 --> 00:00:51,230
It's something we can fix quite quickly.

12
00:00:51,530 --> 00:00:53,660
So let's go to the review check function.

13
00:00:54,320 --> 00:01:00,650
Here we have this line reading food box in position x delete, which is in charge of deleting everything

14
00:01:00,650 --> 00:01:01,790
that's inside of it.

15
00:01:02,600 --> 00:01:05,690
It deletes absolutely everything without checking it first.

16
00:01:06,050 --> 00:01:12,080
So if we have any number, it will delete it since it's in a loop, which means iterates over all the

17
00:01:12,080 --> 00:01:13,430
checks and deletes them.

18
00:01:13,910 --> 00:01:15,500
So that's not the idea.

19
00:01:15,680 --> 00:01:23,270
Instead of deleting everything encounters, let's make it wonder if food box in its position x is equal

20
00:01:23,270 --> 00:01:29,300
to zero and only in that specific case will it delete whatever there is in food box.

21
00:01:30,080 --> 00:01:33,950
Then let's copy this two lines and paste them in drink box.

22
00:01:33,950 --> 00:01:36,860
But replacing food with drink, of course.

23
00:01:37,900 --> 00:01:42,790
Let's do the same with dessert box delete, but making sure that both names read dessert.

24
00:01:43,720 --> 00:01:51,100
Now if we execute this and if we select chicken type one, select soda and type three, the previous

25
00:01:51,100 --> 00:01:52,540
number shouldn't disappear.

26
00:01:52,960 --> 00:01:55,060
All right, now we can move forwards.

27
00:01:55,690 --> 00:01:58,210
Let's assign a function to the total button.

28
00:01:58,900 --> 00:02:02,380
We want this button to have a function named total calculation.

29
00:02:02,650 --> 00:02:07,060
And in order to call that function, we'll need to go to our button's definitions.

30
00:02:07,060 --> 00:02:07,900
Right here.

31
00:02:08,800 --> 00:02:14,320
Here we have a list named buttons, and the buttons are created in this loop, but we have to assign

32
00:02:14,320 --> 00:02:15,280
a command to it.

33
00:02:16,330 --> 00:02:20,020
As we already know, we cannot assign different commands from a loop.

34
00:02:20,350 --> 00:02:23,770
If we did it, we'd have to assign the same command to each button.

35
00:02:23,920 --> 00:02:25,600
And that's not what we want.

36
00:02:26,410 --> 00:02:32,320
Therefore, we'll have to create a new list that can be named created buttons, and it will store all

37
00:02:32,320 --> 00:02:34,360
the buttons that are created in our loop.

38
00:02:34,390 --> 00:02:39,770
As a result, we can call all those buttons after they're created and assign the command we need to

39
00:02:39,790 --> 00:02:41,380
them to do so.

40
00:02:41,380 --> 00:02:47,290
Let's position ourselves inside the loop and once the buttons are created, we have to call created

41
00:02:47,290 --> 00:02:51,730
buttons using a pen, and then we add each button.

42
00:02:53,050 --> 00:02:59,020
So when the loop ends, when we get out of it, we already have our created buttons list and our four

43
00:02:59,020 --> 00:03:06,430
corresponding buttons here we'll call created buttons and it's index zero, which is the total button

44
00:03:06,880 --> 00:03:12,550
and we'll assign a config to it so as to enter a command that's equal to total calculation.

45
00:03:14,310 --> 00:03:16,500
It's the name of a function that doesn't exist.

46
00:03:16,500 --> 00:03:18,510
So we're going to create it right away.

47
00:03:18,990 --> 00:03:22,770
Let's go to the part of our code where all the functions are here.

48
00:03:23,950 --> 00:03:29,140
We define it as total calculation and we want our code to make plenty of calculations.

49
00:03:29,140 --> 00:03:35,830
When the user clicks on total, the code has to add up the values of everything bought by the customers.

50
00:03:35,950 --> 00:03:41,590
Then it has to multiply that by the cost of such products and get a subtotal for food, another one

51
00:03:41,590 --> 00:03:43,720
for drink, and another one for dessert.

52
00:03:44,080 --> 00:03:50,140
After that, the code will get a subtotal adding up those three sub totals and it's also going to calculate

53
00:03:50,140 --> 00:03:52,210
the taxes and overall total.

54
00:03:52,360 --> 00:03:57,190
So if we have to multiply the number of products by their costs, we'll need to take those prices from

55
00:03:57,190 --> 00:03:59,140
somewhere up here.

56
00:03:59,170 --> 00:04:05,020
We'll create three more variables, which will be lists of prices in order not to take up the whole

57
00:04:05,020 --> 00:04:06,390
video type in the costs.

58
00:04:06,400 --> 00:04:08,920
I've already had them here in this text file.

59
00:04:09,160 --> 00:04:11,560
I'll copy and paste it in a second.

60
00:04:12,010 --> 00:04:16,600
So if you want it, I'll leave this file in resources so that you can copy and paste them too.

61
00:04:16,930 --> 00:04:19,570
As you may know, these prices are made up.

62
00:04:19,570 --> 00:04:24,850
So we have three lists which are named food prices, drink prices and dessert prices.

63
00:04:25,090 --> 00:04:27,430
Now we'll be able to make our calculations.

64
00:04:28,150 --> 00:04:33,580
So let's go to the total calculation function and create a variable named Food Subtotal, which will

65
00:04:33,580 --> 00:04:37,720
initialize as zero and it will increase as we loop through everything.

66
00:04:38,020 --> 00:04:44,350
For each unit in food text, which is the list containing the text values of each food box will make.

67
00:04:44,350 --> 00:04:51,460
Food subtotal will be equal to whatever there is in food subtotal plus what's in unit, but unit is

68
00:04:51,460 --> 00:04:57,250
a string type variable and so we have to obtain its value using get and we'll obtain an integer.

69
00:04:57,730 --> 00:05:03,070
And this the number of units has to be multiplied by the corresponding price.

70
00:05:03,610 --> 00:05:10,000
The food prices are in food price, but we need to know the index as food price is a list, we haven't

71
00:05:10,000 --> 00:05:16,540
entered a value for the index, so we'll do that up here in a p variable initializing at zero.

72
00:05:17,500 --> 00:05:23,620
So the specific price is the one in index P, which will be the index corresponding to each price.

73
00:05:24,700 --> 00:05:32,140
We also need to take into account that food price has float type values and unit get has an integer.

74
00:05:32,650 --> 00:05:35,290
So we're going to convert unit to float.

75
00:05:35,290 --> 00:05:36,880
So it has to multiply it.

76
00:05:37,630 --> 00:05:43,120
Since we have many symbols here, we'll make sure that multiplication and addition are carried out separately.

77
00:05:43,690 --> 00:05:50,050
The only thing left now is to make p increase its value in each iteration, and we do so by putting

78
00:05:50,050 --> 00:05:52,150
P plus equals one.

79
00:05:52,990 --> 00:05:53,860
Is that okay?

80
00:05:54,700 --> 00:05:58,510
So we've just done this with food, but let's review it.

81
00:05:59,050 --> 00:06:04,300
We'll select one chicken and two kebabs and now let's get the total.

82
00:06:04,990 --> 00:06:09,100
Well, we can't see it on the screen, of course, as we haven't configured that yet.

83
00:06:10,150 --> 00:06:12,100
So let's create a print for now.

84
00:06:12,840 --> 00:06:16,860
Print food, subtotal to see if it's working.

85
00:06:17,310 --> 00:06:22,440
And once again, we pick one chicken and two salmons total.

86
00:06:22,470 --> 00:06:26,520
And here we have the total, which is the result of those two multiplications.

87
00:06:27,600 --> 00:06:30,210
We have to repeat this process in each category.

88
00:06:30,690 --> 00:06:33,420
So we paste one and one more.

89
00:06:34,410 --> 00:06:35,820
So this one's for drinks.

90
00:06:35,820 --> 00:06:38,880
So we select several times so as to type drink.

91
00:06:41,850 --> 00:06:43,830
And here we type dessert.

92
00:06:44,940 --> 00:06:46,170
I think that's all right.

93
00:06:47,370 --> 00:06:52,260
Since we entered three prints, we'll be able to see three subtitles on the screen.

94
00:06:53,010 --> 00:06:57,660
So for now, let's select one chicken, one soda, and one ice cream.

95
00:06:58,080 --> 00:07:02,550
And let's click on Total and we see three subtitles in the console.

96
00:07:02,910 --> 00:07:05,460
These sums correspond to each category.

97
00:07:05,970 --> 00:07:09,000
So let's delete the prints as we don't need them anymore.

98
00:07:09,780 --> 00:07:16,440
Now we have to use these subtitles to calculate overall subtotal taxes and overall total.

99
00:07:16,920 --> 00:07:17,820
Let's do that.

100
00:07:19,170 --> 00:07:23,010
Let's go back inside the function and calculate the subtotal first.

101
00:07:23,430 --> 00:07:30,000
We'll create a new variable named My Subtotal that's equal to food subtotal plus drink subtotal plus

102
00:07:30,000 --> 00:07:31,200
dessert subtotal.

103
00:07:32,400 --> 00:07:36,180
And we have a variable containing the sum of the three categories.

104
00:07:36,990 --> 00:07:39,480
Let's create another variable named My Taxes.

105
00:07:40,410 --> 00:07:49,980
Suppose we're eating at a restaurant where we're charged an 11% vat, so multiply my subtotal by 0.11.

106
00:07:49,980 --> 00:07:51,420
So that's the tax value.

107
00:07:51,870 --> 00:07:57,300
And my total would be equal to my subtotal plus my taxes.

108
00:07:58,440 --> 00:08:02,970
We now have all the variables, but they haven't been assigned a box in cost panel.

109
00:08:03,510 --> 00:08:04,740
So where do we put them?

110
00:08:05,700 --> 00:08:12,390
Look, when we created cost labels and input fields some time ago, we said the text boxes would get

111
00:08:12,390 --> 00:08:18,930
their text assigned to the text variable named food cost var in the case of food.

112
00:08:19,690 --> 00:08:23,140
Next one is drink cost of a then dessert cost of.

113
00:08:23,800 --> 00:08:26,080
Then we had subtotal bar.

114
00:08:26,740 --> 00:08:29,980
This was followed by taxes bar and total bar.

115
00:08:30,970 --> 00:08:36,880
So we have to assign the calculations we have just made to those variables in order to show them on

116
00:08:36,880 --> 00:08:38,380
our system display.

117
00:08:40,060 --> 00:08:42,330
So let's begin with food cost bar.

118
00:08:42,640 --> 00:08:48,700
We'll create its contents using the set method and we'll create a string literal containing a currency,

119
00:08:48,700 --> 00:08:50,230
a space and a total.

120
00:08:50,920 --> 00:08:52,300
So how do we build this?

121
00:08:52,630 --> 00:08:54,700
We call food subtotal.

122
00:08:54,700 --> 00:09:00,850
But bear in mind that these won't be round numbers, since we're going to make multiple calculations,

123
00:09:00,850 --> 00:09:02,290
even percentages.

124
00:09:02,320 --> 00:09:05,530
It's very likely that we come up with lots of decimals.

125
00:09:06,370 --> 00:09:11,140
So let's type round, add only two decimals and close it right here.

126
00:09:11,860 --> 00:09:18,340
We'll copy this once to enter drink cost bar, which will be equal to the subtotal drink rounding.

127
00:09:19,120 --> 00:09:22,450
And we'll paste it once more to do the same with dessert.

128
00:09:22,630 --> 00:09:24,880
And we adjust it now.

129
00:09:24,880 --> 00:09:29,980
Subtotal var and let's make sure to have my subtotal rounding.

130
00:09:30,580 --> 00:09:33,100
That's the variable containing that value.

131
00:09:33,880 --> 00:09:41,950
Now tax is var and where we round my taxes and the last one is total var which will contain my total

132
00:09:41,950 --> 00:09:42,640
rounding.

133
00:09:43,480 --> 00:09:46,000
So let's execute our application once more.

134
00:09:46,810 --> 00:09:53,170
Let's say these customers had one chicken, two salmon, three juice, and one had pudding.

135
00:09:54,340 --> 00:09:56,650
All right, let's click on Total.

136
00:09:56,800 --> 00:10:03,550
And here we have each input field with its price so we can say our total button is working perfectly.

137
00:10:04,330 --> 00:10:08,500
So let's continue with our next lesson so as to create the invoice function.
