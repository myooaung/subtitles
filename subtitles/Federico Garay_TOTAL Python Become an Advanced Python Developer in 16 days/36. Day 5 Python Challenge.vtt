WEBVTT
1
00:00:07.670 --> 00:00:13.820
So we've finished preparing for this fifth challenge of your fifth day.

2
00:00:14.120 --> 00:00:20.930
Now we are going to put it all together, all hands on deck, because we have a very special challenge

3
00:00:20.930 --> 00:00:21.800
coming to you.

4
00:00:22.070 --> 00:00:24.980
Today you are going to program the hangman game.

5
00:00:25.310 --> 00:00:29.210
It's simple, popular, but if you don't know it, let me explain it really quickly.

6
00:00:29.240 --> 00:00:35.270
The program will choose a secret word and we'll show the player only a series of dashes that represent

7
00:00:35.270 --> 00:00:38.640
the number of letters in the word in each turn.

8
00:00:38.660 --> 00:00:43.410
The player must choose a letter if that letter is in the hidden word.

9
00:00:43.430 --> 00:00:46.190
The system will show where it is located.

10
00:00:46.220 --> 00:00:52.370
But if the player chooses a letter that is not in the hidden word, they lose a life in the real hangman

11
00:00:52.370 --> 00:00:52.940
game.

12
00:00:52.970 --> 00:00:58.790
Each time we lose a life, the drawing of the hangman is completed limb by limb.

13
00:00:58.940 --> 00:01:05.990
But in our case, as we still do not have the graphic elements learned for programming, we will simply

14
00:01:05.990 --> 00:01:12.980
tell the user that they have six lives and we will deduct them one by one for each time the player chooses

15
00:01:12.980 --> 00:01:14.300
an incorrect letter.

16
00:01:15.050 --> 00:01:20.180
If the player runs out of leaves before guessing the word, the player loses.

17
00:01:20.180 --> 00:01:25.850
But if they guessed the whole word before losing all their lives, that player wins.

18
00:01:25.910 --> 00:01:29.180
Sounds simple, but how do we design all this in code?

19
00:01:29.270 --> 00:01:30.470
Here are some clues.

20
00:01:30.500 --> 00:01:36.770
First, you are going to create code that imports the choice method, since you are going to need it

21
00:01:36.770 --> 00:01:43.220
so that the system can choose a random word from a list of words that you are also going to create at

22
00:01:43.220 --> 00:01:44.000
the beginning.

23
00:01:44.690 --> 00:01:49.490
After that, you are going to create as many functions as you think necessary for the program to do

24
00:01:49.490 --> 00:01:56.360
things like asking the user to choose a letter, checking if what the user has entered is a valid letter,

25
00:01:56.630 --> 00:02:00.380
checking if the entered letter is in the word or not.

26
00:02:00.800 --> 00:02:02.600
Checking if they have won or not.

27
00:02:03.080 --> 00:02:08.870
Remember to write the functions first, then the code that implements those functions in an orderly

28
00:02:08.870 --> 00:02:10.040
fashion after.

29
00:02:10.070 --> 00:02:15.290
I think this is a special project and I really want you to know that I don't expect you to be able to

30
00:02:15.290 --> 00:02:16.910
solve it without help.

31
00:02:17.150 --> 00:02:22.970
In fact, I will tell you that you're bound to get to a point where you get all the code tangled up

32
00:02:22.970 --> 00:02:25.310
and you will need some help from our solution.

33
00:02:25.400 --> 00:02:28.360
And if that happens, it is totally normal.

34
00:02:28.370 --> 00:02:33.770
The functions look simple, but when we start to put them all together in real code, it is difficult

35
00:02:33.770 --> 00:02:39.320
to mentally follow the succession of the code because it becomes much less linear than before.

36
00:02:39.860 --> 00:02:45.500
So I think you might need some extra help, and that's why I've created an additional lecture with some

37
00:02:45.500 --> 00:02:49.460
hints and tips that might make your life a little bit easier.

38
00:02:49.730 --> 00:02:54.740
If you want, you can start designing the game yourself and go straight to the video containing our

39
00:02:54.740 --> 00:02:57.650
solution to the challenge or not.

40
00:02:57.800 --> 00:03:02.420
Watch the next lecture first to prepare yourself for the challenge.

41
00:03:02.510 --> 00:03:08.180
The important thing is that you give it a try, get your head around the problem, and then we'll see

42
00:03:08.180 --> 00:03:09.680
when you get your solution.

43
00:03:09.680 --> 00:03:10.550
All right.

44
00:03:10.580 --> 00:03:11.420
Go at it.

45
00:03:11.450 --> 00:03:14.240
See you in the next lecture or in our solution video.
