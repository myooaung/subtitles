1
00:00:07,950 --> 00:00:13,890
So far, we have a rocket that's capable of moving along the x axis, and yet it can go through the

2
00:00:13,890 --> 00:00:15,930
edges of our screen and disappear.

3
00:00:16,410 --> 00:00:18,090
That's not what we want.

4
00:00:18,660 --> 00:00:22,800
We want this rocket to move up to this point without exiting the window.

5
00:00:23,610 --> 00:00:28,680
To achieve this, we'll do something quite easy that will allow us to restrict these movements.

6
00:00:29,460 --> 00:00:35,520
But before our system gets out of control, will notice again, point out the function of each block

7
00:00:35,520 --> 00:00:36,300
of code.

8
00:00:36,870 --> 00:00:42,660
Here, we'll point out that this is the player function and here will clarify that these are the player

9
00:00:42,660 --> 00:00:43,620
variables.

10
00:00:44,430 --> 00:00:45,990
So let's leave some space.

11
00:00:45,990 --> 00:00:49,800
And here inside the loop we have the events iteration.

12
00:00:50,850 --> 00:00:58,290
Let's also clarify that the first event will be iterating over is the one that closes the program closing

13
00:00:58,290 --> 00:00:59,040
event.

14
00:01:00,240 --> 00:01:07,980
This is the event that checks if an arrow key has been pressed, so it'll be named press arrow key event.

15
00:01:09,420 --> 00:01:13,590
Then we have this other event which checks if an arrow key has been released.

16
00:01:13,800 --> 00:01:17,220
So to be named release key event.

17
00:01:18,390 --> 00:01:24,750
And finally, we have these lines that will modify our character's location so it will be named modify

18
00:01:24,750 --> 00:01:25,770
location.

19
00:01:26,580 --> 00:01:29,370
And this is the one we use to update.

20
00:01:30,450 --> 00:01:36,480
It is paramount that you take your time to clarify everything, especially in programs where you have

21
00:01:36,480 --> 00:01:37,650
too much code.

22
00:01:38,520 --> 00:01:44,160
Actually, we must do that with all of our programs, but we tend not to do it when a program is rather

23
00:01:44,160 --> 00:01:44,940
basic.

24
00:01:45,420 --> 00:01:49,740
Anyway, always clarify and explain the function of each block of code.

25
00:01:50,190 --> 00:01:55,770
You won't have any problems when maintaining, updating, modifying, or sharing your program.

26
00:01:57,330 --> 00:02:01,830
Okay, so we want to set limits and prevent our rocket from escaping our window.

27
00:02:02,250 --> 00:02:03,540
How do we do that?

28
00:02:04,530 --> 00:02:07,530
Let's position ourselves here and before the call.

29
00:02:07,560 --> 00:02:14,640
That is, once we've changed our player's location as regards the x axis, but without calling it,

30
00:02:15,660 --> 00:02:19,950
we'll create a little block of code named keep inside screen.

31
00:02:20,910 --> 00:02:26,430
This will make sure that our rocket doesn't have a value lower than zero in the x axis.

32
00:02:27,030 --> 00:02:30,990
That's because if our rocket is touching the edge, it means it is at zero.

33
00:02:31,590 --> 00:02:35,010
But if it is at minus one, it's already gone.

34
00:02:36,240 --> 00:02:42,870
Therefore, once we've changed, our characters position will verify if player X is equal or lower than

35
00:02:42,870 --> 00:02:43,530
zero.

36
00:02:44,370 --> 00:02:50,940
If so, will restore that value to zero in player x and we'll do the same on the right.

37
00:02:51,210 --> 00:02:53,640
But it will be a different calculation.

38
00:02:56,470 --> 00:02:59,890
We have to make sure our rocket doesn't go past the other edge.

39
00:03:00,190 --> 00:03:02,230
This edge is at 800.

40
00:03:02,620 --> 00:03:05,320
And our rocket is 64 pixels wide.

41
00:03:05,680 --> 00:03:08,920
So we have to subtract 64 from 800.

42
00:03:09,400 --> 00:03:12,460
This is equal to 736.

43
00:03:12,700 --> 00:03:15,700
And our rocket can't go past that point.

44
00:03:17,350 --> 00:03:24,730
So here we'll add lf player x is equal or higher than 736.

45
00:03:26,020 --> 00:03:31,150
We're not going to allow that by always restoring its position to 736.

46
00:03:31,360 --> 00:03:34,840
As a result, our rocket won't be able to go past that point.

47
00:03:36,250 --> 00:03:40,510
Thanks to this little change we can make, our rockets stay inside the screen.

48
00:03:40,930 --> 00:03:46,420
And if we execute this and go to the right, we'll reach the edge and it won't go past.

49
00:03:47,320 --> 00:03:50,530
And if we go to the other edge, the rocket can't go past it.

50
00:03:50,530 --> 00:03:53,770
And it's like it hits the zero wall and that's it.

51
00:03:54,460 --> 00:04:00,310
So notice that there are some pixels on the edges of our rocket, and that's why we can see some space

52
00:04:00,310 --> 00:04:02,110
between the rocket and the edges.

53
00:04:02,740 --> 00:04:04,090
I like it that way.

54
00:04:04,210 --> 00:04:10,780
We could modify it by entering minus one or minus two, and then we could see where our rocket ends.

55
00:04:10,870 --> 00:04:13,270
But I like that there's some space in between.

56
00:04:14,380 --> 00:04:15,880
This is all for now.

57
00:04:15,880 --> 00:04:19,930
And we have this rocket that can move to the right or to the left.

58
00:04:20,050 --> 00:04:22,690
But it's been left alone in the vast universe.

59
00:04:22,690 --> 00:04:24,430
It needs some purpose.

60
00:04:25,000 --> 00:04:29,290
In the next lecture, we're going to create some enemies that our rocket can defeat.

61
00:04:29,770 --> 00:04:30,700
Don't miss it.
