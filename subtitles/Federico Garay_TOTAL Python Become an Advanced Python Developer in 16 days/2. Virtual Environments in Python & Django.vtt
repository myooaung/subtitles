WEBVTT
1
00:00:07.610 --> 00:00:12.980
The first step to be able to work with Django to create our web application is to create a virtual environment

2
00:00:12.980 --> 00:00:14.000
on your computer.

3
00:00:14.000 --> 00:00:18.200
That brings us to an obvious question What is a virtual environment?

4
00:00:18.350 --> 00:00:24.170
A virtual environment is a space inside your computer, we could say a folder that contains its own

5
00:00:24.170 --> 00:00:29.600
python packages and libraries, which are kept separate from everything you have installed on the rest

6
00:00:29.600 --> 00:00:30.530
of your computer.

7
00:00:30.890 --> 00:00:33.170
Let me be clear with an example.

8
00:00:33.170 --> 00:00:37.340
Imagine you want to develop two different projects for one of them.

9
00:00:37.340 --> 00:00:42.290
You want to work with the NumPy library in its version 1.20 1.5.

10
00:00:42.290 --> 00:00:48.620
But in the other project you want to be able to work with an older version of NumPy, let's say 1.13

11
00:00:48.620 --> 00:00:49.310
point one.

12
00:00:50.330 --> 00:00:51.350
What should you do?

13
00:00:51.380 --> 00:00:56.840
Should you install an unstoppable uninstall numpy every time you need to use a different version?

14
00:00:56.960 --> 00:01:01.040
You could do that, but it's certainly not the most practical approach there.

15
00:01:01.820 --> 00:01:04.220
This is where virtual environments come in.

16
00:01:04.400 --> 00:01:08.030
Now imagine you have a folder called My Environments.

17
00:01:08.480 --> 00:01:14.330
These virtual environments allow you to create two different folders or spaces within which you are

18
00:01:14.330 --> 00:01:19.760
going to work only with the python libraries you install inside each space.

19
00:01:20.330 --> 00:01:26.060
So here you could create two folders, one called Project one, and then another called Project two.

20
00:01:26.060 --> 00:01:32.810
And in the first one you install NumPy 1.20 1.5 and then the other one point 13.1.

21
00:01:33.170 --> 00:01:38.360
So no matter what you have installed on your computer, when you work inside a virtual environment,

22
00:01:38.360 --> 00:01:43.700
Python will only be able to access the libraries you have installed inside that environment.

23
00:01:43.700 --> 00:01:51.050
In order to create virtual environments, we need to install the virtual env e and V module on your

24
00:01:51.050 --> 00:01:51.830
computer.

25
00:01:52.070 --> 00:01:57.590
Federico is going to show you how to do that and how to create your virtual environments right now.

26
00:01:58.820 --> 00:02:00.500
And here we are at the computer.

27
00:02:00.980 --> 00:02:08.540
I have the command prompt open so that I can install with PIP, install a virtual E and V.

28
00:02:09.620 --> 00:02:12.380
In your case, it's going to load for the first time.

29
00:02:12.800 --> 00:02:19.400
I'm just updating it because I have already installed it and now I'm going to show you a PIP command

30
00:02:19.400 --> 00:02:25.370
called Freeze, which shows me all the Python libraries or modules that I have already installed on

31
00:02:25.370 --> 00:02:26.300
my computer.

32
00:02:27.950 --> 00:02:33.500
If I run it, it takes a few seconds and it tells me that I have all these installed.

33
00:02:34.250 --> 00:02:37.220
Some of them have been installed along the course.

34
00:02:37.910 --> 00:02:44.450
In short, this is what I have and you can see the version number of each of these modules.

35
00:02:44.600 --> 00:02:46.460
So why am I showing you all this?

36
00:02:47.030 --> 00:02:52.820
So that you can see that in the general environment of my computer you can find all these modules that

37
00:02:52.820 --> 00:02:57.290
are already installed to work inside Python whenever I ask for them.

38
00:02:58.280 --> 00:03:01.910
And now we're going to create a separate environment to this one.

39
00:03:03.140 --> 00:03:07.010
And for that I'm going to create inside my desktop a new folder.

40
00:03:07.910 --> 00:03:14.120
This folder is going to be called My Environment and we're going to open this folder and here inside

41
00:03:14.120 --> 00:03:16.670
we're going to create two new folders.

42
00:03:18.020 --> 00:03:23.540
The first one is going to be called Project one, and the second one is going to be called Project two.

43
00:03:24.390 --> 00:03:28.340
And now we're going to access Project one from the console.

44
00:03:28.910 --> 00:03:34.070
Then we're going to put see the desktop and we're going to follow the path.

45
00:03:34.610 --> 00:03:38.840
Backslash My environment backslash project one.

46
00:03:40.220 --> 00:03:45.290
Then I'm already inside this folder so I can create a virtual environment here.

47
00:03:46.520 --> 00:03:52.820
So inside this folder we write the command, virtual envy, and now we put the name that we want to

48
00:03:52.820 --> 00:03:54.140
give it, for example.

49
00:03:54.170 --> 00:04:01.430
P one So remember that this is going to be created in the folder where I'm about at the moment, and

50
00:04:01.430 --> 00:04:04.100
if I press enter, it takes a few seconds.

51
00:04:04.310 --> 00:04:08.720
And if we come to project one, I have a folder which is P one.

52
00:04:10.060 --> 00:04:15.610
If I open it, it has some folders and some files that show that a virtual environment has been created.

53
00:04:16.510 --> 00:04:21.160
This virtual environment has been generated, but I haven't activated it yet.

54
00:04:21.640 --> 00:04:28.360
To activate it, I go back to command and press dot backslash, the name of the environment which is

55
00:04:28.360 --> 00:04:34.930
P one backslash scripts with a capital letter backslash activate.

56
00:04:35.530 --> 00:04:38.200
This is the command to activate the environment.

57
00:04:38.800 --> 00:04:40.900
So nothing has happened that we can see.

58
00:04:41.380 --> 00:04:47.350
But what we can notice is that now at the beginning of my line, the name of the environment I am in

59
00:04:47.350 --> 00:04:48.700
appears in brackets.

60
00:04:49.690 --> 00:04:55.870
I am no longer in the computer in general, but I'm in my virtual environment, and this is when things

61
00:04:55.870 --> 00:04:57.580
start to make sense to you.

62
00:04:58.510 --> 00:05:04.450
If at this point I call Pip Frees Command again to see what modules I have installed.

63
00:05:05.740 --> 00:05:09.970
Notice now, unlike before when I saw a bunch of modules, I don't see any.

64
00:05:10.510 --> 00:05:13.540
So how come have they been uninstalled?

65
00:05:13.570 --> 00:05:14.650
Did they disappear?

66
00:05:15.700 --> 00:05:16.060
No.

67
00:05:16.060 --> 00:05:21.580
This means that I'm inside a virtual environment, a separate space on my computer that doesn't have

68
00:05:21.580 --> 00:05:23.020
any modules installed.

69
00:05:23.560 --> 00:05:27.520
So here I can start as if it were a kind of empty court.

70
00:05:28.330 --> 00:05:32.680
I have the possibility to decide which new libraries I can install.

71
00:05:33.220 --> 00:05:35.140
Which versions I want to install.

72
00:05:35.140 --> 00:05:42.160
And even if they repeat with the ones that they were there before, or even if they are new, I'm in

73
00:05:42.160 --> 00:05:43.450
a separate space.

74
00:05:43.840 --> 00:05:44.710
So let's see.

75
00:05:44.710 --> 00:05:52.590
For example, some of the ones I had here, one of the simple ones, it could be PI jokes.

76
00:05:52.600 --> 00:05:59.020
Remember, it's the module that we were installing during day 13 which contains jokes.

77
00:05:59.560 --> 00:06:02.920
Here I can see the version number of PI jokes that I have installed.

78
00:06:03.340 --> 00:06:05.020
Pay attention to this number.

79
00:06:05.770 --> 00:06:12.640
We're also going to install it now with PIP installed pi jokes, but this time it's installing it to

80
00:06:12.640 --> 00:06:14.260
my virtual environment.

81
00:06:15.520 --> 00:06:23.140
And if I now go back and type a pip freeze to see what I have installed, I can only see PI jokes and

82
00:06:23.140 --> 00:06:24.100
it's version number.

83
00:06:25.180 --> 00:06:27.400
Again, pay attention to that number.

84
00:06:28.060 --> 00:06:30.130
So let's keep it that way for now.

85
00:06:31.240 --> 00:06:36.490
Apart from that, let's open a new command prompt to work in the second virtual environment I'm going

86
00:06:36.490 --> 00:06:37.750
to create right now.

87
00:06:39.110 --> 00:06:39.290
Here.

88
00:06:39.290 --> 00:06:46.400
We're going to create an access to see the desktop again we put backslash my environment backslash project

89
00:06:46.400 --> 00:06:47.060
to.

90
00:06:48.750 --> 00:06:57.020
I'm going to create a virtual EMV here, which is going to be called P two and it takes a few seconds

91
00:06:57.320 --> 00:07:00.110
and in theory it is already been generated.

92
00:07:00.740 --> 00:07:02.690
So now I need to activate it again.

93
00:07:02.960 --> 00:07:05.300
Remember, it's with dot backslash.

94
00:07:05.330 --> 00:07:07.850
The name of the project which is P two.

95
00:07:08.120 --> 00:07:13.130
Again, the backslash scripts backslash activate and enter.

96
00:07:14.960 --> 00:07:17.840
And now we see P two at the beginning of the line.

97
00:07:20.000 --> 00:07:22.370
So now I'm inside this virtual environment.

98
00:07:22.370 --> 00:07:25.400
I can check it again if I press pip freeze.

99
00:07:25.610 --> 00:07:27.230
And now, let's see.

100
00:07:27.230 --> 00:07:28.760
I don't have anything.

101
00:07:29.540 --> 00:07:34.880
I have neither the amount of libraries I had on my computer nor the Pi jokes library I just installed

102
00:07:34.880 --> 00:07:37.010
in my P one virtual environment.

103
00:07:37.760 --> 00:07:40.070
The virtual space p two has nothing.

104
00:07:41.000 --> 00:07:47.240
Now let's install a different version of pi jokes inside p to pip install pipe jokes.

105
00:07:48.850 --> 00:07:54.580
Now, instead of activating the most recent version by default, let's put twice the equals symbol to

106
00:07:54.580 --> 00:08:01.240
set the version we want, and we put 0.4.0, which is an older version.

107
00:08:02.350 --> 00:08:05.500
So it took some seconds and now it's supposed to be installed.

108
00:08:06.220 --> 00:08:15.580
And if I now put pip frees, but this time inside the P two environment I have pi jokes 0.4.0 even though

109
00:08:15.580 --> 00:08:17.260
in the virtual environment p one.

110
00:08:17.260 --> 00:08:18.610
I have the newest version.

111
00:08:19.940 --> 00:08:25.530
So in each window we can see that each virtual environment has its own modules or libraries.

112
00:08:25.550 --> 00:08:30.080
That is its own reality or its own independent universe to work with.

113
00:08:30.080 --> 00:08:34.430
Python And how do we deactivate an environment?

114
00:08:35.120 --> 00:08:38.270
We just type deactivate and it's the activated it.

115
00:08:38.690 --> 00:08:44.810
Notice that P one doesn't appear anymore at the beginning of my line and here we're going to also write

116
00:08:44.810 --> 00:08:47.480
the activate and we have left the virtual environment.

117
00:08:47.480 --> 00:08:48.320
P two.

118
00:08:49.520 --> 00:08:54.920
These are just examples that you can understand how virtual environments work and what is the logic

119
00:08:54.920 --> 00:09:00.470
of structuring a space in which you can work from scratch, clean with new folders, etc.?

120
00:09:01.670 --> 00:09:07.130
So we go back to my environment and we're going to delete Projects one and Project two, which were

121
00:09:07.130 --> 00:09:09.560
only created for demonstration purposes.

122
00:09:10.670 --> 00:09:15.680
And now we're going to create the virtual environment that we're going to use inside today's main project.

123
00:09:16.130 --> 00:09:21.260
Of course, I recommend that you have a folder like my environment or something like that, in which

124
00:09:21.260 --> 00:09:24.530
you will always store all your virtual environments.

125
00:09:25.130 --> 00:09:29.630
This is great to have them in order to be able to access them in a clear and precise way.

126
00:09:30.800 --> 00:09:35.870
So now let's open another command prompt and we're going to create a space called my web.

127
00:09:36.830 --> 00:09:38.890
We're going to create it here in the folders.

128
00:09:38.900 --> 00:09:40.970
You could do it through the command prompt.

129
00:09:41.000 --> 00:09:42.110
It's the same thing.

130
00:09:42.830 --> 00:09:47.780
So we put my web and it's going to be the space where I'm going to host my environment.

131
00:09:49.010 --> 00:09:56.330
And here we access again with CD desktop backslash, my environment backslash, my web and enter.

132
00:09:58.090 --> 00:10:05.320
I'm already in the space that I want to use virtual EMV, and we're going to call Webb to this space.

133
00:10:06.490 --> 00:10:08.920
The virtual space is being created there.

134
00:10:09.610 --> 00:10:15.880
We're going to activate it now with dot backslash, the name of the space backslash scripts, backslash

135
00:10:15.880 --> 00:10:16.720
activate.

136
00:10:17.200 --> 00:10:19.750
At some point you're going to do this with your eyes closed.

137
00:10:20.230 --> 00:10:21.550
Okay, it's generated.

138
00:10:21.550 --> 00:10:26.890
And here we have the space in which from the next lesson onwards, we're going to start with Django

139
00:10:27.280 --> 00:10:29.620
in order to create today's project.

140
00:10:30.340 --> 00:10:32.110
So see you in the next lesson.
