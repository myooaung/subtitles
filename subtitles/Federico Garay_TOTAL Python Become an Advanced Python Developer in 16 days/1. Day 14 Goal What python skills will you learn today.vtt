WEBVTT
1
00:00:07.670 --> 00:00:13.700
Welcome to day 14 a day that is really going to take you to a new level because you are going to learn

2
00:00:13.700 --> 00:00:17.420
how to use Python to do facial recognition.

3
00:00:17.570 --> 00:00:25.040
Facial recognition is a way to identify a person or confirm that a person's identity by their face through

4
00:00:25.040 --> 00:00:27.640
photos, videos or cameras in real time.

5
00:00:27.650 --> 00:00:34.490
Nowadays, facial recognition or facial biometrics is being used in numerous areas of life and is projected

6
00:00:34.490 --> 00:00:40.970
to become more widespread in the future, making it an area of programming in which job opportunities

7
00:00:40.970 --> 00:00:42.220
will be expanded.

8
00:00:42.230 --> 00:00:48.440
It is currently used in phone unlocking security forces, airport and border, secure and control,

9
00:00:48.440 --> 00:00:55.820
searching for missing persons, detection of conflictive persons in retail stores, banking operations,

10
00:00:55.820 --> 00:01:01.850
monitoring of restricted people in casinos, work attendance, control and much, much more.

11
00:01:01.910 --> 00:01:07.340
Today, you are going to create an application to control and register the entry of employees to their

12
00:01:07.340 --> 00:01:10.160
workplace through facial recognition.

13
00:01:10.160 --> 00:01:16.100
By camera, your program will be able to see the people who stand in front of your computer's webcam.

14
00:01:16.100 --> 00:01:23.120
It will recognize their identity and register in a spreadsheet who that person is and at what time they

15
00:01:23.120 --> 00:01:24.170
were identified.

16
00:01:24.170 --> 00:01:31.010
For this, we will first learn the basics of how facial biometrics works so that we can use this powerful

17
00:01:31.010 --> 00:01:34.040
technology in any application we can think of.

18
00:01:34.250 --> 00:01:37.400
But how does facial recognition technically work?

19
00:01:37.400 --> 00:01:42.410
By comparing the faces of people passing in front of a special camera with the image of people in a

20
00:01:42.410 --> 00:01:43.250
checklist.

21
00:01:43.520 --> 00:01:49.190
Checklist can contain pictures of any person, for example, employees of a company.

22
00:01:49.190 --> 00:01:51.800
In general, the process tends to be like this.

23
00:01:51.920 --> 00:01:54.140
Step one Facial recognition.

24
00:01:54.140 --> 00:01:59.630
The camera detects and locates the image of a face, either from a person being by themselves or in

25
00:01:59.630 --> 00:02:03.800
the middle of a crowd step to facial analysis.

26
00:02:03.800 --> 00:02:06.950
The image of the face is captured and analyzed.

27
00:02:06.950 --> 00:02:13.700
The software reads the faces geometry, taking into account several key factors, such as the distance

28
00:02:13.700 --> 00:02:19.200
between the eyes, the depth of the eye sockets, the distance from the forehead to the chin, the shape

29
00:02:19.200 --> 00:02:22.940
of the cheekbones, the contour of the lips, ears and chin.

30
00:02:23.210 --> 00:02:28.610
The goal is to identify facial landmarks that are key to distinguishing a unique face.

31
00:02:29.120 --> 00:02:32.150
Step three Image to Data Conversion.

32
00:02:32.150 --> 00:02:40.040
The face capture process transforms analog information a face into a set of digital information data

33
00:02:40.040 --> 00:02:42.710
based on the person's facial features.

34
00:02:42.800 --> 00:02:47.330
Basically, the face analysis is converted into a mathematical formula.

35
00:02:47.330 --> 00:02:55.160
The numerical code is called Hog Hog, which stands for histograms of oriented gradients for human detection.

36
00:02:55.160 --> 00:02:57.890
And it's basically the fingerprint of your face.

37
00:02:57.890 --> 00:03:04.760
In the same way that your fingerprints are unique, each person has their own facial print step for

38
00:03:04.760 --> 00:03:05.900
finding a match.

39
00:03:05.900 --> 00:03:09.950
The facial print is compared to a database of other known faces.

40
00:03:09.950 --> 00:03:15.770
If the facial print matches an image in the facial recognition database, then a determination will

41
00:03:15.770 --> 00:03:16.370
be made.

42
00:03:16.370 --> 00:03:22.190
Facial recognition is considered to be one of the most natural and least intrusive forms of identification,

43
00:03:22.190 --> 00:03:28.670
as we normally recognize ourselves and others by looking at faces rather than fingerprints or irises.

44
00:03:28.670 --> 00:03:34.190
In a few seconds, if you click on the video below, you're going to be programming a facial recognition

45
00:03:34.190 --> 00:03:35.120
application.
