WEBVTT
1
00:00:08.300 --> 00:00:13.100
So at this point in our code, we already know which of the people in the database matches the face

2
00:00:13.100 --> 00:00:15.350
of the person in the webcam, which is me.

3
00:00:15.710 --> 00:00:22.430
So instead of the last print, we no longer want to show something so simple but something more specific.

4
00:00:23.300 --> 00:00:27.950
So let's go to search for the name of the employee found.

5
00:00:28.430 --> 00:00:30.320
And remember that we have the name stored.

6
00:00:30.320 --> 00:00:35.510
So we are going to do it in a variable that is going to be called employee name, which is going to

7
00:00:35.510 --> 00:00:40.910
be equal to the list employee names, but only the one found in the match index.

8
00:00:42.090 --> 00:00:47.760
We do this because the match index was the smallest number in this list it was indexed to.

9
00:00:47.940 --> 00:00:53.490
So in the list of names that we have up here, it's going to look for index two and that's Federico

10
00:00:53.490 --> 00:00:54.090
Garcia.

11
00:00:54.780 --> 00:00:58.220
So now employee name stores the value.

12
00:00:58.230 --> 00:00:59.700
Federico Gary.

13
00:01:00.540 --> 00:01:03.180
This is because I was the one in front of the camera.

14
00:01:03.540 --> 00:01:08.700
If Jerry Seinfeld comes to my house and stands in front of the camera, in that case, it would be index

15
00:01:08.700 --> 00:01:11.010
four, but we won't be able to check it.

16
00:01:11.790 --> 00:01:20.400
What follows is show the image obtained and we do it with CV two with the method I am show.

17
00:01:21.890 --> 00:01:22.460
That name.

18
00:01:22.460 --> 00:01:24.440
We're going to put Web image.

19
00:01:25.070 --> 00:01:28.730
This is what we're going to be seeing when the capture is seen in the window.

20
00:01:30.190 --> 00:01:31.780
What image is going to be shown?

21
00:01:31.990 --> 00:01:34.390
The one stored in the variable image.

22
00:01:36.070 --> 00:01:38.920
And then so that it doesn't disappear from our image.

23
00:01:38.920 --> 00:01:47.560
When the code is finished and we can't see it, we're going to put keep window open with CV two dot

24
00:01:47.560 --> 00:01:50.530
weight key with the value zero.

25
00:01:52.090 --> 00:01:52.840
We weren't again.

26
00:01:52.840 --> 00:01:56.530
And I'm going to have to prepare myself to be photographed many times today.

27
00:01:57.040 --> 00:02:01.980
So I take off my glasses, smile at the camera, and here I am at the top.

28
00:02:01.990 --> 00:02:05.490
It says Web Image, which is the title I gave to it.

29
00:02:06.740 --> 00:02:09.680
Now we'd like to show the rectangle on that face.

30
00:02:10.160 --> 00:02:15.470
So here, before we display the image, we're going to create a series of variables which might scare

31
00:02:15.470 --> 00:02:22.010
you a little because they're y one, x, two, Y two and X one.

32
00:02:22.580 --> 00:02:27.320
And you're wondering what what are these four variables Fred is generating here?

33
00:02:27.680 --> 00:02:33.560
Well, they're going to store the four location points that are generated when we place the face in

34
00:02:33.560 --> 00:02:34.280
the photo.

35
00:02:34.760 --> 00:02:38.780
Remember that the generates four lines top right, bottom and left.

36
00:02:38.990 --> 00:02:41.930
And those four locations are going to be stored here.

37
00:02:43.300 --> 00:02:44.680
So where do we get them from?

38
00:02:44.920 --> 00:02:47.470
From the variable location phase.

39
00:02:48.340 --> 00:02:53.500
If at this point you're a bit lost and you say, what was location phase?

40
00:02:53.920 --> 00:03:00.940
Well, it's the variable that we generate in the for loop that we are in when we store in face everything

41
00:03:00.940 --> 00:03:07.570
that comes from encoded, captured face and in location face, everything that comes from captured face.

42
00:03:08.080 --> 00:03:11.230
So location face has captured face.

43
00:03:12.700 --> 00:03:14.140
And what is captured face?

44
00:03:14.620 --> 00:03:16.090
Let's go further up.

45
00:03:16.480 --> 00:03:20.470
It is the result of applying face locations on our image.

46
00:03:21.230 --> 00:03:27.290
In short face locations, takes the image, locates the face, and passes that information to captured

47
00:03:27.290 --> 00:03:27.920
face.

48
00:03:28.850 --> 00:03:35.540
And then in the for loop we make it so that with each image captured, face is passed to location face.

49
00:03:36.500 --> 00:03:41.090
So at this point, location face contains the four values we need.

50
00:03:42.230 --> 00:03:48.080
Storing them in these variables, we can now manipulate them separately in order to create the rectangle.

51
00:03:48.620 --> 00:03:56.360
So we call cv2 dot rectangle as we did before, and now we pass image to be the base where the rectangle

52
00:03:56.360 --> 00:03:57.440
is going to be drawn.

53
00:03:57.890 --> 00:04:04.130
And then we construct two reference points the top left vertex of our rectangle, which is going to

54
00:04:04.130 --> 00:04:12.440
be at X one and Y one, and the next tuple corresponds to the values of the lower right vertex, which

55
00:04:12.440 --> 00:04:15.110
is going to be where x two is with y two.

56
00:04:15.990 --> 00:04:18.930
So I do it fast because I've been thinking a lot about it.

57
00:04:19.260 --> 00:04:23.940
You might find it a little difficult to identify how to construct this, but if you think about it for

58
00:04:23.940 --> 00:04:26.040
a while, it all makes perfect sense.

59
00:04:26.960 --> 00:04:30.710
Next, we're going to give a rectangle, a color like we did before.

60
00:04:30.740 --> 00:04:36.230
We're going to make it green with the values zero two, five, five and zero.

61
00:04:37.160 --> 00:04:40.340
We're going to give it a thickness that's going to be equal to two.

62
00:04:41.030 --> 00:04:45.470
And if we run this again, we're going to recreate our list of characters which are going to appear

63
00:04:45.470 --> 00:04:46.370
in an instant.

64
00:04:47.460 --> 00:04:48.660
Now comes the picture.

65
00:04:48.840 --> 00:04:50.030
I'm getting ready.

66
00:04:50.040 --> 00:04:51.150
And there it is.

67
00:04:51.900 --> 00:04:55.890
And as you can see, I now appear with the rectangle on my face.

68
00:04:57.030 --> 00:05:02.490
Now, I would also like a small rectangle to appear underneath that that contains the name of the person

69
00:05:02.490 --> 00:05:03.120
found.

70
00:05:03.450 --> 00:05:09.930
So let's continue here on the next line with another cv2 and we're going to create another rectangle

71
00:05:09.930 --> 00:05:12.270
and we're going to take the data we have above.

72
00:05:13.320 --> 00:05:14.790
We're going to put the image in.

73
00:05:14.790 --> 00:05:21.750
And then we're going to set a different vertex, which is going to be equal to x one next to Y two.

74
00:05:22.140 --> 00:05:28.620
So we're making the bottom left vertex, but we're going to subtract 35 pixels from it.

75
00:05:28.650 --> 00:05:35.190
This is going to make a new box, have a vertex just below the main rectangle, and the other vertex

76
00:05:35.190 --> 00:05:36.600
is going to be x two.

77
00:05:36.630 --> 00:05:38.460
At its meeting with y two.

78
00:05:38.790 --> 00:05:39.960
Nothing more than that.

79
00:05:40.200 --> 00:05:44.310
So the box is going to be located exactly below the main rectangle.

80
00:05:46.100 --> 00:05:49.100
Copy these values again to match the colour and thickness.

81
00:05:49.190 --> 00:05:54.500
But this time, instead of a border of two, we're going to change it to a method of CV two, which

82
00:05:54.500 --> 00:05:58.610
is filled with this will fill the whole rectangle with green.

83
00:05:59.630 --> 00:06:01.790
And now we need to put some text in there.

84
00:06:01.790 --> 00:06:11.060
So CV two dot put text is going to be placed in image as text is going to be put whatever is in employee

85
00:06:11.060 --> 00:06:13.220
name in this case.

86
00:06:13.220 --> 00:06:14.150
Federico, go.

87
00:06:15.890 --> 00:06:22.250
Then we're going to put a location for this which is going to be x one plus six so that it is distance

88
00:06:22.250 --> 00:06:29.990
from the left edge and the next value of this vertex is going to be y two minus six so that it is distance

89
00:06:29.990 --> 00:06:31.250
from the top edge.

90
00:06:31.940 --> 00:06:38.870
Now CV two dot font Hershey complex for the lettering and we set the scale to one.

91
00:06:39.680 --> 00:06:42.080
Then the colour of the text is going to be white.

92
00:06:42.080 --> 00:06:51.890
So we can say 255, 255, 255 and we're going to add a two to this to set the line thickness of the

93
00:06:51.890 --> 00:06:52.520
text.

94
00:06:53.360 --> 00:06:56.900
So I think we're all set to do one more test.

95
00:06:57.560 --> 00:07:01.250
We're going to call the code again and I'm getting ready for the picture.

96
00:07:02.210 --> 00:07:06.680
And there I am in one of the most horrible shots of my life.

97
00:07:06.680 --> 00:07:10.370
But with the rectangle and the name, I'm not going to complain.

98
00:07:11.390 --> 00:07:15.740
The last test we want to do is to see what happens if another person appears on the screen.

99
00:07:15.950 --> 00:07:22.520
So I have my phone ready with a picture of the actor playing George Constanza to see if identifies him.

100
00:07:23.260 --> 00:07:28.810
So we run and this time I can keep my glasses on because I'm putting my phone in front of the camera.

101
00:07:29.110 --> 00:07:33.850
And the system recognizes that the one who appeared on camera this time is George.

102
00:07:34.090 --> 00:07:36.130
And this time it threw up his name.

103
00:07:36.580 --> 00:07:39.940
So our facial recogniser is working perfectly.

104
00:07:39.940 --> 00:07:43.360
But although our program seems complete, it is still missing.

105
00:07:43.360 --> 00:07:44.770
One more detail.

106
00:07:45.040 --> 00:07:50.500
Now we need to make it so that every time it recognizes someone, it stores some information in a log,

107
00:07:50.530 --> 00:07:55.510
but then allows us to track attendance, checking who attended and what time they arrived.

108
00:07:56.500 --> 00:08:00.760
And we're going to do this in the next lesson where we will finish our program.
