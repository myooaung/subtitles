1
00:00:07,950 --> 00:00:12,870
And now we have our first tasks and we want to display them as a list on our website.

2
00:00:13,110 --> 00:00:15,330
So let's create our first view.

3
00:00:15,600 --> 00:00:19,920
We're going to come to views p y where we created the function earlier.

4
00:00:20,490 --> 00:00:26,220
And here we're going to change a few things because this was just to show you how we could get a HTTP

5
00:00:26,220 --> 00:00:29,250
response to display something on the screen.

6
00:00:29,460 --> 00:00:33,300
We're going to remove this import and we're not going to use it anymore.

7
00:00:33,690 --> 00:00:37,230
We're also going to remove this function, which is not going to be needed.

8
00:00:37,770 --> 00:00:40,050
And we're going to rephrase this a bit.

9
00:00:40,410 --> 00:00:46,050
Now we're going to import from Django dot views, dot generic dot list.

10
00:00:46,830 --> 00:00:49,680
And from here, we're going to import list view.

11
00:00:50,010 --> 00:00:52,410
And you might be wondering what is list view?

12
00:00:52,950 --> 00:00:57,180
Well, List View is a type of page that represents a list of objects.

13
00:00:57,870 --> 00:01:02,790
So while this view is running, it's going to display a list of objects that this view is operating

14
00:01:02,790 --> 00:01:03,120
on.

15
00:01:03,720 --> 00:01:08,730
And generally, these objects are going to be the result of a query, because generally we don't show

16
00:01:08,730 --> 00:01:12,300
a complete database, but filtered by search criteria.

17
00:01:12,780 --> 00:01:17,880
So in this way, the objects shown in our list view can change according to what we want to show.

18
00:01:18,480 --> 00:01:24,540
Moreover, we cannot set a hard list of items to be displayed because our tasks can be deleted or new

19
00:01:24,540 --> 00:01:25,530
ones can appear.

20
00:01:26,370 --> 00:01:32,580
So we can use the list view not only to show a complete list, but also a list filtered by some search

21
00:01:32,580 --> 00:01:33,480
criteria.

22
00:01:34,050 --> 00:01:39,660
So what are we going to create here is not a function, but a class called Pending List.

23
00:01:40,560 --> 00:01:43,020
And this class inherits from list view.

24
00:01:43,950 --> 00:01:46,470
And what does list view require to work?

25
00:01:47,160 --> 00:01:54,420
It requires a model that is a complete list of objects and the query set that will be a filtered query

26
00:01:54,420 --> 00:01:58,440
which establishes which objects of that model are the ones we want to show.

27
00:01:58,770 --> 00:02:00,780
We will see the latter later.

28
00:02:01,140 --> 00:02:07,020
For now, let's assign a model which is going to be equal to the complete list, which is task.

29
00:02:07,320 --> 00:02:11,910
And of course, it gives us an error because we haven't imported it into this file yet.

30
00:02:12,390 --> 00:02:14,610
Our task list is inside models.

31
00:02:14,630 --> 00:02:15,630
Dot py.

32
00:02:15,900 --> 00:02:16,860
Here you see it.

33
00:02:17,460 --> 00:02:18,660
It's a class.

34
00:02:18,660 --> 00:02:28,830
So in views we're also going to import from dot models import task and now you're going to stop complaining

35
00:02:28,950 --> 00:02:31,530
and we can set our model as a task.

36
00:02:31,860 --> 00:02:37,650
And since this is a view, I want to use it in a different way inside the base URLs module I have here.

37
00:02:38,460 --> 00:02:41,850
Remember this one that we use to display the URLs patterns?

38
00:02:42,390 --> 00:02:47,550
Well, here we're also going to remove these views that we've imported and now we're going to import

39
00:02:47,550 --> 00:02:48,390
it differently.

40
00:02:48,690 --> 00:02:53,910
We're going to put from dot views, import pending list.

41
00:02:54,510 --> 00:03:01,500
And now we have to correct this views that we have inside calling pending list because this URL patterns

42
00:03:01,500 --> 00:03:03,060
cannot show classes.

43
00:03:03,360 --> 00:03:06,210
We're going to apply a method that is as view.

44
00:03:07,530 --> 00:03:11,970
By placing it like this, it will be able to display our class pending list as a view.

45
00:03:13,090 --> 00:03:17,890
This would technically be ready because we have already connected the URL to our view.

46
00:03:18,340 --> 00:03:24,520
So when we refresh our URL in the browser, it should already know that it has to point to our list.

47
00:03:25,390 --> 00:03:31,840
But we are still missing a detail because the URL knows what it has to show, but it doesn't know how

48
00:03:31,840 --> 00:03:34,360
to show it because we haven't configured that yet.

49
00:03:35,100 --> 00:03:37,560
So we still have to set up our template.

50
00:03:37,950 --> 00:03:43,260
If I refresh this, we're going to get an error that tells us that it didn't exist in our template.

51
00:03:43,980 --> 00:03:45,300
It says Inside Base.

52
00:03:45,330 --> 00:03:50,100
It looks for the HTML file, but it doesn't find anything there.

53
00:03:50,340 --> 00:03:52,080
So that's what we need to set up.

54
00:03:53,040 --> 00:03:57,360
So let's create this template that Django looks for by default in this place.

55
00:03:57,750 --> 00:03:59,280
And let's copy that name.

56
00:03:59,550 --> 00:04:03,090
There are different ways to store this template, and I'm going to do it this way.

57
00:04:03,450 --> 00:04:07,590
We're going to come here in our list of folders and files and on the base.

58
00:04:07,590 --> 00:04:11,880
I'm going to create a new directory, which is going to be called templates.

59
00:04:12,180 --> 00:04:14,970
And it's important that you name it just like that.

60
00:04:15,540 --> 00:04:19,590
Now, I already have templates inside base and inside templates.

61
00:04:19,590 --> 00:04:24,660
I'm going to create another directory that is going to seem strange to you, but it's going to have

62
00:04:24,660 --> 00:04:26,190
the name base two.

63
00:04:26,550 --> 00:04:32,910
Because here we're going to have a different templates and the one we want for now is for base, even

64
00:04:32,910 --> 00:04:35,070
though it repeats the name of our project.

65
00:04:36,230 --> 00:04:41,960
And here in bass, we're going to create a new file which is going to have the name we just copied with

66
00:04:41,960 --> 00:04:43,640
the ending HTML.

67
00:04:44,510 --> 00:04:49,160
And here we have a different file to the ones we've been using so far because it's going to receive

68
00:04:49,490 --> 00:04:50,600
HTML code.

69
00:04:51,650 --> 00:04:56,600
Now we're going to write the code for the content of our view, and now it's going to be pure content

70
00:04:56,600 --> 00:04:58,010
without any styling.

71
00:04:58,130 --> 00:05:03,380
Note this there's going to be no colors, no shapes, no fonts, none of that.

72
00:05:03,680 --> 00:05:05,030
We'll do that later.

73
00:05:05,060 --> 00:05:08,210
For now, we're going to create the pure structure of our content.

74
00:05:09,230 --> 00:05:14,900
So remember when we watched Web scraping a couple of days ago when we learned the difference between

75
00:05:15,200 --> 00:05:16,730
HTML and CSS?

76
00:05:17,120 --> 00:05:18,680
That's what it's all about.

77
00:05:18,920 --> 00:05:23,240
Well, let's start by creating a title here with a tag called H1.

78
00:05:23,720 --> 00:05:26,690
And inside this tag we're going to write Pending List.

79
00:05:27,050 --> 00:05:30,230
And here we've already given some information to our code.

80
00:05:31,580 --> 00:05:39,380
So remember that HTML is written inside tags that open and close h one is telling it that this is a

81
00:05:39,380 --> 00:05:42,680
main Title eight, a type one title.

82
00:05:43,760 --> 00:05:47,990
Let's go back to our site and let's refresh now and see what happens.

83
00:05:48,530 --> 00:05:50,900
And it tells us it can't find it either.

84
00:05:51,770 --> 00:05:56,840
Well, the reason it doesn't find it is because it's looking for it at this address where it should

85
00:05:56,840 --> 00:06:00,950
go all the way to templates base and find this HTML file.

86
00:06:01,910 --> 00:06:07,700
And of course, the problem is that we have not yet configured within the project the settings file

87
00:06:07,880 --> 00:06:10,670
where we have assigned the applications we've installed.

88
00:06:11,660 --> 00:06:15,770
So notice that if we go further down, we have templates here.

89
00:06:15,770 --> 00:06:20,390
It says where our application should look for the templates needed to configure its views.

90
00:06:21,500 --> 00:06:28,790
Well, here we have to update drives and put the location where we have this file which is in templates.

91
00:06:30,200 --> 00:06:32,480
The templates are located in this folder.

92
00:06:32,690 --> 00:06:36,980
So we're going to copy its path here and we're going to copy the full name.

93
00:06:37,430 --> 00:06:42,350
We're going to paste it here between these brackets and we're going to put in quotes.

94
00:06:42,530 --> 00:06:48,620
And we're also going to transform the back slashes into double back slashes so that it interprets it

95
00:06:48,650 --> 00:06:53,750
accordingly and not generate special characters here and here.

96
00:06:54,980 --> 00:06:58,490
So we've already told that where where to look for the templates.

97
00:06:58,820 --> 00:07:04,700
And it's in this address in templates which points to this folder where you find the folder with the

98
00:07:04,700 --> 00:07:10,760
name of the application and in here a task list which has just this header.

99
00:07:11,360 --> 00:07:16,250
So the assumption is that if we refresh again now that it knows where to look, it knows to show us

100
00:07:16,250 --> 00:07:18,620
this header which says pending list.

101
00:07:19,730 --> 00:07:24,800
Next, we want some information to be printed in our view, information that's going to be different

102
00:07:24,800 --> 00:07:30,290
each time because when we display the items in the list, those items are going to change.

103
00:07:31,130 --> 00:07:33,170
So how do we pass them to Django?

104
00:07:33,770 --> 00:07:39,500
By default, Django calls this list of objects that we already have, and first I want it to display

105
00:07:39,500 --> 00:07:40,940
it here in a table.

106
00:07:42,050 --> 00:07:48,050
So I go back to this HTML file and the next element or tag that I want to have is a table.

107
00:07:48,380 --> 00:07:50,930
And here we have a space to create a table.

108
00:07:52,270 --> 00:07:55,720
The first element that our table is going to have is a table row.

109
00:07:56,170 --> 00:08:00,640
This is put in with the label TR, which stands for Table Row.

110
00:08:01,240 --> 00:08:05,170
And here we're going to put a header with the label H for table header.

111
00:08:05,650 --> 00:08:08,560
And here, let's just put the word items here.

112
00:08:09,010 --> 00:08:10,000
It's a good header.

113
00:08:10,990 --> 00:08:16,750
Once this TR ends, we want a four loop to start iterating through all the items in our list.

114
00:08:17,320 --> 00:08:20,080
So how do we write a for loop inside Django?

115
00:08:21,250 --> 00:08:26,740
We do it with the square brackets with the percent sign, and then we put for each task that we find

116
00:08:26,740 --> 00:08:27,970
in this object list.

117
00:08:28,180 --> 00:08:34,030
This is a default name that points properly and we're going to close with the percent sign and the square

118
00:08:34,030 --> 00:08:35,200
brackets again.

119
00:08:36,190 --> 00:08:38,550
Here goes the body of our for loop.

120
00:08:38,560 --> 00:08:44,530
And while we're down there, we mark the closing of the loop with the same signs and here we put end

121
00:08:44,530 --> 00:08:45,160
four.

122
00:08:45,820 --> 00:08:48,070
This is a bit different than what we're used to.

123
00:08:49,480 --> 00:08:53,710
Then we want for that each task that it finds inside the list.

124
00:08:54,310 --> 00:08:56,650
What it does is to show it in a table.

125
00:08:57,850 --> 00:09:04,870
So for each record, that's going to be a table row where there is going to be a T d, which is a table

126
00:09:04,870 --> 00:09:12,070
data cell where we're going to put with two square brackets that open and close task dot title.

127
00:09:13,600 --> 00:09:15,160
So where does this come from?

128
00:09:15,550 --> 00:09:21,250
If we go to our model, we find the inside task, we have the element title, and that it is an element

129
00:09:21,250 --> 00:09:23,590
that is going to show for each of the tasks.

130
00:09:24,790 --> 00:09:29,620
With this, we already have a loop that goes through each element of the list objects and that will

131
00:09:29,620 --> 00:09:34,930
show the title of each task in case our list becomes empty.

132
00:09:34,930 --> 00:09:40,450
At some point we're going to put a conditional here, which is put again with the same symbology as

133
00:09:40,450 --> 00:09:43,120
before, where we put empty.

134
00:09:43,360 --> 00:09:49,810
We close this and inside we put a title that can be H three, which is a title of a lower category than

135
00:09:49,810 --> 00:09:56,140
H one, where it says something like, There are no items in this list.

136
00:09:57,610 --> 00:10:03,790
To familiarize yourself with writing in Django, its Python style code with a few variations.

137
00:10:04,360 --> 00:10:10,090
For example, you write your functions in square brackets with percentages, and the double brackets

138
00:10:10,090 --> 00:10:14,650
are to accommodate variables, in this case, the title of each of our tasks.

139
00:10:14,890 --> 00:10:19,270
So we go back to our site and we go to refresh and we get an error.

140
00:10:20,260 --> 00:10:25,570
It tells us that there is an invalid block tag on this line number which is empty.

141
00:10:26,080 --> 00:10:28,420
So let's see, let's see what it means.

142
00:10:28,720 --> 00:10:30,250
Let's check that line.

143
00:10:30,250 --> 00:10:35,710
And yes, here we have the empty and the problem that is is outside the loop.

144
00:10:36,490 --> 00:10:41,260
So this should be inside so that it can consider this condition before the end of our loop.

145
00:10:42,520 --> 00:10:43,060
Now.

146
00:10:43,060 --> 00:10:50,440
Yes, we refresh again and we have a pending list with the header element, which is items and then

147
00:10:50,440 --> 00:10:52,810
our three tasks that we wrote earlier.

148
00:10:54,610 --> 00:11:00,520
And finally, before we finish this lesson, I want to customise this name object list that we've used

149
00:11:00,520 --> 00:11:02,230
here in the search.

150
00:11:02,890 --> 00:11:04,270
That's a generic name.

151
00:11:04,270 --> 00:11:07,150
So I want to customise it so that it's easier to read.

152
00:11:07,330 --> 00:11:14,080
So I'm going to go to our views file and I'm going to add here that in addition to a model, let's have

153
00:11:14,080 --> 00:11:16,240
a context object name.

154
00:11:17,320 --> 00:11:22,180
Basically, this serves to contextualize the name of the objects that it is called according to the

155
00:11:22,180 --> 00:11:23,860
elements of our environment.

156
00:11:24,730 --> 00:11:29,800
In our context, the name I would like it to have is tasks to make it more meaningful.

157
00:11:30,720 --> 00:11:37,140
So I go back to our HTML file and here instead of object list, we're going to put tasks.

158
00:11:37,980 --> 00:11:45,120
And now here we can read for every task in tasks and this is more readable and it should still work

159
00:11:45,120 --> 00:11:47,760
the same way we refresh it.

160
00:11:47,760 --> 00:11:48,630
Perfect.

161
00:11:48,630 --> 00:11:50,520
It's still pointing where it belongs.

162
00:11:51,480 --> 00:11:57,360
This is all about how to build an elementary view, because in this case it is not styled or anything.

163
00:11:57,450 --> 00:12:01,920
But in the next lesson, we're going to move on to the detail view, which is the next step.

164
00:12:02,250 --> 00:12:03,750
So I'll wait for you there.
