WEBVTT
1
00:00:08.040 --> 00:00:13.380
So as you know, our game is almost complete and we just can't see the score, which means we can't

2
00:00:13.380 --> 00:00:15.360
know how many enemies we've defeated.

3
00:00:15.600 --> 00:00:19.350
So we're going to display our score on the game screen, not the console.

4
00:00:19.530 --> 00:00:23.520
So let's look for a variable we created before, which is score.

5
00:00:24.270 --> 00:00:24.930
Here it is.

6
00:00:24.930 --> 00:00:26.700
And initiates at zero.

7
00:00:27.120 --> 00:00:33.030
We called it inside collision so as to increase the score every time we shoot an enemy and then it is

8
00:00:33.030 --> 00:00:34.590
printed on the console.

9
00:00:35.250 --> 00:00:40.200
So we'll remove this because we don't want it to see it on the console, but on the screen.

10
00:00:40.830 --> 00:00:47.250
So let's go back to the score variable and let's create another one named my underscore font, which

11
00:00:47.250 --> 00:00:51.150
will store a PI game tool named font dot font.

12
00:00:52.290 --> 00:00:55.890
This requires two parameters a font name and a size.

13
00:00:56.430 --> 00:00:57.450
So it a string.

14
00:00:57.460 --> 00:01:06.690
We'll write free sans bold dot tbtf, which is the font I chose and then the size which is 32.

15
00:01:07.380 --> 00:01:10.590
This is the only built in font in pi game.

16
00:01:11.130 --> 00:01:15.270
So in a couple of minutes I'm going to show you how to add any font you want.

17
00:01:15.690 --> 00:01:22.650
But for now we'll have a variable containing all this information, so our score will need more variables.

18
00:01:22.800 --> 00:01:25.530
We want to replace it somewhere on the screen.

19
00:01:26.160 --> 00:01:28.650
So we're going to add some coordinates to it.

20
00:01:28.860 --> 00:01:34.770
So let's create the variable named text X to store coordinate x, which can be ten.

21
00:01:34.890 --> 00:01:40.050
And this way the score will be on the left side of the screen, but not too close to the edge.

22
00:01:40.320 --> 00:01:43.400
So let's add text Y and ten as well.

23
00:01:43.410 --> 00:01:46.590
So it is close to the top edge, but not too close.

24
00:01:47.220 --> 00:01:54.360
So now we have to define a function which will be described as show score function and it will be named

25
00:01:54.360 --> 00:01:55.560
show score.

26
00:01:56.610 --> 00:02:00.660
When called, this function will require coordinates X and y.

27
00:02:01.170 --> 00:02:03.900
So now we have to add information to this function.

28
00:02:04.530 --> 00:02:09.090
If we did it the traditional way, we'd use methods like screen dot blip.

29
00:02:09.420 --> 00:02:15.510
But it's different with fonts and I'll show you what we have here is not an image as in the case of

30
00:02:15.510 --> 00:02:17.520
enemies, bullets and background.

31
00:02:18.000 --> 00:02:24.330
We have to create a text so we'll create a create a variable named text and we'll add all the information

32
00:02:24.330 --> 00:02:27.960
on that text and then it will be displayed on the screen.

33
00:02:28.650 --> 00:02:31.500
So text will store everything that's inside font.

34
00:02:31.500 --> 00:02:33.630
So let's call font dot.

35
00:02:33.630 --> 00:02:35.400
And here we have some options.

36
00:02:35.910 --> 00:02:39.720
The first one is render, which requires a couple of parameters.

37
00:02:40.320 --> 00:02:47.940
First, we need a text, so we'll create a string little rule that says Score colon space and then we

38
00:02:47.940 --> 00:02:51.120
make a call to the score variable we're created before.

39
00:02:51.480 --> 00:02:58.680
This is the text we're going to read on the screen, add a comma to continue with the next value and

40
00:02:58.680 --> 00:03:02.580
we have to decide if it will be an alias we enter.

41
00:03:02.580 --> 00:03:10.560
True, then it requires a color, so we're going to employ the g b values in order to choose what to

42
00:03:10.560 --> 00:03:10.770
do.

43
00:03:10.770 --> 00:03:13.230
So each color needs the maximum value.

44
00:03:13.230 --> 00:03:19.020
So let's enter 255, 255 and 255.

45
00:03:19.830 --> 00:03:22.440
So if you prefer another color, that's up to you.

46
00:03:23.280 --> 00:03:29.310
Once we create our text, we can call screen dot BLITT in order to display it.

47
00:03:29.760 --> 00:03:32.520
So we need the image name, which is text.

48
00:03:32.880 --> 00:03:39.600
Now we have to enter a tuple with coordinates, so we put x and y which are the values assigned to the

49
00:03:39.600 --> 00:03:40.050
function.

50
00:03:40.050 --> 00:03:45.660
When it's called, we have our function ready and now we have to invoke it somewhere.

51
00:03:46.680 --> 00:03:52.710
So of course this has to be done inside the loop so that the image lingers and it is updated in each

52
00:03:52.710 --> 00:03:53.610
iteration.

53
00:03:54.450 --> 00:04:01.560
So we're going to put it before the last line and we enter show score, which is the name of our function

54
00:04:01.680 --> 00:04:05.310
and the parameters which are text X and text Y.

55
00:04:06.410 --> 00:04:08.060
So our score should be ready.

56
00:04:08.060 --> 00:04:10.130
Selects execute our program.

57
00:04:11.450 --> 00:04:18.500
Our score is at zero and if I start shooting enemies, our score increases one, two and so on.

58
00:04:19.130 --> 00:04:20.770
So it's working perfectly.

59
00:04:20.780 --> 00:04:23.990
We could modify the size and or parameters.

60
00:04:24.320 --> 00:04:30.470
So to change the font, as promised, you need to download one from any website and save it in a folder.

61
00:04:30.890 --> 00:04:33.440
So I downloaded this one fastest.

62
00:04:33.950 --> 00:04:37.280
It belongs to this site, but you can use any site you want.

63
00:04:38.430 --> 00:04:42.240
You'll receive a zip file, which you just need to decompress inside the folder.

64
00:04:42.240 --> 00:04:43.140
And that's it.

65
00:04:43.710 --> 00:04:47.010
So now we can call fast test dot tx.

66
00:04:48.420 --> 00:04:51.320
So let's go to where we set up the font over here.

67
00:04:51.330 --> 00:04:55.710
And instead of free sounds bold, we put fast test tx.

68
00:04:56.850 --> 00:05:00.360
So now we execute it and we see that our text has changed.

69
00:05:00.720 --> 00:05:01.560
It wouldn't say.

70
00:05:01.560 --> 00:05:03.780
I wouldn't say it's nicer, but it's different.

71
00:05:04.140 --> 00:05:06.570
So you can use any font you want.

72
00:05:07.200 --> 00:05:10.150
So what do you say if we add one more thing to our game?

73
00:05:10.170 --> 00:05:16.440
Let's add some sound and program end when our character dies as he's caught by the enemies.

74
00:05:16.830 --> 00:05:18.360
Let's go to the next lesson.
