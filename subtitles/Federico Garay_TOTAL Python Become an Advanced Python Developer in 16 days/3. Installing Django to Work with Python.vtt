WEBVTT
1
00:00:07.940 --> 00:00:10.370
In this lesson, we're going to do the next step.

2
00:00:10.580 --> 00:00:15.320
We've already created our virtual environment, and now we're going to install Django.

3
00:00:16.160 --> 00:00:23.060
We're going to do it as we already know, with PIP install, but we put Django and this will install

4
00:00:23.060 --> 00:00:28.070
in our virtual environment the latest version of Django that is available at the moment.

5
00:00:29.090 --> 00:00:34.100
It's important to remember that I'm not installing it on my computer in general, but it's only going

6
00:00:34.100 --> 00:00:36.770
to work in the context of my virtual environment.

7
00:00:37.070 --> 00:00:41.720
It is finishing downloading and we'll give it a few more seconds and now it's ready.

8
00:00:42.620 --> 00:00:48.770
I put pip freeze to see it and it's going to show me that in this context I actually have four modules

9
00:00:49.610 --> 00:00:58.820
because along with Django, it downloads a SGI ref SQL policy and PT Z data.

10
00:01:00.050 --> 00:01:05.150
Now I'm going to create a subfolder in my environment which is going to function as source.

11
00:01:05.750 --> 00:01:07.850
It's where I'm going to store my project.

12
00:01:08.120 --> 00:01:10.460
And typically this is a good place.

13
00:01:10.460 --> 00:01:15.380
We call it CRC for Source for a change.

14
00:01:15.380 --> 00:01:19.130
We're not going to create it from the Explorer, but directly from command.

15
00:01:19.130 --> 00:01:30.770
Prompt putting M.K. Die which if you remember means make directory and here we put s RC and now inside

16
00:01:30.770 --> 00:01:35.630
my web we have CRC and web, which is our virtual environment.

17
00:01:36.590 --> 00:01:41.990
We're going to navigate from here with C, D to C to get into that folder.

18
00:01:41.990 --> 00:01:44.300
And now we're going to start our project.

19
00:01:44.630 --> 00:01:45.950
So how do we do it?

20
00:01:46.400 --> 00:01:52.760
The command you have to type in the console is Django admin and then the keyword start project.

21
00:01:53.540 --> 00:01:57.740
Hey, we're going to name it here, which can be simply project.

22
00:01:58.400 --> 00:02:02.030
This takes a few seconds and it's already started.

23
00:02:02.180 --> 00:02:05.480
We're going to see inside the folders going into source.

24
00:02:05.480 --> 00:02:11.690
We find the folder project in which we have to click and we have this file which is very important,

25
00:02:11.690 --> 00:02:14.510
which is a python file called Manage.

26
00:02:15.660 --> 00:02:20.070
This is the file from which we're going to manage everything that happens with our project, which you're

27
00:02:20.070 --> 00:02:22.200
going to see in just a few seconds.

28
00:02:23.220 --> 00:02:26.250
Now back to the console and I ask for your patience.

29
00:02:26.250 --> 00:02:31.020
If all this still doesn't make much sense to you, just repeat my steps for now.

30
00:02:31.020 --> 00:02:35.730
And I promise that as we move forward, you'll get a better understanding of this dynamic.

31
00:02:36.660 --> 00:02:40.260
So we've created a source and we've hosted our project there.

32
00:02:40.680 --> 00:02:42.750
Now let's start our server.

33
00:02:43.230 --> 00:02:44.550
What is the server?

34
00:02:45.150 --> 00:02:49.140
It's the site from which we're going to run the website that we're going to create.

35
00:02:49.800 --> 00:02:55.470
So we type python manage dot py, which is this file we've just seen.

36
00:02:55.710 --> 00:03:00.270
And the command run server we run and we get an error.

37
00:03:00.270 --> 00:03:01.140
Of course.

38
00:03:01.470 --> 00:03:01.980
Of course.

39
00:03:01.980 --> 00:03:07.560
We should have gone to the project folder because that's where managed copy is located.

40
00:03:08.280 --> 00:03:15.810
We put see the project and now from here python manage p y and run server.

41
00:03:17.010 --> 00:03:18.810
Now we're in the right place to run.

42
00:03:18.900 --> 00:03:27.780
And as you can see, a new file is generated here inside the folder, which is DB dot Q Light three.

43
00:03:29.280 --> 00:03:31.710
And let's read two more things here.

44
00:03:31.920 --> 00:03:36.510
The first one says you have 18 and applied migrations.

45
00:03:36.990 --> 00:03:43.110
Your project may not work properly until you apply the migrations for apps, admin, etc..

46
00:03:43.500 --> 00:03:46.110
Don't worry because we'll solve this in a jiffy.

47
00:03:47.270 --> 00:03:52.700
On the other hand, we're looking at a Web address here, and this is a very, very important thing

48
00:03:52.700 --> 00:04:00.530
because this is the URL where the website is hosted locally while we're creating it, so we can copy

49
00:04:00.530 --> 00:04:01.220
that link.

50
00:04:02.670 --> 00:04:04.530
And now we can see this site.

51
00:04:04.890 --> 00:04:10.970
If we go to the browser, we paste in the URL and Tyler, congratulations.

52
00:04:10.980 --> 00:04:13.560
Django has been successfully installed.

53
00:04:15.430 --> 00:04:20.410
Here we have the documentation, some tutorials and a link to the Django community.

54
00:04:22.060 --> 00:04:26.740
The important thing is that we now have the place where our website is going to be when we start to

55
00:04:26.740 --> 00:04:27.590
develop it.

56
00:04:27.610 --> 00:04:33.310
And on the other side, after the Web address, if we write slash admin, this will take us to a site

57
00:04:33.310 --> 00:04:35.740
that still returns an operational error.

58
00:04:36.040 --> 00:04:40.570
And this is because we have not yet done the migration that the console asked us to do.

59
00:04:41.710 --> 00:04:42.790
How do we do it?

60
00:04:43.660 --> 00:04:45.160
We go back to the console.

61
00:04:45.160 --> 00:04:53.320
We put Control plus C to exit this execution and the next command we give is with Python manager p y

62
00:04:53.470 --> 00:04:58.150
and now the command will not be run server as before, but migrate.

63
00:04:58.960 --> 00:05:02.500
Now we're going to migrate those files that were pending migration.

64
00:05:02.680 --> 00:05:10.300
We're going to rerun the server with Python manager API run server and we run it again and it returns

65
00:05:10.300 --> 00:05:12.250
the same URL as before.

66
00:05:13.030 --> 00:05:20.200
So if we refresh our browser now, it does take us to a place where we can log in with a username and

67
00:05:20.200 --> 00:05:20.950
password.

68
00:05:21.130 --> 00:05:27.550
By default it is loaded with my computer name and password, but if I click on log in as it is, it

69
00:05:27.550 --> 00:05:30.040
does not recognize me as an administrator.

70
00:05:30.460 --> 00:05:33.580
This is because we have never generated this user.

71
00:05:33.790 --> 00:05:35.950
We have to do it from the console.

72
00:05:36.700 --> 00:05:43.210
We put control in C to exit the execution and we do it again through Python managed API.

73
00:05:43.360 --> 00:05:46.450
But the command we give now is create super user.

74
00:05:47.140 --> 00:05:48.740
This will give us some options.

75
00:05:48.760 --> 00:05:52.630
The username can be left blank to use the name you have on the machine.

76
00:05:52.900 --> 00:05:54.490
Mine is Wynn ten.

77
00:05:54.910 --> 00:05:56.790
I'm going to leave that one directly.

78
00:05:57.580 --> 00:06:03.280
The email address you can leave blank and the password, which has to be at least eight characters long,

79
00:06:03.280 --> 00:06:05.980
is going to fill it in with a personal password.

80
00:06:07.210 --> 00:06:09.850
You don't see it on the screen, but I put it in.

81
00:06:10.720 --> 00:06:15.490
Now I have to repeat it and it says Super user created successfully.

82
00:06:16.330 --> 00:06:20.980
If I now come back here, leave when ten and enter my password and press log in.

83
00:06:21.130 --> 00:06:22.210
It gives me an error.

84
00:06:22.450 --> 00:06:26.230
Of course, this is because I have to run the server again.

85
00:06:26.230 --> 00:06:34.810
After having created the super user again, we put python manager p run server and now I can go on.

86
00:06:35.200 --> 00:06:40.990
I run again here with refresh and well now I'm logged in with the super user that it automatically loaded

87
00:06:40.990 --> 00:06:42.070
on my computer.

88
00:06:42.430 --> 00:06:47.890
So while I was doing my internship I automatically generated the same username and password and that's

89
00:06:47.890 --> 00:06:49.270
why I logged in directly.

90
00:06:49.270 --> 00:06:51.160
You have to retype all of this.

91
00:06:51.370 --> 00:06:56.950
So we run a site that says Django Administration and this is not what the end user is going to see,

92
00:06:56.950 --> 00:06:58.840
but only the site administrator.

93
00:07:00.170 --> 00:07:03.200
Here we have tools to administer groups and users.

94
00:07:03.410 --> 00:07:08.660
And if I click on users, we see here some details that say that for now the only user is me.

95
00:07:09.260 --> 00:07:11.600
And it says I have staff status.

96
00:07:12.410 --> 00:07:16.790
If I click on this, it will take me to a bunch of tools to customize my user status.

97
00:07:17.570 --> 00:07:22.520
So we're going to continue to look at this in the next lesson, and I'm ready to get to work starting

98
00:07:22.520 --> 00:07:23.870
in the next lesson.

99
00:07:24.080 --> 00:07:24.860
See you there.
