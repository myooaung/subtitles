1
00:00:07,650 --> 00:00:14,010
Welcome to a lecture on variables, one of the most important concepts in programming in general.

2
00:00:15,060 --> 00:00:20,970
And to explain what a variable is, I want you to think of a box, a simple box.

3
00:00:21,660 --> 00:00:25,740
This box is a space that allows us to put things inside.

4
00:00:26,520 --> 00:00:30,450
Now, let's name this box, for example, my favorite book.

5
00:00:31,080 --> 00:00:34,150
Now, this box exists for me to store in it.

6
00:00:34,170 --> 00:00:35,790
The book I like the most.

7
00:00:36,240 --> 00:00:36,900
So I do it.

8
00:00:37,230 --> 00:00:39,180
And now my box has content.

9
00:00:39,540 --> 00:00:41,160
It has a value.

10
00:00:42,000 --> 00:00:48,600
But let's imagine I read another book the next month and I like this new book so much it becomes my

11
00:00:48,600 --> 00:00:49,650
new favorite book.

12
00:00:50,340 --> 00:00:54,420
So I replaced the content of my box with the new book.

13
00:00:55,380 --> 00:00:58,350
Basically, my box is a variable.

14
00:00:58,620 --> 00:01:03,740
It is a space that I have created to store something and that something can change.

15
00:01:03,750 --> 00:01:04,680
It can vary.

16
00:01:05,010 --> 00:01:07,500
That is why it is called a variable.

17
00:01:07,770 --> 00:01:14,700
In programming, a variable is a memory space to which you give a name and it is reserve so that you

18
00:01:14,700 --> 00:01:18,510
can store it in any content or value that you want.

19
00:01:19,020 --> 00:01:21,000
You can even leave it empty if you want.

20
00:01:21,450 --> 00:01:23,070
And still a variable.

21
00:01:23,400 --> 00:01:26,730
Let's dive deeper into variables right now in pie chart.

22
00:01:27,420 --> 00:01:28,050
Thanks, Bill.

23
00:01:28,800 --> 00:01:34,620
But before we start writing data code, let's get a little bit of order in these folders because up

24
00:01:34,620 --> 00:01:38,850
to now, we've just been mindlessly adding files inside this vote root fo the python.

25
00:01:39,630 --> 00:01:44,070
But I'd like to be able to save this in folders so we can organize it and have everything easier to

26
00:01:44,070 --> 00:01:47,730
find, because at some point we're going to have hundreds of files.

27
00:01:47,940 --> 00:01:53,730
So we right click in Python, we create a new directory, and this creates a folder that we're going

28
00:01:53,730 --> 00:01:54,600
to give a name.

29
00:01:54,870 --> 00:01:59,550
It can be they won and they will put inside everything we learned yesterday.

30
00:02:00,840 --> 00:02:05,310
Then I select the four files that were created yesterday and we put them in day one.

31
00:02:06,660 --> 00:02:11,820
It's going to ask us to refactor because we have to relocate those files to the new path.

32
00:02:12,540 --> 00:02:13,710
So we refactor.

33
00:02:14,100 --> 00:02:17,370
Everything is now saved in day one and we can see it like this.

34
00:02:17,640 --> 00:02:22,770
So we're now going to create a new directory that this time is going to be called data.

35
00:02:22,950 --> 00:02:28,500
And data is going to contain for now only a new file to which we're going to name as variables.

36
00:02:29,920 --> 00:02:33,760
And remember to make it dot p so it understands the python code.

37
00:02:34,090 --> 00:02:34,690
So we close.

38
00:02:34,690 --> 00:02:36,340
These are the files from yesterday.

39
00:02:36,850 --> 00:02:40,510
We can also close our column here and now we can only see data.

40
00:02:40,960 --> 00:02:45,520
Well, we said that we're going to learn variables and the variables are boxes that contain a value

41
00:02:45,850 --> 00:02:47,560
and that value can be changed.

42
00:02:48,160 --> 00:02:51,340
So let's create our first box, which is going to be called name.

43
00:02:52,030 --> 00:02:57,790
We declare it this way directly with the word that we want to use as title for that variable, and then

44
00:02:57,790 --> 00:02:59,650
we're going to assign a content to it.

45
00:02:59,890 --> 00:03:02,890
This is to say that it's going to be equal to something.

46
00:03:03,310 --> 00:03:04,800
This time I'm going to give it a name.

47
00:03:04,810 --> 00:03:05,860
For example, John.

48
00:03:06,670 --> 00:03:09,190
John is the content of the variable called name.

49
00:03:10,150 --> 00:03:16,180
So if I want to print, for example, the variable name, I should print on the screen, not the word

50
00:03:16,180 --> 00:03:18,370
name, which is not a string.

51
00:03:18,370 --> 00:03:21,430
It doesn't have quotes, but the content of the variable.

52
00:03:22,290 --> 00:03:23,280
And let's execute it.

53
00:03:24,220 --> 00:03:25,540
Let's come here to execute.

54
00:03:26,420 --> 00:03:31,450
Oh, well, we still have the brewery here, so we'll need to find a new way, a new file.

55
00:03:32,050 --> 00:03:35,250
We're going to do that through Run, Run again.

56
00:03:35,260 --> 00:03:37,240
And we choose variables this time.

57
00:03:38,390 --> 00:03:39,680
Okay, it's run.

58
00:03:39,680 --> 00:03:45,740
And now it shows as John instead of name, it shows the content of that variable, which is John.

59
00:03:46,010 --> 00:03:49,950
While we're at it, let's adjust the console so it doesn't show down here.

60
00:03:50,060 --> 00:03:51,410
This isn't comfortable for me.

61
00:03:51,920 --> 00:03:54,050
So let's click on this icon here to choose.

62
00:03:54,050 --> 00:03:59,450
Move to the upper right corner and now we can see our console next to our code.

63
00:04:00,050 --> 00:04:01,700
It looks much more comfortable to me.

64
00:04:02,480 --> 00:04:02,960
All right.

65
00:04:03,260 --> 00:04:06,560
As we said, variables are just variables because they vary.

66
00:04:06,650 --> 00:04:09,830
So we can assign another value to the variable code name.

67
00:04:10,250 --> 00:04:14,660
For that, I simply declare it again and I say that it's new content.

68
00:04:14,660 --> 00:04:17,300
Is Laura another different name?

69
00:04:17,990 --> 00:04:21,020
What do you think will happen if I now print name again?

70
00:04:21,440 --> 00:04:23,930
Notice that it is the same command I gave before.

71
00:04:24,170 --> 00:04:27,680
They're not different in any way and it is another point in the code.

72
00:04:28,190 --> 00:04:31,310
Take a second to imagine what is going to be printed on the console.

73
00:04:32,230 --> 00:04:34,720
Well, let's print it out and see what it looks like.

74
00:04:35,440 --> 00:04:38,140
First you see John and then Laura.

75
00:04:38,950 --> 00:04:44,740
And this is because although we printed both times the same variable at this point of the code in line

76
00:04:44,740 --> 00:04:47,020
to the variable still had as value.

77
00:04:47,020 --> 00:04:49,660
John And that's why it printed the word John.

78
00:04:49,900 --> 00:04:55,540
We then assigned a new value to it, then we asked it to print again, but this time it printed with

79
00:04:55,540 --> 00:04:57,130
its new value, which is Laura.

80
00:04:57,910 --> 00:04:59,950
And this is what makes variables interesting.

81
00:05:00,100 --> 00:05:02,650
You can make them dynamically change their content.

82
00:05:03,100 --> 00:05:06,970
So regarding the names we give to the variables, I named it as name.

83
00:05:07,510 --> 00:05:09,040
I could have named it as anything.

84
00:05:09,610 --> 00:05:10,420
It could be called.

85
00:05:10,420 --> 00:05:12,550
X x x x x x.

86
00:05:13,480 --> 00:05:17,140
And if I asked it to print x x x, it would work exactly the same.

87
00:05:17,590 --> 00:05:22,750
The important thing is that not in the name of the variable but its content and that you then invoke

88
00:05:22,750 --> 00:05:23,560
it correctly.

89
00:05:24,070 --> 00:05:29,680
There are, however, some conventions and good practices to name your variables and we are going to

90
00:05:29,680 --> 00:05:31,060
see that in the next lecture.

91
00:05:32,100 --> 00:05:33,640
For now, let's continue learning.

92
00:05:33,990 --> 00:05:34,920
And let's see what we can.

93
00:05:34,920 --> 00:05:39,870
Also assign a numeric content to variables, for example integer.

94
00:05:40,290 --> 00:05:45,690
If my variable is called age, it can have a value that is, for example, 30.

95
00:05:46,410 --> 00:05:49,920
And if I then print age, we're going to see exactly that.

96
00:05:49,950 --> 00:05:51,720
We're going to see the value 30.

97
00:05:52,170 --> 00:05:54,870
Variables can also be added together if they are numbers.

98
00:05:55,140 --> 00:06:01,650
For example, let's have another variable called age two and age two will be equal to 15.

99
00:06:02,370 --> 00:06:06,300
And if I print age plus age two, we run it.

100
00:06:07,540 --> 00:06:09,880
And it prints the sum, which is 45.

101
00:06:10,180 --> 00:06:16,180
I've added two values that were assigned to two variables, and it worked exactly like a mathematical

102
00:06:16,180 --> 00:06:16,780
operation.

103
00:06:17,110 --> 00:06:23,080
So is also interesting that you can use the input function that we have used so far to actually use

104
00:06:23,080 --> 00:06:24,040
it to tell us something.

105
00:06:25,020 --> 00:06:29,640
For example, tell me your name, which would be something that we ask the user.

106
00:06:30,030 --> 00:06:32,370
We're going to do it inside the input function.

107
00:06:33,390 --> 00:06:35,160
We can ask them to tell us his name.

108
00:06:35,550 --> 00:06:41,790
But what if this time, instead of printing it directly, we assign this user input to a variable called

109
00:06:41,820 --> 00:06:43,520
name name.

110
00:06:43,650 --> 00:06:47,160
It says Here is the same as whatever is entered when we ask.

111
00:06:47,190 --> 00:06:48,060
Tell me your name.

112
00:06:48,240 --> 00:06:54,000
So now I can print a concatenation that says your name is then a space.

113
00:06:54,840 --> 00:06:58,230
Then I concatenate and set the variable name.

114
00:06:59,180 --> 00:07:00,920
So let's see what happens when we run this.

115
00:07:01,700 --> 00:07:03,110
They asked me to tell it my name.

116
00:07:03,500 --> 00:07:04,820
My name is Federico.

117
00:07:05,330 --> 00:07:06,770
Your name is Federico.

118
00:07:07,160 --> 00:07:08,060
I already knew that.

119
00:07:08,420 --> 00:07:13,010
But it's nice that I was able to do it this way by storing my value inside a variable.

120
00:07:13,640 --> 00:07:14,840
So now I can.

121
00:07:15,380 --> 00:07:17,090
Well, I don't even need to print this.

122
00:07:17,540 --> 00:07:19,100
We're going to delete the print box.

123
00:07:19,400 --> 00:07:19,970
We run it.

124
00:07:20,630 --> 00:07:22,200
It's going to ask me for the name.

125
00:07:22,220 --> 00:07:29,600
I say Federico, and you can then come up with their zip code and never print the user's input or use

126
00:07:29,600 --> 00:07:30,830
it for any of the purposes.

127
00:07:31,100 --> 00:07:36,410
But the good thing is that now you can store this information in a variable and manipulate it later

128
00:07:36,410 --> 00:07:37,100
as you wish.

129
00:07:37,670 --> 00:07:39,560
You can also concatenate variables.

130
00:07:40,100 --> 00:07:43,880
If your variable has a string value, for example, it will say hello.

131
00:07:44,750 --> 00:07:47,810
We leave a space and the other one will be called name too.

132
00:07:48,290 --> 00:07:49,500
And it will have the content.

133
00:07:49,520 --> 00:07:50,120
Python.

134
00:07:51,440 --> 00:07:54,260
Well, let's now create a variable called phrase.

135
00:07:55,330 --> 00:07:59,830
That will be equal to the concatenated content of name one plus name two.

136
00:08:00,610 --> 00:08:07,050
And if I print now directly phrase, what I'm going to get on the screen is going to be an error.

137
00:08:07,660 --> 00:08:08,080
Oh, yes.

138
00:08:08,080 --> 00:08:10,590
Because the first valuable was name, not name one.

139
00:08:10,660 --> 00:08:11,080
Sorry.

140
00:08:12,290 --> 00:08:19,610
So now we run it again and I get hello python because phrase has now not only one word is content but

141
00:08:19,610 --> 00:08:28,760
two variables that each has a content name is hello name two is Python and phrase is hello python.

142
00:08:29,240 --> 00:08:32,060
And if we do it with numbers, we can also add them together.

143
00:08:32,390 --> 00:08:38,270
Let's suppose the first variable is going to be called age and it is going to have the value of 30.

144
00:08:38,810 --> 00:08:44,720
The second one is going to be called age two and it is going to have the value of 50 and phrase, well,

145
00:08:44,720 --> 00:08:51,200
let's leave phrase as as the name will contain age plus age two and we print phrase.

146
00:08:52,160 --> 00:08:55,400
What we will have on the screen, it will be 80 the sum.

147
00:08:55,640 --> 00:09:00,650
Now, what this variable did was to contain a sum composed by two variables.

148
00:09:01,080 --> 00:09:02,420
It worked exactly the same.

149
00:09:02,540 --> 00:09:05,510
So this is enough to begin to see the use of variable.

150
00:09:06,360 --> 00:09:08,910
Will expand on this much more throughout the course.

151
00:09:09,270 --> 00:09:12,960
So thank you again for joining us in this lecture and see you in the next one.
