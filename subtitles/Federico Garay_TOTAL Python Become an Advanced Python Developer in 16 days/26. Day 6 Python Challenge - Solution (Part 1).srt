1
00:00:07,820 --> 00:00:11,990
I'm not going to say the solution to this challenge is complicated, but it is long.

2
00:00:12,020 --> 00:00:15,080
There is a lot to write and I think it's better if we show it to you.

3
00:00:15,080 --> 00:00:16,310
Broken down into steps.

4
00:00:16,340 --> 00:00:21,740
In this first video, we are going to build the skeleton, the basic and linear structure that our code

5
00:00:21,740 --> 00:00:22,610
should follow.

6
00:00:22,790 --> 00:00:28,220
This way we will be able to better see what functions we need to build out to make the code flow as

7
00:00:28,220 --> 00:00:29,010
expected.

8
00:00:29,030 --> 00:00:31,220
So let's go over to pie term to start.

9
00:00:32,060 --> 00:00:38,630
Start by generating the structure of our code in a non executable way simply to understand what our

10
00:00:38,630 --> 00:00:41,660
functions and our executable code have to do later.

11
00:00:42,320 --> 00:00:47,300
Let's say that our code will need a start menu from which the user can choose an option.

12
00:00:47,810 --> 00:00:50,570
So we'll first show start menu.

13
00:00:50,570 --> 00:00:54,110
And this is a function that will be in charge of organizing everything.

14
00:00:54,920 --> 00:01:00,650
Here the user is going to choose something and we'll create a provisional variable which could be called

15
00:01:00,650 --> 00:01:06,770
menu, where we will store the users choice and we will start the variable at zero, which is not an

16
00:01:06,770 --> 00:01:11,060
option since the user can choose between one and six as said before.

17
00:01:11,360 --> 00:01:12,080
Perfect.

18
00:01:12,080 --> 00:01:17,570
So let's make a decision tree so that the system knows what to do according to the user's choice.

19
00:01:18,290 --> 00:01:24,420
So let's say the F menu is equal to option one, which serves to read a recipe.

20
00:01:24,440 --> 00:01:26,570
So what does the code have to do?

21
00:01:27,440 --> 00:01:31,160
It has to have a function that first shows all the categories that exist.

22
00:01:31,550 --> 00:01:36,200
After that, it has to have a second function to ask the user to choose a category.

23
00:01:36,800 --> 00:01:42,800
The user will choose a category and another function is required that shows all recipes within that

24
00:01:42,800 --> 00:01:43,520
category.

25
00:01:44,690 --> 00:01:48,590
And then another function that lets them choose one of those recipes.

26
00:01:48,680 --> 00:01:53,900
Finally, one last function responsible for reading the recipe chosen by the user.

27
00:01:55,130 --> 00:01:59,000
And now the program should offer the user to go back to the start menu.

28
00:01:59,090 --> 00:02:00,470
Go back to menu.

29
00:02:00,590 --> 00:02:03,560
This is one more function you will need to create.

30
00:02:03,830 --> 00:02:06,790
So why do we have to create all of these functions?

31
00:02:06,800 --> 00:02:11,840
Because as some of these functions have to repeat themselves throughout different options, it works

32
00:02:11,840 --> 00:02:17,990
better to have an executable code that we can call in different situations without having to type it

33
00:02:17,990 --> 00:02:19,250
again and again.

34
00:02:20,630 --> 00:02:21,380
Great.

35
00:02:21,470 --> 00:02:28,190
Now we have option one from the menu and here we will type pass simply for Python to stop complaining.

36
00:02:28,190 --> 00:02:34,700
So we can see that if the menu chosen by the user is option two, the one necessary to create a new

37
00:02:34,700 --> 00:02:38,720
recipe something similar to what happened with option one will occur.

38
00:02:39,530 --> 00:02:45,170
So let's show the categories and make the user choose one category and then add another variable to

39
00:02:45,170 --> 00:02:47,090
create a new recipe.

40
00:02:47,630 --> 00:02:50,270
And now again, go back to menu.

41
00:02:51,960 --> 00:02:54,810
This way we can move on to the third option.

42
00:02:54,900 --> 00:02:58,320
So what happens if the user chooses option three?

43
00:02:59,150 --> 00:03:02,870
Option three serves for the user to create a new category.

44
00:03:04,590 --> 00:03:04,980
Here.

45
00:03:04,980 --> 00:03:08,400
There's no need for the user to see the categories and stuff.

46
00:03:08,700 --> 00:03:13,050
We will simply begin with a function to create a category and that's it.

47
00:03:13,410 --> 00:03:18,360
Also, we add go back to menu variable and move on to the next option.

48
00:03:19,190 --> 00:03:23,030
So this is the option that activates if the user picks number four.

49
00:03:23,330 --> 00:03:29,150
This option serves to eliminate recipes and here we will copy a lot from the beginning because this

50
00:03:29,150 --> 00:03:34,280
option will be in charge of showing the categories, then choosing the categories, showing the recipes,

51
00:03:34,280 --> 00:03:36,080
and finally choosing them.

52
00:03:36,650 --> 00:03:37,130
Right.

53
00:03:37,130 --> 00:03:38,930
Everything is almost the same.

54
00:03:38,930 --> 00:03:40,420
So I will copy and paste.

55
00:03:40,430 --> 00:03:44,240
The only thing that changes is read recipe to eliminate recipe.

56
00:03:44,630 --> 00:03:50,450
Various methods or functions similar to those of option one will go here with the exception of the elemental

57
00:03:50,450 --> 00:03:54,860
one, which is eliminate recipe we add path.

58
00:03:55,940 --> 00:04:02,270
Then we have option five from the menu, which would be the one responsible to eliminate a category.

59
00:04:02,540 --> 00:04:05,840
And this is also similar but just up to the beginning.

60
00:04:06,770 --> 00:04:12,380
So it will need to show the categories and choose a category to then eliminate the category.

61
00:04:14,070 --> 00:04:19,410
Then this go back to the beginning and we type pass to do so.

62
00:04:20,580 --> 00:04:25,200
Finally, we have the last function which activates if the user chooses option six.

63
00:04:25,230 --> 00:04:27,330
Its job is to end the program.

64
00:04:27,750 --> 00:04:32,760
So here we type end program and we add pass here to avoid any complaints.

65
00:04:33,270 --> 00:04:33,890
Very good.

66
00:04:33,900 --> 00:04:35,670
So this is the structure of our code.

67
00:04:35,700 --> 00:04:41,190
All we have to do now is to create functions that replace these blue lines so as to have an executable

68
00:04:41,190 --> 00:04:41,760
code.

69
00:04:42,210 --> 00:04:47,610
This is important whenever you type something whose tree would be hard to keep in your mind all the

70
00:04:47,610 --> 00:04:48,240
time.

71
00:04:48,690 --> 00:04:53,580
So working in this way is very organized and practical, and I think that if you continue working like

72
00:04:53,580 --> 00:04:55,680
this, it will help you a lot.

73
00:04:56,520 --> 00:04:58,290
So far, so good.

74
00:04:58,320 --> 00:05:03,750
Now it's time to go to the following lesson where you will learn to create the initial code of our program

75
00:05:03,750 --> 00:05:05,250
and the start menu.

76
00:05:05,760 --> 00:05:06,810
I'll see you there.
