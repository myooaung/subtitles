1
00:00:07,830 --> 00:00:11,640
In this lesson, we're going to add a search element to our application.

2
00:00:11,940 --> 00:00:17,160
We're going to create here above elements a text box where the user can put a word and then press a

3
00:00:17,160 --> 00:00:18,060
search button.

4
00:00:18,540 --> 00:00:23,460
So the only the tasks that contain that word or that fragment of a word are shown.

5
00:00:23,730 --> 00:00:26,460
So let's imagine you have 50 or 100 tasks.

6
00:00:26,460 --> 00:00:28,590
Well, you could use a search engine.

7
00:00:29,220 --> 00:00:34,650
And in order to test this, let's create another task containing the word bread so that when we search

8
00:00:34,650 --> 00:00:36,930
for that word, two tasks will appear.

9
00:00:37,930 --> 00:00:41,200
We can put something like buy a bread basket.

10
00:00:42,370 --> 00:00:46,930
And with this we have five tasks, two of which contain the expression breadth.

11
00:00:48,160 --> 00:00:53,890
Now let's go to pie chart to add inside task list, a new form.

12
00:00:53,890 --> 00:00:59,920
And with this form it's going to have a method which is not going to be equal to post as we have done

13
00:00:59,920 --> 00:01:04,510
until now, but it's going to be a method of type get.

14
00:01:05,140 --> 00:01:09,580
This is because now we're not creating new information or posting something.

15
00:01:09,670 --> 00:01:11,650
We are requesting information.

16
00:01:12,760 --> 00:01:18,010
And inside this form we're going to create two inputs, the first one for the text box.

17
00:01:18,160 --> 00:01:24,220
So I put input that is of type equal to text no longer submit.

18
00:01:24,220 --> 00:01:30,970
Like when we create buttons, then this text box will need a name which will be search area and we close

19
00:01:30,970 --> 00:01:31,720
the input.

20
00:01:32,770 --> 00:01:37,990
Later we're going to add a value so that something will be displayed once the user has entered something.

21
00:01:38,560 --> 00:01:43,480
But for now we're going to leave it empty because we need to generate some things first.

22
00:01:44,110 --> 00:01:47,050
The second input we want to create here is a button.

23
00:01:47,590 --> 00:01:53,530
So the type is going to be submit and its value is going to be the text search.

24
00:01:54,320 --> 00:01:58,310
And with this we close this input and we already have our two elements.

25
00:01:58,460 --> 00:02:05,630
And if we come to the form and refresh here, we already can see and I can put any word here and here

26
00:02:05,630 --> 00:02:06,770
we will search for it.

27
00:02:07,490 --> 00:02:12,290
But this doesn't have any logic programmed into it yet, so it doesn't do anything.

28
00:02:12,290 --> 00:02:15,650
We're going to program it now, but inside views.

29
00:02:16,670 --> 00:02:20,240
So we're going to find the view that corresponds to pending list.

30
00:02:20,240 --> 00:02:21,470
And we see that here.

31
00:02:21,470 --> 00:02:27,140
We already have some filters because this page shows us only those tasks that belong to the user that

32
00:02:27,140 --> 00:02:27,920
is logged in.

33
00:02:28,460 --> 00:02:32,180
And of those tasks it only shows the ones that are not completed.

34
00:02:32,600 --> 00:02:34,580
And now we want to add another filter.

35
00:02:35,030 --> 00:02:39,470
We want to only show the tasks that the user has searched for in the text box.

36
00:02:40,330 --> 00:02:42,160
So we do this in the following way.

37
00:02:42,930 --> 00:02:49,410
First we create a variable which can be called search value, and we're going to say that search value

38
00:02:49,410 --> 00:02:50,730
is equal to self.

39
00:02:51,030 --> 00:02:52,410
Request to get.

40
00:02:53,240 --> 00:02:55,670
Then the get method again.

41
00:02:55,790 --> 00:03:01,730
But with lowercase this time and here we're going to pass whatever is in search area.

42
00:03:02,450 --> 00:03:06,860
So if someone puts bread there, then bread is going to be the search value.

43
00:03:07,160 --> 00:03:14,600
And before showing the tasks, that is before returning the context this view is going to set if search

44
00:03:14,600 --> 00:03:22,490
value that is, if it is true, which is the same as saying if it is not empty in that case, it is

45
00:03:22,490 --> 00:03:30,320
going to determine that from now on the context of tasks will be the same as the context of task again,

46
00:03:30,320 --> 00:03:38,300
but this time with a filter, and we'll only take those whose title double underscore contains that

47
00:03:38,300 --> 00:03:38,870
value.

48
00:03:39,650 --> 00:03:45,350
We write this as I contains with the I before contains.

49
00:03:46,220 --> 00:03:51,470
This means that it will show all those whose title contains the search value.

50
00:03:53,750 --> 00:03:59,210
And now we need to add here that in the definition of search value, we also have to take into account

51
00:03:59,210 --> 00:04:00,830
that this box can be empty.

52
00:04:01,540 --> 00:04:08,680
In that case, we put all on the empty, inverted commas so that we can see all the tasks in case there

53
00:04:08,680 --> 00:04:10,300
is nothing entered in the search box.

54
00:04:12,140 --> 00:04:12,740
With this.

55
00:04:12,740 --> 00:04:17,600
We're supposed to have everything ready so that we can put, for example, bread and search for it.

56
00:04:18,050 --> 00:04:21,500
It filters them and only shows us the two texts that include that word.

57
00:04:22,490 --> 00:04:27,740
What I would like to change here is that when I click on search, that word doesn't disappear from the

58
00:04:27,740 --> 00:04:28,610
text box.

59
00:04:29,150 --> 00:04:31,280
And we do this by going back to views.

60
00:04:31,280 --> 00:04:38,360
And here we're going to add after we've left here and after we've done the logic test, that the context

61
00:04:38,630 --> 00:04:42,830
which now corresponds to search value is equal to search value.

62
00:04:44,180 --> 00:04:48,650
And this is then going to make it be the value of the context.

63
00:04:49,280 --> 00:04:56,390
And therefore in task list where we have this input, the text box, we're going to add a value that

64
00:04:56,390 --> 00:05:00,680
is going to be equal to what we have in the variable search value.

65
00:05:01,820 --> 00:05:05,680
So now if I search for any word, for example, bread, then I press the button.

66
00:05:05,690 --> 00:05:07,490
It doesn't disappear from here.

67
00:05:08,540 --> 00:05:12,920
So we're going to delete and we're going to search back so that we can they can all appear.

68
00:05:14,150 --> 00:05:15,740
Let's put here, Mindy.

69
00:05:16,280 --> 00:05:20,090
We put search, and it only shows us this task.

70
00:05:20,270 --> 00:05:23,750
And in the text box, we see the searched word.

71
00:05:24,980 --> 00:05:30,380
Our application is practically complete in terms of functionality, in terms of logic, and in terms

72
00:05:30,380 --> 00:05:31,670
of the elements it has.

73
00:05:32,060 --> 00:05:37,670
What was missing and maybe what you've been waiting to do for a long time is to add a style to it,

74
00:05:37,670 --> 00:05:43,100
make it attractive, because for now, our site, if there is one thing it doesn't have, is an attractive

75
00:05:43,100 --> 00:05:43,640
look.

76
00:05:43,850 --> 00:05:45,920
It's just text on a blank screen.

77
00:05:46,280 --> 00:05:49,070
So we're going to style it in the next lesson.
