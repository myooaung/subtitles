1
00:00:07,850 --> 00:00:13,340
In this lecture, we are not only going to learn how to generate random numbers programmatically and

2
00:00:13,340 --> 00:00:19,400
in a very easy way, but we are also going to see for the very first time how to import methods into

3
00:00:19,400 --> 00:00:20,120
Python.

4
00:00:20,150 --> 00:00:25,400
In this case, we're going to need a method called random, which stands for Random Integer, and this

5
00:00:25,400 --> 00:00:29,510
is a method for Python to return, obviously a random integer.

6
00:00:29,510 --> 00:00:36,920
But the problem is that random, it is a method that belongs to a python library called random, and

7
00:00:36,920 --> 00:00:39,760
the random methods are not loaded directly.

8
00:00:39,770 --> 00:00:46,580
That is to say they are not available to be used unless you import them manually to import a method

9
00:00:46,580 --> 00:00:49,010
from a library we already have.

10
00:00:49,010 --> 00:00:55,160
We need to talk to Python like this, this library, import this method.

11
00:00:55,550 --> 00:01:03,650
In the case of the random method, which is the random library, we say from random import random.

12
00:01:04,520 --> 00:01:10,430
And in case you need a lot of methods from a certain library, you can save time by directly replacing

13
00:01:10,430 --> 00:01:14,120
a method name with an asterisk, which means all.

14
00:01:14,720 --> 00:01:21,110
Now when you go to PY charm, you are going to meet five random methods which are rand int uniform,

15
00:01:21,110 --> 00:01:23,780
random choice and shuffle.

16
00:01:23,930 --> 00:01:27,650
I promise that you're going to have fun with this one, so let's go to the code.

17
00:01:27,950 --> 00:01:28,820
Fill is right.

18
00:01:28,820 --> 00:01:30,500
We will have fun in this one.

19
00:01:30,800 --> 00:01:33,500
As you probably might imagine, all of the random functions.

20
00:01:33,500 --> 00:01:37,880
We're going to have a lot of application in the gaming world, especially in many applications where

21
00:01:37,880 --> 00:01:40,250
we need the system to pick something at random.

22
00:01:40,980 --> 00:01:46,440
Well, we said that one of the methods that we wanted to use was called random, which would mean something

23
00:01:46,440 --> 00:01:47,940
like random integer.

24
00:01:49,110 --> 00:01:53,080
If we say random here, you'll see that the system does not recognize it.

25
00:01:53,100 --> 00:01:54,360
It marks it in red.

26
00:01:54,660 --> 00:02:00,000
So far, Python does not know what I'm talking about because it is a method that corresponds to the

27
00:02:00,000 --> 00:02:02,940
random library and we have to import it manually.

28
00:02:03,450 --> 00:02:09,870
So it's not like Max or Min that we have just used that we already have incorporated in the Python library.

29
00:02:09,900 --> 00:02:14,640
So let's write up here that for random, which is the name of the library import.

30
00:02:14,640 --> 00:02:20,520
And here notice that if you press control in the space bar and pie charm, it will pop up a list with

31
00:02:20,520 --> 00:02:22,800
all the methods that you can import from random.

32
00:02:23,950 --> 00:02:24,190
Here.

33
00:02:24,190 --> 00:02:27,100
We're going to look for the one that we want, which is redundant.

34
00:02:27,550 --> 00:02:28,300
Here it is.

35
00:02:28,630 --> 00:02:32,710
And I press the tab key on my keyboard and thus we already have it.

36
00:02:34,090 --> 00:02:38,060
So it's grayed out because pie charm is flagging a supposed error here.

37
00:02:38,500 --> 00:02:41,770
Thing is that we've imported a method, but we're not using it.

38
00:02:42,340 --> 00:02:45,100
Pie charm gets a little bit anxious, as you can see.

39
00:02:45,520 --> 00:02:48,490
Until we don't use it, it's going to be shouting at us from there.

40
00:02:49,090 --> 00:02:49,510
Wait.

41
00:02:49,510 --> 00:02:50,200
PY charm.

42
00:02:50,200 --> 00:02:51,250
I've just imported it.

43
00:02:51,370 --> 00:02:52,300
Give me a minute.

44
00:02:52,870 --> 00:02:54,550
Okay, now we're going to use it.

45
00:02:55,030 --> 00:02:58,900
We're going to say here that we want a variable called my random.

46
00:02:58,900 --> 00:03:03,730
And this variable is going to contain a random integer, that is to say a random.

47
00:03:04,600 --> 00:03:10,240
And we have to pass here some parameters related to the range in which the system should choose a random

48
00:03:10,240 --> 00:03:10,870
integer.

49
00:03:11,380 --> 00:03:17,140
And let's suppose that we want some random number between one and 50, and let's see what happened here.

50
00:03:17,140 --> 00:03:24,250
So we print my random and we run it and we go to the random file and here comes this number.

51
00:03:24,430 --> 00:03:28,390
But pay attention now if I run it again, here it is.

52
00:03:28,390 --> 00:03:30,520
Now it throws me a different number.

53
00:03:30,550 --> 00:03:34,870
If I run it again, and now I get another one and another one, and so on.

54
00:03:35,170 --> 00:03:40,420
In each execution, in each instance of your code, the system will throw a different number.

55
00:03:40,810 --> 00:03:43,240
Can you imagine doing a draw, for example?

56
00:03:43,510 --> 00:03:45,730
You would certainly need random for that.

57
00:03:46,000 --> 00:03:47,980
So let's look at one more method now.

58
00:03:47,980 --> 00:03:52,210
Let's look at the uniform method, which we also need to import.

59
00:03:52,210 --> 00:03:57,430
But look what we're going to do now instead of importing one by one the methods we need.

60
00:03:57,430 --> 00:04:00,610
As in this lecture, we're going to look at many of these methods.

61
00:04:00,730 --> 00:04:02,500
Then we press asterisks.

62
00:04:02,800 --> 00:04:07,780
And by this means, please python from the random library imports everything inside.

63
00:04:08,200 --> 00:04:10,510
So now everything is at our disposal.

64
00:04:11,290 --> 00:04:15,970
Well, let's now transform my random into a value equal to uniform.

65
00:04:16,300 --> 00:04:17,890
And what does uniform do?

66
00:04:18,340 --> 00:04:24,610
It is going to throw is also a random value, but this time a decimal value within the range that we

67
00:04:24,610 --> 00:04:25,210
choose.

68
00:04:25,220 --> 00:04:27,880
I ask for a value between one and five.

69
00:04:28,000 --> 00:04:34,990
So my random now when I print it, has this floating value with a very long decimal.

70
00:04:35,350 --> 00:04:40,110
Normally I prefer to have much less decimals so I can enclose this in round.

71
00:04:40,120 --> 00:04:45,970
That is a solution where at the end I can put a comma and say that I want, for example, only one decimal

72
00:04:45,970 --> 00:04:51,400
number and now if I print it, it will give me back a floating number again, but pretty short this

73
00:04:51,400 --> 00:04:54,700
time, and the same for every execution that I do.

74
00:04:54,910 --> 00:04:56,740
Always a random number.

75
00:04:57,280 --> 00:05:01,150
Now we're going to look at a third method, which is called simply random.

76
00:05:01,180 --> 00:05:03,400
Yes, the same number as the library.

77
00:05:03,400 --> 00:05:04,030
Random.

78
00:05:04,060 --> 00:05:06,610
This method doesn't need any parameters.

79
00:05:06,610 --> 00:05:08,470
You can't type anything in here.

80
00:05:08,470 --> 00:05:09,490
It goes empty.

81
00:05:09,880 --> 00:05:14,830
And what random does is automatically choosing a float number between zero and one.

82
00:05:15,520 --> 00:05:18,790
So every time you run it, you're going to get zero point something.

83
00:05:19,060 --> 00:05:21,490
So let's do it again and again.

84
00:05:21,670 --> 00:05:25,180
And so this is always going to have that fraction of an integer.

85
00:05:25,210 --> 00:05:29,380
It's very handy when you need to be working with percentages or fractions.

86
00:05:29,850 --> 00:05:30,190
Okay.

87
00:05:30,190 --> 00:05:32,400
So far we have three methods in.

88
00:05:32,410 --> 00:05:33,970
Let me delete all of this.

89
00:05:33,970 --> 00:05:36,640
And now let's look at the fourth one, which is choice.

90
00:05:36,820 --> 00:05:41,630
And this is great because it allows you to work with a random selection within the elements of a list.

91
00:05:41,650 --> 00:05:49,510
So if I have, for example, a variable called colors and I give it a blue color, a red green will

92
00:05:49,510 --> 00:05:50,380
be there too.

93
00:05:50,380 --> 00:05:53,330
And yellow, no matter how long your list is.

94
00:05:53,350 --> 00:05:58,180
And below, let's say that my random is equal to choice from the list colors.

95
00:05:58,600 --> 00:06:02,170
Of course we can do this with a list or any other collectible.

96
00:06:02,810 --> 00:06:09,800
So let's print my random now and see that in this instance it chose a random color from my list, and

97
00:06:09,800 --> 00:06:12,650
if I run it again, we will get a different one and so on.

98
00:06:13,520 --> 00:06:17,420
So this way, strings are also liable to be subjected to the system.

99
00:06:18,330 --> 00:06:22,920
And finally, let's get to know a slightly different method, but one that also works with randomness,

100
00:06:22,920 --> 00:06:24,240
which is shuffle.

101
00:06:24,600 --> 00:06:28,320
So this would be useful, for example, in card games, don't you think?

102
00:06:28,830 --> 00:06:33,600
So again, we're going to delete all of this and we're going to say we have a list called numbers and

103
00:06:33,600 --> 00:06:35,100
we're going to build it differently.

104
00:06:35,790 --> 00:06:39,450
What we're going to do is build it casting a range into list.

105
00:06:39,810 --> 00:06:44,130
So list of a range between five and 50.

106
00:06:44,400 --> 00:06:47,730
Also, we can now ask to jump every five places.

107
00:06:48,570 --> 00:06:50,370
So let's see what this list looks like.

108
00:06:50,370 --> 00:06:51,960
So there's no doubt in your mind.

109
00:06:52,500 --> 00:07:00,300
So we're going to print numbers and we're going to have a list that goes from 5 to 55, ten, 15, 20,

110
00:07:00,300 --> 00:07:01,980
and so on, up to 50.

111
00:07:02,370 --> 00:07:04,890
Remember, the last number is not inclusive.

112
00:07:05,520 --> 00:07:06,780
Well, this is our list.

113
00:07:06,780 --> 00:07:10,950
But if I remember for applying the shuffle method, it is written like this.

114
00:07:11,160 --> 00:07:15,540
Now I say that I want to shuffle numbers and this will shuffle it randomly.

115
00:07:15,660 --> 00:07:20,250
And now we get a completely different order inside my list of numbers.

116
00:07:20,370 --> 00:07:24,150
And if we run it again, another setup and so on.

117
00:07:24,600 --> 00:07:28,050
So this would surely come in handy in card games.

118
00:07:28,170 --> 00:07:29,250
Surely it would.

119
00:07:29,700 --> 00:07:34,170
So well, remember, that shuffle is a method that you can't store in a list.

120
00:07:34,200 --> 00:07:40,210
It's like all these methods that we've seen that generate an in-place modification on the spot.

121
00:07:40,230 --> 00:07:42,160
It's actually changing the list.

122
00:07:42,180 --> 00:07:46,170
So shuffle, we can't use the strings because strings are immutable.

123
00:07:46,410 --> 00:07:51,540
So these have been the main methods that exist for the random class wrapping up this day.

124
00:07:51,720 --> 00:07:54,780
It only left one more lecture before we move on to the challenge.

125
00:07:54,780 --> 00:07:55,950
So let's keep going.

126
00:07:56,220 --> 00:07:57,180
I'll see you there.
