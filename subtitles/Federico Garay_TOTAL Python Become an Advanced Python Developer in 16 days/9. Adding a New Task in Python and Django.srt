1
00:00:08,120 --> 00:00:14,360
In this lesson, we're going to generate a method for the user to create new list items, i.e. new tasks

2
00:00:14,750 --> 00:00:16,340
directly from the page.

3
00:00:16,580 --> 00:00:21,110
We're going to make a link here that will take him to the form to create a new task.

4
00:00:22,070 --> 00:00:23,180
Back to page charm.

5
00:00:23,180 --> 00:00:25,850
And the truth is that we have a lot of things to open here.

6
00:00:25,850 --> 00:00:33,320
So let's start closing settings, models, all these things that we are not going to use.

7
00:00:34,280 --> 00:00:39,740
So we're going to leave views and we're going to leave URLs and we're going to work well with this.

8
00:00:40,280 --> 00:00:45,080
So we're going to go to views and here we're going to add one more import.

9
00:00:45,440 --> 00:00:53,060
We're going to do that from Django View's generic and edit here in edit, we're going to be able to

10
00:00:53,060 --> 00:00:55,340
import a class called Create View.

11
00:00:56,280 --> 00:01:02,160
Create view is just a class that gives us the possibility to give tools to the user so that he or she

12
00:01:02,160 --> 00:01:04,530
can create new items in the list.

13
00:01:05,700 --> 00:01:10,080
So let's create a new class, of course, as we have done so far.

14
00:01:10,980 --> 00:01:13,470
We can call this one create task.

15
00:01:13,470 --> 00:01:16,500
And this class is going to inherit from create view.

16
00:01:17,700 --> 00:01:23,130
This class is going to have a little bit more complex logic because we have to send a request for the

17
00:01:23,130 --> 00:01:29,340
system to create a new element and return the new element created and incorporated in our list.

18
00:01:30,300 --> 00:01:36,150
So for that, we're also going to need to have a new XHTML site like the ones we have here.

19
00:01:37,050 --> 00:01:43,440
So let's create it now, new file and it's going to be called task form.

20
00:01:43,860 --> 00:01:44,610
HTML.

21
00:01:45,420 --> 00:01:47,130
So why do I give it this name?

22
00:01:47,790 --> 00:01:51,270
Because it is the name that the system will automatically search for.

23
00:01:51,630 --> 00:01:55,170
As before, we will be able to change it to another name later.

24
00:01:55,410 --> 00:02:02,460
But by default, the system wants to find task, which is the name of our list, and then from which

25
00:02:02,460 --> 00:02:05,670
is the element associated with the create view class.

26
00:02:07,400 --> 00:02:12,890
So we generate this new document, which for now we're just going to put the header with each one that

27
00:02:12,890 --> 00:02:16,430
says tasks form and we leave it like that.

28
00:02:17,150 --> 00:02:20,600
This is just a check that we are heading in the desired page.

29
00:02:21,170 --> 00:02:27,410
So we go back to views which is shouting error because it needs us to load more information.

30
00:02:28,190 --> 00:02:30,410
We set model back to task.

31
00:02:30,590 --> 00:02:35,390
This is being repetitive, but it has to be like this for each one of the classes.

32
00:02:35,720 --> 00:02:41,360
By default, the create view class gives us a model form for us to add items to our lists.

33
00:02:41,660 --> 00:02:44,330
Basically, that class is going to take our model.

34
00:02:44,450 --> 00:02:46,340
Look, let's open models here.

35
00:02:46,580 --> 00:02:53,240
And I was saying it's going to take this model from the task class and it's going to create a form based

36
00:02:53,240 --> 00:02:54,620
on these fields for us.

37
00:02:54,890 --> 00:02:57,650
All we have to do is specify the fields we want.

38
00:02:58,160 --> 00:03:01,700
That is which of these fields we want our form to have.

39
00:03:02,240 --> 00:03:10,370
So let's close models and we go back to views and we put fields and here we can make a list where we

40
00:03:10,370 --> 00:03:12,050
can put each of our fields.

41
00:03:12,410 --> 00:03:14,540
We can do this in different ways.

42
00:03:14,990 --> 00:03:19,100
One is to put the names like title description and so on.

43
00:03:19,190 --> 00:03:24,560
That's one way to do it and the other way to do it, since we're really interested in loading all the

44
00:03:24,560 --> 00:03:29,570
fields, is to put single quotes, double underscore and then all.

45
00:03:30,080 --> 00:03:33,260
And this is a way of asking, please enter all.

46
00:03:34,400 --> 00:03:36,950
So I've already designed the structure of the form.

47
00:03:37,310 --> 00:03:42,830
The system already knows that it has to create a form for me which has all the fields that are in my

48
00:03:42,830 --> 00:03:43,430
list.

49
00:03:44,730 --> 00:03:49,890
And also I want to make sure that the user has successfully submitted this form.

50
00:03:50,010 --> 00:03:55,950
The site automatically redirects the user to a different page, and I want this so that they have don't

51
00:03:55,950 --> 00:04:00,960
have to manually navigate to another place, but the system takes them somewhere else.

52
00:04:01,110 --> 00:04:04,200
So we need to add this to our create view as well.

53
00:04:04,830 --> 00:04:10,140
Let's import one more tool from Django URLs import.

54
00:04:11,040 --> 00:04:15,030
And from here, we're going to import this tool called reverse lazy.

55
00:04:16,380 --> 00:04:18,360
And what does Reverse Lazy do?

56
00:04:18,930 --> 00:04:20,580
It opens a specific page.

57
00:04:20,580 --> 00:04:22,260
When a certain event occurs.

58
00:04:22,530 --> 00:04:28,800
What event will reverse lazy be triggered by when the user successfully submits a new task?

59
00:04:29,590 --> 00:04:38,050
So let's load the attribute success URL here, which is going to be the same as reverse lazy with the

60
00:04:38,050 --> 00:04:39,640
URL of tasks.

61
00:04:40,990 --> 00:04:46,060
This means that after submitting a new task, the user will appear on the home page of our site.

62
00:04:46,690 --> 00:04:48,490
With this we will be fine.

63
00:04:49,390 --> 00:04:51,300
And now here, new URLs.

64
00:04:51,310 --> 00:04:56,440
We need to add a new path because we now have a new page within our site.

65
00:04:57,670 --> 00:05:03,310
Here we're going to ask that when the user wants to create a task instead of being directed to task

66
00:05:03,310 --> 00:05:06,550
integer, it will take him to create task.

67
00:05:07,510 --> 00:05:10,420
That is going to be the name in the link of our site.

68
00:05:11,320 --> 00:05:17,020
So let's not forget, though, that we first have to import from views to this new class that we have

69
00:05:17,020 --> 00:05:19,330
just created, which is create task.

70
00:05:20,140 --> 00:05:27,520
So why do I do this import so that here we can go to the create task as new page and don't forget this

71
00:05:27,520 --> 00:05:30,310
method so it can show the class as a view.

72
00:05:31,270 --> 00:05:38,830
And here we put the name that being consistent is going to be create task and I don't want to forget.

73
00:05:38,830 --> 00:05:42,970
So here I forget to add after create task the forward slash.

74
00:05:43,000 --> 00:05:48,610
Never forget when you create a URL, you always need the forward slash at the end of the name.

75
00:05:49,690 --> 00:05:55,090
I already have the URL and I'm going to go to the site manually because I don't have a link to get there.

76
00:05:56,260 --> 00:05:59,470
So we're going to put a slash create task.

77
00:05:59,500 --> 00:06:01,660
It's going to say tasks form.

78
00:06:02,560 --> 00:06:08,890
All right, now that we've done that, let's see how to get here, but not manually by typing the address

79
00:06:08,890 --> 00:06:15,700
in the bar, but by going from the home with a link to add a link here, we're going to go to the task

80
00:06:15,700 --> 00:06:19,360
list dot, HTML form and under pending list.

81
00:06:19,360 --> 00:06:23,290
We're going to add another tag this time a tag to a link.

82
00:06:23,770 --> 00:06:26,320
Remember the A is the tag to add a link.

83
00:06:27,400 --> 00:06:33,030
The name we give it is create new task and we can already see it on the site.

84
00:06:33,040 --> 00:06:34,060
There it is.

85
00:06:35,260 --> 00:06:42,460
But this link still doesn't lead anywhere because we have to set the h ref parameter inside the tag

86
00:06:42,460 --> 00:06:44,050
so that it takes us somewhere.

87
00:06:44,470 --> 00:06:45,430
Where to?

88
00:06:45,730 --> 00:06:47,740
We put opening and closing brackets.

89
00:06:47,740 --> 00:06:53,680
We put opening and closing percent signs and in the middle we specify that we want to go to the URL

90
00:06:53,710 --> 00:06:57,010
of our site and from there to create task.

91
00:06:57,340 --> 00:06:59,110
And with that we've got it.

92
00:07:00,220 --> 00:07:06,640
We refresh this, create new task, transforms into a link and if we click on it, it takes us to the

93
00:07:06,640 --> 00:07:07,660
tasks form.

94
00:07:09,430 --> 00:07:11,860
So we can't yet test something we've programmed.

95
00:07:11,860 --> 00:07:15,680
But once we get the form here, fill it in and submit it.

96
00:07:15,700 --> 00:07:20,470
The system will take us back to the home of the site and we'll check that later.

97
00:07:21,130 --> 00:07:25,660
Now let's get on to the next lesson to learn how to put our form here.
