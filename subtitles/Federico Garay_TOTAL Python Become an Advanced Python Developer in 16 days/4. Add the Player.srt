1
00:00:08,160 --> 00:00:14,970
The next step in our game is to add the player, a spaceship or rocket that will be located down here

2
00:00:14,970 --> 00:00:16,710
and which will shoot to the invaders.

3
00:00:17,700 --> 00:00:21,090
To download, this image will follow the same steps as before.

4
00:00:21,450 --> 00:00:27,030
So go to flat icon or any page you want and pick the one you like the most.

5
00:00:27,360 --> 00:00:28,680
So I pick this one.

6
00:00:29,850 --> 00:00:35,790
I'll choose 64 pixels here and remember that I chose 32 before because I thought it was the right size

7
00:00:35,790 --> 00:00:40,980
for an icon and I think 64 pixels will work just fine in this case.

8
00:00:41,460 --> 00:00:48,340
So once again, I'll drag this image to the folder containing all my files and let's go back to Python

9
00:00:48,390 --> 00:00:52,260
where we'll see that rocket is inside our project ready to be used.

10
00:00:53,160 --> 00:01:00,600
So keep in mind, this is an 800 by 600 pixel screen resolution and this is valuable information to

11
00:01:00,600 --> 00:01:03,390
set the screen size and locate objects.

12
00:01:04,620 --> 00:01:10,260
Imagine this is a coordinates map in which each pixel contains information about height and width.

13
00:01:10,710 --> 00:01:16,800
The first pixel, located in the top left corner is the pixel located at the origin point of the x and

14
00:01:16,800 --> 00:01:17,940
y axis.

15
00:01:19,020 --> 00:01:28,230
Therefore, if you position yourself here, you're at x 400, which is the width y 300, which is the

16
00:01:28,230 --> 00:01:28,830
height.

17
00:01:29,730 --> 00:01:31,800
These would be the midpoints.

18
00:01:32,340 --> 00:01:38,340
So you need to take all of this into consideration when deciding where to locate your images, characters

19
00:01:38,340 --> 00:01:40,020
and or objects.

20
00:01:40,830 --> 00:01:42,690
So let's see an example.

21
00:01:43,290 --> 00:01:46,800
We'll create our player down here and name it player.

22
00:01:47,880 --> 00:01:54,480
Let's store the image we downloaded in a variable named IMG Player, which will be equal to PI game

23
00:01:54,810 --> 00:01:57,360
image load like before.

24
00:01:58,080 --> 00:02:02,040
Now we're going to type rocket dot png and that's it.

25
00:02:03,180 --> 00:02:05,730
Now we're going to create two more variables.

26
00:02:06,090 --> 00:02:11,670
One, to tell the player's location in the x axis and another to tell their position in the Y axis.

27
00:02:11,970 --> 00:02:19,140
This one will be named Player X and will be equal to zero so that it's located in the top left corner

28
00:02:19,530 --> 00:02:23,100
and this will be player y, which will also be equal to zero.

29
00:02:24,120 --> 00:02:27,510
So I've created a very strange location which is up here.

30
00:02:28,410 --> 00:02:32,670
Now we'll join these data in a function that shows the player's location.

31
00:02:33,120 --> 00:02:40,380
This function will be named player and it won't require parameters and it will call screen dot blip.

32
00:02:41,580 --> 00:02:43,440
We'll pass two elements to it.

33
00:02:43,470 --> 00:02:50,280
First, our player's image, which is IMG player, and then a two pool consisting of the coordinates

34
00:02:50,280 --> 00:02:52,050
at which we want to locate our player.

35
00:02:52,920 --> 00:02:55,890
So we enter player X and player Y.

36
00:02:57,060 --> 00:02:59,730
Now, where will we call this function from?

37
00:03:00,750 --> 00:03:06,060
If we need our player to change positions at any moment, we'll need the location data to be constantly

38
00:03:06,060 --> 00:03:06,840
updated.

39
00:03:07,470 --> 00:03:14,940
Therefore, this has to be inside the game loop and before the update, let's put it here.

40
00:03:14,940 --> 00:03:18,840
And this means we'll first see the background color and then we'll see the player.

41
00:03:19,830 --> 00:03:25,140
If it was the opposite case, first the player and then the colour, our game would go wrong because

42
00:03:25,140 --> 00:03:29,850
the player would be overlapped by the background color and that's not what we want.

43
00:03:30,810 --> 00:03:34,860
Therefore, we have to make sure that we have the background color at the beginning of the loop.

44
00:03:34,980 --> 00:03:37,920
That way the screen won't overlap anything.

45
00:03:38,460 --> 00:03:41,610
And here we'll enter the job of our screen.

46
00:03:42,990 --> 00:03:47,110
Okay, now we'll open the call to player, and that's it.

47
00:03:47,130 --> 00:03:48,870
We should be able to see it.

48
00:03:49,410 --> 00:03:50,730
So let's see what happens.

49
00:03:50,730 --> 00:03:52,020
If we execute it.

50
00:03:53,190 --> 00:03:54,420
We can see the color.

51
00:03:54,420 --> 00:03:57,900
And then our player who's located at zero zero.

52
00:03:58,590 --> 00:04:00,560
These are not the coordinates I want.

53
00:04:00,570 --> 00:04:03,060
I want my player to be down here in the middle.

54
00:04:03,750 --> 00:04:09,900
So if I located the player exactly in the middle, it wouldn't work that well because the half of 800

55
00:04:09,900 --> 00:04:10,950
is 400.

56
00:04:11,610 --> 00:04:17,010
So if I located it in the middle, my player would be located the right side of the screen actually.

57
00:04:17,610 --> 00:04:22,830
So since my player is 64 pixels wide, I have to divide 800.

58
00:04:23,310 --> 00:04:27,540
Once I get the result, I have to subtract the half of the player from that result.

59
00:04:28,290 --> 00:04:30,300
Half of 64 is 32.

60
00:04:30,690 --> 00:04:34,800
So 400 -32 is 368.

61
00:04:35,400 --> 00:04:39,330
And those should be the coordinates at which my player is to be located.

62
00:04:40,140 --> 00:04:44,550
So let's add 368 and execute this.

63
00:04:45,690 --> 00:04:49,710
Now we can tell the player is located exactly in the middle of the screen.

64
00:04:50,520 --> 00:04:55,320
And I also want the player to be located down here in this very spot.

65
00:04:56,100 --> 00:05:04,830
If my player is 64 pixels high and my screen is 600 pixels high, then I need to subtract 64 from 600,

66
00:05:05,130 --> 00:05:07,290
which is 536.

67
00:05:07,620 --> 00:05:10,560
This way I'll be able to locate it where I wanted.

68
00:05:10,980 --> 00:05:12,510
So I hope you're following me here.

69
00:05:13,200 --> 00:05:17,010
So we'll add 536 to the Y axis.

70
00:05:18,150 --> 00:05:19,290
Let's execute it.

71
00:05:19,290 --> 00:05:23,130
And now we can tell our player is exactly where we want.

72
00:05:24,090 --> 00:05:26,760
And in the next lesson, we'll make the game move a little.

73
00:05:26,760 --> 00:05:28,060
So don't miss it.

74
00:05:28,080 --> 00:05:29,190
I'll see you there.
