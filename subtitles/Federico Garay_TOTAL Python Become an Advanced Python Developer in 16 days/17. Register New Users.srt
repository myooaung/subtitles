1
00:00:07,700 --> 00:00:13,100
In this lesson, we're going to learn how to create a page containing a registration for new users so

2
00:00:13,100 --> 00:00:16,730
that new accounts can be created directly from the application.

3
00:00:16,850 --> 00:00:20,900
As you already know, the procedure to create a new view with a new form.

4
00:00:20,930 --> 00:00:26,660
I remind you that the steps we're going to follow are first to create the link, then the form, then

5
00:00:26,660 --> 00:00:28,400
the view, then the URL.

6
00:00:28,700 --> 00:00:32,000
First, we're going to create a link here under the login button.

7
00:00:32,780 --> 00:00:36,770
This link is going to say if you don't have an account, register here.

8
00:00:37,590 --> 00:00:40,260
So let's go to Punjab and let's go to log in.

9
00:00:40,440 --> 00:00:48,090
And here we're going to add below the form a paragraph that says, don't have an account and then a

10
00:00:48,090 --> 00:00:48,690
link.

11
00:00:49,530 --> 00:00:57,440
That has a h r f a link that we don't know yet what it is because we haven't created it yet.

12
00:00:57,450 --> 00:01:01,260
But for now we're going to leave this set up with the text register here.

13
00:01:02,030 --> 00:01:07,160
So if we refresh here, we see our text and this link doesn't take me anywhere yet.

14
00:01:07,190 --> 00:01:11,000
Now let's create the form that we would see if we go to register here.

15
00:01:11,030 --> 00:01:18,410
Then in pie charm, we go to base and create a new file called Register dot HTML.

16
00:01:19,400 --> 00:01:21,170
And what are we going to put in here?

17
00:01:21,650 --> 00:01:24,740
We're going to put the same thing that we have in login.

18
00:01:24,950 --> 00:01:30,110
We're going to copy all of this and we're going to paste it and adapt it inside register.

19
00:01:30,650 --> 00:01:32,970
So what would we have to change here?

20
00:01:32,990 --> 00:01:36,860
That here above instead of log in, it says sign up.

21
00:01:37,550 --> 00:01:39,920
This other thing would leave it almost the same.

22
00:01:41,150 --> 00:01:42,500
The value of the button.

23
00:01:42,500 --> 00:01:48,980
Instead of saying log in, it will say, sign up, and here it will say, Do you already have an account?

24
00:01:50,030 --> 00:01:57,200
And in that case, in this part it will say, log in and it will take us to with the brackets and percentage

25
00:01:57,200 --> 00:01:59,450
URL and log in.

26
00:02:02,040 --> 00:02:06,240
Then we have the form that we should see when we log in to the register site.

27
00:02:07,260 --> 00:02:09,350
Now we need to create a view for this.

28
00:02:09,360 --> 00:02:10,860
So let's go to views.

29
00:02:11,610 --> 00:02:18,600
Django doesn't have a specific view for registrations, but there is a generic form view that we can

30
00:02:18,600 --> 00:02:19,830
tailor to our needs.

31
00:02:19,830 --> 00:02:26,010
And here we can incorporate inside the generic form view of form for registration, which does exist

32
00:02:26,010 --> 00:02:28,050
in Django and will import it.

33
00:02:28,050 --> 00:02:31,380
So within edit, we're going to add a form view here.

34
00:02:31,380 --> 00:02:38,250
And we also want to import this method that I mentioned which is called user creation form and we're

35
00:02:38,250 --> 00:02:47,610
going to incorporate it from Django dot contrib auth form and we're going to import it into user creation

36
00:02:47,610 --> 00:02:48,210
form.

37
00:02:48,960 --> 00:02:51,810
We're also going to need a method called login.

38
00:02:52,290 --> 00:03:01,200
We load it with from django dot contrib auth import login and that's all we need to start building a

39
00:03:01,200 --> 00:03:04,920
class that we're going to put underneath the class.

40
00:03:04,920 --> 00:03:06,780
That's called login here.

41
00:03:08,150 --> 00:03:13,400
We're going to create a new class that's going to be called Register Page, that's going to inherit

42
00:03:13,400 --> 00:03:16,160
from form, view and its contents.

43
00:03:16,160 --> 00:03:19,340
We're going to assign a value to some attributes.

44
00:03:19,490 --> 00:03:26,180
The first one is template name, which is going to be based slash registered HTML.

45
00:03:26,570 --> 00:03:30,050
And this is to define what to write in the address bar.

46
00:03:31,320 --> 00:03:34,740
Foam class will be equal to user creation form.

47
00:03:36,140 --> 00:03:39,110
And also redirect authenticated user.

48
00:03:39,170 --> 00:03:43,550
Remember that we have already used this before and it will be equal to true.

49
00:03:44,660 --> 00:03:51,170
We also need a success URL so that after successful registration it will be redirected with reverse

50
00:03:51,170 --> 00:03:52,910
lazy to tasks.

51
00:03:54,130 --> 00:03:57,520
So we have a class and now we're going to create the URL.

52
00:03:58,780 --> 00:04:03,460
We're going to import what we've just created, which is register page, and we're going to create a

53
00:04:03,460 --> 00:04:10,540
path down here that is equal to register slash and we have to put register pages, view this you already

54
00:04:10,540 --> 00:04:12,670
know how to do almost by heart.

55
00:04:13,530 --> 00:04:19,350
And then the name that we are going to give to this page, being consistent, it's going to be register

56
00:04:20,220 --> 00:04:21,960
and we already have the path.

57
00:04:22,840 --> 00:04:24,700
And now we're going to complete the link.

58
00:04:24,700 --> 00:04:27,910
Remember that in login we had left a link here.

59
00:04:28,360 --> 00:04:34,060
The link starts with brackets and percentage and we'll refer to the URL register.

60
00:04:34,540 --> 00:04:38,470
We close everything and that's it to build the link.

61
00:04:39,790 --> 00:04:41,160
So let's go to the site.

62
00:04:41,170 --> 00:04:47,620
Let's click on register here and notice that we arrive here at a form that we have not designed, but

63
00:04:47,620 --> 00:04:53,080
that has been generated automatically because all this information is already incorporated in the user

64
00:04:53,080 --> 00:04:54,280
creation forms.

65
00:04:55,240 --> 00:05:00,880
So what I want to do here before going any further is to make sure that once the user has submitted

66
00:05:00,880 --> 00:05:07,960
this registration with the registered button and the relevant data, they are already logged in to continue

67
00:05:07,960 --> 00:05:14,200
using the application because for now this would only create a user, but then they would have to log

68
00:05:14,200 --> 00:05:16,690
in and this would be a redundant task.

69
00:05:17,170 --> 00:05:19,120
We would like you to be logged in already.

70
00:05:19,420 --> 00:05:25,600
We come back to Pie Charm and now we're going to go inside views where we were working and we're going

71
00:05:25,600 --> 00:05:29,350
to overwrite something here inside the register page class.

72
00:05:30,280 --> 00:05:33,190
We're going to set up a function called Form Valid.

73
00:05:33,610 --> 00:05:38,290
We've used it before and this is going to require a self and a form.

74
00:05:40,090 --> 00:05:46,810
And this form valid is going to return the super which has the name of the view register page and the

75
00:05:46,810 --> 00:05:47,500
self.

76
00:05:47,980 --> 00:05:55,270
And to this we apply the method form valid pointing to the form so that it returns to us what is in

77
00:05:55,270 --> 00:05:58,090
the upper instance with all that information.

78
00:05:58,090 --> 00:06:02,950
But now we have to establish before the return what we want to modify here.

79
00:06:03,700 --> 00:06:07,360
We want the user to be equal to the form save.

80
00:06:07,390 --> 00:06:16,000
That is to say to what has been saved in the form to obtain the value of our user and also check if

81
00:06:16,000 --> 00:06:18,310
user is not none.

82
00:06:18,850 --> 00:06:24,040
If so, apply the login method loaded with self, request and user.

83
00:06:25,280 --> 00:06:27,740
So those are the values you need to log in the user.

84
00:06:28,310 --> 00:06:33,950
If we now come to registration, we can create a new user, for example, fill and create a password

85
00:06:33,950 --> 00:06:35,840
for him and repeat it.

86
00:06:36,140 --> 00:06:42,950
Now we send and fill is now a new user and at the same time he is logged in as we expected.

87
00:06:43,670 --> 00:06:45,890
He has no task because Phil is new here.

88
00:06:46,850 --> 00:06:52,310
We're going to create a new task for him which can be feed the dog, we send it.

89
00:06:52,310 --> 00:06:54,080
And this is Phil's new task.

90
00:06:54,830 --> 00:07:01,160
Now, also, since we had this thing about redirecting the authenticated user, he's not supposed to

91
00:07:01,160 --> 00:07:03,650
be able to access the register page anymore.

92
00:07:04,550 --> 00:07:06,140
So I'm going to try to do it.

93
00:07:06,140 --> 00:07:08,090
And yes, I've been able to log in.

94
00:07:08,450 --> 00:07:10,190
This doesn't work as expected.

95
00:07:10,190 --> 00:07:14,270
We should be prevented from accessing this page if we are already registered.

96
00:07:15,190 --> 00:07:17,230
So let's see what happened here in views.

97
00:07:17,920 --> 00:07:25,900
We have this redirect unauthenticated user set to true, which is what should block us from this page.

98
00:07:25,900 --> 00:07:29,350
But for some reason this attribute isn't working as we wanted it to.

99
00:07:29,620 --> 00:07:31,480
So I'm going to override it.

100
00:07:32,330 --> 00:07:36,890
We're going to need to impart on the shortcuts also to redirect.

101
00:07:37,550 --> 00:07:46,070
And with redirect we can go back to this same class and get get is going to ask us for itself and then

102
00:07:46,070 --> 00:07:47,590
args and quarks.

103
00:07:49,770 --> 00:07:59,430
We're going to tell it that if self dot request user dot is authenticated in that case, if it is authenticated

104
00:07:59,430 --> 00:08:07,140
to return us a redirection to tasks, then if the user wants to enter this view, the system will ask

105
00:08:07,140 --> 00:08:13,860
him or her if it is authenticated and it will not let them go any further because it will send them

106
00:08:13,860 --> 00:08:20,610
to tasks and if they are not, then he or she will be able to see the registration form returning a

107
00:08:20,610 --> 00:08:23,940
super with the parameters register page and self.

108
00:08:24,720 --> 00:08:29,070
From this it's going to get all the arguments and logs that exist.

109
00:08:29,920 --> 00:08:32,140
So now it's not supposed to let us log in.

110
00:08:32,710 --> 00:08:37,960
We are fresh again, and since I'm already registered, it won't let me see the registration page.

111
00:08:38,530 --> 00:08:43,930
Now, yes, our site has the possibility to register users directly from this view.

112
00:08:44,110 --> 00:08:48,190
Well, in the next lesson, we're going to learn how to do searches.

113
00:08:48,430 --> 00:08:54,100
And if you want to know what this is, what you need to know, you'll find out in the next lesson.
