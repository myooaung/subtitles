WEBVTT
1
00:00:07.970 --> 00:00:11.210
What follows in our project is to go back to Python.

2
00:00:11.630 --> 00:00:18.230
Start working on the Python files and then configure the URL of our site to be able to see it in the

3
00:00:18.230 --> 00:00:18.860
browser.

4
00:00:19.100 --> 00:00:24.620
Let's open our file through open and note that this time we're going to stop working with the usual

5
00:00:24.620 --> 00:00:27.440
folder tree where we store everything in the folders.

6
00:00:27.440 --> 00:00:28.340
Day one.

7
00:00:28.370 --> 00:00:30.020
Day two, etc..

8
00:00:30.620 --> 00:00:35.960
Today we're going to come to this different environment that we've created inside my environment, my

9
00:00:35.960 --> 00:00:39.320
web source and his project.

10
00:00:39.890 --> 00:00:41.420
That's what I'm going to open now.

11
00:00:41.420 --> 00:00:47.000
And here I already have Project Open and I can see its components browsing here.

12
00:00:47.990 --> 00:00:59.580
Here you can see that I have some files like init dot p asg p settings u, r, l, p and w sgi p.

13
00:01:00.440 --> 00:01:04.640
All of these come inside project along with this manage dot py.

14
00:01:05.340 --> 00:01:08.670
Which is the one we've been using to manage our projects so far.

15
00:01:09.540 --> 00:01:12.780
Well, next, we're going to create an app app.

16
00:01:12.780 --> 00:01:15.320
So usually small components for a website.

17
00:01:15.330 --> 00:01:18.470
In our case, we're going to create this to do list.

18
00:01:18.480 --> 00:01:20.670
So we're going to create the app file.

19
00:01:21.090 --> 00:01:26.610
And that's where we're going to put the core of our code, its structure, the main settings, its main

20
00:01:26.610 --> 00:01:28.110
logic, and so on.

21
00:01:28.950 --> 00:01:33.990
So for that, we're going to open a terminal just as we've worked with the command prompt separately

22
00:01:33.990 --> 00:01:34.800
so far.

23
00:01:34.830 --> 00:01:37.740
This time we're going to use it inside Python.

24
00:01:38.130 --> 00:01:45.780
We're going to go to view then tool windows and here we go down to terminal and here we open a terminal

25
00:01:45.780 --> 00:01:48.330
very similar to the one we've used so far.

26
00:01:48.840 --> 00:01:56.250
From here we're going to call Python Manage P as we did before, and now we're going to execute the

27
00:01:56.250 --> 00:02:00.060
Command Start app and we're going to name it base.

28
00:02:01.390 --> 00:02:08.920
And as you can see, a new folder called Base appeared here which has other files, admin, apps, models,

29
00:02:08.920 --> 00:02:10.360
test and views.

30
00:02:10.930 --> 00:02:14.020
All these are going to be the components of our application.

31
00:02:14.470 --> 00:02:20.380
Now we're going to run our server one more time so we can see in our browser browser how the web we

32
00:02:20.380 --> 00:02:28.030
have so far looks like Python managed P run server and the link appears again, which we're going to

33
00:02:28.030 --> 00:02:32.920
copy, where we're going to take to the browser and we're going to paste it here.

34
00:02:33.490 --> 00:02:39.100
And once again to see the Django base page, this means that we still don't have anything inside our

35
00:02:39.100 --> 00:02:39.910
website.

36
00:02:40.180 --> 00:02:45.700
So now if we go back to Python, we see that we have the project on one side here below with all its

37
00:02:45.700 --> 00:02:48.730
components and above the application on the other.

38
00:02:49.000 --> 00:02:50.230
But they don't know each other.

39
00:02:50.230 --> 00:02:51.970
They don't know that the other exists.

40
00:02:51.970 --> 00:02:53.230
So let's connect them.

41
00:02:54.100 --> 00:03:00.250
We're going to go to settings in the project where we go to open this file and here where it says Install

42
00:03:00.250 --> 00:03:00.880
apps.

43
00:03:01.420 --> 00:03:05.350
We're going to go down one place and we're going to create base apps.

44
00:03:05.590 --> 00:03:09.220
Remember, that base is the name that we just gave to our application.

45
00:03:10.180 --> 00:03:16.750
Now, I want this to point to to where let me show you something in the base folder and in the apps

46
00:03:16.750 --> 00:03:17.300
file.

47
00:03:17.320 --> 00:03:18.700
So let's open it up.

48
00:03:19.540 --> 00:03:23.470
I wanted to point here to this class, which is called base config.

49
00:03:23.470 --> 00:03:25.540
So I'm going to copy this name.

50
00:03:26.380 --> 00:03:33.670
I go back to settings and here in base dot apps I write right dot base config and then I close the quotation

51
00:03:33.670 --> 00:03:34.780
mark and the comma.

52
00:03:35.620 --> 00:03:42.730
So with this we have let Django know that my app exists and that these two components base and project

53
00:03:42.730 --> 00:03:44.050
know about each other.

54
00:03:45.250 --> 00:03:49.960
Now I want to connect the URLs of this of my sites in project.

55
00:03:49.960 --> 00:03:55.060
I have a file that is URLs, but I don't have such a file in base.

56
00:03:55.720 --> 00:04:01.180
So I'm going to click on base, right click on new file and I'm going to make it URLs.

57
00:04:01.480 --> 00:04:06.490
PY And now there is another URLs file in base.

58
00:04:06.820 --> 00:04:10.660
I have two, one in the application and one in the project.

59
00:04:10.660 --> 00:04:15.850
And this is now going to allow me to configure the pattern of my URL, but I'm going to do that in a

60
00:04:15.850 --> 00:04:16.420
jiffy.

61
00:04:16.840 --> 00:04:23.170
Now what I want to do is to import my views, these views that we have in base, because as you can

62
00:04:23.170 --> 00:04:25.420
see, we don't have any views at the moment.

63
00:04:26.050 --> 00:04:29.050
So if I click here, it says, Create your views here.

64
00:04:30.080 --> 00:04:34.910
I haven't created any yet, but I'm already going to import them to have them automatically.

65
00:04:34.910 --> 00:04:41.650
So in this URL's file that we just created, we're going to import from Django URLs.

66
00:04:41.870 --> 00:04:43.490
Import path.

67
00:04:44.360 --> 00:04:45.680
What is path?

68
00:04:45.680 --> 00:04:49.200
Let's see if we come to URLs from Django.

69
00:04:49.220 --> 00:04:50.680
That is from our project.

70
00:04:50.690 --> 00:04:57.380
We have this path here which is a path made up of admin and then admin site URLs.

71
00:04:58.010 --> 00:05:00.110
Well, let's try to complete this.

72
00:05:00.290 --> 00:05:07.370
Let's go back here and let's import something else before we continue, which is from dot import views

73
00:05:08.060 --> 00:05:12.980
and we're importing them from the URLs file which corresponds to base.

74
00:05:13.970 --> 00:05:20.180
Notice that if we open two files with the same name, Python will tell us that one is inside the base

75
00:05:20.180 --> 00:05:22.970
folder and the other is inside the project folder.

76
00:05:24.320 --> 00:05:32.840
Well, here in this URLs of base out of our application, we're going to create a list called URL patterns

77
00:05:33.080 --> 00:05:36.080
and this is going to contain all the URL patterns.

78
00:05:36.260 --> 00:05:39.260
Let's make it a list which is going to be empty for now.

79
00:05:39.410 --> 00:05:41.150
And let's go back to views.

80
00:05:41.150 --> 00:05:49.040
And here let's import something else which we're going to need now, which is from Django dot http,

81
00:05:49.370 --> 00:05:53.780
import HTTP response.

82
00:05:54.350 --> 00:05:59.270
Again, this may not be making a lot of sense to you right now, but as we put it together, it will

83
00:05:59.270 --> 00:06:01.820
make sense at the end of this lesson.

84
00:06:01.820 --> 00:06:07.130
Once you've understood where we're going, look at it again and it will all make sense to you.

85
00:06:07.580 --> 00:06:10.070
So now we're going to create our first view.

86
00:06:10.100 --> 00:06:15.110
We're going to remove this clarification and we're going to create it with a function called pending

87
00:06:15.110 --> 00:06:15.920
list.

88
00:06:17.390 --> 00:06:22.730
We're going to pass this function, an argument which can be called request, and it's going to return

89
00:06:22.730 --> 00:06:23.630
something here.

90
00:06:24.110 --> 00:06:28.130
It's going to return an HTTP response.

91
00:06:28.430 --> 00:06:34.040
And in brackets, we're going to put anything here just for demonstration purposes.

92
00:06:34.040 --> 00:06:37.550
For example, text for pending list.

93
00:06:38.630 --> 00:06:42.740
So now I go back to our URLs and in the list we have left empty.

94
00:06:42.740 --> 00:06:46.280
I create our first path, which is going to be with path.

95
00:06:46.820 --> 00:06:48.170
That's why we imported it.

96
00:06:48.680 --> 00:06:53.390
And in brackets we put an empty string so that it goes to the base path.

97
00:06:53.840 --> 00:06:55.310
Then we call views.

98
00:06:55.310 --> 00:06:58.610
That is this file we have above and inside views.

99
00:06:58.610 --> 00:07:02.510
We're going to call this function pending list that we just created.

100
00:07:03.350 --> 00:07:07.160
We're going to give it a name to this element which can be pending.

101
00:07:08.480 --> 00:07:15.140
And then now I point out again that we have two URL files, the one that's inside base and the one that's

102
00:07:15.140 --> 00:07:16.280
inside project.

103
00:07:16.670 --> 00:07:22.340
And now we want our project to know that the URLs of our application that were just generated.

104
00:07:22.670 --> 00:07:29.360
So inside project URLs, which is the one we have just here, we're going to import one more element

105
00:07:29.360 --> 00:07:36.620
putting comma here so that Django URLs, we import something else which is the function include and

106
00:07:36.620 --> 00:07:42.560
now we have the possibility of including other URLs in addition to those that come inside project.

107
00:07:42.800 --> 00:07:49.880
And then in this URL patterns that already came by default in this file, we're going to add one more

108
00:07:49.880 --> 00:07:51.620
element, another path.

109
00:07:51.620 --> 00:07:57.650
But this time it is going to be an empty string that is going to connect through the include function

110
00:07:57.650 --> 00:08:00.080
with base dot URLs.

111
00:08:01.370 --> 00:08:02.570
So this should be enough.

112
00:08:04.160 --> 00:08:07.410
So the include method which was imported and added here.

113
00:08:07.430 --> 00:08:12.230
Basically says okay, let's include another file URLs p y.

114
00:08:12.440 --> 00:08:18.050
In addition to this one we're in, we're going to include this other one, which is the one in the base

115
00:08:18.050 --> 00:08:23.960
that we just set up so that when the user asks for any path that's in there, which in this case is

116
00:08:23.960 --> 00:08:31.280
an empty string, it sends those path to this other file u urls dot p y for this file to handle.

117
00:08:32.510 --> 00:08:38.510
So now that I've set all this up, if I go back to our site and refresh it, notice that we get back

118
00:08:38.510 --> 00:08:42.530
is the letter text for pending list that we wrote before.

119
00:08:42.770 --> 00:08:47.600
So now maybe you can understand this a little better because we've managed to schedule the content of

120
00:08:47.600 --> 00:08:55.280
a page on our site when we set this phrase to be what returns the HTTPS response within the pending

121
00:08:55.280 --> 00:08:56.270
list function.

122
00:08:57.110 --> 00:08:58.610
So how did we get there?

123
00:08:58.970 --> 00:09:02.270
Well, we ask the browser to open the base path.

124
00:09:02.270 --> 00:09:06.860
The code went to look for it in the URLs of our application.

125
00:09:06.860 --> 00:09:12.050
This file here and then this URLs file says okay, browser.

126
00:09:12.050 --> 00:09:15.500
If you want to open this URL, I'm going to send you something to view.

127
00:09:15.710 --> 00:09:22.040
I'm going to send you the view we have prepared for that URL and which view is the one you are going

128
00:09:22.040 --> 00:09:26.810
to send, the one you have in the views in the pending list function?

129
00:09:28.650 --> 00:09:31.140
All right, let's see what's in there.

130
00:09:31.470 --> 00:09:32.840
Let's go to views.

131
00:09:32.850 --> 00:09:34.980
And here's the pending views function.

132
00:09:35.520 --> 00:09:37.660
All right, let's see what's in there.

133
00:09:37.680 --> 00:09:41.460
Whatever this function returns, that's what we need to send to the browser.

134
00:09:42.210 --> 00:09:43.350
And what does this function?

135
00:09:43.350 --> 00:09:49.830
Return a HTTP response that contains a string that says text for pending list.

136
00:09:50.100 --> 00:09:54.030
And that's what we saw on our site when we loaded the base URL.

137
00:09:54.960 --> 00:09:59.940
So I know this approach can be a bit confusing, so congratulations on getting this far.

138
00:10:00.390 --> 00:10:05.880
Now I ask you to watch the lesson again, because now that you've been able to visualize the circuit

139
00:10:05.880 --> 00:10:10.860
that made our entire order, you're only now going to get the full understanding of what we've just

140
00:10:10.860 --> 00:10:11.460
written.

141
00:10:12.000 --> 00:10:17.250
So I suggest that you do not go ahead without reviewing this lesson, because even though you have understood

142
00:10:17.250 --> 00:10:22.740
everything now, it is very important you go back to see everything we've just done, but knowing where

143
00:10:22.740 --> 00:10:26.310
we're going so that you can assimilate much better.

144
00:10:26.940 --> 00:10:29.340
So I'll be waiting for you in the next lesson.
