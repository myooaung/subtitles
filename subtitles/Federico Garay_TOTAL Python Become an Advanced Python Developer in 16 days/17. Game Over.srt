1
00:00:08,510 --> 00:00:11,000
So welcome to today's final lesson.

2
00:00:11,000 --> 00:00:18,020
And we'll be creating code to control the end of the game, to have some peace of quiet and work properly.

3
00:00:18,020 --> 00:00:21,470
I've turned off the music by deactivating this block of code.

4
00:00:21,740 --> 00:00:23,240
We'll activate it again soon.

5
00:00:23,240 --> 00:00:24,050
Don't worry.

6
00:00:24,530 --> 00:00:27,680
So what we have to do now is to make our game end.

7
00:00:27,680 --> 00:00:34,820
As soon as the enemies get to the rocket that is at the 500 pixel level, we'll try to code the event

8
00:00:34,820 --> 00:00:40,370
that's going to take place when our enemies have a value higher than 500 in their y axis.

9
00:00:40,880 --> 00:00:47,660
So note that in order to test this, I'll set a limit of 250 so that we don't always have to wait until

10
00:00:47,660 --> 00:00:49,550
the enemies reach the bottom of the screen.

11
00:00:50,270 --> 00:00:50,540
Okay.

12
00:00:50,630 --> 00:00:52,370
Where are we going to do this code?

13
00:00:52,730 --> 00:00:59,030
We should go to the block where we've programmed the enemy movements over here, modify enemy location,

14
00:00:59,240 --> 00:01:03,290
and here we have a loop that checks if each iteration for each enemy.

15
00:01:04,010 --> 00:01:10,550
So at the beginning of this block will verify an enemy has reached this point and we'll write end of

16
00:01:10,550 --> 00:01:11,150
game.

17
00:01:11,510 --> 00:01:17,420
Now we ask if an enemy Y has reached a height greater than 500 pixels.

18
00:01:17,840 --> 00:01:23,840
As I already told you, that's the correct number, but we're going to use 250 OC.

19
00:01:24,170 --> 00:01:28,250
If an enemy reaches this point, we have to remove all the enemies from the screen.

20
00:01:28,460 --> 00:01:35,660
To do so will create another loop for each K in the range corresponding to number of enemies, which

21
00:01:35,660 --> 00:01:42,470
means it will go over each one and this loop will assign each of them a new position on their y axis.

22
00:01:43,250 --> 00:01:48,710
We'll remove them from the screen by dragging them down, and so we will create the illusion that they

23
00:01:48,710 --> 00:01:49,430
disappear.

24
00:01:50,420 --> 00:01:56,390
So the enemy y value of each k element that is each enemy will be equal to 1000.

25
00:01:56,960 --> 00:02:02,900
That number is more than enough to make our enemies disappear as our screen is only 600 pixels high.

26
00:02:03,710 --> 00:02:10,160
So following this loop and still inside the if clause, we'll call a new function if the previous condition

27
00:02:10,160 --> 00:02:10,730
is met.

28
00:02:10,910 --> 00:02:15,740
This function is final text, so we haven't defined it yet.

29
00:02:15,740 --> 00:02:21,410
We'll do that soon and remember this name so as to write it exactly like that later.

30
00:02:22,010 --> 00:02:25,490
So now let's enter the break command so as to terminate this loop.

31
00:02:25,880 --> 00:02:31,760
So this is the code intended to verify if an enemy has gotten to where the rocket is thus ending the

32
00:02:31,760 --> 00:02:32,300
game.

33
00:02:32,870 --> 00:02:35,240
So where can we code the end of the game?

34
00:02:35,930 --> 00:02:38,660
Let's scroll up because we have to do two things.

35
00:02:39,170 --> 00:02:44,270
First, we have to create the function we called earlier, and second, we have to create the game over

36
00:02:44,270 --> 00:02:44,990
message.

37
00:02:45,620 --> 00:02:53,210
So we'll create an end of game text and we'll create the variable named end font containing PI game

38
00:02:53,360 --> 00:03:02,930
just like before with font font capital F now just like we did on line 54, we have to set a font type,

39
00:03:02,930 --> 00:03:09,560
so let's choose the same fast test TBTF and IT size will be 40 this time.

40
00:03:10,670 --> 00:03:14,510
The font we needed is ready, so now we need the function.

41
00:03:14,510 --> 00:03:19,280
We said it would be named final text colon and now we'll implement it.

42
00:03:19,820 --> 00:03:23,990
We have to call another variable here which can be similar.

43
00:03:23,990 --> 00:03:32,690
So we'll name it my final font and it will be equal to end font, but we'll make some changes and font

44
00:03:32,690 --> 00:03:38,090
dot render will contain an uppercase text reading game over grade.

45
00:03:38,690 --> 00:03:43,460
And here we have to add true, which is one of the parameters it requires.

46
00:03:43,460 --> 00:03:47,240
The other one is color, so let's choose white again.

47
00:03:47,240 --> 00:03:51,140
So we enter 255 and this variable is ready.

48
00:03:51,620 --> 00:03:54,140
Now we have to display this variable on the screen.

49
00:03:54,140 --> 00:03:56,330
So screen dot blip.

50
00:03:57,140 --> 00:04:05,210
Lets enter my final font and the location with an x and y tuple which will contain value 202 hundred.

51
00:04:06,170 --> 00:04:08,090
So where do these numbers come from?

52
00:04:08,120 --> 00:04:13,070
I was testing this when I found out it was the best option to make our message appear in the center

53
00:04:13,070 --> 00:04:13,850
of the screen.

54
00:04:14,390 --> 00:04:18,590
So if you want to change this, you can try different numbers until you're satisfied.

55
00:04:18,980 --> 00:04:20,540
So let's execute this.

56
00:04:22,040 --> 00:04:23,690
And the game has started.

57
00:04:24,050 --> 00:04:28,190
And when they reached the point we wanted game over, they all disappeared.

58
00:04:28,700 --> 00:04:33,980
A message reading game over popped up where I wanted and the game was ended.

59
00:04:35,270 --> 00:04:38,660
So now we can activate both music and sounds again.

60
00:04:39,380 --> 00:04:41,300
Let's replace this with 500.

61
00:04:41,300 --> 00:04:46,790
So the game ends when the enemies reach our rocket and we finish programming our game.

62
00:04:47,180 --> 00:04:53,450
If you think about it, we started from scratch and thanks to PI game, we were able to create a new

63
00:04:53,450 --> 00:04:55,970
playable game and that's that's huge.

64
00:04:56,240 --> 00:05:01,220
Do you remember when you started this course you could barely print and do a couple of things more.

65
00:05:01,370 --> 00:05:04,310
So you've gotten really far in just a few days.

66
00:05:04,520 --> 00:05:06,080
Tomorrow we'll be pretty cool.

67
00:05:06,080 --> 00:05:08,060
So have some rest and.

68
00:05:08,290 --> 00:05:09,430
I'll see you there.
