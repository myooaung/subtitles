WEBVTT
1
00:00:08.010 --> 00:00:13.410
And so we come to the second part of this very interesting lesson on map plot lib, where we have seen

2
00:00:13.410 --> 00:00:20.370
some fairly basic graphs so far, but now we're going to get a bit further to see other types of graphs,

3
00:00:20.370 --> 00:00:26.460
for example, bar charts which are widely used and we usually associate them with numerical results

4
00:00:26.460 --> 00:00:27.840
linked to categories.

5
00:00:28.050 --> 00:00:32.670
So first we're going to create a dictionary with three dishes and their prices.

6
00:00:33.150 --> 00:00:37.560
We'll use the names of the meals as keys and the price will be the value.

7
00:00:37.980 --> 00:00:44.520
Then the variable can be called food and be equal to a dictionary whose first value is pizza and its

8
00:00:44.520 --> 00:00:45.990
value can be 15.

9
00:00:46.830 --> 00:00:53.460
The second dish is going to be hamburger with a value of 11 and a third key sandwich.

10
00:00:54.120 --> 00:00:56.100
This lesson is making me hungry.

11
00:00:56.370 --> 00:00:58.410
This will have a value of 17.

12
00:00:58.680 --> 00:00:59.460
Perfect.

13
00:00:59.760 --> 00:01:04.140
And now we have our variable, which this time has text values.

14
00:01:04.470 --> 00:01:11.010
We're going to create a bar chart where the x axis will be formed by the dictionary keys and the y axis

15
00:01:11.010 --> 00:01:12.570
will contain values.

16
00:01:13.230 --> 00:01:22.950
We start as usual by typing fig and ax, say that this is equal to plt sub plot and now we have our

17
00:01:22.950 --> 00:01:24.420
graph already prepared.

18
00:01:25.290 --> 00:01:27.180
Let's put that in its ax.

19
00:01:27.510 --> 00:01:36.060
We have this time a bar graph i.e. bar and we're going to put food keys on the x axis and we're going

20
00:01:36.060 --> 00:01:38.880
to put food values on the y axis.

21
00:01:40.110 --> 00:01:42.270
But we're not just going to leave it like that.

22
00:01:42.990 --> 00:01:44.850
We're going to give it some more data.

23
00:01:45.780 --> 00:01:52.770
We're going to configure it with a X set where we're going to set the title of our chart to be food

24
00:01:52.770 --> 00:01:53.580
prices.

25
00:01:54.610 --> 00:01:59.710
The X label is going to be equal to food and the Y label for prices.

26
00:02:01.070 --> 00:02:02.780
And with this, we could run this cell.

27
00:02:03.260 --> 00:02:08.630
And here comes my child, which, as you can see, is different from the previous ones, because now

28
00:02:08.630 --> 00:02:14.810
we have bars and it shows us the price information in relation to the height of the bar.

29
00:02:15.410 --> 00:02:21.260
So now let's try making a chart that has horizontal bars and this is going to be quite similar activity.

30
00:02:22.270 --> 00:02:31.840
So let's call Fig again an ax equal to plot subplots and let's create a chart that this time is of type

31
00:02:31.840 --> 00:02:32.800
bar H.

32
00:02:34.280 --> 00:02:38.300
Unlike the simple bar, this one is a horizontal bar chart.

33
00:02:38.420 --> 00:02:42.560
So we're going to put a list on the Y axis that's food keys.

34
00:02:43.130 --> 00:02:47.450
And on the other axis, we're going to put another list that's food dot values.

35
00:02:48.140 --> 00:02:51.620
And we're also going to set up, well, pretty much the same as before.

36
00:02:52.160 --> 00:02:58.040
Let's copy this line, which I can paste with some changes, because now food is going to be on the

37
00:02:58.040 --> 00:03:01.790
Y axis and the prices is going to be on the X axis.

38
00:03:02.330 --> 00:03:03.770
So let's run this cell.

39
00:03:03.890 --> 00:03:08.480
And now we have a graph with the same values but orientated horizontally.

40
00:03:09.980 --> 00:03:12.650
Another graph that we can plot is a histogram.

41
00:03:13.130 --> 00:03:18.230
So let's do something here that allows us to generate random numbers but normally distributed.

42
00:03:18.410 --> 00:03:24.680
We're going to do this with a function that we're going to assign to the variable x lets it be a numpy

43
00:03:24.680 --> 00:03:31.130
object random and the function runs n with a value of 1000.

44
00:03:32.240 --> 00:03:37.400
This means that we are showing the normal distribution of random numbers around 1000.

45
00:03:38.620 --> 00:03:44.800
And now we create a histogram again with fig and ax equal to plot subplots.

46
00:03:45.580 --> 00:03:51.790
And below we're going to call x with a hist and we're going to pass the variable x to it.

47
00:03:52.720 --> 00:03:58.450
This is going to have a graph which is a histogram which represents that normal distribution of random

48
00:03:58.450 --> 00:03:59.050
numbers.

49
00:03:59.970 --> 00:04:05.760
We're going to look at a more complex case, and I think this will help you better understand the difference

50
00:04:05.760 --> 00:04:08.340
between Fig and Axe here.

51
00:04:08.340 --> 00:04:14.100
The instruction says that we're going to work with subplots or figures that contain several graphs,

52
00:04:14.670 --> 00:04:21.150
not as we've been doing so far, where we represent one plot at a time, but many plots at the same

53
00:04:21.150 --> 00:04:21.750
time.

54
00:04:22.290 --> 00:04:29.880
We will be able to do this because our fig, i.e. our graphic area, our canvas, can contain many graphics,

55
00:04:29.880 --> 00:04:31.920
i.e. many acts.

56
00:04:32.370 --> 00:04:34.800
So that's why it's important to understand this.

57
00:04:35.070 --> 00:04:38.640
By now you might be saying, Why do I have to do this over and over again?

58
00:04:38.970 --> 00:04:46.710
Because the FIG is one and the X can be many, even though so far we have only put a single ax in each

59
00:04:46.710 --> 00:04:47.190
fig.

60
00:04:47.640 --> 00:04:48.960
So how do we do this?

61
00:04:48.960 --> 00:04:56.040
How do we create, for example, a figure that has four graphs, we put fig again, and now instead

62
00:04:56.040 --> 00:05:03.060
of putting a single ax, we open a parenthesis with a tuple, and here we can open another parenthesis

63
00:05:03.060 --> 00:05:10.230
where we put the first two ax, which we're going to be ax one and ax two.

64
00:05:11.190 --> 00:05:17.880
We leave this parentheses and we put a comma and we open another parenthesis where we put ax three and

65
00:05:17.880 --> 00:05:18.750
ax four.

66
00:05:19.920 --> 00:05:22.860
So now we have four graphs inside the same figure.

67
00:05:23.220 --> 00:05:27.150
Actually, this figure has a tuple composed of two tuples of graphs.

68
00:05:27.660 --> 00:05:31.650
So let's make this equal to plot subplots again.

69
00:05:32.070 --> 00:05:38.040
But now we're going to pass some additional data inside the subplot parentheses, because this needs

70
00:05:38.040 --> 00:05:39.060
some parameters.

71
00:05:40.110 --> 00:05:46.380
We need to put a value for the end rows parameter, which is going to be the number of rows which is

72
00:05:46.380 --> 00:05:53.640
going to be two, and then end calls for the number of columns, which is going to be two as well.

73
00:05:54.000 --> 00:05:56.520
So we want it to be two by two plot.

74
00:05:57.350 --> 00:06:03.650
And we can also size this chart with fig size, which is going to be ten wide and five tall.

75
00:06:04.820 --> 00:06:09.470
So if I run this, you'll see that so far has no value has been passed to it.

76
00:06:09.560 --> 00:06:14.450
I get four empty graphs which have no information, but for graphs nonetheless.

77
00:06:15.240 --> 00:06:23.250
So the parameter I set so far allow for our fig to be composed of four acts arranged in two by two table.

78
00:06:24.360 --> 00:06:29.160
So if I change any parameter, for example, here instead of ten, I put 20.

79
00:06:29.430 --> 00:06:33.330
You will see that my graph will now be much wider, but just as high.

80
00:06:34.430 --> 00:06:37.460
So you can play around with these values to create the graphs you want.

81
00:06:38.030 --> 00:06:43.490
So we're going to set it back to ten and I'm going to copy all of this so I don't have to write it once

82
00:06:43.490 --> 00:06:50.390
more since it's a lot of information, but because the next thing is to create charts with content.

83
00:06:50.660 --> 00:06:53.690
So then we add data to each of these graphs.

84
00:06:54.380 --> 00:06:59.120
First we create a chart with the same layout with a size of ten by five.

85
00:06:59.690 --> 00:07:05.960
For our first chart, we're going to take the set of X one and Y one that we generated earlier so that

86
00:07:05.960 --> 00:07:07.370
we can show something here.

87
00:07:08.120 --> 00:07:14.570
We're going to put x one dot plot and we're going to pass in x one, which, if you remember, comes

88
00:07:14.570 --> 00:07:15.260
out here.

89
00:07:16.160 --> 00:07:19.760
So remember that here we have the four plots that we're going to use.

90
00:07:20.300 --> 00:07:28.760
Each of these variables from X ax one to ax four represents one of the four graphs that appears so in

91
00:07:28.760 --> 00:07:29.540
the first graph.

92
00:07:29.540 --> 00:07:33.440
We're going to pass in some information that we already have to make it simpler.

93
00:07:33.920 --> 00:07:38.630
So let's put here the X one and Y one, which already exists in our working environment.

94
00:07:39.380 --> 00:07:43.190
And for the second graph we have to call the variable X to you.

95
00:07:43.190 --> 00:07:43.820
Follow me.

96
00:07:44.330 --> 00:07:50.960
And here we're going to put a scatter graph with the variables that we already had, x two and y two.

97
00:07:51.620 --> 00:07:54.170
So we already have our second graph.

98
00:07:54.860 --> 00:07:56.900
So let's make a third graph.

99
00:07:57.560 --> 00:08:03.320
It says here that it must have prices of the three males in the bottom left corner of the graph.

100
00:08:03.950 --> 00:08:05.690
So that's ax three.

101
00:08:06.500 --> 00:08:13.700
And now we're going to assign it a bar chart and we're going to put food dot keys in the X and food

102
00:08:13.700 --> 00:08:15.800
dot values in the Y.

103
00:08:16.370 --> 00:08:18.560
And we have our third chart as well.

104
00:08:19.620 --> 00:08:26.940
The graph in the bottom right hand corner i x4 is going to be a histogram i.e. hist and we're going

105
00:08:26.940 --> 00:08:29.670
to open the brackets and the values.

106
00:08:29.670 --> 00:08:33.120
It's going to have all the random values with normal distribution.

107
00:08:34.020 --> 00:08:42.780
So we're going to put an NP object here again dot random dot rand MN so that it has the normal distribution.

108
00:08:43.230 --> 00:08:46.920
And in the brackets we're going to make it with the number 1000 again.

109
00:08:47.650 --> 00:08:50.470
We run this, and here come our photographs.

110
00:08:51.490 --> 00:08:52.720
Look how nice they are.

111
00:08:52.750 --> 00:08:55.300
We've created four graphs in a single figure.

112
00:08:56.320 --> 00:08:57.970
Well, let's move on.

113
00:08:58.390 --> 00:09:02.740
It says here that Matt Plot Lib has a set of various styles available.

114
00:09:03.130 --> 00:09:09.460
So what we're looking at here are graphs displayed in a particular aesthetic style, which is the default.

115
00:09:09.940 --> 00:09:15.340
This style has determined, for example, that the areas have no lines in the background, that the

116
00:09:15.340 --> 00:09:19.900
colour of the graphs is always blue and the formatting of the numbers, etc..

117
00:09:20.500 --> 00:09:21.990
So can we change this?

118
00:09:22.000 --> 00:09:27.970
Yes, because there are many styles available, but I'm going to show you all the styles that exist

119
00:09:27.970 --> 00:09:31.630
with plt, dot style, dot available.

120
00:09:32.200 --> 00:09:34.810
And here we see all the styles that exist.

121
00:09:35.990 --> 00:09:41.360
So since this already has a default style, we're going to change that default style and here we're

122
00:09:41.360 --> 00:09:45.320
going to determine that now PLT style use.

123
00:09:45.470 --> 00:09:52.970
We're going to open the brackets and then we're going to write Seabourn White Grid, which is one of

124
00:09:52.970 --> 00:09:54.170
the styles available.

125
00:09:54.920 --> 00:09:56.840
You can put any other one if you like.

126
00:09:57.110 --> 00:10:02.180
When I run this, I'm not going to see any changes yet because I just changed the settings of the default

127
00:10:02.180 --> 00:10:03.350
style that's used.

128
00:10:03.680 --> 00:10:11.000
Now I can copy all of this so I don't retype and paste it, and if I run it now, it's going to show

129
00:10:11.000 --> 00:10:12.710
up with the new style.

130
00:10:13.620 --> 00:10:18.720
But while we're at it, let's take the opportunity to change some of the things like assigning some

131
00:10:18.720 --> 00:10:21.270
different colors to the graphics that we already have.

132
00:10:21.840 --> 00:10:26.670
For example, the first graphic besides having these two values, X and Y.

133
00:10:26.910 --> 00:10:30.450
If we add a comma, we can add another attribute like color.

134
00:10:31.060 --> 00:10:35.130
Now we can say that it is equal to some hexadecimal value.

135
00:10:35.220 --> 00:10:44.280
So let's put the numeral and let's make it equal to f c be a03 and we're going to copy this and we're

136
00:10:44.280 --> 00:10:46.770
going to paste it also in chart two.

137
00:10:47.670 --> 00:10:51.960
So let's go to this one after the values and let's add color.

138
00:10:52.710 --> 00:10:54.330
Let's try a different color.

139
00:10:54.570 --> 00:10:57.300
This time we put 03c.

140
00:10:57.300 --> 00:10:58.710
6fc.

141
00:11:00.050 --> 00:11:03.530
And let's go on to the last one and let's do the same thing.

142
00:11:03.530 --> 00:11:08.990
And we put the comma, we put color and we change the color so it doesn't all look the same.

143
00:11:09.590 --> 00:11:17.030
And let's put f, c, 036b and let's run this and see what we have now.

144
00:11:19.120 --> 00:11:19.600
All right.

145
00:11:19.600 --> 00:11:22.330
We have the same graphics, but with a different style.

146
00:11:23.380 --> 00:11:24.850
The background has changed.

147
00:11:25.180 --> 00:11:26.560
It now shows the grid.

148
00:11:26.590 --> 00:11:31.900
This is thanks to changing the default, and by changing the colors, we can make each of the graphics

149
00:11:31.900 --> 00:11:33.490
display in a different color.

150
00:11:34.030 --> 00:11:39.520
And in fact, if I go back to the top, to the graphics, I've already run and I run this one again,

151
00:11:39.520 --> 00:11:40.660
which had nothing.

152
00:11:40.960 --> 00:11:42.310
We're going to see that now.

153
00:11:42.310 --> 00:11:44.260
The grid is going to appear inside.

154
00:11:44.740 --> 00:11:46.180
This wasn't there before.

155
00:11:47.050 --> 00:11:53.080
So I've changed the way that it's played by default and this graph to now has the grid in it and so

156
00:11:53.080 --> 00:11:53.410
on.

157
00:11:53.890 --> 00:11:56.410
So this has been introduction to plot lib.

158
00:11:56.650 --> 00:12:00.130
There is a lot more to learn, so please don't stop there.

159
00:12:00.280 --> 00:12:04.650
We have no excuse not to learn because you already know how it works.

160
00:12:04.660 --> 00:12:06.130
You just learnt it.

161
00:12:06.310 --> 00:12:10.160
So now you need to know in depth all the resources you have.

162
00:12:10.180 --> 00:12:14.380
So I'm going to move on to the next lesson now because we still have a lot to learn today.
