WEBVTT
1
00:00:00.007 --> 00:00:01.008
- [Narrator] We talked about using

2
00:00:01.008 --> 00:00:02.009
environment variables

3
00:00:02.009 --> 00:00:05.004
for flexing by environment.

4
00:00:05.004 --> 00:00:07.002
Sometimes, however, there's a desire

5
00:00:07.002 --> 00:00:08.003
to change behavior

6
00:00:08.003 --> 00:00:12.003
based on preconfigured profiles.

7
00:00:12.003 --> 00:00:14.000
A case for this that I have used

8
00:00:14.000 --> 00:00:16.002
are injecting mocking behavior

9
00:00:16.002 --> 00:00:18.001
in a QA environment.

10
00:00:18.001 --> 00:00:22.000
So let's take a look at this in action in Spring.

11
00:00:22.000 --> 00:00:23.001
Back in our IDE,

12
00:00:23.001 --> 00:00:27.008
I want you to open your config file.

13
00:00:27.008 --> 00:00:32.003
And we're going to take our time service here,

14
00:00:32.003 --> 00:00:37.005
and we're going to add to it an app profile beam.

15
00:00:37.005 --> 00:00:43.002
And we're going to say notdev.

16
00:00:43.002 --> 00:00:46.001
Now we're going to create a duplicate instance

17
00:00:46.001 --> 00:00:46.009
of this beam.

18
00:00:46.009 --> 00:00:49.004
Well, sort of duplicate.

19
00:00:49.004 --> 00:00:52.000
So app beam,

20
00:00:52.000 --> 00:00:53.009
app profile,

21
00:00:53.009 --> 00:00:57.004
and this time we're going to say dev.

22
00:00:57.004 --> 00:01:01.002
And now we're going to do a public time service,

23
00:01:01.002 --> 00:01:02.005
and since this is JAVA,

24
00:01:02.005 --> 00:01:04.006
we have to give it something else,

25
00:01:04.006 --> 00:01:07.006
so we'll call it timeservice12.

26
00:01:07.006 --> 00:01:13.008
And we're going to return a new time service,

27
00:01:13.008 --> 00:01:17.007
but this time we're going to set our 24-hour equal defaults.

28
00:01:17.007 --> 00:01:19.003
So, when we're in dev,

29
00:01:19.003 --> 00:01:21.000
we want to see 12-hour time.

30
00:01:21.000 --> 00:01:23.007
When we're in notdev,

31
00:01:23.007 --> 00:01:25.002
we want to see 24-hour time

32
00:01:25.002 --> 00:01:27.000
as our output.

33
00:01:27.000 --> 00:01:28.004
So in order to achieve this,

34
00:01:28.004 --> 00:01:30.004
we need to tell Spring

35
00:01:30.004 --> 00:01:32.005
which profile to activate,

36
00:01:32.005 --> 00:01:33.009
and there's a specific tag

37
00:01:33.009 --> 00:01:35.003
that we use to do that.

38
00:01:35.003 --> 00:01:39.008
We use the run configurations once again.

39
00:01:39.008 --> 00:01:42.002
And I'm going to take my existing run,

40
00:01:42.002 --> 00:01:45.004
and I'm going to call it prod.

41
00:01:45.004 --> 00:01:49.000
And I'm going to pass it a d value,

42
00:01:49.000 --> 00:01:53.003
so a VM argument is what I'm going to use in this case.

43
00:01:53.003 --> 00:01:58.005
spring.profiles.active=prod.

44
00:01:58.005 --> 00:02:00.005
Now you can do this a couple different ways.

45
00:02:00.005 --> 00:02:02.001
You can pass it as program arguments,

46
00:02:02.001 --> 00:02:03.007
there's VM arguments.

47
00:02:03.007 --> 00:02:05.006
This is how I choose to do it in this case,

48
00:02:05.006 --> 00:02:07.008
and this is how I choose to do it in production.

49
00:02:07.008 --> 00:02:10.008
So that's what I'm going to do here.

50
00:02:10.008 --> 00:02:13.002
Now I'm going to copy these environment variables,

51
00:02:13.002 --> 00:02:15.004
'cause we're not going to change those.

52
00:02:15.004 --> 00:02:19.004
But I am going to run a new application,

53
00:02:19.004 --> 00:02:23.001
and we'll call this one Application Dev.

54
00:02:23.001 --> 00:02:24.005
And the main class,

55
00:02:24.005 --> 00:02:28.002
we will pick our application class.

56
00:02:28.002 --> 00:02:36.002
We're going to pass a -dspring.profiles.active=dev

57
00:02:36.002 --> 00:02:37.008
in this case.

58
00:02:37.008 --> 00:02:40.009
And we'll use the same environment variables.

59
00:02:40.009 --> 00:02:43.004
So now the only difference between dev and prod

60
00:02:43.004 --> 00:02:46.007
should be that in dev we see the 12-hour clock,

61
00:02:46.007 --> 00:02:49.004
and in prod we see 24.

62
00:02:49.004 --> 00:02:50.005
So let's give that a test.

63
00:02:50.005 --> 00:02:55.005
So we will run our dev application,

64
00:02:55.005 --> 00:02:57.006
and you'll see that we see the time

65
00:02:57.006 --> 00:03:02.001
with an AM PM indicating it's a 12-hour clock.

66
00:03:02.001 --> 00:03:07.006
And let's also run our prod configuration.

67
00:03:07.006 --> 00:03:10.003
And you'll see that we see it in 24-hour time.

68
00:03:10.003 --> 00:03:13.006
So by simply passing it a profile name,

69
00:03:13.006 --> 00:03:14.008
we had two different beams

70
00:03:14.008 --> 00:03:15.007
that were configured,

71
00:03:15.007 --> 00:03:17.006
and we chose which one

72
00:03:17.006 --> 00:03:19.007
of these preconfigured instances,

73
00:03:19.007 --> 00:03:21.006
based on this value.

74
00:03:21.006 --> 00:03:23.000
And it's a very specific value,

75
00:03:23.000 --> 00:03:26.004
spring.profiles.active, to use.

76
00:03:26.004 --> 00:03:29.001
You can use this at the entire config level.

77
00:03:29.001 --> 00:03:31.003
You can use it in individual beams.

78
00:03:31.003 --> 00:03:32.009
It's a very powerful construct

79
00:03:32.009 --> 00:03:34.003
that you can use,

80
00:03:34.003 --> 00:03:35.005
especially when you're doing a lot

81
00:03:35.005 --> 00:03:36.008
of stuff with local development,

82
00:03:36.008 --> 00:03:38.009
and you want to change behavior.

83
00:03:38.009 --> 00:03:40.005
I find that environment variables

84
00:03:40.005 --> 00:03:41.008
are much more robust

85
00:03:41.008 --> 00:03:44.005
in a distributed containerized workflow,

86
00:03:44.005 --> 00:03:46.007
but not everybody's in that situation.

87
00:03:46.007 --> 00:03:48.001
Sometimes you just want to set these

88
00:03:48.001 --> 00:03:49.005
in your app server,

89
00:03:49.005 --> 00:03:50.004
and have them set

90
00:03:50.004 --> 00:03:51.004
so that you can provide

91
00:03:51.004 --> 00:03:54.003
four different configurations and go from there.

92
00:03:54.003 --> 00:03:55.003
And in the next video,

93
00:03:55.003 --> 00:03:56.001
we're going to show you how

94
00:03:56.001 --> 00:03:57.004
to load config files

95
00:03:57.004 --> 00:04:00.004
and other details based on an environment,

96
00:04:00.004 --> 00:04:03.000
without setting up different profiles.

