WEBVTT
1
00:00:00.008 --> 00:00:02.003
- [Instructor] The final topic in this chapter

2
00:00:02.003 --> 00:00:04.009
that we need to discuss is proxies.

3
00:00:04.009 --> 00:00:08.004
Proxies are essentially aspected behavior that is applied

4
00:00:08.004 --> 00:00:13.007
to your classes by the framework under various conditions.

5
00:00:13.007 --> 00:00:17.003
In Spring, everything is a proxy.

6
00:00:17.003 --> 00:00:20.005
And this comes with some considerations.

7
00:00:20.005 --> 00:00:23.006
This behavior was added in Spring 4.0.

8
00:00:23.006 --> 00:00:26.003
All of your classes, regardless of their annotations,

9
00:00:26.003 --> 00:00:29.004
get wrapped with at least one proxy.

10
00:00:29.004 --> 00:00:32.006
Proxies are used to add behavior to your class.

11
00:00:32.006 --> 00:00:36.007
Many of the proxies have specific purposes that enable you

12
00:00:36.007 --> 00:00:42.001
to write code cleaner, things like transactional boundaries.

13
00:00:42.001 --> 00:00:46.004
Spring uses both JDK and CGLib-based proxies

14
00:00:46.004 --> 00:00:48.007
in its operation.

15
00:00:48.007 --> 00:00:51.004
I mentioned a moment ago that there are some considerations

16
00:00:51.004 --> 00:00:53.006
when using proxies.

17
00:00:53.006 --> 00:00:56.008
First and foremost, and one that will cause a defect

18
00:00:56.008 --> 00:01:00.008
at least once if you don't remember this, is that proxies

19
00:01:00.008 --> 00:01:03.006
can only apply their behavior when a call

20
00:01:03.006 --> 00:01:05.006
goes through to proxy.

21
00:01:05.006 --> 00:01:09.005
Private methods don't get exposed via the proxy

22
00:01:09.005 --> 00:01:12.009
so they will now have behavior added to them.

23
00:01:12.009 --> 00:01:16.006
In fact, for the same reason, internal calls

24
00:01:16.006 --> 00:01:19.003
don't get proxy behavior either.

25
00:01:19.003 --> 00:01:23.000
This lack of behavior as mentioned can be a source of bugs.

26
00:01:23.000 --> 00:01:25.003
One way that I have experienced this

27
00:01:25.003 --> 00:01:27.008
was in transactional rollbacks.

28
00:01:27.008 --> 00:01:30.003
When I have written some JDBC template code

29
00:01:30.003 --> 00:01:34.003
using transactions, internal calls will burn me

30
00:01:34.003 --> 00:01:38.002
because the rollback on exception wasn't handled

31
00:01:38.002 --> 00:01:40.000
because it wasn't part of the proxy

32
00:01:40.000 --> 00:01:42.002
because it was an internal method.

33
00:01:42.002 --> 00:01:44.002
So keep this in mind.

34
00:01:44.002 --> 00:01:47.005
Don't call reference methods on the same class

35
00:01:47.005 --> 00:01:50.008
and expect them to have behavior added to them

36
00:01:50.008 --> 00:01:53.000
by the proxy.

