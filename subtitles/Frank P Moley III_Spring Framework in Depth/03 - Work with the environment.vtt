WEBVTT
1
00:00:00.008 --> 00:00:02.008
- [Frank] Most applications cannot be deployed

2
00:00:02.008 --> 00:00:04.009
to just one data center anymore,

3
00:00:04.009 --> 00:00:07.008
and robust configuration patterns are needed

4
00:00:07.008 --> 00:00:09.002
to support this.

5
00:00:09.002 --> 00:00:12.001
The use of environment variables and properties

6
00:00:12.001 --> 00:00:15.003
is one of the most common ways of injecting data

7
00:00:15.003 --> 00:00:18.005
into a running application to Flex by things

8
00:00:18.005 --> 00:00:21.002
like data center or environment.

9
00:00:21.002 --> 00:00:23.005
Spring provides an environment abstraction

10
00:00:23.005 --> 00:00:25.006
that allows you to build applications

11
00:00:25.006 --> 00:00:30.001
that Flex configuration based on environment variables.

12
00:00:30.001 --> 00:00:33.008
The environment within Spring is populated by default

13
00:00:33.008 --> 00:00:37.000
with all of the system environment variables

14
00:00:37.000 --> 00:00:39.008
at the run time of the application.

15
00:00:39.008 --> 00:00:43.000
This environment construct is also populated

16
00:00:43.000 --> 00:00:46.002
and can be supplemented by properties

17
00:00:46.002 --> 00:00:51.001
via run time or by properties files, among other things.

18
00:00:51.001 --> 00:00:52.008
This allows you to provide a set

19
00:00:52.008 --> 00:00:55.002
of default configuration files

20
00:00:55.002 --> 00:00:57.005
that can be overridden at run time,

21
00:00:57.005 --> 00:01:01.008
and there's a very detailed hierarchy of like 15 layers deep

22
00:01:01.008 --> 00:01:04.006
in the Spring documentation on the order

23
00:01:04.006 --> 00:01:07.007
in which these values, when they share a key,

24
00:01:07.007 --> 00:01:09.003
will be overridden.

25
00:01:09.003 --> 00:01:11.003
This is a very powerful tool,

26
00:01:11.003 --> 00:01:15.003
especially in a cloud native world, that I use a lot.

27
00:01:15.003 --> 00:01:18.001
It is also useful in traditional applications

28
00:01:18.001 --> 00:01:20.007
when dealing with multiple environments.

29
00:01:20.007 --> 00:01:23.000
You can use a mixture of properties

30
00:01:23.000 --> 00:01:26.009
and environment variables to manipulate the configuration

31
00:01:26.009 --> 00:01:29.006
as you migrate from Dev to test,

32
00:01:29.006 --> 00:01:32.002
or from data center to data center.

33
00:01:32.002 --> 00:01:35.007
This is how I manage things like URLs of other services,

34
00:01:35.007 --> 00:01:39.005
log levels, and various other run time configurations

35
00:01:39.005 --> 00:01:42.000
within a microservices environment.

36
00:01:42.000 --> 00:01:45.000
So let's take a look at this in practice.

37
00:01:45.000 --> 00:01:47.002
So jump back over into our code here,

38
00:01:47.002 --> 00:01:48.009
and we're going to make a few changes.

39
00:01:48.009 --> 00:01:50.004
The first set of changes we're going to make

40
00:01:50.004 --> 00:01:53.002
is in our OutputService itself.

41
00:01:53.002 --> 00:02:01.007
We're going to create a private final string called name,

42
00:02:01.007 --> 00:02:04.005
and because it's final, we're going to inject it

43
00:02:04.005 --> 00:02:07.007
into our run time via the constructor.

44
00:02:07.007 --> 00:02:13.004
So we will take a string name, and this.name

45
00:02:13.004 --> 00:02:17.001
equals that name, and now we're going to remove that

46
00:02:17.001 --> 00:02:19.008
from our generateOutput method,

47
00:02:19.008 --> 00:02:22.001
and you'll see that it just gets set

48
00:02:22.001 --> 00:02:24.008
from the attribute on the class.

49
00:02:24.008 --> 00:02:29.002
Now, let's jump over here to our application config,

50
00:02:29.002 --> 00:02:31.001
and we're going to create a few properties here,

51
00:02:31.001 --> 00:02:32.003
so the first one that we're going to do

52
00:02:32.003 --> 00:02:34.007
is we're going to overwrite the static string Hello

53
00:02:34.007 --> 00:02:38.000
in our greeting, with a property represented

54
00:02:38.000 --> 00:02:41.007
by dollar sign, curly brace, an we're going to name this one

55
00:02:41.007 --> 00:02:47.002
app.greeting, close that curly brace,

56
00:02:47.002 --> 00:02:49.009
we're going to add another one,

57
00:02:49.009 --> 00:02:57.004
dollar sign, curly brace, app.name, close that curly brace,

58
00:02:57.004 --> 00:02:59.008
always remember to close that.

59
00:02:59.008 --> 00:03:01.004
That's one of the things that I tend to forget

60
00:03:01.004 --> 00:03:03.004
more often than not.

61
00:03:03.004 --> 00:03:05.002
Now we need to provide these values,

62
00:03:05.002 --> 00:03:07.001
so let's take a quick diversion,

63
00:03:07.001 --> 00:03:09.006
and in source main resources, we're going to create

64
00:03:09.006 --> 00:03:16.000
a new file, we will call this application.properties.

65
00:03:16.000 --> 00:03:19.004
In the app.properties, we're going to create an app.name,

66
00:03:19.004 --> 00:03:22.003
I'm going to set it equal to my name,

67
00:03:22.003 --> 00:03:29.008
and an app.greeting, and I'm going to set it equal to Hello.

68
00:03:29.008 --> 00:03:33.007
Now, let's jump to our application config class,

69
00:03:33.007 --> 00:03:36.000
and let's finish this up.

70
00:03:36.000 --> 00:03:37.003
So you'll see that when we created

71
00:03:37.003 --> 00:03:39.007
our OutputService Bean now, we have an error,

72
00:03:39.007 --> 00:03:42.008
and we've got an error because we need to inject name

73
00:03:42.008 --> 00:03:45.003
into that constructor, and that's going to come

74
00:03:45.003 --> 00:03:47.001
from those properties,

75
00:03:47.001 --> 00:03:53.001
and we also want to inject our greeting

76
00:03:53.001 --> 00:03:55.008
into our greetingService.

77
00:03:55.008 --> 00:03:57.009
So that's the basics of getting that set up,

78
00:03:57.009 --> 00:04:00.004
now there's one more change that we need to make,

79
00:04:00.004 --> 00:04:04.002
we're going to add a PropertySource annotation

80
00:04:04.002 --> 00:04:07.002
to our configuration class, and we're going to load that

81
00:04:07.002 --> 00:04:13.008
from classpath colon, application.properties.

82
00:04:13.008 --> 00:04:15.008
So this will tell Spring to read the classpath,

83
00:04:15.008 --> 00:04:18.007
which source main resources is on the classpath,

84
00:04:18.007 --> 00:04:21.002
and find a file called application.properties

85
00:04:21.002 --> 00:04:22.009
to read that data.

86
00:04:22.009 --> 00:04:23.008
Now the final change.

87
00:04:23.008 --> 00:04:26.005
Go into our application class,

88
00:04:26.005 --> 00:04:29.000
and you'll see that generateOutput is showing up

89
00:04:29.000 --> 00:04:31.009
as having a bug, and that's because we no longer need

90
00:04:31.009 --> 00:04:34.005
a string when calling that method.

91
00:04:34.005 --> 00:04:36.003
So now if we execute this,

92
00:04:36.003 --> 00:04:39.001
we're going to see the output that we saw before,

93
00:04:39.001 --> 00:04:42.003
but we're now injecting it from properties files.

94
00:04:42.003 --> 00:04:43.009
And indeed we do.

95
00:04:43.009 --> 00:04:46.001
No need to let that run for 25 seconds,

96
00:04:46.001 --> 00:04:48.000
so we'll stop that.

97
00:04:48.000 --> 00:04:49.004
So now I want to override this,

98
00:04:49.004 --> 00:04:51.001
so I'm going to use environment variables

99
00:04:51.001 --> 00:04:53.005
to override the property.

100
00:04:53.005 --> 00:04:55.009
Now, IntelliJ gives me a very easy way

101
00:04:55.009 --> 00:04:58.004
to edit my configuration.

102
00:04:58.004 --> 00:05:01.002
Your ID most likely has the exact same setup

103
00:05:01.002 --> 00:05:03.002
at a different place,

104
00:05:03.002 --> 00:05:04.009
but I'm going to come in here, and I'm going to set

105
00:05:04.009 --> 00:05:06.004
some environment variables.

106
00:05:06.004 --> 00:05:11.004
And the first one that I'm going to set is app.name,

107
00:05:11.004 --> 00:05:17.003
and I'm going to set the name equal to Partner,

108
00:05:17.003 --> 00:05:22.005
and now I'm going to set an app.greeting,

109
00:05:22.005 --> 00:05:26.001
and we're going to say Howdy.

110
00:05:26.001 --> 00:05:28.005
So these environment variables will be provided

111
00:05:28.005 --> 00:05:33.000
to my application through this run configuration.

112
00:05:33.000 --> 00:05:35.008
Can also do this through exports and various other methods,

113
00:05:35.008 --> 00:05:38.007
but for now, this is sufficient.

114
00:05:38.007 --> 00:05:41.007
So let's run this application once again.

115
00:05:41.007 --> 00:05:44.006
And what we expect to see is what we indeed do see,

116
00:05:44.006 --> 00:05:47.002
which is Howdy Partner is coming in from the environment,

117
00:05:47.002 --> 00:05:49.000
and it's overriding the properties,

118
00:05:49.000 --> 00:05:51.001
and that's exactly what we do

119
00:05:51.001 --> 00:05:54.005
when we deploy Spring applications to multiple environments

120
00:05:54.005 --> 00:05:57.000
or multiple data centers.

