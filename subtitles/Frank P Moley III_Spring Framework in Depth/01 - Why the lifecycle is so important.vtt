WEBVTT
1
00:00:00.006 --> 00:00:02.009
- [Instructor] The lifecycle of a Spring application

2
00:00:02.009 --> 00:00:06.003
explains the various states your application goes through

3
00:00:06.003 --> 00:00:08.008
while being managed by the Spring framework.

4
00:00:08.008 --> 00:00:12.001
It is critical for Spring developers to fully understand

5
00:00:12.001 --> 00:00:14.004
this lifecycle and in my opinion,

6
00:00:14.004 --> 00:00:18.005
this is the meat and potatoes of this entire course.

7
00:00:18.005 --> 00:00:21.000
So let's talk about why the knowledge of the framework

8
00:00:21.000 --> 00:00:24.002
is so critical for a Spring developer.

9
00:00:24.002 --> 00:00:26.008
Knowledge of the lifecycle increases

10
00:00:26.008 --> 00:00:29.003
overall knowledge of Spring.

11
00:00:29.003 --> 00:00:32.007
As you learn how the parts fit together in the lifecycle,

12
00:00:32.007 --> 00:00:35.005
you will gain understanding of how to use the framework

13
00:00:35.005 --> 00:00:39.001
in a way the designers intended it to be used.

14
00:00:39.001 --> 00:00:41.003
It also will improve the extensibility

15
00:00:41.003 --> 00:00:43.002
of the framework for you.

16
00:00:43.002 --> 00:00:45.005
You will learn how to write custom processors

17
00:00:45.005 --> 00:00:49.002
that interact with beans or the bean factory,

18
00:00:49.002 --> 00:00:51.007
at appropriate times in the lifecycle

19
00:00:51.007 --> 00:00:54.003
to add behavior to your application

20
00:00:54.003 --> 00:00:57.008
or to just individual classes.

21
00:00:57.008 --> 00:00:59.007
It can also aid in troubleshooting

22
00:00:59.007 --> 00:01:04.005
by providing a baseline for debugging application issues,

23
00:01:04.005 --> 00:01:07.006
because everything in Spring is a proxy,

24
00:01:07.006 --> 00:01:12.001
debugging step wise can be very challenging however.

25
00:01:12.001 --> 00:01:15.003
Knowledge of the life cycle can help you better determine

26
00:01:15.003 --> 00:01:17.000
where to break your code

27
00:01:17.000 --> 00:01:20.005
and where to investigate for issues.

28
00:01:20.005 --> 00:01:22.009
Another aspect of learning about the details

29
00:01:22.009 --> 00:01:25.000
of a framework like Spring,

30
00:01:25.000 --> 00:01:27.007
is it enhances your professional development,

31
00:01:27.007 --> 00:01:30.003
something all developers should reach for,

32
00:01:30.003 --> 00:01:32.004
as engineers we don't spend enough time

33
00:01:32.004 --> 00:01:35.001
understanding the details of our craft as a whole

34
00:01:35.001 --> 00:01:36.007
in my opinion.

35
00:01:36.007 --> 00:01:40.004
Learning is the key to that, hence why you're here.

36
00:01:40.004 --> 00:01:42.009
This level of understanding of any framework,

37
00:01:42.009 --> 00:01:45.007
especially Spring, provides deeper knowledge

38
00:01:45.007 --> 00:01:47.003
of the tools that we use,

39
00:01:47.003 --> 00:01:50.000
which of course makes us more capable

40
00:01:50.000 --> 00:01:52.007
of using those very tools.

41
00:01:52.007 --> 00:01:56.000
It also allows us to have more educated discussions

42
00:01:56.000 --> 00:01:58.005
with our peers about the tools,

43
00:01:58.005 --> 00:02:00.005
it can also allow us to have discussions

44
00:02:00.005 --> 00:02:03.005
that can be fruitful with the entire community

45
00:02:03.005 --> 00:02:07.002
and not just our peers at the company we work for.

46
00:02:07.002 --> 00:02:11.009
Finally, it can help us make better architectural decisions,

47
00:02:11.009 --> 00:02:14.005
I have used my knowledge of Spring and proxies

48
00:02:14.005 --> 00:02:17.006
to design toolkits that allow us to inject

49
00:02:17.006 --> 00:02:20.008
desired behavior like encryption, audit logging,

50
00:02:20.008 --> 00:02:23.001
and various other cross cutting concerns

51
00:02:23.001 --> 00:02:26.006
on applications that I have been involved with.

52
00:02:26.006 --> 00:02:28.005
I know it shouldn't really need to be mentioned,

53
00:02:28.005 --> 00:02:31.006
but Spring is an open source software project,

54
00:02:31.006 --> 00:02:35.001
and as such, it needs a community.

55
00:02:35.001 --> 00:02:37.006
Knowledge of the framework allows

56
00:02:37.006 --> 00:02:40.004
for much better interactions with this community.

57
00:02:40.004 --> 00:02:42.002
This can come from simple tasks

58
00:02:42.002 --> 00:02:44.009
like filing more detailed bug reports,

59
00:02:44.009 --> 00:02:48.001
it can also come into play with detailed discussions

60
00:02:48.001 --> 00:02:51.005
around best practices, speaking at conferences,

61
00:02:51.005 --> 00:02:54.006
or other educational discussions.

62
00:02:54.006 --> 00:02:56.006
This knowledge can also help you be

63
00:02:56.006 --> 00:02:58.009
a better open source developer,

64
00:02:58.009 --> 00:03:02.004
and contribute to the framework that you use,

65
00:03:02.004 --> 00:03:06.002
Spring as is most open source software projects,

66
00:03:06.002 --> 00:03:08.004
driven by the community.

67
00:03:08.004 --> 00:03:09.009
There's usually a corporate back

68
00:03:09.009 --> 00:03:12.001
around big frameworks like Spring

69
00:03:12.001 --> 00:03:15.003
but that doesn't mean that they ignore their roots,

70
00:03:15.003 --> 00:03:17.009
contributing in open source is your way

71
00:03:17.009 --> 00:03:20.000
of helping the next generation,

72
00:03:20.000 --> 00:03:23.002
as well as the current one of developers.

73
00:03:23.002 --> 00:03:25.008
Knowledge of the lifecycle and the framework

74
00:03:25.008 --> 00:03:30.003
can make this a shorter journey from problem to solution,

75
00:03:30.003 --> 00:03:33.003
and you may find you're able to fix the bugs

76
00:03:33.003 --> 00:03:38.000
that you find and help other developers even quicker.

