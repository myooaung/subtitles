WEBVTT
1
00:00:00.006 --> 00:00:02.005
- [Instructor] Now, back to our lifecycle.

2
00:00:02.005 --> 00:00:04.009
Once all of the beans are initialized,

3
00:00:04.009 --> 00:00:07.006
configured, and instantiated

4
00:00:07.006 --> 00:00:11.007
we enter the use phase of the lifecycle.

5
00:00:11.007 --> 00:00:13.007
Now, the use phase is the most boring

6
00:00:13.007 --> 00:00:16.000
of all of the phases of the lifecycle,

7
00:00:16.000 --> 00:00:17.008
but it's the one that actually pays the bills,

8
00:00:17.008 --> 00:00:19.003
'cause this is where the real work

9
00:00:19.003 --> 00:00:21.007
of the application gets done.

10
00:00:21.007 --> 00:00:25.005
Most of our time is spent in this phase.

11
00:00:25.005 --> 00:00:27.001
Assuming an application stays up

12
00:00:27.001 --> 00:00:29.002
for any amount of time anyway.

13
00:00:29.002 --> 00:00:31.009
The ApplicationContext serves proxies

14
00:00:31.009 --> 00:00:33.001
to the original classes.

15
00:00:33.001 --> 00:00:36.004
So again, everything goes through proxies.

16
00:00:36.004 --> 00:00:41.003
The ApplicationContext also maintains a handle to each bean,

17
00:00:41.003 --> 00:00:43.000
assuming it's of type singleton.

18
00:00:43.000 --> 00:00:44.002
And I keep mentioning that

19
00:00:44.002 --> 00:00:46.003
because it's so important to remember.

20
00:00:46.003 --> 00:00:49.000
These beans don't get garbage collected.

21
00:00:49.000 --> 00:00:52.002
The ApplicationContext maintains that handle

22
00:00:52.002 --> 00:00:56.000
throughout the entire lifecycle of the application.

23
00:00:56.000 --> 00:01:00.003
Now, there is a special type of bean that you can create

24
00:01:00.003 --> 00:01:02.007
called a context-aware bean.

25
00:01:02.007 --> 00:01:08.001
And Spring provides this interface ApplicationContextAware.

26
00:01:08.001 --> 00:01:11.008
And what that does is it gives your class a handle

27
00:01:11.008 --> 00:01:14.002
to the ApplicationContext.

28
00:01:14.002 --> 00:01:17.004
For the most part, a Spring bean doesn't know

29
00:01:17.004 --> 00:01:21.008
that it's in Spring, and it also doesn't know its parent.

30
00:01:21.008 --> 00:01:26.003
The ContextAware interface, this ApplicationContextAware,

31
00:01:26.003 --> 00:01:28.007
gives your bean special insight

32
00:01:28.007 --> 00:01:33.004
into the ApplicationContext so it can callback into it.

33
00:01:33.004 --> 00:01:37.005
Now, it's not very common to use this interface,

34
00:01:37.005 --> 00:01:41.004
but it is available during the use phase if you need it

35
00:01:41.004 --> 00:01:45.007
for some reason, but use it with caution.

36
00:01:45.007 --> 00:01:49.005
You can accidentally call close without meaning to

37
00:01:49.005 --> 00:01:51.008
because you think you're doing something,

38
00:01:51.008 --> 00:01:54.002
but we're going to talk about the dangers of close here

39
00:01:54.002 --> 00:01:56.000
in the next phase.

