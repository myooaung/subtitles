WEBVTT
1
00:00:00.006 --> 00:00:02.008
- [Instructor] The first step of initialization

2
00:00:02.008 --> 00:00:06.003
is the loading of the Bean definitions.

3
00:00:06.003 --> 00:00:08.000
So in our big picture overview,

4
00:00:08.000 --> 00:00:12.006
we're in this box here that says Bean Definitions Loaded.

5
00:00:12.006 --> 00:00:15.008
There are several sources of Bean definitions.

6
00:00:15.008 --> 00:00:17.004
While we're talking about the lifecycle

7
00:00:17.004 --> 00:00:19.002
from a traditional flow,

8
00:00:19.002 --> 00:00:21.003
there is some slight variance here

9
00:00:21.003 --> 00:00:24.002
on how each of these gets loaded.

10
00:00:24.002 --> 00:00:27.002
Java config is the first we will talk about.

11
00:00:27.002 --> 00:00:29.004
This is the most different of the loading

12
00:00:29.004 --> 00:00:31.005
of the Bean definitions because the objects

13
00:00:31.005 --> 00:00:35.006
are constructed as part of reading the definition.

14
00:00:35.006 --> 00:00:37.004
So keep that in mind as we go through

15
00:00:37.004 --> 00:00:39.000
the rest of the chapter.

16
00:00:39.000 --> 00:00:41.007
This configuration strategy may impact

17
00:00:41.007 --> 00:00:44.003
how these Beans are initialized.

18
00:00:44.003 --> 00:00:47.004
XML configuration is still valid for configuring

19
00:00:47.004 --> 00:00:49.002
the application context.

20
00:00:49.002 --> 00:00:51.001
Though it isn't preferred anymore,

21
00:00:51.001 --> 00:00:53.009
it is still being used in many applications,

22
00:00:53.009 --> 00:00:55.008
especially some older ones.

23
00:00:55.008 --> 00:00:59.004
The XML file or files are read to prime

24
00:00:59.004 --> 00:01:01.002
the Bean definitions.

25
00:01:01.002 --> 00:01:02.009
And the final way that we were talka

26
00:01:02.009 --> 00:01:05.003
and we've already seen is component scanning

27
00:01:05.003 --> 00:01:07.002
and auto configuration.

28
00:01:07.002 --> 00:01:10.001
And this is very similar to the way that XML works,

29
00:01:10.001 --> 00:01:12.003
except for that instead of loading a file,

30
00:01:12.003 --> 00:01:16.000
your classes are scanned and then they actually

31
00:01:16.000 --> 00:01:20.008
at that point become available through the Bean definition.

32
00:01:20.008 --> 00:01:24.000
So when we talk about priming the BeanFactory,

33
00:01:24.000 --> 00:01:26.007
we understand what these Bean definitions do.

34
00:01:26.007 --> 00:01:28.009
So the first step is that the Bean definitions

35
00:01:28.009 --> 00:01:32.002
are loaded into the BeanFactory from all sources

36
00:01:32.002 --> 00:01:33.007
and in a running application,

37
00:01:33.007 --> 00:01:35.009
you don't just have to choose one.

38
00:01:35.009 --> 00:01:38.004
You can have some classes that are component scanned,

39
00:01:38.004 --> 00:01:40.009
and some that are configured through XML,

40
00:01:40.009 --> 00:01:41.007
and some through Java,

41
00:01:41.007 --> 00:01:44.003
and it's just the way that Spring is set up.

42
00:01:44.003 --> 00:01:45.005
You can do all of them,

43
00:01:45.005 --> 00:01:47.008
although I would highly recommend you pick one

44
00:01:47.008 --> 00:01:49.000
and stick with it.

45
00:01:49.000 --> 00:01:51.009
So from this point an ID is used to create

46
00:01:51.009 --> 00:01:54.001
the index for the factory.

47
00:01:54.001 --> 00:01:57.003
And this is the only time anymore that we're going to use ID.

48
00:01:57.003 --> 00:02:00.000
It is only used as an index in the factory,

49
00:02:00.000 --> 00:02:03.002
everything else will be referenced by type or name.

50
00:02:03.002 --> 00:02:06.006
The BeanFactory only contains references at this point

51
00:02:06.006 --> 00:02:08.006
and that's an important point to note.

52
00:02:08.006 --> 00:02:10.008
Nothing has been instantiated.

53
00:02:10.008 --> 00:02:14.001
It's only references or pointers to the objects

54
00:02:14.001 --> 00:02:18.003
with metadata surrounding it about how to configure it.

55
00:02:18.003 --> 00:02:20.002
So once this phase is complete,

56
00:02:20.002 --> 00:02:21.008
there's a few things that we can say

57
00:02:21.008 --> 00:02:24.003
about the lifecycle of our application.

58
00:02:24.003 --> 00:02:27.008
All Beans have been loaded into the BeanFactory.

59
00:02:27.008 --> 00:02:30.009
Again, Beans are just references and metadata at this point.

60
00:02:30.009 --> 00:02:33.000
There are no objects.

61
00:02:33.000 --> 00:02:36.000
And this no objects being instantiated in your code

62
00:02:36.000 --> 00:02:38.007
is very important because at this point

63
00:02:38.007 --> 00:02:40.006
any manipulation we are going to do

64
00:02:40.006 --> 00:02:44.000
will actually be used to instantiate your objects,

65
00:02:44.000 --> 00:02:46.003
which is why it's important that the Beans

66
00:02:46.003 --> 00:02:48.001
are loaded and just referenced

67
00:02:48.001 --> 00:02:49.007
and that there's metadata

68
00:02:49.007 --> 00:02:52.000
because we have some processing that we can do

69
00:02:52.000 --> 00:02:54.000
in the next step.

