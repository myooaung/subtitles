1

00:00:05,280  -->  00:00:07,920
Hello welcome back to the course in Python programming.

2

00:00:07,920  -->  00:00:10,830
In today's tutorial we're talking about the for loop.

3

00:00:10,890  -->  00:00:12,120
Let's get started.

4

00:00:12,120  -->  00:00:19,290
I'm going to create a new notebook and this one we're going to call the for a loop.

5

00:00:19,290  -->  00:00:19,780
All right.

6

00:00:19,830  -->  00:00:26,490
And the first thing I want to do here is I want to take the code of the while loop and I want to copy

7

00:00:26,490  -->  00:00:29,150
it so that we can compare them side by side.

8

00:00:29,310  -->  00:00:35,100
So let's get rid of this hello and if we run this shift enter There's a while loop which we spoke about

9

00:00:35,100  -->  00:00:40,520
previously and now we are going to look at the for loop and see how they're similar and how they're

10

00:00:40,530  -->  00:00:41,550
different.

11

00:00:41,550  -->  00:00:46,530
All right so for our keywords then we'll say I in arr. 5.

12

00:00:46,530  -->  00:00:49,990
So let's just type it out and then we'll discuss what's going on.

13

00:00:50,190  -->  00:00:54,700
We'll say print Hello Python and let's run this line.

14

00:00:54,750  -->  00:00:55,460
Let's see what we get.

15

00:00:55,470  -->  00:00:56,500
So you get help either.

16

00:00:56,550  -->  00:00:57,820
Hello Python Hello Python.

17

00:00:57,820  -->  00:01:00,130
Hello Python help Python 5 times.

18

00:01:00,240  -->  00:01:01,550
And what is going on here.

19

00:01:01,550  -->  00:01:07,490
So basically as you can tell by the similarity with the While loop it's got two parts.

20

00:01:07,500  -->  00:01:13,380
This part is kind of like the condition over here and then this part is the body.

21

00:01:13,410  -->  00:01:15,540
So the body is has the same function.

22

00:01:15,570  -->  00:01:20,850
The body is just basically the code that needs to be executed and then the condition is different.

23

00:01:20,850  -->  00:01:24,840
So here we were just taking a logical condition which is quite a simple thing to do.

24

00:01:24,840  -->  00:01:29,260
Here we've got something going on something a bit more involved going on what is going on here.

25

00:01:29,400  -->  00:01:34,770
Well to understand that we will take this range five will copy and paste in essence in its separate

26

00:01:34,770  -->  00:01:35,370
line.

27

00:01:35,520  -->  00:01:36,510
We'll run that.

28

00:01:36,510  -->  00:01:40,800
And what we have here is basically a range of zero to five.

29

00:01:40,800  -->  00:01:42,780
This doesn't help us at all.

30

00:01:42,780  -->  00:01:48,440
And the reason here is this is a bit different to Piscean 2.7.

31

00:01:48,480  -->  00:01:51,110
In Python 3 they've changed it a little bit.

32

00:01:51,110  -->  00:01:56,040
So the way to see what this actually means is we need to change it into a list.

33

00:01:56,070  -->  00:02:00,060
I don't we haven't discussed this yet but they're definitely coming further down the track so let's

34

00:02:00,060  -->  00:02:03,350
just run this code as well and see what it gives us.

35

00:02:03,600  -->  00:02:08,690
So basically this explains what this range 5 actually does.

36

00:02:08,700  -->  00:02:16,380
And as you can tell from the name arr. 5 is a range of five values or in here in more detail is just

37

00:02:16,380  -->  00:02:23,580
a short way of saying range 0 to 5 and it's basically listing all the integers that start from zero

38

00:02:23,580  -->  00:02:23,790
.

39

00:02:23,790  -->  00:02:27,040
So this first number is inclusive and go up to 5.

40

00:02:27,090  -->  00:02:30,860
The last number is not inclusive so 0 1 2 3 4.

41

00:02:30,870  -->  00:02:37,440
So basically a range 5 is a very quick way of creating a set of five numbers.

42

00:02:37,440  -->  00:02:39,780
In this case is there are 1 2 3 4.

43

00:02:40,020  -->  00:02:42,130
And so what does this mean for us.

44

00:02:42,150  -->  00:02:48,240
Well what it means is that what is going on here is we a variable that we're creating inside this loop

45

00:02:48,390  -->  00:02:51,630
which is all the iteration variable of the loop.

46

00:02:51,630  -->  00:02:57,060
And here what it's doing is I is iterating over this range.

47

00:02:57,060  -->  00:03:01,730
So this range of 5 values 0 1 2 3 4 I is iterating over them.

48

00:03:01,920  -->  00:03:07,290
And every time I iterate this executable code gets executed.

49

00:03:07,530  -->  00:03:13,920
So that's how it works and then once the ranges over the code Stobbs been executed because the loop

50

00:03:13,920  -->  00:03:15,360
has completed working.

51

00:03:15,360  -->  00:03:19,920
So what are we going to do now is we're going to have a look at a bit of a different example to kind

52

00:03:19,920  -->  00:03:21,210
of put this all into perspective.

53

00:03:21,210  -->  00:03:24,120
So I want to add another cell above this.

54

00:03:24,120  -->  00:03:29,040
So if you want to add another cell you just click plus and then you move it up with this button.

55

00:03:29,220  -->  00:03:30,180
Or another way.

56

00:03:30,180  -->  00:03:36,000
So I'm going to get rid of that now just copy it cut it another way is to remember like if we're in

57

00:03:36,000  -->  00:03:36,690
the edit mode.

58

00:03:36,720  -->  00:03:42,680
Get out of it a small click escape and then B is as a cell below or a on the keyboard as a cell above

59

00:03:42,690  -->  00:03:43,500
so click.

60

00:03:43,780  -->  00:03:45,300
So you can see the cells at and above.

61

00:03:45,360  -->  00:03:51,690
This turned into a markdown cell enter triple line so let's just put a line there so that we're not

62

00:03:51,810  -->  00:03:53,480
kind of getting lost.

63

00:03:53,480  -->  00:03:58,770
And also let's copy this copy here and then paste paste the cell.

64

00:03:58,770  -->  00:04:00,240
Actually we don't need that.

65

00:04:00,240  -->  00:04:01,190
That was unnecessary.

66

00:04:01,380  -->  00:04:01,680
All right.

67

00:04:01,680  -->  00:04:04,320
So let's have a look at another loop.

68

00:04:04,320  -->  00:04:06,760
But this time it'll be a bit different.

69

00:04:06,780  -->  00:04:09,390
So again we need this cell.

70

00:04:09,420  -->  00:04:13,420
So C is copy and V is paste.

71

00:04:13,470  -->  00:04:17,640
So we're just going to take this loop and altered a little bit so it will help us understand what's

72

00:04:17,640  -->  00:04:18,180
going on.

73

00:04:18,180  -->  00:04:24,810
So for I in rage 1 to 5 We're going to say hello PIF and then on space and then after this quotation

74

00:04:24,810  -->  00:04:30,060
marks we're going to give print another argument so we're going to say comma II.

75

00:04:30,150  -->  00:04:32,880
So all we're doing here is we say OK print.

76

00:04:32,880  -->  00:04:35,070
Can you please print out two things.

77

00:04:35,070  -->  00:04:39,990
Can you print out this string and can you print out the value of the variable.

78

00:04:39,990  -->  00:04:42,890
I whatever it is at the time of printing.

79

00:04:43,080  -->  00:04:45,810
So if you're on this line you'll see this code you'll see that.

80

00:04:45,810  -->  00:04:46,980
Hello Python 0.

81

00:04:46,980  -->  00:04:48,330
Hello Python 1 2 3 4.

82

00:04:48,330  -->  00:04:54,090
So as you can see I is actually iterating over these exact values that we have in our range.

83

00:04:54,090  -->  00:04:58,330
0 1 2 and 3 for that is how the loop works.

84

00:04:58,330  -->  00:05:04,080
And so that is the essence of the for loop so you have some iterative action going on here in the first

85

00:05:04,080  -->  00:05:04,650
part.

86

00:05:04,950  -->  00:05:07,450
And then you have some executable code.

87

00:05:07,500  -->  00:05:12,990
And again if you want to execute a bit more code you can add in some code so you can say print Hello

88

00:05:12,990  -->  00:05:16,460
Python and you can say second line something like that.

89

00:05:16,590  -->  00:05:20,990
So for on this you'll see Hello Python 0 second line so that's the first direction.

90

00:05:20,990  -->  00:05:28,500
Second interation third fourth and fifth and to finish off we'll look at one more example.

91

00:05:28,530  -->  00:05:34,590
I will show you that we can actually change what is going on in this iteration so we can specify our

92

00:05:34,590  -->  00:05:40,050
own iteration doesn't have to be arranged so one thing is you can increase the range you can say 50

93

00:05:40,050  -->  00:05:44,660
or I could say like say 7 here let's get rid of this line so it doesn't get in the way.

94

00:05:44,700  -->  00:05:48,990
So if I run that you'll see that the tradition is has more instances.

95

00:05:48,990  -->  00:05:52,440
Now I'm just going to create another for loop.

96

00:05:52,440  -->  00:05:54,510
All right so here we're going to look at another way.

97

00:05:54,510  -->  00:05:56,730
So let's type that in another way.

98

00:05:56,940  -->  00:05:59,490
And the first thing is create my list.

99

00:05:59,490  -->  00:06:01,410
Once again we haven't spoken about lists yet.

100

00:06:01,420  -->  00:06:03,930
They're coming but let's just copy this code.

101

00:06:03,990  -->  00:06:06,300
It will look very similar to what we saw here.

102

00:06:06,300  -->  00:06:10,930
So we're creating a list of three values 10 100 1000.

103

00:06:11,160  -->  00:06:11,960
Let's run that line.

104

00:06:11,960  -->  00:06:17,330
So now we have a variable which is my list so if I print my list you'll see that it's 10 100000.

105

00:06:17,350  -->  00:06:22,890
And now what we want to do is you want to iterate over these values just as we did iterate over this

106

00:06:22,890  -->  00:06:23,460
range.

107

00:06:23,520  -->  00:06:29,040
So we're going to say four we'll get it we'll create a new variable for the Trishul we call it J or

108

00:06:29,040  -->  00:06:32,160
we can call anything we can call JJ for example.

109

00:06:32,180  -->  00:06:37,550
And I'll say for JJ in my list call on and perform the following.

110

00:06:37,560  -->  00:06:45,980
Print quotations and we'll say JJ is equal to coal on space comma and they don't just put in JJ.

111

00:06:46,020  -->  00:06:51,160
So if we run that you'll see JJ is equal to ten hundred thousand.

112

00:06:51,400  -->  00:06:58,030
And basically what we're doing is this variable J J is iterating over these values 10 a hundred thousand

113

00:06:58,040  -->  00:06:58,140
.

114

00:06:58,170  -->  00:07:00,800
And that's what this key word in means it means.

115

00:07:00,900  -->  00:07:06,870
While JJ is in this list then perform this action.

116

00:07:06,870  -->  00:07:07,260
There we go.

117

00:07:07,260  -->  00:07:09,680
That is how the for loop works.

118

00:07:09,900  -->  00:07:11,030
Have a look at that.

119

00:07:11,040  -->  00:07:17,010
Try experimenting with a different versions so try the range option or try crane them through the list

120

00:07:17,070  -->  00:07:24,480
and see how it all compares to the while and a good exercise is actually to try recreate the while and

121

00:07:24,480  -->  00:07:30,450
the for loop like recreate the same loop but you know in one way using the wild version and in another

122

00:07:30,450  -->  00:07:34,730
way using the four version that's always a good challenge to set yourself.

123

00:07:34,950  -->  00:07:37,090
Hope we have some time to practice that.

124

00:07:37,110  -->  00:07:43,230
It's definitely a good idea because as I always say programming is about practice practice practice

125

00:07:43,590  -->  00:07:47,170
and then it will all make sense.

126

00:07:47,210  -->  00:07:50,520
It will all become very intuitive and I look for it see you next time.

127

00:07:50,520  -->  00:07:52,880
Until then happy coding
