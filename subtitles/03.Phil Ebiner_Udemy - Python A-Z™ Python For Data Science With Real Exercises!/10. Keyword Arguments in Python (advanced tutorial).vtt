WEBVTT
1

00:00:05.410  -->  00:00:07.960
Hello and welcome back to the course of the program.

2

00:00:08.220  -->  00:00:09.750
So what are we doing today.

3

00:00:09.900  -->  00:00:15.590
Well what we noticed last time is that we created this scatterplot which answers our question.

4

00:00:15.600  -->  00:00:20.280
But at the same time there's something missing about a something that's not exactly as we wanted to

5

00:00:20.280  -->  00:00:21.900
be something that we can improve.

6

00:00:22.050  -->  00:00:28.040
And we noticed that the marker size is small so the markers are very small you can hardly see them.

7

00:00:28.080  -->  00:00:29.800
And today we're going to learn how to improve them.

8

00:00:30.000  -->  00:00:33.630
So here I'm going to very quickly add a new line.

9

00:00:33.840  -->  00:00:37.110
And just so that we can separate this tutorial.

10

00:00:37.110  -->  00:00:42.180
So we're talking about keyword arguments in Python and it's an advanced tutorial and you might ask the

11

00:00:42.180  -->  00:00:49.460
question curial Why do we have to create a whole tutorial just to change the size of markers.

12

00:00:49.660  -->  00:00:54.000
We just specify the correct arguments in our code.

13

00:00:54.000  -->  00:00:58.500
Couldn't we just do it in the previous tutorial and probably take like a minute to do it if not less

14

00:00:58.500  -->  00:00:58.850
.

15

00:00:59.010  -->  00:01:06.390
Well the reason for that is we're going to discuss a conceptual principle in Python that is going to

16

00:01:06.390  -->  00:01:11.760
be used not only in visualization and not only of the seaborne package but you will also find yourself

17

00:01:11.850  -->  00:01:18.690
potentially using it in other situations and it is quite an important topic that we need to cover off

18

00:01:18.690  -->  00:01:18.710
.

19

00:01:18.720  -->  00:01:23.670
And it's and that's why it's an advanced tutorial because it's going to involve some advance features

20

00:01:23.730  -->  00:01:24.780
of Python.

21

00:01:24.990  -->  00:01:28.910
So let's say without further ado let's dive straight into it.

22

00:01:29.130  -->  00:01:32.720
What is this advanced feature that you're talking about Carol.

23

00:01:32.940  -->  00:01:33.320
All right.

24

00:01:33.360  -->  00:01:34.800
Well start off with.

25

00:01:34.800  -->  00:01:35.810
Let's just make some space.

26

00:01:35.820  -->  00:01:38.200
And here we're going to create.

27

00:01:38.270  -->  00:01:40.320
We're going to say marker's size.

28

00:01:40.590  -->  00:01:41.810
That's a comment.

29

00:01:41.850  -->  00:01:43.750
And how do we change market size.

30

00:01:44.070  -->  00:01:48.570
Well let's just go ahead and copy this code from here to start with.

31

00:01:48.690  -->  00:01:54.990
Right if I run that that's my missiles and they're now probably change this a bit to make it smaller

32

00:01:54.990  -->  00:01:56.910
make it eight.

33

00:01:56.910  -->  00:01:59.910
Now how do I increase the marker's size.

34

00:01:59.910  -->  00:02:03.400
Well the market size needs obviously a parameter.

35

00:02:03.600  -->  00:02:07.630
Let's have a look do we can we find that promises press shift tab.

36

00:02:07.670  -->  00:02:15.300
You see that there's a lot of parameters here is Hugh This call is Roe pallidus call Raf's size and

37

00:02:15.300  -->  00:02:21.840
so on markers which markers are being used you can change the shape of the marker share X share y hue

38

00:02:21.840  -->  00:02:28.830
order color order roll order legend legend out x estimated eggs beans excess cattle Fidge Reg C.I. and

39

00:02:28.830  -->  00:02:38.250
boot units order logistic loess robots a large X X partial partial tankage X or Y jitter scatter KW

40

00:02:38.250  -->  00:02:39.480
As a blanket.

41

00:02:39.900  -->  00:02:40.660
Interesting.

42

00:02:40.680  -->  00:02:47.610
And at the same time there doesn't seem to be anything for the color of the markers there's shape or

43

00:02:47.610  -->  00:02:49.140
markers but no color.

44

00:02:49.140  -->  00:02:52.590
So how do we change the color of the markers.

45

00:02:52.590  -->  00:02:54.020
If there's no parameter here.

46

00:02:54.300  -->  00:02:55.130
Well let's have a look.

47

00:02:55.140  -->  00:02:58.630
Let's go down and let's just scroll through these parameters.

48

00:02:58.800  -->  00:03:03.620
Let's go to the very bottom and see what the very last parameters are.

49

00:03:03.690  -->  00:03:05.100
We've got x y.

50

00:03:05.100  -->  00:03:07.800
Actually the one we need is scatter line.

51

00:03:07.830  -->  00:03:09.690
KW s.

52

00:03:09.850  -->  00:03:15.650
So it's basically what is saying you can either specify scatter underscore KW s or line underscore KW

53

00:03:15.670  -->  00:03:16.980
As one of these.

54

00:03:16.980  -->  00:03:18.840
These are dictionaries.

55

00:03:18.840  -->  00:03:20.040
And what do they do.

56

00:03:20.040  -->  00:03:25.810
They are additional keyword arguments to possed to peel scatter and peel t plot.

57

00:03:26.130  -->  00:03:26.940
Very interesting.

58

00:03:26.940  -->  00:03:33.930
So to get some more information on this let's go to the seaborne description for this specific function

59

00:03:33.950  -->  00:03:34.130
.

60

00:03:34.290  -->  00:03:36.320
So really zoom in here as well.

61

00:03:36.480  -->  00:03:43.220
And if I scroll down you've got this you can see scattered KW As to underscore katoey us and line underscore

62

00:03:43.260  -->  00:03:44.230
KW Yes.

63

00:03:44.490  -->  00:03:45.740
What do they do.

64

00:03:45.750  -->  00:03:48.630
How can they help us go down.

65

00:03:48.950  -->  00:03:50.280
Let's go down.

66

00:03:50.280  -->  00:03:51.230
Basically the same thing.

67

00:03:51.240  -->  00:03:56.730
Additional keyword arguments to pass to peel teeth scatter and peel to LOT.

68

00:03:56.730  -->  00:03:57.810
What does this mean.

69

00:03:57.930  -->  00:04:04.500
Well what this means is what's going on is that Seaborn as we discussed seaborne is actually relying

70

00:04:04.590  -->  00:04:11.590
on a matplotlib and it's relying on the so peel T is a convention for pipe plot.

71

00:04:11.600  -->  00:04:12.120
Right.

72

00:04:12.120  -->  00:04:18.120
The one we have in our chip there are notebooks are here we've also imported by plot as you can see

73

00:04:18.120  -->  00:04:19.980
and we printed s p t.

74

00:04:19.980  -->  00:04:23.000
So what the peel to they're talking about is that same T.

75

00:04:23.100  -->  00:04:25.250
So the penalty that's in matplotlib.

76

00:04:25.440  -->  00:04:29.340
And they're saying that Peel T has a function called Scatter.

77

00:04:29.580  -->  00:04:31.440
So peel T-Dog scatter.

78

00:04:31.440  -->  00:04:35.340
And what this is used for so we're just looking at scatter underscored.

79

00:04:35.340  -->  00:04:40.890
KW As it is you can pass additional keyword arguments to Hilti scanner.

80

00:04:41.190  -->  00:04:48.540
And as we discussed once again seaborne relies on my plot lib on Pyr on the Pipelet package or some

81

00:04:48.540  -->  00:04:50.320
package from matplotlib.

82

00:04:50.670  -->  00:04:57.110
So a lot of these parameters actually are parameters from pipelined and then it's saying if you need

83

00:04:57.120  -->  00:05:00.930
to pass additional parameters you can do it using these dictionaries.

84

00:05:00.950  -->  00:05:02.700
So basically you can go.

85

00:05:02.690  -->  00:05:07.170
This is now the pipeline is Metalocalypse helpless go to the top.

86

00:05:07.190  -->  00:05:10.580
I know this might be a bit confusing at first but it will make sense just now.

87

00:05:10.570  -->  00:05:13.350
So this is matplotlib this is Pipelet.

88

00:05:13.340  -->  00:05:17.210
This is the grandfather of all of everything including seaboard.

89

00:05:17.450  -->  00:05:24.600
So here it's got lost and lost his recommendations very long and it will take you a while to find pipeline's

90

00:05:24.590  -->  00:05:27.410
counter so let's just do it on my screen.

91

00:05:27.570  -->  00:05:33.860
Scroll down or you can go to this hash tag office or the address of this page.

92

00:05:33.870  -->  00:05:37.130
So if I zoom in is again.

93

00:05:37.130  -->  00:05:38.390
All right let's go.

94

00:05:38.840  -->  00:05:42.480
So there is matplotlib dot Pipelet dots scatter.

95

00:05:42.590  -->  00:05:48.690
And that is the function that seaborne l m p t l m plots.

96

00:05:48.710  -->  00:05:55.800
So elem plot from seaborn is actually a wrapper around matplotlib dot pipelined does scatter.

97

00:05:55.820  -->  00:06:01.820
So this function in seaborne is using this function to create its viz..

98

00:06:02.070  -->  00:06:07.350
And now you already have a lot of parameters that she can postes to see born the old Ellen plot.

99

00:06:07.460  -->  00:06:13.090
But at the same time there are other parameters in PI plot that are not included in that list.

100

00:06:13.230  -->  00:06:21.270
For example if you scroll down here you've got s so scaler or area like shape shape is optional and

101

00:06:21.260  -->  00:06:27.300
so on and so basically it is the size in points squared I guess doesn't matter.

102

00:06:27.360  -->  00:06:34.260
The main point is that as is the parameter for size as you can see in elem plot they didn't include

103

00:06:34.310  -->  00:06:40.790
the size of the parameter but it will still go through if you pass it as this dictionary does dictionary

104

00:06:40.860  -->  00:06:47.970
actually scatter KW as it will still be passed on to matplotlib Pipelet the scanner.

105

00:06:48.120  -->  00:06:53.300
I know again this still like it's mice makes some vague sense but still it's not ideal.

106

00:06:53.310  -->  00:06:54.820
So let's go ahead and practice it.

107

00:06:54.870  -->  00:06:56.840
See how it works in practice.

108

00:06:56.850  -->  00:06:59.340
And that will make a lot more sense right away.

109

00:06:59.610  -->  00:07:06.230
So I'm going to go back to our doorframes and I'm going to go to the bottom and here.

110

00:07:06.480  -->  00:07:09.220
So we're going to just add a parameter.

111

00:07:09.500  -->  00:07:12.040
So we've got size equals eight.

112

00:07:12.280  -->  00:07:17.600
And now we're going to say or consistency let's put this wine in here as well.

113

00:07:17.690  -->  00:07:21.150
Now we're going to say scatter underscore.

114

00:07:21.140  -->  00:07:23.730
KW s and what is it expecting.

115

00:07:23.810  -->  00:07:26.360
So this is another example of where we're going to use dictionaries.

116

00:07:26.390  -->  00:07:33.420
Is expecting a dictionary so it's expecting you to posit something where you'll have the key s and then

117

00:07:33.410  -->  00:07:36.110
the value for s so let's say 200.

118

00:07:36.120  -->  00:07:39.420
So basically what you're saying is that well that's true of 100.

119

00:07:39.440  -->  00:07:42.630
This is a dictionary which has one element in the dictionary.

120

00:07:42.620  -->  00:07:45.380
Remember we talked about dictionaries previous in the course of this.

121

00:07:45.390  -->  00:07:47.490
This is actually has one element.

122

00:07:47.780  -->  00:07:53.470
And instead of that numeration that you have in lists 0 1 2 3 4 5 6 7 8 9 10 and so on.

123

00:07:53.660  -->  00:07:57.800
It's actually got a name every single name element in a dictionary has a name.

124

00:07:57.810  -->  00:08:00.790
So this element with which has the value of a hundred.

125

00:08:00.830  -->  00:08:02.260
It has a name of s.

126

00:08:02.450  -->  00:08:06.950
So once you post this dictionary this object as this parameter is covered.

127

00:08:06.950  -->  00:08:12.300
Scatter keyword arguments that's what kids use asthenosphere key keywords.

128

00:08:12.360  -->  00:08:20.060
So once you process scatterings TWX then on the receiving end so seaboard will not even look at what

129

00:08:20.060  -->  00:08:24.030
you possed they will just take that picture and forward it on oil.

130

00:08:24.020  -->  00:08:25.870
Unwrap it but doesn't really matter.

131

00:08:25.950  -->  00:08:32.270
It will forward on those parameters to matplotlib Pipelet scatter and this functional Radie will analyze

132

00:08:32.270  -->  00:08:38.220
what you passed over so you'll say OK s is equal to that you could pass on a different additional paramours

133

00:08:38.220  -->  00:08:39.360
if you wanted to.

134

00:08:39.360  -->  00:08:43.260
So as you know in a dictionary you could have a couple of primers you could say.

135

00:08:43.250  -->  00:08:48.260
And then the next parameter in here something something something you call something something something

136

00:08:48.530  -->  00:08:49.650
and another one and so on.

137

00:08:49.860  -->  00:08:51.500
But we're only going to pass through one.

138

00:08:51.720  -->  00:08:57.540
And so when I do this you'll see what happens the size of the markers increases right.

139

00:08:57.530  -->  00:09:02.980
So I'm going to actually increase that even further and it's a 200 size of the marker's increases.

140

00:09:03.020  -->  00:09:06.820
I can zoom out to see this lovely chart better.

141

00:09:07.160  -->  00:09:12.650
So maybe this is the situation maybe where we want to increase this to 10 as well.

142

00:09:12.680  -->  00:09:16.110
So as you can see this is a much better plot.

143

00:09:16.280  -->  00:09:19.970
And I know it's a it's a bit convoluted how this happens.

144

00:09:20.120  -->  00:09:25.320
And of course the Seaborn guys could have thought about that and potentially put that parameter into

145

00:09:25.400  -->  00:09:28.180
the plot but they didn't.

146

00:09:28.190  -->  00:09:34.010
Nevertheless it allowed us to practice keyword arguments and refresh a bit on dictionaries as well.

147

00:09:34.010  -->  00:09:35.370
So have a play around with that.

148

00:09:35.370  -->  00:09:42.620
That's how we increase the size in elem plot or the size of the markers player and see what other parameters

149

00:09:42.620  -->  00:09:45.670
of elem plot you might be interested in utilizing.

150

00:09:45.750  -->  00:09:51.480
But other than that all of his possession for this challenge is ready and we already analyzed it we've

151

00:09:51.470  -->  00:09:57.560
already seen that the high income groups are here the low income group is here in the upper middle income

152

00:09:57.570  -->  00:10:04.260
is closer to the high income lower middle income is low is closer to the low income and you can see

153

00:10:04.250  -->  00:10:11.040
kind of a trend that the more internet users you have in a country the less the birthrate and other

154

00:10:11.030  -->  00:10:12.840
we're onto the higher the birthrate.

155

00:10:12.840  -->  00:10:15.350
Less Internet users you have in the country.

156

00:10:15.380  -->  00:10:20.740
Again correlation doesn't imply causation but is just an interesting trend to observe.

157

00:10:20.880  -->  00:10:28.640
As we discussed in the Prius Tauriel hope you enjoyed this tutorial of course and how we got to this

158

00:10:28.640  -->  00:10:32.990
Bilzerian viz. it was a very step by step process but we finally got there.

159

00:10:33.170  -->  00:10:35.100
And I look forward to seeing you next them.

160

00:10:35.250  -->  00:10:36.800
Until then happy coding

161

00:10:38.760  -->  00:10:40.800
.
