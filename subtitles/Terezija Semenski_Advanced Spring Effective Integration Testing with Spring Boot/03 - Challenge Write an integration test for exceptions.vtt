WEBVTT
1
00:00:00.001 --> 00:00:06.002
(upbeat music)

2
00:00:06.002 --> 00:00:09.007
- [Instructor] Up 'til now we have only tested happy path

3
00:00:09.007 --> 00:00:11.007
but what if things go wrong?

4
00:00:11.007 --> 00:00:13.007
What about edge cases?

5
00:00:13.007 --> 00:00:15.008
What if exceptions are thrown?

6
00:00:15.008 --> 00:00:18.005
In this challenge, we want you to write

7
00:00:18.005 --> 00:00:21.004
an integration test for exceptions.

8
00:00:21.004 --> 00:00:24.006
As Joshua Block stated in his book "Effective Java",

9
00:00:24.006 --> 00:00:26.009
"When used to the best advantage,

10
00:00:26.009 --> 00:00:30.006
"exceptions can improve a program's readability,

11
00:00:30.006 --> 00:00:33.007
"reliability, and maintainability."

12
00:00:33.007 --> 00:00:36.003
In this challenge, we want you to write

13
00:00:36.003 --> 00:00:39.009
an integration test for a custom exception

14
00:00:39.009 --> 00:00:42.002
we will throw in our service layer.

15
00:00:42.002 --> 00:00:45.002
In case when a student is not available,

16
00:00:45.002 --> 00:00:47.003
instead of returning null,

17
00:00:47.003 --> 00:00:51.001
your task is to throw a custom runtime exception,

18
00:00:51.001 --> 00:00:53.004
studentnotfoundexception.

19
00:00:53.004 --> 00:00:56.007
I suggest you to take a TDD approach

20
00:00:56.007 --> 00:00:59.004
by first writing failing test,

21
00:00:59.004 --> 00:01:02.004
then implementing exception,

22
00:01:02.004 --> 00:01:06.002
and refactor implementation so a test passes.

23
00:01:06.002 --> 00:01:09.008
This challenge should take about five to 10 minutes.

24
00:01:09.008 --> 00:01:12.007
When you're done or you get stuck,

25
00:01:12.007 --> 00:01:15.001
you can check out my solution video

26
00:01:15.001 --> 00:01:18.000
to see how I solved the challenge.

