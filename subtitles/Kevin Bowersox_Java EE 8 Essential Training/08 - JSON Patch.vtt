WEBVTT
1
00:00:00.005 --> 00:00:02.009
- The Json processing API features

2
00:00:02.009 --> 00:00:05.007
a Json pointer and Json patch object

3
00:00:05.007 --> 00:00:07.009
that we can leverage when working

4
00:00:07.009 --> 00:00:09.002
with Json.

5
00:00:09.002 --> 00:00:11.004
The Json pointer allows us to use

6
00:00:11.004 --> 00:00:12.009
a string representing a path

7
00:00:12.009 --> 00:00:15.007
to a particular property in the Json

8
00:00:15.007 --> 00:00:19.002
to access the property value.

9
00:00:19.002 --> 00:00:20.002
Let's take a look.

10
00:00:20.002 --> 00:00:22.004
We're going to be working within

11
00:00:22.004 --> 00:00:24.008
our JMS consumer,

12
00:00:24.008 --> 00:00:25.008
and to start out

13
00:00:25.008 --> 00:00:27.008
I'm just going to remove

14
00:00:27.008 --> 00:00:32.000
some of the code related to our JsonParser.

15
00:00:32.000 --> 00:00:34.003
I'll take out the wild loop

16
00:00:34.003 --> 00:00:36.004
but I'm going to leave the tri-block

17
00:00:36.004 --> 00:00:39.001
and we're just going to swap out

18
00:00:39.001 --> 00:00:44.002
the parser with a reader.

19
00:00:44.002 --> 00:00:46.002
Okay, once we have our reader

20
00:00:46.002 --> 00:00:49.002
we can go ahead and we're going to

21
00:00:49.002 --> 00:00:52.006
extract the Json object

22
00:00:52.006 --> 00:00:56.005
using the reader.

23
00:00:56.005 --> 00:00:58.006
And to do that we just use the

24
00:00:58.006 --> 00:01:01.006
"Read Object" method on the Reader

25
00:01:01.006 --> 00:01:03.005
and then we're going to go ahead

26
00:01:03.005 --> 00:01:07.009
and build our Json pointer.

27
00:01:07.009 --> 00:01:11.002
And to do that we create the pointer

28
00:01:11.002 --> 00:01:13.002
similarly to how we created all the

29
00:01:13.002 --> 00:01:16.002
other interfaces so you'll see a

30
00:01:16.002 --> 00:01:19.005
"create pointer method" on the Json object,

31
00:01:19.005 --> 00:01:22.006
and it expects us to provide a path

32
00:01:22.006 --> 00:01:24.006
to the property that we would like

33
00:01:24.006 --> 00:01:26.007
to retrieve the value of.

34
00:01:26.007 --> 00:01:28.007
So we start out at the root of

35
00:01:28.007 --> 00:01:31.003
the Json document and then we're

36
00:01:31.003 --> 00:01:35.001
going to access the items property.

37
00:01:35.001 --> 00:01:38.005
And we want to access the first index item

38
00:01:38.005 --> 00:01:41.002
within the items array

39
00:01:41.002 --> 00:01:43.000
and then we're going to grab the

40
00:01:43.000 --> 00:01:46.004
quantity of that item.

41
00:01:46.004 --> 00:01:47.007
So let's go ahead,

42
00:01:47.007 --> 00:01:50.006
we'll import the type for our Json pointer,

43
00:01:50.006 --> 00:01:52.004
and then from here, what we're going to do

44
00:01:52.004 --> 00:01:55.007
is retrieve that property value

45
00:01:55.007 --> 00:01:58.002
and assign it to a long.

46
00:01:58.002 --> 00:02:00.003
So I'm going to create a new long

47
00:02:00.003 --> 00:02:03.003
named "quantity" and then we're

48
00:02:03.003 --> 00:02:06.006
going to extract a string

49
00:02:06.006 --> 00:02:10.000
with our Json pointer and we're going to have

50
00:02:10.000 --> 00:02:12.000
to parse that as a long.

51
00:02:12.000 --> 00:02:15.001
So we'll grab the pointer and then

52
00:02:15.001 --> 00:02:16.007
use it's "get value" method

53
00:02:16.007 --> 00:02:20.007
and then we pass in a Json object

54
00:02:20.007 --> 00:02:23.002
that we want the pointer to extract

55
00:02:23.002 --> 00:02:26.006
the property value from.

56
00:02:26.006 --> 00:02:28.008
So we have the pointer that's looking

57
00:02:28.008 --> 00:02:31.002
for this property and we pass in

58
00:02:31.002 --> 00:02:32.008
that object, it's going to

59
00:02:32.008 --> 00:02:36.005
get this property on that object.

60
00:02:36.005 --> 00:02:38.001
And then once we get that,

61
00:02:38.001 --> 00:02:41.000
we're going to assign it to a string,

62
00:02:41.000 --> 00:02:42.001
and then we can

63
00:02:42.001 --> 00:02:44.007
go ahead and add our semicolon there,

64
00:02:44.007 --> 00:02:46.008
and we have the quantity.

65
00:02:46.008 --> 00:02:49.001
Now, let's output that quantity

66
00:02:49.001 --> 00:02:52.002
to the console, that way we can just see it.

67
00:02:52.002 --> 00:02:53.006
Okay.

68
00:02:53.006 --> 00:02:56.001
And now for our customers

69
00:02:56.001 --> 00:02:57.001
it's a great day because

70
00:02:57.001 --> 00:02:59.000
it's going to be double day

71
00:02:59.000 --> 00:03:01.002
and we're going to double that quantity

72
00:03:01.002 --> 00:03:02.008
on every order.

73
00:03:02.008 --> 00:03:04.006
And to help us with that

74
00:03:04.006 --> 00:03:08.005
we're going to use the Json patch.

75
00:03:08.005 --> 00:03:11.005
And the Json patch is used to modify

76
00:03:11.005 --> 00:03:13.003
a Json object.

77
00:03:13.003 --> 00:03:15.009
So we're going to start out by

78
00:03:15.009 --> 00:03:19.007
assigning our Json object the result

79
00:03:19.007 --> 00:03:23.001
of applying a Json patch to it.

80
00:03:23.001 --> 00:03:25.006
And to create a Json patch,

81
00:03:25.006 --> 00:03:28.009
once again, very structured API here,

82
00:03:28.009 --> 00:03:32.004
we use the "create patch" builder,

83
00:03:32.004 --> 00:03:34.007
and this is going to be a fluent API

84
00:03:34.007 --> 00:03:36.006
where we can chain a bunch of calls.

85
00:03:36.006 --> 00:03:40.000
And the first thing we're going to do is

86
00:03:40.000 --> 00:03:43.004
is add a new property

87
00:03:43.004 --> 00:03:45.002
named "promo"

88
00:03:45.002 --> 00:03:48.004
to the object and the promo is going

89
00:03:48.004 --> 00:03:51.005
to have a value of double.

90
00:03:51.005 --> 00:03:53.000
And that means we're going to

91
00:03:53.000 --> 00:03:55.005
double everybody's order today.

92
00:03:55.005 --> 00:03:57.006
The next thing we're going to do is

93
00:03:57.006 --> 00:04:00.002
replace the

94
00:04:00.002 --> 00:04:03.003
existing property that

95
00:04:03.003 --> 00:04:06.006
is found in the "items" array and

96
00:04:06.006 --> 00:04:09.006
we're only going to double the first item,

97
00:04:09.006 --> 00:04:11.002
and so we're going to reach in,

98
00:04:11.002 --> 00:04:14.003
grab the quantity of that first item,

99
00:04:14.003 --> 00:04:17.005
and then we're going to

100
00:04:17.005 --> 00:04:18.005
take a long,

101
00:04:18.005 --> 00:04:20.007
and it needs to be a string.

102
00:04:20.007 --> 00:04:23.001
So I'm going to use the two-string method

103
00:04:23.001 --> 00:04:26.008
on long and then I'll take the quantity

104
00:04:26.008 --> 00:04:28.008
and I'm going to multiply it by two

105
00:04:28.008 --> 00:04:32.002
so that we doubled that first item's quantity.

106
00:04:32.002 --> 00:04:34.005
The next thing we're going to do is

107
00:04:34.005 --> 00:04:39.007
remove a property from our Json document.

108
00:04:39.007 --> 00:04:42.007
And we're going to remove the store name property.

109
00:04:42.007 --> 00:04:44.009
We'll say that the manufacturer is being

110
00:04:44.009 --> 00:04:47.001
generous and doubling everything.

111
00:04:47.001 --> 00:04:49.009
We don't want to hit their inventory.

112
00:04:49.009 --> 00:04:52.006
All right, then we build our patch,

113
00:04:52.006 --> 00:04:54.007
and then from there we apply it

114
00:04:54.007 --> 00:04:57.008
to our Json object.

115
00:04:57.008 --> 00:05:00.003
So there you can see how we can

116
00:05:00.003 --> 00:05:03.001
build a Json patch that adds a property,

117
00:05:03.001 --> 00:05:05.002
it replaces a property

118
00:05:05.002 --> 00:05:06.006
and removes a property.

119
00:05:06.006 --> 00:05:08.007
And you can see how we traverse

120
00:05:08.007 --> 00:05:13.005
into the nesting within the Json document

121
00:05:13.005 --> 00:05:17.008
in order to point to specific properties.

122
00:05:17.008 --> 00:05:20.005
So the patch is used for modifying

123
00:05:20.005 --> 00:05:22.001
a Json object,

124
00:05:22.001 --> 00:05:23.008
and our pointer is used for

125
00:05:23.008 --> 00:05:26.005
referencing a Json object.

126
00:05:26.005 --> 00:05:28.009
Now let's clean things up.

127
00:05:28.009 --> 00:05:30.001
And with that in place,

128
00:05:30.001 --> 00:05:33.000
we're going to write that Json object

129
00:05:33.000 --> 00:05:37.003
out to the console so we can see it.

130
00:05:37.003 --> 00:05:39.007
And then from there, we're going to

131
00:05:39.007 --> 00:05:42.000
go ahead and we can start

132
00:05:42.000 --> 00:05:43.002
our application.

133
00:05:43.002 --> 00:05:48.005
Let's make sure everything is saved first.

134
00:05:48.005 --> 00:05:52.004
Okay, there we see the application starting.

135
00:05:52.004 --> 00:05:54.002
It appears to have started.

136
00:05:54.002 --> 00:05:58.002
We'll expand our console and clear it out.

137
00:05:58.002 --> 00:05:59.007
And then we're going to go ahead and

138
00:05:59.007 --> 00:06:02.005
use Powershow to run our test

139
00:06:02.005 --> 00:06:06.004
and we'll see the API traffic go.

140
00:06:06.004 --> 00:06:09.004
Okay, let's now take a look at the

141
00:06:09.004 --> 00:06:11.008
modified Json object.

142
00:06:11.008 --> 00:06:13.003
You can see right away

143
00:06:13.003 --> 00:06:16.000
we were able to get the quantity.

144
00:06:16.000 --> 00:06:18.008
And then if we scroll to the right,

145
00:06:18.008 --> 00:06:21.009
you can see that we doubled the quantity

146
00:06:21.009 --> 00:06:23.002
as well.

147
00:06:23.002 --> 00:06:26.002
We removed the store name property

148
00:06:26.002 --> 00:06:28.000
and then finally we added the

149
00:06:28.000 --> 00:06:30.002
promo code double.

150
00:06:30.002 --> 00:06:32.004
So that was an example of how

151
00:06:32.004 --> 00:06:34.001
to use Json pointer

152
00:06:34.001 --> 00:06:35.005
and Json patch

153
00:06:35.005 --> 00:06:39.002
within the Json P API

154
00:06:39.002 --> 00:06:41.000
found in Java EE.

