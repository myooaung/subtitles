WEBVTT
1
00:00:00.005 --> 00:00:04.004
- [Instructor] In JSP files and other Java EE technologies,

2
00:00:04.004 --> 00:00:06.004
we can use the expression language

3
00:00:06.004 --> 00:00:09.002
to access application data.

4
00:00:09.002 --> 00:00:11.006
Expression language, also known as EL,

5
00:00:11.006 --> 00:00:14.009
provides a simple syntax for creating expressions

6
00:00:14.009 --> 00:00:18.000
that resolve to objects or methods.

7
00:00:18.000 --> 00:00:21.003
This allows us to avoid using JSP scriptlets

8
00:00:21.003 --> 00:00:24.005
and declarations that mix our application logic

9
00:00:24.005 --> 00:00:27.004
and code within the markup.

10
00:00:27.004 --> 00:00:30.003
We've already used expression language several times

11
00:00:30.003 --> 00:00:33.001
to reference attributes in the request.

12
00:00:33.001 --> 00:00:36.007
So, for example, within our forEach tag,

13
00:00:36.007 --> 00:00:39.004
we're referencing the items attribute

14
00:00:39.004 --> 00:00:41.004
using the expression language,

15
00:00:41.004 --> 00:00:43.007
and here you can see the syntax.

16
00:00:43.007 --> 00:00:47.000
It's just a dollar sign and then curly braces

17
00:00:47.000 --> 00:00:49.002
and the attribute or object

18
00:00:49.002 --> 00:00:51.006
you'd like to reference within it.

19
00:00:51.006 --> 00:00:55.004
Now, you can also use this syntax

20
00:00:55.004 --> 00:00:56.008
with a pound sign.

21
00:00:56.008 --> 00:00:59.004
This causes the resolution of the attribute

22
00:00:59.004 --> 00:01:02.005
to be deferred until it's actually referenced.

23
00:01:02.005 --> 00:01:06.009
It's more common, though, to use the dollar sign syntax.

24
00:01:06.009 --> 00:01:09.001
Now, within the expression language,

25
00:01:09.001 --> 00:01:14.004
we do have access to those implicit objects we talked about.

26
00:01:14.004 --> 00:01:17.003
So let's just take a look at a few of those.

27
00:01:17.003 --> 00:01:20.001
You can access the pageContext,

28
00:01:20.001 --> 00:01:22.008
which has different information about the page,

29
00:01:22.008 --> 00:01:26.007
and on that pageContext is a request object,

30
00:01:26.007 --> 00:01:31.003
and we can use that to access the contextPath.

31
00:01:31.003 --> 00:01:35.007
So that's a path related to this page.

32
00:01:35.007 --> 00:01:39.009
Sometimes that's used for creating URLs.

33
00:01:39.009 --> 00:01:43.002
We can also access the parameter map

34
00:01:43.002 --> 00:01:46.004
by using the param implicit object.

35
00:01:46.004 --> 00:01:48.006
So here we'll pull the name parameter

36
00:01:48.006 --> 00:01:50.002
from that parameter map.

37
00:01:50.002 --> 00:01:53.002
And then we can also reference cookies.

38
00:01:53.002 --> 00:01:58.003
So you'll remember that we added a cookie named someCookie

39
00:01:58.003 --> 00:02:00.004
to our...

40
00:02:00.004 --> 00:02:03.000
request using the servlet.

41
00:02:03.000 --> 00:02:06.004
We can go ahead and reference the value of that cookie

42
00:02:06.004 --> 00:02:10.003
within our expression language.

43
00:02:10.003 --> 00:02:12.007
And then the next thing I'd like to show you

44
00:02:12.007 --> 00:02:15.002
is how we can reference methods

45
00:02:15.002 --> 00:02:18.004
within the expression language.

46
00:02:18.004 --> 00:02:22.004
So we're going to go ahead and add an h3 tag to the page,

47
00:02:22.004 --> 00:02:26.002
and we're going to display...

48
00:02:26.002 --> 00:02:28.009
an item count.

49
00:02:28.009 --> 00:02:33.002
And here we'll use the expression language,

50
00:02:33.002 --> 00:02:37.002
and we can reference the collection of items

51
00:02:37.002 --> 00:02:41.003
and invoke the size method on that collection

52
00:02:41.003 --> 00:02:44.006
to get the number of items in the collection.

53
00:02:44.006 --> 00:02:46.006
And then what I'm going to do is actually

54
00:02:46.006 --> 00:02:49.004
use an arithmetic operator

55
00:02:49.004 --> 00:02:54.005
to multiply that size by two.

56
00:02:54.005 --> 00:02:57.006
Okay, so we got quite a bit of expression language

57
00:02:57.006 --> 00:02:59.001
in the page here.

58
00:02:59.001 --> 00:03:01.009
Let's go ahead and run an example.

59
00:03:01.009 --> 00:03:03.008
I'll just head over to the Package Explorer,

60
00:03:03.008 --> 00:03:05.001
right click,

61
00:03:05.001 --> 00:03:06.005
then go to Run As

62
00:03:06.005 --> 00:03:08.009
and Run on Server.

63
00:03:08.009 --> 00:03:12.001
We'll see the server start up.

64
00:03:12.001 --> 00:03:14.003
And then I'm going to open a browser.

65
00:03:14.003 --> 00:03:18.004
And we can navigate to our form.

66
00:03:18.004 --> 00:03:22.006
So let's add a new product here.

67
00:03:22.006 --> 00:03:24.004
Let's say it's a snowboard.

68
00:03:24.004 --> 00:03:26.008
And we'll say SuperSnowboard

69
00:03:26.008 --> 00:03:28.004
is the manufacturer,

70
00:03:28.004 --> 00:03:32.001
and once again we'll add an SKU.

71
00:03:32.001 --> 00:03:34.007
And then when we submit that page,

72
00:03:34.007 --> 00:03:37.006
you can see the expression language

73
00:03:37.006 --> 00:03:39.003
resolving those expressions

74
00:03:39.003 --> 00:03:42.006
and providing dynamic content that we reference.

75
00:03:42.006 --> 00:03:44.005
So we were able to reference

76
00:03:44.005 --> 00:03:47.006
those implicit objects found...

77
00:03:47.006 --> 00:03:51.004
within the JSP that we have access to

78
00:03:51.004 --> 00:03:54.005
and then were also able to invoke methods

79
00:03:54.005 --> 00:03:57.003
and apply the arithmetic operator.

80
00:03:57.003 --> 00:03:59.005
So that's a look at expression language.

81
00:03:59.005 --> 00:04:03.008
You'll see it used throughout Java EE technologies,

82
00:04:03.008 --> 00:04:05.000
and it's very useful,

83
00:04:05.000 --> 00:04:10.000
and it's helpful for avoiding code within your markup.

