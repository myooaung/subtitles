WEBVTT
1
00:00:00.005 --> 00:00:02.004
- [Narrator] In this lesson, we're going to take a look

2
00:00:02.004 --> 00:00:09.000
at how JSON-B can deserialize JSON into a Java object.

3
00:00:09.000 --> 00:00:12.006
So, we're going to be working within our JMS consumer

4
00:00:12.006 --> 00:00:17.003
and it's going to receive a message containing JSON

5
00:00:17.003 --> 00:00:21.002
that corresponds with our order object.

6
00:00:21.002 --> 00:00:24.006
So, let's work to receive that JSON

7
00:00:24.006 --> 00:00:28.004
and deserialize it into an order.

8
00:00:28.004 --> 00:00:33.006
So, we'll start out once again by creating a JSON-B instance

9
00:00:33.006 --> 00:00:38.005
and you will remember we do that with the JSON-B builder

10
00:00:38.005 --> 00:00:41.004
and we'll use the create method once again.

11
00:00:41.004 --> 00:00:44.009
Now that we have our JSON-B object,

12
00:00:44.009 --> 00:00:46.004
once again, it's pretty simple,

13
00:00:46.004 --> 00:00:49.006
we're attempting to deserialize to an order,

14
00:00:49.006 --> 00:00:51.008
so we'll create an order object

15
00:00:51.008 --> 00:00:58.008
and then using JSON-B we can use the from JSON method

16
00:00:58.008 --> 00:01:01.005
and then we are going to retrieve

17
00:01:01.005 --> 00:01:04.002
the JSON from the JMS message.

18
00:01:04.002 --> 00:01:07.002
So, let's create a new string to hold that

19
00:01:07.002 --> 00:01:12.008
and all we need to do is, on the message, get the body

20
00:01:12.008 --> 00:01:15.004
and then the body expects us to provide

21
00:01:15.004 --> 00:01:20.001
a class that indicates the type of message we expect.

22
00:01:20.001 --> 00:01:24.005
Okay, so now we have the JSON in a string

23
00:01:24.005 --> 00:01:27.003
and we just pass that as the first

24
00:01:27.003 --> 00:01:30.007
argument to the from JSON method

25
00:01:30.007 --> 00:01:34.002
and then as the second argument we provide

26
00:01:34.002 --> 00:01:38.003
the type we would like to deserialize to.

27
00:01:38.003 --> 00:01:42.002
At this point we have deserialized the object

28
00:01:42.002 --> 00:01:47.001
so let's just take the order, we can get all the items

29
00:01:47.001 --> 00:01:53.004
and we'll stream the items, we can use the map method

30
00:01:53.004 --> 00:01:56.001
and then within our map method

31
00:01:56.001 --> 00:01:58.005
we are going to take each item

32
00:01:58.005 --> 00:02:05.006
and let's get its name and then we can print that out

33
00:02:05.006 --> 00:02:09.001
to the console for each of our items.

34
00:02:09.001 --> 00:02:14.000
Okay, so, just to review, we received the JSON message.

35
00:02:14.000 --> 00:02:17.009
We then extract the string from the message

36
00:02:17.009 --> 00:02:22.000
which is our JSON representation of an order.

37
00:02:22.000 --> 00:02:25.007
Then we pass that JSON over to JSON-B

38
00:02:25.007 --> 00:02:30.003
and that's where the JSON binding API is going to then

39
00:02:30.003 --> 00:02:35.005
deserialize that JSON to an object of type order

40
00:02:35.005 --> 00:02:40.000
and now we're working with a Java object

41
00:02:40.000 --> 00:02:42.003
and then we're able to just work

42
00:02:42.003 --> 00:02:46.002
and iterate through the items in our order

43
00:02:46.002 --> 00:02:49.007
and print out the name of each item.

44
00:02:49.007 --> 00:02:53.004
Okay, let's save this and then

45
00:02:53.004 --> 00:02:58.001
we're going to run our application.

46
00:02:58.001 --> 00:03:01.005
Okay, you can see we're started up.

47
00:03:01.005 --> 00:03:03.008
And here we have our test script.

48
00:03:03.008 --> 00:03:06.006
So let's go back to the console.

49
00:03:06.006 --> 00:03:09.000
We can then clear the console,

50
00:03:09.000 --> 00:03:12.001
and then let's check out our example.

51
00:03:12.001 --> 00:03:14.007
So we run the test.

52
00:03:14.007 --> 00:03:20.009
Okay so, there we see the http request was sent,

53
00:03:20.009 --> 00:03:23.002
then we send the message to the queue,

54
00:03:23.002 --> 00:03:27.003
the JMS consumer receives it and here

55
00:03:27.003 --> 00:03:30.008
you can see that we have one item within our JSON

56
00:03:30.008 --> 00:03:35.002
and that is sneakers, and let's check.

57
00:03:35.002 --> 00:03:38.009
Yup, we got our one item and we were able to

58
00:03:38.009 --> 00:03:45.000
successfully use JSON-B to deserialize a JSON string.

