WEBVTT
1
00:00:00.005 --> 00:00:02.004
- [Instructor] The many to many association

2
00:00:02.004 --> 00:00:06.000
is the most difficult association to map in JPA.

3
00:00:06.000 --> 00:00:08.009
So I'm going to walk you through it in this lesson,

4
00:00:08.009 --> 00:00:12.000
in order to support our discussion

5
00:00:12.000 --> 00:00:14.003
I needed to preposition some items.

6
00:00:14.003 --> 00:00:16.005
So let's walk through those now.

7
00:00:16.005 --> 00:00:19.005
What we've done is we've created a scenario

8
00:00:19.005 --> 00:00:24.007
where each catalog item has an inventory manager

9
00:00:24.007 --> 00:00:28.000
or an item manager, you'll see that we created

10
00:00:28.000 --> 00:00:31.005
the item manager entity and it contains a list

11
00:00:31.005 --> 00:00:36.002
of catalog items so one item manager can manage

12
00:00:36.002 --> 00:00:42.000
many items, now if we look at the catalog item entity.

13
00:00:42.000 --> 00:00:47.001
You'll see that the item has a list of item managers,

14
00:00:47.001 --> 00:00:49.006
so this creates our many to many scenario

15
00:00:49.006 --> 00:00:54.004
and then the way we support this within the application,

16
00:00:54.004 --> 00:00:56.006
first if we take a look at our list.

17
00:00:56.006 --> 00:01:01.003
You'll notice that we are now able to link

18
00:01:01.003 --> 00:01:03.005
to an individual item page.

19
00:01:03.005 --> 00:01:08.001
So we've created a new facelet for the item details

20
00:01:08.001 --> 00:01:12.006
and here's the item facelet and if we take a look at that.

21
00:01:12.006 --> 00:01:15.005
You'll notice that this page is very similar

22
00:01:15.005 --> 00:01:18.009
to our confirmation page, it displays some information

23
00:01:18.009 --> 00:01:20.008
about the item and then we have

24
00:01:20.008 --> 00:01:23.003
this other section, managers.

25
00:01:23.003 --> 00:01:28.003
This section allows us to add a manager

26
00:01:28.003 --> 00:01:31.009
into this list, so you're going to see the managers listed

27
00:01:31.009 --> 00:01:34.007
and then there's a form where you can go ahead

28
00:01:34.007 --> 00:01:40.004
and add a manager to the list of managers for the item.

29
00:01:40.004 --> 00:01:43.005
We're using a little bit of AJAX within JSF

30
00:01:43.005 --> 00:01:47.008
to post that data back and then the table

31
00:01:47.008 --> 00:01:50.008
will automatically update with the managers.

32
00:01:50.008 --> 00:01:54.009
The item.xhtml page has a backing bean

33
00:01:54.009 --> 00:01:59.000
associated with it, it's the catalog item detail bean

34
00:01:59.000 --> 00:02:02.005
and within this bean we're going to do several things.

35
00:02:02.005 --> 00:02:06.005
We'll fetch the item and then we're also going to add

36
00:02:06.005 --> 00:02:09.000
some logic here that's going to assist

37
00:02:09.000 --> 00:02:10.006
with saving the item.

38
00:02:10.006 --> 00:02:14.005
If we take a look then at our EJB interface,

39
00:02:14.005 --> 00:02:18.000
you'll see then that we have a new save item method

40
00:02:18.000 --> 00:02:21.009
and that's going to allow us to take the catalog item

41
00:02:21.009 --> 00:02:25.000
along with the new managers that were added

42
00:02:25.000 --> 00:02:27.006
and save it in the database,

43
00:02:27.006 --> 00:02:32.002
and that brings us to our catalog EJB

44
00:02:32.002 --> 00:02:37.003
and here within the catalog EJB we've added a stub

45
00:02:37.003 --> 00:02:39.004
for the save item method.

46
00:02:39.004 --> 00:02:41.003
So we're going to start here.

47
00:02:41.003 --> 00:02:44.003
The first thing that we need to do is use

48
00:02:44.003 --> 00:02:49.003
our entity manager to merge this item

49
00:02:49.003 --> 00:02:53.000
into our persistence context so that the item

50
00:02:53.000 --> 00:02:54.008
can be updated.

51
00:02:54.008 --> 00:02:59.008
So when we perform an update using JPA we're using

52
00:02:59.008 --> 00:03:03.001
the merge operation on the entity manager.

53
00:03:03.001 --> 00:03:06.008
Now, the entity manager needs to know how to map

54
00:03:06.008 --> 00:03:09.004
this many to many association

55
00:03:09.004 --> 00:03:13.007
and it's our job as the developer to instruct

56
00:03:13.007 --> 00:03:15.009
the entity manager on how to do that.

57
00:03:15.009 --> 00:03:18.006
So we're going to update the mapping

58
00:03:18.006 --> 00:03:25.006
within our catalog item class to include the many to many

59
00:03:25.006 --> 00:03:28.003
association, so the first thing we do is add

60
00:03:28.003 --> 00:03:32.003
the many to many annotation and we're going to import that

61
00:03:32.003 --> 00:03:36.002
annotation and then specify a cascade type

62
00:03:36.002 --> 00:03:40.006
and that cascade type is going to be all.

63
00:03:40.006 --> 00:03:45.001
So any operation on this entity is going to persist

64
00:03:45.001 --> 00:03:47.005
to any associated entities

65
00:03:47.005 --> 00:03:50.007
and then we're also going to set the fetch type to eager.

66
00:03:50.007 --> 00:03:56.003
So as soon as we retrieve this entity from the database,

67
00:03:56.003 --> 00:04:03.005
we want to load all associated entities with that entity.

68
00:04:03.005 --> 00:04:05.009
Okay so, that's the easy part.

69
00:04:05.009 --> 00:04:08.009
Now we need to add the join table

70
00:04:08.009 --> 00:04:12.008
and on the join table annotation that we use to map

71
00:04:12.008 --> 00:04:18.007
the many to many you're going to find a join columns element

72
00:04:18.007 --> 00:04:22.005
that join columns element accepts an array

73
00:04:22.005 --> 00:04:25.001
of join column annotations.

74
00:04:25.001 --> 00:04:30.003
So we're going to go ahead and then add a join column

75
00:04:30.003 --> 00:04:32.005
within this annotation so we're kind of

76
00:04:32.005 --> 00:04:37.006
nesting annotations here and then we just specify the name

77
00:04:37.006 --> 00:04:42.003
of the join column to map to the catalog item

78
00:04:42.003 --> 00:04:44.004
from the join table.

79
00:04:44.004 --> 00:04:49.000
So it's going to be the catalog item ID column

80
00:04:49.000 --> 00:04:52.003
and then we need to specify another join column

81
00:04:52.003 --> 00:04:55.009
and this is going to be the inverse join column.

82
00:04:55.009 --> 00:04:59.008
So now we're saying what column in our join table

83
00:04:59.008 --> 00:05:04.002
maps over to our item manager table

84
00:05:04.002 --> 00:05:08.002
and we use another join column annotation here

85
00:05:08.002 --> 00:05:11.005
and let's just drop that to a second line

86
00:05:11.005 --> 00:05:14.002
and within that join column annotation

87
00:05:14.002 --> 00:05:18.005
we're going to specify that column that's going to be used

88
00:05:18.005 --> 00:05:22.003
to associate with the item manager

89
00:05:22.003 --> 00:05:24.009
and it's the item manager ID.

90
00:05:24.009 --> 00:05:27.005
Okay so that's in place,

91
00:05:27.005 --> 00:05:31.007
and now because this is a bi-directional relationship

92
00:05:31.007 --> 00:05:36.005
we need to go over to the item manager entity

93
00:05:36.005 --> 00:05:40.008
and within that entity we need to complete the mapping.

94
00:05:40.008 --> 00:05:42.003
It's a little bit easier on this side,

95
00:05:42.003 --> 00:05:46.002
because the mapping is defined over on the catalog item.

96
00:05:46.002 --> 00:05:49.004
So we just add a many to many annotation

97
00:05:49.004 --> 00:05:52.008
and then within that many to many we point

98
00:05:52.008 --> 00:05:56.003
to the field on the catalog item class

99
00:05:56.003 --> 00:05:58.004
that is going to define the mapping

100
00:05:58.004 --> 00:06:00.006
and that is the item manager's field.

101
00:06:00.006 --> 00:06:05.003
So all we need provide the string item managers

102
00:06:05.003 --> 00:06:08.000
and our mapping is now in place

103
00:06:08.000 --> 00:06:11.000
and there's just one final thing that we need to do.

104
00:06:11.000 --> 00:06:15.009
So when we persist in a many to many association,

105
00:06:15.009 --> 00:06:19.003
we need to make sure that we update both sides

106
00:06:19.003 --> 00:06:22.007
of the relationship with the entities.

107
00:06:22.007 --> 00:06:25.004
So let's talk about what that means.

108
00:06:25.004 --> 00:06:28.008
So we're going to grab our manager

109
00:06:28.008 --> 00:06:34.006
which is a field on the backing bean that we have mapped

110
00:06:34.006 --> 00:06:38.006
to our form and we're going to grab the catalog items

111
00:06:38.006 --> 00:06:42.008
they manage and we're going to add our catalog item

112
00:06:42.008 --> 00:06:46.005
to that collection so we've updated one side

113
00:06:46.005 --> 00:06:50.007
of the association, now we need to go ahead

114
00:06:50.007 --> 00:06:54.007
and update the other side so we have the item

115
00:06:54.007 --> 00:06:57.000
bound to this backing bean as well.

116
00:06:57.000 --> 00:07:00.008
We're going to go ahead and get the item managers,

117
00:07:00.008 --> 00:07:05.003
so then we're going to go ahead and add the manager

118
00:07:05.003 --> 00:07:11.001
into the collection of item managers on the catalog item.

119
00:07:11.001 --> 00:07:13.006
So that's what I mean by updating both sides

120
00:07:13.006 --> 00:07:17.007
of the relationship, you can't just set one.

121
00:07:17.007 --> 00:07:23.006
Okay and then we can use our EJV in order to save the item,

122
00:07:23.006 --> 00:07:29.000
and then we just pass in our item and then finally within

123
00:07:29.000 --> 00:07:32.007
the backing bean we're going to update the item

124
00:07:32.007 --> 00:07:37.007
so that it displays by calling the find item method

125
00:07:37.007 --> 00:07:41.006
on our EJB and that's going to retrieve

126
00:07:41.006 --> 00:07:44.009
the updated item from the database.

127
00:07:44.009 --> 00:07:49.005
Okay so everything is in place, let's go ahead now,

128
00:07:49.005 --> 00:07:54.009
and we're going to launch our application

129
00:07:54.009 --> 00:07:58.006
and I'll start opening up a browser here,

130
00:07:58.006 --> 00:08:04.002
so we see the application spinning up

131
00:08:04.002 --> 00:08:09.000
okay so we are at our catalog form, let's go ahead

132
00:08:09.000 --> 00:08:12.008
we're going to add an item.

133
00:08:12.008 --> 00:08:15.001
Then we'll go ahead and submit that item.

134
00:08:15.001 --> 00:08:17.004
You'll see the hyperlink that allows us

135
00:08:17.004 --> 00:08:19.008
to go check out the item details

136
00:08:19.008 --> 00:08:25.005
and then let's add an item manager here

137
00:08:25.005 --> 00:08:29.006
and you'll notice the new item manager appears in the list

138
00:08:29.006 --> 00:08:33.000
and then let us go ahead and we'll add another item manager

139
00:08:33.000 --> 00:08:36.000
and there you can see the many to many relationship

140
00:08:36.000 --> 00:08:38.005
that we built between the item,

141
00:08:38.005 --> 00:08:41.004
and the managers of the item.

142
00:08:41.004 --> 00:08:45.002
Okay so that concludes our lesson on mapping many

143
00:08:45.002 --> 00:08:48.004
to many associations if you can map this association

144
00:08:48.004 --> 00:08:50.003
you'll be able to map any of the others

145
00:08:50.003 --> 00:08:52.004
like the one to many or the one to one.

146
00:08:52.004 --> 00:08:55.000
This is definitely the most difficult by far.

