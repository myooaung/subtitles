WEBVTT
1
00:00:00.005 --> 00:00:02.008
- When multiple beans have the same type,

2
00:00:02.008 --> 00:00:05.000
we need to specify to CDI

3
00:00:05.000 --> 00:00:09.000
which bean should be injected at an injection point.

4
00:00:09.000 --> 00:00:09.008
To do this,

5
00:00:09.008 --> 00:00:12.005
we use qualifiers in CDI.

6
00:00:12.005 --> 00:00:15.006
CDI contains multiple built-in qualifiers

7
00:00:15.006 --> 00:00:16.008
that can be used,

8
00:00:16.008 --> 00:00:20.002
and we are able to build our own custom qualifiers

9
00:00:20.002 --> 00:00:22.003
when necessary.

10
00:00:22.003 --> 00:00:25.006
By default, every bean and injection point

11
00:00:25.006 --> 00:00:29.001
has the any and default annotations

12
00:00:29.001 --> 00:00:31.001
that are used as qualifiers

13
00:00:31.001 --> 00:00:35.007
when there are no qualifiers explicitly declared.

14
00:00:35.007 --> 00:00:38.003
It's just assumed to be applied.

15
00:00:38.003 --> 00:00:40.007
You'll notice that within our application,

16
00:00:40.007 --> 00:00:45.001
we now another instance of the inventory service

17
00:00:45.001 --> 00:00:50.008
that will be created as a bean within our CDI container.

18
00:00:50.008 --> 00:00:53.004
Now this is going to create a problem.

19
00:00:53.004 --> 00:00:55.007
We can see that problem if we attempt

20
00:00:55.007 --> 00:00:57.009
to run our application.

21
00:00:57.009 --> 00:01:02.008
When CDI looks for a bean to inject

22
00:01:02.008 --> 00:01:04.009
into this injection point,

23
00:01:04.009 --> 00:01:07.003
it's going to have an error.

24
00:01:07.003 --> 00:01:09.006
That's because it doesn't know

25
00:01:09.006 --> 00:01:14.000
whether it should use our remote inventory service bean,

26
00:01:14.000 --> 00:01:18.004
or whether it should use the local inventory service bean.

27
00:01:18.004 --> 00:01:22.003
You'll notice that it detected both of these qualifiers

28
00:01:22.003 --> 00:01:25.001
on the beans which are there by default,

29
00:01:25.001 --> 00:01:27.002
and it caused an error

30
00:01:27.002 --> 00:01:29.009
because there were ambiguous beans

31
00:01:29.009 --> 00:01:33.002
that could satisfy that dependency

32
00:01:33.002 --> 00:01:36.004
for our catalog item form bean.

33
00:01:36.004 --> 00:01:41.003
What we can do is we can add one of the qualifiers,

34
00:01:41.003 --> 00:01:43.005
and that's named.

35
00:01:43.005 --> 00:01:51.000
Named allows us to provide a name for our bean.

36
00:01:51.000 --> 00:01:56.008
By default, it will be the class name of the bean,

37
00:01:56.008 --> 00:02:00.005
camel cased with the first letter lower cased.

38
00:02:00.005 --> 00:02:02.004
We'll just go ahead and type it out.

39
00:02:02.004 --> 00:02:06.005
Then what we can do is copy that named annotation

40
00:02:06.005 --> 00:02:11.008
that we've added to our remote inventory service bean,

41
00:02:11.008 --> 00:02:17.001
and we can apply that at the injection point.

42
00:02:17.001 --> 00:02:20.007
If we navigate down to our inventory service field,

43
00:02:20.007 --> 00:02:24.002
we can go ahead and paste that qualifier.

44
00:02:24.002 --> 00:02:27.006
That's going to instruct CDI that we would like to use

45
00:02:27.006 --> 00:02:32.001
the remote inventory service bean.

46
00:02:32.001 --> 00:02:37.004
It's able to resolve the issues with the duplicate types.

47
00:02:37.004 --> 00:02:39.004
Let's go back.

48
00:02:39.004 --> 00:02:44.006
What I'm going to do is I will publish our application.

49
00:02:44.006 --> 00:02:48.002
Then I'm going to go ahead and restart the server.

50
00:02:48.002 --> 00:02:51.000
This time we can watch the console.

51
00:02:51.000 --> 00:02:56.008
You'll see that it's able to resolve the ambiguous nature

52
00:02:56.008 --> 00:02:57.009
of those types.

53
00:02:57.009 --> 00:03:02.002
So there we have the application up.

54
00:03:02.002 --> 00:03:04.007
We can open up Chrome,

55
00:03:04.007 --> 00:03:07.001
and we'll watch the console while we do this.

56
00:03:07.001 --> 00:03:09.007
I'll go ahead and clear it.

57
00:03:09.007 --> 00:03:12.007
Then we can navigate to our form.

58
00:03:12.007 --> 00:03:17.006
Here we're going to add in a product.

59
00:03:17.006 --> 00:03:19.001
When we submit it,

60
00:03:19.001 --> 00:03:21.009
you'll notice that our console output

61
00:03:21.009 --> 00:03:27.002
indicates that the remote inventory service was used.

62
00:03:27.002 --> 00:03:31.004
There's another way that we can provide qualifiers,

63
00:03:31.004 --> 00:03:34.001
and that's by building custom qualifiers

64
00:03:34.001 --> 00:03:37.002
within our application.

65
00:03:37.002 --> 00:03:42.001
Let's create a new qualifier.

66
00:03:42.001 --> 00:03:44.001
Just open up the new dialogue.

67
00:03:44.001 --> 00:03:47.006
Then select qualifier annotation.

68
00:03:47.006 --> 00:03:52.008
Here we'll need to provide a name for our custom qualifier.

69
00:03:52.008 --> 00:03:55.007
In this case, we're going to name this

70
00:03:55.007 --> 00:03:59.007
the remote service qualifier.

71
00:03:59.007 --> 00:04:02.009
Then we can just go ahead and hit finish.

72
00:04:02.009 --> 00:04:08.002
Then we can go ahead and save our new qualifier.

73
00:04:08.002 --> 00:04:10.008
Now we're going to apply that annotation

74
00:04:10.008 --> 00:04:14.000
on the remote inventory service.

75
00:04:14.000 --> 00:04:17.000
I'll add that.

76
00:04:17.000 --> 00:04:19.002
There we can select it.

77
00:04:19.002 --> 00:04:23.009
Then we'll navigate over to our catalog item form bean.

78
00:04:23.009 --> 00:04:27.007
We're going to remove the named annotation.

79
00:04:27.007 --> 00:04:31.005
Then we'll add the remote service annotation.

80
00:04:31.005 --> 00:04:33.003
That's serving as our qualifier,

81
00:04:33.003 --> 00:04:36.009
instructing CDI which instance of the bean

82
00:04:36.009 --> 00:04:38.008
we would like to use.

83
00:04:38.008 --> 00:04:43.009
I'm then going to navigate back to our server.

84
00:04:43.009 --> 00:04:47.004
I'm going to re-publish the application.

85
00:04:47.004 --> 00:04:48.008
Then just to be safe,

86
00:04:48.008 --> 00:04:50.004
I'm going to go ahead,

87
00:04:50.004 --> 00:04:54.001
and I'll restart the server.

88
00:04:54.001 --> 00:04:55.006
Okay, the server started.

89
00:04:55.006 --> 00:04:57.000
Let's go back.

90
00:04:57.000 --> 00:04:59.007
We can navigate to the form.

91
00:04:59.007 --> 00:05:01.007
Let's expand our console

92
00:05:01.007 --> 00:05:03.009
so that we can see that output.

93
00:05:03.009 --> 00:05:05.001
Once again,

94
00:05:05.001 --> 00:05:07.002
we're going to be selecting

95
00:05:07.002 --> 00:05:10.003
the remote inventory service bean

96
00:05:10.003 --> 00:05:13.007
from our CDI container.

97
00:05:13.007 --> 00:05:16.004
That will be because we've specified

98
00:05:16.004 --> 00:05:19.003
this custom qualifier.

99
00:05:19.003 --> 00:05:20.003
All right.

100
00:05:20.003 --> 00:05:23.001
There you can see that indeed,

101
00:05:23.001 --> 00:05:26.000
the remote inventory service was selected,

102
00:05:26.000 --> 00:05:30.006
and that was the bean injected by the CDI container.

103
00:05:30.006 --> 00:05:34.008
That wraps it up for a look at the built-in qualifiers

104
00:05:34.008 --> 00:05:37.001
as well as the custom qualifiers

105
00:05:37.001 --> 00:05:39.000
found within CDI.

