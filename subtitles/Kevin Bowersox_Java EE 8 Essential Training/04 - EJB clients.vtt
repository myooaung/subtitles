WEBVTT
1
00:00:00.005 --> 00:00:01.003
- [Instructor] In this lesson,

2
00:00:01.003 --> 00:00:05.006
we're going to create a client for our EJB.

3
00:00:05.006 --> 00:00:08.002
The client of the EJB

4
00:00:08.002 --> 00:00:12.004
is going to access the list of items

5
00:00:12.004 --> 00:00:14.002
and add items to the list

6
00:00:14.002 --> 00:00:18.007
through the methods defined on the catalog local interface.

7
00:00:18.007 --> 00:00:22.002
Now, because this EJB is storing state

8
00:00:22.002 --> 00:00:25.002
and we would like that state to be consistent

9
00:00:25.002 --> 00:00:28.004
across all clients of our application,

10
00:00:28.004 --> 00:00:33.002
we're going to go ahead and turn this into a Singleton bean.

11
00:00:33.002 --> 00:00:35.006
From there, we can then navigate over

12
00:00:35.006 --> 00:00:39.000
to our CatalogItemFormBean.

13
00:00:39.000 --> 00:00:41.004
So this bean is the backing bean

14
00:00:41.004 --> 00:00:44.003
for the form and the list

15
00:00:44.003 --> 00:00:47.003
within our JSF application.

16
00:00:47.003 --> 00:00:49.006
Now, within this bean,

17
00:00:49.006 --> 00:00:53.008
we can inject the EJB.

18
00:00:53.008 --> 00:00:58.008
So we'll declare a new field of type CatalogLocal

19
00:00:58.008 --> 00:01:01.004
and we'll call it catalogBean

20
00:01:01.004 --> 00:01:04.004
and then we just add that EJB annotation

21
00:01:04.004 --> 00:01:07.007
and the EJB will be injected into this bean

22
00:01:07.007 --> 00:01:09.006
and we can leverage it.

23
00:01:09.006 --> 00:01:11.003
Now, you'll notice that right now,

24
00:01:11.003 --> 00:01:14.003
we're leveraging our items list

25
00:01:14.003 --> 00:01:18.003
and we no longer want to use that list

26
00:01:18.003 --> 00:01:22.008
for the purposes of storing the different items.

27
00:01:22.008 --> 00:01:24.008
So what we're going to do

28
00:01:24.008 --> 00:01:29.002
is we're going to use our EJB

29
00:01:29.002 --> 00:01:31.007
in place of the list.

30
00:01:31.007 --> 00:01:37.009
So here we can call the catalogBean's getItems method

31
00:01:37.009 --> 00:01:41.006
and then we can get the size of the list of items,

32
00:01:41.006 --> 00:01:45.004
add one in order to get our itemId

33
00:01:45.004 --> 00:01:51.003
so that increment can be achieved with our catalogBean

34
00:01:51.003 --> 00:01:57.005
and then we're going to use the catalogBean's addItem method

35
00:01:57.005 --> 00:02:01.006
in order to add a new CatalogItem

36
00:02:01.006 --> 00:02:05.000
and then here where we stream through all of the items

37
00:02:05.000 --> 00:02:07.005
in the list, we can modify that

38
00:02:07.005 --> 00:02:10.009
to leverage our catalogBean

39
00:02:10.009 --> 00:02:14.003
as well as the getItems method on its interface.

40
00:02:14.003 --> 00:02:18.000
Okay, so that modifies all of our existing logic.

41
00:02:18.000 --> 00:02:23.002
Now, we're still going to bind to this list of items

42
00:02:23.002 --> 00:02:27.008
instead of binding to our EJB within our Facelets.

43
00:02:27.008 --> 00:02:29.007
So let's set up a method

44
00:02:29.007 --> 00:02:33.003
that is going to be invoked

45
00:02:33.003 --> 00:02:36.004
when we initialize our page.

46
00:02:36.004 --> 00:02:38.007
And all that method is simply going to do

47
00:02:38.007 --> 00:02:41.007
is assign the items list

48
00:02:41.007 --> 00:02:47.003
to the list that we get from our EJB.

49
00:02:47.003 --> 00:02:49.009
So there we can see that assignment

50
00:02:49.009 --> 00:02:52.000
and in order for that to work,

51
00:02:52.000 --> 00:02:56.000
we're going to have to modify our JSF page.

52
00:02:56.000 --> 00:03:01.002
So what we can do is add the metadata tag

53
00:03:01.002 --> 00:03:05.007
to the JSF and then there is a tag we can use,

54
00:03:05.007 --> 00:03:10.001
it's viewAction and the viewAction tag is nice

55
00:03:10.001 --> 00:03:15.000
because it allows us to insert a method

56
00:03:15.000 --> 00:03:19.008
to be invoked during the lifecycle of JSF.

57
00:03:19.008 --> 00:03:25.002
So here we can bind to our init method

58
00:03:25.002 --> 00:03:28.009
that is on the catalogItemFormBean.

59
00:03:28.009 --> 00:03:30.008
So we'll just go ahead,

60
00:03:30.008 --> 00:03:32.005
bind to that method

61
00:03:32.005 --> 00:03:34.007
and it will be called every time

62
00:03:34.007 --> 00:03:36.006
that this view is displayed.

63
00:03:36.006 --> 00:03:39.005
So we will reach out to the EJB,

64
00:03:39.005 --> 00:03:41.001
grab all of the items

65
00:03:41.001 --> 00:03:44.003
that it contains and then assign them to the list

66
00:03:44.003 --> 00:03:46.005
that will be displayed.

67
00:03:46.005 --> 00:03:49.007
Okay, so let's check our server

68
00:03:49.007 --> 00:03:56.004
and I'm just going to go ahead and remove our project.

69
00:03:56.004 --> 00:03:58.006
And then I'll stop the server

70
00:03:58.006 --> 00:04:03.004
so that we can run our project.

71
00:04:03.004 --> 00:04:06.009
And here instead of right clicking our JSF

72
00:04:06.009 --> 00:04:08.007
or our EJB project,

73
00:04:08.007 --> 00:04:11.009
we right click on the hsports catalog.

74
00:04:11.009 --> 00:04:13.002
So that's our ear

75
00:04:13.002 --> 00:04:16.005
and then we can go to Run As, Run on Server.

76
00:04:16.005 --> 00:04:22.003
That's going to start our server.

77
00:04:22.003 --> 00:04:24.009
Okay, we see it start up

78
00:04:24.009 --> 00:04:28.001
and then what we'll do is open up a browser.

79
00:04:28.001 --> 00:04:32.001
Once again, we can access our form.

80
00:04:32.001 --> 00:04:33.004
There you see the form.

81
00:04:33.004 --> 00:04:35.009
Let's add a new product.

82
00:04:35.009 --> 00:04:37.007
We'll say boots.

83
00:04:37.007 --> 00:04:39.008
Manufactured by SuperBoots.

84
00:04:39.008 --> 00:04:43.009
And they're going to be available October 11th

85
00:04:43.009 --> 00:04:48.007
and we'll just say these are great boots.

86
00:04:48.007 --> 00:04:51.005
And then we can submit and there you see

87
00:04:51.005 --> 00:04:54.008
that our list was populated and all that's happening

88
00:04:54.008 --> 00:04:58.001
through the EJB that we created

89
00:04:58.001 --> 00:05:03.009
and that EJB can be leveraged within our backing beans

90
00:05:03.009 --> 00:05:05.009
in a JSF application

91
00:05:05.009 --> 00:05:09.009
as well as other Java EE technologies

92
00:05:09.009 --> 00:05:13.000
can leverage the EJBs that we build out.

