WEBVTT
1
00:00:00.005 --> 00:00:01.003
- [Instructor] In this lesson,

2
00:00:01.003 --> 00:00:05.006
we're going to configure our JSF project to support CDI,

3
00:00:05.006 --> 00:00:08.008
and then we're going to create our first bean.

4
00:00:08.008 --> 00:00:12.001
In order to configure our project to support CDI,

5
00:00:12.001 --> 00:00:15.004
just right click on it, then click on properties,

6
00:00:15.004 --> 00:00:20.000
and then within the project facets section,

7
00:00:20.000 --> 00:00:24.008
on the dialogue that pops up, you'll want to check CDI,

8
00:00:24.008 --> 00:00:29.005
and make sure you're using version 2.O which is the latest,

9
00:00:29.005 --> 00:00:31.008
and then just hit apply and close.

10
00:00:31.008 --> 00:00:34.005
And what you'll see happen is that,

11
00:00:34.005 --> 00:00:37.004
within your web.XML file,

12
00:00:37.004 --> 00:00:40.003
you'll get a Beans.XML file.

13
00:00:40.003 --> 00:00:43.003
Currently, we're set up as an implicit archive

14
00:00:43.003 --> 00:00:46.004
because we're only looking for annotated beans.

15
00:00:46.004 --> 00:00:49.004
Let's change over to an explicit archive

16
00:00:49.004 --> 00:00:52.004
by setting our bean discovery mode to all,

17
00:00:52.004 --> 00:00:55.005
and with this, we no longer need to annotate

18
00:00:55.005 --> 00:00:58.003
any of our classes in order to make them beans.

19
00:00:58.003 --> 00:01:02.005
They'll just automatically be created as a bean,

20
00:01:02.005 --> 00:01:04.001
when necessary,

21
00:01:04.001 --> 00:01:07.005
in the CDI container.

22
00:01:07.005 --> 00:01:10.000
We can close our beans.XML file,

23
00:01:10.000 --> 00:01:13.000
and now we can start creating our first bean.

24
00:01:13.000 --> 00:01:15.009
Our beans actually going to be an inventory service,

25
00:01:15.009 --> 00:01:20.000
that helps us manage these inventory items.

26
00:01:20.000 --> 00:01:22.009
So the inventory item is just a simple POJO

27
00:01:22.009 --> 00:01:24.008
I've added to the project,

28
00:01:24.008 --> 00:01:27.006
that allows us to track

29
00:01:27.006 --> 00:01:32.006
the quantity of inventory for a particular catalog item.

30
00:01:32.006 --> 00:01:34.007
You'll notice it has its own constructor

31
00:01:34.007 --> 00:01:37.009
where we can pass in the different fields

32
00:01:37.009 --> 00:01:41.002
in order to instantiate the object.

33
00:01:41.002 --> 00:01:44.001
So let's go ahead and, we're 'going to start out

34
00:01:44.001 --> 00:01:47.004
by creating an interface for our new bean,

35
00:01:47.004 --> 00:01:52.006
and I'm going to name that interface Inventory Service,

36
00:01:52.006 --> 00:01:57.008
and it's going to extend the serializable interface.

37
00:01:57.008 --> 00:02:01.004
So with that in place, we can go ahead and hit finish,

38
00:02:01.004 --> 00:02:04.000
and then on this interface we're going

39
00:02:04.000 --> 00:02:06.006
to define a couple methods.

40
00:02:06.006 --> 00:02:09.003
So the first method we're going to define

41
00:02:09.003 --> 00:02:12.007
is the create item method,

42
00:02:12.007 --> 00:02:16.002
which is going to have a return type of void.

43
00:02:16.002 --> 00:02:20.000
Now the create item method is going to accept two arguments,

44
00:02:20.000 --> 00:02:24.006
the first is going to be the catalog item ID,

45
00:02:24.006 --> 00:02:28.005
and then the second is going to be a name.

46
00:02:28.005 --> 00:02:30.009
Then the next method we're going to create

47
00:02:30.009 --> 00:02:34.009
will return a long, and the method's name

48
00:02:34.009 --> 00:02:36.006
is going to be Get Quantity.

49
00:02:36.006 --> 00:02:42.007
So it's going to allow us to provide a catalog item ID,

50
00:02:42.007 --> 00:02:46.001
and then the implementation of this method

51
00:02:46.001 --> 00:02:51.005
will tell us how many of that item are in inventory.

52
00:02:51.005 --> 00:02:55.002
Okay, so now that we have defined our interface,

53
00:02:55.002 --> 00:02:58.001
we're going to go ahead and build

54
00:02:58.001 --> 00:03:01.001
an implementation of that interface.

55
00:03:01.001 --> 00:03:05.003
So I'll create a new class and I'm going to name this class

56
00:03:05.003 --> 00:03:08.004
Local Inventory Service,

57
00:03:08.004 --> 00:03:10.005
and then I will specify that it

58
00:03:10.005 --> 00:03:13.002
implements our inventory service

59
00:03:13.002 --> 00:03:18.004
and we can go ahead and build out our implementation.

60
00:03:18.004 --> 00:03:22.007
So within this inventory service,

61
00:03:22.007 --> 00:03:26.003
we're going to have a map with a key of long,

62
00:03:26.003 --> 00:03:30.006
and a value of inventory item,

63
00:03:30.006 --> 00:03:33.005
and we're going to name that map Items,

64
00:03:33.005 --> 00:03:38.008
and it's going to use a hash map implementation,

65
00:03:38.008 --> 00:03:41.002
so we can go ahead and import those types,

66
00:03:41.002 --> 00:03:44.008
and then we're going to just do some very basic management

67
00:03:44.008 --> 00:03:48.007
of the inventory in memory here, so once again,

68
00:03:48.007 --> 00:03:51.001
we kind of need to create a surrogate key here

69
00:03:51.001 --> 00:03:55.004
for our inventory items, so I'm just going to get a count

70
00:03:55.004 --> 00:03:57.008
of the items in the map incremented,

71
00:03:57.008 --> 00:04:00.001
and then we're going to place an item

72
00:04:00.001 --> 00:04:04.003
in the map using the put method,

73
00:04:04.003 --> 00:04:08.008
and the key will be our inventory,

74
00:04:08.008 --> 00:04:11.006
item ID,

75
00:04:11.006 --> 00:04:15.005
and then looking at the value,

76
00:04:15.005 --> 00:04:21.000
we're going to use the inventory item constructor,

77
00:04:21.000 --> 00:04:25.002
and the first argument will be our inventory item ID

78
00:04:25.002 --> 00:04:29.000
that we created, the second will be the ID of the catalog

79
00:04:29.000 --> 00:04:32.008
item it corresponds to, then we'll pass in the name

80
00:04:32.008 --> 00:04:35.003
and finally we're just going to set

81
00:04:35.003 --> 00:04:39.009
a default value for the quantity to zero.

82
00:04:39.009 --> 00:04:42.003
Okay, and then our get quantity method,

83
00:04:42.003 --> 00:04:44.003
we're 'going to make this really simple,

84
00:04:44.003 --> 00:04:47.003
we're just going to return zero here,

85
00:04:47.003 --> 00:04:50.006
because everything in this store is selling out.

86
00:04:50.006 --> 00:04:56.003
Okay, so we have the implementation of our bean,

87
00:04:56.003 --> 00:04:59.008
and as I mentioned, we don't need to annotate this class

88
00:04:59.008 --> 00:05:04.002
like some other frameworks to make this class a bean,

89
00:05:04.002 --> 00:05:08.004
by default in the bean discovery mode all,

90
00:05:08.004 --> 00:05:13.003
every class is created as a bean, as required,

91
00:05:13.003 --> 00:05:16.000
per the injection needs of the application.

