WEBVTT
1
00:00:00.005 --> 00:00:02.007
- [Instructor] In order to be successful with JPA,

2
00:00:02.007 --> 00:00:05.003
you should be very familiar with the entityManager

3
00:00:05.003 --> 00:00:07.000
and its operations.

4
00:00:07.000 --> 00:00:11.004
Let's take a closer look at those operations in this lesson.

5
00:00:11.004 --> 00:00:15.002
So you'll notice that we've expanded our EJB interface

6
00:00:15.002 --> 00:00:17.001
to include some additional methods.

7
00:00:17.001 --> 00:00:20.007
So now we're able to find a CatalogItem by its ID,

8
00:00:20.007 --> 00:00:24.002
we're also able to delete a CatalogItem,

9
00:00:24.002 --> 00:00:25.007
and then we're able to search

10
00:00:25.007 --> 00:00:28.007
for CatalogItems by their name.

11
00:00:28.007 --> 00:00:31.003
So when we expanded that interface,

12
00:00:31.003 --> 00:00:34.008
we also had to include some stub methods

13
00:00:34.008 --> 00:00:37.006
within our EJB implementation.

14
00:00:37.006 --> 00:00:39.007
And we're going to spend some time

15
00:00:39.007 --> 00:00:43.000
completing the implementations for those methods.

16
00:00:43.000 --> 00:00:49.001
So the first thing we want to do is find an item by its ID.

17
00:00:49.001 --> 00:00:52.001
And it's really easy using the entityManager to do that.

18
00:00:52.001 --> 00:00:54.002
So it has a find method.

19
00:00:54.002 --> 00:00:59.000
And all we need to do is provide the type of the entity,

20
00:00:59.000 --> 00:01:03.005
so in this case we're going to supply the CatalogItem class

21
00:01:03.005 --> 00:01:08.008
and then we pass in the ID, and that's all there is to it.

22
00:01:08.008 --> 00:01:12.004
Now deleting an item is a little bit more complicated.

23
00:01:12.004 --> 00:01:18.005
On the entityManager we're going to find a remove method

24
00:01:18.005 --> 00:01:21.000
and then what we do is we check to see

25
00:01:21.000 --> 00:01:26.003
if the entityManager contains the particular entity.

26
00:01:26.003 --> 00:01:28.003
So we're checking to see if it's within

27
00:01:28.003 --> 00:01:31.004
that persistence context.

28
00:01:31.004 --> 00:01:34.008
If it is we just go ahead and pass the entity

29
00:01:34.008 --> 00:01:36.007
to the remove method.

30
00:01:36.007 --> 00:01:39.005
If it is not within the persistence context

31
00:01:39.005 --> 00:01:44.008
then we use the entityManager to perform a merge.

32
00:01:44.008 --> 00:01:49.007
And this will add the entity to the persistence context.

33
00:01:49.007 --> 00:01:54.007
And then you'll notice the return type of the merge method

34
00:01:54.007 --> 00:01:56.009
is our type of the entity.

35
00:01:56.009 --> 00:02:01.002
So the entity will be passed into the remove method.

36
00:02:01.002 --> 00:02:05.002
And now we're going to move on to construct a query

37
00:02:05.002 --> 00:02:07.003
using the entityManager.

38
00:02:07.003 --> 00:02:10.002
That's actually going to use the LIKE operator

39
00:02:10.002 --> 00:02:14.002
and some wild carding within JPQL.

40
00:02:14.002 --> 00:02:18.008
So to do that we invoke the createQuery method

41
00:02:18.008 --> 00:02:22.001
and then we provide our JPQL,

42
00:02:22.001 --> 00:02:26.000
so remember it is based upon the object.

43
00:02:26.000 --> 00:02:29.003
So we're going to construct a query

44
00:02:29.003 --> 00:02:33.003
that uses the CatalogItem.

45
00:02:33.003 --> 00:02:37.003
And then I'm just going to shift down to a new line here,

46
00:02:37.003 --> 00:02:40.006
and we'll continue our query.

47
00:02:40.006 --> 00:02:43.006
And then we provide a predicate,

48
00:02:43.006 --> 00:02:51.000
so we can say where the CatalogItem's name is like,

49
00:02:51.000 --> 00:02:54.005
and then we use a colon followed by a parameter name.

50
00:02:54.005 --> 00:02:58.004
So we can parameterize these JPQL queries,

51
00:02:58.004 --> 00:03:02.000
which makes them safer, preventing SQL injection.

52
00:03:02.000 --> 00:03:03.005
And then for the second argument

53
00:03:03.005 --> 00:03:06.004
we just provide the CatalogItem class

54
00:03:06.004 --> 00:03:09.003
that helps us type our query.

55
00:03:09.003 --> 00:03:11.006
And then we're able to set the parameters.

56
00:03:11.006 --> 00:03:13.007
So we just provide the parameter name,

57
00:03:13.007 --> 00:03:16.000
which in this case is name.

58
00:03:16.000 --> 00:03:17.005
And then what we're going to do

59
00:03:17.005 --> 00:03:24.005
is surround the value provided with wild cards

60
00:03:24.005 --> 00:03:28.003
and that's going to allow the LIKE operation

61
00:03:28.003 --> 00:03:31.000
to be wild carded so that we don't have to

62
00:03:31.000 --> 00:03:33.008
kind of have a starts with or an ends with.

63
00:03:33.008 --> 00:03:36.008
And then we just return the results list.

64
00:03:36.008 --> 00:03:42.005
So there's the implementations for our new EJB methods.

65
00:03:42.005 --> 00:03:45.002
And we use the entityManager to satisfy

66
00:03:45.002 --> 00:03:47.006
all of these crud operations.

67
00:03:47.006 --> 00:03:50.006
Let's talk a little bit more about what's going on then

68
00:03:50.006 --> 00:03:52.005
within the application, there's a few things

69
00:03:52.005 --> 00:03:55.003
that have been pre-positioned.

70
00:03:55.003 --> 00:03:59.005
So on our list page, you'll now see a form

71
00:03:59.005 --> 00:04:03.002
that allows us to search our data table.

72
00:04:03.002 --> 00:04:05.007
So when we click the command button

73
00:04:05.007 --> 00:04:09.007
it's going to invoke the search by name method

74
00:04:09.007 --> 00:04:12.002
on our CatalogItem form Bean.

75
00:04:12.002 --> 00:04:16.003
And you'll see that's setup to use Ajax within JSF,

76
00:04:16.003 --> 00:04:19.002
so it won't be a full trip to the browser,

77
00:04:19.002 --> 00:04:21.001
it's just going to be an Ajax request

78
00:04:21.001 --> 00:04:23.008
that will refresh our data table.

79
00:04:23.008 --> 00:04:26.008
It gets the search input, or the search text,

80
00:04:26.008 --> 00:04:29.002
from this input text box.

81
00:04:29.002 --> 00:04:32.007
And if we take a look at the Backing Bean

82
00:04:32.007 --> 00:04:34.007
we can see all of this.

83
00:04:34.007 --> 00:04:37.009
So here's our search text and then we're calling

84
00:04:37.009 --> 00:04:41.000
that search by name method on our EJB.

85
00:04:41.000 --> 00:04:42.008
And we got a little bit more work to do

86
00:04:42.008 --> 00:04:48.001
because we're going to modify our CatalogItemDeleteBean

87
00:04:48.001 --> 00:04:51.005
in order to leverage some additional methods

88
00:04:51.005 --> 00:04:54.002
that we've placed on that EJB.

89
00:04:54.002 --> 00:04:56.000
So the first thing we're going to do

90
00:04:56.000 --> 00:05:00.000
is make this a ConversationScoped Bean.

91
00:05:00.000 --> 00:05:02.003
You'll remember that this was one of the scopes

92
00:05:02.003 --> 00:05:06.001
particular to JSF so it'll be nice to take a look at that.

93
00:05:06.001 --> 00:05:10.006
And when we do that we need to implement

94
00:05:10.006 --> 00:05:12.008
the Serializable interface.

95
00:05:12.008 --> 00:05:15.008
So we can go ahead and have our Bean

96
00:05:15.008 --> 00:05:18.002
implement that interface.

97
00:05:18.002 --> 00:05:23.009
And then we're going to inject our EJB.

98
00:05:23.009 --> 00:05:27.005
So we'll use the CatalogLocal interface

99
00:05:27.005 --> 00:05:31.003
and then specify that it is a catalogBean

100
00:05:31.003 --> 00:05:35.003
and that'll be the name of our EJB.

101
00:05:35.003 --> 00:05:36.009
And then the other thing we'll need to do,

102
00:05:36.009 --> 00:05:40.007
in order to work with the ConversationScope

103
00:05:40.007 --> 00:05:46.005
we need to inject a conversation object.

104
00:05:46.005 --> 00:05:49.007
So we can import that and now we have

105
00:05:49.007 --> 00:05:52.000
this new conversation object.

106
00:05:52.000 --> 00:05:55.001
And that's going to allow us to explicitly

107
00:05:55.001 --> 00:05:58.006
manage the scope of this Bean within our code.

108
00:05:58.006 --> 00:06:00.002
So here you see we had the logic

109
00:06:00.002 --> 00:06:03.005
that was fetching the particular CatalogItem

110
00:06:03.005 --> 00:06:06.006
from our list, we're no longer going to use that.

111
00:06:06.006 --> 00:06:09.005
Instead we're going to use our conversation.

112
00:06:09.005 --> 00:06:12.006
And we'll begin the conversation.

113
00:06:12.006 --> 00:06:17.004
And then we're going to assign the item field

114
00:06:17.004 --> 00:06:23.006
to the result of our CatalogBean's findItem method.

115
00:06:23.006 --> 00:06:28.002
And we can just pass in the itemID here.

116
00:06:28.002 --> 00:06:31.000
And we're good to go with the fetchItem method.

117
00:06:31.000 --> 00:06:34.001
We're going to move on at this point then.

118
00:06:34.001 --> 00:06:37.009
And here we're going to provide the implementation

119
00:06:37.009 --> 00:06:44.007
in order to remove a particular item from our database.

120
00:06:44.007 --> 00:06:48.009
So all we need to do here is use the EJB

121
00:06:48.009 --> 00:06:54.001
and its delete method, and then we simply pass in the item

122
00:06:54.001 --> 00:06:57.000
that has been bound to our Backing Bean.

123
00:06:57.000 --> 00:07:01.004
And then we want to go ahead and end our conversation,

124
00:07:01.004 --> 00:07:05.001
and that will end the ConversationScope lifecycle

125
00:07:05.001 --> 00:07:07.001
here for this Bean.

126
00:07:07.001 --> 00:07:12.002
Okay, so with that in place let's go ahead

127
00:07:12.002 --> 00:07:15.001
and we can start our application.

128
00:07:15.001 --> 00:07:20.005
So we just right click, go to run as and then run on server.

129
00:07:20.005 --> 00:07:22.009
We'll see our console spin up.

130
00:07:22.009 --> 00:07:25.007
And I'll start opening up a browser.

131
00:07:25.007 --> 00:07:28.002
And we'll navigate to the application.

132
00:07:28.002 --> 00:07:35.002
And then let's add a couple things, we'll add gloves.

133
00:07:35.002 --> 00:07:38.000
And then we'll head back to the form

134
00:07:38.000 --> 00:07:46.000
and then we're going to add mittens.

135
00:07:46.000 --> 00:07:48.006
We can see they're stored within our database.

136
00:07:48.006 --> 00:07:51.001
And then I'm going to do a search

137
00:07:51.001 --> 00:07:55.002
for a item that has a name with two T's in it.

138
00:07:55.002 --> 00:07:56.009
You see we get the mittens.

139
00:07:56.009 --> 00:08:00.006
Now if we click on the remove item link,

140
00:08:00.006 --> 00:08:03.008
the item is populated from the database

141
00:08:03.008 --> 00:08:08.000
and then we can go ahead confirm the delete of that item

142
00:08:08.000 --> 00:08:09.006
and it's gone.

143
00:08:09.006 --> 00:08:12.007
So this was a look at some more of the operations

144
00:08:12.007 --> 00:08:14.003
on the entityManager.

145
00:08:14.003 --> 00:08:16.006
Very important to be familiar with these

146
00:08:16.006 --> 00:08:20.000
if you're going to be using JPA within your applications.

