WEBVTT
1
00:00:00.005 --> 00:00:01.004
- [Instructor] In this lesson,

2
00:00:01.004 --> 00:00:05.001
we'll create our first EJB session bean.

3
00:00:05.001 --> 00:00:09.007
To do that, we're going to create a new session bean

4
00:00:09.007 --> 00:00:13.000
underneath the ejbModule source folder

5
00:00:13.000 --> 00:00:16.001
in our hsports catalog ejb project.

6
00:00:16.001 --> 00:00:18.004
So just open up the new dialog

7
00:00:18.004 --> 00:00:20.004
and then type session

8
00:00:20.004 --> 00:00:24.002
and you'll see the Session Bean available for us to select.

9
00:00:24.002 --> 00:00:25.009
Go ahead and hit Next

10
00:00:25.009 --> 00:00:28.002
and then we need to provide a package

11
00:00:28.002 --> 00:00:30.006
to place that session bean.

12
00:00:30.006 --> 00:00:34.000
We're going to specify that as com.linkedin.

13
00:00:34.000 --> 00:00:37.000
And then we need to provide a name for the class.

14
00:00:37.000 --> 00:00:40.009
We're just going to call this the Catalog class

15
00:00:40.009 --> 00:00:44.000
and it's going to contain all of our logic

16
00:00:44.000 --> 00:00:48.003
for maintaining the catalog of catalog items.

17
00:00:48.003 --> 00:00:51.009
We'll also go ahead and create a local interface

18
00:00:51.009 --> 00:00:53.009
for this EJB

19
00:00:53.009 --> 00:00:57.000
and then from there, we're going to click on Next

20
00:00:57.000 --> 00:01:01.008
and we can just accept the defaults on this dialog.

21
00:01:01.008 --> 00:01:05.000
This will cause our EJB to be created.

22
00:01:05.000 --> 00:01:09.003
You'll notice that it receives the Stateless annotation.

23
00:01:09.003 --> 00:01:14.000
And you'll also see that it gets the LocalBean annotation.

24
00:01:14.000 --> 00:01:16.004
Now, in addition to the implementation,

25
00:01:16.004 --> 00:01:19.007
there was also an interface created.

26
00:01:19.007 --> 00:01:23.005
So if we look at the catalog local interface,

27
00:01:23.005 --> 00:01:26.006
this is going to define the methods

28
00:01:26.006 --> 00:01:29.000
that are found on our EJB.

29
00:01:29.000 --> 00:01:33.000
So let's go ahead and we're going to add two methods here

30
00:01:33.000 --> 00:01:34.001
and these methods are going

31
00:01:34.001 --> 00:01:37.004
to work with the CatalogItem object.

32
00:01:37.004 --> 00:01:40.009
Now, currently that's within our JSF project.

33
00:01:40.009 --> 00:01:43.004
What I'm going to do is copy that

34
00:01:43.004 --> 00:01:47.007
into our EJB project.

35
00:01:47.007 --> 00:01:51.003
And there we can see it's entered into the project.

36
00:01:51.003 --> 00:01:54.004
At this point, I can remove that CatalogItem

37
00:01:54.004 --> 00:01:57.003
from the JSF project

38
00:01:57.003 --> 00:02:02.003
and then I'm just going to adjust our project

39
00:02:02.003 --> 00:02:07.001
to include the other project on the build path.

40
00:02:07.001 --> 00:02:09.001
And because they're packaged as and near,

41
00:02:09.001 --> 00:02:12.003
this will all work out when we deploy to the server.

42
00:02:12.003 --> 00:02:15.004
So just go to the build path for the project,

43
00:02:15.004 --> 00:02:16.008
click on the Projects tab

44
00:02:16.008 --> 00:02:21.000
and then hit Add and then select the EJB project.

45
00:02:21.000 --> 00:02:23.008
That will add it to our JSF project

46
00:02:23.008 --> 00:02:26.005
and you'll notice all of our compilation issues

47
00:02:26.005 --> 00:02:30.006
will resolve here once I did a clean.

48
00:02:30.006 --> 00:02:34.008
And we build the JSF project.

49
00:02:34.008 --> 00:02:40.002
Now we can begin to work on the interface for our EJB.

50
00:02:40.002 --> 00:02:43.000
We're going to add a method

51
00:02:43.000 --> 00:02:45.008
to the interface that returns a list

52
00:02:45.008 --> 00:02:50.007
of CatalogItems and we're just going to call it getItems.

53
00:02:50.007 --> 00:02:52.009
And then we're going to add another method

54
00:02:52.009 --> 00:02:57.001
with a void return type that is addItem.

55
00:02:57.001 --> 00:03:00.008
And that method is going to accept a CatalogItem

56
00:03:00.008 --> 00:03:03.000
as an argument.

57
00:03:03.000 --> 00:03:06.003
So there we can import the list

58
00:03:06.003 --> 00:03:09.000
and our interface is good to go.

59
00:03:09.000 --> 00:03:11.008
You'll notice that our implementation

60
00:03:11.008 --> 00:03:16.000
will now need to implement these two methods.

61
00:03:16.000 --> 00:03:19.005
So let's go ahead, add those unimplemented methods

62
00:03:19.005 --> 00:03:21.002
to satisfy the interface.

63
00:03:21.002 --> 00:03:25.004
And then we can build out the implementation

64
00:03:25.004 --> 00:03:27.004
for our EJB.

65
00:03:27.004 --> 00:03:28.006
So to do that,

66
00:03:28.006 --> 00:03:36.009
we're going to add a list of CatalogItems.

67
00:03:36.009 --> 00:03:40.009
And we'll just call that list items.

68
00:03:40.009 --> 00:03:44.003
And it's going to be of type ArrayList

69
00:03:44.003 --> 00:03:46.002
and then from here,

70
00:03:46.002 --> 00:03:48.009
it's pretty simple for getItems.

71
00:03:48.009 --> 00:03:53.009
We just return the items field

72
00:03:53.009 --> 00:03:56.001
and then for addItems,

73
00:03:56.001 --> 00:04:01.002
we just use the add method on the collection

74
00:04:01.002 --> 00:04:03.007
and we pass it the item.

75
00:04:03.007 --> 00:04:07.001
Okay, so we saw this logic within some

76
00:04:07.001 --> 00:04:09.002
of our backing beans in JSF

77
00:04:09.002 --> 00:04:10.007
and what we've done, we pushed it down

78
00:04:10.007 --> 00:04:13.001
from the web tier into the EJB

79
00:04:13.001 --> 00:04:15.004
so that we can manage the state

80
00:04:15.004 --> 00:04:20.000
and it could be reused by other clients of this EJB.

