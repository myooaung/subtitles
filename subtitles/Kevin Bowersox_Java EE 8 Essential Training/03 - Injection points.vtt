WEBVTT
1
00:00:00.005 --> 00:00:01.005
- [Instructor] In this lesson,

2
00:00:01.005 --> 00:00:05.007
we will use CDI to inject our InventoryService bean

3
00:00:05.007 --> 00:00:08.009
into a JSF backing bean.

4
00:00:08.009 --> 00:00:12.008
So you'll see that we have our local inventory service

5
00:00:12.008 --> 00:00:16.000
which implements the InventoryService interface.

6
00:00:16.000 --> 00:00:17.007
And we're going to leverage that

7
00:00:17.007 --> 00:00:21.009
within our CatalogItemFormBean.

8
00:00:21.009 --> 00:00:24.004
This bean serves as a backing bean

9
00:00:24.004 --> 00:00:26.009
within our JSF application

10
00:00:26.009 --> 00:00:30.001
and because it is a backing bean,

11
00:00:30.001 --> 00:00:34.002
it can have its dependencies injected into it.

12
00:00:34.002 --> 00:00:38.002
Now, right now you see that we're getting an EJB injected

13
00:00:38.002 --> 00:00:41.006
into the CatalogItemFormBean.

14
00:00:41.006 --> 00:00:45.005
We no longer need to use the EJB annotation

15
00:00:45.005 --> 00:00:47.004
since CDI has come along.

16
00:00:47.004 --> 00:00:50.002
We can just change this over to Inject

17
00:00:50.002 --> 00:00:52.002
and the Inject annotation

18
00:00:52.002 --> 00:00:56.002
is preferred moving forward with EJBs.

19
00:00:56.002 --> 00:00:59.006
Now, in order to inject our InventoryService,

20
00:00:59.006 --> 00:01:04.001
we just declare a field of type InventoryService

21
00:01:04.001 --> 00:01:07.008
and then we can give it a name of inventoryService

22
00:01:07.008 --> 00:01:11.002
and then we add the Inject annotation

23
00:01:11.002 --> 00:01:12.008
on this field

24
00:01:12.008 --> 00:01:16.000
and that's known as the injection point.

25
00:01:16.000 --> 00:01:20.003
So where we add the Inject annotation

26
00:01:20.003 --> 00:01:23.000
on a field or wherever within the class,

27
00:01:23.000 --> 00:01:24.009
in the documentation, we'll hear that referred

28
00:01:24.009 --> 00:01:26.009
to as the injection point.

29
00:01:26.009 --> 00:01:29.001
Now, this is going to cause CDI

30
00:01:29.001 --> 00:01:32.003
to take that bean instance from the container

31
00:01:32.003 --> 00:01:37.001
and inject it into our CatalogItemFormBean

32
00:01:37.001 --> 00:01:41.007
so that we can leverage it within the bean itself.

33
00:01:41.007 --> 00:01:45.009
So here, we're going to modify the logic

34
00:01:45.009 --> 00:01:49.003
within our addItem method

35
00:01:49.003 --> 00:01:52.003
to leverage our new InventoryService.

36
00:01:52.003 --> 00:01:55.003
So I'm going to remove this line

37
00:01:55.003 --> 00:01:59.004
where we just print out the items in the catalog

38
00:01:59.004 --> 00:02:01.008
and we're going to replace it with a call

39
00:02:01.008 --> 00:02:06.001
to our inventoryService's createItem method.

40
00:02:06.001 --> 00:02:11.005
So here we can supply the ItemId

41
00:02:11.005 --> 00:02:14.007
as the first argument to our createItem method

42
00:02:14.007 --> 00:02:19.003
and then we can get the item

43
00:02:19.003 --> 00:02:22.003
and on that item, we can get the name

44
00:02:22.003 --> 00:02:25.000
and pass that in as the second argument.

45
00:02:25.000 --> 00:02:29.005
Okay, so we're supplying that to our inventoryService

46
00:02:29.005 --> 00:02:32.000
via the createItem method

47
00:02:32.000 --> 00:02:36.004
and we're going to add one thing to our implementation.

48
00:02:36.004 --> 00:02:39.006
We're going to add some logic

49
00:02:39.006 --> 00:02:42.002
that will print some messages to the console

50
00:02:42.002 --> 00:02:45.000
so that we can distinguish

51
00:02:45.000 --> 00:02:48.008
that we are using our local InventoryService.

52
00:02:48.008 --> 00:02:54.009
So I'm just going to create a method called printInventory

53
00:02:54.009 --> 00:02:58.009
and then we can define that on our bean.

54
00:02:58.009 --> 00:03:02.002
And within that printInventory method,

55
00:03:02.002 --> 00:03:07.001
let's just go ahead and we can add some console output.

56
00:03:07.001 --> 00:03:11.009
We'll say Local inventory contains

57
00:03:11.009 --> 00:03:16.004
and then we're going to just loop through

58
00:03:16.004 --> 00:03:21.008
the entries in our map.

59
00:03:21.008 --> 00:03:26.000
So for each entry,

60
00:03:26.000 --> 00:03:29.001
let's make sure we got the right import there

61
00:03:29.001 --> 00:03:34.000
and we're going to have to remove that.

62
00:03:34.000 --> 00:03:34.009
We'll want to make sure

63
00:03:34.009 --> 00:03:37.009
that we grab the entry from the map.

64
00:03:37.009 --> 00:03:39.003
There we go.

65
00:03:39.003 --> 00:03:40.006
Okay.

66
00:03:40.006 --> 00:03:43.003
Now for each entry in the map,

67
00:03:43.003 --> 00:03:50.002
we're going to basically iterate through them.

68
00:03:50.002 --> 00:03:53.002
And print them out to the console.

69
00:03:53.002 --> 00:03:56.004
So we'll get the value from the map entry

70
00:03:56.004 --> 00:03:59.002
and then get the name of that item.

71
00:03:59.002 --> 00:04:03.006
Okay, and here we have some output now within our bean

72
00:04:03.006 --> 00:04:06.009
so that we can get some insights into what's going on.

73
00:04:06.009 --> 00:04:08.003
All right, with that in place,

74
00:04:08.003 --> 00:04:12.001
we can go ahead, check our server

75
00:04:12.001 --> 00:04:19.000
and start our application.

76
00:04:19.000 --> 00:04:21.008
K, there you can see that our application is up.

77
00:04:21.008 --> 00:04:24.008
I'm going to go ahead and clear the console.

78
00:04:24.008 --> 00:04:26.005
And then we'll open a browser

79
00:04:26.005 --> 00:04:30.001
and if we navigate to our application,

80
00:04:30.001 --> 00:04:37.008
we can go ahead, add the gloves in.

81
00:04:37.008 --> 00:04:39.003
Submit our form

82
00:04:39.003 --> 00:04:43.007
and here you'll see that CDI

83
00:04:43.007 --> 00:04:47.006
injected our bean within our JSF backing bean

84
00:04:47.006 --> 00:04:50.000
and we're able to see the console output

85
00:04:50.000 --> 00:04:53.000
from our InventoryService bean.

