WEBVTT
1
00:00:00.005 --> 00:00:04.003
- [Instructor] JSPs have the ability to add tag libraries

2
00:00:04.003 --> 00:00:07.007
which can deliver additional capabilities to the page.

3
00:00:07.007 --> 00:00:11.000
In this lesson, we'll explore the java standard tag library,

4
00:00:11.000 --> 00:00:15.002
one of the most commonly used tag libraries with JSP.

5
00:00:15.002 --> 00:00:19.005
To add a tag library, we first add a directive to the page.

6
00:00:19.005 --> 00:00:22.001
You'll remember that directives send messages

7
00:00:22.001 --> 00:00:26.007
to the JSP container to tell it what components to add.

8
00:00:26.007 --> 00:00:31.002
We currently have the page directive on our JSP,

9
00:00:31.002 --> 00:00:34.007
we're going to go ahead and add another directive

10
00:00:34.007 --> 00:00:38.002
that is going to be a tag library directive.

11
00:00:38.002 --> 00:00:40.007
So when we add a tag library,

12
00:00:40.007 --> 00:00:45.008
we specify a prefix, and that prefix can be used

13
00:00:45.008 --> 00:00:50.001
as a short hand way to reference tags within that library.

14
00:00:50.001 --> 00:00:55.000
So, we're going to assign C as the prefix for JSTL,

15
00:00:55.000 --> 00:01:00.001
and then we need to specify the URI for JSTL.

16
00:01:00.001 --> 00:01:02.008
Now, you'll notice that you get several selections

17
00:01:02.008 --> 00:01:05.002
provided for you by default,

18
00:01:05.002 --> 00:01:06.009
and you want to be very careful

19
00:01:06.009 --> 00:01:09.002
to make sure you get the right version.

20
00:01:09.002 --> 00:01:10.005
So you'll want to select

21
00:01:10.005 --> 00:01:16.003
java.sun.com/jsp/jstl/core,

22
00:01:16.003 --> 00:01:21.003
and you can see that corresponds with version 1.2 of JSTL.

23
00:01:21.003 --> 00:01:23.006
Okay, so with that in place,

24
00:01:23.006 --> 00:01:28.002
we can now use JSTL within our JSP page,

25
00:01:28.002 --> 00:01:32.002
but let's change some of the attributes

26
00:01:32.002 --> 00:01:34.007
coming back to the JSP.

27
00:01:34.007 --> 00:01:38.002
So we're going to navigate over to our servlet,

28
00:01:38.002 --> 00:01:40.009
and here you'll see that we

29
00:01:40.009 --> 00:01:43.004
are adding an item to the catalog

30
00:01:43.004 --> 00:01:44.009
when the form is submitted,

31
00:01:44.009 --> 00:01:47.002
let's go ahead and add

32
00:01:47.002 --> 00:01:50.002
the actual collection of items

33
00:01:50.002 --> 00:01:53.005
as an attribute on the request.

34
00:01:53.005 --> 00:01:56.002
So, we're going to name the attribute items,

35
00:01:56.002 --> 00:01:59.009
and then we're simply going to use the catalog class

36
00:01:59.009 --> 00:02:02.005
and it has a getItems method,

37
00:02:02.005 --> 00:02:05.008
which returns a list of catalog items.

38
00:02:05.008 --> 00:02:07.004
So now we're going to have a collection

39
00:02:07.004 --> 00:02:10.004
as an attribute on our request,

40
00:02:10.004 --> 00:02:12.008
and what we can do over in the JSP

41
00:02:12.008 --> 00:02:19.003
is we can use JSTL to iterate through that collection.

42
00:02:19.003 --> 00:02:23.003
So let's navigate further down in our page

43
00:02:23.003 --> 00:02:27.003
and here you can see we have our dynamic message.

44
00:02:27.003 --> 00:02:31.001
Well, instead of displaying the message attribute,

45
00:02:31.001 --> 00:02:32.006
which no longer exists,

46
00:02:32.006 --> 00:02:36.001
we're going to build out our table sum.

47
00:02:36.001 --> 00:02:40.008
So within the table, I'm going to add another table row,

48
00:02:40.008 --> 00:02:45.006
and in here we'll add headers to the table,

49
00:02:45.006 --> 00:02:51.009
so one for the name, and then we can go ahead and add

50
00:02:51.009 --> 00:02:55.002
a header as well for the manufacturer.

51
00:02:55.002 --> 00:02:59.006
And then we can display the SKU.

52
00:02:59.006 --> 00:03:03.003
Okay, now let's get to the dynamic part.

53
00:03:03.003 --> 00:03:05.007
So within the page,

54
00:03:05.007 --> 00:03:08.003
we're going to use JSTL

55
00:03:08.003 --> 00:03:11.009
and you'll see that it has a forEach tag,

56
00:03:11.009 --> 00:03:14.007
and this basically causes iteration

57
00:03:14.007 --> 00:03:17.007
within the markup of the page

58
00:03:17.007 --> 00:03:23.005
to display markups for each element within a collection.

59
00:03:23.005 --> 00:03:26.006
So we need to specify an items attribute,

60
00:03:26.006 --> 00:03:29.000
and here's where we're going to reference

61
00:03:29.000 --> 00:03:32.001
that collection that we added as an attribute

62
00:03:32.001 --> 00:03:33.006
within the request.

63
00:03:33.006 --> 00:03:37.008
And then we need to assign a variable for

64
00:03:37.008 --> 00:03:39.008
each item in the collection.

65
00:03:39.008 --> 00:03:42.004
So I've just specified that as item,

66
00:03:42.004 --> 00:03:45.008
and then what we can do, we can borrow this syntax

67
00:03:45.008 --> 00:03:47.008
and place it within

68
00:03:47.008 --> 00:03:50.003
the body of that tag.

69
00:03:50.003 --> 00:03:55.006
And anything between the opening and closing tag

70
00:03:55.006 --> 00:03:59.003
of that forEach tag is going to be

71
00:03:59.003 --> 00:04:03.006
repeated for each element within the collection.

72
00:04:03.006 --> 00:04:05.009
So we're going to create a new table row.

73
00:04:05.009 --> 00:04:09.000
We can remove some of the styling,

74
00:04:09.000 --> 00:04:13.005
and then here, we can reference

75
00:04:13.005 --> 00:04:16.002
the different properties on the item,

76
00:04:16.002 --> 00:04:18.002
so there was a name property,

77
00:04:18.002 --> 00:04:22.008
there was also a manufacturer property that we can display,

78
00:04:22.008 --> 00:04:26.000
let's go ahead and add that,

79
00:04:26.000 --> 00:04:33.009
and then we can also add the SKU property.

80
00:04:33.009 --> 00:04:36.008
Okay, so that's in place.

81
00:04:36.008 --> 00:04:40.004
So at this point, let's go ahead and run our application.

82
00:04:40.004 --> 00:04:42.007
So we can right click on our project,

83
00:04:42.007 --> 00:04:45.001
go to run as, and then run on server.

84
00:04:45.001 --> 00:04:47.007
You'll see that WildFly is starting up.

85
00:04:47.007 --> 00:04:51.004
And there we see our console,

86
00:04:51.004 --> 00:04:53.007
and there our application is started.

87
00:04:53.007 --> 00:04:55.009
And I'm actually going to go over to Firefox

88
00:04:55.009 --> 00:04:59.002
to show you this demonstration.

89
00:04:59.002 --> 00:05:02.003
So let's add a product name,

90
00:05:02.003 --> 00:05:03.006
and this product name,

91
00:05:03.006 --> 00:05:06.000
we're going to be a little bit clever with it,

92
00:05:06.000 --> 00:05:09.006
we're going to put in some markup actually.

93
00:05:09.006 --> 00:05:12.000
And then we can just put test in

94
00:05:12.000 --> 00:05:14.005
for the manufacturer, put an SKU.

95
00:05:14.005 --> 00:05:20.002
And there'll you'll notice that once the JSP

96
00:05:20.002 --> 00:05:23.005
displayed the content and sent it back to the browser,

97
00:05:23.005 --> 00:05:26.006
we actually, you know, had the script execute.

98
00:05:26.006 --> 00:05:29.005
That's not good, that's actually a vulnerability.

99
00:05:29.005 --> 00:05:32.004
So, what we can do in order to prevent that,

100
00:05:32.004 --> 00:05:37.003
is if we go back to the list.jsp page,

101
00:05:37.003 --> 00:05:42.002
there's another tag within the JSTL library

102
00:05:42.002 --> 00:05:45.002
and it's c:out, and what this is going to do

103
00:05:45.002 --> 00:05:47.003
it's going to escape the content

104
00:05:47.003 --> 00:05:50.007
that is going out to the browser

105
00:05:50.007 --> 00:05:53.001
and recommend using it anytime

106
00:05:53.001 --> 00:05:57.008
that you are sending output to the browser that's untrusted.

107
00:05:57.008 --> 00:06:02.008
So, let's go ahead, we're going to stop our server.

108
00:06:02.008 --> 00:06:06.004
And then I'll go back, restart the project,

109
00:06:06.004 --> 00:06:09.002
and we can give that test another shot.

110
00:06:09.002 --> 00:06:10.009
So I just wanted to illustrate that

111
00:06:10.009 --> 00:06:15.007
so that you're not creating insecure applications with JSP.

112
00:06:15.007 --> 00:06:20.003
So we'll head back to the form,

113
00:06:20.003 --> 00:06:21.005
and I'll just copy this

114
00:06:21.005 --> 00:06:24.004
so we don't have to type it back out.

115
00:06:24.004 --> 00:06:28.009
And, we're going to once again, add the malicious script in,

116
00:06:28.009 --> 00:06:31.006
we'll put our manufacturer as test,

117
00:06:31.006 --> 00:06:34.001
and then we can put in our SKU.

118
00:06:34.001 --> 00:06:38.008
And now you'll notice that we safely rendered that markup.

119
00:06:38.008 --> 00:06:40.005
So, always keep that in mind.

120
00:06:40.005 --> 00:06:43.007
You have the out tag within the JSTL library

121
00:06:43.007 --> 00:06:47.000
that can make your applications more secure.

