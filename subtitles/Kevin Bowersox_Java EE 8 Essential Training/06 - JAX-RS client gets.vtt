WEBVTT
1
00:00:00.005 --> 00:00:01.004
- [Instructor] In this lesson,

2
00:00:01.004 --> 00:00:04.000
we're going to use our JAX-RS client

3
00:00:04.000 --> 00:00:07.006
to make some additional calls against our REST API.

4
00:00:07.006 --> 00:00:11.007
Those calls are going to use the HTTP GET method,

5
00:00:11.007 --> 00:00:13.006
and we'll see two forms of it.

6
00:00:13.006 --> 00:00:17.001
So, to get started, let's talk things over quick.

7
00:00:17.001 --> 00:00:19.000
Within our item facelet,

8
00:00:19.000 --> 00:00:21.007
you'll notice that we added a quantity field

9
00:00:21.007 --> 00:00:24.006
that's displayed regarding the details

10
00:00:24.006 --> 00:00:26.006
of the particular catalog item,

11
00:00:26.006 --> 00:00:29.007
so this shows how much inventory's available.

12
00:00:29.007 --> 00:00:32.005
If we look at the backing bean

13
00:00:32.005 --> 00:00:35.006
for that item facelet,

14
00:00:35.006 --> 00:00:38.005
you can see that we've added a quantity

15
00:00:38.005 --> 00:00:42.000
onto the backing bean of type long.

16
00:00:42.000 --> 00:00:44.006
And then in order to retrieve that quantity,

17
00:00:44.006 --> 00:00:48.002
we are making a call on our inventory service

18
00:00:48.002 --> 00:00:50.006
to the get quantity method

19
00:00:50.006 --> 00:00:53.007
and we supply the catalog item ID.

20
00:00:53.007 --> 00:00:57.007
If we navigate to our remote inventory service,

21
00:00:57.007 --> 00:00:59.007
what we'll see is that

22
00:00:59.007 --> 00:01:05.001
the get quantity method has yet to be implemented

23
00:01:05.001 --> 00:01:06.009
on this resource.

24
00:01:06.009 --> 00:01:09.005
So we're going to work on that.

25
00:01:09.005 --> 00:01:13.001
And the way we're going to create the implementation is

26
00:01:13.001 --> 00:01:17.009
to call our JAX-RS REST API that we built,

27
00:01:17.009 --> 00:01:18.009
and, particularly,

28
00:01:18.009 --> 00:01:22.002
we want to call the inventory items resource.

29
00:01:22.002 --> 00:01:24.006
And within that resource,

30
00:01:24.006 --> 00:01:27.002
we're going to find a resource method

31
00:01:27.002 --> 00:01:30.009
that is find by catalog ID.

32
00:01:30.009 --> 00:01:32.009
So let's talk about this a little.

33
00:01:32.009 --> 00:01:36.003
It expects a HTTP GET to be sent

34
00:01:36.003 --> 00:01:40.004
and it's going to be sent to the /catalog path.

35
00:01:40.004 --> 00:01:42.001
And then you also see

36
00:01:42.001 --> 00:01:44.009
it wants us to provide a query parameter,

37
00:01:44.009 --> 00:01:49.003
so let's go ahead and build out that implementation

38
00:01:49.003 --> 00:01:53.006
within our remote inventory service.

39
00:01:53.006 --> 00:02:02.002
So we'll be using the JAX-RS client, so let's create that.

40
00:02:02.002 --> 00:02:06.005
And then the client is going to target the same API,

41
00:02:06.005 --> 00:02:09.004
so we can use the same API URL,

42
00:02:09.004 --> 00:02:15.002
and then the path was our inventory items resource.

43
00:02:15.002 --> 00:02:18.000
And you'll remember we also need to add

44
00:02:18.000 --> 00:02:21.001
the catalog path on there.

45
00:02:21.001 --> 00:02:24.005
Okay, so we have our target set up.

46
00:02:24.005 --> 00:02:29.002
The next thing we need to do is add the query params.

47
00:02:29.002 --> 00:02:34.001
So there's a query param method that allows us to specify

48
00:02:34.001 --> 00:02:39.004
the name of the query param, and it was catalogItemId.

49
00:02:39.004 --> 00:02:44.001
And then we pass in the value, and in this case,

50
00:02:44.001 --> 00:02:47.009
we need to take our long to a string.

51
00:02:47.009 --> 00:02:52.002
And once that's in place, we can go ahead build the request

52
00:02:52.002 --> 00:02:53.006
and then issue the get.

53
00:02:53.006 --> 00:02:56.006
Now, pay attention to this next part.

54
00:02:56.006 --> 00:03:01.004
Get allows us to provide an argument of type class

55
00:03:01.004 --> 00:03:06.009
that is going to type the response coming back,

56
00:03:06.009 --> 00:03:09.004
so when we make this call to the REST API,

57
00:03:09.004 --> 00:03:12.008
it's going to return Jason representing the inventory item,

58
00:03:12.008 --> 00:03:17.004
and it's able to de-serialize to the class we provide,

59
00:03:17.004 --> 00:03:19.009
and that's the InventoryItem class.

60
00:03:19.009 --> 00:03:23.003
So that's going to be returned from this call,

61
00:03:23.003 --> 00:03:28.001
so let's assign the result of that call

62
00:03:28.001 --> 00:03:32.000
to an inventory item named inventory item

63
00:03:32.000 --> 00:03:37.002
that we will then return the quantity from

64
00:03:37.002 --> 00:03:43.000
in order to satisfy our method implementation here.

65
00:03:43.000 --> 00:03:45.002
Okay, so with that in place,

66
00:03:45.002 --> 00:03:56.003
let's go ahead and we can run our application.

67
00:03:56.003 --> 00:03:59.000
And we'll need to build out a new product,

68
00:03:59.000 --> 00:04:01.005
so we're going to make some gloves,

69
00:04:01.005 --> 00:04:04.001
and then you can see that gloves were created.

70
00:04:04.001 --> 00:04:07.004
And now if we navigate into the item details page,

71
00:04:07.004 --> 00:04:12.007
you can see we got a response back from our REST API.

72
00:04:12.007 --> 00:04:14.004
Okay, so that's one of the ways

73
00:04:14.004 --> 00:04:16.003
that we can build a get request,

74
00:04:16.003 --> 00:04:19.004
and we were able to use a query parameter.

75
00:04:19.004 --> 00:04:21.008
We're going to take a look at another approach

76
00:04:21.008 --> 00:04:23.000
in the next lesson.

