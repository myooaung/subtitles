WEBVTT
1
00:00:00.005 --> 00:00:02.001
- [Instructor] Within Java EE,

2
00:00:02.001 --> 00:00:04.002
we can create a message-driven bean

3
00:00:04.002 --> 00:00:07.001
to act as a consumer of messages arriving

4
00:00:07.001 --> 00:00:09.009
on an JMS queue or topic.

5
00:00:09.009 --> 00:00:11.005
To show the separation possible

6
00:00:11.005 --> 00:00:13.006
between the consumer and the producer,

7
00:00:13.006 --> 00:00:16.001
we're going to reuse our ejb project

8
00:00:16.001 --> 00:00:19.003
to create the consuming message-driven bean

9
00:00:19.003 --> 00:00:22.003
in a separate project from the producer.

10
00:00:22.003 --> 00:00:25.009
To do that, let's expand our ejb project

11
00:00:25.009 --> 00:00:30.003
and we're going to right click on our com.linkediin package.

12
00:00:30.003 --> 00:00:31.007
And then you'll see

13
00:00:31.007 --> 00:00:34.009
that we can select the Message Driven Bean

14
00:00:34.009 --> 00:00:37.001
right from the first menu.

15
00:00:37.001 --> 00:00:39.001
And this is going to open a dialog

16
00:00:39.001 --> 00:00:42.003
where we can build our JMS consumer.

17
00:00:42.003 --> 00:00:45.007
So let's name the class JmsConsumer

18
00:00:45.007 --> 00:00:49.000
and then you'll notice the destination name

19
00:00:49.000 --> 00:00:52.001
and this where we provide the Gindi name

20
00:00:52.001 --> 00:00:54.008
for our JSM queue

21
00:00:54.008 --> 00:01:05.001
so if you remember, it was at /jsm/queue/HSportsQueue

22
00:01:05.001 --> 00:01:06.002
and you'll want to make sure

23
00:01:06.002 --> 00:01:08.005
that you have the casing correct there.

24
00:01:08.005 --> 00:01:10.003
The S is actually lowercase.

25
00:01:10.003 --> 00:01:12.003
So I'm going to adjust mine.

26
00:01:12.003 --> 00:01:13.007
And then from there, just make sure

27
00:01:13.007 --> 00:01:16.005
you have the JSM checkbox checked

28
00:01:16.005 --> 00:01:19.000
and the Destination type set to Queue.

29
00:01:19.000 --> 00:01:21.002
You'll notice you could also select Topic

30
00:01:21.002 --> 00:01:24.001
if you were working with the topic.

31
00:01:24.001 --> 00:01:26.005
So with those in place, hit Next

32
00:01:26.005 --> 00:01:29.001
and in this dialogue,

33
00:01:29.001 --> 00:01:32.002
we see that we're able to specify interfaces

34
00:01:32.002 --> 00:01:34.001
for our message-driven bean.

35
00:01:34.001 --> 00:01:36.009
We're okay with the message listener interface.

36
00:01:36.009 --> 00:01:40.002
It's going to provide an onMessage method

37
00:01:40.002 --> 00:01:42.008
that we'll provide the implementation for

38
00:01:42.008 --> 00:01:45.008
and then you can see that the transaction type

39
00:01:45.008 --> 00:01:47.005
is set to container.

40
00:01:47.005 --> 00:01:52.006
So it is going to be managed by our Java EE container.

41
00:01:52.006 --> 00:01:54.005
All right, so we went ahead,

42
00:01:54.005 --> 00:01:58.006
created our new JsmConsumer class.

43
00:01:58.006 --> 00:02:01.000
You can see that Eclipse tolling

44
00:02:01.000 --> 00:02:05.000
is going to add the MessageDriven annotation

45
00:02:05.000 --> 00:02:07.000
to that class

46
00:02:07.000 --> 00:02:10.000
and within there, it's setting up the connection

47
00:02:10.000 --> 00:02:11.006
to our queue

48
00:02:11.006 --> 00:02:14.008
and it's also providing the destination type

49
00:02:14.008 --> 00:02:17.005
to indicate we are connecting to a queue.

50
00:02:17.005 --> 00:02:19.007
Let's scroll down within this class

51
00:02:19.007 --> 00:02:22.001
and the part we're really concerned with here

52
00:02:22.001 --> 00:02:25.004
is the onMessage method.

53
00:02:25.004 --> 00:02:28.004
So we need to provide an implementation

54
00:02:28.004 --> 00:02:31.009
of what to do when a message is received

55
00:02:31.009 --> 00:02:34.001
from the JSM queue

56
00:02:34.001 --> 00:02:35.008
and we're going to keep it simple.

57
00:02:35.008 --> 00:02:39.003
We're just going to add some console output

58
00:02:39.003 --> 00:02:45.005
to indicate that we are in the message-driven bean.

59
00:02:45.005 --> 00:02:50.002
And then we can access the message here.

60
00:02:50.002 --> 00:02:53.005
So we can use the message object

61
00:02:53.005 --> 00:02:57.006
that is passed as an argument to this method

62
00:02:57.006 --> 00:03:00.004
and we can get its body

63
00:03:00.004 --> 00:03:02.006
and here we can specify that the body

64
00:03:02.006 --> 00:03:04.006
is of type String.

65
00:03:04.006 --> 00:03:06.009
Now, you will notice that we need

66
00:03:06.009 --> 00:03:09.000
to catch some exceptions here

67
00:03:09.000 --> 00:03:10.006
that could be generated.

68
00:03:10.006 --> 00:03:13.000
There could be a JSM exception

69
00:03:13.000 --> 00:03:17.003
if there were issues getting that message off of the queue.

70
00:03:17.003 --> 00:03:19.005
So let's go ahead, we can format our class

71
00:03:19.005 --> 00:03:21.008
to clean things up.

72
00:03:21.008 --> 00:03:25.005
And now we're ready to run an example.

73
00:03:25.005 --> 00:03:27.006
So you'll remember if we take a look

74
00:03:27.006 --> 00:03:32.004
at our service that we're going to be creating a message

75
00:03:32.004 --> 00:03:36.003
on the queue any time we create a new item

76
00:03:36.003 --> 00:03:40.005
because we injected our service into the backing bean

77
00:03:40.005 --> 00:03:43.001
for our form and any time we create a new item,

78
00:03:43.001 --> 00:03:45.001
we're going to pass its name.

79
00:03:45.001 --> 00:03:46.005
So let's go ahead

80
00:03:46.005 --> 00:03:50.002
and we can start our application.

81
00:03:50.002 --> 00:03:53.003
And we're going to keep an eye on the console here

82
00:03:53.003 --> 00:03:57.009
because that's where our output's going to be placed.

83
00:03:57.009 --> 00:04:02.007
And we're going to build another product

84
00:04:02.007 --> 00:04:05.004
within our inventory

85
00:04:05.004 --> 00:04:08.003
so let's go ahead, we'll create some mittens this time.

86
00:04:08.003 --> 00:04:10.007
They're supplied by CompanyA

87
00:04:10.007 --> 00:04:14.004
and we'll say they're coming on the 20th of October

88
00:04:14.004 --> 00:04:17.005
and then we'll say that they are great mittens.

89
00:04:17.005 --> 00:04:20.000
Okay, so let's keep an eye on our console here

90
00:04:20.000 --> 00:04:21.005
as we submit that.

91
00:04:21.005 --> 00:04:26.009
There we can see that the new product was created

92
00:04:26.009 --> 00:04:28.008
and if we take a look,

93
00:04:28.008 --> 00:04:32.003
you can see the output from our JSM Consumer

94
00:04:32.003 --> 00:04:34.008
and it was able to receive the message sent

95
00:04:34.008 --> 00:04:38.001
by the producer and we got that text message

96
00:04:38.001 --> 00:04:40.004
and printed out the name of our item.

97
00:04:40.004 --> 00:04:45.000
So that was a look at using JMS within Java EE.

98
00:04:45.000 --> 00:04:46.007
It's very useful for messaging

99
00:04:46.007 --> 00:04:49.008
between applications and with all the tolling

100
00:04:49.008 --> 00:04:52.000
in Eclipse, it's pretty easy to set up.

