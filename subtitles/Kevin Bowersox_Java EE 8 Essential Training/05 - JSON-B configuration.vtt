WEBVTT
1
00:00:00.005 --> 00:00:02.005
- [Instructor] In this lesson, we're going to take a look

2
00:00:02.005 --> 00:00:06.004
at how we can provide configuration to JSON-B

3
00:00:06.004 --> 00:00:09.008
to control its behavior when it's serializing

4
00:00:09.008 --> 00:00:14.009
and deserializing from JSON to Java.

5
00:00:14.009 --> 00:00:19.009
So, we're going to get started within the order endpoint.

6
00:00:19.009 --> 00:00:26.007
And what we're going to do is use the JsonbConfig object

7
00:00:26.007 --> 00:00:29.003
and we'll just call it config,

8
00:00:29.003 --> 00:00:33.003
and there's the new operator and the constructor

9
00:00:33.003 --> 00:00:35.006
to create this object.

10
00:00:35.006 --> 00:00:38.004
And now we have a configuration object

11
00:00:38.004 --> 00:00:42.008
that we can use to provide all sorts of configuration

12
00:00:42.008 --> 00:00:47.000
to JSON-B regarding how we would like it to behave.

13
00:00:47.000 --> 00:00:49.004
So, you can see quite a few configurations here

14
00:00:49.004 --> 00:00:53.001
that we can set, we're just going to go ahead

15
00:00:53.001 --> 00:00:57.001
and set the with formatting option,

16
00:00:57.001 --> 00:00:59.001
and we'll set that to true,

17
00:00:59.001 --> 00:01:02.003
and that's going to cause it to pretty-print our JSON.

18
00:01:02.003 --> 00:01:05.008
So, we will get some new lines in there

19
00:01:05.008 --> 00:01:07.006
and it will be easier to read.

20
00:01:07.006 --> 00:01:11.001
And then all we need to do is pass that configuration

21
00:01:11.001 --> 00:01:14.006
into our JSON builders create method.

22
00:01:14.006 --> 00:01:18.009
And it will be applied when we serialize our JSON.

23
00:01:18.009 --> 00:01:20.009
The other thing I'm going to do is,

24
00:01:20.009 --> 00:01:25.005
I'm going to uppercase our JSON string

25
00:01:25.005 --> 00:01:30.002
that we are sending to our JMS queue.

26
00:01:30.002 --> 00:01:34.003
So, typically that would cause an issue,

27
00:01:34.003 --> 00:01:37.006
but what we can do over in the JMS consumer

28
00:01:37.006 --> 00:01:40.003
is we can provide it some configuration

29
00:01:40.003 --> 00:01:44.000
so, once again, we're going to be using the

30
00:01:44.000 --> 00:01:48.009
JsonbConfig object, and I'll name it config,

31
00:01:48.009 --> 00:01:52.002
and then we'll use the new operator

32
00:01:52.002 --> 00:01:56.008
as well as the constructor to create an instance

33
00:01:56.008 --> 00:02:00.001
of the JSON-B configuration object,

34
00:02:00.001 --> 00:02:05.000
and then we can set the case sensitivity of JSON-B

35
00:02:05.000 --> 00:02:09.007
by using the width property naming strategy.

36
00:02:09.007 --> 00:02:15.006
So here we're able to define a strategy that JSON-B will use

37
00:02:15.006 --> 00:02:21.009
when it is matching the properties and the field names.

38
00:02:21.009 --> 00:02:24.008
In our case, we're just going to use

39
00:02:24.008 --> 00:02:30.003
the case insensitive configuration

40
00:02:30.003 --> 00:02:33.004
so it will not matter that we uppercased

41
00:02:33.004 --> 00:02:40.005
our entire JSON string over on our JMS producer.

42
00:02:40.005 --> 00:02:43.007
And then we just need to make sure that we pass

43
00:02:43.007 --> 00:02:47.008
that configuration object into our JSON builder

44
00:02:47.008 --> 00:02:50.000
so that it applies.

45
00:02:50.000 --> 00:02:53.004
Okay, with that in place, let's go ahead.

46
00:02:53.004 --> 00:02:56.003
We can start up our server,

47
00:02:56.003 --> 00:02:59.003
and just run through an example here.

48
00:02:59.003 --> 00:03:01.005
There we see the server starting,

49
00:03:01.005 --> 00:03:05.001
we'll get our PowerShell script ready.

50
00:03:05.001 --> 00:03:07.008
Let's clear our consol.

51
00:03:07.008 --> 00:03:11.009
And then we'll go ahead, run our PowerShell script.

52
00:03:11.009 --> 00:03:17.002
And there you can see that we did get our JSON printed out.

53
00:03:17.002 --> 00:03:21.003
It is using the formatting and everything's in uppercase.

54
00:03:21.003 --> 00:03:24.005
And you notice the JMS consumer

55
00:03:24.005 --> 00:03:27.005
was able to conceive that JSON

56
00:03:27.005 --> 00:03:30.009
which was all uppercased and it didn't care

57
00:03:30.009 --> 00:03:32.009
about the case sensitivity

58
00:03:32.009 --> 00:03:36.006
when it performed the matching and the deserialization.

59
00:03:36.006 --> 00:03:39.002
Okay, so just a look at how we can provide

60
00:03:39.002 --> 00:03:41.006
some configuration to JSON-B.

61
00:03:41.006 --> 00:03:42.006
Take a look at the docs,

62
00:03:42.006 --> 00:03:46.000
a lot of ways we can customize it's behavior.

