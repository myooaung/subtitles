WEBVTT
1
00:00:01.004 --> 00:00:04.000
- [Instructor] The Java API for JSON binding,

2
00:00:04.000 --> 00:00:05.006
known as JSON-B,

3
00:00:05.006 --> 00:00:10.005
is an API for converting Java objects to and from JSON.

4
00:00:10.005 --> 00:00:13.000
It helps Java developers working with JSON

5
00:00:13.000 --> 00:00:16.008
in their applications to be quickly able to convert back

6
00:00:16.008 --> 00:00:20.001
and forth from JSON to POJOs.

7
00:00:20.001 --> 00:00:23.008
JSON-B is a very focused, yet powerful API

8
00:00:23.008 --> 00:00:27.001
that simplifies working with JSON for Java EE developers.

9
00:00:27.001 --> 00:00:32.001
The API allows Java objects to be easily serialized

10
00:00:32.001 --> 00:00:34.001
into a JSON string.

11
00:00:34.001 --> 00:00:37.003
Additionally, the API allows JSON strings

12
00:00:37.003 --> 00:00:40.007
to be deserialized into a Java object.

13
00:00:40.007 --> 00:00:44.001
It performs these conversions by mapping JSON properties

14
00:00:44.001 --> 00:00:47.000
to Java fields and then converting them based

15
00:00:47.000 --> 00:00:48.009
upon the data type.

16
00:00:48.009 --> 00:00:51.006
Within the API is a set of annotations

17
00:00:51.006 --> 00:00:54.005
that allow developers to customize the mappings

18
00:00:54.005 --> 00:00:57.000
to meet the requirements.

19
00:00:57.000 --> 00:01:00.008
So when we think about serialization and deserialization,

20
00:01:00.008 --> 00:01:02.004
this is what it looks like.

21
00:01:02.004 --> 00:01:04.005
We have a Java object with fields on the left

22
00:01:04.005 --> 00:01:08.006
and a JSON object with properties on the right.

23
00:01:08.006 --> 00:01:11.000
You will notice the correlation between the field

24
00:01:11.000 --> 00:01:12.001
and property names,

25
00:01:12.001 --> 00:01:16.000
which is how JSON-B does the translation.

26
00:01:16.000 --> 00:01:17.008
If subtle differences exist

27
00:01:17.008 --> 00:01:20.008
or a different JSON representation is preferred,

28
00:01:20.008 --> 00:01:23.002
JSON-B provides a set of annotations

29
00:01:23.002 --> 00:01:25.003
to customize the mappings.

30
00:01:25.003 --> 00:01:29.001
JSON-B supports mapping for a wide array of types

31
00:01:29.001 --> 00:01:30.007
found in Java.

32
00:01:30.007 --> 00:01:33.005
Its coverage includes basic primitive types,

33
00:01:33.005 --> 00:01:36.004
custom POJOs, dates, classes,

34
00:01:36.004 --> 00:01:39.008
collections, arrays, and enumerations.

35
00:01:39.008 --> 00:01:43.001
Within JSON-B, we are able to customize a large number

36
00:01:43.001 --> 00:01:47.001
of the mapping configurations to support special situations.

37
00:01:47.001 --> 00:01:49.007
Primarily using an annotation-based approach,

38
00:01:49.007 --> 00:01:52.006
we are able to change property names, orders,

39
00:01:52.006 --> 00:01:55.009
and account for the absence of a property.

40
00:01:55.009 --> 00:01:57.009
Additionally, the annotations allow us

41
00:01:57.009 --> 00:02:00.005
to provide mapping strategies for fields,

42
00:02:00.005 --> 00:02:02.007
such as numerics or dates

43
00:02:02.007 --> 00:02:06.000
that may have slightly different formats in JSON.

44
00:02:06.000 --> 00:02:09.003
We'll see JSON-B in action in the upcoming lessons

45
00:02:09.003 --> 00:02:12.000
and get hands-on experience working with the API.

