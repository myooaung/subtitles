WEBVTT
1
00:00:00.005 --> 00:00:03.005
- [Instructor] CDI provides support for factory classes

2
00:00:03.005 --> 00:00:06.000
that grant developers greater control over

3
00:00:06.000 --> 00:00:08.007
the instantiation of beans.

4
00:00:08.007 --> 00:00:12.003
This support is accomplished using the Produces annotation,

5
00:00:12.003 --> 00:00:15.007
which allows us to create methods that act as a source

6
00:00:15.007 --> 00:00:20.005
of objects that can be injected by the CDI container.

7
00:00:20.005 --> 00:00:23.003
This maybe necessary in circumstances where

8
00:00:23.003 --> 00:00:27.005
a bean type needs to be determined dynamically at run time,

9
00:00:27.005 --> 00:00:32.004
or when an object requires special instantiation logic.

10
00:00:32.004 --> 00:00:35.005
Let's take a look at how to use the Produces annotation

11
00:00:35.005 --> 00:00:37.008
to handle these situations.

12
00:00:37.008 --> 00:00:40.004
To do that, we're going to create a new class

13
00:00:40.004 --> 00:00:43.003
within our JSF project,

14
00:00:43.003 --> 00:00:45.003
so we'll just open the new dialogue,

15
00:00:45.003 --> 00:00:49.008
select "Class," and then we're going to name this class,

16
00:00:49.008 --> 00:00:53.000
"The inventory service factory."

17
00:00:53.000 --> 00:00:54.009
So we're going to be using a factory

18
00:00:54.009 --> 00:01:00.001
to create an inventory service as opposed to allowing

19
00:01:00.001 --> 00:01:05.007
the CDI container just to instantiate our annotated classes.

20
00:01:05.007 --> 00:01:08.005
We'll go ahead and create the new class,

21
00:01:08.005 --> 00:01:12.007
and then within the class, we're going to create a method

22
00:01:12.007 --> 00:01:16.000
that returns an inventory service,

23
00:01:16.000 --> 00:01:20.000
and I'm going to name this method, "createInstance."

24
00:01:20.000 --> 00:01:24.007
Okay, now within that method, we need to add some logic.

25
00:01:24.007 --> 00:01:26.006
And we'll have a little bit of fun with this.

26
00:01:26.006 --> 00:01:30.001
So, we're going to create a variable

27
00:01:30.001 --> 00:01:32.001
of type inventory service,

28
00:01:32.001 --> 00:01:35.003
and we'll name it "inventoryService."

29
00:01:35.003 --> 00:01:39.001
And I'm just going to assign that to null first.

30
00:01:39.001 --> 00:01:40.009
And then what we're going to do,

31
00:01:40.009 --> 00:01:48.001
is we're going to take a peek at the current date and time,

32
00:01:48.001 --> 00:01:52.002
and we'll get the hour of the day,

33
00:01:52.002 --> 00:01:56.008
and if it's greater than 12, so if we're past noon,

34
00:01:56.008 --> 00:01:59.008
then we're going to use one type of our service,

35
00:01:59.008 --> 00:02:03.004
and if not, we're going to use another type of our service.

36
00:02:03.004 --> 00:02:09.000
So, let's go ahead and if we're after noon, we're going

37
00:02:09.000 --> 00:02:13.002
to use a local inventory service,

38
00:02:13.002 --> 00:02:18.000
and if we're prior to noon, we're going to assign

39
00:02:18.000 --> 00:02:21.000
our inventory service to an instance of

40
00:02:21.000 --> 00:02:24.009
a remote inventory service.

41
00:02:24.009 --> 00:02:27.005
And then what we'll do is within this method,

42
00:02:27.005 --> 00:02:31.000
we can return that inventory service,

43
00:02:31.000 --> 00:02:34.002
and there's our factory implementation,

44
00:02:34.002 --> 00:02:39.006
and then it's important that we add the Produces annotation,

45
00:02:39.006 --> 00:02:42.008
and this is that signal to CDI that,

46
00:02:42.008 --> 00:02:45.003
"Hey, we have this method that is going

47
00:02:45.003 --> 00:02:49.006
"to dynamically create a bean."

48
00:02:49.006 --> 00:02:53.001
Now right now, our application would not run

49
00:02:53.001 --> 00:02:56.008
because we're going to have some ambiguous types,

50
00:02:56.008 --> 00:03:01.007
and that's because we still have our local inventory service

51
00:03:01.007 --> 00:03:04.008
and our remote inventory service annotated

52
00:03:04.008 --> 00:03:07.003
with some bean-defining annotations there.

53
00:03:07.003 --> 00:03:11.005
So what we're going to do is add the alternative annotation,

54
00:03:11.005 --> 00:03:17.006
and basically this annotation instructs CDI not to use

55
00:03:17.006 --> 00:03:23.000
this bean instance unless we explicitly declare it.

56
00:03:23.000 --> 00:03:25.001
So it's a way to remove

57
00:03:25.001 --> 00:03:28.006
a bean from being considered for injection.

58
00:03:28.006 --> 00:03:30.003
So let's go ahead,

59
00:03:30.003 --> 00:03:35.002
apply this to remote inventory service as well.

60
00:03:35.002 --> 00:03:38.005
And then we're going to need to navigate

61
00:03:38.005 --> 00:03:43.006
to our catalog item form bean, and we need to remove

62
00:03:43.006 --> 00:03:50.000
the custom qualifier we placed on the injection point.

63
00:03:50.000 --> 00:03:51.003
And then let's go back,

64
00:03:51.003 --> 00:03:54.001
we need to import to alternative annotation into

65
00:03:54.001 --> 00:03:56.004
our remote inventory service.

66
00:03:56.004 --> 00:03:58.002
So at this point, we are positioned

67
00:03:58.002 --> 00:04:00.009
to use our producer method in order

68
00:04:00.009 --> 00:04:05.007
to dynamically instantiate our inventory service bean

69
00:04:05.007 --> 00:04:12.001
and inject it within to our catalog item form bean.

70
00:04:12.001 --> 00:04:17.000
So let's go to our project and we'll right-click on it,

71
00:04:17.000 --> 00:04:20.008
go to "Run As," and then run on the server,

72
00:04:20.008 --> 00:04:25.000
and we can watch it start up.

73
00:04:25.000 --> 00:04:28.005
Okay, so it appears that our application has started.

74
00:04:28.005 --> 00:04:30.008
Let's maximize our console so we can get a good look

75
00:04:30.008 --> 00:04:32.002
at the output.

76
00:04:32.002 --> 00:04:35.009
And then I'm going to navigate to the application,

77
00:04:35.009 --> 00:04:38.009
and once again we're just going to select

78
00:04:38.009 --> 00:04:45.002
a particular item to enter.

79
00:04:45.002 --> 00:04:47.009
And then we're going to submit the form,

80
00:04:47.009 --> 00:04:52.002
and here you can see that the local inventory service

81
00:04:52.002 --> 00:04:56.000
was selected, and that's because it is after noon

82
00:04:56.000 --> 00:04:59.006
where I'm creating this course.

83
00:04:59.006 --> 00:05:01.001
So if we were before noon,

84
00:05:01.001 --> 00:05:05.001
it would dynamically select the remote inventory service,

85
00:05:05.001 --> 00:05:06.004
so that's a look at how we

86
00:05:06.004 --> 00:05:10.001
can use producer methods within CDI in order

87
00:05:10.001 --> 00:05:15.003
to have some flexibility in how our beans are instantiated

88
00:05:15.003 --> 00:05:20.000
and injected within our Java EE applications.

