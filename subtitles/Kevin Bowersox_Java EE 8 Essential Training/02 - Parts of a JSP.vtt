WEBVTT
1
00:00:00.005 --> 00:00:02.004
- [Instructor] Within a JSP page there are

2
00:00:02.004 --> 00:00:05.008
certain constructs used to build each page.

3
00:00:05.008 --> 00:00:07.009
Let's take a closer look at them.

4
00:00:07.009 --> 00:00:10.000
This table outlines the constructs

5
00:00:10.000 --> 00:00:14.003
found within JSP pages, some of which are used frequently

6
00:00:14.003 --> 00:00:16.006
and others that should be avoided.

7
00:00:16.006 --> 00:00:21.000
You'll notice that I've provided both the JSP page syntax

8
00:00:21.000 --> 00:00:24.007
as well as the XML document syntax.

9
00:00:24.007 --> 00:00:27.008
When building a JSP page you will use directives

10
00:00:27.008 --> 00:00:31.003
on almost every JSP page because they provide

11
00:00:31.003 --> 00:00:35.005
instructions to the JSP container on different attributes

12
00:00:35.005 --> 00:00:38.006
about the page, where to insert content

13
00:00:38.006 --> 00:00:41.004
and what tag libraries to include.

14
00:00:41.004 --> 00:00:44.005
You will also frequently use the expression language

15
00:00:44.005 --> 00:00:50.003
to bind to model data within JSP to display dynamic content.

16
00:00:50.003 --> 00:00:53.002
The remaining constructs are sort of relics from the past

17
00:00:53.002 --> 00:00:57.000
when application logic was embedded within JSPs

18
00:00:57.000 --> 00:00:59.007
and should for the most part be avoided.

19
00:00:59.007 --> 00:01:02.000
If you find yourself using these directives,

20
00:01:02.000 --> 00:01:05.009
you are most likely deviating from the MVC pattern.

21
00:01:05.009 --> 00:01:10.005
Here is a JSP example that uses each of the JSP constructs

22
00:01:10.005 --> 00:01:14.004
we discussed to print the time to the page.

23
00:01:14.004 --> 00:01:16.002
You will notice at the top of the file

24
00:01:16.002 --> 00:01:19.006
we have the page directive, which is mandatory.

25
00:01:19.006 --> 00:01:22.000
It indicates that our page is using Java

26
00:01:22.000 --> 00:01:24.004
and specifies the page in coding.

27
00:01:24.004 --> 00:01:26.009
Additionally, we use a tag directive

28
00:01:26.009 --> 00:01:31.006
to include the Java standard tag library, or JSTL.

29
00:01:31.006 --> 00:01:34.004
This provides useful tags for things like iteration

30
00:01:34.004 --> 00:01:37.005
or conditional display of page elements.

31
00:01:37.005 --> 00:01:41.003
Then we use declarations, scriplets, expressions,

32
00:01:41.003 --> 00:01:43.009
expression language, and the expression language

33
00:01:43.009 --> 00:01:48.009
with the JSTL tag to write content dynamically to the page.

34
00:01:48.009 --> 00:01:52.001
To adhere to MVC we should avoid embedding Java code

35
00:01:52.001 --> 00:01:53.003
directly in the page.

36
00:01:53.003 --> 00:01:56.000
It's not necessary and it really clutters it up.

37
00:01:56.000 --> 00:02:00.001
So we really want to stress that you should avoid scriplets,

38
00:02:00.001 --> 00:02:02.007
expressions, and declarations.

39
00:02:02.007 --> 00:02:04.005
But that raises another question.

40
00:02:04.005 --> 00:02:08.002
Where does the JSP get access to that date time attribute

41
00:02:08.002 --> 00:02:10.009
that we're using in the expression language.

42
00:02:10.009 --> 00:02:12.009
Let's take a quick look.

43
00:02:12.009 --> 00:02:15.008
The data came from a servlet that set

44
00:02:15.008 --> 00:02:19.001
an attribute on the request.

45
00:02:19.001 --> 00:02:22.007
Request attributes are a form of server side storage

46
00:02:22.007 --> 00:02:24.008
for a particular request.

47
00:02:24.008 --> 00:02:28.002
They allow data to be attached to the request

48
00:02:28.002 --> 00:02:33.002
for use by other components on the server such as JSPs.

49
00:02:33.002 --> 00:02:35.008
Additionally, you will see that we use an object

50
00:02:35.008 --> 00:02:39.002
of type RequestDispatcher to forward request

51
00:02:39.002 --> 00:02:43.006
processing execution from the servlet to the JSP page.

52
00:02:43.006 --> 00:02:48.005
So it's a way to achieve navigation from a servlet to a JSP.

53
00:02:48.005 --> 00:02:52.009
So that is how we pass data from a servlet to a JSP.

54
00:02:52.009 --> 00:02:55.007
However, there are a few other pieces of data

55
00:02:55.007 --> 00:03:01.002
a JSP has access to known as implicit objects.

56
00:03:01.002 --> 00:03:04.001
We'll take a look quickly at the implicit objects.

57
00:03:04.001 --> 00:03:06.003
They're objects that you can reference

58
00:03:06.003 --> 00:03:10.003
using the expression language directly in a JSP page

59
00:03:10.003 --> 00:03:12.009
without actually declaring them.

60
00:03:12.009 --> 00:03:14.008
You can see the objects available

61
00:03:14.008 --> 00:03:16.003
and their descriptions.

62
00:03:16.003 --> 00:03:18.008
I'll just point out that the request, session,

63
00:03:18.008 --> 00:03:22.002
and page context are the most widely used

64
00:03:22.002 --> 00:03:26.004
implicit objects when we're building our JSP pages

65
00:03:26.004 --> 00:03:29.003
because they provide access to some of the most

66
00:03:29.003 --> 00:03:34.001
common data we need when displaying dynamic content.

67
00:03:34.001 --> 00:03:36.008
So that's an overview of the parts of a JSP.

68
00:03:36.008 --> 00:03:40.000
Let's get hands on with the technology.

