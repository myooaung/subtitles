WEBVTT
1
00:00:00.005 --> 00:00:01.004
- [Narrator] In this lesson,

2
00:00:01.004 --> 00:00:05.000
we're going to build and configure a JSON Writer,

3
00:00:05.000 --> 00:00:08.000
and then use that JSON Writer to write JSON

4
00:00:08.000 --> 00:00:10.002
to an output source.

5
00:00:10.002 --> 00:00:12.002
So, to get started we're going to work

6
00:00:12.002 --> 00:00:15.004
within our order resource, once again.

7
00:00:15.004 --> 00:00:18.005
And this time, we're going to start out

8
00:00:18.005 --> 00:00:20.005
by building a Map.

9
00:00:20.005 --> 00:00:24.000
This map is going to contain configuration properties

10
00:00:24.000 --> 00:00:26.008
for our JSON Writer.

11
00:00:26.008 --> 00:00:28.009
It has two generic arguments.

12
00:00:28.009 --> 00:00:30.004
The first is a String,

13
00:00:30.004 --> 00:00:32.002
which will be the key for the Map;

14
00:00:32.002 --> 00:00:33.007
and, the second is a Boolean,

15
00:00:33.007 --> 00:00:35.008
which is the value for the Map.

16
00:00:35.008 --> 00:00:38.009
I'm going to name this Map configMap,

17
00:00:38.009 --> 00:00:43.000
and then I'm going to instantiate it as a new HashMap.

18
00:00:43.000 --> 00:00:45.006
Within the configMap, we're going to go ahead

19
00:00:45.006 --> 00:00:48.004
and add a property, using the PUT method,

20
00:00:48.004 --> 00:00:50.003
and that property is going to be found

21
00:00:50.003 --> 00:00:53.005
on our JSON Generator Object,

22
00:00:53.005 --> 00:00:55.008
and it's the Pretty Printing property.

23
00:00:55.008 --> 00:00:58.007
And this is going to allow us to format

24
00:00:58.007 --> 00:01:03.002
the JSON output that is written by the JSON Writer.

25
00:01:03.002 --> 00:01:05.006
So we'll just go ahead and set that to true.

26
00:01:05.006 --> 00:01:10.008
And then, we're going to start building our JSON Writer.

27
00:01:10.008 --> 00:01:12.007
In order to build the JSON Writer,

28
00:01:12.007 --> 00:01:16.008
we're going to use a JSON Writer Factory.

29
00:01:16.008 --> 00:01:18.001
And we're just going to name

30
00:01:18.001 --> 00:01:21.007
our JSON Writer Factory, JsonWriterFactory.

31
00:01:21.007 --> 00:01:26.002
And in order to construct it, we use the JSON Object,

32
00:01:26.002 --> 00:01:30.000
and it's create Writer Factory method.

33
00:01:30.000 --> 00:01:32.006
You'll notice that that method accepts

34
00:01:32.006 --> 00:01:35.004
a Map of configuration items.

35
00:01:35.004 --> 00:01:39.000
So we're going to go ahead and pass in our configMap,

36
00:01:39.000 --> 00:01:41.008
and then we have a Writer Factory.

37
00:01:41.008 --> 00:01:43.002
Now, the next thing we'll need to do

38
00:01:43.002 --> 00:01:46.002
is create an output source for our Writer.

39
00:01:46.002 --> 00:01:49.002
And we're just going to use a String Writer.

40
00:01:49.002 --> 00:01:52.007
So I'm going to go ahead and make a String Writer,

41
00:01:52.007 --> 00:01:55.001
and we'll instantiate that using

42
00:01:55.001 --> 00:01:57.009
the new operator and the constructor.

43
00:01:57.009 --> 00:02:01.003
And then, from here we can start building our JSON Writer.

44
00:02:01.003 --> 00:02:05.006
The JSON Writer does implement the auto-closable interface,

45
00:02:05.006 --> 00:02:09.005
so we will surround it within a Try block,

46
00:02:09.005 --> 00:02:12.003
that will cause the Writer to be closed

47
00:02:12.003 --> 00:02:15.002
once the block is completed.

48
00:02:15.002 --> 00:02:18.003
Once we've established a JSON Writer Object,

49
00:02:18.003 --> 00:02:20.000
we'll use the Factory.

50
00:02:20.000 --> 00:02:24.009
And the Factory has a Create Writer method on it.

51
00:02:24.009 --> 00:02:28.006
And that accepts our output source,

52
00:02:28.006 --> 00:02:31.002
which is going to be our String Writer.

53
00:02:31.002 --> 00:02:33.006
And then from there, we'll add the body

54
00:02:33.006 --> 00:02:36.006
to the Try block there, and from here

55
00:02:36.006 --> 00:02:41.008
we can use the Writer to write the Object.

56
00:02:41.008 --> 00:02:45.007
And we'll pass in the JSON Object

57
00:02:45.007 --> 00:02:48.005
that we previously created.

58
00:02:48.005 --> 00:02:51.001
And now that it is within the Writer,

59
00:02:51.001 --> 00:02:57.000
we can use our String Writer to output our JSON.

60
00:02:57.000 --> 00:02:59.007
So, I'm just going to write it to the console,

61
00:02:59.007 --> 00:03:05.008
and then we're also going to send that to our JMS queue,

62
00:03:05.008 --> 00:03:07.006
so I'll pull that method up.

63
00:03:07.006 --> 00:03:10.000
We'll just clean things up here a little.

64
00:03:10.000 --> 00:03:13.003
And we can now grab our String Writer,

65
00:03:13.003 --> 00:03:18.003
and then use the toString method to write out our JSON.

66
00:03:18.003 --> 00:03:20.006
Okay, with everything in place let's go ahead,

67
00:03:20.006 --> 00:03:22.009
we'll save the project,

68
00:03:22.009 --> 00:03:25.006
then we'll start our application.

69
00:03:25.006 --> 00:03:27.005
We'll keep an eye on the console here

70
00:03:27.005 --> 00:03:31.000
as the application starts.

71
00:03:31.000 --> 00:03:33.008
And then we're going to use our PowerShell command

72
00:03:33.008 --> 00:03:37.003
to send an HTTP message

73
00:03:37.003 --> 00:03:41.004
to our JAX-RS API.

74
00:03:41.004 --> 00:03:46.004
And now if we inspect our console output,

75
00:03:46.004 --> 00:03:50.007
we can see our JSON, and it has been printed

76
00:03:50.007 --> 00:03:53.008
using the Pretty Printing that we configured,

77
00:03:53.008 --> 00:03:57.007
and it was passed over to the JMS consumer.

78
00:03:57.007 --> 00:04:01.000
So that concludes our work with the JSON Writer

79
00:04:01.000 --> 00:04:04.000
and the JSON-P Object Model API.

