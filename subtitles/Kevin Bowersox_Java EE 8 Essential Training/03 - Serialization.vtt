WEBVTT
1
00:00:00.005 --> 00:00:02.003
- [Narrator] In this lesson we're going to see

2
00:00:02.003 --> 00:00:07.009
how we can use Json B to serialize a java object

3
00:00:07.009 --> 00:00:10.009
to its Json representation.

4
00:00:10.009 --> 00:00:14.007
So we're going to be working within our order resource,

5
00:00:14.007 --> 00:00:18.003
which is a Jax RS resource and on that resource

6
00:00:18.003 --> 00:00:22.003
we have a resource method named place order

7
00:00:22.003 --> 00:00:26.009
that accepts a post and that post expects

8
00:00:26.009 --> 00:00:31.001
a Json representation of an order object.

9
00:00:31.001 --> 00:00:33.008
So what's going to happen here is Jax RS

10
00:00:33.008 --> 00:00:38.000
is actually going to de-serialize the Json sent

11
00:00:38.000 --> 00:00:44.000
in the http request to the order java type.

12
00:00:44.000 --> 00:00:47.004
And then we're just going to kind of reverse that process

13
00:00:47.004 --> 00:00:52.008
with Json B and we'll serialize the order object

14
00:00:52.008 --> 00:00:55.007
to it's Json representation.

15
00:00:55.007 --> 00:01:00.002
So I'm going to go ahead and create a Json B object,

16
00:01:00.002 --> 00:01:02.003
so we can import that type,

17
00:01:02.003 --> 00:01:08.002
and then we create a Json B object using a Json builder.

18
00:01:08.002 --> 00:01:12.000
So you'll find that type and on it is a create method

19
00:01:12.000 --> 00:01:16.000
that creates a instance of Json B.

20
00:01:16.000 --> 00:01:20.009
Now once we have that Json B object, it is really simple.

21
00:01:20.009 --> 00:01:24.005
The Json B object has a two Json method,

22
00:01:24.005 --> 00:01:28.002
and all we need to do is pass in our java object

23
00:01:28.002 --> 00:01:31.005
and it will serialize that object

24
00:01:31.005 --> 00:01:34.007
to its Json representation.

25
00:01:34.007 --> 00:01:39.000
So I'm going to assign that result to a string named Json,

26
00:01:39.000 --> 00:01:42.002
and let's just kind of be clear in our terminology,

27
00:01:42.002 --> 00:01:44.001
when we are serializing,

28
00:01:44.001 --> 00:01:49.009
we are going from a java object to its Json representation.

29
00:01:49.009 --> 00:01:54.003
And once we have that in a string we can go ahead

30
00:01:54.003 --> 00:01:58.007
and let's just print it out to the console so we can see it,

31
00:01:58.007 --> 00:02:02.007
and then we're going to make use of our JMS Service.

32
00:02:02.007 --> 00:02:05.004
So you'll remember that our JMS Service

33
00:02:05.004 --> 00:02:11.000
is able to write a JMS message onto a JMS cue.

34
00:02:11.000 --> 00:02:14.009
So we're going to go ahead and send that message

35
00:02:14.009 --> 00:02:19.001
over to our cue using the send method,

36
00:02:19.001 --> 00:02:22.001
and then we'll pass in our Json string.

37
00:02:22.001 --> 00:02:24.005
And then what we'll do in later lessons,

38
00:02:24.005 --> 00:02:27.002
we're going to receive that message

39
00:02:27.002 --> 00:02:33.000
via a JMS consumer that is listening on that cue,

40
00:02:33.000 --> 00:02:36.007
and that consumer resides within our EJB project.

41
00:02:36.007 --> 00:02:41.003
So we'll use our Jax RS project for serialization,

42
00:02:41.003 --> 00:02:45.003
and then we'll use our EJB project for de-serializing.

43
00:02:45.003 --> 00:02:48.001
And de-serializing is when you go from

44
00:02:48.001 --> 00:02:52.005
a Json representation to a java object.

45
00:02:52.005 --> 00:02:54.006
Now one thing I want to point out here,

46
00:02:54.006 --> 00:02:58.004
if we take a look at our order object,

47
00:02:58.004 --> 00:03:01.008
you'll notice that we have the item's field,

48
00:03:01.008 --> 00:03:04.007
and then if we look at the corresponding Json,

49
00:03:04.007 --> 00:03:08.007
you'll notice that we have the inventory items property.

50
00:03:08.007 --> 00:03:13.002
So we have a mismatch between our Json and our java object.

51
00:03:13.002 --> 00:03:16.001
The properties and the fields don't line up.

52
00:03:16.001 --> 00:03:19.000
Json B provides us with a mechanism

53
00:03:19.000 --> 00:03:23.000
that we can use to easily resolve this.

54
00:03:23.000 --> 00:03:25.002
That mechanism that we can use

55
00:03:25.002 --> 00:03:30.004
is the Json B property annotation.

56
00:03:30.004 --> 00:03:34.002
And what we can do is then specify the name

57
00:03:34.002 --> 00:03:37.004
of the Json property that we expect.

58
00:03:37.004 --> 00:03:41.000
In this case it's going to be inventory items.

59
00:03:41.000 --> 00:03:44.003
And you'll notice that I'm placing it on the setter,

60
00:03:44.003 --> 00:03:48.004
so when we place the Json B property annotation

61
00:03:48.004 --> 00:03:50.006
on the set method,

62
00:03:50.006 --> 00:03:53.004
it's only going to impact de-serializations.

63
00:03:53.004 --> 00:03:56.001
So I'm actually instructing Jax RS here

64
00:03:56.001 --> 00:03:59.003
how to de-serialize that Json.

65
00:03:59.003 --> 00:04:03.000
If we were to place it on the get method,

66
00:04:03.000 --> 00:04:06.005
it's only going to impact serialization,

67
00:04:06.005 --> 00:04:09.008
and then if we were to place it on the field level,

68
00:04:09.008 --> 00:04:14.006
it would impact both serialization and de-serialization.

69
00:04:14.006 --> 00:04:16.006
So let's go ahead and save this,

70
00:04:16.006 --> 00:04:20.006
and then we're going to launch our application.

71
00:04:20.006 --> 00:04:25.005
So we'll wait for our console to fire up here, okay.

72
00:04:25.005 --> 00:04:28.009
And let's just split our screen,

73
00:04:28.009 --> 00:04:30.007
and I'm going to clear the console.

74
00:04:30.007 --> 00:04:34.001
And then we can go into our clips workspace,

75
00:04:34.001 --> 00:04:37.001
into the Jax RS project,

76
00:04:37.001 --> 00:04:42.003
and here within the source main resources directory

77
00:04:42.003 --> 00:04:44.005
we're going to find our PowerShow command.

78
00:04:44.005 --> 00:04:48.005
So just right click on the PowerShow command,

79
00:04:48.005 --> 00:04:52.000
and then you can run the test with PowerShow.

80
00:04:52.000 --> 00:04:57.006
So there we can see that PowerShow sent the

81
00:04:57.006 --> 00:05:02.003
http request with our order Json,

82
00:05:02.003 --> 00:05:05.006
and we can see that we were able to receive it,

83
00:05:05.006 --> 00:05:10.004
and we were able to serialize using Json b

84
00:05:10.004 --> 00:05:14.006
to our Json representation of the order.

85
00:05:14.006 --> 00:05:19.002
And you will notice that we were able to resolve

86
00:05:19.002 --> 00:05:23.008
that mismatch between our property and field names.

87
00:05:23.008 --> 00:05:28.001
And then we see it arrive over on the JMS consumer.

88
00:05:28.001 --> 00:05:31.005
All right, so that was a look at serialization with Json b.

89
00:05:31.005 --> 00:05:35.000
Next we'll move on and take a look at de-serialization.

