WEBVTT
1
00:00:00.005 --> 00:00:02.009
- [Instructor] Let's talk in depth about the concept

2
00:00:02.009 --> 00:00:06.008
of entity associations in JPA.

3
00:00:06.008 --> 00:00:09.009
When we build an object model, it's common for the fields

4
00:00:09.009 --> 00:00:12.006
of an object to reference other objects.

5
00:00:12.006 --> 00:00:15.001
For example, an order may contain

6
00:00:15.001 --> 00:00:18.000
a list of objects of type item.

7
00:00:18.000 --> 00:00:21.006
When these objects or entities we need to map

8
00:00:21.006 --> 00:00:25.007
these associations or relationships, which are not extremely

9
00:00:25.007 --> 00:00:28.001
complex but it's more difficult

10
00:00:28.001 --> 00:00:30.007
than simply mapping a table column.

11
00:00:30.007 --> 00:00:33.003
In a relational database, tables are referenced

12
00:00:33.003 --> 00:00:35.008
using a foreign key relationship.

13
00:00:35.008 --> 00:00:39.008
So when we map an association in JPA, we are instructing

14
00:00:39.008 --> 00:00:43.000
the entity manager on how to persist two objects

15
00:00:43.000 --> 00:00:46.001
that have an underlying foreign key relationship

16
00:00:46.001 --> 00:00:49.003
in the database between their tables.

17
00:00:49.003 --> 00:00:50.009
There are several considerations

18
00:00:50.009 --> 00:00:53.002
when mapping an entity association.

19
00:00:53.002 --> 00:00:56.000
First, the cardinality of the relationship

20
00:00:56.000 --> 00:00:57.006
must be determined.

21
00:00:57.006 --> 00:01:01.001
It is critical to identify if the entities are related

22
00:01:01.001 --> 00:01:03.003
through a one-to-one, one-to-many

23
00:01:03.003 --> 00:01:05.003
or many-to-many relationship.

24
00:01:05.003 --> 00:01:08.004
We must also determine if references exist

25
00:01:08.004 --> 00:01:10.007
in one or both objects.

26
00:01:10.007 --> 00:01:13.002
This is known as their direction.

27
00:01:13.002 --> 00:01:17.003
Associations can be one directional, meaning only one entity

28
00:01:17.003 --> 00:01:20.006
has a reference to the other or bidirectional meaning

29
00:01:20.006 --> 00:01:23.007
both entities have relationships to the other.

30
00:01:23.007 --> 00:01:27.003
Another consideration is what happens when a persistent

31
00:01:27.003 --> 00:01:30.006
operation occurs on an entity associated

32
00:01:30.006 --> 00:01:32.004
with another entity.

33
00:01:32.004 --> 00:01:35.009
Does the operation on that entity, let's say an insert,

34
00:01:35.009 --> 00:01:40.009
cascade to all the associated entities within that entity?

35
00:01:40.009 --> 00:01:43.007
This is known as the cascade type.

36
00:01:43.007 --> 00:01:46.008
The same concept applies to queries.

37
00:01:46.008 --> 00:01:50.006
If we retrieve an entity, do we want to immediately retrieve

38
00:01:50.006 --> 00:01:52.004
the associated entities?

39
00:01:52.004 --> 00:01:55.002
Or should we wait to request them from the database

40
00:01:55.002 --> 00:01:56.007
until they are referenced?

41
00:01:56.007 --> 00:02:00.008
These characteristics of an association must be taken

42
00:02:00.008 --> 00:02:04.007
into consideration in order to map them.

43
00:02:04.007 --> 00:02:08.008
Let's analyze this simple one to one unidirectional mapping

44
00:02:08.008 --> 00:02:11.007
which depicts a relationship between two tables,

45
00:02:11.007 --> 00:02:14.007
catalog item and item description.

46
00:02:14.007 --> 00:02:19.003
In this relationship, the catalog item table stores an item

47
00:02:19.003 --> 00:02:21.007
which has a single description

48
00:02:21.007 --> 00:02:24.002
in the item description table.

49
00:02:24.002 --> 00:02:27.005
You will notice the foreign key resides in the catalog item

50
00:02:27.005 --> 00:02:30.004
table which makes it the owner of the relationship.

51
00:02:30.004 --> 00:02:33.007
This determines where we place the join column annotation

52
00:02:33.007 --> 00:02:37.007
which maps the association by identifying the foreign key

53
00:02:37.007 --> 00:02:42.000
used by the entity manager to join the tables.

54
00:02:42.000 --> 00:02:46.000
We apply this annotation on the catalog item object

55
00:02:46.000 --> 00:02:50.001
along with the one-to-one annotation to map the entities.

56
00:02:50.001 --> 00:02:52.007
The one-to-one annotation denotes the fetch

57
00:02:52.007 --> 00:02:55.004
and cascade types as well.

58
00:02:55.004 --> 00:02:57.008
Here is the same association

59
00:02:57.008 --> 00:03:00.005
just in it's bidirectional form.

60
00:03:00.005 --> 00:03:03.007
The relationship becomes bidirectional by adding

61
00:03:03.007 --> 00:03:06.001
the reference to the catalog item

62
00:03:06.001 --> 00:03:08.005
on the item description object.

63
00:03:08.005 --> 00:03:12.006
You will also notice that this reference needs annotated

64
00:03:12.006 --> 00:03:15.006
with the one-to-one annotation which contains

65
00:03:15.006 --> 00:03:17.006
the mapped by element.

66
00:03:17.006 --> 00:03:20.003
That points to the item description field

67
00:03:20.003 --> 00:03:23.006
on the catalog item object.

68
00:03:23.006 --> 00:03:27.008
Here is a look an a unidirectional one-to-many relationship.

69
00:03:27.008 --> 00:03:32.003
You will notice in this association, we apply a one-to-many

70
00:03:32.003 --> 00:03:35.008
annotation to collect the reviews associated

71
00:03:35.008 --> 00:03:37.007
with the catalog item.

72
00:03:37.007 --> 00:03:42.006
This annotation uses the referenced column name element

73
00:03:42.006 --> 00:03:46.004
to map the foreign key in the review table,

74
00:03:46.004 --> 00:03:50.006
building the mapping for the association.

75
00:03:50.006 --> 00:03:54.000
Here is the same relationship modeled as a bidirectional

76
00:03:54.000 --> 00:03:57.005
relationship which causes the join column annotation

77
00:03:57.005 --> 00:04:00.001
to shift to the owning side of the relationship

78
00:04:00.001 --> 00:04:04.004
and the many-to-one annotation to be applied.

79
00:04:04.004 --> 00:04:07.002
Finally, the most complex relationship to map

80
00:04:07.002 --> 00:04:09.007
is a many-to-many, because it sometimes

81
00:04:09.007 --> 00:04:11.007
requires a join table.

82
00:04:11.007 --> 00:04:14.005
We do not create an entity for the join table

83
00:04:14.005 --> 00:04:18.004
but do use the join table annotation to reference the table

84
00:04:18.004 --> 00:04:22.003
and columns used to join the entities.

85
00:04:22.003 --> 00:04:25.008
So that was a look at how entity associations are mapped.

86
00:04:25.008 --> 00:04:30.000
Let's try a hands on lesson to see this concept in action.

