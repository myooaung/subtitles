WEBVTT
1
00:00:00.005 --> 00:00:03.009
- In Java EE 8, JSF 2.3 introduced

2
00:00:03.009 --> 00:00:05.008
direct support for WebSockets

3
00:00:05.008 --> 00:00:08.009
with the introduction of a new WebSocket tag

4
00:00:08.009 --> 00:00:12.005
that works in coordination with the new PushContext.

5
00:00:12.005 --> 00:00:15.004
Let's take a look at how WebSockets can be leveraged

6
00:00:15.004 --> 00:00:18.006
using the Jave EE 8 features.

7
00:00:18.006 --> 00:00:21.005
To demonstrate JSF support for WebSockets,

8
00:00:21.005 --> 00:00:25.004
we're going to rebuild our help chat using JSF components.

9
00:00:25.004 --> 00:00:28.000
You will notice that a help.xhtml page

10
00:00:28.000 --> 00:00:29.009
and an associated backing bean

11
00:00:29.009 --> 00:00:32.009
have been placed within the JSF project.

12
00:00:32.009 --> 00:00:34.007
We'll take a quick look here.

13
00:00:34.007 --> 00:00:36.007
It's pretty much just a mimic

14
00:00:36.007 --> 00:00:39.006
of what we created in our last lesson,

15
00:00:39.006 --> 00:00:42.008
except now we're using JSF components

16
00:00:42.008 --> 00:00:46.007
and we have the bindings established to the backing bean.

17
00:00:46.007 --> 00:00:49.004
So you know, two controls on the form,

18
00:00:49.004 --> 00:00:51.003
a name, and a message text,

19
00:00:51.003 --> 00:00:53.007
which will provide the chat functionality,

20
00:00:53.007 --> 00:00:55.005
and then a submit button.

21
00:00:55.005 --> 00:00:58.009
You'll notice these are all bound to the backing bean,

22
00:00:58.009 --> 00:01:01.001
so there's the string for the message text,

23
00:01:01.001 --> 00:01:03.007
string for the name, and then we have

24
00:01:03.007 --> 00:01:06.008
the send message method.

25
00:01:06.008 --> 00:01:08.001
So let's dive in.

26
00:01:08.001 --> 00:01:09.007
The first thing we need to do

27
00:01:09.007 --> 00:01:15.000
is actually add come configuration to our web.xml file

28
00:01:15.000 --> 00:01:20.000
to enable the WebSocket support within JSF.

29
00:01:20.000 --> 00:01:24.007
So to do that, we are going to create a new context param.

30
00:01:24.007 --> 00:01:28.006
The param name is going to be

31
00:01:28.006 --> 00:01:36.007
javax.faces.ENABLE_WEBSOCKET_ENDPOINT.

32
00:01:36.007 --> 00:01:41.007
Okay, and then the value is simply going to be set to true.

33
00:01:41.007 --> 00:01:44.002
And once that's in place, just go ahead

34
00:01:44.002 --> 00:01:46.005
and save your web.xml file.

35
00:01:46.005 --> 00:01:48.005
Now one thing I will stress here

36
00:01:48.005 --> 00:01:50.008
is make sure that your server is stopped

37
00:01:50.008 --> 00:01:53.002
so these changes will take effect.

38
00:01:53.002 --> 00:01:56.007
There can be some issues if your server's already running.

39
00:01:56.007 --> 00:02:01.003
Okay, next we're going to head over to the backing bean,

40
00:02:01.003 --> 00:02:03.001
and within the backing bean

41
00:02:03.001 --> 00:02:06.001
we're going to be adding the PushContext.

42
00:02:06.001 --> 00:02:08.005
So let's create a new field,

43
00:02:08.005 --> 00:02:13.000
and this is going to be the Java EE 8 PushContext.

44
00:02:13.000 --> 00:02:17.005
And we're going to name that object the helpChannel,

45
00:02:17.005 --> 00:02:22.002
so this is going to represent a PushContext

46
00:02:22.002 --> 00:02:26.001
that corresponds with our WebSocket.

47
00:02:26.001 --> 00:02:29.007
So we'll go ahead, import the PushContext type.

48
00:02:29.007 --> 00:02:34.006
Then from here we need to inject the PushContext,

49
00:02:34.006 --> 00:02:39.001
and we also need to add the Push annotation

50
00:02:39.001 --> 00:02:43.003
to specify the channel, which is going to be help.

51
00:02:43.003 --> 00:02:47.007
And at this point everything is set up on our PushContext.

52
00:02:47.007 --> 00:02:51.001
We just need to add some logic here,

53
00:02:51.001 --> 00:02:53.007
so when we send a message we want to actually

54
00:02:53.007 --> 00:02:56.007
send that message over to our channel

55
00:02:56.007 --> 00:02:59.005
that's been established with the PushContext.

56
00:02:59.005 --> 00:03:02.002
So we can reference the help channel

57
00:03:02.002 --> 00:03:05.001
and you'll see very simply there's a send method.

58
00:03:05.001 --> 00:03:08.002
And then let's just format a string

59
00:03:08.002 --> 00:03:14.003
in order to send that message to our WebSocket,

60
00:03:14.003 --> 00:03:16.009
and then we'll provide the name

61
00:03:16.009 --> 00:03:21.007
and the message text as arguments to the format method,

62
00:03:21.007 --> 00:03:24.005
and we now have constructed our message,

63
00:03:24.005 --> 00:03:27.006
which is going to be sent to the WebSocket

64
00:03:27.006 --> 00:03:31.000
and then eventually out to the client.

65
00:03:31.000 --> 00:03:35.004
The client in this case is going to be the web browser,

66
00:03:35.004 --> 00:03:40.008
and we can establish support within our help.xhtml file

67
00:03:40.008 --> 00:03:45.000
for WebSockets by using the new WebSocket tag.

68
00:03:45.000 --> 00:03:48.005
So let's go ahead and we can put that in place.

69
00:03:48.005 --> 00:03:52.002
It's simply f, and then colon, websocket,

70
00:03:52.002 --> 00:03:55.009
so it's under the facelets tag library.

71
00:03:55.009 --> 00:03:59.007
And then we need to provide two attributes on this tag.

72
00:03:59.007 --> 00:04:01.003
The first is the channel.

73
00:04:01.003 --> 00:04:04.006
You'll remember that we specified its name as "help",

74
00:04:04.006 --> 00:04:07.006
so that's how it connects to the WebSocket,

75
00:04:07.006 --> 00:04:09.004
via that channel name.

76
00:04:09.004 --> 00:04:11.008
And then the next thing we need to provide

77
00:04:11.008 --> 00:04:14.009
is the on message attribute,

78
00:04:14.009 --> 00:04:19.007
and this is going to point to a JavaScript function

79
00:04:19.007 --> 00:04:25.001
that we are going to execute when a message is received.

80
00:04:25.001 --> 00:04:26.007
So I'm just going to name

81
00:04:26.007 --> 00:04:30.003
that JavaScript function "onMessage",

82
00:04:30.003 --> 00:04:33.000
and then we'll need to create it.

83
00:04:33.000 --> 00:04:36.004
So let's go ahead, add a script tag.

84
00:04:36.004 --> 00:04:38.005
Let's get some room here.

85
00:04:38.005 --> 00:04:41.004
And then we're going to go build out

86
00:04:41.004 --> 00:04:44.008
our new onMessage function.

87
00:04:44.008 --> 00:04:49.002
And the onMessage function is going to

88
00:04:49.002 --> 00:04:52.001
get several arguments that are provided to it,

89
00:04:52.001 --> 00:04:54.000
and they're going to look very similar

90
00:04:54.000 --> 00:04:56.009
to what we created with the JavaScript

91
00:04:56.009 --> 00:05:00.002
native support for WebSockets.

92
00:05:00.002 --> 00:05:01.007
You're going to get the message,

93
00:05:01.007 --> 00:05:06.002
you can also get the channel, and then here's the event.

94
00:05:06.002 --> 00:05:07.006
Now once we receive that,

95
00:05:07.006 --> 00:05:09.002
you'll notice we have the div

96
00:05:09.002 --> 00:05:11.008
that we're going to display the messages in.

97
00:05:11.008 --> 00:05:15.007
Let's go ahead and get that div

98
00:05:15.007 --> 00:05:17.008
using JavaScript.

99
00:05:17.008 --> 00:05:21.003
And then we're going to update the markup

100
00:05:21.003 --> 00:05:25.005
within that div to include

101
00:05:25.005 --> 00:05:29.008
the message sent over the WebSocket.

102
00:05:29.008 --> 00:05:31.001
Okay?

103
00:05:31.001 --> 00:05:34.008
And then there's just one final thing that we need to do.

104
00:05:34.008 --> 00:05:38.002
Right now, if we take a look at our command button,

105
00:05:38.002 --> 00:05:42.008
this is going to cause a full request to be sent.

106
00:05:42.008 --> 00:05:45.002
We're going to switch that over to AJAX.

107
00:05:45.002 --> 00:05:48.009
So within JSF, the facelets tag library

108
00:05:48.009 --> 00:05:50.008
provides support for AJAX,

109
00:05:50.008 --> 00:05:53.009
there's an AJAX tag that we can use.

110
00:05:53.009 --> 00:05:56.008
And when we use it we need to specify

111
00:05:56.008 --> 00:06:00.004
what is going to be updated in the backing bean.

112
00:06:00.004 --> 00:06:03.007
And for that we use the execute attribute.

113
00:06:03.007 --> 00:06:05.009
And there's a handy way to just specify,

114
00:06:05.009 --> 00:06:07.009
hey, every binding in the form,

115
00:06:07.009 --> 00:06:10.002
update that on the backing bean,

116
00:06:10.002 --> 00:06:13.006
that way our message text and name will be updated.

117
00:06:13.006 --> 00:06:16.000
So we're just going to use @form

118
00:06:16.000 --> 00:06:17.008
as the value there for execute.

119
00:06:17.008 --> 00:06:20.002
And then the next thing that you specify

120
00:06:20.002 --> 00:06:22.002
is this render attribute.

121
00:06:22.002 --> 00:06:24.008
And this says what element on the dom

122
00:06:24.008 --> 00:06:27.005
or the user interface needs to be refreshed.

123
00:06:27.005 --> 00:06:31.004
In this case, we want to refresh our message div

124
00:06:31.004 --> 00:06:37.006
so that it displays the content that we're adding.

125
00:06:37.006 --> 00:06:42.000
Okay, let's go ahead and save our application.

126
00:06:42.000 --> 00:06:45.008
And then we're going to launch the application,

127
00:06:45.008 --> 00:06:48.001
we'll see a console spin up here,

128
00:06:48.001 --> 00:06:51.001
and I'll start opening up browsers

129
00:06:51.001 --> 00:06:53.008
so that we can get two clients connected.

130
00:06:53.008 --> 00:06:55.003
Right, looks like we're up.

131
00:06:55.003 --> 00:06:57.005
And you'll notice we added a separate link

132
00:06:57.005 --> 00:07:02.002
for our JSF version of the help chat.

133
00:07:02.002 --> 00:07:07.004
So let's pick two people, Steve and Jack.

134
00:07:07.004 --> 00:07:11.007
Steve's going to say there is an issue,

135
00:07:11.007 --> 00:07:19.001
and you'll notice it's sent over, Jack can respond.

136
00:07:19.001 --> 00:07:21.003
So that was a look at the support

137
00:07:21.003 --> 00:07:24.000
found within JSF for WebSockets.

138
00:07:24.000 --> 00:07:25.006
It was very simple to set that up,

139
00:07:25.006 --> 00:07:27.007
pure tag based approach,

140
00:07:27.007 --> 00:07:30.003
and not a lot of work on our part.

141
00:07:30.003 --> 00:07:32.009
But you can find that support,

142
00:07:32.009 --> 00:07:36.007
it's based on the new PushContext within Java EE 8,

143
00:07:36.007 --> 00:07:39.005
so it ties together a lot of the new features

144
00:07:39.005 --> 00:07:43.000
in Java EE 8 to provide that capability.

