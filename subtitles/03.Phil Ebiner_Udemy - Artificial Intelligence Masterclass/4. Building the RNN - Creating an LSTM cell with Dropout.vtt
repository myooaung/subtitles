WEBVTT

00:00.150 --> 00:05.190
Hello and welcome to this new editorial this one is going to be exciting because this is the beginning

00:05.370 --> 00:12.020
of the whole construction of the NTN art and model because indeed our first phase here is to build the

00:12.020 --> 00:17.730
Arnon part of the Indian art and not all that is exactly this part here.

00:17.760 --> 00:24.260
You know we have these two components the Ornan which will get the inputs meaning the in state.

00:24.330 --> 00:30.420
The last action played in the last Laytonville to Z and which will return as output the new Hillen state

00:30.570 --> 00:38.220
and the deterministic latent vector which will then be stochastic simpled from this probability density

00:38.220 --> 00:44.820
function Bizet which is nothing else than this probability of the next latent vector Z conditionally

00:44.820 --> 00:49.310
to the last action played last late latent vector and last hidden state.

00:49.500 --> 00:54.660
So right now we're about to build this part and we will build that in three steps.

00:54.660 --> 00:59.310
First step will be to build the LACMA cell inside the Arnon.

00:59.310 --> 01:05.990
Then second step will be to add to drop out to three elements inside the Arnon which will be first to

01:06.000 --> 01:08.740
record and drop out inside the stem cell.

01:08.790 --> 01:14.570
Then the input drop out of the inputs and the output drops out for the output layer.

01:14.910 --> 01:22.320
And then the third and final step we will wrap everything meaning the LSD himself connected to the inputs

01:22.320 --> 01:28.860
and the output and to which we add the drop are regularisation into the whole record a neural network

01:29.040 --> 01:29.740
model.

01:29.820 --> 01:36.150
And this is the general blueprint of building a record or a neural network with tensor flow.

01:36.150 --> 01:42.120
So whenever you want to build the same for another application Well you can just follow again this blueprint

01:42.120 --> 01:43.130
in three steps.

01:43.140 --> 01:45.290
First you build the elist himself.

01:45.360 --> 01:47.130
Second you add the drop out.

01:47.220 --> 01:50.740
And third you wrap everything into the whole Arnon model.

01:50.940 --> 01:56.250
And that's why I've prepared for you the length and the tense of float condition which will contain

01:56.280 --> 01:59.140
all the tools for these three steps.

01:59.310 --> 02:03.940
So remember the first step to build the elist himself will be done.

02:03.990 --> 02:09.000
Thanks to the Leonora's basic LACMA Cell class by tensor flow.

02:09.000 --> 02:15.540
Then to add to drop out we will use the drop out wrapper for the inputs and outputs and then however

02:15.540 --> 02:21.610
to add the drop out for the LACMA GM we'll just use that drop out the proper Ramanna here.

02:21.780 --> 02:24.920
And then last step to wrap the whole thing.

02:24.930 --> 02:30.270
That is the elist himself connected to the inputs and outputs Plus the dropout added to them.

02:30.420 --> 02:37.920
We will use dynamic arland function which will indeed take and put the ELAS himself plus the input to

02:37.920 --> 02:40.820
which we will have to drop out at it optional.

02:41.070 --> 02:44.520
And then of course this will return the outputs.

02:44.520 --> 02:50.340
All right so let's do this let's do these three steps and we're going to start with the first one meaning

02:50.340 --> 02:54.880
we're going to build the elist himself with the right number of units.

02:54.900 --> 03:01.540
So I'm going to go beyond this because we will create this LSD himself as an object of the laser non-basic

03:01.600 --> 03:04.850
LACMA cell and therefore back on by then.

03:04.920 --> 03:05.750
Here we go.

03:05.820 --> 03:11.790
Let's introduce a new variable here that will go self on the score F and for function because it's going

03:11.790 --> 03:17.450
to be the object of this little known basic LCN cell class.

03:17.460 --> 03:23.580
But we won't add the arguments yet because we will do this when adding the dropouts with some if conditions

03:23.800 --> 03:25.000
y if condition.

03:24.990 --> 03:29.390
That's because we want to give us the options actually to add these dropouts.

03:29.490 --> 03:35.670
So we might you know activated drop out on the test himself but deactivate it on the input or the output.

03:35.670 --> 03:37.550
So we want to give us these options.

03:37.560 --> 03:41.220
And the way we're going to do this is by creating three variables.

03:41.220 --> 03:47.640
Each one will be a boolean true false for whether or not we're going to activate each of these three

03:47.640 --> 03:48.660
dropout.

03:48.660 --> 03:52.250
So speaking of these boolean variables Let's create them right now.

03:52.380 --> 03:54.790
The first one will be for the record and drop out.

03:54.810 --> 03:56.320
Add it to the LSC himself.

03:56.460 --> 04:06.100
And we're going to call that boolean variable use record and drop out which will be equal to false if.

04:06.510 --> 04:12.350
And now to understand we need to go back to this little known basic LSD himself recommendation because

04:12.360 --> 04:18.810
indeed among the arguments of this class we have this dropout key parameter which will be a number between

04:18.930 --> 04:26.550
0 and 1 and which will basically be the rate of units inside the LACMA cell that will be kept activated

04:26.850 --> 04:32.790
meaning you know that won't be dropped out or activated during the training because that's what dropout

04:32.790 --> 04:33.600
is about.

04:33.600 --> 04:39.570
This is a regularization technique which allows to avoid overfilling by activating some of the neurons

04:39.780 --> 04:41.530
or some of the units inside.

04:41.530 --> 04:44.610
LS himself in a parameter a data step.

04:44.610 --> 04:50.340
And so this is very effective and that's why right now we want to add the drop out to indeed do some

04:50.340 --> 04:52.890
regularization to avoid overfitting.

04:53.100 --> 04:59.070
And so what I was saying is that this dropout keep up Raemer is a number between 0 0 1 and therefore

04:59.130 --> 05:04.800
if it is equal to 1 that means that we're going to keep older units activated inside the elist himself

05:04.800 --> 05:09.250
during the training and therefore drop out won't be activated.

05:09.270 --> 05:15.750
So what we're going to do now is back on by then we are going to deactivate dropout meaning we're going

05:15.750 --> 05:18.370
to set this used record and dropout to false.

05:18.420 --> 05:26.340
If one of our hyper parameters which is in our self that HPF hyper parampara object and which is called

05:26.550 --> 05:34.450
use record Hrant dropout is equal to zero because indeed if this is you go to zero.

05:34.560 --> 05:40.320
That means basically that this kid from drop out Berrent will be equal to one meaning that we won't

05:40.530 --> 05:42.170
apply any dropout.

05:42.180 --> 05:47.250
And so if that is equal to zero use record and drove it will be equal to force and that will be the

05:47.340 --> 05:54.100
option where we don't want to activate dropout for the LACMA you know the record and drop out.

05:54.120 --> 05:54.470
All right.

05:54.480 --> 06:01.890
And then however else if that same use record and drop out parameter is different than zero then in

06:01.890 --> 06:09.780
that case dropout will be activated and so will said that use record and about boolean variable to truth

06:10.500 --> 06:11.430
and perfect.

06:11.430 --> 06:17.160
Now we're going to do exactly the same for the other ones meaning for the other to drop out.

06:17.250 --> 06:27.700
The first one for the use input dropout which will be same false if the user input drop out from our

06:27.830 --> 06:33.690
HPH hyper parental object is equal to zero and else it will be equal to true meaning that will have

06:33.690 --> 06:37.030
indeed dropout activated for the input.

06:37.050 --> 06:43.560
And then lastly we can actually copy this use input drop out because now what I want to do is exactly

06:43.560 --> 06:45.960
the same for the output this time.

06:46.020 --> 06:51.500
So I'm going to replace it in here by out and in here by out again.

06:51.600 --> 06:58.080
So that if this used output drop out parameter is equal to zero then use up drop will be equal to false

06:58.080 --> 07:02.210
meaning we won't have dropout activated for the output.

07:02.510 --> 07:07.830
And as if it is different than zero than the drop out for the Apple will be equal to true meaning that

07:07.830 --> 07:14.220
we will activate drop out for the output with a stern keep a parameter which no worries will specify

07:14.370 --> 07:15.400
right after this.

07:15.570 --> 07:21.810
So first thing done we basically created some booleans which will allow us to give us the options to

07:21.810 --> 07:26.790
activate dropouts for each of the three elements input output or LACMA cell.

07:26.820 --> 07:28.910
And now speaking of giving us these options.

07:29.070 --> 07:34.020
Well let's implement that right away and we're going to do that with some if conditions starting with

07:34.020 --> 07:35.140
the first one.

07:35.220 --> 07:44.370
If our use record and drop out boolean variable is equal to true which we don't have to specify because

07:44.370 --> 07:48.880
truth is the default value of a boolean then in that case what will we do.

07:48.960 --> 07:54.090
Well if this used record in dhrupad is equal to true that means that we want to activate dropout to

07:54.220 --> 08:00.960
the same cell and therefore what we'll do is create a new variable which will be our final LACMA cell

08:01.290 --> 08:08.390
and which will be that cell if an object variable from the Leonore's basic LACMA cell class by sense

08:08.390 --> 08:14.780
of flow to which we will input the right arguments so that we can have to drop out.

08:14.790 --> 08:20.730
And speaking of this argument you might guess that the one which will specify that do we want some trouble

08:20.790 --> 08:26.790
activated will be this one drop out kid prob which will therefore be a number of you know one because

08:26.790 --> 08:30.170
one means that we're keeping all the units activated.

08:30.470 --> 08:34.840
All right but first let's implement the other arguments starting with number of units.

08:34.950 --> 08:41.400
And we're going to get these arguments with Again our hyper Berrent object H P S which contains basically

08:41.460 --> 08:46.860
all the hype Renner's of the regular neural network and the name for the number of units is not going

08:46.860 --> 08:51.170
to be Nominet but the author chose to call it Arnon size.

08:51.330 --> 08:54.240
Right the number of units in the elist themselves.

08:54.420 --> 08:57.020
And then let's take care of the other arguments.

08:57.150 --> 09:01.150
So it won't be this one this one or that one because we're going to keep the default values.

09:01.150 --> 09:07.200
However we're going to give a different value to this one which is basically the option of normalizing

09:07.340 --> 09:13.740
the layer in the basic cell and the default value is true but we will give us the option to have true

09:13.740 --> 09:14.280
or false.

09:14.340 --> 09:20.670
And the way we're going to do this is by entering a norm here which is just the name of the argument

09:21.000 --> 09:25.820
and then what we can do is create another option as the ones we created here.

09:25.830 --> 09:33.390
But this time for the normalization So for example let's say that low norm is going to be use later

09:33.960 --> 09:42.000
norm and this used layer Gnome is going to be an other Boullion as what we did here only to create it.

09:42.090 --> 09:52.830
We're just going to replace use output drop out by use LAYER norm and then same use LAYER norm.

09:52.860 --> 10:00.930
Right here because it did use LAYER norm is actually another type of parameter inside our HP is hyper

10:00.930 --> 10:02.310
parameter object.

10:02.310 --> 10:08.600
And so here just doing this new line of code gives us a new boolean which will be equal to false if

10:08.680 --> 10:13.650
they use the norm in the hyper parameters is equal to zero and true otherwise.

10:13.890 --> 10:14.550
All right.

10:14.550 --> 10:16.230
Perfect for that new argument.

10:16.230 --> 10:22.410
And then of course now is the time to specify that we indeed want drop out because this is indeed a

10:22.410 --> 10:25.560
condition where use recommends are about equal to true.

10:25.590 --> 10:28.170
So we're going to get that final drop out.

10:28.170 --> 10:31.000
Keep a parameter for the LACMA cell.

10:31.020 --> 10:32.320
So I'm copying this.

10:32.430 --> 10:38.670
And here we're going to paste that and we're going to set that equal to another parameters of our hyper

10:38.670 --> 10:47.280
parameters object which is called directorates dropouts Propp.

10:47.340 --> 10:53.970
All right so that's the name for that exact keep drub parameter that number between 0 0 1 and which

10:53.970 --> 11:00.790
will get basically the rate of the units that will be kept activated inside the elist himself.

11:01.080 --> 11:01.730
All right.

11:01.800 --> 11:03.200
So all good here.

11:03.240 --> 11:10.610
We basically added the drop out for the elist himself a record and dropout and now else.

11:10.800 --> 11:16.830
Meaning if used record and dropout equals false then in that case we're going to do exactly the same

11:16.830 --> 11:18.830
you know getting the final sale.

11:19.020 --> 11:24.650
But this time of course with out the dropout.

11:24.660 --> 11:25.100
All right.

11:25.140 --> 11:31.590
Very simply because by default the drop out key parameter is one meaning that we're keeping all the

11:31.590 --> 11:37.320
units activated in the SDMI cell and therefore that means that we don't add any drop out.

11:37.530 --> 11:38.310
All right.

11:38.370 --> 11:45.960
Now let's do the same for the other two drop out for the inputs and outputs and so to do that efficiently

11:46.050 --> 11:52.430
I'm going to copy this first if because this time we're not going to have an if else condition.

11:52.440 --> 11:54.060
But just an if condition.

11:54.210 --> 12:00.750
And the reason is that we're going to add the drop out with this drop out wrapper class which is only

12:00.750 --> 12:04.950
the class used to adage about for both the input and the output.

12:04.950 --> 12:09.640
And so we could add the drop out for both the input and the output at the same time.

12:09.660 --> 12:15.330
But since you know we want to have an option of adding For example a drop out to the input but not to

12:15.330 --> 12:17.350
the output or the other way.

12:17.490 --> 12:25.440
Well we will do two if conditions here inside which will have the separate option to add the drop out

12:25.440 --> 12:27.870
to the input and at the drop out to the output.

12:27.870 --> 12:33.700
So here I'm going to replace use Recker and drop out by use input dropout.

12:33.810 --> 12:38.690
And here I'm going to replace use recommend repelled by use output dropout.

12:38.760 --> 12:45.240
And then of course now we're going to remove that because that was the previous way of how we could

12:45.570 --> 12:47.340
at the drop out of the elist himself.

12:47.340 --> 12:52.860
Now we're going to use another way which will be to drop our wrapper class by tens of flow and therefore

12:52.950 --> 12:55.960
here to add the drop out to the inputs.

12:56.010 --> 12:59.910
Well of course we're going to use this drop our wrapper class.

12:59.910 --> 13:02.830
And so let's get back to the documentation.

13:02.850 --> 13:03.690
This one.

13:03.690 --> 13:09.600
Now we're going to take of this which is the name of the class and or the path to get it from tens of

13:09.600 --> 13:10.170
flow.

13:10.380 --> 13:16.770
And inside this class we will put the right arguments which will allow to activate drop out for the

13:16.770 --> 13:17.360
input.

13:17.610 --> 13:24.120
And so as you can see the first argument is the cell and which is exactly the cell we created here and

13:24.120 --> 13:30.480
which was updated with about activated or not whether we want to use the record drop out.

13:30.480 --> 13:32.140
And so that's the cell here.

13:32.250 --> 13:37.620
Then the next argument here we go is the one we're interested in right now to at the drop out of the

13:37.620 --> 13:38.350
input.

13:38.520 --> 13:46.530
And so we're going to put this argument which I'm going to copy here in put keep up by default this

13:46.530 --> 13:52.410
argument is equal to one meaning that we're keeping all the input units activated but since right now

13:52.410 --> 13:53.770
we want to use dropout.

13:53.820 --> 13:58.530
That means that we want to have some other value between therefore 0 and 1 excluded.

13:58.680 --> 14:07.170
And this value we will get it again from our hyper parameter HP s variable object from which we're going

14:07.170 --> 14:16.810
to get that exact input key parameter which has the following name input dropouts drop and that's it.

14:16.920 --> 14:22.980
And of course we don't need an else here because if else you know this is equal to false then the cell

14:22.980 --> 14:24.690
will just keep being this one.

14:24.690 --> 14:31.090
You know with either the record about activated or deactivated because the only argument we had to endure

14:31.090 --> 14:35.470
here was that it would keep up value which is equal to one by default.

14:35.730 --> 14:38.800
And now let's do the same for the output dropout.

14:38.880 --> 14:44.270
And therefore I'm going to take that again paste pasted here.

14:44.280 --> 14:50.900
And of course I'm going to replace your input by output and same here input by output.

14:51.030 --> 14:52.120
And here we go.

14:52.140 --> 14:59.760
Now we've just implemented the options to add separately some drop out to the elist himself the input

14:59.970 --> 15:01.170
and output.

15:01.190 --> 15:02.480
So that's a good thing done.

15:02.520 --> 15:09.210
The second step in the process of building a record new that work I want to precise here this is the

15:09.210 --> 15:14.580
general blueprint of how we can build a record of neural network with an LSD himself and drop out.

15:14.600 --> 15:15.650
Activate it.

15:15.660 --> 15:20.460
So if you want to use that for another application you can still follow this process.

15:20.690 --> 15:27.370
And now the next step is to create a new object variable which will be that elist himself with drop

15:27.370 --> 15:33.600
out at it or not and to do this well very simply we just need to create a new object variable which

15:33.600 --> 15:40.980
we'll call self that cell and which will be of course equal to that LSD himself that we've just created

15:41.100 --> 15:47.940
with these optional drop out and so cell that cell equal cell and now congratulations you implemented

15:48.030 --> 15:54.000
an LSD cell with an optional troubles inside a record a neural network.

15:54.000 --> 15:59.280
And speaking of record a neural network that leads us to the next step which is to wrap all that with

15:59.280 --> 16:05.460
the inputs and outputs inside the whole record a neural network and to do this well we're going to use

16:05.550 --> 16:09.780
our final tool which is a dynamic Arnon function.

16:09.810 --> 16:13.120
So let's do that final big step in the next to Tauriel.

16:13.170 --> 16:14.850
And until then enjoy AI.
