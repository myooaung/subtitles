WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.140 --> 00:00:02.775
In our index or HTML page,

00:00:02.775 --> 00:00:05.955
we created this range section early on.

00:00:05.955 --> 00:00:09.975
Now, this is going to update you and again to show the player,

00:00:09.975 --> 00:00:13.005
the number range they have left to choose from.

00:00:13.005 --> 00:00:17.445
We going to do this by updating these three sections.

00:00:17.445 --> 00:00:21.764
We'll be using JavaScript to set the CSS such as the margin,

00:00:21.764 --> 00:00:24.120
and also the background color,

00:00:24.120 --> 00:00:27.735
O2O script file and we can now set this up.

00:00:27.735 --> 00:00:33.540
The first thing I want to do about the very top is to set two new variables.

00:00:33.540 --> 00:00:37.370
These variables are going to be the low and also the high,

00:00:37.370 --> 00:00:40.055
and these are going to be updated during the game.

00:00:40.055 --> 00:00:41.810
When we first begin our game,

00:00:41.810 --> 00:00:43.235
the low value is one,

00:00:43.235 --> 00:00:45.955
and the highest value is 100.

00:00:45.955 --> 00:00:51.030
Let's set these defaults up, high of 100s.

00:00:51.030 --> 00:00:53.390
It's a handle, all this functionality,

00:00:53.390 --> 00:00:55.265
we're going to create a new function,

00:00:55.265 --> 00:00:58.590
and this is going to be called updateRange.

00:00:59.660 --> 00:01:02.270
To update our range slider,

00:01:02.270 --> 00:01:05.390
we need to access all three of these sections.

00:01:05.390 --> 00:01:10.375
Let's crop these first by the ID, so getElementById.

00:01:10.375 --> 00:01:12.450
The first one was low,

00:01:12.450 --> 00:01:16.780
and so is inside of a constant called lowValue.

00:01:17.980 --> 00:01:21.500
We can adjudicate this two more times,

00:01:21.500 --> 00:01:24.035
and the second one is the space.

00:01:24.035 --> 00:01:28.530
This is the space between the high and the low values.

00:01:29.510 --> 00:01:32.620
The third one is high.

00:01:34.580 --> 00:01:37.680
I call this the highValue.

00:01:37.680 --> 00:01:41.360
Both this lowValue and the highValue will be

00:01:41.360 --> 00:01:44.555
the red areas which we can see if we go into the game.

00:01:44.555 --> 00:01:47.465
This will be the low section over on the left,

00:01:47.465 --> 00:01:50.675
and then we'll update the highest section over on the right.

00:01:50.675 --> 00:01:54.830
This space in between is the area which the user still has to choose from,

00:01:54.830 --> 00:01:57.445
and this is going to be a green section.

00:01:57.445 --> 00:02:00.120
To do this inside of our script,

00:02:00.120 --> 00:02:03.575
we're going to update these CSS values of the flexbox,

00:02:03.575 --> 00:02:06.235
and also the background color.

00:02:06.235 --> 00:02:10.820
To make a space for the low section on the left-hand side,

00:02:10.820 --> 00:02:14.050
we need to take into account the value of low,

00:02:14.050 --> 00:02:18.230
and we can use this as a percentage to set the flex value.

00:02:18.230 --> 00:02:20.360
Remember when using the flexbox,

00:02:20.360 --> 00:02:24.410
if all three of these sections had an equal value of one,

00:02:24.410 --> 00:02:27.880
these would all try to take up an equal amount of space.

00:02:27.880 --> 00:02:30.350
However, though, this section is not going to be

00:02:30.350 --> 00:02:33.800
equal since it is going to be based on our variables.

00:02:33.800 --> 00:02:37.250
Let's begin with our lowValue variable,

00:02:37.250 --> 00:02:41.445
we can set the style property or flex,

00:02:41.445 --> 00:02:44.000
and this is going to be equal to our low variable,

00:02:44.000 --> 00:02:45.740
and since this is CSS,

00:02:45.740 --> 00:02:47.975
we also need to add a string onto the end,

00:02:47.975 --> 00:02:50.200
which is the percentage symbol.

00:02:50.200 --> 00:02:53.030
This would also be the same for any overvalues too,

00:02:53.030 --> 00:02:54.590
such as a pixel.

00:02:54.590 --> 00:02:59.050
We're also going to give this lowValue a background color too.

00:02:59.050 --> 00:03:04.415
Set the style dark background to be equal to our background color,

00:03:04.415 --> 00:03:07.110
which is going to be ef7b54.

00:03:08.300 --> 00:03:12.810
We're going to do a pretty similar thing for our next two sections,

00:03:12.810 --> 00:03:15.630
so let's copy these two style sections.

00:03:15.630 --> 00:03:18.675
I'm going to paste this just below our space,

00:03:18.675 --> 00:03:20.775
and also the high section.

00:03:20.775 --> 00:03:24.140
The space section is going to be everything in between.

00:03:24.140 --> 00:03:27.695
To get this value, we are going to access the high variable,

00:03:27.695 --> 00:03:31.280
and take away the low which is going to give us the space in between.

00:03:31.280 --> 00:03:36.420
The background is going to be our green color which is the value of 83e1d0.

00:03:38.560 --> 00:03:42.620
The final one is this value of high down at the bottom.

00:03:42.620 --> 00:03:46.150
Now, we can't just simply output the value of high.

00:03:46.150 --> 00:03:50.720
Now, this is because if we take a look at our progress bar,

00:03:50.720 --> 00:03:54.325
if the users' high guess for example is 70.

00:03:54.325 --> 00:03:56.959
If we add this as a value of 70,

00:03:56.959 --> 00:03:59.945
this will create a red section all the way from the left,

00:03:59.945 --> 00:04:02.800
right across to 70 percent.

00:04:02.800 --> 00:04:07.775
However though, we already have the low sections and the space in between,

00:04:07.775 --> 00:04:10.745
so if this was going to be a value of 70,

00:04:10.745 --> 00:04:13.475
all we want to do is to create a red section

00:04:13.475 --> 00:04:16.915
for the remaining 30 percent right at the end.

00:04:16.915 --> 00:04:22.055
The way we can do this is to take this away from a 100,

00:04:22.055 --> 00:04:27.020
and this will give us the remaining space to fill in the red section right at the end.

00:04:27.020 --> 00:04:30.095
We already have this red color set from before,

00:04:30.095 --> 00:04:31.580
so we can now save this,

00:04:31.580 --> 00:04:35.375
and then call this function each time the user makes a guess.

00:04:35.375 --> 00:04:37.775
Our function is updateRange.

00:04:37.775 --> 00:04:42.520
We can call this after each guess down in our compareGuess function.

00:04:42.520 --> 00:04:44.940
This is our compareGuess,

00:04:44.940 --> 00:04:47.355
so let's select the open in brackets,

00:04:47.355 --> 00:04:51.190
and let's call this just after this closes.

00:04:51.710 --> 00:04:55.415
If I now save this file and give us a try,

00:04:55.415 --> 00:04:58.300
that's values inside of here,

00:04:58.300 --> 00:05:02.465
you see that nothing is working correctly just yet.

00:05:02.465 --> 00:05:05.525
This is because we are relying on both the high,

00:05:05.525 --> 00:05:08.720
and also the low variables up at the very top,

00:05:08.720 --> 00:05:12.785
but we've not yet updated this with the user's guess.

00:05:12.785 --> 00:05:15.080
We can update these two values,

00:05:15.080 --> 00:05:17.890
back down in our compareGuess function.

00:05:17.890 --> 00:05:19.605
The first if section,

00:05:19.605 --> 00:05:22.425
here we check-in if the user's guess is too high.

00:05:22.425 --> 00:05:28.500
Therefore, we can update our high variable with the value of the user's guess.

00:05:28.820 --> 00:05:32.510
Below this, inside of our else if section,

00:05:32.510 --> 00:05:34.985
this is when the user's guess is too low.

00:05:34.985 --> 00:05:40.285
Therefore, we can update our low variable to be equal to our users' guess.

00:05:40.285 --> 00:05:43.920
Let's save this file and try this out over in the browser.

00:05:43.920 --> 00:05:46.680
Add any values inside of here,

00:05:46.680 --> 00:05:49.995
and we still don't see an update, so let's check this out.

00:05:49.995 --> 00:05:54.570
We obtain the high section if the user's guess is too high.

00:05:54.570 --> 00:05:57.825
If it's too low, we obtain in the low section.

00:05:57.825 --> 00:06:00.910
Let's go to our function.

00:06:01.340 --> 00:06:06.610
Half our variable's, updateRange.

00:06:08.570 --> 00:06:12.200
We can see from the text editor that our space,

00:06:12.200 --> 00:06:15.575
and also the highValue variables are not being used,

00:06:15.575 --> 00:06:18.245
so let's change it to be space,

00:06:18.245 --> 00:06:21.930
and also the same just below.

00:06:22.610 --> 00:06:25.245
These two should be high value,

00:06:25.245 --> 00:06:28.220
and I guess this is one of the downsides of copying and pasting,

00:06:28.220 --> 00:06:29.645
so let's save this,

00:06:29.645 --> 00:06:31.690
and give us a go in the browser.

00:06:31.690 --> 00:06:34.755
Add any values inside here, so 10,

00:06:34.755 --> 00:06:38.100
and the first 10 percent is now our low section,

00:06:38.100 --> 00:06:40.875
let's try in at a high value of 90.

00:06:40.875 --> 00:06:43.455
This one fills in the last 10 percent,

00:06:43.455 --> 00:06:45.690
giving us the range in between.

00:06:45.690 --> 00:06:49.125
Let's go for 50, this now closes up.

00:06:49.125 --> 00:06:53.715
This is pretty much all working correctly but there is one small problem.

00:06:53.715 --> 00:06:56.610
Currently, our highest value is 90,

00:06:56.610 --> 00:07:00.910
but if we were to add a highValue such as 99,

00:07:00.910 --> 00:07:03.935
we see our range now increases.

00:07:03.935 --> 00:07:07.775
When we add a higher value, we don't want our range to be increasing,

00:07:07.775 --> 00:07:11.255
we want to still stick with the previous high which was 90.

00:07:11.255 --> 00:07:12.860
It may sound a little confusing,

00:07:12.860 --> 00:07:18.650
but we only want to update the high variable if it was lower than the previous high.

00:07:18.650 --> 00:07:21.890
Back down to our compare function,

00:07:21.890 --> 00:07:23.705
when we set our high,

00:07:23.705 --> 00:07:25.190
we're going to create an if saving,

00:07:25.190 --> 00:07:31.700
which is going to check if our user guess is lower than the previous high.

00:07:31.700 --> 00:07:35.090
If it is, we'll then set our variable.

00:07:35.090 --> 00:07:39.410
This will stop any cases just like before when our previous high was 90,

00:07:39.410 --> 00:07:41.900
and then the user guess was 99,

00:07:41.900 --> 00:07:45.680
and an if statement like this will stop this thing from happening.

00:07:45.680 --> 00:07:49.370
The same thing will happen if we go back for the low section,

00:07:49.370 --> 00:07:51.320
if you have a low of 50,

00:07:51.320 --> 00:07:54.260
this now gives us our range from one to 50,

00:07:54.260 --> 00:07:57.710
let's go for our 30, 10.

00:07:57.710 --> 00:08:01.055
Now, our low section is between one and 10.

00:08:01.055 --> 00:08:04.880
If we were to add a lower value such as five, again,

00:08:04.880 --> 00:08:06.020
the same problem happens,

00:08:06.020 --> 00:08:09.905
this goes wider while we want this stay exactly the same.

00:08:09.905 --> 00:08:13.115
Just below where we update our low section,

00:08:13.115 --> 00:08:16.520
we can also add a conditional statement.

00:08:16.520 --> 00:08:20.960
We only want this variable to be updated if the user's guess is

00:08:20.960 --> 00:08:25.715
higher than the current low. Let's give this a test.

00:08:25.715 --> 00:08:29.795
Let's go for a 10 as 90.

00:08:29.795 --> 00:08:33.830
Now, let's go for the low section if we make this lower such as five,

00:08:33.830 --> 00:08:37.085
this red section stays exactly where it is.

00:08:37.085 --> 00:08:39.830
We'll try going higher, so 95,

00:08:39.830 --> 00:08:42.770
and this all now seems to work correctly.

00:08:42.770 --> 00:08:46.040
Our rain section is almost now done

00:08:46.040 --> 00:08:49.820
and the next thing to do is to also update the text inside the middle.

00:08:49.820 --> 00:08:52.760
This is our current range of one to 100s.

00:08:52.760 --> 00:08:55.550
We also want to update this during the game.

00:08:55.550 --> 00:08:58.250
We also going to push this over to the left or to

00:08:58.250 --> 00:09:01.355
the right to be above our green section.

00:09:01.355 --> 00:09:03.950
The place we're going to do this is back inside of

00:09:03.950 --> 00:09:08.405
our update range function. Scroll back up.

00:09:08.405 --> 00:09:11.360
We can then select this section which is

00:09:11.360 --> 00:09:15.270
wrapped inside of the span with the ID of range output.

00:09:15.790 --> 00:09:18.395
The first step is to grab this.

00:09:18.395 --> 00:09:21.210
We'd get element by ID.

00:09:24.430 --> 00:09:29.490
Let's store this inside of a constant called range output.

00:09:31.090 --> 00:09:34.940
We want to now grab this range output and then update

00:09:34.940 --> 00:09:38.735
the HTML to be the new updated values.

00:09:38.735 --> 00:09:41.855
Let's use the back tick so we can create a template string,

00:09:41.855 --> 00:09:46.415
which will allow us to insert some variables into our output.

00:09:46.415 --> 00:09:50.975
The first variable we add inside of the $ symbol and the curly braces.

00:09:50.975 --> 00:09:52.820
This is a value of low,

00:09:52.820 --> 00:09:55.280
which you set just above,

00:09:55.280 --> 00:09:59.090
the dash, add a $ symbol and then we can

00:09:59.090 --> 00:10:02.930
insert our high variable inside of the curly braces.

00:10:02.930 --> 00:10:06.680
We then go on to make this section move to the left or to the right,

00:10:06.680 --> 00:10:09.170
to be just above our green section.

00:10:09.170 --> 00:10:14.900
The way we can do this is by setting the margin on the left and also the right-hand side.

00:10:14.900 --> 00:10:17.600
The margin on the left is going to be the same as

00:10:17.600 --> 00:10:20.180
our low section and the margin on the right

00:10:20.180 --> 00:10:26.040
is going to be equal to our high section and just make sure this is got in the text.

00:10:26.590 --> 00:10:30.710
This will set this as a text value of our element.

00:10:30.710 --> 00:10:34.490
Again, we're going to select our range output and we'll start with

00:10:34.490 --> 00:10:38.570
the style property which is going to be margin-left.

00:10:38.570 --> 00:10:42.335
When setting any style property using JavaScript,

00:10:42.335 --> 00:10:45.545
we don't use any dashes like we would do with CSS.

00:10:45.545 --> 00:10:47.450
Instead, we set this as CamelCase,

00:10:47.450 --> 00:10:50.990
so the first word of margin is all lowercase and

00:10:50.990 --> 00:10:55.325
then each word just after this begins with a capital letter.

00:10:55.325 --> 00:11:00.875
Just as I mentioned, we're going to set this to be exactly the same as our low value.

00:11:00.875 --> 00:11:04.415
We'll then set our margin on the right.

00:11:04.415 --> 00:11:07.400
Just like above we'll set the style,

00:11:07.400 --> 00:11:14.000
but this time the margin on the right and this is the same as our flex value,

00:11:14.000 --> 00:11:18.350
so copy this and let's test this out.

00:11:18.350 --> 00:11:24.710
So 10, 90, this is equal,

00:11:24.710 --> 00:11:26.390
so our text is now in the middle.

00:11:26.390 --> 00:11:28.835
Let's try 50 and 70,

00:11:28.835 --> 00:11:32.030
85, and every time we update our range,

00:11:32.030 --> 00:11:35.190
this is now pushed just above our green section.

00:11:35.190 --> 00:11:39.910
Good. This is the range section now completed and the very final touch I'm going

00:11:39.910 --> 00:11:44.745
to make to this project is also make this number section flash.

00:11:44.745 --> 00:11:48.050
The way we can do this is to add an animation to

00:11:48.050 --> 00:11:52.129
our range output and then set this inside of our CSS.

00:11:52.129 --> 00:11:55.445
This is going to be reasonably straightforward.

00:11:55.445 --> 00:11:57.260
All we're going to do is to add

00:11:57.260 --> 00:12:01.550
a new class and we can set this property by using a class list.

00:12:01.550 --> 00:12:04.130
Class list has a method called add,

00:12:04.130 --> 00:12:06.410
which will allow us to add a new class,

00:12:06.410 --> 00:12:08.615
which we're going to call flash.

00:12:08.615 --> 00:12:13.080
We can then use this over in our styles.css.

00:12:13.360 --> 00:12:16.310
Outside of our immediate query,

00:12:16.310 --> 00:12:17.930
just like with any of the class,

00:12:17.930 --> 00:12:25.265
we target this with the dot and then inside here we can set up our animation.

00:12:25.265 --> 00:12:29.135
Our animation is going to make use of the key frames rule,

00:12:29.135 --> 00:12:33.125
so we can set our key frames and this is going to allow us to set

00:12:33.125 --> 00:12:39.845
exactly what CSS properties we want to add or remove as each stage of our animation.

00:12:39.845 --> 00:12:42.440
The animation name is going to be equal to

00:12:42.440 --> 00:12:47.405
flash and then inside here we can set exactly both CSS rules.

00:12:47.405 --> 00:12:50.465
We want to apply at different percentages,

00:12:50.465 --> 00:12:52.160
so at zero percent,

00:12:52.160 --> 00:12:54.540
which is the very start,

00:12:55.300 --> 00:13:01.790
we can set the opacity to be a value of one and a value of one is not transparent at all,

00:13:01.790 --> 00:13:03.470
this is fully opaque.

00:13:03.470 --> 00:13:07.325
It's exactly how the element is intended to look.

00:13:07.325 --> 00:13:11.660
However, at 50 percent or halfway through this animation,

00:13:11.660 --> 00:13:17.255
we're going to then reduce this opacity to be equal to 0.5.

00:13:17.255 --> 00:13:21.395
Zero would be fully transparent or fully see-through.

00:13:21.395 --> 00:13:23.720
So this is a halfway value.

00:13:23.720 --> 00:13:25.970
Then at the end of our animation,

00:13:25.970 --> 00:13:30.605
we can set the 100 percent value to be back to a value of one.

00:13:30.605 --> 00:13:33.290
Now we have this animation name of flash,

00:13:33.290 --> 00:13:35.640
we can now set this.

00:13:35.950 --> 00:13:40.415
I'm also going to set this animation to be over a duration of

00:13:40.415 --> 00:13:43.700
one second and also set this as

00:13:43.700 --> 00:13:47.750
infinite so our animation will keep running inside the browser.

00:13:47.750 --> 00:13:55.145
Let's save this and try this out or easy mode and if it starts up again,

00:13:55.145 --> 00:14:01.080
the class is now been added and we can see our animation has now taken effect.

00:14:01.300 --> 00:14:04.520
Congratulations, you've now reached the end of

00:14:04.520 --> 00:14:08.190
this project and I will see you in the next one.
