WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.320 --> 00:00:05.430
Now we have a random number generated and stored inside of our computerGuess.

00:00:05.430 --> 00:00:08.295
We're also going to capture the user's input,

00:00:08.295 --> 00:00:10.965
which they add into this number field.

00:00:10.965 --> 00:00:13.860
Since it's going to be multiple choices,

00:00:13.860 --> 00:00:16.365
we're going to store this inside of an array.

00:00:16.365 --> 00:00:22.125
So we'll say let our userGuesses to be equal to an empty array to begin,

00:00:22.125 --> 00:00:24.840
and then we can scroll down and create a function which is going to

00:00:24.840 --> 00:00:28.305
compare the user's guess with the random number.

00:00:28.305 --> 00:00:32.320
This function is going to be called compareGuess.

00:00:34.280 --> 00:00:42.005
The point is going to be to grab the user's input from this box inside of our index page.

00:00:42.005 --> 00:00:45.260
This input has the ID of inputBox.

00:00:45.260 --> 00:00:50.280
Let's grab this with "document.getElementById".

00:00:53.000 --> 00:00:56.940
Then we can select the value which the user enters.

00:00:56.940 --> 00:01:00.935
Just like early on, we also need to convert this into a number,

00:01:00.935 --> 00:01:02.600
so we can cut this out.

00:01:02.600 --> 00:01:06.625
We can use the number function and then paste this in.

00:01:06.625 --> 00:01:12.300
Finally, we can store this inside of a constant called the userGuess.

00:01:13.270 --> 00:01:16.490
Now we have this guess. The next thing we want to do is to

00:01:16.490 --> 00:01:20.130
push this to our user guess' array.

00:01:20.530 --> 00:01:23.585
Let's access our variable,

00:01:23.585 --> 00:01:26.915
and then we can push a new value to our array.

00:01:26.915 --> 00:01:29.650
The new value is our userGuess.

00:01:29.650 --> 00:01:33.440
To check this is working, we can also display this inside of

00:01:33.440 --> 00:01:37.010
our user interface in our index.html.

00:01:37.010 --> 00:01:39.620
Down at the very bottom, we have this guesses section,

00:01:39.620 --> 00:01:42.715
which is going to output any previous guesses.

00:01:42.715 --> 00:01:44.745
Back to our function,

00:01:44.745 --> 00:01:47.800
let's grab this one by the ID,

00:01:51.710 --> 00:01:57.060
and then set the innerHTML to be equal to userGuesses.

00:01:57.060 --> 00:02:00.410
With this now captured, the next thing we need to do is to call

00:02:00.410 --> 00:02:04.445
our compareGuess function over in our index.html.

00:02:04.445 --> 00:02:06.335
Let's take a look for our input,

00:02:06.335 --> 00:02:08.230
which is just here.

00:02:08.230 --> 00:02:12.260
We can call our function each time the user adds a number and

00:02:12.260 --> 00:02:16.330
then hit enter by adding the onchange event handler.

00:02:16.330 --> 00:02:19.900
The function name is compareGuess.

00:02:20.060 --> 00:02:23.895
Over to the browser and we can check this is working.

00:02:23.895 --> 00:02:30.090
Starts our game, add the values of 40,

00:02:30.090 --> 00:02:34.720
89, and our guesses are now displayed at the bottom.

00:02:34.720 --> 00:02:38.875
There's various different ways we can add a space in between each one of these,

00:02:38.875 --> 00:02:43.490
but a really simple way we can do this is by going over to our script.

00:02:43.490 --> 00:02:46.250
We can create a space with an empty string,

00:02:46.250 --> 00:02:48.590
and add this to our guess.

00:02:48.590 --> 00:02:51.395
Now if we add a number inside here,

00:02:51.395 --> 00:02:57.830
45, 78, these now have a space before each number.

00:02:57.830 --> 00:03:03.095
We are now in a position where we have the random number and also the user guesses.

00:03:03.095 --> 00:03:07.870
Now we need a way to compare these two values and check if they are right.

00:03:07.870 --> 00:03:11.015
Let's do this in the compareGuess function.

00:03:11.015 --> 00:03:13.700
We're going to create three different outcomes.

00:03:13.700 --> 00:03:15.650
The first one, we're going to check if

00:03:15.650 --> 00:03:19.860
the user's guess is higher than the computer's guess.

00:03:20.300 --> 00:03:23.915
We'll then add a second condition of "else if",

00:03:23.915 --> 00:03:29.020
and this will check if the user's guess is less than the computer's guess.

00:03:29.020 --> 00:03:32.295
Finally, we'll add an "else" section.

00:03:32.295 --> 00:03:37.180
It's just for if the user's guess is equal to the computer's guess.

00:03:37.180 --> 00:03:40.640
First of all, let's deal with the user guess being too high.

00:03:40.640 --> 00:03:43.310
Now, all we're going to do is to output a message to

00:03:43.310 --> 00:03:48.925
the user, so "document.getElementbyId".

00:03:48.925 --> 00:03:52.600
An ID which we want to grab is our text output.

00:03:52.600 --> 00:03:55.040
This is our level three heading up at the top which is

00:03:55.040 --> 00:03:58.170
going to replace the text of your guess.

00:04:01.130 --> 00:04:04.495
To do this, we set the innerHTML,

00:04:04.495 --> 00:04:07.445
and it can be a string of texts which says,

00:04:07.445 --> 00:04:09.900
"Your guess is too high."

00:04:11.210 --> 00:04:14.330
We also need to clear this form input.

00:04:14.330 --> 00:04:18.470
Currently, when we add the value inside here and then hit enter,

00:04:18.470 --> 00:04:21.265
the value still stays inside here.

00:04:21.265 --> 00:04:24.630
So let's go back and add this inside the "if" section.

00:04:24.630 --> 00:04:26.850
Currently, we have the input box just here.

00:04:26.850 --> 00:04:30.370
So we can grab this line of code just here,

00:04:30.920 --> 00:04:36.745
bring this over, and we can set the value to be equal to an empty string.

00:04:36.745 --> 00:04:40.020
The next section which is the "else if",

00:04:40.020 --> 00:04:43.265
this is going to check if the user's guess is too low.

00:04:43.265 --> 00:04:46.250
We can pretty much do the same inside this section,

00:04:46.250 --> 00:04:49.075
our message is going to be too low.

00:04:49.075 --> 00:04:51.450
Finally, in the "else" section,

00:04:51.450 --> 00:04:53.055
we can also add this in.

00:04:53.055 --> 00:04:57.635
We don't need to reset the input field since the game is over.

00:04:57.635 --> 00:05:02.820
All we need to do is to set a message which is going to be "Correct."

00:05:03.200 --> 00:05:06.950
We can now go ahead and test this inside the browser.

00:05:06.950 --> 00:05:08.885
But just before we do, let's grab

00:05:08.885 --> 00:05:13.025
our computerGuess and we can now put this inside the console.

00:05:13.025 --> 00:05:14.810
Let's do this in the "init" function,

00:05:14.810 --> 00:05:17.180
so we see this as soon as our game loads.

00:05:17.180 --> 00:05:19.955
We have our computer guess which is just here.

00:05:19.955 --> 00:05:23.560
Let's do a console log with this value.

00:05:23.560 --> 00:05:29.115
Over to the browser, we can now right-click and "Inspect" to open up the console.

00:05:29.115 --> 00:05:31.220
We now have a value of 83.

00:05:31.220 --> 00:05:33.035
Let's click on easy.

00:05:33.035 --> 00:05:35.890
If we go lower, let's say 10.

00:05:35.890 --> 00:05:37.800
Oops, it says it's correct,

00:05:37.800 --> 00:05:39.390
so let's see what we've done.

00:05:39.390 --> 00:05:41.369
Back to our function.

00:05:41.369 --> 00:05:45.105
So when the userGuess is greater than the computerGuess,

00:05:45.105 --> 00:05:49.210
userGuess, this ones to be a computerGuess.

00:05:49.220 --> 00:05:51.330
Let's try this one more time.

00:05:51.330 --> 00:05:53.775
We have a value of 25.

00:05:53.775 --> 00:05:56.220
So we'll go lower, we'll say 10.

00:05:56.220 --> 00:05:59.985
Your guess is too low. Now we'll go for 50.

00:05:59.985 --> 00:06:01.665
Your guess is too high.

00:06:01.665 --> 00:06:06.235
Let's try 25, and we get the message of correct.

00:06:06.235 --> 00:06:11.940
Now we've successfully compared the user's guess with the random number.
