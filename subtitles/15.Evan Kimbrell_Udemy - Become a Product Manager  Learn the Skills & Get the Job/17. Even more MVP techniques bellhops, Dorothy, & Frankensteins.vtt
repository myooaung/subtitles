WEBVTT
0
1
00:00:00.280 --> 00:00:06.330
So the next MVP we're going to cover is the
concierge service MVP. Concierge is, for those of you 
1

2
00:00:06.330 --> 00:00:08.910
that didn't grow up in a mansion,
2

3
00:00:08.910 --> 00:00:14.760
it's a service where you get one-on-one support from
someone who manually walks you through some task.
3

4
00:00:14.760 --> 00:00:15.140
it's a service where you get one-on-one support from
someone who manually walks you through some task.
4

5
00:00:15.150 --> 00:00:18.120
It's like a concierge desk at a fancy hotel.
5

6
00:00:18.210 --> 00:00:23.760
If you call the concierge, you can ask them to do pretty much anything, and they'll try to personally help you do it.
6

7
00:00:23.760 --> 00:00:25.140
If you call the concierge, you can ask them to do pretty much anything, and they'll try to personally help you do it.
7

8
00:00:25.140 --> 00:00:31.410
So, in this MVP, instead of making the feature or product,
what you can do is launch an informal offering
8

9
00:00:31.410 --> 00:00:37.830
to a small subset of users or potential users.
Tell them it's a beta program, or just tell them it's a
9

10
00:00:37.830 --> 00:00:45.000
new thing that you're planning out and just starting to do,
then you can manually help them accomplish
10

11
00:00:45.000 --> 00:00:47.610
the task your proposed feature or product would do.
11

12
00:00:47.610 --> 00:00:53.370
The idea here is that if you are manually there to help them accomplish their task, you can see firsthand
12

13
00:00:53.760 --> 00:00:56.950
whether or not what you are doing is helpful and necessary.
13

14
00:00:57.030 --> 00:01:03.150
Let's give an example. Let's say Amazon wanted to build a bot,
and that bot could take written requests
14

15
00:01:03.150 --> 00:01:08.340
and then go and fetch things it thought the customer might want. Sounds like a really expensive thing to build, right?
15

16
00:01:08.340 --> 00:01:09.170
and then go and fetch things it thought the customer might want. Sounds like a really expensive thing to build, right?
16

17
00:01:09.210 --> 00:01:09.720
and then go and fetch things it thought the customer might want. Sounds like a really expensive thing to build, right?
17

18
00:01:09.780 --> 00:01:10.320
Well, what you can do instead of building that complex algorithm is just find some power users and say, "Hey,
18

19
00:01:10.380 --> 00:01:16.920
Well, what you can do instead of building that complex algorithm is just find some power users and say, "Hey,
19

20
00:01:17.070 --> 00:01:18.620
we're launching a new service.
20

21
00:01:18.630 --> 00:01:24.270
Tell us what you're looking for and we'll come back with personalized recommendations." And then, through
21

22
00:01:24.330 --> 00:01:30.060
e-mail, just help them fetch the items. See if they like it
and see if they continue to ask for more things,
22

23
00:01:30.060 --> 00:01:34.990
and also, see exactly what they plan to use the service for.
23

24
00:01:35.050 --> 00:01:40.440
That then tells you who to focus on and
what areas to prioritize when you launch.
24

25
00:01:40.440 --> 00:01:46.950
A great example of a concierge MVP in action was a company
called Rent the Runway, it started up a long time ago,
25

26
00:01:46.950 --> 00:01:47.210
A great example of a concierge MVP in action was a company
called Rent the Runway, it started up a long time ago,
26

27
00:01:47.220 --> 00:01:52.920
very successful now. They rent out really fancy dresses to women who want really fancy dresses but don't want to buy them for ever,
27

28
00:01:52.920 --> 00:01:54.510
very successful now. They rent out really fancy dresses to women who want really fancy dresses but don't want to buy them for ever,
28

29
00:01:54.510 --> 00:01:55.310
they just want to wear them 
29

30
00:01:55.310 --> 00:02:02.160
once. They launched with an in-person concierge service on college campuses, where they physically helped
30

31
00:02:02.160 --> 00:02:08.960
women pick dresses, get them, stock them,
organize them, return them, and then charge them.
31

32
00:02:08.970 --> 00:02:11.970
It was a hit, it was easy to figure out what people wanted,
32

33
00:02:11.970 --> 00:02:15.430
they built the product around their feedback, and the rest is history.
33

34
00:02:15.510 --> 00:02:23.280
The next MVP we're going to talk about is the piecemeal MVP.
A piecemeal MVP is where instead of building
34

35
00:02:23.280 --> 00:02:29.370
out your product, you take what's available in the form of
out of the box softwares, and by piecing those
35

36
00:02:29.370 --> 00:02:36.690
softwares together, you can match the functionality you need
to test the basic version of what you're trying to build.
36

37
00:02:36.690 --> 00:02:37.400
softwares together, you can match the functionality you need
to test the basic version of what you're trying to build.
37

38
00:02:37.410 --> 00:02:42.040
Now, there are tons and tons of platforms
out there and that's why this works.
38

39
00:02:42.120 --> 00:02:48.240
You can use a Weebly, or a Wix, or a SquareSpace
to create a page that can take orders, send emails
39

40
00:02:48.660 --> 00:02:51.180
send text messages, really do a lot.
40

41
00:02:51.210 --> 00:02:58.350
You can seek software like Formstack, or Typeform, or JotForm
to create forms that can do advanced calculations
41

42
00:02:58.350 --> 00:03:00.390
and have advanced features.
42

43
00:03:00.420 --> 00:03:05.920
Want to send text messages and have
entire systems built off that? You can use Twilio.
43

44
00:03:06.030 --> 00:03:08.580
You can use Recurly to manage subscriptions.
44

45
00:03:08.580 --> 00:03:15.990
There are just tons and tons of services out there for
almost anything you can think of doing. Now with
45

46
00:03:15.990 --> 00:03:20.790
some creativity, you can take these things
and stick them together into a Frankenstein
46

47
00:03:23.790 --> 00:03:28.380
that gets the job done until you can then
justify using real resources.
47

48
00:03:28.380 --> 00:03:33.840
Groupon is a great example of a company that used this MVP. Groupon is that company that for so long just bombarded
48

49
00:03:33.840 --> 00:03:40.500
your email inbox with flash deals on things from spa packages,
to skydiving, to that restaurant you
49

50
00:03:40.500 --> 00:03:48.750
vaguely heard of. Well, they didn't want to build out
the complex system to take orders, manage their
50

51
00:03:48.750 --> 00:03:54.060
clientele, the actual stores, and generate the coupons,
so they instead created their site on WordPress.
51

52
00:03:54.060 --> 00:03:54.080
clientele, the actual stores, and generate the coupons,
so they instead created their site on WordPress.
52

53
00:03:54.090 --> 00:03:59.880
And this is back when they were called The Point.
The WordPress site then would email every time there
53

54
00:03:59.880 --> 00:04:05.790
was an order, and then they would use Apple Mail and
a thing called Apple Script, so that when it received
54

55
00:04:05.790 --> 00:04:13.410
an email, it could just run some basic logic on it and
generate a coupon that would then auto send back 
55

56
00:04:13.410 --> 00:04:15.360
to the person who needed it.
56

57
00:04:15.360 --> 00:04:15.560
All right.
57

58
00:04:15.570 --> 00:04:22.050
So we're at the last MVP tactic that we're going to cover.
This one's called The Wizard of Oz MVP.
58

59
00:04:22.130 --> 00:04:22.350
.
59

60
00:04:25.170 --> 00:04:33.840
The Wizard of Oz MVP is an MVP that from the front looks to be completely made, but all the tasks that computers
60

61
00:04:33.900 --> 00:04:39.780
and automated systems would normally be doing is actually
carried out manually behind the scenes by an individual.
61

62
00:04:39.780 --> 00:04:40.820
and automated systems would normally be doing is actually
carried out manually behind the scenes by an individual.
62

63
00:04:40.830 --> 00:04:46.110
It's just a fact of engineering that when you build a web
or mobile product, the largest portion of your
63

64
00:04:46.170 --> 00:04:52.590
effort is going to be dedicated towards making the server side logic
i.e. the parts of the website that make it work.
64

65
00:04:52.680 --> 00:04:53.720
effort is going to be dedicated towards making the server side logic
i.e. the parts of the website that make it work.
65

66
00:04:53.760 --> 00:04:55.650
but no one ever physically sees.
66

67
00:04:55.740 --> 00:04:58.630
So in this MVP, you take advantage of that.
67

68
00:04:58.650 --> 00:05:04.470
You develop a front-end design that looks entirely functional,
but you just have someone ready on standby
68

69
00:05:04.470 --> 00:05:10.080
to fulfill whatever the user thinks should be happening in the app.
69

70
00:05:10.110 --> 00:05:15.990
So let's say you had a social network and you wanted
to start a feature that matched people based off
70

71
00:05:15.990 --> 00:05:18.110
of their interests and their profile information.
71

72
00:05:18.140 --> 00:05:23.160
Instead of building out the complex algorithm for
matching people and then seeing if people want to
72

73
00:05:23.160 --> 00:05:28.740
use it after the fact, you could build up the button that
says "Match me," and then every time someone clicks
73

74
00:05:28.740 --> 00:05:35.180
that, you manually had someone look at their profile
and match them to someone, email them the results.
74

75
00:05:35.240 --> 00:05:35.900
Voila.
75

76
00:05:35.910 --> 00:05:38.030
Now, why do we call it Wizard of Oz?
76

77
00:05:38.040 --> 00:05:42.090
Well, if you watched The Wizard of Oz, I mean, it's a classic.
77

78
00:05:42.090 --> 00:05:47.010
But remember when they get through the entire yellow brick road, only to find out the Great Wizard of Oz was
78

79
00:05:47.010 --> 00:05:48.100
But remember when they get through the entire yellow brick road, only to find out the Great Wizard of Oz was
79

80
00:05:48.180 --> 00:05:55.200
actually a man behind a curtain, pulling levers to make special effects, to create that giant emerald face that was so scary.
80

81
00:05:55.200 --> 00:05:56.550
actually a man behind a curtain, pulling levers to make special effects, to create that giant emerald face that was so scary.
81

82
00:06:01.990 --> 00:06:07.980
.
82

83
00:06:08.940 --> 00:06:11.340
So this is the software version of that.
83

84
00:06:11.370 --> 00:06:18.530
The classic example of this was Zappos - they created an
online shoe store, but they didn't stock any shoes, so
84

85
00:06:18.550 --> 00:06:21.350
when people ordered through their online store,
85

86
00:06:21.360 --> 00:06:29.100
they walked across the street and bought it from an
actual brick and mortar store, then mailed it. That
86

87
00:06:29.100 --> 00:06:34.920
way, they didn't have to build any server side logic,
they didn't have to buy any inventory, and they could
87

88
00:06:34.920 --> 00:06:39.040
pretty much say they offered whatever
the people down the street offered.
88

89
00:06:39.040 --> 00:06:44.460
Alright guys, that's the whirlwind tour of all the MVPs
that you need to know about. The following lectures, we're
89

90
00:06:44.460 --> 00:06:46.790
going to talk about each one in-depth.
90

91
00:06:46.800 --> 00:06:50.610
You can skip some of them if you're not interested in a specific one.
91

92
00:06:50.610 --> 00:06:55.510
Otherwise, I'll see you then.
