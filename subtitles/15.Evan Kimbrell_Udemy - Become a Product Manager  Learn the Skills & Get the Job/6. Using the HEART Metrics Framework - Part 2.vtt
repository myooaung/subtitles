WEBVTT
0
1
00:00:00.150 --> 00:00:01.780
So let's go onto the Signals column. So what signals, what things are we going to track in order to know about happiness?
1

2
00:00:01.780 --> 00:00:08.510
So let's go onto the Signals column. So what signals, what things are we going to track in order to know about happiness?
2

3
00:00:08.670 --> 00:00:11.120
Well, how about the AppStore rating?
3

4
00:00:11.190 --> 00:00:16.630
That's a pretty good signal for the happiness of
people using the app. If you don't believe me,
4

5
00:00:16.680 --> 00:00:18.740
just go to any app, any popular app,
5

6
00:00:18.740 --> 00:00:23.120
look at all the ratings, and people who are saying
"Oh, I love this thing," or "Oh, I hate this thing."
6

7
00:00:23.130 --> 00:00:26.190
This is a really good number to judge happiness from.
7

8
00:00:26.190 --> 00:00:29.530
Secondly, we could track the scores from the NPS survey.
8

9
00:00:29.550 --> 00:00:30.670
Do you remember what that was?
9

10
00:00:30.750 --> 00:00:32.060
Net Promoter Score.
10

11
00:00:32.130 --> 00:00:39.540
That's just kind of an industry standard way of measuring
user happiness through a score through 1
11

12
00:00:39.630 --> 00:00:46.260
to 10 that they say "I am very likely or
not very likely to recommend this to a friend."
12

13
00:00:46.320 --> 00:00:49.200
So how about for engagement? What signal should we track there?
13

14
00:00:49.350 --> 00:00:54.900
Well, how about the number of orders per customer,
let's say, in a period of a day or something, and then
14

15
00:00:54.900 --> 00:00:56.990
how about the order value?
15

16
00:00:57.030 --> 00:01:04.800
So we want to get them to order as much stuff in one
basically order as possible, as many dollars worth
16

17
00:01:04.800 --> 00:01:07.350
of product as we can possibly get them to do.
17

18
00:01:07.350 --> 00:01:10.230
So what do we need to track for adoption as a signal?
18

19
00:01:10.230 --> 00:01:14.700
What is that thing that we need to be able
to extract from a database or whatever?
19

20
00:01:14.760 --> 00:01:22.890
Well, we know that we need to know the number of people who have ordered at least one glass of lemonade using our app.
20

21
00:01:22.920 --> 00:01:24.300
Well, we know that we need to know the number of people who have ordered at least one glass of lemonade using our app.
21

22
00:01:24.300 --> 00:01:26.580
That's what we are calling adopted.
22

23
00:01:26.590 --> 00:01:32.280
These people have adopted our product,
because they've tried it at least once.
23

24
00:01:32.280 --> 00:01:36.030
That's the thing we need to track. Who has done this at least once?
24

25
00:01:36.150 --> 00:01:41.520
Now, on the other hand, we need to be able to find out
how that compares to people who have not adopted
25

26
00:01:41.520 --> 00:01:47.350
the product, but they have downloaded the app
or downloaded it and then uninstalled it, for instance.
26

27
00:01:47.370 --> 00:01:52.090
So we also need to know the number of people
that have downloaded it in total,
27

28
00:01:52.110 --> 00:01:54.170
because we want to be able to compare these two, remember?
28

29
00:01:54.180 --> 00:02:00.660
So the signal for retention is just going to be, we just
need to know who has ordered spiked lemonade, and
29

30
00:02:00.720 --> 00:02:06.150
we actually also need to know that time periods when
they have done that, so that we can say, okay, this
30

31
00:02:06.150 --> 00:02:12.460
was in one month, and then this other time they did it
in the next month, but we're assuming, because this
31

32
00:02:12.460 --> 00:02:16.550
is Signals, this is the thing we're tracking,
this stuff is in a database somewhere.
32

33
00:02:16.680 --> 00:02:19.810
Databases always carry what's called a time stamp,
33

34
00:02:19.830 --> 00:02:23.470
so we always know when a particular thing
happened in a database.
34

35
00:02:23.520 --> 00:02:27.410
So for task success, what should our signals be there?
35

36
00:02:27.600 --> 00:02:32.780
Well, how about the number of people
who did not complete an order?
36

37
00:02:32.940 --> 00:02:34.280
What do we need from that, like,
what in the database should we track?
37

38
00:02:34.290 --> 00:02:35.510
What do we need from that, like,
what in the database should we track?
38

39
00:02:35.520 --> 00:02:36.720
What do we need from that, like,
what in the database should we track?
39

40
00:02:36.720 --> 00:02:42.570
How about just the people that have added something
to their cart and they never actually went
40

41
00:02:42.570 --> 00:02:45.830
and clicked on the, you know, "finalize purchase" button?
41

42
00:02:45.960 --> 00:02:52.470
And, if you remember, we were concerned with the people
that are ordering within that five-minute window,
42

43
00:02:52.470 --> 00:02:55.230
because we want our app to be super quick to order stuff,
43

44
00:02:55.320 --> 00:03:01.050
so we need to know the amount of time that people are
spending from opening the app and saying "Yeah,
44

45
00:03:01.050 --> 00:03:05.970
I want to buy lemonade" all the way to the time where they have successfully clicked that sort of "finalize purchase" button.
45

46
00:03:05.970 --> 00:03:07.130
I want to buy lemonade" all the way to the time where they have successfully clicked that sort of "finalize purchase" button.
46

47
00:03:07.260 --> 00:03:13.050
So the last column, metrics, this is the easy one.
We just take our goal, and we take our signal, which is
47

48
00:03:13.050 --> 00:03:18.990
a thing that we were actually physically going to track
in the database, and we just say over a period of time,
48

49
00:03:18.990 --> 00:03:19.980
a thing that we were actually physically going to track
in the database, and we just say over a period of time,
49

50
00:03:20.040 --> 00:03:21.100
this is the metric.
50

51
00:03:21.100 --> 00:03:26.230
So, for the happiness one, we said that we were
going to track the AppStore rating.
51

52
00:03:26.370 --> 00:03:32.790
So, for happiness as a metric over time, we just say AppStore rating over time. What's the AppStore rating from month to month?
52

53
00:03:33.000 --> 00:03:34.220
So, for happiness as a metric over time, we just say AppStore rating over time. What's the AppStore rating from month to month?
53

54
00:03:34.260 --> 00:03:38.040
That's our metric. Then, because we're also
sending out those NPS surveys,
54

55
00:03:38.040 --> 00:03:44.430
like I mentioned, we may also want to say,
"Okay, how many people have given us a perfect 10 score?"
55

56
00:03:44.520 --> 00:03:51.090
What percentage of total users that have actually
filled out the survey have given us a perfect score?
56

57
00:03:51.090 --> 00:03:51.540
What percentage of total users that have actually
filled out the survey have given us a perfect score?
57

58
00:03:51.540 --> 00:03:53.850
Those are two really good indicators of happiness.
58

59
00:03:53.850 --> 00:03:59.280
So, for the engagement, as a product manager at this
company or a CEO, we're going to want to know what
59

60
00:03:59.280 --> 00:04:03.500
is the average order value of all of our customers per day.
60

61
00:04:03.510 --> 00:04:10.020
By that I mean, let's say we have 100 customers and
all of them are placing orders in between $1 and $10.
61

62
00:04:10.020 --> 00:04:10.990
By that I mean, let's say we have 100 customers and
all of them are placing orders in between $1 and $10.
62

63
00:04:11.160 --> 00:04:17.250
If the average is $5, then that's the number we're seeing
when we pull up our metrics screen and we want
63

64
00:04:17.250 --> 00:04:24.510
to basically move that closer and closer to 10 or further
than that, if we're shooting for a much larger
64

65
00:04:24.510 --> 00:04:31.440
number. Then, we want to know the average
number of orders that the users make per day.
65

66
00:04:31.440 --> 00:04:40.260
So, let's say, again, we have 100 users and, on average,
like 90 of them are placing one order a day,
66

67
00:04:40.260 --> 00:04:40.290
So, let's say, again, we have 100 users and, on average,
like 90 of them are placing one order a day,
67

68
00:04:40.290 --> 00:04:45.080
but there are some power users, there are 10 people
that order like five or six of these per day.
68

69
00:04:45.190 --> 00:04:47.140
We take all of that and we average it out.
69

70
00:04:47.160 --> 00:04:49.590
That's the number that we'll be tracking over time.
70

71
00:04:49.710 --> 00:04:56.370
So then, for adoption, again, we want to know some sort
of metric coming from the goal we have, and then
71

72
00:04:56.370 --> 00:05:02.220
the signal which is, I think, in the database we're tracking.
What do we know about, how many people have
72

73
00:05:02.220 --> 00:05:04.830
adopted this? What does adoption mean?
73

74
00:05:04.950 --> 00:05:11.410
Well, we already said that it is people that
have ordered at least one glass of lemonade.
74

75
00:05:11.430 --> 00:05:16.820
So what we're going to do is we're going to take the
number of people that have downloaded the app in
75

76
00:05:16.820 --> 00:05:22.280
general, and we're going to find out what percentage
of them have actually ordered one successfully.
76

77
00:05:22.280 --> 00:05:28.890
Notice how we divided those two things. We basically
say people that have made successful orders versus
77

78
00:05:29.120 --> 00:05:37.400
people in general and we're going to call this metric the
new users to customers rate or, let's say, adoption rate.
78

79
00:05:37.400 --> 00:05:37.940
people in general and we're going to call this metric the
new users to customers rate or, let's say, adoption rate.
79

80
00:05:37.940 --> 00:05:40.760
So then, for retention, we're going to want to know
80

81
00:05:40.760 --> 00:05:46.350
our retention rate, that's going to be our metric, because
we know, again, the only thing we were tracking
81

82
00:05:46.640 --> 00:05:53.900
with the signals column was the, you know, for retention,
it was just, okay, who is ordering? So what people?
82

83
00:05:53.910 --> 00:05:53.950
with the signals column was the, you know, for retention,
it was just, okay, who is ordering? So what people?
83

84
00:05:53.960 --> 00:05:56.470
Maybe we assigned them an id in the database or something.
84

85
00:05:56.510 --> 00:05:59.640
And again, we know that the database
has a time associated with it,
85

86
00:05:59.720 --> 00:06:05.070
so we want to know, of the people that were here last month,
86

87
00:06:05.060 --> 00:06:10.280
did they return this month? We're going to divide
those two and we're going to basically call them the
87

88
00:06:10.280 --> 00:06:12.920
retained users and that will be our retention rate.
88

89
00:06:13.010 --> 00:06:13.840
That's our metric.
89

90
00:06:13.960 --> 00:06:20.150
Okay, so task success. If you remember,
on the goals part of the task access for this app,
90

91
00:06:20.370 --> 00:06:26.010
we said that users should be able to check out really
quickly, because our app is really easy to use.
91

92
00:06:26.000 --> 00:06:26.240
we said that users should be able to check out really
quickly, because our app is really easy to use.
92

93
00:06:26.490 --> 00:06:32.180
And, if you remember, on the signals part we said
in the database we're going to track how long people
93

94
00:06:32.190 --> 00:06:38.600
spend in the app and specifically how long they spend
between the time they basically open it and indicate
94

95
00:06:38.610 --> 00:06:42.620
they want to place an order to the time that
they actually complete that order.
95

96
00:06:42.830 --> 00:06:49.370
So, for the metric that we're going to track here,
it's just going to be the average time it takes everyone
96

97
00:06:49.380 --> 00:06:51.980
that uses our app to complete their order.
97

98
00:06:51.990 --> 00:06:58.430
So if we have 100 users and they're taking, you know,
three minutes, four minutes, four and a half,
98

99
00:06:58.440 --> 00:07:00.130
some are taking six or seven,
99

100
00:07:00.140 --> 00:07:06.390
we take the average of that and we use that as our metric,
and we try to get that average as low as possible.
100

101
00:07:06.400 --> 00:07:06.460
we take the average of that and we use that as our metric,
and we try to get that average as low as possible.
101

102
00:07:06.530 --> 00:07:13.130
And then for minimizing abandoned carts, we wanted to know, remember, in the signals column, we wanted to
102

103
00:07:13.130 --> 00:07:17.410
know the number of people that indicated
they wanted to start an order,
103

104
00:07:17.570 --> 00:07:23.180
and then the number that actually completed the order,
and we just do the math there and then we have
104

105
00:07:23.180 --> 00:07:29.810
a ratio of completed orders, and we have a ratio also of incomplete orders, and we said we were going to try to minimize that.
105

106
00:07:29.810 --> 00:07:31.210
a ratio of completed orders, and we have a ratio also of incomplete orders, and we said we were going to try to minimize that.
106

107
00:07:31.380 --> 00:07:32.650
So that's it.
107

108
00:07:32.750 --> 00:07:34.080
That's all of the stuff.
108

109
00:07:34.160 --> 00:07:37.340
And if you put all this together, it's just a really big table.
109

110
00:07:37.380 --> 00:07:43.310
So that's why I showed it to you sort of one column, one row
at a time, because it can look a little daunting at first.
110

111
00:07:43.310 --> 00:07:43.930
So that's why I showed it to you sort of one column, one row
at a time, because it can look a little daunting at first.
111

112
00:07:43.980 --> 00:07:48.200
So once you've got this all sort of filled out you
can just take a look at it, and it's a really good
112

113
00:07:48.200 --> 00:07:53.040
guide to thinking about the kinds of stuff
that you should be potentially tracking.
113

114
00:07:53.040 --> 00:07:57.650
However, there are some tips I want to give you on
using this framework, because there are a lot of open
114

115
00:07:57.650 --> 00:08:00.300
questions I find when people use this for the first time.
115

116
00:08:00.320 --> 00:08:05.940
First of all, people always ask whether or not you can use this for a product, or an entire company, or just a small feature.
116

117
00:08:05.930 --> 00:08:07.350
First of all, people always ask whether or not you can use this for a product, or an entire company, or just a small feature.
117

118
00:08:07.620 --> 00:08:12.270
Well, you can use this for anything. This framework,
the HEART metrics framework, is very flexible.
118

119
00:08:12.380 --> 00:08:19.940
So you could use it at a small company in order to
think about the customer lifecycle journey through
119

120
00:08:19.980 --> 00:08:25.320
the entire product that the company has, and you can also
use it at a huge company, where you're a product manager
120

121
00:08:25.310 --> 00:08:33.360
on a team that is only working on a small feature,
because even features have adoption rates in this
121

122
00:08:33.360 --> 00:08:36.950
sort of thing, and happiness with a particular feature, etc.
122

123
00:08:37.040 --> 00:08:40.500
So you can use this for either, it's useful for both.
123

124
00:08:40.500 --> 00:08:46.950
Second, this metrics framework is used for reporting metrics,
not exploratory metrics. Remember, exploratory
124

125
00:08:46.940 --> 00:08:52.530
metrics were just data points we have in our database
that we can go query, like, whenever we want to
125

126
00:08:52.550 --> 00:08:55.240
basically find out a little bit about user behavior,
126

127
00:08:55.250 --> 00:08:59.390
but it's not stuff that we're saying to ourselves
"This needs to be on a dashboard."
127

128
00:08:59.390 --> 00:09:04.420
So this framework is for the stuff that is on the dashboard,
it's the stuff that you do report up.
128

129
00:09:04.430 --> 00:09:08.410
You report it to your investors, you report it
to your executives, or your boss.
129

130
00:09:08.420 --> 00:09:11.240
That's what this framework is for - the reporting metrics.
130

131
00:09:11.250 --> 00:09:15.870
Thirdly, it's important to know that you don't have
to use all of the metrics that you've come up with
131

132
00:09:15.950 --> 00:09:19.490
when you're doing this exercise and putting together this table.
132

133
00:09:19.860 --> 00:09:21.840
The reason is because it's pretty overwhelming.
133

134
00:09:21.840 --> 00:09:25.210
There's a bunch of stuff you'll end up with in the metrics column,
134

135
00:09:25.330 --> 00:09:27.900
where you're saying "Wow, I have to track all of these."
135

136
00:09:28.110 --> 00:09:34.340
Well, it's not always the case that you need to track
every single one of these, but it's a good exercise to
136

137
00:09:34.350 --> 00:09:40.080
sort of list out the things you might track, and then you
may only say "Oh, I only want to track engagement
137

138
00:09:40.350 --> 00:09:41.960
and I only want to track happiness,
138

139
00:09:42.140 --> 00:09:49.040
but the other stuff like task success or adoption,
I'm not going to track that, someone else will, or it's
139

140
00:09:49.040 --> 00:09:50.980
not important to our company at this time."
140

141
00:09:51.080 --> 00:09:52.890
So don't think you have to use everything.
141

142
00:09:52.880 --> 00:09:58.010
Just pick the ones that you really think are very
important for your business or your product.
142

143
00:09:58.010 --> 00:09:59.980
So the fourth thing is actually really cool,
143

144
00:10:00.000 --> 00:10:05.340
and that is that the signals column can actually be
used as a sort of guide to what you need to do
144

145
00:10:05.340 --> 00:10:10.710
on the engineering side to get a hold of these metrics
and put them in the database so that you can track them.
145

146
00:10:10.700 --> 00:10:11.500
on the engineering side to get a hold of these metrics
and put them in the database so that you can track them.
146

147
00:10:11.750 --> 00:10:16.940
Let's say, again, that you don't have metrics being tracked
and you've got a new product or you're working
147

148
00:10:16.940 --> 00:10:22.010
on a new feature at a company and you say "All right,
we need some metrics, because that's how we're going
148

149
00:10:22.010 --> 00:10:25.160
to define success, and that's how
we're going to know if we succeeded."
149

150
00:10:25.160 --> 00:10:26.470
And you don't have anything.
150

151
00:10:26.480 --> 00:10:31.170
Well, basically, you could just do this exercise, you can
take the signals column, because, remember, that's
151

152
00:10:31.160 --> 00:10:33.700
the stuff that we want to track, that's the actual data we need,
152

153
00:10:33.710 --> 00:10:35.820
the stuff that we want to track, that's the actual data we need,
153

154
00:10:36.020 --> 00:10:40.790
and you can just hand that, basically that column,
to your engineers, and talk it over with them, and be
154

155
00:10:40.790 --> 00:10:46.880
like, "Here's the signals that I need from the database,
and then we need to basically turn them into a ratio and 
155

156
00:10:46.880 --> 00:10:48.380
express them as a metric."
156

157
00:10:48.380 --> 00:10:55.110
But it's a really handy way to show engineers what
kind of data do you need from the back-end in order
157

158
00:10:55.110 --> 00:10:57.640
to know whether or not you're doing well.
158

159
00:10:57.650 --> 00:11:00.190
So that's it for the HEART metrics framework.
159

160
00:11:00.200 --> 00:11:06.630
It's a really handy tool, more like an exercise, actually,
to get you thinking about metrics in a sort 
160

161
00:11:06.620 --> 00:11:08.860
of a way that follows the customer journey.
161

162
00:11:09.020 --> 00:11:14.950
And on that note, the next lecture also does the
same thing in a little bit of a different way.
162

163
00:11:15.000 --> 00:11:19.850
It's another metrics framework, and it's called
AARRR metrics, pirate metrics.
163

164
00:11:19.860 --> 00:11:22.600
It's pretty common in Silicon Valley.
164

165
00:11:22.670 --> 00:11:24.830
So check it out and I'll see you there.
