0
1
00:00:04,430 --> 00:00:05,240
What's up, everyone?
1

2
00:00:05,310 --> 00:00:06,530
Welcome back.
2

3
00:00:06,540 --> 00:00:11,880
So, in this section, we're going to get into the real nuts
and bolts of product management and managing
3

4
00:00:11,880 --> 00:00:13,080
a project day to day as a PM. This lecture is a little
bit longer, but it's extremely important,
4

5
00:00:13,200 --> 00:00:19,140
a project day to day as a PM. This lecture is a little
bit longer, but it's extremely important,
5

6
00:00:19,170 --> 00:00:21,590
so I really recommend you pay attention here.
6

7
00:00:21,600 --> 00:00:27,960
So, before we start talking about building, we need to
understand that the things companies build come
7

8
00:00:27,960 --> 00:00:32,830
from an overall vision that's established
by the CEO or founder.
8

9
00:00:32,910 --> 00:00:37,590
So the question is, how does this vision
turn into things that get built?
9

10
00:00:37,710 --> 00:00:41,460
Okay, so we know that the CEO, and founder, or executives,
10

11
00:00:41,460 --> 00:00:45,570
they have this vision that they want to achieve
about where the company is going,
11

12
00:00:45,690 --> 00:00:52,140
and really what the purpose is in two, three, or five
years. In order to achieve the vision, the company
12

13
00:00:52,320 --> 00:00:58,250
has to have goals that they want to reach to achieve it,
to get there to that vision. Like vision,
13

14
00:00:58,260 --> 00:01:04,920
the goals are decided by the executives, but then they're defined further into metrics usually, like "increase 
14

15
00:01:04,920 --> 00:01:07,080
new users by 5% this year."
15

16
00:01:07,080 --> 00:01:12,130
So, once these goals are established, the management
teams come up with what are called initiatives.
16

17
00:01:12,150 --> 00:01:17,250
These are things that the whole company is going
to do and build in order to reach those goals.
17

18
00:01:17,250 --> 00:01:23,340
An example of initiative would be "translate the product into three other languages this year." Underneath initiatives,
18

19
00:01:23,520 --> 00:01:24,490
An example of initiative would be "translate the product into three other languages this year." Underneath initiatives,
19

20
00:01:24,510 --> 00:01:26,840
we have what are called releases.
20

21
00:01:26,970 --> 00:01:32,120
Now, don't worry too much about releases right now,
because it's not really the same at every single company.
21

22
00:01:32,160 --> 00:01:33,530
Now, don't worry too much about releases right now,
because it's not really the same at every single company.
22

23
00:01:33,750 --> 00:01:34,850
But really what it is, it's just a grouping of new features or functionality that's released to the users, to the public, on one
23

24
00:01:34,880 --> 00:01:42,180
But really what it is, it's just a grouping of new features or functionality that's released to the users, to the public, on one
24

25
00:01:42,180 --> 00:01:44,190
particular date or time period.
25

26
00:01:44,190 --> 00:01:49,290
We can continue our example and say that if we translated
the product into three additional languages,
26

27
00:01:49,620 --> 00:01:55,320
we might decide that we have one release in February,
where all three languages are available to the public.
27

28
00:01:55,320 --> 00:01:55,900
we might decide that we have one release in February,
where all three languages are available to the public.
28

29
00:01:55,950 --> 00:02:01,530
That would be our release, but underneath releases,
there are features and functionality that get released.
29

30
00:02:01,920 --> 00:02:06,330
The product management world calls these epics.
Underneath epics,
30

31
00:02:06,360 --> 00:02:10,590
there are things called stories and requirements, but
we're going to talk about that part in another lecture.
31

32
00:02:10,590 --> 00:02:11,750
there are things called stories and requirements, but
we're going to talk about that part in another lecture.
32

33
00:02:11,910 --> 00:02:17,380
Let's finish off this lecture by diving deeper
into this concept of what epics are.
33

34
00:02:17,430 --> 00:02:23,970
First, we must start with a statement of things that
we're building to solve a problem, and clearly show
34

35
00:02:24,060 --> 00:02:28,840
what features or functionality we intend to build in order to do that.
35

36
00:02:28,890 --> 00:02:35,910
This is what we call an epic. We learned in previous
lectures about the concepts behind minimum viable
36

37
00:02:35,910 --> 00:02:39,720
products, customer interviews, and wireframing.
37

38
00:02:39,750 --> 00:02:46,710
We use these tools to help us make the right decisions
in solving user problems with features, but once
38

39
00:02:46,710 --> 00:02:53,220
we know what we want to actually build,
how do we actually get it built?
39

40
00:02:53,220 --> 00:02:55,210
Well, that's what all of this stuff is going to be about,
40

41
00:02:55,230 --> 00:02:58,080
and that in particular is where epics come in.
41

42
00:02:58,080 --> 00:03:05,280
An epic is really just product management lingo for a grouping of one or more features or functionalities that we want to build.
42

43
00:03:05,580 --> 00:03:07,230
An epic is really just product management lingo for a grouping of one or more features or functionalities that we want to build.
43

44
00:03:07,230 --> 00:03:13,470
It's the fundamental brick that we build with
as a product manager and a product team.
44

45
00:03:13,500 --> 00:03:19,590
Just so you know, usually a product team will build out 3-5
epics during a quarter, like a quarter of a year.
45

46
00:03:19,590 --> 00:03:20,670
Just so you know, usually a product team will build out 3-5
epics during a quarter, like a quarter of a year.
46

47
00:03:20,670 --> 00:03:22,580
This depends on the company size and all that,
47

48
00:03:22,590 --> 00:03:28,140
but, in general, this really just depends on how much
effort the epic's going to take and that sort of thing.
48

49
00:03:28,440 --> 00:03:29,200
In real life, an epic example would be something like "translate the app to Spanish" or "implement photo sharing indirect
49

50
00:03:29,220 --> 00:03:37,160
In real life, an epic example would be something like "translate the app to Spanish" or "implement photo sharing indirect
50

51
00:03:37,170 --> 00:03:41,910
messages" or "allow users to upgrade to a pro membership."
51

52
00:03:41,910 --> 00:03:48,660
This stuff might sound a lot to you like a feature,
and that's because it is. One of the reasons that
52

53
00:03:48,660 --> 00:03:56,160
we use the term "epic" instead of "feature" is because
not all things we do as a product team result in
53

54
00:03:56,160 --> 00:03:59,340
a new feature for an outside user,
so the term reduces confusion.
54

55
00:03:59,490 --> 00:04:01,860
a new feature for an outside user,
so the term reduces confusion.
55

56
00:04:01,980 --> 00:04:05,720
There are some other reasons as well but
we're not going to really get into it here.
56

57
00:04:05,760 --> 00:04:08,240
It's something that will become apparent as you continue.
57

58
00:04:08,250 --> 00:04:15,240
For instance, we could have an epic that is called
"migrate our data to a new database."
58

59
00:04:15,240 --> 00:04:20,670
This isn't really a feature for end users, like the people
that are using our product, but it's something
59

60
00:04:20,670 --> 00:04:27,000
that internally our engineers might need to do,
and we might need to do it to make sure we can scale,
60

61
00:04:27,720 --> 00:04:30,050
or that we can support more users in the future,
61

62
00:04:30,090 --> 00:04:35,430
So we've still got to do it and it would still be
called an epic. Epics are also defined as a piece of
62

63
00:04:35,430 --> 00:04:38,610
work that takes longer than one sprint to build.
63

64
00:04:38,610 --> 00:04:44,520
If there's something smaller that you want to build
and it's going to take less time than one sprint,
64

65
00:04:44,940 --> 00:04:47,700
then it wouldn't really need its own epic,
it would just need a user story.
65

66
00:04:47,700 --> 00:04:49,710
then it wouldn't really need its own epic,
it would just need a user story.
66

67
00:04:49,710 --> 00:04:55,020
Now, don't worry quite yet about user stories, because
we're going to talk about that in another lecture,
67

68
00:04:55,230 --> 00:05:01,800
but just know that epics are above user stories, they contain features, and functionalities, and user stories inside of them.
68

69
00:05:01,800 --> 00:05:02,580
but just know that epics are above user stories, they contain features, and functionalities, and user stories inside of them.
69

70
00:05:02,580 --> 00:05:10,110
So, epics are the fundamental groupings of features
or functionalities that teams build. In the next lecture,
70

71
00:05:10,170 --> 00:05:15,240
we're going to talk about what they actually look like
in real life and how you might go about making one.
71

72
00:05:15,250 --> 00:05:15,470
we're going to talk about what they actually look like
in real life and how you might go about making one.
