WEBVTT

00:00.090 --> 00:06.750
In the last lecture, we set up Jenkins on Amazon SC two, and that is the most practical and real world

00:06.750 --> 00:07.830
way of running.

00:07.830 --> 00:08.580
Jenkins.

00:08.700 --> 00:16.110
And as I said before, all the demos and real world use cases in this lecture will be demonstrated using

00:16.110 --> 00:18.090
Jenkins running on EC2.

00:18.420 --> 00:24.930
And if you use RT to micro, that should be covered under free tier and you should not incur any cost

00:24.930 --> 00:25.950
for Jenkins.

00:26.610 --> 00:31.920
But optionally some of you want to run Jenkins on your local desktop or laptop.

00:31.980 --> 00:34.440
So in this lecture I'm going to go over that.

00:34.440 --> 00:41.070
But note that if you are following my demos and you pass an error while you run Jenkins and Local,

00:41.070 --> 00:43.200
you need to troubleshoot that yourself.

00:43.440 --> 00:45.210
All right, let's get started.

00:46.760 --> 00:53.870
So the way we are going to run Jenkins on our local laptop or desktop is we are going to grab the Jenkins

00:53.870 --> 01:01.490
container image from Docker Hub and then we are going to run that image in our desktop and then access

01:01.490 --> 01:04.340
the Jenkins running within that container image.

01:04.790 --> 01:06.610
A couple of things to keep in mind.

01:06.620 --> 01:14.270
To run this, you need Docker running on your local machine and any time you push on a source code into

01:14.270 --> 01:18.890
your GitHub repository, it should trigger the Jenkins job using a webhook.

01:18.920 --> 01:20.030
More on that later.

01:20.030 --> 01:25.290
But if you are using Jenkins on your local desktop or laptop, you won't be able to do that.

01:25.310 --> 01:29.870
And another thing, in some use cases, Jenkins will create a Docker.

01:30.020 --> 01:37.610
Now, since Jenkins itself is running on Docker, that means for those use cases you need darker and

01:37.610 --> 01:41.630
darker and darker and darker is prone to errors.

01:41.630 --> 01:46.820
So you might get some error, but if you want to install Jenkins on your local and want to play around,

01:46.820 --> 01:48.620
by all means, please go ahead.

01:48.710 --> 01:52.810
So first we need a Jenkins Docker container image.

01:52.820 --> 01:58.430
And to do that, we have to go where all the Docker container lives in the Internet.

01:58.430 --> 01:59.600
Docker hub.

02:01.570 --> 02:08.050
So I'm going to Docker Hub dot com and then in the search bar I'm going to type in Jenkins.

02:10.650 --> 02:13.980
Then click the Fast Jenkins official image.

02:14.310 --> 02:18.240
Now scroll down a little bit, and this is the important part.

02:18.390 --> 02:28.580
This image has been deprecated for over two years in favor of this Jenkins slash Jenkins Colon Ltz image.

02:28.590 --> 02:34.620
So we are just going to click this and it is going to take you to the most current image.

02:34.950 --> 02:41.820
So as you can see, this is a fully functional Jenkins server based on the weekly and LTZ releases.

02:42.090 --> 02:50.030
Now before we run Docker Pool or Docker run, click on this documentation for usage options.

02:50.040 --> 02:53.370
So I'm going to right click an open link in a new tab.

02:53.610 --> 03:00.630
If you scroll down, there are different ways to execute the command and we are going to use this third

03:00.630 --> 03:01.500
command.

03:01.500 --> 03:10.440
So to go over different options minus D runs the Docker in the background, minus V is an important

03:10.440 --> 03:11.180
option.

03:11.190 --> 03:14.640
This creates a Docker volume on the host machine.

03:14.640 --> 03:21.360
So when you run your Jenkins, you create user ID password, you create pipelines, you install new

03:21.360 --> 03:29.160
plugins, all that information is stored in the Docker volume that will survive the container stop,

03:29.160 --> 03:30.960
restart and deletion.

03:31.110 --> 03:39.030
The Jenkins underscore home will be the name of the Docker volume and slash var slash Jenkins underscore

03:39.030 --> 03:43.830
home is where it will get the data from the running container.

03:44.160 --> 03:47.100
And then we have two different port mappings.

03:47.100 --> 03:55.820
The first port mapping 8080 colon 88 t simply maps the container port attached to the localhost port

03:55.830 --> 03:56.640
88.

03:56.790 --> 04:04.890
By default, Jenkins exposes itself in this port so we can run localhost colon 88 to access our Jenkins

04:04.890 --> 04:05.550
server.

04:05.850 --> 04:13.560
The second port option, which is mapping 50,000 port number from container to 50,000 in the local host,

04:13.560 --> 04:17.610
is useful if you want to connect to a worker agent.

04:17.760 --> 04:23.670
If you run the builds on the primary node out of the box, then we don't need this.

04:23.670 --> 04:28.080
But it's easier to just copy, paste and run the command, so we'll keep it for now.

04:28.620 --> 04:33.810
And finally, the name of the container image Jenkins slash Jenkins Colon.

04:33.810 --> 04:34.650
Let's.

04:35.260 --> 04:40.150
So I'm going to copy this command, then go back to my terminal.

04:40.510 --> 04:44.610
You should have Docker up and running in your local desktop to validate.

04:44.620 --> 04:47.440
I'm just going to run Docker version.

04:51.080 --> 04:51.410
Okay.

04:51.440 --> 04:54.830
As you can see, Docker is running in my local desktop.

04:55.280 --> 04:59.450
So now I'm going to pass the command and press enter.

05:03.960 --> 05:07.030
To validate if our container is running.

05:07.050 --> 05:13.530
Run Docker piece and you can see our container is up and running.

05:14.130 --> 05:18.740
We need to get a authentication key to access it from the website.

05:18.750 --> 05:21.330
For that we need to go to Docker logs.

05:21.330 --> 05:27.510
So we're going to run Docker logs and the name of the container ID.

05:27.540 --> 05:30.420
So I'm just going to copy this container ID.

05:32.650 --> 05:34.970
And you should see a section like this.

05:34.990 --> 05:37.270
Jenkins initial setup is required.

05:37.270 --> 05:39.400
An admin user has been created.

05:39.400 --> 05:43.330
Please use the following password to proceed to installation.

05:43.330 --> 05:50.920
So I'm going to double click this and then copy this and then I'm going to access localhost colon attached.

05:51.550 --> 05:53.770
So I'm going to open another tab.

05:54.780 --> 05:59.070
Typing localhost colon 880.

05:59.700 --> 06:00.510
Here we go.

06:00.510 --> 06:06.270
And I'm going to pest the administrator password that we copied from the docker logs.

06:06.300 --> 06:07.940
Click continue.

06:09.240 --> 06:12.420
And then select install suggested plug ins.

06:14.190 --> 06:17.340
And it is going to install all the recommended plug ins.

06:22.410 --> 06:26.130
After all the plugins are installed, you will get this screen.

06:26.400 --> 06:32.820
So create a admin user, fill up the fields, just remember the username and password.

06:33.090 --> 06:39.090
Every time you stop the container and restart it, you need to give that user ID and password to log

06:39.090 --> 06:39.840
back in.

06:40.650 --> 06:43.530
So I'm going to click Save and Continue.

06:44.710 --> 06:46.630
Click Save and finish.

06:47.460 --> 06:48.830
Jenkins is ready.

06:48.840 --> 06:51.060
Click start using Jenkins.

06:52.590 --> 06:55.740
And that should take you to the familiar Jenkins console.

06:55.920 --> 06:56.430
All right.

06:56.430 --> 06:59.970
So at this point, Jenkins is up and running in your local desktop.

07:00.450 --> 07:03.810
All right, folks, that's how you install Jenkins in your local.

07:03.840 --> 07:04.910
That's it for this one.

07:04.920 --> 07:06.660
I'll see you guys and gals in the next one.
