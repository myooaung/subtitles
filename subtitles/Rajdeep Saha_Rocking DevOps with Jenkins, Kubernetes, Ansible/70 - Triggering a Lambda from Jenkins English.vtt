WEBVTT

00:00.120 --> 00:06.510
In this lecture, we are going to learn how you can execute Lambda or any other service for that matter,

00:06.510 --> 00:07.710
from Jenkins.

00:08.880 --> 00:13.350
These are the high level steps to execute any service from Jenkins.

00:13.860 --> 00:18.120
Find out the scale command to execute the service.

00:18.880 --> 00:25.360
Attach necessary policy to the Jenkins agent so that Jenkins have the appropriate permission to invoke

00:25.360 --> 00:26.710
the service.

00:27.190 --> 00:30.570
Use the appropriate select command in the Jenkins file.

00:30.580 --> 00:35.080
And finally, if the command gives the response back, gather the response.

00:35.260 --> 00:38.650
For this example, we are going to execute a w s lambda.

00:38.860 --> 00:46.570
A w s lambda is a very popular W service which can run code without managing any servers, whether physical

00:46.570 --> 00:47.530
or virtual.

00:47.830 --> 00:53.740
A w s lambda is highly available, scalable, and you only pay for use.

00:53.740 --> 00:57.100
So if your lambda is not executing, you do not pay anything.

00:57.640 --> 01:04.210
Some of the good use case for lambda are backend of arrest API or even driven architecture to work lambda

01:04.210 --> 01:04.990
with Jenkins.

01:04.990 --> 01:11.800
Some of the use cases can be if you want to run some integration tests using Lambda, you could do that.

01:11.950 --> 01:18.430
Or perhaps the Jenkins job failed and you want to notify multiple groups and one to insert some record

01:18.430 --> 01:23.500
into a database so you can invoke the lambda from Jenkins job for particular conditions.

01:23.500 --> 01:25.150
Now let's do step one.

01:25.150 --> 01:30.280
We need to find the SQL Command to find out how to invoke a lambda.

01:30.670 --> 01:37.030
So I'm going to show you how to do that so that you can mimic this for all the services as needed.

01:37.030 --> 01:43.060
So I'm just going to Google invoke A s lambda cli and the first link should be it.

01:43.090 --> 01:49.510
Similarly, if you want to invoke a S3 bucket command or some other command, you can simply Google

01:49.510 --> 01:50.080
that.

01:50.080 --> 01:51.640
So let's click invoke.

01:51.640 --> 01:57.190
So this is for W lambda and the command is invoke if we scroll down.

01:57.190 --> 01:59.170
So this is the syntax.

01:59.170 --> 02:03.370
So W lambda invoke and then dash dash function name.

02:03.730 --> 02:06.310
All right, so now we have the command.

02:06.310 --> 02:11.530
Next thing we need to do is attach the policy to the Jenkins agent.

02:11.830 --> 02:15.010
In our case, Jenkins is running on EC2.

02:15.190 --> 02:18.190
Specifically, they are easy to with the name Jenkins.

02:18.520 --> 02:26.050
To find out the IAM role attached to the AC to we go to the security tab and then click the IAM role

02:26.470 --> 02:28.450
and then it displays the permission.

02:28.450 --> 02:35.050
As you could see, it doesn't have the permission to invoke Lambda to attach permission, click add

02:35.050 --> 02:37.570
permission and then attach policies.

02:37.990 --> 02:41.560
And then in the search, search lambda.

02:42.560 --> 02:44.630
There are two types of policies.

02:44.630 --> 02:48.030
One is customer managed, another one is less managed.

02:48.050 --> 02:54.740
So I'm going to click this type icon so that we get data with managed policies.

02:55.040 --> 03:02.690
For Lambda, we need to select this as lambda role, which allows invoking any lambda function.

03:02.780 --> 03:10.590
Note that this very popular Lambda Basic execution role is not to invoke lambda.

03:10.610 --> 03:18.040
Rather, this is lambda basic execution role policy is attached to the role to the lambda.

03:18.050 --> 03:24.300
We are looking for a policy which can be attached to the ESI too, which allows us to invoke Lambda.

03:24.320 --> 03:28.220
This other role create the log in cloud, watch anywhere.

03:28.250 --> 03:30.350
Select this lambda role.

03:30.680 --> 03:35.570
And again for other services, you need to find the similar, similar policy.

03:35.600 --> 03:38.630
Scroll down, click attach policies.

03:39.880 --> 03:40.420
All right.

03:40.420 --> 03:45.280
Our Lambda role is attached to the AC two role where Jenkins is running.

03:45.610 --> 03:53.170
And let's say for this example, to keep it fun, I'm running this lambda called get bitcoin price and

03:53.170 --> 04:01.900
this lambda call this URL which grabs the Bitcoin price from coindesk and then it passes the JSON and

04:01.900 --> 04:09.190
grab the price in USD and then it shows the output price of the bitcoins and then it shows the price.

04:09.430 --> 04:17.980
So if you want to test it out, I click test and this is the output response price of bitcoin is $47,286.

04:18.160 --> 04:18.640
All right.

04:18.640 --> 04:20.590
So now let's go to the Jenkins console.

04:20.590 --> 04:21.970
Click New Item.

04:22.300 --> 04:26.680
I'm going to name the job as execute Lambda zero on Pipeline Project.

04:26.680 --> 04:27.070
Click.

04:27.070 --> 04:30.550
Okay, scroll down for simplicity.

04:30.550 --> 04:33.370
I'm not going to do this in GitHub by this point.

04:33.370 --> 04:40.330
You folks already know how to grab the Jenkins file from GitHub repository, so I'm just going to select

04:40.330 --> 04:44.260
Hello World and then I'm going to put my command here.

04:44.260 --> 04:52.600
So SQL commands are the Linux command and we include Linux commands inside a SAGE statement.

04:52.600 --> 04:58.990
And if we go back to the Lambda Invoke, so we have to put a W.

04:58.990 --> 05:03.640
S Lambda Invoke and then dash dash function name.

05:04.430 --> 05:05.630
That's what we're going to do.

05:05.660 --> 05:14.360
NWS Lambda invoke dash dash function dash name.

05:14.570 --> 05:18.360
And the name of the function is get bitcoin price.

05:18.380 --> 05:25.610
I'm just going to copy this and I believe this command should give a response OC out file.

05:25.850 --> 05:28.790
If you scroll down it's going to show some examples as well.

05:28.820 --> 05:32.210
Here you go, lambda invoke function name.

05:32.240 --> 05:37.910
You can pass a payload if needed, but this function doesn't take any payload, so I'm going to not

05:37.910 --> 05:38.840
pass anything.

05:38.840 --> 05:45.590
But we do want to save the response in this response, that JSON file or you can give any name for that

05:45.590 --> 05:46.640
response output.

05:47.360 --> 05:48.620
I'm going to give

05:50.900 --> 05:55.820
response JSON and then we want to display.

05:56.670 --> 05:58.680
The response just on file.

05:59.130 --> 06:01.500
So here I'm going to create another step.

06:04.110 --> 06:06.540
I'm going to name this as invoke lambda.

06:06.840 --> 06:11.510
Copy the stage display output.

06:11.520 --> 06:19.590
So display output will simply be cat command and then name of the output file.

06:19.590 --> 06:20.880
So cat responds.

06:21.090 --> 06:25.970
Jason Let's save this and click Build now.

06:27.750 --> 06:29.150
All right, it failed.

06:29.160 --> 06:30.480
So let's troubleshoot this.

06:30.480 --> 06:31.160
This is good.

06:31.170 --> 06:32.850
This is like live troubleshooting.

06:33.150 --> 06:37.290
Click console output nws lamda invoke.

06:37.320 --> 06:39.330
You must specify a region.

06:39.330 --> 06:41.610
You can also configure your region by running it.

06:41.880 --> 06:42.420
Configure.

06:42.690 --> 06:50.070
All right, so on the ESI to where the Jenkins is running, we did not run a configure, but instead

06:50.070 --> 06:55.290
what we are going to do is we are going to include the region option directly in the Jenkins file.

06:55.320 --> 06:57.540
So let's go back to the configure.

06:58.230 --> 07:02.520
So in my case, the region is US West too.

07:04.260 --> 07:07.830
You can also find out the region from here on the top.

07:07.830 --> 07:11.980
Right, you can click this arrow and it's going to show the region you are in.

07:12.000 --> 07:17.160
Like I said, I'm currently in the US West to going back to the Jenkins file.

07:17.460 --> 07:17.940
All right.

07:17.940 --> 07:21.660
Does this region US West to click save?

07:22.630 --> 07:23.760
Let's try again.

07:23.770 --> 07:24.610
Build now.

07:25.550 --> 07:25.970
All right.

07:25.970 --> 07:27.210
It ran successfully.

07:27.230 --> 07:28.820
Let's check out the output.

07:29.300 --> 07:30.530
Console output.

07:30.560 --> 07:32.950
So the job invoked the lambda, the status quo.

07:32.990 --> 07:34.230
200 is good.

07:34.250 --> 07:36.410
It executed the latest version.

07:36.440 --> 07:38.680
You can also call the allies and stuff.

07:38.690 --> 07:42.110
Just check out the documentation, how to call different kinds of lambdas.

07:42.470 --> 07:52.010
And then I'm running cat response to JSON and it gave us the response price of bitcoin is 47,282 and

07:52.010 --> 07:54.260
some USD into this debt.

07:54.440 --> 07:57.350
So this is how you can run any command.

07:57.350 --> 08:03.920
So if you need to execute a rest API or you need to trigger a step function and that's the function

08:03.920 --> 08:05.690
can go do different steps.

08:05.720 --> 08:07.130
It can do all that.

08:07.700 --> 08:12.440
Alright folks, this is how you can invoke any service from Jenkins file.

08:12.470 --> 08:13.510
That's it for this one.

08:13.520 --> 08:15.320
I'll see you guys and gals in the next one.
