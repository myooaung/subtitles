WEBVTT

00:00.150 --> 00:01.140
Hello, boys and girls.

00:01.170 --> 00:02.790
Moment of truth.

00:02.820 --> 00:06.660
We are going to spin up our very first X cluster.

00:06.660 --> 00:12.930
So we are going to use this command x, it'll create a cluster and then the name function and then a

00:12.930 --> 00:13.920
node group name.

00:13.920 --> 00:16.410
So okay, so I have the command here.

00:16.410 --> 00:18.990
I give a name so you can see it'll create a cluster.

00:18.990 --> 00:21.810
I gave the name ASICs little dust test.

00:22.170 --> 00:25.350
I am giving the node group name as G does default again.

00:25.350 --> 00:26.970
This is optional field.

00:26.970 --> 00:32.820
You don't have to create a node group and I'm saying the worker no type should be PT three micro and

00:32.820 --> 00:35.190
then I want two of those worker nodes.

00:35.520 --> 00:42.120
So the easiest way to do this is you can just copy this, go to your Visual Studio code or any terminal

00:42.120 --> 00:49.350
where you have the SLA installed and it gets it installed and you can just paste it, press enter and

00:49.350 --> 00:52.560
that should go create the X cluster.

00:52.560 --> 01:00.600
It does take 5 to 10 minutes because it is doing a lot of stuff under the hood, like creating VPC subnets,

01:00.600 --> 01:02.640
security groups, all that good stuff.

01:02.640 --> 01:08.550
So I'm going to pause the video and come back once this cluster is up and running OC Our exit command

01:08.550 --> 01:09.780
is done.

01:10.110 --> 01:12.120
So a couple of things I wanted to show you.

01:12.150 --> 01:18.090
One is it can still command behind the scenes, actually submits a cloud formation.

01:18.300 --> 01:20.910
In this case, it's submitted to cloud formation.

01:20.910 --> 01:27.690
One is exit l dacic still does test cluster for the actual cluster.

01:27.690 --> 01:30.990
And then we have another one for the Node group.

01:31.440 --> 01:38.790
So if you go to resources, you should see all the things that exit created security, egress, security

01:38.790 --> 01:44.070
group, ingress, auto scaling group, instance, profile, a bunch of stuff.

01:44.400 --> 01:51.300
And if I go to outputs, it's going to show you the instance profile area and for the worker nodes and

01:51.300 --> 01:52.780
the instance roll end.

01:52.800 --> 01:58.260
And next thing I wanted to show is if I go to the X console, you can see the cluster name.

01:58.280 --> 01:59.130
Exactly.

01:59.160 --> 02:00.090
That's test.

02:00.540 --> 02:06.720
So if I click it, it shows communities version 1.16 and then other details.

02:07.140 --> 02:07.500
Okay.

02:07.500 --> 02:13.800
So our first Kubernetes cluster is up and running, so we can run serial command there.

02:13.800 --> 02:20.190
So if we run Ctrl get all, we should not get anything except the default service.

02:20.580 --> 02:21.600
How do we go?

02:21.600 --> 02:28.170
So at this point you are all set to work with the six cluster in case you guys and gals are wondering,

02:28.170 --> 02:35.250
hey, how does Cube still know that which case cluster to go to?

02:35.250 --> 02:35.640
Right.

02:35.640 --> 02:40.230
I'm not giving like a cluster name here in this cube still command.

02:40.230 --> 02:41.580
I'm just saying get hall.

02:42.150 --> 02:44.850
So this is because of the cube config.

02:44.850 --> 02:49.200
So you can see this cube still command should work with this cube config.

02:49.200 --> 02:51.870
And then if we have multiple cluster, you can switch.

02:51.870 --> 02:54.540
But hold off on that question.

02:54.870 --> 02:59.460
We are going to handle that in a later lecture because that is a little advanced.

02:59.460 --> 03:03.450
But for now you can just spin up a cluster and use cube ctrl.

03:03.450 --> 03:09.000
So when you are creating the cluster or want to do any change using x ctrl.

03:09.450 --> 03:12.390
So we we typed the whole command here, right?

03:12.390 --> 03:17.430
So we type this exit, create cluster command with all the parameters in the command line and press

03:17.500 --> 03:18.060
enter.

03:18.180 --> 03:20.190
So there is another way to do this.

03:20.190 --> 03:29.610
Instead of typing all the parameters in the command line itself, you can have a config file for example,

03:29.610 --> 03:31.710
like it'll create node group.

03:32.010 --> 03:37.290
So I have this config file where we put the parameters here.

03:37.290 --> 03:45.150
Let's say the name, we can settle this test for region us two means this config file is going to act

03:45.150 --> 03:50.280
on a on a cluster with dynamic s, it'll test on us west two.

03:50.520 --> 03:57.060
And then I have two node groups, not group one, which is energy one public and regular node group.

03:57.060 --> 04:01.320
And then I have another manage note groups don't think too much about what's the difference between

04:01.320 --> 04:01.830
these two.

04:01.860 --> 04:08.280
All have separate lectures on node groups, so let's say we want to create this node groups.

04:08.280 --> 04:15.550
So one option is of course we can do X, it'll create a node group and then give bunch of parameters

04:15.550 --> 04:16.080
there.

04:16.080 --> 04:25.200
But instead what we could do is X, it'll create node group and then we can pass the name of the config

04:25.200 --> 04:25.560
file.

04:25.560 --> 04:31.470
So we say does dash config file and then we give the case it'll dash create death engine.

04:31.650 --> 04:39.210
So what's going to do is it's going to go to the cluster with dynamic etc. that test on us west to it's

04:39.210 --> 04:44.970
going to create these two node groups one energy, one public and another energy to managed.

04:45.330 --> 04:46.230
So let's do that.

04:46.230 --> 04:47.850
So let me create this.

04:47.850 --> 04:49.770
So let's press enter.

04:50.040 --> 04:55.950
So this will also submit a cloud formation behind the scene so you can see two cloud formation running

04:56.040 --> 04:57.690
for two different node groups.

04:58.020 --> 04:59.910
So I'm going to pause the video and come back.

05:00.130 --> 05:03.670
After a few minutes, our cloud formations are done.

05:04.240 --> 05:09.460
So we're going to go back to the terminal and then if we run case, it'll get Node group.

05:09.730 --> 05:12.610
In our case, it'll dust test cluster.

05:12.700 --> 05:15.970
We can see there are three node groups in this cluster.

05:15.970 --> 05:22.150
One is n g does default that we created when we created the CAS cluster and then we create an energy

05:22.150 --> 05:24.910
one public and energy two managed.

05:24.970 --> 05:33.040
So similarly, instead of giving all the parameters, you can also create a cluster using a config file.

05:33.370 --> 05:35.830
So this will be a sample config file for that.

05:35.830 --> 05:45.250
You can just do X, it'll create cluster and then it will just give config dust file equal to the name

05:45.250 --> 05:53.500
of this file which is x ctrl dash create dash cluster dot yaml.

05:53.590 --> 05:59.830
So what's going to do is it's going to create a cluster with a node group named n g that's default with

05:59.830 --> 06:03.010
2t3 micro instances.

06:03.280 --> 06:03.820
All right.

06:03.820 --> 06:09.970
So this is how you create cluster using commands or config file and change it.

06:10.510 --> 06:12.190
So only one thing left to do.

06:12.220 --> 06:13.540
Very important thing.

06:13.990 --> 06:15.820
We cannot delete the cluster.

06:16.090 --> 06:17.800
So how do you delete it?

06:17.800 --> 06:19.000
Pretty straightforward.

06:19.000 --> 06:23.170
So you can run this, you can still get get cluster.

06:23.440 --> 06:26.830
So this will give you the names of all the clusters that's running.

06:27.100 --> 06:31.720
But in this case, we have only one cluster running, so we are going to delete this.

06:31.750 --> 06:32.080
Okay.

06:32.080 --> 06:33.280
How do we delete it?

06:33.280 --> 06:42.220
It can still delete cluster and then you give that dash name and then you pass the name of the cluster.

06:44.320 --> 06:47.560
So in this case it is Zika still does test.

06:47.650 --> 06:53.140
So I'm going to press enter and it's going to delete everything related to the cluster.

06:53.140 --> 06:56.140
So behind the scene, I think you guys and girls probably guessed it.

06:56.170 --> 07:01.030
It's just going and deleting all the cloud formation and all that associated resources.

07:01.180 --> 07:01.740
All right.

07:01.750 --> 07:03.700
Seems like our request cluster is deleted.

07:03.700 --> 07:05.110
You can validate it.

07:08.410 --> 07:11.590
By running, you can still get cluster again.

07:11.590 --> 07:14.800
And in this time, no clusters found.

07:15.340 --> 07:21.760
All right, girls, now you know how to create X cluster and how to delete it.

07:21.820 --> 07:22.950
Hello, magazine, girls.

07:22.960 --> 07:24.820
See you in the next video by.
