WEBVTT

00:00.090 --> 00:06.180
In this hands on Jenkins lecture, we are going to learn how you can run a shell script from your Jenkins

00:06.180 --> 00:06.600
job.

00:06.630 --> 00:08.340
All right, let's get started.

00:08.370 --> 00:14.970
The shell script we are going to learn is under the scripts folder in my DevOps course repository,

00:14.970 --> 00:16.250
and it has the script.

00:16.260 --> 00:17.010
Say hello.

00:17.700 --> 00:20.120
S.H. Let's understand what the script does.

00:20.130 --> 00:23.270
The first line just flips the script for one second.

00:23.280 --> 00:30.330
I just wanted to show that you can add delays and pause in the Jenkins job this way as well, and then

00:30.330 --> 00:32.400
it's regular shell scripting language.

00:32.700 --> 00:36.900
So this shell script is expecting to input parameters.

00:37.170 --> 00:42.690
So if the number of input parameters is not equal to two, then I'm saying, hey, you should enter

00:42.690 --> 00:49.500
the topic and target and then I'm exiting the shell script else if we got those two parameters, I am

00:49.500 --> 00:56.280
assigning the first input parameter that we received to the variable topic underscore name and the second

00:56.280 --> 00:58.650
input parameter assigning to target.

00:58.650 --> 01:05.370
And I'm simply doing a echo line dollar topic, underscore name and get dollar target.

01:06.180 --> 01:09.030
The Jenkins file for the script is this.

01:09.510 --> 01:15.960
So this Jenkins file is accepting two parameters a string name, topic, underscore name and string

01:15.960 --> 01:16.830
target.

01:16.830 --> 01:22.200
And the topic name has the default value of DevOps and the target has the default value of dream job.

01:22.860 --> 01:25.050
And the stages are pretty straightforward.

01:25.200 --> 01:28.380
There is only one stage which is calling the shell script.

01:28.680 --> 01:36.120
Before you can call the shell script, you have to run a mod command to give access to the Jenkins user

01:36.450 --> 01:38.640
so that it can run the shell script.

01:38.640 --> 01:41.700
Else you might get a permission error to run the shell script.

01:41.700 --> 01:42.930
It's a shell command.

01:43.200 --> 01:48.870
You have to specify the folder where the shell script is at, and then I'm calling say hello message

01:48.900 --> 01:51.060
and then passing this to parameters.

01:51.060 --> 01:57.540
And note that that this two parameter name does not need to match what you have in the shell script.

01:57.540 --> 01:58.560
I mean, I'm keeping it.

01:58.560 --> 02:00.510
Same for ease of understanding.

02:00.510 --> 02:03.090
You can define the parameters with different names.

02:03.240 --> 02:11.850
Also note that I commented out this clone repo stage because if you are using Jenkins console and then

02:12.240 --> 02:19.020
pointing the Jenkins file to get repository, it automatically combs the whole repository.

02:19.710 --> 02:21.750
But even if you put it, it doesn't matter.

02:21.750 --> 02:23.340
It's not going to clone it again.

02:23.340 --> 02:26.610
It's going to recognize that it already cloned it and it's going to skip it.

02:27.480 --> 02:27.870
All right.

02:27.870 --> 02:31.080
So now let's jump into Jenkins and create the Jenkins job.

02:31.080 --> 02:35.940
So last thing I want to say is a note that the Jenkins file is in the root folder.

02:35.940 --> 02:41.400
So Jenkins file underscore script and the shell script is inside the scripts folder.

02:41.400 --> 02:46.440
If everything is under the root folder, a different folder, you can adjust the path accordingly.

02:46.950 --> 02:52.050
All right, now let's jump into the Jenkins console and create our Jenkins job as well as Click New

02:52.050 --> 02:53.640
Item, then give an m.

02:53.640 --> 02:57.810
I gave the name run shell script zero one pipeline click.

02:57.810 --> 03:00.690
Okay, scroll down.

03:01.440 --> 03:05.130
All right, we want the pipeline script from SQM Select.

03:05.130 --> 03:08.130
Get back to my repository code.

03:08.130 --> 03:09.890
Copy that extra gypsy URL.

03:09.900 --> 03:11.340
Pass the URL.

03:11.370 --> 03:16.170
This is a private repository, so I have to give my credentials.

03:17.640 --> 03:23.100
The main branch is main and under script path.

03:23.130 --> 03:25.860
The name of the Jenkins file is Jenkins file.

03:25.860 --> 03:27.540
Underscore script.

03:27.930 --> 03:29.190
All right, click save.

03:30.000 --> 03:31.380
All right, let's run.

03:31.380 --> 03:32.280
Build now.

03:32.310 --> 03:38.670
If you already watch the Parameterized Jenkins job lecture, you know there is a quirk the first time

03:38.670 --> 03:44.340
the job doesn't get the parameter because it closed the Jenkins file, but at that point, the job already

03:44.340 --> 03:45.300
started running.

03:45.750 --> 03:51.390
So the first time it doesn't take the input parameter, hence the shell script error out saying Hey,

03:51.390 --> 03:56.160
enter topic and target, so let's rerun this.

03:56.160 --> 04:01.440
So if we go back to the project now, you see the option build with parameters.

04:02.250 --> 04:04.740
So let's run this, build with parameters.

04:04.770 --> 04:07.620
I'll keep the default values click build.

04:08.100 --> 04:11.910
All right, let's check out the log for the call script click logs.

04:12.480 --> 04:15.270
It says Learn DevOps, get dream job.

04:15.390 --> 04:17.460
Let's rerun this again.

04:17.460 --> 04:18.240
Build.

04:18.240 --> 04:19.770
Let's put the topic name.

04:20.160 --> 04:23.820
All right, I'm passing cloud as the topic name and target money.

04:24.120 --> 04:25.320
Click Build.

04:25.770 --> 04:27.810
All right, let's check out the logs.

04:29.230 --> 04:30.210
Long cloud.

04:30.250 --> 04:31.240
Get money.

04:31.390 --> 04:36.700
All right, folks, this is how you run a shell script from your Jenkins file and your Jenkins job.

04:36.730 --> 04:37.830
That's it for this one.

04:37.840 --> 04:39.730
I'll see you guys and gals in the next lecture.
