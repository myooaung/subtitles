WEBVTT

00:03.520 --> 00:09.700
In this lecture, we're going to learn how you can pass inputs to Jenkins job as parameters.

00:10.150 --> 00:11.530
Why do we need this?

00:11.680 --> 00:18.730
Most of the times you will run some file or infrastructure as code in Jenkins that requires some user

00:18.730 --> 00:19.510
input.

00:19.540 --> 00:26.020
For example, if we want to create a WordPress single instance by running a cloud formation and if we

00:26.020 --> 00:32.440
open up this cloud formation, you can see this cloud formation expects a lot of input parameters such

00:32.440 --> 00:41.530
as key name, instance, type, S-H, location, DB name, DB, user password, etc. We can use Jenkins

00:41.530 --> 00:46.090
parameters to pass values into these cloud formation fields.

00:46.540 --> 00:51.910
In this way, you don't need to hardcoded the values as well as for subsequent runs.

00:51.910 --> 00:55.960
You can change up these values and run and test your cloud formation.

00:55.990 --> 01:00.490
For this example, I'm going to use the exact same cloud formation for the WordPress.

01:00.520 --> 01:06.910
I just copy pasted that cloud formation into this file into our DevOps git repository.

01:07.330 --> 01:11.200
And then for this Jenkins job, we have this Jenkins file.

01:11.650 --> 01:14.970
So I want to click that, ignore this first part.

01:14.980 --> 01:22.720
For now, we are just going to display the WordPress JSON cloud formation content using this Shell script

01:22.720 --> 01:23.500
command.

01:23.530 --> 01:28.540
When it comes to Jenkins job parameter, there are two ways to define it.

01:29.250 --> 01:32.340
One way is to using the Jenkins console.

01:32.400 --> 01:37.620
So if we give the name, example, parameter and a pipeline job, click, okay.

01:38.100 --> 01:39.410
You can see this option.

01:39.420 --> 01:42.390
This project is parameterized.

01:42.660 --> 01:45.690
You can select it and add the parameters.

01:46.170 --> 01:49.740
The most popular parameter type is string parameter.

01:49.860 --> 01:56.190
So let's say, for example, you want the database name to be accepted in the Jenkins job parameter

01:56.190 --> 01:59.460
so I can go back, give the name as the same name.

01:59.580 --> 02:01.350
We can give a default value.

02:05.120 --> 02:06.260
What database?

02:06.290 --> 02:12.770
You can give a little bit of description and then you can proceed and add multiple other parameters.

02:12.950 --> 02:19.220
So this is definitely the easy way, but I don't like this way to do that because then everything is

02:19.220 --> 02:21.110
controlled through console.

02:21.350 --> 02:24.590
I want to control everything from the Jenkins file, right?

02:24.590 --> 02:26.230
Because that's the idea of DevOps.

02:26.240 --> 02:29.630
We want to codify all the jobs and all the infrastructure.

02:29.930 --> 02:36.140
So I'm actually going to delete this parameter and now we are going to go over the Jenkins file.

02:37.450 --> 02:44.840
I have opened the cloud formation and the Jenkins file side by side to define the Jenkins job parameters.

02:44.860 --> 02:51.280
You need to have this parameter section and then you can define the type of parameter for this job.

02:51.280 --> 02:54.700
We are going to use the string parameter and try as parameter.

02:55.510 --> 02:56.680
For each parameter.

02:56.680 --> 02:58.930
You have to have the name of the parameter.

02:58.930 --> 03:04.540
You can think of it as the name of variable in the Jenkins job stack underscore name.

03:04.540 --> 03:07.360
This will be the name of the cloud formation stack.

03:07.360 --> 03:10.900
And then we're accepting parameters, underscore phylum.

03:11.380 --> 03:14.170
So this is another layer of abstraction.

03:14.170 --> 03:21.760
Instead of grabbing each parameter in the input, we want to list everything in a file in our repository,

03:21.760 --> 03:25.840
and we will simply pass the name of the file as the parameters file name.

03:26.050 --> 03:31.690
And then finally we are passing the template name, which is the actual name of the cloud formation

03:31.690 --> 03:32.410
template.

03:32.560 --> 03:38.320
And finally in the choice we are selecting which region we want this cloud formation to run.

03:38.770 --> 03:45.220
For our first iteration, we are just running a simple shell script command of displaying the content

03:45.220 --> 03:47.770
of this WordPress JSON cloud formation.

03:47.830 --> 03:56.620
So the beauty of this is you can reuse the same Jenkins job using this parameter to run multiple cloud

03:56.620 --> 04:02.500
formation because you can pass the name of the cloud formation in template, underscore name and the

04:02.500 --> 04:05.560
parameters in parameters, underscore file, underscore name.

04:05.950 --> 04:06.460
All right.

04:06.460 --> 04:10.120
But first, let's go ahead in the Jenkins and set up the job.

04:10.120 --> 04:15.910
So instead of selecting this project is parameterized, we are just going to select pipeline script

04:15.910 --> 04:20.140
from ICM and then Git and then give the repository URL.

04:22.020 --> 04:25.440
We have to adjust the name of the Jenkins file accordingly.

04:30.600 --> 04:31.590
Click Save.

04:31.860 --> 04:37.950
So there is a caveat here because Jenkins haven't grabbed the Jenkins file yet.

04:37.980 --> 04:42.090
It will only grab the Jenkins file the first time this job runs.

04:42.210 --> 04:48.360
That's why this Jenkins job doesn't know that these Jenkins job is parameterized and not going to ask

04:48.360 --> 04:50.590
you for these parameters for the first time.

04:50.610 --> 04:52.050
So let's try it out.

04:52.230 --> 04:54.300
So let's click build now.

04:54.990 --> 04:55.410
All right.

04:55.410 --> 04:57.240
This job ran successfully.

04:57.240 --> 04:59.110
If I go to the console output.

04:59.130 --> 05:01.080
It's showing the cloud formation.

05:01.870 --> 05:02.230
Now.

05:02.230 --> 05:03.100
Take a look.

05:03.130 --> 05:10.540
Now, if I go back to this job, you will see the building now has been replaced with build with parameters,

05:10.540 --> 05:16.750
because now this Jenkins job has grabbed the Jenkins files and knows that it needs to grab some user

05:16.750 --> 05:17.380
input.

05:17.860 --> 05:23.920
So if I click Build with parameters now it's asking me the name of the stack name, parameter, file,

05:23.920 --> 05:27.310
name, template, name and choice of our region.

05:27.520 --> 05:30.630
So this is how you pass parameters to Jenkins job.

05:30.640 --> 05:35.440
So in the next lecture, we are actually going to reuse this parameters and run our job.

05:35.470 --> 05:37.450
All right, folks, join me in the next lecture.
