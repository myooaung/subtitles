WEBVTT

00:00.090 --> 00:02.030
Welcome, girls, to this lecture.

00:02.040 --> 00:06.000
In this lecture, we are going to learn about X CTL.

00:06.540 --> 00:13.290
So if you guys and girls watch the last lecture, X CTL is my favorite way to spin up cluster.

00:13.290 --> 00:19.950
When you are learning and in testing and development outside of the DevOps tools which we have to implement

00:19.950 --> 00:20.790
in production.

00:21.270 --> 00:22.890
So what is the CTL?

00:23.520 --> 00:27.690
It is a CLI tool for creating clusters on ICS.

00:28.170 --> 00:31.770
So you can think of think of it as you go to a terminal.

00:31.770 --> 00:37.140
You, you type a command, press enter and it brings up a cluster.

00:37.740 --> 00:41.700
This is actually easier than console for real.

00:42.090 --> 00:46.110
So the reason is it abstracts lots of stuff.

00:46.800 --> 00:55.410
So let's say you want to create a CSS cluster with the manage node group or you want to create a cluster

00:55.410 --> 00:56.460
for target.

00:56.640 --> 01:03.540
So if you want to do that using console, you have to do multiple things like first, let's say for

01:03.630 --> 01:11.580
target you you have to create a guest cluster and then you have to go create a target profile and forget

01:11.580 --> 01:14.580
only works with the private subnet currently.

01:14.820 --> 01:22.260
So it has to make sure that all your subnets are the subnets you are going to use for the target is

01:22.410 --> 01:28.080
private ls is going to fail, which is a really pain in the butt because you at this point you have

01:28.080 --> 01:29.660
already created the cluster.

01:29.670 --> 01:35.220
Then you try to create forget profile and it's going to fail for regular guest cluster.

01:35.640 --> 01:41.580
If you want to create a node group, which is which, you are going to learn about it later on, if

01:41.580 --> 01:48.000
you want to do that from your console, then you have to go through multiple consoles in multiple clicks

01:48.000 --> 01:49.260
and multiple screens.

01:49.500 --> 01:55.830
And it also does a lot of things behind the scenes, such as if a new VPC needs to be created, new

01:55.830 --> 02:03.660
subnet, new security group, routing tables, all that stuff, it actually submits a cloud formation.

02:03.660 --> 02:09.720
And when we do that demo, you will see how much stuff it actually abstracts from you.

02:09.720 --> 02:18.100
It makes your life really easy so you, the almighty user, will submit a command, something like X,

02:18.150 --> 02:26.070
it'll create cluster and then it's going to bring up the ex cluster or the target running on x.

02:26.190 --> 02:33.510
So I know I put this against create cluster in here, but please don't submit it.

02:34.020 --> 02:34.490
Why?

02:34.500 --> 02:37.050
Because I'm going to show you in the next screen.

02:37.560 --> 02:39.240
So these are some commands.

02:39.240 --> 02:43.320
So if you type in this case, it'll create cluster and submit.

02:43.650 --> 02:45.690
It is going to create a case.

02:45.690 --> 02:54.750
However, it's going to create X with two MX five large worker nodes and then five dot large SC two

02:54.750 --> 02:59.130
does not fall under free tier and you have to pay for it.

02:59.130 --> 03:00.350
So what do you do?

03:00.360 --> 03:07.530
So generally this is the command I use so you can still create cluster and then that's just name.

03:07.530 --> 03:12.060
You can give a name to your ex cluster and then does dash fashion.

03:12.060 --> 03:19.470
You can specify which Kubernetes version you want to run in the case, and then this not tie field does

03:19.470 --> 03:20.820
does not type.

03:20.850 --> 03:25.350
This is where you can put in the instance type that you want to use.

03:25.920 --> 03:32.880
So I'm going to put t three dot micro because they are the free tier and then DAZ does nodes too.

03:32.880 --> 03:36.030
That means it will spin up to worker nodes.

03:36.360 --> 03:41.610
So if you want one worker nodes, you make this one and if you want three, you put this three, you

03:41.610 --> 03:42.420
got the idea.

03:42.660 --> 03:48.870
So what it does create a cluster with Kubernetes version 1.15 with 2t3 micro nodes.

03:49.440 --> 03:52.860
So next command is also quite commonly used.

03:53.400 --> 04:01.110
So on top of what this command is doing, so this command has the node group name and also does dash

04:01.110 --> 04:09.840
manage what it does that exe actually manages your worker nodes as part of managed node group.

04:10.390 --> 04:18.070
We're going to learn about managed not group in detail lectures down the line on the last command that

04:18.070 --> 04:21.650
is used a lot is x it'll create cluster.

04:21.700 --> 04:27.550
Does does name give a name until this point everything is same with this command.

04:27.550 --> 04:30.700
But then we have this dash dash forget.

04:31.060 --> 04:39.460
So what it does is not only it's going to spin up the X cluster, the control plane, it's also going

04:39.460 --> 04:48.160
to create a target profile which you can use from get go to deploy your pods as forget.

04:48.970 --> 04:50.830
So we have a whole chapter on target.

04:50.830 --> 04:55.110
So you will see this command in action in that chapter a lot.

04:55.120 --> 05:00.580
So what are some things that you can do with AK Steel?

05:00.790 --> 05:07.570
So these commands I just put for the create, but there is a lot more to settle than just creating the

05:07.570 --> 05:08.380
cluster.

05:09.040 --> 05:12.940
So you can create, get list and delete clusters.

05:12.940 --> 05:20.530
With Castiel, you can create drain and delete node groups, you can scale a node group and and don't

05:20.530 --> 05:22.270
worry about this term node group.

05:22.270 --> 05:28.660
Like I said, we have a separate lecture on node group and node group will become clear for now.

05:28.660 --> 05:36.340
Think of it as a collection of worker nodes that A.W. as managers for you, you can update a cluster,

05:36.340 --> 05:41.290
you can use, customize, configure, VPC, networking and a bunch of other stuff.

05:41.800 --> 05:47.560
So one thing to note that X CTL works only on X cluster.

05:47.860 --> 05:50.080
There are different ways to run Kubernetes, right?

05:50.080 --> 05:52.300
Because you can run Kubernetes on C two.

05:52.330 --> 05:54.520
We can run Kubernetes on prem.

05:55.000 --> 05:58.870
You can run Kubernetes on a Google container engine.

05:58.990 --> 06:01.060
You can still want to work on that.

06:01.090 --> 06:05.110
As the name says, it is only for x y.

06:05.110 --> 06:11.300
I am saying you guys and girls this because there's another very popular command called Cube Steel.

06:12.370 --> 06:19.480
Sometimes people get confused between Cube Ctrl and CTL, so Cube still works on all Kubernetes cluster,

06:19.480 --> 06:22.330
but X CTL works only on X cluster.

06:22.810 --> 06:27.340
So with that node, let's learn about Cube CTL in the next video.

06:27.340 --> 06:32.470
And then we're going to do a demo together with CTL and Cube CTL.

06:32.590 --> 06:35.770
All right, guys and girls, I'll see you in the next lecture by.
