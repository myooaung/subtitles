WEBVTT

00:00.090 --> 00:01.710
Welcome, guys and girls, to this lecture.

00:01.710 --> 00:07.050
In this lecture, we are going to learn declarative versus scripted pipelines.

00:07.050 --> 00:13.170
So I'm just going to jump straight into the Jenkins console to show you what area I'm talking about.

00:13.500 --> 00:17.850
So under pipeline, you have the option to give a script.

00:17.970 --> 00:22.290
So if you click this dropdown, you will see the script pipeline here.

00:22.290 --> 00:26.760
So if you select that, you will see there is no pipeline top level block.

00:27.120 --> 00:30.690
It starts with a node and then you have these stages.

00:31.290 --> 00:34.950
All the other options create a declarative pipeline.

00:34.950 --> 00:35.760
So let's see if I do.

00:35.790 --> 00:36.660
Hello world.

00:37.140 --> 00:38.730
You could see this pipeline.

00:38.730 --> 00:42.930
BLOCK So all the declarative pipeline starts with this pipeline.

00:42.930 --> 00:46.560
BLOCK So if I open GitHub plus Maven, the same thing.

00:47.160 --> 00:53.850
So let's try to understand what is the difference between this declarative pipeline script and scripted

00:53.850 --> 00:55.050
pipeline script.

00:56.430 --> 00:56.790
All right.

00:56.790 --> 01:03.600
So we saw the high level a difference in syntax as scripted starts with not particularly pipeline starts

01:03.600 --> 01:04.680
with pipeline.

01:05.370 --> 01:09.210
The scripted pipeline is the older way of writing pipeline.

01:09.330 --> 01:13.440
Previously, you have to learn a groovy language to write this.

01:13.560 --> 01:15.210
Jenkins Scripted Pipelines.

01:15.630 --> 01:18.750
The declarative pipeline is the latest addition.

01:18.750 --> 01:21.350
You don't really need to know groovy syntax.

01:21.930 --> 01:25.320
The scripted pipeline is more free flowing and more powerful.

01:25.380 --> 01:28.080
You can actually write groovy code.

01:28.080 --> 01:29.700
Inside these stages.

01:30.510 --> 01:31.680
We declare the pipeline.

01:31.680 --> 01:35.580
It is more opinionated and streamlined syntax.

01:35.600 --> 01:38.670
It kind of tells you that you have to use this syntax.

01:38.670 --> 01:44.610
If you try to inject a certain groovy code, it fails for scripted pipeline.

01:44.910 --> 01:51.600
If a middle stage fails, let's say the stage a test fails, you cannot really restart it.

01:51.990 --> 01:57.180
You have to write some groovy code in this stage so that it can allow you to restart it.

01:57.840 --> 02:00.270
This is one of the big advantage of declarative pipeline.

02:00.270 --> 02:06.330
It is super easy to restart from a middle of the stage failure and we will see this in a lot of our

02:06.330 --> 02:07.170
example.

02:07.500 --> 02:14.730
If, let's say the stage test fails, you can restart the job and it will restart from this fail stage.

02:15.150 --> 02:21.840
A scripted pipeline is super harder to learn because groovy is not really a very intuitive language

02:21.840 --> 02:26.430
and it doesn't get used in any other front end or back end.

02:26.520 --> 02:32.310
In modern applications, there is not much incentive for you to learn it, and there are less number

02:32.310 --> 02:34.260
of examples available.

02:34.620 --> 02:39.480
The declarative pipeline is easier to learn and there are plenty of examples online.

02:39.630 --> 02:41.160
And a couple other points.

02:41.160 --> 02:44.850
Jenkins Blue Ocean, the newest package for Jenkins.

02:45.150 --> 02:52.020
You can actually write declare the pipeline from Drag Drop, a low code kind of approach.

02:52.050 --> 02:57.450
Also, almost all modern kid projects use declarative pipeline.

02:57.540 --> 02:59.940
Also throughout our whole course.

02:59.940 --> 03:03.150
Declarative pipeline is what we are going to use.

03:03.420 --> 03:10.050
Now, one thing there is a misconception that a scripted pipeline must be written in the UI.

03:10.080 --> 03:16.380
So if I switch back to the Jenkins job and so the misconception is if you write something in the UI

03:16.380 --> 03:19.260
here, then it's a scripted pipeline.

03:19.620 --> 03:26.580
And then if you put a Jenkins file from ICM, then it is a declarative that's not true.

03:26.820 --> 03:30.870
You can have Jenkins file for both declarative or scripted pipeline.

03:30.870 --> 03:33.960
It's just going to grab the content of that Jenkins file.

03:33.960 --> 03:36.630
Only thing that matters is the syntax.

03:36.630 --> 03:40.200
So you can also write declarative pipeline in the UI.

03:40.200 --> 03:41.880
You can see this pipeline block.

03:41.880 --> 03:43.680
That's what makes it declarative.

03:43.710 --> 03:45.870
All right, folks, short and sweet lecture.

03:45.870 --> 03:48.030
I'll see you in the next lecture by.
