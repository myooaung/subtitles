WEBVTT

00:00.090 --> 00:03.480
In the last lecture, we learned about benefits of DevOps.

00:03.510 --> 00:05.940
Is everything hunky dory with DevOps?

00:05.970 --> 00:06.690
No.

00:06.720 --> 00:08.730
There are challenges of DevOps.

00:08.760 --> 00:15.000
You might be tested on this in your interview because unless you work on a real world DevOps project,

00:15.000 --> 00:17.550
you will not be aware of these challenges.

00:17.580 --> 00:18.120
All right.

00:18.120 --> 00:19.320
Let's dive deeper.

00:21.790 --> 00:27.530
The biggest challenge of DevOps is continuously adapting to changing landscape.

00:27.550 --> 00:34.420
There are new tools coming out almost every month and there are ever changing processes and technologies.

00:34.450 --> 00:40.320
If I open up the NCF landscape, the number of tools there are mind boggling.

00:40.330 --> 00:43.350
It is impossible to master all of this.

00:43.360 --> 00:50.320
And if I focus specifically on continuous integration and delivery, there are around 50 tools just

00:50.320 --> 00:51.420
in this category.

00:51.430 --> 00:54.580
And remember, this is just CNCF Cloud Native.

00:54.610 --> 01:00.280
If you go beyond that, the number of DevOps tools available in the market is over 100.

01:00.310 --> 01:02.920
Going back to the processes and technologies.

01:03.040 --> 01:09.910
If you adopted DevOps a few years back, just learning cloud formation and Jenkins was sufficient,

01:09.940 --> 01:13.510
you could have deployed any kind of workload using those too.

01:13.690 --> 01:19.600
But now in recent times, Multicloud is gaining popularity, so you have to learn TerraForm.

01:19.600 --> 01:24.250
In addition to cloud formation in Kubernetes, Gitops is getting popular.

01:24.250 --> 01:26.890
So now just learning Jenkins is not enough.

01:26.920 --> 01:31.570
You need to understand one of the Gitops tools along with Jenkins.

01:31.840 --> 01:36.940
The second challenge of DevOps is developers unwilling to provide support.

01:37.180 --> 01:43.510
One of the cultural change with DevOps is now the developer and operations are in the same team and

01:43.510 --> 01:46.660
in some cases they are the same person.

01:46.660 --> 01:49.850
And sometimes developers just want to do code.

01:49.870 --> 01:53.080
They are not interested in doing support.

01:53.380 --> 01:58.930
And another challenge of DevOps is it takes months or years to ramp up.

01:58.960 --> 02:05.680
In certain cases, your organization will already have an established deployment mixed with a lot of

02:05.680 --> 02:08.290
manual checking and processes.

02:08.410 --> 02:15.130
So for those organizations, you need to have a strategy such as how to break apart small parts into

02:15.130 --> 02:21.090
DevOps paths and then the migrating the other projects and then modernizing to modern DevOps tool,

02:21.100 --> 02:29.140
etc. It could take a long time and whenever it comes to adopting something new, be DevOps or cloud,

02:29.140 --> 02:34.060
there are always three main factor people process and technology.

02:34.060 --> 02:40.050
So generally process and technology is easier because they are methodical.

02:40.060 --> 02:46.630
So sometimes you might face resistance from your organization to change to DevOps because it will change

02:46.630 --> 02:49.270
the job functionalities of certain folks.

02:49.270 --> 02:55.990
So whenever you talk about challenges, especially in interviews, it is important to note how will

02:55.990 --> 02:57.070
you solve them?

02:57.310 --> 03:01.330
So how will you solve continuously adapting to changing landscape?

03:01.630 --> 03:05.860
So your company needs to establish standard toolsets.

03:05.860 --> 03:13.240
You will have a cloud center of excellence or DevOps Center of excellence who will go and review audit

03:13.240 --> 03:15.220
all these different DevOps tools.

03:15.220 --> 03:21.100
And based on your security posture and the nature of the project, they will standardize certain sets

03:21.100 --> 03:26.860
of tools so that the development teams don't need to waste time and evaluate all these tools themselves.

03:26.950 --> 03:31.320
They will also provide templates with best practices built in.

03:31.330 --> 03:36.910
For example, if you need to deploy something to Kubernetes so they will have certain pipelines that

03:36.910 --> 03:42.880
is already codified using Jenkins and Argus Seed for an example, with all the security checkpoints

03:42.880 --> 03:43.620
built in.

03:43.630 --> 03:50.500
So if other teams need to adopt it, they can simply come copy the template and then build on top of

03:50.500 --> 03:52.340
it rather than starting from scratch.

03:52.360 --> 03:58.270
For developers unwilling to provide support, you need to implement some sort of rotation and give incentives

03:58.270 --> 04:00.240
for the long ramp up time.

04:00.250 --> 04:02.920
Utilize Vendor Training Workshop.

04:02.920 --> 04:06.430
For example, if your organization is adopting a W.

04:06.430 --> 04:07.430
S a W.

04:07.450 --> 04:14.650
S runs, immersion days, workshops, presentations, you get invited to all these conferences that

04:14.650 --> 04:17.860
train your workforce and help you adopt DevOps.

04:17.860 --> 04:20.080
And the last part, resistance to change.

04:20.080 --> 04:24.720
This is a hard problem, so you need to go through cultural training to do that.

04:24.730 --> 04:30.130
If you are going for a lead position or a higher management position, look up this cultural training

04:30.130 --> 04:31.330
before your interviews.

04:31.540 --> 04:32.080
All right.

04:32.080 --> 04:38.110
Now that we understand what is DevOps challenges and benefits, let's look into what is CI and what

04:38.110 --> 04:39.730
is CDD in the next lecture.
