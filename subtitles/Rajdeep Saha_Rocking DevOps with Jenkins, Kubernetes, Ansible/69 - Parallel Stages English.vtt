WEBVTT

00:00.120 --> 00:02.590
Welcome, girls, to another Jenkins lecture.

00:02.610 --> 00:08.250
In this lecture, we're going to learn how you can run some stages or steps.

00:08.250 --> 00:09.270
Parallelly in.

00:09.270 --> 00:12.390
Jenkins All right, let's jump into Jenkins console.

00:12.600 --> 00:16.130
Most of the times, you will run your steps sequentially.

00:16.140 --> 00:22.230
One of the scenarios where you might run your stages, parallelly, is if you are trying to run some

00:22.230 --> 00:26.940
tests, some tests should be run on Windows, some on Linux.

00:27.300 --> 00:29.820
So this is a sample pipeline script.

00:30.180 --> 00:33.180
As you could see, the agent is specified as none.

00:33.180 --> 00:38.070
So what that means is every stage has to specify the agent.

00:38.850 --> 00:47.460
So we have the stage run tests and this parallel means that whatever is inside this parallel block will

00:47.460 --> 00:48.630
run parallel.

00:48.660 --> 00:55.200
So in this case, we have two stages inside this parallel block stage test on windows and stage test

00:55.200 --> 00:56.280
on Linux.

00:56.430 --> 01:02.490
And this stage test on Windows runs on an agent where the level is Windows.

01:02.490 --> 01:04.500
This could be ac2 box.

01:04.500 --> 01:09.420
And this stage test on Linux runs on an agent with level Linux.

01:09.930 --> 01:12.600
So this could be ac2 running Linux.

01:12.780 --> 01:20.790
And for this test on window stage, it runs this step which runs a batch file run test bat.

01:20.790 --> 01:28.410
And for Linux, we run a shell script, run tests, S-H, and then it has the post section for both

01:29.070 --> 01:30.270
of these stages.

01:30.900 --> 01:35.580
So this parallel means that these two stages are going to run parallel.

01:36.450 --> 01:41.610
So I don't want to run the whole thing because I don't have the different label and batch file and stuff,

01:41.610 --> 01:47.580
but I'm just going to replace this with display commands and show that it runs parallel.

01:47.760 --> 01:48.300
All right.

01:48.300 --> 01:54.720
I have modified the pipeline script, so I removed the label for the agent as well as the post build

01:55.140 --> 01:56.010
actions.

01:56.010 --> 02:02.310
I'm just displaying these run Windows tests and run Linux tests from the two stages.

02:02.310 --> 02:10.020
I also implemented a slip command so that we can see both of these stages are running parallel.

02:10.050 --> 02:16.620
If I don't put the slip command, it will be done too fast and we won't be able to detect whether they

02:16.620 --> 02:18.480
run sequentially or parallel.

02:18.990 --> 02:22.950
All right, let's have this and then click build now.

02:23.310 --> 02:23.730
All right.

02:23.730 --> 02:29.580
So you can see the test on windows is paused test on Linux is also paused.

02:29.580 --> 02:33.630
All right how do you see they are both executed.

02:33.630 --> 02:41.610
And so if I go to the logs, all right, so both slept for 10 seconds and it should say parallel as

02:41.610 --> 02:48.960
well as pipeline parallel and then it called the run Windows tests and run Linux stage.

02:49.290 --> 02:49.740
All right.

02:49.740 --> 02:52.560
This is how you run stages in parallel.

02:52.560 --> 02:56.910
Now, let's see how you can run different steps in parallel.

02:57.930 --> 02:58.380
All right.

02:58.380 --> 03:01.110
So now I change the pipeline script a little bit.

03:01.440 --> 03:09.900
So now we have only one stage run parallel tests and we have the steps where we are running this Windows

03:09.900 --> 03:14.460
test and Linux test blocks parallel.

03:14.850 --> 03:19.080
So we have this keyword parallel and then a parenthesis.

03:19.500 --> 03:23.400
So it starts and ends in the in the steps block.

03:23.400 --> 03:27.240
And then within this parentheses you have to give two labels.

03:27.240 --> 03:33.540
In my case, I'm using Windows Test and within the Windows test, I'm sleeping it for 20 seconds so

03:33.540 --> 03:38.460
that we can detect they're running properly and that I'm displaying echo running in Windows.

03:38.850 --> 03:46.170
Similarly, under Linux test, I'm for 20 seconds and echoing running in Linux, so let's save this.

03:46.620 --> 03:51.450
So one thing to note, the pipeline view shows different stages.

03:51.450 --> 03:57.750
So previously when we tested this and so it was a little easier because we could see two different stage

03:58.140 --> 03:59.010
weighting.

03:59.040 --> 04:06.420
But now here we are not going to see two different steps in the stage in this stage view, but we have

04:06.420 --> 04:11.610
to go to logs to see that those two blocks in the steps are running parallel.

04:12.030 --> 04:13.950
So let's click build now.

04:14.280 --> 04:18.270
All right, so number eight is building, so I'm going to go to console output.

04:18.300 --> 04:24.780
And here you can see both the Windows test and Linux test is slipping currently for 20 seconds.

04:25.080 --> 04:28.920
So as soon as they stop sleeping, there you go.

04:28.920 --> 04:34.110
They executed the actual Linux command echo and the job is done.

04:34.830 --> 04:35.850
Pretty straightforward.

04:35.850 --> 04:40.260
All right, folks, that's how you execute steps and stages.

04:40.260 --> 04:42.000
Parallelly in Jenkins.

04:42.000 --> 04:43.080
That's it for this one.

04:43.080 --> 04:45.480
I'll see you guys, girls in the next lecture by.
