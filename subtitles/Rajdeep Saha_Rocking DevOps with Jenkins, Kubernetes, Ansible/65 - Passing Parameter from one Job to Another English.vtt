WEBVTT

00:02.180 --> 00:08.240
In the last lecture, we learned how you can trigger another job from one junkie job.

00:08.360 --> 00:14.300
In this lecture, we are going to take it one step further and we are going to pass parameters from

00:14.300 --> 00:16.280
the upstream job to the downstream job.

00:16.730 --> 00:21.000
So on the left we have our upstream job named sample pipeline job two.

00:21.020 --> 00:27.800
And on the right we have the downstream job named simply as downstream job, not very creative.

00:28.340 --> 00:36.230
So what we want to pass is so as you submit these Jenkins jobs, you can see Jenkins assigns a sequential

00:36.230 --> 00:43.790
number like number one, number two, number three, we simply want to pass this number to the downstream

00:43.790 --> 00:47.000
job so that the downstream job can display it.

00:47.510 --> 00:51.960
So this actually sets the foundation for our real world projects.

00:51.980 --> 00:59.780
Let's say you generate a new Docker container image and you want the tag for that image to be unique.

01:00.200 --> 01:08.380
So every time the Jenkins job that creates the container image can use the build number as the tag,

01:08.390 --> 01:12.140
and then you can pass that tag to the downstream job.

01:12.140 --> 01:18.830
And the downstream job can use that to either push the image or change the manifest file appropriately

01:18.830 --> 01:20.690
using that Docker tag.

01:20.930 --> 01:28.310
But anyway, that that to come in the future lecture for now, let's learn how you can actually pass

01:28.310 --> 01:31.290
a parameter from job to job.

01:31.550 --> 01:35.090
So we are actually going to change the downstream job first.

01:35.090 --> 01:41.030
So I'm going to maximize the downstream job and we have to define a parameter.

01:41.060 --> 01:49.160
So if I go to configure and under the general section, you should see this, this project is parameterized,

01:49.160 --> 01:56.900
so select that and then click add parameter and you have option to select the type of parameter.

01:57.350 --> 02:02.740
In our case, we are going to do string parameter and the parameter name.

02:02.750 --> 02:09.080
I'm simply going to put as build number a default value.

02:09.120 --> 02:12.170
I'll keep it as best description.

02:12.380 --> 02:13.930
I'm not going to do anything.

02:14.360 --> 02:21.080
If we scroll down to the pipeline script, so we simply want to display whatever value we got on the

02:21.080 --> 02:21.980
parameter.

02:22.910 --> 02:28.100
So in this case, we have to run Echo and we have to put this dollar.

02:28.100 --> 02:33.230
So this dollar means that you are going to use a parameter.

02:33.230 --> 02:37.420
So then you have to use this calibrates and the parameter, build number.

02:37.430 --> 02:42.980
Just grab whatever value you got in the input parameter and then you are displaying it.

02:43.340 --> 02:46.550
One thing to note, you do have to use this double code.

02:46.580 --> 02:49.670
If you don't use the double code, it is going to fail.

02:50.680 --> 02:53.720
Okay, so let's save this downstream job.

02:54.410 --> 02:57.710
So now let's go back to the upstream job.

02:58.130 --> 02:58.610
All right.

02:58.610 --> 03:03.650
I am in the upstream job, which is the job that is triggering the downstream job.

03:04.310 --> 03:05.260
So scroll down.

03:05.270 --> 03:11.150
At this point, we just had the build job, so I'm going to delete this because now we have to pass

03:11.150 --> 03:12.710
the building number.

03:13.160 --> 03:16.470
So delete this and click pipeline syntax.

03:16.490 --> 03:20.750
Click this again and then select, build, build a job.

03:21.380 --> 03:28.460
So the name of the job will be same downstream job, not quite prepared.

03:28.460 --> 03:34.100
And then Jenkins automatically detects that, hey, the downstream job has an input parameter build

03:34.100 --> 03:34.790
number.

03:34.970 --> 03:38.030
What value you want to pass?

03:38.620 --> 03:40.480
So this part is a little tricky.

03:40.540 --> 03:42.010
You have to remember this part.

03:42.670 --> 03:47.200
Jenkins has some standard variables already defined.

03:47.200 --> 03:51.010
So every time we submit Jenkins, you see the serial numbers.

03:51.040 --> 03:58.810
These numbers is saved in a standard variable named build underscore number.

03:59.440 --> 04:06.640
So if I go back to the pipeline syntax, so the actual standard variable is EMV env for environment.

04:06.640 --> 04:11.560
So this is what it means that you don't have to define whether it's a string number.

04:11.590 --> 04:18.760
Whatever env determines that whatever you're going to put should be a standard variable that's already

04:18.760 --> 04:21.010
defined in Jenkins internal system.

04:21.790 --> 04:26.830
And the name of the variable is build underscore number.

04:27.640 --> 04:29.350
Click Generate Pipeline Script.

04:29.890 --> 04:33.610
There is also another change that you need to do and I'm going to show you.

04:34.300 --> 04:35.680
So let's copy this.

04:35.710 --> 04:40.840
Go back to the job and then paste it here.

04:41.390 --> 04:46.060
Okay, now you have to delete this single code.

04:46.600 --> 04:51.910
So whatever you put inside a single code, it automatically becomes a string.

04:52.390 --> 04:58.330
So if I just kept this single code, it would literally send env to build underscore number.

04:58.330 --> 05:04.420
It's not going to send the actual value, it's going to send the string, which we don't want.

05:04.720 --> 05:05.920
So this is the tricky part.

05:06.310 --> 05:08.800
The pipeline syntax doesn't do this part.

05:08.800 --> 05:10.030
I wish it did.

05:10.480 --> 05:15.520
But anyway, if are watching the lecture now, you know, so let's save this.

05:16.700 --> 05:16.870
Okay.

05:17.070 --> 05:25.200
Before we submit the job, let me open up this job and the downstream job side by side and ignore the

05:25.200 --> 05:26.820
previous execution.

05:26.850 --> 05:32.010
I did test before recording the video because I don't want the job to fail when I'm recording.

05:32.430 --> 05:32.880
All right.

05:32.880 --> 05:37.440
So the left is our sample pipeline job to right is downstream job.

05:37.470 --> 05:39.780
Let's click build now.

05:40.260 --> 05:40.680
All right.

05:40.680 --> 05:43.200
Number six is submitted.

05:43.680 --> 05:45.930
It's triggering the downstream job.

05:47.530 --> 05:47.900
Okay.

05:47.910 --> 05:49.980
The downstream job is running.

05:50.400 --> 05:50.880
All right.

05:50.880 --> 05:53.460
The downstream job also completed successfully.

05:54.300 --> 05:57.720
So let's go and check out the logs for the downstream job.

05:58.290 --> 05:58.860
All right.

05:58.860 --> 06:05.940
So this is displaying six because the build number from the upstream job is six.

06:06.360 --> 06:08.470
And again, this is just an example.

06:08.490 --> 06:12.300
You can take this number and you can use it anywhere you want.

06:12.300 --> 06:13.830
And this is one parameter.

06:13.830 --> 06:15.960
You can have as many parameters as you want.

06:16.230 --> 06:20.970
And as we go through the real world projects, you will see different kinds of parameters being used.

06:21.640 --> 06:25.620
So let's say if I submit this again, will now.

06:26.640 --> 06:29.460
So now the number seven got submitted.

06:29.460 --> 06:34.530
So now the output of this downstream job should give number seven.

06:34.890 --> 06:36.090
All right, this is done.

06:36.090 --> 06:39.750
And this time I'm going to go to the console output.

06:39.780 --> 06:41.490
Don't get confused by this number six.

06:41.490 --> 06:45.990
Right, because this number six is the build number for the downstream job.

06:46.020 --> 06:50.310
We want to display the build number of the upstream job, which is on the left.

06:50.430 --> 06:52.050
So go to console output.

06:52.050 --> 06:53.290
Scroll down.

06:53.310 --> 06:53.930
All right.

06:53.940 --> 06:54.960
Number seven.

06:55.530 --> 07:02.280
All right, folks, this is how you trigger a downstream junkie's job while passing a parameter.

07:02.460 --> 07:03.950
All right, folks, that's it for this one.

07:03.960 --> 07:05.790
I'll see you guys and gals in the next lecture.
