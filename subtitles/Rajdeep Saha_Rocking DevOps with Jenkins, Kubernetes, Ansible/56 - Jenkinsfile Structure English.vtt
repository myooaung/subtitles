WEBVTT

00:00.090 --> 00:05.790
In this lecture, we are going to learn about structure and record fields in Jenkins file.

00:05.820 --> 00:07.380
All right, let's get started.

00:07.410 --> 00:10.140
This is the overall structure of the Jenkins file.

00:10.320 --> 00:13.710
All the code is inside the pipeline block.

00:13.740 --> 00:18.460
And this pipeline block only appears for declarative pipelines.

00:18.480 --> 00:22.200
For scripted pipeline, we don't have this pipeline syntax.

00:22.200 --> 00:27.630
But like I said, declarative pipeline is the best way to go about writing Jenkins file.

00:27.630 --> 00:29.410
So that's what we are going to learn.

00:29.430 --> 00:33.090
The Jenkins file syntax is actually groovy syntax.

00:33.090 --> 00:37.230
And in case if you are thinking, man, should I go learn groovy.

00:37.230 --> 00:38.640
Now relax.

00:38.640 --> 00:39.930
No need to learn groovy.

00:39.930 --> 00:45.390
Actually, if you are thinking about learning groovy for Jenkins file, please do not.

00:45.420 --> 00:49.380
Groovy has very limited amount of real world applications.

00:49.380 --> 00:55.920
So if you do want to learn a programming language, learn Python, Node.js or go instead, the first

00:55.920 --> 00:59.760
required parameter of Jenkins file is agent.

01:00.090 --> 01:04.950
Agent determines where is this pipeline or the stages going to run.

01:04.950 --> 01:10.410
Maybe you want to execute this Jenkins file in a particular easy to work or not.

01:10.440 --> 01:14.850
Or maybe you want to execute it inside a particular container image.

01:14.880 --> 01:21.010
Maybe you want to build your own container image and then run the stages inside it.

01:21.030 --> 01:27.450
In this case, I'm providing a Docker image along with the label, and that's where the whole pipeline

01:27.450 --> 01:28.530
is going to run.

01:28.650 --> 01:36.180
In this case, instead of giving a Docker container image, we are actually creating the container in

01:36.180 --> 01:45.270
using a Docker file inside this agent block in this example, not that the agent is none at the top.

01:45.480 --> 01:49.740
That means you have to specify agents for each of the stages.

01:49.740 --> 01:59.040
So for this stage, the agent is a Docker for Maven, and the next stage the agent is a Docker for open

01:59.040 --> 01:59.850
JDK.

01:59.880 --> 02:06.480
And if you want your Jenkins job to run in a specific node with a specific level, for example, as

02:06.480 --> 02:13.230
part of your Jenkins infrastructure, you have some windows easy to work node, some Linux, easy to

02:13.230 --> 02:14.160
work on nodes.

02:14.160 --> 02:21.120
And for that particular Jenkins job, you want to submit it to a Windows node so you can do that using

02:21.120 --> 02:22.050
this level.

02:22.050 --> 02:28.380
But for most cases, for all intents and purposes, you will probably be using agent as any.

02:28.380 --> 02:33.270
That means that Jenkins job can run in any available agent.

02:33.990 --> 02:40.170
In our case, we are running Jenkins in easy to work nodes, so the Jenkins job will simply run on those

02:40.170 --> 02:41.010
worker nodes.

02:41.040 --> 02:46.290
Now let's focus on the next required parameter stages.

02:46.320 --> 02:49.920
This is the meat and potato for Jenkins file.

02:49.950 --> 02:56.580
The block stages contains a sequence of one or more stage.

02:56.610 --> 03:02.510
At minimum, the stages should contain at least one stage section.

03:02.520 --> 03:08.840
So in this case, the Jenkins file have three stages build, test and deploy.

03:08.850 --> 03:13.580
And inside this stage section, you will have steps.

03:13.590 --> 03:19.200
Your actual executable lines will be inside this step section.

03:19.230 --> 03:25.980
In this case, I'm just echoing, building, testing and deploying from three different stages.

03:25.980 --> 03:31.090
But think of it as you can run shell script and SQL commands.

03:31.110 --> 03:38.580
Anything inside these steps block So create as many stage as required and all executable command goes

03:38.580 --> 03:39.860
inside steps.

03:39.870 --> 03:40.440
All right.

03:40.440 --> 03:46.320
So it's probably easier to see this in action than to understand this while going through the theory.

03:46.320 --> 03:46.770
All right.

03:46.770 --> 03:52.740
So let's jump into Jenkins and find out how this particular Jenkins file runs in our job.
