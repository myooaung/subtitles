WEBVTT

00:00.210 --> 00:02.320
Welcome, guys and girls, to this lecture.

00:02.340 --> 00:07.500
So at this point, we know what is the container and how does it help avoid?

00:08.280 --> 00:11.760
It works on my machine kind of scenarios.

00:11.970 --> 00:17.130
So now the big question is what is container orchestrator?

00:17.490 --> 00:21.070
Isn't orchestrator a big mouthful world?

00:21.090 --> 00:23.450
It's like it's like framework.

00:23.460 --> 00:26.040
It's like it's like blockchain, right?

00:26.040 --> 00:33.660
It's like it's like one of those fancy words that no one has a proper idea, but you are too afraid

00:33.660 --> 00:34.300
to ask.

00:34.320 --> 00:34.710
Right.

00:34.710 --> 00:39.300
So let's jump into it and get our concepts clear.

00:40.440 --> 00:44.590
So you have created Docker images of two of your applications.

00:44.610 --> 00:52.760
Application A and application B, and currently they are sitting in a place called Docker Registry.

00:52.770 --> 00:55.470
So your applications are not really running.

00:55.470 --> 00:57.390
It's just an image.

00:57.390 --> 01:03.690
Sitting in a repository to run your applications, you need a host.

01:03.840 --> 01:07.530
So one example of a host could be easy to.

01:07.560 --> 01:14.760
The next step would be to bring those Docker images into the CC two and start running those Docker images

01:14.760 --> 01:16.410
as containers.

01:16.530 --> 01:21.780
So now your applications are running in containers in ESI two.

01:21.930 --> 01:24.600
Now easy tools are like tools.

01:24.600 --> 01:28.260
If you see one other ones are nearby.

01:28.350 --> 01:29.910
What do I mean by that.

01:29.910 --> 01:38.640
Well, if if it is just one easy to running in availability zone, if it goes down, it's not really

01:38.640 --> 01:40.470
highly available, is it?

01:40.470 --> 01:46.860
So to make it durable, you have to spin up another AC two in another availability zone.

01:47.430 --> 01:48.060
Okay.

01:48.060 --> 01:51.870
So now we have two visitors running with their applications.

01:51.870 --> 01:55.860
Now let's say the traffic increases in your application.

01:56.340 --> 01:57.120
So guess what?

01:57.120 --> 02:04.080
You have to put this easy to in order scaling group so that it can scale out when the traffic increases.

02:04.080 --> 02:10.650
So now we have this a pack of wolves or pack of easy tools running.

02:10.650 --> 02:15.450
Now what if application B goes down in one of the easy tools?

02:15.900 --> 02:22.920
So you have to detect which application in which to went down and then I bring it back up.

02:23.190 --> 02:30.120
Since there are multiple easy tools running with multiple containers for your application, we need

02:30.120 --> 02:33.510
something which can route traffic appropriately.

02:33.900 --> 02:36.750
So here comes a load balancer.

02:37.200 --> 02:40.890
As you can see, there is a lot going on.

02:41.310 --> 02:48.570
So if we look at all the tasks we have deployment of containers, redundancy and availability of containers,

02:48.570 --> 02:56.340
scaling up or down of containers, load balancing health, monitoring of containers and hosts, service

02:56.340 --> 02:59.130
discovery and more.

02:59.610 --> 03:09.480
So if you want to write code and processes to do all these tasks, you better be this guy or this guy

03:09.810 --> 03:11.550
or this guy.

03:12.340 --> 03:18.870
If you are not one of these guys, say hello to container orchestrators.

03:18.880 --> 03:20.060
You got it.

03:20.080 --> 03:28.180
So container orchestrator takes care of all the tasks associated to keep your containers up and running.

03:28.750 --> 03:34.030
So we have more than one container orchestrator available in the market.

03:34.030 --> 03:35.980
So let's take a look at some of them.

03:36.340 --> 03:37.570
Docker Swarm.

03:37.960 --> 03:39.580
Apache, Messrs.

03:39.580 --> 03:41.680
Cattle Nomad Empire.

03:42.100 --> 03:48.280
A.W. s Elastic Container Service and Tata the most popular one.

03:48.280 --> 03:49.630
Kubernetes.

03:49.720 --> 03:54.370
We have a w s x, which is elastic container service for Kubernetes.

03:54.370 --> 03:57.640
And last but not the least, we have a w.

03:57.640 --> 03:59.050
S forget.

04:00.040 --> 04:01.930
Well, that's not the right icon.

04:03.520 --> 04:04.280
There we go.

04:04.300 --> 04:05.590
Now we are all set.

04:05.860 --> 04:12.910
All right, so now we know what is content, orchestrator and what are some of these?

04:12.910 --> 04:20.500
The most popular content orchestrator is, you guessed it right, Kubernetes, our guys and girls.

04:20.500 --> 04:24.940
So in the next video, let's understand what is Kubernetes?

04:25.180 --> 04:26.320
Our guys and girls.

04:26.320 --> 04:28.240
See you in the next lecture by.
