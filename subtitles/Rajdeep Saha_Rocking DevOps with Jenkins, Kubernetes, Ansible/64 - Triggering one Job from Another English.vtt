WEBVTT

00:00.300 --> 00:02.400
Cameras and ghosts of the Jenkins lecture.

00:02.580 --> 00:07.920
In this lecture, we are going to learn how you can trigger downstream Jenkins jobs.

00:08.220 --> 00:11.380
So till now, we are dealing with just one job.

00:11.400 --> 00:12.960
Let's say a job, eh?

00:12.990 --> 00:20.190
But in real world scenario, the actual cursed pipeline is made up of multiple jobs.

00:20.580 --> 00:24.800
So you want to trigger, let's say, job B from this job, eh?

00:25.080 --> 00:27.380
And there are two ways you can invoke it.

00:27.390 --> 00:31.860
You can just invoke it without passing any value in between.

00:32.070 --> 00:37.560
Or as it is, most most common is when you trigger the second job.

00:37.560 --> 00:40.620
From the first job, you want to pass some parameters.

00:41.340 --> 00:49.590
So one of the real world examples of this could be fast job, can build a container image and push and

00:49.590 --> 00:55.020
save that container image into some container repository such as Docker hub.

00:55.230 --> 00:59.070
And then you pass the necessary information to another downstream job.

00:59.070 --> 01:03.780
And that job goes and updates the Kubernetes manifest.

01:03.960 --> 01:06.600
And then down the line that changed.

01:06.600 --> 01:09.870
Container image gets deployed using Gitops.

01:10.710 --> 01:14.990
So this is a very, very popular and very relevant use case right now.

01:15.000 --> 01:21.900
So we are actually going to see this in action in our Jenkins Kubernetes GitHub section.

01:22.620 --> 01:29.460
But for now, let's jump into the console and build a job and see how you can trigger another job from

01:29.460 --> 01:29.850
it.

01:30.030 --> 01:35.910
So I'm going to briefly go over the freestyle job, but I'm actually actually going to show that demo

01:35.910 --> 01:37.190
with the pipeline job.

01:37.200 --> 01:45.750
So if you are in the freestyle job, go back to configure and then scroll down and in the post build

01:45.750 --> 01:51.600
actions you will see build another job so you could see build other projects.

01:51.600 --> 01:57.570
And if you select this, then you can give the name of another Jenkins job here.

01:57.570 --> 02:03.990
And after this build step is completed, then this post build action will get triggered.

02:04.710 --> 02:08.790
But like we know, pipeline jobs offer significant advantages.

02:09.060 --> 02:12.330
So we are actually going to see the demo using pipeline job.

02:12.330 --> 02:15.390
So let's switch to the pipeline job that we created.

02:15.780 --> 02:16.200
All right.

02:16.200 --> 02:18.360
So this is the sample pipeline job.

02:18.360 --> 02:23.670
And in the pipeline script, we are copying over this git repository and we are displaying the read

02:23.670 --> 02:24.120
me.

02:24.750 --> 02:33.270
Let's say you want to trigger another job again, even though it is convenient to just select from the

02:33.270 --> 02:37.500
post, build action in the sample freestyle job, trigger another job.

02:37.500 --> 02:42.990
But in real world everything is done through infrastructure as code.

02:42.990 --> 02:49.320
Similarly, for the pipeline jobs, it's very important to have these as a pipeline script, so let's

02:49.320 --> 02:50.190
see that in action.

02:50.190 --> 02:54.870
So I'm just going to copy this and then test this.

02:55.350 --> 03:02.100
So I'm creating another stage and here I'm going to say trigger downstream job.

03:03.290 --> 03:10.130
So actually, before we put the steps, let's create another job which will act as the downstream job.

03:10.190 --> 03:16.190
So I would click the dashboard open link in new window, click a new item.

03:17.050 --> 03:21.040
I'm just going to name this downstream job.

03:21.520 --> 03:23.170
Real straightforward.

03:23.470 --> 03:24.910
Click pipeline.

03:25.480 --> 03:26.050
Click.

03:26.060 --> 03:26.750
Okay.

03:29.310 --> 03:34.350
I went to calm down and I'm just going to select Hello World for now.

03:34.350 --> 03:35.980
So this job will just echo.

03:36.000 --> 03:36.930
Hello World.

03:37.140 --> 03:38.430
Click Save.

03:39.750 --> 03:45.150
And then go back to our job of the previous job, the upstream job.

03:45.690 --> 03:53.160
So here I'm going to delete this and I'm going to create the pipeline syntax.

03:53.400 --> 04:02.460
So select this and then from here click build a job project to build is downstream job.

04:02.580 --> 04:11.310
So you basically just give the actual name of the Jenkins job and this quite period is after you trigger

04:11.310 --> 04:11.760
it.

04:12.030 --> 04:16.740
Your Jenkins job can wait a certain amount of time to get triggered.

04:16.830 --> 04:22.680
And let's say you want to put something just for fun and this is in seconds and then join our pipeline

04:22.680 --> 04:23.220
script.

04:23.220 --> 04:26.670
So you see this thing just adds that quite period here.

04:27.930 --> 04:33.120
But anyway, I'm going to remove this quite period because I'm quite impatient.

04:33.150 --> 04:34.920
So I'm just going to copy this.

04:36.480 --> 04:37.800
Go back here.

04:39.100 --> 04:39.970
Pestered her.

04:41.450 --> 04:43.040
All right, click save.

04:43.070 --> 04:43.460
All right.

04:43.460 --> 04:47.500
So at this point, I'm going to submit this sample pipeline job.

04:47.510 --> 04:53.390
So on the left, I have the sample pipeline job, which is triggering the downstream job on the right.

04:53.990 --> 04:55.610
So let's click build now.

04:59.800 --> 05:00.460
All right.

05:00.490 --> 05:02.410
It is triggering on the right.

05:02.410 --> 05:07.390
You could see the question number two got triggered and it is pending.

05:07.390 --> 05:08.260
Finished waiting.

05:08.290 --> 05:08.860
All right.

05:08.860 --> 05:12.790
So our job on the left trigger the job on the right.

05:13.030 --> 05:20.650
And now let's go one step further and pass parameters from the sample pipeline job to the downstream

05:20.650 --> 05:21.130
job.
