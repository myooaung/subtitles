WEBVTT
1

00:00:07.589  -->  00:00:11.860
In this chapter we’ll discuss 
accessibility and usability.

2

00:00:11.860  -->  00:00:16.059
They're two related aspects of creating a web 
that works for everybody

3

00:00:16.059  -->  00:00:19.420
Their goals, approaches, and guidelines overlap.

4

00:00:19.420  -->  00:00:24.060
So it’s effective to tackle them together
when designing websites or apps.

5

00:00:24.060  -->  00:00:27.019
Let's start with usability.

6

00:00:27.439  -->  00:00:31.320
Usability is essential for creating 
exceptional experiences.

7

00:00:31.320  -->  00:00:33.379
But what exactly is it?

8

00:00:33.379  -->  00:00:38.030
UX and usability are often confused, 
but they are not the same.

9

00:00:38.030  -->  00:00:42.350
It is one of the key components that drive
an enjoyable user experience, as I showed

10

00:00:42.350  -->  00:00:44.618
you in the first chapter.

11

00:00:45.189  -->  00:00:51.280
One of the most common myths in UX is that
good usability is more pleasing to the eye.

12

00:00:51.280  -->  00:00:55.809
But it's impossible for something to 'look
useful' or ‘feel useful’.

13

00:00:55.809  -->  00:00:59.700
A design in itself is not usable or unusable.

14

00:00:59.700  -->  00:01:04.220
Its features, together with the user, what
the user wants to do with it, and the user’s

15

00:01:04.220  -->  00:01:08.437
environment determine its level of usability.

16

00:01:09.008  -->  00:01:12.420
Usability is the second level in user experience.

17

00:01:12.420  -->  00:01:17.880
As you can see in this image from the Nielsen
Norman Group, utility takes center stage.

18

00:01:17.880  -->  00:01:21.929
While usability is about making features easy
to use and enjoyable.

19

00:01:21.929  -->  00:01:26.210
Utility is about providing features that users
need in the first place.

20

00:01:26.210  -->  00:01:28.459
UX starts by being useful.

21

00:01:28.459  -->  00:01:30.000
Second, comes usability.

22

00:01:30.628  -->  00:01:36.829
Usability and utility are both important for
the overall brand experience.

23

00:01:36.829  -->  00:01:41.169
It doesn't matter that something is easy if
it's not what a user wants.

24

00:01:41.169  -->  00:01:47.089
All your efforts to build the most user-friendly
feature will fail if that feature is not needed.

25

00:01:47.089  -->  00:01:53.309
Only when you combine usability with utility
do products become useful to users.

26

00:01:53.309  -->  00:01:57.889
Usability is also important because it is
a necessary condition for survival.

27

00:01:57.889  -->  00:02:02.656
If your product is not usable, your users will
leave you for the competition.

28

00:02:04.459  -->  00:02:09.140
If users can't find the product, 
they cannot buy it.

29

00:02:09.140  -->  00:02:14.530
If the website doesn't answer the user's questions,
they leave.

30

00:02:14.530  -->  00:02:19.069
If a website is difficult to use, people leave.

31

00:02:19.069  -->  00:02:22.231
If users get lost on a website, they don't
come back.

32

00:02:22.231  -->  00:02:26.069
Leaving is the first line of defense when
users encounter difficulties.

33

00:02:26.069  -->  00:02:28.060
So usability is important.

34

00:02:28.060  -->  00:02:29.400
Big time.

35

00:02:29.400  -->  00:02:34.090
Because if users cannot achieve their goals,
they look for an alternative solution.

36

00:02:34.090  -->  00:02:36.935
And they are often numerous and easy to find.

37

00:02:37.381  -->  00:02:41.770
I may have given you the impression that usability
is only about the ease of use of a product.

38

00:02:41.770  -->  00:02:43.180
But it's way more.

39

00:02:43.180  -->  00:02:46.990
A usable interface consists of five parts.

40

00:02:47.591  -->  00:02:55.689
You need to make sure designs are efficient,
effective, engaging, easy to learn

41

00:02:55.689  -->  00:03:00.159
and error tolerant if you want them to succeed.

42

00:03:00.159  -->  00:03:05.590
Effectiveness is about helping users perform
actions accurately.

43

00:03:05.590  -->  00:03:07.810
There are many different ways to provide support.

44

00:03:07.810  -->  00:03:13.249
The key is to be as informative as possible
in a meaningful way for the user.

45

00:03:13.249  -->  00:03:16.069
For instance
Design a credit card field so that you can

46

00:03:16.069  -->  00:03:18.469
only enter a valid credit card number.

47

00:03:18.469  -->  00:03:22.738
This prevents errors and helps 
users to do their job.

48

00:03:24.390  -->  00:03:27.950
Make links active and describe them accurately.

49

00:03:27.950  -->  00:03:31.205
Focus on one action per page or item.

50

00:03:32.226  -->  00:03:35.411
Create useful navigation systems and search functions

51

00:03:35.411  -->  00:03:38.030
Provide easy-to-understand help documentation

52

00:03:38.030  -->  00:03:40.447
or clear contact options.

53

00:03:41.679  -->  00:03:45.269
Efficiency is often confused with effectiveness.

54

00:03:45.269  -->  00:03:47.599
But efficiency is all about speed.

55

00:03:47.599  -->  00:03:50.739
How fast can the user get the job done?

56

00:03:50.739  -->  00:03:55.159
Once users have learned the design, how quickly
can they complete tasks?

57

00:03:55.159  -->  00:04:00.329
So avoid interruptions such as forced logins
or pop-ups.

58

00:04:00.329  -->  00:04:03.076
Make forms easy to fill in.

59

00:04:04.999  -->  00:04:07.469
Think about how many steps a 
user needs to reach a goal?

60

00:04:07.469  -->  00:04:09.438
Can this be reduced?

61

00:04:10.640  -->  00:04:14.129
Or develop meaningful shortcuts 
for power users.

62

00:04:14.129  -->  00:04:18.349
For example, consider the number of hours
you saved using command C and V

63

00:04:18.349  -->  00:04:20.869
to copy and paste text.

64

00:04:21.800  -->  00:04:24.650
How pleasant is it to use the design?

65

00:04:24.650  -->  00:04:29.560
Engagement occurs when the user finds the
product pleasant and satisfying to use.

66

00:04:29.560  -->  00:04:35.650
The right layouts, readable typography, and
ease of navigation all come together.

67

00:04:35.650  -->  00:04:39.650
To give the user the right interaction and
make it engaging.

68

00:04:39.650  -->  00:04:42.460
For instance
The clearer and simpler the language used

69

00:04:42.460  -->  00:04:43.460
in your product.

70

00:04:43.460  -->  00:04:46.889
The more likely your information will have
the right impact on the user 

71

00:04:46.889  -->  00:04:49.044
and the actions they can take.

72

00:04:49.044  -->  00:04:52.306
Present a clear, logical hierarchy of information.

73

00:04:52.306  -->  00:04:57.770
Organize content into manageable chunks using
headings and subheadings.

74

00:04:57.770  -->  00:05:02.830
Emphasize important information at the beginning
and end of interactive sequences.

75

00:05:02.830  -->  00:05:09.360
Make paragraphs clear and recognizable to
avoid flooding the user with a wall of text.

76

00:05:09.360  -->  00:05:11.340
Combine aesthetic appeal with readability.

77

00:05:11.340  -->  00:05:13.640
Choose fonts that are easy to read.

78

00:05:13.640  -->  00:05:19.101
That means high contrast to the background
and font sizes large enough for users to read.

79

00:05:19.942  -->  00:05:24.419
When an error occurs, make sure that users
can recover from an error and get back to

80

00:05:24.419  -->  00:05:26.340
what they were doing.

81

00:05:26.340  -->  00:05:28.889
Error tolerance supports a range of user actions.

82

00:05:28.889  -->  00:05:32.389
And it shows an error only in genuine situations.

83

00:05:32.389  -->  00:05:36.411
For example
Limit the possibilities of doing the wrong thing.

84

00:05:36.599  -->  00:05:41.080
Add warnings and autocorrect functions to
cut errors.

85

00:05:41.080  -->  00:05:46.910
Provide informative feedback on system status
and make errors easy to diagnose.

86

00:05:46.910  -->  00:05:48.940
Provide a back button to undo actions.

87

00:05:48.940  -->  00:05:53.819
Or offer the option to reset what they did
and start over.

88

00:05:53.819  -->  00:05:58.348
Avoid broken links and provide a good 'not
found page' if they come across it.

89

00:05:58.348  -->  00:06:04.187
A well-designed 404 page will try to help
the user return to a positive experience.

90

00:06:05.479  -->  00:06:11.440
How easy is it for users to accomplish basic
tasks when they first encounter the design?

91

00:06:11.440  -->  00:06:13.620
Or when they use it again after a while?

92

00:06:13.620  -->  00:06:17.368
Do they still find their way within your product?

93

00:06:17.368  -->  00:06:22.470
Examples to support ease of learning:
Mimic the real world in concepts, icons, and

94

00:06:22.470  -->  00:06:23.790
language.

95

00:06:23.790  -->  00:06:26.660
Use designs that fit a user's 
existing mental models.

96

00:06:26.660  -->  00:06:31.379
So for example, virtual buttons look a lot
like real buttons.

97

00:06:31.379  -->  00:06:34.020
Follow established standards 
on function and layout.

98

00:06:34.020  -->  00:06:38.900
Such as logo positioning, navigation, 
or search functionality.

99

00:06:38.900  -->  00:06:41.434
Keep the content consistent.

100

00:06:41.434  -->  00:06:45.037
Once you have a basic understanding 
of what usability is

101

00:06:45.037  -->  00:06:48.000
you also need to know how to measure it 
in your own designs.

102

00:06:48.000  -->  00:06:51.541
How do you know if your products 
are really usable?

103

00:06:51.541  -->  00:06:56.780
The only way to get there is to measure usability
during the entire design process.

104

00:06:56.780  -->  00:07:00.720
From the first wireframes 
to high-fidelity prototypes.

105

00:07:00.720  -->  00:07:05.479
There are many methods of testing usability,
but user testing is without exception the

106

00:07:05.479  -->  00:07:08.650
best method for detecting usability problems.

107

00:07:08.650  -->  00:07:12.280
In the lesson on user research, we take a
closer look at these and other methods.

108

00:07:13.240  -->  00:07:18.990
There are two other methods you can use: 
heuristic evaluation and cognitive walkthroughs.

109

00:07:18.990  -->  00:07:23.960
Please note that both methods are not a substitute
for testing with real users.

110

00:07:23.960  -->  00:07:27.820
They offer a cheaper way to identify problems
at all stages of the design process.

111

00:07:27.820  -->  00:07:31.759
But never skip testing with real users.

112

00:07:32.119  -->  00:07:35.700
Heuristics help you understand how usable
your products are.

113

00:07:35.700  -->  00:07:39.920
Jakob Nielsen created 
ten fundamental usability heuristics in 1994.

114

00:07:39.920  -->  00:07:43.280
And they are still used today.

115

00:07:43.280  -->  00:07:47.440
Together with usability testing, these heuristics
are very powerful to assess the usability

116

00:07:47.440  -->  00:07:48.891
of your product.

117

00:07:48.891  -->  00:07:52.169
Let's go through them one by one.

118

00:07:52.800  -->  00:07:56.270
The first heuristic is 
visibility of system status.

119

00:07:56.270  -->  00:08:00.800
This means that a system status should always
be clear to the user.

120

00:08:00.800  -->  00:08:03.199
Especially if they interact with the system.

121

00:08:03.199  -->  00:08:06.610
It should always provide immediate feedback
on the interaction.

122

00:08:06.610  -->  00:08:11.070
In this way, users learn the outcome and help
determine the next steps.

123

00:08:11.070  -->  00:08:16.510
Predictable interactions inspire confidence
in both the product and the brand.

124

00:08:16.510  -->  00:08:18.699
I'll give you some examples.

125

00:08:18.699  -->  00:08:19.960
Take a look at your smartphone.

126

00:08:19.960  -->  00:08:26.050
It informs you about the battery, Wi-Fi connection,
messages, missed calls and more.

127

00:08:26.050  -->  00:08:28.960
The status of the system.

128

00:08:28.960  -->  00:08:33.111
After you make an online payment, a charging
spinner will help you understand what's going on.

129

00:08:33.510  -->  00:08:39.090
This prevents unnecessary interactions such
as closing the screen or reloading.

130

00:08:39.090  -->  00:08:40.090
Or when you download a file.

131

00:08:40.090  -->  00:08:44.970
It is common to see a progress indicator showing
the time remaining and an animation of the

132

00:08:44.970  -->  00:08:48.000
file being saved to your hard drive.

133

00:08:48.000  -->  00:08:50.080
But you can also find it in the real world.

134

00:08:50.080  -->  00:08:53.200
Like the
"You are here" indicators on mall maps.

135

00:08:53.200  -->  00:08:57.890
These show you where you are so 
you understand where to go.

136

00:08:57.890  -->  00:09:01.821
The next heuristic is: 
'Match between system and the real world'.

137

00:09:01.821  -->  00:09:05.480
People approach each new system 
with a mental model in mind.

138

00:09:05.480  -->  00:09:10.480
In other words, people assume how the system
might work based on their experience with

139

00:09:10.480  -->  00:09:12.861
other similar systems.

140

00:09:12.861  -->  00:09:17.710
It is easier for users to learn how the interface
works when a design follows the conventions

141

00:09:17.710  -->  00:09:19.651
of the real world.

142

00:09:19.651  -->  00:09:23.630
The design should also speak the language
of the users, rather than internal jargon.

143

00:09:23.630  -->  00:09:28.471
This reduces the cognitive load and helps
to build an intuitive experience.

144

00:09:28.471  -->  00:09:34.720
Never assume that your understanding of words
or concepts matches that of your users.

145

00:09:34.720  -->  00:09:38.190
User research will help you discover your
users' familiar terminology.

146

00:09:38.190  -->  00:09:43.030
As well as their mental models around 
important concepts.

147

00:09:43.030  -->  00:09:46.170
You will find clear examples all around you:

148

00:09:46.170  -->  00:09:48.650
For example, look at the recycle bin on your
computer.

149

00:09:48.650  -->  00:09:53.930
It will appear full if you have deleted files
and empty if you have deleted those files.

150

00:09:53.930  -->  00:09:56.211
Just like in the real world.

151

00:09:56.211  -->  00:10:01.010
A folder icon is also a digital approximation
of a real world object.

152

00:10:01.010  -->  00:10:05.541
And helps us understand how to organize files
on our computer.

153

00:10:05.541  -->  00:10:07.732
Take a look at your smartphone.

154

00:10:07.732  -->  00:10:14.271
Apps like the compass, calculator or wallet
are all designs and names that mimic the real world.

155

00:10:15.310  -->  00:10:17.081
Or when you buy a book on your e-reader.

156

00:10:17.081  -->  00:10:19.540
It has a library with a collection of book
covers.

157

00:10:19.540  -->  00:10:25.078
And while you're reading, you can turn pages
and mark text as a real library book yourself.

158

00:10:25.935  -->  00:10:28.771
User control and freedom is the next heuristic.

159

00:10:28.771  -->  00:10:32.980
We are all human and we often perform 
actions by accident.

160

00:10:32.980  -->  00:10:38.000
You make a typo, you press the wrong button
or you accidentally delete a file.

161

00:10:38.000  -->  00:10:41.960
In those situations it is important to offer
users an exit.

162

00:10:41.960  -->  00:10:44.310
This keeps users in control of the system.

163

00:10:44.310  -->  00:10:47.530
And it prevents them from getting 
stuck and frustrated.

164

00:10:47.530  -->  00:10:52.220
When users can easily withdraw from a process
or undo an action, it promotes a sense of

165

00:10:52.220  -->  00:10:54.971
freedom and trust.

166

00:10:54.971  -->  00:11:00.660
A suitable emergency exit can be something
as simple as a back arrow, such as in a browser.

167

00:11:00.660  -->  00:11:04.640
Or a cancel button to end an interaction.

168

00:11:04.640  -->  00:11:10.520
Google Drive gives you the option to immediately
undo any action, if it happened by accident.

169

00:11:10.520  -->  00:11:12.190
Suppose you have a playlist on Spotify.

170

00:11:12.190  -->  00:11:16.640
You get a nice song sent to you by a friend
and you want to add it to a list.

171

00:11:16.640  -->  00:11:18.430
But it's already there.

172

00:11:18.430  -->  00:11:23.010
Instead of adding the song twice, Spotify
lets you know it's already in the list.

173

00:11:23.010  -->  00:11:28.210
They let you choose whether you still want
to add it or undo the action.

174

00:11:28.210  -->  00:11:33.111
Or if you buy something online and you add
something to your shopping cart that was already there.

175

00:11:33.630  -->  00:11:39.470
Before checkout, you can change the quantity
and avoid the item being delivered twice.

176

00:11:39.470  -->  00:11:44.120
All these examples show systems that don't
let users down if they make a mistake.

177

00:11:44.120  -->  00:11:48.259
Instead, they allow the user to fix it.

178

00:11:48.980  -->  00:11:54.690
The fourth heuristic deals with 'consistency
and standards’ and is also known as Jakob's Law.

179

00:11:54.690  -->  00:11:58.730
People spend most of their time using digital
products other than yours.

180

00:11:58.730  -->  00:12:03.180
The experiences of users with those other
products determine their expectations.

181

00:12:03.180  -->  00:12:06.190
They expect it to work the same way.

182

00:12:06.190  -->  00:12:11.502
Users should not wonder whether different
words, situations or actions mean the same thing.

183

00:12:11.690  -->  00:12:17.049
It increases the cognitive load on the users
by forcing them to learn something new.

184

00:12:17.049  -->  00:12:20.680
Consistency is one of the 
strongest contributors to usability.

185

00:12:20.680  -->  00:12:25.060
So follow established platform and industry
conventions.

186

00:12:25.060  -->  00:12:28.960
For instance
When you visit a website: the logo, navigation,

187

00:12:28.960  -->  00:12:32.700
or search function is usually in the same
place.

188

00:12:32.700  -->  00:12:37.000
Or have you ever noticed that the copy and
paste functionality works exactly the same

189

00:12:37.000  -->  00:12:38.810
no matter what app you use?

190

00:12:38.810  -->  00:12:41.360
But you can also find this in real life.

191

00:12:41.360  -->  00:12:47.320
For example, a hotel check-in counter is always
located at the front of a hotel.

192

00:12:47.320  -->  00:12:51.380
This consistency meets customer expectations.

193

00:12:51.380  -->  00:12:55.930
A good way to discover these similarities
is to conduct a competitive UX analysis.

194

00:12:55.930  -->  00:13:01.330
This will help you discover what competing
products are doing and what you could improve upon.

195

00:13:02.021  -->  00:13:06.860
A good starting point for a consistent design
system is Apple's Human Interface Guidelines

196

00:13:06.860  -->  00:13:10.220
or Google's Material Design Guidelines.

197

00:13:10.220  -->  00:13:15.730
They provide a solid foundation describing
key design components with many examples.

198

00:13:16.541  -->  00:13:22.560
Good error messages are important, but the
best designs prevent problems in the first place.

199

00:13:22.560  -->  00:13:26.001
There are two types of mistakes: 
slips and mistakes.

200

00:13:26.001  -->  00:13:30.149
Slips occur when the user tends to perform
one action but performs another

201

00:13:30.149  -->  00:13:32.490
due to a lack of attention.

202

00:13:32.490  -->  00:13:37.980
You can avoid this by providing users with
useful restrictions and good default settings.

203

00:13:37.980  -->  00:13:42.360
Like a highway with crash barriers so a driver
doesn't fall off a cliff.

204

00:13:42.360  -->  00:13:44.700
Think about what errors your users might encounter.

205

00:13:44.700  -->  00:13:48.450
How can you take steps to prevent these errors
before they happen?

206

00:13:49.652  -->  00:13:53.540
For instance:
When designing forms, show users what kind

207

00:13:53.540  -->  00:13:55.520
of information you need.

208

00:13:55.520  -->  00:14:00.428
For example, if you're expecting a number,
don't let users write other characters.

209

00:14:01.434  -->  00:14:06.310
Use confirmation dialogs for destructive actions.

210

00:14:06.310  -->  00:14:09.620
Automatic search suggestions prevent users
from making a mistake.

211

00:14:09.620  -->  00:14:14.310
And even if they enter a wrong search query,
you can get them back on track like Google

212

00:14:14.310  -->  00:14:16.618
does in this example.

213

00:14:17.700  -->  00:14:23.830
Mistakes are errors based on a mismatch between
the user's mental model and how the system works.

214

00:14:23.830  -->  00:14:28.790
You can avoid this by being consistent and
supporting user control.

215

00:14:28.790  -->  00:14:31.300
As discussed in the previous heuristic.

216

00:14:31.300  -->  00:14:35.050
But these types of errors are often not easy
to find and fix.

217

00:14:35.050  -->  00:14:38.601
User testing is the best way 
to uncover these issues.

218

00:14:39.683  -->  00:14:44.750
There are two types of memory retrieval: 
recognition and recall.

219

00:14:44.750  -->  00:14:49.140
Recall occurs when you need to find seldom-used
information in your memory.

220

00:14:49.140  -->  00:14:50.140
Where were you?

221

00:14:50.140  -->  00:14:51.740
Who did you talk to last?

222

00:14:51.740  -->  00:14:55.360
Or how should you approach this process again?

223

00:14:55.360  -->  00:14:59.070
To retrieve information, people have to activate
more memory chunks.

224

00:14:59.070  -->  00:15:02.290
This requires more work.

225

00:15:02.290  -->  00:15:06.640
Recognition is a very shallow form of memory
retrieval and it requires no work.

226

00:15:06.640  -->  00:15:11.570
For example, when you recognize a person or
object that you are familiar with.

227

00:15:11.570  -->  00:15:13.640
Humans have limited short-term memory.

228

00:15:13.640  -->  00:15:16.680
Recognizing something is always easier than
remembering it.

229

00:15:16.680  -->  00:15:20.040
So don't make users work harder than necessary.

230

00:15:20.040  -->  00:15:24.161
You do this by staying close to your users'
mental models and presenting information in

231

00:15:24.161  -->  00:15:25.800
a way that makes sense to them.

232

00:15:27.963  -->  00:15:30.010
I will give you some examples.

233

00:15:30.010  -->  00:15:32.360
Reduce the information users need to remember.

234

00:15:32.360  -->  00:15:37.200
We find the format of multiple choice questions
easier because we need to recognize the answer

235

00:15:37.200  -->  00:15:40.320
instead of memorizing it.

236

00:15:40.320  -->  00:15:45.430
Provide help in context, rather than giving
users a long tutorial to remember.

237

00:15:45.430  -->  00:15:49.620
Another example is a good user interface,
which makes it easier to browse icons and

238

00:15:49.620  -->  00:15:54.634
open a file for users unfamiliar 
with commands in the terminal.

239

00:15:55.810  -->  00:16:00.480
When people make more use of a product, they
develop a greater need for flexibility and

240

00:16:00.480  -->  00:16:02.630
efficiency in use.

241

00:16:02.630  -->  00:16:03.960
Every user is unique.

242

00:16:03.960  -->  00:16:07.040
They each have their own different 
needs and skills.

243

00:16:07.040  -->  00:16:10.630
Users should be able to customize the interface
according to their needs.

244

00:16:10.630  -->  00:16:14.670
So that fewer interactions enable faster navigation.

245

00:16:14.670  -->  00:16:21.310
A good user interface should provide functionality
to both inexperienced and experienced users.

246

00:16:21.310  -->  00:16:26.140
For instance: Shortcuts and touch gestures 
can speed up interaction.

247

00:16:26.140  -->  00:16:30.860
This makes the design suitable for both inexperienced
and experienced users.

248

00:16:30.860  -->  00:16:35.811
For example, you can 'like' a photo on Instagram
by tapping on it, instead of clicking on the heart.

249

00:16:36.000  -->  00:16:40.560
Or by pressing the L if you like a dribble
design.

250

00:16:40.560  -->  00:16:44.890
Make a process flexible so people can choose
which method works for them.

251

00:16:44.890  -->  00:16:48.970
Allow users to customize frequent actions,
such as setting preferences for your route

252

00:16:48.970  -->  00:16:50.510
in Google Maps.

253

00:16:52.000  -->  00:16:55.890
The eight heuristic is about 
"Aesthetic and minimalist design".

254

00:16:55.890  -->  00:16:57.040
You may have heard of KISS.

255

00:16:57.040  -->  00:17:00.730
An acronym for ‘Keep It Simple, Stupid’.

256

00:17:00.730  -->  00:17:05.199
A well-known design principle that states
that most systems work best when kept simple

257

00:17:05.199  -->  00:17:07.240
rather than complicated.

258

00:17:07.240  -->  00:17:09.200
That's what this heuristic is all about.

259

00:17:09.200  -->  00:17:13.699
Keep clutter to a minimum and 
avoid unnecessary complexity.

260

00:17:13.699  -->  00:17:17.959
Interfaces should not contain information
that is not relevant or rarely needed.

261

00:17:17.959  -->  00:17:21.350
This competes for the user's limited resources.

262

00:17:21.350  -->  00:17:25.669
Ensure that the visual elements of the interface
support the primary goals of the user.

263

00:17:25.669  -->  00:17:30.529
So, only show the necessary components for
the current tasks.

264

00:17:30.529  -->  00:17:34.440
For example
Emphasize the things that matter most to users.

265

00:17:34.440  -->  00:17:38.480
Run tests to make sure what you think stands
out, stands out.

266

00:17:39.141  -->  00:17:42.340
Keep the most important things above the fold, 
so that users don't have to swipe or

267

00:17:42.340  -->  00:17:44.371
scroll to see them.

268

00:17:44.371  -->  00:17:48.029
Don't underestimate the power of where you
place different elements and the size and

269

00:17:48.029  -->  00:17:50.360
color of those elements.

270

00:17:51.622  -->  00:17:55.730
Help users recognize, diagnose, and recover
from errors.

271

00:17:55.730  -->  00:17:58.159
We've talked about error prevention before.

272

00:17:58.159  -->  00:18:01.779
Yet, despite our best efforts, errors may
still occur.

273

00:18:01.779  -->  00:18:05.250
So we have to design for when this happens.

274

00:18:05.250  -->  00:18:08.640
Create error messages in plain language and
not get lost in translation.

275

00:18:08.640  -->  00:18:10.771
So no error codes.

276

00:18:10.771  -->  00:18:15.169
They must identify the problem and propose
a solution.

277

00:18:15.169  -->  00:18:19.299
Use familiar visuals for error messages, such
as bold red text.

278

00:18:19.299  -->  00:18:22.570
The last rule of good error messages is courtesy.

279

00:18:22.570  -->  00:18:26.800
Never blame the user or suggest that they
are stupid.

280

00:18:26.800  -->  00:18:30.120
For instance:
Look at this bad error message that is not

281

00:18:30.120  -->  00:18:32.671
clear or helpful to the user.

282

00:18:32.671  -->  00:18:36.450
This is an example of a banking app showing
an error with the login

283

00:18:36.450  -->  00:18:41.200
It warns them that an error has occurred
It tells them what's going on

284

00:18:41.200  -->  00:18:44.715
It gives options for correcting the error.

285

00:18:44.715  -->  00:18:48.509
And the last heuristic is about: 'Help and documentation.

286

00:18:48.509  -->  00:18:51.870
It is best if a system does not need 
any extra explanation.

287

00:18:51.870  -->  00:18:57.250
Still, it is often necessary to help users
understand how to perform their tasks.

288

00:18:57.250  -->  00:18:59.149
Through intuitive onboarding and tooltips.

289

00:18:59.149  -->  00:19:03.820
Or by providing clear, concise, and relevant
documentation.

290

00:19:03.820  -->  00:19:06.539
For example
Documentation should be well-structured,

291

00:19:06.539  -->  00:19:11.570
easily searchable, written in plain language, 
and minimalistic.

292

00:19:11.570  -->  00:19:13.659
Sometimes users don't need much documentation.

293

00:19:13.659  -->  00:19:16.740
A short manual explaining the basics is enough.

294

00:19:16.740  -->  00:19:23.240
Apps like Trello, Slack, and Duolingo do a
great job of onboarding their users.

295

00:19:23.240  -->  00:19:27.799
If possible, present the documentation in
context when the user needs it.

296

00:19:27.799  -->  00:19:32.210
Onboarding, walkthroughs, chatbots, popovers,
tooltips, videos and more.

297

00:19:32.210  -->  00:19:37.421
These are all ways to guide your users if
they encounter a block in completing their tasks.

298

00:19:38.430  -->  00:19:43.480
Now that you know what heuristics are, you
can use them to test the usability of your product.

299

00:19:43.480  -->  00:19:49.000
A heuristic evaluation is a process where
experts use rules of thumb to measure the

300

00:19:49.000  -->  00:19:51.909
usability of user interfaces.

301

00:19:51.909  -->  00:19:57.420
Evaluators use established heuristics as we
just discussed, or create their own ones.

302

00:19:58.050  -->  00:20:03.971
By doing regular evaluations during the design
process, you can improve usability right from the start.

303

00:20:04.100  -->  00:20:07.820
To perform a heuristic evaluation, you can
follow these steps:

304

00:20:07.820  -->  00:20:09.602
Define the heuristics.

305

00:20:09.602  -->  00:20:13.690
You can use Jakob Nielsen's heuristics, but
it's also good to define specific heuristics

306

00:20:13.690  -->  00:20:16.230
for your product or industry.

307

00:20:16.230  -->  00:20:17.389
Select 3-5 reviewers.

308

00:20:17.389  -->  00:20:21.129
It is good to have many raters in a heuristic
evaluation.

309

00:20:21.129  -->  00:20:23.100
Between three and five is enough.

310

00:20:23.100  -->  00:20:24.820
Your raters should not be your end users.

311

00:20:24.820  -->  00:20:29.189
They should be usability experts and with
domain expertise in the industry type

312

00:20:29.189  -->  00:20:31.659
your product is in.

313

00:20:32.620  -->  00:20:37.389
Brief your assessors so they know exactly
what to do and cover during their evaluation.

314

00:20:37.389  -->  00:20:40.570
Is it the whole product, a specific feature
or a process?

315

00:20:40.570  -->  00:20:45.169
Give them insight into the users, their needs,
and the context.

316

00:20:45.169  -->  00:20:49.679
User personas can help evaluators see things
from the user's perspective.

317

00:20:49.679  -->  00:20:54.429
Explain to evaluators what to cover in a selection
of tasks, and propose a scale of severity

318

00:20:54.429  -->  00:20:57.010
codes to identify problems.

319

00:20:57.010  -->  00:20:58.520
You can use a template like this one.

320

00:20:58.520  -->  00:21:01.111
You will find a link to this below the video.

321

00:21:02.974  -->  00:21:07.980
During the 1st Walkthrough you allow evaluators
to use the product so they can identify elements

322

00:21:07.980  -->  00:21:09.871
to analyze.

323

00:21:09.871  -->  00:21:14.951
In the 2nd pass, assessors examine individual
elements according to the heuristics.

324

00:21:14.951  -->  00:21:20.149
They also examine how these fit into the design
and take care of any problems.

325

00:21:20.149  -->  00:21:25.899
Finally, debrief evaluators in a session so
they can collect results for analysis and

326

00:21:25.899  -->  00:21:28.230
propose solutions.

327

00:21:28.230  -->  00:21:32.390
If you'd like to learn more about the heuristics
or evaluation process, we've placed links

328

00:21:32.390  -->  00:21:35.269
to some helpful resources below this video.

329

00:21:36.000  -->  00:21:42.309
Heuristic evaluation involves assessing whether
each element follows established usability principles.

330

00:21:42.309  -->  00:21:46.509
In a cognitive walkthrough, you try to put
yourself in the shoes of a new user.

331

00:21:46.509  -->  00:21:50.231
To see if a user can easily perform 
the desired tasks.

332

00:21:50.231  -->  00:21:55.017
This can be an effective method, especially
in the earlier design phases.

333

00:21:56.429  -->  00:22:02.841
Before starting the walkthrough, determine
the ideal path for the user to follow to achieve their goal.

334

00:22:02.980  -->  00:22:07.721
From which user perspective you are going
to test and what the end goal of the user is.

335

00:22:08.179  -->  00:22:11.628
Then walk through your prototype and answer
the following four questions

336

00:22:11.628  -->  00:22:13.681
 at each step of the flow.

337

00:22:13.681  -->  00:22:18.279
For this you can use the template that you
will find below this video.

338

00:22:19.378  -->  00:22:22.610
1. Will the user try to get the right effect?

339

00:22:22.610  -->  00:22:24.770
Put yourself in the user's shoes.

340

00:22:24.770  -->  00:22:28.799
Is it reasonable to expect that the user will
recognize your product as the one that can

341

00:22:28.799  -->  00:22:31.039
help them achieve their goal?

342

00:22:31.039  -->  00:22:35.299
Is it reasonable to expect that the user will
even get to the point of opening your app?

343

00:22:35.299  -->  00:22:38.639
Does your walkthrough start in the right place?

344

00:22:39.249  -->  00:22:43.041
2. Will the user notice that the correct action
is available?

345

00:22:43.041  -->  00:22:45.120
Is the first step clear enough?

346

00:22:45.120  -->  00:22:49.720
To start a task, the first step must be visible
on the interface.

347

00:22:49.720  -->  00:22:52.510
Hidden or obscured controls are a problem
for users.

348

00:22:52.510  -->  00:22:54.340
Like too many options.

349

00:22:54.340  -->  00:22:59.789
The more choices you present; the less likely
a user knows what to do.

350

00:23:00.767  -->  00:23:07.140
3. Will the user associate the correct action
with the effect the user is trying to achieve?

351

00:23:07.140  -->  00:23:12.240
The button may be visible, but will the user
recognize it as the button to use?

352

00:23:12.240  -->  00:23:16.701
If the action is too complex or if you use
industry jargon, it can be difficult for a

353

00:23:16.701  -->  00:23:20.500
user to figure out what it takes to achieve
their result.

354

00:23:21.148  -->  00:23:25.420
4. Will the user see progress towards solving
the task?

355

00:23:25.420  -->  00:23:29.850
The question at the end of each step on the
happy path is about feedback.

356

00:23:29.850  -->  00:23:33.669
How can your user see that he can proceed
to the next step?

357

00:23:33.669  -->  00:23:39.300
What kind of feedback does your interface
provide to show that the task has been completed?

358

00:23:39.300  -->  00:23:43.480
If the user strays from the happy path you
have mapped out, how will they be guided back

359

00:23:43.480  -->  00:23:45.789
to the correct next action?

360

00:23:45.789  -->  00:23:51.721
How can the user undo, cancel or return to
the beginning of the previous action?

361

00:23:51.721  -->  00:23:55.288
After this walkthrough, you should have a
to-do list to work on.

362

00:23:56.670  -->  00:23:58.880
Anyone can perform a cognitive walkthrough.

363

00:23:58.880  -->  00:24:02.100
But it is better to select an objective person.

364

00:24:02.100  -->  00:24:06.190
Someone who has not worked on the product
and thus has no attachment or aversion to

365

00:24:06.190  -->  00:24:08.760
specific elements of the interface.

366

00:24:08.760  -->  00:24:12.429
This brings us to the end of this short course
on usability.

367

00:24:12.429  -->  00:24:15.388
Let's summarize what we've covered in this
lesson.

368

00:24:16.109  -->  00:24:20.580
Usability is about making functions easy to
use and enjoyable.

369

00:24:20.580  -->  00:24:25.519
Utility is about providing features that users
need in the first place.

370

00:24:25.519  -->  00:24:28.990
It doesn't matter that something is easy if
it's not what a user wants.

371

00:24:28.990  -->  00:24:35.309
Only when you combine usability with utility
do products become useful to users.

372

00:24:35.309  -->  00:24:39.330
Usability is therefore important because it
is a necessary condition for survival.

373

00:24:39.330  -->  00:24:44.770
If your product is not usable, users will
leave you for the competition.

374

00:24:44.770  -->  00:24:47.289
A usable interface consists of five parts.

375

00:24:47.289  -->  00:24:54.690
You need to make sure designs are efficient,
effective, engaging, easy to learn, and error

376

00:24:54.690  -->  00:24:58.210
tolerant if you want them to succeed.

377

00:24:58.210  -->  00:25:01.080
We then discussed ways to measure usability.

378

00:25:01.080  -->  00:25:06.630
User testing is without exception the best
method for detecting usability problems.

379

00:25:07.832  -->  00:25:13.340
There are also two other methods you can use:
heuristic evaluation and cognitive walkthroughs.

380

00:25:13.971  -->  00:25:19.691
We have discussed the ten best-known heuristics
of Jakob Nielsen that you can use for an evaluation.

381

00:25:19.691  -->  00:25:26.080
It is a process where experts use rules of
thumb to measure the usability of user interfaces.

382

00:25:26.080  -->  00:25:30.840
By conducting regular evaluations during the
design process, you can improve usability

383

00:25:30.840  -->  00:25:33.700
right from the start.

384

00:25:33.700  -->  00:25:37.070
In a cognitive walkthrough, you look at the
process of putting yourself in the shoes of

385

00:25:37.070  -->  00:25:38.070
a new user.

386

00:25:38.070  -->  00:25:43.499
To see if a user can easily perform the desired
tasks.

387

00:25:43.499  -->  00:25:48.210
Before starting the walkthrough, determine
the ideal path for the user to follow to achieve

388

00:25:48.210  -->  00:25:49.679
their goal.

389

00:25:49.679  -->  00:25:54.000
From which user perspective you are going
to test and what the end goal of the user is.

390

00:25:54.770  -->  00:25:58.079
Then walk through your prototype and answer
the following four questions at

391

00:25:58.079  -->  00:26:00.000
each step of the flow.

392

00:26:00.190  -->  00:26:03.480
After this walkthrough, you should have a
to-do list to work on.

393

00:26:04.261  -->  00:26:09.200
If you want to learn more about usability,
check the list of articles and books below this video.

394

00:26:09.861  -->  00:26:12.899
Now imagine that you have designed the most
usable product.

395

00:26:12.899  -->  00:26:16.061
But a significant number of 
users cannot use it.

396

00:26:16.331  -->  00:26:17.391
Do you want to know why?

397

00:26:17.391  -->  00:26:18.830
And what can you do about it?

398

00:26:18.830  -->  00:26:22.134
Join me in the next lesson on accessibility.
