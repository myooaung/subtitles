WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.770
So far we're using

00:00:01.770 --> 00:00:04.125
file system to store
our convict files.

00:00:04.125 --> 00:00:07.005
But we could also use
a repository like SVN.

00:00:07.005 --> 00:00:08.850
Get. In this video,

00:00:08.850 --> 00:00:10.230
we're going to take
a look at how we can

00:00:10.230 --> 00:00:12.060
manage our config files and

00:00:12.060 --> 00:00:16.620
Git repository and have the
conflicts over solve them.

00:00:16.620 --> 00:00:19.410
For this, I assume that
you have some familiarity

00:00:19.410 --> 00:00:21.900
on how to use Git repository.

00:00:21.900 --> 00:00:24.330
If you do not, then just try to

00:00:24.330 --> 00:00:27.405
explore a little bit about
Git before you continue.

00:00:27.405 --> 00:00:30.345
The first obvious thing we
need to do is to of course,

00:00:30.345 --> 00:00:34.200
create a Git repository to
store our config files.

00:00:34.200 --> 00:00:35.655
I've already done that.

00:00:35.655 --> 00:00:37.995
I already have an
existing repository.

00:00:37.995 --> 00:00:41.800
This is where I would
like to store our files.

00:00:41.890 --> 00:00:45.260
I can either do it through
command line or I can

00:00:45.260 --> 00:00:48.320
do it manually from GitHub.com.

00:00:48.320 --> 00:00:54.540
I went to do manually
upload files.

00:00:55.180 --> 00:00:58.130
I'm going to copy the
exact file that I had

00:00:58.130 --> 00:01:02.280
created inside our file system.

00:01:03.070 --> 00:01:09.545
Once you do that, we
can commit the changes.

00:01:09.545 --> 00:01:14.945
And so it will be
available for US taxes.

00:01:14.945 --> 00:01:18.450
Let's change the port
to something else.

00:01:19.030 --> 00:01:24.720
I'll hit Edit and change the
straight zeros, 07 maybe.

00:01:24.880 --> 00:01:29.310
And again, commit the changes.

00:01:30.880 --> 00:01:35.750
Now we have the conflicts
ready in our git repository.

00:01:35.750 --> 00:01:37.655
The next obvious
thing we need to do

00:01:37.655 --> 00:01:39.915
is to introduce few
configurations inside of

00:01:39.915 --> 00:01:43.010
conflict server so that our
conflicts over can actually

00:01:43.010 --> 00:01:47.460
read the convicts from
the Git repository.

00:01:48.220 --> 00:01:51.890
Inside that lips,
inside the bootstrap

00:01:51.890 --> 00:01:56.240
dot properties file of
the convict server.

00:01:56.240 --> 00:02:00.275
We no longer would like to
have these two properties.

00:02:00.275 --> 00:02:04.620
Instead, this is
going to be spring.

00:02:05.980 --> 00:02:16.535
Cloud dot, dot URI equals.

00:02:16.535 --> 00:02:22.650
I'm going to copy the URL
from here until this part.

00:02:24.190 --> 00:02:28.445
Basically the URI
of our repository.

00:02:28.445 --> 00:02:30.140
And that's all there is to it.

00:02:30.140 --> 00:02:32.885
You don't have to do any
additional configurations.

00:02:32.885 --> 00:02:36.660
Let's restart the
conflict server.

00:02:39.460 --> 00:02:43.280
Failed. It says if you're
using good profiling to set

00:02:43.280 --> 00:02:47.220
the get URI, your
configurations.

00:02:48.750 --> 00:02:51.880
Okay, We seem to have
mistyped the property,

00:02:51.880 --> 00:02:57.565
The supposed to be Spring
Cloud config server,

00:02:57.565 --> 00:02:59.035
get your eye.

00:02:59.035 --> 00:03:07.405
Let's relaunch your
conflicts over this time,

00:03:07.405 --> 00:03:09.950
but don't have any issues.

00:03:09.960 --> 00:03:15.250
Let's also relaunch the
product service and it

00:03:15.250 --> 00:03:17.590
should start on the
new port that we have

00:03:17.590 --> 00:03:21.710
configured, which is 8007.

00:03:26.040 --> 00:03:34.730
And it indeed walk in our
servers started in 8007.

00:03:34.730 --> 00:03:39.390
Let's quickly go to Postman
and try sending the request.

00:03:41.140 --> 00:03:43.955
Our configurations have been

00:03:43.955 --> 00:03:45.680
picked up from the
Git repository.

00:03:45.680 --> 00:03:47.900
Now, one thing to

00:03:47.900 --> 00:03:50.915
notice is that whenever you
make changes in the conflict,

00:03:50.915 --> 00:03:54.650
it may not get reflected
on the client service.

00:03:54.650 --> 00:03:56.765
Let me show you what I mean.

00:03:56.765 --> 00:03:59.495
Go back to the GitHub.

00:03:59.495 --> 00:04:06.620
Let me try adding a new property
that says maybe message,

00:04:06.620 --> 00:04:11.194
Hello From get whatever.

00:04:11.194 --> 00:04:14.205
Commit those changes.

00:04:14.205 --> 00:04:21.890
Let's say I would like to
read it from the controller.

00:04:27.570 --> 00:04:35.270
Controller. Strike read
that property in here.

00:04:35.640 --> 00:04:41.600
String message.

00:04:41.940 --> 00:04:46.480
We use the value
annotation to read

00:04:46.480 --> 00:04:52.720
that property to
set dollar message.

00:04:52.720 --> 00:05:00.080
And this has to go inside
the curly braces the file.

00:05:00.080 --> 00:05:05.790
Let's also have a
salt statement.

00:05:08.080 --> 00:05:11.220
Print Allen.

00:05:11.980 --> 00:05:20.675
Maybe message is
whatever message.

00:05:20.675 --> 00:05:23.930
Let me relaunch the
product service.

00:05:23.930 --> 00:05:26.855
Of course, this may work.

00:05:26.855 --> 00:05:29.100
Let's wait a bit.

00:05:39.520 --> 00:05:42.845
The first send a request.

00:05:42.845 --> 00:05:44.945
You're seeing that message.

00:05:44.945 --> 00:05:50.250
Let me go back to get and
introduce some changes.

00:05:51.970 --> 00:05:58.980
Hello from maybe GitHub,
commit the changes.

00:05:58.990 --> 00:06:05.285
Go back. If you send
the request now,

00:06:05.285 --> 00:06:07.415
still you're going to
say the same message,

00:06:07.415 --> 00:06:09.575
it will not get reflected.

00:06:09.575 --> 00:06:12.120
For this.

00:06:12.670 --> 00:06:18.830
We have to actually refresh
the context. For this reason.

00:06:18.830 --> 00:06:20.255
We're also going to be needing

00:06:20.255 --> 00:06:23.900
the springboard actuator that

00:06:23.900 --> 00:06:26.554
added the dependency as
part of product service.

00:06:26.554 --> 00:06:28.790
I don't have to do it again.

00:06:28.790 --> 00:06:30.815
Once you have that.

00:06:30.815 --> 00:06:33.839
In order to refresh
the conflict.

00:06:35.170 --> 00:06:38.360
This class has to be going under

00:06:38.360 --> 00:06:41.495
refresh scope. Someone to say.

00:06:41.495 --> 00:06:45.200
Refresh scope.

00:06:45.200 --> 00:06:47.210
Once you do that, you
can actually call

00:06:47.210 --> 00:06:51.750
the actual endpoint to
refresh the configurations.

00:06:52.900 --> 00:06:56.675
Me launch the product service.

00:06:56.675 --> 00:06:59.400
With all these changes.

00:07:07.180 --> 00:07:11.130
Let's go back and
send the request.

00:07:13.270 --> 00:07:16.070
You'll see that message.

00:07:16.070 --> 00:07:18.290
Let me now go back to

00:07:18.290 --> 00:07:22.350
GitHub and change the
message to something else.

00:07:23.740 --> 00:07:33.260
Whatever. I'll go inside.

00:07:33.260 --> 00:07:40.320
The actual trend, 0.001.

00:07:58.270 --> 00:08:02.570
We haven't enabled the
actual trend points.

00:08:02.570 --> 00:08:07.680
To do that. Let's get inside.

00:08:07.690 --> 00:08:11.280
We can do it from here itself.

00:08:14.050 --> 00:08:20.990
Going to say management
dot endpoints, dot,

00:08:20.990 --> 00:08:29.870
dot, exposure include
equals refresh.

00:08:29.870 --> 00:08:31.490
Would like to expose the refresh

00:08:31.490 --> 00:08:41.165
endpoint management
endpoint web dot exposure,

00:08:41.165 --> 00:08:46.230
dot include equals
refresh the changes.

00:08:49.990 --> 00:08:54.090
Launched the product
service once again,

00:09:08.710 --> 00:09:13.145
by the way, it is
supposed to be at 007.

00:09:13.145 --> 00:09:18.560
Sorry about that. We can call

00:09:18.560 --> 00:09:26.040
this endpoint to get the
latest config information.

00:09:26.380 --> 00:09:30.630
Let's change this one last time.

00:09:31.120 --> 00:09:40.770
Come into changes to copy this.

00:09:40.810 --> 00:09:43.010
This is a post request,

00:09:43.010 --> 00:09:44.360
so into sand it from

00:09:44.360 --> 00:09:51.425
the postman post and
send the request.

00:09:51.425 --> 00:09:54.470
And here we're going to see

00:09:54.470 --> 00:09:58.260
the changes that
were introduced.

00:09:59.710 --> 00:10:02.030
Let's go back here.

00:10:02.030 --> 00:10:05.225
And since this class is
under refresh scope,

00:10:05.225 --> 00:10:08.165
will get the updated values.

00:10:08.165 --> 00:10:11.730
Let's try sending the request.

00:10:13.930 --> 00:10:17.430
We get the updated value.
