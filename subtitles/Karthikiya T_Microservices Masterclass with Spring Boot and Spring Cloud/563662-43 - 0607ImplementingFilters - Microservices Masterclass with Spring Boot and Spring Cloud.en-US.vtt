WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.890
We've talked about implementing

00:00:01.890 --> 00:00:03.975
cross-cutting counselors
using filters.

00:00:03.975 --> 00:00:06.705
Well, that's possible
with custom filters.

00:00:06.705 --> 00:00:09.660
But what we're going to take
a look at now are bunch

00:00:09.660 --> 00:00:12.690
off built-in filters
offered by Spring Cloud.

00:00:12.690 --> 00:00:16.470
The primarily yellow was
to manipulate the request.

00:00:16.470 --> 00:00:18.615
Let me show you what I mean.

00:00:18.615 --> 00:00:21.750
Right now we have
routes configured

00:00:21.750 --> 00:00:25.545
with the route pattern
as well as the URI.

00:00:25.545 --> 00:00:29.535
We're now going to add filters.

00:00:29.535 --> 00:00:32.400
We can add bunch of filters.

00:00:32.400 --> 00:00:35.800
Going to accept the
lambda expression.

00:00:36.400 --> 00:00:39.320
And I'm going to say F dot.

00:00:39.320 --> 00:00:42.980
We've got a bunch of
filters that we can apply.

00:00:42.980 --> 00:00:45.845
Ad request header as
the name suggests.

00:00:45.845 --> 00:00:48.920
This would allow us
to add adequate habit

00:00:48.920 --> 00:00:50.735
before routing the call

00:00:50.735 --> 00:00:53.900
or the request to the
destination service.

00:00:53.900 --> 00:00:58.025
Similarly, we can also
change the request URI.

00:00:58.025 --> 00:01:00.590
This might be useful in
case we would like to hide

00:01:00.590 --> 00:01:04.800
the original URL of the
destination service.

00:01:06.130 --> 00:01:09.785
We haven't yet talked
about circuit breaker.

00:01:09.785 --> 00:01:13.230
You probably don't
understand the space.

00:01:13.420 --> 00:01:18.560
We've got a bunch of other
methods which we can use.

00:01:18.560 --> 00:01:21.050
We can even modify the body.

00:01:21.050 --> 00:01:23.465
This might be useful, especially

00:01:23.465 --> 00:01:24.680
if you have some sense to

00:01:24.680 --> 00:01:26.450
data that you'd like to

00:01:26.450 --> 00:01:29.165
filter out before
sending the request.

00:01:29.165 --> 00:01:32.730
You would read the body
and do something with it.

00:01:34.390 --> 00:01:38.120
We also have the
option to redirect,

00:01:38.120 --> 00:01:40.160
will be able to
send the redirect

00:01:40.160 --> 00:01:44.460
URI back to the
requesting service.

00:01:46.810 --> 00:01:50.369
We can rewrite the path.

00:01:51.160 --> 00:01:56.150
You've got a bunch of filters
which we can explore.

00:01:56.150 --> 00:02:00.120
We can also set the HTTP status.

00:02:06.000 --> 00:02:08.840
That's all.

00:02:16.860 --> 00:02:19.390
You can just explore.

00:02:19.390 --> 00:02:20.785
All of these on your own.

00:02:20.785 --> 00:02:22.810
They're pretty
straightforward, but I'm just

00:02:22.810 --> 00:02:25.820
simply going to
demonstrate one of these.

00:02:25.890 --> 00:02:28.600
Obviously we can't
demonstrate everything

00:02:28.600 --> 00:02:31.345
that would be like

00:02:31.345 --> 00:02:36.145
too much off repetition.

00:02:36.145 --> 00:02:39.440
This is more or less
like a core Java stuff.

00:02:44.650 --> 00:02:49.380
Maybe I'd like to use
set response header.

00:02:49.930 --> 00:02:52.640
Going to accept key-value

00:02:52.640 --> 00:02:54.180
pair

00:02:58.120 --> 00:03:03.500
custom header.

00:03:03.500 --> 00:03:04.760
And the value is going to

00:03:04.760 --> 00:03:10.290
be whatever that
you wish to add.

00:03:12.250 --> 00:03:14.674
Some.

00:03:14.674 --> 00:03:19.310
Let's save the file and
relaunch our Gateway.

00:03:19.310 --> 00:03:22.220
We also have a filter
that would restrict

00:03:22.220 --> 00:03:25.940
number of requests that
are allowed per second.

00:03:25.940 --> 00:03:29.210
On, in other words, we
can set the request rate.

00:03:29.210 --> 00:03:33.390
There's a built-in
filter for that as well.

00:03:37.000 --> 00:03:45.360
Let's go to the browser and
send the request to get way.

00:03:49.870 --> 00:03:53.690
I'm sending requests to price.

00:03:53.690 --> 00:03:59.760
So this one's 0 to as the ID.

00:04:01.750 --> 00:04:04.760
We got back some response.

00:04:04.760 --> 00:04:07.380
Let us inspect.

00:04:09.700 --> 00:04:13.020
Go to the Network tab

00:04:14.620 --> 00:04:18.320
and try to analyze
the list of headers.

00:04:18.320 --> 00:04:22.565
We should be able to see
the response header.

00:04:22.565 --> 00:04:25.835
And here it is
customer response.

00:04:25.835 --> 00:04:29.270
With our custom response header.

00:04:29.270 --> 00:04:31.160
You can also set the request

00:04:31.160 --> 00:04:32.735
headers in the similar manner.

00:04:32.735 --> 00:04:34.040
And guess if there is

00:04:34.040 --> 00:04:35.420
some information that
you would like to

00:04:35.420 --> 00:04:38.970
pass the downstream nodes.
