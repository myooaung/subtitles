WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.090
Here is our workspace
and let us bring in

00:00:03.090 --> 00:00:06.840
all the necessary changes
inside out products of this.

00:00:06.840 --> 00:00:09.405
I'm gonna do it for products
service, but ideally,

00:00:09.405 --> 00:00:10.980
you should do the same for

00:00:10.980 --> 00:00:12.960
each and every
micro-service out there.

00:00:12.960 --> 00:00:15.720
But for simplicity, I'm
going to only do it for

00:00:15.720 --> 00:00:17.460
product service just to

00:00:17.460 --> 00:00:20.130
see how the Spring
Cloud bus functions.

00:00:20.130 --> 00:00:22.830
The first thing we want
to make sure is that

00:00:22.830 --> 00:00:25.710
we have our beans
as Refresh scope.

00:00:25.710 --> 00:00:28.005
That the beans
would be refreshed

00:00:28.005 --> 00:00:30.150
dynamically without
having to restart.

00:00:30.150 --> 00:00:32.800
There'll be refreshed
during runtime.

00:00:32.800 --> 00:00:35.030
Once you have it in place.

00:00:35.030 --> 00:00:36.860
The next thing we need to do

00:00:36.860 --> 00:00:40.020
is to introduce a dependency.

00:00:40.900 --> 00:00:44.100
Let's do just that.

00:00:47.920 --> 00:00:51.995
Bus. Amqp.

00:00:51.995 --> 00:00:56.090
Amqp stands for Advanced
Message Queuing Protocol.

00:00:56.090 --> 00:00:59.225
It is a specification
that RabbitMQ follows,

00:00:59.225 --> 00:01:01.685
which means you can use
any other software.

00:01:01.685 --> 00:01:03.365
Our message broker out there,

00:01:03.365 --> 00:01:05.705
which follows the
same specification

00:01:05.705 --> 00:01:07.699
AND gates if you're using Kafka,

00:01:07.699 --> 00:01:09.905
there is another
dependency for that.

00:01:09.905 --> 00:01:12.980
I believe it is bus hyphen

00:01:12.980 --> 00:01:16.970
Kafka In you to use that
if you're using Kafka.

00:01:16.970 --> 00:01:19.325
But since we're using RabbitMQ,

00:01:19.325 --> 00:01:20.570
this is what we need.

00:01:20.570 --> 00:01:22.640
Now by adding this dependency,

00:01:22.640 --> 00:01:24.785
it's going to do a
couple of things.

00:01:24.785 --> 00:01:26.480
Number one, it's going to make

00:01:26.480 --> 00:01:29.330
all our instances
as consumers of

00:01:29.330 --> 00:01:32.540
the message broker that
they'll be ready to

00:01:32.540 --> 00:01:34.940
listen to whatever the message

00:01:34.940 --> 00:01:37.400
that comes out of
the message broker.

00:01:37.400 --> 00:01:40.130
Number two is that
it will introduce

00:01:40.130 --> 00:01:43.429
an endpoint called boss refresh,

00:01:43.429 --> 00:01:45.125
which when we hit,

00:01:45.125 --> 00:01:46.895
it will refresh the context of

00:01:46.895 --> 00:01:49.160
all the microservices instances.

00:01:49.160 --> 00:01:52.865
You will know what I mean
once I run the application.

00:01:52.865 --> 00:01:57.200
But by default, that
endpoint would be disabled.

00:01:57.200 --> 00:01:59.730
We enable it manually.

00:01:59.950 --> 00:02:02.359
Let's go to GitHub.

00:02:02.359 --> 00:02:03.470
This is where the product

00:02:03.470 --> 00:02:05.915
service configuration
is deciding.

00:02:05.915 --> 00:02:14.910
I'm going to edit this
and enable that endpoint.

00:02:16.510 --> 00:02:21.320
I'm going to say
bus iPhone refresh.

00:02:21.320 --> 00:02:25.490
You could just use
a star character to

00:02:25.490 --> 00:02:30.395
enable all the endpoints.
It's your choice.

00:02:30.395 --> 00:02:32.999
I went to come with the changes.

00:02:34.110 --> 00:02:37.390
The next thing we're going
to do is to introduce

00:02:37.390 --> 00:02:40.750
all the required configuration.

00:02:40.750 --> 00:02:42.310
Now just by adding

00:02:42.310 --> 00:02:44.860
this dependency spring
auto confirmation

00:02:44.860 --> 00:02:47.695
would do much of the
heavy lifting for us.

00:02:47.695 --> 00:02:50.110
And it would assume that

00:02:50.110 --> 00:02:53.575
RabbitMQ is running
in its default port.

00:02:53.575 --> 00:02:57.070
However, it's always
good idea to specify it

00:02:57.070 --> 00:03:01.430
inside the conflict file.

00:03:01.440 --> 00:03:03.580
I'm going to introduce all

00:03:03.580 --> 00:03:06.340
that inside application.rb file.

00:03:06.340 --> 00:03:09.880
We could also do the same
inside the conflict file,

00:03:09.880 --> 00:03:11.500
deciding in our GitHub.

00:03:11.500 --> 00:03:14.750
But I'm going to
do it over here.

00:03:14.800 --> 00:03:16.955
Let me pause the video,

00:03:16.955 --> 00:03:19.805
fill this in, and then get back.

00:03:19.805 --> 00:03:25.355
I have added all the configuration
details of RabbitMQ.

00:03:25.355 --> 00:03:28.370
Now since these are all
default parameters, ideally,

00:03:28.370 --> 00:03:29.825
I don't have to add this

00:03:29.825 --> 00:03:32.945
because Spring Boot
automatically assume

00:03:32.945 --> 00:03:34.760
that the RabbitMQ
would be running in

00:03:34.760 --> 00:03:36.830
this port with the
default username

00:03:36.830 --> 00:03:38.735
and password which is guest.

00:03:38.735 --> 00:03:40.550
However, like I said before,

00:03:40.550 --> 00:03:42.650
it's always good idea to mention

00:03:42.650 --> 00:03:45.440
that in case if you want
to change something,

00:03:45.440 --> 00:03:47.495
you know where to go and change.

00:03:47.495 --> 00:03:49.220
In addition to that, I bought,

00:03:49.220 --> 00:03:51.725
I enabled the Spring Cloud bus,

00:03:51.725 --> 00:03:54.740
which is also mandatory.

00:03:54.740 --> 00:03:57.200
You have to enable both
spring births as well

00:03:57.200 --> 00:04:00.365
as the refresh feature.

00:04:00.365 --> 00:04:05.225
You could also do the same
for the conflict server.

00:04:05.225 --> 00:04:07.700
You could add the same
dependence even in

00:04:07.700 --> 00:04:11.435
conflict silver to make it
a publisher to act to MQ.

00:04:11.435 --> 00:04:14.420
But I'm not doing that because
it's already taken get

00:04:14.420 --> 00:04:18.065
implicitly due to
transitive dependencies.

00:04:18.065 --> 00:04:21.770
Lastly, let us try
to read something

00:04:21.770 --> 00:04:25.680
from the remote config file.

00:04:27.820 --> 00:04:32.090
We went to read message
from the conflict file

00:04:32.090 --> 00:04:37.070
inside of our
product controller.

00:04:37.070 --> 00:04:39.695
This is just to Desktop things

00:04:39.695 --> 00:04:43.320
and see if things are
working as expected.

00:04:43.840 --> 00:04:50.550
Let's read that parameter
from the conflict.

00:04:56.230 --> 00:05:00.420
Then let's try to print it out.

00:05:05.500 --> 00:05:10.805
Message and this is
going to be message.

00:05:10.805 --> 00:05:12.350
You'll know the purpose of it

00:05:12.350 --> 00:05:13.760
once you run the application,

00:05:13.760 --> 00:05:15.870
I'll see you in the next one.
