WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.080
We now have the pricing as
well as the inventory service.

00:00:04.080 --> 00:00:06.900
No time to send requests
to these services,

00:00:06.900 --> 00:00:10.155
retrieve some information,
consolidate everything,

00:00:10.155 --> 00:00:12.480
and then send back the response.

00:00:12.480 --> 00:00:15.690
Basically, we are going to
replace this hard coded values

00:00:15.690 --> 00:00:19.840
with whatever that gets
returned from this services.

00:00:19.880 --> 00:00:23.190
Now there are a couple of
approaches to send request.

00:00:23.190 --> 00:00:25.890
The four-step approach is
by using rest template,

00:00:25.890 --> 00:00:27.675
which is by the way duplicated.

00:00:27.675 --> 00:00:30.880
And the second approach
is by using web client.

00:00:30.880 --> 00:00:33.265
We're going to first take
a look at how we can send

00:00:33.265 --> 00:00:35.480
request using rest template.

00:00:35.480 --> 00:00:37.340
Then in future lectures
we'll see how we can

00:00:37.340 --> 00:00:38.990
do the same in reactive,

00:00:38.990 --> 00:00:41.030
we're using web client.

00:00:41.030 --> 00:00:45.240
Let's dependency inject
the rest template.

00:00:53.650 --> 00:00:57.750
Went to add the auto
white annotation.

00:00:58.420 --> 00:01:01.355
Using latest version of spring.

00:01:01.355 --> 00:01:04.955
It's not enough that you auto
white the rest template.

00:01:04.955 --> 00:01:08.250
You also need to
declare the bean.

00:01:08.290 --> 00:01:11.100
Let's do that.

00:01:21.340 --> 00:01:26.225
Return a new instance
of rest template.

00:01:26.225 --> 00:01:30.560
Let's annotate this with bin.

00:01:30.560 --> 00:01:32.840
Now spring will
create an instance of

00:01:32.840 --> 00:01:36.845
this template injected
inside our controller.

00:01:36.845 --> 00:01:39.290
We can now use this
object to send

00:01:39.290 --> 00:01:43.160
request to both pricing as
well as the inventory service.

00:01:43.160 --> 00:01:44.555
Get.

00:01:44.555 --> 00:01:46.805
For object.

00:01:46.805 --> 00:01:48.395
We're going to specify

00:01:48.395 --> 00:01:52.040
the URL to where we want
to send requests to.

00:01:52.040 --> 00:01:59.600
That's going to be dp slash
slash local host, 8002.

00:01:59.600 --> 00:02:02.765
That's what our pricing
services running.

00:02:02.765 --> 00:02:08.660
Price. And then we
specify the product ID.

00:02:08.660 --> 00:02:11.120
The response type
is going to be of

00:02:11.120 --> 00:02:14.825
type, Price dot class.

00:02:14.825 --> 00:02:17.135
We don't have this Bolger yet.

00:02:17.135 --> 00:02:18.650
We can actually copy that Porter

00:02:18.650 --> 00:02:21.479
from the pricing service.

00:02:22.030 --> 00:02:25.530
Let's do that real quick.

00:02:27.400 --> 00:02:32.720
And similarly, I'm also going
to copy the elementary POJO

00:02:32.720 --> 00:02:34.730
from the inventory service and

00:02:34.730 --> 00:02:38.075
habit inside our
product service.

00:02:38.075 --> 00:02:43.430
Control shift, all this
instruction is going to send

00:02:43.430 --> 00:02:45.320
the request and
whatever that gets

00:02:45.320 --> 00:02:49.830
returned will be unmarked
shelled to price our object.

00:02:52.960 --> 00:02:55.520
We're going to have
similar instruction

00:02:55.520 --> 00:02:57.470
for inventory as well.

00:02:57.470 --> 00:03:02.930
Except it's running
on port hit 003.

00:03:02.930 --> 00:03:07.260
This is going to be inventory.

00:03:08.980 --> 00:03:12.990
It's going to return
the inventory object.

00:03:20.800 --> 00:03:23.720
We can now use this object

00:03:23.720 --> 00:03:27.710
to retrieve desired information,

00:03:27.710 --> 00:03:31.640
get discounted price,
as well as what to use

00:03:31.640 --> 00:03:38.640
inventory to get this
stock information.

00:03:40.330 --> 00:03:46.710
Let's launch your
application. Product service.

00:03:50.110 --> 00:03:54.900
Pricing and inventory
services are already running.

00:03:55.630 --> 00:03:59.250
Let's now go to Postman.

00:04:00.280 --> 00:04:02.900
Send the request.

00:04:02.900 --> 00:04:04.340
And it seemed to be working.

00:04:04.340 --> 00:04:09.200
Let's change the ID to two.

00:04:09.200 --> 00:04:12.630
And this has worked as well.
