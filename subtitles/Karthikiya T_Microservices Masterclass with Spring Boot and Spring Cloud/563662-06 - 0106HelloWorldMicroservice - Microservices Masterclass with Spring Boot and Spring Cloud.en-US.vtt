WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.260 --> 00:00:02.430
Believe it or not,

00:00:02.430 --> 00:00:05.220
I think we've gained
enough knowledge to start

00:00:05.220 --> 00:00:08.805
creating a simple
application. Don't be scared.

00:00:08.805 --> 00:00:09.870
We're just going to create

00:00:09.870 --> 00:00:11.685
a simple Hello World application

00:00:11.685 --> 00:00:13.320
using Spring Boot.

00:00:13.320 --> 00:00:15.510
Now, I'm pretty sure

00:00:15.510 --> 00:00:17.610
whatever the steps that
I'm going to show you in

00:00:17.610 --> 00:00:20.130
this video may not
sound familiar

00:00:20.130 --> 00:00:21.450
because of the fact that

00:00:21.450 --> 00:00:23.310
you don't know what
is springboard.

00:00:23.310 --> 00:00:27.525
We have a chapter
dedicated to Spring Boot.

00:00:27.525 --> 00:00:29.430
We're going to talk
about springboard and

00:00:29.430 --> 00:00:31.590
all its features
along with examples.

00:00:31.590 --> 00:00:34.020
But for now, just
try to follow along

00:00:34.020 --> 00:00:37.065
with me and do exactly
what I'm trying to do.

00:00:37.065 --> 00:00:39.450
The idea is to just to
give you a sense of

00:00:39.450 --> 00:00:42.025
how microservices are created.

00:00:42.025 --> 00:00:45.980
Using springboard.
I go to file menu

00:00:45.980 --> 00:00:51.875
new and other search for spring.

00:00:51.875 --> 00:00:54.140
You should be able to
see this option that

00:00:54.140 --> 00:00:56.225
says Spring starter project.

00:00:56.225 --> 00:00:58.160
You wouldn't be
seeing this option

00:00:58.160 --> 00:00:59.660
if you have not installed

00:00:59.660 --> 00:01:05.580
spring tool suit plug-in or
spring tools. Click Next.

00:01:06.580 --> 00:01:10.955
Here we'll get to
set some options.

00:01:10.955 --> 00:01:14.360
You can choose Maven or Gradle,

00:01:14.360 --> 00:01:16.670
which are the tool
that you're using,

00:01:16.670 --> 00:01:20.330
the packaging type
version of the Java,

00:01:20.330 --> 00:01:23.315
in my case, it's 14.

00:01:23.315 --> 00:01:27.410
Again, we'll talk about this
in Spring Boot chapter.

00:01:27.410 --> 00:01:30.140
Let's leave everything
to their defaults,

00:01:30.140 --> 00:01:32.390
but make sure that you
choose the latest versions.

00:01:32.390 --> 00:01:35.360
By default. It might
be older version.

00:01:35.360 --> 00:01:38.270
So just make sure that you
choose the latest version.

00:01:38.270 --> 00:01:40.700
And click Next.

00:01:40.700 --> 00:01:44.885
Here we get to choose what's
called started dependencies.

00:01:44.885 --> 00:01:47.015
Again, we're going
to talk about this

00:01:47.015 --> 00:01:49.925
in more detail in
Spring Boot chapter.

00:01:49.925 --> 00:01:52.745
But for now, I'm going to add

00:01:52.745 --> 00:01:56.540
Spring Web dependency because

00:01:56.540 --> 00:01:59.405
I wanted to create
web application.

00:01:59.405 --> 00:02:01.999
And if I wanted
to have database,

00:02:01.999 --> 00:02:04.130
I could just add a
database as well,

00:02:04.130 --> 00:02:07.895
like H2 embedded
database as well.

00:02:07.895 --> 00:02:11.210
But in order to
keep things simple,

00:02:11.210 --> 00:02:14.615
I'm going to skip that
part, like Finnish.

00:02:14.615 --> 00:02:16.445
Going to take awhile.

00:02:16.445 --> 00:02:17.840
You can actually
see the progress

00:02:17.840 --> 00:02:20.160
at the bottom right corner.

00:02:23.500 --> 00:02:27.300
Once the project is created,

00:02:28.750 --> 00:02:32.070
open up this file.

00:02:33.430 --> 00:02:38.690
And this is a starting
point of our application.

00:02:38.690 --> 00:02:40.835
Every application has
a starting point,

00:02:40.835 --> 00:02:42.890
which is the main method.

00:02:42.890 --> 00:02:44.990
Here. I'm just simply going to

00:02:44.990 --> 00:02:53.210
say this out and then
put some message.

00:02:53.210 --> 00:02:58.040
Save the file. And let's run it.

00:02:58.040 --> 00:03:01.685
Run as Spring Boot app.

00:03:01.685 --> 00:03:05.010
You could also run it
as a Java application.

00:03:16.600 --> 00:03:19.520
We're able to
display the message.

00:03:19.520 --> 00:03:21.950
But the key thing to
notice here is that

00:03:21.950 --> 00:03:24.830
since we've added the
Spring Web started,

00:03:24.830 --> 00:03:27.830
dependency, springboard
has actually

00:03:27.830 --> 00:03:30.950
started and embedded
Tomcat server.

00:03:30.950 --> 00:03:34.880
Notice that we didn't actually
install Tomcat server.

00:03:34.880 --> 00:03:36.815
This is a feature
of springboard.

00:03:36.815 --> 00:03:38.030
Again, we're going to talk about

00:03:38.030 --> 00:03:40.955
all its features in
Spring Boot chapter.

00:03:40.955 --> 00:03:42.740
But essentially we don't have to

00:03:42.740 --> 00:03:45.065
explicitly install
the Tomcat server.

00:03:45.065 --> 00:03:47.330
We have an embedded
Tomcat server

00:03:47.330 --> 00:03:49.985
where we were able to
host our application.

00:03:49.985 --> 00:03:53.765
If we had added any
database, for instance,

00:03:53.765 --> 00:03:55.670
Spring Boot could
have just started

00:03:55.670 --> 00:03:57.770
an embedded database so

00:03:57.770 --> 00:04:00.125
that you don't have to
install it explicitly.

00:04:00.125 --> 00:04:03.050
Remember while we're talking
about microservices,

00:04:03.050 --> 00:04:04.520
each microservice would have

00:04:04.520 --> 00:04:07.055
its own database and
its own container.

00:04:07.055 --> 00:04:08.780
Now I hope that you got a sense

00:04:08.780 --> 00:04:11.570
of how microservices created.

00:04:11.570 --> 00:04:15.260
Well, actually we can't
say this as microservice.

00:04:15.260 --> 00:04:16.640
Technically this
doesn't fit into

00:04:16.640 --> 00:04:18.485
the definition of a microservice

00:04:18.485 --> 00:04:20.630
because this is more or less

00:04:20.630 --> 00:04:23.525
like a mini monolithic
application.

00:04:23.525 --> 00:04:26.525
But when you have this mini
monolithic applications

00:04:26.525 --> 00:04:27.980
talking to each other,

00:04:27.980 --> 00:04:31.265
that's when you have a
microservice architecture.

00:04:31.265 --> 00:04:35.285
That's when you have a system
built on microservices.

00:04:35.285 --> 00:04:37.220
Now, I'm pretty
sure that you might

00:04:37.220 --> 00:04:38.990
be having a lot of questions.

00:04:38.990 --> 00:04:40.400
For example, you
don't know what is

00:04:40.400 --> 00:04:42.560
this annotation is meant for.

00:04:42.560 --> 00:04:44.405
You don't know how to write

00:04:44.405 --> 00:04:47.225
code that will take
the incoming requests.

00:04:47.225 --> 00:04:49.010
We don't have any controller,

00:04:49.010 --> 00:04:51.815
we don't have any model, etc.

00:04:51.815 --> 00:04:53.420
All of those will be explained

00:04:53.420 --> 00:04:55.145
in coming chapters for sure.

00:04:55.145 --> 00:04:57.680
If you've understood
at least 40% of

00:04:57.680 --> 00:04:59.180
what I'm trying to say,

00:04:59.180 --> 00:05:01.950
then we're good to go.
