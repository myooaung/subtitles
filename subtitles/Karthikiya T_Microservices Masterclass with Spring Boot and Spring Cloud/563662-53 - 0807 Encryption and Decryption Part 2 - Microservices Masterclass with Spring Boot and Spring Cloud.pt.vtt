WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.890 --> 00:00:04.080
Vamos dar uma olhada em como
 podemos ativar a criptografia e

00:00:04.080 --> 00:00:07.335
descriptografia dentro
 do servidor de conflitos. 

00:00:07.335 --> 00:00:11.760
Tudo o que temos que fazer para
 habilitá-lo é apenas adicionar


00:00:11.760 --> 00:00:17.295
uma propriedade e isso é
 criptografar a chave de ponto. 

00:00:17.295 --> 00:00:20.775
Ele especificará
 a chave para criptografia,

00:00:20.775 --> 00:00:23.460
chave
 secreta


00:00:23.460 --> 00:00:26.880
e tudo será
 atendido automaticamente. 

00:00:26.880 --> 00:00:29.490
Isso permitiria
 certos endpoints que

00:00:29.490 --> 00:00:33.445
nos
 ajudarão a criptografar
 e descriptografar os dados. 

00:00:33.445 --> 00:00:35.750
E isso não
 funcionaria a menos que adicionássemos


00:00:35.750 --> 00:00:38.330
a dependência de segurança da primavera. 

00:00:38.330 --> 00:00:41.520
Vamos relançar a prata do seu
 condenado. 

00:00:45.490 --> 00:00:48.840
Vamos para o Postman. 

00:00:51.700 --> 00:00:56.180
Eu queria enviar
 solicitação para um endpoint. 

00:00:56.180 --> 00:01:01.760
Na verdade, uma solicitação de post
 queria dizer localhost. 

00:01:01.760 --> 00:01:04.040
Linhas de dois pontos são 0


00:01:04.040 --> 00:01:06.665
para onde quer que o
 sólido de conflito esteja sendo executado. 

00:01:06.665 --> 00:01:11.825
Slash, criptografe o endpoint. 

00:01:11.825 --> 00:01:15.089
Dentro do corpo da solicitação. 

00:01:15.160 --> 00:01:19.369
Podemos especificar os dados
 que gostariam de criptografar


00:01:19.369 --> 00:01:21.440
usando a chave


00:01:21.440 --> 00:01:24.680
especificada nas propriedades do ponto de
 bootstrap. 

00:01:24.680 --> 00:01:30.660
Fui dizer talvez minha senha,


00:01:31.150 --> 00:01:35.779
envie a solicitação e você
 obtém o valor criptografado. 

00:01:35.779 --> 00:01:37.985
Vou copiar isso. 

00:01:37.985 --> 00:01:40.880
Vá se levantar. E agora posso

00:01:40.880 --> 00:01:44.130
colar essas informações aqui. 

00:01:46.900 --> 00:01:54.949
Eu queria definir senha
 igual à senha criptografada. 

00:01:54.949 --> 00:01:57.425
Se for alguém com intenção
 maliciosa,


00:01:57.425 --> 00:02:00.094
ele dá uma olhada nessa string,


00:02:00.094 --> 00:02:02.690
provavelmente não vai
 entender nada. 

00:02:02.690 --> 00:02:05.195
E ele tenta fazer
 algo com ele. 

00:02:05.195 --> 00:02:08.119
Ele não tem a
 chave para descriptografar. 

00:02:08.119 --> 00:02:10.535
Ele não conhece essa chave. 

00:02:10.535 --> 00:02:12.900
Para descriptografá-lo. 

00:02:14.500 --> 00:02:18.230
Há uma
 coisa adicional a fazer é prefixar


00:02:18.230 --> 00:02:24.800
a string, a palavra cifra. 

00:02:24.800 --> 00:02:27.950
Ao fazer isso, os conflitos


00:02:27.950 --> 00:02:29.570
do que saberia
 que ela precisa


00:02:29.570 --> 00:02:34.680
descriptografar a string antes de
 enviá-la para o serviço. 

00:02:35.500 --> 00:02:38.940
Para confirmar essas alterações. 

00:02:39.820 --> 00:02:43.985
A mola configurada descriptografa
 automaticamente


00:02:43.985 --> 00:02:50.794
esse valor porque nós
 previmos com cifra. 

00:02:50.794 --> 00:02:54.425
O Zener, o endpoint
 para descriptografia também. 

00:02:54.425 --> 00:02:56.670
Deixe-me copiar isso. 

00:02:59.560 --> 00:03:10.385
Descriptografe a cópia e vamos
 colá-lo no corpo da solicitação. 

00:03:10.385 --> 00:03:17.759
A solicitação deveria
 enviar a solicitação de postagem. 

00:03:18.070 --> 00:03:22.950
Você tem o valor descriptografado. 

00:03:24.540 --> 00:03:28.360
Vamos relançar o serviço de
 conflito. 

00:03:28.360 --> 00:03:32.260
O servidor. Vamos entrar no

00:03:32.260 --> 00:03:37.435
controlador de serviço
 do produto
 e fazer suas alterações. 

00:03:37.435 --> 00:03:42.260
E mensagem suave, eu
 queria dizer senha. 

00:03:44.520 --> 00:03:47.870
Farei o mesmo em todos os lugares. 

00:03:50.970 --> 00:03:55.430
Fui relançar o serviço
 do produto também. 

00:04:01.590 --> 00:04:07.739
Vamos ao Postman e
 tente enviar a solicitação. 

00:04:11.890 --> 00:04:15.920
Podemos ver a senha. 

00:04:15.920 --> 00:04:18.545
Não estamos vendo a string
 criptografada


00:04:18.545 --> 00:04:20.150
porque o conflito Silva

00:04:20.150 --> 00:04:21.800
descriptografou antes

00:04:21.800 --> 00:04:24.720
enviá-la para o serviço
 do produto. 
