WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.490 --> 00:00:04.890
Let's talk about Log Stash.

00:00:04.890 --> 00:00:07.680
Here's a rough
architecture of Log Stash,

00:00:07.680 --> 00:00:09.585
but its basic components.

00:00:09.585 --> 00:00:11.970
The first of which is the input,

00:00:11.970 --> 00:00:15.345
which will define from where
to read the data from.

00:00:15.345 --> 00:00:19.080
Log Stash has support
for multiple sources.

00:00:19.080 --> 00:00:22.755
For example, we can read
the data from a file.

00:00:22.755 --> 00:00:26.145
We can capture output
from Michelle command,

00:00:26.145 --> 00:00:30.315
or we can extract data from
GitHub or Apache Kafka.

00:00:30.315 --> 00:00:33.750
Or we can even read
events from a TCP socket.

00:00:33.750 --> 00:00:35.610
It has support for

00:00:35.610 --> 00:00:38.880
every possible source that
you can never think of.

00:00:38.880 --> 00:00:40.560
And you will know
what I mean once I

00:00:40.560 --> 00:00:42.785
walk you through
the documentation.

00:00:42.785 --> 00:00:45.205
Next, we have filters.

00:00:45.205 --> 00:00:48.070
And out of many
responsibilities,

00:00:48.070 --> 00:00:51.160
one of the primary
reasons but filters is to

00:00:51.160 --> 00:00:53.170
format the data in a
manner that it can

00:00:53.170 --> 00:00:55.360
be consumed by the destination.

00:00:55.360 --> 00:00:57.700
For example, let's talk
about Elastic Search.

00:00:57.700 --> 00:00:58.900
For instance.

00:00:58.900 --> 00:01:01.420
If we read the data
from a simple file,

00:01:01.420 --> 00:01:05.065
obviously, the data may not
be in structured format.

00:01:05.065 --> 00:01:08.200
We need to structure the
data in a manner that it

00:01:08.200 --> 00:01:11.185
can be comfortably stored
in elastic search.

00:01:11.185 --> 00:01:12.984
That's just one example,

00:01:12.984 --> 00:01:15.790
or rather one
use-case of filters.

00:01:15.790 --> 00:01:19.420
We're going to talk about
filters in next lecture.

00:01:19.420 --> 00:01:21.880
Next we have the output

00:01:21.880 --> 00:01:25.020
which would define where
to send the data to.

00:01:25.020 --> 00:01:28.910
Again, Log Stash has support
for multiple destinations.

00:01:28.910 --> 00:01:32.450
You can write the data to a
file or you can send the data

00:01:32.450 --> 00:01:36.275
to a commercial monitoring
tool like logs I will.

00:01:36.275 --> 00:01:40.955
Like in our case, we can
send it to Elastic Search.

00:01:40.955 --> 00:01:44.840
The multiple different options
and it has support for

00:01:44.840 --> 00:01:46.940
everything wherever
destination that

00:01:46.940 --> 00:01:48.950
you can ever think of.

00:01:48.950 --> 00:01:51.140
What are the
configurations that we

00:01:51.140 --> 00:01:53.810
provide inside Log Stash?

00:01:53.810 --> 00:01:55.760
It is these three.

00:01:55.760 --> 00:01:58.175
Let me show you with an example.

00:01:58.175 --> 00:02:00.650
Here's the simplest
configuration we can

00:02:00.650 --> 00:02:03.215
have inside Log Stash.

00:02:03.215 --> 00:02:05.855
In this case, with
this configuration,

00:02:05.855 --> 00:02:09.080
the data will be read
from the input file,

00:02:09.080 --> 00:02:11.885
which in this case is
sought file dot log

00:02:11.885 --> 00:02:15.530
and would simply be copied
to the output file,

00:02:15.530 --> 00:02:18.080
which is desktop file dot log.

00:02:18.080 --> 00:02:19.880
Whereas in this case,

00:02:19.880 --> 00:02:23.120
we are sending the data
to elastic search by

00:02:23.120 --> 00:02:26.930
specifying the host where the
last year searches running.

00:02:26.930 --> 00:02:29.210
Likewise, source and
destination might

00:02:29.210 --> 00:02:31.790
differ depending on
your requirements.

00:02:31.790 --> 00:02:34.400
Let me quickly walk you
through the documentation.

00:02:34.400 --> 00:02:37.200
So to give you a better idea.

00:02:37.210 --> 00:02:40.940
So here are all
the input plug-ins

00:02:40.940 --> 00:02:44.580
that are provided by Log Stash.

00:02:45.430 --> 00:02:49.640
For example, we have
file for instance,

00:02:49.640 --> 00:02:51.365
which we just talked about.

00:02:51.365 --> 00:02:53.570
Or we can even
capture the output of

00:02:53.570 --> 00:02:57.335
a shell command
with exit plug-in.

00:02:57.335 --> 00:03:00.890
Similarly, we can also
get data from GitHub.

00:03:00.890 --> 00:03:06.770
We can even deceive even
over HTTP or HTTPS.

00:03:06.770 --> 00:03:11.820
We can also have GMS
as the input source.

00:03:12.820 --> 00:03:17.480
You've got multiple
different options.

00:03:17.480 --> 00:03:22.500
We even have standard
input, like keyboard.

00:03:24.910 --> 00:03:27.050
Depending on your requirements,

00:03:27.050 --> 00:03:29.510
you just need to go
to the documentation

00:03:29.510 --> 00:03:31.640
and follow the instructions.

00:03:31.640 --> 00:03:34.070
They even have great examples

00:03:34.070 --> 00:03:36.694
for each one of these plugins.

00:03:36.694 --> 00:03:39.890
Let us go inside file input.

00:03:39.890 --> 00:03:44.990
For instance. We have
multiple settings.

00:03:44.990 --> 00:03:46.895
For example, let's say
that you wanted to

00:03:46.895 --> 00:03:50.045
exclude certain
files from reading.

00:03:50.045 --> 00:03:52.189
Then you can use this setting

00:03:52.189 --> 00:03:54.845
and exclude certain
set of files.

00:03:54.845 --> 00:03:56.660
If you wanted to
change the delimiter,

00:03:56.660 --> 00:03:59.360
for instance, you can set
that as well by default.

00:03:59.360 --> 00:04:02.190
It's a newline character.

00:04:02.440 --> 00:04:05.690
So you've got lots of options to

00:04:05.690 --> 00:04:09.274
customize depending
on your needs.

00:04:09.274 --> 00:04:11.780
Just to explore
each one of these,

00:04:11.780 --> 00:04:13.295
take a look at the examples

00:04:13.295 --> 00:04:15.530
and try to get a
sense of what it

00:04:15.530 --> 00:04:19.565
is doing and how you can
configure the input source,

00:04:19.565 --> 00:04:21.005
same as the guests width.

00:04:21.005 --> 00:04:22.339
Output plugins.

00:04:22.339 --> 00:04:24.290
We have multiple
different options.

00:04:24.290 --> 00:04:27.290
You can send the
data to a CSV file,

00:04:27.290 --> 00:04:31.310
or we can send it
to Elastic Search,

00:04:31.310 --> 00:04:33.005
like in our case.

00:04:33.005 --> 00:04:35.765
Or you can even send
it as an email.

00:04:35.765 --> 00:04:39.000
I'll dump all the
data to a file.

00:04:41.350 --> 00:04:45.450
You've got endless
options here too.

00:04:45.910 --> 00:04:49.370
Just go through some
of these and try

00:04:49.370 --> 00:04:52.430
to get a sense of how
they're configured.

00:04:52.430 --> 00:04:54.470
All right, I'll see
you next one where we

00:04:54.470 --> 00:04:57.270
will talk about filters.
