WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.255
Welcome, We have all our
applications running.

00:00:03.255 --> 00:00:05.505
Let's now go to Postman.

00:00:05.505 --> 00:00:08.340
And in here we have
a couple of tabs.

00:00:08.340 --> 00:00:10.350
Each would correspond
to individual instance

00:00:10.350 --> 00:00:12.120
of products service.

00:00:12.120 --> 00:00:14.415
The first instance is running on

00:00:14.415 --> 00:00:19.320
8007 and the second one
is running on 8008.

00:00:19.320 --> 00:00:22.110
By launching these
two applications,

00:00:22.110 --> 00:00:24.495
we have not only started
products service,

00:00:24.495 --> 00:00:27.180
but also Spring Cloud bus.

00:00:27.180 --> 00:00:31.805
These two instances, no
consumers of RabbitMQ,

00:00:31.805 --> 00:00:33.290
which means they're
ready to listen

00:00:33.290 --> 00:00:35.790
what RabbitMQ has to say.

00:00:36.430 --> 00:00:39.740
Let us send the request.

00:00:39.740 --> 00:00:43.230
In one of these instances.

00:00:43.390 --> 00:00:46.340
Obviously would see the
product information.

00:00:46.340 --> 00:00:47.705
But in addition to that,

00:00:47.705 --> 00:00:49.340
if you go to the Council,

00:00:49.340 --> 00:00:55.440
going to see this message
from the conflict file.

00:00:56.200 --> 00:00:59.720
Now let us go ahead and hit it,

00:00:59.720 --> 00:01:02.540
the message and see
if it gets reflected

00:01:02.540 --> 00:01:06.590
across all the instances
of products, service.

00:01:06.590 --> 00:01:09.170
I'm going to just step in 123,

00:01:09.170 --> 00:01:12.600
whatever, come with the changes.

00:01:15.120 --> 00:01:17.800
Let's go to Postman.

00:01:17.800 --> 00:01:19.705
And if I send the request now,

00:01:19.705 --> 00:01:22.329
we're still going to
see World message,

00:01:22.329 --> 00:01:24.560
not the updated one.

00:01:25.590 --> 00:01:32.680
Let me do it again.
Let's still see

00:01:32.680 --> 00:01:34.570
the old message because

00:01:34.570 --> 00:01:36.520
computation context is not

00:01:36.520 --> 00:01:38.950
updated the moment
we made changes.

00:01:38.950 --> 00:01:42.985
Now GitHub, the convict salary
is aware of those changes,

00:01:42.985 --> 00:01:44.440
but none of the instances have

00:01:44.440 --> 00:01:46.390
actually asked for
those changes.

00:01:46.390 --> 00:01:50.920
The way we ask it by sending

00:01:50.920 --> 00:01:53.470
post request to bus refresh

00:01:53.470 --> 00:01:56.945
endpoint offered best
sprint Cloud bus.

00:01:56.945 --> 00:02:02.720
Now you could use aided of
the boards 8007 or 8008.

00:02:02.720 --> 00:02:05.600
It doesn't matter. Spring
bus would take care

00:02:05.600 --> 00:02:10.295
of refreshing the context
of all the instances.

00:02:10.295 --> 00:02:13.320
Let's send the request

00:02:21.970 --> 00:02:24.590
to the RabbitMQ management.

00:02:24.590 --> 00:02:26.180
You would notice that there is

00:02:26.180 --> 00:02:29.220
a message that got propagated.

00:02:29.980 --> 00:02:36.725
Now if you send request to
either of the instances,

00:02:36.725 --> 00:02:40.140
you'd see embedded message.

00:02:44.500 --> 00:02:50.555
Same would happen for
the other instance.

00:02:50.555 --> 00:02:53.930
Regardless of number of
instances available,

00:02:53.930 --> 00:02:55.850
spring bus would take
care of refreshing

00:02:55.850 --> 00:02:58.055
the context of all
the instances.

00:02:58.055 --> 00:02:59.570
And they would have the latest

00:02:59.570 --> 00:03:01.460
configurations
available to them.

00:03:01.460 --> 00:03:05.340
And we don't have to restart
the services or whatever.
