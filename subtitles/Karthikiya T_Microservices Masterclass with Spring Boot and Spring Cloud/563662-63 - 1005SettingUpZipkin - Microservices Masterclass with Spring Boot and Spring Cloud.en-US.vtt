WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.250
Okay, let us see how
we can configure

00:00:02.250 --> 00:00:04.140
zip conserver so that we

00:00:04.140 --> 00:00:06.555
can take a look at
what it has to offer.

00:00:06.555 --> 00:00:09.000
First step is of course

00:00:09.000 --> 00:00:11.475
to have the zip code
server up and running.

00:00:11.475 --> 00:00:12.900
And like I've mentioned before,

00:00:12.900 --> 00:00:14.610
there are multiple
ways to do that.

00:00:14.610 --> 00:00:16.770
If you are on a
Cloud Enrollment,

00:00:16.770 --> 00:00:19.545
you would obviously want
to launch a Docker image.

00:00:19.545 --> 00:00:21.450
But in our case, we are
going to be running

00:00:21.450 --> 00:00:24.030
ZIP can as a standalone server,

00:00:24.030 --> 00:00:26.700
which I have to go to this link.

00:00:26.700 --> 00:00:31.365
Zip can dot slash pages
slash quickstart.

00:00:31.365 --> 00:00:33.090
You should be able to find this

00:00:33.090 --> 00:00:34.965
with a quick Google search.

00:00:34.965 --> 00:00:37.065
If you go to the Java section,

00:00:37.065 --> 00:00:38.940
it has provided us a link.

00:00:38.940 --> 00:00:42.190
From there, we can download
the executable jar file.

00:00:42.190 --> 00:00:43.970
I've already done that.

00:00:43.970 --> 00:00:46.955
I've already downloaded
the JAR file.

00:00:46.955 --> 00:00:50.554
That's what we have
in the desktop.

00:00:50.554 --> 00:00:54.780
Now let me launch the
command processor.

00:00:56.560 --> 00:00:59.660
Go to desktop.

00:00:59.660 --> 00:01:05.010
Let's launch ourselves with
the command java hyphen jar.

00:01:13.600 --> 00:01:17.009
The silver is starting.

00:01:18.610 --> 00:01:22.565
By default. This is the port.

00:01:22.565 --> 00:01:24.305
The silver runs.

00:01:24.305 --> 00:01:26.285
It's nine for W1.

00:01:26.285 --> 00:01:33.485
Let's go there and see if the
web UI is up and running.

00:01:33.485 --> 00:01:35.630
Let me relaunch again.

00:01:35.630 --> 00:01:38.070
I've accidentally closed it.

00:01:39.820 --> 00:01:48.120
Let's go to browser and go to
port nine for the blue one.

00:01:48.880 --> 00:01:51.965
And sure enough, we're
seeing the ZIP can

00:01:51.965 --> 00:01:55.130
UI and we have our
server running as valid.

00:01:55.130 --> 00:02:00.185
The next step is to add
sleuth ZIP can dependency,

00:02:00.185 --> 00:02:02.060
which will glue both services

00:02:02.060 --> 00:02:03.905
as well as the zip conserver.

00:02:03.905 --> 00:02:05.630
That services can now send

00:02:05.630 --> 00:02:08.105
the tracing information
to zip conserver.

00:02:08.105 --> 00:02:11.930
That's what I've done
inside the Gradle file.

00:02:11.930 --> 00:02:15.095
We already have these
loot dependency.

00:02:15.095 --> 00:02:16.370
In addition to that, I've

00:02:16.370 --> 00:02:21.630
added solute zipcode
independency as well.

00:02:24.130 --> 00:02:27.800
In addition to that,
I've also mentioned with

00:02:27.800 --> 00:02:32.340
the zip server is running
inside the conflict file.

00:02:32.560 --> 00:02:36.845
Like you to specify
the base URL.

00:02:36.845 --> 00:02:40.475
Gzip can. If your server is
running in a remote location,

00:02:40.475 --> 00:02:42.770
instead of localhost, you should

00:02:42.770 --> 00:02:45.900
be giving the
element IP address.

00:02:48.010 --> 00:02:51.020
In case if we're
using the properties

00:02:51.020 --> 00:02:53.525
file to specify configurations.

00:02:53.525 --> 00:02:56.300
This is the key-value
pair here to specify

00:02:56.300 --> 00:02:59.915
that spring dot zip
code dot baseURL.

00:02:59.915 --> 00:03:02.870
You get the URL of Zipcar.

00:03:02.870 --> 00:03:07.560
I've done the same for all
the other micro-services.

00:03:08.740 --> 00:03:12.560
I would suggest you to
do the same and do it

00:03:12.560 --> 00:03:14.135
for all the microservices

00:03:14.135 --> 00:03:16.204
you're having on your workspace,

00:03:16.204 --> 00:03:18.380
that we get a complete
picture as to how

00:03:18.380 --> 00:03:20.600
the request is
flowing and how we

00:03:20.600 --> 00:03:24.740
can try to analyze
the problem harder.

00:03:24.740 --> 00:03:26.165
That's it for this video.

00:03:26.165 --> 00:03:27.530
In the next video
we're going to take

00:03:27.530 --> 00:03:28.760
a look at how we can use ZIP

00:03:28.760 --> 00:03:33.050
can do analyze what's
happening in our application.

00:03:33.050 --> 00:03:35.820
I'll see you in next one.
