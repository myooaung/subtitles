WEBVTT
1
00:00:00.060 --> 00:00:02.070
- [Instructor] To further your knowledge of Docker,

2
00:00:02.070 --> 00:00:06.060
I would say docs.docker.com is the ultimate resource.

3
00:00:06.060 --> 00:00:08.040
I have gained all my understanding

4
00:00:08.040 --> 00:00:11.070
primarily from Docker Docs, and it is very nicely organized,

5
00:00:11.070 --> 00:00:13.070
where you can take a look at each and every

6
00:00:13.070 --> 00:00:15.030
different component of Docker.

7
00:00:15.030 --> 00:00:16.060
So for example, you can take a look at

8
00:00:16.060 --> 00:00:20.060
Securing the Engine, Managing a Swarm, Admin Guide,

9
00:00:20.060 --> 00:00:21.060
and so on and so forth.

10
00:00:21.060 --> 00:00:22.060
That's very helpful.

11
00:00:22.060 --> 00:00:26.000
Now, in the course we talked about Docker Swarm Mode,

12
00:00:26.000 --> 00:00:29.060
which is orchestration built into the Docker Engine itself.

13
00:00:29.060 --> 00:00:31.040
Now, there are lots of other container

14
00:00:31.040 --> 00:00:32.090
orchestration frameworks.

15
00:00:32.090 --> 00:00:34.050
I will touch upon a few of those,

16
00:00:34.050 --> 00:00:36.040
just to kind of help you expand your knowledge

17
00:00:36.040 --> 00:00:38.000
a little bit more.

18
00:00:38.000 --> 00:00:41.000
Kubernetes is a production gate,

19
00:00:41.000 --> 00:00:42.080
container orchestration framework.

20
00:00:42.080 --> 00:00:45.010
This was originally started by Google.

21
00:00:45.010 --> 00:00:47.070
Now, it has been donated to CNCF,

22
00:00:47.070 --> 00:00:49.080
and that's where all the work is happening

23
00:00:49.080 --> 00:00:52.040
for Kubernetes, so I would highly encourage you

24
00:00:52.040 --> 00:00:54.000
to take a look at that.

25
00:00:54.000 --> 00:00:57.070
DC/OS, this project was started in 2009,

26
00:00:57.070 --> 00:00:59.000
and then over a period of time,

27
00:00:59.000 --> 00:01:01.090
it has adapted Docker as a standard technology

28
00:01:01.090 --> 00:01:06.070
on how you can deploy Dockerized applications on DC/OS.

29
00:01:06.070 --> 00:01:08.090
Now, there's a commercial backing for this as well,

30
00:01:08.090 --> 00:01:11.010
by the company Mesosphere.

31
00:01:11.010 --> 00:01:13.060
Amazon also has a EC2 Container Service.

32
00:01:13.060 --> 00:01:16.020
One of the biggest advantages of EC2 Container Service

33
00:01:16.020 --> 00:01:17.090
is it's fully managed.

34
00:01:17.090 --> 00:01:19.070
So you just go to the Amazon portal.

35
00:01:19.070 --> 00:01:21.010
If you have an AWS account,

36
00:01:21.010 --> 00:01:22.080
you spin up your containers.

37
00:01:22.080 --> 00:01:25.070
Now their orchestration is closed-source,

38
00:01:25.070 --> 00:01:28.080
but from your perspective, it's a fully managed service.

39
00:01:28.080 --> 00:01:30.060
If you're looking at a platform.

40
00:01:30.060 --> 00:01:34.050
Now let's say I want to pass for deploying my containers,

41
00:01:34.050 --> 00:01:38.060
where you take care of CICD, build my pipelines,

42
00:01:38.060 --> 00:01:41.000
take my job applications and deploy them,

43
00:01:41.000 --> 00:01:43.060
Red Hat Openshift is a wonderful platform.

44
00:01:43.060 --> 00:01:46.050
Now, this is based using Docker Containers,

45
00:01:46.050 --> 00:01:48.090
and Kubernetes Orchestration platform.

46
00:01:48.090 --> 00:01:52.020
So, just be wary of when you make your choices.

47
00:01:52.020 --> 00:01:53.020
Thanks for watching.

48
00:01:53.020 --> 00:01:55.020
I look forward to see where you take Docker

49
00:01:55.020 --> 00:01:57.000
with your own projects.

