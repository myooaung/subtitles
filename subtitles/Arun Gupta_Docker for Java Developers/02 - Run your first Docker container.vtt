WEBVTT
1
00:00:00.090 --> 00:00:01.080
- [Instructor] Alright, now that you're familiar

2
00:00:01.080 --> 00:00:04.010
with the Docker CLI, you looked at different

3
00:00:04.010 --> 00:00:05.060
commands that are available,

4
00:00:05.060 --> 00:00:07.060
let's put them to use by running

5
00:00:07.060 --> 00:00:09.070
your very first Docker container.

6
00:00:09.070 --> 00:00:12.020
Alright, here we are in our Docker terminal here.

7
00:00:12.020 --> 00:00:15.060
Once again, if I do Docker --help

8
00:00:15.060 --> 00:00:17.080
it shows me the complete list of commands

9
00:00:17.080 --> 00:00:21.080
or I can say, show me only the modern commands

10
00:00:21.080 --> 00:00:23.020
not the legacy commands.

11
00:00:23.020 --> 00:00:25.000
This is what we saw in the last section.

12
00:00:25.000 --> 00:00:27.040
So the very first thing I want to do here is,

13
00:00:27.040 --> 00:00:29.000
I want to run a simple container.

14
00:00:29.000 --> 00:00:29.090
Okay?

15
00:00:29.090 --> 00:00:34.050
What we will do is, we'll say Docker container --help.

16
00:00:34.050 --> 00:00:36.040
So it shows me all the commands

17
00:00:36.040 --> 00:00:38.030
that are available for container.

18
00:00:38.030 --> 00:00:40.030
Now, you want to run a container

19
00:00:40.030 --> 00:00:42.020
so the obvious thing that comes to your mind is,

20
00:00:42.020 --> 00:00:43.050
run sub-command.

21
00:00:43.050 --> 00:00:45.010
And viola!

22
00:00:45.010 --> 00:00:46.080
It has a run sub-command.

23
00:00:46.080 --> 00:00:49.010
So I go back here and I say

24
00:00:49.010 --> 00:00:51.030
run and it shows me

25
00:00:51.030 --> 00:00:54.020
the complete help for the run sub-command.

26
00:00:54.020 --> 00:00:55.030
There are a lot of options.

27
00:00:55.030 --> 00:00:56.050
You can read through them,

28
00:00:56.050 --> 00:00:57.080
understand their meaning.

29
00:00:57.080 --> 00:00:59.050
Well, what we're going to show you here is

30
00:00:59.050 --> 00:01:02.060
how easy it is to fire up your very first container.

31
00:01:02.060 --> 00:01:03.060
So let's gear up the console here.

32
00:01:03.060 --> 00:01:05.000
And I'm going to say,

33
00:01:05.000 --> 00:01:08.070
Docker container run and let's say

34
00:01:08.070 --> 00:01:10.090
I want to run a simple Java container.

35
00:01:10.090 --> 00:01:14.010
In my case, I want to run a jboss/wildfly container.

36
00:01:14.010 --> 00:01:17.030
I'm going to say, jboss/wildfly.

37
00:01:17.030 --> 00:01:18.060
The important part here is

38
00:01:18.060 --> 00:01:20.030
go back to our Docker workflow

39
00:01:20.030 --> 00:01:22.000
where we said, the Docker client

40
00:01:22.000 --> 00:01:23.080
makes a request to the host

41
00:01:23.080 --> 00:01:25.030
and if it does not have that image

42
00:01:25.030 --> 00:01:26.070
to run the container,

43
00:01:26.070 --> 00:01:28.090
it will download the image from the container.

44
00:01:28.090 --> 00:01:31.060
Now we have not downloaded any image on this host

45
00:01:31.060 --> 00:01:32.080
so far.

46
00:01:32.080 --> 00:01:35.050
So when I say Docker container run jboss widlfly

47
00:01:35.050 --> 00:01:38.030
that entire workflow will automatically kick in.

48
00:01:38.030 --> 00:01:40.010
Now an important switch that I would like you

49
00:01:40.010 --> 00:01:42.060
to look at here is by default

50
00:01:42.060 --> 00:01:44.080
container run in the foreground mode.

51
00:01:44.080 --> 00:01:46.050
And you cannot interact with it.

52
00:01:46.050 --> 00:01:48.060
So what I want to do is, I want to run the container

53
00:01:48.060 --> 00:01:50.020
in the interactive mode

54
00:01:50.020 --> 00:01:52.020
and I want to assign a TTY to it.

55
00:01:52.020 --> 00:01:53.040
And the reason I would like to assign

56
00:01:53.040 --> 00:01:55.040
a TTY to it so that is when I press

57
00:01:55.040 --> 00:01:57.070
something on my command keyboard here

58
00:01:57.070 --> 00:02:00.030
it actually goes to the underlying container.

59
00:02:00.030 --> 00:02:01.030
So what I'm doing is,

60
00:02:01.030 --> 00:02:03.090
Docker container run jboss/wildfly

61
00:02:03.090 --> 00:02:06.010
run it in interactive mode.

62
00:02:06.010 --> 00:02:06.090
Now of course it says,

63
00:02:06.090 --> 00:02:08.060
the image is not available.

64
00:02:08.060 --> 00:02:09.050
So as you can see

65
00:02:09.050 --> 00:02:11.090
it's downloading the image from the Docker hub.

66
00:02:11.090 --> 00:02:13.090
By default, it's configured for the Docker hub

67
00:02:13.090 --> 00:02:15.080
and that's where it's downloading the image.

68
00:02:15.080 --> 00:02:17.020
It'll take a few seconds to download

69
00:02:17.020 --> 00:02:19.060
the image and once the image is downloaded.

70
00:02:19.060 --> 00:02:22.060
you can see the container rather starts up very rapidly.

71
00:02:22.060 --> 00:02:25.030
So if I go to the top here

72
00:02:25.030 --> 00:02:28.020
so this is where my image is downloaded

73
00:02:28.020 --> 00:02:30.060
and if you are familiar with wild fly

74
00:02:30.060 --> 00:02:32.020
you'll understand this is a very similar

75
00:02:32.020 --> 00:02:34.020
problem that comes along when wild fly

76
00:02:34.020 --> 00:02:35.040
is starting up.

77
00:02:35.040 --> 00:02:36.070
And if we look here

78
00:02:36.070 --> 00:02:38.080
it's starting wild fly full platform

79
00:02:38.080 --> 00:02:42.090
10.1.0 as shown over here

80
00:02:42.090 --> 00:02:44.090
and on all the usual services of wild fly

81
00:02:44.090 --> 00:02:46.010
here started.

82
00:02:46.010 --> 00:02:47.060
If we go to the bottom here

83
00:02:47.060 --> 00:02:50.060
it says, started in about five seconds.

84
00:02:50.060 --> 00:02:51.060
That's pretty cool.

85
00:02:51.060 --> 00:02:53.020
And remember we run the container

86
00:02:53.020 --> 00:02:55.090
in the interactive mode with -IT

87
00:02:55.090 --> 00:02:57.090
so now, I can say Control C

88
00:02:57.090 --> 00:03:01.040
to terminate the container without doing that in IT

89
00:03:01.040 --> 00:03:02.070
any amount of Control C

90
00:03:02.070 --> 00:03:03.080
would not have helped

91
00:03:03.080 --> 00:03:05.050
in which case, I will have to go to a different

92
00:03:05.050 --> 00:03:07.050
terminal and then kill the container.

93
00:03:07.050 --> 00:03:09.090
Now I'm using the Docker container run command.

94
00:03:09.090 --> 00:03:11.000
I'm using it in a MAC

95
00:03:11.000 --> 00:03:12.040
but these commands should work

96
00:03:12.040 --> 00:03:14.010
across different operating systems.

97
00:03:14.010 --> 00:03:16.020
That's the important part to understand.

98
00:03:16.020 --> 00:03:17.090
Let's take a look at a different variety

99
00:03:17.090 --> 00:03:20.050
of the command here.

100
00:03:20.050 --> 00:03:23.000
So instead of running in a interactive

101
00:03:23.000 --> 00:03:24.030
foreground way, I want to run it

102
00:03:24.030 --> 00:03:27.060
in a detached mode where you run it to the background.

103
00:03:27.060 --> 00:03:29.030
So if I do this, bam.

104
00:03:29.030 --> 00:03:31.020
The container starts rather rapidly.

105
00:03:31.020 --> 00:03:32.070
Go back to the workflow again.

106
00:03:32.070 --> 00:03:34.030
The image has already been downloaded.

107
00:03:34.030 --> 00:03:35.090
I'm just running the container.

108
00:03:35.090 --> 00:03:37.020
Oh, the container is running now

109
00:03:37.020 --> 00:03:39.040
but where do I see what the container looks like?

110
00:03:39.040 --> 00:03:41.050
So for that we'll say

111
00:03:41.050 --> 00:03:44.030
Docker container LS.

112
00:03:44.030 --> 00:03:45.030
Now it says,

113
00:03:45.030 --> 00:03:47.000
each container is given an ID.

114
00:03:47.000 --> 00:03:48.050
It talks about the image.

115
00:03:48.050 --> 00:03:50.060
It talks about what is the command running.

116
00:03:50.060 --> 00:03:52.080
It was started about 19 seconds ago.

117
00:03:52.080 --> 00:03:54.080
Off for about 18 seconds.

118
00:03:54.080 --> 00:03:56.050
And it gives it a weird name.

119
00:03:56.050 --> 00:03:58.010
It's a combination of words

120
00:03:58.010 --> 00:04:00.000
that come from the Docker code base.

121
00:04:00.000 --> 00:04:02.000
Zealous nightingale, in our case.

122
00:04:02.000 --> 00:04:03.020
So that's kind of cool.

123
00:04:03.020 --> 00:04:05.080
Now, I want to stop this container.

124
00:04:05.080 --> 00:04:09.040
So I can say Docker container, stop.

125
00:04:09.040 --> 00:04:11.080
I can use either the container ID.

126
00:04:11.080 --> 00:04:13.040
I can copy paste this number here.

127
00:04:13.040 --> 00:04:16.020
Or I can use the name itself.

128
00:04:16.020 --> 00:04:18.080
So let's copy the name and paste it here

129
00:04:18.080 --> 00:04:21.000
and I can stop the container.

130
00:04:21.000 --> 00:04:25.010
Now, if I do Docker container LS

131
00:04:25.010 --> 00:04:26.080
the container is not available.

132
00:04:26.080 --> 00:04:28.060
But I can cheat a little bit.

133
00:04:28.060 --> 00:04:30.020
I can say Docker container LS

134
00:04:30.020 --> 00:04:32.000
all containers.

135
00:04:32.000 --> 00:04:34.020
Now it will show me the container that is running.

136
00:04:34.020 --> 00:04:35.080
And by the way, it's also showing me

137
00:04:35.080 --> 00:04:38.050
the previous container that we exited which we were running

138
00:04:38.050 --> 00:04:40.070
in interactive mode and we killed it.

139
00:04:40.070 --> 00:04:42.060
Now to truly remove the container,

140
00:04:42.060 --> 00:04:46.000
what we'll do is Docker container RM

141
00:04:46.000 --> 00:04:48.080
and I will take the name again

142
00:04:48.080 --> 00:04:51.060
and I will say remove the container as well.

143
00:04:51.060 --> 00:04:54.070
So stopping and removing are two separate parts, okay?

144
00:04:54.070 --> 00:04:57.020
Now if I look at the container listing again

145
00:04:57.020 --> 00:04:59.010
it'll show me only one container.

146
00:04:59.010 --> 00:05:00.080
We don't need to worry about this container at this

147
00:05:00.080 --> 00:05:02.000
point in time.

148
00:05:02.000 --> 00:05:04.080
So that's cool but these names are kind of weird.

149
00:05:04.080 --> 00:05:06.010
I don't like these names.

150
00:05:06.010 --> 00:05:07.070
I don't want to assign it a name

151
00:05:07.070 --> 00:05:09.050
which is relevant to my application.

152
00:05:09.050 --> 00:05:10.050
How do I do that?

153
00:05:10.050 --> 00:05:12.050
So let's clear up the console again.

154
00:05:12.050 --> 00:05:15.050
So let me try to round the container here.

155
00:05:15.050 --> 00:05:19.070
And now I can say, --name web.

156
00:05:19.070 --> 00:05:20.090
It's a more logical name.

157
00:05:20.090 --> 00:05:22.040
Now I'm running a web applications

158
00:05:22.040 --> 00:05:24.090
so where so, give it a name Web,

159
00:05:24.090 --> 00:05:26.010
and they are we go.

160
00:05:26.010 --> 00:05:28.040
So it starts up the container rather rapidly again

161
00:05:28.040 --> 00:05:31.040
and now when I do Docker container LS

162
00:05:31.040 --> 00:05:33.020
I don't need to say -A because I don't care about

163
00:05:33.020 --> 00:05:34.080
all the containers.

164
00:05:34.080 --> 00:05:35.070
And here we go.

165
00:05:35.070 --> 00:05:37.070
It gives me a very nice name here

166
00:05:37.070 --> 00:05:39.070
called this Web which kind of convenient

167
00:05:39.070 --> 00:05:41.010
and easy to use.

168
00:05:41.010 --> 00:05:43.050
Now, in certain cases I may want to just

169
00:05:43.050 --> 00:05:45.080
brutal force stop and remove the container

170
00:05:45.080 --> 00:05:47.040
in the single command.

171
00:05:47.040 --> 00:05:48.050
So then I will say

172
00:05:48.050 --> 00:05:51.050
Docker container RM-F, and once again

173
00:05:51.050 --> 00:05:54.030
I can give container ID or name.

174
00:05:54.030 --> 00:05:55.080
In this case, a name Web.

175
00:05:55.080 --> 00:06:00.020
By giving -F, I'm saying stop and remove the container.

176
00:06:00.020 --> 00:06:01.060
And this container is gone.

177
00:06:01.060 --> 00:06:05.000
Now if I do LS, there are no containers running over here.

178
00:06:05.000 --> 00:06:06.060
So that's just a convenient way.

179
00:06:06.060 --> 00:06:08.060
Now in certain times, you may want to

180
00:06:08.060 --> 00:06:11.070
not use the default command of the container

181
00:06:11.070 --> 00:06:13.030
because in jboss wild fly,

182
00:06:13.030 --> 00:06:15.060
by default it starts the wild fly container.

183
00:06:15.060 --> 00:06:18.090
So if I go back to the command earlier here

184
00:06:18.090 --> 00:06:21.020
I may not want to start wild fly container

185
00:06:21.020 --> 00:06:23.050
but I just want to override or I want to run

186
00:06:23.050 --> 00:06:25.090
a shell in the container.

187
00:06:25.090 --> 00:06:28.070
So then I can say, bash.

188
00:06:28.070 --> 00:06:30.030
One of the important things to remember about

189
00:06:30.030 --> 00:06:32.040
the container is, containers can start

190
00:06:32.040 --> 00:06:35.030
only one command and only one command.

191
00:06:35.030 --> 00:06:36.080
And it would very well.

192
00:06:36.080 --> 00:06:37.090
Now in the case,

193
00:06:37.090 --> 00:06:39.090
by default wild fly container starts the wild fly

194
00:06:39.090 --> 00:06:42.090
container by giving it a command

195
00:06:42.090 --> 00:06:44.060
after the entire CLI

196
00:06:44.060 --> 00:06:46.070
I'm saying override that command.

197
00:06:46.070 --> 00:06:48.070
Basically, do not start wild fly

198
00:06:48.070 --> 00:06:50.070
and instead run a bash shell.

199
00:06:50.070 --> 00:06:53.040
So now if I do this here,

200
00:06:53.040 --> 00:06:54.070
by the way, mistake.

201
00:06:54.070 --> 00:06:56.020
We are running it in the dash mode

202
00:06:56.020 --> 00:06:58.070
so we are not seeing the bash shell here.

203
00:06:58.070 --> 00:07:00.050
So let's do this way again.

204
00:07:00.050 --> 00:07:06.030
So say, Docker container RM-F web.

205
00:07:06.030 --> 00:07:08.020
We remove the container here.

206
00:07:08.020 --> 00:07:10.050
Run the same command again.

207
00:07:10.050 --> 00:07:12.010
And instead of running in the dash mode

208
00:07:12.010 --> 00:07:14.090
because if you want bash we want that interactive nature

209
00:07:14.090 --> 00:07:18.030
of it so we're going to run it with -IT

210
00:07:18.030 --> 00:07:20.040
and there we have our shell.

211
00:07:20.040 --> 00:07:22.000
We are in the container shell now.

212
00:07:22.000 --> 00:07:23.080
We can see, open the jboss.

213
00:07:23.080 --> 00:07:25.080
We can look at the wild fly directory here.

214
00:07:25.080 --> 00:07:27.070
And we can look at stand alone.

215
00:07:27.070 --> 00:07:29.090
This is where the entire wild fly configuration

216
00:07:29.090 --> 00:07:31.040
is available to us.

217
00:07:31.040 --> 00:07:33.070
So in this section, you saw how easy

218
00:07:33.070 --> 00:07:35.050
it is to start a container,

219
00:07:35.050 --> 00:07:37.010
run it in an interactive mode,

220
00:07:37.010 --> 00:07:38.070
run it in a background mode,

221
00:07:38.070 --> 00:07:40.020
give it a name,

222
00:07:40.020 --> 00:07:41.000
stop a container,

223
00:07:41.000 --> 00:07:42.040
remove a container,

224
00:07:42.040 --> 00:07:45.000
override the default command of the container.

225
00:07:45.000 --> 00:07:46.070
So you got familiar with at least

226
00:07:46.070 --> 00:07:49.070
how do you run your very first Docker container.

227
00:07:49.070 --> 00:07:51.070
Let's exit out of the container by typing the

228
00:07:51.070 --> 00:07:54.030
word Exit here and let's also remove

229
00:07:54.030 --> 00:07:58.060
the container by using the command Docker container RM

230
00:07:58.060 --> 00:08:00.040
and giving the container name which is

231
00:08:00.040 --> 00:08:03.000
Web in our case.

