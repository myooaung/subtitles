WEBVTT
1
00:00:00.060 --> 00:00:01.090
- [Instructor] Now, let's go to the terminal

2
00:00:01.090 --> 00:00:04.060
and take a look at what our options are there.

3
00:00:04.060 --> 00:00:07.010
Let's clear up the console here.

4
00:00:07.010 --> 00:00:10.030
Let's take a look at the containers that are running.

5
00:00:10.030 --> 00:00:11.080
There are none, which is good.

6
00:00:11.080 --> 00:00:13.040
What we're going to do is now

7
00:00:13.040 --> 00:00:16.030
we're going to take at the implicit per-container storage.

8
00:00:16.030 --> 00:00:18.080
So I'm going to start up a container,

9
00:00:18.080 --> 00:00:21.010
run in a detached mode,

10
00:00:21.010 --> 00:00:22.060
call it db.

11
00:00:22.060 --> 00:00:26.070
And I'm going to run arungupta/couchbase container.

12
00:00:26.070 --> 00:00:28.040
So the container gets started up for me quickly.

13
00:00:28.040 --> 00:00:30.010
That is cool.

14
00:00:30.010 --> 00:00:33.040
Let's inspect this container here.

15
00:00:33.040 --> 00:00:37.040
It gives me lot of details about what's in the container.

16
00:00:37.040 --> 00:00:40.080
The network, the network settings,

17
00:00:40.080 --> 00:00:44.050
the mount points, the port, et cetera.

18
00:00:44.050 --> 00:00:46.040
What I care about is only the mount point

19
00:00:46.040 --> 00:00:47.060
at this point of time.

20
00:00:47.060 --> 00:00:49.030
How do I get that information?

21
00:00:49.030 --> 00:00:51.040
We can add a switch here.

22
00:00:51.040 --> 00:00:52.050
We can say

23
00:00:52.050 --> 00:00:54.070
- -format

24
00:00:54.070 --> 00:00:57.060
and I can specify pattern here.

25
00:00:57.060 --> 00:01:01.020
I can say, okay, give me all the json

26
00:01:01.020 --> 00:01:02.010
port

27
00:01:02.010 --> 00:01:04.010
.Mounts.

28
00:01:04.010 --> 00:01:06.070
Now, brew is the standard packet manager

29
00:01:06.070 --> 00:01:08.040
that a lot of people use on Mac.

30
00:01:08.040 --> 00:01:11.070
Using brew, you can install the utility called as jq

31
00:01:11.070 --> 00:01:13.090
which allows you to format json.

32
00:01:13.090 --> 00:01:15.070
That's what I've installed here.

33
00:01:15.070 --> 00:01:17.090
Homebrew would work only on Mac,

34
00:01:17.090 --> 00:01:20.060
so what do you do on Linux or Windows box essentially?

35
00:01:20.060 --> 00:01:23.050
Well, I mean, you can look for a similar utility

36
00:01:23.050 --> 00:01:25.080
on a Windows or a Linux box.

37
00:01:25.080 --> 00:01:28.040
Alternatively, give the command without the pipe

38
00:01:28.040 --> 00:01:29.090
and jq command.

39
00:01:29.090 --> 00:01:32.040
The only difference is the json output

40
00:01:32.040 --> 00:01:33.090
will not be pretty printed,

41
00:01:33.090 --> 00:01:36.040
so you will need to really look for the specific output

42
00:01:36.040 --> 00:01:39.000
that we're showing in the command here.

43
00:01:39.000 --> 00:01:43.020
What I'm going to do is I'm going to say jq this.

44
00:01:43.020 --> 00:01:44.090
Now, it shows me the output.

45
00:01:44.090 --> 00:01:47.050
This is only the output from the Mounts.

46
00:01:47.050 --> 00:01:49.000
It says the

47
00:01:49.000 --> 00:01:51.070
destination first of all is opt/couchbase/war.

48
00:01:51.070 --> 00:01:53.060
This is where Couchbase writes.

49
00:01:53.060 --> 00:01:56.020
The driver is local, that is the default one.

50
00:01:56.020 --> 00:01:59.070
Then the source is this directory over here.

51
00:01:59.070 --> 00:02:01.080
How do I see this directory on the host?

52
00:02:01.080 --> 00:02:04.080
For that, we really need to log in to

53
00:02:04.080 --> 00:02:06.070
my Docker for Mac VM.

54
00:02:06.070 --> 00:02:13.050
Let's open up another tab here.

55
00:02:13.050 --> 00:02:15.000
Clear up the screen.

56
00:02:15.000 --> 00:02:19.010
I'm going to refer to a command from my exercise notes.

57
00:02:19.010 --> 00:02:21.070
I'm going to copy this command here

58
00:02:21.070 --> 00:02:23.020
and paste it here.

59
00:02:23.020 --> 00:02:24.030
Let's see what is it doing.

60
00:02:24.030 --> 00:02:28.070
It's saying, I'm going to run a debian container

61
00:02:28.070 --> 00:02:30.020
and I'm going to run it in a privileged mode

62
00:02:30.020 --> 00:02:32.070
because I need access to the VM,

63
00:02:32.070 --> 00:02:36.080
pid=host means enter the process space of the VM

64
00:02:36.080 --> 00:02:38.050
running Docker for Mac.

65
00:02:38.050 --> 00:02:40.080
And sh says to run a shell.

66
00:02:40.080 --> 00:02:43.000
There are a bunch of parameters in the middle.

67
00:02:43.000 --> 00:02:45.000
Now, the key command that I'm running here is

68
00:02:45.000 --> 00:02:47.070
nsenter essentially, that's important to understand.

69
00:02:47.070 --> 00:02:49.090
Let's run this.

70
00:02:49.090 --> 00:02:52.030
Now, we are in Docker for Mac VM

71
00:02:52.030 --> 00:02:55.010
and I'm going to take a look at the volume directory here.

72
00:02:55.010 --> 00:02:56.030
So /var

73
00:02:56.030 --> 00:02:57.040
/lib

74
00:02:57.040 --> 00:02:58.060
/docker

75
00:02:58.060 --> 00:03:00.030
/volumes.

76
00:03:00.030 --> 00:03:03.020
It shows all the volumes that are available over here.

77
00:03:03.020 --> 00:03:05.070
The number of volumes may differ in your case

78
00:03:05.070 --> 00:03:10.000
depending upon how and when you are running this.

79
00:03:10.000 --> 00:03:13.070
Now we're going to go back to our previous tab here.

80
00:03:13.070 --> 00:03:18.010
What I'm going to do is I'm going to say docker stop db.

81
00:03:18.010 --> 00:03:20.010
I stopped the container here.

82
00:03:20.010 --> 00:03:21.090
Once the container is stopped,

83
00:03:21.090 --> 00:03:25.000
let's take a look at this particular directory here.

84
00:03:25.000 --> 00:03:28.000
We looked at the broader volumes directory over there,

85
00:03:28.000 --> 00:03:30.050
copy it here.

86
00:03:30.050 --> 00:03:31.030
Keep it here

87
00:03:31.030 --> 00:03:33.080
and I'm going to say show me the listing of this.

88
00:03:33.080 --> 00:03:35.070
This volume very much exist.

89
00:03:35.070 --> 00:03:37.060
Now have stopped the container here,

90
00:03:37.060 --> 00:03:39.060
go back to this previous tab.

91
00:03:39.060 --> 00:03:42.000
Now I can say docker rm

92
00:03:42.000 --> 00:03:43.000
db.

93
00:03:43.000 --> 00:03:46.000
I can just add a switch called as -v

94
00:03:46.000 --> 00:03:50.020
which will say that remove the associated volume as well.

95
00:03:50.020 --> 00:03:52.060
My container is now removed.

96
00:03:52.060 --> 00:03:55.010
Let's take a look at the volume.

97
00:03:55.010 --> 00:03:57.020
As expected, it does not exist.

98
00:03:57.020 --> 00:04:01.040
It's always convenient and rather recommended to use -v

99
00:04:01.040 --> 00:04:03.090
if you want to get rid of the default volumes

100
00:04:03.090 --> 00:04:06.060
that are created for you.

101
00:04:06.060 --> 00:04:08.070
Now, let's take a look at how can we do

102
00:04:08.070 --> 00:04:11.000
explicit per-container storage.

103
00:04:11.000 --> 00:04:14.060
For that, we're going to use the docker volume command,

104
00:04:14.060 --> 00:04:15.050
docker

105
00:04:15.050 --> 00:04:16.030
volume

106
00:04:16.030 --> 00:04:17.020
create,

107
00:04:17.020 --> 00:04:20.090
and I'm going to give it a name, my_couchbase.

108
00:04:20.090 --> 00:04:22.090
This creates my volume,

109
00:04:22.090 --> 00:04:24.000
docker

110
00:04:24.000 --> 00:04:25.090
volume

111
00:04:25.090 --> 00:04:27.010
ls,

112
00:04:27.010 --> 00:04:30.040
and now you can see the volume is created for me.

113
00:04:30.040 --> 00:04:33.000
If I go back to my Docker for Mac VM

114
00:04:33.000 --> 00:04:34.050
and I say

115
00:04:34.050 --> 00:04:36.010
var/lib/docker/volumes,

116
00:04:36.010 --> 00:04:38.000
you can see my_couchbase

117
00:04:38.000 --> 00:04:40.040
is already created for you over here.

118
00:04:40.040 --> 00:04:43.050
How do I use this volume for running my container?

119
00:04:43.050 --> 00:04:46.030
Let's start up our container this time

120
00:04:46.030 --> 00:04:48.090
and here, we're going to mount the volume.

121
00:04:48.090 --> 00:04:50.040
We're going to say

122
00:04:50.040 --> 00:04:51.050
use

123
00:04:51.050 --> 00:04:53.030
my_couchbase

124
00:04:53.030 --> 00:04:56.030
and map it to really what we call as

125
00:04:56.030 --> 00:04:59.000
/opt/couchbase/var

126
00:04:59.000 --> 00:05:00.030
because that's sort of the volume

127
00:05:00.030 --> 00:05:02.040
where it's actually writing the data.

128
00:05:02.040 --> 00:05:04.080
I'm going to start the container here.

129
00:05:04.080 --> 00:05:07.010
Let's look at the Mounts once again.

130
00:05:07.010 --> 00:05:09.010
This time, you can see rightly

131
00:05:09.010 --> 00:05:11.070
that the destination is opt/couchbase/var

132
00:05:11.070 --> 00:05:16.050
but the source has actually been changed to my_couchbase.

133
00:05:16.050 --> 00:05:17.070
That's pretty cool.

134
00:05:17.070 --> 00:05:20.080
Now, I can dominate the container the same way.

135
00:05:20.080 --> 00:05:22.080
I can say docker

136
00:05:22.080 --> 00:05:23.090
container

137
00:05:23.090 --> 00:05:24.080
rm

138
00:05:24.080 --> 00:05:25.080
- f.

139
00:05:25.080 --> 00:05:29.070
I can brutally remove the container including the volume

140
00:05:29.070 --> 00:05:35.000
and I could say the container name here which is db.

141
00:05:35.000 --> 00:05:37.020
If I do this command here,

142
00:05:37.020 --> 00:05:38.060
if I look at

143
00:05:38.060 --> 00:05:39.090
docker volume

144
00:05:39.090 --> 00:05:41.010
ls,

145
00:05:41.010 --> 00:05:43.040
it still shows the volume over there.

146
00:05:43.040 --> 00:05:45.070
All it has removed is the volume mapping.

147
00:05:45.070 --> 00:05:48.000
So the volume in this case still needs to be

148
00:05:48.000 --> 00:05:49.040
explicitly removed.

149
00:05:49.040 --> 00:05:52.010
So docker volume

150
00:05:52.010 --> 00:05:52.090
rm

151
00:05:52.090 --> 00:05:56.060
my_couchbase.

152
00:05:56.060 --> 00:05:59.010
Let's go back to Docker for Mac VM here.

153
00:05:59.010 --> 00:06:03.050
If I do the listing again, my_couchbase is indeed gone.

154
00:06:03.050 --> 00:06:06.060
All right, let's look at the last part of it,

155
00:06:06.060 --> 00:06:07.070
per-host storage.

156
00:06:07.070 --> 00:06:12.030
What I'm going to do now is I am in this directory, chapter5.

157
00:06:12.030 --> 00:06:16.020
I'm going to make a directory here by the name couchbase.

158
00:06:16.020 --> 00:06:18.060
If I go to couchbase and I look at the listing,

159
00:06:18.060 --> 00:06:20.020
this is a clean directory here.

160
00:06:20.020 --> 00:06:23.010
I'm going to run my container here

161
00:06:23.010 --> 00:06:24.090
and this time,

162
00:06:24.090 --> 00:06:27.020
instead of mapping to

163
00:06:27.020 --> 00:06:28.070
my_couchbase volume,

164
00:06:28.070 --> 00:06:31.020
I'm going to map to the current directory.

165
00:06:31.020 --> 00:06:33.090
Another key part that I want to show here is

166
00:06:33.090 --> 00:06:35.060
I want to map

167
00:06:35.060 --> 00:06:38.000
the ports as well.

168
00:06:38.000 --> 00:06:40.070
This will allow us to access the Couchbase console

169
00:06:40.070 --> 00:06:42.090
and show some changes over there.

170
00:06:42.090 --> 00:06:45.010
Let's run the container here.

171
00:06:45.010 --> 00:06:47.090
Now we can go to browser, and here,

172
00:06:47.090 --> 00:06:51.030
I can say localhost:8091,

173
00:06:51.030 --> 00:06:53.040
it takes a while for the container to come up

174
00:06:53.040 --> 00:06:55.090
so let's go back and check out the logs.

175
00:06:55.090 --> 00:06:59.000
Here, I can say docker

176
00:06:59.000 --> 00:07:00.020
container

177
00:07:00.020 --> 00:07:01.010
logs

178
00:07:01.010 --> 00:07:03.060
db, and follow it along.

179
00:07:03.060 --> 00:07:06.090
Couchbase container comes up in about 25 to 30 seconds,

180
00:07:06.090 --> 00:07:08.020
and that's primarily because

181
00:07:08.020 --> 00:07:11.070
the way we have configured the script to run.

182
00:07:11.070 --> 00:07:13.050
Depending upon the time lag between

183
00:07:13.050 --> 00:07:14.060
when you run the container

184
00:07:14.060 --> 00:07:16.070
and when you try to access the web console,

185
00:07:16.070 --> 00:07:19.080
you may see either a setup screen or a login screen.

186
00:07:19.080 --> 00:07:22.090
Either way, your end result is to see a login screen

187
00:07:22.090 --> 00:07:24.070
and then be able to log in with the credentials

188
00:07:24.070 --> 00:07:26.040
that you are aware of.

189
00:07:26.040 --> 00:07:29.000
Don't panic if you just see the login screen right away

190
00:07:29.000 --> 00:07:32.080
and you don't see the setup screen as shown in the video.

191
00:07:32.080 --> 00:07:35.060
As we expected, it has not configured yet,

192
00:07:35.060 --> 00:07:38.040
but now the REST API has been invoked

193
00:07:38.040 --> 00:07:42.040
and so now we can go back to our browser,

194
00:07:42.040 --> 00:07:44.010
refresh the page here.

195
00:07:44.010 --> 00:07:48.020
Once again, my login is administrator,

196
00:07:48.020 --> 00:07:50.070
password is password,

197
00:07:50.070 --> 00:07:52.020
and I log in here.

198
00:07:52.020 --> 00:07:53.010
That's cool.

199
00:07:53.010 --> 00:07:55.090
Let's take a look at the directory that we created,

200
00:07:55.090 --> 00:07:58.000
what happened over there?

201
00:07:58.000 --> 00:08:00.040
Now I'm going to get out of my logs here

202
00:08:00.040 --> 00:08:01.070
and see where we are.

203
00:08:01.070 --> 00:08:04.070
We are in the couchbase directory actually already.

204
00:08:04.070 --> 00:08:06.000
The library tree is already created

205
00:08:06.000 --> 00:08:07.010
because this is exactly

206
00:08:07.010 --> 00:08:09.030
where all my Couchbase data is stored.

207
00:08:09.030 --> 00:08:11.040
Now if I go back

208
00:08:11.040 --> 00:08:15.030
in my Data Buckets, I'm going to create a new data bucket,

209
00:08:15.030 --> 00:08:16.090
call it docker.

210
00:08:16.090 --> 00:08:19.010
Take the defaults for the data bucket for now.

211
00:08:19.010 --> 00:08:21.080
Wait for it to turn green, and there you go,

212
00:08:21.080 --> 00:08:24.080
now the bucket is available and accessible to you.

213
00:08:24.080 --> 00:08:28.070
In my terminal now, I can say docker container

214
00:08:28.070 --> 00:08:30.080
stop db

215
00:08:30.080 --> 00:08:34.030
and let's remove the container as well.

216
00:08:34.030 --> 00:08:39.020
Now, if I start the container with the same volume,

217
00:08:39.020 --> 00:08:41.070
pwd is where my data is being stored.

218
00:08:41.070 --> 00:08:44.030
So if I start the container again,

219
00:08:44.030 --> 00:08:46.050
and let's look at the logs

220
00:08:46.050 --> 00:08:48.070
which show the container to be up.

221
00:08:48.070 --> 00:08:50.050
All right, now the container is configured.

222
00:08:50.050 --> 00:08:51.080
So,

223
00:08:51.080 --> 00:08:55.050
we are back in our Couchbase web console.

224
00:08:55.050 --> 00:08:56.080
If I

225
00:08:56.080 --> 00:08:59.090
log in here

226
00:08:59.090 --> 00:09:02.040
and if we look at the Data Buckets here,

227
00:09:02.040 --> 00:09:05.070
voila, our docker bucket that we created originally

228
00:09:05.070 --> 00:09:08.000
still very much is available over there.

229
00:09:08.000 --> 00:09:09.060
That's because even though my container

230
00:09:09.060 --> 00:09:12.000
was crashed or removed,

231
00:09:12.000 --> 00:09:14.060
the data continues to exist on the host.

232
00:09:14.060 --> 00:09:17.000
In this particular section, we will not talk about

233
00:09:17.000 --> 00:09:19.040
how do we do distributed file systems

234
00:09:19.040 --> 00:09:22.030
but there is plenty of material available on that.

235
00:09:22.030 --> 00:09:24.030
In this section, essentially you saw

236
00:09:24.030 --> 00:09:28.010
how you can do implicit per-container storage,

237
00:09:28.010 --> 00:09:30.040
explicit per-container storage,

238
00:09:30.040 --> 00:09:33.000
and per-host storage.

