WEBVTT
1
00:00:00.040 --> 00:00:01.030
- [Narrator] Alright, so we understood

2
00:00:01.030 --> 00:00:05.060
how to run a container, how to manipulate the container,

3
00:00:05.060 --> 00:00:08.010
how to do folds, how to do volumes,

4
00:00:08.010 --> 00:00:10.030
but those are somebody else's container.

5
00:00:10.030 --> 00:00:11.070
I want to run my own container.

6
00:00:11.070 --> 00:00:14.050
I want to build my own docker image. How do I play with that?

7
00:00:14.050 --> 00:00:16.060
So, this section will show you exactly

8
00:00:16.060 --> 00:00:19.020
what does it mean to build a docker image?

9
00:00:19.020 --> 00:00:21.000
What does it take to build a docker image?

10
00:00:21.000 --> 00:00:24.030
What is a docker file, and how do we get started with that?

11
00:00:24.030 --> 00:00:27.060
Well, in order to get started, for building a docker image,

12
00:00:27.060 --> 00:00:31.070
you need file, usually called Dockerfile, with a capital D.

13
00:00:31.070 --> 00:00:33.060
The file could be whatever it's called,

14
00:00:33.060 --> 00:00:35.020
but that's out of the default convention,

15
00:00:35.020 --> 00:00:38.000
and I've seen people use that very consistently.

16
00:00:38.000 --> 00:00:41.010
In Dockerfile, you have a bunch of instructions.

17
00:00:41.010 --> 00:00:42.090
And those instructions define what

18
00:00:42.090 --> 00:00:46.000
will get packaged as part of the docker image.

19
00:00:46.000 --> 00:00:49.030
It is required to have the very first non-comment

20
00:00:49.030 --> 00:00:51.050
instruction to be from.

21
00:00:51.050 --> 00:00:54.040
What that means is that's going to be my base operating system,

22
00:00:54.040 --> 00:00:56.040
and pretty soon we will build the image,

23
00:00:56.040 --> 00:00:58.080
so you'll understand it more, but there are lots

24
00:00:58.080 --> 00:01:01.040
of other instructions that are shown over here.

25
00:01:01.040 --> 00:01:03.010
And you can see the link at the bottom of the screen,

26
00:01:03.010 --> 00:01:05.060
where you can see the complete set of instructions.

27
00:01:05.060 --> 00:01:07.020
So, in the next few sections,

28
00:01:07.020 --> 00:01:09.010
we will go through some of these instructions

29
00:01:09.010 --> 00:01:11.010
and understand what they are used for,

30
00:01:11.010 --> 00:01:13.050
but for now, let's get started with a simple

31
00:01:13.050 --> 00:01:15.080
hello, world image here, okay?

32
00:01:15.080 --> 00:01:18.040
For now, we are in a terminal, and let's see,

33
00:01:18.040 --> 00:01:19.060
how can we build an image?

34
00:01:19.060 --> 00:01:22.070
Well, first of all, we need to create a directory.

35
00:01:22.070 --> 00:01:25.090
When you build an image, you always, always want to

36
00:01:25.090 --> 00:01:28.020
start with a brand new directory.

37
00:01:28.020 --> 00:01:29.090
There's a reason for that, which we'll get to

38
00:01:29.090 --> 00:01:32.070
in a second, but let's make a new directory here.

39
00:01:32.070 --> 00:01:36.050
Say, hello image, okay?

40
00:01:36.050 --> 00:01:38.090
Now, I'm going to go into hello image.

41
00:01:38.090 --> 00:01:42.070
In hello image, what I need is a docker file, okay?

42
00:01:42.070 --> 00:01:46.050
So, what I'm going to do is I'm going to say vi Dockerfile.

43
00:01:46.050 --> 00:01:50.010
I Dockerfile it, and the very first non-comment

44
00:01:50.010 --> 00:01:52.080
instruction as we said, needs to be from,

45
00:01:52.080 --> 00:01:57.090
so I'm going to say from, and I'm saying Ubuntu.

46
00:01:57.090 --> 00:02:00.060
I want my base operating system to be Ubuntu.

47
00:02:00.060 --> 00:02:02.080
Remember the example we saw earlier,

48
00:02:02.080 --> 00:02:04.020
where we were talking about the difference

49
00:02:04.020 --> 00:02:08.010
between virtual machine and docker images?

50
00:02:08.010 --> 00:02:10.090
This is how the minimal base operating system here.

51
00:02:10.090 --> 00:02:13.040
So, I'm going to say from Ubuntu,

52
00:02:13.040 --> 00:02:16.000
and in Ubuntu what I'm going to do is,

53
00:02:16.000 --> 00:02:17.090
I just want to run simple hello world.

54
00:02:17.090 --> 00:02:21.050
So, I'm going to give it a CMD instruction,

55
00:02:21.050 --> 00:02:23.000
CMD is basically the command that

56
00:02:23.000 --> 00:02:25.000
the docker container is going to run.

57
00:02:25.000 --> 00:02:28.030
Now, as we said earlier, docker containers can run only one,

58
00:02:28.030 --> 00:02:30.070
and one thing, and they do that really well.

59
00:02:30.070 --> 00:02:33.040
So, this is my CMD, which is basically my entry point

60
00:02:33.040 --> 00:02:39.030
to the docker, and here I'm saying echo hello world.

61
00:02:39.030 --> 00:02:40.010
That's it.

62
00:02:40.010 --> 00:02:42.090
That is a very simple hello world docker image.

63
00:02:42.090 --> 00:02:45.020
Now you may wonder, I am saying from Ubuntu,

64
00:02:45.020 --> 00:02:46.070
where does Ubuntu come from?

65
00:02:46.070 --> 00:02:48.020
Well, go back to our docker hub.

66
00:02:48.020 --> 00:02:50.070
That's where our default Ubuntu image is available.

67
00:02:50.070 --> 00:02:52.030
If you don't say anything,

68
00:02:52.030 --> 00:02:54.070
if you don't specify the origin of Ubuntu,

69
00:02:54.070 --> 00:02:57.000
it'll download the latest Ubuntu image for you,

70
00:02:57.000 --> 00:02:59.000
and then it'll run the command over there.

71
00:02:59.000 --> 00:03:00.040
Before we get into the details,

72
00:03:00.040 --> 00:03:02.080
let's take a look at how do we build this image.

73
00:03:02.080 --> 00:03:04.070
So, let's save this docker file,

74
00:03:04.070 --> 00:03:06.030
and if I look at the listing here,

75
00:03:06.030 --> 00:03:09.030
in this directory I only have docker file, okay?

76
00:03:09.030 --> 00:03:11.010
Let's build our docker image here.

77
00:03:11.010 --> 00:03:13.060
So, I'm going to say, docker image.

78
00:03:13.060 --> 00:03:16.060
That is the main management command that I need to use.

79
00:03:16.060 --> 00:03:18.020
Before I build the image actually,

80
00:03:18.020 --> 00:03:20.070
let's take a look at what kind of commands are available.

81
00:03:20.070 --> 00:03:23.050
Once again, we go back to dash dash help.

82
00:03:23.050 --> 00:03:25.060
You can build an image.

83
00:03:25.060 --> 00:03:28.040
You can see the history of an image, which will tell you

84
00:03:28.040 --> 00:03:31.020
exactly what other images are available,

85
00:03:31.020 --> 00:03:33.090
and how the image was created using different layers.

86
00:03:33.090 --> 00:03:37.060
You can inspect the image, get more detail about the image.

87
00:03:37.060 --> 00:03:40.000
There are capabilities by which you can save

88
00:03:40.000 --> 00:03:42.090
an image to a tar file, and then later on load

89
00:03:42.090 --> 00:03:46.010
an image from tar file, you can list the images,

90
00:03:46.010 --> 00:03:47.020
and there are other commands that

91
00:03:47.020 --> 00:03:48.050
you can take a look at as well.

92
00:03:48.050 --> 00:03:50.030
But, from our perspective, we're going to say,

93
00:03:50.030 --> 00:03:54.060
docker image build, because we need to build the image,

94
00:03:54.060 --> 00:03:57.080
and we want to give the image a tag name,

95
00:03:57.080 --> 00:04:00.010
so we're going to call it hello world.

96
00:04:00.010 --> 00:04:01.070
And, we're going to say dot.

97
00:04:01.070 --> 00:04:03.030
Now, this is where creating a

98
00:04:03.030 --> 00:04:04.070
brand new directory is important.

99
00:04:04.070 --> 00:04:07.050
Because, essentially what's happening now is

100
00:04:07.050 --> 00:04:09.070
the docker CLI is giving a command

101
00:04:09.070 --> 00:04:12.010
to the docker host, build an image,

102
00:04:12.010 --> 00:04:14.090
and by saying dot, I am giving it a context.

103
00:04:14.090 --> 00:04:16.040
And I'm giving the current directory

104
00:04:16.040 --> 00:04:17.050
as the context.

105
00:04:17.050 --> 00:04:21.040
An entire context is sent from the client to the host.

106
00:04:21.040 --> 00:04:23.070
Now, if you do that in a directory which is

107
00:04:23.070 --> 00:04:26.050
populated with lot of other files and directories,

108
00:04:26.050 --> 00:04:29.080
entire content is then sent over to the host,

109
00:04:29.080 --> 00:04:31.040
which is not really necessary.

110
00:04:31.040 --> 00:04:33.040
It is very important that you actually

111
00:04:33.040 --> 00:04:36.030
create a new directory, and put Dockerfile over there,

112
00:04:36.030 --> 00:04:37.080
so that's it's not (mumbles).

113
00:04:37.080 --> 00:04:40.010
Now we understand sometimes it may not be possible

114
00:04:40.010 --> 00:04:43.080
to do that, in which case, just like in a get directory,

115
00:04:43.080 --> 00:04:46.060
or in a get project, you have dot get ignore,

116
00:04:46.060 --> 00:04:48.090
similarly you can have a dot docker ignore.

117
00:04:48.090 --> 00:04:50.060
If you really have to do this in a directory

118
00:04:50.060 --> 00:04:52.070
which has a lot of other files and directories,

119
00:04:52.070 --> 00:04:55.030
then you can have dot docker ignore file,

120
00:04:55.030 --> 00:04:58.040
which follows very similar format as dot get ignore.

121
00:04:58.040 --> 00:05:01.050
From our persepective, it's just docker image build

122
00:05:01.050 --> 00:05:04.000
dash t hello world dot, and it's an empty directory,

123
00:05:04.000 --> 00:05:05.060
so we're going to build this image.

124
00:05:05.060 --> 00:05:08.000
Now of course our ubuntu image is not there.

125
00:05:08.000 --> 00:05:10.020
So it's going to download the image for ubuntu first.

126
00:05:10.020 --> 00:05:12.050
And that is going to build the image.

127
00:05:12.050 --> 00:05:15.020
That was rather quick, so the image is ready for us now.

128
00:05:15.020 --> 00:05:17.010
Well, we can see the listing of the image.

129
00:05:17.010 --> 00:05:20.090
And we can see that our hello world image is here,

130
00:05:20.090 --> 00:05:22.080
and Ubuntu is here as well.

131
00:05:22.080 --> 00:05:26.000
And you can see the base operating system is 129,

132
00:05:26.000 --> 00:05:28.080
and there are no additional layers, so to say,

133
00:05:28.080 --> 00:05:31.030
that were added for the docker image,

134
00:05:31.030 --> 00:05:33.000
because it's just a command, so there is nothing

135
00:05:33.000 --> 00:05:35.070
additional that is sitting on top of Ubuntu over here.

136
00:05:35.070 --> 00:05:40.080
Now, I can say docker history, hello world,

137
00:05:40.080 --> 00:05:43.000
and then it's showing me how exactly the image

138
00:05:43.000 --> 00:05:44.010
was being built.

139
00:05:44.010 --> 00:05:47.060
The latest one was 30 seconds ago, because we just added it.

140
00:05:47.060 --> 00:05:49.090
And here it's showing me the command here,

141
00:05:49.090 --> 00:05:53.020
but then prior to that is all Ubuntu commands.

142
00:05:53.020 --> 00:05:56.000
Basically saying, okay, this is the base operating system,

143
00:05:56.000 --> 00:05:58.050
and we need to do pseudo app get update,

144
00:05:58.050 --> 00:06:00.030
the usual Ubuntu commands that you will do,

145
00:06:00.030 --> 00:06:02.060
those are done by the Ubuntu image itself.

146
00:06:02.060 --> 00:06:04.060
Now, how do I run this image?

147
00:06:04.060 --> 00:06:05.090
Well, let's run it then.

148
00:06:05.090 --> 00:06:10.090
Docker, container, run, I'm going to call it hello world.

149
00:06:10.090 --> 00:06:11.090
(cheers)

150
00:06:11.090 --> 00:06:13.060
So we got a simple hello, world image

151
00:06:13.060 --> 00:06:15.000
up and running over here.

152
00:06:15.000 --> 00:06:17.050
Now, we talked about dot docker ignore,

153
00:06:17.050 --> 00:06:19.050
so let's add another aspect of it,

154
00:06:19.050 --> 00:06:22.040
because your build context, which is a current directory,

155
00:06:22.040 --> 00:06:25.030
and everything in it, is sent to the docker host,

156
00:06:25.030 --> 00:06:28.030
so you can also specify when you are building your

157
00:06:28.030 --> 00:06:32.000
image, let's say we do dash dash help here, okay?

158
00:06:32.000 --> 00:06:34.040
There are other commands that are very, very useful to use.

159
00:06:34.040 --> 00:06:37.040
So, for example you can say dash dash compress,

160
00:06:37.040 --> 00:06:40.090
now in this case, the docker CLI, or the docker client,

161
00:06:40.090 --> 00:06:44.070
will compress the context and send it in a g zip format

162
00:06:44.070 --> 00:06:45.050
to the host.

163
00:06:45.050 --> 00:06:47.090
So if your context is too big, this could really help.

164
00:06:47.090 --> 00:06:50.040
Another one is dash dash squash.

165
00:06:50.040 --> 00:06:53.050
Now, each command typically in a docker file

166
00:06:53.050 --> 00:06:56.020
would add a new layer to the docker image,

167
00:06:56.020 --> 00:06:58.040
because it's using augmented file system.

168
00:06:58.040 --> 00:07:01.010
So, if you want to reduce the number of layers,

169
00:07:01.010 --> 00:07:04.050
or compress all of those layers into a single layer,

170
00:07:04.050 --> 00:07:07.060
it's important that you use dash dash squash command.

171
00:07:07.060 --> 00:07:10.040
Now, these commands were introduced in docker 1.13,

172
00:07:10.040 --> 00:07:12.060
so they'll only work there, so you got to be

173
00:07:12.060 --> 00:07:15.020
a little aware about it, but in this section,

174
00:07:15.020 --> 00:07:18.010
essentially what we saw is, what does it take

175
00:07:18.010 --> 00:07:21.060
to build a simple hello world docker image,

176
00:07:21.060 --> 00:07:23.000
and how to run it as a container.

