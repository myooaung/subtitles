WEBVTT
1
00:00:00.040 --> 00:00:03.000
- So we deployed a simple Couchbase cluster.

2
00:00:03.000 --> 00:00:06.030
In all the cases, the data of Couchbase was

3
00:00:06.030 --> 00:00:10.010
within the container itself. But what are my strategies

4
00:00:10.010 --> 00:00:13.030
for writing persistent containers? Let's take a look at that

5
00:00:13.030 --> 00:00:17.050
Well, the default one is Implicit Per-Container Storage.

6
00:00:17.050 --> 00:00:20.000
So what that means is when you fire up a container

7
00:00:20.000 --> 00:00:22.090
and if there is any data that needs to be stored as part

8
00:00:22.090 --> 00:00:25.090
of the container, there is implicit sandbox available.

9
00:00:25.090 --> 00:00:28.060
And that directory is always stored in

10
00:00:28.060 --> 00:00:32.050
/var/lib/docker/volumes on the host

11
00:00:32.050 --> 00:00:33.090
or docker host.

12
00:00:33.090 --> 00:00:36.020
So if you are running docker for Mac, it's in that VM

13
00:00:36.020 --> 00:00:40.000
if it's running on docker for AWS, it's on that host.

14
00:00:40.000 --> 00:00:43.060
Well, the container crashes or gets deleted,

15
00:00:43.060 --> 00:00:45.080
that means the directory is unavailable.

16
00:00:45.080 --> 00:00:49.020
Host crashes, certainly, the directory is unavailable.

17
00:00:49.020 --> 00:00:51.080
This directory cannot be shared with other containers.

18
00:00:51.080 --> 00:00:53.040
So there are some advantages

19
00:00:53.040 --> 00:00:54.080
where you can easily get started.

20
00:00:54.080 --> 00:00:57.030
But there are some disadvantages as well.

21
00:00:57.030 --> 00:00:59.070
There is Explicit Per-Container Storage.

22
00:00:59.070 --> 00:01:02.040
What that means is, you can create a volume explicitly

23
00:01:02.040 --> 00:01:04.030
using docker volume command.

24
00:01:04.030 --> 00:01:08.040
The volume still exists in /var/lib/docker/volumes.

25
00:01:08.040 --> 00:01:10.010
It has the same disadvantages;

26
00:01:10.010 --> 00:01:13.050
that is if the container crashes or gets deleted,

27
00:01:13.050 --> 00:01:16.050
directory is unavailable. And if the host crashes,

28
00:01:16.050 --> 00:01:19.000
directory is unavailable as well.

29
00:01:19.000 --> 00:01:21.030
And it cannot be shared with other containers.

30
00:01:21.030 --> 00:01:24.050
Now if you are on Per-Host Storage,

31
00:01:24.050 --> 00:01:27.070
you can create a directory on the host.

32
00:01:27.070 --> 00:01:31.020
And that host has all the data stored onto it

33
00:01:31.020 --> 00:01:32.080
in a specific directory.

34
00:01:32.080 --> 00:01:35.000
If the container crashes or gets deleted,

35
00:01:35.000 --> 00:01:37.050
then the directory is still available to you.

36
00:01:37.050 --> 00:01:40.010
But if the host crashes, because the directory is

37
00:01:40.010 --> 00:01:43.000
on the host, the directory is unavailable.

38
00:01:43.000 --> 00:01:45.090
And then multiple containers can read and write the volume

39
00:01:45.090 --> 00:01:49.000
but of course it depends upon what database levels support

40
00:01:49.000 --> 00:01:52.060
is available. Any changes to the volume is not part

41
00:01:52.060 --> 00:01:56.090
of the image because you have made changes to the directory

42
00:01:56.090 --> 00:01:59.020
which outside what the image is.

43
00:01:59.020 --> 00:02:01.010
So if the container is started up on a different host

44
00:02:01.010 --> 00:02:04.070
then those changes will not be available to you.

45
00:02:04.070 --> 00:02:06.070
And the last strategy that we're going to talk about

46
00:02:06.070 --> 00:02:10.050
in this section is Shared-Host Storage where you can have

47
00:02:10.050 --> 00:02:13.030
distributed storage or distributed file systems

48
00:02:13.030 --> 00:02:16.070
such as Ceph, GlusterFS, and network file system

49
00:02:16.070 --> 00:02:19.010
and have a directory created over there.

50
00:02:19.010 --> 00:02:22.020
You can adapt certain consistent naming conventions

51
00:02:22.020 --> 00:02:25.010
and namespaces so that containers have access

52
00:02:25.010 --> 00:02:26.080
across multiple hosts.

53
00:02:26.080 --> 00:02:29.020
The mount point of the volume that is created using

54
00:02:29.020 --> 00:02:33.070
these distributed file systems is available on all nodes.

55
00:02:33.070 --> 00:02:36.090
The advantage is if the container crashes or gets deleted

56
00:02:36.090 --> 00:02:38.090
the directory is still available.

57
00:02:38.090 --> 00:02:41.070
And the directory is available even if the host crashes

58
00:02:41.070 --> 00:02:43.080
because it's on a distributed file system.

59
00:02:43.080 --> 00:02:46.050
Most likely getting backed up and stuff like that.

60
00:02:46.050 --> 00:02:49.070
So let's compare and contrast each of these.

61
00:02:49.070 --> 00:02:52.070
Well, the first column is identifying what attributes

62
00:02:52.070 --> 00:02:54.020
we're going to compare on.

63
00:02:54.020 --> 00:02:56.080
The second column is Per-Container Implicit.

64
00:02:56.080 --> 00:02:59.060
Third column is Per-Container Explicit.

65
00:02:59.060 --> 00:03:03.020
Fourth column is Per-Host and last column is Multihost.

66
00:03:03.020 --> 00:03:05.090
So you can see the advantages and disadvantages

67
00:03:05.090 --> 00:03:07.050
on each of the cases.

68
00:03:07.050 --> 00:03:08.070
If you look at the location,

69
00:03:08.070 --> 00:03:12.010
the location is /var/lib/docker/volumes on the first two.

70
00:03:12.010 --> 00:03:14.070
The third one was mounted within the container.

71
00:03:14.070 --> 00:03:16.070
Because the directory is still on the host.

72
00:03:16.070 --> 00:03:18.050
And on the Multihost, of course, it's mounted

73
00:03:18.050 --> 00:03:20.010
on the file system.

74
00:03:20.010 --> 00:03:22.000
And then you can look at if the container crashes

75
00:03:22.000 --> 00:03:24.030
or the host crash, what's the status

76
00:03:24.030 --> 00:03:25.080
of the directory available?

77
00:03:25.080 --> 00:03:28.050
And the last row is basically about the shared part of it,

78
00:03:28.050 --> 00:03:31.000
whether the volume is shareable or not shareable.

