WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.350
Okay,

00:00:01.350 --> 00:00:05.820
I think we have gained enough knowledge to write our own builder XML file for our

00:00:05.820 --> 00:00:06.600
application.

00:00:06.600 --> 00:00:08.540
And if you remember our application,

00:00:08.540 --> 00:00:11.490
all the does is it's going to add couple of numbers.

00:00:11.490 --> 00:00:16.150
I had also walked you through our project and its structure.

00:00:16.150 --> 00:00:22.810
The source directory will have all the Java files as well as some resources like properties

00:00:22.810 --> 00:00:22.810
,

00:00:22.810 --> 00:00:23.960
files or XML files,

00:00:23.960 --> 00:00:24.570
etcetera.

00:00:24.570 --> 00:00:30.200
The Web content will have all declined technologies like cascading style sheets in majors,

00:00:30.200 --> 00:00:31.370
JavaScript,

00:00:31.370 --> 00:00:32.150
JSF,

00:00:32.150 --> 00:00:36.860
etcetera And then in the Bill directory.

00:00:36.860 --> 00:00:38.210
We have the classes directory,

00:00:38.210 --> 00:00:40.970
which we're going to use during the build process,

00:00:40.970 --> 00:00:45.620
and this doctor will actually help us create a war archive.

00:00:45.620 --> 00:00:48.380
And here's our build or XML and all.

00:00:48.380 --> 00:00:50.680
It has his bunch of targets.

00:00:50.680 --> 00:00:54.480
So let me walk you through list off task that we wanted to perform.

00:00:54.480 --> 00:00:58.060
So as a full step to write a bull or XML,

00:00:58.060 --> 00:01:02.710
you need to jot down all the things that you want to do as part off your bill process.

00:01:02.710 --> 00:01:03.410
You know,

00:01:03.410 --> 00:01:06.410
case I wanted to perform initialization,

00:01:06.410 --> 00:01:11.130
and in the section what I'm going to do is to create the directory,

00:01:11.130 --> 00:01:18.350
builds last classes and then copy all non jar files from the Source directory.

00:01:18.350 --> 00:01:19.490
Similarly,

00:01:19.490 --> 00:01:21.400
we're going to do the burled.

00:01:21.400 --> 00:01:25.120
We're going to compel all the jar files in the source directory,

00:01:25.120 --> 00:01:30.970
create dark last files and then copied those dark class files to the Bill Classes directory

00:01:30.970 --> 00:01:30.970
.

00:01:30.970 --> 00:01:36.990
And later we're going to package all the content inside the classes Directory has allows

00:01:36.990 --> 00:01:39.890
the Web content and create a war archive.

00:01:39.890 --> 00:01:47.660
And finally deploy that war archive on door Silver Tomcats over in my case.

00:01:47.660 --> 00:01:49.750
And before we do all that,

00:01:49.750 --> 00:01:55.140
we want to make sure we have deleted the bill classes directory as well as the war fell

00:01:55.140 --> 00:01:56.230
that gets generated.

00:01:56.230 --> 00:01:58.970
So here's a builder XML with empty targets,

00:01:58.970 --> 00:02:03.030
and the starting target is going to be the diplo target,

00:02:03.030 --> 00:02:05.220
which in turn depends on package.

00:02:05.220 --> 00:02:07.010
Pakis depends on build.

00:02:07.010 --> 00:02:08.630
Build depends on in it,

00:02:08.630 --> 00:02:11.060
and it will depend on clean.

00:02:11.060 --> 00:02:14.950
So let's start writing the task for initialization phase.

00:02:14.950 --> 00:02:18.250
So that's part off initialization phase.

00:02:18.250 --> 00:02:21.910
We want to create this directory as last copy.

00:02:21.910 --> 00:02:26.550
All the non gel files are resources from the source directory.

00:02:26.550 --> 00:02:27.510
Now,

00:02:27.510 --> 00:02:28.810
in order to save your time,

00:02:28.810 --> 00:02:30.400
let me pause the video,

00:02:30.400 --> 00:02:31.890
right the court and get back.

00:02:31.890 --> 00:02:35.000
So here it is.

00:02:35.000 --> 00:02:38.640
I'm creating this directory build classes,

00:02:38.640 --> 00:02:42.280
and the party's relate to to the base directory that you set in here.

00:02:42.280 --> 00:02:42.850
In this case,

00:02:42.850 --> 00:02:43.900
it's current directory.

00:02:43.900 --> 00:02:44.720
We all did,

00:02:44.720 --> 00:02:49.910
You know that have created this property with the name project classes there,

00:02:49.910 --> 00:02:53.380
and I've used the same name in here as well.

00:02:53.380 --> 00:03:00.600
So this instruction are this stance will create us this particular folder classes folder

00:03:00.600 --> 00:03:02.250
under the build folder.

00:03:02.250 --> 00:03:08.220
And then we're trying to copy all the files that are not Java files from the source

00:03:08.220 --> 00:03:11.650
directory to the classes directory.

00:03:11.650 --> 00:03:15.580
And so I abuse this type files it and I said,

00:03:15.580 --> 00:03:17.690
exclude all the Java files,

00:03:17.690 --> 00:03:22.890
which means it's going to copy all the files that doesn't end with dot Java extension.

00:03:22.890 --> 00:03:25.770
So we're good with this task.

00:03:25.770 --> 00:03:28.720
Now let's mourn with Bill Task again.

00:03:28.720 --> 00:03:30.750
Let me pause the video and get back.

00:03:30.750 --> 00:03:33.240
Okay,

00:03:33.240 --> 00:03:35.880
here we have it and thats part off Bill task.

00:03:35.880 --> 00:03:40.740
We're supposed to compile all the dour files residing in the source directory and then

00:03:40.740 --> 00:03:44.710
copied that our class files to the classes directory,

00:03:44.710 --> 00:03:46.750
and that's what we're doing here.

00:03:46.750 --> 00:03:50.310
We have the destination director set to the classes directory.

00:03:50.310 --> 00:03:56.490
This is the same part that reviews before in here and the news in the Java Sea task.

00:03:56.490 --> 00:04:01.850
We're trying to compile all the files Java files that are residing in the source directory

00:04:01.850 --> 00:04:06.980
using the falling class part the class part is actually pointing to.

00:04:06.980 --> 00:04:11.820
If you go to our project underwear by enough,

00:04:11.820 --> 00:04:14.440
we have a list of jars in the scales,

00:04:14.440 --> 00:04:18.180
just one jar that is needed in our program.

00:04:18.180 --> 00:04:19.870
Since we have written a soul,

00:04:19.870 --> 00:04:25.010
it it's going to need this FBI to make use off certain classes and interfaces.

00:04:25.010 --> 00:04:33.180
So we have provided as part off the class part and reviews the reference I d off the part

00:04:33.180 --> 00:04:34.250
to do so.

00:04:34.250 --> 00:04:37.250
So let's see what this refers to.

00:04:37.250 --> 00:04:41.490
It's in here and is having a file set,

00:04:41.490 --> 00:04:45.530
which includes all the jar files inside the falling part.

00:04:45.530 --> 00:04:47.850
And if you go here,

00:04:47.850 --> 00:04:51.920
the spot is pointing to the Lib directory.

00:04:51.920 --> 00:04:54.270
Ultimately under the Web.

00:04:54.270 --> 00:04:55.300
Camden Directory.

00:04:55.300 --> 00:04:56.980
Pretty straightforward,

00:04:56.980 --> 00:04:58.430
nothing really fancy.

00:04:58.430 --> 00:05:02.780
We've already looked at one example of that is in the class part,

00:05:02.780 --> 00:05:03.440
etcetera.

00:05:03.440 --> 00:05:10.490
So now let's go ahead and add a task in package that will create the war archive again.

00:05:10.490 --> 00:05:12.750
Let me pause the video to save your time.

00:05:12.750 --> 00:05:17.990
All that is how we're going to create a bar archive.

00:05:17.990 --> 00:05:22.500
And the final name is going to be the name of the project dot uar.

00:05:22.500 --> 00:05:23.420
Well,

00:05:23.420 --> 00:05:28.510
this is actually pointing to a property that would ultimately get us the name of the

00:05:28.510 --> 00:05:29.190
project.

00:05:29.190 --> 00:05:32.050
So here is a name of the bar file,

00:05:32.050 --> 00:05:40.050
and we're trying to get the project name by using built in property and that will get us

00:05:40.050 --> 00:05:40.940
the project name?

00:05:40.940 --> 00:05:42.170
What are you set in here?

00:05:42.170 --> 00:05:44.120
Symbol Get reflected.

00:05:44.120 --> 00:05:44.750
Or here.

00:05:44.750 --> 00:05:46.540
So ultimately,

00:05:46.540 --> 00:05:51.900
the war file that gets generated will be with the project name dot war and we're trying to

00:05:51.900 --> 00:05:57.670
include all the content inside the classes directory so you can use this particular tag

00:05:57.670 --> 00:05:58.440
classes.

00:05:58.440 --> 00:06:04.290
And this especially meant for the hard task that will pick up everything that is reciting

00:06:04.290 --> 00:06:07.620
inside the class of directory builder classes directory.

00:06:07.620 --> 00:06:12.110
So this includes all the dark class files as well as set of resources.

00:06:12.110 --> 00:06:17.300
We also want include all the jar files or set off libraries that are reciting in bye bye,

00:06:17.300 --> 00:06:18.420
enough live directory.

00:06:18.420 --> 00:06:24.080
And these are the libraries that we want to have them when we're on the application and the

00:06:24.080 --> 00:06:27.370
files that will help us include all the the content.

00:06:27.370 --> 00:06:28.510
Basically,

00:06:28.510 --> 00:06:33.970
whatever the content is inside the Web content directory,

00:06:33.970 --> 00:06:35.920
all the client technologies,

00:06:35.920 --> 00:06:38.230
basically static pages.

00:06:38.230 --> 00:06:40.190
So that's about the Stargate.

00:06:40.190 --> 00:06:41.450
And finally,

00:06:41.450 --> 00:06:43.310
let's right,

00:06:43.310 --> 00:06:46.850
the deploy and the clean target would that will be done.

00:06:46.850 --> 00:06:48.450
Let me pause the video.

00:06:48.450 --> 00:06:52.450
So here we have the deport target.

00:06:52.450 --> 00:06:54.550
So we're basically going to pick the bar,

00:06:54.550 --> 00:06:55.970
feel that were just created,

00:06:55.970 --> 00:07:00.040
and the powerful is going to decide in the same directory,

00:07:00.040 --> 00:07:04.380
and we're going to copy it to develop maps,

00:07:04.380 --> 00:07:05.950
directory off or silver.

00:07:05.950 --> 00:07:10.450
So this property in here points to the observatory off Tomcats over.

00:07:10.450 --> 00:07:18.850
So here it ISS and in order to get the time got home were saying e and b dot the end Roman

00:07:18.850 --> 00:07:19.660
credible name.

00:07:19.660 --> 00:07:27.110
But here there's one little addition here you need to add the falling property that says

00:07:27.110 --> 00:07:28.060
enrollment,

00:07:28.060 --> 00:07:30.000
and then you provide some string in here.

00:07:30.000 --> 00:07:32.140
Whatever the string that you provide in here,

00:07:32.140 --> 00:07:38.250
you have to use the same in here so that you get access to all the end Roman variables,

00:07:38.250 --> 00:07:45.590
just as you used here and so ultimately will be able to deploy that war,

00:07:45.590 --> 00:07:50.410
file into the running Tomcats over and finally,

00:07:50.410 --> 00:07:57.680
the clean task target is just simply going to delete the classes directory as well as of

00:07:57.680 --> 00:07:58.570
our archive,

00:07:58.570 --> 00:08:05.450
then gets created so that rest of the targets will create everything from scratch or it.

00:08:05.450 --> 00:08:09.580
So let us run our XML and save things will take effect.

00:08:09.580 --> 00:08:21.070
So it has performed the clean Operation Initialization build package and deploy.

00:08:21.070 --> 00:08:22.650
And finally,

00:08:22.650 --> 00:08:25.350
we must be able to see this application running.

00:08:25.350 --> 00:08:28.680
Everything works smoothly.

00:08:28.680 --> 00:08:30.430
Now again,

00:08:30.430 --> 00:08:32.820
if you want to know what's going inside this application,

00:08:32.820 --> 00:08:33.960
how the court is written,

00:08:33.960 --> 00:08:36.050
you need to take a look at my course on.

00:08:36.050 --> 00:08:38.520
So let's and Jsp that's from there.

00:08:38.520 --> 00:08:43.790
This example is picked up from all right.

00:08:43.790 --> 00:08:48.750
I think now you're pretty comfortable and confident with writing the boulder maximal files

00:08:48.750 --> 00:08:48.750
.

00:08:48.750 --> 00:08:51.900
We have a few more contacts to cover in.

00:08:51.900 --> 00:08:57.220
And before we say we learned everything all right,

00:08:57.220 --> 00:08:57.340
see?

00:08:57.340 --> 00:08:57.850
You assume

