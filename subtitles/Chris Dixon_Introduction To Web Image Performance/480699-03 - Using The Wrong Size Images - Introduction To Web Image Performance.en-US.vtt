WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:02.930 --> 00:00:05.760
Rather than taking my word for it,

00:00:05.760 --> 00:00:08.130
let's now take a look at some examples of how

00:00:08.130 --> 00:00:11.595
badly-sized images can really affect your project.

00:00:11.595 --> 00:00:15.420
For this head over to the starter project and in the files,

00:00:15.420 --> 00:00:18.195
go into lesson number 1.

00:00:18.195 --> 00:00:24.420
Inside our Visual Studio code or your text editor head into the first project folder,

00:00:24.420 --> 00:00:27.375
am now going to right-click on the Index page,

00:00:27.375 --> 00:00:31.515
Copy Path, then Paste this inside the browser.

00:00:31.515 --> 00:00:36.690
You can also double click on the Index page inside of the project folder to,

00:00:36.690 --> 00:00:39.435
this will open up inside your default browser.

00:00:39.435 --> 00:00:41.840
For this I'm going to be using Google Chrome,

00:00:41.840 --> 00:00:43.400
but you can use Firefox,

00:00:43.400 --> 00:00:47.020
Safari or any major browser which you prefer.

00:00:47.020 --> 00:00:50.345
To begin, we're going to take a look at the file sizes of

00:00:50.345 --> 00:00:55.360
some supplied images and also see what effect this has on the download speed.

00:00:55.360 --> 00:00:58.520
Let's open up the Index page and alongside

00:00:58.520 --> 00:01:01.535
this we have a Images folder which has the same image,

00:01:01.535 --> 00:01:03.490
but in three different sizes,

00:01:03.490 --> 00:01:04.980
we have the largest one,

00:01:04.980 --> 00:01:11.870
which is 5,311 pixels wide and we can also see the size down at the bottom.

00:01:11.870 --> 00:01:15.605
We have a 640 pixels wide version,

00:01:15.605 --> 00:01:19.655
and also a small one which is 320 pixels.

00:01:19.655 --> 00:01:23.090
Over to the index page all we're going to do

00:01:23.090 --> 00:01:26.270
for this is to set up three separate image elements,

00:01:26.270 --> 00:01:29.320
link them to all three of these images.

00:01:29.320 --> 00:01:33.425
Let's jump into the images folder and the first one,

00:01:33.425 --> 00:01:35.255
which is the smallest one,

00:01:35.255 --> 00:01:36.890
and since this is an example,

00:01:36.890 --> 00:01:39.910
I'm just going to leave this old texts as empty.

00:01:39.910 --> 00:01:44.430
Duplicate this two more times and the next one is

00:01:44.430 --> 00:01:51.390
the 640 version and we'll have the largest, which is 5,311,

00:01:51.390 --> 00:01:54.780
save this and now if we refresh,

00:01:54.780 --> 00:01:57.360
we see all three images as expected,

00:01:57.360 --> 00:01:58.925
and also just as a side note,

00:01:58.925 --> 00:02:04.255
all of the images provided for this course has been downloaded from unsplash.com,

00:02:04.255 --> 00:02:07.055
so if you want to change them or download your own,

00:02:07.055 --> 00:02:09.715
this is a good resource to look for.

00:02:09.715 --> 00:02:14.195
Right-click and open up the developer tools with Inspect.

00:02:14.195 --> 00:02:16.880
All the browsers also have the Developer Tools too,

00:02:16.880 --> 00:02:22.345
and they are generally available with right-click and the Inspect or Inspect element.

00:02:22.345 --> 00:02:25.785
Here add into the Network tab and then we can

00:02:25.785 --> 00:02:29.675
refresh the browser to download all three of these images.

00:02:29.675 --> 00:02:33.650
If you make this a little bit wider we can see the size of each of these images.

00:02:33.650 --> 00:02:38.870
As expected, it goes from smallest to largest and also probably as expected,

00:02:38.870 --> 00:02:42.665
we can see that the smallest image is 27 milliseconds,

00:02:42.665 --> 00:02:44.855
we see 29 for the one in the middle,

00:02:44.855 --> 00:02:48.145
then 37 milliseconds for the biggest.

00:02:48.145 --> 00:02:50.160
Let's refresh and try this again.

00:02:50.160 --> 00:02:52.980
This is slightly different each time we refresh the page,

00:02:52.980 --> 00:02:55.490
but we can generally see that the small image will

00:02:55.490 --> 00:02:59.105
download in about two-thirds of the time of the large image.

00:02:59.105 --> 00:03:02.975
This can make a real difference if you have lots of images on our site,

00:03:02.975 --> 00:03:04.700
along with the download time,

00:03:04.700 --> 00:03:08.450
the image quality is also a huge consideration to,

00:03:08.450 --> 00:03:12.350
so it's better we can make sure that all three of our images,

00:03:12.350 --> 00:03:14.675
they got the same available space.

00:03:14.675 --> 00:03:18.540
We can do this up in the head section and then he will add

00:03:18.540 --> 00:03:23.615
some styles and just go for the image element and then select the width,

00:03:23.615 --> 00:03:26.845
then this two,100 percent.

00:03:26.845 --> 00:03:30.460
Now if we go back over to the browser and refresh,

00:03:30.460 --> 00:03:35.635
all three of our images will now stretch to be 100 percent of the available width.

00:03:35.635 --> 00:03:38.245
We can see if we look at the top image,

00:03:38.245 --> 00:03:39.860
we see a loss of quality,

00:03:39.860 --> 00:03:42.130
since this has been stretched a little bit bigger.

00:03:42.130 --> 00:03:45.040
In the middle, quality has been improved,

00:03:45.040 --> 00:03:50.465
on the quality on the third or the biggest image is much better than the previous two.

00:03:50.465 --> 00:03:53.245
We also see on this particular refresh that

00:03:53.245 --> 00:03:57.125
the download time is much slower for the large image,

00:03:57.125 --> 00:04:00.550
this also reinforces what we said in the intro video.

00:04:00.550 --> 00:04:03.415
The large images take longer to download,

00:04:03.415 --> 00:04:09.895
which can cause a poor user experience and also potentially lose users from all sites.

00:04:09.895 --> 00:04:13.180
There's also many surveys and stats out there that say

00:04:13.180 --> 00:04:16.435
uses conversion rate dramatically decreases with

00:04:16.435 --> 00:04:19.510
each second a page takes the load and also

00:04:19.510 --> 00:04:24.230
the abundant rate goes up significantly while waiting for too long.

00:04:24.230 --> 00:04:28.455
I won't throw any stats out there since many surveys show different results,

00:04:28.455 --> 00:04:30.910
but I'm sure we've all been there in the past.

00:04:30.910 --> 00:04:33.070
When a page takes too long to load,

00:04:33.070 --> 00:04:37.310
within these patience and our attention moves on to something else.

00:04:37.310 --> 00:04:40.285
On the other hand, images which are too small,

00:04:40.285 --> 00:04:43.840
will lose a significant amount of quality as they scale up.

00:04:43.840 --> 00:04:46.790
Just like we can see here with the first image,

00:04:46.790 --> 00:04:49.464
so when using images in your website,

00:04:49.464 --> 00:04:54.085
don't just download one which looks great and then simply add it to your project,

00:04:54.085 --> 00:04:56.780
think about the size of the image first.

00:04:56.780 --> 00:05:02.360
In recent years, the range of device sizes uses a viewing our websites on,

00:05:02.360 --> 00:05:04.610
it's just getting bigger and here is

00:05:04.610 --> 00:05:08.795
just a small sample of screen sizes which we have to allow for.

00:05:08.795 --> 00:05:15.125
As you can see, we have a huge range and some up to over 7,000 pixels wide,

00:05:15.125 --> 00:05:18.125
even though some of the largest screens and most common.

00:05:18.125 --> 00:05:21.785
This can still leave our choice of image size really difficult.

00:05:21.785 --> 00:05:23.630
When making these decisions though,

00:05:23.630 --> 00:05:27.275
we also need to not just think about the size of the devices,

00:05:27.275 --> 00:05:30.140
but also how our site will be laid onto.

00:05:30.140 --> 00:05:33.400
This can have a big impact on our choices.

00:05:33.400 --> 00:05:35.570
You may be tempted to think, "Okay,

00:05:35.570 --> 00:05:40.175
I should maybe just aim for the middle and go for maybe 3,000 pixels wide."

00:05:40.175 --> 00:05:44.825
Doing this though does not mean we need to make all of the images this wide.

00:05:44.825 --> 00:05:50.000
For example, you may plan to have pre-images on the same row, just like this,

00:05:50.000 --> 00:05:51.995
and this is a common situation for

00:05:51.995 --> 00:05:56.960
a website or even a gallery view with multiple rows of images.

00:05:56.960 --> 00:06:00.830
Either way, the point is that now we have suddenly divided up the width.

00:06:00.830 --> 00:06:03.590
We now need of our images by three,

00:06:03.590 --> 00:06:07.460
even less if we take into account the space around each one of these images.

00:06:07.460 --> 00:06:12.755
Now we're talking about our images which only needs to be around 800 pixels wide,

00:06:12.755 --> 00:06:16.490
which will result in a big saving on the download time.

00:06:16.490 --> 00:06:18.980
The same goes for two images wide,

00:06:18.980 --> 00:06:20.570
four images and so on.

00:06:20.570 --> 00:06:25.505
All of these savings can really add up if we plan of what size of images we first need,

00:06:25.505 --> 00:06:29.120
instead of just downloads in the first image size which is available,

00:06:29.120 --> 00:06:30.485
thrown in our project,

00:06:30.485 --> 00:06:32.255
and forget about it.

00:06:32.255 --> 00:06:36.830
Sometimes though, it is inevitable that we will need to use a full width image,

00:06:36.830 --> 00:06:41.690
such as a header image or an image carousel and this again returns us back to

00:06:41.690 --> 00:06:47.050
the problem of if we sacrifice image quality or the download speed.

00:06:47.050 --> 00:06:51.395
Well, fortunately, there is a way we can begin to work around this,

00:06:51.395 --> 00:06:57.180
so we don't have to compromise and we'll take a look at how to do this in the next video.
