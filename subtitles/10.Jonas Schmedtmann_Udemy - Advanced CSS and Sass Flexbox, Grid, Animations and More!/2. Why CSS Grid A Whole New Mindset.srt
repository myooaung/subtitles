1
1

00:00:01,386  -->  00:00:04,102 line:15% 
<v Instructor>Let's start the CSS grid part of the course</v>
2

2

00:00:04,102  -->  00:00:07,282 line:15% 
by taking a look at what CSS grids actually are,
3

3

00:00:07,282  -->  00:00:10,544 line:15% 
how they work, and why we need them.
4

4

00:00:10,544  -->  00:00:13,248
So, what are the CSS grids that everyone
5

5

00:00:13,248  -->  00:00:15,862
talks about so much these days?
6

6

00:00:15,862  -->  00:00:19,643
Well, the CSS Grid Layout is a brand new module
7

7

00:00:19,643  -->  00:00:21,580
that brings a two-dimensional grid system
8

8

00:00:21,580  -->  00:00:25,006
to CSS for the very first time, and there really
9

9

00:00:25,006  -->  00:00:28,154
has never been anything like this before in CSS,
10

10

00:00:28,154  -->  00:00:30,266
so this is a real game-changer,
11

11

00:00:30,266  -->  00:00:32,001
because it changes everything:
12

12

00:00:32,001  -->  00:00:35,197
how we think about layout, how we write our CSS,
13

13

00:00:35,197  -->  00:00:37,713
and even how we write our markup in HTML.
14

14

00:00:37,713  -->  00:00:40,835
All of that is much easier, and more logical too,
15

15

00:00:40,835  -->  00:00:43,945
with CSS grids, and so we can now finally design
16

16

00:00:43,945  -->  00:00:47,344
much more complex layouts, because we now have the tools
17

17

00:00:47,344  -->  00:00:50,669
to actually build them in our code with CSS Grid,
18

18

00:00:50,669  -->  00:00:53,631
and that actually also holds true for Flexbox,
19

19

00:00:53,631  -->  00:00:56,462
which works very well together with CSS grids,
20

20

00:00:56,462  -->  00:00:59,443
where Flexbox can handle the one-dimensional layouts,
21

21

00:00:59,443  -->  00:01:02,459
and Grids, the two-dimensional layout parts.
22

22

00:01:02,459  -->  00:01:05,081
Together, these two new technologies solve all the
23

23

00:01:05,081  -->  00:01:08,388
layout problems that we could never really solve before,
24

24

00:01:08,388  -->  00:01:11,241
at least not in a clean and straightforward way.
25

25

00:01:11,241  -->  00:01:14,610
So, by having native grids now right in our browser,
26

26

00:01:14,610  -->  00:01:17,316
we can even throw CSS frameworks, like Bootstrap,
27

27

00:01:17,316  -->  00:01:21,072
out the window, because CSS is now the framework itself.
28

28

00:01:21,072  -->  00:01:22,814
We don't need to be bound by a simple
29

29

00:01:22,814  -->  00:01:25,141
and boring 12 column layout anymore,
30

30

00:01:25,141  -->  00:01:27,940
like Bootstrap and all these other frameworks.
31

31

00:01:27,940  -->  00:01:29,768
We're free to do whatever we want,
32

32

00:01:29,768  -->  00:01:32,738
because it's now so simple to implement
33

33

00:01:32,738  -->  00:01:37,580
without any weird hacks in our CSS, or even HTML code.
34

34

00:01:37,580  -->  00:01:39,625
So, building a simple two-dimensional layout,
35

35

00:01:39,625  -->  00:01:41,945
like this one, which we're actually gonna build
36

36

00:01:41,945  -->  00:01:44,391
in our grid project, by the way, becomes really,
37

37

00:01:44,391  -->  00:01:47,701
really simple and straightforward with CSS grids.
38

38

00:01:47,701  -->  00:01:49,415
It all just works a bit different
39

39

00:01:49,415  -->  00:01:51,860
than the way we've been doing it for so long now
40

40

00:01:51,860  -->  00:01:54,221
with float layouts and other hacks,
41

41

00:01:54,221  -->  00:01:56,681
and that's why I say that CSS Grid requires
42

42

00:01:56,681  -->  00:01:59,139
a whole new mindset, a whole new way
43

43

00:01:59,139  -->  00:02:02,650
of thinking about design, HTML, and CSS.
44

44

00:02:02,650  -->  00:02:05,979
These are really exciting times to be a CSS Developer,
45

45

00:02:05,979  -->  00:02:09,539
and I can't wait to show you how grids actually work,
46

46

00:02:09,539  -->  00:02:12,449
but before we can jump into code, we need to talk a bit
47

47

00:02:12,449  -->  00:02:15,375
about the terminology around CSS grids,
48

48

00:02:15,375  -->  00:02:18,158
and this is a bit similar to the Flexbox terminology,
49

49

00:02:18,158  -->  00:02:21,351
but actually a lot more complex at the same time.
50

50

00:02:21,351  -->  00:02:24,820
So, just like we have a flex container in Flexbox,
51

51

00:02:24,820  -->  00:02:27,819
in CSS grids, we have a grid container,
52

52

00:02:27,819  -->  00:02:29,864
and we create a new grid container
53

53

00:02:29,864  -->  00:02:33,184
by setting the display property of an element to grid.
54

54

00:02:33,184  -->  00:02:34,689
Simple as that.
55

55

00:02:34,689  -->  00:02:36,162
Then, all the direct children
56

56

00:02:36,162  -->  00:02:39,510
of the Grid container are the grid items.
57

57

00:02:39,510  -->  00:02:42,851
We also have axes like in Flexbox, but the difference
58

58

00:02:42,851  -->  00:02:46,180
that these are called the row axis in the x direction,
59

59

00:02:46,180  -->  00:02:49,141
and the column axis in the y direction,
60

60

00:02:49,141  -->  00:02:51,278
and these axes are always the same.
61

61

00:02:51,278  -->  00:02:54,452
You cannot change where they are like we do with Flexbox,
62

62

00:02:54,452  -->  00:02:56,715
which makes it a bit simpler actually.
63

63

00:02:56,715  -->  00:02:59,796
So, row axis and column axis, but there's
64

64

00:02:59,796  -->  00:03:02,909
actually a lot more we need to know.
65

65

00:03:02,909  -->  00:03:06,210
So, first the vertical and horizontal lines
66

66

00:03:06,210  -->  00:03:08,386
that divide up the grid, and separate the columns
67

67

00:03:08,386  -->  00:03:11,612
and the rows, are called the grid lines,
68

68

00:03:11,612  -->  00:03:13,956
and they are automatically numbered for the columns
69

69

00:03:13,956  -->  00:03:17,054
as well as for the rows, starting from one,
70

70

00:03:17,054  -->  00:03:19,619
all the way to the number of rows plus one,
71

71

00:03:19,619  -->  00:03:22,512
and the number of columns plus one of course.
72

72

00:03:22,512  -->  00:03:24,656
Now, the actual space that is between the rows
73

73

00:03:24,656  -->  00:03:27,201
and columns is called the gutter,
74

74

00:03:27,201  -->  00:03:30,758
and the row gutter can be different from the column gutter,
75

75

00:03:30,758  -->  00:03:34,175
so what are the grid rows and columns actually?
76

76

00:03:34,175  -->  00:03:38,451
Well, the space between two grid lines is called a track,
77

77

00:03:38,451  -->  00:03:41,629
no matter if it's vertical or horizontal.
78

78

00:03:41,629  -->  00:03:44,701
If it's horizontal, then it's called a row of course,
79

79

00:03:44,701  -->  00:03:48,029
and if it's vertical, then it's called a column.
80

80

00:03:48,029  -->  00:03:51,949
Simple as that. But it gets better, because there is more.
81

81

00:03:51,949  -->  00:03:53,637
So, the area between two vertical
82

82

00:03:53,637  -->  00:03:57,394
and two horizontal grid lines is called a grid area,
83

83

00:03:57,394  -->  00:04:00,232
and if that area is between two adjacent grid lines
84

84

00:04:00,232  -->  00:04:02,309
and two adjacent column lines,
85

85

00:04:02,309  -->  00:04:05,623
then that area is just called a grid cell.
86

86

00:04:05,623  -->  00:04:08,669
Okay, so I know that this is a lot to take in,
87

87

00:04:08,669  -->  00:04:10,384
so don't worry all too much about it
88

88

00:04:10,384  -->  00:04:12,050
at this point, because with time,
89

89

00:04:12,050  -->  00:04:13,917
this will all come naturally to you,
90

90

00:04:13,917  -->  00:04:15,428
especially the grid lines, gutters,
91

91

00:04:15,428  -->  00:04:18,707
tracks, rows, and columns, because we actually use
92

92

00:04:18,707  -->  00:04:23,149
these terms all the time when we start working with grids.
93

93

00:04:23,149  -->  00:04:25,429
And now just to finish this lecture, this is just
94

94

00:04:25,429  -->  00:04:28,806
a quick overview of all the CSS Grid related properties
95

95

00:04:28,806  -->  00:04:32,136
for both the grid container and the grid items.
96

96

00:04:32,136  -->  00:04:33,900
Now, I will not go into explaining
97

97

00:04:33,900  -->  00:04:35,898
all of these properties at this point,
98

98

00:04:35,898  -->  00:04:37,504
because we're going to use them throughout the rest
99

99

00:04:37,504  -->  00:04:39,451
of the grid part of this course,
100

100

00:04:39,451  -->  00:04:42,597
and so you will certainly get familiar with all of them.
101

101

00:04:42,597  -->  00:04:46,051
So, again, this is more intended like a reference,
102

102

00:04:46,051  -->  00:04:49,296
that maybe you can even print out like I actually did,
103

103

00:04:49,296  -->  00:04:52,048
because believe me, this comes in very handy
104

104

00:04:52,048  -->  00:04:54,192
when we first start using grids.
105

105

00:04:54,192  -->  00:04:56,539
So, whenever you need to get a quick overview
106

106

00:04:56,539  -->  00:04:59,910
of all these grid properties, here they are.
107

107

00:04:59,910  -->  00:05:04,203
Alright! So, that's a quick intro to what CSS grids are.
108

108

00:05:04,203  -->  00:05:06,217
Now let's move on to setting up our tools,
109

109

00:05:06,217  -->  00:05:09,550
and finally start coding with CSS grids.
