1
1

00:00:01,194  -->  00:00:03,908
<v Instructor>I wanted to do this in one or two lectures,</v>
2

2

00:00:03,908  -->  00:00:06,043
but I actually need a Part Three to explain
3

3

00:00:06,043  -->  00:00:08,191
how CSS is parsed.
4

4

00:00:08,191  -->  00:00:10,296
So this lecture is about inheritance
5

5

00:00:10,296  -->  00:00:13,254
that we touched upon briefly before, but now we're ready
6

6

00:00:13,254  -->  00:00:14,754
to really dive in.
7

7

00:00:15,835  -->  00:00:19,549
So inheritance is a way of propagating property values
8

8

00:00:19,549  -->  00:00:22,312
from parent elements to their children.
9

9

00:00:22,312  -->  00:00:25,270
Once more, we have a very simple example here.
10

10

00:00:25,270  -->  00:00:27,960
This time, we're going to determine what the line-height
11

11

00:00:27,960  -->  00:00:30,236
off the child element will be.
12

12

00:00:30,236  -->  00:00:33,620
Start by remembering from our previous lecture
13

13

00:00:33,620  -->  00:00:37,501
that each and every CSS property must have a value.
14

14

00:00:37,501  -->  00:00:40,601
Even if neither we, the developer nor the browser
15

15

00:00:40,601  -->  00:00:42,438
do specify it.
16

16

00:00:42,438  -->  00:00:46,373
In that case, there's no cascaded value, right?
17

17

00:00:46,373  -->  00:00:48,892
So when processing certain property
18

18

00:00:48,892  -->  00:00:51,875
for a certain element, such as line-height,
19

19

00:00:51,875  -->  00:00:54,998
the first question that the CSS engine asks
20

20

00:00:54,998  -->  00:00:57,046
is if there is a cascaded value.
21

21

00:00:57,046  -->  00:01:01,296
And if so, then of course, that's the value that's used.
22

22

00:01:01,296  -->  00:01:04,924
Now if there's no cascaded value, then the next question
23

23

00:01:04,924  -->  00:01:07,582
is if the property can be inherited.
24

24

00:01:07,582  -->  00:01:09,858
And that depends on each property.
25

25

00:01:09,858  -->  00:01:12,065
There are some properties that are inherited
26

26

00:01:12,065  -->  00:01:13,771
and others are not.
27

27

00:01:13,771  -->  00:01:17,250
In the case of line-height, that property gets inherited,
28

28

00:01:17,250  -->  00:01:20,200
as we can see from the property specification.
29

29

00:01:20,200  -->  00:01:23,158
So if a property is inherited, then the value
30

30

00:01:23,158  -->  00:01:26,154
of that property becomes the computed value
31

31

00:01:26,154  -->  00:01:28,148
of it's parent element.
32

32

00:01:28,148  -->  00:01:30,452
It's very important to note that the value
33

33

00:01:30,452  -->  00:01:34,165
that gets inherited is not simply the 150%,
34

34

00:01:34,165  -->  00:01:36,254
but the computed value.
35

35

00:01:36,254  -->  00:01:40,421
In this case, that's 150% of 20 pixels, which is 30 pixels.
36

36

00:01:41,561  -->  00:01:43,610
So the line-height, the child element,
37

37

00:01:43,610  -->  00:01:47,777
will also be 30 pixels, not 150% of the 25 pixel font size.
38

38

00:01:49,128  -->  00:01:50,550
Got it?
39

39

00:01:50,550  -->  00:01:53,178
So again, it's not simply the declared value
40

40

00:01:53,178  -->  00:01:56,336
that passed, but the computed value.
41

41

00:01:56,336  -->  00:01:59,282
Now if it's a property that's not inherited,
42

42

00:01:59,282  -->  00:02:02,708
like for example, padding, then the specified Value
43

43

00:02:02,708  -->  00:02:04,516
will become the initial value
44

44

00:02:04,516  -->  00:02:07,172
which is also specific to each property.
45

45

00:02:07,172  -->  00:02:10,415
In the case of padding, that's just zero pixels
46

46

00:02:10,415  -->  00:02:12,651
like we actually saw in the last lecture.
47

47

00:02:12,651  -->  00:02:15,451
Again, you don't need to memorize these initial values
48

48

00:02:15,451  -->  00:02:19,561
because they're all just rather intuitive.
49

49

00:02:19,561  -->  00:02:22,022
Just like before, here's a quick summary
50

50

00:02:22,022  -->  00:02:23,688
of what you need to know.
51

51

00:02:23,688  -->  00:02:26,657
I guess the most important thing to know about inheritance
52

52

00:02:26,657  -->  00:02:29,048
is that it's there and that it passes the values
53

53

00:02:29,048  -->  00:02:32,661
for some specific properties from parents to children.
54

54

00:02:32,661  -->  00:02:34,322
Again, if you just ignore the jargon,
55

55

00:02:34,322  -->  00:02:37,194
inheritance is actually pretty straight-forward.
56

56

00:02:37,194  -->  00:02:40,449
Inheritance allows the developers to write less code
57

57

00:02:40,449  -->  00:02:43,338
and code that will be more maintainable.
58

58

00:02:43,338  -->  00:02:47,077
Now in the specification for each and every CSS property,
59

59

00:02:47,077  -->  00:02:48,328
you will find if the property
60

60

00:02:48,328  -->  00:02:51,131
is automatically inherited or not.
61

61

00:02:51,131  -->  00:02:54,700
As a rule of thumb, properties related to text are inherited
62

62

00:02:54,700  -->  00:02:59,033
so properties like font family, font size, color, et cetera.
63

63

00:02:59,033  -->  00:03:01,514
Other properties like margins or paddings
64

64

00:03:01,514  -->  00:03:03,063
are, of course, not inherited
65

65

00:03:03,063  -->  00:03:05,894
because that would just be extremely impracticable.
66

66

00:03:05,894  -->  00:03:09,107
Just imagine setting a margin on some section of something,
67

67

00:03:09,107  -->  00:03:11,940
and then suddenly all of the children would automatically
68

68

00:03:11,940  -->  00:03:13,362
get the same margin.
69

69

00:03:13,362  -->  00:03:15,875
That doesn't make any sense, right?
70

70

00:03:15,875  -->  00:03:19,319
Now it's also important to remember that what gets inherited
71

71

00:03:19,319  -->  00:03:21,493
is the computed value of a property
72

72

00:03:21,493  -->  00:03:23,743
and not the declared value.
73

73

00:03:24,853  -->  00:03:27,982
Also, inheritance of a property of course only works
74

74

00:03:27,982  -->  00:03:31,164
if no one, neither the developer nor the browser,
75

75

00:03:31,164  -->  00:03:33,596
declares a value for that property.
76

76

00:03:33,596  -->  00:03:36,130
Okay, now something else I didn't mention yet
77

77

00:03:36,130  -->  00:03:39,202
is that we can use the inherit keyword
78

78

00:03:39,202  -->  00:03:42,148
to force the inheritance of a certain property.
79

79

00:03:42,148  -->  00:03:45,885
I will actually show you that when we get back to coding.
80

80

00:03:45,885  -->  00:03:49,698
Also, in the same way, the initial keyword can be used
81

81

00:03:49,698  -->  00:03:53,262
to reset the property to it's initial value.
82

82

00:03:53,262  -->  00:03:55,283
And that's actually it about inheritance.
83

83

00:03:55,283  -->  00:03:57,271
Not hard at all, right?
84

84

00:03:57,271  -->  00:03:59,021
So let's move on now.
