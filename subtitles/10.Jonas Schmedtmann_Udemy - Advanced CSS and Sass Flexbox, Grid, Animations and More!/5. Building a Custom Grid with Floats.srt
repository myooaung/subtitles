1
1

00:00:01,129  -->  00:00:03,021
<v Jonas>So we talked about layout types.</v>
2

2

00:00:03,021  -->  00:00:05,821
Now let's actually go build a float layout.
3

3

00:00:05,821  -->  00:00:07,054
In order to do so,
4

4

00:00:07,054  -->  00:00:10,794
you will learn how to build your very own simple float grid
5

5

00:00:10,794  -->  00:00:14,739
that you can use on a small webpage like this.
6

6

00:00:14,739  -->  00:00:16,958
In this lecture, you're actually gonna learn
7

7

00:00:16,958  -->  00:00:18,609
a bunch of new stuff.
8

8

00:00:18,609  -->  00:00:21,483
Firstly, how we should architect and build
9

9

00:00:21,483  -->  00:00:23,291
a simple grid system.
10

10

00:00:23,291  -->  00:00:24,605
In order to do that,
11

11

00:00:24,605  -->  00:00:27,114
you'll learn how the attribute selector works,
12

12

00:00:27,114  -->  00:00:30,321
how the powerful not pseudo-class works in CSS,
13

13

00:00:30,321  -->  00:00:33,044
and how the calc function works,
14

14

00:00:33,044  -->  00:00:34,321
and also what's the difference
15

15

00:00:34,321  -->  00:00:38,639
between calc and simple Sass mathematical operations.
16

16

00:00:38,639  -->  00:00:40,328
A lot for one lecture,
17

17

00:00:40,328  -->  00:00:43,333
so let's get our hands dirty now.
18

18

00:00:43,333  -->  00:00:46,339
Now before we start, what is a grid actually?
19

19

00:00:46,339  -->  00:00:48,853
A grid is just a design system
20

20

00:00:48,853  -->  00:00:52,305
which allows us to build consistent interfaces.
21

21

00:00:52,305  -->  00:00:53,928
This kind of grid will allow us
22

22

00:00:53,928  -->  00:00:55,903
to divide our available space
23

23

00:00:55,903  -->  00:00:58,129
into two equal parts and three equal parts
24

24

00:00:58,129  -->  00:01:01,424
or in four equal parts or even something like this
25

25

00:01:01,424  -->  00:01:04,891
with 1/3 on one side and 2/3s on the other side.
26

26

00:01:04,891  -->  00:01:06,974
This leads to way more consistent designs.
27

27

00:01:06,974  -->  00:01:09,572
Now it's really become like a standard
28

28

00:01:09,572  -->  00:01:13,698
in web design, so everyone really uses a grid like this.
29

29

00:01:13,698  -->  00:01:15,740
You also see that there is a consistent space here
30

30

00:01:15,740  -->  00:01:17,143
between all of these columns
31

31

00:01:17,143  -->  00:01:19,282
so we always have this space here.
32

32

00:01:19,282  -->  00:01:20,880
We just call it the gutter actually.
33

33

00:01:20,880  -->  00:01:23,871
Once again, the grid is designed
34

34

00:01:23,871  -->  00:01:27,491
to allow us to build consistent interfaces.
35

35

00:01:27,491  -->  00:01:29,604
Here you can see all the different elements
36

36

00:01:29,604  -->  00:01:32,319
that we're gonna have in our very small grid.
37

37

00:01:32,319  -->  00:01:35,782
So we have one configuration with two columns here,
38

38

00:01:35,782  -->  00:01:38,786
then we will have a configuration with three columns
39

39

00:01:38,786  -->  00:01:41,991
like these ones here, and then one configuration
40

40

00:01:41,991  -->  00:01:44,547
with four columns, okay?
41

41

00:01:44,547  -->  00:01:47,505
Now if you wanted to do more like five, six, eight,
42

42

00:01:47,505  -->  00:01:49,213
10, 12, or even more,
43

43

00:01:49,213  -->  00:01:51,797
then the logic that we use here for these columns
44

44

00:01:51,797  -->  00:01:55,506
is the same like extending it to even more columns.
45

45

00:01:55,506  -->  00:01:57,237
But for this example and for this project,
46

46

00:01:57,237  -->  00:02:00,162
four different columns is more than enough.
47

47

00:02:00,162  -->  00:02:02,142
Now in the three-column configuration,
48

48

00:02:02,142  -->  00:02:03,826
we also have this column here
49

49

00:02:03,826  -->  00:02:07,734
which actually spends over two of the single columns,
50

50

00:02:07,734  -->  00:02:12,280
so you see, this one here spans over these two, right?
51

51

00:02:12,280  -->  00:02:15,120
And so we could then put 1/3 on this side
52

52

00:02:15,120  -->  00:02:17,342
and 2/3s on the other side
53

53

00:02:17,342  -->  00:02:19,443
if that's a layout that we want to build.
54

54

00:02:19,443  -->  00:02:21,825
And then for the four-column configuration down here,
55

55

00:02:21,825  -->  00:02:24,905
we have one column that spans over two of these,
56

56

00:02:24,905  -->  00:02:28,120
so this one here spans over these two basically
57

57

00:02:28,120  -->  00:02:30,177
in case you need a layout like that.
58

58

00:02:30,177  -->  00:02:31,797
For example, one, one, two,
59

59

00:02:31,797  -->  00:02:35,714
or you could have two, one, and then one again,
60

60

00:02:36,618  -->  00:02:39,909
so to have a bigger column in the middle like this one.
61

61

00:02:39,909  -->  00:02:42,005
And then finally, we also have a column
62

62

00:02:42,005  -->  00:02:45,953
which spans over three of the individual columns here
63

63

00:02:45,953  -->  00:02:47,436
which is this one.
64

64

00:02:47,436  -->  00:02:49,908
So these are all different configurations.
65

65

00:02:49,908  -->  00:02:52,461
Now the columns, they always should be in a container,
66

66

00:02:52,461  -->  00:02:55,258
and this container is what we call a row.
67

67

00:02:55,258  -->  00:02:58,153
This one here is a row for these two columns,
68

68

00:02:58,153  -->  00:03:00,672
then here is a row for these three columns.
69

69

00:03:00,672  -->  00:03:03,488
This one is a row for these two columns,
70

70

00:03:03,488  -->  00:03:04,877
and so on and so forth.
71

71

00:03:04,877  -->  00:03:07,481
So all columns that are, let's say, in a line,
72

72

00:03:07,481  -->  00:03:10,383
they are in one row always, okay?
73

73

00:03:10,383  -->  00:03:13,119
So we have to build rows and columns.
74

74

00:03:13,119  -->  00:03:16,046
Let's now code up this grid system here, okay?
75

75

00:03:16,046  -->  00:03:17,956
This shouldn't be all too hard.
76

76

00:03:17,956  -->  00:03:20,266
There's actually a lot of advanced CSS involved here
77

77

00:03:20,266  -->  00:03:23,529
but I'm sure you're gonna master that, right?
78

78

00:03:23,529  -->  00:03:26,876
For now, let's see if our page is actually still working,
79

79

00:03:26,876  -->  00:03:29,561
and you see something is strange here,
80

80

00:03:29,561  -->  00:03:31,581
so let's check what's wrong.
81

81

00:03:31,581  -->  00:03:32,968
And as suspected,
82

82

00:03:32,968  -->  00:03:36,116
it's actually once again here some problem,
83

83

00:03:36,116  -->  00:03:37,072
and yeah, that's right,
84

84

00:03:37,072  -->  00:03:40,517
so something here went wrong again.
85

85

00:03:40,517  -->  00:03:42,017
Let me close this,
86

86

00:03:43,387  -->  00:03:47,554
and open a new tab, and restart the process, so npm run
87

87

00:03:50,170  -->  00:03:51,481
compile.css.
88

88

00:03:51,481  -->  00:03:54,552
I think that's the name of the.
89

89

00:03:54,552  -->  00:03:55,687
Let's take a look.
90

90

00:03:55,687  -->  00:03:57,270
Compile.sass, okay.
91

91

00:04:01,167  -->  00:04:03,917
Then we need to make some change.
92

92

00:04:04,962  -->  00:04:05,795
Okay.
93

93

00:04:07,022  -->  00:04:08,541
Now it run.
94

94

00:04:08,541  -->  00:04:09,374
And okay.
95

95

00:04:09,374  -->  00:04:12,924
So everything looks normal, okay.
96

96

00:04:12,924  -->  00:04:14,849
Now before we actually start writing the CSS,
97

97

00:04:14,849  -->  00:04:17,406
let's start by writing the HTML markup
98

98

00:04:17,406  -->  00:04:20,721
to have something similar to this, okay?
99

99

00:04:20,721  -->  00:04:23,072
But this is of course only for testing purposes.
100

100

00:04:23,072  -->  00:04:27,105
We don't want anything here like this on our webpage, right?
101

101

00:04:27,105  -->  00:04:29,688
So starting then with the HTML,
102

102

00:04:31,877  -->  00:04:35,294
let's put it here after the header, okay?
103

103

00:04:37,294  -->  00:04:39,014
Let's just put a section here
104

104

00:04:39,014  -->  00:04:41,347
just to test our grid, okay?
105

105

00:04:43,431  -->  00:04:45,348
Class, grid-test, okay?
106

106

00:04:47,632  -->  00:04:52,218
Now in here, we're gonna have a couple of rows, of course.
107

107

00:04:52,218  -->  00:04:53,635
So div class row,
108

108

00:04:56,063  -->  00:04:57,980
and then these columns.
109

109

00:05:00,475  -->  00:05:01,610
So the first type of columns,
110

110

00:05:01,610  -->  00:05:04,027
I'm gonna call it col-1-of-2.
111

111

00:05:09,631  -->  00:05:11,710
And that's the text I'm gonna put in there
112

112

00:05:11,710  -->  00:05:16,654
so that we can nicely see what we're actually talking about.
113

113

00:05:16,654  -->  00:05:18,036
And then the second column.
114

114

00:05:18,036  -->  00:05:21,992
So these two here will basically become these two
115

115

00:05:21,992  -->  00:05:24,139
later when we have the CSS in place.
116

116

00:05:24,139  -->  00:05:26,972
And now let's make this part here.
117

117

00:05:28,598  -->  00:05:33,301
So as I was saying, these columns are always in a row, okay?
118

118

00:05:33,301  -->  00:05:37,005
And so these are gonna be called 1-of-3, 1-of-3,
119

119

00:05:37,005  -->  00:05:41,172
and then of course we're gonna have three as well.
120

120

00:05:44,783  -->  00:05:47,450
So I was missing this part here.
121

121

00:05:48,388  -->  00:05:50,275
So col-1-of-3.
122

122

00:05:50,275  -->  00:05:53,009
And now we also have this one here, right?
123

123

00:05:53,009  -->  00:05:53,945
So a column two of three,
124

124

00:05:53,945  -->  00:05:56,612
which spans over these two here.
125

125

00:05:57,637  -->  00:05:59,804
So another row, of course.
126

126

00:06:01,040  -->  00:06:03,219
And again, this is just for testing purposes.
127

127

00:06:03,219  -->  00:06:06,449
We're not gonna have this one here in our design.
128

128

00:06:06,449  -->  00:06:08,699
So two, and then here, two.
129

129

00:06:10,399  -->  00:06:11,570
So you see the logic?
130

130

00:06:11,570  -->  00:06:15,018
This one is a one part of a three-part grid,
131

131

00:06:15,018  -->  00:06:17,069
and this here is basically two parts
132

132

00:06:17,069  -->  00:06:20,217
of the three-part grid, okay?
133

133

00:06:20,217  -->  00:06:21,634
So this one here.
134

134

00:06:23,406  -->  00:06:25,823
And now finally the last one.
135

135

00:06:28,036  -->  00:06:30,223
Actually let me copy this one
136

136

00:06:30,223  -->  00:06:34,509
'cause it's more similar already to what we have.
137

137

00:06:34,509  -->  00:06:36,092
Just copy this one,
138

138

00:06:37,441  -->  00:06:40,418
and then I use this trick where I select all the three's
139

139

00:06:40,418  -->  00:06:42,751
by hitting Command + D.
140

140

00:06:45,258  -->  00:06:46,508
And four, okay?
141

141

00:06:47,567  -->  00:06:49,650
And now all we have to do
142

142

00:06:52,726  -->  00:06:55,203
is to make this line here and this line.
143

143

00:06:55,203  -->  00:06:56,707
So this is a one of two,
144

144

00:06:56,707  -->  00:06:58,512
and this is a three of four.
145

145

00:06:58,512  -->  00:06:59,941
Actually this is two of four.
146

146

00:06:59,941  -->  00:07:00,774
Of course.
147

147

00:07:00,774  -->  00:07:02,909
Sorry for the mistake.
148

148

00:07:02,909  -->  00:07:04,742
So column two of four.
149

149

00:07:05,596  -->  00:07:09,763
And so one plus one plus two makes the four, right?
150

150

00:07:14,685  -->  00:07:17,102
And then finally the last one
151

151

00:07:21,012  -->  00:07:22,679
where we have three.
152

152

00:07:23,836  -->  00:07:27,336
So one plus three makes the total of four.
153

153

00:07:29,130  -->  00:07:30,702
So this is our HTML markup
154

154

00:07:30,702  -->  00:07:33,606
so that we can test our classes.
155

155

00:07:33,606  -->  00:07:36,994
So we're now ready to go to work with our CSS.
156

156

00:07:36,994  -->  00:07:38,353
And as you can probably guess,
157

157

00:07:38,353  -->  00:07:40,522
we are gonna make a whole new Sass file
158

158

00:07:40,522  -->  00:07:42,692
to build this grid, okay?
159

159

00:07:42,692  -->  00:07:45,484
And since this is actually a layout part,
160

160

00:07:45,484  -->  00:07:46,960
so part of the layout,
161

161

00:07:46,960  -->  00:07:48,768
we will put it in the layout folder.
162

162

00:07:48,768  -->  00:07:51,949
So we do a new partial here, S-A-S-S,
163

163

00:07:51,949  -->  00:07:54,949
and then we import it here of course
164

164

00:07:55,828  -->  00:07:57,245
in the main file.
165

165

00:08:04,614  -->  00:08:05,800
All right.
166

166

00:08:05,800  -->  00:08:08,214
So starting with the row.
167

167

00:08:08,214  -->  00:08:11,451
First off, we need to define a width for the row.
168

168

00:08:11,451  -->  00:08:13,993
And one of the standards that is used these days
169

169

00:08:13,993  -->  00:08:17,578
is to make it 1,140-pixels grid, okay?
170

170

00:08:17,578  -->  00:08:18,411
So width,
171

171

00:08:20,848  -->  00:08:21,931
1,140 pixels.
172

172

00:08:23,469  -->  00:08:25,309
Now what's wrong with this?
173

173

00:08:25,309  -->  00:08:26,621
I'm sure that you guessed it.
174

174

00:08:26,621  -->  00:08:27,454
That's right.
175

175

00:08:27,454  -->  00:08:29,277
We want to use rems, not pixels,
176

176

00:08:29,277  -->  00:08:32,030
and so all we have to do is to divide this number by 10
177

177

00:08:32,030  -->  00:08:32,863
because we already know
178

178

00:08:32,863  -->  00:08:35,878
that 10 pixels equals one rem, right?
179

179

00:08:35,878  -->  00:08:38,961
So 114 rem but it's still not perfect
180

180

00:08:40,831  -->  00:08:44,999
because what we actually want is not width but max-width.
181

181

00:08:44,999  -->  00:08:48,153
What's the difference between width and max-width?
182

182

00:08:48,153  -->  00:08:51,474
Now let me actually show it to you in here.
183

183

00:08:51,474  -->  00:08:55,937
So the max-width of this is 114 pixels, right?
184

184

00:08:55,937  -->  00:08:59,406
Now decrease the screen like this,
185

185

00:08:59,406  -->  00:09:03,165
then you will see that everything starts to adapt
186

186

00:09:03,165  -->  00:09:05,249
to the width of the screen.
187

187

00:09:05,249  -->  00:09:06,850
So what max mean.
188

188

00:09:06,850  -->  00:09:08,694
Oh (laughs) sorry.
189

189

00:09:08,694  -->  00:09:10,414
So max-width means
190

190

00:09:10,414  -->  00:09:12,945
is that if we have enough available space,
191

191

00:09:12,945  -->  00:09:15,565
then it will have the width that we specified
192

192

00:09:15,565  -->  00:09:17,245
but if there is not enough width,
193

193

00:09:17,245  -->  00:09:19,578
so basically if the viewport is smaller
194

194

00:09:19,578  -->  00:09:21,464
than width that we specified here,
195

195

00:09:21,464  -->  00:09:25,122
so in this case, if the viewport is smaller than 114 rem,
196

196

00:09:25,122  -->  00:09:28,150
then it will simply fill 100% of the available space
197

197

00:09:28,150  -->  00:09:30,204
that it has, okay?
198

198

00:09:30,204  -->  00:09:33,314
Let's actually give it some kind of background color
199

199

00:09:33,314  -->  00:09:36,013
just so that we can see what's going on.
200

200

00:09:36,013  -->  00:09:37,680
So background-color.
201

201

00:09:39,828  -->  00:09:43,264
I'm gonna give it a nice gray here.
202

202

00:09:43,264  -->  00:09:44,372
Okay.
203

203

00:09:44,372  -->  00:09:45,598
And the last thing we want to do
204

204

00:09:45,598  -->  00:09:48,669
is to always center this row in the viewport.
205

205

00:09:48,669  -->  00:09:50,104
So how do we do that?
206

206

00:09:50,104  -->  00:09:52,938
And probably you already know the trick, right?
207

207

00:09:52,938  -->  00:09:56,585
So what we do is margin, zero, and auto.
208

208

00:09:56,585  -->  00:09:59,457
That's the trick that everyone uses to center block elements
209

209

00:09:59,457  -->  00:10:01,587
inside of another block element.
210

210

00:10:01,587  -->  00:10:06,032
So we say that the margin on top and of the bottom is zero,
211

211

00:10:06,032  -->  00:10:08,766
and left and right is auto.
212

212

00:10:08,766  -->  00:10:10,438
Why does that actually work?
213

213

00:10:10,438  -->  00:10:13,418
When we say that we want the margin to be automatically,
214

214

00:10:13,418  -->  00:10:16,245
this means that the browser, when rendering the page,
215

215

00:10:16,245  -->  00:10:19,156
will automatically figure out the margin
216

216

00:10:19,156  -->  00:10:22,195
that we want on the left and on the right side, right?
217

217

00:10:22,195  -->  00:10:24,246
And since it's both set to auto,
218

218

00:10:24,246  -->  00:10:26,784
it means that left and right will be the same,
219

219

00:10:26,784  -->  00:10:29,804
and CSS will automatically calculate the left margin
220

220

00:10:29,804  -->  00:10:32,301
and the right margin, and they will be the same,
221

221

00:10:32,301  -->  00:10:35,251
and so of course, the element will be centered,
222

222

00:10:35,251  -->  00:10:38,317
so that's the simple logic behind this.
223

223

00:10:38,317  -->  00:10:42,249
And let's now actually ours, our page.
224

224

00:10:42,249  -->  00:10:45,231
Something is not working again.
225

225

00:10:45,231  -->  00:10:46,349
Let me check out what's going.
226

226

00:10:46,349  -->  00:10:49,101
Again, this error here, okay?
227

227

00:10:49,101  -->  00:10:51,150
So let me run it again.
228

228

00:10:51,150  -->  00:10:54,812
I should probably change the autosave function
229

229

00:10:54,812  -->  00:10:56,624
in my code editor.
230

230

00:10:56,624  -->  00:10:58,015
I'm gonna do that later.
231

231

00:10:58,015  -->  00:10:58,848
All right.
232

232

00:10:58,848  -->  00:10:59,681
Now here we go.
233

233

00:10:59,681  -->  00:11:02,195
So we have our column with this nice width,
234

234

00:11:02,195  -->  00:11:05,140
and it's also centered in the browser, so perfect.
235

235

00:11:05,140  -->  00:11:07,801
Let's just inspect it so we can see.
236

236

00:11:07,801  -->  00:11:08,634
All right.
237

237

00:11:08,634  -->  00:11:12,390
So up there, you see that's actually 1,140 pixels wide.
238

238

00:11:12,390  -->  00:11:15,839
Now one last thing that we should also do about these rows
239

239

00:11:15,839  -->  00:11:17,713
is that we should have some space,
240

240

00:11:17,713  -->  00:11:19,958
some gutter between these rows.
241

241

00:11:19,958  -->  00:11:21,423
So imagine we have a layout,
242

242

00:11:21,423  -->  00:11:22,854
and then we have multiple rows,
243

243

00:11:22,854  -->  00:11:26,286
and we naturally want some space between them, right?
244

244

00:11:26,286  -->  00:11:28,451
So let's take care of that.
245

245

00:11:28,451  -->  00:11:29,534
And so we say
246

246

00:11:31,763  -->  00:11:35,013
margin-bottom of, let's say, 80 pixels.
247

247

00:11:36,246  -->  00:11:38,252
Now these values that we're specifying here
248

248

00:11:38,252  -->  00:11:40,633
like this max-width and these margins,
249

249

00:11:40,633  -->  00:11:43,897
they are great candidates for specifying a variable
250

250

00:11:43,897  -->  00:11:46,513
so that we have one place in the variable files
251

251

00:11:46,513  -->  00:11:49,415
where we can easily change all of these values
252

252

00:11:49,415  -->  00:11:51,739
by simply changing one variable.
253

253

00:11:51,739  -->  00:11:54,247
Let's actually do that
254

254

00:11:54,247  -->  00:11:56,715
by opening this file.
255

255

00:11:56,715  -->  00:11:59,205
And now starting to organize this a bit.
256

256

00:11:59,205  -->  00:12:00,355
Let's put some comments here.
257

257

00:12:00,355  -->  00:12:03,132
So these are colors, okay?
258

258

00:12:03,132  -->  00:12:07,299
And now down here, we will have variables for our grid.
259

259

00:12:09,566  -->  00:12:11,566
So let's say grid-width.
260

260

00:12:14,144  -->  00:12:15,894
So remember, 114 rem.
261

261

00:12:16,730  -->  00:12:20,204
If one day in the future, we want to change this,
262

262

00:12:20,204  -->  00:12:22,626
we don't have to search through all the files,
263

263

00:12:22,626  -->  00:12:26,880
we simply can change it here in the variables file, okay?
264

264

00:12:26,880  -->  00:12:31,047
And now I will specify a variable called gutter-vertical,
265

265

00:12:32,531  -->  00:12:36,637
and set it to the 80 pixels that we had before,
266

266

00:12:36,637  -->  00:12:39,760
which is equivalent to eight rem.
267

267

00:12:39,760  -->  00:12:42,674
Since we're at it, I can also specify
268

268

00:12:42,674  -->  00:12:45,091
the horizontal gutter, right?
269

269

00:12:49,703  -->  00:12:53,873
And I will set this to 60 pixels, so six rem.
270

270

00:12:53,873  -->  00:12:57,018
And the horizontal gutter is of course,
271

271

00:12:57,018  -->  00:12:59,634
it's these spaces here in-between the columns.
272

272

00:12:59,634  -->  00:13:01,760
This is even better to have as a variable
273

273

00:13:01,760  -->  00:13:03,693
because once we start specifying
274

274

00:13:03,693  -->  00:13:06,645
these gutters and these columns,
275

275

00:13:06,645  -->  00:13:09,017
we will use this value over and over again,
276

276

00:13:09,017  -->  00:13:12,832
and so this is a perfect candidate for a Sass variable.
277

277

00:13:12,832  -->  00:13:13,665
Okay.
278

278

00:13:13,665  -->  00:13:17,827
Let's now just go ahead and actually use these.
279

279

00:13:17,827  -->  00:13:19,160
It's grid-width.
280

280

00:13:21,880  -->  00:13:23,047
And then here,
281

281

00:13:24,547  -->  00:13:26,464
it's a gutter-vertical.
282

282

00:13:28,233  -->  00:13:29,066
All right.
283

283

00:13:29,066  -->  00:13:30,649
Let's check it out.
284

284

00:13:33,057  -->  00:13:33,890
Yep.
285

285

00:13:33,890  -->  00:13:34,807
Here we go.
286

286

00:13:38,428  -->  00:13:40,137
Actually I'll show you something
287

287

00:13:40,137  -->  00:13:43,339
because you see, this is the last row here, okay?
288

288

00:13:43,339  -->  00:13:45,471
So between all these rows, we have a margin,
289

289

00:13:45,471  -->  00:13:48,350
and then also of course the last one.
290

290

00:13:48,350  -->  00:13:50,391
Now this doesn't make much sense, okay?
291

291

00:13:50,391  -->  00:13:54,228
So we want the last one not to have a margin in the bottom,
292

292

00:13:54,228  -->  00:13:55,747
so let's simply remove that,
293

293

00:13:55,747  -->  00:13:58,560
and I'm sure you know a good way of doing that.
294

294

00:13:58,560  -->  00:14:00,565
So what would that way be?
295

295

00:14:00,565  -->  00:14:03,265
It would simply to use the last child pseudo-class,
296

296

00:14:03,265  -->  00:14:07,317
and then set the margin-bottom to zero on that one, right?
297

297

00:14:07,317  -->  00:14:09,403
But we can do even better,
298

298

00:14:09,403  -->  00:14:12,964
and what I mean is to use the not pseudo selector.
299

299

00:14:12,964  -->  00:14:14,926
Let me show you how it works.
300

300

00:14:14,926  -->  00:14:17,145
We can use it on the row.
301

301

00:14:17,145  -->  00:14:18,526
You already know by now
302

302

00:14:18,526  -->  00:14:21,393
that you can use the ampersand operator,
303

303

00:14:21,393  -->  00:14:24,476
and then we set the not pseudo-class.
304

304

00:14:25,943  -->  00:14:27,610
So we have row, not.
305

305

00:14:28,455  -->  00:14:31,646
Of course, let me just show it to you again
306

306

00:14:31,646  -->  00:14:34,230
just to make sure we're on the same page here.
307

307

00:14:34,230  -->  00:14:36,315
So this is what we have here, right?
308

308

00:14:36,315  -->  00:14:37,546
So row, not.
309

309

00:14:37,546  -->  00:14:38,858
Now what we can do here
310

310

00:14:38,858  -->  00:14:42,327
is to specify another pseudo-class in here.
311

311

00:14:42,327  -->  00:14:44,488
Let me first show it to you and then explain it.
312

312

00:14:44,488  -->  00:14:45,655
So last-child.
313

313

00:14:49,224  -->  00:14:51,807
Now let's duplicate here, okay?
314

314

00:14:52,666  -->  00:14:53,687
All right.
315

315

00:14:53,687  -->  00:14:56,222
So what does this not here actually do?
316

316

00:14:56,222  -->  00:14:57,445
Now without the not,
317

317

00:14:57,445  -->  00:15:00,811
this would simply select the last child, right?
318

318

00:15:00,811  -->  00:15:03,311
So if we add this, last-child,
319

319

00:15:04,536  -->  00:15:06,786
then we would simply select the last child,
320

320

00:15:06,786  -->  00:15:08,587
so the last row element.
321

321

00:15:08,587  -->  00:15:10,226
Now what the not does here
322

322

00:15:10,226  -->  00:15:12,403
is that it simply does the opposite,
323

323

00:15:12,403  -->  00:15:15,642
so we select everything except the last child.
324

324

00:15:15,642  -->  00:15:17,320
It's basically just the opposite.
325

325

00:15:17,320  -->  00:15:19,183
Instead of selecting the last child,
326

326

00:15:19,183  -->  00:15:22,986
we select everything except the last child, right?
327

327

00:15:22,986  -->  00:15:24,294
And so what we can do now
328

328

00:15:24,294  -->  00:15:28,461
is to simply put this margin-bottom in here, and that's it.
329

329

00:15:30,837  -->  00:15:33,824
So now instead of setting the vertical gutter here,
330

330

00:15:33,824  -->  00:15:37,304
this 80 pixels on all of these rows,
331

331

00:15:37,304  -->  00:15:41,476
we put it on all the rows except the last child.
332

332

00:15:41,476  -->  00:15:43,154
This is what the not here does,
333

333

00:15:43,154  -->  00:15:46,879
everything except the last child, okay?
334

334

00:15:46,879  -->  00:15:48,432
Does that make sense?
335

335

00:15:48,432  -->  00:15:50,766
So another very powerful pseudo-class
336

336

00:15:50,766  -->  00:15:52,848
that you just learned here.
337

337

00:15:52,848  -->  00:15:54,400
Let's check it out,
338

338

00:15:54,400  -->  00:15:57,221
and indeed, it is now gone.
339

339

00:15:57,221  -->  00:15:58,282
Really cool.
340

340

00:15:58,282  -->  00:15:59,803
And you see it apply here.
341

341

00:15:59,803  -->  00:16:00,914
At least you should see.
342

342

00:16:00,914  -->  00:16:03,247
It should be somewhere here.
343

343

00:16:05,028  -->  00:16:06,059
It's actually not.
344

344

00:16:06,059  -->  00:16:06,919
Of course, it's not.
345

345

00:16:06,919  -->  00:16:08,106
It is in these ones here.
346

346

00:16:08,106  -->  00:16:08,939
Okay.
347

347

00:16:08,939  -->  00:16:12,713
So here you have row, not, last-child, margin-bottom.
348

348

00:16:12,713  -->  00:16:16,862
So these ones, of course, have the margin-bottom,
349

349

00:16:16,862  -->  00:16:18,784
and then only this last one
350

350

00:16:18,784  -->  00:16:22,441
does not have that declaration block.
351

351

00:16:22,441  -->  00:16:23,274
All right.
352

352

00:16:23,274  -->  00:16:24,543
Cool.
353

353

00:16:24,543  -->  00:16:28,341
Now we're ready to work on the columns.
354

354

00:16:28,341  -->  00:16:30,158
Let's start with the very first column
355

355

00:16:30,158  -->  00:16:32,971
which is the column one of two, okay?
356

356

00:16:32,971  -->  00:16:36,529
And since we always have these columns inside of rows,
357

357

00:16:36,529  -->  00:16:37,923
we can actually nest it here
358

358

00:16:37,923  -->  00:16:41,396
inside of the row selector, right?
359

359

00:16:41,396  -->  00:16:42,563
So col-1-of-2.
360

360

00:16:47,244  -->  00:16:49,563
And so this will translate to a column
361

361

00:16:49,563  -->  00:16:52,691
which is always inside of a row.
362

362

00:16:52,691  -->  00:16:53,524
Okay.
363

363

00:16:53,524  -->  00:16:55,627
And so now how do we actually define
364

364

00:16:55,627  -->  00:16:57,893
the width of this column?
365

365

00:16:57,893  -->  00:17:00,835
Let's take a look here at the example.
366

366

00:17:00,835  -->  00:17:04,024
What is the width of this column here?
367

367

00:17:04,024  -->  00:17:07,857
It is very simply the entire width of this row
368

368

00:17:08,779  -->  00:17:11,612
minus this gutter, this space here
369

369

00:17:13,342  -->  00:17:14,592
divided by two.
370

370

00:17:15,876  -->  00:17:18,450
So again, this entire space here
371

371

00:17:18,450  -->  00:17:19,677
ranging from the left side
372

372

00:17:19,677  -->  00:17:23,525
all the way to the right side here is 100%, okay?
373

373

00:17:23,525  -->  00:17:26,637
If we then subtract this gutter space here,
374

374

00:17:26,637  -->  00:17:28,311
we end up with the entire space
375

375

00:17:28,311  -->  00:17:30,436
that these two columns can occupy.
376

376

00:17:30,436  -->  00:17:32,933
If we then divide that in two parts,
377

377

00:17:32,933  -->  00:17:36,331
we end up with a width of one of the columns, okay?
378

378

00:17:36,331  -->  00:17:38,862
That's exactly what we want.
379

379

00:17:38,862  -->  00:17:40,612
Let's do that in CSS.
380

380

00:17:42,587  -->  00:17:45,857
Now how do we actually do these calculations?
381

381

00:17:45,857  -->  00:17:49,084
In CSS, there is an extremely powerful function
382

382

00:17:49,084  -->  00:17:51,631
which is called calc.
383

383

00:17:51,631  -->  00:17:54,200
In here, you can do mathematical operations,
384

384

00:17:54,200  -->  00:17:56,986
and you can actually mix units in here.
385

385

00:17:56,986  -->  00:17:58,215
That's really important.
386

386

00:17:58,215  -->  00:17:59,897
It's a huge advantage.
387

387

00:17:59,897  -->  00:18:01,859
Again, this allows us to make calculations
388

388

00:18:01,859  -->  00:18:03,616
where we can mix units.
389

389

00:18:03,616  -->  00:18:04,968
That's a big difference
390

390

00:18:04,968  -->  00:18:09,307
between doing native CSS calculations or doing them in Sass
391

391

00:18:09,307  -->  00:18:12,172
because in Sass, we can also do operations of course
392

392

00:18:12,172  -->  00:18:14,830
but we cannot do them with multiple units,
393

393

00:18:14,830  -->  00:18:15,813
so we cannot for example
394

394

00:18:15,813  -->  00:18:18,967
mix rem with pixels, with percentages.
395

395

00:18:18,967  -->  00:18:22,282
It's actually pretty logical why it is that way.
396

396

00:18:22,282  -->  00:18:25,184
It is so because we compile our Sass file
397

397

00:18:25,184  -->  00:18:26,896
while we're developing the page,
398

398

00:18:26,896  -->  00:18:30,794
so even before the page is served of course to the user
399

399

00:18:30,794  -->  00:18:34,067
but this kind of calculation all depends on the layout,
400

400

00:18:34,067  -->  00:18:36,985
so it has to happen while the website is rendered
401

401

00:18:36,985  -->  00:18:38,707
using the visual formatting model.
402

402

00:18:38,707  -->  00:18:41,246
That's when these calculations can occur
403

403

00:18:41,246  -->  00:18:44,160
because it's only then when CSS and when the browser
404

404

00:18:44,160  -->  00:18:46,571
knows what the percentage is, what the rem is,
405

405

00:18:46,571  -->  00:18:49,066
and what all of that stuff is, okay?
406

406

00:18:49,066  -->  00:18:52,932
So we have to do it using the native calc functions.
407

407

00:18:52,932  -->  00:18:56,042
Let's now translate what we were saying earlier.
408

408

00:18:56,042  -->  00:18:58,875
So we have 100% of the width.
409

409

00:18:59,946  -->  00:19:02,779
From that, we subtract the gutter.
410

410

00:19:03,682  -->  00:19:05,484
So the gutter that we have
411

411

00:19:05,484  -->  00:19:08,651
is called gutter-horizontal, remember?
412

412

00:19:09,784  -->  00:19:14,040
And then we simply have to divide all of this into parts.
413

413

00:19:14,040  -->  00:19:15,676
If you know any math,
414

414

00:19:15,676  -->  00:19:18,554
we have to put these parentheses here
415

415

00:19:18,554  -->  00:19:21,971
so that it first does these calculations,
416

416

00:19:23,047  -->  00:19:25,916
so that it first does this calculation here.
417

417

00:19:25,916  -->  00:19:28,177
100 minus the gutter, okay?
418

418

00:19:28,177  -->  00:19:30,180
So we put it into parentheses
419

419

00:19:30,180  -->  00:19:32,189
so that this operation happens first,
420

420

00:19:32,189  -->  00:19:35,831
and then the result of that will be divided by two.
421

421

00:19:35,831  -->  00:19:36,691
Okay.
422

422

00:19:36,691  -->  00:19:38,990
But that's actually not enough to make this working
423

423

00:19:38,990  -->  00:19:41,369
because in the calc function of CSS,
424

424

00:19:41,369  -->  00:19:43,897
if you want to use a Sass variable,
425

425

00:19:43,897  -->  00:19:47,007
we have to actually do this little thing.
426

426

00:19:47,007  -->  00:19:48,563
We have to use the hash,
427

427

00:19:48,563  -->  00:19:52,181
and then wrap it into these curly braces, okay?
428

428

00:19:52,181  -->  00:19:54,268
And with this, it will actually work.
429

429

00:19:54,268  -->  00:19:55,101
Okay.
430

430

00:19:55,101  -->  00:19:59,268
Let's now give this a background color so we can see it.
431

431

00:20:00,119  -->  00:20:03,272
Let's use orange red here just for exemplification.
432

432

00:20:03,272  -->  00:20:06,337
Then of course, we also want to actually see
433

433

00:20:06,337  -->  00:20:08,018
the gutter, right?
434

434

00:20:08,018  -->  00:20:10,482
So we want the margin on the right side of the column,
435

435

00:20:10,482  -->  00:20:12,696
which will then be the gutter.
436

436

00:20:12,696  -->  00:20:15,895
Now remember that there is only one gutter here, right?
437

437

00:20:15,895  -->  00:20:17,869
So on the case of the one, two column,
438

438

00:20:17,869  -->  00:20:19,778
it's only in the first one.
439

439

00:20:19,778  -->  00:20:23,085
So this gutter here will be the right margin
440

440

00:20:23,085  -->  00:20:25,091
of this first column here.
441

441

00:20:25,091  -->  00:20:26,802
And then when we do these columns here,
442

442

00:20:26,802  -->  00:20:29,413
then this gutter will be the right margin of this column,
443

443

00:20:29,413  -->  00:20:32,968
and this gutter will be the right margin of this column,
444

444

00:20:32,968  -->  00:20:34,518
and so we always want the right margin
445

445

00:20:34,518  -->  00:20:37,788
to be on all of the columns except the last one,
446

446

00:20:37,788  -->  00:20:42,494
and that's exactly what we did with the row before, right?
447

447

00:20:42,494  -->  00:20:43,994
Let's now do that.
448

448

00:20:45,241  -->  00:20:48,242
Once again, we can use the not pseudo-class.
449

449

00:20:48,242  -->  00:20:51,575
Then in here, we can use the last-child.
450

450

00:20:53,901  -->  00:20:57,151
So margin-right, and gutter-horizontal.
451

451

00:21:00,039  -->  00:21:00,872
All right.
452

452

00:21:00,872  -->  00:21:04,249
And so our columns also have a gutter now,
453

453

00:21:04,249  -->  00:21:05,605
so a margin-right.
454

454

00:21:05,605  -->  00:21:07,288
Now only one thing left.
455

455

00:21:07,288  -->  00:21:09,915
Since we're using a float layout here,
456

456

00:21:09,915  -->  00:21:12,538
of course we need to float these columns.
457

457

00:21:12,538  -->  00:21:14,583
So we use float, left.
458

458

00:21:14,583  -->  00:21:18,256
We always float all these columns to the left side.
459

459

00:21:18,256  -->  00:21:21,633
Like this, we are ready to actually take a look
460

460

00:21:21,633  -->  00:21:22,860
at our result.
461

461

00:21:22,860  -->  00:21:23,693
Yeah.
462

462

00:21:23,693  -->  00:21:26,150
Wow, it's actually working already.
463

463

00:21:26,150  -->  00:21:30,486
So our first column, our gutter, and our second column.
464

464

00:21:30,486  -->  00:21:33,153
Let's actually inspect this one.
465

465

00:21:34,536  -->  00:21:37,603
Here you have the margin-right of six rem,
466

466

00:21:37,603  -->  00:21:40,512
which is the horizontal gutter that we defined,
467

467

00:21:40,512  -->  00:21:42,606
and here we saw the selector that we built.
468

468

00:21:42,606  -->  00:21:45,224
So the column one of two,
469

469

00:21:45,224  -->  00:21:47,313
which is inside of a row element,
470

470

00:21:47,313  -->  00:21:50,252
and then not the last child, right?
471

471

00:21:50,252  -->  00:21:51,197
Okay.
472

472

00:21:51,197  -->  00:21:53,202
Now just one thing that I want to show you
473

473

00:21:53,202  -->  00:21:56,954
is that this row here has a zero-pixel height,
474

474

00:21:56,954  -->  00:21:59,331
and I'm sure you know why that happens,
475

475

00:21:59,331  -->  00:22:01,505
and it is because all of the child elements
476

476

00:22:01,505  -->  00:22:03,752
of this row element are floated,
477

477

00:22:03,752  -->  00:22:07,231
and so the height collapses and becomes zero.
478

478

00:22:07,231  -->  00:22:08,905
What do we do against that?
479

479

00:22:08,905  -->  00:22:09,840
That's right.
480

480

00:22:09,840  -->  00:22:11,926
We use the clearfix hack.
481

481

00:22:11,926  -->  00:22:13,892
We already did that once actually
482

482

00:22:13,892  -->  00:22:15,814
in our initial Sass lectures.
483

483

00:22:15,814  -->  00:22:17,906
Let's do that again.
484

484

00:22:17,906  -->  00:22:21,468
Remember that by then, we used a Sass mixin, right?
485

485

00:22:21,468  -->  00:22:25,646
So a reusable piece of code that we could then add here
486

486

00:22:25,646  -->  00:22:27,819
to this row declaration block.
487

487

00:22:27,819  -->  00:22:29,783
Let me show you again how it works.
488

488

00:22:29,783  -->  00:22:34,204
Let's write our first mixin here in the mixins file.
489

489

00:22:34,204  -->  00:22:37,808
So a mixin always starts with us writing mixin
490

490

00:22:37,808  -->  00:22:42,062
and the name of the mixin which is clearfix in this case.
491

491

00:22:42,062  -->  00:22:42,895
Clearfix.
492

492

00:22:44,892  -->  00:22:47,714
What do we want this clearfix to actually do?
493

493

00:22:47,714  -->  00:22:50,133
How does a clearfix actually work?
494

494

00:22:50,133  -->  00:22:53,453
What the clearfix does is to append a pseudo element
495

495

00:22:53,453  -->  00:22:57,261
after the element which will then clear these floats.
496

496

00:22:57,261  -->  00:23:00,698
What we can do is to use the ampersand operator
497

497

00:23:00,698  -->  00:23:02,865
and then after, all right?
498

498

00:23:04,625  -->  00:23:08,127
We're gonna include this mixin in our grid.
499

499

00:23:08,127  -->  00:23:11,523
It will then simply copy this code here,
500

500

00:23:11,523  -->  00:23:14,634
and so this ampersand, if we're writing in a mixin then
501

501

00:23:14,634  -->  00:23:17,257
will transform to row,
502

502

00:23:17,257  -->  00:23:20,538
so it will then be something like this
503

503

00:23:20,538  -->  00:23:22,546
just to show it to you,
504

504

00:23:22,546  -->  00:23:26,713
after, and then all the code that are in the right.
505

505

00:23:27,612  -->  00:23:28,848
Let's do that.
506

506

00:23:28,848  -->  00:23:30,952
How does a clearfix work?
507

507

00:23:30,952  -->  00:23:34,043
Again, we always need to specify the content property,
508

508

00:23:34,043  -->  00:23:36,640
otherwise a pseudo element will simply not appear
509

509

00:23:36,640  -->  00:23:38,389
on the page, and we want it empty
510

510

00:23:38,389  -->  00:23:42,632
because we don't want to see this element on the page.
511

511

00:23:42,632  -->  00:23:44,816
Then we also need to display it.
512

512

00:23:44,816  -->  00:23:47,907
The way it's done is to use the table value in here.
513

513

00:23:47,907  -->  00:23:50,873
That's simply the standard version of the clearfix,
514

514

00:23:50,873  -->  00:23:52,276
so display, table,
515

515

00:23:52,276  -->  00:23:55,093
and then finally the property that actually performs
516

516

00:23:55,093  -->  00:23:58,273
this clearfix is the clear property.
517

517

00:23:58,273  -->  00:24:00,903
This would clear both floats,
518

518

00:24:00,903  -->  00:24:02,874
so float left and float right
519

519

00:24:02,874  -->  00:24:03,707
so that it's gonna work
520

520

00:24:03,707  -->  00:24:07,430
no matter if we use float left or float right.
521

521

00:24:07,430  -->  00:24:09,198
That's actually it.
522

522

00:24:09,198  -->  00:24:10,064
All right.
523

523

00:24:10,064  -->  00:24:13,064
Let's now include the mixin in here.
524

524

00:24:15,877  -->  00:24:19,578
Let me actually put it here before these columns.
525

525

00:24:19,578  -->  00:24:20,411
Include
526

526

00:24:22,381  -->  00:24:23,214
clearfix.
527

527

00:24:26,095  -->  00:24:28,449
That should do the trick.
528

528

00:24:28,449  -->  00:24:30,032
Let's check it out.
529

529

00:24:31,103  -->  00:24:32,892
Yeah, I think this looks different.
530

530

00:24:32,892  -->  00:24:34,788
Yeah, here we go.
531

531

00:24:34,788  -->  00:24:38,457
So our row now has again a complete height
532

532

00:24:38,457  -->  00:24:40,646
with 17 pixels in this case.
533

533

00:24:40,646  -->  00:24:42,048
So we cleared the float.
534

534

00:24:42,048  -->  00:24:45,844
We already have the one of two columns nicely set up.
535

535

00:24:45,844  -->  00:24:49,348
Let's now move on to the next type of columns.
536

536

00:24:49,348  -->  00:24:51,071
All we have to do in order to finish this lecture
537

537

00:24:51,071  -->  00:24:54,326
is now code up all of these different columns,
538

538

00:24:54,326  -->  00:24:56,885
which shouldn't be all too hard, okay?
539

539

00:24:56,885  -->  00:24:58,385
Let's now do that.
540

540

00:25:00,348  -->  00:25:02,681
Let's start with col-1-of-3.
541

541

00:25:08,313  -->  00:25:11,730
How is the width going to work this time?
542

542

00:25:13,007  -->  00:25:15,816
Let us take a look actually, okay?
543

543

00:25:15,816  -->  00:25:18,950
It's actually pretty similar to what we had before.
544

544

00:25:18,950  -->  00:25:22,134
So we have 100%, and if we subtract
545

545

00:25:22,134  -->  00:25:24,087
this gutter and this gutter,
546

546

00:25:24,087  -->  00:25:26,475
and then divide the result by a three
547

547

00:25:26,475  -->  00:25:28,122
because now we have three columns,
548

548

00:25:28,122  -->  00:25:32,655
then we end up with the width of one of the columns, right?
549

549

00:25:32,655  -->  00:25:35,629
So it's very similar to the one that we had before.
550

550

00:25:35,629  -->  00:25:37,327
And so let's do that.
551

551

00:25:37,327  -->  00:25:38,327
So 100%
552

552

00:25:39,595  -->  00:25:41,162
minus,
553

553

00:25:41,162  -->  00:25:44,495
and now two times the gutter-horizontal.
554

554

00:25:49,896  -->  00:25:52,409
And here this part is missing.
555

555

00:25:52,409  -->  00:25:56,523
And now divide this result by a three because this time,
556

556

00:25:56,523  -->  00:26:00,236
we have of course three columns, all right?
557

557

00:26:00,236  -->  00:26:03,286
And now this stuff here is actually the same.
558

558

00:26:03,286  -->  00:26:07,203
Now of course, I should not simply copy this code here
559

559

00:26:07,203  -->  00:26:09,104
into this column, right?
560

560

00:26:09,104  -->  00:26:14,003
Really against the don't repeat yourself practice, okay?
561

561

00:26:14,003  -->  00:26:15,196
And we're also not gonna do
562

562

00:26:15,196  -->  00:26:17,462
one of the solutions that I mentioned earlier,
563

563

00:26:17,462  -->  00:26:20,603
something like a mixin or something like that.
564

564

00:26:20,603  -->  00:26:22,538
That also doesn't make much sense here.
565

565

00:26:22,538  -->  00:26:24,147
Instead we want to do
566

566

00:26:24,147  -->  00:26:27,940
is to basically select all of the columns at the same time,
567

567

00:26:27,940  -->  00:26:30,994
and then apply these styles to all of these columns.
568

568

00:26:30,994  -->  00:26:34,705
Let me show that I think is the best way to do that.
569

569

00:26:34,705  -->  00:26:37,962
For that, we're gonna use the attribute selector, okay?
570

570

00:26:37,962  -->  00:26:39,545
Let's do that here.
571

571

00:26:40,891  -->  00:26:43,610
We could of course go ahead and add a new class
572

572

00:26:43,610  -->  00:26:44,972
to all of these columns.
573

573

00:26:44,972  -->  00:26:47,904
So we could add something like simply col,
574

574

00:26:47,904  -->  00:26:49,271
and then select that,
575

575

00:26:49,271  -->  00:26:53,270
and then have a specific style only for col-1-of-4
576

576

00:26:53,270  -->  00:26:56,112
but that again would be a bit too much I think.
577

577

00:26:56,112  -->  00:26:59,124
I prefer to use the selector that I'm gonna show you,
578

578

00:26:59,124  -->  00:27:00,857
which is the attribute selector.
579

579

00:27:00,857  -->  00:27:03,286
We start with the brackets.
580

580

00:27:03,286  -->  00:27:04,558
Select this.
581

581

00:27:04,558  -->  00:27:07,361
And then in here, we can specify an attribute.
582

582

00:27:07,361  -->  00:27:11,161
For example, we could put src if we wanted.
583

583

00:27:11,161  -->  00:27:12,272
Just an example.
584

584

00:27:12,272  -->  00:27:15,022
Src is an attribute of the image.
585

585

00:27:16,956  -->  00:27:18,289
Let's see.
586

586

00:27:18,289  -->  00:27:22,038
For example, this image has the src of img/logo-white.
587

587

00:27:22,038  -->  00:27:24,436
And so we could now select all of the elements
588

588

00:27:24,436  -->  00:27:26,418
that have this exact src,
589

589

00:27:26,418  -->  00:27:29,628
or we could also select by alt.
590

590

00:27:29,628  -->  00:27:32,314
So we could say something like alt, logo.
591

591

00:27:32,314  -->  00:27:34,168
Actually let's do that.
592

592

00:27:34,168  -->  00:27:36,394
So we could do something like this,
593

593

00:27:36,394  -->  00:27:39,120
and this would basically select all of the elements,
594

594

00:27:39,120  -->  00:27:42,787
which have this alt attribute equal to logo.
595

595

00:27:44,222  -->  00:27:47,286
Now in this case, that's not what we want at all obviously.
596

596

00:27:47,286  -->  00:27:50,014
What we want is to select
597

597

00:27:50,014  -->  00:27:51,621
based on class.
598

598

00:27:51,621  -->  00:27:54,426
Now why do we select based on class
599

599

00:27:54,426  -->  00:27:57,271
if we could simply do it with a dot, right?
600

600

00:27:57,271  -->  00:28:00,567
But let me show you because what we can do also here
601

601

00:28:00,567  -->  00:28:02,420
is to not just select equal
602

602

00:28:02,420  -->  00:28:05,303
but we can do something like this.
603

603

00:28:05,303  -->  00:28:07,241
For example, this symbol here
604

604

00:28:07,241  -->  00:28:10,828
means that we want the beginning to be what we set here.
605

605

00:28:10,828  -->  00:28:14,995
So let's set this one to col dash, and that is it.
606

606

00:28:16,391  -->  00:28:17,831
What does this do?
607

607

00:28:17,831  -->  00:28:19,521
It will select all of the elements
608

608

00:28:19,521  -->  00:28:22,168
in which the class attribute starts,
609

609

00:28:22,168  -->  00:28:23,896
and that's what this symbol here means.
610

610

00:28:23,896  -->  00:28:28,054
So where all the class attribute start with col.
611

611

00:28:28,054  -->  00:28:30,572
That is exactly our case, right?
612

612

00:28:30,572  -->  00:28:33,187
So we have all the columns starting with col dash,
613

613

00:28:33,187  -->  00:28:35,408
so col dash one and one,
614

614

00:28:35,408  -->  00:28:38,332
and you see all of these are selected.
615

615

00:28:38,332  -->  00:28:41,008
And so this is a nice way to select all of the columns
616

616

00:28:41,008  -->  00:28:42,819
at the same time.
617

617

00:28:42,819  -->  00:28:46,159
Again, the magic happens actually here with this symbol.
618

618

00:28:46,159  -->  00:28:48,549
This allows us to select only the ones
619

619

00:28:48,549  -->  00:28:50,632
that start with col dash.
620

620

00:28:51,605  -->  00:28:53,003
Now we can use other symbols here,
621

621

00:28:53,003  -->  00:28:54,987
so other selectors here as well.
622

622

00:28:54,987  -->  00:28:57,912
Instead of this, we could have the asterisk,
623

623

00:28:57,912  -->  00:29:01,087
and what this would mean is that select any classes,
624

624

00:29:01,087  -->  00:29:04,180
which contain this part col, okay?
625

625

00:29:04,180  -->  00:29:05,545
But that's not what we want
626

626

00:29:05,545  -->  00:29:07,936
because this could lead to some mistakes maybe.
627

627

00:29:07,936  -->  00:29:12,143
We only really want the ones that start with col.
628

628

00:29:12,143  -->  00:29:13,732
Actually there is another one.
629

629

00:29:13,732  -->  00:29:15,088
You could put this sign here,
630

630

00:29:15,088  -->  00:29:16,822
so like the dollar sign,
631

631

00:29:16,822  -->  00:29:21,189
and then it would mean any class that ends with col dash.
632

632

00:29:21,189  -->  00:29:23,584
So we can do start with col,
633

633

00:29:23,584  -->  00:29:27,295
end with col, or simply contain col, okay?
634

634

00:29:27,295  -->  00:29:29,938
But what we want here is this.
635

635

00:29:29,938  -->  00:29:33,611
Now there are a lot of applications for this selector here.
636

636

00:29:33,611  -->  00:29:36,459
For example, we could also select links
637

637

00:29:36,459  -->  00:29:38,975
based on a specific href attribute,
638

638

00:29:38,975  -->  00:29:41,326
or we could also select anchor elements,
639

639

00:29:41,326  -->  00:29:44,671
which have the target attribute set to blank,
640

640

00:29:44,671  -->  00:29:47,202
so these are the links that open in a new tab
641

641

00:29:47,202  -->  00:29:49,512
when we click them, and we could then style
642

642

00:29:49,512  -->  00:29:52,313
these ones differently than the regular links.
643

643

00:29:52,313  -->  00:29:54,542
And so there is a whole lot of applications
644

644

00:29:54,542  -->  00:29:57,053
for this kind of selector, so keep this one in mind
645

645

00:29:57,053  -->  00:29:59,569
when you start building your own pages.
646

646

00:29:59,569  -->  00:30:01,372
Now what we really wanted to do here
647

647

00:30:01,372  -->  00:30:05,289
is to actually pass all of this in here, right?
648

648

00:30:07,441  -->  00:30:09,486
Now all of the classes that we have
649

649

00:30:09,486  -->  00:30:11,621
will have this float property set to left
650

650

00:30:11,621  -->  00:30:13,473
so that will be floated to left,
651

651

00:30:13,473  -->  00:30:17,024
and also they will have their right margins set
652

652

00:30:17,024  -->  00:30:18,835
to this gutter that we specified
653

653

00:30:18,835  -->  00:30:21,509
but only all except the last one,
654

654

00:30:21,509  -->  00:30:23,448
which is what this not does here.
655

655

00:30:23,448  -->  00:30:24,281
All right.
656

656

00:30:24,281  -->  00:30:25,948
If we now check out.
657

657

00:30:27,538  -->  00:30:28,740
All right.
658

658

00:30:28,740  -->  00:30:30,267
Here we go.
659

659

00:30:30,267  -->  00:30:33,061
Our one of three columns are now also working.
660

660

00:30:33,061  -->  00:30:36,971
And you see that already it's styled these remaining columns
661

661

00:30:36,971  -->  00:30:38,739
with the color that we specified
662

662

00:30:38,739  -->  00:30:41,291
and also with the gutter, right?
663

663

00:30:41,291  -->  00:30:43,229
So all we have to really do next
664

664

00:30:43,229  -->  00:30:46,283
is to specify their width, okay?
665

665

00:30:46,283  -->  00:30:48,140
Now just to show you.
666

666

00:30:48,140  -->  00:30:49,585
Let me show you for example.
667

667

00:30:49,585  -->  00:30:52,961
So here is that selector that we just wrote before.
668

668

00:30:52,961  -->  00:30:54,665
So it selects first the row,
669

669

00:30:54,665  -->  00:30:57,053
and then in there, all the elements with the class
670

670

00:30:57,053  -->  00:30:58,946
starting with col dash,
671

671

00:30:58,946  -->  00:31:02,662
and so you saw that this really worked.
672

672

00:31:02,662  -->  00:31:03,767
Okay.
673

673

00:31:03,767  -->  00:31:06,767
Let's continue with the one of four.
674

674

00:31:07,734  -->  00:31:10,986
And then in the end, we will do the intermediate ones,
675

675

00:31:10,986  -->  00:31:14,621
two of three and the other ones as well.
676

676

00:31:14,621  -->  00:31:16,308
How is this one gonna work?
677

677

00:31:16,308  -->  00:31:18,867
Again, very similar to the other ones.
678

678

00:31:18,867  -->  00:31:21,715
This time, we have three gutters of course,
679

679

00:31:21,715  -->  00:31:24,515
and then we simply divide it by four
680

680

00:31:24,515  -->  00:31:26,403
because we have four columns.
681

681

00:31:26,403  -->  00:31:27,841
Very simple, right?
682

682

00:31:27,841  -->  00:31:31,426
And so you see that it's already working in here.
683

683

00:31:31,426  -->  00:31:33,407
Now we have to do is to specify
684

684

00:31:33,407  -->  00:31:36,740
this, this, and these remaining columns.
685

685

00:31:37,903  -->  00:31:39,986
Let's actually copy this.
686

686

00:31:44,379  -->  00:31:46,104
Two of three.
687

687

00:31:46,104  -->  00:31:48,919
Now it actually gets a bit more complicated.
688

688

00:31:48,919  -->  00:31:52,012
What is the width of this kind of column?
689

689

00:31:52,012  -->  00:31:55,356
Let's check it out here in our example, okay?
690

690

00:31:55,356  -->  00:31:57,999
What is the width of this column?
691

691

00:31:57,999  -->  00:31:59,253
Can you see it?
692

692

00:31:59,253  -->  00:32:01,223
It actually is easy to see it up here.
693

693

00:32:01,223  -->  00:32:05,278
The width of this column is the width of the normal columns
694

694

00:32:05,278  -->  00:32:06,911
of the one of three column
695

695

00:32:06,911  -->  00:32:09,039
plus another of these columns.
696

696

00:32:09,039  -->  00:32:12,196
So two times this column plus the gutter.
697

697

00:32:12,196  -->  00:32:13,261
That's actually it.
698

698

00:32:13,261  -->  00:32:15,712
All we have to do is now translate this to code.
699

699

00:32:15,712  -->  00:32:17,630
Again, the width of this column
700

700

00:32:17,630  -->  00:32:21,130
is this one plus this one plus the gutter.
701

701

00:32:22,297  -->  00:32:23,892
Let's do that.
702

702

00:32:23,892  -->  00:32:25,900
What we have here already
703

703

00:32:25,900  -->  00:32:29,898
is actually the width of one of the columns, right?
704

704

00:32:29,898  -->  00:32:33,315
So let's simply wrap that in parentheses.
705

705

00:32:37,168  -->  00:32:38,001
All right.
706

706

00:32:39,864  -->  00:32:41,781
And multiply it by two.
707

707

00:32:42,856  -->  00:32:47,005
So two times the width of the simple column
708

708

00:32:47,005  -->  00:32:48,838
plus the gutter width.
709

709

00:32:53,382  -->  00:32:54,817
That should be it.
710

710

00:32:54,817  -->  00:32:58,380
Again, we simply multiplied two times the width
711

711

00:32:58,380  -->  00:33:00,760
of the single one of three column.
712

712

00:33:00,760  -->  00:33:02,747
So this one here, you multiply it by two,
713

713

00:33:02,747  -->  00:33:05,161
and then add the gutter width,
714

714

00:33:05,161  -->  00:33:08,000
which is exactly what we discussed a bit earlier.
715

715

00:33:08,000  -->  00:33:09,500
Let's take a look.
716

716

00:33:13,608  -->  00:33:16,824
Something is not really working here.
717

717

00:33:16,824  -->  00:33:19,528
Let's take a look at what's happening.
718

718

00:33:19,528  -->  00:33:22,018
Now something is not right.
719

719

00:33:22,018  -->  00:33:23,082
I see.
720

720

00:33:23,082  -->  00:33:23,986
Okay.
721

721

00:33:23,986  -->  00:33:27,233
Of course, I misspelled this word here.
722

722

00:33:27,233  -->  00:33:29,674
It's not width, it's of course horizontal.
723

723

00:33:29,674  -->  00:33:30,507
Okay?
724

724

00:33:30,507  -->  00:33:31,575
Sorry about that one.
725

725

00:33:31,575  -->  00:33:34,224
Now of course it's working.
726

726

00:33:34,224  -->  00:33:37,629
So this column plus this column plus this gutter
727

727

00:33:37,629  -->  00:33:39,469
makes this column here.
728

728

00:33:39,469  -->  00:33:42,905
Let's do now the same thing for the col-2-of-4
729

729

00:33:42,905  -->  00:33:44,503
but actually it's the same.
730

730

00:33:44,503  -->  00:33:48,970
So one of four plus one of four plus this gutter
731

731

00:33:48,970  -->  00:33:51,753
will make this two of four column.
732

732

00:33:51,753  -->  00:33:52,735
All right?
733

733

00:33:52,735  -->  00:33:53,902
Let's do that.
734

734

00:33:58,103  -->  00:34:00,067
So col-2-of-4.
735

735

00:34:00,067  -->  00:34:01,817
Let's have two times,
736

736

00:34:04,820  -->  00:34:08,882
open parenthesis and then close them here.
737

737

00:34:08,882  -->  00:34:11,787
Always be careful with the parentheses.
738

738

00:34:11,787  -->  00:34:14,200
And then we simply add the gutter again.
739

739

00:34:14,200  -->  00:34:15,429
Let's just copy it
740

740

00:34:15,429  -->  00:34:19,309
so that I don't make the same mistake again.
741

741

00:34:19,309  -->  00:34:21,392
Yeah, let's check it out.
742

742

00:34:22,831  -->  00:34:23,855
Here we go.
743

743

00:34:23,855  -->  00:34:25,532
Everything is working.
744

744

00:34:25,532  -->  00:34:28,770
Now there is only one left, which is the three of four.
745

745

00:34:28,770  -->  00:34:30,905
The logic now is actually pretty similar.
746

746

00:34:30,905  -->  00:34:35,049
The three of four is the same as having this column
747

747

00:34:35,049  -->  00:34:37,417
plus this one plus this one
748

748

00:34:37,417  -->  00:34:39,989
plus this gutter and this gutter, okay?
749

749

00:34:39,989  -->  00:34:42,075
So three times the one of four column
750

750

00:34:42,075  -->  00:34:44,158
but two times the gutter.
751

751

00:34:48,534  -->  00:34:50,656
Let's just copy all of this.
752

752

00:34:50,656  -->  00:34:51,802
Three.
753

753

00:34:51,802  -->  00:34:55,832
In here, remember we multiplied by three now,
754

754

00:34:55,832  -->  00:34:58,161
and then two times the gutter.
755

755

00:34:58,161  -->  00:34:58,994
That's it.
756

756

00:35:00,581  -->  00:35:03,656
Indeed, it is now working just fine.
757

757

00:35:03,656  -->  00:35:05,941
With this, we actually already have
758

758

00:35:05,941  -->  00:35:07,543
our grid system in place,
759

759

00:35:07,543  -->  00:35:09,346
meaning that we are now ready to use it
760

760

00:35:09,346  -->  00:35:11,152
in the rest of the project.
761

761

00:35:11,152  -->  00:35:15,694
Now I know that this math that we did can seem a bit scary
762

762

00:35:15,694  -->  00:35:16,968
but once you understand it, it's really no problem.
763

763

00:35:16,968  -->  00:35:20,065
Since you now know how to do it,
764

764

00:35:20,065  -->  00:35:21,992
you can simply copy it for next time,
765

765

00:35:21,992  -->  00:35:24,125
so for the next project and then use it.
766

766

00:35:24,125  -->  00:35:27,107
It's way better to use your own stuff,
767

767

00:35:27,107  -->  00:35:28,540
at least that's my opinion,
768

768

00:35:28,540  -->  00:35:30,959
and know exactly how it works and what you're doing
769

769

00:35:30,959  -->  00:35:32,303
instead of always relying
770

770

00:35:32,303  -->  00:35:34,837
on some third-party external stuff.
771

771

00:35:34,837  -->  00:35:36,923
At least that is my opinion.
772

772

00:35:36,923  -->  00:35:38,524
Now if you think that this gutter
773

773

00:35:38,524  -->  00:35:40,833
is maybe too large or too small,
774

774

00:35:40,833  -->  00:35:42,961
then again if you have another project
775

775

00:35:42,961  -->  00:35:44,208
with some other requirements,
776

776

00:35:44,208  -->  00:35:46,506
you can very simply come here and change it.
777

777

00:35:46,506  -->  00:35:49,086
For example, imagine we want a bigger gutter.
778

778

00:35:49,086  -->  00:35:51,308
All we have to do is to increase it.
779

779

00:35:51,308  -->  00:35:54,221
Now we see the gutter is really huge.
780

780

00:35:54,221  -->  00:35:56,276
Or if it's too big, then you can just put it
781

781

00:35:56,276  -->  00:35:58,243
to something really small like two.
782

782

00:35:58,243  -->  00:36:00,940
You can come here and you have smaller gutters.
783

783

00:36:00,940  -->  00:36:02,781
That is the power of CSS variables,
784

784

00:36:02,781  -->  00:36:04,583
changing one value in one place,
785

785

00:36:04,583  -->  00:36:06,910
and then it takes effect on the entire page
786

786

00:36:06,910  -->  00:36:10,882
everywhere where you used this variable, okay?
787

787

00:36:10,882  -->  00:36:13,727
Our grid system is now in place.
788

788

00:36:13,727  -->  00:36:17,883
Let's just hide this CSS here from our page
789

789

00:36:17,883  -->  00:36:20,829
because we don't really want to see this, right?
790

790

00:36:20,829  -->  00:36:23,996
So HTML comments, they work like this,
791

791

00:36:25,010  -->  00:36:26,593
and now at the end,
792

792

00:36:28,365  -->  00:36:30,662
we just close them like this.
793

793

00:36:30,662  -->  00:36:31,518
That's it.
794

794

00:36:31,518  -->  00:36:33,489
Now we commented out our code.
795

795

00:36:33,489  -->  00:36:36,769
So each time that we want to now use one of these columns
796

796

00:36:36,769  -->  00:36:38,868
or one of these rows with the columns inside,
797

797

00:36:38,868  -->  00:36:40,794
we can come here and copy them
798

798

00:36:40,794  -->  00:36:44,504
and just use our grid as we intended.
799

799

00:36:44,504  -->  00:36:45,494
All right.
800

800

00:36:45,494  -->  00:36:47,701
This was essentially in order to move on,
801

801

00:36:47,701  -->  00:36:50,151
and also for you on the way to becoming
802

802

00:36:50,151  -->  00:36:52,278
a more advanced CSS developer.
803

803

00:36:52,278  -->  00:36:54,326
Now you really know how grids are configured
804

804

00:36:54,326  -->  00:36:58,493
and how they work and you could easily build your own.
