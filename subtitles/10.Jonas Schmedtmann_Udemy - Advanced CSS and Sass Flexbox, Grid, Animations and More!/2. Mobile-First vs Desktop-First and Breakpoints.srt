1
1

00:00:01,490  -->  00:00:03,210
<v Jonas>Two fundamental aspects</v>
2

2

00:00:03,210  -->  00:00:06,018
of modern responsive design are, without a doubt,
3

3

00:00:06,018  -->  00:00:10,336
deciding about doing mobile-first or desktop-first
4

4

00:00:10,336  -->  00:00:13,114
for their website or app, as well as selecting breakpoints
5

5

00:00:13,114  -->  00:00:16,276
for our project, when writing media queries.
6

6

00:00:16,276  -->  00:00:20,421
So, in this lecture, that's what we're gonna talk about.
7

7

00:00:20,421  -->  00:00:22,632
So, let's start right into it.
8

8

00:00:22,632  -->  00:00:25,996
In the desktop-first approach, we optimize our interfaces
9

9

00:00:25,996  -->  00:00:28,001
for the large screens.
10

10

00:00:28,001  -->  00:00:30,920
And therefore, we start by writing CSS code
11

11

00:00:30,920  -->  00:00:34,660
for these large screens, into our CSS file.
12

12

00:00:34,660  -->  00:00:37,714
This is what we have been doing all this time
13

13

00:00:37,714  -->  00:00:39,942
in the Nader's Project. Right?
14

14

00:00:39,942  -->  00:00:42,241
Now later, when we make the website responsive,
15

15

00:00:42,241  -->  00:00:44,054
we simply write media queries,
16

16

00:00:44,054  -->  00:00:48,011
in order to shrink the design to fit the smaller screens.
17

17

00:00:48,011  -->  00:00:50,806
This is the more traditional way of doing things,
18

18

00:00:50,806  -->  00:00:54,383
and also the easier way to learn, in my opinion.
19

19

00:00:54,383  -->  00:00:57,236
The way we do this, is by writing media queries
20

20

00:00:57,236  -->  00:01:00,000
that test for max-width.
21

21

00:01:00,000  -->  00:01:02,672
And, if that's confusing to you, no problem.
22

22

00:01:02,672  -->  00:01:05,581
I'm gonna explain that in the next slide.
23

23

00:01:05,581  -->  00:01:07,830
But, for now, let's see how the mobile-first
24

24

00:01:07,830  -->  00:01:09,663
strategy is different.
25

25

00:01:11,043  -->  00:01:14,229
In mobile-first, we start writing CSS code
26

26

00:01:14,229  -->  00:01:17,714
for smaller screens, in order to optimize for mobile.
27

27

00:01:17,714  -->  00:01:20,721
And then, move up to larger screens from there
28

28

00:01:20,721  -->  00:01:22,387
using media queries.
29

29

00:01:22,387  -->  00:01:25,077
And, in this case, we do this by writing media queries
30

30

00:01:25,077  -->  00:01:27,102
that test for min-width.
31

31

00:01:27,102  -->  00:01:30,230
So, it's basically just the opposite work flow.
32

32

00:01:30,230  -->  00:01:34,131
Now, even bigger than the technical aspects of mobile-first,
33

33

00:01:34,131  -->  00:01:37,309
is the philosophy that's behind the strategy.
34

34

00:01:37,309  -->  00:01:40,502
Which, is that we, the designers really have to think
35

35

00:01:40,502  -->  00:01:43,363
about the mobile experience, by reducing our websites
36

36

00:01:43,363  -->  00:01:46,070
or apps to the absolute essentials.
37

37

00:01:46,070  -->  00:01:48,840
Stripping away everything that's not really necessary,
38

38

00:01:48,840  -->  00:01:53,320
in order to end up with a smaller and faster final product.
39

39

00:01:53,320  -->  00:01:55,838
We're gonna discuss this a bit more in a second,
40

40

00:01:55,838  -->  00:01:59,009
but for now, let's move on to the more technical
41

41

00:01:59,009  -->  00:02:03,046
and more exciting aspects of responsive design.
42

42

00:02:03,046  -->  00:02:06,046
So, since we were talking about desktop
43

43

00:02:06,046  -->  00:02:09,053
and mobile-first strategies, this is an excellent time
44

44

00:02:09,053  -->  00:02:11,141
to talk about the difference between the type
45

45

00:02:11,141  -->  00:02:14,482
of media queries that we have to write for each approach:
46

46

00:02:14,482  -->  00:02:19,470
max-width for desktop-first and min-width for mobile-first.
47

47

00:02:19,470  -->  00:02:22,988
Maybe you've always been using max-width media queries,
48

48

00:02:22,988  -->  00:02:25,672
but without really understanding how they work.
49

49

00:02:25,672  -->  00:02:28,282
And, so that's what I want to clear up right now.
50

50

00:02:28,282  -->  00:02:31,505
So, as an example, we have here a pixel spectrum
51

51

00:02:31,505  -->  00:02:33,840
going from zero to infinity, with a couple
52

52

00:02:33,840  -->  00:02:37,923
of breakpoints in them: 600, 900 and 1200 pixels.
53

53

00:02:39,212  -->  00:02:41,357
Let's start with desktop-first.
54

54

00:02:41,357  -->  00:02:44,023
And, remember that we start by writing CSS
55

55

00:02:44,023  -->  00:02:46,712
for larger screens, and so, our initial code
56

56

00:02:46,712  -->  00:02:50,866
is on the right side of this spectrum. Right?
57

57

00:02:50,866  -->  00:02:53,736
Now, in order to adapt our design to smaller screens,
58

58

00:02:53,736  -->  00:02:57,603
we write max-width media queries, like this one.
59

59

00:02:57,603  -->  00:02:59,686
So, max-width 600 pixels.
60

60

00:03:00,854  -->  00:03:03,927
So, what this media query does, is that it basically checks
61

61

00:03:03,927  -->  00:03:06,468
if the current viewport width is smaller
62

62

00:03:06,468  -->  00:03:08,956
or equal to 600 pixels.
63

63

00:03:08,956  -->  00:03:11,680
And, if it is, than all the CSS code
64

64

00:03:11,680  -->  00:03:14,613
that is in this media query will apply.
65

65

00:03:14,613  -->  00:03:18,935
And, if not, that specific code will just not apply.
66

66

00:03:18,935  -->  00:03:22,397
So, what this means, is that the max-width is 600
67

67

00:03:22,397  -->  00:03:25,805
because that is the maximum width at which
68

68

00:03:25,805  -->  00:03:28,860
the media query still works; it still applies.
69

69

00:03:28,860  -->  00:03:31,429
And, after that, it stops working.
70

70

00:03:31,429  -->  00:03:33,525
Now, in these media queries, what we do
71

71

00:03:33,525  -->  00:03:38,050
is just override some specific parts of the global CSS code.
72

72

00:03:38,050  -->  00:03:40,359
Only the parts that we want to change,
73

73

00:03:40,359  -->  00:03:42,602
because all the rest of the global code
74

74

00:03:42,602  -->  00:03:44,708
will, of course, still apply.
75

75

00:03:44,708  -->  00:03:46,761
So, think of media queries as tools,
76

76

00:03:46,761  -->  00:03:49,861
to overriding specific parts of our CSS
77

77

00:03:49,861  -->  00:03:52,907
for specific viewport width.
78

78

00:03:52,907  -->  00:03:55,140
All right, and so the same, of course, works
79

79

00:03:55,140  -->  00:03:58,034
for the next breakpoint and the next media query,
80

80

00:03:58,034  -->  00:04:01,878
which is max-width 900 pixels in this case.
81

81

00:04:01,878  -->  00:04:05,113
So, all of the code that is in this query will work,
82

82

00:04:05,113  -->  00:04:08,729
as long as the width is less or equal to 900.
83

83

00:04:08,729  -->  00:04:12,896
In other words, as long as the maximum width is 900 pixels.
84

84

00:04:13,956  -->  00:04:16,579
But, maybe now you're wondering, what if a phone
85

85

00:04:16,579  -->  00:04:19,498
has a width of 500 pixels?
86

86

00:04:19,498  -->  00:04:22,308
Which media query will apply now?
87

87

00:04:22,308  -->  00:04:24,089
That's an excellent question,
88

88

00:04:24,089  -->  00:04:26,731
and the answer is pretty simple, actually.
89

89

00:04:26,731  -->  00:04:29,014
Both queries will apply,
90

90

00:04:29,014  -->  00:04:31,590
because both conditions are true. Right?
91

91

00:04:31,590  -->  00:04:36,361
500 is less than 600, but also less than 900 pixels.
92

92

00:04:36,361  -->  00:04:40,433
And, so the code in both media queries will be applied.
93

93

00:04:40,433  -->  00:04:44,367
Now, if you have conflicting CSS rules in these queries,
94

94

00:04:44,367  -->  00:04:47,186
which is usually the case, like defining
95

95

00:04:47,186  -->  00:04:49,721
the global font size in both media queries,
96

96

00:04:49,721  -->  00:04:52,158
than the one which appears less in the code
97

97

00:04:52,158  -->  00:04:54,663
is the one that takes precedence.
98

98

00:04:54,663  -->  00:04:57,614
Just like you learned in the lecture about the cascade.
99

99

00:04:57,614  -->  00:04:59,409
Remember that one?
100

100

00:04:59,409  -->  00:05:02,522
That's because media queries don't add any importance
101

101

00:05:02,522  -->  00:05:05,024
or specificity to our selectors.
102

102

00:05:05,024  -->  00:05:07,951
And so, the order of the code matters a lot.
103

103

00:05:07,951  -->  00:05:11,434
And, that's why we keep our media queries always at the end.
104

104

00:05:11,434  -->  00:05:14,251
But don't worry, if this sounds overwhelming right now,
105

105

00:05:14,251  -->  00:05:15,785
because we're gonna apply all of this
106

106

00:05:15,785  -->  00:05:18,783
over the next couple of lectures.
107

107

00:05:18,783  -->  00:05:21,962
And, just to complete the example with the last breakpoint,
108

108

00:05:21,962  -->  00:05:24,082
here is how the media query looks like
109

109

00:05:24,082  -->  00:05:25,582
for a 1200 pixels.
110

110

00:05:26,452  -->  00:05:29,566
So, at 1200 pixels is the width at which
111

111

00:05:29,566  -->  00:05:32,622
we start doing some changes in our media queries.
112

112

00:05:32,622  -->  00:05:35,310
Above 1200 pixels, we have the desktop version
113

113

00:05:35,310  -->  00:05:39,124
of our project, outside of any media queries.
114

114

00:05:39,124  -->  00:05:41,861
Okay, and with this we have the full picture
115

115

00:05:41,861  -->  00:05:45,558
of this example project, with the desktop-first approach.
116

116

00:05:45,558  -->  00:05:48,496
So, let's now look at the mobile-first approach,
117

117

00:05:48,496  -->  00:05:52,278
where our initial CSS code is obviously on the left-side
118

118

00:05:52,278  -->  00:05:56,493
of the pixel spectrum, where the mobile phone screens are.
119

119

00:05:56,493  -->  00:05:59,353
So, where before we had max-width media queries,
120

120

00:05:59,353  -->  00:06:01,810
we now have min-width queries.
121

121

00:06:01,810  -->  00:06:04,433
Like this min-width 600 pixels,
122

122

00:06:04,433  -->  00:06:06,783
which basically asks the question,
123

123

00:06:06,783  -->  00:06:09,033
is the current viewport width larger
124

124

00:06:09,033  -->  00:06:11,293
or equal to 600 pixels?
125

125

00:06:11,293  -->  00:06:14,023
If so, than the code applies.
126

126

00:06:14,023  -->  00:06:18,047
So, it's called min-width query, because 600 pixels
127

127

00:06:18,047  -->  00:06:20,880
is the minimum width at which the media query
128

128

00:06:20,880  -->  00:06:22,213
starts to apply.
129

129

00:06:23,321  -->  00:06:26,848
Now, visually speaking, this translates to a pixel range
130

130

00:06:26,848  -->  00:06:30,254
starting from 600 pixels covering all the way
131

131

00:06:30,254  -->  00:06:32,666
until infinity, basically.
132

132

00:06:32,666  -->  00:06:36,233
So, all screens with the width larger than 600 pixels
133

133

00:06:36,233  -->  00:06:39,777
will have the code in this media query applied to the page.
134

134

00:06:39,777  -->  00:06:41,046
Make sense?
135

135

00:06:41,046  -->  00:06:43,557
Now, we have to use this type of media query
136

136

00:06:43,557  -->  00:06:46,419
in the mobile-first approach, because basically
137

137

00:06:46,419  -->  00:06:48,660
we want the queries to stay away
138

138

00:06:48,660  -->  00:06:51,026
from our smallest screen styles.
139

139

00:06:51,026  -->  00:06:53,903
So, we want them to work for bigger screens,
140

140

00:06:53,903  -->  00:06:57,692
and so the max-width approach we had before wouldn't work.
141

141

00:06:57,692  -->  00:07:01,186
You can see that very nicely, with the arrows in the diagram
142

142

00:07:01,186  -->  00:07:05,582
and the pixel range that each query covers. Okay?
143

143

00:07:05,582  -->  00:07:08,947
So, again, in mobile-first with our media queries
144

144

00:07:08,947  -->  00:07:12,418
we want to stay away from the small screen sizes.
145

145

00:07:12,418  -->  00:07:14,147
And so, that's why we have to use
146

146

00:07:14,147  -->  00:07:17,268
min-width media query types.
147

147

00:07:17,268  -->  00:07:19,471
And so now, for the remaining two breakpoints
148

148

00:07:19,471  -->  00:07:21,510
the logic is pretty much the same
149

149

00:07:21,510  -->  00:07:23,842
as for the desktop-first strategy.
150

150

00:07:23,842  -->  00:07:25,971
So, for the 900 pixel breakpoint,
151

151

00:07:25,971  -->  00:07:28,857
we have a min-width 900 pixel media query
152

152

00:07:28,857  -->  00:07:31,132
which is activated if the viewport width
153

153

00:07:31,132  -->  00:07:34,236
is larger or equal to 900 pixels, of course.
154

154

00:07:34,236  -->  00:07:36,757
And, the same for 1200 pixels.
155

155

00:07:36,757  -->  00:07:39,121
So, it's just the same logic as before.
156

156

00:07:39,121  -->  00:07:41,698
All right? Did you get that?
157

157

00:07:41,698  -->  00:07:43,924
Now that we know everything about mobile-first
158

158

00:07:43,924  -->  00:07:46,825
and desktop-first, let's try to decide
159

159

00:07:46,825  -->  00:07:48,532
what's actually best for you,
160

160

00:07:48,532  -->  00:07:51,418
depending on your unique situation and project
161

161

00:07:51,418  -->  00:07:56,034
by looking at the pros and cons of mobile-first design.
162

162

00:07:56,034  -->  00:07:58,667
So, we already saw that the whole strategy
163

163

00:07:58,667  -->  00:08:02,395
behind mobile-first, is to narrow down our interfaces,
164

164

00:08:02,395  -->  00:08:05,915
being it websites or apps, to the bare minimum.
165

165

00:08:05,915  -->  00:08:09,135
In order to create a small, fast and efficient product
166

166

00:08:09,135  -->  00:08:12,214
completely optimized for mobile users.
167

167

00:08:12,214  -->  00:08:13,839
And, this actually makes a ton of sense
168

168

00:08:13,839  -->  00:08:16,401
in a world that's becoming more and more mobile
169

169

00:08:16,401  -->  00:08:18,390
with a huge part of the internet traffic
170

170

00:08:18,390  -->  00:08:21,324
already coming from mobile.
171

171

00:08:21,324  -->  00:08:23,884
Another big advantage of mobile-first,
172

172

00:08:23,884  -->  00:08:26,234
is that having all these design constraints
173

173

00:08:26,234  -->  00:08:30,353
on smaller screens, we automatically prioritize content
174

174

00:08:30,353  -->  00:08:32,987
over purely aesthetic design.
175

175

00:08:32,987  -->  00:08:35,262
Which also makes sense, because I'm sure that you've heard
176

176

00:08:35,262  -->  00:08:38,480
the sentence "content is king." Right?
177

177

00:08:38,480  -->  00:08:41,162
However, the problem with this strategy
178

178

00:08:41,162  -->  00:08:43,698
is that we end up with a opposite problem.
179

179

00:08:43,698  -->  00:08:45,356
Where the large desktop version
180

180

00:08:45,356  -->  00:08:48,590
might feel overly empty and simplistic.
181

181

00:08:48,590  -->  00:08:51,256
I mean, why having an advanced system
182

182

00:08:51,256  -->  00:08:54,386
like a huge desktop computer, if websites don't even use
183

183

00:08:54,386  -->  00:08:58,424
the device's resources and capabilities? Right?
184

184

00:08:58,424  -->  00:09:01,635
Also, if you're like me and more used to see a whole lot
185

185

00:09:01,635  -->  00:09:04,626
of desktop websites, than it may seem a bit weird,
186

186

00:09:04,626  -->  00:09:07,738
even counter-intuitive and also difficult
187

187

00:09:07,738  -->  00:09:10,087
to develop mobile-first.
188

188

00:09:10,087  -->  00:09:12,542
That's simply because a larger canvas,
189

189

00:09:12,542  -->  00:09:15,467
where we can start designing without so many restrictions,
190

190

00:09:15,467  -->  00:09:17,929
will give you much more creative freedom.
191

191

00:09:17,929  -->  00:09:20,009
Which is great, to set your websites apart
192

192

00:09:20,009  -->  00:09:21,839
from the competition.
193

193

00:09:21,839  -->  00:09:24,570
Plus, if you're developing websites for clients,
194

194

00:09:24,570  -->  00:09:27,235
they usually like to see a desktop version
195

195

00:09:27,235  -->  00:09:29,387
of the site as a prototype,
196

196

00:09:29,387  -->  00:09:32,437
and not just a super stripped-down mobile version.
197

197

00:09:32,437  -->  00:09:35,466
So, that's also something you have to consider.
198

198

00:09:35,466  -->  00:09:38,499
And, finally, users of a particular website
199

199

00:09:38,499  -->  00:09:41,058
in a certain business niche, might not even use
200

200

00:09:41,058  -->  00:09:43,301
the mobile internet that much
201

201

00:09:43,301  -->  00:09:47,033
and prefer to use a normal computer to check out websites.
202

202

00:09:47,033  -->  00:09:50,560
We always need to consider the purposes of a website
203

203

00:09:50,560  -->  00:09:53,140
and align it with their users' needs.
204

204

00:09:53,140  -->  00:09:55,949
So, this is another question you have to ask yourself,
205

205

00:09:55,949  -->  00:09:59,427
when deciding which strategy to choose.
206

206

00:09:59,427  -->  00:10:01,654
All right, so this might look
207

207

00:10:01,654  -->  00:10:05,334
like there are more cons than pros to mobile-first.
208

208

00:10:05,334  -->  00:10:07,496
But, it's not that simple, of course.
209

209

00:10:07,496  -->  00:10:09,861
I've seen a lot of designers online saying
210

210

00:10:09,861  -->  00:10:12,664
that they actually don't build mobile-first at all.
211

211

00:10:12,664  -->  00:10:15,598
But, of course, there are also people building like this.
212

212

00:10:15,598  -->  00:10:19,289
Each project is a project, and in each case in the end
213

213

00:10:19,289  -->  00:10:22,257
it's you who has to decide what's best.
214

214

00:10:22,257  -->  00:10:24,245
There's just one important piece of advise
215

215

00:10:24,245  -->  00:10:27,059
that I have to give you, and that I follow myself.
216

216

00:10:27,059  -->  00:10:29,325
Which, is that no matter what you decide,
217

217

00:10:29,325  -->  00:10:33,372
always keep both the desktop and mobile versions in mind
218

218

00:10:33,372  -->  00:10:36,184
and understand that they are both important.
219

219

00:10:36,184  -->  00:10:39,403
You should never design only for one of the solutions
220

220

00:10:39,403  -->  00:10:42,126
and just leave the other one as an afterthought.
221

221

00:10:42,126  -->  00:10:45,001
All right? Does that make sense?
222

222

00:10:45,001  -->  00:10:48,538
Now, about the Nader's Project that we've been working on.
223

223

00:10:48,538  -->  00:10:50,594
You have probably already noticed that we're using
224

224

00:10:50,594  -->  00:10:52,973
a desktop-first approach, simply because
225

225

00:10:52,973  -->  00:10:55,926
I would find it extremely difficult to teach you
226

226

00:10:55,926  -->  00:10:58,380
all the concepts that I've taught you so far
227

227

00:10:58,380  -->  00:11:01,322
on a small screen, with all the restrictions
228

228

00:11:01,322  -->  00:11:03,321
that we've been talking about.
229

229

00:11:03,321  -->  00:11:05,476
It just wouldn't be practical, at all.
230

230

00:11:05,476  -->  00:11:08,586
And so, the media queries we're gonna write next
231

231

00:11:08,586  -->  00:11:11,334
are all of the type max-width.
232

232

00:11:11,334  -->  00:11:14,416
But, that's not a problem at all, because in the last slide,
233

233

00:11:14,416  -->  00:11:16,267
and in this lecture in particular,
234

234

00:11:16,267  -->  00:11:18,430
I've given you everything you need to know
235

235

00:11:18,430  -->  00:11:21,226
to start building mobile-first websites for yourself,
236

236

00:11:21,226  -->  00:11:24,558
if you think that that's the best strategy for you.
237

237

00:11:24,558  -->  00:11:26,841
It's really not such a big difference
238

238

00:11:26,841  -->  00:11:30,735
and I do highly encourage you to try it out for yourself.
239

239

00:11:30,735  -->  00:11:32,766
Again, I did it this way in this course
240

240

00:11:32,766  -->  00:11:34,675
because it's just easier to teach,
241

241

00:11:34,675  -->  00:11:36,983
and also to learn, in my opinion.
242

242

00:11:36,983  -->  00:11:38,802
But, on your next, real-life project
243

243

00:11:38,802  -->  00:11:42,769
you should totally try it out, if it makes sense for you.
244

244

00:11:42,769  -->  00:11:45,029
All right, moving on.
245

245

00:11:45,029  -->  00:11:47,899
We need to also talk about breakpoints.
246

246

00:11:47,899  -->  00:11:50,311
Remember that breakpoints are the viewport width
247

247

00:11:50,311  -->  00:11:52,677
at which we want our design to change.
248

248

00:11:52,677  -->  00:11:56,188
Or, in other words, where we want to put our media queries.
249

249

00:11:56,188  -->  00:11:58,513
No matter what we decide, about going mobile-first
250

250

00:11:58,513  -->  00:12:01,931
or desktop first, one thing that is for sure
251

251

00:12:01,931  -->  00:12:04,794
is that we have to select breakpoints for our design.
252

252

00:12:04,794  -->  00:12:07,810
And, for me, there are three major ways of doing so:
253

253

00:12:07,810  -->  00:12:10,977
the bad, the good and the perfect way.
254

254

00:12:12,459  -->  00:12:15,944
Unfortunately, the bad way is also the most used way
255

255

00:12:15,944  -->  00:12:17,790
of choosing breakpoints.
256

256

00:12:17,790  -->  00:12:20,527
And, it consists of simply using the width
257

257

00:12:20,527  -->  00:12:23,754
of popular devices as the breakpoints.
258

258

00:12:23,754  -->  00:12:26,135
And, designers really like to use Apple products,
259

259

00:12:26,135  -->  00:12:29,890
like the iPhone and the iPad, to set breakpoints
260

260

00:12:29,890  -->  00:12:32,077
for their screen width.
261

261

00:12:32,077  -->  00:12:33,707
And while this is the easiest way,
262

262

00:12:33,707  -->  00:12:35,690
it has a couple of problems.
263

263

00:12:35,690  -->  00:12:39,440
First, you're optimizing for one very specific device,
264

264

00:12:39,440  -->  00:12:42,171
ignoring all the users of other devices,
265

265

00:12:42,171  -->  00:12:45,422
which may be even more used than the Apple products.
266

266

00:12:45,422  -->  00:12:48,103
And, second and even more important I think,
267

267

00:12:48,103  -->  00:12:51,432
is that this strategy is not future proof at all.
268

268

00:12:51,432  -->  00:12:55,087
If tomorrow Apple decides to completely change resolutions
269

269

00:12:55,087  -->  00:12:57,764
on all their devices, do you want to go ahead
270

270

00:12:57,764  -->  00:12:59,525
and change all your media queries
271

271

00:12:59,525  -->  00:13:02,429
on all the projects that you've ever built?
272

272

00:13:02,429  -->  00:13:04,688
I don't think so, right?
273

273

00:13:04,688  -->  00:13:05,647
We've been talking a lot about
274

274

00:13:05,647  -->  00:13:08,303
reusable and maintainable code.
275

275

00:13:08,303  -->  00:13:10,675
In using specific devices as breakpoints,
276

276

00:13:10,675  -->  00:13:13,351
is completely against all that logic.
277

277

00:13:13,351  -->  00:13:16,170
Now, of course it's okay to use the strategy
278

278

00:13:16,170  -->  00:13:18,975
if you're just starting out with responsive design
279

279

00:13:18,975  -->  00:13:20,786
and just want to learn how it works.
280

280

00:13:20,786  -->  00:13:23,680
But, if you want to get more serious, it's time to move on
281

281

00:13:23,680  -->  00:13:27,379
to a better way, which I like to call the good way.
282

282

00:13:27,379  -->  00:13:31,059
In the good way, we look at all the most-used device width
283

283

00:13:31,059  -->  00:13:33,885
on the entire internet, try to group them together
284

284

00:13:33,885  -->  00:13:37,720
in a logical way and then pick our breakpoints from that.
285

285

00:13:37,720  -->  00:13:40,694
And while it's still not ideal, to use real devices
286

286

00:13:40,694  -->  00:13:43,508
to figure out breakpoint, it's already a lot better
287

287

00:13:43,508  -->  00:13:45,126
than the first way.
288

288

00:13:45,126  -->  00:13:47,896
Because we're using a lot of devices, and we're also using
289

289

00:13:47,896  -->  00:13:50,155
the most popular device width.
290

290

00:13:50,155  -->  00:13:53,416
Plus, we're not setting breakpoints at one specific point
291

291

00:13:53,416  -->  00:13:56,166
but between similar device width.
292

292

00:13:57,008  -->  00:13:59,485
All right, and now the perfect way to do this
293

293

00:13:59,485  -->  00:14:01,819
is to ignore devices all together
294

294

00:14:01,819  -->  00:14:05,597
and only look at your content and your design.
295

295

00:14:05,597  -->  00:14:07,912
So, ideally, it works like this.
296

296

00:14:07,912  -->  00:14:11,432
You begin at one size, either mobile or desktop
297

297

00:14:11,432  -->  00:14:13,617
and then start increasing your screen width
298

298

00:14:13,617  -->  00:14:15,983
or decreasing for desktop first.
299

299

00:14:15,983  -->  00:14:18,266
Then, as soon as the design breaks,
300

300

00:14:18,266  -->  00:14:20,816
which means that the design no longer works,
301

301

00:14:20,816  -->  00:14:24,765
it no longer looks okay, then you insert a new breakpoint.
302

302

00:14:24,765  -->  00:14:26,174
And, that's it.
303

303

00:14:26,174  -->  00:14:28,580
So, again, you just put the breakpoints
304

304

00:14:28,580  -->  00:14:32,075
wherever your design starts to look weird and out of place,
305

305

00:14:32,075  -->  00:14:35,120
and don't think about devices, at all.
306

306

00:14:35,120  -->  00:14:37,048
Now, the thing, is that this approach
307

307

00:14:37,048  -->  00:14:38,964
can be extremely difficult.
308

308

00:14:38,964  -->  00:14:42,468
And, that's why not many people are doing it.
309

309

00:14:42,468  -->  00:14:44,525
Without the constraints of at least a couple
310

310

00:14:44,525  -->  00:14:48,791
of pre-defined breakpoints, it's hard to find the best ones
311

311

00:14:48,791  -->  00:14:52,367
and not to end up with really a bunch of them.
312

312

00:14:52,367  -->  00:14:54,723
And, that's why we're gonna use the second method
313

313

00:14:54,723  -->  00:14:57,561
I showed you, which I called the good way.
314

314

00:14:57,561  -->  00:15:00,778
But, you should totally try this perfect way in the future.
315

315

00:15:00,778  -->  00:15:02,818
Okay? You really should.
316

316

00:15:02,818  -->  00:15:05,855
It's a great exercise, to design without the constraints
317

317

00:15:05,855  -->  00:15:09,287
of having pre-defined breakpoints.
318

318

00:15:09,287  -->  00:15:11,653
Now, with the second approach that I showed you,
319

319

00:15:11,653  -->  00:15:14,384
we start with the most-used screen size
320

320

00:15:14,384  -->  00:15:17,869
that we can get from an app called StatCounter.
321

321

00:15:17,869  -->  00:15:20,723
So, this data is freely available on the internet.
322

322

00:15:20,723  -->  00:15:24,022
This one is for the range between August 2016
323

323

00:15:24,022  -->  00:15:25,768
and August 2017.
324

324

00:15:25,768  -->  00:15:28,719
But, if you're watching this video in 2018, 2019
325

325

00:15:28,719  -->  00:15:31,954
or even 2020, these stats will probably not
326

326

00:15:31,954  -->  00:15:33,807
have changed that much.
327

327

00:15:33,807  -->  00:15:36,350
And, even if they did, you can just use the strategy
328

328

00:15:36,350  -->  00:15:37,951
with the new screen sizes
329

329

00:15:37,951  -->  00:15:40,406
and select your breakpoints from there.
330

330

00:15:40,406  -->  00:15:43,039
Anyway, in this diagram, I just plotted
331

331

00:15:43,039  -->  00:15:46,182
these most-used screen sizes, that you can see
332

332

00:15:46,182  -->  00:15:47,997
in the chart down there.
333

333

00:15:47,997  -->  00:15:50,848
So, from this, you can already see pretty good
334

334

00:15:50,848  -->  00:15:54,294
how we could group these screen sizes. Right?
335

335

00:15:54,294  -->  00:15:57,065
So, usually, we'll need one breakpoint for phones,
336

336

00:15:57,065  -->  00:16:00,707
one for portrait tablets, one for landscape tablets
337

337

00:16:00,707  -->  00:16:02,746
and one for the desktop.
338

338

00:16:02,746  -->  00:16:06,574
There can be more, or course, but these are the basics.
339

339

00:16:06,574  -->  00:16:09,362
So, where do you think these breakpoints should be,
340

340

00:16:09,362  -->  00:16:11,195
based on this diagram?
341

341

00:16:12,898  -->  00:16:15,099
And, here is how I would position them.
342

342

00:16:15,099  -->  00:16:18,229
So, the phone ranging from 0-600 pixels,
343

343

00:16:18,229  -->  00:16:22,845
from 600-900 the portrait tablets, from 900-1200
344

344

00:16:22,845  -->  00:16:27,012
the landscape tablet, and from there it's the desktop.
345

345

00:16:27,891  -->  00:16:31,207
I actually even included a breakpoint for big desktops
346

346

00:16:31,207  -->  00:16:33,791
starting at 1800 pixels.
347

347

00:16:33,791  -->  00:16:35,969
But, that one is not really mandatory,
348

348

00:16:35,969  -->  00:16:38,400
it's just if we want to give users
349

349

00:16:38,400  -->  00:16:41,903
with these huge screens something special.
350

350

00:16:41,903  -->  00:16:43,631
Now, this could be different, of course,
351

351

00:16:43,631  -->  00:16:45,735
it's actually a bit subjective.
352

352

00:16:45,735  -->  00:16:48,791
But, as long as it makes sense, and it does I think,
353

353

00:16:48,791  -->  00:16:50,913
than it's great.
354

354

00:16:50,913  -->  00:16:52,789
Now, just to give you some perspective,
355

355

00:16:52,789  -->  00:16:56,259
these are the iPhone 8, iPad portrait and landscape
356

356

00:16:56,259  -->  00:16:58,737
and MacBook Pro 15 inch.
357

357

00:16:58,737  -->  00:17:01,907
And, yeah, it is totally okay, to call this iPhone,
358

358

00:17:01,907  -->  00:17:03,834
or iPad or MacBook.
359

359

00:17:03,834  -->  00:17:06,582
And, in fact, we can and should use these devices
360

360

00:17:06,582  -->  00:17:09,116
to test our responsive designs.
361

361

00:17:09,116  -->  00:17:11,066
What we should not do though,
362

362

00:17:11,066  -->  00:17:13,912
is to just use their width as breakpoints.
363

363

00:17:13,912  -->  00:17:15,967
But, we already talked about that.
364

364

00:17:15,967  -->  00:17:18,633
Alright. And that's it for this lecture.
365

365

00:17:18,633  -->  00:17:20,683
I hope it made a lot of things clearer to you.
366

366

00:17:20,683  -->  00:17:23,470
And now, all we have to do is to actually implement
367

367

00:17:23,470  -->  00:17:24,656
these media queries.
368

368

00:17:24,656  -->  00:17:26,272
So, don't wait and come with me,
369

369

00:17:26,272  -->  00:17:28,297
straight to the next lecture.
370

370

00:17:28,297  -->  00:17:29,464
See you there.
