1
00:00:00,480 --> 00:00:04,019
In this lecture, we are going to add settings to a site.

2
00:00:04,019 --> 00:00:09,990
We can create a page for modifying a plug in settings without storing the settings values.

3
00:00:09,990 --> 00:00:15,870
For this step, we are going to create our plug in settings during plug in activation.

4
00:00:15,870 --> 00:00:19,410
It's the best possible place to create new settings.

5
00:00:19,410 --> 00:00:22,680
In your editor, open the activation file.

6
00:00:24,880 --> 00:00:29,560
At the bottom of the file, let's create a variable called options.

7
00:00:29,560 --> 00:00:33,910
The value for this variable will be the get option function.

8
00:00:36,070 --> 00:00:40,880
Before inserting data into the database, we should check for existing data.

9
00:00:40,900 --> 00:00:44,630
It's possible that users may be reactivating our plugin.

10
00:00:44,650 --> 00:00:49,400
If that's the case, we do not want to override the existing values.

11
00:00:49,420 --> 00:00:55,120
The get option function accepts the options name to retrieve from the database.

12
00:00:55,120 --> 00:00:58,960
The name of our option will be called up options.

13
00:01:01,130 --> 00:01:04,550
The name of our option has been prefixed with up.

14
00:01:04,580 --> 00:01:10,050
It's common for plugins to add settings to the database to prevent naming conflicts.

15
00:01:10,070 --> 00:01:13,400
It's recommended to prefix your option names.

16
00:01:13,520 --> 00:01:19,490
If this plugin is activated for the first time, this option will not exist in the database.

17
00:01:19,520 --> 00:01:24,110
The against option function will return false for non existent records.

18
00:01:24,140 --> 00:01:27,980
After the variable, let's create a conditional statement.

19
00:01:30,160 --> 00:01:34,240
The condition will check if the options variable is false.

20
00:01:36,320 --> 00:01:40,400
If it is, we can safely insert data into the database.

21
00:01:40,430 --> 00:01:47,450
It's the first time this function is being activated on a site inside the block of code run a function

22
00:01:47,450 --> 00:01:49,220
called ad option.

23
00:01:51,460 --> 00:01:56,950
The ad option function will add a new record to the WP options table.

24
00:01:56,980 --> 00:01:59,590
There are two required arguments.

25
00:01:59,620 --> 00:02:02,350
The first argument is the name of the option.

26
00:02:02,350 --> 00:02:05,530
Let's call our option of options.

27
00:02:07,720 --> 00:02:10,780
The second argument is the value to insert.

28
00:02:10,810 --> 00:02:14,170
You may be wondering what type of settings are we creating?

29
00:02:14,200 --> 00:02:17,690
Almost every business has a social media presence.

30
00:02:17,710 --> 00:02:21,260
It's not uncommon for visitors to share links with others.

31
00:02:21,280 --> 00:02:23,950
There's a protocol called Open Graph.

32
00:02:23,950 --> 00:02:26,380
In the resource section of this lecture.

33
00:02:26,380 --> 00:02:28,630
I provide a link to this protocol.

34
00:02:30,960 --> 00:02:37,760
Open graph is a standardized solution for exposing the information on a page to a social media platform

35
00:02:37,770 --> 00:02:41,140
whenever you paste a link into a social media post.

36
00:02:41,160 --> 00:02:45,330
Platforms will send a request to the page for information.

37
00:02:45,360 --> 00:02:48,540
This information is displayed along with your posts.

38
00:02:48,570 --> 00:02:50,340
Let's look at an example.

39
00:02:50,340 --> 00:02:56,900
In the resource section of this lecture, I provide a link to a tool for viewing a site's open graph.

40
00:02:56,910 --> 00:03:00,300
I'm going to paste in a link to a random site.

41
00:03:02,590 --> 00:03:08,060
On the right side of the page, we're given a preview of the content retrieved by the site.

42
00:03:08,080 --> 00:03:13,990
For example, Facebook will display an image URL, title and description.

43
00:03:14,110 --> 00:03:15,990
This information is not random.

44
00:03:16,000 --> 00:03:21,790
We can configure the data that will appear in the preview by using the open graph protocol.

45
00:03:21,910 --> 00:03:25,810
Open graph is very simple to use for our plugin.

46
00:03:25,810 --> 00:03:30,460
We are going to add settings for modifying a site's open graph settings.

47
00:03:30,460 --> 00:03:32,650
There are dozens of options available.

48
00:03:32,650 --> 00:03:33,940
Let's keep it simple.

49
00:03:33,940 --> 00:03:40,780
By allowing users to modify the title image and description, you can check out the documentation for

50
00:03:40,780 --> 00:03:43,750
a complete list of configurable options.

51
00:03:43,750 --> 00:03:45,370
Head back to the editor.

52
00:03:47,590 --> 00:03:54,820
The second value of the ADD option function can contain any data type we can add strings, numbers,

53
00:03:54,820 --> 00:03:58,910
etc. Our plugin is going to store an array of options.

54
00:03:58,930 --> 00:04:01,990
There isn't a point in creating multiple records.

55
00:04:01,990 --> 00:04:05,800
Everything can be stored in a single record in this array.

56
00:04:05,830 --> 00:04:08,350
Add an item called OG title.

57
00:04:10,630 --> 00:04:14,710
The value for this item will be gets blog info function.

58
00:04:16,800 --> 00:04:19,860
We were familiar with the get blog info function.

59
00:04:19,890 --> 00:04:25,360
This function will retrieve different pieces of information about the current site by defaults.

60
00:04:25,380 --> 00:04:29,490
We are going to set the title of the preview to the site title.

61
00:04:29,520 --> 00:04:33,360
The title can be retrieved by passing in a string called name.

62
00:04:35,620 --> 00:04:41,680
Next, let's add a key called OG image with an initial value of an empty string.

63
00:04:43,890 --> 00:04:47,640
Lastly, add a key called OG description.

64
00:04:49,860 --> 00:04:55,470
The value for this key will be the get blog info function with the description item.

65
00:04:57,710 --> 00:05:03,210
All sites have a description which can be retrieved with the get blog info function.

66
00:05:03,230 --> 00:05:07,220
We are going to add one more option called enable OG.

67
00:05:07,340 --> 00:05:10,040
The value for this option will be one.

68
00:05:12,140 --> 00:05:17,270
Site owners may prefer another plugin for adding open graph tags to a site.

69
00:05:17,300 --> 00:05:23,960
If they have another plugin for handling open graph tags, we can run into problems for this situation.

70
00:05:23,960 --> 00:05:28,760
We are going to give the user the option of disabling this feature from our plugin.

71
00:05:28,760 --> 00:05:31,670
By default, the option will be enabled.

72
00:05:31,820 --> 00:05:34,850
Let's try testing our work in the browser.

73
00:05:34,850 --> 00:05:37,070
Navigate to the plugins page.

74
00:05:39,350 --> 00:05:42,920
Deactivate and reactivate the Udemy plus plugin.

75
00:05:45,070 --> 00:05:46,390
Without a problem.

76
00:05:46,390 --> 00:05:48,390
The plugin has been deactivated.

77
00:05:48,400 --> 00:05:49,690
Just to make sure.

78
00:05:49,690 --> 00:05:52,990
Let's view the database from the database page.

79
00:05:52,990 --> 00:05:56,560
Inspect the data from the WP options table.

80
00:05:58,760 --> 00:06:02,030
New records are inserted at the end of the table.

81
00:06:02,060 --> 00:06:06,470
Try viewing the last page if we scroll to the bottom of the table.

82
00:06:06,500 --> 00:06:08,780
Our record appears in the last row.

83
00:06:08,810 --> 00:06:13,220
Strangely, the value is different from the value in our PHP file.

84
00:06:13,310 --> 00:06:19,610
Databases do not support PHP arrays before inserting our data into the database.

85
00:06:19,620 --> 00:06:24,230
WordPress will perform a process called serialization on our array.

86
00:06:24,260 --> 00:06:31,330
Serialization is the process of transforming the value to be compatible with another language or database.

87
00:06:31,340 --> 00:06:37,430
We never have to worry about manually serializing our data as long as we're using the functions supplied

88
00:06:37,430 --> 00:06:38,510
by WordPress.

89
00:06:38,510 --> 00:06:41,460
Serialization is handled by WordPress.

90
00:06:41,480 --> 00:06:47,780
In the next lecture let's begin creating an admin page for modifying our new options.

