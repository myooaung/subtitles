WEBVTT
1
00:00:00.180 --> 00:00:03.840
In this lecture, we are going to begin handling the selection.

2
00:00:03.870 --> 00:00:09.020
Users can select an image, however, the image never gets displayed on the block.

3
00:00:09.030 --> 00:00:11.460
Let's change that in your editor.

4
00:00:11.490 --> 00:00:15.540
Open the index JS file for the team member block.

5
00:00:17.560 --> 00:00:20.570
Scroll to the media placeholder component.

6
00:00:20.590 --> 00:00:26.180
The function passed into the on select event is responsible for handling new uploads.

7
00:00:26.200 --> 00:00:29.800
We are given the image as an argument during this event.

8
00:00:29.800 --> 00:00:31.810
Let's update our attributes.

9
00:00:31.810 --> 00:00:35.920
I've already structured the set attributes function for you.

10
00:00:35.950 --> 00:00:39.070
We can immediately begin updating the attributes.

11
00:00:39.070 --> 00:00:41.500
Call the set attributes function.

12
00:00:43.490 --> 00:00:46.360
We are going to modify three attributes.

13
00:00:46.370 --> 00:00:49.460
The first attribute is called Image ID.

14
00:00:51.670 --> 00:00:57.100
WordPress creates a database record for each media file uploaded to the server.

15
00:00:57.130 --> 00:01:01.450
Like most database records, an ID is assigned to the file.

16
00:01:01.480 --> 00:01:04.180
I highly recommend storing the ID.

17
00:01:04.209 --> 00:01:08.110
We are going to give the user the option of changing the image.

18
00:01:08.110 --> 00:01:14.470
If the media interface is opened again, the current image should be selected by default.

19
00:01:14.500 --> 00:01:16.510
None of the images are selected.

20
00:01:16.510 --> 00:01:19.180
We can select an image by its ID.

21
00:01:19.210 --> 00:01:22.910
Storing this information is going to be helpful in the future.

22
00:01:22.930 --> 00:01:27.940
The ID of the image can be found in the image dot ID property.

23
00:01:30.150 --> 00:01:32.670
Next, let's modify the image.

24
00:01:32.670 --> 00:01:39.300
Alt attributes for accessibility and alt attributes should be applied to our images.

25
00:01:39.300 --> 00:01:45.540
We can grab the description of a media file by accessing the image alt property.

26
00:01:47.740 --> 00:01:56.860
Lastly, let's update the image URL property to the images sciences team member URL property.

27
00:01:59.120 --> 00:02:05.700
The URL for a specific size can be found from the respective object in these sizes property.

28
00:02:05.720 --> 00:02:11.960
Now that we have this information in our attributes, we can start displaying this information above

29
00:02:11.960 --> 00:02:14.390
the media placeholder component.

30
00:02:14.390 --> 00:02:16.190
We have an image tag.

31
00:02:16.190 --> 00:02:21.140
Let's bind the source attribute to the image URL attribute.

32
00:02:23.340 --> 00:02:29.430
Once again, I've taken the time to structure the attributes for you with the starter code.

33
00:02:29.460 --> 00:02:31.810
You do not need to structure them.

34
00:02:31.830 --> 00:02:37.200
Next, let's bind the alt attribute to the image alt attributes.

35
00:02:39.500 --> 00:02:40.800
We're almost finished.

36
00:02:40.820 --> 00:02:43.970
I don't want to initially render the image tag.

37
00:02:44.000 --> 00:02:47.090
This is because we do not have an image to render.

38
00:02:47.090 --> 00:02:50.300
The image element will be empty white space.

39
00:02:50.330 --> 00:02:56.020
I think it would be a good idea to conditionally render this element above the image tag.

40
00:02:56.030 --> 00:02:57.290
Add an expression.

41
00:02:59.380 --> 00:03:00.610
For the condition.

42
00:03:00.610 --> 00:03:03.700
Let's check the image URL attributes.

43
00:03:05.760 --> 00:03:13.440
Next, let's add the and operator after this operator move the image element into the expression.

44
00:03:15.650 --> 00:03:21.420
The media placeholder component should disappear after an image has been selected.

45
00:03:21.440 --> 00:03:24.380
We can use the same situation as before.

46
00:03:24.410 --> 00:03:31.020
However, the media placeholder component has a property for toggling the components appearance.

47
00:03:31.040 --> 00:03:33.240
I think we should use this property.

48
00:03:33.260 --> 00:03:41.120
It'll be easier to read our code on the media placeholder component at a property called Disable Media

49
00:03:41.120 --> 00:03:41.900
Buttons.

50
00:03:44.580 --> 00:03:48.440
The value for this property should be a boolean value.

51
00:03:48.450 --> 00:03:52.160
If the boolean value is true, the component is hidden.

52
00:03:52.170 --> 00:03:56.070
Let's set this property to the image URL attributes.

53
00:03:58.360 --> 00:04:01.720
Technically this attribute is not a boolean value.

54
00:04:01.750 --> 00:04:06.950
However, JavaScript will convert it into a boolean value if a string is empty.

55
00:04:06.970 --> 00:04:09.690
The value is evaluated as false.

56
00:04:09.700 --> 00:04:14.770
If a string has one or more characters, the value is evaluated to true.

57
00:04:14.800 --> 00:04:17.980
Let's try testing our code in the browser.

58
00:04:18.010 --> 00:04:20.890
Let's edit the experimental page.

59
00:04:23.080 --> 00:04:26.770
Next, add the team members group component.

60
00:04:28.970 --> 00:04:31.680
By default, the image tag is hidden.

61
00:04:31.700 --> 00:04:34.040
Let's try uploading an image.

62
00:04:36.180 --> 00:04:41.850
After doing so, the image appears, but the media placeholder component is hidden.

63
00:04:41.970 --> 00:04:43.090
That's perfect.

64
00:04:43.110 --> 00:04:44.910
It's exactly what we wanted.

65
00:04:44.940 --> 00:04:49.890
We've successfully added an option for uploading an image for a team member.

66
00:04:49.890 --> 00:04:54.060
In the next set of lectures, we are going to refine our solution.

