WEBVTT
1
00:00:00.090 --> 00:00:05.070
In this lecture, I'm going to show you how to publish a plug in to the WordPress repository.

2
00:00:05.100 --> 00:00:06.890
It's a very simple process.

3
00:00:06.900 --> 00:00:09.200
However, I have to give you a warning.

4
00:00:09.210 --> 00:00:13.650
You may not be able to upload the in when you develop to the WordPress repository.

5
00:00:13.680 --> 00:00:16.560
WordPress does not allow for duplicate plugins.

6
00:00:16.560 --> 00:00:20.790
Once my plugin is approved, you will not be able to upload the same plugin.

7
00:00:20.820 --> 00:00:25.720
To avoid rejection, I recommend improving the plugin by adding your own features.

8
00:00:25.740 --> 00:00:30.270
For example, you can try adding support for a different icon set.

9
00:00:30.300 --> 00:00:33.270
You can try adding support for nested alerts.

10
00:00:33.300 --> 00:00:35.370
There are a lot of things you can do.

11
00:00:35.400 --> 00:00:41.500
I highly recommend making the plug in your own by adding custom features for educational purposes.

12
00:00:41.520 --> 00:00:44.580
I'm including this lecture to walk you through the process.

13
00:00:44.610 --> 00:00:46.860
You do not need to follow these steps.

14
00:00:46.860 --> 00:00:49.050
It's perfectly fine to just watch.

15
00:00:49.060 --> 00:00:53.580
The first step in this process is to prepare our plugin in the editor.

16
00:00:53.610 --> 00:00:56.490
Open the read midi text file.

17
00:00:58.600 --> 00:01:04.629
Before starting this lecture, I modified the read me file with various pieces of information on our

18
00:01:04.629 --> 00:01:05.290
plug in.

19
00:01:05.379 --> 00:01:07.540
This file is extremely important.

20
00:01:07.570 --> 00:01:11.110
WordPress will extract the information from this file.

21
00:01:11.140 --> 00:01:15.130
This information is presented to the user on the plugin page.

22
00:01:15.160 --> 00:01:20.480
We must add here to a specific formats in the resource section of this lecture.

23
00:01:20.500 --> 00:01:23.980
I provide a link to the documentation page for this file.

24
00:01:26.220 --> 00:01:31.040
This page provides detailed information on how to format the read me file.

25
00:01:31.050 --> 00:01:35.400
In my opinion, the most useful piece of information is in the description.

26
00:01:35.430 --> 00:01:39.000
WordPress recommends two tools for creating this file.

27
00:01:39.000 --> 00:01:40.470
Let's check them out.

28
00:01:40.500 --> 00:01:42.790
The first tool is a generator.

29
00:01:42.810 --> 00:01:48.210
It's possible that you may create errors or typos to prevent the likelihood of an error.

30
00:01:48.240 --> 00:01:53.010
I recommend using this tool to create a new read me, file it all neatly.

31
00:01:53.010 --> 00:01:54.300
Format the file.

32
00:01:54.570 --> 00:01:56.640
The second tool is a validator.

33
00:01:56.640 --> 00:02:01.830
Just in case you should always validate your read me files for potential errors.

34
00:02:01.830 --> 00:02:03.610
If there are errors in your code.

35
00:02:03.630 --> 00:02:05.520
Your plugin will be rejected.

36
00:02:05.520 --> 00:02:10.590
For example purposes I'm going to paste in the read me file I've created.

37
00:02:12.760 --> 00:02:15.190
Next, I will validate the file.

38
00:02:15.220 --> 00:02:18.950
After a few moments, the validator will throw a few notes at me.

39
00:02:18.970 --> 00:02:20.830
These notes are not errors.

40
00:02:20.830 --> 00:02:22.550
They're are just recommendations.

41
00:02:22.570 --> 00:02:24.070
If the box were yellow.

42
00:02:24.100 --> 00:02:26.870
These bullet points would be considered errors.

43
00:02:26.890 --> 00:02:28.610
Let me show you an example.

44
00:02:28.630 --> 00:02:31.930
I'm going to temporarily break my read me file.

45
00:02:31.960 --> 00:02:34.900
Afterward, I will revalidate the file.

46
00:02:37.010 --> 00:02:39.030
This time, warnings will appear.

47
00:02:39.050 --> 00:02:41.780
Warnings must be addressed before proceeding.

48
00:02:41.780 --> 00:02:47.300
Once you have the read me file ready, we can begin packaging the file in the editor.

49
00:02:47.330 --> 00:02:48.770
Open the command line.

50
00:02:50.890 --> 00:02:53.750
Plugins must be exported as a zip file.

51
00:02:53.770 --> 00:02:59.200
The WordPress Scripts package has a command for zipping your plugin file without the clutter of the

52
00:02:59.200 --> 00:03:02.320
node modules directory in the command line.

53
00:03:02.320 --> 00:03:04.900
Run the following command and PM.

54
00:03:04.900 --> 00:03:06.040
Run build.

55
00:03:08.160 --> 00:03:09.930
Before zipping the project.

56
00:03:09.930 --> 00:03:12.100
I recommend building the project.

57
00:03:12.120 --> 00:03:16.000
The Build Command will optimize the plug and file for production.

58
00:03:16.020 --> 00:03:20.670
Next, let's run the NPM run plug in zip command.

59
00:03:22.750 --> 00:03:26.030
This command will begin the process of zipping the file.

60
00:03:26.050 --> 00:03:31.190
From my experience, this command does not always produce reliable results.

61
00:03:31.210 --> 00:03:33.770
I prefer zipping the plug in manually.

62
00:03:33.790 --> 00:03:40.720
If you decide to zip the file manually, you can include all the files except the node modules directory.

63
00:03:40.750 --> 00:03:47.200
It's not necessary to include this directory with your zip file, otherwise you may get rejected for

64
00:03:47.200 --> 00:03:49.300
having a large file size.

65
00:03:49.390 --> 00:03:55.370
After zipping the file, we can begin uploading the file in the resource section of this lecture.

66
00:03:55.390 --> 00:03:59.860
I provide a link to a page with an overview of the submission process.

67
00:04:00.740 --> 00:04:06.710
If you scroll to the bottom of the page, the list of steps for submitting a plugin is written here.

68
00:04:06.740 --> 00:04:10.700
Before uploading a file, you must create a WordPress account.

69
00:04:10.730 --> 00:04:15.350
After creating an accounts, you can click on this link to submit the plugin.

70
00:04:15.380 --> 00:04:18.980
I'm not going to submit the plugin as I've already done so already.

71
00:04:19.010 --> 00:04:23.840
Hopefully this lecture has provided key insight into submitting a plugin.

72
00:04:23.930 --> 00:04:28.340
There are additional steps, but those are beyond the scope of this course.

73
00:04:28.340 --> 00:04:31.910
I recommend reading the previous page for those steps.

