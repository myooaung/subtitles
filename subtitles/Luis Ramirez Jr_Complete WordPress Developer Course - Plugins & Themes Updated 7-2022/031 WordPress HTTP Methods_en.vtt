WEBVTT
1
00:00:00.120 --> 00:00:07.250
In this lecture, we are going to use a static property for setting the HTTP methods of our custom endpoints.

2
00:00:07.260 --> 00:00:13.890
Check out the resource section of this lecture for a link to a class called WP Rest Server.

3
00:00:13.890 --> 00:00:16.610
This is a class defined by WordPress.

4
00:00:16.620 --> 00:00:20.220
Looking through the class, there are hundreds of lines of code.

5
00:00:20.220 --> 00:00:21.300
It's massive.

6
00:00:21.330 --> 00:00:25.650
Luckily the code we care about can be found at the top of the class.

7
00:00:25.650 --> 00:00:31.950
This class has four properties called readable create all editable and delectable.

8
00:00:31.950 --> 00:00:36.000
These values for these properties contain HTTP methods.

9
00:00:36.000 --> 00:00:40.650
WordPress defines these methods for our convenience in an application.

10
00:00:40.650 --> 00:00:42.780
Methods should be standardized.

11
00:00:42.810 --> 00:00:49.020
For example, if we're retrieving data, the server should always use the git method for listening for

12
00:00:49.020 --> 00:00:49.920
requests.

13
00:00:49.920 --> 00:00:55.140
If we have inconsistent usage of methods, it can be confusing for developers.

14
00:00:55.140 --> 00:01:00.870
By sticking to a standard, it'll be easier to predict what kind of requests can be made.

15
00:01:01.080 --> 00:01:03.870
WordPress recommends the following methods.

16
00:01:03.870 --> 00:01:11.040
If we're trying to read data, the method should be get end points for creating data can use the post

17
00:01:11.040 --> 00:01:16.290
method, we can use the post put or patch methods for editing data.

18
00:01:16.320 --> 00:01:20.670
Lastly, the delete method is reserved for deleting data.

19
00:01:20.880 --> 00:01:24.690
These properties are created with the const keyword.

20
00:01:24.690 --> 00:01:29.820
We haven't had the opportunity to discuss this keyword, but it's very straightforward.

21
00:01:29.820 --> 00:01:33.690
The contact keyword creates a constant within a class.

22
00:01:33.690 --> 00:01:39.360
It's different from defining a regular constant similar to defining constant variables.

23
00:01:39.360 --> 00:01:43.380
Constant properties cannot be modified after their definition.

24
00:01:43.470 --> 00:01:49.110
Next, the contact keyword will allow the property to be accessible to the public.

25
00:01:49.110 --> 00:01:53.220
For this reason, the public keyword does not need to be added.

26
00:01:53.220 --> 00:01:57.300
Lastly, constants can be treated like static properties.

27
00:01:57.300 --> 00:02:01.260
We do not need to create an instance to use these properties.

28
00:02:01.350 --> 00:02:05.100
The question becomes why would we want to use these properties?

29
00:02:05.100 --> 00:02:09.210
Truthfully, we can set the methods of our roots by hard coding them.

30
00:02:09.210 --> 00:02:12.660
However, we should adhere to WordPress standards.

31
00:02:12.660 --> 00:02:18.570
If WordPress believes that retrieving data should be performed with the Get method, our roots should

32
00:02:18.570 --> 00:02:20.160
reflect that standard.

33
00:02:20.190 --> 00:02:23.400
What if WordPress decides to use a different method?

34
00:02:23.400 --> 00:02:25.470
Our code base must be updated.

35
00:02:25.470 --> 00:02:27.420
To reflect those changes.

36
00:02:27.420 --> 00:02:33.480
We would need to update the roots one by one rather than hard coding the values we can use.

37
00:02:33.480 --> 00:02:40.140
These properties, if they change our code, will automatically reflect the current standard.

38
00:02:40.200 --> 00:02:43.500
At the end of the day, it's up to you for this course.

39
00:02:43.500 --> 00:02:47.790
Let's use these constants to our advantage in your editor.

40
00:02:47.820 --> 00:02:50.490
Open the init php file.

41
00:02:52.310 --> 00:02:59.480
Inside the first roots update the methods key to the WP rest server stable property.

42
00:03:01.770 --> 00:03:06.180
We are using the creative property because we're creating a user.

43
00:03:06.180 --> 00:03:08.910
The value for this property is post.

44
00:03:08.940 --> 00:03:12.240
We do not need to make further changes to this route.

45
00:03:12.270 --> 00:03:15.150
Let's try moving on to the next route.

46
00:03:15.180 --> 00:03:21.780
The second routes methods property should be sent to WP Rest Server Editable.

47
00:03:24.040 --> 00:03:30.320
The Editable property supports multiple methods we can use post, put or patch.

48
00:03:30.340 --> 00:03:36.310
Once again, we do not need to update our code base further after making those changes.

49
00:03:36.310 --> 00:03:39.610
Let's try testing our endpoints with postman.

50
00:03:39.640 --> 00:03:42.430
Open the Postman application first.

51
00:03:42.430 --> 00:03:45.760
Let's try testing the registration endpoint.

52
00:03:45.760 --> 00:03:51.730
Before doing so, I'm going to update the body of the request to contain empty values.

53
00:03:53.800 --> 00:03:56.440
Next, I'll initiate the request.

54
00:03:58.510 --> 00:04:00.100
And the response body.

55
00:04:00.100 --> 00:04:02.820
The end point has received the request.

56
00:04:02.830 --> 00:04:06.760
We can verify the response by checking the status property.

57
00:04:06.790 --> 00:04:07.480
Awesome.

58
00:04:07.480 --> 00:04:12.670
Let's try doing the same for the login endpoint inside the body of the request.

59
00:04:12.700 --> 00:04:15.400
Leave the properties with empty values.

60
00:04:17.500 --> 00:04:20.079
Lastly, initiate the request.

61
00:04:22.100 --> 00:04:29.240
Same result test before we are given an object with these status property by using WordPress methods,

62
00:04:29.240 --> 00:04:32.090
we are following WordPress standards.

63
00:04:32.090 --> 00:04:33.920
This step is not required.

64
00:04:33.920 --> 00:04:38.300
However, life's easier when there are standards across the board.

65
00:04:38.300 --> 00:04:41.200
With that set we have completed the blocks.

66
00:04:41.210 --> 00:04:44.270
It took almost 3 hours, but it was well worth it.

67
00:04:44.270 --> 00:04:47.550
We've learned a lot about block development and WordPress.

68
00:04:47.570 --> 00:04:49.220
Our journey isn't over yet.

69
00:04:49.250 --> 00:04:50.810
We've got some work to do.

70
00:04:50.840 --> 00:04:53.600
Feel free to take a break once you're refreshed.

71
00:04:53.600 --> 00:04:55.910
I'll see you in the next section.

