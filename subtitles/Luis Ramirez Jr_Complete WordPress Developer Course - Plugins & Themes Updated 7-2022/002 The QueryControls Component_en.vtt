WEBVTT
1
00:00:00.090 --> 00:00:05.550
In this lecture, we are going to kick things off by adding a component for controlling the query for

2
00:00:05.550 --> 00:00:06.270
posts.

3
00:00:06.270 --> 00:00:09.250
Performing a query for posts can be complicated.

4
00:00:09.270 --> 00:00:11.070
WordPress does it all the time.

5
00:00:11.070 --> 00:00:14.940
We can leverage WordPress components to help us build our block.

6
00:00:14.940 --> 00:00:17.850
Let me show you an example in my editor.

7
00:00:17.850 --> 00:00:19.680
I've added the query loop.

8
00:00:19.680 --> 00:00:21.780
BLOCK We're already familiar with this.

9
00:00:21.780 --> 00:00:27.300
BLOCK On the sidebar, we are presented with dozens of options for modifying the query.

10
00:00:27.300 --> 00:00:31.710
Believe it or not, most of these options are handled by a single component.

11
00:00:31.710 --> 00:00:37.710
In the resource section of this lecture, I provide a link to a component called query controls.

12
00:00:37.890 --> 00:00:43.170
The queries controls component renders a list of input fields for modifying a post.

13
00:00:43.170 --> 00:00:46.020
However, it does not create the query.

14
00:00:46.020 --> 00:00:48.510
It simply adds fields to the sidebar.

15
00:00:48.510 --> 00:00:54.060
For modifying the query, you can go through the documentation for everything offered by this component.

16
00:00:54.060 --> 00:00:57.780
It's one of the most powerful components offered by WordPress.

17
00:00:57.780 --> 00:01:00.030
I think this component will be helpful.

18
00:01:00.030 --> 00:01:05.940
It's easier to use this component over creating dozens of controls for modifying different options.

19
00:01:05.940 --> 00:01:08.910
Let's try implementing this component in our block.

20
00:01:08.910 --> 00:01:12.240
In your editor, open the index JS file.

21
00:01:14.330 --> 00:01:20.210
From the WordPress slash components package import the query controls components.

22
00:01:22.340 --> 00:01:25.890
Next, let's scroll to the panel body component.

23
00:01:25.910 --> 00:01:29.960
Inside this component, insert the query controls component.

24
00:01:32.210 --> 00:01:37.400
The query controls component can render various input fields by default.

25
00:01:37.400 --> 00:01:38.900
They're hidden from the client.

26
00:01:38.930 --> 00:01:44.920
We must add specific properties to force the appearance of specific fields for this block.

27
00:01:44.930 --> 00:01:50.450
We are going to add fields for sending the number of posts to display and the categories to filter the

28
00:01:50.450 --> 00:01:51.380
posts by.

29
00:01:51.740 --> 00:01:56.120
Let's start with modifying the number of posts on this component.

30
00:01:56.120 --> 00:02:01.760
We can set the initial post count by adding the number of items property.

31
00:02:01.760 --> 00:02:05.480
The value for this property will be the count attributes.

32
00:02:07.640 --> 00:02:11.170
The accounts attribute has been structured ahead of time.

33
00:02:11.180 --> 00:02:14.450
You do not need to manually grab this attribute.

34
00:02:14.480 --> 00:02:16.840
Let's move on to the other properties.

35
00:02:16.850 --> 00:02:19.310
The post count should be modifiable.

36
00:02:19.340 --> 00:02:23.730
At the same time, we don't want to allow clients to grab hundreds of posts.

37
00:02:23.750 --> 00:02:28.560
This type of request can be a burden on a server to keep users safe.

38
00:02:28.580 --> 00:02:32.010
Let's restrict the post counts to a specific range.

39
00:02:32.030 --> 00:02:37.040
The range can be configured by adding two properties called Min and Max.

40
00:02:37.070 --> 00:02:41.270
Let's set these properties to one and ten respectively.

41
00:02:43.350 --> 00:02:47.430
This block will be able to display between 1 to 10 posts.

42
00:02:47.610 --> 00:02:51.030
There's one more property that we will add to the component.

43
00:02:51.060 --> 00:02:54.450
It's called on number of items change.

44
00:02:56.580 --> 00:03:01.000
This property is an event that gets emitted when the post count is modified.

45
00:03:01.020 --> 00:03:07.170
Let's use this events to update the count attributes passing an arrow function to handle the event.

46
00:03:07.200 --> 00:03:10.590
We are provided the new value as an argument.

47
00:03:10.590 --> 00:03:13.980
I'm going to refer to the argument as counts.

48
00:03:16.120 --> 00:03:17.440
Inside the function.

49
00:03:17.440 --> 00:03:21.970
Let's call the set attributes function to update the count attribute.

50
00:03:24.220 --> 00:03:28.530
So far the component is very similar to other control components.

51
00:03:28.540 --> 00:03:33.330
We can set the initial value, restrict the range and handle updates.

52
00:03:33.340 --> 00:03:36.220
Let's try testing our block in the browser.

53
00:03:36.220 --> 00:03:37.690
Refresh the page.

54
00:03:39.770 --> 00:03:43.790
Next, add the popular recipes block to the page.

55
00:03:45.860 --> 00:03:51.590
If we look at the sidebar, the query controls component has rendered a slider for changing the post

56
00:03:51.590 --> 00:03:52.880
count of the block.

57
00:03:52.910 --> 00:03:54.220
It's fully functional.

58
00:03:54.230 --> 00:03:56.200
The post count can be changed.

59
00:03:56.210 --> 00:04:00.570
So far, the query controls component does not seem very special.

60
00:04:00.590 --> 00:04:03.130
In our case, we're using the bare minimum.

61
00:04:03.140 --> 00:04:08.390
Let's start exploring the true power of this component in the next lecture.

