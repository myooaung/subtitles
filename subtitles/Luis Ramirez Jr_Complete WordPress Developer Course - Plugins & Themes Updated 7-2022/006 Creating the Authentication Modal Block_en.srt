1
00:00:00,090 --> 00:00:04,460
In this lecture, we are going to create a block for the authentication model.

2
00:00:04,470 --> 00:00:06,220
Sounds strange, right?

3
00:00:06,240 --> 00:00:08,850
Why aren't we using the header tools block?

4
00:00:08,880 --> 00:00:10,130
That's a good question.

5
00:00:10,140 --> 00:00:14,540
It's not uncommon to ask the user to log in based on various actions.

6
00:00:14,550 --> 00:00:19,500
For example, we can ask the user to log in if they click on the login link.

7
00:00:19,530 --> 00:00:22,990
What if a user is purchasing a product without logging in?

8
00:00:23,010 --> 00:00:25,680
We should display the login form to them.

9
00:00:25,890 --> 00:00:31,950
There are various actions that can be performed by the user to cause our site to prompt them to log

10
00:00:31,950 --> 00:00:32,400
in.

11
00:00:32,520 --> 00:00:38,430
If we were to add the modal to the header tools block, clients would be forced to add this block to

12
00:00:38,430 --> 00:00:39,360
every page.

13
00:00:39,390 --> 00:00:41,690
They may not want to use this block.

14
00:00:41,700 --> 00:00:48,030
We should decouple the modal from the header tools block by creating a separate block for rendering

15
00:00:48,030 --> 00:00:48,750
the modal.

16
00:00:48,780 --> 00:00:53,820
This way the modal can be opened with alternative blocks or elements.

17
00:00:53,850 --> 00:00:55,170
Let's get started.

18
00:00:55,170 --> 00:01:02,010
In the resource section of this lecture, I provide a link to a gist with starter files for our project.

19
00:01:02,010 --> 00:01:05,360
Inside the source slash block's directory.

20
00:01:05,370 --> 00:01:09,570
Create a folder called Off Modal for storing the blocks files.

21
00:01:09,570 --> 00:01:16,020
Next, create the files from this gist into the new directory with their respective code.

22
00:01:16,050 --> 00:01:18,180
Pause the video and give it a try.

23
00:01:18,210 --> 00:01:19,110
Good luck.

24
00:01:20,370 --> 00:01:21,390
Welcome back.

25
00:01:21,420 --> 00:01:24,330
Hopefully you are able to create the files.

26
00:01:24,330 --> 00:01:26,340
Let's review the files together.

27
00:01:26,340 --> 00:01:29,070
Starting with the block JSON file.

28
00:01:29,070 --> 00:01:33,450
We have a typical block file inside the attributes object.

29
00:01:33,450 --> 00:01:36,680
I added an attribute called Show Register.

30
00:01:36,690 --> 00:01:39,270
Registering an account will be optional.

31
00:01:39,270 --> 00:01:45,780
If a client does not want users to register a new account, we should disable the registration form.

32
00:01:45,990 --> 00:01:49,140
The data type for this attribute is a boolean.

33
00:01:49,170 --> 00:01:52,050
The default value has been set to true.

34
00:01:52,080 --> 00:01:55,350
Let's move on to the index JS file.

35
00:01:55,350 --> 00:02:00,270
Inside this file we are importing the usual components for a building a block.

36
00:02:00,270 --> 00:02:05,610
Since we have an attribute, we are going to add options to the sidebar.

37
00:02:05,640 --> 00:02:12,810
At the top of the edit function we are d structuring the attributes object for the show register function

38
00:02:12,810 --> 00:02:14,880
inside the templates of the block.

39
00:02:14,880 --> 00:02:16,980
We are not rendering the modal.

40
00:02:16,980 --> 00:02:20,640
Instead, a message will be rendered by default.

41
00:02:20,640 --> 00:02:21,990
The modal is hidden.

42
00:02:21,990 --> 00:02:27,960
I don't think there's a point in displaying the modal from the editor trying to add interactive elements

43
00:02:27,960 --> 00:02:29,570
from the full site editor.

44
00:02:29,570 --> 00:02:30,660
It can be tricky.

45
00:02:30,660 --> 00:02:36,870
Rather than trying to fight with Gutenberg, we are going to tell the user a live demo can be previewed

46
00:02:36,870 --> 00:02:40,290
from the front end after creating these files.

47
00:02:40,290 --> 00:02:42,090
Let's register the block.

48
00:02:42,090 --> 00:02:43,880
Open the register blocks.

49
00:02:44,520 --> 00:02:45,480
PHP file.

50
00:02:47,670 --> 00:02:51,990
Inside the blocks array at another array inside the blocks.

51
00:02:52,020 --> 00:02:56,760
Options add the name key with a value of off modal.

52
00:02:58,970 --> 00:03:02,920
We are going to be using server side rendering for our block.

53
00:03:02,930 --> 00:03:04,760
Let's add the options array.

54
00:03:04,760 --> 00:03:10,970
If we're defining a render callback function, the name of the function will be called up off modal

55
00:03:10,970 --> 00:03:12,260
render CB.

56
00:03:14,560 --> 00:03:16,420
After registering our block.

57
00:03:16,420 --> 00:03:21,340
Let's define the function for rendering the block inside the block directory.

58
00:03:21,370 --> 00:03:24,970
Create a file called off modal PHP.

59
00:03:27,250 --> 00:03:31,060
Define the up off modal render CB function.

60
00:03:33,210 --> 00:03:33,890
Great.

61
00:03:33,930 --> 00:03:35,300
Our block should be ready.

62
00:03:35,310 --> 00:03:40,130
Let's try testing the block by adding it to a page inside the browser.

63
00:03:40,140 --> 00:03:42,720
Refresh the experimental page.

64
00:03:44,670 --> 00:03:48,900
Next, insert the authentication modal block to the page.

65
00:03:50,950 --> 00:03:57,100
As expected, the message from our block appears it's telling the user that they should view their front

66
00:03:57,100 --> 00:03:58,420
end for logging in.

67
00:03:58,420 --> 00:04:01,150
The next step is to update the attributes.

68
00:04:01,150 --> 00:04:02,470
In the next lecture.

69
00:04:02,470 --> 00:04:07,930
Let's begin toggling the registration form with the toggle control component.

