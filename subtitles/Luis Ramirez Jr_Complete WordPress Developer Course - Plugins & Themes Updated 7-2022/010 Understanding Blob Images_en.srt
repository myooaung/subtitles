1
00:00:00,120 --> 00:00:05,710
In this lecture, we are going to talk about an error with the media placeholder component.

2
00:00:05,730 --> 00:00:06,990
You may have caught it.

3
00:00:07,020 --> 00:00:08,260
Let's take a look.

4
00:00:08,280 --> 00:00:13,380
In my browser, I added the team members group block to the page.

5
00:00:13,410 --> 00:00:18,690
So far we've been adding images by selecting them from the media library.

6
00:00:18,690 --> 00:00:20,650
But what about uploading an image?

7
00:00:20,670 --> 00:00:23,820
Let's see what happens when an image is uploaded.

8
00:00:26,880 --> 00:00:29,530
In the console, an error gets thrown.

9
00:00:29,550 --> 00:00:31,620
Let's review the error together.

10
00:00:31,830 --> 00:00:34,560
The error states the image sizes.

11
00:00:34,560 --> 00:00:36,390
Property is undefined.

12
00:00:36,390 --> 00:00:42,390
Whenever you encounter an undefined error, the error is telling you that a property does not have a

13
00:00:42,390 --> 00:00:43,050
value.

14
00:00:43,080 --> 00:00:44,980
Sounds strange, right?

15
00:00:45,000 --> 00:00:46,530
In an earlier lecture.

16
00:00:46,560 --> 00:00:50,370
The image object had a property called sizes.

17
00:00:50,400 --> 00:00:53,430
Things are different with images being uploaded.

18
00:00:53,430 --> 00:00:59,880
To understand what's going on, let's open the index JS file for the team member block.

19
00:01:01,970 --> 00:01:08,630
Scroll to the on select event for the media placeholder component at the top of the function.

20
00:01:08,630 --> 00:01:11,330
Lets log the image argument.

21
00:01:13,770 --> 00:01:18,790
Next, let's test the media placeholder component in the browser.

22
00:01:18,810 --> 00:01:23,040
Refresh the page and add the team members group block.

23
00:01:25,270 --> 00:01:27,640
I'm going to quickly upload an image.

24
00:01:29,740 --> 00:01:34,000
After uploading the image, the argument gets logged into the console.

25
00:01:34,030 --> 00:01:37,410
This time the object is different than before.

26
00:01:37,420 --> 00:01:43,360
By selecting an existing image, WordPress does not need to upload a file to the server.

27
00:01:43,390 --> 00:01:45,070
The image is ready to go.

28
00:01:45,100 --> 00:01:50,950
However, if we're uploading an image, the image is not going to be immediately available.

29
00:01:51,190 --> 00:01:53,500
Uploading an image takes time.

30
00:01:53,530 --> 00:01:57,070
For this reason, WordPress will create a blob.

31
00:01:59,250 --> 00:02:02,230
Sounds silly, I know, but that's what it's called.

32
00:02:02,250 --> 00:02:07,200
Lamps are not specific to WordPress, they're a feature available in browsers.

33
00:02:07,200 --> 00:02:14,400
Blob is short for binary large object sounds complicated, but most of the details are an important

34
00:02:14,400 --> 00:02:15,090
to us.

35
00:02:15,090 --> 00:02:19,860
To put it simply, blobs were introduced for storing file data.

36
00:02:19,860 --> 00:02:24,690
We can store various files from images to videos in a blob.

37
00:02:24,720 --> 00:02:30,270
The purpose of using a blob is to create a temporary placeholder for a file.

38
00:02:30,300 --> 00:02:35,130
You can use a blob to represent a file while it's being uploaded to the server.

39
00:02:35,130 --> 00:02:37,080
That's what WordPress is doing.

40
00:02:37,080 --> 00:02:40,680
WordPress creates a blob from our image file.

41
00:02:40,680 --> 00:02:44,610
We can use this blob to display the image onto the page.

42
00:02:46,760 --> 00:02:47,840
In the console.

43
00:02:47,840 --> 00:02:51,200
We have an object with a URL to the blob.

44
00:02:51,230 --> 00:02:55,060
Browsers will generate a URL for viewing the file.

45
00:02:55,070 --> 00:02:59,590
It's perfectly acceptable to render an image with a blob URL.

46
00:02:59,600 --> 00:03:04,190
You can detect a blob URL by checking the beginning of the URL.

47
00:03:04,220 --> 00:03:07,520
All blobs start with the blob protocol.

48
00:03:07,550 --> 00:03:10,310
So what does this have to do with our error?

49
00:03:10,340 --> 00:03:15,230
As you can see, the size property is not existent with this object.

50
00:03:15,260 --> 00:03:19,550
This is because WordPress has not uploaded the file to the server.

51
00:03:19,580 --> 00:03:23,030
A URL is not available for previewing the image.

52
00:03:23,060 --> 00:03:29,090
Instead, WordPress will give us a blob URL to act as a temporary preview.

53
00:03:29,180 --> 00:03:35,210
Once the image has been uploaded, the size property will be accessible from the object.

54
00:03:35,240 --> 00:03:39,650
In the meantime, we should display the image with the blob URL.

55
00:03:39,680 --> 00:03:43,430
In the next lecture, let's begin previewing the image.

