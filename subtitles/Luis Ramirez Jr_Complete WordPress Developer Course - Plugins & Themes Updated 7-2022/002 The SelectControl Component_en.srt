1
00:00:00,090 --> 00:00:04,030
In this lecture, we will add attributes for the header tools block.

2
00:00:04,050 --> 00:00:07,110
Not everyone wants to analogue and button to their site.

3
00:00:07,110 --> 00:00:09,120
We should have the option to the link.

4
00:00:09,120 --> 00:00:13,860
As you can imagine, we can use the toggle control component to toggle the value.

5
00:00:13,890 --> 00:00:16,950
However, I want to explore other components.

6
00:00:16,950 --> 00:00:22,950
They may not be the best option, but we should use this opportunity to explore the various components

7
00:00:22,950 --> 00:00:24,570
offered by WordPress.

8
00:00:24,600 --> 00:00:29,910
The Select Control component is another component for adding a dropdown field.

9
00:00:29,910 --> 00:00:34,250
We can use this component for enabling or disabling the login link.

10
00:00:34,260 --> 00:00:35,570
Let's get started.

11
00:00:35,580 --> 00:00:37,980
Open the block JSON file.

12
00:00:40,140 --> 00:00:41,430
First things first.

13
00:00:41,430 --> 00:00:45,150
We should add an attribute inside the attributes object.

14
00:00:45,150 --> 00:00:47,880
Add an attribute called Show Off.

15
00:00:50,050 --> 00:00:52,960
Next, let's set the type to Boolean.

16
00:00:55,120 --> 00:00:56,710
For extra precaution.

17
00:00:56,710 --> 00:00:58,510
Let's add a default value.

18
00:00:58,540 --> 00:01:01,810
The initial value for this attribute will be true.

19
00:01:04,120 --> 00:01:07,750
Our next step is to manipulate this attributes value.

20
00:01:07,780 --> 00:01:10,300
Open the index js file.

21
00:01:12,390 --> 00:01:18,780
As mentioned earlier, we are going to be using the select control component for changing this attributes

22
00:01:18,780 --> 00:01:19,560
value.

23
00:01:19,590 --> 00:01:23,430
This component can be imported from the components package.

24
00:01:23,460 --> 00:01:29,310
Let's update the import statement for this package to include the select control component.

25
00:01:31,550 --> 00:01:33,740
At this point, you may be wondering.

26
00:01:33,740 --> 00:01:37,360
We can use a regular select element for changing values.

27
00:01:37,370 --> 00:01:38,710
The answer is yes.

28
00:01:38,720 --> 00:01:41,090
However, it would take more work.

29
00:01:41,120 --> 00:01:47,240
Additionally, WordPress will apply classes to the select element to match the current design of the

30
00:01:47,240 --> 00:01:47,830
editor.

31
00:01:47,840 --> 00:01:54,680
For this reason, using WordPress components for our building, our block is the best option inside

32
00:01:54,680 --> 00:01:55,670
the edit function.

33
00:01:55,670 --> 00:02:00,620
Let's extract the show off attribute from the attributes object.

34
00:02:02,760 --> 00:02:04,000
Our date is ready.

35
00:02:04,020 --> 00:02:07,850
The final step is to add the select control components.

36
00:02:07,860 --> 00:02:10,680
Let's insert this component inside the panel.

37
00:02:10,680 --> 00:02:11,820
Body component.

38
00:02:11,820 --> 00:02:14,850
The component should replace the static text.

39
00:02:17,040 --> 00:02:21,380
The properties of this component are similar to other control components.

40
00:02:21,390 --> 00:02:26,250
We can add a label, initial value and options to display in the dropdown.

41
00:02:26,280 --> 00:02:32,400
Let's start with the label by adding the label property, the value for this property will be the double

42
00:02:32,400 --> 00:02:33,710
underscore function.

43
00:02:33,720 --> 00:02:37,230
We are going to set the label to the following value show.

44
00:02:37,230 --> 00:02:39,720
Log in slash register link.

45
00:02:41,820 --> 00:02:45,750
Next, let's set the value property to the attribute.

46
00:02:47,710 --> 00:02:51,340
We are going to add a property unfamiliar to us.

47
00:02:51,370 --> 00:02:55,270
Unlike other inputs, users cannot write a custom value.

48
00:02:55,300 --> 00:03:00,030
We can add values to the dropdown by adding a property called Options.

49
00:03:00,040 --> 00:03:02,980
The value for this property will be an array.

50
00:03:05,350 --> 00:03:08,470
Inside this array, we can add objects.

51
00:03:08,500 --> 00:03:11,100
Each object will represent an option.

52
00:03:11,110 --> 00:03:16,030
Let's add an object with two properties called label and value.

53
00:03:18,320 --> 00:03:21,970
The label properties value will be displayed to the user.

54
00:03:21,980 --> 00:03:28,910
Since we're displaying text, let's use the double underscore function to translate it for this example,

55
00:03:28,910 --> 00:03:31,040
let's set the label to know.

56
00:03:33,430 --> 00:03:39,130
As for the value property, it will represent the value that gets stored in the attribute.

57
00:03:39,160 --> 00:03:41,740
Let's set this property to false.

58
00:03:43,940 --> 00:03:47,810
Next, we can add another object to enable this option.

59
00:03:47,840 --> 00:03:51,260
The label property should be set to yes.

60
00:03:53,470 --> 00:03:57,430
Lastly, the value property can be set to true.

61
00:03:59,610 --> 00:04:01,230
So far so good.

62
00:04:01,260 --> 00:04:03,430
There's one last property to add.

63
00:04:03,450 --> 00:04:09,170
We must add the en change events to update the attributes inside this event.

64
00:04:09,180 --> 00:04:13,080
We are going to add an arrow function to accept the new value.

65
00:04:15,360 --> 00:04:21,870
Things are about to get tricky before updating the attribute, let's log the data type of the value

66
00:04:21,870 --> 00:04:23,940
inside the body of the function.

67
00:04:23,940 --> 00:04:28,260
Log the following value type of new value.

68
00:04:30,480 --> 00:04:36,040
As a reminder, the type of keyword will return the data type of a variable.

69
00:04:36,060 --> 00:04:40,050
After making those changes, let's try testing the block.

70
00:04:40,050 --> 00:04:43,170
Refresh the Gutenberg editor in the browser.

71
00:04:45,360 --> 00:04:48,240
Next and the header tools block.

72
00:04:50,550 --> 00:04:54,540
Upon selecting the block, the settings will appear on the sidebar.

73
00:04:54,570 --> 00:04:59,700
Under the general panel, our dropdown gets displayed behind the scenes.

74
00:04:59,700 --> 00:05:02,310
WordPress is using these select elements.

75
00:05:02,310 --> 00:05:05,920
We can try toggling the value, but it won't be functional.

76
00:05:05,940 --> 00:05:09,830
That's to be expected since we haven't updated the attribute.

77
00:05:09,840 --> 00:05:14,610
More importantly, let's open the console panel in the developer tools.

78
00:05:16,740 --> 00:05:18,480
At the bottom of the console.

79
00:05:18,510 --> 00:05:22,950
The data type should be logged after attempting to change the dropdown.

80
00:05:22,980 --> 00:05:26,270
According to the console, the data type is a string.

81
00:05:26,280 --> 00:05:27,750
That's a huge problem.

82
00:05:27,750 --> 00:05:33,270
WordPress can be strict with its data types in the block JSON file.

83
00:05:33,300 --> 00:05:36,510
The data type of our attribute is a boolean.

84
00:05:36,840 --> 00:05:43,470
If we were to attempt to update the attribute with the wrong data type, we may experience errors.

85
00:05:43,500 --> 00:05:48,720
The question is why are we getting a different data type by default?

86
00:05:48,750 --> 00:05:53,640
WordPress will convert the data type of a dropdowns value to a string.

87
00:05:53,730 --> 00:05:58,200
It doesn't matter if we're using a different data type in our options array.

88
00:05:58,560 --> 00:06:05,250
For this reason, the toggle control component is considered the best component for dealing with Boolean

89
00:06:05,250 --> 00:06:07,080
values by default.

90
00:06:07,110 --> 00:06:10,410
This component converts a value to a boolean.

91
00:06:10,440 --> 00:06:17,700
However, we're using the Select Control component to explore WordPress components for rendering form

92
00:06:17,700 --> 00:06:18,510
elements.

93
00:06:20,650 --> 00:06:24,060
In addition, you may encounter this type of situation.

94
00:06:24,070 --> 00:06:29,990
There are developers who hate JavaScript because it can change a data type of a variable.

95
00:06:30,010 --> 00:06:32,120
We are experiencing this issue.

96
00:06:32,140 --> 00:06:35,050
It's a fact of life for JavaScript developers.

97
00:06:35,080 --> 00:06:40,640
In these cases, we can utilize a technique called typecasting type.

98
00:06:40,730 --> 00:06:46,450
Casting is the process of converting a variables data type to a different data type.

99
00:06:46,480 --> 00:06:50,830
It's common for JavaScript developers to perform this type of action.

100
00:06:50,860 --> 00:06:54,880
We can avoid this issue with the toggle control component.

101
00:06:54,910 --> 00:07:01,210
I think using the select control component gives us the opportunity to explore type casting.

102
00:07:03,520 --> 00:07:07,610
There are different techniques for converting a variables data type.

103
00:07:07,630 --> 00:07:10,300
There isn't a single solution for everything.

104
00:07:10,420 --> 00:07:12,880
Typically, you can look up a solution.

105
00:07:12,880 --> 00:07:21,030
For our case, we can perform type conversion by using a comparison operator around the new value argument.

106
00:07:21,040 --> 00:07:23,710
We are going to add a pair of parentheses.

107
00:07:23,740 --> 00:07:30,280
Next, we are going to use the equals equals equals operator to compare the value with true.

108
00:07:32,600 --> 00:07:36,500
The comparison operators will always return a boolean value.

109
00:07:36,500 --> 00:07:43,940
And this example we are telling JavaScript to compare the new value argument with a string called true.

110
00:07:43,970 --> 00:07:47,570
After the comparison, the value will be returned.

111
00:07:47,570 --> 00:07:53,480
Therefore, the type of statement will check the data type of the returned value.

112
00:07:53,510 --> 00:07:55,460
Let's refresh the browser.

113
00:07:57,620 --> 00:08:01,040
Next, add the header tools block again.

114
00:08:03,170 --> 00:08:06,450
Let's try changing the values from the dropdown.

115
00:08:06,470 --> 00:08:11,600
This time, the data type of our attribute has changed to a boolean.

116
00:08:11,630 --> 00:08:14,300
This is precisely what we were looking for.

117
00:08:14,330 --> 00:08:18,600
Let's update our function to set the attribute to the Boolean value.

118
00:08:18,620 --> 00:08:20,380
Switch back to the editor.

119
00:08:20,390 --> 00:08:25,400
We are going to replace the console statement with the sense attributes function.

120
00:08:27,610 --> 00:08:32,559
Next, we are going to wrap the value with an object inside this object.

121
00:08:32,559 --> 00:08:36,190
Set the show off attribute to the Boolean value.

122
00:08:38,429 --> 00:08:44,670
After making those changes, our block should be able to store it the show off attribute switch back

123
00:08:44,670 --> 00:08:45,600
to the browser.

124
00:08:45,600 --> 00:08:49,200
We are going to rehab the block after refreshing the page.

125
00:08:53,460 --> 00:09:00,120
From the dropdown we are able to change the value great by using the select control component.

126
00:09:00,150 --> 00:09:03,290
We have a different option for restricting values.

127
00:09:03,300 --> 00:09:10,230
However, if we're dealing with boolean values, you may want to consider using the toggle control components.

128
00:09:10,230 --> 00:09:12,870
There's less hassle with type conversion.

