WEBVTT
1
00:00:00.150 --> 00:00:03.980
In this lecture, we are going to register a new format type.

2
00:00:03.990 --> 00:00:09.510
We're going to need a few functions and components before registering the format type.

3
00:00:09.510 --> 00:00:11.940
Let's import them into our file.

4
00:00:11.940 --> 00:00:17.010
Inside your editor, open the neon format dot js file.

5
00:00:19.310 --> 00:00:27.110
At the top of the file import a function called register format type from the WordPress slash rich text

6
00:00:27.110 --> 00:00:27.920
package.

7
00:00:30.080 --> 00:00:38.510
Next import a component called rich text toolbar button from the WordPress slash block editor package.

8
00:00:40.600 --> 00:00:45.910
Lastly import the double underscore functions from the I 18 and package.

9
00:00:48.100 --> 00:00:54.610
After importing these functions, we can begin adding a button to the toolbar below these imports.

10
00:00:54.610 --> 00:00:57.700
Call the register format type function.

11
00:00:59.910 --> 00:01:04.180
This function will allow us to add a new format type to the toolbar.

12
00:01:04.200 --> 00:01:09.060
It'll help us toggle the visibility of the button along with handling events.

13
00:01:09.090 --> 00:01:10.730
There are two arguments.

14
00:01:10.740 --> 00:01:14.000
The first argument is the name of our format type.

15
00:01:14.010 --> 00:01:18.030
Let's set the name to YouTube plus slash neon.

16
00:01:20.130 --> 00:01:24.060
Next, we can add an object for further configuration.

17
00:01:24.060 --> 00:01:29.570
Inside this object, we can add a property called title for adding a readable name.

18
00:01:29.580 --> 00:01:34.710
Let's set this property to the following translatable text Neon.

19
00:01:36.880 --> 00:01:43.750
After adding the title, add a property called Tag Name WordPress will surround the text with a pair

20
00:01:43.750 --> 00:01:44.510
of these.

21
00:01:44.530 --> 00:01:49.220
These tags can have a class for applying any effect on the selection.

22
00:01:49.240 --> 00:01:53.120
We can configure the type of tags that will surround the element.

23
00:01:53.140 --> 00:01:55.720
Let's set the tag to span.

24
00:01:57.980 --> 00:02:00.980
Lastly, add a function called edit.

25
00:02:03.160 --> 00:02:09.310
The edit function will be responsible for rendering the button in the toolbar inside the function.

26
00:02:09.310 --> 00:02:13.510
Return the rich text toolbar button components.

27
00:02:15.760 --> 00:02:22.570
As the name suggests, this component will add a button to the toolbar for blocks with the rich text

28
00:02:22.570 --> 00:02:23.500
component.

29
00:02:23.560 --> 00:02:27.880
This applies to all instances of the rich text component.

30
00:02:27.910 --> 00:02:33.730
WordPress will handle positioning this button at the right location on this component.

31
00:02:33.730 --> 00:02:39.070
Add a property called title with the following translatable text neon.

32
00:02:41.330 --> 00:02:46.430
The translatable text will appear as the text in the toolbar afterward.

33
00:02:46.430 --> 00:02:50.530
At a property called Icon, we must provide an icon.

34
00:02:50.540 --> 00:02:53.930
The icon will appear with the translatable text.

35
00:02:53.930 --> 00:02:57.200
WordPress has an icon called Super Hero.

36
00:02:57.230 --> 00:02:59.690
I think it fits with our format option.

37
00:02:59.690 --> 00:03:02.690
Let's set this property to super hero.

38
00:03:05.100 --> 00:03:09.180
Up next, we must toggle the components active state.

39
00:03:09.210 --> 00:03:14.190
If the format is applied to the current selection, the button should be highlighted.

40
00:03:14.220 --> 00:03:19.440
We can add a property called is active to change the buttons active state.

41
00:03:19.470 --> 00:03:23.910
However, we do not have the information for toggling this property.

42
00:03:23.940 --> 00:03:29.400
Luckily the edit function is Fed properties related to the current block.

43
00:03:29.430 --> 00:03:34.620
Let's structure the argument list for a property called is active.

44
00:03:36.810 --> 00:03:41.250
Next set this property to the is active property.

45
00:03:43.390 --> 00:03:48.110
WordPress will update our component with the latest state of the selection.

46
00:03:48.130 --> 00:03:52.090
We can use this property for toggling the buttons appearance.

47
00:03:52.090 --> 00:03:56.980
There's one less property we will add to the component called on click.

48
00:03:59.270 --> 00:04:03.130
The on click event is emitted when the user clicks on our button.

49
00:04:03.140 --> 00:04:06.320
Let's pass in a function for handling this event.

50
00:04:08.630 --> 00:04:14.300
Inside this function, we will apply the format to the selection before doing so.

51
00:04:14.300 --> 00:04:18.829
It's possible that the click may not be applicable to our selection.

52
00:04:18.860 --> 00:04:26.390
WordPress recommends using two events to verify that the format should be applied to our selection inside

53
00:04:26.390 --> 00:04:28.640
the edit function's argument list.

54
00:04:28.670 --> 00:04:33.470
These structure the props object for a function called on change.

55
00:04:35.720 --> 00:04:42.740
The on change function will emit an event when the selection should change based on the click back in

56
00:04:42.740 --> 00:04:44.330
the on click function.

57
00:04:44.330 --> 00:04:48.170
Call the on change function for listening to this event.

58
00:04:50.520 --> 00:04:54.300
Inside this event, we can begin toggling the format.

59
00:04:54.330 --> 00:04:58.230
WordPress has a helper function for performing this action.

60
00:04:58.260 --> 00:05:02.340
We do not need to search for the selection from the current block.

61
00:05:02.340 --> 00:05:06.950
WordPress will be able to do that for us at the top of the file.

62
00:05:06.960 --> 00:05:12.060
Import the toggle format function from the rich text package.

63
00:05:14.330 --> 00:05:20.090
This function will handle toggling the format by adding in or removing the element from the selection

64
00:05:20.090 --> 00:05:22.370
back in the on change function.

65
00:05:22.370 --> 00:05:24.770
Call the toggle format function.

66
00:05:27.120 --> 00:05:29.620
This function has two arguments.

67
00:05:29.640 --> 00:05:32.470
The first argument is the current selection.

68
00:05:32.490 --> 00:05:39.370
The selection is provided as a value in the props object and the argument list for the edit function.

69
00:05:39.390 --> 00:05:42.330
The structure of property called value.

70
00:05:44.580 --> 00:05:49.170
Next pass this property into the toggle format function.

71
00:05:51.330 --> 00:05:59.100
Lastly, we must specify the type of format to apply pass in an object with a property called type.

72
00:06:01.350 --> 00:06:04.940
The type property must be the name of the format.

73
00:06:04.950 --> 00:06:11.190
This would be the value passed as the first argument to the register format type function.

74
00:06:11.220 --> 00:06:15.930
The name of our format is called Udemy Plus Slash Neon.

75
00:06:18.140 --> 00:06:19.550
We're almost finished.

76
00:06:19.550 --> 00:06:21.200
The edit function is ready.

77
00:06:21.200 --> 00:06:25.220
However, we should queue the CSV file on the front end.

78
00:06:25.250 --> 00:06:33.370
Otherwise the neon effect will only apply to the Gutenberg editor inside the includes slash front folder.

79
00:06:33.380 --> 00:06:36.440
Open the end queue php file.

80
00:06:38.760 --> 00:06:43.450
At the bottom of the function, run the WP NQ style function.

81
00:06:43.470 --> 00:06:46.620
The name of our stylesheet was called Up Editor.

82
00:06:48.870 --> 00:06:49.520
Great.

83
00:06:49.530 --> 00:06:52.320
We're ready to test our formats in the browser.

84
00:06:52.320 --> 00:06:54.330
Refresh the Gutenberg Editor.

85
00:06:56.270 --> 00:06:59.440
Try typing in random text into the editor.

86
00:06:59.450 --> 00:07:03.260
You do not need to use a special block behind the scenes.

87
00:07:03.260 --> 00:07:08.110
The paragraph block uses the rich text component by default.

88
00:07:08.120 --> 00:07:10.730
This is the block selected by WordPress.

89
00:07:10.760 --> 00:07:15.110
After typing random text, select a portion of the text.

90
00:07:15.110 --> 00:07:19.690
In the toolbar we are presented with a set of formatting options.

91
00:07:19.700 --> 00:07:23.600
You may not see your format unless you press the dropdown button.

92
00:07:23.600 --> 00:07:27.260
As you can see, our format appears in the toolbar.

93
00:07:27.260 --> 00:07:30.560
We can click on this button to apply the effect.

94
00:07:30.560 --> 00:07:36.080
It may not be easy to see, but a blurry background has been applied to the selection.

95
00:07:36.080 --> 00:07:40.670
We can toggle the selection easily by pressing the neon button again.

96
00:07:40.850 --> 00:07:45.860
We've successfully applied the format to our text in an upcoming lecture.

97
00:07:45.860 --> 00:07:51.530
We are going to improve this solution by limiting this format to a specific block.

