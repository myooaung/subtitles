WEBVTT
1
00:00:00.150 --> 00:00:04.830
In this section, we are going to step away from WordPress to talk about SQL.

2
00:00:05.070 --> 00:00:08.119
SQL stands for Structured Query Language.

3
00:00:08.130 --> 00:00:12.600
It's the last language we will be learning in this course throughout our journey.

4
00:00:12.600 --> 00:00:15.180
I've mentioned the database several times.

5
00:00:15.180 --> 00:00:18.000
However, we never examined the database.

6
00:00:18.000 --> 00:00:19.530
That's going to change.

7
00:00:19.530 --> 00:00:25.350
The next block we are going to work on will involve the database before getting into the next block.

8
00:00:25.350 --> 00:00:26.790
I've included this section.

9
00:00:26.790 --> 00:00:33.000
For those of you unfamiliar with databases, if you already have knowledge of databases, feel free

10
00:00:33.000 --> 00:00:35.550
to skip this section for the rest of you.

11
00:00:35.550 --> 00:00:39.030
Let's learn the fundamentals of working with a database.

12
00:00:39.030 --> 00:00:43.200
Let's begin our discussion by talking about what a database is.

13
00:00:43.230 --> 00:00:46.110
A database is a program for storing data.

14
00:00:46.110 --> 00:00:47.670
It's as simple as that.

15
00:00:47.700 --> 00:00:50.790
Databases play a vital role in our world.

16
00:00:50.790 --> 00:00:54.150
Without them, data would be constantly lost.

17
00:00:54.180 --> 00:00:57.990
Unlike programming languages, databases can persist.

18
00:00:57.990 --> 00:01:03.990
Data in JavaScript defining a variable will store data on the user's machine.

19
00:01:03.990 --> 00:01:08.190
However, the data will be lost upon refreshing the page.

20
00:01:08.220 --> 00:01:11.460
Programming languages do not store data forever.

21
00:01:11.460 --> 00:01:17.160
If a system restarts, the system's memory is completely wiped, we would lose everything.

22
00:01:17.190 --> 00:01:18.750
Databases are different.

23
00:01:18.750 --> 00:01:21.660
They can store and maintain data forever.

24
00:01:21.750 --> 00:01:28.050
It doesn't matter if a system crashes, we can reboot our PCs to continue using the same data.

25
00:01:29.250 --> 00:01:31.870
There are dozens of databases available.

26
00:01:31.890 --> 00:01:33.900
There are product high in demand.

27
00:01:33.930 --> 00:01:39.720
By using WordPress, we can skip researching various databases at the end of the day.

28
00:01:39.750 --> 00:01:44.880
WordPress supports two databases called Maya SQL and Maria DB.

29
00:01:44.910 --> 00:01:46.940
Both are great databases.

30
00:01:46.950 --> 00:01:52.170
In the resource section of this lecture, I provide links to both databases.

31
00:01:52.350 --> 00:01:55.760
My SQL is the older of the two databases.

32
00:01:55.770 --> 00:01:59.430
In fact, it's one of the most popular databases in the world.

33
00:01:59.460 --> 00:02:03.240
Technically, my SQL is an open source database.

34
00:02:03.270 --> 00:02:07.950
Over a decade ago, my SQL was acquired by a company called Oracle.

35
00:02:07.980 --> 00:02:11.640
Oracle has privatized some of the code for my SQL.

36
00:02:11.670 --> 00:02:15.150
At the time, many developers disagreed with this move.

37
00:02:15.180 --> 00:02:19.990
They believe that my SQL should remain completely free and open source.

38
00:02:20.010 --> 00:02:21.910
Instead of fighting with Oracle.

39
00:02:21.930 --> 00:02:28.530
The original maintainers of MySQL have forked the database into a new database called Maria DB.

40
00:02:28.560 --> 00:02:34.380
Forking is the process of creating a copy of a program to take it in a different direction.

41
00:02:34.410 --> 00:02:37.860
It's an analogy to the fork in the road metaphor.

42
00:02:38.220 --> 00:02:42.380
Maria Dib and MySQL are mostly compatible with each other.

43
00:02:42.390 --> 00:02:46.230
For this reason, WordPress supports both databases.

44
00:02:46.260 --> 00:02:49.390
Our code is going to work with both databases.

45
00:02:49.410 --> 00:02:52.180
You shouldn't have a problem with either database.

46
00:02:52.200 --> 00:02:55.140
Our local environment is using Maria DB.

47
00:02:55.170 --> 00:02:59.170
However, if you selected MySQL, that won't be a problem.

48
00:02:59.190 --> 00:03:02.880
The syntax for both databases is nearly identical.

49
00:03:03.090 --> 00:03:06.390
Let's try viewing the database on your computer.

50
00:03:06.420 --> 00:03:07.480
Open local.

51
00:03:07.500 --> 00:03:13.930
Your server should be turned on, otherwise you will not be able to view the database on local.

52
00:03:13.950 --> 00:03:16.110
There's a tab called database.

53
00:03:16.140 --> 00:03:21.150
Under this tab, we're provided with information for connecting to the database.

54
00:03:21.180 --> 00:03:26.640
Alternatively, we can click on the admin or link to open the database in the browser.

55
00:03:28.880 --> 00:03:34.070
And Myrna is a completely different program from my school or Maria Deeb.

56
00:03:34.100 --> 00:03:36.930
It's a program for inspecting a database.

57
00:03:36.950 --> 00:03:40.660
Typically, a database can be viewed from the command line.

58
00:03:40.670 --> 00:03:45.740
In my opinion, using the command line for interacting with a database is hard.

59
00:03:45.770 --> 00:03:48.350
Luckily, this is a popular opinion.

60
00:03:48.380 --> 00:03:55.370
There are developers who have created applications for viewing databases with a graphical interface.

61
00:03:55.550 --> 00:03:57.500
Local will install admin.

62
00:03:57.710 --> 00:04:01.320
With our environments, I think admin is a great tool.

63
00:04:01.340 --> 00:04:05.040
However, you may want to program with additional features.

64
00:04:05.060 --> 00:04:06.480
That's perfectly fine.

65
00:04:06.500 --> 00:04:11.010
Let's explore other options in the resource section of this lecture.

66
00:04:11.030 --> 00:04:15.530
I provide links to additional programs for managing databases.

67
00:04:15.560 --> 00:04:19.459
The first tool is called my SQL Workbench.

68
00:04:19.490 --> 00:04:25.220
This is the official tool for interacting with my SQL databases with an interface.

69
00:04:25.250 --> 00:04:32.720
While this tool was created for my SQL, it's 100% compatible with Maria dev databases.

70
00:04:32.930 --> 00:04:35.960
The next tool is called Heidi SQL.

71
00:04:35.990 --> 00:04:40.250
This is my favorite tool for working with SQL databases.

72
00:04:40.280 --> 00:04:43.250
It's extremely performant and easy to use.

73
00:04:43.280 --> 00:04:46.830
However, support for Linux or Mac is limited.

74
00:04:46.850 --> 00:04:50.000
If you're on a mac, check out the last link.

75
00:04:50.030 --> 00:04:53.030
There's a database client called SQL Pro.

76
00:04:53.300 --> 00:04:55.730
All of these options are great choices.

77
00:04:55.760 --> 00:04:59.980
Alternatively, you can do your own research for this course.

78
00:04:59.990 --> 00:05:01.670
We are going to use admin.

79
00:05:02.060 --> 00:05:07.820
The other programs have additional features we may not need there, cluttered with options which can

80
00:05:07.820 --> 00:05:09.230
make it difficult to learn.

81
00:05:09.230 --> 00:05:14.150
A database admin nurse interface is cleaner and easier to use.

82
00:05:14.270 --> 00:05:20.510
After you're finished this course, you're more than welcome to explore other options admin or is going

83
00:05:20.510 --> 00:05:23.780
to have everything we'll need for database management.

84
00:05:25.960 --> 00:05:27.090
One more thing.

85
00:05:27.100 --> 00:05:29.890
It's not necessary to become a database pro.

86
00:05:29.920 --> 00:05:33.810
WordPress does an incredible job of managing the database.

87
00:05:33.820 --> 00:05:38.560
You can design plugins and blocks without directly manipulating the database.

88
00:05:38.590 --> 00:05:43.270
WordPress has dozens of functions for interacting with the database.

89
00:05:43.270 --> 00:05:47.180
You will be able to get away with the bare minimum of knowledge.

90
00:05:47.200 --> 00:05:53.890
In the next lecture, let's begin exploring the database created by local for WordPress development.

