1
00:00:00,090 --> 00:00:06,370
In this lecture we are going to update the PHP render function for the authentication modal block.

2
00:00:06,390 --> 00:00:09,330
We've repeated this step numerous times.

3
00:00:09,330 --> 00:00:14,250
We are always going to be using output buffers for rendering a block on the server.

4
00:00:14,250 --> 00:00:19,680
I think it would be a good idea to create a code snippet to expedite this process.

5
00:00:19,680 --> 00:00:22,050
Let's get started in your editor.

6
00:00:22,080 --> 00:00:25,710
Open the authentication modal PHP file.

7
00:00:27,760 --> 00:00:32,130
Inside this function, we are going to quickly create the output buffer.

8
00:00:32,140 --> 00:00:35,740
Let's call the OB start function to open the buffer.

9
00:00:37,880 --> 00:00:41,840
Next, add closing and opening up tags.

10
00:00:43,990 --> 00:00:47,460
Afterward create a variable called outputs.

11
00:00:47,470 --> 00:00:54,070
The value for this variable will be the return value of the object contents function.

12
00:00:56,350 --> 00:01:00,610
Let's close the buffer by using the OB and clean function.

13
00:01:02,810 --> 00:01:06,080
Lastly, let's return the output variable.

14
00:01:08,190 --> 00:01:11,050
This is the standard setup for adding buffers.

15
00:01:11,070 --> 00:01:14,190
It's not going to change for the rest of this course.

16
00:01:14,220 --> 00:01:18,090
Repeatedly writing these lines of code can feel monotonous.

17
00:01:18,090 --> 00:01:24,540
Let's convert these lines into a snippet, select the inner contents of the function, but do not select

18
00:01:24,540 --> 00:01:27,420
the function itself during the selection.

19
00:01:27,420 --> 00:01:32,790
Include the indentation for the first line, otherwise it will not be included.

20
00:01:32,790 --> 00:01:35,010
Next under the View Menu.

21
00:01:35,010 --> 00:01:37,590
Select the command palette option.

22
00:01:39,720 --> 00:01:42,990
Search for a command called generate snippets.

23
00:01:45,100 --> 00:01:49,120
For the name of snippets, let's call it block output buffer.

24
00:01:51,280 --> 00:01:53,720
The scope option can be left empty.

25
00:01:53,740 --> 00:01:54,970
We do not need it.

26
00:01:55,000 --> 00:01:57,090
Next, we can add a prefix.

27
00:01:57,100 --> 00:02:00,640
Let's set the prefix to block output buffer.

28
00:02:02,830 --> 00:02:05,190
Lastly, we can give a description.

29
00:02:05,200 --> 00:02:07,480
Set the description to the following.

30
00:02:07,480 --> 00:02:10,210
Adds an output buffer for blocks.

31
00:02:12,370 --> 00:02:16,150
After entering our options, the snippets should have been generated.

32
00:02:16,150 --> 00:02:21,430
Let's add our snippet to Visual Studio code under the file menu.

33
00:02:21,430 --> 00:02:23,500
Navigate to preferences.

34
00:02:23,500 --> 00:02:24,910
User Snippets.

35
00:02:27,190 --> 00:02:31,270
Visual Studio code will ask for a specific file type.

36
00:02:31,300 --> 00:02:33,640
Our snippet is written with PHP.

37
00:02:33,670 --> 00:02:36,610
Let's select PHP from the list.

38
00:02:38,700 --> 00:02:40,680
Inside the JSON object.

39
00:02:40,680 --> 00:02:42,960
Paste the snippet at the bottom.

40
00:02:45,100 --> 00:02:48,990
After adding the snippets, we can begin using it immediately.

41
00:02:49,000 --> 00:02:53,470
Let's try testing our snippets back inside the PHP file.

42
00:02:53,470 --> 00:02:56,560
Let's remove the inner contents of the function.

43
00:02:58,680 --> 00:03:01,890
Next, let's begin typing our prefix.

44
00:03:01,890 --> 00:03:06,390
As we do so, the option for adding the snippet will become available.

45
00:03:06,390 --> 00:03:11,460
If we select this snippet, the file will be pre-filled with our code.

46
00:03:11,490 --> 00:03:14,430
Awesome snippets can work for any language.

47
00:03:14,430 --> 00:03:17,490
We're not restricted to a specific file type.

48
00:03:17,670 --> 00:03:23,880
The final step for our function is to add the templates in the resource section of this lecture.

49
00:03:23,880 --> 00:03:25,980
I provide a link to the templates.

50
00:03:26,820 --> 00:03:28,330
From this gist.

51
00:03:28,350 --> 00:03:30,780
Copy the template to your clipboard.

52
00:03:32,850 --> 00:03:33,600
Next.

53
00:03:33,630 --> 00:03:36,600
Head back to the editor inside the buffer zone.

54
00:03:36,600 --> 00:03:38,610
Let's insert the template.

55
00:03:40,820 --> 00:03:42,820
The template is very large.

56
00:03:42,830 --> 00:03:47,860
You'll be able to view the design after we've refreshed the page in the browser.

57
00:03:47,870 --> 00:03:52,040
Before we do, let's conditionally render the registration form.

58
00:03:52,040 --> 00:03:58,550
As a reminder, we provided the option for disabling the registration form at the top of the function.

59
00:03:58,550 --> 00:04:02,390
Let's grab the attributes by adding the attributes arguments.

60
00:04:04,500 --> 00:04:08,600
Next we are going to disable the link for the registration form.

61
00:04:08,610 --> 00:04:12,320
As you'll soon see, the forms are wrapped with tabs.

62
00:04:12,330 --> 00:04:15,480
Visitors will be able to switch between forms.

63
00:04:15,480 --> 00:04:19,500
You must conditionally render the tab for the registration form.

64
00:04:19,500 --> 00:04:24,210
You can find the tab by searching for a comment that says Register Tab.

65
00:04:26,480 --> 00:04:30,750
Under this comment, we are going to find a list item element.

66
00:04:30,770 --> 00:04:33,570
This element should be conditionally rendered.

67
00:04:33,590 --> 00:04:36,440
Above the comment enter pvp mode.

68
00:04:38,650 --> 00:04:40,900
Next, add in if statements.

69
00:04:42,960 --> 00:04:45,660
Inside the condition of the if statements.

70
00:04:45,660 --> 00:04:49,980
We are going to check if the show register attribute is true.

71
00:04:52,160 --> 00:04:53,990
Inside the block of code.

72
00:04:53,990 --> 00:04:55,670
Add closing and opening.

73
00:04:56,040 --> 00:04:57,110
PHP tags.

74
00:04:59,180 --> 00:05:04,490
Lastly, let's move the list item element inside the conditional block.

75
00:05:06,680 --> 00:05:08,350
We've taken care of the tab.

76
00:05:08,360 --> 00:05:11,290
However, the form will continue to appear.

77
00:05:11,300 --> 00:05:15,710
The form should be conditionally rendered to inside the template.

78
00:05:15,710 --> 00:05:21,200
You can find the form by searching for an HTML comment that says Register form.

79
00:05:23,360 --> 00:05:24,740
Below this comment.

80
00:05:24,740 --> 00:05:26,520
There is a form element.

81
00:05:26,540 --> 00:05:30,000
This entire element should be conditionally rendered.

82
00:05:30,020 --> 00:05:33,660
The process is going to be exactly the same as before.

83
00:05:33,680 --> 00:05:36,320
Enter php mode above the comment.

84
00:05:38,540 --> 00:05:43,490
Add in if statement with the show register attribute as the condition.

85
00:05:45,640 --> 00:05:46,270
In search.

86
00:05:46,270 --> 00:05:48,370
Closing and opening tags.

87
00:05:50,520 --> 00:05:53,970
Lastly, move the form into the conditional block.

88
00:05:56,040 --> 00:06:02,760
After making those changes, we can finally test our block and your browser refresh the experimental

89
00:06:02,760 --> 00:06:03,510
page.

90
00:06:05,590 --> 00:06:10,730
Initially, the authentication modal block will not be visible by default.

91
00:06:10,750 --> 00:06:13,030
I've hidden the modal with CSS.

92
00:06:13,030 --> 00:06:18,970
We can temporarily view the modal by modifying the CSS and the developer tools.

93
00:06:18,970 --> 00:06:20,770
Open the elements panel.

94
00:06:22,880 --> 00:06:29,570
Search for an element with a class called WP BLOCK Utility plus off modal.

95
00:06:31,880 --> 00:06:36,050
On the sidebar search for the styles that we've applied to this element.

96
00:06:36,080 --> 00:06:37,820
There are a few properties.

97
00:06:37,820 --> 00:06:41,850
However, the property we care about is the display property.

98
00:06:41,870 --> 00:06:44,840
Let's disable this property from the element.

99
00:06:44,870 --> 00:06:48,270
After doing so, the model should appear on the page.

100
00:06:48,290 --> 00:06:51,860
You should be presented with the same UI element as me.

101
00:06:51,890 --> 00:06:52,810
Perfect.

102
00:06:52,820 --> 00:06:59,330
By default, the registration form should appear if it isn't double check list settings for the block.

103
00:06:59,360 --> 00:07:01,720
You may have accidentally disabled it.

104
00:07:01,730 --> 00:07:07,970
After verifying the block has been added, we can start to work on the forms in the next lecture.

105
00:07:07,970 --> 00:07:11,210
We are going to begin with the registration form.

