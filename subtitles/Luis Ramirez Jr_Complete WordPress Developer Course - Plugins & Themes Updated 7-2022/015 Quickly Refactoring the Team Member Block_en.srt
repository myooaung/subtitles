1
00:00:00,150 --> 00:00:07,290
In this lecture, we are going to refactor the team member block in my editor I have the index JS file

2
00:00:07,290 --> 00:00:07,920
opened.

3
00:00:07,920 --> 00:00:10,110
This file is starting to get large.

4
00:00:10,110 --> 00:00:13,530
It's going to continue to grow in future lectures.

5
00:00:13,530 --> 00:00:17,970
We are going to start adding code for modifying the team member image.

6
00:00:17,970 --> 00:00:23,160
In addition, the social media links must be functional to reduce bloat.

7
00:00:23,160 --> 00:00:28,110
I recommend separating the edit and save functions into separate files.

8
00:00:28,320 --> 00:00:32,310
It's common practice to create separate files for each function.

9
00:00:32,310 --> 00:00:35,970
You will see this practice implemented in various blocks.

10
00:00:35,970 --> 00:00:38,610
It's a great way to refactor a block.

11
00:00:38,610 --> 00:00:43,230
Let's give it a shot inside the directory for the team member block.

12
00:00:43,230 --> 00:00:48,300
Create two files called Edit JS and Save JS.

13
00:00:50,400 --> 00:00:51,090
Next.

14
00:00:51,090 --> 00:00:54,580
Let's switch back to the index file from this file.

15
00:00:54,600 --> 00:00:56,160
Cut the edit function.

16
00:00:58,450 --> 00:01:00,670
Paste it into the edit file.

17
00:01:02,690 --> 00:01:06,110
Next, replace the name with the function keyword.

18
00:01:08,240 --> 00:01:12,140
Lastly, export the function under the default namespace.

19
00:01:14,190 --> 00:01:15,720
Back in the index file.

20
00:01:15,720 --> 00:01:17,550
Grab the save function.

21
00:01:19,550 --> 00:01:22,220
We are going to do the same thing as before.

22
00:01:22,250 --> 00:01:25,250
Export this function from the saved file.

23
00:01:27,340 --> 00:01:31,450
Both files won't be functional without the proper import statements.

24
00:01:31,480 --> 00:01:36,880
Let's start moving the import statements to their respective files in the index file.

25
00:01:36,880 --> 00:01:44,200
Grab the import statements for the block editor, i.e. 18 n components, blob and element packages.

26
00:01:46,400 --> 00:01:49,670
Paste these import statements into the edit file.

27
00:01:51,730 --> 00:01:56,080
Next pace these same import statements into these saved file.

28
00:01:58,250 --> 00:02:03,080
They say Phil does not need the components blob and element packages.

29
00:02:03,080 --> 00:02:04,910
We can safely remove them.

30
00:02:07,070 --> 00:02:09,050
From the block ed package.

31
00:02:09,050 --> 00:02:13,580
Remove the inspector controls and media placeholder components.

32
00:02:15,720 --> 00:02:21,900
After moving everything over, we can start importing these functions back into the index file at the

33
00:02:21,900 --> 00:02:27,390
top of the file, import the edit and save functions from their respective files.

34
00:02:32,140 --> 00:02:37,120
The last step is to add these functions to the register block type function.

35
00:02:39,260 --> 00:02:42,410
Hopefully nothing is broken just to make sure.

36
00:02:42,410 --> 00:02:45,830
Let's try testing our block in the Gutenberg Editor.

37
00:02:45,830 --> 00:02:49,220
Try adding the team members block to the ED.

38
00:02:51,300 --> 00:02:53,110
The block is fully functional.

39
00:02:53,130 --> 00:02:55,520
Everything we've worked on still works.

40
00:02:55,530 --> 00:02:58,560
We can add an image or modify the bio.

41
00:02:58,590 --> 00:03:02,610
The block is working as intended by refactoring our code.

42
00:03:02,640 --> 00:03:05,100
It will be easier to navigate around.

43
00:03:05,130 --> 00:03:07,470
This step is completely optional.

44
00:03:07,500 --> 00:03:10,380
You can continue working within a single file.

45
00:03:10,380 --> 00:03:15,480
However, splitting your code into files will make it easier to develop blocks.

