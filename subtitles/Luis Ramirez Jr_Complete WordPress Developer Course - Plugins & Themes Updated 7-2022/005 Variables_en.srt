1
00:00:00,210 --> 00:00:03,690
In this lecture, we are going to dive into variables.

2
00:00:03,690 --> 00:00:10,350
The concept of a variable in JavaScript is the same as the concept of a variable in PHP.

3
00:00:10,380 --> 00:00:13,350
They are a feature in a language for storing data.

4
00:00:13,350 --> 00:00:21,150
We can store names, addresses, prices, images, etc. Let's try writing a variable in JavaScript.

5
00:00:21,180 --> 00:00:28,140
In my browser I have these sources panel opened from the developer tools under the snippet section.

6
00:00:28,140 --> 00:00:33,060
Let's edit the index JS file by deleting the files contents.

7
00:00:33,060 --> 00:00:36,480
We're not going to need the code from the previous lecture.

8
00:00:36,480 --> 00:00:38,940
Let's start fresh next.

9
00:00:38,940 --> 00:00:40,920
Let's type in the following code.

10
00:00:40,920 --> 00:00:43,740
Let my name equals John.

11
00:00:45,970 --> 00:00:49,100
Variables are created with the left keyword.

12
00:00:49,120 --> 00:00:50,950
It's a strange keyword name.

13
00:00:50,980 --> 00:00:56,080
However, the idea is to read it as let my name be the value of John.

14
00:00:56,080 --> 00:01:02,320
By typing the let keyword, we're giving instructions to the machine to store a value in memory.

15
00:01:02,320 --> 00:01:06,030
Next, we need to provide a name for our variable.

16
00:01:06,040 --> 00:01:09,880
In this example, we're setting the name to my name.

17
00:01:12,070 --> 00:01:14,520
There are rules for variable names.

18
00:01:14,530 --> 00:01:20,620
The name of a variable must begin with a letter, underscore character or a dollar sign character.

19
00:01:20,620 --> 00:01:26,950
The rest of the name can contain letters, numbers, underscores or dollar sign characters.

20
00:01:26,950 --> 00:01:30,060
Spaces and reserved keywords are not allowed.

21
00:01:30,070 --> 00:01:34,270
For example, we can't use the word let as a variable name.

22
00:01:34,270 --> 00:01:37,220
JavaScript would not be able to run your code.

23
00:01:37,240 --> 00:01:40,690
Lastly, variable names are case sensitive.

24
00:01:42,890 --> 00:01:47,000
The last step for creating a variable is to give it a value.

25
00:01:47,030 --> 00:01:49,280
This step is completely optional.

26
00:01:49,310 --> 00:01:53,060
Variables can be declared without being given a value.

27
00:01:53,240 --> 00:01:57,300
By default, JavaScript will set the value to undefined.

28
00:01:57,320 --> 00:02:01,160
In most cases, you will assign a value to a variable.

29
00:02:01,190 --> 00:02:04,160
In this example, we're setting it to a string.

30
00:02:06,400 --> 00:02:12,910
There is a famous analogy for describing what variables do in a programming language by typing the word

31
00:02:12,910 --> 00:02:13,480
let's.

32
00:02:13,510 --> 00:02:16,260
We're creating a box for storing items.

33
00:02:16,270 --> 00:02:19,640
Next, we are labeling the box with a variable name.

34
00:02:19,660 --> 00:02:24,020
In this example, we are setting the boxes label to my name.

35
00:02:24,040 --> 00:02:27,370
Lastly, the data is stored inside the box.

36
00:02:27,370 --> 00:02:32,890
The text that appears after the equal sign character is considered the value.

37
00:02:35,170 --> 00:02:38,430
Variables can be referenced later in our program.

38
00:02:38,440 --> 00:02:45,550
Let's try using the alert function to output the variable from the my name variable below the variable

39
00:02:45,550 --> 00:02:46,420
definition.

40
00:02:46,420 --> 00:02:50,230
Run the alert function with the my alert variable.

41
00:02:52,490 --> 00:02:54,380
Next run the script.

42
00:02:54,410 --> 00:02:59,120
After doing so, the alert box will display the value from the variable.

43
00:02:59,150 --> 00:03:07,280
Perfect variables are incredibly powerful for storing and reusing data at later points in our application.

44
00:03:07,280 --> 00:03:12,080
Let's keep exploring Java Scripts features in the next set of lectures.

