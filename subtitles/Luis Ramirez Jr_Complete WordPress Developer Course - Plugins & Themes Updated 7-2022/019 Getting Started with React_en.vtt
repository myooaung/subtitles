WEBVTT
1
00:00:00.090 --> 00:00:03.340
In this lecture, we are going to get started with React.

2
00:00:03.360 --> 00:00:07.830
Like I said before, we're not going to be getting into the tools of React.

3
00:00:07.860 --> 00:00:11.470
Diving into these tools can be overwhelming for beginners.

4
00:00:11.490 --> 00:00:16.680
I think the best way to start learning react is to have an easy environment to work in.

5
00:00:16.710 --> 00:00:19.210
In the resource section of this lecture.

6
00:00:19.230 --> 00:00:22.170
I provide a link to a stack blitz.

7
00:00:22.200 --> 00:00:25.780
If you've never heard of stack lists before, that's fine.

8
00:00:25.800 --> 00:00:29.940
They are a company that provides free development environments in the browser.

9
00:00:29.970 --> 00:00:33.870
We can get started with React without setting up an environment.

10
00:00:33.900 --> 00:00:35.190
It's quick and easy.

11
00:00:35.220 --> 00:00:40.760
Best of all, a preview of our application is available on the right side of the page.

12
00:00:40.770 --> 00:00:44.590
Any time a file is updated, the page will refresh.

13
00:00:44.610 --> 00:00:50.670
Overall, stack blitz is a great tool for testing new libraries and frameworks.

14
00:00:50.790 --> 00:00:53.430
Let's dive into the files that are available.

15
00:00:53.460 --> 00:00:57.150
There are two folders called public and source.

16
00:00:57.180 --> 00:01:02.280
In addition, we have a file in the root directory called package JSON.

17
00:01:02.310 --> 00:01:04.349
Let's open the package file.

18
00:01:06.560 --> 00:01:11.090
Inside this file, we're going to find a list of settings for our project.

19
00:01:11.120 --> 00:01:16.310
The purpose of the package JSON file is to describe our project.

20
00:01:16.340 --> 00:01:21.740
For example, there's a property called Name which stores the name of our project.

21
00:01:21.910 --> 00:01:24.560
Up next, we have the version of property.

22
00:01:24.590 --> 00:01:27.020
It's the current version of our project.

23
00:01:27.200 --> 00:01:32.280
This file is completely configurable in the resource section of this lecture.

24
00:01:32.300 --> 00:01:37.760
I provide a link to a complete list of properties that can be added to a package file.

25
00:01:37.790 --> 00:01:41.420
Feel free to check out this page after finishing this lecture.

26
00:01:41.450 --> 00:01:43.700
Let's head back to our project.

27
00:01:43.880 --> 00:01:49.070
The most important properties are the dependencies and development dependencies.

28
00:01:49.070 --> 00:01:50.060
Properties.

29
00:01:50.090 --> 00:01:52.720
React comes in the form of a package.

30
00:01:52.730 --> 00:01:57.470
Packages are third party libraries maintained by other developers.

31
00:01:57.470 --> 00:02:01.200
We can integrate them into our project by downloading them.

32
00:02:01.220 --> 00:02:06.350
The preferred method of downloading a package is by listing them inside the package.

33
00:02:06.350 --> 00:02:13.220
Dot JSON file stack blitz has been configured to download packages that have been listed in the package

34
00:02:13.220 --> 00:02:14.810
dot JSON file.

35
00:02:14.840 --> 00:02:18.140
The question is where are these packages hosted?

36
00:02:18.140 --> 00:02:25.520
In the resource section of this lecture, I provide a link to a site called NP PM and PM is considered

37
00:02:25.520 --> 00:02:30.710
the official site for uploading and downloading packages from other developers.

38
00:02:30.860 --> 00:02:33.500
There are thousands of packages available.

39
00:02:33.500 --> 00:02:40.610
You can download a package for generating a password, creating servers, etc. The Java script community

40
00:02:40.610 --> 00:02:43.760
has one of the best package ecosystems in the world.

41
00:02:43.760 --> 00:02:47.450
Best of all, most packages are completely free.

42
00:02:47.450 --> 00:02:51.950
The React team has uploaded React to the NPM registry.

43
00:02:51.950 --> 00:02:59.000
Let's head back to our file inside the dependencies object packages can be added by listing bear name

44
00:02:59.000 --> 00:03:00.530
as the property name.

45
00:03:00.530 --> 00:03:03.710
The value should be the version number for the package.

46
00:03:03.710 --> 00:03:06.950
You can download the latest version or older version.

47
00:03:06.960 --> 00:03:09.980
In our case, we're working with version 18.

48
00:03:09.980 --> 00:03:12.200
There's another package called React.

49
00:03:12.200 --> 00:03:15.020
Dom React is not a single library.

50
00:03:15.020 --> 00:03:19.280
There are dozens of other packages that can extend the React library.

51
00:03:19.310 --> 00:03:22.220
We'll explore the differences in another lecture.

52
00:03:22.460 --> 00:03:26.630
There's another list of dependencies called dev dependencies.

53
00:03:26.630 --> 00:03:31.280
In some cases, you may download packages to help you with development.

54
00:03:31.280 --> 00:03:35.960
They may not be packages that you would include with your application for production.

55
00:03:35.960 --> 00:03:40.670
You can specify development dependencies by adding them to this object.

56
00:03:40.970 --> 00:03:44.780
Lastly, we are going to ignore these scripts property.

57
00:03:44.780 --> 00:03:50.150
This property is important, but it will not be relevant until the end of this section.

58
00:03:50.150 --> 00:03:54.080
Don't worry, it's not going to impact the way we write code.

59
00:03:54.080 --> 00:03:56.750
Let's move on to the other directories.

60
00:03:56.870 --> 00:03:59.510
There's a directory called Public.

61
00:03:59.510 --> 00:04:04.340
This directory will contain the HTML file that gets loaded on the page.

62
00:04:04.340 --> 00:04:07.820
If you were to open this file, you might be surprised.

63
00:04:07.820 --> 00:04:11.990
The contents of this file do not match the contents of the documents.

64
00:04:11.990 --> 00:04:16.750
Believe it or not, the contents of the page have been generated with React.

65
00:04:16.760 --> 00:04:18.170
More on that later.

66
00:04:18.350 --> 00:04:21.560
The next directory is called Source.

67
00:04:21.560 --> 00:04:26.150
Throughout your career as a developer, you're going to encounter this directory.

68
00:04:26.150 --> 00:04:32.780
In most projects, it's considered standard practice to have a folder called Source for hosting your

69
00:04:32.780 --> 00:04:34.100
application's code.

70
00:04:34.100 --> 00:04:41.750
This way our application code is separate from the configuration code, like the package JSON file.

71
00:04:41.990 --> 00:04:48.830
There are three files called app JS, Index JS and style CSS.

72
00:04:48.830 --> 00:04:54.260
We can safely ignore the app JS and style CSS files.

73
00:04:54.260 --> 00:04:56.810
We'll revisit them in a future lecture.

74
00:04:56.810 --> 00:05:01.130
Let's shift our focus to the index JS file.

75
00:05:01.130 --> 00:05:05.720
This file is responsible for controlling the contents of the document.

76
00:05:05.720 --> 00:05:08.570
To prove it, let's clear out the file.

77
00:05:10.780 --> 00:05:14.860
By removing the original code, the page is completely blank.

78
00:05:14.890 --> 00:05:17.330
So what is going on in that file?

79
00:05:17.350 --> 00:05:21.010
Let's try recreating the file in the following lecture.

80
00:05:21.010 --> 00:05:24.820
By doing so, we won't be able to understand what's going on.

