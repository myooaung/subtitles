WEBVTT
1
00:00:00.180 --> 00:00:04.650
In this lecture we are going to briefly discuss data types in PHP.

2
00:00:04.680 --> 00:00:08.290
Data types are automatically assigned to your variables.

3
00:00:08.310 --> 00:00:12.160
This feature makes PHP a dynamically typed language.

4
00:00:12.180 --> 00:00:17.100
Fortunately, JavaScript is considered a dynamically typed language too.

5
00:00:17.130 --> 00:00:21.240
Therefore, we can expect the same behavior when working with variables.

6
00:00:21.270 --> 00:00:25.890
Regardless, let's talk about the data types available in JavaScript.

7
00:00:25.890 --> 00:00:30.180
So far we've discussed one data type, which was strings.

8
00:00:30.180 --> 00:00:33.480
Strings are a data type for storing text.

9
00:00:33.510 --> 00:00:38.100
As a refresher, strings can be created with single or double quotes.

10
00:00:38.100 --> 00:00:40.650
Both types of quotes are supported.

11
00:00:40.710 --> 00:00:46.110
The next data types are number and boolean numbers are written as is.

12
00:00:46.110 --> 00:00:52.680
They're great for storing prices, quantities, etc. As for booleans, they're written with the key

13
00:00:52.680 --> 00:00:54.650
words true and false.

14
00:00:54.660 --> 00:01:01.890
Booleans are helpful for writing conditional statements which will be exploring in another lecture afterward.

15
00:01:01.890 --> 00:01:05.310
We have the null and undefined data types.

16
00:01:05.310 --> 00:01:08.160
The null data type represents nothing.

17
00:01:08.160 --> 00:01:13.200
This data type can be useful for initializing a variable without a value.

18
00:01:13.200 --> 00:01:18.690
As for the undefined data type, this data type is assigned to a variable.

19
00:01:18.690 --> 00:01:25.440
If a variable is not assigned a value, we can consider it the default value for all variables.

20
00:01:25.440 --> 00:01:28.560
The final data type is called an object.

21
00:01:28.590 --> 00:01:32.130
Objects are a data type for storing a collection of data.

22
00:01:32.130 --> 00:01:36.570
In some cases, you may need to group data related to one another.

23
00:01:36.750 --> 00:01:39.240
There are additional types in JavaScript.

24
00:01:39.240 --> 00:01:43.740
However, these are the data types will be exploring throughout the course.

25
00:01:43.740 --> 00:01:46.200
They are the most relevant data types.

26
00:01:47.000 --> 00:01:51.690
One of the most useful keywords in JavaScript is called type of.

27
00:01:51.710 --> 00:01:56.540
In some cases, you may need to verify the data type of your values.

28
00:01:56.570 --> 00:02:02.790
It can be useful to verify a data type before checking for other loose ends in the console.

29
00:02:02.810 --> 00:02:09.500
We can write the type of keyword to instruct JavaScript to tell us the data type of a value.

30
00:02:09.680 --> 00:02:14.090
Similar to PHP, JavaScript has reserved keywords.

31
00:02:14.090 --> 00:02:20.480
There are words that will instruct the language to perform specific actions after typing the type of

32
00:02:20.480 --> 00:02:22.770
keyword we can provide a value.

33
00:02:22.790 --> 00:02:26.510
For example, let's check out the data type of a number.

34
00:02:26.690 --> 00:02:32.600
After running this line of code, the response from the console will be a string with the name of the

35
00:02:32.600 --> 00:02:33.470
data type.

36
00:02:33.500 --> 00:02:36.950
Let's try checking the data type of random text.

37
00:02:39.130 --> 00:02:42.110
The console will tell us this value is a string.

38
00:02:42.130 --> 00:02:45.640
Lastly, let's check out the data type of true.

39
00:02:50.230 --> 00:02:54.890
This value has been classified as a boolean perfect in JavaScript.

40
00:02:54.910 --> 00:02:57.220
Data types are extremely important.

41
00:02:57.250 --> 00:03:01.840
Each data type is shipped with special features for interacting with the data.

42
00:03:01.870 --> 00:03:02.980
More on that later.

43
00:03:02.980 --> 00:03:07.780
Let's begin exploring variables before jumping into these special features.

