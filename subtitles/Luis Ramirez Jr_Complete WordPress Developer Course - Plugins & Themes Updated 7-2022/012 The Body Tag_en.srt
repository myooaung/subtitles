1
00:00:00,090 --> 00:00:06,030
In this lecture, we're going to finalize the template by covering two more functions related to the

2
00:00:06,030 --> 00:00:07,050
body tag.

3
00:00:07,080 --> 00:00:10,590
WordPress does a lot to help us with creating a theme.

4
00:00:10,620 --> 00:00:16,050
Another helpful feature is generating a set of classes for the body tag.

5
00:00:16,050 --> 00:00:19,770
It's going to be incredibly helpful for styling pages.

6
00:00:19,770 --> 00:00:22,710
Let's look at why that is in your editor.

7
00:00:22,740 --> 00:00:25,590
Open the indexed PHP templates.

8
00:00:27,900 --> 00:00:31,920
On the body tag run a function called body class.

9
00:00:33,940 --> 00:00:38,540
In some cases, you may want to add classes to the body tag.

10
00:00:38,560 --> 00:00:44,200
The body class function has an optional parameter, which is a list of classes.

11
00:00:44,200 --> 00:00:50,380
These classes will be added alongside the classes generated by WordPress, for example.

12
00:00:50,380 --> 00:00:54,490
Purposes, let's try adding a class called example.

13
00:00:56,620 --> 00:01:03,160
We have the option of passing in a string of classes or an array of strings to keep it simple.

14
00:01:03,160 --> 00:01:06,460
Refresh the page with the developer tools open.

15
00:01:08,710 --> 00:01:14,020
Under the Elements panel, the body tank will contain a series of classes.

16
00:01:14,050 --> 00:01:15,440
They aren't random.

17
00:01:15,460 --> 00:01:19,720
These classes will tell you information about the page and user.

18
00:01:19,720 --> 00:01:26,640
For example, there's a class called Admin, which only appears if the current user is an administrator.

19
00:01:26,650 --> 00:01:28,840
There's another class called home.

20
00:01:28,840 --> 00:01:32,980
If the user is viewing the home page, this class gets added.

21
00:01:32,980 --> 00:01:37,270
Lastly, our example class has been added to the list.

22
00:01:37,480 --> 00:01:40,570
There are dozens of classes that can be generated.

23
00:01:40,570 --> 00:01:42,520
Let's look at another page.

24
00:01:42,520 --> 00:01:47,080
With every installation of WordPress, a sample post is added.

25
00:01:47,080 --> 00:01:51,400
Navigate to the posts page in the admin dashboard.

26
00:01:53,520 --> 00:01:56,850
Next, try viewing the post on the front end.

27
00:01:59,050 --> 00:02:05,900
This time, an entirely different set of classes has been added whenever we're viewing a single post.

28
00:02:05,920 --> 00:02:09,979
The single post class gets added, as you can see.

29
00:02:10,000 --> 00:02:14,650
WordPress will help you stylize your pages with a series of classes.

30
00:02:14,680 --> 00:02:17,380
You don't have to use them, but they are there.

31
00:02:17,410 --> 00:02:19,600
Even if you don't plan on using them.

32
00:02:19,600 --> 00:02:23,140
There may be plugins that need them better safe than sorry.

33
00:02:23,170 --> 00:02:25,540
Let's move on to one more function.

34
00:02:25,540 --> 00:02:27,490
Switch back to the templates.

35
00:02:29,680 --> 00:02:35,290
WordPress has one more function for loading tags at the beginning of the body tag.

36
00:02:35,320 --> 00:02:39,850
There are two functions for injecting tags into the body tag.

37
00:02:39,880 --> 00:02:44,080
As we've learned, the first tag is called WP Footer.

38
00:02:44,110 --> 00:02:47,930
The second function is called WP Body Open.

39
00:02:47,950 --> 00:02:51,670
Let's run this function after the opening body tag.

40
00:02:53,810 --> 00:02:58,400
These functions may seem redundant, but there is a difference between them.

41
00:02:58,430 --> 00:03:06,620
The WP Footer function allows plugins to load content at the bottom of the document, whereas the WP

42
00:03:06,620 --> 00:03:12,710
Body Open function allows plugins to load content at the beginning of the document.

43
00:03:12,740 --> 00:03:19,440
Between these functions, we should load our themes content with that final function in place.

44
00:03:19,460 --> 00:03:21,220
Our template is complete.

45
00:03:21,230 --> 00:03:24,480
We've successfully recreated the templates.

46
00:03:24,500 --> 00:03:27,040
Creating this template was not necessary.

47
00:03:27,050 --> 00:03:33,720
However, it was a great opportunity for learning WordPress default behavior with full site editing.

48
00:03:33,740 --> 00:03:39,860
Let's switch back to full site editing by changing the file name of our HTML file.

49
00:03:40,040 --> 00:03:45,620
As a reminder, the name of the file should be called index.html html.

50
00:03:47,740 --> 00:03:50,010
One more test in the browser.

51
00:03:50,020 --> 00:03:51,610
Refresh the page.

52
00:03:53,700 --> 00:03:58,660
WordPress has switched back to full site editing behind the scenes.

53
00:03:58,680 --> 00:04:05,400
WordPress will execute the exact same functions we've called in the indexed PHP file.

54
00:04:05,400 --> 00:04:11,640
In the PHP file, we can safely leave the file empty for educational purposes.

55
00:04:11,640 --> 00:04:13,920
I'm going to leave the file as is.

56
00:04:13,950 --> 00:04:18,690
However, for your themes, this file should always be empty.

