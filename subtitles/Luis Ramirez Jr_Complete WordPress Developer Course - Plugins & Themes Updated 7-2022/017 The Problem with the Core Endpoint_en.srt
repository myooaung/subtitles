1
00:00:00,490 --> 00:00:03,740
In this lecture, I want to quickly mention a problem.

2
00:00:03,760 --> 00:00:07,450
Currently I'm viewing the documentation page for the users.

3
00:00:07,450 --> 00:00:08,320
End Point.

4
00:00:08,350 --> 00:00:12,400
The core of WordPress offers an endpoint for creating a user.

5
00:00:12,430 --> 00:00:17,500
Naturally, we may assume that this endpoint should be used for registering a user.

6
00:00:17,530 --> 00:00:18,700
Not so fast.

7
00:00:18,700 --> 00:00:20,260
Things are not as they seem.

8
00:00:20,260 --> 00:00:23,260
Let me give a demonstration in another tab.

9
00:00:23,260 --> 00:00:25,180
I have our site opened.

10
00:00:25,180 --> 00:00:27,250
I'm logged out of the application.

11
00:00:27,250 --> 00:00:29,590
You do not need to follow along with me.

12
00:00:29,590 --> 00:00:33,520
It's perfectly fine to just watch inside the developer tools.

13
00:00:33,520 --> 00:00:35,980
I'm going to open the console panel.

14
00:00:38,070 --> 00:00:41,490
Next, I'm going to paste in a fat chunk of code.

15
00:00:43,590 --> 00:00:47,230
The code I've written will send a request with JavaScript.

16
00:00:47,250 --> 00:00:49,610
If this doesn't make sense, don't worry.

17
00:00:49,620 --> 00:00:55,040
We are going to be writing this code in a future lecture for demonstration purposes.

18
00:00:55,050 --> 00:00:59,220
I'm going to show you what would happen if we executed a request.

19
00:01:01,410 --> 00:01:06,120
The function I've written will send a request to the user's end point.

20
00:01:06,150 --> 00:01:08,910
It'll ask WordPress to create a user.

21
00:01:08,940 --> 00:01:14,040
After a while, an error will be thrown by the request to understand why.

22
00:01:14,070 --> 00:01:16,950
Let's switch over to the network panel.

23
00:01:16,980 --> 00:01:22,480
The network panel is capable of tracking HTTP requests with JavaScript.

24
00:01:22,500 --> 00:01:27,250
We can filter the requests by clicking on the x HR option.

25
00:01:27,270 --> 00:01:32,760
If we look at the list of requests, the user's request will appear in the list.

26
00:01:32,790 --> 00:01:35,490
As you can see, it's highlighted in red.

27
00:01:35,520 --> 00:01:39,000
This coloring indicates that the request failed.

28
00:01:39,030 --> 00:01:42,820
We can click on the request to view additional details.

29
00:01:42,840 --> 00:01:45,940
The error can be found under the response tab.

30
00:01:45,960 --> 00:01:52,870
As you can see, WordPress will send a JSON object with details of the error according to the error.

31
00:01:52,890 --> 00:01:56,220
We don't have proper permissions to create a user.

32
00:01:56,250 --> 00:01:58,110
Sounds strange, right?

33
00:01:58,140 --> 00:02:02,460
However, the user's end point was introduced for administrators.

34
00:02:02,460 --> 00:02:06,300
We must be logged in as an admin to create users.

35
00:02:06,330 --> 00:02:08,850
Otherwise, the request will fail.

36
00:02:08,880 --> 00:02:13,440
In addition, we must send a token for authorizing this action.

37
00:02:13,470 --> 00:02:17,910
This end point is not meant for anonymous users to create accounts.

38
00:02:17,940 --> 00:02:21,420
Therefore, we must create a custom endpoint.

39
00:02:21,450 --> 00:02:25,710
Our custom endpoint will allow anonymous users to create accounts.

40
00:02:25,710 --> 00:02:29,640
In the next lecture, let's create a custom endpoint.

