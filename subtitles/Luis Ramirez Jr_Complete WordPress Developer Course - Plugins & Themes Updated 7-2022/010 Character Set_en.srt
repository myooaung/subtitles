1
00:00:00,120 --> 00:00:05,939
In this lecture we will modify the character set of our document similar to before.

2
00:00:05,970 --> 00:00:08,490
The character set should be dynamic.

3
00:00:08,490 --> 00:00:13,770
Luckily WordPress stores the character set for a site in its database.

4
00:00:13,770 --> 00:00:18,000
The goal is to grab this information and render it in the browser.

5
00:00:18,000 --> 00:00:23,070
As always, WordPress has a function for addressing this specific problem.

6
00:00:23,070 --> 00:00:29,190
In the resource section of this lecture, I provide a link to a function called log info.

7
00:00:29,220 --> 00:00:33,270
The blog info function can retrieve data from the database.

8
00:00:33,270 --> 00:00:37,800
It is limited, but it can grab the character set to better understand.

9
00:00:37,800 --> 00:00:40,260
Let's read the documentation together.

10
00:00:40,260 --> 00:00:47,010
The best skill you can pick up as a developer is to learn how to read the documentation according to

11
00:00:47,010 --> 00:00:47,970
the description.

12
00:00:47,970 --> 00:00:51,750
The function will display information about the current site.

13
00:00:51,990 --> 00:00:55,770
The most useful section is the parameters section.

14
00:00:55,770 --> 00:01:00,780
The parameter section will provide a list of values we can pass into a function.

15
00:01:00,780 --> 00:01:06,450
In this example, the blog info function has a parameter called Show.

16
00:01:06,480 --> 00:01:13,110
The show parameter allows us to specify the type of value to display on the page.

17
00:01:13,260 --> 00:01:17,700
We'll find more information under the more information section.

18
00:01:17,700 --> 00:01:22,950
WordPress will provide a complete list of values that we can pass into the function.

19
00:01:23,040 --> 00:01:27,030
Different values will be rendered based on the value passed in.

20
00:01:27,060 --> 00:01:33,210
If we look through the list, we will come across an option for grabbing the character set called care

21
00:01:33,210 --> 00:01:33,960
set.

22
00:01:33,990 --> 00:01:34,920
Perfect.

23
00:01:34,920 --> 00:01:37,140
It's exactly what we were looking for.

24
00:01:37,140 --> 00:01:39,480
Let's give it a try in your editor.

25
00:01:39,480 --> 00:01:42,180
Open the indexed PHP file.

26
00:01:44,380 --> 00:01:48,670
The meta tag for adding the character set is already in our templates.

27
00:01:48,700 --> 00:01:54,080
The blog info function will output the value but not the entire meta tag.

28
00:01:54,100 --> 00:01:59,490
Therefore, we need to write the function inside the character set attributes.

29
00:01:59,590 --> 00:02:02,290
Replace the value with PHP tags.

30
00:02:04,370 --> 00:02:07,340
Next call the blog info function.

31
00:02:09,470 --> 00:02:12,760
Lastly, we can pass in a string to the function.

32
00:02:12,770 --> 00:02:17,720
The character set can be retrieved by passing in a string called care set.

33
00:02:20,020 --> 00:02:22,620
Time to test our code in your browser.

34
00:02:22,630 --> 00:02:24,160
Refresh the page.

35
00:02:26,240 --> 00:02:32,780
We can verify the character set has been added by viewing the elements panel in the Developer Tools.

36
00:02:32,780 --> 00:02:36,080
Search for the meta tag in the head tag.

37
00:02:38,230 --> 00:02:42,640
As expected, the character set has been correctly configured.

38
00:02:42,640 --> 00:02:46,690
In most cases, the character set should be UTF eight.

39
00:02:46,720 --> 00:02:49,370
It accepts a wide range of characters.

40
00:02:49,390 --> 00:02:53,260
Let's continue working on our template in the next lecture.

