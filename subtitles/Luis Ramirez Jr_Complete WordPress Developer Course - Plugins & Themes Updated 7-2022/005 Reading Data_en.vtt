WEBVTT
1
00:00:00.150 --> 00:00:04.140
In this lecture, we are going to start reading data from our database.

2
00:00:04.140 --> 00:00:08.220
Databases are very flexible with searching for data in a table.

3
00:00:08.220 --> 00:00:14.670
We can grab values from specific columns, select multiple records or search by a condition.

4
00:00:14.730 --> 00:00:16.680
Let's explore these options.

5
00:00:16.680 --> 00:00:23.400
As usual, we are going to be writing a custom query inside the form type, the select keyword.

6
00:00:25.550 --> 00:00:30.260
The select keyword will instruct the database to start searching for data.

7
00:00:30.290 --> 00:00:34.370
After this keyword, we must provide a list of columns from a table.

8
00:00:34.400 --> 00:00:38.830
The query we're building will search for IDs from the products table.

9
00:00:38.840 --> 00:00:41.060
Let's add the ID column.

10
00:00:43.130 --> 00:00:47.450
Next we can specify the table by adding the from keyword.

11
00:00:49.560 --> 00:00:52.890
After this keyword, we can provide the name of the table.

12
00:00:52.890 --> 00:00:55.290
Let's add in the products table.

13
00:00:57.440 --> 00:01:00.440
Lastly, let's try executing the query.

14
00:01:00.470 --> 00:01:04.180
After doing so, a table will be rendered above the form.

15
00:01:04.190 --> 00:01:07.880
The table contains the IDs from the products table.

16
00:01:07.880 --> 00:01:10.910
At the moment we are selecting a single column.

17
00:01:10.910 --> 00:01:17.510
Let's try selecting multiple columns back in our query, we are going to add the name column to the

18
00:01:17.510 --> 00:01:18.350
selection.

19
00:01:20.550 --> 00:01:24.040
If we execute the query, the name has been included.

20
00:01:24.060 --> 00:01:28.370
There's a short resolution for writing this query and our query.

21
00:01:28.380 --> 00:01:31.860
We're providing a complete list of columns in our table.

22
00:01:31.890 --> 00:01:37.140
Imagine if we had ten or 20 columns, this query would become large.

23
00:01:37.140 --> 00:01:43.260
While it's not uncommon to write large queries, we should keep our queries as short as possible.

24
00:01:43.380 --> 00:01:47.250
We can replace the column names with an asterisk character.

25
00:01:47.280 --> 00:01:51.540
This character is a shortcut for selecting all columns from a table.

26
00:01:51.570 --> 00:01:53.940
Let's try executing the query.

27
00:01:53.970 --> 00:01:56.640
As you can see, the results are the same.

28
00:01:56.640 --> 00:02:02.120
By using the asterisk character, we can quickly grab every value from a record.

29
00:02:02.130 --> 00:02:05.950
The query we've written will select all records from a table.

30
00:02:05.970 --> 00:02:12.570
We're not putting a limitation on the data selected by the query as SQL supports conditions in our queries.

31
00:02:12.580 --> 00:02:19.560
For example, let's say we're interested in viewing our hat products below the query and the WHERE keyword.

32
00:02:21.680 --> 00:02:25.580
This keyword allows us to filter data by adding a condition.

33
00:02:25.580 --> 00:02:30.740
In this example, let's check if the name column is equal to hats.

34
00:02:32.850 --> 00:02:39.060
In the resource section of this lecture, I provide a link to a complete list of comparison operators

35
00:02:39.060 --> 00:02:40.210
in SQL.

36
00:02:40.230 --> 00:02:45.090
You can use these comparison operators to filter through the values from a table.

37
00:02:45.120 --> 00:02:49.530
Typically, you will apply these operators against a specific column.

38
00:02:49.530 --> 00:02:50.790
Like our query.

39
00:02:50.790 --> 00:02:54.840
We're telling the database to grab products with the name hats.

40
00:02:54.840 --> 00:02:58.830
The database will perform a comparison on the name column.

41
00:02:58.830 --> 00:03:04.470
Before heading back to our query, I want to quickly mention the documentation we're viewing.

42
00:03:04.470 --> 00:03:10.350
W three Schools is an excellent resource for studying various keywords in SQL.

43
00:03:10.380 --> 00:03:15.060
On the sidebar, we are given an extensive list of possible keywords.

44
00:03:15.060 --> 00:03:17.970
I highly recommend bookmarking this page.

45
00:03:17.970 --> 00:03:22.740
Let's head back to the query at the end of the query, add a semicolon.

46
00:03:22.740 --> 00:03:27.480
If we were to execute the query, the table should contain a single record.

47
00:03:27.480 --> 00:03:34.140
However, if multiple records have the name hats, the table would return additional results.

48
00:03:34.140 --> 00:03:41.100
Overall, we are given the power to filter and search through records in a database in the next lecture.

49
00:03:41.100 --> 00:03:43.560
Let's try updating our records.

