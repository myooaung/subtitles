WEBVTT
1
00:00:00.120 --> 00:00:04.080
In this lecture, we are going to fix an issue with our team member bloc.

2
00:00:04.110 --> 00:00:08.170
This issue may not be apparent from the beginning until it becomes too late.

3
00:00:08.189 --> 00:00:10.590
Let me show you what I mean in the browser.

4
00:00:10.590 --> 00:00:14.430
I'm viewing the experimental page for this demonstration.

5
00:00:14.430 --> 00:00:16.920
I'm going to slow down my internet connection.

6
00:00:17.070 --> 00:00:22.710
The developer tools have an option for throttling, an Internet connection for testing purposes, and

7
00:00:22.710 --> 00:00:25.950
the developer tools switch over to the network panel.

8
00:00:25.950 --> 00:00:29.670
Next, there's an option at the top for throttling the connection.

9
00:00:29.670 --> 00:00:32.340
By default, throttling is turned off.

10
00:00:32.340 --> 00:00:36.180
Let's set the throttling option to the slowest speed available.

11
00:00:36.210 --> 00:00:40.620
After doing so, I'm going to add the team members group block.

12
00:00:40.620 --> 00:00:43.320
Lastly, I'm going to upload an image.

13
00:00:45.340 --> 00:00:50.020
The image is going to take a long time to upload while the image is uploading.

14
00:00:50.020 --> 00:00:52.440
Let's open the list view sidebar.

15
00:00:52.450 --> 00:00:56.860
I'm going to copy the team member block while the upload is occurring.

16
00:00:59.110 --> 00:01:03.560
Just because our upload is processing doesn't mean our attributes have not changed.

17
00:01:03.580 --> 00:01:06.280
Let's check out the attribute values.

18
00:01:08.320 --> 00:01:09.610
For your convenience.

19
00:01:09.610 --> 00:01:12.460
I provided a simplified copy of The BLOCK.

20
00:01:12.490 --> 00:01:15.390
I've stripped most of the elements and data.

21
00:01:15.400 --> 00:01:18.700
I want to focus on the image URL attribute.

22
00:01:18.730 --> 00:01:21.410
Notice anything special about this attribute?

23
00:01:21.430 --> 00:01:23.260
It's storing the blob URL.

24
00:01:23.290 --> 00:01:24.670
That's not a good thing.

25
00:01:24.850 --> 00:01:26.710
Here's the thing about blobs.

26
00:01:26.710 --> 00:01:30.190
The URLs are pointing to a file in the user's memory.

27
00:01:30.220 --> 00:01:33.100
This URL will not work on other browsers.

28
00:01:33.130 --> 00:01:35.780
In addition, blobs are temporary.

29
00:01:35.800 --> 00:01:42.060
If the same user who uploaded the file were to view this URL after opening and closing their browser,

30
00:01:42.070 --> 00:01:44.350
they would not be able to view the image.

31
00:01:46.650 --> 00:01:49.440
Our block should never store the blob irl.

32
00:01:49.470 --> 00:01:52.050
It should wait for the image to finish uploading.

33
00:01:52.080 --> 00:01:54.720
There are different ways to solve this issue.

34
00:01:54.750 --> 00:01:57.660
I think the easiest way is to use state.

35
00:01:57.660 --> 00:02:00.870
We can store the URL in the component state.

36
00:02:00.870 --> 00:02:05.760
By doing so we can store the URL without saving it with the attributes.

37
00:02:05.790 --> 00:02:10.139
After the upload is finished, we can store the URL in the attributes.

38
00:02:10.289 --> 00:02:13.500
Let's tackle the solution together in your editor.

39
00:02:13.530 --> 00:02:17.520
Open the index JS file for the team member block.

40
00:02:19.710 --> 00:02:21.180
At the top of the file.

41
00:02:21.180 --> 00:02:27.180
Import the use state function from the WordPress slash element package.

42
00:02:29.440 --> 00:02:30.040
Relax.

43
00:02:30.040 --> 00:02:32.430
Functions are available from this package.

44
00:02:32.440 --> 00:02:37.170
We do not need to import these functions from the official React package.

45
00:02:37.180 --> 00:02:44.530
Next, let's scroll to the edit function inside this function called the use state function with the

46
00:02:44.530 --> 00:02:46.510
image URI attributes.

47
00:02:48.700 --> 00:02:52.210
The initial value of our state should be the image URL.

48
00:02:52.240 --> 00:02:58.900
After creating the state, let's store the value and function in a variable called Image Preview and

49
00:02:58.900 --> 00:03:01.420
set Image Preview respectively.

50
00:03:03.620 --> 00:03:08.560
The last step is to update our template to use the state over the attribute.

51
00:03:08.570 --> 00:03:15.230
First, we are going to modify the condition for rendering the image change the condition from the image

52
00:03:15.260 --> 00:03:18.680
URL attribute to the image preview state.

53
00:03:20.900 --> 00:03:23.360
Do the same for the source attribute.

54
00:03:25.400 --> 00:03:31.070
Next apply the same changes to the argument for the IS blog URL function.

55
00:03:33.450 --> 00:03:40.350
Finally in the media placeholder component update the value for the disabled media buttons property

56
00:03:40.350 --> 00:03:42.360
to the image preview state.

57
00:03:44.640 --> 00:03:45.910
We're almost finished.

58
00:03:45.930 --> 00:03:49.590
The on select event will be updated to the function.

59
00:03:49.590 --> 00:03:52.040
Should update the state during an upload.

60
00:03:52.050 --> 00:03:56.490
First, let's move the set attribute function to the else block.

61
00:03:58.660 --> 00:04:02.540
The attributes will only be updated after the upload is complete.

62
00:04:02.560 --> 00:04:08.030
If the URL is not a blob, we can safely update the attributes after the else.

63
00:04:08.080 --> 00:04:13.870
BLOCK Let's call the set image preview function with the new image URL variable.

64
00:04:16.000 --> 00:04:22.450
By making these changes, we are not updating the attributes until a valid URL has been created.

65
00:04:22.480 --> 00:04:27.130
However, we still need to be able to preview the image for this case.

66
00:04:27.130 --> 00:04:30.370
We are storing the URL in the component state.

67
00:04:30.400 --> 00:04:32.920
Let's test our log in the browser.

68
00:04:32.950 --> 00:04:37.200
Refresh the page and add the team members group block.

69
00:04:37.210 --> 00:04:42.220
If you have throttling on, you may want to turn it off until the page has loaded.

70
00:04:44.490 --> 00:04:47.880
After the page has loaded, try uploading a new file.

71
00:04:50.020 --> 00:04:50.740
Next.

72
00:04:50.740 --> 00:04:53.440
Try copying the block to your clipboard.

73
00:04:55.650 --> 00:04:57.830
I created a copy of The BLOCK.

74
00:04:57.840 --> 00:05:02.900
Unlike last time, the blog URL is not stored in the blocks attributes.

75
00:05:02.910 --> 00:05:06.120
However, we're still able to preview the image.

76
00:05:06.270 --> 00:05:08.220
That's exactly what we wanted.

77
00:05:08.250 --> 00:05:14.040
If the user saves the block before the upload is complete, we won't have to worry about storing a block

78
00:05:14.040 --> 00:05:14.910
of URL.

79
00:05:15.090 --> 00:05:19.170
You should always be cautious with the types of values stored in your blocks.

80
00:05:19.170 --> 00:05:20.130
Attributes.

81
00:05:20.160 --> 00:05:24.480
Long URLs are not functional after the page has refreshed.

