1
00:00:00,240 --> 00:00:04,750
In this lecture we are going to recreate the mid section of our header.

2
00:00:04,770 --> 00:00:07,770
The process is going to be the same as before.

3
00:00:07,800 --> 00:00:13,270
Currently I'm viewing the home page on the front end to get a good idea of what we need.

4
00:00:13,290 --> 00:00:16,300
Let's quickly review this section of the page.

5
00:00:16,320 --> 00:00:20,580
We're going to need blocks for the logo, search form and login link.

6
00:00:20,610 --> 00:00:22,060
Simple enough, right?

7
00:00:22,080 --> 00:00:23,790
Let's check out the templates.

8
00:00:26,050 --> 00:00:32,780
In your editor, you can open the parts slash header, HTML file inside this file.

9
00:00:32,800 --> 00:00:37,570
You're going to find a comment that says mid section from the HTML block.

10
00:00:37,570 --> 00:00:42,640
This part of the template contains the mid section of our header on my screen.

11
00:00:42,640 --> 00:00:48,520
I have a simplified version of the mid section before inserting the blocks for the content of the mid

12
00:00:48,520 --> 00:00:49,120
section.

13
00:00:49,120 --> 00:00:54,580
We must wrap them with an element that will center the blocks into the center of the page.

14
00:00:54,580 --> 00:01:00,730
Unlike before, we don't need to worry about the background color, therefore we can get away with using

15
00:01:00,730 --> 00:01:01,840
a row block.

16
00:01:01,840 --> 00:01:04,900
An extra group block will not be necessary.

17
00:01:04,900 --> 00:01:08,800
The row block will contain the classes from the div tag.

18
00:01:10,430 --> 00:01:13,400
Let's try adding the roadblock to the header.

19
00:01:13,430 --> 00:01:18,540
The roadblock should sit between the first roadblock and HTML block.

20
00:01:18,560 --> 00:01:22,540
Make sure the new block does not get nested with other blocks.

21
00:01:22,550 --> 00:01:25,820
It should be added to the root level of the template.

22
00:01:27,980 --> 00:01:31,010
Next, we're going to modify the block settings.

23
00:01:31,010 --> 00:01:38,390
The classes that exist on the original div tag will apply several properties similar to before the block

24
00:01:38,390 --> 00:01:44,840
settings can configure most of these properties, therefore we're going to apply them through the settings

25
00:01:44,840 --> 00:01:45,800
by default.

26
00:01:45,830 --> 00:01:49,970
WordPress uses Flexbox to organize elements in a row.

27
00:01:50,210 --> 00:01:54,710
We can configure the content justification under the layout panel.

28
00:01:54,710 --> 00:01:57,920
Set the justification to space between.

29
00:02:00,130 --> 00:02:06,550
This setting will evenly distribute the children blocks with the justified content CSS property.

30
00:02:06,580 --> 00:02:09,820
Next, we're going to disable the ramp option.

31
00:02:12,030 --> 00:02:19,350
This option will set the flex rap CSS property to no rap, thus preventing children blocks from appearing

32
00:02:19,350 --> 00:02:20,350
on a new line.

33
00:02:20,370 --> 00:02:25,170
We are trying to restrict the blocks into a single line without overflowing.

34
00:02:25,290 --> 00:02:29,140
Up next, we are going to modify the dimensions of the block.

35
00:02:29,160 --> 00:02:31,810
One of the classes adds padding.

36
00:02:31,830 --> 00:02:37,950
We are going to set the top and bottom padding properties to 1.25 REM.

37
00:02:37,980 --> 00:02:41,520
The left and right sides of the block will be set to zero.

38
00:02:43,690 --> 00:02:48,940
In some cases, WordPress may add awkward margin spacing to the block.

39
00:02:48,970 --> 00:02:53,110
To prevent this from happening, we should reset the margins to zero.

40
00:02:53,140 --> 00:02:58,600
You can find the margin settings under the dropdown menu for the dimensions panel.

41
00:02:58,630 --> 00:03:01,570
All margin values should be set to zero.

42
00:03:03,770 --> 00:03:09,740
Lastly, the block spacing should be set to zero since there's enough breathing room for the elements

43
00:03:09,740 --> 00:03:10,580
without it.

44
00:03:12,810 --> 00:03:19,230
All values are based on the CST properties from our classes, we're simply transferring them.

45
00:03:19,260 --> 00:03:26,910
The last step is to apply the classes that don't have settings and the HTML block search for the root

46
00:03:26,910 --> 00:03:28,800
element of the mid section.

47
00:03:28,800 --> 00:03:32,220
We're going to copy all classes from the div tag.

48
00:03:34,330 --> 00:03:38,860
Next, switch back to the roadblock under the advanced panel.

49
00:03:38,860 --> 00:03:40,300
Add the classes.

50
00:03:42,440 --> 00:03:44,920
The following classes can be removed.

51
00:03:44,930 --> 00:03:45,740
Flex.

52
00:03:45,740 --> 00:03:50,840
Flex no wrap items centre pi five justify between.

53
00:03:52,960 --> 00:03:55,840
These classes are not necessary anymore.

54
00:03:55,870 --> 00:03:59,370
The lock will handle configuring these properties for us.

55
00:03:59,380 --> 00:04:02,980
We can begin to add additional blocks to the row block.

56
00:04:03,010 --> 00:04:09,100
As mentioned before, the image section comprises the logo search form and login link.

57
00:04:09,130 --> 00:04:11,170
Let's go through them one by one.

58
00:04:11,200 --> 00:04:13,360
The first block should be the logo.

59
00:04:13,390 --> 00:04:15,580
We have two options at our disposal.

60
00:04:15,610 --> 00:04:18,760
Logos can be created with text or images.

61
00:04:18,790 --> 00:04:22,750
Our theme is going to support both options to get started.

62
00:04:22,780 --> 00:04:25,020
We're going to use a text logo.

63
00:04:25,030 --> 00:04:29,870
If our theme is installed on a fresh site, clients may not have a logo ready.

64
00:04:29,890 --> 00:04:33,640
Let's add the site title block to the row block.

65
00:04:35,840 --> 00:04:40,400
Afterward, we will configure this block to match our static design.

66
00:04:42,640 --> 00:04:45,970
For reference, here's the HTML for the logo.

67
00:04:46,000 --> 00:04:54,160
We're applying three classes called Text Red, 500 font bold and text three Excel.

68
00:04:54,190 --> 00:04:59,560
These classes will modify the color, font, weight and font size of our logo.

69
00:04:59,590 --> 00:05:03,490
Luckily, we enabled all typography settings for our theme.

70
00:05:03,490 --> 00:05:07,570
We can modify these styles without resorting to classes.

71
00:05:09,790 --> 00:05:13,560
On the sidebar, we're going to modify various settings.

72
00:05:13,570 --> 00:05:16,720
First, we're going to enable the link setting.

73
00:05:16,750 --> 00:05:19,750
The logo should be clickable afterward.

74
00:05:19,750 --> 00:05:22,780
Set the link color to Udemy Primary.

75
00:05:25,040 --> 00:05:28,640
Next, let's modify the typography settings.

76
00:05:28,640 --> 00:05:31,040
The font size should be custom.

77
00:05:31,040 --> 00:05:36,230
The value for the font size is 1.875 REM.

78
00:05:38,600 --> 00:05:41,240
Update the appearance option to bold.

79
00:05:43,360 --> 00:05:46,620
Lastly, toggle the line height option.

80
00:05:46,630 --> 00:05:51,370
After doing so, the value should be set to 2.25.

81
00:05:53,640 --> 00:05:56,170
This should effectively match our design.

82
00:05:56,190 --> 00:06:00,630
Transferring the classes from the element to the block is not necessary.

83
00:06:00,660 --> 00:06:07,440
However, once again, it'll be easier for clients to modify these settings without knowledge of CSS.

84
00:06:07,470 --> 00:06:09,870
We've achieved the desired effect.

85
00:06:09,900 --> 00:06:14,010
Let's move on to the search form inside the row block.

86
00:06:14,010 --> 00:06:16,230
Add a new block called Search.

87
00:06:18,380 --> 00:06:21,900
The search bloc will add a search form to the header.

88
00:06:21,920 --> 00:06:25,550
However, it's not as flexible as we may need it to be.

89
00:06:25,580 --> 00:06:30,530
Unfortunately, it offers minimal options for modifying its properties.

90
00:06:30,560 --> 00:06:34,910
As a result, we will need to heavily rely on classes.

91
00:06:37,030 --> 00:06:42,840
For reference, here's the original markup found in the header html file.

92
00:06:42,850 --> 00:06:44,530
The form is very minimal.

93
00:06:44,530 --> 00:06:49,090
For this example, I've kept it simple to a single class.

94
00:06:49,090 --> 00:06:51,940
Let's apply this class to our block.

95
00:06:54,110 --> 00:06:56,030
Under the advanced panel.

96
00:06:56,030 --> 00:06:59,480
Add the header search form class to the block.

97
00:07:01,570 --> 00:07:03,730
Nothing's going to change with the editor.

98
00:07:03,730 --> 00:07:05,410
There's a good reason for that.

99
00:07:05,440 --> 00:07:08,410
We'll get into the details in the next lecture.

100
00:07:08,440 --> 00:07:11,030
For now, let's keep moving forward.

101
00:07:11,050 --> 00:07:14,440
There's one final UI element in the mid section.

102
00:07:14,440 --> 00:07:18,610
Switching over to the front end, we have a link for logging in.

103
00:07:18,640 --> 00:07:22,420
The UI is more complicated than the other elements.

104
00:07:22,420 --> 00:07:31,060
We have icons, different font sizes, background colors, etc. Creating this UI with WordPress blocks

105
00:07:31,060 --> 00:07:32,650
is going to be difficult.

106
00:07:32,650 --> 00:07:35,800
It's going to involve several group blocks.

107
00:07:35,800 --> 00:07:43,060
Creating a UI with multiple nested group blocks can be difficult to maintain in these cases.

108
00:07:43,060 --> 00:07:45,970
There are two options at your disposal.

109
00:07:48,270 --> 00:07:55,510
In an earlier lecture, I described the process for transforming a static template into a block template.

110
00:07:55,530 --> 00:08:00,100
There's one step that was overlooked for complex UI elements.

111
00:08:00,120 --> 00:08:03,860
It won't be possible to follow the first three steps.

112
00:08:03,870 --> 00:08:09,690
Therefore, you must either use the HTML block or create a custom lock.

113
00:08:09,720 --> 00:08:16,440
Trying to use several group blocks will make your life hard, even if you manage to recreate the UI.

114
00:08:16,470 --> 00:08:19,030
It's not going to be easy to customize.

115
00:08:19,050 --> 00:08:23,520
Furthermore, modifying the structure can break the entire element.

116
00:08:23,550 --> 00:08:29,370
For this reason, it's better just to use raw HTML or create a custom block.

117
00:08:31,390 --> 00:08:37,030
I know I've said this before, but I promise we are going to get into custom block development in a

118
00:08:37,030 --> 00:08:38,100
future section.

119
00:08:38,110 --> 00:08:46,210
For now we are going to use the HTML block in your text editor, open the header dot HTML file.

120
00:08:48,400 --> 00:08:52,600
Search for an HTML comment that says header tools.

121
00:08:54,680 --> 00:09:00,760
The log in element is housed under a single div tag with a class called Flex.

122
00:09:00,770 --> 00:09:03,380
Let's copy the entire div tag.

123
00:09:05,510 --> 00:09:06,320
Next.

124
00:09:06,350 --> 00:09:10,280
Head back to the Gutenberg editor at the end of the row.

125
00:09:10,280 --> 00:09:11,990
BLOCK for the middle section.

126
00:09:11,990 --> 00:09:14,180
Insert the HTML block.

127
00:09:16,330 --> 00:09:19,380
Inside the block paste the HTML.

128
00:09:19,390 --> 00:09:22,000
Lastly, you can save the templates.

129
00:09:22,030 --> 00:09:24,100
This solution is not ideal.

130
00:09:24,130 --> 00:09:30,520
The presentation of the template is not clear until viewing the front end switch over to the front end

131
00:09:30,520 --> 00:09:32,380
and refresh the page.

132
00:09:34,490 --> 00:09:39,290
After a few moments, the header should look closer to the original header.

133
00:09:39,320 --> 00:09:44,180
Slowly but surely the page is coming together in the next lecture.

134
00:09:44,180 --> 00:09:47,660
Let's fix some of the issues with the editor.

