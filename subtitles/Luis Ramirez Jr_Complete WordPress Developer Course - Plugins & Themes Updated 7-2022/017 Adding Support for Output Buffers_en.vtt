WEBVTT
1
00:00:00.120 --> 00:00:05.040
In this lecture we will briefly discuss enabling support for output buffers.

2
00:00:05.070 --> 00:00:07.300
PB is a modular language.

3
00:00:07.320 --> 00:00:10.320
This sets it apart from a language like JavaScript.

4
00:00:10.350 --> 00:00:14.490
We can enable or disable features from the language output.

5
00:00:14.490 --> 00:00:17.550
Buffering is a feature that can be disabled.

6
00:00:17.730 --> 00:00:21.420
A majority of host providers will enable this feature.

7
00:00:21.450 --> 00:00:24.390
Output buffering is considered part of the core.

8
00:00:24.420 --> 00:00:29.020
However, you may encounter a hosting provider that disables this feature.

9
00:00:29.040 --> 00:00:32.940
If that's the case, you should message them to enable this feature.

10
00:00:32.970 --> 00:00:37.110
Alternatively, you may be able to enable this feature yourself.

11
00:00:37.290 --> 00:00:40.630
There are different solutions for enabling this feature.

12
00:00:40.650 --> 00:00:46.020
However, the best solution is to modify PHP configuration files.

13
00:00:46.050 --> 00:00:51.730
Unfortunately, modifying the configuration files is not always guaranteed to work.

14
00:00:51.750 --> 00:00:56.590
Ultimately, host providers have the power to disable the feature altogether.

15
00:00:56.610 --> 00:01:01.350
Regardless, let's learn how to enable or disable output buffering.

16
00:01:01.350 --> 00:01:04.110
One day you may need this information.

17
00:01:04.319 --> 00:01:07.890
Open the local application from this program.

18
00:01:07.890 --> 00:01:10.350
Let's inspect the folders and files.

19
00:01:12.450 --> 00:01:16.560
Throughout this course, we've been working inside the app directory.

20
00:01:16.590 --> 00:01:19.730
This folder contains the WordPress installation.

21
00:01:19.740 --> 00:01:25.330
We are going to shift our focus to the configuration slash PHP directory.

22
00:01:25.350 --> 00:01:32.730
Inside these folders, the configuration files for PHP can be found per PHP configuration files have

23
00:01:32.730 --> 00:01:34.530
the INI extension.

24
00:01:34.560 --> 00:01:38.400
There are a couple of configuration files inside this directory.

25
00:01:38.400 --> 00:01:44.910
However, most PHP installations will have one file called php ini.

26
00:01:45.030 --> 00:01:47.550
Let's open this file in our editors.

27
00:01:50.460 --> 00:01:53.450
I and I files are similar to JSON files.

28
00:01:53.460 --> 00:01:56.930
They are files that can contain configuration settings.

29
00:01:56.940 --> 00:02:02.250
Let's quickly review the syntax settings are added as key value pairs.

30
00:02:02.250 --> 00:02:04.740
On each line we have the setting name.

31
00:02:04.740 --> 00:02:08.970
The name is followed by an equal sign symbol and the value itself.

32
00:02:09.000 --> 00:02:12.440
Some lines may begin with a semicolon character.

33
00:02:12.450 --> 00:02:14.910
This character indicates a comment.

34
00:02:14.940 --> 00:02:18.060
You can write whatever you want after this character.

35
00:02:18.720 --> 00:02:20.610
PHP has hundreds of settings.

36
00:02:20.610 --> 00:02:23.050
We can fine tune of PHP sites.

37
00:02:23.070 --> 00:02:27.180
In most cases, the default configuration can be left alone.

38
00:02:27.180 --> 00:02:32.190
Inside this file, let's search for a setting called output buffering.

39
00:02:34.460 --> 00:02:38.240
If this setting can't be found, you may add it in manually.

40
00:02:38.270 --> 00:02:41.900
Local should have the setting available within this file.

41
00:02:41.930 --> 00:02:44.780
As you can see, the setting has been enabled.

42
00:02:44.810 --> 00:02:47.820
There are three possible values for this setting.

43
00:02:47.840 --> 00:02:49.980
The option can be set to on.

44
00:02:50.000 --> 00:02:53.530
As you type this word, the word must be capitalized.

45
00:02:53.540 --> 00:02:58.640
Do not use lowercase letters by setting this option to on output.

46
00:02:58.640 --> 00:03:01.700
Buffering will be enabled to turn a setting off.

47
00:03:01.700 --> 00:03:03.930
This option can be set to off.

48
00:03:03.950 --> 00:03:07.130
Once again, the word must be capitalized.

49
00:03:07.160 --> 00:03:09.830
The last type of value can be a number.

50
00:03:09.860 --> 00:03:15.290
As a reminder, buffers are a storage mechanism for outputs by default.

51
00:03:15.320 --> 00:03:18.670
Users will be able to store a limitless amounts of data.

52
00:03:18.680 --> 00:03:22.050
This behavior can hog resources on a server.

53
00:03:22.070 --> 00:03:28.550
You can limit the storage taken by a buffer by setting a size invites local recommends setting this

54
00:03:28.550 --> 00:03:31.260
option to 4096.

55
00:03:31.280 --> 00:03:34.070
Overall enabling options is simple.

56
00:03:34.070 --> 00:03:40.070
If this doesn't work, chances are your host provider has permanently disabled output buffering.

57
00:03:40.100 --> 00:03:42.790
Typically, this shouldn't be the case.

58
00:03:42.800 --> 00:03:45.730
Output buffering doesn't cause many problems.

59
00:03:45.740 --> 00:03:49.990
I highly recommend searching for hosts that offer output buffering.

60
00:03:50.000 --> 00:03:53.330
We are going to leave this value to its default state.

61
00:03:53.330 --> 00:04:00.080
In the resource section of this lecture, I provide a link to the PHP documentation for the configuration

62
00:04:00.080 --> 00:04:00.710
file.

63
00:04:02.940 --> 00:04:05.730
I highly recommend giving this page a read.

64
00:04:05.760 --> 00:04:11.130
Messing around with the configuration file is not something you'll do often, but it's a good skill

65
00:04:11.130 --> 00:04:11.970
to have.

66
00:04:12.000 --> 00:04:18.680
Editing this file can be easy if you edit the configuration file, your server may need to be restarted.

67
00:04:18.690 --> 00:04:21.060
Let's move on to the next topic.

