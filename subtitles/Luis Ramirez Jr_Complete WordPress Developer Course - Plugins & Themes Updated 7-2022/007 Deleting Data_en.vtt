WEBVTT
1
00:00:00.120 --> 00:00:04.350
In this lecture, we are going to explore the final CRUD operation.

2
00:00:04.350 --> 00:00:09.240
So far we have created read and updated data from our table.

3
00:00:09.240 --> 00:00:13.230
The last type of operation you will perform is deletion.

4
00:00:13.230 --> 00:00:16.560
Deleting data is considered a dangerous operation.

5
00:00:16.560 --> 00:00:20.430
Once you've deleted a record from a table, it's gone forever.

6
00:00:20.430 --> 00:00:21.990
Unless you have a backup.

7
00:00:21.990 --> 00:00:24.480
Let's try creating a custom query.

8
00:00:24.480 --> 00:00:31.350
If we're deleting the second entry in our database inside the form, let's add the delete from keyword.

9
00:00:33.500 --> 00:00:39.830
The delete from keyword will instruct the database to delete a record from a specific table.

10
00:00:39.860 --> 00:00:42.800
We can specify the table after this keyword.

11
00:00:42.800 --> 00:00:45.830
Let's delete a record from the products table.

12
00:00:47.910 --> 00:00:52.120
Once again, this query can be left as is by defaults.

13
00:00:52.140 --> 00:00:57.780
All data will be deleted from a table, which isn't what we want without adding a condition.

14
00:00:57.780 --> 00:01:00.280
We are entering dangerous territory.

15
00:01:00.300 --> 00:01:04.530
In most cases we should add a condition with the WHERE keyword.

16
00:01:06.710 --> 00:01:10.100
Let's delete a record if it's ID equals to.

17
00:01:12.230 --> 00:01:14.510
Next, let's run the query.

18
00:01:16.620 --> 00:01:19.920
The query will inform us that a record has been deleted.

19
00:01:19.920 --> 00:01:23.520
We can view the products table to verify the deletion.

20
00:01:23.550 --> 00:01:26.760
Upon viewing a table, the second record is missing.

21
00:01:26.760 --> 00:01:30.300
Once again, the leading data can be a dangerous task.

22
00:01:30.610 --> 00:01:34.710
SQL does not provide an option for recovering deleted data.

23
00:01:34.710 --> 00:01:38.070
Regular backups will help you avoid a disaster.

24
00:01:38.070 --> 00:01:40.800
We've completed our training of SQL.

25
00:01:40.830 --> 00:01:44.610
Truthfully, working with databases is a job of its own.

26
00:01:44.610 --> 00:01:46.890
We've only touched the surface.

27
00:01:46.890 --> 00:01:50.970
However, this knowledge will be enough for working with WordPress.

28
00:01:51.000 --> 00:01:55.050
Additional topics will be covered as we progress through the course.

29
00:01:55.050 --> 00:02:00.900
If you're interested in learning more, there are plenty of courses available for studying SQL.

30
00:02:00.930 --> 00:02:04.080
However, it's not required to learn WordPress.

31
00:02:04.080 --> 00:02:07.260
You will be able to pick up new features along the way.

32
00:02:07.290 --> 00:02:12.870
Either way, WordPress does have functions for handling the most complicated queries.

33
00:02:12.870 --> 00:02:18.420
You can avoid writing SQL code by using WordPress before ending this lecture.

34
00:02:18.420 --> 00:02:25.650
Let's delete our table head on over to the query page on this page type in the following command drop

35
00:02:25.650 --> 00:02:27.120
table products.

36
00:02:29.240 --> 00:02:31.130
I'm omitting the semicolon.

37
00:02:31.160 --> 00:02:33.740
The semicolon is entirely optional.

38
00:02:33.740 --> 00:02:37.310
It's only required if you plan on writing multiple queries.

39
00:02:37.310 --> 00:02:41.330
The drop table keyword will delete a table from a database.

40
00:02:41.330 --> 00:02:46.220
This table was, for example, purposes it's not required to keep it around.

41
00:02:46.220 --> 00:02:48.050
Let's execute the query.

42
00:02:48.050 --> 00:02:51.560
After doing so, the tables should be gone from the list.

43
00:02:51.560 --> 00:02:52.310
Perfect.

44
00:02:52.310 --> 00:02:54.860
Let's start getting back into WordPress.

