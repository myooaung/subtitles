1
00:00:00,150 --> 00:00:03,860
In this lecture, we are going to get started with the command line.

2
00:00:03,870 --> 00:00:08,530
The command line can be intimidating, especially if you're new to web development.

3
00:00:08,550 --> 00:00:12,890
However, it's going to be a necessary skill for Gutenberg development.

4
00:00:12,900 --> 00:00:17,470
So far we've been using Stack Blitz to create an environment.

5
00:00:17,490 --> 00:00:19,860
However, we will be working locally.

6
00:00:19,890 --> 00:00:23,740
Therefore, installing React will require additional steps.

7
00:00:23,760 --> 00:00:26,070
These steps involve the command line.

8
00:00:26,070 --> 00:00:29,060
So that's what you'll be learning in this lecture.

9
00:00:29,070 --> 00:00:31,770
The command line is extremely powerful.

10
00:00:31,770 --> 00:00:34,050
There are dozens of commands available.

11
00:00:34,050 --> 00:00:37,680
Luckily, we don't need to be experts with the command line.

12
00:00:37,680 --> 00:00:41,880
In this lecture, we're going to focus on a handful of commands.

13
00:00:41,880 --> 00:00:44,850
The other commands won't be relevant to us.

14
00:00:44,940 --> 00:00:50,610
Being a master of the command line is unnecessary for getting into WordPress development.

15
00:00:50,760 --> 00:00:53,880
The commands we're going to learn will be all you'll need.

16
00:00:53,880 --> 00:00:55,110
Let's get started.

17
00:00:55,110 --> 00:00:58,770
The first step to using the command line is open it.

18
00:00:58,800 --> 00:01:05,160
If you're on a Windows Machine search for a program called PowerShell, Linux and Mac users can find

19
00:01:05,160 --> 00:01:08,730
the command line by searching for a program called Terminal.

20
00:01:08,730 --> 00:01:12,210
I'm on a Windows Machine, so I'll be using PowerShell.

21
00:01:12,420 --> 00:01:17,160
The command line is a window with a dark background and white text.

22
00:01:17,160 --> 00:01:22,260
PowerShell uses a blue background, but your operating system may use black.

23
00:01:22,260 --> 00:01:23,400
It's all the same.

24
00:01:23,400 --> 00:01:29,430
Before the existence of websites or interfaces, computer interactions were performed with the command

25
00:01:29,430 --> 00:01:29,940
line.

26
00:01:29,940 --> 00:01:35,610
Sending emails, opening files or playing audio would be performed through the command line.

27
00:01:35,610 --> 00:01:38,550
You couldn't point and click like you can today.

28
00:01:38,580 --> 00:01:42,150
Developers prefer to use the command line for running programs.

29
00:01:42,150 --> 00:01:48,360
Interfaces can consume memory and CPU usage, whereas the command line will not massively affect the

30
00:01:48,360 --> 00:01:49,890
performance of your tools.

31
00:01:49,890 --> 00:01:54,450
As developers, we should aim to develop applications as quickly as possible.

32
00:01:54,450 --> 00:01:57,960
The command line is our best bet for rapid development.

33
00:01:57,960 --> 00:02:01,380
Initially, you will not be presented with walls of text.

34
00:02:01,410 --> 00:02:05,220
Normally the command line will point to a specific directory.

35
00:02:05,220 --> 00:02:08,160
In my case, I'm unsigned the user folder.

36
00:02:08,160 --> 00:02:10,139
You may be in a different location.

37
00:02:10,139 --> 00:02:13,500
In some cases you may see a dollar sign symbol.

38
00:02:13,500 --> 00:02:17,130
This symbol separates the file path from your commands.

39
00:02:17,130 --> 00:02:22,470
If you're in a deeply nested directory, the command line may partially omit the path.

40
00:02:22,470 --> 00:02:25,320
The reason is to save space on the command line.

41
00:02:25,320 --> 00:02:31,170
It would be annoying to view the full path of a directory on every line if you're not sure where you

42
00:02:31,170 --> 00:02:35,130
are, there's a command for the current location inside the command.

43
00:02:35,130 --> 00:02:39,900
We can type in PWT, which is short for present working directory.

44
00:02:39,930 --> 00:02:44,460
Upon entering this command we are presented with the entire system path.

45
00:02:44,460 --> 00:02:49,530
If you're ever lost, this command can be helpful in giving you the current location.

46
00:02:49,680 --> 00:02:53,010
Now that we have an idea of where we are, let's move around.

47
00:02:53,010 --> 00:02:55,080
But where can we navigate to?

48
00:02:55,110 --> 00:03:01,080
Before you can navigate around, you have to know where you can navigate to the next command on our

49
00:03:01,080 --> 00:03:02,820
list is called RLS.

50
00:03:02,850 --> 00:03:05,640
This command is short for the word list.

51
00:03:05,640 --> 00:03:07,020
Enter this command.

52
00:03:07,020 --> 00:03:11,700
This command will output a list of files and folders in the current directory.

53
00:03:11,850 --> 00:03:17,790
As you can see, the command line will output the names of our files, their last modification time

54
00:03:17,790 --> 00:03:19,170
and their permissions.

55
00:03:19,170 --> 00:03:22,800
Let's try moving into a directory to move into a folder.

56
00:03:22,800 --> 00:03:27,210
We can run the CD command, which is short for a change directory.

57
00:03:27,210 --> 00:03:31,980
After this command, we must provide the name of the directory to move into.

58
00:03:31,980 --> 00:03:36,690
For this example, I'll move into the music directory just like that.

59
00:03:36,690 --> 00:03:38,730
I'm inside the music directory.

60
00:03:38,730 --> 00:03:41,580
Moving into a directory is not our only option.

61
00:03:41,580 --> 00:03:45,540
We're allowed to move out of a directory inside the command line.

62
00:03:45,540 --> 00:03:47,670
Let's run the CD command again.

63
00:03:47,670 --> 00:03:50,250
This time we'll add two dots.

64
00:03:50,250 --> 00:03:53,700
Two dots will tell the command to move up a directory.

65
00:03:53,790 --> 00:03:55,770
We are back to where we started.

66
00:03:55,770 --> 00:04:01,830
If I want it to move through multiple directories, we can separate the paths with the slash character.

67
00:04:01,830 --> 00:04:07,080
For example, we can write the following dot dot, ford slash, dot dot.

68
00:04:07,230 --> 00:04:10,890
This path will move me to the root directory of my drive.

69
00:04:10,920 --> 00:04:16,230
This behavior also applies to moving into directories as an exercise.

70
00:04:16,230 --> 00:04:18,690
Try moving back into the users folder.

71
00:04:18,690 --> 00:04:21,360
It's okay to cheat in the file explorer.

72
00:04:21,360 --> 00:04:24,870
You can take a peek at the full path with this knowledge.

73
00:04:24,870 --> 00:04:29,670
You can navigate to this directory with the CD and RLS commands.

74
00:04:29,670 --> 00:04:31,980
Pause the video and give it a try.

75
00:04:33,860 --> 00:04:34,780
Welcome back.

76
00:04:34,790 --> 00:04:38,140
If you're able to move into the correct directory, that's great.

77
00:04:38,150 --> 00:04:39,950
If not, that's fine too.

78
00:04:39,980 --> 00:04:46,370
You can reopen the command line to set you back into the original location to verify my location.

79
00:04:46,370 --> 00:04:49,090
I'm going to run the P command.

80
00:04:49,100 --> 00:04:53,690
The path should be the same path from the first time that we ran this command.

81
00:04:53,690 --> 00:04:54,950
That's basically it.

82
00:04:54,950 --> 00:04:58,550
When it comes to commands, honestly, there's not much to it.

83
00:04:58,580 --> 00:05:02,090
These commands will help you navigate around the command line.

84
00:05:02,090 --> 00:05:07,700
There are other commands that will help with modifying and deleting files, but you will not need them.

85
00:05:07,700 --> 00:05:10,370
We'll be working with an editor most of the time.

86
00:05:10,850 --> 00:05:17,240
If you have Visual Studio code like me, you'll be able to open the command line by going to terminal,

87
00:05:17,240 --> 00:05:18,290
new terminal.

88
00:05:18,320 --> 00:05:23,960
One of the great things about this is that it automatically points to the current directory you're in.

89
00:05:23,990 --> 00:05:26,720
This behavior is a huge timesaver.

90
00:05:26,720 --> 00:05:31,940
It won't be necessary to use the command to move into our project's directory.

91
00:05:31,970 --> 00:05:34,640
It's automatically pointing to this location.

92
00:05:34,820 --> 00:05:38,180
I'll be using this terminal throughout the rest of this course.

93
00:05:38,180 --> 00:05:40,100
If you don't have it, that's fine.

94
00:05:40,100 --> 00:05:44,900
You can continue using the command line your operating system has provided you.

