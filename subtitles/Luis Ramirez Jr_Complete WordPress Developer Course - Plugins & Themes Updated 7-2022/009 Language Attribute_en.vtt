WEBVTT
1
00:00:00.150 --> 00:00:06.840
In this lecture, we are going to start recreating the index template by adding the language attribute.

2
00:00:06.990 --> 00:00:11.180
Oftentimes, it can be an easily overlooked attribute.

3
00:00:11.190 --> 00:00:15.290
However, it can mean a difference in the popularity of your themes.

4
00:00:15.300 --> 00:00:17.950
Let's try adding it in your editor.

5
00:00:17.970 --> 00:00:20.820
Open the index dot php file.

6
00:00:22.910 --> 00:00:27.740
Let's replace the contents of the file with a standard HTML template.

7
00:00:27.770 --> 00:00:34.700
If you're using Visual Studio code, A templates can be quickly generated with one line of code inside

8
00:00:34.700 --> 00:00:38.350
the editor type HTML colon five.

9
00:00:38.360 --> 00:00:41.990
As you do so, your editor will recommend a templates.

10
00:00:41.990 --> 00:00:45.980
Pressing the enter key will generate an HTML template.

11
00:00:46.010 --> 00:00:46.750
Voila.

12
00:00:46.760 --> 00:00:48.980
We've got a basic starter template.

13
00:00:49.010 --> 00:00:51.470
Nothing in this template should be new to you.

14
00:00:51.500 --> 00:00:56.880
Let's shift our focus to the opening HTML tag on this tag.

15
00:00:56.900 --> 00:00:59.570
A language attribute has been added.

16
00:00:59.750 --> 00:01:05.239
The purpose of the language attribute is to help the browser identify the language.

17
00:01:05.239 --> 00:01:09.270
By doing so, search engines can correctly index a site.

18
00:01:09.290 --> 00:01:15.380
In addition, screen readers will be able to pick the correct language profile for reading a site.

19
00:01:15.410 --> 00:01:23.000
Lastly, the common use case of the language attribute is to modify the styles of a document based on

20
00:01:23.000 --> 00:01:23.990
the language.

21
00:01:24.020 --> 00:01:27.210
Let's look at an example in the body tag.

22
00:01:27.230 --> 00:01:30.440
Add a paragraph tag with dummy text.

23
00:01:32.520 --> 00:01:37.830
Next, let's add a style tag to the head section of the document.

24
00:01:40.090 --> 00:01:43.040
Dozens of languages are read from left to right.

25
00:01:43.060 --> 00:01:47.110
However, there are languages written from right to left.

26
00:01:47.140 --> 00:01:48.860
Arabic is an example.

27
00:01:48.880 --> 00:01:54.460
If our theme is active on an Arabic site, we should change the direction of our text.

28
00:01:54.460 --> 00:01:59.080
We can check the language of a document by adding the language selector.

29
00:02:01.370 --> 00:02:07.010
Inside the parentheses, we can specify the language by typing a language code.

30
00:02:07.010 --> 00:02:13.400
In the resource section of this lecture, I provide a link to a list of valid language codes.

31
00:02:15.900 --> 00:02:18.870
Language codes are preferred over full names.

32
00:02:18.900 --> 00:02:23.340
This is because languages can be spelled differently from country to country.

33
00:02:23.370 --> 00:02:27.690
Language codes provide a standardised value for each language.

34
00:02:27.720 --> 00:02:30.660
The language code for Arabic is R.

35
00:02:30.690 --> 00:02:32.790
Let's head back to our editors.

36
00:02:32.820 --> 00:02:36.390
Inside these parentheses, add in the language code.

37
00:02:38.500 --> 00:02:45.250
Next, let's change the direction by adding the direction property with a value of RTL.

38
00:02:48.780 --> 00:02:55.780
Essentially we're telling the browser to change the text direction if the documents language is Arabic.

39
00:02:55.800 --> 00:03:01.410
For demonstration purposes, let's update the language attributes to are.

40
00:03:03.600 --> 00:03:04.710
In your browser.

41
00:03:04.710 --> 00:03:06.240
Refresh the page.

42
00:03:08.430 --> 00:03:09.480
On the page.

43
00:03:09.480 --> 00:03:13.710
The text of our paragraph appears on the right side of the document.

44
00:03:13.710 --> 00:03:19.100
As theme developers, our themes should be compatible with various languages.

45
00:03:19.110 --> 00:03:22.890
It's common for sites to be multilingual, hard coding.

46
00:03:22.890 --> 00:03:27.180
The value of the language attribute is considered bad practice.

47
00:03:27.180 --> 00:03:32.100
The question is how do we generate an appropriate value for this attribute?

48
00:03:32.130 --> 00:03:37.020
WordPress has got our back in the resource section of this lecture.

49
00:03:37.020 --> 00:03:41.310
I provide a link to a function called language attributes.

50
00:03:41.400 --> 00:03:47.760
As its name suggests, this function will grab the language of the current WordPress installation.

51
00:03:47.760 --> 00:03:52.710
If a site is using French, it will set the language attribute to French.

52
00:03:52.710 --> 00:03:54.090
Let's give it a try.

53
00:03:54.120 --> 00:03:55.980
Switch back to your editor.

54
00:03:58.150 --> 00:04:03.220
Next replace the language attribute with a pair of PHP tags.

55
00:04:03.250 --> 00:04:08.840
Previously I stated that HTML couldn't be written within PHP tags.

56
00:04:08.860 --> 00:04:12.440
However, the same is not true for vice versa.

57
00:04:12.460 --> 00:04:18.010
It's perfectly acceptable to add PHP tags inside an HTML tag.

58
00:04:18.040 --> 00:04:23.980
This is how WordPress recommends that we use this function inside the PHP tags.

59
00:04:23.980 --> 00:04:27.250
Let's call the language attributes function.

60
00:04:29.490 --> 00:04:33.330
Interestingly, this function is not defined in our file.

61
00:04:33.330 --> 00:04:40.200
By registering and activating a theme, WordPress will automatically define this function for you.

62
00:04:40.320 --> 00:04:43.290
This is true for most WordPress functions.

63
00:04:43.290 --> 00:04:46.920
We don't need to do anything to start using this function.

64
00:04:46.920 --> 00:04:48.750
Let's refresh the page.

65
00:04:50.760 --> 00:04:53.550
The text has been positioned to the left.

66
00:04:53.550 --> 00:04:57.690
Personally, the current language of my site is set to English.

67
00:04:57.690 --> 00:05:04.560
We can verify the attribute has been generated by opening the developer tools under the Elements Panel,

68
00:05:04.560 --> 00:05:06.900
the browser will show the documents.

69
00:05:06.900 --> 00:05:12.090
If we look at the HTML tag, the language attribute has been added.

70
00:05:12.270 --> 00:05:18.120
The language attributes function was able to check the current configuration of our site.

71
00:05:18.120 --> 00:05:22.950
It was able to add this attribute on our behalf with the correct language.

72
00:05:22.950 --> 00:05:29.190
As a fun experiment, you can try changing the language of your site to test the behavior.

73
00:05:29.190 --> 00:05:32.100
The language code should change accordingly.

74
00:05:32.130 --> 00:05:33.720
Super easy, right?

75
00:05:33.720 --> 00:05:38.880
WordPress has a series of functions for performing the most common tasks.

76
00:05:38.880 --> 00:05:42.000
For this reason, developers love WordPress.

77
00:05:42.030 --> 00:05:49.020
A lot of the complexities are abstract and away from us that about does it for the language attributes.

78
00:05:49.020 --> 00:05:53.400
Before moving on, let's remove the style block from our document.

79
00:05:53.400 --> 00:05:55.890
It's not necessary to keep it around.

80
00:05:55.890 --> 00:05:58.980
I added it in for demonstration purposes.

81
00:05:58.980 --> 00:06:04.500
After you've removed the style block, I'll see you in the next lecture.

