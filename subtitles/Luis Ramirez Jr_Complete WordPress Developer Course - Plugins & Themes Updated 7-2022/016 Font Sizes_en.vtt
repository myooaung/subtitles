WEBVTT
1
00:00:00.150 --> 00:00:04.700
In this lecture, we are going to change the font size options for our theme.

2
00:00:04.710 --> 00:00:09.930
WordPress allows users to customize the font size options for various blocks.

3
00:00:09.930 --> 00:00:12.030
It's a heavily supported feature.

4
00:00:12.030 --> 00:00:15.810
As usual, we can recommend font sizes to our users.

5
00:00:15.810 --> 00:00:21.960
These sizes should match our theme to get started, open the theme JSON file.

6
00:00:24.150 --> 00:00:29.140
Font sizes can be recommended on a global level or block specific level.

7
00:00:29.160 --> 00:00:30.880
Let's look at both examples.

8
00:00:30.900 --> 00:00:34.410
First, let's suggest some global font sizes.

9
00:00:34.410 --> 00:00:39.660
We can configure font sizes through the typography object in the settings section.

10
00:00:39.660 --> 00:00:44.040
Inside this object, add a new property called font sizes.

11
00:00:46.290 --> 00:00:52.890
The value for this property is an array of objects where each object represents a single font size.

12
00:00:52.920 --> 00:00:56.250
Let's try adding a new font size by default.

13
00:00:56.280 --> 00:01:00.580
WordPress will recommend a series of font sizes in pixels.

14
00:01:00.600 --> 00:01:05.010
In my opinion, pixels are not the greatest unit measurement for web design.

15
00:01:05.040 --> 00:01:08.600
The most common and reliable unit measurement is REM.

16
00:01:08.610 --> 00:01:11.110
Lets convert the font sizes to REM.

17
00:01:11.130 --> 00:01:14.820
First we need to add a slug before we add the slug.

18
00:01:14.850 --> 00:01:18.300
Let's talk about the default font sizes by WordPress.

19
00:01:20.310 --> 00:01:26.690
WordPress has four font sizes, which are called small, medium, large and extra large.

20
00:01:26.700 --> 00:01:32.310
As you can see, they're using pixels by creating a new set of font sizes.

21
00:01:32.340 --> 00:01:35.910
WordPress will not delete these variables from the document.

22
00:01:35.940 --> 00:01:41.100
Interestingly, WordPress allows us to override these values with our own.

23
00:01:41.130 --> 00:01:44.220
The question becomes why would we want to do that?

24
00:01:44.250 --> 00:01:48.420
Its simple clients may not want to use our themes in the future.

25
00:01:48.450 --> 00:01:52.680
Transitioning from one theme to another should be painless as possible.

26
00:01:52.710 --> 00:01:59.910
Therefore, the WordPress community strongly encourages developers to override the font sizes for WordPress

27
00:01:59.910 --> 00:02:02.380
existing variables by doing so.

28
00:02:02.400 --> 00:02:05.310
Clients can easily move from theme to theme.

29
00:02:07.480 --> 00:02:13.360
In the resource section of this lecture, I provide a link to a blog post with more information on this

30
00:02:13.360 --> 00:02:14.060
topic.

31
00:02:14.080 --> 00:02:18.400
I highly recommend reading this blog post after you're finished this lecture.

32
00:02:18.490 --> 00:02:24.520
It's not an official recommendation, but it has gained traction for the best possible experience for

33
00:02:24.520 --> 00:02:25.420
our clients.

34
00:02:25.450 --> 00:02:31.210
We're going to override WordPress as default values with our own switch back to your editor.

35
00:02:33.330 --> 00:02:38.190
For the first font size, we're going to change the size for the small option.

36
00:02:38.190 --> 00:02:40.650
Set the slug property to small.

37
00:02:42.780 --> 00:02:45.830
We don't need to include the entire variable name.

38
00:02:45.840 --> 00:02:48.780
The name after the prefix is all we need.

39
00:02:48.810 --> 00:02:53.830
Next, let's set the size property, which will be the value for the variable.

40
00:02:53.850 --> 00:02:59.880
For this example, we're going to use the following value 0.75 REM.

41
00:03:02.060 --> 00:03:07.370
Lastly, we can add a human readable name for our signs with the name property.

42
00:03:07.400 --> 00:03:09.140
Set the name to small.

43
00:03:11.400 --> 00:03:15.300
The process for updating the other variables will be the same.

44
00:03:15.300 --> 00:03:18.810
Let's create four additional copies of this object.

45
00:03:21.040 --> 00:03:24.400
The names will be the following medium, large.

46
00:03:24.400 --> 00:03:25.330
Extra large.

47
00:03:25.330 --> 00:03:26.380
Gigantic.

48
00:03:33.240 --> 00:03:43.950
Lastly, the sizes will be the following 1.25 REM 2.25 REM three R.E.M. 3.75 REM.

49
00:03:46.280 --> 00:03:49.550
The gigantic size is not an official size.

50
00:03:49.550 --> 00:03:53.150
However, we're adding it in to test custom sizes.

51
00:03:53.180 --> 00:03:59.660
After making those changes, our font sizes should appear in the editor before testing our code.

52
00:03:59.660 --> 00:04:03.170
Let's learn how to add font sizes to a block.

53
00:04:03.170 --> 00:04:09.350
Let's take it a step further by completely disabling font sizes for the pre formatted block.

54
00:04:09.380 --> 00:04:14.750
The pre formatted block allows us to write text with preserved whitespace and formatting.

55
00:04:14.750 --> 00:04:17.839
The primary purpose of this block is to display code.

56
00:04:17.839 --> 00:04:22.700
In my opinion, it's probably a good idea to restrict typography options.

57
00:04:22.700 --> 00:04:25.820
This type of behavior will vary from theme to theme.

58
00:04:25.820 --> 00:04:33.080
First, we should select the block inside the blocks object at the core slash pre formatted block.

59
00:04:35.160 --> 00:04:37.800
Next, add the typography object.

60
00:04:39.820 --> 00:04:44.460
Two properties must be added to completely disable the font size options.

61
00:04:44.470 --> 00:04:49.930
Firstly, we must add the font sizes property with a value of an empty array.

62
00:04:52.210 --> 00:04:53.800
By adding an empty array.

63
00:04:53.830 --> 00:04:58.560
WordPress will not provide the user with a selection of predefined sizes.

64
00:04:58.570 --> 00:05:02.680
However, users will be able to configure a custom font size.

65
00:05:02.710 --> 00:05:07.480
This option can be hidden by setting the custom font size property to false.

66
00:05:09.630 --> 00:05:10.230
Great.

67
00:05:10.230 --> 00:05:13.050
Let's try testing the results in the editor.

68
00:05:15.620 --> 00:05:19.250
First, let's check out the global style sidebar.

69
00:05:19.280 --> 00:05:24.610
Under the sidebar, the typography options will display our custom font sizes.

70
00:05:24.620 --> 00:05:27.530
This includes our gigantic font size.

71
00:05:27.530 --> 00:05:32.750
Just in case we should verify WordPress variables, we're overridden with ours.

72
00:05:32.780 --> 00:05:36.350
Open the developer tools under the elements panel.

73
00:05:36.350 --> 00:05:38.030
Select the body tag.

74
00:05:40.240 --> 00:05:46.180
If we were to scroll through the long list of variables, we should find the font size variables.

75
00:05:51.560 --> 00:05:55.220
As you can see, the variables are being set to our themes.

76
00:05:55.220 --> 00:05:56.490
Custom sizes.

77
00:05:56.510 --> 00:05:59.660
WordPress is not duplicating these variables.

78
00:05:59.690 --> 00:06:04.310
If a user were to switch themes, they should be able to seamlessly do so.

79
00:06:04.340 --> 00:06:07.590
Let's move on to testing the pre formatted block.

80
00:06:07.610 --> 00:06:09.620
Add this block to your template.

81
00:06:13.880 --> 00:06:15.350
After adding this block.

82
00:06:15.350 --> 00:06:17.960
Let's check out the typography settings.

83
00:06:20.040 --> 00:06:23.090
Users will not be able to change the font size.

84
00:06:23.100 --> 00:06:25.490
We've completely restricted this block.

85
00:06:25.500 --> 00:06:26.220
Perfect.

86
00:06:26.220 --> 00:06:29.130
Let's move on to other typography settings.

