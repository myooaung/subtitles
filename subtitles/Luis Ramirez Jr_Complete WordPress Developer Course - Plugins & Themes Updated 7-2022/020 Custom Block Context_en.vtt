WEBVTT
1
00:00:00.120 --> 00:00:06.590
In this lecture, we are going to add one more feature for modifying the image of the team member block.

2
00:00:06.600 --> 00:00:11.190
In my browser, I have added the team members group block to the page.

3
00:00:11.190 --> 00:00:15.690
If I were to select this block, the sidebar would have two options.

4
00:00:15.690 --> 00:00:19.230
The second option allows us to select an image shape.

5
00:00:19.410 --> 00:00:25.350
To give you an idea of what this looks like, check out the resource section of this lecture for a link

6
00:00:25.350 --> 00:00:27.300
to a site called Clippy.

7
00:00:27.300 --> 00:00:32.850
This site provides a playground for creating custom clip paths with CSS.

8
00:00:32.880 --> 00:00:37.230
Clip paths can be applied to images to give them different shapes.

9
00:00:37.230 --> 00:00:43.680
We can select a preset or we can create a custom clip path for this course.

10
00:00:43.680 --> 00:00:49.740
I prepared the CSS file to contain classes for applying clip paths to the image.

11
00:00:52.000 --> 00:00:54.730
Clip paths can be applied with the clip path.

12
00:00:54.760 --> 00:00:56.140
CSS property.

13
00:00:56.140 --> 00:01:00.560
In total, there are three classes for modifying the images shape.

14
00:01:00.580 --> 00:01:04.379
All we need to do is apply the correct class to the image.

15
00:01:04.390 --> 00:01:08.650
You can check out the main CSS file to find this code.

16
00:01:08.680 --> 00:01:12.220
Feel free to add additional clip paths for the image.

17
00:01:14.410 --> 00:01:17.820
I've already prepared the dropdown for selecting an image.

18
00:01:17.830 --> 00:01:22.300
This dropdown is fully functional in our block configuration file.

19
00:01:22.300 --> 00:01:24.910
There's an attribute called image shape.

20
00:01:24.910 --> 00:01:28.810
This dropdown manipulates the image shape attributes.

21
00:01:28.840 --> 00:01:35.350
You may be wondering why I'm applying this attribute to the container of the block, as opposed to allowing

22
00:01:35.350 --> 00:01:38.200
individual blocks to modify this setting.

23
00:01:38.290 --> 00:01:43.720
In my opinion, it makes sense to apply the image shape to all children blocks.

24
00:01:43.750 --> 00:01:50.710
If we were to add this attribute on individual blocks, the client must update each block to change

25
00:01:50.710 --> 00:01:51.850
the image shape.

26
00:01:51.850 --> 00:01:55.690
They may want all team members to have the same image shape.

27
00:01:55.720 --> 00:01:58.480
It would be tedious to modify each block.

28
00:01:58.480 --> 00:02:02.530
Therefore, I've decided to apply this as a global setting.

29
00:02:02.770 --> 00:02:04.900
However, there's just one problem.

30
00:02:04.900 --> 00:02:07.240
This block doesn't need this data.

31
00:02:07.240 --> 00:02:10.900
The image is rendered from the individual team member blocks.

32
00:02:10.900 --> 00:02:16.660
Luckily, WordPress has a feature for communicating data between parent and child components.

33
00:02:16.690 --> 00:02:20.590
If you can recall, there's a feature called BLOCK Context.

34
00:02:20.620 --> 00:02:24.280
BLOCK context allows us to grab data from a parent source.

35
00:02:24.280 --> 00:02:27.130
We use this feature for grabbing the post ID.

36
00:02:27.160 --> 00:02:30.010
We're not limited to grabbing data from WordPress.

37
00:02:30.010 --> 00:02:35.790
We can send data from a parent block to a child block using block contexts.

38
00:02:35.800 --> 00:02:42.700
Let's explore how in your editor open the block JSON file for the team members group block.

39
00:02:44.830 --> 00:02:49.420
At the bottom of the file at a property called provides context.

40
00:02:51.610 --> 00:02:58.120
The value of this property is an object and this object we can expose attributes from this block to

41
00:02:58.120 --> 00:02:59.320
children blocks.

42
00:02:59.320 --> 00:03:03.650
The name of the property is a unique ID for identifying the data.

43
00:03:03.670 --> 00:03:10.480
As you can imagine, WordPress exposes lots of data to our blocks to prevent conflicts with existing

44
00:03:10.480 --> 00:03:11.050
data.

45
00:03:11.050 --> 00:03:16.270
It's recommended to format the ID with the plugins name followed by the attribute name.

46
00:03:16.270 --> 00:03:22.060
In our case, the name would be the following Udemy plus slash image shape.

47
00:03:24.210 --> 00:03:27.690
The value for this property must be an attribute name.

48
00:03:27.690 --> 00:03:32.070
The attribute we are trying to expose is called image shape.

49
00:03:34.180 --> 00:03:38.380
The name must match the name of the attribute from the current block.

50
00:03:38.410 --> 00:03:44.530
After updating this file, open the block JSON file for the team member block.

51
00:03:46.730 --> 00:03:51.590
At the bottom of the object at a property called Uses Context.

52
00:03:53.720 --> 00:03:58.230
This property is an array of values to accept from the parent block.

53
00:03:58.250 --> 00:04:03.890
Let's add the U2 plus slash image shape value from the parent block.

54
00:04:06.040 --> 00:04:06.740
Great.

55
00:04:06.760 --> 00:04:11.100
The attribute from the parent block will be available to the children blocks.

56
00:04:11.110 --> 00:04:14.830
We can use this data to change the shape of the image.

57
00:04:14.830 --> 00:04:18.339
Let's update the edit component to use this value.

58
00:04:20.529 --> 00:04:22.029
At the top of the function.

59
00:04:22.029 --> 00:04:26.470
Let's de structure the props for an object called context.

60
00:04:28.650 --> 00:04:33.060
The context object contains the values from the lock context.

61
00:04:33.090 --> 00:04:38.460
Next, let's use this object to generate a class before the return statement.

62
00:04:38.460 --> 00:04:41.370
Defining variable called image class.

63
00:04:43.550 --> 00:04:47.450
The value for this variable will be the following WP.

64
00:04:47.480 --> 00:04:48.110
Image.

65
00:04:48.110 --> 00:04:49.430
Image ID.

66
00:04:49.460 --> 00:04:50.900
Image context.

67
00:04:50.900 --> 00:04:51.410
Utility.

68
00:04:51.410 --> 00:04:52.730
Plus slash.

69
00:04:52.730 --> 00:04:53.870
Image shape.

70
00:04:59.020 --> 00:05:01.180
We are injecting two classes.

71
00:05:01.210 --> 00:05:07.180
The first class is related to WordPress images embedded onto the page from the media library.

72
00:05:07.180 --> 00:05:09.880
Should have the ID added to the class.

73
00:05:09.910 --> 00:05:14.590
WordPress recommends pre fixing the ID with WP image.

74
00:05:14.620 --> 00:05:19.660
It's common for plugins and themes to select images prefixed with this class.

75
00:05:19.870 --> 00:05:22.090
This class won't affect our block.

76
00:05:22.090 --> 00:05:23.530
It's not meant for us.

77
00:05:23.530 --> 00:05:25.660
It's meant for other developers.

78
00:05:25.660 --> 00:05:29.740
The second class will apply the clip path to the shape.

79
00:05:29.740 --> 00:05:33.100
I've prefixed the classes with the word image.

80
00:05:33.100 --> 00:05:38.920
This word is followed by the name of the image shape which is stored in the context object.

81
00:05:38.920 --> 00:05:44.830
Let's update the template to use this variable search for the image tag in the templates.

82
00:05:47.050 --> 00:05:50.170
On this tag, add the class name attribute.

83
00:05:50.170 --> 00:05:54.340
The value for this attribute will be the image class variable.

84
00:05:56.480 --> 00:05:57.420
We're finished.

85
00:05:57.440 --> 00:05:59.930
Let's test our blocks in the browser.

86
00:05:59.930 --> 00:06:01.400
Refresh the page.

87
00:06:03.550 --> 00:06:06.220
At the team members group lock.

88
00:06:08.270 --> 00:06:12.170
Lastly, add images to each team member block.

89
00:06:16.900 --> 00:06:20.600
By default, the blocks will have the hexagon image shape.

90
00:06:20.620 --> 00:06:24.850
We can select the team members group block to modify the shape.

91
00:06:24.850 --> 00:06:28.030
As we do so, the images change in unison.

92
00:06:28.060 --> 00:06:33.220
We've successfully communicated data from the parent block to the child block.

93
00:06:33.250 --> 00:06:37.760
Using block context is a great way to apply global settings.

94
00:06:37.780 --> 00:06:42.500
We've completed the image feature of our block in the next series of lectures.

95
00:06:42.520 --> 00:06:46.820
Our focus will be shifted to the social media links when you're ready.

96
00:06:46.840 --> 00:06:47.920
I'll see you there.

