WEBVTT
1
00:00:00.210 --> 00:00:04.950
In this lecture, we are going to optimize the attributes for the team member.

2
00:00:04.950 --> 00:00:10.620
BLOCK So far, the attributes are being saved in the HTML comment off the block.

3
00:00:10.620 --> 00:00:18.150
However, most of the attributes values can be retrieved directly from the HTML by storing attribute

4
00:00:18.150 --> 00:00:22.970
data in a comment, the size of a database entry can become significant.

5
00:00:22.980 --> 00:00:27.500
Ideally, we should reduce the amount of data stored in the database.

6
00:00:27.510 --> 00:00:32.430
The best way to reduce the clutter in a block is by updating our attributes.

7
00:00:32.430 --> 00:00:39.960
We can instruct WordPress to search for attribute values from the template as opposed to the HTML comment.

8
00:00:39.990 --> 00:00:43.380
This step is completely optional, but recommend it.

9
00:00:43.380 --> 00:00:45.810
Let's give it a try in your editor.

10
00:00:45.840 --> 00:00:48.390
Open the block JSON file.

11
00:00:50.510 --> 00:00:55.760
Let's go through the attributes one by one, starting with the name of the team member.

12
00:00:55.790 --> 00:01:02.510
First we must tell WordPress to search for the attributes value from a thin an HTML tag.

13
00:01:02.540 --> 00:01:07.160
We can do so by setting the source property to HTML.

14
00:01:09.450 --> 00:01:15.420
These source property can configure the source of the value by setting it to HTML.

15
00:01:15.450 --> 00:01:20.660
The source of the attributes value can be found within the HTML of the block.

16
00:01:20.670 --> 00:01:24.570
After setting the source at a property called Selector.

17
00:01:24.600 --> 00:01:30.390
The value for this property will be the following dot author meta strong.

18
00:01:32.660 --> 00:01:38.210
The selector property allows us to select a specific element from within the block.

19
00:01:38.210 --> 00:01:42.930
The element selected by this property should contain the value foreign attributes.

20
00:01:42.950 --> 00:01:45.630
We're using a valid CSS selector.

21
00:01:45.650 --> 00:01:48.170
All CSS selectors are supported.

22
00:01:48.260 --> 00:01:51.530
In this case, we're selecting the strong tag.

23
00:01:51.530 --> 00:01:56.360
Keep in mind, we're selecting the elements from the template saved in the database.

24
00:01:56.360 --> 00:01:59.420
It's the final rendered version of our block.

25
00:01:59.420 --> 00:02:00.830
The name is finished.

26
00:02:00.830 --> 00:02:03.800
Let's move on to the next two attributes.

27
00:02:03.800 --> 00:02:07.160
The process is going to be the same for the title.

28
00:02:07.160 --> 00:02:10.039
Set the source property to HTML.

29
00:02:12.270 --> 00:02:16.680
The selector will be the following dot author meta span.

30
00:02:18.840 --> 00:02:21.060
Next, let's update the bio.

31
00:02:21.090 --> 00:02:24.720
The source for the value can be found in the HTML.

32
00:02:26.750 --> 00:02:28.830
Let's use the following selector.

33
00:02:28.850 --> 00:02:31.400
Dot member bio p.

34
00:02:34.080 --> 00:02:37.300
We can start modifying the attributes for the image.

35
00:02:37.320 --> 00:02:40.440
The next attribute is the ID for the image.

36
00:02:40.470 --> 00:02:45.990
Unlike the other attributes, this attribute is not stored in the HTML of the block.

37
00:02:46.020 --> 00:02:51.330
For this reason, we're not going to modify this attributes configuration settings.

38
00:02:51.330 --> 00:02:54.450
The ID of an image does not take up room.

39
00:02:54.450 --> 00:02:56.700
It's safe to store it in the comment.

40
00:02:56.730 --> 00:03:00.310
Next on our list is the image alt attributes.

41
00:03:00.330 --> 00:03:03.720
Let's set the source property to attribute.

42
00:03:05.920 --> 00:03:11.560
This time the attributes value can be found within an HTML elements attributes.

43
00:03:11.590 --> 00:03:16.240
Typically, we would extract this information from the contents of a tag.

44
00:03:16.420 --> 00:03:23.170
In some cases, we may need to retrieve this information from an attribute after specifying the source.

45
00:03:23.170 --> 00:03:26.350
Set the selector property to image.

46
00:03:28.410 --> 00:03:33.270
Next we can add the attribute property to specify an attribute.

47
00:03:33.300 --> 00:03:38.940
The value for this attribute can be found from the alt attribute of the image tag.

48
00:03:41.090 --> 00:03:45.290
The same values can be applied to the image URL attribute.

49
00:03:45.320 --> 00:03:48.740
Let's copy these properties over to this attribute.

50
00:03:50.940 --> 00:03:55.950
The attribute property can be updated to the source attribute of an image.

51
00:03:58.040 --> 00:03:59.420
We're almost finished.

52
00:03:59.420 --> 00:04:03.590
The last attribute is the social handles attributes.

53
00:04:03.590 --> 00:04:09.650
This attribute is responsible for storing the links to a team members social media profiles.

54
00:04:09.650 --> 00:04:14.420
The values for this attribute are more complicated than the other attributes.

55
00:04:14.420 --> 00:04:20.360
Unlike the other attributes this attributes values can be found across multiple elements.

56
00:04:20.360 --> 00:04:26.480
If an attribute stores an array, we must set the source attribute to query.

57
00:04:28.780 --> 00:04:32.700
The query value will instruct WordPress to create an array.

58
00:04:32.710 --> 00:04:35.770
Within this array we can store objects.

59
00:04:35.770 --> 00:04:39.070
The values for the object will be based on a query.

60
00:04:39.070 --> 00:04:44.080
First, we must add the selector property with the following value.

61
00:04:44.110 --> 00:04:46.810
Dot social links a.

62
00:04:49.060 --> 00:04:53.290
Next, we can begin specifying the values to grab from this element.

63
00:04:53.320 --> 00:04:55.600
Add a property called query.

64
00:04:57.730 --> 00:05:03.850
The value for this property is an object of properties to add to the objects stored in the array.

65
00:05:03.880 --> 00:05:09.220
The object should look similar to the objects in the array of the default value.

66
00:05:09.250 --> 00:05:13.570
We will have two properties called URL and icon.

67
00:05:13.600 --> 00:05:16.180
Let's add both as property names.

68
00:05:16.210 --> 00:05:18.520
Each property will be an object.

69
00:05:20.650 --> 00:05:24.040
Inside this object, we can create a subquery.

70
00:05:24.040 --> 00:05:28.180
We must tell WordPress where to find the value for this property.

71
00:05:28.180 --> 00:05:32.130
Sub query support the same properties as the main query.

72
00:05:32.140 --> 00:05:38.410
For example, the URL of a social media link can be found on the h ref attribute.

73
00:05:38.410 --> 00:05:41.590
Let's set the source property to attributes.

74
00:05:43.710 --> 00:05:47.670
Next set the attribute property to h ref.

75
00:05:49.870 --> 00:05:52.520
We do not need to specify a selector.

76
00:05:52.540 --> 00:05:56.680
The query will automatically apply the selector from the parent.

77
00:05:56.710 --> 00:06:00.190
We can safely assume we're selecting the anchor element.

78
00:06:00.220 --> 00:06:03.970
Let's apply the same properties to the icon object.

79
00:06:06.070 --> 00:06:10.290
However, the icon is not accessible on any of the attributes.

80
00:06:10.300 --> 00:06:12.280
It does exist in the class.

81
00:06:12.280 --> 00:06:15.700
But we're not interested in selecting the entire class.

82
00:06:15.700 --> 00:06:18.370
We only want the icon name.

83
00:06:18.400 --> 00:06:23.320
Unfortunately, we can't store this value from within the HTML comment.

84
00:06:23.350 --> 00:06:26.050
The value must come from the templates.

85
00:06:26.080 --> 00:06:31.540
To resolve our issues, let's add an extra attribute for storing this info.

86
00:06:31.570 --> 00:06:34.120
Open the saved JS file.

87
00:06:36.190 --> 00:06:42.310
Scroll to the div tag with the class called social links on the anchor element.

88
00:06:42.310 --> 00:06:45.090
Add an attribute called data icon.

89
00:06:45.100 --> 00:06:49.990
The value for this icon will be the handle dot icon property.

90
00:06:52.250 --> 00:06:58.160
Now that we've stored the icon in an attribute, we can update the attributes configuration settings

91
00:06:58.160 --> 00:07:01.360
to retrieve the value back on the block file.

92
00:07:01.370 --> 00:07:05.690
Set the attribute property to the data icon attributes.

93
00:07:07.820 --> 00:07:09.610
The attributes are complete.

94
00:07:09.620 --> 00:07:12.600
Let's try testing our code in the browser.

95
00:07:12.620 --> 00:07:14.120
Refresh the page.

96
00:07:16.350 --> 00:07:21.990
I'm going to quickly add the team members group block along with some modifications.

97
00:07:29.190 --> 00:07:31.410
Next, I'll save the past.

98
00:07:33.480 --> 00:07:36.090
Lastly, all refresh the page.

99
00:07:38.530 --> 00:07:41.760
After a few moments, the block is functioning perfectly.

100
00:07:41.770 --> 00:07:44.300
We've successfully finished the block.

101
00:07:44.320 --> 00:07:50.590
You may not need to create them often, but nested blocks are an important trick to have up your sleeve.

