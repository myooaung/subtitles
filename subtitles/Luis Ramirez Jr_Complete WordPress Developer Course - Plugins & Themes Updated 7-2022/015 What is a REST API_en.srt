1
00:00:00,090 --> 00:00:05,550
In this lecture, we are going to talk about an important concept called a rest API.

2
00:00:05,580 --> 00:00:09,330
Rest stands for representational state transfer.

3
00:00:09,360 --> 00:00:10,410
That's a mouthful.

4
00:00:10,410 --> 00:00:14,310
It sounds like a complicated concept, but I promise it's not.

5
00:00:14,340 --> 00:00:20,060
Let's dive into why a rest API is useful and how it's relevant to WordPress.

6
00:00:20,070 --> 00:00:24,400
As we've learned, servers are capable of sending files to the client.

7
00:00:24,420 --> 00:00:28,800
We can send HTML video, image and audio files.

8
00:00:28,800 --> 00:00:30,170
The list is endless.

9
00:00:30,180 --> 00:00:32,820
We can even send executable files.

10
00:00:32,820 --> 00:00:36,630
Some files can be previewed from the browser such as an image.

11
00:00:36,630 --> 00:00:38,870
But what if we don't want to send a file?

12
00:00:38,880 --> 00:00:41,100
Is it possible to send data?

13
00:00:41,130 --> 00:00:42,710
The answer is yes.

14
00:00:42,720 --> 00:00:48,000
Instead of sending a file, servers can send and receive data via HTTP.

15
00:00:48,030 --> 00:00:50,250
This is known as a rest API.

16
00:00:50,280 --> 00:00:56,150
Sending data over HTTP is considered to be more efficient than sending an entire file.

17
00:00:56,160 --> 00:01:03,600
Typically the size of a file can range from a few kilobytes to megabytes, whereas data can be compressed

18
00:01:03,600 --> 00:01:05,010
into a few bytes.

19
00:01:05,040 --> 00:01:10,940
For this reason, sending data is better than refreshing the page by refreshing the page.

20
00:01:10,950 --> 00:01:16,710
The HTML images, CSS and script files must be re downloaded.

21
00:01:16,710 --> 00:01:21,310
By communicating with data, we can quickly receive a response from a server.

22
00:01:21,330 --> 00:01:24,630
This performance can enhance the user experience.

23
00:01:25,680 --> 00:01:31,840
Rest APIs are very popular with developers in the resource section of this lecture.

24
00:01:31,860 --> 00:01:37,290
I provide a link to a popular rest API playground for beginner developers.

25
00:01:37,320 --> 00:01:42,720
This site offers examples of various URLs that can accept and send data.

26
00:01:42,750 --> 00:01:47,020
If we scroll down the page, there's a section called Resources.

27
00:01:47,040 --> 00:01:49,230
Let's click on the posts link.

28
00:01:49,440 --> 00:01:53,100
Almost immediately we are going to be greeted with JSON.

29
00:01:53,130 --> 00:01:56,350
Your page may not look like mine by default.

30
00:01:56,370 --> 00:02:01,990
Most browsers do not format JSON data in the resource section of this lecture.

31
00:02:02,010 --> 00:02:05,730
I provide a link to an extension called JSON Formatter.

32
00:02:05,760 --> 00:02:10,440
This extension will add syntax highlighting to a JSON response.

33
00:02:10,470 --> 00:02:12,780
If you're not using Chrome, don't worry.

34
00:02:12,780 --> 00:02:18,480
In a moment I'll be introducing a tool for viewing data from a rest API.

35
00:02:18,840 --> 00:02:23,140
Back to the playground, we are presented with an endless sea of data.

36
00:02:23,160 --> 00:02:26,500
In a nutshell, this is what a rest API looks like.

37
00:02:26,520 --> 00:02:33,400
We are not presented with a document for viewing a page and said the server is sending data to the client.

38
00:02:33,420 --> 00:02:36,660
It's up to us to present this data to a client.

39
00:02:36,690 --> 00:02:40,530
This begs the question what does this have to do with WordPress?

40
00:02:40,560 --> 00:02:45,330
Like I said before, rest APIs are very popular with developers.

41
00:02:45,360 --> 00:02:47,840
This includes WordPress developers.

42
00:02:47,850 --> 00:02:52,900
WordPress adds a rest API for developers to take advantage of.

43
00:02:52,920 --> 00:02:59,580
We can perform requests from grabbing a list of posts to adding media and the resource section of this

44
00:02:59,580 --> 00:03:00,380
lecture.

45
00:03:00,390 --> 00:03:04,170
I provide a link to the WordPress Rest API handbook.

46
00:03:04,200 --> 00:03:08,350
Everything related to the rest API can be found in this handbook.

47
00:03:08,370 --> 00:03:12,450
On the sidebar, there's a section called endpoint reference.

48
00:03:14,590 --> 00:03:22,180
The word endpoint will pop up a lot in the documentation in regards to rest, APIs and endpoint refers

49
00:03:22,180 --> 00:03:24,050
to the path for a resource.

50
00:03:24,070 --> 00:03:28,360
For example, let's say we had a URL for retrieving a post.

51
00:03:28,390 --> 00:03:32,710
The full URL could be example slash post.

52
00:03:32,740 --> 00:03:37,450
The path appended to the end of the URL would be considered the endpoint.

53
00:03:37,570 --> 00:03:41,990
This section of the handbook will likely be the most useful resource.

54
00:03:42,100 --> 00:03:48,220
It will provide a list of URLs with additional information on data that can be sent to each URL.

55
00:03:48,250 --> 00:03:52,020
The responses are also documented in the next lecture.

56
00:03:52,030 --> 00:03:58,690
Let's get some practice with the WordPress Rest API before trying to register and log users in.

