1
00:00:00,090 --> 00:00:06,180
In this lecture, we are going to add the media library to our page for the team members.

2
00:00:06,180 --> 00:00:11,280
BLOCK We added the media library pop up for selecting an image.

3
00:00:11,280 --> 00:00:15,060
This library is not exclusive to the Gutenberg editor.

4
00:00:15,060 --> 00:00:18,030
We can render the library on other pages.

5
00:00:18,030 --> 00:00:20,940
First, we need to interview the files.

6
00:00:20,940 --> 00:00:27,690
WordPress already registers the script we can jump straight into and cueing them in your editor.

7
00:00:27,720 --> 00:00:30,120
Open the index plug and file.

8
00:00:32,159 --> 00:00:39,690
WordPress has a hook for interviewing files on the admin dashboard at the bottom of the Hooks section.

9
00:00:39,690 --> 00:00:44,100
Add an action hook called Admin and Q Scripts.

10
00:00:46,260 --> 00:00:50,220
The name of our function will be called up admin and queue.

11
00:00:52,380 --> 00:00:53,130
Next.

12
00:00:53,130 --> 00:00:58,330
Let's define this function in the includes slash admin directory.

13
00:00:58,350 --> 00:01:01,890
Create a file called nq php.

14
00:01:04,190 --> 00:01:07,310
Define the up admin and q function.

15
00:01:09,470 --> 00:01:12,800
This function will run on every admin page.

16
00:01:12,830 --> 00:01:14,300
That's not what we want.

17
00:01:14,330 --> 00:01:17,700
We shouldn't queue files for other admin pages.

18
00:01:17,720 --> 00:01:22,560
Luckily, this function will be given an argument called hook suffix.

19
00:01:22,580 --> 00:01:24,440
Let's add it to the function.

20
00:01:26,700 --> 00:01:30,750
This variable contains the name of the current admin page.

21
00:01:30,780 --> 00:01:34,620
Every page is given a name, including custom pages.

22
00:01:34,800 --> 00:01:39,120
Let's echo this variable onto the page to inspect its value.

23
00:01:41,280 --> 00:01:45,000
Next, refresh the custom admin page.

24
00:01:47,160 --> 00:01:51,000
The variables value may be obscured behind the menu.

25
00:01:51,030 --> 00:01:57,570
To view the full value, you may need to inspect the body tag in the elements panel of the developer

26
00:01:57,570 --> 00:01:58,410
tools.

27
00:02:00,530 --> 00:02:04,040
The text should appear at the top of the body tag.

28
00:02:04,070 --> 00:02:06,860
Let's copy this name to our clipboard.

29
00:02:08,900 --> 00:02:09,720
Next.

30
00:02:09,740 --> 00:02:14,630
Head back to the editor inside the function and add a conditional statement.

31
00:02:14,660 --> 00:02:20,330
The condition will check if the hook suffix variable is equal to our page's name.

32
00:02:22,550 --> 00:02:28,250
Inside the conditional lock on a function called WP in Q media.

33
00:02:30,410 --> 00:02:36,600
Typically we would call the WP and Q script function to add a script to the page.

34
00:02:36,620 --> 00:02:41,660
However, the media library has a few dependencies to save time.

35
00:02:41,690 --> 00:02:48,500
WordPress has defined a function for queuing everything at once called WP Ink Media.

36
00:02:48,530 --> 00:02:50,990
Let's try refreshing the page.

37
00:02:53,130 --> 00:02:56,460
Initially, nothing seems like it's changed.

38
00:02:56,460 --> 00:03:02,670
Before moving on, we should verify the files have been added to the browser and the developer tools.

39
00:03:02,670 --> 00:03:07,110
Search for an ID called Media Editor JS.

40
00:03:09,200 --> 00:03:15,410
If a script tag has this ID, this means you include the files for the media library.

41
00:03:15,440 --> 00:03:16,380
That's great.

42
00:03:16,400 --> 00:03:21,440
We can begin opening the media library whenever the user clicks on the button.

43
00:03:21,440 --> 00:03:22,580
On the page.

