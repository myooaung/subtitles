WEBVTT
1
00:00:00.150 --> 00:00:04.110
In this lecture, we are going to work on the page header block.

2
00:00:04.110 --> 00:00:07.260
Currently, I'm viewing the page for a category.

3
00:00:07.290 --> 00:00:12.120
At the top of the page we have a gray bar stretching from side to side.

4
00:00:12.120 --> 00:00:15.750
The name of the category gets rendered on the page.

5
00:00:15.750 --> 00:00:18.930
At the moment, the same category gets rendered.

6
00:00:18.930 --> 00:00:23.790
We should modify this section to dynamically display the current category.

7
00:00:23.910 --> 00:00:29.520
As you can imagine, we must use server side rendering to accomplish this behavior.

8
00:00:29.520 --> 00:00:31.740
However, there will be a twist.

9
00:00:31.740 --> 00:00:35.760
I think the page header can be applicable to various pages.

10
00:00:35.760 --> 00:00:39.180
Let's give clients the option of modifying the text.

11
00:00:39.180 --> 00:00:44.490
If they want to display a category, we will add an option to enable this behavior.

12
00:00:44.490 --> 00:00:45.900
Let's get started.

13
00:00:45.930 --> 00:00:49.740
As usual, we need to create the files for the block.

14
00:00:49.740 --> 00:00:52.770
After doing so, the block can be registered.

15
00:00:52.770 --> 00:00:54.570
Switch over to the editor.

16
00:00:56.720 --> 00:01:00.230
Inside the source slash block's directory.

17
00:01:00.260 --> 00:01:02.660
Create a folder called page header.

18
00:01:04.790 --> 00:01:07.550
So far we've created two blocks.

19
00:01:07.580 --> 00:01:13.430
Hopefully you have a good understanding of how to start a block to prevent the course from becoming

20
00:01:13.430 --> 00:01:14.240
repetitive.

21
00:01:14.240 --> 00:01:17.960
I'm going to start providing starter files for our blocks.

22
00:01:17.960 --> 00:01:24.110
In the resource section of this lecture, I provide a link to the starter files for the page header

23
00:01:24.110 --> 00:01:24.710
block.

24
00:01:26.760 --> 00:01:28.500
Here is what I want you to do.

25
00:01:28.530 --> 00:01:31.980
I want you to create the files listed on this page.

26
00:01:32.010 --> 00:01:35.000
They should be added to the page header folder.

27
00:01:35.010 --> 00:01:43.480
There is a total of three files called block JSON, indexed JS and main CSS along with each file.

28
00:01:43.500 --> 00:01:45.290
Grab the code for the file.

29
00:01:45.300 --> 00:01:48.420
I want you to pause the video and give it a try.

30
00:01:48.450 --> 00:01:50.310
I'm going to do the same as well.

31
00:01:50.340 --> 00:01:51.240
Good luck.

32
00:01:52.960 --> 00:01:54.010
Welcome back.

33
00:01:54.040 --> 00:01:57.190
I have successfully created the files for our block.

34
00:01:57.220 --> 00:01:59.740
Hopefully you were able to do the same.

35
00:01:59.740 --> 00:02:01.870
Let's quickly review the files.

36
00:02:01.870 --> 00:02:03.850
Starting with the block file.

37
00:02:03.850 --> 00:02:06.810
We have a typical configuration object.

38
00:02:06.820 --> 00:02:10.900
The name of the block is called Udemy Plus Page Header.

39
00:02:10.900 --> 00:02:12.820
There's nothing else worth saying.

40
00:02:12.940 --> 00:02:16.570
Let's switch over to the index JS file.

41
00:02:16.570 --> 00:02:22.300
Inside this file we are registering the block with the register block type function.

42
00:02:22.300 --> 00:02:25.240
The name has been grabbed from the block file.

43
00:02:25.240 --> 00:02:30.160
Inside the object we are adding the custom icon and edit function.

44
00:02:30.160 --> 00:02:35.650
The return value from the function is a fragment element with a div tag.

45
00:02:35.680 --> 00:02:40.060
On the div tag we are spreading the block props object.

46
00:02:40.090 --> 00:02:46.810
In a future lecture we are going to add options in the sidebar, hence why the fragment element has

47
00:02:46.810 --> 00:02:47.530
been added.

48
00:02:47.530 --> 00:02:49.300
That wraps up the files.

49
00:02:49.300 --> 00:02:51.370
It's nothing you haven't seen before.

50
00:02:51.370 --> 00:02:56.890
Let's move on to registering the block with PHP inside the includes folder.

51
00:02:56.920 --> 00:02:59.230
Open the register blocks file.

52
00:03:01.410 --> 00:03:04.860
The locks variable should be updated with the new block.

53
00:03:04.860 --> 00:03:07.830
Lets add an array with an item called name.

54
00:03:07.860 --> 00:03:10.740
Our new block will be called page header.

55
00:03:12.930 --> 00:03:17.220
Next, we are going to add the options items to the array.

56
00:03:17.310 --> 00:03:21.330
As mentioned earlier, our block is going to be rendered on the server.

57
00:03:21.360 --> 00:03:28.050
Therefore, we must provide the function's name responsible for rendering the block inside this array

58
00:03:28.050 --> 00:03:30.570
and the render callback option.

59
00:03:30.600 --> 00:03:32.670
The function will be called up.

60
00:03:32.670 --> 00:03:35.040
Page header render CB.

61
00:03:37.280 --> 00:03:40.780
After adding this array, our block has been registered.

62
00:03:40.790 --> 00:03:47.240
The final step is to define this function and prevent an error from being thrown inside the block's

63
00:03:47.240 --> 00:03:48.140
directory.

64
00:03:48.170 --> 00:03:51.920
Create a file called page header PHP.

65
00:03:54.230 --> 00:03:55.640
Inside this file.

66
00:03:55.640 --> 00:03:58.550
Define the up page header render.

67
00:03:58.580 --> 00:03:59.840
CV function.

68
00:04:02.060 --> 00:04:06.320
Lastly, we should include this file from the main plugin file.

69
00:04:06.350 --> 00:04:09.080
Open the indexed php file.

70
00:04:11.400 --> 00:04:20.220
Under the include section call the include function with the following path includes slash blocks slash

71
00:04:20.220 --> 00:04:22.470
page header php.

72
00:04:24.710 --> 00:04:25.380
Great.

73
00:04:25.400 --> 00:04:30.340
We should generate the block files before testing our code in the command line.

74
00:04:30.350 --> 00:04:31.940
If you have the server running.

75
00:04:31.970 --> 00:04:32.850
Turn it off.

76
00:04:32.870 --> 00:04:37.670
We are going to restart the command with the NPM run start command.

77
00:04:39.870 --> 00:04:42.000
After the files have been compiled.

78
00:04:42.000 --> 00:04:46.050
Let's check out the experimental page in the Gutenberg editor.

79
00:04:48.200 --> 00:04:53.230
You may need to refresh the page for the locks to appear once the editor loads.

80
00:04:53.240 --> 00:04:55.800
Try searching for the page header block.

81
00:04:55.820 --> 00:04:58.900
It should appear on the list of blocks with our icon.

82
00:04:58.910 --> 00:05:01.970
After you've found the block, add it to the page.

83
00:05:04.160 --> 00:05:07.310
The block has been successfully added to the page.

84
00:05:07.310 --> 00:05:13.340
Creating a block can take time by using the correct tools and configuring our editors.

85
00:05:13.370 --> 00:05:19.480
This process can be expedited in previous lectures, creating a block took way longer.

86
00:05:19.490 --> 00:05:25.240
However, we're now able to create blocks within minutes thanks to great preparation.

87
00:05:25.250 --> 00:05:29.300
Let's start developing our block in the next set of lectures.

