1
00:00:00,090 --> 00:00:03,310
In this lecture, we are going to add a new language.

2
00:00:03,330 --> 00:00:07,150
Our translations have been extracted into a single file.

3
00:00:07,170 --> 00:00:10,850
However, this file does not get loaded by WordPress.

4
00:00:10,860 --> 00:00:15,120
The purpose of a pot file is to serve as a starting point.

5
00:00:15,150 --> 00:00:19,170
If you were to look inside this file, there's a lot of information.

6
00:00:19,170 --> 00:00:26,340
It's not common to modify this file directly and said there are dozens of tools available for creating

7
00:00:26,340 --> 00:00:29,010
new languages from the pot file.

8
00:00:29,040 --> 00:00:33,090
In my opinion, the best tool is called Local Translate.

9
00:00:33,090 --> 00:00:35,340
Best of all, it's completely free.

10
00:00:35,340 --> 00:00:40,320
We can download this tool as a plugin in the WordPress admin dashboard.

11
00:00:40,320 --> 00:00:43,320
Navigate to the add new plugin page.

12
00:00:45,330 --> 00:00:48,570
Search for a plugin called Loco Translate.

13
00:00:50,650 --> 00:00:52,930
Install and activate this plugin.

14
00:00:56,930 --> 00:01:03,740
After activation, a new menu item will appear at the bottom of the sidebar called Loco Translate.

15
00:01:03,770 --> 00:01:05,150
Let's click on it.

16
00:01:07,400 --> 00:01:12,440
On this page, we are given a list of themes and plugins with translations.

17
00:01:12,470 --> 00:01:15,460
Technically, all plugins have translations.

18
00:01:15,470 --> 00:01:21,260
However, this plugin will only list plugins that explicitly register a text domain.

19
00:01:21,380 --> 00:01:23,750
Our plugin should appear on this list.

20
00:01:23,750 --> 00:01:24,800
Click on it.

21
00:01:27,020 --> 00:01:28,040
On this page.

22
00:01:28,040 --> 00:01:30,760
We have various options at our disposal.

23
00:01:30,770 --> 00:01:33,140
Let's try adding a new language.

24
00:01:35,270 --> 00:01:40,030
Local translate is capable of scanning our plugin for a hot file.

25
00:01:40,040 --> 00:01:47,160
It can load this file into WordPress with a simple interface for creating a new language from this file.

26
00:01:47,180 --> 00:01:50,870
In addition, local can create the pot file.

27
00:01:50,900 --> 00:01:54,170
However, I've had mixed results with this plugin.

28
00:01:54,170 --> 00:02:01,550
From my experience, generating a pot file with the CLI is more reliable than local translates.

29
00:02:01,580 --> 00:02:07,310
The configuration page will ask us to select the language for our demonstration purposes.

30
00:02:07,310 --> 00:02:09,710
Let's select the French language.

31
00:02:13,090 --> 00:02:16,150
Next we can select a name for our file.

32
00:02:16,180 --> 00:02:21,870
The recommended file name is the name of our plugin, followed by the locale of the language.

33
00:02:21,880 --> 00:02:26,390
The locale is written with the name of the language followed by the region.

34
00:02:26,410 --> 00:02:29,730
Multiple countries can speak the same language.

35
00:02:29,740 --> 00:02:34,930
However, there may be slight differences between pronunciation and tone.

36
00:02:34,930 --> 00:02:38,800
In these cases, countries can have different locales.

37
00:02:38,800 --> 00:02:43,900
The locale for French spoken by France is f, r, f, r.

38
00:02:44,050 --> 00:02:47,860
Local translate will handle setting the locale for you.

39
00:02:47,890 --> 00:02:51,120
You do not need to memorize the locales yourself.

40
00:02:51,130 --> 00:02:53,680
Let's continue with the translations.

41
00:02:55,830 --> 00:03:00,060
We will be taken to a page to translate each piece of text.

42
00:03:00,060 --> 00:03:05,100
We must manually go through each phrase to translate them into French.

43
00:03:05,130 --> 00:03:09,240
I highly recommend hiring a translator for the best results.

44
00:03:09,240 --> 00:03:15,390
For this example, I'm going to translate the word all recipes with Google Translate.

45
00:03:17,140 --> 00:03:20,610
Google may not always provide the most reliable results.

46
00:03:20,620 --> 00:03:22,660
However, it's better than nothing.

47
00:03:22,690 --> 00:03:26,440
I'm not going to translate everything to keep the lecture brief.

48
00:03:26,470 --> 00:03:30,550
After adding my translations, I'm going to click on Save.

49
00:03:32,740 --> 00:03:35,680
At the top of the page, a message will appear.

50
00:03:35,710 --> 00:03:40,540
The message indicates that APO and ML file has been created.

51
00:03:40,570 --> 00:03:44,050
Let's head over to our editors to view these files.

52
00:03:46,180 --> 00:03:51,050
As you can see, dozens of files have been created for our new language.

53
00:03:51,070 --> 00:03:54,660
Our plugin has been successfully translated to French.

54
00:03:54,670 --> 00:03:59,980
The PO file can be considered the official file containing the translations.

55
00:03:59,980 --> 00:04:04,490
The ML file is the finalized version of the translations.

56
00:04:04,600 --> 00:04:07,360
This file will always be loaded by WordPress.

57
00:04:07,390 --> 00:04:12,100
I do not recommend opening this file since it is not readable by humans.

58
00:04:12,130 --> 00:04:15,400
Opening this file may cause it to become corrupted.

59
00:04:15,580 --> 00:04:19,910
Let's test our translations by switching the language on our site.

60
00:04:19,930 --> 00:04:24,670
In the admin dashboard, navigate to the General Settings page.

61
00:04:26,870 --> 00:04:29,840
I'm going to switch my language to French.

62
00:04:32,050 --> 00:04:36,070
After doing so, I'm going to click on the recipe menu.

63
00:04:38,580 --> 00:04:42,390
If we look at the sidebar, the translation has been applied.

64
00:04:42,420 --> 00:04:45,540
Other areas may not have our translation.

65
00:04:45,540 --> 00:04:51,180
Since we didn't translate everything, we've successfully applied our translations.

66
00:04:51,180 --> 00:04:56,570
With the help of a few tools, we can easily apply translations to our plugin.

67
00:04:56,570 --> 00:05:03,300
In the next lecture we are going to wrap up our discussion of translations by loading them for our JavaScript

68
00:05:03,300 --> 00:05:04,140
files.

