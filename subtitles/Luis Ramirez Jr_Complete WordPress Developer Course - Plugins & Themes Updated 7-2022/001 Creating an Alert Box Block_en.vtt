WEBVTT
1
00:00:00.180 --> 00:00:03.990
In this section, we are going to begin creating a new plugin.

2
00:00:03.990 --> 00:00:10.590
A long time ago I promised we would develop a block with WordPress as recommended structure for a block.

3
00:00:10.590 --> 00:00:14.820
WordPress strongly advocates for one block per plugin.

4
00:00:14.820 --> 00:00:19.530
The plugin we've been developing breaks this practice, which is perfectly fine.

5
00:00:19.530 --> 00:00:25.770
It's not uncommon for plugins to add multiple blocks to a site for a demonstration purposes.

6
00:00:25.770 --> 00:00:29.700
I want to show you how to develop a single block for a plugin.

7
00:00:29.820 --> 00:00:36.510
After we're finished developing a block, we will submit this plugin to the official WordPress repository.

8
00:00:36.510 --> 00:00:41.850
The WordPress community will be able to freely install our block onto their site.

9
00:00:41.880 --> 00:00:43.230
It will be a lot of fun.

10
00:00:43.230 --> 00:00:44.820
So let's get started.

11
00:00:44.910 --> 00:00:48.090
Our first step is to create a new plugin.

12
00:00:48.090 --> 00:00:54.690
Let's try using the Create BLOCK package to help us create a new plugin for block development.

13
00:00:54.690 --> 00:00:57.300
In your editor, open the command line.

14
00:00:57.300 --> 00:01:07.560
Let's write the following command now ex at WordPress slash create block alert box namespace you plus.

15
00:01:09.680 --> 00:01:12.170
This command is mostly familiar to us.

16
00:01:12.200 --> 00:01:18.710
We're constructing NPM to temporarily install and execute the create block package.

17
00:01:18.740 --> 00:01:21.690
This package will scaffold a plugin for us.

18
00:01:21.710 --> 00:01:24.760
The name of the plugin will be called Alert Box.

19
00:01:24.770 --> 00:01:28.040
I'm introducing a new option called namespace.

20
00:01:28.040 --> 00:01:32.080
The namespace option will configure the namespace for our block.

21
00:01:32.090 --> 00:01:36.710
This plugin will occupy the same namespace as our original plugin.

22
00:01:36.710 --> 00:01:38.450
Let's run this command.

23
00:01:40.610 --> 00:01:46.080
After a few seconds, a new directory has been created called Alert Box.

24
00:01:46.100 --> 00:01:48.840
Let's make some adjustments to the new plugin.

25
00:01:48.860 --> 00:01:52.520
First, let's start with the main plugin file.

26
00:01:54.610 --> 00:01:57.250
The package will generate a file header.

27
00:01:57.280 --> 00:02:01.570
Most of these values are fine except for the description and author.

28
00:02:01.600 --> 00:02:04.330
Let's set the description to the following.

29
00:02:04.330 --> 00:02:08.740
Add an alert box to output important information to the reader.

30
00:02:10.949 --> 00:02:14.430
Next, let's set the author field to our name.

31
00:02:15.460 --> 00:02:17.730
Everything else in this file is fine.

32
00:02:17.740 --> 00:02:25.090
Let's take a moment to explore this file at the bottom of the file, a function called UE plus alert

33
00:02:25.090 --> 00:02:28.190
box lock in it, we'll register a block.

34
00:02:28.210 --> 00:02:31.410
This function is executed during the init hook.

35
00:02:31.420 --> 00:02:34.240
Overall, we have a simple plug in file.

36
00:02:34.240 --> 00:02:39.010
Before moving on to the script files, let's update the package file.

37
00:02:41.150 --> 00:02:46.190
And this file we are going to update the description and author fields.

38
00:02:46.190 --> 00:02:52.280
The values for these fields will have the same values as the fields from the file header in the main

39
00:02:52.280 --> 00:02:53.330
plugin file.

40
00:02:53.330 --> 00:02:55.700
Let's copy them over to this file.

41
00:02:57.910 --> 00:02:58.550
Great.

42
00:02:58.570 --> 00:03:00.010
This step is optional.

43
00:03:00.040 --> 00:03:05.800
However, we are going to publish this plug into the official WordPress plugin repository.

44
00:03:05.830 --> 00:03:09.130
These details matter as much as the code for the block.

45
00:03:09.160 --> 00:03:12.090
Otherwise, our plugin may get rejected.

46
00:03:12.100 --> 00:03:17.630
We can move on to preparing the other files in the resource section of this lecture.

47
00:03:17.650 --> 00:03:21.010
I provide a link to a list of starter files.

48
00:03:23.110 --> 00:03:28.060
I want you to update the respective files with the code from this gist.

49
00:03:28.090 --> 00:03:30.590
In total, there are four files.

50
00:03:30.610 --> 00:03:34.070
You can find them in the source directory of our project.

51
00:03:34.090 --> 00:03:36.250
Pause the video and good luck.

52
00:03:37.880 --> 00:03:38.960
Welcome back.

53
00:03:38.990 --> 00:03:43.280
Hopefully you are able to update the files in our project.

54
00:03:43.280 --> 00:03:47.060
The code for the block can be found in the source directory.

55
00:03:47.090 --> 00:03:52.700
WordPress will outsource the edit and save functions into separate files.

56
00:03:52.730 --> 00:03:56.950
The functions from each file or imported into the index file.

57
00:03:56.960 --> 00:03:59.910
This file contains the block registration.

58
00:03:59.930 --> 00:04:02.300
Let's go through the files together.

59
00:04:02.330 --> 00:04:04.310
Starting with the block file.

60
00:04:04.310 --> 00:04:07.980
We have a typical configuration file for our block.

61
00:04:08.000 --> 00:04:15.320
This block has four attributes for storing the content of the block an icon, background color and text

62
00:04:15.320 --> 00:04:15.890
color.

63
00:04:15.920 --> 00:04:19.950
Next, let's move on to the edit JS file.

64
00:04:19.970 --> 00:04:25.330
Inside this file, I removed most of the comments from the original edit file.

65
00:04:25.340 --> 00:04:31.730
The comments contain information on the various components and functions imported into the file.

66
00:04:31.760 --> 00:04:35.780
They're great for beginners, however, they are not necessary.

67
00:04:35.810 --> 00:04:38.900
It's up to you if you would like to keep them around.

68
00:04:38.930 --> 00:04:42.890
The most notable piece of code in this file is inside.

69
00:04:42.890 --> 00:04:47.220
The inspector controls components inside this component.

70
00:04:47.240 --> 00:04:52.560
We're using the panel color settings block to add color options to the block.

71
00:04:52.580 --> 00:04:55.130
While this component is not new to us.

72
00:04:55.160 --> 00:04:59.070
It's been a while since we've added this component to our blocks.

73
00:04:59.090 --> 00:05:03.640
This component provides a UI for modifying multiple colors.

74
00:05:03.650 --> 00:05:10.890
In this example, the component will modify the BG color and text color attributes.

75
00:05:10.910 --> 00:05:14.660
Other than that, there's nothing else worth saying about this block.

76
00:05:14.690 --> 00:05:16.700
It's a very simple block.

77
00:05:16.730 --> 00:05:19.520
The block will render content with an icon.

78
00:05:19.550 --> 00:05:22.850
Let's move on to the saved JS file.

79
00:05:22.880 --> 00:05:28.820
This file is very similar to the edit JS file, but without the sidebar content.

80
00:05:28.850 --> 00:05:31.190
The last file is called style.

81
00:05:31.640 --> 00:05:38.810
Since we haven't had the opportunity to talk about Sass and the next lecture, we'll dive into this

82
00:05:38.810 --> 00:05:39.390
file.

83
00:05:39.410 --> 00:05:43.350
For now, let's try building the block behind the scenes.

84
00:05:43.370 --> 00:05:49.090
The Create BLOCK package will prepare the WP Scripts package for our plugin.

85
00:05:49.100 --> 00:05:53.660
We can skip the step of adding this package before running the command.

86
00:05:53.690 --> 00:05:56.400
Our editors are not pointed to the plugin.

87
00:05:56.420 --> 00:06:00.620
I'm going to quickly point my editor to the Alert Box plugin.

88
00:06:03.120 --> 00:06:06.530
After making those changes, we can build the project.

89
00:06:06.540 --> 00:06:13.110
The command is the same as before and the command line run the NPM run start command.

90
00:06:15.290 --> 00:06:18.500
The command line will produce a successful result.

91
00:06:18.530 --> 00:06:24.050
One last thing let's activate the plugin from the admin dashboard in the browser.

92
00:06:24.050 --> 00:06:26.240
Navigate to the plugins page.

93
00:06:28.380 --> 00:06:30.840
Next, activate the alert box.

94
00:06:30.840 --> 00:06:31.560
Plug in.

95
00:06:33.640 --> 00:06:36.500
The plugin will activate without throwing an error.

96
00:06:36.520 --> 00:06:37.290
Perfect.

97
00:06:37.300 --> 00:06:40.930
In the next lecture we will begin working on the block.

