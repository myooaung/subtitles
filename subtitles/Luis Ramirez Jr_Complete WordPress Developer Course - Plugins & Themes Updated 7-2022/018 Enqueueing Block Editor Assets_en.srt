1
00:00:00,090 --> 00:00:06,240
In this lecture, we are going to start adding the fields to the Gutenberg editor by creating a script.

2
00:00:06,270 --> 00:00:10,410
Unlike before, Gutenberg does not support the Settings API.

3
00:00:10,440 --> 00:00:15,030
We must use JavaScript and react to add forms to the page.

4
00:00:15,060 --> 00:00:20,280
Therefore, let's create a script for adding these fields in the source folder.

5
00:00:20,280 --> 00:00:23,400
Create a new directory called BLOCK Editor.

6
00:00:25,610 --> 00:00:29,930
We are going to store files related to the editor in this directory.

7
00:00:29,960 --> 00:00:33,600
Blocks are not our only option for extending the editor.

8
00:00:33,680 --> 00:00:36,600
Other areas of the editor can be modified.

9
00:00:36,620 --> 00:00:39,590
For example, we can add a custom sidebar.

10
00:00:39,620 --> 00:00:43,370
This allows us to add settings that are independent of a block.

11
00:00:43,370 --> 00:00:47,720
Files that are not for blocks can be created inside this directory.

12
00:00:47,750 --> 00:00:51,260
Let's create a file called Index dot js.

13
00:00:53,460 --> 00:00:57,870
Next, let's create a file called Sidebar JS.

14
00:01:00,070 --> 00:01:05,850
The index dogs file will be considered the entry point for organization reasons.

15
00:01:05,860 --> 00:01:11,770
We are going to separate the code for the sidebar in a separate file from the index file.

16
00:01:11,770 --> 00:01:14,590
Import the sidebar js file.

17
00:01:16,810 --> 00:01:21,400
Afterward log a simple message from the signed bar file.

18
00:01:23,570 --> 00:01:27,080
Next, we should process these files through Webpack.

19
00:01:27,110 --> 00:01:29,630
The files we're creating are not blocks.

20
00:01:29,630 --> 00:01:33,950
Therefore, Webpack will not bother processing our files.

21
00:01:33,980 --> 00:01:38,240
Open the webpack config dot js file.

22
00:01:40,510 --> 00:01:46,300
Inside the entry object at a property called BLOCK Editor Slash Index.

23
00:01:48,540 --> 00:01:52,230
These files will be stored in a separate directory from our blocks.

24
00:01:52,260 --> 00:01:59,190
Next, let's set the value to the following dot slash source slash block editor.

25
00:02:01,340 --> 00:02:07,910
Let's verify the files are being bundled by restarting the NPM run, start command and the command line.

26
00:02:10,080 --> 00:02:16,280
New entry points will not be picked up by Westpac any time the configuration file is modified.

27
00:02:16,290 --> 00:02:22,770
We must always restart the command for the changes to take effect after the command has been restarted.

28
00:02:22,770 --> 00:02:24,990
Let's check out the build directory.

29
00:02:24,990 --> 00:02:28,170
As expected, the files have been generated.

30
00:02:28,170 --> 00:02:31,020
The last step is to queue these files.

31
00:02:31,020 --> 00:02:32,700
Let's quickly do that.

32
00:02:32,730 --> 00:02:36,300
Open the register assets, not PHP file.

33
00:02:38,460 --> 00:02:39,870
At the bottom file.

34
00:02:39,870 --> 00:02:45,030
Let's register the script with the WP Register script function.

35
00:02:47,250 --> 00:02:49,710
The name of our handle will be called up.

36
00:02:49,710 --> 00:02:50,370
Ed.

37
00:02:52,700 --> 00:03:01,010
The path to the file will be the following plugins your URL slash build slash block editor slash index

38
00:03:01,010 --> 00:03:04,130
dot js up plugin directory.

39
00:03:06,450 --> 00:03:10,470
Next, let's include the PHP file for this script.

40
00:03:10,500 --> 00:03:16,710
It'll include the list of dependencies and version far scripts above the function.

41
00:03:16,710 --> 00:03:21,390
Define a variable called editor asset with the following value.

42
00:03:21,600 --> 00:03:30,720
Include a plugin directory dot build slash block editor slash index dot asset php.

43
00:03:33,250 --> 00:03:40,330
After including this file, we can set the third and fourth arguments to the editor asset dependencies

44
00:03:40,330 --> 00:03:43,420
and editor asset version variables.

45
00:03:45,480 --> 00:03:49,050
Lastly, let's set the fifth argument to true.

46
00:03:49,290 --> 00:03:52,650
This argument will force the script to load in the footer.

47
00:03:52,680 --> 00:03:56,280
We do not want to block the Gutenberg editor from loading.

48
00:03:56,310 --> 00:03:59,130
The last step is to queue these files.

49
00:03:59,160 --> 00:04:04,110
WordPress has a special hook for queuing files in the Gutenberg Editor.

50
00:04:04,140 --> 00:04:07,290
This saves us time for checking the current page.

51
00:04:07,320 --> 00:04:09,360
Open the main plugin file.

52
00:04:11,550 --> 00:04:18,089
At the bottom of the hook section at an action hook called in Q BLOCK Editor Assets.

53
00:04:20,320 --> 00:04:25,510
The name of our function will be called up in Q BLOCK Editor assets.

54
00:04:27,590 --> 00:04:33,590
Let's create a file called editor assets php inside the admin folder.

55
00:04:35,780 --> 00:04:39,200
Inside this file defined the function from the hook.

56
00:04:41,400 --> 00:04:44,990
Before interviewing the files, we should perform a single check.

57
00:04:45,000 --> 00:04:47,100
I wasn't being completely honest.

58
00:04:47,130 --> 00:04:50,560
This hook runs for two different types of pages.

59
00:04:50,580 --> 00:04:55,050
It'll run for the full site editor and the page for editing a post.

60
00:04:55,080 --> 00:04:58,710
These settings should be available for individual posts.

61
00:04:58,740 --> 00:05:05,280
It doesn't make sense to add Field for modifying a page's open graph settings from the full site editor.

62
00:05:05,520 --> 00:05:09,480
Let's create a conditional statement for checking the current page.

63
00:05:09,510 --> 00:05:13,650
Unfortunately, the hook is not provided the name of the page.

64
00:05:13,680 --> 00:05:17,070
There is an alternative solution inside the function.

65
00:05:17,070 --> 00:05:19,860
Define a variable called current screen.

66
00:05:19,890 --> 00:05:24,420
The value for this variable will be the get current screen function.

67
00:05:26,700 --> 00:05:32,220
The get current screen function returns an object with information on the current page.

68
00:05:32,250 --> 00:05:34,440
This includes the name of the page.

69
00:05:34,470 --> 00:05:37,800
We can use this information to identify the page.

70
00:05:37,830 --> 00:05:39,180
You're more than welcome to.

71
00:05:39,180 --> 00:05:41,820
Well, put this variable onto the screen.

72
00:05:41,820 --> 00:05:43,170
I've already done so.

73
00:05:43,170 --> 00:05:47,010
To save time, I will provide the name of the page.

74
00:05:47,010 --> 00:05:54,690
In a conditional statement, write the following condition Current screen base equals equals appearance

75
00:05:54,690 --> 00:05:55,320
page.

76
00:05:55,320 --> 00:05:56,970
Gutenberg Dash.

77
00:05:56,970 --> 00:05:58,110
Edit Site.

78
00:06:02,720 --> 00:06:05,710
The object has a property called base.

79
00:06:05,720 --> 00:06:12,530
This property contains the type of page and this example we're checking if the page is the full site

80
00:06:12,530 --> 00:06:13,280
editor.

81
00:06:13,280 --> 00:06:16,430
If it is, we are going to return the function.

82
00:06:18,730 --> 00:06:24,100
This will immediately stop the function from running after the conditional block lets in.

83
00:06:24,100 --> 00:06:28,090
Q The script with the WP and Q script function.

84
00:06:28,120 --> 00:06:30,970
The name of the script is called Up Editor.

85
00:06:33,230 --> 00:06:39,410
After renewing the script, we can try testing our scripts in the browser, trying viewing a random

86
00:06:39,410 --> 00:06:41,300
post with the Gutenberg editor.

87
00:06:41,330 --> 00:06:43,820
The script should load for any page.

88
00:06:46,110 --> 00:06:51,780
Open the console panel from the developer tools within the panel, the message from our script will

89
00:06:51,780 --> 00:06:53,220
appear perfect.

90
00:06:53,220 --> 00:06:58,550
We've successfully created and include a file for handling the custom fields.

91
00:06:58,560 --> 00:07:04,530
In the next lecture, we are going to begin adding a sidebar for rendering the fields for modifying

92
00:07:04,530 --> 00:07:06,030
a post's metadata.

