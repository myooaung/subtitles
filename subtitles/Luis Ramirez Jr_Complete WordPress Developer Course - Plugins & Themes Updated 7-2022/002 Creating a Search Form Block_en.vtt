WEBVTT
1
00:00:00.120 --> 00:00:04.800
In this lecture, we are going to create a new block for creating a search form.

2
00:00:04.800 --> 00:00:06.510
Sound strange, right?

3
00:00:06.540 --> 00:00:10.210
There's already a search form block provided by the core of WordPress.

4
00:00:10.230 --> 00:00:13.800
In fact, we're using this block in the header of our site.

5
00:00:13.830 --> 00:00:17.280
This block is great, but it's not easily customizable.

6
00:00:17.310 --> 00:00:21.120
Currently, I'm using the search results page on the front end.

7
00:00:21.150 --> 00:00:24.430
We have another forum for performing search queries.

8
00:00:24.450 --> 00:00:26.200
Unlike the form in the header.

9
00:00:26.220 --> 00:00:30.200
It isn't possible to replicate this appearance with CSS.

10
00:00:30.210 --> 00:00:33.570
There are too many differences from the original design.

11
00:00:33.600 --> 00:00:37.980
For this reason, we will create a custom search form block.

12
00:00:38.010 --> 00:00:40.460
Let's get started and your editor.

13
00:00:40.470 --> 00:00:47.790
We will create a new folder for storing the files for our custom block inside the source slash block

14
00:00:47.790 --> 00:00:48.720
directory.

15
00:00:48.750 --> 00:00:51.210
Create a folder called Search Form.

16
00:00:53.420 --> 00:01:00.770
Next create three files called block dot json indexed on JS and main dot CSS.

17
00:01:03.010 --> 00:01:03.820
Afterward.

18
00:01:03.820 --> 00:01:06.430
Let's add some properties to save time.

19
00:01:06.430 --> 00:01:12.240
I think it would be a good idea to copy the code from the block file for the fancy header block.

20
00:01:12.250 --> 00:01:13.780
Let's open this file.

21
00:01:15.850 --> 00:01:16.600
Next.

22
00:01:16.600 --> 00:01:21.200
Copy the contents to your clipboard after copying the entire file.

23
00:01:21.220 --> 00:01:22.900
Paste it into the block.

24
00:01:22.900 --> 00:01:24.660
File for the search form.

25
00:01:24.670 --> 00:01:25.300
BLOCK.

26
00:01:27.360 --> 00:01:29.860
Let's make some adjustments first.

27
00:01:29.880 --> 00:01:32.970
We are going to empty out the attributes object.

28
00:01:34.950 --> 00:01:43.350
Next set the name title category icon description and text domain properties to an empty string.

29
00:01:45.610 --> 00:01:48.280
The key words are array can remain empty.

30
00:01:50.470 --> 00:01:54.520
In my opinion, copying code from another file is tedious.

31
00:01:54.550 --> 00:01:57.740
What if we couldn't find a blocked JSON file?

32
00:01:57.760 --> 00:02:01.370
We would need to resort to a copy from an online example.

33
00:02:01.390 --> 00:02:04.120
There's an easier way of creating this file.

34
00:02:04.150 --> 00:02:07.360
Visual Studio code supports code snippets.

35
00:02:07.390 --> 00:02:09.160
Let me show you an example.

36
00:02:09.190 --> 00:02:12.550
Open the indexed PHP plugin file.

37
00:02:14.780 --> 00:02:19.540
At the bottom of the file, I'm going to type H html colon five.

38
00:02:19.550 --> 00:02:24.080
As I do so, the editor will recommend a series of code snippets.

39
00:02:24.080 --> 00:02:28.020
We can click on a code snippet to insert code into the editor.

40
00:02:28.040 --> 00:02:31.730
This feature is extremely convenient for creating files.

41
00:02:31.760 --> 00:02:37.770
Interestingly, Visual Studio code allows developers to create custom code snippets.

42
00:02:37.790 --> 00:02:43.060
Let's create a code snippet for creating a block file from the menu.

43
00:02:43.070 --> 00:02:45.860
Navigate to file preferences.

44
00:02:45.860 --> 00:02:47.420
User Snippets.

45
00:02:49.720 --> 00:02:53.410
Next we can select the file type for our code snippet.

46
00:02:53.440 --> 00:02:57.850
In our case, the code snippet should be applied to JSON files.

47
00:02:57.880 --> 00:02:59.710
Let's search for JSON.

48
00:02:59.740 --> 00:03:02.720
Afterward, you can select the first option.

49
00:03:02.740 --> 00:03:06.010
This option should open a file called JSON.

50
00:03:06.400 --> 00:03:07.330
JSON.

51
00:03:09.570 --> 00:03:14.220
Inside this file, we can add custom snippets for JSON files.

52
00:03:14.250 --> 00:03:18.060
It is an object where each property represents a snippet.

53
00:03:18.090 --> 00:03:22.840
There's a comment that provides documentation on how to generate a snippet.

54
00:03:22.860 --> 00:03:25.440
However, the process can be tedious.

55
00:03:25.470 --> 00:03:29.670
Luckily, there's an extension that will generate the code for a snippet.

56
00:03:29.700 --> 00:03:31.170
Let's give it a try.

57
00:03:31.260 --> 00:03:33.820
Switch over to the extensions tab.

58
00:03:33.840 --> 00:03:39.840
Search for an extension called snippet generator by a user called when Phang Do.

59
00:03:42.010 --> 00:03:48.080
This extension will help us add a new snippet to the JSON file without writing the code ourselves.

60
00:03:48.100 --> 00:03:49.780
Install it in your editor.

61
00:03:51.950 --> 00:03:52.770
Next.

62
00:03:52.790 --> 00:03:54.080
Head back to the block.

63
00:03:54.380 --> 00:04:00.530
JSON file, we are going to select the entire file, keep it selected from the menu.

64
00:04:00.530 --> 00:04:03.800
Navigate to the view command palette option.

65
00:04:06.090 --> 00:04:10.100
If you're not familiar with the command palette, that's perfectly fine.

66
00:04:10.110 --> 00:04:14.050
It's a tool for running scripts created by other extensions.

67
00:04:14.070 --> 00:04:19.829
The snippet generator extension will create a command for generating a snippet.

68
00:04:19.860 --> 00:04:23.100
Let's search for the generate snippet command.

69
00:04:25.340 --> 00:04:30.900
After selecting this command, we can add a human readable name for our snippets.

70
00:04:30.920 --> 00:04:33.490
This name should be short and concise.

71
00:04:33.500 --> 00:04:36.080
Let's set the name to block file.

72
00:04:38.100 --> 00:04:40.200
Next we can add a scope.

73
00:04:40.200 --> 00:04:42.710
The scope option does not apply to us.

74
00:04:42.720 --> 00:04:43.840
We can skip it.

75
00:04:43.860 --> 00:04:48.060
Moving forward, we will be asked to add a prefix.

76
00:04:48.060 --> 00:04:52.680
The prefix represents the text that should be typed for finding the snippet.

77
00:04:52.680 --> 00:04:54.990
Let's set the prefix to block.

78
00:04:57.210 --> 00:04:59.670
Lastly, we can give a description.

79
00:04:59.670 --> 00:05:01.950
Set the description to the following.

80
00:05:01.980 --> 00:05:03.690
A basic block file.

81
00:05:05.870 --> 00:05:11.930
After adding a description, the extension will output a message to inform you that the snippet was

82
00:05:11.930 --> 00:05:12.690
created.

83
00:05:12.710 --> 00:05:14.600
It's stored in our clipboard.

84
00:05:14.630 --> 00:05:19.340
The last step is to head back to the JSON JSON file.

85
00:05:19.370 --> 00:05:22.160
Paste the code snippet under the comments.

86
00:05:22.160 --> 00:05:24.080
But from within the object.

87
00:05:26.230 --> 00:05:27.020
Perfect.

88
00:05:27.040 --> 00:05:32.260
We've successfully created a code snippet by using the snippet extension.

89
00:05:32.260 --> 00:05:35.420
We didn't have to create the code snippet manually.

90
00:05:35.440 --> 00:05:38.920
We were able to copy and paste an existing code snippet.

91
00:05:38.950 --> 00:05:42.400
Despite that, let's quickly review the properties.

92
00:05:42.430 --> 00:05:46.590
First things first code snippets are added as objects.

93
00:05:46.600 --> 00:05:50.890
The name of the property must be the name of the code snippet.

94
00:05:50.920 --> 00:05:56.320
Inside the code snippet object, we have a prefix, description and body.

95
00:05:56.380 --> 00:05:59.980
The prefix and description are self explanatory.

96
00:05:59.980 --> 00:06:03.010
As for the body property, it's an array.

97
00:06:03.100 --> 00:06:06.730
In this array, each item represents a single line.

98
00:06:06.730 --> 00:06:11.040
For example, the first item will appear on the first line.

99
00:06:11.050 --> 00:06:15.750
The second item will appear in the second line, so on and so forth.

100
00:06:15.760 --> 00:06:19.720
Inside each item you may notice strange characters.

101
00:06:19.840 --> 00:06:21.940
These characters represent tabs.

102
00:06:21.940 --> 00:06:28.900
Since our code is indented without the exception, we would have had to manually write this entire array.

103
00:06:29.110 --> 00:06:35.890
Let's try testing our new snippets in the block, not JSON file for the search form block or remove

104
00:06:35.890 --> 00:06:38.600
the contents of the file after doing so.

105
00:06:38.620 --> 00:06:40.690
Type block JSON.

106
00:06:40.690 --> 00:06:45.940
As you type this keyword into the file, the editor should recommend our code snippets.

107
00:06:45.970 --> 00:06:51.260
If it doesn't, you may need to restart your editor for the changes to take effect.

108
00:06:51.280 --> 00:06:56.860
By selecting this option, the file should be pre-filled with the same code as before.

109
00:06:57.280 --> 00:06:58.000
Awesome.

110
00:06:58.000 --> 00:06:59.830
I know that was a long detour.

111
00:06:59.860 --> 00:07:02.710
However, it's going to boost our productivity.

112
00:07:02.740 --> 00:07:06.990
We do not need to copy this code from another file or page.

113
00:07:07.000 --> 00:07:10.560
Creating a code snippet was well worth the time and effort.

114
00:07:10.570 --> 00:07:13.090
Let's begin updating these properties.

115
00:07:13.090 --> 00:07:18.310
First, set the name property to Udemy plus slash search form.

116
00:07:20.410 --> 00:07:24.310
Next set the title property to search form.

117
00:07:26.420 --> 00:07:29.930
Set the category property to widgets.

118
00:07:32.220 --> 00:07:35.730
Update the icon property to star filled.

119
00:07:37.940 --> 00:07:41.690
The description property will be set to the following ads.

120
00:07:41.690 --> 00:07:42.740
A search form.

121
00:07:44.920 --> 00:07:49.360
Inside the keywords array at a string that says search form.

122
00:07:51.610 --> 00:07:56.320
Lastly, set the text domain property to item plus.

123
00:07:58.550 --> 00:08:00.340
The block file is ready.

124
00:08:00.350 --> 00:08:02.220
I knew we flew right by that.

125
00:08:02.240 --> 00:08:05.270
However, none of these properties should be new to you.

126
00:08:05.300 --> 00:08:09.020
You can always hover your mouse over these properties for a description.

127
00:08:09.020 --> 00:08:11.750
The next step is to register the block.

128
00:08:11.780 --> 00:08:15.230
Open the register block's PHP file.

129
00:08:17.440 --> 00:08:24.100
Luckily, by simplifying the process for registering a block, we can update our array to let our loop

130
00:08:24.130 --> 00:08:27.320
take care of the rest inside the block's array.

131
00:08:27.340 --> 00:08:28.840
Add another array.

132
00:08:31.110 --> 00:08:33.179
At an index called Name.

133
00:08:33.179 --> 00:08:38.580
The value for this index will be the name of our folder, which is called Search Form.

134
00:08:41.059 --> 00:08:44.660
The last step is to add UI for our block.

135
00:08:44.690 --> 00:08:47.720
Otherwise, the block will not appear from within.

136
00:08:47.720 --> 00:08:49.130
The Gutenberg Editor.

137
00:08:49.160 --> 00:08:53.930
Switch over to the indexed JS file at the top of the file.

138
00:08:53.930 --> 00:08:59.990
Import the register block type function from the WordPress slash blocks package.

139
00:09:03.930 --> 00:09:06.570
Next, import the block file.

140
00:09:08.830 --> 00:09:13.920
Importing this file will give us access to the name under the import statements.

141
00:09:13.930 --> 00:09:19.300
Run the register block type function with the block name property.

142
00:09:21.490 --> 00:09:26.200
The second argument is an object of settings inside this object.

143
00:09:26.200 --> 00:09:27.700
Add the edit function.

144
00:09:29.810 --> 00:09:35.420
From within this function, we are going to return Gsx with a simple message.

145
00:09:37.630 --> 00:09:40.660
Our block is finally ready and the command line.

146
00:09:40.660 --> 00:09:44.470
We may need to restart the PM run start command.

147
00:09:44.500 --> 00:09:46.330
I'm going to quickly do so.

148
00:09:53.100 --> 00:09:54.150
In the browser.

149
00:09:54.150 --> 00:09:55.530
Refresh the editor.

150
00:09:57.650 --> 00:10:00.740
Let's add the search form block to the page.

151
00:10:04.770 --> 00:10:08.260
As you can see, the block has been successfully registered.

152
00:10:08.280 --> 00:10:08.890
Great.

153
00:10:08.910 --> 00:10:11.160
We've created our second block.

154
00:10:11.160 --> 00:10:18.000
In the next set of lectures, we will begin adding the UI for the block, along with options for modifying

155
00:10:18.000 --> 00:10:19.110
the appearance.

