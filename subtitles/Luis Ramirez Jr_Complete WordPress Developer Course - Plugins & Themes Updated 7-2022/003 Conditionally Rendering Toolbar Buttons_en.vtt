WEBVTT
1
00:00:00.090 --> 00:00:05.500
In this lecture, let's update our format to conditionally render the paragraph block.

2
00:00:05.520 --> 00:00:09.480
We may not want this option to be available on all blocks.

3
00:00:09.480 --> 00:00:15.690
We can limit the scope of our format to a specific set of blocks by querying the state for the currently

4
00:00:15.690 --> 00:00:16.860
selected block.

5
00:00:16.860 --> 00:00:21.330
Let's get started by opening the neon format JS file.

6
00:00:23.610 --> 00:00:25.140
At the top of the file.

7
00:00:25.140 --> 00:00:30.510
Import the use select from the WordPress slash data package.

8
00:00:32.689 --> 00:00:36.630
The active lock can be retrieved with a use select function.

9
00:00:36.650 --> 00:00:42.050
After grabbing this value, we can conditionally render the format for a specific block.

10
00:00:42.080 --> 00:00:45.860
Let's look at how that's done at the top of the edit function.

11
00:00:45.860 --> 00:00:48.170
Call the use select function.

12
00:00:50.340 --> 00:00:53.760
In the arrow function except the select function.

13
00:00:56.090 --> 00:00:58.520
Next or turn the following value.

14
00:00:58.520 --> 00:01:03.860
Select core slash block editor dot get selected block.

15
00:01:06.160 --> 00:01:13.300
The core block ed storage has access to functions related to the Gutenberg Editors State.

16
00:01:13.330 --> 00:01:19.810
For example, we can call the get selected block function to grab the currently active block.

17
00:01:19.930 --> 00:01:25.990
After returning this value, let's store the results in a variable called selected block.

18
00:01:28.180 --> 00:01:33.580
Let's take advantage of this variable for toggling the format in the return statement.

19
00:01:33.580 --> 00:01:36.190
Surround the component with a fragment.

20
00:01:41.970 --> 00:01:45.850
Conditionally rendering the root element can cause errors.

21
00:01:45.870 --> 00:01:51.900
It's recommended to surround root components or elements with fragments for conditionally rendering

22
00:01:51.900 --> 00:01:52.500
them.

23
00:01:52.530 --> 00:01:59.640
After surrounding the elements, add the following expression selected block question mark dot name

24
00:01:59.640 --> 00:02:01.260
equals equals equals.

25
00:02:01.260 --> 00:02:04.080
Core slash paragraph and.

26
00:02:06.440 --> 00:02:11.970
The selected block variable may be empty if the user has not selected a block.

27
00:02:11.990 --> 00:02:18.410
This variable will be empty just to make sure we're using the optional chaining operator to prevent

28
00:02:18.410 --> 00:02:20.120
an error from being thrown.

29
00:02:20.150 --> 00:02:23.610
The name property contains the name of the block.

30
00:02:23.630 --> 00:02:28.860
In this example, we're checking if the selected block is the paragraph block.

31
00:02:28.880 --> 00:02:32.540
Let's move the component after the and operator.

32
00:02:34.810 --> 00:02:37.480
Time to test our code in the browser.

33
00:02:37.480 --> 00:02:39.640
Refresh the Gutenberg Editor.

34
00:02:41.910 --> 00:02:44.800
I'm going to type inside a paragraph block.

35
00:02:44.820 --> 00:02:49.350
After doing so, I can open the toolbar for a list of formats.

36
00:02:49.350 --> 00:02:53.070
The neon format continues to appear in the toolbar.

37
00:02:53.100 --> 00:02:58.410
However, if I add the alert box component, things will be different.

38
00:03:00.540 --> 00:03:04.950
This time, the neon format has disappeared from the options.

39
00:03:04.950 --> 00:03:10.860
By toggling the formats, we can prevent our format from being applied to custom blocks.

40
00:03:10.890 --> 00:03:15.300
It's up to you to decide what blocks can support your format.

