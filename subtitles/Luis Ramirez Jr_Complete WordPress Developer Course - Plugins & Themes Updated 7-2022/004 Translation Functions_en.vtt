WEBVTT
1
00:00:00.090 --> 00:00:05.700
In this lecture, let's look at the various translation functions available in WordPress.

2
00:00:05.820 --> 00:00:10.870
Translations play a significant role in the WordPress development community.

3
00:00:10.890 --> 00:00:11.910
Out of the box.

4
00:00:11.910 --> 00:00:15.870
WordPress has dozens of functions for translating your text.

5
00:00:15.900 --> 00:00:21.330
Let's talk about how WordPress achieves translation for plugins and themes.

6
00:00:21.600 --> 00:00:26.110
Under the hood, WordPress is using a system called Get Text.

7
00:00:26.130 --> 00:00:29.700
This system was developed for translating programs.

8
00:00:29.700 --> 00:00:33.600
We can use this system with various programming languages.

9
00:00:34.170 --> 00:00:37.170
PHP supports get text natively.

10
00:00:37.200 --> 00:00:42.030
Normally we must configure this system with our PHP applications.

11
00:00:42.060 --> 00:00:46.740
Luckily, by using WordPress, this system is configured for us.

12
00:00:46.770 --> 00:00:52.080
This saves us time by focusing on the translations of our plugin or theme.

13
00:00:52.290 --> 00:00:57.520
With that being said, let's explore the various functions available in WordPress.

14
00:00:57.540 --> 00:01:00.700
Most of these functions have similar parameters.

15
00:01:00.720 --> 00:01:04.349
Let's start with the most common translation function.

16
00:01:04.590 --> 00:01:07.590
The first function is called double underscore.

17
00:01:07.620 --> 00:01:14.010
This function has two arguments which are the translatable message and the text domain.

18
00:01:14.040 --> 00:01:18.870
The text domain represents the unique ID of our translations.

19
00:01:18.900 --> 00:01:22.590
WordPress sites can have dozens of plugins installed.

20
00:01:22.620 --> 00:01:29.520
A text domain will point WordPress to our translations instead of the translations from another plugin.

21
00:01:29.730 --> 00:01:36.510
If a translation cannot be found, WordPress will return the original value in the first argument of

22
00:01:36.510 --> 00:01:37.350
the function.

23
00:01:37.380 --> 00:01:41.080
This behavior applies to all translation functions.

24
00:01:41.100 --> 00:01:43.860
The user will never see an empty space.

25
00:01:43.950 --> 00:01:46.920
The next function is called Underscore E.

26
00:01:46.950 --> 00:01:52.050
It's similar to the double underscore function, except it'll echo the value.

27
00:01:52.080 --> 00:01:58.830
You can think of it as a shorthand solution for echoing the return value of the double underscore function.

28
00:01:59.040 --> 00:02:02.970
Afterward, we have a function called underscore RN.

29
00:02:03.000 --> 00:02:09.740
Undoubtedly, you may need to output a translation for words with a singular or plural form.

30
00:02:09.750 --> 00:02:13.740
For example, let's say you want to translate the word comment.

31
00:02:13.770 --> 00:02:19.180
If you have multiple comments, you may want to add the letter s at the end of the word.

32
00:02:19.200 --> 00:02:23.280
If you have a single comment, the letter S can be omitted.

33
00:02:23.460 --> 00:02:28.060
The underscore end function was designed for handling plural words.

34
00:02:28.080 --> 00:02:31.290
This function can accept two translations.

35
00:02:31.290 --> 00:02:36.360
The singular form of a translation must be passed in as the first argument.

36
00:02:36.390 --> 00:02:39.180
The second argument is the plural form.

37
00:02:39.210 --> 00:02:41.850
Afterward, we must provide a number.

38
00:02:42.180 --> 00:02:46.570
The number will determine which translation will be returned by the function.

39
00:02:46.590 --> 00:02:48.660
If the number is two or more.

40
00:02:48.690 --> 00:02:51.120
The plural form will be returned.

41
00:02:51.150 --> 00:02:54.030
Otherwise, the singular form is returned.

42
00:02:54.060 --> 00:02:57.930
Lastly, the fourth argument is the text domain.

43
00:02:57.960 --> 00:02:59.820
We never needed this function.

44
00:02:59.820 --> 00:03:03.690
However, it may be useful to know for future projects.

45
00:03:03.840 --> 00:03:07.470
Up next, we have a function called Underscore X.

46
00:03:07.500 --> 00:03:12.250
This function was introduced for words spelled the same but have different meanings.

47
00:03:12.270 --> 00:03:14.190
This is known as a homonym.

48
00:03:14.220 --> 00:03:18.320
For example, let's say we have the word base in our translations.

49
00:03:18.330 --> 00:03:21.150
This word can have two different definitions.

50
00:03:21.180 --> 00:03:24.120
It can refer to the instrument or the fish.

51
00:03:24.150 --> 00:03:27.690
In other languages, these words may not be spelled the same.

52
00:03:27.720 --> 00:03:31.650
The second argument of this function is a note or context.

53
00:03:31.680 --> 00:03:36.720
We can provide additional information on the translatable text to translators.

54
00:03:36.720 --> 00:03:40.710
By doing so, they can accurately translate our message.

55
00:03:40.740 --> 00:03:45.270
There's another variation of this function called Underscore X.

56
00:03:45.360 --> 00:03:49.890
Unlike the underscore x function, this function will echo the value.

57
00:03:49.920 --> 00:03:53.310
Other than that, the functionality is the same.

58
00:03:53.460 --> 00:03:57.640
Lastly, we have a function called underscore and X.

59
00:03:57.660 --> 00:04:03.790
This function combines the logic of the underscore x and underscore end functions.

60
00:04:03.810 --> 00:04:10.260
It can translate the text with singular and plural forms while adding a note for context.

61
00:04:10.290 --> 00:04:14.580
WordPress provides another set of functions for translating strings.

62
00:04:14.610 --> 00:04:20.470
These functions are prefixed with escape HTML or escape attribute.

63
00:04:20.490 --> 00:04:25.140
As their names imply, these functions will escape the translations.

64
00:04:25.170 --> 00:04:30.870
It's possible that a translation may be compromised to avoid the worst case scenario.

65
00:04:30.900 --> 00:04:36.240
You may want to consider using a translation function security counterpart.

66
00:04:36.420 --> 00:04:41.560
So far we've looked at WordPress PHP function for translating text.

67
00:04:41.590 --> 00:04:48.620
Some of these functions exist as JavaScript functions from the WordPress slash IE 18 end package.

68
00:04:48.630 --> 00:04:50.730
There are four functions available.

69
00:04:50.730 --> 00:04:57.680
There are the double underscore, underscore ex, underscore NW and underscore nw x functions.

70
00:04:57.690 --> 00:04:59.460
These functions will return the.

71
00:04:59.530 --> 00:05:04.270
Translation, none of them will output a translation onto the page.

72
00:05:04.390 --> 00:05:08.680
Overall, WordPress has us covered with translating text.

73
00:05:08.680 --> 00:05:12.430
In most cases, you can get away with two or three functions.

74
00:05:12.430 --> 00:05:17.200
However, feel free to modify our plugin or theme with these functions.

75
00:05:17.200 --> 00:05:19.560
At the end of the day, it's up to you.

76
00:05:19.570 --> 00:05:24.670
In the next lecture, let's update our plugin by adding a translation templates.

