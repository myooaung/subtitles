1
00:00:05,650 --> 00:00:12,580
Hi, guys, in this lesson, we will create our guitar people story and we will send our code to these

2
00:00:12,760 --> 00:00:14,770
GitHub repository to do it.

3
00:00:14,860 --> 00:00:17,470
First of all, we will open our GitHub dashboard.

4
00:00:17,860 --> 00:00:20,770
Then we will click to the newly posted bottom.

5
00:00:21,610 --> 00:00:24,100
Then we will specify our repost.

6
00:00:24,100 --> 00:00:28,700
Only our reporter name will be English bookseller's.

7
00:00:29,560 --> 00:00:32,980
Then we can set access rights here.

8
00:00:33,010 --> 00:00:34,600
We will set it as public.

9
00:00:34,780 --> 00:00:41,560
But of course you can go on with private mod, then we can create it, actually get access.

10
00:00:41,590 --> 00:00:43,900
What we do to import our code here.

11
00:00:44,440 --> 00:00:49,600
First of all, we will initialised get on our project, then we will add all items to it.

12
00:00:49,780 --> 00:00:53,710
Then we will relate our remote repository with the project.

13
00:00:53,710 --> 00:00:56,470
Then we will commit our courts with the commit message.

14
00:00:56,740 --> 00:01:00,220
Finally, we will push it to a branch in intelligibly.

15
00:01:00,220 --> 00:01:04,990
We can do it via comment or we can do it via user interface here.

16
00:01:05,020 --> 00:01:10,300
Our comments are ready so we can use these comments from the terminal easily.

17
00:01:10,570 --> 00:01:18,880
When we try to initialize git on our project, we will get a warning like initialized existant git repository.

18
00:01:19,090 --> 00:01:24,850
This is so normal because Angerer Seelie on default initializes gets for us.

19
00:01:25,480 --> 00:01:29,020
Then I'll add all files to the git stage.

20
00:01:32,870 --> 00:01:37,700
Then I'll create the relation between GitHub and my local repository.

21
00:01:47,000 --> 00:01:52,970
Then I'll come into my office with a message, my cosmic message can be initial.

22
00:01:55,730 --> 00:02:03,710
Finally, I'll push my comments to get up here, I should send it in upstream, not because we want

23
00:02:03,710 --> 00:02:07,990
to use our local branch name on the remote with the same name also.

24
00:02:08,180 --> 00:02:14,780
So when the push the local branch with the new option, that local branch is linked with the remote

25
00:02:14,780 --> 00:02:15,980
branch automatically.

26
00:02:24,300 --> 00:02:29,090
OK, now our quote is reachable from GitHub as public, that's all.

27
00:02:29,130 --> 00:02:29,580
Thank you.
