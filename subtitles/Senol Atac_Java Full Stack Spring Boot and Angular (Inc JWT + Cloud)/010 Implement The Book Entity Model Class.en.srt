1
00:00:05,740 --> 00:00:15,220
Hi, guys, in this lesson, we will create our model class for book actually book class will be a basic

2
00:00:15,220 --> 00:00:22,350
class that has the title order prize description and create eight fields.

3
00:00:23,290 --> 00:00:31,380
You know that if the check and a commerce website, we can see these fields for a book.

4
00:00:31,810 --> 00:00:40,930
Of course we can add other fields like STUC can't reveal, etc. but these skills will be enough for

5
00:00:40,930 --> 00:00:41,650
us for that.

6
00:00:41,650 --> 00:00:53,050
We can now make and implement it to do it under the model package, we will create the book class BOOKLESS,

7
00:00:53,080 --> 00:01:01,230
we'll have a database table relation and book class will be an entity in here.

8
00:01:01,390 --> 00:01:05,410
When we say enter this class will be our persons API entity.

9
00:01:05,680 --> 00:01:12,310
So Hibernators GPA will note that this class is an answer to class here.

10
00:01:12,310 --> 00:01:19,150
When we say table, this class is related to database table and the name of table is named property

11
00:01:19,150 --> 00:01:20,310
on the table.

12
00:01:20,320 --> 00:01:24,070
In addition, we will have an idea.

13
00:01:24,070 --> 00:01:30,350
Field and idea will be the primary key and it will be auto increment.

14
00:01:30,350 --> 00:01:31,630
It generated value.

15
00:01:33,580 --> 00:01:36,940
If you remember from the previous lesson, we can handle it.

16
00:01:36,940 --> 00:01:38,470
We are generations tradition.

17
00:01:39,130 --> 00:01:41,800
Our generator will be identity.

18
00:01:42,340 --> 00:01:51,250
It relies on an auto incremented database column and lets the database generate a nivola with each insert

19
00:01:51,250 --> 00:01:51,790
operation.

20
00:01:54,200 --> 00:02:02,930
We will have a title field, we can also relate this field with the table column directly using color.

21
00:02:02,930 --> 00:02:08,680
Magnetation column annotation provides every feature of database column properties.

22
00:02:10,340 --> 00:02:14,600
We will have a description fields in the description fields.

23
00:02:14,870 --> 00:02:17,540
We can give more detail about the books.

24
00:02:18,110 --> 00:02:21,320
These fields will also be not nullable fields.

25
00:02:26,050 --> 00:02:33,290
We will have an altar filled, these fields will also be not nullable filled also.

26
00:02:33,310 --> 00:02:35,190
We can set the length of it.

27
00:02:35,200 --> 00:02:37,330
We are the column length feature.

28
00:02:44,520 --> 00:02:53,130
We will have a price killed, these fields will be a double so we can give them similar values for its.

29
00:03:01,960 --> 00:03:07,420
Finally, we will have a great time field, we will use it for logic.

30
00:03:17,140 --> 00:03:26,440
Now our fields are ready, but they are private to access them, we should describe the getter and setter

31
00:03:26,440 --> 00:03:27,670
for all of them.

32
00:03:28,450 --> 00:03:37,060
At this point we will use Lumberg data in addition to getter setter equals and what methods we will

33
00:03:37,060 --> 00:03:37,390
use.

34
00:03:37,390 --> 00:03:39,090
Lomborg data on addition.

35
00:03:39,640 --> 00:03:45,670
Lomborg data annotation will handle getter setter equals and hedgcock methods automatically.

36
00:03:47,260 --> 00:03:50,330
OK, we have just created our model class.

37
00:03:50,740 --> 00:03:51,250
Thank you.
