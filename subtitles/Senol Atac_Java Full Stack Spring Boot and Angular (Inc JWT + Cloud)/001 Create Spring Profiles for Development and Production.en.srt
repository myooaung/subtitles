1
00:00:05,630 --> 00:00:13,640
Hi, guys, in this lesson, we will configure our project for class production deployment in.

2
00:00:14,690 --> 00:00:17,390
We can work with different provice.

3
00:00:17,990 --> 00:00:25,010
For example, we can create profiles for development, testing and production.

4
00:00:25,730 --> 00:00:27,560
Then we can go on.

5
00:00:27,860 --> 00:00:36,230
One of the profiles allow us to describe different property sets for different environments.

6
00:00:37,010 --> 00:00:42,200
For example, with the development profile, we can work from localised.

7
00:00:42,620 --> 00:00:50,960
On the other hand, with a production profile, we can work from the but also to change or to enable

8
00:00:50,960 --> 00:01:01,100
a profile is so easy we can use Ziprin that profile, start up the future to change the active profile

9
00:01:01,190 --> 00:01:02,090
in spring.

10
00:01:02,840 --> 00:01:04,610
Now let's implement it.

11
00:01:05,300 --> 00:01:13,130
To do it, we will create our application properties according to production and development.

12
00:01:13,880 --> 00:01:22,280
You know that if we're going with the same configuration, we could not use different settings for both

13
00:01:22,280 --> 00:01:24,920
of them in development mode.

14
00:01:25,140 --> 00:01:29,030
We want to use default settings to do it.

15
00:01:29,300 --> 00:01:37,250
We will change the name of our application properties to the application default properties.

16
00:01:38,730 --> 00:01:45,150
And for the production profile, we want to use production settings to do it.

17
00:01:45,420 --> 00:01:51,540
We will create new application properties like application product properties.

18
00:01:52,530 --> 00:02:01,200
Actually, property keys will be the same with the allotment, but values will be changed according

19
00:02:01,200 --> 00:02:10,380
to production settings here, we will use placeholders to display properties when we deploy it to the

20
00:02:10,380 --> 00:02:11,080
cloud.

21
00:02:11,520 --> 00:02:17,270
We will set these placeholders on the alert for the database.

22
00:02:17,550 --> 00:02:20,480
We will create a Hiroku PostgreSQL database.

23
00:02:21,060 --> 00:02:29,160
Then according to its credentials, we will field these placeholders on the lot.

24
00:02:31,190 --> 00:02:43,060
Then we will create placeholders for JWT, secret and internal APIC, these fields are secret fields,

25
00:02:43,070 --> 00:02:48,110
so we will specified them on the clade one by one.

26
00:02:49,870 --> 00:02:56,240
Finally, we will describe the properties path according to the active spring profile.

27
00:02:56,830 --> 00:03:02,950
To do it, we can use property source annotation on our main class.

28
00:03:06,220 --> 00:03:12,820
In here, we will get the application properties from the class pet.

29
00:03:14,130 --> 00:03:17,130
According to active profile.

30
00:03:18,200 --> 00:03:23,690
If we don't have active spring profile, we can set it as default.

31
00:03:24,200 --> 00:03:30,830
Actually, this invitation is not necessary because spring will catch the property source according

32
00:03:30,830 --> 00:03:32,830
to the profile name automatically.

33
00:03:33,260 --> 00:03:40,280
But to do it like that, we make sure of the process and we figure out how the process will go.

34
00:03:41,240 --> 00:03:48,650
OK, default profile will be default if we don't specify inactive profile on environmental variables.

35
00:03:48,920 --> 00:03:51,980
The default profile of Sprink is default.

36
00:03:53,000 --> 00:03:54,480
OK, that's all.

37
00:03:54,680 --> 00:03:55,220
Thank you.
