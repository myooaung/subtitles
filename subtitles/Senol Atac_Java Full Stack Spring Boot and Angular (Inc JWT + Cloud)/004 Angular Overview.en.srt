1
00:00:00,600 --> 00:00:09,510
Hi, guys, in this lesson, we will talk about English and English basic operations, English works

2
00:00:09,510 --> 00:00:18,090
with English command line interface with using this interface, we can create projects and we can test

3
00:00:18,090 --> 00:00:27,510
them easily to create a project in command line interface we can use and Geneve plus project name.

4
00:00:28,440 --> 00:00:38,040
This will create the project with not module dependencies, not module is a library folder for English.

5
00:00:38,790 --> 00:00:42,660
These libraries come from and repository.

6
00:00:43,200 --> 00:00:49,170
For example, for JOA we can use Mavin repository to pool Gire libraries.

7
00:00:49,710 --> 00:00:59,100
Similarly for English, we can use NPM repository to pull JavaScript libraries in here.

8
00:00:59,370 --> 00:01:01,470
You can think that for sure.

9
00:01:01,590 --> 00:01:07,250
We use pome and or build griddled place to configure libraries.

10
00:01:07,800 --> 00:01:16,530
So how can we provide it on English to do it in Angerer we can use Pykrete Jason Thig.

11
00:01:17,610 --> 00:01:24,740
In addition, we can generate components from angular command line interface in English.

12
00:01:24,900 --> 00:01:27,060
There are a lot of component types.

13
00:01:27,660 --> 00:01:29,730
First of them is component.

14
00:01:30,300 --> 00:01:31,860
You can think like it.

15
00:01:32,040 --> 00:01:33,740
Basic paste for English.

16
00:01:34,530 --> 00:01:43,860
Second one is directive directives are used for creating widgets or rethink existing things.

17
00:01:44,490 --> 00:01:51,810
For example, we can create like an indirect directive and then we add to each demo email components,

18
00:01:52,580 --> 00:01:54,090
background of components.

19
00:01:54,090 --> 00:01:54,800
We'll be read.

20
00:01:56,070 --> 00:02:03,360
Third one is service services are mainly a way to communicate between controllers.

21
00:02:04,140 --> 00:02:08,820
Services are often used as a way to get to your data stores.

22
00:02:09,690 --> 00:02:15,720
We will generally use them for API requests, our responses.

23
00:02:16,860 --> 00:02:18,600
The other one is Klus.

24
00:02:19,050 --> 00:02:23,190
This is exactly the same mission like Java classes.

25
00:02:23,400 --> 00:02:27,480
So you just create OJEA components with class component.

26
00:02:28,320 --> 00:02:35,760
The other one is, you know, you can create constant variable list with enum components.

27
00:02:36,600 --> 00:02:43,290
The other one is got you tancred router authentication components with got.

28
00:02:44,220 --> 00:02:46,260
The other one is pipe.

29
00:02:46,890 --> 00:02:53,730
We can think pipe s transformation components or feltl components for example.

30
00:02:53,910 --> 00:02:58,740
We have a text then we want to display it with lowercase.

31
00:02:59,100 --> 00:03:02,460
To do it we can use lowercase pipe.

32
00:03:03,600 --> 00:03:06,090
And components go on like that.

33
00:03:07,530 --> 00:03:12,870
Generally, we will use these components and they will be enough for us.

34
00:03:14,060 --> 00:03:22,220
Others things we can do it from angle of command line interface is to add Neve NPM Library.

35
00:03:22,820 --> 00:03:28,780
We can do it easily with using NPM, install a library name and save parameter.

36
00:03:29,450 --> 00:03:37,940
We should use save parameter from library installation because save parameter a process to save dependancy

37
00:03:38,240 --> 00:03:43,160
to pick Jason thig so we could do this.

38
00:03:43,550 --> 00:03:51,500
If the loose are not module folders we can regenerate it using it npm install commands.

39
00:03:52,490 --> 00:03:58,100
You can think it like refreshing gradle or updating Meryem file.

40
00:03:59,270 --> 00:04:09,470
Additionally, in England, there is just one main HTML page, this is indexed estimate, the other

41
00:04:09,470 --> 00:04:17,690
components are related with these H.T. Amplify in ANGULAR to provide its air.

42
00:04:17,750 --> 00:04:25,980
Brute tech is used in index estimate with this tech angular component estimate is included.

43
00:04:26,210 --> 00:04:30,800
And the other components are called from EV components like that.

44
00:04:32,120 --> 00:04:35,630
Each component has a controller typescript by.

45
00:04:37,010 --> 00:04:47,880
HTML5 and accessible, so you can write every component as different parts, different page in English.

46
00:04:48,140 --> 00:04:50,860
There are two main configuration files.

47
00:04:51,410 --> 00:04:54,200
These are app module typescript.

48
00:04:55,240 --> 00:04:57,700
And the other one is in Jason.

49
00:04:58,760 --> 00:05:07,970
With a module type secret, we can describe libraries, we should describe modules of external libraries

50
00:05:08,210 --> 00:05:10,280
to use in English.

51
00:05:12,070 --> 00:05:20,310
The other one is English, Jason, we can describe JavaScript and CSS plug ins here, for example,

52
00:05:20,310 --> 00:05:24,520
we can describe bootstrap or query from here.

53
00:05:25,550 --> 00:05:30,920
In English, the life cycle of component goes on with these steps.

54
00:05:32,030 --> 00:05:41,660
These methods, first one is engie on chain's methods, it is called when an input or output binding

55
00:05:41,660 --> 00:05:42,560
value chains.

56
00:05:43,760 --> 00:05:46,920
Second one is Engy on in its methods.

57
00:05:47,570 --> 00:05:55,080
It is called After Engy on Chanes was called the first time, but only once.

58
00:05:56,300 --> 00:05:59,410
Third one is engie after live in it.

59
00:05:59,630 --> 00:06:05,460
It is called after the components leave and it is children's lives are created.

60
00:06:06,500 --> 00:06:09,170
The other one is Engy on destroy.

61
00:06:09,650 --> 00:06:13,720
It is called just before the component is destroyed.

62
00:06:15,610 --> 00:06:22,220
There are also life cycle methods in English, but these will be enough for us for beginning.

63
00:06:23,620 --> 00:06:30,590
OK, now we will talk about important directives and components in English.

64
00:06:31,150 --> 00:06:37,360
First one is we can show components, video in HDMI like this, double paresis.

65
00:06:38,350 --> 00:06:43,960
Second one is we can add in expression with NGF tech.

66
00:06:45,190 --> 00:06:51,490
Third one is we can add four look in each team and with end 40.

67
00:06:52,520 --> 00:06:57,920
The other one is Wythenshawe form component with engie model tech.

68
00:06:59,200 --> 00:07:03,400
And the other components goes on like that.

69
00:07:04,880 --> 00:07:06,660
That's all for beginning.

70
00:07:07,190 --> 00:07:07,730
Thank you.
