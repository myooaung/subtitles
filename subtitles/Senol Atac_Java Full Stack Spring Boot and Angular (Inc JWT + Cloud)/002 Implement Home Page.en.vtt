WEBVTT
1

00:00:05.650 --> 00:00:10.890

Hi, guys, in this lesson, we will implement the home component before we implement it.



2

00:00:10.960 --> 00:00:13.730

Let's talk about how we will handle it.



3

00:00:14.290 --> 00:00:18.160

First of all, the home component will be our default page.



4

00:00:18.610 --> 00:00:22.570

We will create a page like this on the home page.



5

00:00:22.690 --> 00:00:26.440

We will list all books with bootstrap costs.



6

00:00:27.070 --> 00:00:32.680

These books can be purchased by customers, of course, to buy them.



7

00:00:32.800 --> 00:00:37.080

Customers should sign in to implement this page.



8

00:00:37.240 --> 00:00:44.770

We will benefit from book service and purchase service methods and we will assign these service methods



9

00:00:44.920 --> 00:00:47.220

with each HTML form data.



10

00:00:47.650 --> 00:00:54.760

So we described the listing books and purchasing book service methods in the previous lessons.



11

00:00:55.030 --> 00:01:01.750

In this lesson, we will use those methods and we will assign them to the home component.



12

00:01:02.170 --> 00:01:04.570

OK, now we can implement it.



13

00:01:05.530 --> 00:01:07.370

I'll open the home component.



14

00:01:08.230 --> 00:01:17.050

We will display the books in the home HTML so we should create a book list as a variable and type of



15

00:01:17.050 --> 00:01:19.630

it will be an array of books.



16

00:01:22.720 --> 00:01:30.100

Secondly, I need the book icon to show in book courts I can handle it by font.



17

00:01:30.100 --> 00:01:30.570

Awesome.



18

00:01:44.160 --> 00:01:51.810

Our lost variables will be added message and info, message and type of them will be.



19

00:01:52.800 --> 00:01:58.160

We will use them to show error or success messages if they occur.



20

00:01:58.770 --> 00:02:02.370

For example, a user should be signed in to purchase a book.



21

00:02:02.730 --> 00:02:09.770

We will show it with error message or when purchase is successfully completed, we will show the info



22

00:02:09.780 --> 00:02:10.190

message.



23

00:02:12.280 --> 00:02:16.120

Then we can inject our services on the constructs.



24

00:02:17.640 --> 00:02:21.870

First of all, we will use authentication service to get the current user.



25

00:02:22.590 --> 00:02:28.080

Secondly, we need the book service to call the get all books and points.



26

00:02:29.270 --> 00:02:35.390

Finally, we need purchase service to call the purchase book handsprings.



27

00:02:40.040 --> 00:02:43.640

Then we can implement the NGO in its methods.



28

00:02:45.600 --> 00:02:48.810

In this method, we will set the book lists.



29

00:02:49.930 --> 00:02:57.130

I will call the book service method, then I will set the results to Booklist.



30

00:03:00.900 --> 00:03:07.590

Now we can create our purchase method as a parameter, we will expect that book in this method, we



31

00:03:07.590 --> 00:03:17.190

will call the purchase service purchase matters and we will handle the response to purchase a book users



32

00:03:17.460 --> 00:03:18.880

should sign in.



33

00:03:19.080 --> 00:03:23.460

So, first of all, I check whether the current user is available or not.



34

00:03:24.300 --> 00:03:31.890

I can get the current user from the authentication service and I can check the idea of the user if it



35

00:03:31.890 --> 00:03:33.040

is not exist.



36

00:03:33.690 --> 00:03:39.510

I am going to set the error message as you should log in to buy a book.



37

00:03:41.180 --> 00:03:50.780

Then I create the purchase object and sent it for creating the purchase item on the shelf purchase object



38

00:03:50.960 --> 00:03:56.510

needs three fields, use it in the book idea and price.



39

00:03:57.020 --> 00:04:04.730

I can get the user idea from the current user, then I can get the book idea and price from the parameter.



40

00:04:05.330 --> 00:04:11.360

My parameter is a book object and the book object has idea and price fields'.



41

00:04:12.580 --> 00:04:20.620

Then I'll call the purchase service, save purchase methods, and I sent the purchase object with it.



42

00:04:22.330 --> 00:04:29.890

Then I will subscribe to the save purchase function, because the same purchase function is an observable



43

00:04:29.890 --> 00:04:34.610

item if the same purchase operation is completed successfully.



44

00:04:34.960 --> 00:04:36.960

I will get a response as data.



45

00:04:37.630 --> 00:04:44.830

If the mission is successfully completed, I can show it as an info message information which can be



46

00:04:45.010 --> 00:04:47.430

like mission is completed.



47

00:04:48.850 --> 00:04:56.430

Then I will implement the Ed block, if there is an error, we shall set the error message.



48

00:04:56.710 --> 00:04:59.120

We can set it like unexpected error.



49

00:04:59.160 --> 00:05:01.650

OK, just put the bucket.



50

00:05:01.870 --> 00:05:04.390

We can also write the error on the console.



51

00:05:11.020 --> 00:05:19.510

OK, now our home component is ready, now we will implement our home, give let's open the home estimate.



52

00:05:22.030 --> 00:05:30.380

First of all, let's clear the contents, then I start to write HDMI content using the format plug.



53

00:05:31.780 --> 00:05:38.950

We generally use the container to wrap the whole contents, and I want to add some padding to the top



54

00:05:38.950 --> 00:05:39.670

of the container.



55

00:05:40.600 --> 00:05:44.080

We need an ED block to display error message.



56

00:05:44.500 --> 00:05:47.890

You know that we describe the error message variable on the component.



57

00:05:48.130 --> 00:05:54.460

We can use it to display errors if there is ocurred, error on the server, connection to show it.



58

00:05:54.470 --> 00:05:56.260

We will use a division element.



59

00:05:56.590 --> 00:05:57.420

This element.



60

00:05:57.430 --> 00:06:04.240

We'll have two classes, one is alert and the other one is danger, which puts the message in a red



61

00:06:04.240 --> 00:06:09.100

box and we will display it only if there is an error message.



62

00:06:10.080 --> 00:06:12.940

So we can handle it with the NGF directive.



63

00:06:13.470 --> 00:06:15.720

Finally, we will display the error message.



64

00:06:17.290 --> 00:06:27.280

In the same way, I sure the infamous also in this case, I'll use alert and alert success as Element



65

00:06:27.280 --> 00:06:27.760

Classis.



66

00:06:37.850 --> 00:06:47.800

Then I'll show the booklist with cuts, cards will be displayed in flex mode and it will fit the roll.



67

00:06:48.620 --> 00:06:53.180

So I will have an element and this element will have two classes.



68

00:06:53.690 --> 00:06:59.390

One is the flex and the other one is flex wrap.



69

00:07:00.140 --> 00:07:00.950

Inside it.



70

00:07:01.100 --> 00:07:06.170

I'll carry the cart and I'll add some margin for my cuts.



71

00:07:06.590 --> 00:07:15.320

And on my cuts I want to give it and I want to specify a background color to do it.



72

00:07:15.470 --> 00:07:25.580

I'll use the attribute and the width of cuts can be 200 pixels and the background color might be light



73

00:07:25.580 --> 00:07:25.970

gray.



74

00:07:27.310 --> 00:07:29.500

Then I hit the top.



75

00:07:31.100 --> 00:07:39.320

Then I will use the energy for detective and I show the book details with the card component energy



76

00:07:39.320 --> 00:07:45.780

for is a structural directive that renders a template for each item in a collection.



77

00:07:45.950 --> 00:07:48.260

So our collection is Booklist.



78

00:07:48.680 --> 00:07:54.830

I will render each book item in the book list with the energy for detective.



79

00:07:59.310 --> 00:08:05.220

We can also get the index video from the list with the energy for director.



80

00:08:06.470 --> 00:08:11.960

Then we will have a book icon in the book cart to describe it.



81

00:08:12.230 --> 00:08:21.200

We will use the font awesome eye contact font, awesome for what's it if a I context to describe icons



82

00:08:21.200 --> 00:08:27.380

in English, then we can describe the icon with the icon DirecTV in this tech.



83

00:08:27.680 --> 00:08:36.200

For example, here we describe the book icon so we can use it like this after describing it, we need



84

00:08:36.200 --> 00:08:37.490

some style on it.



85

00:08:37.650 --> 00:08:44.420

For example, we need to centralize it so we use margin quarter for the left and right side.



86

00:08:45.260 --> 00:08:54.470

Then we need to shrink it with font size and we need to colorize it so we can do them with a custom



87

00:08:54.470 --> 00:08:55.290

style function.



88

00:08:55.820 --> 00:09:01.640

Let's create a custom style on home component Cyesis, for example.



89

00:09:01.790 --> 00:09:04.400

We can create it as book icon.



90

00:09:05.480 --> 00:09:14.690

Then the font size of it can be a hundred pixels and the color of it might be orange.



91

00:09:17.260 --> 00:09:22.180

OK, now we can call our Cyesis function from SDM.



92

00:09:26.050 --> 00:09:36.330

Now, let's check it, let's reload the homepage and check it out, open the home from the browser from.



93

00:09:42.440 --> 00:09:48.470

OK, now we have some cuts and these cuts have only book.



94

00:09:49.400 --> 00:09:53.570

Now we will complete body of these cuts.



95

00:09:54.560 --> 00:09:58.310

I carry a division element inside the book.



96

00:09:58.330 --> 00:09:59.590

Cut it.



97

00:09:59.600 --> 00:10:03.410

You'll have a cut by the glass inside it.



98

00:10:03.590 --> 00:10:05.480

I carry the header element.



99

00:10:06.050 --> 00:10:10.220

It will have a car title class next to it.



100

00:10:10.490 --> 00:10:13.720

I'll add a header element for the subtitle.



101

00:10:14.630 --> 00:10:24.550

I will have a cut subtitle class and some margin bottom and the color of it can like a little bit faded.



102

00:10:24.950 --> 00:10:29.120

So it is text made next to it.



103

00:10:29.270 --> 00:10:37.190

I'll add a paragraph element for the description part so the class of it will be cut text.



104

00:10:37.850 --> 00:10:43.100

Finally, I'll add a button for purchase button or buy button.



105

00:10:43.850 --> 00:10:54.770

It will has BTE and class and it will cover the whole Huntingdon's percent with and I'll add some margin



106

00:10:54.770 --> 00:10:58.490

top for it to separate it from the description text.



107

00:10:59.390 --> 00:11:06.500

Then I'll add a style extra bit for it and I specify the background color as green.



108

00:11:08.310 --> 00:11:10.260

Then I hit the top.



109

00:11:11.300 --> 00:11:14.840

And Emmet's billion will take care of the rest of it.



110

00:11:15.620 --> 00:11:19.660

Car title will come from the book item title.



111

00:11:20.090 --> 00:11:22.670

I can describe it with double braces.



112

00:11:23.590 --> 00:11:32.920

As a subtitle, I can show the price of the book item here, I need to show it in USDS format, so I



113

00:11:32.920 --> 00:11:39.820

need to use currency pipe, I use Courant's pipe and the currency will be Usdin.



114

00:11:40.570 --> 00:11:45.770

Then in context, I can show the book description.



115

00:11:46.780 --> 00:11:54.760

Finally, bottom text will be by because I used to purchase the book item.



116

00:11:55.480 --> 00:12:04.300

Then as click here and I'll call the purchase function from the home component and as a parameter I



117

00:12:04.300 --> 00:12:06.460

should pass the book item.



118

00:12:10.460 --> 00:12:11.750

OK, that's OK.



119

00:12:12.050 --> 00:12:19.010

Now let's check it from the browser, then we can test it with different cases.



120

00:12:21.780 --> 00:12:29.850

OK, woodcuts look good when I tried to buy a book with a user, I can purchase it and then I should



121

00:12:29.850 --> 00:12:39.030

see a message like mission is completed, or if I don't sign in or login, then I try to buy a book.



122

00:12:39.240 --> 00:12:44.410

I should see an error message as you should log in to buy a book.



123

00:12:45.410 --> 00:12:49.320

OK, everything looks perfect, that's all.



124

00:12:49.470 --> 00:12:49.980

Thank you.

