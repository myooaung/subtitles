1
00:00:05,450 --> 00:00:13,670
Hi, guys, in this lesson, we will create our digital repository and we will send our code to this

2
00:00:13,880 --> 00:00:16,170
GitHub repository in local.

3
00:00:16,640 --> 00:00:21,530
We can create some files and we can implement some developments.

4
00:00:22,550 --> 00:00:28,010
These local developments can be presented by a couple of files.

5
00:00:29,150 --> 00:00:33,040
These files are committed with it.

6
00:00:34,040 --> 00:00:40,730
Then we can deliver and store these repositories on GitHub as clot.

7
00:00:41,450 --> 00:00:50,570
So did is a version control system that we can store it on local or remote getup is an alternative.

8
00:00:50,870 --> 00:00:56,360
Get remote cost to create and tostada.

9
00:00:56,360 --> 00:00:58,450
Guedes repository on the guitar.

10
00:00:59,570 --> 00:01:02,270
We can follow these steps.

11
00:01:02,960 --> 00:01:06,140
First of all, to create a good project.

12
00:01:06,230 --> 00:01:09,710
We need to initialize it on our project.

13
00:01:10,350 --> 00:01:15,800
Secondly, we can create some developments on our project.

14
00:01:16,130 --> 00:01:25,070
But we should add these developments to the gate repository because the git repository should be aware

15
00:01:25,070 --> 00:01:25,850
of that.

16
00:01:26,630 --> 00:01:33,770
By the way, Gaede adds files to only the lead stage area or get index.

17
00:01:34,460 --> 00:01:41,120
If they want to store them in Geita repository, we should commit them.

18
00:01:41,630 --> 00:01:52,940
So the difference between AD and commit comment is did add comment stores, the flies in the Gaete stage

19
00:01:52,940 --> 00:02:00,500
or did index did commit towards the fires in the Guidi poster.

20
00:02:01,530 --> 00:02:09,320
Finally, we will create a guitar repository and we will relate our local repository with it.

21
00:02:10,100 --> 00:02:14,270
Then we will push the files to the get up.

22
00:02:14,900 --> 00:02:19,390
We can push them to a branch with obsolete remote.

23
00:02:19,820 --> 00:02:26,560
So in that case, our brains will be reachable with git pull comments.

24
00:02:27,920 --> 00:02:31,130
Now let's implement it to do it.

25
00:02:31,430 --> 00:02:38,660
First of all, we will open our GitHub dashboard, then we will connect to the repository button.

26
00:02:42,040 --> 00:02:52,930
Then we will specify our reporter name, our reporter name will be Sprink Board book sellers, then

27
00:02:52,960 --> 00:02:56,920
we can set access rights here.

28
00:02:56,930 --> 00:02:58,870
We will set it as public.

29
00:02:58,870 --> 00:03:07,060
But of course, you can go on with private, not then we can create it actually get is what we do to

30
00:03:07,060 --> 00:03:08,380
import our code here.

31
00:03:08,380 --> 00:03:13,870
First of all, we will initialised get on our project, then we will add all items to it.

32
00:03:14,200 --> 00:03:17,380
Then we will relate our remote repository with the project.

33
00:03:17,590 --> 00:03:20,710
Then we will commit our course with a comet message.

34
00:03:20,890 --> 00:03:24,710
Finally, we will push it to branch in Indonesia.

35
00:03:24,740 --> 00:03:25,510
We can do it.

36
00:03:25,510 --> 00:03:27,160
We are comment or we can do it.

37
00:03:27,160 --> 00:03:28,840
We are user interface here.

38
00:03:28,840 --> 00:03:34,620
Our guide comments are ready so we can use these comments from the terminal easily.

39
00:03:35,180 --> 00:03:43,090
First of all, we will initialize our project in intelligent after the initialization in the intelligence,

40
00:03:43,090 --> 00:03:46,390
we can see the git tap on the.

41
00:03:48,490 --> 00:03:54,940
So from the GitHub we can see the user interface for the iGate.

42
00:03:58,100 --> 00:04:06,050
From the user interface, we can add or commit or we can create some message for these comments, then

43
00:04:06,050 --> 00:04:12,760
we can commit and push from the user interface in intelligent easily anyway.

44
00:04:12,770 --> 00:04:18,200
We can go on with terminal, then I'll add all files to the get stage.

45
00:04:19,640 --> 00:04:25,580
Then I'll create the relation between GitHub and my local repository.

46
00:04:35,840 --> 00:04:42,890
Then I'll commit my files with a comedy message, my economic message can be initial.

47
00:04:47,130 --> 00:04:56,880
Finally, I push my comets to get up here, I should send it in upstream, not because we want to use

48
00:04:56,880 --> 00:05:00,680
our local branch name on the remote with the same name also.

49
00:05:00,780 --> 00:05:08,010
So when we push the local branch with the upstream option, that local branch is linked with the remote

50
00:05:08,010 --> 00:05:09,480
branch automatically.

51
00:05:16,980 --> 00:05:22,050
OK, now our quote is reachable from GitHub as public, that's all.

52
00:05:22,200 --> 00:05:22,740
Thank you.
