1
00:00:05,720 --> 00:00:12,060
Hi, guys, in this lesson, we will create our model class for purchase history.

2
00:00:13,310 --> 00:00:22,190
Actually, the purchase historic class will be a basic class that has the user I.D. book idea and Kree

3
00:00:22,190 --> 00:00:29,780
Time Fields because we want to store the relation between the user and the book.

4
00:00:30,170 --> 00:00:33,070
We can think of it as a log table.

5
00:00:33,410 --> 00:00:44,000
So this table will keep the transaction like this user purchased that book on this date with this price.

6
00:00:44,540 --> 00:00:52,850
So we will implement these transaction look on our table to do it under the model because we will create

7
00:00:52,850 --> 00:01:02,750
the purchase history class, purchase history class, we'll have a database table relation and purchase

8
00:01:02,750 --> 00:01:04,580
history will be an entity.

9
00:01:07,050 --> 00:01:15,340
In here, when we say into this glass will be usual persistance API entity, so hibernate or G.P.A.,

10
00:01:15,360 --> 00:01:18,990
we'll know that this glass isn't into the glass here.

11
00:01:18,990 --> 00:01:27,150
When we say table, this glass is related to a database table and the name of a table is named property

12
00:01:27,150 --> 00:01:27,930
on the table.

13
00:01:27,930 --> 00:01:31,170
In addition to our table name will be a purchase.

14
00:01:31,170 --> 00:01:32,550
Underscore history.

15
00:01:33,990 --> 00:01:35,630
We will have an idea.

16
00:01:35,650 --> 00:01:43,080
Fields and Idy will be the primary key and it will be auto increment generated value.

17
00:01:44,130 --> 00:01:48,140
We can use identity as a generation strategy.

18
00:01:48,150 --> 00:01:55,080
It relies on an auto incremented database column and lets the database generate any video.

19
00:01:55,080 --> 00:02:01,440
With each insert operation, we will have a user ID field.

20
00:02:02,160 --> 00:02:08,900
We can also relate this field with the table column directly using column annotation here.

21
00:02:09,180 --> 00:02:17,130
We won't use hibernates mappings because we don't want to struggle with hibernate performance issues.

22
00:02:17,880 --> 00:02:22,640
Of course we can associate it with the user class to handle it.

23
00:02:22,650 --> 00:02:27,570
We can use Minetta one and join relations in hibernate.

24
00:02:28,020 --> 00:02:32,870
But when we use them, Hibernate generates extra select queries.

25
00:02:32,880 --> 00:02:40,380
So for now we can use pure user idea instead of user model class.

26
00:02:44,680 --> 00:02:47,090
We will have a book Idea Fields.

27
00:02:48,010 --> 00:02:50,380
It will be a not nullable field.

28
00:02:57,140 --> 00:03:05,480
We will have a price field, these fields will start a price that the book has the price on a special

29
00:03:05,480 --> 00:03:09,650
purchase date, you know that price can be changed by time.

30
00:03:09,660 --> 00:03:13,320
So we should set for the specific date.

31
00:03:13,940 --> 00:03:16,810
Finally, we'll have a great time field.

32
00:03:17,150 --> 00:03:19,880
These will be used for logging.

33
00:03:29,390 --> 00:03:38,360
Now our fields are ready, but they are in private mode to access them, we should describe the getter

34
00:03:38,360 --> 00:03:40,520
and setter for all of them.

35
00:03:40,910 --> 00:03:45,470
At this point, we will use Lomborg data annotation together.

36
00:03:45,470 --> 00:03:50,170
Setar equals and what methods we will use Lumberg Data Annotation Ltd..

37
00:03:50,180 --> 00:03:54,560
In addition, we'll handle getter setter equals and has got methods automatically.

38
00:03:55,550 --> 00:03:58,800
OK, we have just created our model class.

39
00:03:59,330 --> 00:03:59,840
Thank you.
