WEBVTT
1

00:00:00.780 --> 00:00:08.700

Hi, guys, in this lesson, we will talk about sibling security, default configuration and customization,



2

00:00:09.330 --> 00:00:15.960

sibling security provides an authorization filter for request and responses.



3

00:00:16.980 --> 00:00:23.540

With spring security, we can define permitted and not permitted pets.



4

00:00:24.310 --> 00:00:29.370

Also, we can define these permissions, according to Ross.



5

00:00:30.640 --> 00:00:37.840

Also, we can define session and authorization types in supreme security.



6

00:00:39.140 --> 00:00:46.760

Let's understand these things with Logan example, first of all, let's see the default configuration



7

00:00:46.760 --> 00:00:51.420

of cyber security, you know that tool in a system.



8

00:00:51.590 --> 00:00:59.960

First of all, we should send our credentials like username and password for our clients that we can



9

00:00:59.960 --> 00:01:02.250

send it with two different ways.



10

00:01:02.750 --> 00:01:10.580

First one is we can directly post it with foreign payloads or pet parameters.



11

00:01:11.530 --> 00:01:16.160

Second one is we can send a tweet using authorization.



12

00:01:16.160 --> 00:01:18.560

Had to do it.



13

00:01:18.770 --> 00:01:22.880

We should send basic base64 token.



14

00:01:23.930 --> 00:01:29.300

This token should be constructed from username and password.



15

00:01:30.540 --> 00:01:40.760

Later, this will be sent to server side and Ciprian security will touch it and check it to do it.



16

00:01:40.910 --> 00:01:47.630

Our first requirement is what the default login pad is for spring security.



17

00:01:49.010 --> 00:02:00.140

Spring security login API that is just log in spring describes default login for arguments with form



18

00:02:00.140 --> 00:02:02.570

login property form.



19

00:02:02.570 --> 00:02:07.040

Login is a form login configuration components.



20

00:02:09.730 --> 00:02:19.690

And form Logan Configurator works with these default parameters, firstly the default login page and



21

00:02:19.690 --> 00:02:22.030

login process, Pett is login.



22

00:02:23.300 --> 00:02:33.050

Secondly, after Log-in request, the logging operation can be successful or failed if logging operation



23

00:02:33.050 --> 00:02:38.200

is successful, the response of logging will return as successful.



24

00:02:38.690 --> 00:02:43.400

So there is no other default path for successful result.



25

00:02:44.120 --> 00:02:52.160

If logging operation is failed, the failure path will be logged in mid air parameter.



26

00:02:53.640 --> 00:03:04.500

Third one is looking also related with logout, so default, successful logout parties is indeed logout



27

00:03:04.500 --> 00:03:05.160

parameters.



28

00:03:06.330 --> 00:03:09.120

These were formed local property.



29

00:03:10.420 --> 00:03:19.840

The other default configuration is HTP, basically this means skippering security will check your credentials



30

00:03:19.840 --> 00:03:30.950

with E, the incoming HDTV request contains the authorization header or not, and its value starts with



31

00:03:31.120 --> 00:03:31.810

basic.



32

00:03:33.230 --> 00:03:42.260

The other default configuration is HTP session, you know, that sessions so the date of authenticated



33

00:03:42.260 --> 00:03:52.480

users in supreme security, the default configuration for session is if required so as to bring security



34

00:03:52.490 --> 00:04:02.000

to bring security, will carry this session when it needs all the other default configuration is cross



35

00:04:02.000 --> 00:04:03.950

site request forgery.



36

00:04:04.610 --> 00:04:14.230

Cross site request forgery is an attack that forces an ant user to execute unwanted actions on its web



37

00:04:14.270 --> 00:04:16.940

application to avoid it.



38

00:04:17.450 --> 00:04:19.070

Skippering security users.



39

00:04:19.070 --> 00:04:25.580

Kookie and HTP flags, for example, cybering security users.



40

00:04:25.790 --> 00:04:29.180

HDTV only Flett with this.



41

00:04:29.540 --> 00:04:34.790

The Barasso not the display, the cookie drawer Clydeside scripts.



42

00:04:35.900 --> 00:04:45.800

Last one is logout the default logout pet is in Cyprien Security log out after logout.



43

00:04:45.920 --> 00:04:56.870

Sibling security will be directed to login with parameter logout and the default HTP method is post.



44

00:04:58.530 --> 00:05:03.670

OK, these were default Cyprien security configurations.



45

00:05:04.260 --> 00:05:10.780

Now we will talk about our custom configurations and how can we customize it.



46

00:05:11.820 --> 00:05:16.860

First one is we can add cross origin resource sharing support.



47

00:05:17.840 --> 00:05:28.010

Cross resource sharing minutes cross Orji request crossed Augier means outside of the origin, so we



48

00:05:28.010 --> 00:05:36.680

can say that cross origin resource sharing also has to specify who and which origins can access the



49

00:05:36.680 --> 00:05:38.420

assets on search.



50

00:05:39.560 --> 00:05:48.230

Cross origin resource sharing can be described on HDTV beheaders like Access Control, L.O. Origin or



51

00:05:48.380 --> 00:05:52.270

Access Control and low headers, etc. Things.



52

00:05:53.030 --> 00:05:56.710

OK, that's all about cross-border associate.



53

00:05:57.410 --> 00:06:07.940

Second one is we can describe public Urus so this year can be reachable by everybody without authorization.



54

00:06:08.690 --> 00:06:11.960

Third one is we can describe U.



55

00:06:11.960 --> 00:06:12.140

R.



56

00:06:12.140 --> 00:06:23.720

S based on user rules, for example, blah, blah, pets can be reached by just admins, etc. The other



57

00:06:23.720 --> 00:06:29.000

one is we can define Logan's pets in spring security.



58

00:06:29.180 --> 00:06:36.620

The default logout pet is Lorgat, but we can change it with Lowgar Request Metcher.



59

00:06:38.110 --> 00:06:47.590

The other one is about looking for about looking for we can change the login page login process, you



60

00:06:47.590 --> 00:06:52.210

are a successful login pad or Heyler login page.



61

00:06:53.820 --> 00:07:02.180

The other one is we can change S. policy, for example, we can use stateless session.



62

00:07:02.730 --> 00:07:08.610

So in that case, each and every request needs to be rethought unticketed.



63

00:07:09.820 --> 00:07:18.670

We can use never session in that case, the framework will never create a session itself, but it will



64

00:07:18.670 --> 00:07:30.250

use one of them if it already exists or we can use always session in that case, session will always



65

00:07:30.250 --> 00:07:31.000

be created.



66

00:07:31.000 --> 00:07:38.440

If one doesn't already exist, the other customization can be disabled.



67

00:07:38.440 --> 00:07:40.080

Cross site request forgery.



68

00:07:40.720 --> 00:07:48.610

If you want to work with different parts, you cannot use cross site request forgery directly to use



69

00:07:48.610 --> 00:07:48.820

it.



70

00:07:49.090 --> 00:07:52.810

You should describe proxy between Pott's.



71

00:07:53.920 --> 00:07:57.280

OK, the customization can be like that.



72

00:07:59.600 --> 00:08:07.850

S final thing, we will talk about a complete authentication, progress in Sebring security.



73

00:08:09.200 --> 00:08:17.540

First of all, sent a request from Kulaks site, for example, like logging operation or leased operation,



74

00:08:18.200 --> 00:08:20.150

that own server side.



75

00:08:20.360 --> 00:08:24.760

This request will be accessed by skippering security filter.



76

00:08:25.700 --> 00:08:29.480

This filter can be basic authentication filters.



77

00:08:30.540 --> 00:08:38.730

Later, Supreme Security, we'll check authorization, Heather, on this request authorization can be



78

00:08:38.730 --> 00:08:47.940

sent with basic Heather Beera, Heather, all can be stored with session later cybering security will



79

00:08:47.940 --> 00:08:54.830

pass authorization, Heather and we'll find it username and roll's information.



80

00:08:55.980 --> 00:09:04.500

Then with this data cybering, security will carry that or don't teach an object in security context



81

00:09:05.490 --> 00:09:10.470

that it will check the requested part with this authentication object.



82

00:09:11.200 --> 00:09:17.740

If it is permitted, we'll return successful pads, otherwise we'll return failure.



83

00:09:18.880 --> 00:09:24.280

Also with this response, we can reach authentication object.



84

00:09:24.970 --> 00:09:35.890

This ID object contains authorities, I mean, rules of user principles, user details and credentials



85

00:09:37.540 --> 00:09:38.650

as lasting.



86

00:09:38.950 --> 00:09:45.670

We should notice something after login and log out the default.



87

00:09:45.670 --> 00:09:53.440

Successful part will be same because login pat is login and successful.



88

00:09:53.440 --> 00:09:57.190

Logansport is login with logger's parameter.



89

00:09:57.850 --> 00:10:06.790

So to do it for both of them we will check authentication object or principle object to separate them



90

00:10:07.030 --> 00:10:07.960

for logout.



91

00:10:07.960 --> 00:10:11.230

Principle will be null for login.



92

00:10:11.230 --> 00:10:15.520

Principle will be username.



93

00:10:16.590 --> 00:10:23.010

But we will also notice hunting here for both case.



94

00:10:23.340 --> 00:10:24.480

We will return.



95

00:10:24.780 --> 00:10:32.250

OK, it's TTP status because both of them are successful operations.



96

00:10:33.220 --> 00:10:37.270

OK, that's all about sibling security configuration.



97

00:10:37.830 --> 00:10:38.340

Thank you.

