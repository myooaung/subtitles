WEBVTT
1

00:00:05.610 --> 00:00:12.480

Hi, guys, in this lesson, we will create the book controller, so in the one of the previous lessons,



2

00:00:12.690 --> 00:00:20.640

we described our book service in this lesson, we will call it from the controller and we will map our



3

00:00:20.640 --> 00:00:23.520

rest API requests to do it.



4

00:00:23.730 --> 00:00:29.150

First of all, we will create a controller class under the controller package.



5

00:00:29.430 --> 00:00:37.530

We will create the book controller class to describe book controller as a controller class.



6

00:00:37.740 --> 00:00:40.770

We will add a controller annotation to it.



7

00:00:42.150 --> 00:00:49.360

Then we can add request mapping, annotation to add prepared for all methods on the controller.



8

00:00:50.310 --> 00:00:59.250

For example, here, if we add API book as it prepared to access the methods under the book controller,



9

00:00:59.670 --> 00:01:03.870

we need to start with the API slash book part.



10

00:01:06.030 --> 00:01:11.630

Later we will call book service for dependency injection.



11

00:01:11.640 --> 00:01:14.250

We can use Wired in SilverLink.



12

00:01:15.690 --> 00:01:19.170

Okay, now we can create our API methods.



13

00:01:19.620 --> 00:01:24.900

Our first method will be saved book in the rest controller.



14

00:01:25.080 --> 00:01:27.900

We will define every method with response.



15

00:01:27.900 --> 00:01:36.340

And the population response entity is a population that contains HTP header, HTP status and responsibility



16

00:01:36.720 --> 00:01:38.490

for our save book method.



17

00:01:38.820 --> 00:01:46.050

We will reach from NATO of request with request, by the annotation with using recurse by the annotation



18

00:01:46.230 --> 00:01:47.690

we can reach form data.



19

00:01:48.750 --> 00:01:51.440

Similarly, we have declares paramount.



20

00:01:51.600 --> 00:01:54.180

We are able annotations to reach and point variables.



21

00:01:54.780 --> 00:01:58.170

At this point, Progress API provides many utilities.



22

00:01:59.310 --> 00:02:06.060

Our mapping request method will be post mapping and the API that will be like API select book.



23

00:02:06.360 --> 00:02:06.840

How?



24

00:02:07.140 --> 00:02:15.780

Because we describe it as perrottet on class level and finally we will call our product saving method



25

00:02:15.780 --> 00:02:21.150

from product service and return created HTP statis.



26

00:02:31.840 --> 00:02:43.000

OK, that's all about the save method, our second method will be to delete that book by Idy here we



27

00:02:43.000 --> 00:02:45.820

can send the book by the expert variable.



28

00:02:52.230 --> 00:03:04.520

Maybe type will be the lead mapping and the Apple iPad will be API book, Pelosse book, Idy API slash



29

00:03:04.530 --> 00:03:15.350

book is coming from Bedrest Mapping and the book idea comes from paired variable than we can call the



30

00:03:15.350 --> 00:03:18.190

delete book method from book service.



31

00:03:20.190 --> 00:03:23.240

Finally return on HDTV status.



32

00:03:24.870 --> 00:03:28.380

OK, that's all about the delete book method.



33

00:03:29.130 --> 00:03:32.670

Our last method will be get all books.



34

00:03:33.360 --> 00:03:37.200

This will be a guess mapping and the API.



35

00:03:37.200 --> 00:03:46.680

That will be the same with class level request mapping so we can understand from here API iPads can



36

00:03:46.680 --> 00:03:51.330

be the same for different request mappings for our case.



37

00:03:51.510 --> 00:04:00.300

The API pad for board yet and post mapping is API book and it is not a problem.



38

00:04:00.690 --> 00:04:06.190

Of course, if we use the same mapping type, this will be a problem.



39

00:04:07.770 --> 00:04:12.420

Finally, return the body with OK HTP status.



40

00:04:19.870 --> 00:04:23.690

OK, now our product controller class is ready.



41

00:04:24.460 --> 00:04:31.450

Finally, we will customize security configuration for book API and points.



42

00:04:32.350 --> 00:04:36.800

Getting all books should be reachable by everyone.



43

00:04:37.420 --> 00:04:41.110

So we will describe it as a permitted pets.



44

00:04:41.770 --> 00:04:53.050

But other book and points should be accessible by only Edman so only admins can save book and the lead



45

00:04:53.050 --> 00:04:53.370

book.



46

00:04:54.400 --> 00:04:58.200

We can handle it from HTP security configuration.



47

00:04:59.440 --> 00:05:05.590

But here the important thing is the order of the permissions.



48

00:05:06.520 --> 00:05:15.700

First of all, we should describe the permission that then we should describe the restriction pad because



49

00:05:15.820 --> 00:05:18.910

skippering security expects it like that.



50

00:05:30.660 --> 00:05:34.560

OK, that's all about book control implementation.



51

00:05:34.940 --> 00:05:35.450

Thank you.

