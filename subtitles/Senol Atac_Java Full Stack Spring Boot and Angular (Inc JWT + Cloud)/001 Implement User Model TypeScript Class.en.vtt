WEBVTT
1

00:00:05.430 --> 00:00:12.870

Hi, guys, in this lesson, we will create our model class for use it, you know that in previous lessons



2

00:00:13.020 --> 00:00:16.190

we describe the user model on the server side.



3

00:00:16.530 --> 00:00:24.240

So the logic will be the same on Kaline side because we will use model wave control or architecture



4

00:00:24.270 --> 00:00:25.360

on angler's.



5

00:00:25.500 --> 00:00:32.270

Also, we can go along with Kirgizstan, but models provide a structured model.



6

00:00:32.460 --> 00:00:39.760

So we basically create these models or classes in order to avoid writing a lot of variables.



7

00:00:40.050 --> 00:00:44.430

It is very helpful to have models and classes in our application.



8

00:00:44.970 --> 00:00:47.070

So let's create the user model.



9

00:00:48.450 --> 00:00:58.220

User class will be the same IT server side so it has a name, username, password, role and talk.



10

00:00:58.710 --> 00:01:08.040

First of all, I'll create a new folder under the app and I can call it as models under the models package.



11

00:01:08.110 --> 00:01:12.090

Let's create a file and call it as user.



12

00:01:12.090 --> 00:01:13.910

That model, that case.



13

00:01:15.150 --> 00:01:18.290

So it will be a typescript file.



14

00:01:18.900 --> 00:01:22.170

So I'll write our class here.



15

00:01:22.560 --> 00:01:24.110

Class name will be users.



16

00:01:25.260 --> 00:01:30.780

It should be reachable by other components, so I should export it.



17

00:01:31.320 --> 00:01:38.640

And here I simply want to define how it should look like I do this by adding user fields.



18

00:01:39.690 --> 00:01:47.630

First field is idy and type of it should be no it can be undefined also if it is not defined.



19

00:01:48.480 --> 00:01:52.830

The second one is the user name and the type of it should be streamed.



20

00:01:53.220 --> 00:01:55.550

I can initialize it as blank.



21

00:01:56.460 --> 00:02:01.170

The third one is the password and the type of it should be scissoring.



22

00:02:02.040 --> 00:02:04.380

I can initialize it blank also.



23

00:02:05.550 --> 00:02:09.420

The other one is the name and the type of it should be string.



24

00:02:09.810 --> 00:02:11.730

I can initialize it blank.



25

00:02:13.380 --> 00:02:17.490

The other one is the token and the type of it should be string.



26

00:02:18.300 --> 00:02:20.460

I can initialize it blank.



27

00:02:21.810 --> 00:02:30.860

Finally, I should describe the role field, but the rule field is an inam field in typescript.



28

00:02:31.410 --> 00:02:39.180

I can also describe inam process and it provides better structure also that's created under the models



29

00:02:39.180 --> 00:02:44.970

folder and we can call it as role that inam that Tierce.



30

00:02:46.890 --> 00:02:55.260

I'll export it as Inam broth actually on the back and we have three different roles, but one of them



31

00:02:55.260 --> 00:03:02.280

is internal, so we don't use it external so we can ignore it on the client side.



32

00:03:03.420 --> 00:03:07.920

So user and admin roles will be enough on the client site.



33

00:03:14.530 --> 00:03:24.100

Then we will create and imported from our user model class for initial video, we can use it as usit.



34

00:03:30.040 --> 00:03:34.150

OK, that's all about the user middle class, thank you.

