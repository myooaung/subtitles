1
00:00:05,540 --> 00:00:12,650
Hi, guys, in this lesson, we will create Hiroku configuration on our project, we need three different

2
00:00:12,650 --> 00:00:14,820
configurations on Anglet.

3
00:00:15,230 --> 00:00:25,310
These are EBP Jason Profile and build script on APJ so we can describe the Herock at properties like

4
00:00:25,400 --> 00:00:29,630
name of app resources of app, Beeld Package, etc..

5
00:00:29,840 --> 00:00:35,360
Actually, we can describe how our app will be built in the profile.

6
00:00:35,570 --> 00:00:37,640
We can declare process types.

7
00:00:38,090 --> 00:00:42,290
We can have multiple modules like work or web, etc..

8
00:00:43,310 --> 00:00:49,280
In the Beeld script, we should describe how Hiroku will build our application.

9
00:00:49,730 --> 00:00:52,090
OK, now let's start with the app.

10
00:00:52,100 --> 00:00:53,130
AJ Sandfire.

11
00:00:53,450 --> 00:01:01,220
It has some basic configuration settings like name, deal, type environments, variables, etc. We

12
00:01:01,220 --> 00:01:06,380
can describe them under app that JSON on our project.

13
00:01:06,680 --> 00:01:14,720
First of all, let's create an app JSON file under the project at a JSON will be adjacent object.

14
00:01:15,140 --> 00:01:17,930
Our first property will be the name.

15
00:01:26,870 --> 00:01:32,060
And then we will describe the attack we will use not Aegeus as a built back.

16
00:01:43,090 --> 00:01:47,540
OK, these properties will be enough for beginning here.

17
00:01:47,680 --> 00:01:54,780
We can give more details about it, but we can handle all properties from the Hiroku interface easily.

18
00:01:54,800 --> 00:01:55,180
Awesome.

19
00:01:56,110 --> 00:01:59,320
Now we will create the profile for Hiroku.

20
00:02:00,310 --> 00:02:07,330
Hiroku apps include a profile that specifies the comments that are executed by the app on Startup.

21
00:02:07,510 --> 00:02:13,330
Actually, in this file we can describe how our application will run and will serve.

22
00:02:13,750 --> 00:02:17,980
If you remember it, we already describe it in the previous listen.

23
00:02:18,280 --> 00:02:27,790
So we describe an express server and we describe it as a NPM script and our script name is Start Now.

24
00:02:27,790 --> 00:02:33,370
We will create a profile and we will call this comment from that in the Heroku.

25
00:02:33,370 --> 00:02:37,090
We can work with different resources if we have different modules.

26
00:02:37,390 --> 00:02:40,920
But this is not for English or not English application.

27
00:02:40,930 --> 00:02:46,510
We will have a single web server and we will serve our application as a resource.

28
00:02:47,110 --> 00:02:49,480
Then we will call the AMPM Start comment.

29
00:02:53,950 --> 00:03:00,610
Finally, we will describe the heroic build secret, we will describe it under the package that Jason

30
00:03:00,910 --> 00:03:09,040
gets here, we will create a build script and the script will show how Hiroku will build our application.

31
00:03:09,490 --> 00:03:13,300
Actually, he expects a specific comment for it.

32
00:03:13,600 --> 00:03:16,930
And this comment is Hiroku Post built.

33
00:03:18,520 --> 00:03:24,460
When we commit our quote to Heroku Hiroku, we'll search for this comment and we'll use it as Beeld

34
00:03:24,460 --> 00:03:24,870
comment.

35
00:03:25,570 --> 00:03:28,950
We need two things to build our application.

36
00:03:29,140 --> 00:03:34,090
First of all, we should set environments from system variables.

37
00:03:34,540 --> 00:03:38,590
Then we can build our application with the angular saola.

38
00:03:39,490 --> 00:03:43,810
We already described both of them in the previous lessons.

39
00:03:44,120 --> 00:03:49,420
Our first comment is config to call it in AMPM.

40
00:03:49,840 --> 00:03:53,950
We can write a comment like ampm rom config.

41
00:03:55,050 --> 00:04:06,570
And the second comment is built prot to call it in the AMPM, we can write a comment like AMPM Ron built

42
00:04:06,610 --> 00:04:11,070
Prot, OK, now our configurations are ready.

43
00:04:11,310 --> 00:04:18,530
When we commit our courts to Hiroku Hiroku, we'll compile and deploy our courts in this order.

44
00:04:19,230 --> 00:04:27,510
First of all, Hiroku will install all AMPM peckerwoods with NPM install, so not modules will be ready

45
00:04:27,780 --> 00:04:29,310
before the built operation.

46
00:04:29,610 --> 00:04:35,040
Secondly, Hiroku will set system variables and custom environment variables.

47
00:04:35,550 --> 00:04:39,240
One of the system variables is not an environment.

48
00:04:39,390 --> 00:04:42,200
It will set it to the production.

49
00:04:42,660 --> 00:04:49,890
Then if we have other custom environment variables, Hiroku will also serve them as environment variables.

50
00:04:50,430 --> 00:04:56,890
Thirdly, Hiroku will call the Hiroku Velt comment and build the application.

51
00:04:57,450 --> 00:05:04,710
Finally, Heroku will serve our application with the AMPM Ronstadt like we described in the profi.

52
00:05:05,370 --> 00:05:06,100
That's all.

53
00:05:06,270 --> 00:05:06,750
Thank you.
