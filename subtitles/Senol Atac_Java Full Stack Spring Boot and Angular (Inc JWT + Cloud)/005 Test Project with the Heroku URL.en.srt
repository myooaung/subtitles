1
00:00:05,530 --> 00:00:12,080
Hi, guys, in this lesson, we will test our API and points with Hiroku, you at it?

2
00:00:12,790 --> 00:00:17,490
Actually, we have completed our server side application.

3
00:00:18,070 --> 00:00:22,820
Now we will test application and points one by one.

4
00:00:23,380 --> 00:00:27,380
First of all, let's open the postman then.

5
00:00:27,400 --> 00:00:35,220
Firstly, we can test, sign up and sign in and points for sign up.

6
00:00:35,410 --> 00:00:45,340
We will send users some data with username, name and full name to the authentication and sign up endpoint

7
00:00:47,020 --> 00:00:49,600
and it will be a post request.

8
00:00:49,870 --> 00:00:55,810
This is a public outpoint so everyone can access it here.

9
00:00:55,810 --> 00:01:01,300
We can create different users like user and admin.

10
00:01:15,560 --> 00:01:20,210
When we sign up, our role will be user by default.

11
00:01:20,560 --> 00:01:28,050
Of course, we have different roles like admin, then we can sign in with the creator to use it.

12
00:01:28,970 --> 00:01:37,270
We will send a post request with username and password to authentication, sign in and point.

13
00:01:40,310 --> 00:01:47,560
We can create two different users for different roles because we will have two basic roles.

14
00:01:47,570 --> 00:01:51,620
These are user and admin after sign.

15
00:01:51,620 --> 00:01:59,120
In operation we will have a JWT token and these token will be used by the requests.

16
00:02:12,590 --> 00:02:20,930
Now we can test internal API and points, actually, we will have a single endpoint for internal API

17
00:02:21,080 --> 00:02:23,060
that is make atme.

18
00:02:23,840 --> 00:02:29,540
We will send a put request with user name and authorization value authorization.

19
00:02:29,540 --> 00:02:32,750
Video can be found from the Hiroku settings.

20
00:03:05,410 --> 00:03:13,690
Now our test users are ready, we have two different users, one of them is users and the other one

21
00:03:13,690 --> 00:03:14,410
is admin.

22
00:03:14,800 --> 00:03:20,590
Now we can test the book and points for book and points.

23
00:03:20,980 --> 00:03:26,640
Save and delete operations can only be performed by admins.

24
00:03:26,890 --> 00:03:32,210
So if we call them with the user role, they won't be triggered.

25
00:03:32,680 --> 00:03:34,780
We will get forbidden letters.

26
00:03:43,580 --> 00:03:53,300
We should send the form data in some format, we can create random content, like we write some random

27
00:03:53,300 --> 00:03:58,600
things in here because our purpose is to test the end points.

28
00:06:11,160 --> 00:06:20,490
Getting all books and point is accessible by everyone, so we don't need to send an authorization header

29
00:06:20,490 --> 00:06:20,900
for it.

30
00:06:39,490 --> 00:06:49,270
Now we can test purchase history and points our first and point Valby say purchase history, we will

31
00:06:49,270 --> 00:06:56,320
send a post request and the API that Filby API purchase history.

32
00:06:57,340 --> 00:07:01,240
Then we will send form data as JSON content.

33
00:07:02,980 --> 00:07:11,050
We can find the user idy and boogity venues from the premise and points because we have created books

34
00:07:11,050 --> 00:07:12,010
and users.

35
00:08:05,180 --> 00:08:14,990
Then we will test getting all purchases of the user and points, this will be a get request here, the

36
00:08:14,990 --> 00:08:19,100
result will be changed according to the authorized user.

37
00:08:43,110 --> 00:08:47,110
OK, our all end points are working like we want.

38
00:08:47,670 --> 00:08:48,610
That's all.

39
00:08:48,870 --> 00:08:49,440
Thank you.
