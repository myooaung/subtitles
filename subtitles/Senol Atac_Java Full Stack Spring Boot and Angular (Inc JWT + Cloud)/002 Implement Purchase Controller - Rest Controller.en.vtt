WEBVTT
1

00:00:05.430 --> 00:00:14.280

Hi, guys, in this lesson, we will implement our purchase service, and once we already have our service



2

00:00:14.280 --> 00:00:18.900

methods, we will just call them like the rest and point.



3

00:00:19.470 --> 00:00:26.520

So in one of the previous lessons, we described our purchase service in this lesson.



4

00:00:26.850 --> 00:00:33.810

We will call it from the controller and we will map our API requests to do it.



5

00:00:33.810 --> 00:00:37.380

First of all, we will create a purchase historic control class.



6

00:00:41.270 --> 00:00:48.260

To define purchases, such a controller as a control or class, we will add risk, control and attention



7

00:00:48.260 --> 00:00:51.890

to it, then we can add requires nothing.



8

00:00:51.890 --> 00:00:58.290

In addition to add prepared for all methods on purchase historic control.



9

00:00:58.790 --> 00:01:07.850

For example, here, if we add API purchase history as it prepared to access the methods under the purchase



10

00:01:07.850 --> 00:01:12.980

historic controller, we need to start with the API purchase history.



11

00:01:14.490 --> 00:01:23.180

Later, we will call purchase history service for dependency injection, we can use autopilot in spring.



12

00:01:24.960 --> 00:01:34.780

OK, now we can create our API Matus, our first method will be save purchase history in the wrest control



13

00:01:34.790 --> 00:01:41.750

or we will define every method with response and consolation for our save purchase history method.



14

00:01:41.760 --> 00:01:48.900

We will reach form data of leakiest with request by the annotation, with using tricuspid annotation.



15

00:01:48.900 --> 00:01:50.700

We can reach form data.



16

00:01:52.410 --> 00:01:56.300

Our mapping request method will be post mapping.



17

00:01:57.770 --> 00:02:06.980

And the appetite will be like a pie slash courtesy story, because we describe it as good or bad on



18

00:02:06.980 --> 00:02:07.560

Golos level.



19

00:02:08.750 --> 00:02:16.280

And finally, we will call our Curtis' same method from the purchase history service.



20

00:02:18.040 --> 00:02:20.820

And return, OK, that's.



21

00:02:24.840 --> 00:02:35.370

OK, that's all about to save matters, our last method will be get all purchases off, use it in this



22

00:02:35.370 --> 00:02:35.870

method.



23

00:02:36.090 --> 00:02:40.720

We want to call all purchases of the authenticated user.



24

00:02:41.190 --> 00:02:45.500

So here we need to access the authenticated user.



25

00:02:45.930 --> 00:02:50.360

How can we reach the old antiquated user in the spring security?



26

00:02:50.460 --> 00:02:51.870

That is the important question.



27

00:02:52.680 --> 00:02:58.390

We can access to authenticated users in spring security with three ways.



28

00:02:59.070 --> 00:03:02.430

First one is so simple are authenticated.



29

00:03:02.430 --> 00:03:05.580

User is in the security context.



30

00:03:05.880 --> 00:03:08.400

So we can get back from that.



31

00:03:09.390 --> 00:03:14.820

You can ask me, will this security context be set on after request?



32

00:03:15.330 --> 00:03:15.770

No.



33

00:03:16.320 --> 00:03:23.370

If you remember, we said authentication with filters and filters work before requests.



34

00:03:24.510 --> 00:03:29.130

Secondly, we can reach it from HTTP requests.



35

00:03:29.850 --> 00:03:33.090

HTTP request has a special fields' for it.



36

00:03:33.540 --> 00:03:40.710

User details object is also certain to HTTP request by cybering security.



37

00:03:41.820 --> 00:03:46.380

And finally, my favorite one is authentication principle.



38

00:03:47.010 --> 00:03:54.840

Spring has a specific annotation for it so we can easily reach the authenticated user from controls



39

00:03:55.200 --> 00:03:56.760

that circle, isn't it?



40

00:03:57.570 --> 00:04:06.840

Now let's return to our code so we will get the current user from authentication principle as a parameter.



41

00:04:15.230 --> 00:04:23.540

This will be a get my point and the API part will be the same meticulous level, prioritized mapping.



42

00:04:25.730 --> 00:04:29.870

Finally, return the body with OK, htp statis.



43

00:04:41.150 --> 00:04:45.800

OK, that's all about purchase history to control or implementation.



44

00:04:46.460 --> 00:04:46.970

Thank you.

