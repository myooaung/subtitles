WEBVTT
1
00:00:07.370 --> 00:00:11.240
So we have a full SMTP server implementation right now.

2
00:00:11.240 --> 00:00:18.740
We can see if things are running, but a few options are hardwired in the code, which is not good,

3
00:00:18.740 --> 00:00:22.850
and those values usually change based on deployment.

4
00:00:23.150 --> 00:00:31.520
I mean running things locally on or on the server in production so we can reuse application properties

5
00:00:31.520 --> 00:00:40.160
and these concepts concept of profiles in Springboard so we can use this spring as SMTP, server enabled

6
00:00:40.160 --> 00:00:41.390
hostname and port.

7
00:00:41.390 --> 00:00:49.040
Those free information can be used then in SMTP server service.

8
00:00:49.190 --> 00:00:52.100
So we create a few variables.

9
00:00:52.430 --> 00:01:01.460
We can use this enable variable just as a condition whether the SMTP should start or not.

10
00:01:02.390 --> 00:01:08.480
We can specify a hostname and we can specify also a port.

11
00:01:08.480 --> 00:01:17.810
So we have those free, free variables which we are going to re-use in in the code.

12
00:01:21.160 --> 00:01:28.210
Then those variables should take a value coming from application properties.

13
00:01:28.210 --> 00:01:36.490
So we use that add value annotation which is actually taking variable outside.

14
00:01:36.910 --> 00:01:45.640
From the outside it means from application properties, it can be overridden overridden by vault configuration,

15
00:01:45.760 --> 00:01:46.720
for example.

16
00:01:47.140 --> 00:01:56.710
So we have those free variables based of on application properties, text SMTP enabled here we can just

17
00:01:56.710 --> 00:02:04.840
do a copy paste for a SMTP hostname and SMTP port.

18
00:02:04.990 --> 00:02:07.450
So we have a few more variables.

19
00:02:07.540 --> 00:02:09.040
Hostname a port.

20
00:02:12.070 --> 00:02:20.620
Then we can just re-use those variables in the start method implementation.

21
00:02:20.620 --> 00:02:26.110
So we are replacing a local host specific port with the variable.

22
00:02:26.360 --> 00:02:37.480
Yes, of course we we created a port as a string so we can change it to comply the expected variable

23
00:02:37.480 --> 00:02:38.230
type.

24
00:02:39.590 --> 00:02:50.210
Of course there is no need for initial variable as to string so we can set the port and that's actually

25
00:02:50.210 --> 00:02:51.260
all we have.

26
00:02:51.260 --> 00:03:00.170
Also the the new one variable called enabled so we can create a condition and when enabled and application

27
00:03:00.170 --> 00:03:04.460
properties we start SMTP server.

28
00:03:04.460 --> 00:03:06.740
Otherwise we, we don't.

29
00:03:06.740 --> 00:03:19.760
So we just re-use this logging information and we can just inform our lock that SMTP is disabled by

30
00:03:19.760 --> 00:03:23.660
configuration if enabled is set to false.

31
00:03:26.140 --> 00:03:37.300
And this is really useful as mentioned to we can then change the configuration based on our situation.

32
00:03:37.300 --> 00:03:47.260
So for testing purposes we can we can set a different port or hostname from the production environment

33
00:03:47.260 --> 00:03:58.690
and it can, it can be handled easily with a standard, standard way we can even disable a SMTP server

34
00:03:58.690 --> 00:04:01.420
if needed for some purposes.

35
00:04:01.420 --> 00:04:11.890
And then we can start our application and we can check using a log information if things looks the way

36
00:04:11.890 --> 00:04:16.680
as we just defined in application properties.

37
00:04:16.680 --> 00:04:24.970
So so SMTP server should be running or not based on configuration using the port and everything else.
