WEBVTT
1
00:00:07.450 --> 00:00:16.150
In this lecture, we are going to enhance our attachment service with the methods for handling the files,

2
00:00:16.150 --> 00:00:26.050
like listing files we just stored in of as retrieving one file or delete files for from grid of S so

3
00:00:26.050 --> 00:00:30.070
we can cover a bunch of operations from the Y later then.

4
00:00:30.400 --> 00:00:31.930
So let's.

5
00:00:34.770 --> 00:00:42.600
Create a method for listing all files we uploaded into Grid of S.

6
00:00:42.600 --> 00:00:52.230
So let's name the list of files and we can use Grid F as operations object.

7
00:00:52.230 --> 00:00:59.040
We already have an attachment service so we can just set list and we can.

8
00:01:02.370 --> 00:01:17.640
You can find all files that reflect our query and we actually create an empty query which defines the

9
00:01:17.640 --> 00:01:18.320
logic.

10
00:01:18.330 --> 00:01:23.190
Let's find all that is being stored in a grid of s.

11
00:01:24.460 --> 00:01:26.680
To show up those items on the screen.

12
00:01:26.680 --> 00:01:35.590
We have to enhance our new attachment method so we provide some data for a new HTML file we already

13
00:01:35.590 --> 00:01:36.520
created.

14
00:01:37.570 --> 00:01:46.960
So at this point, we have that modal modal provide kind of a context for our HTML template, which

15
00:01:46.960 --> 00:01:49.570
is processed by the time leave template engine.

16
00:01:49.570 --> 00:01:56.560
So we use that modal, we add attribute here attributes or kind of maps.

17
00:01:56.560 --> 00:02:04.180
So we have a key, we have the name items and we use this our attachment service and we return list

18
00:02:04.180 --> 00:02:09.130
all files we saved in grade of S.

19
00:02:09.310 --> 00:02:16.360
So we have that attribute available to the template and we use it later in implementation.

20
00:02:16.840 --> 00:02:22.390
And third modal structure or a variable is provided to template automatically.

21
00:02:22.390 --> 00:02:23.770
So we don't handle that.

22
00:02:23.770 --> 00:02:26.890
We just add attributes to modal.

23
00:02:26.890 --> 00:02:34.150
And those attributes by with the keys are available as variables on the template.

24
00:02:35.080 --> 00:02:45.220
So we have that list all our files method here and we can just add a few more operations we need for

25
00:02:45.220 --> 00:02:46.570
our implementation.

26
00:02:46.570 --> 00:02:49.990
So we are still working on the backend part.

27
00:02:50.500 --> 00:02:58.090
We are still in Java here and we define a method for getting one grit FS file.

28
00:02:58.090 --> 00:03:05.710
So we use this method for getting that file for providing a download like operation.

29
00:03:05.710 --> 00:03:10.240
So let's name it, find one by ID.

30
00:03:11.260 --> 00:03:24.880
So we have to provide the ID parameter and method signature and we use and we return creative as operations

31
00:03:24.910 --> 00:03:30.760
object by calling find one method.

32
00:03:30.760 --> 00:03:36.010
And again, as we already done, we provide a query.

33
00:03:36.010 --> 00:03:46.630
We define a criteria for getting just one object from the grid of storage or from MongoDB itself.

34
00:03:46.630 --> 00:03:48.490
So we define criteria.

35
00:03:48.640 --> 00:03:50.620
Actually, we already done that.

36
00:03:52.960 --> 00:04:01.120
So we create condition ID has to be the same as ID provided to that method.

37
00:04:01.120 --> 00:04:13.180
So we return grade of file that way and to just to complete the logic, we need to be able also to delete

38
00:04:13.180 --> 00:04:18.310
file from grid of ask so we can create a method for that again.

39
00:04:19.300 --> 00:04:21.250
And it's actually very easy to do.

40
00:04:21.250 --> 00:04:26.530
You can see the grid as operations object contains a very good API.

41
00:04:26.530 --> 00:04:34.450
It's easy to understand and to use even without reading a documentation deeply.

42
00:04:34.450 --> 00:04:39.940
It just follows the logic we we use when working with the files.

43
00:04:39.940 --> 00:04:50.170
So we are listing files, we are finding files in the storage and we should be able to to delete files

44
00:04:50.170 --> 00:04:51.430
from the storage as well.

45
00:04:51.430 --> 00:05:00.460
So we have this delete a method and we create or we use the, the new criteria the same way as we use

46
00:05:00.460 --> 00:05:02.530
for finding a one object.

47
00:05:02.530 --> 00:05:10.870
So we use the same criteria, but we say we want to delete all the objects passing criteria, which

48
00:05:10.870 --> 00:05:14.560
is actually the right one.

49
00:05:15.630 --> 00:05:24.390
So we cover it all operation eat it and we use those in for the implementation in the next lecture.
