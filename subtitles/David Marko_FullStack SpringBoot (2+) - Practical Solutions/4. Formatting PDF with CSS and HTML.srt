1
00:00:07,410 --> 00:00:17,670
As mentioned earlier, we rely on HTML two PDF Translation and PDF can contain different tasks and different

2
00:00:17,670 --> 00:00:18,420
formatting.

3
00:00:18,420 --> 00:00:28,350
Even CSS can be used to for doing formatting that will be translated into PDF properly.

4
00:00:28,350 --> 00:00:31,470
So we can take a few approaches here.

5
00:00:31,470 --> 00:00:42,630
We can define the style attribute at each attack, so we can define kind of formatting, like adding

6
00:00:42,630 --> 00:00:54,060
a border with a color, using some kind padding, using margin, define just some space on the on the

7
00:00:54,060 --> 00:00:54,870
screen.

8
00:00:56,760 --> 00:01:09,150
We can just refresh our project so we can just reload a browser page and can see what happened.

9
00:01:09,150 --> 00:01:15,000
And we can see really the line which is a rat left to right.

10
00:01:15,000 --> 00:01:18,420
We can see some margin above that line.

11
00:01:18,420 --> 00:01:24,540
So formatting is actually okay and follows what we have done in.

12
00:01:26,280 --> 00:01:31,410
Uh, in HTML to test things.

13
00:01:31,410 --> 00:01:42,540
It's very easy to do because we use spring boot def tools and we can just reload things to speed up

14
00:01:42,540 --> 00:01:45,960
things and just to rely on something existing.

15
00:01:45,960 --> 00:01:49,860
We can include bootstrap CSS.

16
00:01:49,860 --> 00:01:59,880
It's well known and used in HTML quite often and this formatting stylesheet can be used even for that

17
00:02:01,170 --> 00:02:02,520
HTML two pdf.

18
00:02:02,760 --> 00:02:11,040
So we can just reference that CSS as we can see from the website.

19
00:02:11,040 --> 00:02:20,610
So on the website there is a link for a hosted version and we can then add some some HTML in classes.

20
00:02:20,610 --> 00:02:29,670
So we can just use that alert block and reference classes that are defined in a bootstrap.

21
00:02:29,670 --> 00:02:40,560
So let's take the title and add the the class definition into the div tack.

22
00:02:40,650 --> 00:02:49,050
So we have the diff, we can just move it to span just to B to see how it is applied.

23
00:02:49,050 --> 00:02:52,200
So we have a diff with the title inside.

24
00:02:52,230 --> 00:03:01,020
We just refresh the project and we should see some formatting based on bootstrap CSS.

25
00:03:01,020 --> 00:03:07,890
So just let's refresh that in the browser, save the PDF and open once again.

26
00:03:08,920 --> 00:03:10,450
And what we can see.

27
00:03:10,450 --> 00:03:18,070
Yeah, really, we see this is the green box we have.

28
00:03:18,270 --> 00:03:26,170
We have the title inside and the formatting is just coming from this bootstrap definition so we can

29
00:03:26,170 --> 00:03:33,790
reuse the existing CSV as if there is some stylesheet provided but by different team people.

30
00:03:33,790 --> 00:03:38,320
Or we can use kind of corporate style sheets here.

31
00:03:38,320 --> 00:03:49,540
So we have a few options how to define the HTML and how to do formatting CSS, CSR as reference to embedded

32
00:03:49,540 --> 00:03:51,870
directly into HTML.

33
00:03:52,240 --> 00:03:56,890
Or we can use a style attribute at the tag level.

34
00:03:56,890 --> 00:03:59,800
So it's very easy to format and to use.
