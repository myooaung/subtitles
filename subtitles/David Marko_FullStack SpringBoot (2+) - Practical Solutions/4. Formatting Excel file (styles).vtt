WEBVTT
1
00:00:07.470 --> 00:00:13.680
In this lecture, we are going to add some formatting to the Excel output we just created.

2
00:00:13.680 --> 00:00:16.440
So we have just to resume.

3
00:00:16.440 --> 00:00:24.930
We have an Excel file created with one sheet, one cell on the first line and the first column.

4
00:00:25.050 --> 00:00:32.430
And this is just a simple text with the first cell value content and.

5
00:00:33.320 --> 00:00:36.200
Haven't introduced any formatting yet.

6
00:00:36.200 --> 00:00:44.630
So we can create a new one so we can see this workbook has something called the Creative Cells style.

7
00:00:45.800 --> 00:00:54.350
We don't apply a styles directly to to cell, so we create a style as object and we, we can apply the

8
00:00:54.350 --> 00:00:56.810
same style to different cells.

9
00:00:57.110 --> 00:01:02.060
So we have the style definition, we have actually empty style.

10
00:01:02.060 --> 00:01:11.000
And we can set, as you can see, many different properties here like border alignments, colors and

11
00:01:11.000 --> 00:01:13.640
background for foreground colors.

12
00:01:14.600 --> 00:01:19.490
So let's add some more information or board formatting.

13
00:01:19.490 --> 00:01:21.860
So we set a button border.

14
00:01:24.220 --> 00:01:27.880
And to we can apply that style to the cell we just created.

15
00:01:27.880 --> 00:01:31.140
So we have the cell with the initial text value.

16
00:01:31.150 --> 00:01:35.020
We created the style and we apply the style to the cell.

17
00:01:35.530 --> 00:01:48.310
So let's restart our application and just try to create or surf the Excel file once again with the updated

18
00:01:49.120 --> 00:01:50.140
content.

19
00:01:50.140 --> 00:01:57.880
So just let's try to zoom it a bit and we can see we have the cell with the text value and we can see

20
00:01:57.880 --> 00:01:59.710
the border as we just define.

21
00:01:59.710 --> 00:02:04.150
So it was just as easy as this implementation.

22
00:02:04.150 --> 00:02:12.940
We have this style cell style object and we apply that cell style object to the two particular cell

23
00:02:13.270 --> 00:02:14.350
we can out.

24
00:02:15.220 --> 00:02:16.090
One more thing.

25
00:02:16.090 --> 00:02:20.470
We can define font information.

26
00:02:20.470 --> 00:02:26.350
So as the default behavior, just default font is used.

27
00:02:26.740 --> 00:02:30.130
The text was in black color.

28
00:02:30.130 --> 00:02:36.070
So we can create a font information and we we get, we can set a color.

29
00:02:38.130 --> 00:02:44.990
We can use help or object to call the index colors so we can choose correct value.

30
00:02:45.000 --> 00:02:46.830
We can choose a green one.

31
00:02:47.700 --> 00:02:49.530
So we have the font object.

32
00:02:49.530 --> 00:02:53.700
We set a color to the font now.

33
00:02:56.340 --> 00:03:02.340
We can just say we would like to display a text in bold.

34
00:03:02.850 --> 00:03:05.970
And two, we use the style object.

35
00:03:05.970 --> 00:03:13.560
We created just a few lines above and we set the font as we defined earlier.

36
00:03:13.560 --> 00:03:21.000
So we have the cell style, we have the font object created and defined, and we set the font to the

37
00:03:21.000 --> 00:03:21.780
style.

38
00:03:21.990 --> 00:03:24.990
So there is no need to change anything else.

39
00:03:25.260 --> 00:03:35.040
This style is being applied to the cell so we can restart our application and we can review the output

40
00:03:35.040 --> 00:03:39.060
and we can see as we defined, we can zoom it a bit.

41
00:03:39.840 --> 00:03:49.020
We can see we have that cell with the black bottom border and the value is in bold and green color.

42
00:03:49.020 --> 00:03:55.620
So exactly as we defined in our code, Excel API is actually easy to understand.

43
00:03:55.620 --> 00:04:00.330
So it's easy to follow or enhance our two new more features.

44
00:04:00.330 --> 00:04:07.440
As we started with, we can see the result is available in the screen almost immediately after the update.

45
00:04:07.440 --> 00:04:14.370
So the overall turnaround is quite quick and we can see we just created a controller, we created a

46
00:04:14.370 --> 00:04:22.920
helper method and that's almost all we need to produce Excel file in our application of any kind.
