WEBVTT
1
00:00:05.590 --> 00:00:07.690
Generate PDFs on the fly.

2
00:00:07.690 --> 00:00:10.530
We use very common spring boot application.

3
00:00:10.540 --> 00:00:14.560
It's almost a barebones with a few dependencies.

4
00:00:15.730 --> 00:00:23.620
We use spring boot version two seven, but its very general solution we use still Java version 1.8.

5
00:00:23.620 --> 00:00:28.510
So the solution can be included in any legacy application.

6
00:00:28.510 --> 00:00:31.270
And we actually run DOS things.

7
00:00:31.810 --> 00:00:34.250
We use a few more basic.

8
00:00:34.270 --> 00:00:38.160
Other dependencies like spring would start a web.

9
00:00:38.200 --> 00:00:39.580
We use a time leave.

10
00:00:39.580 --> 00:00:44.280
We actually use HTML templates for creating a PDF.

11
00:00:44.290 --> 00:00:51.400
So time leave is being used as template engine.

12
00:00:51.520 --> 00:01:04.720
We use DEF tools, we use Lombok for speeding up development and those are all basic things common to

13
00:01:04.720 --> 00:01:07.120
almost any springboard application.

14
00:01:07.540 --> 00:01:14.140
We of course, need something very specific to generating the PDFs.

15
00:01:14.140 --> 00:01:18.820
So we use a bunch of libraries here.

16
00:01:18.820 --> 00:01:24.160
We rely on it's PDF actually, and we use a.

17
00:01:25.250 --> 00:01:28.220
A few other things like your bounce castle.

18
00:01:29.480 --> 00:01:39.920
We are going to embed images and barcodes, so and we are even able to sign a PDF file at the end.

19
00:01:39.920 --> 00:01:50.630
So we use some dependency that helps us to implement those things to include those dependencies into

20
00:01:50.630 --> 00:01:51.890
your project.

21
00:01:52.010 --> 00:02:00.080
Just copy paste things from attached git repo and you can use it.

22
00:02:00.080 --> 00:02:07.340
And that's basically all this is staff who we are going to use in an implementation.

23
00:02:07.700 --> 00:02:19.460
As I mentioned earlier, we are going to include images or barcodes into PDF and we can even assign

24
00:02:19.460 --> 00:02:19.670
it.

25
00:02:19.670 --> 00:02:28.250
So we use some libraries that can be replaced with something you are familiar more if needed.

26
00:02:29.270 --> 00:02:37.100
Usually the implementation is based on some standard communication with input streams and so on, so

27
00:02:37.100 --> 00:02:46.280
it's easy to re-use something you are more familiar with or this is more common to your project.
