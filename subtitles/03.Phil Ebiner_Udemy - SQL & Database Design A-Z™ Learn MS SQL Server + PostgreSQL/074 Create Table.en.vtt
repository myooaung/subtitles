WEBVTT
1
00:00:00.540 --> 00:00:06.270
Hello and welcome to creating a table lecture this lecture is very important because unlike creating

2
00:00:06.270 --> 00:00:12.360
a database creating a table actually requires a lot of thought and you need to understand the process

3
00:00:12.510 --> 00:00:13.560
behind Crania.

4
00:00:13.770 --> 00:00:17.810
Very well in order to get it and be able to recreate it at any point of time.

5
00:00:18.030 --> 00:00:20.630
So as you can see a have P.G. admin for load it up.

6
00:00:20.730 --> 00:00:26.550
Let's open our rescue all check our databases out as you can see we have free databases.

7
00:00:26.700 --> 00:00:27.970
And this happened to my database.

8
00:00:27.970 --> 00:00:29.630
The database we just created.

9
00:00:29.940 --> 00:00:34.320
And those go ahead does chemo's public tables chelators no tables on site.

10
00:00:34.320 --> 00:00:36.850
So right now this is a completely empty database.

11
00:00:37.050 --> 00:00:41.240
So first thing we want to do is right click and tables or in any.

12
00:00:41.310 --> 00:00:46.290
Now the new query opens up what we want to do is one and right create table.

13
00:00:46.290 --> 00:00:49.230
So this is the statement to creating tables.

14
00:00:49.290 --> 00:00:50.220
Easy as that.

15
00:00:50.220 --> 00:00:52.360
Same as great database but great table.

16
00:00:52.590 --> 00:00:57.400
So before we go hand let's discuss what we're going to be creating this table for.

17
00:00:57.810 --> 00:01:02.660
This section is all about getting used to the syntax and understanding the logic behind it.

18
00:01:02.670 --> 00:01:06.890
So we're going to be working with data we input ourselves.

19
00:01:06.930 --> 00:01:11.640
It doesn't matter what table you will create what data you will and put in it and what name you will

20
00:01:11.640 --> 00:01:12.680
give to it.

21
00:01:12.720 --> 00:01:15.710
I personally will be working with movies table.

22
00:01:15.900 --> 00:01:18.320
So it's going to be my favorite movies for you.

23
00:01:18.320 --> 00:01:23.250
You can just follow along with the lectures or create your own table and just follow along with this

24
00:01:23.250 --> 00:01:25.450
and thinks that I'm going to be showing you.

25
00:01:25.560 --> 00:01:31.520
So with the mummies table that we're going to create is good to go ahead and call it east.

26
00:01:31.680 --> 00:01:33.090
We can already create it.

27
00:01:33.090 --> 00:01:35.370
So this is the syntax you have create table.

28
00:01:35.430 --> 00:01:38.490
Then you have your table name and then you have two brackets.

29
00:01:38.490 --> 00:01:41.760
So inside these brackets all the attributes and constraints go.

30
00:01:41.760 --> 00:01:44.280
So already if you run this it will create it.

31
00:01:44.280 --> 00:01:50.610
So if we go ahead click refresh here you will see that a new table has been created but it has no columns

32
00:01:50.910 --> 00:01:57.130
creating an empty table without any columns is a very unique thing to PG&amp;E in the grass.

33
00:01:57.130 --> 00:01:57.660
Q.

34
00:01:57.840 --> 00:02:03.270
So a lot of times if you're going to be working of any different software or a command line it will

35
00:02:03.270 --> 00:02:04.600
not allow you to do this.

36
00:02:04.620 --> 00:02:07.200
So it's not a very good idea to ever do this.

37
00:02:07.200 --> 00:02:10.500
I'm just showing you that it's possible to do in rescue all.

38
00:02:10.680 --> 00:02:16.560
So a lot of times are all of the times what you want to be doing is you just want to enter this enter

39
00:02:16.580 --> 00:02:21.570
this and now tap this and be writing all your column names in here.

40
00:02:21.580 --> 00:02:23.240
That's the way I like to keep it.

41
00:02:23.250 --> 00:02:25.050
You can also write it all in one line.

42
00:02:25.050 --> 00:02:30.770
This just makes it way easier for understanding and readability of your of your cult.

43
00:02:30.870 --> 00:02:37.470
So before we go on a photo before we forget let's right click here and say delete drop to delete this

44
00:02:37.470 --> 00:02:41.040
empty table so we can create a table with this name.

45
00:02:41.070 --> 00:02:45.710
You cannot create two tables with the same name inside one database you will have to change it.

46
00:02:45.930 --> 00:02:47.150
And we don't want to do that.

47
00:02:47.160 --> 00:02:50.730
So again let's talk about the table for a second in my movies.

48
00:02:50.730 --> 00:02:56.160
What I want to record the names of my favorite movies the year they've been released in the country

49
00:02:56.190 --> 00:02:59.780
where they've been produced in the genre of these movies.

50
00:03:00.000 --> 00:03:03.270
And I wanted to be all organized nice and neat.

51
00:03:03.270 --> 00:03:08.480
This is why I'm training database so first thing our first column is name.

52
00:03:08.550 --> 00:03:10.840
So let's go ahead quickly write that down.

53
00:03:10.920 --> 00:03:13.730
And as you can see because it Hala said with purple.

54
00:03:13.740 --> 00:03:17.000
That means it's a function and I don't want that to be a function.

55
00:03:17.010 --> 00:03:23.480
I want it to be I call them names so I just add something inside and after it so it goes to black text

56
00:03:23.510 --> 00:03:24.870
and doesn't give you a problem.

57
00:03:24.910 --> 00:03:25.950
I don't know.

58
00:03:25.970 --> 00:03:31.460
But come on now we can select the second column which will be called year and again year is a function.

59
00:03:31.460 --> 00:03:38.110
So I just hope we had a movie front and the first column will be called country.

60
00:03:38.180 --> 00:03:40.880
This is not a function so we can just leave with like this.

61
00:03:41.000 --> 00:03:42.970
And the last column is called gender.

62
00:03:43.310 --> 00:03:47.750
So again right now we can not run this query if we try.

63
00:03:47.750 --> 00:03:49.150
In fact let's try it.

64
00:03:49.320 --> 00:03:50.510
And there we go.

65
00:03:50.510 --> 00:03:55.190
As you can see it gives us an error because of the syntax but it's not because of the syntax that we

66
00:03:55.190 --> 00:03:57.820
messed something up in the create table statement.

67
00:03:58.010 --> 00:04:04.430
What we did not include is the data type for each one of these elements as Q else simply does not understand

68
00:04:04.520 --> 00:04:06.920
what we need to record in these columns.

69
00:04:06.950 --> 00:04:11.710
And therefore it cannot it cannot allocate the appropriate space for these columns.

70
00:04:11.750 --> 00:04:14.250
And it just cannot create them.

71
00:04:14.360 --> 00:04:17.010
What we need to do is we need to specify data types.

72
00:04:17.030 --> 00:04:23.510
So again movie name will be more char because it will include characters and numbers and I will specify

73
00:04:23.510 --> 00:04:28.930
that I want it to be no longer than 200 characters and movie year.

74
00:04:29.000 --> 00:04:31.620
I want to be integer.

75
00:04:31.640 --> 00:04:38.430
Just because it's going to be a whole number and I'm just going to have four numbers in it country again

76
00:04:38.480 --> 00:04:46.910
is going to be Wordstar in one country to be no longer than let's say 50 characters or even 100 characters

77
00:04:46.970 --> 00:04:54.560
just to be safe and genere again I'm going to put that it's Wotcher but because yawners can be quite

78
00:04:54.560 --> 00:04:57.880
big and consist of several subcategories.

79
00:04:57.920 --> 00:05:03.450
I'm going to put no constraint on how much space we allocate to genre.

80
00:05:03.740 --> 00:05:09.350
So this space on location is very important because if you want to make your database process quicker

81
00:05:09.770 --> 00:05:16.940
and just generally run smoother you want to allocate as little data as possible for each column.

82
00:05:17.180 --> 00:05:24.170
But again if you don't do it or do it with very big high ceiling then you avoid making silly mistakes

83
00:05:24.170 --> 00:05:26.420
and running into troubles later on.

84
00:05:26.420 --> 00:05:32.780
So now if we run this it will actually create our database for us and again as you can see also and

85
00:05:32.810 --> 00:05:35.480
it's my fault for this is decimal and not integer.

86
00:05:35.480 --> 00:05:38.320
We cannot put constraints and integer.

87
00:05:38.330 --> 00:05:42.740
So just leave it like this and knowledge and run it as you can see if we go ahead.

88
00:05:42.770 --> 00:05:43.810
Refresh this.

89
00:05:43.940 --> 00:05:45.970
We will have our table movies.

90
00:05:46.040 --> 00:05:48.210
We have four columns inside.

91
00:05:48.260 --> 00:05:51.660
None of these columns have any data because we haven't filled them of data yet.

92
00:05:51.950 --> 00:05:54.870
But at this point the table is ready to go.

93
00:05:54.890 --> 00:06:00.740
And if you just want to manipulate some data work with some basic data extraction tools and you don't

94
00:06:01.010 --> 00:06:05.650
have to have more tables inside this database you can live this as it is.

95
00:06:05.750 --> 00:06:13.360
However in this section let's try and make this database and bid we're a bit more structured.

96
00:06:13.550 --> 00:06:20.810
So what I want to say is that on the say John her words her and then I want to put comma and I want

97
00:06:20.810 --> 00:06:22.250
to say primary key.

98
00:06:22.460 --> 00:06:30.720
So as you know primary key specifies attributes or columns that can be used to uniquely identify a rope.

99
00:06:30.740 --> 00:06:32.050
In our case I-List.

100
00:06:32.060 --> 00:06:32.790
Think about it.

101
00:06:32.820 --> 00:06:38.510
John Hirst cannot be our primary key because there's hundreds of different genders but a lot of movies

102
00:06:38.510 --> 00:06:40.620
have the same genres in them country.

103
00:06:40.670 --> 00:06:44.870
Again most of the movies are produced in Hollywood and we're all going to be getting a lot of USA.

104
00:06:44.900 --> 00:06:45.810
It will never be.

105
00:06:45.860 --> 00:06:52.310
It will be almost impossible to find any one movie movie year is again there is a lot of movies produced

106
00:06:52.340 --> 00:06:58.040
every year so it cannot be used as primary key and movie name cannot be used as primary key again because

107
00:06:58.040 --> 00:07:02.260
of all the reboots that remain the same name without even adding a number.

108
00:07:02.270 --> 00:07:04.880
So what can we use a primary key.

109
00:07:04.880 --> 00:07:09.330
Surely we should not have to use all four of these columns to find any one role.

110
00:07:09.530 --> 00:07:14.180
Well in our case what we can do is we can say that primary key consists of two columns.

111
00:07:14.180 --> 00:07:18.530
Movie name then put comma and same movie year as well.

112
00:07:18.890 --> 00:07:25.280
And this is due to the fact that no two movies are produced in the same year that have the exact same

113
00:07:25.280 --> 00:07:29.010
name all the reboots happen at least one year apart from each other.

114
00:07:29.000 --> 00:07:32.000
So this primary key satisfies our need.

115
00:07:32.030 --> 00:07:37.340
So now if we go ahead and trade this table before we trade and let's just delete this so we can create

116
00:07:37.430 --> 00:07:39.320
this movie stable.

117
00:07:39.320 --> 00:07:45.050
So now if we go ahead and trade this one and refresh our tables section we can see that we still have

118
00:07:45.050 --> 00:07:45.830
four columns.

119
00:07:45.830 --> 00:07:52.790
But now if we click on constraints it will show us that movies has a primary key and it constrains shows

120
00:07:52.790 --> 00:07:53.300
all of that.

121
00:07:53.300 --> 00:07:58.960
It shows us the unique values of all the different rules that we put on our data.

122
00:07:59.230 --> 00:08:03.560
So now there's a couple ways we can improve our database.

123
00:08:03.560 --> 00:08:10.790
The first one being exciting not now values and what that does it says that for example we have to make

124
00:08:10.790 --> 00:08:15.160
sure that movie name has a value in it so movie name consists of at least one letter.

125
00:08:15.500 --> 00:08:20.080
And that way will prevent us from making mistakes where we put empty data.

126
00:08:20.300 --> 00:08:26.320
However because movie name and movie you're already primary key that's done by default so primary key

127
00:08:26.330 --> 00:08:31.580
basically says that movie name and movie year have to be not null.

128
00:08:31.770 --> 00:08:36.340
But let's say that I want the country or underage owner to be up north.

129
00:08:36.350 --> 00:08:42.800
So even if I don't know the country that doesn't matter to me as much as not knowing the gender I want

130
00:08:42.800 --> 00:08:47.470
to know if I'm watching a comedy or is going to be a scary movie or whatever else is going to be.

131
00:08:47.510 --> 00:08:56.270
So we just add not now after the data type Sinaloan run it before diddlers delete this database movies.

132
00:08:56.270 --> 00:08:58.770
So go ahead click delete.

133
00:08:58.880 --> 00:09:00.110
Go ahead run this one.

134
00:09:00.140 --> 00:09:06.620
And as you can see if we refresh this one we have again four columns one constrained from the Nix's

135
00:09:06.650 --> 00:09:08.420
and just Sam.

136
00:09:08.420 --> 00:09:15.270
Simple database we've already your primary key not now is defined and all the data types expressed.

137
00:09:15.290 --> 00:09:21.580
And even the ceilings on this datatypes are defined now.

138
00:09:21.620 --> 00:09:25.890
Alternatively in PGE admin not in public Coubertin admin.

139
00:09:25.910 --> 00:09:30.680
What we can do is we can Right-Click on tables click here and create and select table.

140
00:09:30.710 --> 00:09:34.760
This will open up this pop up menu in which you can create any table you want.

141
00:09:34.890 --> 00:09:36.800
Drop writing a single line of code.

142
00:09:36.830 --> 00:09:42.250
Everything will be written for you in this as well tab but let's just quickly go ahead.

143
00:09:42.260 --> 00:09:46.930
Go to movies and right click on movies and say properties.

144
00:09:46.970 --> 00:09:50.150
So if we do this it opens the same pop up window.

145
00:09:50.180 --> 00:09:52.720
But already for existing table movies.

146
00:09:52.760 --> 00:09:56.620
So as you can see the name is here the tablespace scheme is all of that is here.

147
00:09:56.620 --> 00:09:58.910
Columns we can see all four columns.

148
00:09:58.910 --> 00:10:03.530
And as you can see we have movie name and movie year both selected as primary key.

149
00:10:03.530 --> 00:10:09.650
And both of them have to be not now because of the primary key constraint and also have Agenor which

150
00:10:10.190 --> 00:10:14.860
also has not now condition because we specify that we don't want it to be null.

151
00:10:14.930 --> 00:10:19.730
Also here you can see all the different data types that you can have lengths that we put in.

152
00:10:19.880 --> 00:10:24.350
And then as you can see if the jury has no length because it's predefined by as well.

153
00:10:24.560 --> 00:10:26.020
So now we go with the constraints.

154
00:10:26.030 --> 00:10:32.150
We can see that the primary key for our table movies is movie name and movie year.

155
00:10:32.150 --> 00:10:34.580
We don't have any foreign keys we don't have any checks.

156
00:10:34.580 --> 00:10:36.730
We have a unique constraint.

157
00:10:36.740 --> 00:10:41.230
Actually we don't have any constraint because as yawners and countries can repeat themselves.

158
00:10:41.390 --> 00:10:46.640
And if we put a unique constraint on USA for example on countries that means we can only enter every

159
00:10:46.640 --> 00:10:51.950
country once every country named once and then we have to change every country name to be different

160
00:10:51.950 --> 00:10:55.770
from the previous one unique constraints are generally put on user names.

161
00:10:55.790 --> 00:11:00.890
If you ever look to any website and chances are the first time you try to log in to create your account

162
00:11:00.920 --> 00:11:05.900
it will tell you that sorry this account name has already been taking push create a new one and this

163
00:11:05.900 --> 00:11:11.240
is done through unique constraint because for the Web site management it's very important for them to

164
00:11:11.240 --> 00:11:13.760
be able to uniquely identify every user.

165
00:11:13.940 --> 00:11:15.640
And that's what unique constrains us.

166
00:11:15.710 --> 00:11:20.630
We also don't have any extra constraints right now then just if we click on advanced we can see how

167
00:11:20.870 --> 00:11:22.270
we can see a lot of different stuff.

168
00:11:22.290 --> 00:11:28.910
You can specify even more parameter security or the privileges or older security labels will be done

169
00:11:29.240 --> 00:11:30.610
later on in the course.

170
00:11:30.650 --> 00:11:35.180
And now if we click on rescue Well it shows us nothing because we have not changed anything.

171
00:11:35.240 --> 00:11:40.910
But for example let's go ahead and go back to our columns and let's say that we want to put country

172
00:11:40.970 --> 00:11:42.460
to be not null as well.

173
00:11:42.470 --> 00:11:48.440
Now if we go to ask you all tab it just basically shows us the lines of code that P.G. admin wrote for

174
00:11:48.440 --> 00:11:48.810
us.

175
00:11:48.840 --> 00:11:54.800
You know in order to set country to not now and as you can see we can write all of this code by hand

176
00:11:55.040 --> 00:11:59.300
into the Eskew well and it will do the same thing.

177
00:11:59.750 --> 00:12:03.770
So unless this Cardus just press cancel because we don't need it.

178
00:12:03.770 --> 00:12:06.850
And yet this pretty much concludes our lecture.

179
00:12:06.980 --> 00:12:12.770
I understand there is a lot to learn a lot to get your head around a lot to get used to but if you think

180
00:12:12.770 --> 00:12:15.230
about it it's quite easy.

181
00:12:15.370 --> 00:12:18.610
We say is that we create a table then we specify the table name.

182
00:12:18.730 --> 00:12:24.610
And then what we need to do is just open the brackets and write every column name separated by a comma

183
00:12:24.880 --> 00:12:29.450
and inside that column name or what do we have to specify is that they type.

184
00:12:29.440 --> 00:12:34.930
So either it will be text or numbers or date Times or Time.

185
00:12:34.930 --> 00:12:39.670
We just have to specify it and after that we can create our database if we want to if we need to we

186
00:12:39.670 --> 00:12:45.730
can specify primary keys not now constrains unique constraints for foreign keys and all of those other

187
00:12:45.730 --> 00:12:46.420
things.

188
00:12:46.450 --> 00:12:48.240
But for now this will do.

189
00:12:48.340 --> 00:12:56.410
And if you did not get or understand any things in this tutorial I highly recommend you go again through

190
00:12:56.430 --> 00:12:59.070
it and try to create your own table.

191
00:12:59.080 --> 00:13:05.590
As we move along with your own data type you of your own columns because that will not is really necessary

192
00:13:05.680 --> 00:13:09.010
to understand the basic concept of creating tables.

193
00:13:09.070 --> 00:13:12.310
I hope you enjoyed this lecture and I'll see you in the next one.
