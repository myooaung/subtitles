1
00:00:00,610 --> 00:00:02,210
Hello and welcome back.

2
00:00:02,290 --> 00:00:10,150
And today we'll be working with data type conversion so data type conversion are pretty rare to encounter

3
00:00:10,180 --> 00:00:16,150
in a school because most of the time you would rather just drop the table and create a new one.

4
00:00:16,210 --> 00:00:20,360
Or again important data with already the correct data.

5
00:00:20,440 --> 00:00:21,710
The one that you need to.

6
00:00:21,820 --> 00:00:28,140
But sometimes it is beneficial or it is more efficient to convert the data and work over it.

7
00:00:28,390 --> 00:00:29,570
Inside the same table.

8
00:00:29,740 --> 00:00:36,460
So the main reason for converting data in a column is to be able to work with different types of functions

9
00:00:36,850 --> 00:00:44,800
for example including string functions or different sorting tools that cannot work with data for example

10
00:00:44,800 --> 00:00:47,630
or with integers or reflowed numbers.

11
00:00:47,650 --> 00:00:50,440
And another reason is to save space.

12
00:00:50,800 --> 00:00:58,450
So some data types are stored more efficiently than others and it might be better to store word type

13
00:00:58,450 --> 00:01:05,350
as integer if it only includes the column only consist of whole numbers rather than words.

14
00:01:05,680 --> 00:01:12,070
And the last thing is just to change completely the column and the reasoning behind it.

15
00:01:12,190 --> 00:01:14,240
And we'll take a look at this.

16
00:01:14,320 --> 00:01:15,380
During today's lecture.

17
00:01:15,640 --> 00:01:17,890
So let's go ahead and dive straight into it.

18
00:01:17,890 --> 00:01:20,400
Today we'll be working with console games table.

19
00:01:20,440 --> 00:01:24,260
So let's open our querido and quickly run it.

20
00:01:24,370 --> 00:01:31,750
So what we want to do is want to say select all from the console games.

21
00:01:32,100 --> 00:01:36,480
This will quickly just refresh our memory of what we have in this table.

22
00:01:36,540 --> 00:01:39,450
We should have 12 columns all filled with data.

23
00:01:39,600 --> 00:01:41,390
And that is indeed correct.

24
00:01:42,350 --> 00:01:45,770
So as we can see right now it's all here.

25
00:01:45,800 --> 00:01:48,690
Let's just quickly say I don't like this.

26
00:01:48,710 --> 00:01:58,530
Ordered by game rank just to make it to be Nener and the first thing you see is specially coming from

27
00:01:58,530 --> 00:02:01,830
previous lectures where we worked with console dates.

28
00:02:01,830 --> 00:02:06,000
Is that game year in this table is stored as integer.

29
00:02:06,000 --> 00:02:10,600
So it's basically a whole number and they consist of four numbers.

30
00:02:10,800 --> 00:02:12,750
So 2006 1 9 8 5.

31
00:02:12,750 --> 00:02:17,580
It's basically four separate numbers all the data type in that year.

32
00:02:17,880 --> 00:02:25,590
And what we want to do is let's say that we want to change this data types I want to say that game year

33
00:02:25,590 --> 00:02:31,110
will now be workhorse so we can work with it more efficiently if we need to.

34
00:02:31,110 --> 00:02:42,400
So what we have to do is we need to say select cast and then year as Archer and in our case because

35
00:02:42,400 --> 00:02:52,770
we only need four numbers for elements we can specify here in order to make our database work week.

36
00:02:52,770 --> 00:02:57,380
So it does not allocate that much memory that much space to this column.

37
00:02:57,390 --> 00:02:59,530
It only allocates the appropriate amount.

38
00:02:59,770 --> 00:03:04,110
So I'll go and run this as it said just change the year to be Game year.

39
00:03:04,260 --> 00:03:05,850
So that database works.

40
00:03:06,180 --> 00:03:09,770
And now as you can see you have game year of type character.

41
00:03:09,970 --> 00:03:18,920
Brian hold in mind that this will only be done for the duration of this query so follow the not of one

42
00:03:19,160 --> 00:03:21,270
game year will return back to integer.

43
00:03:21,590 --> 00:03:29,120
And if you want to change the column data type forever for prolonged periods of time that will be discussed

44
00:03:29,120 --> 00:03:30,160
further down in the course.

45
00:03:30,170 --> 00:03:35,000
We're actually going to be creating our own tables because you have to go through alter functions and

46
00:03:35,390 --> 00:03:35,780
so on.

47
00:03:35,780 --> 00:03:40,940
Here we're just showing in the quake function cost uses of cost function.

48
00:03:41,050 --> 00:03:48,530
Now instead of writing this which can be a bit hectic what we can do sort of a shortcut is that we can

49
00:03:48,530 --> 00:03:52,900
write a game here the column that we want to change.

50
00:03:52,910 --> 00:03:56,630
Then we can put two of the samples.

51
00:03:56,840 --> 00:04:00,140
And after that we can't say which data type one.

52
00:04:00,470 --> 00:04:06,120
So in our case that scan weren't sure and we wanted to be only of four numbers.

53
00:04:06,170 --> 00:04:12,010
So as you can see I just make a small mistake here and manage to work perfectly.

54
00:04:12,160 --> 00:04:14,870
They can say again everything works perfect.

55
00:04:14,900 --> 00:04:16,310
Everything works fine.

56
00:04:16,400 --> 00:04:27,300
Now for a last example what we want to do is let's change Ghaemi year to be of an actual date type instead

57
00:04:27,300 --> 00:04:28,390
of just war chart.

58
00:04:28,560 --> 00:04:35,220
So another to us what do we need to do is we need to go ahead and say select and then when you have

59
00:04:35,310 --> 00:04:43,150
these to date so you can't change two words or you can change to a lot of data types.

60
00:04:43,440 --> 00:04:45,420
But in our case we want to change to date.

61
00:04:45,610 --> 00:04:54,330
They don't want to put in cost and then when we go year as worker and then we want to put that restriction

62
00:04:54,350 --> 00:05:02,870
that can only have four symbols inside of it and then one and just put here and just put this.

63
00:05:03,050 --> 00:05:09,360
So they can see we have a column to date and a time date and it has Oldaker years.

64
00:05:09,380 --> 00:05:15,830
But because we did not have months and days inside the table there's no way to get this information

65
00:05:15,830 --> 00:05:17,360
from for as well.

66
00:05:17,450 --> 00:05:20,290
It just puts first of January by default.

67
00:05:20,480 --> 00:05:29,660
So if you want to fill these up with correct dates you can just later on to work with the SCV file see

68
00:05:29,750 --> 00:05:35,430
file other database where you're going to be getting these files from and just set that to date.

69
00:05:35,480 --> 00:05:38,700
Equals to wherever the data is located.

70
00:05:38,990 --> 00:05:49,310
So converting data types is again pretty rarely used to in sequel and that's why this tutorial is so

71
00:05:49,310 --> 00:05:55,010
short because most of the time you'll just convert integer to word char or vice versa.

72
00:05:55,010 --> 00:05:57,360
So that's just the cost function.

73
00:05:57,380 --> 00:06:01,270
So I hope you enjoyed today's lecture and I'll see you in the next one.
