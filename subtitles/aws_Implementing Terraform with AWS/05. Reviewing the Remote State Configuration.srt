1
00:00:01,240 --> 00:00:01,850
[Autogenerated] all right.

2
00:00:01,850 --> 00:00:03,890
Here we are in visual studio code,

3
00:00:03,890 --> 00:00:06,940
and I have the exercise files open on the left.

4
00:00:06,940 --> 00:00:10,450
In this case, we are going to be working with the directory five dash,

5
00:00:10,450 --> 00:00:12,570
remote Dash State dash set up.

6
00:00:12,570 --> 00:00:15,240
Let's go ahead and expand that out.

7
00:00:15,240 --> 00:00:19,720
And let's start by opening up the commands dot txt because there's a

8
00:00:19,720 --> 00:00:22,340
little bit of set up that's going to go on here.

9
00:00:22,340 --> 00:00:25,970
We are going to use the environment variable A.

10
00:00:25,970 --> 00:00:31,670
W s profile for our authentication if you'll remember back to the first module.

11
00:00:31,670 --> 00:00:34,310
When I talked about authentication for the A.

12
00:00:34,310 --> 00:00:36,240
W s provider,

13
00:00:36,240 --> 00:00:41,130
you can use environment variables to tell the provider which

14
00:00:41,130 --> 00:00:44,340
profile you want to use in your credentials file.

15
00:00:44,340 --> 00:00:48,380
That environment variable is called A W s underscore profile.

16
00:00:48,380 --> 00:00:52,480
So we're going to set that here and in my case, I'm using windows.

17
00:00:52,480 --> 00:00:55,240
So I just opened up the terminal below,

18
00:00:55,240 --> 00:00:58,340
and I'm gonna go ahead and copy this instruction here

19
00:00:58,340 --> 00:01:04,940
Environment colon AWS profile equals infra.

20
00:01:04,940 --> 00:01:08,020
And now that stored in the environment variable.

21
00:01:08,020 --> 00:01:09,780
If you're running Linux or Mac,

22
00:01:09,780 --> 00:01:12,770
you can use the export function to do the same thing.

23
00:01:12,770 --> 00:01:14,780
All right, Now that we have that set up.

24
00:01:14,780 --> 00:01:18,910
Let's go ahead and take a look at the main dot t f configuration and I'm

25
00:01:18,910 --> 00:01:22,240
gonna hide the terminal to give us a little more room here.

26
00:01:22,240 --> 00:01:24,440
So first, we're going to set up some variables.

27
00:01:24,440 --> 00:01:25,940
No surprise there.

28
00:01:25,940 --> 00:01:29,640
We need to set the region where we're going to be creating our bucket.

29
00:01:29,640 --> 00:01:32,160
We are going to give a bucket prefix.

30
00:01:32,160 --> 00:01:34,660
So this is the naming prefix for our bucket.

31
00:01:34,660 --> 00:01:36,440
And by default, it's gonna be Globo.

32
00:01:36,440 --> 00:01:40,850
You can change that to whatever you'd like for the Dynamo DB table.

33
00:01:40,850 --> 00:01:44,460
We are going with the default of Globo Dash TF State lock,

34
00:01:44,460 --> 00:01:46,940
which will alter a little bit in a moment.

35
00:01:46,940 --> 00:01:50,810
And then we have two variables to define the users.

36
00:01:50,810 --> 00:01:52,890
In the two permissions groups,

37
00:01:52,890 --> 00:01:58,220
one is the full access users and the other one is read only users by default.

38
00:01:58,220 --> 00:01:59,970
We're not putting anyone in those groups.

39
00:01:59,970 --> 00:02:01,700
So if we do want someone in that group,

40
00:02:01,700 --> 00:02:05,670
we have to specify a different value for that variable.

41
00:02:05,670 --> 00:02:09,530
And I have done that in the terra form .NET TIFF bars, files.

42
00:02:09,530 --> 00:02:11,580
Let's go ahead and open that and we can.

43
00:02:11,580 --> 00:02:14,750
See, we've got two entries here for full access users.

44
00:02:14,750 --> 00:02:16,140
We've got Elsie Vasquez.

45
00:02:16,140 --> 00:02:17,150
All right, that's good.

46
00:02:17,150 --> 00:02:18,790
And then for read only users.

47
00:02:18,790 --> 00:02:21,400
We've got our software developer, Joshua Magee,

48
00:02:21,400 --> 00:02:25,550
and he's gonna be ready to go to use this state data as a data source.

49
00:02:25,550 --> 00:02:30,740
When we get to his configuration component, go ahead and close that.

50
00:02:30,740 --> 00:02:33,340
And now let's scroll down to our provider.

51
00:02:33,340 --> 00:02:35,160
We're using the provider AWS.

52
00:02:35,160 --> 00:02:37,430
We've specified the version and region,

53
00:02:37,430 --> 00:02:41,120
and you'll see we're not providing any authentication information.

54
00:02:41,120 --> 00:02:46,280
But since we've set the environment variable A W s underscore profile,

55
00:02:46,280 --> 00:02:50,140
it's going to use that as our authentication method.

56
00:02:50,140 --> 00:02:52,640
And we do want to create this in the infra account,

57
00:02:52,640 --> 00:02:55,260
which is why we used the infra profile.

58
00:02:55,260 --> 00:02:58,740
Okay, let's go down to resources now.

59
00:02:58,740 --> 00:02:59,930
The first resources,

60
00:02:59,930 --> 00:03:04,090
a random integer and the reason we're creating a random integer is

61
00:03:04,090 --> 00:03:08,470
because the name of the bucket needs to be globally unique.

62
00:03:08,470 --> 00:03:12,060
So we're going to create a random integer between 10,000

63
00:03:12,060 --> 00:03:17,150
and 99,999 and upend that to our dynamo to Docker Hub

64
00:03:17,150 --> 00:03:18,760
table name and our bucket name.

65
00:03:18,760 --> 00:03:22,230
So our bucket name will be globally universal and or dynamo

66
00:03:22,230 --> 00:03:25,350
db table name will be locally universal,

67
00:03:25,350 --> 00:03:29,060
and the way that we do that is by defining to local values

68
00:03:29,060 --> 00:03:32,320
dynamo db table name and bucket name.

69
00:03:32,320 --> 00:03:33,150
And like I said,

70
00:03:33,150 --> 00:03:36,330
we're taking the name that we already have and simply a

71
00:03:36,330 --> 00:03:39,440
pending the random integer result.

72
00:03:39,440 --> 00:03:42,720
And that will be the name for our table and bucket.

73
00:03:42,720 --> 00:03:44,100
So we're all set with that.

74
00:03:44,100 --> 00:03:46,740
Now we can create our table and bucket.

75
00:03:46,740 --> 00:03:50,150
Let's look at the table first so we're creating a

76
00:03:50,150 --> 00:03:52,490
Dynamo Devi table called Terra Form.

77
00:03:52,490 --> 00:03:54,640
Underscore State Lock.

78
00:03:54,640 --> 00:03:58,460
You'll note that we're setting the hash key equal to Lock IDE,

79
00:03:58,460 --> 00:04:02,480
and that's actually a requirement of using S3 as a back end

80
00:04:02,480 --> 00:04:05,660
with the Dynamo DB table for locking.

81
00:04:05,660 --> 00:04:10,180
We have to have the hash key set to lock IDE and then configure an

82
00:04:10,180 --> 00:04:14,530
attribute with name equal to lock ID and type SQL to S,

83
00:04:14,530 --> 00:04:16,740
which is for string.

84
00:04:16,740 --> 00:04:18,250
That has to be in the table.

85
00:04:18,250 --> 00:04:20,000
And that's all the table needs.

86
00:04:20,000 --> 00:04:22,740
It's not gonna be getting a lot of reads and writes,

87
00:04:22,740 --> 00:04:26,140
but it does need that hash key and attributes set.

88
00:04:26,140 --> 00:04:26,460
All right,

89
00:04:26,460 --> 00:04:31,360
let's scroll down to the S3 bucket and we're simply creating an S3 bucket,

90
00:04:31,360 --> 00:04:33,940
and we're setting it to be private.

91
00:04:33,940 --> 00:04:36,730
I've also set forced destroy equal to true,

92
00:04:36,730 --> 00:04:39,640
and that just makes it easier to clean this up.

93
00:04:39,640 --> 00:04:42,530
When forced destroy is set to true,

94
00:04:42,530 --> 00:04:47,190
it means that it will delete the S3 bucket even if it's not empty.

95
00:04:47,190 --> 00:04:51,040
So in a production environment, you might set that to falsy.

96
00:04:51,040 --> 00:04:51,600
All right,

97
00:04:51,600 --> 00:04:57,360
now let's get into our group configurations and we've got two groups here.

98
00:04:57,360 --> 00:05:01,230
One is bucket full access, and for the name of this group,

99
00:05:01,230 --> 00:05:04,040
I'm using the name of the bucket dash full access.

100
00:05:04,040 --> 00:05:07,040
So it's pretty obvious what this group is for.

101
00:05:07,040 --> 00:05:09,090
And then for the read only group,

102
00:05:09,090 --> 00:05:12,940
I am naming it the bucket name Dash read only so again,

103
00:05:12,940 --> 00:05:16,140
very obvious what this group is for.

104
00:05:16,140 --> 00:05:20,840
Now that we have our two groups set up, we scroll down a little bit.

105
00:05:20,840 --> 00:05:26,110
We are going to add members to each of those groups using the resources AWS.

106
00:05:26,110 --> 00:05:28,540
I am group membership.

107
00:05:28,540 --> 00:05:32,260
In this case, we're specifying the users for full access.

108
00:05:32,260 --> 00:05:36,410
So I'm using the variable Full Access users, which is a list of users.

109
00:05:36,410 --> 00:05:37,870
I want to grant access,

110
00:05:37,870 --> 00:05:41,260
and then I'm specifying the group to add these members

111
00:05:41,260 --> 00:05:44,540
to which is the full access group.

112
00:05:44,540 --> 00:05:48,330
Below that I'm specifying the read only group membership and

113
00:05:48,330 --> 00:05:51,340
getting that from the variable read only users.

114
00:05:51,340 --> 00:05:53,360
And we know that we put Joshua Magee in that.

115
00:05:53,360 --> 00:05:56,040
So he's going to get added to that group.

116
00:05:56,040 --> 00:05:58,420
Now that we have our group membership filled out,

117
00:05:58,420 --> 00:06:01,450
we need to create a policy granting them the proper

118
00:06:01,450 --> 00:06:04,080
level of access to the S3 bucket.

119
00:06:04,080 --> 00:06:06,020
So let's scroll down a little bit more,

120
00:06:06,020 --> 00:06:10,240
and we have our first policy for full access.

121
00:06:10,240 --> 00:06:15,410
So the name is going to be the bucket name dash full dash access for the policy.

122
00:06:15,410 --> 00:06:17,510
So it's pretty obvious what the policy does,

123
00:06:17,510 --> 00:06:22,040
and we're assigning it to the full access group that we just created.

124
00:06:22,040 --> 00:06:26,710
Looking inside the policy, we basically have to allow statements here.

125
00:06:26,710 --> 00:06:31,480
One is for S3, so you can see that the action for that, says S3.

126
00:06:31,480 --> 00:06:34,310
Any action you can do whatever you want in S3,

127
00:06:34,310 --> 00:06:38,360
and the resource that you can do whatever you want on is the local

128
00:06:38,360 --> 00:06:41,460
bucket and any objects inside that local bucket,

129
00:06:41,460 --> 00:06:44,210
so those to resource lines defined the bucket and

130
00:06:44,210 --> 00:06:46,640
objects inside that bucket awesome.

131
00:06:46,640 --> 00:06:49,240
So we're all set with our permissions to the bucket,

132
00:06:49,240 --> 00:06:54,880
Then below that, we have an allow effect for Dynamo db Colin Star,

133
00:06:54,880 --> 00:06:57,720
which means any action in dynamodb.

134
00:06:57,720 --> 00:07:01,490
What resources are we doing that on why we're doing it on the dynamo

135
00:07:01,490 --> 00:07:04,500
db table that we're creating this configuration,

136
00:07:04,500 --> 00:07:09,940
which we references using the ARN property of that resource.

137
00:07:09,940 --> 00:07:13,580
All right, so that's our full access policy.

138
00:07:13,580 --> 00:07:14,390
Scrolling down.

139
00:07:14,390 --> 00:07:18,650
We get to are read only policy, and this one only has one effect in it.

140
00:07:18,650 --> 00:07:21,170
Because you'll remember the read only group doesn't

141
00:07:21,170 --> 00:07:23,770
need access to the dynamodb table.

142
00:07:23,770 --> 00:07:26,030
They only need access to the bucket.

143
00:07:26,030 --> 00:07:27,560
And what access do they need?

144
00:07:27,560 --> 00:07:30,040
What we're granting to actions here.

145
00:07:30,040 --> 00:07:35,420
We're granting anything that is get and anything that is list on S3 against

146
00:07:35,420 --> 00:07:39,780
the bucket and any objects in the bucket so they'll be able to list out the

147
00:07:39,780 --> 00:07:43,190
objects in the bucket and get those objects.

148
00:07:43,190 --> 00:07:45,960
But they won't be able to manipulate those objects

149
00:07:45,960 --> 00:07:47,890
or write anything to the bucket.

150
00:07:47,890 --> 00:07:51,140
So that's read only access that we've granted them.

151
00:07:51,140 --> 00:07:53,890
So that's everything that's in the configuration.

152
00:07:53,890 --> 00:07:55,440
If we get down to the output,

153
00:07:55,440 --> 00:08:00,180
we're gonna grab the name of the S3 bucket and the name of the dynamo

154
00:08:00,180 --> 00:08:04,670
DB table because we're going to need that information as we prepare

155
00:08:04,670 --> 00:08:11,000
to migrate our state from local to S3. All right, so we're all set with that.

