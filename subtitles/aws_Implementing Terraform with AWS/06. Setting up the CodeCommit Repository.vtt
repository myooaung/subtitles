WEBVTT
1
00:00:01.040 --> 00:00:01.420
[Autogenerated] All right,

2
00:00:01.420 --> 00:00:04.380
We have set up our code commit repository are build

3
00:00:04.380 --> 00:00:06.510
Project and our code pipeline.

4
00:00:06.510 --> 00:00:10.580
The next step in this process is to get that source code up into code commit.

5
00:00:10.580 --> 00:00:11.750
And in order to do that,

6
00:00:11.750 --> 00:00:14.970
we're going to need that code commit u R l and we're going to need some

7
00:00:14.970 --> 00:00:18.840
get credentials which we can get from the AWS console.

8
00:00:18.840 --> 00:00:20.800
So let me pull the terminal back up.

9
00:00:20.800 --> 00:00:22.410
And if you were falling along,

10
00:00:22.410 --> 00:00:25.570
you now have the code commit u R l I'm gonna go ahead and grab

11
00:00:25.570 --> 00:00:32.850
this and copy it and just pop open Notepad and paste it into

12
00:00:32.850 --> 00:00:35.180
Notepad just so I have it for later.

13
00:00:35.180 --> 00:00:38.440
Now let's go over to the AWS console,

14
00:00:38.440 --> 00:00:42.150
and we need to get get credentials for Elsie Vasquez,

15
00:00:42.150 --> 00:00:45.140
and we do that through the I am portion of the console.

16
00:00:45.140 --> 00:00:47.480
So go ahead and go into users here,

17
00:00:47.480 --> 00:00:53.640
and we'll select Elsie Vasquez and under security credentials,

18
00:00:53.640 --> 00:00:57.440
if we scroll down a bit, you'll see there's an HTTPS.

19
00:00:57.440 --> 00:01:00.940
Get credentials for AWS code commit area.

20
00:01:00.940 --> 00:01:03.910
That is where you will go to generate credentials for your

21
00:01:03.910 --> 00:01:07.070
user so that you can pull code down and push code up to

22
00:01:07.070 --> 00:01:08.920
that code commit repository.

23
00:01:08.920 --> 00:01:09.140
Now,

24
00:01:09.140 --> 00:01:11.340
I've already generated those credentials and add

25
00:01:11.340 --> 00:01:15.470
them to my get credentials manager, so I won't need to do that.

26
00:01:15.470 --> 00:01:17.850
But I did think it was important for you to see where to get

27
00:01:17.850 --> 00:01:20.340
those credentials so you can follow along.

28
00:01:20.340 --> 00:01:24.840
Now let's go ahead and clones this repository locally.

29
00:01:24.840 --> 00:01:25.130
All right?

30
00:01:25.130 --> 00:01:26.780
We're back in visual studio code.

31
00:01:26.780 --> 00:01:30.340
And if you look at the current path that I have in the terminal window,

32
00:01:30.340 --> 00:01:35.900
let me just make it very obvious here it's C colon slash GH That's where I

33
00:01:35.900 --> 00:01:39.830
keep all of my local repositories for code I'm working on.

34
00:01:39.830 --> 00:01:44.850
So that's where I'm going to create a clone off this code commit repository.

35
00:01:44.850 --> 00:01:50.840
So I'm gonna go all the way back up to the GH directory.

36
00:01:50.840 --> 00:01:51.610
In case you're wondering.

37
00:01:51.610 --> 00:01:54.280
GH usually stands for GitHub, but in this case, it's code.

38
00:01:54.280 --> 00:01:55.400
Commit that, you know,

39
00:01:55.400 --> 00:01:59.830
whatever works for you and I am going to run a get clone command,

40
00:01:59.830 --> 00:02:00.850
so I'm simply gonna run,

41
00:02:00.850 --> 00:02:10.140
get clone and then paste in the URL that we copy it a little bit earlier.

42
00:02:10.140 --> 00:02:12.040
There we do and hit enter.

43
00:02:12.040 --> 00:02:16.660
If you don't already have the get credentials in your credentials, Manager.

44
00:02:16.660 --> 00:02:19.100
This is when it would prompt you for those credentials.

45
00:02:19.100 --> 00:02:21.280
Since I already have them, it didn't prompt me.

46
00:02:21.280 --> 00:02:22.940
It's got them stored.

47
00:02:22.940 --> 00:02:25.400
Now that we have cloned an empty repository,

48
00:02:25.400 --> 00:02:27.510
we need to get some files into there.

49
00:02:27.510 --> 00:02:29.490
So I'm gonna go into the directory.

50
00:02:29.490 --> 00:02:33.440
We just created this VPC deploy directory,

51
00:02:33.440 --> 00:02:37.510
and I'm going to run this command from the commands dot txt,

52
00:02:37.510 --> 00:02:41.120
which copies all of the files that are in seven dash code

53
00:02:41.120 --> 00:02:44.740
dash commit dash files into this directory.

54
00:02:44.740 --> 00:02:48.440
Go ahead and grab this whole command.

55
00:02:48.440 --> 00:02:50.240
Go ahead and pasted down here.

56
00:02:50.240 --> 00:02:52.530
And now, if I look at what's in this directory,

57
00:02:52.530 --> 00:02:56.810
I now have four files in here, including that build spec dot yemma,

58
00:02:56.810 --> 00:03:00.560
which tells the build project what to actually do

59
00:03:00.560 --> 00:03:03.440
when it fires up that container.

60
00:03:03.440 --> 00:03:05.120
Now that we have that all set up,

61
00:03:05.120 --> 00:03:11.340
our next thing to do is to push these files up to that code commit repository.

62
00:03:11.340 --> 00:03:15.190
So we're going to run, get ad cache,

63
00:03:15.190 --> 00:03:19.050
which adds all of the files in this directory to our next commit.

64
00:03:19.050 --> 00:03:23.180
So we're staging those files for a commit and now we're going to run.

65
00:03:23.180 --> 00:03:27.430
Get commit, Dash M and put a message in here.

66
00:03:27.430 --> 00:03:28.820
We can say first commit.

67
00:03:28.820 --> 00:03:30.440
That works for us.

68
00:03:30.440 --> 00:03:34.760
Okay, we've committed these changes to our local repository.

69
00:03:34.760 --> 00:03:37.630
Now the last thing to do is to do get push.

70
00:03:37.630 --> 00:03:40.790
And this will push these files up to the code.

71
00:03:40.790 --> 00:03:42.340
Commit repository.

72
00:03:42.340 --> 00:03:43.920
So we've done all of our work.

73
00:03:43.920 --> 00:03:45.540
That information is now in the code.

74
00:03:45.540 --> 00:03:52.000
Commit repository we can. Go over to the AWS console and see what's going on over there.

