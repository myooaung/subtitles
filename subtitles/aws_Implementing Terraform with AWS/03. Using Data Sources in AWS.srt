1
00:00:01,040 --> 00:00:03,080
[Autogenerated] When you're building out these configurations,

2
00:00:03,080 --> 00:00:05,570
you may want to reference other configurations like

3
00:00:05,570 --> 00:00:06,910
we did in the layering model.

4
00:00:06,910 --> 00:00:10,670
Or you may want to reference resources that exist in AWS,

5
00:00:10,670 --> 00:00:12,740
and we've already seen this a little bit.

6
00:00:12,740 --> 00:00:15,270
What types of resources might you want to reference?

7
00:00:15,270 --> 00:00:17,640
Well, a really important one is your account.

8
00:00:17,640 --> 00:00:20,040
What account are you currently using?

9
00:00:20,040 --> 00:00:22,980
Because the account IDE is not necessarily obvious,

10
00:00:22,980 --> 00:00:26,440
you can retrieve it through a data source.

11
00:00:26,440 --> 00:00:29,530
Another common data source is availability zones.

12
00:00:29,530 --> 00:00:31,180
If you're building out VP CSS.

13
00:00:31,180 --> 00:00:33,310
If you're building out a load bouncer or anything

14
00:00:33,310 --> 00:00:35,440
that deals with availability zones,

15
00:00:35,440 --> 00:00:38,370
you need to get a list of availability zones in the current

16
00:00:38,370 --> 00:00:41,140
region so that you could take advantage of them.

17
00:00:41,140 --> 00:00:45,440
Another example is AM access or Amazon machine images.

18
00:00:45,440 --> 00:00:49,740
Those are necessary if you're going to spend up in SC to instance,

19
00:00:49,740 --> 00:00:52,770
and those images could either be the ones from the marketplace

20
00:00:52,770 --> 00:00:55,240
or custom images that you've built yourself.

21
00:00:55,240 --> 00:00:57,180
You need a way to reference those,

22
00:00:57,180 --> 00:01:00,440
and the way to do that is through a data source.

23
00:01:00,440 --> 00:01:02,860
Another common data source is networking,

24
00:01:02,860 --> 00:01:07,160
and you can get all sorts of information about objects that exist in your vpc s.

25
00:01:07,160 --> 00:01:09,540
For instance, you could get a list of security groups,

26
00:01:09,540 --> 00:01:11,600
or you could get a list of sub nets.

27
00:01:11,600 --> 00:01:14,920
And if you're trying to create a resource that needs that information,

28
00:01:14,920 --> 00:01:16,720
say a load balancer,

29
00:01:16,720 --> 00:01:21,340
it's going to want security groups as well as substance to connect to.

30
00:01:21,340 --> 00:01:24,540
That's something you can get from the networking data sources.

31
00:01:24,540 --> 00:01:26,290
And then finally, e c two.

32
00:01:26,290 --> 00:01:30,060
You might want to reference existing E C two instances for something

33
00:01:30,060 --> 00:01:33,230
like a load bouncer or creating a new security group,

34
00:01:33,230 --> 00:01:36,040
or if they're necessary for another application to

35
00:01:36,040 --> 00:01:37,850
talk to those SEC two instances.

36
00:01:37,850 --> 00:01:40,100
There's a bunch of reasons you might want to do that.

37
00:01:40,100 --> 00:01:40,700
So e.

38
00:01:40,700 --> 00:01:44,640
C two makes a lot of sense as a potential data source.

39
00:01:44,640 --> 00:01:47,220
Now, how do you reference these data sources?

40
00:01:47,220 --> 00:01:49,840
Let's take a look at a few examples.

41
00:01:49,840 --> 00:01:52,080
One of the data sources that we've already seen in

42
00:01:52,080 --> 00:01:56,840
configurations is this a W s collar identity data source,

43
00:01:56,840 --> 00:02:00,370
and this is the way to get your account IDE based off of

44
00:02:00,370 --> 00:02:02,970
the current provider that you're using.

45
00:02:02,970 --> 00:02:03,840
Now you'll notice.

46
00:02:03,840 --> 00:02:05,020
In this particular example,

47
00:02:05,020 --> 00:02:08,750
I don't references a specific instance of the a W s provider.

48
00:02:08,750 --> 00:02:10,010
So if you don't supply that,

49
00:02:10,010 --> 00:02:12,810
it's gonna go with the default instance of the provider.

50
00:02:12,810 --> 00:02:16,300
But you can also specify a provider alias as an argument,

51
00:02:16,300 --> 00:02:19,840
and then it will give you the account IDE and information

52
00:02:19,840 --> 00:02:23,140
that's specific instance of the provider.

53
00:02:23,140 --> 00:02:27,040
Like I said, another common one is AWS availability zones,

54
00:02:27,040 --> 00:02:29,900
and this will give you the fullest of availability zones that

55
00:02:29,900 --> 00:02:32,310
are in the region you're currently working in.

56
00:02:32,310 --> 00:02:32,840
However,

57
00:02:32,840 --> 00:02:35,750
you could specify the state argument and said it SQL to

58
00:02:35,750 --> 00:02:38,830
available so well only give you the availability zones that

59
00:02:38,830 --> 00:02:41,130
are currently available in that region.

60
00:02:41,130 --> 00:02:43,640
That's an important distinction, huh?

61
00:02:43,640 --> 00:02:48,600
Another one is sub net IDs, and we'll see this in a future configuration.

62
00:02:48,600 --> 00:02:52,580
If you need to get a list of sub net IDs to use for

63
00:02:52,580 --> 00:02:56,630
something like a load bouncer, you'll do that through a data source,

64
00:02:56,630 --> 00:02:58,310
and it does take a few arguments.

65
00:02:58,310 --> 00:02:59,970
One is the VPC IDE.

66
00:02:59,970 --> 00:03:02,450
Where am I getting these sub nets From now,

67
00:03:02,450 --> 00:03:05,430
if you don't specify, anything else is gonna give you every sub net IDE,

68
00:03:05,430 --> 00:03:07,870
which might not be particularly useful.

69
00:03:07,870 --> 00:03:09,420
But if you've tagged your sub nets,

70
00:03:09,420 --> 00:03:13,640
you can specify tags of the sub nets you want to retrieve in this case,

71
00:03:13,640 --> 00:03:16,620
where a tag tear is equal to application and it will

72
00:03:16,620 --> 00:03:19,050
only return those sub net IDs.

73
00:03:19,050 --> 00:03:27,000
That's pretty useful. Let's see how Globomantics is going to make use of these data sources and more.

