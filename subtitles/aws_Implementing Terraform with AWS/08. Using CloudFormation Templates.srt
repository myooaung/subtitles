1
00:00:01,140 --> 00:00:02,730
[Autogenerated] When you think of CloudFormation,

2
00:00:02,730 --> 00:00:05,400
you think infrastructure is code and wait,

3
00:00:05,400 --> 00:00:06,910
isn't that what we're doing with terra form?

4
00:00:06,910 --> 00:00:10,970
So why would we use CloudFormation when we already have terra form?

5
00:00:10,970 --> 00:00:13,040
That's an interesting point.

6
00:00:13,040 --> 00:00:17,250
And the reason is you're not working in a green field environment.

7
00:00:17,250 --> 00:00:18,110
Most of the time,

8
00:00:18,110 --> 00:00:22,040
you may have existing templates and existing deployments

9
00:00:22,040 --> 00:00:24,640
out there that used CloudFormation,

10
00:00:24,640 --> 00:00:27,450
and those templates might not be ready to be converted

11
00:00:27,450 --> 00:00:29,370
over to terra form configurations.

12
00:00:29,370 --> 00:00:31,640
And those deployments might not be ready to be

13
00:00:31,640 --> 00:00:33,930
replaced by terra form configurations.

14
00:00:33,930 --> 00:00:37,330
You're gonna have to deal with that as an engineer now.

15
00:00:37,330 --> 00:00:43,080
Another reason is the AWS provider gets updated pretty quickly,

16
00:00:43,080 --> 00:00:46,270
but new services come out of a W s all the time.

17
00:00:46,270 --> 00:00:49,350
And those services might be available in CloudFormation,

18
00:00:49,350 --> 00:00:52,300
but not yet available in the terra form provider.

19
00:00:52,300 --> 00:00:53,100
To get around that,

20
00:00:53,100 --> 00:00:56,720
you could use a CloudFormation template in the ______ form

21
00:00:56,720 --> 00:01:01,440
configuration and referenced the service there instead.

22
00:01:01,440 --> 00:01:02,540
Now, the good news is,

23
00:01:02,540 --> 00:01:07,500
you can both create CloudFormation stacks using a terra form configuration

24
00:01:07,500 --> 00:01:11,510
as well as read from existing stacks as a data source.

25
00:01:11,510 --> 00:01:14,810
So you have both options available to you and that makes you pretty

26
00:01:14,810 --> 00:01:18,840
flexible when you're dealing with an existing deployment.

27
00:01:18,840 --> 00:01:21,910
Now let's take a look at the stack Deployment resource.

28
00:01:21,910 --> 00:01:24,140
In an example.

29
00:01:24,140 --> 00:01:26,940
In order to deploy a CloudFormation stack,

30
00:01:26,940 --> 00:01:31,040
we're going to use the resource AWS CloudFormation stack.

31
00:01:31,040 --> 00:01:35,140
We have to give the stack a name, so we'll call it app Stack in this case,

32
00:01:35,140 --> 00:01:37,840
and then we have to provide it the template information.

33
00:01:37,840 --> 00:01:39,170
There's two ways to do that.

34
00:01:39,170 --> 00:01:41,460
In this example, we're doing template Body,

35
00:01:41,460 --> 00:01:45,130
and we're pulling the template information in from a file.

36
00:01:45,130 --> 00:01:46,400
So we're using the file function.

37
00:01:46,400 --> 00:01:50,640
To get that information, you can also define it in line.

38
00:01:50,640 --> 00:01:53,520
The other option is to reference a template URL where

39
00:01:53,520 --> 00:01:55,260
you have the template already stored.

40
00:01:55,260 --> 00:01:57,740
So you've got two good options there.

41
00:01:57,740 --> 00:02:01,190
Now we know a template takes parameters as input,

42
00:02:01,190 --> 00:02:04,760
so you can specify those parameters using the parameter argument

43
00:02:04,760 --> 00:02:08,320
and then giving it a map of the parameter name in the template and

44
00:02:08,320 --> 00:02:10,280
then the value you want to submit,

45
00:02:10,280 --> 00:02:14,140
so that allows you to pretty seamlessly interact with the template.

46
00:02:14,140 --> 00:02:17,070
There's also some additional arguments, like on failure.

47
00:02:17,070 --> 00:02:19,470
What should the CloudFormation stack do?

48
00:02:19,470 --> 00:02:20,530
Should it roll back.

49
00:02:20,530 --> 00:02:22,240
Should it do something else?

50
00:02:22,240 --> 00:02:27,410
There's some other arguments, and we will see those as we get into our example.

51
00:02:27,410 --> 00:02:33,000
So what is going on? A Globomantics where they need to use a CloudFormation template.

