WEBVTT
1
00:00:01.140 --> 00:00:01.630
[Autogenerated] all right.

2
00:00:01.630 --> 00:00:03.950
Here we are in visual studio code,

3
00:00:03.950 --> 00:00:07.760
and the set up for this process is in the directory six

4
00:00:07.760 --> 00:00:11.040
dash AWS dash tools cache set up.

5
00:00:11.040 --> 00:00:14.400
Let's go ahead and expand that out and see what we've got going on in there.

6
00:00:14.400 --> 00:00:19.150
We've got to commands dot txt a main dot t f that has our full configuration in

7
00:00:19.150 --> 00:00:22.910
there and then a ______ form dot t f bars that has some values for the

8
00:00:22.910 --> 00:00:26.340
variables that we're going to use in our configuration.

9
00:00:26.340 --> 00:00:29.640
Let's start by looking in the commands Txt.

10
00:00:29.640 --> 00:00:32.860
All right, so we are going to be creating a code commit repository,

11
00:00:32.860 --> 00:00:37.350
a CodeBuild project and a code pipeline that uses that code

12
00:00:37.350 --> 00:00:40.740
commit repository and the CodeBuild project.

13
00:00:40.740 --> 00:00:45.340
We're not actually adding the code to code commit as part of this configuration,

14
00:00:45.340 --> 00:00:47.640
so we're going to do that separately.

15
00:00:47.640 --> 00:00:48.000
Also,

16
00:00:48.000 --> 00:00:51.290
we are using the state bucket and dynamodb table that

17
00:00:51.290 --> 00:00:52.700
we created in the previous model.

18
00:00:52.700 --> 00:00:54.910
So if you skip that model for some reason,

19
00:00:54.910 --> 00:00:57.370
you're gonna have to go back into the directory five remote

20
00:00:57.370 --> 00:01:00.890
state set up and just run through that process to get that

21
00:01:00.890 --> 00:01:04.140
bucket and dynamodb table created.

22
00:01:04.140 --> 00:01:07.280
Then you can rename the Terra Form TF bars that example,

23
00:01:07.280 --> 00:01:11.340
file to terra form TF bars and update the values in there.

24
00:01:11.340 --> 00:01:14.000
Let's take a look at what those values are.

25
00:01:14.000 --> 00:01:17.260
There's four values that are stored in terra form TF bars.

26
00:01:17.260 --> 00:01:18.840
One is the region.

27
00:01:18.840 --> 00:01:22.350
The next one is the state bucket, where we'll be storing our remote state.

28
00:01:22.350 --> 00:01:24.720
So this is already created S3 bucket.

29
00:01:24.720 --> 00:01:27.490
And then there's the Dynamo DB table that will use for state

30
00:01:27.490 --> 00:01:30.560
locking that was also created in the previous module.

31
00:01:30.560 --> 00:01:32.790
And then finally the code commit user.

32
00:01:32.790 --> 00:01:36.460
This is the user who is allowed to commit to the code

33
00:01:36.460 --> 00:01:39.040
commit repository that we're creating,

34
00:01:39.040 --> 00:01:43.900
and we're allowing Elsie Vazquez to make commits to that repository.

35
00:01:43.900 --> 00:01:45.300
So that should all make sense.

36
00:01:45.300 --> 00:01:46.490
If you have a different user,

37
00:01:46.490 --> 00:01:50.510
just swap out the user instead of Elsie Vazquez to whatever user you're

38
00:01:50.510 --> 00:01:54.380
going to use to make those commits to code commit.

39
00:01:54.380 --> 00:01:58.740
Those are the values we're gonna be using for our ______ form configuration.

40
00:01:58.740 --> 00:02:03.140
Now let's take a look at the configuration itself will open up main .NET TF.

41
00:02:03.140 --> 00:02:06.240
I'm not gonna go through this whole thing because it's about

42
00:02:06.240 --> 00:02:09.090
600 lines of code that would take a while.

43
00:02:09.090 --> 00:02:13.120
And it's not necessarily that interesting or German to what we're deploying.

44
00:02:13.120 --> 00:02:16.150
I think the graphic from the presentation outlines what we're

45
00:02:16.150 --> 00:02:18.120
actually creating rather than going through all of this.

46
00:02:18.120 --> 00:02:19.000
But if you'd like to,

47
00:02:19.000 --> 00:02:22.200
you can parse through this entire configuration to see

48
00:02:22.200 --> 00:02:23.780
what's actually going on in here.

49
00:02:23.780 --> 00:02:27.780
But like I said, if we scroll all the way down to the bottom yeah,

50
00:02:27.780 --> 00:02:30.720
we're in about 564 lines of code.

51
00:02:30.720 --> 00:02:33.680
That would just take entirely too long for this presentation.

52
00:02:33.680 --> 00:02:35.080
But I do recommend, you know,

53
00:02:35.080 --> 00:02:38.640
going through it to understand how all these resources

54
00:02:38.640 --> 00:02:41.440
are being created through terra form.

55
00:02:41.440 --> 00:02:42.980
The important thing is that the end,

56
00:02:42.980 --> 00:02:45.500
we get the code commit u R l and we're going to use

57
00:02:45.500 --> 00:02:49.550
that to clone the repository locally, add some files to it,

58
00:02:49.550 --> 00:02:54.960
and then push those files back up to the remote repository on code commits

59
00:02:54.960 --> 00:02:59.640
that we can actually kick off this entire build process.

60
00:02:59.640 --> 00:03:02.190
Let's go back to the commands .NET y-axis T.

61
00:03:02.190 --> 00:03:05.460
And this is the standard terra form workflow.

62
00:03:05.460 --> 00:03:14.940
We're going to run terra form in it in this directory.

63
00:03:14.940 --> 00:03:22.740
All right, there we do get are plug ins and our provider all set up.

64
00:03:22.740 --> 00:03:27.440
All right, now we'll run Terra form plan.

65
00:03:27.440 --> 00:03:28.440
Here we do.

66
00:03:28.440 --> 00:03:33.290
Go ahead and run that and this is going to create

67
00:03:33.290 --> 00:03:36.940
roughly 10 resources within a W s.

68
00:03:36.940 --> 00:03:39.500
That will be part of this configuration.

69
00:03:39.500 --> 00:03:40.360
There we do.

70
00:03:40.360 --> 00:03:43.630
It was 10 resources I remembered correctly and lastly,

71
00:03:43.630 --> 00:03:45.840
will run Terra Forum apply.

72
00:03:45.840 --> 00:03:49.440
Go ahead and copy that and paste it into here.

73
00:03:49.440 --> 00:03:50.740
There we go.

74
00:03:50.740 --> 00:03:54.890
And this will create relatively quickly because it's not spinning up any

75
00:03:54.890 --> 00:03:58.290
RDS instances or easy to instances or anything like that.

76
00:03:58.290 --> 00:04:01.340
It's all just software and code that it's spinning up.

77
00:04:01.340 --> 00:04:04.200
So it usually only takes I don't know, too.

78
00:04:04.200 --> 00:04:08.640
It's already done, so it doesn't take very long to create all of this.

79
00:04:08.640 --> 00:04:10.520
All right, so it did complete successfully,

80
00:04:10.520 --> 00:04:15.350
and now we have our code commit U R L that we're going to use to clone the code,

81
00:04:15.350 --> 00:04:17.500
commit repository locally.

82
00:04:17.500 --> 00:04:22.840
Now, if we look at what's in the commands dot txt,

83
00:04:22.840 --> 00:04:27.040
go ahead and hide the terminal for a second.

84
00:04:27.040 --> 00:04:30.710
We can see the at the next step here is to make a note of that code

85
00:04:30.710 --> 00:04:33.730
commit U R l and we're gonna get some get credentials from the

86
00:04:33.730 --> 00:04:40.000
console and then clone this repo locally, so that is the next step in this process.

