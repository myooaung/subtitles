WEBVTT
1
00:00:01.040 --> 00:00:01.430
[Autogenerated] all right.

2
00:00:01.430 --> 00:00:03.630
Here we are in the A W s console,

3
00:00:03.630 --> 00:00:06.410
and we're looking at the code commit repositories.

4
00:00:06.410 --> 00:00:08.950
You can see we've got one repository in here.

5
00:00:08.950 --> 00:00:10.590
Vpc deploy we can.

6
00:00:10.590 --> 00:00:12.090
Go ahead and click on that,

7
00:00:12.090 --> 00:00:14.760
and it should show us the four files that were in our

8
00:00:14.760 --> 00:00:17.500
local repository that we just pushed up.

9
00:00:17.500 --> 00:00:18.350
So that's awesome.

10
00:00:18.350 --> 00:00:21.240
We managed to get the files in there.

11
00:00:21.240 --> 00:00:21.950
As you can see,

12
00:00:21.950 --> 00:00:26.580
there is a build spec .NET XAML a back end dot t f a main dot t

13
00:00:26.580 --> 00:00:30.640
f and a terra form actions .NET SSH file.

14
00:00:30.640 --> 00:00:33.640
Before we delve into what those are doing,

15
00:00:33.640 --> 00:00:36.980
let's take a look at the build project that is going

16
00:00:36.980 --> 00:00:39.840
to be utilizing this source code.

17
00:00:39.840 --> 00:00:41.660
So we'll go ahead and expand out,

18
00:00:41.660 --> 00:00:45.750
build and look at build projects in build projects.

19
00:00:45.750 --> 00:00:48.940
We have this project that was created by our terra form

20
00:00:48.940 --> 00:00:52.240
configuration called VPC Deploy Project.

21
00:00:52.240 --> 00:00:56.000
We'll go ahead and click on that and you can see the repository

22
00:00:56.000 --> 00:00:59.000
that it's using for its code is vpc deploy.

23
00:00:59.000 --> 00:01:03.340
That's the repository that we just pushed our files to.

24
00:01:03.340 --> 00:01:09.150
Let's go to build details and we can take a look at the configuration here,

25
00:01:09.150 --> 00:01:10.550
So we already talked about the source.

26
00:01:10.550 --> 00:01:15.230
We know it's using the VPC deploy repository for source,

27
00:01:15.230 --> 00:01:16.980
and the source version is master,

28
00:01:16.980 --> 00:01:21.540
so it's using the master branch off our source control,

29
00:01:21.540 --> 00:01:22.830
scrolling down a little bit more.

30
00:01:22.830 --> 00:01:24.650
We define an environment in here,

31
00:01:24.650 --> 00:01:28.490
and this is the container that it's spinning up to run its build process.

32
00:01:28.490 --> 00:01:31.740
And we selected the standard 2D a to image.

33
00:01:31.740 --> 00:01:33.710
It's a Linux style environment.

34
00:01:33.710 --> 00:01:35.790
It has three gig of memory and to V.

35
00:01:35.790 --> 00:01:36.210
C P.

36
00:01:36.210 --> 00:01:37.340
Apps.

37
00:01:37.340 --> 00:01:39.780
It's a pretty straightforward container.

38
00:01:39.780 --> 00:01:43.850
It has some things preinstalled in it, like basic Linux tools,

39
00:01:43.850 --> 00:01:45.940
but not a whole lot else.

40
00:01:45.940 --> 00:01:49.680
If we expand out our environment variables we can see,

41
00:01:49.680 --> 00:01:53.240
there's a number of environment variables that are being referenced here.

42
00:01:53.240 --> 00:01:56.030
These will be populated and available to any scripts

43
00:01:56.030 --> 00:01:57.660
that are running inside the container,

44
00:01:57.660 --> 00:02:01.090
and this is how we get our information into the container so

45
00:02:01.090 --> 00:02:03.840
that terra form can do run appropriately.

46
00:02:03.840 --> 00:02:06.590
T f action defines what action we're going to take in

47
00:02:06.590 --> 00:02:08.620
the default value for that is planned,

48
00:02:08.620 --> 00:02:12.210
but we can control that when we submit a new build we can alter

49
00:02:12.210 --> 00:02:15.540
these environment variables depending on the build,

50
00:02:15.540 --> 00:02:19.660
the next day the Terra form version and we're setting the version 2 12.24.

51
00:02:19.660 --> 00:02:22.090
You can set this to whatever the current version is.

52
00:02:22.090 --> 00:02:25.040
I went with the default version that I was working with.

53
00:02:25.040 --> 00:02:27.540
The T F Bucket is the state bucket.

54
00:02:27.540 --> 00:02:31.640
The T F table is the dynamo db State lock table.

55
00:02:31.640 --> 00:02:33.920
The T F region just defines what region we're gonna

56
00:02:33.920 --> 00:02:35.290
deploy this configuration in.

57
00:02:35.290 --> 00:02:38.230
And then lastly, we're gonna make use of workspaces here.

58
00:02:38.230 --> 00:02:41.490
So the workspace is set to the default of default.

59
00:02:41.490 --> 00:02:45.180
But when we actually submit the job in our pipeline,

60
00:02:45.180 --> 00:02:49.040
we're going to set the workspace name to development.

61
00:02:49.040 --> 00:02:53.050
Let's scroll down a little bit more and we can see the at any

62
00:02:53.050 --> 00:02:55.920
artifacts that are generated by this build process.

63
00:02:55.920 --> 00:03:01.470
Go to global build logs 26 969 That's the S3 bucket that we

64
00:03:01.470 --> 00:03:05.440
created specifically for logs and artifacts.

65
00:03:05.440 --> 00:03:07.190
If we scroll down a little bit more we can,

66
00:03:07.190 --> 00:03:11.320
see, it's using the same S3 bucket, and it's using the subdirectory build blog.

67
00:03:11.320 --> 00:03:14.940
So if you need to look at a build blog after it's happened,

68
00:03:14.940 --> 00:03:17.600
you can go into that S3 bucket and download the build

69
00:03:17.600 --> 00:03:19.190
blog for a particular building, you know,

70
00:03:19.190 --> 00:03:19.970
see what's going on.

71
00:03:19.970 --> 00:03:22.340
Maybe see why something went wrong.

72
00:03:22.340 --> 00:03:24.640
So that's our build project.

73
00:03:24.640 --> 00:03:27.700
In order to understand what it's actually doing inside the build,

74
00:03:27.700 --> 00:03:36.000
let's review what's going on inside that build spec .NET, XAML and some of the other files that we committed to the repository.

