WEBVTT
1
00:00:05.350 --> 00:00:09.850
Welcome back in this lecture we're going to actually begin implementing straight payments.

2
00:00:09.910 --> 00:00:16.640
Keep in mind we're just creating a very simple site that essentially accepts donations for complex tasks.

3
00:00:16.640 --> 00:00:22.170
You can check out the documentation for Strype at w w w that Strype dot com forward slash docs.

4
00:00:22.340 --> 00:00:28.190
And we're going to be using the examples in the documentation to actually implement our code that accepts

5
00:00:28.190 --> 00:00:29.110
the payments.

6
00:00:29.120 --> 00:00:33.680
So keep in mind if you're wondering for the actual syntax you can always reference a striped box.

7
00:00:33.740 --> 00:00:35.570
They have really great documentation.

8
00:00:35.570 --> 00:00:41.030
Let's quickly visit the documentation explored a bit and then get started with our own implementation.

9
00:00:41.030 --> 00:00:41.300
All right.

10
00:00:41.300 --> 00:00:45.430
Here we are at the Strype documentation at striped dot com for slashed docs.

11
00:00:45.440 --> 00:00:48.140
You can check out the documentation for a whole load of features.

12
00:00:48.140 --> 00:00:53.060
They have things like dashboards that you can create such as an overview to see how much has been being

13
00:00:53.060 --> 00:00:57.710
paid and keep in mind that you'll want to actually create your own Strype account and get your own API

14
00:00:57.710 --> 00:01:00.290
keys and that will connect to your bank account.

15
00:01:00.290 --> 00:01:04.350
That way when you accept payments those payments go to your bank account through your API.

16
00:01:04.760 --> 00:01:10.910
Now for our case we're just going to be using Strypes example APHC which doesn't actually accept real

17
00:01:10.910 --> 00:01:16.000
payments and we'll also be putting in the fake credit card that works that are kind of fake API key.

18
00:01:16.130 --> 00:01:17.880
So keep in mind there's lots you can do here.

19
00:01:18.020 --> 00:01:22.970
Something I want to make clear is as you explore that documentation for example let's say you're interested

20
00:01:22.970 --> 00:01:27.720
in collecting payments and you want to figure out how you can actually create a charge.

21
00:01:27.750 --> 00:01:31.920
There's tons of code examples and what you're going to do is you're just going to need to click on Python

22
00:01:32.340 --> 00:01:37.410
and this will be the Python code that you're going to insert into your Flast documentation for whatever

23
00:01:37.410 --> 00:01:38.390
you're trying to do.

24
00:01:38.400 --> 00:01:43.320
So if you're trying to do things like check out refunds eventually you'll see documentation here on

25
00:01:43.320 --> 00:01:49.320
what code you have to add in to your flask example to actually get this all to work.

26
00:01:49.320 --> 00:01:52.050
So again it's really useful documentation here.

27
00:01:52.140 --> 00:01:54.830
And you'll notice that a lot of this is just a few lines of code.

28
00:01:54.870 --> 00:01:57.080
The main things are just setting up your API key.

29
00:01:57.160 --> 00:02:02.400
And as you hover over them they'll say that this is a sample secret a pikey need to sign in to see your

30
00:02:02.430 --> 00:02:03.580
own examples.

31
00:02:03.590 --> 00:02:06.530
Prefilled if your test keys so that's actually something that's really cool.

32
00:02:06.540 --> 00:02:12.390
Once you sign in all these examples would actually be prefilled with your own correct keys.

33
00:02:12.390 --> 00:02:16.140
So then you can just explore the documentation and copy and paste as you go along.

34
00:02:16.180 --> 00:02:18.750
Some of my favorite features of the documentation.

35
00:02:18.900 --> 00:02:24.810
Now I want to also mention that there's a specific check out guide for flask and that striped dot com

36
00:02:24.870 --> 00:02:27.800
Ford slash docs slash checkout slash flask.

37
00:02:27.930 --> 00:02:30.440
And this is essentially what we're going to be following along with.

38
00:02:30.540 --> 00:02:34.180
Keep in mind you'll have to run this line at your terminal.

39
00:02:34.200 --> 00:02:39.660
Install Ford slash Erse who's made dash dash upgrade stripe Strype So we're going to say pipin salt

40
00:02:39.750 --> 00:02:44.550
essentially upgrade Strype and we're going to be using this import stripe library in order to get all

41
00:02:44.550 --> 00:02:45.620
of this to work.

42
00:02:45.630 --> 00:02:49.530
So this is essentially what we're following along with here are going to take you through this kind

43
00:02:49.530 --> 00:02:50.440
of simple example.

44
00:02:50.490 --> 00:02:52.180
Over at the Adam text editor.

45
00:02:52.380 --> 00:02:53.940
Let's get started.

46
00:02:53.940 --> 00:02:54.230
All right.

47
00:02:54.240 --> 00:03:00.060
Here I am at the Adam text editor under this flask example full there we have here on my desktop what

48
00:03:00.060 --> 00:03:07.170
I'm going to do is create a new file or call app thought pie and that's going to contain my actual Python

49
00:03:07.170 --> 00:03:08.160
code for this.

50
00:03:08.310 --> 00:03:13.410
And to make sure this all works I'm going to first I'm going to activate my environment I'll say activate

51
00:03:13.410 --> 00:03:17.160
my flask in the order we happen to call your environment.

52
00:03:17.160 --> 00:03:23.630
And then I want to make sure that I have the latest version of Strype so I'll say pipin stall upgrade

53
00:03:23.880 --> 00:03:25.120
Strype.

54
00:03:25.320 --> 00:03:29.150
So those two dashes there and then it should download it or upgrade it for you.

55
00:03:29.210 --> 00:03:33.820
Again that command line is just pipin stall dash dash upgrade stripe.

56
00:03:33.860 --> 00:03:35.840
Same thing we saw in the documentation.

57
00:03:35.840 --> 00:03:38.600
So make sure you've done that as well in your environment.

58
00:03:38.600 --> 00:03:42.620
Once we have that ready to go I'm going to create another folder here.

59
00:03:42.620 --> 00:03:46.520
Underneath that I'm going to call it templates and we're essentially is going to have two templates

60
00:03:46.790 --> 00:03:50.990
in index page for home page and a thank you page.

61
00:03:51.020 --> 00:03:56.990
So going to say new file index each T.M. And one more file here.

62
00:03:56.990 --> 00:03:57.490
Thank you.

63
00:03:57.500 --> 00:03:58.500
Each T.M..

64
00:03:59.120 --> 00:04:00.250
So thank you.

65
00:04:00.350 --> 00:04:01.250
H Timo.

66
00:04:01.520 --> 00:04:03.400
OK so we have an index page.

67
00:04:03.410 --> 00:04:04.550
Thank you page.

68
00:04:04.580 --> 00:04:06.640
Most of our work is going to be done here in the app.

69
00:04:06.650 --> 00:04:08.270
So let's get started.

70
00:04:08.270 --> 00:04:18.170
First we're going to say from flask import flask rendered template request read direct read direct and

71
00:04:18.170 --> 00:04:26.720
then your L4 and then we're going to import Strype that will say Apples equal to flask

72
00:04:30.030 --> 00:04:35.130
and in the next hour and do is for this example we're going to set our public key and Strype API key

73
00:04:35.400 --> 00:04:37.560
just directly in our pie file.

74
00:04:37.560 --> 00:04:44.220
Often you'll want to set these as environment variables and then and for the actual key we're using

75
00:04:44.310 --> 00:04:47.680
these are going to be the example keys.

76
00:04:47.730 --> 00:04:50.390
So I'm going to copy and paste these from my example.

77
00:04:50.580 --> 00:04:56.220
And I would mention you do the same or use your own keys if you are already registered but these keys

78
00:04:56.220 --> 00:05:00.720
right here at this public key that I'm about to type out and the secret key Those are the example keys

79
00:05:00.720 --> 00:05:07.210
that work with flask and stripe for a fake ID card or a fake credit card.

80
00:05:07.860 --> 00:05:09.020
So we're going to be using those.

81
00:05:09.090 --> 00:05:13.220
And then we're going to call Strype and then set our API key.

82
00:05:13.470 --> 00:05:17.630
So he said a public key and then we set the Strype API key again.

83
00:05:17.670 --> 00:05:22.650
I'm going to copy and paste this from my notes and I suggest you do the same just copy and paste from

84
00:05:22.680 --> 00:05:28.350
our file because these particular public keys and they keys these are the fake ones that just work for

85
00:05:28.350 --> 00:05:30.150
an example credit card.

86
00:05:30.150 --> 00:05:31.020
All right.

87
00:05:31.350 --> 00:05:33.680
So the first thing to do is route to our home page.

88
00:05:33.810 --> 00:05:40.410
And this is going to be really simple it's just going to be the index and we're going to return the

89
00:05:40.410 --> 00:05:44.680
following we'll say return render a template and we'll have index sites.

90
00:05:44.680 --> 00:05:49.740
Tim L and we'll actually be using the public key in our home page to make sure that checkout works.

91
00:05:50.040 --> 00:05:53.910
So we're going to say public key is equal to public key.

92
00:05:54.270 --> 00:05:58.040
So we'll be using that later on in that actual template file that we're going to have.

93
00:05:58.050 --> 00:05:58.800
Thank you page.

94
00:05:58.800 --> 00:06:07.430
So after they've paid we'll have a quick thank you and then here we're going to say is T.F. think you

95
00:06:09.400 --> 00:06:16.400
and this is just going to return rendered template of the think you got each team or file.

96
00:06:16.730 --> 00:06:17.180
OK.

97
00:06:17.370 --> 00:06:20.760
So we have our index home page view and our THANK YOU view.

98
00:06:20.910 --> 00:06:25.080
And then after that we're going to have a payment view and that payment view you can almost think of

99
00:06:25.080 --> 00:06:29.070
it as like a Lagat view where it really does most of the work.

100
00:06:29.100 --> 00:06:40.340
So let's get started with setting up our payment view well see app that route forward slash payments

101
00:06:40.600 --> 00:06:43.140
and there's not actually going to be a template connected to this.

102
00:06:43.140 --> 00:06:48.050
This is essentially just handling the logical task of connecting ghostwrite and then accepting that

103
00:06:48.050 --> 00:06:52.430
payment from the users bank account and then sending it over to your own bank account.

104
00:06:52.790 --> 00:06:58.640
So the methods and this list we actually just need post and I'm going to collapse this left hand to

105
00:06:58.640 --> 00:07:00.180
give ourselves a little more room.

106
00:07:00.440 --> 00:07:02.120
So let's see what this payment view looks like.

107
00:07:02.120 --> 00:07:08.600
This is kind of the one doing all the work the payments Well we're going to do is we first start off

108
00:07:08.600 --> 00:07:10.650
with the customer information.

109
00:07:11.000 --> 00:07:14.650
So the customer information we say customer is equal to.

110
00:07:15.170 --> 00:07:21.760
And then we're going to create a Strype customer objects will say Strype dot customer notice that sees

111
00:07:21.760 --> 00:07:28.700
capital is there and then we say create and we're going to have a forum here on this actual payment

112
00:07:28.700 --> 00:07:29.830
route for the checkout.

113
00:07:29.990 --> 00:07:40.940
That's going to request and e-mails so say e-mail request form and we'll say Strype email.

114
00:07:41.200 --> 00:07:43.410
And then the second one we're going to say.

115
00:07:43.420 --> 00:07:55.390
Source is equal to request that form and this is going to be Strype token.

116
00:07:55.410 --> 00:07:57.790
So that's going to create some customer information for us.

117
00:07:58.020 --> 00:08:03.300
And then we're going to do is have some payment information.

118
00:08:03.420 --> 00:08:06.280
So here we're going to say charge is equal to.

119
00:08:06.280 --> 00:08:08.660
And we're going to create a charge object.

120
00:08:08.940 --> 00:08:13.010
So I'll say strike that charge create.

121
00:08:13.330 --> 00:08:16.030
And then here we're going to pass in the customer.

122
00:08:16.220 --> 00:08:26.370
So in this case what's well say customer is equal to customer I.D. amount is equal to.

123
00:08:26.370 --> 00:08:28.780
And in this case whatever amount you want to charge.

124
00:08:28.920 --> 00:08:31.490
So we're going to say in 1999.

125
00:08:31.500 --> 00:08:40.350
So $19 the 99 cents and we'll say currency is equal to us dollars and you could check the documentation

126
00:08:40.380 --> 00:08:45.820
over like what currencies are accepted and they each have string codes and then you can give a description.

127
00:08:45.840 --> 00:08:51.480
That way when you view your dashboard on your Strype account you'll see that oh $19 and 99 cents came

128
00:08:51.480 --> 00:08:53.370
for your description.

129
00:08:53.370 --> 00:08:57.780
So this case we're making at the Nation Web sites all say it's for our donation.

130
00:08:58.290 --> 00:09:01.410
So once they've paid we're going to redirect them to the thank you page.

131
00:09:01.470 --> 00:09:06.300
So it's a return redirect your l4.

132
00:09:06.390 --> 00:09:08.230
And in this case we'll say thank you.

133
00:09:08.770 --> 00:09:09.270
OK.

134
00:09:09.480 --> 00:09:10.830
So that's the payment view.

135
00:09:10.830 --> 00:09:15.710
It's really similar to a log out view in the sense that there is no template associated with it.

136
00:09:15.720 --> 00:09:20.300
We actually just reroute them from the index page and it kind of shows the checkout form.

137
00:09:20.400 --> 00:09:24.420
And then once they've done that then they get their accesses the thank you page and at the bottom of

138
00:09:24.420 --> 00:09:31.080
all this we're going to say if name is equal to Main take the app run it and for right now will say

139
00:09:31.090 --> 00:09:34.420
debug is equal to true so save those changes.

140
00:09:34.600 --> 00:09:38.180
And again I would suggest you copy and paste in case you kind of mess anything up.

141
00:09:38.200 --> 00:09:42.870
It's really easy to make typos here but we have some customer mation basically through a customer object.

142
00:09:42.910 --> 00:09:45.970
You also have some payment information through a charge object.

143
00:09:45.970 --> 00:09:51.260
Now the second part of this were a lot of the work is going to go into our index.

144
00:09:51.280 --> 00:09:52.450
Each team will file.

145
00:09:52.630 --> 00:09:58.390
So now let's go to our team T.M. And we'll start typing H.T. mail to kind of get these Skelton codes

146
00:09:58.390 --> 00:10:02.220
in here and I get a copy and paste the bootstrap links.

147
00:10:02.260 --> 00:10:04.690
So I'll put those in the head right now.

148
00:10:04.690 --> 00:10:06.200
So go ahead and copy and paste that.

149
00:10:06.220 --> 00:10:12.240
Here are links of bootstrap and then we're going to do and say the body is say Divx.

150
00:10:12.280 --> 00:10:15.980
So we'll create a division here and we'll just have this be a jumbotron.

151
00:10:16.120 --> 00:10:19.930
So really simple we'll say had one.

152
00:10:19.970 --> 00:10:28.990
Welcome to our donation page and then we'll say H-2 would you like to donate.

153
00:10:30.010 --> 00:10:31.520
Questionmark.

154
00:10:32.110 --> 00:10:35.590
Now we're going to do is set up our checkout form.

155
00:10:35.770 --> 00:10:39.910
So there's actually going to be a little form that people can fill out with their credit card information.

156
00:10:40.150 --> 00:10:45.850
So we'll say form and the class if you want I can add in classes here to try and make it look better.

157
00:10:45.850 --> 00:10:50.230
You can also check out the Strype documentation they actually have their own really nice looking forms

158
00:10:50.590 --> 00:10:55.720
that they've kind of open source for you to add in your own class calls they're the action that we're

159
00:10:55.720 --> 00:11:03.710
going to do is now we're going to send them to the your el for payments.

160
00:11:03.710 --> 00:11:07.850
So that's going to send them to that payment view and the method is going to be post going to make this

161
00:11:07.850 --> 00:11:10.330
all caps just to make sure we don't get any errors there.

162
00:11:10.400 --> 00:11:15.470
So we have this URL for a post and then we have to add in a bunch of things here and we have to add

163
00:11:15.530 --> 00:11:20.340
in as a script so such is going to be some javascript at work here.

164
00:11:20.740 --> 00:11:23.120
And we're going to say the following.

165
00:11:23.120 --> 00:11:28.910
We actually don't need to specify the type instead what we're going to do is we're going to specify

166
00:11:28.910 --> 00:11:30.060
a couple of things here.

167
00:11:30.170 --> 00:11:32.390
Am I going to do this over multiple lines.

168
00:11:32.390 --> 00:11:38.510
So notice how I have still this close anti-glare will say the source is equal to.

169
00:11:38.580 --> 00:11:48.650
And in this case we have to point to HTC P.S. colon for Slash for Slash Cecco stripe come forward.

170
00:11:48.660 --> 00:11:50.930
Last check out thought J.

171
00:11:50.940 --> 00:11:52.170
S.

172
00:11:52.380 --> 00:12:03.200
And then we're going to say here the class is equal to what's striped button.

173
00:12:03.250 --> 00:12:03.480
All right.

174
00:12:03.480 --> 00:12:04.300
So we have our source.

175
00:12:04.300 --> 00:12:07.540
We have our class and then we're going to connect it with the data key.

176
00:12:09.870 --> 00:12:12.950
And set that equal to the public key that we passed then.

177
00:12:13.200 --> 00:12:19.410
So remember if we take a look back at this view appear we have this index view and it's passing in the

178
00:12:19.410 --> 00:12:20.290
public key.

179
00:12:20.490 --> 00:12:25.500
And when you actually register for your own Strype account they'll give you your own public key and

180
00:12:25.500 --> 00:12:27.360
secret key which will fill in here.

181
00:12:27.450 --> 00:12:29.850
The ones I'm using right now are just the test keys.

182
00:12:29.850 --> 00:12:34.380
So that's what we're passing into the index page which we're going to be passing in inside of this form

183
00:12:34.710 --> 00:12:40.240
inside this group which directly connects to the checkout capabilities of Strype.

184
00:12:40.290 --> 00:12:46.650
So we have this data key that's the public key we're passing in that will we're going to do is say data

185
00:12:47.250 --> 00:12:50.150
amount and we actually passed this in as a stream.

186
00:12:50.360 --> 00:12:55.640
So say $19 and 99 cents so it's just a string right there 1 9 9 9.

187
00:12:56.160 --> 00:13:03.350
And then we'll say give it a name the name will say it's the puppy adoption or puppy donation or whatever

188
00:13:03.350 --> 00:13:06.470
you want to say here for the name data description.

189
00:13:06.520 --> 00:13:07.530
Again very similar.

190
00:13:07.530 --> 00:13:13.400
It's kind of up to you to say it's donation and then you can actually pass in an image if you want.

191
00:13:13.620 --> 00:13:15.030
So I will leave that blank for now.

192
00:13:15.030 --> 00:13:24.940
We'll show you later what you can do if it we'll say data local Ezekial to auto and then we'll say data

193
00:13:26.150 --> 00:13:29.360
zip code is equal to true.

194
00:13:29.800 --> 00:13:30.070
OK.

195
00:13:30.100 --> 00:13:33.700
Let's make sure these are double quotes just to make sure we don't get any errors here.

196
00:13:34.770 --> 00:13:37.060
And I'll do the same appear above.

197
00:13:37.110 --> 00:13:40.950
It should work either way but just in case we'll put double quotes there.

198
00:13:40.950 --> 00:13:41.380
All right.

199
00:13:41.520 --> 00:13:46.310
So this is essentially the giant script that's going to automatically create the form for the checkout

200
00:13:46.320 --> 00:13:49.830
with straight and believe it or not that's actually all you have to do.

201
00:13:49.920 --> 00:13:52.280
And a lot of this you're not going to type it out yourself.

202
00:13:52.320 --> 00:13:54.060
Instead you just go to documentation.

203
00:13:54.060 --> 00:13:57.500
And if you copy and paste pretty much all of this would have been filled out free already.

204
00:13:57.540 --> 00:14:00.210
Besides the name and description and the amount.

205
00:14:00.390 --> 00:14:02.490
So I'm going to save that right here.

206
00:14:02.700 --> 00:14:05.310
And let's now fill out our thank you page.

207
00:14:05.310 --> 00:14:11.090
So the thank you page it's going to look really similar going to start by typing off H-2 e-mail here.

208
00:14:11.090 --> 00:14:16.550
Save that and get a copy and paste the links from Bootstrap So we'll put that here in the head.

209
00:14:16.850 --> 00:14:20.840
And then what I like to do is just have a little Jumbotron that says thank you.

210
00:14:20.840 --> 00:14:28.150
So it's a div class jumbotron and then here it'll be thank you for your donation.

211
00:14:29.540 --> 00:14:30.020
OK.

212
00:14:30.250 --> 00:14:30.950
Save that.

213
00:14:31.000 --> 00:14:34.150
And now let's run this and make sure that actually all works.

214
00:14:34.150 --> 00:14:38.310
And then at the end we'll show you how you can add in your own custom image on the checkout form.

215
00:14:38.370 --> 00:14:42.640
So going to run python app that pie let's make sure we didn't get any errors here.

216
00:14:43.090 --> 00:14:44.590
Looks like it's running active.

217
00:14:44.620 --> 00:14:47.620
So let's bring it up in our browser and check it out.

218
00:14:51.020 --> 00:14:56.030
So if you take a look at our page it looks kind of ugly but the actual use cases there.

219
00:14:56.150 --> 00:14:57.350
Welcome to THE NATION page.

220
00:14:57.350 --> 00:14:58.200
Would you like to donate.

221
00:14:58.220 --> 00:14:59.060
And then here we have.

222
00:14:59.060 --> 00:15:04.420
Pay with card again keep in mind if we take a look at what we did in our actual index page to metafile

223
00:15:05.330 --> 00:15:08.370
we set the class here call to straight button.

224
00:15:08.390 --> 00:15:10.670
So it's the default kind of class here.

225
00:15:10.730 --> 00:15:13.830
You can use your own CSSA kind of color that up or make that look better.

226
00:15:13.940 --> 00:15:16.960
But once you hit pay of card those what happens we get back.

227
00:15:16.970 --> 00:15:19.970
It's almost like a motel and it's saying test mode.

228
00:15:20.180 --> 00:15:22.250
That's because we're using the test API Keys.

229
00:15:22.250 --> 00:15:27.320
Let's test this out and see if it works for the e-mail you can provide any e-mail you want so it can

230
00:15:27.320 --> 00:15:28.200
be fake.

231
00:15:28.250 --> 00:15:32.850
We'll see one at one dot com for the card number in order for this to work.

232
00:15:32.930 --> 00:15:39.510
The card number you have to provide is 42 42 42 42 42 42 42 42.

233
00:15:39.680 --> 00:15:44.510
And then the date you can give any expiration as long as it's in the future.

234
00:15:44.570 --> 00:15:45.790
So I'll say 12.

235
00:15:45.830 --> 00:15:48.670
And for me in the future we'll say like 2034.

236
00:15:48.680 --> 00:15:49.750
So we'll leave that.

237
00:15:49.760 --> 00:15:51.420
You can do any See see.

238
00:15:51.530 --> 00:15:54.740
Basically the security CVC number.

239
00:15:54.850 --> 00:15:55.750
So say one two three.

240
00:15:55.790 --> 00:15:57.630
And any zip code you want as well.

241
00:15:58.040 --> 00:16:01.780
So one two three four five if you want you can see the options for remembering me.

242
00:16:01.790 --> 00:16:04.880
Basically Strype will save that user's credit card information.

243
00:16:04.930 --> 00:16:09.110
You yourself as the creator of the flask application you don't save that information.

244
00:16:09.110 --> 00:16:10.380
So that's only for stripe.

245
00:16:10.490 --> 00:16:13.940
So they can say remember me and I can ask you for a phone number e-mail and so on.

246
00:16:13.970 --> 00:16:16.410
And get more information about that over there.

247
00:16:16.410 --> 00:16:23.030
So I'm not going to click that and then will click pay 1999 and theoretically that money would now have

248
00:16:23.030 --> 00:16:28.130
been transferred from their bank account to yours and they would take it to their redirect on the thank

249
00:16:28.130 --> 00:16:29.660
you for your donation page.

250
00:16:29.660 --> 00:16:30.170
All right.

251
00:16:30.320 --> 00:16:37.310
And that's really the basics of setting up the ability to accept payments for flask with Strype.

252
00:16:37.340 --> 00:16:42.980
Keep in mind it's up to you what you want to do with that money after the person as a paid you.

253
00:16:42.990 --> 00:16:47.890
Other thing to keep in mind is you can use CSSA to kind of customize that checkup form.

254
00:16:48.020 --> 00:16:49.310
Check out the strict documentation.

255
00:16:49.310 --> 00:16:54.130
There's lots of examples there of making that pay of card button and just a general check up process

256
00:16:54.140 --> 00:17:00.160
look a lot nicer than what we just saw what we just saw was a little bit crude but it got the job done.

257
00:17:00.170 --> 00:17:08.140
If we go back to the home page here I'm going to go back to that form and show you one last thing notice

258
00:17:08.140 --> 00:17:11.400
here we set up the day key them out they name and so on.

259
00:17:11.410 --> 00:17:15.960
There's actually an other thing concept which is the data image Sarratt after data description.

260
00:17:15.970 --> 00:17:21.380
I can say data dash image and I can set this to link to an image.

261
00:17:21.400 --> 00:17:25.400
So for example in our notes we link this to a picture of a puppy.

262
00:17:25.490 --> 00:17:27.330
So I get a copy and paste that link there.

263
00:17:27.370 --> 00:17:28.880
It's just from an splash.

264
00:17:28.960 --> 00:17:34.950
So it let me copy and paste this and it's a really long file.

265
00:17:35.070 --> 00:17:41.040
So it's just a link to some image on Splash dot com which shows a little photo of a puppy.

266
00:17:41.040 --> 00:17:46.200
So that's the data image qualifier in case you want to add in your own image.

267
00:17:46.210 --> 00:17:48.910
So again data dash image.

268
00:17:48.970 --> 00:17:52.690
So let's go ahead and check out our Web site now that we've added that in.

269
00:17:52.820 --> 00:17:57.580
So I'm going to bring it in over now for a hit pay of card notice I get this little picture of this

270
00:17:57.580 --> 00:17:58.820
nice puppy.

271
00:17:58.900 --> 00:18:03.940
Again you can check out the CSSA calls you can do here on this actual form to make it look a lot nicer

272
00:18:04.390 --> 00:18:06.200
but nice is a nice picture.

273
00:18:06.400 --> 00:18:07.050
OK.

274
00:18:07.150 --> 00:18:09.850
So that's it for accepting payments with stripe.

275
00:18:09.850 --> 00:18:11.440
Again check with that documentation.

276
00:18:11.440 --> 00:18:16.290
It's really so thorough that pretty much any question you have is answered of the documentation.

277
00:18:16.330 --> 00:18:21.340
You just need to register log in and then you have all that code that you can copy and paste.

278
00:18:21.340 --> 00:18:26.140
We've shown here is just the general structure of how to except through a script action call on your

279
00:18:26.140 --> 00:18:29.250
flask app with straight hope those useful to you.

280
00:18:29.290 --> 00:18:30.200
We'll see you in the next one.
