1
00:00:00,332 --> 00:00:05,131
Declarative transaction management uses the @Transactional annotation.

2
00:00:05,131 --> 00:00:10,783
The @Transactional annotation can be used at either the class or method level.

3
00:00:10,783 --> 00:00:13,257
When placed on the class or interface level,

4
00:00:13,257 --> 00:00:17,090
all methods within it will become transactional.

5
00:00:17,090 --> 00:00:20,990
Method annotations override the class level annotation.

6
00:00:20,990 --> 00:00:22,098
Here is a tip.

7
00:00:22,098 --> 00:00:25,690
Spring recommends that you only annotate concrete classes and

8
00:00:25,690 --> 00:00:29,811
methods of concrete classes with the @Transactional annotation

9
00:00:29,811 --> 00:00:33,213
as opposed to annotating interfaces.

10
00:00:33,213 --> 00:00:36,666
There are two ways to configure transactions in Spring,

11
00:00:36,666 --> 00:00:39,315
XML based or annotation based.

12
00:00:39,315 --> 00:00:46,000
I find the annotation based easier to use, so that's what I will demonstrate during this course.

