1
00:00:00,388 --> 00:00:04,451
We will enhance the TrackZilla system to implement programmatic

2
00:00:04,451 --> 00:00:07,890
transaction management using the transaction template.

3
00:00:07,890 --> 00:00:13,702
The system will also be updated to effectively roll back transactions.

4
00:00:13,702 --> 00:00:18,333
I've opened the project in IntelliJ and navigated to the ReleaseService.

5
00:00:18,333 --> 00:00:19,368
java file.

6
00:00:19,368 --> 00:00:23,111
Let's enhance the TrackZilla application to implement programmatic

7
00:00:23,111 --> 00:00:26,975
transaction management using the TransactionTemplate.

8
00:00:26,975 --> 00:00:29,650
You will see now on the ReleaseService that the

9
00:00:29,650 --> 00:00:32,967
@Transactional annotation is no longer used.

10
00:00:32,967 --> 00:00:36,584
On line 29, I'm defining a TransactionTemplate,

11
00:00:36,584 --> 00:00:41,464
and on lines 31 through 33, the constructor for the release service,

12
00:00:41,464 --> 00:00:46,481
I'm initializing the TransactionTemplate using the transactionManager.

13
00:00:46,481 --> 00:00:52,271
Let's scroll down and look at the updated scheduleRelease method on line 46.

14
00:00:52,271 --> 00:00:53,873
Notice on line 52,

15
00:00:53,873 --> 00:00:57,328
I'm calling the execute method on the TransactionTemplate and

16
00:00:57,328 --> 00:01:00,982
I've implemented the doInTransactionWithoutResult method

17
00:01:00,982 --> 00:01:03,847
because I don't need to return a result.

18
00:01:03,847 --> 00:01:05,247
Notice on line 57,

19
00:01:05,247 --> 00:01:10,105
I'm catching the NoSuchElementException and printing the stack trace.

20
00:01:10,105 --> 00:01:12,149
So let's execute this.

21
00:01:12,149 --> 00:01:14,339
So the app is up and running.

22
00:01:14,339 --> 00:01:18,447
Let's navigate to Postman to exercise our schedule release.

23
00:01:18,447 --> 00:01:23,255
So I'm posting to the schedule API.

24
00:01:23,255 --> 00:01:25,673
Let's click Send.

25
00:01:25,673 --> 00:01:27,215
Status of 200 OK.

26
00:01:27,215 --> 00:01:29,528
Let's navigate to the H2 console.

27
00:01:29,528 --> 00:01:34,385
We see our four tickets with a status of Completed.

28
00:01:34,385 --> 00:01:37,181
We see our tickets assigned to a release.

29
00:01:37,181 --> 00:01:40,054
Let's navigate back to the application and stop it.

30
00:01:40,054 --> 00:01:43,886
So let's see what happens when we attempt to assign

31
00:01:43,886 --> 00:01:46,638
tickets to a release that doesn't exist.

32
00:01:46,638 --> 00:01:47,932
In this case,

33
00:01:47,932 --> 00:01:51,066
there should be no automatic rollback because I'm

34
00:01:51,066 --> 00:01:54,155
catching the exception here on line 57,

35
00:01:54,155 --> 00:01:57,217
but I'm not programmatically rolling back.

36
00:01:57,217 --> 00:02:00,981
The system will no longer automatically do a rollback for us because

37
00:02:00,981 --> 00:02:04,609
we are using programmatic transaction management.

38
00:02:04,609 --> 00:02:06,480
So let's test this out.

39
00:02:06,480 --> 00:02:12,112
So let's navigate to Postman.

40
00:02:12,112 --> 00:02:16,104
In this case, we are assigning tickets to a release that doesn't exist.

41
00:02:16,104 --> 00:02:16,836
Click Send.

42
00:02:16,836 --> 00:02:19,033
We see a status of OK.

43
00:02:19,033 --> 00:02:23,934
Let's navigate back to the H2 console.

44
00:02:23,934 --> 00:02:26,294
Let's see what exists in our tickets.

45
00:02:26,294 --> 00:02:28,305
So, yes, we have four tickets.

46
00:02:28,305 --> 00:02:31,397
Notice the status does not say Completed because that

47
00:02:31,397 --> 00:02:34,024
step of the process did not complete.

48
00:02:34,024 --> 00:02:37,094
Now we did not roll back in the event of an error.

49
00:02:37,094 --> 00:02:39,172
So with programmatic transaction management,

50
00:02:39,172 --> 00:02:41,953
the developer is responsible for doing that.

51
00:02:41,953 --> 00:02:45,938
So let's go back to the code and update it to roll back.

52
00:02:45,938 --> 00:02:48,850
So all we need to do here when we catch this

53
00:02:48,850 --> 00:02:55,610
exception on the transaction status, let's use the setRollbackOnly method.

54
00:02:55,610 --> 00:02:58,125
And that's all we need to do.

55
00:02:58,125 --> 00:03:01,320
So let's navigate back to Postman.

56
00:03:01,320 --> 00:03:02,756
Let's click Send.

57
00:03:02,756 --> 00:03:05,628
We see status of 200 OK.

58
00:03:05,628 --> 00:03:08,847
So now let's navigate back to the H2 console.

59
00:03:08,847 --> 00:03:13,289
Let's look in our ticket table.

60
00:03:13,289 --> 00:03:18,852
And we see no records, and that's what we expect because we initiated a rollback.

61
00:03:18,852 --> 00:03:21,616
Now let's look at setting the transaction advice.

62
00:03:21,616 --> 00:03:23,717
Navigate back to IntelliJ,

63
00:03:23,717 --> 00:03:27,581
and we're actually going to do this in the constructor here.

64
00:03:27,581 --> 00:03:32,160
So let's add a new line, line 33.

65
00:03:32,160 --> 00:03:39,003
Let's use the transactionTemplate to set the PropagationBehaviorName.

66
00:03:39,003 --> 00:03:48,754
In this case, it's going to be PROPAGATION_REQUIRES_NEW.

67
00:03:48,754 --> 00:03:55,550
And we can also use the transactionTemplate to set readOnly to true.

68
00:03:55,550 --> 00:03:58,049
This is the same example that forces a new transaction

69
00:03:58,049 --> 00:04:01,269
each time and also sets it to readOnly.

70
00:04:01,269 --> 00:04:05,497
Let's navigate to Postman and exercise our API.

71
00:04:05,497 --> 00:04:07,314
Let's click Send.

72
00:04:07,314 --> 00:04:10,948
See a status of 200 OK.

73
00:04:10,948 --> 00:04:13,107
Let's navigate to our H2 console.

74
00:04:13,107 --> 00:04:23,000
Let's see what's in our tickets table. Nothing as we expect because we set it to readOnly.

