WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.570
Hello there.

00:00:00.570 --> 00:00:03.160
And welcome back to this spring development course.

00:00:03.160 --> 00:00:10.380
So last time we were essentially just went over how we can create a wet project using

00:00:10.380 --> 00:00:12.000
spring model view controller.

00:00:12.000 --> 00:00:17.740
So today we're essentially going to be going over what exactly we did last time.

00:00:17.740 --> 00:00:22.450
So some of you may perhaps be panicking a little bit because you're thinking,

00:00:22.450 --> 00:00:23.820
What in the world was that?

00:00:23.820 --> 00:00:25.590
What is a dispatcher?

00:00:25.590 --> 00:00:26.230
Serval it.

00:00:26.230 --> 00:00:27.950
What's a controller?

00:00:27.950 --> 00:00:28.710
Um,

00:00:28.710 --> 00:00:29.600
you know,

00:00:29.600 --> 00:00:33.550
why did JSP work and html not work?

00:00:33.550 --> 00:00:34.800
It's,

00:00:34.800 --> 00:00:35.380
you know,

00:00:35.380 --> 00:00:37.030
everything's everything's gone.

00:00:37.030 --> 00:00:38.060
We might as well give up.

00:00:38.060 --> 00:00:38.950
Don't worry about it.

00:00:38.950 --> 00:00:42.380
So essentially what we did in the last lesson,

00:00:42.380 --> 00:00:47.300
we're going to spend the majority of the rest of this course explaining and sort of going

00:00:47.300 --> 00:00:48.500
over that in more detail.

00:00:48.500 --> 00:00:51.550
So they have a very clear idea of exactly what happened,

00:00:51.550 --> 00:00:52.850
what we did there.

00:00:52.850 --> 00:00:57.480
So I understand it may seem like we're spending a lot of time explaining something very

00:00:57.480 --> 00:00:58.010
little,

00:00:58.010 --> 00:01:00.920
but in a very large in very,

00:01:00.920 --> 00:01:02.850
very large way,

00:01:02.850 --> 00:01:07.990
that is pretty much a big chunk of what there is to spring.

00:01:07.990 --> 00:01:13.250
So understanding everything else with spring after that becomes much easier.

00:01:13.250 --> 00:01:14.840
All right.

00:01:14.840 --> 00:01:15.010
So now,

00:01:15.010 --> 00:01:15.720
without further ado,

00:01:15.720 --> 00:01:16.920
let's get into spring.

00:01:16.920 --> 00:01:20.320
NBC is never going to be going over exactly what M.

00:01:20.320 --> 00:01:20.670
V.

00:01:20.670 --> 00:01:21.220
C.

00:01:21.220 --> 00:01:21.790
Is.

00:01:21.790 --> 00:01:23.860
All right,

00:01:23.860 --> 00:01:28.050
so the spring M V C framework provides model view,

00:01:28.050 --> 00:01:32.900
controller architecture and ready components that can be used to develop flexible and

00:01:32.900 --> 00:01:35.190
loosely coupled Web application.

00:01:35.190 --> 00:01:41.230
The NBC pattern results in separating the different aspects of the application input,

00:01:41.230 --> 00:01:41.570
logic,

00:01:41.570 --> 00:01:45.660
business logic and urologic while providing a loose coupling between these elements.

00:01:45.660 --> 00:01:47.310
So what exactly does this meat?

00:01:47.310 --> 00:01:47.670
Well,

00:01:47.670 --> 00:01:48.320
essentially,

00:01:48.320 --> 00:01:48.910
um,

00:01:48.910 --> 00:01:49.500
M V.

00:01:49.500 --> 00:01:49.880
C.

00:01:49.880 --> 00:01:52.050
Stands for a model of you control set.

00:01:52.050 --> 00:01:57.440
So model view controller essentially just three parts of oven application.

00:01:57.440 --> 00:02:00.670
So the model it right here you can see in.

00:02:00.670 --> 00:02:00.960
Actually,

00:02:00.960 --> 00:02:01.870
it's the application data,

00:02:01.870 --> 00:02:03.830
and in general they will consist of Poggio.

00:02:03.830 --> 00:02:05.510
So essentially model can be,

00:02:05.510 --> 00:02:05.870
you know,

00:02:05.870 --> 00:02:09.470
your point class like we did previously.

00:02:09.470 --> 00:02:11.230
So a point a point class,

00:02:11.230 --> 00:02:11.840
you know,

00:02:11.840 --> 00:02:13.040
into X in tow.

00:02:13.040 --> 00:02:13.910
I get X,

00:02:13.910 --> 00:02:14.960
get why and so on.

00:02:14.960 --> 00:02:15.510
It's on.

00:02:15.510 --> 00:02:18.150
That would be an example of a model.

00:02:18.150 --> 00:02:18.530
It is,

00:02:18.530 --> 00:02:18.880
additionally,

00:02:18.880 --> 00:02:20.450
just have to be that one class.

00:02:20.450 --> 00:02:22.770
It could be a bunch of different classes that essentially do that.

00:02:22.770 --> 00:02:25.240
The model can also be,

00:02:25.240 --> 00:02:25.820
You know,

00:02:25.820 --> 00:02:27.930
um uh,

00:02:27.930 --> 00:02:28.150
you know,

00:02:28.150 --> 00:02:31.550
some database access objects as well.

00:02:31.550 --> 00:02:32.260
So yeah,

00:02:32.260 --> 00:02:32.620
you know,

00:02:32.620 --> 00:02:33.450
it's pretty spree.

00:02:33.450 --> 00:02:36.200
Flexible is just something that connects to our data.

00:02:36.200 --> 00:02:36.580
Sort of,

00:02:36.580 --> 00:02:38.120
um,

00:02:38.120 --> 00:02:38.760
actually,

00:02:38.760 --> 00:02:38.870
no,

00:02:38.870 --> 00:02:39.490
not connected.

00:02:39.490 --> 00:02:40.330
Something at stores.

00:02:40.330 --> 00:02:40.850
Our data,

00:02:40.850 --> 00:02:42.020
the view.

00:02:42.020 --> 00:02:42.300
All right.

00:02:42.300 --> 00:02:45.610
So view view is responsible for rendering the model data,

00:02:45.610 --> 00:02:46.360
and in general,

00:02:46.360 --> 00:02:49.820
it generates html output that the clients browser can interpret.

00:02:49.820 --> 00:02:51.160
So what've you means,

00:02:51.160 --> 00:02:53.480
essentially is visuals.

00:02:53.480 --> 00:02:54.900
So in our case,

00:02:54.900 --> 00:02:55.900
the view was,

00:02:55.900 --> 00:02:59.360
um jsp or no html.

00:02:59.360 --> 00:03:00.740
We used html Andrzej speeds,

00:03:00.740 --> 00:03:00.830
so,

00:03:00.830 --> 00:03:01.040
yes,

00:03:01.040 --> 00:03:01.820
pretty much same thing.

00:03:01.820 --> 00:03:05.300
Jsp isn't converted into a servant,

00:03:05.300 --> 00:03:08.290
which is then converted into h into HTML.

00:03:08.290 --> 00:03:08.700
So yeah,

00:03:08.700 --> 00:03:08.840
so,

00:03:08.840 --> 00:03:09.590
generally speaking,

00:03:09.590 --> 00:03:10.350
um,

00:03:10.350 --> 00:03:12.400
Russian was not converted into email.

00:03:12.400 --> 00:03:14.050
It returned html.

00:03:14.050 --> 00:03:15.510
A servant returns these two.

00:03:15.510 --> 00:03:16.300
So yeah,

00:03:16.300 --> 00:03:18.440
essentially the view part,

00:03:18.440 --> 00:03:20.390
and we'll go over examples of this shortly.

00:03:20.390 --> 00:03:26.350
And finally the controller is responsible for processing user requests and building an

00:03:26.350 --> 00:03:31.440
appropriate model and passes it to the view for rendering The controller is something that

00:03:31.440 --> 00:03:33.750
sort of connects,

00:03:33.750 --> 00:03:35.000
model and view.

00:03:35.000 --> 00:03:37.270
So it's it's it's there.

00:03:37.270 --> 00:03:38.760
And we refer to that controller.

00:03:38.760 --> 00:03:39.160
It says,

00:03:39.160 --> 00:03:39.570
Oh,

00:03:39.570 --> 00:03:43.370
you're referring to me and I,

00:03:43.370 --> 00:03:48.720
as a specific controller need to give you all the points in the database,

00:03:48.720 --> 00:03:49.220
for example,

00:03:49.220 --> 00:03:53.550
So he gets all the points in database and then he sends them over to of you,

00:03:53.550 --> 00:03:56.550
which then displays them essentially eventually,

00:03:56.550 --> 00:03:58.050
just an example of what control they could do.

00:03:58.050 --> 00:04:03.500
So it's going to take a look at courting examples of all of these of these three different

00:04:03.500 --> 00:04:09.330
types of Cody is all right,

00:04:09.330 --> 00:04:10.510
So motto So model,

00:04:10.510 --> 00:04:10.960
for example,

00:04:10.960 --> 00:04:16.930
we can have a Poggio so public class point private double X profitable.

00:04:16.930 --> 00:04:22.380
Why get X get why set Except why and then blueprint Boolean equals.

00:04:22.380 --> 00:04:23.340
Actually,

00:04:23.340 --> 00:04:23.940
that's just to,

00:04:23.940 --> 00:04:27.580
uh is usually when you have a Poggio Usually what do we actually get error here?

00:04:27.580 --> 00:04:29.820
Since you don't return the bullion anyway,

00:04:29.820 --> 00:04:30.360
you get the idea.

00:04:30.360 --> 00:04:33.580
So it's essentially just an example of a model class again.

00:04:33.580 --> 00:04:36.560
It could also be a database access our project as well.

00:04:36.560 --> 00:04:37.220
So you know,

00:04:37.220 --> 00:04:38.620
it doesn't necessarily have to be a pooja,

00:04:38.620 --> 00:04:40.040
but usually it actually is,

00:04:40.040 --> 00:04:41.470
and especially later on,

00:04:41.470 --> 00:04:45.360
um perhaps will touch on database access in spring.

00:04:45.360 --> 00:04:47.710
But generally speaking,

00:04:47.710 --> 00:04:52.960
my preferred way to accident a base would be to use something called spring Data.

00:04:52.960 --> 00:04:53.710
Essentially,

00:04:53.710 --> 00:04:57.020
it just it simplifies things quite a bit.

00:04:57.020 --> 00:04:57.700
So instead of doing,

00:04:57.700 --> 00:04:58.040
you know,

00:04:58.040 --> 00:05:00.810
database queries,

00:05:00.810 --> 00:05:03.380
like select all from table,

00:05:03.380 --> 00:05:08.940
we can just do insert into table and then passing an object and automatically insert it for

00:05:08.940 --> 00:05:10.680
us so it actually tax the type any?

00:05:10.680 --> 00:05:14.050
Um SQL Yeah.

00:05:14.050 --> 00:05:15.680
All right.

00:05:15.680 --> 00:05:16.100
So anyway,

00:05:16.100 --> 00:05:17.530
on and that could be a model as well.

00:05:17.530 --> 00:05:18.060
All right,

00:05:18.060 --> 00:05:18.470
so,

00:05:18.470 --> 00:05:19.030
um,

00:05:19.030 --> 00:05:19.850
view.

00:05:19.850 --> 00:05:22.230
So here is an example of our view,

00:05:22.230 --> 00:05:23.080
So here we have Ah,

00:05:23.080 --> 00:05:23.660
point class.

00:05:23.660 --> 00:05:25.960
And here we have X equals point.

00:05:25.960 --> 00:05:26.320
Why?

00:05:26.320 --> 00:05:26.660
And why?

00:05:26.660 --> 00:05:30.010
Equals Point X equals point X and y equals point.

00:05:30.010 --> 00:05:30.350
Why?

00:05:30.350 --> 00:05:32.890
Actually hear what I'm actually doing is,

00:05:32.890 --> 00:05:35.790
um uh,

00:05:35.790 --> 00:05:36.880
point X and point.

00:05:36.880 --> 00:05:42.760
Why are going to be request attributes and in Jsp and or to get request that tribute,

00:05:42.760 --> 00:05:43.920
You just do the dollar sign,

00:05:43.920 --> 00:05:45.850
and then curly brackets,

00:05:45.850 --> 00:05:49.140
You put in the name of the request attributes they want to get in,

00:05:49.140 --> 00:05:49.700
it'll return.

00:05:49.700 --> 00:05:50.270
That's in this case.

00:05:50.270 --> 00:05:52.780
It will turn X equals and in some request attributes.

00:05:52.780 --> 00:05:54.350
All right,

00:05:54.350 --> 00:05:55.100
Okay.

00:05:55.100 --> 00:05:56.700
And then finally take a look at the controller.

00:05:56.700 --> 00:05:57.820
So here's a controller.

00:05:57.820 --> 00:05:58.890
Um,

00:05:58.890 --> 00:05:59.680
we have Ah,

00:05:59.680 --> 00:06:00.910
that's controller annotation.

00:06:00.910 --> 00:06:01.310
What?

00:06:01.310 --> 00:06:06.430
Just tell That tells us that this app is this class app is a controller Marks.

00:06:06.430 --> 00:06:06.570
You know,

00:06:06.570 --> 00:06:08.720
it doesn't tell us that till spring that but yeah,

00:06:08.720 --> 00:06:11.250
you did You get the idea and then request mapping.

00:06:11.250 --> 00:06:16.200
Senator says that when we type get points or do slash get point ill send us to this

00:06:16.200 --> 00:06:16.780
controller.

00:06:16.780 --> 00:06:18.960
So then inside this controller,

00:06:18.960 --> 00:06:22.780
we have get point model and view MV All right,

00:06:22.780 --> 00:06:24.880
um So model and view,

00:06:24.880 --> 00:06:25.500
Essentially,

00:06:25.500 --> 00:06:26.090
we went over.

00:06:26.090 --> 00:06:27.030
What model is and we you know,

00:06:27.030 --> 00:06:30.400
we went over What view is we have a model and then view here.

00:06:30.400 --> 00:06:32.510
So then we have in modeling view,

00:06:32.510 --> 00:06:34.490
we have point p equals new point.

00:06:34.490 --> 00:06:38.190
We create a new point from our we have point here public last point.

00:06:38.190 --> 00:06:39.830
So we create point point,

00:06:39.830 --> 00:06:44.370
we do P dots that x 12.4 p dots that why 45.6?

00:06:44.370 --> 00:06:47.320
Then we add the object p dark,

00:06:47.320 --> 00:06:48.200
get X.

00:06:48.200 --> 00:06:48.950
You know,

00:06:48.950 --> 00:06:50.570
we get X frumpy.

00:06:50.570 --> 00:06:56.430
So this is gonna get totally for And it adds that using the name point X and then we also

00:06:56.430 --> 00:07:00.470
do the same thing for why and then we set the view name to Web in slash.

00:07:00.470 --> 00:07:00.660
Hello,

00:07:00.660 --> 00:07:01.620
world Dutch VSP.

00:07:01.620 --> 00:07:03.010
And so when we return,

00:07:03.010 --> 00:07:08.540
M V spring will automatically understand that we need to go to Web inf slash hello world

00:07:08.540 --> 00:07:10.660
our jsp and then were redirected.

00:07:10.660 --> 00:07:13.960
Redirect us to this view here.

00:07:13.960 --> 00:07:14.750
Essentially,

00:07:14.750 --> 00:07:16.520
we sort of link,

00:07:16.520 --> 00:07:17.220
uh,

00:07:17.220 --> 00:07:18.600
the model and the view.

00:07:18.600 --> 00:07:21.250
So graphics and data.

00:07:21.250 --> 00:07:23.710
So now let's take a look at how this works in the code,

00:07:23.710 --> 00:07:24.610
all right?

00:07:24.610 --> 00:07:25.480
It's a really first.

00:07:25.480 --> 00:07:25.940
So first of all,

00:07:25.940 --> 00:07:27.250
we're gonna take a look at,

00:07:27.250 --> 00:07:28.070
um,

00:07:28.070 --> 00:07:32.770
just the controller since and I actually did have some of this stuff already prepared,

00:07:32.770 --> 00:07:33.510
Um,

00:07:33.510 --> 00:07:35.860
so we're not really gonna ride out together?

00:07:35.860 --> 00:07:36.050
I mean,

00:07:36.050 --> 00:07:36.790
I have to,

00:07:36.790 --> 00:07:37.170
in any way,

00:07:37.170 --> 00:07:39.050
do them for the power point.

00:07:39.050 --> 00:07:42.830
So this by just do them ahead of time and then just copy them into PowerPoint.

00:07:42.830 --> 00:07:43.970
So that's how it works,

00:07:43.970 --> 00:07:45.290
But yeah.

00:07:45.290 --> 00:07:45.760
Anyway,

00:07:45.760 --> 00:07:48.940
so here is essentially the controller that we've created this controller.

00:07:48.940 --> 00:07:49.130
I mean,

00:07:49.130 --> 00:07:49.640
by the way,

00:07:49.640 --> 00:07:50.460
in this project,

00:07:50.460 --> 00:07:52.030
go don't pay attention to anything else.

00:07:52.030 --> 00:07:54.710
So we have this dispatcher serve it here.

00:07:54.710 --> 00:07:55.910
We have this,

00:07:55.910 --> 00:07:56.410
um,

00:07:56.410 --> 00:07:59.770
NBC servant and so on and so on don't worry about this for now.

00:07:59.770 --> 00:08:02.400
We're actually going over that later on.

00:08:02.400 --> 00:08:02.690
For now.

00:08:02.690 --> 00:08:07.170
Just this is just the same exact thing as are standing like an application that we've

00:08:07.170 --> 00:08:09.630
created last time with minor,

00:08:09.630 --> 00:08:12.020
some minor key differences that we're gonna be going over here.

00:08:12.020 --> 00:08:12.860
So anyway,

00:08:12.860 --> 00:08:13.320
um,

00:08:13.320 --> 00:08:14.950
in this case,

00:08:14.950 --> 00:08:17.240
we have their quest mapping to get points.

00:08:17.240 --> 00:08:17.550
Essentially,

00:08:17.550 --> 00:08:18.850
when we type in slash get point,

00:08:18.850 --> 00:08:22.240
it'll go to this controller right Then we also have a point.

00:08:22.240 --> 00:08:23.860
P equals new point.

00:08:23.860 --> 00:08:25.300
So we create a new point.

00:08:25.300 --> 00:08:28.030
Then we do Pete outset X 12.4 p r set wide.

00:08:28.030 --> 00:08:29.180
45.6.

00:08:29.180 --> 00:08:33.370
Then we add the object point X with the name point X.

00:08:33.370 --> 00:08:38.120
And the object is after we're adding is Peter get X and then do the same thing for point.

00:08:38.120 --> 00:08:38.350
Why?

00:08:38.350 --> 00:08:39.950
And then redirect to hello world.

00:08:39.950 --> 00:08:40.580
Let us peace.

00:08:40.580 --> 00:08:45.200
We put that into the model and then in Hello,

00:08:45.200 --> 00:08:47.150
World Guard jsp if you go to it.

00:08:47.150 --> 00:08:50.250
Okay,

00:08:50.250 --> 00:08:54.750
so here we have just an h one with X is equal to point tax.

00:08:54.750 --> 00:08:56.760
And then why is equal to point?

00:08:56.760 --> 00:08:57.040
Why?

00:08:57.040 --> 00:09:02.920
So it will get it from the request and we sent the request Variables here.

00:09:02.920 --> 00:09:03.560
Right here.

00:09:03.560 --> 00:09:04.450
So going,

00:09:04.450 --> 00:09:04.960
Dexter Point.

00:09:04.960 --> 00:09:05.240
Why?

00:09:05.240 --> 00:09:05.740
Okay,

00:09:05.740 --> 00:09:06.650
so pretty simple.

00:09:06.650 --> 00:09:07.890
All right,

00:09:07.890 --> 00:09:10.320
so now we also have our last part.

00:09:10.320 --> 00:09:10.950
The model.

00:09:10.950 --> 00:09:12.050
So here's a point.

00:09:12.050 --> 00:09:13.660
Public class point,

00:09:13.660 --> 00:09:14.650
double X double.

00:09:14.650 --> 00:09:14.950
Why?

00:09:14.950 --> 00:09:15.760
Pretty simple.

00:09:15.760 --> 00:09:17.210
The bullion equals Here's commented out.

00:09:17.210 --> 00:09:17.560
Its infinite,

00:09:17.560 --> 00:09:18.820
Really need it for this point,

00:09:18.820 --> 00:09:20.430
but for this application.

00:09:20.430 --> 00:09:20.670
But,

00:09:20.670 --> 00:09:20.830
you know,

00:09:20.830 --> 00:09:21.360
speaking you what?

00:09:21.360 --> 00:09:23.340
Having equals as well in a poacher.

00:09:23.340 --> 00:09:24.400
All right,

00:09:24.400 --> 00:09:25.720
so let's run this and see what we get.

00:09:25.720 --> 00:09:26.270
Um,

00:09:26.270 --> 00:09:27.050
yeah.

00:09:27.050 --> 00:09:29.500
Uh,

00:09:29.500 --> 00:09:30.320
save the changes.

00:09:30.320 --> 00:09:30.850
Obviously.

00:09:30.850 --> 00:09:33.410
Wait.

00:09:33.410 --> 00:09:36.050
Like a couple a couple seconds.

00:09:36.050 --> 00:09:38.990
There we go.

00:09:38.990 --> 00:09:39.650
It's starting up.

00:09:39.650 --> 00:09:41.920
All right,

00:09:41.920 --> 00:09:42.350
here we go.

00:09:42.350 --> 00:09:46.300
Tom Kitt usually takes quite a quite a quite a long while to start up.

00:09:46.300 --> 00:09:48.150
Okay.

00:09:48.150 --> 00:09:48.700
And there we go.

00:09:48.700 --> 00:09:49.300
All right.

00:09:49.300 --> 00:09:51.050
So let's go to chrome and see what we get.

00:09:51.050 --> 00:09:52.100
All right,

00:09:52.100 --> 00:09:52.930
So now that we're in chrome,

00:09:52.930 --> 00:09:54.880
let's go ahead and go to local host,

00:09:54.880 --> 00:09:56.250
uh,

00:09:56.250 --> 00:09:57.850
local host,

00:09:57.850 --> 00:10:04.640
Local host host 80 80 slash weap artifact slash.

00:10:04.640 --> 00:10:05.580
Um,

00:10:05.580 --> 00:10:05.890
OK,

00:10:05.890 --> 00:10:09.730
so I think it's actually check really quickly in eclipse.

00:10:09.730 --> 00:10:09.980
Yeah,

00:10:09.980 --> 00:10:12.910
we have get point.

00:10:12.910 --> 00:10:13.100
Yeah,

00:10:13.100 --> 00:10:17.250
so not not that so yet.

00:10:17.250 --> 00:10:18.050
Point.

00:10:18.050 --> 00:10:20.310
All right.

00:10:20.310 --> 00:10:20.890
And there we go.

00:10:20.890 --> 00:10:27.510
so you can see now we have X is equal to 12.4 and why is equal to 45.6?

00:10:27.510 --> 00:10:29.120
So what has happened?

00:10:29.120 --> 00:10:29.570
Well,

00:10:29.570 --> 00:10:31.510
in eclipse,

00:10:31.510 --> 00:10:37.940
you can see how we get set p dot said X to 12.4 and then peanuts at why to 45.6.

00:10:37.940 --> 00:10:39.800
Then we add the object.

00:10:39.800 --> 00:10:49.080
We've add the object point x two at an object with the name point X to the request or the

00:10:49.080 --> 00:10:50.600
model of,

00:10:50.600 --> 00:10:51.350
um,

00:10:51.350 --> 00:10:57.580
our model in view here that will be passed on to this here view.

00:10:57.580 --> 00:11:00.340
And then this you will display point X and point.

00:11:00.340 --> 00:11:00.640
Why?

00:11:00.640 --> 00:11:01.210
Accordingly.

00:11:01.210 --> 00:11:01.850
OK,

00:11:01.850 --> 00:11:02.680
so right,

00:11:02.680 --> 00:11:03.520
That's pretty simple.

00:11:03.520 --> 00:11:04.090
Essentially,

00:11:04.090 --> 00:11:05.330
how that works,

00:11:05.330 --> 00:11:07.030
how m v c works in general.

00:11:07.030 --> 00:11:10.960
And NBC is actually a core idea of this spring ecosystem.

00:11:10.960 --> 00:11:12.690
So even later on,

00:11:12.690 --> 00:11:15.250
if you are going to be coming over to spring boot,

00:11:15.250 --> 00:11:16.060
um,

00:11:16.060 --> 00:11:17.640
NBC will still play a big role.

00:11:17.640 --> 00:11:18.850
And you're still gonna use em.

00:11:18.850 --> 00:11:24.650
The CME sort of the NBC pattern for your applications for the most part.

00:11:24.650 --> 00:11:26.320
Okay,

00:11:26.320 --> 00:11:27.660
so that's pretty simple.

00:11:27.660 --> 00:11:28.050
Now,

00:11:28.050 --> 00:11:28.860
of course,

00:11:28.860 --> 00:11:29.690
we have a problem.

00:11:29.690 --> 00:11:33.050
How exactly does our application no,

00:11:33.050 --> 00:11:34.820
Till goto a specific part.

00:11:34.820 --> 00:11:39.700
So how does it know that we want to go to this method and not,

00:11:39.700 --> 00:11:39.870
you know,

00:11:39.870 --> 00:11:40.690
somewhere else.

00:11:40.690 --> 00:11:42.680
So Well,

00:11:42.680 --> 00:11:45.380
it's long story,

00:11:45.380 --> 00:11:46.070
short it,

00:11:46.070 --> 00:11:48.350
using the dispatcher surface,

00:11:48.350 --> 00:11:50.830
which we're going to be going over in the next episode.

00:11:50.830 --> 00:11:54.360
So your homework is to clearly understand what M.

00:11:54.360 --> 00:11:54.530
V.

00:11:54.530 --> 00:11:57.840
C is and what Brian NBC Just model your controller.

00:11:57.840 --> 00:12:02.690
But your job is to understand what model is what view is and what controller is and to

00:12:02.690 --> 00:12:05.650
understand what relation they have to each other.

00:12:05.650 --> 00:12:08.330
So no coding homework here,

00:12:08.330 --> 00:12:10.310
since we've are essentially already created an M v.

00:12:10.310 --> 00:12:11.750
C in the last lesson.

00:12:11.750 --> 00:12:13.420
But that said,

00:12:13.420 --> 00:12:15.950
I have a soul understanding of it so that we can move on.

00:12:15.950 --> 00:12:17.070
So anyway,

00:12:17.070 --> 00:12:17.570
um,

00:12:17.570 --> 00:12:18.430
make sure you do that,

00:12:18.430 --> 00:12:20.070
and without further ado,

00:12:20.070 --> 00:12:20.970
I'll see you next time.

00:12:20.970 --> 00:12:21.360
You'll soon.

00:12:21.360 --> 00:12:22.420
Hello there.

00:12:22.420 --> 00:12:24.310
And welcome back to this spring development,

00:12:24.310 --> 00:12:24.850
of course.

00:12:24.850 --> 00:12:27.980
So last time we went over NBC,

00:12:27.980 --> 00:12:31.040
and this time we're gonna be going over the dispatcher surface.

00:12:31.040 --> 00:12:38.370
So the dispatcher serverless essentially sort of what begins our web application sort of Or

00:12:38.370 --> 00:12:38.700
actually,

00:12:38.700 --> 00:12:41.120
what organizes a spring where application,

00:12:41.120 --> 00:12:41.570
Sort of.

00:12:41.570 --> 00:12:43.030
If if that makes sense.

00:12:43.030 --> 00:12:43.600
So,

00:12:43.600 --> 00:12:43.790
yeah,

00:12:43.790 --> 00:12:45.870
they're gonna be a little bit of reading in this one,

00:12:45.870 --> 00:12:46.360
since,

00:12:46.360 --> 00:12:46.960
I mean,

00:12:46.960 --> 00:12:48.860
they're just not a lot of code behind it.

00:12:48.860 --> 00:12:49.480
It's just like,

00:12:49.480 --> 00:12:50.250
I don't know,

00:12:50.250 --> 00:12:54.480
maybe four lines of XML code to configure the dispatcher,

00:12:54.480 --> 00:12:56.400
serve it for most things.

00:12:56.400 --> 00:12:59.140
But it is actually a very important part,

00:12:59.140 --> 00:13:04.700
and it's important to understand its role and its function in spring development,

00:13:04.700 --> 00:13:05.770
So it's going to jump right in.

00:13:05.770 --> 00:13:06.250
So,

00:13:06.250 --> 00:13:07.200
first of all,

00:13:07.200 --> 00:13:07.750
the dispatcher,

00:13:07.750 --> 00:13:08.650
several ovaries.

00:13:08.650 --> 00:13:15.750
But it's spring Web model view controller framework is designed around a dispatcher servant

00:13:15.750 --> 00:13:22.810
The handles all the http requests and responses the requests processing workflow of the

00:13:22.810 --> 00:13:23.720
spring Web,

00:13:23.720 --> 00:13:25.320
M V C Dispatcher serve.

00:13:25.320 --> 00:13:28.360
It is illustrated in the following diagram.

00:13:28.360 --> 00:13:31.770
So here we have an ace to be request.

00:13:31.770 --> 00:13:32.040
Right.

00:13:32.040 --> 00:13:36.420
So it goes into the dispatcher servant and in spite of drivel is not just a serval it which

00:13:36.420 --> 00:13:44.030
decides which controllers or or rather which Yeah,

00:13:44.030 --> 00:13:44.320
I guess.

00:13:44.320 --> 00:13:48.250
Which controllers to give to the person to output.

00:13:48.250 --> 00:13:50.240
So we get a request.

00:13:50.240 --> 00:13:50.690
First of all,

00:13:50.690 --> 00:13:51.830
the first thing it does is it.

00:13:51.830 --> 00:13:54.550
It performs the handler mapping So it takes a look.

00:13:54.550 --> 00:13:56.230
Is there.

00:13:56.230 --> 00:13:56.850
A,

00:13:56.850 --> 00:13:59.080
um Is there,

00:13:59.080 --> 00:14:01.150
uh,

00:14:01.150 --> 00:14:09.640
is there a method with a request mapping annotation that matches the mural extension that

00:14:09.640 --> 00:14:10.060
we put in?

00:14:10.060 --> 00:14:13.560
So when the previous lesson we did a slash gets point.

00:14:13.560 --> 00:14:20.380
So we did our web application slash get point in the u r l um And so the dispatcher Servet

00:14:20.380 --> 00:14:24.820
saw that there was a that there was a actually,

00:14:24.820 --> 00:14:27.920
I actually go ahead and go right to the code.

00:14:27.920 --> 00:14:28.230
Here.

00:14:28.230 --> 00:14:28.680
There we go.

00:14:28.680 --> 00:14:29.070
All right.

00:14:29.070 --> 00:14:29.850
So,

00:14:29.850 --> 00:14:30.440
um,

00:14:30.440 --> 00:14:31.690
I would dispatch your servant.

00:14:31.690 --> 00:14:36.400
It went ahead and saw that we had a request mapping here.

00:14:36.400 --> 00:14:37.090
Forget point.

00:14:37.090 --> 00:14:38.860
So we had the Auriol get point.

00:14:38.860 --> 00:14:41.430
It matches this request mapping here.

00:14:41.430 --> 00:14:42.210
Forget point.

00:14:42.210 --> 00:14:43.570
And so in results,

00:14:43.570 --> 00:14:45.410
if it's thinks well,

00:14:45.410 --> 00:14:48.770
that's probably what they are referring to.

00:14:48.770 --> 00:14:49.270
We're actually no,

00:14:49.270 --> 00:14:50.950
that's definitely what the referring to see Egypt,

00:14:50.950 --> 00:14:52.210
since it matches exactly.

00:14:52.210 --> 00:14:52.800
Has to match.

00:14:52.800 --> 00:14:53.250
Exactly.

00:14:53.250 --> 00:14:59.420
So once it does that since it does that it goes ahead and returns this method here,

00:14:59.420 --> 00:15:01.350
which is where the next part comes in.

00:15:01.350 --> 00:15:02.720
All right,

00:15:02.720 --> 00:15:04.770
so next comes the controller.

00:15:04.770 --> 00:15:07.740
So the controller is essentially just the,

00:15:07.740 --> 00:15:08.350
um,

00:15:08.350 --> 00:15:10.090
controller that we looked at.

00:15:10.090 --> 00:15:11.200
So it's the method itself.

00:15:11.200 --> 00:15:12.430
So it's gonna take a look at that.

00:15:12.430 --> 00:15:13.240
There we go.

00:15:13.240 --> 00:15:13.640
All right.

00:15:13.640 --> 00:15:14.520
And so here.

00:15:14.520 --> 00:15:14.730
Yeah.

00:15:14.730 --> 00:15:15.510
So here's the controller.

00:15:15.510 --> 00:15:17.560
So it goes in and just find this request mapping.

00:15:17.560 --> 00:15:18.240
Um,

00:15:18.240 --> 00:15:18.770
and then it goes,

00:15:18.770 --> 00:15:19.300
is controller.

00:15:19.300 --> 00:15:19.530
So?

00:15:19.530 --> 00:15:19.690
Well,

00:15:19.690 --> 00:15:20.800
that's probably what it wants to call.

00:15:20.800 --> 00:15:22.020
So it calls that controller.

00:15:22.020 --> 00:15:24.950
It sees that we output a model and view.

00:15:24.950 --> 00:15:26.910
So we return a model in view.

00:15:26.910 --> 00:15:29.490
And it also seems that week in put a model in view.

00:15:29.490 --> 00:15:34.480
So all it does is it just do new model in view in here and just give us just a random

00:15:34.480 --> 00:15:35.730
island Food isn't good.

00:15:35.730 --> 00:15:37.100
That's happened exactly like that,

00:15:37.100 --> 00:15:37.910
but something similar.

00:15:37.910 --> 00:15:38.890
Okay,

00:15:38.890 --> 00:15:39.570
so after that,

00:15:39.570 --> 00:15:40.680
we got that model in view.

00:15:40.680 --> 00:15:41.250
Um,

00:15:41.250 --> 00:15:44.520
And then we do execute the code that's here,

00:15:44.520 --> 00:15:47.400
and we return this Marlon view with the set view name.

00:15:47.400 --> 00:15:49.300
And then after that,

00:15:49.300 --> 00:15:53.430
it goes to the view resolve.

00:15:53.430 --> 00:15:53.660
Er,

00:15:53.660 --> 00:15:54.600
um,

00:15:54.600 --> 00:15:55.390
now,

00:15:55.390 --> 00:15:58.340
we haven't actually gone over the viewers over in the coat,

00:15:58.340 --> 00:16:00.970
so it's gonna actually configure off your is all over now.

00:16:00.970 --> 00:16:02.230
All right?

00:16:02.230 --> 00:16:05.100
So creating of rivers over is actually pretty simple.

00:16:05.100 --> 00:16:07.850
So I'll have to do is go to this spring M v c servant.

00:16:07.850 --> 00:16:08.250
Okay.

00:16:08.250 --> 00:16:13.160
And now we're gonna do is we're gonna A spree actually has its own built in sort of you

00:16:13.160 --> 00:16:17.270
resolve er that we use as default because we could easily override that in this spring.

00:16:17.270 --> 00:16:20.550
NBC servant serve lit XML file.

00:16:20.550 --> 00:16:21.430
Okay.

00:16:21.430 --> 00:16:24.970
And that's essentially just the configuration for spring NBC.

00:16:24.970 --> 00:16:26.220
So we can go,

00:16:26.220 --> 00:16:26.710
Actually,

00:16:26.710 --> 00:16:27.670
by the way,

00:16:27.670 --> 00:16:28.120
quick,

00:16:28.120 --> 00:16:29.500
quick sort of difference.

00:16:29.500 --> 00:16:33.140
Here web dot xml is the configuration for Tom Cat.

00:16:33.140 --> 00:16:36.600
So here all we're saying is that we are passing whatever.

00:16:36.600 --> 00:16:41.300
Whatever requests go into tomcat were passing them on to this destruction,

00:16:41.300 --> 00:16:41.730
this patter,

00:16:41.730 --> 00:16:43.110
service or spring Essentially.

00:16:43.110 --> 00:16:44.970
So we're just They're going to spring.

00:16:44.970 --> 00:16:45.650
We don't need them.

00:16:45.650 --> 00:16:47.010
Spring will handle it.

00:16:47.010 --> 00:16:50.050
And then this right here is the configuration for springs.

00:16:50.050 --> 00:16:51.300
That's two separate things.

00:16:51.300 --> 00:16:51.570
Sort of.

00:16:51.570 --> 00:16:52.850
Okay.

00:16:52.850 --> 00:16:53.830
All right.

00:16:53.830 --> 00:16:56.040
How do we create a dispatcher service?

00:16:56.040 --> 00:16:59.060
So we're gonna be creating an internal recess resource to dispatch.

00:16:59.060 --> 00:16:59.730
I'm sorry.

00:16:59.730 --> 00:17:00.060
No,

00:17:00.060 --> 00:17:00.740
what am I saying?

00:17:00.740 --> 00:17:03.150
Internal resources view result.

00:17:03.150 --> 00:17:03.500
There we go.

00:17:03.500 --> 00:17:05.390
We're gonna between of you resolve for not a dispatcher.

00:17:05.390 --> 00:17:06.650
So we're going to create your resolve.

00:17:06.650 --> 00:17:06.870
Er,

00:17:06.870 --> 00:17:08.550
so to do that,

00:17:08.550 --> 00:17:17.910
we do being class equals or dot bring framework.

00:17:17.910 --> 00:17:19.450
And I'm a try just from memory.

00:17:19.450 --> 00:17:21.080
Um,

00:17:21.080 --> 00:17:22.750
I've been using spring boots for so long,

00:17:22.750 --> 00:17:23.600
so bear with me here,

00:17:23.600 --> 00:17:23.820
however,

00:17:23.820 --> 00:17:24.330
get something.

00:17:24.330 --> 00:17:25.550
I'll have to probably look it up.

00:17:25.550 --> 00:17:35.210
Um dot web dot Earl Bleidt you and internal resource resolve.

00:17:35.210 --> 00:17:35.450
Er,

00:17:35.450 --> 00:17:38.450
I hope I got that right.

00:17:38.450 --> 00:17:40.560
Okay.

00:17:40.560 --> 00:17:41.000
All right.

00:17:41.000 --> 00:17:50.470
And so now will do Property name equals prefix.

00:17:50.470 --> 00:17:54.440
Whoops.

00:17:54.440 --> 00:17:55.350
It's gonna property.

00:17:55.350 --> 00:17:58.020
Okay.

00:17:58.020 --> 00:18:06.850
And then value slash Web.

00:18:06.850 --> 00:18:09.760
Now it's gonna capital letters.

00:18:09.760 --> 00:18:11.940
There we go.

00:18:11.940 --> 00:18:12.730
All right,

00:18:12.730 --> 00:18:13.140
Um,

00:18:13.140 --> 00:18:14.020
it's format the code,

00:18:14.020 --> 00:18:16.710
and then we'll do the same exact thing for suffix.

00:18:16.710 --> 00:18:20.040
There we go.

00:18:20.040 --> 00:18:20.450
Except here,

00:18:20.450 --> 00:18:21.320
we're gonna have,

00:18:21.320 --> 00:18:25.790
um dot j b and also here,

00:18:25.790 --> 00:18:26.780
we're gonna have a dash.

00:18:26.780 --> 00:18:27.380
Okay,

00:18:27.380 --> 00:18:27.660
as you can,

00:18:27.660 --> 00:18:28.850
sort of see what we're doing here.

00:18:28.850 --> 00:18:33.320
So we're signing the prefix to our all our views.

00:18:33.320 --> 00:18:35.230
You the prefix web,

00:18:35.230 --> 00:18:37.150
inf and r Suffolk's dot jsp.

00:18:37.150 --> 00:18:39.140
So now if you go to our app,

00:18:39.140 --> 00:18:39.810
you see,

00:18:39.810 --> 00:18:42.050
here are we have web INF and dodgy SP.

00:18:42.050 --> 00:18:48.290
So now we can go to delete this so it will work just without that So will automatically add

00:18:48.290 --> 00:18:51.560
the Suffolk's and prefix to our,

00:18:51.560 --> 00:18:52.180
um,

00:18:52.180 --> 00:18:55.540
model to our view to whatever view we refer to here.

00:18:55.540 --> 00:18:57.050
We actually got a air for some reason,

00:18:57.050 --> 00:18:58.100
um,

00:18:58.100 --> 00:19:01.550
actually said was over her classic found exception.

00:19:01.550 --> 00:19:10.230
Um oh,

00:19:10.230 --> 00:19:11.790
I think I see the problem.

00:19:11.790 --> 00:19:12.680
So still speak you.

00:19:12.680 --> 00:19:13.160
Here we go.

00:19:13.160 --> 00:19:18.660
So now we don't relentless Reload the server that we should We should be good to go.

00:19:18.660 --> 00:19:24.820
Doing these for memories is it is not is not easy,

00:19:24.820 --> 00:19:25.020
You know,

00:19:25.020 --> 00:19:28.090
I have to remember or of spring framework Web service view.

00:19:28.090 --> 00:19:29.350
Internal research here is over.

00:19:29.350 --> 00:19:30.670
You know it's difficult.

00:19:30.670 --> 00:19:30.990
Okay.

00:19:30.990 --> 00:19:31.680
All right.

00:19:31.680 --> 00:19:36.920
So now in our app dot Java you see that we just have hello world and our dispatcher service

00:19:36.920 --> 00:19:44.950
will automatically add in the slash web in prefix four hour one second.

00:19:44.950 --> 00:19:47.450
Just show exactly what this what I'm saying Here.

00:19:47.450 --> 00:19:49.410
Ah,

00:19:49.410 --> 00:19:52.160
deployed resources weapons See our view.

00:19:52.160 --> 00:19:52.460
Hello,

00:19:52.460 --> 00:19:55.870
Ola GSB is located inside slash web and if so,

00:19:55.870 --> 00:19:57.870
it will automatically add that prefix.

00:19:57.870 --> 00:20:03.160
And then it will also add the dot Jsp Suffolk's Our internal research here is over.

00:20:03.160 --> 00:20:05.470
And so here we could just type hello world.

00:20:05.470 --> 00:20:06.850
So it's gonna test this out in chrome.

00:20:06.850 --> 00:20:07.390
Alright.

00:20:07.390 --> 00:20:09.520
Siri are now Let's go to a local host 80.

00:20:09.520 --> 00:20:14.000
80 $8.

00:20:14.000 --> 00:20:15.830
Important slash.

00:20:15.830 --> 00:20:16.340
Reward effect,

00:20:16.340 --> 00:20:16.660
Social.

00:20:16.660 --> 00:20:17.000
There we go.

00:20:17.000 --> 00:20:17.300
All right,

00:20:17.300 --> 00:20:17.500
so now,

00:20:17.500 --> 00:20:18.260
if you go to it,

00:20:18.260 --> 00:20:21.130
what's not?

00:20:21.130 --> 00:20:21.470
Hello?

00:20:21.470 --> 00:20:22.080
What am I doing?

00:20:22.080 --> 00:20:23.290
Get point.

00:20:23.290 --> 00:20:26.400
All right,

00:20:26.400 --> 00:20:26.790
there we go.

00:20:26.790 --> 00:20:27.240
All right.

00:20:27.240 --> 00:20:27.670
So,

00:20:27.670 --> 00:20:28.120
um,

00:20:28.120 --> 00:20:30.000
I actually met in air,

00:20:30.000 --> 00:20:31.540
but this is a good error,

00:20:31.540 --> 00:20:33.060
so we can actually see what's happening.

00:20:33.060 --> 00:20:33.800
So you'll see here,

00:20:33.800 --> 00:20:35.460
we do slash Rep artifact.

00:20:35.460 --> 00:20:38.300
And then it looks for the view slash web inf.

00:20:38.300 --> 00:20:38.790
Hello,

00:20:38.790 --> 00:20:39.660
world that gsp.

00:20:39.660 --> 00:20:40.850
So they're here actually was,

00:20:40.850 --> 00:20:43.420
since I have to put a slash here after weapons,

00:20:43.420 --> 00:20:45.200
since it doesn't put a slash on the matter.

00:20:45.200 --> 00:20:45.900
So let me go.

00:20:45.900 --> 00:20:48.350
And actually just fix this in the code real quickly.

00:20:48.350 --> 00:20:51.280
So inside our hello war,

00:20:51.280 --> 00:20:52.590
no spring was he served,

00:20:52.590 --> 00:20:54.840
it was gonna do Web in slash.

00:20:54.840 --> 00:20:55.280
There we go.

00:20:55.280 --> 00:20:56.080
All right.

00:20:56.080 --> 00:20:57.260
And now it should,

00:20:57.260 --> 00:20:57.990
in theory,

00:20:57.990 --> 00:21:00.930
restart to serve with serverless and actually gives us no warning here.

00:21:00.930 --> 00:21:04.900
So no mapping found for http request with your eye slash lip artifact slash.

00:21:04.900 --> 00:21:05.390
Hello.

00:21:05.390 --> 00:21:05.910
I mean,

00:21:05.910 --> 00:21:07.780
I guess that's in despite to serve it.

00:21:07.780 --> 00:21:09.740
So that's our dispatcher service.

00:21:09.740 --> 00:21:15.950
Looking for the name looking for the hello controller and so since it can't find it and

00:21:15.950 --> 00:21:16.250
result,

00:21:16.250 --> 00:21:17.970
it gives us that I can't find the controller,

00:21:17.970 --> 00:21:19.100
OK?

00:21:19.100 --> 00:21:20.370
It doesn't appear to be restarting.

00:21:20.370 --> 00:21:21.590
Something started manually.

00:21:21.590 --> 00:21:24.240
Uh,

00:21:24.240 --> 00:21:24.980
spring and B C.

00:21:24.980 --> 00:21:25.190
It's,

00:21:25.190 --> 00:21:26.750
uh it's a difficult thing.

00:21:26.750 --> 00:21:29.370
Spring boot saw with so many problems.

00:21:29.370 --> 00:21:31.210
Okay,

00:21:31.210 --> 00:21:31.490
All right,

00:21:31.490 --> 00:21:31.770
there we go.

00:21:31.770 --> 00:21:32.050
All right,

00:21:32.050 --> 00:21:32.460
so now it's going.

00:21:32.460 --> 00:21:32.820
Actually,

00:21:32.820 --> 00:21:34.390
refresh this in theory,

00:21:34.390 --> 00:21:35.790
and there we go.

00:21:35.790 --> 00:21:42.720
So you'll see now that our view resolve er automatically adds the correct prefix and suffix

00:21:42.720 --> 00:21:44.220
to our your row.

00:21:44.220 --> 00:21:49.550
And so we just have to specify the name and not the folder or the,

00:21:49.550 --> 00:21:53.160
um or the file type.

00:21:53.160 --> 00:21:53.680
Now,

00:21:53.680 --> 00:21:53.950
of course,

00:21:53.950 --> 00:21:54.500
this thing,

00:21:54.500 --> 00:21:55.580
this present problem.

00:21:55.580 --> 00:21:57.410
What if we have our view somewhere else,

00:21:57.410 --> 00:21:59.260
or what if we have our views?

00:21:59.260 --> 00:22:00.160
I don't know.

00:22:00.160 --> 00:22:00.610
Maybe,

00:22:00.610 --> 00:22:01.330
uh,

00:22:01.330 --> 00:22:05.420
I some as jsp files and some of HTML files.

00:22:05.420 --> 00:22:07.360
That presents a problem,

00:22:07.360 --> 00:22:07.640
Right?

00:22:07.640 --> 00:22:11.650
But usually in spring,

00:22:11.650 --> 00:22:15.360
you would have all your files in one folder all year,

00:22:15.360 --> 00:22:17.360
sort of them views.

00:22:17.360 --> 00:22:18.080
In one folder,

00:22:18.080 --> 00:22:19.990
you would have your CSS and,

00:22:19.990 --> 00:22:20.780
uh,

00:22:20.780 --> 00:22:23.820
CSS and JavaScript files in another folder,

00:22:23.820 --> 00:22:27.060
and they would just be referenced from the files individually.

00:22:27.060 --> 00:22:29.970
And those files were just being one folder and use one file type.

00:22:29.970 --> 00:22:32.220
So html or or a JCB or whatever.

00:22:32.220 --> 00:22:33.250
Okay,

00:22:33.250 --> 00:22:34.570
that said,

00:22:34.570 --> 00:22:36.580
there is There are a couple of ways to get around this,

00:22:36.580 --> 00:22:37.700
but generally speaking,

00:22:37.700 --> 00:22:38.640
it is useful.

00:22:38.640 --> 00:22:42.150
Just toe have this prefix and suffix is because that shortens a lot of code,

00:22:42.150 --> 00:22:42.990
okay?

00:22:42.990 --> 00:22:44.450
And then they shouldn't make sense.

00:22:44.450 --> 00:22:45.240
All right,

00:22:45.240 --> 00:22:47.720
that essentially what the view resolve it does.

00:22:47.720 --> 00:22:54.260
So the review resolver goes ahead and tries to find the view and then adds in the by adding

00:22:54.260 --> 00:22:56.940
in the correct prefixes and suffixes and what we special.

00:22:56.940 --> 00:22:58.260
All right.

00:22:58.260 --> 00:22:58.690
Okay.

00:22:58.690 --> 00:23:03.350
And so now let's go ahead and take a look at the final sort of event of,

00:23:03.350 --> 00:23:05.850
uh,

00:23:05.850 --> 00:23:07.350
sort of the dispatcher servant.

00:23:07.350 --> 00:23:08.590
All right,

00:23:08.590 --> 00:23:09.480
so here we are on.

00:23:09.480 --> 00:23:10.970
And finally we have this four views.

00:23:10.970 --> 00:23:15.930
This was just the dispatcher service Finally returning the jsp file or html file or

00:23:15.930 --> 00:23:16.340
whatever,

00:23:16.340 --> 00:23:20.640
and sending it sort of off to you so that your browser can display it.

00:23:20.640 --> 00:23:21.070
Okay,

00:23:21.070 --> 00:23:21.760
So pretty simple.

00:23:21.760 --> 00:23:22.950
All right,

00:23:22.950 --> 00:23:27.200
so all this is has we have more detail here is going to skim through this really quickly.

00:23:27.200 --> 00:23:31.140
So here the sequence of events corresponding to an incoming http Request to dispatchers.

00:23:31.140 --> 00:23:33.260
After receiving an http.

00:23:33.260 --> 00:23:39.140
Request Dispatcher service consults the handler mapping to call the appropriate controller

00:23:39.140 --> 00:23:39.140
.

00:23:39.140 --> 00:23:39.890
All right.

00:23:39.890 --> 00:23:40.600
Makes sense.

00:23:40.600 --> 00:23:42.440
The controllers,

00:23:42.440 --> 00:23:43.250
this is Step two.

00:23:43.250 --> 00:23:50.680
Controller takes the request and calls the appropriate service methods based on used get or

00:23:50.680 --> 00:23:51.590
post method.

00:23:51.590 --> 00:23:54.890
So I didn't really go over this because Joe speaking,

00:23:54.890 --> 00:23:56.050
we just used request mapping,

00:23:56.050 --> 00:23:58.060
which means we just mapped all methods.

00:23:58.060 --> 00:23:59.960
All requests methods to it,

00:23:59.960 --> 00:24:00.580
but yes.

00:24:00.580 --> 00:24:00.850
Oh,

00:24:00.850 --> 00:24:04.070
you could have different sort of,

00:24:04.070 --> 00:24:04.660
um,

00:24:04.660 --> 00:24:12.550
different controllers with same exact sort of mapping.

00:24:12.550 --> 00:24:13.330
Yeah.

00:24:13.330 --> 00:24:15.190
Different controllers with the same exact mapping.

00:24:15.190 --> 00:24:19.360
You could have to get points as long as they have different request type.

00:24:19.360 --> 00:24:22.080
So we could have get get one with get and one with Post,

00:24:22.080 --> 00:24:22.610
for example.

00:24:22.610 --> 00:24:23.530
Okay.

00:24:23.530 --> 00:24:29.110
The service met The service method will set model data based on defined business logic and

00:24:29.110 --> 00:24:32.100
returns view name to dispatch of service.

00:24:32.100 --> 00:24:36.330
And then this returns the view name to the dispatcher service,

00:24:36.330 --> 00:24:38.350
which then at the controller,

00:24:38.350 --> 00:24:39.490
which we will return your name.

00:24:39.490 --> 00:24:40.260
Or in our case,

00:24:40.260 --> 00:24:42.410
it actually returned a model and view.

00:24:42.410 --> 00:24:43.910
So there's just Pakistan,

00:24:43.910 --> 00:24:48.190
but we'll just dissect the modeling to put everything into its are appropriate place.

00:24:48.190 --> 00:24:48.850
Okay,

00:24:48.850 --> 00:24:53.700
so then the dispatcher servant will take help from view resolve er to pick up the defined

00:24:53.700 --> 00:24:54.590
view for the request.

00:24:54.590 --> 00:24:59.810
So this is the view resolver that will give us the Suffolk's and prefix And then finally,

00:24:59.810 --> 00:25:00.620
we have our view.

00:25:00.620 --> 00:25:02.210
So once views finalized,

00:25:02.210 --> 00:25:03.140
the dispatcher serve,

00:25:03.140 --> 00:25:08.610
it passes the model data to the view which is finally rendered on the browser.

00:25:08.610 --> 00:25:09.630
Well,

00:25:09.630 --> 00:25:11.420
I guess the model data to the Yeah,

00:25:11.420 --> 00:25:11.780
Yeah,

00:25:11.780 --> 00:25:12.410
the view.

00:25:12.410 --> 00:25:15.710
And then that view is then passed on to you,

00:25:15.710 --> 00:25:16.960
so you could be Now,

00:25:16.960 --> 00:25:17.430
remember,

00:25:17.430 --> 00:25:20.500
the dispatcher serve Little usually won't be on the same machine.

00:25:20.500 --> 00:25:23.190
So here what we're doing is we're actually calling local host.

00:25:23.190 --> 00:25:27.190
But most of time you're gonna be calling something like a my website dot com and your

00:25:27.190 --> 00:25:28.240
website is gonna be located.

00:25:28.240 --> 00:25:30.660
It can be located on the other side of the world.

00:25:30.660 --> 00:25:34.780
So then it would pass that view the html from that view,

00:25:34.780 --> 00:25:40.220
So it would compile the jsp file into a service and then passed that all the way down to

00:25:40.220 --> 00:25:45.000
you where your browser can actually render it and give you a nice looking image of a cat

00:25:45.000 --> 00:25:47.350
picture or right or whatever it is.

00:25:47.350 --> 00:25:48.230
Okay,

00:25:48.230 --> 00:25:50.560
so all the above mentioned components I e handler,

00:25:50.560 --> 00:25:55.710
mapping controller and viewers over our parts of Web application context is that there are

00:25:55.710 --> 00:25:58.200
extra double here which have to remove that,

00:25:58.200 --> 00:26:01.750
which is an extension of the plane application context,

00:26:01.750 --> 00:26:04.910
with some extra features necessary for Web applications.

00:26:04.910 --> 00:26:05.060
So,

00:26:05.060 --> 00:26:05.290
yes,

00:26:05.290 --> 00:26:07.550
the Web application context just have a different thing.

00:26:07.550 --> 00:26:09.880
Will go a little bit more a little bit deeper into it,

00:26:09.880 --> 00:26:12.610
but essentially just like we did Context application.

00:26:12.610 --> 00:26:13.350
I'm sorry.

00:26:13.350 --> 00:26:13.500
No,

00:26:13.500 --> 00:26:15.310
we did XML application context.

00:26:15.310 --> 00:26:17.100
We also have application context.

00:26:17.100 --> 00:26:19.470
It's just do sort of similar things.

00:26:19.470 --> 00:26:21.430
They're essentially just an application context,

00:26:21.430 --> 00:26:27.390
and that is what spring it's actually one of the forms of dependency injection.

00:26:27.390 --> 00:26:30.260
And as we went over in the previous unit,

00:26:30.260 --> 00:26:36.400
dependency injection as a whole is essentially what spring is built on.

00:26:36.400 --> 00:26:37.240
So yeah,

00:26:37.240 --> 00:26:38.760
pretty interesting.

00:26:38.760 --> 00:26:40.210
All right,

00:26:40.210 --> 00:26:40.910
So for homework,

00:26:40.910 --> 00:26:43.700
your job is to understand the dispatcher Service,

00:26:43.700 --> 00:26:46.610
understand the four sort of life cycles,

00:26:46.610 --> 00:26:49.460
the order of events of the dispatcher servant,

00:26:49.460 --> 00:26:54.800
and to get a good idea of where this fits into the whole puzzle.

00:26:54.800 --> 00:26:55.390
That is Web,

00:26:55.390 --> 00:26:57.660
that is survey development in Java.

00:26:57.660 --> 00:26:59.110
Okay,

00:26:59.110 --> 00:27:00.170
so I know at this point,

00:27:00.170 --> 00:27:01.610
we're not doing a lot of code,

00:27:01.610 --> 00:27:06.060
but that's and can't get kind of boring,

00:27:06.060 --> 00:27:08.810
but this is very important to know.

00:27:08.810 --> 00:27:09.420
So ah,

00:27:09.420 --> 00:27:10.940
lot of people just going to learn the code,

00:27:10.940 --> 00:27:12.500
and then they don't learn the theory.

00:27:12.500 --> 00:27:13.580
And in spring,

00:27:13.580 --> 00:27:14.530
the theory is key.

00:27:14.530 --> 00:27:18.760
So a lot of people actually complained that spring has absolutely terrible um,

00:27:18.760 --> 00:27:20.370
not documentation.

00:27:20.370 --> 00:27:23.130
Terrible error exception.

00:27:23.130 --> 00:27:27.440
I forgot what that's called gives you terrible exception.

00:27:27.440 --> 00:27:30.270
So it doesn't tell you exactly what happened where it happened.

00:27:30.270 --> 00:27:30.780
It's not.

00:27:30.780 --> 00:27:31.730
They're not detailed.

00:27:31.730 --> 00:27:36.200
But if you can thoroughly understand at a very high level,

00:27:36.200 --> 00:27:36.680
or actually,

00:27:36.680 --> 00:27:37.240
yeah,

00:27:37.240 --> 00:27:43.610
high level or maybe low level at a very detailed level off what exactly spring is doing?

00:27:43.610 --> 00:27:48.520
I eat this dispatcher service view resolves controllers handler mapping against one,

00:27:48.520 --> 00:27:49.160
and so on.

00:27:49.160 --> 00:27:53.530
Then you The errors that it throws are gonna make ah,

00:27:53.530 --> 00:27:54.310
lot of sense.

00:27:54.310 --> 00:27:55.000
So yeah.

00:27:55.000 --> 00:27:56.190
Anyway,

00:27:56.190 --> 00:27:56.700
from work,

00:27:56.700 --> 00:27:57.630
make sure to learn this.

00:27:57.630 --> 00:27:58.160
Um,

00:27:58.160 --> 00:27:59.240
next time,

00:27:59.240 --> 00:28:02.460
we're actually gonna be going over into this with a little bit more detail.

00:28:02.460 --> 00:28:03.070
Um,

00:28:03.070 --> 00:28:07.300
we're actually taking a look at some of the way that dispatcher service actually performed

00:28:07.300 --> 00:28:08.190
its operations.

00:28:08.190 --> 00:28:11.170
And so one that said in this time,

00:28:11.170 --> 00:28:14.350
learn with dispatched river does learn the four events that it does.

00:28:14.350 --> 00:28:15.090
And,

00:28:15.090 --> 00:28:15.450
um,

00:28:15.450 --> 00:28:16.600
we are Ah,

00:28:16.600 --> 00:28:17.390
we're good to go.

00:28:17.390 --> 00:28:18.420
So anyway,

00:28:18.420 --> 00:28:19.400
without further ado,

00:28:19.400 --> 00:28:20.010
um,

00:28:20.010 --> 00:28:21.070
I'll see next time.

00:28:21.070 --> 00:28:22.700
Hello there.

00:28:22.700 --> 00:28:24.620
And welcome back to this spring development course.

00:28:24.620 --> 00:28:27.910
So last time we went over the dispatcher serve it.

00:28:27.910 --> 00:28:30.760
And today we're gonna be going over the model in spring.

00:28:30.760 --> 00:28:32.330
So essentially,

00:28:32.330 --> 00:28:37.210
the model is entirely just something that helps us past data from our controllers into our

00:28:37.210 --> 00:28:37.770
views.

00:28:37.770 --> 00:28:39.450
Pretty simple stuff.

00:28:39.450 --> 00:28:42.310
So it's going Take a look at how are deputies works.

00:28:42.310 --> 00:28:44.320
All right,

00:28:44.320 --> 00:28:48.840
So the model is a convenience class made for passing data into a view.

00:28:48.840 --> 00:28:53.450
We have a couple of implementations of the model should we will go over today.

00:28:53.450 --> 00:28:54.550
All right,

00:28:54.550 --> 00:28:55.800
so the model,

00:28:55.800 --> 00:28:56.190
first of all,

00:28:56.190 --> 00:28:57.500
we just have just a model.

00:28:57.500 --> 00:28:59.580
So let's start with the most basic concept here.

00:28:59.580 --> 00:29:01.140
The model Simply put,

00:29:01.140 --> 00:29:07.800
the model can supply attributes used for rendering views to provide a view use with usable

00:29:07.800 --> 00:29:08.360
data.

00:29:08.360 --> 00:29:11.430
We simply add this data to its model object.

00:29:11.430 --> 00:29:12.200
Additionally,

00:29:12.200 --> 00:29:14.950
maps with actually can be merged with model instances.

00:29:14.950 --> 00:29:16.810
So here we have a controller.

00:29:16.810 --> 00:29:19.230
We have a at get mapping institution,

00:29:19.230 --> 00:29:21.850
which is essentially sort of like a request mapping annotation.

00:29:21.850 --> 00:29:22.910
Um,

00:29:22.910 --> 00:29:24.600
with with slash get hello,

00:29:24.600 --> 00:29:25.060
world.

00:29:25.060 --> 00:29:27.050
Then we have a public string.

00:29:27.050 --> 00:29:30.410
So we returned the name of the view past parameters with model.

00:29:30.410 --> 00:29:34.080
And then here we input a model into this controller.

00:29:34.080 --> 00:29:34.880
And remember,

00:29:34.880 --> 00:29:35.710
the dispatcher serve.

00:29:35.710 --> 00:29:37.850
It will sense that we have a model here,

00:29:37.850 --> 00:29:38.760
um,

00:29:38.760 --> 00:29:42.140
as the input for a method and automatically passing a model.

00:29:42.140 --> 00:29:48.280
Then when we go ahead and we can we create a new map here on your hash map and then put a

00:29:48.280 --> 00:29:49.430
sample string here.

00:29:49.430 --> 00:29:52.290
Then we add an attribute to our model.

00:29:52.290 --> 00:29:54.480
We do hello and world.

00:29:54.480 --> 00:29:55.530
So the key Hello.

00:29:55.530 --> 00:29:57.050
And in the the,

00:29:57.050 --> 00:29:57.510
um,

00:29:57.510 --> 00:29:59.600
value is world,

00:29:59.600 --> 00:30:01.640
and then we also merge attribute with maps.

00:30:01.640 --> 00:30:07.050
So then model will now have sample key sample value string as well,

00:30:07.050 --> 00:30:08.850
and then we return the actual view itself.

00:30:08.850 --> 00:30:12.110
So this is just an example here of how it really works.

00:30:12.110 --> 00:30:12.370
But really,

00:30:12.370 --> 00:30:15.650
the important thing to note here is that we can just add Actually,

00:30:15.650 --> 00:30:19.050
it's to our model using modeled on at add attribute.

00:30:19.050 --> 00:30:19.770
Hello,

00:30:19.770 --> 00:30:20.500
common world.

00:30:20.500 --> 00:30:22.850
So you know key and then our value as well.

00:30:22.850 --> 00:30:25.260
So let's take a look at how this will work in our code.

00:30:25.260 --> 00:30:26.660
All right?

00:30:26.660 --> 00:30:29.650
So in our project code that we have already created,

00:30:29.650 --> 00:30:34.570
we're gonna go on and do is do new class.

00:30:34.570 --> 00:30:35.880
Let's call it.

00:30:35.880 --> 00:30:36.470
Hello,

00:30:36.470 --> 00:30:39.710
world controller.

00:30:39.710 --> 00:30:42.550
There we go.

00:30:42.550 --> 00:30:45.300
I was pretty main method as well.

00:30:45.300 --> 00:30:48.270
Russian a white accretive main breath,

00:30:48.270 --> 00:30:49.120
don't you Two main method.

00:30:49.120 --> 00:30:49.500
All right,

00:30:49.500 --> 00:30:54.700
let's do at request mapping now,

00:30:54.700 --> 00:30:55.460
What's what am I doing?

00:30:55.460 --> 00:30:55.930
Not know.

00:30:55.930 --> 00:30:56.020
And,

00:30:56.020 --> 00:30:56.380
of course,

00:30:56.380 --> 00:30:58.160
at controller there ago.

00:30:58.160 --> 00:30:59.510
Can't.

00:30:59.510 --> 00:31:00.400
Can't think today.

00:31:00.400 --> 00:31:00.830
There we go.

00:31:00.830 --> 00:31:01.670
Import controller.

00:31:01.670 --> 00:31:02.170
OK,

00:31:02.170 --> 00:31:13.150
now we're gonna do at request mapping and then here we're gonna do slash Um hello,

00:31:13.150 --> 00:31:13.550
world.

00:31:13.550 --> 00:31:18.510
All right,

00:31:18.510 --> 00:31:18.830
there we go.

00:31:18.830 --> 00:31:21.260
Else created public string.

00:31:21.260 --> 00:31:27.090
Get a little world take a model map as input.

00:31:27.090 --> 00:31:27.820
No.

00:31:27.820 --> 00:31:27.960
What?

00:31:27.960 --> 00:31:30.560
Just a model has input model model.

00:31:30.560 --> 00:31:31.410
There we go.

00:31:31.410 --> 00:31:36.590
Let's import at request mapping and let's import model is Well,

00:31:36.590 --> 00:31:37.680
there we go.

00:31:37.680 --> 00:31:38.510
Okay.

00:31:38.510 --> 00:31:40.120
And now we're gonna do is we're gonna do model,

00:31:40.120 --> 00:31:47.460
don't add attribute and we're gonna dio for the key.

00:31:47.460 --> 00:31:53.320
We're gonna dio message and then for the value we're gonna do.

00:31:53.320 --> 00:31:53.780
Hello,

00:31:53.780 --> 00:31:54.160
world.

00:31:54.160 --> 00:31:56.070
There we go.

00:31:56.070 --> 00:31:58.020
All right.

00:31:58.020 --> 00:31:59.350
And now let's return.

00:31:59.350 --> 00:32:02.120
Uh,

00:32:02.120 --> 00:32:02.660
view.

00:32:02.660 --> 00:32:04.050
There we go.

00:32:04.050 --> 00:32:05.300
Okay,

00:32:05.300 --> 00:32:09.340
So it's going to take a look at a resource at our view.

00:32:09.340 --> 00:32:11.180
Resolve er inside our spring,

00:32:11.180 --> 00:32:11.590
NBC,

00:32:11.590 --> 00:32:12.550
several XML.

00:32:12.550 --> 00:32:13.630
Yes,

00:32:13.630 --> 00:32:16.850
I already have the weapon if they're switching to create a view in the weapons,

00:32:16.850 --> 00:32:23.250
so it's do new JSP file and we'll call it view dot jsp.

00:32:23.250 --> 00:32:26.280
Let's finish.

00:32:26.280 --> 00:32:27.670
All right,

00:32:27.670 --> 00:32:28.180
there we go.

00:32:28.180 --> 00:32:28.700
And now here,

00:32:28.700 --> 00:32:29.280
we can do,

00:32:29.280 --> 00:32:39.660
um p message equals and then dollar sign and brackets message.

00:32:39.660 --> 00:32:43.810
There we go.

00:32:43.810 --> 00:32:44.270
All right,

00:32:44.270 --> 00:32:48.380
So now we have used this model attributes to know,

00:32:48.380 --> 00:32:48.640
Yeah,

00:32:48.640 --> 00:32:53.500
this model to put on attributes message into hello world.

00:32:53.500 --> 00:32:55.790
And so here when we in our view,

00:32:55.790 --> 00:32:58.420
when we search for this message in our model,

00:32:58.420 --> 00:33:00.690
it will return how the world's let's make sure that it works.

00:33:00.690 --> 00:33:01.550
Let's go to run this.

00:33:01.550 --> 00:33:06.220
All right.

00:33:06.220 --> 00:33:07.550
And it should start up.

00:33:07.550 --> 00:33:12.410
All right,

00:33:12.410 --> 00:33:12.970
there we go.

00:33:12.970 --> 00:33:19.780
All right,

00:33:19.780 --> 00:33:20.320
there we go.

00:33:20.320 --> 00:33:20.810
So,

00:33:20.810 --> 00:33:25.660
server startup in 69,400 6944 milliseconds.

00:33:25.660 --> 00:33:28.620
I was gonna go to chrome all right here.

00:33:28.620 --> 00:33:29.170
Let's do,

00:33:29.170 --> 00:33:29.850
um,

00:33:29.850 --> 00:33:33.990
local host 80 80 slash.

00:33:33.990 --> 00:33:38.670
I think it was Web artifact slash.

00:33:38.670 --> 00:33:39.010
Hello,

00:33:39.010 --> 00:33:39.350
world.

00:33:39.350 --> 00:33:40.660
Yeah.

00:33:40.660 --> 00:33:42.710
Ah,

00:33:42.710 --> 00:33:43.100
whoops.

00:33:43.100 --> 00:33:43.600
For some reason.

00:33:43.600 --> 00:33:44.290
Didn't find it.

00:33:44.290 --> 00:33:44.940
Let's see what?

00:33:44.940 --> 00:33:47.160
Our controller actually wasn't going clips here.

00:33:47.160 --> 00:33:48.290
Um,

00:33:48.290 --> 00:33:49.890
our controller was.

00:33:49.890 --> 00:33:50.400
Whoops,

00:33:50.400 --> 00:33:51.310
if you've got this Oh,

00:33:51.310 --> 00:33:51.630
here,

00:33:51.630 --> 00:33:52.100
it actually,

00:33:52.100 --> 00:33:53.420
I'm gonna Chrome,

00:33:53.420 --> 00:33:54.750
We cannot delete this.

00:33:54.750 --> 00:33:55.080
Oh,

00:33:55.080 --> 00:33:56.190
here and now.

00:33:56.190 --> 00:33:58.380
Uh,

00:33:58.380 --> 00:33:58.720
well,

00:33:58.720 --> 00:33:59.860
that's that's odd.

00:33:59.860 --> 00:34:00.460
Um,

00:34:00.460 --> 00:34:02.260
it's gonna go to clips again.

00:34:02.260 --> 00:34:03.700
Um,

00:34:03.700 --> 00:34:09.290
God's going to restart the server.

00:34:09.290 --> 00:34:09.940
Just Teoh.

00:34:09.940 --> 00:34:11.270
See what they were,

00:34:11.270 --> 00:34:17.840
What the problem exactly is so it appears that All right,

00:34:17.840 --> 00:34:18.370
let's you shut it.

00:34:18.370 --> 00:34:21.810
You don't really know when spring might,

00:34:21.810 --> 00:34:22.120
you know,

00:34:22.120 --> 00:34:25.140
decide to give you some sas.

00:34:25.140 --> 00:34:27.990
All right.

00:34:27.990 --> 00:34:30.290
Loading their egos to get point.

00:34:30.290 --> 00:34:30.780
Hello,

00:34:30.780 --> 00:34:31.060
World.

00:34:31.060 --> 00:34:31.340
Right here.

00:34:31.340 --> 00:34:32.460
So a map to the world.

00:34:32.460 --> 00:34:33.660
Here we go.

00:34:33.660 --> 00:34:36.390
Okay.

00:34:36.390 --> 00:34:37.210
Now,

00:34:37.210 --> 00:34:38.200
inside chrome.

00:34:38.200 --> 00:34:43.050
Now we should be able to go to the world,

00:34:43.050 --> 00:34:47.390
and there we go.

00:34:47.390 --> 00:34:50.360
So now we see that our message is equal to hello world.

00:34:50.360 --> 00:34:51.000
So,

00:34:51.000 --> 00:34:51.560
um,

00:34:51.560 --> 00:34:55.540
let's go to our eclipse.

00:34:55.540 --> 00:34:56.090
You here.

00:34:56.090 --> 00:34:57.690
So here we have ah,

00:34:57.690 --> 00:35:02.620
p tag with message is equal to a dollar sign messages.

00:35:02.620 --> 00:35:07.740
A dollar sign message will essentially just look into our model and get back and attributes

00:35:07.740 --> 00:35:08.760
which,

00:35:08.760 --> 00:35:09.650
uh,

00:35:09.650 --> 00:35:11.340
is under the key message.

00:35:11.340 --> 00:35:12.500
So which has the key message,

00:35:12.500 --> 00:35:13.580
and we'll get back the value.

00:35:13.580 --> 00:35:14.760
So in our case,

00:35:14.760 --> 00:35:19.890
it gets back how the world since we put hello world here under message in our model.

00:35:19.890 --> 00:35:21.160
Okay,

00:35:21.160 --> 00:35:24.210
um and so remember when j.

00:35:24.210 --> 00:35:26.780
J Speed is just compiled down to surveillance,

00:35:26.780 --> 00:35:28.940
And so what is compared down to a serval?

00:35:28.940 --> 00:35:34.260
It essentially just understand this in the model and gets his Okay,

00:35:34.260 --> 00:35:38.980
So now take a look at how we can merge our model with a Hashmat.

00:35:38.980 --> 00:35:40.040
All right,

00:35:40.040 --> 00:35:40.480
so now hello,

00:35:40.480 --> 00:35:41.410
World Controller.

00:35:41.410 --> 00:35:42.520
That's going to stop our server.

00:35:42.520 --> 00:35:43.380
Um,

00:35:43.380 --> 00:35:44.760
we're going to create a new hash map,

00:35:44.760 --> 00:35:46.250
so we're gonna have a map.

00:35:46.250 --> 00:35:47.700
What?

00:35:47.700 --> 00:35:50.880
Sweeps sweeps M equals new Hashmat.

00:35:50.880 --> 00:35:53.180
All right,

00:35:53.180 --> 00:35:54.350
let's import map.

00:35:54.350 --> 00:35:57.890
Then let's import hash mapas.

00:35:57.890 --> 00:35:58.250
Well,

00:35:58.250 --> 00:35:59.580
there we go.

00:35:59.580 --> 00:36:01.040
And now let's do,

00:36:01.040 --> 00:36:01.700
um,

00:36:01.700 --> 00:36:02.230
remember,

00:36:02.230 --> 00:36:03.030
I'm map essentially,

00:36:03.030 --> 00:36:03.430
just,

00:36:03.430 --> 00:36:04.040
ah,

00:36:04.040 --> 00:36:05.420
data structure in job.

00:36:05.420 --> 00:36:06.830
I that has a key in the values.

00:36:06.830 --> 00:36:08.230
Just essentially pretty much like a model.

00:36:08.230 --> 00:36:11.400
Except Hashmat actually stores under a hash code,

00:36:11.400 --> 00:36:11.600
but,

00:36:11.600 --> 00:36:11.850
you know,

00:36:11.850 --> 00:36:13.240
essentially just can develop,

00:36:13.240 --> 00:36:14.210
okay?

00:36:14.210 --> 00:36:21.370
And so now we can do am dot uh dot set What's nope m dot sport there ago.

00:36:21.370 --> 00:36:26.100
Forg