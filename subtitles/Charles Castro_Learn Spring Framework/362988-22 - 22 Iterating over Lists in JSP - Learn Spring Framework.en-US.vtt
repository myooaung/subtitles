WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.000
Hello there.

00:00:01.000 --> 00:00:02.830
And welcome back to the spring development,

00:00:02.830 --> 00:00:03.350
Of course.

00:00:03.350 --> 00:00:11.100
So last time we went over the very basics of JST l and took a look at if statements and you

00:00:11.100 --> 00:00:11.850
had some homework to do.

00:00:11.850 --> 00:00:17.890
Your job is to create application that would put an integer into the model and then in the

00:00:17.890 --> 00:00:18.360
view,

00:00:18.360 --> 00:00:23.470
decide whether that interview was even a rod and then specify whether it is even or it is

00:00:23.470 --> 00:00:23.850
on.

00:00:23.850 --> 00:00:26.500
So here is essentially what should have done.

00:00:26.500 --> 00:00:27.260
So right now I'm in the view,

00:00:27.260 --> 00:00:29.050
we go back to the controller here.

00:00:29.050 --> 00:00:30.270
There we go.

00:00:30.270 --> 00:00:31.870
And I actually made two controllers,

00:00:31.870 --> 00:00:32.980
which we can totally do.

00:00:32.980 --> 00:00:34.000
You could if you made a one.

00:00:34.000 --> 00:00:34.800
That's no problem.

00:00:34.800 --> 00:00:35.360
See,

00:00:35.360 --> 00:00:37.800
you have to control its first controller is the odd controller.

00:00:37.800 --> 00:00:38.600
Um,

00:00:38.600 --> 00:00:41.010
I receive a model in view and return a model in view.

00:00:41.010 --> 00:00:42.890
Then I set the view name to view.

00:00:42.890 --> 00:00:47.840
Then I set the object to the view into the model,

00:00:47.840 --> 00:00:48.460
uh,

00:00:48.460 --> 00:00:52.490
with the keyword number and the value one and that just returned model in view.

00:00:52.490 --> 00:00:54.120
So this will,

00:00:54.120 --> 00:00:54.680
um,

00:00:54.680 --> 00:00:57.350
redirect me to the view page with,

00:00:57.350 --> 00:00:58.440
uh,

00:00:58.440 --> 00:01:01.750
model attributes number with the value one in the model.

00:01:01.750 --> 00:01:04.250
And this is using the odd extensions,

00:01:04.250 --> 00:01:05.450
so slash onto the browser.

00:01:05.450 --> 00:01:06.420
I just do where?

00:01:06.420 --> 00:01:07.760
Barney fact slash Odd.

00:01:07.760 --> 00:01:08.250
Right,

00:01:08.250 --> 00:01:09.480
Okay.

00:01:09.480 --> 00:01:12.450
And then here I have a request mapping.

00:01:12.450 --> 00:01:13.230
Um,

00:01:13.230 --> 00:01:14.120
for the even.

00:01:14.120 --> 00:01:15.640
I have same exact thing Except here.

00:01:15.640 --> 00:01:18.110
Put two instead of one.

00:01:18.110 --> 00:01:19.980
And so it returns this view right here.

00:01:19.980 --> 00:01:20.440
Page,

00:01:20.440 --> 00:01:22.250
which is where we were just now,

00:01:22.250 --> 00:01:23.430
here's the view page.

00:01:23.430 --> 00:01:26.950
So I have a Boolean is even using the script attack.

00:01:26.950 --> 00:01:29.170
I create a new Boolean and there are a couple of ways to do this.

00:01:29.170 --> 00:01:30.220
I'm gonna take a look at it.

00:01:30.220 --> 00:01:32.150
Another way to do this in a second here,

00:01:32.150 --> 00:01:33.640
But I'm just showing you one way first.

00:01:33.640 --> 00:01:35.880
So we have is even so we get requests,

00:01:35.880 --> 00:01:38.350
don't get actually so we can attribute out of the request.

00:01:38.350 --> 00:01:39.230
The number.

00:01:39.230 --> 00:01:41.650
So that's this is what we put in here and here.

00:01:41.650 --> 00:01:43.530
So depending on which controller we used,

00:01:43.530 --> 00:01:46.730
that's the one that we put into the model here.

00:01:46.730 --> 00:01:47.360
I get number,

00:01:47.360 --> 00:01:49.520
and then I cast it to an integer.

00:01:49.520 --> 00:01:50.230
Since we can't,

00:01:50.230 --> 00:01:50.620
you know,

00:01:50.620 --> 00:01:52.750
perform this Manulis on a,

00:01:52.750 --> 00:01:53.910
um,

00:01:53.910 --> 00:01:57.780
into your object on just an object.

00:01:57.780 --> 00:01:59.300
But we can't perform on integers.

00:01:59.300 --> 00:02:00.420
We cast it to integer.

00:02:00.420 --> 00:02:02.640
Then we model Isett with two.

00:02:02.640 --> 00:02:06.030
So this is this just means that if it is going to be,

00:02:06.030 --> 00:02:09.910
um if it is going to be divisible by two,

00:02:09.910 --> 00:02:10.820
it's gonna return zero.

00:02:10.820 --> 00:02:12.910
And if it's not divisible by two Il return one.

00:02:12.910 --> 00:02:17.160
So pretty simple stuff that you make sure that we check if it is equal to zero.

00:02:17.160 --> 00:02:19.490
So and then this will return either true or false.

00:02:19.490 --> 00:02:19.970
So true.

00:02:19.970 --> 00:02:21.280
If it's even and then false,

00:02:21.280 --> 00:02:22.800
if it's not even and so here,

00:02:22.800 --> 00:02:23.260
essentially,

00:02:23.260 --> 00:02:29.830
then we just do a see if tag and then we have test is even and then we just here cf test is

00:02:29.830 --> 00:02:32.810
not even then we put the numbers are otherwise put the numbers,

00:02:32.810 --> 00:02:33.720
even reasonable stuff.

00:02:33.720 --> 00:02:35.070
Now you may be wondering,

00:02:35.070 --> 00:02:36.800
why don't we just had an else statement here?

00:02:36.800 --> 00:02:38.260
So what's the point of rechecking it?

00:02:38.260 --> 00:02:38.860
Well,

00:02:38.860 --> 00:02:41.000
that's because generally speaking in,

00:02:41.000 --> 00:02:41.850
um,

00:02:41.850 --> 00:02:42.760
jest yellow,

00:02:42.760 --> 00:02:46.360
the else statement is a little bit sort of wonky and,

00:02:46.360 --> 00:02:47.010
um,

00:02:47.010 --> 00:02:47.680
not wonky,

00:02:47.680 --> 00:02:50.510
but it's just sort of sort of,

00:02:50.510 --> 00:02:53.090
um not very good.

00:02:53.090 --> 00:02:56.710
So there's a lot of a lot of code that after right So I decided to do this way,

00:02:56.710 --> 00:02:57.370
since it is,

00:02:57.370 --> 00:02:57.830
you know,

00:02:57.830 --> 00:02:59.050
just simpler to understand.

00:02:59.050 --> 00:03:01.170
That's that if you do want to look it up,

00:03:01.170 --> 00:03:02.460
it's not all that difficult.

00:03:02.460 --> 00:03:05.210
It's just it's just it just looks a little redundant.

00:03:05.210 --> 00:03:08.180
There's some code they have to write that really just shouldn't be there should be able to

00:03:08.180 --> 00:03:09.250
just had an else statement.

00:03:09.250 --> 00:03:10.500
But unfortunately you know,

00:03:10.500 --> 00:03:12.450
that's what that's You get what you get anyway.

00:03:12.450 --> 00:03:14.540
That's what we have actually find Leaf,

00:03:14.540 --> 00:03:15.350
which is sort of like a,

00:03:15.350 --> 00:03:16.350
um,

00:03:16.350 --> 00:03:20.350
something that sort of am talk.

00:03:20.350 --> 00:03:22.200
I say this replacement for James B.

00:03:22.200 --> 00:03:23.930
It's a little bit better and more modern,

00:03:23.930 --> 00:03:26.760
but JCB usually sort of like the defaulting that is you.

00:03:26.760 --> 00:03:27.200
So anyway,

00:03:27.200 --> 00:03:28.400
that imagine how that works.

00:03:28.400 --> 00:03:31.550
Now it's going to run this and let's see how this works again,

00:03:31.550 --> 00:03:32.090
either said.

00:03:32.090 --> 00:03:33.950
We are going Teoh,

00:03:33.950 --> 00:03:36.710
take a look at another way to do this in a second here,

00:03:36.710 --> 00:03:37.230
so,

00:03:37.230 --> 00:03:37.590
yeah,

00:03:37.590 --> 00:03:38.550
if you did it another way,

00:03:38.550 --> 00:03:40.140
we'll take a look at that as well as gently.

00:03:40.140 --> 00:03:41.270
As long as it works.

00:03:41.270 --> 00:03:43.580
I don't see what the what the problem is.

00:03:43.580 --> 00:03:44.530
So yeah,

00:03:44.530 --> 00:03:46.280
if there's another way and it still works.

00:03:46.280 --> 00:03:47.150
So you know,

00:03:47.150 --> 00:03:48.350
don't worry about it.

00:03:48.350 --> 00:03:49.190
All right,

00:03:49.190 --> 00:03:49.760
so there we go.

00:03:49.760 --> 00:03:52.410
We have that now is going and go into our browser.

00:03:52.410 --> 00:03:54.270
But here we are.

00:03:54.270 --> 00:03:58.230
And how if you don't actually switched browsers and between the last window,

00:03:58.230 --> 00:03:59.580
I'm actually doing safari now.

00:03:59.580 --> 00:04:00.430
Just couldn't find it.

00:04:00.430 --> 00:04:01.620
Gives a better battery life.

00:04:01.620 --> 00:04:01.840
But,

00:04:01.840 --> 00:04:02.140
you know,

00:04:02.140 --> 00:04:05.010
whatever doesn't really matter all that much.

00:04:05.010 --> 00:04:06.400
And I was go to a local host,

00:04:06.400 --> 00:04:07.350
um,

00:04:07.350 --> 00:04:09.070
80 80 here.

00:04:09.070 --> 00:04:12.950
And then let's go to yet.

00:04:12.950 --> 00:04:14.450
Get what?

00:04:14.450 --> 00:04:15.070
No,

00:04:15.070 --> 00:04:16.270
we're going to AWD first.

00:04:16.270 --> 00:04:17.040
Oh,

00:04:17.040 --> 00:04:19.020
it There we go.

00:04:19.020 --> 00:04:20.100
And now we get numbers on.

00:04:20.100 --> 00:04:21.990
So it's gonna take a look at that eclipse.

00:04:21.990 --> 00:04:23.220
Okay,

00:04:23.220 --> 00:04:25.050
So you can see here when we do slash.

00:04:25.050 --> 00:04:25.560
Odd,

00:04:25.560 --> 00:04:28.900
we put one into our model.

00:04:28.900 --> 00:04:29.830
Um,

00:04:29.830 --> 00:04:30.220
And then,

00:04:30.220 --> 00:04:31.180
in our view,

00:04:31.180 --> 00:04:34.260
we check if it's percent.

00:04:34.260 --> 00:04:35.350
Two is equal to zero,

00:04:35.350 --> 00:04:36.180
and it's not.

00:04:36.180 --> 00:04:37.500
It actually is equal to one,

00:04:37.500 --> 00:04:39.180
and so is even this false.

00:04:39.180 --> 00:04:40.690
So it doesn't execute this.

00:04:40.690 --> 00:04:41.940
It executes this instead.

00:04:41.940 --> 00:04:43.080
This if statement here.

00:04:43.080 --> 00:04:44.330
And so we get odd.

00:04:44.330 --> 00:04:44.880
Now,

00:04:44.880 --> 00:04:49.820
let's go ahead and try it with even Okay,

00:04:49.820 --> 00:04:53.360
let's try with even there we go.

00:04:53.360 --> 00:04:54.310
And when we do it with,

00:04:54.310 --> 00:04:55.580
Even we get even.

00:04:55.580 --> 00:04:56.640
So pretty simple stuff.

00:04:56.640 --> 00:04:57.220
Nothing.

00:04:57.220 --> 00:04:57.850
Your difficult here.

00:04:57.850 --> 00:04:58.290
Now,

00:04:58.290 --> 00:04:59.460
let's actually go ahead and,

00:04:59.460 --> 00:05:00.250
um,

00:05:00.250 --> 00:05:04.010
try to do something a little bit different here We can actually do.

00:05:04.010 --> 00:05:04.850
Um,

00:05:04.850 --> 00:05:09.550
I believe we can do percent equals.

00:05:09.550 --> 00:05:12.560
Request our get attribute number.

00:05:12.560 --> 00:05:12.920
Whoops.

00:05:12.920 --> 00:05:13.180
Whoops.

00:05:13.180 --> 00:05:13.430
Nope,

00:05:13.430 --> 00:05:13.640
nope.

00:05:13.640 --> 00:05:13.830
Nope,

00:05:13.830 --> 00:05:14.020
nope,

00:05:14.020 --> 00:05:14.450
nope.

00:05:14.450 --> 00:05:16.560
There we go.

00:05:16.560 --> 00:05:16.930
All right,

00:05:16.930 --> 00:05:18.960
so then we can do requested attribute number.

00:05:18.960 --> 00:05:22.240
And now in safari for fresh.

00:05:22.240 --> 00:05:25.160
You'll see that we now get to this is the number two.

00:05:25.160 --> 00:05:27.250
And if we change this to odd,

00:05:27.250 --> 00:05:28.300
we get one.

00:05:28.300 --> 00:05:31.260
So just actually make this bigger.

00:05:31.260 --> 00:05:34.570
I I think you might have not been able to see exactly what was there,

00:05:34.570 --> 00:05:35.010
so yeah.

00:05:35.010 --> 00:05:35.420
So,

00:05:35.420 --> 00:05:36.880
um numbers odd.

00:05:36.880 --> 00:05:41.790
If we change it to even we get two numbers.

00:05:41.790 --> 00:05:43.020
Even those make speaker as well.

00:05:43.020 --> 00:05:43.380
So yeah,

00:05:43.380 --> 00:05:44.060
number is even,

00:05:44.060 --> 00:05:44.850
um,

00:05:44.850 --> 00:05:46.310
reasonable stuff.

00:05:46.310 --> 00:05:47.650
That's how that works out.

00:05:47.650 --> 00:05:51.050
We'll have another way that we can actually do this instead of doing this.

00:05:51.050 --> 00:05:54.910
Boolean is even Where we could also do is right here directly.

00:05:54.910 --> 00:05:56.200
Instead of using the script lit,

00:05:56.200 --> 00:06:00.350
we can just use this right here and just do,

00:06:00.350 --> 00:06:03.780
um,

00:06:03.780 --> 00:06:10.650
number percent to is equal to zero,

00:06:10.650 --> 00:06:20.020
and then here will just do number percent to is not equal to whoops and accurately the

00:06:20.020 --> 00:06:21.030
scribbler tags.

00:06:21.030 --> 00:06:21.650
First of all,

00:06:21.650 --> 00:06:23.660
second of Aladdin.

00:06:23.660 --> 00:06:26.150
This right here and then a dollar side as well.

00:06:26.150 --> 00:06:26.910
All right,

00:06:26.910 --> 00:06:27.300
there we go.

00:06:27.300 --> 00:06:28.590
So let's say this week,

00:06:28.590 --> 00:06:31.150
actually delete this now I'll still eat that.

00:06:31.150 --> 00:06:32.260
Okay?

00:06:32.260 --> 00:06:37.780
And now we can go ahead and in going to our browser and refresh.

00:06:37.780 --> 00:06:39.590
Okay?

00:06:39.590 --> 00:06:40.690
And now we actually don't get anything.

00:06:40.690 --> 00:06:41.470
Let me take a look at why,

00:06:41.470 --> 00:06:41.920
exactly?

00:06:41.920 --> 00:06:42.570
Don't get anything.

00:06:42.570 --> 00:06:44.940
Oh,

00:06:44.940 --> 00:06:45.370
there we go.

00:06:45.370 --> 00:06:45.630
OK,

00:06:45.630 --> 00:06:46.320
so first of all,

00:06:46.320 --> 00:06:50.330
I have Ah little thing here and then space here as well.

00:06:50.330 --> 00:06:51.290
So that'll obviously,

00:06:51.290 --> 00:06:56.510
um instead of the space adds space after the true.

00:06:56.510 --> 00:07:00.270
And so this returns were true and in the side of space after so we can't understand what

00:07:00.270 --> 00:07:00.800
that is.

00:07:00.800 --> 00:07:07.160
And this right here adds a right arrow after the true or after the bullion.

00:07:07.160 --> 00:07:08.950
So it also can't understand what that is exactly.

00:07:08.950 --> 00:07:09.970
So let's save this.

00:07:09.970 --> 00:07:13.920
And now if in safari ah,

00:07:13.920 --> 00:07:16.030
we should be able to refresh us,

00:07:16.030 --> 00:07:16.800
go to,

00:07:16.800 --> 00:07:20.590
um even And there we go.

00:07:20.590 --> 00:07:21.800
So we get number is even.

00:07:21.800 --> 00:07:25.190
And if we go to Odd.

00:07:25.190 --> 00:07:27.440
We get number is odd.

00:07:27.440 --> 00:07:27.980
There we go.

00:07:27.980 --> 00:07:28.850
Perfect.

00:07:28.850 --> 00:07:33.050
Um so that is essentially how that works.

00:07:33.050 --> 00:07:34.090
Okay.

00:07:34.090 --> 00:07:36.400
So that essentially the homework if you going at this Very good.

00:07:36.400 --> 00:07:39.260
If not really understand what this code does Go back to the last lesson.

00:07:39.260 --> 00:07:40.200
Take a look at it.

00:07:40.200 --> 00:07:40.540
You know,

00:07:40.540 --> 00:07:42.540
J s B is pretty important.

00:07:42.540 --> 00:07:43.830
We're seeing not not so much A j.

00:07:43.830 --> 00:07:46.680
Speed's important as understanding how to,

00:07:46.680 --> 00:07:46.930
you know,

00:07:46.930 --> 00:07:47.310
sort of,

00:07:47.310 --> 00:07:48.050
um,

00:07:48.050 --> 00:07:49.130
do,

00:07:49.130 --> 00:07:49.750
um,

00:07:49.750 --> 00:07:53.750
sort of useful code programming inside html.

00:07:53.750 --> 00:07:55.470
That's pretty,

00:07:55.470 --> 00:07:55.920
you know?

00:07:55.920 --> 00:07:56.890
So,

00:07:56.890 --> 00:07:57.070
yeah,

00:07:57.070 --> 00:08:02.230
makes you understand that they were gonna be going over iterating over lists and jsp,

00:08:02.230 --> 00:08:03.320
which is also pretty important.

00:08:03.320 --> 00:08:04.750
So let's jump right in.

00:08:04.750 --> 00:08:05.780
All right,

00:08:05.780 --> 00:08:09.210
So iterating over lists in J speed is pretty important.

00:08:09.210 --> 00:08:10.450
I mean it really think about it.

00:08:10.450 --> 00:08:11.980
There's a lot that we can do,

00:08:11.980 --> 00:08:14.580
so we can if we want to add a list into,

00:08:14.580 --> 00:08:15.240
you know,

00:08:15.240 --> 00:08:15.970
a table,

00:08:15.970 --> 00:08:16.630
for example,

00:08:16.630 --> 00:08:18.850
we would use iterating over lists.

00:08:18.850 --> 00:08:23.590
If we can actually add a lot of things into its we can add some CSS.

00:08:23.590 --> 00:08:25.200
We can make a list so that if you would,

00:08:25.200 --> 00:08:25.710
for example,

00:08:25.710 --> 00:08:28.450
have an application chat a forum application.

00:08:28.450 --> 00:08:32.450
It gets a list of sort of all the answers in the forum,

00:08:32.450 --> 00:08:38.430
and then it goes ahead and sort of not sort of.

00:08:38.430 --> 00:08:41.780
It takes the answers and then passes that list into the JSP.

00:08:41.780 --> 00:08:45.980
And then we have a loop there or actually no and Iterating,

00:08:45.980 --> 00:08:50.540
I guess a jsp loop for loop that generates over the list.

00:08:50.540 --> 00:08:54.010
And then every time it has it finds sort of an answer to the Forum.

00:08:54.010 --> 00:08:59.110
It adds a new forum column like you do you see on forums.

00:08:59.110 --> 00:08:59.750
Just for example,

00:08:59.750 --> 00:09:00.500
Um,

00:09:00.500 --> 00:09:00.990
is it is still,

00:09:00.990 --> 00:09:02.070
obviously there's a lot that we can do.

00:09:02.070 --> 00:09:07.220
So let's go and take a look at the very basics of Iterating over lists in Jsp.

00:09:07.220 --> 00:09:09.060
All right,

00:09:09.060 --> 00:09:11.670
so the J Steel Tech Library as we saw the last lesson,

00:09:11.670 --> 00:09:15.050
there's a lot we can do with with the Js TL tag library,

00:09:15.050 --> 00:09:18.000
sometimes referred to as sea to the sea tag libraries.

00:09:18.000 --> 00:09:18.370
Well,

00:09:18.370 --> 00:09:20.980
remember what this is just what we did just now,

00:09:20.980 --> 00:09:23.010
so that if if see if tag,

00:09:23.010 --> 00:09:28.170
that's the J Steel Tech Library and J Steel stands for Java standard tag library,

00:09:28.170 --> 00:09:29.160
so pretty simple.

00:09:29.160 --> 00:09:29.860
So I said.

00:09:29.860 --> 00:09:30.600
Essentially,

00:09:30.600 --> 00:09:32.520
what I'm saying J STL tag library.

00:09:32.520 --> 00:09:35.700
I'm saying Java standard tag library tag library.

00:09:35.700 --> 00:09:39.650
So that's something to know anyway.

00:09:39.650 --> 00:09:44.220
But arguably the coolest and most important part is the four each tag,

00:09:44.220 --> 00:09:46.750
which allows us to generate over lists in JSP.

00:09:46.750 --> 00:09:47.450
First,

00:09:47.450 --> 00:09:48.910
you must have that list in the model.

00:09:48.910 --> 00:09:50.180
So here's the controller to do that.

00:09:50.180 --> 00:09:54.050
So here we have a controller and we it's called Get names.

00:09:54.050 --> 00:09:55.670
Um,

00:09:55.670 --> 00:09:57.760
and then when we get the names Ah,

00:09:57.760 --> 00:10:00.800
we have a get hello world No,

00:10:00.800 --> 00:10:06.920
we put the we have the list of string names and then we have a raised are at as list who's

00:10:06.920 --> 00:10:07.780
just converts.

00:10:07.780 --> 00:10:10.160
Whatever we answer into the,

00:10:10.160 --> 00:10:18.150
um into Thea Constructor as correctional into the method it converted into a a realist.

00:10:18.150 --> 00:10:19.010
Um,

00:10:19.010 --> 00:10:24.260
then we have a model in view attributes than we do modeling view doubts have you named view

00:10:24.260 --> 00:10:27.710
and then add the object into names and there were turned model in view.

00:10:27.710 --> 00:10:30.170
So it will return the model in view with the view,

00:10:30.170 --> 00:10:33.410
name view and then with the object names.

00:10:33.410 --> 00:10:35.050
So let's go to do that right now.

00:10:35.050 --> 00:10:36.390
All right,

00:10:36.390 --> 00:10:39.460
so here we are on our coat was gonna delete these two methods we're gonna have,

00:10:39.460 --> 00:10:39.850
Ah,

00:10:39.850 --> 00:10:45.050
at request mapping value.

00:10:45.050 --> 00:10:49.520
Value equals get names,

00:10:49.520 --> 00:10:53.250
whips slash Get names.

00:10:53.250 --> 00:10:54.550
There we go.

00:10:54.550 --> 00:10:56.350
And to have public,

00:10:56.350 --> 00:10:58.050
uh,

00:10:58.050 --> 00:11:00.380
model and view.

00:11:00.380 --> 00:11:02.270
Um,

00:11:02.270 --> 00:11:03.260
get names.

00:11:03.260 --> 00:11:05.970
There we go.

00:11:05.970 --> 00:11:12.250
And lipstick in a model and view as a tribute model and view model.

00:11:12.250 --> 00:11:14.850
And there we go.

00:11:14.850 --> 00:11:16.180
All right.

00:11:16.180 --> 00:11:16.420
What's him?

00:11:16.420 --> 00:11:17.270
See the problem?

00:11:17.270 --> 00:11:18.550
We need to have the return statement.

00:11:18.550 --> 00:11:18.960
Okay,

00:11:18.960 --> 00:11:20.680
then we have our list of names.

00:11:20.680 --> 00:11:23.550
A list string,

00:11:23.550 --> 00:11:25.420
uh,

00:11:25.420 --> 00:11:30.250
names equals a raise dot as list.

00:11:30.250 --> 00:11:32.550
And then I was do Bob.

00:11:32.550 --> 00:11:34.700
Bill.

00:11:34.700 --> 00:11:35.960
What's Nope.

00:11:35.960 --> 00:11:36.670
Bill,

00:11:36.670 --> 00:11:41.510
you never get used to typing in the new keywords on And then Matt as well,

00:11:41.510 --> 00:11:42.150
There we go.

00:11:42.150 --> 00:11:43.590
All right,

00:11:43.590 --> 00:11:46.630
let's go ahead and import list you till,

00:11:46.630 --> 00:11:47.300
Not a w.

00:11:47.300 --> 00:11:47.650
T.

00:11:47.650 --> 00:11:48.970
Okay,

00:11:48.970 --> 00:11:49.130
Now,

00:11:49.130 --> 00:11:55.650
let's have our model and view model and view dot set view name.

00:11:55.650 --> 00:11:57.640
I said it to view.

00:11:57.640 --> 00:11:58.390
Okay,

00:11:58.390 --> 00:11:58.880
there we go.

00:11:58.880 --> 00:12:05.530
And then we're gonna do model and view dot whoops at object,

00:12:05.530 --> 00:12:06.650
and we're gonna have,

00:12:06.650 --> 00:12:07.950
um,

00:12:07.950 --> 00:12:09.050
names.

00:12:09.050 --> 00:12:09.800
Call.

00:12:09.800 --> 00:12:11.250
My name's There we go.

00:12:11.250 --> 00:12:12.750
Okay.

00:12:12.750 --> 00:12:13.150
And finally,

00:12:13.150 --> 00:12:16.450
let's return model and you.

00:12:16.450 --> 00:12:17.650
There we go.

00:12:17.650 --> 00:12:19.090
All right.

00:12:19.090 --> 00:12:20.340
So now we have a controller written up.

00:12:20.340 --> 00:12:20.740
What's going on?

00:12:20.740 --> 00:12:22.670
Verify that it's working inside view Jsp.

00:12:22.670 --> 00:12:23.980
Let's delete this right here.

00:12:23.980 --> 00:12:24.820
And instead,

00:12:24.820 --> 00:12:26.470
let's do I should do like this.

00:12:26.470 --> 00:12:27.320
Um,

00:12:27.320 --> 00:12:28.610
we just have this and the names.

00:12:28.610 --> 00:12:29.150
There we go.

00:12:29.150 --> 00:12:30.110
Okay,

00:12:30.110 --> 00:12:31.510
So it's just gonna give us the,

00:12:31.510 --> 00:12:32.300
um,

00:12:32.300 --> 00:12:36.050
to string of the list of names,

00:12:36.050 --> 00:12:37.050
so it's gonna run this.

00:12:37.050 --> 00:12:37.390
Um,

00:12:37.390 --> 00:12:38.150
it's on our server.

00:12:38.150 --> 00:12:40.350
There we go.

00:12:40.350 --> 00:12:43.620
All right,

00:12:43.620 --> 00:12:44.180
There we go.

00:12:44.180 --> 00:12:48.410
Let's go ahead and run this in safari.

00:12:48.410 --> 00:12:52.620
Gary are Ansel's goto local host 80 80 Web artifact.

00:12:52.620 --> 00:12:53.450
Let's go to,

00:12:53.450 --> 00:12:53.770
um,

00:12:53.770 --> 00:12:55.110
names.

00:12:55.110 --> 00:12:57.780
Nope,

00:12:57.780 --> 00:12:58.060
nope.

00:12:58.060 --> 00:12:58.950
It was Get names.

00:12:58.950 --> 00:13:02.000
All right,

00:13:02.000 --> 00:13:04.380
there we go and actually prints out Bob,

00:13:04.380 --> 00:13:05.310
Bill and Matt.

00:13:05.310 --> 00:13:09.810
So I I think that a ray list actually has to string,

00:13:09.810 --> 00:13:10.750
as you know,

00:13:10.750 --> 00:13:13.360
to string.

00:13:13.360 --> 00:13:14.010
As you know,

00:13:14.010 --> 00:13:15.680
it's correctly implemented,

00:13:15.680 --> 00:13:16.680
unlike an array.

00:13:16.680 --> 00:13:18.170
So if in theory,

00:13:18.170 --> 00:13:19.850
if we actually going to actually do right here,

00:13:19.850 --> 00:13:20.790
um,

00:13:20.790 --> 00:13:27.140
system dot out dark print Ellen names.

00:13:27.140 --> 00:13:27.440
Yeah,

00:13:27.440 --> 00:13:31.950
I totally forgot that an array list has an actually implemented to string,

00:13:31.950 --> 00:13:32.750
um,

00:13:32.750 --> 00:13:34.350
to string method.

00:13:34.350 --> 00:13:39.240
So if we do current r and then going to eclipse Yeah,

00:13:39.240 --> 00:13:40.370
it prints out problem ass.

00:13:40.370 --> 00:13:40.610
Yeah,

00:13:40.610 --> 00:13:41.220
but the ray list.

00:13:41.220 --> 00:13:43.680
You actually do get given,

00:13:43.680 --> 00:13:44.470
you know,

00:13:44.470 --> 00:13:47.450
a correctly implemented to string both or you don't.

00:13:47.450 --> 00:13:47.800
So anyway,

00:13:47.800 --> 00:13:48.820
but nevertheless,

00:13:48.820 --> 00:13:51.620
that is sort of how you put it into the modeling.

00:13:51.620 --> 00:13:52.610
So now we verified.

00:13:52.610 --> 00:13:54.780
That is it is It is inside the model,

00:13:54.780 --> 00:13:57.100
and we can we can get it inside of you.

00:13:57.100 --> 00:13:58.210
But what if,

00:13:58.210 --> 00:13:59.290
for example,

00:13:59.290 --> 00:14:00.280
you wanted,

00:14:00.280 --> 00:14:01.830
You know,

00:14:01.830 --> 00:14:07.520
with each iteration you want to to maybe add something to a number or,

00:14:07.520 --> 00:14:07.990
ah,

00:14:07.990 --> 00:14:10.600
check to make sure that the list was,

00:14:10.600 --> 00:14:11.410
you know,

00:14:11.410 --> 00:14:15.780
check to make sure that list was over given,

00:14:15.780 --> 00:14:16.420
you know,

00:14:16.420 --> 00:14:17.000
length.

00:14:17.000 --> 00:14:19.060
So that it can't be more than you know,

00:14:19.060 --> 00:14:20.620
five forum threads,

00:14:20.620 --> 00:14:21.290
for example,

00:14:21.290 --> 00:14:22.600
like that.

00:14:22.600 --> 00:14:23.550
So to do that,

00:14:23.550 --> 00:14:28.040
we would have to use the for each tag in Js.

00:14:28.040 --> 00:14:28.640
Tell us what's going.

00:14:28.640 --> 00:14:30.950
Take a look at how that works.

00:14:30.950 --> 00:14:32.610
Okay,

00:14:32.610 --> 00:14:33.450
so here it is,

00:14:33.450 --> 00:14:36.430
the four each tag so that in our jsp file,

00:14:36.430 --> 00:14:41.400
we will use the four each tag to iterating over our list of names and then add them to our

00:14:41.400 --> 00:14:42.350
HTML fire.

00:14:42.350 --> 00:14:43.490
So here we are.

00:14:43.490 --> 00:14:45.680
We have C for each,

00:14:45.680 --> 00:14:49.100
um and then here we have the items attributes.

00:14:49.100 --> 00:14:52.930
This is just the actual list that we're going to be iterating over.

00:14:52.930 --> 00:14:56.190
And the variable is the name that we're actually going to be,

00:14:56.190 --> 00:14:58.150
um,

00:14:58.150 --> 00:15:02.460
the name that we're going to be assigning to every single elements in this case,

00:15:02.460 --> 00:15:05.400
the names as we sort of generate over it.

00:15:05.400 --> 00:15:07.340
Name will be every single element.

00:15:07.340 --> 00:15:07.750
So first,

00:15:07.750 --> 00:15:08.660
namely Bill,

00:15:08.660 --> 00:15:12.850
the name will be Bob and the name will we will be mats instead of the order that we

00:15:12.850 --> 00:15:13.450
assignment.

00:15:13.450 --> 00:15:14.270
Okay,

00:15:14.270 --> 00:15:17.000
so there's this year's actual That's what I right here on our program.

00:15:17.000 --> 00:15:20.260
Our program will enrage over the list named names.

00:15:20.260 --> 00:15:24.950
And then we assigned the name of each name that we're iterating over to name.

00:15:24.950 --> 00:15:27.360
I'm saying name a lot anyway,

00:15:27.360 --> 00:15:27.530
so,

00:15:27.530 --> 00:15:27.630
yeah,

00:15:27.630 --> 00:15:28.610
we signed them to name.

00:15:28.610 --> 00:15:30.400
We can also use it by calling.

00:15:30.400 --> 00:15:37.150
We can then use it by calling dollar sign name in curly brackets inside the for each loop.

00:15:37.150 --> 00:15:38.270
Using this method,

00:15:38.270 --> 00:15:41.890
we can add lists two tables creating looping webpages,

00:15:41.890 --> 00:15:42.380
etcetera.

00:15:42.380 --> 00:15:45.870
So there's a lot of different functionality that we can add using this method.

00:15:45.870 --> 00:15:48.550
So it's going to take a look at how it actually works in the code.

00:15:48.550 --> 00:15:50.660
All right,

00:15:50.660 --> 00:15:53.150
here we are and Scott are viewed dot jsp.

00:15:53.150 --> 00:15:54.040
Okay,

00:15:54.040 --> 00:15:54.820
let's do it on.

00:15:54.820 --> 00:15:55.300
We're gonna do.

00:15:55.300 --> 00:15:55.840
See,

00:15:55.840 --> 00:16:05.800
for each attribute equals attributes I think equals way.

00:16:05.800 --> 00:16:06.290
I'm sorry.

00:16:06.290 --> 00:16:10.030
I think it's actually items doing some my memory here.

00:16:10.030 --> 00:16:11.150
Items equals,

00:16:11.150 --> 00:16:15.570
um dollar sign in curly brackets,

00:16:15.570 --> 00:16:17.780
whips names.

00:16:17.780 --> 00:16:18.450
There we go.

00:16:18.450 --> 00:16:24.050
And then var equals name.

00:16:24.050 --> 00:16:25.680
Okay,

00:16:25.680 --> 00:16:26.190
there we go.

00:16:26.190 --> 00:16:28.470
Let's do see for each year as well.

00:16:28.470 --> 00:16:29.650
And then inside here,

00:16:29.650 --> 00:16:31.050
all we're gonna do is we're going to do,

00:16:31.050 --> 00:16:33.420
um Whoops.

00:16:33.420 --> 00:16:33.790
Nope.

00:16:33.790 --> 00:16:34.380
Uh,

00:16:34.380 --> 00:16:36.250
P knows to h one,

00:16:36.250 --> 00:16:38.550
uh,

00:16:38.550 --> 00:16:40.260
name.

00:16:40.260 --> 00:16:43.950
Let's wait.

00:16:43.950 --> 00:16:45.460
What's what's what seems to be the problem?

00:16:45.460 --> 00:16:49.350
I think we do like this.

00:16:49.350 --> 00:16:51.630
Okay,

00:16:51.630 --> 00:16:51.860
Anyway,

00:16:51.860 --> 00:16:52.660
this should work.

00:16:52.660 --> 00:16:53.220
In theory,

00:16:53.220 --> 00:16:55.270
it will just give me a little bit of error here.

00:16:55.270 --> 00:16:56.190
But it does work,

00:16:56.190 --> 00:16:56.450
though.

00:16:56.450 --> 00:16:58.150
That's gonna go into safari.

00:16:58.150 --> 00:16:59.990
Oh,

00:16:59.990 --> 00:17:01.150
and now it's going to run this,

00:17:01.150 --> 00:17:03.330
and there we go.

00:17:03.330 --> 00:17:04.540
So at each generation,

00:17:04.540 --> 00:17:07.790
we get Bob and then Bill and then Matt and you'll see here that first of all,

00:17:07.790 --> 00:17:09.500
it makes everything a header.

00:17:09.500 --> 00:17:11.430
So it makes a bold and then,

00:17:11.430 --> 00:17:12.240
since all header,

00:17:12.240 --> 00:17:14.180
it also does adds a break statement in there.

00:17:14.180 --> 00:17:15.940
So go to clips.

00:17:15.940 --> 00:17:17.210
You'll see that since header.

00:17:17.210 --> 00:17:18.950
We have a break statement as well.

00:17:18.950 --> 00:17:19.980
Okay,

00:17:19.980 --> 00:17:20.530
It's that essentially,

00:17:20.530 --> 00:17:21.560
how we generate over it.

00:17:21.560 --> 00:17:22.650
So we can now add a lot.

00:17:22.650 --> 00:17:23.640
We can do a lot of things here,

00:17:23.640 --> 00:17:23.960
So we can,

00:17:23.960 --> 00:17:24.490
for example,

00:17:24.490 --> 00:17:24.870
do,

00:17:24.870 --> 00:17:28.850
um we can do here,

00:17:28.850 --> 00:17:34.310
have a scribble it with the value into I equals zero,

00:17:34.310 --> 00:17:35.100
for example.

00:17:35.100 --> 00:17:35.710
Okay.

00:17:35.710 --> 00:17:36.530
And then here,

00:17:36.530 --> 00:17:37.400
we can have,

00:17:37.400 --> 00:17:38.050
um,

00:17:38.050 --> 00:17:41.170
a script lit.

00:17:41.170 --> 00:17:41.900
Uh,

00:17:41.900 --> 00:17:42.850
let's have it like this.

00:17:42.850 --> 00:17:43.750
Um,

00:17:43.750 --> 00:17:44.850
I plus plus,

00:17:44.850 --> 00:17:46.120
but first what?

00:17:46.120 --> 00:17:48.110
We just we just type whips.

00:17:48.110 --> 00:17:50.030
That was a problem.

00:17:50.030 --> 00:17:50.640
Yep.

00:17:50.640 --> 00:17:51.920
I've got the same record.

00:17:51.920 --> 00:17:52.980
There we go.

00:17:52.980 --> 00:17:54.170
They've been working Joel for what,

00:17:54.170 --> 00:17:55.420
like seven years,

00:17:55.420 --> 00:17:56.500
And I forgot a semi colon.

00:17:56.500 --> 00:17:58.260
That's how it works.

00:17:58.260 --> 00:17:58.520
Okay?

00:17:58.520 --> 00:17:58.890
And then here,

00:17:58.890 --> 00:17:59.610
we can type.

00:17:59.610 --> 00:18:00.240
Um,

00:18:00.240 --> 00:18:01.850
I But before that,

00:18:01.850 --> 00:18:02.230
we condemn,

00:18:02.230 --> 00:18:02.500
weaken,

00:18:02.500 --> 00:18:05.860
do iterating it or rating.

00:18:05.860 --> 00:18:06.480
What was I doing?

00:18:06.480 --> 00:18:12.050
It rating over element.

00:18:12.050 --> 00:18:13.710
And then I Okay,

00:18:13.710 --> 00:18:15.760
there goes at a break statement here as well.

00:18:15.760 --> 00:18:17.460
Br slash.

00:18:17.460 --> 00:18:19.520
All right,

00:18:19.520 --> 00:18:19.990
there we go.

00:18:19.990 --> 00:18:20.610
Let's save it.

00:18:20.610 --> 00:18:23.100
Let's go ahead and go two hours far.

00:18:23.100 --> 00:18:24.430
E your browser.

00:18:24.430 --> 00:18:25.540
Refresh it.

00:18:25.540 --> 00:18:26.200
And there we go.

00:18:26.200 --> 00:18:30.360
Now we have iterating over element zero than Iterating over element one than Iterating.

00:18:30.360 --> 00:18:31.980
over Element two.

00:18:31.980 --> 00:18:34.240
There's to go ahead and add some,

00:18:34.240 --> 00:18:34.760
uh,

00:18:34.760 --> 00:18:36.430
some fluff.

00:18:36.430 --> 00:18:37.160
Sort of to this.

00:18:37.160 --> 00:18:37.960
Um,

00:18:37.960 --> 00:18:42.440
let's put this into the H one tag.

00:18:42.440 --> 00:18:46.460
There we go and add a break.

00:18:46.460 --> 00:18:47.490
And was that a space years?

00:18:47.490 --> 00:18:47.740
Well,

00:18:47.740 --> 00:18:48.060
all right.

00:18:48.060 --> 00:18:48.850
Now,

00:18:48.850 --> 00:18:50.020
if you go to safari,

00:18:50.020 --> 00:18:50.850
we should.

00:18:50.850 --> 00:18:51.710
There we go.

00:18:51.710 --> 00:18:55.870
So we have iterating over Element one iterating over Element to and then Iterating over

00:18:55.870 --> 00:18:56.970
Element three.

00:18:56.970 --> 00:18:58.390
So pretty cool stuff.

00:18:58.390 --> 00:18:59.300
That's what we can do.

00:18:59.300 --> 00:19:00.440
We can also declare,

00:19:00.440 --> 00:19:00.720
you know,

00:19:00.720 --> 00:19:03.370
just regular four loops like we do in Java.

00:19:03.370 --> 00:19:05.660
Let's go take a look at how we can do that as well.

00:19:05.660 --> 00:19:06.500
Ah,

00:19:06.500 --> 00:19:07.010
here we are.

00:19:07.010 --> 00:19:10.680
So this is the job equivalent of four loop.

00:19:10.680 --> 00:19:12.370
So that was sort of like a for each loop,

00:19:12.370 --> 00:19:13.510
this kind like a four loop.

00:19:13.510 --> 00:19:15.970
We still use the for each tag,

00:19:15.970 --> 00:19:18.010
but it's It's kind of like a four loop.

00:19:18.010 --> 00:19:19.080
It's closer that so anyway,

00:19:19.080 --> 00:19:24.580
we can also write like regular four loops that loop from a certain that look from a certain

00:19:24.580 --> 00:19:27.710
number two another number without having a list to generate over.

00:19:27.710 --> 00:19:32.510
So here we have C for each variable equals eyes is just what we're gonna be calling.

00:19:32.510 --> 00:19:37.300
That's gonna be each number than we begin at one and then end at five.

00:19:37.300 --> 00:19:42.380
And so here all we do is just print currently at number and then I and then closed the for

00:19:42.380 --> 00:19:42.880
each tax.

00:19:42.880 --> 00:19:44.290
So here we assign each number two.

00:19:44.290 --> 00:19:46.710
I then say that began at one and end up five.

00:19:46.710 --> 00:19:48.460
Then we print I'd every loop,

00:19:48.460 --> 00:19:51.300
but this is essentially equivalent to four anti equals,

00:19:51.300 --> 00:19:53.100
one eyes within five I plus plus.

00:19:53.100 --> 00:19:54.660
So it was pretty much the same exact thing,

00:19:54.660 --> 00:19:57.880
and then there were there would obviously be smelt Berlin.

00:19:57.880 --> 00:19:59.350
Um,

00:19:59.350 --> 00:20:01.530
the amount of land currently I number I here,

00:20:01.530 --> 00:20:05.450
But I just didn't do that because I will take too much time.

00:20:05.450 --> 00:20:07.720
I don't have the extra seven seconds or so.

00:20:07.720 --> 00:20:08.460
So yeah.

00:20:08.460 --> 00:20:08.920
Anyway,

00:20:08.920 --> 00:20:11.760
I was going to take a look at how this will work in the code.

00:20:11.760 --> 00:20:13.430
All right,

00:20:13.430 --> 00:20:14.450
that's going to leave this,

00:20:14.450 --> 00:20:16.720
okay?

00:20:16.720 --> 00:20:17.090
And so here,

00:20:17.090 --> 00:20:18.010
we're gonna do well,

00:20:18.010 --> 00:20:18.990
it's going to lead this as well.

00:20:18.990 --> 00:20:20.110
So we're going to see,

00:20:20.110 --> 00:20:33.120
for each variable equals I start equals one end equals,

00:20:33.120 --> 00:20:36.350
um five.

00:20:36.350 --> 00:20:38.590
Okay.

00:20:38.590 --> 00:20:38.990
And honestly,

00:20:38.990 --> 00:20:39.200
you know,

00:20:39.200 --> 00:20:40.680
you could use a lot of different values here,

00:20:40.680 --> 00:20:41.850
so you don't necessarily use.

00:20:41.850 --> 00:20:43.190
I won five and so on.

00:20:43.190 --> 00:20:44.880
All right.

00:20:44.880 --> 00:20:45.310
And then here,

00:20:45.310 --> 00:20:45.760
let's do,

00:20:45.760 --> 00:20:46.450
um,

00:20:46.450 --> 00:20:54.160
um currently at variable number.

00:20:54.160 --> 00:20:58.300
And then let's do a dollar sign.

00:20:58.300 --> 00:21:01.450
There we go.

00:21:01.450 --> 00:21:02.260
All right,

00:21:02.260 --> 00:21:05.190
let's go to our rouser.

00:21:05.190 --> 00:21:11.640
Let's refresh and we get and air.

00:21:11.640 --> 00:21:12.130
Let me take a look.

00:21:12.130 --> 00:21:13.450
Exactly what happened here.

00:21:13.450 --> 00:21:16.140
Here we are.

00:21:16.140 --> 00:21:17.050
Totally,

00:21:17.050 --> 00:21:21.120
totally sort of Blanked out there.

00:21:21.120 --> 00:21:23.350
Put a start instead of begin.

00:21:23.350 --> 00:21:24.430
All right,

00:21:24.430 --> 00:21:24.990
There we go.

00:21:24.990 --> 00:21:26.790
And so now in safari,

00:21:26.790 --> 00:21:28.660
we should be good to go there.

00:21:28.660 --> 00:21:29.840
A ghost we have currently available.

00:21:29.840 --> 00:21:32.430
I couldn't even variable number one currently available.

00:21:32.430 --> 00:21:33.180
Number two listeners.

00:21:33.180 --> 00:21:34.900
Let me actually going to add a break statement here.

00:21:34.900 --> 00:21:37.660
Just It looks like a cleaner.

00:21:37.660 --> 00:21:40.380
There we go.

00:21:40.380 --> 00:21:42.640
It's too safari.

00:21:42.640 --> 00:21:44.100
And now there we go Currently.

00:21:44.100 --> 00:21:46.920
Variable number one available number 234 and five.

00:21:46.920 --> 00:21:47.340
And so on.

00:21:47.340 --> 00:21:47.770
So,

00:21:47.770 --> 00:21:47.970
yes,

00:21:47.970 --> 00:21:48.610
there we go.

00:21:48.610 --> 00:21:52.950
That essentially how we create a regular four loop in jsp?

00:21:52.950 --> 00:21:54.390
All right.

00:21:54.390 --> 00:21:56.400
Essentially,

00:21:56.400 --> 00:21:58.790
how we use loops inside J speed.

00:21:58.790 --> 00:21:59.720
It's actually pretty useful.

00:21:59.720 --> 00:21:59.980
So,

00:21:59.980 --> 00:22:01.590
as I said with the forum example,

00:22:01.590 --> 00:22:03.870
that's actually a very good example.

00:22:03.870 --> 00:22:07.310
So you have a forum and you have a certain number of threads,

00:22:07.310 --> 00:22:07.710
right?

00:22:07.710 --> 00:22:08.560
I want you know,

00:22:08.560 --> 00:22:09.610
it would be threats.

00:22:09.610 --> 00:22:10.490
It would be answered.

00:22:10.490 --> 00:22:10.630
So,

00:22:10.630 --> 00:22:10.770
like,

00:22:10.770 --> 00:22:12.380
a person asked me a question like,

00:22:12.380 --> 00:22:15.530
I know how much Ramdas my computer have.

00:22:15.530 --> 00:22:20.260
And then you have 15 answers of people telling him how ah,

00:22:20.260 --> 00:22:23.140
Forum is not a place for to ask those questions.

00:22:23.140 --> 00:22:24.050
Look it up on Google.

00:22:24.050 --> 00:22:27.160
There's what that's already been answered for your computer 1000 times,

00:22:27.160 --> 00:22:29.320
and you have 15 of those threats,

00:22:29.320 --> 00:22:31.220
and then you put them into a list.

00:22:31.220 --> 00:22:34.100
Then in your JSP file,

00:22:34.100 --> 00:22:36.770
you do for each element in that list,

00:22:36.770 --> 00:22:41.460
you sort of add it to the front end html file.

00:22:41.460 --> 00:22:42.160
Add in,

00:22:42.160 --> 00:22:42.480
you know,

00:22:42.480 --> 00:22:44.630
some front end.

00:22:44.630 --> 00:22:45.780
So you had CSS,

00:22:45.780 --> 00:22:46.380
javascript,

00:22:46.380 --> 00:22:47.160
whatever you want.

00:22:47.160 --> 00:22:47.930
Um,

00:22:47.930 --> 00:22:49.100
and then using that,

00:22:49.100 --> 00:22:53.620
you actually sort of create your forum page.

00:22:53.620 --> 00:22:56.660
So that's one of the examples where you can actually use that.

00:22:56.660 --> 00:22:58.250
Okay.

00:22:58.250 --> 00:22:58.920
So that essentially,

00:22:58.920 --> 00:23:03.450
how we go over use four loops inside J speech and I was going to sign you some homework.

00:23:03.450 --> 00:23:04.590
Okay,

00:23:04.590 --> 00:23:04.700
So,

00:23:04.700 --> 00:23:04.970
homework.

00:23:04.970 --> 00:23:05.840
A little bit more difficult,

00:23:05.840 --> 00:23:09.110
difficult today instead of as compared to last time.

00:23:09.110 --> 00:23:13.010
So we're gonna create application that takes that take puts.

00:23:13.010 --> 00:23:13.550
Let me fix that.

00:23:13.550 --> 00:23:14.050
Real quick.

00:23:14.050 --> 00:23:15.360
Yo,

00:23:15.360 --> 00:23:16.470
I'm magically fixed it.

00:23:16.470 --> 00:23:17.020
Okay,

00:23:17.020 --> 00:23:17.140
So,

00:23:17.140 --> 00:23:21.350
Grant application that puts an integer list into model and then says,

00:23:21.350 --> 00:23:26.180
if each list element is odd or even and just be so pretty simple stuff just great a loop

00:23:26.180 --> 00:23:30.580
that loops over haven't if statement had every single part.

00:23:30.580 --> 00:23:31.980
And then if it's even print,

00:23:31.980 --> 00:23:33.780
it's even if odd print.

00:23:33.780 --> 00:23:34.360
It's odd,

00:23:34.360 --> 00:23:35.840
and the numbers will interpret the numbers.

00:23:35.840 --> 00:23:36.130
Well,

00:23:36.130 --> 00:23:36.740
so yeah,

00:23:36.740 --> 00:23:38.580
so it is a bit more complex,

00:23:38.580 --> 00:23:39.240
but nevertheless,

00:23:39.240 --> 00:23:39.970
it is doable.

00:23:39.970 --> 00:23:42.550
We've we know we went over all of this just now,

00:23:42.550 --> 00:23:46.800
and you actually did part of homeworks the out or even part we did from accusing to add the

00:23:46.800 --> 00:23:46.800
,

00:23:46.800 --> 00:23:47.430
um,

00:23:47.430 --> 00:23:49.760
functionality for the,

00:23:49.760 --> 00:23:50.260
um,

00:23:50.260 --> 00:23:52.140
loop looping over the list.

00:23:52.140 --> 00:23:52.510
Yeah,

00:23:52.510 --> 00:23:53.190
pretty simple stuff.

00:23:53.190 --> 00:23:53.750
Anyway,

00:23:53.750 --> 00:23:54.600
without further ado,

00:23:54.600 --> 00:23:55.860
I wish you luck with homework,

00:23:55.860 --> 00:23:56.220
and,

00:23:56.220 --> 00:23:56.450
uh,

00:23:56.450 --> 00:23:57.640
I'll see next time

