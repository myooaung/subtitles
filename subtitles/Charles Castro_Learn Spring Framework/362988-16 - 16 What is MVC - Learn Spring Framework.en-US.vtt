WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.540
Hello there.

00:00:00.540 --> 00:00:02.600
And welcome back to this spring development,

00:00:02.600 --> 00:00:03.150
Of course.

00:00:03.150 --> 00:00:10.360
So last time we were essentially just went over how we can create a wet project using

00:00:10.360 --> 00:00:11.980
spring model view controller.

00:00:11.980 --> 00:00:17.720
So today we're essentially going to be going over what exactly we did last time.

00:00:17.720 --> 00:00:22.430
So some of you may perhaps be panicking a little bit because you're thinking,

00:00:22.430 --> 00:00:23.800
What in the world was that?

00:00:23.800 --> 00:00:25.560
What is a dispatcher?

00:00:25.560 --> 00:00:26.210
Serval it.

00:00:26.210 --> 00:00:27.920
What's a controller?

00:00:27.920 --> 00:00:28.690
Um,

00:00:28.690 --> 00:00:29.570
you know,

00:00:29.570 --> 00:00:33.550
why did JSP work and html not work?

00:00:33.550 --> 00:00:34.780
It's,

00:00:34.780 --> 00:00:35.370
you know,

00:00:35.370 --> 00:00:37.000
everything's everything's gone.

00:00:37.000 --> 00:00:38.050
We might as well give up.

00:00:38.050 --> 00:00:38.930
Don't worry about it.

00:00:38.930 --> 00:00:42.360
So essentially what we did in the last lesson,

00:00:42.360 --> 00:00:47.280
we're going to spend the majority of the rest of this course explaining and sort of going

00:00:47.280 --> 00:00:48.470
over that in more detail.

00:00:48.470 --> 00:00:51.530
So they have a very clear idea of exactly what happened,

00:00:51.530 --> 00:00:52.820
what we did there.

00:00:52.820 --> 00:00:57.460
So I understand it may seem like we're spending a lot of time explaining something very

00:00:57.460 --> 00:00:57.990
little,

00:00:57.990 --> 00:01:00.880
but in a very large inverting,

00:01:00.880 --> 00:01:02.820
very large way,

00:01:02.820 --> 00:01:07.960
that is pretty much a big chunk of what there is to spring.

00:01:07.960 --> 00:01:13.250
So understanding everything else with spring after that becomes much easier.

00:01:13.250 --> 00:01:14.810
All right.

00:01:14.810 --> 00:01:14.990
So now,

00:01:14.990 --> 00:01:15.690
without further ado,

00:01:15.690 --> 00:01:16.890
let's get into spring.

00:01:16.890 --> 00:01:20.300
NBC is never gonna be going over exactly what M.

00:01:20.300 --> 00:01:20.640
V.

00:01:20.640 --> 00:01:21.190
C.

00:01:21.190 --> 00:01:21.770
Is.

00:01:21.770 --> 00:01:23.830
All right,

00:01:23.830 --> 00:01:28.030
so the spring M V C framework provides model view,

00:01:28.030 --> 00:01:32.880
controller architecture and ready components that can be used to develop flexible and

00:01:32.880 --> 00:01:35.170
loosely coupled Web application.

00:01:35.170 --> 00:01:41.200
The NBC pattern results in separating the different aspects of the application input,

00:01:41.200 --> 00:01:41.550
logic,

00:01:41.550 --> 00:01:45.630
business logic and urologic while providing a loose coupling between these elements.

00:01:45.630 --> 00:01:47.290
So what exactly does this meat?

00:01:47.290 --> 00:01:47.640
Well,

00:01:47.640 --> 00:01:48.290
essentially,

00:01:48.290 --> 00:01:48.890
um,

00:01:48.890 --> 00:01:49.480
M V.

00:01:49.480 --> 00:01:49.860
C.

00:01:49.860 --> 00:01:51.950
Stands for a model of you control set.

00:01:51.950 --> 00:01:57.420
So model view controller essentially just three parts of oven application.

00:01:57.420 --> 00:02:00.460
So the model it right here you can see.

00:02:00.460 --> 00:02:01.850
And actually it's the application data,

00:02:01.850 --> 00:02:03.800
and in general they will consist of Poggio.

00:02:03.800 --> 00:02:05.490
So essentially model can be,

00:02:05.490 --> 00:02:05.840
you know,

00:02:05.840 --> 00:02:09.450
your point class like we did previously.

00:02:09.450 --> 00:02:11.200
So point a point class,

00:02:11.200 --> 00:02:11.850
you know,

00:02:11.850 --> 00:02:15.490
in X and y get X get why and so on it's on.

00:02:15.490 --> 00:02:18.110
That would be an example of a model.

00:02:18.110 --> 00:02:18.500
It is,

00:02:18.500 --> 00:02:18.860
additionally,

00:02:18.860 --> 00:02:20.430
just have to be that one class.

00:02:20.430 --> 00:02:22.750
It could be a bunch of different classes that essentially do that.

00:02:22.750 --> 00:02:25.210
The model can also be.

00:02:25.210 --> 00:02:25.790
You know,

00:02:25.790 --> 00:02:27.870
um ah,

00:02:27.870 --> 00:02:28.120
you know,

00:02:28.120 --> 00:02:31.450
some database access objects as well.

00:02:31.450 --> 00:02:32.240
So yeah,

00:02:32.240 --> 00:02:32.600
you know,

00:02:32.600 --> 00:02:33.430
it's pretty spree.

00:02:33.430 --> 00:02:36.170
Flexible is just something that connects to our data.

00:02:36.170 --> 00:02:36.540
Sort of,

00:02:36.540 --> 00:02:38.100
um,

00:02:38.100 --> 00:02:38.740
actually,

00:02:38.740 --> 00:02:38.850
no,

00:02:38.850 --> 00:02:39.470
not connected.

00:02:39.470 --> 00:02:40.790
Something that stores our data.

00:02:40.790 --> 00:02:41.990
The view.

00:02:41.990 --> 00:02:42.280
All right.

00:02:42.280 --> 00:02:45.580
So view view is responsible for rendering the model data,

00:02:45.580 --> 00:02:46.340
and in general,

00:02:46.340 --> 00:02:49.790
it generates html output that the clients browser can interpret.

00:02:49.790 --> 00:02:51.140
So what've you means,

00:02:51.140 --> 00:02:53.460
essentially is visuals.

00:02:53.460 --> 00:02:54.880
So in our case,

00:02:54.880 --> 00:02:55.880
the view was,

00:02:55.880 --> 00:02:59.340
um jsp or no HTML.

00:02:59.340 --> 00:03:00.710
We used html Andrzej speeds,

00:03:00.710 --> 00:03:00.800
so,

00:03:00.800 --> 00:03:01.020
yes,

00:03:01.020 --> 00:03:01.790
pretty much same thing.

00:03:01.790 --> 00:03:05.270
Jsp isn't converted into a servant,

00:03:05.270 --> 00:03:08.270
which is then converted into h into HTML.

00:03:08.270 --> 00:03:08.670
So yeah.

00:03:08.670 --> 00:03:08.810
So,

00:03:08.810 --> 00:03:09.570
generally speaking,

00:03:09.570 --> 00:03:10.350
um,

00:03:10.350 --> 00:03:12.380
direction was not converted into email.

00:03:12.380 --> 00:03:13.500
It returned.

00:03:13.500 --> 00:03:13.950
Hmm.

00:03:13.950 --> 00:03:15.490
Certainly return these to.

00:03:15.490 --> 00:03:16.030
So,

00:03:16.030 --> 00:03:16.290
yeah,

00:03:16.290 --> 00:03:18.420
essentially the view part.

00:03:18.420 --> 00:03:20.370
And we'll go over examples of this shortly.

00:03:20.370 --> 00:03:21.360
And finally,

00:03:21.360 --> 00:03:26.950
the controller is responsible for processing user requests and building an appropriate

00:03:26.950 --> 00:03:31.410
model and passes it to the view for rendering the controller is something that,

00:03:31.410 --> 00:03:31.960
um,

00:03:31.960 --> 00:03:33.730
sort of connects,

00:03:33.730 --> 00:03:34.970
model and view.

00:03:34.970 --> 00:03:37.240
So it sits there,

00:03:37.240 --> 00:03:38.740
And when we refer to that controller,

00:03:38.740 --> 00:03:39.140
it says,

00:03:39.140 --> 00:03:39.540
Oh,

00:03:39.540 --> 00:03:41.180
you're referring to me and,

00:03:41.180 --> 00:03:43.350
uh I,

00:03:43.350 --> 00:03:48.700
as a specific controller need to give you all the points in the database,

00:03:48.700 --> 00:03:49.190
for example,

00:03:49.190 --> 00:03:53.450
so he gets all the points in database and then he sends them over to of you,

00:03:53.450 --> 00:03:56.530
which then displays them essentially eventually,

00:03:56.530 --> 00:03:58.050
just an example of what a controller could do.

00:03:58.050 --> 00:04:03.450
So it's going to take a look at courting examples of all of these of these three different

00:04:03.450 --> 00:04:09.310
types of Cody is all right,

00:04:09.310 --> 00:04:10.480
So motto so model,

00:04:10.480 --> 00:04:10.940
for example,

00:04:10.940 --> 00:04:16.900
we can have a Poggio so public class point private double X profitable.

00:04:16.900 --> 00:04:19.900
Why get X get why set exit,

00:04:19.900 --> 00:04:22.350
why and then blueprint Boolean equals.

00:04:22.350 --> 00:04:23.320
Actually,

00:04:23.320 --> 00:04:23.920
that's just to,

00:04:23.920 --> 00:04:25.640
uh is usually when you have a Poggio.

00:04:25.640 --> 00:04:27.550
Usually what do we actually get error here?

00:04:27.550 --> 00:04:29.800
Since you don't return the bullion anyway,

00:04:29.800 --> 00:04:30.330
you get the idea.

00:04:30.330 --> 00:04:33.550
So it's essentially just an example of a model class again.

00:04:33.550 --> 00:04:36.530
It could also be a database taxes object as well.

00:04:36.530 --> 00:04:37.200
So you know,

00:04:37.200 --> 00:04:38.600
it doesn't necessarily have to be a Pooja,

00:04:38.600 --> 00:04:40.020
but usually it actually is,

00:04:40.020 --> 00:04:41.450
and especially later on,

00:04:41.450 --> 00:04:45.340
perhaps will touch on database access in spring.

00:04:45.340 --> 00:04:47.690
But generally speaking,

00:04:47.690 --> 00:04:52.940
my preferred way to accident a base would be to use something called spring Data.

00:04:52.940 --> 00:04:53.680
Essentially,

00:04:53.680 --> 00:04:57.000
it just it simplifies things quite a bit.

00:04:57.000 --> 00:04:57.680
So instead of doing,

00:04:57.680 --> 00:04:58.020
you know,

00:04:58.020 --> 00:05:00.790
database queries,

00:05:00.790 --> 00:05:03.360
like select all from table,

00:05:03.360 --> 00:05:08.910
we can just do insert into table and then passing an object and automatically inserted for

00:05:08.910 --> 00:05:10.660
us So we actually tax the type any?

00:05:10.660 --> 00:05:14.050
Um SQL Yeah.

00:05:14.050 --> 00:05:15.650
All right.

00:05:15.650 --> 00:05:16.110
So anyway,

00:05:16.110 --> 00:05:17.490
and that could be a model as well.

00:05:17.490 --> 00:05:17.990
All right,

00:05:17.990 --> 00:05:18.450
so,

00:05:18.450 --> 00:05:18.950
um,

00:05:18.950 --> 00:05:19.780
view.

00:05:19.780 --> 00:05:22.210
So here is an example of our view,

00:05:22.210 --> 00:05:23.060
So here we have Ah,

00:05:23.060 --> 00:05:23.640
point class.

00:05:23.640 --> 00:05:25.940
And here we have X equals point.

00:05:25.940 --> 00:05:26.300
Why?

00:05:26.300 --> 00:05:26.630
And why?

00:05:26.630 --> 00:05:29.990
Equals Point X equals point X and y equals point.

00:05:29.990 --> 00:05:30.330
Why?

00:05:30.330 --> 00:05:32.870
Actually hear what I'm actually doing is,

00:05:32.870 --> 00:05:35.770
um uh,

00:05:35.770 --> 00:05:36.860
point X and point.

00:05:36.860 --> 00:05:42.740
Why are going to be request attributes and in Jsp and or to get request that tribute,

00:05:42.740 --> 00:05:45.830
You just do the dollar sign and then curly brackets,

00:05:45.830 --> 00:05:48.230
You put in the name of the request attributes.

00:05:48.230 --> 00:05:50.240
They want to get a little return that's in this gate,

00:05:50.240 --> 00:05:52.760
it'll turn X equals and in some request attributes.

00:05:52.760 --> 00:05:54.380
All right,

00:05:54.380 --> 00:05:55.070
Okay.

00:05:55.070 --> 00:05:56.680
And then finally take a look at the controller.

00:05:56.680 --> 00:05:57.800
So here's a controller.

00:05:57.800 --> 00:05:58.870
Um,

00:05:58.870 --> 00:06:00.890
we have are as controller annotation.

00:06:00.890 --> 00:06:01.290
What?

00:06:01.290 --> 00:06:06.410
Just tell that tells us that this app is this class app is a controller Marks.

00:06:06.410 --> 00:06:06.550
You know,

00:06:06.550 --> 00:06:08.700
it doesn't tell us that till spring that but yeah,

00:06:08.700 --> 00:06:11.210
you could you get the idea and then request mapping.

00:06:11.210 --> 00:06:16.180
Senator says that when we type get points or do slash get point ill send us to this

00:06:16.180 --> 00:06:16.760
controller.

00:06:16.760 --> 00:06:18.930
So then inside this controller,

00:06:18.930 --> 00:06:22.760
we have get point model and view MV All right.

00:06:22.760 --> 00:06:24.860
Um So model and view,

00:06:24.860 --> 00:06:25.470
Essentially,

00:06:25.470 --> 00:06:26.060
we went over.

00:06:26.060 --> 00:06:27.000
What model is and we you know,

00:06:27.000 --> 00:06:30.350
we went over What view is we have a model and then view here.

00:06:30.350 --> 00:06:32.490
So then we have in model in view,

00:06:32.490 --> 00:06:34.470
we have point p equals new point.

00:06:34.470 --> 00:06:36.650
We create a new point from our we have point here.

00:06:36.650 --> 00:06:38.150
So public last point.

00:06:38.150 --> 00:06:39.810
So we create point point,

00:06:39.810 --> 00:06:44.350
we do P dots that x 12.4 p dots that why 45.6?

00:06:44.350 --> 00:06:47.290
Then we add the object p dark,

00:06:47.290 --> 00:06:48.180
get X.

00:06:48.180 --> 00:06:48.930
You know,

00:06:48.930 --> 00:06:50.550
we get X frumpy.

00:06:50.550 --> 00:06:55.060
So this is gonna get totally for And that adds that using the name point X.

00:06:55.060 --> 00:06:57.680
And then we also do the same thing for why,

00:06:57.680 --> 00:07:00.430
and then we set the view name to Web in slash.

00:07:00.430 --> 00:07:00.640
Hello,

00:07:00.640 --> 00:07:01.570
world Dutch SB.

00:07:01.570 --> 00:07:02.990
And so when we return,

00:07:02.990 --> 00:07:08.180
M V spring will automatically understand that we need to go to Web inf slash Hello,

00:07:08.180 --> 00:07:10.630
world our jsp And then we got redirected.

00:07:10.630 --> 00:07:12.650
Redirect us too.

00:07:12.650 --> 00:07:13.930
This view here,

00:07:13.930 --> 00:07:14.720
essentially,

00:07:14.720 --> 00:07:16.500
we sort of link,

00:07:16.500 --> 00:07:17.200
uh,

00:07:17.200 --> 00:07:18.580
the model and the view.

00:07:18.580 --> 00:07:21.250
So graphics and data.

00:07:21.250 --> 00:07:23.680
So now let's take a look at how this works in the code,

00:07:23.680 --> 00:07:24.590
all right?

00:07:24.590 --> 00:07:25.450
It's a really first.

00:07:25.450 --> 00:07:25.920
So first of all,

00:07:25.920 --> 00:07:27.230
we're gonna take a look at,

00:07:27.230 --> 00:07:28.040
um,

00:07:28.040 --> 00:07:32.740
just the controller since and I actually did have some of this stuff already prepared.

00:07:32.740 --> 00:07:33.490
Um,

00:07:33.490 --> 00:07:35.840
so we're not really gonna ride out together?

00:07:35.840 --> 00:07:36.030
I mean,

00:07:36.030 --> 00:07:36.770
I have to,

00:07:36.770 --> 00:07:37.150
in any way,

00:07:37.150 --> 00:07:39.050
do them for the power point.

00:07:39.050 --> 00:07:42.810
So this might just do it ahead of time and then just copy them into PowerPoint.

00:07:42.810 --> 00:07:43.890
So that's at work,

00:07:43.890 --> 00:07:44.220
sort of,

00:07:44.220 --> 00:07:45.260
but yeah.

00:07:45.260 --> 00:07:45.780
Anyways,

00:07:45.780 --> 00:07:45.980
here,

00:07:45.980 --> 00:07:49.110
essentially the controller that we've created this controller I mean,

00:07:49.110 --> 00:07:49.620
by the way,

00:07:49.620 --> 00:07:50.440
in this project,

00:07:50.440 --> 00:07:52.010
go don't pay attention to anything else.

00:07:52.010 --> 00:07:54.680
So we have this dispatcher serve it here.

00:07:54.680 --> 00:07:55.890
We have this,

00:07:55.890 --> 00:07:56.380
um,

00:07:56.380 --> 00:07:58.550
NBC servant and so on and so on.

00:07:58.550 --> 00:08:02.380
Don't worry about this for now we're actually going over that later on.

00:08:02.380 --> 00:08:02.670
For now.

00:08:02.670 --> 00:08:07.590
Just this is just the same exact thing as are the same exact implication that we've created

00:08:07.590 --> 00:08:09.600
last time with minor,

00:08:09.600 --> 00:08:11.990
some minor key differences that we're gonna be going over here.

00:08:11.990 --> 00:08:12.840
So anyway,

00:08:12.840 --> 00:08:13.310
um,

00:08:13.310 --> 00:08:14.930
in this case,

00:08:14.930 --> 00:08:17.220
we have their quest mapping to get points.

00:08:17.220 --> 00:08:17.520
Essentially,

00:08:17.520 --> 00:08:18.830
wouldn't we type in slash get point.

00:08:18.830 --> 00:08:22.220
It'll go to this controller right Then we also have a point.

00:08:22.220 --> 00:08:23.840
P equals new point.

00:08:23.840 --> 00:08:25.270
So we create a new point.

00:08:25.270 --> 00:08:29.160
Then we do Pete outset x 12.4 ps at wide 45.6.

00:08:29.160 --> 00:08:31.410
Then we add the object point X,

00:08:31.410 --> 00:08:31.910
um,

00:08:31.910 --> 00:08:33.340
with the name point X.

00:08:33.340 --> 00:08:38.090
And the object is after we're adding is Peter get X and then do the same thing for point.

00:08:38.090 --> 00:08:38.330
Why?

00:08:38.330 --> 00:08:39.930
And then redirect to hello world.

00:08:39.930 --> 00:08:40.560
Let us peace.

00:08:40.560 --> 00:08:47.150
We put that into the model and then in hello world our jsp if you go to it.

00:08:47.150 --> 00:08:50.230
Okay,

00:08:50.230 --> 00:08:56.740
so here we have just an h one with X is equal to point X And then why is equal to point?

00:08:56.740 --> 00:08:57.020
Why?

00:08:57.020 --> 00:09:02.900
So it will get it from the request and we set the request variables here.

00:09:02.900 --> 00:09:03.540
Right here.

00:09:03.540 --> 00:09:03.890
So,

00:09:03.890 --> 00:09:04.720
Poindexter,

00:09:04.720 --> 00:09:05.220
point why?

00:09:05.220 --> 00:09:05.710
Okay,

00:09:05.710 --> 00:09:06.650
so pretty simple.

00:09:06.650 --> 00:09:07.870
All right,

00:09:07.870 --> 00:09:10.300
so now we also have our last part.

00:09:10.300 --> 00:09:10.920
The model.

00:09:10.920 --> 00:09:12.050
So here's a point.

00:09:12.050 --> 00:09:13.640
Public class point,

00:09:13.640 --> 00:09:14.630
double X double.

00:09:14.630 --> 00:09:14.930
Why?

00:09:14.930 --> 00:09:15.740
Pretty simple.

00:09:15.740 --> 00:09:17.290
The bullion equals Here's commented outs.

00:09:17.290 --> 00:09:17.540
Infinite.

00:09:17.540 --> 00:09:18.800
Really need it for this point,

00:09:18.800 --> 00:09:20.410
but for this application.

00:09:20.410 --> 00:09:20.650
But,

00:09:20.650 --> 00:09:20.810
you know,

00:09:20.810 --> 00:09:21.340
speaking you what?

00:09:21.340 --> 00:09:23.310
Having equals as well in a poacher.

00:09:23.310 --> 00:09:24.320
All right,

00:09:24.320 --> 00:09:25.690
so let's run this and see what we get.

00:09:25.690 --> 00:09:26.250
Um,

00:09:26.250 --> 00:09:27.050
yeah.

00:09:27.050 --> 00:09:29.470
Uh,

00:09:29.470 --> 00:09:30.290
save the changes.

00:09:30.290 --> 00:09:30.810
Obviously.

00:09:30.810 --> 00:09:33.390
Wait.

00:09:33.390 --> 00:09:36.010
Like a couple a couple seconds.

00:09:36.010 --> 00:09:38.970
There we go.

00:09:38.970 --> 00:09:39.650
It's starting up.

00:09:39.650 --> 00:09:41.900
All right,

00:09:41.900 --> 00:09:42.300
here we go.

00:09:42.300 --> 00:09:46.250
Tom Kitt usually takes quite a quite a quite a long while to start up.

00:09:46.250 --> 00:09:48.130
Okay.

00:09:48.130 --> 00:09:48.690
And there we go.

00:09:48.690 --> 00:09:49.270
All right,

00:09:49.270 --> 00:09:51.000
So let's go to chrome and see what we get.

00:09:51.000 --> 00:09:52.080
All right,

00:09:52.080 --> 00:09:52.910
So now that we're in chrome,

00:09:52.910 --> 00:09:54.850
let's go ahead and go to local host,

00:09:54.850 --> 00:09:56.230
uh,

00:09:56.230 --> 00:10:04.610
local hosts a local host host 80 80 slash web artifact slash.

00:10:04.610 --> 00:10:05.860
Okay,

00:10:05.860 --> 00:10:09.710
So I think it's actually check really quickly in eclipse.

00:10:09.710 --> 00:10:09.950
Yeah,

00:10:09.950 --> 00:10:12.880
we have get point.

00:10:12.880 --> 00:10:13.080
Yeah,

00:10:13.080 --> 00:10:15.470
so not not to that.

00:10:15.470 --> 00:10:17.230
So yet.

00:10:17.230 --> 00:10:18.050
Point.

00:10:18.050 --> 00:10:20.290
All right.

00:10:20.290 --> 00:10:20.860
And there we go.

00:10:20.860 --> 00:10:27.490
So you can see now we have X is equal to 12.4 and why is equal to 45.6?

00:10:27.490 --> 00:10:29.090
So what has happened?

00:10:29.090 --> 00:10:29.550
Well,

00:10:29.550 --> 00:10:31.480
in eclipse,

00:10:31.480 --> 00:10:37.910
you can see how we get set p dot said X to 12.4 and then p dots that Why to 45.6.

00:10:37.910 --> 00:10:39.780
Then we add the object.

00:10:39.780 --> 00:10:49.050
We've add the object point x two at an object with the name point X to the request or the

00:10:49.050 --> 00:10:50.580
model of,

00:10:50.580 --> 00:10:51.350
um,

00:10:51.350 --> 00:10:58.930
our model in view here there will be passed on to this here view and then this you will

00:10:58.930 --> 00:11:00.320
display point X and point.

00:11:00.320 --> 00:11:00.610
Why?

00:11:00.610 --> 00:11:01.190
Accordingly.

00:11:01.190 --> 00:11:01.780
OK,

00:11:01.780 --> 00:11:02.650
so right,

00:11:02.650 --> 00:11:03.500
That's pretty simple.

00:11:03.500 --> 00:11:04.060
Essentially,

00:11:04.060 --> 00:11:05.310
how that works,

00:11:05.310 --> 00:11:10.940
how m v c works in general and NBC is actually a core idea of the spring ecosystem.

00:11:10.940 --> 00:11:12.670
So even later on,

00:11:12.670 --> 00:11:15.210
if you are going to be coming over to spring boot,

00:11:15.210 --> 00:11:16.110
um,

00:11:16.110 --> 00:11:17.620
NBC will still play a big role.

00:11:17.620 --> 00:11:24.060
And you're still gonna use em D c and sort of the NBC pattern for your applications for the

00:11:24.060 --> 00:11:24.650
most part.

00:11:24.650 --> 00:11:26.290
Okay,

00:11:26.290 --> 00:11:27.650
so that's pretty simple.

00:11:27.650 --> 00:11:28.050
Now,

00:11:28.050 --> 00:11:28.830
of course,

00:11:28.830 --> 00:11:29.670
we have a problem.

00:11:29.670 --> 00:11:33.020
How exactly does our application no,

00:11:33.020 --> 00:11:34.800
till goto a specific part.

00:11:34.800 --> 00:11:39.680
So How does it know that we want to go to this method and not,

00:11:39.680 --> 00:11:39.850
you know,

00:11:39.850 --> 00:11:40.670
somewhere else.

00:11:40.670 --> 00:11:42.660
So Well,

00:11:42.660 --> 00:11:45.360
it's long story,

00:11:45.360 --> 00:11:46.040
short it,

00:11:46.040 --> 00:11:48.300
using the dispatcher service,

00:11:48.300 --> 00:11:50.810
which we're going to be going over in the next episode.

00:11:50.810 --> 00:11:54.340
So your homework is to clearly understand what M.

00:11:54.340 --> 00:11:54.510
V.

00:11:54.510 --> 00:11:57.820
C is and what Brian NBC just model you controller.

00:11:57.820 --> 00:12:02.670
But your job is to understand what model is what view is and what controller is and to

00:12:02.670 --> 00:12:05.650
understand what relation they have to each other.

00:12:05.650 --> 00:12:08.300
So no coding homework here,

00:12:08.300 --> 00:12:10.280
since we've are essentially already created an M v.

00:12:10.280 --> 00:12:11.750
C in the last lesson.

00:12:11.750 --> 00:12:13.400
But that said,

00:12:13.400 --> 00:12:15.950
I have a soul understanding of it so that we can move on.

00:12:15.950 --> 00:12:17.050
So anyway,

00:12:17.050 --> 00:12:17.550
um,

00:12:17.550 --> 00:12:18.410
make sure you do that,

00:12:18.410 --> 00:12:20.040
and without further ado,

00:12:20.040 --> 00:12:21.350
I'll see you next time soon.

