WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.080
Hello there and welcome back to the spring development course.

00:00:03.080 --> 00:00:11.790
So last time we went over the ref tag inner beans and property tag,

00:00:11.790 --> 00:00:13.280
we already went over a ref,

00:00:13.280 --> 00:00:16.390
Tegan Inter end and property tag before that,

00:00:16.390 --> 00:00:17.180
you know,

00:00:17.180 --> 00:00:21.060
we just sort of refreshed and really organized our knowledge with them.

00:00:21.060 --> 00:00:23.470
But the intervenes tag was actually knew.

00:00:23.470 --> 00:00:25.020
So that's why we had some homework for it.

00:00:25.020 --> 00:00:29.590
So your job for homework was to create a size class,

00:00:29.590 --> 00:00:30.590
uh,

00:00:30.590 --> 00:00:35.490
being to be more precise and add it to,

00:00:35.490 --> 00:00:36.070
at a size,

00:00:36.070 --> 00:00:37.340
a tribute to our animal class.

00:00:37.340 --> 00:00:38.620
So right here,

00:00:38.620 --> 00:00:39.830
part private size,

00:00:39.830 --> 00:00:43.450
size their corresponding getters and matters as well as a constructor,

00:00:43.450 --> 00:00:44.600
um,

00:00:44.600 --> 00:00:53.040
and then create a size and intervene a size inner bean inside our beings or XML file and

00:00:53.040 --> 00:01:00.520
assign the size attribute off animal to some intervene that we've created.

00:01:00.520 --> 00:01:01.640
So you're essentially should have done.

00:01:01.640 --> 00:01:04.050
You hear of a being class calm example.

00:01:04.050 --> 00:01:04.950
Package size,

00:01:04.950 --> 00:01:07.510
but charger argument index equals zero.

00:01:07.510 --> 00:01:09.570
Values equals 12.6 control.

00:01:09.570 --> 00:01:13.850
Your argument equal index equals one value equals 13.4,

00:01:13.850 --> 00:01:14.990
you know.

00:01:14.990 --> 00:01:16.780
So just in our science classes here,

00:01:16.780 --> 00:01:17.330
constructors,

00:01:17.330 --> 00:01:20.410
so wait is set to 12.6.

00:01:20.410 --> 00:01:24.650
And then height is set to 13.4,

00:01:24.650 --> 00:01:25.490
Um,

00:01:25.490 --> 00:01:27.210
and then in our animal class.

00:01:27.210 --> 00:01:30.680
And then that is set to the property name size inside our animal class,

00:01:30.680 --> 00:01:33.130
and that is set to a bean i d zebra.

00:01:33.130 --> 00:01:34.740
And in our application start class,

00:01:34.740 --> 00:01:37.580
we get a being with the i d zebra,

00:01:37.580 --> 00:01:40.390
and then we print the better not get size,

00:01:40.390 --> 00:01:41.220
don't get weight.

00:01:41.220 --> 00:01:42.850
And if we now run this,

00:01:42.850 --> 00:01:46.280
we get 12.6.

00:01:46.280 --> 00:01:51.650
And if we change our weight to something like 56.7,

00:01:51.650 --> 00:01:59.560
then we now get 36.7.

00:01:59.560 --> 00:02:00.550
It changes accordingly,

00:02:00.550 --> 00:02:01.740
and there we go.

00:02:01.740 --> 00:02:03.270
So that essentially should have done so.

00:02:03.270 --> 00:02:04.800
Very simple support,

00:02:04.800 --> 00:02:05.850
just importantly,

00:02:05.850 --> 00:02:11.870
understand the idea of inter beans and how they sort of are another method,

00:02:11.870 --> 00:02:12.250
uh,

00:02:12.250 --> 00:02:14.290
of doing the ref tags,

00:02:14.290 --> 00:02:15.460
which just ref tag.

00:02:15.460 --> 00:02:16.100
It's something.

00:02:16.100 --> 00:02:17.330
If you don't want to use the reptile,

00:02:17.330 --> 00:02:18.670
you can use intervenes is also,

00:02:18.670 --> 00:02:19.320
you know,

00:02:19.320 --> 00:02:20.150
just a different way,

00:02:20.150 --> 00:02:22.350
and that's important to understand.

00:02:22.350 --> 00:02:23.900
So,

00:02:23.900 --> 00:02:24.100
yeah,

00:02:24.100 --> 00:02:24.600
anyway,

00:02:24.600 --> 00:02:25.430
without further do,

00:02:25.430 --> 00:02:27.050
then let's get into today's lesson.

00:02:27.050 --> 00:02:29.040
All right,

00:02:29.040 --> 00:02:32.290
so that every time going over I d ref and you know,

00:02:32.290 --> 00:02:33.210
just some clean,

00:02:33.210 --> 00:02:34.670
clearing up some details.

00:02:34.670 --> 00:02:37.010
So first of all,

00:02:37.010 --> 00:02:37.460
um,

00:02:37.460 --> 00:02:38.500
at this point,

00:02:38.500 --> 00:02:39.540
we have the i d.

00:02:39.540 --> 00:02:40.310
Of zebra,

00:02:40.310 --> 00:02:40.740
right?

00:02:40.740 --> 00:02:42.070
We all know what ideas.

00:02:42.070 --> 00:02:42.750
Um,

00:02:42.750 --> 00:02:46.950
I ds are just essentially names that we set for beans.

00:02:46.950 --> 00:02:50.990
But the problem is that we also have a name tag.

00:02:50.990 --> 00:02:51.690
So if we don't,

00:02:51.690 --> 00:02:52.690
if you don't want an i d,

00:02:52.690 --> 00:02:56.570
we can actually just put name equal to Zebra and that essentially,

00:02:56.570 --> 00:02:58.000
just pretty much the same exact thing.

00:02:58.000 --> 00:02:59.640
So now if you're on an application start class,

00:02:59.640 --> 00:03:02.960
we're still getting a bean with the name zebra or any zebra.

00:03:02.960 --> 00:03:04.630
And if you run this,

00:03:04.630 --> 00:03:06.600
you'll see everything stays exactly the same.

00:03:06.600 --> 00:03:12.170
So you get zebra with the name Zebra and we can actually add an idea along with the name,

00:03:12.170 --> 00:03:15.760
so we could have I d equals two zebra one.

00:03:15.760 --> 00:03:17.270
There we go.

00:03:17.270 --> 00:03:17.680
So you'll see.

00:03:17.680 --> 00:03:18.920
We have now an I d.

00:03:18.920 --> 00:03:20.770
And the name along with a righty.

00:03:20.770 --> 00:03:24.350
And if you go ahead and actually do get being zebra one,

00:03:24.350 --> 00:03:26.780
save everything,

00:03:26.780 --> 00:03:27.670
uh,

00:03:27.670 --> 00:03:29.160
it stays exactly the same.

00:03:29.160 --> 00:03:32.220
It forget CTP in zebra get the exact same being,

00:03:32.220 --> 00:03:33.750
so there's no difference at all.

00:03:33.750 --> 00:03:34.700
Of course,

00:03:34.700 --> 00:03:35.880
that is a little bit of a lie.

00:03:35.880 --> 00:03:36.570
Um,

00:03:36.570 --> 00:03:37.890
there was some difference.

00:03:37.890 --> 00:03:43.680
If we have a being ideas equal to zebra one and a name is equal to zebra can actually not

00:03:43.680 --> 00:03:46.060
have another being being what it was called.

00:03:46.060 --> 00:03:46.270
Actually,

00:03:46.270 --> 00:03:47.670
copy this exact same being.

00:03:47.670 --> 00:03:52.080
We can now have a being with an i d of zebra,

00:03:52.080 --> 00:03:52.570
too.

00:03:52.570 --> 00:03:54.550
And a name of zebra.

00:03:54.550 --> 00:03:55.910
And as you can see,

00:03:55.910 --> 00:03:57.530
it doesn't actually give us any error.

00:03:57.530 --> 00:04:03.620
So our XML validator doesn't catch any error even though we now have a name with zebra and

00:04:03.620 --> 00:04:04.610
another name with zebras.

00:04:04.610 --> 00:04:04.990
Well,

00:04:04.990 --> 00:04:07.480
so if you actually go in our application art class,

00:04:07.480 --> 00:04:09.650
when we get the being with the name zebra,

00:04:09.650 --> 00:04:12.630
which being will get will get this being or this one,

00:04:12.630 --> 00:04:14.750
it won't know it'll give us an error.

00:04:14.750 --> 00:04:17.170
So if you run an application start class a year ago,

00:04:17.170 --> 00:04:17.580
as you can see,

00:04:17.580 --> 00:04:18.350
we get an error.

00:04:18.350 --> 00:04:19.610
Since he can't actually,

00:04:19.610 --> 00:04:21.390
it doesn't know which which,

00:04:21.390 --> 00:04:21.850
um,

00:04:21.850 --> 00:04:23.550
being is gonna use.

00:04:23.550 --> 00:04:25.350
So it's gonna be using this one or this one.

00:04:25.350 --> 00:04:26.200
Um,

00:04:26.200 --> 00:04:32.070
but what if you wanted to keep the i d the same if we kept the idea the same then we would

00:04:32.070 --> 00:04:37.230
get an error so it catches you See here how it catches it and says the value zebra one of

00:04:37.230 --> 00:04:42.670
attributes I d on element being is not valid with respect to its type I d.

00:04:42.670 --> 00:04:49.400
So we cannot have to beans with same I d But we can't have to beans with the same name.

00:04:49.400 --> 00:04:52.970
Um I mean,

00:04:52.970 --> 00:04:53.180
well,

00:04:53.180 --> 00:04:53.540
I mean,

00:04:53.540 --> 00:04:54.070
technically,

00:04:54.070 --> 00:04:55.510
we can't have two means that same name.

00:04:55.510 --> 00:04:55.800
I mean,

00:04:55.800 --> 00:04:58.370
just if we have to means of the same name,

00:04:58.370 --> 00:05:00.630
the XML validator won't actually catch it.

00:05:00.630 --> 00:05:04.300
So you'll only actually get the air when you run the application.

00:05:04.300 --> 00:05:09.000
But if you have a beans with the same I d than while you're writing the code,

00:05:09.000 --> 00:05:10.220
it'll give you an error like this,

00:05:10.220 --> 00:05:15.230
or just a little bit a little bit different times at which you're receiving the information

00:05:15.230 --> 00:05:16.040
that you have.

00:05:16.040 --> 00:05:22.440
You made an error initially thought of that I d is better to use then.

00:05:22.440 --> 00:05:23.010
Zebra.

00:05:23.010 --> 00:05:25.980
What am I saying?

00:05:25.980 --> 00:05:33.860
I d is better to use the name since again you get the error at you know when you're writing

00:05:33.860 --> 00:05:35.140
the code and not later on,

00:05:35.140 --> 00:05:36.640
when you're actually running it.

00:05:36.640 --> 00:05:40.290
When you're writing it and not running it so a little bit different.

00:05:40.290 --> 00:05:41.300
So it's better to use I d.

00:05:41.300 --> 00:05:43.240
Okay,

00:05:43.240 --> 00:05:44.420
so that makes sense.

00:05:44.420 --> 00:05:44.790
All right,

00:05:44.790 --> 00:05:46.970
so now we'll just changes back to two.

00:05:46.970 --> 00:05:47.270
Now,

00:05:47.270 --> 00:05:48.490
let's get rid of the name.

00:05:48.490 --> 00:05:48.960
For now,

00:05:48.960 --> 00:05:50.240
as as a whole,

00:05:50.240 --> 00:05:52.250
we actually get rid of this bean for now as a whole.

00:05:52.250 --> 00:05:55.240
Just know that we could have a being with an i.

00:05:55.240 --> 00:05:55.990
D and the name.

00:05:55.990 --> 00:05:57.390
They're pretty much the same thing.

00:05:57.390 --> 00:06:02.180
Except they differ in the fact that we could have beens with If we have a being with

00:06:02.180 --> 00:06:03.090
multiple names,

00:06:03.090 --> 00:06:07.050
it won't catch the error until you actually one application,

00:06:07.050 --> 00:06:07.870
while if you haven't been,

00:06:07.870 --> 00:06:10.960
are being with multiple to beans with the same I d.

00:06:10.960 --> 00:06:13.300
It'll catch the air while you're writing it.

00:06:13.300 --> 00:06:14.750
All right?

00:06:14.750 --> 00:06:15.990
Now,

00:06:15.990 --> 00:06:18.320
there's also this handy tag is called the I D.

00:06:18.320 --> 00:06:19.000
Ref tag.

00:06:19.000 --> 00:06:22.110
So let's say that we have a inside of animal class.

00:06:22.110 --> 00:06:25.530
We're gonna have a string string are validator.

00:06:25.530 --> 00:06:25.900
Okay,

00:06:25.900 --> 00:06:28.460
let's make a string private,

00:06:28.460 --> 00:06:31.780
private string validator and let's generate Get it on centers for it.

00:06:31.780 --> 00:06:34.440
They're ago.

00:06:34.440 --> 00:06:35.920
Generate getters and centres,

00:06:35.920 --> 00:06:36.360
all right.

00:06:36.360 --> 00:06:37.530
And now,

00:06:37.530 --> 00:06:43.930
inside our beans in our XML file where we're gonna have is gonna have a bean bean.

00:06:43.930 --> 00:06:44.710
Um,

00:06:44.710 --> 00:06:48.420
I d is equal to zebra.

00:06:48.420 --> 00:06:48.950
OK,

00:06:48.950 --> 00:06:51.930
on the class is equal to We're going to read that.

00:06:51.930 --> 00:06:54.230
We can actually copy this.

00:06:54.230 --> 00:06:54.750
Here we go.

00:06:54.750 --> 00:06:55.930
All right.

00:06:55.930 --> 00:06:57.780
And now let's close up the being tag.

00:06:57.780 --> 00:06:59.270
And inside here,

00:06:59.270 --> 00:07:05.100
we're actually gonna have a property sweeps whips.

00:07:05.100 --> 00:07:13.810
Property name equals valets actually copied the names from here.

00:07:13.810 --> 00:07:14.650
Where is it?

00:07:14.650 --> 00:07:16.410
Validator.

00:07:16.410 --> 00:07:16.990
There we go.

00:07:16.990 --> 00:07:19.940
It's too lazy to write that out there,

00:07:19.940 --> 00:07:20.460
Rico.

00:07:20.460 --> 00:07:21.280
All right.

00:07:21.280 --> 00:07:23.250
And inside the property named Validator,

00:07:23.250 --> 00:07:24.290
we're gonna have an I D.

00:07:24.290 --> 00:07:27.150
Ref beat I d ref tack I d,

00:07:27.150 --> 00:07:27.410
ref.

00:07:27.410 --> 00:07:29.490
And I'll go over exactly what is in a second here.

00:07:29.490 --> 00:07:31.650
I d ref Bean is equal to,

00:07:31.650 --> 00:07:33.390
um,

00:07:33.390 --> 00:07:34.650
deeper too.

00:07:34.650 --> 00:07:39.650
There we go.

00:07:39.650 --> 00:07:40.820
All right,

00:07:40.820 --> 00:07:41.470
now let's run.

00:07:41.470 --> 00:07:42.590
This code will see what we get.

00:07:42.590 --> 00:07:49.140
What happens in our in our in our application start classes actually print zebra dot Get

00:07:49.140 --> 00:07:50.150
validator.

00:07:50.150 --> 00:07:51.880
There we go.

00:07:51.880 --> 00:07:52.230
All right,

00:07:52.230 --> 00:07:52.950
let's run this.

00:07:52.950 --> 00:07:56.490
And there we go.

00:07:56.490 --> 00:07:59.200
You'll see now how we get the validator as zebra,

00:07:59.200 --> 00:07:59.550
too.

00:07:59.550 --> 00:08:00.520
All right,

00:08:00.520 --> 00:08:01.680
So what exactly is going on?

00:08:01.680 --> 00:08:02.400
Well,

00:08:02.400 --> 00:08:08.000
when our spring dot XML file sees this.

00:08:08.000 --> 00:08:09.040
I d ref,

00:08:09.040 --> 00:08:12.440
It will start to check if we have a bean with you.

00:08:12.440 --> 00:08:14.380
Given I d little check.

00:08:14.380 --> 00:08:19.350
Do we have an i d with zebra to In this case is gonna be check with checking zebra too.

00:08:19.350 --> 00:08:20.540
Since we do,

00:08:20.540 --> 00:08:23.850
then it assigns the zebra too.

00:08:23.850 --> 00:08:28.350
String into our string that we're assigning to.

00:08:28.350 --> 00:08:29.950
So in this case,

00:08:29.950 --> 00:08:31.760
it's gonna sign zebra to develop later.

00:08:31.760 --> 00:08:34.160
But if we didn't have a bean with I d zebra,

00:08:34.160 --> 00:08:34.500
too,

00:08:34.500 --> 00:08:37.180
if we had night and i d with zebra one,

00:08:37.180 --> 00:08:37.900
for example,

00:08:37.900 --> 00:08:39.240
is gonna look for this uber to,

00:08:39.240 --> 00:08:40.390
but it's not gonna find anything,

00:08:40.390 --> 00:08:43.890
and it will throw an exception and direction the error in this case.

00:08:43.890 --> 00:08:45.020
So now we run this,

00:08:45.020 --> 00:08:45.280
you'll see,

00:08:45.280 --> 00:08:45.880
we get an error.

00:08:45.880 --> 00:08:46.360
So,

00:08:46.360 --> 00:08:46.760
um,

00:08:46.760 --> 00:08:49.700
make bigger air creating being with names,

00:08:49.700 --> 00:08:50.660
uber defining class,

00:08:50.660 --> 00:08:50.910
path,

00:08:50.910 --> 00:08:53.820
resource internalization of being failed ness.

00:08:53.820 --> 00:08:55.890
Exception is invalid.

00:08:55.890 --> 00:09:01.210
Being names ever to in being a reference for being property validator so it can't find the

00:09:01.210 --> 00:09:02.950
bean to being.

00:09:02.950 --> 00:09:05.570
I would just make sense is we don't have it.

00:09:05.570 --> 00:09:06.550
We only have a zebra one.

00:09:06.550 --> 00:09:07.540
Tom.

00:09:07.540 --> 00:09:07.780
Sorry.

00:09:07.780 --> 00:09:09.450
We can't find the zebra to be,

00:09:09.450 --> 00:09:10.570
which makes sense,

00:09:10.570 --> 00:09:16.410
since we only have the zebra one being so I d ref can actually be a little bit confusing as

00:09:16.410 --> 00:09:17.790
to why exactly we need it.

00:09:17.790 --> 00:09:18.140
Well,

00:09:18.140 --> 00:09:20.740
it's actually mainly used for validation purposes.

00:09:20.740 --> 00:09:21.920
So later on,

00:09:21.920 --> 00:09:23.290
if you want to check if you have a being,

00:09:23.290 --> 00:09:28.100
we can use the I d ref to check whether or not we have that mean And,

00:09:28.100 --> 00:09:29.060
um,

00:09:29.060 --> 00:09:29.920
generally speaking,

00:09:29.920 --> 00:09:33.440
it's it it it does make more sense.

00:09:33.440 --> 00:09:36.550
If you are programming a very large scale application,

00:09:36.550 --> 00:09:37.740
Uh,

00:09:37.740 --> 00:09:39.790
I ruffle start to make a lot more sense.

00:09:39.790 --> 00:09:41.140
I asked where you're gonna use it,

00:09:41.140 --> 00:09:42.950
but right now it can get a little bit confusing.

00:09:42.950 --> 00:09:43.810
But don't worry about it.

00:09:43.810 --> 00:09:49.410
I'm just know that it will throw an exception if there is no if you can't find a bean with

00:09:49.410 --> 00:09:51.580
a given be name if it can,

00:09:51.580 --> 00:09:56.460
it'll assign the given be name into the string that you are referring to.

00:09:56.460 --> 00:09:57.750
The property is string property.

00:09:57.750 --> 00:10:01.300
If you actually change the string property to not be a string and,

00:10:01.300 --> 00:10:01.770
for example,

00:10:01.770 --> 00:10:02.510
be a color,

00:10:02.510 --> 00:10:03.280
for example,

00:10:03.280 --> 00:10:04.050
In her animal class,

00:10:04.050 --> 00:10:05.550
we have a color here.

00:10:05.550 --> 00:10:06.650
We're actually better yet,

00:10:06.650 --> 00:10:07.720
let's sexually try.

00:10:07.720 --> 00:10:10.830
Um could we try?

00:10:10.830 --> 00:10:12.090
What is this animal?

00:10:12.090 --> 00:10:14.040
Let's actually have a zebra insider.

00:10:14.040 --> 00:10:14.660
Zebra class.

00:10:14.660 --> 00:10:15.350
We're gonna have Ah,

00:10:15.350 --> 00:10:18.990
private animal animal.

00:10:18.990 --> 00:10:19.650
Okay,

00:10:19.650 --> 00:10:23.060
do capital letter by as well.

00:10:23.060 --> 00:10:23.830
All right,

00:10:23.830 --> 00:10:24.240
um,

00:10:24.240 --> 00:10:25.310
and now let's ah,

00:10:25.310 --> 00:10:25.690
generate.

00:10:25.690 --> 00:10:26.850
Get centers for it.

00:10:26.850 --> 00:10:29.120
Yeah.

00:10:29.120 --> 00:10:29.580
Okay.

00:10:29.580 --> 00:10:29.920
All right.

00:10:29.920 --> 00:10:30.380
There we go.

00:10:30.380 --> 00:10:33.220
So now let's try to set,

00:10:33.220 --> 00:10:33.740
uh,

00:10:33.740 --> 00:10:37.170
this animal right here to Z.

00:10:37.170 --> 00:10:37.410
Brooke,

00:10:37.410 --> 00:10:38.440
since this is an animal,

00:10:38.440 --> 00:10:40.480
so if we try to set it well,

00:10:40.480 --> 00:10:47.290
actually get an error so it won't be able to convert Its gonna try to set this string zebra

00:10:47.290 --> 00:10:50.140
to to our property named Animal.

00:10:50.140 --> 00:10:51.750
And it will be able to do that.

00:10:51.750 --> 00:10:53.520
Since animal is not a string,

00:10:53.520 --> 00:10:55.350
it is an animal.

00:10:55.350 --> 00:10:57.040
So we'll try to run this.

00:10:57.040 --> 00:10:57.770
Let's see what we get.

00:10:57.770 --> 00:11:00.880
Save everything.

00:11:00.880 --> 00:11:02.120
There we go.

00:11:02.120 --> 00:11:02.940
You'll see me get an error.

00:11:02.940 --> 00:11:04.020
So being definition,

00:11:04.020 --> 00:11:07.400
this being definition store exception invalid bean.

00:11:07.400 --> 00:11:08.320
A zebra,

00:11:08.320 --> 00:11:08.550
too,

00:11:08.550 --> 00:11:10.800
and being referenced for being property animal.

00:11:10.800 --> 00:11:12.180
And if you go up here,

00:11:12.180 --> 00:11:16.320
um oh,

00:11:16.320 --> 00:11:20.340
actually made It made a very big mistake here in beans to since we don't,

00:11:20.340 --> 00:11:21.710
we don't actually have a zebra too,

00:11:21.710 --> 00:11:22.950
so it actually can't find it.

00:11:22.950 --> 00:11:24.290
Changes is you were one.

00:11:24.290 --> 00:11:28.070
Now it should give us the correct exception yet,

00:11:28.070 --> 00:11:31.630
so cannot convert value of type traveling string to require type.

00:11:31.630 --> 00:11:32.330
Com Example.

00:11:32.330 --> 00:11:34.250
Package animal for property animal.

00:11:34.250 --> 00:11:37.800
No matching editors or conversion strategy found.

00:11:37.800 --> 00:11:42.690
And so it can't actually set the string zebra one into a property name animal,

00:11:42.690 --> 00:11:45.750
since animal is not a string but an animal,

00:11:45.750 --> 00:11:49.580
so that's exactly where it why it throws the exception,

00:11:49.580 --> 00:11:51.530
all right,

00:11:51.530 --> 00:11:54.630
And so that is essentially how we work with idea rough again i d.

00:11:54.630 --> 00:11:56.490
Ref concert to get a little bit confusing.

00:11:56.490 --> 00:11:57.890
Don't worry about it.

00:11:57.890 --> 00:11:58.250
Just,

00:11:58.250 --> 00:11:58.650
you know,

00:11:58.650 --> 00:12:00.830
read up on Lee If if you really don't understand it.

00:12:00.830 --> 00:12:01.630
And if you don't,

00:12:01.630 --> 00:12:03.050
it's really not that big a deal.

00:12:03.050 --> 00:12:04.030
Later on again,

00:12:04.030 --> 00:12:06.540
as you'll start to develop applications as there,

00:12:06.540 --> 00:12:08.870
as they'll start to get larger and larger,

00:12:08.870 --> 00:12:10.590
more and more complex,

00:12:10.590 --> 00:12:15.150
you'll start to naturally see how I d ref can Bennett for you and where exactly you can use

00:12:15.150 --> 00:12:20.710
it perhaps even will use it in this course later on in a way that's actually meaningful.

00:12:20.710 --> 00:12:22.960
See anyway for homework.

00:12:22.960 --> 00:12:24.950
I'm just trying replicate this application and,

00:12:24.950 --> 00:12:25.350
um,

00:12:25.350 --> 00:12:28.420
at least have an understanding of at a high level.

00:12:28.420 --> 00:12:29.400
What I d ref does.

00:12:29.400 --> 00:12:30.700
So when it throws an exception,

00:12:30.700 --> 00:12:32.750
and when it doesn't at at the minimum.

00:12:32.750 --> 00:12:34.370
So yeah,

00:12:34.370 --> 00:12:35.610
it's really all pretty simple.

00:12:35.610 --> 00:12:36.030
Um,

00:12:36.030 --> 00:12:40.160
next time we're actually gonna be going over a little bit more into I d ref.

00:12:40.160 --> 00:12:41.910
Just look at in a power point as well.

00:12:41.910 --> 00:12:45.710
We're gonna be going over aliases and different types of names.

00:12:45.710 --> 00:12:49.280
Maybe it will touch on auto wiring as well,

00:12:49.280 --> 00:12:50.310
but probably not.

00:12:50.310 --> 00:12:51.320
Anyway,

00:12:51.320 --> 00:12:51.950
um,

00:12:51.950 --> 00:12:55.330
I hope you enjoy this lesson and I'll see you next time.

00:12:55.330 --> 00:12:55.890
You'll soon.

