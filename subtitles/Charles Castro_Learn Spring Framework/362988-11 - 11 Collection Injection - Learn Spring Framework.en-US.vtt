WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.870
Hello there.

00:00:00.870 --> 00:00:02.950
And welcome back to this spring development course.

00:00:02.950 --> 00:00:07.750
So last time we went over aliases and you have some homework to do?

00:00:07.750 --> 00:00:13.220
Your job was to create an alias four hour zebra,

00:00:13.220 --> 00:00:16.060
one being that would give it a name.

00:00:16.060 --> 00:00:16.600
Body.

00:00:16.600 --> 00:00:18.650
It's actually very simple.

00:00:18.650 --> 00:00:20.650
So literally one line of code right here.

00:00:20.650 --> 00:00:22.380
Here we have an alias.

00:00:22.380 --> 00:00:26.800
Name equals 01 Alias equals Bobby.

00:00:26.800 --> 00:00:27.350
There we go.

00:00:27.350 --> 00:00:30.950
So now in our applications start class,

00:00:30.950 --> 00:00:35.650
we can actually get a bean with the name Bobby.

00:00:35.650 --> 00:00:41.930
Even though in our beings that xml file we don't actually have ah being with the i d of

00:00:41.930 --> 00:00:42.410
Bobby.

00:00:42.410 --> 00:00:44.540
But thanks to the alias here,

00:00:44.540 --> 00:00:50.890
it will automatically get zebra one being even though we get Bobby being So let's run this

00:00:50.890 --> 00:00:53.650
and we should get the weight of the bean,

00:00:53.650 --> 00:00:55.920
which should be right here.

00:00:55.920 --> 00:00:57.580
We set the way 56.7,

00:00:57.580 --> 00:00:59.530
and there we go 56.7,

00:00:59.530 --> 00:01:00.250
as expected.

00:01:00.250 --> 00:01:01.510
All right,

00:01:01.510 --> 00:01:08.370
It's important to note here as well that we can also do Sieber one de Bruin as well.

00:01:08.370 --> 00:01:10.710
So if we now run this,

00:01:10.710 --> 00:01:17.740
we get the same exact result so we can use either of those.

00:01:17.740 --> 00:01:19.600
And we can have unlimited aliases.

00:01:19.600 --> 00:01:21.970
So we can have alias Zebra One,

00:01:21.970 --> 00:01:23.000
uh,

00:01:23.000 --> 00:01:25.610
Bobbie and then Bobbie to as well if we wanted.

00:01:25.610 --> 00:01:30.170
And now we can do Bobby to as well,

00:01:30.170 --> 00:01:31.830
Bobby,

00:01:31.830 --> 00:01:32.410
too,

00:01:32.410 --> 00:01:36.400
as well as just Bobby as well.

00:01:36.400 --> 00:01:39.870
There we go.

00:01:39.870 --> 00:01:41.130
All right,

00:01:41.130 --> 00:01:42.600
so that is essentially,

00:01:42.600 --> 00:01:43.180
uh,

00:01:43.180 --> 00:01:43.780
a leasing.

00:01:43.780 --> 00:01:44.520
It's very simple.

00:01:44.520 --> 00:01:45.350
Aliases are very simple.

00:01:45.350 --> 00:01:47.060
Just provide another name for the B.

00:01:47.060 --> 00:01:48.300
All right,

00:01:48.300 --> 00:01:51.550
So now let's go ahead and take a look at initializing collections.

00:01:51.550 --> 00:01:52.770
All right?

00:01:52.770 --> 00:01:56.400
So working with collections and spring is actually pretty simple.

00:01:56.400 --> 00:01:57.290
Um,

00:01:57.290 --> 00:01:59.080
so it's going to go to our animal class.

00:01:59.080 --> 00:01:59.460
Whoops.

00:01:59.460 --> 00:01:59.960
Nope.

00:01:59.960 --> 00:02:01.560
They're going there.

00:02:01.560 --> 00:02:02.290
Alright.

00:02:02.290 --> 00:02:03.720
And are an inner animal cross.

00:02:03.720 --> 00:02:09.700
We're gonna have a public private list of strings.

00:02:09.700 --> 00:02:13.950
This will be called names.

00:02:13.950 --> 00:02:20.760
This is all the names our animal has that's gonna import list Util.

00:02:20.760 --> 00:02:21.350
There we go.

00:02:21.350 --> 00:02:24.670
Annals generate together and centers generate,

00:02:24.670 --> 00:02:25.470
uh,

00:02:25.470 --> 00:02:26.590
getting centers.

00:02:26.590 --> 00:02:28.900
There we go.

00:02:28.900 --> 00:02:30.350
And let's select names,

00:02:30.350 --> 00:02:32.350
and we're gonna generate getting incentives for them.

00:02:32.350 --> 00:02:35.650
Okay,

00:02:35.650 --> 00:02:36.900
Now,

00:02:36.900 --> 00:02:39.850
let's go ahead and go to our beings that XML file.

00:02:39.850 --> 00:02:41.900
And now in our zebra,

00:02:41.900 --> 00:02:47.450
we're gonna set the property with the name names.

00:02:47.450 --> 00:02:49.450
I think That's what I called it.

00:02:49.450 --> 00:02:50.270
Yeah,

00:02:50.270 --> 00:02:50.750
names.

00:02:50.750 --> 00:03:01.210
And inside the names file we're going to do list and then inside the list tag,

00:03:01.210 --> 00:03:04.090
we're going on another tag called the Value tax.

00:03:04.090 --> 00:03:05.270
So value.

00:03:05.270 --> 00:03:08.350
And then we can put in something like,

00:03:08.350 --> 00:03:09.650
I don't know what you say,

00:03:09.650 --> 00:03:13.660
zebra one.

00:03:13.660 --> 00:03:14.600
There we go.

00:03:14.600 --> 00:03:16.390
All right,

00:03:16.390 --> 00:03:17.110
let's save this.

00:03:17.110 --> 00:03:17.290
Now,

00:03:17.290 --> 00:03:18.550
in our applications start.

00:03:18.550 --> 00:03:20.810
What we're gonna do is we're gonna do Bobby.

00:03:20.810 --> 00:03:21.120
No,

00:03:21.120 --> 00:03:22.270
we're gonna do zebra one,

00:03:22.270 --> 00:03:26.420
and then we're gonna do it's called zebras.

00:03:26.420 --> 00:03:26.750
Well,

00:03:26.750 --> 00:03:29.690
just now in our system,

00:03:29.690 --> 00:03:30.030
out,

00:03:30.030 --> 00:03:30.170
up,

00:03:30.170 --> 00:03:32.370
and then we're gonna do Z dog yet.

00:03:32.370 --> 00:03:35.750
Names docked.

00:03:35.750 --> 00:03:38.250
Get zero.

00:03:38.250 --> 00:03:39.390
All right,

00:03:39.390 --> 00:03:39.950
there we go.

00:03:39.950 --> 00:03:42.150
And now let's go ahead and runs,

00:03:42.150 --> 00:03:46.250
And there we go.

00:03:46.250 --> 00:03:46.380
So,

00:03:46.380 --> 00:03:46.910
as you can see,

00:03:46.910 --> 00:03:47.400
in results,

00:03:47.400 --> 00:03:48.560
we get zebra one,

00:03:48.560 --> 00:03:49.400
as expected.

00:03:49.400 --> 00:03:50.530
Um,

00:03:50.530 --> 00:03:54.020
so imagine what happens here is we create a new list using the list tag,

00:03:54.020 --> 00:03:56.880
and then using the value attack,

00:03:56.880 --> 00:04:02.370
we assigned Zebra one into the first index so you could go and actually assigned more so we

00:04:02.370 --> 00:04:03.450
can do value.

00:04:03.450 --> 00:04:05.670
Um,

00:04:05.670 --> 00:04:08.620
was a Barbie as well.

00:04:08.620 --> 00:04:10.560
And now in our applications start.

00:04:10.560 --> 00:04:11.600
But actually I think print out,

00:04:11.600 --> 00:04:12.280
get names.

00:04:12.280 --> 00:04:15.450
I think out of the two string overridden.

00:04:15.450 --> 00:04:17.360
There we go.

00:04:17.360 --> 00:04:19.400
So now we get Zebra One Comma,

00:04:19.400 --> 00:04:19.750
Bobby.

00:04:19.750 --> 00:04:23.260
Um and so we can add as many as we like so we can add Bobby.

00:04:23.260 --> 00:04:24.120
And then we can add,

00:04:24.120 --> 00:04:24.550
uh,

00:04:24.550 --> 00:04:25.940
Bobby.

00:04:25.940 --> 00:04:33.220
And then we can add Barber as well now.

00:04:33.220 --> 00:04:35.190
Yet with Barbara's well and so on.

00:04:35.190 --> 00:04:37.820
That's essentially how we work with the list.

00:04:37.820 --> 00:04:38.400
Of course,

00:04:38.400 --> 00:04:42.000
there are other collections and spring also have support for those collections as well.

00:04:42.000 --> 00:04:43.290
So let's take a look at another example.

00:04:43.290 --> 00:04:44.250
All right,

00:04:44.250 --> 00:04:49.380
so going into our animal class and what we're gonna do is going to change this list of

00:04:49.380 --> 00:04:52.530
string to a set of strings.

00:04:52.530 --> 00:04:53.950
Let's import said as well,

00:04:53.950 --> 00:04:56.480
there we go.

00:04:56.480 --> 00:04:59.100
And he was gonna do return set,

00:04:59.100 --> 00:05:01.850
string and then set string right here.

00:05:01.850 --> 00:05:03.550
There we go.

00:05:03.550 --> 00:05:03.900
All right,

00:05:03.900 --> 00:05:05.610
Now in our application start class.

00:05:05.610 --> 00:05:07.280
If we actually try to run this right now,

00:05:07.280 --> 00:05:09.660
save it.

00:05:09.660 --> 00:05:16.230
Everything we actually do get sort of a working application.

00:05:16.230 --> 00:05:20.390
That's because string will automatically try to sort of cast,

00:05:20.390 --> 00:05:23.900
um ah list to the set in this case.

00:05:23.900 --> 00:05:29.990
But that said if we actually had to value remember a set can only hold one unique value so

00:05:29.990 --> 00:05:32.000
it can't hold two identical values.

00:05:32.000 --> 00:05:32.260
Right?

00:05:32.260 --> 00:05:33.860
So what if we got to do this right now?

00:05:33.860 --> 00:05:34.450
What happens?

00:05:34.450 --> 00:05:40.950
You'll see it actually cast it as well.

00:05:40.950 --> 00:05:44.920
So this is essentially where things can start to get confusing.

00:05:44.920 --> 00:05:45.480
Since,

00:05:45.480 --> 00:05:45.890
I mean,

00:05:45.890 --> 00:05:47.670
we have a list here specified,

00:05:47.670 --> 00:05:50.580
and yet the names is now a set.

00:05:50.580 --> 00:05:52.570
So how did this?

00:05:52.570 --> 00:05:57.410
How do we sort of what's the point of having another variable what we do and radio another

00:05:57.410 --> 00:05:57.760
variable.

00:05:57.760 --> 00:05:59.360
Still another tag.

00:05:59.360 --> 00:06:00.870
We have a set tag as well.

00:06:00.870 --> 00:06:02.660
Well,

00:06:02.660 --> 00:06:04.640
the point is that what if,

00:06:04.640 --> 00:06:05.700
for example,

00:06:05.700 --> 00:06:10.030
we had something like a map here,

00:06:10.030 --> 00:06:10.620
right?

00:06:10.620 --> 00:06:12.150
Was gonna import map?

00:06:12.150 --> 00:06:13.710
Sure.

00:06:13.710 --> 00:06:14.100
Yeah.

00:06:14.100 --> 00:06:19.890
There we go stages to map and is taxable.

00:06:19.890 --> 00:06:22.860
There we go,

00:06:22.860 --> 00:06:24.550
and then we'll have a string,

00:06:24.550 --> 00:06:27.150
and then let's do interest rate.

00:06:27.150 --> 00:06:29.850
And when remembers,

00:06:29.850 --> 00:06:30.750
just Ah,

00:06:30.750 --> 00:06:36.200
a map is just a collection that takes in a key and in the value as well.

00:06:36.200 --> 00:06:38.120
So what if we had a map?

00:06:38.120 --> 00:06:38.620
Well,

00:06:38.620 --> 00:06:40.480
now we try to run applications turned,

00:06:40.480 --> 00:06:44.400
You see,

00:06:44.400 --> 00:06:45.210
we actually get an air.

00:06:45.210 --> 00:06:52.400
So while we can technically use a list for set,

00:06:52.400 --> 00:06:53.920
it really isn't recommended.

00:06:53.920 --> 00:06:55.350
Since you know,

00:06:55.350 --> 00:06:57.480
it confuses the code.

00:06:57.480 --> 00:07:01.030
And you you may sometimes end up with errors.

00:07:01.030 --> 00:07:01.950
Um,

00:07:01.950 --> 00:07:03.170
here,

00:07:03.170 --> 00:07:04.350
no matter what we use,

00:07:04.350 --> 00:07:08.500
it'll still throwing error since we have a map and not a list or a set.

00:07:08.500 --> 00:07:10.270
So for map,

00:07:10.270 --> 00:07:11.270
it's gonna be a little bit different.

00:07:11.270 --> 00:07:12.380
So if we have a map here,

00:07:12.380 --> 00:07:13.800
we're not gonna have a value tag.

00:07:13.800 --> 00:07:16.150
We're gonna have a entry tax,

00:07:16.150 --> 00:07:18.210
and then a key equals.

00:07:18.210 --> 00:07:23.950
Let's just say one and then value equals what you say.

00:07:23.950 --> 00:07:25.550
Hello?

00:07:25.550 --> 00:07:30.550
There we go.

00:07:30.550 --> 00:07:32.620
All right.

00:07:32.620 --> 00:07:33.670
And now you're on.

00:07:33.670 --> 00:07:38.090
This should get one equals Hello.

00:07:38.090 --> 00:07:38.590
There we go.

00:07:38.590 --> 00:07:40.570
So it assigns it correctly to the map.

00:07:40.570 --> 00:07:42.070
So yeah,

00:07:42.070 --> 00:07:42.640
So,

00:07:42.640 --> 00:07:43.390
essentially,

00:07:43.390 --> 00:07:47.960
where a lot of people get confused at this point is in that set and list.

00:07:47.960 --> 00:07:49.670
Why is it that if we have a set,

00:07:49.670 --> 00:07:50.630
we can use a list?

00:07:50.630 --> 00:07:51.550
Said it Well,

00:07:51.550 --> 00:07:53.230
because spring is actually pretty smart.

00:07:53.230 --> 00:07:59.210
So it understands that even though we have list directly trying to set it into a set and

00:07:59.210 --> 00:08:02.690
technically I said is just a list I mean,

00:08:02.690 --> 00:08:06.670
at a very high level said is just a list that can't hold duplicate value.

00:08:06.670 --> 00:08:09.550
Soldiers from would people get values and then put it in that sense.

00:08:09.550 --> 00:08:11.350
So it sort of understand that's pretty smart.

00:08:11.350 --> 00:08:15.280
But it's better not to do that since later on,

00:08:15.280 --> 00:08:17.280
some programmer will stumble upon it.

00:08:17.280 --> 00:08:20.320
Reading that is that is reading your code and will think,

00:08:20.320 --> 00:08:20.990
Wait,

00:08:20.990 --> 00:08:23.090
why do we have a list here when it's a set?

00:08:23.090 --> 00:08:23.790
That's weird.

00:08:23.790 --> 00:08:24.550
Why is that?

00:08:24.550 --> 00:08:26.330
And so in results,

00:08:26.330 --> 00:08:27.670
it can cause confusion later on.

00:08:27.670 --> 00:08:29.510
So it's better to just keep everything consistent.

00:08:29.510 --> 00:08:30.500
Um,

00:08:30.500 --> 00:08:32.120
and if we have something like a map,

00:08:32.120 --> 00:08:35.650
then we obviously can't use list or set there.

00:08:35.650 --> 00:08:37.430
All right,

00:08:37.430 --> 00:08:37.880
so,

00:08:37.880 --> 00:08:38.740
officially,

00:08:38.740 --> 00:08:39.460
collections.

00:08:39.460 --> 00:08:43.550
Next time we're gonna go over this into more detail as well.

00:08:43.550 --> 00:08:46.570
Let's take a look at some other collections that we can stand she ate and how we can do

00:08:46.570 --> 00:08:47.090
that as well.

00:08:47.090 --> 00:08:50.600
Your homework is to get this running on your machine.

00:08:50.600 --> 00:08:51.500
Just created collection,

00:08:51.500 --> 00:08:52.650
A list arrested or a map,

00:08:52.650 --> 00:08:56.520
and go ahead and set the values accordingly and then print the values.

00:08:56.520 --> 00:08:58.180
Just make sure that this is a working on her machine,

00:08:58.180 --> 00:08:59.550
and then you can move on to the next list.

00:08:59.550 --> 00:09:01.500
Anyway,

00:09:01.500 --> 00:09:01.890
Um,

00:09:01.890 --> 00:09:02.880
I wish Look with homework,

00:09:02.880 --> 00:09:03.180
and,

00:09:03.180 --> 00:09:03.490
uh,

00:09:03.490 --> 00:09:04.260
I'll see you next time.

00:09:04.260 --> 00:09:04.710
It'll soon

