WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.050
a little there and welcome back to this spring development course.

00:00:03.050 --> 00:00:07.750
So last time we went over iterating over lists in Jsp,

00:00:07.750 --> 00:00:10.050
and this time we're gonna be going over,

00:00:10.050 --> 00:00:10.850
um,

00:00:10.850 --> 00:00:13.480
rest ap eyes and spring.

00:00:13.480 --> 00:00:15.070
But first we have to check the homework.

00:00:15.070 --> 00:00:15.870
That was less than God's.

00:00:15.870 --> 00:00:16.350
More to do.

00:00:16.350 --> 00:00:17.510
Complete misspoke.

00:00:17.510 --> 00:00:17.740
There.

00:00:17.740 --> 00:00:18.390
Anyway,

00:00:18.390 --> 00:00:19.060
So for homework,

00:00:19.060 --> 00:00:22.050
your job was to put a list into a model.

00:00:22.050 --> 00:00:23.250
And then,

00:00:23.250 --> 00:00:23.850
um,

00:00:23.850 --> 00:00:27.050
go over that list inside the view,

00:00:27.050 --> 00:00:28.050
um,

00:00:28.050 --> 00:00:34.850
and print whether or not each element was an integer otter even.

00:00:34.850 --> 00:00:37.010
And it was obviously into your list.

00:00:37.010 --> 00:00:38.410
Okay,

00:00:38.410 --> 00:00:38.680
so here,

00:00:38.680 --> 00:00:39.580
essentially the controller.

00:00:39.580 --> 00:00:41.040
So we just have get number list here.

00:00:41.040 --> 00:00:43.100
Then we have the list integer numbers,

00:00:43.100 --> 00:00:44.690
a raise that as list 12 or five.

00:00:44.690 --> 00:00:45.550
Pretty simple stuff,

00:00:45.550 --> 00:00:47.630
then we Centerview name to view.

00:00:47.630 --> 00:00:51.360
Then we add the object numbers with the key and at work numbers.

00:00:51.360 --> 00:00:53.600
So they just this list here that we return water.

00:00:53.600 --> 00:00:54.500
Pretty simple stuff.

00:00:54.500 --> 00:00:54.660
Pretty.

00:00:54.660 --> 00:00:55.720
Basically anyone over this,

00:00:55.720 --> 00:00:56.500
Okay.

00:00:56.500 --> 00:00:56.750
And now,

00:00:56.750 --> 00:00:57.250
in our view,

00:00:57.250 --> 00:00:57.760
Jess B,

00:00:57.760 --> 00:01:01.550
we have a four each tax we generate over all the elements in the list.

00:01:01.550 --> 00:01:03.560
And then for each element,

00:01:03.560 --> 00:01:06.920
we go ahead and check if it's item percent.

00:01:06.920 --> 00:01:07.970
Two is equal to zero,

00:01:07.970 --> 00:01:09.620
since here's four items.

00:01:09.620 --> 00:01:11.780
So if item percent two is equal to zero,

00:01:11.780 --> 00:01:13.360
then we do number.

00:01:13.360 --> 00:01:15.290
Item is even otherwise.

00:01:15.290 --> 00:01:16.470
If it's not equal to zero,

00:01:16.470 --> 00:01:17.380
then we do number.

00:01:17.380 --> 00:01:18.910
Item is our principal stuff.

00:01:18.910 --> 00:01:22.240
You already have a We have a break statement here as well just to make things look a little

00:01:22.240 --> 00:01:22.750
bit cleaner.

00:01:22.750 --> 00:01:23.670
All right,

00:01:23.670 --> 00:01:27.870
so I was going to actually take a look at how this will work in our web browser.

00:01:27.870 --> 00:01:31.870
So let's go ahead and run this on the server.

00:01:31.870 --> 00:01:35.520
All right,

00:01:35.520 --> 00:01:35.950
There we go.

00:01:35.950 --> 00:01:36.680
Um,

00:01:36.680 --> 00:01:40.600
And now let's go ahead and take a look at how this will work in our web browser.

00:01:40.600 --> 00:01:41.990
All right,

00:01:41.990 --> 00:01:43.840
take your browser if we're going to refresh.

00:01:43.840 --> 00:01:46.090
Whoops.

00:01:46.090 --> 00:01:46.760
Uh,

00:01:46.760 --> 00:01:53.250
do 80 80 slash web artifact slash Get number A list.

00:01:53.250 --> 00:01:53.650
Here we go.

00:01:53.650 --> 00:01:54.840
Okay.

00:01:54.840 --> 00:01:59.120
And now we have number one is odd to is even threes are,

00:01:59.120 --> 00:01:59.760
and then fours,

00:01:59.760 --> 00:02:03.970
even five is are pretty simple stuff in our controller,

00:02:03.970 --> 00:02:05.380
we actually put 1 to 2 per five.

00:02:05.380 --> 00:02:09.280
That is what's displayed it checks if item percent to zero.

00:02:09.280 --> 00:02:09.990
Since it is,

00:02:09.990 --> 00:02:10.490
you know,

00:02:10.490 --> 00:02:11.700
put it is even.

00:02:11.700 --> 00:02:14.550
And then if it isn't imported ascots are pretty simple stuff.

00:02:14.550 --> 00:02:16.550
So now it's going,

00:02:16.550 --> 00:02:17.800
actually add some more numbers.

00:02:17.800 --> 00:02:20.050
Let's just do a bunch of crazy random numbers.

00:02:20.050 --> 00:02:26.720
All right,

00:02:26.720 --> 00:02:27.300
There we go.

00:02:27.300 --> 00:02:28.270
But save it.

00:02:28.270 --> 00:02:29.850
Give it a second to refresh Here.

00:02:29.850 --> 00:02:33.360
Uh,

00:02:33.360 --> 00:02:34.450
and you don't know.

00:02:34.450 --> 00:02:39.160
There we go.

00:02:39.160 --> 00:02:39.850
All right,

00:02:39.850 --> 00:02:40.440
The refresh.

00:02:40.440 --> 00:02:40.630
Listen,

00:02:40.630 --> 00:02:42.250
else go to safari.

00:02:42.250 --> 00:02:43.190
Uh,

00:02:43.190 --> 00:02:44.440
let's refresh.

00:02:44.440 --> 00:02:46.390
Whoops.

00:02:46.390 --> 00:02:47.320
And we got a,

00:02:47.320 --> 00:02:47.650
uh,

00:02:47.650 --> 00:02:48.700
an air.

00:02:48.700 --> 00:02:51.890
What is the problem?

00:02:51.890 --> 00:02:52.340
Okay,

00:02:52.340 --> 00:02:52.850
I see.

00:02:52.850 --> 00:02:53.950
I see what the problem is.

00:02:53.950 --> 00:02:54.840
Um,

00:02:54.840 --> 00:02:56.250
let's go to clips.

00:02:56.250 --> 00:02:59.700
This number here is too big for an integer toe.

00:02:59.700 --> 00:03:02.310
Hold as an integer is on Lee.

00:03:02.310 --> 00:03:06.350
32 bits,

00:03:06.350 --> 00:03:07.980
I think No,

00:03:07.980 --> 00:03:10.750
it's bites bit.

00:03:10.750 --> 00:03:14.010
Been a while since have worked with,

00:03:14.010 --> 00:03:14.270
you know,

00:03:14.270 --> 00:03:14.950
the little job.

00:03:14.950 --> 00:03:18.430
All right,

00:03:18.430 --> 00:03:18.850
there we go.

00:03:18.850 --> 00:03:19.530
Okay.

00:03:19.530 --> 00:03:20.480
So now we have you know,

00:03:20.480 --> 00:03:21.210
one is our two.

00:03:21.210 --> 00:03:22.550
Even three is on fours,

00:03:22.550 --> 00:03:23.090
even five.

00:03:23.090 --> 00:03:33.160
Assad 346,561,346 is even know 13 64 is even bigger.

00:03:33.160 --> 00:03:34.390
Um,

00:03:34.390 --> 00:03:37.030
46 even 61.

00:03:37.030 --> 00:03:37.610
Odd.

00:03:37.610 --> 00:03:40.550
One odd three pretty simple stuff.

00:03:40.550 --> 00:03:42.750
That is essentially what should be done.

00:03:42.750 --> 00:03:43.930
All right,

00:03:43.930 --> 00:03:46.600
so that essentially all for Jsp.

00:03:46.600 --> 00:03:47.490
Um,

00:03:47.490 --> 00:03:47.930
now,

00:03:47.930 --> 00:03:48.930
let's go ahead and get interested.

00:03:48.930 --> 00:03:54.050
Lesson wishes creating a rest A p i a very basic rest a p I in spring.

00:03:54.050 --> 00:03:55.240
Okay,

00:03:55.240 --> 00:03:59.140
so what is arrest A p I Okay,

00:03:59.140 --> 00:04:02.700
so there's a lot of different ways of sort of defining arrestee P I.

00:04:02.700 --> 00:04:08.880
One thing to not get confused is the difference between rest on a P I and a web service

00:04:08.880 --> 00:04:09.650
deliver different.

00:04:09.650 --> 00:04:12.630
There was gonna be taking a look at the rest ap.

00:04:12.630 --> 00:04:13.480
Let's jump right in.

00:04:13.480 --> 00:04:14.670
Okay,

00:04:14.670 --> 00:04:15.900
So what is rest?

00:04:15.900 --> 00:04:18.850
Rest stands for representational state transfer.

00:04:18.850 --> 00:04:24.560
It is a way of designing our applications is such a way that our back end and front end

00:04:24.560 --> 00:04:26.650
code is not dependent on each other.

00:04:26.650 --> 00:04:30.850
You're going to be taking a look at a very base Example of rest in this lesson,

00:04:30.850 --> 00:04:33.040
the quarter right here will not be used in productions.

00:04:33.040 --> 00:04:33.350
Essentially,

00:04:33.350 --> 00:04:34.030
what we're doing here,

00:04:34.030 --> 00:04:40.700
we're not really creating arrest ap I so much as we're just sort of creating very ah,

00:04:40.700 --> 00:04:41.010
very,

00:04:41.010 --> 00:04:42.250
very sort of basic restive.

00:04:42.250 --> 00:04:48.060
So we're sort of like using rest without actually using any of the features that rest

00:04:48.060 --> 00:04:48.630
provides.

00:04:48.630 --> 00:04:51.440
Um kind of like,

00:04:51.440 --> 00:04:54.740
um I don't maybe using a sports card,

00:04:54.740 --> 00:04:55.250
too.

00:04:55.250 --> 00:04:57.560
Reid,

00:04:57.560 --> 00:04:58.350
I don't know.

00:04:58.350 --> 00:05:01.530
30 miles an hour in the city,

00:05:01.530 --> 00:05:02.020
for example.

00:05:02.020 --> 00:05:02.750
Sort of like that.

00:05:02.750 --> 00:05:06.220
So if we were to create actual rest a p I that will be used in production,

00:05:06.220 --> 00:05:08.900
we will be doing something a little bit closer to that Analects lesson.

00:05:08.900 --> 00:05:12.050
But we would need you know how you get up to a database,

00:05:12.050 --> 00:05:12.740
right?

00:05:12.740 --> 00:05:15.250
Some front end code and so on.

00:05:15.250 --> 00:05:16.630
It's once we're going testing a rape,

00:05:16.630 --> 00:05:18.050
our arrest a p I.

00:05:18.050 --> 00:05:20.070
But it's gonna be very,

00:05:20.070 --> 00:05:20.750
very basic.

00:05:20.750 --> 00:05:22.350
All right,

00:05:22.350 --> 00:05:24.630
so let's jump right into this,

00:05:24.630 --> 00:05:25.480
so rest ap,

00:05:25.480 --> 00:05:27.490
I So here we have three different app.

00:05:27.490 --> 00:05:28.830
So we have an android app,

00:05:28.830 --> 00:05:29.200
right?

00:05:29.200 --> 00:05:30.610
We have an iPhone app,

00:05:30.610 --> 00:05:32.650
and then we have a browser or web app as well.

00:05:32.650 --> 00:05:34.660
What sweeps in there?

00:05:34.660 --> 00:05:39.230
So we communicate with our server using,

00:05:39.230 --> 00:05:39.880
um,

00:05:39.880 --> 00:05:41.130
Http,

00:05:41.130 --> 00:05:44.300
that we have Http,

00:05:44.300 --> 00:05:45.480
that will then works.

00:05:45.480 --> 00:05:45.650
You know,

00:05:45.650 --> 00:05:46.820
it won't really be http.

00:05:46.820 --> 00:05:47.650
It'll be something else.

00:05:47.650 --> 00:05:53.750
Um but it we will do it using Jason or XML.

00:05:53.750 --> 00:05:58.200
So our android app when we write our android app,

00:05:58.200 --> 00:05:59.200
we have sort of,

00:05:59.200 --> 00:05:59.520
you know,

00:05:59.520 --> 00:06:02.310
like a reference to our a p I there that says,

00:06:02.310 --> 00:06:02.680
you know,

00:06:02.680 --> 00:06:08.040
this user is named I know Billy Bob return me his I d,

00:06:08.040 --> 00:06:08.820
for example.

00:06:08.820 --> 00:06:14.900
And then we it we go to the rest ap i it and we send it using a get methods were getting

00:06:14.900 --> 00:06:15.650
that right,

00:06:15.650 --> 00:06:17.950
something we send it using the get method.

00:06:17.950 --> 00:06:22.660
Then we communicate using https and then it goes to the server.

00:06:22.660 --> 00:06:24.480
So your APP server load balance.

00:06:24.480 --> 00:06:29.320
So it goes to the server where it goes into the database,

00:06:29.320 --> 00:06:32.170
retrieves his i d reads the rest,

00:06:32.170 --> 00:06:34.750
reads the Jason or XML,

00:06:34.750 --> 00:06:35.430
um,

00:06:35.430 --> 00:06:40.120
and then retrieves that I d and sends it right along back to your Andrea.

00:06:40.120 --> 00:06:42.980
So why does this exist?

00:06:42.980 --> 00:06:44.270
So why can't we just read it directly?

00:06:44.270 --> 00:06:44.690
Well,

00:06:44.690 --> 00:06:45.850
because this way,

00:06:45.850 --> 00:06:50.950
our android app in our iPhone app can refer to the same exact server.

00:06:50.950 --> 00:06:52.260
And we don't need,

00:06:52.260 --> 00:06:52.620
you know,

00:06:52.620 --> 00:06:54.350
separate servers or separate APS.

00:06:54.350 --> 00:06:57.000
The same thing goes for browser web app.

00:06:57.000 --> 00:06:59.140
So our android app,

00:06:59.140 --> 00:07:05.870
our iPhone app in our browser or web app will use three exact same rest endpoint.

00:07:05.870 --> 00:07:09.350
So the exact same rest link to get information.

00:07:09.350 --> 00:07:12.620
We can also open a breast to other developers.

00:07:12.620 --> 00:07:13.520
So other developers,

00:07:13.520 --> 00:07:14.030
if they want to,

00:07:14.030 --> 00:07:14.430
you know,

00:07:14.430 --> 00:07:16.000
use our A p I.

00:07:16.000 --> 00:07:17.190
They can so they can do,

00:07:17.190 --> 00:07:17.990
for example,

00:07:17.990 --> 00:07:20.720
a stock stock exchange.

00:07:20.720 --> 00:07:21.130
AP I.

00:07:21.130 --> 00:07:22.050
They're pretty popular.

00:07:22.050 --> 00:07:23.520
We have,

00:07:23.520 --> 00:07:24.760
ah currency exchange AP.

00:07:24.760 --> 00:07:28.460
And there's a lot of different FBI's that we can use whether you know,

00:07:28.460 --> 00:07:32.870
Google has an A p I a bunch of AP eyes their own AP eyes and so wanted someone.

00:07:32.870 --> 00:07:36.440
There's a Laura Tana different things that we could do with a P eyes and they're actually

00:07:36.440 --> 00:07:38.620
pretty loosely sort of.

00:07:38.620 --> 00:07:42.640
They're pretty loosely defined,

00:07:42.640 --> 00:07:44.380
so a lot of things could be an A p I.

00:07:44.380 --> 00:07:46.920
But arrest FBI essentially,

00:07:46.920 --> 00:07:52.130
just this architecture here what this architecture here describes All right,

00:07:52.130 --> 00:07:56.100
so let's take a look at a very basic rest a p I that is written in spring.

00:07:56.100 --> 00:07:57.920
Actually,

00:07:57.920 --> 00:07:58.360
first of all,

00:07:58.360 --> 00:08:00.940
the particular half separation of client and server.

00:08:00.940 --> 00:08:03.260
So in the rest architectural style,

00:08:03.260 --> 00:08:06.760
the implementation of the client and the implementation of the server can be done

00:08:06.760 --> 00:08:09.150
independently without each knowing about the other.

00:08:09.150 --> 00:08:13.170
This means that the code on the client side can be changed at any time without affecting

00:08:13.170 --> 00:08:14.490
the operation of the server.

00:08:14.490 --> 00:08:17.810
And the code on the service side can be change without affecting the operation of the

00:08:17.810 --> 00:08:18.250
client.

00:08:18.250 --> 00:08:19.990
By using arrest interface,

00:08:19.990 --> 00:08:23.790
different clients hit the same rest and points performance seem actions and receive the

00:08:23.790 --> 00:08:24.660
same responses.

00:08:24.660 --> 00:08:25.640
So what this means,

00:08:25.640 --> 00:08:26.100
essentially,

00:08:26.100 --> 00:08:26.980
is that what it is?

00:08:26.980 --> 00:08:27.940
Really what we explained here.

00:08:27.940 --> 00:08:31.330
So the android app refers to our server,

00:08:31.330 --> 00:08:35.550
and our server essentially does whatever it wants with what we're referring.

00:08:35.550 --> 00:08:37.450
So if it really wanted if you wanted,

00:08:37.450 --> 00:08:38.150
for example,

00:08:38.150 --> 00:08:39.920
if our android app got hacked,

00:08:39.920 --> 00:08:40.750
for example,

00:08:40.750 --> 00:08:41.310
um,

00:08:41.310 --> 00:08:42.250
we can then,

00:08:42.250 --> 00:08:42.570
you know,

00:08:42.570 --> 00:08:45.640
just disable our android app altogether on the server,

00:08:45.640 --> 00:08:51.050
and I are iPhone in our browser or Web app will be completely fine.

00:08:51.050 --> 00:08:53.750
That said,

00:08:53.750 --> 00:08:58.810
rest does actually provide difficulties in doing so,

00:08:58.810 --> 00:09:00.250
since our,

00:09:00.250 --> 00:09:00.950
um,

00:09:00.950 --> 00:09:07.850
our server doesn't really know where it's sending the response.

00:09:07.850 --> 00:09:12.350
So it knows that it's sending the response to another device but doesn't necessarily know

00:09:12.350 --> 00:09:15.520
which device if it's an android and iPhone or a browser or web,

00:09:15.520 --> 00:09:18.640
so it doesn't really know where it's sending the device.

00:09:18.640 --> 00:09:19.350
So in result,

00:09:19.350 --> 00:09:24.650
we would have to find some convenient work around in order to shut down the android app.

00:09:24.650 --> 00:09:29.240
So that is sort of the balance on which rest stand,

00:09:29.240 --> 00:09:29.460
sort of.

00:09:29.460 --> 00:09:31.070
So it's going to actually take a look.

00:09:31.070 --> 00:09:31.720
Finally,

00:09:31.720 --> 00:09:33.100
at an example,

00:09:33.100 --> 00:09:34.250
There we go.

00:09:34.250 --> 00:09:39.890
So here's an example of a rest hello World Web app.

00:09:39.890 --> 00:09:41.230
So first of all,

00:09:41.230 --> 00:09:43.530
we used this wrest control annotations on the court above.

00:09:43.530 --> 00:09:47.370
We use the rest at rest controller annotation instead of the controller annotation to

00:09:47.370 --> 00:09:50.190
specify this is arrest and point and not a regular endpoint.

00:09:50.190 --> 00:09:54.650
So which uses to specify that it's not that it's gonna return plain text and not,

00:09:54.650 --> 00:09:55.050
you know,

00:09:55.050 --> 00:09:58.600
um and not a,

00:09:58.600 --> 00:09:58.940
uh,

00:09:58.940 --> 00:09:59.790
view name.

00:09:59.790 --> 00:10:04.870
So we have everything as as before supported Castle will controller that were crest mapping

00:10:04.870 --> 00:10:06.710
request mapping value get Hello,

00:10:06.710 --> 00:10:07.280
world.

00:10:07.280 --> 00:10:09.930
Then we have this at response broad annotations.

00:10:09.930 --> 00:10:12.250
That's also just felt a server that,

00:10:12.250 --> 00:10:15.970
um we're returning plain text and not,

00:10:15.970 --> 00:10:16.460
you know,

00:10:16.460 --> 00:10:21.950
and not ah a you name.

00:10:21.950 --> 00:10:24.330
Then we have a public string Get hello world.

00:10:24.330 --> 00:10:25.780
And then we just returned her low world.

00:10:25.780 --> 00:10:29.810
So this instead of returning a you named hello world and result,

00:10:29.810 --> 00:10:31.240
this will actually return.

00:10:31.240 --> 00:10:35.800
Just text the text Hello world to our browser.

00:10:35.800 --> 00:10:40.750
So let's go ahead and take a look at how this work in our brother.

00:10:40.750 --> 00:10:45.830
What am I saying in the coat In the coat in our I d.

00:10:45.830 --> 00:10:48.650
So let's go there.

00:10:48.650 --> 00:10:50.350
Here we are.

00:10:50.350 --> 00:10:51.540
Hello.

00:10:51.540 --> 00:10:54.050
World Control orientation was delete this that we have here.

00:10:54.050 --> 00:10:55.330
And first of all,

00:10:55.330 --> 00:10:57.960
it's gonna actually add a rest controller annotation.

00:10:57.960 --> 00:10:59.150
Let's import it as well.

00:10:59.150 --> 00:11:01.650
Uh,

00:11:01.650 --> 00:11:02.250
any day now.

00:11:02.250 --> 00:11:04.110
There we go.

00:11:04.110 --> 00:11:04.650
Import it.

00:11:04.650 --> 00:11:05.850
All right,

00:11:05.850 --> 00:11:06.850
we got ah,

00:11:06.850 --> 00:11:09.970
spring framework Web buying annotation rest controller.

00:11:09.970 --> 00:11:10.550
OK,

00:11:10.550 --> 00:11:22.030
then we dio at request mapping value equals slash.

00:11:22.030 --> 00:11:23.970
Get Hello,

00:11:23.970 --> 00:11:24.500
world.

00:11:24.500 --> 00:11:27.710
Okay,

00:11:27.710 --> 00:11:29.550
let's do at response body.

00:11:29.550 --> 00:11:34.850
Let's import that as well.

00:11:34.850 --> 00:11:35.980
What's nopal?

00:11:35.980 --> 00:11:38.290
It's actually do the method.

00:11:38.290 --> 00:11:38.620
First.

00:11:38.620 --> 00:11:42.250
Public public string.

00:11:42.250 --> 00:11:46.350
Get how low world.

00:11:46.350 --> 00:11:51.080
All right,

00:11:51.080 --> 00:11:51.540
there we go.

00:11:51.540 --> 00:11:52.550
And let's return.

00:11:52.550 --> 00:11:56.320
Hello,

00:11:56.320 --> 00:11:56.650
world.

00:11:56.650 --> 00:11:58.390
All right,

00:11:58.390 --> 00:11:58.840
there we go.

00:11:58.840 --> 00:11:59.440
That's at a semi,

00:11:59.440 --> 00:11:59.840
Colon.

00:11:59.840 --> 00:12:00.460
There we go.

00:12:00.460 --> 00:12:02.200
Let's import response body now.

00:12:02.200 --> 00:12:02.760
Whoops.

00:12:02.760 --> 00:12:03.250
Uh,

00:12:03.250 --> 00:12:05.770
Ritzer ponds body.

00:12:05.770 --> 00:12:06.250
There we go.

00:12:06.250 --> 00:12:07.500
Yes,

00:12:07.500 --> 00:12:08.060
there we go.

00:12:08.060 --> 00:12:08.770
Let's import it.

00:12:08.770 --> 00:12:09.350
Um,

00:12:09.350 --> 00:12:10.100
well,

00:12:10.100 --> 00:12:11.610
buying meditation response body.

00:12:11.610 --> 00:12:12.400
All right,

00:12:12.400 --> 00:12:13.250
let's save this.

00:12:13.250 --> 00:12:14.390
Let's run it on the server.

00:12:14.390 --> 00:12:17.820
Okay,

00:12:17.820 --> 00:12:18.350
here we go.

00:12:18.350 --> 00:12:20.550
All right?

00:12:20.550 --> 00:12:22.850
And I was going to go to our browser.

00:12:22.850 --> 00:12:25.220
Now let's go toe.

00:12:25.220 --> 00:12:32.860
Go ahead and go to local host 80 80 where Bart Effect analysts do yet Hello,

00:12:32.860 --> 00:12:33.280
world.

00:12:33.280 --> 00:12:33.850
There we go.

00:12:33.850 --> 00:12:35.370
And it's percenter.

00:12:35.370 --> 00:12:36.680
And there we go.

00:12:36.680 --> 00:12:38.300
So we yet the text.

00:12:38.300 --> 00:12:38.590
Hello,

00:12:38.590 --> 00:12:38.990
world.

00:12:38.990 --> 00:12:42.980
Since in our controller here we return Hello,

00:12:42.980 --> 00:12:43.370
world.

00:12:43.370 --> 00:12:44.750
And since we have response body,

00:12:44.750 --> 00:12:49.170
it actually returns back a string and not the view name.

00:12:49.170 --> 00:12:56.790
So if you go to remove response body and say give it a minute to refresh here any day now

00:12:56.790 --> 00:12:57.960
there we go.

00:12:57.960 --> 00:12:58.650
It's refreshing.

00:12:58.650 --> 00:12:59.950
Okay,

00:12:59.950 --> 00:13:02.020
Now it's going to go to safari.

00:13:02.020 --> 00:13:02.720
Let's refresh.

00:13:02.720 --> 00:13:06.730
And now you'll see we actually it can't find the current representation for the target

00:13:06.730 --> 00:13:07.100
research.

00:13:07.100 --> 00:13:10.830
They're not willing to close that one exists with looking for this.

00:13:10.830 --> 00:13:17.580
Hello world dot jsp file and not actually returning the text was going,

00:13:17.580 --> 00:13:17.950
actually,

00:13:17.950 --> 00:13:18.890
um,

00:13:18.890 --> 00:13:24.190
returning textures will do at response body.

00:13:24.190 --> 00:13:24.850
There we go.

00:13:24.850 --> 00:13:29.250
And let's give it a second to refresh again just to verify that,

00:13:29.250 --> 00:13:29.970
you know,

00:13:29.970 --> 00:13:30.750
things correct.

00:13:30.750 --> 00:13:33.540
All right.

00:13:33.540 --> 00:13:35.200
And now we get how the world,

00:13:35.200 --> 00:13:36.040
as expected,

00:13:36.040 --> 00:13:36.350
perfect.

00:13:36.350 --> 00:13:37.950
All right.

00:13:37.950 --> 00:13:45.800
But what if we wanted to sort of customize our http response with,

00:13:45.800 --> 00:13:46.340
you know,

00:13:46.340 --> 00:13:47.710
maybe some statuses,

00:13:47.710 --> 00:13:49.250
some headers and so on and so on.

00:13:49.250 --> 00:13:52.050
So it's going to take a look at how we can do that.

00:13:52.050 --> 00:13:53.350
All right,

00:13:53.350 --> 00:13:59.830
so it's going to actually wrap our whole sort of a TTP response code in something called a

00:13:59.830 --> 00:14:04.560
response entity so we can customize our HP response using a response.

00:14:04.560 --> 00:14:05.450
Entity Class,

00:14:05.450 --> 00:14:06.780
here we return Hello,

00:14:06.780 --> 00:14:07.970
World with an okay.

00:14:07.970 --> 00:14:09.030
Http status.

00:14:09.030 --> 00:14:09.940
And if you don't know,

00:14:09.940 --> 00:14:11.060
there's a couple of http.

00:14:11.060 --> 00:14:14.100
Status is so you may have seen http status for oh,

00:14:14.100 --> 00:14:15.160
for not found.

00:14:15.160 --> 00:14:18.260
So 404 is the non found status,

00:14:18.260 --> 00:14:18.790
and then,

00:14:18.790 --> 00:14:19.470
Okay.

00:14:19.470 --> 00:14:20.300
Is the,

00:14:20.300 --> 00:14:21.050
um,

00:14:21.050 --> 00:14:24.350
okay status as actually think it's 200 of the code,

00:14:24.350 --> 00:14:25.190
So yeah.

00:14:25.190 --> 00:14:25.910
Okay.

00:14:25.910 --> 00:14:27.840
Issue to be status using response entity,

00:14:27.840 --> 00:14:30.000
we can add headers that content type exhibitors.

00:14:30.000 --> 00:14:31.420
So response entity,

00:14:31.420 --> 00:14:32.750
Essentially just a generic.

00:14:32.750 --> 00:14:34.240
Which you know,

00:14:34.240 --> 00:14:35.280
when we create one,

00:14:35.280 --> 00:14:40.030
we can insert a string that we want to return and then also just some status or headers,

00:14:40.030 --> 00:14:41.490
because headers and so on.

00:14:41.490 --> 00:14:45.380
And so there's a lot of different things that we can do with response entity.

00:14:45.380 --> 00:14:47.620
And you always we don't actually need a response.

00:14:47.620 --> 00:14:51.700
Body annotation here Since we're returning a response entity.

00:14:51.700 --> 00:14:53.850
It will automatically understand that.

00:14:53.850 --> 00:14:54.070
You know,

00:14:54.070 --> 00:14:54.860
we're turning.

00:14:54.860 --> 00:14:55.650
Um,

00:14:55.650 --> 00:14:57.420
we are returning.

00:14:57.420 --> 00:14:58.250
Sort of,

00:14:58.250 --> 00:14:59.250
um,

00:14:59.250 --> 00:15:01.780
text or what?

00:15:01.780 --> 00:15:02.070
Yeah,

00:15:02.070 --> 00:15:02.940
text and not,

00:15:02.940 --> 00:15:03.250
You know,

00:15:03.250 --> 00:15:04.550
the few names.

00:15:04.550 --> 00:15:07.900
So the dispatcher servant will understand exactly what's going on.

00:15:07.900 --> 00:15:11.450
So let's go and actually take a look at how this will work in the code.

00:15:11.450 --> 00:15:13.210
All right?

00:15:13.210 --> 00:15:13.680
So forceful.

00:15:13.680 --> 00:15:18.050
It actually going to take a look at our safari right now.

00:15:18.050 --> 00:15:19.190
Um,

00:15:19.190 --> 00:15:23.580
And if we go actually to develop and then to ah,

00:15:23.580 --> 00:15:24.850
where is this words is worth this,

00:15:24.850 --> 00:15:25.350
um,

00:15:25.350 --> 00:15:28.110
Page sources.

00:15:28.110 --> 00:15:30.810
Resource is there we go.

00:15:30.810 --> 00:15:34.070
You actually see here that we get the mime type text html.

00:15:34.070 --> 00:15:35.850
And then if we go to status,

00:15:35.850 --> 00:15:37.260
we have no status years.

00:15:37.260 --> 00:15:38.780
There is essentially no status.

00:15:38.780 --> 00:15:39.170
Right?

00:15:39.170 --> 00:15:40.050
Um,

00:15:40.050 --> 00:15:42.240
so they should just just know that for now.

00:15:42.240 --> 00:15:45.830
So when we do it through the just return a string,

00:15:45.830 --> 00:15:46.970
we actually have no status.

00:15:46.970 --> 00:15:47.400
Http.

00:15:47.400 --> 00:15:47.720
Status.

00:15:47.720 --> 00:15:48.650
We have no status.

00:15:48.650 --> 00:15:53.180
So it's going actually take a look at what will happen when we do add the response entity

00:15:53.180 --> 00:15:54.750
with the status.

00:15:54.750 --> 00:15:57.400
So in eclipse,

00:15:57.400 --> 00:16:00.960
let's go ahead and actually remove response body and a set of string.

00:16:00.960 --> 00:16:10.030
We're now going to be returning a response and turkey dot No.

00:16:10.030 --> 00:16:13.250
What's not dot It's a generic strength.

00:16:13.250 --> 00:16:13.950
There we go.

00:16:13.950 --> 00:16:16.570
Okay,

00:16:16.570 --> 00:16:22.650
so now we're gonna return New response,

00:16:22.650 --> 00:16:24.160
entity.

00:16:24.160 --> 00:16:26.500
Uh,

00:16:26.500 --> 00:16:27.450
string.

00:16:27.450 --> 00:16:30.430
And then,

00:16:30.430 --> 00:16:30.910
first of all,

00:16:30.910 --> 00:16:31.840
we're gonna return.

00:16:31.840 --> 00:16:32.450
Um,

00:16:32.450 --> 00:16:33.580
hello,

00:16:33.580 --> 00:16:34.050
world.

00:16:34.050 --> 00:16:38.040
And they looked at the status to http.

00:16:38.040 --> 00:16:41.650
Status dot OK,

00:16:41.650 --> 00:16:43.650
All right.

00:16:43.650 --> 00:16:46.280
There we go and automatically imports H two b status here.

00:16:46.280 --> 00:16:47.570
So spring framework.

00:16:47.570 --> 00:16:48.140
Http.

00:16:48.140 --> 00:16:48.550
Http.

00:16:48.550 --> 00:16:49.020
Status.

00:16:49.020 --> 00:16:49.460
All right.

00:16:49.460 --> 00:16:50.460
There we go.

00:16:50.460 --> 00:16:51.190
Okay,

00:16:51.190 --> 00:16:53.110
So now let's go ahead and run this in the browser.

00:16:53.110 --> 00:16:53.960
Don't see what we get now,

00:16:53.960 --> 00:16:55.690
Uh,

00:16:55.690 --> 00:16:55.930
let's go.

00:16:55.930 --> 00:17:00.390
And actually refresh are areas first we get on the world,

00:17:00.390 --> 00:17:03.980
I think excluded the exclamation mark accidentally.

00:17:03.980 --> 00:17:04.310
Yeah,

00:17:04.310 --> 00:17:04.770
I did.

00:17:04.770 --> 00:17:05.370
But you know,

00:17:05.370 --> 00:17:05.760
whatever.

00:17:05.760 --> 00:17:11.390
Um And now if we actually go to our bumper window,

00:17:11.390 --> 00:17:18.950
you'll see here how we now have a status as http 1.1 flash 200.

00:17:18.950 --> 00:17:21.410
So if we actually go ahead and go to,

00:17:21.410 --> 00:17:24.860
um let's go to search up.

00:17:24.860 --> 00:17:25.350
Um,

00:17:25.350 --> 00:17:26.370
Http,

00:17:26.370 --> 00:17:29.450
status status codes.

00:17:29.450 --> 00:17:33.680
Uh,

00:17:33.680 --> 00:17:35.370
list of age to be status codes.

00:17:35.370 --> 00:17:36.770
Ah,

00:17:36.770 --> 00:17:39.450
we have 200.

00:17:39.450 --> 00:17:39.820
Okay,

00:17:39.820 --> 00:17:40.300
there we go.

00:17:40.300 --> 00:17:42.210
So we sent the set the okay.

00:17:42.210 --> 00:17:50.400
Status code and it actually returned 200 as we can see in our developer window right here.

00:17:50.400 --> 00:17:51.430
I want to make this a little bit bigger.

00:17:51.430 --> 00:17:52.700
I'm thinking you might not be able to see this.

00:17:52.700 --> 00:17:53.080
So here,

00:17:53.080 --> 00:17:53.480
here.

00:17:53.480 --> 00:17:53.890
See?

00:17:53.890 --> 00:17:54.370
Right here.

00:17:54.370 --> 00:17:55.430
Code 200.

00:17:55.430 --> 00:17:56.160
There we go.

00:17:56.160 --> 00:17:58.230
Okay.

00:17:58.230 --> 00:18:03.100
So that essentially the very basics of arrest ap I there was a lot of different that we can

00:18:03.100 --> 00:18:03.380
add.

00:18:03.380 --> 00:18:06.240
So there's gonna be and that we're gonna take a look at a couple things.

00:18:06.240 --> 00:18:06.460
First,

00:18:06.460 --> 00:18:13.310
we're gonna take a look at how we can actually get data from a user using arrest a p i onda

00:18:13.310 --> 00:18:13.310
.

00:18:13.310 --> 00:18:15.320
We're also gonna take a look at different methods of getting data.

00:18:15.320 --> 00:18:15.810
So we can,

00:18:15.810 --> 00:18:16.140
you know,

00:18:16.140 --> 00:18:21.880
there's a different Asian beat sort of methods there was get delete,

00:18:21.880 --> 00:18:23.950
post put and so on and so on.

00:18:23.950 --> 00:18:27.000
So we're gonna take a look at how they can affect the rest ap as well.

00:18:27.000 --> 00:18:27.650
And again,

00:18:27.650 --> 00:18:29.030
this is really just the basics of arrest.

00:18:29.030 --> 00:18:30.190
A p i a raced a p.

00:18:30.190 --> 00:18:33.340
I course itself can probably take I don't know,

00:18:33.340 --> 00:18:37.050
maybe 40 or 50 hours of just pure video content.

00:18:37.050 --> 00:18:39.010
Rest Ap course in spring,

00:18:39.010 --> 00:18:42.860
40 50 hours or pure video content that's excluding.

00:18:42.860 --> 00:18:43.230
You know,

00:18:43.230 --> 00:18:47.210
I've seen the homework in the amount of sort of practice that you will have to do as well.

00:18:47.210 --> 00:18:48.110
Um,

00:18:48.110 --> 00:18:48.870
so yes,

00:18:48.870 --> 00:18:49.790
So it's pretty.

00:18:49.790 --> 00:18:50.600
It's a pretty big,

00:18:50.600 --> 00:18:51.330
big sort of,

00:18:51.330 --> 00:18:52.200
ah topic.

00:18:52.200 --> 00:18:57.620
But rest AP eyes are actually pretty often wanted in the market.

00:18:57.620 --> 00:19:02.840
So a lot of people want to have a very good or rest A P I and very few people actually know

00:19:02.840 --> 00:19:04.930
how to write a very well documented,

00:19:04.930 --> 00:19:05.330
you know,

00:19:05.330 --> 00:19:13.420
sort of simplistic and yet functional on elegant rest a p I in spring or any language for

00:19:13.420 --> 00:19:13.800
that matter.

00:19:13.800 --> 00:19:15.450
So if you and if you could learn in spring,

00:19:15.450 --> 00:19:17.300
then you can learn it in pretty much any language.

00:19:17.300 --> 00:19:19.240
So sort of idea of building arrest.

00:19:19.240 --> 00:19:20.240
FBI is pretty much the same.

00:19:20.240 --> 00:19:21.890
But this is a very good starting point,

00:19:21.890 --> 00:19:23.920
is very good for beginners,

00:19:23.920 --> 00:19:25.740
especially a very good practice.

00:19:25.740 --> 00:19:26.340
And then from there,

00:19:26.340 --> 00:19:30.560
you can actually build upon the I sort of,

00:19:30.560 --> 00:19:30.910
uh,

00:19:30.910 --> 00:19:35.950
how can I say this build upon the basics that we've learned here today to actually be able

00:19:35.950 --> 00:19:37.270
to build a very,

00:19:37.270 --> 00:19:44.940
very nice and and a very awesome rest a p I Okay,

00:19:44.940 --> 00:19:45.280
So anyway,

00:19:45.280 --> 00:19:46.040
without further ado,

00:19:46.040 --> 00:19:48.140
then let's set you some homework so that we can,

00:19:48.140 --> 00:19:48.430
you know,

00:19:48.430 --> 00:19:50.410
get onto the more advanced rest.

00:19:50.410 --> 00:19:50.660
Ap,

00:19:50.660 --> 00:19:54.550
Let's go ahead and go to homework.

00:19:54.550 --> 00:19:56.350
So from work,

00:19:56.350 --> 00:20:00.950
your job is to create an application that returns a status code of error and error.

00:20:00.950 --> 00:20:01.910
Message would request it.

00:20:01.910 --> 00:20:02.900
So pretty simple stuff.

00:20:02.900 --> 00:20:05.920
You return a status code and then an error message.

00:20:05.920 --> 00:20:07.050
So nothing too difficult.

00:20:07.050 --> 00:20:07.880
Yeah.

00:20:07.880 --> 00:20:09.160
Should be pretty pretty.

00:20:09.160 --> 00:20:10.930
So anyway,

00:20:10.930 --> 00:20:12.190
I wish you luck with homework,

00:20:12.190 --> 00:20:12.530
and,

00:20:12.530 --> 00:20:12.850
uh,

00:20:12.850 --> 00:20:14.260
I'll see you next time he'll soon.

