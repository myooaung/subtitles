WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.870
Hello there.

00:00:00.870 --> 00:00:02.770
And welcome back to this spring development,

00:00:02.770 --> 00:00:03.300
Of course.

00:00:03.300 --> 00:00:06.440
So last time we went over NBC,

00:00:06.440 --> 00:00:09.500
and this time we're gonna be going over the dispatcher surface.

00:00:09.500 --> 00:00:16.090
So the dispatcher serverless essentially sort of what begins a web application,

00:00:16.090 --> 00:00:17.160
sort of Or actually,

00:00:17.160 --> 00:00:19.580
what organizes a spring where application?

00:00:19.580 --> 00:00:20.020
Sort of.

00:00:20.020 --> 00:00:21.490
If if that makes sense.

00:00:21.490 --> 00:00:22.060
So,

00:00:22.060 --> 00:00:22.240
yeah,

00:00:22.240 --> 00:00:24.320
they're gonna be a little bit of reading in this one,

00:00:24.320 --> 00:00:24.810
since,

00:00:24.810 --> 00:00:25.420
I mean,

00:00:25.420 --> 00:00:27.320
they're just not a lot of code behind it.

00:00:27.320 --> 00:00:27.950
It's just like,

00:00:27.950 --> 00:00:28.700
I don't know,

00:00:28.700 --> 00:00:32.940
maybe four lines of XML code to configure the dispatcher,

00:00:32.940 --> 00:00:34.850
serve it for most things.

00:00:34.850 --> 00:00:37.590
But it is actually a very important part.

00:00:37.590 --> 00:00:43.150
And it's important to understand its role and its function in spring development.

00:00:43.150 --> 00:00:44.260
So it's going jump rated.

00:00:44.260 --> 00:00:45.650
So first of all,

00:00:45.650 --> 00:00:46.200
the dispatcher,

00:00:46.200 --> 00:00:47.120
several ovaries.

00:00:47.120 --> 00:00:54.210
But it's spring Web model view controller framework is designed around a dispatcher servant

00:00:54.210 --> 00:00:54.210
.

00:00:54.210 --> 00:00:58.390
The handles all the http requests and responses.

00:00:58.390 --> 00:01:02.180
The requests processing workflow of the spring Web,

00:01:02.180 --> 00:01:02.370
M.

00:01:02.370 --> 00:01:03.780
V C dispatcher serve.

00:01:03.780 --> 00:01:06.830
It is illustrated in the following diagram.

00:01:06.830 --> 00:01:10.230
So here we have an ace to be request.

00:01:10.230 --> 00:01:10.500
Right.

00:01:10.500 --> 00:01:14.870
So it goes into the dispatcher service and in spite of trouble isn't just a serval it Which

00:01:14.870 --> 00:01:21.950
decides which controllers or or rather which.

00:01:21.950 --> 00:01:22.480
Yeah,

00:01:22.480 --> 00:01:22.780
I guess.

00:01:22.780 --> 00:01:26.750
Which controllers to give to the person Sort of to output.

00:01:26.750 --> 00:01:28.690
So we get a request.

00:01:28.690 --> 00:01:29.150
First of all,

00:01:29.150 --> 00:01:30.290
the first thing it does is it.

00:01:30.290 --> 00:01:32.230
It performs the handler mapping.

00:01:32.230 --> 00:01:32.950
So it takes a look.

00:01:32.950 --> 00:01:35.310
Is there a,

00:01:35.310 --> 00:01:35.860
um,

00:01:35.860 --> 00:01:39.550
is there Ah,

00:01:39.550 --> 00:01:48.100
Is there a method with a request mapping annotation that matches the your L extension that

00:01:48.100 --> 00:01:48.510
we put in?

00:01:48.510 --> 00:01:52.020
So when the previous lesson we did a slash gets point.

00:01:52.020 --> 00:01:58.830
So we did our web application slash get point in the u r l um And so the dispatcher Servet

00:01:58.830 --> 00:02:03.270
saw that there was a that there was a actually,

00:02:03.270 --> 00:02:06.380
I actually go ahead and go right to the code.

00:02:06.380 --> 00:02:06.680
Here.

00:02:06.680 --> 00:02:07.130
There we go.

00:02:07.130 --> 00:02:07.540
All right.

00:02:07.540 --> 00:02:08.300
So,

00:02:08.300 --> 00:02:08.890
um,

00:02:08.890 --> 00:02:10.140
I would dispatch your servant.

00:02:10.140 --> 00:02:14.860
It went ahead and saw that we had a request mapping here.

00:02:14.860 --> 00:02:15.550
Forget point.

00:02:15.550 --> 00:02:17.320
So we had the Auriol get point.

00:02:17.320 --> 00:02:19.890
It matches this request mapping here.

00:02:19.890 --> 00:02:20.670
Forget point.

00:02:20.670 --> 00:02:22.020
And so in results,

00:02:22.020 --> 00:02:23.860
if it's thinks well,

00:02:23.860 --> 00:02:27.230
that's probably what they are referring to.

00:02:27.230 --> 00:02:27.730
We're actually no,

00:02:27.730 --> 00:02:29.410
that's definitely what the referring to see Egypt.

00:02:29.410 --> 00:02:30.660
Since it matches exactly.

00:02:30.660 --> 00:02:31.250
Has to match.

00:02:31.250 --> 00:02:31.750
Exactly.

00:02:31.750 --> 00:02:37.880
So once it does that since it does that it goes ahead and returns this method here,

00:02:37.880 --> 00:02:39.800
which is where the next part comes in.

00:02:39.800 --> 00:02:41.170
All right,

00:02:41.170 --> 00:02:43.230
so next comes the controller.

00:02:43.230 --> 00:02:46.200
So the controller is essentially just the,

00:02:46.200 --> 00:02:46.850
um,

00:02:46.850 --> 00:02:48.550
controller that we looked at.

00:02:48.550 --> 00:02:49.660
So it's the method itself.

00:02:49.660 --> 00:02:50.890
So it's gonna take a look at that.

00:02:50.890 --> 00:02:51.700
There we go.

00:02:51.700 --> 00:02:52.100
All right.

00:02:52.100 --> 00:02:52.980
And so here.

00:02:52.980 --> 00:02:53.190
Yeah.

00:02:53.190 --> 00:02:53.970
So here's the controller.

00:02:53.970 --> 00:02:56.020
So it goes in and just find this request mapping,

00:02:56.020 --> 00:02:56.700
um,

00:02:56.700 --> 00:02:57.760
and then a ghost is controller.

00:02:57.760 --> 00:02:57.990
So?

00:02:57.990 --> 00:02:58.150
Well,

00:02:58.150 --> 00:02:59.250
that's probably what it wants to call.

00:02:59.250 --> 00:03:00.480
So it calls that controller.

00:03:00.480 --> 00:03:03.410
It sees that we output a model and view.

00:03:03.410 --> 00:03:05.350
So we return a model in view.

00:03:05.350 --> 00:03:07.940
And it also seems that week in put a model in view.

00:03:07.940 --> 00:03:13.100
So all it does is it just do new model in view in here and just give us just a random while

00:03:13.100 --> 00:03:13.500
in food,

00:03:13.500 --> 00:03:13.900
isn't it?

00:03:13.900 --> 00:03:15.560
That's happened exactly like that,

00:03:15.560 --> 00:03:16.360
but something similar.

00:03:16.360 --> 00:03:17.340
Okay,

00:03:17.340 --> 00:03:18.020
so after that,

00:03:18.020 --> 00:03:19.140
we got that model in view.

00:03:19.140 --> 00:03:19.750
Um,

00:03:19.750 --> 00:03:22.970
and then we do execute the code that's here,

00:03:22.970 --> 00:03:25.810
and we return this Marlon view with a set of you name.

00:03:25.810 --> 00:03:27.760
And then after that,

00:03:27.760 --> 00:03:31.090
it goes to the view.

00:03:31.090 --> 00:03:31.890
Resolve.

00:03:31.890 --> 00:03:32.120
Er,

00:03:32.120 --> 00:03:33.070
um,

00:03:33.070 --> 00:03:33.840
Now,

00:03:33.840 --> 00:03:36.790
we haven't actually gone over the viewers all over in the code,

00:03:36.790 --> 00:03:39.400
so it's gonna actually configure off your is all over now.

00:03:39.400 --> 00:03:40.690
All right?

00:03:40.690 --> 00:03:43.560
So creating of rivers Oliver is actually pretty simple.

00:03:43.560 --> 00:03:45.330
So I'll have to do is go to this spring.

00:03:45.330 --> 00:03:46.300
M v c servant.

00:03:46.300 --> 00:03:46.670
Okay.

00:03:46.670 --> 00:03:51.620
And now we're gonna do is we're gonna A spree actually has its own built in sort of you

00:03:51.620 --> 00:03:55.730
resolve er that we use as default because we can easily override that in this spring.

00:03:55.730 --> 00:03:58.980
NBC servant serve lit XML file.

00:03:58.980 --> 00:03:59.880
Okay.

00:03:59.880 --> 00:04:03.450
And that's essentially just the configuration for spring NBC.

00:04:03.450 --> 00:04:04.680
So we can go,

00:04:04.680 --> 00:04:05.170
Actually,

00:04:05.170 --> 00:04:06.120
by the way,

00:04:06.120 --> 00:04:06.580
quick,

00:04:06.580 --> 00:04:07.950
quick sort of difference.

00:04:07.950 --> 00:04:11.590
Here web dot xml is the configuration for Tom Cat.

00:04:11.590 --> 00:04:15.060
So here all we're saying is that we are passing whatever.

00:04:15.060 --> 00:04:19.730
Whatever requests go into tomcat were passing them on to this distraction.

00:04:19.730 --> 00:04:20.190
This patter,

00:04:20.190 --> 00:04:21.570
service or spring Essentially.

00:04:21.570 --> 00:04:23.430
So we're just they're going to spring.

00:04:23.430 --> 00:04:24.140
We don't need them.

00:04:24.140 --> 00:04:25.450
Spring will handle it.

00:04:25.450 --> 00:04:28.510
And then this right here is the configuration for springs.

00:04:28.510 --> 00:04:30.010
That's two separate things started.

00:04:30.010 --> 00:04:31.350
Okay,

00:04:31.350 --> 00:04:32.290
All right.

00:04:32.290 --> 00:04:34.490
How do we create a dispatcher service?

00:04:34.490 --> 00:04:37.510
So we're gonna be creating an internal research resource to dispatch.

00:04:37.510 --> 00:04:38.190
I'm sorry.

00:04:38.190 --> 00:04:38.510
No.

00:04:38.510 --> 00:04:39.200
What am I saying?

00:04:39.200 --> 00:04:41.600
Internal Resources view result.

00:04:41.600 --> 00:04:41.960
There we go.

00:04:41.960 --> 00:04:43.190
We're gonna between of your is offer,

00:04:43.190 --> 00:04:43.840
not a dispatcher.

00:04:43.840 --> 00:04:45.110
So we're going to create your resolve.

00:04:45.110 --> 00:04:45.350
Er,

00:04:45.350 --> 00:04:47.050
so to do that.

00:04:47.050 --> 00:04:48.010
Ah,

00:04:48.010 --> 00:04:48.470
we do.

00:04:48.470 --> 00:04:56.370
Being class equals or dot spring framework.

00:04:56.370 --> 00:04:57.870
And I'm a try just from memory.

00:04:57.870 --> 00:04:59.540
Um,

00:04:59.540 --> 00:05:01.210
I've been using spring boots for so long,

00:05:01.210 --> 00:05:02.050
so bear with me here,

00:05:02.050 --> 00:05:02.270
however,

00:05:02.270 --> 00:05:02.790
get something.

00:05:02.790 --> 00:05:04.050
I'll have to probably look it up.

00:05:04.050 --> 00:05:13.670
Um dot web dot Earl Bleidt You and internal resource resolve.

00:05:13.670 --> 00:05:16.950
Er hope I got that right.

00:05:16.950 --> 00:05:19.000
Okay.

00:05:19.000 --> 00:05:19.450
All right.

00:05:19.450 --> 00:05:28.950
And so now will do Property name equals prefix.

00:05:28.950 --> 00:05:32.890
Whoops.

00:05:32.890 --> 00:05:33.750
It's gonna property.

00:05:33.750 --> 00:05:36.480
Okay.

00:05:36.480 --> 00:05:42.380
And then value,

00:05:42.380 --> 00:05:45.350
slash Web.

00:05:45.350 --> 00:05:48.250
Now it's gonna capital letters.

00:05:48.250 --> 00:05:50.380
There we go.

00:05:50.380 --> 00:05:51.190
All right,

00:05:51.190 --> 00:05:51.630
um,

00:05:51.630 --> 00:05:52.470
format the code,

00:05:52.470 --> 00:05:55.170
and then we'll do the same exact thing for suffix.

00:05:55.170 --> 00:05:58.490
There we go.

00:05:58.490 --> 00:05:58.900
Except here,

00:05:58.900 --> 00:05:59.780
we're gonna have,

00:05:59.780 --> 00:06:00.360
um,

00:06:00.360 --> 00:06:04.250
dot j b and also here,

00:06:04.250 --> 00:06:05.250
we're gonna have a dash.

00:06:05.250 --> 00:06:05.840
Okay.

00:06:05.840 --> 00:06:06.120
As you can,

00:06:06.120 --> 00:06:07.300
sort of see what we're doing here.

00:06:07.300 --> 00:06:13.690
So we're signing the prefix to our all our views you the prefix web,

00:06:13.690 --> 00:06:19.620
inf and r Suffolk's dot jsp So now if you go to our app you see here we have web INF and

00:06:19.620 --> 00:06:24.710
dodgy SP So now we can go to delete this so it will work just without that So will

00:06:24.710 --> 00:06:30.050
automatically add the Suffolk's and prefix to our,

00:06:30.050 --> 00:06:30.630
um,

00:06:30.630 --> 00:06:32.030
model To our view,

00:06:32.030 --> 00:06:34.000
to whatever view we refer to here,

00:06:34.000 --> 00:06:35.480
We actually got a air for some reason,

00:06:35.480 --> 00:06:36.550
um,

00:06:36.550 --> 00:06:40.000
actually says is over her class not found exception.

00:06:40.000 --> 00:06:48.690
Um oh,

00:06:48.690 --> 00:06:50.240
I think I see the problem.

00:06:50.240 --> 00:06:51.130
So still speak you.

00:06:51.130 --> 00:06:51.650
Here we go.

00:06:51.650 --> 00:06:59.610
So now we get relentless Reload the server that we should We should be good to go Doing

00:06:59.610 --> 00:07:03.270
things for memories is it is not is not easy,

00:07:03.270 --> 00:07:06.550
You know I have to remember or of spring framework Web service view.

00:07:06.550 --> 00:07:07.850
Internal research here is over.

00:07:07.850 --> 00:07:09.130
You know it's difficult.

00:07:09.130 --> 00:07:09.440
Okay.

00:07:09.440 --> 00:07:10.140
All right.

00:07:10.140 --> 00:07:15.380
So now in our app dot Java you see that we just have hello world and our dispatcher servant

00:07:15.380 --> 00:07:22.190
will automatically add in the slash web in prefix four hour,

00:07:22.190 --> 00:07:23.400
one second.

00:07:23.400 --> 00:07:25.950
Just show exactly what this what I'm saying Here.

00:07:25.950 --> 00:07:27.870
Ah,

00:07:27.870 --> 00:07:29.500
deployed resources weapons.

00:07:29.500 --> 00:07:30.620
See our view.

00:07:30.620 --> 00:07:34.270
Hello Ola Gsb is located inside slash Web and if so,

00:07:34.270 --> 00:07:36.330
will automatically add that prefix.

00:07:36.330 --> 00:07:41.600
And then it will also add the dot jsp Suffolk's our internal research fears over.

00:07:41.600 --> 00:07:43.930
And so here we could just type hello world.

00:07:43.930 --> 00:07:52.850
So it's gonna test this out in chrome rs Siri are now It's got a local host 80 80 8000 port

00:07:52.850 --> 00:07:54.800
slash reward effect,

00:07:54.800 --> 00:07:55.120
Social.

00:07:55.120 --> 00:07:55.460
There we go.

00:07:55.460 --> 00:07:55.760
All right,

00:07:55.760 --> 00:07:59.050
so now if you go to it out,

00:07:59.050 --> 00:07:59.590
what's not?

00:07:59.590 --> 00:07:59.930
Hello?

00:07:59.930 --> 00:08:00.540
What am I doing?

00:08:00.540 --> 00:08:01.750
Get point.

00:08:01.750 --> 00:08:04.860
All right,

00:08:04.860 --> 00:08:05.250
there we go.

00:08:05.250 --> 00:08:05.690
All right.

00:08:05.690 --> 00:08:06.120
So,

00:08:06.120 --> 00:08:06.570
um,

00:08:06.570 --> 00:08:08.460
I actually made it air,

00:08:08.460 --> 00:08:10.000
but this is a good error,

00:08:10.000 --> 00:08:11.510
so we can actually see what's happening.

00:08:11.510 --> 00:08:12.250
So you'll see here,

00:08:12.250 --> 00:08:13.920
we do slash Rep artifact.

00:08:13.920 --> 00:08:16.760
And then it looks for the view slash web inf.

00:08:16.760 --> 00:08:17.250
Hello,

00:08:17.250 --> 00:08:18.120
world that gsp.

00:08:18.120 --> 00:08:19.300
So they're here actually was,

00:08:19.300 --> 00:08:21.880
since I have to put a slash here after weapons,

00:08:21.880 --> 00:08:23.660
since it doesn't put a slash on the matter.

00:08:23.660 --> 00:08:24.360
So let me go.

00:08:24.360 --> 00:08:26.850
And actually just fix this in the code real quickly.

00:08:26.850 --> 00:08:29.980
So inside our hello war No,

00:08:29.980 --> 00:08:30.280
no.

00:08:30.280 --> 00:08:30.610
Spring.

00:08:30.610 --> 00:08:31.040
Was he served?

00:08:31.040 --> 00:08:33.300
It was gonna do Web in slash.

00:08:33.300 --> 00:08:33.750
There we go.

00:08:33.750 --> 00:08:34.540
All right.

00:08:34.540 --> 00:08:35.720
And now it should,

00:08:35.720 --> 00:08:36.450
in theory,

00:08:36.450 --> 00:08:39.390
restart service the service and actually gives us no warning here.

00:08:39.390 --> 00:08:43.840
So no mapping found for http request with your eye slash lip artifacts lecture low.

00:08:43.840 --> 00:08:44.360
I mean,

00:08:44.360 --> 00:08:46.250
I guess that's in despite of service.

00:08:46.250 --> 00:08:48.220
So that's our dispatcher service.

00:08:48.220 --> 00:08:51.780
Looking for the name looking for the hello controller.

00:08:51.780 --> 00:08:54.700
And so since it can't find it and result,

00:08:54.700 --> 00:08:56.420
it gives us that I can't find the controller,

00:08:56.420 --> 00:08:57.560
OK?

00:08:57.560 --> 00:08:58.830
It doesn't appear to be We're starting.

00:08:58.830 --> 00:09:00.050
Something started manually.

00:09:00.050 --> 00:09:02.700
Uh,

00:09:02.700 --> 00:09:03.440
spring and B C.

00:09:03.440 --> 00:09:05.210
It's a difficult thing.

00:09:05.210 --> 00:09:07.850
Spring boot solve so many problems.

00:09:07.850 --> 00:09:09.670
Okay.

00:09:09.670 --> 00:09:09.940
All right,

00:09:09.940 --> 00:09:10.230
there we go.

00:09:10.230 --> 00:09:10.510
All right.

00:09:10.510 --> 00:09:10.910
Sounds good,

00:09:10.910 --> 00:09:11.280
Actually.

00:09:11.280 --> 00:09:12.840
Refresh this in theory,

00:09:12.840 --> 00:09:14.250
and there we go.

00:09:14.250 --> 00:09:20.330
So you'll see now that our view resolve were automatically adds the correct prefix and

00:09:20.330 --> 00:09:22.680
suffix to our your row.

00:09:22.680 --> 00:09:27.950
And so we just have to specify the name and not the folder or the,

00:09:27.950 --> 00:09:31.620
um or the file type.

00:09:31.620 --> 00:09:32.140
Now,

00:09:32.140 --> 00:09:32.400
of course,

00:09:32.400 --> 00:09:34.030
this thing This prince of problem.

00:09:34.030 --> 00:09:35.870
What if we have our view somewhere else?

00:09:35.870 --> 00:09:37.690
Or what if we have our views?

00:09:37.690 --> 00:09:38.610
I don't know.

00:09:38.610 --> 00:09:39.080
Maybe,

00:09:39.080 --> 00:09:39.780
uh,

00:09:39.780 --> 00:09:43.880
I some as jsp files in some of HTML files,

00:09:43.880 --> 00:09:45.820
that presents a problem,

00:09:45.820 --> 00:09:46.100
right?

00:09:46.100 --> 00:09:52.880
but usually in spring you would have all your files in one folder,

00:09:52.880 --> 00:09:55.820
all your sort of views.

00:09:55.820 --> 00:09:56.540
In one folder,

00:09:56.540 --> 00:09:58.450
you would have your CSS and,

00:09:58.450 --> 00:09:59.260
uh,

00:09:59.260 --> 00:10:02.270
CSS and JavaScript files in another folder,

00:10:02.270 --> 00:10:05.520
and they would just be referenced from the files individually.

00:10:05.520 --> 00:10:08.430
And those files were just being one folder and use one file type.

00:10:08.430 --> 00:10:10.650
So html or or a JCB or whatever.

00:10:10.650 --> 00:10:11.700
Okay,

00:10:11.700 --> 00:10:13.030
that said,

00:10:13.030 --> 00:10:15.040
there is There are a couple ways to get around this,

00:10:15.040 --> 00:10:16.160
but generally speaking,

00:10:16.160 --> 00:10:17.100
it is useful.

00:10:17.100 --> 00:10:20.600
Just toe have this prefix and suffix is because that shortens a lot of code.

00:10:20.600 --> 00:10:21.580
Okay,

00:10:21.580 --> 00:10:22.890
then shouldn't make sense.

00:10:22.890 --> 00:10:23.700
All right,

00:10:23.700 --> 00:10:24.330
that essentially,

00:10:24.330 --> 00:10:29.390
what the view resolve or does so the review resolve or goes ahead and tries to find the

00:10:29.390 --> 00:10:35.030
view and then adds in the by adding in the correct prefixes and suffixes and what we

00:10:35.030 --> 00:10:35.450
specify.

00:10:35.450 --> 00:10:36.710
All right,

00:10:36.710 --> 00:10:37.150
Okay.

00:10:37.150 --> 00:10:41.810
And so now let's go ahead and take a look at the final sort of event of,

00:10:41.810 --> 00:10:44.310
uh,

00:10:44.310 --> 00:10:45.780
sort of the dispatcher servant.

00:10:45.780 --> 00:10:47.050
All right,

00:10:47.050 --> 00:10:49.430
so here we are on and finally we have this four views.

00:10:49.430 --> 00:10:53.240
This was just the dispatcher service finally returning the jsp file,

00:10:53.240 --> 00:10:58.500
or html file or whatever and sending it sort of off to you so that your browser can

00:10:58.500 --> 00:10:59.090
displayed.

00:10:59.090 --> 00:10:59.530
Okay,

00:10:59.530 --> 00:11:00.200
so pretty simple.

00:11:00.200 --> 00:11:01.410
All right,

00:11:01.410 --> 00:11:05.660
so all this is has we have more detail here is going to skim through this really quickly.

00:11:05.660 --> 00:11:09.530
So here's the sequence of events corresponding to an incoming http Request to dispatcher

00:11:09.530 --> 00:11:09.830
service.

00:11:09.830 --> 00:11:16.510
After receiving an http request dispatcher servant consults the handler mapping to call the

00:11:16.510 --> 00:11:17.620
appropriate controller.

00:11:17.620 --> 00:11:18.340
Alright,

00:11:18.340 --> 00:11:19.050
Make sense.

00:11:19.050 --> 00:11:20.900
The controllers,

00:11:20.900 --> 00:11:26.880
This is step to the controller takes the request and calls the appropriate service methods

00:11:26.880 --> 00:11:30.040
based on used get or post method.

00:11:30.040 --> 00:11:33.350
So I didn't really go over this because Joe speaking,

00:11:33.350 --> 00:11:34.510
we just used request mapping,

00:11:34.510 --> 00:11:36.510
which means we just mapped all methods,

00:11:36.510 --> 00:11:38.420
all requests methods to it,

00:11:38.420 --> 00:11:39.030
but yes.

00:11:39.030 --> 00:11:39.280
Oh,

00:11:39.280 --> 00:11:42.530
you could have different sort of,

00:11:42.530 --> 00:11:43.050
um,

00:11:43.050 --> 00:11:51.000
different controllers with same exact sort of mapping.

00:11:51.000 --> 00:11:51.790
Yeah.

00:11:51.790 --> 00:11:53.640
Different controllers with the same exact mapping.

00:11:53.640 --> 00:11:57.820
You could have to get points as long as they have different request type.

00:11:57.820 --> 00:12:00.540
So we could have get get one with yet and one with post,

00:12:00.540 --> 00:12:01.050
for example.

00:12:01.050 --> 00:12:01.980
Okay.

00:12:01.980 --> 00:12:07.560
The service met The service method will set model data based on defined business logic and

00:12:07.560 --> 00:12:08.200
returns.

00:12:08.200 --> 00:12:10.560
View name to Dispatcher service.

00:12:10.560 --> 00:12:14.790
And then this returns the view name to the dispatcher service,

00:12:14.790 --> 00:12:16.800
which then at the controller,

00:12:16.800 --> 00:12:18.700
which we will return your name or in our case,

00:12:18.700 --> 00:12:20.850
that actually returned a model and view.

00:12:20.850 --> 00:12:24.650
So there's they're just practicing that we'll just dissect the modeling too.

00:12:24.650 --> 00:12:26.650
Put everything into its are appropriate place.

00:12:26.650 --> 00:12:27.310
Okay,

00:12:27.310 --> 00:12:28.470
so then the dispatcher serval,

00:12:28.470 --> 00:12:33.110
it will take help from view resolve er to pick up the defined view for the request.

00:12:33.110 --> 00:12:38.380
So this is the view resolver that will give us the Suffolk's and prefix And then finally we

00:12:38.380 --> 00:12:39.080
have our view.

00:12:39.080 --> 00:12:40.660
So once views finalized,

00:12:40.660 --> 00:12:41.600
the dispatcher serve,

00:12:41.600 --> 00:12:47.050
it passes the model data to the view which is finally rendered on the browser.

00:12:47.050 --> 00:12:48.090
Well,

00:12:48.090 --> 00:12:49.880
I guess the model data to the Yeah,

00:12:49.880 --> 00:12:50.230
Yeah,

00:12:50.230 --> 00:12:50.870
the view.

00:12:50.870 --> 00:12:54.160
And then that view is then passed on to you,

00:12:54.160 --> 00:12:55.420
so you could be Now,

00:12:55.420 --> 00:12:55.890
remember,

00:12:55.890 --> 00:12:58.950
the dispatcher serve Little usually won't be on the same machine.

00:12:58.950 --> 00:13:01.640
So here what we're doing is we're actually calling local host.

00:13:01.640 --> 00:13:05.640
But most of time you're gonna be calling something like a my website dot com and your

00:13:05.640 --> 00:13:06.700
website is going to be located.

00:13:06.700 --> 00:13:09.100
It can be located on the other side of the world.

00:13:09.100 --> 00:13:14.940
So then it would pass that view the HTML from that view so it would compile the JSP file

00:13:14.940 --> 00:13:18.830
into a service and then passed that all the way down to you,

00:13:18.830 --> 00:13:23.460
where your browser can actually render it and give you a nice looking image of a cat

00:13:23.460 --> 00:13:25.790
picture or whatever it is.

00:13:25.790 --> 00:13:26.690
Okay,

00:13:26.690 --> 00:13:28.690
so all the above mentioned components I e.

00:13:28.690 --> 00:13:29.020
Handler,

00:13:29.020 --> 00:13:33.350
mapping controller and viewers over our parts of Web application context.

00:13:33.350 --> 00:13:35.010
There's that extra double here,

00:13:35.010 --> 00:13:36.660
which have to remove that,

00:13:36.660 --> 00:13:40.210
which is an extension of the plane application context,

00:13:40.210 --> 00:13:43.370
with some extra features necessary for Web applications.

00:13:43.370 --> 00:13:43.520
So,

00:13:43.520 --> 00:13:43.740
yes,

00:13:43.740 --> 00:13:46.010
the Web application context just have a different thing.

00:13:46.010 --> 00:13:48.330
Will go a little bit more a little bit deeper into it,

00:13:48.330 --> 00:13:51.070
but essentially just like we did Context application.

00:13:51.070 --> 00:13:51.810
I'm sorry.

00:13:51.810 --> 00:13:51.960
No,

00:13:51.960 --> 00:13:53.770
we did XML application context.

00:13:53.770 --> 00:13:55.560
We also have application context.

00:13:55.560 --> 00:13:57.930
It's just to sort of similar things.

00:13:57.930 --> 00:13:59.890
They're essentially just an application context,

00:13:59.890 --> 00:14:01.810
and that is what spring.

00:14:01.810 --> 00:14:05.840
It's actually one of the forms of dependency injection.

00:14:05.840 --> 00:14:08.700
And as we went over in the previous unit,

00:14:08.700 --> 00:14:14.860
dependency injection as a whole is essentially what spring is built on.

00:14:14.860 --> 00:14:15.690
So Yeah,

00:14:15.690 --> 00:14:17.250
pretty interesting.

00:14:17.250 --> 00:14:18.660
All right.

00:14:18.660 --> 00:14:19.370
So for homework,

00:14:19.370 --> 00:14:25.070
your job is to understand the dispatcher serve will understand the four sort of life cycles

00:14:25.070 --> 00:14:25.070
,

00:14:25.070 --> 00:14:27.900
the order of events of the dispatcher servant,

00:14:27.900 --> 00:14:33.250
and to get a good idea of where this fits into the whole puzzle,

00:14:33.250 --> 00:14:36.150
that is Web that is conservative element in Java.

00:14:36.150 --> 00:14:37.570
Okay,

00:14:37.570 --> 00:14:38.620
so I know at this point,

00:14:38.620 --> 00:14:40.110
we're not doing a lot of coat,

00:14:40.110 --> 00:14:44.510
but that's and can't get kind of boring,

00:14:44.510 --> 00:14:47.270
but this is very important to know.

00:14:47.270 --> 00:14:47.870
So ah,

00:14:47.870 --> 00:14:49.390
lot of people just going to learn the code,

00:14:49.390 --> 00:14:50.950
and then they they don't learn the theory.

00:14:50.950 --> 00:14:52.030
And in spring,

00:14:52.030 --> 00:14:52.980
the theory is key.

00:14:52.980 --> 00:14:54.480
So a lot of people actually complain.

00:14:54.480 --> 00:14:56.210
That's bring us absolutely terrible.

00:14:56.210 --> 00:14:57.150
Um,

00:14:57.150 --> 00:14:58.820
not documentation.

00:14:58.820 --> 00:15:01.580
Terrible error exception.

00:15:01.580 --> 00:15:04.350
I forgot what that's called.

00:15:04.350 --> 00:15:05.900
It gives you terrible exception,

00:15:05.900 --> 00:15:08.720
so it doesn't tell you exactly what happened where it happened.

00:15:08.720 --> 00:15:09.240
It's not.

00:15:09.240 --> 00:15:10.150
They're not detailed.

00:15:10.150 --> 00:15:14.650
But if you can thoroughly understand at a very high level,

00:15:14.650 --> 00:15:15.160
or actually,

00:15:15.160 --> 00:15:15.690
yeah,

00:15:15.690 --> 00:15:16.430
high level,

00:15:16.430 --> 00:15:20.670
or maybe a little little at a very detailed level off.

00:15:20.670 --> 00:15:22.070
What exactly spring is doing?

00:15:22.070 --> 00:15:27.090
I eat this dispatcher service view resolves controllers handler mapping against a one and

00:15:27.090 --> 00:15:27.600
so on,

00:15:27.600 --> 00:15:31.990
then you The errors that it throws are gonna make ah,

00:15:31.990 --> 00:15:32.760
lot of sense.

00:15:32.760 --> 00:15:33.280
So,

00:15:33.280 --> 00:15:33.450
yeah.

00:15:33.450 --> 00:15:34.650
Anyway,

00:15:34.650 --> 00:15:35.150
from work,

00:15:35.150 --> 00:15:39.810
make sure to learn this next time we're actually gonna be going over into this with a

00:15:39.810 --> 00:15:40.910
little bit more detail.

00:15:40.910 --> 00:15:41.530
Um,

00:15:41.530 --> 00:15:45.750
we're actually taking a look at some of the way that dispatcher service actually performed

00:15:45.750 --> 00:15:46.650
its operations.

00:15:46.650 --> 00:15:49.630
And so one that said in this time,

00:15:49.630 --> 00:15:52.820
learn with dispatched river does learn the four events that it does.

00:15:52.820 --> 00:15:53.550
And,

00:15:53.550 --> 00:15:53.920
um,

00:15:53.920 --> 00:15:54.780
we are,

00:15:54.780 --> 00:15:55.090
uh,

00:15:55.090 --> 00:15:55.850
we're good to go.

00:15:55.850 --> 00:15:56.880
So anyway,

00:15:56.880 --> 00:15:57.850
without further ado,

00:15:57.850 --> 00:15:58.460
um,

00:15:58.460 --> 00:15:59.510
I'll see next time.

