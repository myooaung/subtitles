WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.830
now that we have a production really spring good micro service application in hand,

00:00:04.830 --> 00:00:12.000
let's see how we can build a distributable jar file on the run the jar file toe achieve the

00:00:12.000 --> 00:00:12.470
same thing.

00:00:12.470 --> 00:00:20.110
So the first thing that we have to do is to goto our eclipse in open the palm dot xml.

00:00:20.110 --> 00:00:22.090
The Bond,

00:00:22.090 --> 00:00:22.640
or XML,

00:00:22.640 --> 00:00:28.340
doesn't have dependency on hits to date of this because we added directly from project

00:00:28.340 --> 00:00:29.400
properties.

00:00:29.400 --> 00:00:30.860
And then we added,

00:00:30.860 --> 00:00:33.070
Why our job bill part like today?

00:00:33.070 --> 00:00:38.170
So we don't need this in this way because the May 1 told for installing all the

00:00:38.170 --> 00:00:40.050
dependencies looks only here,

00:00:40.050 --> 00:00:42.520
So we don't want that to be missed out.

00:00:42.520 --> 00:00:47.860
We can get rid of the itch to dependency from here so I can say removed.

00:00:47.860 --> 00:00:53.240
And then are the hits True dependency or here to get the hedge to dependency?

00:00:53.240 --> 00:00:56.290
Let's go back toe the spring initialize er,

00:00:56.290 --> 00:00:58.550
let's adhere age too.

00:00:58.550 --> 00:01:00.160
Click on this.

00:01:00.160 --> 00:01:02.480
When I say explore the project,

00:01:02.480 --> 00:01:03.500
we even see the palm,

00:01:03.500 --> 00:01:04.080
the XML.

00:01:04.080 --> 00:01:07.610
But this time I don't want to copy that entire Bonder XML,

00:01:07.610 --> 00:01:11.400
but I just want to get the kids to database dependency,

00:01:11.400 --> 00:01:12.480
so I'm gonna copy this.

00:01:12.480 --> 00:01:18.520
Go back toe clips in somewhere in between Angelo basis.

00:01:18.520 --> 00:01:23.230
The second thing is that because the X two databases is in the building part,

00:01:23.230 --> 00:01:26.750
Springboard automatically recognizes stage two on,

00:01:26.750 --> 00:01:28.960
then uses that as the driver.

00:01:28.960 --> 00:01:33.120
So we don't have explicitly mentioned in our application that property.

00:01:33.120 --> 00:01:34.420
So we don't need this.

00:01:34.420 --> 00:01:36.450
I can just make it other comment.

00:01:36.450 --> 00:01:37.750
Save it.

00:01:37.750 --> 00:01:45.510
And one last thing is toe build the jar file by right click on the project on the XML file

00:01:45.510 --> 00:01:45.510
.

00:01:45.510 --> 00:01:54.790
But on this May 1 in stock on this is gonna create a distributable jar file reading all the

00:01:54.790 --> 00:01:58.390
dependencies from our bombs or XML on.

00:01:58.390 --> 00:01:58.820
Finally,

00:01:58.820 --> 00:01:59.540
it said here,

00:01:59.540 --> 00:02:01.730
build success refresh,

00:02:01.730 --> 00:02:05.250
target folder and say explained,

00:02:05.250 --> 00:02:09.480
You see that there is a springboard demo 001 snatcher,

00:02:09.480 --> 00:02:10.150
Jack.

00:02:10.150 --> 00:02:14.600
Now I can open a command prompt or terminal on.

00:02:14.600 --> 00:02:16.120
Then around this job file,

00:02:16.120 --> 00:02:22.450
let's go to the United clearly knew that Let's get in tow their stop.

00:02:22.450 --> 00:02:29.930
We have this project for developing rest full services using spring boot and I have your A

00:02:29.930 --> 00:02:31.450
folder called Workspace.

00:02:31.450 --> 00:02:33.560
That's where my project is there,

00:02:33.560 --> 00:02:35.050
which is called springboard demo.

00:02:35.050 --> 00:02:37.950
Let's get in tow springboard demo.

00:02:37.950 --> 00:02:41.710
And then I have here a target folders.

00:02:41.710 --> 00:02:45.740
So if you take the pocket content I have here Springboard demo,

00:02:45.740 --> 00:02:47.070
snap short or char.

00:02:47.070 --> 00:02:52.340
So all I have to do is to type job Ominous John,

00:02:52.340 --> 00:02:57.360
target slash spring Good demo.

00:02:57.360 --> 00:02:57.990
So on.

00:02:57.990 --> 00:02:58.540
So jar.

00:02:58.540 --> 00:02:58.880
Fine.

00:02:58.880 --> 00:03:03.330
If I want to override any properties from the application,

00:03:03.330 --> 00:03:04.350
that property is fine.

00:03:04.350 --> 00:03:13.620
I can give you that before the target location as dashed capitally server port equals toe,

00:03:13.620 --> 00:03:14.610
for example,

00:03:14.610 --> 00:03:17.080
It zero or anything off your choice.

00:03:17.080 --> 00:03:17.820
Now,

00:03:17.820 --> 00:03:20.740
eijiro is the beef or pork for extra DP protocol,

00:03:20.740 --> 00:03:20.950
Which,

00:03:20.950 --> 00:03:24.260
which means you don't have to mention the port number while issuing the command.

00:03:24.260 --> 00:03:25.260
Now,

00:03:25.260 --> 00:03:26.480
if this is okay,

00:03:26.480 --> 00:03:29.550
we should be able to see our springboard console logs.

00:03:29.550 --> 00:03:32.330
And somewhere in between,

00:03:32.330 --> 00:03:33.200
it should also say,

00:03:33.200 --> 00:03:41.280
Http Sarwer started at port number 80 And once this is done,

00:03:41.280 --> 00:03:44.960
if I go back to the postman Andi,

00:03:44.960 --> 00:03:50.480
send this request again for 7777 We don't have this server running anymore,

00:03:50.480 --> 00:03:53.230
so it should not come back with an portraitist.

00:03:53.230 --> 00:03:54.640
Could not get any response.

00:03:54.640 --> 00:04:01.730
But either I can stay here 80 are I can completely remove the port number on this time.

00:04:01.730 --> 00:04:03.820
I should get the output properly

