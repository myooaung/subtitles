1
00:00:00,000 --> 00:00:02,253
Hello, I'm Fernando Medina Corey,

2
00:00:02,253 --> 00:00:06,307
and welcome to my course on the serverless framework.

3
00:00:06,307 --> 00:00:07,136
In this module,

4
00:00:07,136 --> 00:00:14,399
we'll be deploying a text notification website with a serverless HTTP API.

5
00:00:14,399 --> 00:00:17,123
In this module, we'll learn about serverless plugins.

6
00:00:17,123 --> 00:00:19,551
We'll start with an overview of the serverless plugin model

7
00:00:19,551 --> 00:00:21,477
before taking a closer look at serverless-finch,

8
00:00:21,477 --> 00:00:25,562
a plugin we'll be using to deploy static websites to AWS.

9
00:00:25,562 --> 00:00:28,444
Then we'll learn about serverless APIs.

10
00:00:28,444 --> 00:00:32,268
We'll overview all the components that make up a serverless API on AWS,

11
00:00:32,268 --> 00:00:35,370
but we'll also take a closer look at one of the key components,

12
00:00:35,370 --> 00:00:36,755
the AWS API Gateway.

13
00:00:36,755 --> 00:00:37,102
Finally,

14
00:00:37,102 --> 00:00:40,625
we'll take an in-depth look at some of the configuration

15
00:00:40,625 --> 00:00:43,259
required to make these HTTP APIs function.

16
00:00:43,259 --> 00:00:46,783
After that, we'll get ready to create our module project.

17
00:00:46,783 --> 00:00:48,806
We'll get set up with Google Recaptcha and Twilio,

18
00:00:48,806 --> 00:00:50,633
which we'll need for the project.

19
00:00:50,633 --> 00:00:54,094
We'll scaffold out a service, review our function code,

20
00:00:54,094 --> 00:00:56,219
configure our API endpoints, and finally,

21
00:00:56,219 --> 00:00:58,344
we'll deploy the project to AWS.

22
00:00:58,344 --> 00:01:00,462
So let's get started.

23
00:01:00,462 --> 00:01:03,254
Let's take a look at how the functionality of the serverless

24
00:01:03,254 --> 00:01:05,969
framework can be extended using plugins.

25
00:01:05,969 --> 00:01:07,626
The serverless framework is merely a group of

26
00:01:07,626 --> 00:01:09,591
plugins that are provided at the core.

27
00:01:09,591 --> 00:01:13,711
These come together to create a set of functional commands for the terminal.

28
00:01:13,711 --> 00:01:15,719
But what can plugins do for us?

29
00:01:15,719 --> 00:01:19,938
Well, they can extend the utility of existing commands,

30
00:01:19,938 --> 00:01:22,310
or when we want new functionality entirely,

31
00:01:22,310 --> 00:01:24,005
we can create new plugins.

32
00:01:24,005 --> 00:01:28,481
And each of these in turn give us more command-line options and functionality.

33
00:01:28,481 --> 00:01:31,830
External plugins are added on a per service basis and

34
00:01:31,830 --> 00:01:33,504
are not usually applied globally.

35
00:01:33,504 --> 00:01:35,159
If you want to work with a plugin,

36
00:01:35,159 --> 00:01:37,059
make sure you're in your services root directory,

37
00:01:37,059 --> 00:01:40,691
and then install the corresponding plugin with the help of npm.

38
00:01:40,691 --> 00:01:44,689
We can install plugins on a service specific basis with npm install.

39
00:01:44,689 --> 00:01:48,057
If the purpose of the plugin is to augment the development process,

40
00:01:48,057 --> 00:01:50,736
we probably want to save it as a dev dependency,

41
00:01:50,736 --> 00:01:53,183
as shown here with the --save-dev flag.

42
00:01:53,183 --> 00:01:57,875
The next step after installing the plugin is to set any

43
00:01:57,875 --> 00:02:00,423
configuration that may be required for it to work.

44
00:02:00,423 --> 00:02:03,455
At a minimum, this usually includes creating a section of our serverless.

45
00:02:03,455 --> 00:02:05,547
yml file that specifies the plugin name,

46
00:02:05,547 --> 00:02:09,721
and may also mean we need a custom section to specify specific

47
00:02:09,721 --> 00:02:11,779
configuration details that the plug-in uses,

48
00:02:11,779 --> 00:02:15,391
but we'll look at specific examples of this in a moment.

49
00:02:15,391 --> 00:02:17,189
Let's take a look at serverless finch,

50
00:02:17,189 --> 00:02:20,392
the serverless plugin we'll be using in this module to deploy

51
00:02:20,392 --> 00:02:22,631
a static site frontend to our application.

52
00:02:22,631 --> 00:02:24,970
The first thing we'll need are some pre-made static site files,

53
00:02:24,970 --> 00:02:27,481
including HTML, CSS styles, and imagery.

54
00:02:27,481 --> 00:02:29,574
To save us some work,

55
00:02:29,574 --> 00:02:32,394
I'll be providing us with a template website that you'll be able to use.

56
00:02:32,394 --> 00:02:32,898
With this,

57
00:02:32,898 --> 00:02:35,669
we'll be able to start testing our site locally to make

58
00:02:35,669 --> 00:02:37,945
sure it looks and works as expected.

59
00:02:37,945 --> 00:02:41,626
Then we'll use the serverless finch plugin to move the static site

60
00:02:41,626 --> 00:02:44,933
files to AWS S3 and set them up as a static website.

61
00:02:44,933 --> 00:02:47,725
At that point, the website will be available to the internet at large,

62
00:02:47,725 --> 00:02:50,720
and any users who'd like to see it will be able to access it.

63
00:02:50,720 --> 00:02:59,000
We'll get into the details of using serverless finch more during the demo, but for now, let's take a look at serverless APIs.

