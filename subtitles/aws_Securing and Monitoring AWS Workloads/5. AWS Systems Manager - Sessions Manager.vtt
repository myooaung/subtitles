WEBVTT
1
00:00:01.140 --> 00:00:04.110
Now that you have seen how the run command works,

2
00:00:04.110 --> 00:00:07.370
let's switch our attention to Session Manager.

3
00:00:07.370 --> 00:00:11.250
Click on Session Manager to your left.

4
00:00:11.250 --> 00:00:14.440
Choose Start Session.

5
00:00:14.440 --> 00:00:17.590
Though we have two running instances,

6
00:00:17.590 --> 00:00:24.040
it displays only the instance to which we linked the IAM rule.

7
00:00:24.040 --> 00:00:29.390
Let me select the instance and click on Start Session.

8
00:00:29.390 --> 00:00:34.120
This opens up a session with our EC2 instance.

9
00:00:34.120 --> 00:00:41.050
Let me check the username by entering whoami command. And ssm‑user is

10
00:00:41.050 --> 00:00:45.240
a username with which we are currently logged in.

11
00:00:45.240 --> 00:00:49.730
Let me issue the same command that the issued in run command. It

12
00:00:49.730 --> 00:00:54.340
looks like all the packages are up to date.

13
00:00:54.340 --> 00:00:59.240
Click on Terminate to terminate the session.

14
00:00:59.240 --> 00:01:03.220
Choose the tab Session history, and it lists all the

15
00:01:03.220 --> 00:01:07.540
sessions that have been established so far.

16
00:01:07.540 --> 00:01:15.030
Click Preferences, choose Edit, and you have the option to enable KMS

17
00:01:15.030 --> 00:01:20.370
and write your session output to an S3 bucket after the CloudWatch

18
00:01:20.370 --> 00:01:26.380
log. One of the main benefits of Session Manager is that we no longer

19
00:01:26.380 --> 00:01:32.150
need to rely on bastion host or open specific ports in our instances.

20
00:01:32.150 --> 00:01:34.080
To demonstrate this,

21
00:01:34.080 --> 00:01:41.150
let's go back to our EC2 console. Select the instance, click on the security

22
00:01:41.150 --> 00:01:48.240
group, launch‑wizard‑2, click on the tab Inbound Rules.

23
00:01:48.240 --> 00:01:48.750
Currently,

24
00:01:48.750 --> 00:01:53.610
it allows an SSH collection at port 22. And we are going to

25
00:01:53.610 --> 00:01:59.420
remove this rule. Click on Edit inbound rules, and click on

26
00:01:59.420 --> 00:02:06.620
Delete, and save the rule. Now that we don't have any inbound

27
00:02:06.620 --> 00:02:12.620
rules set up for this instance, let me try to connect to this instance.

28
00:02:12.620 --> 00:02:19.080
Click Actions, choose Connect, and you can see a warning message of the top

29
00:02:19.080 --> 00:02:24.540
saying, You may not be able to connect to this instance since port 22 is not

30
00:02:24.540 --> 00:02:31.840
set up. Now let's go to Systems Manager console.

31
00:02:31.840 --> 00:02:35.620
Click on Sessions Manager to your left,

32
00:02:35.620 --> 00:02:40.080
select the instance, and click on Start session,

33
00:02:40.080 --> 00:02:45.690
and you can see we still successfully can connect to this instance.

34
00:02:45.690 --> 00:02:52.630
Let me enter the command whoami, and I'm logged in as ssm‑user.

35
00:02:52.630 --> 00:02:53.920
In the next module,

36
00:02:53.920 --> 00:03:04.000
you will learn how to use AWS Trusted Adviser to identify potential security issues in your AWS account.

