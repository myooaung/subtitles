1
00:00:02,360 --> 00:00:06,900
Welcome to this module on penetration testing and security vulnerability

2
00:00:06,900 --> 00:00:11,950
assessment. Before we dive deep into this module, let's begin to

3
00:00:11,950 --> 00:00:17,660
understand what AWS shared responsibility model is.

4
00:00:17,660 --> 00:00:20,280
The AWS offers three different types of services.

5
00:00:20,280 --> 00:00:25,010
First one is infrastructure services.

6
00:00:25,010 --> 00:00:29,660
Second, container services. And the third one is abstract

7
00:00:29,660 --> 00:00:36,070
services. In AWS shared responsibility model, AWS is responsible

8
00:00:36,070 --> 00:00:40,220
for the security 'OF' the cloud, and you as a customer are

9
00:00:40,220 --> 00:00:43,700
responsible for security 'IN' the cloud.

10
00:00:43,700 --> 00:00:48,230
The shared responsibility model for each of these services differs slightly,

11
00:00:48,230 --> 00:00:52,250
and we are going to look at infrastructure service in detail.

12
00:00:52,250 --> 00:00:56,280
When we says security of the cloud,

13
00:00:56,280 --> 00:01:00,480
we are referring to the security of the infrastructure ranging from

14
00:01:00,480 --> 00:01:07,440
physical security, network security, and regulatory complaints. As a

15
00:01:07,440 --> 00:01:12,120
customer, you'll be more focused on securing your instances by

16
00:01:12,120 --> 00:01:14,740
applying security patches on time,

17
00:01:14,740 --> 00:01:18,730
protecting data at rest and in transit, keeping users

18
00:01:18,730 --> 00:01:22,600
policies and configurations all up to date.

19
00:01:22,600 --> 00:01:28,120
Services like Amazon EC2, ELB, auto‑scaling, and VPC

20
00:01:28,120 --> 00:01:31,300
follow infrastructure services model.

21
00:01:31,300 --> 00:01:36,630
Each of these infrastructure services are provisioned by AWS and operated

22
00:01:36,630 --> 00:01:40,640
within the specific region where they have been launched.

23
00:01:40,640 --> 00:01:45,320
Just like on‑premises infrastructure, you will then install the required OS,

24
00:01:45,320 --> 00:01:48,980
and then you install your applications, and customer data will be

25
00:01:48,980 --> 00:01:53,390
residing at the top, which is managed by your applications.

26
00:01:53,390 --> 00:01:57,050
Customers are responsible for patching, upgrading, and

27
00:01:57,050 --> 00:02:00,640
maintaining compliance to security standards.

28
00:02:00,640 --> 00:02:04,390
Most of the AWS customers felt that their existing

29
00:02:04,390 --> 00:02:07,240
vulnerability tools were hard to adapt,

30
00:02:07,240 --> 00:02:11,360
and they were looking to AWS for more cloud‑native solutions that they

31
00:02:11,360 --> 00:02:16,340
can use to complement shared security model so that they can automate

32
00:02:16,340 --> 00:02:21,100
the vulnerability detection and recommendations as how to run and

33
00:02:21,100 --> 00:02:24,910
manage their EC2 instances securely.

34
00:02:24,910 --> 00:02:32,640
This resulted in AWS coming up with a new service, and that is Amazon Inspector.

35
00:02:32,640 --> 00:02:37,300
It's a security service that assesses applications for exposure,

36
00:02:37,300 --> 00:02:42,810
vulnerabilities, and deviations from best practices, and produce a

37
00:02:42,810 --> 00:02:46,740
detailed list of security findings.

38
00:02:46,740 --> 00:02:52,470
Let's look at some of the key features offered by Amazon Inspector.

39
00:02:52,470 --> 00:02:58,140
Automated assessment. With Amazon Inspector, you can make security

40
00:02:58,140 --> 00:03:02,340
vulnerability assessment as part of your regular ID operations by

41
00:03:02,340 --> 00:03:07,220
integrating it with your development and deployment pipelines.

42
00:03:07,220 --> 00:03:13,040
The assessments are done by an agent that gets installed in your EC2 instances.

43
00:03:13,040 --> 00:03:17,500
These agents can be installed manually using the run command in System

44
00:03:17,500 --> 00:03:22,440
Administrator, or they can be installed manually.

45
00:03:22,440 --> 00:03:25,240
Pay‑as‑you‑go pricing strategy.

46
00:03:25,240 --> 00:03:28,620
You can start your Amazon Inspector for free, and you won't

47
00:03:28,620 --> 00:03:32,890
be charged for your first 250 assessments.

48
00:03:32,890 --> 00:03:36,360
And then they will start charging you 15 cents for every

49
00:03:36,360 --> 00:03:40,000
assessment, which will go down to 4 cents as the number of

50
00:03:40,000 --> 00:03:43,680
assessments keeps increasing.

51
00:03:43,680 --> 00:03:48,450
Flexible operation. Amazon Inspector can be accessed from the

52
00:03:48,450 --> 00:03:54,960
management console, SDK, and there is an HTTPS API as well that you

53
00:03:54,960 --> 00:03:59,940
can use to access these APIs programmatically.

54
00:03:59,940 --> 00:04:06,700
Let's look at some of the terminologies used in Amazon Inspector. Inspector

55
00:04:06,700 --> 00:04:13,560
agent. This is the agent that needs to be installed in your EC2 instances that

56
00:04:13,560 --> 00:04:17,980
collects the data and checks for vulnerabilities.

57
00:04:17,980 --> 00:04:20,040
Rules packages.

58
00:04:20,040 --> 00:04:23,980
This is a collection of rules that your agent will check against

59
00:04:23,980 --> 00:04:27,040
before generating the vulnerability reports.

60
00:04:27,040 --> 00:04:31,500
You can think of these as security goals that you would

61
00:04:31,500 --> 00:04:35,600
like to enforce in your EC2 instances.

62
00:04:35,600 --> 00:04:37,940
Assessment target.

63
00:04:37,940 --> 00:04:40,810
It is a list of EC2 instances where these

64
00:04:40,810 --> 00:04:44,290
vulnerability checks will be performed.

65
00:04:44,290 --> 00:04:45,880
Assessment run.

66
00:04:45,880 --> 00:04:51,260
This is an operation where the agent monitors, collects, and

67
00:04:51,260 --> 00:04:55,710
analyzes the configuration data from resources that are mentioned in

68
00:04:55,710 --> 00:05:01,630
your assessment target. Assessment template is a configuration that

69
00:05:01,630 --> 00:05:04,340
is used during the assessment run,

70
00:05:04,340 --> 00:05:10,990
which defines the rules packages, SNS topics, tags of your instances,

71
00:05:10,990 --> 00:05:16,820
and the duration of the assessment run. Findings.

72
00:05:16,820 --> 00:05:21,050
This is a potential security issue that Amazon Inspector

73
00:05:21,050 --> 00:05:25,210
discovered during the assessment run.

74
00:05:25,210 --> 00:05:29,690
In Amazon Inspector, different security rules that are used to identify

75
00:05:29,690 --> 00:05:35,310
potential security issues and vulnerabilities are grouped as rule packages.

76
00:05:35,310 --> 00:05:39,470
There are checks to be run against your instances.

77
00:05:39,470 --> 00:05:44,930
You can include all the rules, or select a few of them to target a specific

78
00:05:44,930 --> 00:05:49,740
area of concern, how to address a specific security problem.

79
00:05:49,740 --> 00:05:54,040
Here are the rule packages that are used in Amazon Inspector.

80
00:05:54,040 --> 00:05:59,510
The first one is common vulnerabilities and exposures.

81
00:05:59,510 --> 00:06:03,110
The rules in this package help you identify if your

82
00:06:03,110 --> 00:06:06,450
instances are exposed to the latest vulnerabilities that

83
00:06:06,450 --> 00:06:08,780
can compromise the confidentiality,

84
00:06:08,780 --> 00:06:16,330
integrity, and availability. Center for Internet Security benchmarks.

85
00:06:16,330 --> 00:06:21,120
These benchmarks provides an industry‑recognized best practices that

86
00:06:21,120 --> 00:06:26,880
help organizations improve and assess the security. Security best

87
00:06:26,880 --> 00:06:31,600
practices. Amazon Inspector has a list of best practice recommendations

88
00:06:31,600 --> 00:06:38,260
that help identify if the systems are optimally configured. The last

89
00:06:38,260 --> 00:06:41,280
one is network reachability.

90
00:06:41,280 --> 00:06:51,000
This helps identify those restricted ports that may be reachable from the internet, either via internet directly or through a VPC gateway.

