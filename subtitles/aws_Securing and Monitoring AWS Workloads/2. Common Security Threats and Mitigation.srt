1
00:00:00,780 --> 00:00:05,970
In this clip, you're going to see some of the common security threats that you,

2
00:00:05,970 --> 00:00:07,660
as a security administrator,

3
00:00:07,660 --> 00:00:11,980
need to be aware of while designing the security of your application.

4
00:00:11,980 --> 00:00:15,870
Before looking at some of the common security threats,

5
00:00:15,870 --> 00:00:22,520
let's quickly revisit and understand AWS shared responsibility model.

6
00:00:22,520 --> 00:00:26,510
To explain this, let me draw on an analogy.

7
00:00:26,510 --> 00:00:31,730
Let's assume that you own one of the shops in your local mall.

8
00:00:31,730 --> 00:00:37,690
The property owners will take the responsibility of securing the entire mall by

9
00:00:37,690 --> 00:00:42,880
providing mall cops and security agents who will be constantly patrolling the

10
00:00:42,880 --> 00:00:46,340
property with the intention of providing safety,

11
00:00:46,340 --> 00:00:51,760
responding to emergencies, and preventing criminal activities.

12
00:00:51,760 --> 00:00:56,440
But you, as a sharp owner, will be responsible for securing your shop,

13
00:00:56,440 --> 00:00:57,940
setting up monitoring equipment,

14
00:00:57,940 --> 00:01:03,340
and protecting the customers and goods that are within the shop.

15
00:01:03,340 --> 00:01:08,940
Similarly, at a high level in AWS shared responsibility model,

16
00:01:08,940 --> 00:01:12,970
AWS is responsible for security of the cloud,

17
00:01:12,970 --> 00:01:19,110
and you, as a customer, are responsible for security in the cloud.

18
00:01:19,110 --> 00:01:23,340
AWS offers three different types of services.

19
00:01:23,340 --> 00:01:27,540
The first one is infrastructure services.

20
00:01:27,540 --> 00:01:30,740
The second one is container services.

21
00:01:30,740 --> 00:01:34,560
And the next one is abstract services.

22
00:01:34,560 --> 00:01:36,570
When we say security after cloud,

23
00:01:36,570 --> 00:01:39,300
we are referring to the security of the

24
00:01:39,300 --> 00:01:42,120
infrastructure ranging from physical security,

25
00:01:42,120 --> 00:01:46,740
network security, and regulatory complaints.

26
00:01:46,740 --> 00:01:48,020
As a customer,

27
00:01:48,020 --> 00:01:51,960
you'll be more focused on securing your instances by

28
00:01:51,960 --> 00:01:58,050
applying security patches on time, protecting data at rest and in transit,

29
00:01:58,050 --> 00:02:03,600
keeping user policies and configurations up to date.

30
00:02:03,600 --> 00:02:06,740
Let's look at some of the common security threats

31
00:02:06,740 --> 00:02:10,800
that need to be addressed by you, as a customer.

32
00:02:10,800 --> 00:02:15,570
First and foremost is improperly configured IAM privileges that

33
00:02:15,570 --> 00:02:20,340
allow individuals access to restricted resources.

34
00:02:20,340 --> 00:02:22,310
So as a security administrator,

35
00:02:22,310 --> 00:02:26,360
you will need a thorough understanding of AWS IAM.

36
00:02:26,360 --> 00:02:27,780
And when in doubt,

37
00:02:27,780 --> 00:02:34,740
always start with least privileges and provide more access as needed.

38
00:02:34,740 --> 00:02:38,740
The next one is security group configurations.

39
00:02:38,740 --> 00:02:41,140
When you are setting up your EC2 instances,

40
00:02:41,140 --> 00:02:45,130
you need to make sure that the inbound and outbound rules are

41
00:02:45,130 --> 00:02:50,110
configured properly by allowing traffic from the right resources

42
00:02:50,110 --> 00:02:54,390
and expose only those ports that are needed.

43
00:02:54,390 --> 00:02:58,450
Never let your inbound rules have CIDR blocks that

44
00:02:58,450 --> 00:03:02,360
open up access to the entire world.

45
00:03:02,360 --> 00:03:03,960
Later on in this module,

46
00:03:03,960 --> 00:03:09,250
you will see how _____ alerts you in case of improperly configured

47
00:03:09,250 --> 00:03:14,130
security groups that allow access to unrestricted ports and how to

48
00:03:14,130 --> 00:03:18,440
set up a CloudWatch event to monitor it.

49
00:03:18,440 --> 00:03:24,640
Next is to protect the data in your S3 buckets.

50
00:03:24,640 --> 00:03:28,780
An improperly configured S3 bucket with a wrong bucket

51
00:03:28,780 --> 00:03:33,460
policy that allows users to read or write data stored in

52
00:03:33,460 --> 00:03:36,940
S3 buckets might prove disaster.

53
00:03:36,940 --> 00:03:38,780
As mentioned before,

54
00:03:38,780 --> 00:03:42,650
it is always recommended to be conservative by starting with

55
00:03:42,650 --> 00:03:47,530
minimum required privileges and never allow read or write

56
00:03:47,530 --> 00:03:50,760
access to your S3 buckets to everyone.

57
00:03:50,760 --> 00:03:55,550
Next is improperly configured CloudTrail.

58
00:03:55,550 --> 00:03:59,370
Though CloudTrail is enabled by default,

59
00:03:59,370 --> 00:04:05,540
it provides 90 days of event history for all management events.

60
00:04:05,540 --> 00:04:10,690
It is not a permanent record, and it also doesn't record data events.

61
00:04:10,690 --> 00:04:12,270
For auditing purposes,

62
00:04:12,270 --> 00:04:16,330
you must create a trail that delivers logs to S3 buckets

63
00:04:16,330 --> 00:04:19,740
that are configured with write privileges.

64
00:04:19,740 --> 00:04:22,870
To make sure you obtain a complete record of events

65
00:04:22,870 --> 00:04:25,640
happening all through your AWS account,

66
00:04:25,640 --> 00:04:30,880
you should configure the trails to log events in all AWS regions.

67
00:04:30,880 --> 00:04:33,950
As a best practice preventative measure,

68
00:04:33,950 --> 00:04:39,280
AWS recommends using a centralized Amazon S3 bucket that is

69
00:04:39,280 --> 00:04:44,410
dedicated to capture all CloudTrail logs and encrypt it using

70
00:04:44,410 --> 00:04:48,570
serverâ€‘side encryption with AWS KMS.

71
00:04:48,570 --> 00:04:50,950
With this approach,

72
00:04:50,950 --> 00:04:57,010
all your security controls and access policies will be in one single place.

73
00:04:57,010 --> 00:05:03,240
The next one is setting up more restrictive network ACL rules.

74
00:05:03,240 --> 00:05:07,090
Network ACLs access a firewall and control traffic

75
00:05:07,090 --> 00:05:09,720
that is going in and out of a subnet.

76
00:05:09,720 --> 00:05:17,640
By default, they allow all inbound and outbound traffic, unlike security groups.

77
00:05:17,640 --> 00:05:22,680
Network ACL rules are prioritized based on the rule numbers.

78
00:05:22,680 --> 00:05:26,770
A lower number rule will always be executed first.

79
00:05:26,770 --> 00:05:30,940
So it's very important that you don't set up a lenient access

80
00:05:30,940 --> 00:05:34,290
that opens up all the ports and IP addresses,

81
00:05:34,290 --> 00:05:39,970
and start with a restrictive one and allow traffic from known IP addresses only.

82
00:05:39,970 --> 00:05:42,560
Creating public AMIs.

83
00:05:42,560 --> 00:05:45,290
In the first module,

84
00:05:45,290 --> 00:05:51,030
you saw the role of AMIs in launching an EC2 instance and how you, as a

85
00:05:51,030 --> 00:05:56,090
customer, can customize and create your own AMIs.

86
00:05:56,090 --> 00:06:00,680
Since these AMIs can contain proprietary and sensitive data,

87
00:06:00,680 --> 00:06:10,000
AWS recommends to set up these AMIs as private, and any public AMIs need to go through a thorough review process.

