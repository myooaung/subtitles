1
00:00:01,140 --> 00:00:02,050
In this clip,

2
00:00:02,050 --> 00:00:05,800
we will take a look at Amazon SES and the security

3
00:00:05,800 --> 00:00:09,780
protocols that you can use to connect to it.

4
00:00:09,780 --> 00:00:15,720
Amazon SES is an email service provided by Amazon that can be leveraged to

5
00:00:15,720 --> 00:00:20,280
send and receive email in a costâ€‘effective way by setting up your own

6
00:00:20,280 --> 00:00:26,510
domains. Where enterprise needs an email service, it often needs to deal with

7
00:00:26,510 --> 00:00:30,740
infrastructure cost, email server management,

8
00:00:30,740 --> 00:00:33,980
network configuration, and so on.

9
00:00:33,980 --> 00:00:38,100
Amazon SES eliminates all these challenges and lets you

10
00:00:38,100 --> 00:00:42,890
leverage the infrastructure provided by Amazon.

11
00:00:42,890 --> 00:00:47,840
The biggest value proposition offered by SES is that it seamlessly

12
00:00:47,840 --> 00:00:57,600
integrates with many other core AWS services, like EC2, EBS, SNS,

13
00:00:57,600 --> 00:01:09,300
IAM, S3, Lambda, CloudWatch, and CloudTrail. AWS SES offers multiple ways in

14
00:01:09,300 --> 00:01:14,620
sending email. Once an email address is validated, you can send an email

15
00:01:14,620 --> 00:01:21,940
directly from the console or using SMTP interface provided by SES, or you can

16
00:01:21,940 --> 00:01:28,130
use the AWS SDK and use Amazon SES API.

17
00:01:28,130 --> 00:01:31,560
Now let's turn our attention and look at the security protocols that you

18
00:01:31,560 --> 00:01:39,200
can use to connect to Amazon SES. First one is HTTPS.

19
00:01:39,200 --> 00:01:41,800
If you are using AWS SDK,

20
00:01:41,800 --> 00:01:48,380
all email communications are encrypted by TLS. Amazon SES

21
00:01:48,380 --> 00:01:56,440
supports TLS 1.0, TLS 1.1, and TLS 1.2.

22
00:01:56,440 --> 00:02:00,040
If you're using SES SMTP protocol,

23
00:02:00,040 --> 00:02:05,810
you are required to encrypt your connection using TLS and SES supports,

24
00:02:05,810 --> 00:02:12,940
StartTLS and TLS wrapper. StartTLS is a means of upgrading an

25
00:02:12,940 --> 00:02:16,570
unencrypted connection to an encrypted connection.

26
00:02:16,570 --> 00:02:22,530
And when you use TLS wrapper, the SMTP endpoint does not perform TLS

27
00:02:22,530 --> 00:02:28,680
negotiation and it initiates an encrypted connection directly. By

28
00:02:28,680 --> 00:02:35,540
default, SES uses opportunistic TLS, meaning it attempts to make a secure

29
00:02:35,540 --> 00:02:40,260
connection to the recipient email server, and if it could not, an SES

30
00:02:40,260 --> 00:02:43,940
will send the messages unencrypted.

31
00:02:43,940 --> 00:02:48,180
This default behavior of SES can be overridden by using

32
00:02:48,180 --> 00:02:53,710
the APIs that are provided by AWS SDK.

33
00:02:53,710 --> 00:02:56,700
This concludes the module on application environment

34
00:02:56,700 --> 00:03:05,000
security. In the next module, we will take a detailed look at AWS config and AWS GuardDuty.

