1
00:00:05,260 --> 00:00:11,730
Welcome everyone to the image basics of open C section of the course in this section we're going to

2
00:00:11,730 --> 00:00:17,430
begin building an understanding of how to use the open see the library specifically how to open images

3
00:00:17,490 --> 00:00:20,580
and draw on them later on a further section of the course.

4
00:00:20,580 --> 00:00:27,060
We're going to expand to learn about many more functionalities at the open sea the library has So the

5
00:00:27,120 --> 00:00:30,380
open CV or open source computer vision library.

6
00:00:30,570 --> 00:00:36,060
It's a library of programming functions mainly aimed at real time computer vision and computer vision

7
00:00:36,060 --> 00:00:40,000
just means using a computer to analyze images and videos.

8
00:00:40,200 --> 00:00:45,900
Very similar to the way a human analyzes something that they're looking at such as image or video such

9
00:00:45,900 --> 00:00:51,120
as determining whose face they see in an image and the open source computer vision library it was actually

10
00:00:51,120 --> 00:00:57,330
created all the way back in 1999 by Intel and it was written in C++ it's still written C plus plus we're

11
00:00:57,330 --> 00:01:01,560
going to be using However the python bindings that way we can directly is the Python programming language

12
00:01:01,890 --> 00:01:06,980
as well as Python libraries such as Matt pata lib or some pie along with open C.

13
00:01:06,990 --> 00:01:12,420
Keep in mind often when you're Google searching for tutorials on open C.V it's still really popular

14
00:01:12,420 --> 00:01:13,560
in C++.

15
00:01:13,570 --> 00:01:17,460
So you may find some solutions and answers in C++ instead of Python.

16
00:01:17,490 --> 00:01:19,790
So that's sometimes a little bit confusing for beginners.

17
00:01:19,810 --> 00:01:23,400
They're looking at the code and it's in a totally different programming language that isn't Python.

18
00:01:23,400 --> 00:01:28,470
So keep that in mind there's still a lot of research out there that are in C++ rope and CV and not yet

19
00:01:28,470 --> 00:01:29,190
in Python.

20
00:01:29,190 --> 00:01:34,380
However there is a full documentation for Python ANSI plus plus you just have to be aware of which one

21
00:01:34,380 --> 00:01:35,150
you're looking at.

22
00:01:37,130 --> 00:01:42,470
So in general the open C-v library already contains many popular algorithms for computer vision including

23
00:01:42,500 --> 00:01:46,430
object detection and tracking algorithms that are already built into the library.

24
00:01:46,610 --> 00:01:51,290
So we're going to start with the very basics doing things like opening files and drawing on images and

25
00:01:51,290 --> 00:01:55,680
slowly working our way up to understanding how to perform things like object detection and tracking.

26
00:01:57,300 --> 00:02:00,500
So the overall section goals here are to be able to open image files.

27
00:02:00,540 --> 00:02:04,170
Open Sivi in both a notebook setting and the python script.

28
00:02:04,260 --> 00:02:07,610
Which is why we're using Jupiter laughs as we're going to be able to use both of those.

29
00:02:07,820 --> 00:02:10,540
Then we're going to be able to draw simple geometries on images.

30
00:02:10,650 --> 00:02:14,840
Often the way you're doing things like object tracking you want to actually track the object by drawing

31
00:02:15,030 --> 00:02:17,990
for example a rectangle around the car as it's moving.

32
00:02:18,000 --> 00:02:22,640
So we have to understand how do we actually draw on videos and images and then we also want to be able

33
00:02:22,650 --> 00:02:25,350
to directly interact with an image through callbacks.

34
00:02:25,350 --> 00:02:26,460
So I mean directly interact.

35
00:02:26,490 --> 00:02:31,090
I mean opening up an image and being able to click on it and then draw some sort of object.

36
00:02:31,320 --> 00:02:31,850
OK.

37
00:02:32,070 --> 00:02:33,560
So those are section goals.

38
00:02:33,570 --> 00:02:35,360
Let's go ahead and get started.

39
00:02:35,370 --> 00:02:36,480
We'll see you in the next lecture.
