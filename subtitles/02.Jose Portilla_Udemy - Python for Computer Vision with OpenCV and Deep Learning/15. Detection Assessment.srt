1
00:00:05,350 --> 00:00:10,720
Welcome back in this lecture we're actually going to go over the assessment as a quick overview and

2
00:00:10,720 --> 00:00:13,110
then the next lecture will go over the solutions.

3
00:00:13,120 --> 00:00:14,760
This is a really cool assessment.

4
00:00:14,770 --> 00:00:19,660
We're going to combine a lot of ideas to actually create a real working application that blurs license

5
00:00:19,660 --> 00:00:20,530
plates.

6
00:00:20,560 --> 00:00:23,770
We're going to do in this lecture just do a quick overview of the notebook.

7
00:00:23,830 --> 00:00:26,400
So let's open up the Assessment Project.

8
00:00:26,410 --> 00:00:26,650
All right.

9
00:00:26,650 --> 00:00:31,090
So here is the object detection Assessment Project and don't worry we're not going over the solutions

10
00:00:31,090 --> 00:00:31,820
yet.

11
00:00:32,050 --> 00:00:37,330
And this one you're going to detect Russian license plates and then blur them out of images.

12
00:00:37,330 --> 00:00:41,580
So the Russians are pretty famous for having some of the most entertaining dash cam footage on the Internet.

13
00:00:41,650 --> 00:00:45,640
So let's try helping them out by actually blurring some of their license plate.

14
00:00:46,030 --> 00:00:48,130
So there's three ways to approach this project.

15
00:00:48,130 --> 00:00:53,890
One is you can just go for it just understand the idea that it's your job to blur Russian license plates

16
00:00:53,950 --> 00:00:57,420
and not even try to reference that notebook to see if you can build it on your own.

17
00:00:57,490 --> 00:01:03,080
Given some of the SML files there's a car plate that jpg file that you can use in order to try to build

18
00:01:03,090 --> 00:01:08,140
that function on that or the second way which is probably the most recommended way is to use this notebook

19
00:01:08,170 --> 00:01:09,400
as a Project Guide.

20
00:01:09,400 --> 00:01:14,010
We offer a guide of the main tasks you need to complete in order to actually create this application.

21
00:01:14,020 --> 00:01:18,400
The third way is if you want to take a step back and really treat this as a coatl on a project that's

22
00:01:18,400 --> 00:01:19,320
totally cool too.

23
00:01:19,330 --> 00:01:21,200
All you need to do is jump to the next lecture.

24
00:01:21,370 --> 00:01:26,790
Rugova the solutions that we can code along and build an understanding as I code the solutions out.

25
00:01:26,800 --> 00:01:31,350
In general our Project Guide all you need to do is import the usual libraries then you're going to read

26
00:01:31,360 --> 00:01:36,430
in this car plate that jpg file and I want you to create a function that displays the image in a larger

27
00:01:36,430 --> 00:01:41,480
scale you're really familiar with that by now and then this is the image we're going to be working with.

28
00:01:41,650 --> 00:01:44,410
So there is a screenshot from dash cam on YouTube.

29
00:01:44,620 --> 00:01:46,550
And this is a Russian license plate.

30
00:01:46,600 --> 00:01:50,760
So the ex-MIL file it's pre-trained in that data folder is for Russian license plates.

31
00:01:50,770 --> 00:01:51,760
It's not for American ones.

32
00:01:51,760 --> 00:01:55,020
That's why we're dealing with this particular image.

33
00:01:55,160 --> 00:02:00,490
So then you'll load this SML file and then I want you to create a function that takes in an image and

34
00:02:00,490 --> 00:02:03,730
draws a rectangle around what it detects to be a license plate.

35
00:02:03,730 --> 00:02:05,430
So keep in mind we're not blurring yet.

36
00:02:05,530 --> 00:02:08,950
All this functions should be doing is what we did in the previous lecture or at least really similar

37
00:02:08,950 --> 00:02:09,450
to it.

38
00:02:09,730 --> 00:02:12,910
And then just drawing a rectangle around it.

39
00:02:12,970 --> 00:02:14,940
So you'll have the template function.

40
00:02:15,120 --> 00:02:19,960
And once it runs it should be able to draw a red rectangle around it like this.

41
00:02:19,960 --> 00:02:26,170
So then the final task is to edit that function so it effectively actually blurs that detected region.

42
00:02:26,170 --> 00:02:31,120
So this is when you combine a lot of the image processing ideas that we previously discussed in other

43
00:02:31,120 --> 00:02:32,730
sections of the course.

44
00:02:32,770 --> 00:02:39,190
So there's some hints here basically steps on what you should do to actually detect and then blur it.

45
00:02:39,280 --> 00:02:39,910
A lot of it.

46
00:02:39,940 --> 00:02:42,360
The trick is just understanding and slicing.

47
00:02:42,370 --> 00:02:46,680
So definitely take a hard look or hard read at some of the hints I left for here.

48
00:02:46,900 --> 00:02:52,780
But at the end of the day we should be able to do is after running an image through the text and boilerplate

49
00:02:53,110 --> 00:02:56,610
it will automatically detect license plates and then blur them.

50
00:02:56,620 --> 00:03:02,740
So in this image it detects this license plate and I can read it it says something like 0 3 3 P-A.

51
00:03:03,130 --> 00:03:08,020
If I run it through my updated text and boilerplate it should eventually just be blurred to the point

52
00:03:08,020 --> 00:03:12,550
where I can no longer read it and notice it's just that section that's blurred the entire image is not

53
00:03:12,550 --> 00:03:13,090
blurred.

54
00:03:13,090 --> 00:03:14,340
This was on a rainy day.

55
00:03:14,350 --> 00:03:18,790
So it's a little blurry but definitely it's just a license plate that has been blurred with whatever

56
00:03:18,790 --> 00:03:20,080
blurry mechanism you're on.

57
00:03:20,080 --> 00:03:22,280
Probably a median blur is the easiest.

58
00:03:22,300 --> 00:03:22,710
OK.

59
00:03:22,900 --> 00:03:26,840
So best of luck on this and we'll see you at the next lecture where we go over the solutions.
