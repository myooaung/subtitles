WEBVTT
1
00:00:05.350 --> 00:00:06.850
Welcome back everyone.

2
00:00:06.880 --> 00:00:10.990
It's now time to test your new skills with a quick assessment and this lecture we're going to go an

3
00:00:11.020 --> 00:00:16.090
overview of the assessment notebook on image processing and in the next lecture we'll go over the solutions

4
00:00:16.090 --> 00:00:16.850
notebook.

5
00:00:16.930 --> 00:00:18.950
It's up to you how you want to treat this project.

6
00:00:19.030 --> 00:00:24.010
If you just want to go along with this lecture and then attempt every task on your own or you can skip

7
00:00:24.010 --> 00:00:28.470
forward to the next lecture and treat it as a code along and code along with us for the solutions.

8
00:00:28.660 --> 00:00:31.870
Let's head to the notebook and see what your tasks are for this assessment.

9
00:00:31.870 --> 00:00:36.300
All right if you open your image processing assessment notebook it should look something like this.

10
00:00:36.310 --> 00:00:39.030
Don't worry we're not going over the solutions yet.

11
00:00:39.130 --> 00:00:42.940
There is some code here that's just some useful code that should already be there for you.

12
00:00:42.940 --> 00:00:48.070
It's just the imports we usually use and also the display image function that displays images a little

13
00:00:48.070 --> 00:00:53.380
larger and you can feel free to play around to fix sightseer in case you want to display images a little

14
00:00:53.380 --> 00:00:55.560
smaller or a little larger in the notebook.

15
00:00:55.600 --> 00:01:01.480
Your first task is to open and display the giraffe's thought JPK image that is located in the data folder

16
00:01:01.790 --> 00:01:05.120
and make sure you use color spacing to actually display the colors correctly.

17
00:01:05.350 --> 00:01:09.200
So once you do that you should see a photo of some giraffes that look something like this.

18
00:01:09.240 --> 00:01:10.630
Just a pair of giraffes.

19
00:01:11.050 --> 00:01:18.430
Then the next task here is to apply a binary threshold onto the image so it should look something like

20
00:01:18.430 --> 00:01:19.440
this.

21
00:01:19.450 --> 00:01:23.290
It's up to you what you can choose for the threshold but I would recommend choosing the middle point

22
00:01:23.290 --> 00:01:26.040
value for your threshold just like we did in the lecture.

23
00:01:26.050 --> 00:01:28.240
Again is just the normal binary threshold.

24
00:01:28.450 --> 00:01:31.970
Everything should either be a zero or 255 at the end.

25
00:01:32.140 --> 00:01:34.550
So either black or white.

26
00:01:34.850 --> 00:01:36.510
Let's scroll down to the next task.

27
00:01:37.730 --> 00:01:42.850
So for that task we want you to do is open up giraffes that jpg file again from the data folder.

28
00:01:42.860 --> 00:01:47.800
However this time convert color space to H S V and then display the image.

29
00:01:47.990 --> 00:01:52.800
Again it won't make a lot of sense the way the image looks after you convert it to hue saturation value.

30
00:01:52.800 --> 00:01:56.660
So you should get some sort of funky giraffes and the like purplish space.

31
00:01:56.680 --> 00:02:00.230
OK so once you've done that we have another task for you.

32
00:02:00.410 --> 00:02:07.040
So this task is to create a low pass filter with a four by four kernel filled with values of 1 over

33
00:02:07.040 --> 00:02:08.750
10 or 0.01.

34
00:02:08.990 --> 00:02:14.300
And then use to become volution to blur the giraffe image that we got above and we actually want this

35
00:02:14.360 --> 00:02:16.070
in normal RGV.

36
00:02:16.190 --> 00:02:21.630
So essentially just use a low pass filter for by for kernel convolution with values of 1 over 10.

37
00:02:21.740 --> 00:02:23.780
In order to blur the giraffe image.

38
00:02:23.780 --> 00:02:26.300
So your kernel should look something like this.

39
00:02:26.300 --> 00:02:28.160
Or do you have the right here.

40
00:02:28.170 --> 00:02:29.880
This for my for Zero Point ones.

41
00:02:30.020 --> 00:02:34.340
And when you blur what should eventually happen as you get something that looks like this it almost

42
00:02:34.340 --> 00:02:37.040
looks like you applied a gamma to it because it's really bright.

43
00:02:37.040 --> 00:02:39.150
But notice that giraffes are a little blurrier.

44
00:02:39.170 --> 00:02:44.690
The entire cloud and white space is now blurred to just pure white and everything is a little brighter

45
00:02:44.690 --> 00:02:45.650
and a little blurrier.

46
00:02:47.010 --> 00:02:52.680
Once you've done that you have another task and that's to create a horizontal Sobell filter box so that's

47
00:02:52.680 --> 00:02:58.790
just going to be Sobell X and you're going to apply that filter along for kernel size of 5 to 8 greyscale

48
00:02:58.800 --> 00:03:03.460
version of the giraffe's image and then display the resulting gradient filtered version of the image.

49
00:03:03.540 --> 00:03:06.690
Very similar to what we did in that lecture on gradients.

50
00:03:06.690 --> 00:03:07.990
So if we scroll down here.

51
00:03:08.070 --> 00:03:10.770
Eventually you should get a result that looks something like this.

52
00:03:10.770 --> 00:03:13.720
Showing the edges of the giraffe and maybe a little bit of the backgrounds.

53
00:03:13.740 --> 00:03:18.210
Maybe those two zebras there but notice the sky now is basically completely edulis.

54
00:03:18.230 --> 00:03:21.030
OK so that's it for your tasks.

55
00:03:21.180 --> 00:03:22.970
Sorry you got one more left.

56
00:03:22.980 --> 00:03:28.590
Your last task Scuse me is to pluck the color histograms for red blue and green channels for the giraffe

57
00:03:28.620 --> 00:03:32.610
image and pay very close attention to the ordering of the channels.

58
00:03:32.610 --> 00:03:34.940
Here is the correct histogram.

59
00:03:34.950 --> 00:03:39.850
Keep in mind if you were to read in the image fresh the red and blue channels maybe switched.

60
00:03:39.870 --> 00:03:41.750
If you read it in with open C.v.

61
00:03:41.760 --> 00:03:46.730
So just keep that in mind what the actual order for red blue and green is.

62
00:03:46.750 --> 00:03:51.360
OK so best of luck and we'll see you at the next lecture where we actually go over the solutions.
