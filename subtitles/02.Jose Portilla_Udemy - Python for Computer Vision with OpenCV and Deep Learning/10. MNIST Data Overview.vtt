WEBVTT
1
00:00:05.310 --> 00:00:11.550
Welcome back in this lecture we're going to discuss the dataset before we actually get started.

2
00:00:11.570 --> 00:00:13.740
Convolutional neural networks and carers.

3
00:00:13.910 --> 00:00:17.870
I want to quickly take a brief moment to really understand this classical data set.

4
00:00:17.960 --> 00:00:22.130
And if you've ever had any other course or even read a book on deep learning you've probably already

5
00:00:22.130 --> 00:00:27.050
encountered this dataset before it's super famous in the field especially in convolutional neural networks

6
00:00:27.110 --> 00:00:28.320
and deep learning.

7
00:00:28.370 --> 00:00:32.810
I want to quickly cover some basics about it since we're going to be using really similar data concepts

8
00:00:32.840 --> 00:00:37.720
specifically the way we organize these datasets into for they missional arrays.

9
00:00:37.910 --> 00:00:43.630
So it's the reason that idea quite frequently throughout the course I wanted to briefly cover that OK.

10
00:00:43.810 --> 00:00:47.080
Now for this particular dataset Fortunately it's really easy to access.

11
00:00:47.140 --> 00:00:53.110
Curious use uploader with a built in function and carers and it has 60000 training images and 10000

12
00:00:53.110 --> 00:00:56.550
test images right off the bat you can tell that it's a huge data set.

13
00:00:57.880 --> 00:01:02.760
And the smallest dataset in case you're not familiar with it it contains handwritten single digits from

14
00:01:02.770 --> 00:01:04.480
0 to 9.

15
00:01:04.480 --> 00:01:10.810
So here we see some examples of all the different ways people draw zeros ones twos threes and so on.

16
00:01:10.840 --> 00:01:18.060
Now as you may imagine a single digit image can be represented as an array so specifically in this dataset

17
00:01:18.360 --> 00:01:24.810
the arrays are 28 by 28 and they're just pixels where the value of 0 represents white and the value

18
00:01:24.870 --> 00:01:27.250
of 1 represents black.

19
00:01:27.300 --> 00:01:32.340
So these values are grayscale meaning we only have a single color channel and also important to note

20
00:01:32.340 --> 00:01:38.610
here is that it's been standardized or normalized so you can see all the values fall between 0 and 1

21
00:01:38.970 --> 00:01:41.750
instead of values from 0 to 255.

22
00:01:41.760 --> 00:01:46.360
That's really going to help our network learn on this particular sorts of data sets.

23
00:01:46.380 --> 00:01:51.480
So often when we're working with image data we will normalize things to fall between 0 and 1.

24
00:01:51.480 --> 00:01:55.760
This dataset already has that step for us.

25
00:01:55.830 --> 00:02:03.040
Now we can think of the entire group of 60000 images or for the test sets 10000 images as a for them.

26
00:02:03.090 --> 00:02:09.420
Array and it's fourth dimension is because we have the dimension for all the images the dimension for

27
00:02:09.450 --> 00:02:10.260
the color channel.

28
00:02:10.260 --> 00:02:14.060
In this case it's one dimension for the x and y 28.

29
00:02:14.070 --> 00:02:16.780
So we have this really large for that missional array.

30
00:02:17.160 --> 00:02:21.630
And so it's going to for mentions of 60000 28 by 28 and then 1.

31
00:02:21.780 --> 00:02:25.650
So we have the samples the X and the Y and then number of color channels.

32
00:02:25.860 --> 00:02:30.300
In this case we have just a single color channel because it's grayscale but for color images.

33
00:02:30.300 --> 00:02:35.450
That last image and value would be three because we'd have one value for red one value for green and

34
00:02:35.470 --> 00:02:36.620
one for blue.

35
00:02:36.720 --> 00:02:40.890
All standardized between 0 and 1.

36
00:02:40.930 --> 00:02:44.910
Now for the actual labels we're going to use something known as one hot encoding.

37
00:02:44.950 --> 00:02:50.050
This means that instead of having categorical labels such as strings of one to et cetera will have a

38
00:02:50.050 --> 00:02:50.950
single array.

39
00:02:50.950 --> 00:02:57.230
For each image now the original labels when you upload and Karris they're actually given as a list of

40
00:02:57.230 --> 00:02:57.950
numbers.

41
00:02:57.980 --> 00:03:03.590
So it's the very first image is a drawing of the number five then its corresponding label is just the

42
00:03:03.590 --> 00:03:04.600
digit 5.

43
00:03:04.640 --> 00:03:07.790
And what we did do is we need to convert that to 100 coding.

44
00:03:07.940 --> 00:03:10.640
Again this transformation is actually really easily done of course.

45
00:03:10.730 --> 00:03:15.010
But I want to make sure that we understand what's happening behind the scenes.

46
00:03:15.080 --> 00:03:21.440
So what happens is the label is represented based off the index position and the label array the corresponding

47
00:03:21.440 --> 00:03:26.330
label will be a one at the index location and zero everywhere else.

48
00:03:26.360 --> 00:03:32.400
For example if you happen to have a drawn digit A for that it would have this particular label array.

49
00:03:32.420 --> 00:03:33.880
Notice the index for.

50
00:03:33.890 --> 00:03:36.300
So 0 1 2 3 4.

51
00:03:36.380 --> 00:03:39.520
That is one hot and coded to be a one.

52
00:03:39.560 --> 00:03:45.830
And the reason we use this one hot in coding is because it works really well with a single layer output

53
00:03:46.070 --> 00:03:54.670
where we have 10 neurons and then each of them is triggered to fire off a sigmoid to either 0 or 1.

54
00:03:54.680 --> 00:03:59.760
Now as a result the labels for the training data ends up being a really large to the array.

55
00:03:59.780 --> 00:04:06.090
So we end up having 60000 by 10 because each of those labels is now an array of 10.

56
00:04:06.150 --> 00:04:09.570
And in case this image isn't really clear when we actually see it in.

57
00:04:09.600 --> 00:04:10.760
It looks something like this.

58
00:04:10.760 --> 00:04:14.900
So here's our white train for instance and we have all these one hot encodings.

59
00:04:15.080 --> 00:04:21.290
So that means if you look at the second row that number its label is 0 because it's one encoded at one

60
00:04:21.680 --> 00:04:22.680
index 0.

61
00:04:22.880 --> 00:04:25.260
And for some of these other ones it deleted.

62
00:04:25.340 --> 00:04:30.240
Well it has an ellipses for the middle value so we can't quite tell.

63
00:04:30.240 --> 00:04:34.920
OK so now we understand the end the state is set and one hand-coding Let's apply our new knowledge of

64
00:04:34.920 --> 00:04:38.070
convolutional neural networks with carers on this dataset.

65
00:04:38.310 --> 00:04:39.230
Let's get started.

66
00:04:39.230 --> 00:04:40.520
I'll see you at the next lecture.
