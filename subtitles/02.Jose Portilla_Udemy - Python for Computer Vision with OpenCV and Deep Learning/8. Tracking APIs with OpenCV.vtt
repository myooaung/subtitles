WEBVTT
1
00:00:05.290 --> 00:00:06.280
Welcome back.

2
00:00:06.280 --> 00:00:10.550
Now that we understand the theory behind some of these tracking API is open TV.

3
00:00:10.660 --> 00:00:14.290
Let's go ahead and explore how we can actually implement them with Python.

4
00:00:14.560 --> 00:00:20.110
I will actually be coding anything out manually in this lecture because the actual syntax with a tracking

5
00:00:20.110 --> 00:00:22.080
API is really simple.

6
00:00:22.090 --> 00:00:27.130
So instead we're going to be exploring the course notebook file showing how you can use it because there's

7
00:00:27.130 --> 00:00:31.540
also some functional code there that allows it to kind of player on the fit and easy to use manner.

8
00:00:31.720 --> 00:00:33.590
Let's open up that notebook and check it out.

9
00:00:34.380 --> 00:00:36.530
OK here I am at the tracking API.

10
00:00:36.600 --> 00:00:37.530
Notebook.

11
00:00:37.560 --> 00:00:39.430
First thing you notice is an import CB2.

12
00:00:39.450 --> 00:00:40.830
So that's not a big deal.

13
00:00:41.070 --> 00:00:46.530
And then the second thing here is this convenience function I created which allows you to easily select

14
00:00:46.560 --> 00:00:48.540
a tracker given the input.

15
00:00:48.540 --> 00:00:53.670
So what this does is it just prints out a bunch of information and then you get to choose based off

16
00:00:53.730 --> 00:00:58.340
entering 0 1 2 3 or 4 What actual tracking API you want to use.

17
00:00:58.380 --> 00:01:03.540
So it asks you to please select a tracker and then based off the choice you provide it's going to create

18
00:01:03.600 --> 00:01:04.440
a tracker.

19
00:01:04.440 --> 00:01:06.320
So the Treasury guys they all start the same way.

20
00:01:06.330 --> 00:01:08.180
It's CB2 tracker.

21
00:01:08.310 --> 00:01:13.580
And then the actual name of the tracker and then underscore create open close princes.

22
00:01:13.590 --> 00:01:17.420
So I went ahead and created the tracker and then I just return it free to use.

23
00:01:17.430 --> 00:01:19.350
So let's run this and see what this looks like.

24
00:01:20.360 --> 00:01:24.620
So if you run this it should say welcome what tracker would you like to use.

25
00:01:24.810 --> 00:01:30.470
And number here is for boosting 1 for m m i l or whatever 3 Tildy and so on.

26
00:01:30.680 --> 00:01:32.930
So we can just go ahead and use one of these.

27
00:01:32.930 --> 00:01:34.820
So go ahead and use median flow.

28
00:01:34.820 --> 00:01:37.210
So provide for and hit enter.

29
00:01:37.220 --> 00:01:43.640
Keep in mind you should only run this function or sell one at a time if you try running this twice without

30
00:01:43.970 --> 00:01:45.360
actually providing an input.

31
00:01:45.380 --> 00:01:47.530
You have an asterix here and it keeps running forever.

32
00:01:47.570 --> 00:01:52.080
That's the case just going to get kernel restart kernel and then run the cells again.

33
00:01:52.100 --> 00:01:54.550
Now something to keep in mind later on in my code.

34
00:01:54.560 --> 00:01:56.640
You see this kind of a weird line here.

35
00:01:56.690 --> 00:02:00.130
String tracker split and then some indexing.

36
00:02:00.140 --> 00:02:02.750
It's basically just to grab the actual track or name.

37
00:02:02.810 --> 00:02:07.670
So if you take a look at what the tracker is it's a Strecker median flow.

38
00:02:07.670 --> 00:02:14.630
Now what I wanted to do is later on use text on the CB2 image to actually type out tracker median flow.

39
00:02:14.870 --> 00:02:17.960
So I ended up doing is I translated that to a string.

40
00:02:18.050 --> 00:02:26.030
I split it on the whitespace grab the first instance and then got rid of this little left then or greater

41
00:02:26.030 --> 00:02:26.830
then.

42
00:02:26.870 --> 00:02:28.910
So let me show you what I actually mean by that.

43
00:02:28.910 --> 00:02:34.310
So essentially if I then index from 1 onwards I get rid of that less than sign.

44
00:02:34.310 --> 00:02:39.380
So this whole line of code is just for grabbing the string from the tracker and you'll see later on

45
00:02:39.500 --> 00:02:42.500
I use that string to label the tracker window.

46
00:02:42.890 --> 00:02:44.780
OK so do we actually use these tracking API.

47
00:02:44.810 --> 00:02:46.970
That's what you really came here for.

48
00:02:47.000 --> 00:02:48.220
It's really quite simple.

49
00:02:48.380 --> 00:02:50.130
You just create your tracker.

50
00:02:50.180 --> 00:02:55.340
And here I have this function call that creates it for you then you can if you want grab the string

51
00:02:55.950 --> 00:03:02.210
we read in the video we capture the first frame and then we're going to use this special select our

52
00:03:02.630 --> 00:03:07.940
function which when provided a frame allows you to manually draw out the bounding box of what you want

53
00:03:07.940 --> 00:03:11.820
to track so we can draw out manually our region of interest.

54
00:03:11.810 --> 00:03:18.170
Then we're going to do this is the key point is say tracker and then call an I.T. which initializes

55
00:03:18.170 --> 00:03:21.940
the tracker and we need to do is provide the frame of that first video.

56
00:03:22.190 --> 00:03:28.070
And the reason of interest you want to track the tracker will automatically deploy to try to keep tracking

57
00:03:28.070 --> 00:03:31.060
that region of interest given the frame that you gave it.

58
00:03:31.400 --> 00:03:36.450
So in a while you're going to keep reading new frames and then you are going to update the trackers

59
00:03:36.530 --> 00:03:41.540
say tracker that update an update to the new frame that you gave this tracker and it's going to attempt

60
00:03:41.540 --> 00:03:47.150
to refine that relocate the region of interest and it's going to locate the new region of interest that

61
00:03:47.150 --> 00:03:48.990
we can draw a rectangle around it.

62
00:03:49.220 --> 00:03:52.890
And it's also going to tell you if it was able to successfully perform that or not.

63
00:03:52.940 --> 00:03:55.770
Let's imagine that you're trying to track someone dancing in a room.

64
00:03:55.880 --> 00:03:59.520
So you keep updating your tracker based off the new frame of the dancer.

65
00:03:59.630 --> 00:04:03.040
But if the dancer leaves the room you're not going to attract that dancer anymore.

66
00:04:03.080 --> 00:04:09.680
So if it's out of the field of view the success is going to be equal to false so all we do is this our

67
00:04:09.720 --> 00:04:15.400
Y is essentially an array of four floating point values of the way the rectangles points are.

68
00:04:15.420 --> 00:04:20.670
So in order to actually plot it out with CB2 that rectangle I went ahead and map them to all be integers

69
00:04:21.030 --> 00:04:23.100
and then I converted that to a tuple.

70
00:04:23.100 --> 00:04:24.830
So it doesn't have this little tuple here.

71
00:04:24.840 --> 00:04:26.120
Then if success.

72
00:04:26.130 --> 00:04:31.950
Meaning if I actually was able to find and update my tracker I create point 1 and point 2 and then draw

73
00:04:31.950 --> 00:04:33.200
my rectangle there.

74
00:04:33.210 --> 00:04:40.230
So here it is drawing from top left to bottom right a green rectangle and then thickness three else

75
00:04:40.320 --> 00:04:42.630
meaning the tracking was a failure.

76
00:04:42.630 --> 00:04:46.260
I'm going to put the text on said Failure to the backtracking.

77
00:04:46.350 --> 00:04:51.390
And this is just C-v to put text which read them before then I want to actually display the trucker

78
00:04:51.390 --> 00:04:51.930
name.

79
00:04:51.990 --> 00:04:56.260
So that's why I actually grab the truck remains to begin with and then I'm going to display the results.

80
00:04:56.370 --> 00:04:58.200
So that's really all there is to it.

81
00:04:58.230 --> 00:05:03.300
The key points to understand here are three things we haven't seen before this one which is select our

82
00:05:03.300 --> 00:05:07.380
A-Y allows you to select the region of interest manually on the first frame.

83
00:05:07.380 --> 00:05:11.970
Then we're able to initialize trucker you pass in the frame in the region of interest and then you update

84
00:05:12.030 --> 00:05:16.010
based off new frames and it gives you back success whether or not it was able to track it.

85
00:05:16.080 --> 00:05:18.780
And then the region of interest and that's all there is to it.

86
00:05:18.780 --> 00:05:20.360
So let's run this.

87
00:05:20.370 --> 00:05:25.800
So when you run this it's going to ask you to choose a tracking API and then go ahead and choose one

88
00:05:25.800 --> 00:05:26.850
I'll choose four.

89
00:05:26.970 --> 00:05:31.470
And before you actually enter here I would recommend that whatever you want to track is looking directly

90
00:05:31.470 --> 00:05:32.420
at your camera.

91
00:05:32.490 --> 00:05:36.810
Otherwise you're not going to be in the first frame you're not going have anything to draw that region

92
00:05:36.810 --> 00:05:38.360
of interest in the box.

93
00:05:38.370 --> 00:05:39.830
I'm looking at my camera right now.

94
00:05:39.960 --> 00:05:41.420
So smile then hit enter.

95
00:05:42.760 --> 00:05:49.120
OK so here we see the arrow selector and all you need to do is click down and drag your bounding box

96
00:05:49.210 --> 00:05:51.640
and then hit enter upon hitting answer.

97
00:05:51.670 --> 00:05:54.850
You'll see the tracking window open.

98
00:05:54.850 --> 00:05:56.730
And here we're using Tracker median flow.

99
00:05:56.800 --> 00:06:02.050
And I'm going to try to attempt to lose it here but kind of turning my face as a profile and seeing

100
00:06:02.050 --> 00:06:08.210
if I quickly move my face if I can lose the tracking so they can see checker median flow.

101
00:06:08.480 --> 00:06:10.310
And we see the filler to the tech tracking.

102
00:06:10.450 --> 00:06:13.800
If we lose it becomes to try to reattach ourselves to the square.

103
00:06:13.870 --> 00:06:20.140
But now let's go ahead and rerun this and now I'm going to select boosting so I'll type out zero here.

104
00:06:20.140 --> 00:06:25.630
Enter And again for the Arawa selector you just drag your bounding box over what you want to track and

105
00:06:25.630 --> 00:06:27.130
then hit enter.

106
00:06:27.130 --> 00:06:29.740
So once you enter you should see yourself being tracked.

107
00:06:29.740 --> 00:06:34.840
So there I am very impressed with boosting tracking and this guy performs really well.

108
00:06:34.900 --> 00:06:38.680
We already went over the pros and cons of different tracking methods but you can see here going to try

109
00:06:38.680 --> 00:06:44.600
to shake my head really fast to attempt to lose it but it's still actually able to track very very well.

110
00:06:45.040 --> 00:06:48.690
So you can see here it's performing really well for frames per second.

111
00:06:48.890 --> 00:06:49.180
OK.

112
00:06:49.240 --> 00:06:50.380
So that's it for this lecture.

113
00:06:50.410 --> 00:06:51.790
Hope you enjoy playing of that notebook.
