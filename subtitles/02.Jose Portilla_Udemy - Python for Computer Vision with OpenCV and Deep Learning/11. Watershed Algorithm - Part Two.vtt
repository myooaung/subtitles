WEBVTT
1
00:00:05.250 --> 00:00:10.940
Welcome back in the previous lecture we were trying to find the segments of this image.

2
00:00:11.130 --> 00:00:16.260
However given the image processing techniques that we already know we were unsuccessful in doing so

3
00:00:16.680 --> 00:00:22.080
because we can clearly see here that there's six separate pennies but the finding contour methods we

4
00:00:22.080 --> 00:00:28.380
know so far even when applied with blurring and thresholding you can only find the external contour

5
00:00:28.380 --> 00:00:30.180
of this general shape.

6
00:00:30.180 --> 00:00:35.460
Now let's try using the watershed algorithm to actually find the six distinct Penneys in the foreground

7
00:00:35.760 --> 00:00:38.270
versus the general background.

8
00:00:38.440 --> 00:00:40.790
And there's a couple of steps to actually doing this.

9
00:00:40.810 --> 00:00:44.510
And I would encourage you to check out the notebook where we actually clearly label each step.

10
00:00:44.530 --> 00:00:49.090
So step one is to read in the image we're going to pretend like we haven't done any of the analysis

11
00:00:49.180 --> 00:00:49.790
above.

12
00:00:49.960 --> 00:00:54.670
So starting fresh We will read in the image and it's in the data folder.

13
00:00:54.790 --> 00:00:56.800
It's called pennies.

14
00:00:56.800 --> 00:00:59.030
And next we're going to apply blur.

15
00:00:59.370 --> 00:01:04.940
So I'll say image is equal to CB2 median blur.

16
00:01:05.430 --> 00:01:10.470
And for the watershed algorithm if you have a really large image like this I recommend applying a really

17
00:01:10.470 --> 00:01:11.850
strong blur to it.

18
00:01:11.850 --> 00:01:14.830
So I'm actually going to choose a huge kernel size 35.

19
00:01:15.030 --> 00:01:18.800
When I was experimenting with this particular image I noticed that is what worked well for me.

20
00:01:18.930 --> 00:01:21.440
I would not actually recommend 13:5 as a default.

21
00:01:21.570 --> 00:01:24.530
It's just that this is a huge image is 4000 by 3000.

22
00:01:24.600 --> 00:01:30.080
And even with such a large image with these level of details here I want to really blur it essentially

23
00:01:30.090 --> 00:01:31.510
I just want six circles.

24
00:01:31.590 --> 00:01:33.650
So we're going to blur it quite a bit.

25
00:01:34.660 --> 00:01:38.080
Let me just show you the effects of that by displaying that image.

26
00:01:38.080 --> 00:01:39.960
So here we can see the six.

27
00:01:39.970 --> 00:01:44.320
So there's still minor details of the face here but clearly very blurred.

28
00:01:44.320 --> 00:01:46.670
Next is to convert that to grayscale.

29
00:01:46.750 --> 00:01:53.950
I will say Gray is equal to CB2 CVT color image CB2.

30
00:01:54.430 --> 00:02:00.640
And then we'll say color and right now we're going from blue green red to gray.

31
00:02:00.660 --> 00:02:05.250
The next step is to actually apply a threshold on the greyscale image.

32
00:02:05.370 --> 00:02:09.160
I'm first going to attempt to apply the same threshold we did last time.

33
00:02:09.510 --> 00:02:17.120
So last time I said CB2 threshold and I pass in the gray scale and I chose my halfway point as 6:59

34
00:02:17.750 --> 00:02:25.660
and said to five five and then applied the binary threshold inversed so threshold binary inverse.

35
00:02:25.890 --> 00:02:30.900
If I actually just tried this by itself for this particular image it's been blurred so much and often

36
00:02:30.900 --> 00:02:34.440
you do have to blur images quite a bit with the watershed algorithm.

37
00:02:34.440 --> 00:02:42.430
You'll notice what happens if I say display threshold then I end up getting some noise due to the features

38
00:02:42.460 --> 00:02:45.720
which is kind of crazy given just how much this image is blurred.

39
00:02:45.940 --> 00:02:48.660
It's still able to actually pick up on some of those features.

40
00:02:48.790 --> 00:02:52.270
We don't want that we want to try to make that just distinct circles.

41
00:02:52.270 --> 00:02:58.520
So what I'm going to do is apply Su's method and if he can check out the Wikipedia article that's link

42
00:02:58.520 --> 00:03:01.570
to this lecture or just google search Azziz method.

43
00:03:01.750 --> 00:03:07.680
It's another method of thresholding and it works really well in conjunction of watershed algorithm.

44
00:03:07.700 --> 00:03:12.400
You can see here the results here from the original image to the threshold that image here.

45
00:03:12.430 --> 00:03:18.250
So we'll come back here and for this particular we're thresholding you give the lower and upper limits

46
00:03:18.250 --> 00:03:29.380
just as the min and max 0 and 255 and then we're going to add in CV to and then call thrash underscore

47
00:03:30.490 --> 00:03:34.310
to whoops that underscore to the Rio.

48
00:03:34.750 --> 00:03:38.260
So now run that a should get a nicer threshold that image.

49
00:03:38.260 --> 00:03:40.990
So there we go we have these six circles.

50
00:03:41.000 --> 00:03:42.680
Those are still actually connected.

51
00:03:42.820 --> 00:03:45.190
So even with this more is asked thresholding technique.

52
00:03:45.310 --> 00:03:50.330
We can still not actually separate these without any sort of erosion taking place.

53
00:03:50.680 --> 00:03:53.240
We're going to also do noise removal.

54
00:03:53.230 --> 00:03:57.670
Technically this is an optional step and it won't really make a difference for such a simple image as

55
00:03:58.030 --> 00:04:03.160
six pennies but I do want to include it because it's more or less a common step when you're dealing

56
00:04:03.160 --> 00:04:05.220
with more complex images.

57
00:04:05.230 --> 00:04:09.400
So this is where all this noise removal.

58
00:04:09.590 --> 00:04:13.670
Consider it optional right now for this particular problem because it doesn't have an effect.

59
00:04:13.810 --> 00:04:17.800
But we will see it later on when we apply watershed algorithm later.

60
00:04:17.800 --> 00:04:21.820
So for noise removal we're going to use the morphological operators that we're already familiar with

61
00:04:21.820 --> 00:04:31.310
from the image processing lectures will say N.P. ones is a three by three an integer sort of say you

62
00:04:32.000 --> 00:04:33.880
I antedate.

63
00:04:33.950 --> 00:04:36.250
So we create a kernel right here.

64
00:04:36.270 --> 00:04:43.990
It's just three by three of ones and we're going to do a bit of opening here by saying CB2 morphology

65
00:04:45.310 --> 00:04:52.230
passen the threshold that image and then say CB2 more open.

66
00:04:52.360 --> 00:04:56.230
And as we learned during the morphological operators lecture this is a pretty good way to reduce some

67
00:04:56.230 --> 00:04:56.810
noise.

68
00:04:57.960 --> 00:05:03.600
We'll say kernel and we'll just have it go through two iterations and you can review the morphological

69
00:05:03.630 --> 00:05:07.340
operators lecture in case you're are a little fuzzy on what this line is doing.

70
00:05:07.450 --> 00:05:10.750
Now as I mentioned for this specific problem it's not going to really have any effect.

71
00:05:10.770 --> 00:05:13.110
So let's go ahead and display it.

72
00:05:13.170 --> 00:05:19.290
So there's the result of opening essentially looks almost the same but it is an important step to do

73
00:05:19.290 --> 00:05:20.080
noise removal.

74
00:05:20.100 --> 00:05:25.860
If you do have noise and if you're trying to do a normal threshold such as this threshold binary removing

75
00:05:25.860 --> 00:05:27.460
noise would have been a good idea.

76
00:05:27.480 --> 00:05:34.250
It probably would have gotten rid of that noise from the faces so we can either use a more complex version

77
00:05:34.270 --> 00:05:39.050
of thresholding or you can't remove noise kind of up to you which way to go.

78
00:05:39.060 --> 00:05:39.630
All right.

79
00:05:39.810 --> 00:05:42.470
Now we're still facing a fundamental problem here.

80
00:05:42.600 --> 00:05:48.760
Recall what makes this task so hard is that the coins themselves are touching each other in the image.

81
00:05:48.900 --> 00:05:55.710
So even through blurring and dilation morphological operators attempts that erosion noise removal all

82
00:05:55.710 --> 00:06:01.470
that stuff were still dealt with this issue that we have this blob and all these points are still connected

83
00:06:01.470 --> 00:06:02.570
to each other.

84
00:06:02.580 --> 00:06:09.300
Well we need to do for the watershed algorithm is set seeds that we are sure are in the foreground and

85
00:06:09.300 --> 00:06:15.420
particularly we want six of those seeds we want one seed for each center of each of these coins.

86
00:06:15.450 --> 00:06:20.490
So how do we actually grab things that we are sure is the foreground versus things that we are sure

87
00:06:20.580 --> 00:06:26.360
are the background to something we can do is called a distance transform.

88
00:06:26.360 --> 00:06:31.640
You can check out the Wikipedia page on distance transform but the idea is actually pretty simple if

89
00:06:31.640 --> 00:06:38.190
you're given a binary image then you should have just zeros and ones or zeros and 250 fives.

90
00:06:38.480 --> 00:06:45.320
And with the distance transformations does is as pixels are further away from zeros than there value

91
00:06:45.350 --> 00:06:46.780
actually ends up getting higher.

92
00:06:46.820 --> 00:06:48.500
Meaning they'll look brighter.

93
00:06:48.500 --> 00:06:54.140
So you can see here if we zoom in on the binary image right now we just have zeros and ones after you

94
00:06:54.140 --> 00:06:58.750
apply that distance transformation points that are further away from the zero.

95
00:06:58.760 --> 00:07:00.030
In this case the background.

96
00:07:00.140 --> 00:07:01.160
They actually become brighter.

97
00:07:01.160 --> 00:07:04.290
So then these get two and then the very center gets three.

98
00:07:04.310 --> 00:07:09.110
So if you would actually perform these distance transforms and see the results of images you can do

99
00:07:09.110 --> 00:07:12.110
a google image search and you'll get things that look like this.

100
00:07:12.110 --> 00:07:13.930
For instance here we have a horse.

101
00:07:13.970 --> 00:07:17.230
And notice that only around the center is it brightest.

102
00:07:17.290 --> 00:07:21.250
And as you get further and further to the edge it becomes darker.

103
00:07:21.260 --> 00:07:29.210
We can apply a distance transform to our threshold right now so we can apply this and transform to this

104
00:07:29.510 --> 00:07:36.050
and we would expect only the very centers of the circles to be bright and then slowly fade away into

105
00:07:36.050 --> 00:07:39.600
a dark gray as you go further further away from the center.

106
00:07:39.620 --> 00:07:45.290
Then once we have that image we can reach threshold again and then get the six foreground points that

107
00:07:45.290 --> 00:07:51.470
we're sure of and I would encourage you to check out the resource link here on this distance transform

108
00:07:51.500 --> 00:07:56.720
of morphological operators which again shows the actual operation that is occurring as you get further

109
00:07:56.720 --> 00:07:59.680
away from the zeros the value gets higher and the brightness.

110
00:07:59.780 --> 00:08:04.760
And what's really nice about this is if you zoom in here you'll notice it shows you the binary images

111
00:08:04.830 --> 00:08:07.870
and at what they become after you do a distance transform.

112
00:08:07.880 --> 00:08:14.800
So essentially the center of the images become brighter and things closer to black and being faded away.

113
00:08:14.810 --> 00:08:15.060
All right.

114
00:08:15.080 --> 00:08:16.820
So let's actually check this out.

115
00:08:16.970 --> 00:08:22.550
We're going to perform the distance transform on the subject and the way we do that is the following

116
00:08:22.550 --> 00:08:33.200
way we're going to say these t transform is equal to CV to and then we're going to call distance transform.

117
00:08:33.410 --> 00:08:41.630
We're going to pass in the opening from before and then some default values C-v to DST underscore L2.

118
00:08:41.720 --> 00:08:46.660
That's just a method that actually calculates the distance and then 5 is another default value there

119
00:08:46.670 --> 00:08:48.030
for the actual.

120
00:08:48.080 --> 00:08:49.810
If you take a look it's the mask size.

121
00:08:49.880 --> 00:08:53.810
So that has to do with the way the distance calculated but these are good default values to play around

122
00:08:53.810 --> 00:08:54.850
with.

123
00:08:54.860 --> 00:08:55.310
All right.

124
00:08:55.490 --> 00:09:04.280
So again the reason repassing opening here is because remember we have opening from appear on this morphological

125
00:09:04.550 --> 00:09:07.280
opening so we got rid of some noise with that step.

126
00:09:07.340 --> 00:09:11.690
A lot of this doesn't really look clear based on the image we're using but these are important steps

127
00:09:11.690 --> 00:09:14.730
to take and they're all labeled out for you in the actual book.

128
00:09:14.780 --> 00:09:21.740
So we're going to perform that distance transform and then we're going to do say ARYEETEY and then say

129
00:09:21.740 --> 00:09:28.070
Sure foreground and in fact let's actually display this image transform or this distance transform this

130
00:09:29.420 --> 00:09:30.620
distance transform.

131
00:09:30.800 --> 00:09:34.840
So the result of this dissonance transform is the following.

132
00:09:34.850 --> 00:09:39.920
Notice how bright it is at the very center so further away from the zero values it gets brighter and

133
00:09:39.920 --> 00:09:43.040
then it turns grayer as it gets towards the outside.

134
00:09:43.070 --> 00:09:47.780
And now I have six very clear points that I'm pretty sure is the foreground.

135
00:09:47.780 --> 00:09:53.990
So all apply in another thresholding to this to hopefully just grab those six dots and then I will be

136
00:09:53.990 --> 00:10:00.020
able to apply those to the watershed algorithm and it will understand that those are the six segments

137
00:10:00.110 --> 00:10:01.410
it should be looking into.

138
00:10:01.640 --> 00:10:08.130
So right now I have my distance transform and I'm going to create six object objects that I'm sure happen

139
00:10:08.130 --> 00:10:13.640
to be in the foreground will say the sure F.G..

140
00:10:13.660 --> 00:10:21.310
So sure foreground is equal to C.V to I'll call threshold and then passing in the distance transform

141
00:10:21.310 --> 00:10:22.380
the image above.

142
00:10:23.260 --> 00:10:26.760
And then I will pasan for my limit.

143
00:10:26.830 --> 00:10:31.600
Typically what people do is they say 70 percent of the max value in the distance transform.

144
00:10:31.750 --> 00:10:39.500
So 70 percent of them max value in the distance transform and they'll pass and turn 55 for the max and

145
00:10:39.500 --> 00:10:40.580
then zero there.

146
00:10:41.030 --> 00:10:49.450
So we run this and if we actually display now the sure foreground we get six points.

147
00:10:49.450 --> 00:10:53.440
So all we did was threshold this image and it makes sense that when you threshold it it will just get

148
00:10:53.440 --> 00:10:55.450
these kind of six smaller dots.

149
00:10:55.510 --> 00:11:01.390
So these six points we are absolutely sure happen to be in the foreground because we put a distance

150
00:11:01.390 --> 00:11:06.850
transform and then we did a thresholding and we safely did our distance transform because we had also

151
00:11:06.850 --> 00:11:09.710
calculated things that we were sure were in the background.

152
00:11:09.790 --> 00:11:11.710
Through this dilation process.

153
00:11:11.740 --> 00:11:18.970
All right so now that we have the sure background and the sheer foreground there is kind of this in-between

154
00:11:18.970 --> 00:11:19.820
section.

155
00:11:19.870 --> 00:11:26.300
So anything that was left here that's in white that isn't present in this image in white.

156
00:11:26.350 --> 00:11:28.000
That's the unknown region.

157
00:11:28.060 --> 00:11:30.430
That's what we need the watershed Algren's to figure out.

158
00:11:31.220 --> 00:11:34.770
So let's actually display and find the unknown region.

159
00:11:35.240 --> 00:11:36.650
So we will say the following.

160
00:11:36.780 --> 00:11:42.100
We will say that the sure foreground and we're going to cast it as an integer.

161
00:11:42.110 --> 00:11:55.680
We'll say you I.A. 8 of sure foreground and the unknown region is equal to CB2 subtract.

162
00:11:56.020 --> 00:12:01.180
And I'm going to subtract the sure background from the foreground.

163
00:12:01.400 --> 00:12:06.740
So remember Sure background that's where I was sure I had background and the foreground are these six

164
00:12:06.740 --> 00:12:10.540
points which I'm absolutely a hundred percent confident are in the foreground.

165
00:12:10.760 --> 00:12:15.410
Well as confident as anyone can be given the algorithms which make sense since thoughts here it's pretty

166
00:12:15.410 --> 00:12:17.180
obvious.

167
00:12:17.180 --> 00:12:23.720
So now I have this unknown region so let's display the unknown and make sure I spell that right.

168
00:12:23.760 --> 00:12:25.630
Display the unknown.

169
00:12:25.640 --> 00:12:27.270
There you go.

170
00:12:27.300 --> 00:12:34.460
So these are the regions where I'm actually not sure if it belongs to the foreground or the background.

171
00:12:34.520 --> 00:12:41.220
I'm going to need to do is make label markers out of these six foreground points and then have those

172
00:12:41.220 --> 00:12:46.410
be the seeds that the watershed algorithm uses to actually find its segments.

173
00:12:46.830 --> 00:12:47.970
So we'll come back down here.

174
00:12:47.980 --> 00:12:52.230
I have this unknown region and then I have my share foreground and my shirt background.

175
00:12:52.260 --> 00:12:58.060
So now it's time for the final steps creating the label markers for the watershed algorithm.

176
00:12:58.080 --> 00:13:01.620
So there's three steps here to actually creating these markers.

177
00:13:01.620 --> 00:13:08.910
The first one is actually getting the markers themselves and will say AURITI markers is equal to CB2.

178
00:13:09.120 --> 00:13:13.720
And we're going to use a function called connected components and connected components.

179
00:13:13.720 --> 00:13:15.870
What it's going to do is it's just going to take in.

180
00:13:15.900 --> 00:13:17.880
In our case the image.

181
00:13:17.880 --> 00:13:22.820
So we're going to pass in our Sure foreground image.

182
00:13:22.850 --> 00:13:27.290
Remember the sure foreground image is this image right here with six points.

183
00:13:27.310 --> 00:13:32.320
So these are six points that we actually want to fit in as the markers.

184
00:13:32.570 --> 00:13:41.450
So we're going to run this and right now if you check out the markers these are actually contain zeros.

185
00:13:41.480 --> 00:13:46.830
And we want to add one to all these labels so that the shirt background is not zero but one.

186
00:13:46.850 --> 00:13:53.250
So we're going to say markers is equal to markers plus one.

187
00:13:54.080 --> 00:14:00.500
And the reason we're doing that is because now I'm going to mark the region of unknown with zero I will

188
00:14:00.500 --> 00:14:09.470
say markers where unknown is equal to 255 because remember this is the unknown right here.

189
00:14:09.500 --> 00:14:10.470
These little donuts.

190
00:14:10.530 --> 00:14:15.490
Well we're not sure if that belongs to the background or to the foreground of the coin itself.

191
00:14:15.500 --> 00:14:19.510
So what I will do is I'm going to label those as completely black.

192
00:14:19.590 --> 00:14:23.610
So we'll set that as equal to zero.

193
00:14:24.030 --> 00:14:30.000
And that's why I added one here because I don't want these markers to get confused with the black background

194
00:14:30.090 --> 00:14:31.740
of this unknown region.

195
00:14:31.800 --> 00:14:34.270
So it's actually display what markers looks like now.

196
00:14:38.030 --> 00:14:40.120
So your markers should then look like this.

197
00:14:40.130 --> 00:14:45.860
And essentially this is what you have to build up to in order to build up the watershed algorithm in

198
00:14:45.860 --> 00:14:46.490
the next lecture.

199
00:14:46.520 --> 00:14:49.760
We'll actually show you kind of a cool tool kit that does this manually.

200
00:14:49.760 --> 00:14:52.400
You just end up clicking and you select these sort of points.

201
00:14:52.580 --> 00:14:55.640
But this is the general process that's happening behind the scenes.

202
00:14:55.700 --> 00:14:58.940
We now have clearly labeled the background that we're sure of.

203
00:14:58.970 --> 00:15:00.830
So this gray in the back.

204
00:15:00.830 --> 00:15:03.880
That's the Bakra that we're sure of this black area.

205
00:15:03.920 --> 00:15:05.180
That's the unknown region.

206
00:15:05.180 --> 00:15:08.390
I'm not sure if this is foreground or background.

207
00:15:08.450 --> 00:15:12.530
Now in this case it's actually pretty easy to tell that it's pretty much all foreground but the way

208
00:15:12.530 --> 00:15:15.710
the computer vision algorithms work they were unsure of this region as well.

209
00:15:15.740 --> 00:15:22.020
They were unsure if this was 6 or 1 but what's nice is we also labeled sure foreground.

210
00:15:22.190 --> 00:15:28.550
And we did it with the distance transform which allowed us to actually set these six markers here.

211
00:15:28.730 --> 00:15:33.920
So now I have these markers that are going to act as seeds for the watershed algorithm.

212
00:15:33.950 --> 00:15:38.810
So then the final step is to apply the watershed algorithm to the markers.

213
00:15:38.810 --> 00:15:42.420
So I'll say markers is equal to CB2.

214
00:15:42.980 --> 00:15:45.470
And then we call watershed pasan.

215
00:15:45.470 --> 00:15:50.640
The original image and then pass and the markers run that.

216
00:15:50.840 --> 00:15:57.560
And then you can go ahead and display the markers and you'll notice that it was able to find six distinct

217
00:15:57.860 --> 00:16:01.070
markers here and you can actually play around this the color mapping.

218
00:16:01.070 --> 00:16:02.410
If this isn't clear enough for you.

219
00:16:02.480 --> 00:16:05.360
But these are six distinct shades of gray.

220
00:16:05.720 --> 00:16:09.510
Then what we can do is find the contours on the actual markers.

221
00:16:09.560 --> 00:16:12.980
So I'm just going to copy and paste the context code that we used earlier.

222
00:16:13.130 --> 00:16:15.060
So we'll come all the way back up here.

223
00:16:15.080 --> 00:16:17.800
Remember we previously used this code to find contours.

224
00:16:17.810 --> 00:16:24.600
So I will copy this come all the way back down paste it in and I'll do one more.

225
00:16:24.660 --> 00:16:26.450
Because we saw those three lines of code.

226
00:16:26.670 --> 00:16:28.410
We'll also do this one right here.

227
00:16:30.160 --> 00:16:34.290
And then we're to come all the way back down and do that as well.

228
00:16:35.580 --> 00:16:38.330
Except we're not finding contours on this.

229
00:16:38.370 --> 00:16:42.750
Instead we're finding contours on the markers that we just created appear.

230
00:16:42.750 --> 00:16:44.280
So we have these markers now.

231
00:16:44.280 --> 00:16:53.030
Now we're going to find contours for them and if we read this and then display the results on separated

232
00:16:53.030 --> 00:16:53.770
coins.

233
00:16:55.190 --> 00:17:01.600
Notice now we were successfully able to distinctly segment each of the coins themselves.

234
00:17:01.610 --> 00:17:02.130
All right.

235
00:17:02.240 --> 00:17:05.000
So that's the power of the watershed algorithm.

236
00:17:05.030 --> 00:17:10.580
We did a lot of the heavy lifting on the back and we essentially coded it out manually in the next lecture.

237
00:17:10.580 --> 00:17:14.810
We're going to set up a way that we can just click on an image set the seeds and then have watershed

238
00:17:14.850 --> 00:17:17.090
algorithm automatically fill it in for us.

239
00:17:17.120 --> 00:17:20.280
That's a more convenient way of working the watershed algorithm.

240
00:17:20.480 --> 00:17:23.430
But it is important they understand the basic steps here.

241
00:17:23.480 --> 00:17:28.400
Let me just do a quick review of everything we did for the watershed algorithm in order to really make

242
00:17:28.400 --> 00:17:30.490
sure you have a clear understanding.

243
00:17:30.500 --> 00:17:35.960
So we started all the way back up here when we read in the image itself.

244
00:17:35.960 --> 00:17:38.170
So Step 1 was read in the image.

245
00:17:38.210 --> 00:17:43.190
Step two was to apply a blurring and keep in mind we applied a pretty strong blur because this was quite

246
00:17:43.220 --> 00:17:44.910
a large detailed image.

247
00:17:44.960 --> 00:17:51.830
So then we ended up with this then the next step was to put it to grayscale and then apply thresholding

248
00:17:51.830 --> 00:17:52.290
to it.

249
00:17:52.580 --> 00:17:58.820
And we specifically applied two types of thresholding a binary inverse along with this or two.

250
00:17:58.840 --> 00:18:04.220
Thresholding that you can check out to Bethan on Wikipedia which works really well for large images

251
00:18:04.220 --> 00:18:05.930
like the one we're working with here.

252
00:18:05.930 --> 00:18:10.220
So then when we display that actual threshold that image we get something that looks like this.

253
00:18:10.250 --> 00:18:14.940
Keep in mind this hasn't really solve their problems because all these coins are next to each other.

254
00:18:14.960 --> 00:18:19.850
We still have the issue that the threshold ID image still looks like these are all connected to each

255
00:18:19.850 --> 00:18:20.540
other.

256
00:18:20.570 --> 00:18:22.070
So how do we actually take care of this.

257
00:18:22.070 --> 00:18:25.690
Well one thing we try to do is remove noise and maybe try Rojan.

258
00:18:25.850 --> 00:18:29.360
In this case we don't really have any effect but it's a good idea to do so.

259
00:18:30.310 --> 00:18:35.380
And we're going to do instead is two things we're going to grab what we're sure that the background

260
00:18:35.380 --> 00:18:39.560
is and then we're going to grab what we're sure that the foreground is.

261
00:18:39.610 --> 00:18:44.940
So the foreground right here the way we ground the shur background is through dilation which makes sense

262
00:18:44.950 --> 00:18:50.880
you would just expand the foreground until you know you hit some sort of limit such as iteration is

263
00:18:50.890 --> 00:18:51.760
equal to three.

264
00:18:51.850 --> 00:18:57.400
And then you have what you're sure is left is the background and then you're going to provide a distance

265
00:18:57.400 --> 00:19:04.090
transform to actually calculate the centers of your foreground objects the brightest parts and then

266
00:19:04.090 --> 00:19:05.900
you can provide a threshold on that.

267
00:19:06.130 --> 00:19:09.820
And then you have the things that you're sure of the foreground then you're going to subtract the two

268
00:19:09.820 --> 00:19:10.990
from each other.

269
00:19:10.990 --> 00:19:12.980
The shur background versus the shur foreground.

270
00:19:13.240 --> 00:19:18.340
And you're left with your unknown region your unknown region is what your watershed algorithm is going

271
00:19:18.340 --> 00:19:20.070
to help you solve.

272
00:19:20.170 --> 00:19:24.640
So using those connected components we're going to actually grab some markers until we end up with an

273
00:19:24.640 --> 00:19:31.000
image like this where we have the background we're sure of the unknown region and then the six marker

274
00:19:31.000 --> 00:19:31.820
points right here.

275
00:19:31.960 --> 00:19:37.840
So they're all actually a different color of gray then we can find contours on those markers after we

276
00:19:37.840 --> 00:19:40.050
apply the watershed algorithm to it.

277
00:19:40.180 --> 00:19:43.670
We get these six distinct points on segments.

278
00:19:43.870 --> 00:19:45.670
We find those contours and there we go.

279
00:19:45.670 --> 00:19:49.840
We were able to successfully segment this into the six pennies.

280
00:19:49.840 --> 00:19:55.070
You should also notice that it's segmented all around the image just the general background itself.

281
00:19:55.110 --> 00:20:00.150
It got cut off on the top and left due to the edge but it did that as well.

282
00:20:00.430 --> 00:20:01.060
OK.

283
00:20:01.210 --> 00:20:03.250
Definitely check out the resource links.

284
00:20:03.460 --> 00:20:07.540
If this all was a little too complicated for you don't worry about it too much because the very next

285
00:20:07.540 --> 00:20:12.550
lecture we're going to show a simplified version of using the watershed algorithm which is a lot more

286
00:20:12.580 --> 00:20:13.580
interactive.

287
00:20:13.660 --> 00:20:14.260
We'll see it there.
