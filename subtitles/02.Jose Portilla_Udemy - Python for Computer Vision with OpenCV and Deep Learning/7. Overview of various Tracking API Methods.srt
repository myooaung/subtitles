1
00:00:05,450 --> 00:00:11,000
Welcome back everyone to this lecture on tracking API with open C-v.

2
00:00:11,010 --> 00:00:15,330
Now there are many object tracking methods that we haven't covered already and to cover each and every

3
00:00:15,330 --> 00:00:20,370
one of them with a manual implementation would basically require an entirely new course.

4
00:00:20,370 --> 00:00:25,890
Now fortunately many of these object tracking methods have been designed as simple API calls with open

5
00:00:25,890 --> 00:00:31,470
C.V that is going to allow them to easily swap and replace tracking methods depending on your actual

6
00:00:31,470 --> 00:00:33,820
video and the object you're trying to track.

7
00:00:33,840 --> 00:00:37,300
We're going to explore a few of these easy to use object tracking API.

8
00:00:37,560 --> 00:00:42,030
And then the next lecture we're going to to explore them open see V we set up a nice note book that

9
00:00:42,030 --> 00:00:48,060
actually lives and interact have a little input choose a tracking parameter for your API and then go

10
00:00:48,060 --> 00:00:49,570
ahead and test out some video.

11
00:00:49,680 --> 00:00:54,600
But I want to do just a very brief overview of the tracking API as we're going to implement in the next

12
00:00:54,600 --> 00:00:55,550
video.

13
00:00:55,920 --> 00:01:00,270
So we're going to start off with showing you the boosting Tracker and the trackers based off the added

14
00:01:00,270 --> 00:01:02,610
boost algorithm that's where it gets a name from.

15
00:01:02,610 --> 00:01:07,510
And that's actually the essentially the same underlying algorithm that the hard cascade based face detector

16
00:01:07,560 --> 00:01:12,360
that we played around with used and the evaluation occurs across multiple frames.

17
00:01:13,590 --> 00:01:14,880
Now free to the truck API.

18
00:01:14,910 --> 00:01:17,530
I want to go over a few pros and cons.

19
00:01:17,730 --> 00:01:22,860
The pros for the boosting tracker is that it's a very well-known and very well studied algorithm.

20
00:01:22,890 --> 00:01:26,960
However the cons is it does actually know when the tracking has failed.

21
00:01:27,240 --> 00:01:32,400
So it could keep tracking your face and then maybe your face actually leaves the video.

22
00:01:32,400 --> 00:01:37,260
The boosting tracker is going to think that it's still detecting something and it's still tracking something.

23
00:01:37,350 --> 00:01:42,240
And also keep in mind that there's now very improved there are much better techniques available.

24
00:01:42,390 --> 00:01:47,310
So typically you won't use boosting as your first choice is a very well known and steady algorithm you

25
00:01:47,310 --> 00:01:51,710
can read a lot of literature on it but there's many improvements that we can make on that boosting tracker.

26
00:01:51,750 --> 00:01:54,720
But it is available as an API.

27
00:01:54,860 --> 00:02:01,090
So an improvement off the boosting tracker is known as multiple instance learning tracker m i l tracker.

28
00:02:01,190 --> 00:02:05,690
It's actually very similar to boosting but it considers a neighborhood of points around the current

29
00:02:05,690 --> 00:02:09,630
location to create multiple instances which is where it gets its name from.

30
00:02:09,710 --> 00:02:13,520
And you can check out the project page for more details and you can check out the resource links for

31
00:02:13,520 --> 00:02:17,750
this particular search for information about each of these trackers that we're going to go over in case

32
00:02:17,750 --> 00:02:23,390
you want to dive into the mathematics or the original publications of each of these trackers now as

33
00:02:23,390 --> 00:02:26,040
far as pros and cons of the M-file tracker.

34
00:02:26,090 --> 00:02:30,010
The prose is actually has very good performance and doesn't drift as much as boosting.

35
00:02:30,200 --> 00:02:33,800
So I would recommend using m i l tracker instead of boosting tracker.

36
00:02:33,860 --> 00:02:39,860
Now some of the cons is that it has a failure to track an object that actually may not be reported back.

37
00:02:39,890 --> 00:02:45,170
So again that means if you're tracking a face in a video and the face happens to leave the email tracker

38
00:02:45,260 --> 00:02:50,550
might still think it's tracking something and it also can't really recover from full obstruction.

39
00:02:50,720 --> 00:02:53,360
So if something happens to cover your face while you're tracking it.

40
00:02:53,360 --> 00:02:57,950
The e-mail tracker may not be able to recover and then it's going to think it's tracking something else

41
00:02:58,010 --> 00:03:04,740
or detect a failure to it or say it's having a failure to detect the tracking.

42
00:03:04,950 --> 00:03:10,530
They'll move on to the Casey tracker which stands for Colonel ised correlation filters and this exploits

43
00:03:10,530 --> 00:03:16,650
some key properties of the m i l Tracker and the fact that many data points membered the emails multiple

44
00:03:16,710 --> 00:03:18,370
instances or multiple data points.

45
00:03:18,450 --> 00:03:24,540
Some of those data points will actually overlap and the cakey tracker used some kind of convenience

46
00:03:24,540 --> 00:03:30,030
mathematical functions of those overlapping data points to lead to more accurate and faster tracking.

47
00:03:30,120 --> 00:03:34,400
You can see so far we're century just building improvements off the previous tracker.

48
00:03:34,560 --> 00:03:39,510
So M-I else building building improvements off the boosting tracker and KCA is building improvements

49
00:03:39,570 --> 00:03:46,830
off the email tracker so KCA if it performs better than MVL and Boosey and it's a great first choice.

50
00:03:46,850 --> 00:03:51,560
In fact in general I would recommend you to start off KCMO tracker and if that performs to your needs

51
00:03:51,860 --> 00:03:55,860
then you essentially have no need to explore other more exotic trackers.

52
00:03:55,880 --> 00:04:00,770
Now one of the cons of the KCA tracker is it can't really recover sometimes from the full obstruction

53
00:04:00,800 --> 00:04:01,790
of an object.

54
00:04:01,820 --> 00:04:07,670
Again if you happen to be moving too fast or something obstructs the object from you that you're trying

55
00:04:07,670 --> 00:04:14,030
to track the KCA tracker will just say failer to detect and then it may not be able to recover and detect

56
00:04:14,030 --> 00:04:16,160
the face again if it comes back onto the screen.

57
00:04:18,110 --> 00:04:22,880
Now we can also use the TLT tracker which stands for tracking learning and detection.

58
00:04:23,180 --> 00:04:28,790
And this tracker follows the object from frame to frame and that the sector localizes all appearances

59
00:04:29,050 --> 00:04:34,430
that have been observed so far and correct Strecker if necessary then the learning estimates detectors

60
00:04:34,490 --> 00:04:37,760
errors and updates that to avoid these errors in the future.

61
00:04:37,760 --> 00:04:40,660
So it's a pretty sophisticated tracker.

62
00:04:40,690 --> 00:04:45,730
Now some of the pros is that it's actually good tracking even with obstruction in frames or if you have

63
00:04:45,910 --> 00:04:47,840
fast moving objects.

64
00:04:47,890 --> 00:04:51,260
So previously all the other trackers we learned about you know they're pretty good.

65
00:04:51,280 --> 00:04:56,140
They're not able to really deal this problem of something moving very quickly or some sort of obstruction

66
00:04:56,200 --> 00:04:57,810
of the object or tracking.

67
00:04:57,820 --> 00:05:03,050
So again TLG performs well with obstruction and even large changes in scale.

68
00:05:03,220 --> 00:05:07,960
So if you have a car that's moving really fast and close to the camera suddenly that car may appear

69
00:05:07,990 --> 00:05:10,890
larger Fieldy can actually see all of that.

70
00:05:10,900 --> 00:05:16,840
Now one of the cons is that it may provide many false positives because it's implementing certain techniques

71
00:05:16,840 --> 00:05:21,820
to try to attempt to be good at even obstruction or large changes in scale.

72
00:05:21,830 --> 00:05:26,530
It may sometimes accidentally track something that is no longer your original object which is a false

73
00:05:26,530 --> 00:05:29,750
positive track and something that you're not really supposed to be tracking.

74
00:05:29,950 --> 00:05:35,050
So it's essentially the cost you pay for being good at tracking of obstruction or large changes in scale

75
00:05:35,290 --> 00:05:37,330
is that you'll get these false positives.

76
00:05:37,330 --> 00:05:39,760
I think he is tracking the correct thing when it's actually not.

77
00:05:39,760 --> 00:05:40,560
So keep that in mind.

78
00:05:40,600 --> 00:05:43,840
There is a cost to pay for that.

79
00:05:43,890 --> 00:05:46,230
And then finally we'll talk about the median flow tracker.

80
00:05:46,230 --> 00:05:51,720
And internally this tracker tracks the object in both forward and backward directions in time and measures

81
00:05:51,720 --> 00:05:54,840
the discrepancies between those two trajectories.

82
00:05:55,680 --> 00:05:59,350
Now the pros is that it's very good of reporting failed tracking.

83
00:05:59,520 --> 00:06:04,590
So if it doesn't see the object it's pretty good at saying immediately hey the object is no longer in

84
00:06:04,590 --> 00:06:05,060
frame.

85
00:06:05,070 --> 00:06:07,630
I can no longer track it and it works really well.

86
00:06:07,650 --> 00:06:08,920
Predictable motion.

87
00:06:08,940 --> 00:06:14,100
So if you have something moving on some sort of racetrack or something that you know more or less it's

88
00:06:14,100 --> 00:06:16,060
going to be doing the same movement over and over again.

89
00:06:16,070 --> 00:06:17,450
They just want to keep tracking it.

90
00:06:17,460 --> 00:06:22,050
This is really common in some scientific case studies that the medium flow is a good choice.

91
00:06:22,050 --> 00:06:24,720
The cons is that fails under a large motion.

92
00:06:24,720 --> 00:06:30,420
And what I mean by large motion is a large jump from frame to frame of the object you're trying to track

93
00:06:30,450 --> 00:06:34,560
which essentially just means you have a fast moving object.

94
00:06:34,570 --> 00:06:37,260
OK so let's look at how to use these tracking API.

95
00:06:37,300 --> 00:06:38,740
Open C and Python.

96
00:06:38,770 --> 00:06:42,730
And again I recommend you check out the resource links for more detailed information on each of these

97
00:06:42,730 --> 00:06:43,600
trackers.

98
00:06:43,720 --> 00:06:47,220
We'll see you at the next lecture where we open up a notebook and play around he's tracking a piece

99
00:06:47,220 --> 00:06:49,180
that he's set up for you will see it there.
