1
00:00:05,300 --> 00:00:11,750
Welcome back so far we've seen how to create deep learning networks for the dataset and then for the

2
00:00:11,750 --> 00:00:13,260
Safar 10 data set.

3
00:00:13,400 --> 00:00:19,070
Those were small images and we went from greyscale in the end this dataset to color images and the Safar

4
00:00:19,070 --> 00:00:19,900
10.

5
00:00:19,910 --> 00:00:25,500
However we still haven't learned how to work for custom images in a real world situation.

6
00:00:25,520 --> 00:00:31,520
You're not going to be able to just simply upload images using a curious import tool instead you'll

7
00:00:31,520 --> 00:00:34,490
have to work with raw jpeg or DNG files.

8
00:00:34,490 --> 00:00:39,770
This lecture is designed to show you how you can work your own custom image data sets and for that we're

9
00:00:39,770 --> 00:00:44,760
going to need to download a preexisting data set that has the raw image files.

10
00:00:44,810 --> 00:00:47,390
We're not going to be using an import tool like Harris.

11
00:00:47,390 --> 00:00:52,190
Instead we'll be downloading a data set of just raw images and we'll be showing you how to resize them

12
00:00:52,420 --> 00:00:57,020
also how to perform different operations on them to make them suitable for training and then will actually

13
00:00:57,020 --> 00:01:01,340
work with those real custom image files to build out a neural network.

14
00:01:01,340 --> 00:01:04,370
So in order to do this we need to first download the file.

15
00:01:04,370 --> 00:01:06,060
Let me show you how you can download the file.

16
00:01:06,140 --> 00:01:10,310
Make sure you viewed the previous lectureship for this one because it does contain the file link.

17
00:01:10,490 --> 00:01:12,200
OK let's get started.

18
00:01:12,230 --> 00:01:12,770
All right.

19
00:01:12,800 --> 00:01:15,110
In the actual course overview page.

20
00:01:15,110 --> 00:01:16,920
Again this is the course overview page.

21
00:01:16,940 --> 00:01:22,910
You should then be able to click on course content and then come back down to deep learning for computer

22
00:01:22,910 --> 00:01:26,480
vision and right before this deep learning on custom images.

23
00:01:26,480 --> 00:01:29,440
We have this lecture link for cats and dogs.

24
00:01:29,690 --> 00:01:31,620
Go ahead and click on that lecture.

25
00:01:31,790 --> 00:01:36,200
And if you were actually in the course curriculum viewer you could also just come over here and then

26
00:01:36,200 --> 00:01:36,940
search for it.

27
00:01:36,940 --> 00:01:38,140
It's in Section 8.

28
00:01:38,210 --> 00:01:40,770
We have the links for cats and dogs zip.

29
00:01:40,790 --> 00:01:45,490
So what you need to do is you either click on this link for cats and dogs is it.

30
00:01:45,490 --> 00:01:48,850
I also wrote the L here in case that click isn't working for you.

31
00:01:48,980 --> 00:01:53,780
But once you click on this link to open it it should look something like this for you.

32
00:01:53,780 --> 00:01:55,140
Let me bring in that file.

33
00:01:55,220 --> 00:01:58,730
So once you click on that link you should see something that says cats and dogs start xit.

34
00:01:58,820 --> 00:02:04,520
It won't be able to preview it's around 730 megabytes So it's quite a large file once you have this

35
00:02:04,850 --> 00:02:05,600
window open.

36
00:02:05,630 --> 00:02:10,700
You just need to click on download go ahead and download the file and make sure that you keep track

37
00:02:10,760 --> 00:02:13,240
of where the zip file was downloaded to.

38
00:02:13,260 --> 00:02:19,280
OK so once you download the file go ahead and open your file explorer and locate the file.

39
00:02:19,490 --> 00:02:19,770
All right.

40
00:02:19,760 --> 00:02:24,080
So I've downloaded the folder and it's in my downloads folder right now.

41
00:02:24,160 --> 00:02:29,570
We are going to need to do is you're going to need to move this zip file to her ever your notebooks

42
00:02:29,630 --> 00:02:36,830
are that can be either in the course directory or the actual deep learning folder or if you happen to

43
00:02:36,830 --> 00:02:38,930
be running notebooks in the Downloads folder.

44
00:02:38,990 --> 00:02:43,890
Then go ahead and just leave it here again wherever you're working with your notebook file.

45
00:02:43,890 --> 00:02:49,430
That's the IPY and by extension you're going to need the zip file to be in that same location once you've

46
00:02:49,430 --> 00:02:51,950
moved the zip file to the correct location.

47
00:02:51,980 --> 00:02:53,660
Go ahead and extract it.

48
00:02:53,720 --> 00:03:00,020
You can extract it using the built in extraction tools either in windows or in Mac OS or you can download

49
00:03:00,020 --> 00:03:03,480
a program such as Seven's it and just extract the files here.

50
00:03:03,770 --> 00:03:10,190
So we'll go ahead and say extract here and this is a really large zip file so it will take a little

51
00:03:10,190 --> 00:03:11,110
bit of time.

52
00:03:11,120 --> 00:03:13,510
I'm going to fast forward in time until this is done.

53
00:03:13,520 --> 00:03:15,800
Extracting it should take a couple of minutes.

54
00:03:15,800 --> 00:03:20,900
Again we're dealing with real images here so this is a very large set of images and are essentially

55
00:03:20,900 --> 00:03:22,870
images of cats and dogs.

56
00:03:23,100 --> 00:03:25,400
OK let's fast forward until this is done.

57
00:03:25,400 --> 00:03:30,860
Extracting once you successfully extracted the contents from the zip file you should be able to open

58
00:03:30,860 --> 00:03:34,030
up this cats and dogs folder and then see two folders.

59
00:03:34,050 --> 00:03:39,770
Test entrain then within each of these folders there's two more folders.

60
00:03:39,770 --> 00:03:41,420
Cat and dog.

61
00:03:41,510 --> 00:03:45,770
And then if you open up that then you have the actual images and those here they're all essentially

62
00:03:45,770 --> 00:03:47,480
just numbers that jpeg.

63
00:03:47,660 --> 00:03:49,200
So we're going to go over this in more detail.

64
00:03:49,220 --> 00:03:54,320
But essentially whenever you are working on a real image files with carrots and building your own neural

65
00:03:54,320 --> 00:03:57,670
network for them they have to be in this organization.

66
00:03:58,520 --> 00:04:04,280
You need to talk little folders one for your test data and one for your trained data and then inside

67
00:04:04,280 --> 00:04:08,220
these folders you need a separate folder for each category of image.

68
00:04:08,270 --> 00:04:09,580
So notice if I can.

69
00:04:09,680 --> 00:04:14,600
These are all cat photos and if I come back the test of hit dog These are all dog photos and these file

70
00:04:14,600 --> 00:04:18,730
names are exactly the same between the test and the train folders.

71
00:04:18,860 --> 00:04:21,550
OK now that we have all the data sorted out.

72
00:04:21,650 --> 00:04:26,380
Let's open up a Jupiter lab notebook and get started on building up our own custom network.

73
00:04:26,660 --> 00:04:29,560
Let's begin by taking a look at the actual images.

74
00:04:29,840 --> 00:04:37,640
So to do that we're going to import that live high plot Haspiel T and then also import CB2 And just

75
00:04:37,640 --> 00:04:38,660
in case you need to do it.

76
00:04:38,810 --> 00:04:43,270
Depending on your version of the notebook go ahead and say I'm not putting it in line right.

77
00:04:43,280 --> 00:04:52,640
I'm going to read in a cat image will say Cat 4 is equal to to imagery and right now the way I saved

78
00:04:52,700 --> 00:04:56,890
my folder is in the same directory that my current notebook is in.

79
00:04:56,890 --> 00:04:58,920
I have the cats and dogs folder.

80
00:04:59,090 --> 00:05:03,940
Again it depends on where you actually unzip this file or what path you're going to put here.

81
00:05:03,950 --> 00:05:05,180
So keep that in mind.

82
00:05:05,210 --> 00:05:07,700
Pay very close attention to that.

83
00:05:07,830 --> 00:05:13,950
So I'm going to say cats and dogs and inside of that graph from the training folder and inside of that

84
00:05:14,130 --> 00:05:18,100
there's a folder and then for j peg.

85
00:05:18,720 --> 00:05:22,160
That's an actual cat image since I read it in live TV too.

86
00:05:22,230 --> 00:05:33,370
I need to say CB2 thoughts CVT color and convert it back to the correct color display color underscore

87
00:05:33,650 --> 00:05:40,410
and we're going from blue green red to green blue and let's show that image.

88
00:05:40,500 --> 00:05:44,400
OK so here we can see what the image of this particular cat looks like.

89
00:05:44,400 --> 00:05:51,460
Notice it's 0 by will actually check the shape will say Cat 4 shape is 375.

90
00:05:51,490 --> 00:05:53,720
For five hundred by three color channels.

91
00:05:53,820 --> 00:05:56,180
Let's now upload another image from our dataset.

92
00:05:56,310 --> 00:06:08,240
Let's upload a dog will say dog is equal to CB2 image read and inside my cats and dogs.

93
00:06:08,240 --> 00:06:14,040
I'll go ahead and grab again from the training the dog folder and let's say to touch it.

94
00:06:14,910 --> 00:06:16,350
Will also do a color correction.

95
00:06:16,360 --> 00:06:22,050
I mean just copy and paste this color correction command paste here and then just replace it with dog

96
00:06:25,750 --> 00:06:31,800
run that say appeal t him show dog and there we have this dog on a leash.

97
00:06:31,840 --> 00:06:35,650
Now something that's important to notice here is that this is real image data.

98
00:06:35,650 --> 00:06:39,010
This actually isn't formatted any particular way.

99
00:06:39,070 --> 00:06:41,260
As far as the shapes of the images.

100
00:06:41,260 --> 00:06:45,560
So this dog shape is actually a completely different size than this cat.

101
00:06:45,670 --> 00:06:48,840
So this cat is a 375 by 500 image.

102
00:06:48,880 --> 00:06:53,580
The stock is a 1 9 9 by 1 8 image so all these images there are different sizes.

103
00:06:53,590 --> 00:06:55,750
So this is reflective of real world data.

104
00:06:55,810 --> 00:07:01,850
You're probably not gonna be able to manually upload images that are all the exact same shape and form.

105
00:07:01,900 --> 00:07:05,540
Especially if you're trying to gather tens of thousands of images.

106
00:07:05,560 --> 00:07:09,270
So what we're going to do is prepare the data for the model.

107
00:07:09,280 --> 00:07:12,770
Now there's too much data here for us to read all at once in memory.

108
00:07:12,790 --> 00:07:16,070
We're close to overegg gigabyte of information here.

109
00:07:18,320 --> 00:07:23,390
But luckily Cara's actually has some functions that will automatically process the data and generate

110
00:07:23,480 --> 00:07:26,070
a flow of batches from a directory.

111
00:07:26,090 --> 00:07:32,450
So it's called the image data generator and it's part of the pre-processing package from Cara's you

112
00:07:32,450 --> 00:07:44,190
will say from Cara's da pre-processing image import image data generator.

113
00:07:44,820 --> 00:07:45,410
OK.

114
00:07:45,570 --> 00:07:51,660
So even though we have a lot of images right now it doesn't really help us if we only train on these

115
00:07:51,660 --> 00:07:52,640
images alone.

116
00:07:52,830 --> 00:07:57,770
What we should do is also do slight transformations on the images maybe do a little bit of rotation.

117
00:07:57,810 --> 00:07:59,880
That way if I see this sort of dog.

118
00:08:00,030 --> 00:08:05,980
But it happens to be facing in in their action or the image is a little tilted or maybe it's inverse

119
00:08:05,980 --> 00:08:12,090
me or the dogs looking to the right and sort of to the left etc. if we're able to also generate images

120
00:08:12,330 --> 00:08:16,580
that have random fluctuations to them you'll create for a stronger model.

121
00:08:16,640 --> 00:08:22,290
So the network will be more robust to different dog images and that's part of what the image data generated

122
00:08:22,290 --> 00:08:22,900
does.

123
00:08:24,840 --> 00:08:33,410
I will make an object called imagen and then say image data generator and it's going to take a ton of

124
00:08:33,410 --> 00:08:35,150
parameters so let's walk through them.

125
00:08:35,360 --> 00:08:37,690
And technically these are a lot of these are optional.

126
00:08:37,700 --> 00:08:43,200
But I do recommend them specifically for data sets where you need to create more images.

127
00:08:43,250 --> 00:08:49,640
So one parameter is the rotation range and this will randomly rotate images so you can provide how many

128
00:08:49,640 --> 00:08:51,610
degrees they should randomly be rotated.

129
00:08:51,890 --> 00:08:54,170
And I would just kind of a minor rotation.

130
00:08:54,170 --> 00:08:56,070
You don't want something extreme like 180.

131
00:08:56,090 --> 00:08:59,450
Otherwise you'll be training on upside down dogs which is quite unusual.

132
00:08:59,450 --> 00:09:03,080
Hopefully so we'll see rotation ranges around 30 degrees.

133
00:09:03,950 --> 00:09:12,610
And then we'll also specify a width shift range and this will shift the pic with by a certain maximum

134
00:09:12,610 --> 00:09:13,130
percentage.

135
00:09:13,130 --> 00:09:20,050
So kind of stretch out the images along the x axes and the percentage here actually give it as some

136
00:09:20,050 --> 00:09:21,460
value between 0 and 1.

137
00:09:21,730 --> 00:09:23,200
So we'll say 10 percent.

138
00:09:23,320 --> 00:09:29,900
That means we're going to randomly resizes images X by 0.1 and we'll do the same for the height.

139
00:09:30,180 --> 00:09:36,230
So we'll say height shift range is equal to zero point.

140
00:09:36,240 --> 00:09:38,890
Now we may also want to rescale the images.

141
00:09:38,970 --> 00:09:40,690
So essentially normalizing it.

142
00:09:40,850 --> 00:09:45,600
And if I take a look at the max value and dog right now it's 255.

143
00:09:45,600 --> 00:09:49,680
So let's go ahead and normalize that and luckily image data generator can do that for us.

144
00:09:49,680 --> 00:09:55,640
We don't need to manually do division ourselves we just say rescale and what we want to multiply for

145
00:09:55,670 --> 00:10:03,340
the rescale in this case we're going to multiply by one over 255 which is the same as the vitam by 255.

146
00:10:03,490 --> 00:10:11,230
Next we can also apply a shear range what sheer does is it means it actually cuts away part of the image.

147
00:10:11,240 --> 00:10:15,390
So essentially the opposite of expanding an image is to cut away from it or crop it.

148
00:10:15,560 --> 00:10:18,860
So we'll go ahead and allow it to crop 20 percent that way.

149
00:10:18,860 --> 00:10:24,170
It also is more robust and doesn't train really on things like shoes or things around the dog.

150
00:10:24,530 --> 00:10:24,770
OK.

151
00:10:24,770 --> 00:10:31,430
So we have sheer range and then we can also add in a little bit of zoom so we can say zoom range and

152
00:10:31,430 --> 00:10:33,160
we can zoom in by a certain maximum.

153
00:10:33,180 --> 00:10:40,060
So let's go ahead and zoom in by maybe 20 percent then well we can also do is add a horizontal flip.

154
00:10:40,280 --> 00:10:45,740
So a horizontal flip essentially flips from the dark looking this way and the shoes on this side the

155
00:10:45,740 --> 00:10:48,730
shoes and the right hand side and the dog looking the other way.

156
00:10:48,830 --> 00:10:50,420
So let's go ahead and do that.

157
00:10:50,420 --> 00:10:57,480
And for that we provide a horizontal flip and set it equal to true.

158
00:10:57,490 --> 00:11:02,050
Keep in mind there's also a vertical flip but again we don't want to train on upside down images of

159
00:11:02,050 --> 00:11:02,560
dogs.

160
00:11:02,650 --> 00:11:07,180
So it's not really helpful to us although horizontally flipping that is helpful because it can create

161
00:11:07,180 --> 00:11:09,150
similar images of the dog.

162
00:11:09,220 --> 00:11:12,660
You know standing in the right way up but slightly different.

163
00:11:12,860 --> 00:11:17,830
And then film mode will go ahead and say nearest.

164
00:11:17,870 --> 00:11:22,280
So as you can imagine if we're stretching and rescaling the images and rotating them we're going to

165
00:11:22,280 --> 00:11:24,230
have some missing pixels that we need to fill in.

166
00:11:24,230 --> 00:11:26,270
Specifically on stretching the image.

167
00:11:26,270 --> 00:11:30,660
So we're going to do is we're just going to fill in those missing pixels with the nearest value.

168
00:11:31,050 --> 00:11:31,440
OK.

169
00:11:31,520 --> 00:11:33,920
So we have our image data generator.

170
00:11:34,070 --> 00:11:40,400
Let me show you what happens when we actually run an image through the image data generator.

171
00:11:40,400 --> 00:11:47,490
So I will say imagen and then you call random transform and pass in one of the images are going to pass

172
00:11:47,490 --> 00:11:48,800
and the dog image.

173
00:11:49,230 --> 00:11:56,050
So when you run this you'll get back an array of the transform image which means you can show it.

174
00:11:56,150 --> 00:11:59,680
So I will run this and here he can see in effect.

175
00:11:59,690 --> 00:12:05,190
Keep in mind this is a random transform all of this happens randomly and it's up to 10 percent so it

176
00:12:05,200 --> 00:12:08,450
could be 5 percent shift maybe an 8 percent high.

177
00:12:08,450 --> 00:12:13,150
It could be rotated by 10 degrees 15 degrees anything below 30 and so on.

178
00:12:13,310 --> 00:12:15,730
So you're not going to get the exact same image I got here.

179
00:12:15,780 --> 00:12:19,270
You should get some something kind of random maybe a whole twist et cetera.

180
00:12:19,280 --> 00:12:21,530
So you can already those lots of things are happening here.

181
00:12:21,560 --> 00:12:23,750
We've decided to stretch out the image.

182
00:12:23,750 --> 00:12:27,640
We've also rotated it slightly and we've also done a horizontal flip.

183
00:12:27,680 --> 00:12:32,570
So this is going to help provide more training images and keep the neural network more robust to just

184
00:12:32,570 --> 00:12:37,610
general images of dogs and you can keep running this over and over again to generate different types

185
00:12:37,610 --> 00:12:40,420
of random transformations on the image overall.

186
00:12:40,430 --> 00:12:44,290
You do keep seeing a picture of a dog but they're all slightly different.

187
00:12:44,630 --> 00:12:47,960
And that's going to help the neural network train.

188
00:12:47,990 --> 00:12:54,640
Next we want to do is generate many manipulated images directly from a directory which is why we needed

189
00:12:54,650 --> 00:12:58,330
the specific structure mentioned in the beginning of this lecture.

190
00:12:58,550 --> 00:13:08,500
So what we do is the following will say image Jeon thought and what we're going to be calling is we

191
00:13:08,500 --> 00:13:14,920
call flow from directory and when we're flowing from of that victory we're going to do it once for training

192
00:13:15,010 --> 00:13:16,470
and then once for a test.

193
00:13:16,480 --> 00:13:19,900
So it looks something like this are actually not going to run this right now but I just want to show

194
00:13:19,900 --> 00:13:20,920
you what it actually looks like.

195
00:13:20,920 --> 00:13:26,740
It's essentially a generator a just point it to the train folder where inside of the training folder

196
00:13:26,740 --> 00:13:31,480
if we take a look at that folder again remember inside your training folder you have a folder for each

197
00:13:31,480 --> 00:13:32,440
category.

198
00:13:32,440 --> 00:13:36,070
So let's say we're trying to classify it between dogs cats and birds.

199
00:13:36,070 --> 00:13:40,780
You would have another folder here called Bird and then it would be filled only with bird images.

200
00:13:40,780 --> 00:13:46,150
So again the structure you need is train test and then with within each of those you need a folder for

201
00:13:46,150 --> 00:13:48,490
each category you're classifying.

202
00:13:48,490 --> 00:13:49,910
In our case it's pretty straightforward.

203
00:13:50,080 --> 00:13:54,840
And if you're to run this you get back this sort of iterator.

204
00:13:54,850 --> 00:13:59,480
So Ill tell you how many images it found and how many classes it thinks it belongs to.

205
00:13:59,500 --> 00:14:04,060
And the reason it automatically knows two classes is because it knows that there was only two folders

206
00:14:04,060 --> 00:14:04,990
within the train folder.

207
00:14:05,020 --> 00:14:06,320
So that's how that works.

208
00:14:06,320 --> 00:14:10,490
And we're going to be using this later on for both train and test.

209
00:14:10,630 --> 00:14:14,100
Plus we'll also add in a few more parameters later on.

210
00:14:14,510 --> 00:14:15,040
OK.

211
00:14:15,250 --> 00:14:18,580
So now the next step is to actually create the model.

212
00:14:18,580 --> 00:14:22,450
So in part two of this lecture series we're going to create the model.

213
00:14:22,600 --> 00:14:25,390
Show you what it would look like if you're going to train the model.

214
00:14:25,390 --> 00:14:30,880
And then since this sort of network actually requires around a hundred epochs we're going to load a

215
00:14:30,880 --> 00:14:36,410
model that I've already trained for you that we don't need to wait around maybe an hour for this to

216
00:14:36,410 --> 00:14:38,650
train the pending on how fast your computer is.

217
00:14:38,650 --> 00:14:44,260
So let's go ahead and head over to the next lecture where we build out an example model and instead

218
00:14:44,260 --> 00:14:45,990
of training it will show you what the model looks like.

219
00:14:46,000 --> 00:14:47,980
But then load up the resulting model.

220
00:14:48,110 --> 00:14:49,670
OK I'll see at the next lecture.
