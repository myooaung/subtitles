WEBVTT
1
00:00:05.430 --> 00:00:06.490
Welcome back everyone.

2
00:00:06.570 --> 00:00:13.250
And this lecture we're going to give a brief overview an introduction to the YOLO object detection algorithm.

3
00:00:13.290 --> 00:00:17.850
So this is one of the state of the art image detection algorithms and it's known as yellow which stands

4
00:00:17.850 --> 00:00:24.180
for you only look once Ulo can view an image and then draw bounding boxes over what it perceives as

5
00:00:24.180 --> 00:00:25.420
identified classes.

6
00:00:26.620 --> 00:00:31.630
So for example after we run yellow in the next series of lectures we'll be able to take in an image

7
00:00:31.870 --> 00:00:37.210
and then draw bounding boxes against a variety of classes and notice how well Ulo can actually perform

8
00:00:37.510 --> 00:00:40.390
when objects are actually obstructed from view.

9
00:00:42.090 --> 00:00:46.650
So in this course we're going to be using a version 3 of the yellow object detection algorithm which

10
00:00:46.680 --> 00:00:51.240
at the time of filming is the latest version of this algorithm and if further improves upon the original

11
00:00:51.240 --> 00:00:54.450
implementation in both speed and accuracy of detection.

12
00:00:54.780 --> 00:01:01.210
So then the question arises what makes yellow different than other detection algorithms prior detection

13
00:01:01.510 --> 00:01:06.250
systems would repurpose classifiers or localizes to perform detection.

14
00:01:06.250 --> 00:01:11.290
And what they would usually do is they would apply the model to an image at multiple locations and multiple

15
00:01:11.290 --> 00:01:16.570
scales where they would then take high scoring regions of the image and consider those as detections

16
00:01:17.880 --> 00:01:22.830
YOLO uses actually a totally different approach which is where it gets its name from what they actually

17
00:01:22.830 --> 00:01:26.760
do is we're going to apply a single neural network to the full image.

18
00:01:26.760 --> 00:01:32.760
So we only look at it once then this network divides the image into regions and predicts bounding boxes

19
00:01:32.790 --> 00:01:37.680
and probabilities for each region so that actual division is happening within the neural network so

20
00:01:37.680 --> 00:01:43.080
that it only needs to view the image one time and then these bounding boxes are weighted by the predictive

21
00:01:43.080 --> 00:01:48.810
probabilities and in the next lecture we'll actually see that we can have our own threshold over a predictive

22
00:01:48.810 --> 00:01:49.710
probability.

23
00:01:49.710 --> 00:01:55.470
So let's say we're trying to detect a person in an image the YOLO algorithm or report back that it's

24
00:01:55.530 --> 00:01:59.260
70 percent sure that a bounding box contains a person.

25
00:01:59.400 --> 00:02:04.640
So we can decide is a certain threshold for how sure the YOLO algorithm is for the election.

26
00:02:04.650 --> 00:02:09.600
So if we want our model to be a little more flexible we can have something like 50 percent necessary

27
00:02:09.600 --> 00:02:11.900
threshold in order to detect an object.

28
00:02:12.000 --> 00:02:18.440
And that way we can maybe the task harder to find people in the image now YOLO has several advantages

29
00:02:18.500 --> 00:02:20.660
over classifier based systems.

30
00:02:20.690 --> 00:02:22.480
It looks at the whole image a test time.

31
00:02:22.490 --> 00:02:27.990
So its predictions are informed by the global context in the image not just a particular region.

32
00:02:29.280 --> 00:02:31.930
It also makes predictions of a single network evaluation.

33
00:02:32.190 --> 00:02:39.090
Unlike other popular systems such as our CNN which requires thousands of network evaluations for just

34
00:02:39.090 --> 00:02:44.700
a single image and that actually makes Ulo extremely popular because it is able to perform much much

35
00:02:44.700 --> 00:02:51.660
faster than other algorithms so it performs more than 1000 times faster than our CNN and 100 times faster

36
00:02:51.750 --> 00:02:55.030
than any other version of our and known as Fast Our CNN.

37
00:02:55.050 --> 00:03:01.750
So it's 100 times faster than the fast version of our CNN which is just another network for object detection.

38
00:03:01.810 --> 00:03:06.280
Now in the next lecture we're going to load an already trained Iolo model and see if we can use it with

39
00:03:06.280 --> 00:03:08.030
either image or video data.

40
00:03:08.170 --> 00:03:12.370
And we set up an easy to use notebook all we need to do is download the model Waite's file which we're

41
00:03:12.370 --> 00:03:15.150
going to walk through the entire process in the very next lecture.

42
00:03:15.220 --> 00:03:15.760
We'll see it there.
