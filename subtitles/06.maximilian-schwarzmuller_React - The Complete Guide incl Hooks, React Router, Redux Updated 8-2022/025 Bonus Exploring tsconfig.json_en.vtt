WEBVTT
1
00:00:02.240 --> 00:00:05.060
Now as a bonus in this module,

2
00:00:05.060 --> 00:00:07.835
I wanna have another look at this tsconfig

3
00:00:07.835 --> 00:00:09.990
JSON file since I promised that,

4
00:00:09.990 --> 00:00:12.010
and since it is important to at least

5
00:00:12.010 --> 00:00:15.410
understand the basics about this file.

6
00:00:15.410 --> 00:00:18.700
This is a file which you can add to any project

7
00:00:18.700 --> 00:00:20.870
where you are using TypeScript.

8
00:00:20.870 --> 00:00:23.540
So where you are compiling TypeScript code

9
00:00:23.540 --> 00:00:24.810
to JavaScript code.

10
00:00:24.810 --> 00:00:28.800
And then this will configure this compilation.

11
00:00:28.800 --> 00:00:30.760
Now speaking of the compilation,

12
00:00:30.760 --> 00:00:33.760
in this reactant TypeScript project,

13
00:00:33.760 --> 00:00:36.830
the compiler is invoked automatically

14
00:00:36.830 --> 00:00:39.000
when we start the development server

15
00:00:39.000 --> 00:00:42.270
or when we built this project for production.

16
00:00:42.270 --> 00:00:46.330
We are using a behind the scenes, build workflow setup

17
00:00:46.330 --> 00:00:49.633
where this TypeScript compiler is integrated.

18
00:00:50.790 --> 00:00:53.980
So here we configured this compiler

19
00:00:53.980 --> 00:00:57.060
and in there you've got various options.

20
00:00:57.060 --> 00:00:59.010
To understand all those options,

21
00:00:59.010 --> 00:01:02.960
of course, check out those official docs or my course.

22
00:01:02.960 --> 00:01:04.860
I do dive into greater detail there

23
00:01:04.860 --> 00:01:08.640
and the official docs also explain all those options.

24
00:01:08.640 --> 00:01:11.050
But you can also hover over an option

25
00:01:11.050 --> 00:01:14.620
and you will get at least a short description here

26
00:01:14.620 --> 00:01:17.730
and a link for the more detailed explanation,

27
00:01:17.730 --> 00:01:19.090
so that's very helpful.

28
00:01:19.090 --> 00:01:20.990
This links to the official docs.

29
00:01:20.990 --> 00:01:23.220
And I'll also walk you through

30
00:01:23.220 --> 00:01:25.350
the most important options here

31
00:01:25.350 --> 00:01:27.213
and that starts with the target.

32
00:01:28.130 --> 00:01:32.580
This in the end controls the target JavaScript version

33
00:01:32.580 --> 00:01:35.500
to which your code will be transformed.

34
00:01:35.500 --> 00:01:39.060
And in this case, that's es5 JavaScript,

35
00:01:39.060 --> 00:01:41.950
which is quite an old version

36
00:01:41.950 --> 00:01:44.320
which of course means that you should generally

37
00:01:44.320 --> 00:01:47.190
have a broad browser support.

38
00:01:47.190 --> 00:01:50.520
Though I will say, that depending on your project setup,

39
00:01:50.520 --> 00:01:54.960
this target option might not be the only thing

40
00:01:54.960 --> 00:01:57.120
that influences the output.

41
00:01:57.120 --> 00:01:59.660
There also can be project setups

42
00:01:59.660 --> 00:02:04.380
where your TypeScript code might be compiled to JavaScript,

43
00:02:04.380 --> 00:02:08.490
and then you might have yet another compilation step.

44
00:02:08.490 --> 00:02:11.420
For example, with other tools like Babel,

45
00:02:11.420 --> 00:02:14.950
that take that output JavaScript code

46
00:02:14.950 --> 00:02:17.170
and transform it even more.

47
00:02:17.170 --> 00:02:20.550
So that's not necessarily the last step in line

48
00:02:20.550 --> 00:02:22.130
but it often will be.

49
00:02:22.130 --> 00:02:23.740
And that then simply controls

50
00:02:23.740 --> 00:02:26.120
to which kind of JavaScript code

51
00:02:26.120 --> 00:02:29.460
your TypeScript code is transformed.

52
00:02:29.460 --> 00:02:34.100
Now here we see some default TypeScript libraries

53
00:02:34.100 --> 00:02:38.990
that are included and that influences which kind of types

54
00:02:38.990 --> 00:02:42.920
are known out of the box by our TypeScript code.

55
00:02:42.920 --> 00:02:46.610
And these are some libraries which are actually

56
00:02:46.610 --> 00:02:48.560
built into TypeScript,

57
00:02:48.560 --> 00:02:51.688
so we don't need to install some extra packages here

58
00:02:51.688 --> 00:02:55.050
but to unlock them in this project

59
00:02:55.050 --> 00:02:57.203
we still need to list them here.

60
00:02:58.090 --> 00:03:01.630
Now the DOM lib which is added here, for example,

61
00:03:01.630 --> 00:03:04.480
ensures that some default DOM types

62
00:03:04.480 --> 00:03:06.950
are understood by TypeScript.

63
00:03:06.950 --> 00:03:09.720
And a great example here can be found

64
00:03:09.720 --> 00:03:12.020
in the NewTodo.tsx file.

65
00:03:12.020 --> 00:03:15.270
This HTMLInputElement type.

66
00:03:15.270 --> 00:03:18.280
I mentioned that this is a built-in type

67
00:03:18.280 --> 00:03:21.810
and it's actually such a built-in type that it's unlocked

68
00:03:21.810 --> 00:03:25.883
because we have that DOM lib added here.

69
00:03:26.730 --> 00:03:31.210
If I would remove DOM here from lib and save this,

70
00:03:31.210 --> 00:03:33.130
then eventually here,

71
00:03:33.130 --> 00:03:35.430
you see I'm getting an error down there.

72
00:03:35.430 --> 00:03:37.680
That value does not exist on this type

73
00:03:37.680 --> 00:03:41.830
because it actually doesn't fully understand this type then.

74
00:03:41.830 --> 00:03:46.630
So that's an important lib which we should have here.

75
00:03:46.630 --> 00:03:49.693
So in here I'll bring back DOM.

76
00:03:51.480 --> 00:03:55.280
Now for those other settings, allowJs controls that

77
00:03:55.280 --> 00:03:59.010
we could also include just .JS files,

78
00:03:59.010 --> 00:04:02.700
so plain JavaScript files in our projects.

79
00:04:02.700 --> 00:04:05.880
And import from such a plain JavaScript file

80
00:04:05.880 --> 00:04:07.390
without causing an error,

81
00:04:07.390 --> 00:04:11.690
if we wanna mix and match TypeScript and JavaScript files,

82
00:04:11.690 --> 00:04:13.913
that's possible with this option.

83
00:04:14.800 --> 00:04:16.240
Then we got a couple of options

84
00:04:16.240 --> 00:04:18.839
which are not that important for us here.

85
00:04:18.839 --> 00:04:21.630
Very important though, is the strict option.

86
00:04:21.630 --> 00:04:23.510
This is set to true which means

87
00:04:23.510 --> 00:04:26.550
that we have the strictest possible settings

88
00:04:26.550 --> 00:04:28.040
for this project.

89
00:04:28.040 --> 00:04:29.490
And that for example,

90
00:04:29.490 --> 00:04:34.490
influences that we can't have implicitly any values

91
00:04:34.990 --> 00:04:38.380
as we had it with parameters in the past.

92
00:04:38.380 --> 00:04:41.810
If we had a parameter somewhere,

93
00:04:41.810 --> 00:04:43.810
where we didn't set the type,

94
00:04:43.810 --> 00:04:46.030
for example, if I remove the type here,

95
00:04:46.030 --> 00:04:49.460
then we get those squiggly lines that it implicitly has

96
00:04:49.460 --> 00:04:53.320
the any type and with strict mode, that's not allowed.

97
00:04:53.320 --> 00:04:57.250
We have to explicitly set a type in places

98
00:04:57.250 --> 00:05:00.680
where TypeScript is not able to infer it.

99
00:05:00.680 --> 00:05:05.470
Strict true also unlocks a couple of other strict features,

100
00:05:05.470 --> 00:05:08.430
but this non-implicit any type feature

101
00:05:08.430 --> 00:05:12.000
is the most important one for us here.

102
00:05:12.000 --> 00:05:13.100
Then we've got more options

103
00:05:13.100 --> 00:05:15.760
which are not that important for us here.

104
00:05:15.760 --> 00:05:18.100
The jsx option is interesting.

105
00:05:18.100 --> 00:05:21.860
It basically controls that jsx code is supported

106
00:05:21.860 --> 00:05:24.910
and which output code should be generated.

107
00:05:24.910 --> 00:05:28.130
And in general, the default settings which we got here,

108
00:05:28.130 --> 00:05:29.680
of course should work.

109
00:05:29.680 --> 00:05:31.140
And you should only change them

110
00:05:31.140 --> 00:05:33.180
if you know what you're doing.

111
00:05:33.180 --> 00:05:36.380
But you can configure your TypeScripts behavior here,

112
00:05:36.380 --> 00:05:38.300
and you now have a rough understanding

113
00:05:38.300 --> 00:05:39.730
of what this file does.

114
00:05:39.730 --> 00:05:42.260
Again you can always dive into the official docs

115
00:05:42.260 --> 00:05:44.733
to learn more about those different settings.

