1
00:00:00,100 --> 00:00:02,166
Now, in this course section,

2
00:00:02,166 --> 00:00:04,333
you learned a lot about React Router,

3
00:00:04,333 --> 00:00:07,600
and you learned it about
React Router version 5

4
00:00:07,600 --> 00:00:10,000
because that is the version that is used

5
00:00:10,000 --> 00:00:11,866
in most projects.

6
00:00:11,866 --> 00:00:15,433
The latest version, however, is version 6.

7
00:00:15,433 --> 00:00:16,700
And therefore, of course,

8
00:00:16,700 --> 00:00:18,800
I also want to make sure that you're able

9
00:00:18,800 --> 00:00:20,466
to work with that version.

10
00:00:20,466 --> 00:00:23,566
And thankfully, if you
learned about version 5,

11
00:00:23,566 --> 00:00:26,300
using version 6 is also super simple

12
00:00:26,300 --> 00:00:28,766
and it's not too hard to switch to it.

13
00:00:29,666 --> 00:00:32,333
Now, to learn about
React Router version 6,

14
00:00:32,333 --> 00:00:34,966
you can, of course, check
out the official website,

15
00:00:34,966 --> 00:00:38,266
ReactRouter.com, and the
documentation you find there.

16
00:00:38,266 --> 00:00:42,033
And specifically, there
also is a upgrading guide,

17
00:00:42,033 --> 00:00:44,500
which I will attach to this video

18
00:00:44,500 --> 00:00:47,933
where you will find
detailed upgrading steps

19
00:00:47,933 --> 00:00:51,700
and where you also learn
what's new and what changed.

20
00:00:51,700 --> 00:00:54,200
And this looks like a super long document,

21
00:00:54,200 --> 00:00:56,366
and if you wanna have all the details,

22
00:00:56,366 --> 00:00:58,566
you should definitely also dive into it.

23
00:00:58,566 --> 00:01:01,700
But in the end, it's
really simple to upgrade,

24
00:01:01,700 --> 00:01:03,533
and not a lot changed

25
00:01:03,533 --> 00:01:06,366
when it comes to the code that we write.

26
00:01:06,366 --> 00:01:09,033
Under the hood, version 6 is a lot better

27
00:01:09,033 --> 00:01:10,233
than version 5,

28
00:01:10,233 --> 00:01:12,066
and therefore, if you can upgrade,

29
00:01:12,066 --> 00:01:15,066
you should, of course,
strongly consider doing that.

30
00:01:15,066 --> 00:01:17,666
Now, to see what changed
and write some code,

31
00:01:17,666 --> 00:01:20,466
I created a little snapshot,

32
00:01:20,466 --> 00:01:22,066
a little project snapshot,

33
00:01:22,066 --> 00:01:23,366
which you find attached,

34
00:01:23,366 --> 00:01:26,400
which does use React Router version 5.

35
00:01:26,400 --> 00:01:29,766
So which does not use version 6.

36
00:01:29,766 --> 00:01:32,300
This snapshot is a snapshot

37
00:01:32,300 --> 00:01:34,566
from that course project we worked on

38
00:01:34,566 --> 00:01:36,566
throughout this course section.

39
00:01:36,566 --> 00:01:38,833
It's not the final state of the project

40
00:01:38,833 --> 00:01:40,666
but a first snapshot

41
00:01:40,666 --> 00:01:43,900
that allows us to dive into the first set

42
00:01:43,900 --> 00:01:45,433
of important changes.

43
00:01:46,533 --> 00:01:51,033
So once you downloaded and
extracted this snapshot,

44
00:01:51,033 --> 00:01:52,466
you should run npm install

45
00:01:52,466 --> 00:01:54,533
to install all the core dependencies

46
00:01:54,533 --> 00:01:57,133
that come with that project.

47
00:01:57,133 --> 00:01:58,666
And once you did that,

48
00:01:58,666 --> 00:02:02,200
you should install React Router version 6.

49
00:02:02,200 --> 00:02:06,700
And you do this by running
npm install react-router-dom,

50
00:02:07,600 --> 00:02:08,800
and that's important.

51
00:02:08,800 --> 00:02:10,966
You want react-router-dom,

52
00:02:11,966 --> 00:02:15,233
which is the browser
version of React Router.

53
00:02:15,233 --> 00:02:17,700
And then add @6,

54
00:02:17,700 --> 00:02:21,966
which ensures that you
install the latest version 6.

55
00:02:21,966 --> 00:02:24,000
Or you add @latest,

56
00:02:24,000 --> 00:02:26,600
which will always give you
the very latest version,

57
00:02:26,600 --> 00:02:28,333
and that's what we can do here.

58
00:02:30,266 --> 00:02:34,166
So with that installed, we
got React Router version 6.

59
00:02:34,166 --> 00:02:37,133
And if I now run npm start,

60
00:02:37,133 --> 00:02:41,600
you will see that this project won't work.

61
00:02:41,600 --> 00:02:44,466
If I try to visit this page,

62
00:02:44,466 --> 00:02:45,933
I now get an error

63
00:02:45,933 --> 00:02:49,466
that Switch is not exported
from react-router-dom.

64
00:02:50,533 --> 00:02:52,866
And that's one of the first changes.

65
00:02:52,866 --> 00:02:55,566
When using React Router version 5,

66
00:02:55,566 --> 00:02:58,300
we used this Switch component,

67
00:02:58,300 --> 00:03:01,433
which is provided by
the react-router package

68
00:03:01,433 --> 00:03:03,500
to wrap our routes

69
00:03:03,500 --> 00:03:06,866
and make sure that only one
of these routes is loaded

70
00:03:06,866 --> 00:03:08,200
at the same time,

71
00:03:08,200 --> 00:03:10,500
instead of all matching routes.

72
00:03:10,500 --> 00:03:12,333
And typically, that is what you want.

73
00:03:12,333 --> 00:03:14,400
You want to define multiple routes

74
00:03:14,400 --> 00:03:16,800
but only one route should be active

75
00:03:16,800 --> 00:03:18,266
at a given point of time.

76
00:03:19,266 --> 00:03:21,633
Now, with React Router version 6,

77
00:03:21,633 --> 00:03:24,033
Switch doesn't exist anymore.

78
00:03:24,033 --> 00:03:26,900
Instead, this now becomes Routes.

79
00:03:26,900 --> 00:03:30,266
So you replace Switch with Routes.

80
00:03:31,133 --> 00:03:33,533
And you therefore import Routes

81
00:03:33,533 --> 00:03:36,633
from react-router-dom instead of Switch.

82
00:03:37,533 --> 00:03:39,266
By the way, what hasn't changed

83
00:03:39,266 --> 00:03:41,600
is that you still import BrowserRouter

84
00:03:41,600 --> 00:03:43,366
from react-router-dom,

85
00:03:43,366 --> 00:03:45,500
and you wrap that around your app

86
00:03:45,500 --> 00:03:47,933
where you then plan to use routing.

87
00:03:47,933 --> 00:03:51,466
That's exactly the same
syntax as you know it.

88
00:03:51,466 --> 00:03:53,600
With that, the error goes away.

89
00:03:53,600 --> 00:03:56,466
But if I click Welcome or Products,

90
00:03:56,466 --> 00:03:58,733
you see that the URL changes

91
00:03:58,733 --> 00:04:02,000
but I still don't see
anything on the screen.

92
00:04:02,000 --> 00:04:03,633
The reason for this is that the way

93
00:04:03,633 --> 00:04:07,433
how we define our routes also changed.

94
00:04:07,433 --> 00:04:09,333
We still have the route component

95
00:04:09,333 --> 00:04:11,833
and it still takes a path prop,

96
00:04:11,833 --> 00:04:14,600
but the component that should be loaded

97
00:04:14,600 --> 00:04:17,565
when a given path becomes active,

98
00:04:17,565 --> 00:04:20,733
so in this case, the welcome
component, for example,

99
00:04:20,733 --> 00:04:23,766
is not longer a child of your route

100
00:04:23,766 --> 00:04:25,666
but instead, on Route,

101
00:04:25,666 --> 00:04:29,300
you add a new element prop,

102
00:04:29,300 --> 00:04:32,466
and then you pass a
dynamic value to element

103
00:04:32,466 --> 00:04:34,400
and that dynamic value

104
00:04:34,400 --> 00:04:38,566
is that to be rendered component as JSX.

105
00:04:38,566 --> 00:04:40,133
That's important.

106
00:04:40,133 --> 00:04:43,233
So you don't pass Welcome like this,

107
00:04:43,233 --> 00:04:46,833
you don't pass a pointer
to that component function.

108
00:04:46,833 --> 00:04:49,500
Instead, you pass the JSX element.

109
00:04:49,500 --> 00:04:51,366
Hence the name element.

110
00:04:51,366 --> 00:04:54,233
It wants a JSX element.

111
00:04:54,233 --> 00:04:55,600
And then this can, of course,

112
00:04:55,600 --> 00:04:57,966
become a self-closing component,

113
00:04:57,966 --> 00:04:59,433
this route component.

114
00:05:00,300 --> 00:05:02,733
And we do the same here for products.

115
00:05:02,733 --> 00:05:06,466
Here we also add the element prop,

116
00:05:06,466 --> 00:05:10,666
and we then move Products into this prop

117
00:05:10,666 --> 00:05:14,400
or as a value, we set it
as a value for this prop.

118
00:05:14,400 --> 00:05:17,266
And we turn this into a
self-closing component.

119
00:05:17,266 --> 00:05:18,466
And last but not least,

120
00:05:18,466 --> 00:05:21,666
we also do this for this last route.

121
00:05:21,666 --> 00:05:24,366
And please note that
this is a dynamic route

122
00:05:24,366 --> 00:05:26,666
and that still works as you learned it.

123
00:05:26,666 --> 00:05:29,600
So you can still have
dynamic path parameters,

124
00:05:29,600 --> 00:05:33,366
like productId as you
could with version five.

125
00:05:33,366 --> 00:05:35,000
That did not change.

126
00:05:36,200 --> 00:05:40,666
With that, once the routes
were restructured like this,

127
00:05:40,666 --> 00:05:43,766
now you see I see this
welcome page content here,

128
00:05:43,766 --> 00:05:46,766
and I can switch to
products back and forth.

129
00:05:47,600 --> 00:05:49,333
If I select a product,

130
00:05:49,333 --> 00:05:51,966
I also do see those product details.

131
00:05:51,966 --> 00:05:54,466
So those detail routes also works

132
00:05:54,466 --> 00:05:58,666
and therefore, a simple
app using routes like this

133
00:05:58,666 --> 00:06:01,700
can easily be updated to version 6

134
00:06:01,700 --> 00:06:03,966
by replacing Switch with Routes,

135
00:06:03,966 --> 00:06:06,300
and moving the two below that component

136
00:06:06,300 --> 00:06:09,133
into this new element prop.

137
00:06:09,133 --> 00:06:13,533
But that's not all you
should know about version 6.

138
00:06:13,533 --> 00:06:15,400
In addition to these changes,

139
00:06:15,400 --> 00:06:17,033
it's also worth noting

140
00:06:17,033 --> 00:06:20,200
that there were some internal changes

141
00:06:20,200 --> 00:06:22,866
with React Router version 6.

142
00:06:22,866 --> 00:06:27,866
Specifically, the internal
logic for evaluating these paths

143
00:06:28,466 --> 00:06:31,900
and then picking a route to load changed.

144
00:06:31,900 --> 00:06:34,300
With React Router version 5,

145
00:06:34,300 --> 00:06:36,600
we needed to add exact here

146
00:06:36,600 --> 00:06:37,966
because without exact,

147
00:06:37,966 --> 00:06:42,966
this would match if a path
started with /products.

148
00:06:44,500 --> 00:06:47,200
With version 6, this behavior is gone

149
00:06:47,200 --> 00:06:49,800
and hence, the exact prop is gone.

150
00:06:49,800 --> 00:06:52,866
It now always looks for exact matches

151
00:06:52,866 --> 00:06:55,800
if you define your paths like this.

152
00:06:55,800 --> 00:06:58,900
So we can remove exact with version 6,

153
00:06:58,900 --> 00:07:02,300
and we still get the
same behavior as before.

154
00:07:02,300 --> 00:07:05,033
If you compare that to
the version 5 behavior

155
00:07:05,033 --> 00:07:09,366
where without exact you would
load the products component

156
00:07:09,366 --> 00:07:12,466
and the product detail
component if you pick a detail.

157
00:07:12,466 --> 00:07:14,400
That, of course, is an improvement

158
00:07:14,400 --> 00:07:17,533
because you don't need
that extra prop anymore.

159
00:07:17,533 --> 00:07:21,333
If you want that old behavior
of matching the start

160
00:07:21,333 --> 00:07:22,633
of a path only,

161
00:07:22,633 --> 00:07:27,633
you can still get that by
adding /* after your path.

162
00:07:28,533 --> 00:07:30,833
Once you add that, this route

163
00:07:30,833 --> 00:07:35,833
will become active if a URL
path starts with /products

164
00:07:36,666 --> 00:07:39,966
instead of being only /products.

165
00:07:39,966 --> 00:07:41,300
However, what you will note

166
00:07:41,300 --> 00:07:43,300
is that even if you do that,

167
00:07:43,300 --> 00:07:46,066
and you go back to your site here,

168
00:07:46,066 --> 00:07:47,833
if you pick a product detail,

169
00:07:47,833 --> 00:07:49,966
you still get the product detail

170
00:07:49,966 --> 00:07:52,933
instead of the products overview page,

171
00:07:52,933 --> 00:07:56,466
even though I'm now looking
for the start of the path.

172
00:07:56,466 --> 00:07:59,733
The reason for that is that internally,

173
00:07:59,733 --> 00:08:04,733
React Router version 6 now
also has a better algorithm

174
00:08:05,800 --> 00:08:08,733
for picking the best route to be loaded

175
00:08:08,733 --> 00:08:10,566
for a given path.

176
00:08:10,566 --> 00:08:14,066
And what it basically does here is it sees

177
00:08:14,066 --> 00:08:19,066
that if your path is
/products/ some other value,

178
00:08:20,133 --> 00:08:23,833
that the best fit for
this kind of path probably

179
00:08:23,833 --> 00:08:24,933
is this route

180
00:08:24,933 --> 00:08:28,766
because you explicitly
declared this route here

181
00:08:28,766 --> 00:08:32,900
where you say that for
/products/ something,

182
00:08:32,900 --> 00:08:35,232
you want ProductDetail.

183
00:08:35,232 --> 00:08:37,700
So unlike with version 5,

184
00:08:37,700 --> 00:08:41,900
the order of routes also
doesn't matter anymore.

185
00:08:41,900 --> 00:08:44,733
With version 5, you had to be careful.

186
00:08:44,733 --> 00:08:47,133
For example, if you also had another route

187
00:08:47,133 --> 00:08:50,033
that should be /products/edit.

188
00:08:50,033 --> 00:08:54,800
Then with version 5,
this kind of route here

189
00:08:54,800 --> 00:08:58,466
would have to be defined
before you have the route

190
00:08:58,466 --> 00:09:00,033
with the dynamic segment

191
00:09:00,033 --> 00:09:02,200
because if you had it thereafter,

192
00:09:02,200 --> 00:09:05,166
this route would always win.

193
00:09:05,166 --> 00:09:07,433
With version 6, this changed

194
00:09:07,433 --> 00:09:09,900
and it's smarter internally.

195
00:09:09,900 --> 00:09:12,466
You could define these two routes,

196
00:09:12,466 --> 00:09:16,433
and if you then visit /edit here,

197
00:09:16,433 --> 00:09:18,833
so products/edit,

198
00:09:18,833 --> 00:09:21,166
React Router would find out

199
00:09:21,166 --> 00:09:25,033
that this last route
here is the best match

200
00:09:25,033 --> 00:09:27,466
for this specific path.

201
00:09:27,466 --> 00:09:31,000
And if you had /products/p1,
on the other hand,

202
00:09:31,000 --> 00:09:32,066
it would determine

203
00:09:32,066 --> 00:09:35,133
that you have no better
match than this route,

204
00:09:35,133 --> 00:09:37,500
and hence, this route would become active.

205
00:09:37,500 --> 00:09:40,366
So the order of routes
doesn't matter anymore

206
00:09:40,366 --> 00:09:43,500
when working with React Router version 6.

207
00:09:43,500 --> 00:09:46,466
And that's another
important thing to note.

208
00:09:46,466 --> 00:09:48,366
I'll also revert this here

209
00:09:48,366 --> 00:09:51,400
because it didn't have
any effect here anyways.

210
00:09:52,500 --> 00:09:55,700
So these are a couple of
super important changes

211
00:09:55,700 --> 00:09:58,000
but as you see, code wise,

212
00:09:58,000 --> 00:10:00,366
there wasn't a lot to change.

213
00:10:01,633 --> 00:10:05,633
Now, let's move from
route definition to links.

214
00:10:05,633 --> 00:10:08,333
The first important thing to note

215
00:10:08,333 --> 00:10:10,766
is that you still have the Link component,

216
00:10:10,766 --> 00:10:13,666
which generally works as you learned it

217
00:10:13,666 --> 00:10:16,333
and you also still have
the NavLink component.

218
00:10:16,333 --> 00:10:18,200
That did not change.

219
00:10:18,200 --> 00:10:22,900
However, what did change is
this activeClassName prop.

220
00:10:22,900 --> 00:10:24,933
With React Router version 5,

221
00:10:24,933 --> 00:10:26,533
you could use that prop

222
00:10:26,533 --> 00:10:31,233
to apply some CSS class
automatically to the link

223
00:10:31,233 --> 00:10:33,333
once it became active.

224
00:10:33,333 --> 00:10:36,000
With React Router version 5,

225
00:10:36,000 --> 00:10:38,666
this prop was removed.

226
00:10:38,666 --> 00:10:41,766
Instead, if you want to
apply a specific class

227
00:10:41,766 --> 00:10:43,633
once this is active,

228
00:10:43,633 --> 00:10:45,666
you have to manually find out

229
00:10:45,666 --> 00:10:48,566
whether this link is active or not.

230
00:10:48,566 --> 00:10:51,066
Doing that is very simple though

231
00:10:51,066 --> 00:10:53,733
because you can use the className prop

232
00:10:53,733 --> 00:10:57,300
or the style prop to
apply dynamic styling.

233
00:10:57,300 --> 00:11:00,000
And both props work in a special way

234
00:11:00,000 --> 00:11:01,866
when applied to NavLink.

235
00:11:02,900 --> 00:11:06,033
className does not just take a class name,

236
00:11:06,033 --> 00:11:10,200
instead, it takes a function,
which you can pass here,

237
00:11:10,200 --> 00:11:15,166
and this function will actually
give you some information

238
00:11:15,166 --> 00:11:19,300
about this link and the
current state of navigation.

239
00:11:19,300 --> 00:11:22,766
So get some NavData here you could say.

240
00:11:22,766 --> 00:11:26,100
This argument is provided by React Router

241
00:11:26,100 --> 00:11:29,433
to this function when
this function is executed.

242
00:11:29,433 --> 00:11:32,733
And this function will be
executed by React Router

243
00:11:32,733 --> 00:11:34,733
when it evaluates NavLink

244
00:11:34,733 --> 00:11:38,000
and whenever your navigation changes.

245
00:11:38,000 --> 00:11:40,333
Inside this navData object,

246
00:11:40,333 --> 00:11:42,400
which you get by React Router,

247
00:11:42,400 --> 00:11:46,333
you then find a isActive property.

248
00:11:46,333 --> 00:11:48,066
And that will be true

249
00:11:48,066 --> 00:11:53,066
if this link is active for the
currently chosen path or not.

250
00:11:53,433 --> 00:11:57,600
So you can then use this to
return a className dynamically

251
00:11:57,600 --> 00:12:00,533
that should be applied to NavLink.

252
00:12:00,533 --> 00:12:03,800
So here, I can get rid
of those curly braces

253
00:12:03,800 --> 00:12:08,266
to use this short form of
this arrow function syntax.

254
00:12:08,266 --> 00:12:11,866
I could then check if
navData.isActive is truthy.

255
00:12:11,866 --> 00:12:16,166
In which case, I can
apply my active class here

256
00:12:16,166 --> 00:12:19,466
and otherwise, I apply no class.

257
00:12:19,466 --> 00:12:21,066
That's what I could do here.

258
00:12:21,066 --> 00:12:22,800
And I can do the same here

259
00:12:22,800 --> 00:12:25,233
for the other NavLink.

260
00:12:25,233 --> 00:12:27,166
It's a bit more verbose

261
00:12:27,166 --> 00:12:31,033
but it also gives you more
customization possibilities

262
00:12:31,033 --> 00:12:32,200
and more control

263
00:12:32,200 --> 00:12:35,200
and therefore, it is a change
that's not too difficult

264
00:12:35,200 --> 00:12:38,700
to incorporate, and you then
still get the old behavior

265
00:12:38,700 --> 00:12:41,066
as you can now see in the navigation here.

266
00:12:42,133 --> 00:12:45,066
So that's an important thing
you should know about links.

267
00:12:46,133 --> 00:12:47,666
I also wanna have a brief look

268
00:12:47,666 --> 00:12:49,766
at the ProductDetail component here.

269
00:12:49,766 --> 00:12:52,300
The ProductDetail page to be precise.

270
00:12:52,300 --> 00:12:55,100
There I'm getting this dynamic parameter,

271
00:12:55,100 --> 00:12:56,866
which is part of the URL.

272
00:12:56,866 --> 00:12:59,466
And with React Router version 5,

273
00:12:59,466 --> 00:13:02,533
we extracted that with the useParams hook

274
00:13:02,533 --> 00:13:06,833
that was provided by the
react-router-dom package.

275
00:13:06,833 --> 00:13:09,733
As you can tell, this
code still seems to work

276
00:13:09,733 --> 00:13:13,966
because we had no problems
extracting that dynamic parameter

277
00:13:13,966 --> 00:13:16,933
with React Router version 6 as well.

278
00:13:16,933 --> 00:13:19,100
So the code here stays the same.

279
00:13:20,333 --> 00:13:24,666
Now, let's move on to a
slightly more advanced app here,

280
00:13:24,666 --> 00:13:27,766
another snapshot I prepared for you,

281
00:13:27,766 --> 00:13:31,700
another snapshot taken
from this course section.

282
00:13:31,700 --> 00:13:34,833
In this snapshot, we also have a redirect,

283
00:13:34,833 --> 00:13:39,733
and we have a nested route
in the Welcome.js file.

284
00:13:40,633 --> 00:13:44,000
Now, here we also got
some noteworthy changes

285
00:13:44,000 --> 00:13:47,900
that come with React Router version 6.

286
00:13:47,900 --> 00:13:49,800
And let's start with redirect

287
00:13:49,800 --> 00:13:52,266
because that's already
causing an error here

288
00:13:52,266 --> 00:13:56,400
because the redirect component
doesn't exist anymore.

289
00:13:56,400 --> 00:13:59,033
Now, you can still redirect, of course.

290
00:13:59,033 --> 00:14:00,600
The only thing that changed

291
00:14:00,600 --> 00:14:04,933
is that now instead of
redirect, it's Navigate.

292
00:14:04,933 --> 00:14:08,566
That's a new component
provided by React Router 6,

293
00:14:08,566 --> 00:14:13,133
and we can use this
here to well, navigate.

294
00:14:13,133 --> 00:14:17,966
And, of course, we then also
should use this element prop

295
00:14:17,966 --> 00:14:20,500
instead of passing it as a child

296
00:14:20,500 --> 00:14:23,266
between the opening
and closing route tags.

297
00:14:24,266 --> 00:14:28,033
Though to be precise, if
we just add it like this,

298
00:14:28,033 --> 00:14:29,866
what we will actually do

299
00:14:29,866 --> 00:14:33,166
is we will push a navigation to this page

300
00:14:33,166 --> 00:14:35,000
onto the navigation stack.

301
00:14:35,000 --> 00:14:37,000
If we truly want to redirect,

302
00:14:37,000 --> 00:14:40,733
so replace the current
page with the new page,

303
00:14:40,733 --> 00:14:43,333
then we would have to add the replace prop

304
00:14:43,333 --> 00:14:44,833
to Navigate as well.

305
00:14:44,833 --> 00:14:47,833
And this would then be
the full replacement

306
00:14:47,833 --> 00:14:51,233
for the old redirect component.

307
00:14:51,233 --> 00:14:54,066
But you could also just
configure it like this

308
00:14:54,066 --> 00:14:56,166
to just push the new page,

309
00:14:56,166 --> 00:14:58,933
instead of replacing the current page.

310
00:15:00,266 --> 00:15:03,100
With that, this error goes away.

311
00:15:03,100 --> 00:15:06,666
And as you see, if I now enter just slash,

312
00:15:06,666 --> 00:15:09,266
I am redirected to welcome.

313
00:15:09,266 --> 00:15:11,866
Now I get another error though.

314
00:15:11,866 --> 00:15:15,800
And that other error is
not related to redirecting

315
00:15:15,800 --> 00:15:19,233
because that works with
Navigate as you saw it here.

316
00:15:19,233 --> 00:15:22,133
Instead this error is now related

317
00:15:22,133 --> 00:15:25,633
to this nested route, which we have here

318
00:15:25,633 --> 00:15:27,866
inside another component.

319
00:15:29,400 --> 00:15:31,566
Nested routes can be useful

320
00:15:31,566 --> 00:15:32,666
because they allow you

321
00:15:32,666 --> 00:15:36,266
to build deeply nested page structures

322
00:15:36,266 --> 00:15:39,600
but the syntax you know from version 5

323
00:15:39,600 --> 00:15:44,600
from React Router version 5
doesn't work like this anymore.

324
00:15:44,633 --> 00:15:48,033
However, updating it is also simple.

325
00:15:48,033 --> 00:15:50,333
The key thing you have to do here,

326
00:15:50,333 --> 00:15:53,066
which you also learn in this error message

327
00:15:53,066 --> 00:15:57,333
is that you need to wrap
your Route with Routes.

328
00:15:57,333 --> 00:15:59,866
In version 5, you didn't need to do that.

329
00:15:59,866 --> 00:16:03,866
You didn't have to wrap your
Route definition components

330
00:16:03,866 --> 00:16:06,700
with the Routes or Switch component.

331
00:16:06,700 --> 00:16:09,600
With version 6, this is mandatory though.

332
00:16:09,600 --> 00:16:12,866
Hence, we should import
Routes here as well.

333
00:16:12,866 --> 00:16:15,966
And wrap this single Route with Routes.

334
00:16:15,966 --> 00:16:17,466
So even if it's just one route,

335
00:16:17,466 --> 00:16:19,166
you have to wrap it.

336
00:16:19,166 --> 00:16:21,033
That's just something you have to do.

337
00:16:22,466 --> 00:16:26,000
Now then, we, of course, also
have to update this syntax

338
00:16:26,000 --> 00:16:27,600
to use the element prop,

339
00:16:27,600 --> 00:16:30,900
and pass our to be displayed JSX code

340
00:16:30,900 --> 00:16:34,000
to element instead of
having it as a child.

341
00:16:36,033 --> 00:16:37,566
And with this update done,

342
00:16:37,566 --> 00:16:39,366
if we now save this,

343
00:16:39,366 --> 00:16:42,600
this works, we don't
get the error anymore.

344
00:16:42,600 --> 00:16:44,900
But it also doesn't really work

345
00:16:44,900 --> 00:16:47,233
if you take a closer look.

346
00:16:47,233 --> 00:16:49,433
We see the welcome page,

347
00:16:49,433 --> 00:16:51,166
which is this title

348
00:16:51,166 --> 00:16:53,266
but we don't see the content here,

349
00:16:53,266 --> 00:16:55,300
Welcome, new user!

350
00:16:55,300 --> 00:16:56,166
Well, the reason for this

351
00:16:56,166 --> 00:16:59,200
is that I haven't loaded new-user yet.

352
00:16:59,200 --> 00:17:04,165
If I do change my path
to /welcome/new-user,

353
00:17:04,165 --> 00:17:07,400
then it also doesn't work.

354
00:17:07,400 --> 00:17:09,333
Now, what's wrong here?

355
00:17:09,333 --> 00:17:12,500
Well, what's wrong is that the logic

356
00:17:12,500 --> 00:17:16,933
and the syntax you need for
nested routes also changed,

357
00:17:16,933 --> 00:17:20,099
and it actually changed to the better.

358
00:17:20,099 --> 00:17:24,099
If you plan on using nested
routes, you, first of all,

359
00:17:24,099 --> 00:17:26,233
have to start at the parent route

360
00:17:26,233 --> 00:17:29,066
that will eventually
hold more nested routes.

361
00:17:29,066 --> 00:17:32,033
In this case, the Welcome route here.

362
00:17:32,033 --> 00:17:37,033
I mentioned before that
you can add this /* thing

363
00:17:37,266 --> 00:17:39,700
if React Router should match this route

364
00:17:39,700 --> 00:17:43,900
for the start of the path
instead of the full path.

365
00:17:43,900 --> 00:17:45,333
At the moment, I don't have this,

366
00:17:45,333 --> 00:17:47,233
I just have /welcome.

367
00:17:47,233 --> 00:17:51,333
And therefore, because of how
React Router version 6 works,

368
00:17:51,333 --> 00:17:55,400
this will always match and
load this welcome component

369
00:17:55,400 --> 00:17:59,966
if the entire path is exactly /welcome.

370
00:17:59,966 --> 00:18:03,566
Now, here it's /welcome/new-user though,

371
00:18:03,566 --> 00:18:06,766
and therefore, this route isn't loaded.

372
00:18:06,766 --> 00:18:10,866
So to load it, we could
change it to /new-user

373
00:18:10,866 --> 00:18:13,866
but that would not be the main idea here.

374
00:18:13,866 --> 00:18:16,266
We want to keep /welcome

375
00:18:16,266 --> 00:18:20,933
and only load this title
if we visit just /welcome

376
00:18:20,933 --> 00:18:23,400
but then we want to be
able to, in addition,

377
00:18:23,400 --> 00:18:26,666
load this content here, this paragraph

378
00:18:26,666 --> 00:18:31,300
if we have the /new-user
part after welcome.

379
00:18:31,300 --> 00:18:32,600
To make this possible,

380
00:18:32,600 --> 00:18:34,866
we have to embrace this new syntax

381
00:18:34,866 --> 00:18:37,500
of adding /* here.

382
00:18:37,500 --> 00:18:40,500
Now the welcome component will be loaded

383
00:18:40,500 --> 00:18:44,566
whenever our path starts with /welcome

384
00:18:44,566 --> 00:18:48,033
instead of having an exact full match.

385
00:18:48,033 --> 00:18:49,500
So therefore with this,

386
00:18:49,500 --> 00:18:53,800
you now see if I visit /welcome/new-user,

387
00:18:53,800 --> 00:18:55,900
we have our title back.

388
00:18:55,900 --> 00:18:59,366
But we still don't see
that paragraph in here.

389
00:18:59,366 --> 00:19:02,766
That's happening because of
another change introduced

390
00:19:02,766 --> 00:19:05,600
by React Router version 6.

391
00:19:05,600 --> 00:19:08,166
When you're working with nested routes,

392
00:19:08,166 --> 00:19:10,300
so with this kind of matching

393
00:19:10,300 --> 00:19:12,566
and then routes defined inside

394
00:19:12,566 --> 00:19:14,100
of the loaded component,

395
00:19:14,100 --> 00:19:15,600
as we have it here,

396
00:19:15,600 --> 00:19:19,566
then the paths of these nested routes

397
00:19:19,566 --> 00:19:23,200
actually are relative to the path

398
00:19:23,200 --> 00:19:25,333
of the parent route.

399
00:19:25,333 --> 00:19:29,133
So that means that this route
here only becomes active

400
00:19:29,133 --> 00:19:32,666
if our path starts with /welcome.

401
00:19:32,666 --> 00:19:37,666
Therefore, the path here already assumes

402
00:19:38,066 --> 00:19:41,133
that we have /welcome at the beginning.

403
00:19:41,133 --> 00:19:45,666
Hence here, we only have
to add the extra part,

404
00:19:45,666 --> 00:19:48,133
the extra elements in the path

405
00:19:48,133 --> 00:19:50,566
that are relevant for this route.

406
00:19:50,566 --> 00:19:54,266
We don't need to repeat /welcome/ anymore,

407
00:19:54,266 --> 00:19:57,066
we can just have new-user here.

408
00:19:57,066 --> 00:19:59,500
And that then tells React Router

409
00:19:59,500 --> 00:20:01,300
that this should become active

410
00:20:01,300 --> 00:20:03,366
if this component is active,

411
00:20:03,366 --> 00:20:07,166
which will be the case
for /welcome/ something.

412
00:20:07,166 --> 00:20:09,633
And then this paragraph should be shown

413
00:20:09,633 --> 00:20:14,600
if we have /welcome/new-user
because this is relative.

414
00:20:15,466 --> 00:20:17,300
Hence now if I save this,

415
00:20:17,300 --> 00:20:19,533
now we have our paragraph here

416
00:20:19,533 --> 00:20:22,800
for /welcome/new-user.

417
00:20:22,800 --> 00:20:25,066
If I just had /welcome,

418
00:20:25,066 --> 00:20:26,833
we would only have the title

419
00:20:26,833 --> 00:20:29,166
because of this relative matching.

420
00:20:29,166 --> 00:20:31,933
And therefore, that's
also not too difficult

421
00:20:31,933 --> 00:20:34,633
to update and it's actually a good change

422
00:20:34,633 --> 00:20:38,133
because we can keep our
nested route paths shorter,

423
00:20:38,133 --> 00:20:41,466
and we don't need to
repeat the entire full path

424
00:20:41,466 --> 00:20:42,500
all the time.

425
00:20:42,500 --> 00:20:45,233
Instead, we can focus on the path elements

426
00:20:45,233 --> 00:20:48,266
that do differ and that are relevant

427
00:20:48,266 --> 00:20:50,100
for identifying this route.

428
00:20:51,966 --> 00:20:55,166
As a side note, if you had a link in here,

429
00:20:55,166 --> 00:21:00,166
then the to prop here
would also be relative.

430
00:21:00,600 --> 00:21:04,066
So in the past with
React Router version 5,

431
00:21:04,066 --> 00:21:08,133
you would have to write
welcome/new-user here

432
00:21:08,133 --> 00:21:11,266
if you wanted to load this route

433
00:21:11,266 --> 00:21:14,666
and then here you would
write your link like this

434
00:21:14,666 --> 00:21:16,700
with version 5.

435
00:21:16,700 --> 00:21:20,966
With version 6, since this
is a link inside a component

436
00:21:20,966 --> 00:21:23,866
that already is loaded through a route,

437
00:21:23,866 --> 00:21:25,433
through this route here,

438
00:21:25,433 --> 00:21:29,100
this changes and that's relative as well.

439
00:21:29,100 --> 00:21:32,400
So links and routes are relative

440
00:21:32,400 --> 00:21:35,666
if they are loaded inside of a component

441
00:21:35,666 --> 00:21:38,666
that is already loaded
because of another route.

442
00:21:38,666 --> 00:21:42,300
So if you're in a nested route, so to say.

443
00:21:42,300 --> 00:21:44,966
So therefore, that's how
you could create such a link

444
00:21:44,966 --> 00:21:47,466
and hence, new-user, this link works

445
00:21:47,466 --> 00:21:49,566
as you would expect it to work.

446
00:21:49,566 --> 00:21:52,800
That's also something worth noting.

447
00:21:52,800 --> 00:21:56,200
Now, with all the changes
I covered up to this point,

448
00:21:56,200 --> 00:22:00,100
I already did cover pretty
much all important changes

449
00:22:00,100 --> 00:22:01,300
you should be aware of.

450
00:22:01,300 --> 00:22:02,266
And you hopefully see

451
00:22:02,266 --> 00:22:05,666
that upgrading really isn't too difficult.

452
00:22:05,666 --> 00:22:09,166
There is another important
change and pattern

453
00:22:09,166 --> 00:22:11,866
that I wanna explore
together with you though.

454
00:22:11,866 --> 00:22:15,500
We can define nested
routes as we do it here,

455
00:22:15,500 --> 00:22:17,733
and there's nothing wrong with it

456
00:22:17,733 --> 00:22:21,666
but you could also write
this here differently.

457
00:22:21,666 --> 00:22:24,833
Instead of defining your
routes in the component

458
00:22:24,833 --> 00:22:28,366
where you want to load
that nested route content,

459
00:22:28,366 --> 00:22:31,466
you could also go for
a different approach.

460
00:22:31,466 --> 00:22:35,866
You could cut this route
here from Welcome.js,

461
00:22:35,866 --> 00:22:38,566
and remove this Routes wrapper

462
00:22:38,566 --> 00:22:41,033
and remove these imports therefore,

463
00:22:41,033 --> 00:22:45,433
and go to your main route
definition file, the App.js file

464
00:22:45,433 --> 00:22:48,300
with the App component in this case.

465
00:22:48,300 --> 00:22:53,033
And then you could also define
nested routes right here

466
00:22:53,033 --> 00:22:54,700
in one and the same place.

467
00:22:54,700 --> 00:22:56,600
So here for the Welcome component

468
00:22:56,600 --> 00:22:59,266
where we wanna have a nested route,

469
00:22:59,266 --> 00:23:01,566
we can now actually use opening

470
00:23:01,566 --> 00:23:04,266
and closing route component tags,

471
00:23:04,266 --> 00:23:06,200
and put our nested routes

472
00:23:06,200 --> 00:23:10,100
between those opening and
closing tags as children.

473
00:23:10,100 --> 00:23:13,566
And that's also the reason why
we have this new element prop

474
00:23:13,566 --> 00:23:16,633
where we point at the
to below that component

475
00:23:16,633 --> 00:23:19,533
because the children
of the route component,

476
00:23:19,533 --> 00:23:24,266
if we have any, are no longer
the to below that components

477
00:23:24,266 --> 00:23:27,533
but instead, possible nested routes.

478
00:23:27,533 --> 00:23:30,833
And, of course, not every
route will have a nested route.

479
00:23:30,833 --> 00:23:32,266
Here in this example,

480
00:23:32,266 --> 00:23:34,866
most routes don't have a nested route

481
00:23:34,866 --> 00:23:36,666
but if you do have a nested route,

482
00:23:36,666 --> 00:23:37,966
as we have it here,

483
00:23:37,966 --> 00:23:40,733
then the advantage of
defining it like this

484
00:23:40,733 --> 00:23:44,866
is that you have all your
route definitions in one place.

485
00:23:44,866 --> 00:23:49,033
And it can simply be easier
to see all supported routes

486
00:23:49,033 --> 00:23:51,300
and to work on this application

487
00:23:51,300 --> 00:23:54,666
if you have all your route
definitions in one place

488
00:23:54,666 --> 00:23:57,833
instead of spreading them
across multiple components

489
00:23:57,833 --> 00:24:02,366
as you did have to do it
with React Router version 5.

490
00:24:02,366 --> 00:24:04,166
That's where you could also define

491
00:24:04,166 --> 00:24:06,766
your nested route like this here.

492
00:24:06,766 --> 00:24:10,333
And what I explained about the
path and so on still applies.

493
00:24:10,333 --> 00:24:12,866
We still have path=new-user here

494
00:24:12,866 --> 00:24:15,466
because it's nested inside
of this welcome route

495
00:24:15,466 --> 00:24:20,133
and hence, this will actually
be /welcome/new-user.

496
00:24:21,066 --> 00:24:23,233
Now, if you use this pattern though,

497
00:24:23,233 --> 00:24:25,566
you have to tell React Router

498
00:24:25,566 --> 00:24:30,066
where this nested content
should be inserted into the DOM

499
00:24:30,066 --> 00:24:33,866
because it was clear when
we had the route definition

500
00:24:33,866 --> 00:24:35,400
in the nested component,

501
00:24:35,400 --> 00:24:38,533
now that we have the route
definition in App.js,

502
00:24:38,533 --> 00:24:41,033
it's not clear where exactly

503
00:24:41,033 --> 00:24:44,133
in Welcome.js this
paragraph should be added.

504
00:24:44,133 --> 00:24:47,000
Should it be added here?

505
00:24:47,000 --> 00:24:51,333
Should it be added here after the link?

506
00:24:51,333 --> 00:24:53,866
How would React Router know?

507
00:24:53,866 --> 00:24:55,866
To let React Router know

508
00:24:55,866 --> 00:24:58,600
where that nested content
should be inserted,

509
00:24:58,600 --> 00:25:00,266
there is another new component,

510
00:25:00,266 --> 00:25:03,466
which you can import
from react-router-dom.

511
00:25:03,466 --> 00:25:05,666
And that's the Outlet component.

512
00:25:06,766 --> 00:25:08,666
You can add it like this,

513
00:25:08,666 --> 00:25:12,633
and this simply is a
placeholder telling React Router

514
00:25:12,633 --> 00:25:16,066
where nested content, nested route content

515
00:25:16,066 --> 00:25:17,333
should be inserted.

516
00:25:18,200 --> 00:25:20,566
So we can add this here in Welcome.

517
00:25:20,566 --> 00:25:23,133
And with our nested route definition here,

518
00:25:23,133 --> 00:25:26,733
this, therefore, will still
work as it did before.

519
00:25:26,733 --> 00:25:28,533
You see I can visit the welcome page

520
00:25:28,533 --> 00:25:30,466
with just /welcome,

521
00:25:30,466 --> 00:25:33,166
and I don't see the nested paragraph.

522
00:25:33,166 --> 00:25:35,833
But if I click this link, I do see it.

523
00:25:35,833 --> 00:25:39,900
And this is an alternative
to defining nested routes

524
00:25:39,900 --> 00:25:41,700
inside of other components.

525
00:25:41,700 --> 00:25:43,400
You could still do that,

526
00:25:43,400 --> 00:25:45,466
as you saw it a couple of minutes ago

527
00:25:45,466 --> 00:25:48,566
but you can also go for
this Outlet approach

528
00:25:48,566 --> 00:25:50,333
with all your routes defined

529
00:25:50,333 --> 00:25:52,166
in one central place,

530
00:25:52,166 --> 00:25:55,333
which might make your
life a little bit easier.

531
00:25:55,333 --> 00:25:58,400
It's up to you which approach you prefer.

532
00:25:59,333 --> 00:26:02,466
Now, to conclude these
updating instructions,

533
00:26:02,466 --> 00:26:06,833
there are two last notes I wanna make.

534
00:26:06,833 --> 00:26:10,500
The first note is about
imperative navigation,

535
00:26:10,500 --> 00:26:13,933
instead of having links
with which you navigate.

536
00:26:13,933 --> 00:26:15,433
Sometimes you want to navigate

537
00:26:15,433 --> 00:26:17,633
when a certain action finishes,

538
00:26:17,633 --> 00:26:19,166
when a button was clicked,

539
00:26:19,166 --> 00:26:21,600
when an HTTP request was sent.

540
00:26:22,466 --> 00:26:24,966
And with React Router version 5,

541
00:26:24,966 --> 00:26:29,233
you could navigate by
using the useHistory hook,

542
00:26:29,233 --> 00:26:34,233
and you could then execute
this hook in your component,

543
00:26:34,266 --> 00:26:37,266
and that would give you a history object.

544
00:26:37,266 --> 00:26:39,766
And then on this history object,

545
00:26:39,766 --> 00:26:42,433
you could push a new route

546
00:26:42,433 --> 00:26:46,433
or replace a route to redirect.

547
00:26:46,433 --> 00:26:49,933
That's the version 5 syntax.

548
00:26:49,933 --> 00:26:54,066
With version 6, useHistory
doesn't exist anymore.

549
00:26:54,066 --> 00:26:58,666
Instead now, we have a useNavigate hook.

550
00:26:59,533 --> 00:27:04,000
This gives us a navigate
object and function

551
00:27:04,000 --> 00:27:06,900
if we execute useNavigate,

552
00:27:06,900 --> 00:27:10,400
and this navigate function can be executed

553
00:27:10,400 --> 00:27:12,866
to navigate somewhere else.

554
00:27:12,866 --> 00:27:16,800
For example, if we would want
to programmatically navigate

555
00:27:16,800 --> 00:27:20,900
to /welcome, this is how we could do it.

556
00:27:20,900 --> 00:27:23,000
And, of course, we would not do that right

557
00:27:23,000 --> 00:27:24,866
in a component like this typically.

558
00:27:24,866 --> 00:27:28,066
Instead, we would do
that in a useEffect hook

559
00:27:28,066 --> 00:27:30,200
or when an HTTP request finished

560
00:27:30,200 --> 00:27:31,933
or anywhere else.

561
00:27:31,933 --> 00:27:35,200
But that's how you could
navigate programmatically.

562
00:27:35,200 --> 00:27:36,833
If you want to redirect,

563
00:27:36,833 --> 00:27:38,700
you can pass a second argument,

564
00:27:38,700 --> 00:27:41,066
which is an object with some options

565
00:27:41,066 --> 00:27:43,966
and there you could set replace to true,

566
00:27:43,966 --> 00:27:47,600
which will replace the current
route with the new one,

567
00:27:47,600 --> 00:27:50,600
which will redirect instead
of pushing the new route

568
00:27:50,600 --> 00:27:52,900
onto the navigation stack.

569
00:27:52,900 --> 00:27:57,000
Now, besides passing a
path here to navigate,

570
00:27:57,000 --> 00:28:00,033
you can also pass in numbers like -1

571
00:28:00,033 --> 00:28:03,066
to, for example, go back
to the previous page

572
00:28:03,066 --> 00:28:07,200
or -2 to go to the page
before the previous page.

573
00:28:07,200 --> 00:28:09,466
Or one to go forward again.

574
00:28:09,466 --> 00:28:12,666
So forward and backward
navigation is also possible

575
00:28:12,666 --> 00:28:14,266
with this navigate function.

576
00:28:14,266 --> 00:28:16,733
You simply pass numbers to it

577
00:28:16,733 --> 00:28:18,366
that tell React Router

578
00:28:18,366 --> 00:28:22,600
by how many pages you wanna
go forward or backward.

579
00:28:22,600 --> 00:28:25,733
So that's programmatic
or imperative navigation

580
00:28:25,733 --> 00:28:28,000
with React Router version 6.

581
00:28:28,966 --> 00:28:29,933
Now, as a last note,

582
00:28:29,933 --> 00:28:31,933
I wanna talk about the prompt component,

583
00:28:31,933 --> 00:28:35,433
which is provided by
React Router version 5.

584
00:28:35,433 --> 00:28:36,733
You could use this component

585
00:28:36,733 --> 00:28:39,633
to prevent accidentally leaving a page

586
00:28:39,633 --> 00:28:43,033
if you have unsaved changes, for example.

587
00:28:43,033 --> 00:28:45,133
In React Router version 6,

588
00:28:45,133 --> 00:28:47,066
at least at this point of time

589
00:28:47,066 --> 00:28:49,800
when React Router version 6 was released,

590
00:28:49,800 --> 00:28:52,266
this component does not exist.

591
00:28:52,266 --> 00:28:54,366
So if you wanna prevent navigation

592
00:28:54,366 --> 00:28:56,800
in case of unsaved changes,

593
00:28:56,800 --> 00:29:01,200
you have to implement your
own workaround for the moment.

594
00:29:01,200 --> 00:29:03,733
So for this reason, you might wanna stick

595
00:29:03,733 --> 00:29:07,166
to version 5 if this is
a super important feature

596
00:29:07,166 --> 00:29:09,933
of your application,
and you're not willing

597
00:29:09,933 --> 00:29:12,100
to come up with your own logic

598
00:29:12,100 --> 00:29:15,066
on how you could prevent navigation.

599
00:29:15,066 --> 00:29:18,166
This component will probably
come back in the future

600
00:29:18,166 --> 00:29:20,066
as it sounds but at the moment,

601
00:29:20,066 --> 00:29:22,066
it's not part of React Router.

602
00:29:22,066 --> 00:29:24,800
And that's just something to note.

603
00:29:24,800 --> 00:29:28,833
But with that, that's it
for this upgrade video

604
00:29:28,833 --> 00:29:30,533
or these upgrade instructions

605
00:29:30,533 --> 00:29:32,333
and I hope this was helpful

606
00:29:32,333 --> 00:29:34,133
for understanding what changed,

607
00:29:34,133 --> 00:29:35,533
and what this means for you,

608
00:29:35,533 --> 00:29:38,466
and how you can update your project.

609
00:29:38,466 --> 00:29:42,600
Attached, you also find a
more complex project updated

610
00:29:42,600 --> 00:29:44,466
to React Router version six,

611
00:29:44,466 --> 00:29:48,466
the final snapshot of our
course section project here.

612
00:29:48,466 --> 00:29:51,866
And that should then also help you explore

613
00:29:51,866 --> 00:29:54,333
and practice how updating works

614
00:29:54,333 --> 00:29:57,000
and how React Router version 6 works.

