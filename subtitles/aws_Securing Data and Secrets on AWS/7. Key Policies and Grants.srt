1
00:00:01,310 --> 00:00:04,590
I want to wrap up our discussion of KMS by looking at key

2
00:00:04,590 --> 00:00:07,590
policies and grants in a little more detail.

3
00:00:07,590 --> 00:00:10,470
It's important for the exam that you be able to look at the JSON

4
00:00:10,470 --> 00:00:13,820
document for a key policy and be able to read it,

5
00:00:13,820 --> 00:00:19,040
interpret it, and understand exactly what it is doing.

6
00:00:19,040 --> 00:00:21,820
When we created our CMK earlier in this module,

7
00:00:21,820 --> 00:00:25,520
we got to select which users and roles were key administrators,

8
00:00:25,520 --> 00:00:27,010
as well as the users, roles,

9
00:00:27,010 --> 00:00:31,800
and AWS accounts that have access to use the key for encryption and decryption.

10
00:00:31,800 --> 00:00:34,360
And all of these selections were reflected in the default

11
00:00:34,360 --> 00:00:36,940
key policy that was created for the key.

12
00:00:36,940 --> 00:00:39,340
So let's look at this key policy a little more in depth,

13
00:00:39,340 --> 00:00:42,430
and then we'll look at a few other key policies and walk through how

14
00:00:42,430 --> 00:00:45,240
they are structured and exactly what they're doing.

15
00:00:45,240 --> 00:00:47,850
So here again is the default key policy.

16
00:00:47,850 --> 00:00:52,400
And as you can see, it's a JSON document that consists of an array of statements.

17
00:00:52,400 --> 00:00:54,750
And to make these a little easier to go through,

18
00:00:54,750 --> 00:00:56,890
I've broken them down into separate tabs that we'll

19
00:00:56,890 --> 00:00:59,540
look at in this text editor together.

20
00:00:59,540 --> 00:01:02,940
And when we decipher these policies, we want to look at three things,

21
00:01:02,940 --> 00:01:07,340
the effect, the action, and the resource.

22
00:01:07,340 --> 00:01:10,830
So this first one here says Enable IAM User Permissions.

23
00:01:10,830 --> 00:01:14,630
And what it's doing is allowing, so that's the effect,

24
00:01:14,630 --> 00:01:18,080
the action of all operations within KMS,

25
00:01:18,080 --> 00:01:21,590
so that's the asterisk there, on all resources,

26
00:01:21,590 --> 00:01:24,020
so again you see the asterisk.

27
00:01:24,020 --> 00:01:26,640
And this applies to the root account within our AWS

28
00:01:26,640 --> 00:01:29,000
account with this number here.

29
00:01:29,000 --> 00:01:32,370
So this statement gives the root account full access to this key,

30
00:01:32,370 --> 00:01:35,830
which is important because no matter what else we do with permissions here,

31
00:01:35,830 --> 00:01:39,870
we will always have the ability to use our root account to get access to this

32
00:01:39,870 --> 00:01:44,800
key and then use IAM policies to grant access to other users,

33
00:01:44,800 --> 00:01:48,740
roles, and accounts to be able to also access this key.

34
00:01:48,740 --> 00:01:50,770
And although it looks like this statement is only

35
00:01:50,770 --> 00:01:52,900
allowing access to the root account,

36
00:01:52,900 --> 00:01:57,200
it does also mean that other IAM users and roles in the account might have

37
00:01:57,200 --> 00:02:01,790
access to the CMK even though they don't show up directly here.

38
00:02:01,790 --> 00:02:04,080
Now this next statement is granting administrative

39
00:02:04,080 --> 00:02:08,900
access to our AWS course account, and you see again the effect of allow,

40
00:02:08,900 --> 00:02:13,790
the action of this list of administrative operations within KMS,

41
00:02:13,790 --> 00:02:17,250
so things like create, update, revoke, disable,

42
00:02:17,250 --> 00:02:21,840
and the asterisk here again denoting all resources.

43
00:02:21,840 --> 00:02:25,040
The next statement is for the key usage permissions where

44
00:02:25,040 --> 00:02:27,980
again we just chose the AWS course account.

45
00:02:27,980 --> 00:02:30,210
But here again, the effect is allow.

46
00:02:30,210 --> 00:02:33,040
The list of actions this time are just the actions of actually

47
00:02:33,040 --> 00:02:36,610
using the key to encrypt and decrypt data and,

48
00:02:36,610 --> 00:02:39,490
importantly, to generate data keys as well.

49
00:02:39,490 --> 00:02:40,500
And as you'll remember,

50
00:02:40,500 --> 00:02:43,420
generating data keys here is the basis of envelope

51
00:02:43,420 --> 00:02:45,630
encryption like we discussed earlier.

52
00:02:45,630 --> 00:02:49,040
And again, this applies to all resources.

53
00:02:49,040 --> 00:02:52,660
Now here's how instead of a user being specified as a principal,

54
00:02:52,660 --> 00:02:55,100
we can actually give these permissions to any user

55
00:02:55,100 --> 00:02:58,620
with the IAM role awscourserole.

56
00:02:58,620 --> 00:03:01,770
So this could apply to any user who has this role.

57
00:03:01,770 --> 00:03:05,540
And IAM best practice is always to use roles whenever possible.

58
00:03:05,540 --> 00:03:07,520
So this is a good example of doing that.

59
00:03:07,520 --> 00:03:11,100
And in this example, we're allowing access to a user,

60
00:03:11,100 --> 00:03:14,640
a role, and another AWS account.

61
00:03:14,640 --> 00:03:18,660
Now we have this statement allowing attachment of persistent resources.

62
00:03:18,660 --> 00:03:22,690
So what we mean by that is the ability to create and revoke grants,

63
00:03:22,690 --> 00:03:25,290
which allow you to programmatically allow access to

64
00:03:25,290 --> 00:03:28,040
your CMK to other principles.

65
00:03:28,040 --> 00:03:30,420
So in this case again, the effect is allow,

66
00:03:30,420 --> 00:03:33,440
the list of actions this time is creating,

67
00:03:33,440 --> 00:03:34,140
listing,

68
00:03:34,140 --> 00:03:39,540
and revoking grants on all resources with the condition that the

69
00:03:39,540 --> 00:03:43,270
grant is for an AWS resource that uses grants.

70
00:03:43,270 --> 00:03:45,110
So notice this condition here.

71
00:03:45,110 --> 00:03:48,540
It's pretty straightforward to read and understand what this is saying,

72
00:03:48,540 --> 00:03:52,720
but just know that you can always attach conditions to these policies.

73
00:03:52,720 --> 00:03:55,610
Just like we used a condition in the S3 bucket policy

74
00:03:55,610 --> 00:03:57,480
to enforce encryption in transit,

75
00:03:57,480 --> 00:04:02,040
we can always use conditions in conjunction with our policies.

76
00:04:02,040 --> 00:04:04,350
So grants are especially useful when you need to

77
00:04:04,350 --> 00:04:07,300
grant temporary access to a CMK,

78
00:04:07,300 --> 00:04:10,490
and this is usually done programmatically in code.

79
00:04:10,490 --> 00:04:14,440
You can just call CreateGrant, specify the CMK,

80
00:04:14,440 --> 00:04:17,200
the principal to which you are granting access and the

81
00:04:17,200 --> 00:04:20,120
allowed operation or set of operations.

82
00:04:20,120 --> 00:04:24,640
And when you're done, you can call RevokeGrant, and the access goes away.

83
00:04:24,640 --> 00:04:28,480
And finally, when it comes to allowing access to AWS services,

84
00:04:28,480 --> 00:04:32,560
we can actually be even more granular than what we've seen so far using

85
00:04:32,560 --> 00:04:37,100
what's called a KMS via service condition to evaluate requests coming

86
00:04:37,100 --> 00:04:40,970
via a specific AWS service or services.

87
00:04:40,970 --> 00:04:43,660
So here you see an example where the effect is deny,

88
00:04:43,660 --> 00:04:47,720
so notice we can allow or deny access in a policy document.

89
00:04:47,720 --> 00:04:52,440
And in this case, we are denying access to my AWS course user,

90
00:04:52,440 --> 00:04:56,530
but only when the request attempts to use my CMK to perform an

91
00:04:56,530 --> 00:05:00,230
encrypt operation via the EC2 service and,

92
00:05:00,230 --> 00:05:04,720
even more specifically, only in the us‑east‑1 region.

93
00:05:04,720 --> 00:05:07,000
So hopefully these examples have gotten you a little more

94
00:05:07,000 --> 00:05:10,240
comfortable reading and interpreting key policies.

95
00:05:10,240 --> 00:05:14,070
Remember to always look for the effect, the action, and the resource.

96
00:05:14,070 --> 00:05:18,180
Then determine if there any conditions tied to the statement that use via

97
00:05:18,180 --> 00:05:22,140
service to restrict access to a specific service and region.

98
00:05:22,140 --> 00:05:23,720
You'll need to do this on the exam,

99
00:05:23,720 --> 00:05:26,600
and the JSON can look a little complicated at first.

100
00:05:26,600 --> 00:05:27,520
But if you break it down,

101
00:05:27,520 --> 00:05:33,000
I'm confident that you'll be able to answer any questions about key policies and grants with ease.

