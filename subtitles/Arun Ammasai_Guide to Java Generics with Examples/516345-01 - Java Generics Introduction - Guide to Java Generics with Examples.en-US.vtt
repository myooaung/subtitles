WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.960
Hello everyone, Welcome to George entities in this entire course,

00:00:03.960 --> 00:00:07.260
especially designed for and to learn what is generics and

00:00:07.260 --> 00:00:10.965
how to use them and where to use them, right?

00:00:10.965 --> 00:00:15.090
So genetics is one of the important topics which we need to know ASA,

00:00:15.090 --> 00:00:17.325
experienced developer in Java,

00:00:17.325 --> 00:00:19.559
it's okay if you're not out of it generates.

00:00:19.559 --> 00:00:22.425
But the more experience you're going to gain,

00:00:22.425 --> 00:00:24.765
you need to know about generics.

00:00:24.765 --> 00:00:27.195
Because the moment you start learning genetics,

00:00:27.195 --> 00:00:33.060
you'll be much more comfortable while learning the challenges in Patton's.

00:00:33.060 --> 00:00:35.115
Okay, so let me show you something.

00:00:35.115 --> 00:00:37.830
So in your project or in your programs,

00:00:37.830 --> 00:00:41.155
you might have seen these kind of strange things.

00:00:41.155 --> 00:00:45.560
So in the beginning we might wonder what are those things?

00:00:45.560 --> 00:00:48.455
So these things called asset Java Generics.

00:00:48.455 --> 00:00:51.410
So how do you tell these are all genetics?

00:00:51.410 --> 00:00:55.850
Because in Java, if you see somewhere the less than and greater

00:00:55.850 --> 00:01:00.410
than symbol in between that that'll be something that is called as a Generics.

00:01:00.410 --> 00:01:03.725
Basically that a less than and greater than symbol there

00:01:03.725 --> 00:01:07.145
called asset diamond operator. So what does it mean?

00:01:07.145 --> 00:01:11.660
So whenever you find some diamond operator with some strange letter in it,

00:01:11.660 --> 00:01:13.730
which is a generates.

00:01:13.730 --> 00:01:18.410
So in Java we have a generic methods and genetic classes.

00:01:18.410 --> 00:01:22.715
And we're going to talk about how to create a generic class and how to use them.

00:01:22.715 --> 00:01:26.720
How can I create a generic method and how can I use it?

00:01:26.720 --> 00:01:32.210
So before that, let me tell you what are the course content.

00:01:32.210 --> 00:01:34.580
So in this course we're going to talk about what is

00:01:34.580 --> 00:01:38.885
generics and then where do we need them.

00:01:38.885 --> 00:01:42.425
And then we'll talk about arrays and collection.

00:01:42.425 --> 00:01:45.380
We moved from our data collection.

00:01:45.380 --> 00:01:49.925
So that must be some reason why we moved from a recent collections, right?

00:01:49.925 --> 00:01:53.465
So what is not there and arrays and what is the available collection.

00:01:53.465 --> 00:01:56.000
So after that, we moved to generally

00:01:56.000 --> 00:01:58.745
extended NCI has been introduced in Java 5 version, right?

00:01:58.745 --> 00:02:03.410
So net is something missing in a recent collections and which is available in generics.

00:02:03.410 --> 00:02:05.540
So we need to know why.

00:02:05.540 --> 00:02:10.505
And not only that, we're gonna talk about each and every single topic

00:02:10.505 --> 00:02:15.005
about degenerate with the proper as simple examples.

00:02:15.005 --> 00:02:16.760
So in order to understand the topic,

00:02:16.760 --> 00:02:19.940
we need to have a proper example which is easily understandable.

00:02:19.940 --> 00:02:21.380
Let's not waste time.

00:02:21.380 --> 00:02:24.810
Let's directly jump into topic and we'll start coding.
