WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.115
Hello everyone, Welcome back.

00:00:02.115 --> 00:00:06.795
So we discussed a simple generic class if there's some property example, right?

00:00:06.795 --> 00:00:12.150
But here you just take a look at the after the January class name we are

00:00:12.150 --> 00:00:17.610
providing the type of the parameter, type parameter.

00:00:17.610 --> 00:00:21.690
So here it's t and the second diagram it's t

00:00:21.690 --> 00:00:26.115
comma S. So so is there any naming convention for that?

00:00:26.115 --> 00:00:28.995
Yes, we do. So as I said earlier,

00:00:28.995 --> 00:00:31.680
you can give any name I provided T here and they

00:00:31.680 --> 00:00:34.830
provide a program description and you can do whatever you want.

00:00:34.830 --> 00:00:39.705
But what are the proper names we can have while you're creating a generic class.

00:00:39.705 --> 00:00:42.370
So let me show you that.

00:00:43.180 --> 00:00:48.350
So there are a lot of naming conventions in genetics.

00:00:48.350 --> 00:00:50.570
So for example, when a gradient diamond operator,

00:00:50.570 --> 00:00:52.850
if diploids IE as a letter,

00:00:52.850 --> 00:00:55.760
which means the type is going to come over there.

00:00:55.760 --> 00:00:58.580
Essa collection of an element or a collection.

00:00:58.580 --> 00:01:01.250
Okay, So if you know that in

00:01:01.250 --> 00:01:04.025
that particular January class is going to be accepted collections,

00:01:04.025 --> 00:01:05.600
which means you can grow it E.

00:01:05.600 --> 00:01:08.330
So if somebody else is looking at your code and if

00:01:08.330 --> 00:01:11.120
you're there seeing generic class that diamond operator E,

00:01:11.120 --> 00:01:15.455
which means they know that they're trying to pass some collection here.

00:01:15.455 --> 00:01:17.390
But it's not like you have to use.

00:01:17.390 --> 00:01:18.650
You can use any of them.

00:01:18.650 --> 00:01:20.480
It is just a standards.

00:01:20.480 --> 00:01:23.105
Then you can prove it K as well.

00:01:23.105 --> 00:01:26.120
So for example, if you're creating a class which will

00:01:26.120 --> 00:01:29.060
create a key and a HashMap or a key and a value.

00:01:29.060 --> 00:01:33.110
But you can use k as the key and V as a value,

00:01:33.110 --> 00:01:36.050
which means January class within the diamond operator,

00:01:36.050 --> 00:01:37.370
you can use K Command V,

00:01:37.370 --> 00:01:42.200
which means a generic class with multiple parameters, right?

00:01:42.200 --> 00:01:44.675
And then when you can prove it, n,

00:01:44.675 --> 00:01:47.765
So n means it is represents the number.

00:01:47.765 --> 00:01:51.290
So if you're creating a generic class with the diamond operator n,

00:01:51.290 --> 00:01:56.435
that particular generic class which always acts so number as a generics.

00:01:56.435 --> 00:02:00.245
So which number means it can accept integer float and

00:02:00.245 --> 00:02:04.760
different types of number types like integer,

00:02:04.760 --> 00:02:10.260
short and long, double float everything.

00:02:12.430 --> 00:02:16.940
And the next four points,

00:02:16.940 --> 00:02:22.040
t SUV their own type parameters and would remain with a parameter.

00:02:22.040 --> 00:02:24.020
Okay, so because the a represents collections,

00:02:24.020 --> 00:02:25.610
k represents the key B,

00:02:25.610 --> 00:02:28.220
the present value and end offense n numbers, right?

00:02:28.220 --> 00:02:30.830
So the other items like the normal D,

00:02:30.830 --> 00:02:32.255
D was a different kind of DDoS, right?

00:02:32.255 --> 00:02:35.105
You are creating in January class test and you're providing,

00:02:35.105 --> 00:02:36.920
so as I mentioned earlier,

00:02:36.920 --> 00:02:38.735
is generally glass container,

00:02:38.735 --> 00:02:40.820
more than single parameter also.

00:02:40.820 --> 00:02:43.070
So when you have a four different kinds of parameters,

00:02:43.070 --> 00:02:46.550
for example, a test, the diamond parameter,

00:02:46.550 --> 00:02:49.340
a comma b comma c comma d. So we

00:02:49.340 --> 00:02:52.250
cannot use a gum and become a c comma d still you can use it,

00:02:52.250 --> 00:02:53.870
but that is not the standards.

00:02:53.870 --> 00:02:56.810
So when you have multiple parameters, if you wanted to,

00:02:56.810 --> 00:03:01.910
but I'm into the unit to use P and S. And in case if you have a tree, you can use DSU.

00:03:01.910 --> 00:03:03.635
And if you have four,

00:03:03.635 --> 00:03:06.170
then you can go for the SUV because all

00:03:06.170 --> 00:03:09.125
four of them on type parameters because we don't know the type.

00:03:09.125 --> 00:03:12.080
So there is a generic type, right?

00:03:12.080 --> 00:03:17.670
So I'm gonna give you a simple example how this can be done in the next video.
