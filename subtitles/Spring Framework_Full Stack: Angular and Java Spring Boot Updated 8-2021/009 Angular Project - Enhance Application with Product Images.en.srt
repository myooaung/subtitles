1
00:00:01,290 --> 00:00:03,250
<v Instructor>All righty, so we're almost done.</v>

2
00:00:03,250 --> 00:00:05,260
So our final step here is step six

3
00:00:05,260 --> 00:00:08,883
of enhancing our application with product images.

4
00:00:14,400 --> 00:00:17,350
All righty so we currently have those placeholder images.

5
00:00:17,350 --> 00:00:21,423
We want to replace those with some nice, pretty images.

6
00:00:25,020 --> 00:00:27,460
And one item here, be sure to stop your app

7
00:00:27,460 --> 00:00:31,003
since we're adding new images to the assets directory.

8
00:00:40,470 --> 00:00:42,130
And we're going to run a database script

9
00:00:42,130 --> 00:00:44,130
that has new product information.

10
00:00:44,130 --> 00:00:47,003
So go ahead and start up MySQL Workbench.

11
00:00:51,210 --> 00:00:53,610
And then let's go ahead and open up that script.

12
00:00:56,580 --> 00:00:58,300
And this is in that starter-files

13
00:00:58,300 --> 00:01:00,313
for ecommerce-project-release-2.0.

14
00:01:04,660 --> 00:01:06,710
It's in the db-scripts directory,

15
00:01:06,710 --> 00:01:09,133
refresh-database-with-100-products.

16
00:01:22,690 --> 00:01:24,700
So this inserts our different categories

17
00:01:24,700 --> 00:01:27,440
and also products for those different categories,

18
00:01:27,440 --> 00:01:31,133
books, mouse pads, coffee mugs, luggage tags.

19
00:01:32,430 --> 00:01:34,180
Let's go ahead and run that script.

20
00:01:35,670 --> 00:01:37,683
Just do a refresh over here on the side.

21
00:01:39,840 --> 00:01:42,140
And then just do a query on our product table.

22
00:01:46,020 --> 00:01:47,030
And there we go,

23
00:01:47,030 --> 00:01:49,160
so this is all the new information here.

24
00:01:49,160 --> 00:01:51,203
So we have 100 products here.

25
00:01:52,310 --> 00:01:55,740
And then, also, here's the path to the product image.

26
00:01:55,740 --> 00:01:57,700
So assets/images/products,

27
00:01:57,700 --> 00:02:00,963
slash whatever the given product name is.

28
00:02:05,770 --> 00:02:09,370
So then, swinging back to Visual Studio Code,

29
00:02:09,370 --> 00:02:11,430
we need to put these images

30
00:02:11,430 --> 00:02:15,223
in assets/images/products.

31
00:02:18,240 --> 00:02:20,310
Right now, we simply have placeholder.

32
00:02:20,310 --> 00:02:23,760
We want to have some real product images here.

33
00:02:23,760 --> 00:02:26,670
So we can get those from the starter files.

34
00:02:26,670 --> 00:02:28,100
So there's a directory here

35
00:02:28,100 --> 00:02:31,323
called product-image-assets products.

36
00:02:33,720 --> 00:02:37,330
Copy those folders for books, mugs,

37
00:02:37,330 --> 00:02:42,330
mousepads, and luggagetags into our given Angular project.

38
00:02:44,020 --> 00:02:45,330
Your directory structure should look

39
00:02:45,330 --> 00:02:47,573
like the one I have here on the screen.

40
00:02:54,590 --> 00:02:57,190
All right, let's go ahead and start our application.

41
00:03:05,550 --> 00:03:07,860
Just swing back into our browser,

42
00:03:07,860 --> 00:03:09,463
just do a reload over here,

43
00:03:12,750 --> 00:03:15,610
and, oh yeah, this looks great!

44
00:03:15,610 --> 00:03:19,300
So notice here, we have new images for our books,

45
00:03:19,300 --> 00:03:21,150
and they're all unique, and they're all different.

46
00:03:21,150 --> 00:03:23,573
No more placeholder stuff, okay?

47
00:03:26,080 --> 00:03:28,230
But now, Coffee Mugs, Mouse Pads, and Luggage Tags,

48
00:03:28,230 --> 00:03:29,130
those aren't really working,

49
00:03:29,130 --> 00:03:30,740
'cause we haven't implemented the functionality

50
00:03:30,740 --> 00:03:31,573
for those links.

51
00:03:31,573 --> 00:03:34,373
We will do that soon in some upcoming videos.

52
00:03:36,020 --> 00:03:38,540
But at least we're getting so product data right now.

53
00:03:38,540 --> 00:03:40,660
I'm really happy about this.

54
00:03:40,660 --> 00:03:42,713
This is starting to shape up nicely.

55
00:03:46,040 --> 00:03:48,560
Now, by default, Spring Data REST only returns

56
00:03:48,560 --> 00:03:51,300
the first page of 20 items.

57
00:03:51,300 --> 00:03:54,660
So even though we have 100 products in our database,

58
00:03:54,660 --> 00:03:57,750
it's only returning the first 20.

59
00:03:57,750 --> 00:04:00,380
Now, we can do a little quick workaround here

60
00:04:00,380 --> 00:04:02,707
to modify this to tell Spring Data REST to,

61
00:04:02,707 --> 00:04:05,930
"Hey, return X number of items for us."

62
00:04:05,930 --> 00:04:07,580
And we can do that by modifying

63
00:04:07,580 --> 00:04:10,020
our product.service.ts file,

64
00:04:10,020 --> 00:04:12,430
and this is just a quick little short-term thing.

65
00:04:12,430 --> 00:04:14,370
We'll get into pagination later.

66
00:04:14,370 --> 00:04:15,590
But for right now, let's go ahead

67
00:04:15,590 --> 00:04:19,170
and make a quick mod, product.service.ts,

68
00:04:19,170 --> 00:04:21,900
and we'll simply make a small change here

69
00:04:21,900 --> 00:04:24,460
on the base URL.

70
00:04:24,460 --> 00:04:26,420
So by default, the size is 20.

71
00:04:26,420 --> 00:04:29,603
Here we'll say size equals 100.

72
00:04:31,040 --> 00:04:34,543
So we're simply changing the page size to 100 items.

73
00:04:40,460 --> 00:04:42,580
And so this automatically refreshes here

74
00:04:42,580 --> 00:04:44,390
on the Angular side,

75
00:04:44,390 --> 00:04:48,120
and then the pages are refreshed,

76
00:04:48,120 --> 00:04:50,370
and if we start to scroll down a bit,

77
00:04:50,370 --> 00:04:52,310
then we see, oh, more products.

78
00:04:52,310 --> 00:04:53,910
There's some coffee mugs.

79
00:04:53,910 --> 00:04:56,260
Looks good, looks good.

80
00:04:56,260 --> 00:04:58,653
And there's some mouse pads, good.

81
00:05:01,070 --> 00:05:02,830
And there are some luggage tags.

82
00:05:02,830 --> 00:05:05,010
This is great, so 100 products,

83
00:05:05,010 --> 00:05:08,260
so 25 products per category.

84
00:05:08,260 --> 00:05:10,100
That's what we have in our database.

85
00:05:10,100 --> 00:05:11,840
So this looks really good so far.

86
00:05:11,840 --> 00:05:12,673
I like it.

87
00:05:20,100 --> 00:05:22,690
And I'll just swing back into Vis Code,

88
00:05:22,690 --> 00:05:24,980
and I'll remove that modification.

89
00:05:24,980 --> 00:05:26,960
Right now, I'll go ahead and keep the defaults.

90
00:05:26,960 --> 00:05:28,610
We'll actually get into pagination

91
00:05:28,610 --> 00:05:29,930
in some of the upcoming videos,

92
00:05:29,930 --> 00:05:31,660
and so I wanted to kind of take that out

93
00:05:31,660 --> 00:05:34,840
just so we can follow the appropriate approach.

94
00:05:34,840 --> 00:05:35,880
But, anyway, this looks great.

95
00:05:35,880 --> 00:05:37,900
So we kind of went through our whole development process,

96
00:05:37,900 --> 00:05:39,560
we integrated our online shop,

97
00:05:39,560 --> 00:05:41,860
we have icons, we have logos,

98
00:05:41,860 --> 00:05:46,330
we have images, and this looks really, really good.

99
00:05:46,330 --> 00:05:48,350
So I'm excited, doing my happy dance.

100
00:05:48,350 --> 00:05:51,463
I'd like to say good job, my friend.

