WEBVTT
1
00:00:01.310 --> 00:00:03.450
So we only have two more steps to go.

2
00:00:03.450 --> 00:00:04.380
So in step six here,

3
00:00:04.380 --> 00:00:06.410
we're going to develop the login status component

4
00:00:06.410 --> 00:00:08.883
for the login, log out buttons.

5
00:00:25.810 --> 00:00:28.513
Just move back into my terminal window here.

6
00:00:33.890 --> 00:00:36.833
And I do this ng generate component,

7
00:00:40.300 --> 00:00:41.853
component/loginStatus.

8
00:00:47.752 --> 00:00:49.330
All right. We can kind of zoom out a bit

9
00:00:49.330 --> 00:00:51.220
and take a look at all these new files

10
00:00:51.220 --> 00:00:52.493
they just created for us.

11
00:00:53.460 --> 00:00:56.373
So here's our login status with the supporting files.

12
00:01:07.790 --> 00:01:09.600
All right. So with this, I'd like to get started

13
00:01:09.600 --> 00:01:13.223
with a login status component dot Ts file or TypeScript.

14
00:01:16.800 --> 00:01:19.293
And I'll move in and I'll define two fields.

15
00:01:21.380 --> 00:01:24.223
I'll have a field for isAuthenticated, that's a boolean.

16
00:01:28.350 --> 00:01:31.533
And also field here for the user full name as a string.

17
00:01:35.820 --> 00:01:38.570
In my construct, I'm going to inject this oktaAuthService.

18
00:01:47.290 --> 00:01:49.643
Make sure our imports are fine up top.

19
00:01:50.530 --> 00:01:51.540
Okay, that's fine.

20
00:01:51.540 --> 00:01:52.373
Good.

21
00:01:54.660 --> 00:01:57.693
And now move down here to this ngOnInit method.

22
00:01:59.500 --> 00:02:01.303
Let me kind of zoom in here for a bit.

23
00:02:05.620 --> 00:02:07.140
And so basically what I want to do here

24
00:02:07.140 --> 00:02:09.980
is subscribe to the authentication state

25
00:02:09.980 --> 00:02:12.080
for state changes on this oktaAuthService.

26
00:02:14.350 --> 00:02:16.863
So I'll have a dot subscribe.

27
00:02:24.070 --> 00:02:25.803
And so we'll get a result,

28
00:02:30.840 --> 00:02:34.023
and I simply assign this results who isAuthenticated.

29
00:02:38.020 --> 00:02:40.020
And then also what I'll do is I'll make a call

30
00:02:40.020 --> 00:02:42.620
to this method here, get user details

31
00:02:42.620 --> 00:02:44.590
because I want to get the user's name

32
00:02:44.590 --> 00:02:46.033
or the user's full name.

33
00:02:47.360 --> 00:02:49.360
So I'll go ahead and create this method.

34
00:02:54.950 --> 00:02:56.310
So I kind of move down here to the bottom.

35
00:02:56.310 --> 00:02:58.263
So here's our getUserDetails.

36
00:03:08.634 --> 00:03:10.390
So here I only want to get the user's details

37
00:03:10.390 --> 00:03:12.893
if they're actually authenticated, if that's true.

38
00:03:21.850 --> 00:03:24.530
We will fetch the logged in user details,

39
00:03:24.530 --> 00:03:26.250
the user's claims,

40
00:03:26.250 --> 00:03:30.230
the user full name is exposed as a property name.

41
00:03:30.230 --> 00:03:33.380
So here we'll have this .oktaAuthService.getuser,

42
00:03:34.550 --> 00:03:37.300
then once we get the result, we'll make the assignment.

43
00:03:42.000 --> 00:03:45.330
And so the result here, this .userFullName equals

44
00:03:45.330 --> 00:03:47.263
result dot name.

45
00:03:53.000 --> 00:03:54.610
And for this result here

46
00:03:54.610 --> 00:03:56.510
it could be in parentheses or not.

47
00:03:56.510 --> 00:03:59.360
It's totally up to you as far as syntax or recital,

48
00:03:59.360 --> 00:04:00.193
either way it will work.

49
00:04:00.193 --> 00:04:02.113
I'll just go ahead and put it in parentheses.

50
00:04:09.140 --> 00:04:11.920
Okay. And so we have one more item that we need to add here,

51
00:04:11.920 --> 00:04:13.333
a log out method.

52
00:04:15.760 --> 00:04:17.830
So let me just kind of move around here on my screen

53
00:04:17.830 --> 00:04:21.633
and get things lined up properly. Okay.

54
00:04:32.000 --> 00:04:34.450
So during the log out, we want to terminate the session

55
00:04:34.450 --> 00:04:37.020
with okta and also remove the current tokens.

56
00:04:37.020 --> 00:04:40.700
So we'll make use of this oktaAuthService.signOut

57
00:04:40.700 --> 00:04:43.650
and it'll handle all of that work for us behind the scenes.

