1
00:00:00,829 --> 00:00:02,730
<v Instructor>In this video, we'll cover step four</v>

2
00:00:02,730 --> 00:00:04,830
of generating new order history component.

3
00:00:14,770 --> 00:00:15,610
Let's go ahead and open up

4
00:00:15,610 --> 00:00:16,780
a new terminal window

5
00:00:18,910 --> 00:00:22,773
and use the angular CLI to generate this new component.

6
00:00:29,550 --> 00:00:31,300
So ng generate component

7
00:00:34,290 --> 00:00:36,583
and then components / OrderHistory.

8
00:00:48,900 --> 00:00:50,490
All right, so let's go ahead and swing over here

9
00:00:50,490 --> 00:00:52,660
to the components directory,

10
00:00:52,660 --> 00:00:53,960
and there should be a new component

11
00:00:53,960 --> 00:00:55,410
in here called order history.

12
00:00:58,140 --> 00:00:59,210
All right, looks good.

13
00:00:59,210 --> 00:01:00,043
And let's go ahead

14
00:01:00,043 --> 00:01:02,310
and open up the order history component.ts file

15
00:01:14,607 --> 00:01:16,200
All right, so the first thing I want to do here

16
00:01:16,200 --> 00:01:18,830
is define a field for OrderHistory lists,

17
00:01:18,830 --> 00:01:22,580
and it's simply an array of OrderHistory items,

18
00:01:22,580 --> 00:01:25,423
and I'll initialize this array to be an empty array.

19
00:01:29,150 --> 00:01:32,695
And let's move over here to this order of history and hmm.

20
00:01:32,695 --> 00:01:34,900
It can't give me the auto fix.

21
00:01:34,900 --> 00:01:35,840
That's interesting.

22
00:01:35,840 --> 00:01:37,710
No quick fixes available, hmm.

23
00:01:39,200 --> 00:01:41,330
I'll just go ahead and manually type it in.

24
00:01:41,330 --> 00:01:43,210
You may encounter this problem.

25
00:01:43,210 --> 00:01:45,190
You may not, your results may be different,

26
00:01:45,190 --> 00:01:47,140
but I'll just manually type it in here.

27
00:02:02,480 --> 00:02:03,390
All right, so that's how we

28
00:02:03,390 --> 00:02:04,460
just manually add the issue

29
00:02:04,460 --> 00:02:07,293
therefore importing our order history class.

30
00:02:13,110 --> 00:02:14,330
And another thing here is that I want

31
00:02:14,330 --> 00:02:18,140
to retrieve a user's email from the browser storage.

32
00:02:18,140 --> 00:02:19,840
So I simply set up a reference here

33
00:02:19,840 --> 00:02:22,990
to the web browser session storage.

34
00:02:22,990 --> 00:02:25,290
And I'll use that a little later in this code.

35
00:02:33,210 --> 00:02:34,820
I move down to my constructor here.

36
00:02:34,820 --> 00:02:37,590
And I inject the OrderHistoryService.

37
00:02:37,590 --> 00:02:38,820
That's the OrderHistoryService

38
00:02:38,820 --> 00:02:41,023
that we just created in a previous video.

39
00:02:52,570 --> 00:02:55,820
And I'm just having such great luck today.

40
00:02:55,820 --> 00:02:57,950
For some reason, the IDE is not helping me

41
00:02:57,950 --> 00:03:00,130
with some of the quick fixes, but again,

42
00:03:00,130 --> 00:03:02,020
I'll just manually enter it.

43
00:03:02,020 --> 00:03:05,563
For your situation it may be much easier, much better.

44
00:03:23,490 --> 00:03:25,870
Alrighty, so on our ngonInit method

45
00:03:25,870 --> 00:03:29,177
we'll simply call a method handleOrderHistory.

46
00:03:36,970 --> 00:03:38,380
And we'll actually define

47
00:03:38,380 --> 00:03:41,093
this method here in this same class.

48
00:03:47,380 --> 00:03:49,390
The first thing I want to do in this method here

49
00:03:49,390 --> 00:03:52,653
is read the user's email from browser storage.

50
00:04:03,010 --> 00:04:05,050
I simply make use of this JSON pause,

51
00:04:05,050 --> 00:04:05,883
storage.getItem,

52
00:04:10,537 --> 00:04:13,600
userEmail, that's the key that will store earlier

53
00:04:13,600 --> 00:04:14,940
by the login status component.

54
00:04:14,940 --> 00:04:16,650
And then we can retrieve this information.

55
00:04:16,650 --> 00:04:20,020
So this is the scenario of our angular components retrieving

56
00:04:20,020 --> 00:04:21,620
this data at a later time.

57
00:04:21,620 --> 00:04:22,943
So this is where we're at.

58
00:04:27,580 --> 00:04:29,120
Okay, great, so I have the user's emails.

59
00:04:29,120 --> 00:04:31,970
So now I can make a call to the history service

60
00:04:31,970 --> 00:04:35,520
to actually retrieve those items for

61
00:04:35,520 --> 00:04:37,623
this given user's email address.

62
00:04:43,110 --> 00:04:46,110
So I use this orderHistoryService.getOrderHistory,

63
00:04:46,110 --> 00:04:47,973
and I pass in the email.

64
00:04:56,070 --> 00:04:57,230
So it returns on observables.

65
00:04:57,230 --> 00:04:59,323
So we do our dot subscribe, of course,

66
00:05:02,880 --> 00:05:04,670
and when the data's return,

67
00:05:04,670 --> 00:05:07,370
then we simply assign the data.

68
00:05:07,370 --> 00:05:09,340
So we have this.orderHistoryList

69
00:05:09,340 --> 00:05:13,823
equals data.embedded.orders.

70
00:05:19,100 --> 00:05:21,010
So this is the data that we've actually retrieved

71
00:05:21,010 --> 00:05:24,063
from the rest API via the service.

