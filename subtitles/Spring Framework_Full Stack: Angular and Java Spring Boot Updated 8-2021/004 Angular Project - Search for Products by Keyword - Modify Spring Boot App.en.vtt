WEBVTT
1
00:00:01.230 --> 00:00:03.200
<v ->All righty, so here's our development process.</v>

2
00:00:03.200 --> 00:00:05.090
In this video, we're going to focus on step one

3
00:00:05.090 --> 00:00:06.800
of modifying the Spring Boot app.

4
00:00:06.800 --> 00:00:09.123
We're going to add that new search method.

5
00:00:11.530 --> 00:00:14.913
All righty, so swinging into my Java IDE right now,

6
00:00:17.510 --> 00:00:19.670
I'll zoom in here for a second and I'll go ahead

7
00:00:19.670 --> 00:00:21.473
and open up my repository.

8
00:00:24.750 --> 00:00:28.313
Our products, that's the ProductRepository.java,

9
00:00:30.710 --> 00:00:32.743
expand my window here for a second,

10
00:00:35.100 --> 00:00:36.770
and so what I'll do here is I'll move in

11
00:00:36.770 --> 00:00:39.003
and I'll actually add a new query method.

12
00:00:43.630 --> 00:00:46.403
So this method is findByNameContaining,

13
00:00:47.310 --> 00:00:51.120
RequestParam's coming in, that Param's going to be called name,

14
00:00:51.120 --> 00:00:54.423
and then we'll bind this to a param here, string name,

15
00:00:55.570 --> 00:00:57.983
and we give our normal, pageable information.

16
00:01:01.850 --> 00:01:03.640
Alright, so remember, behind the scenes,

17
00:01:03.640 --> 00:01:05.960
Spring's going to process this, and its going to

18
00:01:05.960 --> 00:01:08.320
make use of a query select star from Product P

19
00:01:08.320 --> 00:01:12.953
where p.name like concat, the name item coming in.

20
00:01:13.860 --> 00:01:16.263
All of that good ol' Spring magic for us.

21
00:01:20.150 --> 00:01:22.220
So let's go ahead and run this application so we

22
00:01:22.220 --> 00:01:23.570
can see a quick demo of it.

23
00:01:35.102 --> 00:01:36.740
So in my browser, I'll open up

24
00:01:36.740 --> 00:01:40.360
localhost 8080/API/products

25
00:01:40.360 --> 00:01:43.603
search find by name containing.

26
00:01:50.820 --> 00:01:53.210
And then the actual name in this example I'll use Python.

27
00:01:53.210 --> 00:01:55.310
So I'm searching for products with Python.

28
00:02:01.390 --> 00:02:03.800
So, zoom in here and this is pretty good.

29
00:02:03.800 --> 00:02:06.830
So I have a book, crash course in python.

30
00:02:06.830 --> 00:02:10.513
There's another intro to python, and so on.

31
00:02:13.400 --> 00:02:16.853
All right, lets try another search term here.

32
00:02:20.050 --> 00:02:21.433
So, beginner.

33
00:02:23.520 --> 00:02:25.400
And then scrolling over, so this is good.

34
00:02:25.400 --> 00:02:27.193
Beginners guide to SQL.

35
00:02:30.140 --> 00:02:32.290
Beginners guide to Data Science, and so on.

36
00:02:32.290 --> 00:02:34.305
So that part's working too, so this is

37
00:02:34.305 --> 00:02:36.320
pretty good so far.

38
00:02:36.320 --> 00:02:39.100
And then just one last query, just to kind of check

39
00:02:39.100 --> 00:02:39.933
things out here.

40
00:02:39.933 --> 00:02:43.100
So, data, so this should match on big data.

41
00:02:43.100 --> 00:02:45.390
And this should also match on, like, data science

42
00:02:45.390 --> 00:02:48.080
or whatever or crash course in big data,

43
00:02:48.080 --> 00:02:49.250
data science at the bottom.

44
00:02:49.250 --> 00:02:51.600
So, again, the whole containing part is working.

45
00:02:51.600 --> 00:02:54.300
So if the search term happens anywhere within the

46
00:02:54.300 --> 00:02:56.993
given product name, then it'll give us a match.

