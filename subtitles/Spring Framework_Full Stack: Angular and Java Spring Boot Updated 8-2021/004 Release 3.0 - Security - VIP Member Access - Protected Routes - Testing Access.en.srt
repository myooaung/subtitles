1
00:00:01,160 --> 00:00:02,820
<v Man>All right, so let's go ahead</v>

2
00:00:02,820 --> 00:00:05,333
and run this application and test it out.

3
00:00:09,230 --> 00:00:11,460
So let's swing over to IntelliJ

4
00:00:11,460 --> 00:00:13,090
and make sure we have our Spring Boot

5
00:00:13,090 --> 00:00:14,970
backend up and running.

6
00:00:14,970 --> 00:00:17,363
If not, let's go ahead and start it now.

7
00:00:23,730 --> 00:00:25,930
And it will swing back into Visual Studio Code

8
00:00:25,930 --> 00:00:28,580
and we'll get our Angular application up and running.

9
00:00:52,181 --> 00:00:57,181
Go and swing over to our browser and access our application.

10
00:01:02,700 --> 00:01:04,500
And so one thing that we'll notice here is that

11
00:01:04,500 --> 00:01:06,310
we have this new Member button

12
00:01:06,310 --> 00:01:08,760
on our login status component.

13
00:01:08,760 --> 00:01:11,360
And so let's go ahead and select this Member button.

14
00:01:12,590 --> 00:01:14,180
It's going to access this protected route,

15
00:01:14,180 --> 00:01:15,860
so the user is not logged in,

16
00:01:15,860 --> 00:01:18,360
so we're going to send them to the login page first.

17
00:01:20,700 --> 00:01:22,450
Let's now go ahead and login here.

18
00:01:28,780 --> 00:01:32,310
And then success, all right, so now we're logged in,

19
00:01:32,310 --> 00:01:34,570
we can now access the protected route,

20
00:01:34,570 --> 00:01:36,660
so we can see the members-only information.

21
00:01:36,660 --> 00:01:37,633
Good, I like it.

22
00:01:39,840 --> 00:01:41,500
Now this protected route is what we

23
00:01:41,500 --> 00:01:43,760
setup in our configuration, so slash members,

24
00:01:43,760 --> 00:01:46,510
we set up the appropriate configs in at app.module.ts.

25
00:01:46,510 --> 00:01:48,600
So we have the path, the component,

26
00:01:48,600 --> 00:01:52,050
and then can activate or make use of this OktaAuthGuard.

27
00:01:52,050 --> 00:01:53,710
So that's the configuration kind of

28
00:01:53,710 --> 00:01:55,223
pulling everything together.

29
00:02:00,350 --> 00:02:01,860
Now let's go ahead and play around

30
00:02:01,860 --> 00:02:03,610
with this protected route a bit.

31
00:02:03,610 --> 00:02:06,303
So let me go ahead and log out over here.

32
00:02:09,088 --> 00:02:12,710
And let me try to access the protected route directly

33
00:02:12,710 --> 00:02:14,340
while logged out,

34
00:02:14,340 --> 00:02:16,210
Okay, so I'm going to try and backdoor the system

35
00:02:16,210 --> 00:02:18,250
because I know what that URL is,

36
00:02:18,250 --> 00:02:20,460
it's localhost 4200/members.

37
00:02:20,460 --> 00:02:23,270
So let me just try and just manually enter this URL

38
00:02:23,270 --> 00:02:24,873
and see if I can access it.

39
00:02:31,480 --> 00:02:33,600
And then notice here, you're not logged in,

40
00:02:33,600 --> 00:02:35,200
so they're going to send you to the login page.

41
00:02:35,200 --> 00:02:36,830
So the protected route with the route guard

42
00:02:36,830 --> 00:02:38,370
is working as desired.

43
00:02:38,370 --> 00:02:40,750
So even if they tried to backdoor the system

44
00:02:40,750 --> 00:02:42,810
by accessing the URL directly,

45
00:02:42,810 --> 00:02:44,090
Angular will still kick-in

46
00:02:44,090 --> 00:02:46,403
and protect this route accordingly.

47
00:02:50,570 --> 00:02:52,510
Now this Members button here,

48
00:02:52,510 --> 00:02:54,660
we really should only show this button

49
00:02:54,660 --> 00:02:56,440
if the user is logged in.

50
00:02:56,440 --> 00:02:58,600
It's okay to have it here when they're not logged in,

51
00:02:58,600 --> 00:03:01,250
but let's just kind of clean this up a bit

52
00:03:01,250 --> 00:03:04,093
and only show this button if they're logged in.

53
00:03:12,410 --> 00:03:13,960
So let's just kind of move back into that

54
00:03:13,960 --> 00:03:16,583
login status component at HTML.

55
00:03:24,610 --> 00:03:26,930
And we'll put the code back that we had before.

56
00:03:26,930 --> 00:03:28,840
So I told you that we're going to remove it,

57
00:03:28,840 --> 00:03:30,680
but now let's just go ahead and add it back in here.

58
00:03:30,680 --> 00:03:33,380
So we'll only show the button for Members

59
00:03:33,380 --> 00:03:34,823
if the user is logged in.

60
00:03:35,900 --> 00:03:36,960
So I'll just kind of copy this

61
00:03:36,960 --> 00:03:39,453
ngIf isAuthenticated from before,

62
00:03:40,760 --> 00:03:42,233
and just drop it down here.

63
00:03:44,033 --> 00:03:45,690
And so, of course, right,

64
00:03:45,690 --> 00:03:48,263
only show that Member button if they're logged in.

65
00:03:54,870 --> 00:03:58,070
Alrighty, so simply save that swing back into our browser.

66
00:03:58,070 --> 00:03:59,003
That's our app.

67
00:04:04,070 --> 00:04:05,660
And then, of course, this works as desired, right,

68
00:04:05,660 --> 00:04:07,300
we only have the login button,

69
00:04:07,300 --> 00:04:09,250
we don't see anything else until they actually

70
00:04:09,250 --> 00:04:11,023
login to the application.

71
00:04:24,946 --> 00:04:26,187
And then great, so I'm logged in,

72
00:04:26,187 --> 00:04:28,970
and so now I can see the Members button

73
00:04:28,970 --> 00:04:30,040
because I'm logged in,

74
00:04:30,040 --> 00:04:31,990
based on that coding that we setup from before.

75
00:04:31,990 --> 00:04:33,900
And, again, this is all pretty good,

76
00:04:33,900 --> 00:04:35,020
you've seen a lot of the coding

77
00:04:35,020 --> 00:04:36,180
and the logic for this before

78
00:04:36,180 --> 00:04:39,440
as far as showing and hiding buttons accordingly.

79
00:04:39,440 --> 00:04:42,160
So let's go ahead and click on the Member button.

80
00:04:42,160 --> 00:04:44,990
And great, there's our Members page component.

81
00:04:44,990 --> 00:04:46,500
So this is really, really good.

82
00:04:46,500 --> 00:04:50,780
So we were able to kind of setup this VIP member-only page

83
00:04:50,780 --> 00:04:54,310
where they had to be logged in in order to access it,

84
00:04:54,310 --> 00:04:55,870
and we make use of route guards

85
00:04:55,870 --> 00:04:57,803
and also integrated the OktaAuthguard.

86
00:04:58,827 --> 00:05:01,773
So I'd like to say, good job, my friend.

