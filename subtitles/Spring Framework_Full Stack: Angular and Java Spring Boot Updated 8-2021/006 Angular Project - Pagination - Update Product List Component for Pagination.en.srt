1
00:00:01,080 --> 00:00:01,960
<v Narrator>All right, so moving along</v>

2
00:00:01,960 --> 00:00:03,320
with our development process.

3
00:00:03,320 --> 00:00:04,630
We're in step four here of

4
00:00:04,630 --> 00:00:08,240
updating our ProductListComponent to handle pagination.

5
00:00:08,240 --> 00:00:09,310
And basically, what we'll do is

6
00:00:09,310 --> 00:00:11,280
we'll make calls to that product service

7
00:00:11,280 --> 00:00:13,570
using that new method that we just created

8
00:00:13,570 --> 00:00:14,883
in the previous video.

9
00:00:27,660 --> 00:00:32,660
All right, so let's go ahead and close this one window,

10
00:00:33,000 --> 00:00:35,173
and let's open up our component,

11
00:00:37,600 --> 00:00:38,533
product-list,

12
00:00:39,450 --> 00:00:41,713
product-list.component.ts.

13
00:00:46,490 --> 00:00:48,513
Zoom out a bit and expand my window.

14
00:00:52,260 --> 00:00:53,510
All right, so just as a checkpoint,

15
00:00:53,510 --> 00:00:56,073
make sure you're in ProductListComponent.

16
00:00:59,820 --> 00:01:01,440
And I'll move in here,

17
00:01:01,440 --> 00:01:02,900
and I'll do some general housekeeping.

18
00:01:02,900 --> 00:01:05,700
I'll just go ahead and initialize some of the properties

19
00:01:05,700 --> 00:01:07,203
to have default values,

20
00:01:12,280 --> 00:01:13,490
just so everything is initialized

21
00:01:13,490 --> 00:01:15,290
and we know what we're working with.

22
00:01:24,140 --> 00:01:24,973
And now I'll go through,

23
00:01:24,973 --> 00:01:27,563
and I'll add some new properties for pagination.

24
00:01:51,943 --> 00:01:53,450
All righty, so I have these new properties here

25
00:01:53,450 --> 00:01:57,593
for page number, the page size, and also the total elements.

26
00:02:03,300 --> 00:02:05,190
So now, let's go ahead and move down

27
00:02:05,190 --> 00:02:07,333
to our handleListProducts method.

28
00:02:12,880 --> 00:02:14,660
And we'll have to do some special work here

29
00:02:14,660 --> 00:02:16,493
regarding the category id.

30
00:02:29,559 --> 00:02:32,490
So we have to check if we have a different category id

31
00:02:32,490 --> 00:02:33,880
than the previous.

32
00:02:33,880 --> 00:02:37,280
Now, note, Angular will reuse a component

33
00:02:37,280 --> 00:02:39,020
if it's currently being viewed.

34
00:02:39,020 --> 00:02:43,200
So Angular may not always create a new component every time.

35
00:02:43,200 --> 00:02:46,160
If the component is currently being viewed in the browser,

36
00:02:46,160 --> 00:02:48,380
then Angular will simply reuse that component,

37
00:02:48,380 --> 00:02:51,270
so we'll have some state from the previous call,

38
00:02:51,270 --> 00:02:54,710
so we need to kind of perform some additional operations here.

39
00:03:08,890 --> 00:03:10,560
And the reason we're adding this code

40
00:03:10,560 --> 00:03:13,590
is mainly for the page number or resetting the page number.

41
00:03:13,590 --> 00:03:17,480
So if we have a different category id than the previous,

42
00:03:17,480 --> 00:03:20,783
then we want to reset the page number back to one.

43
00:03:22,210 --> 00:03:24,833
And that's the rational for adding this code.

44
00:03:41,540 --> 00:03:43,790
So if this.previousCategoryId is not equal to

45
00:03:44,784 --> 00:03:47,284
this category id, then this.PageNumber equals one.

46
00:03:48,580 --> 00:03:51,470
Now, granted, this previousCategoryId, we don't have yet.

47
00:03:51,470 --> 00:03:53,030
Let's go ahead and declare it

48
00:03:53,030 --> 00:03:55,320
and that'll actually create this property for us

49
00:03:55,320 --> 00:03:57,030
up top in this class.

50
00:03:57,030 --> 00:03:59,350
All right, and so if we scroll to the top of this class,

51
00:03:59,350 --> 00:04:00,960
we'll see this new property

52
00:04:00,960 --> 00:04:03,270
that the IDE just created for us.

53
00:04:03,270 --> 00:04:05,980
Okay, great, there it is, previousCategoryId.

54
00:04:05,980 --> 00:04:07,480
Let's go ahead and cut this,

55
00:04:07,480 --> 00:04:10,453
and I'd like to move it up right below currentCategoryId,

56
00:04:11,340 --> 00:04:15,210
just so similar properties are in similar locations

57
00:04:15,210 --> 00:04:16,603
of the actual file.

58
00:04:20,000 --> 00:04:22,010
And then it'll also initialize it to one.

59
00:04:22,010 --> 00:04:23,820
All right, so this looks pretty good right now,

60
00:04:23,820 --> 00:04:25,763
previousCategoryId, great.

61
00:04:31,600 --> 00:04:33,070
Now, let's go ahead and move back

62
00:04:33,070 --> 00:04:35,110
to the handleListProducts method,

63
00:04:35,110 --> 00:04:36,330
and in this method,

64
00:04:36,330 --> 00:04:38,420
I'll actually keep track of that category.

65
00:04:38,420 --> 00:04:41,700
So here I'll have previousCategoryId equals

66
00:04:41,700 --> 00:04:42,600
currentCategoryId,

67
00:04:48,587 --> 00:04:50,550
and I'll also log this information,

68
00:04:50,550 --> 00:04:52,810
just so we can track this in our browser

69
00:04:52,810 --> 00:04:54,403
for debugging purposes.

70
00:05:06,110 --> 00:05:08,773
And I'll also include the page number in the log.

71
00:05:23,370 --> 00:05:26,440
So now, moving down here, as for as getting the products

72
00:05:26,440 --> 00:05:28,030
for the given category id.

73
00:05:28,030 --> 00:05:29,950
Now I simply need to call the service,

74
00:05:29,950 --> 00:05:32,237
make use of that new map that we created,

75
00:05:32,237 --> 00:05:34,237
getProductList paginate.

76
00:05:39,460 --> 00:05:42,690
And then I need to pass in those parameters.

77
00:05:42,690 --> 00:05:46,370
So I need to pass in thePageNumber, thePageSize,

78
00:05:46,370 --> 00:05:47,613
and currentCategoryId.

79
00:06:09,767 --> 00:06:11,850
And let me just clean up the tabbing here,

80
00:06:11,850 --> 00:06:14,533
so things look pretty on the screen.

81
00:06:23,115 --> 00:06:24,950
And then I'll add .subscribe

82
00:06:24,950 --> 00:06:27,580
and I'll call this.processResult.

83
00:06:27,580 --> 00:06:30,600
At the moment, we don't have processResult created yet.

84
00:06:30,600 --> 00:06:33,033
We'll actually create it shortly in this video.

85
00:06:34,640 --> 00:06:36,360
However, I just want to point out again,

86
00:06:36,360 --> 00:06:38,680
as a reminder on thePageNumber.

87
00:06:38,680 --> 00:06:41,470
So here we have thePageNumber minus one.

88
00:06:41,470 --> 00:06:43,630
Again, the reason we're doing this is because

89
00:06:43,630 --> 00:06:45,640
pagination component in Angular,

90
00:06:45,640 --> 00:06:47,360
pages are one based.

91
00:06:47,360 --> 00:06:48,770
However, in Spring Data REST,

92
00:06:48,770 --> 00:06:50,510
the pages are zero based.

93
00:06:50,510 --> 00:06:52,980
So basically, in Angular we have a page,

94
00:06:52,980 --> 00:06:54,920
as we have to decrement it by one

95
00:06:54,920 --> 00:06:57,600
to map to the appropriate page on the backend,

96
00:06:57,600 --> 00:06:58,680
Spring Data REST JSON.

97
00:06:58,680 --> 00:07:00,140
So again, that's why we have to do

98
00:07:00,140 --> 00:07:02,453
the funny math operations here.

99
00:07:04,840 --> 00:07:06,720
All righty, so now let's go ahead and take care of that

100
00:07:06,720 --> 00:07:08,443
processResult method.

101
00:07:12,820 --> 00:07:14,173
So I'll define it here.

102
00:07:16,920 --> 00:07:18,390
And now, basically all we're going to do is

103
00:07:18,390 --> 00:07:22,120
we're simply going to map data from that JSON response

104
00:07:22,120 --> 00:07:25,873
to the actual properties here for this given class.

105
00:08:04,328 --> 00:08:05,360
So on the left-hand side,

106
00:08:05,360 --> 00:08:07,960
we have properties that are defined in this class.

107
00:08:07,960 --> 00:08:09,980
Over on the right-hand side is the result of

108
00:08:09,980 --> 00:08:13,030
the data that came back from the Spring Data REST JSON,

109
00:08:13,030 --> 00:08:15,230
and that's information from our interface,

110
00:08:15,230 --> 00:08:16,913
get response products.

111
00:08:20,780 --> 00:08:22,320
And again, as a reminder here,

112
00:08:22,320 --> 00:08:25,300
we have to say data.page.number plus one,

113
00:08:25,300 --> 00:08:28,720
because Spring Data REST, the pages are zero based.

114
00:08:28,720 --> 00:08:30,550
In Angular, they're one based.

115
00:08:30,550 --> 00:08:32,630
So just make sure you have the appropriate mapping

116
00:08:32,630 --> 00:08:33,920
going back and forth.

117
00:08:33,920 --> 00:08:35,420
And if you miss this (laughs),

118
00:08:36,290 --> 00:08:38,650
your page pagination will not work as desired.

119
00:08:38,650 --> 00:08:40,240
So this is an easy thing to miss.

120
00:08:40,240 --> 00:08:41,940
So just make sure that your code resembles

121
00:08:41,940 --> 00:08:43,590
what I have here on this screen,

122
00:08:43,590 --> 00:08:45,757
because the pagination component is one based,

123
00:08:45,757 --> 00:08:47,943
and Spring Data REST is zero based.

124
00:08:49,580 --> 00:08:51,410
All righty, so this coding looks really good,

125
00:08:51,410 --> 00:08:53,360
and I'm excited for the next step.

126
00:08:53,360 --> 00:08:55,643
So I'll see ya in the next video.

