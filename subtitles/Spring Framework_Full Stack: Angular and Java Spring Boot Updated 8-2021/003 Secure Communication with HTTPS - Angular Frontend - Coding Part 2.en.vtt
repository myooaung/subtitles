WEBVTT
1
00:00:01.520 --> 00:00:02.353
<v Instructor>this video,</v>

2
00:00:02.353 --> 00:00:04.820
we'll cover step three of updating the spring boot app

3
00:00:04.820 --> 00:00:06.263
with the new URL.

4
00:00:11.870 --> 00:00:13.330
But first I want to go ahead

5
00:00:13.330 --> 00:00:14.990
and view the web browser warnings,

6
00:00:14.990 --> 00:00:16.470
actually want to check this URL,

7
00:00:16.470 --> 00:00:20.313
and kind of see what's going on with this given endpoint.

8
00:00:21.240 --> 00:00:22.900
So we see that our application is up

9
00:00:22.900 --> 00:00:26.060
and running on https://localhost:4200.

10
00:00:26.060 --> 00:00:28.793
So let's go ahead and visit that URL in our browser.

11
00:00:43.540 --> 00:00:45.700
And then we see this scary screen,

12
00:00:45.700 --> 00:00:48.740
like your connection is not private.

13
00:00:48.740 --> 00:00:50.870
And the reason is that the main item here

14
00:00:50.870 --> 00:00:53.480
is at the cert authority is invalid

15
00:00:53.480 --> 00:00:55.060
because it's a self-signed cert.

16
00:00:55.060 --> 00:00:57.810
But I can click on advanced and then scroll down a bit.

17
00:00:57.810 --> 00:01:01.630
It says the server could not prove that it is localhost,

18
00:01:01.630 --> 00:01:04.070
its certificate is not trusted,

19
00:01:04.070 --> 00:01:06.380
mainly because it's a self-signed cert,

20
00:01:06.380 --> 00:01:07.830
that's the real reason

21
00:01:07.830 --> 00:01:09.540
that we're seeing these error messages.

22
00:01:09.540 --> 00:01:12.000
No one else has been able to verify that

23
00:01:12.000 --> 00:01:13.800
I am really localhost.

24
00:01:13.800 --> 00:01:16.127
But this is for dev and demo purposes, we're okay.

25
00:01:16.127 --> 00:01:18.240
But I can go ahead and say proceed to localhost

26
00:01:18.240 --> 00:01:20.070
because we're aware of what's going on

27
00:01:20.070 --> 00:01:21.780
and then we have this up.

28
00:01:21.780 --> 00:01:24.100
Now, again, it says not secure

29
00:01:24.100 --> 00:01:25.327
and we can select the link here

30
00:01:25.327 --> 00:01:27.893
and it can give us more information about this.

31
00:01:30.480 --> 00:01:33.280
And if we move down to the certificate invalid

32
00:01:36.780 --> 00:01:38.060
and in zooming in here,

33
00:01:38.060 --> 00:01:41.440
it says localhost, it's a self signed root certificate.

34
00:01:41.440 --> 00:01:42.880
So that's the main issue.

35
00:01:42.880 --> 00:01:44.540
And they'll even tell you here,

36
00:01:44.540 --> 00:01:48.170
this a certificate has not been verified by a third party.

37
00:01:48.170 --> 00:01:51.040
So we have encryption going on behind the scenes

38
00:01:51.040 --> 00:01:52.020
and so forth,

39
00:01:52.020 --> 00:01:55.100
it's simply they can't verify our given certificate.

40
00:01:55.100 --> 00:01:57.950
But I can go ahead and look at some of the details here

41
00:01:57.950 --> 00:02:00.460
and I will see that this is the information that we entered

42
00:02:00.460 --> 00:02:02.820
when we use the open SSL command early

43
00:02:02.820 --> 00:02:05.883
to generate this given self-signed certificate.

44
00:02:10.120 --> 00:02:12.490
So for dev purposes, this is okay.

45
00:02:12.490 --> 00:02:16.240
We're only being flagged because that's a self-signed cert,

46
00:02:16.240 --> 00:02:18.923
but the data is being encrypted behind the scenes.

47
00:02:24.460 --> 00:02:26.530
Now, we still have another little problem here,

48
00:02:26.530 --> 00:02:29.490
there's no products, there's no categories.

49
00:02:29.490 --> 00:02:30.510
Hmm, that's strange,

50
00:02:30.510 --> 00:02:32.110
I wonder why we have this issue.

51
00:02:37.540 --> 00:02:39.640
Okay, well, my spring boot app is not running.

52
00:02:39.640 --> 00:02:42.380
Alright, let's go ahead and run our spring boot app

53
00:02:42.380 --> 00:02:45.373
and we'll test this out and see if this works out for us.

54
00:02:51.120 --> 00:02:53.320
Alright, so my spring boot app is up and running,

55
00:02:53.320 --> 00:02:56.170
swing back over some our browser, do a reload

56
00:02:56.170 --> 00:02:59.713
and hmm, nothing interesting.

57
00:03:00.980 --> 00:03:05.980
If I go over here to my developer console cylinder tools,

58
00:03:06.150 --> 00:03:11.150
developer tools, and take a look at what's going on here.

59
00:03:12.220 --> 00:03:16.010
Ah, now I see it's blocked by CORS.

60
00:03:16.990 --> 00:03:17.823
Okay, good.

61
00:03:17.823 --> 00:03:21.983
So the spring boot app is blocking the request.

62
00:03:23.600 --> 00:03:25.640
Same thing there, oh, that's right.

63
00:03:25.640 --> 00:03:27.490
We need to do that other steps.

64
00:03:27.490 --> 00:03:30.300
So step three of updating the spring boot app

65
00:03:30.300 --> 00:03:31.860
with the new URL,

66
00:03:31.860 --> 00:03:35.180
we need to tell spring boot about this new URL.

67
00:03:35.180 --> 00:03:37.970
Previously, we were on a regular unsecure

68
00:03:37.970 --> 00:03:39.960
http://localhosts,

69
00:03:39.960 --> 00:03:44.570
now, we need to say https localhost to allow

70
00:03:44.570 --> 00:03:47.880
origins to come in for this given application.

71
00:03:47.880 --> 00:03:52.880
And we can do that by editing our spring boot props file,

72
00:03:53.300 --> 00:03:56.203
so our application.properties file.

73
00:04:00.550 --> 00:04:01.900
So I'll kind of zoom in here,

74
00:04:01.900 --> 00:04:03.220
so allowed origin.

75
00:04:03.220 --> 00:04:07.960
So notice here they're using the old URL http://

76
00:04:07.960 --> 00:04:09.880
but we're no longer running on that,

77
00:04:09.880 --> 00:04:11.760
we are now running using secure.

78
00:04:11.760 --> 00:04:14.210
So we're using https.

79
00:04:14.210 --> 00:04:17.800
So be sure to make this update here in this given file,

80
00:04:17.800 --> 00:04:20.813
https:///localhost:4200.

81
00:04:26.300 --> 00:04:27.500
All right, so that looks pretty good.

82
00:04:27.500 --> 00:04:30.463
So let's go ahead and run our spring boot app one more time.

83
00:04:36.000 --> 00:04:40.603
Swing that go with our browser and do a reload and success.

84
00:04:42.670 --> 00:04:47.670
All right, so we have products and we also have categories.

85
00:04:47.730 --> 00:04:49.210
This is great, I love it.

86
00:04:49.210 --> 00:04:51.673
And the apps working as desired.

87
00:04:53.750 --> 00:04:54.583
And notice here,

88
00:04:54.583 --> 00:04:56.530
we didn't have to change any of our code,

89
00:04:56.530 --> 00:04:59.730
but our data's being encrypted behind the scenes.

90
00:04:59.730 --> 00:05:02.260
Now, don't worry about that not secure thing up top,

91
00:05:02.260 --> 00:05:04.060
we are using https.

92
00:05:04.060 --> 00:05:05.270
They're simply saying not secure

93
00:05:05.270 --> 00:05:07.570
because they're using a self-signed cert,

94
00:05:07.570 --> 00:05:08.690
but behind the scenes,

95
00:05:08.690 --> 00:05:11.910
they are encrypting our data between the web browser

96
00:05:11.910 --> 00:05:13.110
and the web server.

97
00:05:13.110 --> 00:05:14.500
So this is great, I liked it

98
00:05:14.500 --> 00:05:17.843
and I'm very happy with what we've accomplished so far.

