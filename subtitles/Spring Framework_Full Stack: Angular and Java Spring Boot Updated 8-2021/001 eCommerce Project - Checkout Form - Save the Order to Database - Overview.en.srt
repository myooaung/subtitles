1
00:00:01,290 --> 00:00:03,330
<v Narrator>And this video will cover the checkout form</v>

2
00:00:03,330 --> 00:00:05,453
and we'll save the order to the backend.

3
00:00:08,660 --> 00:00:10,640
We have our shopping cart full of products.

4
00:00:10,640 --> 00:00:13,130
So let's check out, we're going to send the order

5
00:00:13,130 --> 00:00:15,510
to the backend and stored in the database.

6
00:00:15,510 --> 00:00:16,446
We'll have our Angular front-end

7
00:00:16,446 --> 00:00:18,960
send data over using the REST API

8
00:00:18,960 --> 00:00:22,053
to our Spring Boot backend and put it in the database.

9
00:00:24,160 --> 00:00:24,993
Alright, so let's take a look

10
00:00:24,993 --> 00:00:26,280
at our application architecture

11
00:00:26,280 --> 00:00:28,930
and here I'll kind of focus on the backend Spring Boot.

12
00:00:28,930 --> 00:00:30,300
We'll have our checkout controller

13
00:00:30,300 --> 00:00:32,010
that'll make use of a checkout service.

14
00:00:32,010 --> 00:00:34,960
That'll also make use of the spring data JPA repository

15
00:00:34,960 --> 00:00:38,940
and we'll eventually store the information in the database.

16
00:00:38,940 --> 00:00:41,130
And what we'll do is we'll make use of custom coding here

17
00:00:41,130 --> 00:00:44,323
for our checkout controller and also the checkout service.

18
00:00:47,830 --> 00:00:50,200
So a bit more on the custom coding for the architecture

19
00:00:50,200 --> 00:00:51,700
we'll have a custom controller and service.

20
00:00:51,700 --> 00:00:53,300
So we'll have a checkout controller

21
00:00:53,300 --> 00:00:54,970
and also a checkout service.

22
00:00:54,970 --> 00:00:59,970
Now you may be wondering why not use Spring Data REST

23
00:01:00,370 --> 00:01:02,320
because it's really awesome and amazing.

24
00:01:02,320 --> 00:01:03,773
And we've used it so far.

25
00:01:06,900 --> 00:01:09,490
Spring Data REST is great for basic CRUD.

26
00:01:09,490 --> 00:01:11,330
As I mentioned, we're currently using it

27
00:01:11,330 --> 00:01:14,280
for our product catalog, but it's not the best

28
00:01:14,280 --> 00:01:17,890
for processing the order using custom business logic.

29
00:01:17,890 --> 00:01:20,540
So we needed to generate a custom tracking number

30
00:01:20,540 --> 00:01:21,970
and save the order and the database

31
00:01:21,970 --> 00:01:24,660
and also do some other custom business logic.

32
00:01:24,660 --> 00:01:26,630
Spring data REST has a challenge there.

33
00:01:26,630 --> 00:01:27,748
So spring data REST is very limited

34
00:01:27,748 --> 00:01:30,584
in terms of customization

35
00:01:30,584 --> 00:01:33,520
for custom business, logic and processing.

36
00:01:33,520 --> 00:01:36,380
You'll want to create a custom controller and service.

37
00:01:36,380 --> 00:01:40,210
Okay. So that's the reason why I'm using custom coding here

38
00:01:40,210 --> 00:01:42,483
for the controller and the service.

39
00:01:45,240 --> 00:01:47,320
Alright, so let's take a look at our database diagram.

40
00:01:47,320 --> 00:01:49,410
So we'll have our orders basically

41
00:01:49,410 --> 00:01:51,880
for the given order that we're saving in the database.

42
00:01:51,880 --> 00:01:54,960
A customer can have zero to many orders.

43
00:01:54,960 --> 00:01:58,450
A order has a billing address and a shipping address.

44
00:01:58,450 --> 00:02:00,180
That's why we have the two lines there

45
00:02:00,180 --> 00:02:01,830
and also an order item.

46
00:02:01,830 --> 00:02:04,300
That's the actual line item for the order.

47
00:02:04,300 --> 00:02:05,450
And we'll see more of this

48
00:02:05,450 --> 00:02:07,883
as we move into the actual coding for it.

49
00:02:10,330 --> 00:02:12,150
And then as far as the class diagram

50
00:02:12,150 --> 00:02:14,380
we'll create these JPA entities here.

51
00:02:14,380 --> 00:02:17,800
So we'll have a customer that has zero to many orders.

52
00:02:17,800 --> 00:02:20,460
An order has shipping address, billing address.

53
00:02:20,460 --> 00:02:23,853
And also an order has a collection of order items.

54
00:02:26,390 --> 00:02:28,400
We'll also make use of a data transfer object,

55
00:02:28,400 --> 00:02:29,670
basically for transferring data

56
00:02:29,670 --> 00:02:32,520
between the angler front end and the spring boot back in.

57
00:02:33,720 --> 00:02:36,430
So we'll send data over the REST API

58
00:02:36,430 --> 00:02:37,830
and we'll make use of this

59
00:02:37,830 --> 00:02:39,630
data transfer object called purchases.

60
00:02:39,630 --> 00:02:41,120
And this is something that we'll create.

61
00:02:41,120 --> 00:02:42,580
So this purchase will have a reference

62
00:02:42,580 --> 00:02:45,190
to the customer shipping address, billing address order

63
00:02:45,190 --> 00:02:47,163
and a collection of order items.

64
00:02:50,540 --> 00:02:52,750
And he has a description here of the API.

65
00:02:52,750 --> 00:02:54,070
So we'll have a POST

66
00:02:54,070 --> 00:02:57,120
to this end point/API/checkout/purchase.

67
00:02:57,120 --> 00:03:00,200
And the action is that it will create a new purchase order

68
00:03:00,200 --> 00:03:01,993
and stored in the database.

69
00:03:05,130 --> 00:03:07,350
And then here's a look at the sample JSON here

70
00:03:07,350 --> 00:03:09,100
for the purchase.

71
00:03:09,100 --> 00:03:11,660
So we see, we have a section here for the customer

72
00:03:11,660 --> 00:03:13,790
shipping address, billing address

73
00:03:13,790 --> 00:03:17,063
the order and a collection of order items.

74
00:03:19,690 --> 00:03:21,570
Now let's take a look at our development process

75
00:03:21,570 --> 00:03:23,770
and it's for the backend for Spring Boot.

76
00:03:23,770 --> 00:03:25,410
So the first thing we'll do is we'll run a database

77
00:03:25,410 --> 00:03:27,250
script to set up our database.

78
00:03:27,250 --> 00:03:28,600
We'll create some entities.

79
00:03:29,450 --> 00:03:32,040
We'll also create the data transfer objects

80
00:03:32,040 --> 00:03:32,921
next we'll create the repository,

81
00:03:32,921 --> 00:03:35,390
then we'll create the service

82
00:03:35,390 --> 00:03:38,470
and then finally we'll create the controller.

83
00:03:38,470 --> 00:03:41,450
Now I won't go through the coding here in a slideshow

84
00:03:41,450 --> 00:03:44,150
I'll simply swing into our coding video

85
00:03:44,150 --> 00:03:46,230
and it would just cover all the code there

86
00:03:46,230 --> 00:03:47,460
in the coding video

87
00:03:47,460 --> 00:03:49,670
because you've seen a lot of this stuff before.

88
00:03:49,670 --> 00:03:51,590
We're just kind of pulling it all together

89
00:03:51,590 --> 00:03:53,730
for this given example.

90
00:03:53,730 --> 00:03:54,970
Alright, so let's go ahead

91
00:03:54,970 --> 00:03:58,033
and move to the next video and let's write some code.

