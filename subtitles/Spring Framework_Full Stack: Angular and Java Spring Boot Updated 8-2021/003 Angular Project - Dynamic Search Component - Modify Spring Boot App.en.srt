1
00:00:01,120 --> 00:00:03,000
<v Chad>All righty, so let's go ahead and move in here</v>

2
00:00:03,000 --> 00:00:04,990
looking at our development process.

3
00:00:04,990 --> 00:00:06,460
In the first step, we're going to modify

4
00:00:06,460 --> 00:00:09,893
our Spring Boot application to expose the entity IDs.

5
00:00:15,200 --> 00:00:16,400
Let's go ahead and swing in here.

6
00:00:16,400 --> 00:00:18,603
Let's move into our Java IDE IntelliJ.

7
00:00:20,130 --> 00:00:21,693
And let's scroll down here and move

8
00:00:21,693 --> 00:00:24,810
into our src, main, java directory,

9
00:00:24,810 --> 00:00:27,300
open our SpringBootEcommerceApplication.

10
00:00:27,300 --> 00:00:29,980
I want to first run my application as is

11
00:00:29,980 --> 00:00:32,070
just to take a look at the REST response,

12
00:00:32,070 --> 00:00:33,560
and then we'll make some modifications,

13
00:00:33,560 --> 00:00:35,373
and we'll check the new results.

14
00:00:42,990 --> 00:00:44,560
All righty, so my app is up and running.

15
00:00:44,560 --> 00:00:46,463
I'll swing over to my browser,

16
00:00:47,780 --> 00:00:50,490
and I'll simply look at the product categories.

17
00:00:50,490 --> 00:00:55,490
So I go to localhost:8080/api/product-category.

18
00:01:00,760 --> 00:01:02,600
All righty, so it's up and running here.

19
00:01:02,600 --> 00:01:04,990
And one thing to note here is that there is no entity ID

20
00:01:04,990 --> 00:01:06,750
at the productCategory level.

21
00:01:06,750 --> 00:01:10,003
We simply have the categoryName, but no categoryID.

22
00:01:14,190 --> 00:01:16,227
Let's swing back into our IDE here,

23
00:01:16,227 --> 00:01:20,433
and let's go ahead and modify our MyDataRestConfig file.

24
00:01:22,530 --> 00:01:25,230
Zoom out here, expand my window,

25
00:01:25,230 --> 00:01:28,220
so just as a check point, we're in MyDataRestConfig.

26
00:01:29,165 --> 00:01:30,240
So the first thing we need to do is

27
00:01:30,240 --> 00:01:32,663
autowire our JPA entity manager.

28
00:01:55,470 --> 00:01:58,263
Effectively, I'm injecting the JPA entity manager.

29
00:02:01,620 --> 00:02:02,730
And in this particular example,

30
00:02:02,730 --> 00:02:04,500
the use of Autowired is optional

31
00:02:04,500 --> 00:02:06,440
since we only have one constructor,

32
00:02:06,440 --> 00:02:09,290
but I'll go ahead and leave it there just to be explicit.

33
00:02:14,200 --> 00:02:15,540
All right, so this code here handles

34
00:02:15,540 --> 00:02:18,113
the autowiring of our JPA entity manager.

35
00:02:20,310 --> 00:02:21,170
Then I'll move down

36
00:02:21,170 --> 00:02:24,763
to my configureRepositoryRestConfiguration method.

37
00:02:33,540 --> 00:02:35,660
And I'll call an internal helper method

38
00:02:35,660 --> 00:02:37,963
to help us expose the IDs.

39
00:02:52,710 --> 00:02:55,593
Let's go ahead and scroll down to the exposeIds method.

40
00:03:03,320 --> 00:03:05,750
We're going to get a collection of all entity classes

41
00:03:05,750 --> 00:03:07,053
from the entity manager.

42
00:03:25,230 --> 00:03:27,883
I simply use entityManager.getMetamodel.getEntities.

43
00:03:34,570 --> 00:03:37,520
Next, I'm going to create an array list of those entity types.

44
00:03:49,870 --> 00:03:53,300
This code basically just creates an empty array list.

45
00:03:53,300 --> 00:03:55,000
And we'll populate it in a second.

46
00:03:57,240 --> 00:03:58,073
Then we'll go through,

47
00:03:58,073 --> 00:04:00,533
and we'll get the entity types for the entities.

48
00:04:05,770 --> 00:04:08,583
So I do a for loop, and I loop over those entities.

49
00:04:22,260 --> 00:04:24,640
Then I simply use entityClasses.add,

50
00:04:24,640 --> 00:04:26,573
and I give tempEntityType.getJavaType.

51
00:04:41,610 --> 00:04:43,960
Then finally, I'm going to expose the entity IDs

52
00:04:43,960 --> 00:04:46,383
for the entity/domain types.

53
00:05:03,100 --> 00:05:04,620
I simply take that entityClasses

54
00:05:04,620 --> 00:05:06,483
and simply convert it to an array.

55
00:05:10,100 --> 00:05:12,927
And then I say config.exposeIdsFor,

56
00:05:14,160 --> 00:05:16,960
and then I give it that array of classes

57
00:05:16,960 --> 00:05:20,363
to expose the IDs for, or those given domain types.

58
00:05:27,917 --> 00:05:30,290
That's basically it here for exposing the IDs

59
00:05:30,290 --> 00:05:33,393
for our entities using Spring Data REST.

60
00:05:47,090 --> 00:05:48,800
Swing back over to our application,

61
00:05:48,800 --> 00:05:50,433
just do a reload on this page.

62
00:05:54,730 --> 00:05:55,930
All right, this looks great!

63
00:05:55,930 --> 00:05:59,100
So we have the entity ID at the productCategory level,

64
00:05:59,100 --> 00:06:01,050
so we have the id and the categoryName.

65
00:06:02,000 --> 00:06:03,850
And a similar thing down here for Coffee Mugs.

66
00:06:03,850 --> 00:06:06,480
We have the ID and also the categoryName.

67
00:06:06,480 --> 00:06:09,240
So now our REST API is exposing the entity IDs,

68
00:06:09,240 --> 00:06:11,930
and it gives us easy access to this data.

69
00:06:11,930 --> 00:06:14,223
So I'd like to say, good job so far!

