WEBVTT
1
00:00:01.200 --> 00:00:02.033
<v ->In this video,</v>

2
00:00:02.033 --> 00:00:03.700
we're going to cover secure communication

3
00:00:03.700 --> 00:00:06.513
in terms of making Okta updates.

4
00:00:10.700 --> 00:00:13.480
Since the Angular app is running on a different protocol,

5
00:00:13.480 --> 00:00:16.500
HTTPS localhost 4,200,

6
00:00:16.500 --> 00:00:19.953
we need to update the Okta configs for the redirect URIs.

7
00:00:23.930 --> 00:00:25.600
Here's our development process.

8
00:00:25.600 --> 00:00:27.880
So in step one, we're going to update the redirect URI

9
00:00:27.880 --> 00:00:29.360
in our Angular app,

10
00:00:29.360 --> 00:00:31.320
and then update the redirect URI's in

11
00:00:31.320 --> 00:00:33.100
the Okta dashboard,

12
00:00:33.100 --> 00:00:36.050
and finally update the API trusted origins

13
00:00:36.050 --> 00:00:37.683
in the Okta dashboard.

14
00:00:40.900 --> 00:00:42.720
Step one of updating a redirect URI

15
00:00:42.720 --> 00:00:44.270
in the Angular application.

16
00:00:44.270 --> 00:00:45.660
So we have this file here,

17
00:00:45.660 --> 00:00:47.430
my app config dot ts.

18
00:00:47.430 --> 00:00:50.050
We need to make this one update entry here

19
00:00:50.050 --> 00:00:52.230
for the redirect URI.

20
00:00:52.230 --> 00:00:54.540
Previously, we used the regular HTTP,

21
00:00:54.540 --> 00:00:56.040
now we need to update it to make use

22
00:00:56.040 --> 00:01:00.610
of HP S colon slash slash local host 4,200,

23
00:01:00.610 --> 00:01:03.160
because this is the callback that Okta's going to use

24
00:01:03.160 --> 00:01:05.460
when they communicate back to our application.

25
00:01:08.860 --> 00:01:09.693
Then in step two,

26
00:01:09.693 --> 00:01:11.240
we're going to update the redirect URIs

27
00:01:11.240 --> 00:01:13.023
in the Okta dashboard.

28
00:01:14.560 --> 00:01:16.340
So we log into our Okta dashboard,

29
00:01:16.340 --> 00:01:18.860
we go to our given application that we're using,

30
00:01:18.860 --> 00:01:20.920
in this example just demo five,

31
00:01:20.920 --> 00:01:23.030
move down to the section for login,

32
00:01:23.030 --> 00:01:25.906
and we change the redirect URIs here.

33
00:01:25.906 --> 00:01:28.180
So we changed the redirect URIs for the sign in,

34
00:01:28.180 --> 00:01:29.550
and also for sign out.

35
00:01:29.550 --> 00:01:30.383
And again,

36
00:01:30.383 --> 00:01:33.360
make note of the HTTP S that we're using,

37
00:01:33.360 --> 00:01:35.210
everything else there stays the same.

38
00:01:39.170 --> 00:01:40.300
And then finally, in step three,

39
00:01:40.300 --> 00:01:42.726
we need to update the API trusted origins

40
00:01:42.726 --> 00:01:44.263
in the Okta dashboard.

41
00:01:44.263 --> 00:01:47.870
It's under the API section under trusted origins,

42
00:01:47.870 --> 00:01:48.840
then we move down here

43
00:01:48.840 --> 00:01:52.010
where we perform an edit on the given origin

44
00:01:52.010 --> 00:01:53.350
that we have set up here.

45
00:01:53.350 --> 00:01:54.900
And then we change the origin URL

46
00:01:54.900 --> 00:01:58.763
to be HTTPS colon local host 4,200.

47
00:02:03.050 --> 00:02:04.400
And then once we have that in place,

48
00:02:04.400 --> 00:02:05.970
then we can actually log in

49
00:02:05.970 --> 00:02:07.900
and make use of all the Okta functionality,

50
00:02:07.900 --> 00:02:10.830
because now Okta's aware of the appropriate redirects

51
00:02:10.830 --> 00:02:11.943
and the callbacks to use

52
00:02:11.943 --> 00:02:14.463
to communicate back to our application.

