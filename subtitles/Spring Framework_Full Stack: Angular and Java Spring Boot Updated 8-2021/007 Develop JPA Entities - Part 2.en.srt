1
00:00:01,210 --> 00:00:02,700
<v Chad>Okay, so let's continue on</v>

2
00:00:02,700 --> 00:00:04,160
with our Product class here,

3
00:00:04,160 --> 00:00:08,120
and so basically we need to add the JPA mappings here

4
00:00:08,120 --> 00:00:11,240
between the actual fields and columns.

5
00:00:11,240 --> 00:00:14,463
So first I'll set up the coding here for my id column.

6
00:00:28,609 --> 00:00:31,980
And so this maps over to the database column id.

7
00:00:31,980 --> 00:00:34,520
And I'll just copy this @Column annotation

8
00:00:34,520 --> 00:00:36,490
and I'll just paste it X number of times

9
00:00:36,490 --> 00:00:38,173
as I go through the list here.

10
00:00:50,640 --> 00:00:52,210
And most of these are fairly straightforward,

11
00:00:52,210 --> 00:00:55,760
except for the cases for unitPrice where it's unit_price.

12
00:00:59,076 --> 00:01:02,159
And imageUrl is image_url, and so on.

13
00:01:16,797 --> 00:01:19,740
And then we have two fields here for our timestamps.

14
00:01:19,740 --> 00:01:24,303
So one for dateCreated, and also for lastUpdated.

15
00:01:35,447 --> 00:01:37,627
And what I'll do is I'll add two annotations here,

16
00:01:37,627 --> 00:01:39,640
@CreationTimestamp and @UpdateTimestamp.

17
00:01:41,570 --> 00:01:43,130
These are special annotations.

18
00:01:43,130 --> 00:01:46,270
Hibernate will automatically manage the timestamp

19
00:01:46,270 --> 00:01:47,820
so there's no need for the developer

20
00:01:47,820 --> 00:01:51,020
to manually call these methods or set these fields here.

21
00:01:51,020 --> 00:01:52,680
Hibernate will do all of that work for you

22
00:01:52,680 --> 00:01:53,853
in the background.

23
00:01:57,510 --> 00:01:58,343
So stepping back,

24
00:01:58,343 --> 00:02:00,240
our product class is pretty much taken care of

25
00:02:00,240 --> 00:02:01,890
with our annotations accordingly.

26
00:02:08,680 --> 00:02:10,150
All righty, so now let's go ahead

27
00:02:10,150 --> 00:02:13,347
and create another new class for ProductCategory.

28
00:02:23,490 --> 00:02:25,100
And we'll go through a similar process here

29
00:02:25,100 --> 00:02:26,600
of setting up the Entity annotation

30
00:02:26,600 --> 00:02:28,100
and also the Table annotation.

31
00:03:00,910 --> 00:03:03,100
And then one little thing here with Lombok,

32
00:03:03,100 --> 00:03:05,800
there's a known bug when using @Data,

33
00:03:05,800 --> 00:03:07,310
whenever you make use of relationships

34
00:03:07,310 --> 00:03:09,740
like OneToMany and ManyToOne.

35
00:03:09,740 --> 00:03:11,210
So here instead of @Data

36
00:03:11,210 --> 00:03:13,020
we'll make use of @Getter and @Setter.

37
00:03:13,020 --> 00:03:14,410
These are Lombok annotations.

38
00:03:14,410 --> 00:03:16,330
And that will generate those methods accordingly.

39
00:03:16,330 --> 00:03:18,350
But this is just more of a workaround

40
00:03:18,350 --> 00:03:20,320
with this modern framework here.

41
00:03:20,320 --> 00:03:21,300
But don't worry, in the end,

42
00:03:21,300 --> 00:03:22,860
you'll get the similar set of functionality.

43
00:03:22,860 --> 00:03:24,070
You'll get the getters and setters

44
00:03:24,070 --> 00:03:26,543
automatically generated for you by Lombok.

45
00:03:31,720 --> 00:03:32,840
So we'll define our fields here

46
00:03:32,840 --> 00:03:35,420
for id, category, and products.

47
00:03:50,516 --> 00:03:54,433
And then I'll just add my JPA annotations here.

48
00:04:29,750 --> 00:04:32,620
And then for the products, since this is a collection,

49
00:04:32,620 --> 00:04:34,953
this is really a OneToMany.

50
00:04:43,210 --> 00:04:45,160
So I set up the CascadeType to ALL

51
00:04:45,160 --> 00:04:47,143
and it's mappedBy category.

52
00:05:05,639 --> 00:05:08,556
And so over in my Product.java file

53
00:05:09,880 --> 00:05:11,200
let me set up the other side

54
00:05:11,200 --> 00:05:13,333
of the relationship, ManyToOne.

55
00:05:22,400 --> 00:05:25,703
So a given product is associated with a category.

56
00:05:29,050 --> 00:05:31,483
And I use the ManyToOne annotation,

57
00:05:33,900 --> 00:05:36,120
and I specify the JoinColumn.

58
00:05:36,120 --> 00:05:38,800
And the JoinColumn is category_id

59
00:05:38,800 --> 00:05:41,413
and that's a field that's defined in this table.

60
00:05:46,180 --> 00:05:47,280
All righty, so that looks pretty good

61
00:05:47,280 --> 00:05:50,050
as far as our relationship here between the product

62
00:05:50,050 --> 00:05:53,610
and the product category, OneToMany, ManyToOne,

63
00:05:53,610 --> 00:05:56,653
using some of these advanced JPA relationships.

64
00:06:01,030 --> 00:06:03,453
So this is great and I like to say good job!

