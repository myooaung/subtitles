1
00:00:01,210 --> 00:00:03,180
<v Instructor>Okay, so we're almost done.</v>

2
00:00:03,180 --> 00:00:06,050
So in this video, we'll cover the last two steps,

3
00:00:06,050 --> 00:00:08,360
steps four of disabling the PATCH method

4
00:00:08,360 --> 00:00:12,353
and also step five of modifying the detection strategy.

5
00:00:24,240 --> 00:00:27,753
Let's go ahead and open up this file, MyDataRESTConfig,

6
00:00:34,330 --> 00:00:37,540
and let's move down here so we have the unsupported action,

7
00:00:37,540 --> 00:00:40,170
so PUT, POST, DELETE.

8
00:00:40,170 --> 00:00:42,770
So I'll just kind of move this down to another line,

9
00:00:44,010 --> 00:00:46,100
so we have a method DELETE

10
00:00:46,100 --> 00:00:48,513
and then I'll do a similar thing here for PATCH.

11
00:00:54,200 --> 00:00:57,630
We are not allowing PATCH, so it's an unsupported action.

12
00:00:57,630 --> 00:01:00,187
So it's in this array and everything else works out fine

13
00:01:00,187 --> 00:01:02,090
because we use the same array

14
00:01:02,090 --> 00:01:03,440
in the following lines of code.

15
00:01:03,440 --> 00:01:05,890
So everything's in place just making this update

16
00:01:05,890 --> 00:01:06,783
in one location.

17
00:01:19,009 --> 00:01:20,390
So as a quick refresher here,

18
00:01:20,390 --> 00:01:22,340
I'm going to put the slide back in just

19
00:01:22,340 --> 00:01:23,410
to kind of jog our memories

20
00:01:23,410 --> 00:01:26,070
cause we've been going for a bit, but in step five,

21
00:01:26,070 --> 00:01:28,470
we need to modify the Spring Data REST detection strategy.

22
00:01:28,470 --> 00:01:30,760
So by default, Spring Data REST

23
00:01:30,760 --> 00:01:32,600
will expose the REST API APIs

24
00:01:32,600 --> 00:01:34,800
for the Spring Data Repositories.

25
00:01:34,800 --> 00:01:37,250
This works in general, but we may not want to expose all.

26
00:01:37,250 --> 00:01:39,760
So in our case, the Customer Repository

27
00:01:39,760 --> 00:01:42,350
we don't want to expose it as a REST API,

28
00:01:42,350 --> 00:01:44,040
we only want to use it internally.

29
00:01:44,040 --> 00:01:45,680
And this last bullet here is that,

30
00:01:45,680 --> 00:01:50,160
currently the /api/customers is currently exposed

31
00:01:50,160 --> 00:01:52,473
and we need to fix this, that's not good.

32
00:01:54,000 --> 00:01:57,533
So let me show you this real quick in the web browser.

33
00:01:58,540 --> 00:02:01,000
If our app is up and running on the back end,

34
00:02:01,000 --> 00:02:04,593
then if we go to localhost:8080/api/customers,

35
00:02:05,930 --> 00:02:08,490
then we actually see the customer data.

36
00:02:08,490 --> 00:02:11,460
eeekkk, yikes, not good!

37
00:02:11,460 --> 00:02:14,973
So let's go ahead and fix this ASAP in our application,

38
00:02:14,973 --> 00:02:19,973
because we didn't want to expose this Spring Data Repository

39
00:02:20,190 --> 00:02:21,493
as a REST endpoint.

40
00:02:27,297 --> 00:02:30,260
So we can move down to our application.properties file

41
00:02:30,260 --> 00:02:33,330
and we can configure the actual detection strategy

42
00:02:33,330 --> 00:02:34,763
for Spring Data RESTs.

43
00:02:36,220 --> 00:02:37,707
So I'll kind of zoom in here

44
00:02:52,550 --> 00:02:55,430
and I'll set up this spring data risk detection strategy

45
00:02:55,430 --> 00:02:58,770
equals annotated, so that's one of the strategies

46
00:02:58,770 --> 00:03:01,973
that we learned about in one of our previous videos.

47
00:03:06,300 --> 00:03:09,370
So now Spring Data REST will only expose a REST end point

48
00:03:09,370 --> 00:03:13,550
if you have the app RepositoryRestResource annotation

49
00:03:14,600 --> 00:03:16,200
and that's based on our configs.

50
00:03:22,750 --> 00:03:24,670
Let's move in here to CountryRepository,

51
00:03:24,670 --> 00:03:27,100
so this has the app repository REST resource,

52
00:03:27,100 --> 00:03:30,263
that's good, so we're okay there, we want to expose that one.

53
00:03:33,890 --> 00:03:36,050
CustomerRepository is not annotated,

54
00:03:36,050 --> 00:03:39,270
hence it will not be exposed as a REST API

55
00:03:39,270 --> 00:03:40,723
based on our configurations.

56
00:03:44,220 --> 00:03:46,020
We have the ProductCategoryRepository,

57
00:03:46,020 --> 00:03:48,120
that's annotated accordingly, that's good.

58
00:03:50,240 --> 00:03:52,550
ProductRepository, oh, no annotation,

59
00:03:52,550 --> 00:03:55,890
so we need to explicitly give the Repository

60
00:03:55,890 --> 00:03:57,803
REST Resource Annotation.

61
00:04:03,760 --> 00:04:06,150
And then over to the StateRepository,

62
00:04:06,150 --> 00:04:09,480
here we have the appropriate annotation, this is AOK,

63
00:04:09,480 --> 00:04:10,313
this looks good.

64
00:04:13,690 --> 00:04:16,040
So now we can go ahead and run our application.

65
00:04:20,650 --> 00:04:23,600
And then swinging back over to a web browser

66
00:04:23,600 --> 00:04:26,510
and to a reload here in this API/customers,

67
00:04:26,510 --> 00:04:28,580
and now we get a 404, so this is good.

68
00:04:28,580 --> 00:04:31,530
So API customers is not exposed,

69
00:04:31,530 --> 00:04:32,500
that's good for us,

70
00:04:32,500 --> 00:04:35,550
we didn't want to expose that given REST end point.

71
00:04:35,550 --> 00:04:36,483
Alright, good job.

72
00:04:41,130 --> 00:04:42,240
And then also we can go through

73
00:04:42,240 --> 00:04:44,070
and just test other parts of our application.

74
00:04:44,070 --> 00:04:46,870
So here we have categories along the side, we have products,

75
00:04:46,870 --> 00:04:49,110
so we know that all of the configurations there,

76
00:04:49,110 --> 00:04:51,250
everything else is still working out just fine as far

77
00:04:51,250 --> 00:04:54,300
as exposing our desired REST end points.

78
00:04:54,300 --> 00:04:56,560
Okay, so this is a good little exercise here,

79
00:04:56,560 --> 00:04:58,560
going back and refactoring some of our code,

80
00:04:58,560 --> 00:05:00,360
cleaning up some of our code,

81
00:05:00,360 --> 00:05:01,980
and so now we're in really good shape.

82
00:05:01,980 --> 00:05:04,563
So I'd like to say good job, my friend.

