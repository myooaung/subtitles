WEBVTT
1
00:00:01.290 --> 00:00:02.940
<v Instructor>In this video, we'll cover TypeScript</v>

2
00:00:02.940 --> 00:00:04.313
loops and arrays.

3
00:00:06.640 --> 00:00:08.810
So, in TypeScript, we can make use of for loops.

4
00:00:08.810 --> 00:00:11.900
So, I have this file here, loops.ts, I set up a for loop,

5
00:00:11.900 --> 00:00:15.500
I let i equal zero, i is less than five, i plus plus,

6
00:00:15.500 --> 00:00:20.150
then I can simply print out that value using console.log i.

7
00:00:20.150 --> 00:00:22.563
So, we simply compile the code using tsc,

8
00:00:23.680 --> 00:00:25.640
and then we just run it using the node command,

9
00:00:25.640 --> 00:00:29.633
so node loops.js running that JavaScript code.

10
00:00:30.760 --> 00:00:32.680
And then, this will give us the desired output,

11
00:00:32.680 --> 00:00:33.600
just like you would expect

12
00:00:33.600 --> 00:00:35.503
in any other programming language.

13
00:00:38.240 --> 00:00:42.023
We can also use a for loop to loop over an array of numbers.

14
00:00:43.840 --> 00:00:46.200
All right, so what I'll do here is I'll declare an array,

15
00:00:46.200 --> 00:00:48.770
so this is an array for reviews

16
00:00:48.770 --> 00:00:51.560
number, square brackets, so that's for our array.

17
00:00:51.560 --> 00:00:53.760
And we can give it some initial values here,

18
00:00:54.630 --> 00:00:57.400
and then I'll simply set up a for loop, let i equal zero,

19
00:00:57.400 --> 00:01:01.800
i is less than reviews.length, i plus plus,

20
00:01:01.800 --> 00:01:03.640
then I simply print out that given review,

21
00:01:03.640 --> 00:01:08.640
so console.log reviews sub i, so that's how we kind of index

22
00:01:08.930 --> 00:01:10.483
into the given array.

23
00:01:12.760 --> 00:01:14.650
So then, we simply compile and run the code

24
00:01:14.650 --> 00:01:17.180
and, all right, and so we get the desired output.

25
00:01:17.180 --> 00:01:18.080
Looks pretty good.

26
00:01:21.210 --> 00:01:22.530
And we can also use for loops

27
00:01:22.530 --> 00:01:24.390
and perform math operations.

28
00:01:24.390 --> 00:01:25.780
So, in this example I'll compute

29
00:01:25.780 --> 00:01:27.933
the average of the reviews.

30
00:01:28.910 --> 00:01:31.430
So, here I'll let total number equal zero,

31
00:01:31.430 --> 00:01:33.204
and then I have for i equals zero,

32
00:01:33.204 --> 00:01:35.360
i is less than reviews.length,

33
00:01:35.360 --> 00:01:37.480
console.log reviews sub i.

34
00:01:37.480 --> 00:01:40.890
And here I say total plus/equal reviews sub i,

35
00:01:40.890 --> 00:01:42.930
so this is the same thing as saying total equals total

36
00:01:42.930 --> 00:01:44.483
plus reviews sub i.

37
00:01:45.570 --> 00:01:47.980
So, I have the total of the reviews here,

38
00:01:47.980 --> 00:01:49.210
and then I can compute the average

39
00:01:49.210 --> 00:01:54.060
by saying average equals total divided by reviews.length,

40
00:01:54.060 --> 00:01:56.573
and then I simply display that output.

41
00:01:58.870 --> 00:02:01.260
And then, this will give us the results here,

42
00:02:01.260 --> 00:02:04.013
so the review average equals 3.7.

43
00:02:07.550 --> 00:02:09.710
So now, we have arrays.

44
00:02:09.710 --> 00:02:11.580
We can set up an array of sports,

45
00:02:11.580 --> 00:02:14.870
so let sportsOne string, square brackets,

46
00:02:14.870 --> 00:02:16.337
and I give a list of sports,

47
00:02:16.337 --> 00:02:18.680
"Golf", "Cricket", "Tennis", "Swimming".

48
00:02:18.680 --> 00:02:21.460
And then, I say let i equal zero,

49
00:02:21.460 --> 00:02:24.120
i is less than sportsOne.length, i plus plus

50
00:02:24.120 --> 00:02:26.280
console.log sportsOne sub i.

51
00:02:26.280 --> 00:02:28.890
So again, we're simply indexing into the array

52
00:02:28.890 --> 00:02:30.990
and we'll print out whatever string element is there,

53
00:02:30.990 --> 00:02:33.410
so we'll print out those given sports

54
00:02:33.410 --> 00:02:35.173
that are defined in this array.

55
00:02:38.430 --> 00:02:41.133
And they also have the simplified for loop syntax.

56
00:02:43.780 --> 00:02:45.930
So, here we have our array of strings,

57
00:02:45.930 --> 00:02:48.223
but now I can say for let tempSport of sportsOne,

58
00:02:49.910 --> 00:02:51.670
so notice the "of."

59
00:02:51.670 --> 00:02:53.820
And then, I build console.log on tempSport.

60
00:02:55.030 --> 00:02:57.910
So, that will give me the current array element,

61
00:02:57.910 --> 00:03:00.630
so not the index, like the i or whatever,

62
00:03:00.630 --> 00:03:03.250
the actual element itself.

63
00:03:03.250 --> 00:03:05.340
So, here we get the desired output,

64
00:03:05.340 --> 00:03:07.040
golf, cricket, tennis, swimming.

65
00:03:07.040 --> 00:03:08.900
So, the simplified for loop

66
00:03:08.900 --> 00:03:11.373
that you've seen in other programming languages.

67
00:03:14.600 --> 00:03:16.350
And then, we can also make use of conditionals

68
00:03:16.350 --> 00:03:17.350
in our for loops.

69
00:03:17.350 --> 00:03:19.470
So, here the code from the previous slide,

70
00:03:19.470 --> 00:03:22.490
but I'm just adding in a new section here.

71
00:03:22.490 --> 00:03:26.040
So, I'll say if tempSport equals "Cricket",

72
00:03:26.040 --> 00:03:27.550
then that's our conditional.

73
00:03:27.550 --> 00:03:31.970
Here I'll say console.log to tempSport plus "My Favorite!"

74
00:03:31.970 --> 00:03:33.720
I love cricket.

75
00:03:33.720 --> 00:03:35.753
Else, we simply print out the score.

76
00:03:37.962 --> 00:03:39.950
And so, when we run this one we'll see golf,

77
00:03:39.950 --> 00:03:41.800
cricket, my favorite!

78
00:03:41.800 --> 00:03:43.483
And then, tennis and swimming.

79
00:03:46.870 --> 00:03:48.620
All right, so let's look at growable arrays.

80
00:03:48.620 --> 00:03:51.130
So, arrays in TypeScript are always growable,

81
00:03:51.130 --> 00:03:52.193
always dynamic.

82
00:03:54.060 --> 00:03:55.750
So, here we set up this file,

83
00:03:55.750 --> 00:03:58.287
sportTwo sting, square brackets,

84
00:03:58.287 --> 00:03:59.930
"Golf", "Cricket", "Tennis".

85
00:03:59.930 --> 00:04:03.400
And then, I do a sportsTwo.push on "Baseball",

86
00:04:03.400 --> 00:04:06.780
so here we're adding elements to the array.

87
00:04:06.780 --> 00:04:10.260
And in sportsTwo.push "Futbol".

88
00:04:10.260 --> 00:04:12.400
And I can continue adding as many elements here

89
00:04:12.400 --> 00:04:15.370
as I like, the array will grow accordingly.

90
00:04:15.370 --> 00:04:17.210
And then, I have a simple for loop here,

91
00:04:17.210 --> 00:04:18.410
I'll just go through and print out

92
00:04:18.410 --> 00:04:20.120
the contents of the array using

93
00:04:20.120 --> 00:04:22.830
the let tempSport of sportsTwo,

94
00:04:22.830 --> 00:04:24.200
and that also give me golf, cricket,

95
00:04:24.200 --> 00:04:27.333
tennis, baseball, and futbol.

96
00:04:29.650 --> 00:04:31.100
Alrighty, so some really good examples.

97
00:04:31.100 --> 00:04:32.910
Let's go ahead and move into our IDE

98
00:04:32.910 --> 00:04:34.483
and let's write some code.

