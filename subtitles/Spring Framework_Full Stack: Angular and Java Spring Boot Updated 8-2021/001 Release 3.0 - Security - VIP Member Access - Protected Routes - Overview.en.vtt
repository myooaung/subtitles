WEBVTT
1
00:00:01.220 --> 00:00:02.053
<v Instructor>In this video,</v>

2
00:00:02.053 --> 00:00:04.673
we'll cover the VIP Member Access.

3
00:00:08.550 --> 00:00:11.820
So we'll provide access to special VIP member page

4
00:00:11.820 --> 00:00:13.930
only for authenticated users.

5
00:00:13.930 --> 00:00:17.330
So VIP means, Very Important Person.

6
00:00:17.330 --> 00:00:19.310
So we'll have a protected route

7
00:00:19.310 --> 00:00:22.150
only accessible to authenticated users.

8
00:00:22.150 --> 00:00:24.650
The user must be logged in.

9
00:00:24.650 --> 00:00:26.340
If the user's not logged in,

10
00:00:26.340 --> 00:00:29.023
then we'll simply redirect them to the login screen.

11
00:00:32.950 --> 00:00:35.070
So what we'll do is we'll have this protected route.

12
00:00:35.070 --> 00:00:38.010
So local host 4200/members,

13
00:00:38.010 --> 00:00:39.360
that's the protected route.

14
00:00:40.520 --> 00:00:42.920
So when a user clicks on the Member button,

15
00:00:42.920 --> 00:00:45.920
then we'll show them the special members page

16
00:00:45.920 --> 00:00:47.043
only for members.

17
00:00:48.010 --> 00:00:49.430
And so if authenticated,

18
00:00:49.430 --> 00:00:51.570
it will give access to the route,

19
00:00:51.570 --> 00:00:54.090
else will send the user to the login page.

20
00:00:54.090 --> 00:00:55.670
So they have to be logged in

21
00:00:55.670 --> 00:00:57.663
in order to see the members specials.

22
00:01:01.100 --> 00:01:04.100
So Angular has a concept of route guards.

23
00:01:04.100 --> 00:01:05.960
So a route guard prevents a user

24
00:01:05.960 --> 00:01:08.040
from accessing a part of the application

25
00:01:08.040 --> 00:01:10.150
without authorization.

26
00:01:10.150 --> 00:01:14.070
There's a common route guard interface called CanActivate.

27
00:01:14.070 --> 00:01:16.040
You can provide a custom implementation

28
00:01:16.040 --> 00:01:17.540
for a route guard interface.

29
00:01:17.540 --> 00:01:20.750
You basically return true if the user can access the route

30
00:01:20.750 --> 00:01:22.830
or false otherwise.

31
00:01:22.830 --> 00:01:24.650
And the nice thing here is that Okta

32
00:01:24.650 --> 00:01:28.510
provides a route guard implementation, OktaAuthGuard

33
00:01:28.510 --> 00:01:30.773
and we'll use this in our application.

34
00:01:34.160 --> 00:01:37.120
For route guard, let's take a look at a quick example.

35
00:01:37.120 --> 00:01:38.750
So here's a link to a route.

36
00:01:38.750 --> 00:01:40.460
We'll have a button called member

37
00:01:40.460 --> 00:01:44.340
and there'll be a router link to the routes members.

38
00:01:44.340 --> 00:01:46.410
Now here's our route guard configuration.

39
00:01:46.410 --> 00:01:48.100
So the path of members,

40
00:01:48.100 --> 00:01:50.860
the component of members page component,

41
00:01:50.860 --> 00:01:52.684
and then we'll have this route guard

42
00:01:52.684 --> 00:01:54.600
canActivate, OktaAuthGuard

43
00:01:54.600 --> 00:01:57.670
So if authenticated, it will give access to the route.

44
00:01:57.670 --> 00:02:00.273
Else will send the user to the login page.

45
00:02:03.760 --> 00:02:04.910
All righty, so let's pull this together

46
00:02:04.910 --> 00:02:06.730
with our development process.

47
00:02:06.730 --> 00:02:07.563
So in step one

48
00:02:07.563 --> 00:02:10.160
we're going to generate our members page component.

49
00:02:10.160 --> 00:02:13.620
Then we'll update the template text and the HTML page.

50
00:02:13.620 --> 00:02:15.390
Next we'll add the member button

51
00:02:15.390 --> 00:02:17.300
to the login status component.

52
00:02:17.300 --> 00:02:19.610
And then finally we'll define the protected route

53
00:02:19.610 --> 00:02:21.323
for the members page component.

54
00:02:24.660 --> 00:02:26.950
Alrighty, step one of generating the members page component.

55
00:02:26.950 --> 00:02:29.250
This is really simple, very straightforward.

56
00:02:29.250 --> 00:02:32.750
Use the Angular CLI and do the ng generate component

57
00:02:32.750 --> 00:02:35.223
components/members page.

58
00:02:38.010 --> 00:02:38.843
So in step two

59
00:02:38.843 --> 00:02:41.840
we're going to update the template text in the HTML page.

60
00:02:41.840 --> 00:02:44.240
So here, this is just very basic HTML.

61
00:02:44.240 --> 00:02:46.680
We're telling the user, "Hey, Members special.

62
00:02:46.680 --> 00:02:48.280
Thank you for being a member.

63
00:02:48.280 --> 00:02:49.890
Member discounts are coming soon."

64
00:02:49.890 --> 00:02:50.723
Blah, blah, blah.

65
00:02:50.723 --> 00:02:53.313
We simply write the HTML for this given page.

66
00:02:57.730 --> 00:02:58.563
Then in step three

67
00:02:58.563 --> 00:03:01.920
we add the members button to the login status component.

68
00:03:01.920 --> 00:03:03.010
So we've already done some work

69
00:03:03.010 --> 00:03:04.140
in the login status component.

70
00:03:04.140 --> 00:03:07.680
We'll add this new button here, button member.

71
00:03:07.680 --> 00:03:10.790
That'll be a router link to /members.

72
00:03:10.790 --> 00:03:13.120
And so when they click on this given button here for member

73
00:03:13.120 --> 00:03:16.673
then we'll show them that given members only page.

74
00:03:19.830 --> 00:03:20.930
And now the important piece

75
00:03:20.930 --> 00:03:23.410
of all this is step four of defining a protected route

76
00:03:23.410 --> 00:03:25.570
for the members page component.

77
00:03:25.570 --> 00:03:28.680
So here we have our route that defined members component,

78
00:03:28.680 --> 00:03:30.130
members page component.

79
00:03:30.130 --> 00:03:31.800
And then we'll make use of this route guard,

80
00:03:31.800 --> 00:03:34.300
canActivate the OktaAuthGuard.

81
00:03:34.300 --> 00:03:37.700
So again, if authenticated it will give access to the route.

82
00:03:37.700 --> 00:03:40.343
Else will send the user to the login page.

83
00:03:44.500 --> 00:03:46.490
Now, if you'd like to get some more details here

84
00:03:46.490 --> 00:03:47.750
on the Angular route guards

85
00:03:47.750 --> 00:03:50.100
you can see this link that I have on the slide.

86
00:03:51.610 --> 00:03:53.290
And also if you'd like to get more details

87
00:03:53.290 --> 00:03:55.370
on the OktaAuthGuard, see the link here.

88
00:03:55.370 --> 00:03:56.203
So both of these things

89
00:03:56.203 --> 00:03:59.050
so basically redirect you to the official documentation

90
00:03:59.050 --> 00:04:00.800
for these appropriate route guards.

91
00:04:02.680 --> 00:04:04.110
Alrighty, so this looks pretty good.

92
00:04:04.110 --> 00:04:05.560
Let's go ahead and move into the next video

93
00:04:05.560 --> 00:04:07.260
and let's start writing some code.

