1
00:00:01,130 --> 00:00:02,150
<v Instructor>Alrighty, so let's get started</v>

2
00:00:02,150 --> 00:00:03,560
with our Development Process.

3
00:00:03,560 --> 00:00:05,610
So in this video, we'll cover the first two steps

4
00:00:05,610 --> 00:00:06,890
of defining the routes

5
00:00:06,890 --> 00:00:10,353
and also configuring a router based on our routes.

6
00:00:12,297 --> 00:00:13,150
Al righty so let's go ahead

7
00:00:13,150 --> 00:00:15,713
and swing in to Visual Studio Code.

8
00:00:16,610 --> 00:00:19,053
So it's step one of defining our routes.

9
00:00:25,130 --> 00:00:28,793
So we'll open up this file here, app.module.ts.

10
00:00:32,110 --> 00:00:34,523
I'll zoom out a bit and expand my window.

11
00:00:40,840 --> 00:00:43,593
So I just move in here and I'll define my routes.

12
00:00:50,220 --> 00:00:53,400
So it's simply an array of route items.

13
00:00:53,400 --> 00:00:55,920
So I just give a comma-delimited list here,

14
00:00:55,920 --> 00:00:57,050
but first let me go ahead

15
00:00:57,050 --> 00:01:00,983
and perform an import for this routes.

16
00:01:02,370 --> 00:01:06,110
So I'll have routes and router module from

17
00:01:11,910 --> 00:01:13,660
angular/router.

18
00:01:13,660 --> 00:01:16,483
So that should resolve the import issue there.

19
00:01:21,090 --> 00:01:23,120
All righty, so let's go ahead and dig in here,

20
00:01:23,120 --> 00:01:27,603
so I'm going to create a comma-delimited list of route items.

21
00:01:28,730 --> 00:01:31,083
So I specify the path and the component.

22
00:01:45,410 --> 00:01:48,323
So the first item I enter here is for category/:id.

23
00:01:50,710 --> 00:01:52,940
So that's the actual path to match

24
00:01:54,580 --> 00:01:56,140
and then when the path matches

25
00:01:56,140 --> 00:01:57,560
it's going to create a new instance

26
00:01:57,560 --> 00:01:59,773
of our product list component.

27
00:02:09,819 --> 00:02:11,560
And now I just do a little quick copy paste here

28
00:02:11,560 --> 00:02:12,993
x number of times.

29
00:02:21,080 --> 00:02:24,270
So I'll set up a route for just category by itself

30
00:02:24,270 --> 00:02:27,163
and also a route for products by itself.

31
00:02:29,360 --> 00:02:31,970
And both of these will go to ProductListComponent.

32
00:02:31,970 --> 00:02:33,790
Internally we'll set up the default value

33
00:02:33,790 --> 00:02:35,420
for category id.

34
00:02:35,420 --> 00:02:36,620
We'll see that in a bit.

35
00:02:40,950 --> 00:02:42,900
And I'll add two more paths here again,

36
00:02:42,900 --> 00:02:44,420
little copy paste,

37
00:02:44,420 --> 00:02:46,410
and so this will be for the empty paths,

38
00:02:46,410 --> 00:02:47,920
so if they don't give us anything,

39
00:02:47,920 --> 00:02:50,853
they were simply going to redirectTo /products.

40
00:02:56,670 --> 00:02:58,360
And remember this is the one case

41
00:02:58,360 --> 00:03:00,760
where the rule doesn't apply,

42
00:03:00,760 --> 00:03:04,080
so for redirects you can use the forward slash

43
00:03:04,080 --> 00:03:06,270
starting on the routes.

44
00:03:06,270 --> 00:03:08,900
And then we have pathMatch equals full,

45
00:03:08,900 --> 00:03:12,833
so match the full path as opposed to just the prefix.

46
00:03:14,520 --> 00:03:16,690
And now we add our generic wild card,

47
00:03:16,690 --> 00:03:17,943
the star star.

48
00:03:18,890 --> 00:03:20,130
And we'll do a similar thing here,

49
00:03:20,130 --> 00:03:23,303
we'll do a redirectTo /products.

50
00:03:31,010 --> 00:03:32,810
So effectively if they don't give a path,

51
00:03:32,810 --> 00:03:34,600
we'll send it to products

52
00:03:34,600 --> 00:03:36,260
of if they don't match on anything,

53
00:03:36,260 --> 00:03:37,560
we'll send it to products.

54
00:03:39,850 --> 00:03:41,630
Again it's just the generic wild card,

55
00:03:41,630 --> 00:03:43,400
it'll match on anything that didn't match

56
00:03:43,400 --> 00:03:44,943
the above routes.

57
00:03:48,100 --> 00:03:49,690
And then also just as a reminder,

58
00:03:49,690 --> 00:03:51,620
the order of the routes is important.

59
00:03:51,620 --> 00:03:54,270
So the first match wins top down,

60
00:03:54,270 --> 00:03:55,430
so when you define your routes,

61
00:03:55,430 --> 00:03:59,193
you start by defining the most specific to generic.

62
00:04:02,400 --> 00:04:03,400
All righty, now step two,

63
00:04:03,400 --> 00:04:05,873
configure the router based on our routes.

64
00:04:10,400 --> 00:04:12,600
So I moved down here to the import section

65
00:04:13,650 --> 00:04:16,003
and I'll say RouterModule.forRoot.

66
00:04:23,830 --> 00:04:24,840
And I simply get the routes

67
00:04:24,840 --> 00:04:26,690
that we defined a little bit earlier.

68
00:04:36,240 --> 00:04:38,210
So I just add a comma there to the end of it

69
00:04:38,210 --> 00:04:39,670
and that's pretty much it.

70
00:04:39,670 --> 00:04:41,260
So we took care of the first two steps

71
00:04:41,260 --> 00:04:43,020
of defining our routes

72
00:04:43,020 --> 00:04:45,070
and then configuring the router

73
00:04:45,070 --> 00:04:47,373
based on our given routes.

