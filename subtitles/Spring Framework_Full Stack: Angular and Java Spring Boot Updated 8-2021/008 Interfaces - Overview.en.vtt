WEBVTT
1
00:00:01.150 --> 00:00:02.550
<v Instructor>In this video, we'll learn how to use</v>

2
00:00:02.550 --> 00:00:04.253
interfaces with TypeScript.

3
00:00:07.320 --> 00:00:09.540
So TypeScript supports interfaces.

4
00:00:09.540 --> 00:00:12.320
So we define an interface with a method contract

5
00:00:12.320 --> 00:00:13.820
and then the classes will implement

6
00:00:13.820 --> 00:00:16.600
the interface accordingly and a class can implement

7
00:00:16.600 --> 00:00:19.023
multiple interfaces in TypeScript.

8
00:00:20.550 --> 00:00:22.540
TypeScript can also use interfaces

9
00:00:22.540 --> 00:00:24.830
to support contracts with properties.

10
00:00:24.830 --> 00:00:26.670
So for examples of properties,

11
00:00:26.670 --> 00:00:28.303
see the link here on the slide.

12
00:00:31.610 --> 00:00:33.650
Okay, so let's go ahead and look at interfaces,

13
00:00:33.650 --> 00:00:35.720
and in particular, making use of interfaces

14
00:00:35.720 --> 00:00:37.303
with method contracts.

15
00:00:39.700 --> 00:00:41.980
All right, so we'll have this interface here for Coach.

16
00:00:41.980 --> 00:00:45.350
And so there's a method called getDailyWorkout().

17
00:00:45.350 --> 00:00:47.560
So all classes that implement the interface

18
00:00:47.560 --> 00:00:50.510
must implement the method getDailyWorkout().

19
00:00:50.510 --> 00:00:52.760
So here on the bottom left, we have the Cricket Coach,

20
00:00:52.760 --> 00:00:54.710
they'll give their own daily workout,

21
00:00:54.710 --> 00:00:56.970
and then the Golf Coach will give their own

22
00:00:56.970 --> 00:00:58.320
respective daily workout.

23
00:00:58.320 --> 00:01:00.210
And again, these are different workouts

24
00:01:00.210 --> 00:01:02.003
because these are different sports.

25
00:01:06.060 --> 00:01:08.373
So up top, I'll create my Coach interface.

26
00:01:09.510 --> 00:01:12.520
And I'll have a method here getDailyWorkout() string.

27
00:01:12.520 --> 00:01:14.920
There's no body, there's no implementation code.

28
00:01:16.100 --> 00:01:18.320
And then at the bottom left, I have my CricketCoach

29
00:01:18.320 --> 00:01:19.963
that implements Coach.

30
00:01:21.400 --> 00:01:23.580
So we're implementing the interface.

31
00:01:23.580 --> 00:01:26.280
And then we provide our method here getDailyWorkout().

32
00:01:26.280 --> 00:01:29.697
So we return "Practice your spin bowling technique."

33
00:01:33.850 --> 00:01:35.730
And then a similar thing here for GolfCoach.

34
00:01:35.730 --> 00:01:38.610
So GolfCoach implements Coach.

35
00:01:38.610 --> 00:01:40.667
And then getDailyWorkout() here says

36
00:01:40.667 --> 00:01:43.680
"Hit 100 balls at the golf range.".

37
00:01:46.481 --> 00:01:48.280
Now, let's kind of pull it all together

38
00:01:48.280 --> 00:01:49.670
with the main application.

39
00:01:49.670 --> 00:01:52.283
So on our Driver, we do our imports up top.

40
00:01:54.870 --> 00:01:57.030
Create myCricketCoach equals new CricketCoach().

41
00:01:57.030 --> 00:02:00.300
Now go console.log on getDailyWorkout().

42
00:02:00.300 --> 00:02:02.170
And a similar thing here for myGolfCoach

43
00:02:02.170 --> 00:02:04.400
equals a new GolfCoach, and then I call

44
00:02:04.400 --> 00:02:06.420
myGolfCoach.getDailyWorkout().

45
00:02:06.420 --> 00:02:07.630
And then this gives us the output here.

46
00:02:07.630 --> 00:02:09.640
So the first line is from CricketCoach,

47
00:02:09.640 --> 00:02:11.990
and then the second line is from the GolfCoach.

48
00:02:15.100 --> 00:02:17.380
Okay, so now let's create an array of Coaches.

49
00:02:17.380 --> 00:02:22.090
So in my ArrayDriver.cs, I have my two coaches created.

50
00:02:22.090 --> 00:02:24.940
Then I declare an array for coaches, initially empty.

51
00:02:24.940 --> 00:02:28.301
And I simply say theCoaches.push(myCricketCoach)

52
00:02:28.301 --> 00:02:29.651
and then push(myGolfCoach).

53
00:02:31.290 --> 00:02:32.700
And then I set up a for loop.

54
00:02:32.700 --> 00:02:36.730
So I have let tempCoach of theCoaches console.log

55
00:02:36.730 --> 00:02:38.720
tempCoach.getDailyWorkout().

56
00:02:38.720 --> 00:02:40.060
So this will print out the daily workout

57
00:02:40.060 --> 00:02:41.843
from each coach in our array.

58
00:02:44.270 --> 00:02:46.230
All right, let's go ahead and move into our IDE

59
00:02:46.230 --> 00:02:47.763
and let's write the code.

