WEBVTT
1
00:00:01.390 --> 00:00:03.590
<v Instructor>Okay, so let's move ahead to step three here.</v>

2
00:00:03.590 --> 00:00:05.640
We're going to set up our app configuration

3
00:00:05.640 --> 00:00:07.073
for OpenID Connect.

4
00:00:18.380 --> 00:00:19.220
All right, so let's go ahead

5
00:00:19.220 --> 00:00:20.963
and open up a new terminal window,

6
00:00:29.170 --> 00:00:31.803
and we'll simply generate a new file here.

7
00:00:35.483 --> 00:00:38.623
And I'll call it config/MyAppconfig.

8
00:00:43.060 --> 00:00:46.323
Sort of create this file here my app config.ts.

9
00:00:47.790 --> 00:00:50.350
Let's go ahead and take a look at it over here,

10
00:00:50.350 --> 00:00:54.113
the app config, my app config.ts, cool.

11
00:00:55.360 --> 00:00:59.923
Let me just exit the terminal real quick, already.

12
00:01:10.440 --> 00:01:13.970
So I'll make some slight mods here in this actual file,

13
00:01:13.970 --> 00:01:17.920
so I removed the interface in the MyAppConfig portion of it.

14
00:01:17.920 --> 00:01:19.970
I just remove that and replace it with default

15
00:01:19.970 --> 00:01:22.360
because we'll simply do a default export

16
00:01:22.360 --> 00:01:25.270
of this JSON structure here.

17
00:01:25.270 --> 00:01:29.790
So I'll define the JSON for OIDC, OpenID Connect.

18
00:01:29.790 --> 00:01:31.963
I set up a reference here for client ID,

19
00:01:35.680 --> 00:01:40.680
for issuer or redirect URI.

20
00:01:54.307 --> 00:01:59.307
So for redirect URI I will use this 4200login/callback

21
00:01:59.390 --> 00:02:02.350
and in for scopes, we'll give a list of the scopes.

22
00:02:02.350 --> 00:02:04.310
So effectively, what we're doing here is just setting up

23
00:02:04.310 --> 00:02:07.400
like a properties file or configuration file

24
00:02:07.400 --> 00:02:10.583
which is doing it via this JSON data structure.

25
00:02:17.820 --> 00:02:19.620
All right, now I need to fill in some blanks here

26
00:02:19.620 --> 00:02:21.970
for the client ID and the issuer

27
00:02:21.970 --> 00:02:25.123
and we can get this information from our Okta dashboard.

28
00:02:26.160 --> 00:02:29.420
So I'll swim back over here to the dashboard and up top.

29
00:02:33.440 --> 00:02:35.360
So the one thing I'm going to need here

30
00:02:35.360 --> 00:02:37.910
is I'll need the client ID.

31
00:02:37.910 --> 00:02:41.090
So this is the public identifier for the client application.

32
00:02:41.090 --> 00:02:43.093
I'll simply copy that to the clipboard,

33
00:02:44.980 --> 00:02:46.483
swing back to my app,

34
00:02:48.690 --> 00:02:50.790
and I'll just paste it here for client ID.

35
00:02:51.700 --> 00:02:54.470
This should have used the values from your dev console.

36
00:02:54.470 --> 00:02:57.060
Your values will be different than mine, okay?

37
00:02:57.060 --> 00:02:59.910
So just kind of copy paste as they have the dashboard

38
00:02:59.910 --> 00:03:01.060
and you should be okay.

39
00:03:05.740 --> 00:03:08.260
All right in so I'll also need information

40
00:03:08.260 --> 00:03:11.293
as far as my dev domain here, my Okta domain,

41
00:03:13.210 --> 00:03:15.893
so I just copy this section also,

42
00:03:19.890 --> 00:03:22.263
then I'll swing back over to my app.

43
00:03:23.120 --> 00:03:25.410
So I'll paste that here for a second

44
00:03:25.410 --> 00:03:27.750
and then I need to fill out some other items here.

45
00:03:27.750 --> 00:03:32.750
So this is going to be HTTPS slash whatever my dev domain is

46
00:03:42.620 --> 00:03:46.693
until the (indistinct) say /oauth2/default.

47
00:03:50.050 --> 00:03:51.850
All right so just a description here,

48
00:03:51.850 --> 00:03:54.550
the client IDs, the public identifier, the client app,

49
00:03:56.890 --> 00:03:59.720
and then also the issuer is the issuer of tokens.

50
00:03:59.720 --> 00:04:01.980
That's the URL that we'll use when authorizing

51
00:04:01.980 --> 00:04:03.993
with the Okta authorization server.

52
00:04:07.330 --> 00:04:08.990
And the redirect URIs basically

53
00:04:08.990 --> 00:04:11.540
where they're going to send the user once they log in.

54
00:04:15.240 --> 00:04:17.300
And remember the scopes provide access

55
00:04:17.300 --> 00:04:19.050
to information about a user.

56
00:04:19.050 --> 00:04:20.610
So we have three scopes here,

57
00:04:20.610 --> 00:04:23.480
open ID that's required for authentication requests.

58
00:04:23.480 --> 00:04:25.040
We also have the profiles scope

59
00:04:25.040 --> 00:04:26.900
that has a user's first name, last name,

60
00:04:26.900 --> 00:04:28.380
phone number, et cetera.

61
00:04:28.380 --> 00:04:31.050
And also we have the emails scope that of course,

62
00:04:31.050 --> 00:04:33.483
contains the user's email address.

