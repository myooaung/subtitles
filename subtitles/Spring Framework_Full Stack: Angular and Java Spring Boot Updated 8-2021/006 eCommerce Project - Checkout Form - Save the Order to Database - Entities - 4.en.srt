1
00:00:01,180 --> 00:00:02,450
<v Instructor>Alrighty, so there was a bit more work</v>

2
00:00:02,450 --> 00:00:04,120
we have to do here in order item

3
00:00:04,120 --> 00:00:06,170
and that's mainly setting up the relationship

4
00:00:06,170 --> 00:00:08,303
between order and order item.

5
00:00:09,150 --> 00:00:12,920
So, it's really a many-to-one

6
00:00:12,920 --> 00:00:15,403
coming from the side of order item.

7
00:00:17,420 --> 00:00:20,460
So going from orders to order item is one-to-many,

8
00:00:20,460 --> 00:00:24,113
going from order item to order is many-to-one.

9
00:00:33,670 --> 00:00:37,603
And then we simply use the actual join column name here

10
00:00:37,603 --> 00:00:38,436
and the join column is order_ID.

11
00:00:54,579 --> 00:00:58,746
Now our order is also associated with the customer

12
00:01:14,750 --> 00:01:17,800
and then also an order is associated with shipping address

13
00:01:17,800 --> 00:01:19,493
and a billing address.

14
00:01:36,510 --> 00:01:41,020
Then I'll set up the relationship, so an order has

15
00:01:41,020 --> 00:01:43,370
a many-to-one relationship with customer

16
00:01:44,330 --> 00:01:46,230
and the join column is on customer_ID.

17
00:02:01,940 --> 00:02:04,690
Now let's go ahead and look at our customer class here.

18
00:02:10,130 --> 00:02:14,010
So in our customer, we'll set up a collection of orders

19
00:02:30,620 --> 00:02:33,290
and the relationship we'll use here is one-to-many

20
00:02:35,100 --> 00:02:37,913
and this will be mapped by the customer,

21
00:02:38,860 --> 00:02:41,920
that's defined in the given order.

22
00:02:41,920 --> 00:02:45,113
And we'll also set up our cascade type to cascade all.

23
00:03:00,750 --> 00:03:03,793
And I'll simply just initialize this collection here.

24
00:03:05,180 --> 00:03:08,710
And I'll also go through and add a convenience method

25
00:03:08,710 --> 00:03:11,840
for adding new orders for this customer

26
00:03:11,840 --> 00:03:13,750
and again, it's just a convenience method,

27
00:03:13,750 --> 00:03:15,900
we could use it in the future if we'd like.

28
00:03:58,026 --> 00:03:59,390
So we simply pass in an order,

29
00:03:59,390 --> 00:04:01,380
make sure order is not equal to null,

30
00:04:01,380 --> 00:04:04,640
if orders, the collection is null, we create a new one.

31
00:04:04,640 --> 00:04:06,230
We do orders.add the order

32
00:04:06,230 --> 00:04:09,320
and then we also set our reference on the customer

33
00:04:09,320 --> 00:04:10,670
so order.setCustomer(this).

34
00:04:16,997 --> 00:04:21,330
All right, so let's go ahead and move back to order.

35
00:04:29,900 --> 00:04:34,220
And let's set up the relationships here between order

36
00:04:34,220 --> 00:04:38,563
and our shipping address and billing address.

37
00:04:41,890 --> 00:04:44,520
So the shipping address is a one-to-one relationship

38
00:05:04,200 --> 00:05:05,960
and the join column that we're using here

39
00:05:05,960 --> 00:05:08,640
is the shipping address ID that's defined here

40
00:05:08,640 --> 00:05:09,710
in this order table

41
00:05:11,620 --> 00:05:13,460
and then the reference column name is the ID

42
00:05:13,460 --> 00:05:15,723
defined in the actual address table.

43
00:05:19,290 --> 00:05:21,640
So I can just copy this and apply the same

44
00:05:21,640 --> 00:05:23,330
for billing address.

45
00:05:23,330 --> 00:05:26,050
I'll simply make the one small change here on the name,

46
00:05:26,050 --> 00:05:27,880
so that will be billing address ID

47
00:05:30,570 --> 00:05:32,870
and then everything else there stays the same.

48
00:05:40,780 --> 00:05:43,700
Okay, so let's move into address.java

49
00:05:43,700 --> 00:05:47,320
and set up the relationship between the address

50
00:05:47,320 --> 00:05:48,713
and the order.

51
00:05:54,990 --> 00:05:56,730
And this is going to be a one-to-one

52
00:06:03,390 --> 00:06:06,963
and then here we have primary key join column.

53
00:06:09,690 --> 00:06:13,560
So, we'll basically join based on the ID of the order

54
00:06:13,560 --> 00:06:16,920
and also the ID of the address

55
00:06:16,920 --> 00:06:19,240
and so we basically just kind of default

56
00:06:19,240 --> 00:06:21,500
and use the same name for those primary keys

57
00:06:21,500 --> 00:06:24,920
and hibernate or figure out the actual add ID

58
00:06:24,920 --> 00:06:26,653
for each one of these entities.

59
00:06:29,470 --> 00:06:31,700
Okay, great, so this takes care of the relationship

60
00:06:31,700 --> 00:06:33,930
between address and order,

61
00:06:33,930 --> 00:06:36,070
and that applies for our billing address

62
00:06:36,070 --> 00:06:37,553
and shipping address.

