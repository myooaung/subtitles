1
00:00:01,870 --> 00:00:03,650
<v Chad>Alrighty, so now moving ahead to step two,</v>

2
00:00:03,650 --> 00:00:06,890
defining the Getter methods to access the form controls.

3
00:00:06,890 --> 00:00:08,540
So here for get firstName,

4
00:00:08,540 --> 00:00:12,070
we return checkoutForm.get, customer.firstName.

5
00:00:12,070 --> 00:00:13,440
So how did I arrive at this?

6
00:00:13,440 --> 00:00:14,963
So let's break it down a bit.

7
00:00:16,480 --> 00:00:19,110
So we have this.checkoutFormGroup,

8
00:00:19,110 --> 00:00:21,500
so that's how that part matches up.

9
00:00:21,500 --> 00:00:24,790
And then for customer, it's a group, so customer,

10
00:00:24,790 --> 00:00:27,240
and then the form control is firstName.

11
00:00:27,240 --> 00:00:29,997
So that's how we have customer.firstName.

12
00:00:33,260 --> 00:00:36,010
And then we simply repeat the process here for lastName

13
00:00:37,500 --> 00:00:40,130
and then a similar thing here for email.

14
00:00:40,130 --> 00:00:42,870
And we'll actually use these Getter methods

15
00:00:42,870 --> 00:00:46,380
in our HTML template when we access the form controls

16
00:00:46,380 --> 00:00:47,900
to try and get the actual status

17
00:00:47,900 --> 00:00:50,083
and list of errors and so on.

18
00:00:52,660 --> 00:00:54,830
Alrighty, step three of updating the HTML templates

19
00:00:54,830 --> 00:00:56,430
to display the error messages.

20
00:00:56,430 --> 00:00:58,220
So here's the example here for firstName,

21
00:00:58,220 --> 00:01:00,620
the firstName form control.

22
00:01:00,620 --> 00:01:02,710
And so if the validation fails,

23
00:01:02,710 --> 00:01:04,993
then let's display error messages here.

24
00:01:07,350 --> 00:01:11,020
So here we have firstName.invalid.

25
00:01:11,020 --> 00:01:13,470
So hey, did the validations fail

26
00:01:13,470 --> 00:01:15,163
for this given form control?

27
00:01:16,500 --> 00:01:17,690
And there's also some other things

28
00:01:17,690 --> 00:01:19,090
that we need to be aware of here.

29
00:01:19,090 --> 00:01:21,660
So we only want to display validation errors

30
00:01:21,660 --> 00:01:23,490
if the user has interacted with the form.

31
00:01:23,490 --> 00:01:26,360
So when the user changes the field value,

32
00:01:26,360 --> 00:01:28,510
the control is marked as dirty.

33
00:01:28,510 --> 00:01:30,100
When the field loses focus,

34
00:01:30,100 --> 00:01:32,273
the control is marked as touched.

35
00:01:34,110 --> 00:01:36,490
So let's break this down in this example here.

36
00:01:36,490 --> 00:01:40,603
So firstName.dirty, so did the user change the field value?

37
00:01:42,090 --> 00:01:46,870
Or firstName.touched, did the field lose focus?

38
00:01:46,870 --> 00:01:50,360
So in this case we can actually display the error messages.

39
00:01:50,360 --> 00:01:54,430
We need to find out which specific validation failed here.

40
00:01:54,430 --> 00:01:56,370
So I can make use of the errors object.

41
00:01:56,370 --> 00:01:59,490
So the errors object contains a list of validations

42
00:01:59,490 --> 00:02:02,480
that failed for this given form control.

43
00:02:02,480 --> 00:02:05,710
So here, I'm saying firstName.errors.required.

44
00:02:05,710 --> 00:02:08,820
That says, Hey, the required validation failed.

45
00:02:08,820 --> 00:02:11,690
So in that case, I can give my specific error message here

46
00:02:11,690 --> 00:02:14,670
to the user, Hey, First Name is required.

47
00:02:14,670 --> 00:02:17,670
And this error message will show up on the form accordingly.

48
00:02:18,970 --> 00:02:20,871
And then we can do a similar thing here,

49
00:02:20,871 --> 00:02:22,280
firstName.errors.minLength.

50
00:02:22,280 --> 00:02:25,140
So, Hey, did the minimum length validation fail?

51
00:02:25,140 --> 00:02:26,040
If so then I'll say,

52
00:02:26,040 --> 00:02:28,653
Hey, First name must be at least 2 characters long.

53
00:02:30,230 --> 00:02:32,260
And then you can simply repeat the process

54
00:02:32,260 --> 00:02:34,353
for the other fields that you have.

55
00:02:37,740 --> 00:02:40,313
And we'll actually do this here for email address.

56
00:02:41,430 --> 00:02:43,860
So here I have this form control for email

57
00:02:43,860 --> 00:02:46,810
and say email.invalid, so on and so forth.

58
00:02:46,810 --> 00:02:49,920
And then I basically say email.errors.required

59
00:02:49,920 --> 00:02:53,110
or email.errors.pattern, so that pattern.

60
00:02:53,110 --> 00:02:57,003
And so we give the appropriate messages there to the user.

61
00:03:00,030 --> 00:03:01,480
Alrighty, we're almost done.

62
00:03:01,480 --> 00:03:03,480
In step four, I'm going to add the event handler

63
00:03:03,480 --> 00:03:05,940
to check the validation on submit.

64
00:03:05,940 --> 00:03:08,480
So in my onSubmit method, I basically make use

65
00:03:08,480 --> 00:03:12,550
of if this.checkoutFormGroup.invalid,

66
00:03:12,550 --> 00:03:13,694
then in that case, I'll say

67
00:03:13,694 --> 00:03:17,290
checkoutFormGroup.markAllAsTouched.

68
00:03:17,290 --> 00:03:20,310
So by touching all the fields, this will actually trigger

69
00:03:20,310 --> 00:03:23,963
the display of the error messages on the actual screen.

70
00:03:25,790 --> 00:03:28,390
And that's basically it there for the form validation.

71
00:03:28,390 --> 00:03:30,030
So what we'll do is we'll move into the next video,

72
00:03:30,030 --> 00:03:31,340
and we'll start writing this code.

73
00:03:31,340 --> 00:03:34,910
And we'll start adding some validation to our checkout form.

74
00:03:34,910 --> 00:03:37,143
So I'll see you in the next video!

