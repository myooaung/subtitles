WEBVTT
1
00:00:01.390 --> 00:00:02.930
<v Narrator>All right, lets make use</v>

2
00:00:02.930 --> 00:00:07.410
of the tsconfig.json file to configure our compiler options.

3
00:00:07.410 --> 00:00:10.090
So instead of listing them all on the command line,

4
00:00:10.090 --> 00:00:12.760
we'll simply place it in a configuration file,

5
00:00:12.760 --> 00:00:15.003
and that's the tsconfig.json.

6
00:00:16.190 --> 00:00:17.800
So, let's zoom in here and take care

7
00:00:17.800 --> 00:00:19.030
of some housekeeping work.

8
00:00:19.030 --> 00:00:22.073
So I simply want to copy paste my previous project,

9
00:00:33.810 --> 00:00:35.953
and then I'll just rename the project,

10
00:00:39.759 --> 00:00:41.443
and I'll call it 03-tsconfig.

11
00:00:46.840 --> 00:00:49.200
And, initially the IDE will show errors.

12
00:00:49.200 --> 00:00:50.770
Just close the previous files

13
00:00:50.770 --> 00:00:52.533
and those errors should go away.

14
00:00:56.510 --> 00:00:59.030
And now, let's move over to our terminal window,

15
00:00:59.030 --> 00:01:00.540
and I want to move into the directory

16
00:01:00.540 --> 00:01:04.273
04-classes/03-tsconfig.

17
00:01:09.460 --> 00:01:10.480
And just as a checkpoint,

18
00:01:10.480 --> 00:01:12.830
make sure you're in the correct directory here.

19
00:01:16.920 --> 00:01:17.980
And let's go ahead and remove

20
00:01:17.980 --> 00:01:21.393
the previous .jsfile, customer.js.

21
00:01:24.210 --> 00:01:26.053
Now let's compile our code,

22
00:01:29.230 --> 00:01:31.990
and we'll see these compiler errors,

23
00:01:31.990 --> 00:01:34.960
and it's saying hey, the accesses are only available

24
00:01:34.960 --> 00:01:38.180
when targeting ex5 and higher, blah blah blah.

25
00:01:38.180 --> 00:01:40.730
So, we need to set some compiler flags accordingly.

26
00:01:49.650 --> 00:01:52.600
So now, let's make use of the tsconfig.json file,

27
00:01:52.600 --> 00:01:55.510
and remember we can actually generate a template file

28
00:01:55.510 --> 00:01:58.890
by using this tsc --init.

29
00:01:58.890 --> 00:02:00.230
So it says here it successfully

30
00:02:00.230 --> 00:02:02.560
created the file for us which is great,

31
00:02:02.560 --> 00:02:04.783
and now I can actually open this file,

32
00:02:08.550 --> 00:02:10.810
and we'll see they'll give us the basics here

33
00:02:10.810 --> 00:02:13.410
along with a lot of information here that's commented out,

34
00:02:13.410 --> 00:02:15.320
so you can simply read the documentation

35
00:02:15.320 --> 00:02:17.963
to see what those different items are for.

36
00:02:20.490 --> 00:02:23.893
But we have the target es5 up top which is good.

37
00:02:25.180 --> 00:02:30.030
And then I'll also add the noemitonerror configuration,

38
00:02:31.320 --> 00:02:33.163
and I'll set that value to true.

39
00:02:38.480 --> 00:02:41.090
So now the nice thing about having this configuration here

40
00:02:41.090 --> 00:02:43.030
is that I don't have to manually list

41
00:02:43.030 --> 00:02:45.540
all of these options on the command line.

42
00:02:45.540 --> 00:02:47.720
I can simply compile and it'll make use

43
00:02:47.720 --> 00:02:50.263
of the configurations to find in this file.

44
00:02:57.220 --> 00:02:59.130
So here I simply give tsc,

45
00:02:59.130 --> 00:03:00.890
and remember by default it's going to compile

46
00:03:00.890 --> 00:03:03.743
all startup ts files, which is great.

47
00:03:08.440 --> 00:03:10.920
And now I can simply run the application

48
00:03:10.920 --> 00:03:13.403
by saying node Customer.js.

49
00:03:15.270 --> 00:03:16.250
Okay, this is great.

50
00:03:16.250 --> 00:03:18.650
So again, the benefit of using the tsconfig

51
00:03:18.650 --> 00:03:20.880
is that you can set up your compiler options

52
00:03:20.880 --> 00:03:22.420
in a configuration file.

53
00:03:22.420 --> 00:03:24.983
No need to manually list them on the command line.

