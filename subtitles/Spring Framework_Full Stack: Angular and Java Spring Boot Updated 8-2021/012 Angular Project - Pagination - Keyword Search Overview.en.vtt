WEBVTT
1
00:00:01.270 --> 00:00:02.330
<v Instructor>In this video we'll cover</v>

2
00:00:02.330 --> 00:00:04.413
pagination for keyword search.

3
00:00:07.520 --> 00:00:09.230
So we've done a lot of work with pagination

4
00:00:09.230 --> 00:00:11.200
but that was only for listing the products.

5
00:00:11.200 --> 00:00:14.283
Now we'll add pagination support for the keyword search.

6
00:00:16.970 --> 00:00:18.940
So here's our development process.

7
00:00:18.940 --> 00:00:20.930
In step one, we're going to add pagination support

8
00:00:20.930 --> 00:00:23.220
to the ProductService, and then we'll update

9
00:00:23.220 --> 00:00:25.840
our ProductListComponent to handle pagination

10
00:00:25.840 --> 00:00:28.130
and a lot of the coding will be similar to what we did

11
00:00:28.130 --> 00:00:30.080
in the previous videos for listing products,

12
00:00:30.080 --> 00:00:32.030
we'll simply update it to handle the case

13
00:00:32.030 --> 00:00:33.793
of searching for products.

14
00:00:36.680 --> 00:00:38.930
All right, step one of adding pagination support

15
00:00:38.930 --> 00:00:41.486
to the ProductService, we'll add this new method,

16
00:00:41.486 --> 00:00:43.290
searchProductsPaginate.

17
00:00:43.290 --> 00:00:45.220
We'll pass in parameters for pagination,

18
00:00:45.220 --> 00:00:48.910
thePage, thePageSize, and the search keyword.

19
00:00:48.910 --> 00:00:51.330
We'll use that to build up our searchURL

20
00:00:51.330 --> 00:00:53.300
and also, remember here, out of the box

21
00:00:53.300 --> 00:00:55.220
Spring Data REST supports pagination,

22
00:00:55.220 --> 00:00:57.620
so all we have to do is send over the parameters

23
00:00:57.620 --> 00:00:59.363
for page and size.

24
00:01:02.870 --> 00:01:04.130
All righty, step two of updating

25
00:01:04.130 --> 00:01:07.230
the ProductListComponent to handle pagination,

26
00:01:07.230 --> 00:01:09.600
so inside of our handleSearchProducts method

27
00:01:09.600 --> 00:01:12.750
we call the service and we pass in those parameters,

28
00:01:12.750 --> 00:01:15.340
so we have thePageNumber, PageSize, and Keyword

29
00:01:15.340 --> 00:01:17.530
and then remember we have to decrement the page number

30
00:01:17.530 --> 00:01:19.700
by one because the pagination component,

31
00:01:19.700 --> 00:01:22.600
the pages are 1 based and Spring Data REST the pages

32
00:01:22.600 --> 00:01:25.513
are 0 based, but we've discussed all of this before.

33
00:01:27.640 --> 00:01:30.660
Then we'll do a .subscribe, we call this.processResult

34
00:01:30.660 --> 00:01:32.850
and that's the same method from the previous videos,

35
00:01:32.850 --> 00:01:35.010
basically taking that JSON response

36
00:01:35.010 --> 00:01:37.800
and then simply mapping that over to our fields here

37
00:01:37.800 --> 00:01:39.373
and our angular component.

38
00:01:40.800 --> 00:01:42.140
All right, so that's it for our development.

39
00:01:42.140 --> 00:01:45.090
Let's go ahead and move into the IDE and let's get started.

