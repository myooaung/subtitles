1
00:00:01,240 --> 00:00:02,240
<v Instructor>Alrighty, so let's go ahead</v>

2
00:00:02,240 --> 00:00:03,830
and get started with our Development Process.

3
00:00:03,830 --> 00:00:07,593
So we'll go through these four steps here in this video.

4
00:00:17,290 --> 00:00:18,170
Alright, So let's go ahead

5
00:00:18,170 --> 00:00:19,830
and move into MySQL workbench

6
00:00:19,830 --> 00:00:21,930
and we're going to clean up some of our data.

7
00:00:32,850 --> 00:00:35,140
So I'll just tell it which database schema to use.

8
00:00:35,140 --> 00:00:36,758
I'll use full-stack-ecommerce

9
00:00:36,758 --> 00:00:40,543
and then we'll clean up previous database tables.

10
00:00:46,250 --> 00:00:48,630
I disabled the foreign key checks

11
00:00:48,630 --> 00:00:50,393
by setting that value to zero.

12
00:00:53,220 --> 00:00:55,040
And then I make use of this truncate

13
00:00:55,040 --> 00:00:59,150
to remove all rows from a given table.

14
00:00:59,150 --> 00:01:01,953
So I'll do a truncate on the customer

15
00:01:01,953 --> 00:01:04,863
and then I just do this X number of times.

16
00:01:11,460 --> 00:01:16,460
Orders, order item, and also address.

17
00:01:25,100 --> 00:01:29,160
And then I enable the foreign key checks.

18
00:01:29,160 --> 00:01:30,833
So set the value to one.

19
00:01:32,040 --> 00:01:32,980
Alright, so that's good.

20
00:01:32,980 --> 00:01:34,580
We're in pretty good shape here.

21
00:01:44,000 --> 00:01:44,833
And then in step two

22
00:01:44,833 --> 00:01:47,843
I'm going to make the email address unique.

23
00:01:48,750 --> 00:01:52,193
So I do an alter on our customer table.

24
00:01:53,730 --> 00:01:58,230
I say, "Add unique email".

25
00:01:58,230 --> 00:02:01,340
So here we're adding a database constraint such that,

26
00:02:01,340 --> 00:02:04,300
only unique email addresses can be added

27
00:02:04,300 --> 00:02:05,290
to this given table.

28
00:02:05,290 --> 00:02:08,973
If not, the MySQL database will throw an error.

29
00:02:12,096 --> 00:02:13,580
Go ahead and run that.

30
00:02:13,580 --> 00:02:14,520
And everything runs.

31
00:02:14,520 --> 00:02:15,980
We have greens all the way at the bottom.

32
00:02:15,980 --> 00:02:17,091
So, we're ALK and

33
00:02:17,091 --> 00:02:19,143
we're good to go.

34
00:02:21,820 --> 00:02:22,790
Alright. So in step three,

35
00:02:22,790 --> 00:02:24,110
we're going to add the methods

36
00:02:24,110 --> 00:02:25,610
of the customer repository to

37
00:02:25,610 --> 00:02:27,623
find by email.

38
00:02:30,790 --> 00:02:33,313
So I'll swing into intellij.

39
00:02:36,690 --> 00:02:38,710
And I need to move into my dao package,

40
00:02:38,710 --> 00:02:40,813
and open up my customer repository.

41
00:02:50,360 --> 00:02:51,660
So add this new method here,

42
00:02:51,660 --> 00:02:53,103
find by email.

43
00:03:04,694 --> 00:03:06,280
And so behind the scenes, here's what I'm going to do,

44
00:03:06,280 --> 00:03:08,910
I'll select star from customer where,

45
00:03:08,910 --> 00:03:12,630
email equals the email.

46
00:03:12,630 --> 00:03:14,000
And again that's some supreme magic

47
00:03:14,000 --> 00:03:15,393
that happens automatically.

48
00:03:16,740 --> 00:03:18,870
And then remember this method returns null

49
00:03:18,870 --> 00:03:19,703
if not found.

50
00:03:40,735 --> 00:03:43,430
So I move over here to my service package,

51
00:03:43,430 --> 00:03:45,530
and I'll open up this CheckoutServiceImpl.

52
00:03:50,290 --> 00:03:51,730
So just scroll to the top.

53
00:03:51,730 --> 00:03:52,740
Okay. This looks good.

54
00:03:52,740 --> 00:03:55,320
So I'm in CheckoutServiceImpl right now

55
00:03:55,320 --> 00:03:56,153
and I'll move down

56
00:03:56,153 --> 00:03:59,863
to this place order method and I'll make some changes there.

57
00:04:14,130 --> 00:04:15,084
Alright. So right here,

58
00:04:15,084 --> 00:04:18,840
after this customer assignment purchase,

59
00:04:18,840 --> 00:04:20,590
I get customer.

60
00:04:20,590 --> 00:04:22,490
Then, I need to check to see

61
00:04:22,490 --> 00:04:24,423
if this is an existing customer.

62
00:04:26,150 --> 00:04:28,500
And so we do all of this based on the email address.

63
00:04:28,500 --> 00:04:30,823
So I need to get the customer's email address.

64
00:04:41,160 --> 00:04:42,240
And now I need to see

65
00:04:42,240 --> 00:04:44,030
if this customer exists in the database

66
00:04:44,030 --> 00:04:45,530
by using customer repository that

67
00:04:45,530 --> 00:04:47,653
find by email the email.

68
00:04:48,530 --> 00:04:51,513
And so remember that method returns null if not found.

69
00:04:55,440 --> 00:04:56,532
So here I have, if customer

70
00:04:56,532 --> 00:04:59,110
from DB is not equal to null,

71
00:04:59,110 --> 00:05:00,220
then hey, we found them

72
00:05:00,220 --> 00:05:02,570
and let's go ahead and assign them accordingly.

73
00:05:06,570 --> 00:05:10,063
So I have customer equals customer from DB.

74
00:05:13,950 --> 00:05:16,220
So that's my customer from DB.

75
00:05:16,220 --> 00:05:19,070
And then I'm assigning it to the left-hand side customer.

76
00:05:23,960 --> 00:05:25,090
Alrighty. So zooming out,

77
00:05:25,090 --> 00:05:28,313
this is the new code that we just added for this feature.

78
00:05:29,670 --> 00:05:32,063
Alrighty. Looks pretty good. Good job.

