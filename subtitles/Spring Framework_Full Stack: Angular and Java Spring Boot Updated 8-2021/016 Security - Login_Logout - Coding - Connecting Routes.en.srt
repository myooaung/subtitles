1
00:00:01,310 --> 00:00:04,390
<v Instructor>Okay, we're finally at our last step here,</v>

2
00:00:04,390 --> 00:00:07,440
oof, we're finally at step seven of updating

3
00:00:07,440 --> 00:00:10,120
our app module configs to connect the routes,

4
00:00:10,120 --> 00:00:11,863
almost there, we're almost there.

5
00:00:25,040 --> 00:00:29,790
So let's go ahead and move over to our app module.tsfile.

6
00:00:38,608 --> 00:00:40,390
And this is kind of like our main configuration

7
00:00:40,390 --> 00:00:42,280
for setting up routes and so forth,

8
00:00:42,280 --> 00:00:45,060
so we'll add some updates here

9
00:00:45,060 --> 00:00:47,913
for the Okta login configuration.

10
00:00:53,080 --> 00:00:55,120
So I'll make some Okta imports here

11
00:00:55,120 --> 00:00:57,713
from the Okta angular SDK.

12
00:00:59,090 --> 00:01:01,640
So we have this Okta config, auth module

13
00:01:01,640 --> 00:01:02,950
and callback component

14
00:01:05,800 --> 00:01:08,350
and we'll use these in some of the upcoming coding.

15
00:01:30,890 --> 00:01:33,730
We also need to do an import here on this my app config

16
00:01:33,730 --> 00:01:36,123
that's that same file that we created earlier.

17
00:01:37,180 --> 00:01:39,590
Basically holding the properties here, the configs

18
00:01:39,590 --> 00:01:42,140
for our client application

19
00:01:45,890 --> 00:01:48,680
and we'll create this new Okta config here.

20
00:01:48,680 --> 00:01:50,310
I'll go ahead and write the code first

21
00:01:50,310 --> 00:01:51,870
then once I have the code written

22
00:01:51,870 --> 00:01:53,770
then I'll come back and talk about it.

23
00:03:11,760 --> 00:03:13,157
So we're basically saying,

24
00:03:13,157 --> 00:03:17,370
"Hey, let's create this new object on auth required."

25
00:03:17,370 --> 00:03:20,200
So when they try and log into our application

26
00:03:20,200 --> 00:03:22,200
and they haven't been authenticated,

27
00:03:22,200 --> 00:03:25,610
then we'll actually route them to the login page.

28
00:03:25,610 --> 00:03:27,380
And so in a second here, we'll connect the routes

29
00:03:27,380 --> 00:03:28,580
for a /login

30
00:03:28,580 --> 00:03:31,083
and also connect the routes for the callback.

31
00:03:35,660 --> 00:03:38,010
And also with this Okta config that we're setting up,

32
00:03:38,010 --> 00:03:41,685
we also want to pass in our open ID connect

33
00:03:41,685 --> 00:03:44,185
JSON configs that we created a little bit earlier.

34
00:03:49,300 --> 00:03:51,773
All right, so let's go ahead and connect the routes.

35
00:03:53,280 --> 00:03:55,773
So we have that login/call back.

36
00:04:06,400 --> 00:04:08,210
And so we'll have a user's component

37
00:04:09,053 --> 00:04:10,290
after callback component

38
00:04:15,117 --> 00:04:18,040
and then for login by itself,

39
00:04:18,040 --> 00:04:20,690
then we'll actually have them make a call to

40
00:04:20,690 --> 00:04:22,790
the log in component that we just created.

41
00:04:29,250 --> 00:04:31,470
Okay, so log in component is the one that we created

42
00:04:31,470 --> 00:04:33,820
in some previous videos, so that's our code

43
00:04:33,820 --> 00:04:36,533
and then there's also this Okta callback component.

44
00:04:39,200 --> 00:04:42,310
So this Okta callback component will be executed

45
00:04:42,310 --> 00:04:44,290
once the user has been authenticated

46
00:04:44,290 --> 00:04:46,410
and they're redirected to our application.

47
00:04:46,410 --> 00:04:49,300
Normally we'd have to write code to parse the response

48
00:04:49,300 --> 00:04:52,480
and store the OAuth and OIDC tokens

49
00:04:52,480 --> 00:04:54,240
but the Okta callback component

50
00:04:54,240 --> 00:04:55,420
will do all of that work for you,

51
00:04:55,420 --> 00:04:57,990
so that's why we're using the Okta callback component

52
00:04:57,990 --> 00:04:59,363
in this scenario.

