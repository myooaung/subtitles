WEBVTT
1
00:00:01.340 --> 00:00:02.507
<v Instructor>Alrighty,</v>

2
00:00:02.507 --> 00:00:05.030
in step two we need to create a class or ProductCategory.

3
00:00:05.030 --> 00:00:07.015
And this is code that we'll create

4
00:00:07.015 --> 00:00:08.365
in our Angular application.

5
00:00:09.440 --> 00:00:11.360
So remember in Angular we can create a class

6
00:00:11.360 --> 00:00:15.370
by saying ng generate class common/product-category.

7
00:00:15.370 --> 00:00:17.080
It'll give us an empty file,

8
00:00:17.080 --> 00:00:19.210
and we'll add these two properties here,

9
00:00:19.210 --> 00:00:21.023
ID and categoryName.

10
00:00:24.480 --> 00:00:26.940
And then in step three we need to create this new component

11
00:00:26.940 --> 00:00:27.880
for the menu.

12
00:00:27.880 --> 00:00:29.500
So basically the categories we have

13
00:00:29.500 --> 00:00:30.800
over on the left-hand side,

14
00:00:30.800 --> 00:00:34.233
we're going to encapsulate that as a menu component.

15
00:00:35.530 --> 00:00:36.960
And so we can generate this component

16
00:00:36.960 --> 00:00:39.000
by using ng generate component

17
00:00:39.000 --> 00:00:41.743
components/product-category-menu.

18
00:00:43.836 --> 00:00:46.630
And now in step four we need to enhance our component

19
00:00:46.630 --> 00:00:49.533
to read the categories from our service.

20
00:00:51.230 --> 00:00:52.210
So the first thing we do here

21
00:00:52.210 --> 00:00:54.650
is we create this property here for productCategories.

22
00:00:54.650 --> 00:00:56.413
It's an array of those ProductCategory items.

23
00:00:58.843 --> 00:01:02.926
We inject our productService into this component.

24
00:01:04.141 --> 00:01:06.100
And on listProductCategories here we call

25
00:01:06.100 --> 00:01:10.200
this.productService.getProductCategories.subscribe.

26
00:01:10.200 --> 00:01:13.120
And then we simply log the data returned from the service

27
00:01:13.120 --> 00:01:15.750
by using this JSON.stringify

28
00:01:15.750 --> 00:01:18.980
and then finally we assign the data to our property.

29
00:01:18.980 --> 00:01:21.400
So we're getting information from that service

30
00:01:21.400 --> 00:01:22.373
and assigning it.

31
00:01:24.690 --> 00:01:26.610
Now we need to update our product service

32
00:01:26.610 --> 00:01:30.240
to call the URL on the Sprint Boot application.

33
00:01:30.240 --> 00:01:32.590
So up top we have the category URL

34
00:01:32.590 --> 00:01:33.773
for that REST API,

35
00:01:34.720 --> 00:01:36.750
and then I call that given REST API

36
00:01:36.750 --> 00:01:39.860
using get this.categoryUrl.

37
00:01:39.860 --> 00:01:41.480
Remember this returns an observable,

38
00:01:41.480 --> 00:01:45.017
so we simply map the JSON data from Sprint Data REST

39
00:01:45.017 --> 00:01:47.219
to our ProductCategory array.

40
00:01:47.219 --> 00:01:49.479
And then finally here we make use of our interface

41
00:01:49.479 --> 00:01:51.544
GetResponseProductCategory.

42
00:01:51.544 --> 00:01:56.544
We unwrap the JSON from the Spring Data REST_embedded entry.

43
00:01:59.610 --> 00:02:01.510
Alrighty, our final step, step six,

44
00:02:01.510 --> 00:02:04.483
replace the hard-coded links with the menu component.

45
00:02:05.440 --> 00:02:08.850
So currently in our app.component.html, our old version,

46
00:02:08.850 --> 00:02:11.910
we have some hard-coded links in our application.

47
00:02:11.910 --> 00:02:12.910
And remember earlier I said

48
00:02:12.910 --> 00:02:14.130
hey let's get the basics working,

49
00:02:14.130 --> 00:02:16.090
but we'll make this more dynamic in the future.

50
00:02:16.090 --> 00:02:17.200
So this is where we're at now.

51
00:02:17.200 --> 00:02:20.200
So we're going to get rid of all that hard-coded code

52
00:02:20.200 --> 00:02:22.850
and then we're going to make use of our menu component.

53
00:02:22.850 --> 00:02:24.750
So we'll make use of our selector here

54
00:02:24.750 --> 00:02:26.750
app-product-category-menu.

55
00:02:26.750 --> 00:02:29.993
So that's the selector for our new menu component.

56
00:02:31.919 --> 00:02:35.410
And then in the actual HTML code here for this component

57
00:02:35.410 --> 00:02:38.380
we'll make use of the div, the list item,

58
00:02:38.380 --> 00:02:40.800
and now we'll simply loop over the categories

59
00:02:40.800 --> 00:02:42.730
and build the links dynamically.

60
00:02:42.730 --> 00:02:45.890
So we'll have this tempProductCategory of productCategories,

61
00:02:45.890 --> 00:02:48.140
we add the category ID to the link

62
00:02:48.140 --> 00:02:50.583
and also we display the category name.

63
00:02:52.230 --> 00:02:53.930
And so this'll all happen dynamically.

64
00:02:53.930 --> 00:02:56.660
So our list of categories here in our menu

65
00:02:56.660 --> 00:02:59.563
are all powered by the backend database.

66
00:03:00.700 --> 00:03:03.410
So we have our database table with our information,

67
00:03:03.410 --> 00:03:05.300
and then this information is being exposed

68
00:03:05.300 --> 00:03:07.600
or accessed from the REST API

69
00:03:07.600 --> 00:03:09.390
and this shows up in our page.

70
00:03:09.390 --> 00:03:11.000
So the really nice thing about this

71
00:03:11.000 --> 00:03:13.020
is that it's no longer hard-coded.

72
00:03:13.020 --> 00:03:14.800
It's all built dynamically.

73
00:03:14.800 --> 00:03:16.770
So we have our backend database table

74
00:03:16.770 --> 00:03:19.480
that has our data, this data's being exposed

75
00:03:19.480 --> 00:03:23.180
and we're accessing this information from the REST API.

76
00:03:23.180 --> 00:03:26.150
If we need to add new product categories in the future

77
00:03:26.150 --> 00:03:28.630
we simply update our database table

78
00:03:28.630 --> 00:03:30.590
and the new versions of the application

79
00:03:30.590 --> 00:03:32.380
will automatically show

80
00:03:32.380 --> 00:03:34.660
the given product categories dynamically.

81
00:03:34.660 --> 00:03:38.450
So no more hard coding, it's all dynamic.

82
00:03:38.450 --> 00:03:41.150
Alrighty, so I'm kind of getting excited here.

83
00:03:41.150 --> 00:03:44.530
So let's go ahead and move into the next set of videos

84
00:03:44.530 --> 00:03:46.240
and let's start writing this code.

85
00:03:46.240 --> 00:03:48.480
I want to see this running in action.

86
00:03:48.480 --> 00:03:51.013
All right, I'll see ya in the next video.

