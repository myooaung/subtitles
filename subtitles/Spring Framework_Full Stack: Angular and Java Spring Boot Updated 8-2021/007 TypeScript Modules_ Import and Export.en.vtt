WEBVTT
1
00:00:01.280 --> 00:00:03.730
<v Instructor>In this video we'll cover modules.</v>

2
00:00:06.490 --> 00:00:08.310
So in terms of code organization,

3
00:00:08.310 --> 00:00:10.997
currently all of our code is in a single file.

4
00:00:10.997 --> 00:00:13.950
And for real-time projects, we'd like to place

5
00:00:13.950 --> 00:00:15.980
our code into separate files.

6
00:00:15.980 --> 00:00:19.110
So as one example here, I could have this driver

7
00:00:19.110 --> 00:00:20.720
and would like to make use of files

8
00:00:20.720 --> 00:00:23.530
for customer, product, and account.

9
00:00:23.530 --> 00:00:26.620
And we need some way to kind of include or import

10
00:00:26.620 --> 00:00:29.123
those files into our application.

11
00:00:32.720 --> 00:00:35.750
And so TypeScript supports the concept of modules.

12
00:00:35.750 --> 00:00:40.750
So a module can export classes, functions, and variables.

13
00:00:40.960 --> 00:00:44.180
And another file can import these classes,

14
00:00:44.180 --> 00:00:47.323
functions, and variables from a given module.

15
00:00:50.870 --> 00:00:52.820
All right, so let's work through this with an example.

16
00:00:52.820 --> 00:00:54.890
So we'll have this driver file,

17
00:00:54.890 --> 00:00:57.190
and we want to make use of this customer file.

18
00:00:57.190 --> 00:01:01.800
So this Customer.ts is going to export the customer class,

19
00:01:01.800 --> 00:01:04.380
and then the driver is going to import

20
00:01:04.380 --> 00:01:07.123
the customer class from that file.

21
00:01:09.900 --> 00:01:12.670
All right, so let's kind of look at a code example here.

22
00:01:12.670 --> 00:01:15.240
So here is our file, Customer.ts,

23
00:01:15.240 --> 00:01:17.750
so this defines our class customer

24
00:01:17.750 --> 00:01:21.000
and then note here, we're going to export this class.

25
00:01:21.000 --> 00:01:24.050
So when you export a given class or entity,

26
00:01:24.050 --> 00:01:25.260
then that makes it available

27
00:01:25.260 --> 00:01:27.733
for someone else to possibly import.

28
00:01:28.700 --> 00:01:30.140
All right, so I'll just kind of swing this over

29
00:01:30.140 --> 00:01:31.490
to the right-hand side.

30
00:01:31.490 --> 00:01:34.510
So here's our driver file, kind of like our main file.

31
00:01:34.510 --> 00:01:35.910
So notice here on the first line,

32
00:01:35.910 --> 00:01:38.910
we're going to do an import, so I'm going to import customer,

33
00:01:38.910 --> 00:01:41.123
so we're importing the customer class,

34
00:01:42.140 --> 00:01:44.510
and where are we importing it from?

35
00:01:44.510 --> 00:01:48.380
Well, we're going to import it from ./customer.

36
00:01:48.380 --> 00:01:51.050
So here it's based on the file name

37
00:01:51.050 --> 00:01:53.240
of where that class is defined,

38
00:01:53.240 --> 00:01:55.600
but you don't give the .ts,

39
00:01:55.600 --> 00:01:58.050
you simply give the actual name

40
00:01:58.050 --> 00:02:00.670
of the file itself without the extension.

41
00:02:00.670 --> 00:02:05.260
And in this example, we're assuming that this Driver.ts

42
00:02:05.260 --> 00:02:08.410
and Customer.ts are in the same directory.

43
00:02:08.410 --> 00:02:11.250
So that's why I make use of the ./customer,

44
00:02:11.250 --> 00:02:13.203
meaning in the same directory.

45
00:02:14.150 --> 00:02:15.990
However, if they're in different directories,

46
00:02:15.990 --> 00:02:18.910
then you can simply give a relative directory path.

47
00:02:18.910 --> 00:02:21.850
So you could, you know, if it's in a subdirectory,

48
00:02:21.850 --> 00:02:23.680
sub one, sub two, sub three, you simply

49
00:02:23.680 --> 00:02:25.670
access those different sub directories.

50
00:02:25.670 --> 00:02:27.260
You can also use a dot dot slash

51
00:02:27.260 --> 00:02:29.460
if you need to kind of move up one or two directories

52
00:02:29.460 --> 00:02:31.370
and then go to the actual file.

53
00:02:31.370 --> 00:02:32.700
But in this example here,

54
00:02:32.700 --> 00:02:36.143
Driver.ts and Customer.ts are in the same directory.

55
00:02:37.810 --> 00:02:38.790
And that's basically it.

56
00:02:38.790 --> 00:02:41.800
So on the right-hand side, we export the class,

57
00:02:41.800 --> 00:02:42.990
and then on the left-hand side,

58
00:02:42.990 --> 00:02:46.240
we import the class from a given file.

59
00:02:46.240 --> 00:02:47.830
All right, so on the next section here,

60
00:02:47.830 --> 00:02:49.310
we'll jump into our IDE,

61
00:02:49.310 --> 00:02:51.810
and I will write this code, and we'll test it out.

62
00:02:55.930 --> 00:02:58.550
Okay, so let's go ahead and move in here.

63
00:02:58.550 --> 00:03:01.140
Let me zoom in for a second

64
00:03:01.140 --> 00:03:03.640
and we'll do the normal copy/paste on the project.

65
00:03:23.440 --> 00:03:25.783
And I'll just renamed as 05-modules.

66
00:03:34.320 --> 00:03:37.823
And then let's go ahead and open up that Customer.ts file.

67
00:03:41.870 --> 00:03:43.113
Let me zoom out a bit.

68
00:03:44.010 --> 00:03:46.190
And what I'd like to do on this file is at the bottom,

69
00:03:46.190 --> 00:03:48.570
I want to remove some extra code.

70
00:03:48.570 --> 00:03:49.710
So this is the code at the bottom

71
00:03:49.710 --> 00:03:50.820
where we would create the instance

72
00:03:50.820 --> 00:03:52.080
and do all the logging stuff.

73
00:03:52.080 --> 00:03:53.710
We're going to move this to a separate file.

74
00:03:53.710 --> 00:03:55.683
So let's go ahead and cut this code.

75
00:03:58.500 --> 00:04:02.080
And then on my 05-module's directory,

76
00:04:02.080 --> 00:04:03.763
I want to create a new file.

77
00:04:06.100 --> 00:04:08.223
And I'll call it driver.ts,

78
00:04:09.510 --> 00:04:11.820
kind of like our main application.

79
00:04:11.820 --> 00:04:13.860
And we could give any name that we want it to here,

80
00:04:13.860 --> 00:04:15.310
but I'll just call it driver.

81
00:04:18.820 --> 00:04:19.930
And then on this driver file,

82
00:04:19.930 --> 00:04:21.930
I'll go ahead and paste in that code

83
00:04:21.930 --> 00:04:23.943
that I copied from the previous file.

84
00:04:26.620 --> 00:04:28.070
Okay, good, that looks great.

85
00:04:31.800 --> 00:04:34.750
But you'll notice that there's one compilation error here,

86
00:04:34.750 --> 00:04:36.260
if you kind of hover over customer,

87
00:04:36.260 --> 00:04:39.190
it says "cannot find customer".

88
00:04:39.190 --> 00:04:41.170
So its like well who is this customer guy?

89
00:04:41.170 --> 00:04:45.030
They're tryin' to guess but their guess is incorrect.

90
00:04:45.030 --> 00:04:48.720
We somehow need to import that given customer.

91
00:04:48.720 --> 00:04:51.040
But we actually need to go to customer.ts

92
00:04:51.040 --> 00:04:52.430
because the first thing we have to do is

93
00:04:52.430 --> 00:04:54.690
export the customer.

94
00:04:54.690 --> 00:04:56.570
So you see export keyword.

95
00:04:56.570 --> 00:04:58.380
All right so now this customer class

96
00:04:58.380 --> 00:05:00.510
is been exported and now it's available

97
00:05:00.510 --> 00:05:02.433
for someone else to import.

98
00:05:05.390 --> 00:05:07.440
So now in my driver, I can go ahead

99
00:05:07.440 --> 00:05:08.680
and add a new line here

100
00:05:08.680 --> 00:05:10.840
to actually import the class.

101
00:05:10.840 --> 00:05:13.973
So I do an import, the actual class,

102
00:05:15.130 --> 00:05:17.550
then I tell it where I want it import it from

103
00:05:18.420 --> 00:05:21.210
and I do the ./customer

104
00:05:21.210 --> 00:05:22.980
and remember we give the name of the file

105
00:05:22.980 --> 00:05:24.610
without the extension

106
00:05:24.610 --> 00:05:26.920
and then here they're both in the same directory

107
00:05:26.920 --> 00:05:30.640
so I simply make use of ./customer.

108
00:05:30.640 --> 00:05:32.590
And then notice here, our compilation error

109
00:05:32.590 --> 00:05:34.463
goes away, so this looks pretty good.

110
00:05:35.410 --> 00:05:36.243
All right, so let's go ahead

111
00:05:36.243 --> 00:05:37.500
and open up a new terminal window

112
00:05:37.500 --> 00:05:38.563
and test this out.

113
00:05:41.710 --> 00:05:43.410
So I'm moving to the appropriate directory here

114
00:05:43.410 --> 00:05:48.410
04-classes/05-modules and then do a compile.

115
00:05:50.320 --> 00:05:51.313
That's good.

116
00:05:54.580 --> 00:05:56.080
And now do a run.

117
00:05:56.080 --> 00:05:57.330
And I get the desired output.

118
00:05:57.330 --> 00:05:58.750
So now this works out fine.

119
00:05:58.750 --> 00:06:01.540
So notice here, I'm running the driver program.

120
00:06:01.540 --> 00:06:04.040
So it's a separate file from customer

121
00:06:04.040 --> 00:06:06.810
but we're able to import that customer,

122
00:06:06.810 --> 00:06:08.170
create an instance of it,

123
00:06:08.170 --> 00:06:10.830
and then access the date accordingly.

124
00:06:10.830 --> 00:06:11.663
So this is great,

125
00:06:11.663 --> 00:06:13.540
so we're able to make use of modules here

126
00:06:13.540 --> 00:06:16.820
and separate our code into separate files.

127
00:06:16.820 --> 00:06:17.653
Good job!

