WEBVTT
1
00:00:01.280 --> 00:00:03.300
<v Instructor>In this video, we'll cover the checkout form</v>

2
00:00:03.300 --> 00:00:06.423
to populate credit card expiration dates.

3
00:00:09.830 --> 00:00:13.500
So, in our current application, we have two things to do.

4
00:00:13.500 --> 00:00:15.410
So we need to populate the months,

5
00:00:15.410 --> 00:00:17.360
and we also need to populate the years.

6
00:00:21.010 --> 00:00:23.280
Now, one approach is that we could simply

7
00:00:23.280 --> 00:00:26.973
just hard code the values, but that's not ideal.

8
00:00:28.420 --> 00:00:31.310
So, for years, the years will become outdated.

9
00:00:31.310 --> 00:00:35.250
If we're in year 2022, why show 2020?

10
00:00:35.250 --> 00:00:38.390
We'd like to dynamically populate the current year,

11
00:00:38.390 --> 00:00:40.713
and then go up to the next 10 years.

12
00:00:44.100 --> 00:00:46.720
All righty, so here's our development process.

13
00:00:46.720 --> 00:00:49.400
The first thing we'll do is we'll generate our form service.

14
00:00:49.400 --> 00:00:51.350
Then we'll add methods to the form service

15
00:00:51.350 --> 00:00:52.860
for months and years.

16
00:00:52.860 --> 00:00:54.537
Next, we'll update the checkout components

17
00:00:54.537 --> 00:00:57.200
and retrieve the months and years from the service.

18
00:00:57.200 --> 00:00:59.640
And finally, we'll update the HTML template

19
00:00:59.640 --> 00:01:03.033
to populate the drop-down lists for months and years.

20
00:01:06.040 --> 00:01:08.650
All righty, step one, generating our form service.

21
00:01:08.650 --> 00:01:11.430
So again, we simply use the ng generate command,

22
00:01:11.430 --> 00:01:13.753
service, and we give services/Luv2ShopForm,

23
00:01:16.250 --> 00:01:19.290
and this will generate our Luv2ShopFormService.

24
00:01:23.500 --> 00:01:25.930
All righty, step two is adding methods to our form service

25
00:01:25.930 --> 00:01:27.820
for months and years.

26
00:01:27.820 --> 00:01:30.950
All right, so we'll move into our file, Luv2ShopFormService.

27
00:01:30.950 --> 00:01:34.340
We'll do some imports up top for observable and of,

28
00:01:34.340 --> 00:01:36.680
this is from the rxjs framework,

29
00:01:36.680 --> 00:01:39.330
or the Reactive JavaScript framework,

30
00:01:39.330 --> 00:01:41.680
and we'll use these items in our upcoming code.

31
00:01:42.650 --> 00:01:45.703
All right, so here's our class here, Luv2ShopFormService.

32
00:01:47.790 --> 00:01:50.200
We define this method, getCreditCardMonths,

33
00:01:50.200 --> 00:01:51.880
they'll pass on a start month.

34
00:01:51.880 --> 00:01:54.990
And then we'll have an observable number, square brackets,

35
00:01:54.990 --> 00:01:57.240
meaning an array of numbers.

36
00:01:57.240 --> 00:02:00.430
So we'll actually return an observable array

37
00:02:00.430 --> 00:02:02.133
back to the calling program.

38
00:02:03.600 --> 00:02:04.580
So inside of our method here,

39
00:02:04.580 --> 00:02:08.620
we set up our empty array, data, numbers, square brackets,

40
00:02:08.620 --> 00:02:09.990
and then we're going to build an array

41
00:02:09.990 --> 00:02:11.450
for the month drop-down list.

42
00:02:11.450 --> 00:02:13.510
We're going to start at the desired start month

43
00:02:13.510 --> 00:02:15.193
and loop until 12.

44
00:02:16.410 --> 00:02:18.470
So the pass and start month as a parameter,

45
00:02:18.470 --> 00:02:19.540
we set up our four loops,

46
00:02:19.540 --> 00:02:24.040
so let theMonth = startMonth; theMonth &lt;= 12;

47
00:02:24.040 --> 00:02:26.260
theMonth++, and then we say data.push,

48
00:02:26.260 --> 00:02:29.273
so the data.push adds an element to the array.

49
00:02:32.060 --> 00:02:34.990
And then finally at the end here, we return of data.

50
00:02:34.990 --> 00:02:36.390
Now this is a little bit tricky here,

51
00:02:36.390 --> 00:02:40.180
so we want to return an array, but an observable array,

52
00:02:40.180 --> 00:02:43.230
so we take that array data and then we wrap it

53
00:02:43.230 --> 00:02:46.910
as an observable and we wrap it by using the of operator.

54
00:02:46.910 --> 00:02:49.490
So the of operator's from rxjs,

55
00:02:49.490 --> 00:02:52.930
it'll wrap an object as an observable.

56
00:02:52.930 --> 00:02:54.860
And the reason that we use an observable

57
00:02:54.860 --> 00:02:55.693
is because our angular components

58
00:02:55.693 --> 00:02:58.130
are going to subscribe to this given method

59
00:02:58.130 --> 00:02:59.633
to retrieve the data.

60
00:03:00.810 --> 00:03:01.940
If you'd like to get more information

61
00:03:01.940 --> 00:03:05.190
about rxjs: the Reactive JavaScript framework,

62
00:03:05.190 --> 00:03:07.703
then visit the link here that I have on the slide.

63
00:03:12.230 --> 00:03:14.330
All righty, a bit more here on step two,

64
00:03:14.330 --> 00:03:18.200
we need to add a similar method here for credit card years.

65
00:03:18.200 --> 00:03:22.900
So we have getCreditCardYears, return on observable array.

66
00:03:22.900 --> 00:03:25.980
Internally here I have this data, number square brackets

67
00:03:25.980 --> 00:03:27.820
and array, and then I simply build the array

68
00:03:27.820 --> 00:03:30.340
for the year drop-down list, I start at the current year

69
00:03:30.340 --> 00:03:32.653
and I loop for the next 10 years.

70
00:03:33.580 --> 00:03:34.770
So here I get the current year

71
00:03:34.770 --> 00:03:37.490
by saying new Date .getFullYear,

72
00:03:37.490 --> 00:03:40.550
so this works as expected if the current year's 2020,

73
00:03:40.550 --> 00:03:42.460
this will return 2020.

74
00:03:42.460 --> 00:03:46.850
Similar thing if it's 2024, it's going to return the year 2024.

75
00:03:46.850 --> 00:03:49.623
And in endYear, we simply take the start year plus 10.

76
00:03:51.409 --> 00:03:52.300
And then we simply do a four loop

77
00:03:52.300 --> 00:03:54.077
and then we say data.push(theYear).

78
00:03:55.560 --> 00:03:58.310
And that's all fairly straightforward for you.

79
00:03:58.310 --> 00:04:01.490
The only tricky part, again, is wrapping this array

80
00:04:01.490 --> 00:04:04.170
as an observable, so again, we make use of that of operator

81
00:04:04.170 --> 00:04:07.650
from rxjs to wrap the array as an observable.

82
00:04:07.650 --> 00:04:09.930
And again, we use this because our angular components

83
00:04:09.930 --> 00:04:11.950
are going to subscribe to this given method

84
00:04:11.950 --> 00:04:14.200
to retrieve the data.

85
00:04:14.200 --> 00:04:16.400
And that's basically it here for the method.

86
00:04:19.270 --> 00:04:21.120
So now let's go ahead and move to our angular component

87
00:04:21.120 --> 00:04:23.670
in step three, and we're going to update our checkout component

88
00:04:23.670 --> 00:04:25.693
to retrieve the months and the years.

89
00:04:29.840 --> 00:04:32.230
So we just set up some arrays up top, some empty arrays

90
00:04:32.230 --> 00:04:34.480
for credit card years and credit card months.

91
00:04:37.270 --> 00:04:39.860
For our constructor, we inject our service

92
00:04:39.860 --> 00:04:41.963
that we created previously, our Luv2ShopFormService.

93
00:04:45.770 --> 00:04:47.870
So moving into our ngOnInit method,

94
00:04:47.870 --> 00:04:49.580
we're going to populate the credit card months,

95
00:04:49.580 --> 00:04:51.220
so here I get the start month,

96
00:04:51.220 --> 00:04:53.610
number = new Date().getMonth() + 1,

97
00:04:53.610 --> 00:04:55.350
so that gives me the current month,

98
00:04:55.350 --> 00:04:58.990
but the JavaScript date object, the months are zero-based,

99
00:04:58.990 --> 00:05:00.830
so you'll actually get zero to 11,

100
00:05:00.830 --> 00:05:03.790
so we need to add one here so we can get the months one

101
00:05:03.790 --> 00:05:06.290
to 12, all right, so just one thing to be aware of,

102
00:05:06.290 --> 00:05:08.540
in JavaScript the months are zero-based,

103
00:05:08.540 --> 00:05:10.053
so we simply add one to it.

104
00:05:11.060 --> 00:05:12.560
And if you'd like to get more details here

105
00:05:12.560 --> 00:05:13.790
about the JavaScript data object,

106
00:05:13.790 --> 00:05:15.530
as far as the full documentation,

107
00:05:15.530 --> 00:05:17.450
go to the link here and we will redirect you

108
00:05:17.450 --> 00:05:20.543
to the official JavaScript documentation for this.

109
00:05:22.770 --> 00:05:26.090
So then I call luv2ShopFormService.getCreditCardMonths,

110
00:05:26.090 --> 00:05:29.770
I pass in a start month, I build .subscribe,

111
00:05:29.770 --> 00:05:31.470
and then once that data's returned,

112
00:05:31.470 --> 00:05:34.560
I log the information and then I also make the assignment,

113
00:05:34.560 --> 00:05:37.363
this.creditCardMonths = data.

114
00:05:39.690 --> 00:05:41.300
And that's basically it there for the coding,

115
00:05:41.300 --> 00:05:43.803
as far as retrieving the credit card months.

116
00:05:47.560 --> 00:05:48.650
So here we do a similar thing

117
00:05:48.650 --> 00:05:50.460
for getting the credit card years,

118
00:05:50.460 --> 00:05:53.360
we call luv2ShopFormService.getCreditCardYears,

119
00:05:53.360 --> 00:05:56.080
do a .subscribe, and then once that data's returned,

120
00:05:56.080 --> 00:05:58.300
we simply log it and then assign it,

121
00:05:58.300 --> 00:06:00.873
this.creditCardYears = data.

122
00:06:04.200 --> 00:06:05.570
And then finally here with step four,

123
00:06:05.570 --> 00:06:07.210
we're going to update the HTML template

124
00:06:07.210 --> 00:06:09.380
to populate the drop-down lists,

125
00:06:09.380 --> 00:06:12.780
so in our select formControlName="expirationMonth",

126
00:06:12.780 --> 00:06:16.070
here we make use of that ngFor and we loop over the arrays,

127
00:06:16.070 --> 00:06:19.080
so let month of creditCardMonths,

128
00:06:19.080 --> 00:06:21.190
that's from our component that we just created

129
00:06:21.190 --> 00:06:22.830
and we populated accordingly,

130
00:06:22.830 --> 00:06:26.150
then we make use of it here in our actual template page

131
00:06:26.150 --> 00:06:27.190
and then in the center here,

132
00:06:27.190 --> 00:06:29.410
we do the curly brace, curly brace, month,

133
00:06:29.410 --> 00:06:31.560
to actually display that given month,

134
00:06:31.560 --> 00:06:34.293
or use that to actually populate the drop-down list.

135
00:06:40.320 --> 00:06:42.250
And then we simply repeat the process here

136
00:06:42.250 --> 00:06:46.220
for expiration year, so let year of creditCardYears,

137
00:06:46.220 --> 00:06:47.840
we loop over that array,

138
00:06:47.840 --> 00:06:50.990
and then we use the year in curly braces there

139
00:06:50.990 --> 00:06:53.030
to populate the drop-down list accordingly.

140
00:06:53.030 --> 00:06:55.933
So we're simply retrieving data from our component.

141
00:06:57.780 --> 00:06:59.460
All right, so this all looks really good.

142
00:06:59.460 --> 00:07:00.980
Let's go ahead and move into our IDE

143
00:07:00.980 --> 00:07:03.193
and let's start writing a code.

