1
00:00:01,100 --> 00:00:02,900
<v Instructor>In this video we're going to refactor</v>

2
00:00:02,900 --> 00:00:03,923
the cart service.

3
00:00:07,260 --> 00:00:09,600
Currently we have some very basic code

4
00:00:09,600 --> 00:00:13,050
for finding an item in the cart.

5
00:00:13,050 --> 00:00:16,010
So we have this for loop we loop over each item in the cart

6
00:00:16,010 --> 00:00:17,690
and we make some comparisons.

7
00:00:17,690 --> 00:00:19,630
This is the code that we're going to refactor

8
00:00:19,630 --> 00:00:22,453
by using a special method available for arrays.

9
00:00:25,440 --> 00:00:27,920
Okay, so we'll make use of the find method.

10
00:00:27,920 --> 00:00:30,360
This method returns the first element in an array

11
00:00:30,360 --> 00:00:32,343
that passes a given test.

12
00:00:32,343 --> 00:00:34,980
So the find method is an instance method

13
00:00:34,980 --> 00:00:37,420
that's available on all arrays

14
00:00:37,420 --> 00:00:39,440
and basically it'll loop through the array

15
00:00:39,440 --> 00:00:41,410
and it'll check a given test.

16
00:00:41,410 --> 00:00:43,240
So the test that we're using here is we're trying to see

17
00:00:43,240 --> 00:00:48,113
if tempCartItem.id equals theCartItem.id.

18
00:00:49,360 --> 00:00:51,910
And so, it'll execute the test for each element

19
00:00:51,910 --> 00:00:54,460
in the array until the test passes,

20
00:00:54,460 --> 00:00:57,540
so it'll loop through the elements in the background.

21
00:00:57,540 --> 00:00:59,150
If the test passes,

22
00:00:59,150 --> 00:01:01,160
then it's going to return the first element

23
00:01:01,160 --> 00:01:03,070
in the array that passed.

24
00:01:03,070 --> 00:01:06,400
If the test fails for all elements in the array,

25
00:01:06,400 --> 00:01:08,610
then it's going to return undefined.

26
00:01:08,610 --> 00:01:11,553
Basically meaning, hey, I couldn't find that element.

27
00:01:14,384 --> 00:01:17,000
So if you'd like to get more details on this find method,

28
00:01:17,000 --> 00:01:19,150
you can go to the website here on the screen.

29
00:01:19,150 --> 00:01:21,824
We'll redirect you to the official documentation

30
00:01:21,824 --> 00:01:23,483
for the find method.

31
00:01:26,770 --> 00:01:28,770
All righty, so let's look at some coding for this

32
00:01:28,770 --> 00:01:30,600
and now, just a quick heads up,

33
00:01:30,600 --> 00:01:32,480
we'll reference theCartItem.

34
00:01:32,480 --> 00:01:34,410
That's an element that's passed into the method

35
00:01:34,410 --> 00:01:37,130
for addToCart, so that's the actual element

36
00:01:37,130 --> 00:01:40,193
that we're searching for in our shopping cart.

37
00:01:42,970 --> 00:01:44,810
All righty, so up top we have this for loop

38
00:01:44,810 --> 00:01:46,200
and so we have the tempCartItem,

39
00:01:46,200 --> 00:01:47,720
that's the current array element

40
00:01:47,720 --> 00:01:49,300
as we loop through the array

41
00:01:50,220 --> 00:01:52,080
and then we had a Test Conditional here.

42
00:01:52,080 --> 00:01:56,010
We checked to see if tempCartItem.id equals theCartItem.id.

43
00:01:56,010 --> 00:01:58,250
So that's kind of like the existing code,

44
00:01:58,250 --> 00:02:00,470
the basic code that we had before.

45
00:02:00,470 --> 00:02:02,900
Now at the bottom here we'll have this new code

46
00:02:02,900 --> 00:02:05,510
or a replacement or a refactored code,

47
00:02:05,510 --> 00:02:07,980
and so we'll make of this current array element.

48
00:02:07,980 --> 00:02:09,260
So that's the tempCartItem

49
00:02:10,600 --> 00:02:12,334
and then we have this Test Conditional,

50
00:02:12,334 --> 00:02:16,570
tempCartItem.id equals theCartItem.id.

51
00:02:16,570 --> 00:02:19,110
And so it's going to execute the test for each element

52
00:02:19,110 --> 00:02:21,570
in the array until the test passes.

53
00:02:21,570 --> 00:02:24,243
So, it'll do the looping in the background for us.

54
00:02:25,760 --> 00:02:27,930
And so it's going to return the first element

55
00:02:27,930 --> 00:02:32,190
that passes the test, else it returns undefined.

56
00:02:32,190 --> 00:02:33,730
So the coding that we had at the top,

57
00:02:33,730 --> 00:02:35,570
we can basically replace it with the coding

58
00:02:35,570 --> 00:02:37,670
here we have at the bottom.

59
00:02:37,670 --> 00:02:40,043
That's a good way of refactoring our code.

60
00:02:44,412 --> 00:02:45,650
So let's kind of pull it together here

61
00:02:45,650 --> 00:02:47,483
with a before and after.

62
00:02:47,483 --> 00:02:50,240
So on the left hand side we had the before code.

63
00:02:50,240 --> 00:02:52,913
So our basic way of doing a for loop.

64
00:02:54,370 --> 00:02:57,030
And then over on the right we have our after code.

65
00:02:57,030 --> 00:03:00,830
So here we're going to make use of cartItems.find.

66
00:03:00,830 --> 00:03:03,210
So as you can see here, there's some improvement.

67
00:03:03,210 --> 00:03:05,566
We minimized the amount of code that we have to make use of

68
00:03:05,566 --> 00:03:08,340
and we're making use of some of the built in methods

69
00:03:08,340 --> 00:03:09,720
available on arrays.

70
00:03:09,720 --> 00:03:10,553
So I like this.

71
00:03:10,553 --> 00:03:11,490
This is pretty cool.

72
00:03:11,490 --> 00:03:13,680
So, let's go ahead and move into our IDE

73
00:03:13,680 --> 00:03:17,420
and let's refactor our code using this new feature.

74
00:03:17,420 --> 00:03:20,193
All righty, I'll see ya in the next video.

