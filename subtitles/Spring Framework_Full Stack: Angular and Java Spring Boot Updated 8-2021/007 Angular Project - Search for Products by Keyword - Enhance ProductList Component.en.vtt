WEBVTT
1
00:00:01.210 --> 00:00:02.210
<v Instructor>All right, so we're making</v>

2
00:00:02.210 --> 00:00:03.300
some really good progress,

3
00:00:03.300 --> 00:00:04.890
and this video will cover step five

4
00:00:04.890 --> 00:00:07.361
of enhancing the ProductListComponent

5
00:00:07.361 --> 00:00:09.713
to search for products with the ProductService.

6
00:00:18.380 --> 00:00:21.113
So let's move over to our product-list-component.

7
00:00:22.140 --> 00:00:24.623
So this is product-list-component.ts.

8
00:00:34.770 --> 00:00:36.140
Let me clean up here

9
00:00:36.140 --> 00:00:38.863
just so I can have more room for my editor.

10
00:00:45.070 --> 00:00:48.283
I'll move in here and I'll define a new property,

11
00:00:51.480 --> 00:00:54.810
at searchMode, it's of type boolean.

12
00:00:54.810 --> 00:00:56.120
We'll use it in this video

13
00:00:56.120 --> 00:00:58.843
and we'll also use it in some follow-on videos.

14
00:01:03.980 --> 00:01:05.930
Alrighty, I'll add a new method here

15
00:01:05.930 --> 00:01:07.230
called handleListProducts.

16
00:01:22.109 --> 00:01:24.920
And I'll actually do some code refactoring.

17
00:01:24.920 --> 00:01:27.630
So the code that I currently have in listProducts,

18
00:01:27.630 --> 00:01:31.920
I'll move this code to the new method handleListProducts.

19
00:01:31.920 --> 00:01:33.960
So let's go ahead and cut this

20
00:01:33.960 --> 00:01:37.133
and then we'll move it down to that new method.

21
00:01:39.140 --> 00:01:41.790
And I'll show you the reasoning for this in a second.

22
00:01:42.700 --> 00:01:46.660
All right, so handleListProducts basically had a copy or cut

23
00:01:46.660 --> 00:01:49.633
of what we did from our previous listProducts method.

24
00:01:52.028 --> 00:01:55.283
And so in this method we'll call this.handleListProducts

25
00:01:56.998 --> 00:01:59.610
just to kind of keep the flow going.

26
00:01:59.610 --> 00:02:02.270
But what I want to do is actually add some logic here.

27
00:02:02.270 --> 00:02:05.760
So if we're in searchMode, we want to call method one,

28
00:02:05.760 --> 00:02:08.150
else, we'll call method two.

29
00:02:08.150 --> 00:02:10.620
So let's go ahead and define or assign

30
00:02:10.620 --> 00:02:12.720
the value for this.searchMode,

31
00:02:12.720 --> 00:02:14.550
and I'll basically just check to see

32
00:02:14.550 --> 00:02:17.710
if this route has a parameter for keyword

33
00:02:19.120 --> 00:02:21.130
because if it does have a keyword parameter,

34
00:02:21.130 --> 00:02:23.480
then that means that we're performing a search.

35
00:02:28.030 --> 00:02:29.880
And remember, the keyword parameter

36
00:02:29.880 --> 00:02:32.680
came from the route configuration that we set up earlier

37
00:02:34.630 --> 00:02:37.160
and also from our SearchComponent.

38
00:02:37.160 --> 00:02:39.110
When the user enters our search data,

39
00:02:39.110 --> 00:02:40.650
we're going to navigate to the URL

40
00:02:40.650 --> 00:02:44.403
and we'll give /search/ whatever that given keyword is.

41
00:02:46.010 --> 00:02:49.367
And so remember, that's passing from the SearchComponent.

42
00:02:50.370 --> 00:02:51.700
So I basically just checked in to see

43
00:02:51.700 --> 00:02:54.780
if that keyword is there, that keyword parameter is there,

44
00:02:54.780 --> 00:02:56.430
then we're in searchMode and we need to do

45
00:02:56.430 --> 00:02:58.780
something different with our coding logic here.

46
00:03:02.520 --> 00:03:04.243
So I'll say if this.searchMode,

47
00:03:06.180 --> 00:03:08.860
then we need to do search work,

48
00:03:08.860 --> 00:03:11.663
so I'll say this.handleSearchProducts.

49
00:03:12.980 --> 00:03:14.860
That's a method that we haven't defined yet.

50
00:03:14.860 --> 00:03:16.340
We'll create it in a second.

51
00:03:16.340 --> 00:03:19.110
But then else, so we're not in searchMode,

52
00:03:19.110 --> 00:03:20.610
so just go ahead and list the products

53
00:03:20.610 --> 00:03:21.923
like we've done before.

54
00:03:23.880 --> 00:03:25.430
So that's the basic reasoning here

55
00:03:25.430 --> 00:03:27.480
for kind of refactoring the code a bit

56
00:03:27.480 --> 00:03:29.603
and extracting that given method.

57
00:03:32.330 --> 00:03:34.910
All right, so, of course, that means that we need to create

58
00:03:34.910 --> 00:03:37.893
a method, handleSearchProducts, so we'll do that now.

59
00:03:49.550 --> 00:03:51.800
And in this method, I actually need to get

60
00:03:51.800 --> 00:03:55.830
the actual search keyword that the user passed in,

61
00:03:55.830 --> 00:03:57.480
basically reading that parameter.

62
00:04:07.290 --> 00:04:11.840
So, I'll make use of this.route.snapshot.param.get

63
00:04:11.840 --> 00:04:13.520
and I pass in keyword,

64
00:04:13.520 --> 00:04:16.140
using some similar coding that we've done before

65
00:04:16.140 --> 00:04:17.640
and some of the methods below.

66
00:04:18.610 --> 00:04:20.500
So now I need to search for products

67
00:04:20.500 --> 00:04:22.503
using that given keyword.

68
00:04:32.470 --> 00:04:34.050
So I basically make a call,

69
00:04:34.050 --> 00:04:35.513
this.productService.searchProducts,

70
00:04:37.140 --> 00:04:38.970
I pass in theKeyword,

71
00:04:42.070 --> 00:04:45.060
and then we do our normal work of doing a subscribe.

72
00:04:45.060 --> 00:04:46.330
The date that that's returned,

73
00:04:46.330 --> 00:04:48.970
we simply assign it to this.products,

74
00:04:48.970 --> 00:04:51.943
and we've seen a lot of this basic coding here before.

75
00:04:59.340 --> 00:05:02.870
Alrighty, so this coding looks okay, this looks pretty good,

76
00:05:02.870 --> 00:05:06.280
but (laughs) you see an error there on the screen,

77
00:05:06.280 --> 00:05:10.150
searchProducts, that's not defined in the service right now,

78
00:05:10.150 --> 00:05:11.410
and we'll actually do that

79
00:05:11.410 --> 00:05:13.850
or define that method in the next video.

80
00:05:13.850 --> 00:05:15.713
So stay tuned, we'll cover that.

