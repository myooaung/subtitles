WEBVTT
1
00:00:01.100 --> 00:00:01.933
<v Man>In this video,</v>

2
00:00:01.933 --> 00:00:04.383
we're going to cover angular environments.

3
00:00:07.790 --> 00:00:10.240
We have a problem in our application,

4
00:00:10.240 --> 00:00:11.870
our Angular app currently

5
00:00:11.870 --> 00:00:15.000
has a Spring Boot URL hard coded.

6
00:00:15.000 --> 00:00:17.400
So in our code for like product service,

7
00:00:17.400 --> 00:00:19.250
we have these hard coded URLs here

8
00:00:19.250 --> 00:00:21.620
for the baseUrl and categoryUrl.

9
00:00:21.620 --> 00:00:24.000
It says localhost:8080,

10
00:00:24.000 --> 00:00:25.290
but the Spring Boot backend

11
00:00:25.290 --> 00:00:27.630
is not even at the location anymore.

12
00:00:27.630 --> 00:00:31.260
The new location is actually at localhost:8443

13
00:00:31.260 --> 00:00:33.813
and it uses the secure protocol of HTTPS.

14
00:00:35.090 --> 00:00:36.720
So technically right now,

15
00:00:36.720 --> 00:00:39.230
if we ran our Spring Boot backend

16
00:00:39.230 --> 00:00:41.350
and our Angular front end,

17
00:00:41.350 --> 00:00:42.990
they actually wouldn't connect.

18
00:00:42.990 --> 00:00:44.750
The Angular app would not be able

19
00:00:44.750 --> 00:00:47.203
to connect to the Spring Boot backend.

20
00:00:50.820 --> 00:00:53.620
Instead of hard coding the URL in the service class,

21
00:00:53.620 --> 00:00:55.710
let's place it in the configuration.

22
00:00:55.710 --> 00:00:56.800
This will eliminate the need

23
00:00:56.800 --> 00:00:59.470
to change multiple references.

24
00:00:59.470 --> 00:01:00.937
Also, we may need to use

25
00:01:00.937 --> 00:01:04.140
a different URL based on the environment,

26
00:01:04.140 --> 00:01:06.790
and this will allow us to easily run our app

27
00:01:06.790 --> 00:01:09.640
if deployed to a different environment or server.

28
00:01:09.640 --> 00:01:11.010
So effectively here,

29
00:01:11.010 --> 00:01:12.710
moving the hard coded URLs

30
00:01:12.710 --> 00:01:14.900
into something similar to a properties file

31
00:01:14.900 --> 00:01:16.176
and also allowing it to run

32
00:01:16.176 --> 00:01:18.263
for different environments.

33
00:01:21.410 --> 00:01:22.640
So here's an example here

34
00:01:22.640 --> 00:01:24.210
using different environments,

35
00:01:24.210 --> 00:01:26.760
so we can have our Angular app communicate

36
00:01:26.760 --> 00:01:29.090
to different Spring Boot backends

37
00:01:29.090 --> 00:01:30.630
in different environments.

38
00:01:30.630 --> 00:01:31.490
So here up top,

39
00:01:31.490 --> 00:01:32.580
we have the Spring Boot app

40
00:01:32.580 --> 00:01:34.370
running in the dev environment.

41
00:01:34.370 --> 00:01:37.430
So it's at localhost:8443.

42
00:01:37.430 --> 00:01:38.930
And then for the QA environment,

43
00:01:38.930 --> 00:01:39.880
we have the Spring Boot app

44
00:01:39.880 --> 00:01:41.510
running on a different server

45
00:01:41.510 --> 00:01:44.950
and different port here, so port 9898.

46
00:01:44.950 --> 00:01:45.970
And then for production,

47
00:01:45.970 --> 00:01:48.110
it's running on our production server

48
00:01:48.110 --> 00:01:51.460
and then running on port 443.

49
00:01:51.460 --> 00:01:52.603
So instead of hard coding

50
00:01:52.603 --> 00:01:54.970
that URL into our service classes,

51
00:01:54.970 --> 00:01:56.651
we'll pull it out into a configuration

52
00:01:56.651 --> 00:01:58.860
properties file type thing

53
00:01:58.860 --> 00:02:00.983
and have it for different environments.

54
00:02:03.760 --> 00:02:05.030
Well, the nice thing here is that

55
00:02:05.030 --> 00:02:06.947
Angular has support for environments

56
00:02:06.947 --> 00:02:09.490
and environment is a name configuration

57
00:02:09.490 --> 00:02:10.870
for your application,

58
00:02:10.870 --> 00:02:12.573
and we can add configurations

59
00:02:12.573 --> 00:02:14.853
for various environments.

60
00:02:18.890 --> 00:02:20.350
Now, when you create a new project

61
00:02:20.350 --> 00:02:22.370
using the Angular CLI tool,

62
00:02:22.370 --> 00:02:25.250
by default it creates the following files.

63
00:02:25.250 --> 00:02:27.270
So there's a directory source environments,

64
00:02:27.270 --> 00:02:28.950
and there's an environment.ts

65
00:02:28.950 --> 00:02:31.770
and an environment.prod.ts.

66
00:02:31.770 --> 00:02:34.750
So the environment.ts is the default environment

67
00:02:34.750 --> 00:02:37.350
and the prod.ts is for the prod environment

68
00:02:37.350 --> 00:02:38.763
or production environment.

69
00:02:39.770 --> 00:02:41.440
Now, this environment.ts file

70
00:02:41.440 --> 00:02:43.920
simply exports this JSON object here.

71
00:02:43.920 --> 00:02:46.410
So environment, production: false,

72
00:02:46.410 --> 00:02:47.740
and then we can add our own

73
00:02:47.740 --> 00:02:49.363
custom environment configs.

74
00:02:51.410 --> 00:02:53.180
And then here at environment.prod.ts,

75
00:02:53.180 --> 00:02:55.930
again, export's this environment JSON object

76
00:02:55.930 --> 00:02:57.340
and we can add our custom config.

77
00:02:57.340 --> 00:02:58.390
So effectively,

78
00:02:58.390 --> 00:03:01.520
something similar to a properties file.

79
00:03:01.520 --> 00:03:04.210
Here, we can give our own name value pairs,

80
00:03:04.210 --> 00:03:06.430
but then it's tied to a given environment

81
00:03:06.430 --> 00:03:08.143
or based on a given environment.

82
00:03:11.660 --> 00:03:14.040
Okay, so let's look at our development process.

83
00:03:14.040 --> 00:03:15.140
So in the first step we're going to

84
00:03:15.140 --> 00:03:17.610
define our configs in an environment file,

85
00:03:17.610 --> 00:03:20.400
then we'll use the environment in our application.

86
00:03:20.400 --> 00:03:21.233
And then finally,

87
00:03:21.233 --> 00:03:23.823
we'll run with a given environment configuration.

88
00:03:26.610 --> 00:03:27.960
Alrighty, step one of defining

89
00:03:27.960 --> 00:03:30.260
the configs in the environment file.

90
00:03:30.260 --> 00:03:32.060
So here's our file, environment.ts.

91
00:03:32.060 --> 00:03:33.820
And we have production: false,

92
00:03:33.820 --> 00:03:35.050
and then we can add our own

93
00:03:35.050 --> 00:03:36.970
custom environment configs.

94
00:03:36.970 --> 00:03:39.360
So here we have luv2shopApiUrl,

95
00:03:39.360 --> 00:03:41.640
we'll give the actual value for that URL

96
00:03:41.640 --> 00:03:43.900
and we could define any name value pairs.

97
00:03:43.900 --> 00:03:45.480
Just like a regular properties file,

98
00:03:45.480 --> 00:03:47.550
you can give any name value pairs,

99
00:03:47.550 --> 00:03:49.150
a similar thing here with setting up

100
00:03:49.150 --> 00:03:50.403
this environment file.

101
00:03:53.040 --> 00:03:53.950
Alrighty, in step two,

102
00:03:53.950 --> 00:03:57.040
we're going to use the environment in an application.

103
00:03:57.040 --> 00:03:58.610
So now productservice.ts,

104
00:03:58.610 --> 00:04:00.790
we simply do an import on environment.

105
00:04:00.790 --> 00:04:01.850
And so that's the environment

106
00:04:01.850 --> 00:04:03.763
from step one that we set up earlier.

107
00:04:06.230 --> 00:04:07.780
Then in our product service class,

108
00:04:07.780 --> 00:04:09.440
when we set up the baseUrl

109
00:04:09.440 --> 00:04:11.463
we reference environment.luv2shopApiUrl,

110
00:04:13.850 --> 00:04:15.520
so that'll basically allow us to access

111
00:04:15.520 --> 00:04:18.283
the value that's defined in the environment.

112
00:04:20.560 --> 00:04:21.800
And then we do a similar thing here

113
00:04:21.800 --> 00:04:22.790
for the categoryUrl.

114
00:04:22.790 --> 00:04:25.490
We simply have environment.luv2shopApiUrl,

115
00:04:25.490 --> 00:04:27.140
and then the rest of the path here,

116
00:04:27.140 --> 00:04:28.673
slash product category.

117
00:04:31.720 --> 00:04:32.790
Okay, with step three,

118
00:04:32.790 --> 00:04:35.320
we're going to run with the environment configuration.

119
00:04:35.320 --> 00:04:36.240
So by default,

120
00:04:36.240 --> 00:04:38.790
there's two environment configurations defined,

121
00:04:38.790 --> 00:04:40.790
default and production.

122
00:04:40.790 --> 00:04:42.810
So if you want to run with the default environment,

123
00:04:42.810 --> 00:04:45.090
you simply just give your command to start the server.

124
00:04:45.090 --> 00:04:46.890
So in this case, npm start,

125
00:04:46.890 --> 00:04:49.793
so that will actually use environment.ts.

126
00:04:51.100 --> 00:04:53.200
If you'd like to run with the product configuration,

127
00:04:53.200 --> 00:04:55.040
then you can simply use npm start

128
00:04:55.040 --> 00:04:58.760
and then you give configuration=production.

129
00:04:58.760 --> 00:04:59.680
And that will actually make use

130
00:04:59.680 --> 00:05:02.340
of the environment.prod.ts.

131
00:05:02.340 --> 00:05:03.350
And behind the scenes,

132
00:05:03.350 --> 00:05:04.439
there's a file that'll actually map

133
00:05:04.439 --> 00:05:06.780
the configuration name

134
00:05:06.780 --> 00:05:09.040
to the actual file name to use,

135
00:05:09.040 --> 00:05:11.340
and we'll get into the details for that later.

136
00:05:14.330 --> 00:05:15.890
You can add custom environments

137
00:05:15.890 --> 00:05:17.850
and give any environment names.

138
00:05:17.850 --> 00:05:20.950
We can have .qa, .betatest, .westcoast.

139
00:05:20.950 --> 00:05:23.430
Additional configuration steps are needed for this

140
00:05:23.430 --> 00:05:24.550
and I'll actually cover this

141
00:05:24.550 --> 00:05:26.100
in some of the upcoming videos.

142
00:05:26.100 --> 00:05:27.993
So don't worry, I got you covered.

143
00:05:29.120 --> 00:05:30.790
Alrighty, this looks pretty good.

144
00:05:30.790 --> 00:05:32.220
Let's go ahead and move into our code

145
00:05:32.220 --> 00:05:33.053
and let's take advantage

146
00:05:33.053 --> 00:05:34.713
of the Angular environment feature.

