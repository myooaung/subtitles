WEBVTT
1
00:00:01.386 --> 00:00:03.430
<v Instructor>Now that we have the CSS issue taken care of,</v>

2
00:00:03.430 --> 00:00:05.130
let's go ahead and just test our application

3
00:00:05.130 --> 00:00:06.760
to make sure it really works.

4
00:00:06.760 --> 00:00:09.620
So let's go ahead and click on the Orders button here.

5
00:00:09.620 --> 00:00:10.980
And good, success.

6
00:00:10.980 --> 00:00:12.590
So this displays the orders.

7
00:00:12.590 --> 00:00:15.860
So in this example, from my example that I was running,

8
00:00:15.860 --> 00:00:17.820
there's only one order in the database,

9
00:00:17.820 --> 00:00:20.690
but you may see more depending on your data

10
00:00:20.690 --> 00:00:23.520
as far as the number of times you ran the application.

11
00:00:23.520 --> 00:00:26.780
But let's go ahead and add a new order here

12
00:00:26.780 --> 00:00:27.613
just to make sure

13
00:00:27.613 --> 00:00:30.933
that it really is keeping track of everything for us.

14
00:00:33.310 --> 00:00:35.643
So I'll just add something to my shopping cart.

15
00:00:39.060 --> 00:00:41.460
Then I move on to my shopping cart and checkout.

16
00:00:44.940 --> 00:00:45.773
And I'll just go through

17
00:00:45.773 --> 00:00:47.560
and fill in all the information here.

18
00:00:51.000 --> 00:00:53.990
And also, make sure you use the same email address

19
00:00:53.990 --> 00:00:55.600
as the one that you're currently logged in

20
00:00:55.600 --> 00:00:58.200
because it will only show you orders

21
00:00:58.200 --> 00:01:00.933
for a specific email address.

22
00:01:19.220 --> 00:01:20.453
Alrighty, so everything's in place here,

23
00:01:20.453 --> 00:01:22.620
so I have one quantity of one

24
00:01:22.620 --> 00:01:25.290
and the total price of 17.99.

25
00:01:25.290 --> 00:01:26.510
Do the purchase.

26
00:01:26.510 --> 00:01:29.273
I get my confirmation and my order tracking number.

27
00:01:36.920 --> 00:01:40.123
And then now if I move over here and click on Orders,

28
00:01:41.140 --> 00:01:43.770
I should see the new order.

29
00:01:43.770 --> 00:01:45.350
And success. Yes, I do.

30
00:01:45.350 --> 00:01:46.183
So there it is.

31
00:01:46.183 --> 00:01:49.760
So the total quantity of one, price of 17.99,

32
00:01:49.760 --> 00:01:54.083
and that was just recently on this date, Feb 13.

33
00:01:54.920 --> 00:01:56.060
All right, so that's the new one.

34
00:01:56.060 --> 00:01:58.480
Now one thing I want to do is make a little enhancement

35
00:01:58.480 --> 00:02:01.960
to this application, and I want to sort by date.

36
00:02:01.960 --> 00:02:04.310
So I'd like to sort in descending order,

37
00:02:04.310 --> 00:02:06.913
showing the most recent date first.

38
00:02:08.650 --> 00:02:09.590
So this will help the user.

39
00:02:09.590 --> 00:02:11.590
When they come in, the first order they see

40
00:02:11.590 --> 00:02:15.263
is the most recent one that was just created or purchased.

41
00:02:21.100 --> 00:02:23.450
So we need to make two changes, one in our backend code,

42
00:02:23.450 --> 00:02:26.300
and also change on the front-end code.

43
00:02:26.300 --> 00:02:29.680
So let's go ahead and move to the backend code, Spring Boot.

44
00:02:29.680 --> 00:02:32.033
Let's open up our OrderRepository.

45
00:02:34.540 --> 00:02:36.393
Stop the code there for a second.

46
00:02:38.500 --> 00:02:42.240
And I will simply change this method name

47
00:02:42.240 --> 00:02:44.700
to perform sorting for me.

48
00:02:44.700 --> 00:02:47.993
So I'll say findByCustomerEmailOrderBy,

49
00:02:49.463 --> 00:02:51.593
okay, OrderBy to kind of sort by,

50
00:02:52.530 --> 00:02:55.673
DateCreated, descending.

51
00:02:56.580 --> 00:02:58.840
Now remember, Spring Boot does all this magic for you

52
00:02:58.840 --> 00:02:59.673
in the background.

53
00:02:59.673 --> 00:03:01.300
It will generate these queries

54
00:03:01.300 --> 00:03:03.563
based on the actual method name.

55
00:03:07.490 --> 00:03:09.140
And then let's kind of break this down a bit.

56
00:03:09.140 --> 00:03:11.598
So we just added this new item here,

57
00:03:11.598 --> 00:03:13.515
OrderByDateCreatedDesc.

58
00:03:15.300 --> 00:03:16.370
So in the query,

59
00:03:16.370 --> 00:03:18.630
Spring will add this new entry at the bottom,

60
00:03:18.630 --> 00:03:20.733
ORDER BY orders.date_created DESC.

61
00:03:24.840 --> 00:03:27.640
And again, all this magic stuff

62
00:03:27.640 --> 00:03:29.723
based on the actual method name.

63
00:03:36.890 --> 00:03:39.250
All right, so that's in place.

64
00:03:39.250 --> 00:03:40.700
Let's go ahead and run the application

65
00:03:40.700 --> 00:03:42.550
so the new version is up and running.

66
00:03:51.520 --> 00:03:53.350
So the backend is up and running.

67
00:03:53.350 --> 00:03:55.650
Now let's go ahead and swing over to our front end

68
00:03:55.650 --> 00:03:58.200
because we need to make some changes over here also.

69
00:04:09.140 --> 00:04:10.040
In our front-end code,

70
00:04:10.040 --> 00:04:13.010
we need to update our service that talks to that REST API,

71
00:04:13.010 --> 00:04:16.993
so we need to update the order-history.service.ts file.

72
00:04:23.590 --> 00:04:26.820
And so this is where we make a call to that given URL.

73
00:04:26.820 --> 00:04:28.470
So we need to update the path

74
00:04:28.470 --> 00:04:30.733
to make use of the new endpoint.

75
00:04:33.840 --> 00:04:35.080
And an easy way to do this

76
00:04:35.080 --> 00:04:40.080
is simply just copy that method name from the backend.

77
00:04:44.420 --> 00:04:47.420
And then just swing over to the front-end code and paste it.

78
00:04:55.060 --> 00:04:58.540
And so make sure you have the method name exactly as given.

79
00:04:58.540 --> 00:05:00.490
If not, you'll have errors,

80
00:05:00.490 --> 00:05:02.540
as far as 404 because it can't find it,

81
00:05:02.540 --> 00:05:03.373
so make sure you have

82
00:05:03.373 --> 00:05:07.123
the findByCustomerEmailOrderByDateCreatedDesc.

83
00:05:11.880 --> 00:05:13.080
All right, so let's go ahead and test this,

84
00:05:13.080 --> 00:05:15.263
so let's move back over to our application.

85
00:05:18.420 --> 00:05:20.063
And then we click on Orders.

86
00:05:24.200 --> 00:05:25.710
All right, success.

87
00:05:25.710 --> 00:05:27.400
So the dates are sorted.

88
00:05:27.400 --> 00:05:29.830
So the dates are sorted in descending order.

89
00:05:29.830 --> 00:05:32.363
The most recent date is displayed first.

90
00:05:36.980 --> 00:05:38.430
Alrighty, so this looks pretty good,

91
00:05:38.430 --> 00:05:40.960
so congrats on adding this slight enhancement

92
00:05:40.960 --> 00:05:42.330
to the application.

93
00:05:42.330 --> 00:05:43.163
Good job.

