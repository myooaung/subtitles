1
00:00:01,430 --> 00:00:02,550
<v Instructor>And one thing I'd like to do,</v>

2
00:00:02,550 --> 00:00:03,850
is make an enhancement.

3
00:00:03,850 --> 00:00:06,930
So at checkout time, I want to pre-populate

4
00:00:06,930 --> 00:00:09,360
the user's email address in the form.

5
00:00:09,360 --> 00:00:11,850
Remember we already have this data saved

6
00:00:11,850 --> 00:00:14,150
in the sessionStorage from the login.

7
00:00:14,150 --> 00:00:16,830
I'll go ahead and grab that and then use it on the form

8
00:00:16,830 --> 00:00:20,440
because we want to keep track of the same email address

9
00:00:20,440 --> 00:00:23,530
because that's how we use it to track the orders

10
00:00:23,530 --> 00:00:24,810
on the back end.

11
00:00:24,810 --> 00:00:26,960
All right, so, an easy way to help things out here

12
00:00:26,960 --> 00:00:29,110
is they'll simply pre-populate that information

13
00:00:29,110 --> 00:00:31,093
for the user during checkout.

14
00:00:35,330 --> 00:00:37,585
And just taking a quick look at our application,

15
00:00:37,585 --> 00:00:40,030
so if we have some items in our shopping cart,

16
00:00:40,030 --> 00:00:42,223
and if we go and do a checkout right now,

17
00:00:52,960 --> 00:00:56,360
user has to enter the same email address

18
00:00:56,360 --> 00:00:57,410
that they're logged in as

19
00:00:57,410 --> 00:00:58,670
but that's kind of error prone, right?

20
00:00:58,670 --> 00:01:01,250
They may not enter the same value.

21
00:01:01,250 --> 00:01:03,950
So let's just go ahead and pre-populate this for them.

22
00:01:13,240 --> 00:01:16,623
So lets go ahead and move into our checkout component.

23
00:01:25,900 --> 00:01:28,753
And I'll open up our checkout.component.ts.

24
00:01:39,270 --> 00:01:40,420
And I'll move down here,

25
00:01:40,420 --> 00:01:43,433
and I add a reference here to the browser session storage.

26
00:02:06,040 --> 00:02:08,440
And then we'll move down to this ngOnInit method,

27
00:02:08,440 --> 00:02:10,760
and we'll actually read the user's email address

28
00:02:10,760 --> 00:02:12,363
from browser's storage.

29
00:02:37,890 --> 00:02:39,410
So we've seen a lot of this coding

30
00:02:39,410 --> 00:02:42,600
before JSON parse to this.storage.getItem,

31
00:02:42,600 --> 00:02:45,600
we give the key of user email

32
00:02:47,320 --> 00:02:48,543
and we simply assign it.

33
00:02:54,560 --> 00:02:55,990
And then when we move down here

34
00:02:55,990 --> 00:02:57,800
and set up our form of control,

35
00:02:57,800 --> 00:03:00,000
our initial value was an empty string.

36
00:03:00,000 --> 00:03:01,510
Now let's use that assignment

37
00:03:01,510 --> 00:03:03,623
that we have the email.

38
00:03:11,180 --> 00:03:12,390
So instead of an empty string,

39
00:03:12,390 --> 00:03:14,370
now we'll actually have whatever value

40
00:03:14,370 --> 00:03:16,740
they have for that user's email.

41
00:03:16,740 --> 00:03:18,470
And that'll be the initial value

42
00:03:18,470 --> 00:03:20,663
that we'll see there on the form.

43
00:03:28,020 --> 00:03:29,520
All right, so I'll go ahead and say this

44
00:03:29,520 --> 00:03:31,474
and let's swing back over and test our application.

45
00:03:31,474 --> 00:03:33,493
Just go back to the checkout form,

46
00:03:36,270 --> 00:03:37,640
and success.

47
00:03:37,640 --> 00:03:41,510
So now the email address is pre-populated on the form.

48
00:03:41,510 --> 00:03:44,940
That's the same email that the user logged in as.

49
00:03:44,940 --> 00:03:46,650
So this looks really good.

50
00:03:46,650 --> 00:03:49,483
I'd like to say good job, my friend.

