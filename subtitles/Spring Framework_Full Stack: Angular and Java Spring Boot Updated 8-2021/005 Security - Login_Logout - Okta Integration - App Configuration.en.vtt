WEBVTT
1
00:00:01.180 --> 00:00:02.810
<v Instructor>Let's start with our development process</v>

2
00:00:02.810 --> 00:00:04.690
and this is for the angular front end.

3
00:00:04.690 --> 00:00:05.523
The first thing that we'll do

4
00:00:05.523 --> 00:00:06.940
is we'll create a free developer account

5
00:00:06.940 --> 00:00:08.390
at okta.com,

6
00:00:08.390 --> 00:00:11.290
then we'll add an openID Connect client application

7
00:00:11.290 --> 00:00:12.600
in Okta.

8
00:00:12.600 --> 00:00:14.390
Next we'll set up our app configuration

9
00:00:14.390 --> 00:00:15.850
for openID Connect,

10
00:00:15.850 --> 00:00:18.530
we'll install the Okta SDK dependencies,

11
00:00:18.530 --> 00:00:21.420
then we'll integrate the Okta Sign-In Widget.

12
00:00:21.420 --> 00:00:23.890
Next we'll develop the login status component

13
00:00:23.890 --> 00:00:25.670
for log-in /log-out buttons,

14
00:00:25.670 --> 00:00:28.540
and finally, we'll update our App Module configs

15
00:00:28.540 --> 00:00:30.053
to connect the routes.

16
00:00:33.190 --> 00:00:35.150
All right, step one is creating a free developer account

17
00:00:35.150 --> 00:00:35.983
at okta.com.

18
00:00:35.983 --> 00:00:37.250
This is very straightforward.

19
00:00:37.250 --> 00:00:39.140
You simply visit Okta's website,

20
00:00:39.140 --> 00:00:40.650
sign up for a free account,

21
00:00:40.650 --> 00:00:41.640
and then check your email

22
00:00:41.640 --> 00:00:42.920
to verify the account.

23
00:00:42.920 --> 00:00:45.470
And also remember this is a free developer account.

24
00:00:45.470 --> 00:00:47.370
There's no credit card required

25
00:00:47.370 --> 00:00:49.710
and it supports up to 1000 users.

26
00:00:49.710 --> 00:00:50.930
So that's more than enough users

27
00:00:50.930 --> 00:00:53.830
for you to get your e-commerce application up and running.

28
00:00:56.420 --> 00:00:57.253
So in Step two,

29
00:00:57.253 --> 00:00:59.250
we'll add the OpenID Connect client app in Okta.

30
00:00:59.250 --> 00:01:01.700
So in our Okta Developer Account

31
00:01:01.700 --> 00:01:03.560
we'll create a new application,

32
00:01:03.560 --> 00:01:06.330
we'll select the option for Single-Page application.

33
00:01:06.330 --> 00:01:08.120
So this is for angular react.

34
00:01:08.120 --> 00:01:10.210
Any of the modern JavaScript front ends.

35
00:01:10.210 --> 00:01:12.610
Then I'll get into all the other configuration details

36
00:01:12.610 --> 00:01:13.770
later in the video

37
00:01:13.770 --> 00:01:15.130
but this is kind of the basic approach

38
00:01:15.130 --> 00:01:16.683
for getting things set up.

39
00:01:19.740 --> 00:01:21.830
In Step three, we'll set up our app configuration

40
00:01:21.830 --> 00:01:23.450
for OpenID Connect.

41
00:01:23.450 --> 00:01:24.520
So to connect with Okta,

42
00:01:24.520 --> 00:01:26.520
we need to provide some configs.

43
00:01:26.520 --> 00:01:29.340
So we need to provide the clientId and the issuer.

44
00:01:29.340 --> 00:01:30.810
This information is available

45
00:01:30.810 --> 00:01:33.310
on the Okta application details screen.

46
00:01:33.310 --> 00:01:34.960
So here we have the client credentials

47
00:01:34.960 --> 00:01:36.210
that's the client ID.

48
00:01:36.210 --> 00:01:37.470
So you'll see this identify here.

49
00:01:37.470 --> 00:01:40.450
This is a public identifier of the client app

50
00:01:40.450 --> 00:01:41.920
and we'll need this information

51
00:01:41.920 --> 00:01:44.593
and use this in our angler application.

52
00:01:45.530 --> 00:01:47.630
And then for issuer, we'll actually make use

53
00:01:47.630 --> 00:01:50.660
of our general settings, our actual Okta domain.

54
00:01:50.660 --> 00:01:53.010
The Okta domain is a unique domain

55
00:01:53.010 --> 00:01:55.660
that's set up for your specific developer account.

56
00:01:55.660 --> 00:01:57.550
This is the year of the your application will use

57
00:01:57.550 --> 00:01:58.563
for tokens.

58
00:02:01.640 --> 00:02:03.750
All right, so using the information from the previous slide

59
00:02:03.750 --> 00:02:04.760
we can set up this file.

60
00:02:04.760 --> 00:02:08.790
My app config.ts, will set up this Chasen structure.

61
00:02:08.790 --> 00:02:09.860
So for client ID,

62
00:02:09.860 --> 00:02:12.130
we'll give the public identifier of the client app

63
00:02:12.130 --> 00:02:13.980
information from that previous slide.

64
00:02:15.120 --> 00:02:17.160
And then also for issuer, this is the URL

65
00:02:17.160 --> 00:02:18.700
that we're going to use when authorizing

66
00:02:18.700 --> 00:02:20.350
with the Okta authorization server.

67
00:02:20.350 --> 00:02:24.720
So again its our Okta domain/oauth2/default

68
00:02:26.230 --> 00:02:27.850
and for the redirect URL,

69
00:02:27.850 --> 00:02:29.280
this the actual callback.

70
00:02:29.280 --> 00:02:31.920
So once the user logs in successfully,

71
00:02:31.920 --> 00:02:34.370
then Okta will send them to this given end point.

72
00:02:34.370 --> 00:02:35.300
So in our application

73
00:02:35.300 --> 00:02:38.550
it's localhost:4200/login/callback.

74
00:02:38.550 --> 00:02:40.200
And I'll show you more coding later

75
00:02:40.200 --> 00:02:42.523
that actually tie these items together.

76
00:02:44.620 --> 00:02:46.110
And then here we have scopes.

77
00:02:46.110 --> 00:02:48.370
So when OpenID Connects scopes provide access

78
00:02:48.370 --> 00:02:50.540
to information about a user such as their name,

79
00:02:50.540 --> 00:02:52.990
phone number, email, department, so on.

80
00:02:52.990 --> 00:02:54.840
So the scope has a set of user attributes

81
00:02:54.840 --> 00:02:56.123
known as claims.

82
00:02:57.690 --> 00:03:00.650
So open ID is required for authentication requests,

83
00:03:00.650 --> 00:03:02.510
profile has a user's first name,

84
00:03:02.510 --> 00:03:04.610
last name, phone number, et cetera.

85
00:03:04.610 --> 00:03:08.023
And of course, email contains the user's email address.

86
00:03:12.050 --> 00:03:13.480
All right, so moving ahead to step four

87
00:03:13.480 --> 00:03:16.250
we need to install the Okta SDK dependencies.

88
00:03:16.250 --> 00:03:18.610
We'll actually use two Okta SDK dependencies.

89
00:03:18.610 --> 00:03:20.530
We'll use the Okta Sign-In Widget

90
00:03:20.530 --> 00:03:23.043
and we'll also use the Okta Anglular SDK.

91
00:03:27.120 --> 00:03:29.730
So the Okta Sign-In Widget is a JavaScript library

92
00:03:29.730 --> 00:03:31.810
for application login.

93
00:03:31.810 --> 00:03:33.610
You don't have to create any of the HTML.

94
00:03:33.610 --> 00:03:36.640
We simply integrate this widget into our application

95
00:03:36.640 --> 00:03:38.130
and it's also customizable.

96
00:03:38.130 --> 00:03:40.480
You can use your own logo, field names,

97
00:03:40.480 --> 00:03:41.620
custom fields and so on.

98
00:03:41.620 --> 00:03:43.370
So you can see this little screenshot here,

99
00:03:43.370 --> 00:03:45.750
I actually have the love to code logo there.

100
00:03:45.750 --> 00:03:47.893
So it's very easy to customize this.

101
00:03:51.550 --> 00:03:53.620
All right, so here's a screenshot of the application

102
00:03:53.620 --> 00:03:54.860
and you saw this in the demo.

103
00:03:54.860 --> 00:03:57.110
Basically, we actually just dropped in

104
00:03:57.110 --> 00:03:58.440
the Okta Sign-In Widget.

105
00:03:58.440 --> 00:04:00.480
So we have our regular application

106
00:04:00.480 --> 00:04:02.900
and we simply plug in the Okta Sign-In widget.

107
00:04:02.900 --> 00:04:05.400
So this widget, it comes out of the box,

108
00:04:05.400 --> 00:04:06.780
username, password.

109
00:04:06.780 --> 00:04:09.130
It'll do all the authentication for us and so on.

110
00:04:09.130 --> 00:04:11.480
We can customize it with our logo and so forth.

111
00:04:15.690 --> 00:04:17.480
Also the Okta Angluler SDK.

112
00:04:17.480 --> 00:04:19.380
So provides integration with the Angular Router

113
00:04:19.380 --> 00:04:21.400
for authentication and authorization.

114
00:04:21.400 --> 00:04:24.410
Some of the core features including login/log out from Okta,

115
00:04:24.410 --> 00:04:26.420
using the OAuth 2.0 API.

116
00:04:26.420 --> 00:04:29.170
We can also use it to retrieve user information

117
00:04:29.170 --> 00:04:31.440
and determine their authentication status.

118
00:04:31.440 --> 00:04:32.820
And you saw an example in the demo

119
00:04:32.820 --> 00:04:34.980
where we could display the user's name

120
00:04:34.980 --> 00:04:36.140
in our actual application

121
00:04:36.140 --> 00:04:39.070
and we'll see how to do that here too.

122
00:04:39.070 --> 00:04:40.360
And there's also some additional features

123
00:04:40.360 --> 00:04:41.630
like we can add protect the routes

124
00:04:41.630 --> 00:04:42.870
that require authentication

125
00:04:42.870 --> 00:04:45.430
and also subscribe to changes in authentication state.

126
00:04:45.430 --> 00:04:48.480
And we'll also add functionality for adding protected routes

127
00:04:48.480 --> 00:04:49.943
in our given application.

128
00:04:53.430 --> 00:04:54.950
All right, so the real nitty gritty here

129
00:04:54.950 --> 00:04:57.510
is for us installing the Okta SDK dependencies

130
00:04:57.510 --> 00:05:00.416
you simply run this npm install command.

131
00:05:00.416 --> 00:05:03.540
So npm install @Okta/Okta-signin-widget

132
00:05:03.540 --> 00:05:07.320
and then also npm install @Okta/Okta-angular

133
00:05:07.320 --> 00:05:09.150
and then we'll install those two dependencies

134
00:05:09.150 --> 00:05:10.500
and then we're ready to go.

