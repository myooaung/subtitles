1
00:00:01,190 --> 00:00:02,090
<v Instructor>All righty, so let's go ahead</v>

2
00:00:02,090 --> 00:00:04,500
and move into our IDE and let's zoom in here.

3
00:00:04,500 --> 00:00:06,390
We need to do some housekeeping work.

4
00:00:06,390 --> 00:00:09,603
I simply want to copy, paste one of my previous projects.

5
00:00:11,850 --> 00:00:15,653
So I'm going to copy this 01-class-definition project.

6
00:00:18,530 --> 00:00:21,863
And then I'll move it to 04-classes and paste it here.

7
00:00:24,400 --> 00:00:27,450
'Cause I want it to be a subdirectory of 04-classes.

8
00:00:27,450 --> 00:00:29,773
And now I'll simply rename in this copy.

9
00:00:33,330 --> 00:00:36,287
And I'll call it 02-access-modifiers.

10
00:00:45,700 --> 00:00:49,390
All righty, so now initially the IDE will show errors.

11
00:00:49,390 --> 00:00:51,270
Simply close the previous files,

12
00:00:51,270 --> 00:00:54,220
and that should get rid of any of the errors that you have.

13
00:01:02,360 --> 00:01:05,280
So let's move into the 02-access-modifiers directory

14
00:01:05,280 --> 00:01:06,553
and open Customer.ts.

15
00:01:13,620 --> 00:01:15,100
All righty, so what I like to do is go in here

16
00:01:15,100 --> 00:01:17,980
and make these properties private.

17
00:01:17,980 --> 00:01:20,193
So I use the private access modifier.

18
00:01:27,020 --> 00:01:28,230
And then if I move down I'll see

19
00:01:28,230 --> 00:01:29,610
that there are some compilation errors

20
00:01:29,610 --> 00:01:31,320
or the IDE has noticed some errors here.

21
00:01:31,320 --> 00:01:33,110
It says, hey, the property is private.

22
00:01:33,110 --> 00:01:35,773
It's only accessible within the class Customer.

23
00:01:36,950 --> 00:01:38,050
And it will also see this in the

24
00:01:38,050 --> 00:01:39,980
little problems output here.

25
00:01:39,980 --> 00:01:42,903
They'll even give you the line number, which is pretty good.

26
00:01:45,330 --> 00:01:47,490
So let's go ahead and move to our terminal window.

27
00:01:47,490 --> 00:01:48,660
I want to move to the directory

28
00:01:48,660 --> 00:01:52,697
04-classes/-02-access-modifiers.

29
00:01:59,220 --> 00:02:01,770
All righty, so let's go ahead and compile our code.

30
00:02:08,720 --> 00:02:11,280
And notice here it gives the compilation errors

31
00:02:11,280 --> 00:02:12,970
that says the property is private,

32
00:02:12,970 --> 00:02:15,080
only accessible within the class Customer.

33
00:02:15,080 --> 00:02:16,570
And we kind of expected that.

34
00:02:16,570 --> 00:02:18,910
So if we look at the contents of our directory,

35
00:02:18,910 --> 00:02:21,040
even though there are compilation errors,

36
00:02:21,040 --> 00:02:25,480
the TypeScript compuler still generates a.js file.

37
00:02:25,480 --> 00:02:28,223
Yikes, what's up with that?

38
00:02:28,223 --> 00:02:29,056
(laughing)

39
00:02:29,056 --> 00:02:30,963
It shouldn't do that, okay?

40
00:02:32,050 --> 00:02:34,060
So let's go ahead and just clean this up a bit.

41
00:02:34,060 --> 00:02:37,563
So let's remove the Customer.js file or delete it.

42
00:02:40,510 --> 00:02:43,140
And now we only have the Customer.ts in our file,

43
00:02:43,140 --> 00:02:47,137
and remember we can solve this by using a compiler flag,

44
00:02:47,137 --> 00:02:48,470
<v ->-noEmitOnError.</v>

45
00:02:49,420 --> 00:02:52,250
So it says do not generate a .js file

46
00:02:52,250 --> 00:02:54,630
if there's a compilation error.

47
00:02:54,630 --> 00:02:56,710
So now when I add that compiler flag

48
00:02:56,710 --> 00:02:59,190
it goes through and everything works as desired.

49
00:02:59,190 --> 00:03:00,750
So there are compilation errors,

50
00:03:00,750 --> 00:03:02,750
and I simply look at the contents of my directory,

51
00:03:02,750 --> 00:03:07,020
and I see that there's only the .ts file.

52
00:03:07,020 --> 00:03:11,133
So yeah, the .js file was not generated.

53
00:03:21,310 --> 00:03:23,230
So let's go ahead and move back into the code

54
00:03:23,230 --> 00:03:25,283
and let's rename the properties.

55
00:03:32,840 --> 00:03:34,120
So I'm going to rename the property

56
00:03:34,120 --> 00:03:36,763
using the underscore symbol for firstName.

57
00:03:44,490 --> 00:03:46,643
And I'll do a similar thing for lastName.

58
00:03:56,997 --> 00:03:58,520
And notice here it updates everything

59
00:03:58,520 --> 00:04:00,373
in the constructor accordingly.

60
00:04:03,100 --> 00:04:06,120
And so remember, we can give any property name.

61
00:04:06,120 --> 00:04:08,670
Most TypeScript developers use the leading underscore,

62
00:04:08,670 --> 00:04:11,900
but again, there's nothing special about the underscore.

63
00:04:11,900 --> 00:04:14,810
There's no magic, just a convention.

64
00:04:14,810 --> 00:04:15,800
You could call it anything.

65
00:04:15,800 --> 00:04:18,733
You can call it xy, ab, whatever.

66
00:04:23,250 --> 00:04:24,780
And now what I do is I like to go through

67
00:04:24,780 --> 00:04:27,887
and create those special TypeScript accessors.

68
00:04:34,030 --> 00:04:36,490
So I set up the get accessor,

69
00:04:36,490 --> 00:04:38,450
and again, remember that special syntax,

70
00:04:38,450 --> 00:04:40,563
get space the property name.

71
00:04:43,020 --> 00:04:45,903
And then a similar thing here for the set accessor.

72
00:04:52,720 --> 00:04:55,620
The syntax set space property name.

73
00:04:55,620 --> 00:04:58,170
And then also remember, there's no return type,

74
00:04:58,170 --> 00:04:59,410
not even void.

75
00:04:59,410 --> 00:05:02,373
So that's the one item that is very particular.

76
00:05:06,040 --> 00:05:07,170
All right, so we're all set up.

77
00:05:07,170 --> 00:05:09,369
So we have our accessors in place here

78
00:05:09,369 --> 00:05:11,807
for that property firstName.

79
00:05:13,520 --> 00:05:17,040
And that should resolve the issue that we have at the bottom

80
00:05:17,040 --> 00:05:20,410
with those previous compilation errors.

81
00:05:20,410 --> 00:05:21,840
So let's just scroll down for a bit.

82
00:05:21,840 --> 00:05:23,280
So yeah, so this looks great.

83
00:05:23,280 --> 00:05:25,230
So firstName propery is a-okay.

84
00:05:25,230 --> 00:05:26,800
That's not a problem.

85
00:05:26,800 --> 00:05:28,240
So we're good with that.

86
00:05:28,240 --> 00:05:30,630
But there is still an issue for lastName,

87
00:05:30,630 --> 00:05:34,273
so we need to add accessors here for lastName.

88
00:05:38,160 --> 00:05:40,100
So now it's kind of more of the same,

89
00:05:40,100 --> 00:05:41,930
but I'll use a different approach here.

90
00:05:41,930 --> 00:05:45,100
So what I'll do is I'll move up to this line of code,

91
00:05:45,100 --> 00:05:47,820
and I'll actually have the IDE generate

92
00:05:47,820 --> 00:05:49,100
the accessors for me.

93
00:05:49,100 --> 00:05:53,250
So I select the line, I show the fixes,

94
00:05:53,250 --> 00:05:57,676
and I'll say generate get, set accessors.

95
00:05:57,676 --> 00:05:58,526
Ooooh, I like it.

96
00:06:04,213 --> 00:06:05,046
And then there we go.

97
00:06:05,046 --> 00:06:07,030
So we have the get and set last name

98
00:06:07,030 --> 00:06:09,430
that was generated by the IDE.

99
00:06:09,430 --> 00:06:11,470
Cool, I love it, I love it.

100
00:06:11,470 --> 00:06:13,980
So what I want to do is kind of just cut and paste on this

101
00:06:13,980 --> 00:06:17,030
'cause I like for my code to show after the constructors.

102
00:06:17,030 --> 00:06:20,880
So I'll cut those get sets and I'll move them down

103
00:06:20,880 --> 00:06:23,070
to the bottom and place them right here.

104
00:06:23,070 --> 00:06:24,060
But there we go, so we have

105
00:06:24,060 --> 00:06:29,060
our get lastName and our set lastName set up just fine.

106
00:06:31,560 --> 00:06:32,690
So now that takes care of that

107
00:06:32,690 --> 00:06:33,950
one issue that we had earlier.

108
00:06:33,950 --> 00:06:34,790
So that goes away.

109
00:06:34,790 --> 00:06:36,620
So firstName property set

110
00:06:36,620 --> 00:06:41,233
and lastName property set up a-okay, just fine, good job.

111
00:06:43,120 --> 00:06:44,600
So let's move into our terminal window here

112
00:06:44,600 --> 00:06:45,733
and compile the code.

113
00:06:50,630 --> 00:06:53,400
And eww, that's weird.

114
00:06:53,400 --> 00:06:58,280
Ah, okay, it says that accessors are only available

115
00:06:58,280 --> 00:07:01,193
when targeting ECMAScript 5 and higher.

116
00:07:02,460 --> 00:07:06,133
So that means I need to set up another compiler flag.

117
00:07:13,200 --> 00:07:17,410
So I need to set the compiler flat --target ES5.

118
00:07:17,410 --> 00:07:18,243
Okay.

119
00:07:21,160 --> 00:07:22,720
And then now when I go through and compile

120
00:07:22,720 --> 00:07:24,310
everything will compile just fine.

121
00:07:24,310 --> 00:07:26,230
Oooo, good stuff, good stuff.

122
00:07:26,230 --> 00:07:29,520
And now when I run the application it runs as desired

123
00:07:29,520 --> 00:07:31,430
and I'm able to see the given output.

124
00:07:31,430 --> 00:07:32,323
Okay, great.

125
00:07:33,220 --> 00:07:34,640
All righty, so, good example here

126
00:07:34,640 --> 00:07:37,423
of using accessors in our application.

