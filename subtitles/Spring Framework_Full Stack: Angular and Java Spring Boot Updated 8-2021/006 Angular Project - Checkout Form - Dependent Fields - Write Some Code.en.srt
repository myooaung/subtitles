1
00:00:01,330 --> 00:00:02,320
<v Instructor>All right, so let's get started</v>

2
00:00:02,320 --> 00:00:03,310
with our development process.

3
00:00:03,310 --> 00:00:05,980
We'll do step one of updating the HTML template

4
00:00:05,980 --> 00:00:08,240
and also updating our checkout component

5
00:00:08,240 --> 00:00:10,003
with the event handler.

6
00:00:19,380 --> 00:00:20,920
All right, so let's go ahead and move in here

7
00:00:20,920 --> 00:00:24,193
and open up our checkoutcomponent.html.

8
00:00:33,280 --> 00:00:36,240
And let's move down to that section

9
00:00:36,240 --> 00:00:39,053
where we have the credit card expiration year.

10
00:00:44,900 --> 00:00:47,073
So there's our component here,

11
00:00:50,490 --> 00:00:54,130
and we're going to add the event bonding here

12
00:00:54,130 --> 00:00:55,650
for the change event.

13
00:00:55,650 --> 00:00:59,283
So let's kind of zoom in, and I'll say change.

14
00:01:01,000 --> 00:01:02,620
And then when that event happens,

15
00:01:02,620 --> 00:01:05,403
I'll call handle months and years.

16
00:01:14,453 --> 00:01:17,250
All right, now the IDE is going to give us an error message,

17
00:01:17,250 --> 00:01:20,070
right, because we haven't really created that method yet.

18
00:01:20,070 --> 00:01:21,450
That's fine.

19
00:01:21,450 --> 00:01:24,603
We'll actually do that in this next section here.

20
00:01:27,700 --> 00:01:29,913
So I'll just copy that method name,

21
00:01:31,750 --> 00:01:33,660
and then I'll use that when I define

22
00:01:33,660 --> 00:01:36,960
that method in my component.ts file.

23
00:01:36,960 --> 00:01:39,793
So let's open up checkoutcomponent.ts.

24
00:01:45,310 --> 00:01:47,050
And so this is for step two of updating

25
00:01:47,050 --> 00:01:50,083
our checkout component and adding that event handler.

26
00:01:54,090 --> 00:01:57,263
So I'll just simply move down to the bottom of this file.

27
00:01:59,030 --> 00:02:03,070
And as the last method here, right after onsubmit,

28
00:02:03,070 --> 00:02:08,070
I'll paste in that method name, handle months and years.

29
00:02:08,970 --> 00:02:10,770
There we go, that looks pretty good.

30
00:02:30,070 --> 00:02:31,100
So the first thing I'll do is

31
00:02:31,100 --> 00:02:33,683
I'll get a handle to the credit card form group,

32
00:02:41,390 --> 00:02:42,870
and then I'll get the current year

33
00:02:42,870 --> 00:02:45,023
by saying new date.getfullyear,

34
00:02:58,260 --> 00:03:02,010
and then I'll also get the selected year from the form.

35
00:03:02,010 --> 00:03:04,940
So whatever the user selected in the UIE on the form,

36
00:03:04,940 --> 00:03:06,963
I'll read that as a selected year.

37
00:03:12,270 --> 00:03:13,790
And so here, we want to check to see

38
00:03:13,790 --> 00:03:16,290
if the current year equals the selected year.

39
00:03:16,290 --> 00:03:18,940
If so, then we're going to start with the current month.

40
00:03:22,290 --> 00:03:24,890
So I'll just set up a variable here for start month,

41
00:03:32,810 --> 00:03:34,260
and then I perform this comparison.

42
00:03:34,260 --> 00:03:37,043
If current year equals selected year,

43
00:03:38,820 --> 00:03:41,130
then we'll start with the current month.

44
00:03:41,130 --> 00:03:43,143
So I say new date.getmonth.

45
00:03:44,750 --> 00:03:46,330
And again, plus one,

46
00:03:46,330 --> 00:03:49,443
because everything's zero-based for months.

47
00:03:54,560 --> 00:03:56,833
Else, I'll have start month equals one.

48
00:04:14,520 --> 00:04:16,460
And then I simply call my form service,

49
00:04:16,460 --> 00:04:17,800
and I say get credit card months,

50
00:04:17,800 --> 00:04:19,800
and I give them the month to start with.

51
00:04:21,200 --> 00:04:22,780
And all of this other coding here is the same,

52
00:04:22,780 --> 00:04:24,460
we do .subscribe.

53
00:04:24,460 --> 00:04:26,050
We get the data back and we assign it

54
00:04:26,050 --> 00:04:29,013
to this.creditcardmonths equals data.

55
00:04:47,580 --> 00:04:50,530
Alrighty, so this coding here looks pretty good, I like it.

56
00:04:58,270 --> 00:05:00,650
Alright, so let's go ahead and test it out.

57
00:05:00,650 --> 00:05:02,700
If your Spring Boot backend is not running,

58
00:05:02,700 --> 00:05:04,153
go ahead and start it now.

59
00:05:08,564 --> 00:05:11,980
Then let's go ahead and start up our Angular app,

60
00:05:23,040 --> 00:05:24,510
swing back into our browser,

61
00:05:24,510 --> 00:05:26,760
let's just add a couple of items to the cart.

62
00:05:30,080 --> 00:05:32,530
And so I'm going to go check out here at the bottom.

63
00:05:37,880 --> 00:05:38,910
And so now we're going to check

64
00:05:38,910 --> 00:05:41,610
to make sure our fields are dependent.

65
00:05:41,610 --> 00:05:43,880
So if we choose a future year,

66
00:05:43,880 --> 00:05:47,593
then we're going to get all of the months, one to 12.

67
00:05:54,240 --> 00:05:57,030
And if we select the current year,

68
00:05:57,030 --> 00:05:58,650
then we only get the months

69
00:05:58,650 --> 00:06:01,160
from the current month into the future.

70
00:06:01,160 --> 00:06:03,560
So when I'm recording this it's June,

71
00:06:03,560 --> 00:06:06,840
and so that's why we see six going down to 12.

72
00:06:06,840 --> 00:06:09,290
But your values may differ based on

73
00:06:09,290 --> 00:06:12,063
when you actually run your application as far as time.

74
00:06:13,390 --> 00:06:14,610
All right, so this looks pretty good.

75
00:06:14,610 --> 00:06:18,540
So we have dependent fields in place, I like it.

76
00:06:18,540 --> 00:06:19,883
Good job, my friend.

