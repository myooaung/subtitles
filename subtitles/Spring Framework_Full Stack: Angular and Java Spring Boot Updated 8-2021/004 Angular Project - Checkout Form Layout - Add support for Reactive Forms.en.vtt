WEBVTT
1
00:00:01.360 --> 00:00:02.193
<v Instructor>In this video we're</v>

2
00:00:02.193 --> 00:00:03.720
going to cover steps four and five

3
00:00:03.720 --> 00:00:05.642
of adding support for reactive forms,

4
00:00:05.642 --> 00:00:09.333
and also defining a form in a component .ts file.

5
00:00:25.030 --> 00:00:27.260
Now, to add support for reactive forms,

6
00:00:27.260 --> 00:00:30.430
maker modifications are at app.module.ts file

7
00:00:34.993 --> 00:00:37.260
And, we move down to the import section

8
00:00:37.260 --> 00:00:40.240
and we add in reactive forms module. So,

9
00:00:40.240 --> 00:00:43.793
this gives us a port for reactive forms in our project.

10
00:00:47.240 --> 00:00:48.073
Now, in step five we are going to

11
00:00:48.073 --> 00:00:51.290
define the form in the component.ts file

12
00:00:57.150 --> 00:01:00.280
So, let's move over to checkout.component.ts

13
00:01:12.750 --> 00:01:13.812
The first thing we'll do here

14
00:01:13.812 --> 00:01:16.000
is we'll declare our form group.

15
00:01:16.000 --> 00:01:18.070
We'll call it checkoutFormGroup

16
00:01:23.520 --> 00:01:25.380
Remember, a form group is a collection

17
00:01:25.380 --> 00:01:28.720
of form controls of form elements or other groups

18
00:01:34.600 --> 00:01:37.590
Then, we'll inject our form builder, and we'll use it

19
00:01:37.590 --> 00:01:39.303
to actually build our form.

20
00:01:56.180 --> 00:01:58.170
Then, with our ngOnInit method,

21
00:01:58.170 --> 00:01:59.560
we'll build the form. So, I'll say

22
00:01:59.560 --> 00:02:01.180
this.checkoutFormGroup equals

23
00:02:01.180 --> 00:02:04.550
this.formBuilder.group

24
00:02:04.550 --> 00:02:06.263
So, we're creating a group.

25
00:02:16.600 --> 00:02:19.604
We give the key. So, customer. Then this is

26
00:02:19.604 --> 00:02:22.630
going to actually be a group in itself.

27
00:02:22.630 --> 00:02:24.790
So, we're going to have a collection of groups here

28
00:02:30.740 --> 00:02:32.920
So, this customer form group is going to have

29
00:02:32.920 --> 00:02:35.680
fields for the customers first name, last name,

30
00:02:35.680 --> 00:02:36.743
and e-mail address.

31
00:02:39.304 --> 00:02:41.913
We'll set the initial value for these fields to empty.

32
00:02:58.340 --> 00:03:00.390
So, this coding looks pretty good so far,

33
00:03:03.917 --> 00:03:05.550
and now I'm going to make a minor update

34
00:03:05.550 --> 00:03:06.693
to my styles.css

35
00:03:25.470 --> 00:03:29.323
Let's just search for the string here, page-m.

36
00:03:31.210 --> 00:03:35.130
So, there we go, you should find it .main-content.page-m

37
00:03:37.730 --> 00:03:39.160
We're going to make a modification here,

38
00:03:39.160 --> 00:03:41.320
we're going to change the actual padding just

39
00:03:41.320 --> 00:03:44.073
so we can help the layout of our actual form.

40
00:03:45.600 --> 00:03:47.100
So, just a cosmetic item here.

41
00:03:58.370 --> 00:04:03.090
So, I give the padding values here 10%, 30%, 10%, 5%.

42
00:04:03.090 --> 00:04:06.370
This relates to top, right, bottom, and left

43
00:04:06.370 --> 00:04:08.790
padding. So, when you see the items

44
00:04:08.790 --> 00:04:12.140
sequentially, that's the order or meaning

45
00:04:12.140 --> 00:04:14.120
of those items. You can also add them

46
00:04:14.120 --> 00:04:15.830
individually but, this is more of just a

47
00:04:15.830 --> 00:04:18.053
shorthand css notation.

