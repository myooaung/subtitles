WEBVTT
1
00:00:01.100 --> 00:00:03.640
<v ->Okay. So let's get started with our development process.</v>

2
00:00:03.640 --> 00:00:05.490
So in this video, we'll cover steps one and two

3
00:00:05.490 --> 00:00:07.520
of add in the Spring Boot Starter

4
00:00:07.520 --> 00:00:11.063
and also creating an App at the Okta Developer website.

5
00:00:20.760 --> 00:00:23.453
Let's go ahead and open up our pom.xml file.

6
00:00:29.380 --> 00:00:32.480
And we'll move down here to our Dependency section

7
00:00:32.480 --> 00:00:34.270
and we'll add a new Dependency

8
00:00:34.270 --> 00:00:36.570
for the Okta Spring Boot Starter.

9
00:00:36.570 --> 00:00:38.523
Let me zoom in here for a second.

10
00:00:41.320 --> 00:00:43.593
I'll have the basics here for the Dependency.

11
00:00:51.500 --> 00:00:53.300
And I'll go ahead and add the appropriate information

12
00:00:53.300 --> 00:00:54.633
here for the Group ID.

13
00:01:01.780 --> 00:01:03.573
And also the Artifact ID.

14
00:01:14.240 --> 00:01:16.210
And don't worry that it's red right now,

15
00:01:16.210 --> 00:01:17.893
we'll resolve that in a second.

16
00:01:19.900 --> 00:01:22.300
And I'll also add an issue here for the Version.

17
00:01:29.870 --> 00:01:31.530
And now if you'd like to get more details

18
00:01:31.530 --> 00:01:32.440
on this starter here,

19
00:01:32.440 --> 00:01:34.913
you can use the link that I have on the screen.

20
00:01:39.870 --> 00:01:41.620
Now it's red, we can resolve that

21
00:01:41.620 --> 00:01:44.880
by simply just having Maven update the project

22
00:01:44.880 --> 00:01:46.533
or reload the project.

23
00:01:49.720 --> 00:01:51.890
So I'll just swing over here to this pom file

24
00:01:51.890 --> 00:01:56.890
and I'll simply go to Maven and I'll say, "Reload project".

25
00:02:03.080 --> 00:02:04.660
And give it a bit, it's going to download

26
00:02:04.660 --> 00:02:07.630
some of the JAR files from the internet

27
00:02:07.630 --> 00:02:10.890
but then over time, once it does all of its special magic,

28
00:02:10.890 --> 00:02:13.760
then everything is resolved and we're a okay

29
00:02:13.760 --> 00:02:14.803
so that part's good.

30
00:02:19.530 --> 00:02:21.400
Now we'll move to step two of creating an App

31
00:02:21.400 --> 00:02:23.043
at the Okta Developer website.

32
00:02:26.250 --> 00:02:29.000
So we just open up developer.okta.com

33
00:02:37.430 --> 00:02:39.010
and we can sign in with our email

34
00:02:39.010 --> 00:02:41.760
and using the previous account that we already created.

35
00:02:54.882 --> 00:02:56.730
All right, so we're logged in here.

36
00:02:56.730 --> 00:02:58.620
So, they've changed their user interface recently

37
00:02:58.620 --> 00:03:00.850
so things may change again when you see it

38
00:03:00.850 --> 00:03:02.363
but click on Admin.

39
00:03:06.240 --> 00:03:07.940
And then over on the left hand side,

40
00:03:07.940 --> 00:03:12.803
select the link here and then take a look at Applications.

41
00:03:17.550 --> 00:03:19.313
Select the Applications.

42
00:03:22.090 --> 00:03:25.173
On this screen, we're going to go ahead and add an application.

43
00:03:32.370 --> 00:03:34.213
And now we choose Create New App.

44
00:03:41.610 --> 00:03:44.410
For the platform, make sure you have Web selected

45
00:03:44.410 --> 00:03:46.140
and for the sign-on method,

46
00:03:46.140 --> 00:03:48.930
choose the option for OpenID Connect

47
00:03:48.930 --> 00:03:50.540
because that's the protocol that we're using

48
00:03:50.540 --> 00:03:52.540
for logging users into our applications.

49
00:04:03.320 --> 00:04:06.210
And now we can set up some additional pieces of information

50
00:04:06.210 --> 00:04:07.263
or settings here.

51
00:04:11.060 --> 00:04:12.717
For application name, I'll call it,

52
00:04:12.717 --> 00:04:15.520
"Spring Boot Ecommerce Backend".

53
00:04:15.520 --> 00:04:17.720
You can give it any name that you want here.

54
00:04:23.900 --> 00:04:27.240
And then, I'll move down to configuring OpenID Connect.

55
00:04:27.240 --> 00:04:29.443
As for the login, redirect URIs.

56
00:04:35.550 --> 00:04:40.550
I'll give localhost:8080/login/oauth2/code/okta.

57
00:04:47.740 --> 00:04:49.640
Now, you may wonder where this come from.

58
00:04:49.640 --> 00:04:51.810
This URI is automatically exposed

59
00:04:51.810 --> 00:04:53.640
in our Spring Boot application.

60
00:04:53.640 --> 00:04:56.840
This is provided by the Okta Spring Boot Starter

61
00:04:56.840 --> 00:05:00.280
because we added the Dependency in our pom.xml.

62
00:05:00.280 --> 00:05:02.690
So, there's no code that we have to write

63
00:05:02.690 --> 00:05:04.271
to expose this endpoint.

64
00:05:04.271 --> 00:05:07.600
By simply adding the Okta Spring Boot Starter

65
00:05:07.600 --> 00:05:10.000
to our project in that pom.xml,

66
00:05:10.000 --> 00:05:13.730
then Okta will automatically expose this URL.

67
00:05:13.730 --> 00:05:16.420
This is part of the Spring Boot Auto Configuration

68
00:05:16.420 --> 00:05:18.960
and Okta leverages that functionality.

69
00:05:18.960 --> 00:05:21.050
So again, no code you have to write.

70
00:05:21.050 --> 00:05:22.740
You get this endpoint for free

71
00:05:22.740 --> 00:05:27.003
by adding the Spring Boot Starter to your pom.xml file.

72
00:05:34.010 --> 00:05:35.520
Once everything looks good, just go ahead

73
00:05:35.520 --> 00:05:38.850
and hit the Save button and then we're all set up.

74
00:05:38.850 --> 00:05:40.510
So the apps created successfully.

75
00:05:40.510 --> 00:05:42.840
So, we can go ahead and look at some of the items

76
00:05:42.840 --> 00:05:43.673
that are out here,

77
00:05:43.673 --> 00:05:44.640
like the Client Credentials,

78
00:05:44.640 --> 00:05:49.490
like the ID, the secret, the Okta domain, and so on.

79
00:05:49.490 --> 00:05:53.150
And so, we'll use this information in our next video

80
00:05:53.150 --> 00:05:55.240
for setting up properties and so forth.

81
00:05:55.240 --> 00:05:56.610
So this looks really good.

82
00:05:56.610 --> 00:05:58.263
We're in a good shape so far.

