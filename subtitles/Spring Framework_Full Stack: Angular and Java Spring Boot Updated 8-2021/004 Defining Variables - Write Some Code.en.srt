1
00:00:01,230 --> 00:00:02,240
<v Instructor>All righty, so let's go ahead</v>

2
00:00:02,240 --> 00:00:03,363
and move into our IDE.

3
00:00:05,250 --> 00:00:08,433
And so this is for the section on making use of variables.

4
00:00:10,740 --> 00:00:14,903
So I'll create a new folder here in my TYPESCRIPT TRAINING.

5
00:00:17,550 --> 00:00:19,213
I'll call it 02-variables.

6
00:00:26,050 --> 00:00:28,650
And I'll also create a new folder in this file here.

7
00:00:33,480 --> 00:00:35,093
I'll call it sample-types.ts.

8
00:00:46,584 --> 00:00:47,687
Okay, so I'll simply go in here

9
00:00:47,687 --> 00:00:50,063
and just define some variables here.

10
00:00:54,600 --> 00:00:56,813
So found boolean = true.

11
00:00:59,813 --> 00:01:01,313
Grade equals 88.6.

12
00:01:09,775 --> 00:01:11,010
firstName Anup.

13
00:01:17,910 --> 00:01:19,573
lastName Kumar.

14
00:01:28,530 --> 00:01:29,990
And so notice here on the strings

15
00:01:29,990 --> 00:01:32,230
you can use double quotes or single quotes,

16
00:01:32,230 --> 00:01:34,160
totally up to you.

17
00:01:34,160 --> 00:01:36,720
And let's go ahead and display some output

18
00:01:36,720 --> 00:01:38,283
using a console.log.

19
00:01:41,550 --> 00:01:43,410
And so I'll simply do a console.log

20
00:01:43,410 --> 00:01:46,463
on each one of these variables that we've defined.

21
00:02:03,981 --> 00:02:05,440
And so for the names here I'll just use

22
00:02:05,440 --> 00:02:07,000
the string concatenation here,

23
00:02:07,000 --> 00:02:09,123
Hi firstName plus lastName.

24
00:02:13,140 --> 00:02:15,783
So let's go ahead and open up a terminal window here.

25
00:02:20,330 --> 00:02:22,103
Just kind of resize it a bit.

26
00:02:26,670 --> 00:02:28,990
And let me just kind of zoom out,

27
00:02:28,990 --> 00:02:30,543
give us some space here.

28
00:02:31,450 --> 00:02:33,360
So let's move into that new directory that we have,

29
00:02:33,360 --> 00:02:34,433
02-variables.

30
00:02:36,360 --> 00:02:40,463
And now I just compile the file using tsc sample-types.ts.

31
00:02:45,010 --> 00:02:47,330
And so now I'll use the node command to run the application.

32
00:02:47,330 --> 00:02:50,513
So here I have node sample-types.js.

33
00:02:52,860 --> 00:02:54,280
And then here we see the output true

34
00:02:54,280 --> 00:02:57,030
the trade is 88.6 and hi Anup Kumar

35
00:02:58,370 --> 00:02:59,893
that looks pretty good, I like it.

36
00:03:03,290 --> 00:03:08,173
So now let's zoom in here and let's try and break it.

37
00:03:09,250 --> 00:03:11,463
Let's see how this compiler thing works.

38
00:03:13,740 --> 00:03:16,010
So here I'll set found equals zero.

39
00:03:16,010 --> 00:03:17,440
So that should generate an error

40
00:03:17,440 --> 00:03:21,070
because a Boolean can't be assigned to zero, good.

41
00:03:21,070 --> 00:03:23,203
So even the IDE tells us this.

42
00:03:31,030 --> 00:03:33,350
I'll set the grade equals to A,

43
00:03:33,350 --> 00:03:37,010
and again, a little error message there,

44
00:03:37,010 --> 00:03:38,483
which is great, good job.

45
00:03:45,890 --> 00:03:48,787
I'll try and make some assignments to firstName.

46
00:03:55,841 --> 00:03:57,850
Okay, great, so I have this and I save it.

47
00:03:57,850 --> 00:04:00,293
Now let's go ahead and compile this.

48
00:04:01,610 --> 00:04:03,673
Tsc sample-types.ts.

49
00:04:04,690 --> 00:04:07,440
And in the compiler, good.

50
00:04:07,440 --> 00:04:09,570
So let's say that final three errors.

51
00:04:09,570 --> 00:04:10,820
And it'll kind of list out those errors.

52
00:04:10,820 --> 00:04:12,690
And these are kind of the same ones that we saw

53
00:04:12,690 --> 00:04:15,213
in the IDE, so that's cool, I'm happy about that.

54
00:04:18,870 --> 00:04:21,110
And also, if you click on this little problems tab here

55
00:04:21,110 --> 00:04:23,340
you'll see those same messages.

56
00:04:23,340 --> 00:04:24,173
So again, good stuff.

57
00:04:24,173 --> 00:04:25,230
They even tell you the line number and so on

58
00:04:25,230 --> 00:04:27,890
so you know exactly where you have to go.

59
00:04:27,890 --> 00:04:29,760
So one thing to note, though,

60
00:04:29,760 --> 00:04:31,100
and this is kind of scary,

61
00:04:31,100 --> 00:04:36,100
by default tsc will still generate a JavaScript file.

62
00:04:37,160 --> 00:04:38,137
What (laughing)?

63
00:04:39,860 --> 00:04:44,750
So to prevent this you need to add a special compiler flag

64
00:04:44,750 --> 00:04:45,600
so noEmitOnError.

65
00:04:52,910 --> 00:04:55,060
Okay great, so let me go ahead and comment that stuff out.

66
00:04:55,060 --> 00:04:56,380
I don't want to break anything right now.

67
00:04:56,380 --> 00:04:58,653
Just get the compiler to pass.

68
00:05:14,532 --> 00:05:16,110
And then we do a tsc sample-types.

69
00:05:16,110 --> 00:05:17,100
Okay, good.

70
00:05:17,100 --> 00:05:18,700
So everything's good to go there.

71
00:05:18,700 --> 00:05:20,530
If we run it then we get our output.

72
00:05:20,530 --> 00:05:21,660
Okay, that's awesome.

73
00:05:21,660 --> 00:05:22,810
I like that part of it.

74
00:05:26,115 --> 00:05:26,948
And then what I'd like to do is kind of

75
00:05:26,948 --> 00:05:28,950
move back into this example,

76
00:05:28,950 --> 00:05:33,470
and I want to make use of the template strings here.

77
00:05:50,541 --> 00:05:51,374
And so remember,

78
00:05:51,374 --> 00:05:53,130
the template strings make use of that back tick.

79
00:05:58,680 --> 00:06:01,130
And so instead of having to do all the concatenation

80
00:06:01,130 --> 00:06:03,600
with the plus symbols I can simply reference the variables

81
00:06:03,600 --> 00:06:05,810
using the dollar sign, curly brace.

82
00:06:05,810 --> 00:06:08,130
So I could say Hi firstName space

83
00:06:08,130 --> 00:06:10,620
and then dollar sign curly brace lastName.

84
00:06:10,620 --> 00:06:12,923
So it'll actually reference those variables.

85
00:06:15,130 --> 00:06:16,563
All right, so I save it.

86
00:06:18,890 --> 00:06:19,813
Compile it.

87
00:06:24,610 --> 00:06:26,308
And then run it.

88
00:06:26,308 --> 00:06:28,430
And we have two messages here for Hi Anup Kumar.

89
00:06:28,430 --> 00:06:31,100
So the first version is with the string concatenation

90
00:06:31,100 --> 00:06:33,550
and the second one is using the template strings.

91
00:06:37,490 --> 00:06:38,910
All righty, so this is a good example.

92
00:06:38,910 --> 00:06:40,420
We kind of went through and played around

93
00:06:40,420 --> 00:06:42,840
with creating variables and also displaying output,

94
00:06:42,840 --> 00:06:44,013
so good job.

