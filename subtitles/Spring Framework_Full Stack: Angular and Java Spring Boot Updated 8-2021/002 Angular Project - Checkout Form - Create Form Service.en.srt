1
00:00:01,367 --> 00:00:02,200
<v Presenter>All right, so let's get started</v>

2
00:00:02,200 --> 00:00:03,530
with our development process.

3
00:00:03,530 --> 00:00:06,100
So in this video, we're going to cover steps one and two,

4
00:00:06,100 --> 00:00:08,660
generating our form service and adding methods

5
00:00:08,660 --> 00:00:10,833
to the form service for months and years.

6
00:00:14,930 --> 00:00:17,210
All right, step one of generating our forms service.

7
00:00:17,210 --> 00:00:19,963
So let's go ahead and open up a new terminal window.

8
00:00:29,760 --> 00:00:30,960
I'll move into my directory

9
00:00:30,960 --> 00:00:32,773
and I'll zoom in here for a second.

10
00:00:34,960 --> 00:00:37,773
Now I'll make use of that ng generate service.

11
00:00:39,090 --> 00:00:40,620
I give services/luv2ShopForm

12
00:00:56,933 --> 00:00:58,910
and then this will generate the supporting classes

13
00:00:58,910 --> 00:01:01,313
for our luv2-shop-form service.

14
00:01:02,340 --> 00:01:04,453
I can swing over here and verify this.

15
00:01:05,720 --> 00:01:08,060
Under App, Services

16
00:01:08,060 --> 00:01:10,250
and so there's my new file here,

17
00:01:10,250 --> 00:01:12,233
luv2-shop-form service.

18
00:01:13,580 --> 00:01:15,480
Before I get into editing here, let me go ahead

19
00:01:15,480 --> 00:01:17,130
and close off this terminal window,

20
00:01:17,130 --> 00:01:18,663
just doing an exit over here.

21
00:01:22,300 --> 00:01:24,713
Now let's open up our luv2-shop-form service.

22
00:01:29,580 --> 00:01:31,040
All right, so this is step two here

23
00:01:31,040 --> 00:01:34,323
of adding methods to the form service for months and years.

24
00:01:48,360 --> 00:01:50,940
I'll add a method here, get credit card months,

25
00:01:50,940 --> 00:01:53,140
they pass in a parameter for start month

26
00:01:53,140 --> 00:01:55,750
and we'll return an observable array,

27
00:01:55,750 --> 00:01:57,283
number square brackets.

28
00:02:01,650 --> 00:02:03,560
And remember, we're using observables here

29
00:02:03,560 --> 00:02:05,550
because our angler components are going to subscribe

30
00:02:05,550 --> 00:02:08,573
to this method to get the results of the async call.

31
00:02:15,200 --> 00:02:16,590
All right, let me kind of just stretch out here

32
00:02:16,590 --> 00:02:19,260
at the bottom so I can have some extra white space

33
00:02:19,260 --> 00:02:20,343
or room to work with.

34
00:02:25,720 --> 00:02:28,083
So we'll simply define our MTRA here.

35
00:02:38,410 --> 00:02:41,020
So I've build an array for the month dropdown list,

36
00:02:41,020 --> 00:02:42,210
I'll start with the current month

37
00:02:42,210 --> 00:02:44,930
and loop until month number 12.

38
00:02:44,930 --> 00:02:46,830
No, I didn't say the number 12 there in the comment

39
00:02:46,830 --> 00:02:48,993
but I'm looping until mark number 12.

40
00:03:02,190 --> 00:03:03,230
So I just set up the four loop here,

41
00:03:03,230 --> 00:03:05,250
I say the month equals start month,

42
00:03:05,250 --> 00:03:07,310
a month less than equal to 12,

43
00:03:07,310 --> 00:03:08,653
the month plus plus,

44
00:03:11,143 --> 00:03:13,170
I'll do a data.push for months,

45
00:03:13,170 --> 00:03:15,323
I'll be adding that items to the array.

46
00:03:19,360 --> 00:03:22,483
And then I do a return of data.

47
00:03:23,530 --> 00:03:26,270
So here we use the of operator from rxjs

48
00:03:26,270 --> 00:03:28,770
so we're going to wrap an object as an observable.

49
00:03:28,770 --> 00:03:32,320
So in this case here, we make use of our data array

50
00:03:32,320 --> 00:03:34,520
and we wrap it as an observable.

51
00:03:34,520 --> 00:03:36,520
Remember, we're using observables here

52
00:03:36,520 --> 00:03:39,100
because our angler component is going to subscribe

53
00:03:39,100 --> 00:03:42,273
to this method to receive the async data.

54
00:03:44,220 --> 00:03:46,090
And then I simply just do a little fix here

55
00:03:46,090 --> 00:03:47,230
on the import for luv

56
00:03:53,465 --> 00:03:54,580
and then we can scroll to the top,

57
00:03:54,580 --> 00:03:57,343
make sure that's all imported properly.

58
00:03:59,350 --> 00:04:00,340
Okay, that looks good.

59
00:04:00,340 --> 00:04:01,350
And remember, all this is

60
00:04:01,350 --> 00:04:03,993
from the Reactive Java Script framework.

61
00:04:06,890 --> 00:04:08,046
All right, so that's the coding there

62
00:04:08,046 --> 00:04:08,960
for getting credit card months.

63
00:04:08,960 --> 00:04:10,110
This looks pretty good.

64
00:04:13,340 --> 00:04:16,513
Now let's go ahead and do a similar thing here for years.

65
00:04:18,500 --> 00:04:20,653
So we'll have get credit card years,

66
00:04:22,540 --> 00:04:25,133
it turns on observable array.

67
00:04:32,000 --> 00:04:34,383
So we'll simply define our MTRA here.

68
00:04:48,860 --> 00:04:51,280
So we'll build an array for the year dropdown list,

69
00:04:51,280 --> 00:04:52,530
we'll start with the current year

70
00:04:52,530 --> 00:04:54,863
and we'll loop for the next 10 years.

71
00:05:04,290 --> 00:05:06,870
So I'll simply set up start year as a number,

72
00:05:06,870 --> 00:05:08,910
new date, get full year.

73
00:05:08,910 --> 00:05:12,220
And so this will give me the current year that we're at.

74
00:05:12,220 --> 00:05:14,770
So if it's 2020, we get the value 2020,

75
00:05:14,770 --> 00:05:18,713
if we're in 2024 it will return us a value of 2024.

76
00:05:26,018 --> 00:05:26,851
And then for the end year,

77
00:05:26,851 --> 00:05:29,163
we simply take the start year plus 10.

78
00:05:46,860 --> 00:05:48,810
So now simply set up a for loop,

79
00:05:48,810 --> 00:05:50,450
the year equals start year,

80
00:05:50,450 --> 00:05:53,663
the year is less than equal to end year, the year plus plus.

81
00:05:54,780 --> 00:05:58,420
And it seems as though I have a small typo somewhere,

82
00:05:58,420 --> 00:05:59,290
where is it?

83
00:05:59,290 --> 00:06:00,690
I see it right here.

84
00:06:00,690 --> 00:06:03,285
The year semicolon,

85
00:06:03,285 --> 00:06:05,573
I get that, semicolon.

86
00:06:06,530 --> 00:06:08,530
Okay, that looks really good, I like it.

87
00:06:12,510 --> 00:06:15,420
And now here, I simply do a data.push the year.

88
00:06:15,420 --> 00:06:18,543
So I'm simply adding that year to the array.

89
00:06:23,270 --> 00:06:24,950
And then we simply repeat the process, right.

90
00:06:24,950 --> 00:06:27,477
So we do a return of data.

91
00:06:27,477 --> 00:06:31,060
We're simply using the of operator from rxjs

92
00:06:31,060 --> 00:06:34,560
to wrap the object as an observable.

93
00:06:34,560 --> 00:06:36,480
Our angular component is going to subscribe

94
00:06:36,480 --> 00:06:39,803
to this method to receive all of this async data.

95
00:06:40,930 --> 00:06:42,460
All right, so I'll just kind of clean up here

96
00:06:42,460 --> 00:06:43,560
and this looks pretty good.

97
00:06:43,560 --> 00:06:48,560
So our Luv2-shop-form service is finished for the moment.

98
00:06:49,270 --> 00:06:50,103
Good job.

