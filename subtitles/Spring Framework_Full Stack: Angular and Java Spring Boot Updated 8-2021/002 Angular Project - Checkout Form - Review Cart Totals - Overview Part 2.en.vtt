WEBVTT
1
00:00:01.240 --> 00:00:03.120
<v Instructor>So we've seen the information regarding</v>

2
00:00:03.120 --> 00:00:06.653
ReplaySubject, but wait, there's another solution.

3
00:00:07.510 --> 00:00:09.760
So at first glance ReplaySubject

4
00:00:09.760 --> 00:00:12.430
seems like the perfect solution.

5
00:00:12.430 --> 00:00:13.700
However, for our totals

6
00:00:13.700 --> 00:00:18.030
we really don't need to replay the previous totals.

7
00:00:18.030 --> 00:00:20.950
We're really only interested in the latest total,

8
00:00:20.950 --> 00:00:23.210
the last computed total.

9
00:00:23.210 --> 00:00:27.280
I'm only interested in the last event or the last message.

10
00:00:27.280 --> 00:00:29.200
So in the scenario of the meeting,

11
00:00:29.200 --> 00:00:30.900
sorry, I'm late to the meeting.

12
00:00:30.900 --> 00:00:33.320
What is the latest cart total?

13
00:00:33.320 --> 00:00:35.830
I really don't care about all the intermediate discussions.

14
00:00:35.830 --> 00:00:37.730
What's the latest cart total?

15
00:00:37.730 --> 00:00:38.730
A similar thing,

16
00:00:38.730 --> 00:00:43.420
when you make it up to the checkout counter at the store.

17
00:00:43.420 --> 00:00:45.950
You want to find out what's the latest price

18
00:00:45.950 --> 00:00:48.070
or what's the total price that you need to pay.

19
00:00:48.070 --> 00:00:50.790
You really don't care about the intermediate prices.

20
00:00:50.790 --> 00:00:52.613
Only the latest price.

21
00:00:56.820 --> 00:00:59.210
We can make use of a BehaviorSubject.

22
00:00:59.210 --> 00:01:02.700
So a BehaviorSubject is a subclass of subject.

23
00:01:02.700 --> 00:01:05.410
It has a notion of a current value

24
00:01:05.410 --> 00:01:07.950
and it stores the latest message or event

25
00:01:07.950 --> 00:01:10.810
and sends it to new subscribers.

26
00:01:10.810 --> 00:01:12.820
So similar, sorry, I'm late to the meeting,

27
00:01:12.820 --> 00:01:15.223
but what's the latest cart total?

28
00:01:19.570 --> 00:01:21.790
And then here's some good information from the docs.

29
00:01:21.790 --> 00:01:23.980
So BehaviorSubjects are useful

30
00:01:23.980 --> 00:01:26.500
for representing values over time.

31
00:01:26.500 --> 00:01:29.580
For instance, an event stream of birthdays is a subject

32
00:01:29.580 --> 00:01:33.470
but the stream of a person's age would be a BehaviorSubject.

33
00:01:33.470 --> 00:01:37.550
So using that analogy, a stream of a person's age.

34
00:01:37.550 --> 00:01:39.840
So you meet a young person.

35
00:01:39.840 --> 00:01:41.430
Hey, how old are you?

36
00:01:41.430 --> 00:01:44.570
14, 17, 18, okay, great.

37
00:01:44.570 --> 00:01:47.300
That's the only value you need.

38
00:01:47.300 --> 00:01:51.290
You only need to know their latest age or their current age.

39
00:01:51.290 --> 00:01:55.410
You really don't care about their age of five, three or two,

40
00:01:55.410 --> 00:01:56.960
only their latest age.

41
00:01:56.960 --> 00:02:01.400
So that's the idea of using a BehaviorSubject one use case.

42
00:02:01.400 --> 00:02:03.970
And so we'll use a use case here for our shopping cart.

43
00:02:03.970 --> 00:02:05.090
We really don't care about the

44
00:02:05.090 --> 00:02:07.250
intermediate totals of our shopping cart.

45
00:02:07.250 --> 00:02:09.400
We simply need to know the latest value

46
00:02:09.400 --> 00:02:10.410
of our shopping cart.

47
00:02:10.410 --> 00:02:13.203
So the total quantity and the total price.

48
00:02:15.960 --> 00:02:18.130
And if you want to see the docs here for BehaviorSubject,

49
00:02:18.130 --> 00:02:19.490
you can use the link on the slide.

50
00:02:19.490 --> 00:02:21.973
It'll redirect you to the official documentation.

51
00:02:26.789 --> 00:02:28.310
Alrighty, so looking at an example here

52
00:02:28.310 --> 00:02:29.143
with this BehaviorSubject

53
00:02:29.143 --> 00:02:31.340
so we have this CartService, total price

54
00:02:31.340 --> 00:02:33.443
and note here its a BehaviorSubject.

55
00:02:34.800 --> 00:02:37.700
We have our cart status component, they'll do a subscribe.

56
00:02:38.930 --> 00:02:41.193
We'll have these events come across A and B,

57
00:02:44.380 --> 00:02:45.770
and then we have our checkout component,

58
00:02:45.770 --> 00:02:47.520
that'll want you to do a subscribe,

59
00:02:49.420 --> 00:02:52.660
and then they'll simply get the latest cart total

60
00:02:52.660 --> 00:02:54.670
or they'll receive the latest message

61
00:02:54.670 --> 00:02:55.910
or event that happened.

62
00:02:55.910 --> 00:02:59.633
They won't get all previous ones, simply the latest value.

63
00:03:01.210 --> 00:03:03.010
And of course, they'll get all new events

64
00:03:03.010 --> 00:03:04.190
coming in the future,

65
00:03:04.190 --> 00:03:06.490
but that's the key here, that the BehaviorSubject,

66
00:03:06.490 --> 00:03:09.320
basically just keeps a buffer of the most recent value

67
00:03:09.320 --> 00:03:10.153
that we'll send.

68
00:03:12.880 --> 00:03:15.070
So here's an example of using a BehaviorSubject.

69
00:03:15.070 --> 00:03:17.530
So instead of a normal subject or a ReplaySubject

70
00:03:17.530 --> 00:03:19.580
you simply make yourself BehaviorSubject.

71
00:03:20.670 --> 00:03:22.160
And then the constructor here,

72
00:03:22.160 --> 00:03:23.950
you specify the initial value,

73
00:03:23.950 --> 00:03:26.340
so the total prize will be zero,

74
00:03:26.340 --> 00:03:28.313
the total quantity will be zero.

75
00:03:29.530 --> 00:03:31.740
And we'll actually use this BehaviorSubject

76
00:03:31.740 --> 00:03:32.820
in our CartService.

77
00:03:32.820 --> 00:03:34.990
So once it gets to the coding videos, then you'll see

78
00:03:34.990 --> 00:03:37.230
we'll simply go through where we replaced subject

79
00:03:37.230 --> 00:03:38.710
with BehaviorSubject.

80
00:03:38.710 --> 00:03:40.000
And we'll see how this works

81
00:03:40.000 --> 00:03:41.913
in our application once it's running.

82
00:03:46.060 --> 00:03:48.610
And if you'd like to get more details on BehaviorSubject,

83
00:03:48.610 --> 00:03:51.260
just simply check out the online docs at the link here,

84
00:03:51.260 --> 00:03:53.603
it'll redirect you to the official page.

85
00:03:56.810 --> 00:03:58.990
All right, let's just kind of recap the terms

86
00:03:58.990 --> 00:04:00.320
that we've just covered here.

87
00:04:00.320 --> 00:04:03.150
So subject does not keep a buffer of the previous events.

88
00:04:03.150 --> 00:04:05.390
The subscriber will only receive new events

89
00:04:05.390 --> 00:04:06.410
after they subscribed.

90
00:04:06.410 --> 00:04:07.920
So we've used subject

91
00:04:07.920 --> 00:04:11.110
and our previous examples as far as our coding.

92
00:04:11.110 --> 00:04:12.500
So if you subscribed late,

93
00:04:12.500 --> 00:04:15.173
you simply get the new events after subscribing.

94
00:04:19.090 --> 00:04:20.310
So for ReplaySubject,

95
00:04:20.310 --> 00:04:22.510
it has a buffer of all previous events.

96
00:04:22.510 --> 00:04:25.210
once subscribed, the subscriber receives a replay

97
00:04:25.210 --> 00:04:27.020
of all previous events.

98
00:04:27.020 --> 00:04:30.760
So here at the bottom, they get A and B because of replay,

99
00:04:30.760 --> 00:04:33.470
and then they also get the new messages in the future.

100
00:04:33.470 --> 00:04:34.760
And so for this scenario, like,

101
00:04:34.760 --> 00:04:35.980
hey, we're recording the meeting

102
00:04:35.980 --> 00:04:37.930
and this is everything that you missed.

103
00:04:40.550 --> 00:04:41.820
And then for BehaviorSubject

104
00:04:41.820 --> 00:04:43.570
it has a buffer of the last event.

105
00:04:43.570 --> 00:04:44.760
So once subscribe,

106
00:04:44.760 --> 00:04:48.800
subscribers receive the latest event prior to subscribing.

107
00:04:48.800 --> 00:04:50.750
So whatever the latest item is

108
00:04:50.750 --> 00:04:51.950
that's the one that they'll get.

109
00:04:51.950 --> 00:04:53.797
So similar to the example I used for age

110
00:04:53.797 --> 00:04:56.560
you'll simply get the latest age of the person

111
00:04:56.560 --> 00:04:58.550
or for like a shopping cart

112
00:04:58.550 --> 00:05:00.270
you'll get the latest total quantity

113
00:05:00.270 --> 00:05:02.053
or the latest total price.

114
00:05:04.140 --> 00:05:06.200
And now here are all the three subjects placed

115
00:05:06.200 --> 00:05:08.090
on one slide together.

116
00:05:08.090 --> 00:05:09.780
So you can kind of just review them

117
00:05:09.780 --> 00:05:12.683
and get a good feel for what they're about.

118
00:05:20.120 --> 00:05:23.063
All right, so let's look at development process for this.

119
00:05:24.190 --> 00:05:26.920
In step one, we'll make updates for checkout component.

120
00:05:26.920 --> 00:05:30.290
We'll inject the CartService into the checkout component

121
00:05:30.290 --> 00:05:32.750
and in the ngOnit method, we'll call a new method,

122
00:05:32.750 --> 00:05:34.280
review card details.

123
00:05:34.280 --> 00:05:36.535
And then we'll add the code here for that new method,

124
00:05:36.535 --> 00:05:38.780
reviewCartDetails.

125
00:05:38.780 --> 00:05:41.610
And then finally we'll make some updates in our CartService

126
00:05:41.610 --> 00:05:44.627
or we'll change subject to BehaviorSubject.

127
00:05:48.050 --> 00:05:50.420
In step 1.1, we'll inject the CartService

128
00:05:50.420 --> 00:05:51.500
into the checkout form.

129
00:05:51.500 --> 00:05:53.800
So we use the same approach that we've used before

130
00:05:53.800 --> 00:05:55.150
for injecting items here.

131
00:05:55.150 --> 00:05:57.733
So we simply inject the CartService.

132
00:06:00.616 --> 00:06:01.810
And then step 1.2

133
00:06:01.810 --> 00:06:06.500
in the ngOnit method, we'll call reviewCartDetails.

134
00:06:06.500 --> 00:06:08.680
So this is a new method that we're going to create.

135
00:06:08.680 --> 00:06:10.830
So we'll just put a call for it right here.

136
00:06:13.520 --> 00:06:15.940
And then in step 1.3, we actually write the code

137
00:06:15.940 --> 00:06:18.700
for the new method, reviewCartDetails.

138
00:06:18.700 --> 00:06:20.540
So here's this new method.

139
00:06:20.540 --> 00:06:23.290
And all we're doing here is really just subscribing.

140
00:06:23.290 --> 00:06:26.480
So we subscribe to the total quantity

141
00:06:26.480 --> 00:06:30.080
and then we also subscribe to the total price.

142
00:06:30.080 --> 00:06:32.230
So we have two subscription set up

143
00:06:32.230 --> 00:06:35.593
to listen to events off of those two different subjects.

144
00:06:38.717 --> 00:06:41.230
And then in step 2.1 we're going to change the subject

145
00:06:41.230 --> 00:06:42.790
to a BehaviorSubject.

146
00:06:42.790 --> 00:06:46.640
So remember, BehaviorSubject is a subclass of subject

147
00:06:47.840 --> 00:06:49.750
and then we'll give it the initial value

148
00:06:49.750 --> 00:06:53.463
total price of zero and total quantity of zero.

149
00:06:55.000 --> 00:06:56.380
Okay, so this looks pretty good.

150
00:06:56.380 --> 00:06:57.740
Let's go ahead and move into the next video

151
00:06:57.740 --> 00:06:59.440
and let's start writing some code.

