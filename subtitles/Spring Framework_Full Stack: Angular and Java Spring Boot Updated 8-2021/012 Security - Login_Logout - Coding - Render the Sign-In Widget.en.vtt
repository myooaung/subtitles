WEBVTT
1
00:00:01.220 --> 00:00:03.140
Now, there is some additional coding we need to do here

2
00:00:03.140 --> 00:00:05.090
in this logging component at Ts.

3
00:00:05.090 --> 00:00:07.773
And that work is in the ngOnInit method.

4
00:00:10.060 --> 00:00:11.943
So let's zoom in here for a second.

5
00:00:17.130 --> 00:00:19.670
And so the first thing we'll do here is we'll say

6
00:00:19.670 --> 00:00:21.064
this .oktaSignin.remove,

7
00:00:21.064 --> 00:00:24.050
just to remove any previous elements that were there

8
00:00:24.050 --> 00:00:25.000
that were rendered.

9
00:00:27.560 --> 00:00:29.680
And now we're going to tell them to render the sign

10
00:00:29.680 --> 00:00:30.513
in widget.

11
00:00:32.300 --> 00:00:35.750
So renderEL, so render an element.

12
00:00:35.750 --> 00:00:37.973
And we tell it which element to render.

13
00:00:40.950 --> 00:00:43.320
And we provide this as Jason.

14
00:00:43.320 --> 00:00:46.283
So we have element okta-sign-in-widget.

15
00:00:53.160 --> 00:00:55.200
And so, we're saying, Hey.

16
00:00:55.200 --> 00:00:57.970
Render the element with the given ID.

17
00:00:57.970 --> 00:00:58.803
And that's the idea

18
00:00:58.803 --> 00:01:01.373
that we define in our previous HTML file.

19
00:01:10.780 --> 00:01:13.170
And so, again, this name should be the same

20
00:01:13.170 --> 00:01:15.810
as the div tag in our logging component at HTML.

21
00:01:15.810 --> 00:01:17.220
So, whatever you have over there

22
00:01:17.220 --> 00:01:18.680
make sure you have it listed here,

23
00:01:18.680 --> 00:01:19.860
okta-sign-in-widget.

24
00:01:19.860 --> 00:01:21.080
You can use any name,

25
00:01:21.080 --> 00:01:23.273
just stay consistent between the two files.

26
00:01:34.060 --> 00:01:35.880
And so, the user attempts to log in,

27
00:01:35.880 --> 00:01:37.070
we get a response.

28
00:01:37.070 --> 00:01:38.430
We check the response status.

29
00:01:38.430 --> 00:01:39.853
We see if it's successful.

30
00:01:44.910 --> 00:01:47.810
If so, then we'll go ahead and do a sign in with redirect.

31
00:02:03.940 --> 00:02:06.300
So that'll sign in the user accordingly

32
00:02:06.300 --> 00:02:08.783
and redirect them to our redirect URI.

33
00:02:13.100 --> 00:02:15.803
In the event that there was an error during sign-in,

34
00:02:20.660 --> 00:02:22.410
then we'll simply throw that error.

35
00:02:28.815 --> 00:02:31.080
Alrighty, so that's the coding there for the ngOnInit.

36
00:02:31.080 --> 00:02:32.290
Let me just kind of look over everything

37
00:02:32.290 --> 00:02:33.590
and double check it.

38
00:02:33.590 --> 00:02:36.260
And, ooh, I see a typo, typo.

39
00:02:36.260 --> 00:02:37.870
I need to put the pound

40
00:02:37.870 --> 00:02:42.050
or the hashtag right here on okta-sign-in-widget,

41
00:02:42.050 --> 00:02:43.688
so it'll know how to parse that

42
00:02:43.688 --> 00:02:46.310
and use the appropriate element ID.

43
00:02:46.310 --> 00:02:49.683
So make sure you fix that in your application, hashtag.

44
00:02:56.950 --> 00:02:58.770
All right, so that's all the coding here

45
00:02:58.770 --> 00:03:00.700
in place for our login component.

46
00:03:00.700 --> 00:03:02.850
And now this coding here looks pretty good.

