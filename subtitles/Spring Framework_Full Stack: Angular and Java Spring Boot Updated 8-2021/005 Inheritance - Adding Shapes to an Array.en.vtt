WEBVTT
1
00:00:01.330 --> 00:00:02.280
<v Instructor>Alrighty, so let's go ahead</v>

2
00:00:02.280 --> 00:00:05.100
and add an additional feature here to this project.

3
00:00:05.100 --> 00:00:07.500
So I want to add support for Arrays.

4
00:00:07.500 --> 00:00:09.833
So placing the shapes in an Array.

5
00:00:13.120 --> 00:00:15.730
So I'll simply copy this Driver.ts,

6
00:00:15.730 --> 00:00:18.443
and then I'll just paste it and I'll give it a new name.

7
00:00:26.270 --> 00:00:27.530
And the new name that I'll give,

8
00:00:27.530 --> 00:00:30.493
I'll call it ArrayDriver.ts.

9
00:00:36.640 --> 00:00:39.040
Alrighty and so make sure you're in ArrayDriver.ts,

10
00:00:39.040 --> 00:00:41.060
so it's simply a copy of our previous one,

11
00:00:41.060 --> 00:00:42.260
we're just having a separate file

12
00:00:42.260 --> 00:00:43.953
in here for doing the Array work.

13
00:00:45.060 --> 00:00:47.570
All right, so what I'll do here is in this section of code,

14
00:00:47.570 --> 00:00:51.100
I'll actually remove all of the console.log statements.

15
00:00:51.100 --> 00:00:53.260
So I'll remove console.log from my shape,

16
00:00:53.260 --> 00:00:55.610
my circle, and my rectangle.

17
00:00:55.610 --> 00:00:57.280
And so right now we should simply have

18
00:00:57.280 --> 00:00:59.930
the variable declarations for my shape,

19
00:00:59.930 --> 00:01:01.513
my circle, and my rectangle.

20
00:01:03.570 --> 00:01:05.520
And then what I'll do is I'll declare an Array of shapes

21
00:01:05.520 --> 00:01:06.973
that'll be initially empty.

22
00:01:10.890 --> 00:01:12.017
So I set this up by saying,

23
00:01:12.017 --> 00:01:13.073
"Let the shapes,

24
00:01:15.487 --> 00:01:18.620
"colon, shapes square brackets equals square bracket."

25
00:01:18.620 --> 00:01:21.520
So basically it's an empty Array that we're starting with,

26
00:01:22.670 --> 00:01:24.640
and then we'll add some shapes to the Array.

27
00:01:24.640 --> 00:01:26.133
So I'll add my shape,

28
00:01:30.960 --> 00:01:32.960
and then I'll just do a little copy paste here,

29
00:01:32.960 --> 00:01:34.910
and then I'll update it with my circle,

30
00:01:34.910 --> 00:01:36.973
and my rectangle.

31
00:01:46.220 --> 00:01:49.631
And now notice here that this Array can only hold shapes.

32
00:01:49.631 --> 00:01:54.120
So if I try to add a string to this Array,

33
00:01:54.120 --> 00:01:56.040
like push, "Will this work?"

34
00:01:56.040 --> 00:01:57.857
Well then the compile will say,

35
00:01:57.857 --> 00:01:59.967
"Hey, this is not of the right type."

36
00:02:02.780 --> 00:02:04.147
And then if I also try to say,

37
00:02:04.147 --> 00:02:04.980
"All right, well what happens

38
00:02:04.980 --> 00:02:07.847
"if I say the shapes dot push a number."

39
00:02:10.170 --> 00:02:11.837
A similar thing, the compile will say,

40
00:02:11.837 --> 00:02:14.060
"Hey, this type mismatch."

41
00:02:14.060 --> 00:02:16.090
So we need to remove that code

42
00:02:16.090 --> 00:02:18.750
so we can only place shapes in this Array,

43
00:02:18.750 --> 00:02:20.053
which makes sense, right?

44
00:02:22.140 --> 00:02:23.700
So now just set up a fore loop,

45
00:02:23.700 --> 00:02:25.150
and so I'll loop over the shapes,

46
00:02:25.150 --> 00:02:29.403
and I'll do a console.log on tempshape.getinfo.

47
00:02:36.430 --> 00:02:38.040
So I just open up a terminal window,

48
00:02:38.040 --> 00:02:40.183
move into O5-inheritance,

49
00:02:48.790 --> 00:02:50.310
and now I'll run the program.

50
00:02:50.310 --> 00:02:51.143
And so I'll say,

51
00:02:51.143 --> 00:02:53.640
"Node ArrayDriver.js."

52
00:02:53.640 --> 00:02:57.100
And note here, a different program, ArrayDriver.js,

53
00:02:57.100 --> 00:02:58.210
and we'll see our output.

54
00:02:58.210 --> 00:03:00.450
So we're going to get the same output,

55
00:03:00.450 --> 00:03:02.860
but in the background we'll make use of an Array.

56
00:03:02.860 --> 00:03:05.490
So our Array is populated with our three shapes,

57
00:03:05.490 --> 00:03:07.680
my shape, my circle, my rectangle,

58
00:03:07.680 --> 00:03:09.156
and then we simply loop over that Array,

59
00:03:09.156 --> 00:03:12.300
and we call getinfo on each one of those shapes.

60
00:03:12.300 --> 00:03:13.392
So I simply want to show you

61
00:03:13.392 --> 00:03:16.003
another way of using inheritance here,

62
00:03:16.003 --> 00:03:19.063
and how we can actually place items into an Array,

63
00:03:19.063 --> 00:03:22.150
and then loop over and access the elements

64
00:03:22.150 --> 00:03:25.570
in that Array using our inheritance tree.

65
00:03:25.570 --> 00:03:27.323
Alrighty, so good job.

