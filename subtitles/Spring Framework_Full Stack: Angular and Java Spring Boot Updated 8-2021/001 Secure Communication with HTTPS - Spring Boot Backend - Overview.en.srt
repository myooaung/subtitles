1
00:00:01,120 --> 00:00:01,953
<v Instructor>In this video,</v>

2
00:00:01,953 --> 00:00:04,263
we're going to secure our communication with HTTPS.

3
00:00:09,020 --> 00:00:10,580
We've secured an Angular front-end

4
00:00:10,580 --> 00:00:12,320
so this is in place.

5
00:00:12,320 --> 00:00:14,900
Now, let's secure the Spring Boot backend

6
00:00:14,900 --> 00:00:16,213
to make use of HTTPS.

7
00:00:21,210 --> 00:00:22,960
Here's our development process.

8
00:00:22,960 --> 00:00:23,830
So in the first step,

9
00:00:23,830 --> 00:00:26,590
we're going to generate the key in a self-signed certificate,

10
00:00:26,590 --> 00:00:28,920
and we'll also update the application properties

11
00:00:28,920 --> 00:00:30,323
with security configs.

12
00:00:34,780 --> 00:00:38,240
Now, Java provides support for keys and certificates.

13
00:00:38,240 --> 00:00:41,690
A Keystore is a file that contains keys and certificates.

14
00:00:41,690 --> 00:00:43,860
And the entries and the key file are associated

15
00:00:43,860 --> 00:00:46,160
with an alias and the password.

16
00:00:46,160 --> 00:00:47,970
So here's our Java Keystore,

17
00:00:47,970 --> 00:00:50,210
a collection of keys and certificates.

18
00:00:50,210 --> 00:00:53,560
So we'll have one alias here that references a given key,

19
00:00:53,560 --> 00:00:55,430
key pair, and certificate.

20
00:00:55,430 --> 00:00:57,330
We can also have additional entries here,

21
00:00:57,330 --> 00:01:01,370
so an alias2 for another key pair and certificate.

22
00:01:01,370 --> 00:01:03,282
So the Keystore is a file

23
00:01:03,282 --> 00:01:05,900
that's a collection of keys and certificates,

24
00:01:05,900 --> 00:01:06,990
and we'll use a keystore

25
00:01:06,990 --> 00:01:08,923
to secure our Spring Boot application.

26
00:01:11,530 --> 00:01:12,718
Alrighty.

27
00:01:12,718 --> 00:01:13,701
In step one,

28
00:01:13,701 --> 00:01:15,200
we're going to generate the key and self-signed certificate.

29
00:01:15,200 --> 00:01:18,210
We'll actually make use the JDK utility: keytool.

30
00:01:18,210 --> 00:01:19,900
And this is already a part of the JDK.

31
00:01:19,900 --> 00:01:21,930
There's nothing additional you have to install

32
00:01:21,930 --> 00:01:22,963
to use the keytool.

33
00:01:25,110 --> 00:01:26,900
So here's an example here of using a keytool.

34
00:01:26,900 --> 00:01:27,870
So at our command line,

35
00:01:27,870 --> 00:01:31,700
we simply say, keytool, genkeypair, no prompt.

36
00:01:31,700 --> 00:01:33,100
So we don't prompt the user.

37
00:01:33,100 --> 00:01:34,513
We give the alias luv2code,

38
00:01:35,428 --> 00:01:36,870
the keypass of secret,

39
00:01:36,870 --> 00:01:40,970
the keystore, source main resources luv2code keystore.p12.

40
00:01:40,970 --> 00:01:43,410
So that's the location of the Java Keystore file

41
00:01:43,410 --> 00:01:45,900
that we're going to create or reference.

42
00:01:45,900 --> 00:01:48,820
Here, we have the storeType of PKCS12

43
00:01:48,820 --> 00:01:51,600
that's simply a format for keystores.

44
00:01:51,600 --> 00:01:54,620
We specify the keys to our password of secret.

45
00:01:54,620 --> 00:01:56,400
Then, we specify the algorithms.

46
00:01:56,400 --> 00:01:58,510
So key algorithms RSA,

47
00:01:58,510 --> 00:02:00,570
a key size of 2048 bits

48
00:02:00,570 --> 00:02:04,180
and the validity of 365 days.

49
00:02:04,180 --> 00:02:05,560
Then, we have the dname.

50
00:02:05,560 --> 00:02:07,660
So the dname is the distinguished name.

51
00:02:07,660 --> 00:02:09,550
Basically, meta data or information

52
00:02:09,550 --> 00:02:11,200
about your given certificate.

53
00:02:11,200 --> 00:02:13,010
So we give our country state locality.

54
00:02:13,010 --> 00:02:14,420
So here for my example,

55
00:02:14,420 --> 00:02:16,710
U.S., Pennsylvania, Philadelphia.

56
00:02:16,710 --> 00:02:18,610
I get the organization, luv2code.

57
00:02:18,610 --> 00:02:21,090
The organizational unit, Training Backend.

58
00:02:21,090 --> 00:02:22,030
And then the CN,

59
00:02:22,030 --> 00:02:23,170
which is the common name,

60
00:02:23,170 --> 00:02:25,570
which is similar to the fully qualified domain name.

61
00:02:25,570 --> 00:02:27,093
In this example, localhost.

62
00:02:30,080 --> 00:02:31,538
And then finally,

63
00:02:31,538 --> 00:02:32,610
we have an extension that we add here

64
00:02:32,610 --> 00:02:33,830
for the Subject Alternative Name,

65
00:02:33,830 --> 00:02:35,630
and we have the DNS of localhost.

66
00:02:35,630 --> 00:02:37,540
So here, we can specify any additional hosts

67
00:02:37,540 --> 00:02:39,540
or IP addresses that'll be associated

68
00:02:39,540 --> 00:02:40,943
with this given certificate.

69
00:02:42,030 --> 00:02:43,970
And we'll see this all in action

70
00:02:43,970 --> 00:02:45,870
when we make it into the coding video.

71
00:02:48,460 --> 00:02:51,420
And if you'd like to get more details on this given keytool,

72
00:02:51,420 --> 00:02:53,360
you can go to the link that I have here on the slide

73
00:02:53,360 --> 00:02:55,580
and it'll redirect you to the official documentation

74
00:02:55,580 --> 00:02:57,173
for the Java keytool.

75
00:03:00,340 --> 00:03:01,250
All right. So in step two,

76
00:03:01,250 --> 00:03:02,850
we're going to update the application properties

77
00:03:02,850 --> 00:03:04,920
with security configs.

78
00:03:04,920 --> 00:03:06,330
So when I add properties file,

79
00:03:06,330 --> 00:03:08,950
we set up our server web port 8, 4, 4, 3.

80
00:03:08,950 --> 00:03:11,950
So that's going to be the port we're going to listen on for HTTPS.

81
00:03:13,850 --> 00:03:15,590
We're going to enable HTTPS support.

82
00:03:15,590 --> 00:03:18,620
So here we're going to only accept HTTPS requests.

83
00:03:18,620 --> 00:03:22,173
So we have a server that SSL dot enabled equals true.

84
00:03:24,562 --> 00:03:25,395
Then we set up the alias that identifies

85
00:03:25,395 --> 00:03:26,650
the key in the key store.

86
00:03:26,650 --> 00:03:28,263
So the alias is luv2code.

87
00:03:29,520 --> 00:03:31,910
And this is based on the key tool command

88
00:03:31,910 --> 00:03:33,280
from the previous slide.

89
00:03:33,280 --> 00:03:36,650
So in that previous slide, we had dash alias luv2code.

90
00:03:36,650 --> 00:03:38,380
So here you have to match it up here

91
00:03:38,380 --> 00:03:41,000
in the spring boot configuration file.

92
00:03:41,000 --> 00:03:43,750
We also have to specify the actual key store location.

93
00:03:43,750 --> 00:03:45,050
So the actual path for this one.

94
00:03:45,050 --> 00:03:49,037
So it's on the class path, luv2code key store. P12.

95
00:03:49,037 --> 00:03:51,610
And remember when using Maven projects,

96
00:03:51,610 --> 00:03:53,020
source main resources,

97
00:03:53,020 --> 00:03:55,420
anything that directory is automatically add it

98
00:03:55,420 --> 00:03:58,403
to the Java class path for your application.

99
00:04:03,266 --> 00:04:05,590
Then we set up the key password. It's a secret.

100
00:04:05,590 --> 00:04:08,560
So that's what we referenced here in our command line

101
00:04:08,560 --> 00:04:11,010
from the previous slide, store, password, secret.

102
00:04:12,060 --> 00:04:13,460
And then the keys store format.

103
00:04:13,460 --> 00:04:15,990
So the key store format is PKCS 12,

104
00:04:15,990 --> 00:04:17,320
and we have that reference also.

105
00:04:17,320 --> 00:04:19,180
So just so it knows which format to use

106
00:04:19,180 --> 00:04:21,163
for reading the giving keys store.

107
00:04:22,540 --> 00:04:24,550
And that's it as far as setting up those properties.

108
00:04:24,550 --> 00:04:26,300
And so this outpatient properties file

109
00:04:26,300 --> 00:04:28,470
has to match information that you use

110
00:04:28,470 --> 00:04:30,470
when you actually generate the key pair.

111
00:04:31,447 --> 00:04:32,280
So that's a common pitfall,

112
00:04:32,280 --> 00:04:34,603
make sure you get that correct in your application.

113
00:04:36,070 --> 00:04:38,494
Okay. So this all looks pretty good.

114
00:04:38,494 --> 00:04:40,140
Let's go ahead and move into our coding video

115
00:04:40,140 --> 00:04:41,023
and let's get started.

