1
00:00:01,210 --> 00:00:03,410
<v Tutor>Okay, so we have our routes connected.</v>

2
00:00:03,410 --> 00:00:06,310
Let's go ahead and do some more configs here in this file.

3
00:00:09,950 --> 00:00:12,030
So moving down to the import section,

4
00:00:12,030 --> 00:00:15,150
we need to give a reference here for the Okta auth module.

5
00:00:15,150 --> 00:00:17,450
So we're going to use this module in our application.

6
00:00:17,450 --> 00:00:19,693
And we need to reference it for the imports.

7
00:00:24,710 --> 00:00:27,150
And then also, for providers, we need to give a reference

8
00:00:27,150 --> 00:00:30,540
here because we're going to perform some dependency injection

9
00:00:30,540 --> 00:00:32,240
of the Okta auth service.

10
00:00:32,240 --> 00:00:36,077
So we simply give a reference here to this Okta config.

11
00:00:38,290 --> 00:00:41,970
And we also tell it to use the value of that Okta config

12
00:00:41,970 --> 00:00:43,993
that we created a little bit earlier.

13
00:00:51,990 --> 00:00:53,920
Okay, so everything's in place here.

14
00:00:53,920 --> 00:00:56,820
I'm excited, I'm ready to test this application out.

15
00:00:56,820 --> 00:00:58,240
So let's swing over to IntelliJ

16
00:00:58,240 --> 00:01:00,470
and make sure that our Spring Boot back end is up

17
00:01:00,470 --> 00:01:01,440
and running.

18
00:01:01,440 --> 00:01:03,233
If not go ahead and start it now.

19
00:01:06,600 --> 00:01:09,580
Then I'll also swing over to my Angular app,

20
00:01:09,580 --> 00:01:11,180
and get that one up and running.

21
00:01:25,370 --> 00:01:28,203
Okay, we can swing into our web browser here.

22
00:01:29,600 --> 00:01:32,403
And we can swing over to our love to shop application.

23
00:01:36,240 --> 00:01:38,810
Alright, so here's our app like we've been using before.

24
00:01:38,810 --> 00:01:41,570
But notice here up top, in the top right,

25
00:01:41,570 --> 00:01:43,160
there is a login button.

26
00:01:43,160 --> 00:01:44,853
Oh, yeah. Oh, yeah.

27
00:01:45,840 --> 00:01:48,210
So let's go ahead and try it out.

28
00:01:48,210 --> 00:01:51,410
So click on login takes us to the login screen.

29
00:01:51,410 --> 00:01:55,120
Good, so this is the Okta sign in widget that's integrated

30
00:01:55,120 --> 00:01:57,330
into our application.

31
00:01:57,330 --> 00:02:02,330
We can just give username here am I love to code.com,

32
00:02:02,560 --> 00:02:03,480
any password

33
00:02:05,210 --> 00:02:06,820
Okay, so unable to sign in.

34
00:02:06,820 --> 00:02:09,700
So now, give the actual username

35
00:02:09,700 --> 00:02:12,160
you use for your account.

36
00:02:12,160 --> 00:02:15,110
Okay, the one that you created for your application,

37
00:02:15,110 --> 00:02:18,453
and then also the password that you use for your account.

38
00:02:20,040 --> 00:02:22,520
So that's whatever the account is that you created

39
00:02:22,520 --> 00:02:24,230
when you signed up with Okta.

40
00:02:27,200 --> 00:02:30,260
So in my case, it was demo I love to code.com,

41
00:02:30,260 --> 00:02:33,280
my password, go ahead and hit sign in.

42
00:02:33,280 --> 00:02:35,650
And now I'm successfully logged in.

43
00:02:35,650 --> 00:02:38,690
So we can see welcome back demo Darby.

44
00:02:38,690 --> 00:02:41,130
So that's just a account name that I created

45
00:02:41,130 --> 00:02:43,590
when I set up my example.

46
00:02:43,590 --> 00:02:46,810
So we're successful in logging in.

47
00:02:46,810 --> 00:02:49,580
And notice here how our login status component is working

48
00:02:49,580 --> 00:02:52,620
a quarterly, showing us those messages based

49
00:02:52,620 --> 00:02:54,130
on the authentication status.

50
00:02:54,130 --> 00:02:55,883
So I like it, I like it.

51
00:02:56,780 --> 00:03:00,070
You may wonder, well, how did I get the demo Darby part

52
00:03:00,070 --> 00:03:00,910
to kind of show up.

53
00:03:00,910 --> 00:03:04,923
So I'll go ahead and log into my dashboard over here.

54
00:03:06,710 --> 00:03:09,360
And there's an option where you can select the users.

55
00:03:10,250 --> 00:03:13,223
I'll choose my user demo Darby.

56
00:03:17,210 --> 00:03:21,750
And then I can look on the profile here for this user.

57
00:03:21,750 --> 00:03:23,600
And I can scroll down.

58
00:03:23,600 --> 00:03:26,800
And we see we have first name, last name.

59
00:03:26,800 --> 00:03:29,890
So the name property is the first name plus the last name.

60
00:03:29,890 --> 00:03:32,910
So in our code, we'd say this.Okta

61
00:03:33,910 --> 00:03:36,360
auth service.get user.

62
00:03:36,360 --> 00:03:40,460
Then that response so that result.name,

63
00:03:40,460 --> 00:03:42,703
that's the actual user's full name.

64
00:03:47,120 --> 00:03:49,410
And so that's how you can get that piece of information

65
00:03:49,410 --> 00:03:50,243
there.

66
00:03:50,243 --> 00:03:51,780
And that's how that part worked out for us.

67
00:03:51,780 --> 00:03:55,440
So that explains how we see the demo Darby on top.

68
00:03:55,440 --> 00:03:56,940
So we'll go ahead and log out.

69
00:04:00,740 --> 00:04:04,040
And again, that work as we can see the buttons change based

70
00:04:04,040 --> 00:04:05,810
on the login status.

71
00:04:05,810 --> 00:04:08,790
So I'm really happy with what we have so far.

72
00:04:08,790 --> 00:04:10,880
We've successfully implemented login, logout

73
00:04:10,880 --> 00:04:14,260
with our application by making use of the Okta sign in

74
00:04:14,260 --> 00:04:15,093
widget.

75
00:04:15,093 --> 00:04:17,867
So I'd like to say, "good job, my friend."

