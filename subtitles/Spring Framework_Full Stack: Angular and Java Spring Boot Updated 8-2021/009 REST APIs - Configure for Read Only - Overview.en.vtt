WEBVTT
1
00:00:00.729 --> 00:00:01.562
<v Instructor>Alrightie.</v>

2
00:00:01.562 --> 00:00:04.953
Let's look at our REST API and making it Read Only.

3
00:00:08.380 --> 00:00:09.360
So Spring Data REST

4
00:00:09.360 --> 00:00:12.680
will expose all these endpoints for free.

5
00:00:12.680 --> 00:00:15.910
So we get support for POST, GET, PUT, DELETE,

6
00:00:15.910 --> 00:00:18.350
so four CRUD operations.

7
00:00:18.350 --> 00:00:20.560
But actually, this is not what I want.

8
00:00:20.560 --> 00:00:23.200
I want the REST API to be Read Only,

9
00:00:23.200 --> 00:00:26.400
especially with release 1.0 of our application.

10
00:00:26.400 --> 00:00:29.430
In release 1.0, we're simply listing products.

11
00:00:29.430 --> 00:00:32.685
So, in this case, we really want it to be Read Only.

12
00:00:32.685 --> 00:00:35.520
And I don't want anyone on the outside

13
00:00:35.520 --> 00:00:38.390
to be able to add new products, or delete products.

14
00:00:38.390 --> 00:00:40.677
I don't want that right now.

15
00:00:40.677 --> 00:00:43.343
So I'd like to disable the POST method,

16
00:00:45.140 --> 00:00:49.180
allow the GET methods, disable the PUT method,

17
00:00:49.180 --> 00:00:51.233
and also disable the DELETE method.

18
00:00:54.210 --> 00:00:55.250
So how can we do this?

19
00:00:55.250 --> 00:00:56.900
Well there's some possible solutions:

20
00:00:56.900 --> 00:00:59.570
Option one is, simply don't use Spring Data REST.

21
00:00:59.570 --> 00:01:00.403
So in this case,

22
00:01:00.403 --> 00:01:02.660
we could manually create our own REST controller,

23
00:01:02.660 --> 00:01:06.130
and manually define methods for access using @GetMapping.

24
00:01:06.130 --> 00:01:08.760
But we'd loose the Spring Data support for paging,

25
00:01:08.760 --> 00:01:10.140
sorting, and so on.

26
00:01:10.140 --> 00:01:11.590
Those are some really nice features.

27
00:01:11.590 --> 00:01:12.993
I don't want to loose those.

28
00:01:14.060 --> 00:01:16.850
And the other option is to use Spring Data REST,

29
00:01:16.850 --> 00:01:19.790
but configure it to disable certain HTTP methods,

30
00:01:19.790 --> 00:01:22.150
like POST, DELETE, et cetera.

31
00:01:22.150 --> 00:01:24.660
And this is the one that we'll choose.

32
00:01:24.660 --> 00:01:26.182
And then you're probably wondering, well,

33
00:01:26.182 --> 00:01:28.220
what about security?

34
00:01:28.220 --> 00:01:29.340
And that's a very good point.

35
00:01:29.340 --> 00:01:32.090
So, we'll actually cover REST API security

36
00:01:32.090 --> 00:01:33.330
later in the course,

37
00:01:33.330 --> 00:01:35.816
so it'll apply security to only allow access

38
00:01:35.816 --> 00:01:39.393
to certain methods for certain authorized users.

39
00:01:39.393 --> 00:01:42.968
But for now, just for release one, we'll simply disable

40
00:01:42.968 --> 00:01:46.530
certain methods, and make the API Read Only.

41
00:01:46.530 --> 00:01:47.363
But don't worry.

42
00:01:47.363 --> 00:01:49.600
We'll talk about security later in the course.

43
00:01:52.350 --> 00:01:53.860
All right so let's look at setting up

44
00:01:53.860 --> 00:01:55.470
the Spring Data REST configuration.

45
00:01:55.470 --> 00:01:57.000
So we're going to disable the HTTP methods

46
00:01:57.000 --> 00:01:59.579
for POST, PUT, and DELETE.

47
00:01:59.579 --> 00:02:02.460
So we'll create this special configuration class.

48
00:02:02.460 --> 00:02:04.270
We'll have this MyDataRestConfig

49
00:02:04.270 --> 00:02:07.630
that implements RepositoryRestConfigurer.

50
00:02:07.630 --> 00:02:10.823
And this interface is from the Spring Data REST API.

51
00:02:11.850 --> 00:02:14.470
And we'll simply override this method

52
00:02:14.470 --> 00:02:15.522
or implement this method,

53
00:02:15.522 --> 00:02:18.939
for ConfigureRepositoryRestConfiguration.

54
00:02:20.180 --> 00:02:22.700
We'll simply set up a list of HTTP methods

55
00:02:22.700 --> 00:02:25.573
to disable for PUT, POST, DELETE.

56
00:02:27.720 --> 00:02:28.870
And then in the configuration,

57
00:02:28.870 --> 00:02:30.970
we'll say that it's for this given domain type,

58
00:02:30.970 --> 00:02:32.330
Product.class.

59
00:02:32.330 --> 00:02:35.240
So this is for the product repo.

60
00:02:35.240 --> 00:02:36.570
And we'll set up the configuration

61
00:02:36.570 --> 00:02:39.883
for single item and also collection.

62
00:02:41.830 --> 00:02:43.798
And then, this API makes use of the fancy

63
00:02:43.798 --> 00:02:46.080
Java Lambdas annotation.

64
00:02:46.080 --> 00:02:48.543
So we have a parens for metadata, httpMethods,

65
00:02:49.400 --> 00:02:52.590
the arrow symbol, that's Java Lambdas.

66
00:02:52.590 --> 00:02:54.700
And we specify the method here,

67
00:02:54.700 --> 00:02:57.210
we get httpMethods.disable,

68
00:02:57.210 --> 00:02:58.940
and we pass in that array that we created

69
00:02:58.940 --> 00:03:01.740
a little earlier, theunsupportedActions.

70
00:03:03.280 --> 00:03:04.310
And this block of code

71
00:03:04.310 --> 00:03:06.620
will essentially disable the methods

72
00:03:06.620 --> 00:03:11.620
for POST, PUT, and DELETE for our productRestRepository.

73
00:03:14.740 --> 00:03:15.573
Alrightie, that's it.

74
00:03:15.573 --> 00:03:17.060
So let's go ahead and move it to our IDE

75
00:03:17.060 --> 00:03:19.460
and let's add this new configuration class

76
00:03:19.460 --> 00:03:20.423
and test it out.

