1
00:00:01,190 --> 00:00:02,630
<v Chad>Alrighty, so let's go ahead and get started</v>

2
00:00:02,630 --> 00:00:03,910
with our development process.

3
00:00:03,910 --> 00:00:05,600
In this video, we'll cover step one

4
00:00:05,600 --> 00:00:08,893
of adding pagination support to the product service.

5
00:00:11,040 --> 00:00:13,590
Alrighty, so let's go ahead and swing into our IDE.

6
00:00:19,300 --> 00:00:22,640
And we'll need to open up the product service class.

7
00:00:22,640 --> 00:00:26,800
So I'll just move over here to source, app, services,

8
00:00:26,800 --> 00:00:28,873
and then product.service.ts.

9
00:00:31,500 --> 00:00:33,950
Just give me one second here to expand my window.

10
00:00:36,120 --> 00:00:39,360
All righty, so we're in product service right now.

11
00:00:39,360 --> 00:00:40,840
And so we want to add a new method

12
00:00:40,840 --> 00:00:42,790
for pagination, for searching.

13
00:00:42,790 --> 00:00:46,290
And so I'll actually copy one of our previous methods,

14
00:00:46,290 --> 00:00:48,410
and make some slight modifications to it.

15
00:00:48,410 --> 00:00:52,223
So I'll actually copy this getProductListPaginate method.

16
00:00:53,780 --> 00:00:55,780
So I'll just highlight that and copy it.

17
00:00:57,840 --> 00:01:00,000
And then I'll move down a bit here,

18
00:01:00,000 --> 00:01:04,223
right after searchProducts, and I'll paste it here.

19
00:01:08,570 --> 00:01:10,260
Okay, so I've pasted the method,

20
00:01:10,260 --> 00:01:11,930
let me update the method name,

21
00:01:11,930 --> 00:01:15,743
I'll call it searchProductsPaginate.

22
00:01:20,570 --> 00:01:24,090
All righty, that looks pretty good searchProductsPaginate.

23
00:01:25,730 --> 00:01:28,560
Let me just kind of line up some of this code here,

24
00:01:28,560 --> 00:01:29,403
format it a bit.

25
00:01:41,090 --> 00:01:43,740
Also just kind of line up my parameters here coming in.

26
00:01:46,630 --> 00:01:48,420
All righty, so searchProductsPaginate,

27
00:01:48,420 --> 00:01:50,900
so this is where we'll pass in the parameters

28
00:01:50,900 --> 00:01:54,570
for performing the search, and using pagination.

29
00:01:54,570 --> 00:01:57,590
So one thing I need to do is remove the category id,

30
00:01:57,590 --> 00:02:00,820
and make use of the keyword, 'cause we're searching here,

31
00:02:00,820 --> 00:02:02,543
based on a given keyword.

32
00:02:06,470 --> 00:02:08,810
And then I also need to make some updates to my URL,

33
00:02:08,810 --> 00:02:13,010
so I'll copy this URL, from up above.

34
00:02:13,010 --> 00:02:15,150
So for my regular searchproducts,

35
00:02:15,150 --> 00:02:17,730
I'll copy that findByNameContaining,

36
00:02:17,730 --> 00:02:19,190
and I'll paste it down here

37
00:02:19,190 --> 00:02:21,820
into this new searchProductsPaginate.

38
00:02:21,820 --> 00:02:24,860
Right, so just a little copy paste exercise here.

39
00:02:24,860 --> 00:02:27,210
All right, so make sure that your search URL,

40
00:02:27,210 --> 00:02:31,250
now has search/findByNameContaining.

41
00:02:32,380 --> 00:02:35,140
I'll also do a quick update here on my comment,

42
00:02:35,140 --> 00:02:38,140
just to kind of keep it in line with the actual source code.

43
00:02:43,650 --> 00:02:45,763
Let's do a slight tabbing over here.

44
00:02:46,990 --> 00:02:47,850
And that's it.

45
00:02:47,850 --> 00:02:50,730
And just remember Spring Data REST supports pagination

46
00:02:50,730 --> 00:02:51,740
out of the box.

47
00:02:51,740 --> 00:02:55,313
So we simply send over the parameters for page and size.

48
00:02:57,970 --> 00:03:00,540
And that's all the coding there for searchProductsPaginate.

49
00:03:00,540 --> 00:03:02,390
So this looks pretty good, I like it.

