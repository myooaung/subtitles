1
00:00:01,160 --> 00:00:01,993
<v Instructor>In this video,</v>

2
00:00:01,993 --> 00:00:04,223
we'll get started with Angular development.

3
00:00:06,520 --> 00:00:08,560
Already, so just a quick refresher here.

4
00:00:08,560 --> 00:00:09,760
So, Angular is the framework

5
00:00:09,760 --> 00:00:12,700
for building modern single-page applications.

6
00:00:12,700 --> 00:00:15,600
The main website here is www.angular.io.

7
00:00:15,600 --> 00:00:17,640
This website has the official documentation

8
00:00:17,640 --> 00:00:18,860
for the Angular framework,

9
00:00:18,860 --> 00:00:21,190
along with the number of very good tutorials.

10
00:00:21,190 --> 00:00:23,651
So I highly recommend that you access this website

11
00:00:23,651 --> 00:00:25,830
and bookmark it on your web browser,

12
00:00:25,830 --> 00:00:27,793
a lot of valuable information there.

13
00:00:30,430 --> 00:00:32,170
So let's look at the features of Angular.

14
00:00:32,170 --> 00:00:34,110
So it's a component-based framework,

15
00:00:34,110 --> 00:00:36,320
it has clean separation of template coding

16
00:00:36,320 --> 00:00:39,210
and application logic, it also has built-in support

17
00:00:39,210 --> 00:00:41,750
for data-binding and dependency injection,

18
00:00:41,750 --> 00:00:44,290
and it also supports responsive web design

19
00:00:44,290 --> 00:00:45,700
and modern frameworks.

20
00:00:45,700 --> 00:00:47,990
So for example, you can use Bootstrap,

21
00:00:47,990 --> 00:00:51,373
or Google Material Design, or Angular Material, and others.

22
00:00:54,600 --> 00:00:56,100
Looking at the Angular architecture,

23
00:00:56,100 --> 00:00:58,160
as I mentioned, it's a component-based framework,

24
00:00:58,160 --> 00:01:01,720
so you can have parent components and child components.

25
00:01:01,720 --> 00:01:05,010
These components can also make use of view templates.

26
00:01:05,010 --> 00:01:06,440
And you can also make use of directives

27
00:01:06,440 --> 00:01:09,910
to kind of customize the behavior of your view templates.

28
00:01:09,910 --> 00:01:12,950
There's also services you can create as a client-side code

29
00:01:12,950 --> 00:01:14,900
written in typescript.

30
00:01:14,900 --> 00:01:16,960
And also there are modules, basically, a collection

31
00:01:16,960 --> 00:01:19,963
of related components, services, directives, and so on.

32
00:01:22,280 --> 00:01:24,750
Okay, so let's go ahead and look at some of the key terms

33
00:01:24,750 --> 00:01:25,820
here for Angular.

34
00:01:25,820 --> 00:01:27,510
The first one here is the component,

35
00:01:27,510 --> 00:01:30,051
it's the main player in an Angular application.

36
00:01:30,051 --> 00:01:31,939
A component has two parts:

37
00:01:31,939 --> 00:01:34,540
one, a view for the user interface;

38
00:01:34,540 --> 00:01:36,830
and then two, the actual class that implements

39
00:01:36,830 --> 00:01:40,033
the application logic or event handling for the view.

40
00:01:40,980 --> 00:01:43,060
And then, we have the view template which the user

41
00:01:43,060 --> 00:01:44,540
interface for the component.

42
00:01:44,540 --> 00:01:47,733
It has static HTML along with some dynamic elements.

43
00:01:48,730 --> 00:01:51,340
Next, we have directive, basically adds custom

44
00:01:51,340 --> 00:01:53,130
behavior to the HTML elements.

45
00:01:53,130 --> 00:01:55,730
You can use it for looping, conditionals, and so on.

46
00:01:56,630 --> 00:01:58,900
Then, there's the service, basically, a helper class

47
00:01:58,900 --> 00:02:00,800
that provides the desired functionality,

48
00:02:00,800 --> 00:02:03,040
so it can retrieve data from a server,

49
00:02:03,040 --> 00:02:06,090
perform calculation or form validation, and so on.

50
00:02:06,090 --> 00:02:08,700
This service is actually code written in typescript,

51
00:02:08,700 --> 00:02:11,385
it's part of the Angular project, it runs client-side,

52
00:02:11,385 --> 00:02:14,581
but it can remotely connect to any external sources

53
00:02:14,581 --> 00:02:15,683
as needed.

54
00:02:16,560 --> 00:02:18,030
And then finally, as I mentioned earlier,

55
00:02:18,030 --> 00:02:20,230
a module is a collection of related components,

56
00:02:20,230 --> 00:02:22,230
directives, services, and so on.

57
00:02:22,230 --> 00:02:24,280
And we'll see all of these different components

58
00:02:24,280 --> 00:02:26,073
in some of the upcoming videos.

59
00:02:28,172 --> 00:02:31,270
Already, so application UI composition,

60
00:02:31,270 --> 00:02:33,780
so we can take our main application starting

61
00:02:33,780 --> 00:02:35,660
with this main screen and then we can break it down

62
00:02:35,660 --> 00:02:37,900
into smaller pieces, so we can have a header component

63
00:02:37,900 --> 00:02:39,470
and also a footer component.

64
00:02:39,470 --> 00:02:41,110
And then also, along the left hand side,

65
00:02:41,110 --> 00:02:43,840
we can have like a nav bar, maybe some product categories

66
00:02:43,840 --> 00:02:47,010
component, then we can have a main content component

67
00:02:47,010 --> 00:02:50,450
in the center, and we could add a product list component,

68
00:02:50,450 --> 00:02:51,960
to list all of our products.

69
00:02:51,960 --> 00:02:54,860
And then also, we could have a page navigation component.

70
00:02:54,860 --> 00:02:57,725
So this is one example of taking a user-interface

71
00:02:57,725 --> 00:03:00,132
and breaking it down to smaller components.

72
00:03:00,132 --> 00:03:02,730
You have total flexibility, total freedom

73
00:03:02,730 --> 00:03:04,690
on how you want to design your application,

74
00:03:04,690 --> 00:03:06,503
this is simply one example.

75
00:03:09,900 --> 00:03:12,630
Okay, so in terms of application interaction,

76
00:03:12,630 --> 00:03:14,140
so we have our Angular project,

77
00:03:14,140 --> 00:03:15,820
so we have our user-interface,

78
00:03:15,820 --> 00:03:18,210
and our user-interface can make use of services.

79
00:03:18,210 --> 00:03:21,020
These services are Angular components, so this is code

80
00:03:21,020 --> 00:03:24,640
written in typescript, it runs on the client-side,

81
00:03:24,640 --> 00:03:26,480
it runs in the browser.

82
00:03:26,480 --> 00:03:29,160
These services can communicate over the network

83
00:03:29,160 --> 00:03:31,360
to back-end systems so they can make use

84
00:03:31,360 --> 00:03:34,880
of the rest API and call maybe a spring boot back-end

85
00:03:34,880 --> 00:03:38,340
or any type of back-end to get data from a database.

86
00:03:38,340 --> 00:03:40,877
All right, so Angular is the front-end development,

87
00:03:40,877 --> 00:03:43,622
spring boot can be your back-end development,

88
00:03:43,622 --> 00:03:45,889
all of these together makes up of full stack

89
00:03:45,889 --> 00:03:47,983
application architecture.

90
00:03:49,990 --> 00:03:52,270
Okay, so a bit more about the Angular project.

91
00:03:52,270 --> 00:03:54,800
So an Angular project is composed of multiple files,

92
00:03:54,800 --> 00:03:58,340
so you'll have HTML files, you'll have typescript files,

93
00:03:58,340 --> 00:04:01,490
cascading style sheets, configuration files,

94
00:04:01,490 --> 00:04:03,000
images and so on.

95
00:04:03,000 --> 00:04:05,170
So a lot of files, and we'll actually see these

96
00:04:05,170 --> 00:04:06,730
when we create an Angular project.

97
00:04:06,730 --> 00:04:08,440
There's a lot of files that are created,

98
00:04:08,440 --> 00:04:11,140
but we'll break it down and we'll cover the key files.

99
00:04:14,670 --> 00:04:17,550
Already, so now, how do we create an Angular project?

100
00:04:17,550 --> 00:04:20,170
Well, the Angular team provides a command-line tool

101
00:04:20,170 --> 00:04:22,050
to generate a project.

102
00:04:22,050 --> 00:04:24,450
And basically, what this is, it generates the starter files

103
00:04:24,450 --> 00:04:26,870
that helps you bootstrap your project.

104
00:04:26,870 --> 00:04:29,000
The main website for the command-line tool

105
00:04:29,000 --> 00:04:31,920
is at http://cli.angular.io

106
00:04:31,920 --> 00:04:35,323
so CLI is short for Command-Line Interface.

107
00:04:38,415 --> 00:04:40,910
Okay, so let's get started with the Angular CLI

108
00:04:40,910 --> 00:04:43,020
or the Angular Command-Line Interface.

109
00:04:43,020 --> 00:04:44,700
The first thing you do is install it using

110
00:04:44,700 --> 00:04:49,390
the command here npm install -g @angular/cli.

111
00:04:49,390 --> 00:04:51,100
We can always check the version of the tool

112
00:04:51,100 --> 00:04:54,190
by using ng version, and we can also get help

113
00:04:54,190 --> 00:04:56,283
on the tool by using ng help.

114
00:04:59,340 --> 00:05:01,660
Now, here's an example of how to create a new project

115
00:05:01,660 --> 00:05:03,620
with the Angular CLI, so you simply say,

116
00:05:03,620 --> 00:05:06,470
ng new and whatever the project name is.

117
00:05:06,470 --> 00:05:10,070
So here I could say, ng new my-first-angular-project.

118
00:05:10,070 --> 00:05:12,140
So this let's you create a project

119
00:05:12,140 --> 00:05:15,363
create all the initial files that can use to get started.

