WEBVTT
1
00:00:00.390 --> 00:00:04.950
In this lesson, we will create a new test method and we will use this method to test.

2
00:00:04.950 --> 00:00:09.450
If all user details are provided, then a new user should be created.

3
00:00:09.450 --> 00:00:15.890
And in this case we will not mock any object and user details will actually be stored in the database.

4
00:00:15.900 --> 00:00:18.570
All right, so let's create a new test method first.

5
00:00:18.570 --> 00:00:22.680
I will delete this test method because we don't need it anymore.

6
00:00:22.680 --> 00:00:27.210
And instead I will create a new one and I will start with display name.

7
00:00:28.080 --> 00:00:31.620
So this test method will test if user can be created.

8
00:00:33.070 --> 00:00:38.110
I will test, create, use a method when valid details are provided.

9
00:00:39.460 --> 00:00:41.710
Then you should return user details.

10
00:00:43.610 --> 00:00:47.810
Something like this and I will add, arrange, act and insert sections.

11
00:00:50.360 --> 00:00:51.440
In their own section.

12
00:00:51.440 --> 00:00:57.330
I'll prepare user details, and this time, just as an example, I will use an alternative approach.

13
00:00:57.350 --> 00:01:04.310
Again, I can type JSON manually and it will look this way or I can create JSON Java object and then

14
00:01:04.310 --> 00:01:07.000
convert that JSON object into a string.

15
00:01:07.010 --> 00:01:08.430
And this is what I'm going to do.

16
00:01:08.450 --> 00:01:10.610
I'll create JSON Java object.

17
00:01:11.150 --> 00:01:14.870
I will use JSON object and I'll call it user details request.

18
00:01:14.900 --> 00:01:15.500
Jason.

19
00:01:17.100 --> 00:01:19.410
And I will create a new JSON object.

20
00:01:19.710 --> 00:01:26.790
I don't need this string anymore, so comment out and I will populate these user details.

21
00:01:26.790 --> 00:01:29.710
Request JSON object with user details.

22
00:01:29.730 --> 00:01:31.890
So I will put first name.

23
00:01:34.140 --> 00:01:37.410
Last name, email, password and repeat password.

24
00:01:38.040 --> 00:01:43.140
It gives me an error because it wants me to add exception to a method signature.

25
00:01:43.140 --> 00:01:49.710
I will click on the recommendation and this should add throws JS an exception to my method signature.

26
00:01:49.710 --> 00:01:54.660
All right, so now I'm going to add last name, email, password and repeat password.

27
00:02:09.330 --> 00:02:15.930
So now that I have an object with user details created, I can use this JSON object in HTTP request.

28
00:02:16.140 --> 00:02:18.840
Let's work on a request in the following lesson.

