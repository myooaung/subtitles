1
00:00:00,270 --> 00:00:05,750
In this lesson, we will create a new test class to start testing code in a rest controller.

2
00:00:05,760 --> 00:00:09,820
I want my test class to be in the same package as the rest controller.

3
00:00:09,840 --> 00:00:18,000
So I will go to test folder java and then route package of my application inside of the test folder.

4
00:00:18,000 --> 00:00:20,010
And here I'll create a new package.

5
00:00:20,010 --> 00:00:28,200
I will first open users controller and I will copy package name where I have placed this controller.

6
00:00:28,230 --> 00:00:36,570
Now I will go back to my test package, will do right mouse click and will create new package with the

7
00:00:36,570 --> 00:00:40,470
same name where I have placed my rest controller.

8
00:00:40,530 --> 00:00:45,150
And here in this new package, I'll create a new test class.

9
00:00:47,230 --> 00:00:54,340
I will call this class users controller and because I'm going to test web player only, I will add web

10
00:00:54,340 --> 00:00:55,060
player.

11
00:00:55,150 --> 00:01:02,350
And then at the end I will add test now to tell Sprint Framework that I want to create application context

12
00:01:02,350 --> 00:01:05,740
only for those beans that are related to web player.

13
00:01:05,890 --> 00:01:12,340
I will annotate this test class with a special annotation that is called a web MVC test.

14
00:01:13,950 --> 00:01:14,460
Okay.

15
00:01:14,460 --> 00:01:22,020
So now that I have annotated my test class with MVC annotation, if I execute test methods in this class,

16
00:01:22,020 --> 00:01:28,980
then what spring framework will do is it will start scanning classes in my application looking for different

17
00:01:28,980 --> 00:01:29,910
annotations.

18
00:01:29,910 --> 00:01:36,150
And then depending on how I have annotated my application classes, spring framework will create bins

19
00:01:36,150 --> 00:01:39,150
and it will put them into application context.

20
00:01:39,150 --> 00:01:46,050
But because I have annotated my test class with NVC test annotation, it will tell Spring Framework

21
00:01:46,050 --> 00:01:48,600
that I'm interested in testing web player only.

22
00:01:48,600 --> 00:01:54,780
So it will make Spring Framework Scan my springboard application only for a limited number of classes,

23
00:01:54,780 --> 00:01:57,780
classes that are related to web player only.

24
00:01:57,960 --> 00:02:03,960
For example, it will scan and create controller bins, but it will not create data layer bins.

25
00:02:04,680 --> 00:02:09,780
And this will make our test class run a bit faster than full integration test.

26
00:02:09,930 --> 00:02:17,160
Now, since I'm interested in testing users controller only, only one controller class, I can limit

27
00:02:17,160 --> 00:02:21,060
this annotation to work with one controller class that I need.

28
00:02:21,060 --> 00:02:27,900
And to do this I will add the following property controllers equals and then the name of the controller

29
00:02:27,900 --> 00:02:31,920
class users controller class.

30
00:02:32,130 --> 00:02:38,580
Now my web visit test annotation is configured to work with the one controller class only, and even

31
00:02:38,580 --> 00:02:44,400
if my application has more than one controller class only, this one controller will be placed into

32
00:02:44,400 --> 00:02:45,600
application context.

33
00:02:45,600 --> 00:02:52,560
But if I do not limit my web MVC annotation to one controller class only, then all controllers of my

34
00:02:52,560 --> 00:02:56,580
springboard application will be included into application context.

35
00:02:56,610 --> 00:03:02,610
Now, the current application that I'm testing uses Sprint security, and there is security filters

36
00:03:02,610 --> 00:03:03,240
enabled.

37
00:03:03,570 --> 00:03:09,810
At this moment, I'm testing web player only, and I'm not interested in those security filters at this

38
00:03:09,810 --> 00:03:12,150
time so I can exclude them.

39
00:03:12,150 --> 00:03:15,210
And to do that, I will add one more annotation.

40
00:03:15,540 --> 00:03:23,790
It's called to configure more can be see and then I will add the property add filters equals to false.

41
00:03:23,940 --> 00:03:32,220
Now this new annotation auto configure more can be see it is actually a part of web MVC test annotation

42
00:03:32,220 --> 00:03:38,280
and normally we do not need to add all the configure mock MVC annotation separately.

43
00:03:38,460 --> 00:03:45,960
If I open weapon visitor's annotation, then here above the interface, I see a list of annotations

44
00:03:45,960 --> 00:03:51,510
that are already included and all the configure more can we see is one of them.

45
00:03:51,960 --> 00:03:59,760
But I do add this annotation separately because I once print security to auto configure sprint MVC infrastructure

46
00:03:59,760 --> 00:04:02,250
without including security filters.

47
00:04:02,400 --> 00:04:08,400
Also, if I scroll up a little bit, all fun documentation for web MVC test annotation.

48
00:04:08,640 --> 00:04:16,170
And here in this paragraph I read the use of the sanitation will disable full the configuration and

49
00:04:16,170 --> 00:04:21,360
instead apply only configuration that is relevant to MVC tests.

50
00:04:21,360 --> 00:04:28,530
I see that it will scan and create bins for controller controller advice, case and component converter,

51
00:04:28,530 --> 00:04:37,020
generic converter filter VPC Configure and handler method argument resolver but bins for component service

52
00:04:37,020 --> 00:04:40,350
or repository, these bins will not be created.

53
00:04:40,560 --> 00:04:43,140
Okay, so let's close it for now.

54
00:04:43,500 --> 00:04:46,560
Or I can exclude sprint security of the configuration.

55
00:04:46,560 --> 00:04:49,770
This way I will comment out how to configure more.

56
00:04:49,770 --> 00:04:55,380
Can we see annotation and I will edit weapon visit test annotation a little bit.

57
00:04:55,380 --> 00:04:59,640
I will add comma here and I will add the following property.

58
00:04:59,670 --> 00:05:07,830
Exclude all the configuration equals to and then in curly brackets I will provide security of the configuration

59
00:05:07,830 --> 00:05:08,460
class.

60
00:05:08,790 --> 00:05:09,150
All right.

61
00:05:09,150 --> 00:05:16,410
So we have our new test class created and we have configured it to test web player only, excluding

62
00:05:16,410 --> 00:05:18,120
Sprint security configuration.

63
00:05:18,120 --> 00:05:19,470
Now let's continue.

64
00:05:19,470 --> 00:05:23,790
And in the following lecture, we will start working on our first test method.

