1
00:00:00,360 --> 00:00:05,670
To my extreme framework around embedded server on the port number that you define, you will need to

2
00:00:05,670 --> 00:00:08,039
use a different options for web environment.

3
00:00:08,039 --> 00:00:13,890
So I will remove mock and from the list of options I will choose defined port.

4
00:00:13,890 --> 00:00:16,410
And there are a couple of different ways to define a port.

5
00:00:16,410 --> 00:00:21,390
Number one of the ways is to define port number in application properties file.

6
00:00:21,510 --> 00:00:26,190
So on the left side in my project, I will look for resources folder.

7
00:00:26,190 --> 00:00:29,610
And inside of resources we have application properties file.

8
00:00:29,730 --> 00:00:36,450
If I open it here, we can define server port number and if we do not define any port number here,

9
00:00:36,450 --> 00:00:42,430
then by default our embedded server will start on default port number 88.

10
00:00:42,720 --> 00:00:50,520
Otherwise it will start in a port number that we define with server dot port property equals and then

11
00:00:50,520 --> 00:00:54,480
port number that you want to have, for example, eight, eight, eight, eight.

12
00:00:54,510 --> 00:00:55,620
Let's see if it works.

13
00:00:55,620 --> 00:01:02,190
I will save changes in my application properties file will go back to my test class and I will add a

14
00:01:02,190 --> 00:01:03,780
very simple test method.

15
00:01:06,250 --> 00:01:06,960
Like this.

16
00:01:06,970 --> 00:01:12,130
I have defined an empty test method that doesn't really test any of my application code.

17
00:01:12,160 --> 00:01:18,940
But even though this test method is empty, spring framework will still launch an embedded server and

18
00:01:18,940 --> 00:01:20,980
it will create application context.

19
00:01:20,980 --> 00:01:27,040
So we will be able to see if our embedded server starts on a port number that we have defined.

20
00:01:27,040 --> 00:01:27,940
Let's try.

21
00:01:28,060 --> 00:01:30,220
I will run this test method.

22
00:01:32,700 --> 00:01:35,790
And now if I scroll down the console.

23
00:01:36,930 --> 00:01:38,160
And the bottom.

24
00:01:38,190 --> 00:01:44,670
I should see that Tom got started on port number eight, eight, eight, eight, the port number that

25
00:01:44,670 --> 00:01:47,520
I have defined in application properties file.

26
00:01:47,550 --> 00:01:53,220
Now if you do not want to use port number that you have defined in application properties file and want

27
00:01:53,220 --> 00:01:59,160
to use a different port number for your tests, then there is another way to make a tomcat start on

28
00:01:59,160 --> 00:02:02,940
a different port number other than the one you have defined here.

29
00:02:03,090 --> 00:02:09,210
And one of the ways to do it is to use property attribute of the same spring boot test annotation.

30
00:02:09,300 --> 00:02:15,870
So right after define port on a new line, I will add a new property that is called properties.

31
00:02:15,870 --> 00:02:22,270
And here in double quotes, I can provide a property name that I want to override.

32
00:02:22,290 --> 00:02:28,500
For example, server port equals and then port number 8081.

33
00:02:28,500 --> 00:02:35,430
So the port number that I defined here will override the value that is loaded from application properties

34
00:02:35,430 --> 00:02:39,060
file and we'll have a higher priority.

35
00:02:39,090 --> 00:02:44,370
Now if there are multiple properties that you want to override, then you will need to surround them

36
00:02:44,370 --> 00:02:45,030
with.

37
00:02:45,030 --> 00:02:52,110
Curly brackets, include property in double quotes, and then separate them with a comma.

38
00:02:52,110 --> 00:02:57,780
So the second property will be separated with a comma, surrounded with double quotes.

39
00:02:57,780 --> 00:03:06,030
And let's assume I want to use a different hostname for example, hostname equals two and then IP address.

40
00:03:07,290 --> 00:03:09,660
So let's try and see if it works.

41
00:03:09,660 --> 00:03:13,860
I will save changes and we'll click on a run button to run this test method.

42
00:03:16,000 --> 00:03:18,970
And now I will scroll down and check the port number.

43
00:03:19,750 --> 00:03:21,910
And the port number is now different.

44
00:03:21,910 --> 00:03:29,050
The port number is 8081, which is the one that I have defined in the properties attribute of the same

45
00:03:29,050 --> 00:03:30,610
Springwood test annotation.

46
00:03:30,880 --> 00:03:36,700
Now there is another way you can override the defined port number or any other properties defined in

47
00:03:36,700 --> 00:03:38,470
the application properties file.

48
00:03:38,560 --> 00:03:42,190
Let's continue and in the following lesson you will see how it works.

