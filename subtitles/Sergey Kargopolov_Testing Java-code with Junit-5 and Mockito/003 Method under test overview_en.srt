1
00:00:00,270 --> 00:00:05,760
In previous lessons, we have created a user service project which I currently have opened in my development

2
00:00:05,760 --> 00:00:11,790
environment, and this project has user service, implementation class and sign of service package.

3
00:00:12,300 --> 00:00:13,410
Let's open it.

4
00:00:13,800 --> 00:00:20,670
Now, on this moment, this method simply returns user object and it does not store user details anywhere.

5
00:00:20,910 --> 00:00:26,250
In the following lessons, we will continue working on this method and we will continue testing this

6
00:00:26,250 --> 00:00:28,830
method, but will start using Makita.

7
00:00:29,040 --> 00:00:37,200
Now, Makita helps us create fake objects and mock objects to let us test or imitate under test in isolation

8
00:00:37,200 --> 00:00:38,490
from those dependencies.

9
00:00:38,880 --> 00:00:43,380
But at this moment, our Creator as a method doesn't have any dependencies.

10
00:00:43,560 --> 00:00:46,020
It does not really depend on any other object.

11
00:00:46,290 --> 00:00:51,270
For example, it does not use data on the subject to store user details in the database.

12
00:00:51,660 --> 00:00:54,000
So let's make our method under test.

13
00:00:54,000 --> 00:00:59,490
The create use limited depend on the data access object to store user details.

14
00:00:59,820 --> 00:01:06,390
And to do that I will assume that I have a data access object or may be users repository and I will

15
00:01:06,390 --> 00:01:08,730
use it to save user details.

16
00:01:11,360 --> 00:01:18,860
Mind that instead of returning a new instance of user class, I will create a new user this way.

17
00:01:19,160 --> 00:01:23,390
And then after storing it, I will return user object.

18
00:01:23,840 --> 00:01:28,400
Now I do not have users repository yet in my project, so let's continue.

19
00:01:28,400 --> 00:01:32,750
And in the following lesson we will create a very simple implementation for it.

