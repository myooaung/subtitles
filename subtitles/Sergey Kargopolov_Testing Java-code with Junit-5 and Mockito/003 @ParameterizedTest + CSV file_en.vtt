WEBVTT
1
00:00:00.210 --> 00:00:05.730
You can also store these parameter values in a separate file in a resource folder.

2
00:00:06.090 --> 00:00:12.090
So instead of providing a very long list of parameter values here, in this case, resource source annotation,

3
00:00:12.390 --> 00:00:16.050
we can call it out and use a different annotation.

4
00:00:16.260 --> 00:00:22.770
So I will comment out the entire CAC source annotation together with all its values, and we'll use

5
00:00:22.770 --> 00:00:26.610
a different annotation that is called CAC file source.

6
00:00:28.150 --> 00:00:34.630
In the brackets, I will provide a path to every source file, and the path to a file would be, let's

7
00:00:34.630 --> 00:00:37.810
say, for its large integer division since we.

8
00:00:40.130 --> 00:00:43.070
I do not have this file yet, and I will need to create it.

9
00:00:43.400 --> 00:00:49.070
All right, so storing parameter values in a separate file can be very helpful when you need to test

10
00:00:49.070 --> 00:00:51.440
your method with a very long list of funds.

11
00:00:51.860 --> 00:00:57.470
For example, if you have a method that validates names and email addresses, then you can create a

12
00:00:57.470 --> 00:01:02.720
separate CAC file with that very, very long list of different names and email addresses.

13
00:01:03.020 --> 00:01:07.730
And then you can test your method under test with all sorts of different kinds of ones.

14
00:01:08.270 --> 00:01:14.990
I will need to create this file because I do not have it yet and I will create this file in a test resources

15
00:01:14.990 --> 00:01:15.470
folder.

16
00:01:16.010 --> 00:01:21.290
Now, depending on the development environment you use, there might be a different way to create this

17
00:01:21.290 --> 00:01:21.740
folder.

18
00:01:22.130 --> 00:01:29.510
But the way I do it in, A.J., is this I will select test folder and I will do right mouse click on

19
00:01:29.510 --> 00:01:32.510
it and I will choose new and then select package.

20
00:01:33.020 --> 00:01:35.540
I will call this package resources.

21
00:01:37.280 --> 00:01:38.270
And hit enter.

22
00:01:39.200 --> 00:01:47.060
Now I will select project will do right mouse click and then scroll down and select open module settings.

23
00:01:48.190 --> 00:01:54.550
On the left side panel here, you will need to select modules and then you will need to select calculator

24
00:01:54.550 --> 00:01:55.000
module.

25
00:01:55.540 --> 00:02:03.880
And then on this panel here, I will select this folder which is currently expanded, but if it is folded,

26
00:02:04.090 --> 00:02:08.860
you'll need to unfold it and then select the resources package that we have just create.

27
00:02:09.580 --> 00:02:09.940
All right.

28
00:02:09.940 --> 00:02:16.510
Once you select resources package, click on Test Resources Button to mark this directory as a Test

29
00:02:16.510 --> 00:02:18.070
Resources root folder.

30
00:02:18.520 --> 00:02:18.910
All right.

31
00:02:18.910 --> 00:02:24.130
And once you click on it, the icon on the resources folder will slightly change.

32
00:02:24.670 --> 00:02:25.150
Okay.

33
00:02:25.150 --> 00:02:28.990
And once again, click on a key button to close this window.

34
00:02:29.380 --> 00:02:35.260
And now that we have a new Test Resources folder, I will create a new file inside of this folder.

35
00:02:35.530 --> 00:02:42.670
So I will select resources folder under the test directory, will do right mouse click and will choose

36
00:02:42.670 --> 00:02:50.440
new file and I will give this file and the exactly the same name as I have used in my fee file, source

37
00:02:50.440 --> 00:02:51.100
and patient.

38
00:02:53.060 --> 00:02:54.140
And hit enter.

39
00:02:54.440 --> 00:03:01.700
Now until J is asking me if I want to add this file together, I'll click on ADD and now I can start

40
00:03:01.700 --> 00:03:02.840
adding values.

41
00:03:03.230 --> 00:03:06.710
So the values on this file will need to be comma separated.

42
00:03:07.010 --> 00:03:14.600
For example, the first set of parameters will be 33, take a wait one and then expected result will

43
00:03:14.600 --> 00:03:15.530
be 32.

44
00:03:15.830 --> 00:03:18.920
New set of values will need to go on a new line.

45
00:03:19.250 --> 00:03:25.370
So if I want my unit to store on second time, but with a new set of parameters on a new line, I will

46
00:03:25.370 --> 00:03:34.580
add let's say 24 take away one will be equal to 23 and I will run my unit test three times and the third

47
00:03:34.580 --> 00:03:43.040
time will be with parameter values 54 take away one and the expected result will be 53.

48
00:03:43.310 --> 00:03:47.480
Find this now I can save changes in my integer division six.

49
00:03:47.740 --> 00:03:56.450
I'll go back to the calculator test and click on a run button next to unit testing to run this integer

50
00:03:56.450 --> 00:03:57.920
subtraction method.

51
00:04:00.170 --> 00:04:00.980
And it works.

52
00:04:01.010 --> 00:04:07.240
My unit has spent around three times with the parameter values that I have provided in integer division,

53
00:04:07.250 --> 00:04:07.800
says V.

54
00:04:08.000 --> 00:04:13.100
Although the file name should be integer subtraction, so I will rename it will select the file, do

55
00:04:13.100 --> 00:04:15.320
right mouse click refactor rename.

56
00:04:15.620 --> 00:04:18.380
And it should be called integer subtraction.

57
00:04:21.060 --> 00:04:27.660
Click on refactor and it has also refactored the file name I have used in CSC for our results.

58
00:04:27.660 --> 00:04:31.980
Okay, so now let's run this test method again just to make sure it works.

59
00:04:33.050 --> 00:04:34.550
And it is all working.

60
00:04:34.700 --> 00:04:35.060
All right.

61
00:04:35.420 --> 00:04:41.330
So now if you need to test him method properly with lots of different set of values, you can do it.

62
00:04:41.690 --> 00:04:41.990
All right.

63
00:04:41.990 --> 00:04:43.730
So let's continue to the next lesson.

