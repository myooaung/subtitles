WEBVTT
1
00:00:00.150 --> 00:00:00.510
All right.

2
00:00:00.510 --> 00:00:06.930
So we have the needed libraries and we should already be able to execute our unit tests using the development

3
00:00:06.930 --> 00:00:07.470
environment.

4
00:00:07.710 --> 00:00:13.260
And before we continue to our next lessons, let's quickly check if two unit does work in this project.

5
00:00:13.470 --> 00:00:20.210
So inside of the test folder, I will select our folder and will do right mouse click choose new in

6
00:00:20.220 --> 00:00:24.360
Java class and I will call this Java class demo test.

7
00:00:26.420 --> 00:00:28.760
I will add a demo test method.

8
00:00:31.930 --> 00:00:36.220
In the following lectures, I will explain in details how to create your new test.

9
00:00:36.610 --> 00:00:42.940
But for now, I will skip explanation and will simply around this one, just to demonstrate that we

10
00:00:42.940 --> 00:00:45.970
have successfully configured to unit test support.

11
00:00:46.390 --> 00:00:52.900
All right, so I will run unit test by clicking on this play button on the left side of my unit test

12
00:00:52.900 --> 00:00:53.260
method.

13
00:00:56.430 --> 00:01:03.360
And at work we have test report and I have green checkmarks indicating that test has passed.

14
00:01:03.690 --> 00:01:06.810
So it looks like the two unit is working in our project.

15
00:01:07.020 --> 00:01:08.580
Now let's try executing.

16
00:01:08.580 --> 00:01:13.710
This test meant that using gradle command in the terminal window to do that, that will click on the

17
00:01:13.710 --> 00:01:20.100
terminal button here at the bottom in my development environment to open terminal window and I will

18
00:01:20.100 --> 00:01:26.910
list files in the current directory to make sure that I am in the project home folder and I should be

19
00:01:26.910 --> 00:01:35.820
able to see the cradle w file and to execute test phase using cradle I will run the following command

20
00:01:36.270 --> 00:01:43.800
dot forward slash and then cradle in w space clean space test.

21
00:01:44.280 --> 00:01:51.150
This will clean the project will remove any leftovers from previous builds and will execute the test

22
00:01:51.300 --> 00:01:51.810
task.

23
00:01:52.410 --> 00:01:58.470
The test task will automatically detect and automatically execute all unit tests.

24
00:01:58.710 --> 00:02:00.720
All right, so I'll hit enter to run it.

25
00:02:02.400 --> 00:02:03.890
And it worked.

26
00:02:03.900 --> 00:02:05.340
They built a successful.

27
00:02:05.700 --> 00:02:08.940
And I have output from my unit test method.

28
00:02:09.360 --> 00:02:09.660
All right.

29
00:02:09.660 --> 00:02:16.110
So it looks like your unit is working and you now know how to add union support to your cradle base

30
00:02:16.110 --> 00:02:16.860
to our project.

31
00:02:17.130 --> 00:02:21.240
And you also know how to use credo to execute union tests.

32
00:02:21.780 --> 00:02:22.500
Let's continue.

