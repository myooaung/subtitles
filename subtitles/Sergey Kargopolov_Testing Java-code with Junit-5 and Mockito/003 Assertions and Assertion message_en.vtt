WEBVTT
1
00:00:00.210 --> 00:00:07.650
In previous lesson, we have tested the integer division method and to do that we first invoked this

2
00:00:07.650 --> 00:00:16.410
method and then to verify if this method works well and if it returns correct result we have used assert

3
00:00:16.410 --> 00:00:18.120
equals assertion.

4
00:00:18.570 --> 00:00:22.740
Now assertions is actually what we use to verify.

5
00:00:22.740 --> 00:00:29.040
If the method under test that we are testing works well and returns correct result.

6
00:00:29.400 --> 00:00:35.760
Each assertion is a small utility method that makes a decision whether this unit test should pass or

7
00:00:35.760 --> 00:00:36.210
fail.

8
00:00:36.510 --> 00:00:41.940
And it makes a decision by evaluating condition with a given input parameters.

9
00:00:42.300 --> 00:00:48.060
If condition is not true, then assertion fails and it throws an exception with a message.

10
00:00:48.210 --> 00:00:54.780
And to customize the error message a little bit, we can include our own custom error message into assertion.

11
00:00:55.140 --> 00:01:00.330
So one additional parameter and that assertion checks it is a message.

12
00:01:02.010 --> 00:01:07.050
And this message parameter is optional and you do not need to provide any message here.

13
00:01:07.140 --> 00:01:13.980
But it is considered a good practice to always provide a good and descriptive message for each assertion.

14
00:01:14.430 --> 00:01:20.550
This message will then be printed in the report, but only if this assertion fails the test method.

15
00:01:20.670 --> 00:01:24.420
If this method passes, then of course there will be no message printed.

16
00:01:24.930 --> 00:01:30.660
But if it fails, then you can use this additional message to include possible explanation.

17
00:01:30.990 --> 00:01:36.810
For example, we could say here that integer division did not produce expected result.

18
00:01:38.900 --> 00:01:43.130
Or be even more specific and say something like this.

19
00:01:43.430 --> 00:01:50.810
Four divided by two did not produce two, and in this case, one test report is reviewed by another

20
00:01:50.810 --> 00:01:51.890
developer on YouTube team.

21
00:01:51.920 --> 00:01:57.500
They will have more information to understand why this particular assertion has failed the test.

