WEBVTT
1
00:00:00.150 --> 00:00:05.700
In this lesson, we will look at another annotation that we can use to supply parameters to our method,

2
00:00:06.060 --> 00:00:08.640
and this information is called value source.

3
00:00:09.180 --> 00:00:11.760
Let's actually create a new test method for it.

4
00:00:12.450 --> 00:00:15.420
I will call it our value source demonstration.

5
00:00:17.230 --> 00:00:19.210
It is going to be parameterized test.

6
00:00:19.210 --> 00:00:25.360
So I will annotated with parameterized test annotation and the new annotation that we are going to use

7
00:00:25.360 --> 00:00:26.700
is called value source.

8
00:00:26.710 --> 00:00:28.240
So I will Arnett as well.

9
00:00:28.720 --> 00:00:36.090
Value source find this now value source one patient is very simple and it lets us supply only one single

10
00:00:36.100 --> 00:00:36.970
array of values.

11
00:00:37.420 --> 00:00:42.790
So our method values source demonstration can accept only single parameter.

12
00:00:43.150 --> 00:00:49.330
Let's say this parameter is a first name and just for demonstration purposes, I will use system art

13
00:00:49.420 --> 00:00:51.340
to print out this first name.

14
00:00:53.060 --> 00:00:56.420
And I will also assert that this value is not now.

15
00:00:56.720 --> 00:01:02.660
So I will use assert not now assertion and will provide first name here.

16
00:01:03.080 --> 00:01:08.140
If the value of first name is null, this test method will fail and we know there is something wrong.

17
00:01:08.570 --> 00:01:14.900
Okay, so now let's provide parameters to this method and we will use values for foundation and the

18
00:01:14.900 --> 00:01:16.570
brackets will provide value.

19
00:01:16.590 --> 00:01:24.680
So we are working with strings and the data type of parameters is going to be string and in curly brackets

20
00:01:24.680 --> 00:01:25.910
will can provide values.

21
00:01:26.090 --> 00:01:31.070
The first value is going to be, John, the second value in double quotes.

22
00:01:31.310 --> 00:01:35.660
So each value is in double quotes and it is separated with comma.

23
00:01:36.140 --> 00:01:40.880
Let's say, Kate and the third value is going to be Alice.

24
00:01:41.180 --> 00:01:45.770
So with this configuration, my unit test will run three times.

25
00:01:46.010 --> 00:01:50.150
Each time it will accept one parameter as a first name.

26
00:01:50.150 --> 00:01:51.680
So first value will be John.

27
00:01:51.920 --> 00:01:55.310
Second time, when my unit test runs, it will be Kate.

28
00:01:55.310 --> 00:01:59.810
And the third time when this unit test runs, the first name will be Alice.

29
00:02:00.230 --> 00:02:01.310
All right, so let's try.

30
00:02:01.350 --> 00:02:04.880
I will click on the run button and we'll run this test.

31
00:02:06.190 --> 00:02:09.160
And it passes my test Metatron three times.

32
00:02:09.250 --> 00:02:10.660
First time for John.

33
00:02:10.810 --> 00:02:11.980
Second time for Keith.

34
00:02:11.980 --> 00:02:14.170
And third time for Alex.

35
00:02:14.560 --> 00:02:20.890
Now, if you look into values for sanitation by holding command button on your keyboard and then clicking

36
00:02:20.890 --> 00:02:26.530
on the value source, you will see that it can also work with different other data types.

37
00:02:26.740 --> 00:02:32.800
It can work with Schwartz, it can work with bytes, it can work with integer swings, flows and so

38
00:02:32.800 --> 00:02:33.010
on.

39
00:02:33.160 --> 00:02:38.350
In this example, I have used strings, but I could have used any of these data types.

40
00:02:38.890 --> 00:02:40.450
All right, so let's close it.

41
00:02:40.450 --> 00:02:43.870
And now you know how to use value source citation as well.

42
00:02:44.200 --> 00:02:44.860
Let's continue.

