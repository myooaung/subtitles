WEBVTT
1
00:00:00.820 --> 00:00:06.460
In this lesson, I'll show you how to create a new unit test using intelligent development environment

2
00:00:06.460 --> 00:00:14.260
in a project that does not use Maven or Gradle to create a new unit test, I'll create a new jump project.

3
00:00:14.260 --> 00:00:18.430
First, I'll click on New Project Button to create a new project.

4
00:00:18.790 --> 00:00:27.820
Now we can create a new Java project using Maven or Gradle, but this time I'll create a new Java project

5
00:00:27.820 --> 00:00:30.610
that does not use Maven or Gradle.

6
00:00:30.910 --> 00:00:35.890
So I will select Java and then will click on the next button to continue.

7
00:00:36.250 --> 00:00:42.940
I won't be creating project from a template, so I will skip this window and will click on next and

8
00:00:43.000 --> 00:00:45.100
now I will give my project and name.

9
00:00:45.130 --> 00:00:50.800
I will cook calculator will start with a very simple calculator example button.

10
00:00:50.800 --> 00:00:54.850
Later in this course we will look at more complex use cases as well.

11
00:00:55.180 --> 00:00:55.540
All right.

12
00:00:55.540 --> 00:00:59.440
So now I will click on Finish Button to create a new project.

13
00:00:59.830 --> 00:01:00.730
And here we go.

14
00:01:00.730 --> 00:01:06.130
A new project is created and we have a source folder which is currently empty.

15
00:01:06.340 --> 00:01:08.660
Let's create a new Java class to do that.

16
00:01:08.660 --> 00:01:15.880
That will do right mouse click then select new general class and I will call this class calculator.

17
00:01:17.340 --> 00:01:19.610
I will add a very simple challenge method.

18
00:01:20.510 --> 00:01:22.470
Let's call it integer division.

19
00:01:29.140 --> 00:01:35.170
All right, so now we have a method to test, and the method that you are testing is also called method

20
00:01:35.170 --> 00:01:36.130
under test.

21
00:01:36.550 --> 00:01:41.680
Before we can create a new G unit test for this method, we will need to create a test folder.

22
00:01:42.280 --> 00:01:45.400
Currently, this project does not have a folder for test classes.

23
00:01:45.790 --> 00:01:52.210
So to create a new test folder, I will select the project and then do right mouse click choose new

24
00:01:52.420 --> 00:01:53.260
directory.

25
00:01:53.710 --> 00:02:00.550
I will call the directory test and hit enter to let A.G. know that we want to use this directory for

26
00:02:00.550 --> 00:02:01.390
test classes.

27
00:02:01.720 --> 00:02:09.940
We will need to do right mouse click on it and then choose Mark Territory US and then select test sources.

28
00:02:10.990 --> 00:02:13.210
And now we can create a new test class.

29
00:02:13.630 --> 00:02:15.180
To create a new test class.

30
00:02:15.190 --> 00:02:23.380
I will do right mouse click and then choose, generate and select test from the Test Library Dropdown

31
00:02:23.380 --> 00:02:23.740
list.

32
00:02:23.920 --> 00:02:27.520
I can select the unit version that I want to use for this unit test.

33
00:02:28.000 --> 00:02:30.280
I will use G unit five of course.

34
00:02:30.730 --> 00:02:39.160
And next we have this yellow bulb with the message that G Unit five library is not configured in this

35
00:02:39.160 --> 00:02:39.610
module.

36
00:02:40.030 --> 00:02:47.230
To fix this error, we will click on the fix button and this will add to Unit five library to our project.

37
00:02:47.680 --> 00:02:48.040
All right.

38
00:02:48.220 --> 00:02:50.010
I will not change anything here.

39
00:02:50.010 --> 00:02:51.040
Now simply click.

40
00:02:51.250 --> 00:02:51.760
Okay.

41
00:02:52.750 --> 00:02:58.240
And next, he's a class lead and will call this class calculator test.

42
00:02:58.240 --> 00:03:03.820
And it is a common convention to make your test classes end with a test.

43
00:03:04.000 --> 00:03:05.890
So I will keep it as is.

44
00:03:06.250 --> 00:03:11.830
The destination package will need to be the same as a package name for my calculator.

45
00:03:12.130 --> 00:03:15.970
I don't have any package yet, so let's fix that.

46
00:03:16.060 --> 00:03:22.960
I will cancel this window for now and I will move my calculator class from a default package into a

47
00:03:22.960 --> 00:03:24.760
different one that I will create.

48
00:03:25.000 --> 00:03:28.120
So I will do right mouse click and then choose refactor.

49
00:03:28.120 --> 00:03:32.740
And then I will choose move this class to a package that I will create.

50
00:03:32.740 --> 00:03:38.530
For example, chrome apps, developer block and heap on refactor.

51
00:03:43.270 --> 00:03:49.810
All right, so now my calculator class is inside a package that I have just created, and I will try

52
00:03:49.810 --> 00:03:51.640
creating a new unit test again.

53
00:03:52.060 --> 00:03:53.050
So I will do right.

54
00:03:53.050 --> 00:04:01.090
Mouse Click, Choose Generate Test Test Library G Unit five Class Name Calculator and the destination

55
00:04:01.090 --> 00:04:09.070
package will be exactly the same package name as it is for the class I'm creating this test class for.

56
00:04:09.520 --> 00:04:09.910
All right.

57
00:04:10.330 --> 00:04:12.460
I will expand the window a little bit.

58
00:04:12.760 --> 00:04:19.660
Next, we have in the rate section and it has a couple of minutes so at and teardown we will talk about

59
00:04:19.660 --> 00:04:22.750
this method later so I will skip it for now.

60
00:04:23.140 --> 00:04:30.070
And from the list of methods here, I will select the method for which I want to create a unit test

61
00:04:30.460 --> 00:04:32.650
which is integer division method.

62
00:04:33.200 --> 00:04:33.440
Right.

63
00:04:33.440 --> 00:04:41.560
So now I can click on okay button and this will create a new test class with an empty test method.

64
00:04:41.620 --> 00:04:50.170
If I expand my test folder here, I will have a package with exactly the same name as in my main application

65
00:04:50.170 --> 00:04:52.960
sources folder with a test class.

66
00:04:53.230 --> 00:04:59.080
All right, so we have a new unit as created, and at this moment, this is an empty test method.

67
00:04:59.080 --> 00:05:00.610
It doesn't do anything.

68
00:05:00.910 --> 00:05:03.100
And if I run it, it will pass.

69
00:05:03.460 --> 00:05:07.450
So to run unit test, I will click on this play button.

70
00:05:08.310 --> 00:05:12.240
And then I will choose a run in the division test method.

71
00:05:13.730 --> 00:05:19.790
Our test method passed and we have a green checkmark next to the play button.

72
00:05:19.790 --> 00:05:24.160
We have just clicked and also in the test report by default.

73
00:05:24.170 --> 00:05:27.800
If test does not fail, it is considered a percent test.

74
00:05:28.100 --> 00:05:33.800
So if you have a test method that does not assert any condition and does not throw any exceptions,

75
00:05:34.010 --> 00:05:37.250
even if it is absolutely empty, it will pass.

76
00:05:37.490 --> 00:05:42.860
And to see a failing test, we can intentionally fail it with a fail assertion.

77
00:05:43.130 --> 00:05:46.490
For example, we will use fail with a message.

78
00:05:49.180 --> 00:05:51.640
Like, for example, no implementation provided.

79
00:05:52.030 --> 00:05:54.790
Now, if I run this test method, it should fail.

80
00:05:54.820 --> 00:05:55.510
Let's try.

81
00:05:58.350 --> 00:06:04.800
And we have a failing unit test method with a red exclamation mark next to the run button.

82
00:06:05.040 --> 00:06:09.210
And also we do not see green checkmarks in the test report as well.

83
00:06:09.480 --> 00:06:09.810
All right.

84
00:06:09.810 --> 00:06:15.630
So this was just a demonstration of how you can create a new test class using intelligent development

85
00:06:15.630 --> 00:06:18.360
environment in a very simple Java project.

86
00:06:18.600 --> 00:06:24.960
And in the following list and I'll show you how to create a new project and a new test class using Eclipse

87
00:06:24.960 --> 00:06:25.980
Development Environment.

88
00:06:26.370 --> 00:06:31.980
If you do not use a claims development requirement, then please feel free to skip the following lesson.

