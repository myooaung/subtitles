1
00:00:00,120 --> 00:00:05,040
In this lesson, you will learn how to make your test methods execute in any order you like.

2
00:00:05,550 --> 00:00:12,270
Being able to control which this method executes first and which this method executes it second is very

3
00:00:12,270 --> 00:00:19,050
helpful when you're working with integration tests, especially with those tests that need to save something

4
00:00:19,050 --> 00:00:25,950
in the database and then find that same record, update that same record, and then delete that same

5
00:00:25,950 --> 00:00:26,370
record.

6
00:00:26,730 --> 00:00:32,820
In this case is being able to control which this method runs first and which this method runs second

7
00:00:33,060 --> 00:00:33,690
easily.

8
00:00:34,500 --> 00:00:41,070
So for this demonstration, I'll create a new tense class, and I will add to it same test methods.

9
00:00:41,400 --> 00:00:48,450
So I will copy this test methods and I will create a new class and I will call this new test class.

10
00:00:48,750 --> 00:00:51,300
Methods ordered by order index.

11
00:00:54,820 --> 00:01:01,330
I will paste test methods and to continue to, you need to execute test methods in this test class in

12
00:01:01,330 --> 00:01:02,440
a specific order.

13
00:01:02,800 --> 00:01:06,400
I'll need to annotate this test class with test method.

14
00:01:06,400 --> 00:01:07,480
Order annotation.

15
00:01:08,830 --> 00:01:16,300
Mindless to specify a specific method order, I will use method, order, interface and then to be able

16
00:01:16,300 --> 00:01:23,590
to order my test methods in any order I like, I will need to use order annotation like this.

17
00:01:23,890 --> 00:01:31,240
Now, currently my test methods in a class appear in a random order, but if I remove test method order

18
00:01:31,240 --> 00:01:36,490
annotation and execute this test methods, they will not execute in the order.

19
00:01:36,490 --> 00:01:43,780
I have them in this test class in mind this class I have method test D restarts first and then a half

20
00:01:43,780 --> 00:01:47,230
test a least it makes and then test C.

21
00:01:47,230 --> 00:01:51,790
So if I run my test that's now, it will execute in a different order.

22
00:01:52,030 --> 00:01:52,620
Let's try.

23
00:01:54,690 --> 00:02:01,980
And in this report I see that the order in which these methods executed is different from what I have

24
00:02:01,980 --> 00:02:07,590
in my class, in that this report meant that we executed first and met a be executed second.

25
00:02:08,430 --> 00:02:16,440
So now I will use order annotation to make my test methods execute in the order that I have listed them

26
00:02:16,440 --> 00:02:17,490
in my test class.

27
00:02:17,910 --> 00:02:20,850
I want method tested to execute first.

28
00:02:21,180 --> 00:02:25,230
So I will use order annotation within this one.

29
00:02:25,230 --> 00:02:29,970
And because I'm using one as order index, this method will be executed first.

30
00:02:30,540 --> 00:02:37,920
The second test method that I want to execute will be test A, so I will also annotated with order annotation.

31
00:02:38,130 --> 00:02:43,680
And for this annotation I will use index to because I want this this method to execute second.

32
00:02:44,100 --> 00:02:50,310
And now I will apply the same annotation with a different index for the rest of my test methods.

33
00:02:50,760 --> 00:02:55,170
So I have or there one or the two or three or there four.

34
00:02:55,350 --> 00:03:03,990
And now I will enable the test method or the annotation with method order set to order annotation.

35
00:03:04,350 --> 00:03:09,720
And now I will save changes and this test class and I'm ready to run it and see how it works.

36
00:03:10,020 --> 00:03:11,700
So I'll click on the run button.

37
00:03:13,100 --> 00:03:15,140
And I have expected result.

38
00:03:15,410 --> 00:03:22,640
Method test the executed first method test a executed second and so on.

39
00:03:22,970 --> 00:03:23,300
All right.

40
00:03:23,300 --> 00:03:25,910
So I hope it also worked very well for you.

41
00:03:25,940 --> 00:03:32,450
And you now know how to execute your test methods in a specific order and the order that you need.

42
00:03:32,750 --> 00:03:39,260
But remember, unless you absolutely need to use a specific execution order, most of the time it is

43
00:03:39,260 --> 00:03:44,960
better that your test methods do not depend on each other and they can still work well, even if the

44
00:03:44,960 --> 00:03:46,700
execution order is random.

45
00:03:47,060 --> 00:03:47,780
Let's continue.

