1
00:00:03,670 --> 00:00:06,860
We need to test how our method and the test works.

2
00:00:06,860 --> 00:00:13,490
With all layers integrated, we will write a test method that is called integration test or some developers

3
00:00:13,490 --> 00:00:15,500
also call it acceptance test.

4
00:00:15,920 --> 00:00:22,710
And for this test to work, we will need all three layers integrated and we will not use any test doubles.

5
00:00:22,730 --> 00:00:27,170
We will not use any mock objects, and we will not create any fake objects.

6
00:00:27,200 --> 00:00:34,610
The test method we will write will test how our get user method works from end to end, meaning that

7
00:00:34,610 --> 00:00:40,160
in the web layer, HTTP request will be handled and bin validation will be performed.

8
00:00:40,160 --> 00:00:46,970
And in the service layer, a real production version of our code will be executed and in the data layer

9
00:00:46,970 --> 00:00:50,480
and actual communication with the database will be performed.

10
00:00:50,480 --> 00:00:54,800
So no mocking of any layer or any object will be done.

11
00:00:54,890 --> 00:01:00,340
And for it to work we will need to start application context for all layers in our application.

12
00:01:00,350 --> 00:01:06,830
And to do that, Sprint framework provides us with a special annotation that is called Springboard Test.

13
00:01:07,400 --> 00:01:13,070
Springboard Test annotation will create application context that is very similar to the one we use in

14
00:01:13,070 --> 00:01:18,380
production application, although by default it will not start a web server.

15
00:01:18,470 --> 00:01:25,040
But even though a real web server will not be started by default, we can still test our code integrated

16
00:01:25,040 --> 00:01:32,360
with all layers, but if needed we can configure Springwood test annotation to load a real web environment

17
00:01:32,360 --> 00:01:39,170
with embedded server running on specific port number or even make it run on a random port number.

18
00:01:39,200 --> 00:01:42,770
And in the following lessons I'll show you how to do it.

19
00:01:42,890 --> 00:01:47,360
All right, so let's continue and let's write a few integration tests.

