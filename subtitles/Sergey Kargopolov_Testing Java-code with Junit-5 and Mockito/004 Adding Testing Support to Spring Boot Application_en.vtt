WEBVTT
1
00:00:00.640 --> 00:00:06.370
Springwood provides very good support for unit testing and integration testing in our applications.

2
00:00:06.430 --> 00:00:11.260
Let's try creating a very simple springboard application and a new browser window.

3
00:00:11.290 --> 00:00:17.590
I will open spring, initialize our tool using start dot sprint, dot IO.

4
00:00:17.620 --> 00:00:23.200
So here is the Spring Initialize tool which we can use to create a new Springwood project.

5
00:00:23.230 --> 00:00:29.080
Download it to our computer and then open it with any development environment that we want to use.

6
00:00:29.110 --> 00:00:33.370
Now let's say that we want to create a web application or a microservice.

7
00:00:33.610 --> 00:00:37.290
In this case, our application will need to have a web dependency.

8
00:00:37.300 --> 00:00:43.840
So to add new dependency, we can click on this button here and dependencies and I will search for web.

9
00:00:44.260 --> 00:00:49.090
The very first item in the search result is what I need Spring Web.

10
00:00:49.240 --> 00:00:52.450
I will click on it to include it into my project.

11
00:00:52.450 --> 00:00:59.890
And this dependency spring web dependency will allow us to create spring web applications as well as

12
00:00:59.890 --> 00:01:02.140
spring boot restful microservices.

13
00:01:02.410 --> 00:01:09.400
Now if I click on Explore Button, which is at the bottom of the page here, it will open a new panel

14
00:01:09.400 --> 00:01:15.190
and here I will be able to see the details of my Springwood project that will be generated and then

15
00:01:15.190 --> 00:01:16.810
download it to my computer.

16
00:01:16.840 --> 00:01:23.710
Now if I look at the POM XML file which is currently selected and if I scroll down a little bit, then

17
00:01:23.710 --> 00:01:31.540
in the Dependencies section I see the dependency that I have just added Spring Boot Starter Web and

18
00:01:31.540 --> 00:01:32.890
a little bit below.

19
00:01:32.920 --> 00:01:41.170
I also see a springboard starter test dependency that was added for me by spring initialize automatically.

20
00:01:41.170 --> 00:01:47.440
So for me to be able to start unit testing of my springboard application, this is the dependency that

21
00:01:47.440 --> 00:01:51.040
I need to add to my project Spring Boot Starter Test.

22
00:01:51.190 --> 00:01:57.720
Now if you don't use spring as a tool, then you can also find this dependency in MAVEN repository dotcom.

23
00:01:57.730 --> 00:02:04.600
So if I close this window and then start a new browser window and go to Maven repository dot com, I

24
00:02:04.600 --> 00:02:08.919
can find the springboard started as dependency here if I search for it.

25
00:02:08.919 --> 00:02:10.090
Spring Boot.

26
00:02:11.440 --> 00:02:12.670
Start a test.

27
00:02:13.030 --> 00:02:16.680
The very first item in the search result is what I need.

28
00:02:16.690 --> 00:02:23.920
I will open it, then click on its latest version and here is the MAVEN version of this dependency.

29
00:02:23.920 --> 00:02:28.900
If I need a version for Gradle, then I can copy it from the Gradle tab.

30
00:02:28.900 --> 00:02:31.330
Now, if I scroll down a little bit.

31
00:02:32.390 --> 00:02:32.600
Then.

32
00:02:32.630 --> 00:02:37.430
Then we'll see what all the libraries this one dependency will bring to my project.

33
00:02:37.460 --> 00:02:45.950
Notice that this dependency also includes G Unit, Jupiter, Mikita Core and Mikita G Unit Jupiter Support.

34
00:02:46.070 --> 00:02:53.330
So if we add this one dependency to our project, then we will also be able to use both G unit Jupiter

35
00:02:53.330 --> 00:02:55.970
and Makita to test our application.

36
00:02:55.970 --> 00:02:59.480
And there are other libraries that will also be added to our project.

37
00:02:59.480 --> 00:03:04.760
For example, the adjacent path assert g core crest.

38
00:03:04.850 --> 00:03:10.970
These are all very useful libraries to have when testing our applications, but I will not go into details

39
00:03:10.970 --> 00:03:13.370
about these libraries at this moment.

40
00:03:13.820 --> 00:03:19.730
Now, if we also use print security in our project, then there is one more dependency that we will

41
00:03:19.730 --> 00:03:20.750
want to add.

42
00:03:20.810 --> 00:03:26.690
Let's go back to Sprint, initialize our tool and let's add spring security to our project.

43
00:03:26.690 --> 00:03:31.100
I will add one more dependency, which is spring security.

44
00:03:31.130 --> 00:03:34.320
The very first item in the search result is what I need.

45
00:03:34.340 --> 00:03:42.290
I will click on it and if I click on the Explore button now to open the details of my project and scroll

46
00:03:42.290 --> 00:03:44.480
down XML file.

47
00:03:44.510 --> 00:03:49.430
The very first dependency is Springwood Starter Security.

48
00:03:49.460 --> 00:03:56.300
It is a dependency I have just added, but if I scroll down a little bit then additionally to Sprint

49
00:03:56.300 --> 00:04:01.580
Boot Start test, I now also have spring security test.

50
00:04:01.610 --> 00:04:09.290
This new dependency sprint security test will help us test our springboard application if it has Sprint

51
00:04:09.290 --> 00:04:14.630
security enabled and if some of our API endpoints require user to be authenticated.

52
00:04:14.630 --> 00:04:16.290
And this is it for now.

53
00:04:16.310 --> 00:04:23.840
So to be able to test our springboard application with G Unit and Makita, these are the two main dependencies

54
00:04:23.840 --> 00:04:33.740
that we need to add Sprint Boot Starter Test and spring security test so I can close this panel and

55
00:04:33.740 --> 00:04:39.710
to generate the springboard project and to download it to your computer, you will click on Generate

56
00:04:39.710 --> 00:04:40.190
Button.

57
00:04:40.190 --> 00:04:45.290
But I'm not going to do it because in the following lectures I want us to start testing a little bit

58
00:04:45.290 --> 00:04:52.220
bigger springboard application that already has a few API endpoints created and Sprint security enabled.

59
00:04:52.220 --> 00:04:54.500
So let's continue to the next lecture.

