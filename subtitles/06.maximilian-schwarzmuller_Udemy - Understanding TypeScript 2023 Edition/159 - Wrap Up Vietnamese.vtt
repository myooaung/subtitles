WEBVTT

00:02.190 --> 00:05.030
Người hướng dẫn: Vì vậy, chúng tôi đã thêm webpack,

00:05.030 --> 00:08.070
một công cụ rất quan trọng cho phép chúng tôi gộp các tệp

00:08.070 --> 00:09.690
khác nhau lại thành một gói.

00:09.690 --> 00:12.090
Điều này thực sự giúp chúng tôi giảm số lượng

00:12.090 --> 00:14.500
yêu cầu HTTP được thực hiện và do đó có thể tăng

00:14.500 --> 00:16.500
tốc ứng dụng của chúng tôi.

00:16.500 --> 00:19.840
Nếu bạn thấy mình đang làm việc với nhiều tệp riêng lẻ, điều

00:19.840 --> 00:22.270
mà bạn thường làm trong các dự án lớn hơn,

00:22.270 --> 00:24.360
thì các công cụ như webpack là thứ bắt

00:24.360 --> 00:26.910
buộc phải sử dụng và webpack là công cụ quan

00:26.910 --> 00:28.200
trọng và nổi bật nhất giúp

00:28.200 --> 00:31.190
bạn làm điều đó. muốn thể hiện ở đây.

00:31.190 --> 00:33.730
Bạn thấy rằng webpack có cấu hình cao và như

00:33.730 --> 00:36.190
tôi đã đề cập nhiều lần, các tài liệu chính

00:36.190 --> 00:39.630
thức của webpack là nơi để tìm hiểu tất cả về nó.

00:39.630 --> 00:42.120
Nói chung về các trình tải khác nhau, các cài đặt lỗi khác

00:42.120 --> 00:44.770
nhau mà bạn có thể thiết lập và cách thức hoạt động của nó.

00:44.770 --> 00:47.109
Vì vậy, hãy chắc chắn đi sâu vào tài liệu

00:47.109 --> 00:49.660
này nếu bạn muốn trở thành bậc thầy về webpack

00:49.660 --> 00:52.720
và bạn muốn có một thiết lập phức tạp hơn.

00:52.720 --> 00:55.610
Tuy nhiên, thiết lập cơ bản của chúng tôi ở đây đã cho

00:55.610 --> 00:58.200
phép chúng tôi biên dịch các tệp TypeScript bằng

00:58.200 --> 01:00.940
webpack và sau đó gộp tất cả đầu ra lại với nhau thành

01:00.940 --> 01:03.820
một gói duy nhất. tập tin js.

01:03.820 --> 01:06.500
Và chúng tôi cũng thiết lập cấu hình để phát triển

01:06.500 --> 01:09.050
giúp việc gỡ lỗi dễ dàng hơn và cung cấp cho chúng

01:09.050 --> 01:11.510
tôi các thông báo lỗi hữu ích hơn.

01:11.510 --> 01:13.250
Và chúng tôi nhận được một thiết

01:13.250 --> 01:15.570
lập sản xuất cung cấp cho chúng tôi mã được

01:15.570 --> 01:17.840
tối ưu hóa cao mà sau đó chúng tôi có thể triển

01:17.840 --> 01:21.160
khai tới máy chủ để gửi càng ít mã càng tốt cho máy chủ.

01:21.160 --> 01:22.210
Và thế là xong.

01:22.210 --> 01:25.740
webpack thực sự là một công cụ cốt lõi và việc có thể sử dụng

01:25.740 --> 01:26.573
nó cũng như có

01:26.573 --> 01:30.260
một cấu hình thực sự hoạt động là cực kỳ quan trọng.

01:30.260 --> 01:33.800
Vì vậy, tôi có thể nói rằng đây là thứ bắt buộc phải sử dụng trong bất kỳ dự án hiện đại

01:33.800 --> 01:36.710
nào, và trong mô-đun này, bạn sẽ tìm hiểu cách bạn có thể bắt đầu sử dụng

01:36.710 --> 01:38.763
nó trong các dự án TypeScript của mình.
