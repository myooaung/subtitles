WEBVTT

1
00:00:02.400 --> 00:00:04.350
<v Instructor>Name spaces are pretty nice,</v>

2
00:00:04.350 --> 00:00:07.240
but they're not necessarily perfect.

3
00:00:07.240 --> 00:00:09.680
We saw one problem in the last lecture

4
00:00:09.680 --> 00:00:13.290
where I manually added all the pendencies to each file.

5
00:00:13.290 --> 00:00:15.620
When I remove, drag and drop from project list,

6
00:00:15.620 --> 00:00:17.340
yes for example, it still compiles

7
00:00:17.340 --> 00:00:18.900
without errors.

8
00:00:18.900 --> 00:00:20.350
This is not ideal.

9
00:00:20.350 --> 00:00:22.360
Now, it might or might not work,

10
00:00:22.360 --> 00:00:25.047
depending on whether some other file imports

11
00:00:25.047 --> 00:00:26.590
the drag-drop model which I,

12
00:00:26.590 --> 00:00:27.550
in the end, need here.

13
00:00:27.550 --> 00:00:29.100
Which here would be the case.

14
00:00:29.100 --> 00:00:31.533
So technically, even after removing this,

15
00:00:31.533 --> 00:00:33.200
it works here.

16
00:00:33.200 --> 00:00:35.580
But this is not great, this is pretty dangerous.

17
00:00:35.580 --> 00:00:38.560
If we rely on the fact that some file

18
00:00:38.560 --> 00:00:41.990
will handle it for us, well if we then delete

19
00:00:41.990 --> 00:00:44.830
or change that file which saved our ass,

20
00:00:44.830 --> 00:00:47.740
we suddenly change something totally unrelated

21
00:00:47.740 --> 00:00:49.240
and our app stops working.

22
00:00:49.240 --> 00:00:51.420
We definitely don't want that.

23
00:00:51.420 --> 00:00:53.900
So it would be nice if we had imports and exports

24
00:00:53.900 --> 00:00:58.050
that clearly state what we import from which file.

25
00:00:58.050 --> 00:00:59.660
And if we need something here,

26
00:00:59.660 --> 00:01:01.120
Drag Target for example,

27
00:01:01.120 --> 00:01:03.400
and we're not importing it explicitly,

28
00:01:03.400 --> 00:01:04.840
we get an error.

29
00:01:04.840 --> 00:01:06.450
That is basically what we want.

30
00:01:06.450 --> 00:01:10.235
And we get this behavior with ES6 modules.

31
00:01:10.235 --> 00:01:12.930
Now, ES6 modules also exist

32
00:01:12.930 --> 00:01:14.800
outside of the type of the world,

33
00:01:14.800 --> 00:01:17.340
modern browsers support them natively,

34
00:01:17.340 --> 00:01:19.630
where the browser will then basically download

35
00:01:19.630 --> 00:01:22.960
all the pendencies of a file when it executes.

36
00:01:22.960 --> 00:01:25.150
But types could also imports them and then

37
00:01:25.150 --> 00:01:28.350
gets the initial type support when we use them.

38
00:01:28.350 --> 00:01:31.007
Now how do ES6 modules work?

39
00:01:31.007 --> 00:01:33.600
Let's again start with drag and drop.

40
00:01:33.600 --> 00:01:35.240
Let's remove that name space thing

41
00:01:35.240 --> 00:01:37.360
which is a pure types confeature.

42
00:01:37.360 --> 00:01:40.030
Let's keep the export key word though.

43
00:01:40.030 --> 00:01:42.150
The export key word is not just the

44
00:01:42.150 --> 00:01:44.290
there to work with name spaces,

45
00:01:44.290 --> 00:01:46.980
it's actually a default Java script syntax

46
00:01:46.980 --> 00:01:49.800
which is all as important by typ script.

47
00:01:49.800 --> 00:01:52.360
It means that you export this interphase

48
00:01:52.360 --> 00:01:53.600
and this one here as well

49
00:01:53.600 --> 00:01:56.870
from this file and you can then import it

50
00:01:56.870 --> 00:01:58.460
into another file.

51
00:01:58.460 --> 00:02:01.290
In our case here we need it in the project item

52
00:02:01.290 --> 00:02:02.980
and project list files.

53
00:02:02.980 --> 00:02:05.230
Now let's start with the project item.

54
00:02:05.230 --> 00:02:09.030
To import something from ES module

55
00:02:09.030 --> 00:02:11.450
so with that ES module synthax,

56
00:02:11.450 --> 00:02:14.440
you specify import at the top of the file

57
00:02:14.440 --> 00:02:16.110
or near the top of the file

58
00:02:16.110 --> 00:02:18.970
before you start writing any actual code.

59
00:02:18.970 --> 00:02:23.240
Import from and then you point at that file

60
00:02:23.240 --> 00:02:26.220
with a relative path from the file on in which

61
00:02:26.220 --> 00:02:27.320
you are importing.

62
00:02:27.320 --> 00:02:29.340
So in this case we need to go up I level

63
00:02:29.340 --> 00:02:31.030
with two dots and a slash.

64
00:02:31.030 --> 00:02:32.509
So that we are in the source folder,

65
00:02:32.509 --> 00:02:35.550
and then we need to go here to the modules folder

66
00:02:35.550 --> 00:02:37.450
and import drag and drop.

67
00:02:37.450 --> 00:02:40.480
Now important, add dot JS here,

68
00:02:40.480 --> 00:02:43.480
because you need to import as if this already

69
00:02:43.480 --> 00:02:46.470
were compiled, because this will be taken over

70
00:02:46.470 --> 00:02:49.130
into vanilla Java script and then it should

71
00:02:49.130 --> 00:02:50.860
look for Java script there

72
00:02:50.860 --> 00:02:53.580
so for Java script files so dot JS needs

73
00:02:53.580 --> 00:02:55.010
to be added.

74
00:02:55.010 --> 00:02:57.560
Now you import something from there

75
00:02:57.560 --> 00:02:59.320
and for than you add curly braces

76
00:02:59.320 --> 00:03:01.500
between which you specify what you want to import

77
00:03:01.500 --> 00:03:03.150
from that file.

78
00:03:03.150 --> 00:03:06.430
There I already get auto completion

79
00:03:06.430 --> 00:03:08.480
I wanna import draggable.

80
00:03:08.480 --> 00:03:10.910
Now draggable is available here and types

81
00:03:10.910 --> 00:03:14.430
sees that it's not available and is happy.

82
00:03:14.430 --> 00:03:16.860
Now we need to convert everything so that it can

83
00:03:16.860 --> 00:03:17.930
show at run time.

84
00:03:17.930 --> 00:03:20.370
So lets get rid of the name space here as well.

85
00:03:20.370 --> 00:03:22.340
Now have to close the curly brace as well.

86
00:03:22.340 --> 00:03:24.870
And now for example here now we get what we want,

87
00:03:24.870 --> 00:03:27.540
we get errors, we get component error,

88
00:03:27.540 --> 00:03:29.650
project, this is all missing.

89
00:03:29.650 --> 00:03:31.890
So let's export and import all these things.

90
00:03:31.890 --> 00:03:33.220
For example in base component

91
00:03:33.220 --> 00:03:34.540
get rid of the name space,

92
00:03:34.540 --> 00:03:36.810
keep the export key word as you learned.

93
00:03:36.810 --> 00:03:38.270
Get rid of the closing curly brace

94
00:03:38.270 --> 00:03:40.810
and reformat and project import.

95
00:03:40.810 --> 00:03:43.380
We can always get rid of the name space.

96
00:03:43.380 --> 00:03:45.760
And all of the references here, you can actually

97
00:03:45.760 --> 00:03:48.803
delete all reference imports you have anywhere.

98
00:03:51.300 --> 00:03:53.593
Get rid of all the name space curly braces.

99
00:03:55.010 --> 00:03:56.950
Project list, get rid of all the name space

100
00:03:56.950 --> 00:03:58.466
and the references, get rid of the closing

101
00:03:58.466 --> 00:04:00.690
curly brace down there.

102
00:04:00.690 --> 00:04:03.320
And decorators, get rid of the name space

103
00:04:03.320 --> 00:04:05.330
and the closing curly brace

104
00:04:05.330 --> 00:04:07.940
and drag and drop, we already got rid of it.

105
00:04:07.940 --> 00:04:10.230
Project, get rid of the name space and the

106
00:04:10.230 --> 00:04:11.920
closing curly brace.

107
00:04:11.920 --> 00:04:14.460
Project stayed unsurprisingly get rid of the

108
00:04:14.460 --> 00:04:16.223
name space and the closing.

109
00:04:18.390 --> 00:04:22.620
Curly brace here we actually were relying on

110
00:04:22.620 --> 00:04:24.740
project being imported by some other file,

111
00:04:24.740 --> 00:04:26.620
I didn't have references to it here.

112
00:04:26.620 --> 00:04:28.770
So that was that dangerous behavior

113
00:04:28.770 --> 00:04:29.880
I was talking about.

114
00:04:29.880 --> 00:04:31.871
This could have failed if we wouldn't import

115
00:04:31.871 --> 00:04:35.120
or if we wouldn't reference our project part

116
00:04:35.120 --> 00:04:36.710
in the name space in some other file.

117
00:04:36.710 --> 00:04:39.090
So that definitively was not ideal.

118
00:04:39.090 --> 00:04:41.560
But with that let's continue our refactoring.

119
00:04:41.560 --> 00:04:44.430
In validation here get rid of the name space here

120
00:04:44.430 --> 00:04:46.050
and all of the closing curly brace

121
00:04:46.050 --> 00:04:47.550
here at the bottom.

122
00:04:47.550 --> 00:04:49.150
And last but not least an app TS,

123
00:04:49.150 --> 00:04:51.503
get rid of these imports and of the name space.

124
00:04:52.700 --> 00:04:55.350
So now we got errors everywhere

125
00:04:55.350 --> 00:04:56.988
but now we can start over.

126
00:04:56.988 --> 00:04:59.560
Now let's maybe start over in the base component.

127
00:04:59.560 --> 00:05:01.610
This is looking good, it's not complaining

128
00:05:01.610 --> 00:05:03.700
seems to have everything it wants.

129
00:05:03.700 --> 00:05:06.250
Project import, well, it is complaining.

130
00:05:06.250 --> 00:05:08.450
For example there we need to component.

131
00:05:08.450 --> 00:05:12.070
So let's add a import at the top and lets import

132
00:05:12.070 --> 00:05:15.830
component from dot slash base component.

133
00:05:15.830 --> 00:05:18.410
This is how you import relatively

134
00:05:18.410 --> 00:05:19.990
if something is in the same folder.

135
00:05:19.990 --> 00:05:22.370
Dot slash at the beginning, then the file name

136
00:05:22.370 --> 00:05:24.490
and then all is important dot JS.

137
00:05:24.490 --> 00:05:26.753
Don't forget the dot JS at the end.

138
00:05:28.100 --> 00:05:30.250
Now we also need the validatable interphase

139
00:05:31.170 --> 00:05:34.650
here and the validate method, auto mind

140
00:05:34.650 --> 00:05:36.810
and project state.

141
00:05:36.810 --> 00:05:39.140
So let's import all these things

142
00:05:39.140 --> 00:05:44.080
let's import from dot slash, or no

143
00:05:44.080 --> 00:05:46.149
go up one level then util then validation

144
00:05:46.149 --> 00:05:49.460
dot JS, let's import from That File,

145
00:05:49.460 --> 00:05:52.100
validatable and the validate function

146
00:05:53.010 --> 00:05:56.250
and import auto bind from,

147
00:05:56.250 --> 00:06:00.350
going up one level decorators autobind JS.

148
00:06:00.350 --> 00:06:02.600
And last but not least the project state

149
00:06:02.600 --> 00:06:05.220
let's import from going up one level

150
00:06:05.220 --> 00:06:07.580
state project state JS .

151
00:06:07.580 --> 00:06:11.000
From there we can import the project state

152
00:06:11.000 --> 00:06:13.250
constant that we export there.

153
00:06:13.250 --> 00:06:15.390
Now these are all the imports we need here

154
00:06:15.390 --> 00:06:16.773
to make this file work.

155
00:06:18.190 --> 00:06:20.480
So let's move on to project item now.

156
00:06:20.480 --> 00:06:23.270
In there we need autobind we need component

157
00:06:23.270 --> 00:06:24.853
we need the project model.

158
00:06:24.853 --> 00:06:26.700
So let's add all these things.

159
00:06:26.700 --> 00:06:30.520
Let's for example import the project model from

160
00:06:30.520 --> 00:06:34.523
dot dot slash models project JS.

161
00:06:35.580 --> 00:06:38.080
Let's also add component

162
00:06:39.340 --> 00:06:41.110
which lives in the same folder .

163
00:06:41.110 --> 00:06:45.530
So import dot slash base component JS

164
00:06:45.530 --> 00:06:49.020
and auto bind, let's import auto bind

165
00:06:50.790 --> 00:06:55.790
from dot dot slash decorators auto bind JS.

166
00:06:56.020 --> 00:06:59.383
And now this file here also has everything it needs.

167
00:07:01.260 --> 00:07:03.410
Now let's move on to project list.

168
00:07:03.410 --> 00:07:06.610
Here in project list we also need the component

169
00:07:06.610 --> 00:07:10.250
as on so on, so we'll actually copy that over here

170
00:07:10.250 --> 00:07:14.260
from project item add it to project list TS,

171
00:07:14.260 --> 00:07:16.120
but we don't need draggoble here but to

172
00:07:16.120 --> 00:07:19.420
drag target instead so let's import that.

173
00:07:19.420 --> 00:07:22.307
And in addition we need the project state

174
00:07:22.307 --> 00:07:24.550
the project status.

175
00:07:24.550 --> 00:07:26.540
Yeah, these are the things we need.

176
00:07:26.540 --> 00:07:28.780
And also the project item class.

177
00:07:28.780 --> 00:07:31.030
So from the project model file we can also

178
00:07:31.030 --> 00:07:32.720
import project status.

179
00:07:32.720 --> 00:07:35.340
You can import multiple exported things from

180
00:07:35.340 --> 00:07:36.840
one of the same file by simply

181
00:07:36.840 --> 00:07:38.730
separating them with a comma between

182
00:07:38.730 --> 00:07:41.740
these curly braces just as you are seeing it here.

183
00:07:41.740 --> 00:07:45.910
We also import the project state constant

184
00:07:46.790 --> 00:07:48.790
from the state folder,

185
00:07:48.790 --> 00:07:52.470
project state JS and also import

186
00:07:52.470 --> 00:07:54.790
last but not least, here at the very bottom

187
00:07:54.790 --> 00:07:57.130
we need it, the project item class.

188
00:07:57.130 --> 00:08:01.770
So import project item from dot slash

189
00:08:01.770 --> 00:08:03.623
project item dot JS.

190
00:08:06.810 --> 00:08:08.280
So let's move on.

191
00:08:08.280 --> 00:08:11.280
Autobind is fine, project status complaining

192
00:08:11.280 --> 00:08:13.600
there we need the project model.

193
00:08:13.600 --> 00:08:15.740
So at the top let's import

194
00:08:16.820 --> 00:08:20.300
project from going up one level

195
00:08:20.300 --> 00:08:22.823
models project dot JS.

196
00:08:24.450 --> 00:08:27.630
We also are using project status in here so let's

197
00:08:27.630 --> 00:08:29.573
import that from that same file'

198
00:08:32.320 --> 00:08:33.960
And with that, last but not least

199
00:08:33.960 --> 00:08:35.660
we get the app TS file

200
00:08:35.660 --> 00:08:38.810
there we need to import project input.

201
00:08:38.810 --> 00:08:43.610
from dot slash components project input.

202
00:08:43.610 --> 00:08:48.030
JS and the project list

203
00:08:49.290 --> 00:08:52.280
from project list JS'

204
00:08:52.280 --> 00:08:54.330
If we now saved this it should compile

205
00:08:54.330 --> 00:08:58.500
without errors and now we are using ES6 modules

206
00:08:58.500 --> 00:09:00.823
to organize our imports and exports.

207
00:09:02.640 --> 00:09:05.460
If we have a look at the browser though

208
00:09:05.460 --> 00:09:07.040
we got an error.

209
00:09:07.040 --> 00:09:09.390
Now the reason for that is if we check the dist

210
00:09:09.390 --> 00:09:12.013
folder we got our bundle JS file right.

211
00:09:13.040 --> 00:09:15.900
Now we need to switch TS config again.

212
00:09:15.900 --> 00:09:19.070
For one here, we shouldn't use AMD now

213
00:09:19.070 --> 00:09:22.420
but instead ES twenty fifteen.

214
00:09:22.420 --> 00:09:25.710
Than is basically the code word for ES6 which was

215
00:09:25.710 --> 00:09:27.240
the agma script version that

216
00:09:27.240 --> 00:09:29.300
introduced ES modules.

217
00:09:29.300 --> 00:09:31.260
So we're basically telling type script

218
00:09:31.260 --> 00:09:34.480
don't transform our imports to anything,

219
00:09:34.480 --> 00:09:36.240
keep them as they are.

220
00:09:36.240 --> 00:09:39.250
Modern browsers will understand it.

221
00:09:39.250 --> 00:09:41.290
So that's important, also make sure you have a

222
00:09:41.290 --> 00:09:43.433
target of ES6 or higher here'

223
00:09:44.950 --> 00:09:47.530
You now also should comment out the out file again,

224
00:09:47.530 --> 00:09:50.670
because that's not supported with ES modules.

225
00:09:50.670 --> 00:09:53.590
And with that what you get in the dist folder

226
00:09:53.590 --> 00:09:56.610
is basically a replication of your source folder

227
00:09:56.610 --> 00:09:58.690
but with Java script files.

228
00:09:58.690 --> 00:10:00.480
So now we also need to go back to the index

229
00:10:00.480 --> 00:10:03.120
HDML file and import app JS again,

230
00:10:03.120 --> 00:10:04.840
because we got an app JS file

231
00:10:04.840 --> 00:10:06.350
in the dist folder now.

232
00:10:06.350 --> 00:10:08.910
And again this app JS file will have you're

233
00:10:08.910 --> 00:10:11.180
import statements in there, because, as I mentioned,

234
00:10:11.180 --> 00:10:13.830
this is supported by Java script, by modern

235
00:10:13.830 --> 00:10:15.900
Java script engines and by modern browsers.

236
00:10:15.900 --> 00:10:17.440
And the browser will resolve

237
00:10:17.440 --> 00:10:19.440
these imports for you therefore.

238
00:10:19.440 --> 00:10:22.430
So if we now reload this, huh

239
00:10:22.430 --> 00:10:24.240
we still get an error.

240
00:10:24.240 --> 00:10:27.310
Cannot use import statement outside a module.

241
00:10:27.310 --> 00:10:30.630
Well modern browsers support this sintex

242
00:10:30.630 --> 00:10:33.150
but you have to tell them that you wanna use it.

243
00:10:33.150 --> 00:10:37.470
And you do tell them by removing the (mumbles) here

244
00:10:37.470 --> 00:10:39.670
and instead on the script tag, where you

245
00:10:39.670 --> 00:10:42.777
import a file which has these imports statements.

246
00:10:42.777 --> 00:10:46.313
You use type equals module.

247
00:10:47.300 --> 00:10:50.450
If you now safe this, you see

248
00:10:50.450 --> 00:10:53.440
this works and now if we add something here

249
00:10:53.440 --> 00:10:56.120
we get the working application again.

250
00:10:56.120 --> 00:10:58.910
Now if you inspect the network tab by the way

251
00:10:58.910 --> 00:11:01.680
you will see that if you reload, there are

252
00:11:01.680 --> 00:11:05.290
a bunch of network requests going on,

253
00:11:05.290 --> 00:11:07.410
if I zoom out a bit we can see it better.

254
00:11:07.410 --> 00:11:10.340
All our Java script files are requested here.

255
00:11:10.340 --> 00:11:12.810
They are requested automatically by the browser

256
00:11:12.810 --> 00:11:14.780
when it encounters our import.

257
00:11:14.780 --> 00:11:16.967
So it starts with app JS, then it sees the

258
00:11:16.967 --> 00:11:19.410
import to project input JS.

259
00:11:19.410 --> 00:11:21.990
Here and hence of course the next request goes

260
00:11:21.990 --> 00:11:23.160
to project input.

261
00:11:23.160 --> 00:11:25.410
It also does the same for project list.

262
00:11:25.410 --> 00:11:27.360
Now in project input for example it would

263
00:11:27.360 --> 00:11:29.422
see a input from base component JS

264
00:11:29.422 --> 00:11:31.450
which is why it also imports

265
00:11:31.450 --> 00:11:33.400
prob base component JS.

266
00:11:33.400 --> 00:11:35.530
So that's done by the browser here

267
00:11:35.530 --> 00:11:38.170
we take advantage of it and now we have another

268
00:11:38.170 --> 00:11:40.850
way of splitting our files but with the

269
00:11:40.850 --> 00:11:43.750
additional advantage that we clearly state

270
00:11:43.750 --> 00:11:45.850
what we need from each file and

271
00:11:45.850 --> 00:11:49.100
if we omit an import, type-script yells at us,

272
00:11:49.100 --> 00:11:51.127
which it didn't do with the previous approach,

273
00:11:51.127 --> 00:11:53.400
which is way this approach is actually my

274
00:11:53.400 --> 00:11:56.670
recommendation and why it is the defacto standard

275
00:11:56.670 --> 00:11:58.870
way of importing and exporting.

276
00:11:58.870 --> 00:12:00.710
Now, if you've worked with type script before

277
00:12:00.710 --> 00:12:03.850
in other projects, let's say in a angular project,

278
00:12:03.850 --> 00:12:06.380
you might also be used to not having to specify

279
00:12:06.380 --> 00:12:07.980
a file extension here

280
00:12:07.980 --> 00:12:09.270
Well, we'll also be able

281
00:12:09.270 --> 00:12:10.820
to omit that once we add

282
00:12:10.820 --> 00:12:12.210
web pack and a bill tool.

283
00:12:12.210 --> 00:12:14.580
As long as we don't have that and we rely on the

284
00:12:14.580 --> 00:12:16.870
browser to import our files you need

285
00:12:16.870 --> 00:12:18.833
to add that extra extension.

