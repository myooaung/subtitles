WEBVTT

00:02.300 --> 00:03.133
Giảng viên: Vì vậy, tất

00:03.133 --> 00:05.250
nhiên, mục tiêu của chúng tôi không chỉ là đăng nhập ID đó.

00:05.250 --> 00:09.340
Thay vào đó, tôi muốn trích xuất ID dự án ở đây trong nhật ký, trong

00:09.340 --> 00:11.110
trình xử lý thả xuống.

00:11.110 --> 00:15.410
Và cùng với đó, mục tiêu là thực sự di chuyển dự án ngay bây giờ,

00:15.410 --> 00:18.910
hoặc chính xác là thay đổi trạng thái dự án.

00:18.910 --> 00:21.400
Bây giờ, làm thế nào chúng ta có thể làm điều đó?

00:21.400 --> 00:26.063
Chà, ở trạng thái của chúng ta, tôi có thể nói, ở trạng thái dự án của chúng ta,

00:26.950 --> 00:30.000
nơi chúng ta hiện có phương thức addProject, chúng

00:30.000 --> 00:33.160
ta cũng cần một phương thức moveProject.

00:33.160 --> 00:35.060
Và mục tiêu của phương pháp này

00:35.060 --> 00:38.550
sẽ là chuyển đổi cơ bản trạng thái của một dự án.

00:38.550 --> 00:40.180
Tất nhiên, do đó, bạn cũng có thể đặt tên

00:40.180 --> 00:42.970
cho nó là SwitchProjectStatus hoặc bất kỳ tên nào bạn muốn, nhưng

00:42.970 --> 00:44.390
vì chúng tôi đang thực hiện thao tác

00:44.390 --> 00:46.440
kéo và thả nên tôi gọi nó là MoveProject.

00:46.440 --> 00:49.470
Vì vậy, trong MoveProject, mục tiêu là di

00:49.470 --> 00:53.860
chuyển một dự án từ danh sách hiện tại sang một danh sách mới.

00:53.860 --> 00:55.460
Bây giờ, điều này không phải lúc nào

00:55.460 --> 00:58.030
cũng có nghĩa là chúng ta chỉ cần chuyển trạng thái dự

00:58.030 --> 01:00.480
án từ đang hoạt động sang kết thúc và ngược lại.

01:00.480 --> 01:02.870
Rốt cuộc, người dùng có thể thực hiện việc

01:02.870 --> 01:05.060
này, kéo và thả trong cùng một hộp.

01:05.060 --> 01:07.120
Vì vậy, nếu sau đó chúng ta luôn kích

01:07.120 --> 01:10.680
hoạt một phương thức chuyển đổi trạng thái, chúng ta sẽ có một

01:10.680 --> 01:12.690
tác động không mong muốn khi thả vào

01:12.690 --> 01:15.754
cùng một hộp vẫn chuyển dự án sang hộp khác.

01:15.754 --> 01:18.972
Vì vậy, thay vào đó, trong MoveProject, chúng

01:18.972 --> 01:23.402
ta thực sự phải biết dự án nào sẽ di chuyển và hộp mới là hộp nào.

01:23.402 --> 01:24.235
Vì vậy, trạng thái mới là trạng thái nào.

01:25.940 --> 01:28.190
Vì vậy, tôi hy vọng sẽ nhận được ID dự

01:28.190 --> 01:31.410
án ở đây, đây phải là một chuỗi và trạng thái mới.

01:31.410 --> 01:34.130
Và trạng thái mới ở đây, tất nhiên, có thể

01:34.130 --> 01:36.410
thuộc loại ProjectStatus.

01:38.580 --> 01:40.803
Và sau đó bên trong MoveProject,

01:41.692 --> 01:44.320
tôi muốn tìm một dự án có ID đó trong

01:44.320 --> 01:46.830
mảng dự án của mình.

01:46.830 --> 01:49.090
Vì vậy, ở đây, trong mảng này của các

01:49.090 --> 01:51.680
dự án, và sau đó lật trạng thái của nó.

01:51.680 --> 01:54.580
Vì vậy, chúng ta có thể liên hệ với dự án này,

01:54.580 --> 01:57.450
tìm một dự án trong đó và phương pháp tìm

01:57.450 --> 01:59.440
là hoàn hảo cho điều đó.

01:59.440 --> 02:01.210
Nó chạy trên mọi phần tử trong mảng này, cho phép

02:01.210 --> 02:02.680
chúng ta truy cập vào mọi phần tử và sau

02:02.680 --> 02:03.970
đó chúng ta phải trả về true nếu đó

02:03.970 --> 02:05.770
là phần tử mà chúng ta đang tìm kiếm.

02:05.770 --> 02:07.150
Và tôi muốn trả về true

02:07.150 --> 02:09.860
nếu ID của phần tử mà chúng ta hiện đang xem

02:09.860 --> 02:12.830
bằng với projectId mà tôi đang lấy làm đối số

02:12.830 --> 02:15.420
ở đây, thì chúng ta có phần tử sẽ thay đổi

02:15.420 --> 02:17.470
và ở phần tử này, chúng ta chỉ cần

02:17.470 --> 02:21.070
phải thay đổi trạng thái sang trạng thái mới.

02:21.070 --> 02:22.653
Bây giờ giá trị này có thể là null,

02:23.490 --> 02:26.490
vì vậy ở đây tôi sẽ gọi nó là dự án, được lưu trữ dưới dạng hằng

02:26.490 --> 02:28.080
số hiện được gọi là dự án và kiểm

02:28.080 --> 02:30.550
tra xem dự án có tồn tại hay không.

02:30.550 --> 02:34.160
Và nếu nó tồn tại, thì tôi muốn đặt trạng thái

02:34.160 --> 02:39.160
bằng với trạng thái mới ở đây. Đơn giản như thế.

02:39.250 --> 02:42.900
Điều này sẽ thay đổi đối tượng trong mảng và về

02:42.900 --> 02:45.643
cơ bản chúng ta đã hoàn thành nó.

02:46.970 --> 02:50.010
Tất nhiên, tuy nhiên, chúng tôi không hoàn thành.

02:50.010 --> 02:52.250
Bây giờ chúng tôi cần cho mọi người biết, tất

02:52.250 --> 02:56.040
cả thính giả của chúng tôi, rằng có điều gì đó đã thay đổi về dự án của chúng

02:56.040 --> 02:57.870
tôi và họ nên kết xuất lại.

02:57.870 --> 02:59.980
Vì vậy, chúng tôi phải xem xét lại tất cả

02:59.980 --> 03:01.910
các trình nghe và vì chúng tôi sẽ lặp lại

03:01.910 --> 03:04.080
mã ở đây, tôi sẽ thuê ngoài điều này theo một

03:04.080 --> 03:07.920
phương thức riêng tư mới, updateListeners có thể là một cái tên khả thi

03:07.920 --> 03:10.490
và trong đó tôi sẽ có vòng lặp for này, nơi chúng tôi

03:10.490 --> 03:13.660
đi qua tất cả người nghe và sau đó làm một cái gì đó.

03:13.660 --> 03:15.890
Và sau đó tôi sẽ gọi updateListeners

03:15.890 --> 03:17.430
này cả từ addProject

03:17.430 --> 03:20.890
và cả từ phương thức moveProject.

03:20.890 --> 03:23.033
Ở đây, chỉ khi chúng tôi đã thay đổi một cái gì đó.

03:24.350 --> 03:26.100
Vì vậy, bây giờ tất cả người nghe sẽ được kích hoạt.

03:26.100 --> 03:28.980
Và nếu bạn còn nhớ, một trình nghe trong ứng dụng của chúng

03:28.980 --> 03:33.010
ta ở đây, về cơ bản sẽ dẫn đến danh sách để hiển thị lại các mục của nó.

03:33.010 --> 03:35.310
Vì vậy, nó sẽ hoạt động chính xác như bình thường

03:35.310 --> 03:37.940
hoặc nó sẽ hoạt động chính xác như bình thường.

03:37.940 --> 03:40.640
Vì vậy, bây giờ chúng ta có phương thức moveProject đó, ở dưới đó trong

03:40.640 --> 03:43.730
trình xử lý thả xuống, bây giờ chúng ta có thể sử dụng phương thức này.

03:43.730 --> 03:46.390
Bây giờ chúng ta có thể sử dụng projectState,

03:46.390 --> 03:49.670
gọi moveProject và chuyển ID dự án, và bây giờ

03:49.670 --> 03:52.296
là trạng thái dự án mới.

03:52.296 --> 03:54.190
Và trạng thái dự án mới phụ

03:54.190 --> 03:57.880
thuộc vào danh sách mà chúng tôi loại bỏ điều này.

03:57.880 --> 03:59.630
Vì vậy, tôi muốn tự động liên

04:00.760 --> 04:01.790
kết trình xử lý thả

04:01.790 --> 04:04.050
của mình, để từ khóa this trong trình

04:04.050 --> 04:06.020
xử lý thả đề cập đến lớp xung quanh

04:06.020 --> 04:08.500
và lớp xung quanh này là danh sách dự án, nếu

04:08.500 --> 04:10.320
bạn còn nhớ, sẽ có một thuộc tính

04:10.320 --> 04:13.020
loại ở đây, chúng tôi đang lưu trữ nó ở đây, chúng

04:13.020 --> 04:15.820
tôi đang có một loại, thuộc tính và đang hoạt động

04:15.820 --> 04:18.120
hoặc đã kết thúc.

04:18.120 --> 04:21.000
Vì vậy, bây giờ chúng tôi chỉ cần dịch hoạt động hoặc kết thúc

04:21.000 --> 04:22.640
thành các giá trị enum của mình.

04:22.640 --> 04:24.850
Vì vậy, ở đây, tôi vượt qua trong này. nhập và tôi kiểm tra xem

04:24.850 --> 04:27.230
nó có bằng hoạt động hay không, trong trường hợp

04:27.230 --> 04:31.580
đó, chúng tôi chuyển ProjectStatus. Đang hoạt động, là trạng thái

04:31.580 --> 04:33.750
mới của dự án, vì đó là trạng

04:33.750 --> 04:36.190
thái của danh sách mà chúng tôi

04:36.190 --> 04:38.160
đã chuyển dự án sang.

04:38.160 --> 04:41.733
Nếu không, chúng tôi chuyển vào ProjectStatus. Xong rồi để mình

04:42.660 --> 04:45.423
format lại cho dễ đọc.

04:46.730 --> 04:48.110
Với điều đó, hãy thử xem.

04:48.110 --> 04:52.440
Hãy lưu tất cả, và thêm một dự án mới ở đây, và bây giờ hãy kéo nó vào

04:52.440 --> 04:56.620
các dự án đã hoàn thành và nó sẽ chuyển đổi, tương tự và nếu tôi

04:56.620 --> 04:58.270
di chuyển nó trở lại.

04:58.270 --> 05:02.320
Nếu tôi buông bỏ ở đây trong các dự án đang hoạt động, không có gì thay đổi.

05:02.320 --> 05:04.400
Bây giờ bạn sẽ thấy, nếu bạn kiểm tra DOM,

05:04.400 --> 05:08.100
về mặt kỹ thuật, nó sẽ hiển thị lại, điều này có thể không lý tưởng, vì

05:08.100 --> 05:11.450
vậy chúng tôi có thể nghĩ đến việc đưa ra một số giải pháp để kiểm

05:11.450 --> 05:15.290
tra xem trạng thái có thực sự thay đổi hay không và nếu không, chúng tôi

05:15.290 --> 05:17.400
sẽ không không cập nhật, đó là điều chúng

05:17.400 --> 05:18.890
tôi có thể làm.

05:18.890 --> 05:22.620
Nhưng từ góc độ giao diện người dùng, nó cập nhật đúng như mong muốn.

05:22.620 --> 05:24.570
Bây giờ, hãy thêm một dự án thứ

05:24.570 --> 05:27.120
hai và xem liệu điều đó có phá hủy thứ gì

05:27.120 --> 05:29.260
không, nếu mọi thứ vẫn hoạt động,

05:29.260 --> 05:31.750
và tôi sẽ nói rằng nó có vẻ ổn, nó có vẻ

05:31.750 --> 05:33.720
khá tốt đối với tôi.

05:33.720 --> 05:37.120
Mọi thứ dường như hoạt động chính xác theo cách nó nên làm.

05:37.120 --> 05:40.230
Vì vậy, thao tác kéo và thả chỉ hoạt động tốt ở đây nhưng

05:40.230 --> 05:42.600
có một cải tiến mà tôi đã đề cập lại trong trạng

05:42.600 --> 05:46.305
thái dự án, trong moveProject, khi tôi gọi đây là updateListeners,

05:46.305 --> 05:49.470
chúng tôi thực sự có thể kiểm tra xem chúng tôi có thực sự

05:49.470 --> 05:51.920
thay đổi trạng thái hay không.

05:51.920 --> 05:54.150
Vì vậy, ở đây chúng tôi có thể kiểm tra xem

05:54.150 --> 05:57.940
dự án, vì vậy nếu chúng tôi đã tìm thấy một dự án và nếu sau đó trạng thái

05:57.940 --> 06:00.270
dự án khác với trạng thái mới, thì chỉ khi đó

06:00.270 --> 06:03.830
chúng tôi mới thay đổi trạng thái và cập nhật trình nghe.

06:03.830 --> 06:06.060
Nếu trạng thái giống nhau, chúng tôi không làm

06:06.060 --> 06:09.310
điều này và chúng tôi tránh chu kỳ kết xuất lại không cần thiết.

06:09.310 --> 06:10.143
Vì vậy, bây giờ với

06:10.143 --> 06:12.900
điều đó, nếu chúng tôi đã lưu nó và chúng tôi nhanh chóng

06:12.900 --> 06:14.790
thêm một dự án mới, bạn sẽ thấy nếu tôi

06:14.790 --> 06:18.190
kiểm tra các phần tử ở đây và bạn xem L-I và kiểm tra xem điều này có

06:18.190 --> 06:21.800
nhấp nháy hay không, có nghĩa là nó sẽ hiển thị lại, nó không nhấp nháy

06:21.800 --> 06:24.490
ở đây, chỉ droppable nhấp nháy, lớp chúng tôi vừa thêm

06:24.490 --> 06:27.970
vào, nhưng L-I không nhấp nháy nếu tôi thả vào cùng một ô, nó chỉ nhấp

06:27.970 --> 06:30.990
nháy nếu tôi di chuyển nó sang một ô khác.

06:30.990 --> 06:34.460
Và nó sẽ nhấp nháy sau đó vì khi đó chúng tôi thực sự đã di chuyển nó.

06:34.460 --> 06:36.180
Vì vậy, bây giờ chúng tôi tối ưu hóa

06:36.180 --> 06:39.050
điều này một chút và bây giờ chúng tôi đã làm việc kéo và

06:39.050 --> 06:42.223
thả ở đây, tất cả được xây dựng và cung cấp bởi TypeScript.
