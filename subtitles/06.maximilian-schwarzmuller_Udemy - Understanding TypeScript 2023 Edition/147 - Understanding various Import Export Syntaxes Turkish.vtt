WEBVTT

00:02.310 --> 00:04.270
Eğitmen: Yani ES modüllerini kullanıyoruz.

00:04.270 --> 00:06.470
Bu dışa ve içe aktarma sözdiziminin bilmeniz

00:06.470 --> 00:08.550
gereken bazı varyasyonları olduğu

00:08.550 --> 00:10.100
ortaya çıktı.

00:10.100 --> 00:12.276
Örneğin, ithalatları paketleyebilirsiniz.

00:12.276 --> 00:14.300
Diyelim ki burada proje girişinde,

00:14.300 --> 00:15.870
burada doğrulama dosyasından

00:15.870 --> 00:18.060
iki şeyi içe aktarıyorum.

00:18.060 --> 00:22.030
Bunların hepsini dot validatable ve dot validate'i çağırabileceğiniz

00:22.030 --> 00:25.493
tek bir nesnede gruplamak isteyebilirsiniz, böylece validate'i

00:25.493 --> 00:29.170
bu şekilde çağırmak zorunda kalmazsınız.

00:29.170 --> 00:30.940
Belki bu şekilde adlandırmak istersiniz,

00:30.940 --> 00:33.510
ancak diyelim ki aynı isimde ve yılda bir fonksiyonunuz

00:33.510 --> 00:35.210
varsa veya buna benzer bir şey varsa ve

00:35.210 --> 00:36.719
bir isim çakışmasını önlemek istiyorsanız

00:36.719 --> 00:38.250
veya bunun bir tür pakete ait olduğunu

00:38.250 --> 00:42.069
açıkça belirtmek istiyorsanız, bunu gruplayabilirsiniz.

00:42.069 --> 00:45.090
İçe aktarılanları gruplamak için onları bu şekilde küme

00:45.090 --> 00:49.150
parantezleriyle içe aktarmazsınız, bunun yerine burada bir yıldız kullanırsınız,

00:49.150 --> 00:51.970
bu da o dosyadaki her şeyi içe aktarmak anlamına gelir,

00:51.970 --> 00:55.080
as ve ardından seçtiğiniz herhangi bir takma ad, örneğin

00:55.080 --> 00:57.192
doğrulama.

00:57.192 --> 00:59.280
Şimdi o dosyadan bir şey kullandığınız

00:59.280 --> 01:01.070
yerlere gitmeli ve onu bir nesne

01:01.070 --> 01:05.470
doğrulaması gibi kullanmalısınız. doğrulanabilir.

01:05.470 --> 01:07.920
Dolayısıyla, şimdi burada bu ad altında gruplandırdığınız

01:07.920 --> 01:10.400
dosyada dışa aktarılan her şeye nokta gösterimi

01:10.400 --> 01:12.341
aracılığıyla erişilir.

01:12.341 --> 01:15.700
Yani doğrulama. tüm yol boyunca validatable ve

01:15.700 --> 01:18.830
sonra da aşağıda validate fonksiyonunun olduğu yerde

01:18.830 --> 01:22.786
tabii ki validation. doğrulama, doğrulama. doğrulama ve

01:22.786 --> 01:25.197
onaylama. Geçerli.

01:25.197 --> 01:29.604
Ve bununla göreceksiniz, iyi doğrulama çalışıyor.

01:29.604 --> 01:32.490
Yani gruplama yapabileceğiniz bir şeydir.

01:32.490 --> 01:34.960
Buradaki takma ad olayı da genel olarak

01:34.960 --> 01:36.890
yapabileceğiniz bir şeydir.

01:36.890 --> 01:38.830
Otomatik bağlamayı bu şekilde sevmiyorsunuz,

01:38.830 --> 01:41.270
başlangıçta büyük bir karakter olmasını mı istiyorsunuz?

01:41.270 --> 01:45.360
Burada as anahtar sözcüğü ile basitçe takma ad atayabilirsiniz.

01:45.360 --> 01:48.150
Küme parantezlerinin içinde de kullanabilirsiniz.

01:48.150 --> 01:50.431
Ardından bu içe aktarımı ve yalnızca bu içe aktarımı yeniden adlandırırsınız.

01:50.431 --> 01:54.350
Elbette orijinal dosyada yeniden adlandırmazsınız.

01:54.350 --> 01:58.390
Buradaki dosyada yalnızca farklı bir adla içe aktarılmıştır.

01:58.390 --> 02:01.280
Şimdi burada küçük harf a ile autobind kullanmak

02:01.280 --> 02:05.780
yerine takma adımızı büyük harf A ile kullanmamız gerekiyor.

02:05.780 --> 02:09.150
Bu da, örneğin aynı dosyada küçük harf a ile autobind adında

02:09.150 --> 02:11.570
başka bir şey varsa, ad çakışmalarını önlemek

02:11.570 --> 02:14.543
için başka bir güzel özellik olabilir.

02:16.180 --> 02:20.010
Varsayılan dışa aktarımlarla da çalışabilirsiniz.

02:20.010 --> 02:22.926
Yalnızca tek bir şeyi dışa aktaran bir dosyanız

02:22.926 --> 02:25.120
varsa, diyelim ki temel bileşen.

02:25.120 --> 02:28.020
Aslında sadece tek bir şeyi dışa aktaran çok sayıda dosyamız var.

02:28.020 --> 02:29.240
Ancak diyelim ki bu dosyada

02:29.240 --> 02:31.360
bu şekilde dışa aktarmak istemiyoruz,

02:31.360 --> 02:33.770
sözde adlandırılmış dışa aktarma, çünkü

02:33.770 --> 02:37.330
burada küme parantezleri içinde adla içe aktardık.

02:37.330 --> 02:40.258
Burada kullandığımız ismi aynen kullanmamız gerekiyor.

02:40.258 --> 02:42.170
Bunu yapmak istemiyorsanız, varsayılan

02:42.170 --> 02:45.140
olarak başka bir anahtar kelime eklemeniz yeterlidir.

02:45.140 --> 02:48.940
Bu da JavaScript'e bunun bu dosyanın ana, yani varsayılan

02:48.940 --> 02:52.064
dışa aktarımı olduğunu söyler.

02:52.064 --> 02:55.929
Burada yine de izin verilecek başka adlandırılmış

02:55.929 --> 02:58.500
ihracatlar olabilir.

02:58.500 --> 03:01.220
Whoops, örneğin burada izin verilecek

03:01.220 --> 03:02.120
bir sabit.

03:02.120 --> 03:04.750
Aynı dosyada adlandırılmış ve varsayılan dışa aktarmaları karışık

03:04.750 --> 03:06.130
olarak kullanabilirsiniz, ancak

03:06.130 --> 03:07.800
varsayılan bir dışa aktarma kullanıyorsanız,

03:07.800 --> 03:11.440
dosya başına yalnızca bir varsayılan dışa aktarma yapabilirsiniz.

03:11.440 --> 03:14.210
Yani burada varsayılan dışa aktarımım var ve şimdi içe aktardığım

03:14.210 --> 03:16.926
dosyalarda, isme göre içe aktarmıyorsunuz.

03:16.926 --> 03:19.900
Adlandırılmış dışa aktarımları yalnızca ada göre içe aktarabilirsiniz.

03:19.900 --> 03:22.639
Örneğin, sabit bir şey eklendi.

03:22.639 --> 03:24.743
Bunun yerine, artık dışa aktarılan dosyada

03:24.743 --> 03:28.600
kullandığınız adla eşleşmesi gerekmeyen, istediğiniz herhangi

03:28.600 --> 03:32.400
bir adı seçerek varsayılanınızı içe aktarabilirsiniz.

03:32.400 --> 03:34.354
Yani artık bileşen kullanmak zorunda değilsiniz.

03:34.354 --> 03:37.037
Örneğin şimdi burada sadece Cmp kullanabilirsiniz.

03:37.037 --> 03:40.700
Ve küme parantezleri olmadan bu şekilde içe aktarın.

03:40.700 --> 03:44.127
Ayrıca yıldız yok, bu yüzden her şeyi içe aktarmıyorum.

03:44.127 --> 03:46.827
Sadece varsayılanı içe aktarıyorum.

03:46.827 --> 03:49.460
Bu nedenle, bu yalnızca içe aktardığınız dosyanın varsayılan

03:49.460 --> 03:52.210
bir dışa aktarımı varsa kullanılabilir.

03:52.210 --> 03:53.850
Çünkü bu JavaScript'e, hey,

03:53.850 --> 03:58.010
bu dosyanın varsayılan dışa aktarımını kullanmak istiyorum der.

03:58.010 --> 04:00.520
O zaman burada bu Cmp'yi adlandırabilirim elbette.

04:00.520 --> 04:02.569
Ya da Cmp kullanmam gerekiyor, tabii ki şimdi.

04:02.569 --> 04:04.509
Bileşene artık izin verilmiyor

04:04.509 --> 04:06.666
çünkü onu bu adla içe aktarmıyorum.

04:06.666 --> 04:09.710
Elbette, şimdi bunu project-item ve project-list içinde de değiştirmemiz

04:09.710 --> 04:10.675
gerekiyor.

04:10.675 --> 04:12.486
Varsayılan dışa aktarımı kullanırız.

04:12.486 --> 04:14.515
Ben burada bileşene bağlı kalacağım, ancak az önce

04:14.515 --> 04:16.540
gösterdiğim gibi buna mecbur değilsiniz.

04:16.540 --> 04:18.300
Burada istediğiniz herhangi bir ismi

04:18.300 --> 04:21.900
kullanabilirsiniz, ancak basitlik için burada bileşen kullanacağım.

04:21.900 --> 04:24.075
Dosya başına yalnızca bir şeyiniz varsa varsayılan

04:24.075 --> 04:25.740
dışa aktarmalar güzel olabilir.

04:25.740 --> 04:29.080
Ben şahsen adlandırılmış dışa aktarmaları tercih ediyorum, çünkü

04:29.080 --> 04:31.075
otomatik tamamlama elde edersiniz, net

04:31.075 --> 04:33.590
bir adlandırma modeli uygularsınız, başka bir

04:33.590 --> 04:37.290
geliştirici sınıfınızı veya dışa aktardığınız şeyi içe aktarırsa,

04:37.290 --> 04:40.460
sizin adınızı kullanmak zorundadır, bu genellikle iyidir

04:40.460 --> 04:41.870
çünkü bu, bir ekip veya kuruluş

04:41.870 --> 04:43.290
genelinde belirli adlandırma

04:43.290 --> 04:46.579
kurallarını uygulamanıza olanak tanır.

04:46.579 --> 04:49.840
Bu nedenle, ben kişisel olarak adlandırılmış dışa aktarımları seviyorum,

04:49.840 --> 04:51.740
ancak elbette bu şekilde kullanabileceğiniz

04:51.740 --> 04:53.340
varsayılan dışa aktarımın da farkında

04:53.340 --> 04:54.853
olmalısınız.
