WEBVTT

00:02.130 --> 00:04.900
Kursleiter: Dieser Kurs ist vollgepackt mit Inhalten.

00:04.900 --> 00:06.940
Wir sind fast fertig mit dem Einstieg

00:06.940 --> 00:09.500
und werden danach direkt in TypeScript und all

00:09.500 --> 00:11.667
seine spannenden Features eintauchen

00:11.667 --> 00:13.850
und sie Schritt für Schritt erlernen.

00:13.850 --> 00:16.210
Wir beginnen natürlich mit den TypeScripts-Grundlagen.

00:16.210 --> 00:18.800
Die Kerntypen, wie es im Allgemeinen funktioniert,

00:18.800 --> 00:20.880
einige der neuen Funktionen und alles,

00:20.880 --> 00:22.930
was Sie wissen müssen, um TypeScript

00:22.930 --> 00:25.320
gut zu verstehen.

00:25.320 --> 00:27.690
Danach werden wir bereits tiefer in den

00:27.690 --> 00:29.590
TypeScript-Compiler und seine

00:29.590 --> 00:32.310
Konfiguration eintauchen, denn es ist super

00:32.310 --> 00:35.480
wichtig für dich zu verstehen, was du dort konfigurieren

00:35.480 --> 00:40.840
kannst und was all diese verschiedenen Einstellungen bewirken.

00:40.840 --> 00:43.900
Danach werden wir uns mit den JavaScript-Funktionen der nächsten Generation beschäftigen,

00:43.900 --> 00:45.850
die von TypeScript unterstützt werden.

00:45.850 --> 00:48.880
Wie sie funktionieren und wie Sie sie in TypeScript verwenden können.

00:48.880 --> 00:51.500
Wir werden mit Klassen und Interfaces fortfahren,

00:51.500 --> 00:55.000
ein superwichtiges Konzept, teilweise auch in Vanilla JavaScript

00:55.000 --> 00:57.350
im Fall von Klassen, aber mit Interfaces haben

00:57.350 --> 00:59.510
wir auch ein brandneues TypeScript-Feature

00:59.510 --> 01:01.600
und Sie werden verstehen, was sie sind,

01:01.600 --> 01:03.550
was sie tun und warum wir sie vielleicht

01:03.550 --> 01:06.210
benutzen wollen.

01:06.210 --> 01:08.190
Danach ist es an der Zeit, tiefer einzutauchen.

01:08.190 --> 01:10.490
Wir werden einen Blick auf einige fortgeschrittene

01:10.490 --> 01:13.280
Typen und fortgeschrittene TypeScript-Funktionen

01:13.280 --> 01:15.040
im Allgemeinen werfen und dabei auf

01:15.040 --> 01:16.640
den Grundlagen aufbauen, die

01:16.640 --> 01:20.110
wir bereits bis zu diesem Punkt gelernt haben.

01:20.110 --> 01:22.630
Ein weiteres fortschrittliches Merkmal, das

01:22.630 --> 01:27.210
definitiv einen eigenen Abschnitt verdient, ist die Funktion der Generika.

01:27.210 --> 01:28.910
In diesem Modul erfahren

01:28.910 --> 01:31.160
Sie, was das ist und warum es sehr,

01:31.160 --> 01:32.650
sehr hilfreich ist.

01:32.650 --> 01:34.570
Gefolgt von Dekorateuren.

01:34.570 --> 01:37.360
Dekoratoren sind ein ziemlich cooles Feature, das

01:37.360 --> 01:40.550
TypeScript hinzugefügt hat, und wir werden einen genaueren

01:40.550 --> 01:43.810
Blick auf Dekoratoren werfen und auch einige wirklich nützliche

01:43.810 --> 01:46.200
Dekoratoren in diesem Modul bauen, und danach

01:46.200 --> 01:50.100
werden wir eine Menge über TypeScript gelernt haben.

01:50.100 --> 01:52.660
Nun ist der Kurs so aufgebaut, dass

01:52.660 --> 01:56.460
ich all diese einzelnen Funktionen in relativ kleinen,

01:56.460 --> 01:59.040
einfachen Demos zeige.

01:59.040 --> 02:01.730
Um Ihnen ein größeres Bild zu vermitteln und um zu sehen,

02:01.730 --> 02:04.640
wie Sie all diese Funktionen in einem echten Projekt anwenden

02:04.640 --> 02:08.140
können, werden wir genau dieses Projekt erstellen.

02:08.140 --> 02:10.400
Wir werden ein ganzes Modul haben, in dem wir

02:10.400 --> 02:14.420
ein komplettes Projekt von Grund auf mit TypeScript erstellen, damit Sie viele

02:14.420 --> 02:17.720
dieser Funktionen, die meisten dieser Funktionen, die Sie bis

02:17.720 --> 02:20.090
zu diesem Punkt kennengelernt haben, in Aktion

02:20.090 --> 02:21.920
sehen, und Sie werden sehen, wie sie

02:21.920 --> 02:23.680
zusammenarbeiten und warum sie den

02:23.680 --> 02:28.160
Prozess der Erstellung eines solchen Projekts vereinfachen.

02:28.160 --> 02:29.940
Wenn wir mit der Erstellung dieses Projekts

02:29.940 --> 02:31.770
fertig sind, werden wir ein neues Problem

02:31.770 --> 02:34.420
erkennen und lernen, wie wir es durch die Arbeit mit Namespaces

02:34.420 --> 02:36.450
und Modulen lösen können, die uns dabei helfen

02:36.450 --> 02:38.100
werden, unseren Code besser zu verwalten

02:38.100 --> 02:40.570
und zu lesen.

02:40.570 --> 02:42.600
Darauf aufbauend werden wir auch Webpack

02:42.600 --> 02:44.350
mit TypeScript erkunden.

02:44.350 --> 02:47.690
Webpack ist ein Build-Tool, das wir in der modernen Frontend-Webentwicklung

02:47.690 --> 02:49.530
verwenden, und Sie können es in Kombination

02:49.530 --> 02:52.970
mit TypeScript verwenden, um ein besseres Projekt-Setup zu erhalten, das bestimmte

02:52.970 --> 02:55.520
Dinge einfach einfacher macht und Ihnen erlaubt, das Beste

02:55.520 --> 02:57.990
aus beiden Welten zu erhalten.

02:57.990 --> 02:59.850
Eine großartige Entwicklungserfahrung

02:59.850 --> 03:02.170
und ein Code, der für Ihre Endbenutzer wirklich

03:02.170 --> 03:04.120
gut funktioniert.

03:04.120 --> 03:06.320
Wenn wir damit fertig sind, haben wir ein sehr

03:06.320 --> 03:08.710
solides Bild von TypeScript und wie man damit

03:08.710 --> 03:10.180
in Projekten arbeitet.

03:10.180 --> 03:13.250
Was man in vielen realen Projekten braucht, sind Bibliotheken

03:13.250 --> 03:15.183
von Drittanbietern. Wir werden uns

03:15.183 --> 03:16.820
das genauer ansehen, denn es gibt

03:16.820 --> 03:20.250
bestimmte Bibliotheken von Drittanbietern, die TypeScript wirklich

03:20.250 --> 03:22.280
angenommen haben und TypeScript-Unterstützung

03:22.280 --> 03:26.600
eingebaut haben, aber es gibt auch viele Bibliotheken, die das nicht tun, und wir

03:26.600 --> 03:29.030
werden uns ansehen, wie man mit beiden Arten von

03:29.030 --> 03:34.520
Bibliotheken in TypeScript-Projekten gut arbeiten kann.

03:34.520 --> 03:36.630
Nun, und dann gibt es noch einige spezifische

03:36.630 --> 03:39.620
Szenarien, die eigene Module verdienen.

03:39.620 --> 03:41.570
Wir werden ein ganzes Modul über

03:41.570 --> 03:44.320
React mit TypeScript haben, wie man eine ganze

03:44.320 --> 03:47.540
React-Anwendung nur mit TypeScript erstellen kann,

03:47.540 --> 03:49.452
und auch ein ganzes Modul über NodeJS

03:49.452 --> 03:53.260
und Express-End-TypeScript, so dass Sie auch großartige Beispiele

03:53.260 --> 03:55.390
für diese sehr beliebten und spezifischen

03:55.390 --> 03:58.910
Anwendungsfälle von TypeScript haben, in denen Sie plötzlich

03:58.910 --> 04:01.270
React- oder Node-Anwendungen auf eine

04:01.270 --> 04:03.630
ganz neue Weise mit einer ganz neuen Sprache

04:03.630 --> 04:06.760
erstellen können.

04:06.760 --> 04:09.260
Der Kurs enthält also eine Menge spannender Inhalte.

04:09.260 --> 04:10.970
Lassen Sie uns keine Zeit verlieren.

04:10.970 --> 04:12.720
Lassen Sie uns sehen, wie Sie das meiste aus dem

04:12.720 --> 04:15.263
Kurs herausholen können, und dann lassen Sie uns eintauchen.
