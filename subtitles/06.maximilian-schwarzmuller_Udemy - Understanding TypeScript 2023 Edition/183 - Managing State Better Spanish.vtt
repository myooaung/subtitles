WEBVTT

00:02.190 --> 00:04.310
Conferenciante: Entonces, ¿cómo deberíamos actualizar el estado en su lugar?

00:04.310 --> 00:06.970
Bueno, podemos usar nuestro operador de propagación aquí,

00:06.970 --> 00:09.680
y propagar todos nuestros TODOs existentes en esta matriz

00:09.680 --> 00:13.520
y luego simplemente añadir el nuevo TODO como un nuevo elemento al final.

00:13.520 --> 00:16.300
Esto funciona, pero no es la forma más limpia de actualizar esto.

00:16.300 --> 00:18.780
Lo más probable es que funcione en todos los escenarios

00:18.780 --> 00:20.090
que tenemos en esta aplicación,

00:20.090 --> 00:23.170
pero teóricamente reacciona a las actualizaciones de estado

00:23.170 --> 00:26.050
y, por lo tanto, lo que está en nuestro valor TODO aquí, podría

00:26.050 --> 00:28.490
no ser necesariamente el último estado cuando se

00:28.490 --> 00:30.710
realiza esta actualización.

00:30.710 --> 00:33.360
Sin embargo, para garantizar esto podemos pasar una función a esta

00:33.360 --> 00:35.340
función de actualización de estado aquí.

00:35.340 --> 00:37.500
Una función que obtiene nuestros TODOs anteriores

00:37.500 --> 00:39.680
y que al hacerlo devuelve el nuevo estado.

00:39.680 --> 00:41.460
Todo ello con el apoyo de react.

00:41.460 --> 00:44.370
Esta función también será llamada por react para nosotros

00:44.370 --> 00:48.340
y luego podemos confiar en prevTodos dentro de esta función para ser realmente

00:48.340 --> 00:51.363
la última instantánea del estado.

00:52.220 --> 00:55.480
Ahora con eso, actualizamos nuestros TODOs con los viejos

00:55.480 --> 00:57.080
TODOs y el nuevo y ahora tenemos

00:57.080 --> 00:59.100
una función aquí donde deberíamos

00:59.100 --> 01:01.860
ser capaces de añadir nuevos TODOs.

01:01.860 --> 01:03.800
Así que si ahora guardamos

01:03.800 --> 01:05.470
todo eso y volvemos a la

01:05.470 --> 01:10.260
aplicación y entramos a terminar el curso aquí, esto funciona.

01:10.260 --> 01:14.400
Y si entro a terminarlo en un mes aquí, esto también

01:14.400 --> 01:15.650
se agrega.

01:15.650 --> 01:17.330
Así que ahora todo esto funciona.

01:17.330 --> 01:18.960
La funcionalidad que falta ahora

01:18.960 --> 01:21.180
es que también podamos borrarlos.

01:21.180 --> 01:22.790
Haremos esto en la próxima clase,

01:22.790 --> 01:24.310
pero lo más importante es que ahora

01:24.310 --> 01:26.470
también has aprendido a gestionar el estado

01:26.470 --> 01:28.260
con react y typescript, que además

01:28.260 --> 01:29.930
de los props, por supuesto, es otro

01:29.930 --> 01:31.693
concepto central.
