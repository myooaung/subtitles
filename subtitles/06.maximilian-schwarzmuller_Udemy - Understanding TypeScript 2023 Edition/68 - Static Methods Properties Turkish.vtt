WEBVTT

00:02.251 --> 00:03.380
Eğitmen: Özellikler

00:03.380 --> 00:05.350
ve yöntemlerle ilgili bir başka güzel

00:05.350 --> 00:08.000
özellik de ES6 ya da daha sonraki sürümleri kullandığınızda

00:08.000 --> 00:10.010
JavaScript'te de var olan özelliklerdir,

00:10.010 --> 00:11.180
ancak tüm dizgiler statik

00:11.180 --> 00:14.010
özellikler ve yöntemlerdir.

00:14.010 --> 00:17.520
Statik özellikler ve yöntemler, sınıflara, sınıfın bir

00:17.520 --> 00:20.620
örneğinden erişilmeyen, dolayısıyla önce yeni sınıf

00:20.620 --> 00:22.530
adını çağırmanız gerekmeyen,

00:22.530 --> 00:26.080
ancak doğrudan sınıftan erişebileceğiniz özellikler ve

00:26.080 --> 00:28.950
yöntemler eklemenize olanak tanır.

00:28.950 --> 00:31.350
Bu genellikle mantıksal olarak bir sınıfa

00:31.350 --> 00:35.922
gruplamak veya eşlemek istediğiniz yardımcı fonksiyonlar veya bir

00:35.922 --> 00:40.860
sınıfta saklamak istediğiniz global sabitler için kullanılır.

00:40.860 --> 00:43.270
JavaScript'te yerleşik olarak bulunan,

00:43.270 --> 00:46.050
typescript tarafından tanımlanmayan ve sizin

00:46.050 --> 00:48.290
tarafınızdan tanımlanmayan, ancak

00:48.290 --> 00:51.170
tarayıcıdaki JavaScript'in bir parçası olan

00:51.170 --> 00:53.220
bir örnek, Math kurucu işlevi veya

00:53.220 --> 00:55.500
böyle adlandırmak isterseniz sınıfıdır,

00:55.500 --> 00:59.210
JavaScript'te genel olarak mevcuttur, pi sayısını size vermek

00:59.210 --> 01:01.400
için pi'ye sabit bir değer olarak erişebilirsiniz

01:01.400 --> 01:05.050
veya bir şeyin gücünü hesaplamak için pow gibi işlevler veya

01:05.050 --> 01:08.610
yöntemler.

01:08.610 --> 01:10.530
Bunlar, Math örneğinde erişemediğiniz

01:10.530 --> 01:13.370
yöntemler ve özelliklerdir.

01:13.370 --> 01:16.310
Önce yeni matematiği aramak zorunda değilsiniz.

01:16.310 --> 01:19.830
Aslında bu işe yaramayacaktır, ancak bu özelliklere doğrudan sınıfın

01:19.830 --> 01:22.360
kendisindeki yöntemlerle erişebilirsiniz.

01:22.360 --> 01:25.340
Yani Math burada bir gruplama mekanizması olarak daha çok

01:25.340 --> 01:27.370
bir isim alanı gibi davranır ve bu statik

01:27.370 --> 01:28.640
yöntemler ve özellikler

01:28.640 --> 01:30.480
için yaygın bir kullanım durumudur

01:30.480 --> 01:33.650
ve bunları kendi sınıflarınıza da ekleyebilirsiniz.

01:33.650 --> 01:36.770
Diyelim ki Department üzerinde çalışan oluşturmamıza

01:36.770 --> 01:40.050
yardımcı olacak bir metoda sahip olmak istiyoruz ve bu,

01:40.050 --> 01:43.450
Department'ı örneklemeden erişmek isteyebileceğimiz

01:43.450 --> 01:45.390
bir şey, çünkü genellikle daha özel

01:45.390 --> 01:46.890
versiyonlarımızı, IT departmanımızı

01:46.890 --> 01:51.290
ve muhasebe departmanımızı örnekliyoruz ve sadece bir yardımcı metodu

01:51.290 --> 01:54.710
çağırmak için Department'ı örneklemek istemiyoruz ve bu

01:54.710 --> 01:58.490
nedenle buraya bir metot ekleyebiliriz, diyelim ki bir argüman

01:58.490 --> 02:03.490
olarak bir dize olan adı almak istediğimiz ve orada bir şey döndürmek istediğimiz

02:03.680 --> 02:07.621
Employee'yi oluşturabiliriz.

02:07.621 --> 02:10.230
Şimdi bunu, bu sınıfı örneklemeden erişebileceğimiz

02:10.230 --> 02:12.920
statik bir yöntem haline getirmek için, bu

02:12.920 --> 02:16.250
yöntemin önüne static anahtar sözcüğünü ekliyoruz

02:16.250 --> 02:18.549
ve sonra burada belki de name özelliğini

02:18.549 --> 02:23.549
bu name değeriyle eşlediğimiz bir nesne döndürüyoruz.

02:25.170 --> 02:27.010
Elbette bu çok basit bir yöntem,

02:27.010 --> 02:28.690
ama siz anladınız.

02:28.690 --> 02:31.960
Şimdi bunu kullanmak için kodumuzu çalıştırdığımız

02:31.960 --> 02:33.490
yere gidebiliriz ve şimdi

02:33.490 --> 02:36.940
diyelim ki yeni bir çalışan istiyoruz, çalışan1.

02:39.300 --> 02:41.020
O zaman bunu departmanla

02:41.020 --> 02:46.020
halledebiliriz. createEmployee ve örneğin Max'i geçirirsem

02:46.920 --> 02:50.680
ve sonra console. log(employee1) Max adında

02:50.680 --> 02:53.170
bir nesne görmeliyiz.

02:53.170 --> 02:55.630
Bunu kaydedersem, gerçekten de burada

02:55.630 --> 02:58.240
az önce oluşturduğumuz çalışan var.

02:58.240 --> 03:01.200
Dolayısıyla bu, statik bir yöntem için tipik bir örnek olacaktır.

03:01.200 --> 03:04.870
Bunu new anahtar sözcüğü olmadan doğrudan sınıf üzerinde çağırırız

03:04.870 --> 03:06.360
ve bu nedenle sınıfı bir gruplama

03:06.360 --> 03:09.030
mekanizması olarak kullanırız ve eğer statik

03:09.030 --> 03:13.470
bir özellik eklemek isterseniz bunu da yapabilirsiniz.

03:13.470 --> 03:17.950
Burada şirketinizde şu anda kullanmak istediğiniz mali yıl gibi bir

03:19.730 --> 03:22.040
şey varsa, bunu diyelim ki 2020 olarak

03:22.040 --> 03:24.980
ayarlayabilir ve ardından bunu örneklemeden

03:24.980 --> 03:27.310
kullanılabilir hale getirmek için

03:27.310 --> 03:28.560
bu özelliğin önüne

03:28.560 --> 03:30.810
veya bu alanın önüne statik ekleyebilir

03:30.810 --> 03:33.950
ve şimdi buna erişebilirsiniz.

03:33.950 --> 03:36.560
Şimdi konsolun aşağısında. Log. (benim yarattığım çalışan).

03:38.050 --> 03:42.420
Buradan Departmana da erişebiliriz. maliye. Year'ı örneklemeden aynen

03:43.900 --> 03:46.190
bu şekilde kaydedersek, şaşırtıcı olmayan

03:46.190 --> 03:47.150
bir şekilde 2020'nin

03:47.150 --> 03:51.130
burada günlüğe kaydedildiğini göreceğiz.

03:51.130 --> 03:53.347
Yani bunlar statik yöntemler ve özelliklerdir.

03:53.347 --> 03:55.250
Onlar hakkında önemli bir söz ya da aklınızda

03:55.250 --> 03:56.947
tutmanız gereken bir şey.

03:56.947 --> 03:59.067
Bunları bir sınıfa eklediğinizde,

03:59.067 --> 04:03.370
statik olmayan parçalarınızın içinden bunlara erişemezsiniz.

04:03.370 --> 04:04.870
Dolayısıyla, burada kurucuda fiscalYear'a

04:04.870 --> 04:10.375
erişmek istiyorsanız ve konsola erişmek istiyorsanız.

04:10.375 --> 04:10.375
buraya

04:10.375 --> 04:13.490
kaydedin, gördüğünüz gibi bu işe yaramayacaktır.

04:13.490 --> 04:15.600
Burada fiscalYear özelliğinin statik

04:15.600 --> 04:18.690
bir üye olduğuna dair bir hata alıyorum.

04:18.690 --> 04:20.976
Burada buna erişemeyiz çünkü kurucu

04:20.976 --> 04:24.290
ve temel olarak oradaki herhangi bir şey, statik ile

04:24.290 --> 04:26.530
işaretlenmemiş tüm yöntemler ve bu

04:26.530 --> 04:29.427
arada kurucuyu statik olarak işaretleyemezsiniz,

04:29.427 --> 04:32.430
statik özelliklere erişemezsiniz, çünkü bu,

04:32.430 --> 04:34.770
sınıfa dayalı olarak oluşturulan örneğe

04:34.770 --> 04:37.660
atıfta bulunurken, statik özellik örnekte

04:37.660 --> 04:41.450
kullanılamaz çünkü statik özelliklerin ve statik yöntemlerin

04:41.450 --> 04:44.150
arkasındaki tüm fikir, örneklerden ayrılmış

04:44.150 --> 04:47.780
olmalarıdır.

04:47.780 --> 04:50.930
Bu yüzden elbette bunlara this anahtar sözcüğü ile erişemezsiniz.

04:50.930 --> 04:53.940
Statik özelliği veya yöntemi sınıfın içinden

04:53.940 --> 04:56.080
kullanmak isterseniz, ona erişmek

04:56.080 --> 04:59.380
için burada sınıf adını kullanmanız gerekir.

04:59.380 --> 05:01.337
Bu, sınıfın içinden statik özelliklere

05:01.337 --> 05:04.290
ve yöntemlere erişmenizi sağlar.

05:04.290 --> 05:06.593
Akılda tutulması gereken önemli bir husus da budur.
