WEBVTT

00:02.510 --> 00:04.490
Eğitmen: Temel sınıfımızla şimdi dist klasörüne

00:04.490 --> 00:07.570
gidersek ve uygulamayı incelersek. js dosyasında, JavaScript'te

00:07.570 --> 00:10.110
neyin üretildiğini görüyoruz ve orada temelde

00:10.110 --> 00:13.560
aynı koda sahip olduğumuzu görüyorsunuz.

00:13.560 --> 00:17.870
İki önemli fark, burada sahip olduğumuz isim alanının

00:17.870 --> 00:22.230
sınıfta bu şekilde mevcut olmamasıdır.

00:22.230 --> 00:25.460
Bu aslında modern JavaScript'te desteklenir ancak

00:25.460 --> 00:27.910
bu, oluşturduğunuz JavaScript sürümüne

00:27.910 --> 00:29.130
bağlıdır.

00:29.130 --> 00:33.450
Yani ES6'da tek başına, aslında desteklenmiyor.

00:33.450 --> 00:35.430
Ve tabii ki harika olan şey,

00:35.430 --> 00:37.360
tip atamasını görmektir.

00:37.360 --> 00:39.760
Yine de yapısal mantığımız var

00:39.760 --> 00:43.870
ve aslında bu alan sözdiziminin de destekleneceği JavaScript'in

00:43.870 --> 00:48.150
en son sürümünü kullanmadığınızda Vanilla JavaScript'te

00:48.150 --> 00:51.570
oluşturulacak nesnelere özellikleri bu şekilde

00:51.570 --> 00:54.470
eklersiniz.

00:54.470 --> 00:56.480
Yani JavaScript'te sahip olduğum şey bu.

00:56.480 --> 00:58.710
Ancak şimdi tsconfig'e gidersek

00:58.710 --> 01:02.080
durum ilginçleşir. json dosyası ve hedefi ES5'ten

01:02.080 --> 01:05.970
ES6'ya değiştiriyoruz ve burada lib'i yorumluyoruz.

01:05.970 --> 01:08.190
Böylece doğru ve önerilen kütüphaneler TypeScript

01:08.190 --> 01:10.870
tarafından otomatik olarak eklenir.

01:10.870 --> 01:14.090
Şimdi bu yapılandırma dosyasını kaydederseniz ve uygulamaya geri dönerseniz. js tamamen farklı

01:14.090 --> 01:16.350
bir şey görüyorsunuz.

01:16.350 --> 01:18.810
Ve burada gördüğümüz şey oldukça ilginç.

01:18.810 --> 01:20.960
Burada ne varmış?

01:20.960 --> 01:23.290
Sonuç olarak elimizde kurucu

01:23.290 --> 01:26.453
fonksiyon denilen bir şey var.

01:27.299 --> 01:31.600
Kurucu işlev, JavaScript'te yerleşik olarak bulunan

01:31.600 --> 01:33.770
ve temelde her zaman orada olduğunu

01:33.770 --> 01:35.520
söyleyebileceğiniz

01:35.520 --> 01:40.230
bir şeydir ve bu, Vanilla'nın modern olmayan JavaScript'in

01:40.230 --> 01:44.480
nesne planları oluşturma yoludur.

01:44.480 --> 01:47.100
Bu, new anahtar sözcüğü yardımıyla çağrılan

01:47.100 --> 01:50.890
bir işlevdir ve sonra birdenbire, sihirli bir şekilde, bu işlev

01:50.890 --> 01:53.640
içinde geri dönüş ifadesi olmamasına rağmen,

01:53.640 --> 01:55.850
burada çağırdığımızda gördüğünüz gibi

01:55.850 --> 01:57.540
bir şey döndürür.

01:57.540 --> 01:59.730
Bir nesne döndürür.

01:59.730 --> 02:03.110
Bir name özelliğine sahip olacak yeni bir nesne.

02:03.110 --> 02:04.940
Yani bu kavram yeni değil, modern

02:04.940 --> 02:08.680
JavaScript veya TypeScript tarafından ortaya atılmadı.

02:08.680 --> 02:12.500
Nesneler için planlara sahip olma fikri JavaScript'te

02:12.500 --> 02:15.180
çok uzun zamandır var.

02:15.180 --> 02:19.070
Ancak geçmişte, yapıcı fonksiyonları kullanmak zorundaydık

02:19.070 --> 02:21.870
ve bu özellikle farklı programlama dilleriyle

02:21.870 --> 02:24.520
çalışmış olan geliştiriciler için biraz sezgisel

02:24.520 --> 02:26.600
olmayabiliyordu.

02:26.600 --> 02:30.510
Modern JavaScript, bu daha temiz sözdizimine sahip sınıflar

02:30.510 --> 02:34.950
fikrini ortaya atmıştır ve TypeScript de bunu desteklemektedir.

02:34.950 --> 02:38.180
Ve TypeScript'in güçlü derlemesi sayesinde, onu

02:38.180 --> 02:40.830
nereye derlemek istediğinizi seçebilirsiniz,

02:40.830 --> 02:44.130
elbette daha fazla tarayıcıda çalışan eski stile veya

02:44.130 --> 02:48.280
daha önce gördüğümüz bu daha modern ES6 stiline.

02:48.280 --> 02:51.700
Ki buradakine çok benziyor.

02:51.700 --> 02:54.500
Buradan çıkarılacak en önemli sonuç, JavaScript'te yerleşik

02:54.500 --> 02:57.300
olarak bulunan ve TypeScript tarafından desteklenen bu özelliğe

02:57.300 --> 03:00.163
sahip olmamız ve nesne planlarını tanımlayabilmemizdir.
