WEBVTT

00:02.160 --> 00:03.330
Penyaji: Sekarang kelas-kelas

00:03.330 --> 00:06.080
dan semua fungsi konstruktor yang telah ada lebih

00:06.080 --> 00:09.280
lama tidak hanya memiliki properti yang bisa Anda gunakan

00:09.280 --> 00:12.780
untuk mendefinisikan struktur umum objek.

00:12.780 --> 00:14.770
Anda juga bisa menambahkan metode.

00:14.770 --> 00:17.460
Kita sebenarnya memiliki metode konstruktor di sana.

00:17.460 --> 00:19.620
Tetapi itu hanya fungsi utilitas, yang

00:19.620 --> 00:22.940
dipanggil, ketika Anda melakukan instantiasi kelas.

00:22.940 --> 00:25.584
Ingat, di masa lalu, kita hanya memiliki fungsi-fungsi konstruktor,

00:25.584 --> 00:28.100
sekarang kita memiliki syntactic sugar tetapi kita masih

00:28.100 --> 00:30.460
memiliki fungsi konstruktor yang dapat kita tambahkan

00:30.460 --> 00:33.300
untuk menjalankan kode inisialisasi apa pun.

00:33.300 --> 00:36.350
Anda mungkin juga ingin menambahkan beberapa fungsi atau

00:36.350 --> 00:38.600
metode yang kemudian mereka panggil yang dapat

00:38.600 --> 00:40.980
Anda panggil pada objek yang dibuat.

00:40.980 --> 00:44.000
Sebagai contoh, sebuah metode deskripsi di sini

00:44.000 --> 00:46.000
pada kelas departemen kita.

00:46.000 --> 00:47.994
Sekarang metode ditambahkan seperti

00:47.994 --> 00:49.382
ini, nama metode, kemudian

00:49.382 --> 00:53.270
tidak ada titik dua, tidak ada tanda sama dengan, tanda kurung

00:53.270 --> 00:56.090
dan kemudian kurung kurawal.

00:56.090 --> 00:59.070
Tanda kurung mengambil argumen apa pun yang mungkin Anda perlukan.

00:59.070 --> 01:00.780
Sekarang katakanlah di sini, kita tidak memerlukannya,

01:00.780 --> 01:03.330
jika tidak, Anda bisa menambahkan parameter seperti yang Anda

01:03.330 --> 01:05.150
lakukan dalam fungsi biasa.

01:05.150 --> 01:07.280
Dan apa yang biasanya selalu Anda perlukan

01:07.280 --> 01:10.000
adalah badan fungsi atau badan metode di antara

01:10.000 --> 01:12.020
tanda kurung kurawal.

01:12.020 --> 01:14.693
Di sini Anda sekarang mendefinisikan logika metode Anda.

01:15.580 --> 01:19.570
Dan di sana kita mungkin ingin menampilkan nama departemen dengan

01:19.570 --> 01:22.410
sedikit informasi tambahan mungkin.

01:22.410 --> 01:26.230
Kita bisa melakukan ini tentu saja di sini dengan konsol. log, misalnya, departemen,

01:26.230 --> 01:30.620
titik dua dan kemudian mungkin nama.

01:30.620 --> 01:32.100
Namun demikian, ini tidak akan berhasil.

01:32.100 --> 01:34.570
Ini akan mencari nama variabel, yang

01:34.570 --> 01:37.710
harus ada di dalam metode yang dijelaskan ini,

01:37.710 --> 01:40.860
atau di luar kelas sebagai variabel global.

01:40.860 --> 01:42.470
Dan seperti yang Anda lihat jika memilih

01:42.470 --> 01:44.433
age, saya mendapatkan error untuk nama saya

01:44.433 --> 01:46.540
tidak melakukan ini, saya tidak mendapatkan ini

01:46.540 --> 01:50.100
karena sebenarnya ada variabel nama global di browser di objek jendela.

01:50.100 --> 01:53.030
Meskipun demikian, ini tidak akan merujuk ke properti

01:53.030 --> 01:57.130
nama di sini, tetapi ke beberapa variabel nama global di luar kelas ini.

01:57.130 --> 01:59.599
Untuk merujuk ke properti atau metode kelas dari

01:59.599 --> 02:01.930
dalam kelas, kita harus menggunakan kata kunci

02:01.930 --> 02:03.590
this seperti yang kita lakukan

02:03.590 --> 02:05.630
di sini di dalam konstruktor.

02:05.630 --> 02:08.980
Ini kemudian biasanya merujuk kembali ke instance

02:08.980 --> 02:12.400
konkret dari kelas ini yang telah dibuat.

02:12.400 --> 02:14.240
Dan di sana dengan notasi titik, kita

02:14.240 --> 02:16.600
dapat mengakses semua properti dan metode dari

02:16.600 --> 02:17.650
instance ini.

02:17.650 --> 02:19.555
Dalam hal ini, ini. nama.

02:19.555 --> 02:24.555
Jadi, jika saya sekarang, di sana, hubungi bagian akuntansi. menggambarkan seperti ini.

02:24.583 --> 02:28.110
Kata kunci ini, ketika ini dieksekusi akan merujuk

02:28.110 --> 02:30.920
ke objek akuntansi konkret yang dibangun

02:30.920 --> 02:33.730
berdasarkan kelas ini.

02:33.730 --> 02:35.530
Jadi, jika sekarang saya menyimpan itu,

02:35.530 --> 02:38.570
dan kita memuat ulang, kita akan melihat output ini di sini, yang

02:38.570 --> 02:40.420
tentu saja memiliki kesalahan ketik, tetapi

02:40.420 --> 02:42.110
secara umum berfungsi.

02:42.110 --> 02:43.944
Sekarang mari kita perbaiki kesalahan ketik di sini.

02:43.944 --> 02:46.190
Jadi, beginilah cara kita menambahkan metode.

02:46.190 --> 02:48.166
Sekarang kata penting apa tentang kata kunci ini.

02:48.166 --> 02:50.600
Seperti yang mungkin Anda ketahui, jika Anda

02:50.600 --> 02:54.890
telah bekerja dengan JavaScript sedikit, kata kunci ini bisa jadi rumit.

02:54.890 --> 02:56.090
Misalnya, jika saya

02:56.090 --> 03:00.090
akan menambahkan objek lain di sini accounting copy dan

03:01.480 --> 03:03.350
ini adalah objek kita yang

03:03.350 --> 03:06.430
hanya memiliki metode describe dan berani

03:06.430 --> 03:11.270
saya tunjuk ke accounting. jelaskan.

03:11.270 --> 03:15.470
Kemudian jika saya memanggil accountingcopy. menggambarkan sebagai metode, menurut

03:15.470 --> 03:17.150
Anda apa yang akan terjadi?

03:17.150 --> 03:19.200
Apakah menurut Anda kita akan mendapatkan error?

03:19.200 --> 03:21.200
Kita tentu saja tidak mendapatkan kesalahan kompilasi

03:21.200 --> 03:22.927
yang mengkompilasi dengan baik.

03:22.927 --> 03:26.360
Tetapi pada saat runtime, kita melihat departemen tidak terdefinisi.

03:26.360 --> 03:28.780
Dan alasan untuk itu adalah bahwa apa yang saya

03:28.780 --> 03:32.010
lakukan adalah menambahkan properti deskripsi ke objek ini

03:32.010 --> 03:34.040
yang dibuat dengan objek literal, bukan

03:34.040 --> 03:37.888
berdasarkan kelas ini, tetapi hanya sebagai objek dummy yang tidak berdasarkan

03:37.888 --> 03:41.420
kelas tertentu yang Anda definisikan.

03:41.420 --> 03:44.360
Dan kemudian nilai untuk properti describe

03:44.360 --> 03:49.000
ini adalah pointer pada metode describe di objek akuntansi saya.

03:49.000 --> 03:52.168
Jadi saya menunjuk ke metode ini di sini untuk

03:52.168 --> 03:54.690
menemukan objek konkret ini.

03:54.690 --> 03:56.240
Saya tidak melaksanakannya.

03:56.240 --> 03:57.723
Jadi saya tidak melewatkan

03:57.723 --> 04:00.410
nilai eksekusi fungsi ini untuk dijelaskan.

04:00.410 --> 04:04.090
Saya benar-benar melewati fungsi itu sendiri untuk dijelaskan di sini.

04:04.090 --> 04:06.430
Jadi, ketika saya kemudian memanggil describe di

04:06.430 --> 04:08.950
sini pada salinan, itu memang mengeksekusi metode ini

04:08.950 --> 04:10.440
semua bekerja dengan benar.

04:10.440 --> 04:13.690
Masalahnya hanya, ketika metode ini dieksekusi,

04:13.690 --> 04:17.040
ini tidak akan merujuk ke objek ini, metode ini adalah

04:17.040 --> 04:19.170
bagian dari awalnya, jadi bukan

04:19.170 --> 04:21.140
ke objek akuntansi.

04:21.140 --> 04:22.350
Sebaliknya, ini, dan ini

04:22.350 --> 04:25.050
adalah aturan praktis yang baik yang bisa Anda hafalkan,

04:25.050 --> 04:27.900
biasanya mengacu pada hal yang bertanggung jawab untuk

04:27.900 --> 04:29.650
memanggil metode.

04:29.650 --> 04:32.190
Dan yang bertanggung jawab untuk memanggil metode deskripsikan

04:32.190 --> 04:34.880
di sini dalam hal ini, adalah salinan akuntansi.

04:34.880 --> 04:39.160
Karena kami menyebutnya menjelaskan tentang salinan akuntansi.

04:39.160 --> 04:42.320
Jadi ini akan merujuk ke hal di depan titik di sini,

04:42.320 --> 04:43.980
yaitu accounting Copy.

04:43.980 --> 04:47.530
Namun demikian, itu adalah objek yang tidak memiliki properti nama.

04:47.530 --> 04:49.678
Jadi, ketika saya mengakses ini. nama, saya mendapatkan

04:49.678 --> 04:53.968
error karena ini tidak merujuk ke objek dengan

04:53.968 --> 04:56.610
properti nama.

04:56.610 --> 04:59.220
Jadi, nama memang menghasilkan kita yang tidak terdefinisi.

04:59.220 --> 05:02.260
Dan itulah mengapa saya mendapatkan output yang aneh ini.

05:02.260 --> 05:04.310
Itu satu hal yang harus Anda ingat, tidak

05:04.310 --> 05:07.470
hanya di TypeScript, itu adalah hal JavaScript.

05:07.470 --> 05:09.540
Dan tentu saja, oleh karena itu, hal itu dapat

05:09.540 --> 05:11.500
terjadi pada Anda di TypeScript juga.

05:11.500 --> 05:13.940
Sekarang, untuk mengatasi masalah

05:13.940 --> 05:16.660
"this" ini, Anda bisa menambahkan parameter

05:16.660 --> 05:18.150
ke metode describe, yang

05:18.150 --> 05:19.730
disebut this.

05:19.730 --> 05:21.380
Itu adalah parameter khusus,

05:21.380 --> 05:25.334
instruksi khusus yang dipahami oleh TypeScript.

05:25.334 --> 05:28.430
Jika Anda menambahkan parameter bernama this di sini,

05:28.430 --> 05:31.420
ini bukan benar-benar parameter yang diharapkan,

05:31.420 --> 05:36.010
Anda masih dapat memanggil describe tanpa melewatkan nilai apa pun.

05:36.010 --> 05:38.476
Sebaliknya, ini ditafsirkan oleh TypeScript,

05:38.476 --> 05:42.980
untuk menjadi petunjuk mengenai apa yang harus dirujuk.

05:42.980 --> 05:45.960
Dan sekarang, penting untuk menetapkan jenis untuk ini.

05:45.960 --> 05:48.810
Dan tipe di sini, dalam hal ini harusnya

05:48.810 --> 05:51.780
tipe kelas kita di sini jadi departemen.

05:51.780 --> 05:53.840
Apa yang saya katakan dengan ini

05:53.840 --> 05:56.250
adalah, ketika describe dieksekusi

05:56.250 --> 05:59.375
di dalam describe, jadi dalam kasus ini di sini,

05:59.375 --> 06:02.550
harus selalu merujuk ke instance yang didasarkan

06:02.550 --> 06:05.040
pada kelas departemen.

06:05.040 --> 06:09.160
Jadi sebuah objek yang pada akhirnya akan bertipe departemen.

06:09.160 --> 06:12.370
Dan oleh karena itu sekarang kita benar-benar mendapatkan

06:12.370 --> 06:14.140
kesalahan di sana, kita mendapatkan

06:14.140 --> 06:16.012
kesalahan di sini, karena apa yang kita

06:16.012 --> 06:19.800
dapatkan di sini adalah ketika kita memanggil describe di sini pada salinan

06:19.800 --> 06:24.100
akuntansi, kita tidak memanggilnya pada instance departemen.

06:24.100 --> 06:26.350
Jadi, oleh karena itu, hal ini akan dilanggar.

06:26.350 --> 06:29.540
Ini dalam kasus ini, tidak akan merujuk

06:29.540 --> 06:32.250
ke objek bertipe departemen.

06:32.250 --> 06:34.690
Jadi di sini kita menambahkan beberapa keamanan tipe

06:34.690 --> 06:36.920
ekstra dengan menambahkan parameter dummy ini,

06:36.920 --> 06:39.450
karena sekarang jika saya mencoba untuk menyimpan ini,

06:39.450 --> 06:42.480
saya mendapatkan error yang terkait dengan baris ini di sini.

06:42.480 --> 06:44.950
Karena sekarang Memang, kita akan mengeksekusi beberapa kode

06:44.950 --> 06:47.030
yang tidak akan berfungsi seperti yang diharapkan.

06:47.030 --> 06:49.260
Jadi kita harus memperbaikinya, misalnya,

06:49.260 --> 06:51.140
dengan menambahkan properti

06:52.040 --> 06:55.290
nama di sini agar berfungsi karena sekarang TypeScript

06:55.290 --> 06:57.702
melihat Oke, objek yang Anda panggil describe,

06:57.702 --> 07:05.803
sekarang memiliki properti nama seperti yang diharapkan karena ini didasarkan pada objek departemen, yang juga memiliki properti

07:05.803 --> 07:08.070
nama.

07:08.070 --> 07:10.790
Jadi sekarang di sini, TypeScript akan senang karena

07:10.790 --> 07:12.270
kita menambahkan nama.

07:12.270 --> 07:14.934
Jika saya menghapusnya, kita mendapatkan kesalahan kembali

07:14.934 --> 07:17.277
dengan nama namun ini berfungsi, dan kita menghindari

07:17.277 --> 07:19.750
keluaran yang tidak terdefinisi ini dari sebelumnya.

07:19.750 --> 07:22.770
Jadi, itu penting untuk dipahami tentang hal ini.

07:22.770 --> 07:26.140
Dan penting untuk menyadari peningkatan ini yang dapat Anda tambahkan

07:26.140 --> 07:28.410
ke kode Anda untuk memastikan bahwa Anda menangkap

07:28.410 --> 07:31.190
perilaku yang tidak diinginkan seperti yang kita miliki

07:31.190 --> 07:32.993
di sana sebelumnya.
