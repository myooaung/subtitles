WEBVTT

00:02.190 --> 00:05.900
Istruttore: Dopo aver eliminato tutto il lavoro sull'ereditarietà,

00:05.900 --> 00:08.400
torniamo al rendering degli elementi dell'elenco,

00:08.400 --> 00:10.590
con maggiori dettagli.

00:10.590 --> 00:12.800
E come ho detto, assicuriamoci anche

00:12.800 --> 00:14.900
di renderli in modo diverso.

00:14.900 --> 00:18.050
Finora abbiamo seguito un approccio orientato agli oggetti

00:18.050 --> 00:22.440
e, per esempio, per il nostro elenco di progetti abbiamo una classe e, quando

00:22.440 --> 00:25.130
istanziamo questa classe, viene visualizzato

00:25.130 --> 00:26.560
un riquadro.

00:26.560 --> 00:30.000
Lo stesso vale per l'input: abbiamo una classe di input per il

00:30.000 --> 00:33.460
progetto e quando la istanziamo, l'area di input del progetto

00:33.460 --> 00:34.880
qui in alto viene resa.

00:34.880 --> 00:38.330
Ora, perché non facciamo lo stesso per il nostro elemento di progetto

00:38.330 --> 00:42.290
e poi all'interno dell'elenco di progetti nei progetti renderizzati,

00:42.290 --> 00:45.030
invece di creare un elemento di elenco come questo,

00:45.030 --> 00:48.290
istanziamo la nostra classe di elemento di progetto e nel

00:48.290 --> 00:52.230
costruttore di questa classe di elemento di progetto facciamo tutta

00:52.230 --> 00:55.100
l'inizializzazione e così via.

00:55.100 --> 00:57.240
Questa è almeno la mia idea.

00:57.240 --> 00:59.850
Come sempre, potete mettere in pausa il video

00:59.850 --> 01:01.680
e provare prima da soli, ma dopo una

01:01.680 --> 01:04.610
breve pausa, che vi concedo per mettere in pausa il

01:04.610 --> 01:06.960
video se volete, lo faremo insieme.

01:09.080 --> 01:12.980
Quindi, facciamolo insieme e per questo, sopra la classe dell'elenco

01:12.980 --> 01:17.940
dei progetti, aggiungerò la classe dell'elemento del progetto, che sarà la classe

01:17.940 --> 01:20.610
responsabile della resa di un singolo elemento

01:20.610 --> 01:22.920
del progetto.

01:22.920 --> 01:25.620
Ora, la classe dell'elemento del progetto dovrebbe sempre

01:25.620 --> 01:28.940
estendere il componente, perché sarà una classe responsabile della

01:28.940 --> 01:31.600
resa di qualcosa sullo schermo, ed è per questo che abbiamo

01:31.600 --> 01:34.800
la nostra classe componente, giusto, è per questo che l'abbiamo

01:34.800 --> 01:36.410
costruita.

01:36.410 --> 01:40.100
In modo da passare un modello, un elemento host e così via.

01:40.100 --> 01:43.560
Quindi, nell'elemento di progetto, abbiamo naturalmente bisogno di

01:43.560 --> 01:47.030
un costruttore, un costruttore in cui dobbiamo chiamare anche super.

01:47.030 --> 01:50.650
Prima di chiamare super, impostiamo questi tipi generici

01:50.650 --> 01:53.610
per la classe base da ereditare.

01:53.610 --> 01:56.440
Tenete presente che il primo tipo che passiamo

01:56.440 --> 02:00.410
è l'elemento host, quindi dove vogliamo rendere qualcosa.

02:00.410 --> 02:02.760
Il secondo tipo generico che passiamo

02:02.760 --> 02:04.800
è l'elemento che rendiamo.

02:04.800 --> 02:07.040
Quindi, nel caso dell'elemento del

02:07.040 --> 02:10.550
progetto, ciò significa che il primo elemento che passiamo

02:10.550 --> 02:13.570
è, poiché è il luogo in cui vogliamo rendere qualcosa,

02:13.570 --> 02:15.587
un elenco HTML U, un elenco non ordinato,

02:15.587 --> 02:17.370
perché ogni elemento del progetto

02:17.370 --> 02:22.550
sarà reso all'interno del nostro elenco non ordinato.

02:22.550 --> 02:26.160
Il secondo elemento sarà un elemento HTML LI, quindi l'elemento

02:26.160 --> 02:29.313
concreto dell'elenco che verrà creato.

02:30.210 --> 02:35.210
Ora scegliamo super, dobbiamo fornire l'Id dell'elemento in cui l'elemento

02:35.280 --> 02:38.210
del progetto deve essere reso.

02:38.210 --> 02:41.410
E naturalmente questo Id non è fisso,

02:41.410 --> 02:43.030
perché abbiamo due

02:43.030 --> 02:45.040
elenchi in cui l'elemento

02:45.040 --> 02:47.480
potrebbe essere reso.

02:47.480 --> 02:51.760
Quindi mi aspetto di ottenere quell'Id qui nel costruttore, lì

02:51.760 --> 02:55.400
voglio ottenere l'Id dell'host, diciamo, che dovrebbe

02:55.400 --> 02:56.233
essere una stringa,

02:56.233 --> 02:59.140
che possiamo inoltrare a super.

02:59.140 --> 03:02.220
Tuttavia, la prima cosa che dobbiamo superare è

03:02.220 --> 03:05.520
l'id del modello per un singolo elemento dell'elenco,

03:05.520 --> 03:07.410
che è questo modello qui.

03:07.410 --> 03:09.620
Quindi possiamo avvolgere il tutto.

03:09.620 --> 03:11.580
Naturalmente si tratta di un modello molto

03:11.580 --> 03:13.580
semplice, si potrebbe discutere se ne abbiamo

03:13.580 --> 03:16.380
davvero bisogno, è solo un elemento di una lista, potremmo

03:16.380 --> 03:18.920
crearlo anche nel codice con l'elemento document

03:18.920 --> 03:22.560
create, ma per poter riutilizzare la clausola di base del nostro componente,

03:22.560 --> 03:26.240
che si basa sui modelli, useremo questo approccio.

03:26.240 --> 03:29.680
Quindi il progetto singolo è l'Id del template, l'Id dell'host,

03:29.680 --> 03:32.550
poi è l'Id che voglio inoltrare al costruttore

03:32.550 --> 03:34.500
della clausola base.

03:34.500 --> 03:37.150
Quindi, per rispondere alla domanda se questo

03:37.150 --> 03:40.010
debba essere reso all'inizio o alla fine.

03:40.010 --> 03:43.020
Beh, ogni nuovo elemento dell'elenco dovrebbe essere

03:43.020 --> 03:45.630
aggiunto alla fine dell'elenco, anche se questo

03:45.630 --> 03:48.450
dipende totalmente da voi, potete anche aggiungerlo

03:48.450 --> 03:51.150
all'inizio se volete, ma in questo caso sceglierò

03:51.150 --> 03:53.423
la fine e quindi passerò false qui.

03:54.410 --> 03:57.153
E poi per l'Id del nuovo elemento, vendere

03:57.153 --> 03:59.330
l'Id che deve essere assegnato all'elemento

03:59.330 --> 04:01.580
appena creato.

04:01.580 --> 04:03.760
Mi aspetto di ottenerlo anche dall'esterno, perché

04:03.760 --> 04:06.860
anche questo sarà diverso per ogni elemento del progetto, dato che

04:06.860 --> 04:09.860
dopo tutto renderizzeremo più elementi di questo tipo.

04:09.860 --> 04:12.240
Quindi mi aspetto di ottenere l'Id,

04:12.240 --> 04:15.060
che sarà una stringa, che poi inoltrerò.

04:15.060 --> 04:17.820
Questo è il costruttore.

04:17.820 --> 04:22.250
Ora avrebbe senso memorizzare il progetto che appartiene a questo elemento

04:23.500 --> 04:26.080
di progetto in questa classe di elementi di

04:26.080 --> 04:27.280
progetto.

04:27.280 --> 04:31.020
E con progetto intendo il progetto basato sulla nostra classe

04:31.020 --> 04:33.770
di progetto, che abbiamo creato qui sopra.

04:33.770 --> 04:37.490
Questo è fondamentalmente ciò con cui lavoriamo, i dati con cui lavoriamo.

04:37.490 --> 04:40.440
E voglio memorizzare il progetto che appartiene a questo

04:40.440 --> 04:44.000
elemento di progetto reso in quella classe di elementi di progetto.

04:44.000 --> 04:47.650
Quindi, ad esempio, possiamo aggiungere un progetto di proprietà

04:47.650 --> 04:51.510
privata, ma dovrebbe essere di tipo progetto come questo.

04:51.510 --> 04:55.350
Nel costruttore otteniamo l'Id e possiamo semplicemente cambiarlo

04:55.350 --> 04:58.090
per ottenere il progetto in questo modo e poi dire

04:58.090 --> 05:00.950
semplicemente questo progetto è uguale al progetto

05:00.950 --> 05:04.340
e, dato che ogni progetto ha una proprietà Id, inoltriamo

05:04.340 --> 05:09.440
semplicemente il progetto.

05:09.440 --> 05:09.440
id.

05:09.440 --> 05:12.330
Penso che questa configurazione abbia un po' più senso.

05:12.330 --> 05:14.710
Ora abbiamo sempre bisogno di aggiungere

05:14.710 --> 05:17.760
un paio di metodi, ovviamente un metodo configure.

05:17.760 --> 05:22.300
Dobbiamo aggiungere il metodo render content, richiesto dalla nostra

05:22.300 --> 05:25.040
classe base che stiamo estendendo.

05:25.040 --> 05:29.850
E chiama sempre configure e render content qui alla

05:29.850 --> 05:32.000
fine del costruttore.

05:32.000 --> 05:34.890
Per quanto riguarda la configurazione, non c'è nulla da

05:34.890 --> 05:37.730
fare in questo momento per il contenuto che vogliamo rendere,

05:37.730 --> 05:40.050
c'è sicuramente del lavoro da fare.

05:40.050 --> 05:42.710
Ora abbiamo un modello molto semplice,

05:42.710 --> 05:44.520
che potremmo modificare

05:44.520 --> 05:47.650
nel file HTML dell'indice per renderlo un

05:47.650 --> 05:50.850
po' più complesso, in modo che ogni progetto

05:50.850 --> 05:54.250
abbia un tag h2, un tag h3 sotto di esso e un paragrafo,

05:54.250 --> 05:56.740
in modo da poter inserire il titolo

05:56.740 --> 05:59.170
del progetto, il numero di persone

05:59.170 --> 06:03.290
assegnate e la descrizione.

06:03.290 --> 06:05.720
E poi qui nell'app ts, nel rendering del contenuto,

06:05.720 --> 06:09.050
dobbiamo solo raggiungere questi diversi elementi nel

06:09.050 --> 06:10.130
nostro elemento,

06:10.130 --> 06:12.090
quindi il tag h2 e così via, e poi inserire

06:12.090 --> 06:14.440
del contenuto.

06:14.440 --> 06:17.300
Quindi possiamo raggiungere questo elemento,

06:17.300 --> 06:19.360
che è il nostro elemento reso, quindi

06:19.360 --> 06:21.750
il nostro elemento LI reso.

06:21.750 --> 06:24.970
E lì dobbiamo selezionare questi diversi elementi.

06:24.970 --> 06:27.270
Quindi possiamo usare il selettore di query h2 e impostare

06:27.270 --> 06:28.930
il contenuto del testo qui.

06:28.930 --> 06:33.930
Diciamo così. progetto. per rendere il titolo lì.

06:34.350 --> 06:36.470
Naturalmente dovremmo aggiungere un punto esclamativo

06:36.470 --> 06:39.010
per chiarire che otterremo sempre questo elemento, che

06:39.010 --> 06:40.700
conosciamo con certezza perché fa parte

06:40.700 --> 06:42.563
del nostro modello.

06:43.980 --> 06:46.870
Bene, allora possiamo ripetere questa

06:46.870 --> 06:49.170
operazione, ma ora cerchiamo il

06:49.170 --> 06:52.990
tag h3, e lì voglio visualizzare il numero di persone,

06:52.990 --> 06:55.690
dove persone è il nome della proprietà,

06:55.690 --> 06:58.030
ma lo modificherò un po'.

06:58.030 --> 07:00.300
Ora, questo qui è un numero e questo

07:00.300 --> 07:01.690
è una stringa, quindi

07:01.690 --> 07:04.110
in realtà lo chiamerò stringa.

07:04.110 --> 07:06.900
Ma non è questo il problema principale, in realtà

07:06.900 --> 07:11.160
voglio modificarlo in modo che produca più di un semplice numero,

07:11.160 --> 07:12.590
ma ci tornerò.

07:14.960 --> 07:17.260
Prima di tutto, ripetiamolo un'altra volta

07:17.260 --> 07:19.600
e interroghiamo il paragrafo qui.

07:19.600 --> 07:22.623
E impostare questo uguale a questo progetto. descrizione.

07:23.810 --> 07:25.810
Anche in questo caso lo modificherò in seguito, ma

07:25.810 --> 07:27.140
per ora lasciamolo così com'è.

07:27.140 --> 07:28.870
E con questo abbiamo un elemento di

07:28.870 --> 07:29.880
progetto che deve essere

07:29.880 --> 07:33.470
reso e che dovrebbe quindi presentare tutti i suoi contenuti.

07:33.470 --> 07:35.460
Ora dobbiamo usare l'elemento di progetto

07:35.460 --> 07:37.880
e il posto dove usarlo è l'elenco dei progetti,

07:37.880 --> 07:40.450
perché questo rende l'elenco dei progetti.

07:40.450 --> 07:44.150
In particolare, in Rendering projects, è qui che dobbiamo assicurarci

07:44.150 --> 07:46.630
di eseguire il rendering degli elementi

07:46.630 --> 07:48.260
del progetto.

07:48.260 --> 07:51.140
Qui si esaminano tutte le voci di progetto dei

07:51.140 --> 07:52.860
progetti assegnati.

07:52.860 --> 07:55.870
I progetti assegnati sono questa proprietà,

07:55.870 --> 07:58.960
che contiene un elenco o un array di progetti.

07:58.960 --> 08:02.330
Quindi, in questo ciclo, invece di creare manualmente

08:02.330 --> 08:04.720
un elemento dell'elenco e così via,

08:04.720 --> 08:08.270
mi sbarazzerò di tutto questo e dirò semplicemente

08:08.270 --> 08:11.870
nuovo elemento del progetto qui e ora due elementi del

08:11.870 --> 08:13.740
progetto.

08:13.740 --> 08:16.110
Dobbiamo passare l'idea dell'host,

08:16.110 --> 08:22.730
che ovviamente è l'Id che è stato inserito nel nostro elenco.

08:22.730 --> 08:25.990
Quindi, in pratica, questo. elemento. id, che è l'id dell'elemento

08:25.990 --> 08:27.800
host, perché questo elemento,

08:27.800 --> 08:29.980
che è un elenco non ordinato, dovrebbe

08:29.980 --> 08:31.670
essere l'host.

08:31.670 --> 08:34.210
Il secondo argomento è il progetto,

08:34.210 --> 08:37.400
che in pratica è un elemento eliminato.

08:37.400 --> 08:40.950
Quindi questa costante che otteniamo all'interno del ciclo.

08:40.950 --> 08:42.790
E ora il collegamento avverrà all'interno

08:42.790 --> 08:46.530
dell'elemento del progetto o all'interno della clausola di base della classe

08:46.530 --> 08:49.770
del componente, che gli elementi del progetto estendono.

08:49.770 --> 08:53.570
E l'istanziazione dell'elemento di progetto dovrebbe essere l'unica cosa da fare.

08:53.570 --> 08:58.380
Quindi, se lo salviamo e torniamo indietro e abbiamo di nuovo questo codice

08:58.380 --> 09:00.890
qui, o abbiamo di nuovo questo input.

09:00.890 --> 09:04.140
Vedete, questo viene renderizzato e non sembra male.

09:04.140 --> 09:06.320
Ci sono due cose che non mi piacciono,

09:06.320 --> 09:10.220
ovviamente il punto qui, che non mi piace molto.

09:10.220 --> 09:12.710
E solo per avere la gratuità qui, tutti

09:12.710 --> 09:15.590
non sono super contenti di questo.

09:15.590 --> 09:17.293
Come possiamo risolvere questo problema?

09:18.730 --> 09:21.380
Per risolvere il punto, ispezioniamo il nostro contenuto.

09:21.380 --> 09:24.110
E quello che vediamo è che l'elemento dell'elenco

09:24.110 --> 09:28.060
viene effettivamente reso al di fuori dell'elenco non ordinato.

09:28.060 --> 09:29.600
Quindi non è al suo interno.

09:29.600 --> 09:32.710
Se fosse all'interno, funzionerebbe correttamente,

09:32.710 --> 09:35.530
ma non riesco a trascinarlo lì.

09:35.530 --> 09:38.050
Quindi dobbiamo assicurarci che venga reso all'interno dell'elenco

09:38.050 --> 09:39.000
non ordinato.

09:39.000 --> 09:41.363
Scopriamo perché non è così.

09:42.220 --> 09:46.710
Probabilmente non è così, perché in project item passo false

09:46.710 --> 09:50.430
qui, al costruttore della clausola base, e passare

09:50.430 --> 09:53.660
false qui significa che non viene inserito

09:53.660 --> 09:57.640
all'inizio, e questo a sua volta significa che in attach

09:57.640 --> 10:00.590
abbiamo before e as a value qui, dove viene

10:00.590 --> 10:02.670
inserito.

10:02.670 --> 10:05.660
Tuttavia, questo è ciò che vogliamo che accada, quindi

10:05.660 --> 10:08.360
probabilmente non è questo il problema.

10:08.360 --> 10:12.420
Il problema è che, ovviamente, lo inseriamo

10:12.420 --> 10:14.970
nell'elemento host.

10:14.970 --> 10:17.650
E ora ripensiamoci: qual è l'elemento ospite

10:17.650 --> 10:19.460
della lista di progetto?

10:19.460 --> 10:20.900
E alla fine è questo che conta,

10:20.900 --> 10:23.850
perché quando renderizziamo i nostri progetti,

10:23.850 --> 10:25.620
creiamo un nuovo elemento di progetto

10:25.620 --> 10:29.680
e inoltro l'Id del nostro elemento qui, dell'elemento renderizzato

10:29.680 --> 10:31.240
nell'elenco dei progetti

10:31.240 --> 10:34.180
all'elemento di progetto.

10:34.180 --> 10:36.670
Questa sarà quindi l'idea dell'elemento ospite di un singolo

10:36.670 --> 10:38.120
elemento del progetto.

10:38.120 --> 10:40.720
Ma qual è questo elemento?

10:40.720 --> 10:43.770
Questo elemento qui non è l'elenco non ordinato che abbiamo

10:43.770 --> 10:44.900
nel riquadro, ma il riquadro

10:44.900 --> 10:47.350
stesso, la nostra sezione.

10:47.350 --> 10:50.260
Se ispezioniamo il modello, vediamo che la sezione qui è quella

10:50.260 --> 10:53.810
che viene effettivamente resa per la nostra classe Elenco progetti.

10:53.810 --> 10:55.500
Non si tratta solo dell'elenco, ma

10:55.500 --> 10:58.300
anche della sezione che include un'intestazione.

10:58.300 --> 11:00.320
Quindi dobbiamo accedere all'elenco

11:00.320 --> 11:02.020
all'interno del nostro elemento

11:02.020 --> 11:05.070
e poi ottenere l'accesso all'idea di quell'elenco,

11:05.070 --> 11:08.710
perché qui abbiamo impostato un Id su quell'elenco, quindi ci

11:08.710 --> 11:10.750
sarà un Id, dobbiamo solo prendere

11:10.750 --> 11:12.230
quello giusto.

11:12.230 --> 11:14.880
Quindi l'idea dell'elemento

11:14.880 --> 11:16.790
in sé non è corretta.

11:16.790 --> 11:20.580
Invece qui, dovremmo avere l'idea dell'elenco non ordinato nel

11:20.580 --> 11:23.580
nostro elemento e sappiamo con certezza che ci sarà

11:23.580 --> 11:25.310
un elenco non ordinato, quindi

11:25.310 --> 11:26.350
possiamo saltare

11:26.350 --> 11:28.460
il controllo di null aggiungendo il

11:28.460 --> 11:30.063
punto esclamativo.

11:30.930 --> 11:34.463
Ora, con l'aggiunta di questo elemento, se aggiungiamo un nuovo elemento

11:35.490 --> 11:37.680
qui, l'aspetto è migliore, il punto elenco è

11:37.680 --> 11:39.920
sparito, perché ora è stato applicato lo stile

11:39.920 --> 11:43.100
corretto, dato che l'elemento LI, l'elenco, è stato aggiunto all'interno

11:43.100 --> 11:46.320
dell'elenco non ordinato, come si può vedere.

11:46.320 --> 11:49.390
Questa è una cosa, ora passiamo al cinque, perché mettere

11:49.390 --> 11:51.180
un cinque qui non è proprio quello

11:51.180 --> 11:52.990
che voglio fare.

11:52.990 --> 11:56.143
Che ne dite di fornire informazioni un po' più utili?
