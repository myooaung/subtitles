WEBVTT

00:02.130 --> 00:04.900
Istruttore: Questo corso è ricco di contenuti.

00:04.900 --> 00:06.940
Abbiamo quasi finito di iniziare

00:06.940 --> 00:09.500
e poi ci immergeremo in TypeScript e in tutte

00:09.500 --> 00:11.667
le sue interessanti funzionalità,

00:11.667 --> 00:13.850
imparandole passo dopo passo.

00:13.850 --> 00:16.210
Inizieremo naturalmente con le basi di TypeScripts.

00:16.210 --> 00:18.800
I tipi fondamentali, il funzionamento generale, alcune

00:18.800 --> 00:20.880
delle nuove funzionalità aggiunte e tutto

00:20.880 --> 00:22.930
ciò che è necessario sapere per avere una

00:22.930 --> 00:25.320
buona comprensione di TypeScript.

00:25.320 --> 00:27.690
In seguito approfondiremo

00:27.690 --> 00:29.590
il compilatore TypeScript

00:29.590 --> 00:32.310
e la sua configurazione, perché

00:32.310 --> 00:35.480
è molto importante capire cosa si può

00:35.480 --> 00:37.450
configurare e a cosa servono

00:37.450 --> 00:40.840
le diverse impostazioni.

00:40.840 --> 00:43.900
In seguito esploreremo le funzionalità JavaScript di nuova generazione

00:43.900 --> 00:45.850
supportate da TypeScript.

00:45.850 --> 00:48.880
Come funzionano e come si possono usare in TypeScript.

00:48.880 --> 00:51.500
Continueremo con le classi e le interfacce,

00:51.500 --> 00:55.000
un concetto super importante in parte anche in JavaScript

00:55.000 --> 00:57.350
vanilla nel caso delle classi, ma con le

00:57.350 --> 00:59.510
interfacce abbiamo anche una nuovissima

00:59.510 --> 01:01.600
caratteristica di TypeScript e capirete

01:01.600 --> 01:03.550
cosa sono, cosa fanno e perché potremmo

01:03.550 --> 01:06.210
volerle usare.

01:06.210 --> 01:08.190
Dopodiché è il momento di approfondire.

01:08.190 --> 01:10.490
Daremo un'occhiata ad alcuni tipi avanzati

01:10.490 --> 01:13.280
e alle funzioni avanzate di TypeScript in generale,

01:13.280 --> 01:15.040
passando al livello successivo

01:15.040 --> 01:16.640
e sviluppando le basi che abbiamo

01:16.640 --> 01:20.110
già imparato fino a questo punto.

01:20.110 --> 01:22.630
Una funzione avanzata, che merita

01:22.630 --> 01:27.210
sicuramente una sezione a sé, è quella dei generici.

01:27.210 --> 01:28.910
In questo modulo scoprirete

01:28.910 --> 01:31.160
di cosa si tratta e perché è davvero

01:31.160 --> 01:32.650
molto utile.

01:32.650 --> 01:34.570
Seguono i decoratori.

01:34.570 --> 01:37.360
I decoratori sono una caratteristica piuttosto

01:37.360 --> 01:40.550
interessante aggiunta da TypeScript e in questo modulo

01:40.550 --> 01:43.810
daremo un'occhiata più da vicino ai decoratori e costruiremo

01:43.810 --> 01:46.200
alcuni decoratori davvero utili, dopo

01:46.200 --> 01:50.100
di che avremo imparato molto su TypeScript.

01:50.100 --> 01:52.660
Ora, il corso è organizzato in modo da mostrare

01:52.660 --> 01:56.460
tutte queste caratteristiche individuali in dimostrazioni

01:56.460 --> 01:59.040
semplici e relativamente piccole.

01:59.040 --> 02:01.730
Ora, per darvi un quadro più ampio e per vedere

02:01.730 --> 02:04.640
come applicare tutte queste funzioni in un progetto

02:04.640 --> 02:08.140
reale, costruiremo proprio questo.

02:08.140 --> 02:10.400
Avremo un intero modulo in cui costruiremo

02:10.400 --> 02:14.420
un progetto interamente con TypeScript da zero, in modo che possiate

02:14.420 --> 02:17.720
vedere molte di queste caratteristiche, la maggior parte

02:17.720 --> 02:20.090
di quelle che avete imparato fino a questo

02:20.090 --> 02:21.920
punto, in azione e capirete come

02:21.920 --> 02:23.680
funzionano insieme e perché semplificano

02:23.680 --> 02:28.160
il processo di costruzione di un progetto.

02:28.160 --> 02:29.940
Una volta terminata la costruzione

02:29.940 --> 02:31.770
di questo progetto, identificheremo

02:31.770 --> 02:34.420
un nuovo problema e impareremo a risolverlo lavorando

02:34.420 --> 02:36.450
con spazi dei nomi e moduli che ci aiuteranno

02:36.450 --> 02:38.100
a rendere il nostro codice più gestibile

02:38.100 --> 02:40.570
e leggibile.

02:40.570 --> 02:42.600
A partire da questo, esploreremo anche

02:42.600 --> 02:44.350
Webpack con TypeScript.

02:44.350 --> 02:47.690
Webpack è uno strumento di compilazione che utilizziamo nello sviluppo

02:47.690 --> 02:49.530
web front-end moderno e si può usare in

02:49.530 --> 02:52.970
combinazione con TypeScript per ottenere un progetto migliore, che

02:52.970 --> 02:55.520
semplicemente rende alcune cose più facili e permette

02:55.520 --> 02:57.990
di ottenere il meglio dei mondi.

02:57.990 --> 02:59.850
Una grande esperienza di sviluppo

02:59.850 --> 03:02.170
e un codice che funziona molto bene per

03:02.170 --> 03:04.120
gli utenti finali.

03:04.120 --> 03:06.320
Una volta terminato, abbiamo un quadro

03:06.320 --> 03:08.710
molto solido di TypeScript e di come lavorare

03:08.710 --> 03:10.180
con esso nei progetti.

03:10.180 --> 03:13.250
Ora, ciò di cui avrete bisogno in molti progetti reali sono

03:13.250 --> 03:15.183
le librerie di terze parti, quindi daremo

03:15.183 --> 03:16.820
un'occhiata più da vicino a questo

03:16.820 --> 03:20.250
aspetto, perché ci sono alcune librerie di terze parti che hanno

03:20.250 --> 03:22.280
abbracciato TypeScript e hanno il supporto

03:22.280 --> 03:24.630
TypeScript incorporato, ma ci sono anche molte

03:24.630 --> 03:26.600
librerie che non lo fanno e daremo un'occhiata

03:26.600 --> 03:29.030
a come possiamo lavorare con entrambi i tipi

03:29.030 --> 03:34.520
di librerie in modo eccellente nei progetti TypeScript.

03:34.520 --> 03:36.630
Ci sono poi alcuni scenari specifici

03:36.630 --> 03:39.620
che meritano un modulo a sé stante.

03:39.620 --> 03:41.570
Avremo un intero modulo su React

03:41.570 --> 03:44.320
con TypeScript, su come si può costruire

03:44.320 --> 03:47.540
un'intera applicazione React solo con TypeScript,

03:47.540 --> 03:49.452
e anche un intero modulo su NodeJS

03:49.452 --> 03:53.260
e i type script express end, in modo da avere anche grandi

03:53.260 --> 03:55.390
esempi per questi casi d'uso molto

03:55.390 --> 03:58.910
popolari e specifici di TypeScript, in cui è possibile

03:58.910 --> 04:01.270
creare improvvisamente applicazioni

04:01.270 --> 04:03.630
React o Node in un modo nuovo con un linguaggio

04:03.630 --> 04:06.760
nuovo.

04:06.760 --> 04:09.260
Il corso contiene quindi molti contenuti interessanti.

04:09.260 --> 04:10.970
Non perdiamo tempo.

04:10.970 --> 04:12.720
Vediamo come ottenere il massimo

04:12.720 --> 04:15.263
dal corso e poi tuffiamoci nel vivo.
