WEBVTT

00:02.220 --> 00:03.053
Eğitmen: Şimdi devam

00:03.053 --> 00:04.883
ederseniz, daha fazla seçeneğimiz var,

00:04.883 --> 00:07.920
noUnusedLocals, noUnusedParameters, noImplicitReturns.

00:07.920 --> 00:10.470
Bu, temel olarak kod kalitesi konusunda size yardımcı olur.

00:10.470 --> 00:13.110
TypeScript, kullanılmayan belirli değişkenler

00:13.110 --> 00:15.930
vb. varsa şikayet edecektir.

00:15.930 --> 00:20.930
Bu üç seçeneği açarsak, örneğin, bu seçenek break anahtar sözcüğünü

00:21.711 --> 00:24.230
unutabileceğiniz Switch deyimlerinde

00:24.230 --> 00:26.270
size yardımcı olur.

00:26.270 --> 00:28.880
Ancak bu üç seçeneği açarsak, TypeScript'in

00:28.880 --> 00:31.760
şikayet edeceği şey, örneğin burada, bu işlevde

00:31.760 --> 00:33.600
yerel olarak bir kullanıcı adı

00:33.600 --> 00:36.730
değişkeniniz varsa ve bunu kullanmazsanız.

00:36.730 --> 00:39.490
Gördüğünüz gibi, bunun üzerinde sarı dalgalı çizgiler

00:39.490 --> 00:41.500
var çünkü bu aslında bir hata değil.

00:41.500 --> 00:43.179
Daha çok bir uyarı ya da ipucu gibi.

00:43.179 --> 00:45.643
Şimdi burada derleme yaparsam, TypeScript

00:47.750 --> 00:49.500
yalnızca hataları bildiği için

00:49.500 --> 00:51.900
bir hata alacağımı göreceksiniz.

00:51.900 --> 00:54.140
Ve burada kullanıcı adının bildirildiğini

00:54.140 --> 00:57.080
görüyoruz, ancak değeri asla okunmuyor çünkü kullanılmayan

00:57.080 --> 01:00.550
yerel değişkenler istemediğimizden emin olduk.

01:00.550 --> 01:02.483
Kullanılmayan global değişkenler,

01:03.440 --> 01:06.340
yani burada appId gibi bir şey olsaydı, buna izin verilirdi

01:06.340 --> 01:09.130
çünkü TypeScript, global olarak tanımlanmış bu değere

01:09.130 --> 01:13.870
başka bir kod dosyasında ihtiyacınız olup olmadığını bilemez.

01:13.870 --> 01:14.980
Bu nedenle buna izin verilir,

01:14.980 --> 01:17.280
ancak buna ihtiyaç duyabileceğiniz başka bir yerin

01:17.280 --> 01:20.010
olmadığı bir işlevde, kullanılmayan kodunuz varsa TypeScript

01:20.010 --> 01:22.020
şimdi şikayet edecektir.

01:22.020 --> 01:23.540
Ve bu genellikle iyi bir fikirdir.

01:23.540 --> 01:26.021
Bu tür kullanılmayan kodları çıkarmanızı sağlar.

01:26.021 --> 01:28.510
Aynı şey kullanılmayan parametreler için de geçerlidir.

01:28.510 --> 01:31.350
Burada bir H alırsanız, elbette, bind artık bozuk,

01:31.350 --> 01:33.050
ancak bunu geçsek bile bu çalışıyor,

01:33.050 --> 01:35.970
ancak şimdi yine TypeScript ve bu nedenle ID bize

01:35.970 --> 01:39.220
bunun kullanılmadığını ve bunun olduğunu söylüyor,

01:39.220 --> 01:41.780
bu yüzden belki de onu kaldırmalı veya kullanmaya

01:41.780 --> 01:44.293
başlamalısınız.

01:45.238 --> 01:48.173
Yani Kullanılmayan Parametreler yok.

01:48.173 --> 01:51.365
Ve noImplicitReturns, bazen bir şey döndüren

01:51.365 --> 01:55.620
bazen de döndürmeyen bir fonksiyonumuz varsa hata alacağımız

01:55.620 --> 01:57.130
anlamına gelir.

01:57.130 --> 02:00.913
Diyelim ki iki sayı elde ettiğimiz başka bir fonksiyonumuz

02:01.912 --> 02:02.940
var, add.

02:02.940 --> 02:05.906
Sayı ve n2 bir sayıdır.

02:05.906 --> 02:10.906
Ve elbette n1 artı n2'yi döndürebiliriz.

02:14.030 --> 02:15.710
Ancak diyelim ki, bir nedenden dolayı

02:15.710 --> 02:18.518
n1 artı n2'nin sıfırdan büyük olup olmadığını kontrol

02:18.518 --> 02:21.800
ediyoruz, çünkü yalnızca sıfırdan büyük bir sonuç elde edersek

02:21.800 --> 02:23.700
geri dönmek istiyoruz.

02:23.700 --> 02:25.040
O zaman geri dönen bir değer istiyoruz.

02:25.040 --> 02:26.940
Aksi takdirde hiçbir şey döndürmek istemeyiz.

02:26.940 --> 02:28.170
Geri dönmek istemiyoruz.

02:28.170 --> 02:30.550
Peki, o zaman noImplicitReturns ile yapılan ekstra

02:30.550 --> 02:32.598
ayar nedeniyle bir uyarı alırız.

02:32.598 --> 02:36.401
TypeScript, bu işlevdeki tüm dallanmaların bir return deyimine

02:36.401 --> 02:38.760
yol açmadığını ve ayarımız nedeniyle buna

02:38.760 --> 02:40.650
izin verilmediğini algılar.

02:40.650 --> 02:44.150
En azından burada return anahtar sözcüğünü ekleyerek kasıtlı olarak hiçbir

02:44.150 --> 02:45.790
şey döndürmememiz gerekir.

02:45.790 --> 02:48.260
Burada sadece atlanmasına izin verilmez.

02:48.260 --> 02:49.730
Hiçbir dalda hiçbir şey döndürmeyen

02:49.730 --> 02:52.446
bir fonksiyonunuz varsa buna izin verilir, ancak fonksiyonunuzun

02:52.446 --> 02:54.520
bir şey döndürdüğü en az bir durum varsa,

02:54.520 --> 02:56.423
o zaman tüm durumlarda bir şey döndürdüğünüzden

02:56.423 --> 02:59.933
emin olmanız gerekir.

03:01.830 --> 03:03.130
Ve bununla birlikte, bu yapılandırma kılavuzunun

03:03.130 --> 03:04.240
sonuna yaklaşıyoruz.

03:04.240 --> 03:06.526
Burada moduleResolution'ı göz ardı edebiliriz.

03:06.526 --> 03:08.933
Tüm bu seçenekler aslında oldukça gelişmiş, burada

03:08.933 --> 03:10.830
bizim için önemli olmayan, birçok projede

03:10.830 --> 03:13.510
sizin için de önemli olmayan seçenekler.

03:13.510 --> 03:16.600
Kaynak Harita Seçenekleri, daha önce incelediğimiz bu kaynak haritalarda

03:16.600 --> 03:18.180
ince ayar yapmanıza olanak tanır.

03:18.180 --> 03:21.440
Yani bu çeviri dosyaları JavaScript'ten TypeScript'e.

03:21.440 --> 03:23.720
Genellikle varsayılan ayarlar burada iyi olmalıdır,

03:23.720 --> 03:26.000
bu nedenle neyi değiştirdiğinizi ve bunu neden yaptığınızı

03:26.000 --> 03:27.010
bilmiyorsanız, genellikle

03:27.010 --> 03:29.470
burada hiçbir şeyi değiştirmeniz gerekmez.

03:29.470 --> 03:31.512
Ve bu deneysel seçeneklerle ilgili

03:31.512 --> 03:34.380
olarak, daha sonra dekoratörler modülünde

03:34.380 --> 03:37.010
özellikle experimentalDecorators'a

03:37.010 --> 03:38.910
bir göz atacağım.

03:38.910 --> 03:41.810
Bu temel olarak, TypeScript'te gerçekten deneysel

03:41.810 --> 03:45.060
olan, gelecekte bir zamanda JavaScript'e geçip geçmeyeceğinden

03:45.060 --> 03:48.271
emin olmadığınız ve yine de onlarla çalışmak isteyebileceğiniz

03:48.271 --> 03:50.270
belirli özelliklerin kullanılmasını

03:50.270 --> 03:52.940
sağlar.

03:52.940 --> 03:55.220
Ardından TypeScript'e bu özelliklerle çalışmak

03:55.220 --> 03:57.070
istediğinizi açıkça söylemeniz gerekir

03:57.070 --> 03:59.390
ve bunu bu yapılandırmayla yapabilirsiniz.

03:59.390 --> 04:01.880
Ama bu konuya tekrar döneceğim.

04:01.880 --> 04:04.170
Ve bu nedenle, şimdi bu dosyanın üzerinden geçiyoruz, orada

04:04.170 --> 04:05.870
ayarlayabileceğiniz birçok seçenek var.

04:05.870 --> 04:08.222
Ve TypeScript büyüdükçe, genellikle buraya

04:08.222 --> 04:10.612
daha fazla seçenek eklenir, bu nedenle resmi

04:10.612 --> 04:13.837
belgeler her zaman daha derine dalmak ve projenizde size

04:13.837 --> 04:16.160
yardımcı olabilecek ilginç bir seçeneği

04:16.160 --> 04:18.210
kaçırmadığınızdan emin olmak için

04:18.210 --> 04:20.343
harika bir yerdir.
