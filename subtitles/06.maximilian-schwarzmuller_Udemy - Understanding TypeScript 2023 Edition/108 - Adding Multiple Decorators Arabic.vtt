WEBVTT

00:02.270 --> 00:05.210
المدرب: لذلك رأينا الآن مصمم ديكور أكثر فائدة.

00:05.210 --> 00:08.750
أريد أن أختتم هذه المقدمة الأساسية لمصمم الديكور

00:08.750 --> 00:11.030
بشيء آخر مهم يجب أن تعرفه ، يمكنك

00:11.030 --> 00:14.600
إضافة أكثر من مصمم ديكور إلى الفصل ، أو في أي مكان

00:14.600 --> 00:17.760
آخر يمكنك فيه استخدام مصمم الديكور.

00:17.760 --> 00:18.940
لذلك دعونا نضيف

00:18.940 --> 00:23.040
أيضًا أداة الزخرفة هنا على سبيل المثال ، مثل هذا.

00:23.040 --> 00:25.810
إذا حفظنا ذلك ، فسترى أنه يتم تجميعه بدون

00:25.810 --> 00:29.030
أخطاء ، وبالفعل نرى رسالة السجل هنا أيضًا.

00:29.030 --> 00:31.490
هذا يترك سؤالًا واحدًا مهمًا

00:31.490 --> 00:34.840
، في أي ترتيب يتم تنفيذ هؤلاء المصممين؟

00:34.840 --> 00:36.550
حسنًا لذلك ، لمعرفة ذلك ،

00:36.550 --> 00:38.880
دعنا نلقي رسائل السجل في كليهما.

00:38.880 --> 00:41.340
لدينا بالفعل رسالة تسجيل في المسجل ، من الواضح

00:41.340 --> 00:43.400
، الآن دعنا ننتقل إلى وظيفة الديكور.

00:43.400 --> 00:46.350
لذلك بالنسبة إلى الوظيفة الداخلية لـ WithTemplate

00:46.350 --> 00:49.900
، وقل نموذج التقديم ، على سبيل المثال.

00:49.900 --> 00:50.733
والآن دعونا

00:50.733 --> 00:53.830
نرى في أي ترتيب يتم تنفيذ هذه الوظائف وفي

00:53.830 --> 00:56.820
أي ترتيب يتم طباعة عبارات السجل هذه.

00:56.820 --> 00:59.570
ونرى تشغيل نموذج التقديم أولاً

00:59.570 --> 01:02.540
، ثم نحصل على ناتج المسجل.

01:02.540 --> 01:04.070
الآن ما يخبرنا به هذا بالطبع

01:04.070 --> 01:06.260
، هو أنهم ينفذون من الأسفل إلى الأعلى.

01:06.260 --> 01:08.033
مصمم الديكور السفلي أولاً

01:08.033 --> 01:10.790
، ثم بعد ذلك ، المصممون فوقه.

01:10.790 --> 01:14.230
يتم تشغيل WithTemplate أولاً ، ثم ينفذ Logger.

01:14.230 --> 01:15.270
والمهم ، أنا

01:15.270 --> 01:18.920
أتحدث عن وظائف الديكور الفعلية.

01:18.920 --> 01:23.710
تعمل مصانع الديكور هنا في وقت سابق.

01:23.710 --> 01:26.790
إذا كان لدينا Logger Factory هنا ، ولدينا

01:26.790 --> 01:31.080
نفس السجل في Template Factory ، لذلك هناك أقول مصنع القوالب

01:31.080 --> 01:35.000
في السجل الخاص بي ، سترى أنه هناك ، في الواقع ، يتم تشغيل

01:35.000 --> 01:37.490
Logger Factory أولاً ، ثم حصلنا

01:37.490 --> 01:39.930
على مصنع القوالب.

01:39.930 --> 01:41.750
وهذا منطقي لأنه في النهاية ، على الرغم

01:41.750 --> 01:43.740
من أننا حصلنا على هذا الرمز @ هنا ، فأنا

01:43.740 --> 01:45.600
أقوم بتنفيذ وظيفة ، ونحن نفعل الشيء

01:45.600 --> 01:46.850
نفسه هنا.

01:46.850 --> 01:49.930
وبالطبع ، يتم تطبيق قواعد JavaScript العادية

01:49.930 --> 01:51.380
هنا ويتم تنفيذ هذه الوظيفة

01:51.380 --> 01:53.610
قبل تنفيذ هذه الوظيفة.

01:53.610 --> 01:56.590
وهذا هو سبب رؤيتنا لمصنع المسجل

01:56.590 --> 01:59.470
قبل أن نرى مصنع القوالب.

01:59.470 --> 02:02.650
لذا فإن إنشاء وظائف الديكور الفعلية الخاصة

02:02.650 --> 02:03.970
بنا يحدث بالترتيب

02:03.970 --> 02:07.280
الذي نحدد به وظائف المصنع هذه.

02:07.280 --> 02:10.780
لكن تنفيذ وظائف الديكور الفعلية يحدث بعد

02:10.780 --> 02:12.700
ذلك من أسفل إلى أعلى.

02:12.700 --> 02:17.300
مما يعني أن مصمم الديكور السفلي يتم تنفيذه أولاً ، لذلك

02:17.300 --> 02:19.000
يتم تنفيذ وظيفة الديكور

02:19.000 --> 02:23.250
هذه ، وبعد ذلك يتم تنفيذ الديكور أعلاه.

02:23.250 --> 02:25.163
إنه مجرد شيء يجب أن تعرفه.

02:26.040 --> 02:29.620
من خلال ذلك ، حصلنا على معرفة أساسية قوية عن المصممين

02:29.620 --> 02:32.240
، وترى أيضًا مصممًا أكثر تقدمًا

02:32.240 --> 02:34.900
والذي نأمل أن يمنحك أيضًا انطباعًا

02:34.900 --> 02:37.810
أوليًا عن سبب فائدة المصممين ، خاصة

02:37.810 --> 02:41.970
إذا كنت تفكر أيضًا في أطر مثل Angular.

02:41.970 --> 02:46.470
لنرى الآن الأماكن الأخرى ، إلى جانب الفصول الدراسية ، يمكننا

02:46.470 --> 02:48.140
إضافة الديكور وما يمكننا

02:48.140 --> 02:50.363
القيام به هناك.
