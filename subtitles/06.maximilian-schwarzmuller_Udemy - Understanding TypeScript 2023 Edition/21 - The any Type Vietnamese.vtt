WEBVTT

00:02.260 --> 00:03.960
Người hướng dẫn: Với điều đó, chúng ta gần như đã hoàn

00:03.960 --> 00:04.920
thành các loại cốt lõi.

00:04.920 --> 00:07.470
Còn một loại nữa mà chúng ta đã thấy,

00:07.470 --> 00:09.390
đó là loại bất kỳ.

00:09.390 --> 00:11.480
Loại bất kỳ là loại linh hoạt nhất mà bạn

00:11.480 --> 00:13.310
có thể chỉ định trong TypeScript.

00:13.310 --> 00:16.710
Loại này không cho TypeScript biết bất cứ điều gì.

00:16.710 --> 00:19.960
Về cơ bản, điều đó có nghĩa là bạn có thể lưu trữ bất kỳ loại giá trị nào trong đó.

00:19.960 --> 00:22.031
Chúng tôi không có nhiệm vụ loại cụ thể.

00:22.031 --> 00:25.260
TypeScript về cơ bản sẽ không bao giờ hét vào mặt bạn

00:25.260 --> 00:27.040
khi bạn sử dụng bất kỳ thứ gì.

00:27.040 --> 00:28.030
Quay lại mã của chúng

00:28.030 --> 00:31.360
tôi ở đây, nếu tôi đặt loại hoạt động yêu thích thành bất kỳ,

00:31.360 --> 00:32.870
sẽ không gặp lỗi.

00:32.870 --> 00:36.580
Nếu nó đặt nó thành bất kỳ mảng nào, thì ít nhất tôi cũng nói với TypeScript rằng

00:36.580 --> 00:39.220
các hoạt động yêu thích là một mảng của thứ gì đó.

00:39.220 --> 00:41.460
Vì vậy, nếu tôi chỉ lưu trữ một giá trị

00:41.460 --> 00:42.830
I ở đó, tôi sẽ gặp lỗi.

00:42.830 --> 00:44.500
Nhưng miễn là nó là một mảng, tôi có

00:44.500 --> 00:46.638
thể lưu trữ bất cứ thứ gì tôi muốn trong đó.

00:46.638 --> 00:49.840
Vì vậy, bất kỳ là thực sự linh hoạt.

00:49.840 --> 00:52.070
Và điều này thoạt nghe có vẻ tuyệt vời,

00:52.070 --> 00:54.060
nhưng thực ra đó là một bất lợi lớn

00:54.060 --> 00:58.290
và bạn hoàn toàn muốn tránh bất kỳ điều gì bất cứ khi nào có thể.

00:58.290 --> 01:00.170
Bởi vì về cơ bản, bất kỳ thứ gì cũng lấy đi tất

01:00.170 --> 01:02.512
cả các lợi thế mà TypeScript mang lại cho bạn.

01:02.512 --> 01:04.380
Nó mang lại cho bạn trải nghiệm giống

01:04.380 --> 01:06.430
như bạn có với JavaScript vanilla, nơi

01:06.430 --> 01:10.480
bạn cũng phải nhập bất kỳ loại nào trên mọi thứ có thể nói là như vậy.

01:10.480 --> 01:13.820
Về cơ bản, mọi thứ đảm bảo rằng trình biên dịch TypeScript

01:13.820 --> 01:16.020
không thể kiểm tra bất kỳ thứ gì, bởi

01:16.020 --> 01:19.180
vì nếu bất kỳ thuộc tính hoặc biến nào có thể lưu trữ

01:19.180 --> 01:20.818
bất kỳ giá trị nào, thì không

01:20.818 --> 01:23.687
có gì nhiều để kiểm tra, phải không?

01:23.687 --> 01:27.130
Vì vậy, bạn có thể sử dụng bất kỳ dữ liệu nào làm dự phòng nếu bạn

01:27.130 --> 01:30.270
có một số giá trị, một số loại dữ liệu mà bạn thực sự không

01:30.270 --> 01:31.810
thể biết loại dữ liệu nào sẽ

01:31.810 --> 01:33.820
được lưu trữ ở đó và nơi bạn có thể đang

01:33.820 --> 01:37.050
sử dụng một số kiểm tra thời gian chạy, như chúng tôi đã làm

01:37.050 --> 01:40.440
ở đây, trong thời gian chạy để thu hẹp những gì bạn muốn làm

01:40.440 --> 01:42.660
cho các giá trị nhất định.

01:42.660 --> 01:44.600
Sau đó, bạn có thể đi với bất kỳ.

01:44.600 --> 01:48.210
Nhưng trong những trường hợp khác, bạn thực sự muốn tránh bất kỳ.

01:48.210 --> 01:51.120
Nếu bạn có cơ hội biết mình đang làm việc

01:51.120 --> 01:54.090
với loại dữ liệu nào, hãy nói rõ về nó.

01:54.090 --> 01:56.780
Hãy để suy luận TypeScript thực hiện công việc của nó

01:56.780 --> 01:58.817
hoặc đặt rõ ràng các loại của riêng bạn.

01:58.817 --> 02:01.783
Đừng quay trở lại với bất kỳ nếu bạn không cần thiết.
