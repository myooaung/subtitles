WEBVTT

1
00:00:02.180 --> 00:00:03.710
<v ->For that attached you find</v>

2
00:00:03.710 --> 00:00:06.590
a starting project as you saw it multiple times

3
00:00:06.590 --> 00:00:07.640
in the course already,

4
00:00:07.640 --> 00:00:09.140
a very trivial project

5
00:00:09.140 --> 00:00:12.030
with a basically empty index.html file

6
00:00:12.030 --> 00:00:14.400
and an empty app.ts file

7
00:00:14.400 --> 00:00:17.140
and here we're going to build a small little

8
00:00:17.140 --> 00:00:20.350
demo application, a little project.

9
00:00:20.350 --> 00:00:24.705
Now the app we're going to build will not be too complex

10
00:00:24.705 --> 00:00:28.080
but it will be a nice application where we essentially

11
00:00:28.080 --> 00:00:31.480
will be able to manage a couple of projects

12
00:00:31.480 --> 00:00:35.690
where a project essentially is a goal you could say

13
00:00:35.690 --> 00:00:37.582
so that we have lists of projects

14
00:00:37.582 --> 00:00:40.580
and we'll have two lists of projects

15
00:00:40.580 --> 00:00:41.670
an active list

16
00:00:41.670 --> 00:00:43.270
and a finished list

17
00:00:43.270 --> 00:00:46.210
and we'll be able to drag and drop items

18
00:00:46.210 --> 00:00:48.200
from one list to the other

19
00:00:48.200 --> 00:00:49.530
and stuff like that.

20
00:00:49.530 --> 00:00:52.734
Now of course the application itself will be nice

21
00:00:52.734 --> 00:00:54.619
but the most important thing is

22
00:00:54.619 --> 00:00:56.570
that it will allow us to practice

23
00:00:56.570 --> 00:00:59.160
many of the things we learnt thus far

24
00:00:59.160 --> 00:01:02.240
and that's of course the goal of this module.

25
00:01:02.240 --> 00:01:04.210
Now also one important note

26
00:01:04.210 --> 00:01:05.710
for this module

27
00:01:05.710 --> 00:01:07.900
I'm going to write all the code

28
00:01:07.900 --> 00:01:12.010
in one single file in this one single app.ts file

29
00:01:12.010 --> 00:01:17.000
and this therefore will become a very very big file.

30
00:01:17.000 --> 00:01:19.420
In the module after this module

31
00:01:19.420 --> 00:01:21.400
I'll dive into that problem and show you

32
00:01:21.400 --> 00:01:24.660
how TypeSript allows us to split this file

33
00:01:24.660 --> 00:01:27.030
but for the moment, since we don't know this yet

34
00:01:27.030 --> 00:01:29.680
and thus far we had no size issues,

35
00:01:29.680 --> 00:01:32.930
let's focus on our demo application.

36
00:01:32.930 --> 00:01:34.710
And for that we'll actually start

37
00:01:34.710 --> 00:01:37.420
by working on the index.html file.

38
00:01:37.420 --> 00:01:39.100
Attached you'll find a new file

39
00:01:39.100 --> 00:01:42.430
download it and replace all the content

40
00:01:42.430 --> 00:01:44.650
in this starting index.html file

41
00:01:44.650 --> 00:01:46.314
with the downloaded file

42
00:01:46.314 --> 00:01:48.700
and do the same for app.css

43
00:01:48.700 --> 00:01:50.360
there we have no file yet

44
00:01:50.360 --> 00:01:52.870
simply add the file

45
00:01:52.870 --> 00:01:54.410
which you find attached to this lecture

46
00:01:54.410 --> 00:01:57.010
to your project next to index.html

47
00:01:57.010 --> 00:01:59.470
because there we already imported.

48
00:01:59.470 --> 00:02:02.200
So what's going on here in these files?

49
00:02:02.200 --> 00:02:04.560
In the index.html file we're importing

50
00:02:04.560 --> 00:02:06.900
the app.css file for some styling

51
00:02:06.900 --> 00:02:10.484
and the app.js file for some JavaScript logic

52
00:02:10.484 --> 00:02:12.240
of course we're not going to write

53
00:02:12.240 --> 00:02:13.940
any JavaScript code like this

54
00:02:13.940 --> 00:02:15.589
we're going to write code in app.ts

55
00:02:15.589 --> 00:02:19.658
but that will get compiled to a JavaScript file of course.

56
00:02:19.658 --> 00:02:23.320
Now in the body of that html file

57
00:02:23.320 --> 00:02:25.890
you'll find a couple of template tags.

58
00:02:25.890 --> 00:02:28.436
Template tags are default html tags

59
00:02:28.436 --> 00:02:30.427
supported by modern browsers

60
00:02:30.427 --> 00:02:34.080
which allow us to specify some html code

61
00:02:34.080 --> 00:02:36.060
which is not loaded immediately

62
00:02:36.060 --> 00:02:37.870
which is not visible immediately

63
00:02:37.870 --> 00:02:40.600
which is not rendered immediately so to say

64
00:02:40.600 --> 00:02:44.610
but instead which can be reached via JavaScript

65
00:02:44.610 --> 00:02:46.310
and therefore also via TypeScript

66
00:02:46.310 --> 00:02:49.650
to then render it when we wanna render it

67
00:02:49.650 --> 00:02:51.911
to control it with JavaScript and TypeScript

68
00:02:51.911 --> 00:02:54.830
and there you see I have a form

69
00:02:54.830 --> 00:02:57.500
with free inputs basically

70
00:02:57.500 --> 00:03:00.500
a title, a description and a people input

71
00:03:00.500 --> 00:03:03.650
where we can decide what the title of our project is

72
00:03:03.650 --> 00:03:05.550
what the description of our project is

73
00:03:05.550 --> 00:03:07.850
and how many people can be assigned to it

74
00:03:07.850 --> 00:03:09.110
or should be assigned to it

75
00:03:09.110 --> 00:03:11.386
and then the add project button.

76
00:03:11.386 --> 00:03:13.320
Then we have another template

77
00:03:13.320 --> 00:03:15.450
which just holds a list item

78
00:03:15.450 --> 00:03:18.440
that will be used to render a single project

79
00:03:18.440 --> 00:03:20.100
in our list of projects

80
00:03:20.100 --> 00:03:22.360
which is then this template here

81
00:03:22.360 --> 00:03:23.950
there you'll see I have a header

82
00:03:23.950 --> 00:03:25.176
with a h2 section

83
00:03:25.176 --> 00:03:27.280
and then an unordered list

84
00:03:27.280 --> 00:03:30.150
and indeed that unordered list will later hold

85
00:03:30.150 --> 00:03:33.988
multiple single projects based on this template

86
00:03:33.988 --> 00:03:36.880
which will render the data entered here

87
00:03:36.880 --> 00:03:38.490
through the form at the top

88
00:03:38.490 --> 00:03:40.560
and everything will then be appended

89
00:03:40.560 --> 00:03:42.357
with the help of TypeScript

90
00:03:42.357 --> 00:03:45.930
to this div here with the id "app".

91
00:03:45.930 --> 00:03:48.970
Now, app.css just holds some css styles

92
00:03:48.970 --> 00:03:50.790
you can of course look through that

93
00:03:50.790 --> 00:03:52.130
I'll not focus on this here

94
00:03:52.130 --> 00:03:54.020
since it has nothing to do with TypeScript

95
00:03:54.020 --> 00:03:56.960
and now it's our job to write some TypeScript code

96
00:03:56.960 --> 00:04:00.216
which in the end fetches whatever the user enters here

97
00:04:00.216 --> 00:04:03.502
well, actually first of all which renders this form

98
00:04:03.502 --> 00:04:06.400
then fetches whatever the user enters

99
00:04:06.400 --> 00:04:08.390
validates what the user enters

100
00:04:08.390 --> 00:04:11.975
so the title, description and people has valid values

101
00:04:11.975 --> 00:04:15.030
listens to a click on this button

102
00:04:15.030 --> 00:04:18.440
or to the submission of the form to be precise

103
00:04:18.440 --> 00:04:21.430
then creates a new project

104
00:04:21.430 --> 00:04:24.160
so a new JavaScript object in the end

105
00:04:24.160 --> 00:04:26.490
which is stored in some array probably

106
00:04:26.490 --> 00:04:29.490
where this array is then rendered to this list

107
00:04:29.490 --> 00:04:31.920
and of course the entire list also needs to be added

108
00:04:31.920 --> 00:04:32.753
to the dom

109
00:04:32.753 --> 00:04:34.000
so these are all the steps

110
00:04:34.000 --> 00:04:36.790
and of course these are quite a few steps.

111
00:04:36.790 --> 00:04:39.580
Now if you're feeling very confident of course

112
00:04:39.580 --> 00:04:42.900
definitely take this as a chance to pause right now

113
00:04:42.900 --> 00:04:45.080
and try implementing this on your own

114
00:04:45.080 --> 00:04:46.740
no matter how it looks in the end

115
00:04:46.740 --> 00:04:48.141
that you just have a set up

116
00:04:48.141 --> 00:04:49.990
where this forum is visible

117
00:04:49.990 --> 00:04:51.980
where users can enter something there

118
00:04:51.980 --> 00:04:54.295
and where for every project you enter something

119
00:04:54.295 --> 00:04:56.690
you render a list item in this list

120
00:04:56.690 --> 00:04:57.810
which also should be visible

121
00:04:57.810 --> 00:05:00.539
if you reach that, that's already amazing

122
00:05:00.539 --> 00:05:02.630
but of course we'll also implement this

123
00:05:02.630 --> 00:05:04.340
step by step together

124
00:05:04.340 --> 00:05:06.340
and thereafter once this is implemented

125
00:05:06.340 --> 00:05:09.037
we'll also make sure that we actually render tool lists

126
00:05:09.037 --> 00:05:12.620
and we can switch projects between these lists

127
00:05:12.620 --> 00:05:15.440
with drag and drop and so on.

128
00:05:15.440 --> 00:05:17.993
So, first things first though let's get started.

