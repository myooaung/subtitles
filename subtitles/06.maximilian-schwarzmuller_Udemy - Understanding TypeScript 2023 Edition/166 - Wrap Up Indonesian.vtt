WEBVTT

00:02.150 --> 00:05.480
Narator: Dan itu sudah cukup untuk modul ini.

00:05.480 --> 00:08.090
Sekarang jelas, ada banyak sekali perpustakaan pihak ketiga

00:08.090 --> 00:10.130
di luar sana yang bisa Anda gunakan.

00:10.130 --> 00:12.680
Masih banyak lagi yang dapat Anda jelajahi

00:12.680 --> 00:15.806
pada paket Class Validator dan Class Transformer.

00:15.806 --> 00:18.652
Tetapi, idenya di sini bukan untuk menyelami

00:18.652 --> 00:21.410
semua fitur paket-paket ini.

00:21.410 --> 00:24.300
Saya lebih suka menyerahkan hal itu kepada Anda untuk mengeksplorasinya.

00:24.300 --> 00:27.983
Idenya adalah bahwa Anda merasakan dua hal penting: Hal

00:27.983 --> 00:31.575
pertama adalah bahwa, dengan TypeScript, Anda dapat

00:31.575 --> 00:35.600
menggunakan paket JavaScript biasa seperti Lodash tanpa

00:35.600 --> 00:36.719
masalah.

00:36.719 --> 00:39.350
Anda mungkin mendapatkan error pada awalnya, perlu

00:39.350 --> 00:41.767
diingat bahwa secara teknis hal itu berhasil.

00:41.767 --> 00:45.244
Tetapi Anda juga dapat mengatasi kesalahan kompilasi ini

00:45.244 --> 00:49.260
dengan mengimpor tipe yang tepat, terjemahan yang tepat dari JavaScript

00:49.260 --> 00:51.500
ke TypeScript pada akhirnya.

00:51.500 --> 00:54.590
Dan paket terjemahan semacam itu ada untuk semua

00:54.590 --> 00:55.980
pustaka JavaScript utama

00:55.980 --> 00:59.180
dan populer dan bahkan banyak yang kecil.

00:59.180 --> 01:02.221
Anda juga mungkin bekerja dengan pustaka JavaScript

01:02.221 --> 01:04.470
yang memiliki file terjemahan ini,

01:04.470 --> 01:07.110
file DTS yang sudah ada di dalamnya.

01:07.110 --> 01:08.840
Tentu saja, Anda tidak perlu menginstal

01:08.840 --> 01:10.713
terjemahan tersebut setelahnya.

01:11.550 --> 01:14.350
Nah, dan selain pekerjaan Vanilla ini dengan pustaka

01:14.350 --> 01:17.094
yang mungkin memerlukan terjemahan, Anda juga mungkin

01:17.094 --> 01:20.610
memiliki pustaka seperti Class Transformer yang berfungsi dengan

01:20.610 --> 01:24.280
baik dalam Vanilla JavaScript, dalam Vanilla JavaScript modern, setidaknya

01:24.280 --> 01:26.580
di mana Anda juga memiliki kelas, tetapi yang

01:26.580 --> 01:29.430
semuanya berfungsi, tanpa terjemahan tambahan dan proyek

01:29.430 --> 01:31.400
TypeScript.

01:31.400 --> 01:34.960
Dan kemudian kita memiliki paket-paket seperti Class Validator.

01:34.960 --> 01:38.440
Mereka benar-benar merangkul fitur-fitur khusus TypeScript

01:38.440 --> 01:42.370
dan memberi Anda cara baru untuk memikirkan proyek Anda dan memecahkan

01:42.370 --> 01:44.840
masalah tertentu.

01:44.840 --> 01:47.603
Dalam hal ini di sini, dengan memanfaatkan dekorator.

01:48.680 --> 01:51.080
Mengetahui semua hal ini sangat penting dan memberi

01:51.080 --> 01:53.440
Anda semua fleksibilitas yang Anda perlukan untuk proyek-proyek

01:53.440 --> 01:55.253
Anda di masa mendatang.
