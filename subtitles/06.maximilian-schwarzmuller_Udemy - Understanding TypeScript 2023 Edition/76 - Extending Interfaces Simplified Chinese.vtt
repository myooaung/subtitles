WEBVTT

00:02.150 --> 00:05.890
教师：您还可以在接口中实现继承｡

00:05.890 --> 00:16.420
假设我们有另一个接口, Named, 这个接口确保了我们有一个name属性.

00:16.420 --> 00:20.950
现在, 在Person中, 我们可以实现Greetable和Named,

00:20.950 --> 00:24.110
强制它们同时具有greet方法和名称｡

00:24.110 --> 00:25.820
这是我们可以做的｡ 

00:25.820 --> 00:31.810
或者, 如果我们知道Greetable认为greetable对象总是需要有一个名称,

00:31.810 --> 00:36.970
我们可以确保这个Greetable接口实际上扩展了Named接口, 这样,

00:36.970 --> 00:43.460
它们一起形成了一个新的接口, 它迫使每个基于Greetable的对象都有一个greet方法,

00:43.460 --> 00:46.150
而且也有一个名称｡

00:46.150 --> 00:48.840
要做到这一点, 我们可以在这里添加extends,

00:48.840 --> 00:52.700
也可以在接口上添加extends, 我们扩展Named｡

00:52.700 --> 00:55.760
因此, 正如我所说的, 这形成了一个新的接口,

00:55.760 --> 00:58.330
最终, 这个接口迫使我们拥有一个greet方法,

00:58.330 --> 01:04.910
但不仅如此, 它还迫使我们拥有Named接口定义的所有东西.

01:04.910 --> 01:07.150
在本例中为name属性｡ 

01:07.150 --> 01:09.450
所以如果我在这里删除name,

01:09.450 --> 01:14.860
我会得到一个错误, 因为这个类现在不正确地实现了Greetable接口,

01:14.860 --> 01:17.600
因为属性名称丢失了.

01:17.600 --> 01:20.900
这也是我们如何组合接口的方法｡ 

01:20.900 --> 01:23.410
为什么要这样拆分接口？

01:23.410 --> 01:25.600
好吧, 也许你有一个应用程序,

01:25.600 --> 01:27.810
在一些对象上, 你只想强迫它们有一个名字,

01:27.810 --> 01:31.120
而不是一个问候方法, 而在另一些对象上,

01:31.120 --> 01:34.630
你需要问候和名字｡

01:34.630 --> 01:36.830
有了这种分裂, 这是可能的｡ 

01:36.830 --> 01:42.590
有些对象或类可以只实现Named, 而其他对象或类可以实现Greetable,

01:42.590 --> 01:45.990
并被强制同时具有greet和name｡

01:45.990 --> 01:48.490
因此扩展接口是可能的｡ 

01:48.490 --> 01:50.880
在那里你也可以扩展多个｡ 

01:50.880 --> 01:55.060
因此, 您可以将多个接口合并为一个接口｡

01:55.060 --> 01:58.570
我们可以合并另一个接口, 如果我们有它｡ 

01:58.570 --> 02:00.860
仅用逗号分隔｡ 

02:00.860 --> 02:03.570
记住, 对于一个类来说, 这是不可能的｡ 

02:03.570 --> 02:05.710
当您在继承中使用类别时,

02:05.710 --> 02:07.920
只能从一个类别继承｡

02:07.920 --> 02:10.600
不能从多个类继承｡ 

02:10.600 --> 02:12.490
对于接口来说, 这是不同的｡ 

02:12.490 --> 02:14.760
对于接口, 您确实可以从多个接口继承,

02:14.760 --> 02:16.920
因为最终它们会合并在一起,

02:16.920 --> 02:18.920
在这个纯TypeScript特性中,

02:18.920 --> 02:31.733
正如您将看到的, 它实际上没有转换为JavaScript, 因此我们可以打破为JavaScript类设置的规则, 扩展多个接口｡
