WEBVTT

00:02.220 --> 00:04.550
- : Je parle d'un décorateur, que nous pouvons

00:04.550 --> 00:07.350
ajouter et qui lie automatiquement le mot-clé "this"

00:07.350 --> 00:09.930
afin que nous n'ayons pas à appeler bind ici.

00:09.930 --> 00:12.500
Mais nous voulons aussi mettre en pratique

00:12.500 --> 00:14.160
ce que nous avons appris et

00:14.160 --> 00:16.460
si nous devons faire cela à de nombreux

00:16.460 --> 00:20.220
endroits dans notre application, un décorateur, que nous

00:20.220 --> 00:22.730
pouvons simplement ajouter, pourrait

00:22.730 --> 00:24.970
être plus facile.

00:24.970 --> 00:27.100
Alors, débarrassons-nous de ce lien ici.

00:27.100 --> 00:30.010
Et à la place, au-dessus de la classe ici, je vais

00:30.010 --> 00:33.010
ajouter le décorateur auto bind et j'ajoute juste

00:33.010 --> 00:34.920
quelques commentaires ici pour

00:34.920 --> 00:38.750
garder ce fichier organisé, au moins un peu.

00:38.750 --> 00:40.490
Classe ProjectInput Alors,

00:42.260 --> 00:44.790
qu'est-ce qu'un décorateur ?

00:44.790 --> 00:46.770
Un décorateur est une fonction, non ?

00:46.770 --> 00:48.130
Et vous pouvez le trouver soit avec

00:48.130 --> 00:51.383
la décoration de la fonction ici ou comme une expression de la fonction.

00:52.490 --> 00:54.780
Donc, ici je vais utiliser une fonction de décoration,

00:54.780 --> 00:57.780
et je vais la nommer autobind, le nom est à votre convenance.

00:57.780 --> 01:01.670
Et ce décorateur va recevoir en arguments libres la cible, le

01:01.670 --> 01:03.173
nom de la méthode à laquelle

01:04.430 --> 01:06.430
il est lié, parce que je vais créer

01:06.430 --> 01:09.083
un décorateur de méthode ici.

01:09.980 --> 01:12.960
Et aussi le descripteur

01:12.960 --> 01:15.720
de cette méthode.

01:15.720 --> 01:18.370
Euh, descripteur de propriété parce que les méthodes

01:18.370 --> 01:22.760
ne sont finalement que des propriétés, des propriétés qui contiennent des fonctions.

01:22.760 --> 01:24.400
Pourquoi s'agit-il d'un décorateur de méthode ?

01:24.400 --> 01:29.210
Parce que l'idée est que nous pouvons l'ajouter au submitHandler

01:29.210 --> 01:32.210
comme ceci, et en avoir fini avec lui.

01:32.210 --> 01:33.680
C'est l'idée.

01:33.680 --> 01:35.500
Nous ne sommes pas encore tout à fait au point,

01:35.500 --> 01:38.143
mais c'est ainsi que cela devrait fonctionner au final.

01:39.090 --> 01:42.950
Maintenant, pour que cela fonctionne, revenons à notre fonction

01:42.950 --> 01:46.880
là-haut et qu'est-ce qui doit entrer dans le corps de la fonction ?

01:46.880 --> 01:49.490
Eh bien, là-dedans, je veux d'abord avoir

01:49.490 --> 01:51.950
accès à la méthode originale.

01:51.950 --> 01:56.593
Avec le descripteur. de sorte que nous stockons la méthode avec

01:56.593 --> 01:59.380
laquelle nous avons initialement défini.

01:59.380 --> 02:03.540
Puis je veux créer mon descripteur ajusté ici qui

02:03.540 --> 02:04.873
est un objet.

02:06.650 --> 02:11.090
Je vais taper PropertyDescriptor, en fait.

02:11.090 --> 02:13.880
Où configurable doit être mis à true, de sorte que

02:13.880 --> 02:15.910
nous pouvons toujours le changer.

02:15.910 --> 02:17.573
Et où nous avons alors besoin d'un getter.

02:18.510 --> 02:21.770
Et dans ce getter, ici, qui devrait être exécuté lorsque

02:21.770 --> 02:24.270
vous essayez d'accéder à la fonction.

02:24.270 --> 02:27.710
Nous allons configurer la fonction liée ici, en utilisant

02:27.710 --> 02:29.220
la méthode originale que

02:29.220 --> 02:31.030
nous extrayons ici.

02:31.030 --> 02:34.063
Et j'appelle ça une liaison.

02:35.370 --> 02:36.203
Ensuite, je veux

02:37.860 --> 02:40.170
retourner cette fonction liée, et ça

02:40.170 --> 02:41.603
devrait être tout.

02:42.510 --> 02:44.190
Et globalement, bien sûr, je

02:44.190 --> 02:46.620
vais donc renvoyer le descripteur ajusté

02:46.620 --> 02:48.653
dans ce décorateur de méthode.

02:49.510 --> 02:52.880
Maintenant nous avons une erreur avec ça, sur le submitHandler.

02:52.880 --> 02:56.020
Le support expérimental des décorateurs est une fonctionnalité

02:56.020 --> 02:57.960
qui doit être activée.

02:57.960 --> 03:00.400
Donc on va aller dans le fichier tsconfig,

03:00.400 --> 03:02.320
et là on fait défiler vers le bas.

03:02.320 --> 03:05.770
Vous devriez trouver l'option "experimentalDecorators"

03:05.770 --> 03:07.450
et la commenter.

03:07.450 --> 03:09.980
Et ajoutez une virgule devant.

03:09.980 --> 03:14.183
Sauvegardez-le, puis redémarrez le processus de compilation des types.

03:15.180 --> 03:17.700
Maintenant, il me montre encore quelques erreurs ici,

03:17.700 --> 03:18.913
si je développe ceci, le methodName

03:20.212 --> 03:23.170
est déclaré, mais sa valeur n'est jamais lue.

03:23.170 --> 03:25.410
Dans l'application. ts ligne quatre.

03:25.410 --> 03:26.760
Il s'agit de cet argument,

03:26.760 --> 03:29.020
que j'ai reçu ici et que je n'ai

03:29.020 --> 03:30.940
jamais utilisé.

03:30.940 --> 03:34.370
C'est la même chose pour la cible, je ne l'ai jamais utilisée.

03:34.370 --> 03:36.343
Il y a deux façons de résoudre ce problème.

03:37.200 --> 03:39.610
Une façon de procéder est d'aller dans la

03:39.610 --> 03:42.813
tsconfig, et de relâcher nos règles de rigueur, ici.

03:44.160 --> 03:46.740
noUnusedParameters, si nous mettons cette valeur à false,

03:46.740 --> 03:49.090
nous autorisons les paramètres non utilisés.

03:49.090 --> 03:50.670
Donc, ce serait une chose,

03:50.670 --> 03:52.910
ou vous utilisez les noms spéciaux

03:52.910 --> 03:54.053
underscore, et underscore

03:55.180 --> 03:56.653
deux.

03:57.770 --> 04:01.860
Il s'agit en fait d'une indication pour typescript et javascript que vous êtes conscient

04:01.860 --> 04:03.130
que vous n'allez pas utiliser

04:03.130 --> 04:04.800
ces valeurs, mais que vous devez les

04:04.800 --> 04:05.930
accepter parce que vous

04:05.930 --> 04:08.740
avez besoin de l'argument qu'elles recherchent.

04:08.740 --> 04:11.810
Si vous sauvegardez maintenant, cela compile sans erreurs

04:11.810 --> 04:14.700
et si nous revenons en arrière et entrons hello here et

04:14.700 --> 04:17.040
soumettons ceci, cela fonctionne toujours

04:17.040 --> 04:20.060
maintenant grâce à notre décorateur auto bind.

04:20.060 --> 04:23.120
Ce qui, espérons-le, montre aussi que ce décorateur

04:23.120 --> 04:24.950
peut avoir une réelle utilité.

04:24.950 --> 04:27.530
Bien sûr, il y a ici un peu plus de travail que

04:27.530 --> 04:29.510
de simplement appeler bind.

04:29.510 --> 04:32.120
Mais imaginez que cela soit utilisé sur de plus en plus de méthodes

04:32.120 --> 04:33.820
qui doivent toutes être liées.

04:33.820 --> 04:36.140
En évitant d'appeler manuellement

04:36.140 --> 04:38.140
cette fonction, vous pouvez gagner

04:38.140 --> 04:40.430
du temps et éviter des erreurs potentielles

04:40.430 --> 04:42.343
en cas d'oubli.
