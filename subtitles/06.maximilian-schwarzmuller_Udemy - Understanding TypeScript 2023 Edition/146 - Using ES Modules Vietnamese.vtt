WEBVTT

00:02.400 --> 00:04.350
Giảng viên: Không gian tên khá đẹp,

00:04.350 --> 00:07.240
nhưng chúng không nhất thiết phải hoàn hảo.

00:07.240 --> 00:09.680
Chúng tôi đã thấy một vấn đề trong bài giảng

00:09.680 --> 00:13.290
trước khi tôi thêm thủ công tất cả các phụ lục vào mỗi tệp.

00:13.290 --> 00:15.620
Khi tôi xóa, kéo và thả khỏi danh sách

00:15.620 --> 00:17.340
dự án, chẳng hạn, nó vẫn biên

00:17.340 --> 00:18.900
dịch mà không có lỗi.

00:18.900 --> 00:20.350
Điều này không lý tưởng.

00:20.350 --> 00:22.360
Bây giờ, nó có thể hoạt động hoặc không,

00:22.360 --> 00:25.047
tùy thuộc vào việc một số tệp khác có nhập mô hình kéo-thả

00:25.047 --> 00:26.590
mà tôi, cuối cùng, cần ở đây hay

00:26.590 --> 00:27.550
không.

00:27.550 --> 00:29.100
Đó sẽ là trường hợp ở đây.

00:29.100 --> 00:31.533
Vì vậy, về mặt kỹ thuật, ngay cả sau khi loại bỏ

00:31.533 --> 00:33.200
cái này, nó vẫn hoạt động ở đây.

00:33.200 --> 00:35.580
Nhưng điều này không tuyệt vời, điều này khá nguy hiểm.

00:35.580 --> 00:38.560
Nếu chúng tôi dựa vào thực tế là một số tệp sẽ xử lý nó cho

00:38.560 --> 00:41.990
chúng tôi, thì nếu sau đó chúng tôi xóa hoặc thay đổi tệp đó đã

00:41.990 --> 00:44.830
cứu chúng tôi, chúng tôi đột nhiên thay đổi một thứ

00:44.830 --> 00:47.740
hoàn toàn không liên quan và ứng dụng của chúng tôi

00:47.740 --> 00:49.240
ngừng hoạt động.

00:49.240 --> 00:51.420
Chúng tôi chắc chắn không muốn điều đó.

00:51.420 --> 00:53.900
Vì vậy, sẽ thật tuyệt nếu chúng tôi có

00:53.900 --> 00:58.050
các mục nhập và xuất nêu rõ những gì chúng tôi nhập từ tệp nào.

00:58.050 --> 00:59.660
Và nếu chúng tôi cần một cái gì

00:59.660 --> 01:01.120
đó ở đây, ví dụ như Kéo mục tiêu

01:01.120 --> 01:03.400
và chúng tôi không nhập nó một cách rõ ràng,

01:03.400 --> 01:04.840
chúng tôi sẽ gặp lỗi.

01:04.840 --> 01:06.450
Đó là cơ bản những gì chúng tôi muốn.

01:06.450 --> 01:10.235
Và chúng tôi có hành vi này với các mô-đun ES6.

01:10.235 --> 01:12.930
Giờ đây, các mô-đun ES6 cũng tồn tại bên ngoài

01:12.930 --> 01:14.800
thế giới, các trình duyệt hiện

01:14.800 --> 01:17.340
đại hỗ trợ chúng nguyên bản, khi đó trình

01:17.340 --> 01:19.630
duyệt sẽ tải xuống về cơ bản tất cả các

01:19.630 --> 01:22.960
phụ lục của một tệp khi nó thực thi.

01:22.960 --> 01:25.150
Nhưng các loại cũng có thể nhập chúng và sau

01:25.150 --> 01:28.350
đó nhận hỗ trợ loại ban đầu khi chúng tôi sử dụng chúng.

01:28.350 --> 01:31.007
Bây giờ làm thế nào để các mô-đun ES6 hoạt động?

01:31.007 --> 01:33.600
Hãy bắt đầu lại với thao tác kéo và thả.

01:33.600 --> 01:35.240
Hãy xóa thứ không gian tên đó

01:35.240 --> 01:37.360
là một kiểu confeature thuần túy.

01:37.360 --> 01:40.030
Hãy giữ từ khóa xuất mặc dù.

01:40.030 --> 01:42.150
Từ khóa xuất khẩu không chỉ ở đó để làm

01:42.150 --> 01:44.290
việc với các không gian tên, nó thực

01:44.290 --> 01:46.980
sự là một cú pháp tập lệnh Java mặc định, tất

01:46.980 --> 01:49.800
cả đều quan trọng đối với tập lệnh typ.

01:49.800 --> 01:52.360
Điều đó có nghĩa là bạn xuất chuyển

01:52.360 --> 01:53.600
kỳ này và kỳ này ở đây

01:53.600 --> 01:56.870
cũng từ tệp này và sau đó bạn có thể nhập nó vào

01:56.870 --> 01:58.460
một tệp khác.

01:58.460 --> 02:01.290
Trong trường hợp của chúng tôi ở đây, chúng tôi cần nó trong

02:01.290 --> 02:02.980
các tệp danh sách dự án và mục dự án.

02:02.980 --> 02:05.230
Bây giờ hãy bắt đầu với mục dự án.

02:05.230 --> 02:09.030
Để nhập nội dung nào đó từ mô-đun ES, do đó, với

02:09.030 --> 02:11.450
cú pháp mô-đun ES đó, bạn chỉ

02:11.450 --> 02:14.440
định nhập ở đầu tệp hoặc gần đầu tệp

02:14.440 --> 02:16.110
trước khi bắt đầu viết

02:16.110 --> 02:18.970
bất kỳ mã thực tế nào.

02:18.970 --> 02:23.240
Nhập từ và sau đó bạn chỉ vào tệp đó bằng một đường

02:23.240 --> 02:26.220
dẫn tương đối từ tệp mà bạn đang

02:26.220 --> 02:27.320
nhập.

02:27.320 --> 02:29.340
Vì vậy, trong trường hợp này, chúng ta cần lên cấp

02:29.340 --> 02:31.030
I với hai dấu chấm và một dấu gạch chéo.

02:31.030 --> 02:32.509
Vì vậy, chúng tôi đang ở trong

02:32.509 --> 02:35.550
thư mục nguồn, sau đó chúng tôi cần vào đây thư mục mô-đun

02:35.550 --> 02:37.450
và nhập kéo và thả.

02:37.450 --> 02:40.480
Điều quan trọng bây giờ, hãy thêm dấu chấm JS

02:40.480 --> 02:43.480
vào đây, bởi vì bạn cần nhập như thể nó đã được

02:43.480 --> 02:46.470
biên dịch, bởi vì điều này sẽ được đưa vào tập

02:46.470 --> 02:49.130
lệnh Java thuần túy và sau đó nó sẽ tìm tập

02:49.130 --> 02:50.860
lệnh Java ở đó để tìm các tệp

02:50.860 --> 02:53.580
tập lệnh Java, vì vậy cần có dấu chấm JS

02:53.580 --> 02:55.010
thêm.

02:55.010 --> 02:57.560
Bây giờ bạn nhập nội dung nào đó từ đó và sau đó

02:57.560 --> 02:59.320
bạn thêm dấu ngoặc nhọn giữa các

02:59.320 --> 03:01.500
dấu ngoặc nhọn mà bạn chỉ định nội dung

03:01.500 --> 03:03.150
bạn muốn nhập từ tệp đó.

03:03.150 --> 03:06.430
Ở đó tôi đã hoàn thành tự động. Tôi muốn

03:06.430 --> 03:08.480
nhập có thể kéo được.

03:08.480 --> 03:10.910
Bây giờ có thể kéo được ở đây và các

03:10.910 --> 03:14.430
loại thấy rằng nó không có sẵn và rất vui.

03:14.430 --> 03:16.860
Bây giờ chúng ta cần chuyển đổi mọi thứ để nó có thể hiển thị

03:16.860 --> 03:17.930
trong thời gian chạy.

03:17.930 --> 03:20.370
Vì vậy, hãy loại bỏ không gian tên ở đây.

03:20.370 --> 03:22.340
Bây giờ cũng phải đóng dấu ngoặc nhọn.

03:22.340 --> 03:24.870
Và bây giờ, ví dụ ở đây, bây giờ chúng tôi nhận được những

03:24.870 --> 03:27.540
gì chúng tôi muốn, chúng tôi gặp lỗi, chúng tôi gặp lỗi thành

03:27.540 --> 03:29.650
phần, dự án, tất cả điều này đều bị thiếu.

03:29.650 --> 03:31.890
Vì vậy, hãy xuất và nhập tất cả những thứ này.

03:31.890 --> 03:33.220
Ví dụ: trong thành phần cơ

03:33.220 --> 03:34.540
sở, hãy loại bỏ không gian

03:34.540 --> 03:36.810
tên, giữ nguyên từ khóa xuất như bạn đã học.

03:36.810 --> 03:38.270
Loại bỏ dấu ngoặc nhọn

03:38.270 --> 03:40.810
đóng và định dạng lại và nhập dự án.

03:40.810 --> 03:43.380
Chúng ta luôn có thể thoát khỏi không gian tên.

03:43.380 --> 03:45.760
Và tất cả các tham chiếu ở đây, bạn thực sự có thể

03:45.760 --> 03:48.803
xóa tất cả các mục nhập tham chiếu mà bạn có ở bất kỳ đâu.

03:51.300 --> 03:53.593
Loại bỏ tất cả các dấu ngoặc nhọn không gian tên.

03:55.010 --> 03:56.950
Danh sách dự án, loại bỏ tất cả không

03:56.950 --> 03:58.466
gian tên và tham chiếu, loại

03:58.466 --> 04:00.690
bỏ dấu ngoặc nhọn đóng ở dưới đó.

04:00.690 --> 04:03.320
Và các bộ trang trí, hãy loại bỏ không gian

04:03.320 --> 04:05.330
tên và dấu ngoặc nhọn đóng và kéo

04:05.330 --> 04:07.940
và thả, chúng tôi đã loại bỏ nó.

04:07.940 --> 04:10.230
Project, loại bỏ không gian tên

04:10.230 --> 04:11.920
và dấu ngoặc nhọn đóng.

04:11.920 --> 04:14.460
Dự án ở lại không có gì đáng ngạc nhiên khi loại

04:14.460 --> 04:16.223
bỏ không gian tên và phần đóng.

04:18.390 --> 04:22.620
Dấu ngoặc nhọn ở đây chúng tôi thực sự dựa vào dự án được nhập bởi

04:22.620 --> 04:24.740
một số tệp khác, tôi không có tài

04:24.740 --> 04:26.620
liệu tham khảo về nó ở đây.

04:26.620 --> 04:28.770
Vì vậy, đó là hành vi nguy hiểm mà tôi

04:28.770 --> 04:29.880
đang nói đến.

04:29.880 --> 04:31.871
Điều này có thể đã thất bại nếu chúng tôi không

04:31.871 --> 04:35.120
nhập hoặc nếu chúng tôi không tham chiếu phần dự án của mình trong không

04:35.120 --> 04:36.710
gian tên trong một số tệp khác.

04:36.710 --> 04:39.090
Vì vậy, đó chắc chắn không phải là lý tưởng.

04:39.090 --> 04:41.560
Nhưng với điều đó, hãy tiếp tục tái cấu trúc của chúng tôi.

04:41.560 --> 04:44.430
Trong quá trình xác thực ở đây, hãy loại bỏ không gian

04:44.430 --> 04:46.050
tên ở đây và tất cả dấu ngoặc nhọn

04:46.050 --> 04:47.550
đóng ở đây, ở dưới cùng.

04:47.550 --> 04:49.150
Và cuối cùng nhưng không kém phần quan trọng

04:49.150 --> 04:51.503
là ứng dụng TS, hãy loại bỏ các mục nhập này và không gian tên.

04:52.700 --> 04:55.350
Vì vậy, bây giờ chúng tôi có lỗi ở khắp mọi nơi nhưng bây

04:55.350 --> 04:56.988
giờ chúng tôi có thể bắt đầu lại.

04:56.988 --> 04:59.560
Bây giờ chúng ta có thể bắt đầu lại trong thành phần cơ sở.

04:59.560 --> 05:01.610
Điều này có vẻ tốt, nó không phàn

05:01.610 --> 05:03.700
nàn dường như có mọi thứ nó muốn.

05:03.700 --> 05:06.250
Dự án nhập khẩu, tốt, nó đang phàn nàn.

05:06.250 --> 05:08.450
Ví dụ, ở đó chúng ta cần thành phần.

05:08.450 --> 05:12.070
Vì vậy, hãy thêm một phần nhập ở trên cùng và cho phép

05:12.070 --> 05:15.830
nhập thành phần từ thành phần cơ sở dấu gạch chéo.

05:15.830 --> 05:18.410
Đây là cách bạn nhập một cách tương đối nếu một cái gì

05:18.410 --> 05:19.990
đó nằm trong cùng một thư mục.

05:19.990 --> 05:22.370
Dấu gạch chéo ở đầu, sau đó là tên tệp và sau đó

05:22.370 --> 05:24.490
tất cả đều quan trọng là dấu chấm JS.

05:24.490 --> 05:26.753
Đừng quên dấu chấm JS ở cuối.

05:28.100 --> 05:30.250
Bây giờ chúng ta cũng cần giai đoạn

05:31.170 --> 05:34.650
xen kẽ có thể xác thực ở đây và phương thức xác thực, tâm

05:34.650 --> 05:36.810
trí tự động và trạng thái dự án.

05:36.810 --> 05:39.140
Vì vậy, hãy nhập tất cả những

05:39.140 --> 05:44.080
thứ này, hãy nhập từ dấu gạch chéo hoặc không tăng một cấp

05:44.080 --> 05:46.149
rồi sử dụng sau đó xác thực

05:46.149 --> 05:49.460
dấu chấm JS, hãy nhập từ Tệp đó, có thể xác

05:49.460 --> 05:52.100
thực và chức năng xác thực và nhập

05:53.010 --> 05:56.250
liên kết tự động từ đó, tăng một cấp trình

05:56.250 --> 06:00.350
trang trí tự động liên kết JS.

06:00.350 --> 06:02.600
Và cuối cùng nhưng không kém phần quan

06:02.600 --> 06:05.220
trọng, trạng thái dự án, hãy nhập từ trạng thái

06:05.220 --> 06:07.580
dự án tăng lên một cấp trạng thái JS .

06:07.580 --> 06:11.000
Từ đó, chúng tôi có thể nhập hằng số trạng thái

06:11.000 --> 06:13.250
dự án mà chúng tôi xuất ở đó.

06:13.250 --> 06:15.390
Bây giờ đây là tất cả các lần nhập chúng tôi cần ở đây

06:15.390 --> 06:16.773
để làm cho tệp này hoạt động.

06:18.190 --> 06:20.480
Vì vậy, hãy chuyển sang mục dự án ngay bây giờ.

06:20.480 --> 06:23.270
Trong đó chúng ta cần autobind, chúng ta cần thành phần,

06:23.270 --> 06:24.853
chúng ta cần mô hình dự án.

06:24.853 --> 06:26.700
Vì vậy, hãy thêm tất cả những điều này.

06:26.700 --> 06:30.520
Ví dụ, hãy nhập mô hình dự án từ dự án

06:30.520 --> 06:34.523
mô hình dấu gạch chéo dấu chấm JS.

06:35.580 --> 06:38.080
Hãy cũng thêm thành phần nằm trong

06:39.340 --> 06:41.110
cùng một thư mục.

06:41.110 --> 06:45.530
Vì vậy, hãy nhập JS thành phần cơ sở dấu gạch chéo và liên

06:45.530 --> 06:49.020
kết tự động, hãy nhập liên kết tự động từ trình

06:50.790 --> 06:55.790
trang trí dấu gạch chéo dấu chấm tự động liên kết JS.

06:56.020 --> 06:59.383
Và bây giờ tập tin này ở đây cũng có mọi thứ nó cần.

07:01.260 --> 07:03.410
Bây giờ hãy chuyển sang danh sách dự án.

07:03.410 --> 07:06.610
Ở đây trong danh sách dự án, chúng tôi cũng cần thành

07:06.610 --> 07:10.250
phần như vậy, vì vậy chúng tôi thực sự sẽ sao chép nó ở đây

07:10.250 --> 07:14.260
từ mục dự án thêm nó vào danh sách dự án TS, nhưng chúng tôi không

07:14.260 --> 07:16.120
cần kéo ở đây mà thay vào đó hãy

07:16.120 --> 07:19.420
kéo mục tiêu, vì vậy hãy nhập cái đó .

07:19.420 --> 07:22.307
Và ngoài ra, chúng ta cần trạng thái

07:22.307 --> 07:24.550
dự án trạng thái dự án.

07:24.550 --> 07:26.540
Vâng, đây là những thứ chúng ta cần.

07:26.540 --> 07:28.780
Và cũng là hạng mục dự án.

07:28.780 --> 07:31.030
Vì vậy, từ tệp mô hình dự án, chúng tôi cũng

07:31.030 --> 07:32.720
có thể nhập trạng thái dự án.

07:32.720 --> 07:35.340
Bạn có thể nhập nhiều nội dung đã xuất từ một trong

07:35.340 --> 07:36.840
cùng một tệp bằng cách tách

07:36.840 --> 07:38.730
chúng bằng dấu phẩy giữa các dấu

07:38.730 --> 07:41.740
ngoặc nhọn này giống như bạn đang thấy ở đây.

07:41.740 --> 07:45.910
Chúng tôi cũng nhập hằng số trạng thái dự án từ thư mục trạng

07:46.790 --> 07:48.790
thái, trạng thái dự án JS và

07:48.790 --> 07:52.470
cũng nhập cuối cùng nhưng không kém phần quan trọng,

07:52.470 --> 07:54.790
ở đây, ở dưới cùng, chúng tôi cần

07:54.790 --> 07:57.130
nó, lớp mục dự án.

07:57.130 --> 08:01.770
Vì vậy, hãy nhập mục dự án từ mục dự án dấu gạch

08:01.770 --> 08:03.623
chéo dot JS.

08:06.810 --> 08:08.280
Vì vậy, hãy tiếp tục.

08:08.280 --> 08:11.280
Autobind vẫn ổn, trạng thái dự án phàn nàn

08:11.280 --> 08:13.600
ở đó chúng tôi cần mô hình dự án.

08:13.600 --> 08:15.740
Vì vậy, ở trên cùng,

08:16.820 --> 08:20.300
hãy nhập dự án từ dự án dot JS mô

08:20.300 --> 08:22.823
hình lên một cấp độ.

08:24.450 --> 08:27.630
Chúng tôi cũng đang sử dụng trạng thái dự án ở đây, vì vậy hãy nhập trạng

08:27.630 --> 08:29.573
thái đó từ cùng một tệp đó' Và cùng với đó,

08:32.320 --> 08:33.960
cuối cùng nhưng không kém phần quan

08:33.960 --> 08:35.660
trọng, chúng tôi nhận được tệp TS của

08:35.660 --> 08:38.810
ứng dụng mà chúng tôi cần nhập dữ liệu đầu vào của dự án.

08:38.810 --> 08:43.610
từ đầu vào dự án các thành phần dấu gạch chéo.

08:43.610 --> 08:48.030
JS và danh sách dự án từ danh sách dự án JS' Nếu bây giờ

08:49.290 --> 08:52.280
chúng ta đã lưu cái này thì nó sẽ biên

08:52.280 --> 08:54.330
dịch mà không có lỗi và bây

08:54.330 --> 08:58.500
giờ chúng ta đang sử dụng các mô-đun ES6 để tổ chức

08:58.500 --> 09:00.823
nhập và xuất.

09:02.640 --> 09:05.460
Nếu chúng tôi xem trình duyệt mặc dù

09:05.460 --> 09:07.040
chúng tôi gặp lỗi.

09:07.040 --> 09:09.390
Bây giờ lý do cho điều đó là nếu chúng tôi kiểm tra thư

09:09.390 --> 09:12.013
mục dist, chúng tôi đã nhận được tệp JS gói của mình.

09:13.040 --> 09:15.900
Bây giờ chúng ta cần chuyển cấu hình TS một lần nữa.

09:15.900 --> 09:19.070
Đối với một điều ở đây, chúng ta không nên sử dụng

09:19.070 --> 09:22.420
AMD ngay bây giờ mà thay vào đó là ES 2015.

09:22.420 --> 09:25.710
Than về cơ bản là từ mã cho ES6, là phiên bản

09:25.710 --> 09:27.240
tập lệnh agma đã giới

09:27.240 --> 09:29.300
thiệu các mô-đun ES.

09:29.300 --> 09:31.260
Vì vậy, về cơ bản, chúng tôi đang nói với tập

09:31.260 --> 09:34.480
lệnh loại không chuyển đổi quá trình nhập của chúng tôi thành bất kỳ thứ

09:34.480 --> 09:36.240
gì, hãy giữ nguyên như hiện tại.

09:36.240 --> 09:39.250
Các trình duyệt hiện đại sẽ hiểu nó.

09:39.250 --> 09:41.290
Vì vậy, điều đó rất quan trọng, đồng thời

09:41.290 --> 09:43.433
đảm bảo rằng bạn có mục tiêu là ES6 hoặc cao

09:44.950 --> 09:47.530
hơn tại đây' Bây giờ, bạn cũng nên nhận xét lại tệp

09:47.530 --> 09:50.670
out, vì điều đó không được hỗ trợ với các mô-đun ES.

09:50.670 --> 09:53.590
Và với điều đó, những gì bạn nhận được trong thư

09:53.590 --> 09:56.610
mục dist về cơ bản là một bản sao của thư mục nguồn

09:56.610 --> 09:58.690
nhưng với các tệp tập lệnh Java.

09:58.690 --> 10:00.480
Vì vậy, bây giờ chúng ta cũng cần quay

10:00.480 --> 10:03.120
lại tệp HDML chỉ mục và nhập lại JS ứng dụng, vì hiện

10:03.120 --> 10:04.840
tại chúng ta có một tệp JS ứng dụng

10:04.840 --> 10:06.350
trong thư mục dist.

10:06.350 --> 10:08.910
Và một lần nữa, tệp JS của ứng dụng này sẽ có các câu lệnh nhập

10:08.910 --> 10:11.180
của bạn trong đó, bởi vì, như tôi đã đề cập, điều này

10:11.180 --> 10:13.830
được hỗ trợ bởi tập lệnh Java, bởi các công cụ tập lệnh Java

10:13.830 --> 10:15.900
hiện đại và bởi các trình duyệt hiện đại.

10:15.900 --> 10:17.440
Do đó, trình duyệt sẽ giải

10:17.440 --> 10:19.440
quyết các lần nhập này cho bạn.

10:19.440 --> 10:22.430
Vì vậy, nếu bây giờ chúng tôi tải lại cái này, huh,

10:22.430 --> 10:24.240
chúng tôi vẫn gặp lỗi.

10:24.240 --> 10:27.310
Không thể sử dụng câu lệnh nhập bên ngoài mô-đun.

10:27.310 --> 10:30.630
Các trình duyệt hiện đại hỗ trợ sintex này nhưng bạn phải

10:30.630 --> 10:33.150
nói với họ rằng bạn muốn sử dụng nó.

10:33.150 --> 10:37.470
Và bạn nói với họ bằng cách xóa (lầm bầm) ở đây và thay vào

10:37.470 --> 10:39.670
đó trên thẻ tập lệnh, nơi bạn

10:39.670 --> 10:42.777
nhập tệp có các câu lệnh nhập này.

10:42.777 --> 10:46.313
Bạn sử dụng loại bằng mô-đun.

10:47.300 --> 10:50.450
Nếu bây giờ bạn bảo vệ ứng dụng này, bạn sẽ thấy ứng dụng này hoạt

10:50.450 --> 10:53.440
động và bây giờ nếu chúng tôi thêm thứ gì đó vào đây, chúng

10:53.440 --> 10:56.120
tôi sẽ nhận được ứng dụng hoạt động trở lại.

10:56.120 --> 10:58.910
Bây giờ, nếu bạn kiểm tra tab mạng bằng cách

10:58.910 --> 11:01.680
này, bạn sẽ thấy rằng nếu bạn tải lại, sẽ có một

11:01.680 --> 11:05.290
loạt yêu cầu mạng đang diễn ra, nếu tôi thu nhỏ một chút,

11:05.290 --> 11:07.410
chúng ta có thể thấy rõ hơn.

11:07.410 --> 11:10.340
Tất cả các tập lệnh Java của chúng tôi được yêu cầu ở đây.

11:10.340 --> 11:12.810
Chúng được trình duyệt tự động yêu cầu khi nó bắt

11:12.810 --> 11:14.780
gặp quá trình nhập của chúng tôi.

11:14.780 --> 11:16.967
Vì vậy, nó bắt đầu với ứng dụng JS, sau

11:16.967 --> 11:19.410
đó nó thấy nhập vào dự án đầu vào JS.

11:19.410 --> 11:21.990
Tất nhiên, tại đây và do đó, yêu cầu tiếp theo

11:21.990 --> 11:23.160
là đầu vào của dự án.

11:23.160 --> 11:25.410
Nó cũng làm tương tự cho danh sách dự án.

11:25.410 --> 11:27.360
Bây giờ, trong đầu vào dự án chẳng

11:27.360 --> 11:29.422
hạn, nó sẽ thấy đầu vào từ JS thành phần

11:29.422 --> 11:31.450
cơ sở, đó là lý do tại sao nó cũng nhập

11:31.450 --> 11:33.400
JS thành phần cơ sở thăm dò.

11:33.400 --> 11:35.530
Vì vậy, điều đó được thực hiện bởi trình

11:35.530 --> 11:38.170
duyệt ở đây, chúng tôi tận dụng lợi thế của nó và

11:38.170 --> 11:40.850
bây giờ chúng tôi có một cách khác để chia nhỏ các

11:40.850 --> 11:43.750
tệp của mình nhưng với lợi thế bổ sung là chúng tôi nêu

11:43.750 --> 11:45.850
rõ những gì chúng tôi cần từ mỗi tệp và

11:45.850 --> 11:49.100
nếu chúng tôi bỏ qua thao tác nhập, tập lệnh nhập sẽ mắng chúng

11:49.100 --> 11:51.127
tôi , điều mà cách tiếp cận trước đó không

11:51.127 --> 11:53.400
làm được, đó là cách tiếp cận này thực sự

11:53.400 --> 11:56.670
là đề xuất của tôi và tại sao nó là cách nhập và xuất tiêu chuẩn

11:56.670 --> 11:58.870
thực tế.

11:58.870 --> 12:00.710
Bây giờ, nếu bạn đã từng làm việc với

12:00.710 --> 12:03.850
type script trong các dự án khác, giả sử trong một dự án góc cạnh,

12:03.850 --> 12:06.380
bạn cũng có thể quen với việc không phải chỉ định phần

12:06.380 --> 12:07.980
mở rộng tệp ở đây. Chà, chúng ta

12:07.980 --> 12:09.270
cũng có thể bỏ qua điều đó khi

12:09.270 --> 12:10.820
chúng ta thêm gói web và một công

12:10.820 --> 12:12.210
cụ hóa đơn.

12:12.210 --> 12:14.580
Miễn là chúng tôi không có điều đó và chúng tôi

12:14.580 --> 12:16.870
dựa vào trình duyệt để nhập tệp của mình, bạn

12:16.870 --> 12:18.833
cần thêm tiện ích mở rộng bổ sung đó.
