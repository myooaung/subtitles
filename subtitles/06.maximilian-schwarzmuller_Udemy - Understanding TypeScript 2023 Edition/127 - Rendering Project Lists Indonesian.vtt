WEBVTT

00:02.370 --> 00:05.290
Narator: Jadi, sekarang kita bisa mengambil input pengguna

00:05.290 --> 00:08.630
dan semua yang divalidasi dengan bantuan TypeScript kita, logika

00:08.630 --> 00:11.420
validasi yang digerakkan di sini.

00:11.420 --> 00:13.810
Mari kita lanjutkan dan mari kita pastikan kita melakukan

00:13.810 --> 00:17.400
lebih banyak hal dengan input pengguna yang terkumpul itu daripada hanya mengeluarkannya

00:17.400 --> 00:18.420
di konsol.

00:18.420 --> 00:19.450
Karena saat ini, tentu saja

00:19.450 --> 00:21.330
ada apa yang sedang kita lakukan, benar.

00:21.330 --> 00:24.670
Pada akhirnya, saya hanya mencetak informasi perbuatan yang

00:24.670 --> 00:26.030
kami kumpulkan untuk melakukan

00:26.030 --> 00:30.300
konsol, dan itu bukan tujuan akhir kami dalam aplikasi ini.

00:30.300 --> 00:34.290
Alih-alih, tujuannya adalah, seharusnya kita juga membuat daftar

00:34.290 --> 00:37.770
proyek di sini berdasarkan templat ini, di mana setiap

00:37.770 --> 00:41.550
item proyek didasarkan pada templat ini di sini.

00:41.550 --> 00:45.750
Dan kami mengeluarkan informasi yang kami kumpulkan di sini.

00:45.750 --> 00:48.520
Jadi, itu akan menjadi hal berikutnya, yang ingin saya kerjakan.

00:48.520 --> 00:52.970
Selain memiliki klausa input proyek di sini, yang bertanggung jawab

00:52.970 --> 00:55.440
untuk merender forum dan mengumpulkan

00:55.440 --> 00:57.350
input pengguna, saya ingin memiliki

00:57.350 --> 00:59.410
klausa jumlah yang bertanggung

00:59.410 --> 01:03.230
jawab untuk merender daftar proyek.

01:03.230 --> 01:06.100
Dan sebenarnya kita akan membaginya menjadi dua klausa.

01:06.100 --> 01:07.650
Satu klausa untuk daftar

01:07.650 --> 01:11.000
dan satu kelas per item proyek dalam daftar.

01:11.000 --> 01:14.970
Dan kemudian kita perlu menemukan beberapa cara untuk meneruskan input

01:14.970 --> 01:18.500
yang terkumpul di sini pada dasarnya ke daftar proyek kita dan menambahkan

01:18.500 --> 01:20.650
item baru ke dalamnya.

01:20.650 --> 01:23.420
Jadi, mari kita selesaikan ini langkah demi langkah, menurut

01:23.420 --> 01:26.880
saya, dan mari kita mulai dengan menambahkan kelas daftar proyek.

01:26.880 --> 01:29.380
Sekarang di tempat yang tepat di mana Anda menambahkan, terserah Anda.

01:29.380 --> 01:32.900
Urutan tidak menjadi masalah karena Java script pada akhirnya akan

01:32.900 --> 01:36.430
mengurai seluruh file ini seluruhnya sebelum mengeksekusinya.

01:36.430 --> 01:38.860
Jadi, ia akan mengetahui semua kelas.

01:38.860 --> 01:41.990
Namun, saya akan menambahkannya di sini di atas klausa input

01:41.990 --> 01:45.740
proyek karena saya agak bergantung pada klausa daftar proyek, yang akan

01:45.740 --> 01:48.810
saya bangun di dalam kelas input proyek, tetapi sekali lagi

01:48.810 --> 01:50.500
itu benar-benar penting.

01:50.500 --> 01:55.500
Jadi, di sini saya akan memiliki klausa daftar proyek saya, daftar proyek, dan

01:55.600 --> 01:59.230
ide klausa ini di sini sedikit terkait dengan apa yang kita

01:59.230 --> 02:01.170
lakukan dalam input proyek.

02:01.170 --> 02:04.300
Saya ingin menjangkau templat saya di sini dan kemudian merendernya

02:04.300 --> 02:06.930
di tempat tertentu dari aplikasi.

02:06.930 --> 02:09.480
Dan oleh karena itu, apa yang dapat kita lakukan di

02:09.480 --> 02:13.120
sini adalah kita dapat menambahkan konstruktor lagi, kita dapat menambahkan

02:13.120 --> 02:15.310
field yang kita butuhkan dan pada akhirnya

02:15.310 --> 02:17.030
akan membutuhkan elemen template

02:17.030 --> 02:22.030
dan elemen host, jadi, kita dapat menambahkan keduanya di sini ke daftar proyek kita.

02:22.440 --> 02:25.190
Kita juga perlu elemen itu sendiri,

02:25.190 --> 02:29.640
saya akan mengatakan elemen beton, yang akan dirender.

02:29.640 --> 02:31.800
Dan jenisnya pun akan berbeda.

02:31.800 --> 02:34.580
Elemen host akan tetap berupa div karena

02:34.580 --> 02:38.330
saya ingin merender daftar itu di div itu juga di sini.

02:38.330 --> 02:40.970
Tetapi elemen konkret, yang kami render.

02:40.970 --> 02:43.960
Tentu saja, ini bukan elemen formulir, tetapi jika kita

02:43.960 --> 02:46.180
melihat templat daftar kita di sini, kita

02:46.180 --> 02:48.520
melihat ada bagian di dalamnya.

02:48.520 --> 02:51.010
Jadi, kita memiliki elemen bagian.

02:51.010 --> 02:54.420
Sekarang ternyata tidak ada elemen dan elemen bagian tersebut, jadi

02:54.420 --> 02:57.040
kita hanya akan memiliki elemen HTML biasa karena setiap

02:57.040 --> 03:00.490
elemen memiliki tipe ini di sini untuk beberapa pajak.

03:00.490 --> 03:03.060
Ada tipe-tipe yang lebih khusus jika memang

03:03.060 --> 03:05.710
ada, dan kita bisa menggunakan tipe HTML.

03:05.710 --> 03:10.710
Jadi, sekarang tentu saja kita perlu mendapatkan akses ke elemen-elemen ini.

03:10.970 --> 03:15.600
Jadi, kita bisa menyalin kode ini di sini sebenarnya dari konstruktor

03:15.600 --> 03:20.250
input proyek yang ditambahkan ke konstruktor daftar proyek

03:20.250 --> 03:22.260
dan sekarang menyesuaikan

03:22.260 --> 03:24.730
beberapa hal.

03:24.730 --> 03:27.630
Sebagai contoh, elemen template saya tentu saja sekarang tidak memiliki

03:27.630 --> 03:29.420
gagasan tentang input proyek.

03:29.420 --> 03:32.150
Itu sekarang daftar proyek sebagai gantinya.

03:32.150 --> 03:36.660
Jadi, mari kita salin itu dan gunakan ini di sini untuk memilih elemen.

03:36.660 --> 03:39.760
Saya masih akan tetap mengeluarkan biaya, dan saya masih tahu dengan

03:39.760 --> 03:42.710
pasti bahwa saya mendapatkannya, jadi dis tidak berubah.

03:42.710 --> 03:45.520
Elemen tuan rumah masih mati dengan aplikasi ID.

03:45.520 --> 03:47.820
Jadi, hal ini tidak berubah.

03:47.820 --> 03:52.070
Kemudian saya mengimpor konten saya dan kemudian saya, yah, toko,

03:52.070 --> 03:53.530
elemen pertama.

03:53.530 --> 03:55.380
Dari impor, templatnya.

03:55.380 --> 03:57.780
Jadi pada dasarnya elemen pertama dalam templat,

03:57.780 --> 04:01.590
yaitu bagian, saya menyimpannya di properti elemen di sini.

04:01.590 --> 04:04.430
Namun, ini bukan elemen formulir HTML.

04:04.430 --> 04:07.210
Ini hanya elemen HTML di sini.

04:07.210 --> 04:11.710
Sekarang kita juga dapat menetapkan ID di sini dan sebenarnya memang demikian,

04:11.710 --> 04:15.380
harus dinamis, bukan hard-coded karena kita akan memiliki lebih

04:15.380 --> 04:16.970
dari satu daftar proyek.

04:16.970 --> 04:21.220
Saya ingin memiliki daftar alat di aplikasi akhir, satu untuk tindakan proyek

04:21.220 --> 04:25.060
dan satu lagi untuk pemberlakuan proyek, dan mereka menawarkan,

04:25.060 --> 04:28.420
saya ingin mendapatkan beberapa informasi tambahan untuk

04:28.420 --> 04:29.895
konstruktor.

04:29.895 --> 04:35.703
Jenis proyek, dan saya akan menggunakan statistik, pintasan TypeScript.

04:35.703 --> 04:39.250
Anda belajar tentang di mana Anda dapat menambahkan accessor

04:39.250 --> 04:44.170
di depan parameter, privat atau publik untuk secara otomatis membuat properti

04:44.170 --> 04:48.060
dengan nama yang sama dan menyimpan nilai yang dilewatkan pada

04:48.060 --> 04:51.730
argumen ini di properti yang bernama sama.

04:51.730 --> 04:55.040
Jadi, sekarang kelas ini akan memiliki nama properti untuk diketik juga.

04:55.040 --> 04:57.910
Dan sekarang pertanyaannya adalah, apa tipe parameter

04:57.910 --> 04:58.790
jenis ini?

04:58.790 --> 05:03.640
Dan ini sebenarnya harus berupa tipe literal dan tipe union.

05:03.640 --> 05:07.270
Baik aktif atau selesai.

05:07.270 --> 05:11.050
Kami bahkan memiliki proyek aktif atau proyek yang sudah selesai.

05:11.050 --> 05:14.270
Jadi itu adalah argumen yang saya harapkan untuk didapatkan ketika

05:14.270 --> 05:16.080
daftar proyek diinstansiasi.

05:16.080 --> 05:20.440
Dan dengan ayah, kita harus mengetikkan properti D ID kemudian harus

05:20.440 --> 05:21.870
didasarkan pada ini.

05:21.870 --> 05:25.090
Seharusnya, dan untuk ayah, saya menggunakan templat literal di sini.

05:25.090 --> 05:30.090
Ini harus berupa tipe proyek dasbor, jadi baik proyek dasbor aktif atau proyek

05:31.240 --> 05:33.640
dasbor yang sudah selesai.

05:33.640 --> 05:35.070
Itulah ide saya di sini.

05:35.070 --> 05:37.540
Anda selalu dapat menggunakan tipe dot ini sehingga

05:37.540 --> 05:40.380
TypeScript memahami bahwa kita menggunakan properti ini

05:40.380 --> 05:41.890
dan tidak digunakan.

05:41.890 --> 05:46.200
Jadi dengan itu, kita mendapatkan akses ke semua elemen inti dan kita menambahkan

05:46.200 --> 05:50.790
ID ke bagian tersebut, yang kita dapatkan dari templat kita.

05:50.790 --> 05:53.650
Sekarang, tentu saja, kita ingin, kita ingin merendernya, bukan?

05:53.650 --> 05:58.600
Itulah ide untuk ini semua, sekali lagi, pada metode pribadi.

05:58.600 --> 06:00.540
Lampirkan keadilan.

06:00.540 --> 06:05.310
Kami memilikinya dalam input proyek dan di sana sekarang menjadi antrian

06:05.310 --> 06:06.310
tujuan.

06:06.310 --> 06:11.300
Nah, lampirkan ini ke Dom untuk sekarang membuat daftar

06:11.300 --> 06:12.750
ayah ke Dom.

06:12.750 --> 06:16.610
Jadi, alih-alih melampirkan, saya sebenarnya akan melakukan hal yang sama seperti

06:16.610 --> 06:19.223
yang saya lakukan pada lampiran untuk formulir proyek.

06:20.070 --> 06:24.230
Jadi kita bisa menyalin baris itu di sini dan sikap melampirkan.

06:24.230 --> 06:27.040
Saya memiliki elemen host dan saya ingin menyisipkan

06:27.040 --> 06:28.420
elemen yang berdekatan.

06:28.420 --> 06:30.240
Setelah permulaan, dan ini harus menjadi elemennya.

06:30.240 --> 06:33.300
Kami mengekstrak itu dari templat di sini.

06:33.300 --> 06:36.990
Namun, saya sebenarnya tidak ingin melakukannya setelah

06:36.990 --> 06:41.960
awal, melainkan sebelum akhir, yang berarti sebelum penutupan, taktik elemen

06:41.960 --> 06:45.870
host dan kemudian kita dapat memanggil attach di sini di konstruktor,

06:45.870 --> 06:49.940
tentu saja, untuk melampirkan elemen yang kita buat di sini ke

06:49.940 --> 06:51.763
Dom.

06:53.880 --> 06:56.370
Sekarang, ada satu perbedaan penting dibandingkan

06:56.370 --> 06:59.630
dengan input proyek untuk daftar ini.

06:59.630 --> 07:03.220
Ini tidak dilakukan hanya dengan menambahkan daftar ke Dom.

07:03.220 --> 07:05.270
Masukannya sudah selesai, bukan?

07:05.270 --> 07:07.130
Bentuk di sini sudah selesai.

07:07.130 --> 07:08.720
Kami memiliki semua masukan di sana.

07:08.720 --> 07:12.420
Yang perlu kita lakukan hanyalah menyiapkan pendengar peristiwa.

07:12.420 --> 07:15.840
Sekarang untuk daftar di sini, kami sebenarnya belum pernah memilikinya

07:15.840 --> 07:16.673
dengan kosong.

07:16.673 --> 07:21.130
H ke teknologi, misalnya, dan saya ingin menambahkan beberapa teks di sana.

07:21.130 --> 07:22.990
Jadi saya akan menambahkan angka.

07:22.990 --> 07:26.020
Metode baru ke metode pribadi Anda.

07:26.020 --> 07:29.120
Render atau konten bisa menjadi nama yang pas.

07:29.120 --> 07:34.120
Dan ide saya di sini adalah untuk mengisi ruang kosong dalam template itu

07:34.230 --> 07:36.862
dengan beberapa tahun kehidupan.

07:36.862 --> 07:37.780
Untuk itu.

07:37.780 --> 07:40.040
Mari kita pergi ke metode render konten mati, dan ada beberapa

07:40.040 --> 07:41.580
hal yang ingin saya lakukan.

07:41.580 --> 07:45.390
Satu hal adalah stat untuk daftar tak berurutan mati, yang merupakan bagian

07:45.390 --> 07:47.200
dari daftar proyek saya di sini.

07:47.200 --> 07:48.640
Saya ingin menambahkan ID ke dalamnya.

07:48.640 --> 07:50.860
Tentu saja Anda tidak harus melakukan itu, tetapi saya ingin

07:50.860 --> 07:53.500
melakukannya sehingga jika kita perlu memilihnya nanti, kita dapat melakukannya

07:53.500 --> 07:54.390
dengan ini.

07:54.390 --> 07:58.220
Jadi saya akan membuat ID daftar di sini disimpan dalam konstanta,

07:58.220 --> 08:00.190
dan ini akan menjadi template literal,

08:00.190 --> 08:04.100
jadi ini akan menjadi string di mana kita dapat menyuntikkan konten

08:04.100 --> 08:09.100
dinamis, dan saya ingin mendasarkan ini pada jenis daftar proyek di sekitarnya, jadi dari

08:09.370 --> 08:14.370
bagian sekitarnya, dan kemudian menambahkan daftar proyek setelahnya.

08:15.220 --> 08:19.700
Sekarang kita dapat menjangkau daftar pesanan, yang kita dapatkan di elemen

08:19.700 --> 08:22.890
kita, yaitu tahun bagian stat, elemen kanan adalah bagian

08:22.890 --> 08:23.820
mati.

08:23.820 --> 08:27.360
Jadi untuk mendapatkan daftar tak berurutan di dalam sana, kita bisa,

08:27.360 --> 08:30.940
misalnya, menggunakan selektor kueri dan mencari yang pertama, dan dalam

08:30.940 --> 08:33.120
hal ini hanya daftar tak berurutan.

08:33.120 --> 08:35.720
Kita tahu kita akan mendapatkan satu karena kita tahu akan ada satu dan kemudian

08:35.720 --> 08:38.280
kita bisa menambahkan ID di sini, yang seharusnya menjadi ID daftar.

08:38.280 --> 08:40.280
Itulah satu hal yang ingin saya lakukan.

08:40.280 --> 08:44.970
Saya juga ingin mengatur konten teks dari usia itu ke tag di sini

08:44.970 --> 08:49.360
dan untuk ini kita dapat menjangkau elemen ini, selektor

08:49.360 --> 08:50.200
kueri.

08:50.200 --> 08:53.020
Temukan tag HQ pertama dan satu-satunya.

08:53.020 --> 08:56.340
Kita tahu bahwa kita akan menemukannya, oleh karena itu

08:56.340 --> 09:01.340
tanda seru untuk mengesampingkan kasus nol mati dan mengatur konten teks yang sama

09:02.940 --> 09:05.610
dengan ini untuk mengetikkan huruf besar.

09:05.610 --> 09:08.130
Ingatlah tipe yang selalu aktif.

09:08.130 --> 09:10.060
Kami selesai dengan dua kasus opera.

09:10.060 --> 09:15.060
Kami mengubahnya menjadi semua huruf kapital plus proyek, begitu juga dengan Sten.

09:16.200 --> 09:19.853
Cukup dengan judul ke depan adalah bagian.

09:21.970 --> 09:25.220
Dan sekarang dengan itu, kita, secara umum kita sudah selesai.

09:25.220 --> 09:27.580
Kami belum memiliki item dalam daftar itu.

09:27.580 --> 09:30.230
Kita akan mengerjakan ini nanti, tetapi secara umum kita sudah selesai.

09:30.230 --> 09:35.120
Kita bisa memanggil render ini sebagai konten atau setelah kita melampirkannya

09:35.120 --> 09:37.210
ke Dom, misalnya.

09:37.210 --> 09:39.210
Sekarang, akan menyenangkan untuk melihat mereka beraksi.

09:39.210 --> 09:42.600
Tentu saja, sekali lagi, daftar item yang berakhir akan hilang, tetapi akan

09:42.600 --> 09:45.523
menyenangkan untuk melihat sesuatu yang beraksi di sini.

09:46.690 --> 09:49.620
Nah untuk itu, mari kita pergi ke bagian bawah file di mana

09:49.620 --> 09:53.310
kita menginstansiasi input proyek dan di sana kita tidak dapat selalu

09:53.310 --> 09:55.200
menginstansiasi daftar kita.

09:55.200 --> 09:59.200
Kita memiliki daftar proyek aktif, yang kita instantiasi, tetapi

09:59.200 --> 10:01.230
memanggil daftar proyek baru.

10:01.230 --> 10:04.220
Dan di sana kita harus memasukkan argumen tipe itu, yang

10:04.220 --> 10:06.040
aktif atau selesai di sini.

10:06.040 --> 10:08.610
Karena saya membuat daftar aktif, saya tentu saja

10:08.610 --> 10:09.950
lulus tidak aktif.

10:09.950 --> 10:13.140
Dan kemudian di sini kita memiliki daftar proyek yang sudah selesai

10:13.140 --> 10:15.290
di mana saya tentu saja, lewat selesai.

10:15.290 --> 10:18.673
Jika sekarang kita amankan, maka seharusnya bisa dikompilasi tanpa kesalahan.

10:19.520 --> 10:23.090
Dan karenanya, apa yang akan Anda lihat jika Anda kembali

10:23.090 --> 10:27.770
adalah dua bagian kosong di sini dengan judul di sini dan juga, ruang kosong

10:27.770 --> 10:33.390
di mana item-item nantinya akan ditambahkan, item-item proyek akan ditambahkan.

10:33.390 --> 10:37.440
Sekarang untuk saat ini, kami tidak memiliki item proyek seperti itu, salju.

10:37.440 --> 10:39.710
Jadi sebagai langkah berikutnya,

10:39.710 --> 10:43.660
kita harus mengupayakan beberapa cara untuk memastikan

10:43.660 --> 10:48.410
bahwa ketika kita mengklik add project, kita membuat proyek baru dalam

10:48.410 --> 10:49.420
kode.

10:49.420 --> 10:53.730
Jadi struktur data baru yang mewakili sebuah proyek, dan

10:53.730 --> 10:58.047
kemudian kita meneruskan informasi tentang proyek baru

10:58.047 --> 10:59.870
ini ke tindakan proyek.

10:59.870 --> 11:03.850
Cantumkan di sini ke bagian proyek aktif ini, karena setiap proyek

11:03.850 --> 11:06.500
baru harus aktif secara default.

11:06.500 --> 11:09.390
Ini akan menjadi sasaran kita berikutnya, dan sekali lagi, akan

11:09.390 --> 11:12.080
ada banyak cara berbeda untuk mengimplementasikannya.

11:12.080 --> 11:15.870
Kita akan melakukannya bersama dengan satu cara yang saya temukan dalam kuliah

11:15.870 --> 11:16.703
berikutnya.
