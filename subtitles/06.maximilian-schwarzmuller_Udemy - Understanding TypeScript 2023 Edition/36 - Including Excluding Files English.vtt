WEBVTT

1
00:00:02.200 --> 00:00:03.840
<v Instructor>So this is now how we can</v>

2
00:00:03.840 --> 00:00:06.290
manage multiple files with TypeScript.

3
00:00:06.290 --> 00:00:08.870
Now, one word about having multiple files,

4
00:00:08.870 --> 00:00:11.500
when you work with multiple files as we're doing it here,

5
00:00:11.500 --> 00:00:15.280
you can also import them into each other with modules,

6
00:00:15.280 --> 00:00:18.180
which you might know from vanilla JavaScript,

7
00:00:18.180 --> 00:00:20.770
there we have modules as well, it is something

8
00:00:20.770 --> 00:00:23.830
I'll cover in a dedicated section of this course though,

9
00:00:23.830 --> 00:00:25.560
so for now, we just have two files

10
00:00:25.560 --> 00:00:27.620
which are not imported into each other,

11
00:00:27.620 --> 00:00:31.040
but which are instead imported into index.html.

12
00:00:31.040 --> 00:00:32.990
Now with that out of the way though,

13
00:00:32.990 --> 00:00:35.930
we know that we can manage this as a project

14
00:00:35.930 --> 00:00:39.060
and that we can compile multiple files here.

15
00:00:39.060 --> 00:00:41.910
Now let's have a look at the tsconfig.json file

16
00:00:41.910 --> 00:00:45.660
because this is a crucial file for managing this project,

17
00:00:45.660 --> 00:00:48.100
it essentially tells TypeScript

18
00:00:48.100 --> 00:00:51.290
how it should compile these files.

19
00:00:51.290 --> 00:00:55.260
Now, before we dive into the compilerOptions where we,

20
00:00:55.260 --> 00:00:56.470
as the name suggests,

21
00:00:56.470 --> 00:00:59.620
can configure how the compiler behaves,

22
00:00:59.620 --> 00:01:02.220
let's scroll down to the place

23
00:01:02.220 --> 00:01:03.760
before the closing curly brace

24
00:01:03.760 --> 00:01:06.620
but after this nested closing curly brace,

25
00:01:06.620 --> 00:01:08.340
and let's see some of the options

26
00:01:08.340 --> 00:01:11.910
we can add here which don't effect the compiler

27
00:01:11.910 --> 00:01:14.190
or the compilation step behavior,

28
00:01:14.190 --> 00:01:18.410
but instead how the compiler works with this project,

29
00:01:18.410 --> 00:01:23.410
because there for example, you can set a exclude option.

30
00:01:23.700 --> 00:01:26.770
Now if you add exclude here, that will be an array,

31
00:01:26.770 --> 00:01:30.450
and what you can enter here are paths to files

32
00:01:30.450 --> 00:01:33.480
which should not be included in compilation

33
00:01:33.480 --> 00:01:36.400
when you run TSC on the entire project.

34
00:01:36.400 --> 00:01:38.010
So for example, here we could say

35
00:01:38.010 --> 00:01:41.137
we want to exclude analytics.ts from compilation,

36
00:01:41.137 --> 00:01:43.390
and of course, this doesn't make much sense here,

37
00:01:43.390 --> 00:01:45.300
but just to show how this works.

38
00:01:45.300 --> 00:01:49.350
If we do that and we now rerun tsc,

39
00:01:49.350 --> 00:01:51.600
and I first of all delete analytics.js

40
00:01:51.600 --> 00:01:53.730
so that we can see if it is recreated,

41
00:01:53.730 --> 00:01:57.140
if we now run tsc or tsc in watch mode,

42
00:01:57.140 --> 00:01:59.810
you see no analytics.js file is created,

43
00:01:59.810 --> 00:02:02.060
and the reason for that is that we're excluding that file.

44
00:02:02.060 --> 00:02:03.340
Now of course for this file,

45
00:02:03.340 --> 00:02:04.670
this doesn't make a lot of sense

46
00:02:04.670 --> 00:02:07.250
because I typically want to include it,

47
00:02:07.250 --> 00:02:09.360
but if you had a file that for some reason

48
00:02:09.360 --> 00:02:12.440
shouldn't be compiled, you can exclude it like this.

49
00:02:12.440 --> 00:02:14.210
You can also work with wildcards,

50
00:02:14.210 --> 00:02:15.810
and for example, if you had a file

51
00:02:15.810 --> 00:02:20.810
that's named analytics.dev.ts

52
00:02:20.850 --> 00:02:22.900
and you don't really wanna compile that,

53
00:02:22.900 --> 00:02:25.770
you could say all files that end dev.ts

54
00:02:25.770 --> 00:02:27.790
should not be compiled, and you can do that

55
00:02:27.790 --> 00:02:29.620
by also adding an asterisk here,

56
00:02:29.620 --> 00:02:31.630
which is a wildcard basically,

57
00:02:31.630 --> 00:02:33.750
and now TypeScript will ignore any files

58
00:02:33.750 --> 00:02:36.470
that have .dev.ts included.

59
00:02:36.470 --> 00:02:40.037
You could also add asterisk, asterisk, slash here,

60
00:02:40.037 --> 00:02:43.080
and that would mean any file with that pattern

61
00:02:43.080 --> 00:02:45.770
in any folder will be ignored.

62
00:02:45.770 --> 00:02:47.420
So these are things you can set up here,

63
00:02:47.420 --> 00:02:49.220
the only thing I want to set up here,

64
00:02:49.220 --> 00:02:51.500
and that is a setting that you will often find,

65
00:02:51.500 --> 00:02:54.103
is that I want to exclude node_modules,

66
00:02:55.409 --> 00:02:58.260
and the idea here is that I don't want to compile

67
00:02:58.260 --> 00:03:01.373
any TypeScript files I might have inside of node_modules.

68
00:03:02.449 --> 00:03:05.080
Now, node_modules is that folder

69
00:03:05.080 --> 00:03:07.160
that holds all the dependencies

70
00:03:07.160 --> 00:03:09.570
we install here in package.json

71
00:03:09.570 --> 00:03:11.890
and the dependencies of these dependencies,

72
00:03:11.890 --> 00:03:14.660
and therefore, these are third-party libraries

73
00:03:14.660 --> 00:03:16.810
we're importing, which we don't wanna touch,

74
00:03:16.810 --> 00:03:18.510
and if any of these libraries

75
00:03:18.510 --> 00:03:20.630
should ship some TypeScript code,

76
00:03:20.630 --> 00:03:22.690
then we certainly don't want to compile it,

77
00:03:22.690 --> 00:03:25.840
it will just slow down our compilation process,

78
00:03:25.840 --> 00:03:29.200
and in the worst case, it might even break our project.

79
00:03:29.200 --> 00:03:30.370
So therefore, it's quite common

80
00:03:30.370 --> 00:03:33.330
to exclude node_modules here, though I will say,

81
00:03:33.330 --> 00:03:36.510
if you don't specify the exclude option at all,

82
00:03:36.510 --> 00:03:41.420
node_modules is automatically excluded as a default setting,

83
00:03:41.420 --> 00:03:43.980
so you don't really need to add this option here,

84
00:03:43.980 --> 00:03:48.520
this would be the default, I just want to show

85
00:03:48.520 --> 00:03:50.570
that exclude exists and how you could use it

86
00:03:50.570 --> 00:03:53.404
if the only thing you want to exclude is node_modules,

87
00:03:53.404 --> 00:03:55.670
you don't have to add the exclude key at all.

88
00:03:55.670 --> 00:03:58.500
If you do add it though, you should set node_modules

89
00:03:58.500 --> 00:04:01.400
because otherwise, it will not exclude that.

90
00:04:01.400 --> 00:04:04.570
Now besides exclude, we also have include,

91
00:04:04.570 --> 00:04:06.630
and include allows you to do the opposite,

92
00:04:06.630 --> 00:04:09.570
it allows you to specifically tell TypeScript

93
00:04:09.570 --> 00:04:12.730
which files you wanna include in the compilation process,

94
00:04:12.730 --> 00:04:16.380
and anything that's not listed here will not compiled,

95
00:04:16.380 --> 00:04:20.620
so if I point at app.ts here, you'll see if I rerun tsc,

96
00:04:20.620 --> 00:04:23.470
we also will get no analytics.ts file,

97
00:04:23.470 --> 00:04:25.570
or no analytics.js file I should say.

98
00:04:25.570 --> 00:04:26.403
Why?

99
00:04:26.403 --> 00:04:29.230
Because analytics.js is not included in include,

100
00:04:29.230 --> 00:04:32.370
and as I said, if we do set the include key,

101
00:04:32.370 --> 00:04:33.970
then we really have to include

102
00:04:33.970 --> 00:04:35.810
everything we want to compile.

103
00:04:35.810 --> 00:04:40.080
So of course here, we could then also add analytics.ts here,

104
00:04:40.080 --> 00:04:43.950
and with that addition, we would start and compile it,

105
00:04:43.950 --> 00:04:46.740
as you see now, we have the analytics.js file,

106
00:04:46.740 --> 00:04:49.650
or as an alternative, we specify a whole folder here

107
00:04:49.650 --> 00:04:52.560
which typically holds the files we want to compile.

108
00:04:52.560 --> 00:04:55.520
Exclude by the way, if set alongst include

109
00:04:55.520 --> 00:04:57.160
will filter down include,

110
00:04:57.160 --> 00:05:00.290
so if we exclude some sub-folder of a folder

111
00:05:00.290 --> 00:05:01.740
that is part of include,

112
00:05:01.740 --> 00:05:04.980
then that excluded sub-folder will be excluded,

113
00:05:04.980 --> 00:05:08.720
so basically we compile include minus exclude.

114
00:05:08.720 --> 00:05:10.420
Now of course here, I don't want to set include,

115
00:05:10.420 --> 00:05:12.520
I want to compile all TypeScript files,

116
00:05:12.520 --> 00:05:15.050
and therefore I don't have to worry about that,

117
00:05:15.050 --> 00:05:17.200
excluding node_modules is all I need,

118
00:05:17.200 --> 00:05:18.930
and as I explained, theoretically

119
00:05:18.930 --> 00:05:20.280
I don't even need to add that

120
00:05:20.280 --> 00:05:22.423
because that would be excluded by default.

121
00:05:23.260 --> 00:05:25.310
Now you also have a files option,

122
00:05:25.310 --> 00:05:27.560
this allows you to point at the individual files,

123
00:05:27.560 --> 00:05:30.870
so it's a bit like include with the difference that here

124
00:05:30.870 --> 00:05:34.200
you can't specify whole folders which you want to include,

125
00:05:34.200 --> 00:05:36.020
instead you really just specify

126
00:05:36.020 --> 00:05:38.220
the individual files you want to compile,

127
00:05:38.220 --> 00:05:40.710
that might be a option for smaller projects

128
00:05:40.710 --> 00:05:43.660
where you know you will only work with free files,

129
00:05:43.660 --> 00:05:45.210
and for some reason you got

130
00:05:45.210 --> 00:05:46.770
a couple of other TypeScript files

131
00:05:46.770 --> 00:05:48.560
which you don't want to touch though,

132
00:05:48.560 --> 00:05:51.340
then you can set the list of files like this.

133
00:05:51.340 --> 00:05:53.360
In reality, you might not need

134
00:05:53.360 --> 00:05:55.740
that setting that often though.

135
00:05:55.740 --> 00:05:58.530
And therefore, that's it with the basic compilation

136
00:05:58.530 --> 00:06:00.910
or project management options here.

137
00:06:00.910 --> 00:06:03.900
Now of course, there is way more we can specify though,

138
00:06:03.900 --> 00:06:08.230
way more we can specify about the compiler itself

139
00:06:08.230 --> 00:06:10.793
and how it behaves during the compilation step.

