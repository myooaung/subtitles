WEBVTT

00:02.300 --> 00:03.830
Người hướng dẫn: Vì vậy, chúng tôi làm

00:03.830 --> 00:07.350
việc với bộ phận của chúng tôi khá nhiều ở đây và tôi đã thành lập bộ phận kế toán của mình.

00:07.350 --> 00:09.610
Bây giờ đối với ứng dụng mà chúng tôi đang

00:09.610 --> 00:12.120
xây dựng, tất nhiên chúng tôi có thể cần các phòng

00:12.120 --> 00:14.320
ban, nhưng chúng tôi có thể cần thêm thông

00:14.320 --> 00:16.660
tin cho các loại phòng ban cụ thể.

00:16.660 --> 00:18.830
Chúng tôi có thể có một bộ phận

00:18.830 --> 00:22.680
CNTT, có ID, có tên, có nhân viên, nhưng cũng có

00:22.680 --> 00:24.900
quản trị viên, chẳng hạn như

00:24.900 --> 00:28.180
thứ mà chỉ bộ phận CNTT mới có.

00:28.180 --> 00:30.340
Chúng tôi có thể có bộ phận

00:30.340 --> 00:34.280
kế toán cũng có thể có ID, tên và nhân viên,

00:34.280 --> 00:37.470
nhưng nó cũng có thể có báo cáo.

00:37.470 --> 00:41.030
Một loạt các báo cáo mà nó tạo ra, v.v.

00:41.030 --> 00:44.541
Vì vậy, bạn có thể có một số thuộc tính cơ sở và cả các phương thức mà

00:44.541 --> 00:46.970
tất cả các bộ phận nên có, nhưng sau đó chúng tôi

00:46.970 --> 00:49.050
có thể có các phiên bản chuyên biệt của

00:49.050 --> 00:51.900
các bộ phận này với các thuộc tính và phương thức cụ thể

00:51.900 --> 00:54.660
của riêng chúng mà chỉ bộ phận đó mới có thể có.

00:54.660 --> 00:58.100
Sự thừa kế có thể giúp chúng ta thực hiện một cái gì đó như thế này.

00:58.100 --> 01:00.010
Vì vậy, làm thế nào chúng ta có thể sử dụng kế thừa ở đây?

01:00.010 --> 01:01.670
Vâng, chúng tôi có bộ phận lớp học của chúng tôi.

01:01.670 --> 01:05.130
Bây giờ hãy tạo các bộ phận chuyên biệt này.

01:05.130 --> 01:08.483
Vì vậy, ở đây chúng ta có thể có một bộ phận CNTT đẳng cấp.

01:09.610 --> 01:14.010
Và trong lớp này ở đây, tôi muốn sử dụng tên và ID và các nhân

01:14.010 --> 01:17.270
viên của phòng tổng hợp nhưng tôi muốn thêm

01:17.270 --> 01:19.537
các tính năng của riêng mình.

01:19.537 --> 01:21.970
Bây giờ chúng ta có thể kế thừa lớp bộ phận bằng

01:21.970 --> 01:24.270
cách sử dụng từ khóa mở rộng ở đây và sau đó là

01:24.270 --> 01:25.970
lớp chúng ta muốn kế thừa.

01:25.970 --> 01:27.530
Trong trường hợp này, đó là bộ phận.

01:27.530 --> 01:30.600
Bây giờ, điều quan trọng là bạn chỉ có thể kế thừa từ một

01:30.600 --> 01:33.010
lớp, vì vậy bạn không thể kế thừa từ nhiều

01:33.010 --> 01:34.660
lớp, nếu bạn cần điều đó.

01:34.660 --> 01:38.070
Vì vậy, bây giờ, ở đây, tôi đang kế thừa từ bộ phận

01:38.070 --> 01:40.700
và một hệ quả là nếu bây giờ tôi tạo một

01:40.700 --> 01:44.560
bộ phận CNTT ở đây, tôi thực sự có thể gọi nó như thế này,

01:44.560 --> 01:46.640
với loại hàm tạo này, mặc dù

01:46.640 --> 01:49.400
lớp bộ phận CNTT trống.

01:49.400 --> 01:52.830
Nếu chúng ta lưu nó, chúng ta thực sự thấy nó hoạt

01:52.830 --> 01:55.152
động như trước, bởi vì khi chúng

01:55.152 --> 01:59.610
ta kế thừa từ một lớp khác, lớp kế thừa sẽ tự động nhận mọi thứ

01:59.610 --> 02:02.870
mà lớp cơ sở, bộ phận trong trường hợp này, có,

02:02.870 --> 02:06.072
bao gồm cả hàm tạo của nó, miễn là chúng ta không'

02:06.072 --> 02:11.072
Không thêm một hàm tạo dành riêng cho lớp được kế thừa này, vì vậy đối

02:11.130 --> 02:14.760
với lớp con này, hàm tạo của lớp cơ sở, vì vậy hàm tạo

02:14.760 --> 02:17.830
này sẽ tự động được sử dụng khi chúng ta khởi

02:17.830 --> 02:20.800
tạo lớp con của mình.

02:20.800 --> 02:25.170
Vì vậy, cuối cùng chúng ta gọi hàm tạo của lớp cơ sở một cách kỳ diệu với các

02:25.170 --> 02:27.562
đối số mà chúng ta đang chuyển ở đây.

02:27.562 --> 02:30.350
Tuy nhiên, bây giờ chúng ta có thể thêm hàm tạo của

02:30.350 --> 02:33.570
riêng mình bằng cách thêm hàm tạo ở đây trong bộ phận CNTT

02:33.570 --> 02:35.800
và bây giờ bạn thấy tôi đang gặp lỗi.

02:35.800 --> 02:38.580
Đối với một, tất nhiên bây giờ chúng tôi nên chấp nhận dữ liệu

02:38.580 --> 02:40.850
chúng tôi nhận được ở đây, mặc dù chúng tôi có thể

02:40.850 --> 02:44.120
lập luận rằng tên không phải là thứ chúng tôi cần chuyển vào đây.

02:44.120 --> 02:46.430
Và nó cũng không nên là kế toán.

02:46.430 --> 02:49.110
Nhưng thay vào đó, ở đây, tên của bộ phận,

02:49.110 --> 02:52.563
vì đó là lớp khoa CNTT, nên luôn có thể là CNTT.

02:53.700 --> 02:56.910
Mặc dù vậy, tôi vẫn muốn chấp nhận ID của

02:56.910 --> 03:01.130
mình, nhưng bây giờ về cơ bản tôi muốn chuyển tiếp

03:01.130 --> 03:04.120
ID đó giống như tên cố định IT, tới người

03:04.120 --> 03:06.420
tạo của bộ phận.

03:06.420 --> 03:09.240
Và để làm được điều đó, chúng tôi có một từ khóa đặc biệt mà chúng tôi có thể,

03:09.240 --> 03:11.120
và trong trường hợp này, chúng tôi phải sử dụng.

03:11.120 --> 03:13.210
Và đó là siêu.

03:13.210 --> 03:15.580
Bất cứ khi nào bạn thêm hàm tạo của

03:15.580 --> 03:18.400
riêng mình vào một lớp kế thừa từ một lớp

03:18.400 --> 03:21.200
khác, bạn phải thêm super vào lớp kế thừa

03:21.200 --> 03:23.790
và bạn phải thực thi nó như một hàm.

03:23.790 --> 03:28.070
Super ở đây gọi hàm tạo của lớp cơ sở, vì vậy hàm tạo

03:28.070 --> 03:31.300
của bộ phận trong trường hợp này.

03:31.300 --> 03:33.690
Và bây giờ siêu khác nhận các

03:33.690 --> 03:37.630
đối số của hàm tạo của lớp cha, ID và tên.

03:37.630 --> 03:41.060
Vì vậy, ở đây tôi có thể chuyển tiếp ID, vì vậy ID mà tôi nhận

03:41.060 --> 03:44.360
được ở đây chỉ được chuyển đến super và tôi có thể mã hóa cứng

03:44.360 --> 03:46.860
một giá trị cho tên, chẳng hạn như IT.

03:46.860 --> 03:48.840
Vì vậy, điều này bây giờ sẽ

03:48.840 --> 03:52.500
gọi hàm tạo của lớp cơ sở từ bên trong lớp con.

03:52.500 --> 03:55.310
Bây giờ, điều quan trọng là bạn phải gọi super trước

03:55.310 --> 03:58.220
trong hàm tạo của mình trước khi thực hiện bất kỳ điều

03:58.220 --> 03:59.700
gì với từ khóa "this".

03:59.700 --> 04:03.860
Vì vậy, nếu bạn định gán bất kỳ thuộc tính đặc biệt nào khác ở đây,

04:03.860 --> 04:06.670
bạn phải làm điều đó sau khi gọi super.

04:06.670 --> 04:10.346
Và thực sự tôi muốn thêm các thuộc tính đặc biệt của riêng mình ở đây.

04:10.346 --> 04:13.528
Chúng tôi có thể thêm quản trị viên của chúng tôi ở đây.

04:13.528 --> 04:17.800
Thực tế, giả sử là riêng tư hoặc công khai.

04:17.800 --> 04:20.878
Là một tài sản công khai, quản trị

04:20.878 --> 04:25.630
viên và đó phải là một chuỗi các chuỗi, giả sử.

04:25.630 --> 04:27.780
Vậy thì tôi không muốn chuyển

04:27.780 --> 04:31.460
tiếp cái này đến lớp cơ sở của mình vì lớp bộ phận không

04:31.460 --> 04:34.670
muốn có bất kỳ dữ liệu quản trị viên nào.

04:34.670 --> 04:38.800
Thay vào đó, tôi muốn lưu trữ cái này trong một thuộc tính của bộ

04:38.800 --> 04:42.150
phận CNTT, vì vậy ở đây chúng tôi có thể thêm quản trị

04:42.150 --> 04:44.922
viên làm trường lấy một vài quản trị viên và

04:44.922 --> 04:47.290
quản trị viên lưu trữ trong đó hoặc vì

04:47.290 --> 04:49.070
tôi đang sử dụng công khai ở

04:49.070 --> 04:52.020
đây, tôi đã sử dụng rồi lối tắt đó nơi một thuộc

04:52.020 --> 04:55.160
tính cùng tên sẽ được tạo và dữ liệu chúng tôi cung

04:55.160 --> 04:57.530
cấp cho đối số này được lưu trữ trong

04:57.530 --> 05:00.148
thuộc tính được tạo tự động đó.

05:00.148 --> 05:03.710
Vẫn để làm rõ rằng super phải được gọi trước, tôi sẽ

05:03.710 --> 05:07.610
đi theo con đường dài hơn, thêm quản trị viên vào đây, như

05:07.610 --> 05:12.610
thế, và sau đó nói ở đây, điều này. quản trị viên = quản trị viên.

05:13.260 --> 05:15.160
Một lần nữa, phím tắt sẽ ngắn hơn.

05:15.160 --> 05:17.830
Tôi đang làm điều này ở đây để chỉ ra và làm rõ

05:17.830 --> 05:21.020
rằng nếu bạn đang sử dụng thứ gì đó sử dụng từ khóa "cái

05:21.020 --> 05:24.480
này" thì bạn phải làm điều đó sau khi gọi super.

05:24.480 --> 05:27.640
Và với điều đó nếu chúng tôi lưu nó, tôi sẽ gặp lỗi, vì tôi không

05:27.640 --> 05:29.530
chuyển bất kỳ quản trị viên nào, vì vậy

05:29.530 --> 05:30.920
hãy làm điều đó ở đây.

05:30.920 --> 05:33.920
Max là quản trị viên duy nhất tôi đi qua đây.

05:33.920 --> 05:36.950
Bây giờ chúng tôi có thể lưu nó và biên dịch nó mà không có lỗi và bây

05:36.950 --> 05:39.910
giờ ở đây, thực sự chúng tôi thấy bộ phận của chúng tôi ở đây.

05:39.910 --> 05:41.840
Bây giờ nó có tên là IT.

05:41.840 --> 05:44.670
Và nếu chúng tôi điều khiển đăng nhập toàn

05:44.670 --> 05:49.670
bộ bộ phận và chúng tôi có thể đổi tên phần này từ kế toán thành CNTT và sau

05:50.220 --> 05:54.250
đó là bảng điều khiển. đăng nhập CNTT ở đây.

05:54.250 --> 05:57.570
Tất nhiên, việc đổi tên đó là tùy chọn, sẽ hợp lý hơn, vì chúng

05:57.570 --> 06:00.160
tôi đang xây dựng một bộ phận CNTT ở đây.

06:00.160 --> 06:02.510
Bây giờ tôi điều khiển đăng nhập toàn bộ bộ phận,

06:02.510 --> 06:06.110
chúng tôi thực sự thấy rằng chúng tôi có quản trị viên, nhưng chúng

06:06.110 --> 06:11.110
tôi cũng có nhân viên và mọi thứ mà tôi đã thiết lập trong lớp bộ phận của mình ở đây.

06:12.000 --> 06:13.990
Vì vậy, đó là sự kế thừa đang hoạt

06:13.990 --> 06:16.520
động, một tính năng rất hữu ích, bởi vì tất

06:16.520 --> 06:20.770
nhiên, bây giờ, chúng ta cũng có thể tạo bộ phận kế toán của mình ở đây

06:20.770 --> 06:23.260
bằng cách mở rộng bộ phận và sau đó chúng

06:23.260 --> 06:27.030
ta có thể thêm những thứ cụ thể về kế toán của mình.

06:27.030 --> 06:29.540
Vì vậy, chúng tôi vẫn có thể sử dụng hàm

06:29.540 --> 06:31.700
tạo ở đây và bây giờ có thể bằng phím

06:31.700 --> 06:34.400
tắt, chấp nhận một vài báo cáo ở đây có thể

06:34.400 --> 06:36.170
là thuộc tính riêng tư và sau

06:36.170 --> 06:40.950
đó chúng tôi có addReport nhận văn bản, đây sẽ là một chuỗi và sau đó chúng

06:40.950 --> 06:45.360
tôi liên hệ với báo cáo ở đây và đẩy văn bản dưới dạng một mục vào báo

06:45.360 --> 06:49.430
cáo và có thể chúng tôi cũng có getReports ở đây và ở đó chúng

06:49.430 --> 06:56.990
tôi chỉ điều khiển.

06:56.990 --> 06:56.990
nhật ký (cái này. báo

06:57.563 --> 07:00.860
cáo) hoặc chúng tôi đặt tên là printReports, do đó, nó có ý nghĩa hơn.

07:00.860 --> 07:02.720
Và bây giờ chúng ta sẽ có một phiên

07:02.720 --> 07:04.890
bản rất đặc biệt của một bộ phận với hai phương

07:04.890 --> 07:06.740
thức mà bộ phận cơ sở không có và với

07:06.740 --> 07:08.100
một thuộc tính bổ sung mà

07:08.100 --> 07:09.840
bộ phận cơ sở không có.

07:09.840 --> 07:13.000
Và chúng tôi vẫn nhận được mọi thứ từ bộ phận cơ sở.

07:13.000 --> 07:15.560
Tên mà tôi sẽ đặt để tính toán ở đây và

07:15.560 --> 07:17.950
ID mà chúng tôi cũng chuyển tiếp tới

07:17.950 --> 07:20.260
người xây dựng bộ phận cơ sở.

07:20.260 --> 07:22.120
Và như vậy, ở dưới đó, nếu chúng

07:22.120 --> 07:24.770
tôi tạo tài khoản của mình ở đây với Phòng

07:24.770 --> 07:27.510
Kế toán mới, chúng tôi có thể cung cấp ID

07:27.510 --> 07:31.750
của mình và sau đó là các báo cáo của chúng tôi.

07:31.750 --> 07:34.340
Giả sử ban đầu đó là một mảng trống.

07:34.340 --> 07:39.340
Sau đó, chúng tôi có thể gọi addReport, đã xảy ra sự cố, tất nhiên là chưa bao giờ

07:40.550 --> 07:43.446
tốt như vậy, tôi đoán là trong kế toán, và sau

07:43.446 --> 07:48.446
đó chúng tôi cũng có thể in các báo cáo của mình ở đây như vậy và với tất cả những

07:50.070 --> 07:52.630
điều đó, nó biên dịch tốt và chúng tôi nhận

07:52.630 --> 07:55.710
được báo cáo ở đây và chúng tôi xem, bộ phận CNTT

07:55.710 --> 07:58.890
chẳng hạn, sẽ không có bất kỳ báo cáo nào.

07:58.890 --> 08:01.820
Bộ phận kế toán làm vì tính kế thừa, nơi chúng tôi kế thừa

08:01.820 --> 08:05.623
một số tính năng nhất định và thêm các tính năng của riêng mình.
