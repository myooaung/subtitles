WEBVTT

00:02.270 --> 00:05.210
Instruktur: Jadi kita sekarang melihat dekorator yang lebih berguna.

00:05.210 --> 00:08.750
Saya ingin menyimpulkan pengenalan yang sangat mendasar tentang dekorator

00:08.750 --> 00:11.030
ini dengan hal penting lain yang harus Anda ketahui,

00:11.030 --> 00:14.600
Anda dapat menambahkan lebih dari satu dekorator ke kelas, atau di mana

00:14.600 --> 00:17.760
pun Anda dapat menggunakan dekorator.

00:17.760 --> 00:18.940
Jadi mari kita tambahkan

00:18.940 --> 00:23.040
juga dekorator logger di sini misalnya, seperti ini.

00:23.040 --> 00:25.810
Jika kita menyimpannya, Anda lihat itu mengkompilasi tanpa

00:25.810 --> 00:29.030
kesalahan, dan memang kita melihat pesan log di sini juga.

00:29.030 --> 00:31.490
Ini hanya menyisakan satu pertanyaan penting,

00:31.490 --> 00:34.840
dalam urutan mana dekorator ini dieksekusi?

00:34.840 --> 00:36.550
Nah untuk itu, untuk mengetahuinya,

00:36.550 --> 00:38.880
mari kita lemparkan pesan log ke keduanya.

00:38.880 --> 00:41.340
Kita memiliki pesan log di Logger, jelas, sekarang

00:41.340 --> 00:43.400
mari kita pergi ke fungsi dekorator.

00:43.400 --> 00:46.350
Jadi untuk fungsi dalam WithTemplate, dan

00:46.350 --> 00:49.900
katakanlah Rendering Template, misalnya.

00:49.900 --> 00:50.733
Dan sekarang mari

00:50.733 --> 00:53.830
kita lihat dalam urutan mana fungsi-fungsi ini dieksekusi

00:53.830 --> 00:56.820
dan dalam urutan mana pernyataan log ini dicetak.

00:56.820 --> 00:59.570
Dan kita melihat Rendering Template berjalan terlebih

00:59.570 --> 01:02.540
dahulu, dan kemudian kita mendapatkan output Logger.

01:02.540 --> 01:04.070
Sekarang, tentu saja, apa yang dikatakan ini kepada

01:04.070 --> 01:06.260
kita, adalah bahwa mereka mengeksekusi dari bawah ke atas.

01:06.260 --> 01:08.033
Dekorator paling bawah terlebih dahulu,

01:08.033 --> 01:10.790
kemudian setelah itu, dekorator di atasnya.

01:10.790 --> 01:14.230
WithTemplate berjalan terlebih dahulu, kemudian Logger dijalankan.

01:14.230 --> 01:15.270
Dan yang penting, saya

01:15.270 --> 01:18.920
berbicara tentang fungsi-fungsi dekorator yang sebenarnya.

01:18.920 --> 01:23.710
Pabrik-pabrik dekorator di sini beroperasi lebih awal.

01:23.710 --> 01:26.790
Jika kita memiliki Logger Factory di sini, dan kita memiliki

01:26.790 --> 01:31.080
log yang sama di Template Factory, jadi di sana saya katakan Template Factory

01:31.080 --> 01:33.950
di log saya, Anda akan melihat bahwa di sana, sebenarnya

01:33.950 --> 01:35.000
Logger Factory berjalan

01:35.000 --> 01:37.490
terlebih dahulu, dan kemudian kita mendapatkan

01:37.490 --> 01:39.930
Template Factory.

01:39.930 --> 01:41.750
Dan itu masuk akal karena pada akhirnya,

01:41.750 --> 01:43.740
meskipun kita punya simbol @ di sini, di sini

01:43.740 --> 01:45.600
saya menjalankan fungsi, dan kita melakukan

01:45.600 --> 01:46.850
hal yang sama di sini.

01:46.850 --> 01:49.930
Dan tentu saja, aturan JavaScript biasa berlaku di sini

01:49.930 --> 01:51.380
dan eksekusi fungsi ini terjadi

01:51.380 --> 01:53.610
sebelum eksekusi fungsi ini.

01:53.610 --> 01:56.590
Itulah sebabnya kita melihat Logger Factory

01:56.590 --> 01:59.470
sebelum kita melihat Template Factory.

01:59.470 --> 02:02.650
Jadi, pembuatan fungsi-fungsi dekorator aktual kita

02:02.650 --> 02:03.970
terjadi sesuai urutan

02:03.970 --> 02:07.280
di mana kita menentukan fungsi-fungsi pabrik ini.

02:07.280 --> 02:10.780
Tetapi eksekusi fungsi-fungsi dekorator aktual kemudian

02:10.780 --> 02:12.700
terjadi dari bawah ke atas.

02:12.700 --> 02:17.300
Yang berarti dekorator paling bawah mengeksekusi terlebih dahulu,

02:17.300 --> 02:19.000
jadi fungsi dekorator ini,

02:19.000 --> 02:23.250
dan setelah itu dekorator di atasnya yang mengeksekusi.

02:23.250 --> 02:25.163
Itu hanya sesuatu yang harus Anda ketahui.

02:26.040 --> 02:29.620
Dengan itu, kita mendapat pengetahuan dasar yang kuat tentang dekorator,

02:29.620 --> 02:32.240
dan Anda juga melihat dekorator yang lebih canggih

02:32.240 --> 02:34.900
yang mudah-mudahan, juga memberi Anda kesan pertama

02:34.900 --> 02:37.810
mengapa dekorator dapat berguna, terutama jika Anda

02:37.810 --> 02:41.970
juga berpikir tentang kerangka kerja seperti Angular.

02:41.970 --> 02:46.470
Sekarang mari kita lihat tempat lain, selain kelas, kita bisa menambahkan

02:46.470 --> 02:48.140
dekorator dan apa yang mungkin

02:48.140 --> 02:50.363
bisa kita lakukan di sana.
