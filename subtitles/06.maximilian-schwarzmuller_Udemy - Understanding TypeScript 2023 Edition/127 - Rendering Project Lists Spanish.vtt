WEBVTT

00:02.370 --> 00:05.290
Narrador: Así que, ahora que somos capaces de obtener la entrada

00:05.290 --> 00:08.630
del usuario y todos los validados con la ayuda de nuestro TypeScript,

00:08.630 --> 00:11.420
la lógica de validación impulsada aquí.

00:11.420 --> 00:13.810
Sigamos adelante y asegurémonos de que hacemos

00:13.810 --> 00:17.400
algo más con esa entrada de usuario recogida que la simple salida en

00:17.400 --> 00:18.420
la consola.

00:18.420 --> 00:19.450
Porque en este momento, hay por

00:19.450 --> 00:21.330
supuesto es lo que estamos haciendo, derecho.

00:21.330 --> 00:24.670
Al final, sólo estoy imprimiendo la información de las cosas

00:24.670 --> 00:26.030
que reunimos para hacer

00:26.030 --> 00:30.300
la consola, y ese no es nuestro objetivo final en esta aplicación.

00:30.300 --> 00:34.290
En su lugar, el objetivo es, debe ser que también hizo esta lista

00:34.290 --> 00:37.770
de proyectos aquí basado en esta plantilla, donde cada

00:37.770 --> 00:41.550
elemento del proyecto se basa en esta plantilla aquí.

00:41.550 --> 00:45.750
Y sacamos la información que reunimos aquí.

00:45.750 --> 00:48.520
Así que eso será lo siguiente en lo que quiero trabajar.

00:48.520 --> 00:52.970
Además de tener nuestra cláusula de entrada del proyecto aquí, que es responsable

00:52.970 --> 00:55.440
de la representación del foro y la recopilación

00:55.440 --> 00:57.350
de la entrada del usuario, quiero tener

00:57.350 --> 00:59.410
el número de cláusula que es responsable

00:59.410 --> 01:03.230
de la representación de una lista de proyectos.

01:03.230 --> 01:06.100
Y en realidad lo dividiremos en dos cláusulas.

01:06.100 --> 01:07.650
Una cláusula para la lista

01:07.650 --> 01:11.000
y una clase por elemento del proyecto en la lista.

01:11.000 --> 01:14.970
Y luego tenemos que encontrar alguna manera de pasar esa entrada

01:14.970 --> 01:18.500
reunida aquí básicamente a nuestra lista de proyectos y

01:18.500 --> 01:20.650
añadir un nuevo elemento a ella.

01:20.650 --> 01:23.420
Así que vamos a abordar esto paso a paso, diría yo,

01:23.420 --> 01:26.880
y vamos a empezar por añadir una clase de lista de proyectos.

01:26.880 --> 01:29.380
Ahora, en el lugar exacto en el que has añadido, depende de ti.

01:29.380 --> 01:32.900
El orden no importa porque el script de Java al final

01:32.900 --> 01:36.430
analizará todo este archivo antes de ejecutarlo.

01:36.430 --> 01:38.860
Así, estará al tanto de todas las clases.

01:38.860 --> 01:41.990
Aún así, lo añadiré aquí, por encima de la cláusula de entrada del proyecto,

01:41.990 --> 01:45.740
porque dependería de la cláusula de la lista del proyecto, que estoy a punto de construir

01:45.740 --> 01:48.810
dentro de la clase de entrada del proyecto, pero de nuevo es realmente

01:48.810 --> 01:50.500
importante.

01:50.500 --> 01:55.500
Entonces, aquí tendré mi cláusula de lista de proyectos, lista de proyectos, y la idea

01:55.600 --> 01:59.230
de esta cláusula aquí está un poco relacionada con lo que hicimos

01:59.230 --> 02:01.170
en una entrada de proyectos.

02:01.170 --> 02:04.300
Quiero llegar a mi plantilla aquí y luego renderizarla en

02:04.300 --> 02:06.930
un lugar determinado fuera de la aplicación.

02:06.930 --> 02:09.480
Y por lo tanto, lo que podemos hacer aquí es que

02:09.480 --> 02:13.120
podemos añadir de nuevo un constructor, podemos añadir los campos

02:13.120 --> 02:15.310
que necesitamos y habrá que elemento de

02:15.310 --> 02:17.030
plantilla y el elemento de acogida

02:17.030 --> 02:22.030
en el final, por lo que, podemos añadir ambos aquí a nuestra lista de proyectos.

02:22.440 --> 02:25.190
También necesitaremos el elemento mismo,

02:25.190 --> 02:29.640
yo diría que el elemento concreto, que se renderiza.

02:29.640 --> 02:31.800
Sin embargo, los tipos serán diferentes.

02:31.800 --> 02:34.580
El elemento anfitrión seguirá siendo un div porque

02:34.580 --> 02:38.330
quiero renderizar esa lista en ese div aquí también.

02:38.330 --> 02:40.970
Pero el elemento concreto, que sí rendimos.

02:40.970 --> 02:43.960
Por supuesto, no es un elemento de formulario, pero si echamos

02:43.960 --> 02:46.180
un vistazo a nuestra plantilla de lista aquí,

02:46.180 --> 02:48.520
vemos que hay una sección dentro de ella.

02:48.520 --> 02:51.010
Entonces, tenemos un elemento de sección.

02:51.010 --> 02:54.420
Ahora resulta que no hay ningún elemento y los elementos de la sección,

02:54.420 --> 02:57.040
por lo que sólo tendrá un elemento HTML regular porque

02:57.040 --> 03:00.490
cada elemento tiene este tipo aquí por algún impuesto.

03:00.490 --> 03:03.060
Hay tipos más especializados si lo son,

03:03.060 --> 03:05.710
y podemos usar simplemente el tipo HTML.

03:05.710 --> 03:10.710
Así que, ahora, por supuesto, tenemos que acceder a estos elementos.

03:10.970 --> 03:15.600
Por lo tanto, podemos copiar este código aquí en realidad desde

03:15.600 --> 03:20.250
el constructor de la entrada del proyecto añadido al constructor

03:20.250 --> 03:22.260
de la lista de proyectos y ahora

03:22.260 --> 03:24.730
ajustar algunas cosas.

03:24.730 --> 03:27.630
Por ejemplo, mi elemento de plantilla por supuesto ahora no tiene

03:27.630 --> 03:29.420
una idea de la entrada del proyecto.

03:29.420 --> 03:32.150
Ahora es la lista de proyectos en su lugar.

03:32.150 --> 03:36.660
Así que, vamos a copiar eso y usar esto aquí para seleccionar el elemento.

03:36.660 --> 03:39.760
Me seguirá costando, y sigo sabiendo con certeza

03:39.760 --> 03:42.710
que lo consigo así que dis no cambia.

03:42.710 --> 03:45.520
Los elementos de acogida siguen siendo a la muerte con la aplicación de ID.

03:45.520 --> 03:47.820
Así que esto no cambia.

03:47.820 --> 03:52.070
Entonces importo mi contenido y luego yo, bueno, la tienda,

03:52.070 --> 03:53.530
el primer elemento.

03:53.530 --> 03:55.380
Fuera de la importación, la plantilla.

03:55.380 --> 03:57.780
Así que, básicamente, el primer elemento de la plantilla,

03:57.780 --> 04:01.590
que es la sección, lo almacené en la propiedad del elemento aquí.

04:01.590 --> 04:04.430
Sin embargo, no se trata de un elemento de formulario HTML.

04:04.430 --> 04:07.210
Aquí es sólo un elemento HTML.

04:07.210 --> 04:11.710
Ahora también podemos asignar un ID aquí y en realidad lo hizo, debe ser

04:11.710 --> 04:15.380
dinámico, no hard-coded porque vamos a tener más de una

04:15.380 --> 04:16.970
lista de proyectos.

04:16.970 --> 04:21.220
Quiero tener listas de herramientas en la aplicación final, una para

04:21.220 --> 04:25.060
el acto de los proyectos y otra para el acto de los proyectos, y

04:25.060 --> 04:28.420
ofrecen, quiero obtener alguna información adicional

04:28.420 --> 04:29.895
al constructor.

04:29.895 --> 04:34.870
El tipo de proyecto, y voy a utilizar las estadísticas, TypeScript acceso

04:34.870 --> 04:35.703
directo.

04:35.703 --> 04:39.250
Se aprende donde se puede añadir un accesorio delante

04:39.250 --> 04:44.170
del parámetro, private o public para crear automáticamente una propiedad

04:44.170 --> 04:48.060
del mismo nombre y almacenar el valor que se pasa en este argumento

04:48.060 --> 04:51.730
en esa propiedad igualmente nombrada.

04:51.730 --> 04:55.040
Así que ahora esta clase tendrá un nombre de propiedad para escribir también.

04:55.040 --> 04:57.910
Y ahora la pregunta es, ¿cuál es el tipo de este parámetro

04:57.910 --> 04:58.790
de tipo?

04:58.790 --> 05:03.640
Y esto debería ser en realidad un tipo literal y un tipo de unión.

05:03.640 --> 05:07.270
O está activo o está acabado.

05:07.270 --> 05:11.050
Incluso tenemos proyectos activos o terminados.

05:11.050 --> 05:14.270
Así que ese es un argumento que espero obtener cuando la lista

05:14.270 --> 05:16.080
de proyectos se instancie.

05:16.080 --> 05:20.440
Y con papá, tenemos que escribir la propiedad D ID debe ser entonces

05:20.440 --> 05:21.870
se basa en esto.

05:21.870 --> 05:25.090
Debería ser, y para papá, uso una plantilla literal aquí.

05:25.090 --> 05:30.090
Debe ser del tipo proyectos dash, es decir, proyectos dash activos

05:31.240 --> 05:33.640
o proyectos dash terminados.

05:33.640 --> 05:35.070
Esa es mi idea.

05:35.070 --> 05:37.540
Siempre puedes usar este tipo de punto para que

05:37.540 --> 05:40.380
TypeScript entienda que estamos usando esta propiedad

05:40.380 --> 05:41.890
y que no está sin usar.

05:41.890 --> 05:46.200
Así que con eso, estamos obteniendo acceso a todos los elementos del núcleo

05:46.200 --> 05:49.660
y estamos añadiendo un ID a la sección, que obtenemos de nuestra

05:49.660 --> 05:50.790
plantilla.

05:50.790 --> 05:53.650
Ahora, por supuesto, queremos un, queremos renderizarlo bien?

05:53.650 --> 05:58.600
Esa es la idea de todo esto, de nuevo, en un método privado.

05:58.600 --> 06:00.540
Adjunta la justicia.

06:00.540 --> 06:05.310
Lo teníamos en la entrada del proyecto y ahí está ahora la cola de

06:05.310 --> 06:06.310
objetivos.

06:06.310 --> 06:11.300
Bueno, adjunta esto a la Dom para que ahora se le haga la lista

06:11.300 --> 06:12.750
de papá a la Dom.

06:12.750 --> 06:16.610
Así que en lugar de adjuntar, en realidad haré lo mismo que hice un

06:16.610 --> 06:19.223
adjunto para el formulario del proyecto.

06:20.070 --> 06:24.230
Así que podemos copiar esa línea aquí y actitud adjuntar.

06:24.230 --> 06:27.040
Tengo mi elemento anfitrión y quiero insertar un

06:27.040 --> 06:28.420
elemento adyacente.

06:28.420 --> 06:30.240
Después del comienzo, y este debería ser el elemento.

06:30.240 --> 06:33.300
Lo extraemos de la plantilla aquí.

06:33.300 --> 06:36.990
Sin embargo, en realidad no quiero hacer eso después del principio,

06:36.990 --> 06:41.960
sino antes del final, lo que significa que antes del cierre, tachar el elemento

06:41.960 --> 06:45.870
anfitrión y luego podemos llamar a adjuntar aquí en el constructor,

06:45.870 --> 06:51.763
por supuesto, para adjuntar nuestro elemento creado aquí a la Dom.

06:53.880 --> 06:56.370
Sin embargo, hay una diferencia importante

06:56.370 --> 06:59.630
con respecto a la entrada del proyecto para esta lista.

06:59.630 --> 07:03.220
No se hace con sólo añadir la lista al Dom.

07:03.220 --> 07:05.270
La entrada estaba terminada, ¿verdad?

07:05.270 --> 07:07.130
La forma aquí estaba terminada.

07:07.130 --> 07:08.720
Teníamos todas las aportaciones allí.

07:08.720 --> 07:12.420
Todo lo que teníamos que hacer era configurar un receptor de eventos.

07:12.420 --> 07:15.840
Ahora para la lista aquí, en realidad no la hemos tenido

07:15.840 --> 07:16.673
con un vacío.

07:16.673 --> 07:21.130
H a la tecnología, por ejemplo, y quiero añadir algunos textos allí.

07:21.130 --> 07:22.990
Así que añadiré un número.

07:22.990 --> 07:26.020
Nuevo método a su método privado.

07:26.020 --> 07:29.120
Render o contenido podría ser un nombre adecuado.

07:29.120 --> 07:34.120
Y mi idea aquí es llenar los espacios en blanco de esa plantilla

07:34.230 --> 07:36.862
con algún año de vida.

07:36.862 --> 07:37.780
Por eso.

07:37.780 --> 07:40.040
Vamos al método de renderización de contenido muerto,

07:40.040 --> 07:41.580
y hay un par de cosas que quiero hacer.

07:41.580 --> 07:45.390
Una cosa es el estado para la lista desordenada muerto, que es parte

07:45.390 --> 07:47.200
de mi lista de proyectos aquí.

07:47.200 --> 07:48.640
Quiero añadirle una identificación.

07:48.640 --> 07:50.860
Por supuesto que no tienes que hacerlo, pero quiero hacerlo

07:50.860 --> 07:53.500
para que si necesitamos seleccionarlo más tarde, podamos hacerlo

07:53.500 --> 07:54.390
con estos.

07:54.390 --> 07:58.220
Así que voy a crear un ID de la lista aquí se almacena en una constante, y esto

07:58.220 --> 08:00.190
será un literal de la plantilla, por

08:00.190 --> 08:04.100
lo que será una cadena en la que podemos inyectar contenido dinámico, y quiero

08:04.100 --> 08:09.100
basar esto en el tipo de la lista de proyectos de los alrededores, por lo que fuera de la sección

08:09.370 --> 08:14.370
de los alrededores, y luego añadir la lista de proyectos a partir de entonces.

08:15.220 --> 08:19.700
Ahora podemos llegar a la lista de una orden, que obtenemos en nuestro elemento, que es el

08:19.700 --> 08:22.890
año de la sección de estadísticas, el elemento derecho es la sección

08:22.890 --> 08:23.820
de muertos.

08:23.820 --> 08:27.360
Así que para obtener la lista desordenada dentro de allí, podemos,

08:27.360 --> 08:30.940
por ejemplo, utilizar un selector de consulta y buscar la primera,

08:30.940 --> 08:33.120
y en este caso única lista desordenada.

08:33.120 --> 08:35.720
Sabemos que obtendremos uno porque sabemos que habrá uno y entonces

08:35.720 --> 08:38.280
podemos añadir un ID aquí, que debería ser el ID de la lista.

08:38.280 --> 08:40.280
Eso es algo que quiero hacer.

08:40.280 --> 08:44.970
También quiero establecer el contenido de texto de esa edad a la etiqueta

08:44.970 --> 08:50.200
aquí y para ello podemos llegar a este elemento, selector de consulta.

08:50.200 --> 08:53.020
Encuentra la primera y única etiqueta HQ.

08:53.020 --> 08:56.340
Sabemos que encontraremos una, de ahí el signo de exclamación

08:56.340 --> 09:01.340
para descartar las cajas nulas muertas y establecer el contenido del texto igual a este

09:02.940 --> 09:05.610
para escribirlo en mayúsculas.

09:05.610 --> 09:08.130
Recuerda que el tipo está siempre activo.

09:08.130 --> 09:10.060
Hemos terminado con dos casos de ópera.

09:10.060 --> 09:15.060
Convertimos esto en mayúsculas más proyectos, también lo hace un Sten.

09:16.200 --> 09:19.853
Simplemente el encabezamiento hacia adelante es la sección.

09:21.970 --> 09:25.220
Y ahora con eso, estamos, generalmente hemos terminado.

09:25.220 --> 09:27.580
Todavía no tenemos artículos en esa lista.

09:27.580 --> 09:30.230
Trabajaremos en esto más tarde, pero en general hemos terminado.

09:30.230 --> 09:35.120
Podemos llamar a este render un contenido o después de adjuntarlo

09:35.120 --> 09:37.210
al Dom, por ejemplo.

09:37.210 --> 09:39.210
Ahora sería bueno verlos en acción.

09:39.210 --> 09:42.600
Por supuesto, de nuevo, los elementos de la lista termina en se

09:42.600 --> 09:45.523
perderá, pero sería bueno ver algo en acción aquí.

09:46.690 --> 09:49.620
Bien, para ello, vamos a la parte inferior del archivo

09:49.620 --> 09:53.310
donde instanciamos la entrada del proyecto y allí no podemos instanciar

09:53.310 --> 09:55.200
siempre nuestras listas.

09:55.200 --> 09:59.200
Tenemos la lista de proyectos activa, que instanciamos, pero llamando

09:59.200 --> 10:01.230
a la nueva lista de proyectos.

10:01.230 --> 10:04.220
Y ahí tenemos que pasar ese argumento de tipo, que

10:04.220 --> 10:06.040
es activo o terminado aquí.

10:06.040 --> 10:08.610
Como estoy haciendo la lista de activos, por supuesto

10:08.610 --> 10:09.950
que paso a inactivos.

10:09.950 --> 10:13.140
Y luego aquí tenemos la lista de proyectos terminados donde

10:13.140 --> 10:15.290
yo, por supuesto, paso a terminar.

10:15.290 --> 10:18.673
Si ahora estamos seguros de que debe compilar sin errores.

10:19.520 --> 10:23.090
Y por lo tanto lo que deberías ver si vuelves atrás son estas

10:23.090 --> 10:27.770
dos secciones vacías aquí con los encabezados aquí y bueno, el espacio vacío

10:27.770 --> 10:33.390
donde se añadirán los elementos posteriores, los elementos del proyecto.

10:33.390 --> 10:37.440
Ahora, por el momento, no tenemos esos elementos del proyecto, la nieve.

10:37.440 --> 10:39.710
Así que como siguiente paso, deberíamos

10:39.710 --> 10:43.660
trabajar en alguna forma de asegurarnos de que cuando hacemos

10:43.660 --> 10:49.420
clic en añadir proyecto, que creamos un nuevo proyecto en código.

10:49.420 --> 10:53.730
Así que una nueva estructura de datos que representa un proyecto,

10:53.730 --> 10:58.047
y que luego pasamos esta información sobre este nuevo proyecto

10:58.047 --> 10:59.870
a la ley de proyectos.

10:59.870 --> 11:03.850
Enumerar aquí a esta sección de proyectos activos, porque cada nuevo

11:03.850 --> 11:06.500
proyecto debe estar activo por defecto.

11:06.500 --> 11:09.390
Este será nuestro próximo objetivo y, de nuevo, habrá

11:09.390 --> 11:12.080
muchas formas diferentes de aplicarlo.

11:12.080 --> 11:16.703
Lo haremos juntos con una forma que se me ocurrió en la próxima conferencia.
