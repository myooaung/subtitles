WEBVTT

00:02.190 --> 00:05.030
Istruttore: Abbiamo aggiunto webpack, uno strumento molto

00:05.030 --> 00:08.070
importante che ci permette di raggruppare i nostri diversi file

00:08.070 --> 00:09.690
in un unico pacchetto.

00:09.690 --> 00:12.090
Questo ci aiuta a ridurre la quantità di richieste

00:12.090 --> 00:14.500
HTTP effettuate e, quindi, a velocizzare

00:14.500 --> 00:16.500
la nostra applicazione.

00:16.500 --> 00:19.840
Se ci si trova a lavorare con molti singoli file, cosa che di solito

00:19.840 --> 00:22.270
accade nei progetti più grandi, strumenti come

00:22.270 --> 00:24.360
webpack sono indispensabili e webpack

00:24.360 --> 00:26.910
è lo strumento più importante e importante che ci

00:26.910 --> 00:28.200
aiuta in questo senso, quindi

00:28.200 --> 00:31.190
è lo strumento che volevo mostrare qui.

00:31.190 --> 00:33.730
Si vede che webpack è altamente configurabile e,

00:33.730 --> 00:36.190
come ho detto più volte, i documenti ufficiali

00:36.190 --> 00:39.630
di webpack sono il posto giusto per imparare tutto su di esso.

00:39.630 --> 00:42.120
Sui diversi caricatori, sulle diverse impostazioni di errore

00:42.120 --> 00:44.770
che si possono impostare e su come funziona, in generale.

00:44.770 --> 00:47.109
Quindi, se si vuole diventare un maestro di webpack

00:47.109 --> 00:49.660
e si vuole avere una configurazione più elaborata, bisogna

00:49.660 --> 00:52.720
assolutamente approfondire questa documentazione.

00:52.720 --> 00:55.610
La nostra configurazione di base, tuttavia, ci

00:55.610 --> 00:58.200
consente già di compilare i file TypeScript

00:58.200 --> 01:00.940
con webpack e di riunire tutti i risultati in

01:00.940 --> 01:03.820
un unico bundle. file js.

01:03.820 --> 01:06.500
Abbiamo anche impostato una configurazione

01:06.500 --> 01:09.050
per lo sviluppo che facilita il debug e fornisce

01:09.050 --> 01:11.510
messaggi di errore più utili.

01:11.510 --> 01:13.250
E otteniamo una configurazione

01:13.250 --> 01:15.570
di produzione che ci fornisce un codice altamente

01:15.570 --> 01:17.840
ottimizzato che possiamo poi distribuire

01:17.840 --> 01:21.160
a un server per inviargli il minor codice possibile.

01:21.160 --> 01:22.210
E questo è tutto.

01:22.210 --> 01:25.740
webpack è davvero uno strumento fondamentale ed è importantissimo

01:25.740 --> 01:26.573
poterlo usare

01:26.573 --> 01:30.260
e avere una configurazione che funzioni davvero.

01:30.260 --> 01:33.800
Si tratta quindi di un elemento imprescindibile in qualsiasi progetto

01:33.800 --> 01:36.710
moderno e in questo modulo imparerete come iniziare a utilizzarlo

01:36.710 --> 01:38.763
nei vostri progetti TypeScript.
