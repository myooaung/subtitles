WEBVTT

00:02.170 --> 00:03.420
Người hướng dẫn: Vậy chúng ta hãy bắt đầu.

00:03.420 --> 00:06.330
Như tôi đã đề cập, ở đây tôi sẽ tạo một API REST rất cơ

00:06.330 --> 00:09.130
bản nhưng tất nhiên bạn có thể xây dựng bất kỳ ứng

00:09.130 --> 00:10.810
dụng Node nào có hoặc không có

00:10.810 --> 00:13.780
express và theo bất kỳ cách nào với TypeScript, vì

00:13.780 --> 00:15.570
vậy đây chỉ là một ví dụ.

00:15.570 --> 00:18.990
Bạn không bị hạn chế đối với ứng dụng cụ thể này.

00:18.990 --> 00:21.560
Trong thư mục src, tôi sẽ thêm một ứng dụng. ts sẽ là điểm

00:21.560 --> 00:23.060
vào gốc nơi chúng

00:23.060 --> 00:25.970
tôi khởi động máy chủ đó.

00:25.970 --> 00:29.530
Và ở đó tôi muốn nhập thứ gì đó từ Express, từ

00:29.530 --> 00:31.203
khung Express này.

00:32.970 --> 00:35.460
Bây giờ bạn có thể biết cách chúng tôi có thể thêm Express

00:35.460 --> 00:37.890
tại đây và thiết lập máy chủ web với Express.

00:37.890 --> 00:41.330
Chúng tôi nhập Express với cú pháp này tại đây và

00:41.330 --> 00:46.330
sau đó tại đây, chúng tôi có thể thực thi Express dưới dạng một hàm.

00:46.380 --> 00:50.170
Chúng tôi lấy lại một đối tượng ứng dụng như vậy, trên đó chúng tôi có thể

00:50.170 --> 00:53.750
gọi hàm nghe để nghe trên một cổng nhất định cho các yêu cầu đến.

00:53.750 --> 00:56.120
Bây giờ điều này sẽ hoạt động trong JavaScript bình

00:56.120 --> 00:58.420
thường, nhưng bạn đã thấy tôi đang gặp lỗi ở đây.

00:59.540 --> 01:01.600
Bây giờ tôi cũng nhận được một

01:01.600 --> 01:03.500
gợi ý tại sao tôi có thể gặp lỗi

01:03.500 --> 01:06.290
này ở đây vì yêu cầu thực sự là một chức năng

01:06.290 --> 01:10.100
tồn tại trong ghi chú. js, nhưng không phải ở phía trình duyệt.

01:10.100 --> 01:12.540
Bây giờ trong tệp tsconfig. json của tôi, tôi không sử

01:12.540 --> 01:16.640
dụng bất kỳ lib đặc biệt nào hỗ trợ node. js, vì vậy trong các TypeScript

01:16.640 --> 01:18.120
này, nó không biết chức

01:18.120 --> 01:20.150
năng chung này tồn tại trong

01:20.150 --> 01:22.900
một nút. môi trường js.

01:22.900 --> 01:27.140
Bây giờ để thực hiện công việc này, chúng tôi cần cài đặt một loại bổ sung với

01:27.140 --> 01:30.220
"npm install --save-dev", chúng tôi có thể cài đặt "@types/node"

01:30.220 --> 01:32.410
để cài đặt tất cả các loại chúng tôi cần để

01:32.410 --> 01:36.291
làm việc với nút. js Vì vậy, hãy chạy lệnh này

01:36.291 --> 01:39.460
và xem điều đó có giúp chúng ta không.

01:39.460 --> 01:42.320
Vâng, nó đã hoàn thành và lỗi này đã biến mất.

01:42.320 --> 01:44.390
Nhưng có lẽ bạn cũng thấy rằng trên ứng dụng tôi không

01:44.390 --> 01:46.680
nhận được bất kỳ tính năng tự động hoàn thành nào.

01:46.680 --> 01:50.190
Nó cũng không báo lỗi, nhưng nếu chúng ta di chuột qua ứng dụng, chúng ta sẽ thấy

01:50.190 --> 01:52.410
rằng TypeScript không biết có gì trong đó.

01:52.410 --> 01:54.210
Nó thuộc loại "bất kỳ".

01:54.210 --> 01:56.530
Vì vậy, có lẽ chúng ta nên cài đặt nhiều

01:56.530 --> 01:59.930
loại hơn và cũng cài đặt "@types/express" để cài đặt

01:59.930 --> 02:02.410
các loại dành riêng cho express.

02:02.410 --> 02:04.320
Và đó là một mô hình bạn đã biết.

02:04.320 --> 02:06.850
Chúng tôi đã xem xét điều đó trong phần thư viện

02:06.850 --> 02:08.350
bên thứ ba của khóa học.

02:08.350 --> 02:12.030
Ở đó, tôi cũng đã chỉ cho bạn cách bạn có thể cài đặt các gói loại để được

02:12.030 --> 02:15.220
hỗ trợ tốt hơn trong các tập lệnh TypeScript của mình.

02:15.220 --> 02:19.320
Vậy là thêm loại này vào, không cần cấu hình gì thêm,

02:19.320 --> 02:22.030
Hah, nó vẫn không hoạt động.

02:22.030 --> 02:23.140
Lý do cho điều đó là cú

02:23.140 --> 02:25.330
pháp nhập mà chúng tôi đang sử dụng ở đây.

02:25.330 --> 02:28.270
Đây là phổ biến thường xuyên. js cú pháp nhập khẩu

02:28.270 --> 02:30.450
mà lưu ý. js sử dụng theo mặc định,

02:30.450 --> 02:33.660
nhưng thực tế ở đây chúng ta đang ở trong một môi trường TypeScript

02:33.660 --> 02:36.140
nơi chúng ta có thể sử dụng một cú pháp nhập khác.

02:36.140 --> 02:38.230
Chúng tôi có thể sử dụng cùng một cú pháp nhập mà chúng

02:38.230 --> 02:40.373
tôi biết từ các mô-đun ES trong trình duyệt.

02:41.240 --> 02:46.240
Vì vậy, chúng tôi có thể sử dụng "nhập express từ 'express'" chẳng hạn.

02:46.710 --> 02:48.620
Và nếu chúng tôi làm điều đó và sau đó di chuột qua "ứng dụng", bây

02:48.620 --> 02:49.910
giờ bạn sẽ thấy nó thuộc loại 'Express'.

02:49.910 --> 02:53.040
Vì vậy, bây giờ chúng tôi đã có hỗ trợ TypeScript.

02:53.040 --> 02:54.569
Bây giờ, một lưu ý quan trọng.

02:54.569 --> 02:58.790
Trong lưu ý. js cũng tồn tại một cú pháp

02:58.790 --> 03:00.810
tương tự như cú pháp này.

03:00.810 --> 03:03.420
Bây giờ nó đang ở dưới một lá cờ thử nghiệm và nó đã

03:03.420 --> 03:06.190
ở dưới lá cờ đó trong một thời gian rất dài, vì vậy việc

03:06.190 --> 03:10.010
sử dụng common. js trong ghi chú. js cho đến nay là cách

03:10.010 --> 03:13.482
mặc định và phổ biến nhất để thêm nhập và xuất.

03:13.482 --> 03:16.060
Cú pháp giống như cú pháp này được hỗ trợ nếu bạn

03:16.060 --> 03:18.380
đặt cờ thử nghiệm này, nhưng ở đây trong

03:18.380 --> 03:19.990
mã này, chúng tôi thực sự không

03:19.990 --> 03:24.012
sử dụng nút thử nghiệm này. cú pháp js.

03:24.012 --> 03:26.209
Thay vào đó, chúng tôi đang sử dụng TypeScript.

03:26.209 --> 03:29.859
Khi chúng tôi biên dịch nó thành JavaScript, điều này sẽ thay đổi.

03:29.859 --> 03:31.860
Và tôi thực sự có thể cho bạn xem cái này

03:31.860 --> 03:34.060
để chúng ta cũng có thể thực hiện nó.

03:34.060 --> 03:36.230
Nếu bạn chạy "tsc" ở đây, có

03:36.230 --> 03:40.330
thể "tsc-w" đã vào chế độ xem, bạn sẽ thấy điều này bắt

03:40.330 --> 03:42.680
đầu quá trình biên dịch.

03:42.680 --> 03:44.110
Nó tạo một thư mục dist và trong

03:44.110 --> 03:46.770
đó chúng ta có một ứng dụng. js và ở đây, giờ

03:46.770 --> 03:50.040
đây, tệp này trông khác.

03:50.040 --> 03:54.500
Bạn thấy đấy, bây giờ nó không thiết lập quá trình nhập theo cách chúng

03:54.500 --> 03:55.710
tôi có ở đây.

03:55.710 --> 03:58.900
Thay vào đó, nó sử dụng một cú pháp khác.

03:58.900 --> 04:02.350
Vì vậy, đây là đoạn mã thực sự sẽ được thực thi.

04:02.350 --> 04:04.780
Và chúng ta có thể thực hiện điều này bằng gật

04:04.780 --> 04:07.640
đầu với công cụ này tự động khởi động lại máy chủ nếu

04:07.640 --> 04:09.470
mã của chúng ta thay đổi bằng cách

04:09.470 --> 04:12.230
mở một tab mới tại đây trong thiết bị đầu cuối.

04:12.230 --> 04:13.620
Giữ tab khác mở vì đó là quá trình

04:13.620 --> 04:15.960
biên dịch TypeScript của chúng tôi và trong tab

04:15.960 --> 04:18.760
mới đó, chúng tôi muốn khởi động máy chủ của mình với sự trợ

04:18.760 --> 04:20.095
giúp của gật đầu.

04:20.095 --> 04:22.990
Đối với điều đó, chúng ta hãy đi đến gói. json và thêm tập lệnh

04:22.990 --> 04:26.260
mới, có thể là tập lệnh bắt đầu, nơi chúng tôi

04:26.260 --> 04:30.900
nói "gật đầu dist/app. js" để gật đầu thực thi tệp này

04:30.900 --> 04:34.200
trong thư mục dist và khởi động máy chủ của

04:34.200 --> 04:36.360
chúng tôi với tệp đó.

04:36.360 --> 04:39.430
Và với điều đó được thêm vào và gói. json đã lưu, chúng tôi có

04:39.430 --> 04:43.240
thể chạy npmstart để khởi động máy chủ phát triển của mình.

04:43.240 --> 04:47.710
Và bây giờ nó đang phục vụ ứng dụng dist này. js Bây giờ, đó là thiết lập chung mà

04:47.710 --> 04:49.230
chúng tôi có và đó là TypeScript

04:49.230 --> 04:52.030
đã thực hiện một số công việc ở đây.

04:52.030 --> 04:53.940
Chúng tôi cũng có TypeSupport.

04:53.940 --> 04:55.360
Và ở đây bạn thấy trong ứng dụng. ts, chúng ta có

04:55.360 --> 04:57.756
thể viết mã trông rất quen thuộc với chúng ta

04:57.756 --> 05:01.420
bằng cú pháp nhập/xuất mà chúng ta đã biết, nhưng những gì chúng ta nhận

05:01.420 --> 05:03.640
được dưới dạng đầu ra nằm ở nút JavaScript

05:03.640 --> 05:07.000
thông thường cuối cùng. js và điều đó

05:07.000 --> 05:09.640
cực kỳ hữu ích.

05:09.640 --> 05:12.140
Bây giờ với điều đó, hãy làm những việc hữu ích

05:12.140 --> 05:15.003
hơn là chỉ khởi động một máy chủ không làm gì cả.
