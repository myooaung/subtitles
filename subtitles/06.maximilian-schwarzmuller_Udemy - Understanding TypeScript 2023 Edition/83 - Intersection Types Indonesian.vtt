WEBVTT

00:02.310 --> 00:03.143
Instruktur: Untuk ini,

00:03.143 --> 00:05.860
saya kembali ke pengaturan proyek umum yang kita kerjakan sebelumnya.

00:05.860 --> 00:10.940
Anda akan menemukannya terlampir dalam indeks. html dan aplikasi.

00:10.940 --> 00:10.940
ts file.

00:10.940 --> 00:15.410
Dan di sana, saya ingin terjun langsung dengan jenis persimpangan.

00:15.410 --> 00:19.570
Tipe-tipe persimpangan memungkinkan kita untuk menggabungkan tipe-tipe lain.

00:19.570 --> 00:23.280
Katakanlah kita memiliki tipe admin, yang merupakan tipe objek,

00:23.280 --> 00:25.430
jadi sekali lagi, ini tidak membuat

00:25.430 --> 00:28.170
objek di sini, kita mendefinisikan sebuah tipe,

00:28.170 --> 00:30.340
jadi saya hanya mendefinisikan definisi

00:31.200 --> 00:35.560
tipe di sini dan admin harus memiliki nama, yang merupakan string, katakanlah,

00:35.560 --> 00:38.230
dan admin juga harus memiliki hak istimewa,

00:39.910 --> 00:44.370
dan itu harus berupa array string, misalnya.

00:44.370 --> 00:47.010
Sekarang, kita bisa saja membuat ini dengan

00:47.010 --> 00:48.950
antarmuka tetapi di sini saya melakukannya

00:49.810 --> 00:54.470
dengan tipe dan sekarang saya memiliki tipe lain, tipe karyawan umum, katakanlah,

00:54.470 --> 00:59.130
dan di sana saya juga memiliki nama, string.

00:59.130 --> 01:02.890
Saya tidak memiliki hak istimewa, tetapi saya memiliki tanggal mulai.

01:02.890 --> 01:04.380
Itu bisa dari jenis tanggal.

01:04.380 --> 01:07.350
Kita belum pernah melihat itu sebelumnya, tetapi tanggal

01:07.350 --> 01:10.340
adalah tipe yang didukung oleh skrip berdasarkan objek data

01:10.340 --> 01:12.163
yang dibangun di JavaScript.

01:13.730 --> 01:17.580
Jadi sekarang kita ingin membuat tipe baru di sini, karyawan

01:17.580 --> 01:21.120
yang ditinggikan, katakanlah, yang seharusnya merupakan

01:21.120 --> 01:23.900
kombinasi dari kedua tipe ini.

01:23.900 --> 01:26.470
Tentu saja, kita bisa membuatnya secara manual hanya

01:26.470 --> 01:28.770
dengan mendefinisikan tipe objek, yang memiliki

01:28.770 --> 01:31.750
nama, yang memiliki tanggal mulai, dan yang memiliki hak

01:31.750 --> 01:34.120
istimewa, tetapi jika kita sudah memiliki kedua

01:34.120 --> 01:37.540
tipe ini, maka kita juga bisa menggabungkannya dengan mengatakan

01:37.540 --> 01:42.000
admin dan, jadi kita menggunakan simbol ampersand di sini, employee.

01:42.000 --> 01:44.370
Dan sekarang hasilnya adalah tipe objek baru

01:44.370 --> 01:46.390
yang harus memiliki keduanya.

01:46.390 --> 01:50.470
Jadi jika saya memiliki karyawan saya, E satu, yang harus bertipe

01:50.470 --> 01:54.770
karyawan yang ditinggikan, maka saya dapat menyimpan objek di dalamnya

01:54.770 --> 01:57.440
yang harus memiliki properti nama, yang

01:57.440 --> 02:00.113
harus memiliki properti hak istimewa, membuat

02:02.510 --> 02:08.800
server, dan yang juga harus memiliki tanggal mulai dengan data baru.

02:08.800 --> 02:10.070
Membuat objek data baru yang

02:10.070 --> 02:12.700
secara sederhana adalah timestamp saat ini.

02:12.700 --> 02:15.610
Jadi, sekarang ini adalah cara sederhana untuk menggabungkan dua jenis.

02:15.610 --> 02:17.740
Sekarang, saya akan mengatakan

02:17.740 --> 02:21.550
bahwa tipe interseksi terkait erat dengan pewarisan

02:21.550 --> 02:24.320
antarmuka karena tentu saja kita bisa

02:24.320 --> 02:28.590
mencapai hal yang sama di sini dengan menggunakan antarmuka

02:29.620 --> 02:32.420
admin dan kemudian antarmuka karyawan,

02:32.420 --> 02:34.700
dan kemudian kita juga bisa menggunakan

02:34.700 --> 02:38.853
tipe interseksi pada antarmuka ini atau kita membuat antarmuka

02:40.100 --> 02:44.040
ketiga, karyawan yang ditinggikan, yang memperluas karyawan

02:47.230 --> 02:50.653
dan admin.

02:52.700 --> 02:54.520
Oleh karena itu, jika sekarang saya mengomentari

02:54.520 --> 02:56.830
hal ini, kita akan memiliki efek yang sama persis.

02:56.830 --> 02:58.550
Sekarang, bisa dibilang, itu sedikit lebih banyak kode.

02:58.550 --> 03:01.750
Salah satu alasan mengapa kita mungkin lebih suka menggunakan

03:01.750 --> 03:04.280
tipe di sini daripada antarmuka, tetapi hubungannya

03:04.280 --> 03:06.300
jelas sangat dekat dan Anda benar-benar

03:06.300 --> 03:09.770
dapat menggunakan antarmuka untuk contoh ini.

03:09.770 --> 03:13.040
Namun demikian, perlu dicatat bahwa meskipun tipe interseksi

03:13.040 --> 03:15.600
bisa sangat berguna ketika digunakan bersama dengan

03:15.600 --> 03:18.240
tipe objek seperti yang kita lakukan di sini, Anda

03:18.240 --> 03:20.910
bisa menggunakannya dengan tipe apa pun.

03:20.910 --> 03:22.683
Jadi jika Anda memiliki beberapa

03:23.655 --> 03:28.450
tipe lain, dapat digabungkan, katakanlah, itu adalah string atau angka, jadi kita

03:28.450 --> 03:29.940
memiliki tipe union di sini

03:29.940 --> 03:32.380
dengan tipe dasar string atau angka dan kemudian

03:32.380 --> 03:34.770
kita memiliki tipe numerik di sini, yang

03:34.770 --> 03:38.660
merupakan angka atau boolean, nah, kita bisa memiliki, katakanlah,

03:38.660 --> 03:43.660
tipe universal di sini dengan memotong combinable dengan numerik dan pada akhirnya,

03:43.730 --> 03:48.160
tipe kemudian dapat melihat universal tentu saja adalah tipe angka karena

03:48.160 --> 03:49.800
itulah satu-satunya persimpangan

03:49.800 --> 03:51.950
yang kita miliki di sini tetapi jika Anda

03:51.950 --> 03:56.520
memiliki lebih banyak persimpangan, maka ini akan menjadi tipe yang ditugaskan

03:56.520 --> 03:59.830
universal sehingga bisa juga menjadi tipe union, yang merupakan

03:59.830 --> 04:04.940
perpotongan dari dua tipe union ini.

04:04.940 --> 04:07.800
Jadi operator interseksi dapat digunakan dengan

04:07.800 --> 04:11.790
tipe apa saja dan kemudian hanya membangun perpotongan dari tipe-tipe

04:11.790 --> 04:12.980
ini.

04:12.980 --> 04:14.330
Dalam kasus tipe union, yang

04:14.330 --> 04:17.300
pada dasarnya adalah tipe-tipe yang mereka miliki bersama.

04:17.300 --> 04:18.890
Dalam kasus tipe objek, ini

04:18.890 --> 04:22.220
hanyalah kombinasi dari properti objek ini, jadi bisa

04:22.220 --> 04:23.510
dikatakan.

04:23.510 --> 04:25.960
Jadi, ini adalah jenis persimpangan.

04:25.960 --> 04:27.360
Kadang-kadang bisa berguna.

04:27.360 --> 04:29.050
Anda tidak akan menggunakannya sepanjang

04:29.050 --> 04:31.570
waktu, tetapi Anda pasti akan menemukan situasi di mana Anda

04:31.570 --> 04:35.010
dapat mengekspresikan sesuatu dengan cara yang lebih sederhana atau lebih singkat

04:35.010 --> 04:37.230
dengan menggunakan jenis persimpangan.

04:37.230 --> 04:39.520
Sekarang hanya untuk membuktikan bahwa ini semua berfungsi,

04:39.520 --> 04:42.050
izinkan saya membuka tab baru di sini di terminal saya dan

04:42.050 --> 04:45.390
menjalankan TSC dash W untuk memulai mode tontonan sehingga saya tidak hanya

04:45.390 --> 04:47.770
harus masuk ke server langsung tetapi saya sebenarnya

04:47.770 --> 04:49.850
juga membangun kode saya.

04:49.850 --> 04:51.210
Sekarang jika saya memuat ulang

04:51.210 --> 04:53.200
sekali di sini, kita melihat ini berjalan tanpa

04:53.200 --> 04:55.443
kesalahan dan juga mengkompilasi tanpa kesalahan.
