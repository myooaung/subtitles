WEBVTT

00:02.120 --> 00:05.300
Man: Jadi bagaimana kita bisa menampilkan koordinat pada peta sekarang?

00:05.300 --> 00:08.180
Untuk itu lagi, kita akan menggunakan Google API.

00:08.180 --> 00:10.690
Jika Anda mencari Google JavaScript Maps,

00:10.690 --> 00:13.810
atau Google JS Maps, Anda akan menemukan dokumen resmi

00:13.810 --> 00:16.970
untuk Google JavaScript Google Maps API.

00:16.970 --> 00:19.660
Dan di sini Anda akan belajar bagaimana Anda dapat menggunakan Google

00:19.660 --> 00:22.020
Maps dalam aplikasi web Anda untuk merender peta.

00:22.020 --> 00:24.720
Dan itu benar-benar lurus ke depan dan sederhana.

00:24.720 --> 00:27.280
Pertama-tama kita perlu menambahkan skrip

00:27.280 --> 00:31.720
ini di sini, yang akan menambahkan Google Maps SDK ini ke aplikasi kita.

00:31.720 --> 00:34.220
Jadi, cukup ambil skrip itu, dan tambahkan

00:34.220 --> 00:38.210
ke file html indeks Anda, di atas skrip Anda.

00:38.210 --> 00:40.670
Sekarang penting, kita tidak menginstal NPM

00:40.670 --> 00:42.920
ini, karena tidak dipublikasikan ke NPM,

00:42.920 --> 00:45.900
maka kita menggunakan tautan CDN ini, yang menarik skrip,

00:45.900 --> 00:48.140
langsung dari server Google.

00:48.140 --> 00:51.560
Dan di sini kita perlu menyiapkan API_KEY kita.

00:51.560 --> 00:54.390
Sekarang tentu saja API_KEY yang sudah kita

00:54.390 --> 00:57.430
miliki di sini file typescript, jadi kita bisa menyalinnya

00:57.430 --> 01:02.170
ke dalam index html dan mengganti YOUR_API_KEY dengan itu.

01:02.170 --> 01:06.120
Dan juga singkirkan "&amp;callback=initMap" di bagian akhir,

01:06.120 --> 01:07.150
ini akan memicu

01:07.150 --> 01:10.240
fungsi segera setelah peta ini dimuat, atau saat

01:10.240 --> 01:13.430
SDK ini dimuat, dan itu bukan sesuatu yang saya inginkan

01:13.430 --> 01:14.843
di sini.

01:15.840 --> 01:19.760
Jadi, dengan itu, kita memuat SDK ini, dan sekarang kita bisa

01:19.760 --> 01:22.820
menggunakannya, dan di sinilah kita akan mengalami

01:22.820 --> 01:24.250
masalah.

01:24.250 --> 01:26.210
Saya ingin menggunakannya untuk merender

01:26.210 --> 01:28.710
peta, dan merender peta sebenarnya lurus ke depan.

01:28.710 --> 01:31.070
Dalam dokumen resmi, kita melihat bahwa pada akhirnya kita harus menginstansiasi

01:31.070 --> 01:33.870
google ini. peta. Fungsi konstruktor

01:33.870 --> 01:36.870
peta, berikan pusat ke sana, yang pada

01:36.870 --> 01:38.960
dasarnya ...

01:38.960 --> 01:41.720
Pasangan koordinat ini kita dapatkan dari belakang,

01:41.720 --> 01:43.250
dan menambahkan level zoom.

01:43.250 --> 01:45.820
Jadi kita bisa menyalin ini, dan kemudian di

01:45.820 --> 01:48.710
sini setelah kita mendapatkan koordinatnya, jalankan

01:48.710 --> 01:50.010
kode ini, dan mungkin menyimpan

01:50.010 --> 01:53.750
peta di sini dalam konstanta bernama "Map. Tetapi tentu saja kita mendapatkan kesalahan di sini.

01:53.750 --> 01:55.117
"Cannot find name google,"

01:55.117 --> 01:57.600
dan itu masuk akal, ini tidak akan tersedia

01:57.600 --> 02:01.320
secara global, tetapi typescript tidak tahu itu.

02:01.320 --> 02:03.380
Ini akan tersedia secara global,

02:03.380 --> 02:06.300
karena JavaScript SDK yang kami impor.

02:06.300 --> 02:08.343
Tetapi tentu saja typescript tidak mengetahui hal ini.

02:09.390 --> 02:12.270
Anda akan mempelajari apa yang dapat Anda lakukan

02:12.270 --> 02:14.200
di sana, Anda tentu saja dapat

02:14.200 --> 02:19.200
menggunakan "declare var google," dan mengatur ini ke sembarang.

02:19.990 --> 02:21.020
Dengan itu Anda mengatakan pada typescript,

02:21.020 --> 02:22.887
"Tidak apa-apa, ini akan ada, jangan khawatir. Kita bisa melakukan itu, dan kesalahannya hilang.

02:22.887 --> 02:26.480
Sekarang kita juga bisa menggunakan koordinat kita di sini,

02:26.480 --> 02:29.060
alih-alih koordinat yang dikodekan secara

02:29.060 --> 02:31.370
keras, dan jika kita juga ingin merender

02:31.370 --> 02:33.480
marker, itu juga memungkinkan.

02:33.480 --> 02:36.430
Dalam dokumen resmi, cukup klik, "Menambahkan peta

02:36.430 --> 02:37.930
dengan marker," kita belajar,

02:37.930 --> 02:39.517
bahwa menambahkan marker sangat

02:39.517 --> 02:41.520
mudah, kita hanya menggunakan peta

02:41.520 --> 02:44.600
yang dibuat, dan membuat marker dengan perintah ini,

02:44.600 --> 02:47.223
dan arahkan ke peta ini.

02:49.040 --> 02:50.950
Jadi kita hanya akan menyalin potongan

02:50.950 --> 02:52.980
kode ini di sini, dan kembali ke kode kita,

02:52.980 --> 02:56.130
setelah kita membuat peta, saya membuat penanda saya seperti

02:56.130 --> 02:59.160
ini, dan posisi di sini lagi adalah koordinat saya.

02:59.160 --> 03:01.160
Jadi, ini sekarang akan merender

03:01.160 --> 03:04.173
peta, dan menempatkan penanda di atasnya.

03:05.040 --> 03:06.600
Satu-satunya hal yang tersisa adalah,

03:06.600 --> 03:08.580
kita perlu memastikan bahwa peta ini dirender

03:08.580 --> 03:10.350
di tempat yang tepat.

03:10.350 --> 03:12.350
Secara default, ia mencari elemen dengan I. D. "peta" dan itulah yang kita

03:12.350 --> 03:14.010
miliki di sini.

03:14.010 --> 03:16.670
Tetapi jika Anda memilih I yang berbeda. D. di sini, pastikan untuk

03:16.670 --> 03:18.720
menyesuaikan ini dalam kode typescript Anda.

03:18.720 --> 03:20.470
Dengan itu

03:20.470 --> 03:23.473
jika kita menyimpan ini, itu mengkompilasi tanpa

03:24.610 --> 03:26.890
kesalahan, dan sekarang jika saya

03:26.890 --> 03:30.640
memasukkan alamat di sini, itu akan membuat ini.

03:30.640 --> 03:33.450
Jadi ini berfungsi, dan kita bisa menyesuaikan tingkat zoom di

03:33.450 --> 03:35.320
sini, untuk di-zoom sedikit lebih banyak,

03:35.320 --> 03:38.650
misalnya mengubahnya menjadi 16, dan sekarang jika kita mencoba ini kita bisa

03:38.650 --> 03:40.370
melihatnya sedikit lebih jelas.

03:40.370 --> 03:42.910
Tetapi ini berhasil, dan itulah yang bisa kami katakan.

03:42.910 --> 03:45.640
Kita bisa menggulir ke sekeliling, dan menggunakan peta ini.

03:45.640 --> 03:47.480
Ini semua bagus, tetapi tidak optimal.

03:47.480 --> 03:50.420
Tentu saja ini berhasil, berkat "declare var google",

03:50.420 --> 03:53.340
kita tidak mendapatkan error apapun.

03:53.340 --> 03:56.760
Tetapi kami juga tidak mendapatkan dukungan jenis apa pun.

03:56.760 --> 03:58.810
JIKA saya memperkenalkan kesalahan,

03:58.810 --> 04:01.550
jika saya misalnya merujuk ke ". map" bukan ". maps" itu dikompilasi tanpa masalah, dan

04:01.550 --> 04:02.960
hanya crash dalam produksi

04:02.960 --> 04:06.730
setelahnya.

04:06.730 --> 04:08.860
Jika saya mencoba merender peta.

04:08.860 --> 04:11.280
Sekarang saya mendapatkan error di sini, yang ditangkap oleh error handler kita.

04:11.280 --> 04:13.150
Jadi, tentu saja ini bukan yang kita inginkan.

04:13.150 --> 04:16.493
Kami ingin dukungan tipe, kami ingin menangani kesalahan pembuangan seperti ini,

04:17.470 --> 04:19.770
selama pengembangan, dan bukan pada saat runtime.

04:19.770 --> 04:22.880
Jadi, bagaimana kita bisa memastikan bahwa typescript mengenal Google Maps?

04:22.880 --> 04:27.380
Jenis-jenis untuk penyelamatan.

04:27.380 --> 04:31.080
Jika Anda mencari "types google maps", Anda akan menemukan berbagai

04:31.080 --> 04:32.470
paket, yang menambahkan jenis

04:32.470 --> 04:34.160
untuk, yah, Google Maps.

04:34.160 --> 04:37.350
Sekarang kita tidak menginstal paket Google Maps melalui NPM,

04:37.350 --> 04:38.800
tetapi kita masih dapat menginstal

04:38.800 --> 04:41.050
tipe untuk paket itu melalui NPM.

04:41.050 --> 04:44.130
Dan di sini saya akan memilih paket pertama ini, dan cukup

04:44.130 --> 04:46.160
menginstalnya ke dalam proyek kita.

04:46.160 --> 04:48.790
Jadi mari kita kembali, server pengembangan

04:48.790 --> 04:51.560
cepat, dan jalankan "npm install --save-dev

04:51.560 --> 04:54.030
"@types/googlemaps," satu kata.

04:54.030 --> 04:56.400
Itulah nama paket ini.

04:58.613 --> 05:01.560
Ini sekarang akan menginstal tipe global untuk paket ini.

05:01.560 --> 05:03.303
Jadi sekarang jika saya memulai ulang

05:04.200 --> 05:08.410
ini dengan NPM start, mari kita lihat apakah kita memiliki situasi yang lebih baik.

05:08.410 --> 05:11.500
Jika saya menghapus "declare var"

05:11.500 --> 05:15.180
ini di sini, atau saya mengomentarinya.

05:15.180 --> 05:18.090
Masih terkompilasi, sekarang google maps di sini terdeteksi,

05:18.090 --> 05:19.940
dan jika saya mencoba mengakses ". map" di sini, saya mendapatkan error,

05:19.940 --> 05:23.290
saya juga mendapatkan auto-completion sekarang dan ia melihat,

05:23.290 --> 05:27.010
"Ya, ada hal maps. Ini juga memberitahu saya bahwa konstruktor

05:27.010 --> 05:29.880
peta ini, membutuhkan "Div" atau "Element" di mana ia

05:29.880 --> 05:32.410
harus merender peta sebagai argumen pertama, dan

05:32.410 --> 05:35.100
kemudian beberapa opsi untuk peta.

05:35.100 --> 05:38.660
Jadi, ini sekarang berfungsi di sini, sebagaimana mestinya.

05:38.660 --> 05:40.270
Dan ini tentu saja merupakan langkah

05:40.270 --> 05:42.850
maju yang hebat, karena sekarang kami memiliki aplikasi

05:42.850 --> 05:45.170
yang berfungsi, dan sebelumnya juga berfungsi.

05:45.170 --> 05:47.600
Tetapi sekarang ini juga berfungsi

05:47.600 --> 05:51.170
dengan tipe, dan dengan dukungan tipe yang tepat.

05:51.170 --> 05:53.490
Dan staf ini adalah praktik hebat lainnya, untuk

05:53.490 --> 05:56.050
bagaimana Anda membangun aplikasi dengan jenis skrip

05:56.050 --> 05:58.500
dan menggunakan jenis fitur tertentu, tetapi ini

05:58.500 --> 06:00.690
terutama merupakan praktik hebat untuk bagaimana

06:00.690 --> 06:03.700
Anda dapat bekerja dengan pustaka pihak ketiga.

06:03.700 --> 06:06.250
Beberapa, seperti "axios" membawa tipe mereka sendiri.

06:06.250 --> 06:08.470
Yang lainnya, bahkan tidak terinstal

06:08.470 --> 06:11.540
dengan NPM, namun Anda dapat menambahkan

06:11.540 --> 06:15.421
tipe dengan paket tipe yang sesuai.

06:15.421 --> 06:18.810
Saya harap modul ini bermanfaat, untuk memahami hal ini, dan untuk

06:18.810 --> 06:21.320
semua proyek masa depan yang mungkin Anda kerjakan,

06:21.320 --> 06:23.230
di mana Anda kemungkinan besar juga

06:23.230 --> 06:25.620
akan bekerja, dengan pustaka pihak ketiga

06:25.620 --> 06:27.040
tertentu.
