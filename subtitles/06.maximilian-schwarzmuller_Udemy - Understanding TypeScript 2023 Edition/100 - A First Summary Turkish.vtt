WEBVTT

00:02.060 --> 00:04.960
Eğitmen: Jenerik tipler için şimdilik bu kadar.

00:04.960 --> 00:07.370
Anlaşılması gerçekten zor olabilir

00:07.370 --> 00:10.670
ama sonuçta son derste size verdiğim özet mükemmel

00:10.670 --> 00:14.400
bir açıklamadır. Bize tip güvenliği ile birlikte

00:14.400 --> 00:16.710
esneklik sağlıyorlar.

00:16.710 --> 00:19.700
En azından sizin eklemiş olabileceğiniz olası

00:19.700 --> 00:21.660
kısıtlamalara bağlı kaldığımız

00:21.660 --> 00:24.960
sürece, bir sınıfta aktardığımız değerler veya kullandığımız

00:24.960 --> 00:26.800
değerler konusunda esnekiz,

00:26.800 --> 00:30.190
ancak daha sonra sınıfla veya genel bir işlevin sonucuyla

00:30.190 --> 00:34.500
ne yapacağımız konusunda tam tür desteğine sahibiz, çünkü TypeScript

00:34.500 --> 00:44.360
burada işlevi çağırdığımızda veya burada sınıfı örneklediğimizde hangi somut türü aktardığımızı bilir.

00:44.360 --> 00:46.680
Burada daha sonra somut bir tür belirleriz,

00:46.680 --> 00:49.970
ancak bu sınıfı veya bu işlevi oluştururken bu somut

00:49.970 --> 00:52.600
türe kilitlemeyiz.

00:52.600 --> 00:55.540
Bunun yerine, esnek davranıp sadece bazı kısıtlamalar

00:55.540 --> 00:58.090
sağlayabiliriz ve elbette bu kısıtlamaların

00:58.090 --> 01:02.350
hepsi isteğe bağlıdır ve hiçbir kısıtlaması olmayan bazı genel sınıflara veya

01:02.350 --> 01:04.800
genel işlevlere ve çok sayıda kısıtlaması olan

01:04.800 --> 01:07.510
bazılarına sahip olabilirsiniz.

01:07.510 --> 01:09.960
Bu yüzden jenerik tipler gerçekten kullanışlı bir özelliktir.

01:09.960 --> 01:12.700
promise ve array ile size birçok yerleşik jenerik

01:12.700 --> 01:15.600
tipten ikisini gösterdim ve elbette bu kurs boyunca

01:15.600 --> 01:16.990
özel jenerik tipler de dahil

01:16.990 --> 01:20.053
olmak üzere daha fazlasını göreceğiz.
