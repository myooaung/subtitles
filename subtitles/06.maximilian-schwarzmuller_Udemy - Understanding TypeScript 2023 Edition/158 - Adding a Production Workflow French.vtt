WEBVTT

00:02.130 --> 00:04.110
Instructeur : Nous avons préparé notre flux de travail

00:04.110 --> 00:06.137
de développement pour Webpack ici, en le configurant

00:06.137 --> 00:08.490
pour le serveur de développement Webpack, en définissant

00:08.490 --> 00:10.840
le mode de développement, et en configurant les cartes de

00:10.840 --> 00:13.210
source pour améliorer notre expérience de débogage, pour

00:13.210 --> 00:16.570
nous donner de meilleurs messages d'erreur et ainsi de suite.

00:16.570 --> 00:20.150
Maintenant, pour la production, c'est-à-dire lorsque nous voulons préparer notre

00:20.150 --> 00:23.260
code pour le télécharger sur un serveur où il sera ensuite servi à nos utilisateurs

00:23.260 --> 00:27.070
finaux, nous voulons généralement un flux de travail différent.

00:27.070 --> 00:28.790
Je vais donc ajouter une nouvelle configuration

00:28.790 --> 00:31.820
appelée webpack. config. prod. js.

00:31.820 --> 00:33.210
Ce nom ne dépend pas de vous

00:33.210 --> 00:36.043
car Webpack ne le recherchera pas par défaut.

00:36.880 --> 00:39.710
Nous lui dirons de le chercher dans une seconde, cependant.

00:39.710 --> 00:41.920
Avant de le dire, nous allons copier

00:41.920 --> 00:44.708
toute la configuration de développement ici

00:44.708 --> 00:48.480
dans cette configuration. mais maintenant nous allons l'affiner.

00:48.480 --> 00:51.150
Nous pouvons régler le mode sur la production, par exemple.

00:51.150 --> 00:54.380
Cela va dire à Webpack de faire ces optimisations, de minifier

00:54.380 --> 00:56.550
notre code et ainsi de suite, donc vous

00:56.550 --> 00:59.220
voulez certainement le définir ici.

00:59.220 --> 01:00.440
On va laisser l'entrée.

01:00.440 --> 01:02.910
Dans la sortie, nous ne pouvons pas nous débarrasser du chemin

01:02.910 --> 01:05.860
public car il était nécessaire pour le serveur de développement Webpack.

01:05.860 --> 01:08.810
Nous ne l'utiliserons pas ici, car pour la production, nous

01:08.810 --> 01:10.430
voulons exécuter le script Webpack

01:10.430 --> 01:12.940
et générer notre sortie écrite sur le disque et non

01:12.940 --> 01:16.900
servie temporairement sur un serveur fonctionnant localement.

01:16.900 --> 01:19.350
Nous pouvons mettre devtool à none pour ne

01:19.350 --> 01:22.090
pas générer de cartes de sources ici car en production

01:22.090 --> 01:24.913
nous n'en aurons peut-être pas besoin.

01:26.140 --> 01:30.160
Maintenant, le reste peut rester tel quel, mais nous allons en ajouter d'autres.

01:30.160 --> 01:34.620
En bas ici, je veux ajouter une entrée pour les plugins et la mettre

01:34.620 --> 01:36.220
dans un tableau.

01:36.220 --> 01:41.070
Les plugins sont des extensions supplémentaires ou, en fait, des plugins que vous pouvez

01:41.070 --> 01:43.020
ajouter à votre flux de travail Webpack

01:43.020 --> 01:46.080
et qui seront appliqués à l'ensemble du résultat, à l'ensemble

01:46.080 --> 01:47.820
du projet.

01:47.820 --> 01:50.190
Les règles et les modules spécifiques sont

01:50.190 --> 01:52.870
appliqués au niveau de chaque fichier.

01:52.870 --> 01:57.260
Les plugins sont appliqués au flux de travail général.

01:57.260 --> 01:58.730
Ici, je veux ajouter un plugin

01:58.730 --> 02:00.620
qui supprime automatiquement tout ce

02:00.620 --> 02:04.370
qui se trouve dans le dossier dist avant qu'une nouvelle sortie y soit écrite,

02:04.370 --> 02:06.540
de sorte que nous n'ayons toujours que la dernière

02:06.540 --> 02:09.410
sortie la plus récente dans le dossier dist.

02:09.410 --> 02:11.900
Pour cela, je vais installer un tout

02:11.900 --> 02:16.900
nouveau paquet avec --save-dev et c'est le clean-webpack-plugin.

02:19.090 --> 02:21.900
Et cela nous aidera à nettoyer le dossier dist,

02:21.900 --> 02:26.360
dans notre cas, chaque fois que nous reconstruisons notre projet.

02:26.360 --> 02:29.820
Donc, avec cette installation, nous allons l'importer ici en haut.

02:29.820 --> 02:32.090
Je vais le nommer CleanPlugin et l'importer

02:32.090 --> 02:36.400
par require clean-webpack-plugin. Une fois qu'il est installé dans

02:36.400 --> 02:39.810
le tableau des plugins en bas, nous appelons simplement

02:39.810 --> 02:46.500
new CleanPlugin. CleanWebpackPlugin et instanciez-le.

02:46.500 --> 02:49.660
Il s'agit d'une fonction constructrice et maintenant, instanciez-la.

02:49.660 --> 02:51.650
C'est tout ce que vous devez faire ici et

02:51.650 --> 02:53.260
cela va finalement dire à Webpack

02:53.260 --> 02:56.490
qu'avant d'écrire quelque chose dans ce dossier de sortie, il

02:56.490 --> 02:58.593
va effacer tout ce qui s'y trouve.

02:59.440 --> 03:02.020
Maintenant, nous avons le flux de production fini.

03:02.020 --> 03:04.620
Maintenant pour l'utiliser, allons au paquet. json et là, ajustons

03:04.620 --> 03:07.280
ce script de construction.

03:07.280 --> 03:10.510
Ici je veux dire à Wepback d'utiliser ce fichier prod, ce fichier

03:10.510 --> 03:13.110
de configuration de production et nous le faisons en

03:13.110 --> 03:21.140
ajoutant --config et ensuite webpack.

03:21.140 --> 03:21.140
config. prod. js ici.

03:21.140 --> 03:23.610
Il s'agit ici du nom de fichier que vous avez choisi et qui

03:23.610 --> 03:27.000
indique à Webpack d'utiliser ce fichier de configuration à la place du fichier

03:27.000 --> 03:29.730
par défaut. config. js qu'il recherche

03:29.730 --> 03:32.030
normalement.

03:32.030 --> 03:34.600
Avec cela, si vous exécutez maintenant npn run build, il

03:34.600 --> 03:36.700
va construire votre application pour la production,

03:36.700 --> 03:39.950
ce qui signifie qu'il vous donne cette sortie optimisée.

03:39.950 --> 03:42.460
Donc si vous attendez, ici nous avons le paquet. js et c'est maintenant

03:42.460 --> 03:45.110
vraiment le code optimisé construit pour la production

03:45.110 --> 03:50.980
et ceci avec votre index.

03:50.980 --> 03:50.980
html et l'application. css

03:50.980 --> 03:53.800
est le fichier que vous placerez sur un serveur si vous

03:53.800 --> 03:56.393
voulez déployer votre application.

03:57.260 --> 04:00.440
C'est également la fin de ce module.

04:00.440 --> 04:02.140
Laissez-moi maintenant résumer ce que nous avons appris.
