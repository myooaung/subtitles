WEBVTT

00:02.120 --> 00:04.590
المدرب: كما ذكرت في المحاضرة الأخيرة ، يعتبر

00:04.590 --> 00:06.080
وضع المشاهدة بداية رائعة ولكن

00:06.080 --> 00:08.910
ماذا لو كان لدينا أكثر من ملف TypeScript؟

00:08.910 --> 00:13.370
ماذا لو كان لدينا أيضًا تحليلات. ts حيث نرسل افتراضيًا

00:13.370 --> 00:18.370
بيانات التحليلات إلى خادمنا؟

00:18.530 --> 00:21.430
الآن ، هنا للحصول على أي شيء هناك ،

00:21.430 --> 00:24.240
سأضع وحدة تحكم. بيان السجل ولكن بالطبع

00:24.240 --> 00:26.710
، يمكنك إرسال طلبات HTTP إلى خدمة التحليلات

00:26.710 --> 00:29.180
الخاصة بك هنا كما قلت.

00:29.180 --> 00:32.685
لنفترض أننا قمنا أيضًا باستيراد هذا الملف

00:32.685 --> 00:36.420
هنا في فهرسنا. ملف html.

00:36.420 --> 00:40.320
إذا أشرنا إلى التحليلات. js هنا والتي لم تكن موجودة

00:40.320 --> 00:41.730
بعد ولكنها ستكون

00:41.730 --> 00:44.760
موجودة بعد التجميع ، فيمكننا إذن تحميل

00:44.760 --> 00:46.660
هذين الملفين وبالطبع ،

00:46.660 --> 00:48.950
نريد تجميع كلا الملفين كلما

00:48.950 --> 00:50.900
تغير أحدهما.

00:50.900 --> 00:52.490
الآن ، لذلك ، سيكون من

00:52.490 --> 00:55.320
الجيد أن نتمكن من إدخال وضع مشاهدة عام

00:55.320 --> 00:57.630
حيث نقوم فقط بتشغيل tsc مثل هذا

00:57.630 --> 00:59.790
دون الإشارة إلى ملف ويقوم فقط

00:59.790 --> 01:02.480
بمشاهدة مجلد المشروع بالكامل وإعادة

01:02.480 --> 01:05.823
تجميع أي ملف TypeScript قد يتغير.

01:06.720 --> 01:08.960
حسنًا ، اتضح أن هذا ممكن.

01:08.960 --> 01:11.340
لذلك نحتاج فقط إلى إخبار TypeScript

01:11.340 --> 01:15.020
أن هذا هنا مشروع واحد يجب إدارته باستخدام TypeScript

01:15.020 --> 01:16.750
ونحن نقوم بذلك أولاً وقبل

01:16.750 --> 01:20.700
كل شيء ، ونحتاج فقط إلى القيام بذلك مرة واحدة ، وتشغيل

01:20.700 --> 01:23.710
tsc --init.

01:23.710 --> 01:26.170
لذا فأنا لا أشير إلى ملف معين هنا ،

01:26.170 --> 01:29.540
لقد قمت بتشغيل tsc وبعد ذلك - هنا ومرة أخرى ، هذا

01:29.540 --> 01:31.230
مطلوب مرة واحدة فقط.

01:31.230 --> 01:33.530
سيقوم بتهيئة هذا المشروع الذي تقوم

01:33.530 --> 01:36.390
فيه بتشغيل هذا الأمر كمشروع TypeScript.

01:36.390 --> 01:39.910
هذا يعني أنه سيخبر TypeScript الآن بشكل أساسي أن كل شيء

01:39.910 --> 01:41.850
موجود في المجلد حيث تقوم بتشغيل

01:41.850 --> 01:44.160
هذا الأمر ، وبالتالي من المهم أن تقوم

01:44.160 --> 01:46.470
بالانتقال إلى المجلد الصحيح قبل تشغيل

01:46.470 --> 01:48.070
هذا الأمر باستخدام المحطة

01:48.070 --> 01:50.550
الطرفية المضمنة هنا في VS Code.

01:50.550 --> 01:52.910
أنا تلقائيًا في مجلد المشروع هذا حيث

01:52.910 --> 01:55.740
توجد ملفاتي بحيث تتم إدارة هذا المشروع الآن

01:55.740 --> 01:57.370
بواسطة TypeScript.

01:57.370 --> 01:58.400
فلنضغط على Enter وما

01:58.400 --> 02:02.634
يفعله هذا هو أنه ينشئ هذا tsconfig. json.

02:02.634 --> 02:06.580
هذا في الأساس هو مؤشر TypeScript على أن المشروع

02:06.580 --> 02:09.950
الذي يقع فيه هذا الملف ويجب أن تتم إدارة جميع

02:09.950 --> 02:12.239
المجلدات الفرعية لهذا المجلد

02:12.239 --> 02:14.710
بواسطة TypeScript.

02:14.710 --> 02:16.080
الآن ، إذا ألقينا نظرة على

02:16.080 --> 02:17.860
هذا الملف ، فإننا نرى هناك مجموعة

02:17.860 --> 02:19.330
من الخيارات ، علق معظمهم

02:19.330 --> 02:22.090
عليها ، إنها موجودة فقط حتى ترى أنه يمكنك تعيينها

02:22.090 --> 02:24.500
ولديك شرح موجز هنا أيضًا لكن لا داعي للقلق

02:24.500 --> 02:26.380
بشأن هؤلاء الآن.

02:26.380 --> 02:29.040
سوف نتعمق فيها في ثانية.

02:29.040 --> 02:31.610
في الوقت الحالي ، دعنا نغلق هذا

02:32.800 --> 02:35.100
الملف هنا ودعنا نرى ما يعطينا

02:35.100 --> 02:36.550
هذا لأن ما يقدمه لنا

02:36.550 --> 02:39.870
هو أنه يمكننا الآن تشغيل tsc فقط مثل هذا

02:39.870 --> 02:42.610
دون الإشارة إلى ملف معين.

02:42.610 --> 02:45.550
وما سيفعله هذا هو أنه سيخبر TypeScript

02:45.550 --> 02:49.080
بالمضي قدمًا وتجميع جميع ملفات TypeScript

02:49.080 --> 02:53.090
لذا كل ذلك. ts يمكن العثور عليها في هذا المشروع ،

02:53.090 --> 02:54.770
لذا إذا قمت بالضغط على Enter هنا

02:54.770 --> 02:56.830
، كما ترى ، يستغرق هذا بعض الوقت ، والآن

02:56.830 --> 03:02.620
ما حصلنا عليه هو هذه التحليلات. js وهذا التطبيق.

03:02.620 --> 03:02.620
js.

03:02.620 --> 03:05.160
الآن ، التحليلات. تم إنشاء ملف .js للتو بواسطة

03:05.160 --> 03:10.060
TypeScript لأنه وجد أن لدينا التحليلات.

03:10.060 --> 03:10.060
ts

03:10.060 --> 03:13.390
وكما قلت ، سيقوم الآن بتجميع جميع ملفات TypeScript

03:13.390 --> 03:14.730
في المشروع.

03:14.730 --> 03:17.660
وبالطبع ، يمكن أيضًا دمج هذا مع وضع المشاهدة.

03:17.660 --> 03:20.630
يمكنك تشغيل tsc -w أو --watch كما أظهرت

03:20.630 --> 03:23.420
من قبل وسيدخل هذا الآن إلى وضع المراقبة

03:23.420 --> 03:26.970
لجميع ملفات TypeScript.

03:26.970 --> 03:29.590
لذا فحينما أغير أحدهم وقمت بحفظه

03:29.590 --> 03:31.920
، سيتم إعادة تجميعه.

03:31.920 --> 03:33.840
سيعيد ترجمة هذا الملف الذي تم

03:33.840 --> 03:36.100
تغييره وبالتالي كل التغيير المنعكس

03:36.100 --> 03:37.800
في ملف JavaScript.

03:37.800 --> 03:38.633
وهو الآن هنا.

03:38.633 --> 03:41.430
إذا عدت إلى صفحتي ، فسنرى إرسال البيانات أيضًا

03:41.430 --> 03:44.463
لأن التحليلات الآن. تم أيضًا تجميع ملف ts.
