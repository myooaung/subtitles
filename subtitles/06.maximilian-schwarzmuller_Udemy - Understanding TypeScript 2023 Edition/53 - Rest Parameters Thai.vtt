WEBVTT

00:02.060 --> 00:07.060
ผู้ชาย: ประเภทที่เกี่ยวข้องกับตัวดำเนินการสเปรดคือพารามิเตอร์ที่เหลือ

00:07.060 --> 00:10.374
และเพื่อสิ่งนั้น ฉันจะปรับแต่งฟังก์ชันเพิ่มอีกครั้ง

00:10.374 --> 00:13.870
ดังนั้นฉันจะแสดงความคิดเห็นเกี่ยวกับโค้ดทั้งหมดที่นี่

00:13.870 --> 00:15.780
เพื่อไม่ให้มีอะไรผิดพลาด

00:15.780 --> 00:20.520
และเพิ่มฟังก์ชัน add ของฉันอีกครั้งด้วยไวยากรณ์ใดๆ ที่คุณต้องการด้วยคีย์เวิร์ดของฟังก์ชันเป็นฟังก์ชันลูกศร

00:20.520 --> 00:23.830
อะไรก็ได้ที่คุณต้องการ

00:23.830 --> 00:26.360
แต่ตอนนี้ฉันต้องการมีฟังก์ชั่นพิเศษ

00:26.360 --> 00:29.100
ฉันไม่ต้องการจำกัดค่าไว้เพียงสองค่า

00:29.100 --> 00:33.290
แต่ฉันต้องการเพิ่มค่าได้มากเท่าที่ผู้ใช้ส่งผ่านเข้ามา

00:33.290 --> 00:37.700
เพื่อให้เราสามารถเรียกการบวกแบบนี้ว่า

00:37.700 --> 00:44.530
ห้า สิบ สอง สามจุดเจ็ด และอื่น ๆ โดยมีค่ามากเท่าที่คุณต้องการ

00:44.530 --> 00:48.090
หากคุณต้องการเรียกมันด้วยค่า 10 นั่นก็ควรจะเป็นไปได้เช่นกัน

00:48.090 --> 00:52.600
อย่างไรก็ตาม ตอนนี้ มันเป็นไปไม่ได้อย่างที่คุณเห็นอย่างชัดเจน

00:52.600 --> 00:54.290
typescript แจ้งข้อผิดพลาดให้ฉัน

00:54.290 --> 00:57.760
และถูกต้อง เพราะฉันไม่ยอมรับข้อโต้แย้งที่นี่

00:57.760 --> 01:02.210
แน่นอน ตอนนี้ฉันสามารถยอมรับข้อโต้แย้งที่นี่และกำหนดประเภทที่ถูกต้องได้

01:02.210 --> 01:04.300
แต่ถ้าฉันเรียกมันด้วยห้า

01:04.300 --> 01:06.330
อย่างที่ฉันพูด ฉันอยากมีความยืดหยุ่น

01:06.330 --> 01:08.850
นั่นคือที่มาของพารามิเตอร์ที่เหลือ

01:08.850 --> 01:15.270
ในตำแหน่งที่คุณคาดว่าจะมีรายการค่า ไม่ใช่ตำแหน่งที่คุณต้องการส่งต่อ

01:15.270 --> 01:18.308
แต่คุณต้องการยอมรับเป็นค่าที่เข้ามา

01:18.308 --> 01:20.360
คุณสามารถใช้จุดสามจุดแล้วตามด้วยชื่อใดก็ได้

01:20.360 --> 01:24.043
เช่น ตัวเลข

01:25.630 --> 01:27.430
ตอนนี้สิ่งที่จะทำคือ

01:27.430 --> 01:31.470
มันจะรวมพารามิเตอร์ขาเข้าทั้งหมด หรือโดยทั่วไปคือรายการค่าที่เข้ามา

01:31.470 --> 01:39.350
รายการค่าที่คั่นด้วยเครื่องหมายจุลภาคลงในอาร์เรย์

01:39.350 --> 01:40.940
ดังนั้นตัวเลขที่นี่จะเป็นอาร์เรย์

01:40.940 --> 01:44.460
แต่แน่นอนว่าโดยค่าเริ่มต้นแล้ว ประเภทของค่าใดๆ ดังนั้นอาร์เรย์ที่เต็มไปด้วยค่าใดๆ

01:44.460 --> 01:49.680
และนั่นไม่ใช่สิ่งที่เราควรทำ เราควรอธิบายให้ชัดเจนกว่านี้

01:49.680 --> 01:53.200
และตรงนี้เราสามารถพูดได้ว่า "มันจะเป็นอาร์เรย์ตัวเลข เช่นนั้น.

01:53.200 --> 01:56.420
ตอนนี้เรากำลังกำหนดประเภทที่ถูกต้องและตอนนี้ทำงานกับอาร์เรย์ตัวเลขนั้น

01:56.420 --> 01:58.710
ตอนนี้เราสามารถสรุปได้หลายวิธี

01:58.710 --> 02:01.880
เราสามารถทำงานกับตัวแปรผลลัพธ์แล้ววนซ้ำสี่รอบได้

02:01.880 --> 02:04.110
เนื่องจากตัวเลขเป็นอาร์เรย์

02:04.110 --> 02:09.260
ตรงนี้เราสามารถวนซ้ำตัวเลขแล้วบวกเข้ากับผลลัพธ์ได้

02:09.260 --> 02:11.519
หรือเราใช้วิธีลดที่มีอยู่ในอาร์เรย์

02:11.519 --> 02:15.620
ลดการทำงานในลักษณะที่ดำเนินการกับทุกองค์ประกอบในอาร์เรย์

02:15.620 --> 02:20.940
ส่งกลับผลลัพธ์ แล้วเพิ่มผลลัพธ์เหล่านี้เข้าด้วยกัน

02:20.940 --> 02:27.160
เพื่อที่คุณจัดเตรียมฟังก์ชันเพื่อลดและจากนั้นค่าเริ่มต้นซึ่งที่นี่เป็นศูนย์

02:27.160 --> 02:31.093
แล้วฟังก์ชันนี้ที่คุณส่งเพื่อลดค่าตัวเอง รับอาร์กิวเมนต์สองตัว

02:31.093 --> 02:35.920
และนั่นคือผลลัพธ์ปัจจุบันที่คุณพูดได้

02:35.920 --> 02:38.968
และมันคือค่าปัจจุบันที่เรากำลังดู

02:38.968 --> 02:42.640
ซึ่งจะเป็นค่าแต่ละค่าของอาร์เรย์

02:42.640 --> 02:48.290
จากนั้นคุณสามารถคืนค่า cuResult ได้ที่นี่ ซึ่งสำหรับการรันครั้งแรกจะเป็นค่าเริ่มต้นนั้นที่นี่

02:48.290 --> 02:51.497
บวก curValue

02:51.497 --> 02:52.703
และถ้าคุณทำเช่นนั้น ลดโดยรวมที่นี่ จะส่งกลับตัวเลข

02:53.859 --> 02:57.920
ดังนั้นที่นี่เราสามารถคืนค่าผลลัพธ์ของตัวเลขที่ลดลงโดยรวม

02:57.920 --> 03:07.320
และด้วยเหตุนี้ตัวแปรบวกหรือค่าคงที่ในตอนท้ายจะมีฟังก์ชันซึ่งใช้ตัวเลขสองสามตัว ไม่ใช่อาร์เรย์ของตัวเลข

03:07.320 --> 03:16.510
แต่เนื่องจากพารามิเตอร์ที่เหลือ รายการของตัวเลขซึ่งรวมเข้าเป็นอาร์เรย์ภายในฟังก์ชันและส่งกลับตัวเลขในตอนท้าย

03:16.510 --> 03:18.550
ถ้าตอนนี้เราบันทึกทุกอย่าง

03:18.550 --> 03:23.350
มันควรจะใช้ได้ และเราเห็นผลรวมของการบวกเล็กน้อยของเราตรงนี้

03:23.350 --> 03:26.250
นั่นคือพารามิเตอร์ที่เหลือ คุณลักษณะที่มีประโยชน์จริงๆ

03:26.250 --> 03:31.400
สำหรับการยอมรับข้อโต้แย้งจำนวนไม่จำกัด

03:31.400 --> 03:36.680
และวิธีการในตัวสองสามวิธีเช่นวิธีการพุชทำงานในลักษณะนั้น

03:36.680 --> 03:38.540
คุณเห็นไหมว่า push here มีการกำหนดพารามิเตอร์แปลก ๆ นี้

03:38.540 --> 03:42.560
นั่นคือสิ่งที่เราเพิ่งเรียนรู้

03:42.560 --> 03:44.250
Push here ใช้สองรายการสำหรับอาร์เรย์นี้

03:44.250 --> 03:48.490
ซึ่งเป็นอาร์เรย์ที่เต็มไปด้วยสตริง

03:48.490 --> 03:50.400
ใช้เวลาสองสามสาย

03:50.400 --> 03:51.730
และนี่ไม่ได้หมายความว่าต้องใช้อาร์เรย์ของสตริง

03:51.730 --> 04:01.260
แต่ในที่นี้คือพารามิเตอร์ที่เหลือ รายการสตริงที่คั่นด้วยเครื่องหมายจุลภาค ซึ่งจากนั้นจะรวมเข้าด้วยกันเป็นอาร์เรย์และจัดการภายใน

04:01.260 --> 04:03.100
นั่นคือไวยากรณ์ของพารามิเตอร์ที่เหลือ

04:03.100 --> 04:06.276
คุณสามารถรวมสิ่งนี้กับสิ่งอันดับได้ด้วย

04:06.276 --> 04:10.370
ถ้าคุณรู้ว่าคุณต้องการสนับสนุนหลายอาร์กิวเมนต์

04:10.370 --> 04:15.370
แต่คุณรู้ว่าจะมีกี่อาร์กิวเมนต์ ดังนั้นหากไม่ใช่รายการไม่จำกัด

04:16.520 --> 04:20.392
คุณก็สามารถใช้ประเภททูเพิลตรงนั้นได้

04:20.392 --> 04:28.430
ตัวอย่างเช่น พูดว่า "ฉันยอมรับหมายเลขฟรีของฉันที่นี่ จากนั้นฉันต้องลบอาร์กิวเมนต์ที่สี่ที่นี่แน่นอนเมื่อเรียกใช้ฟังก์ชัน

04:28.460 --> 04:30.910
เพราะตอนนี้ผมค่อนข้างชัดเจนแล้วว่าผมอยากได้อาร์กิวเมนต์สามตัว

04:30.910 --> 04:32.240
ซึ่งแต่ละตัวเป็นตัวเลข

04:32.240 --> 04:33.830
แน่นอนว่าเราสามารถเพิ่มพารามิเตอร์แบบสแตนด์อโลนสามตัวได้ที่นี่

04:33.830 --> 04:40.720
แต่ไวยากรณ์นี้อาจยังสั้นกว่าหรือตั้งค่าได้ง่ายกว่าการเพิ่มพารามิเตอร์แบบอิสระเล็กน้อย

04:40.720 --> 04:43.090
ขึ้นอยู่กับใบสมัครและความต้องการของคุณ

04:43.090 --> 04:57.864
ที่นี่ฉันจะย้ายจากการตั้งค่านั้นและเป็นแบบทั่วไปมากขึ้นและยอมรับอาร์กิวเมนต์มากเท่าที่ฉันได้รับเพราะสำหรับฟังก์ชันนี้ฉันสามารถจัดการกับอาร์กิวเมนต์จำนวนไม่สิ้นสุดได้
