WEBVTT

00:02.160 --> 00:05.070
-: في الوقت الحالي لا أستخدم خادم webpack-dev.

00:05.070 --> 00:07.680
ومع ذلك ، أصبح استخدامه الآن أمرًا مباشرًا للغاية.

00:07.680 --> 00:10.030
علينا فقط الحزمة. json والآن هناك

00:10.030 --> 00:12.430
بدلاً من "lite-server"

00:12.430 --> 00:17.380
، فلنستخدم "webpack-dev-server" ، مثل هذا.

00:17.380 --> 00:20.020
والآن لنبدأ npm ونبدأ من جديد.

00:20.020 --> 00:21.560
الآن ما ستراه هو أن

00:21.560 --> 00:23.610
هذا الآن يدور على خادم يعمل

00:23.610 --> 00:25.780
على مضيف محلي 8080 ، ويدور

00:25.780 --> 00:28.330
تدفق عمل بناء حزمة الويب.

00:28.330 --> 00:30.060
الآن إذا قمت بزيارة المضيف المحلي

00:30.060 --> 00:32.020
8080 فإننا نرى مشروعنا هناك.

00:32.020 --> 00:33.860
الشيء المثير للاهتمام الآن هو

00:33.860 --> 00:35.510
إذا قمنا بتغيير شيء ما في الكود

00:35.510 --> 00:38.520
، على سبيل المثال ، إذا قمت بضبط سجل وحدة تحكم ERA

00:38.520 --> 00:41.200
هنا ، وتم حفظه ثم شاهدت الجزء السفلي هنا ، فسترى

00:41.200 --> 00:43.160
أنه يعيد تجميعه.

00:43.160 --> 00:46.450
ومع ذلك ، إذا قمت بإعادة التحميل ، فلن ترى السجل هنا وأيضًا في علامة

00:46.450 --> 00:47.860
تبويب المصادر ، في علامة تبويب

00:47.860 --> 00:49.130
مصدر webpack ، إذا انتقلت

00:49.130 --> 00:51.920
إلى التطبيق. ts ، لا ترى السجل هنا.

00:51.920 --> 00:54.820
لذلك في الواقع لم يتم تحميل الكود الصحيح.

00:54.820 --> 00:58.790
يصبح هذا أكثر وضوحًا إذا قمت بحذف هذه الحزمة. js هنا.

00:58.790 --> 01:01.513
إذا قمت الآن بإعادة تشغيل عملية بدء npm

01:02.630 --> 01:04.750
هذه ، فسترى أنها لا تزال تعمل ،

01:04.750 --> 01:08.090
وبالمناسبة ، لا تتعجب من بقاء مجلد dist فارغًا

01:08.090 --> 01:10.240
الآن ، في وضع خادم webpack-dev

01:10.240 --> 01:13.020
، يتم إنشاء الحزمة في الذاكرة فقط ، لذلك

01:13.020 --> 01:15.840
موجود ويتم تحميله بواسطة خادم dev ، لكنه

01:15.840 --> 01:18.490
لم يكتب في الواقع إلى dist.

01:18.490 --> 01:20.270
ولكن سترى أنه إذا قمت بإعادة التحميل

01:20.270 --> 01:22.180
، فستتعطل هذه الصفحة الآن أيضًا.

01:22.180 --> 01:24.050
الآن ، قلت أن الملف سيكون

01:24.050 --> 01:27.080
هناك ، لكن لا يبدو أنه موجود ، أليس كذلك؟

01:27.080 --> 01:29.120
الآن هو مفقود في التوزيع كما قلت ، وبالطبع

01:29.120 --> 01:35.130
نحن نستورد من dist / bundle. js والفهرس.

01:35.130 --> 01:35.130
أتش

01:35.130 --> 01:36.810
تي أم أل ، ولكن في الواقع يمكنك أن تصدقني أنه تم إنشاؤه في الذاكرة.

01:36.810 --> 01:38.450
المشكلة فقط هي أن الأشياء

01:38.450 --> 01:41.640
لا يتم توصيلها بشكل صحيح في الوقت الحالي.

01:41.640 --> 01:45.330
لتعديل هذا علينا الذهاب إلى webpack. التكوين. js ، وهناك

01:45.330 --> 01:50.330
، في الإخراج ، أضف مفتاح publicPath

01:50.350 --> 01:53.647
واضبطه على "dist. إذا قمت الآن بحفظ هذا وإعادة تشغيله ، فسترى

01:56.250 --> 01:59.120
الآن أنه يعاد تحميله والآن ترى "مرحبًا"

01:59.120 --> 02:00.670
هنا.

02:00.670 --> 02:02.400
في علامة تبويب المصادر ،

02:02.400 --> 02:05.320
ترى الآن أيضًا أن الإخراج الصحيح هناك.

02:05.320 --> 02:06.580
إذا ذهبت إلى مجلد النقطة

02:06.580 --> 02:07.860
، التطبيق المصدر. ts ترى بيان سجل وحدة التحكم.

02:07.860 --> 02:11.270
وإذا ذهبت الآن إلى التطبيق. ts وحذف ذلك ، فإنه يعيد البناء والآن ذهب

02:11.270 --> 02:13.893
بيان سجل وحدة التحكم هناك.

02:15.220 --> 02:18.460
هذا مجرد تكوين إضافي مطلوب لخادم

02:18.460 --> 02:20.410
webpack-dev ليفهم

02:20.410 --> 02:22.970
حقًا مكان كتابة الإخراج

02:22.970 --> 02:26.520
وأين يتعلق بالفهرس. ملف html.

02:26.520 --> 02:29.910
لأن خادم webpack-dev

02:29.910 --> 02:32.180
افتراضيًا يخدم فهرسًا. html ، يتم العثور عليه في نفس المجلد حيث تقوم بتشغيل هذا

02:32.180 --> 02:34.030
البرنامج النصي هنا.

02:34.030 --> 02:37.550
هذا صحيح ، ولكن بعد ذلك لا يتم الاتصال بمجلد

02:37.550 --> 02:40.520
dist بشكل صحيح ، ولهذا السبب يتعين علينا

02:40.520 --> 02:42.030
إبلاغ خادم webpack-dev

02:42.030 --> 02:44.970
مع publicPath بمكان العثور على مساعدتنا

02:44.970 --> 02:48.040
، لذا فإن حزمتنا. js في هذه الحالة.

02:48.040 --> 02:50.960
الآن إذا خرجنا من خادم التطوير

02:50.960 --> 02:52.370
، فهناك إعداد آخر أريد تطبيقه

02:52.370 --> 02:53.790
هنا في وضع التطوير.

02:53.790 --> 02:56.080
وسأفعل هذا مباشرة في الجزء العلوي من الكائن المُصدَّر.

02:56.080 --> 02:59.180
سوف أقوم بتعيين الوضع على "التنمية. سيؤدي هذا في النهاية إلى إخبار حزمة الويب بأننا

02:59.180 --> 03:01.800
نبني هنا من أجل التطوير وستقوم بإجراء

03:01.800 --> 03:03.550
تحسينات أقل لتحسين تجربة

03:03.550 --> 03:05.590
التطوير لدينا ، وجعل تصحيح الأخطاء

03:05.590 --> 03:09.450
أكثر سهولة ، وإعطائنا رسائل خطأ أكثر وضوحًا ، على سبيل

03:09.450 --> 03:11.420
المثال.

03:11.420 --> 03:12.950
لذا في التطوير ، نريد

03:12.950 --> 03:16.420
بالتأكيد إضافة هذا المفتاح هنا.

03:16.420 --> 03:17.840
ومع ذلك وتهيئة خادم webpack-dev

03:17.840 --> 03:20.110
، نحصل الآن على تدفق عمل التطوير النهائي.

03:20.110 --> 03:22.880
الآن بالنسبة للإنتاج ، سنحتاج إلى تعديل

03:22.880 --> 03:25.570
تدفق العمل هذا قليلاً لأننا نريد ناتجًا

03:25.570 --> 03:27.100
مختلفًا.
