WEBVTT

00:02.250 --> 00:04.870
-Así que, ahora que conocemos estas potentes funciones,

00:04.870 --> 00:07.960
una pregunta obvia es: ¿por qué íbamos a utilizarlas?

00:07.960 --> 00:09.610
¿Por qué es útil?

00:09.610 --> 00:12.200
Pues bien, es útil en situaciones como ésta, en las que

00:12.200 --> 00:13.780
sabemos que queremos tener un determinado

00:13.780 --> 00:15.820
conjunto de funcionalidades.

00:15.820 --> 00:18.750
Digamos que un método greet, y queremos asegurarnos

00:18.750 --> 00:21.910
de que una cláusula tiene tal método greet, y otra cláusula

00:21.910 --> 00:24.450
lo tiene quizás también, bien, entonces, podemos

00:24.450 --> 00:26.360
implementar una interfaz que fuerce

00:26.360 --> 00:29.570
la existencia de este método.

00:29.570 --> 00:32.690
Entonces podemos compartir fácilmente la funcionalidad entre

00:32.690 --> 00:35.850
las cláusulas, y cada cláusula tiene que añadir su propia implementación,

00:35.850 --> 00:38.060
el código exacto que debe ejecutarse cuando

00:38.060 --> 00:39.450
se llama al método, pero imponemos

00:39.450 --> 00:41.370
una cierta estructura con la ayuda de las

00:41.370 --> 00:43.280
interfaces.

00:43.280 --> 00:46.400
Esto puede ser útil si no tenemos otras partes de nuestro código

00:46.400 --> 00:48.550
que dependan de esa estructura.

00:48.550 --> 00:51.680
Aquí, establecemos que user1 sea de tipo Greetable,

00:51.680 --> 00:55.240
y con eso decimos que no nos importa lo que haya dentro de user,

00:55.240 --> 00:57.840
pero lo que tiene que haber es un método greet,

00:57.840 --> 00:59.730
y sabemos que tiene que estar ahí

00:59.730 --> 01:03.510
porque lo que almacenemos en user1 tiene que ser greetable.

01:03.510 --> 01:07.350
Eso nos permite escribir un código realmente potente y flexible en el que no

01:07.350 --> 01:09.840
tenemos que saber todo sobre un objeto, o todo sobre

01:09.840 --> 01:11.710
una cláusula, sino que simplemente sabemos

01:11.710 --> 01:14.710
que lo que estoy recibiendo aquí en user1 tiene que tener un

01:14.710 --> 01:16.210
método greet.

01:16.210 --> 01:18.850
No nos importa si Persona tiene algo más, aquí

01:18.850 --> 01:20.630
nos interesa greet, de ahí que

01:20.630 --> 01:22.400
nos enviemos a Greetable, y por

01:22.400 --> 01:25.180
lo tanto no podemos almacenar nada en user1 que

01:25.180 --> 01:27.190
no tenga un método greet, porque Greetable

01:27.190 --> 01:30.770
obliga a cualquier cosa que bases en él a tener dicho método

01:30.770 --> 01:32.333
greet.
