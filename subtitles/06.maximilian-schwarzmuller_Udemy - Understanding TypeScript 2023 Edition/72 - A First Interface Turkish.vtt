WEBVTT

00:02.802 --> 00:04.030
Eğitmen: Sınıfları ele aldığımıza

00:04.030 --> 00:05.910
göre şimdi de arayüzlere bir göz atalım.

00:05.910 --> 00:09.510
app ts dosyasını classes olarak yeniden adlandıracağız ve yeni

00:09.510 --> 00:11.230
bir app ts dosyası ekleyeceğiz,

00:11.230 --> 00:13.730
bundan sonra app js olarak derlenecektir.

00:13.730 --> 00:15.130
Ve bu uygulama ts dosyasında,

00:15.130 --> 00:17.026
şimdi arayüzlere dalacağız.

00:17.026 --> 00:19.850
Arayüz nedir?

00:19.850 --> 00:21.640
En basit haliyle, bir

00:21.640 --> 00:25.470
arayüz bir nesnenin yapısını tanımlar.

00:25.470 --> 00:28.502
Bir nesnenin nasıl görünmesi gerektiğini tanımlamak için kullanabiliriz.

00:28.502 --> 00:29.856
Size bir örnek göstereyim.

00:29.856 --> 00:32.990
Interface anahtar sözcüğünü kullanarak bir arayüz oluşturuyoruz,

00:32.990 --> 00:37.510
bu anahtar sözcük sadece typescript'te var, vanilla JavaScript'te yok.

00:37.510 --> 00:39.600
Şimdi buna kişi adını verelim.

00:39.600 --> 00:41.140
Yine, tıpkı bir derste olduğu

00:41.140 --> 00:43.150
gibi, büyük harfle başlıyorum,

00:43.150 --> 00:46.820
bir zorunluluk değil ama bir tavsiye ve bir gelenek.

00:46.820 --> 00:47.910
Şimdi burada, bir kişi

00:47.910 --> 00:51.160
nesnesinin nasıl görünmesi gerektiğini tanımlayabiliriz.

00:51.160 --> 00:52.480
Şimdi bir sınıfın aksine,

00:52.480 --> 00:54.930
bunu bir plan olarak kullanmayacağız.

00:54.930 --> 00:57.543
Sadece özel bir tür olarak şunu söyleyebiliriz.

00:58.490 --> 01:00.690
Burada, bir kişinin string türünde bir

01:00.690 --> 01:01.860
adı ve sayı türünde bir

01:01.860 --> 01:04.300
yaşı olabileceğini söyleyebilirsiniz.

01:04.300 --> 01:05.140
Burada görebileceğiniz

01:05.140 --> 01:08.020
gibi, özelliklerin adlarını ve burada depolanacak

01:08.020 --> 01:09.970
değerlerin türlerini içeren özellikler

01:09.970 --> 01:13.440
veya alan tanımları ekliyorum.

01:13.440 --> 01:16.560
Burada sahip olmadığımız şey somut değerlerdir.

01:16.560 --> 01:17.730
Yani bizde bu yok.

01:17.730 --> 01:20.510
Ve eğer buraya varsayılan bir değer atamaya çalışırsak,

01:20.510 --> 01:21.810
bir arayüzün başlatıcıya

01:21.810 --> 01:25.290
sahip olamayacağına dair bir hata alırız.

01:25.290 --> 01:27.540
Böylece somut değerleri değil, sadece

01:27.540 --> 01:29.610
yapıyı tanımlayabiliriz.

01:29.610 --> 01:32.930
Buraya bir yöntem de ekleyebiliriz, örneğin greet.

01:32.930 --> 01:34.470
Şimdi tıpkı özelliklerde

01:34.470 --> 01:37.440
olduğu gibi, buraya gerçek yöntemi değil, sadece

01:37.440 --> 01:39.610
yapıyı, tabiri caizse açıklamayı

01:39.610 --> 01:41.020
ekliyoruz.

01:41.020 --> 01:42.670
Nasıl görünmeli.

01:42.670 --> 01:46.600
Ve bir kişi nesnesinin sahip olması gereken bir yöntemi tanımlamak için,

01:46.600 --> 01:49.470
yöntemin adını, ardından parantezleri ve ardından

01:49.470 --> 01:50.920
dönüş türünü ekleriz.

01:50.920 --> 01:52.210
Örneğin, beyaz ve parantez

01:52.210 --> 01:53.260
içinde istediğiniz herhangi

01:53.260 --> 01:55.310
bir argümana sahip olabilirsiniz.

01:55.310 --> 01:57.740
Bir tür olması gereken bir ifade gibi.

01:57.740 --> 02:01.920
Yine, sadece argümanın adı ve ardından türü.

02:01.920 --> 02:03.610
Ardından yöntemin dönüş türü.

02:03.610 --> 02:06.450
Elbette parametre eklemek zorunda değilsiniz.

02:06.450 --> 02:09.080
Şimdi bu kişi arayüzü ile ne yapabiliriz?

02:09.080 --> 02:11.360
Bunun arkasındaki fikir nedir?

02:11.360 --> 02:12.610
Şimdi bunu örneğin bir nesneyi

02:12.610 --> 02:14.810
kontrol etmek için kullanabiliriz.

02:14.810 --> 02:18.020
Bir değişkenimiz olabilir, kullanıcı bir,

02:18.020 --> 02:19.130
ve diyelim ki bir

02:19.130 --> 02:22.620
nedenden dolayı hemen başlatmıyoruz.

02:22.620 --> 02:25.660
Sonunda bu yapıya sahip bir nesneyi

02:25.660 --> 02:28.490
orada saklamak istiyoruz.

02:28.490 --> 02:30.710
Daha sonra kullanıcı bire bir tür atayabiliriz,

02:30.710 --> 02:31.830
bu kişi olabilir.

02:31.830 --> 02:34.604
Arayüzümüzü bir tür olarak kullanabiliriz.

02:34.604 --> 02:38.410
Ve şimdi kullanıcı bire bir değer atadığımda, bu bir nesne olmak

02:38.410 --> 02:39.730
zorundadır çünkü arayüzler

02:39.730 --> 02:42.780
nesneleri tanımlamak için kullanılır.

02:42.780 --> 02:45.560
Ve bir dize tutması gereken bir name özelliği,

02:45.560 --> 02:47.190
bir sayı tutması gereken

02:47.190 --> 02:49.850
bir age özelliği ve bir ifade argümanı alması

02:49.850 --> 02:53.102
ve ardından hiçbir şey döndürmemesi gereken bir

02:53.102 --> 02:56.920
greet yöntemi olan bir nesne olmalıdır.

02:56.920 --> 02:57.830
İşte bu nesneye

02:57.830 --> 02:59.360
bir isim ekleyebiliriz.

02:59.360 --> 03:00.730
Max, mesela.

03:00.730 --> 03:03.010
Şimdi buraya somut değeri ekliyoruz ve

03:03.010 --> 03:06.310
bunun yukarıda tanımlanan türde olması gerekiyor.

03:06.310 --> 03:08.160
Şimdi virgülle ayrılmıştır

03:08.160 --> 03:11.110
ve bu bizim arayüz tanımımızdan farklıdır.

03:11.110 --> 03:16.110
Burada anahtarlarımızı ve özelliklerimizi noktalı virgüllerle ayırıyoruz.

03:16.470 --> 03:18.430
Ancak aşağıda, nesnemizi oluştururken, tıpkı

03:18.430 --> 03:21.390
vanilya JavaScript'te olduğu gibi bir virgül kullanırız.

03:21.390 --> 03:25.570
Sonra bir yaş ve tabii ki selamlama yöntemi.

03:25.570 --> 03:27.550
Şimdi greet yöntemi, öğrendiğiniz

03:27.550 --> 03:32.020
gibi, bir parametre alan bir yöntem olmalıdır, phrase, bir dize olmalıdır

03:32.020 --> 03:33.790
ve daha sonra konsol günlüğü

03:33.790 --> 03:36.134
phrase artı biraz beyaz boşluk artı

03:36.134 --> 03:41.134
bunu istiyorum. İsim.

03:41.210 --> 03:43.930
Bu, greet yönteminin bir uygulaması olabilir.

03:43.930 --> 03:45.670
Şimdi orada ne olduğu önemli değil.

03:45.670 --> 03:48.210
Önemli olan tek parametremizin bir string

03:48.210 --> 03:49.270
olması ve hiçbir

03:49.270 --> 03:51.290
şey döndürmememizdir.

03:51.290 --> 03:54.090
Şimdi bu geçerli bir kullanıcı bir nesnesi

03:54.090 --> 03:58.150
olacaktır çünkü arayüzümüzün bu tanımını karşılamaktadır.

03:58.150 --> 03:59.040
Bu nedenle, elbette,

03:59.040 --> 04:00.940
şimdi örneğin greet'i arayabilir

04:00.940 --> 04:04.020
ve merhaba, ben diyebiliriz ve bundan sonra isim

04:04.020 --> 04:06.220
yazdırmalıyız.

04:06.220 --> 04:08.300
Şimdi bunu kaydedip yeniden yüklerseniz,

04:08.300 --> 04:10.330
merhaba ben Max.

04:10.330 --> 04:12.840
Ve bu bizim selamlama yöntemimizden geliyor.

04:12.840 --> 04:14.090
Bu bir arayüzdür.

04:14.090 --> 04:18.280
Bir nesnenin yapısını tanımlamamızı sağlar.

04:18.280 --> 04:21.140
Bu yapıya sahip olması gereken nesneler için tip

04:21.140 --> 04:24.453
kontrolü yapmak üzere bir tip olarak kullanabiliriz.
