WEBVTT

00:02.340 --> 00:06.240
教师：我们几乎已经完成了关于TypeScript和核心类型的基础知识｡

00:06.240 --> 00:13.170
还有另外两种类型值得注意, 因为它们会不时产生影响｡

00:13.170 --> 00:16.603
第一种类型是未知类型｡ 

00:17.860 --> 00:23.343
为此, 我将此文件命名为您的函数｡  ts并添加新应用程序｡

00:23.343 --> 00:23.343
ts文件,

00:24.290 --> 00:32.143
假设我们有一个新变量userInput, 它的类型为unknown｡

00:32.143 --> 00:38.500
它不是any类型（默认类型）, 而是未知类型（TypeScript引入的另一种类型）｡

00:38.500 --> 00:42.950
它可能是未知的, 因为我们还不知道用户最终会输入什么｡

00:42.950 --> 00:45.593
如果是数字, 如果是字符串, 我们不知道｡ 

00:46.770 --> 00:51.020
关于未知类型, 有趣的是我们可以在其中存储任何值而不会出错,

00:51.020 --> 00:54.630
所以这都是允许的.

00:54.630 --> 01:00.290
如果我现在在这里编译我的文件, 你会看到我没有得到编译错误｡

01:00.290 --> 01:03.820
到目前为止, 这就像我们没有在这里赋值类型,

01:03.820 --> 01:05.260
因此我们有any类型,

01:05.260 --> 01:08.610
或者我们显式地将any设置为类型｡

01:08.610 --> 01:11.810
但是, 未知和任何都是不同的｡ 

01:11.810 --> 01:15.430
这在这里是可行的, 但是如果我有另一个变量,

01:15.430 --> 01:20.890
比如userName, 它应该是一个字符串, 我们就会遇到问题｡

01:20.890 --> 01:27.200
这里没有初始化, 但是这里我想设置userName等于userInput.

01:27.200 --> 01:29.150
现在, 您可以看到, 我们得到了一个错误｡ 

01:29.150 --> 01:33.010
无法将未知类型分配给类型字符串｡ 

01:33.010 --> 01:34.590
因此, userName需要一个字符串,

01:34.590 --> 01:37.990
当然unknown不一定是字符串｡

01:37.990 --> 01:41.620
在这里, 我分配了一个, 但这只是这一行的情况｡ 

01:41.620 --> 01:44.460
userInput技术上可以保存任何值,

01:44.460 --> 01:46.490
因为它是未知的｡

01:46.490 --> 01:47.640
有趣的是, 如果我把unknown切换到any,

01:47.640 --> 01:56.810
这个错误就会消失, 因为any是TypeScript中最灵活的类型, 它基本上禁用了所有类型检查, TypeScript只是说,

01:56.810 --> 02:00.950
“我放弃, 做你想做的｡ Unknown比any更严格一些｡ 

02:00.950 --> 02:08.820
对于unknown, 我们必须首先检查当前存储在userInput中的类型,

02:08.820 --> 02:14.400
然后才能将其赋值给需要字符串的变量｡

02:14.400 --> 02:18.110
因为这里需要一个字符串, 我们可以检查userInput的类型是否等于string,

02:18.110 --> 02:26.020
TypeScript将检测到这个检查, 并理解这里, userName中存储了什么, 因为它结束于if语句, 在这里我检查userInput的类型是否为string,

02:26.020 --> 02:36.920
userInput肯定是一个字符串, 因此我可以安全地将它赋值给userName｡

02:36.920 --> 02:39.990
所以, 我需要一个额外的类型检查,

02:39.990 --> 02:42.670
unknown, 来把一个未知值赋给一个固定类型的值,

02:42.670 --> 02:54.780
所以unknown是比any更好的选择, 如果你知道我不能准确的告诉你里面存储的是什么类型, 它可能是一个数字, 也可能是一个字符串,

02:54.780 --> 03:02.910
但是我知道我最终要用它做什么｡

03:02.910 --> 03:05.470
好吧, 只要添加一个额外的检查来确保你想做的事情可以完成,

03:05.470 --> 03:07.440
这样如果你想处理一个字符串,

03:07.440 --> 03:12.160
你就有了一个字符串, 你就很好了｡

03:12.160 --> 03:14.690
然后unknown比any更好,

03:14.690 --> 03:20.930
因为它确保你不能做所有的事情, 但你至少有一些类型检查｡

03:20.930 --> 03:23.260
当然, 如果你有机会提前知道userInput总是一个字符串,

03:23.260 --> 03:31.680
或者总是一个字符串或一个数字, 那么你应该使用string或这样的联合类型, 而不是unknown｡

03:31.680 --> 03:34.460
因此, 未知仍然是一种你不应该一直使用的类型,

03:34.460 --> 03:37.460
但它比任何类型都好, 原因如上所述｡
