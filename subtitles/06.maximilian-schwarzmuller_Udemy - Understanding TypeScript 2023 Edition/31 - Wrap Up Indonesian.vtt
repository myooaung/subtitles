WEBVTT

00:02.150 --> 00:04.220
-: Sekarang dengan itu kita telah melihat secara

00:04.220 --> 00:07.410
menyeluruh semua tipe inti dan dasar-dasar TypeScript.

00:07.410 --> 00:11.640
Mudah-mudahan sekarang Anda sudah memahami bagaimana kita membuat dan menetapkan

00:11.640 --> 00:14.427
tipe, bagaimana kita menetapkan tipe ke variabel dan

00:14.427 --> 00:17.510
ke parameter, dan mengapa kita melakukan itu.

00:17.510 --> 00:20.740
Bagaimana penugasan tipe dan tipe bisa berbeda dari pemeriksaan

00:20.740 --> 00:24.770
tipe JavaScript bahwa JavaScript menggunakan tipe runtime, dan TypeScript

00:24.770 --> 00:27.310
menggunakan tipe statis yang penting selama

00:27.310 --> 00:29.400
pengembangan.

00:29.400 --> 00:31.710
Oleh karena itu, kode JavaScript yang dibangun

00:31.710 --> 00:34.410
tidak menyertakan penugasan tipe apa pun.

00:34.410 --> 00:36.550
Ini tentu saja termasuk pemeriksaan tipe

00:36.550 --> 00:39.060
apa pun, karena itu adalah kode JavaScript biasa,

00:39.060 --> 00:41.730
tetapi sesuatu seperti ini di sini ...

00:43.050 --> 00:44.910
ini tidak diperbolehkan dalam JavaScript.

00:44.910 --> 00:46.280
Ini bukan sintaksis yang didukung.

00:46.280 --> 00:47.960
Itu hanya TypeScript saja.

00:47.960 --> 00:49.550
Jadi, mudah-mudahan sudah jelas.

00:49.550 --> 00:52.740
Dan kemudian kita telah melihat angka, string, Boolean

00:52.740 --> 00:55.750
pada tipe fungsi dan pengaturan tipe pengembalian,

00:55.750 --> 00:58.510
tipe argumen, dan juga menggambarkan tipe fungsi

00:58.510 --> 01:00.160
keseluruhan yang dapat membantu

01:00.160 --> 01:02.490
jika Anda ingin memiliki variabel yang pada

01:02.490 --> 01:04.780
akhirnya memegang fungsi.

01:04.780 --> 01:07.890
Kita telah melihat objek dan array dan enum dan bagaimana

01:07.890 --> 01:10.140
hal itu bisa menarik dan membantu Anda.

01:10.140 --> 01:12.030
Hal yang sama juga berlaku untuk tupel.

01:12.030 --> 01:16.160
Dan sekarang kita juga telah melihat aliases, types aliases, di mana Anda

01:16.160 --> 01:18.605
dapat menggabungkan tipe kompleks menjadi

01:18.605 --> 01:21.220
aliases yang dapat Anda gunakan kembali.

01:21.220 --> 01:23.840
Kita telah melihat tipe literal dan tipe union,

01:23.840 --> 01:25.840
yang bisa berguna untuk skenario di

01:25.840 --> 01:29.550
mana Anda mengharapkan lebih dari satu tipe yang mungkin.

01:29.550 --> 01:33.455
Dan sekarang pada akhirnya kita juga melihat pada yang tidak diketahui

01:33.455 --> 01:35.956
dan tidak pernah, yang merupakan jenis ceruk

01:35.956 --> 01:39.430
tetapi masih dalam ceruknya, mereka bisa sangat berguna.

01:39.430 --> 01:40.970
Sekarang dengan dasar-dasar ini,

01:40.970 --> 01:43.180
kita akan menyelam lebih dalam ke dalam aspek-aspek

01:43.180 --> 01:45.630
individual, dan tentu saja juga mengeksplorasi tipe

01:45.630 --> 01:49.163
dan konstruksi JavaScript lainnya di mana tipe dapat membantu.
