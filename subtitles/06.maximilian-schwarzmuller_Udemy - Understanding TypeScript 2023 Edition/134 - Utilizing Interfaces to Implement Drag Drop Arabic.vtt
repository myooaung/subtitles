WEBVTT

00:02.190 --> 00:05.380
المدرب: لنصل الآن إلى نهاية هذا المشروع

00:05.380 --> 00:09.590
، وهذا يتضمن إمكانية سحب وإسقاط مشروع لدينا في أحد

00:09.590 --> 00:12.390
المربعات ، على سبيل المثال ، في مربع

00:12.390 --> 00:16.410
المشاريع النشطة في المربع الآخر.

00:16.410 --> 00:19.310
لذلك ، لتحويل المشروع بشكل أساسي

00:19.310 --> 00:22.780
من مشروع نشط إلى مشروع منتهي.

00:22.780 --> 00:25.430
لذلك ، لا يتعلق الأمر فقط بالتحديث المرئي

00:25.430 --> 00:27.800
، فهو لا يتعلق فقط بسحبه وإفلاته

00:27.800 --> 00:31.050
وتحديث واجهة المستخدم ، بل يتعلق أيضًا بتعديل

00:31.050 --> 00:35.470
البيانات خلف الكواليس في فئة إدارة الحالة الخاصة بنا وحالة

00:35.470 --> 00:37.790
المشروع حيث ندير قائمة من المشاريع

00:37.790 --> 00:39.960
في النهاية ، ضع في اعتبارك أن كل

00:39.960 --> 00:42.990
مشروع له خاصية الحالة وسنحتاج إلى تحديث

00:42.990 --> 00:45.420
ذلك أيضًا.

00:45.420 --> 00:48.610
إذن ، هناك شيئان نحتاج إلى تنفيذهما: السحب

00:48.610 --> 00:51.800
والإفلات ثم كل هذا وراء الكواليس وتحديث

00:51.800 --> 00:53.410
البيانات.

00:53.410 --> 00:56.220
لنبدأ الآن بالسحب والإفلات ، ولهذا سنقوم

00:56.220 --> 00:59.870
بشكل أساسي بتنفيذ السحب والإفلات كما نفعل في نصوص

00:59.870 --> 01:02.960
Vanilla java والذي يمكنك ، على سبيل المثال

01:02.960 --> 01:04.790
، التعرف عليه في دليل نصي

01:04.790 --> 01:06.970
جافا الكامل.

01:06.970 --> 01:09.690
يتعلق الأمر بشكل أساسي بتنفيذ مجموعة من مستمعي

01:09.690 --> 01:11.960
الأحداث وبالطبع سترى كيف تعمل هذه الوحدة

01:11.960 --> 01:14.800
في هذه الوحدة في المحاضرات التالية ، لكننا سنقوم

01:14.800 --> 01:17.350
بتنفيذها بأسلوب الكتابة المطبوعة ، لذلك سنقوم

01:17.350 --> 01:21.150
بتحسينها باستخدام بعض ميزات الكتابة المطبوعة.

01:21.150 --> 01:24.240
لذا ، لنبدأ وكيف أرغب في تحسينه بميزات

01:24.240 --> 01:25.790
مطبوعة؟

01:25.790 --> 01:28.423
حسنًا ، أريد إعادة استخدام الواجهات هنا.

01:29.280 --> 01:32.120
واجهات السحب والإفلات ، ولكن

01:32.120 --> 01:35.470
ليس فقط لتحديد بنية بعض الكائنات

01:35.470 --> 01:39.060
كما استخدمنا سابقًا واجهات ولكن بدلاً

01:39.060 --> 01:42.010
من ذلك لإعداد عقد حقًا يمكن لفئات

01:42.010 --> 01:44.590
معينة التوقيع عليه لفرض هذه

01:44.590 --> 01:46.970
الفئات ، لتنفيذ طرق معينة

01:46.970 --> 01:49.690
تساعدنا في السحب والإفلات

01:49.690 --> 01:51.980
.

01:51.980 --> 01:55.250
لكي أكون دقيقًا ، أفكر في واجهتين ، وبالطبع

01:55.250 --> 01:58.590
، سيكون استخدام هذه الواجهات اختياريًا ، لكن

01:58.590 --> 02:00.920
هذا سيسمح لنا ، حسنًا ، بتوفير بعض

02:00.920 --> 02:04.465
التعليمات البرمجية التي تفرض على الفصل تنفيذ

02:04.465 --> 02:06.340
كل ما يحتاجه ليكون قابلاً

02:06.340 --> 02:09.810
للسحب أو ليكون هدف إسقاط صالح والذي إذا كنا نبني

02:09.810 --> 02:12.960
تطبيقًا أكبر يمكن أن يساعدنا في كتابة كود

02:12.960 --> 02:15.160
أكثر وضوحًا ورمزًا أكثر قابلية

02:15.160 --> 02:19.080
للفهم ، خاصة عند العمل في فريق.

02:19.080 --> 02:21.710
إذن ، ما هي الواجهات التي أتحدث عنها؟

02:21.710 --> 02:23.160
أريد أن يكون لدي واجهة

02:23.160 --> 02:24.617
واحدة ، سأسميها قابلة

02:26.200 --> 02:28.660
للسحب ، وسيكون لدي واجهة ثانية

02:28.660 --> 02:31.060
سأسميها هدف السحب.

02:31.060 --> 02:32.950
فكرتي هنا هي أنه يمكننا إضافة

02:32.950 --> 02:35.710
واجهة قابلة للسحب إلى أي فئة يتم عرضها

02:35.710 --> 02:38.030
والعنصر الذي يمكن سحبه.

02:38.030 --> 02:41.810
في مثالنا ، سيكون هذا هو فئة عنصر المشروع.

02:41.810 --> 02:44.170
فئة عنصر المشروع هي المسؤولة عن تقديم

02:44.170 --> 02:46.600
، حسنًا ، عناصر المشروع هذه ويجب أن

02:46.600 --> 02:49.230
تكون هذه الأجزاء القابلة للسحب ، والمربعات

02:49.230 --> 02:53.320
، والمشاريع النشطة والمشاريع المنتهية ، لذلك هنا يجب أن تكون

02:53.320 --> 02:57.880
فئة قائمة المشروع الخاصة بنا هي أهداف السحب.

02:57.880 --> 03:02.100
الآن ، ما الذي تفرضه هذه الواجهات ليتم تنفيذه أو إضافته

03:02.100 --> 03:03.890
إلى الفئات بعد ذلك؟

03:03.890 --> 03:05.760
لنبدأ مع السحب.

03:05.760 --> 03:09.550
هنا ، نحتاج أساسًا إلى مستمعين للحدث وبالتالي

03:09.550 --> 03:12.540
اثنين من المعالجين لهذه الأحداث.

03:12.540 --> 03:17.070
معالج بدء السحب ، والذي سيكون طريقة ومعالج نهاية السحب

03:17.070 --> 03:19.733
، لأنه عند تنفيذ السحب والإفلات

03:22.020 --> 03:24.180
، فإن الشيء الذي تريد سحبه

03:24.180 --> 03:26.070
سيتطلب بعض المستمع الذي

03:26.070 --> 03:29.840
يستمع إلى بداية حدث السحب هذا وأيضًا ، من المحتمل

03:29.840 --> 03:32.330
أن يكون المستمع الذي يستمع حتى

03:32.330 --> 03:34.540
نهاية حدث السحب حتى تتمكن

03:34.540 --> 03:36.560
من إجراء أي نوع من التحديثات

03:36.560 --> 03:40.440
التي تريد القيام بها هناك.

03:40.440 --> 03:42.580
الآن ، سيحصل معالج حدث بدء السحب

03:42.580 --> 03:44.225
على كائن حدث والذي سنطلق

03:44.225 --> 03:47.370
عليه حدث السحب ، وهو نوع مضمن ، وأنواع تحتوي

03:47.370 --> 03:51.010
على خيارات libs ، بسبب إعداد تعارض TS لدينا والملفات

03:51.010 --> 03:53.210
التي نضيفها هناك ولن تعود أي

03:53.210 --> 03:55.330
شيء سيكون أسلوبًا يتم تنفيذه

03:55.330 --> 03:57.600
ولكن بعد ذلك يقوم بشيء ما فقط ،

03:57.600 --> 04:03.930
يقوم بتكوين حدث السحب على سبيل المثال ، ولكنه لا يعود.

04:03.930 --> 04:06.970
الآن يحصل معالج نهاية السحب على حدث مماثل

04:06.970 --> 04:10.730
، ويحصل أيضًا على حدث سحب وكل ذلك لا يُرجع شيئًا.

04:10.730 --> 04:13.130
الآن ، بالطبع سترى كيف نطبق هؤلاء

04:13.130 --> 04:15.810
في بضع ثوانٍ فقط ، لذا انطلقوا معي.

04:15.810 --> 04:17.810
الآن ، ماذا عن هدف السحب؟

04:17.810 --> 04:20.530
حسنًا ، بالنسبة للهدف ، إذن المربع

04:20.530 --> 04:22.620
الذي يمكننا سحب شيء ما عليه

04:22.620 --> 04:26.280
يوجد ثلاثة معالجات للأحداث أريد تنفيذها.

04:26.280 --> 04:28.593
سحب فوق معالج ومعالج

04:29.440 --> 04:31.800
إسقاط ومعالج سحب

04:31.800 --> 04:34.280
إجازة.

04:34.280 --> 04:36.470
الآن ، ماذا تفعل هذه الأشياء؟

04:36.470 --> 04:39.370
الآن ، تحتاج إلى تنفيذ معالج السحب والإفلات

04:39.370 --> 04:41.960
عند تنفيذ السحب والإسقاط في نص جافا

04:41.960 --> 04:45.140
للإشارة أساسًا إلى المتصفح في نص جافا النصي

04:45.140 --> 04:48.060
بأن الشيء الذي تسحب شيئًا ما فوقه هو هدف

04:48.060 --> 04:50.160
سحب صالح.

04:50.160 --> 04:53.840
إذا لم تفعل الشيء الصحيح في معالج السحب فوق

04:53.840 --> 04:56.410
، فلن يكون الإسقاط ممكنًا.

04:56.410 --> 04:57.980
أنت بحاجة إلى معالج الإسقاط

04:57.980 --> 05:00.760
بعد ذلك للتفاعل مع الانخفاض الفعلي الذي يحدث

05:00.760 --> 05:03.960
، لذلك إذا كان السحب فوق المعالج سيسمح بالإسقاط باستخدام

05:03.960 --> 05:06.500
معالج الإسقاط ، فسوف يتعامل مع الإسقاط

05:06.500 --> 05:08.650
، ومن ثم يمكننا هنا تحديث بياناتنا

05:08.650 --> 05:11.960
وواجهة المستخدم على سبيل المثال ومعالج السحب والإجازة

05:11.960 --> 05:14.500
يمكن أن يكون مفيدًا إذا كنا ، على سبيل المثال

05:14.500 --> 05:16.940
، نقدم بعض الملاحظات المرئية للمستخدم

05:16.940 --> 05:19.880
عندما يسحب شيئًا ما فوق المربع على سبيل المثال

05:19.880 --> 05:22.210
، نقوم بتغيير لون الخلفية جيدًا إذا لم

05:22.210 --> 05:25.790
يحدث أي انخفاض وبدلاً من ذلك تم إلغاؤه أو نقل المستخدم العنصر

05:25.790 --> 05:28.410
بعيدًا ، يمكننا استخدام معالج السحب لإرجاع

05:28.410 --> 05:32.190
التحديث المرئي.

05:32.190 --> 05:36.250
الآن ، تتلقى جميع المعالجات الثلاثة حدث سحب ولا

05:36.250 --> 05:37.990
تُرجع أي شيء ، لذلك دعونا

05:37.990 --> 05:41.473
نقوم بتحديثها بشكل مناسب مثل هذا.

05:44.070 --> 05:47.250
وأيضًا لهذا المعالج الأخير هنا.

05:47.250 --> 05:49.810
والآن قمنا بتكوين بعض الواجهات

05:49.810 --> 05:52.840
التي لا تفعل الكثير من تلقاء نفسها ، ولكن

05:52.840 --> 05:55.710
الآن يمكننا استخدامها وأريد أن أبدأ

05:55.710 --> 05:57.490
بعنصر المشروع.

05:57.490 --> 06:00.380
لذلك دعونا نعثر على فئة عنصر المشروع

06:00.380 --> 06:02.710
الخاصة بنا لهذا المكون ، وهنا

06:02.710 --> 06:05.100
عنصر المشروع ، والآن قد تتذكر أنه

06:05.100 --> 06:08.540
لا يمكن استخدام الواجهة فقط لتحديد نوع كائن

06:08.540 --> 06:12.290
مخصص ولكن يمكنك استخدامه كعقد على فئة.

06:12.290 --> 06:15.760
يمكنك استدعاء الأدوات أو إضافة أدوات هنا بعد

06:15.760 --> 06:16.750
اسم الفصل وبعد

06:16.750 --> 06:19.290
الإضافات المحتملة التي تقوم بها

06:19.290 --> 06:20.900
ثم تنفيذ الواجهة.

06:20.900 --> 06:24.340
في هذه الحالة ، واجهة السحب.

06:24.340 --> 06:27.250
الآن ، عندما تفعل ذلك ، قمت فقط بتنسيق هذا

06:27.250 --> 06:29.820
لإحضاره في سطر جديد لتسهيل قراءته.

06:29.820 --> 06:31.393
عند القيام بذلك ، تحصل

06:31.393 --> 06:34.460
على خطأ الآن لأن الفصل هنا ينفذ الواجهة بشكل

06:34.460 --> 06:38.600
غير صحيح لأن هذه الواجهة القابلة للسحب تجبرنا على إضافة

06:38.600 --> 06:40.763
طريقتين ، إذا كنت تتذكر.

06:42.840 --> 06:44.480
لذا ، دعنا نضيفهم هنا.

06:44.480 --> 06:46.290
ربما سنقوم بتحميل المُنشئ.

06:46.290 --> 06:49.550
دعنا نضيف معالج بدء السحب الذي يحصل

06:49.550 --> 06:53.610
على حدث من نوع السحب ودعنا نضيف أيضًا معالج

06:53.610 --> 06:56.500
نهاية السحب الذي يستقبل حدث

06:56.500 --> 06:59.143
السحب الخاص بنا.

06:59.990 --> 07:02.010
والآن أضفنا هاتين الطريقتين.

07:02.010 --> 07:05.330
الآن ، هذا وحده لا يمكّن السحب والإفلات.

07:05.330 --> 07:08.900
إنه يساعدنا فقط في كتابة مكونات قابلة للسحب أو فئات

07:08.900 --> 07:11.880
قابلة للسحب بطريقة موحدة ، لذلك إذا أضفنا المزيد

07:11.880 --> 07:14.560
والمزيد من الفئات التي يجب أن تكون قابلة

07:14.560 --> 07:18.210
للسحب ، فستكون لدينا دائمًا هذه الطرق التي تجعل من السهل

07:18.210 --> 07:20.700
ببساطة التفكير في الكود الخاص بنا وتشغيل

07:20.700 --> 07:22.870
الكود الخاص بنا ، خاصة عند العمل

07:22.870 --> 07:25.520
في فريق ، لأن الجميع يعرف مكان العمل لحدث

07:25.520 --> 07:27.840
بدء السحب.

07:27.840 --> 07:31.340
الآن ما لا يفعله هذا ، بالطبع ، هو الاستماع

07:31.340 --> 07:32.950
إلى حدث بدء السحب.

07:32.950 --> 07:35.010
هذا شيء يمكننا القيام به في طريقة

07:35.010 --> 07:36.730
التكوين التي لديك بالفعل.

07:36.730 --> 07:38.980
يمكننا الوصول إلى العنصر الذي يتم

07:38.980 --> 07:41.090
تقديمه لدينا وإضافة مستمع حدث إليه

07:41.090 --> 07:43.890
وهناك ، سيكون هذا هو حدث بدء السحب.

07:43.890 --> 07:45.780
حدث السحب البداية هو حدث واحد

07:45.780 --> 07:49.190
، وهو حدث افتراضي واحد في المتصفح يمكنك الاستماع إليه

07:49.190 --> 07:51.750
والمعالج الزوجي الذي نريد تشغيله ، بالطبع

07:51.750 --> 07:53.740
، هو معالج بدء السحب ، والذي يمكننا

07:55.320 --> 07:57.793
الإشارة إليه هنا.

07:59.080 --> 08:00.750
الآن ، نريد أيضًا أن نتأكد من

08:00.750 --> 08:02.460
أنه داخل معالج بدء السحب تشير

08:02.460 --> 08:04.870
هذه الكلمة الرئيسية إلى فصلنا ، وكما تتعلم

08:04.870 --> 08:06.560
مع مستمعي الأحداث ، لن يكون هذا

08:06.560 --> 08:08.530
هو الحال افتراضيًا ، لذلك يمكننا

08:08.530 --> 08:11.810
استخدام الربط هنا وربط هذا الذي من شأنه أن تكون صالحة

08:11.810 --> 08:14.750
، ولكن لدينا طريقة أفضل في الواقع.

08:14.750 --> 08:16.900
أضفنا مصمم الربط التلقائي

08:16.900 --> 08:18.550
، لذا سأضيف هذا هنا إلى

08:18.550 --> 08:20.303
معالج بدء السحب.

08:21.210 --> 08:26.070
الآن ، يمكننا أيضًا الاستماع إلى حدث نهاية السحب هنا والإشارة

08:26.070 --> 08:28.530
إلى معالج نهاية السحب.

08:28.530 --> 08:30.400
يمكنك أيضًا إضافة الربط التلقائي

08:30.400 --> 08:32.690
هناك إذا كنت تخطط لاستخدام الكلمة الأساسية

08:32.690 --> 08:35.830
vis هنا في الوقت الحالي ، وسأقوم بتسجيل نهاية السحب هنا

08:35.830 --> 08:37.730
حتى نرى أنه تم تشغيله لأنني هنا في

08:37.730 --> 08:40.520
الواقع ليس لدي أي شيء محدد أريد أن أفعله بها ، وبالتالي

08:40.520 --> 08:44.410
أنا سيؤدي أيضًا إلى إفراغ هذه المعلمة وإخبار الكتابة المطبوعة بشكل

08:44.410 --> 08:47.310
أساسي أنني لا أستخدمها.

08:47.310 --> 08:49.850
هنا في بداية السحب ، سنستخدم الحدث وفي الوقت

08:49.850 --> 08:51.730
الحالي ، سأقوم فقط بتسجيل الحدث

08:51.730 --> 08:53.720
، عند حدوث هذا الحدث.

08:53.720 --> 08:55.610
الآن ، هذا وحده لن يفي بالغرض.

08:55.610 --> 08:57.000
إذا قمت بحفظ كل شيء وقمت

08:57.000 --> 08:59.230
بإضافة بعض المشاريع هنا ، فسترى أنه

08:59.230 --> 09:01.460
لا يمكنك إعادة سحبه ، أليس كذلك؟

09:01.460 --> 09:04.750
إذا حاولت سحبها ، فلن ينجح ذلك لأنك

09:04.750 --> 09:07.390
ستحتاج أيضًا إلى تغيير شيء ما

09:07.390 --> 09:09.720
في ملف HTML الخاص بك.

09:09.720 --> 09:11.810
في عنصر القائمة هذا ، والذي يتم

09:11.810 --> 09:14.550
تقديمه لكل مشروع ، وهو الشيء الذي تريد

09:14.550 --> 09:18.380
سحبه ، يجب عليك إضافة السمة القابلة للسحب وتعيين هذا

09:18.380 --> 09:19.830
على صحيح.

09:19.830 --> 09:21.040
هذا مهم.

09:21.040 --> 09:24.200
هذا يخبر المتصفح أن هذا سيكون قابلاً للسحب.

09:24.200 --> 09:28.430
مع ذلك ، إذا قمت بحفظه ، وقمت بإعادة إضافة مشروع هنا ، كما

09:28.430 --> 09:30.400
ترى الآن ، هذا بالفعل قابل

09:30.400 --> 09:32.070
للسحب ، إنه الآن عالق بالماوس

09:32.070 --> 09:35.720
ويمكننا الآن تحريكه هنا على ما يرام.

09:35.720 --> 09:38.530
سترى أيضًا على اليمين أنه تم إطلاق حدث

09:38.530 --> 09:41.390
السحب عندما بدأت في السحب وإذا تركت ،

09:41.390 --> 09:43.860
فسترى إطلاق حدث السحب أيضًا.

09:43.860 --> 09:46.510
إذن المستمعون لدينا متصلون ويمكننا

09:46.510 --> 09:50.540
السحب ، والآن يمكننا العمل على هدف الإسقاط ، لذا في المربع

09:50.540 --> 09:53.200
حيث يجب أن يكون هذا قابلاً للسحب إليه

09:53.200 --> 09:56.560
، ثم إضافة المشروع إلى هذا المربع.

09:56.560 --> 09:58.660
أحد هذه الأشياء التي سأفعلها

09:58.660 --> 10:02.930
سريعًا هو التطبيقات. css ، في عناصر القائمة ، لذلك

10:02.930 --> 10:06.550
في مشاريع LI ، سأضيف لون خلفية أبيض ببساطة حتى

10:06.550 --> 10:09.810
نتمكن من رؤية هذا بشكل أفضل قليلاً.

10:09.810 --> 10:12.350
لذا هنا ، مشروع LI ، أضفت اللون الأبيض

10:12.350 --> 10:15.800
بحيث عندما نسحب حول المشروع هنا ، لدينا خلفية

10:15.800 --> 10:17.370
بيضاء هنا مما يجعل رؤيتها

10:17.370 --> 10:19.150
أسهل قليلاً.

10:19.150 --> 10:20.840
لا يغير خطوتنا التالية بالرغم من ذلك.

10:20.840 --> 10:22.700
نريد أن نجعله يسقط.
