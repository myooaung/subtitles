WEBVTT

00:02.250 --> 00:04.870
- : Donc, maintenant que nous connaissons ces puissantes fonctionnalités,

00:04.870 --> 00:07.960
une question évidente est, pourquoi l'utiliser ?

00:07.960 --> 00:09.610
Pourquoi est-ce utile ?

00:09.610 --> 00:12.200
Eh bien, c'est utile dans des situations comme celle-ci, où

00:12.200 --> 00:13.780
nous savons que nous voulons disposer

00:13.780 --> 00:15.820
d'un certain nombre de fonctionnalités.

00:15.820 --> 00:18.750
Disons une méthode d'accueil, et nous voulons nous assurer

00:18.750 --> 00:21.910
qu'une clause possède une telle méthode d'accueil, et qu'une

00:21.910 --> 00:24.450
autre clause la possède peut-être aussi, eh bien,

00:24.450 --> 00:26.360
nous pouvons implémenter une interface

00:26.360 --> 00:29.570
qui force l'existence de cette méthode.

00:29.570 --> 00:32.690
Nous pouvons alors facilement partager la fonctionnalité entre

00:32.690 --> 00:35.850
les clauses, et chaque clause doit ajouter sa propre mise en œuvre,

00:35.850 --> 00:38.060
le code exact qui doit être exécuté lorsque la

00:38.060 --> 00:39.450
méthode est appelée, mais nous

00:39.450 --> 00:41.370
imposons une certaine structure à l'aide

00:41.370 --> 00:43.280
des interfaces.

00:43.280 --> 00:46.400
Cela peut être utile si d'autres parties de notre code

00:46.400 --> 00:48.550
ne dépendent pas de cette structure.

00:48.550 --> 00:51.680
Ici, nous définissons user1 comme étant de type Greetable, et

00:51.680 --> 00:55.240
avec cela nous disons que nous ne nous soucions pas de ce qui est à l'intérieur

00:55.240 --> 00:57.840
de user, mais ce qui doit être là est une méthode greet,

00:57.840 --> 00:59.730
et nous savons qu'elle doit être là parce

00:59.730 --> 01:03.510
que tout ce que nous stockons dans user1 doit être greetable.

01:03.510 --> 01:07.350
Cela nous permet d'écrire un code vraiment puissant et flexible où nous

01:07.350 --> 01:09.840
n'avons pas besoin de tout savoir sur un objet,

01:09.840 --> 01:11.710
ou tout sur une clause, mais nous savons

01:11.710 --> 01:14.710
simplement que ce que j'obtiens ici dans user1 doit avoir

01:14.710 --> 01:16.210
une méthode greet.

01:16.210 --> 01:18.850
Nous ne nous soucions pas de savoir si Person a quelque

01:18.850 --> 01:20.630
chose d'autre, ici nous sommes intéressés

01:20.630 --> 01:22.400
par greet, donc nous nous sommes envoyés

01:22.400 --> 01:25.180
vers Greetable, et donc nous ne pouvons rien stocker dans

01:25.180 --> 01:27.190
user1 qui n'aurait pas une méthode greet,

01:27.190 --> 01:30.770
parce que Greetable force tout ce que vous basez dessus à avoir une telle méthode

01:30.770 --> 01:32.333
greet.
