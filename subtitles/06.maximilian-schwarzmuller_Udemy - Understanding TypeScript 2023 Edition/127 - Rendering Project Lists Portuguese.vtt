WEBVTT

00:02.370 --> 00:05.290
Narrador: Então, agora que somos capazes de buscar a

00:05.290 --> 00:08.630
entrada do usuário e toda a validação com a ajuda de nosso TypeScript,

00:08.630 --> 00:11.420
a lógica de validação conduzida aqui.

00:11.420 --> 00:13.810
Vamos seguir em frente e vamos nos certificar

00:13.810 --> 00:17.400
de fazer mais com a entrada do usuário reunida do que apenas produzi-la

00:17.400 --> 00:18.420
no console.

00:18.420 --> 00:19.450
Porque no momento, é claro

00:19.450 --> 00:21.330
que há o que estamos fazendo, certo.

00:21.330 --> 00:24.670
No final, estou apenas imprimindo as informações das escrituras

00:24.670 --> 00:26.030
que reunimos para fazer

00:26.030 --> 00:30.300
console, e esse não é nosso objetivo final nesta aplicação.

00:30.300 --> 00:34.290
Em vez disso, o objetivo é que também apresentemos aqui

00:34.290 --> 00:37.770
esta lista de projetos com base neste modelo, onde

00:37.770 --> 00:41.550
cada item do projeto é baseado neste modelo.

00:41.550 --> 00:45.750
E nós produzimos as informações que coletamos aqui.

00:45.750 --> 00:48.520
Portanto, essa será a próxima coisa em que eu quero trabalhar.

00:48.520 --> 00:52.970
Além de ter aqui nossa cláusula de entrada de projetos, que é responsável

00:52.970 --> 00:55.440
por renderizar o fórum e reunir a entrada

00:55.440 --> 00:57.350
do usuário, quero ter o número

00:57.350 --> 00:59.410
de cláusula que é responsável

00:59.410 --> 01:03.230
por renderizar uma lista de projetos.

01:03.230 --> 01:06.100
E na verdade, vamos dividir isso em duas cláusulas.

01:06.100 --> 01:07.650
Uma cláusula para a lista

01:07.650 --> 01:11.000
e uma classe por item de projeto na lista.

01:11.000 --> 01:14.970
E então precisamos encontrar alguma forma de passar essa informação

01:14.970 --> 01:18.500
reunida aqui basicamente para nossa lista de projetos e adicionar

01:18.500 --> 01:20.650
um novo item a ela.

01:20.650 --> 01:23.420
Portanto, vamos abordar este passo a passo, eu diria,

01:23.420 --> 01:26.880
e vamos começar acrescentando uma classe de lista de projetos.

01:26.880 --> 01:29.380
Agora no local exato onde você adicionou, é com você.

01:29.380 --> 01:32.900
A ordem não importa porque o script Java, no final,

01:32.900 --> 01:36.430
analisará todo este arquivo antes de executá-lo.

01:36.430 --> 01:38.860
Portanto, estará ciente de todas as classes.

01:38.860 --> 01:41.990
Ainda assim, vou adicioná-lo aqui acima da cláusula de entrada do

01:41.990 --> 01:45.740
projeto, porque eu me basearia na cláusula da lista de projetos, que estou prestes

01:45.740 --> 01:48.810
a construir dentro da classe de entrada do projeto, mas mais uma vez

01:48.810 --> 01:50.500
isso realmente importa.

01:50.500 --> 01:55.500
Portanto, aqui eu terei minha cláusula de lista de projetos, lista de projetos, e a idéia

01:55.600 --> 01:59.230
desta cláusula aqui está um pouco relacionada ao que fizemos

01:59.230 --> 02:01.170
em uma entrada de projeto.

02:01.170 --> 02:04.300
Quero chegar ao meu modelo aqui e depois apresentá-lo

02:04.300 --> 02:06.930
em um determinado lugar fora da aplicação.

02:06.930 --> 02:09.480
E portanto, o que podemos fazer aqui é adicionar

02:09.480 --> 02:13.120
novamente um construtor, podemos adicionar os campos de que precisamos

02:13.120 --> 02:15.310
e, no final, será necessário um elemento

02:15.310 --> 02:17.030
modelo e o elemento hospedeiro,

02:17.030 --> 02:22.030
portanto, podemos adicionar ambos aqui à nossa lista de projetos.

02:22.440 --> 02:25.190
Também precisaremos nos elevar, eu

02:25.190 --> 02:29.640
diria que o elemento concreto, que está sendo rendido.

02:29.640 --> 02:31.800
E os tipos serão diferentes, no entanto.

02:31.800 --> 02:34.580
O elemento anfitrião ainda será um div porque

02:34.580 --> 02:38.330
eu quero fazer essa lista nesse div também aqui.

02:38.330 --> 02:40.970
Mas o elemento concreto, que nós fazemos render.

02:40.970 --> 02:43.960
É claro que não é um elemento de formulário, mas se dermos

02:43.960 --> 02:46.180
uma olhada em nosso modelo de lista aqui,

02:46.180 --> 02:48.520
vemos que há uma seção dentro dele.

02:48.520 --> 02:51.010
Temos, portanto, um elemento de seção.

02:51.010 --> 02:54.420
Agora acontece que não há nenhum elemento e esses elementos de seção,

02:54.420 --> 02:57.040
então teremos apenas um elemento HTML regular, porque

02:57.040 --> 03:00.490
cada elemento tem este tipo aqui para algum imposto.

03:00.490 --> 03:03.060
Existem tipos mais especializados se forem,

03:03.060 --> 03:05.710
e podemos simplesmente usar o tipo HTML.

03:05.710 --> 03:10.710
Portanto, agora é claro que precisamos ter acesso a esses elementos.

03:10.970 --> 03:15.600
Portanto, podemos copiar este código aqui, na verdade, do

03:15.600 --> 03:20.250
construtor da entrada do projeto adicionado ao construtor

03:20.250 --> 03:22.260
da lista de projetos e agora

03:22.260 --> 03:24.730
ajustar algumas coisas.

03:24.730 --> 03:27.630
Por exemplo, meu elemento modelo, é claro, agora não tem

03:27.630 --> 03:29.420
uma idéia da entrada do projeto.

03:29.420 --> 03:32.150
Em vez disso, agora é a lista de projetos.

03:32.150 --> 03:36.660
Então, vamos copiar isso e usar isso aqui para selecionar o elemento.

03:36.660 --> 03:39.760
Continuarei a custar, e ainda sei

03:39.760 --> 03:42.710
com certeza que o dis não muda.

03:42.710 --> 03:45.520
Os elementos anfitriões ainda estão até a morte com o aplicativo de identificação.

03:45.520 --> 03:47.820
Portanto, isto não muda.

03:47.820 --> 03:52.070
Então eu importo meu conteúdo e depois eu, bem, a loja, o primeiro

03:52.070 --> 03:53.530
elemento.

03:53.530 --> 03:55.380
Fora da importação, o modelo.

03:55.380 --> 03:57.780
Portanto, basicamente o primeiro elemento do

03:57.780 --> 04:01.590
modelo, que é a seção, armazenei isso na propriedade do elemento aqui.

04:01.590 --> 04:04.430
No entanto, este não é um elemento de formulário HTML.

04:04.430 --> 04:07.210
É apenas um elemento HTML aqui.

04:07.210 --> 04:11.710
Agora também podemos atribuir uma identificação aqui e realmente fizemos,

04:11.710 --> 04:15.380
deve ser dinâmica, não codificada porque teremos mais de uma

04:15.380 --> 04:16.970
lista de projetos.

04:16.970 --> 04:21.220
Quero ter listas de ferramentas na aplicação final, uma para o ato

04:21.220 --> 04:25.060
de projetos e uma para o decreto de projetos, e elas oferecem,

04:25.060 --> 04:28.420
quero obter algumas informações adicionais para

04:28.420 --> 04:29.895
a construtora.

04:29.895 --> 04:35.703
O tipo do projeto, e vou usar estatísticas, atalho TypeScript.

04:35.703 --> 04:39.250
Você aprende onde pode adicionar um acessor diante do parâmetro,

04:39.250 --> 04:44.170
privado ou público, para criar automaticamente uma propriedade com o mesmo

04:44.170 --> 04:48.060
nome e armazenar o valor que foi passado sobre este argumento

04:48.060 --> 04:51.730
naquela propriedade igualmente nomeada.

04:51.730 --> 04:55.040
Portanto, agora esta classe também terá um nome de propriedade para digitar.

04:55.040 --> 04:57.910
E agora a questão é: qual é o tipo deste parâmetro

04:57.910 --> 04:58.790
de tipo?

04:58.790 --> 05:03.640
E isto deveria ser na verdade um tipo literal e um tipo sindical.

05:03.640 --> 05:07.270
Ou está ativo ou terminado.

05:07.270 --> 05:11.050
Temos até mesmo projetos ativos ou projetos concluídos.

05:11.050 --> 05:14.270
Este é um argumento que eu espero obter quando a lista de

05:14.270 --> 05:16.080
projetos for instanciada.

05:16.080 --> 05:20.440
E com o pai, temos que digitar a identificação da propriedade D, que deve

05:20.440 --> 05:21.870
ser baseada nisto.

05:21.870 --> 05:25.090
Deveria ser, e para o pai, eu uso um modelo literal aqui.

05:25.090 --> 05:30.090
Deve ser do tipo projetos de traços, portanto, projetos de traços ativos

05:31.240 --> 05:33.640
ou projetos de traços concluídos.

05:33.640 --> 05:35.070
Essa é a minha idéia aqui.

05:35.070 --> 05:37.540
Você sempre pode usar este tipo de ponto para que

05:37.540 --> 05:40.380
a TypeScript entenda que estamos usando esta propriedade

05:40.380 --> 05:41.890
e que ela não está sem uso.

05:41.890 --> 05:46.200
Então, com isso, estamos tendo acesso a todos os elementos centrais e estamos

05:46.200 --> 05:49.660
adicionando uma identificação à seção, que obtemos de nosso

05:49.660 --> 05:50.790
modelo.

05:50.790 --> 05:53.650
Agora, é claro, queremos um, queremos fazer certo?

05:53.650 --> 05:58.600
Essa é a idéia para tudo isso, mais uma vez, em um método privado.

05:58.600 --> 06:00.540
Anexe a justiça.

06:00.540 --> 06:05.310
Tivemo-lo na entrada do projeto e lá dentro é agora a fila de

06:05.310 --> 06:06.310
objetivos.

06:06.310 --> 06:11.300
Bem, anexar isto ao Dom para agora renderizar a lista

06:11.300 --> 06:12.750
do pai ao Dom.

06:12.750 --> 06:16.610
Portanto, em vez de anexar, farei o mesmo que fiz

06:16.610 --> 06:19.223
para o formulário do projeto.

06:20.070 --> 06:24.230
Portanto, podemos copiar essa linha aqui e anexar atitude.

06:24.230 --> 06:27.040
Eu tenho meu elemento hospedeiro e quero inserir

06:27.040 --> 06:28.420
um elemento adjacente.

06:28.420 --> 06:30.240
Após o início, e este deve ser o elemento.

06:30.240 --> 06:33.300
Extraímos isso do modelo aqui.

06:33.300 --> 06:36.990
No entanto, na verdade não quero fazer isso depois

06:36.990 --> 06:41.960
do início, mas antes do fim, o que significa antes do fechamento, tirar

06:41.960 --> 06:45.870
o elemento hospedeiro e depois podemos chamar o anexo

06:45.870 --> 06:49.940
aqui no construtor, é claro, para anexar nosso elemento

06:49.940 --> 06:51.763
criado aqui ao Dom.

06:53.880 --> 06:56.370
Agora há uma diferença importante em comparação

06:56.370 --> 06:59.630
com a entrada do projeto para esta lista.

06:59.630 --> 07:03.220
Isso não é feito apenas com a adição da lista ao Dom.

07:03.220 --> 07:05.270
A entrada estava terminada, certo?

07:05.270 --> 07:07.130
O formulário aqui foi terminado.

07:07.130 --> 07:08.720
Tivemos todas as entradas lá.

07:08.720 --> 07:12.420
Tudo o que precisávamos fazer era criar um ouvinte para o evento.

07:12.420 --> 07:15.840
Agora, para a lista aqui, na verdade não a tivemos com

07:15.840 --> 07:16.673
um vazio.

07:16.673 --> 07:21.130
H à tecnologia, por exemplo, e eu quero acrescentar alguns textos lá.

07:21.130 --> 07:22.990
Portanto, vou acrescentar um número.

07:22.990 --> 07:26.020
Novo método para seu método privado.

07:26.020 --> 07:29.120
Renderização ou conteúdo pode ser um nome apropriado.

07:29.120 --> 07:34.120
E minha idéia aqui é preencher os espaços em branco nesse

07:34.230 --> 07:36.862
modelo com algum ano de vida.

07:36.862 --> 07:37.780
Para isso.

07:37.780 --> 07:40.040
Vamos ao método de renderização de conteúdo morto, e

07:40.040 --> 07:41.580
há um par de coisas que quero fazer.

07:41.580 --> 07:45.390
Uma coisa é a lista de mortos sem ordem, que faz parte da minha

07:45.390 --> 07:47.200
lista de projetos aqui.

07:47.200 --> 07:48.640
Quero acrescentar uma identificação a ele.

07:48.640 --> 07:50.860
É claro que você não precisa fazer isso, mas eu quero fazer

07:50.860 --> 07:53.500
isso para que, se precisarmos selecioná-lo mais tarde, possamos fazer

07:53.500 --> 07:54.390
isso com estes.

07:54.390 --> 07:58.220
Portanto, vou criar aqui uma identificação da lista que é armazenada

07:58.220 --> 08:00.190
em uma constante, e isto será um

08:00.190 --> 08:04.100
modelo literal, então será uma seqüência onde podemos injetar

08:04.100 --> 08:09.100
conteúdo dinâmico, e quero basear isto no tipo da lista de projetos ao redor, assim

08:09.370 --> 08:14.370
fora da seção ao redor, e depois adicionar a lista de projetos.

08:15.220 --> 08:19.700
Agora podemos chegar a uma lista de pedidos, que recebemos em nosso elemento,

08:19.700 --> 08:22.890
que é a seção estatutária ano, o elemento certo é a seção

08:22.890 --> 08:23.820
morta.

08:23.820 --> 08:27.360
Assim, para obter a lista não ordenada dentro dela, podemos, por

08:27.360 --> 08:30.940
exemplo, usar um seletor de consulta e procurar a primeira, e neste

08:30.940 --> 08:33.120
caso apenas a lista não ordenada.

08:33.120 --> 08:35.720
Sabemos que teremos um porque sabemos que haverá um e então podemos acrescentar

08:35.720 --> 08:38.280
aqui uma identificação, que deve ser a identificação da lista.

08:38.280 --> 08:40.280
Isso é uma coisa que eu quero fazer.

08:40.280 --> 08:44.970
Eu também quero definir o conteúdo do texto a partir dessa idade para marcar

08:44.970 --> 08:50.200
aqui e para isso podemos chegar a este elemento, selecionador de consulta.

08:50.200 --> 08:53.020
Encontre a primeira e única etiqueta HQ.

08:53.020 --> 08:56.340
Sabemos que encontraremos um, daí o ponto de exclamação

08:56.340 --> 09:01.340
para descartar casos nulos e colocar o conteúdo do texto igual a este para

09:02.940 --> 09:05.610
digitar em maiúsculas.

09:05.610 --> 09:08.130
Lembre-se de que o tipo está sempre ativo.

09:08.130 --> 09:10.060
Terminamos com dois casos de ópera.

09:10.060 --> 09:15.060
Convertemos isto em todos os projetos de bonés mais projetos, assim como um Sten.

09:16.200 --> 09:19.853
O cabeçalho é simplesmente uma seção.

09:21.970 --> 09:25.220
E agora com isso, estamos, em geral, acabados.

09:25.220 --> 09:27.580
Ainda não temos nenhum item nessa lista.

09:27.580 --> 09:30.230
Trabalharemos nisto mais tarde, mas geralmente já terminamos.

09:30.230 --> 09:35.120
Podemos chamar isso de render um conteúdo ou depois de anexá-lo

09:35.120 --> 09:37.210
ao Dom, por exemplo.

09:37.210 --> 09:39.210
Agora seria bom ver aqueles em ação.

09:39.210 --> 09:42.600
É claro que, mais uma vez, faltarão itens da lista,

09:42.600 --> 09:45.523
mas seria bom ver algo em ação aqui.

09:46.690 --> 09:49.620
Bem para isso, vamos ao fundo do arquivo onde instanciamos

09:49.620 --> 09:53.310
a entrada do projeto e lá nem sempre podemos instanciar nossas

09:53.310 --> 09:55.200
listas.

09:55.200 --> 09:59.200
Temos a lista ativa de projetos, que instanciamos, mas que chamamos

09:59.200 --> 10:01.230
de nova lista de projetos.

10:01.230 --> 10:04.220
E aí temos que passar nesse tipo de argumento, que ou

10:04.220 --> 10:06.040
está ativo ou terminado aqui.

10:06.040 --> 10:08.610
Já que estou tornando a lista ativa, é claro

10:08.610 --> 10:09.950
que passo inativo.

10:09.950 --> 10:13.140
E então aqui temos a lista de projetos terminados onde eu,

10:13.140 --> 10:15.290
naturalmente, passei por terminado.

10:15.290 --> 10:18.673
Se agora estamos seguros de que ela deve compilar sem erros.

10:19.520 --> 10:23.090
E por isso o que você deve ver se você voltar são estas

10:23.090 --> 10:27.770
duas seções vazias aqui com os títulos aqui e bem, o espaço vazio onde

10:27.770 --> 10:33.390
mais tarde os itens serão adicionados, os itens do projeto serão adicionados.

10:33.390 --> 10:37.440
Agora, por enquanto, não temos tais itens de projeto, neve.

10:37.440 --> 10:39.710
Portanto, como próximo passo,

10:39.710 --> 10:43.660
devemos trabalhar em alguma forma de garantir que

10:43.660 --> 10:48.410
ao clicarmos em adicionar projeto, criemos um novo projeto em

10:48.410 --> 10:49.420
código.

10:49.420 --> 10:53.730
Assim, uma nova estrutura de dados que representa um projeto,

10:53.730 --> 10:58.047
e que depois passamos esta informação sobre este novo projeto

10:58.047 --> 10:59.870
para o ato de projetos.

10:59.870 --> 11:03.850
Liste aqui esta seção ativa do projeto, porque cada novo

11:03.850 --> 11:06.500
projeto deve estar ativo por padrão.

11:06.500 --> 11:09.390
Este será nosso próximo objetivo e, mais uma vez, haverá

11:09.390 --> 11:12.080
muitas maneiras diferentes de implementá-lo.

11:12.080 --> 11:15.870
Faremos isso junto com uma maneira que eu inventei na próxima

11:15.870 --> 11:16.703
palestra.
