WEBVTT

00:02.200 --> 00:03.840
Instrutor: Então é assim que agora podemos

00:03.840 --> 00:06.290
gerenciar múltiplos arquivos com TypeScript.

00:06.290 --> 00:08.870
Agora, uma palavra sobre ter vários arquivos, quando

00:08.870 --> 00:11.500
você trabalha com vários arquivos como estamos fazendo

00:11.500 --> 00:15.280
aqui, você também pode importá-los um para o outro com módulos, que você deve

00:15.280 --> 00:18.180
saber a partir do baunilha JavaScript, lá nós temos módulos

00:18.180 --> 00:20.770
também, é algo que eu vou cobrir em uma seção dedicada

00:20.770 --> 00:23.830
a este curso, então por enquanto, temos apenas dois arquivos

00:23.830 --> 00:25.560
que não são importados um para o outro,

00:25.560 --> 00:27.620
mas que em vez disso são importados para o

00:27.620 --> 00:31.040
índice. html.

00:31.040 --> 00:32.990
Agora, com isso fora do caminho,

00:32.990 --> 00:35.930
sabemos que podemos administrar isto como um projeto

00:35.930 --> 00:39.060
e que podemos compilar vários arquivos aqui.

00:39.060 --> 00:41.910
Agora vamos dar uma olhada no tsconfig. json porque este é um

00:41.910 --> 00:45.660
arquivo crucial para o gerenciamento deste projeto,

00:45.660 --> 00:48.100
ele diz essencialmente ao TypeScript

00:48.100 --> 00:51.290
como ele deve compilar estes arquivos.

00:51.290 --> 00:55.260
Agora, antes de mergulharmos no compiladorOptions onde, como

00:55.260 --> 00:56.470
o nome sugere, podemos

00:56.470 --> 00:59.620
configurar como o compilador se comporta, vamos

00:59.620 --> 01:02.220
rolar até o local antes da cinta de fechamento,

01:02.220 --> 01:03.760
mas depois desta cinta de

01:03.760 --> 01:08.340
fechamento aninhada, e vamos ver algumas das opções que podemos adicionar

01:08.340 --> 01:11.910
aqui que não afetam o compilador ou o comportamento da

01:11.910 --> 01:14.190
etapa de compilação, mas sim como o

01:14.190 --> 01:18.410
compilador funciona com este projeto, porque lá, por exemplo,

01:18.410 --> 01:23.410
você pode definir uma opção de exclusão.

01:23.700 --> 01:26.770
Agora, se você adicionar excluir aqui, isso será

01:26.770 --> 01:30.450
um array, e o que você pode entrar aqui são caminhos para arquivos

01:30.450 --> 01:33.480
que não devem ser incluídos na compilação quando

01:33.480 --> 01:36.400
você executar o TSC em todo o projeto.

01:36.400 --> 01:38.010
Assim, por exemplo, aqui poderíamos dizer

01:38.010 --> 01:41.137
que queremos excluir as análises. ts da compilação, e claro, isto

01:41.137 --> 01:43.390
não faz muito sentido aqui, mas apenas para

01:43.390 --> 01:45.300
mostrar como isto funciona.

01:45.300 --> 01:49.350
Se fizermos isso e agora executarmos novamente o tsc, e eu antes de mais nada

01:49.350 --> 01:51.600
apagar a análise. js para que possamos

01:51.600 --> 01:53.730
ver se é recriado, se agora rodamos o tsc

01:53.730 --> 01:59.810
ou tsc em modo relógio, você não vê nenhuma análise.

01:59.810 --> 01:59.810
O

01:59.810 --> 02:02.060
arquivo js é criado, e a razão disso é que estamos excluindo esse arquivo.

02:02.060 --> 02:03.340
Agora, claro, para este arquivo,

02:03.340 --> 02:04.670
isto não faz muito sentido porque

02:04.670 --> 02:07.250
eu normalmente quero incluí-lo, mas se você tivesse

02:07.250 --> 02:09.360
um arquivo que por alguma razão não deveria

02:09.360 --> 02:12.440
ser compilado, você pode excluí-lo desta forma.

02:12.440 --> 02:14.210
Você também pode trabalhar com wildcards,

02:14.210 --> 02:15.810
e por exemplo, se você tivesse um arquivo

02:15.810 --> 02:20.810
que fosse chamado de analítico. dev. ts e você não quer realmente compilar

02:20.850 --> 02:22.900
isso, você poderia dizer todos os arquivos

02:22.900 --> 02:25.770
que terminam dev. ts não devem ser compilados,

02:25.770 --> 02:27.790
e você pode fazer isso adicionando também

02:27.790 --> 02:29.620
um asterisco aqui, que é basicamente

02:29.620 --> 02:31.630
um wildcard, e agora o TypeScript irá

02:31.630 --> 02:33.750
ignorar quaisquer arquivos que tenham

02:33.750 --> 02:36.470
. dev. ts inclusive.

02:36.470 --> 02:40.037
Você também poderia adicionar asterisco, asterisco, cortar

02:40.037 --> 02:43.080
aqui, e isso significaria que qualquer arquivo com esse

02:43.080 --> 02:45.770
padrão em qualquer pasta seria ignorado.

02:45.770 --> 02:47.420
Então estas são coisas que você pode

02:47.420 --> 02:49.220
configurar aqui, a única coisa que eu quero

02:49.220 --> 02:51.500
configurar aqui, e isso é uma configuração que você

02:51.500 --> 02:54.103
encontrará com freqüência, é que eu quero excluir os módulos_de_nó,

02:55.409 --> 02:58.260
e a idéia aqui é que eu não quero compilar nenhum arquivo TypeScript

02:58.260 --> 03:01.373
que eu possa ter dentro dos módulos_de_nó.

03:02.449 --> 03:05.080
Agora, o nodo_módulos é aquela pasta que contém

03:05.080 --> 03:07.160
todas as dependências que instalamos

03:07.160 --> 03:09.570
aqui em pacote. json e as dependências

03:09.570 --> 03:11.890
destas dependências, e portanto, estas são

03:11.890 --> 03:14.660
bibliotecas de terceiros que estamos importando,

03:14.660 --> 03:16.810
as quais não queremos tocar, e se alguma

03:16.810 --> 03:18.510
destas bibliotecas deve enviar

03:18.510 --> 03:20.630
algum código TypeScript, então certamente

03:20.630 --> 03:22.690
não queremos compilá-lo, ele apenas

03:22.690 --> 03:25.840
retardará nosso processo de compilação, e na pior das hipóteses,

03:25.840 --> 03:29.200
pode até quebrar nosso projeto.

03:29.200 --> 03:30.370
Portanto, é bastante

03:30.370 --> 03:33.330
comum excluir os módulos_de_nó aqui, embora eu diga, se

03:33.330 --> 03:36.510
você não especificar a opção de exclusão, os módulos_de_nó

03:36.510 --> 03:41.420
são automaticamente excluídos como uma configuração padrão, então você não precisa realmente

03:41.420 --> 03:43.980
adicionar esta opção aqui, esta seria a configuração

03:43.980 --> 03:48.520
padrão, eu só quero mostrar que a exclusão existe e como você poderia usá-la se a única

03:48.520 --> 03:50.570
coisa que você quer excluir são os módulos_de_nó,

03:50.570 --> 03:53.404
você não precisa adicionar a chave de exclusão de forma

03:53.404 --> 03:55.670
alguma.

03:55.670 --> 03:58.500
No entanto, se você adicioná-lo, você deve definir módulos_de_nó

03:58.500 --> 04:01.400
porque, caso contrário, isso não será excluído.

04:01.400 --> 04:04.570
Agora, além de excluir, nós também incluímos, e incluímos

04:04.570 --> 04:06.630
permite que você faça o contrário, permite

04:06.630 --> 04:09.570
que você diga especificamente ao TypeScript quais arquivos

04:09.570 --> 04:12.730
você quer incluir no processo de compilação, e qualquer coisa

04:12.730 --> 04:16.380
que não esteja listada aqui não será compilada, portanto, se eu apontar

04:16.380 --> 04:20.620
para o app. ts aqui, você vai ver se eu redireciono o tsc, também não

04:20.620 --> 04:25.570
receberemos nenhuma análise. ts, ou nenhuma analítica.

04:25.570 --> 04:25.570
js arquivo eu deveria dizer.

04:25.570 --> 04:26.403
Por quê?

04:26.403 --> 04:29.230
Porque a análise. js não está incluído no include,

04:29.230 --> 04:32.370
e como eu disse, se definirmos a chave do include, então realmente

04:32.370 --> 04:33.970
temos que incluir tudo o que queremos

04:33.970 --> 04:35.810
compilar.

04:35.810 --> 04:40.080
Portanto, é claro que aqui também poderíamos acrescentar análises. ts aqui, e com esse acréscimo,

04:40.080 --> 04:43.950
começaríamos a compilá-lo, como você vê agora, temos

04:43.950 --> 04:46.740
a analítica. js, ou como alternativa,

04:46.740 --> 04:49.650
especificamos aqui uma pasta inteira que normalmente

04:49.650 --> 04:52.560
contém os arquivos que queremos compilar.

04:52.560 --> 04:55.520
Excluir, a propósito, se definido ao longo do

04:55.520 --> 04:57.160
include incluirá, então

04:57.160 --> 05:00.290
se excluirmos alguma subpasta de uma pasta que

05:00.290 --> 05:01.740
faz parte do include,

05:01.740 --> 05:04.980
então essa subpasta excluída será excluída, então

05:04.980 --> 05:08.720
basicamente compilamos incluir menos excluir.

05:08.720 --> 05:10.420
Agora, claro, aqui não quero definir incluir,

05:10.420 --> 05:12.520
quero compilar todos os arquivos TypeScript e,

05:12.520 --> 05:15.050
portanto, não tenho que me preocupar com isso, excluindo

05:15.050 --> 05:17.200
os módulos_nodo é tudo o que preciso, e como expliquei,

05:17.200 --> 05:20.280
teoricamente não preciso nem mesmo acrescentar isso porque isso seria

05:20.280 --> 05:22.423
excluído por padrão.

05:23.260 --> 05:25.310
Agora você também tem uma opção de arquivos,

05:25.310 --> 05:27.560
isto permite que você aponte para os arquivos

05:27.560 --> 05:30.870
individuais, então é um pouco como incluir com a diferença de que aqui

05:30.870 --> 05:34.200
você não pode especificar pastas inteiras que você quer incluir, em

05:34.200 --> 05:36.020
vez disso você realmente apenas especifica

05:36.020 --> 05:38.220
os arquivos individuais que você quer compilar,

05:38.220 --> 05:40.710
que pode ser uma opção para projetos menores onde você

05:40.710 --> 05:43.660
sabe que só trabalhará com arquivos gratuitos, e por alguma

05:43.660 --> 05:46.770
razão você tem um par de outros arquivos TypeScript que você não

05:46.770 --> 05:48.560
quer tocar, então você pode definir a

05:48.560 --> 05:51.340
lista de arquivos como esta.

05:51.340 --> 05:53.360
Na realidade, talvez você não precise

05:53.360 --> 05:55.740
desse ajuste com tanta freqüência.

05:55.740 --> 05:58.530
E, portanto, é isso com as opções básicas de compilação

05:58.530 --> 06:00.910
ou gerenciamento de projetos aqui.

06:00.910 --> 06:03.900
Agora, é claro, há muito mais que podemos especificar,

06:03.900 --> 06:08.230
muito mais que podemos especificar sobre o compilador em si e como ele se comporta

06:08.230 --> 06:10.793
durante a etapa de compilação.
