WEBVTT

00:02.170 --> 00:03.290
Giảng viên: Bây giờ

00:03.290 --> 00:05.580
người ta nói nhiều về giao diện và lớp.

00:05.580 --> 00:07.390
Bây giờ, chúng ta hãy tìm

00:07.390 --> 00:11.650
hiểu sâu hơn và xem JavaScript thực sự tạo ra hoặc cung

00:11.650 --> 00:15.290
cấp những gì thay thế cho giao diện.

00:15.290 --> 00:17.450
Chúng tôi đã học được rằng đối với mã lớp, cuối

00:17.450 --> 00:20.560
cùng nó phụ thuộc vào phiên bản mà chúng tôi đang biên dịch.

00:20.560 --> 00:24.280
Nếu bạn biên dịch cho es6 ở đây trong xung đột ts, thì đầu

00:24.280 --> 00:27.160
ra của chúng tôi sẽ sử dụng từ khóa lớp.

00:27.160 --> 00:29.330
Vì chúng tôi đã biên dịch cho es5 ở đây, thay vào

00:29.330 --> 00:31.880
đó, chúng tôi thấy cách giải quyết này bằng cách sử dụng

00:31.880 --> 00:33.420
cấu trúc hoặc hàm cuối cùng.

00:33.420 --> 00:36.670
Tuy nhiên, điều gì xảy ra với các giao diện?

00:36.670 --> 00:38.720
Vâng, chúng ta hãy xem ứng dụng. tập tin js.

00:38.720 --> 00:41.780
Và ở đó bạn không thấy gì cả.

00:41.780 --> 00:46.360
Bạn sẽ không thấy bất kỳ bản dịch nào cho các giao diện của chúng tôi.

00:46.360 --> 00:49.410
AddFn, Được đặt tên, Có thể chào hỏi.

00:49.410 --> 00:52.970
Bạn không tìm thấy những thứ này ở bất cứ đâu trong ứng dụng. js.

00:52.970 --> 00:55.440
Bạn chỉ cần tìm hàm của chúng tôi ở

00:55.440 --> 00:59.180
đây, bạn tìm hàm tạo của chúng tôi cho đối tượng người,

00:59.180 --> 01:02.320
vì vậy về cơ bản, bản dịch đó cho lớp người và

01:02.320 --> 01:03.500
mã khác.

01:03.500 --> 01:06.680
Bạn không tìm thấy tài liệu tham khảo tại bất kỳ giao diện nào.

01:06.680 --> 01:08.240
Và có một lý do tốt cho điều đó.

01:08.240 --> 01:11.350
Không có bản dịch cho các giao diện.

01:11.350 --> 01:13.650
JavaScript không biết về tính năng này.

01:13.650 --> 01:15.550
Đó là một tính năng TypeScript thuần

01:15.550 --> 01:18.830
túy, chỉ khả dụng trong quá trình phát triển và biên dịch.

01:18.830 --> 01:21.640
Vì vậy, bạn có thể sử dụng nó để cải thiện mã của mình.

01:21.640 --> 01:23.970
Tuy nhiên, không có đầu ra nào cho điều đó

01:23.970 --> 01:26.010
sẽ kết thúc trong các tệp JavaScript

01:26.010 --> 01:28.390
của bạn, do đó, đây là một tính năng phát triển

01:28.390 --> 01:30.700
thuần túy giúp bạn viết mã tốt hơn, mã có

01:30.700 --> 01:34.100
cấu trúc rõ ràng tuân theo các quy tắc rõ ràng.

01:34.100 --> 01:38.720
Khi chạy, sẽ không có dấu vết nào của các giao diện này.

01:38.720 --> 01:41.760
Bạn sẽ không thấy bất kỳ thứ gì liên quan đến giao diện

01:41.760 --> 01:44.710
trong mã của mình, chỉ có các hàm, lớp và tất cả các

01:44.710 --> 01:47.130
mã khác được biên dịch ở đầu ra.

01:47.130 --> 01:50.020
Bạn có thể nói rằng các giao diện chỉ đơn giản là bị đổ.

01:50.020 --> 01:53.170
Chúng được sử dụng trong quá trình biên dịch để kiểm tra mã của bạn và

01:53.170 --> 01:54.340
sau đó chúng bị bỏ qua.

01:54.340 --> 01:56.690
Không có gì có thể là đầu ra cho họ.
