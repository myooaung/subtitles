WEBVTT

00:02.150 --> 00:03.360
Instruktor: Teraz wewnątrz

00:03.360 --> 00:06.310
interfejsu możesz również dodać modyfikator tylko do odczytu.

00:06.310 --> 00:10.780
Nie możesz dodać publicznego lub prywatnego ani niczego takiego.

00:10.780 --> 00:13.300
Nie jest to możliwe na interfejsie, ale możesz

00:13.300 --> 00:15.610
dodać read-only, aby jasno określić,

00:15.610 --> 00:19.470
że ta właściwość w dowolnym obiekcie, który zbudowałeś w oparciu

00:19.470 --> 00:22.710
o ten interfejs, musi być ustawiona tylko raz i jest tylko

00:22.710 --> 00:26.030
do odczytu po tym, aby nie można było jej zmienić po inicjalizacji

00:26.030 --> 00:28.440
obiektu.

00:28.440 --> 00:31.893
Jest to również coś, jeśli używamy typu zamiast, który można użyć

00:33.220 --> 00:36.180
na typie, jeśli chcesz chociaż, więc ponownie, te dwie rzeczy

00:36.180 --> 00:38.800
są bardzo podobne tutaj, ale to jest bardziej powszechne

00:38.800 --> 00:41.510
lub widziane częściej, że jeśli naprawdę chcesz pracować

00:41.510 --> 00:43.790
z obiektem, używasz interfejsu do tego, i tylko

00:43.790 --> 00:45.730
do odczytu jest tylko jedną inną rzeczą,

00:45.730 --> 00:48.620
którą możesz dodać tam jako dodatkową funkcję, którą możesz

00:48.620 --> 00:51.400
ustawić.

00:51.400 --> 00:53.320
Z dodanym tutaj read-only, przy

00:53.320 --> 00:56.100
okazji widać, że nie dodałem go tutaj w klasie.

00:56.100 --> 00:58.170
Nie dodałem tutaj read-only i nadal

00:58.170 --> 01:00.560
jeśli teraz przejdę do użytkownika one i spróbuję

01:00.560 --> 01:03.460
ustawić name na coś innego, dostanę tutaj błąd już

01:03.460 --> 01:04.740
dlatego, że jest to read-only

01:04.740 --> 01:06.120
i oczywiście dostanę również

01:06.120 --> 01:10.140
to, jeśli zapiszę to i spróbuje to skompilować, więc interfejs naprawdę

01:10.140 --> 01:12.640
ma tutaj wpływ, gdy tylko zaimplementujemy

01:12.640 --> 01:14.880
go do naszej klasy, nawet jeśli nie dodałem

01:14.880 --> 01:16.910
tutaj read-only, klasa wie, że implementuje

01:16.910 --> 01:19.650
readable i automatycznie zakłada, że właściwość

01:19.650 --> 01:27.430
name, którą mamy tutaj, którą musimy mieć ze względu na interfejs, jest read-only, ponieważ to jest to, co ustawiliśmy wewnątrz interfejsu,

01:27.430 --> 01:32.973
a to oczywiście również jest dość wygodne.
