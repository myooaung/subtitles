WEBVTT

00:02.200 --> 00:03.970
Eğitmen: Şimdi bu modül için bu kadar.

00:03.970 --> 00:06.080
Açıkçası modern JavaScript'in birkaç başka

00:06.080 --> 00:07.790
güzel özelliği de vardır.

00:07.790 --> 00:09.810
Örneğin, sınıf modülünde sınıfları

00:09.810 --> 00:11.120
ele alacağım ve genel olarak

00:11.120 --> 00:13.470
bu bir JavaScript kursu değil.

00:13.470 --> 00:16.540
TypeScript ile gerçekten ilgisi olmayan tonlarca

00:16.540 --> 00:20.140
JavaScript bilgisi ile sizi sıkmak istemiyorum.

00:20.140 --> 00:22.700
Bu belirli özelliklerden bahsetmek istedim çünkü

00:22.700 --> 00:24.650
TypeScript'in bu özellikleri eski

00:24.650 --> 00:28.210
tarayıcılarda da çalışacak şekilde kullanmamıza yardımcı olduğunu

00:28.210 --> 00:29.580
bilmek güzel.

00:29.580 --> 00:32.920
Çünkü bu asla unutmamanız gereken bir şeydir.

00:32.920 --> 00:35.600
Kodunuz derlenir.

00:35.600 --> 00:38.690
Şu anda, ES6'ya ayarlanmış bir hedefim var ve bu nedenle

00:38.690 --> 00:41.540
dist klasörünü kontrol edersek, sabitlerin

00:41.540 --> 00:44.280
hepsinin uygulama JS dosyasında da mevcut

00:44.280 --> 00:46.030
olduğunu görürüz.

00:46.030 --> 00:48.070
Object de structuring, orada bunu

00:48.070 --> 00:50.600
sevmenin bir yolu var çünkü tüm bu özellikler

00:50.600 --> 00:52.480
ES6'da destekleniyor.

00:52.480 --> 00:55.230
Eğer hedefi ES5 olarak ayarlarsam ve şimdi lib'i yorumlayarak

00:55.230 --> 00:56.590
ES5 hedefi için doğru lib'lerin

00:56.590 --> 00:58.680
içe aktarılmasını sağlarsam, ki bu varsayılan

00:58.680 --> 01:00.930
olarak gerçekleşecektir, üretilen kodun

01:00.930 --> 01:05.290
artık oldukça farklı göründüğünü göreceksiniz.

01:05.290 --> 01:08.140
Çok daha uzun çünkü artık var kullanıyoruz ve TypeScript,

01:08.140 --> 01:09.810
ES5 JavaScript'te desteklenmeyen

01:09.810 --> 01:12.960
belirli sözdizimleri için çözüm yolları bulmak zorunda

01:12.960 --> 01:14.730
kaldı.

01:14.730 --> 01:18.240
Örneğin, de yapılandırma sözdizimi kaldırılmıştır.

01:18.240 --> 01:21.140
Yani bu her zaman akılda tutulması gereken önemli bir şeydir.

01:21.140 --> 01:23.490
TypeScript, kodunuzu yalnızca TypeScript

01:23.490 --> 01:26.440
özelliklerinden normal JavaScript'e değil,

01:26.440 --> 01:29.210
TypeScript'e bunu yapmasını söylerseniz

01:29.210 --> 01:33.000
modern JavaScript'ten eski JavaScript'e kadar hepsini

01:33.000 --> 01:35.433
derler.
