WEBVTT

00:02.400 --> 00:04.390
Instruktur: Jadi kita telah merender form

00:04.390 --> 00:07.240
pertama kita, tetapi yang akan Anda perhatikan adalah styling-nya

00:07.240 --> 00:09.200
sedikit melenceng, maksud saya formnya

00:09.200 --> 00:11.910
terlihat oke, tetapi ada jarak antara tepi layar kita dan

00:11.910 --> 00:13.870
formnya akan lebih baik.

00:13.870 --> 00:15.830
Jika Anda menyelami aplikasi. file css Anda sebenarnya

00:15.830 --> 00:18.360
akan mendeteksi bahwa di sana kita memiliki

00:18.360 --> 00:21.050
selektor ID input pengguna.

00:21.050 --> 00:23.330
Seandainya kita menambahkan beberapa margin padding, itu tidak

00:23.330 --> 00:25.630
terdengar terlalu buruk, jadi sebenarnya yang bisa kita lakukan

00:25.630 --> 00:28.060
adalah sebuah aplikasi. ts ketika kita membuat

00:28.060 --> 00:31.740
elemen kita di sini atau ketika kita mendapatkan akses ke sana.

00:31.740 --> 00:34.520
Kita dapat menjangkau elemen dan menambahkan ID di

00:34.520 --> 00:36.840
sini yang akan menjadi input pengguna.

00:36.840 --> 00:39.740
Ini akan memastikan bahwa elemen yang dirender memiliki ID ini

00:39.740 --> 00:42.800
sehingga jika dimuat ulang, tampilannya akan jauh lebih bagus.

00:42.800 --> 00:45.100
Jika kita memeriksa ini di kedalaman browser,

00:45.100 --> 00:49.320
kita melihat ID di sini dan itulah alasan untuk gaya yang lebih baik ini.

00:49.320 --> 00:51.940
Dengan itu kita sudah melakukan langkah berikutnya,

00:51.940 --> 00:54.010
kita berinteraksi dengan elemen.

00:54.010 --> 00:56.980
Sekarang ini bukan satu-satunya interaksi yang ingin saya lakukan.

00:56.980 --> 00:58.770
Karena kita memiliki formulir di sini,

00:58.770 --> 01:01.870
saya ingin mendapatkan akses ke berbagai input formulir yang

01:01.870 --> 01:05.910
kita miliki di sini sehingga kita dapat membaca nilai ketika formulir dikirimkan,

01:05.910 --> 01:08.800
dan bahwa kita juga kemudian mengatur pendengar acara di

01:08.800 --> 01:12.160
sini untuk pengiriman, dan memvalidasi input pengguna.

01:12.160 --> 01:15.720
Jadi kita perlu akses ke tombol atau ke formulir secara keseluruhan

01:15.720 --> 01:19.180
untuk mendengarkan submission dan ke semua elemen input untuk mendapatkan

01:19.180 --> 01:21.273
nilai terbaru dari sana.

01:22.360 --> 01:25.440
Untuk itu di sini, sebelum kita melampirkan semuanya,

01:25.440 --> 01:28.500
tetapi setelah saya menetapkan ID saya ke elemen di

01:28.500 --> 01:32.210
sini, saya ingin mendapatkan akses ke input yang berbeda di elemen

01:32.210 --> 01:35.980
itu dalam formulir itu, dan saya ingin menyimpannya sebagai properti

01:35.980 --> 01:39.820
kelas ini, jadi saya akan menambahkan lebih banyak bidang di sana

01:39.820 --> 01:44.570
dan bidang pertama bisa menjadi bidang titleInputElement.

01:44.570 --> 01:47.167
Jenisnya akan menjadi HTMLInputElement tulis ini,

01:48.060 --> 01:50.410
dan kita tidak hanya akan membutuhkannya begitu

01:50.410 --> 01:52.770
kita membutuhkan dua bidang serupa lainnya.

01:52.770 --> 01:55.900
Kita sebuah field descriptionInputElement yang

01:55.900 --> 01:57.550
bertipe HTMLInputElement,

01:58.520 --> 02:02.730
dan kita juga membutuhkan field peopleInputElement.

02:02.730 --> 02:06.240
Sekarang kita dapat mengisi bidang-bidang ini di sini di konstruktor, dengan

02:06.240 --> 02:11.510
titleInputElement yang disetel sama dengan ini.

02:11.510 --> 02:11.510
elemen,

02:11.510 --> 02:13.120
jadi untuk elemen formulir

02:13.120 --> 02:16.390
kita, selalu ingat bahwa itu adalah elemen formulir

02:16.390 --> 02:21.350
di sini, selektor kueri dan kemudian kueri untuk elemen judul.

02:21.350 --> 02:25.000
Dan jika Anda kembali melihat indeks. html yang kita lihat di sana

02:25.000 --> 02:28.410
kita mendapatkan judul ID pada elemen ini sehingga

02:28.410 --> 02:30.420
kita dapat melakukan query untuk

02:30.420 --> 02:33.323
itu, jadi di app. ts di sini dalam selektor

02:33.323 --> 02:37.210
kueri kita dapat menggunakan #title untuk memilih elemen ID judul

02:37.210 --> 02:39.750
dan menyimpannya di titleInputElement.

02:39.750 --> 02:44.070
Sekarang seperti yang Anda ketahui seperti halnya dengan dokumen get element by

02:44.070 --> 02:46.230
ID, typescript tidak memiliki kesempatan

02:46.230 --> 02:49.090
untuk memahami bahwa selektor kueri akan mengembalikan

02:49.090 --> 02:50.650
elemen input di sini.

02:50.650 --> 02:53.780
Jadi untuk memberi tahu typescript, saya akan kembali menggunakan

02:53.780 --> 02:56.020
casting, dan meng-cast ini ke elemen input, dan

02:56.020 --> 02:58.270
kemudian kita dapat mengulangi langkah ini dua

02:58.270 --> 03:00.672
kali, dan juga menandatangani descriptionInputElement,

03:00.672 --> 03:03.240
dan peopleInputElement.

03:03.240 --> 03:06.600
Cari ID yang sesuai dalam indeks. html, yang secara mengejutkan,

03:06.600 --> 03:10.390
saya kira, deskripsi dan orang, dan menambahkannya

03:10.390 --> 03:12.190
ke typescript.

03:12.190 --> 03:16.120
Jadi di sini kita mencari elemen ID deskripsi, dan

03:16.120 --> 03:17.720
di sini untuk orang.

03:17.720 --> 03:19.510
Dan dengan itu kita mendapat

03:19.510 --> 03:22.687
akses ke semua elemen ini di dalam kelas kita di sini,

03:22.687 --> 03:26.593
atau di dalam setiap objek yang dibuat berdasarkan kelas.

03:27.600 --> 03:29.870
Sekarang kita hanya perlu menambahkan

03:29.870 --> 03:33.330
pendengar ke elemen kita, ke form kita.

03:33.330 --> 03:38.330
Untuk itu saya akan menambahkan metode privat lain configure, yang tidak perlu Anda

03:38.440 --> 03:39.790
tambahkan, tetapi sekali

03:39.790 --> 03:43.130
lagi saya ingin menjaga pemisahan di mana pada dasarnya

03:43.130 --> 03:47.900
kita melakukan pemilihan dan pengaturan kasar di konstruktor.

03:47.900 --> 03:49.340
Dan kemudian penyisipan

03:49.340 --> 03:52.210
atau penyetelan halus dalam metode terpisah.

03:52.210 --> 03:53.900
Dan dalam metode configure, ide

03:53.900 --> 03:57.000
saya adalah untuk mengatur event listener, jadi di sini kita

03:57.000 --> 03:58.970
bisa menjangkau elemen ini yang merupakan

03:58.970 --> 04:01.830
form dan menambahkan event listener.

04:01.830 --> 04:04.570
Sekarang karena typescript tahu bahwa elemen itu adalah

04:04.570 --> 04:08.580
elemen formulir HTML, itu sebenarnya menawarkan kita pelengkapan otomatis ketika

04:08.580 --> 04:10.770
kita ingin mendengarkan acara kirim di sini

04:10.770 --> 04:12.250
yang sangat bagus.

04:12.250 --> 04:15.520
Sekarang kita hanya perlu mengikat ini ke sebuah metode dan

04:15.520 --> 04:17.840
untuk itu saya akan menambahkan metode privat

04:17.840 --> 04:20.650
lain, privat karena saya tidak akan pernah mengakses

04:20.650 --> 04:23.460
ini dari luar kelas, hanya dari dalam.

04:23.460 --> 04:26.970
Yang akan saya beri nama submitHandler, nama itu sepenuhnya terserah Anda.

04:26.970 --> 04:29.740
Ini harus menjadi metode yang menerima objek peristiwa,

04:29.740 --> 04:32.750
karena kita akan mengikatnya ke pendengar peristiwa ini.

04:32.750 --> 04:34.880
Jadi di sini kita bisa menunjuk pada ini...

04:36.460 --> 04:38.713
kirimkan penanganannya.

04:40.180 --> 04:42.080
Sekarang kita sesuaikan untuk memastikan

04:42.992 --> 04:45.040
bahwa sebelum kita melampirkan semua panggilan

04:45.040 --> 04:46.730
mengkonfigurasi dan mengeksekusi

04:46.730 --> 04:49.330
metode privat ini, lagi-lagi privat sehingga dari

04:49.330 --> 04:50.500
dalam kelas kita tentu saja

04:50.500 --> 04:53.660
dapat mencapainya, dari luar Anda akan mendapatkan kesalahan

04:53.660 --> 04:56.000
typescript, jadi sekarang metode ini harus memicu

04:56.000 --> 04:59.290
setiap kali formulir dikirimkan.

04:59.290 --> 05:02.010
Di submit handler, saya ingin mendapatkan akses

05:02.010 --> 05:05.520
ke berbagai nilai input saya di sini, dan memvalidasinya,

05:05.520 --> 05:07.710
dan kemudian tentu saja melakukan sesuatu

05:07.710 --> 05:10.310
dengan input tersebut.

05:10.310 --> 05:12.700
Sekarang kita akan mengkhawatirkan tentang bagian melakukan

05:12.700 --> 05:15.480
sesuatu nanti, untuk saat ini mari kita dapatkan akses ke mereka.

05:15.480 --> 05:18.430
Untuk hal ini pertama-tama saya akan menyebut event. preventDefault untuk mencegah

05:18.430 --> 05:20.620
pengiriman formulir default, yang akan

05:20.620 --> 05:23.890
memicu permintaan HTTP untuk dikirim yang tidak saya inginkan

05:23.890 --> 05:25.820
di sini, dan kemudian hanya untuk

05:25.820 --> 05:28.270
melihat di mana ini berfungsi, mari kita cetak

05:28.270 --> 05:32.730
konsol. log nilai elemen judul ini, untuk

05:32.730 --> 05:36.250
mencetak apa yang saat ini ada di elemen input judul.

05:36.250 --> 05:39.010
Jika kita menyimpannya, Anda melihatnya terkompilasi tanpa kesalahan,

05:39.010 --> 05:40.560
jadi itu terlihat bagus.

05:40.560 --> 05:44.670
Dan jika kita sekarang pergi ke konsol di sini dan memasukkan "Hello! dan klik add project, bagusnya adalah bahwa itu tidak dikirimkan,

05:44.670 --> 05:49.440
buruknya adalah kita mendapatkan kesalahan, "Tidak dapat membaca properti

05:49.440 --> 05:51.657
'nilai' yang tidak terdefinisi. Sekarang apa yang salah di sini?

05:51.657 --> 05:54.620
Masalahnya di sini adalah, ini di sini, bahwa kata kunci ini di submitHandler

05:54.620 --> 05:56.173
tidak menunjuk pada kelas sebenarnya.

05:57.730 --> 06:02.230
Mengapa?

06:02.230 --> 06:06.420
Nah karena cara kerja JavaScript dan typescript, kita mengikat metode

06:06.420 --> 06:07.760
di sini ke pendengar acara

06:07.760 --> 06:11.770
dan ketika kita mengikat sesuatu ke suatu acara atau dengan bantuan

06:11.770 --> 06:14.680
pendengar acara maka itu adalah sesuatu sehingga

06:14.680 --> 06:17.480
metode itu, yang akan dieksekusi, akan memiliki

06:17.480 --> 06:19.740
ini terikat pada sesuatu yang lain,

06:19.740 --> 06:24.210
dalam hal ini ke target acara saat ini.

06:24.210 --> 06:27.270
Jadi, akhir dari metode ini tidak akan

06:27.270 --> 06:31.060
menunjuk pada kelas, ketika metode ini dipicu pada

06:31.060 --> 06:35.130
suatu peristiwa dengan pendengar peristiwa.

06:35.130 --> 06:38.150
Sekarang pekerjaan di sekitar atau solusinya adalah

06:38.150 --> 06:40.360
untuk benar-benar memanggil bind di sini

06:40.360 --> 06:43.980
pada submitHandler untuk mengkonfigurasi sebelumnya bagaimana

06:43.980 --> 06:46.949
fungsi ini akan dieksekusi ketika dieksekusi di masa

06:46.949 --> 06:51.070
depan, dan argumen pertama yang dapat kita berikan ke bind sebenarnya adalah

06:51.070 --> 06:52.880
apa yang akan dirujuk oleh kata kunci

06:52.880 --> 06:56.450
ini di dalam fungsi yang akan dieksekusi.

06:56.450 --> 06:59.760
Dan di sini saya mengoper ini yang berarti, ini di dalam

06:59.760 --> 07:02.920
submitHandler akan merujuk ke hal yang sama seperti

07:02.920 --> 07:05.750
yang dirujuk oleh ini dalam konteks ini.

07:05.750 --> 07:10.030
Dan karena kita memanggilnya dalam konteks configure di sini, yang kita

07:10.030 --> 07:13.660
panggil dengan configure ini, ini berakhir dari configure

07:13.660 --> 07:17.500
akan merujuk ke kelas, dan terima kasih untuk mengikat, itu akan

07:17.500 --> 07:19.880
ada di sana untuk semua, juga merujuk ke

07:19.880 --> 07:22.870
kelas berakhir dari submitHandler.

07:22.870 --> 07:24.830
Jadi, jika Anda sekarang

07:24.830 --> 07:28.890
menyimpan ini di sini, dan kita memuat ulang, dan

07:28.890 --> 07:30.743
memasukkan "Hello! " di sini, Anda sekarang melihat

07:32.840 --> 07:33.673
"Hello! " akan dicetak di sini ketika

07:33.673 --> 07:35.600
kita mengirimkan formulir.

07:35.600 --> 07:37.510
Jadi, sekarang hal ini sudah terpecahkan

07:37.510 --> 07:38.770
dan sekarang kita menangani hal ini dengan benar.

07:38.770 --> 07:40.210
Tetapi mungkin ada cara yang

07:40.210 --> 07:43.650
lebih baik, atau cara alternatif yang telah kita semua pelajari.

07:43.650 --> 07:46.330
Mungkin ada yang menggunakan dekorator, jadi

07:46.330 --> 07:49.430
inilah kesempatan Anda untuk kembali berhenti sejenak

07:49.430 --> 07:51.970
dan mencoba menyelesaikan pengikatan ini

07:51.970 --> 07:54.300
dengan dekorator, karena itu sesuatu

07:54.300 --> 07:57.900
yang kita pelajari di bagian dekorator.
