WEBVTT

00:02.110 --> 00:03.890
المدرب: الآن ، بعد كل هذه الميزات

00:03.890 --> 00:07.820
حيث عملنا مع الأنواع نفسها ، إذا جاز التعبير ، حيث عملنا على

00:07.820 --> 00:10.340
التحقق من الأنواع وأنواع التكلفة ، دعنا

00:10.340 --> 00:13.880
نعود إلى الميزات التي تساعدنا في ركوب التعليمات البرمجية

00:13.880 --> 00:16.110
المرنة.

00:16.110 --> 00:17.930
بالطبع ، ما زلت أكتب النوعين.

00:17.930 --> 00:20.150
إنه مطبوع بعد كل شيء ، لكنه لا يركز

00:20.150 --> 00:23.520
كثيرًا على الأنواع فقط ، والآن يمكننا إدارتها.

00:23.520 --> 00:25.830
ولهذا ، أريد أن أبدأ بأنواع الفهرس

00:25.830 --> 00:29.040
، وهي ميزة تسمح لنا بإنشاء كائنات أكثر مرونة

00:29.040 --> 00:31.150
فيما يتعلق بالخصائص التي قد

00:31.150 --> 00:33.010
تحتويها.

00:33.010 --> 00:34.485
الآن ماذا أعني بذلك؟

00:34.485 --> 00:36.813
لنفترض أنك تكتب تطبيقًا حيث تقوم

00:36.813 --> 00:39.680
بالتحقق من بعض مدخلات المستخدم.

00:39.680 --> 00:41.810
لذلك لديك عدة حقول إدخال واعتمادًا

00:41.810 --> 00:44.603
على ما يدخله المستخدم هناك والحقل الذي

00:44.603 --> 00:46.682
هو عليه ، قد ترغب في تخزين رسائل

00:46.682 --> 00:50.490
خطأ مختلفة وعرضها في النهاية.

00:50.490 --> 00:52.520
على سبيل المثال ، إذا كان حقل بريد إلكتروني

00:52.520 --> 00:54.360
، فأنت تريد التحقق من الشخص الموجود

00:54.360 --> 00:55.590
في البريد الإلكتروني ،

00:55.590 --> 00:59.830
وإذا لم يكن كذلك ، فأنت تريد إضافة رسالة خطأ مناسبة إلى حاوية الخطأ.

00:59.830 --> 01:01.133
هذا ما سأبدأ به.

01:01.133 --> 01:06.133
سيكون لدي حاوية خطأ الواجهة الخاصة بي هنا.

01:07.570 --> 01:09.530
ويجب أن يكون هذا كائنًا ، ومن

01:09.530 --> 01:11.400
ثم أستخدم واجهة هنا ، ولكن يجب

01:11.400 --> 01:14.090
أن تكون مرنة فيما يتعلق بما تحتويه.

01:14.090 --> 01:15.680
في نهاية المطاف ، هدفي هو أنه

01:15.680 --> 01:17.692
يمكننا من خلال ذلك معالجة الكائنات

01:17.692 --> 01:20.782
حيث لدينا بعض معرفات الخطأ ، والتي يمكن أن تكون مثالية

01:20.782 --> 01:23.700
إذا كان حقل الإدخال الذي ينتمي إليه الخطأ.

01:23.700 --> 01:26.581
على سبيل المثال ، البريد الإلكتروني. ثم هناك سلسلة خطأ ، وليس

01:26.581 --> 01:31.581
بريدًا إلكترونيًا صالحًا. ومن ثم لدينا خاصية أخرى.

01:32.130 --> 01:35.610
دعنا نقول اسم المستخدم ثم سلسلة خطأ

01:35.610 --> 01:37.150
قد تخزن حقل الإدخال

01:37.150 --> 01:39.280
هذا إذا كان حقل الإدخال

01:39.280 --> 01:41.611
غير صحيح.

01:41.611 --> 01:45.770
يجب أن تبدأ بشخصية.

01:45.770 --> 01:49.170
يجب تخزين شيء من هذا القبيل في هذا الكائن.

01:49.170 --> 01:51.992
المشكلة في ذلك هي أنني لا أعرف مسبقًا

01:51.992 --> 01:55.320
أسماء العقارات التي سنضعها هناك.

01:55.320 --> 01:58.021
يمكنك القول ، حسنًا ، سيكون لدينا بريد إلكتروني واسم

01:58.021 --> 02:01.650
مستخدم ، ولكن بالنسبة لأحدهما ، أريد أن يكون هذا حاوية مرنة.

02:01.650 --> 02:03.150
أريد أن أكون قادرًا على استخدامه

02:03.150 --> 02:05.350
في أي نموذج لدي في صفحة الويب الخاصة بي.

02:05.350 --> 02:07.560
وقد يكون لدي أشكال مختلفة بمدخلات

02:07.560 --> 02:10.157
مختلفة بمعرفات مختلفة.

02:10.157 --> 02:12.741
لذلك لا أريد أن أقصر نفسي على أخطاء

02:12.741 --> 02:16.150
البريد الإلكتروني واسم المستخدم فقط.

02:16.150 --> 02:18.461
بالإضافة إلى ذلك ، حتى لو كان لدينا دائمًا

02:18.461 --> 02:20.859
مدخلات البريد الإلكتروني واسم المستخدم

02:20.859 --> 02:23.291
فقط ونريد فقط تخزين الأخطاء لهؤلاء.

02:23.291 --> 02:27.461
ماذا نفعل إذا كان البريد الإلكتروني غير صالح وليس اسم المستخدم؟

02:27.461 --> 02:30.912
ثم بالطبع في هذا الكائن يمكننا تخزين قيمة خالية

02:30.912 --> 02:34.421
كقيمة لاسم مستخدم ، لكني أود حذفها فقط.

02:34.421 --> 02:37.232
فهل لدينا كائن يحتفظ فقط بخصائص

02:37.232 --> 02:40.419
المدخلات حيث يوجد خطأ؟

02:40.419 --> 02:42.960
لذلك يمكننا أيضًا إجراء حلقة خلال هذا

02:42.960 --> 02:46.260
الكائن باستخدام حلقة أربعة لقراءة جميع الأخطاء التي

02:46.260 --> 02:48.200
حصلنا عليها على سبيل المثال وليس

02:48.200 --> 02:51.112
لدينا أي خصائص لا تخزن خطأ بالفعل.

02:51.112 --> 02:53.261
قصة طويلة جدًا ، أحتاج إلى كائن

02:53.261 --> 02:56.861
حيث أكون واضحًا تمامًا فيما يتعلق بنوع القيمة.

02:56.861 --> 03:00.260
يجب أن تكون سلسلة ، ولكن في حالة عدم تقدمي في

03:00.260 --> 03:02.190
عدد الخصائص التي سأمتلكها

03:02.190 --> 03:05.320
والاسم الذي ستحمله هذه الخصائص.

03:05.320 --> 03:08.171
ولمثل هذا السيناريو يمكننا استخدام أنواع الفهارس.

03:08.171 --> 03:10.760
يمكنك تحديد نوع الفهرس باستخدام الأقواس المربعة هنا.

03:10.760 --> 03:14.730
تذكر أننا عادة نكتب اسم خاصية هنا ، لكننا نستخدم الآن

03:14.730 --> 03:16.280
الأقواس المربعة.

03:16.280 --> 03:21.280
ثم ، أي اسم من اختيارك على سبيل المثال مفتاح أو دعامة.

03:23.581 --> 03:28.581
ثم القولون. ثم نوع قيمة العقار.

03:29.010 --> 03:30.010
ثم كائن.

03:30.010 --> 03:33.760
لا يمكن أن يكون لديك سلاسل أو أرقام أو رموز كخاصية.

03:33.760 --> 03:37.660
أنت على سبيل المثال ، لا يمكنك استخدام منطقية هنا. هذا غير مسموح به.

03:37.660 --> 03:40.504
لكن يمكنك استخدام السلسلة هنا.

03:40.504 --> 03:43.190
مع ذلك ، أقول ببساطة أن أي كائن

03:43.190 --> 03:46.330
أقوم بإنشائه بناءً على واجهة حاوية

03:46.330 --> 03:51.083
الخطأ هذه لاحقًا يجب أن يكون له خصائص ، وهي سلاسل.

03:52.120 --> 03:53.928
اسم المستخدم على سبيل المثال سيكون سلسلة

03:53.928 --> 03:55.899
صالحة حتى لو لم أقم بلفها بين علامتي اقتباس.

03:55.899 --> 03:59.980
ثم نضيف نقطتين. ثم نوع القيمة ، وهو

03:59.980 --> 04:01.629
سلسلة. لذلك أقول إنني

04:01.629 --> 04:04.320
لا أعرف اسم الخاصية بالضبط.

04:04.320 --> 04:07.620
أنا أيضا لا أعرف عدد الممتلكات.

04:07.620 --> 04:10.608
أنا أعلم فقط أن كل خاصية تضاف إلى هذا

04:10.608 --> 04:13.459
الكائن ، والتي تستند إلى حاوية خطأ

04:13.459 --> 04:16.959
، يجب أن يكون لها اسم خاصية يمكن تفسيره على

04:16.959 --> 04:20.640
أنه سلسلة وأن قيمة الخاصية يجب أن تكون أيضًا

04:20.640 --> 04:23.080
سلسلة. هذا ما أقوله هنا.

04:23.080 --> 04:28.080
الآن ، مع ذلك لا يزال بإمكاننا إضافة خصائص محددة مسبقًا ،

04:29.560 --> 04:31.906
ومع ذلك ، فقط إذا كانت من نفس

04:31.906 --> 04:35.339
النوع مثل هذا هنا. لذلك يمكننا إضافة معرف وهو نوع سلسلة.

04:35.339 --> 04:39.760
وبعد ذلك ، يجب أن يحتوي أي كائن نبنيه ويلتزم بهذه الواجهة على خاصية

04:39.760 --> 04:43.360
معرف ويمكنه إضافة العديد من الخصائص الأخرى كما يريد

04:43.360 --> 04:47.370
، ولكن لا يمكننا تعيين معرف إلى رقم هنا ، على سبيل المثال ، لأن

04:47.370 --> 04:49.277
لدينا نوع فهرس هنا.

04:49.277 --> 04:53.033
لذلك هذا هو القيد لدينا إذا قمنا ببناء مثل هذا الكائن.

04:55.240 --> 04:56.550
إذن الآن ما هي العاقبة؟

04:56.550 --> 05:00.080
يمكننا الآن إنشاء حقيبة خطأ على سبيل المثال وهي عبارة

05:00.080 --> 05:02.390
عن حاوية خطأ من النوع والتي تكون بالتالي

05:02.390 --> 05:05.150
كائنًا وسيكون صالحًا مثل هذا لأنه لا يتعين

05:05.150 --> 05:07.440
علينا إضافة أي خصائص.

05:07.440 --> 05:10.340
هذا هو كل شيء صحيح. لكن بالطبع يمكننا الآن إضافة البعض.

05:10.340 --> 05:13.380
على سبيل المثال ، البريد الإلكتروني ليس بريدًا إلكترونيًا صالحًا.

05:13.380 --> 05:15.780
وهذا جيد. لن يكون الأمر على ما يرام

05:15.780 --> 05:17.093
إذا قمت بدلاً من ذلك بتعيين

05:17.093 --> 05:19.133
رقم هنا لأننا نقول أن كل خاصية تحتاج

05:19.133 --> 05:23.001
إلى نوع قيمة سلسلة. لذلك يجب أن نستخدم سلسلة هنا.

05:23.001 --> 05:25.940
إذا استخدمت رقمًا هنا ، فسيعمل ذلك لأنه

05:25.940 --> 05:28.610
يمكن تفسير ذلك على أنه سلسلة أيضًا.

05:28.610 --> 05:30.883
لذا يمكنني أيضًا استخدام رقم كنوع مفتاح

05:30.883 --> 05:33.031
هنا إذا أردت ذلك. أنا حر تمامًا فيما

05:33.031 --> 05:35.981
يتعلق بما أستخدمه هنا. إذا كان سيغير نوع

05:35.981 --> 05:40.981
الخاصية هنا إلى رقم ، فيمكنك القيام بذلك وسيكون هذا على

05:42.130 --> 05:44.810
ما يرام. لكن هذا ليس لأن البريد

05:44.810 --> 05:46.470
الإلكتروني ليس رقمًا.

05:46.470 --> 05:48.170
لا يمكن تحويل هذا إلى رقم.

05:48.170 --> 05:51.550
يمكن التعامل معها كسلسلة وليس كرقم.

05:51.550 --> 05:54.870
هذه هي الطريقة التي تتحكم بها في نوع الخصائص ، أو

05:54.870 --> 05:56.990
أسماء الخصائص التي تسمح بها.

05:56.990 --> 05:59.493
وهنا فعلت واحدة للسماح بأسماء خصائص السلسلة.

05:59.493 --> 06:02.264
لذا فإن أي شيء يمكن تحويله إلى سلسلة هو

06:02.264 --> 06:04.740
اسم خاصية صالح. ومن ثم يجب أن تكون القيمة

06:04.740 --> 06:06.413
عبارة عن سلسلة أيضًا.

06:06.413 --> 06:08.021
وكما قلت بالطبع يمكننا

06:08.021 --> 06:10.632
الآن إضافة قيم متعددة هنا ، قيم متعددة

06:10.632 --> 06:12.830
يجب أن أقولها.

06:12.830 --> 06:17.263
يجب أن تبدأ بحرف كبير.

06:18.170 --> 06:21.220
لذا فهذه الآن حقيبة خطأ يمكننا بناؤها بمساعدة

06:21.220 --> 06:22.722
حاوية الخطأ ، والتي تمنحنا

06:22.722 --> 06:25.392
هذه المرونة الإضافية التي لا نحتاج

06:25.392 --> 06:27.522
إلى معرفة أسماء الخصائص التي

06:27.522 --> 06:32.653
نريد استخدامها مسبقًا وعدد الخصائص التي نحتاجها.
