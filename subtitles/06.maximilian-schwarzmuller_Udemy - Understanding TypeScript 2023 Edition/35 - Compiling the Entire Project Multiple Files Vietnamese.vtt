WEBVTT

00:02.120 --> 00:04.590
Người hướng dẫn: Vì vậy, như tôi đã đề cập trong bài giảng trước,

00:04.590 --> 00:06.080
chế độ xem là một khởi đầu tuyệt vời nhưng

00:06.080 --> 00:08.910
nếu chúng ta có nhiều hơn một tệp TypeScript thì sao?

00:08.910 --> 00:13.370
Điều gì sẽ xảy ra nếu chúng ta cũng có tệp analytics. ts mà chúng tôi giả định

00:13.370 --> 00:18.370
gửi dữ liệu phân tích đến máy chủ của mình?

00:18.530 --> 00:21.430
Bây giờ, ở đây để có bất cứ thứ gì trong đó, tôi sẽ chỉ đặt

00:21.430 --> 00:24.240
một bảng điều khiển. log nhưng tất nhiên, bạn

00:24.240 --> 00:26.710
có thể gửi các yêu cầu HTTP đến dịch vụ phân

00:26.710 --> 00:29.180
tích của mình tại đây như tôi đã nói.

00:29.180 --> 00:32.685
Vì vậy, giả sử chúng tôi cũng đã nhập tệp này vào

00:32.685 --> 00:36.420
đây trong tệp index. tập tin html.

00:36.420 --> 00:40.320
Nếu chúng ta chỉ vào phân tích. js ở đây chưa tồn tại nhưng sẽ

00:40.320 --> 00:41.730
tồn tại sau khi biên dịch,

00:41.730 --> 00:44.760
thì chúng tôi có thể tải hai tệp này và tất nhiên,

00:44.760 --> 00:46.660
chúng tôi muốn biên dịch cả

00:46.660 --> 00:48.950
hai tệp bất cứ khi nào một trong số

00:48.950 --> 00:50.900
chúng thay đổi.

00:50.900 --> 00:52.490
Bây giờ, vì điều đó, sẽ thật

00:52.490 --> 00:55.320
tuyệt nếu chúng ta có thể vào một số chế độ theo dõi

00:55.320 --> 00:57.630
chung, nơi chúng ta chỉ chạy tsc như thế

00:57.630 --> 00:59.790
này mà không cần trỏ vào một tệp và nó chỉ

00:59.790 --> 01:02.480
xem toàn bộ thư mục dự án của chúng ta và biên dịch

01:02.480 --> 01:05.823
lại bất kỳ tệp TypeScript nào có thể thay đổi.

01:06.720 --> 01:08.960
Chà, hóa ra điều này là có thể.

01:08.960 --> 01:11.340
Để làm được điều đó, chúng ta chỉ cần

01:11.340 --> 01:15.020
nói với TypeScript rằng đây là một dự án cần được quản

01:15.020 --> 01:16.750
lý bằng TypeScript và chúng

01:16.750 --> 01:18.980
ta thực hiện điều đó trước hết và

01:18.980 --> 01:20.700
chúng ta chỉ cần thực hiện

01:20.700 --> 01:23.710
việc này một lần, chạy tsc --init.

01:23.710 --> 01:26.170
Vì vậy, tôi không chỉ vào một tệp cụ thể ở đây,

01:26.170 --> 01:29.540
tôi chỉ chạy tsc và sau đó --init ở đây và lặp lại, điều này

01:29.540 --> 01:31.230
chỉ được yêu cầu một lần.

01:31.230 --> 01:33.530
Nó sẽ khởi tạo dự án mà bạn chạy lệnh

01:33.530 --> 01:36.390
này dưới dạng dự án TypeScript.

01:36.390 --> 01:39.910
Điều đó có nghĩa là về cơ bản, bây giờ nó sẽ cho TypeScript biết

01:39.910 --> 01:41.850
rằng mọi thứ trong thư mục mà bạn chạy

01:41.850 --> 01:44.160
lệnh này và do đó, điều quan trọng là bạn phải

01:44.160 --> 01:46.470
điều hướng vào đúng thư mục trước khi chạy

01:46.470 --> 01:48.070
lệnh này với thiết bị đầu cuối

01:48.070 --> 01:50.550
tích hợp sẵn ở đây trong Mã VS.

01:50.550 --> 01:52.910
Tôi tự động ở trong thư mục dự án này, nơi

01:52.910 --> 01:55.740
chứa các tệp của tôi để dự án này hiện được quản

01:55.740 --> 01:57.370
lý bởi TypeScript.

01:57.370 --> 01:58.400
Vì vậy, hãy nhấn Enter

01:58.400 --> 02:02.634
và những gì nó làm là nó tạo tệp tsconfig. tập tin json.

02:02.634 --> 02:06.580
Về cơ bản, đây là chỉ báo cho TypeScript rằng

02:06.580 --> 02:09.950
dự án chứa tệp này và tất cả các thư mục con

02:09.950 --> 02:12.239
của thư mục này phải được quản

02:12.239 --> 02:14.710
lý bởi TypeScript.

02:14.710 --> 02:16.080
Bây giờ, nếu chúng tôi xem xét tệp

02:16.080 --> 02:17.860
này, chúng tôi sẽ thấy có rất nhiều tùy chọn,

02:17.860 --> 02:19.330
hầu hết chúng đã được nhận xét, chúng

02:19.330 --> 02:22.090
chỉ ở đó để bạn thấy rằng bạn có thể đặt chúng và bạn cũng có một lời

02:22.090 --> 02:24.500
giải thích ngắn gọn ở đây nhưng chúng ta không phải lo lắng

02:24.500 --> 02:26.380
về những điều đó ngay bây giờ.

02:26.380 --> 02:29.040
Chúng tôi sẽ đi sâu vào chúng trong một giây.

02:29.040 --> 02:31.610
Hiện tại, chúng ta hãy đóng tệp này tại đây và

02:32.800 --> 02:35.100
xem điều này mang lại cho chúng ta điều

02:35.100 --> 02:36.550
gì bởi vì những gì nó mang

02:36.550 --> 02:39.870
lại cho chúng ta là bây giờ chúng ta có thể chạy tsc như thế

02:39.870 --> 02:42.610
này mà không cần chỉ vào một tệp cụ thể.

02:42.610 --> 02:45.550
Và điều này sẽ làm là nó sẽ yêu cầu TypeScript

02:45.550 --> 02:49.080
tiếp tục và biên dịch tất cả các tệp TypeScript

02:49.080 --> 02:53.090
để tất cả các tệp . ts mà nó có thể tìm thấy trong dự án này, vì vậy

02:53.090 --> 02:54.770
nếu tôi nhấn Enter ở đây, bạn thấy đấy,

02:54.770 --> 02:56.830
việc này sẽ mất một lúc và bây giờ thứ chúng tôi

02:56.830 --> 03:00.530
nhận được là bản phân tích này. js và ứng dụng

03:00.530 --> 03:02.620
này. tập tin js.

03:02.620 --> 03:05.160
Bây giờ, các phân tích. js vừa được tạo bởi TypeScript

03:05.160 --> 03:10.060
vì nó phát hiện ra rằng chúng tôi có tệp analytics.

03:10.060 --> 03:10.060
ts

03:10.060 --> 03:13.390
và như tôi đã nói, bây giờ nó sẽ biên dịch tất cả các tệp TypeScript

03:13.390 --> 03:14.730
trong dự án.

03:14.730 --> 03:17.660
Và tất nhiên, điều này cũng có thể được kết hợp với chế độ xem.

03:17.660 --> 03:20.630
Bạn có thể chạy tsc -w hoặc --watch như tôi đã trình

03:20.630 --> 03:23.420
bày trước đây và giờ đây, thao tác này sẽ chuyển

03:23.420 --> 03:26.970
sang chế độ xem cho tất cả các tệp TypeScript.

03:26.970 --> 03:29.590
Vì vậy, bây giờ bất cứ khi nào tôi thay đổi một trong

03:29.590 --> 03:31.920
số chúng và tôi lưu nó, nó sẽ biên dịch lại.

03:31.920 --> 03:33.840
Nó sẽ biên dịch lại tệp đã thay đổi

03:33.840 --> 03:36.100
và do đó, tất cả thay đổi được phản ánh

03:36.100 --> 03:37.800
trong tệp JavaScript.

03:37.800 --> 03:38.633
Và bây giờ nó ở đây.

03:38.633 --> 03:41.430
Nếu tôi quay lại trang của mình, chúng tôi cũng sẽ thấy dữ liệu đang

03:41.430 --> 03:44.463
gửi vì bây giờ tệp analytics. tệp ts cũng đã được biên dịch.
