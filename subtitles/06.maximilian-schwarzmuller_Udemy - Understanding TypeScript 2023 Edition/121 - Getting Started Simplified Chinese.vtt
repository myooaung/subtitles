WEBVTT

00:02.180 --> 00:03.710
- ：对于附件, 你会发现一个开始的项目,

00:03.710 --> 00:12.030
就像你在课程中已经看过很多次的那样, 一个非常琐碎的项目, 索引基本上是空的｡

00:12.030 --> 00:12.030
html文件和空应用程序｡

00:12.030 --> 00:14.400
ts文件,

00:14.400 --> 00:17.140
在这里我们将构建一个小的演示应用程序,

00:17.140 --> 00:20.350
一个小项目｡

00:20.350 --> 00:24.705
现在, 我们要构建的应用程序不会太复杂,

00:24.705 --> 00:28.080
但它将是一个很好的应用程序, 我们基本上将能够管理几个项目,

00:28.080 --> 00:31.480
其中一个项目基本上是一个目标,

00:31.480 --> 00:49.530
你可以说, 我们有项目列表, 我们将有两个项目列表, 一个活动列表和一个已完成列表, 我们将能够将项目从一个列表拖放到另一个列表, 等等｡

00:49.530 --> 00:52.734
当然, 应用程序本身会很好, 但最重要的是,

00:52.734 --> 01:02.240
它将允许我们练习到目前为止学到的许多东西, 这当然是本模块的目标｡

01:02.240 --> 01:04.210
对于本模块, 还有一个重要注意事项,

01:04.210 --> 01:12.010
我将在这一个应用程序的一个文件中编写所有代码｡

01:12.010 --> 01:12.010
TS文件,

01:12.010 --> 01:17.000
因此这将变成非常非常大文件｡

01:17.000 --> 01:19.420
在本模块之后的模块中, 我将深入探讨这个问题,

01:19.420 --> 01:27.030
并向您展示TypeSript如何允许我们拆分此文件, 但目前, 由于我们还不知道这一点, 而且到目前为止,

01:27.030 --> 01:32.930
我们还没有大小问题, 所以让我们专注于演示应用程序｡

01:32.930 --> 01:37.420
为此, 我们将从索引开始｡

01:37.420 --> 01:37.420
html档案｡ 

01:37.420 --> 01:39.100
附件中你会发现一个新的文件下载它,

01:39.100 --> 01:44.650
并取代所有的内容, 在此开始索引｡

01:44.650 --> 01:44.650
html文件与下载的文件,

01:44.650 --> 01:48.700
并做同样的应用程序｡

01:48.700 --> 01:48.700
我们还没有文件,

01:48.700 --> 01:57.010
只要把你找到的这个讲座的附件添加到你的项目索引旁边就可以了｡

01:57.010 --> 01:57.010
html,

01:57.010 --> 01:59.470
因为我们已经在那里导入了｡

01:59.470 --> 02:02.200
这些文件里到底是怎么回事

02:02.200 --> 02:06.900
在索引中｡  我们正在导入应用程序的html文件｡

02:06.900 --> 02:06.900
css文件进行一些样式和应用程序｡

02:06.900 --> 02:10.484
js文件中的一些JavaScript逻辑,

02:10.484 --> 02:12.240
当然我们不会写任何JavaScript代码,

02:12.240 --> 02:15.589
我们将在app中写代码｡

02:15.589 --> 02:15.589
但是它会被编译成一个JavaScript文件｡

02:19.658 --> 02:25.890
现在, 在html文件的主体中, 您将发现几个模板标记｡

02:25.890 --> 02:28.436
模板标签是现代浏览器支持的默认html标签,

02:28.436 --> 02:30.427
它允许我们指定一些html代码,

02:30.427 --> 02:51.911
这些代码不会立即加载, 也不会立即显示, 也就是说, 不会立即呈现, 而是可以通过JavaScript和TypeScript访问, 然后在我们想要呈现它时呈现它, 以便使用JavaScript和TypeScript控制它, 您可以看到,

02:51.911 --> 03:00.500
我有一个基本上具有自由输入的表单标题､ 描述和人员输入, 我们可以在其中决定项目的标题是什么､

03:00.500 --> 03:11.386
项目的描述是什么以及可以分配给它或应该分配给它的人数, 然后单击“添加项目”按钮｡

03:11.386 --> 03:13.320
然后我们有另一个模板,

03:13.320 --> 03:18.440
它只包含一个列表项, 用于呈现项目列表中的单个项目,

03:18.440 --> 03:20.100
然后就是这个模板,

03:20.100 --> 03:25.176
在这里, 在那里, 您'我会看到我有一个带有h2部分的标题,

03:25.176 --> 03:27.280
然后是一个无序的列表,

03:27.280 --> 03:45.930
实际上, 无序的列表稍后将保存多个基于此模板的单个项目, 它将通过顶部的表单呈现输入的数据, 然后所有内容都将在TypeScript的帮助下附加到id为“app”的div中｡

03:45.930 --> 03:48.970
现在, 应用程序 css只包含一些css样式,

03:48.970 --> 04:00.216
您当然可以查看这些样式, 我在这里不会重点介绍这些样式, 因为它与TypeScript无关, 现在我们的工作是编写一些TypeScript代码,

04:00.216 --> 04:03.502
这些代码最终获取用户在此处输入的内容,

04:03.502 --> 04:18.440
实际上, 首先呈现此表单, 然后获取用户输入的内容, 验证用户输入的内容, 因此标题description和people具有有效值, 监听单击此按钮或提交表单, 更准确地说, 然后创建一个新项目,

04:18.440 --> 04:24.160
最后创建一个新的JavaScript对象, 该对象存储在某个数组中,

04:24.160 --> 04:36.790
然后将该数组呈现到该列表中, 当然, 还需要将整个列表添加到这是所有的步骤, 当然这是相当多的步骤｡

04:36.790 --> 04:39.580
现在, 如果您感到非常自信, 当然,

04:39.580 --> 04:42.900
一定要抓住这个机会, 暂停一下, 尝试自己实现它,

04:42.900 --> 04:45.080
无论它看起来如何, 最后,

04:45.080 --> 04:48.141
您只需要设置一个论坛, 该论坛是可见的,

04:48.141 --> 04:51.980
用户可以在那里输入内容, 对于您输入的每个项目,

04:51.980 --> 05:00.539
您在该列表中呈现一个列表项, 如果您到达该列表, 该列表项也应该是可见的, 这已经很令人惊讶了, 但当然,

05:00.539 --> 05:04.340
我们还将一起逐步实现这一点, 一旦实现了这一点,

05:04.340 --> 05:15.440
我们还将确保我们实际上呈现了工具列表, 我们可以通过拖放等方式在这些列表之间切换项目｡

05:15.440 --> 05:17.993
所以, 首先, 让我们开始吧｡ 
