WEBVTT

00:02.170 --> 00:03.830
Rimaniamo sulle funzioni.

00:03.830 --> 00:07.120
Un'altra bella caratteristica disponibile nel moderno JavaScript è

00:07.120 --> 00:09.450
la possibilità di assegnare argomenti predefiniti

00:09.450 --> 00:11.033
ai parametri delle funzioni.

00:11.880 --> 00:13.830
Supponiamo che nella nostra funzione

00:13.830 --> 00:17.720
add, per qualche ragione, vogliamo un valore predefinito per b.

00:17.720 --> 00:20.180
Sappiamo che vogliamo essere in grado di sommare due numeri.

00:20.180 --> 00:23.850
Ma nel caso in cui si chiami questa funzione con un solo numero,

00:23.850 --> 00:28.130
si assumerà un valore predefinito per il secondo argomento o per il

00:28.130 --> 00:29.990
secondo parametro.

00:29.990 --> 00:32.120
Possiamo farlo aggiungendo un segno di uguale qui

00:32.120 --> 00:34.980
nell'elenco dei parametri e impostando il valore predefinito.

00:34.980 --> 00:36.920
Che ovviamente deve corrispondere al nostro tipo.

00:36.920 --> 00:40.020
Ad esempio, uno o quello che dovrebbe essere il valore predefinito.

00:40.020 --> 00:42.770
Questo ci permette di chiamare questa funzione

00:42.770 --> 00:44.080
con un solo argomento.

00:44.080 --> 00:46.700
Potrei quindi chiamarlo in questo modo e TypeScript

00:46.700 --> 00:48.830
non si lamenterebbe, perché rileva che abbiamo

00:48.830 --> 00:50.200
un argomento predefinito,

00:50.200 --> 00:51.860
che viene preso per b.

00:51.860 --> 00:53.910
E quindi qui ottengo un risultato

00:53.910 --> 00:58.910
di sei, perché il mio valore predefinito b è uno e aggiungo cinque, che fa sei

00:59.130 --> 01:03.113
Ora, una nota importante sugli argomenti predefiniti.

01:04.010 --> 01:07.090
Devono essere gli ultimi della lista.

01:07.090 --> 01:10.710
Se si assegna un argomento predefinito ad a, per esempio,

01:10.710 --> 01:12.640
avremo un problema, perché?

01:12.640 --> 01:15.290
Perché gli argomenti predefiniti non vengono saltati

01:15.290 --> 01:16.840
quando si chiama una funzione.

01:16.840 --> 01:19.490
Quindi, se chiamo una funzione con un argomento,

01:19.490 --> 01:21.990
gli argomenti che passo qui vengono passati

01:21.990 --> 01:25.060
ai parametri nello stesso ordine.

01:25.060 --> 01:27.240
Quindi, chiamando la funzione con un parametro,

01:27.240 --> 01:29.900
cinque in questo caso, si passa questo parametro al primo

01:29.900 --> 01:32.400
parametro qui nell'elenco dei parametri.

01:32.400 --> 01:34.150
E poiché il secondo parametro

01:34.150 --> 01:37.660
non è fornito con un valore predefinito, non è opzionale.

01:37.660 --> 01:40.920
E quindi non forniamo alcun secondo argomento.

01:40.920 --> 01:43.730
Quindi TypeScript, o JavaScript in realtà, non

01:43.730 --> 01:46.800
guarda la definizione della funzione e intuisce che

01:46.800 --> 01:50.650
probabilmente si vuole saltare l'argomento predefinito e fornire

01:50.650 --> 01:53.290
il valore a quello non predefinito.

01:53.290 --> 01:55.740
Invece, si limita a rispettare l'ordine.

01:55.740 --> 01:59.720
Pertanto, è necessario impostare i valori predefiniti da destra.

01:59.720 --> 02:01.830
Assicuratevi quindi che i parametri

02:01.830 --> 02:04.010
per i quali non accettate argomenti

02:04.010 --> 02:07.523
predefiniti vengano prima di quelli predefiniti.
