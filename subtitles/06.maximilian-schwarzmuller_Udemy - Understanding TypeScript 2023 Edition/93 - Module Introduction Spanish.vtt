WEBVTT

00:02.500 --> 00:04.010
Instructor: En este módulo nos

00:04.010 --> 00:06.400
sumergiremos en un concepto llamado genérico.

00:06.400 --> 00:10.890
Los genéricos existen en TypeScript, no en el JavaScript convencional, así que

00:10.890 --> 00:12.860
no hay una traducción real aquí.

00:12.860 --> 00:14.480
Pero podemos utilizarlos en TypeScript.

00:14.480 --> 00:17.200
Y el concepto de tipos genéricos existe en

00:17.200 --> 00:19.730
otros lenguajes de programación.

00:19.730 --> 00:21.950
No en todos los lenguajes de programación, por

00:21.950 --> 00:24.530
supuesto, pero sí en algunos, por ejemplo en C Sharp.

00:24.530 --> 00:27.290
Sin embargo, este curso no es sobre C Sharp.

00:27.290 --> 00:29.280
Así que vamos a echar un vistazo a lo que son

00:29.280 --> 00:30.770
los genéricos y lo que son en TypeScript

00:30.770 --> 00:33.410
y cómo los usamos allí y por qué los usamos allí.

00:33.410 --> 00:36.450
En concreto, veremos qué son exactamente los genéricos

00:36.450 --> 00:39.000
y por qué son interesantes y útiles.

00:39.000 --> 00:41.925
A continuación, construiremos nuestras propias funciones

00:41.925 --> 00:44.820
y clases genéricas porque, resulta que podemos hacerlo.

00:44.820 --> 00:47.910
A continuación, echaremos un vistazo a las restricciones

00:47.910 --> 00:51.800
genéricas y a lo que es y por qué usaríamos algo así.

00:51.800 --> 00:53.300
Y echaremos un vistazo

00:53.300 --> 00:55.250
a un par de tipos especiales de

00:55.250 --> 00:57.750
TypeScript, que también suelen ser genéricos

00:57.750 --> 01:01.100
y que ahora sólo podemos entender.

01:01.100 --> 01:02.963
Así que veamos qué tenemos ahí.
