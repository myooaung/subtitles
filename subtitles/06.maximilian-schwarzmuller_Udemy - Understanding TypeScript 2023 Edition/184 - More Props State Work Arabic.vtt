WEBVTT

00:02.110 --> 00:04.160
المدرب: لذلك في هذا التطبيق

00:04.160 --> 00:07.390
الوهمي الصغير ، أود أيضًا التأكد من أنه يمكننا

00:07.390 --> 00:08.500
حذف المهام الواجبة

00:08.500 --> 00:11.610
وتنفيذ ذلك ، فلنتأكد من أنه في قائمة المهام

00:11.610 --> 00:14.220
، في عنصر قائمتنا ، ليس علينا فقط عمل

00:14.220 --> 00:17.640
نص ، ولكن ربما يكون لدينا ذلك داخل فترة ما ثم إلى

00:17.640 --> 00:23.140
جانب ذلك في عنصر القائمة نفسه ، لدينا زر أيضًا ، زر نقول فيه حذف تمامًا مثل

00:23.140 --> 00:28.120
هذا وعندما يتم الضغط على هذا الزر ، سأريد حذف هذا إلى قم بذلك بالنقر

00:28.120 --> 00:31.368
هنا ، أريد أن أفعل شيئًا يتخلص من ذلك لنفعله

00:31.368 --> 00:34.900
الآن نظرًا لأننا تمكنا من القيام بذلك موجود هنا

00:34.900 --> 00:38.040
في مكون التطبيق ، فنحن بحاجة إلى وظيفة جديدة

00:38.040 --> 00:42.100
هنا للقيام بحذف معالج ، والذي يتم تشغيله ثم يمسح هذا للقيام

00:42.100 --> 00:46.440
به من تلك القائمة.

00:46.440 --> 00:47.700
إذن هنا كحجتنا ، أتوقع

00:47.700 --> 00:50.690
الحصول على معرف المهام الذي هو عبارة عن سلسلة

00:50.690 --> 00:53.340
لأنه في نموذجنا ومعرفنا عبارة عن سلسلة

00:55.650 --> 00:59.010
ثم هناك نسميها مرة أخرى مجموعة المهام ، ولكن الآن لإزالة

00:59.010 --> 01:01.260
مهمة يجب القيام بها.

01:01.260 --> 01:03.200
لهذا ، استخدم منتدى الوظيفة هذا

01:03.200 --> 01:04.750
مرة أخرى لأن لدينا تحديثًا

01:04.750 --> 01:06.940
للحالة ، والذي يعتمد على الحالة السابقة

01:06.940 --> 01:09.460
وهناك سأعيد مصفوفة جديدة.

01:09.460 --> 01:13.520
وسيكون هذا في الأساس مصفوفة القديمة الخاصة بي ولكن تمت تصفيتها.

01:13.520 --> 01:16.230
التصفية هي طريقة مضمنة في JavaScript ، والتي

01:16.230 --> 01:18.020
تُرجع مصفوفة جديدة من البيانات

01:18.020 --> 01:21.270
وستكون هذه المصفوفة الجديدة أساسًا المصفوفة القديمة

01:21.270 --> 01:24.490
مطروحًا منها أي شيء تقوم بترشيحه.

01:24.490 --> 01:26.810
يأخذ عامل التصفية وظيفة يتم تنفيذها

01:26.810 --> 01:28.590
على كل عنصر في المصفوفة القديمة

01:28.590 --> 01:31.390
وعندما تقوم بتمرير هذه الوظيفة وإرجاعها صحيحًا

01:31.390 --> 01:34.160
، يتم الاحتفاظ بالعنصر وإضافته إلى المصفوفة

01:34.160 --> 01:37.330
الجديدة إذا أعاد خطأ ، فسيتم إسقاطه.

01:37.330 --> 01:39.820
لذلك سيتم تشغيله على جميع المهام التي

01:39.820 --> 01:42.810
لدينا بالفعل والآن نحتاج إلى بعض المنطق الذي يُرجع

01:42.810 --> 01:45.330
خطأ إذا كان معرف المهام الذي نبحث عنه يساوي

01:45.330 --> 01:48.120
معرف المهام الذي نحصل عليه هنا.

01:48.120 --> 01:52.100
لذلك إذا كانت المهام الواجبة متساوية ، فسيتم إهمالها.

01:52.100 --> 01:53.570
لذلك نحتاج إلى خطأ هنا ليس

01:53.570 --> 01:55.560
صحيحًا ، وبالتالي دعونا نعكس هذا

01:55.560 --> 01:57.430
في التالي ونضيف علامة تعجب.

01:57.430 --> 02:00.620
مع ذلك ، نحتفظ بكل ما يجب القيام به ولكن عندما يكون

02:00.620 --> 02:03.430
المعرف مساويًا للمعرف الذي نحصل عليه هنا لأن

02:03.430 --> 02:05.130
هذا هو المعرف الذي نريد إسقاطه

02:05.130 --> 02:07.833
لأنه هو الواجب الذي نريد حذفه.

02:08.710 --> 02:11.499
نحتاج الآن إلى التأكد من أنه يمكن استدعاء

02:11.499 --> 02:14.610
معالج الحذف من داخل قائمة المهام ومرة أخرى

02:14.610 --> 02:16.370
يمكننا استخدام الدعائم

02:16.370 --> 02:19.580
لهذا وإضافة الخاصية على Delete to do هنا

02:19.580 --> 02:22.520
والإشارة إلى معالج حذف المهام ولكن بالطبع

02:22.520 --> 02:25.100
TypeScript isn لست سعيدًا جدًا بذلك

02:25.100 --> 02:27.240
لأنه في قائمة المهام ، لا نقول

02:27.240 --> 02:30.000
أي شيء عن هذا عند الحذف للقيام بالدعامة

02:30.000 --> 02:33.130
هنا.

02:33.130 --> 02:34.350
دعونا نغير هذا.

02:34.350 --> 02:38.730
في قائمة المهام TSX ، دعنا نضيف حذفًا لنفعله كخاصية وسيشير

02:38.730 --> 02:40.530
هذا الآن إلى دالة ، لذلك

02:40.530 --> 02:42.218
نحتاج إلى نوع دالة هنا

02:42.218 --> 02:45.380
، وهي وظيفة لا تُرجع شيئًا في النهاية.

02:45.380 --> 02:48.150
لذلك باطل ولكن الذي يحصل على

02:48.150 --> 02:51.380
فكرة حذفها لتعمل كمعامل.

02:51.380 --> 02:54.230
الآن ذهب الخطأ في مكون التطبيق والآن

02:54.230 --> 02:55.380
كتعديل ، نحتاج

02:55.380 --> 02:57.210
إلى التأكد من استدعاء هذه

02:57.210 --> 03:00.320
الوظيفة عند النقر فوق هذا الزر.

03:00.320 --> 03:04.100
نقطة الإنتاج عند الدعائم عند الحذف للقيام بذلك وعدم

03:04.100 --> 03:06.990
تنفيذه ولكن بدلاً من ذلك فقط أشر إليه حتى

03:06.990 --> 03:09.650
يتم استدعاء هذه الوظيفة التي نتلقاها

03:09.650 --> 03:12.930
على هذا الخاص عند النقر فوق هذا الزر.

03:12.930 --> 03:15.203
كانت المشكلة الوحيدة في هذا

03:15.203 --> 03:19.460
النهج ، وهي أنه هنا في هذه الوظيفة ، نتوقع الحصول على

03:19.460 --> 03:22.970
معرّف المهام المراد تنفيذها كمعامل.

03:22.970 --> 03:26.620
الآن للتأكد من أن هذا يعمل ، يمكننا ببساطة استخدام الربط هنا

03:26.620 --> 03:28.740
، لا يهمني أن يتم استدعاء هذه الكلمة

03:28.740 --> 03:32.010
الأساسية في ليتم تسميتها وظائف أو تعيينها لمعرفة ولكن

03:32.010 --> 03:35.920
الوسيطة الثانية التي نمررها للربط ، ستكون المعلمة الأولى التي

03:35.920 --> 03:39.570
يتم تلقيها في on حذف للقيام بذلك وينبغي أن تكون فكرة القيام

03:39.570 --> 03:43.743
بذلك للقيام بذلك. معرف هنا.

03:44.620 --> 03:47.440
مع أنه يجب أن يعمل ، نحفظ الآن

03:47.440 --> 03:52.440
هذا وأضيف إنهاء الدورة وإنهائها في شهر واحد.

03:55.180 --> 03:57.940
إذا قمت بالنقر فوق "حذف" هنا ، فهذا قد انتهى وذهب

03:57.940 --> 03:59.700
، لذا فإن كل هذا يعمل الآن.

03:59.700 --> 04:01.480
الآن أريد فقط تلميع هذا ، وإضافة

04:01.480 --> 04:03.690
القليل من التصميم الجميل إليه ،

04:03.690 --> 04:07.333
وبعد ذلك انتهينا من هذا التطبيق الأساسي هنا.
