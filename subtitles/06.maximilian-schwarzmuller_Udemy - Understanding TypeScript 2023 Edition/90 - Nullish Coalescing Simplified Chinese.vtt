WEBVTT

00:02.300 --> 00:06.930
教师：现在与可选链接松散地联系起来, 我们在TypeScript中得到了另一个很好的特性,

00:06.930 --> 00:09.550
它帮助我们处理空数据｡

00:09.550 --> 00:12.820
这个特性被称为零合并｡ 

00:12.820 --> 00:15.900
现在假设你有一些数据, 一些输入,

00:15.900 --> 00:23.320
你不确定它是空的还是未定义的, 或者它是否是一个有效的数据｡

00:23.320 --> 00:28.180
例如, 假设userInput可能为null｡ 

00:28.180 --> 00:31.040
现在, 我们再次将其硬编码到TypeScript中,

00:31.040 --> 00:33.580
因此TypeScript知道它是空的,

00:33.580 --> 00:38.650
但如果您通过某些DOM API获取它, 而您并不确定它是空的, 或者如果您从后端获取它,

00:38.650 --> 00:46.510
那么您可能事先并不知道, TypeScript也可能不知道它是否是空的｡

00:46.510 --> 00:52.803
如果你想把它存储在一些其他的常量或变量中, 比如storedData,

00:54.090 --> 00:56.150
你可能要确保如果它是null,

00:56.150 --> 00:58.760
你存储一个回退值｡

00:58.760 --> 01:03.560
现在你可以用逻辑OR运算符来实现, 在这里你存储一个默认值,

01:03.560 --> 01:11.550
你可以得到第一个值的第二个值是undefined或者null, 如果精确地说是false的话｡

01:11.550 --> 01:17.110
这种方法的问题是, 如果它实际上不是null或undefined,

01:17.110 --> 01:18.960
而是一个空字符串,

01:18.960 --> 01:25.600
它将被视为false值, 因此默认的回退值将生效｡

01:25.600 --> 01:28.850
所以如果我安慰一下｡  log storedData,

01:28.850 --> 01:31.700
您会看到这会打印DEFAULT｡

01:31.700 --> 01:33.430
也许这就是你想要的, 在这种情况下,

01:33.430 --> 01:36.540
这是一个完美的解决方案｡

01:36.540 --> 01:38.800
但是如果你想保留用户输入, 或者你正在处理的任何数据,

01:38.800 --> 01:40.730
除非它真的是null或者未定义的,

01:40.730 --> 01:48.970
那么你需要另一种方法, 因为在这里我们会把它当作false, 并使用回退｡

01:48.970 --> 01:54.370
但也许你想保留一个空的输入, 只是null或undefined应该以不同的方式处理｡

01:54.370 --> 01:56.390
为此, TypeScript还有一个运算符,

01:56.390 --> 02:02.210
双问号运算符, 这被称为空合并运算符｡

02:02.210 --> 02:05.250
这意味着如果它是空的或者未定义的,

02:05.250 --> 02:06.730
并且不是空字符串,

02:06.730 --> 02:09.180
不是零, 就是空的或者未定义的,

02:09.180 --> 02:13.370
那么我们就使用后备方法｡

02:13.370 --> 02:16.700
如果它不是null或undefined, 我们将使用该值｡ 

02:16.700 --> 02:19.220
所以在这个场景中, 编译后, 你会看到,

02:19.220 --> 02:23.060
我们存储了空字符串, 所以, 我不会在这里输出任何东西,

02:23.060 --> 02:24.720
这是空字符串.

02:24.720 --> 02:26.060
另一方面, 如果这里没有定义,

02:26.060 --> 02:32.980
我保存它, 你看, 现在它显示DEFAULT, 因为有了这个双问号运算符, 我们可以退回到这个,

02:32.980 --> 02:42.773
嗯, 退回到这个, 所以这里我们得到了另一个非常有用的功能, 它可以帮助你处理空值或未定义的值｡
