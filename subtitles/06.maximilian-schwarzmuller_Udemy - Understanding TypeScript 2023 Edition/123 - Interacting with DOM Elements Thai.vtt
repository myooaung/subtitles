WEBVTT

00:02.400 --> 00:04.390
ผู้สอน: ดังนั้นเราจึงเรนเดอร์ฟอร์มแรกของเรา

00:04.390 --> 00:07.240
แต่สิ่งที่คุณจะสังเกตได้คือสไตล์นั้นผิดเพี้ยนไปเล็กน้อย

00:07.240 --> 00:13.870
ฉันหมายความว่าฟอร์มดูโอเค แต่ระยะห่างระหว่างขอบหน้าจอกับฟอร์มน่าจะดี

00:13.870 --> 00:18.360
หากคุณดำดิ่งสู่แอพ css คุณจะตรวจพบว่าเรามีตัวเลือก

00:18.360 --> 00:21.050
ID อินพุตผู้ใช้

00:21.050 --> 00:23.330
หากเราเพิ่มการเว้นระยะขอบ ฟังดูไม่เลว

00:23.330 --> 00:28.060
ดังนั้นสิ่งที่เราทำได้คือแอป

00:28.060 --> 00:28.060
เมื่อเราสร้างองค์ประกอบของเราที่นี่หรือเมื่อเราเข้าถึงได้

00:31.740 --> 00:36.840
เราสามารถเข้าถึงองค์ประกอบและเพิ่ม ID ที่นี่ซึ่งจะเป็นอินพุตของผู้ใช้

00:36.840 --> 00:39.740
สิ่งนี้จะทำให้แน่ใจว่าองค์ประกอบที่แสดงผลมี

00:39.740 --> 00:42.800
ID นี้ ดังนั้นหากโหลดซ้ำสิ่งนี้จะดูดีกว่ามาก

00:42.800 --> 00:45.100
หากเราตรวจสอบสิ่งนี้ในเชิงลึกของเบราว์เซอร์

00:45.100 --> 00:49.320
เราจะเห็น ID ที่นี่ และนั่นคือเหตุผลสำหรับสไตล์ที่ดีกว่านี้

00:49.320 --> 00:54.010
โดยที่เรากำลังทำขั้นตอนต่อไปแล้ว เรากำลังโต้ตอบกับองค์ประกอบ

00:54.010 --> 00:56.980
นี่ไม่ใช่ปฏิสัมพันธ์เดียวที่ฉันอยากทำ

00:56.980 --> 00:58.770
เนื่องจากเรามีแบบฟอร์มที่นี่

00:58.770 --> 01:01.870
ฉันจึงต้องการเข้าถึงอินพุตแบบฟอร์มต่างๆ ที่เรามีที่นี่

01:01.870 --> 01:08.800
เพื่อให้เราสามารถอ่านค่าเมื่อส่งแบบฟอร์ม และจากนั้นเราก็ตั้งค่าตัวฟังเหตุการณ์ที่นี่เพื่อส่งและตรวจสอบผู้ใช้

01:08.800 --> 01:12.160
ป้อนข้อมูล.

01:12.160 --> 01:21.273
ดังนั้นเราจึงจำเป็นต้องเข้าถึงปุ่มหรือฟอร์มโดยรวมเพื่อฟังการส่งและองค์ประกอบอินพุตทั้งหมดเพื่อรับค่าล่าสุดจากที่นั่น

01:22.360 --> 01:25.440
สำหรับสิ่งนั้นที่นี่ ก่อนที่เราจะแนบทุกอย่าง

01:25.440 --> 01:28.500
แต่หลังจากที่ฉันกำหนด ID ของฉันให้กับองค์ประกอบที่นี่

01:28.500 --> 01:32.210
ฉันต้องการเข้าถึงอินพุตต่างๆ ในองค์ประกอบนั้นในรูปแบบนั้น

01:32.210 --> 01:35.980
และฉันต้องการจัดเก็บมันเป็นคุณสมบัติของคลาสนี้ ดังนั้นฉันจะ

01:35.980 --> 01:39.820
เพิ่มฟิลด์เพิ่มเติมที่นั่นและฟิลด์แรกอาจเป็นฟิลด์

01:39.820 --> 01:44.570
titleInputElement

01:44.570 --> 01:47.167
ประเภทจะเป็น HTMLInputElement เขียนสิ่งนี้

01:48.060 --> 01:52.770
และเราจะไม่จำเป็นต้องใช้เมื่อเราต้องการฟิลด์อื่นที่คล้ายกันอีกสองฟิลด์

01:52.770 --> 01:55.900
เรามีฟิลด์ DescriptionInputElement ซึ่งเป็นประเภท

01:55.900 --> 01:57.550
HTMLInputElement และเราต้องการฟิลด์

01:58.520 --> 02:02.730
peopleInputElement ด้วย

02:02.730 --> 02:06.240
ตอนนี้เราสามารถเติมข้อมูลฟิลด์เหล่านี้ในตัวสร้าง ด้วยชื่อนี้

02:06.240 --> 02:11.510
InputElement ซึ่งตั้งค่าเท่ากับสิ่งนี้

02:11.510 --> 02:11.510
ดังนั้นสำหรับองค์ประกอบฟอร์มของเรา

02:13.120 --> 02:16.390
โปรดจำไว้เสมอว่านั่นคือองค์ประกอบฟอร์มที่นี่

02:16.390 --> 02:21.350
ตัวเลือกคิวรี และคิวรีสำหรับองค์ประกอบชื่อเรื่อง

02:21.350 --> 02:25.000
และถ้าคุณดูที่ดัชนีอีกครั้ง html ที่เราเห็นในนั้น

02:25.000 --> 02:30.420
เรามีชื่อ ID ในองค์ประกอบนี้ เพื่อให้เราสามารถค้นหาสิ่งนั้นได้

02:30.420 --> 02:33.323
ดังนั้นในแอป ts ที่นี่ในตัวเลือกแบบสอบถาม

02:33.323 --> 02:37.210
เราสามารถใช้ #title เพื่อเลือกสำหรับองค์ประกอบ ID ชื่อเรื่องและเก็บไว้ใน

02:37.210 --> 02:39.750
titleInputElement

02:39.750 --> 02:44.070
อย่างที่คุณทราบเช่นเดียวกับ document get element by ID typescript

02:44.070 --> 02:50.650
ไม่มีโอกาสเข้าใจว่าตัวเลือกการสืบค้นจะส่งคืนองค์ประกอบอินพุตที่นี่

02:50.650 --> 02:53.780
ดังนั้นเพื่อบอก typescript ฉันจะใช้การแคสติ้งอีกครั้ง

02:53.780 --> 02:56.020
และส่งสิ่งนี้ไปที่องค์ประกอบอินพุต

02:56.020 --> 02:58.270
จากนั้นเราสามารถทำขั้นตอนนี้ซ้ำสองครั้ง

02:58.270 --> 03:00.672
และลงชื่อในคำอธิบายInputElement และ

03:00.672 --> 03:03.240
peopleInputElement

03:03.240 --> 03:06.600
ค้นหา ID ที่เหมาะสมในดัชนี html ซึ่งน่าแปลกใจ

03:06.600 --> 03:10.390
ฉันเดาว่า คำอธิบายและผู้คน และเพิ่มลงใน

03:10.390 --> 03:12.190
typescript

03:12.190 --> 03:17.720
เรากำลังค้นหาองค์ประกอบ ID คำอธิบาย และที่นี่สำหรับผู้คน

03:17.720 --> 03:22.687
และด้วยเหตุนี้เราจึงสามารถเข้าถึงองค์ประกอบเหล่านี้ทั้งหมดภายในชั้นเรียนของเราได้ที่นี่

03:22.687 --> 03:26.593
หรือภายในทุกออบเจกต์ที่สร้างขึ้นตามชั้นเรียน

03:27.600 --> 03:33.330
ตอนนี้เราต้องเพิ่มผู้ฟังในองค์ประกอบของเราในแบบฟอร์มของเรา

03:33.330 --> 03:38.330
สำหรับสิ่งนั้น ฉันจะเพิ่มวิธีการกำหนดค่าส่วนตัวอีกวิธีหนึ่ง

03:38.440 --> 03:39.790
ซึ่งคุณไม่ต้องเพิ่ม

03:39.790 --> 03:43.130
แต่ขอย้ำอีกครั้งว่าฉันต้องการแยกส่วนที่เราทำการเลือกและตั้งค่าคร่าวๆ

03:43.130 --> 03:47.900
ในตัวสร้าง

03:47.900 --> 03:52.210
แล้วทำการใส่หรือปรับจูนแยกตามวิธี

03:52.210 --> 03:53.900
และในวิธีการกำหนดค่า ความคิดของฉันคือการตั้งค่าตัวฟังเหตุการณ์

03:53.900 --> 04:01.830
ดังนั้นที่นี่เราสามารถเข้าถึงองค์ประกอบนี้ซึ่งเป็นรูปแบบและเพิ่มตัวฟังเหตุการณ์

04:01.830 --> 04:04.570
ตอนนี้เนื่องจาก typescript รู้ว่าองค์ประกอบนั้นเป็นองค์ประกอบรูปแบบ

04:04.570 --> 04:12.250
HTML จึงเสนอการเติมข้อความอัตโนมัติให้กับเราเมื่อเราต้องการฟังเหตุการณ์การส่งที่นี่ซึ่งดีมาก

04:12.250 --> 04:15.520
ตอนนี้เราต้องผูกมันเข้ากับเมธอด และฉันจะเพิ่มเมธอดไพรเวตอีกวิธีหนึ่ง

04:15.520 --> 04:23.460
ไพรเวต เพราะฉันจะไม่เข้าถึงสิ่งนี้จากภายนอกคลาส แต่จะเข้าถึงจากภายในเท่านั้น

04:23.460 --> 04:26.970
ซึ่งฉันจะตั้งชื่อว่า submitHandler ชื่อนั้นขึ้นอยู่กับคุณทั้งหมด

04:26.970 --> 04:32.750
นี่ควรเป็นวิธีการที่รับวัตถุเหตุการณ์ 'แม้ว่าเราจะผูกมันไว้กับตัวฟังเหตุการณ์นี้

04:32.750 --> 04:34.880
ตรงนี้เราขอชี้ว่า...

04:36.460 --> 04:38.713
ส่งตัวจัดการ

04:40.180 --> 04:46.730
ตอนนี้เราปรับเพื่อให้แน่ใจว่าก่อนที่เราจะแนบการโทรทั้งหมด กำหนดค่าและเรียกใช้เมธอดส่วนตัวนี้

04:46.730 --> 04:50.500
อีกครั้งเป็นไพรเวทดังนั้นจากในคลาสเราสามารถเข้าถึงได้แน่นอน

04:50.500 --> 04:59.290
จากภายนอกคุณจะได้รับข้อผิดพลาด typescript ดังนั้นตอนนี้เมธอดนี้ควร ทริกเกอร์เมื่อใดก็ตามที่ส่งแบบฟอร์ม

04:59.290 --> 05:02.010
ในตัวจัดการการส่ง ฉันต้องการเข้าถึงค่าอินพุตต่างๆ

05:02.010 --> 05:10.310
ของฉันที่นี่ และตรวจสอบความถูกต้อง จากนั้นทำบางอย่างกับอินพุต

05:10.310 --> 05:12.700
ตอนนี้เราจะกังวลเกี่ยวกับการทำบางอย่างในภายหลัง

05:12.700 --> 05:15.480
สำหรับตอนนี้เรามาเข้าถึงพวกเขากันเถอะ

05:15.480 --> 05:20.620
ก่อนอื่นฉันจะเรียกเหตุการณ์ PreventDefault เพื่อป้องกันการส่งแบบฟอร์มเริ่มต้น

05:20.620 --> 05:23.890
ซึ่งจะทริกเกอร์คำขอ HTTP ที่ส่งซึ่งฉันไม่ต้องการที่นี่

05:23.890 --> 05:32.730
จากนั้นเพียงเพื่อดูว่าการทำงานนี้ทำงานที่ไหน ลองพิมพ์คอนโซล

05:32.730 --> 05:32.730
บันทึกค่าองค์ประกอบชื่อนี้เพื่อพิมพ์สิ่งที่อยู่ในองค์ประกอบอินพุตชื่อเรื่อง

05:36.250 --> 05:39.010
ถ้าเราบันทึกไว้ คุณจะเห็นว่ามันคอมไพล์โดยไม่มีข้อผิดพลาด

05:39.010 --> 05:40.560
นั่นก็ดูดี

05:40.560 --> 05:44.670
และถ้าเราไปที่คอนโซลที่นี่แล้วป้อน "Hello! แล้วคลิกเพิ่มโครงการ ดีคือไม่ได้ส่ง แย่คือเราได้รับข้อผิดพลาด

05:44.670 --> 05:51.657
"ไม่สามารถอ่านคุณสมบัติ 'ค่า' ของ undefined ได้

05:51.657 --> 05:51.657
ตอนนี้เกิดอะไรขึ้นที่นี่

05:51.657 --> 05:54.620
ปัญหาคือว่า คำหลักนี้ใน submitHandler ไม่ได้ชี้ไปที่คลาสจริง

05:54.620 --> 05:56.173
ๆ

05:57.730 --> 06:02.230
ทำไม

06:02.230 --> 06:14.680
เนื่องจากวิธีการทำงานของ JavaScript และ typescript เราจึงผูกเมธอดที่นี่กับตัวฟังเหตุการณ์และเมื่อเราผูกบางอย่างกับเหตุการณ์หรือด้วยความช่วยเหลือของตัวฟังเหตุการณ์

06:14.680 --> 06:24.210
นั่นคือสิ่งที่เมธอดซึ่งกำลังจะถูกดำเนินการจะ ผูกพันกับสิ่งอื่น ในกรณีนี้กับเป้าหมายปัจจุบันของเหตุการณ์

06:24.210 --> 06:27.270
ดังนั้นการสิ้นสุดของเมธอดนี้จะไม่ชี้ไปที่คลาส

06:27.270 --> 06:35.130
เมื่อเมธอดถูกทริกเกอร์ในเหตุการณ์ที่มีตัวฟังเหตุการณ์

06:35.130 --> 06:38.150
ตอนนี้วิธีแก้ไขหรือวิธีแก้ปัญหาคือการเรียกการผูกที่นี่บน

06:38.150 --> 06:46.949
submitHandler เพื่อกำหนดค่าล่วงหน้าว่าฟังก์ชันนี้จะดำเนินการอย่างไรเมื่อดำเนินการในอนาคต

06:46.949 --> 06:56.450
และอาร์กิวเมนต์แรกที่เราสามารถส่งผ่านไปยังการผูกนั้นคือสิ่งที่คำหลักนี้จะอ้างถึงภายใน ของฟังก์ชันที่จะดำเนินการ

06:56.450 --> 06:59.760
และที่นี่ฉันผ่านสิ่งนี้ ซึ่งหมายความว่าภายใน submitHandler

06:59.760 --> 07:05.750
จะอ้างถึงสิ่งเดียวกันกับที่อ้างถึงในบริบทนี้

07:05.750 --> 07:10.030
และเนื่องจากเราเรียกมันในบริบทของการกำหนดค่าที่นี่ ซึ่งเราเรียกมันด้วยการกำหนดค่านี้

07:10.030 --> 07:13.660
ส่วนท้ายของการกำหนดค่านี้จะอ้างถึงคลาส และต้องขอบคุณการผูก

07:13.660 --> 07:22.870
มันจะอยู่ที่นั่นสำหรับทุกคน และยังอ้างถึงคลาสที่สิ้นสุดจาก ส่งHandler

07:22.870 --> 07:24.830
ดังนั้น หากคุณบันทึกสิ่งนี้ที่นี่

07:24.830 --> 07:30.743
และเราโหลดซ้ำ และป้อน "สวัสดี!

07:30.743 --> 07:30.743
"

07:32.840 --> 07:35.600
ที่นี่ ตอนนี้คุณเห็น "สวัสดี! " จะพิมพ์ที่นี่เมื่อเราส่งแบบฟอร์ม

07:35.600 --> 07:38.770
ตอนนี้สิ่งนี้ได้รับการแก้ไขแล้วและตอนนี้เรากำลังจัดการกับสิ่งนี้อย่างถูกต้อง

07:38.770 --> 07:43.650
แต่อาจมีวิธีที่ดีกว่าหรือวิธีอื่นที่เราได้เรียนรู้มา

07:43.650 --> 07:51.970
บางทีอาจใช้มัณฑนากร ดังนั้นนี่เป็นโอกาสของคุณที่จะหยุดชั่วคราวอีกครั้งและลองแก้ไขการผูกมัดกับมัณฑนากร

07:51.970 --> 07:57.900
เพราะนั่นคือสิ่งที่เราได้เรียนรู้เกี่ยวกับส่วนมัณฑนากร
