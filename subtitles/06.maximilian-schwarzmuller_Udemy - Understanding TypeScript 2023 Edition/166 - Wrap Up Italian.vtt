WEBVTT

00:02.150 --> 00:05.480
E questo è già tutto per questo modulo.

00:05.480 --> 00:08.090
Ovviamente ci sono tonnellate di librerie di

00:08.090 --> 00:10.130
terze parti che si possono usare.

00:10.130 --> 00:12.680
È possibile esplorare tutto questo nei pacchetti

00:12.680 --> 00:15.806
Class Validator e Class Transformer.

00:15.806 --> 00:18.652
Ma l'idea non è tanto quella di approfondire tutte

00:18.652 --> 00:21.410
le caratteristiche di questi pacchetti.

00:21.410 --> 00:24.300
Preferisco lasciare a voi il compito di esplorarlo.

00:24.300 --> 00:27.983
L'idea è che si possano provare due cose importanti:

00:27.983 --> 00:31.575
la prima è che, con TypeScript, si possono usare

00:31.575 --> 00:35.600
senza problemi i normali pacchetti JavaScript come

00:35.600 --> 00:36.719
Lodash.

00:36.719 --> 00:39.350
Inizialmente potrebbero verificarsi degli errori, ma

00:39.350 --> 00:41.767
tenete presente che tecnicamente ha funzionato.

00:41.767 --> 00:45.244
Ma è anche possibile aggirare questi errori di compilazione

00:45.244 --> 00:49.260
importando i tipi giusti, la giusta traduzione da JavaScript

00:49.260 --> 00:51.500
a TypeScript.

00:51.500 --> 00:54.590
Tali pacchetti di traduzione esistono per tutte le librerie

00:54.590 --> 00:55.980
JavaScript più importanti

00:55.980 --> 00:59.180
e popolari e anche per molte piccole librerie.

00:59.180 --> 01:02.221
Potreste anche lavorare con librerie JavaScript

01:02.221 --> 01:04.470
che hanno questi file di traduzione,

01:04.470 --> 01:07.110
questi file DTS, già incorporati.

01:07.110 --> 01:08.840
Naturalmente, non è necessario installare

01:08.840 --> 01:10.713
tali traduzioni in seguito.

01:11.550 --> 01:14.350
Beh, oltre a questi lavori Vanilla con librerie

01:14.350 --> 01:17.094
che potrebbero aver bisogno di traduzioni, potreste

01:17.094 --> 01:20.610
anche avere librerie come Class Transformer che funzionano

01:20.610 --> 01:24.280
bene in Vanilla JavaScript, nel moderno Vanilla JavaScript,

01:24.280 --> 01:26.580
almeno dove ci sono anche le classi, ma che

01:26.580 --> 01:29.430
funzionano tutte, senza traduzioni extra e progetti

01:29.430 --> 01:31.400
TypeScript.

01:31.400 --> 01:34.960
E poi abbiamo pacchetti come Class Validator.

01:34.960 --> 01:38.440
Abbracciano davvero le caratteristiche specifiche di TypeScript

01:38.440 --> 01:42.370
e offrono un modo del tutto nuovo di pensare al progetto e di risolvere

01:42.370 --> 01:44.840
determinati problemi.

01:44.840 --> 01:47.603
In questo caso, utilizzando i decoratori.

01:48.680 --> 01:51.080
Conoscere tutte queste cose è importantissimo

01:51.080 --> 01:53.440
e vi dà tutta la flessibilità necessaria per

01:53.440 --> 01:55.253
i vostri progetti futuri.
