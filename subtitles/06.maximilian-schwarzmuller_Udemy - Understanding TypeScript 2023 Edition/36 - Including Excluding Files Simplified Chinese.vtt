WEBVTT

00:02.200 --> 00:06.290
教师：这就是我们现在如何使用TypeScript管理多个文件｡

00:06.290 --> 00:08.870
关于多个文件, 当您使用多个文件时,

00:08.870 --> 00:11.500
您也可以使用模块将它们导入到彼此中,

00:11.500 --> 00:15.280
您可能从vanilla JavaScript中了解到这一点,

00:15.280 --> 00:20.770
我们也有模块, 这一点我将在本课程的一个专门章节中介绍, 因此, 现在我们只有两个文件,

00:20.770 --> 00:31.040
它们不会导入到彼此中, 而是导入到索引中｡

00:31.040 --> 00:31.040
html中找到｡ 

00:31.040 --> 00:35.930
现在, 我们知道, 我们可以将其作为一个项目来管理,

00:35.930 --> 00:39.060
并且可以在这里编译多个文件｡

00:39.060 --> 00:41.910
现在让我们看一下tsconfig｡  json文件,

00:41.910 --> 00:51.290
因为这是管理这个项目的关键文件, 它实际上告诉TypeScript应该如何编译这些文件｡

00:51.290 --> 00:56.470
现在, 在我们深入研究compilerOptions之前,

00:56.470 --> 00:59.620
顾名思义, 我们可以在其中配置编译器的行为,

00:59.620 --> 01:14.190
让我们向下滚动到右大括号之前但在嵌套的右大括号之后的位置, 让我们看看我们可以在这里添加的一些选项, 这些选项不会影响编译器或编译步骤的行为,

01:14.190 --> 01:23.410
而是编译器如何处理此项目, 因为例如, 可以设置排除选项｡

01:23.700 --> 01:26.770
现在如果你在这里添加exclude,

01:26.770 --> 01:30.450
那将是一个数组, 你可以在这里输入的是文件的路径,

01:30.450 --> 01:36.400
当你在整个项目上运行TSC时, 这些文件不应该包括在编译中｡

01:36.400 --> 01:41.137
例如, 这里我们可以说我们要排除分析｡

01:41.137 --> 01:41.137
当然,

01:41.137 --> 01:45.300
这在这里没有多大意义, 只是为了展示它是如何工作的｡

01:45.300 --> 01:51.600
如果我们这样做, 我们现在重新运行tsc, 我首先删除分析｡

01:51.600 --> 01:51.600
js,

01:51.600 --> 01:53.730
以便我们可以看到它是否被重新创建, 如果我们现在运行tsc或在监视模式下运行tsc,

01:53.730 --> 01:59.810
您将看不到分析｡

01:59.810 --> 01:59.810
js文件,

01:59.810 --> 02:02.060
原因是我们要排除该文件｡

02:02.060 --> 02:03.340
当然, 对于这个文件,

02:03.340 --> 02:04.670
这没有什么意义,

02:04.670 --> 02:07.250
因为我通常想包含它, 但是如果你有一个文件,

02:07.250 --> 02:09.360
由于某种原因不应该被编译,

02:09.360 --> 02:12.440
你可以这样排除它.

02:12.440 --> 02:20.810
您还可以使用通配符, 例如, 如果您有一个名为analytics的文件｡

02:20.810 --> 02:20.810
偏差 如果你不想编译它,

02:20.850 --> 02:25.770
你可以说所有以dev结尾的文件｡

02:25.770 --> 02:25.770
ts不应被编译,

02:25.770 --> 02:36.470
您也可以通过在此处添加一个星号来实现, 这基本上是一个通配符, 现在TypeScript将忽略任何具有的文件｡

02:36.470 --> 02:36.470
偏差 包括ts｡ 

02:36.470 --> 02:40.037
您还可以在此处添加星号､ 星号､ 斜杠,

02:40.037 --> 02:45.770
这意味着任何文件夹中具有该模式的任何文件都将被忽略｡

02:45.770 --> 02:47.420
这些都是你可以在这里设置的,

02:47.420 --> 02:51.500
我唯一想在这里设置的, 也是你经常会发现的一个设置, 就是我想排除node_modules,

02:51.500 --> 03:01.373
这里的想法是我不想编译node_modules里面可能有的任何TypeScript文件｡

03:02.449 --> 03:09.570
现在, node_modules是保存我们在包中安装的所有依赖项的文件夹｡

03:09.570 --> 03:09.570
json和这些依赖项的依赖项,

03:11.890 --> 03:14.660
因此, 这些是我们导入的第三方库, 我们不想碰它们,

03:14.660 --> 03:22.690
如果这些库中的任何一个提供了一些TypeScript代码, 那么我们当然不想编译它, 它只会减慢我们的编译过程,

03:22.690 --> 03:29.200
在最坏的情况下, 它甚至可能破坏我们的项目｡

03:29.200 --> 03:33.330
因此, 在这里排除node_modules是很常见的,

03:33.330 --> 03:36.510
不过我会说, 如果您根本不指定exclude选项,

03:36.510 --> 03:43.980
node_modules将作为默认设置自动排除, 因此您实际上不需要在这里添加此选项, 这将是默认设置｡

03:43.980 --> 03:50.570
我只想说明exclude的存在, 以及如果您只想排除node_modules, 如何使用它｡

03:50.570 --> 03:55.670
您根本不必添加exclude键｡

03:55.670 --> 03:58.500
如果您确实添加了它, 则应该设置node_modules,

03:58.500 --> 04:01.400
因为否则它不会排除它｡

04:01.400 --> 04:04.570
现在除了exclude, 我们还有include, include允许你做相反的事情,

04:04.570 --> 04:06.630
它允许你明确地告诉TypeScript你想在编译过程中包括哪些文件,

04:06.630 --> 04:20.620
这里没有列出的任何文件都不会被编译, 所以如果我指向app｡

04:20.620 --> 04:20.620
在这里,

04:20.620 --> 04:25.570
你会看到, 如果我重新运行tsc, 我们也不会得到分析｡ ts文件或无分析｡

04:25.570 --> 04:25.570
js文件我应该说｡ 

04:25.570 --> 04:26.403
为什么？

04:26.403 --> 04:29.230
因为数据分析｡  js并没有包含在include中,

04:29.230 --> 04:35.810
正如我所说的, 如果我们设置了include键, 那么我们就必须包含所有我们想要编译的内容｡

04:35.810 --> 04:40.080
当然, 我们还可以添加分析功能｡  在这里, 加上这个, 我们就可以开始编译它,

04:40.080 --> 04:46.740
就像你现在看到的, 我们有了分析｡

04:46.740 --> 04:46.740
js文件,

04:46.740 --> 04:49.650
或者作为一种替代方法, 我们在这里指定一个完整的文件夹,

04:49.650 --> 04:52.560
它通常保存我们要编译的文件｡

04:52.560 --> 04:55.520
顺便说一句, 如果设置alongst include,

04:55.520 --> 05:01.740
将过滤include, 所以如果我们排除某个文件夹的某个子文件夹, 而该子文件夹是include的一部分,

05:01.740 --> 05:08.720
那么被排除的子文件夹也将被排除, 所以基本上我们编译include减去exclude｡

05:08.720 --> 05:10.420
当然, 我不想设置include,

05:10.420 --> 05:12.520
我想编译所有的TypeScript文件,

05:12.520 --> 05:17.200
因此我不必担心这个问题, 我只需要排除node_modules, 正如我解释的,

05:17.200 --> 05:22.423
理论上我甚至不需要添加它, 因为默认情况下会排除它｡

05:23.260 --> 05:25.310
现在你还有一个files选项,

05:25.310 --> 05:27.560
它允许你指向单个文件, 有点像include,

05:27.560 --> 05:30.870
不同的是你不能指定你想包含的整个文件夹,

05:30.870 --> 05:45.210
而是你只需要指定你想编译的单个文件, 这可能是一个小项目的选项, 你知道你只会使用自由文件, 并且由于某种原因, 您还有一些其他的TypeScript文件, 但您不想接触这些文件,

05:45.210 --> 05:51.340
那么您可以像这样设置文件列表｡

05:51.340 --> 05:55.740
但实际上, 您可能并不经常需要该设置｡

05:55.740 --> 06:00.910
因此, 这就是这里的基本编译或项目管理选项｡

06:00.910 --> 06:03.900
当然, 我们还可以指定更多内容,

06:03.900 --> 06:10.793
我们可以指定更多有关编译器本身的内容以及它在编译步骤中的行为方式｡
