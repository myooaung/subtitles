WEBVTT

00:02.260 --> 00:04.220
Artık temel typescript özelliklerini

00:04.220 --> 00:08.410
ve typescript'in neler kattığını iyice anladık.

00:08.410 --> 00:10.070
Ayrıca typescript derleyicisinin

00:10.070 --> 00:12.320
nasıl çalıştığını da anlıyoruz.

00:12.320 --> 00:13.760
Özellikle modern Javascript

00:13.760 --> 00:15.020
sözdizimi söz konusu olduğunda

00:15.020 --> 00:18.700
typescript'in başka neler sunabileceğine bir göz atalım.

00:18.700 --> 00:22.130
Şimdi, bu zor ve oldukça belirsiz bir terim, ancak sonuçta

00:22.130 --> 00:23.360
bununla kastettiğim,

00:23.360 --> 00:26.380
birkaç yıldır var olan ve modern tarayıcılarda

00:26.380 --> 00:28.410
iyi desteklenen, ancak özellikle

00:28.410 --> 00:30.790
eski tarayıcılarda ve orada, özellikle

00:30.790 --> 00:37.570
Internet Explorer'da her zaman çalışmayan Javascript özellikleridir.

00:37.570 --> 00:40.210
Let, Cons, ok fonksiyonları, yapı bozma

00:40.210 --> 00:43.240
sözdizimi, yayma operatörü, end gibi şeylerden

00:43.240 --> 00:45.350
bahsediyorum.

00:45.350 --> 00:48.220
Dolayısıyla, bu kesinlikle bildiğiniz bir şeyse,

00:48.220 --> 00:51.950
bu modülü atlayabilirsiniz çünkü bu konulardaki bilgilerinizi

00:51.950 --> 00:54.230
de tazeleyecek, ancak aynı zamanda typescript'in

00:54.230 --> 00:56.240
bu şeylerle, bu sözdizimiyle ne yaptığını

00:56.240 --> 00:59.000
da açıklayacaktır.

00:59.000 --> 01:01.450
Yine de, kısa hikaye, dizginin işe yarayacak

01:01.450 --> 01:02.980
şekilde derlenmesidir.

01:02.980 --> 01:04.510
Yine de buna bir göz atacağız, ancak

01:04.510 --> 01:05.940
bunların hepsi zaten bildiğiniz

01:05.940 --> 01:08.290
şeylerse bu modülü atlayabilirsiniz.

01:08.290 --> 01:10.130
Müfredata bir göz atabilir ve bu modülde

01:10.130 --> 01:12.400
hala ilginizi çekebilecek herhangi bir ders olup

01:12.400 --> 01:14.260
olmadığına bakabilirsiniz, aksi takdirde

01:14.260 --> 01:16.450
bu modülden sonra görüşürüz.

01:16.450 --> 01:18.140
Bu özelliklerden emin değilseniz,

01:18.140 --> 01:20.500
Var ve Zon ile ilgili Javascript biliyorsanız,

01:20.500 --> 01:22.610
ancak Let veya Cons anahtar kelimesinin gerçekte

01:22.610 --> 01:24.810
ne anlama geldiğini bilmiyorsanız, o zaman

01:24.810 --> 01:27.820
benimle kalmalı ve bu modüle dalmalısınız.

01:27.820 --> 01:29.860
Bunun için yepyeni bir proje kurulumum

01:29.860 --> 01:31.450
var, ekte bulabilirsiniz.

01:31.450 --> 01:34.780
Ve bu projelerde her zaman önce NPM kurulumunu çalıştırmanız

01:34.780 --> 01:35.613
gerekir.

01:35.613 --> 01:37.610
Tüm bağımlılıkları yüklemek için bunu unutmayın

01:37.610 --> 01:39.530
ve daha sonra bu geliştirme sunucusunu başlatmak

01:39.530 --> 01:41.390
için her zaman NPM start.

01:41.390 --> 01:44.480
Şimdi, bu temelde geçen modülün sonunda yaptığımız

01:44.480 --> 01:46.280
gibi bir proje.

01:46.280 --> 01:49.550
tsconfig dosyası oldukça katı bir yapılandırma

01:50.470 --> 01:53.210
ile Bir uygulama. ts dosyası burada ve bu klasör otomatik

01:53.210 --> 01:54.740
olarak oluşturulacaktır.

01:54.740 --> 01:57.100
Bu arada, bu geliştirme sunucusunu elbette

01:57.100 --> 01:58.360
daha önce yaptığınız gibi

01:58.360 --> 02:00.610
çalışır durumda tutun ve şimdi kodumuzu her

02:00.610 --> 02:03.300
zaman burada TSC komutuyla derleyebiliriz.

02:03.300 --> 02:06.670
Ya da burada yapacağım şey, izleme moduna girmek ve bir şeyi

02:06.670 --> 02:09.160
değiştirdiğimizde yeniden derlediğimizden

02:09.160 --> 02:10.980
emin olmak için TSC dash W.

02:10.980 --> 02:12.900
Şimdi proje kurulumumuz tamamlandı ve şimdi

02:12.900 --> 02:15.030
bazı yeni nesil Javascript özelliklerini, hangi

02:15.030 --> 02:17.790
typescript'i desteklediğini ve nelere dikkat etmeniz gerektiğini

02:17.790 --> 02:19.390
inceleyeceğiz.
