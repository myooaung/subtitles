WEBVTT

00:02.220 --> 00:03.660
Verteller: Nu, om te beginnen,

00:03.660 --> 00:04.630
wil ik ervoor zorgen

00:04.630 --> 00:07.210
dat ik dit commando hier niet opnieuw moet uitvoeren;

00:07.210 --> 00:10.104
dit TFC commando waarbij ik een bestand aanwijs na elke

00:10.104 --> 00:12.220
wijziging die ik aanbreng.

00:12.220 --> 00:16.100
Want als ik nu iets verander in mijn TypeScript-bestand,

00:16.100 --> 00:17.640
en ik wil dat weergeven

00:17.640 --> 00:22.640
in mijn uitvoerbestand, en op deze webpagina hier, dan moeten we het

00:22.670 --> 00:25.270
bestand opslaan, de compilatie opnieuw

00:25.270 --> 00:29.410
uitvoeren, en dan dit bestand opnieuw laden; of, als we

00:29.410 --> 00:33.270
ons NPM startproces hebben draaien, wat zou moeten,

00:33.270 --> 00:37.650
dan zal tenminste onze browser automatisch herladen, als

00:37.650 --> 00:43.410
we het bestand niet direct openen, maar in plaats daarvan op localhost: 3000

00:43.410 --> 00:46.200
zitten.

00:46.200 --> 00:47.760
Maar toch, ook al wordt dat automatisch

00:47.760 --> 00:48.910
herladen, we moeten nog

00:48.910 --> 00:52.760
steeds handmatig het compilatiecommando opnieuw uitvoeren.

00:52.760 --> 00:54.730
Dus, om daar vanaf te komen, kunnen

00:54.730 --> 00:56.620
we de wachtstand inschakelen.

00:56.620 --> 01:01.160
Dat betekent dat we TypeScript kunnen vertellen een bestand in de gaten te houden, en

01:01.160 --> 01:04.980
wanneer dat bestand verandert, zal TypeScript opnieuw compileren.

01:04.980 --> 01:07.260
Dus daarvoor kunnen we nog steeds

01:07.260 --> 01:10.560
hetzelfde commando uitvoeren, maar nu voegen

01:10.560 --> 01:14.010
we --watch toe aan het einde, of gewoon -w.

01:14.010 --> 01:17.950
Als we dat doen, dan zijn we in watch mode op dat bestand, en nu, telkens

01:17.950 --> 01:20.940
als we er iets in veranderen, en we slaan dat op, zodat

01:20.940 --> 01:22.120
het bestand op de schijf

01:22.120 --> 01:25.610
technisch ook verandert, zie je, dit hercompileert automatisch,

01:25.610 --> 01:30.260
en natuurlijk betekent dit ook dat als we iets zouden doen wat niet is toegestaan,

01:30.260 --> 01:32.860
zoals bijvoorbeeld opnieuw toewijzen aan

01:32.860 --> 01:37.790
een constante, en dan ook nog een verkeerd type.

01:37.790 --> 01:39.320
Wanneer we dat proberen te doen, wordt

01:39.320 --> 01:40.940
alles natuurlijk opnieuw gecompileerd,

01:40.940 --> 01:43.850
maar dan zien we, net als wanneer we het commando handmatig uitvoeren,

01:43.850 --> 01:46.290
de compilatiefout daar beneden.

01:46.290 --> 01:49.510
De wachtstand is dus al een grote verbetering.

01:49.510 --> 01:52.540
Het nadeel is dat we dit bestand hier nog steeds

01:52.540 --> 01:55.180
specifiek moeten richten.

01:55.180 --> 01:56.700
En op dit moment is dit natuurlijk

01:56.700 --> 01:58.980
het enige bestand waarmee we werken, maar

01:58.980 --> 02:00.940
bij grotere projecten is dat meestal

02:00.940 --> 02:02.973
niet het geval.
