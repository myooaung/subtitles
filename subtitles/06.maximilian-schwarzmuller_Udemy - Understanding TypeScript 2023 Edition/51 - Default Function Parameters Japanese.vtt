WEBVTT

00:02.170 --> 00:03.830
機能にこだわろう｡ 

00:03.830 --> 00:11.033
最近のJavaScriptでは､ 関数のパラメータにデフォルトの引数を割り当てることができるのも嬉しい機能です｡

00:11.880 --> 00:17.720
例えば､ add関数で､ 何らかの理由でbにデフォルト値が必要だったとしましょう｡

00:17.720 --> 00:20.180
だから､ 2つの数字を足し算できるようにしたいんです｡ 

00:20.180 --> 00:23.850
しかし､ 万が一､ この関数を1つの数値だけで呼び出した場合は､

00:23.850 --> 00:29.990
2番目の引数にデフォルトを仮定することになります｡

00:29.990 --> 00:32.120
そのためには､ パラメータリストのここに等号を追加して､

00:32.120 --> 00:34.980
デフォルト値を設定します｡

00:34.980 --> 00:36.920
もちろん､ 私たちのタイプに合ったものでなければなりません｡ 

00:36.920 --> 00:40.020
例えば､ 1とか､ デフォルトはどうなっているのかとか｡ 

00:40.020 --> 00:44.080
これで､ この関数を1つの引数で呼び出すことができるようになりました｡

00:44.080 --> 00:48.830
このように呼び出すと､ TypeScriptはデフォルトの引数があることを検知して､

00:48.830 --> 00:51.860
それをbとみなすので､ 文句を言われることはない｡

00:51.860 --> 00:53.910
したがって､ ここでは､ デフォルトのbが1なので､

00:53.910 --> 00:58.910
5を加えて6となります｡ さて､ ここで､ デフォルトの引数について､

00:59.130 --> 01:03.113
一つ重要な注意があります｡

01:04.010 --> 01:07.090
リストの最後でなければならないのです｡ 

01:07.090 --> 01:10.710
例えば､ aにデフォルトの引数を割り当てると､ 問題が発生します､

01:10.710 --> 01:12.640
なぜ？

01:12.640 --> 01:16.840
なぜなら､ 関数を呼び出すときにデフォルトの引数はスキップされないからです｡

01:16.840 --> 01:19.490
つまり､ ここで1つの引数で関数を呼び出すと､

01:19.490 --> 01:25.060
ここで渡している引数は同じ順番でパラメータに渡されるんだ｡

01:25.060 --> 01:27.240
つまり､ 1つの引数（この場合は5つ）で関数を呼び出すと､

01:27.240 --> 01:32.400
この1つの引数がパラメータリストの最初の引数に渡されます｡

01:32.400 --> 01:34.150
また､ 第2引数はデフォルトで用意されていないため､

01:34.150 --> 01:37.660
オプションではありません｡

01:37.660 --> 01:40.920
それゆえ､ 私たちは第二の議論を全く提供しないのです｡ 

01:40.920 --> 01:43.730
つまり､ TypeScriptやJavaScriptは､

01:43.730 --> 01:46.800
関数の定義を見て､ デフォルトの引数をスキップして､

01:46.800 --> 01:53.290
デフォルトでない引数に値を与えたいのだろうと推測することはないのだ｡

01:53.290 --> 01:55.740
そうではなく､ 単に順番を守るだけなのです｡ 

01:55.740 --> 01:59.720
そのため､ 右からデフォルトを設定する必要があります｡ 

01:59.720 --> 02:01.830
ですから､ デフォルトの引数を受け付けないパラメータが､

02:01.830 --> 02:07.523
デフォルトのパラメータよりも先に来るようにしてください｡
