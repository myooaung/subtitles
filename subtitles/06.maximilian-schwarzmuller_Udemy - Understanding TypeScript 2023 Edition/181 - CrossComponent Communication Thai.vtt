WEBVTT

00:02.230 --> 00:07.960
อาจารย์: ตอนนี้เราต้องการรับข้อความที่เราป้อนที่นี่จากคอมโพเนนต์สิ่งที่ต้องทำใหม่ไปยังคอมโพเนนต์แอป

00:07.960 --> 00:09.690
ทำไมต้องเป็นส่วนประกอบของแอป

00:09.690 --> 00:13.610
เนื่องจากนั่นคือส่วนประกอบของเราที่มีลิงก์โดยตรงไปยังทั้ง

00:13.610 --> 00:16.340
NewTodo และ TodoList

00:16.340 --> 00:19.320
ดังนั้น ในที่นี้ ฉันต้องการเพิ่มฟังก์ชันใหม่

00:20.800 --> 00:24.560
และฉันจะตั้งชื่อมันว่า todoAddHandler ชื่อนั้นขึ้นอยู่กับคุณ

00:24.560 --> 00:27.990
ฉันแค่ต้องการใช้หลักการของการมีตัวจัดการในตอนท้าย

00:27.990 --> 00:31.390
หากเป็นฟังก์ชันที่ทริกเกอร์ตามเหตุการณ์

00:31.390 --> 00:34.330
และในที่นี้ ผมคาดหวังว่าจะได้ข้อความ, เป็นสตริง,

00:34.330 --> 00:37.970
มันคือฟังก์ชันของเรา ดังนั้นเราคาดหวังสิ่งนี้ได้

00:37.970 --> 00:40.720
และผมต้องการเพิ่มสิ่งนี้เป็นสิ่งที่ต้องทำที่นี่

00:40.720 --> 00:42.270
ตอนนี้ แน่นอน เนื่องจากคุณรู้จัก React

00:42.270 --> 00:45.230
คุณรู้ว่าการอัปเดตอาร์เรย์นี้เพียงอย่างเดียวไม่ได้ช่วยอะไร

00:45.230 --> 00:49.360
มันจะไม่เรนเดอร์องค์ประกอบนี้ซ้ำ ดังนั้นเราจะต้องใช้การจัดการสถานะบางอย่างที่นี่เพื่อให้มันใช้งานได้

00:49.360 --> 00:54.750
ก่อนที่เราจะทำ อย่างไรก็ตาม ตรวจสอบให้แน่ใจว่าอย่างน้อยที่สุดเราได้ค่าของฟังก์ชันนี้

00:54.750 --> 01:00.133
ลองบันทึกข้อความที่นี่ จากนั้นเราจะมุ่งเน้นไปที่ส่วนการจัดการสถานะเป็นขั้นตอนที่สอง

01:01.000 --> 01:03.020
เพื่อให้ได้สิ่งนี้ เราต้องแน่ใจว่าฟังก์ชัน

01:03.020 --> 01:05.850
todoAddHandler นี้สามารถเรียกใช้จากภายในคอมโพเนนต์

01:05.850 --> 01:12.113
NewTodo ได้ เพราะนั่นคือจุดที่เราเพิ่มสิ่งที่ต้องทำในตอนท้าย

01:13.090 --> 01:17.860
ทีนี้ เราจะทำให้ฟังก์ชันนี้เรียกได้จากภายในคอมโพเนนต์นี้ได้อย่างไร

01:17.860 --> 01:22.300
เราส่งตัวชี้ที่ฟังก์ชันนี้ไปยังส่วนประกอบนั้น

01:22.300 --> 01:27.280
ดังนั้น ที่นี่เราสามารถเพิ่มชื่อคุณสมบัติ onAddTodo และคุณสามารถตั้งชื่อได้ตามที่คุณต้องการ

01:27.280 --> 01:32.030
ฉันแค่ตั้งชื่อแบบนี้เพราะโดยพื้นฐานแล้วสิ่งนี้จะเกิดขึ้นกับเหตุการณ์หนึ่ง เหตุการณ์ที่เราควบคุมแน่นอน

01:32.030 --> 01:34.600
แต่ถึงกระนั้น

01:34.600 --> 01:38.030
และที่นี่ ฉันต้องการส่งต่อ todoAddHandler ดังนั้นฉันจึงส่งพอยน์เตอร์ที่ฟังก์ชันนี้

01:38.030 --> 01:42.120
ฉันไม่ได้ดำเนินการที่นี่ ฉันแค่ส่งพอยน์เตอร์ไปยังฟังก์ชันนี้ ไปยัง onAddTodo

01:42.120 --> 01:44.620
เพื่อให้แทนที่จะเป็น NewTodo บนอุปกรณ์ประกอบฉาก

01:44.620 --> 01:56.220
ซึ่งเราสามารถรับได้ที่นี่ สามารถเรียกสิ่งนี้ได้ เพื่อให้เราเรียกอุปกรณ์ประกอบฉาก

01:56.220 --> 01:56.220
onAddTodo

01:56.220 --> 01:59.640
ที่นี่และส่งต่อข้อความที่ป้อน นั่นคือแนวคิด แต่แน่นอนว่า

01:59.640 --> 02:03.440
TypeScript ไม่ชอบสิ่งนี้เพราะมันไม่รู้ว่าจะมี onAddTodo prop

02:03.440 --> 02:08.240
บน prop ของเราที่นี่ และ prop ดังกล่าวจะมีลักษณะอย่างไร

02:08.240 --> 02:14.540
ดังนั้น เช่นเดียวกับใน TodoList เราต้องตั้งค่าอินเทอร์เฟซหรือกำหนดประเภทของอุปกรณ์ประกอบฉากของเรา

02:14.540 --> 02:18.200
ดังนั้น ไปที่ NewTodo และบางที อีกครั้ง เพิ่มอินเทอร์เฟซ คุณสามารถเพิ่มประเภทของหลักสูตรได้

02:18.200 --> 02:23.060
และฉันจะทำที่นี่เพื่อผสมผสานสิ่งต่างๆ เข้าด้วยกัน

02:23.060 --> 02:25.380
ฉันมักจะไปหาอินเทอร์เฟซเสมอ

02:25.380 --> 02:27.660
แต่การใช้ประเภทก็ใช้ได้

02:27.660 --> 02:30.493
ดังนั้น หากต้องการใช้ประเภทตรงนี้ เราสามารถตั้งชื่อมันว่า

02:31.357 --> 02:33.820
NewTodoProps และประเภทคือประเภทวัตถุที่ผมต้องการมี

02:33.820 --> 02:40.753
onAddTodo prop และนี่จะเป็นประเภทฟังก์ชัน มันจะชี้ไปที่ฟังก์ชัน

02:41.720 --> 02:44.290
คุณจะกำหนดประเภทฟังก์ชันแบบนี้ ตามที่คุณได้เรียนไปแล้ว

02:44.290 --> 02:51.410
มันจะเป็นฟังก์ชันที่ไม่ส่งคืนสิ่งใดนอกจากที่คาดไว้หนึ่งขอบเขต และนั่นจะเป็นข้อความที่ผู้ใช้ป้อน

02:51.410 --> 02:54.023
ดังนั้น ข้อความสิ่งที่ต้องทำซึ่งเป็นประเภทสตริง

02:55.120 --> 02:57.123
นั่นคือสิ่งที่ฟังก์ชันนี้คาดหวัง

02:58.920 --> 03:01.770
ทีนี้มาตั้งค่านี้ในประเภททั่วไปที่นี่และชี้ไปที่

03:01.770 --> 03:03.103
NewTodoProps

03:04.510 --> 03:08.620
และด้วยเหตุนี้ เราสามารถเรียกใช้ AddTodo และส่งต่อเป็นสตริงได้

03:08.620 --> 03:17.590
และถ้ามันพยายามส่งผ่านตัวเลขตรงนี้ แน่นอนว่าเราจะได้รับข้อผิดพลาดเพราะเรากำหนดไว้อย่างชัดเจนว่าอาร์กิวเมนต์ต้องเป็นสตริงอยู่ตรงนั้น

03:17.590 --> 03:18.733
งั้นเรามาเปลี่ยนกลับกันเถอะ

03:20.550 --> 03:24.630
หากเราป้อนเป้าหมายใหม่อีกครั้ง เสร็จสิ้นในหนึ่งเดือน

03:24.630 --> 03:28.690
เราจะเห็นบันทึกอีกครั้งที่นี่ แต่ตอนนี้มันมาจากส่วนประกอบของแอป

03:28.690 --> 03:30.750
อย่างที่คุณบอกได้อย่างชัดเจน

03:30.750 --> 03:34.170
เพราะเราเพิ่มบันทึกนี้ที่นี่

03:34.170 --> 03:39.480
ดังนั้นการสื่อสารนี้ระหว่างคอมโพเนนต์สิ่งที่ต้องทำใหม่และคอมโพเนนต์ของแอปจึงใช้งานได้

03:39.480 --> 03:42.750
และด้วยเหตุนี้ เรามาปรับใช้การจัดการสถานะที่นี่ และอีกครั้ง

03:42.750 --> 03:46.850
นี่คือสิ่งที่คุณสามารถลองด้วยตัวเองก่อนถ้าคุณต้องการ เพื่อให้แน่ใจว่าเราแสดงโทโดในสถานะ

03:46.850 --> 03:54.460
เพื่อที่ว่าเมื่อใดก็ตามที่เราอัปเดตโทโดของเรา เราจะ- แสดงส่วนประกอบนี้

03:54.460 --> 03:56.263
ลองทำกันในการบรรยายครั้งต่อไป
