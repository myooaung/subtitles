WEBVTT

00:02.150 --> 00:05.480
Erzähler: Und das war's auch schon mit diesem Modul.

00:05.480 --> 00:08.090
Natürlich gibt es tonnenweise Bibliotheken von Drittanbietern,

00:08.090 --> 00:10.130
die Sie verwenden können.

00:10.130 --> 00:12.680
Es gibt noch viel mehr, was Sie in den Paketen Class

00:12.680 --> 00:15.806
Validator und Class Transformer entdecken können.

00:15.806 --> 00:18.652
Aber es geht hier nicht so sehr darum, alle Funktionen

00:18.652 --> 00:21.410
dieser Pakete kennenzulernen.

00:21.410 --> 00:24.300
Ich würde es lieber Ihnen überlassen, das zu erforschen.

00:24.300 --> 00:27.983
Die Idee ist, dass Sie ein Gefühl für zwei wichtige Dinge

00:27.983 --> 00:31.575
bekommen: Das erste ist, dass Sie mit TypeScript normale

00:31.575 --> 00:36.719
JavaScript-Pakete wie Lodash ohne Probleme verwenden können.

00:36.719 --> 00:39.350
Anfänglich kann es zu Fehlern kommen, aber

00:39.350 --> 00:41.767
technisch hat es funktioniert.

00:41.767 --> 00:45.244
Man kann diese Kompilierungsfehler aber auch umgehen, indem

00:45.244 --> 00:49.260
man die richtigen Typen importiert, also die richtige Übersetzung von

00:49.260 --> 00:51.500
JavaScript nach TypeScript vornimmt.

00:51.500 --> 00:54.590
Und solche Übersetzungspakete gibt es für alle großen

00:54.590 --> 00:55.980
und beliebten und sogar

00:55.980 --> 00:59.180
für viele kleine JavaScript-Bibliotheken.

00:59.180 --> 01:02.221
Möglicherweise arbeiten Sie auch mit JavaScript-Bibliotheken,

01:02.221 --> 01:04.470
in die diese Übersetzungsdateien, die DTS-Dateien,

01:04.470 --> 01:07.110
bereits integriert sind.

01:07.110 --> 01:08.840
Natürlich brauchen Sie solche Übersetzungen

01:08.840 --> 01:10.713
danach nicht mehr zu installieren.

01:11.550 --> 01:14.350
Nun, und neben diesen Vanilla Jobs mit Bibliotheken,

01:14.350 --> 01:17.094
die Übersetzungen benötigen könnten, könnten Sie

01:17.094 --> 01:20.610
auch Bibliotheken wie Class Transformer, die gut funktionieren

01:20.610 --> 01:24.280
in Vanilla JavaScript, in modernen Vanilla JavaScript, zumindest,

01:24.280 --> 01:26.580
wo Sie auch Klassen, aber die alle die Arbeit,

01:26.580 --> 01:29.430
ohne zusätzliche Übersetzungen und TypeScript-Projekte

01:29.430 --> 01:31.400
haben.

01:31.400 --> 01:34.960
Und dann haben wir Pakete wie Class Validator.

01:34.960 --> 01:38.440
Sie umfassen wirklich TypeScript-spezifische Funktionen

01:38.440 --> 01:42.370
und bieten Ihnen eine völlig neue Art, über Ihr Projekt nachzudenken

01:42.370 --> 01:44.840
und bestimmte Probleme zu lösen.

01:44.840 --> 01:47.603
In diesem Fall hier, durch die Verwendung von Dekoratoren.

01:48.680 --> 01:51.080
All diese Dinge zu wissen ist sehr wichtig

01:51.080 --> 01:53.440
und gibt Ihnen die nötige Flexibilität für

01:53.440 --> 01:55.253
Ihre zukünftigen Projekte.
