WEBVTT

00:02.340 --> 00:05.740
المقدم: وهذا من أجل هذا المشروع التجريبي الصغير.

00:05.740 --> 00:08.590
الآن ، بالطبع هناك دائمًا المزيد الذي يمكنك القيام

00:08.590 --> 00:12.070
به ، لكننا هنا نستخدم بالفعل مجموعة من الأنواع الرائعة من الميزات

00:12.070 --> 00:14.950
التي تعلمتها خلال هذه الدورة التدريبية.

00:14.950 --> 00:18.220
ومن خلال هذا المشروع ، نأمل أن تكون لديك فكرة

00:18.220 --> 00:22.610
أفضل عن وقت استخدامك للميزة ، ولماذا توجد ميزات معينة مثل

00:22.610 --> 00:25.968
الزخارف والواجهات ، وكيف يمكن أن تساعدنا ،

00:25.968 --> 00:30.770
وكيف يمكننا كتابة تعليمات برمجية آمنة قابلة للتطوير.

00:30.770 --> 00:33.735
الآن ، لا تتردد بالتأكيد في البناء على هذا المشروع

00:33.735 --> 00:35.826
، وإضافة المزيد من الميزات بنفسك ، واستكشاف

00:35.826 --> 00:38.110
ما يمكنك تغييره هناك ، وممارسة العمل ببساطة

00:38.110 --> 00:40.870
باستخدام الكتابة المطبوعة.

00:40.870 --> 00:44.344
أنا سعيد بالحالة الحالية وفي الوحدة التالية

00:44.344 --> 00:47.456
، أريد الآن معالجة مشكلة واضحة تمامًا.

00:47.456 --> 00:51.150
لدينا ملف ضخم واحد هنا.

00:51.150 --> 00:55.030
لذا ، فإن تقسيم هذا إلى ملفات متعددة سيساعدنا حقًا في إدارة

00:55.030 --> 00:56.953
قاعدة الشفرة الخاصة بنا.

00:56.953 --> 01:00.090
لأنه ، في الوقت الحالي ، إذا أردنا تغيير شيء ما في مكان ما ،

01:00.090 --> 01:02.710
فعلينا دائمًا التمرير بحثًا عن الملف بأكمله والعثور

01:02.710 --> 01:05.340
على المكان الذي نريد إجراء تغيير فيه.

01:05.340 --> 01:07.000
هذا ليس مثاليًا.

01:07.000 --> 01:09.030
يوجد بالفعل عدد كبير جدًا من التعليمات

01:09.030 --> 01:12.770
البرمجية ، حتى في المشروعات الأكبر سيكون من الصعب إدارتها تمامًا.

01:12.770 --> 01:14.780
لذلك ، في الوحدة التالية ، سنلقي نظرة

01:14.780 --> 01:17.750
على أنواع الميزات التي توفرها لنا والتي تساعدنا في

01:17.750 --> 01:20.423
تقسيم الكود الخاص بنا عبر ملفات متعددة.
