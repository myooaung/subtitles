WEBVTT

00:02.210 --> 00:04.150
En dat is het voor deze module.

00:04.150 --> 00:07.040
We hebben heel gedetailleerd gekeken naar de TypeScript

00:07.040 --> 00:08.140
compiler, hoe u die kunt

00:08.140 --> 00:10.360
configureren, en hoe u ervoor kunt zorgen dat

00:10.360 --> 00:12.800
hij uw code echt compileert zoals u wilt.

00:12.800 --> 00:15.190
We hebben al deze verschillende opties bekeken,

00:15.190 --> 00:17.030
vooral de strikte opties, waarmee

00:17.030 --> 00:19.610
u echt correcte code kunt schrijven en niet tegen

00:19.610 --> 00:21.850
vreemde bugs aanloopt, vreemde runtime

00:21.850 --> 00:24.100
bugs waar u bijvoorbeeld mee te maken kunt

00:24.100 --> 00:27.660
krijgen met de strikte null checks, en daarnaast hebben we gekeken

00:27.660 --> 00:28.960
naar debugging, hoe u Chrome

00:28.960 --> 00:31.390
en VS Code gemakkelijk zo kunt configureren

00:31.390 --> 00:34.830
dat u vanuit VS Code kunt debuggen.

00:34.830 --> 00:37.480
Debuggen vanuit Chrome met bronkaarten en het

00:37.480 --> 00:38.900
tabblad Bronnen is natuurlijk

00:38.900 --> 00:40.390
altijd een optie.

00:40.390 --> 00:42.850
De sleutel hier zijn ook de source maps, die

00:42.850 --> 00:45.710
u configureert om te worden gegenereerd in het tsconfig-bestand,

00:45.710 --> 00:47.350
dat zijn deze map-bestanden

00:47.350 --> 00:48.900
die naast uw JavaScript-bestanden

00:48.900 --> 00:51.210
staan.

00:51.210 --> 00:54.600
Ze fungeren in feite als brug voor de debugger tussen uw JavaScript-bestanden

00:54.600 --> 00:57.820
en uw TypeScript-bestanden.

00:57.820 --> 01:00.160
En daarmee weten we iets meer over hoe

01:00.160 --> 01:02.680
we onze projecten moeten beheren.

01:02.680 --> 01:03.870
Laten we nu eens kijken wat we

01:03.870 --> 01:06.173
nog meer kunnen doen met TypeScript en JavaScript.
