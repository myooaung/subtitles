WEBVTT

00:02.200 --> 00:03.840
Eğitmen: İşte şimdi TypeScript ile birden

00:03.840 --> 00:06.290
fazla dosyayı nasıl yönetebileceğimizi açıklıyoruz.

00:06.290 --> 00:08.870
Şimdi, birden fazla dosyaya sahip olmakla ilgili

00:08.870 --> 00:11.500
bir kelime, burada yaptığımız gibi birden fazla dosyayla

00:11.500 --> 00:15.280
çalıştığınızda, bunları modüllerle de birbirlerine aktarabilirsiniz,

00:15.280 --> 00:18.180
vanilla JavaScript'ten biliyor olabilirsiniz, orada

00:18.180 --> 00:20.770
da modüllerimiz var, ancak bu kursun özel bir bölümünde

00:20.770 --> 00:25.560
ele alacağım bir şey, bu yüzden şimdilik sadece birbirlerine aktarılmayan, bunun yerine dizine

00:25.560 --> 00:31.040
aktarılan iki dosyamız var.

00:31.040 --> 00:31.040
html.

00:31.040 --> 00:32.990
Şimdi bunu aradan çıkardığımıza göre,

00:32.990 --> 00:35.930
bunu bir proje olarak yönetebileceğimizi ve burada birden

00:35.930 --> 00:39.060
fazla dosya derleyebileceğimizi biliyoruz.

00:39.060 --> 00:41.910
Şimdi tsconfig'e bir göz atalım. json dosyası, bu projeyi

00:41.910 --> 00:45.660
yönetmek için çok önemli bir dosya olduğundan, esasen

00:45.660 --> 00:48.100
TypeScript'e bu dosyaları nasıl

00:48.100 --> 00:51.290
derlemesi gerektiğini söyler.

00:51.290 --> 00:55.260
Şimdi, adından da anlaşılacağı üzere, derleyicinin nasıl davranacağını

00:55.260 --> 00:56.470
yapılandırabileceğimiz

00:56.470 --> 00:59.620
compilerOptions'a dalmadan önce, kapanış küme

00:59.620 --> 01:03.760
parantezinden önce, ancak bu iç içe kapanış küme parantezinden

01:03.760 --> 01:08.340
sonraki yere kaydıralım ve buraya ekleyebileceğimiz, derleyiciyi veya

01:08.340 --> 01:14.190
derleme adımı davranışını etkilemeyen, bunun yerine derleyicinin bu projeyle nasıl çalıştığını

01:14.190 --> 01:18.410
etkileyen bazı seçenekleri görelim, çünkü orada örneğin bir hariç

01:18.410 --> 01:23.410
tutma seçeneği ayarlayabilirsiniz.

01:23.700 --> 01:26.770
Şimdi buraya exclude eklerseniz, bu bir dizi olacaktır

01:26.770 --> 01:30.450
ve buraya girebileceğiniz şey, tüm proje üzerinde TSC'yi

01:30.450 --> 01:33.480
çalıştırdığınızda derlemeye dahil edilmemesi

01:33.480 --> 01:36.400
gereken dosyaların yollarıdır.

01:36.400 --> 01:38.010
Örneğin, burada analitiği hariç tutmak

01:38.010 --> 01:41.137
istediğimizi söyleyebiliriz. Derlemeden, ve tabii ki, bu burada

01:41.137 --> 01:43.390
pek bir anlam ifade etmiyor, ama sadece bunun nasıl

01:43.390 --> 01:45.300
çalıştığını göstermek için.

01:45.300 --> 01:49.350
Bunu yaparsak ve şimdi tsc'yi yeniden çalıştırırsak ve öncelikle analitikleri

01:49.350 --> 01:51.600
silersem. js'nin yeniden oluşturulup

01:51.600 --> 01:53.730
oluşturulmadığını görebilmemiz için,

01:53.730 --> 01:57.140
şimdi tsc veya tsc'yi izleme modunda çalıştırırsak, hiçbir analiz

01:57.140 --> 01:59.810
görmezsiniz. js dosyası oluşturulur ve bunun

01:59.810 --> 02:02.060
nedeni bu dosyayı hariç tutuyor olmamızdır.

02:02.060 --> 02:03.340
Elbette bu dosya için bu çok

02:03.340 --> 02:04.670
mantıklı değil çünkü genellikle

02:04.670 --> 02:07.250
onu dahil etmek istiyorum, ancak herhangi bir nedenle

02:07.250 --> 02:09.360
derlenmemesi gereken bir dosyanız varsa,

02:09.360 --> 02:12.440
onu bu şekilde hariç tutabilirsiniz.

02:12.440 --> 02:14.210
Joker karakterlerle de çalışabilirsiniz

02:14.210 --> 02:15.810
ve örneğin, analytics adında

02:15.810 --> 02:20.810
bir dosyanız varsa. dev. ts ve bunu gerçekten derlemek istemezsiniz,

02:20.850 --> 02:25.770
sonu dev ile biten tüm dosyalar diyebilirsiniz.

02:25.770 --> 02:25.770
ts

02:25.770 --> 02:27.790
derlenmemelidir ve bunu buraya

02:27.790 --> 02:29.620
bir yıldız işareti ekleyerek

02:29.620 --> 02:31.630
de yapabilirsiniz, bu temelde bir

02:31.630 --> 02:33.750
joker karakterdir ve artık TypeScript,

02:33.750 --> 02:36.470
. dev. ts dahil.

02:36.470 --> 02:40.037
Buraya yıldız, yıldız, eğik çizgi de ekleyebilirsiniz ve bu,

02:40.037 --> 02:43.080
herhangi bir klasörde bu desene sahip herhangi bir

02:43.080 --> 02:45.770
dosyanın yok sayılacağı anlamına gelir.

02:45.770 --> 02:47.420
Yani bunlar burada ayarlayabileceğiniz

02:47.420 --> 02:49.220
şeyler, burada ayarlamak istediğim

02:49.220 --> 02:51.500
tek şey ve bu genellikle bulacağınız bir ayar,

02:51.500 --> 02:54.103
node_modules'ü hariç tutmak istiyorum ve buradaki fikir,

02:55.409 --> 02:58.260
node_modules içinde sahip olabileceğim herhangi bir TypeScript

02:58.260 --> 03:01.373
dosyasını derlemek istemediğimdir.

03:02.449 --> 03:05.080
Şimdi, node_modules burada paket halinde

03:05.080 --> 03:07.160
yüklediğimiz tüm bağımlılıkları

03:07.160 --> 03:09.570
tutan klasördür. json ve bu bağımlılıkların

03:09.570 --> 03:11.890
bağımlılıkları ve bu nedenle, bunlar

03:11.890 --> 03:14.660
dokunmak istemediğimiz içe aktardığımız üçüncü

03:14.660 --> 03:18.510
taraf kütüphanelerdir ve bu kütüphanelerden herhangi biri bazı

03:18.510 --> 03:20.630
TypeScript kodu gönderirse, kesinlikle

03:20.630 --> 03:22.690
derlemek istemeyiz, bu sadece derleme

03:22.690 --> 03:25.840
sürecimizi yavaşlatır ve en kötü durumda projemizi

03:25.840 --> 03:29.200
bile bozabilir.

03:29.200 --> 03:30.370
Bu nedenle, burada node_modules'ü

03:30.370 --> 03:33.330
hariç tutmak oldukça yaygındır, ancak şunu söyleyeceğim,

03:33.330 --> 03:36.510
exclude seçeneğini hiç belirtmezseniz, node_modules varsayılan

03:36.510 --> 03:41.420
ayar olarak otomatik olarak hariç tutulur, bu nedenle bu seçeneği buraya eklemenize gerçekten

03:41.420 --> 03:43.980
gerek yoktur, bu varsayılan olacaktır, sadece

03:43.980 --> 03:50.570
exclude'un var olduğunu ve hariç tutmak istediğiniz tek şey node_modules ise bunu nasıl kullanabileceğinizi göstermek

03:50.570 --> 03:55.670
istiyorum, exclude anahtarını hiç eklemeniz gerekmez.

03:55.670 --> 03:58.500
Yine de eklerseniz, node_modules ayarlamalısınız

03:58.500 --> 04:01.400
çünkü aksi takdirde bunu hariç tutmayacaktır.

04:01.400 --> 04:04.570
Şimdi exclude'un yanı sıra include'a da sahibiz ve include

04:04.570 --> 04:06.630
bunun tam tersini yapmanıza olanak

04:06.630 --> 04:09.570
tanır, TypeScript'e derleme işlemine hangi dosyaları

04:09.570 --> 04:12.730
dahil etmek istediğinizi özellikle söylemenize olanak

04:12.730 --> 04:16.380
tanır ve burada listelenmeyen hiçbir şey derlenmez, bu nedenle

04:16.380 --> 04:20.620
app. ts burada, tsc'yi yeniden çalıştırdığımda da hiçbir analiz

04:20.620 --> 04:23.470
alamayacağımızı göreceksiniz. ts dosyası veya analiz

04:23.470 --> 04:25.570
yok. js dosyası demeliyim.

04:25.570 --> 04:26.403
Neden?

04:26.403 --> 04:29.230
Çünkü analitik. js include'a dahil değildir

04:29.230 --> 04:32.370
ve dediğim gibi, include anahtarını ayarlarsak, derlemek

04:32.370 --> 04:33.970
istediğimiz her şeyi gerçekten

04:33.970 --> 04:35.810
dahil etmemiz gerekir.

04:35.810 --> 04:40.080
Elbette burada analitik de ekleyebiliriz. ve bu eklemeyle birlikte,

04:40.080 --> 04:43.950
şimdi gördüğünüz gibi analitiği başlatır ve

04:43.950 --> 04:46.740
derleriz. js dosyası veya alternatif

04:46.740 --> 04:49.650
olarak, burada genellikle derlemek istediğimiz dosyaları

04:49.650 --> 04:52.560
içeren bütün bir klasörü belirtiriz.

04:52.560 --> 04:55.520
Bu arada hariç tut, include ile birlikte ayarlanırsa

04:55.520 --> 04:57.160
include'u filtreleyecektir,

04:57.160 --> 05:00.290
bu nedenle include'un bir parçası olan bir klasörün bir

05:00.290 --> 05:01.740
alt klasörünü hariç tutarsak,

05:01.740 --> 05:04.980
hariç tutulan alt klasör hariç tutulacaktır, yani temel

05:04.980 --> 05:08.720
olarak include eksi hariç tut'u derleriz.

05:08.720 --> 05:10.420
Elbette burada include ayarlamak istemiyorum,

05:10.420 --> 05:12.520
tüm TypeScript dosyalarını derlemek istiyorum

05:12.520 --> 05:15.050
ve bu nedenle bu konuda endişelenmeme gerek yok, tek ihtiyacım

05:15.050 --> 05:17.200
olan node_modules'ü hariç tutmak ve açıkladığım

05:17.200 --> 05:18.930
gibi, teorik olarak bunu eklememe bile

05:18.930 --> 05:20.280
gerek yok çünkü varsayılan olarak

05:20.280 --> 05:22.423
hariç tutulacaktır.

05:23.260 --> 05:25.310
Şimdi bir de dosyalar seçeneğiniz var,

05:25.310 --> 05:27.560
bu tek tek dosyalara işaret etmenize olanak

05:27.560 --> 05:30.870
tanır, bu yüzden biraz include gibidir, ancak burada dahil etmek

05:30.870 --> 05:34.200
istediğiniz tüm klasörleri belirtemezsiniz, bunun yerine gerçekten

05:34.200 --> 05:36.020
sadece derlemek istediğiniz tek tek

05:36.020 --> 05:38.220
dosyaları belirtirsiniz, bu sadece ücretsiz

05:38.220 --> 05:40.710
dosyalarla çalışacağınızı bildiğiniz daha küçük

05:40.710 --> 05:45.210
projeler için bir seçenek olabilir ve bazı nedenlerden dolayı dokunmak istemediğiniz

05:45.210 --> 05:46.770
birkaç başka TypeScript dosyanız

05:46.770 --> 05:48.560
varsa, dosya listesini bu şekilde

05:48.560 --> 05:51.340
ayarlayabilirsiniz.

05:51.340 --> 05:53.360
Gerçekte, bu ayara o kadar sık

05:53.360 --> 05:55.740
ihtiyaç duymayabilirsiniz.

05:55.740 --> 05:58.530
Bu nedenle, buradaki temel derleme veya proje

05:58.530 --> 06:00.910
yönetimi seçenekleri bu kadar.

06:00.910 --> 06:03.900
Elbette, derleyicinin kendisi ve derleme

06:03.900 --> 06:08.230
adımı sırasında nasıl davranacağı hakkında belirtebileceğimiz

06:08.230 --> 06:10.793
çok daha fazla şey var.
