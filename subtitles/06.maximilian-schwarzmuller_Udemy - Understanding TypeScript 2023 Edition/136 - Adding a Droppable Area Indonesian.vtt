WEBVTT

00:02.180 --> 00:04.910
Instruktur: Secara visual, kita dapat menarik dan

00:04.910 --> 00:07.240
melepas tetapi secara teknis dalam JavaScript

00:07.240 --> 00:10.410
tentu saja, skrip kita tidak tahu apa yang terjadi.

00:10.410 --> 00:12.030
Tetapi bagi kita manusia tentu saja,

00:12.030 --> 00:14.810
jelas bahwa kita menyeret item yang tepat ini di sini.

00:14.810 --> 00:16.300
Tetapi jika kita melihat

00:16.300 --> 00:20.320
kode kita, bagaimana JavaScript tahu apa yang diseret ke mana?

00:20.320 --> 00:21.980
Bagaimana kita memperbarui keadaan kita

00:21.980 --> 00:24.440
berdasarkan informasi yang kita miliki sekarang?

00:24.440 --> 00:26.690
Itu tidak akan mungkin terjadi.

00:26.690 --> 00:28.810
Jadi untuk membuatnya bekerja dalam

00:28.810 --> 00:30.840
JavaScript, kita harus kembali ke

00:30.840 --> 00:33.960
kelas item yang dapat diseret, item proyek.

00:33.960 --> 00:36.710
Di sana, di dragStartHandler, mencatat kejadian

00:36.710 --> 00:38.250
konsol bukanlah semua yang

00:38.250 --> 00:39.950
harus kita lakukan.

00:39.950 --> 00:42.200
Sebenarnya kita tidak perlu melakukan itu sama sekali.

00:42.200 --> 00:45.070
Sebagai gantinya, sekarang mari kita gunakan objek peristiwa

00:45.070 --> 00:48.210
kita di sini karena memiliki properti transfer data.

00:48.210 --> 00:50.440
Ini khusus untuk peristiwa seret, bahwa

00:50.440 --> 00:53.280
Anda memiliki properti transfer data seperti itu.

00:53.280 --> 00:55.330
Dan pada properti itu, Anda dapat melampirkan

00:55.330 --> 00:57.530
data ke peristiwa seret dan nantinya Anda

00:57.530 --> 00:59.520
akan dapat mengekstrak data itu pada

00:59.520 --> 01:01.390
saat jatuh dan peramban dalam JavaScript

01:01.390 --> 01:03.730
di belakang layar, akan menyimpan data itu selama

01:03.730 --> 01:06.430
operasi seret dan memastikan bahwa data yang Anda

01:06.430 --> 01:09.470
dapatkan saat jatuh adalah data yang sama dengan yang Anda

01:09.470 --> 01:12.020
lampirkan di sini.

01:12.020 --> 01:15.520
Untuk itu Anda bisa memanggil, setData, pada transfer data,

01:15.520 --> 01:18.910
tetapi transfer data sebenarnya bisa saja null.

01:18.910 --> 01:21.080
Jadi kita harus menambahkan tanda seru di sini, kita

01:21.080 --> 01:23.460
tentu saja tahu bahwa itu tidak akan nol di sini.

01:23.460 --> 01:25.700
Anda mungkin bertanya-tanya, mengapa bisa nol?

01:25.700 --> 01:29.060
Nah, peristiwa seret selalu merupakan jenis peristiwa yang

01:29.060 --> 01:31.340
sama tetapi berdasarkan pendengar mana

01:31.340 --> 01:34.190
yang memicunya atau peristiwa persis mana yang Anda

01:34.190 --> 01:37.520
dengarkan, transfer data belum tentu tersedia.

01:37.520 --> 01:39.896
Jadi tidak semua event yang berhubungan dengan

01:39.896 --> 01:42.640
drag memberikan Anda objek event yang memiliki objek

01:42.640 --> 01:44.073
transfer data.

01:45.320 --> 01:46.620
Namun, dragStartHandler

01:46.620 --> 01:49.080
yang menyala pada event mulai seret, memilikinya,

01:49.080 --> 01:52.840
jadi di sini kita bisa memanggil setData dengan aman.

01:52.840 --> 01:56.330
Dan sekarang setData mengambil dua argumen di sini.

01:56.330 --> 01:59.900
Argumen pertama adalah pengidentifikasi format data,

01:59.900 --> 02:01.320
dan di sana Anda memiliki

02:01.320 --> 02:04.970
beberapa kemungkinan format yang tersedia.

02:04.970 --> 02:08.210
Terlampir, Anda akan menemukan penyelaman mendalam tentang seret dan lepas dengan

02:08.210 --> 02:10.890
JavaScript di mana Anda dapat mempelajari lebih banyak tentangnya.

02:10.890 --> 02:12.270
Anda juga akan belajar lebih banyak

02:12.270 --> 02:15.140
tentang hal ini dalam kursus Panduan Lengkap JavaScript saya.

02:15.140 --> 02:18.390
Di sini kita membutuhkan format text/plain yang berarti

02:18.390 --> 02:20.010
kita hanya akan melampirkan

02:20.010 --> 02:25.430
beberapa data yang diminta teks biasa yang ditransfer, dan itu penting.

02:25.430 --> 02:28.250
Kita tidak akan melampirkan objek kita di sini, proyek

02:28.250 --> 02:29.740
kita sendiri, kita hanya akan

02:29.740 --> 02:31.390
terus terjebak.

02:31.390 --> 02:34.340
Jadi, bukan proyek lengkap yang bisa dirender di sini.

02:34.340 --> 02:37.955
Sebaliknya, sebenarnya cukup untuk melampirkan ID

02:37.955 --> 02:41.645
proyek karena ini nantinya akan memungkinkan kita untuk

02:41.645 --> 02:44.870
mengambil proyek itu dari state kita.

02:44.870 --> 02:47.320
Jadi, melampirkan ID adalah semua yang perlu kita lakukan.

02:47.320 --> 02:50.240
Kita hanya ingin mentransfer sejumlah kecil data, ini

02:50.240 --> 02:52.053
juga akan menghemat memori.

02:53.100 --> 02:56.300
Jadi sekarang dengan itu, kita melampirkan data ke peristiwa seret.

02:56.300 --> 02:58.330
Satu hal lain yang ingin saya lakukan adalah,

02:58.330 --> 03:00.610
pada transfer data di mana kita lagi-lagi harus

03:00.610 --> 03:02.340
menambahkan tanda seru, saya akan

03:02.340 --> 03:05.430
mengatur properti effectAllowed ke move.

03:05.430 --> 03:08.610
Ini pada dasarnya mengontrol bagaimana kursor akan terlihat,

03:08.610 --> 03:12.440
dan memberi tahu browser sedikit tentang maksud kita, bahwa kita berencana

03:12.440 --> 03:15.200
untuk memindahkan elemen dari A ke B.

03:15.200 --> 03:16.760
Alternatifnya adalah copy, di

03:16.760 --> 03:19.230
mana Anda akan mendapatkan kursor yang berbeda yang

03:19.230 --> 03:20.820
mengindikasikan kepada pengguna

03:20.820 --> 03:23.120
bahwa Anda sedang menyalin dan bukan memindahkan,

03:23.120 --> 03:25.140
tetapi di sini kita ingin memindahkan elemen

03:25.140 --> 03:26.580
yang berarti pada saat drop,

03:26.580 --> 03:28.810
kita menghapusnya di tempat aslinya dan menambahkannya

03:28.810 --> 03:31.360
ke tempat yang baru.

03:31.360 --> 03:34.940
Jadi sekarang data dilampirkan di sini dan itu adalah langkah nomor satu.

03:34.940 --> 03:36.870
Sekarang mari kita kembali ke tempat

03:36.870 --> 03:38.470
di mana kita ingin drop terjadi,

03:38.470 --> 03:40.360
yaitu daftar proyek.

03:40.360 --> 03:43.400
Di sana, itu dimulai di dragLeaveHandler.

03:43.400 --> 03:46.370
Sekarang dalam aplikasi ini, dalam proyek ini di sini,

03:46.370 --> 03:49.200
kita hanya memiliki satu operasi seret dan lepas

03:49.200 --> 03:51.500
dan itu adalah proyek kita di sini.

03:51.500 --> 03:54.970
Dalam aplikasi yang lebih besar, Anda mungkin memiliki bagian yang berbeda

03:54.970 --> 03:57.220
pada halaman yang dapat diseret dan dijatuhkan

03:57.220 --> 04:01.080
dan Anda tidak ingin membuat semuanya dapat dijatuhkan di mana-mana.

04:01.080 --> 04:06.080
Jadi oleh karena itu, di sini, di dragOverHandler, yang menyala ketika Anda memasuki

04:06.230 --> 04:09.580
area yang dapat diseret dengan item yang melekat pada

04:09.580 --> 04:11.860
mouse, saya ingin memeriksa apakah seretan

04:11.860 --> 04:14.970
benar-benar diizinkan di sini.

04:14.970 --> 04:19.546
Untuk itu, saya akan memeriksa apakah acara. dataTransfer, di sini tersedia

04:19.546 --> 04:21.060
juga, jadi jika itu

04:21.060 --> 04:22.950
tersedia, dan kemudian,

04:22.950 --> 04:25.500
jika tersedia, properti jenis

04:25.500 --> 04:29.140
transfer data memiliki nilai pertama

04:29.140 --> 04:34.140
yang sama dengan text/plain.

04:34.300 --> 04:39.280
Artinya, apakah data yang dilampirkan ke peristiwa seret kita,

04:39.280 --> 04:42.390
apakah formatnya seperti itu?

04:42.390 --> 04:43.360
Yang tentu saja karena

04:43.360 --> 04:45.030
itulah format yang kita atur

04:45.030 --> 04:47.320
di dragStartHandler di sini.

04:47.320 --> 04:50.490
Jadi, misalnya, di sini tidak memungkinkan untuk menjatuhkan gambar atau sesuatu

04:50.490 --> 04:51.380
seperti itu yang akan

04:51.380 --> 04:53.180
memiliki format data yang berbeda.

04:53.180 --> 04:56.173
Saya baru saja mengizinkan penurunan teks biasa.

04:57.170 --> 04:59.450
Tentu saja saya sekarang juga perlu mengganti

04:59.450 --> 05:01.020
garis bawah dengan event lagi

05:01.020 --> 05:03.280
karena saya merujuknya di sini.

05:03.280 --> 05:07.150
Sekarang jika itu masalahnya maka saya tahu saya ingin mengizinkan penurunan jadi

05:07.150 --> 05:09.070
saya akan memperbarui latar belakang.

05:09.070 --> 05:11.620
Dan satu hal penting lainnya yang harus kita lakukan, Anda

05:11.620 --> 05:13.960
harus menelepon acara. mencegahKesalahan.

05:13.960 --> 05:15.950
Tetapi mengapa kita harus menyebutnya?

05:15.950 --> 05:18.860
Karena dalam JavaScript, drag and drop bekerja

05:18.860 --> 05:22.480
sedemikian rupa sehingga drop sebenarnya hanya diperbolehkan,

05:22.480 --> 05:26.119
sehingga event drop hanya akan terpicu pada sebuah elemen,

05:26.119 --> 05:29.649
jika dalam drag overHandler pada elemen yang sama Anda

05:29.649 --> 05:32.750
memanggil preventDefault.

05:32.750 --> 05:35.360
Anda bisa memikirkan hal ini sebagai berikut.

05:35.360 --> 05:38.870
Standar untuk peristiwa seret dan lepas JavaScript adalah

05:38.870 --> 05:41.350
tidak mengizinkan penurunan sehingga Anda

05:41.350 --> 05:44.889
harus mencegah standar dalam drag overHandler untuk memberi

05:44.889 --> 05:48.120
tahu JavaScript dan browser bahwa untuk elemen ini,

05:48.120 --> 05:49.670
dalam hal ini untuk bagian

05:49.670 --> 05:52.980
ini untuk kelas tanpa proyek ini Anda ingin mengizinkan

05:52.980 --> 05:54.870
penurunan.

05:54.870 --> 05:57.920
Jadi hanya jika Anda melakukan ini adalah dragOverHandler, event

05:57.920 --> 06:00.020
drop akan benar-benar terpicu ketika pengguna

06:00.020 --> 06:01.220
melepaskannya.

06:01.220 --> 06:02.910
Jika tidak, jika pengguna melepaskannya,

06:02.910 --> 06:05.060
event drop tidak akan muncul.

06:05.060 --> 06:07.090
Jadi dengan itu, drop handler pada

06:07.090 --> 06:08.960
akhirnya akan dieksekusi tentu

06:08.960 --> 06:12.620
saja, karena sekarang kita mengizinkan hal ini terjadi.

06:12.620 --> 06:16.440
Jadi di sini, di drop handler kita sekarang dapat menerima event, dan

06:16.440 --> 06:20.610
untuk saat ini mari kita konsol saja. log peristiwa di sini seperti ini

06:20.610 --> 06:23.003
untuk melihat apakah ini berhasil.

06:23.940 --> 06:28.100
Sekarang kita simpan semuanya, kita tambahkan item baru

06:28.100 --> 06:30.220
di sini, dan saya seret ini.

06:30.220 --> 06:33.430
Jika saya menjatuhkannya di sini dalam proyek yang sudah selesai,

06:33.430 --> 06:36.490
Anda melihat peristiwa seret ini ditembakkan di sini.

06:36.490 --> 06:39.360
Dan itu berasal dari baris 236 yang memang

06:39.360 --> 06:43.050
merupakan baris ini dalam drop handler.

06:43.050 --> 06:45.950
Sekarang jika kita memeriksa peristiwa seret di sini di peramban,

06:45.950 --> 06:47.447
Anda lihat kita memiliki banyak

06:47.447 --> 06:50.830
data di sini dan kita juga memiliki properti transfer data.

06:50.830 --> 06:52.920
Dan di sana Anda melihat efek yang

06:52.920 --> 06:54.320
kami izinkan, yaitu Move,

06:54.320 --> 06:57.930
dan Anda juga tidak akan melihat apa pun di sana.

06:57.930 --> 07:01.600
Nah, hanya karena data sudah dihapus setelah

07:01.600 --> 07:04.510
ini dimasukkan ke dalam konsol.

07:04.510 --> 07:06.100
Dan karena kita memasukkan objek

07:06.100 --> 07:08.160
di sini dan objek adalah tipe referensi, maka

07:08.160 --> 07:10.830
kita melihat snapshot terbaru di mana data hilang.

07:10.830 --> 07:13.360
Sebenarnya pada saat kita menjatuhkan ini,

07:13.360 --> 07:16.910
kita akan dapat mengekstrak data dari transfer data.

07:16.910 --> 07:18.360
Dan saya bisa membuktikannya kepada Anda.

07:18.360 --> 07:20.960
Tentu saja kita bisa mengakses transfer data

07:20.960 --> 07:23.210
dan di sana Anda memiliki metode getData,

07:23.210 --> 07:26.580
dan sekarang kita ingin mendapatkan data dengan format

07:26.580 --> 07:29.560
text/plain ini dan itu harus menjadi ID proyek yang

07:29.560 --> 07:34.560
kita lampirkan ke paket transfer data kita pada item proyek.

07:35.060 --> 07:37.179
Jadi jika sekarang kita simpan

07:37.179 --> 07:39.690
ini dan kita tambahkan kembali proyek

07:39.690 --> 07:41.050
di sini, dan seret ini

07:41.050 --> 07:46.050
di sini, Anda lihat ini di sini memang, adalah ID dari item proyek ini.

07:46.600 --> 07:47.920
Kita bisa melihatnya

07:47.920 --> 07:50.880
jika kita memeriksanya karena kita juga menambahkannya

07:50.880 --> 07:55.124
di sini sebagai ID, 0. 2167, terlihat seperti ID ini bagi saya.

07:55.124 --> 07:59.170
Jadi, kita berhasil mentransfer ID.

07:59.170 --> 08:00.490
Sekarang kita hampir sampai di sana.

08:00.490 --> 08:04.100
Sekarang kita hanya perlu memperbarui state kita di belakang layar

08:04.100 --> 08:06.163
dan kemudian me-render ulang DUI.
