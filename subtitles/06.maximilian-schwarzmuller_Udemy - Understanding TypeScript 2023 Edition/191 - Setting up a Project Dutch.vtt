WEBVTT

00:02.290 --> 00:03.280
Instructeur: Laten

00:03.280 --> 00:06.110
we beginnen met onze Node typescript applicatie.

00:06.110 --> 00:08.750
Nu zou je kunnen denken dat we nu een complexe setup

00:08.750 --> 00:11.170
nodig hebben met webpack en zo, maar dat is eigenlijk

00:11.170 --> 00:12.410
niet zo.

00:12.410 --> 00:16.270
We gebruiken het tsc commando om onze bestanden te compileren.

00:16.270 --> 00:18.160
En dan kunnen we het node-commando gebruiken om onze

00:18.160 --> 00:19.890
gecompileerde bestanden uit te voeren.

00:19.890 --> 00:21.700
Dat is alles wat we hier nodig hebben.

00:21.700 --> 00:25.960
Toch zal ik hier een project opzetten met npm init, zodat we een

00:25.960 --> 00:28.810
pakket krijgen. json bestand want omdat we hier

00:28.810 --> 00:32.250
een normale Node applicatie maken, installeren we enkele pakketten

00:32.250 --> 00:36.240
van derden zoals Express. js.

00:36.240 --> 00:38.470
En ik wil ook een extra hulpmiddel installeren

00:38.470 --> 00:40.950
dat ons ontwikkelingsproces vereenvoudigt.

00:40.950 --> 00:44.630
Dus voer hier npm init uit in een lege map naar keuze.

00:44.630 --> 00:48.190
U kunt hier desgewenst alle standaardinstellingen bevestigen, en daarna

00:48.190 --> 00:50.540
hebt u een pakket. json bestand dat er

00:50.540 --> 00:52.750
ongeveer zo uit zou moeten zien.

00:52.750 --> 00:56.210
Draai nu ook tsc --init om dit project te initialiseren

00:56.210 --> 00:59.390
als een typescript project, zodat je deze tsconfig

00:59.390 --> 01:01.860
krijgt. json bestand dat

01:01.860 --> 01:04.313
u nu kunt vinden in uw vereisten.

01:05.770 --> 01:09.020
En daar heb ik al de eerste aanpassing die ik wil maken.

01:09.020 --> 01:13.300
Het doel hier kan gemakkelijk worden ingesteld op bijvoorbeeld es2018, afhankelijk

01:13.300 --> 01:16.090
van de node-versie die je gebruikt, maar als je de nieuwste

01:16.090 --> 01:19.630
gebruikt, moet deze moderne JavaScript-syntaxis zeker worden

01:19.630 --> 01:21.380
ondersteund.

01:21.380 --> 01:24.220
Module kan bij commonjs blijven, maar dan

01:24.220 --> 01:27.460
wil ik hier ook moduleResolution toevoegen en

01:27.460 --> 01:29.010
deze op node zetten.

01:29.010 --> 01:33.350
Dit vertelt typescript gewoon hoe je verschillende bestanden en

01:33.350 --> 01:35.483
imports samen zullen werken.

01:36.410 --> 01:37.640
En we moeten dit op node zetten

01:37.640 --> 01:40.020
om er zeker van te zijn dat alles correct werkt.

01:40.020 --> 01:42.470
Ik stel hier ook mijn outDir in, geef

01:42.470 --> 01:44.790
commentaar en stel het in op dist, en

01:44.790 --> 01:46.990
mijn rootDir op src omdat ik mijn

01:46.990 --> 01:49.600
typescript broncode wil scheiden.

01:49.600 --> 01:50.700
En dan de uitvoer die de

01:50.700 --> 01:53.170
eigenlijke JavaScript-bestanden zullen zijn

01:53.170 --> 01:55.733
die we met behulp van node kunnen uitvoeren.

01:56.820 --> 01:58.850
Voor het overige vind ik de strikte modus prima,

01:58.850 --> 02:00.710
maar natuurlijk kun je dit alles afstemmen

02:00.710 --> 02:03.030
op je persoonlijke wensen en voorkeuren.

02:03.030 --> 02:06.320
Daar heb je tenslotte alles over geleerd in deze cursus.

02:06.320 --> 02:08.830
En daarmee kunnen we deze configuratie opslaan.

02:08.830 --> 02:11.070
Je vindt trouwens ook deze zeer elementaire startopstelling

02:11.070 --> 02:12.460
in de bijlage.

02:12.460 --> 02:14.120
U kunt deze configuratie opslaan.

02:14.120 --> 02:16.170
En ik maak ook een src map aan waar

02:16.170 --> 02:18.130
we onze broncode schrijven,

02:18.130 --> 02:20.230
onze typescript broncode.

02:20.230 --> 02:23.020
En dat is het deel waar ik nu in wil duiken.

02:23.020 --> 02:26.370
We bouwen nu onze applicatie met typescript

02:26.370 --> 02:27.960
in de src-map.

02:27.960 --> 02:30.200
En aangezien we een eenvoudige webserver bouwen en we

02:30.200 --> 02:32.920
ook Express willen gebruiken. js daar, zal ik eerst

02:32.920 --> 02:36.120
wat afhankelijkheden hier installeren.

02:36.120 --> 02:38.440
Met npm install --save, wil ik hier

02:38.440 --> 02:41.040
express installeren wat het Express framework

02:41.040 --> 02:44.100
voor Node is. js die je natuurlijk niet altijd

02:44.100 --> 02:45.680
nodig hebt, maar hier wil ik

02:45.680 --> 02:48.440
een Node Express applicatie bouwen.

02:48.440 --> 02:51.500
En het zal het body-parser pakket installeren dat

02:51.500 --> 02:54.403
ons helpt inkomende request bodies te parsen.

02:55.290 --> 02:58.180
Voorlopig is dat alles wat betreft mijn productieafhankelijkheden.

02:58.180 --> 03:00.110
We kunnen later meer toevoegen.

03:00.110 --> 03:01.523
Dus laten we hier op enter drukken.

03:02.960 --> 03:04.120
En met dat geÃ¯nstalleerd,

03:04.120 --> 03:07.540
laten we eens kijken naar de ontwikkelingsafhankelijkheden.

03:07.540 --> 03:11.450
Die installeer ik met npm install --save-dev, en daar wil ik modemon

03:11.450 --> 03:13.330
installeren, een tool waarmee we

03:13.330 --> 03:16.340
een bestand kunnen uitvoeren met Node, maar die vervolgens

03:16.340 --> 03:18.210
het bestand en de map waarin het bestand

03:18.210 --> 03:19.820
staat, en alle submappen in de

03:19.820 --> 03:22.690
gaten houdt op wijzigingen.

03:22.690 --> 03:24.050
Telkens wanneer een bestand verandert,

03:24.050 --> 03:26.030
wordt de Node-server opnieuw opgestart.

03:26.030 --> 03:27.620
Dit zal de ontwikkeling gewoon

03:27.620 --> 03:29.510
versnellen omdat het onze Node-applicatieserver

03:29.510 --> 03:31.490
automatisch herstart telkens als we de

03:31.490 --> 03:33.500
broncode wijzigen.

03:33.500 --> 03:36.180
We moeten de server opnieuw opstarten als de code verandert,

03:36.180 --> 03:39.430
omdat onze server anders nog steeds op de oude code draait, maar handmatig

03:39.430 --> 03:41.340
opnieuw opstarten is vervelend, dus we

03:41.340 --> 03:44.190
kunnen dit niet versnellen met nodemon.

03:44.190 --> 03:47.323
En op dit moment is dat het eigenlijk.

03:49.290 --> 03:50.340
Dus laten we hier op enter drukken

03:50.340 --> 03:52.360
en deze ontwikkelingsafhankelijkheid installeren.

03:52.360 --> 03:54.760
Het zal niet de laatste zijn die we nodig hebben in deze cursus,

03:54.760 --> 03:56.660
maar voor het moment zitten we goed.

03:56.660 --> 03:58.830
Dus laten we wachten tot dit klaar is.

03:58.830 --> 04:00.130
De installatie is dus voltooid,

04:00.130 --> 04:01.450
en laten we nu beginnen met het

04:01.450 --> 04:04.773
schrijven en maken van een heel eenvoudige Node Express toepassing.
