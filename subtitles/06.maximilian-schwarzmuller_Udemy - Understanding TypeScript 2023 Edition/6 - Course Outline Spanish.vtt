WEBVTT

00:02.130 --> 00:04.900
Instructor: Este curso está repleto de contenido.

00:04.900 --> 00:06.940
Ya casi hemos terminado de empezar y a partir

00:06.940 --> 00:09.500
de ahora nos meteremos de lleno en TypeScript y en

00:09.500 --> 00:11.667
todas sus emocionantes características

00:11.667 --> 00:13.850
y las aprenderemos paso a paso.

00:13.850 --> 00:16.210
Empezaremos con los fundamentos de TypeScripts, por supuesto.

00:16.210 --> 00:18.800
El núcleo de los tipos, cómo funciona en general,

00:18.800 --> 00:20.880
algunas de las nuevas características

00:20.880 --> 00:22.930
que añade, y todo lo que necesitas saber

00:22.930 --> 00:25.320
para entender bien TypeScript.

00:25.320 --> 00:27.690
A partir de entonces vamos a profundizar en el

00:27.690 --> 00:29.590
compilador de TypeScript y la configuración

00:29.590 --> 00:32.310
del mismo porque es súper importante que entiendas

00:32.310 --> 00:35.480
lo que puedes configurar allí y lo que hacen todos estos diferentes

00:35.480 --> 00:37.450
ajustes, así que vamos a echar un vistazo

00:37.450 --> 00:40.840
más de cerca a eso en este módulo.

00:40.840 --> 00:43.900
A continuación, exploraremos las características de la próxima generación

00:43.900 --> 00:45.850
de JavaScript soportadas en TypeScript.

00:45.850 --> 00:48.880
Cómo funcionan y cómo se pueden utilizar en TypeScript.

00:48.880 --> 00:51.500
Continuaremos con las clases y las interfaces,

00:51.500 --> 00:55.000
un concepto súper importante en parte también en vanilla JavaScript

00:55.000 --> 00:57.350
en el caso de las clases, pero con las interfaces

00:57.350 --> 00:59.510
también tenemos una característica completamente

00:59.510 --> 01:01.600
nueva de TypeScript y entenderás qué

01:01.600 --> 01:03.550
son, qué hacen y por qué podríamos querer

01:03.550 --> 01:06.210
usarlas.

01:06.210 --> 01:08.190
A partir de entonces, es el momento de profundizar.

01:08.190 --> 01:10.490
Vamos a echar un vistazo a algunos tipos avanzados

01:10.490 --> 01:13.280
y a las características avanzadas de TypeScript en general

01:13.280 --> 01:15.040
llevándolo al siguiente nivel allí

01:15.040 --> 01:16.640
y construyendo sobre los fundamentos

01:16.640 --> 01:20.110
que ya hemos aprendido hasta este punto.

01:20.110 --> 01:22.630
Otra función avanzada, que sin duda

01:22.630 --> 01:27.210
merece su propia sección, es la función de genéricos.

01:27.210 --> 01:28.910
En este módulo aprenderás

01:28.910 --> 01:31.160
qué es eso y por qué es muy, muy

01:31.160 --> 01:32.650
útil.

01:32.650 --> 01:34.570
Seguido de los decoradores.

01:34.570 --> 01:37.360
Los decoradores son una característica muy interesante

01:37.360 --> 01:40.550
también añadida por TypeScript y tendremos una mirada más

01:40.550 --> 01:43.810
cercana a los decoradores y también construiremos algunos

01:43.810 --> 01:46.200
decoradores realmente útiles en ese módulo

01:46.200 --> 01:50.100
y después habremos aprendido mucho sobre TypeScript.

01:50.100 --> 01:52.660
Ahora, el curso está organizado de tal manera

01:52.660 --> 01:56.460
que muestro todas estas características individuales en demostraciones

01:56.460 --> 01:59.040
simples relativamente pequeñas.

01:59.040 --> 02:01.730
Ahora, para que también tengas una visión más amplia

02:01.730 --> 02:04.640
y veas cómo aplicarías todas estas características

02:04.640 --> 02:08.140
en un proyecto real, vamos a construir precisamente eso.

02:08.140 --> 02:10.400
Tendremos un módulo completo en el que

02:10.400 --> 02:14.420
construiremos un proyecto entero con TypeScript desde cero para que

02:14.420 --> 02:17.720
veas muchas de estas características, la mayoría de estas

02:17.720 --> 02:20.090
características que has aprendido hasta

02:20.090 --> 02:21.920
este punto, en acción y verás cómo

02:21.920 --> 02:23.680
funcionan juntas y por qué simplifican

02:23.680 --> 02:28.160
el proceso de construcción de un proyecto de este tipo.

02:28.160 --> 02:29.940
Una vez que hayamos terminado de construir

02:29.940 --> 02:31.770
este proyecto, identificaremos un

02:31.770 --> 02:34.420
nuevo problema y aprenderemos a resolverlo trabajando

02:34.420 --> 02:36.450
con espacios de nombres y módulos que nos

02:36.450 --> 02:38.100
ayudarán a hacer nuestro código

02:38.100 --> 02:40.570
más manejable y legible.

02:40.570 --> 02:42.600
A partir de ahí, también exploraremos

02:42.600 --> 02:44.350
Webpack con TypeScript.

02:44.350 --> 02:47.690
Webpack es una herramienta de construcción que usamos en el desarrollo

02:47.690 --> 02:49.530
web moderno de front-end y puedes usarla

02:49.530 --> 02:52.970
combinada con TypeScript para obtener una mejor configuración del proyecto

02:52.970 --> 02:55.520
que simplemente hace ciertas cosas más fáciles y te permite

02:55.520 --> 02:57.990
obtener lo mejor de los mundos molestos.

02:57.990 --> 02:59.850
Una gran experiencia de desarrollo

02:59.850 --> 03:02.170
y también un código que funciona realmente

03:02.170 --> 03:04.120
bien para sus usuarios finales.

03:04.120 --> 03:06.320
Una vez que hayamos terminado con eso, tendremos

03:06.320 --> 03:08.710
una imagen muy sólida de TypeScript y de cómo trabajar

03:08.710 --> 03:10.180
con él en los proyectos.

03:10.180 --> 03:13.250
Ahora, lo que necesitarás en muchos proyectos reales son

03:13.250 --> 03:15.183
las bibliotecas de terceros, así que

03:15.183 --> 03:16.820
vamos a echar un vistazo a eso porque

03:16.820 --> 03:20.250
hay ciertas bibliotecas de terceros que realmente abrazaron

03:20.250 --> 03:22.280
TypeScript y han construido en el soporte

03:22.280 --> 03:24.630
de TypeScript, pero también hay muchas bibliotecas

03:24.630 --> 03:26.600
que no lo hacen y vamos a echar un vistazo

03:26.600 --> 03:29.030
a cómo podemos trabajar con ambos tipos de bibliotecas

03:29.030 --> 03:34.520
de una gran manera en los proyectos de TypeScript.

03:34.520 --> 03:36.630
Bueno y luego hay algunos escenarios

03:36.630 --> 03:39.620
específicos que merecen sus propios módulos.

03:39.620 --> 03:41.570
Tendremos un módulo entero sobre

03:41.570 --> 03:44.320
React con TypeScript, cómo puedes construir

03:44.320 --> 03:47.540
una aplicación entera de React sólo con TypeScript,

03:47.540 --> 03:49.452
y también un módulo entero sobre

03:49.452 --> 03:53.260
NodeJS y el script de tipo de extremo expreso para que también tengas

03:53.260 --> 03:55.390
grandes ejemplos para estos casos

03:55.390 --> 03:58.910
de uso muy populares y específicos de TypeScript donde de

03:58.910 --> 04:01.270
repente puedes crear aplicaciones de

04:01.270 --> 04:03.630
React o Node de una manera totalmente nueva

04:03.630 --> 04:06.760
con un lenguaje totalmente nuevo.

04:06.760 --> 04:09.260
Así que hay mucho contenido interesante en el curso.

04:09.260 --> 04:10.970
No perdamos tiempo.

04:10.970 --> 04:12.720
Veamos cómo se puede sacar el máximo provecho

04:12.720 --> 04:15.263
del curso y, a partir de entonces, entremos en materia.
