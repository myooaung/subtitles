WEBVTT

00:01.639 --> 00:05.320
講師：さて､ 面白いのはすべてallowJsです｡

00:05.320 --> 00:07.590
allowJsと､ ついでにcheckJsを使えば､

00:07.590 --> 00:11.620
常にJavaScriptファイルをコンパイルに含めることができます｡

00:11.620 --> 00:13.747
allowJsを使うと､ JavaScriptファイルはscriptタイプでコンパイルされるので､

00:13.747 --> 00:19.813
たとえ末尾が.NETでなくともコンパイルされます｡

00:19.813 --> 00:19.813
ts,

00:19.813 --> 00:22.266
type script は checkJs を使ってコンパイルします｡

00:22.266 --> 00:26.079
checkJs はコンパイルしませんが､ 構文をチェックしてエラーの可能性を報告します｡

00:26.079 --> 00:28.212
タイプスクリプトを本当に使いたいわけではないが､

00:28.212 --> 00:29.934
いくつかの機能を利用したい場合に便利である｡

00:29.934 --> 00:38.487
タイプスクリプトは､ JavaScriptにあるような任意のタイプのみを効果的に扱うことができるため､ これらのオプションを有効にすれば､

00:38.487 --> 00:42.540
そのようなことができる｡

00:42.540 --> 00:44.170
このプロジェクトではこの機能は必要ありません｡

00:44.170 --> 00:54.782
このプロジェクトでは､ タイプスクリプトファイルから派生したJavaScriptファイルをダブルコンパイルしないようにしたいので､ インクルードと除外の設定を少し調整しなければなりませんが､

00:54.782 --> 00:57.218
タイプスクリプトをまったく使用したくないプロジェクトや､

00:57.218 --> 01:09.393
何らかの理由でタイプスクリプトファイルの隣にバニラJavaScriptファイルがあり､ バニラJavaScriptファイルもチェックしたい場合に使用できます｡

01:10.530 --> 01:12.923
ここで少し話を進めますが､ jsxはreact

01:12.923 --> 01:17.050
jsをサポートするオプションですが､ ここではあまり重要ではありませんし､

01:17.050 --> 01:21.550
宣言や宣言マップもここでは重要ではありません｡

01:21.550 --> 01:24.830
Dtsファイルは､ あなたが他の人にあなたのプロジェクトをライブラリとして出荷している場合､ 基本的にあなたのプロジェクトにあるすべての型を記述するマニフェストファイルが必要な場合に問題になる高度な概念である､

01:24.830 --> 01:36.022
それはそのような.Dtsファイルである｡

01:36.022 --> 01:36.022
d. tsファイルです｡ 

01:36.022 --> 01:39.403
ソースマップは面白いですけどね｡ 
