WEBVTT

00:02.150 --> 00:03.360
Instrutor: Agora dentro de uma

00:03.360 --> 00:06.310
interface, você também pode adicionar o modificador somente leitura.

00:06.310 --> 00:10.780
Não se pode acrescentar público ou privado ou algo parecido.

00:10.780 --> 00:13.300
Isto não é possível em uma interface, mas você

00:13.300 --> 00:15.610
pode adicionar somente leitura para deixar

00:15.610 --> 00:19.470
claro que esta propriedade em qualquer objeto que você construiu com

00:19.470 --> 00:22.710
base nesta interface deve ser definida somente uma vez e é

00:22.710 --> 00:26.030
somente leitura depois, de modo que não possa ser alterada

00:26.030 --> 00:28.440
após a inicialização do objeto.

00:28.440 --> 00:31.893
Isto também é algo, se em vez disso usarmos um tipo, que você pode usar

00:33.220 --> 00:36.180
em um tipo se quiser, então, novamente, estas duas coisas

00:36.180 --> 00:38.800
são muito semelhantes aqui, mas é mais comum ou visto

00:38.800 --> 00:41.510
mais frequentemente que se você realmente quiser trabalhar

00:41.510 --> 00:43.790
com um objeto, você usa uma interface para isso,

00:43.790 --> 00:45.730
e somente leitura é apenas mais uma coisa

00:45.730 --> 00:48.620
que você pode adicionar lá como uma característica extra

00:48.620 --> 00:51.400
que você pode configurar.

00:51.400 --> 00:53.320
Com apenas leitura adicionada aqui, a propósito,

00:53.320 --> 00:56.100
você vê que eu não a adicionei aqui na classe.

00:56.100 --> 00:58.170
Eu não adicionei somente leitura aqui

00:58.170 --> 01:00.560
e ainda se eu agora for a um usuário e depois tentar

01:00.560 --> 01:03.460
definir o nome para outra coisa, eu já recebo um erro

01:03.460 --> 01:04.740
aqui porque é somente leitura

01:04.740 --> 01:06.120
e, claro, também recebo isso

01:06.120 --> 01:08.210
se eu salvar e tentar compilar isso, então

01:08.210 --> 01:10.140
a interface está realmente tendo um

01:10.140 --> 01:12.640
efeito aqui uma vez que a implementamos em nossa

01:12.640 --> 01:16.910
classe, embora eu não tenha adicionado somente leitura aqui, a classe sabe

01:16.910 --> 01:19.650
que ela implementa legível e automaticamente assume

01:19.650 --> 01:27.430
que o nome da propriedade, que temos aqui, que precisamos ter por causa da interface, é somente leitura porque é isso que configuramos dentro

01:27.430 --> 01:32.973
da interface, e isso, claro, é muito conveniente também.
