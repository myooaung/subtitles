WEBVTT

00:02.290 --> 00:04.300
Narator: Jadi Anda melihat TypeScript

00:04.300 --> 00:06.700
beraksi dan menawarkan keuntungan besar.

00:06.700 --> 00:10.570
Itu membuat penulisan kode yang bersih menjadi sangat mudah.

00:10.570 --> 00:14.060
TypeScript menambahkan Tipe dan data yang sangat penting.

00:14.060 --> 00:16.810
Dengan Types kita harus lebih eksplisit tentang

00:16.810 --> 00:20.970
bagaimana sesuatu bekerja dan kita dapat menghindari banyak kesalahan yang

00:20.970 --> 00:24.460
tidak diterima dan tidak perlu dengan menggunakan Types.

00:24.460 --> 00:27.640
Selain itu kita juga dapat menggunakan IDE modern IDE

00:27.640 --> 00:31.070
yang memiliki dukungan Jenis bawaan yang dapat mengambil

00:31.070 --> 00:33.130
jenis ini dan memberi kita penyelesaian

00:33.130 --> 00:36.940
otomatis yang lebih baik dan kesalahan bawaan yang ditampilkan

00:36.940 --> 00:39.570
bahkan sebelum kita mengkompilasi kode karena

00:39.570 --> 00:43.050
mereka juga memahami TypeScript.

00:43.050 --> 00:46.870
Namun selain Types dan keuntungan besar yang kita dapatkan sendiri dengan menggunakan

00:46.870 --> 00:49.660
Types kita juga mendapatkan fitur-fitur lain yang ditambahkan

00:49.660 --> 00:51.410
oleh TypeScript.

00:51.410 --> 00:55.170
Kita dapat menggunakan fitur JavaScript generasi berikutnya

00:55.170 --> 00:58.340
yang dapat Anda tulis dan gunakan dalam file TypeScript

00:58.340 --> 01:01.890
kami dan kemudian mereka akan dikompilasi ke kode JavaScript

01:01.890 --> 01:05.630
untuk solusi yang bahkan berfungsi di browser lama.

01:05.630 --> 01:08.170
Jika Anda tahu Bevel, yang merupakan alat yang memungkinkan

01:08.170 --> 01:11.120
kita untuk melakukan itu dengan Vanilla JavaScript juga, itu

01:11.120 --> 01:14.680
sedikit seperti itu, hanya sudah dibangun ke dalam TypeScript.

01:14.680 --> 01:18.350
Kita dapat menggunakan fitur JavaScript modern dan masih menghasilkan

01:18.350 --> 01:21.773
dan mengirimkan kode yang berfungsi di browser lama juga.

01:22.610 --> 01:25.210
TypeScript juga menambahkan fitur-fitur tertentu

01:25.210 --> 01:26.930
yang hanya dipahami oleh TypeScript,

01:26.930 --> 01:29.070
seperti Interfaces dan Generics.

01:29.070 --> 01:32.560
Ini adalah fitur-fitur yang dikompilasi ke JavaScript tetapi tidak harus,

01:32.560 --> 01:35.360
karena fitur-fitur tersebut adalah fitur yang membantu

01:35.360 --> 01:39.610
kita selama pengembangan yang memberi kita kesalahan yang lebih jelas dan membantu

01:39.610 --> 01:42.200
kita menghindari lebih banyak kesalahan.

01:42.200 --> 01:45.660
Jadi, bahkan menambahkan lebih banyak fitur di bagian depan itu

01:45.660 --> 01:47.950
selain Jenis yang sudah kita pelajari.

01:47.950 --> 01:50.900
Ini juga memberi kita fitur-fitur Meta-programming

01:50.900 --> 01:53.700
tertentu seperti Decorators yang saya miliki seluruh

01:53.700 --> 01:55.850
modul dalam kursus ini di mana Anda akan

01:55.850 --> 01:59.520
memahami apa sebenarnya Decorators itu, mengapa mereka begitu meta,

01:59.520 --> 02:01.790
dan mengapa mereka luar biasa.

02:01.790 --> 02:04.230
TypeScript alls sangat dapat dikonfigurasi.

02:04.230 --> 02:06.390
Kami tidak mengkonfigurasinya sejauh ini, tetapi

02:06.390 --> 02:09.350
saya memiliki seluruh modul dalam kursus di mana kami hanya berbicara

02:09.350 --> 02:12.510
tentang kompiler dan cara mengkonfigurasinya.

02:12.510 --> 02:15.700
Dan Anda bisa benar-benar menyempurnakannya sesuai kebutuhan

02:15.700 --> 02:18.960
Anda untuk membuatnya lebih ketat atau lebih longgar dan untuk

02:18.960 --> 02:23.310
memastikan bahwa ia berperilaku persis seperti yang Anda inginkan.

02:23.310 --> 02:26.790
Dan dengan Modern Tooling dengan IDE modern, Anda bahkan

02:26.790 --> 02:30.610
mendapatkan dukungan dalam proyek-proyek non-TypeScript.

02:30.610 --> 02:33.700
IDE yang baru saja Anda lihat, visual studio code, yang bahkan

02:33.700 --> 02:37.740
memberi Anda dukungan yang lebih baik dalam file JavaScript biasa karena

02:37.740 --> 02:41.010
dapat menggunakan beberapa fitur TypeScript di bawah tenda

02:41.010 --> 02:44.710
tanpa Anda secara eksplisit menggunakan TypeScript.

02:44.710 --> 02:47.640
Jadi itu adalah keuntungan gratis yang Anda dapatkan

02:47.640 --> 02:49.810
ketika menyadari TypeScript dan ketika

02:49.810 --> 02:52.020
menggunakan alat modern.

02:52.020 --> 02:54.830
Jadi ada banyak alasan untuk menggunakan TypeScript dan

02:54.830 --> 02:57.460
mungkin itulah mengapa Anda mengambil kursus ini.

02:57.460 --> 03:00.360
Dalam kursus ini kita akan mempelajarinya selangkah demi selangkah

03:00.360 --> 03:03.663
dan kita akan mempelajari semua fitur luar biasa yang ditambahkannya.
