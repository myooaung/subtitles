WEBVTT

00:02.210 --> 00:04.400
Vì vậy, bây giờ, đó là những điều cơ bản về thừa kế.

00:04.400 --> 00:06.900
Chúng ta cũng có thể ghi đè các phương

00:06.900 --> 00:09.810
thức hoặc thuộc tính của lớp cơ sở.

00:09.810 --> 00:13.350
Vì vậy, giả sử trong phần kế toán, tôi muốn thêm phương thức addEmployee

00:13.350 --> 00:15.020
của riêng mình.

00:15.020 --> 00:16.200
Chúng ta có thể làm điều đó.

00:16.200 --> 00:18.500
Chúng ta có thể thêm phương thức của riêng

00:18.500 --> 00:20.120
mình vào đây và lấy tên ở đây.

00:20.120 --> 00:21.330
Hãy cùng nói nào.

00:21.330 --> 00:22.550
Và bây giờ, ở đây, tôi muốn có một

00:22.550 --> 00:23.860
logic khác để thêm điều đó.

00:23.860 --> 00:27.610
Một kiểm tra if bổ sung hoặc kiểm tra if nếu name=Max,

00:27.610 --> 00:29.410
thì tôi muốn quay lại và không

00:29.410 --> 00:31.930
thêm Max làm nhân viên, vì Max hoàn

00:31.930 --> 00:34.770
toàn không phù hợp với việc đó.

00:34.770 --> 00:36.360
Ngược lại, nếu tên không phải là

00:36.360 --> 00:38.050
Max, tôi muốn thêm nhân viên.

00:38.050 --> 00:40.420
Tuy nhiên, bây giờ chúng ta phải đối mặt với một vấn đề khác.

00:40.420 --> 00:44.520
Nếu tôi thử thêm hai nhân viên này, chúng tôi sẽ thấy nhân

00:44.520 --> 00:47.500
viên không phải là thuộc tính đã biết.

00:47.500 --> 00:50.510
Lý do cho điều đó là nhân viên là tư nhân.

00:50.510 --> 00:51.890
Bây giờ, điều đó quan trọng.

00:51.890 --> 00:54.860
Các thuộc tính riêng thực sự chỉ có thể truy cập

00:54.860 --> 00:57.360
được từ bên trong lớp mà chúng được định

00:57.360 --> 01:00.670
nghĩa, không phải các lớp kế thừa từ lớp đó.

01:00.670 --> 01:03.530
Vì vậy, nhân viên có sẵn trong bộ phận, nhưng

01:03.530 --> 01:06.100
không có trong các lớp dựa trên bộ phận.

01:06.100 --> 01:09.040
Vì vậy, bộ phận kế toán không có quyền truy cập trực

01:09.040 --> 01:11.320
tiếp vào tài sản của nhân viên.

01:11.320 --> 01:15.930
Nếu chúng tôi muốn cấp quyền truy cập đó và vẫn đảm bảo rằng đó không phải

01:15.930 --> 01:19.840
là thuộc tính có thể thay đổi từ bên ngoài, chúng tôi có thể

01:19.840 --> 01:22.080
chuyển nó thành được bảo vệ.

01:22.080 --> 01:25.760
Được bảo vệ giống như riêng tư, nhưng không giống như riêng

01:25.760 --> 01:28.280
tư, giờ đây nó không chỉ khả dụng trong

01:28.280 --> 01:32.040
lớp này mà còn trong bất kỳ lớp nào mở rộng lớp này.

01:32.040 --> 01:35.130
Vì vậy, bây giờ chúng tôi có thể truy cập nhân viên từ

01:35.130 --> 01:37.740
bên trong bộ phận kế toán của chúng tôi.

01:37.740 --> 01:41.377
Ở đây, bây giờ tôi có thể thêm một nhân viên nếu đó không phải là Max.

01:41.377 --> 01:43.980
Do đó, bây giờ, nếu tôi đi xuống đó,

01:43.980 --> 01:45.680
và trong sổ kế toán của

01:45.680 --> 01:49.240
mình, tôi muốn thêm một nhân viên tên Max.

01:49.240 --> 01:50.480
Điều này không nên làm việc.

01:50.480 --> 01:52.790
Nếu tôi cố gắng thêm Manu, nó sẽ hoạt động.

01:52.790 --> 01:57.110
Vì vậy, nếu bây giờ chúng tôi lưu nó, và chúng tôi cũng xuất thông tin nhân

01:57.110 --> 01:59.196
viên in ở đây, rồi lưu nó, chúng tôi

01:59.196 --> 02:00.840
sẽ thấy rằng, thực sự, chúng

02:00.840 --> 02:03.120
tôi có một nhân viên ở đó, đó là Manu, vì

02:03.120 --> 02:06.620
logic phương pháp kế toán của riêng tôi cho AddEmployee,

02:06.620 --> 02:08.590
Max đã không được thêm vào.

02:08.590 --> 02:10.017
Vì vậy, điểm mấu chốt ở

02:10.017 --> 02:14.010
đây là bạn A) có thể ghi đè các phương thức của lớp cơ sở của bạn.

02:14.010 --> 02:16.690
Bạn có thể thêm triển khai của riêng mình và

02:16.690 --> 02:18.690
sau đó triển khai đó được sử dụng,

02:18.690 --> 02:21.023
thay vì triển khai của lớp cơ sở.

02:21.023 --> 02:25.130
Và B) bạn cũng phải kiểm soát quyền truy cập

02:25.130 --> 02:28.100
vào các thuộc tính được bảo vệ.

02:28.100 --> 02:29.690
Bởi vì nếu bạn sử dụng private,

02:29.690 --> 02:32.120
bạn thực sự bị hạn chế đối với lớp này, trong

02:32.120 --> 02:36.400
khi protected vẫn khiến nó không thể truy cập được từ bên ngoài, nhưng

02:36.400 --> 02:39.270
khiến nó có thể truy cập được từ bên trong các lớp

02:39.270 --> 02:41.123
mở rộng lớp cơ sở.
