WEBVTT

00:02.220 --> 00:03.053
Giảng viên: Bây giờ,

00:03.053 --> 00:04.920
tôi đã đề cập rằng các giao diện được sử dụng

00:04.920 --> 00:07.114
để xác định cấu trúc của một đối tượng.

00:07.114 --> 00:09.690
Giờ đây, các giao diện cũng có thể được sử dụng để

00:09.690 --> 00:11.750
xác định cấu trúc của một chức năng.

00:11.750 --> 00:14.330
Về cơ bản, đây là sự thay thế cho các loại chức năng

00:14.330 --> 00:15.578
mà bạn đã tìm hiểu.

00:15.578 --> 00:17.890
Cũng như ôn lại nhanh, chúng ta có

00:17.890 --> 00:20.090
thể xác định kiểu của một hàm, ví

00:20.090 --> 00:23.305
dụ, với kiểu tùy chỉnh với từ khóa type.

00:23.305 --> 00:26.380
AddFn cho chức năng thêm mà sau đó có thể

00:26.380 --> 00:29.350
giữ định nghĩa chức năng như thế này.

00:29.350 --> 00:30.830
Nó sẽ trả về một số và

00:30.830 --> 00:32.370
nó sẽ nhận hai đối số

00:32.370 --> 00:35.970
trong đó mỗi đối số cũng thuộc loại số.

00:35.970 --> 00:39.310
Bây giờ, chúng ta có thể tạo một hàm mới add

00:39.310 --> 00:42.860
ở đây có kiểu AddFn và khi chúng ta không khởi

00:42.860 --> 00:45.040
tạo nó mà gán hàm của mình sau

00:45.040 --> 00:46.580
đó, thì tất nhiên, chúng

00:46.580 --> 00:49.470
ta phải đảm bảo rằng hàm này nhận hai đối

00:49.470 --> 00:51.300
số là kiểu số và rằng trong

00:51.300 --> 00:55.170
đó, chúng tôi cũng trả lại một số.

00:55.170 --> 00:56.360
Đây là một cái gì đó mà chúng ta có thể làm.

00:56.360 --> 00:57.843
Đây là những gì bạn đã học được.

00:57.843 --> 01:01.760
Giờ đây, bạn cũng có thể sử dụng một giao diện thay thế cho loại

01:01.760 --> 01:03.077
tùy chỉnh này.

01:03.077 --> 01:06.860
Các giao diện ở đó để xác định cấu trúc của một đối tượng như

01:06.860 --> 01:08.240
tôi đã dạy bạn nhưng cuối

01:08.240 --> 01:10.220
cùng, các hàm chỉ là các đối tượng

01:10.220 --> 01:12.720
và do đó đây là một ngoại lệ nhỏ.

01:12.720 --> 01:15.350
Bạn có thể tạo các loại chức năng với giao diện.

01:15.350 --> 01:18.930
Để đó bạn tạo một giao diện, đặt tên là AddFn

01:18.930 --> 01:20.930
để vẫn giữ tên đó ở đây.

01:20.930 --> 01:23.720
Và bây giờ ở đó, bạn xác định một chút

01:23.720 --> 01:28.300
hàm bằng cách chỉ thêm dấu ngoặc đơn với các đối số của bạn,

01:28.300 --> 01:31.150
ví dụ: a: number, B: number, và sau đó

01:31.150 --> 01:33.980
là dấu hai chấm, không phải mũi tên mà

01:33.980 --> 01:36.810
là dấu hai chấm với kiểu trả về.

01:36.810 --> 01:39.780
Vì vậy, cuối cùng, giống như bạn sẽ định nghĩa một phương

01:39.780 --> 01:41.630
thức như chúng tôi đang thực hiện ở đây

01:41.630 --> 01:45.710
với lời chào, ngoại trừ việc chúng tôi hiện không thêm tên phương thức.

01:45.710 --> 01:47.880
Vì vậy, chúng tôi có một chức năng

01:47.880 --> 01:49.300
ẩn danh nếu bạn muốn gọi

01:49.300 --> 01:52.000
nó như thế này trong giao diện AddFn và TypeScript

01:52.000 --> 01:55.250
hiểu cú pháp đặc biệt này của chức năng ẩn danh này

01:55.250 --> 01:57.800
trong giao diện của bạn và hiểu rằng bạn

01:57.800 --> 02:00.410
muốn sử dụng giao diện này làm loại chức

02:00.410 --> 02:02.070
năng và đây là giao diện của

02:02.070 --> 02:05.360
chức năng của bạn giống.

02:05.360 --> 02:07.650
Vì vậy, bây giờ chúng tôi có thể sử dụng

02:07.650 --> 02:10.440
AddFn ở đây và thực sự, nếu tôi cố gắng chấp nhận

02:10.440 --> 02:11.640
một chuỗi ở đây, chúng

02:11.640 --> 02:13.786
tôi sẽ gặp lỗi vì điều này không thể gán

02:13.786 --> 02:17.060
được, chúng tôi cần có một số thay vì một chuỗi.

02:17.060 --> 02:19.670
Vì vậy, nó chỉ đơn giản là một sự thay thế cho loại tùy chỉnh này.

02:19.670 --> 02:23.010
Tất nhiên, ở đây tôi sẽ tranh luận rằng việc sử dụng loại tùy chỉnh

02:23.010 --> 02:25.020
có lẽ phổ biến hơn một chút, nó cũng ngắn

02:25.020 --> 02:26.470
hơn một chút nhưng đó là một

02:26.470 --> 02:28.340
cú pháp thay thế hay cần lưu ý, đặc biệt

02:28.340 --> 02:30.870
nếu bạn gặp phải điều này trong một số dự án và nếu

02:30.870 --> 02:34.030
không thì bạn sẽ mất gì điều này có nghĩa là, phương pháp ẩn danh

02:34.030 --> 02:35.265
kỳ lạ này.

02:35.265 --> 02:38.993
Chà, cuối cùng nó chỉ là một loại chức năng tùy chỉnh.
