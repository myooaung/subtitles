WEBVTT

00:02.170 --> 00:04.780
-: ดังนั้น เป้าหมายคือการสร้างคอมโพเนนต์รายการสิ่งที่ต้องทำ

00:04.780 --> 00:06.330
และด้วยเหตุนี้ในโฟลเดอร์ต้นทาง

00:06.330 --> 00:08.600
ฉันจะเพิ่มโฟลเดอร์ย่อยใหม่ คอมโพเนนต์ และในนั้นจะมี

00:08.600 --> 00:13.690
"to-doList. tsx" ซึ่งจะเก็บส่วนประกอบรายการสิ่งที่ต้องทำของฉัน

00:13.690 --> 00:15.370
ตอนนี้ เพื่อสร้างองค์ประกอบการตอบสนอง

00:15.370 --> 00:17.030
เราจำเป็นต้องนำเข้า React จาก

00:17.030 --> 00:20.250
"react" มิฉะนั้น JXS จะไม่ทำงานในไฟล์นี้

00:20.250 --> 00:22.820
จากนั้นฉันสร้างค่าคงที่ของรายการสิ่งที่ต้องทำ

00:22.820 --> 00:24.530
ซึ่งเก็บฟังก์ชันลูกศร และแน่นอนว่าไม่จำเป็นต้องเป็นฟังก์ชันลูกศร

00:24.530 --> 00:30.320
คุณสามารถใช้ฟังก์ชันที่มีคีย์เวิร์ดของฟังก์ชันได้เช่นกัน

00:30.320 --> 00:33.160
ตอนนี้เราจะส่งออกสิ่งนี้

00:33.160 --> 00:39.370
ตอนนี้ มาใช้ฟีเจอร์ typescript พิเศษของเรากันเถอะ และมาตั้งค่าประเภทของสิ่งนี้ให้ตอบสนอง

00:39.370 --> 00:39.370
fc

00:39.370 --> 00:42.010
เพื่อระบุว่าสิ่งนี้ไม่ควรเป็นฟังก์ชันปกติ

00:42.010 --> 00:43.950
แต่เป็นองค์ประกอบการทำงาน

00:43.950 --> 00:49.790
ดังนั้นเราจึงได้รับข้อผิดพลาดเนื่องจากเราไม่ได้ส่งคืนสิ่งที่มีคุณสมบัติเป็นองค์ประกอบการตอบสนอง

00:49.790 --> 00:53.250
ดังนั้นในที่นี้ เราควรจะกลับกัน สมมติว่าเป็นรายการที่ไม่มีลำดับ

00:53.250 --> 00:54.850
เนื่องจากฉันต้องการแสดงรายการที่นี่

00:54.850 --> 00:58.000
การส่งคืนรายการที่ไม่มีลำดับสำหรับตอนนี้จึงสมเหตุสมผล

00:58.000 --> 01:02.740
ตอนนี้ในรายการที่ไม่มีลำดับฉันต้องการส่งออกรายการ

01:02.740 --> 01:07.230
ในที่นี้ เราคาดหวังได้ว่าจะได้รับสิ่งที่ต้องทำ และนั่นคืออาร์เรย์

01:07.230 --> 01:09.240
และในอาร์เรย์เรามีวัตถุที่ทุกรายการมี

01:09.240 --> 01:11.690
ID

01:11.690 --> 01:15.627
สมมติว่า t1 สำหรับสิ่งที่ต้องทำและข้อความเช่น

01:15.627 --> 01:20.800
"จบหลักสูตร นี่เป็นเพียงรายการเดียว แต่แน่นอนว่าคุณสามารถมีวัตถุดังกล่าวได้หลายรายการในอาร์เรย์นี้

01:20.800 --> 01:24.620
ในรายการของเรา เราสามารถส่งออกสิ่งที่ต้องทำแบบไดนามิกและแมปลงในรายการของรายการ

01:24.620 --> 01:29.620
ในที่นี้ เราจะดูสิ่งที่ต้องทำทั้งหมด นี่คือฟังก์ชัน JavaScript

01:30.250 --> 01:32.930
ในตัว แน่นอนว่าคือฟังก์ชันแผนที่

01:32.930 --> 01:37.740
และเราจะส่งคืนรายการสำหรับทุกองค์ประกอบในอาร์เรย์นี้และในรายการนั้น

01:37.740 --> 01:41.530
ฉันตั้งค่า "เป็น -ทำ. text" เป็นเนื้อหาในรายการและเพิ่มคีย์พิเศษนี้

01:41.530 --> 01:47.870
ซึ่งจริงๆ แล้ว React ต้องการให้องค์ประกอบซ้ำๆ

01:47.870 --> 01:49.620
อยู่ติดกัน

01:49.620 --> 01:54.130
ที่นี่ เราควรเลือกสิ่งที่ไม่ซ้ำกัน และ ID ควรมีคุณสมบัติเป็นตัวระบุที่ไม่ซ้ำใคร

01:54.130 --> 01:57.710
ด้วยเหตุนี้ เราจึงแสดงรายการสิ่งที่ต้องทำ

01:57.710 --> 02:00.470
ตอนนี้มารวมส่วนประกอบรายการสิ่งที่ต้องทำเข้ากับส่วนประกอบของแอป

02:00.470 --> 02:02.860
และสำหรับสิ่งนี้ เราสามารถไปที่ส่วนประกอบของแอป

02:02.860 --> 02:06.930
นำเข้า "TodoList" จาก "

02:06.930 --> 02:06.930
/components/TodoList"

02:06.930 --> 02:14.350
แบบนี้ ". ส่วนขยาย tsx" จะถูกเพิ่มโดยอัตโนมัติโดยเวิร์กโฟลว์การสร้างที่เราใช้ภายใต้ประทุนที่นี่

02:14.350 --> 02:17.160
จากนั้นภายใน div ของเรา เราสามารถเรนเดอร์

02:17.160 --> 02:18.850
"TodoList" แบบนั้นได้

02:18.850 --> 02:21.440
หากเราบันทึกสิ่งนี้และกลับไปที่หน้าที่ทำงานอยู่

02:21.440 --> 02:24.190
เราจะเห็นสิ่งที่ต้องทำที่นี่

02:24.190 --> 02:25.870
การจัดสไตล์เป็นเรื่องที่แย่มาก และเราสามารถเพิ่มสไตล์ที่ดีกว่านี้ได้ในภายหลัง

02:25.870 --> 02:29.350
แต่สำหรับตอนนี้ ก็น่าจะใช้ได้

02:29.350 --> 02:31.680
ตอนนี้ มันไม่สมจริงเอาซะเลย

02:31.680 --> 02:40.063
เมื่อเรากำลังสร้างแอปรายการสิ่งที่ต้องทำนี้ ภายหลังฉันต้องการเพิ่มสิ่งที่ต้องทำใหม่ด้วยส่วนประกอบแยกต่างหากที่เรายังไม่มี

02:40.063 --> 02:42.920
และเราอาจจะจัดการสิ่งที่ต้องทำที่นี่ในส่วนประกอบแอปนี้

02:42.920 --> 02:55.280
เพราะที่นี่ เราจะมีส่วนประกอบที่เพิ่มสิ่งที่ต้องทำ และส่วนประกอบนั้นจะสามารถพูดคุยกับส่วนประกอบของแอปนี้ได้

02:55.280 --> 02:56.690
ที่นี่ จากนั้นเราจะจัดการอาร์เรย์ของสิ่งที่ต้องทำ

02:56.690 --> 03:01.510
และเพิ่มสิ่งที่ต้องทำในอาร์เรย์นั้น หรือเราลบสิ่งที่ต้องทำออกจากอาร์เรย์นั้น

03:01.510 --> 03:04.220
รายการที่ต้องทำเราจะผ่านอาร์เรย์นั้น

03:04.220 --> 03:06.930
ดังนั้น แม้ว่าเราจะยังไม่ได้จัดการอาร์เรย์นี้ แต่เราอาจมีอาร์เรย์

03:06.930 --> 03:09.270
"todos" ที่ไม่ได้อยู่ในรายการสิ่งที่ต้องทำ

03:09.270 --> 03:11.660
แต่อยู่ในส่วนประกอบของแอป

03:11.660 --> 03:15.010
นั่นเป็นเรื่องจริงมากกว่าที่อาร์เรย์นี้จะลงเอยที่นี่ในภายหลัง

03:15.010 --> 03:16.740
เพื่อให้เราย้ายมันมาที่นี่ได้

03:16.740 --> 03:20.093
ตอนนี้เราต้องส่งต่อไปยัง "TodoList. สำหรับสิ่งนี้ เราสามารถใช้อุปกรณ์ประกอบฉากได้

03:20.930 --> 03:23.600
ดังนั้นในรายการสิ่งที่ต้องทำ คุณสามารถมีอุปกรณ์ประกอบฉากได้

03:23.600 --> 03:25.640
ชื่อนั้นขึ้นอยู่กับเรา เนื่องจากเรากำลังกำหนดส่วนประกอบนี้

03:25.640 --> 03:30.350
เราสามารถกำหนดได้ว่าควรตั้งชื่ออุปกรณ์ประกอบฉากอย่างไร

03:30.350 --> 03:32.100
เราสามารถฟีดในอาร์เรย์ "todos" ของเรา

03:32.100 --> 03:35.010
ตอนนี้ เราเห็นแล้วว่า IDE ไม่ชอบสิ่งนี้ และถ้าฉันพยายามบันทึกสิ่งนี้

03:35.010 --> 03:37.820
เราก็พบข้อผิดพลาดในการคอมไพล์ด้วย

03:37.820 --> 03:40.650
เราได้รับข้อผิดพลาดในการรวบรวมเนื่องจากคุณสมบัติ

03:40.650 --> 03:45.400
"รายการ" ไม่มีอยู่ในประเภทใดก็ตาม

03:45.400 --> 03:47.830
ดังนั้นโดยทั่วไปแล้วจะไม่มีอยู่ในประเภททางแยกนี้

03:47.830 --> 03:50.440
ซึ่งในตอนท้ายจะกำหนดโครงสร้างของอุปกรณ์ประกอบฉากที่ได้รับจาก

03:50.440 --> 03:52.070
"TodoList. เนื่องจากเมื่อใช้ typescript กับ

03:52.070 --> 03:55.300
React คุณจะต้องมีความชัดเจนเกี่ยวกับประเภทที่คุณกำลังใช้งาน

03:55.300 --> 04:02.110
นั่นไม่ได้หมายความว่าคุณบอก typescript ว่านี่เป็นฟังก์ชันชนิดพิเศษ ไม่ใช่ แต่ยังหมายความว่าถ้าคุณใช้อุปกรณ์ประกอบฉากในส่วนประกอบบางอย่าง

04:02.110 --> 04:11.020
คุณจะบอก typescript ว่าอุปกรณ์ประกอบฉากเหล่านี้ควรมีลักษณะอย่างไร มีโครงสร้างอย่างไร

04:11.020 --> 04:14.860
ดังนั้นในคอมโพเนนต์รายการสิ่งที่ต้องทำ เราได้รับอุปกรณ์ประกอบฉากที่นี่

04:14.860 --> 04:17.420
ใช่แล้ว นั่นคือ React ปกติ

04:17.420 --> 04:19.400
และในอุปกรณ์ประกอบฉากเราอาจมีคุณสมบัติของไอเท็มของเรา

04:19.400 --> 04:23.530
ดังนั้นเราจึงมีพร็อพชื่อ "ไอเท็ม"

04:23.530 --> 04:26.200
และนั่นคือสิ่งที่ฉันพูดไว้ที่นี่:

04:26.200 --> 04:30.323
"ฉันมีไอเท็มชิ้นนี้ ปัญหาตอนนี้คือสิ่งนี้จะใช้งานได้ในทางเทคนิค แต่

04:31.420 --> 04:33.430
typescript ยังไม่ยกเลิก

04:33.430 --> 04:35.067
เราไม่ได้บอก typescript จริงๆ ว่าพร็อพของเราควรมีคุณสมบัติ

04:35.067 --> 04:37.140
"รายการ" ที่นี่

04:37.140 --> 04:45.063
เพื่อบอกว่าเราสามารถใช้ข้อเท็จจริงที่ว่าประเภทส่วนประกอบของฟังก์ชันนี้เป็นประเภททั่วไป

04:45.063 --> 04:46.913
ประเภททั่วไปที่เราสามารถกำหนดอุปกรณ์ประกอบฉากเพิ่มเติมทั้งหมดนอกเหนือจากอุปกรณ์ประกอบฉากเริ่มต้นของเด็ก

04:47.840 --> 04:52.170
ซึ่งทุกองค์ประกอบมี ซึ่งเราคาดหวังไว้ที่นี่

04:52.170 --> 04:54.250
ดังนั้นเราจึงสามารถเพิ่มวงเล็บมุมที่นี่และเพิ่มวัตถุของเราที่อธิบายโครงสร้างของวัตถุ

04:54.250 --> 05:06.170
"props" ที่เราได้รับที่นี่ หรือเพื่อให้โค้ดของเราเล็กลง เราทำสิ่งนี้ในส่วนต่อประสานพิเศษที่นี่ และนั่นเป็นทางเลือกโดยสิ้นเชิง

05:06.170 --> 05:12.350
ที่นี่เราสามารถมีรายการอุปกรณ์ประกอบฉากที่ต้องทำ และนี่อธิบายว่าอุปกรณ์ประกอบฉากของเรามีลักษณะอย่างไร

05:12.350 --> 05:15.120
และที่นี่ ฉันคาดว่าจะได้รับคีย์ "รายการ"

05:15.120 --> 05:18.260
ซึ่งเรามีอาร์เรย์ของอ็อบเจกต์ โดยอ็อบเจ็กต์ทุกตัวมี

05:18.260 --> 05:23.380
ID ซึ่งเป็นสตริง และมีข้อความซึ่งเป็นสตริง

05:23.380 --> 05:26.120
นั่นคือข้อมูลที่เรากำลังจัดการที่นี่

05:26.120 --> 05:30.020
เรามีอาร์เรย์ของวัตถุที่มีสตริง

05:30.020 --> 05:32.850
ID และสตริงข้อความ

05:32.850 --> 05:34.370
นั่นคือสิ่งที่ฉันคาดว่าจะได้รับที่นี่คือ

05:34.370 --> 05:36.070
"อุปกรณ์ประกอบฉาก" อาร์เรย์ของวัตถุดังกล่าว

05:36.070 --> 05:38.940
และถ้าเราอยู่ที่นี่ เราสามารถชี้ไปที่อินเทอร์เฟซรายการสิ่งที่ต้องทำ

05:38.940 --> 05:40.700
และตอนนี้ทุกอย่างเรียบร้อยดี ตอนนี้ typescript เข้าใจว่าที่นี่

05:40.700 --> 05:42.670
เราจะได้ props ซึ่งเราจะมี item

05:42.670 --> 05:55.000
prop และ item prop จะเป็นอาร์เรย์ที่เรามีรหัส ID และคีย์ข้อความในทุกองค์ประกอบอาร์เรย์

05:55.000 --> 05:58.870
ตอนนี้ถ้าเราบันทึกสิ่งนี้ มันจะคอมไพล์ และเราจะได้ผลลัพธ์ที่ใช้งานได้อีกครั้ง

05:58.870 --> 05:59.850
นี่เป็น typescript ที่ใช้กับ React

05:59.850 --> 06:02.390
เราไม่ได้ใช้มันเพื่อบอก React หรือเพื่อบอก typescript

06:02.390 --> 06:06.830
ว่านี่คือส่วนประกอบที่ใช้งานได้ แต่ยังเกี่ยวกับอุปกรณ์ประกอบฉากที่ส่วนประกอบนี้ได้รับในที่สุด

06:06.830 --> 06:10.000
และสิ่งนี้ช่วยเราได้มากในเรื่องความปลอดภัยของประเภท

06:10.000 --> 06:13.490
มันเลี่ยงที่ผมมาที่นี่โดยบังเอิญคิดว่ามันชื่อ

06:13.490 --> 06:15.130
"todos. ไม่ ไม่รองรับ เราได้รับข้อผิดพลาด

06:15.130 --> 06:19.060
มันคือรายการ

06:19.060 --> 06:21.165
คุณจะเห็นพวกเขาได้รับการเติมอัตโนมัติที่นี่

06:21.165 --> 06:23.330
ดังนั้นการเขียนโค้ดจึงง่ายขึ้นมากเมื่อทำงานกับ

06:23.330 --> 06:24.910
typescript ที่นี่ และแน่นอนว่าเป็นข้อได้เปรียบทั้งหมดของ typescript: ทำให้การเขียนโค้ดง่ายขึ้น หลีกเลี่ยงข้อผิดพลาดที่ไม่จำเป็น

06:24.910 --> 06:28.400
และอย่างที่คุณเห็น มันยังทำเช่นนั้นในแอปตอบโต้อีกด้วย

06:28.400 --> 06:30.670
แน่นอนว่าเรายังทำไม่เสร็จ

06:30.670 --> 06:34.420
ในขณะนี้ สิ่งที่ต้องทำของเราที่นี่ไม่เคยเปลี่ยนแปลง

06:34.420 --> 06:36.640
และฉันต้องการเปลี่ยนสิ่งนั้น

06:36.640 --> 06:44.120
ฉันต้องการมีส่วนประกอบที่ช่วยให้เราสามารถเพิ่มสิ่งที่ต้องทำใหม่ได้

06:44.120 --> 06:46.080
เรามาทำงานกันต่อไป
