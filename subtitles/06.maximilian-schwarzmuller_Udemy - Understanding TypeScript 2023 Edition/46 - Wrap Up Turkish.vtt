WEBVTT

00:02.210 --> 00:04.150
Eğitmen: Ve bu modül için hepsi bu kadar.

00:04.150 --> 00:07.040
TypeScript derleyicisine, onu nasıl yapılandırabileceğinize

00:07.040 --> 00:08.140
ve kodunuzu gerçekten istediğiniz

00:08.140 --> 00:10.360
şekilde derlediğinden nasıl emin olabileceğinize

00:10.360 --> 00:12.800
çok ayrıntılı bir şekilde baktık.

00:12.800 --> 00:15.190
Tüm bu farklı seçeneklere, özellikle de doğru

00:15.190 --> 00:17.030
kod yazmanıza ve garip hatalarla,

00:17.030 --> 00:19.610
örneğin katı null kontrolleriyle karşılaşabileceğiniz

00:19.610 --> 00:21.850
garip çalışma zamanı hatalarıyla karşılaşmamanıza

00:21.850 --> 00:24.100
olanak tanıyan katı seçeneklere bir göz attık

00:24.100 --> 00:28.960
ve buna ek olarak, hata ayıklamaya, Chrome ve VS Code'u VS Code içinden hata ayıklayabileceğiniz

00:28.960 --> 00:34.830
şekilde nasıl kolayca yapılandırabileceğinize bir göz attık.

00:34.830 --> 00:37.480
Chrome'un içinden kaynak haritaları ve Kaynaklar sekmesi

00:37.480 --> 00:38.900
ile hata ayıklama elbette her

00:38.900 --> 00:40.390
zaman bir seçenektir.

00:40.390 --> 00:42.850
Burada da anahtar, tsconfig dosyasında oluşturulacak

00:42.850 --> 00:45.710
şekilde yapılandırdığınız kaynak eşlemeleridir;

00:45.710 --> 00:47.350
bunlar JavaScript dosyalarınızın

00:47.350 --> 00:51.210
yanında bulunan bu eşleme dosyalarıdır.

00:51.210 --> 00:54.600
Temel olarak JavaScript dosyalarınız ve TypeScript dosyalarınız

00:54.600 --> 00:56.300
arasında hata ayıklayıcı için köprü

00:56.300 --> 00:57.820
görevi görürler.

00:57.820 --> 01:00.160
Böylece projelerimizi nasıl yöneteceğimizi

01:00.160 --> 01:02.680
biraz daha iyi biliyoruz.

01:02.680 --> 01:03.870
Şimdi TypeScript ve JavaScript

01:03.870 --> 01:06.173
ile başka neler yapabileceğimizi görelim.
