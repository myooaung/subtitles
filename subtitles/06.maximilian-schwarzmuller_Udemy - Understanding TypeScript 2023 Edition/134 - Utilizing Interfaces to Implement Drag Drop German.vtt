WEBVTT

00:02.190 --> 00:05.380
Kursleiter: Kommen wir nun zum Ende dieses Projekts,

00:05.380 --> 00:09.590
und das beinhaltet die Möglichkeit, ein Projekt, das wir in einer

00:09.590 --> 00:12.390
der Boxen haben, z. B. in der Box für aktive Projekte,

00:12.390 --> 00:16.410
in die andere Box zu ziehen und abzulegen.

00:16.410 --> 00:19.310
Das Projekt wird also im Grunde genommen von einem

00:19.310 --> 00:22.780
aktiven Projekt zu einem abgeschlossenen Projekt.

00:22.780 --> 00:25.430
Es geht also nicht nur um die visuelle Aktualisierung,

00:25.430 --> 00:27.800
es geht nicht nur um das Ziehen und Ablegen und

00:27.800 --> 00:31.050
die Aktualisierung der Benutzeroberfläche, sondern auch um

00:31.050 --> 00:35.470
die Anpassung der Daten hinter den Kulissen in unserer Zustandsverwaltungsklasse,

00:35.470 --> 00:37.790
dem Projektzustand, in dem wir eine Liste von

00:37.790 --> 00:39.960
Projekten verwalten, wobei zu beachten ist,

00:39.960 --> 00:42.990
dass jedes Projekt eine Statuseigenschaft hat, die wir ebenfalls

00:42.990 --> 00:45.420
aktualisieren müssen.

00:45.420 --> 00:48.610
Es gibt also zwei Dinge, die wir implementieren müssen: Ziehen

00:48.610 --> 00:51.800
und Ablegen und dann all diese Zustands- und Datenaktualisierungen

00:51.800 --> 00:53.410
hinter den Kulissen.

00:53.410 --> 00:56.220
Beginnen wir nun mit Drag and Drop, und dazu werden

00:56.220 --> 00:59.870
wir Drag and Drop grundsätzlich so implementieren, wie wir es in

00:59.870 --> 01:02.960
Vanilla-Java-Skript tun würden, was Sie zum Beispiel

01:02.960 --> 01:04.790
in meinem vollständigen Java-Skript-Leitfaden

01:04.790 --> 01:06.970
nachlesen können.

01:06.970 --> 01:09.690
Im Grunde geht es darum, eine Reihe von Ereignis-Listenern zu

01:09.690 --> 01:11.960
implementieren, und natürlich werden Sie in den nächsten

01:11.960 --> 01:14.800
Vorlesungen sehen, wie das in diesem Modul funktioniert, aber wir

01:14.800 --> 01:17.350
werden es im Typescript-Stil implementieren, also werden

01:17.350 --> 01:21.150
wir es durch die Verwendung einiger Typescript-Funktionen erweitern.

01:21.150 --> 01:24.240
Also, fangen wir an, und wie möchte ich es mit Typescript-Funktionen

01:24.240 --> 01:25.790
erweitern?

01:25.790 --> 01:28.423
Nun, ich möchte hier Schnittstellen wiederverwenden.

01:29.280 --> 01:32.120
Drag-and-Drop-Schnittstellen, aber nicht

01:32.120 --> 01:35.470
nur, um die Struktur einiger Objekte zu definieren,

01:35.470 --> 01:39.060
wie wir zuvor Schnittstellen verwendet haben, sondern um

01:39.060 --> 01:42.010
wirklich einen Vertrag einzurichten, den bestimmte

01:42.010 --> 01:44.590
Klassen unterzeichnen können, um diese

01:44.590 --> 01:46.970
Klassen zu zwingen, im Grunde bestimmte

01:46.970 --> 01:49.690
Methoden zu implementieren, die uns bei Drag-and-Drop

01:49.690 --> 01:51.980
helfen.

01:51.980 --> 01:55.250
Um genau zu sein, denke ich an zwei Schnittstellen, und natürlich

01:55.250 --> 01:58.590
wird die Verwendung dieser Schnittstellen optional sein, aber

01:58.590 --> 02:00.920
dies wird uns erlauben, nun, im Grunde einen

02:00.920 --> 02:04.465
Code bereitzustellen, der eine Klasse dazu zwingt, alles zu implementieren,

02:04.465 --> 02:06.340
was sie braucht, um draggable zu sein

02:06.340 --> 02:09.810
oder ein gültiges Drop-Ziel zu sein, was, wenn wir eine größere

02:09.810 --> 02:15.160
Anwendung bauen, uns helfen könnte, saubereren und verständlicheren Code zu schreiben, besonders

02:15.160 --> 02:19.080
wenn wir in einem Team arbeiten.

02:19.080 --> 02:21.710
Von welchen Schnittstellen spreche ich also?

02:21.710 --> 02:23.160
Ich möchte eine Schnittstelle

02:23.160 --> 02:24.617
haben, die ich draggable nennen

02:26.200 --> 02:28.660
werde, und ich werde eine zweite Schnittstelle haben,

02:28.660 --> 02:31.060
die ich drag target nennen werde.

02:31.060 --> 02:32.950
Meine Idee dabei ist, dass wir die draggable-Schnittstelle

02:32.950 --> 02:35.710
zu jeder Klasse hinzufügen können, die ein Element rendert,

02:35.710 --> 02:38.030
das draggable sein kann.

02:38.030 --> 02:41.810
In unserem Beispiel wäre das die Projektelementklasse.

02:41.810 --> 02:44.170
Die Projektelementklasse ist für das

02:44.170 --> 02:46.600
Rendern dieser Projektelemente verantwortlich,

02:46.600 --> 02:49.230
und das sollten die ziehbaren Teile sein, und

02:49.230 --> 02:53.320
die Boxen, aktive Projekte und abgeschlossene Projekte, also sollte

02:53.320 --> 02:57.880
unsere Projektlistenklasse hier Ziehziele sein.

02:57.880 --> 03:02.100
Was erzwingen diese Schnittstellen nun, um implementiert oder zu den Klassen

03:02.100 --> 03:03.890
hinzugefügt zu werden?

03:03.890 --> 03:05.760
Beginnen wir mit draggable.

03:05.760 --> 03:09.550
Hier benötigen wir im Grunde zwei Ereignis-Listener und

03:09.550 --> 03:12.540
somit zwei Handler für diese Ereignisse.

03:12.540 --> 03:17.070
Ein Handler für den Start des Ziehens, der eine Methode ist, und ein

03:17.070 --> 03:19.733
Handler für das Ende des Ziehens, denn

03:22.020 --> 03:24.180
bei der Implementierung des Ziehens

03:24.180 --> 03:26.070
und Ablegens benötigen Sie

03:26.070 --> 03:29.840
einen Listener, der auf den Start des Zieh-Ereignisses

03:29.840 --> 03:32.330
und möglicherweise auch auf das Ende

03:32.330 --> 03:34.540
des Zieh-Ereignisses hört, damit

03:34.540 --> 03:40.440
Sie dort alle gewünschten Aktualisierungen vornehmen können.

03:40.440 --> 03:42.580
Der Handler für das Drag-Start-Ereignis

03:42.580 --> 03:44.225
erhält ein Ereignisobjekt,

03:44.225 --> 03:47.370
das wir Drag-Ereignis nennen, das ist ein eingebauter

03:47.370 --> 03:51.010
Typ, Typen mit Options-Libs, wegen unseres TS-Konflikt-Setups

03:51.010 --> 03:53.210
und der Libs, die wir dort hinzufügen, und

03:53.210 --> 03:55.330
es wird nichts zurückgeben, es wird eine

03:55.330 --> 03:57.600
Methode sein, die ausgeführt wird, aber

03:57.600 --> 03:59.882
die dann nur etwas tut, zum Beispiel das Drag-Ereignis

03:59.882 --> 04:03.930
konfiguriert, aber nicht zurückgibt.

04:03.930 --> 04:06.970
Jetzt bekommt der Drag-End-Handler ein ähnliches Ereignis,

04:06.970 --> 04:10.730
er bekommt auch ein Drag-Ereignis und alles gibt nichts zurück.

04:10.730 --> 04:13.130
Natürlich werden Sie in wenigen Sekunden sehen,

04:13.130 --> 04:15.810
wie wir diese anwenden, also halten Sie sich an mich.

04:15.810 --> 04:17.810
Wie sieht es nun mit der Zielvorgabe für den Luftwiderstand aus?

04:17.810 --> 04:20.530
Nun, für das Ziel, also die Box, auf die wir

04:20.530 --> 04:22.620
etwas ziehen können, gibt es drei

04:22.620 --> 04:26.280
Event-Handler, die ich implementieren möchte.

04:26.280 --> 04:28.593
Ein Dragover-Handler,

04:29.440 --> 04:31.800
ein Drop-Handler und ein

04:31.800 --> 04:34.280
Drag Leave-Handler.

04:34.280 --> 04:36.470
Was bewirken diese Dinge nun?

04:36.470 --> 04:39.370
Sie müssen einen Drag-Over-Handler implementieren,

04:39.370 --> 04:41.960
wenn Sie Drag &amp; Drop in Java Script implementieren,

04:41.960 --> 04:45.140
um dem Browser in Java Script zu signalisieren, dass

04:45.140 --> 04:48.060
das Objekt, über das Sie etwas ziehen, ein gültiges

04:48.060 --> 04:50.160
Ziehziel ist.

04:50.160 --> 04:53.840
Wenn Sie im Drag-over-Handler nicht das Richtige tun,

04:53.840 --> 04:56.410
ist das Ablegen nicht möglich.

04:56.410 --> 04:57.980
Sie benötigen den Drop-Handler,

04:57.980 --> 05:00.760
um auf den tatsächlichen Drop zu reagieren.

05:00.760 --> 05:08.650
Wenn also der Drag-Over-Handler den Drop mit dem Drop-Handler zulässt, können wir unsere Daten

05:08.650 --> 05:11.960
und die Benutzeroberfläche aktualisieren.

05:11.960 --> 05:32.190
Der Drag-Learn-Handler kann nützlich sein, wenn wir zum Beispiel dem Benutzer ein visuelles Feedback geben, wenn er oder sie etwas über das Feld zieht, z. B. wenn wir die Hintergrundfarbe ändern.

05:32.190 --> 05:36.250
Alle drei Handler erhalten ein Drag-Ereignis und

05:36.250 --> 05:37.990
geben nichts zurück,

05:37.990 --> 05:41.473
also aktualisieren wir sie entsprechend.

05:44.070 --> 05:47.250
Und auch für diesen letzten Betreuer hier.

05:47.250 --> 05:49.810
Und jetzt haben wir einige Schnittstellen konfiguriert,

05:49.810 --> 05:52.840
die für sich genommen nicht viel bewirken, aber jetzt können

05:52.840 --> 05:55.710
wir sie verwenden, und ich möchte mit dem Projektelement

05:55.710 --> 05:57.490
beginnen.

05:57.490 --> 06:00.380
Hier ist die Komponente, hier ist das Projektelement, und

06:00.380 --> 06:02.710
Sie erinnern sich vielleicht daran, dass eine

06:02.710 --> 06:05.100
Schnittstelle nicht nur dazu verwendet werden

06:05.100 --> 06:08.540
kann, einen benutzerdefinierten Objekttyp zu definieren, sondern

06:08.540 --> 06:12.290
dass man sie auch als Vertrag für eine Klasse verwenden kann.

06:12.290 --> 06:15.760
Sie können implements aufrufen oder hier nach Ihrem Klassennamen und nach möglichen

06:15.760 --> 06:16.750
Erweiterungen, die Sie

06:16.750 --> 06:19.290
vornehmen, implements hinzufügen und dann die Schnittstelle

06:19.290 --> 06:20.900
implementieren.

06:20.900 --> 06:24.340
In diesem Fall ist es die ziehbare Schnittstelle.

06:24.340 --> 06:27.250
Wenn Sie dies tun, und ich habe dies gerade formatiert, um es in eine

06:27.250 --> 06:29.820
neue Zeile zu bringen, damit es leichter zu lesen ist.

06:29.820 --> 06:31.393
Wenn Sie das tun, erhalten Sie eine

06:31.393 --> 06:34.460
Fehlermeldung, die besagt, dass die Klasse hier die Schnittstelle

06:34.460 --> 06:38.600
nicht korrekt implementiert, weil die Draggable-Schnittstelle uns dazu zwingt, zwei Methoden

06:38.600 --> 06:40.763
hinzuzufügen, wenn Sie sich erinnern.

06:42.840 --> 06:44.480
Fügen wir sie also hier ein.

06:44.480 --> 06:46.290
Vielleicht werden wir einen Konstruktor laden.

06:46.290 --> 06:49.550
Fügen wir einen Drag-Start-Handler hinzu, der

06:49.550 --> 06:53.610
ein Ereignis vom Typ Drag-Ereignis erhält, und fügen wir

06:53.610 --> 06:56.500
auch unseren Drag-End-Handler hinzu, der

06:56.500 --> 06:59.143
unser Drag-Ereignis empfängt.

06:59.990 --> 07:02.010
Und jetzt haben wir diese beiden Methoden hinzugefügt.

07:02.010 --> 07:05.330
Das allein ermöglicht aber noch nicht das Ziehen und Ablegen.

07:05.330 --> 07:08.900
Es hilft uns einfach, Draggable-Komponenten oder Draggable-Klassen auf

07:08.900 --> 07:11.880
eine einheitliche Weise zu schreiben, so dass wir, wenn wir mehr

07:11.880 --> 07:14.560
und mehr Klassen hinzufügen, die Draggable sein sollen,

07:14.560 --> 07:18.210
immer diese Methoden haben werden, was es einfach einfacher macht, über unseren

07:18.210 --> 07:20.700
Code nachzudenken und unseren Code zu bearbeiten,

07:20.700 --> 07:22.870
besonders wenn wir in einem Team arbeiten, weil

07:22.870 --> 07:25.520
jeder weiß, wo er Arbeit für das Drag-Start-Ereignis

07:25.520 --> 07:27.840
hineinstecken muss.

07:27.840 --> 07:31.340
Was dies natürlich nicht tut, ist, auf ein Drag-Start-Ereignis

07:31.340 --> 07:32.950
zu hören.

07:32.950 --> 07:35.010
Das ist etwas, was wir in der configure-Methode machen

07:35.010 --> 07:36.730
können, die Sie aber schon haben.

07:36.730 --> 07:38.980
Wir können unser gerendertes Element erreichen

07:38.980 --> 07:41.090
und ihm einen Ereignis-Listener hinzufügen,

07:41.090 --> 07:43.890
und das wäre dann das Start-Ereignis des Ziehens.

07:43.890 --> 07:45.780
Das Drag-Start-Ereignis ist ein Ereignis,

07:45.780 --> 07:49.190
ein Standard-Browser-Dom-Ereignis, auf das Sie hören können,

07:49.190 --> 07:51.750
und der Even-Handler, den wir auslösen wollen,

07:51.750 --> 07:53.740
ist natürlich der Drag-Start-Handler,

07:55.320 --> 07:57.793
auf den wir hier zeigen können.

07:59.080 --> 08:00.750
Jetzt wollen wir auch sicher sein, dass

08:00.750 --> 08:02.460
innerhalb der Drag-Start-Handler,

08:02.460 --> 08:04.870
dass dieses Schlüsselwort bezieht sich auf unsere

08:04.870 --> 08:06.560
Klasse und wie Sie lernen, mit Event-Listener,

08:06.560 --> 08:08.530
die standardmäßig nicht der Fall sein würde,

08:08.530 --> 08:11.810
so könnten wir binden hier und binden diese, die gültig wäre, aber wir

08:11.810 --> 08:14.750
haben einen besseren Weg tatsächlich.

08:14.750 --> 08:16.900
Wir haben unseren Auto-Bind-Dekorator hinzugefügt,

08:16.900 --> 08:18.550
also füge ich diesen hier zum Drag-Start-Handler

08:18.550 --> 08:20.303
hinzu.

08:21.210 --> 08:26.070
Wir können hier auch auf das Drag-End-Ereignis hören und auf den

08:26.070 --> 08:28.530
Drag-End-Handler zeigen.

08:28.530 --> 08:30.400
Sie können auch auto bind dort hinzufügen,

08:30.400 --> 08:32.690
wenn Sie auf die Verwendung der vis-Schlüsselwort

08:32.690 --> 08:35.830
hier für den Moment werde ich nur log drag Ende hier, so dass wir

08:35.830 --> 08:37.730
sehen, dass ausgelöst wird, weil hier

08:37.730 --> 08:40.520
habe ich eigentlich nichts Besonderes ich mit ihm tun

08:40.520 --> 08:44.410
wollen und deshalb werde ich auch leer diesen Parameter und im Grunde sagen,

08:44.410 --> 08:47.310
typescript, dass ich nicht mit ihm.

08:47.310 --> 08:49.850
Hier in drag start werden wir event verwenden und im Moment

08:49.850 --> 08:51.730
werde ich nur das Ereignis protokollieren,

08:51.730 --> 08:53.720
wenn dieses Ereignis eintritt.

08:53.720 --> 08:55.610
Das allein wird aber nicht ausreichen.

08:55.610 --> 08:57.000
Wenn Sie alles speichern und hier

08:57.000 --> 08:59.230
ein Projekt hinzufügen, werden Sie sehen, dass Sie

08:59.230 --> 09:01.460
es nicht erneut verschieben können, richtig?

09:01.460 --> 09:04.750
Wenn Sie versuchen, es zu ziehen, wird das nicht

09:04.750 --> 09:07.390
funktionieren, weil Sie auch etwas in

09:07.390 --> 09:09.720
Ihrer HTML-Datei ändern müssen.

09:09.720 --> 09:11.810
Zu diesem Listenelement, das für

09:11.810 --> 09:14.550
jedes Projekt gerendert wird und das Sie ziehen

09:14.550 --> 09:18.380
möchten, müssen Sie das Attribut draggable hinzufügen und auf

09:18.380 --> 09:19.830
true setzen.

09:19.830 --> 09:21.040
Das ist wichtig.

09:21.040 --> 09:24.200
Dies teilt dem Browser mit, dass die Datei gezogen werden kann.

09:24.200 --> 09:28.430
Wenn Sie das gespeichert haben und ein Projekt wieder hinzufügen, sehen

09:28.430 --> 09:30.400
Sie, dass es jetzt tatsächlich verschiebbar

09:30.400 --> 09:32.070
ist, es klebt jetzt an meiner

09:32.070 --> 09:35.720
Maus und wir können es jetzt wirklich gut bewegen.

09:35.720 --> 09:38.530
Auf der rechten Seite sehen Sie auch, dass ein Ziehereignis ausgelöst

09:38.530 --> 09:41.390
wurde, als ich mit dem Ziehen begonnen habe, und wenn ich loslasse, wird

09:41.390 --> 09:43.860
auch das Ereignis zum Beenden des Ziehens ausgelöst.

09:43.860 --> 09:46.510
Unsere Zuhörer sind also verbunden und wir

09:46.510 --> 09:50.540
können ziehen. Jetzt können wir das Drop-Target bearbeiten,

09:50.540 --> 09:53.200
also die Box, in die es gezogen werden kann,

09:53.200 --> 09:56.560
um das Projekt zu dieser Box hinzuzufügen.

09:56.560 --> 09:58.660
Das werde ich auch ganz schnell

09:58.660 --> 10:02.930
bei den Apps machen. css-Datei, auf die Listenelemente, also

10:02.930 --> 10:06.550
auf Projekte LI, werde ich eine weiße Hintergrundfarbe hinzufügen,

10:06.550 --> 10:09.810
einfach damit wir dies ein bisschen besser sehen können.

10:09.810 --> 10:12.350
Hier, beim Projekt LI, habe ich die weiße Farbe hinzugefügt,

10:12.350 --> 10:15.800
damit wir beim Ziehen um das Projekt herum einen weißen Hintergrund

10:15.800 --> 10:17.370
haben, damit es etwas leichter

10:17.370 --> 10:19.150
zu sehen ist.

10:19.150 --> 10:20.840
Das ändert aber nichts an unserem nächsten Schritt.

10:20.840 --> 10:22.700
Wir wollen sein Dropabble machen.
