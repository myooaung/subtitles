WEBVTT

00:02.190 --> 00:05.900
Kursleiter: Nachdem wir die Vererbungsarbeit hinter uns gebracht haben, wollen

00:05.900 --> 00:08.400
wir uns wieder dem Rendern von Listenelementen zuwenden

00:08.400 --> 00:10.590
und dort weitere Details rendern.

00:10.590 --> 00:12.800
Und wie ich bereits erwähnt habe, sollten wir auch dafür

00:12.800 --> 00:14.900
sorgen, dass wir sie unterschiedlich darstellen.

00:14.900 --> 00:18.050
Bisher haben wir einen objektorientierten Ansatz verfolgt,

00:18.050 --> 00:22.440
und zum Beispiel haben wir für unsere Projektliste eine Klasse, und wenn wir diese

00:22.440 --> 00:25.130
Klasse instanziieren, wird hier eine solche Box

00:25.130 --> 00:26.560
gerendert.

00:26.560 --> 00:30.000
Und das Gleiche gilt für die Eingabe. Wir haben eine Projekteingabeklasse,

00:30.000 --> 00:33.460
und wenn wir diese instanziieren, wird dieser Projekteingabebereich

00:33.460 --> 00:34.880
hier oben gerendert.

00:34.880 --> 00:38.330
Warum tun wir jetzt nicht dasselbe für unser Projektelement und

00:38.330 --> 00:42.290
dann innerhalb der Projektliste in gerenderten Projekten, anstatt ein

00:42.290 --> 00:45.030
Listenelement wie dieses zu erstellen, würden wir

00:45.030 --> 00:48.290
einfach unsere Projektelementklasse instanziieren und

00:48.290 --> 00:52.230
im Konstruktor dieser Projektelementklasse würden wir dann die gesamte

00:52.230 --> 00:55.100
Initialisierung usw. durchführen.

00:55.100 --> 00:57.240
Das ist zumindest meine Vorstellung.

00:57.240 --> 00:59.850
Wie immer können Sie das Video hier unterbrechen und es zuerst

00:59.850 --> 01:01.680
alleine ausprobieren, aber nach einer kurzen

01:01.680 --> 01:04.610
Pause, die ich Ihnen gebe, um das Video zu unterbrechen, wenn Sie

01:04.610 --> 01:06.960
wollen, werden wir es gemeinsam tun.

01:09.080 --> 01:12.980
Lassen Sie uns das gemeinsam tun, und dazu füge ich oberhalb

01:12.980 --> 01:17.940
der Projektlistenklasse die Projektelementklasse hinzu, die für das Rendern

01:17.940 --> 01:20.610
eines einzelnen Projektelements verantwortlich

01:20.610 --> 01:22.920
sein wird.

01:22.920 --> 01:25.620
Nun sollte die Projektelementklasse immer die Komponente

01:25.620 --> 01:28.940
erweitern, denn es wird eine Klasse sein, die für die Darstellung

01:28.940 --> 01:31.600
auf dem Bildschirm verantwortlich ist, und dafür

01:31.600 --> 01:34.800
haben wir unsere Komponentenklasse, richtig, dafür bauen

01:34.800 --> 01:36.410
wir sie.

01:36.410 --> 01:40.100
Wir übergeben also eine Vorlage, ein Host-Element und so weiter.

01:40.100 --> 01:43.560
Im Projekt item brauchen wir natürlich einen Konstruktor,

01:43.560 --> 01:47.030
einen Konstruktor, wo wir dann auch super aufrufen müssen.

01:47.030 --> 01:50.650
Und bevor wir super aufrufen, sollten wir diese generischen

01:50.650 --> 01:53.610
Typen für die Basisklasse zum Erben festlegen.

01:53.610 --> 01:56.440
Denken Sie daran, dass der erste Typ, den wir dort

01:56.440 --> 02:00.410
übergeben, das Host-Element ist, d.h. wo wir etwas rendern wollen.

02:00.410 --> 02:02.760
Der zweite generische Typ, den wir übergeben,

02:02.760 --> 02:04.800
ist das Element, das wir rendern.

02:04.800 --> 02:07.040
Im Fall des Projektelements

02:07.040 --> 02:10.550
bedeutet das, dass das erste Element, das wir

02:10.550 --> 02:13.570
übergeben, eine HTML-U-Liste ist, eine

02:13.570 --> 02:15.587
ungeordnete Liste, da jedes

02:15.587 --> 02:17.370
Projektelement innerhalb

02:17.370 --> 02:20.440
unserer ungeordneten Liste gerendert

02:20.440 --> 02:22.550
werden soll.

02:22.550 --> 02:26.160
Das zweite Element ist ein HTML-LI-Element, also das

02:26.160 --> 02:29.313
konkrete Listenelement, das erstellt wird.

02:30.210 --> 02:35.210
Wählen Sie nun super und geben Sie die Id des Elements an, in dem das Projektelement

02:35.280 --> 02:38.210
gerendert werden soll.

02:38.210 --> 02:41.410
Und natürlich ist diese Id nicht fest, denn

02:41.410 --> 02:43.030
wir haben zwei Listen,

02:43.030 --> 02:45.040
in denen das Element gerendert

02:45.040 --> 02:47.480
werden könnte.

02:47.480 --> 02:51.760
Ich erwarte also, dass ich die Id hier im Konstruktor bekomme, dort

02:51.760 --> 02:55.400
möchte ich die Host Id bekommen, sagen wir, die ein String

02:55.400 --> 02:56.233
sein sollte,

02:56.233 --> 02:59.140
den wir an super weiterleiten können.

02:59.140 --> 03:02.220
Das erste, was wir jedoch an super weiterleiten, ist

03:02.220 --> 03:05.520
die Vorlagen-ID für ein einzelnes Listenelement, und

03:05.520 --> 03:07.410
das ist diese Vorlage hier.

03:07.410 --> 03:09.620
Wir können das also einfach einpacken.

03:09.620 --> 03:11.580
Nun ist das natürlich eine sehr einfache Vorlage,

03:11.580 --> 03:13.580
man könnte darüber streiten, ob man das wirklich

03:13.580 --> 03:16.380
braucht, es ist ja nur ein Listenelement, wir könnten das auch

03:16.380 --> 03:18.920
im Code mit dem Element document create erstellen, aber

03:18.920 --> 03:22.560
um unsere Komponenten-Basisklausel wiederverwenden zu können, die sich auf

03:22.560 --> 03:26.240
Vorlagen stützt, werden wir diesen Ansatz verwenden.

03:26.240 --> 03:29.680
Ein einzelnes Projekt ist also die Id der Vorlage, die Id des Hosts

03:29.680 --> 03:32.550
und dann die Id, die ich an den Konstruktor der Basisklausel

03:32.550 --> 03:34.500
weiterleiten möchte.

03:34.500 --> 03:37.150
Um dann die Frage zu beantworten, ob dies

03:37.150 --> 03:40.010
am Anfang oder am Ende gemacht werden soll.

03:40.010 --> 03:43.020
Nun, jedes neue Listenelement sollte eigentlich an das Ende der

03:43.020 --> 03:45.630
Liste angefügt werden, aber das ist ganz Ihnen überlassen,

03:45.630 --> 03:48.450
Sie können es auch an den Anfang setzen, wenn Sie wollen, aber

03:48.450 --> 03:51.150
hier werde ich mich für das Ende entscheiden und deshalb

03:51.150 --> 03:53.423
werde ich hier "false" angeben.

03:54.410 --> 03:57.153
Und dann für das neue Element Id, verkaufen

03:57.153 --> 03:59.330
die Id, die dem neu erstellten Element

03:59.330 --> 04:01.580
zugeordnet werden soll.

04:01.580 --> 04:03.760
Ich erwarte, dass ich das auch von außen bekomme,

04:03.760 --> 04:06.860
denn das wird auch für jeden Projektposten unterschiedlich

04:06.860 --> 04:09.860
sein, wir werden ja mehrere solcher Posten machen.

04:09.860 --> 04:12.240
Hier erwarte ich also die Id, die allesamt eine Zeichenkette

04:12.240 --> 04:15.060
sein soll, die ich dann einfach weiterleite.

04:15.060 --> 04:17.820
Das ist jetzt also der Konstruktor.

04:17.820 --> 04:22.250
Nun wäre es sinnvoll, das Projekt, das zu diesem Projektelement gehört,

04:23.500 --> 04:27.280
in dieser Projektelementklasse zu speichern.

04:27.280 --> 04:31.020
Und mit Projekt meine ich das Projekt, das auf unserer Projektklasse

04:31.020 --> 04:33.770
basiert, die wir dort oben erstellt haben.

04:33.770 --> 04:37.490
Das sind im Grunde die Daten, mit denen wir arbeiten.

04:37.490 --> 04:40.440
Und ich möchte das Projekt, das zu diesem gerenderten Projektelement

04:40.440 --> 04:44.000
gehört, in dieser Projektelementklasse speichern.

04:44.000 --> 04:47.650
Deshalb können wir hier zum Beispiel ein privates Grundstücksprojekt

04:47.650 --> 04:51.510
hinzufügen, das aber vom Typ Projekt sein sollte wie dieses.

04:51.510 --> 04:55.350
Im Konstruktor erhalten wir dann die Id und wir können dies einfach

04:55.350 --> 04:58.090
ändern, um das Projekt hier zu erhalten, und dann

04:58.090 --> 05:00.950
einfach sagen, dass dieses Projekt gleich Projekt

05:00.950 --> 05:04.340
ist, und hier, da jedes Projekt eine Id-Eigenschaft hat, leiten

05:04.340 --> 05:09.440
wir einfach Projekt weiter.

05:09.440 --> 05:09.440
id.

05:09.440 --> 05:12.330
Ich denke, dass dieser Aufbau ein wenig mehr Sinn macht.

05:12.330 --> 05:14.710
Jetzt müssen wir immer ein paar Methoden hinzufügen,

05:14.710 --> 05:17.760
wir müssen natürlich eine configure-Methode hinzufügen.

05:17.760 --> 05:22.300
Wir müssen die Methode render content hinzufügen, die von unserer Basisklasse,

05:22.300 --> 05:25.040
die wir erweitern, benötigt wird.

05:25.040 --> 05:29.850
Und es ruft immer configure und render content hier am Ende

05:29.850 --> 05:32.000
des Konstruktors auf.

05:32.000 --> 05:34.890
Was nun die Konfiguration betrifft, so müssen wir für den

05:34.890 --> 05:37.730
Inhalt, den wir wiedergeben wollen, im Moment nichts

05:37.730 --> 05:40.050
tun, aber es gibt definitiv etwas zu tun.

05:40.050 --> 05:42.710
Wir haben hier eine sehr einfache Vorlage,

05:42.710 --> 05:44.520
die wir in der Index-HTML-Datei

05:44.520 --> 05:47.650
etwas komplexer gestalten könnten, so dass

05:47.650 --> 05:50.850
jedes Projekt einen h2-Tag hat, darunter einen

05:50.850 --> 05:54.250
h3-Tag, und auch einen Absatz, so dass wir den Titel

05:54.250 --> 06:03.290
des Projekts, die Anzahl der zugewiesenen Personen und die Beschreibung ausgeben können.

06:03.290 --> 06:05.720
Und dann müssen wir hier in app ts beim Rendern

06:05.720 --> 06:09.050
des Inhalts einfach auf diese verschiedenen Elemente in unserem

06:09.050 --> 06:10.130
Element zugreifen,

06:10.130 --> 06:12.090
also auf den h2-Tag und so weiter, und

06:12.090 --> 06:14.440
dann etwas Inhalt einfügen.

06:14.440 --> 06:17.300
Dort können wir also auf dieses Element zugreifen,

06:17.300 --> 06:19.360
das unser gerendertes Element ist,

06:19.360 --> 06:21.750
also unser gerendertes LI-Element.

06:21.750 --> 06:24.970
Und dort müssen wir nun diese verschiedenen Dinge auswählen.

06:24.970 --> 06:27.270
Wir können also den Abfrage-Selektor h2 verwenden

06:27.270 --> 06:28.930
und den Textinhalt hier festlegen.

06:28.930 --> 06:33.930
Sagen wir dazu. Projekt. Titel, um den Titel dort wiederzugeben.

06:34.350 --> 06:36.470
Natürlich sollten wir hier ein Ausrufezeichen hinzufügen,

06:36.470 --> 06:39.010
um klarzustellen, dass wir dieses Element immer erhalten werden,

06:39.010 --> 06:40.700
was wir mit Sicherheit wissen, weil es Teil

06:40.700 --> 06:42.563
unserer Vorlage ist.

06:43.980 --> 06:46.870
Nun, eigentlich können wir das einfach wiederholen,

06:46.870 --> 06:49.170
aber jetzt suchen Sie nach dem h3-Tag,

06:49.170 --> 06:52.990
und dort möchte ich die Anzahl der Personen ausgeben, wobei people

06:52.990 --> 06:55.690
der Eigenschaftsname ist, aber ich werde das

06:55.690 --> 06:58.030
ein wenig optimieren.

06:58.030 --> 07:00.300
Zum einen ist das hier eine Zahl, und das hier

07:00.300 --> 07:01.690
ist eine Zeichenkette, also

07:01.690 --> 07:04.110
rufe ich die Zeichenkette hier auf.

07:04.110 --> 07:06.900
Aber das ist nicht das Hauptproblem. Eigentlich

07:06.900 --> 07:11.160
möchte ich das so optimieren, dass es mehr als nur eine Zahl ausgibt, aber darauf

07:11.160 --> 07:12.590
komme ich zurück.

07:14.960 --> 07:17.260
Lassen Sie uns dies zunächst noch einmal wiederholen,

07:17.260 --> 07:19.600
und fragen Sie nach dem Absatz hier.

07:19.600 --> 07:22.623
Und setzen Sie dies gleich mit diesem Projekt. Beschreibung.

07:23.810 --> 07:25.810
Auch hier werde ich später noch etwas nachbessern, aber jetzt

07:25.810 --> 07:27.140
lassen wir es erst einmal so, wie es ist.

07:27.140 --> 07:28.870
Und damit haben wir ein Projektelement,

07:28.870 --> 07:29.880
das gerendert werden

07:29.880 --> 07:33.470
sollte, und das dann seinen gesamten Inhalt darlegen sollte.

07:33.470 --> 07:35.460
Jetzt müssen wir also das Projektelement verwenden,

07:35.460 --> 07:37.880
und der richtige Ort dafür ist die Projektliste, da

07:37.880 --> 07:40.450
diese die Liste der Projekte wiedergibt.

07:40.450 --> 07:44.150
Und genau dort, im Bereich Projekte rendern, müssen wir

07:44.150 --> 07:46.630
sicherstellen, dass wir unsere Projektelemente

07:46.630 --> 07:48.260
rendern.

07:48.260 --> 07:51.140
Hier gehen wir alle Projektelemente der zugewiesenen

07:51.140 --> 07:52.860
Projekte durch.

07:52.860 --> 07:55.870
Und zugewiesene Projekte ist diese Eigenschaft hier,

07:55.870 --> 07:58.960
die eine Liste oder ein Array von Projekten enthält.

07:58.960 --> 08:02.330
Anstatt also in dieser Schleife manuell ein Listenelement

08:02.330 --> 08:04.720
zu erstellen und so weiter, werde

08:04.720 --> 08:08.270
ich all das loswerden und einfach sagen: "Neues

08:08.270 --> 08:13.740
Projektelement hier, und jetzt zwei Projektelemente".

08:13.740 --> 08:16.110
Wir müssen die Idee des Hosts

08:16.110 --> 08:21.090
weitergeben, das ist natürlich die Id, die hier auf unserem Listenpunkt

08:21.090 --> 08:22.730
stand.

08:22.730 --> 08:25.990
Im Grunde also Folgendes. Element. id, das ist die Id des

08:25.990 --> 08:27.800
Host-Elements, denn dieses Element,

08:27.800 --> 08:29.980
das die ungeordnete Liste ist, sollte

08:29.980 --> 08:31.670
der Host sein.

08:31.670 --> 08:34.210
Das zweite Argument hier ist das Projekt und

08:34.210 --> 08:37.400
das ist im Grunde genommen ein bereinigter Posten.

08:37.400 --> 08:40.950
Diese Konstante, die wir innerhalb der Schleife erhalten.

08:40.950 --> 08:42.790
Und jetzt wird der Anhang innerhalb

08:42.790 --> 08:46.530
des Projektelements oder innerhalb der Basisklausel der Komponentenklasse,

08:46.530 --> 08:49.770
die das Projektelement erweitert, erfolgen.

08:49.770 --> 08:53.570
Und die Instanziierung des Projektelements sollte alles sein, was wir tun müssen.

08:53.570 --> 08:58.380
Wenn wir das also speichern und zurückgehen, haben wir wieder diesen

08:58.380 --> 09:00.890
Code hier oder diese Eingabe.

09:00.890 --> 09:04.140
Sie sehen, das wird gerendert, und das sieht gar nicht so schlecht aus.

09:04.140 --> 09:06.320
Nun gibt es zwei Dinge, die ich nicht mag,

09:06.320 --> 09:10.220
natürlich den Aufzählungspunkt hier, den mag ich nicht so sehr.

09:10.220 --> 09:12.710
Und nur weil sie hier frei sind, sind

09:12.710 --> 09:15.590
nicht alle super glücklich darüber.

09:15.590 --> 09:17.293
Wie können wir das jetzt in Ordnung bringen?

09:18.730 --> 09:21.380
Um den Aufzählungspunkt zu beheben, sollten wir unseren Inhalt überprüfen.

09:21.380 --> 09:24.110
Und was wir dort sehen, ist, dass das Listenelement

09:24.110 --> 09:28.060
tatsächlich außerhalb der ungeordneten Liste gerendert wird.

09:28.060 --> 09:29.600
Sie ist also nicht darin enthalten.

09:29.600 --> 09:32.710
Wenn es drinnen wäre, würde es richtig funktionieren,

09:32.710 --> 09:35.530
aber ich kann es nicht dorthin ziehen.

09:35.530 --> 09:38.050
Wir müssen also dafür sorgen, dass sie innerhalb der ungeordneten

09:38.050 --> 09:39.000
Liste gerendert wird.

09:39.000 --> 09:41.363
Finden wir also heraus, warum das nicht der Fall ist.

09:42.220 --> 09:46.710
Wahrscheinlich ist das nicht der Fall, denn in project item übergebe

09:46.710 --> 09:50.430
ich hier false an den Konstruktor der Basisklausel, und

09:50.430 --> 09:53.660
wenn ich hier false übergebe, bedeutet das, dass

09:53.660 --> 09:57.640
es nicht am Anfang eingefügt wird, und das wiederum bedeutet,

09:57.640 --> 10:00.590
dass wir in attach hier before und as a value haben,

10:00.590 --> 10:02.670
wo es eingefügt wird.

10:02.670 --> 10:05.660
Das ist jedoch das, was wir wollen, also ist das

10:05.660 --> 10:08.360
wahrscheinlich nicht das Problem.

10:08.360 --> 10:12.420
Nun, das Problem ist, dass wir es natürlich in das

10:12.420 --> 10:14.970
Host-Element einfügen.

10:14.970 --> 10:17.650
Und jetzt überlegen wir noch einmal, was ist das Host-Element

10:17.650 --> 10:19.460
der Projektliste?

10:19.460 --> 10:20.900
Und darauf kommt es letztlich

10:20.900 --> 10:23.850
an, denn wenn wir unsere Projekte rendern, erstellen

10:23.850 --> 10:25.620
wir ein neues Projektelement,

10:25.620 --> 10:29.680
und ich leite die Id unseres Elements hier, des gerenderten Elements

10:29.680 --> 10:31.240
in der Projektliste, an das

10:31.240 --> 10:34.180
Projektelement weiter.

10:34.180 --> 10:36.670
Das ist dann die Idee des Host-Elements eines einzelnen

10:36.670 --> 10:38.120
Projektelements.

10:38.120 --> 10:40.720
Aber was ist dieses Element hier?

10:40.720 --> 10:43.770
Dieses Element hier ist nicht die ungeordnete Liste, die

10:43.770 --> 10:44.900
wir in dieser Box haben,

10:44.900 --> 10:47.350
sondern die Box selbst, unser Abschnitt.

10:47.350 --> 10:50.260
Wenn wir die Vorlage untersuchen, sehen wir, dass der Abschnitt

10:50.260 --> 10:53.810
hier tatsächlich für unsere Projektlistenklasse gerendert wird.

10:53.810 --> 10:55.500
Es handelt sich nicht nur um die Liste,

10:55.500 --> 10:58.300
sondern auch um den Abschnitt, der eine Überschrift enthält.

10:58.300 --> 11:00.320
Wir müssen also auf die Liste innerhalb

11:00.320 --> 11:02.020
unseres Elements hier zugreifen

11:02.020 --> 11:05.070
und dann auf die Idee dieser Liste zugreifen, weil wir

11:05.070 --> 11:08.710
hier tatsächlich eine Id auf diese Liste setzen, also wird es eine

11:08.710 --> 11:10.750
Id geben, wir müssen nur die richtige

11:10.750 --> 11:12.230
nehmen.

11:12.230 --> 11:14.880
Die Vorstellung von dem Element selbst ist

11:14.880 --> 11:16.790
also einfach nicht richtig.

11:16.790 --> 11:20.580
Stattdessen sollten wir hier die Idee der ungeordneten Liste in unserem

11:20.580 --> 11:23.580
Element erhalten, und wir wissen mit Sicherheit, dass es eine

11:23.580 --> 11:25.310
ungeordnete Liste sein wird, so dass

11:25.310 --> 11:26.350
wir die Nullprüfung

11:26.350 --> 11:28.460
durch Hinzufügen des Ausrufezeichens überspringen

11:28.460 --> 11:30.063
können.

11:30.930 --> 11:34.463
Wenn wir nun ein neues Element hinzufügen, sieht das besser aus. Der

11:35.490 --> 11:37.680
Aufzählungspunkt ist jetzt weg, weil jetzt

11:37.680 --> 11:39.920
das richtige Styling angewendet wird, da das

11:39.920 --> 11:43.100
LI, das Listenelement jetzt wirklich innerhalb der ungeordneten

11:43.100 --> 11:46.320
Liste hinzugefügt wird, wie Sie sehen können.

11:46.320 --> 11:49.390
Das ist eine Sache, aber jetzt lass uns zu der Fünf kommen, denn einfach

11:49.390 --> 11:51.180
nur eine Fünf hier hinzusetzen, ist nicht

11:51.180 --> 11:52.990
wirklich das, was ich tun möchte.

11:52.990 --> 11:56.143
Wie wäre es, wenn Sie etwas mehr nützliche Informationen ausgeben würden?
