WEBVTT

00:02.120 --> 00:04.420
Instructor: Neben der Erstellung eines solchen

00:04.420 --> 00:07.060
Dekorators können wir auch eine Dekorator-Fabrik

00:07.060 --> 00:10.150
definieren, die im Grunde eine Dekorator-Funktion zurückgibt,

00:10.150 --> 00:13.120
aber uns erlaubt, sie zu konfigurieren, wenn wir sie als Dekorator

00:13.120 --> 00:15.440
zu etwas zuweisen.

00:15.440 --> 00:18.210
Um dies zu zeigen, wandeln wir diese Funktion

00:18.210 --> 00:19.790
hier in eine Fabrik um.

00:19.790 --> 00:22.260
Dafür werde ich dieses Konstruktorargument nehmen

00:22.260 --> 00:23.220
und es entfernen, und

00:23.220 --> 00:24.170
stattdessen werde ich

00:24.170 --> 00:26.120
hier eine neue, anonyme Funktion zurückgeben,

00:26.120 --> 00:28.000
die dieses Konstruktorargument nimmt und

00:28.000 --> 00:29.920
die dann diese Protokollierung enthält,

00:29.920 --> 00:33.070
die ich innerhalb des Dekorators ausführen möchte, also verschiebe

00:33.070 --> 00:34.610
ich das hierher.

00:34.610 --> 00:37.890
Wir haben jetzt also eine Funktion, die eine neue Funktion zurückgibt.

00:37.890 --> 00:40.780
Wenn wir nun diesen Dekorator anwenden wollen, müssen

00:40.780 --> 00:43.350
wir ihn hier als Funktion ausführen, so dass wir

00:43.350 --> 00:45.740
diese äußere Funktion ausführen und den Rückgabewert,

00:45.740 --> 00:47.670
der diese innere Funktion ist, die

00:47.670 --> 00:49.000
unsere gültige Dekoratorfunktion

00:49.000 --> 00:53.430
ist, als Dekorator an die Klasse also anhängen.

00:53.430 --> 00:54.740
Warum sollten wir das tun?

00:54.740 --> 00:56.630
Denn hier könnten wir zum Beispiel

00:56.630 --> 00:59.440
einen Log-String akzeptieren, der ein String ist,

00:59.440 --> 01:00.390
ein beliebiges Argument

01:00.390 --> 01:01.790
Ihrer Wahl und so viele Argumente

01:01.790 --> 01:03.750
wie Sie wollen, und einen Wert dafür

01:03.750 --> 01:08.230
in "logging - person" übergeben und diesen innerhalb unserer Dekorator-Funktion

01:08.230 --> 01:11.280
verwenden, so dass wir hier statt des Standard-Logging-Textes

01:11.280 --> 01:16.300
unseren Log-String anzeigen.

01:16.300 --> 01:18.540
Jetzt können wir also die Werte anpassen,

01:18.540 --> 01:22.100
die die Dekoratorfunktion verwendet, wenn sie mit unserer

01:22.100 --> 01:25.000
Fabrikfunktion ausgeführt wird.

01:25.000 --> 01:27.410
Hier rufen wir nun unseren Dekorator auf,

01:27.410 --> 01:30.710
denn wir führen nicht die Dekoratorfunktion aus, sondern

01:30.710 --> 01:33.290
eine Funktion, die eine solche Dekoratorfunktion

01:33.290 --> 01:35.060
zurückgibt.

01:35.060 --> 01:36.940
Der Vorteil dabei ist, dass wir

01:36.940 --> 01:40.790
jetzt Werte übergeben können, die von der inneren, zurückgegebenen

01:40.790 --> 01:43.750
Dekoratorfunktion verwendet werden.

01:43.750 --> 01:47.050
Wenn ich das nun speichere, sehen wir die alte Ausgabe, aber mit unserer

01:47.050 --> 01:49.940
benutzerdefinierten Protokollzeichenfolge.

01:49.940 --> 01:53.010
Die Verwendung von Dekorator-Fabriken kann uns

01:53.010 --> 01:55.730
also mehr Macht und mehr Möglichkeiten geben,

01:55.730 --> 01:59.973
zu konfigurieren, was der Dekorator dann intern tut.
