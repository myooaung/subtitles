WEBVTT

00:02.180 --> 00:05.590
Instruktur: Mari kita kembali ke antarmuka untuk objek.

00:05.590 --> 00:10.090
Anda juga dapat mendefinisikan properti opsional di antarmuka dan juga

00:10.090 --> 00:14.100
di kelas, seperti yang akan saya tunjukkan kepada Anda.

00:14.100 --> 00:16.437
Untuk itu, Anda menambahkan nama properti Anda,

00:16.437 --> 00:20.740
katakanlah 'outputName' di sini, bisa apa saja yang Anda inginkan tentunya, dan itu

00:20.740 --> 00:22.238
harus berupa string.

00:22.238 --> 00:26.400
Saya tidak ingin memaksa setiap kelas berdasarkan Named untuk

00:26.400 --> 00:27.630
memiliki itu.

00:27.630 --> 00:31.120
Seharusnya bersifat opsional, apakah Anda ingin memilikinya atau tidak.

00:31.120 --> 00:34.289
Anda bisa menentukan properti opsional dengan

00:34.289 --> 00:37.670
menambahkan tanda tanya setelah nama properti.

00:37.670 --> 00:40.130
Ini memberitahu Tivescript bahwa properti

00:40.130 --> 00:44.060
ini mungkin ada di kelas yang mengimplementasikan antarmuka ini

00:44.060 --> 00:45.680
tetapi tidak harus.

00:45.680 --> 00:48.540
Dan oleh karena itu, kita tidak mendapatkan kesalahan di

00:48.540 --> 00:51.180
sini di 'Person' meskipun saya tidak memiliki properti

00:51.180 --> 00:53.440
nama keluaran karena itu opsional.

00:53.440 --> 00:56.072
Sekarang tentu saja, saya dapat menambahkan nama output

00:56.072 --> 00:59.130
di sini dan menginisialisasi ini dengan beberapa nilai atau menggunakannya

00:59.130 --> 01:02.800
seperti properti lainnya, tetapi saya tidak harus melakukannya.

01:02.800 --> 01:06.720
Sekarang pada kelas Anda juga dapat memiliki properti opsional.

01:06.720 --> 01:09.670
Nama yang sama di sini harus opsional, karena

01:09.670 --> 01:13.840
mungkin kita tidak mendapatkan nilai di sini untuk N.

01:13.840 --> 01:16.010
Kita bisa menambahkan tanda tanya di

01:16.010 --> 01:17.460
sini juga di kelas kita.

01:17.460 --> 01:20.890
Kita sekarang juga harus membuatnya opsional di sini di

01:20.890 --> 01:23.610
Named jika tidak kita melanggar antarmuka kita

01:23.610 --> 01:26.012
yang memaksa ini menjadi string.

01:26.012 --> 01:29.000
Sekarang saya katakan bahwa ini bisa bersifat opsional.

01:29.000 --> 01:30.510
Jadi di sini tidak opsional,

01:30.510 --> 01:32.750
dan di sini ketika saya menetapkan ini sama

01:32.750 --> 01:36.190
dengan N, saya hanya ingin melakukan ini jika N benar, jika sudah

01:36.190 --> 01:37.640
ditetapkan.

01:37.640 --> 01:40.080
Jadi hanya jika bukan string kosong misalnya.

01:40.080 --> 01:43.340
Jika tidak, nama tidak akan diatur dan itu tidak apa-apa

01:43.340 --> 01:46.524
karena saya mengubahnya menjadi properti opsional

01:46.524 --> 01:49.853
baik di sini di antarmuka tetapi juga di kelas saya.

01:50.790 --> 01:53.070
Sekarang di sini, ketika kita membangun objek

01:53.070 --> 01:56.203
baru, kita bisa melakukan ini tanpa memberikan nama.

01:57.060 --> 01:59.813
Untuk mengizinkannya, kita harus pergi ke konstruktor

01:59.813 --> 02:02.600
dan memberikan nilai default di sini atau juga menambahkan

02:02.600 --> 02:05.120
tanda tanya di sini.

02:05.120 --> 02:06.260
Ini semua untuk memungkinkannya.

02:06.260 --> 02:08.800
Anda dapat menambahkan parameter opsional

02:08.800 --> 02:12.170
baik dengan memberikan nilai default fall back atau dengan

02:12.170 --> 02:13.990
menambahkan tanda tanya dalam

02:13.990 --> 02:17.170
hal ini nilai default akan tidak terdefinisi.

02:17.170 --> 02:20.450
Dan sekarang kita bisa memanggil konstruktor ini tanpa nilai

02:20.450 --> 02:22.446
karena kita memiliki parameter opsional

02:22.446 --> 02:25.960
itu dan karena kita memiliki properti opsional yang oke, kita tidak

02:25.960 --> 02:27.930
perlu menginisialisasinya.

02:27.930 --> 02:29.648
Dan karenanya setelah itu jika

02:29.648 --> 02:33.510
Anda menyapa, nah nama ini tentu saja akan menghasilkan undefined.

02:33.510 --> 02:35.640
Jadi mungkin kita harus memeriksa di sini juga jika

02:35.640 --> 02:37.000
kita punya nama, dan jika kita punya

02:37.000 --> 02:39.100
kita konsol. log ini.

02:39.100 --> 02:42.970
Kalau tidak, kita menghibur. log "hi" tanpa referensi nama

02:42.970 --> 02:45.200
karena kita tidak memilikinya.

02:45.200 --> 02:47.170
Jika kita mengatakan bahwa jika semuanya

02:47.170 --> 02:48.840
terkompilasi dan kita hanya melihat

02:48.840 --> 02:51.520
hi di sini karena tidak memberikan nama.

02:51.520 --> 02:53.950
Jadi itu akan menjadi properti opsional

02:53.950 --> 02:56.008
baik di kelas maupun di antarmuka

02:56.008 --> 02:59.910
dan juga di daftar konstruktor saya di sini.

02:59.910 --> 03:01.660
Sekarang, untuk membuatnya lebih

03:01.660 --> 03:04.790
jelas lagi, ketiga hal ini hanya terkait secara longgar.

03:04.790 --> 03:07.980
Anda dapat properti opsional dalam sebuah antarmuka dan kemudian

03:07.980 --> 03:11.060
mengimplementasikannya sebagai properti non opsional di

03:11.060 --> 03:11.910
kelas.

03:11.910 --> 03:14.550
Anda kemudian hanya perlu memastikan bahwa logika Anda sedemikian

03:14.550 --> 03:17.810
rupa sehingga ini selalu diinisialisasi jika tidak, Anda akan mendapatkan kesalahan

03:17.810 --> 03:19.720
seperti yang baru saja Anda lihat.

03:19.720 --> 03:22.180
Atau Anda memiliki properti opsional dalam

03:23.723 --> 03:26.870
antarmuka dan properti opsional dalam kelas Anda,

03:26.870 --> 03:31.630
maka Anda tidak perlu menetapkan nilai dalam semua kasus di sini.

03:31.630 --> 03:34.210
Dan sebagai tambahan dan sama sekali tidak terkait di sini,

03:34.210 --> 03:36.020
Anda dapat memiliki parameter opsional

03:36.020 --> 03:38.300
dalam fungsi dan oleh karena itu juga dalam metode

03:38.300 --> 03:40.300
termasuk metode konstruktor.

03:40.300 --> 03:42.670
Parameter opsional didefinisikan baik

03:42.670 --> 03:43.810
dengan tanda tanya,

03:43.810 --> 03:48.040
di mana nilai default jika tidak ditetapkan karena itu tidak terdefinisi

03:48.040 --> 03:51.690
atau hanya dengan menetapkan nilai default seperti ini.

03:51.690 --> 03:53.785
Kemudian seperti yang Anda pelajari, ini juga

03:53.785 --> 03:56.960
opsional dan nilai default akan diasumsikan jika Anda tidak memberikan

03:56.960 --> 03:58.750
nilai yang lebih spesifik.

03:58.750 --> 04:00.720
Jadi ini memberi Anda lebih banyak fleksibilitas

04:00.720 --> 04:02.950
dalam bagaimana Anda menyusun kelas Anda, dan

04:02.950 --> 04:04.770
ketika kita berbicara tentang antarmuka,

04:04.770 --> 04:06.860
bagaimana Anda menyusun kelas kontrak Anda

04:06.860 --> 04:09.103
mungkin perlu mematuhi.
