WEBVTT

00:02.160 --> 00:04.860
Sunucu: Dekoratörlerle nasıl çalışabileceğimize dair

00:04.860 --> 00:06.440
güzel bir örnek daha gördüğümüze

00:06.440 --> 00:09.040
göre, içine dalmak istediğim son bir örnek var.

00:09.040 --> 00:11.997
Bu da doğrulama için dekoratörlerdir.

00:11.997 --> 00:14.560
Bunun için dosyanın en altına, buraya

00:14.560 --> 00:17.733
yeni bir sınıf daha ekleyeceğim.

00:18.780 --> 00:20.530
Bu bir kurs olabilir.

00:20.530 --> 00:23.903
Şimdi bir kursun bir dize olan bir başlığı olmalıdır.

00:25.430 --> 00:27.483
Ve belki bir rakam olan bir fiyat.

00:29.730 --> 00:32.640
Sonra burada her iki değeri de aldığımız bir kurucumuz

00:32.640 --> 00:34.440
var ve burada kasıtlı olarak kısayolu

00:35.550 --> 00:37.780
kullanmıyorum, böylece kolayca özellik

00:37.780 --> 00:40.953
dekoratörleri ekleyebilirim.

00:42.690 --> 00:44.560
Ardından, bu başlığı t'ye ve bu fiyatı

00:44.560 --> 00:46.653
p'ye eşit olarak ayarlıyorum.

00:47.990 --> 00:50.530
Elbette şimdi bu kursu başlatmak istediğimizde geçerli

00:50.530 --> 00:53.610
bir başlık ve geçerli bir fiyat girmemiz gerekiyor.

00:53.610 --> 00:56.730
Ancak bazı uygulamalarda karşılaşabileceğiniz

00:56.730 --> 00:59.630
yaygın bir senaryo, diyelim ki bir web kaynağından

00:59.630 --> 01:03.340
veri getirmeniz ve diyelim ki birkaç kursunuz olduğunu tahmin

01:03.340 --> 01:05.854
ettiğiniz, ancak kesin olarak bilmediğiniz

01:05.854 --> 01:08.110
verileri almanızdır.

01:08.110 --> 01:12.839
Ya da başka bir olası senaryo, kullanıcıların verileri girmesine izin veriyorsunuz ve sadece bu verileri

01:12.839 --> 01:15.490
atamak ve kullanıcı tarafından girilen verilerle yeni bir

01:15.490 --> 01:18.370
kursta işlem yapmak istiyorsunuz ve bunun doğru olduğunu varsayıyorsunuz,

01:18.370 --> 01:24.210
ancak bunun doğru olduğunu garanti etmiyorsunuz ve bu nedenle girdiyi doğrulamak istiyorsunuz.

01:24.210 --> 01:26.380
Burada taklit etmek istediğim senaryo bu.

01:26.380 --> 01:29.940
Diyelim ki index html dosyamızda, burada basit bir formumuz

01:30.894 --> 01:32.840
var ve stil vermeyeceğim, bu yüzden

01:32.840 --> 01:36.074
şimdi o kadar güzel olacak, ancak burada metin türü

01:36.074 --> 01:41.074
girdisi ve başlık, woops, kurs, başlık yer tutucusu ve başlık diyelim bir kimliği

01:41.390 --> 01:44.620
olan basit bir formumuz var ve bunun altında, türün

01:44.620 --> 01:46.870
tüm metin olduğu bir sayı girdimiz var,

01:46.870 --> 01:50.605
ancak bu kurs fiyatı ve kimliği fiyat.

01:50.605 --> 01:55.030
Ve sonra bunu göndereceğimiz butonumuz var.

01:55.030 --> 02:00.030
Yani düğme submit türündedir.

02:00.040 --> 02:02.780
Yani çok basit bir form ve dediğim gibi buraya bakarsak

02:02.780 --> 02:04.280
o kadar da güzel değil ama ihtiyacımız

02:04.280 --> 02:06.070
olan her şeye sahip.

02:06.070 --> 02:08.763
Şimdi, buradaki forma bir dinleyici bağlayalım.

02:09.830 --> 02:14.780
Burada document, querySelector, form ile alabileceğim courseForm'um var

02:14.780 --> 02:18.840
ve ünlem işareti ekliyorum çünkü bir tane alacağımı biliyorum,

02:18.840 --> 02:21.910
böylece bu null olmayacak ve sonra formda submit

02:21.910 --> 02:25.050
olay dinleyicisi olanEventListener'ı ekleyebiliriz

02:26.390 --> 02:29.300
ve sonra otomatik olarak atadığım işleve geçirilen

02:29.300 --> 02:32.360
olay nesnesini alırız.

02:32.360 --> 02:35.450
Orada preventDefault olayını çağırmak istiyorum, böylece formu

02:35.450 --> 02:38.030
göndermeyeceğiz ve http isteği göndermeyeceğiz.

02:38.030 --> 02:40.570
Ve sonra başlık ve fiyat için verileri

02:40.570 --> 02:42.910
çıkarmak istiyoruz.

02:42.910 --> 02:45.779
Böylece, başlık document, querySelector'a

02:45.779 --> 02:49.700
ulaşılarak çıkarılabilir veya aslında bir id, getElementById,

02:49.700 --> 02:54.700
title atadığımızdan ve bunun bir HTMLInputElement olacağını bildiğimizden,

02:55.560 --> 03:01.700
typescript'in bunu bilmesini sağlamak için typecasting kullanabiliriz ve fiyat document,

03:01.700 --> 03:09.672
getElementById, price'dır ve bunu da bir InputElement'e dönüştürebiliriz.

03:09.672 --> 03:11.320
Ve aslında bunlar için elemanlar

03:11.320 --> 03:14.520
var, bu yüzden sabitleri titleEL ve priceEl olarak yeniden adlandıracağız

03:14.520 --> 03:17.779
ve somut başlığı almak için şimdi titleEl'e gidebilir, value

03:17.779 --> 03:20.930
özelliğine erişebilir ve fiyatı almak için aynı şeyi priceElement

03:20.930 --> 03:23.400
için de yapabilir ve değeri oradan da alabiliriz

03:23.400 --> 03:26.840
ve sayı olarak eklemek istiyorum, bu yüzden sayıya dönüştürmek

03:26.840 --> 03:30.060
için önüne artı ekliyorum.

03:30.060 --> 03:34.017
Şimdi, bu kadar, ama şimdi bu bilgilerle yeni bir kurs

03:34.017 --> 03:36.090
oluşturmak istiyorum.

03:36.090 --> 03:39.060
Burada, yeni kursu çağırabildiğim ve

03:39.060 --> 03:43.850
başlık ile fiyatı girdiğim oluşturulmuş kursumuz var.

03:43.850 --> 03:46.770
Şimdi typescript bunu kabul ediyor, çünkü başlık bir dize olacak

03:46.770 --> 03:48.640
ve bu girdiyi bir sayıya dönüştürdüğüm

03:48.640 --> 03:50.200
için fiyat bir sayı olacak.

03:50.200 --> 03:54.160
Daha sonra oluşturulan kursu konsol günlüğüne kaydedersem, bunun çalışıp çalışmadığını

03:54.160 --> 03:55.530
kontrol edebiliriz.

03:55.530 --> 03:58.693
Bunu kaydedelim, yeniden yükleyelim, çıktıyı net bir şekilde görebilmek

03:58.693 --> 04:00.680
için konsolu temizleyelim ve ardından buraya

04:00.680 --> 04:02.400
yeni bir kurs ekleyelim.

04:02.400 --> 04:05.785
Javascript kılavuzunun tamamı 199 dolar ve bu

04:05.785 --> 04:08.010
işe yarıyor gibi görünüyor.

04:08.010 --> 04:11.010
Ne yazık ki bu sadece hiçbir şey

04:11.010 --> 04:13.290
girmezsem çalışıyor.

04:13.290 --> 04:16.600
Şimdi kaydet'e tıklarsam, bu kursun oluşturulduğunu görürüz.

04:16.600 --> 04:19.820
Şimdi, bu teknik olarak geçerli bir rota ama tabii

04:19.820 --> 04:23.121
ki bizim uygulamamız için pek geçerli değil.

04:23.121 --> 04:26.220
Muhtemelen boş olmayan bir başlığa ve sıfırdan büyük

04:26.220 --> 04:28.620
bir fiyata sahip olmak istiyoruz.

04:28.620 --> 04:30.660
Bu yüzden doğrulama eklemek istiyoruz.

04:30.660 --> 04:32.670
Elbette buraya bir if kontrolü ekleyebilir

04:32.670 --> 04:37.130
ve title, trim, length değerlerinin sıfırdan büyük olup olmadığını kontrol edebiliriz,

04:37.130 --> 04:38.830
bu da boş olmadığı ve fiyatı da doğruladığımız

04:38.830 --> 04:41.100
anlamına gelir.

04:41.100 --> 04:43.870
Ancak bu, yeni bir kurs oluşturduğumuzda, eklemeden

04:43.870 --> 04:47.880
önce buraya doğrulama mantığını eklememiz gerektiği anlamına gelir.

04:47.880 --> 04:49.990
Doğrulama mantığı, dekoratörler

04:49.990 --> 04:51.910
yardımıyla kurs sınıfına dahil

04:51.910 --> 04:53.940
edilse güzel olmaz mıydı?

04:53.940 --> 04:56.770
Ve burada yapmak istediğim de tam olarak bu.

04:56.770 --> 04:59.910
Şimdi sadece bunu nasıl uygulayabileceğimize dair

04:59.910 --> 05:01.447
temel bir fikir vereceğim,

05:01.447 --> 05:04.861
bir sonraki modülde size bunu çok daha ayrıntılı bir

05:04.861 --> 05:08.270
şekilde yapan ve daha sonra hepimizin biraz oynamak

05:08.270 --> 05:10.010
için kullanacağı örnek bir

05:10.010 --> 05:12.080
paket göstereceğim.

05:12.080 --> 05:14.530
Ancak burada bunu kendi dekoratörlerimle

05:14.530 --> 05:16.300
uygulamak istiyorum ve buraya

05:16.300 --> 05:19.370
gerekli bir dekoratör ekleyeceğim ve PositiveNumber

05:19.370 --> 05:21.890
adını vereceğim başka bir dekoratör işlevi

05:21.890 --> 05:24.433
ekleyeceğiz.

05:26.710 --> 05:28.510
Burada iki dekoratörüm var.

05:28.510 --> 05:31.240
Ve şimdi benim fikrim, bunları buraya

05:31.240 --> 05:35.369
özelliklerimize ekleyebiliriz, örneğin başlığın önüne

05:35.369 --> 05:40.369
Required ve fiyatın önüne positiveNumber ve typescript bunu bir yere

05:41.740 --> 05:44.020
kaydeder ve sonra üçüncü bir fonksiyonumuz

05:44.020 --> 05:49.020
var, bir nesneyi aktarabileceğimiz validate, yani herhangi bir nesne

05:49.490 --> 05:54.490
ve typescript daha sonra projeye bakar, daha önce bu nesne için bu sınıfta

05:55.120 --> 05:58.780
kaydettiğimiz herhangi bir doğrulamayı bulur ve

05:58.780 --> 06:03.410
doğrulama mantığımızı uygular.

06:03.410 --> 06:05.480
Benim de aklımdaki fikir bu.

06:05.480 --> 06:08.240
Yani, bu size sunduğumuz üçüncü taraf bir kütüphanenin parçası

06:08.240 --> 06:11.170
olabilir ve siz sadece gerekli pozitif sayıyı içe aktarırsınız

06:11.170 --> 06:14.620
ve önce doğrulayıcıları ayarlamak ve sonra bir noktada doğrulamayı çağırmak

06:14.620 --> 06:16.750
için doğrularsınız.

06:16.750 --> 06:18.634
Örneğin burada kursu oluşturduğumuzda,

06:18.634 --> 06:22.462
validate'i çağırabilir ve createdCourse'u iletebiliriz

06:22.462 --> 06:31.660
ve eğer bu doğru değilse, diyelim ki bu true veya false döndürmelidir, eğer bu doğru değilse, o zaman bir hata atarız

06:31.660 --> 06:35.040
veya bir uyarı gösteririz, geçersiz girdi

06:35.040 --> 06:42.960
lütfen tekrar deneyin ve sadece aksi takdirde devam ederiz.

06:42.960 --> 06:43.870
İşte benim fikrim bu.

06:43.870 --> 06:46.540
validate diyebiliriz, bu true veya false döndürür.

06:46.540 --> 06:48.793
Geçerliyse doğru, geçerli değilse

06:48.793 --> 06:51.670
yanlış ve bu nedenle sonucu kullanabiliriz.

06:51.670 --> 06:53.730
Dolayısıyla yapmamız gereken birkaç şey var.

06:53.730 --> 06:56.290
Buraya bir dekoratör eklediğimizde, bunun bir şekilde

06:56.290 --> 06:59.350
bir yerde saklandığından emin olmamız gerekir.

06:59.350 --> 07:00.970
Yine, bunun kendi üçüncü taraf

07:00.970 --> 07:02.950
kütüphanemizin bir parçası olabileceğini

07:02.950 --> 07:05.710
unutmayın, bu nedenle orada, örneğin bu sınıf

07:05.710 --> 07:10.050
ve bu başlık özelliği için gerekli olmasını istediğimiz bir tür depolamaya

07:10.050 --> 07:12.480
sahip olabiliriz.

07:12.480 --> 07:15.630
Ve validate'te, aldığımız nesnenin deposunda,

07:15.630 --> 07:19.026
nesnenin dayandığı sınıf için başlık, fiyat vb. için

07:19.026 --> 07:21.990
kayıtlı bir validator olup olmadığını kontrol

07:21.990 --> 07:23.330
edebiliriz.

07:23.330 --> 07:25.260
Ve sonra doğrulama mantığımızı çalıştırırız.

07:25.260 --> 07:26.453
Benim fikrim de bu.
