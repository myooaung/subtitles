WEBVTT

00:02.270 --> 00:04.610
Instructeur : Voici le code avec lequel nous nous

00:04.610 --> 00:08.580
sommes retrouvés à la fin de la dernière section de base, notre projet pratique,

00:08.580 --> 00:11.050
beaucoup de code dans un seul fichier, et on peut

00:11.050 --> 00:14.050
dire que ce n'est pas un projet super complexe.

00:14.050 --> 00:17.420
Vous pouvez certainement écrire des projets et des applications beaucoup

00:17.420 --> 00:20.380
plus élaborés, et vous vous retrouveriez avec beaucoup plus de

00:20.380 --> 00:23.640
code, donc tout mettre dans un seul fichier n'est probablement pas ce

00:23.640 --> 00:25.000
que vous voulez faire.

00:25.000 --> 00:26.390
Ce que vous voulez faire à la

00:26.390 --> 00:28.740
place, c'est écrire du code modulaire, ce qui

00:28.740 --> 00:31.120
signifie simplement que vous voulez diviser

00:31.120 --> 00:34.010
votre code en plusieurs fichiers de façon à ce que chaque

00:34.010 --> 00:37.157
fichier reste gérable et maintenable, puis vous importez

00:37.157 --> 00:39.640
et exportez simplement de et vers ces fichiers

00:39.640 --> 00:42.100
et vous vous assurez que, par conséquent, tous

00:42.100 --> 00:44.740
ces fichiers sont connectés, mais ils sont connectés

00:44.740 --> 00:47.990
par Typescript ou par le navigateur ou par un outil de construction

00:47.990 --> 00:50.310
tiers et non par vous en les fusionnant tous

00:50.310 --> 00:54.500
en un seul fichier pendant le développement.

00:54.500 --> 00:55.940
Dans ce module, nous allons examiner

00:55.940 --> 00:59.910
deux options principales qui nous aident à organiser notre code dans plusieurs

00:59.910 --> 01:02.160
fichiers, et nous allons les découvrir non seulement

01:02.160 --> 01:04.930
en théorie mais aussi en pratique.

01:04.930 --> 01:07.320
Nous allons, bien sûr, appliquer ces différentes approches

01:07.320 --> 01:09.453
et voir comment nous pouvons diviser notre code.
