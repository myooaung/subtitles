WEBVTT

00:02.220 --> 00:03.053
Istruttore: Ho

00:03.053 --> 00:04.920
detto che le interfacce servono a

00:04.920 --> 00:07.114
definire la struttura di un oggetto.

00:07.114 --> 00:09.690
Ora, le interfacce possono essere utilizzate anche per

00:09.690 --> 00:11.750
definire la struttura di una funzione.

00:11.750 --> 00:14.330
Quindi, in pratica, come sostituto dei tipi di funzione che avete

00:14.330 --> 00:15.578
già imparato a conoscere.

00:15.578 --> 00:17.890
Per rinfrescare la memoria, possiamo definire

00:17.890 --> 00:20.090
il tipo di una funzione, per esempio, con

00:20.090 --> 00:23.305
un tipo personalizzato con la parola chiave type.

00:23.305 --> 00:26.380
AddFn per la funzione Add, che potrebbe contenere

00:26.380 --> 00:29.350
una definizione di funzione come questa.

00:29.350 --> 00:30.830
Deve restituire un numero

00:30.830 --> 00:32.370
e deve accettare due argomenti,

00:32.370 --> 00:35.970
ognuno dei quali è di tipo numero.

00:35.970 --> 00:39.310
Ora, potremmo creare una nuova funzione add qui,

00:39.310 --> 00:42.860
di tipo AddFn, e quando non la inizializziamo, ma assegniamo

00:42.860 --> 00:45.040
la nostra funzione in un secondo

00:45.040 --> 00:46.580
momento, dobbiamo assicurarci

00:46.580 --> 00:51.300
che questa funzione prenda due argomenti di tipo number e che restituisca

00:51.300 --> 00:55.170
anche un numero.

00:55.170 --> 00:56.360
È una cosa che possiamo fare.

00:56.360 --> 00:57.843
Questo è ciò che avete già imparato.

00:57.843 --> 01:01.760
Ora, è possibile utilizzare un'interfaccia come alternativa a questo

01:01.760 --> 01:03.077
tipo personalizzato.

01:03.077 --> 01:06.860
Le interfacce servono a definire la struttura di un oggetto, come

01:06.860 --> 01:08.240
vi ho insegnato, ma alla

01:08.240 --> 01:10.220
fine le funzioni sono solo oggetti

01:10.220 --> 01:12.720
e quindi questa è una piccola eccezione.

01:12.720 --> 01:15.350
È possibile creare tipi di funzione con le interfacce.

01:15.350 --> 01:18.930
Per questo si crea un'interfaccia, denominata AddFn

01:18.930 --> 01:20.930
per mantenere il nome qui.

01:20.930 --> 01:23.720
E ora si definisce la funzione aggiungendo

01:23.720 --> 01:28.300
le parentesi con gli argomenti, ad esempio a: numero,

01:28.300 --> 01:31.150
B:numero, e poi i due punti, non una

01:31.150 --> 01:33.980
freccia, ma i due punti con il tipo

01:33.980 --> 01:36.810
di ritorno.

01:36.810 --> 01:39.780
Quindi, alla fine, è come definire un metodo, come

01:39.780 --> 01:41.630
stiamo facendo qui con greet,

01:41.630 --> 01:45.710
con l'eccezione che ora non aggiungiamo il nome del metodo.

01:45.710 --> 01:47.880
Quindi abbiamo una funzione anonima,

01:47.880 --> 01:49.300
se vogliamo chiamarla

01:49.300 --> 01:52.000
così, nell'interfaccia AddFn e TypeScript

01:52.000 --> 01:55.250
capisce questa sintassi speciale di questa funzione

01:55.250 --> 01:57.800
anonima nell'interfaccia e capisce che

01:57.800 --> 02:00.410
vogliamo usare questa interfaccia come

02:00.410 --> 02:02.070
tipo di funzione e questo

02:02.070 --> 02:05.360
è l'aspetto della funzione.

02:05.360 --> 02:07.650
Ora possiamo usare AddFn qui e, in effetti,

02:07.650 --> 02:10.440
se provassi ad accettare una stringa qui, otterremmo

02:10.440 --> 02:11.640
un errore perché questa

02:11.640 --> 02:13.786
non è assegnabile, dobbiamo avere

02:13.786 --> 02:17.060
un numero invece di una stringa.

02:17.060 --> 02:19.670
Quindi è semplicemente un'alternativa a questo tipo personalizzato.

02:19.670 --> 02:23.010
Certo, in questo caso direi che l'uso del tipo personalizzato è probabilmente

02:23.010 --> 02:25.020
un po' più comune, è anche un po' più breve,

02:25.020 --> 02:26.470
ma è una bella sintassi alternativa

02:26.470 --> 02:28.340
di cui essere consapevoli, soprattutto

02:28.340 --> 02:30.870
se si incontra questo in qualche progetto e si è altrimenti

02:30.870 --> 02:35.265
perso il significato di questo strano metodo anonimo.

02:35.265 --> 02:38.993
Alla fine si tratta solo di un tipo di funzione personalizzata.
