WEBVTT

00:02.130 --> 00:04.900
Instructeur : Ce cours est riche en contenu.

00:04.900 --> 00:06.940
Nous avons presque fini de commencer et nous

00:06.940 --> 00:09.500
allons ensuite nous plonger dans TypeScript et dans

00:09.500 --> 00:11.667
toutes ses fonctionnalités passionnantes

00:11.667 --> 00:13.850
et les apprendre étape par étape.

00:13.850 --> 00:16.210
Nous allons commencer par les bases de TypeScripts, bien sûr.

00:16.210 --> 00:18.800
Les types de base, son fonctionnement général, certaines

00:18.800 --> 00:20.880
des nouvelles fonctionnalités qu'il ajoute,

00:20.880 --> 00:22.930
et tout ce que vous devez savoir pour bien

00:22.930 --> 00:25.320
comprendre TypeScript.

00:25.320 --> 00:27.690
Par la suite, nous allons déjà nous plonger plus

00:27.690 --> 00:29.590
profondément dans le compilateur TypeScript

00:29.590 --> 00:32.310
et sa configuration, car il est très important pour vous

00:32.310 --> 00:35.480
de comprendre ce que vous pouvez configurer ici et ce que font tous

00:35.480 --> 00:37.450
ces différents paramètres, nous allons

00:37.450 --> 00:39.120
donc y regarder de plus près dans ce

00:39.120 --> 00:40.840
module.

00:40.840 --> 00:43.900
Par la suite, nous explorerons les fonctionnalités JavaScript de nouvelle

00:43.900 --> 00:45.850
génération prises en charge par TypeScript.

00:45.850 --> 00:48.880
Comment ils fonctionnent et comment vous pouvez les utiliser en TypeScript.

00:48.880 --> 00:51.500
Nous allons continuer avec les classes et les interfaces,

00:51.500 --> 00:55.000
un concept super important en partie aussi dans le JavaScript vanille

00:55.000 --> 00:57.350
dans le cas des classes, mais avec les interfaces

00:57.350 --> 00:59.510
nous avons aussi une toute nouvelle fonctionnalité

00:59.510 --> 01:01.600
TypeScript et vous allez comprendre ce qu'ils

01:01.600 --> 01:03.550
sont, ce qu'ils font, et pourquoi nous pourrions

01:03.550 --> 01:06.210
vouloir les utiliser.

01:06.210 --> 01:08.190
Ensuite, il est temps de plonger plus profondément.

01:08.190 --> 01:10.490
Nous allons examiner certains types avancés

01:10.490 --> 01:13.280
et des fonctionnalités TypeScript avancées en général,

01:13.280 --> 01:15.040
en passant au niveau supérieur et

01:15.040 --> 01:16.640
en nous appuyant sur les bases

01:16.640 --> 01:20.110
que nous avons déjà apprises jusqu'à présent.

01:20.110 --> 01:22.630
La fonction générique est également

01:22.630 --> 01:27.210
une fonction avancée, qui mérite bien sa propre section.

01:27.210 --> 01:28.910
Vous apprendrez ce que c'est

01:28.910 --> 01:31.160
et pourquoi c'est vraiment, vraiment

01:31.160 --> 01:32.650
utile dans ce module.

01:32.650 --> 01:34.570
Suivis par les décorateurs.

01:34.570 --> 01:37.360
Les décorateurs sont une fonctionnalité assez cool

01:37.360 --> 01:40.550
également ajoutée par TypeScript et nous allons regarder

01:40.550 --> 01:43.810
de plus près les décorateurs et aussi construire quelques

01:43.810 --> 01:46.200
décorateurs vraiment utiles dans ce module

01:46.200 --> 01:48.800
et après nous aurons appris beaucoup de choses

01:48.800 --> 01:50.100
sur TypeScript.

01:50.100 --> 01:52.660
Maintenant, le cours est organisé de telle sorte

01:52.660 --> 01:56.460
que je montre toutes ces fonctionnalités individuelles dans des démos

01:56.460 --> 01:59.040
simples et relativement petites.

01:59.040 --> 02:01.730
Pour vous donner une vue d'ensemble et voir comment

02:01.730 --> 02:04.640
appliquer toutes ces fonctionnalités dans un projet

02:04.640 --> 02:08.140
réel, nous allons construire ce projet.

02:08.140 --> 02:10.400
Nous aurons un module entier où nous construirons

02:10.400 --> 02:14.420
un projet entier entièrement avec TypeScript à partir de zéro, de sorte que

02:14.420 --> 02:17.720
vous verrez beaucoup de ces fonctionnalités, la plupart de celles

02:17.720 --> 02:20.090
que vous avez apprises jusqu'à ce point, en action

02:20.090 --> 02:21.920
et vous verrez comment elles fonctionnent

02:21.920 --> 02:23.680
ensemble et pourquoi elles simplifient

02:23.680 --> 02:28.160
le processus de construction d'un tel projet.

02:28.160 --> 02:29.940
Une fois que nous aurons terminé de construire

02:29.940 --> 02:31.770
ce projet, nous identifierons un nouveau

02:31.770 --> 02:34.420
problème et nous apprendrons à le résoudre en travaillant

02:34.420 --> 02:36.450
avec les espaces de noms et les modules, ce

02:36.450 --> 02:38.100
qui nous aidera à rendre notre code

02:38.100 --> 02:40.570
plus facile à gérer et à lire.

02:40.570 --> 02:42.600
Dans la foulée, nous allons également explorer

02:42.600 --> 02:44.350
Webpack avec TypeScript.

02:44.350 --> 02:47.690
Webpack est un outil de construction que nous utilisons dans le développement

02:47.690 --> 02:49.530
web frontal moderne et vous pouvez l'utiliser

02:49.530 --> 02:52.970
en combinaison avec TypeScript pour obtenir une meilleure configuration de

02:52.970 --> 02:55.520
projet qui facilite simplement certaines choses et vous permet

02:55.520 --> 02:57.990
d'obtenir le meilleur des deux mondes.

02:57.990 --> 02:59.850
Une grande expérience de développement

02:59.850 --> 03:02.170
et aussi un code qui fonctionne très bien pour

03:02.170 --> 03:04.120
vos utilisateurs finaux.

03:04.120 --> 03:06.320
Une fois que nous en avons terminé, nous avons une

03:06.320 --> 03:08.710
image très solide de TypeScript et de la façon de l'utiliser

03:08.710 --> 03:10.180
dans des projets.

03:10.180 --> 03:13.250
Maintenant, ce dont vous aurez besoin dans de nombreux projets

03:13.250 --> 03:15.183
réels, ce sont des bibliothèques tierces,

03:15.183 --> 03:16.820
nous allons donc examiner cela de

03:16.820 --> 03:20.250
plus près car il y a certaines bibliothèques tierces qui ont vraiment

03:20.250 --> 03:22.280
adopté TypeScript et qui ont un support TypeScript

03:22.280 --> 03:24.630
intégré, mais il y a aussi beaucoup de bibliothèques

03:24.630 --> 03:26.600
qui ne le font pas et nous allons voir comment

03:26.600 --> 03:29.030
nous pouvons travailler avec les deux types de bibliothèques

03:29.030 --> 03:34.520
d'une manière excellente dans les projets TypeScript.

03:34.520 --> 03:36.630
Et puis, il y a certains scénarios spécifiques

03:36.630 --> 03:39.620
qui méritent leurs propres modules.

03:39.620 --> 03:41.570
Nous aurons un module entier sur React

03:41.570 --> 03:44.320
avec TypeScript, comment vous pouvez construire

03:44.320 --> 03:47.540
une application React entière avec TypeScript seulement,

03:47.540 --> 03:49.452
et aussi un module entier sur NodeJS

03:49.452 --> 03:53.260
et express end type script pour que vous ayez aussi de grands exemples

03:53.260 --> 03:55.390
pour ces cas d'utilisation très populaires

03:55.390 --> 04:01.270
et spécifiques de TypeScript où vous pouvez soudainement créer des applications React ou Node d'une

04:01.270 --> 04:03.630
toute nouvelle manière avec un tout nouveau

04:03.630 --> 04:06.760
langage.

04:06.760 --> 04:09.260
Il y a donc beaucoup de contenu passionnant dans ce cours.

04:09.260 --> 04:10.970
Ne perdons pas de temps.

04:10.970 --> 04:12.720
Voyons comment vous pouvez tirer le

04:12.720 --> 04:15.263
meilleur parti de ce cours, puis plongeons-y.
