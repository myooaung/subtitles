WEBVTT

00:02.190 --> 00:05.380
ผู้สอน: ตอนนี้เรามาถึงจุดสิ้นสุดของโปรเจ็กต์นี้

00:05.380 --> 00:09.590
ซึ่งเกี่ยวข้องกับความเป็นไปได้ในการลากและวางโปรเจ็กต์ที่เรามีในกล่องใดกล่องหนึ่ง

00:09.590 --> 00:16.410
ตัวอย่างเช่น ในกล่องโปรเจ็กต์ที่ใช้งานอยู่ลงในอีกกล่องหนึ่ง

00:16.410 --> 00:22.780
ดังนั้นโดยทั่วไปแล้วการเปลี่ยนโครงการจากการเป็นโครงการที่ใช้งานอยู่ไปเป็นโครงการที่เสร็จสิ้นแล้ว

00:22.780 --> 00:25.430
ดังนั้น มันไม่ได้เกี่ยวกับการอัปเดตภาพเท่านั้น

00:25.430 --> 00:27.800
ไม่ใช่แค่การลากและวางและอัปเดต

00:27.800 --> 00:37.790
UI เท่านั้น แต่ยังเกี่ยวกับการปรับข้อมูลที่อยู่เบื้องหลังในคลาสการจัดการสถานะของเรา สถานะโครงการที่เราจัดการรายการของโครงการในตอนท้าย

00:37.790 --> 00:39.960
โปรดทราบว่าทุกโครงการมีคุณสมบัติสถานะ

00:39.960 --> 00:45.420
และเราจำเป็นต้องอัปเดตด้วยเช่นกัน

00:45.420 --> 00:48.610
ดังนั้น มีสองสิ่งที่เราจำเป็นต้องดำเนินการ:

00:48.610 --> 00:53.410
ลากและวาง จากนั้นทั้งหมดนี้อยู่เบื้องหลังการอัปเดตสถานะและข้อมูล

00:53.410 --> 00:59.870
ตอนนี้มาเริ่มกันที่การลากและวาง และสำหรับสิ่งนั้นเราจะใช้การลากและวางโดยพื้นฐานเหมือนที่เราทำในวานิลลาจาวาสคริปต์

00:59.870 --> 01:06.970
ซึ่งคุณสามารถเรียนรู้ได้จากคู่มือจาวาสคริปต์ฉบับสมบูรณ์ของฉัน

01:06.970 --> 01:09.690
โดยพื้นฐานแล้ว มันคือทั้งหมดที่เกี่ยวกับการปรับใช้ตัวฟังเหตุการณ์จำนวนมาก

01:09.690 --> 01:14.800
และแน่นอนว่าคุณจะเห็นว่ามันทำงานอย่างไรในโมดูลนี้ในการบรรยายครั้งต่อไป แต่เราจะนำไปใช้ในรูปแบบ

01:14.800 --> 01:17.350
typescript ดังนั้นเราจะปรับปรุงมันโดยใช้คุณสมบัติ

01:17.350 --> 01:21.150
typescript บางอย่าง

01:21.150 --> 01:24.240
มาเริ่มกันเลยแล้วฉันจะปรับปรุงมันด้วยฟีเจอร์

01:24.240 --> 01:25.790
typescript ได้อย่างไร

01:25.790 --> 01:28.423
ฉันต้องการใช้อินเทอร์เฟซซ้ำที่นี่

01:29.280 --> 01:35.470
ลากและวางอินเทอร์เฟซ แต่ไม่ใช่เพื่อกำหนดโครงสร้างของออบเจกต์บางอย่างที่เราใช้อินเทอร์เฟซก่อนหน้านี้

01:35.470 --> 01:51.980
แต่แทนที่จะตั้งค่าสัญญาซึ่งคลาสบางคลาสสามารถลงนามเพื่อบังคับให้คลาสเหล่านี้ทำได้ โดยพื้นฐานแล้วใช้วิธีการบางอย่างที่ช่วยเราในการลากและวาง .

01:51.980 --> 01:55.250
เพื่อให้แม่นยำ ฉันกำลังคิดเกี่ยวกับสองอินเทอร์เฟซ

01:55.250 --> 01:58.590
และแน่นอนว่าการใช้อินเทอร์เฟซเหล่านี้จะเป็นทางเลือก

01:58.590 --> 02:06.340
แต่สิ่งนี้จะช่วยให้เราสามารถจัดเตรียมโค้ดบางอย่างที่บังคับให้คลาสใช้ทุกอย่างที่จำเป็นในการลากหรือเป็น เป้าหมายการลดลงที่ถูกต้อง

02:06.340 --> 02:19.080
ซึ่งถ้าเราสร้างแอปพลิเคชันที่ใหญ่ขึ้นสามารถช่วยเราเขียนโค้ดที่สะอาดขึ้นและโค้ดที่เข้าใจได้มากขึ้น โดยเฉพาะอย่างยิ่งเมื่อทำงานในทีม

02:19.080 --> 02:21.710
ฉันกำลังพูดถึงอินเทอร์เฟซใด

02:21.710 --> 02:23.160
ฉันต้องการมีอินเทอร์เฟซหนึ่ง

02:23.160 --> 02:24.617
ซึ่งฉันจะตั้งชื่อว่า draggable

02:26.200 --> 02:28.660
และฉันจะมีอินเทอร์เฟซที่สอง ซึ่งฉันจะตั้งชื่อว่า

02:28.660 --> 02:31.060
drag target

02:31.060 --> 02:38.030
แนวคิดของฉันคือเราสามารถเพิ่มส่วนต่อประสานที่ลากได้ให้กับคลาสที่แสดงผลและองค์ประกอบที่สามารถลากได้

02:38.030 --> 02:41.810
ในตัวอย่างของเรา นั่นจะเป็นคลาสไอเท็มโปรเจ็กต์

02:41.810 --> 02:44.170
คลาสไอเท็มโปรเจ็กต์มีหน้าที่รับผิดชอบในการแสดงผล

02:44.170 --> 02:46.600
ไอเท็มโปรเจ็กต์เหล่านี้และควรเป็นชิ้นส่วนที่ลากได้

02:46.600 --> 02:49.230
และกล่อง โปรเจ็กต์ที่ใช้งานอยู่และโปรเจ็กต์ที่เสร็จสิ้น

02:49.230 --> 02:57.880
ดังนั้นในที่นี้คลาสรายการโปรเจ็กต์ของเราควรเป็นเป้าหมายการลาก

02:57.880 --> 03:03.890
ตอนนี้อินเทอร์เฟซเหล่านี้บังคับให้นำไปใช้หรือเพิ่มในชั้นเรียนอย่างไร

03:03.890 --> 03:05.760
เริ่มกันที่ลากได้

03:05.760 --> 03:12.540
ที่นี่ โดยพื้นฐานแล้วเราต้องการผู้ฟังเหตุการณ์สองคนและดังนั้นจึงมีตัวจัดการสองคนสำหรับเหตุการณ์เหล่านี้

03:12.540 --> 03:32.330
ตัวจัดการการลากเริ่มต้นซึ่งจะเป็นวิธีและตัวจัดการการลากเนื่องจากเมื่อใช้งานการลากและวางสิ่งที่คุณต้องการลากจะต้องมีผู้ฟังบางคนที่รับฟังจุดเริ่มต้นของเหตุการณ์การลากนั้นและอาจเป็นผู้ฟังที่รับฟัง

03:32.330 --> 03:40.440
ไปยังจุดสิ้นสุดของเหตุการณ์การลากเพื่อให้สามารถอัปเดตประเภทใดก็ได้ที่คุณต้องการ

03:40.440 --> 03:42.580
ตอนนี้ตัวจัดการเหตุการณ์ drag

03:42.580 --> 03:47.370
start จะได้รับวัตถุเหตุการณ์ซึ่งเราจะเรียกว่าการลากเหตุการณ์ซึ่งเป็นประเภทในตัวประเภทที่มีตัวเลือก

03:47.370 --> 03:57.600
libs เนื่องจากการตั้งค่าข้อขัดแย้ง TS ของเราและ libs ที่เรากำลังเพิ่มเข้าไปและจะไม่ส่งคืน อะไรก็ตามที่มันจะเป็นเมธอดที่ดำเนินการ แต่จากนั้นทำบางอย่าง

03:57.600 --> 04:03.930
กำหนดค่าเหตุการณ์การลาก แต่ไม่ส่งคืน

04:03.930 --> 04:06.970
ตอนนี้ตัวจัดการการลากสิ้นสุดได้รับเหตุการณ์ที่คล้ายกัน

04:06.970 --> 04:10.730
มันยังได้รับเหตุการณ์การลากและทุกอย่างไม่ส่งคืนอะไรเลย

04:10.730 --> 04:13.130
ตอนนี้ แน่นอน คุณจะเห็นว่าเราใช้มันอย่างไรในไม่กี่วินาที

04:13.130 --> 04:15.810
ดังนั้นอย่ายุ่งกับฉันเลย

04:15.810 --> 04:17.810
ทีนี้ แล้วเป้าหมายการลากล่ะ?

04:17.810 --> 04:20.530
สำหรับเป้าหมาย ดังนั้นกล่องที่เราสามารถลากบางสิ่งลงไปได้

04:20.530 --> 04:26.280
มีตัวจัดการเหตุการณ์สามตัวที่ฉันต้องการนำไปใช้

04:26.280 --> 04:28.593
ตัวจัดการแบบลากผ่าน ตัวจัดการแบบปล่อย

04:29.440 --> 04:34.280
และตัวจัดการการลากปล่อย

04:34.280 --> 04:36.470
ทีนี้ สิ่งเหล่านี้เอาไว้ทำอะไร?

04:36.470 --> 04:50.160
ตอนนี้ คุณต้องใช้ตัวจัดการการลากทับเมื่อใช้งานการลากและวางในจาวาสคริปต์เพื่อส่งสัญญาณเบราว์เซอร์ในจาวาสคริปต์โดยทั่วไปว่าสิ่งที่คุณกำลังลากบางอย่างนั้นเป็นเป้าหมายการลากที่ถูกต้อง

04:50.160 --> 04:53.840
หากคุณทำไม่ถูกต้องในตัวจัดการการลากเหนือ

04:53.840 --> 04:56.410
การดรอปจะไม่สามารถทำได้

04:56.410 --> 05:00.760
คุณต้องใช้ตัวจัดการการดรอปเพื่อตอบสนองต่อการดร็อปจริงที่เกิดขึ้น

05:00.760 --> 05:06.500
ดังนั้นหากตัวจัดการการลากผ่านจะอนุญาตการดร็อปด้วยตัวจัดการการดร็อปจะจัดการกับการดรอป

05:06.500 --> 05:08.650
จากนั้นที่นี่ เราสามารถอัปเดตข้อมูลและ

05:08.650 --> 05:11.960
UI ของเราได้ เช่น และตัวจัดการการลาก จะมีประโยชน์

05:11.960 --> 05:14.500
เช่น ถ้าเราให้ข้อเสนอแนะด้วยภาพแก่ผู้ใช้

05:14.500 --> 05:16.940
เมื่อเขาหรือเธอลากบางสิ่งบางอย่างเหนือกล่อง

05:16.940 --> 05:32.190
ตัวอย่างเช่น เราเปลี่ยนสีพื้นหลังให้ดีถ้าไม่มีการตกหล่นเกิดขึ้น และแทนที่จะเป็นการยกเลิกหรือผู้ใช้ย้ายองค์ประกอบ เราสามารถใช้ตัวจัดการลากลาเพื่อย้อนกลับการอัปเดตภาพของเรา

05:32.190 --> 05:37.990
ตอนนี้ตัวจัดการทั้งสามตัวได้รับเหตุการณ์การลากและไม่ส่งคืนสิ่งใด

05:37.990 --> 05:41.473
ดังนั้นเรามาอัปเดตให้เหมาะสมเช่นนี้

05:44.070 --> 05:47.250
และสำหรับตัวจัดการสุดท้ายนี้ด้วย

05:47.250 --> 05:49.810
และตอนนี้เราได้กำหนดค่าอินเทอร์เฟซบางส่วนซึ่งไม่ได้ทำอะไรมากนัก

05:49.810 --> 05:57.490
แต่ตอนนี้เราสามารถใช้มันได้ และฉันต้องการเริ่มต้นด้วยรายการโครงการ

05:57.490 --> 06:00.380
ลองหาคลาสไอเท็มโปรเจ็กต์ของเราสำหรับสิ่งนี้

06:00.380 --> 06:02.710
นี่คือคอมโพเนนต์ นี่คือไอเท็มโปรเจ็กต์

06:02.710 --> 06:08.540
และตอนนี้คุณอาจจำได้ว่าไม่สามารถใช้อินเทอร์เฟซเพื่อกำหนดประเภทออบเจกต์ที่กำหนดเองได้

06:08.540 --> 06:12.290
แต่คุณสามารถใช้เป็นสัญญาในคลาสได้

06:12.290 --> 06:19.290
คุณสามารถเรียกการนำไปใช้หรือเพิ่มการนำไปใช้ที่นี่หลังจากชื่อคลาสของคุณและหลังจากส่วนขยายที่เป็นไปได้ที่คุณกำลังทำอยู่

06:19.290 --> 06:20.900
จากนั้นใช้อินเทอร์เฟซ

06:20.900 --> 06:24.340
ในกรณีนี้ อินเทอร์เฟซแบบลากได้

06:24.340 --> 06:29.820
เมื่อคุณทำเช่นนั้น และฉันเพิ่งจัดรูปแบบนี้เพื่อนำมาขึ้นบรรทัดใหม่เพื่อให้อ่านง่ายขึ้น

06:29.820 --> 06:34.460
เมื่อคุณทำเช่นนั้น คุณจะได้รับข้อผิดพลาดว่าคลาสที่นี่ใช้อินเทอร์เฟซอย่างไม่ถูกต้อง

06:34.460 --> 06:38.600
เนื่องจากอินเทอร์เฟซที่ลากได้นั้นบังคับให้เราเพิ่มสองวิธี

06:38.600 --> 06:40.763
หากคุณจำได้

06:42.840 --> 06:44.480
ลองเพิ่มที่นี่

06:44.480 --> 06:46.290
บางทีเราอาจจะโหลดตัวสร้าง

06:46.290 --> 06:59.143
มาเพิ่มตัวจัดการการลากเริ่มต้นซึ่งได้รับเหตุการณ์ประเภทการลากเหตุการณ์และให้เพิ่มตัวจัดการการลากสิ้นสุดของเราซึ่งรับเหตุการณ์การลากของเรา

06:59.990 --> 07:02.010
และตอนนี้เราได้เพิ่มทั้งสองวิธีนี้แล้ว

07:02.010 --> 07:05.330
ตอนนี้เพียงอย่างเดียวไม่ได้เปิดใช้งานการลากและวาง

07:05.330 --> 07:08.900
มันช่วยให้เราเขียนส่วนประกอบที่ลากได้หรือคลาสที่ลากได้ในลักษณะเดียวกัน

07:08.900 --> 07:11.880
ดังนั้นหากเราเพิ่มคลาสที่ควรลากได้มากขึ้นเรื่อยๆ

07:11.880 --> 07:27.840
เราก็จะมีวิธีการเหล่านี้ซึ่งช่วยให้เหตุผลเกี่ยวกับโค้ดของเราและทำงานโค้ดของเราได้ง่ายขึ้นเสมอ โดยเฉพาะอย่างยิ่งเมื่อต้องทำงานเป็นทีม เพราะทุกคนรู้ว่าจะต้องทำงานที่ไหนสำหรับกิจกรรม Drag Start

07:27.840 --> 07:32.950
แน่นอนว่าสิ่งที่ไม่ได้ทำคือการฟังเหตุการณ์การลากเริ่มต้น

07:32.950 --> 07:36.730
นั่นคือสิ่งที่เราสามารถทำได้ในวิธีการกำหนดค่าที่คุณมีอยู่แล้ว

07:36.730 --> 07:41.090
เราสามารถเข้าถึงองค์ประกอบที่เรนเดอร์ของเราและเพิ่มตัวฟังเหตุการณ์เข้าไป

07:41.090 --> 07:43.890
ซึ่งนั่นจะเป็นเหตุการณ์การลากเริ่ม

07:43.890 --> 07:45.780
เหตุการณ์ drag start คือเหตุการณ์หนึ่ง

07:45.780 --> 07:53.740
เหตุการณ์เริ่มต้นของ browser dom ที่คุณสามารถฟังได้ และแน่นอนว่าตัวจัดการแบบคู่ที่เราต้องการเรียกใช้ก็คือตัวจัดการการลากเริ่มต้น

07:55.320 --> 07:57.793
ซึ่งเราสามารถชี้ไปที่ตรงนี้ได้

07:59.080 --> 08:04.870
ตอนนี้ เราต้องการให้แน่ใจว่าภายในตัวจัดการการลากเริ่มต้นนั้นคำหลักนี้อ้างอิงถึงคลาสของเรา

08:04.870 --> 08:08.530
และเมื่อคุณเรียนรู้กับฟังเหตุการณ์ที่โดยค่าเริ่มต้นจะไม่เป็นเช่นนั้น

08:08.530 --> 08:11.810
เราจึงสามารถใช้การผูกที่นี่และผูกสิ่งนี้ที่จะ ถูกต้อง

08:11.810 --> 08:14.750
แต่เรามีวิธีที่ดีกว่านั้นจริงๆ

08:14.750 --> 08:16.900
เราได้เพิ่มตัวตกแต่งการผูกอัตโนมัติ

08:16.900 --> 08:20.303
ดังนั้นฉันจะเพิ่มสิ่งนี้ที่นี่ไปยังตัวจัดการการเริ่มลาก

08:21.210 --> 08:28.530
ตอนนี้ เรายังสามารถฟังเหตุการณ์ลากสิ้นสุดที่นี่ และชี้ไปที่ตัวจัดการลากสิ้นสุด

08:28.530 --> 08:32.690
คุณยังสามารถเพิ่มการผูกอัตโนมัติที่นั่นหากคุณวางแผนที่จะใช้คำหลัก

08:32.690 --> 08:37.730
vis ที่นี่ สักครู่ฉันจะบันทึกการลากสิ้นสุดที่นี่เพื่อให้เราเห็นว่ามันถูกเรียกใช้เพราะที่นี่จริง

08:37.730 --> 08:40.520
ๆ แล้วฉันไม่มีอะไรเฉพาะเจาะจงที่ฉันต้องการจะทำ

08:40.520 --> 08:44.410
ดังนั้นฉัน จะเว้นพารามิเตอร์นี้ไว้และโดยทั่วไปจะบอก typescript

08:44.410 --> 08:47.310
ว่าฉันไม่ได้ใช้

08:47.310 --> 08:49.850
ในการลากเริ่มต้น เราจะใช้เหตุการณ์ และในขณะนี้

08:49.850 --> 08:53.720
ฉันจะบันทึกเหตุการณ์ เมื่อเหตุการณ์นี้เกิดขึ้น

08:53.720 --> 08:55.610
ตอนนี้เพียงอย่างเดียวจะไม่ทำเคล็ดลับ

08:55.610 --> 08:57.000
ถ้าคุณบันทึกทุกอย่างและเพิ่มบางโครงการที่นี่

08:57.000 --> 09:01.460
คุณจะเห็นว่าคุณไม่สามารถลากซ้ำได้ใช่ไหม

09:01.460 --> 09:07.390
หากคุณพยายามลาก มันจะไม่ทำงานเพราะคุณจะต้องเปลี่ยนบางอย่างในไฟล์

09:07.390 --> 09:09.720
HTML ของคุณด้วย

09:09.720 --> 09:11.810
ในรายการนี้ซึ่งกำลังแสดงผลสำหรับทุกโครงการ

09:11.810 --> 09:19.830
ซึ่งเป็นสิ่งที่คุณต้องการลาก คุณต้องเพิ่มแอตทริบิวต์ที่ลากได้และตั้งค่านี้เป็นจริง

09:19.830 --> 09:21.040
นั่นเป็นสิ่งสำคัญ

09:21.040 --> 09:24.200
สิ่งนี้บอกเบราว์เซอร์ว่าจะลากได้

09:24.200 --> 09:28.430
ด้วยสิ่งนั้น ถ้าคุณบันทึกมัน และเพิ่มโปรเจ็กต์ที่นี่อีกครั้ง คุณจะเห็นว่ามันลากได้จริงๆ

09:28.430 --> 09:32.070
ตอนนี้มันติดอยู่กับเมาส์ของฉัน และตอนนี้เราก็สามารถย้ายมันไปรอบๆ

09:32.070 --> 09:35.720
ตรงนี้ได้แล้ว

09:35.720 --> 09:38.530
นอกจากนี้ คุณจะเห็นทางด้านขวาว่าเหตุการณ์การลากเริ่มทำงานเมื่อฉันเริ่มลาก

09:38.530 --> 09:43.860
และถ้าฉันปล่อย คุณจะเห็นเหตุการณ์การสิ้นสุดการลากเริ่มทำงานเช่นกัน

09:43.860 --> 09:46.510
ดังนั้นผู้ฟังของเราจึงเชื่อมต่อกัน

09:46.510 --> 09:50.540
และเราสามารถลากได้ ตอนนี้เราสามารถทำงานกับเป้าหมายการดร็อปได้

09:50.540 --> 09:56.560
ดังนั้นในกล่องที่ควรลากไปเพื่อเพิ่มโครงการไปยังกล่องนั้น

09:56.560 --> 10:02.930
สิ่งหนึ่งที่ฉันจะทำอย่างรวดเร็วคือในแอพ

10:02.930 --> 10:02.930
css

10:02.930 --> 10:09.810
ในรายการ ดังนั้นในโครงการ LI ฉันจะเพิ่มสีพื้นหลังเป็นสีขาวเพื่อให้เรามองเห็นได้ดีขึ้นเล็กน้อย

10:09.810 --> 10:12.350
ในที่นี้ โปรเจ็กต์ LI ฉันเพิ่มสีขาวเพื่อที่ว่าเมื่อเราลากไปรอบๆ

10:12.350 --> 10:19.150
โปรเจ็กต์ตรงนี้ เรามีพื้นหลังสีขาวตรงนี้ ซึ่งทำให้มองเห็นได้ง่ายขึ้น

10:19.150 --> 10:20.840
ไม่ได้เปลี่ยนขั้นตอนต่อไปของเราแม้ว่า

10:20.840 --> 10:22.700
เราต้องการทำให้หยดของเขา
