WEBVTT

00:02.140 --> 00:04.200
-: Sekarang itu saja untuk kelas.

00:04.200 --> 00:06.180
Kami belajar tentang kelas itu sendiri.

00:06.180 --> 00:08.260
Kita belajar tentang properti

00:08.260 --> 00:09.850
mereka, pengubah sumbu,

00:09.850 --> 00:12.110
privat untuk sumbu internal, terlindungi

00:12.110 --> 00:15.990
untuk sumbu internal juga di kelas yang diwariskan, dan

00:15.990 --> 00:19.560
publik untuk sumbu dari mana saja.

00:19.560 --> 00:21.610
Kita juga belajar tentang metode yang bisa kita tambahkan.

00:21.610 --> 00:23.520
Tentang metode dan properti statis.

00:23.520 --> 00:25.520
Tentang metode abstrak dan kelas

00:25.520 --> 00:28.280
abstrak, yang penting ketika kita berbicara

00:28.280 --> 00:31.350
tentang konsep penting lainnya, pewarisan yang

00:31.350 --> 00:33.490
dapat kita gunakan.

00:33.490 --> 00:36.360
Di sini, kita mewarisi dari 'Department' dengan kata

00:36.360 --> 00:37.660
kunci 'extends'.

00:37.660 --> 00:40.440
Hal ini memungkinkan kita untuk berbagi fungsi,

00:40.440 --> 00:41.830
properti dan metode,

00:41.830 --> 00:45.100
dari kelas 'Department' dengan kelas pewarisan ini

00:45.100 --> 00:47.162
dan menambahkan fungsi kita sendiri

00:47.162 --> 00:50.300
atau menimpa fungsi yang ada.

00:50.300 --> 00:52.560
Entah karena kita harus override seperti

00:52.560 --> 00:55.620
pada kasus 'describe' yang merupakan method abstrak.

00:55.620 --> 00:58.710
Atau karena kita ingin menimpa, seperti dalam kasus

00:58.710 --> 01:01.640
'addEmployee' di sini di Departemen Akuntansi.

01:01.640 --> 01:04.290
Itu bukan metode abstrak di kelas dasar, tetapi tentu

01:04.290 --> 01:07.540
saja kita masih bisa meng-override-nya jika kita mau.

01:07.540 --> 01:10.370
Kita juga belajar tentang pola singleton

01:10.370 --> 01:13.150
dan 'konstruktor privat' yang terkadang

01:13.150 --> 01:14.180
juga berguna.

01:14.180 --> 01:17.290
Dan kemudian untuk keseluruhan, Anda sekarang mudah-mudahan memiliki ide yang baik

01:17.290 --> 01:20.290
tentang kelas dan apa yang dapat Anda lakukan dengan mereka di TypeScript.

01:20.290 --> 01:22.760
Secara umum, tentu saja, Anda perlu mengetahui

01:22.760 --> 01:26.030
apa itu kelas dan objek, dan juga sedikit tentang prototipe dalam

01:26.030 --> 01:29.690
Vanilla JavaScript karena itu umumnya bukan sesuatu yang diperkenalkan

01:29.690 --> 01:31.870
oleh TypeScript, tetapi tentu saja sesuatu

01:31.870 --> 01:34.600
yang terkait dengan TypeScript karena TypeScript

01:34.600 --> 01:37.800
dibangun di atas fitur JavaScript default ini, dan menambahkan

01:37.800 --> 01:41.663
keajaibannya sendiri di atas fitur-fitur ini.
