WEBVTT

00:02.150 --> 00:05.480
Narrator: I to już jest to dla tego modułu.

00:05.480 --> 00:08.090
Teraz oczywiście istnieją tony bibliotek stron

00:08.090 --> 00:10.130
trzecich, które można wykorzystać.

00:10.130 --> 00:12.680
Jest to wszystko więcej, co można zbadać na

00:12.680 --> 00:15.806
pakietach Class Validator i Class Transformer.

00:15.806 --> 00:18.652
Ale pomysł tutaj nie jest tak bardzo, aby zanurkować

00:18.652 --> 00:21.410
w wszystkie funkcje tych pakietów.

00:21.410 --> 00:24.300
Wolałbym pozostawić to do zbadania tobie.

00:24.300 --> 00:27.983
Chodzi o to, że dostajesz poczucie dwóch ważnych rzeczy:

00:27.983 --> 00:31.575
pierwszą rzeczą jest to, że z TypeScript możesz używać

00:31.575 --> 00:36.719
zwykłych pakietów JavaScript, takich jak Lodash, bez problemów.

00:36.719 --> 00:39.350
Możesz dostać błędy początkowo, pamiętaj,

00:39.350 --> 00:41.767
że technicznie to działało chociaż.

00:41.767 --> 00:45.244
Ale możesz również obejść te błędy kompilacji wtedy poprzez

00:45.244 --> 00:49.260
importowanie właściwych typów, właściwe tłumaczenie z JavaScript

00:49.260 --> 00:51.500
do TypeScript w końcu.

00:51.500 --> 00:54.590
I takie pakiety tłumaczeniowe istnieją dla wszystkich

00:54.590 --> 00:55.980
głównych i popularnych,

00:55.980 --> 00:59.180
a nawet wielu małych bibliotek JavaScript.

00:59.180 --> 01:02.221
Możesz również pracować z bibliotekami JavaScript,

01:02.221 --> 01:04.470
które mają te pliki tłumaczeniowe,

01:04.470 --> 01:07.110
te pliki DTS wbudowane już.

01:07.110 --> 01:08.840
Tam oczywiście nie trzeba później

01:08.840 --> 01:10.713
instalować takich tłumaczeń.

01:11.550 --> 01:14.350
Cóż, i oprócz tych prac Vanilla z bibliotekami, które

01:14.350 --> 01:17.094
mogą wymagać tłumaczeń, możesz również mieć biblioteki

01:17.094 --> 01:20.610
takie jak Class Transformer, które działają dobrze w Vanilla JavaScript,

01:20.610 --> 01:24.280
w nowoczesnym Vanilla JavaScript, przynajmniej tam, gdzie masz również

01:24.280 --> 01:26.580
klasy, ale które wszystkie prace, bez żadnych

01:26.580 --> 01:31.400
dodatkowych tłumaczeń i projektów TypeScript.

01:31.400 --> 01:34.960
A potem mamy takie pakiety jak Class Validator.

01:34.960 --> 01:38.440
Naprawdę obejmują one funkcje specyficzne dla TypeScript

01:38.440 --> 01:42.370
i dają ci zupełnie nowy sposób myślenia o swoim projekcie i rozwiązywania

01:42.370 --> 01:44.840
pewnych problemów.

01:44.840 --> 01:47.603
W tym przypadku tutaj, poprzez wykorzystanie dekoratorów.

01:48.680 --> 01:51.080
Wiedza o tych wszystkich rzeczach jest super ważna

01:51.080 --> 01:53.440
i daje ci całą elastyczność, której potrzebujesz

01:53.440 --> 01:55.253
do swoich przyszłych projektów.
