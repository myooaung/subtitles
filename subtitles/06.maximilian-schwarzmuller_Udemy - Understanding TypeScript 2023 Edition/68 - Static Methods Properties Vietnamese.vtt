WEBVTT

00:02.251 --> 00:03.380
Người hướng dẫn: Một tính

00:03.380 --> 00:05.350
năng thú vị khác liên quan đến các thuộc

00:05.350 --> 00:08.000
tính và phương thức, cũng tồn tại trong JavaScript

00:08.000 --> 00:10.010
khi bạn đang sử dụng ES6 trở lên, nhưng

00:10.010 --> 00:11.180
tất cả các bản đánh máy

00:11.180 --> 00:14.010
đều là các thuộc tính và phương thức tĩnh.

00:14.010 --> 00:17.520
Các thuộc tính và phương thức tĩnh cho phép bạn thêm

00:17.520 --> 00:20.620
các thuộc tính và phương thức vào các lớp không

00:20.620 --> 00:22.530
được truy cập trên một thể hiện

00:22.530 --> 00:26.080
của lớp, do đó bạn không cần gọi tên lớp mới trước mà bạn

00:26.080 --> 00:28.950
có thể truy cập trực tiếp trên lớp.

00:28.950 --> 00:31.350
Điều này thường được sử dụng cho các

00:31.350 --> 00:35.922
hàm tiện ích mà bạn muốn nhóm hoặc ánh xạ tới một lớp một cách hợp lý

00:35.922 --> 00:40.860
hoặc các hằng số toàn cầu mà bạn cũng muốn lưu trữ trong một lớp.

00:40.860 --> 00:43.270
Một ví dụ được tích hợp trong JavaScript,

00:43.270 --> 00:46.050
không được định nghĩa bởi TypeScript và không

00:46.050 --> 00:48.290
được bạn định nghĩa, nhưng một phần

00:48.290 --> 00:51.170
của JavaScript trong trình duyệt là hàm xây dựng

00:51.170 --> 00:53.220
Math hoặc lớp nếu bạn muốn gọi nó

00:53.220 --> 00:55.500
như thế này, có sẵn trên toàn cầu trong

00:55.500 --> 00:59.210
JavaScript, nơi bạn có thể truy cập pi dưới dạng một giá trị

00:59.210 --> 01:01.400
không đổi để cung cấp cho bạn số pi đó,

01:01.400 --> 01:05.050
hoặc các hàm hoặc phương thức chính xác, chẳng hạn như pow

01:05.050 --> 01:08.610
để tính công suất của một thứ gì đó.

01:08.610 --> 01:10.530
Đây là các phương thức và thuộc tính

01:10.530 --> 01:13.370
mà bạn không thể truy cập trên phiên bản Math.

01:13.370 --> 01:16.310
Bạn không cần phải gọi new math trước.

01:16.310 --> 01:19.830
Thật vậy, điều đó sẽ không hoạt động, nhưng bạn truy cập các thuộc tính này

01:19.830 --> 01:22.360
trong các phương thức trực tiếp trên chính lớp đó.

01:22.360 --> 01:25.340
Vì vậy, Math hoạt động giống như một không gian tên như

01:25.340 --> 01:27.370
một cơ chế nhóm ở đây và đó là trường hợp

01:27.370 --> 01:28.640
sử dụng phổ biến cho các

01:28.640 --> 01:30.480
phương thức và thuộc tính tĩnh và

01:30.480 --> 01:33.650
bạn cũng có thể thêm chúng vào các lớp của riêng mình.

01:33.650 --> 01:36.770
Giả sử trên Bộ phận, chúng tôi muốn có một phương

01:36.770 --> 01:40.050
pháp giúp chúng tôi tạo nhân viên và đó là thứ chúng

01:40.050 --> 01:43.450
tôi có thể muốn truy cập mà không cần khởi tạo Bộ phận,

01:43.450 --> 01:45.390
bởi vì chúng tôi thường khởi

01:45.390 --> 01:46.890
tạo các phiên bản chuyên

01:46.890 --> 01:49.970
biệt hơn, bộ phận CNTT và bộ phận kế toán và chúng

01:49.970 --> 01:51.290
tôi không thực sự muốn

01:51.290 --> 01:54.710
khởi tạo Department chỉ để gọi một phương thức tiện

01:54.710 --> 01:58.490
ích và do đó chúng ta có thể thêm một phương thức ở đây, tạo

01:58.490 --> 02:03.490
Nhân viên, giả sử, nơi chúng ta muốn lấy tên, là một chuỗi làm đối số và ở đó

02:03.680 --> 02:07.621
chúng ta muốn trả về một cái gì đó.

02:07.621 --> 02:10.230
Bây giờ để biến nó thành một phương thức tĩnh

02:10.230 --> 02:12.920
mà chúng ta có thể truy cập mà không cần khởi tạo

02:12.920 --> 02:16.250
lớp này, chúng ta thêm từ khóa tĩnh vào trước phương thức

02:16.250 --> 02:18.549
này và sau đó ở đây chúng ta có thể trả về

02:18.549 --> 02:23.549
một đối tượng nơi chúng ta có thuộc tính name được ánh xạ tới giá trị tên này.

02:25.170 --> 02:27.010
Tất nhiên, đó là một phương pháp rất đơn

02:27.010 --> 02:28.690
giản, nhưng bạn hiểu rồi đấy.

02:28.690 --> 02:31.960
Bây giờ để sử dụng nó, chúng ta có thể đi xuống đó nơi chúng

02:31.960 --> 02:33.490
ta thực thi mã của mình và bây

02:33.490 --> 02:36.940
giờ giả sử chúng ta muốn có một nhân viên mới, employee1.

02:39.300 --> 02:41.020
Vậy thì chúng ta có thể

02:41.020 --> 02:46.020
lấy cái này với Department. createEmployee và chuyển vào Max chẳng

02:46.920 --> 02:50.680
hạn và nếu tôi thì console. log(employee1) chúng ta sẽ

02:50.680 --> 02:53.170
thấy một đối tượng có tên là Max.

02:53.170 --> 02:55.630
Vì vậy, nếu tôi lưu nó, thực sự đây

02:55.630 --> 02:58.240
là nhân viên mà chúng tôi vừa tạo.

02:58.240 --> 03:01.200
Vì vậy, đây sẽ là một ví dụ điển hình cho một phương thức tĩnh.

03:01.200 --> 03:04.870
Chúng tôi gọi nó trực tiếp trên lớp, không có từ khóa mới

03:04.870 --> 03:06.360
và do đó chúng tôi sử dụng

03:06.360 --> 03:09.030
lớp làm cơ chế nhóm mà bạn có thể nói và nếu

03:09.030 --> 03:11.630
bạn muốn thêm một thuộc tính tĩnh, bạn cũng

03:11.630 --> 03:13.470
có thể làm điều đó.

03:13.470 --> 03:17.950
Nếu bạn có một cái gì đó như Năm tài chính ở đây mà bạn hiện muốn sử dụng trong

03:19.730 --> 03:22.040
công ty của mình, bạn có thể đặt cái này

03:22.040 --> 03:24.980
thành, giả sử, 2020 và sau đó đặt lại để cung cấp

03:24.980 --> 03:27.310
nó mà không cần khởi tạo cái này, bạn

03:27.310 --> 03:28.560
có thể thêm tĩnh trước

03:28.560 --> 03:30.810
thuộc tính này hoặc ở phía trước của

03:30.810 --> 03:33.950
lĩnh vực đó và bây giờ truy cập đó.

03:33.950 --> 03:36.560
Vì vậy, bây giờ xuống đó console. nhật ký. (mycreatedemployee).

03:38.050 --> 03:42.420
Ở đây chúng ta cũng có thể truy cập Department. ngân sách. Năm cứ như vậy mà không

03:43.900 --> 03:46.190
khởi tạo nó và nếu chúng ta lưu nó,

03:46.190 --> 03:47.150
không có gì ngạc

03:47.150 --> 03:51.130
nhiên khi chúng ta sẽ thấy năm 2020 được ghi lại ở đây.

03:51.130 --> 03:53.347
Vì vậy, đây là các phương thức và thuộc tính tĩnh.

03:53.347 --> 03:55.250
Một từ quan trọng về họ, hoặc

03:55.250 --> 03:56.947
một điều bạn nên ghi nhớ.

03:56.947 --> 03:59.067
Khi bạn thêm chúng vào một lớp, bạn

03:59.067 --> 04:03.370
không thể truy cập chúng từ bên trong các phần không tĩnh của mình.

04:03.370 --> 04:04.870
Vì vậy, nếu bạn muốn truy

04:04.870 --> 04:08.150
cập năm tài chính tại đây trong hàm tạo và bạn muốn

04:08.150 --> 04:10.375
console. log nó ở đây, cái

04:10.375 --> 04:13.490
này, như bạn có thể thấy, sẽ không hoạt động.

04:13.490 --> 04:15.600
Tôi nhận được một lỗi ở đây rằng tài

04:15.600 --> 04:18.690
sản tài chínhYear là một thành viên tĩnh.

04:18.690 --> 04:20.976
Chúng tôi không thể truy cập cái này

04:20.976 --> 04:24.290
ở đây vì hàm tạo và về cơ bản mọi thứ trong đó, tất cả

04:24.290 --> 04:26.530
các phương thức, không được đánh

04:26.530 --> 04:29.427
dấu bằng tĩnh và nhân tiện, bạn không thể đánh

04:29.427 --> 04:32.430
dấu hàm tạo là tĩnh, sẽ không thể truy cập thuộc

04:32.430 --> 04:34.770
tính tĩnh, bởi vì điều này đề cập đến

04:34.770 --> 04:37.660
thể hiện được tạo dựa trên lớp trong khi thuộc

04:37.660 --> 04:41.450
tính tĩnh không có sẵn trên thể hiện vì toàn bộ ý tưởng đằng

04:41.450 --> 04:44.150
sau các thuộc tính tĩnh và phương thức tĩnh

04:44.150 --> 04:47.780
là chúng tách rời khỏi các thể hiện.

04:47.780 --> 04:50.930
Vì vậy, tất nhiên bạn không thể truy cập chúng bằng từ khóa this.

04:50.930 --> 04:53.940
Nếu bạn muốn sử dụng thuộc tính hoặc phương

04:53.940 --> 04:56.080
thức tĩnh từ bên trong lớp, bạn

04:56.080 --> 04:59.380
sẽ phải sử dụng tên lớp ở đây để truy cập nó.

04:59.380 --> 05:01.337
Điều này cho phép bạn truy cập vào tất

05:01.337 --> 05:04.290
cả các thuộc tính và phương thức tĩnh từ bên trong lớp.

05:04.290 --> 05:06.593
Đó là một điều quan trọng cần ghi nhớ.
