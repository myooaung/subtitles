WEBVTT

00:02.440 --> 00:05.240
ผู้บรรยาย: เราได้เห็นว่าเราสามารถสร้างสิ่งที่น่าอัศจรรย์ได้ด้วยมัณฑนากร

00:05.240 --> 00:27.230
โรงงานมัณฑนากร และจากนั้นยังใช้ค่าส่งคืนของมัณฑนากร ซึ่งในตัวอย่าง มัณฑนากรคลาสช่วยให้เราสามารถแทนที่คลาสที่เราเพิ่มมัณฑนากรเข้าไปด้วยคลาสที่ แตกต่างโดยสิ้นเชิง ซึ่งสร้างขึ้นจากคลาสที่มีอยู่ เช่นในกรณีของเรา และนั่นอาจเพิ่มฟังก์ชันการทำงานบางอย่าง

00:27.230 --> 00:30.490
ตอนนี้คุณสามารถคืนค่าในมัณฑนากรอื่นๆ ได้เช่นกัน

00:30.490 --> 00:32.030
แต่ไม่ใช่ในค่าทั้งหมด

00:32.030 --> 00:35.430
หรือไม่ได้คำนึงถึงค่าส่งคืนทั้งหมด

00:35.430 --> 00:38.150
ตอนนี้ ตัวตกแต่งที่คุณสามารถส่งคืนบางสิ่งได้คือตัวตกแต่งที่คุณสามารถเพิ่มลงในวิธีการ

00:38.150 --> 00:43.540
และตัวตกแต่งที่คุณเพิ่มให้กับตัวเข้าถึง

00:43.540 --> 00:47.400
ดังนั้นที่นี่ใน setter log 2 และ log 3 บนเมธอดตัวตกแต่งสองตัวนี้,

00:47.400 --> 00:51.210
log 2 และ log 3 สิ่งเหล่านี้สามารถส่งคืนบางสิ่งและ

00:51.210 --> 00:54.080
TypeScript จะใช้มัน

00:54.080 --> 00:58.040
แน่นอนว่าตัวตกแต่งเกี่ยวกับคุณสมบัติและพารามิเตอร์สามารถส่งคืนบางสิ่งได้

00:58.040 --> 01:02.500
แต่ TypeScript จะเพิกเฉย

01:02.500 --> 01:07.700
ดังนั้นจึงไม่รองรับค่าที่ส่งคืนหรือไม่แม่นยำ

01:07.700 --> 01:09.690
ตอนนี้คุณสามารถคืนอะไรได้บ้างในล็อก 3

01:09.690 --> 01:12.680
ดังนั้นสำหรับผู้ตกแต่งเมธอดและในบันทึก

01:12.680 --> 01:15.320
2 ดังนั้นในผู้ตกแต่ง accessor

01:15.320 --> 01:19.320
คุณสามารถส่งคืนคำอธิบายคุณสมบัติใหม่ได้

01:19.320 --> 01:23.110
ล็อก 2 กับ ล็อก 3 ซึ่งเป็นนักตกแต่งสองคนที่ฉันพูดถึงใช่ไหม

01:23.110 --> 01:30.510
Log 2 และ Log 3 ดึง descriptor ออกจากคุณสมบัติ ออกจาก method คุณอาจพูดได้ว่าพวกมันถูกแนบมากับ

01:30.510 --> 01:33.034
เนื่องจากตัวเข้าถึงเป็นเหมือนเมธอด

01:33.034 --> 01:36.220
คุณจึงมีฟังก์ชันที่เรียกใช้ที่นั่น

01:36.220 --> 01:39.072
ตอนนี้ตัวอธิบายคุณสมบัติเป็นสิ่งของ JavaScript

01:39.072 --> 01:41.980
อย่างที่คุณทราบ ถ้าเราดูที่หน้านี้อีกครั้งและเราโหลดซ้ำ

01:41.980 --> 01:54.910
เราจะเห็นว่า ตัวอย่างเช่น สำหรับตัวตกแต่ง accessor ของเรา ตัวอธิบายคุณสมบัติคือวัตถุนี้ซึ่งมีการกำหนดค่าและนับได้ และรับและตั้งค่าคุณสมบัติ

01:54.910 --> 01:59.330
และสำหรับตัวตกแต่งเมธอด ตัวอธิบายของเราคือออบเจกต์นี้ซึ่งกำหนดค่าได้

01:59.330 --> 02:02.290
นับได้ มีค่าได้ และเขียนได้

02:02.290 --> 02:04.410
และนี่คือวานิลลาจาวาสคริปต์

02:04.410 --> 02:07.830
คุณมีคำอธิบายคุณสมบัติในวานิลลา JavaScript เช่นกัน

02:07.830 --> 02:11.710
ช่วยให้คุณสามารถกำหนดคุณสมบัติในรายละเอียดเพิ่มเติม

02:11.710 --> 02:15.990
แน่นอน คุณสามารถกำหนดค่าให้กับคุณสมบัติได้ และเนื่องจากเรากำลังพูดถึงเมธอด

02:15.990 --> 02:20.010
ค่าจึงเป็นฟังก์ชันในกรณีนี้ แต่คุณสามารถควบคุมได้ด้วยว่าจะเขียนได้หรือไม่

02:20.010 --> 02:22.910
ดังนั้นหากสามารถเปลี่ยนแปลงได้หลังจากสร้างเสร็จแล้ว

02:22.910 --> 02:24.700
หลังจาก สร้างวัตถุแล้ว

02:24.700 --> 02:25.950
สามารถกำหนดค่าได้หรือไม่ ดังนั้น

02:25.950 --> 02:27.140
หากคุณสามารถเปลี่ยนการกำหนดค่าได้

02:27.140 --> 02:29.570
และถ้าคุณสามารถลบคุณสมบัตินี้ได้

02:29.570 --> 02:33.166
และถ้านับได้ก็หมายความว่าจะแสดงเมื่อคุณวนซ้ำวัตถุของคุณ

02:33.166 --> 02:35.410
เป็นต้น

02:35.410 --> 02:38.790
ดังนั้นเมธอดเช่นโดยดีฟอลต์จึงถูกตั้งค่าเป็นเท็จ

02:38.790 --> 02:40.930
ดังนั้นหากคุณใช้ for ในลูปบนออบเจกต์

02:40.930 --> 02:44.040
เมธอดนี้จะไม่พิมพ์เป็นคุณสมบัติ

02:44.040 --> 02:45.240
สำหรับ accessor

02:45.240 --> 02:47.180
เรายังกำหนดค่าและนับได้

02:47.180 --> 02:49.750
แต่เราได้รับและตั้งค่า และแน่นอนว่าคุณสามารถคืนค่า

02:49.750 --> 02:53.040
descriptor ใหม่ที่กำหนดเมธอด set ใหม่

02:53.040 --> 02:58.750
หรือเพิ่มฟังก์ชัน get ในทันที

02:58.750 --> 03:01.585
ดังนั้นในบันทึก 2 และบันทึก 3 คุณสามารถส่งคืนออบเจกต์

03:01.585 --> 03:10.560
descriptor ใหม่ในตอนท้ายและทำให้ TypeScript ชัดเจนว่าคุณจะทำเช่นนั้นโดยการส่งคืนหรือโดยการตั้งค่าประเภทการส่งคืนเป็นคุณสมบัติ

03:10.560 --> 03:17.010
descriptor และที่นั่นคุณจึงสามารถตั้งค่าชุดคำหลักได้ คีย์เวิร์ด get คุณสมบัติที่กำหนดค่าได้หรือค่านับได้

03:17.010 --> 03:24.800
และเปลี่ยนวิธีกำหนดค่าตัวเข้าถึงหรือเมธอดนี้

03:24.800 --> 03:27.560
ตอนนี้ฉันไม่อยากทำที่นี่สำหรับ accessor

03:27.560 --> 03:29.800
ไม่มีอะไรน่าสนใจที่ฉันสามารถทำได้

03:29.800 --> 03:32.520
ดังนั้นฉันจะไม่คืนค่า descriptor คุณสมบัติ

03:32.520 --> 03:36.400
แต่ฉันจะแสดงให้คุณเห็นตัวอย่างด้วย method decorator ซึ่งเราจะส่งคืนบางสิ่งและเราทำได้

03:36.400 --> 03:42.533
สร้างความน่าสนใจด้วยความช่วยเหลือของมัณฑนากร
