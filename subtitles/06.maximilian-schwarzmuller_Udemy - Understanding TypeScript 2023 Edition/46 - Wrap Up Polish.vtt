WEBVTT

00:02.210 --> 00:04.150
Instruktor: I to tyle jeśli chodzi o ten moduł.

00:04.150 --> 00:07.040
Mieliśmy bardzo szczegółowe spojrzenie na kompilator TypeScript,

00:07.040 --> 00:08.140
jak możesz go skonfigurować

00:08.140 --> 00:10.360
i jak możesz upewnić się, że naprawdę kompiluje

00:10.360 --> 00:12.800
twój kod tak, jak chcesz.

00:12.800 --> 00:15.190
Przyjrzeliśmy się tym wszystkim różnym opcjom,

00:15.190 --> 00:17.030
szczególnie tym ścisłym, które naprawdę

00:17.030 --> 00:19.610
pozwalają pisać poprawny kod i nie natknąć się

00:19.610 --> 00:21.850
na dziwne błędy, dziwne błędy runtime, z

00:21.850 --> 00:24.100
którymi możesz się spotkać, na przykład

00:24.100 --> 00:27.660
z surowymi kontrolami null, a oprócz tego mieliśmy spojrzenie

00:27.660 --> 00:28.960
na debugowanie, jak możesz

00:28.960 --> 00:31.390
łatwo skonfigurować Chrome i VS Code tak, abyś

00:31.390 --> 00:34.830
mógł debugować z wnętrza VS Code.

00:34.830 --> 00:37.480
Debugowanie z wnętrza Chrome za pomocą map źródłowych

00:37.480 --> 00:38.900
i zakładki Źródła, oczywiście,

00:38.900 --> 00:40.390
jest zawsze opcją.

00:40.390 --> 00:42.850
Kluczowe są tutaj również mapy źródłowe,

00:42.850 --> 00:45.710
które konfigurujesz, aby były generowane w

00:45.710 --> 00:47.350
pliku tsconfig, czyli te

00:47.350 --> 00:48.900
pliki map, które żyją obok

00:48.900 --> 00:51.210
twoich plików JavaScript.

00:51.210 --> 00:54.600
Zasadniczo działają one jako mosty dla debuggera między

00:54.600 --> 00:56.300
twoimi plikami JavaScript i

00:56.300 --> 00:57.820
plikami TypeScript.

00:57.820 --> 01:00.160
I dzięki temu wiemy nieco więcej odnośnie

01:00.160 --> 01:02.680
tego, jak zarządzać naszymi projektami.

01:02.680 --> 01:03.870
Zobaczmy teraz, co jeszcze

01:03.870 --> 01:06.173
możemy zrobić z TypeScript i JavaScript.
