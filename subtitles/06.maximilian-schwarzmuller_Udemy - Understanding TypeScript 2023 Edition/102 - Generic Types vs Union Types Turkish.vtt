WEBVTT

00:02.180 --> 00:04.432
-: Şimdi burada açıklığa kavuşturmak istediğim

00:04.432 --> 00:06.300
yaygın bir karışıklık kaynağı, Generics

00:06.300 --> 00:09.030
ve Union türleri arasındaki farktır.

00:09.030 --> 00:11.950
Bu ikisini neden karıştırdınız?

00:11.950 --> 00:14.440
Örneğin, buradaki veri depolama alanımız.

00:14.440 --> 00:16.260
Bu türlere dayalı Genel türleri

00:16.260 --> 00:19.240
kabul ediyorsak, bunu sadece "Burada dizeleri,

00:19.240 --> 00:21.157
sayıları veya Boolean'ları

00:21.157 --> 00:23.750
saklamak istiyoruz, değil mi?" diyecek

00:23.750 --> 00:27.610
şekilde yeniden yazabiliriz. Dolayısıyla, bunu saklayabiliriz ya da daha doğrusu, bu türlerden

00:27.610 --> 00:30.470
herhangi birini bir dizi olarak söylemek için bunu

00:30.470 --> 00:32.660
parantez içine alabiliriz.

00:32.660 --> 00:35.040
Elbette burada şunu da söyleyebiliriz: "Burada

00:35.040 --> 00:37.017
bir öğe eklediğimizde elde ettiğimiz şey

00:37.017 --> 00:38.420
ya bir dize, ya bir sayı ya da bir

00:38.420 --> 00:39.740
Boolean'dır, kaldırdığımızda

00:39.740 --> 00:41.120
da aynı şey olur. Şimdi, bu yaklaşımla ilgili sorun nedir?

00:41.120 --> 00:43.007
İlk bakışta aynı şeyi başarıyor gibi görünebilir, ancak

00:44.424 --> 00:45.880
aslında tamamen farklı bir şey yapar.

00:45.880 --> 00:49.630
Burada söylediğimiz şey, dizeler, sayılar veya Boolean'lardan

00:49.630 --> 00:52.310
oluşan bir dizi olduğu sürece her türlü veriyi

00:52.310 --> 00:53.710
burada saklıyoruz ve

00:53.710 --> 00:55.690
daha sonra buraya bir dize, sayı

00:55.690 --> 00:57.220
veya Boolean olmak üzere

00:57.220 --> 00:59.730
her türlü veriyi ekliyoruz ve aynı şey

00:59.730 --> 01:02.930
kaldırmak için de geçerli.

01:02.930 --> 01:04.670
Şimdi, aşağıda zaten bazı hatalarımız var, elbette,

01:04.670 --> 01:06.650
çünkü bunu artık genel bir şekilde başlatamıyorum.

01:06.650 --> 01:09.830
Ama bunun dışında çalışıyor.

01:09.830 --> 01:12.520
Ancak buradaki sorun, bunun bir dizi karakter

01:12.520 --> 01:14.420
dizisi, bir dizi sayı dizisi

01:14.420 --> 01:15.890
ya da bir dizi Boolean olduğunu

01:15.890 --> 01:18.260
söylemememizdir.

01:18.260 --> 01:20.630
Bu, dizeleri, sayıları ve Boolean'ları

01:20.630 --> 01:24.190
karışık olarak içerebilen bir dizimiz olduğunu söyler.

01:24.190 --> 01:26.290
Dolayısıyla, bir dizgi dizisi

01:26.290 --> 01:30.190
ya da sayı dizisi demek isterseniz, dizgi dizisi, sayı

01:30.190 --> 01:32.100
dizisi ya da Boolean dizisi

01:32.100 --> 01:34.403
dememiz gerekir.

01:34.403 --> 01:36.020
Bunu yapabiliriz, ama şimdi burada bir sorunumuz var.

01:36.020 --> 01:39.100
Şimdi, bir dize, bir sayı veya bir Boole ekliyoruz,

01:39.100 --> 01:41.660
ancak bu veri dizisini aslında ne olarak

01:41.660 --> 01:44.710
ayarladığımıza bağlı olarak, bir sayı dizisi,

01:44.710 --> 01:46.750
bir Boole dizisi veya bir dize dizisi,

01:46.750 --> 01:52.320
bir sayı, bir Boole veya bir dize eklememize izin verilmiyor.

01:52.320 --> 01:54.140
Bunu bir dize dizisi olarak ayarlarsak,

01:54.140 --> 01:55.870
buraya bir sayı ekleyemeyiz.

01:55.870 --> 01:57.833
Ancak, burada sayı, Boolean veya dize olduğu sürece

01:57.833 --> 01:59.800
herhangi bir parametre ile sorunum yok.

01:59.800 --> 02:02.850
Yani sorun burada Birlik türleriyle ilgili.

02:02.850 --> 02:05.670
Bu yöntem veya bu yöntem her çağrıldığında bu değerlerden

02:05.670 --> 02:08.380
herhangi birini kabul ederiz.

02:08.380 --> 02:11.053
Yani, "Hey, bu sınıfla çalışırken tek bir

02:11.053 --> 02:14.250
türe karar vermeli ve ona bağlı kalmalısınız demiyoruz,

02:14.250 --> 02:15.397
bunun yerine bu yöntemi

02:15.397 --> 02:18.150
çağırdığınızda bu türlerden herhangi birini

02:18.150 --> 02:21.830
kullanmakta özgürsünüz diyoruz.

02:21.830 --> 02:23.440
Burada istediğimiz tam olarak bu değil.

02:23.440 --> 02:26.150
Bunu genel türleri kullandığımız

02:26.150 --> 02:29.640
önceki kuruluma geri döndürürsem, farklı

02:29.640 --> 02:33.050
bir kurulum elde ederiz.

02:33.050 --> 02:34.810
Burada, hangi veri türünü depolamak

02:37.580 --> 02:39.450
istediğinizi bir kez seçmeniz gerektiğini

02:39.450 --> 02:42.060
ve ardından yalnızca bu veri türünü eklemenize izin

02:42.060 --> 02:43.950
verildiğini söylüyoruz.

02:43.950 --> 02:45.750
Örneğin burada bir sayı eklersem,

02:45.750 --> 02:48.523
bu bir dize olmadığı için hata alırım ve genel

02:49.710 --> 02:56.170
türü ayarladığımda burada yalnızca dizeleri yönetmek istediğimi gösterir.

02:56.170 --> 02:57.810
Birlik türleri ile genel türler arasındaki fark budur.

02:57.810 --> 03:01.250
Union türleri, her çağırdığınızda bu türlerden biriyle

03:01.250 --> 03:05.040
çağırabileceğiniz bir işleve sahip olmak istiyorsanız

03:05.040 --> 03:06.920
harika olabilir.

03:06.920 --> 03:08.690
Belirli bir tipe kilitlenmek

03:08.690 --> 03:11.570
istiyorsanız jenerik tipler harikadır.

03:11.570 --> 03:13.460
Oluşturduğunuz sınıf örneğinin

03:13.460 --> 03:15.510
tamamında aynı türü kullanın.

03:15.510 --> 03:18.380
Tüm fonksiyon boyunca aynı tipi kullanın.

03:18.380 --> 03:20.070
Jenerik tipi istediğiniz yer burasıdır.

03:20.070 --> 03:23.300
Her yöntem çağrısında, her işlev çağrısında farklı bir

03:23.300 --> 03:25.850
türe sahip olma esnekliğine sahip olduğunuzda

03:25.850 --> 03:28.120
birlik türlerini istersiniz.

03:28.120 --> 03:30.810
Ardından, birlik türlerini kullanabilirsiniz.

03:30.810 --> 03:33.470
Jenerik tipler bir tipe kilitlenir.
