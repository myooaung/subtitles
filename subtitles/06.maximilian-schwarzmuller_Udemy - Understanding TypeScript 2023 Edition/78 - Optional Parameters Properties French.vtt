WEBVTT

00:02.180 --> 00:05.590
Instructeur : Revenons aux interfaces pour les objets.

00:05.590 --> 00:10.090
Vous pouvez également définir des propriétés optionnelles dans les interfaces

00:10.090 --> 00:14.100
et aussi dans les classes, comme je vais vous le montrer.

00:14.100 --> 00:16.437
Pour cela, vous ajoutez le nom de votre propriété,

00:16.437 --> 00:20.740
disons 'outputName' ici, qui peut être ce que vous voulez bien sûr, et qui doit

00:20.740 --> 00:22.238
être une chaîne.

00:22.238 --> 00:26.400
Je ne veux pas forcer toutes les classes basées sur Named

00:26.400 --> 00:27.630
à avoir ça.

00:27.630 --> 00:31.120
Il devrait être facultatif, que l'on veuille l'avoir ou non.

00:31.120 --> 00:34.289
Vous pouvez spécifier une propriété facultative en ajoutant

00:34.289 --> 00:37.670
un point d'interrogation après le nom de la propriété.

00:37.670 --> 00:40.130
Cela indique à Tivescript que cette propriété

00:40.130 --> 00:44.060
peut exister dans les classes qui mettent en œuvre cette interface, mais que

00:44.060 --> 00:45.680
ce n'est pas obligatoire.

00:45.680 --> 00:48.540
Et donc, nous n'avons pas d'erreur ici dans 'Person'

00:48.540 --> 00:51.180
même si je n'ai pas de propriété de nom de sortie

00:51.180 --> 00:53.440
parce qu'elle est facultative.

00:53.440 --> 00:56.072
Maintenant, bien sûr, je peux ajouter un nom de sortie

00:56.072 --> 00:59.130
ici et l'initialiser avec une valeur ou l'utiliser comme

00:59.130 --> 01:02.800
n'importe quelle autre propriété, mais je n'y suis pas obligé.

01:02.800 --> 01:06.720
Maintenant, sur une classe, vous pouvez également avoir une propriété optionnelle.

01:06.720 --> 01:09.670
Le même nom devrait être optionnel, parce

01:09.670 --> 01:13.840
que nous n'avons peut-être pas de valeur pour N.

01:13.840 --> 01:16.010
Nous pouvons ajouter un point d'interrogation

01:16.010 --> 01:17.460
ici aussi dans notre classe.

01:17.460 --> 01:20.890
Il nous suffit maintenant de le rendre facultatif ici, dans

01:20.890 --> 01:23.610
Named, sinon nous violons notre interface qui

01:23.610 --> 01:26.012
nous oblige à utiliser une chaîne.

01:26.012 --> 01:29.000
Maintenant, je dis que cela peut être facultatif.

01:29.000 --> 01:30.510
Donc ici, ce n'est pas facultatif,

01:30.510 --> 01:32.750
et ici, lorsque je mets cette valeur

01:32.750 --> 01:36.190
égale à N, je ne veux le faire que si N est véridique, s'il

01:36.190 --> 01:37.640
est fixé.

01:37.640 --> 01:40.080
Donc seulement s'il ne s'agit pas d'une chaîne vide, par exemple.

01:40.080 --> 01:43.340
Sinon, le nom ne sera pas défini et c'est bien parce

01:43.340 --> 01:46.524
que j'en ai fait une propriété facultative à la

01:46.524 --> 01:49.853
fois ici dans l'interface et dans ma classe.

01:50.790 --> 01:53.070
Ici, lorsque nous construisons un nouvel

01:53.070 --> 01:56.203
objet, nous pouvons le faire sans passer de nom.

01:57.060 --> 01:59.813
Pour permettre cela, nous devons aller dans le constructeur

01:59.813 --> 02:02.600
et fournir une valeur par défaut ici ou ajouter un

02:02.600 --> 02:05.120
point d'interrogation ici.

02:05.120 --> 02:06.260
Tout cela pour le permettre.

02:06.260 --> 02:08.800
Vous pouvez ajouter des paramètres facultatifs

02:08.800 --> 02:12.170
soit en fournissant une valeur de repli par défaut, soit en ajoutant

02:12.170 --> 02:13.990
un point d'interrogation, auquel

02:13.990 --> 02:17.170
cas la valeur par défaut sera indéfinie.

02:17.170 --> 02:20.450
Et maintenant nous pouvons appeler ce constructeur sans valeur parce

02:20.450 --> 02:22.446
que nous avons ce paramètre optionnel et

02:22.446 --> 02:25.960
parce que nous avons la propriété optionnelle qui est correcte, nous n'avons

02:25.960 --> 02:27.930
pas besoin de l'initialiser.

02:27.930 --> 02:29.648
Et donc par la suite si vous

02:29.648 --> 02:33.510
saluez, eh bien ce nom bien sûr va céder indéfini.

02:33.510 --> 02:35.640
Donc, nous devrions probablement vérifier ici aussi

02:35.640 --> 02:37.000
si nous avons un nom, et si c'est le

02:37.000 --> 02:39.100
cas, on console. enregistrez ça.

02:39.100 --> 02:42.970
Sinon, on se console. log "salut" sans aucune référence

02:42.970 --> 02:45.200
au nom parce que nous n'en avons pas.

02:45.200 --> 02:47.170
Si nous disons que si tout compile

02:47.170 --> 02:48.840
et nous voyons juste hi ici

02:48.840 --> 02:51.520
parce qu'il n'a pas fourni un nom.

02:51.520 --> 02:53.950
Il s'agirait donc de propriétés optionnelles

02:53.950 --> 02:56.008
à la fois dans une classe et dans une

02:56.008 --> 02:59.910
interface, ainsi que dans ma liste de constructeurs ici.

02:59.910 --> 03:01.660
Maintenant, pour que ce soit bien

03:01.660 --> 03:04.790
clair, ces trois choses ne sont que vaguement liées.

03:04.790 --> 03:07.980
Vous pouvez définir une propriété optionnelle dans une interface,

03:07.980 --> 03:11.060
puis l'implémenter comme une propriété non optionnelle dans

03:11.060 --> 03:11.910
la classe.

03:11.910 --> 03:14.550
Vous devez alors vous assurer que votre logique est

03:14.550 --> 03:17.810
telle qu'elle est toujours initialisée, sinon vous obtenez une

03:17.810 --> 03:19.720
erreur comme vous venez de le voir.

03:19.720 --> 03:22.180
Si vous avez une propriété facultative dans

03:23.723 --> 03:26.870
une interface et une propriété facultative dans votre

03:26.870 --> 03:31.630
classe, vous n'avez pas besoin d'attribuer une valeur dans tous les cas.

03:31.630 --> 03:34.210
En outre, et sans aucun rapport avec ce qui précède, vous

03:34.210 --> 03:36.020
pouvez avoir des paramètres facultatifs

03:36.020 --> 03:38.300
dans les fonctions et donc aussi dans les méthodes,

03:38.300 --> 03:40.300
y compris la méthode du constructeur.

03:40.300 --> 03:42.670
Les paramètres facultatifs sont définis soit

03:42.670 --> 03:43.810
avec le point d'interrogation,

03:43.810 --> 03:48.040
où la valeur par défaut, si elle n'est pas définie, est donc indéfinie, soit simplement

03:48.040 --> 03:51.690
en attribuant une valeur par défaut comme ceci.

03:51.690 --> 03:53.785
Comme vous l'avez appris, cette option est également

03:53.785 --> 03:56.960
facultative et la valeur par défaut sera prise en compte si vous ne fournissez

03:56.960 --> 03:58.750
pas de valeur plus spécifique.

03:58.750 --> 04:00.720
Cela vous donne donc plus de flexibilité dans

04:00.720 --> 04:02.950
la manière dont vous structurez vos classes, et lorsque

04:02.950 --> 04:04.770
nous parlons d'interfaces, dans la manière

04:04.770 --> 04:06.860
dont vous structurez vos contrats auxquels les

04:06.860 --> 04:09.103
classes pourraient devoir adhérer.
