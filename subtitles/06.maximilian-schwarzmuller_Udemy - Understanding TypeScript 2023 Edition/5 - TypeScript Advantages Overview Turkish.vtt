WEBVTT

00:02.290 --> 00:04.300
Anlatıcı: Yani TypeScript'i çalışırken

00:04.300 --> 00:06.700
gördünüz ve büyük avantajlar sunuyor.

00:06.700 --> 00:10.570
Temiz kod yazmayı gerçekten kolaylaştırır.

00:10.570 --> 00:14.060
TypeScript, Türleri ve verileri süper önemli hale getirir.

00:14.060 --> 00:16.810
Tipler ile işlerin nasıl yürüdüğü konusunda

00:16.810 --> 00:20.970
çok daha açık olmalıyız ve Tipleri kullanarak birçok kabul edilmeyen

00:20.970 --> 00:24.460
ve gereksiz hatadan kaçınabiliriz.

00:24.460 --> 00:27.640
Buna ek olarak, bu türleri algılayabilen

00:27.640 --> 00:31.070
ve bize daha iyi otomatik tamamlama ve TypeScript'i

00:31.070 --> 00:33.130
de anladıkları için kodu derlemeden

00:33.130 --> 00:36.940
önce gösteren yerleşik hatalar veren yerleşik Türler

00:36.940 --> 00:39.570
desteğine sahip modern IDE'leri de

00:39.570 --> 00:43.050
kullanabiliriz.

00:43.050 --> 00:46.870
Ancak Types ve Types kullanarak tek başımıza elde ettiğimiz büyük avantajların

00:46.870 --> 00:49.660
yanı sıra TypeScript tarafından eklenen diğer özelliklere

00:49.660 --> 00:51.410
de sahibiz.

00:51.410 --> 00:55.170
TypeScript dosyalarımızda yazıp kullanabileceğiniz belirli

00:55.170 --> 00:58.340
yeni nesil JavaScript özelliklerini kullanabiliriz

00:58.340 --> 01:01.890
ve daha sonra bunlar eski tarayıcılarda bile çalışan geçici

01:01.890 --> 01:05.630
çözümler için JavaScript koduna derlenir.

01:05.630 --> 01:08.170
Bunu Vanilla JavaScript ile de yapmamızı

01:08.170 --> 01:11.120
sağlayan bir araç olan Bevel'i biliyorsanız, TypeScript'te

01:11.120 --> 01:14.680
zaten yerleşik olarak bulunan bir araçtır.

01:14.680 --> 01:18.350
Modern JavaScript özelliklerini kullanabilir ve yine de eski

01:18.350 --> 01:21.773
tarayıcılarda da çalışan kodlar üretip gönderebiliriz.

01:22.610 --> 01:25.210
TypeScript ayrıca Arayüzler ve Jenerikler gibi

01:25.210 --> 01:26.930
yalnızca TypeScript'in anladığı

01:26.930 --> 01:29.070
belirli özellikleri de ekler.

01:29.070 --> 01:32.560
Bunlar JavaScript'te derlenen özelliklerdir ancak derlenmeleri

01:32.560 --> 01:35.360
gerekmez çünkü geliştirme sırasında bize yardımcı

01:35.360 --> 01:39.610
olan, hataları daha net görmemizi sağlayan ve daha fazla hatadan kaçınmamıza

01:39.610 --> 01:42.200
yardımcı olan özelliklerdir.

01:42.200 --> 01:45.660
Böylece, daha önce öğrendiğimiz Türlerin yanı sıra bu cepheye

01:45.660 --> 01:47.950
daha fazla özellik ekliyor.

01:47.950 --> 01:50.900
Ayrıca bize Dekoratörler gibi bazı Meta-programlama

01:50.900 --> 01:53.700
özellikleri sunar ki bu kursta Dekoratörlerin

01:53.700 --> 01:55.850
tam olarak ne olduğunu, neden bu kadar

01:55.850 --> 01:59.520
meta olduklarını ve neden harika olduklarını anlayacağınız

01:59.520 --> 02:01.790
bir modülüm var.

02:01.790 --> 02:04.230
TypeScript alls son derece yapılandırılabilir.

02:04.230 --> 02:06.390
Şimdiye kadar yapılandırmadık ama

02:06.390 --> 02:09.350
kursta sadece derleyici ve nasıl yapılandırılacağı

02:09.350 --> 02:12.510
hakkında konuştuğumuz bir modülüm var.

02:12.510 --> 02:15.700
Daha sıkı veya daha gevşek hale getirmek ve tam olarak

02:15.700 --> 02:18.960
istediğiniz şekilde davranmasını sağlamak için gereksinimlerinize

02:18.960 --> 02:23.310
göre gerçekten ince ayar yapabilirsiniz.

02:23.310 --> 02:26.790
Ve modern IDE'lere sahip Modern Tooling ile TypeScript

02:26.790 --> 02:30.610
olmayan projelerde bile destek alırsınız.

02:30.610 --> 02:33.700
Az önce gördüğünüz IDE, visual studio code, size

02:33.700 --> 02:37.740
düz JavaScript dosyalarında bile daha iyi destek sağlar çünkü

02:37.740 --> 02:41.010
siz açıkça TypeScript kullanmadan kaputun altındaki

02:41.010 --> 02:44.710
bazı TypeScript özelliklerini kullanabilir.

02:44.710 --> 02:47.640
Yani bu, TypeScript'in farkında olduğunuzda ve modern

02:47.640 --> 02:49.810
araçları kullandığınızda elde edeceğiniz

02:49.810 --> 02:52.020
ücretsiz bir kazançtır.

02:52.020 --> 02:54.830
TypeScript kullanmak için birçok neden var ve

02:54.830 --> 02:57.460
muhtemelen bu yüzden bu dersi aldınız.

02:57.460 --> 03:00.360
Bu eğitimde şimdi onu adım adım öğreneceğiz ve eklediği

03:00.360 --> 03:03.663
harika özellikler hakkında her şeyi öğreneceğiz.
