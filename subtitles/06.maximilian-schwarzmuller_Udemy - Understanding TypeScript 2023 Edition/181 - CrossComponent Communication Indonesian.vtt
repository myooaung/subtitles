WEBVTT

00:02.230 --> 00:05.130
Dosen: Jadi sekarang kita ingin mendapatkan teks yang kita masukkan

00:05.130 --> 00:07.960
di sini dari komponen NewTodo ke komponen aplikasi.

00:07.960 --> 00:09.690
Mengapa untuk komponen aplikasi?

00:09.690 --> 00:11.160
Karena itu adalah komponen

00:11.160 --> 00:13.610
kita yang memiliki tautan langsung ke

00:13.610 --> 00:16.340
komponen NewTodo maupun TodoList.

00:16.340 --> 00:19.320
Jadi, di sini saya ingin menambahkan fungsi baru dan saya

00:20.800 --> 00:24.560
akan menamainya todoAddHandler, namanya terserah Anda, saya hanya

00:24.560 --> 00:25.393
ingin menggunakan

00:25.393 --> 00:27.990
konvensi yang memiliki handler di akhir jika itu

00:27.990 --> 00:31.390
adalah fungsi yang memicu pada suatu peristiwa.

00:31.390 --> 00:34.330
Dan di sini saya berharap untuk mendapatkan teks, sebagai

00:34.330 --> 00:37.970
string, ini adalah fungsi kita sehingga kita bisa mengharapkan ini.

00:37.970 --> 00:40.720
Dan saya kemudian kami ingin menambahkan ini sebagai todo di sini.

00:40.720 --> 00:42.270
Sekarang, tentu saja, karena Anda tahu

00:42.270 --> 00:45.230
React, Anda tahu bahwa memperbarui array ini saja tidak akan berhasil, ini

00:45.230 --> 00:47.440
tidak akan me-render ulang komponen ini sehingga kita harus

00:47.440 --> 00:49.360
menggunakan beberapa manajemen state di sini untuk

00:49.360 --> 00:51.900
membuat ini bekerja, sebelum kita melakukan itu, mari kita pastikan

00:51.900 --> 00:53.040
bahwa setidaknya kita mendapatkan

00:53.040 --> 00:54.750
nilai ke fungsi ini.

00:54.750 --> 00:57.460
Jadi, mari kita catat teks di sini dan kemudian kita bisa fokus

00:57.460 --> 01:00.133
pada bagian manajemen statusnya sebagai langkah kedua.

01:01.000 --> 01:03.020
Untuk mendapatkannya di sini kita

01:03.020 --> 01:05.850
perlu memastikan bahwa fungsi todoAddHandler

01:05.850 --> 01:09.050
ini dapat dipanggil dari dalam komponen NewTodo karena

01:09.050 --> 01:12.113
di situlah kita menambahkan todo pada akhirnya.

01:13.090 --> 01:15.370
Sekarang, bagaimana kita membuat fungsi di

01:15.370 --> 01:17.860
sini dapat dipanggil dari dalam komponen ini?

01:17.860 --> 01:22.300
Kita mengoper pointer pada fungsi ini ke komponen tersebut.

01:22.300 --> 01:25.640
Jadi, di sini kita bisa menambahkan nama properti, onAddTodo, dan Anda

01:25.640 --> 01:27.280
dapat menamainya sesuka Anda, saya

01:27.280 --> 01:28.560
hanya menamainya seperti ini

01:28.560 --> 01:32.030
karena pada dasarnya ini akan terjadi pada suatu peristiwa, peristiwa yang

01:32.030 --> 01:34.600
kita kendalikan tentu saja, tetapi tetap saja.

01:34.600 --> 01:38.030
Dan di sini saya ingin meneruskan todoAddHandler jadi saya

01:38.030 --> 01:40.600
mengoper pointer pada fungsi ini, saya tidak

01:40.600 --> 01:42.120
mengeksekusinya di sini,

01:42.120 --> 01:44.620
saya hanya mengoper pointer ke fungsi ini,

01:44.620 --> 01:49.240
ke dalam onAddTodo sehingga alih-alih NewTodo pada props, yang bisa kita dapatkan

01:49.240 --> 01:52.230
di sini, kita bisa memanggil ini, sehingga kita bisa

01:52.230 --> 01:56.220
memanggil props. onAddTodo di sini dan meneruskan teks

01:56.220 --> 01:59.640
yang dimasukkan, itulah idenya, Tapi, tentu saja, TypeScript

01:59.640 --> 02:01.730
tidak menyukai ini karena tidak tahu

02:01.730 --> 02:03.440
bahwa akan ada prop onAddTodo

02:03.440 --> 02:06.180
pada props kita di sini dan bagaimana prop seperti

02:06.180 --> 02:08.240
itu akan terlihat.

02:08.240 --> 02:11.670
Jadi, sama seperti di TodoList, kita harus menyiapkan interface

02:11.670 --> 02:14.540
atau definisi tipe dari props kita.

02:14.540 --> 02:18.200
Jadi, mari kita pergi ke NewTodo dan mungkin, sekali lagi, tambahkan antarmuka, Anda

02:18.200 --> 02:20.820
juga bisa menambahkan jenis kursus dan saya akan melakukannya

02:20.820 --> 02:23.060
di sini untuk mencampuradukkan semuanya.

02:23.060 --> 02:25.380
Saya biasanya akan selalu menggunakan antarmuka,

02:25.380 --> 02:27.660
tetapi menggunakan tipe juga tidak masalah.

02:27.660 --> 02:30.493
Jadi, untuk menggunakan tipe di sini kita bisa menamainya

02:31.357 --> 02:33.820
NewTodoProps dan tipenya adalah tipe objek di mana

02:33.820 --> 02:36.830
saya ingin memiliki prop onAddTodo dan ini, pada gilirannya,

02:36.830 --> 02:39.120
akan menjadi tipe fungsi, itu akan menunjuk

02:39.120 --> 02:40.753
ke sebuah fungsi.

02:41.720 --> 02:44.290
Anda akan mendefinisikan jenis fungsi seperti ini, seperti

02:44.290 --> 02:46.760
yang Anda pelajari, itu akan menjadi fungsi yang tidak mengembalikan

02:46.760 --> 02:48.850
apa pun tetapi mengharapkan satu perimeter dan itu

02:48.850 --> 02:51.410
akan menjadi teks yang dimasukkan pengguna.

02:51.410 --> 02:54.023
Jadi, teks Todo yang bertipe string, itulah

02:55.120 --> 02:57.123
yang diharapkan oleh fungsi ini.

02:58.920 --> 03:01.770
Sekarang, mari kita atur ini pada tipe generik di sini dan

03:01.770 --> 03:03.103
arahkan ke NewTodoProps.

03:04.510 --> 03:08.620
Dan dengan itu, kita bisa memanggil onAddTodo dan mengoper string.

03:08.620 --> 03:11.470
Dan jika ia akan mencoba memasukkan angka di sini, misalnya,

03:11.470 --> 03:14.730
tentu saja kita akan mendapatkan error karena kita dengan jelas mendefinisikan

03:14.730 --> 03:17.590
bahwa argumen harus berupa string di atas sana.

03:17.590 --> 03:18.733
Jadi, mari kita kembalikan ini.

03:20.550 --> 03:24.630
Dengan itu, jika kita memasukkan tujuan baru lagi, menyelesaikannya dalam satu

03:24.630 --> 03:27.150
bulan, kita kembali melihat log di sini tetapi sekarang

03:27.150 --> 03:28.690
ini berasal dari komponen aplikasi,

03:28.690 --> 03:30.750
seperti yang dapat Anda ketahui dengan jelas,

03:30.750 --> 03:34.170
karena kami menambahkan log ini di sini.

03:34.170 --> 03:37.380
Jadi komunikasi antara komponen NewTodo dan komponen

03:37.380 --> 03:39.480
aplikasi di sini berfungsi.

03:39.480 --> 03:42.750
Dan dengan itu, mari kita implementasikan beberapa manajemen state di

03:42.750 --> 03:44.160
sini dan, sekali lagi, ini juga

03:44.160 --> 03:46.850
sesuatu yang dapat Anda coba sendiri terlebih dahulu jika

03:46.850 --> 03:49.670
Anda mau, untuk memastikan bahwa kita me-render todo dalam state

03:49.670 --> 03:52.170
sehingga setiap kali kita memperbarui todo kita, kita

03:52.170 --> 03:54.460
juga me-render ulang komponen ini.

03:54.460 --> 03:56.263
Mari kita lakukan itu dalam kuliah berikutnya.
