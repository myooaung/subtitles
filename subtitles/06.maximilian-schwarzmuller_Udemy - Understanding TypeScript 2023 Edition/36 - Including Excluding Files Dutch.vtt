WEBVTT

00:02.200 --> 00:03.840
Instructeur: Dit is dus hoe we nu meerdere

00:03.840 --> 00:06.290
bestanden kunnen beheren met TypeScript.

00:06.290 --> 00:08.870
Nu, één woord over het hebben van meerdere bestanden,

00:08.870 --> 00:11.500
wanneer je met meerdere bestanden werkt zoals we hier

00:11.500 --> 00:15.280
doen, kun je ze ook in elkaar importeren met modules, die je misschien kent van

00:15.280 --> 00:18.180
vanilla JavaScript, daar hebben we ook modules, het is iets

00:18.180 --> 00:20.770
wat ik echter in een speciaal deel van deze cursus zal

00:20.770 --> 00:23.830
behandelen, dus voor nu hebben we gewoon twee bestanden die niet

00:23.830 --> 00:25.560
in elkaar worden geïmporteerd, maar

00:25.560 --> 00:27.620
die in plaats daarvan worden geïmporteerd

00:27.620 --> 00:31.040
in index. html.

00:31.040 --> 00:32.990
Nu we dat achter de rug hebben, weten

00:32.990 --> 00:35.930
we dat we dit als een project kunnen beheren en dat

00:35.930 --> 00:39.060
we hier meerdere bestanden kunnen compileren.

00:39.060 --> 00:41.910
Laten we nu eens kijken naar tsconfig. json bestand omdat dit

00:41.910 --> 00:45.660
een cruciaal bestand is voor het beheer van dit project,

00:45.660 --> 00:48.100
het vertelt TypeScript in wezen hoe

00:48.100 --> 00:51.290
het deze bestanden moet compileren.

00:51.290 --> 00:55.260
Laten we, voordat we in de compilerOptions duiken, waar we, zoals

00:55.260 --> 00:56.470
de naam al aangeeft,

00:56.470 --> 00:59.620
kunnen instellen hoe de compiler zich gedraagt,

00:59.620 --> 01:02.220
naar beneden scrollen naar de plaats voor

01:02.220 --> 01:03.760
de afsluitende accolade,

01:03.760 --> 01:06.620
maar na deze geneste afsluitende accolade, en

01:06.620 --> 01:08.340
laten we eens kijken naar enkele

01:08.340 --> 01:11.910
opties die we hier kunnen toevoegen en die niet het gedrag

01:11.910 --> 01:14.190
van de compiler of de compilatiestap

01:14.190 --> 01:18.410
beïnvloeden, maar hoe de compiler met dit project werkt, want daar

01:18.410 --> 01:23.410
kun je bijvoorbeeld een uitsluitingsoptie instellen.

01:23.700 --> 01:26.770
Als u hier nu uitsluiten toevoegt, wordt dat een matrix,

01:26.770 --> 01:30.450
en wat u hier kunt invoeren zijn paden naar bestanden die niet

01:30.450 --> 01:33.480
mogen worden meegenomen in de compilatie wanneer

01:33.480 --> 01:36.400
u TSC uitvoert op het hele project.

01:36.400 --> 01:38.010
Dus hier kunnen we bijvoorbeeld zeggen

01:38.010 --> 01:41.137
dat we analytics willen uitsluiten. ts van compilatie, en natuurlijk

01:41.137 --> 01:43.390
heeft dit hier niet veel zin, maar gewoon om

01:43.390 --> 01:45.300
te laten zien hoe dit werkt.

01:45.300 --> 01:49.350
Als we dat doen en we herhalen tsc, en ik verwijder eerst

01:49.350 --> 01:51.600
analytics. js zodat we kunnen

01:51.600 --> 01:53.730
zien of het opnieuw wordt aangemaakt,

01:53.730 --> 01:57.140
als we nu tsc of tsc in watch mode uitvoeren, zie je geen

01:57.140 --> 01:59.810
analytics. js bestand is gemaakt, en de reden

01:59.810 --> 02:02.060
daarvoor is dat we dat bestand uitsluiten.

02:02.060 --> 02:03.340
Voor dit bestand heeft dit natuurlijk

02:03.340 --> 02:04.670
niet veel zin, omdat ik het normaal

02:04.670 --> 02:07.250
gesproken wil opnemen, maar als u een bestand had dat om

02:07.250 --> 02:09.360
een of andere reden niet gecompileerd mag worden,

02:09.360 --> 02:12.440
kunt u het op deze manier uitsluiten.

02:12.440 --> 02:14.210
U kunt ook werken met wildcards, en

02:14.210 --> 02:15.810
bijvoorbeeld, als u een bestand

02:15.810 --> 02:20.810
had met de naam analytics. dev. en je wilt dat niet echt compileren,

02:20.850 --> 02:22.900
je zou kunnen zeggen alle bestanden die

02:22.900 --> 02:25.770
eindigen op dev. ts mag niet worden gecompileerd,

02:25.770 --> 02:27.790
en dat kan door hier ook een sterretje

02:27.790 --> 02:29.620
toe te voegen, wat in principe een

02:29.620 --> 02:31.630
wildcard is, en nu zal TypeScript alle

02:31.630 --> 02:36.470
bestanden met .

02:36.470 --> 02:36.470
dev. ts inbegrepen.

02:36.470 --> 02:40.037
Je zou hier ook asterisk, sterretje, schuine streep kunnen

02:40.037 --> 02:43.080
toevoegen, en dat zou betekenen dat elk bestand met

02:43.080 --> 02:45.770
dat patroon in elke map wordt genegeerd.

02:45.770 --> 02:47.420
Dus dit zijn dingen die u hier kunt

02:47.420 --> 02:49.220
instellen, het enige wat ik hier wil

02:49.220 --> 02:51.500
instellen, en dat is een instelling die u vaak

02:51.500 --> 02:54.103
zult vinden, is dat ik node_modules wil uitsluiten,

02:55.409 --> 02:58.260
en het idee hier is dat ik geen TypeScript bestanden wil compileren

02:58.260 --> 03:01.373
die ik misschien binnen node_modules heb staan.

03:02.449 --> 03:05.080
Nu, node_modules is die map die alle afhankelijkheden

03:05.080 --> 03:09.570
bevat die we hier in het pakket installeren.

03:09.570 --> 03:09.570
json

03:09.570 --> 03:11.890
en de afhankelijkheden van deze afhankelijkheden,

03:11.890 --> 03:14.660
en daarom zijn dit bibliotheken van derden die we importeren,

03:14.660 --> 03:16.810
die we niet willen aanraken, en als een van

03:16.810 --> 03:18.510
deze bibliotheken TypeScript-code

03:18.510 --> 03:20.630
zou moeten verzenden, dan willen we het zeker

03:20.630 --> 03:22.690
niet compileren, het zal ons compilatieproces

03:22.690 --> 03:25.840
alleen maar vertragen, en in het ergste geval kan het zelfs ons

03:25.840 --> 03:29.200
project breken.

03:29.200 --> 03:30.370
Dus daarom is het vrij

03:30.370 --> 03:33.330
gebruikelijk om node_modules hier uit te sluiten, hoewel

03:33.330 --> 03:36.510
ik zal zeggen, als u de optie uitsluiten helemaal niet opgeeft,

03:36.510 --> 03:41.420
wordt node_modules automatisch uitgesloten als standaardinstelling, dus u hoeft deze

03:41.420 --> 03:43.980
optie hier niet echt toe te voegen, dit zou de standaard

03:43.980 --> 03:48.520
zijn, ik wil alleen laten zien dat uitsluiten bestaat en hoe u het kunt gebruiken als

03:48.520 --> 03:50.570
het enige dat u wilt uitsluiten node_modules

03:50.570 --> 03:53.404
is, u hoeft de sleutel uitsluiten helemaal niet toe

03:53.404 --> 03:55.670
te voegen.

03:55.670 --> 03:58.500
Als u het toch toevoegt, moet u node_modules instellen

03:58.500 --> 04:01.400
omdat het anders niet wordt uitgesloten.

04:01.400 --> 04:04.570
Naast uitsluiten hebben we ook include, en met include

04:04.570 --> 04:06.630
kun je het tegenovergestelde doen,

04:06.630 --> 04:09.570
je kunt TypeScript specifiek vertellen welke

04:09.570 --> 04:12.730
bestanden je wilt opnemen in het compilatieproces,

04:12.730 --> 04:16.380
en alles wat hier niet in staat wordt niet gecompileerd, dus

04:16.380 --> 04:20.620
als ik wijs naar app. ts hier, je zult zien dat als ik tsc opnieuw uitvoer,

04:20.620 --> 04:23.470
we ook geen analytics krijgen. ts bestand, of geen

04:23.470 --> 04:25.570
analyses. js bestand moet ik zeggen.

04:25.570 --> 04:26.403
Waarom?

04:26.403 --> 04:29.230
Omdat analytics. js is niet opgenomen in include,

04:29.230 --> 04:32.370
en zoals ik al zei, als we wel de include sleutel instellen, dan

04:32.370 --> 04:33.970
moeten we echt alles includen wat

04:33.970 --> 04:35.810
we willen compileren.

04:35.810 --> 04:40.080
Dus natuurlijk kunnen we hier ook analytics aan toevoegen. ts hier, en met die toevoeging zouden

04:40.080 --> 04:43.950
we beginnen en compileren, zoals je nu ziet, hebben we de

04:43.950 --> 04:46.740
analytics. js bestand, of als alternatief

04:46.740 --> 04:49.650
geven we hier een hele map op die typisch de bestanden

04:49.650 --> 04:52.560
bevat die we willen compileren.

04:52.560 --> 04:55.520
Uitsluiten, indien ingesteld naast include, filtert

04:55.520 --> 04:57.160
include naar beneden, dus

04:57.160 --> 05:00.290
als we een submap uitsluiten van een map die deel uitmaakt

05:00.290 --> 05:01.740
van include, dan zal die

05:01.740 --> 05:04.980
uitgesloten submap worden uitgesloten, dus in feite

05:04.980 --> 05:08.720
compileren we include minus uitsluiten.

05:08.720 --> 05:10.420
Nu wil ik hier natuurlijk geen include instellen,

05:10.420 --> 05:12.520
ik wil alle TypeScript bestanden compileren, en

05:12.520 --> 05:15.050
daarom hoef ik me daar geen zorgen over te maken, node_modules

05:15.050 --> 05:17.200
uitsluiten is alles wat ik nodig heb, en zoals ik al

05:17.200 --> 05:18.930
uitlegde, theoretisch hoef ik dat niet eens

05:18.930 --> 05:20.280
toe te voegen omdat dat standaard

05:20.280 --> 05:22.423
zou worden uitgesloten.

05:23.260 --> 05:25.310
Nu heb je ook nog de optie bestanden, waarmee

05:25.310 --> 05:27.560
je de individuele bestanden kunt aanwijzen,

05:27.560 --> 05:30.870
dus het is een beetje zoals include met het verschil dat je hier

05:30.870 --> 05:34.200
niet hele mappen kunt specificeren die je wilt includen, maar

05:34.200 --> 05:36.020
alleen de individuele bestanden

05:36.020 --> 05:38.220
die je wilt compileren. Dat kan een optie

05:38.220 --> 05:40.710
zijn voor kleinere projecten waarbij je weet dat

05:40.710 --> 05:43.660
je alleen met vrije bestanden werkt, en om een of andere

05:43.660 --> 05:46.770
reden heb je een paar andere TypeScript bestanden die je niet

05:46.770 --> 05:48.560
wilt aanraken, dan kun je de lijst

05:48.560 --> 05:51.340
van bestanden zo instellen.

05:51.340 --> 05:53.360
In werkelijkheid is die instelling

05:53.360 --> 05:55.740
echter niet zo vaak nodig.

05:55.740 --> 05:58.530
En dus, dat is het met de basis compilatie of

05:58.530 --> 06:00.910
project management opties hier.

06:00.910 --> 06:03.900
Nu is er natuurlijk veel meer dat we kunnen specificeren,

06:03.900 --> 06:08.230
veel meer dat we kunnen specificeren over de compiler zelf en hoe hij zich gedraagt

06:08.230 --> 06:10.793
tijdens de compilatiestap.
