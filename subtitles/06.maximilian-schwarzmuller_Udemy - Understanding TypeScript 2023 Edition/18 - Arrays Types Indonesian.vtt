WEBVTT

00:02.170 --> 00:06.250
-: Sekarang selain objek, kita juga memiliki array dalam JavaScript,

00:06.250 --> 00:08.300
jenis data yang sangat penting.

00:08.300 --> 00:10.810
Array dibuat seperti ini dalam JavaScript, seperti yang

00:10.810 --> 00:12.560
Anda ketahui, dan Anda dapat menyimpan

00:12.560 --> 00:15.970
data apa pun di sana: angka, string, boolean, objek, array lain, Anda dapat

00:15.970 --> 00:17.970
memiliki array bersarang, dan Anda juga dapat

00:17.970 --> 00:19.380
mencampur data.

00:19.380 --> 00:23.200
Anda bisa memiliki larik dengan string dan angka yang bercampur.

00:23.200 --> 00:25.570
Dan TypeScript juga mendukung array.

00:25.570 --> 00:29.260
Setiap larik JavaScript didukung dan jenis larik

00:29.260 --> 00:32.140
tersebut bisa fleksibel, atau ketat.

00:32.140 --> 00:35.200
Sekarang mari kita lihat itu di TypeScript.

00:35.200 --> 00:38.760
Untuk itu di sini di aplikasi. ts, katakanlah orang kita juga

00:38.760 --> 00:42.810
memiliki kunci hobi, tetapi tentu saja kita juga bisa memiliki variabel

00:42.810 --> 00:45.660
atau konstanta hobi di luar objek.

00:45.660 --> 00:49.050
Jadi, menggunakan array sama persis di dalam

00:49.050 --> 00:50.853
objek dan di luarnya.

00:51.950 --> 00:54.780
Jadi di sini kita memiliki hobi, dan hobi bisa

00:54.780 --> 00:58.140
berupa olahraga, dan memasak, katakanlah.

00:58.140 --> 01:01.150
Jadi, saya memiliki dua elemen di sana, dan elemen-elemen

01:01.150 --> 01:03.620
ini, seperti yang Anda ketahui, adalah string.

01:03.620 --> 01:07.570
Sekarang jika kita mengarahkan kursor ke hobi, TypeScript mendeteksi

01:07.570 --> 01:10.630
dengan benar jarak tipe string array.

01:10.630 --> 01:12.500
Sekarang itu adalah sintaks yang belum pernah Anda

01:12.500 --> 01:16.140
lihat sebelumnya, tetapi ini adalah bagaimana TypeScript menggambarkan array data.

01:16.140 --> 01:18.510
Anda memiliki tanda kurung siku, dan di

01:18.510 --> 01:21.340
depannya, jenis data yang disimpan di sana.

01:21.340 --> 01:23.530
Sekarang ini adalah tipe, kelompok tipe yang disimpulkan.

01:23.530 --> 01:25.810
Ia melihat bahwa di sini kita memiliki sebuah

01:25.810 --> 01:29.110
larik dan kita hanya memiliki string di sana, jadi ia menyimpulkan

01:29.110 --> 01:31.940
bahwa hobi mungkin harus berupa larik string.

01:31.940 --> 01:34.903
Dan memang, untuk hobi, itu sangat masuk akal.

01:36.210 --> 01:41.040
Tentu saja, Anda juga dapat secara eksplisit menetapkan jenis variabel.

01:41.040 --> 01:44.720
Jika kita akan menambahkan variabel baru, favorite activities,

01:45.580 --> 01:48.670
dan awalnya harus kosong, maka kita mungkin ingin

01:48.670 --> 01:51.160
secara eksplisit mengatur jenis data yang

01:51.160 --> 01:53.140
disimpan di sana.

01:53.140 --> 01:55.590
Sekarang katakanlah itu harus berupa array string, maka

01:55.590 --> 01:57.570
kita bisa mengulangi apa yang baru saja kita lihat;

01:57.570 --> 02:00.330
ketik string, dan kemudian tanda kurung siku di sana setelahnya,

02:00.330 --> 02:03.330
dan ini memberi tahu TypeScript bahwa apa yang kita simpan di sini bukan

02:03.330 --> 02:05.990
hanya string tunggal, itu adalah array string.

02:05.990 --> 02:09.550
Dan memang jika saya mencoba menyimpan hanya olahraga di sana, saya

02:09.550 --> 02:12.183
mendapatkan kesalahan. Saya mendapatkan error

02:12.183 --> 02:15.650
karena di sini adalah string tunggal, dan bukan array string.

02:15.650 --> 02:19.370
Tentu saja, saya tidak mendapatkan error jika saya membungkusnya ke dalam tanda

02:19.370 --> 02:22.610
kurung siku dan oleh karena itu secara efektif membuat array.

02:22.610 --> 02:25.870
Saya kembali mendapatkan error, jika saya menambahkan angka, katakanlah,

02:25.870 --> 02:29.220
karena kita mendefinisikan ini sebagai array string.

02:29.220 --> 02:31.290
Sekarang di sini, kita memiliki larik campuran.

02:31.290 --> 02:34.920
Ini adalah larik string dan angka, jadi itu tidak berfungsi

02:34.920 --> 02:37.180
dan tidak didukung di sini.

02:37.180 --> 02:40.100
Jika kita ingin mendukung larik campuran seperti itu,

02:40.100 --> 02:43.120
salah satu solusinya adalah menggunakan "any" di sini.

02:43.120 --> 02:45.880
Tipe "any" adalah tipe khusus dalam TypeScript, yang akan

02:45.880 --> 02:47.610
kita lihat lebih dekat nanti, yang pada

02:47.610 --> 02:50.530
dasarnya berarti, lakukan apa pun yang Anda inginkan.

02:50.530 --> 02:53.020
Ini tentu saja tipe yang tidak ingin Anda gunakan terlalu sering

02:53.020 --> 02:55.630
karena Anda akan kehilangan manfaat yang diberikan TypeScript kepada

02:55.630 --> 02:58.170
Anda, Anda kembali ke dunia JavaScript, di mana Anda juga dapat

02:58.170 --> 03:00.140
menggunakan nilai apa pun di mana saja.

03:00.140 --> 03:02.940
Jadi "any" benar-benar fleksibel, tetapi fleksibilitas

03:02.940 --> 03:06.270
datang dengan harga pada dasarnya melepaskan semua manfaat

03:06.270 --> 03:08.710
yang ditawarkan TypeScript.

03:08.710 --> 03:10.840
Jadi di sini saya akan kembali ke string, karena saya benar-benar

03:10.840 --> 03:12.530
tidak ingin ada angka di sana, dan karenanya kita

03:12.530 --> 03:14.933
dapat menghapus nomornya dan kita baik-baik saja.

03:15.900 --> 03:18.830
Array juga memberikan kita contoh yang bagus,

03:18.830 --> 03:21.890
sebenarnya seperti objek dan propertinya, bagaimana

03:21.890 --> 03:25.730
inferensi tipe TypeScript yang dinamis.

03:25.730 --> 03:28.750
Jika kita menambahkan loop "for" di sini di bagian bawah,

03:28.750 --> 03:31.570
dan kita ingin mencari semua hobi orang, kita tentu saja

03:31.570 --> 03:33.220
dapat menggunakan loop "for" tradisional

03:33.220 --> 03:38.220
dengan for const hobi orang. hobbies, jadi mengakses properti hobbies

03:38.620 --> 03:41.130
dan menelusuri semua hobbies di sana, menyimpan

03:41.130 --> 03:42.793
setiap hobbies untuk setiap

03:43.690 --> 03:46.780
iterasi dalam konstanta ini, dan kemudian kita dapat

03:46.780 --> 03:50.090
berkonsultasi dengan log hobby di sini.

03:50.090 --> 03:52.000
Sekarang itu tidak terlalu mewah, itu adalah sesuatu

03:52.000 --> 03:53.710
yang kita ketahui dari JavaScript, benar.

03:53.710 --> 03:58.280
Jika sekarang saya mengkompilasi aplikasi ini. ts file di bawah sana, kita

03:58.280 --> 04:01.700
mendapatkan nama dari baris ini, dan setelah

04:01.700 --> 04:04.750
itu dua hobi yang dicetak.

04:04.750 --> 04:07.800
Tapi yang sebenarnya menarik di sini adalah bahwa pada hobby, kita

04:07.800 --> 04:11.040
bisa mengakses apa saja, kita bisa mengakses pada string apa saja.

04:11.040 --> 04:14.210
Misalnya, untuk UpperCase, saya mendapatkan penyelesaian otomatis

04:14.210 --> 04:16.230
ini dan TypeScript tidak mengeluh.

04:16.230 --> 04:18.070
Mengapa tidak mengeluh?

04:18.070 --> 04:21.930
Karena tahu bahwa hobbies bertipe string array, jadi ketika

04:21.930 --> 04:25.830
saya mengakses person. hobbies, inferensi TypeScript

04:25.830 --> 04:29.700
mendeteksi bahwa hobbies akan menjadi array string.

04:29.700 --> 04:33.450
Jadi hobby, di sisi atas, diidentifikasi dengan benar sebagai

04:33.450 --> 04:36.000
string, karena karena kita melalui larik

04:36.000 --> 04:38.370
string, maka nilai-nilai individualnya

04:38.370 --> 04:40.510
haruslah hanya string.

04:40.510 --> 04:43.450
Dan oleh karena itu, tipe menawarkan dukungan yang luar

04:43.450 --> 04:46.490
biasa di sana, dan memungkinkan kita melakukan apa pun dengan

04:46.490 --> 04:50.050
hobi yang dapat dilakukan dengan string, karena ia tahu dengan pasti

04:50.050 --> 04:53.810
bahwa hobi akan menjadi string karena tipe yang kita atur di sana.

04:53.810 --> 04:56.300
Dan itu benar-benar fleksibel, dan tentu saja

04:56.300 --> 04:59.030
fitur hebat yang membuat penulisan kode jauh lebih

04:59.030 --> 05:01.360
mudah dan jauh lebih fleksibel dan aman.

05:01.360 --> 05:04.440
Misalnya, kita akan mendapatkan error di sini

05:04.440 --> 05:08.570
jika mencoba mengakses hobby. map, jika saya pikir ini akan menjadi sebuah array.

05:08.570 --> 05:12.060
Metode map tersedia pada array, tetapi tidak pada string.

05:12.060 --> 05:14.540
Dan di sini, benar, sekali lagi, error bahwa

05:14.540 --> 05:17.810
map tidak ada pada tipe string karena memang tidak ada.

05:17.810 --> 05:21.290
Jadi di sini kita mendapatkan error, dan itu bagus karena kita mendapatkannya,

05:21.290 --> 05:24.510
karena ini akan salah, dan di sini kita melihat inferensi TypeScript

05:24.510 --> 05:27.343
benar-benar, benar-benar bersinar.
