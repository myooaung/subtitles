WEBVTT

00:02.310 --> 00:04.250
教师：要输出有关单个项目项的更多有用信息,

00:04.250 --> 00:06.400
让我们转到ProjectItem类,

00:06.400 --> 00:10.480
因为这是我们呈现此内容的地方｡

00:10.480 --> 00:14.670
在这里, 当我设置h3标签的内容时,

00:14.670 --> 00:17.300
也就是人数, 我们可以把它改为,

00:17.300 --> 00:24.047
比如说, 我们在这里输出的人数加上“分配”｡

00:24.047 --> 00:24.047
所以我们至少可以说, 如果我把它呈现出来, “5赋值｡  但是“5分配”也不是一个很好的措辞, 对吗？

00:25.520 --> 00:30.160
当然, 我们可以说五个, 或者不管多少,

00:30.160 --> 00:35.010
“指定的人｡ 所以如果我们在这里说“指定人员”, 那就更好了......

00:35.010 --> 00:37.230
呜呜, 测试｡ 

00:37.230 --> 00:39.440
这有用吗？

00:39.440 --> 00:43.390
因为现在这上面写着“分配了5个人｡  这样好多了, 但还不够理想.

00:44.420 --> 00:46.520
如果我们只有一个人的项目呢？

00:46.520 --> 00:48.063
上面仍然写着“人”,

00:49.210 --> 00:52.000
这没有太大的意义｡

00:52.000 --> 00:54.860
现在, 吸气剂可以帮助我们｡ 

00:54.860 --> 00:57.740
所以这里不用“人”或“人”,

00:57.740 --> 00:59.610
我只用加“指派”｡ 但实际上我并不想在这里输出人数,

00:59.610 --> 01:04.430
我想用一个getter函数,

01:04.430 --> 01:08.120
它会返回一个合适的项.

01:08.120 --> 01:10.140
所以, 基本上是正确的文本｡ 

01:10.140 --> 01:11.650
所以在这里我将添加一个getter｡ 

01:11.650 --> 01:16.030
这不是必须要做的, 但是您经常看到的一个约定是在上部字段的正下方添加getter和setter｡

01:16.030 --> 01:21.660
所以我将在这里添加它, 在构造函数上面的字段下面｡

01:21.660 --> 01:23.033
现在我将它命名为“人物”｡  名字完全取决于你｡ 

01:24.464 --> 01:26.860
我把它命名为“人”｡ 

01:26.860 --> 01:30.580
getter基本上就像一个函数｡ 

01:30.580 --> 01:31.680
所以你必须在这里加上圆括号,

01:31.680 --> 01:34.350
然后加上大括号｡

01:34.350 --> 01:36.480
现在, 如您所见, 您必须返回一个值｡ 

01:36.480 --> 01:38.440
这里我想返回一个值, 它基本上是一些文本,

01:38.440 --> 01:42.630
基于我的项目中的人数｡

01:42.630 --> 01:46.150
我们来检查一下｡  项目｡  人等于一｡

01:46.150 --> 01:49.400
在这种情况下, 我会返回“1 person”作为文本, 否则我知道它不止一个或零,

01:49.400 --> 01:51.184
在这两种情况下, 我都会说“personers”,

01:51.184 --> 01:53.640
复数形式｡

01:53.640 --> 02:03.390
实际上, 我将返回一个模板文字, 这仅仅是因为使用模板文字更容易编写带有注入内容的文本｡

02:03.390 --> 02:08.390
我会这么说｡  项目｡  人的“人”｡  这就是我在这个场景中返回的文本｡ 

02:10.330 --> 02:13.150
所以现在我们只需要使用这个getter来自动获取正确的术语,

02:13.150 --> 02:17.350
正确的文本｡

02:17.350 --> 02:24.120
所以在那里, 而不是伸手到这个｡

02:24.120 --> 02:24.120
项目｡  我只想说,

02:24.120 --> 02:26.610
这个｡ 人｡  已分配｡ 

02:26.610 --> 02:30.860
我像访问普通属性一样访问它, 所以我们不是像调用带括号的函数一样,

02:30.860 --> 02:36.060
而是像这样访问它｡

02:36.060 --> 02:41.390
但这会触发这个getter, 因为它是相同的名称｡

02:41.390 --> 02:43.840
因此, 这将触发这个getter,

02:43.840 --> 02:47.700
在那里运行我们的逻辑, 然后返回适当的文本｡

02:47.700 --> 02:50.550
如果我们再试一次｡ 

02:50.550 --> 02:53.560
测试中｡ 

02:53.560 --> 02:55.740
这有用吗？

02:55.740 --> 02:57.710
我分配了五个, 我们看到“分配了五个人｡  这真的有用吗？

02:57.710 --> 02:59.080
确定吗？

02:59.080 --> 03:00.690
我在这里加一个｡ 

03:00.690 --> 03:04.390
我们会看到“分配了1个人｡  所以现在这是我想要的｡ 

03:04.390 --> 03:07.050
现在, 它确实正确地输出了它, 并且它展示了一个很好的getter用例｡

03:07.050 --> 03:12.460
这可以帮助我们在检索数据时转换数据｡
