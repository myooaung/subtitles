WEBVTT

00:02.260 --> 00:03.810
ナレーター：ジェネリクスが一段落したので､

00:03.810 --> 00:08.860
次はより高度な機能であるデコレーターを紹介しましょう｡

00:08.860 --> 00:14.000
デコレーターは､ メタプログラミングに非常に有効な機能です｡

00:14.000 --> 00:16.230
さて､ メタプログラミングとはどういう意味でしょうか｡ 

00:16.230 --> 00:20.430
つまり､ ページのエンドユーザーに直接影響を与えるようなデコレーターは､

00:20.430 --> 00:24.840
通常それほど頻繁に使用することはないということです｡

00:24.840 --> 00:27.080
そのため､ あなたのページを訪れるユーザーからは敬遠されますが､

00:27.080 --> 00:37.600
その代わりにデコレーターは､ 他の開発者が使いやすいコードを書くのに特に適した道具なのです｡

00:37.600 --> 00:39.120
奇妙に聞こえるかもしれませんが､ このモジュールを通して､

00:39.120 --> 00:41.280
私が何を言いたいのかがわかるでしょう｡

00:41.280 --> 00:43.213
結局のところ､ 他のコードスニペットとは異なり､

00:43.213 --> 00:45.530
例えばイベントリスナーを追加する場合､

00:45.530 --> 00:51.810
ページのユーザーに直接影響を与えるコードを簡単に書くことができるという事実に帰着します｡

00:51.810 --> 00:53.970
ボタンにリスナーを登録し､ ボタンがクリックされた後にアラートを表示すれば､

00:53.970 --> 01:00.320
ページを訪れたユーザはすぐに何かを見ることができます｡

01:00.320 --> 01:02.810
デコレータでは通常､ そのような作業は行いません｡

01:02.810 --> 01:09.230
その代わりに､ 例えばクラスのひとつやクラスのメソッドが正しく使用されることを保証したり､

01:09.230 --> 01:13.190
隠れた変換を行ったりします｡

01:13.190 --> 01:14.760
そこで､ このモジュールでは､ デコレータとは何か､

01:14.760 --> 01:17.300
どのようなものなのか､ そして､ なぜデコレータを使うのか､

01:17.300 --> 01:19.460
詳しく説明します｡

01:19.460 --> 01:20.850
もちろん使用しますし､

01:20.850 --> 01:22.140
デコレーションの種類､

01:22.140 --> 01:24.760
支持体の種類も学びます｡

01:24.760 --> 01:28.350
そして､ デコレータがどのような役割を果たし､

01:28.350 --> 01:32.233
なぜ有用なのか､ いくつかの例を見てみましょう｡
