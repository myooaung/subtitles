WEBVTT

00:02.170 --> 00:05.580
ผู้สอน: ตอนนี้มีการพูดคุยกันมากมายเกี่ยวกับอินเทอร์เฟซและคลาส

00:05.580 --> 00:15.290
ทีนี้มาดูเบื้องหลังและดูว่าจาวาสคริปต์สร้างหรือเสนออะไรแทนอินเทอร์เฟซได้บ้าง

00:15.290 --> 00:20.560
เราได้เรียนรู้ว่าสำหรับรหัสชั้นเรียน ท้ายที่สุดแล้วมันขึ้นอยู่กับเวอร์ชันที่เรากำลังรวบรวม

00:20.560 --> 00:24.280
หากคุณคอมไพล์สำหรับ es6 ที่นี่ในข้อขัดแย้ง ts

00:24.280 --> 00:27.160
ผลลัพธ์ของเราจะใช้คำหลัก class

00:27.160 --> 00:29.330
เนื่องจากเราคอมไพล์สำหรับ es5 ที่นี่

00:29.330 --> 00:33.420
เราจึงเห็นวิธีแก้ปัญหานี้โดยใช้โครงสร้างหรือฟังก์ชันแทนในตอนท้าย

00:33.420 --> 00:36.670
อย่างไรก็ตาม เกิดอะไรขึ้นกับอินเทอร์เฟซ

00:36.670 --> 00:38.720
มาดูแอพกันดีกว่า ไฟล์.js

00:38.720 --> 00:41.780
และคุณไม่เห็นอะไรเลย

00:41.780 --> 00:46.360
คุณจะไม่เห็นคำแปลใดๆ สำหรับอินเทอร์เฟซของเรา

00:46.360 --> 00:49.410
AddFn ชื่อทักทาย

00:49.410 --> 00:52.970
คุณไม่พบสิ่งเหล่านี้ในแอป จ.

00:52.970 --> 00:55.440
คุณพบฟังก์ชันของเราที่นี่ คุณพบฟังก์ชันคอนสตรัคเตอร์สำหรับออบเจกต์บุคคล

00:55.440 --> 01:03.500
โดยพื้นฐานแล้วการแปลนั้นสำหรับคลาสบุคคล และโค้ดอื่นๆ

01:03.500 --> 01:06.680
คุณไม่พบการอ้างอิงที่อินเทอร์เฟซใดๆ

01:06.680 --> 01:08.240
และมีเหตุผลที่ดีสำหรับสิ่งนั้น

01:08.240 --> 01:11.350
ไม่มีการแปลสำหรับอินเทอร์เฟซ

01:11.350 --> 01:13.650
JavaScript ไม่รู้จักคุณลักษณะนี้

01:13.650 --> 01:15.550
มันเป็นคุณสมบัติ TypeScript ล้วนๆ

01:15.550 --> 01:18.830
ใช้ได้เฉพาะระหว่างการพัฒนาและการคอมไพล์เท่านั้น

01:18.830 --> 01:21.640
คุณจึงสามารถใช้เพื่อปรับปรุงโค้ดของคุณได้

01:21.640 --> 01:23.970
ไม่มีเอาต์พุตสำหรับสิ่งนั้นที่จะลงเอยในไฟล์

01:23.970 --> 01:34.100
JavaScript ของคุณ ดังนั้นจึงเป็นคุณสมบัติการพัฒนาอย่างแท้จริงที่ช่วยให้คุณเขียนโค้ดได้ดีขึ้น มีโครงสร้างโค้ดที่ชัดเจนตามกฎที่ชัดเจน

01:34.100 --> 01:38.720
ที่รันไทม์ อินเทอร์เฟซเหล่านี้จะไม่เหลือร่องรอยใดๆ

01:38.720 --> 01:41.760
คุณจะไม่เห็นสิ่งใดที่เกี่ยวข้องกับอินเตอร์เฟสในโค้ดของคุณ

01:41.760 --> 01:47.130
มีเพียงฟังก์ชัน คลาส และโค้ดอื่นๆ ทั้งหมดที่ถูกคอมไพล์ในเอาต์พุต

01:47.130 --> 01:50.020
คุณสามารถพูดได้ว่าอินเทอร์เฟซถูกทิ้ง

01:50.020 --> 01:54.340
พวกมันถูกใช้ระหว่างการคอมไพล์เพื่อตรวจสอบโค้ดของคุณ จากนั้นพวกมันจะถูกละเว้น

01:54.340 --> 01:56.690
ไม่มีอะไรที่จะส่งออกสำหรับพวกเขา
