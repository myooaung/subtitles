WEBVTT

00:02.150 --> 00:04.320
Quando si tratta di costruire un'applicazione

00:04.320 --> 00:07.220
React con Typescript, abbiamo naturalmente

00:07.220 --> 00:10.800
bisogno di un progetto che sia in grado di gestire il nostro

00:10.800 --> 00:13.730
codice React, quindi cose come JSX, per esempio,

00:13.730 --> 00:17.480
e che compili e ottimizzi il nostro codice React, e che allo

00:17.480 --> 00:21.500
stesso tempo sia in grado di comprendere TypeScript e di compilare

00:21.500 --> 00:25.320
TypeScript in JavaScript.

00:25.320 --> 00:27.430
Impostare un progetto di questo tipo

00:27.430 --> 00:28.750
da soli può essere piuttosto

00:28.750 --> 00:31.940
difficile e quindi è bene che Create React App, uno strumento

00:31.940 --> 00:34.080
gestito dal team di React che possiamo

00:34.080 --> 00:36.420
usare per creare progetti React, supporti

00:36.420 --> 00:39.110
TypeScript in modo immediato.

00:39.110 --> 00:42.110
Basta cercare su Google Create React App TypeScript e

00:42.110 --> 00:44.590
si dovrebbe trovare questa voce nella documentazione

00:44.590 --> 00:47.000
ufficiale di Create React App.

00:47.000 --> 00:49.140
Lì imparerete come aggiungere TypeScript

00:49.140 --> 00:51.540
a un progetto esistente, qui, in questi

00:51.540 --> 00:54.850
passaggi, o come creare un nuovo progetto con Create

00:54.850 --> 00:57.290
React App e TypeScript, e qui vedete un

00:57.290 --> 01:00.400
comando che potete semplicemente copiare, per

01:00.400 --> 01:03.030
creare un nuovo progetto React, che supporta

01:03.030 --> 01:05.680
anche TypeScript.

01:05.680 --> 01:07.020
Ora, userò questo

01:07.020 --> 01:11.110
qui e qui sono già in una cartella che voglio usare.

01:11.110 --> 01:13.210
Questa è semplicemente la cartella del progetto che

01:13.210 --> 01:14.790
voglio usare per questo progetto.

01:14.790 --> 01:16.900
E poi incolliamo questo comando.

01:16.900 --> 01:17.740
E in questo caso,

01:17.740 --> 01:20.970
poiché voglio usare la cartella in cui mi trovo già, anche

01:20.970 --> 01:22.710
qui nel mio terminale, sostituirò

01:22.710 --> 01:25.190
il nome del progetto con un punto, in modo che

01:25.190 --> 01:27.590
non crei una nuova sottocartella e crei il

01:27.590 --> 01:29.550
progetto in quella, ma che invece

01:29.550 --> 01:31.730
usi questa cartella.

01:31.730 --> 01:33.720
Questo è ovviamente facoltativo.

01:33.720 --> 01:35.850
Vorrei anche dire che ho notato che questo

01:35.850 --> 01:38.070
comando non funziona sempre.

01:38.070 --> 01:41.390
A volte crea un normale progetto JavaScript.

01:41.390 --> 01:42.590
Per risolvere il problema,

01:42.590 --> 01:46.343
potete installare Create React App a livello globale sul vostro computer.

01:47.340 --> 01:49.140
È possibile farlo semplicemente

01:49.140 --> 01:54.140
eseguendo npm install -g create-react-app; su Mac e Linux potrebbe essere necessario aggiungere

01:54.780 --> 01:56.560
un sudo davanti a questo.

01:56.560 --> 01:59.360
Con questo installato sul computer, è possibile

01:59.360 --> 02:03.010
eseguire questo comando qui, ma senza npx, proprio come

02:03.010 --> 02:05.920
questo, e dovrebbe funzionare.

02:05.920 --> 02:07.270
Quindi è quello che farò qui,

02:07.270 --> 02:09.320
ma normalmente dovrebbe funzionare anche

02:09.320 --> 02:12.250
senza installarlo, usando semplicemente lo strumento

02:12.250 --> 02:15.520
npx, che fa parte dello strumento npm che abbiamo già installato

02:15.520 --> 02:18.840
insieme a Node. js all'inizio del corso.

02:18.840 --> 02:23.250
Quindi, per il momento, viene creato un nuovo progetto in questa cartella.

02:23.250 --> 02:27.460
E in quel progetto, verrà impostata un'applicazione React in cui potremo

02:27.460 --> 02:31.070
scrivere tutto il nostro codice con TypeScript.

02:31.070 --> 02:32.460
Aspettiamo quindi che finisca.

02:32.460 --> 02:34.610
E vediamo cosa ci regala.

02:34.610 --> 02:36.010
E si è conclusa.

02:36.010 --> 02:37.930
Diamo quindi un'occhiata a ciò che abbiamo.

02:37.930 --> 02:41.000
Abbiamo una cartella, che come si può notare è fondamentalmente

02:41.000 --> 02:43.970
la stessa struttura che si ha quando si crea un'applicazione

02:43.970 --> 02:45.500
React senza TypeScript.

02:45.500 --> 02:48.790
Ma possiamo già vedere il tsconfig. json.

02:48.790 --> 02:51.020
A proposito, è possibile modificare questo file

02:51.020 --> 02:52.940
e adattarlo alle proprie esigenze.

02:52.940 --> 02:55.250
Dopotutto, avete imparato a modificare questa configurazione

02:55.250 --> 02:57.120
all'inizio del corso.

02:57.120 --> 02:58.460
La configurazione predefinita dovrebbe

02:58.460 --> 03:01.160
comunque andare bene per la maggior parte dei casi d'uso.

03:01.160 --> 03:02.950
Ora se esploriamo la cartella src, che

03:02.950 --> 03:05.230
è dove scriveremo il nostro codice sorgente, troviamo

03:05.230 --> 03:08.550
anche un mucchio di file . file tsx.

03:08.550 --> 03:11.900
Finora nel corso non abbiamo lavorato con . tsx, ma solo con

03:11.900 --> 03:13.787
i file . file ts. È stato scelto semplicemente

03:13.787 --> 03:17.800
tsx, perché si tratta di file in cui non si può scrivere solo codice

03:17.800 --> 03:20.530
TypeScript, ma tutto il codice JSX, che è una

03:20.530 --> 03:22.000
sintassi speciale di React,

03:22.000 --> 03:25.570
JavaScript, in cui si scrive markup HTML all'interno del codice

03:25.570 --> 03:29.930
JavaScript o, in questo caso, TypeScript.

03:29.930 --> 03:32.880
Questo è ciò che otteniamo qui.

03:32.880 --> 03:34.920
Ora, in questi file, possiamo già vedere alcune

03:34.920 --> 03:36.500
sintassi di TypeScript, per esempio,

03:36.500 --> 03:38.800
qui, abbiamo un'assegnazione di tipo; darò un'occhiata

03:38.800 --> 03:41.480
più da vicino a questo tipo più tardi, ma per ora, possiamo

03:41.480 --> 03:43.880
solo vedere immediatamente che ovviamente usiamo

03:43.880 --> 03:45.780
TypeScript qui.

03:45.780 --> 03:49.290
A questo punto, ripulisco un po' la struttura della cartella

03:49.290 --> 03:50.680
di partenza e costruiamo

03:50.680 --> 03:52.730
insieme una semplicissima applicazione

03:52.730 --> 03:56.150
React; nel frattempo, esploriamo come usare TypeScript

03:56.150 --> 03:57.550
con React.

03:57.550 --> 04:01.000
Concentriamoci quindi sulla pulizia,

04:01.000 --> 04:02.950
qui in App. tsx, rimuoverò l'importazione del

04:02.950 --> 04:06.860
logo e rimuoverò tutto il contenuto

04:06.860 --> 04:09.380
nel mio div qui e manterrò solo questo div.

04:09.380 --> 04:12.020
Rimuoverò anche l'App. css, sbarazzarsi

04:12.020 --> 04:15.530
dell'App. css e il file App. test. file tsx e il

04:15.530 --> 04:19.560
logo. svg e il serviceWorker. ts, rimuoverli

04:19.560 --> 04:23.470
tutti.

04:23.470 --> 04:25.500
In indice. tsx, rimuoverò l'importazione di serviceWorker,

04:25.500 --> 04:29.060
perché qui non lavoreremo con serviceWorker,

04:29.060 --> 04:32.100
rimuoverò il codice laggiù e mi ritroverò con questa configurazione

04:32.100 --> 04:34.530
e con l'indice. css cancellerò tutto questo e imposterò

04:34.530 --> 04:38.870
solo uno stile HTML in cui voglio impostare

04:38.870 --> 04:40.610
un font-family di sans-serif

04:40.610 --> 04:43.140
e poi uno stile body in cui voglio sbarazzarmi

04:43.140 --> 04:48.820
del margine, proprio come questo, uno stile molto semplice.

04:48.820 --> 04:50.763
E con questo abbiamo una configurazione di partenza

04:52.790 --> 04:54.540
con la quale voglio lavorare.

04:54.540 --> 04:55.840
Di nuovo, ve l'ho accennato, ma

04:55.840 --> 04:57.370
se tutto questo non vi dice nulla, se questa

04:57.370 --> 04:59.710
è una sintassi che non avete mai visto prima, allora prima

04:59.710 --> 05:02.200
di tutto immergetevi in qualche risorsa di React.

05:02.200 --> 05:05.610
Non è su questo che ci concentreremo in questo modulo,

05:05.610 --> 05:08.130
non imparerete React in questo modulo.

05:08.130 --> 05:11.010
Ma ora salviamo tutte le modifiche e proseguiamo,

05:11.010 --> 05:12.920
iniziando a scrivere un po' di

05:12.920 --> 05:15.680
codice React e Typhon e imparando come queste

05:15.680 --> 05:17.980
due cose lavorano insieme.
