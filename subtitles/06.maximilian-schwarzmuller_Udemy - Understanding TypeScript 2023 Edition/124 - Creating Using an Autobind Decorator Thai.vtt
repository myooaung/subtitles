WEBVTT

00:02.220 --> 00:04.550
-: ฉันกำลังพูดถึงมัณฑนากร ซึ่งเราสามารถเพิ่มที่ผูกคำหลัก

00:04.550 --> 00:09.930
"นี้" โดยอัตโนมัติ เพื่อที่เราจะได้ไม่ต้องเรียกการผูกที่นี่

00:09.930 --> 00:14.160
ตอนนี้เห็นได้ชัดว่าการเรียกการผูกที่นี่ไม่ใช่เรื่องใหญ่หากไม่มีอะไรผิดปกติ

00:14.160 --> 00:16.460
แต่เราต้องการฝึกฝนสิ่งที่เราเรียนรู้และถ้าเราต้องทำสิ่งนี้ในหลาย

00:16.460 --> 00:24.970
ๆ ที่ทั่วแอปของเราโดยมีมัณฑนากรซึ่งเราสามารถเพิ่มได้ จริง ๆ แล้ว จะง่ายขึ้น

00:24.970 --> 00:27.100
งั้นมากำจัดสิ่งนี้กัน

00:27.100 --> 00:30.010
และเหนือชั้นเรียนที่นี่ ฉันจะเพิ่มตัวตกแต่งการผูกอัตโนมัติ

00:30.010 --> 00:34.920
และฉันแค่เพิ่มความคิดเห็นบางส่วนที่นี่เพื่อให้ไฟล์นี้เป็นระเบียบ

00:34.920 --> 00:38.750
อย่างน้อยก็เล็กน้อย

00:38.750 --> 00:40.490
ProjectInput Class

00:42.260 --> 00:44.790
ดังนั้นมัณฑนากรคืออะไร?

00:44.790 --> 00:46.770
มัณฑนากรคือหน้าที่ใช่ไหม?

00:46.770 --> 00:51.383
และคุณสามารถค้นหาได้จากการตกแต่งฟังก์ชั่นที่นี่หรือการแสดงออกของฟังก์ชั่น

00:52.490 --> 00:54.780
ในที่นี้ฉันจะใช้การตกแต่งฟังก์ชัน และฉันจะตั้งชื่อว่า

00:54.780 --> 00:57.780
autobind ชื่อนั้นขึ้นอยู่กับคุณ

00:57.780 --> 01:01.670
และตัวตกแต่งนี้จะได้รับอาร์กิวเมนต์ฟรีสำหรับเป้าหมาย

01:01.670 --> 01:03.173
ชื่อเมธอดที่มันถูกผูกไว้

01:04.430 --> 01:09.083
เพราะฉันจะสร้างตัวตกแต่งเมธอดที่นี่

01:09.980 --> 01:15.720
และยังเป็นคำอธิบายของวิธีการนั้น

01:15.720 --> 01:18.370
เอ่อ ตัวอธิบายคุณสมบัติ เพราะเมธอดในตอนท้ายเป็นเพียงคุณสมบัติ

01:18.370 --> 01:22.760
คุณสมบัติที่มีฟังก์ชัน

01:22.760 --> 01:24.400
ทีนี้ทำไมวิธีนี้ถึงเป็นมัณฑนากร?

01:24.400 --> 01:29.210
เนื่องจากแนวคิดคือเราสามารถเพิ่มลงใน submitHandler

01:29.210 --> 01:32.210
เช่นนี้และทำกับมันได้

01:32.210 --> 01:33.680
นั่นคือความคิด

01:33.680 --> 01:35.500
ตอนนี้เรายังไปไม่ครบทั้งหมด

01:35.500 --> 01:38.143
แต่นี่คือวิธีการทำงานในที่สุด

01:39.090 --> 01:42.950
ทีนี้ เพื่อให้มันใช้งานได้ กลับไปที่หน้าที่ของเราข้างบนนั้น

01:42.950 --> 01:46.880
แล้วต้องใส่อะไรเข้าไปในเนื้อความของฟังก์ชัน?

01:46.880 --> 01:51.950
ก่อนอื่นฉันต้องการเข้าถึงวิธีการดั้งเดิม

01:51.950 --> 01:59.380
พร้อมคำบรรยาย. ค่าเพื่อให้เราจัดเก็บวิธีการที่เรากำหนดไว้แต่เดิม

01:59.380 --> 02:04.873
จากนั้นฉันต้องการสร้างคำอธิบายที่ปรับแล้วที่นี่ซึ่งเป็นวัตถุ

02:06.650 --> 02:11.090
ฉันจะพิมพ์ PropertyDescriptor จริงๆ

02:11.090 --> 02:15.910
ควรตั้งค่าที่กำหนดค่าได้เป็นจริงเพื่อให้เราสามารถเปลี่ยนได้ตลอดเวลา

02:15.910 --> 02:17.573
แล้วเราต้องการทะเยอทะยานที่ไหน

02:18.510 --> 02:24.270
และใน getter นั้น ที่นี่ ซึ่งควรดำเนินการเมื่อคุณพยายามเข้าถึงฟังก์ชัน

02:24.270 --> 02:27.710
เราจะตั้งค่าฟังก์ชันที่ถูกผูกไว้ที่นี่

02:27.710 --> 02:31.030
โดยใช้เมธอดดั้งเดิมที่ดึงออกมา

02:31.030 --> 02:34.063
และเรียกสิ่งนี้มาผูกไว้

02:35.370 --> 02:36.203
จากนั้นฉันต้องการคืนค่าฟังก์ชันที่ถูกผูกไว้

02:37.860 --> 02:41.603
และนั่นควรจะเป็นทั้งหมด

02:42.510 --> 02:48.653
และโดยรวมแล้ว ฉันจะส่งคืนคำอธิบายที่ปรับปรุงแล้วในตัวตกแต่งเมธอดนั้น

02:49.510 --> 02:52.880
ตอนนี้เราได้รับข้อผิดพลาดที่ sendHandler

02:52.880 --> 02:57.960
นั่นคือการสนับสนุนการทดลองสำหรับนักตกแต่งเป็นคุณลักษณะที่ต้องเปิดใช้โดยทั่วไป

02:57.960 --> 03:00.400
ดังนั้นเราควรไปที่ไฟล์ tsconfig

03:00.400 --> 03:02.320
และเลื่อนลงมาในนั้น

03:02.320 --> 03:07.450
คุณควรพบว่าตัวเลือก "experimentalDecorators" เพียงแค่แสดงความคิดเห็นในนั้น

03:07.450 --> 03:09.980
และเพิ่มเครื่องหมายจุลภาคข้างหน้า

03:09.980 --> 03:14.183
บันทึกนั้นแล้วเริ่มกระบวนการรวบรวมประเภทใหม่

03:15.180 --> 03:17.700
ตอนนี้ มันยังคงแสดงข้อผิดพลาดบางอย่างที่นี่

03:17.700 --> 03:18.913
ถ้าฉันขยายสิ่งนี้ จะมีการประกาศ

03:20.212 --> 03:23.170
methodName แต่ค่าของมันจะไม่ถูกอ่าน

03:23.170 --> 03:25.410
ในแอพ ts บรรทัดที่สี่

03:25.410 --> 03:26.760
มันหมายถึงนี่ ฉันได้รับอาร์กิวเมนต์นี้

03:26.760 --> 03:30.940
ซึ่งฉันได้รับที่นี่ ซึ่งจริงๆ แล้วฉันไม่เคยใช้เลย

03:30.940 --> 03:34.370
เช่นเดียวกับเป้าหมายฉันไม่เคยใช้

03:34.370 --> 03:36.343
ตอนนี้มีสองวิธีในการแก้ปัญหานี้

03:37.200 --> 03:39.610
วิธีหนึ่งคือไปที่ tsconfig

03:39.610 --> 03:42.813
และคลายกฎความเข้มงวดของเราที่นี่

03:44.160 --> 03:49.090
noUnusedParameters หากเราตั้งค่านี้เป็นเท็จ แสดงว่าเราอนุญาตพารามิเตอร์ที่ไม่ได้ใช้

03:49.090 --> 03:50.670
นี่จะเป็นสิ่งหนึ่ง

03:50.670 --> 03:56.653
หรือคุณใช้ชื่อพิเศษขีดล่าง และขีดล่างสอง

03:57.770 --> 04:03.130
นี่เป็นคำใบ้สำหรับ typescript และ javascript ที่คุณทราบว่าคุณจะไม่ใช้ค่าเหล่านี้

04:03.130 --> 04:08.740
แต่คุณต้องยอมรับเพราะคุณต้องการอาร์กิวเมนต์ที่ตามมา

04:08.740 --> 04:11.810
หากคุณบันทึกสิ่งนี้ การคอมไพล์นี้จะปราศจากข้อผิดพลาด

04:11.810 --> 04:14.700
และถ้าเราย้อนกลับไปและป้อนคำว่า สวัสดีที่นี่

04:14.700 --> 04:17.040
และส่งสิ่งนี้ มันยังคงใช้งานได้ในขณะนี้

04:17.040 --> 04:20.060
ขอบคุณผู้ตกแต่งการผูกอัตโนมัติของเรา

04:20.060 --> 04:24.950
ซึ่งหวังว่าจะแสดงให้เห็นว่ามัณฑนากรนี้สามารถใช้ประโยชน์ได้จริง

04:24.950 --> 04:29.510
แน่นอนว่าที่นี่เป็นงานมากกว่าการเรียกการผูก

04:29.510 --> 04:32.120
แต่ลองนึกภาพว่าสิ่งนี้ถูกนำมาใช้กับวิธีการต่างๆ

04:32.120 --> 04:33.820
มากขึ้น ซึ่งล้วนแต่ต้องมีขอบเขต

04:33.820 --> 04:36.140
ไม่ต้องเรียกใช้การผูกด้วยตนเอง

04:36.140 --> 04:42.343
ประหยัดเวลาได้อีก และยังป้องกันข้อผิดพลาดที่อาจเกิดขึ้นในกรณีที่คุณลืม
