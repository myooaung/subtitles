WEBVTT

00:02.160 --> 00:03.330
مقدم العرض: الآن

00:03.330 --> 00:06.080
لا تحتوي الفئات وجميع وظائف المُنشئ التي

00:06.080 --> 00:09.280
كانت موجودة منذ فترة طويلة على خصائص يمكنك

00:09.280 --> 00:12.780
استخدامها لتحديد الهيكل العام للكائن.

00:12.780 --> 00:14.770
يمكنك أيضًا إضافة طرق.

00:14.770 --> 00:17.460
لدينا بالفعل طريقة الباني هناك.

00:17.460 --> 00:19.620
ولكن هذه مجرد وظيفة مساعدة

00:19.620 --> 00:22.940
، تسمى ، عندما تقوم بإنشاء مثيل للفئة.

00:22.940 --> 00:25.584
تذكر ، في الماضي ، كان لدينا وظائف منشئ

00:25.584 --> 00:28.100
فقط ، والآن لدينا هذا السكر النحوي

00:28.100 --> 00:30.460
ولكن لا يزال لدينا بناء وظيفة يمكننا

00:30.460 --> 00:33.300
إضافتها لتشغيل أي كود تهيئة.

00:33.300 --> 00:36.350
قد ترغب أيضًا في إضافة بعض الوظائف أو الطرق التي يتم

00:36.350 --> 00:38.600
استدعاؤها بعد ذلك والتي يمكنك الاتصال

00:38.600 --> 00:40.980
بها على الكائن الذي تم إنشاؤه.

00:40.980 --> 00:44.000
على سبيل المثال ، وصف طريقة هنا

00:44.000 --> 00:46.000
في فصل القسم لدينا.

00:46.000 --> 00:47.994
الآن يتم إضافة طريقة مثل

00:47.994 --> 00:49.382
هذه ، اسم الطريقة

00:49.382 --> 00:53.270
، ثم بدون نقطتين ، لا علامة يساوي بدلاً من ذلك ،

00:53.270 --> 00:56.090
الأقواس ثم الأقواس المتعرجة.

00:56.090 --> 00:59.070
تأخذ الأقواس أي وسيطات قد تحتاجها.

00:59.070 --> 01:00.780
لنفترض الآن أننا لسنا بحاجة

01:00.780 --> 01:03.330
إلى أي منها ، وإلا يمكنك إضافة معاملات

01:03.330 --> 01:05.150
كما تفعل في دالة عادية.

01:05.150 --> 01:07.280
وما تحتاجه دائمًا هو هيئة

01:07.280 --> 01:10.000
وظيفية أو جسم طريقة بين الأقواس

01:10.000 --> 01:12.020
المتعرجة.

01:12.020 --> 01:14.693
هنا أنت الآن تحدد منطق طريقتك.

01:15.580 --> 01:19.570
وهناك قد نرغب في إخراج اسم القسم مع القليل

01:19.570 --> 01:22.410
من المعلومات الإضافية ربما.

01:22.410 --> 01:26.230
يمكننا القيام بذلك بالطبع هنا باستخدام وحدة التحكم. سجل ، على سبيل المثال

01:26.230 --> 01:30.620
، القسم والنقطتين ثم ربما الاسم.

01:30.620 --> 01:32.100
ومع ذلك ، هذا لن ينجح.

01:32.100 --> 01:34.570
سيبحث هذا عن اسم متغير ، والذي

01:34.570 --> 01:37.710
يجب أن يكون موجودًا داخل هذه الطريقة الموصوفة

01:37.710 --> 01:40.860
، أو خارج الفئة كمتغير عام.

01:40.860 --> 01:42.470
وكما ترى إذا اختارت العمر

01:42.470 --> 01:44.433
، أحصل على خطأ في الاسم ، لا أفعل

01:44.433 --> 01:46.540
هذا ، لا أفهم ذلك لأنه يوجد بالفعل

01:46.540 --> 01:50.100
متغير اسم عام في المتصفح في كائن النافذة.

01:50.100 --> 01:53.030
ومع ذلك ، لن يشير هذا إلى خاصية الاسم هذه

01:53.030 --> 01:57.130
هنا ولكن إلى بعض متغير الاسم العام خارج هذه الفئة.

01:57.130 --> 01:59.599
للإشارة إلى خاصية أو طريقة فئة من داخل

01:59.599 --> 02:01.930
الفصل ، يتعين علينا استخدام هذه

02:01.930 --> 02:03.590
الكلمة الأساسية كما نفعلها

02:03.590 --> 02:05.630
هنا في المُنشئ.

02:05.630 --> 02:08.980
ثم يشير هذا عادةً إلى المثيل الملموس

02:08.980 --> 02:12.400
لهذه الفئة التي تم إنشاؤها.

02:12.400 --> 02:14.240
وهناك باستخدام رمز النقطة ، يمكننا

02:14.240 --> 02:16.600
الوصول إلى جميع الخصائص والطرق خارج هذا

02:16.600 --> 02:17.650
المثال.

02:17.650 --> 02:19.555
في هذه الحالة ، هذا. اسم.

02:19.555 --> 02:24.555
لذلك إذا كنت الآن ، هناك في الأسفل ، اتصل بالمحاسبة. وصف مثل هذا.

02:24.583 --> 02:28.110
ستشير هذه الكلمة الأساسية ، عند تنفيذ ذلك ،

02:28.110 --> 02:30.920
إلى كائن المحاسبة الملموس هذا الذي

02:30.920 --> 02:33.730
تم إنشاؤه بناءً على هذه الفئة.

02:33.730 --> 02:35.530
لذا ، إذا قمت الآن بحفظ ذلك ، وقمنا

02:35.530 --> 02:38.570
بإعادة التحميل ، فسنرى هذا الناتج هنا ، والذي يحتوي

02:38.570 --> 02:40.420
بالطبع على خطأ مطبعي ، ولكنه

02:40.420 --> 02:42.110
يعمل بشكل عام.

02:42.110 --> 02:43.944
دعنا الآن نصلح الخطأ المطبعي هنا.

02:43.944 --> 02:46.190
هذه هي الطريقة التي يمكننا بها إضافة طريقة.

02:46.190 --> 02:48.166
الآن ما هي الكلمة المهمة حول هذه الكلمة الرئيسية.

02:48.166 --> 02:50.600
كما تعلم على الأرجح ، إذا كنت قد عملت

02:50.600 --> 02:54.890
مع JavaScript قليلاً ، فقد تكون هذه الكلمة الأساسية صعبة.

02:54.890 --> 02:56.090
على سبيل المثال

02:56.090 --> 03:00.090
، إذا قمت بإضافة كائن آخر هنا نسخة محاسبية وهذا

03:01.480 --> 03:03.350
هو هدفنا الذي يحتوي فقط

03:03.350 --> 03:06.430
على طريقة الوصف وأجرؤ على الإشارة

03:06.430 --> 03:11.270
إلى المحاسبة. يصف.

03:11.270 --> 03:15.470
ثم إذا اتصلت بنسخة المحاسبة. وصفها بأنها طريقة ، ما الذي

03:15.470 --> 03:17.150
تعتقد أنه سيحدث؟

03:17.150 --> 03:19.200
هل تعتقد أننا سنحصل على خطأ؟

03:19.200 --> 03:21.200
نحن بالتأكيد لا نحصل على خطأ في التجميع

03:21.200 --> 03:22.927
يتم تجميعه بشكل جيد.

03:22.927 --> 03:26.360
لكن في وقت التشغيل ، نرى القسم غير محدد.

03:26.360 --> 03:28.780
والسبب في ذلك هو أن ما أفعله هو

03:28.780 --> 03:32.010
أنني أضيف خاصية وصف إلى هذا الكائن الذي

03:32.010 --> 03:34.040
تم إنشاؤه باستخدام الكائن

03:34.040 --> 03:37.888
الحرفي ، وليس بناءً على هذه الفئة ، ولكن فقط ككائن

03:37.888 --> 03:41.420
وهمي لا يعتمد على أي فئة معينة مُعرف.

03:41.420 --> 03:44.360
ثم تكون قيمة الخاصية الموصوفة هذه

03:44.360 --> 03:49.000
مؤشرًا على طريقة الوصف في كائن المحاسبة الخاص بي.

03:49.000 --> 03:52.168
لذا فأنا أشير إلى هذه الطريقة هنا لإيجاد

03:52.168 --> 03:54.690
هذا الجسم الملموس.

03:54.690 --> 03:56.240
أنا لا أنفذها.

03:56.240 --> 03:57.723
لذلك أنا لا أمرر قيمة

03:57.723 --> 04:00.410
تنفيذ هذه الوظيفة لوصفها.

04:00.410 --> 04:04.090
أنا حقًا أقوم بتمرير الوظيفة نفسها لوصفها هنا.

04:04.090 --> 04:06.430
لذلك عندما أدعو وصف هنا على النسخة

04:06.430 --> 04:08.950
، فإنه ينفذ بالفعل الطريقة التي تعمل

04:08.950 --> 04:10.440
جميعها بشكل صحيح.

04:10.440 --> 04:13.690
المشكلة فقط ، عند تنفيذ هذه الطريقة ، لن يشير

04:13.690 --> 04:17.040
هذا إلى هذا الكائن الذي كانت هذه الطريقة جزءًا

04:17.040 --> 04:19.170
منه في الأصل ، لذلك ليس إلى كائن

04:19.170 --> 04:21.140
المحاسبة.

04:21.140 --> 04:22.350
بدلاً من ذلك ، هذه

04:22.350 --> 04:25.050
، وهذه قاعدة عامة جيدة يمكنك حفظها

04:25.050 --> 04:27.900
، تشير عادةً إلى الشيء المسؤول عن استدعاء

04:27.900 --> 04:29.650
طريقة ما.

04:29.650 --> 04:32.190
والمسؤول عن استدعاء طريقة الوصف هنا

04:32.190 --> 04:34.880
في هذه الحالة هو النسخة المحاسبية.

04:34.880 --> 04:39.160
لأننا نسميها تصف على نسخة محاسبية.

04:39.160 --> 04:42.320
لذلك سيشير هذا إلى الشيء الموجود أمام النقطة هنا

04:42.320 --> 04:43.980
، وهو النسخة المحاسبية.

04:43.980 --> 04:47.530
هذا مع ذلك ، كائن ليس له خاصية اسم.

04:47.530 --> 04:49.678
لذلك عندما أصل إلى هذا. name ، أحصل

04:49.678 --> 04:53.968
على خطأ لأن هذا لا يشير إلى كائن

04:53.968 --> 04:56.610
بخاصية الاسم.

04:56.610 --> 04:59.220
لذلك الاسم يعطينا غير معرف بالفعل.

04:59.220 --> 05:02.260
ولهذا السبب أحصل على هذا الناتج الغريب.

05:02.260 --> 05:04.310
هذا شيء يجب أن تضعه في اعتبارك ،

05:04.310 --> 05:07.470
ليس فقط في TypeScript ، إنه شيء JavaScript.

05:07.470 --> 05:09.540
وبالطبع ، يمكن أن يحدث لك ذلك

05:09.540 --> 05:11.500
في TypeScript أيضًا.

05:11.500 --> 05:13.940
الآن ، للتغلب على هذه المشكلة

05:13.940 --> 05:16.660
، يمكنك إضافة معلمة إلى طريقة

05:16.660 --> 05:18.150
الوصف ، والتي تسمى

05:18.150 --> 05:19.730
هذا.

05:19.730 --> 05:21.380
هذه معلمة خاصة ، تعليمات

05:21.380 --> 05:25.334
خاصة مفهومة بواسطة TypeScript.

05:25.334 --> 05:28.430
إذا قمت بإضافة معلمة تسمى هذا هنا

05:28.430 --> 05:31.420
، فهي ليست معلمة متوقعة حقًا ، فلا

05:31.420 --> 05:36.010
يزال بإمكانك استدعاء الوصف دون تمرير أي قيمة.

05:36.010 --> 05:38.476
بدلاً من ذلك ، يتم تفسير ذلك بواسطة

05:38.476 --> 05:42.980
TypeScript ، ليكون تلميحًا بشأن ما يجب الإشارة إليه.

05:42.980 --> 05:45.960
والآن من المهم تعيين نوع لهذا.

05:45.960 --> 05:48.810
والنوع هنا ، في هذه الحالة يجب أن

05:48.810 --> 05:51.780
يكون نوع الفصل هنا حتى القسم.

05:51.780 --> 05:53.840
ما أقوله بهذا هو ، عند

05:53.840 --> 05:56.250
تنفيذ الوصف ، هذا داخل الوصف

05:56.250 --> 05:59.375
، لذلك في هذه الحالة هنا ، يجب دائمًا

05:59.375 --> 06:02.550
الإشارة إلى مثيل يعتمد على فئة

06:02.550 --> 06:05.040
القسم.

06:05.040 --> 06:09.160
لذا فإن الكائن الذي سيكون في النهاية من نوع القسم.

06:09.160 --> 06:12.370
وبالتالي ، حصلنا الآن على خطأ في الأسفل

06:12.370 --> 06:14.140
، حصلنا على خطأ هنا

06:14.140 --> 06:16.012
، لأن ما حصلنا عليه هنا

06:16.012 --> 06:19.800
هو أنه عندما نسميها وصف هنا في نسخة محاسبية

06:19.800 --> 06:24.100
، فإننا لا نسميها في حالة قسم.

06:24.100 --> 06:26.350
لذلك سيتم انتهاك هذا.

06:26.350 --> 06:29.540
هذا في هذه الحالة ، لن يشير إلى

06:29.540 --> 06:32.250
كائن من نوع القسم.

06:32.250 --> 06:34.690
لذلك نضيف هنا نوعًا إضافيًا من الأمان

06:34.690 --> 06:36.920
عن طريق إضافة هذه المعلمة الوهمية

06:36.920 --> 06:39.450
، لأنه الآن إذا حاولت حفظ هذا ، فسأحصل

06:39.450 --> 06:42.480
على خطأ يتعلق بهذا السطر هنا.

06:42.480 --> 06:44.950
لأنه الآن بالفعل ، سنقوم بتنفيذ بعض التعليمات

06:44.950 --> 06:47.030
البرمجية التي لن تعمل كما هو متوقع.

06:47.030 --> 06:49.260
لذا يتعين علينا إصلاح هذا ، على

06:49.260 --> 06:51.140
سبيل المثال ، بإضافة خاصية

06:52.040 --> 06:55.290
اسم هنا حتى يعمل ذلك لأن TypeScript الآن ترى

06:55.290 --> 06:57.702
حسنًا ، الكائن الذي تتصل به يصف ،

06:57.702 --> 07:02.702
الآن له خاصية الاسم تمامًا مثل هذا يتوقع أن يكون لها لأن هذا يستند إلى

07:03.840 --> 07:05.803
كائن القسم ، والذي يحتوي أيضًا

07:05.803 --> 07:08.070
على خاصية الاسم.

07:08.070 --> 07:10.790
حتى الآن هنا ، سيكون TypeScript سعيدًا

07:10.790 --> 07:12.270
لأننا أضفنا الاسم.

07:12.270 --> 07:14.934
إذا قمت بإزالته ، فسنعود الخطأ بالاسم

07:14.934 --> 07:17.277
ولكن هذا يعمل ، ونتجنب هذا الإخراج

07:17.277 --> 07:19.750
غير المحدد من قبل.

07:19.750 --> 07:22.770
لذلك من المهم أن نفهم هذا.

07:22.770 --> 07:26.140
ومن المهم أن تكون على دراية بهذا التحسين الذي يمكنك

07:26.140 --> 07:28.410
إضافته إلى الكود الخاص بك للتأكد من

07:28.410 --> 07:31.190
أنك تلتقط السلوكيات غير المرغوب فيها كما

07:31.190 --> 07:32.993
حدث في الأسفل من قبل.
