WEBVTT

00:02.190 --> 00:05.900
Instructeur: Met al ons overervingswerk uit de weg, laten we terugkomen

00:05.900 --> 00:08.400
op het renderen van lijstitems, laten we daar

00:08.400 --> 00:10.590
meer details renderen.

00:10.590 --> 00:12.800
En zoals ik al zei, laten we ze

00:12.800 --> 00:14.900
ook anders weergeven.

00:14.900 --> 00:18.050
Tot nu toe hebben we een objectgeoriënteerde benadering

00:18.050 --> 00:22.440
gevolgd, en bijvoorbeeld voor onze projectlijst hebben we een klasse en wanneer

00:22.440 --> 00:25.130
we die klasse instantiëren wordt hier zo'n doos

00:25.130 --> 00:26.560
weergegeven.

00:26.560 --> 00:30.000
En hetzelfde voor de invoer, we hebben een projectinvoerklasse,

00:30.000 --> 00:33.460
en wanneer we die instantiëren, wordt dit projectinvoerveld hier

00:33.460 --> 00:34.880
boven weergegeven.

00:34.880 --> 00:38.330
Waarom doen we nu niet hetzelfde voor ons project item

00:38.330 --> 00:42.290
en dan in de projectlijst in gerenderde projecten in plaats

00:42.290 --> 00:45.030
van een lijst item als dit te maken, zouden

00:45.030 --> 00:48.290
we gewoon onze project item klasse instantiëren

00:48.290 --> 00:52.230
en in de constructor van die project item klasse zouden we dan

00:52.230 --> 00:55.100
alle initialisatie doen enzovoort.

00:55.100 --> 00:57.240
Dat is tenminste mijn idee.

00:57.240 --> 00:59.850
Nu kun je zoals altijd de video hier pauzeren en

00:59.850 --> 01:01.680
dit eerst zelf proberen, maar na

01:01.680 --> 01:04.610
een korte pauze, die ik je geef om de video te pauzeren

01:04.610 --> 01:06.960
als je dat wilt, doen we het samen.

01:09.080 --> 01:12.980
Dus laten we dat samen doen, en daarvoor zal ik boven de projectlijst

01:12.980 --> 01:17.940
klasse de project item klasse toevoegen, en dit zal de klasse zijn die verantwoordelijk

01:17.940 --> 01:20.610
is voor het renderen van een enkel project

01:20.610 --> 01:22.920
item.

01:22.920 --> 01:25.620
Nu moet de project item klasse altijd de component

01:25.620 --> 01:28.940
uitbreiden, omdat het een klasse zal zijn die verantwoordelijk

01:28.940 --> 01:31.600
is voor het renderen van iets op het scherm, en dat

01:31.600 --> 01:34.800
is waar we onze component klasse voor hebben, juist, dat is

01:34.800 --> 01:36.410
waar we het voor bouwen.

01:36.410 --> 01:40.100
Zodat we een sjabloon doorgeven, een host element enzovoort.

01:40.100 --> 01:43.560
Dus in project item hebben we natuurlijk een constructor nodig,

01:43.560 --> 01:47.030
een constructor waar we dan ook super moeten aanroepen.

01:47.030 --> 01:50.650
En eigenlijk voordat we super aanroepen, laten we deze generieke

01:50.650 --> 01:53.610
types instellen voor de basisklasse om te erven.

01:53.610 --> 01:56.440
Denk eraan, het eerste type dat we daar doorgeven

01:56.440 --> 02:00.410
is het host element, dus waar we iets willen weergeven.

02:00.410 --> 02:02.760
Het tweede generieke type dat we doorgeven,

02:02.760 --> 02:04.800
is het element dat we weergeven.

02:04.800 --> 02:07.040
Dus in het geval van het project item,

02:07.040 --> 02:10.550
betekent dit dat het eerste element dat we doorgeven,

02:10.550 --> 02:13.570
omdat het de plaats is waar we iets willen weergeven,

02:13.570 --> 02:15.587
een HTML U List is, een ongeordende

02:15.587 --> 02:17.370
lijst, omdat elk project item

02:17.370 --> 02:20.440
zal worden weergegeven in onze, nou ja ongeordende

02:20.440 --> 02:22.550
lijst.

02:22.550 --> 02:26.160
En het tweede element zal een HTML LI Element zijn, dus het concrete

02:26.160 --> 02:29.313
list item element dat zal worden aangemaakt.

02:30.210 --> 02:35.210
Kies nu super, we moeten de Id opgeven van het element waarin het project

02:35.280 --> 02:38.210
item moet worden weergegeven.

02:38.210 --> 02:41.410
En natuurlijk staat die Id niet vast,

02:41.410 --> 02:43.030
want we hebben twee

02:43.030 --> 02:45.040
lijsten waar het item

02:45.040 --> 02:47.480
naar toe zou kunnen.

02:47.480 --> 02:51.760
Dus ik verwacht die Id hier in de constructor te krijgen, daar

02:51.760 --> 02:55.400
wil ik de host Id, laten we zeggen, die een string moet

02:55.400 --> 02:56.233
zijn, we kunnen

02:56.233 --> 02:59.140
dat doorsturen naar super.

02:59.140 --> 03:02.220
Maar het eerste wat we doorsturen naar super,

03:02.220 --> 03:05.520
is de template Id, voor een enkel lijst item, en dat

03:05.520 --> 03:07.410
is deze template hier.

03:07.410 --> 03:09.620
Dus we kunnen dat gewoon inpakken.

03:09.620 --> 03:11.580
Nu is dat natuurlijk een heel eenvoudig

03:11.580 --> 03:13.580
sjabloon, je kunt erover twisten of je

03:13.580 --> 03:16.380
dat echt nodig hebt, het is maar een lijstitem, we zouden

03:16.380 --> 03:18.920
dat ook in code kunnen maken met document create element,

03:18.920 --> 03:22.560
maar om onze component-basisclausule, die op sjablonen steunt, te kunnen

03:22.560 --> 03:26.240
hergebruiken, zullen we deze aanpak gebruiken.

03:26.240 --> 03:29.680
Dus één project is de sjabloon-id, host-id, dan is het

03:29.680 --> 03:32.550
de id die ik wil doorsturen naar de constructor

03:32.550 --> 03:34.500
van de basisclausule.

03:34.500 --> 03:37.150
Om dan de vraag te beantwoorden of dit aan het

03:37.150 --> 03:40.010
begin of aan het eind moet worden weergegeven.

03:40.010 --> 03:43.020
Nou, elk nieuw lijstitem moet eigenlijk aan het einde

03:43.020 --> 03:45.630
van de lijst worden toegevoegd, hoewel dat helemaal

03:45.630 --> 03:48.450
aan jou is, je kunt het ook aan het begin toevoegen

03:48.450 --> 03:51.150
als je dat wilt, maar hier ga ik voor het einde en daarom

03:51.150 --> 03:53.423
geef ik hier false door.

03:54.410 --> 03:57.153
En dan voor het nieuwe element Id, verkoop het

03:57.153 --> 03:59.330
Id dat moet worden toegewezen aan

03:59.330 --> 04:01.580
het nieuw gecreëerde element.

04:01.580 --> 04:03.760
Ik verwacht dat ook van buiten te krijgen,

04:03.760 --> 04:06.860
want dat zal ook per projectonderdeel verschillen, we renderen

04:06.860 --> 04:09.860
immers meerdere van dergelijke onderdelen.

04:09.860 --> 04:12.240
Dus hier verwacht ik de Id te krijgen die het allemaal

04:12.240 --> 04:15.060
een string is, die ik dan gewoon doorstuur.

04:15.060 --> 04:17.820
Dus dat is nu de constructeur.

04:17.820 --> 04:22.250
Nu zou het allemaal logisch zijn om het project dat bij dit projectonderdeel

04:23.500 --> 04:27.280
hoort op te slaan in deze projectonderdeelklasse.

04:27.280 --> 04:31.020
En met project bedoel ik het project gebaseerd op onze project

04:31.020 --> 04:33.770
klasse, die we daarboven gemaakt hebben.

04:33.770 --> 04:37.490
Dit is eigenlijk waar we mee werken, de gegevens waarmee we werken.

04:37.490 --> 04:40.440
En ik wil het project dat hoort bij dit gerenderde

04:40.440 --> 04:44.000
project item opslaan in die project item klasse.

04:44.000 --> 04:47.650
Dus daarom kunnen we hier bijvoorbeeld een particulier eigendomsproject

04:47.650 --> 04:51.510
toevoegen, maar dat moet van het type project zijn.

04:51.510 --> 04:55.350
In de constructor krijgen we dan de Id en we kunnen dit gewoon

04:55.350 --> 04:58.090
veranderen om het project hier te krijgen

04:58.090 --> 05:00.950
zoals dit, en dan gewoon zeggen dit project

05:00.950 --> 05:04.340
gelijk project, en hier aangezien elk project een

05:04.340 --> 05:07.360
Id eigenschap heeft, sturen we gewoon project

05:07.360 --> 05:09.440
door. id.

05:09.440 --> 05:12.330
Ik denk dat die opzet wat logischer is.

05:12.330 --> 05:14.710
Nu moeten we altijd een paar methoden toevoegen,

05:14.710 --> 05:17.760
we moeten natuurlijk een configureer methode toevoegen.

05:17.760 --> 05:22.300
We moeten de methode render content toevoegen, die nodig is voor

05:22.300 --> 05:25.040
onze basisklasse die we uitbreiden.

05:25.040 --> 05:29.850
En het roept altijd configure en render content aan hier aan het

05:29.850 --> 05:32.000
einde van de constructor.

05:32.000 --> 05:34.890
Wat de configuratie betreft, hoeven we nu niets

05:34.890 --> 05:37.730
te doen voor de inhoud die we willen weergeven,

05:37.730 --> 05:40.050
er is zeker werk aan de winkel.

05:40.050 --> 05:42.710
Nu hebben we hier een heel eenvoudig sjabloon,

05:42.710 --> 05:44.520
en we zouden dit hier in het index

05:44.520 --> 05:47.650
HTML-bestand een beetje complexer kunnen maken,

05:47.650 --> 05:50.850
zodat elk project een h2-tag heeft, met een h3-tag

05:50.850 --> 05:54.250
eronder laten we zeggen, en ook een paragraaf, zodat

05:54.250 --> 05:56.740
we de titel van het project kunnen uitvoeren,

05:56.740 --> 06:03.290
het aantal toegewezen personen misschien, en dan de beschrijving.

06:03.290 --> 06:05.720
En dan hier in app ts in render van inhoud,

06:05.720 --> 06:09.050
moeten we gewoon reiken naar deze verschillende elementen

06:09.050 --> 06:10.130
in ons element, dus

06:10.130 --> 06:12.090
naar de h2 tag enzovoort, en dan

06:12.090 --> 06:14.440
wat inhoud invoegen.

06:14.440 --> 06:17.300
Dus daar kunnen we dit element bereiken, wat

06:17.300 --> 06:19.360
ons gerenderde element is, dus

06:19.360 --> 06:21.750
wat ons gerenderde LI Element is.

06:21.750 --> 06:24.970
En daarin moeten we nu deze verschillende dingen selecteren.

06:24.970 --> 06:27.270
Dus we kunnen query selector h2 gebruiken, en

06:27.270 --> 06:28.930
hier de tekstinhoud instellen.

06:28.930 --> 06:33.930
Laten we dit zeggen. project. titel om de titel daar weer te geven.

06:34.350 --> 06:36.470
Natuurlijk moeten we hier een uitroepteken toevoegen

06:36.470 --> 06:39.010
om duidelijk te maken dat we altijd dit element krijgen,

06:39.010 --> 06:40.700
waarvan we zeker weten dat het deel uitmaakt

06:40.700 --> 06:42.563
van ons sjabloon.

06:43.980 --> 06:46.870
Nou dan kunnen we dit eigenlijk gewoon herhalen,

06:46.870 --> 06:49.170
maar nu op zoek naar de h3 tag, en daar

06:49.170 --> 06:52.990
wil ik het aantal personen uitvoeren, echter waar personen

06:52.990 --> 06:55.690
de naam van de eigenschap is, echter ik zal

06:55.690 --> 06:58.030
dit een beetje tweaken.

06:58.030 --> 07:00.300
Dit hier is een nummer, en dit is

07:00.300 --> 07:01.690
een string, dus eigenlijk

07:01.690 --> 07:04.110
noem ik hier string.

07:04.110 --> 07:06.900
Maar dat is niet het grootste probleem, eigenlijk

07:06.900 --> 07:11.160
wil ik dit zo aanpassen dat het meer oplevert dan alleen een getal, maar daar

07:11.160 --> 07:12.590
kom ik op terug.

07:14.960 --> 07:17.260
Laten we dit eerst nog een keer herhalen,

07:17.260 --> 07:19.600
en vragen naar de paragraaf hier.

07:19.600 --> 07:22.623
En stel dit gelijk aan dit project. beschrijving.

07:23.810 --> 07:25.810
Ik zal dit later nog aanpassen, maar nu

07:25.810 --> 07:27.140
laten we het zoals het is.

07:27.140 --> 07:28.870
En daarmee hebben we een project

07:28.870 --> 07:29.880
item dat moet worden

07:29.880 --> 07:33.470
gerenderd, en dat dan al zijn inhoud moet weergeven.

07:33.470 --> 07:35.460
Dus nu moeten we het projectitem gebruiken,

07:35.460 --> 07:37.880
en de plaats om het te gebruiken is de projectlijst,

07:37.880 --> 07:40.450
omdat die de lijst met projecten weergeeft.

07:40.450 --> 07:44.150
En daar specifiek in renderprojecten, moeten we

07:44.150 --> 07:46.630
ervoor zorgen dat we onze projectitems

07:46.630 --> 07:48.260
renderen.

07:48.260 --> 07:51.140
Hier doorlopen we alle projectitems in toegewezen

07:51.140 --> 07:52.860
projecten.

07:52.860 --> 07:55.870
En toegewezen projecten is deze eigenschap hier,

07:55.870 --> 07:58.960
die een lijst of een array van projecten heeft.

07:58.960 --> 08:02.330
Dus nu hier in deze lus, in plaats van handmatig

08:02.330 --> 08:04.720
een lijstitem aan te maken enzovoort,

08:04.720 --> 08:08.270
zal ik dat allemaal wegwerken en gewoon zeggen

08:08.270 --> 08:13.740
nieuw projectitem hier, en nu twee projectitems.

08:13.740 --> 08:16.110
We moeten het idee van de host

08:16.110 --> 08:21.090
doorgeven, nu is dat natuurlijk de Id die hier op onze

08:21.090 --> 08:22.730
lijst stond.

08:22.730 --> 08:25.990
Dus eigenlijk dit. element. id, dat is de Id van

08:25.990 --> 08:27.800
het host element, omdat dit

08:27.800 --> 08:29.980
element dat de ongeordende lijst

08:29.980 --> 08:31.670
is, de host moet zijn.

08:31.670 --> 08:34.210
Dan het tweede argument hier, is het project

08:34.210 --> 08:37.400
en dat is eigenlijk een gezuiverd item.

08:37.400 --> 08:40.950
Dus deze constante die we in de lus krijgen.

08:40.950 --> 08:42.790
En nu zal de bevestiging gebeuren

08:42.790 --> 08:46.530
binnen het projectitem of binnen de basisclausule van de componentklasse,

08:46.530 --> 08:49.770
die projectitems uitbreidt.

08:49.770 --> 08:53.570
En het instantiëren van een project item zou alles moeten zijn wat we moeten doen.

08:53.570 --> 08:58.380
Dus als we dat opslaan en we gaan terug en we hebben deze code hier weer,

08:58.380 --> 09:00.890
of we hebben deze invoer weer.

09:00.890 --> 09:04.140
Zie je, dit wordt weergegeven, en dit ziet er niet slecht uit.

09:04.140 --> 09:06.320
Nu zijn er twee dingen die me niet bevallen,

09:06.320 --> 09:10.220
natuurlijk dat bolletje hier, daar ben ik niet zo dol op.

09:10.220 --> 09:12.710
En alleen het vrij hebben hier,

09:12.710 --> 09:15.590
is allemaal niet super blij mee.

09:15.590 --> 09:17.293
Dus hoe kunnen we dit nu oplossen?

09:18.730 --> 09:21.380
Om het opsommingsteken op te lossen, laten we onze inhoud inspecteren.

09:21.380 --> 09:24.110
En wat we daar zien is dat het lijstitem eigenlijk

09:24.110 --> 09:28.060
buiten de ongeordende lijst wordt weergegeven.

09:28.060 --> 09:29.600
Dus het zit er niet in.

09:29.600 --> 09:32.710
Als het binnen was, dan zou het goed werken,

09:32.710 --> 09:35.530
maar ik kan het er niet heen slepen.

09:35.530 --> 09:38.050
We moeten er dus voor zorgen dat het binnen de ongeordende lijst

09:38.050 --> 09:39.000
wordt weergegeven.

09:39.000 --> 09:41.363
Dus laten we uitzoeken waarom dat niet het geval is.

09:42.220 --> 09:46.710
Het is waarschijnlijk niet het geval, omdat ik in project item hier

09:46.710 --> 09:50.430
false doorgeef aan de constructor van de basisclausule,

09:50.430 --> 09:53.660
en hier false doorgeef betekent dat het niet aan

09:53.660 --> 09:57.640
het begin wordt ingevoegd, en dat betekent weer dat we in attach

09:57.640 --> 10:00.590
voor en als waarde hier hebben, waar het wordt

10:00.590 --> 10:02.670
ingevoegd.

10:02.670 --> 10:05.660
Dit is echter wat we willen dat er gebeurt, dus dat

10:05.660 --> 10:08.360
is waarschijnlijk niet het probleem.

10:08.360 --> 10:12.420
Nou, het probleem is nog steeds dat we het natuurlijk

10:12.420 --> 10:14.970
invoegen in het host element.

10:14.970 --> 10:17.650
En nu nog eens nadenken, wat is het gastelement

10:17.650 --> 10:19.460
van de projectenlijst?

10:19.460 --> 10:20.900
En dat is uiteindelijk

10:20.900 --> 10:23.850
waar het hier om gaat, want als we onze projecten

10:23.850 --> 10:25.620
renderen, maken we een nieuw

10:25.620 --> 10:29.680
projectitem aan, en ik stuur het Id van ons element hier, van het

10:29.680 --> 10:31.240
gerenderde element in de

10:31.240 --> 10:34.180
projectlijst door naar projectitem.

10:34.180 --> 10:36.670
Dus dat wordt dan het idee van het gastelement van een

10:36.670 --> 10:38.120
enkel projectonderdeel.

10:38.120 --> 10:40.720
Maar wat is dit element hier?

10:40.720 --> 10:43.770
Dit element hier is niet de ongeordende lijst die we

10:43.770 --> 10:44.900
in die doos hebben,

10:44.900 --> 10:47.350
het is de doos zelf, het is onze sectie.

10:47.350 --> 10:50.260
Als we het sjabloon inspecteren, zien we dat de sectie hier

10:50.260 --> 10:53.810
is wat werkelijk wordt weergegeven voor onze projectlijstklasse.

10:53.810 --> 10:55.500
Het is niet alleen de lijst,

10:55.500 --> 10:58.300
het is de sectie die ook een kop bevat.

10:58.300 --> 11:00.320
Dus we moeten eigenlijk toegang krijgen

11:00.320 --> 11:02.020
tot de lijst binnenin ons element

11:02.020 --> 11:05.070
hier, en dan toegang krijgen tot het idee van die lijst,

11:05.070 --> 11:08.710
want hier stellen we eigenlijk een Id in op die lijst, dus er zal een

11:08.710 --> 11:12.230
Id zijn, we moeten gewoon de juiste pakken.

11:12.230 --> 11:14.880
Dus het idee van het element zelf

11:14.880 --> 11:16.790
is gewoon niet juist.

11:16.790 --> 11:20.580
In plaats daarvan zouden we hier het idee van de ongeordende lijst in ons

11:20.580 --> 11:23.580
element moeten krijgen, en we weten met zekerheid dat er

11:23.580 --> 11:25.310
een ongeordende lijst zal zijn,

11:25.310 --> 11:26.350
dus kunnen we de null-controle

11:26.350 --> 11:28.460
overslaan door het uitroepteken toe te

11:28.460 --> 11:30.063
voegen.

11:30.930 --> 11:34.463
Als we nu een nieuw element toevoegen, ziet dit er beter uit,

11:35.490 --> 11:37.680
nu is het opsommingsteken verdwenen,

11:37.680 --> 11:39.920
omdat nu de juiste styling is toegepast,

11:39.920 --> 11:43.100
omdat de LI, het lijstitem nu echt is toegevoegd binnen

11:43.100 --> 11:46.320
de ongeordende lijst, zoals u kunt zien.

11:46.320 --> 11:49.390
Dat is één ding, laten we nu naar die vijf gaan, want

11:49.390 --> 11:51.180
een vijf hier neerzetten is niet

11:51.180 --> 11:52.990
echt wat ik wil doen.

11:52.990 --> 11:56.143
Wat dacht je van wat meer nuttige informatie.
