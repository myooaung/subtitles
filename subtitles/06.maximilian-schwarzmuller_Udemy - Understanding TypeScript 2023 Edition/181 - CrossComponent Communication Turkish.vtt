WEBVTT

00:02.230 --> 00:05.130
Öğretim Görevlisi: Şimdi buraya girdiğimiz metni NewTodo

00:05.130 --> 00:07.960
bileşeninden uygulama bileşenine almak istiyoruz.

00:07.960 --> 00:09.690
Neden uygulama bileşenine?

00:09.690 --> 00:11.160
Çünkü bu, hem NewTodo

00:11.160 --> 00:13.610
hem de TodoList bileşenine doğrudan

00:13.610 --> 00:16.340
bağlantısı olan bileşenimizdir.

00:16.340 --> 00:19.320
Burada yeni bir fonksiyon eklemek istiyorum ve buna

00:20.800 --> 00:24.560
todoAddHandler adını vereceğim, isim size kalmış, ben sadece

00:24.560 --> 00:25.393
bir olay üzerine

00:25.393 --> 00:27.990
tetiklenen bir fonksiyon ise sonunda işleyici

00:27.990 --> 00:31.390
olması kuralını kullanmayı seviyorum.

00:31.390 --> 00:34.330
Ve burada metni bir dize olarak almayı bekliyorum,

00:34.330 --> 00:37.970
bu bizim fonksiyonumuz, bu yüzden bunu bekleyebiliriz.

00:37.970 --> 00:40.720
Sonra da bunu yapılacaklar listesine eklemek istiyorum.

00:40.720 --> 00:42.270
Elbette React'i bildiğiniz için bu

00:42.270 --> 00:45.230
diziyi güncellemenin tek başına işe yaramayacağını, bu bileşeni

00:45.230 --> 00:47.440
yeniden oluşturmayacağını biliyorsunuz, bu yüzden

00:47.440 --> 00:49.360
bu işi yapmak için burada biraz durum yönetimi

00:49.360 --> 00:51.900
kullanmamız gerekecek, ancak bunu yapmadan önce, en azından

00:51.900 --> 00:53.040
bu işleve değer aldığımızdan

00:53.040 --> 00:54.750
emin olalım.

00:54.750 --> 00:57.460
Bu yüzden metni buraya kaydedelim ve daha sonra ikinci adım

00:57.460 --> 01:00.133
olarak durum yönetimi kısmına odaklanabiliriz.

01:01.000 --> 01:03.020
Burada bunu elde etmek için bu todoAddHandler

01:03.020 --> 01:05.850
fonksiyonunun NewTodo bileşeninin içinden çağrılabileceğinden

01:05.850 --> 01:09.050
emin olmamız gerekir çünkü sonunda todo'yu eklediğimiz

01:09.050 --> 01:12.113
yer burasıdır.

01:13.090 --> 01:15.370
Şimdi, buradaki işlevi bu bileşenin içinden

01:15.370 --> 01:17.860
nasıl çağrılabilir hale getireceğiz?

01:17.860 --> 01:22.300
Bu bileşene bu fonksiyonda bir işaretçi aktarırız.

01:22.300 --> 01:25.640
Yani, buraya onAddTodo adında bir özellik ekleyebiliriz ve bunu

01:25.640 --> 01:27.280
istediğiniz gibi adlandırabilirsiniz,

01:27.280 --> 01:28.560
ben sadece bu şekilde adlandırdım

01:28.560 --> 01:32.030
çünkü bu temelde bir olay üzerine gerçekleşecek, tabii ki kontrol ettiğimiz

01:32.030 --> 01:34.600
bir olay, ama yine de.

01:34.600 --> 01:38.030
Ve burada todoAddHandler'ı iletmek istiyorum, bu yüzden bu

01:38.030 --> 01:40.600
fonksiyona bir işaretçi aktarıyorum, burada

01:40.600 --> 01:42.120
çalıştırmıyorum, sadece

01:42.120 --> 01:44.620
bu fonksiyona bir işaretçi aktarıyorum, onAddTodo'ya,

01:44.620 --> 01:49.240
böylece burada alabileceğimiz props üzerinde NewTodo yerine, bunu çağırabiliriz,

01:49.240 --> 01:56.220
böylece props'u çağırabiliriz.

01:56.220 --> 01:56.220
onAddTodo

01:56.220 --> 01:59.640
burada ve girilen metni iletin, fikir bu, Ancak, elbette, TypeScript

01:59.640 --> 02:03.440
bundan hoşlanmıyor çünkü buradaki prop'larımızda bir onAddTodo prop'u

02:03.440 --> 02:06.180
olacağını ve böyle bir prop'un nasıl görüneceğini

02:06.180 --> 02:08.240
bilmiyor.

02:08.240 --> 02:11.670
Bu nedenle, tıpkı TodoList'te olduğu gibi, bir arayüz veya basitçe prop'larımız

02:11.670 --> 02:14.540
için bir tip tanımı oluşturmamız gerekir.

02:14.540 --> 02:18.200
NewTodo'ya gidelim ve belki yine bir arayüz ekleyelim, ayrıca bir

02:18.200 --> 02:20.820
kurs türü de ekleyebilirsiniz ve bunu burada karışıklık

02:20.820 --> 02:23.060
yaratmak için yapacağım.

02:23.060 --> 02:25.380
Ben genellikle her zaman bir arayüz tercih ederim,

02:25.380 --> 02:27.660
ancak bir tür kullanmak da iyidir.

02:27.660 --> 02:30.493
Burada bir tür kullanmak için NewTodoProps adını

02:31.357 --> 02:33.820
verebiliriz ve tür, onAddTodo prop'una

02:33.820 --> 02:36.830
sahip olmak istediğim bir nesne türüdür ve bu da bir

02:36.830 --> 02:39.120
işlev türü olacaktır, bir işlevi işaret

02:39.120 --> 02:40.753
edecektir.

02:41.720 --> 02:44.290
Bunun gibi fonksiyon türleri tanımlayacaksınız,

02:44.290 --> 02:46.760
öğrendiğiniz gibi, hiçbir şey döndürmeyen ancak

02:46.760 --> 02:48.850
bir çevre bekleyen bir fonksiyon olacak

02:48.850 --> 02:51.410
ve bu da kullanıcının girdiği metin olacak.

02:51.410 --> 02:54.023
Yani, dize türünde olan Todo metni, bu

02:55.120 --> 02:57.123
işlevin beklediği şeydir.

02:58.920 --> 03:01.770
Şimdi, bunu buradaki genel tipe ayarlayalım ve NewTodoProps'u

03:01.770 --> 03:03.103
işaret edelim.

03:04.510 --> 03:08.620
Bununla birlikte, onAddTodo öğesini çağırabilir ve bir dize iletebiliriz.

03:08.620 --> 03:11.470
Örneğin buraya bir sayı girmeye çalışırsa, elbette

03:11.470 --> 03:14.730
bir hata alırız çünkü argümanın bir dize olması gerektiğini

03:14.730 --> 03:17.590
yukarıda açıkça tanımlamıştık.

03:17.590 --> 03:18.733
O zaman bunu geri alalım.

03:20.550 --> 03:24.630
Bununla birlikte, tekrar yeni bir hedef girersek, bir ay içinde bitirirsek,

03:24.630 --> 03:27.150
burada yine bir günlük görürüz, ancak şimdi

03:27.150 --> 03:28.690
açıkça görebileceğiniz

03:28.690 --> 03:30.750
gibi uygulama bileşeninden geliyor,

03:30.750 --> 03:34.170
çünkü bu günlüğü buraya ekledik.

03:34.170 --> 03:37.380
Dolayısıyla, NewTodo bileşeni ile buradaki uygulama bileşeni

03:37.380 --> 03:39.480
arasındaki bu iletişim çalışır.

03:39.480 --> 03:42.750
Ve bununla birlikte, burada biraz durum yönetimi uygulayalım

03:42.750 --> 03:44.160
ve yine bu, isterseniz önce

03:44.160 --> 03:46.850
kendi başınıza deneyebileceğiniz bir şeydir, todo'ları

03:46.850 --> 03:49.670
durum halinde oluşturduğumuzdan emin olmak için, böylece

03:49.670 --> 03:52.170
todo'larımızı her güncellediğimizde bu bileşeni

03:52.170 --> 03:54.460
de yeniden oluşturuyoruz.

03:54.460 --> 03:56.263
Bunu bir sonraki derste yapalım.
