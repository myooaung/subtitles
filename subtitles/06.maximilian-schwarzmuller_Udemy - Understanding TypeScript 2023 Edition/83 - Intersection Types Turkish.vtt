WEBVTT

00:02.310 --> 00:03.143
Eğitmen: Bunun için daha

00:03.143 --> 00:05.860
önce üzerinde çalıştığımız genel proje kurulumuna geri dönüyorum.

00:05.860 --> 00:10.940
Dizinde ekli olarak bulabilirsiniz. html dosyası ve uygulama.

00:10.940 --> 00:10.940
ts dosyası.

00:10.940 --> 00:15.410
Ve orada, kesişim tipleriyle doğrudan dalmak istiyorum.

00:15.410 --> 00:19.570
Kesişim türleri diğer türleri birleştirmemizi sağlar.

00:19.570 --> 00:23.280
Diyelim ki bir nesne türü olan admin türümüz var, yani

00:23.280 --> 00:25.430
yine burada bir nesne oluşturmuyoruz,

00:25.430 --> 00:28.170
bir tür tanımlıyoruz, bu yüzden burada

00:28.170 --> 00:30.340
sadece bir tür tanımı yapıyorum

00:31.200 --> 00:35.560
ve admin'in bir adı olmalı, bu da bir string diyelim ve bir admin'in

00:35.560 --> 00:38.230
ayrıcalıkları da olmalı ve bu da örneğin

00:39.910 --> 00:44.370
bir string dizisi olmalı.

00:44.370 --> 00:47.010
Şimdi, bunu bir arayüzle oluşturabilirdik

00:47.010 --> 00:48.950
ama burada bunu bir türle

00:49.810 --> 00:54.470
yapıyorum ve şimdi başka bir türüm var, genel çalışan türü

00:54.470 --> 00:59.130
diyelim ve orada da bir adım var, string.

00:59.130 --> 01:02.890
Ayrıcalığım yok ama bir başlangıç tarihim var.

01:02.890 --> 01:04.380
Bu tarih türünde olabilir.

01:04.380 --> 01:07.350
Bunu daha önce görmemiştik ancak tarih, JavaScript'te

01:07.350 --> 01:10.340
yerleşik olan veri nesnesine dayalı olarak kod tarafından

01:10.340 --> 01:12.163
desteklenen bir türdür.

01:13.730 --> 01:17.580
Şimdi burada yeni bir tür oluşturmak istiyoruz,

01:17.580 --> 01:21.120
diyelim ki bu iki türün birleşimi olması gereken

01:21.120 --> 01:23.900
bir üst düzey çalışan.

01:23.900 --> 01:26.470
Elbette, sadece adı olan, başlangıç tarihi

01:26.470 --> 01:28.770
olan ve ayrıcalığı olan bir nesne türü

01:28.770 --> 01:31.750
tanımlayarak bunu manuel olarak oluşturabiliriz,

01:31.750 --> 01:34.120
ancak bu iki türe zaten sahipsek, o zaman

01:34.120 --> 01:37.540
bunu sadece admin ve diyerek birleştirebiliriz, bu yüzden

01:37.540 --> 01:42.000
burada ve işareti sembolünü kullanıyoruz, employee.

01:42.000 --> 01:44.370
Ve şimdi sonuç, her ikisine de sahip olması

01:44.370 --> 01:46.390
gereken yeni bir nesne türüdür.

01:46.390 --> 01:50.470
Dolayısıyla, çalışanım E one, yükseltilmiş çalışan türünde

01:50.470 --> 01:54.770
olmalıdır, o zaman orada bir ad özelliğine sahip olması gereken,

01:54.770 --> 01:57.440
bir ayrıcalık özelliğine sahip olması gereken,

01:57.440 --> 02:00.113
sunucu oluşturması gereken ve ayrıca yeni

02:02.510 --> 02:08.800
verilerle bir başlangıç tarihine sahip olması gereken bir nesne depolayabilirim.

02:08.800 --> 02:10.070
Basitçe geçerli zaman

02:10.070 --> 02:12.700
damgası olan yeni bir veri nesnesi oluşturun.

02:12.700 --> 02:15.610
Yani bu artık iki türü birleştirmenin basit bir yoludur.

02:15.610 --> 02:17.740
Şimdi, kesişim türlerinin

02:17.740 --> 02:21.550
arayüz kalıtımıyla yakından ilişkili olduğunu

02:21.550 --> 02:24.320
söyleyeceğim çünkü elbette burada

02:24.320 --> 02:28.590
bir arayüz admin ve ardından bir arayüz employee

02:29.620 --> 02:32.420
kullanarak aynı şeyi elde edebilirdik

02:32.420 --> 02:34.700
ve daha sonra bu arayüzlerde

02:34.700 --> 02:38.853
bir kesişim türü de kullanabilirdik veya employee

02:40.100 --> 02:50.653
ve admin'i genişleten üçüncü bir arayüz, yükseltilmiş employee oluşturabilirdik.

02:52.700 --> 02:54.520
Bu nedenle, şimdi bunu yorumladığımda,

02:54.520 --> 02:56.830
tam olarak aynı etkiye sahip olacağız.

02:56.830 --> 02:58.550
Şimdi, tartışmalı bir şekilde, bu biraz daha fazla kod.

02:58.550 --> 03:01.750
Burada arayüzler yerine tipleri kullanmayı tercih

03:01.750 --> 03:04.280
etmemizin bir nedeni olabilir, ancak ilişki

03:04.280 --> 03:06.300
kesinlikle çok yakındır ve bu örnek

03:06.300 --> 03:09.770
için kesinlikle arayüzleri kullanabilirsiniz.

03:09.770 --> 03:13.040
Bununla birlikte, kesişim türlerinin burada yaptığımız gibi nesne

03:13.040 --> 03:15.600
türleriyle birlikte kullanıldığında özellikle yararlı

03:15.600 --> 03:18.240
olabileceğini, ancak bunları herhangi bir türle kullanabileceğinizi

03:18.240 --> 03:20.910
belirtmek gerekir.

03:20.910 --> 03:22.683
Diyelim ki bir dize ya da sayı

03:23.655 --> 03:28.450
olan birleştirilebilir başka bir türünüz olsaydı, burada dize ya da

03:28.450 --> 03:29.940
sayı temel türleriyle

03:29.940 --> 03:32.380
bir birlik türümüz olurdu ve sonra

03:32.380 --> 03:34.770
burada bir sayı ya da boolean olan bir

03:34.770 --> 03:38.660
sayısal türümüz olurdu, o zaman diyelim ki birleştirilebilir

03:38.660 --> 03:43.660
ile sayısal türünü kesiştirerek evrensel türümüzü elde edebilirdik

03:43.730 --> 03:49.800
ve sonunda türler evrenselin elbette sayı türünde olduğunu görebilirdi çünkü burada

03:49.800 --> 03:51.950
sahip olduğumuz tek kesişim bu

03:51.950 --> 03:56.520
ama daha fazla kesişiminiz olsaydı, o zaman bu evrensel olarak atanan

03:56.520 --> 03:59.830
tür olurdu, bu yüzden bu iki birlik türünün kesişimi

03:59.830 --> 04:04.940
olan bir birlik türü de olabilirdi.

04:04.940 --> 04:07.800
Dolayısıyla, kesişim operatörü herhangi

04:07.800 --> 04:11.790
bir türle kullanılabilir ve daha sonra bu türlerin kesişimini

04:11.790 --> 04:12.980
oluşturur.

04:12.980 --> 04:14.330
Bir birlik türü söz konusu

04:14.330 --> 04:17.300
olduğunda, bu temelde ortak olan türlerdir.

04:17.300 --> 04:18.890
Nesne türleri söz konusu olduğunda,

04:18.890 --> 04:23.510
deyim yerindeyse, bu nesne özelliklerinin bir kombinasyonudur.

04:23.510 --> 04:25.960
Yani bunlar kesişim tipleridir.

04:25.960 --> 04:27.360
Bazen faydalı olabilir.

04:27.360 --> 04:29.050
Bunları her zaman kullanmayacaksınız,

04:29.050 --> 04:31.570
ancak kesişim türlerini kullanarak bir şeyi daha

04:31.570 --> 04:35.010
basit veya daha kısa bir şekilde ifade edebileceğiniz durumlarla kesinlikle

04:35.010 --> 04:37.230
karşılaşabilirsiniz.

04:37.230 --> 04:39.520
Şimdi tüm bunların çalıştığını kanıtlamak için,

04:39.520 --> 04:42.050
terminalimde yeni bir sekme açmama ve izleme modunu

04:42.050 --> 04:45.390
başlatmak için TSC dash W'yi çalıştırmama izin verin, böylece yalnızca

04:45.390 --> 04:47.770
canlı sunucuya girmek zorunda kalmayacağım, aynı

04:47.770 --> 04:49.850
zamanda kodumu da oluşturacağım.

04:49.850 --> 04:51.210
Şimdi burada bir kez yeniden

04:51.210 --> 04:53.200
yüklersem, bunun hatasız çalıştığını ve

04:53.200 --> 04:55.443
aynı zamanda hatasız derlendiğini görürüz.
