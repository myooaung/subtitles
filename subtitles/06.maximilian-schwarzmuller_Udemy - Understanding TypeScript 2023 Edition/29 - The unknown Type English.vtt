WEBVTT

1
00:00:02.340 --> 00:00:04.020
<v Instructor>We're almost done with the basics</v>

2
00:00:04.020 --> 00:00:06.240
about TypeScript and the core types.

3
00:00:06.240 --> 00:00:10.130
There are two more types which are good to be aware of

4
00:00:10.130 --> 00:00:13.170
because they will matter from time to time.

5
00:00:13.170 --> 00:00:16.603
The first type is the unknown type.

6
00:00:17.860 --> 00:00:20.350
For that, I'll name this file your functions.ts

7
00:00:20.350 --> 00:00:23.343
and add a new app.ts file and in there,

8
00:00:24.290 --> 00:00:28.620
let's say we have a new variable, userInput,

9
00:00:28.620 --> 00:00:32.143
and this is of type unknown.

10
00:00:32.143 --> 00:00:34.850
It's not of type any, which would be the default,

11
00:00:34.850 --> 00:00:36.690
but unknown, which is a different type

12
00:00:36.690 --> 00:00:38.500
introduced by TypeScript.

13
00:00:38.500 --> 00:00:40.950
It might be unknown because we don't know yet

14
00:00:40.950 --> 00:00:42.950
what the user will eventually enter.

15
00:00:42.950 --> 00:00:45.593
If it's a number, if it's a string, we don't know.

16
00:00:46.770 --> 00:00:48.960
Now the interesting thing about the unknown type

17
00:00:48.960 --> 00:00:51.020
is we can store any value in there

18
00:00:51.020 --> 00:00:54.630
without getting errors, so this is all allowed.

19
00:00:54.630 --> 00:00:57.660
If I now compile my file here,

20
00:00:57.660 --> 00:01:00.290
you see I get no compilation error.

21
00:01:00.290 --> 00:01:01.910
So, thus far, it's the same

22
00:01:01.910 --> 00:01:03.820
as if we wouldn't have assigned a type here,

23
00:01:03.820 --> 00:01:05.260
and hence we have the any type

24
00:01:05.260 --> 00:01:08.610
or if we would have explicitly set any as the type.

25
00:01:08.610 --> 00:01:11.810
But still, unknown is different to any.

26
00:01:11.810 --> 00:01:15.430
This here works, but we'll run into issues

27
00:01:15.430 --> 00:01:19.660
if I have another variable, let's say userName,

28
00:01:19.660 --> 00:01:20.890
which should be a string.

29
00:01:20.890 --> 00:01:22.860
And that's uninitialized here,

30
00:01:22.860 --> 00:01:27.200
but then here I want to set userName equal to userInput.

31
00:01:27.200 --> 00:01:29.150
Now you see we're getting an error.

32
00:01:29.150 --> 00:01:33.010
The type unknown is not assignable to type string.

33
00:01:33.010 --> 00:01:34.590
So, userName wants a string

34
00:01:34.590 --> 00:01:37.990
and of course unknown is not guaranteed to be a string.

35
00:01:37.990 --> 00:01:41.620
Here, I assigned one, but that's just the case in this line.

36
00:01:41.620 --> 00:01:44.460
userInput technically could hold any value

37
00:01:44.460 --> 00:01:46.490
because it's unknown.

38
00:01:46.490 --> 00:01:47.640
Now, the interesting thing is

39
00:01:47.640 --> 00:01:51.060
if I switch unknown to any, this error goes away

40
00:01:51.060 --> 00:01:53.900
because any is the most flexible type in TypeScript

41
00:01:53.900 --> 00:01:56.810
and it basically disables all type checking

42
00:01:56.810 --> 00:02:00.950
and TypeScript just says, "I give up, do whatever you want."

43
00:02:00.950 --> 00:02:05.510
Unknown is a bit more restrictive than any.

44
00:02:05.510 --> 00:02:08.820
With unknown, we have to first of all check

45
00:02:08.820 --> 00:02:12.200
the type that's currently stored in userInput

46
00:02:12.200 --> 00:02:14.400
before we can assign it to, for example,

47
00:02:14.400 --> 00:02:16.180
a variable that wants a string.

48
00:02:16.180 --> 00:02:18.110
So, since a string is wanted here,

49
00:02:18.110 --> 00:02:23.110
we could check if type of userInput is equal to string

50
00:02:23.650 --> 00:02:26.020
and TypeScript will detect this check

51
00:02:26.020 --> 00:02:29.790
and understand that in here, what is stored in userName

52
00:02:29.790 --> 00:02:31.830
because it ends out of this if statement,

53
00:02:31.830 --> 00:02:34.680
where I check for userInput being of type string,

54
00:02:34.680 --> 00:02:36.920
userInput is guaranteed to be a string

55
00:02:36.920 --> 00:02:39.990
and therefore I can safely assign it to userName.

56
00:02:39.990 --> 00:02:42.670
So, I need such a extra type check here

57
00:02:42.670 --> 00:02:47.560
with unknown to be able to assign a unknown value

58
00:02:47.560 --> 00:02:50.530
to a value with a fixed type

59
00:02:50.530 --> 00:02:54.780
and therefore unknown is the better choice over any

60
00:02:54.780 --> 00:02:56.930
if you know I can't tell

61
00:02:56.930 --> 00:02:59.450
exactly what type of store in there,

62
00:02:59.450 --> 00:03:02.910
it might be a number, it might be a string,

63
00:03:02.910 --> 00:03:05.470
but I know what I want to do with it eventually.

64
00:03:05.470 --> 00:03:07.440
Well, just add an extra check

65
00:03:07.440 --> 00:03:10.240
to make sure that what you want to do can be done,

66
00:03:10.240 --> 00:03:12.160
so that if you want to work with a string,

67
00:03:12.160 --> 00:03:14.690
you have a string, and you're good.

68
00:03:14.690 --> 00:03:18.720
And then unknown is better than any because it makes sure

69
00:03:18.720 --> 00:03:20.930
that you're not allowed to do everything

70
00:03:20.930 --> 00:03:23.260
but you have at least some type checking.

71
00:03:23.260 --> 00:03:25.990
Of course, if you have a chance of knowing in advance

72
00:03:25.990 --> 00:03:28.150
that userInput is always a string,

73
00:03:28.150 --> 00:03:30.000
or always a string or a number,

74
00:03:30.000 --> 00:03:31.680
well then you should use string

75
00:03:31.680 --> 00:03:34.460
or such a union type instead of unknown.

76
00:03:34.460 --> 00:03:36.010
So, unknown still is a type

77
00:03:36.010 --> 00:03:37.460
you shouldn't use all the time,

78
00:03:37.460 --> 00:03:41.233
but it is better than any for the reasons described.

