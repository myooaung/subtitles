WEBVTT

00:02.320 --> 00:04.500
Instructeur : Maintenant que nous avons appris ce que sont

00:04.500 --> 00:07.650
le privé et le public, je veux aussi transformer le nom en propriété privée.

00:07.650 --> 00:09.700
Et maintenant, nous avons un petit problème,

00:09.700 --> 00:10.730
pas vraiment un problème,

00:10.730 --> 00:12.730
mais un petit inconvénient.

00:12.730 --> 00:14.540
Nous avons ce champ de nom ici, puis nous

00:14.540 --> 00:16.810
obtenons une valeur pour lui ici dans le constructeur,

00:16.810 --> 00:19.350
et ensuite nous stockons cette valeur pour ce champ ici

00:19.350 --> 00:21.920
dans le constructeur, dans le champ.

00:21.920 --> 00:22.900
Nous pouvons le faire,

00:22.900 --> 00:25.820
et ce que nous faisons ici est certainement très clair.

00:25.820 --> 00:29.690
Mais, dans de nombreux cas d'utilisation, vous aurez beaucoup de classes où toutes

00:29.690 --> 00:31.810
les propriétés que vous avez, tous les champs

00:31.810 --> 00:33.210
que vous avez, sont initialisés

00:33.210 --> 00:35.010
dans le constructeur.

00:35.010 --> 00:36.520
Et donc, souvent, vous pouvez

00:36.520 --> 00:39.870
vous retrouver à écrire quelques propriétés, quelques

00:39.870 --> 00:42.090
champs comme ceci en haut - : peu importe

00:42.090 --> 00:44.270
s'ils sont privés ou publics - et ensuite

00:44.270 --> 00:47.993
vous répétez tout cela en bas dans le constructeur, juste

00:49.030 --> 00:55.110
pour initialiser ces valeurs ici dans la fonction du constructeur.

00:55.110 --> 00:57.080
Vous n'êtes pas obligé de faire ça.

00:57.080 --> 01:01.690
Au lieu de faire ce code de double initialisation ici, vous pouvez vous

01:01.690 --> 01:05.220
débarrasser de vos définitions de champs là-haut.

01:05.220 --> 01:07.150
Et maintenant vous voyez que vous allez avoir une erreur.

01:07.150 --> 01:09.040
Mais vous pouvez également vous débarrasser

01:09.040 --> 01:12.970
de cette fonction ici, et à la place, ajouter simplement le modificateur d'accès

01:12.970 --> 01:15.130
devant le paramètre.

01:15.130 --> 01:17.950
Donc, s'il doit être public, ajoutez public.

01:17.950 --> 01:20.290
Disons que, pour le nom, nous le gardons public maintenant.

01:20.290 --> 01:23.530
S'il doit être privé, ajoutez "privé".

01:23.530 --> 01:25.250
Ici, vous devez ajouter public

01:25.250 --> 01:30.250
parce que c'est maintenant une instruction explicite pour typescript, qui dit à typescript

01:30.370 --> 01:32.880
que vous ne voulez pas seulement obtenir ces

01:32.880 --> 01:36.450
arguments ici dans le constructeur, mais que vous voulez créer

01:36.450 --> 01:39.880
des propriétés pour cette classe avec exactement les mêmes

01:39.880 --> 01:41.950
noms.

01:41.950 --> 01:45.350
Et donc, ici, nous devrions aussi renommer n en nom.

01:45.350 --> 01:47.600
Pour que la propriété name soit créée

01:47.600 --> 01:49.250
sur la classe creator.

01:49.250 --> 01:51.250
Donc c'est simplement un raccourci

01:51.250 --> 01:54.270
pour ce code de double initialisation ici.

01:54.270 --> 01:56.340
Là où vous deviez trouver vos champs, puis

01:56.340 --> 01:57.930
stocker la valeur, maintenant

01:57.930 --> 02:00.110
nous faisons tout en une seule fois.

02:00.110 --> 02:02.690
Nous définissons les arguments que le constructeur

02:02.690 --> 02:04.430
prend, et ensuite pour chaque

02:04.430 --> 02:07.290
argument qui a un tel modificateur d'accès devant

02:07.290 --> 02:09.630
lui, une propriété du même nom est créée,

02:09.630 --> 02:11.480
et la valeur de l'argument est stockée

02:11.480 --> 02:14.420
dans cette propriété créée.

02:14.420 --> 02:17.750
Il ne nous reste donc plus qu'à corriger la création de notre département

02:17.750 --> 02:20.780
ici, et à ajouter un ID car j'ai ajouté ce nouvel argument.

02:20.780 --> 02:22.230
Et maintenant ce que vous

02:22.230 --> 02:25.640
verrez, c'est que lorsque nous appelons describe ici, et

02:25.640 --> 02:28.113
je le fais en fait, je vais mettre l'ID ici aussi,

02:29.130 --> 02:32.640
peut-être en changeant cette chaîne d'utilisateur de département,

02:32.640 --> 02:38.890
littérale ici, Department ceci.

02:38.890 --> 02:38.890
id

02:40.205 --> 02:42.450
et puis ici ceci. vous verrez que

02:42.450 --> 02:45.380
tout cela fonctionne encore.

02:45.380 --> 02:47.360
Il compile sans erreur ici.

02:47.360 --> 02:49.980
Et ici nous obtenons la sortie avec notre

02:49.980 --> 02:51.710
ID et avec notre nom.

02:51.710 --> 02:53.480
Grâce à ce petit raccourci, nous avons

02:53.480 --> 02:55.563
également économisé du code pour tout cela.
