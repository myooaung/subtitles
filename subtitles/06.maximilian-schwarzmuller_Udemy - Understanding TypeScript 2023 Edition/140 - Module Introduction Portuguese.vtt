WEBVTT

00:02.270 --> 00:04.610
Instrutor: Este é o código que acabamos

00:04.610 --> 00:08.580
tendo no final da última seção central, nosso projeto de prática,

00:08.580 --> 00:11.050
um monte de código tudo em um arquivo, e este

00:11.050 --> 00:14.050
não é, sem dúvida, um projeto super complexo.

00:14.050 --> 00:17.420
Você pode definitivamente escrever projetos e aplicações muito

00:17.420 --> 00:20.380
mais elaborados, e você acabaria com muito mais código,

00:20.380 --> 00:23.640
então colocar tudo em um único arquivo provavelmente não é o que

00:23.640 --> 00:25.000
você quer fazer.

00:25.000 --> 00:26.390
Portanto, o que você quer fazer

00:26.390 --> 00:28.740
é escrever código modular, o que significa simplesmente

00:28.740 --> 00:31.120
que você quer dividir seu código em vários arquivos

00:31.120 --> 00:34.010
para que cada arquivo por si só permaneça gerenciável e

00:34.010 --> 00:37.157
de fácil manutenção, e então você simplesmente importa e exporta

00:37.157 --> 00:39.640
de e para esses arquivos e se certifica de que, portanto,

00:39.640 --> 00:42.100
todos esses arquivos estão conectados, mas eles

00:42.100 --> 00:44.740
estão conectados pelo Typescript ou pelo navegador

00:44.740 --> 00:54.500
ou por alguma ferramenta de construção de terceiros e não por você, fundindo-os todos em um único arquivo durante o desenvolvimento.

00:54.500 --> 00:55.940
Agora, neste módulo, vamos

00:55.940 --> 00:59.910
dar uma olhada em duas opções principais que nos ajudam a organizar nosso código

00:59.910 --> 01:02.160
em vários arquivos, e não apenas aprenderemos

01:02.160 --> 01:04.930
sobre eles em teoria, mas também na prática.

01:04.930 --> 01:07.320
É claro que vamos aplicar estas diferentes abordagens

01:07.320 --> 01:09.453
e ver como podemos dividir nosso código.
