WEBVTT

00:02.320 --> 00:03.570
Instruktur: Untuk membuatnya

00:03.570 --> 00:05.090
dapat dijatuhkan, kita harus

00:05.090 --> 00:07.730
pergi ke klausa, atau ke komponen dalam aplikasi kita,

00:07.730 --> 00:11.600
yang pada akhirnya harus bertindak sebagai target seret.

00:11.600 --> 00:14.120
Jadi di sini kelas Daftar Proyek adalah klausa yang

00:14.120 --> 00:15.870
tepat dan di sana kita dapat mengimplementasikan

00:15.870 --> 00:17.150
antarmuka kedua yang kita

00:17.150 --> 00:20.130
tambahkan, antarmuka Drag Target.

00:20.130 --> 00:23.550
Sekarang, sama seperti antarmuka draggable, ini memaksa

00:23.550 --> 00:26.510
kita untuk menambahkan metode tertentu.

00:26.510 --> 00:30.600
Untuk lebih tepatnya di sini, kita perlu menambahkan pawang seret ke

00:30.600 --> 00:33.500
atas, pawang jatuhkan, dan pawang seret keluar.

00:33.500 --> 00:34.540
Jadi, mari kita lakukan itu.

00:34.540 --> 00:38.640
Mungkin semua di sini di bawah konstruktor di atas mengkonfigurasi.

00:38.640 --> 00:40.080
Tempat yang tepat terserah

00:40.080 --> 00:42.880
Anda, urutan metodenya tidak masalah.

00:42.880 --> 00:45.680
Jadi di sini saya akan menambahkan drag

00:45.680 --> 00:49.730
over handler, di mana kita mendapatkan event drag kita.

00:49.730 --> 00:51.850
Saya kemudian akan menambahkan drop handler di

00:51.850 --> 00:54.203
sini, di mana kita juga mendapatkan event drag kita.

00:55.710 --> 00:59.130
Dan yang terakhir, drag leave handler, di mana

00:59.130 --> 01:02.260
kita juga mendapatkan event drag.

01:02.260 --> 01:05.410
Sekarang, peristiwa-peristiwa ini, dengan cara ini, menampung berbagai jenis

01:05.410 --> 01:08.594
data yang berbeda, tetapi semuanya didasarkan pada jenis peristiwa inti kasus.

01:08.594 --> 01:11.860
Sekarang kita mendapatkan beberapa hal berbeda untuk dilakukan.

01:11.860 --> 01:15.120
Mari kita mulai dengan drag over handler mungkin.

01:15.120 --> 01:18.770
Di dalam drag over handler, saya ingin mengubah tampilan kotak atau

01:18.770 --> 01:21.900
daftar tak berurutan di sana, untuk memvisualisasikan bahwa

01:21.900 --> 01:24.470
ini adalah area yang dapat dijatuhkan.

01:24.470 --> 01:26.960
Karena sekarang ketika kita menyeret elemen, kita tidak

01:26.960 --> 01:30.200
mendapatkan petunjuk di mana kita bisa menjatuhkannya, bukan?

01:30.200 --> 01:33.410
Tidak ada yang berubah pada UI, jadi saya ingin mengubahnya.

01:33.410 --> 01:35.950
Untuk mengubah ini, saya akan menambahkan klausa css tertentu ke daftar tidak berurutan,

01:35.950 --> 01:38.680
yang Anda temukan di aplikasi. css.

01:38.680 --> 01:42.080
Klausa droppable yang akan mengubah warna latar belakang dan

01:42.080 --> 01:45.460
oleh karena itu di sini, sebagai permulaan, kita hanya perlu

01:45.460 --> 01:49.070
mendapatkan akses ke elemen daftar tidak berurutan kita.

01:49.070 --> 01:53.850
Kita bisa melakukannya dengan menjangkau elemen ini, querySelectror uL dan menambahkan

01:53.850 --> 01:57.380
tanda seru karena akan selalu ada daftar yang tidak berurutan

01:57.380 --> 02:00.963
di sana, bahkan jika belum ada elemennya.

02:02.560 --> 02:05.570
Kita hanya perlu memastikan bahwa kata kunci ini berfungsi

02:05.570 --> 02:08.600
di sini dan kita dapat melakukannya dengan autobinding di

02:08.600 --> 02:11.050
sini untuk memastikan bahwa kata kunci ini terikat

02:11.050 --> 02:12.840
pada klausa di sekitarnya.

02:12.840 --> 02:15.610
Kemudian dengan elemen daftar yang dipilih, kita

02:15.610 --> 02:19.550
dapat menggunakan properti daftar klausa elemen dom, jadi ini adalah

02:19.550 --> 02:22.090
Vanilla JavaScript di sini lagi, dan panggil

02:22.090 --> 02:26.080
metode add di sana untuk menambahkan klausa yang dapat dijatuhkan

02:26.080 --> 02:27.540
ke dalamnya.

02:27.540 --> 02:29.360
Sekarang dengan itu, kita tentu saja

02:29.360 --> 02:33.000
harus memastikan bahwa dragOverHandler benar-benar ditembakkan ketika

02:33.000 --> 02:37.333
kita menyeret sesuatu ke atas elemen ini di sini, di atas bagian yang dirender ini.

02:39.090 --> 02:42.400
Untuk melakukan itu dalam metode configure, di mana kita sudah

02:42.400 --> 02:46.020
memiliki satu pendengar di sini, mendengarkan perubahan state

02:46.020 --> 02:50.280
kita, saya juga akan mendaftarkan pendengar pada elemen itu sendiri.

02:50.280 --> 02:53.380
EventListener pertama di sana adalah, tentu saja, peristiwa

02:53.380 --> 02:54.760
seret dan saya akan mengikatnya

02:54.760 --> 02:58.090
ke dragOverHandler, tidak mengejutkan.

02:58.090 --> 03:01.060
Kemudian saya akan mengulangi ini karena saya juga ingin

03:01.060 --> 03:03.740
mendengarkan event dragLeave dan mengikat ini

03:03.740 --> 03:06.870
ke dragLeaveHandler dan ke event drop dan mengikat ini ke

03:06.870 --> 03:08.700
dropHandler karena kita juga akan

03:08.700 --> 03:10.583
membutuhkannya nanti.

03:11.580 --> 03:16.500
Jadi, dengan itu, kita sudah mendapatkan pendengar peristiwa seret ini dan dragOverHandler

03:16.500 --> 03:18.797
yang terhubung, tetapi kita juga mendapatkan

03:18.797 --> 03:21.780
beberapa kesalahan dalam kode sekarang.

03:21.780 --> 03:24.610
Nah, itu seharusnya objek-objek event yang tidak terpakai

03:24.610 --> 03:27.430
di sini, jadi untuk saat ini, untuk memenuhi typescript, mari

03:27.430 --> 03:28.810
kita kosongkan saja.

03:28.810 --> 03:31.477
Kita akan membutuhkannya nanti, tetapi untuk saat ini, untuk membuat

03:31.477 --> 03:33.690
ini berfungsi, mari kita kosongkan mereka dengan menggunakan

03:33.690 --> 03:35.677
garis bawah di sini untuk memberi tahu typescript,

03:35.677 --> 03:37.670
"Kita tidak akan menggunakannya saat ini. Sekarang ini sudah terkompilasi dan sekarang kembali

03:37.670 --> 03:38.950
ke proyek, ketika kita menambahkan

03:38.950 --> 03:42.910
proyek baru di sini, dan saya menyeret ini, Anda lihat ketika saya menyeret ini ke proyek yang sudah

03:42.910 --> 03:45.320
selesai, latar belakang di sini menjadi biru muda.

03:45.320 --> 03:49.620
Di sini, di atas proyek-proyek yang aktif, warnanya menjadi

03:49.620 --> 03:53.270
mawar muda, seperti sedikit warna merah muda.

03:53.270 --> 03:56.220
Hanya untuk menunjukkan ini lagi, jika saya memuat ulang, Anda

03:56.220 --> 03:58.650
lihat sekarang kita memiliki latar belakang putih

03:58.650 --> 04:02.670
di proyek, ups, dan segera setelah saya mulai menyeret, ini di sini mendapat latar

04:02.670 --> 04:06.490
belakang merah muda terang dan ketika saya menyeretnya ke proyek yang sudah selesai,

04:06.490 --> 04:09.470
latar belakang kotak berubah menjadi biru muda.

04:09.470 --> 04:13.360
Sekarang tidak pernah berubah kembali ke putih karena kita tidak pernah menghapus klausa

04:13.360 --> 04:16.050
yang bisa dijatuhkan itu, tetapi ini adalah langkah pertama.

04:16.050 --> 04:19.480
Tentu saja, menjatuhkan tetap tidak berhasil.

04:19.480 --> 04:21.700
Menjatuhkannya di sini tidak menambah

04:21.700 --> 04:23.890
proyek karena bagaimana bisa?

04:23.890 --> 04:25.300
Kami belum menambahkan logika apa pun untuk ini.

04:25.300 --> 04:28.200
Jadi mari kita pastikan untuk juga memperbarui

04:28.200 --> 04:33.200
styling ketika kita berhenti, ketika kita meninggalkan elemen.

04:33.410 --> 04:36.390
Ketika kita pada dasarnya menyeretnya ke sini dan kemudian pergi.

04:36.390 --> 04:39.670
Pastikan bahwa latar belakang biru hilang dalam kasus itu,

04:39.670 --> 04:42.640
itulah yang ingin saya lakukan selanjutnya.

04:42.640 --> 04:44.870
Untuk itu kita bisa menggunakan dragLeaverHandler

04:44.870 --> 04:47.020
di sini karena itu akan menyala setiap kali

04:47.020 --> 04:50.990
kita meninggalkan elemen ini dengan elemen yang kita seret.

04:50.990 --> 04:53.019
Sekarang di sana saya tentu saja juga ingin

04:53.019 --> 04:57.550
mendapatkan akses ke daftar tidak berurutan saya, jadi saya akan menyalin kode itu,

04:57.550 --> 05:01.420
tetapi kemudian di sana, saya ingin menghapus klausa droppable.

05:01.420 --> 05:05.553
Kita sekarang juga harus mengautobind ini sehingga

05:06.448 --> 05:11.220
kata kunci ini di sini merujuk pada klausa di sekitarnya.

05:11.220 --> 05:13.120
Jika kita menyimpannya, kita tambahkan elemen baru di sini.

05:14.040 --> 05:17.740
Mari kita mencobanya.

05:17.740 --> 05:18.773
Jika saya mulai menyeret, Anda

05:20.310 --> 05:23.740
lihat kita memiliki latar belakang kita di sini dan jika saya pergi, itu akan hilang.

05:24.610 --> 05:27.120
Jadi sekarang latar belakangnya benar-benar diperbarui.

05:27.120 --> 05:29.930
Anda melihat beberapa kerlipan di sini karena event

05:29.930 --> 05:33.670
dragLeave juga menyala jika Anda berpindah dari kursor tetikus

05:33.670 --> 05:37.190
di atas latar belakang ke kursor tetikus di atas elemen yang di-render,

05:37.190 --> 05:40.960
tetapi itu seharusnya baik-baik saja di sini.

05:40.960 --> 05:42.500
Ini bukan masalah besar di sini.

05:42.500 --> 05:43.620
Jadi sebenarnya, kami mendapatkan efek yang diinginkan, menurut saya.

05:43.620 --> 05:47.320
Jadi, UI diperbarui sebagaimana mestinya sekarang, tetapi

05:47.320 --> 05:50.950
tentu saja kita tidak dapat menjatuhkan dan benar-benar mentransfer

05:50.950 --> 05:53.140
data, jadi itu akan menjadi langkah

05:53.140 --> 05:54.700
berikutnya.
