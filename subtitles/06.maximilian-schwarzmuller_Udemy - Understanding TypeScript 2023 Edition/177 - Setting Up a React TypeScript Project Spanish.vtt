WEBVTT

00:02.150 --> 00:04.320
Narrador: Cuando se trata de construir

00:04.320 --> 00:07.220
una aplicación React con Typescript, por supuesto

00:07.220 --> 00:10.800
necesitamos una configuración de proyecto, que sea capaz

00:10.800 --> 00:13.730
tanto de manejar nuestro código React, por lo que

00:13.730 --> 00:17.480
cosas como JSX, por ejemplo, y que compile estancias y optimice

00:17.480 --> 00:21.500
nuestro código React, y que al mismo tiempo, sea capaz de entender

00:21.500 --> 00:25.320
TypeScript y de compilar TypeScript a JavaScript.

00:25.320 --> 00:27.430
Configurar un proyecto de este tipo por nuestra

00:27.430 --> 00:28.750
cuenta puede ser bastante

00:28.750 --> 00:31.940
difícil, y por ello, es bueno que Create React App, una herramienta

00:31.940 --> 00:34.080
gestionada por el equipo de React, que podemos

00:34.080 --> 00:36.420
utilizar para crear proyectos React, soporte

00:36.420 --> 00:39.110
TypeScript de forma inmediata.

00:39.110 --> 00:42.110
Puedes simplemente buscar en Google Create React App TypeScript,

00:42.110 --> 00:44.590
y deberías encontrar esta entrada en la documentación

00:44.590 --> 00:47.000
oficial de Create React App.

00:47.000 --> 00:49.140
Allí aprenderás cómo puedes añadir

00:49.140 --> 00:51.540
TypeScript a un proyecto existente,

00:51.540 --> 00:54.850
aquí, estos pasos, o cómo puedes crear un nuevo proyecto

00:54.850 --> 00:57.290
con Create React App y TypeScript, y

00:57.290 --> 01:00.400
aquí ves un comando que puedes copiar, para crear

01:00.400 --> 01:03.030
un nuevo proyecto React, que también soporta

01:03.030 --> 01:05.680
TypeScript.

01:05.680 --> 01:07.020
Ahora, voy a usar esto

01:07.020 --> 01:11.110
aquí, y aquí ya estoy en una carpeta, que quiero usar.

01:11.110 --> 01:13.210
Esta es simplemente la carpeta del proyecto que

01:13.210 --> 01:14.790
quiero usar para este proyecto.

01:14.790 --> 01:16.900
Y luego pegaremos este comando.

01:16.900 --> 01:17.740
Y en este caso,

01:17.740 --> 01:20.970
como quiero utilizar la carpeta en la que ya estoy, también

01:20.970 --> 01:22.710
aquí en mi terminal, voy a sustituir

01:22.710 --> 01:25.190
el nombre del proyecto por un punto, para

01:25.190 --> 01:27.590
que no cree una nueva subcarpeta y cree el

01:27.590 --> 01:29.550
proyecto en ella, sino que utilice

01:29.550 --> 01:31.730
esta carpeta.

01:31.730 --> 01:33.720
Esto es, por supuesto, opcional.

01:33.720 --> 01:35.850
También quiero decir que me he dado cuenta

01:35.850 --> 01:38.070
de que este comando no siempre funciona.

01:38.070 --> 01:41.390
A veces crea un proyecto de JavaScript normal.

01:41.390 --> 01:42.590
Para solucionarlo,

01:42.590 --> 01:46.343
puedes instalar Create React App globalmente en tu máquina.

01:47.340 --> 01:49.140
Algo que puedes hacer simplemente

01:49.140 --> 01:54.140
ejecutando npm install -g create-react-app, en Mac y Linux puede que necesites añadir

01:54.780 --> 01:56.560
un sudo delante de esto.

01:56.560 --> 01:59.360
Y con esto instalado en tu máquina, puedes

01:59.360 --> 02:03.010
ejecutar este comando aquí, pero sin npx, así, y entonces

02:03.010 --> 02:05.920
debería funcionar definitivamente.

02:05.920 --> 02:07.270
Así que eso es lo que haré aquí,

02:07.270 --> 02:09.320
pero normalmente, también debería funcionar

02:09.320 --> 02:12.250
sin instalarlo simplemente usando la herramienta npx,

02:12.250 --> 02:15.520
que es parte de la herramienta npm que ya instalamos junto con

02:15.520 --> 02:18.840
Node. js antes en el curso.

02:18.840 --> 02:23.250
Así que por ahora, se coloca un nuevo proyecto en esta carpeta de aquí.

02:23.250 --> 02:27.460
Y en ese proyecto, configurará una aplicación React donde todos podremos

02:27.460 --> 02:31.070
escribir todo nuestro código con TypeScript.

02:31.070 --> 02:32.460
Así que esperemos a que esto termine.

02:32.460 --> 02:34.610
Y veamos qué nos da esto.

02:34.610 --> 02:36.010
Y terminó.

02:36.010 --> 02:37.930
Así que echemos un vistazo a lo que tenemos.

02:37.930 --> 02:41.000
Tenemos una carpeta, que quizás reconozcas que es básicamente

02:41.000 --> 02:43.970
la misma estructura que tienes cuando creas una React App

02:43.970 --> 02:45.500
sin TypeScript.

02:45.500 --> 02:48.790
Pero ya podemos ver el tsconfig. json.

02:48.790 --> 02:51.020
Por cierto, también puedes editar este archivo

02:51.020 --> 02:52.940
y ajustarlo a tus necesidades.

02:52.940 --> 02:55.250
Al fin y al cabo, ya has aprendido a modificar

02:55.250 --> 02:57.120
esta configuración en este curso.

02:57.120 --> 02:58.460
Sin embargo, la configuración por

02:58.460 --> 03:01.160
defecto debería estar bien para la mayoría de los casos de uso.

03:01.160 --> 03:02.950
Ahora, si exploramos la carpeta src, que es

03:02.950 --> 03:05.230
donde escribiremos nuestro código fuente, también

03:05.230 --> 03:08.550
encontramos un montón de archivos . archivos tsx allí.

03:08.550 --> 03:11.900
Ahora bien, hasta ahora en el curso, no hemos trabajado con . tsx, pero sólo con los

03:11.900 --> 03:13.787
archivos . archivos ts. tsx simplemente

03:13.787 --> 03:17.800
ha sido elegido aquí, porque estos son archivos donde no se puede escribir

03:17.800 --> 03:20.530
sólo el código TypeScript, pero todo el código

03:20.530 --> 03:22.000
JSX, que sólo es especial

03:22.000 --> 03:25.570
React, la sintaxis de JavaScript, donde se escribe el marcado

03:25.570 --> 03:29.930
HTML dentro de su JavaScript, o en este caso, el código TypeScript.

03:29.930 --> 03:32.880
Eso es lo que conseguimos aquí.

03:32.880 --> 03:34.920
Ahora en estos archivos, ya podemos ver alguna

03:34.920 --> 03:36.500
sintaxis de TypeScript, por ejemplo,

03:36.500 --> 03:38.800
aquí, tenemos una asignación de tipo, voy a tener

03:38.800 --> 03:41.480
una mirada más cercana a este tipo más tarde, pero por ahora,

03:41.480 --> 03:43.880
sólo podemos ver inmediatamente que obviamente usamos

03:43.880 --> 03:45.780
TypeScript aquí.

03:45.780 --> 03:49.290
Con eso, permítanme limpiar un poco esta estructura de carpetas de inicio,

03:49.290 --> 03:50.680
y luego vamos a construir una

03:50.680 --> 03:52.730
aplicación React muy simple juntos, y mientras

03:52.730 --> 03:56.150
estamos haciendo eso, vamos a explorar cómo podemos utilizar TypeScript

03:56.150 --> 03:57.550
con React.

03:57.550 --> 04:01.000
Así que vamos a centrarnos primero en la limpieza,

04:01.000 --> 04:02.950
aquí en la App. tsx, voy a eliminar la importación del logotipo

04:02.950 --> 04:06.860
y eliminar todo el contenido en mi div aquí,

04:06.860 --> 04:09.380
y sólo mantener ese div por lo tanto.

04:09.380 --> 04:12.020
También eliminaré la App. css import, deshacerse

04:12.020 --> 04:19.560
de la App. css y el archivo App. prueba. tsx, así como el logotipo.

04:19.560 --> 04:19.560
svg y el serviceWorker. ts,

04:19.560 --> 04:23.470
elimine todos ellos.

04:23.470 --> 04:25.500
En el índice. tsx, voy a eliminar esta importación de serviceWorker,

04:25.500 --> 04:29.060
porque no vamos a trabajar con serviceWorkers

04:29.060 --> 04:32.100
aquí, eliminar ese código allí abajo, y terminar con esta configuración,

04:32.100 --> 04:34.530
y en el índice. css voy a borrar todo esto, y sólo establecer

04:34.530 --> 04:38.870
algún estilo HTML donde quiero

04:38.870 --> 04:40.610
establecer un font-family

04:40.610 --> 04:43.140
de sans-serif, y luego un estilo de cuerpo

04:43.140 --> 04:48.820
donde quiero deshacerme del margen, así, un estilo muy simple.

04:48.820 --> 04:50.763
Y con eso, tenemos una configuración inicial

04:52.790 --> 04:54.540
con la que quiero trabajar.

04:54.540 --> 04:55.840
Ahora, de nuevo, lo mencioné, pero

04:55.840 --> 04:57.370
si todo esto no te dice nada, si esta es

04:57.370 --> 04:59.710
una sintaxis que nunca has visto antes, entonces definitivamente

04:59.710 --> 05:02.200
bucea en algunos recursos de React primero.

05:02.200 --> 05:05.610
Esto no es en lo que nos centraremos en este módulo, no

05:05.610 --> 05:08.130
vas a aprender React en este módulo.

05:08.130 --> 05:11.010
Pero con eso, guardemos todos nuestros cambios y ahora

05:11.010 --> 05:12.920
continuemos, y empecemos a escribir

05:12.920 --> 05:15.680
algo de código React y Typhon, y aprendamos cómo funcionan

05:15.680 --> 05:17.980
estas dos cosas juntas.
