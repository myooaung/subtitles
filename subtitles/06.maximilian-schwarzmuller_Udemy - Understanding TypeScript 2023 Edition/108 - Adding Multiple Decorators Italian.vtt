WEBVTT

00:02.270 --> 00:05.210
Istruttore: Ora abbiamo visto un decoratore più utile.

00:05.210 --> 00:08.750
Concludo questa introduzione di base ai decoratori con un'altra

00:08.750 --> 00:11.030
cosa importante da sapere: è possibile

00:11.030 --> 00:14.600
aggiungere più di un decoratore a una classe o a qualsiasi altro

00:14.600 --> 00:17.760
punto in cui si possa usare un decoratore.

00:17.760 --> 00:18.940
Aggiungiamo anche

00:18.940 --> 00:23.040
il decoratore logger, ad esempio, in questo modo.

00:23.040 --> 00:25.810
Se lo salviamo, vediamo che si compila senza

00:25.810 --> 00:29.030
errori e vediamo anche il messaggio di log.

00:29.030 --> 00:31.490
Rimane solo una domanda importante: in

00:31.490 --> 00:34.840
quale ordine vengono eseguiti questi decoratori?

00:34.840 --> 00:36.550
Per scoprirlo, lanciamo

00:36.550 --> 00:38.880
i messaggi di log in entrambi.

00:38.880 --> 00:41.340
Abbiamo un messaggio di log nel logger, ovviamente,

00:41.340 --> 00:43.400
ora passiamo alla funzione decoratore.

00:43.400 --> 00:46.350
Quindi, alla funzione interna di WithTemplate,

00:46.350 --> 00:49.900
diciamo ad esempio Rendering Template.

00:49.900 --> 00:50.733
Vediamo ora in quale

00:50.733 --> 00:53.830
ordine vengono eseguite queste funzioni e in quale ordine

00:53.830 --> 00:56.820
vengono stampate le dichiarazioni di log.

00:56.820 --> 00:59.570
Vediamo che il modello di rendering viene eseguito

00:59.570 --> 01:02.540
per primo e poi otteniamo l'output del logger.

01:02.540 --> 01:04.070
Naturalmente questo ci dice che l'esecuzione

01:04.070 --> 01:06.260
avviene dal basso verso l'alto.

01:06.260 --> 01:08.033
Prima il decoratore più in basso,

01:08.033 --> 01:10.790
poi i decoratori che lo precedono.

01:10.790 --> 01:14.230
WithTemplate viene eseguito per primo, quindi viene eseguito Logger.

01:14.230 --> 01:15.270
E, cosa importante,

01:15.270 --> 01:18.920
sto parlando delle funzioni del decoratore vero e proprio.

01:18.920 --> 01:23.710
Le fabbriche di decoratori qui vengono eseguite prima.

01:23.710 --> 01:26.790
Se qui abbiamo Logger Factory e abbiamo

01:26.790 --> 01:31.080
lo stesso log in Template Factory, quindi qui dico Template

01:31.080 --> 01:35.000
Factory nel mio log, vedrete che in realtà viene eseguito

01:35.000 --> 01:37.490
prima Logger Factory e poi Template

01:37.490 --> 01:39.930
Factory.

01:39.930 --> 01:41.750
E questo ha senso perché alla fine,

01:41.750 --> 01:43.740
anche se abbiamo questo simbolo @ qui,

01:43.740 --> 01:45.600
sto eseguendo una funzione e stiamo

01:45.600 --> 01:46.850
facendo lo stesso qui.

01:46.850 --> 01:49.930
Naturalmente, qui si applicano le normali regole di JavaScript e l'esecuzione

01:49.930 --> 01:51.380
di questa funzione avviene prima

01:51.380 --> 01:53.610
dell'esecuzione di questa funzione.

01:53.610 --> 01:56.590
Ecco perché vediamo il Logger Factory

01:56.590 --> 01:59.470
prima del Template Factory.

01:59.470 --> 02:02.650
Quindi la creazione delle funzioni del decoratore

02:02.650 --> 02:03.970
avviene nell'ordine

02:03.970 --> 02:07.280
in cui vengono specificate le funzioni del factory.

02:07.280 --> 02:10.780
Ma l'esecuzione delle funzioni del decoratore avviene

02:10.780 --> 02:12.700
dal basso verso l'alto.

02:12.700 --> 02:17.300
Ciò significa che il decoratore più in basso viene eseguito per primo, quindi

02:17.300 --> 02:19.000
questa funzione del decoratore,

02:19.000 --> 02:23.250
e successivamente viene eseguito il decoratore sopra di esso.

02:23.250 --> 02:25.163
È una cosa che bisogna sapere.

02:26.040 --> 02:29.620
Con questo, abbiamo ottenuto una solida conoscenza di base sui

02:29.620 --> 02:32.240
decoratori e abbiamo anche visto un decoratore

02:32.240 --> 02:34.900
più avanzato che, si spera, dia anche una prima

02:34.900 --> 02:37.810
impressione del perché i decoratori possono essere

02:37.810 --> 02:41.970
utili, soprattutto se si pensa anche a framework come Angular.

02:41.970 --> 02:46.470
Vediamo ora in quali altri posti, oltre alle classi, possiamo

02:46.470 --> 02:48.140
aggiungere i decoratori

02:48.140 --> 02:50.363
e cosa potremmo fare lì.
