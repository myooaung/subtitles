WEBVTT

00:02.270 --> 00:03.613
المدرب: حتى نتمكن من إرجاع

00:03.613 --> 00:05.080
شيء ما على Method Decorators

00:05.080 --> 00:06.820
، وأن يكون هذا الشيء عبارة عن واصف

00:06.820 --> 00:08.920
، مما يسمح لنا بتغيير الطريقة أو تغيير

00:08.920 --> 00:11.000
تكوين الطريقة.

00:11.000 --> 00:12.582
وهذا شيء أريد أن أفعله هنا.

00:12.582 --> 00:15.985
قبل ذلك ، سأنتقل أولاً إلى ملف فهرس HTML

00:15.985 --> 00:18.540
وهناك ، دعنا نضيف زرًا.

00:18.540 --> 00:21.272
انقر فوق زر بسيط جدًا

00:21.272 --> 00:24.720
في تطبيقي. ts ، أريد الآن التأكد

00:24.720 --> 00:26.104
من أننا عندما نضغط

00:26.104 --> 00:29.800
على هذا الزر ننفذ طريقة على كائن.

00:29.800 --> 00:32.120
ولهذا ، سأضيف ببساطة فئة جديدة

00:32.120 --> 00:34.600
هنا ، أولاً وقبل كل شيء ، طابعة.

00:34.600 --> 00:38.140
وهناك أريد أن يكون لدي رسالة خاصية وهي

00:38.140 --> 00:41.690
تعمل فقط ، لذا فإن سلسلة بسيطة مخزنة هناك

00:41.690 --> 00:45.980
ثم أريد أن يكون لدي طريقة عرض رسالة هناك حيث يمكنني

00:45.980 --> 00:49.630
التحكم في تسجيل هذه الرسالة.

00:49.630 --> 00:51.770
لذلك ، بالطبع ، هذا نوع من الصف الوهمي البسيط

00:51.770 --> 00:53.430
ولكن ليس أقل من ذلك ، هذا يسمح لي أن أريكم

00:53.430 --> 00:54.860
ما أريد أن أريكم إياه.

00:54.860 --> 00:56.550
دعنا نختار الزر إلى الباب

00:56.550 --> 01:00.860
الآن ، باستخدام زر محدد استعلام المستند ودعنا نضيف

01:00.860 --> 01:02.970
مستمعًا إلى الحدث.

01:02.970 --> 01:05.080
الآن ، أولاً وقبل كل شيء ، سأضيف علامة

01:05.080 --> 01:07.800
التعجب الخاصة بي هنا لأوضح لـ TypeScript أن

01:07.800 --> 01:08.806
هذا موجود ، وأن هذا

01:08.806 --> 01:10.990
لن يكون فارغًا ، وبعد ذلك سأضيف مستمعًا

01:10.990 --> 01:14.210
للأحداث ، ومستمعًا لحدث النقر ، وبعد ذلك أريد تشغيل طريقة

01:14.210 --> 01:16.450
عرض هذه الرسالة هنا.

01:16.450 --> 01:20.350
لذلك ، سوف أقوم بإنشاء طابعة جديدة هنا ، مثل هذه ،

01:20.350 --> 01:23.120
ثم هنا أشر إلى p. showMessage ، هذه

01:23.120 --> 01:24.323
هي فكرتي هنا.

01:25.300 --> 01:27.103
الآن ، إذا حفظنا ذلك ، وعدنا

01:28.153 --> 01:31.440
إلى صفحتنا وقمت بالضغط على هذا الزر ، فلن

01:31.440 --> 01:33.320
نحصل على تعريف هنا ، ومع

01:33.320 --> 01:36.050
ذلك ، لا تظهر رسالتنا.

01:36.050 --> 01:38.860
والسبب في ذلك هو أنه مع مستمع الحدث

01:38.860 --> 01:41.820
، إذا أشرنا إلى وظيفة يجب تنفيذها ، فلن

01:41.820 --> 01:44.240
يكون لهذه الكلمة الأساسية داخل

01:44.240 --> 01:48.260
تلك الوظيفة نفس السياق أو المرجع كما هو الحال إذا

01:48.260 --> 01:52.193
استدعينا p فقط. ShowMessage ، في هذه

01:53.144 --> 01:56.450
الحالة ، قد يشير هذا إلى الطابعة.

01:56.450 --> 02:00.200
لا ، في السيناريو هنا حيث نستخدم مستمع الحدث ،

02:00.200 --> 02:02.860
سيشير هذا إلى هدف الحدث ، لأن addEventListener

02:02.860 --> 02:05.777
في النهاية يربط هذا في الوظيفة التي

02:05.777 --> 02:09.560
سيتم تنفيذها مع هدف الحدث.

02:09.560 --> 02:11.360
وبالطبع ، لا أريد هذا.

02:11.360 --> 02:12.570
الآن ، الحل الشائع

02:12.570 --> 02:14.170
هنا هو استخدام طريقة

02:14.170 --> 02:19.170
الربط وربط showMessage بـ p ، أو ربط هذا في showMessage إلى p بحيث

02:19.480 --> 02:22.860
عند تنفيذ هذا ، لا يشير هذا إلى ما يريد addEventListener

02:22.860 --> 02:25.420
الإشارة إليه ولكن بدلاً من ذلك داخل

02:25.420 --> 02:28.040
showMessage سيشير إلى هذا p ، إلى

02:28.040 --> 02:31.770
هذا الكائن هنا مرة أخرى.

02:31.770 --> 02:33.300
وإذا كنا الآن ، إذا أعدنا التحميل

02:33.300 --> 02:36.270
هنا وقمت بمسح هذا مرة أخرى ، فنحن الآن نرى هذا يعمل!

02:36.270 --> 02:39.240
الآن ، هذا هو كل جافا سكريبت الافتراضي.

02:39.240 --> 02:40.790
الآن ، سنقوم ببناء مصمم ،

02:40.790 --> 02:42.191
يمكننا إضافته إلى هذه

02:42.191 --> 02:47.191
الطريقة ، والذي سيربط هذا تلقائيًا بالفئة المحيطة ، لذلك بالنسبة للكائن الذي

02:47.460 --> 02:50.130
تنتمي إليه هذه الطريقة ، في كل مرة يتم استدعاؤها

02:50.130 --> 02:53.440
، بغض النظر عن المكان الذي نطلق عليه.

02:53.440 --> 02:55.974
لذلك ، فوق الطابعة سأضيف وظيفة جديدة وسأسميها

02:55.974 --> 02:58.800
autobind لأن هذا هو ، في النهاية ، ما نفعله وسيكون

02:58.800 --> 03:01.580
هذا هو غلافي التلقائي للديكور.

03:01.580 --> 03:03.890
يمكنك أيضًا بالطبع استخدام حرف بداية كبير

03:03.890 --> 03:05.960
للبقاء متسقًا مع تسمياتنا الأخرى ولكن

03:05.960 --> 03:07.930
مرة أخرى ، يمكنك استخدام أي من الاثنين

03:07.930 --> 03:10.122
عند تحديد وظيفة الديكور.

03:10.122 --> 03:13.300
الآن هذا سيكون مصمم الديكور الخاص بي بالفعل

03:13.300 --> 03:15.269
وهناك لدينا بضع حجج.

03:15.269 --> 03:17.940
نحصل على الهدف ، كما ستتعلم ، وهذا أي شيء.

03:17.940 --> 03:20.085
إنه إما النموذج الأولي للكائن

03:20.085 --> 03:22.533
الذي نعمل معه أو أنه وظيفة المُنشئ

03:22.533 --> 03:25.730
إذا كنا سنضيف هذا إلى طريقة ثابتة ولكن هنا

03:25.730 --> 03:27.340
سيكون النموذج الأولي

03:27.340 --> 03:30.200
لأننا سنضيفه إلى طريقة مثيل.

03:30.200 --> 03:32.520
ثم لدينا اسم الطريقة أو اسم الخاصية ولكن نظرًا لأننا

03:32.520 --> 03:33.690
نضيفها إلى طريقة يمكننا أن

03:33.690 --> 03:36.330
نطلق عليها اسم هذه الطريقة ، يصبح الأمر أكثر منطقية.

03:36.330 --> 03:38.600
إذا كان هذا عبارة عن سلسلة أو رمز أو يمكن

03:38.600 --> 03:40.229
أن يكون أيضًا رقمًا ، بالطبع

03:40.229 --> 03:43.250
، ولكننا نعلم هنا أننا سنعمل عادةً مع السلاسل حتى

03:43.250 --> 03:45.061
نتمكن أيضًا من استخدام الخيط

03:45.061 --> 03:48.470
هنا ، اعتمادًا على المكان الذي تخطط لإضافة هذا المصمم إليه

03:48.470 --> 03:50.170
وكيف عام يجب أن يكون ، وأخيراً

03:50.170 --> 03:52.484
وليس آخراً ، نحصل على الواصف هنا والذي

03:52.484 --> 03:56.340
سيكون من النوع PropertyDescriptor كتنبيه.

03:56.340 --> 03:57.650
إذن ، لدينا الآن هذه

03:57.650 --> 03:59.655
الحجج الثلاث التي استخدمناها

03:59.655 --> 04:03.540
جميعًا في Log3 والذي كان مصممًا لطريقتنا من قبل.

04:03.540 --> 04:05.970
الآن ، في autobind ، وأريد الآن التأكد من

04:05.970 --> 04:08.994
أننا نقوم دائمًا بتعيين الكلمة الأساسية لهذا الكائن

04:08.994 --> 04:11.973
الذي تنتمي إليه هذه الطريقة مرة أخرى.

04:11.973 --> 04:14.240
الآن كيف يمكننا تحقيق ذلك؟

04:14.240 --> 04:15.797
بادئ ذي بدء ، لا بد لي من الوصول

04:15.797 --> 04:17.880
إلى الطريقة التي ينبغي استدعاؤها.

04:17.880 --> 04:20.661
وسيكون هذا ممكنًا بمساعدة الواصف الخاص بنا

04:20.661 --> 04:22.013
، لأنه إذا أعدت تحميل التطبيق

04:22.013 --> 04:25.180
وألقيت نظرة على واصف الطريقة في الأسفل ، فسترى أننا

04:25.180 --> 04:27.330
نحصل على خاصية القيمة في الواصف وهذه

04:27.330 --> 04:29.460
النقاط في الوظيفة.

04:29.460 --> 04:32.240
نظرًا لأن قيمة هذه الخاصية هي دالة ، في هذه الحالة

04:32.240 --> 04:33.930
، تكون الطريقة مجرد خاصية

04:33.930 --> 04:35.498
لها وظيفة كقيمة.

04:35.498 --> 04:38.630
إذن ، مفتاح القيمة يحمل الوظيفة الأصلية ، لذلك

04:38.630 --> 04:42.980
، هنا ، يمكننا استخراج الطريقة الأصلية ، إذا أردنا تسميتها

04:42.980 --> 04:44.930
بهذا الشكل من خلال الوصول إلى

04:44.930 --> 04:47.320
الواصف. القيمة.

04:47.320 --> 04:50.563
سيتيح لنا هذا الوصول إلى الطريقة الأصلية جيدًا.

04:51.790 --> 04:55.450
بعد ذلك ، سوف أقوم بإعداد واصف معدل جديد ، وسيكون

04:55.450 --> 04:58.320
هذا في النهاية ما سنعود إليه لاحقًا.

04:58.320 --> 05:00.030
الآن سيكون هذا كائنًا

05:00.030 --> 05:03.620
وسيكون من واصف خاصية النوع.

05:03.620 --> 05:06.350
الآن في هذا الكائن يمكننا إضافة كل الأشياء

05:06.350 --> 05:09.350
التي يمكننا إضافتها إلى واصف الخاصية.

05:09.350 --> 05:12.110
وعلى سبيل المثال ، يمكنك ضبط هذا على قابل

05:12.110 --> 05:14.962
للتكوين ، وصحيح ، وضبط التعداد على خطأ ، بحيث

05:14.962 --> 05:17.130
لا يظهر هذا في الحلقات الخارجية

05:17.130 --> 05:20.310
، والآن أضف أداة جمع هنا ، وهذا جديد.

05:20.310 --> 05:23.400
أقوم بإضافة دالة getter هنا ، وهي طريقة ، أو خاصية

05:23.400 --> 05:26.150
تحتوي على وظيفة ، وهي نفسها ، حتى نتمكن من تنفيذ

05:27.020 --> 05:29.628
بعض المنطق الإضافي عندما يحاول المستخدمون

05:29.628 --> 05:32.260
الوصول إلى هذه الخاصية.

05:32.260 --> 05:35.170
حتى لا ننفذ فقط قيمة هذه الخاصية مباشرة ، أي

05:35.170 --> 05:36.633
الوظيفة ، ولكن يمكننا

05:36.633 --> 05:38.888
التدخل والقيام ببعض الأعمال الإضافية

05:38.888 --> 05:40.850
قبل تنفيذ الوظيفة.

05:40.850 --> 05:41.913
هذه هي الفكرة هنا.

05:43.230 --> 05:46.290
لذلك لا أقوم بإضافة خاصية قيمة إلى هذا الواصف

05:46.290 --> 05:48.660
هنا ، لدي فقط دالة getter ومرة أخرى

05:48.660 --> 05:51.540
، فإن getter يشبه في الأساس وجود خاصية value

05:51.540 --> 05:54.777
مع منطق إضافي يتم تشغيله قبل إرجاع القيمة.

05:54.777 --> 05:59.777
الآن ، أريد هنا الحصول على وظيفة الربط الخاصة بي حيث يمكنني

05:59.900 --> 06:03.450
استخدام الطريقة الأصلية التي استخرجناها

06:03.450 --> 06:07.100
هنا ونسميها ربط وربط هذا.

06:07.100 --> 06:08.590
والآن الوصية طبعا

06:08.590 --> 06:11.730
ما الذي يشير إليه هذا هنا؟

06:11.730 --> 06:13.720
ضع في اعتبارك أنه داخل طريقة

06:13.720 --> 06:17.700
getter هذه ، لذا سيشير هذا إلى كل ما هو مسؤول عن تشغيل

06:17.700 --> 06:19.510
طريقة getter هذه.

06:19.510 --> 06:21.110
وهذه هي الحيلة الآن

06:21.110 --> 06:23.700
، سيتم تشغيل طريقة getter بواسطة

06:23.700 --> 06:27.200
الكائن الملموس الذي تنتمي إليه ، لذا فإن هذا

06:27.200 --> 06:29.190
الجزء الداخلي من طريقة getter

06:29.190 --> 06:33.610
سيشير دائمًا إلى الكائن الذي حددنا عليه.

06:33.610 --> 06:36.800
لن يتم الكتابة فوق هذا بواسطة addEventListener

06:36.800 --> 06:38.965
لأن المحصل يشبه طبقة إضافية بين

06:38.965 --> 06:41.221
وظيفتنا التي يتم تنفيذها والكائن

06:41.221 --> 06:44.976
الذي ينتمي إليه ومستمع الأحداث.

06:44.976 --> 06:47.683
لذلك ، سيشير هذا هنا إلى الكائن

06:47.683 --> 06:51.610
الذي حددنا منه الطريقة في الأصل.

06:51.610 --> 06:54.660
لذلك يمكننا ربط هذا بالطريقة الأصلية بأمان

06:54.660 --> 06:57.495
والتأكد من أن هذا الجزء الداخلي من الطريقة

06:57.495 --> 07:01.170
الأصلية سيشير أيضًا إلى نفس الكائن بالضبط.

07:01.170 --> 07:04.300
سأقوم الآن بإرجاع الدالة المقيدة هنا

07:04.300 --> 07:06.760
وبعد ذلك ، خارج هذا الواصف المعدل

07:06.760 --> 07:08.910
، أعيد الواصف المعدل.

07:08.910 --> 07:10.560
هذه هي وظيفة التزيين الخاصة

07:10.560 --> 07:12.420
بنا ، وهي إعادة كائن واصف جديد

07:12.420 --> 07:14.103
، وبالتالي فإن كائن الواصف

07:14.103 --> 07:16.960
هذا سيتجاوز الموصوف القديم ، وهذا ما سيفعله

07:16.960 --> 07:18.710
TypeScript به.

07:18.710 --> 07:21.500
سيحل TypeScript بعد ذلك محل واصف الطرق القديمة

07:21.500 --> 07:23.215
، وبالتالي يتم تكوين الطرق

07:23.215 --> 07:26.390
القديمة بهذا التكوين الجديد هنا ، والذي أضاف طبقة

07:26.390 --> 07:28.513
getter الإضافية هذه.

07:29.460 --> 07:33.330
الآن ، لست مهتمًا باسم الهدف والطريقة هنا ، بالطبع

07:33.330 --> 07:37.500
، لتجنب الأخطاء سأسمي هذه الشرطة السفلية وهذا هنا

07:37.500 --> 07:39.083
يؤكد اثنين.

07:40.260 --> 07:43.070
مرة أخرى ، فقط لإخبار TypeScript أنني لست مهتمًا

07:43.070 --> 07:45.480
بهذه القيم ولكني بحاجة إلى قبولها.

07:45.480 --> 07:49.800
والآن دعنا نضيف الربط التلقائي لعرض الرسالة هنا.

07:49.800 --> 07:52.203
لذلك هنا ، سأضيف في Autobind ، وأتأكد

07:54.050 --> 07:56.490
من أنك قمت بإزالة الرابط الموجود

07:56.490 --> 07:59.236
هناك في مستمع الحدث ، وحفظ هذا.

07:59.236 --> 08:01.450
والآن دعنا نلقي نظرة على ذلك

08:01.450 --> 08:04.730
، لننقر فوق Click Me ، وسترى This Works!

08:04.730 --> 08:06.678
إذا قمت بإعادة التحميل ، فهذا يعمل.

08:06.678 --> 08:09.680
لأن هذا مرتبط الآن بشكل صحيح.

08:09.680 --> 08:12.060
وللتحقق فقط من أن مصمم الديكور الخاص بنا

08:12.060 --> 08:13.520
هو الذي يحدث فرقًا هنا ، إذا

08:13.520 --> 08:15.868
قمت بإزالة الرابط هنا في أداة التجميع الخاصة

08:15.868 --> 08:17.850
بي والديكور وقمت بحفظ ذلك ، فسترى

08:17.850 --> 08:20.920
أنه إذا تم إعادة التحميل الآن وقمنا بالنقر فوق انقر

08:20.920 --> 08:23.626
فوقي ، فسنرى غير محدد تكرارا.

08:23.626 --> 08:26.320
لذلك فإن طبقة getter الإضافية هذه هي التي

08:26.320 --> 08:27.389
تقوم بعملها هنا

08:27.389 --> 08:30.430
مما يضمن أن هذا مرتبط دائمًا بشكل صحيح بغض النظر

08:30.430 --> 08:33.260
عن كيفية استدعاء showMessage.

08:33.260 --> 08:35.380
إذا أطلقنا عليه مثل هذا مباشرة على

08:35.380 --> 08:38.350
الكائن ، فسيعمل ، إذا أطلقنا عليه هنا مثل هذا مع

08:38.350 --> 08:40.760
مستمع الحدث ، فإنه يعمل أيضًا.

08:40.760 --> 08:42.260
لذلك ترى أن هذا يعمل هنا ،

08:42.260 --> 08:45.070
والذي يأتي في النهاية من مكالمة showMessage

08:45.070 --> 08:48.266
هذه ، ثم ترى أيضًا أنه يعمل إذا قمت بالنقر فوق الزر.

08:48.266 --> 08:49.918
لذلك هذا مثال رائع على

08:49.918 --> 08:52.060
كيفية الاستفادة من المصممين

08:52.060 --> 08:55.190
لبناء وظيفة مذهلة للغاية وتوفير متاعب

08:55.190 --> 08:58.718
الاتصال اليدوي في كل مكان.

08:58.718 --> 09:01.883
بدلاً من ذلك ، تقوم فقط بربطها بهذا الشكل.
