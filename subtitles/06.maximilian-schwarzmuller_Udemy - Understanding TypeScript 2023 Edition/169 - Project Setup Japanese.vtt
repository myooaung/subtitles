WEBVTT

00:02.180 --> 00:04.590
講師：そのために､ このスタート企画を添付しています｡

00:04.590 --> 00:07.510
それは､ 私たちがすでに知っている古き良きスターティング・プロジェクトです｡ 

00:07.510 --> 00:09.640
そして､ そのアプリで｡  ts､ コードを書くことができます｡ 

00:09.640 --> 00:12.960
インデックスに htmlは､ 基本的に何も得ていません｡ 

00:12.960 --> 00:18.370
私の目標はとてもシンプルで､ 住所を入力できる簡単なウェブアプリケーションを作り､

00:18.370 --> 00:25.750
この住所を見て､ それを2つの座標に変換することです｡

00:25.750 --> 00:28.130
そして､ Googleの助けを借りて､ GoogleのAPIの1つを使って､

00:28.130 --> 00:30.420
これを行います｡

00:30.420 --> 00:32.930
この座標は､ Google Mapsの助けを借りて､

00:32.930 --> 00:35.660
あるいはGoogleの助けを借りて､

00:35.660 --> 00:39.260
具体的にはGoogle Maps JavaScript

00:39.260 --> 00:46.060
SDKの助けを借りてレンダリングする予定です｡

00:46.060 --> 00:49.730
ここでは､ 2つのサードパーティ・ライブラリ､ HDP ascending libraryとGoogle

00:49.730 --> 00:53.180
Maps libraryを使用することにします｡

00:53.180 --> 00:55.820
それを踏まえて､ さっそく始めましょう｡ 

00:55.820 --> 00:59.350
まずは､ ごく基本的な骨格を作るところから始めましょう｡ 

00:59.350 --> 01:02.410
さて､ 今回はhtmlもスタイリングもないコースなので､

01:02.410 --> 01:05.280
かなりシンプルにします｡

01:05.280 --> 01:07.629
index htmlにdivを作成し､

01:07.629 --> 01:10.360
mapというidを取得することにします｡

01:10.360 --> 01:14.100
私の目標は､ 後でこのdivにマップをレンダリングすることです｡ 

01:14.100 --> 01:21.990
さて､ このdivの中に､ 「住所を入力してください」という段落を追加してみます｡

01:21.990 --> 01:26.630
この段落を見るために､ まだ場所を決めていないのです｡

01:26.630 --> 01:35.050
このdivの下に､ TypeScriptで処理するため､ アクションもメソッドもないフォームを追加します｡

01:35.050 --> 01:40.050
このフォームには､ "text "タイプの入力と､ "address

01:40.127 --> 01:43.360
"というIDを設定し､ その下に "submit

01:43.360 --> 01:47.930
"タイプのボタンを置き､ SEARCH PLACEやSEARCH

01:47.930 --> 01:54.310
ADDRESSなど､ 好きなように記述したいと思います｡

01:54.310 --> 01:56.870
もちろん目的は､ このフォームを送信するときに､

01:56.870 --> 01:59.150
ユーザーがここに入力した値を取得し､

01:59.150 --> 02:03.430
これを座標に変換して､ 地図上に表示することです｡

02:03.430 --> 02:08.370
ここで､ 少なくとも基本的なスタイルが必要なので､ いくつかのスタイルを追加してみましょう｡

02:08.370 --> 02:15.240
そこで､ ここにリンクを貼って､ 「app. css」､ これはまだ追加していないファイルです｡

02:15.240 --> 02:19.640
このCSSファイルでは､ 地図用の非常にシンプルなスタイルをいくつか設定する｡

02:19.640 --> 02:23.200
画面上に何か見えるように､ 幅を90％､

02:23.200 --> 02:29.693
高さを20remsとして､ ボーダーは1ピクセルのベタで薄いグレーっぽい感じ､

02:29.693 --> 02:36.010
マージンは上下2rem､ 左右は自動で中央揃えにしておきます｡

02:36.010 --> 02:38.600
そして､ display flexを使ってフレックスボックスを設定し､

02:38.600 --> 02:42.570
justify content､ center､ align items

02:42.570 --> 02:49.860
centerを使って､ 最初に表示した段落をこのボックスの真ん中に配置します｡

02:49.860 --> 02:52.650
また､ 段落内のテキストも中央揃えになるように､ text

02:52.650 --> 02:55.763
alignをcenterに設定することにします｡

02:57.410 --> 03:01.320
これをフォームにすると､ フォームタグでこれを選択することもできます｡

03:01.320 --> 03:04.180
ここでは､ text align centerを使って､

03:04.180 --> 03:07.623
これをすべて画面の中央に配置することもできます｡

03:09.390 --> 03:14.390
地図とフォームの間に間隔を空けるために､ マージンを2レム､

03:14.650 --> 03:19.060
オートにしてください｡

03:19.060 --> 03:21.700
ページには､ 次のようなものが表示されているはずです｡ 

03:21.700 --> 03:24.570
ここでフォントを変更したいので､

03:24.570 --> 03:31.840
全体のhtmlセレクタではフォントファミリーをサンセリフに設定します｡

03:31.840 --> 03:33.860
そして､ より多くのスタイルを確実に実現することができます｡ 

03:33.860 --> 03:39.790
この入力やボタンにスタイルを付けることもできますが､ ここではあまりスタイルを付ける部分については気にしないでください｡

03:39.790 --> 03:42.290
その代わり､ これがうまく機能するかどうかを確認したいんだ｡ 

03:42.290 --> 03:46.010
でも､ もちろんここのスタイリングを改善するのは自由です｡ 

03:46.010 --> 03:48.218
しかし､ その準備ができたので､ 今度は実際にユーザーがここに入力したものを､

03:48.218 --> 03:54.693
Googleの助けを借りて検索してみることにしましょう｡
