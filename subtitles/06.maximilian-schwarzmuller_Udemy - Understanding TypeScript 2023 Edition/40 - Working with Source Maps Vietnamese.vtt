WEBVTT

00:02.240 --> 00:04.220
Người hướng dẫn: SourceMap giúp

00:04.220 --> 00:06.560
chúng tôi gỡ lỗi và phát triển.

00:06.560 --> 00:09.540
Vì vậy, để hiển thị những gì điều này làm, hãy để tôi biên dịch

00:09.540 --> 00:12.000
mọi thứ mà không cần cài đặt sourceMap đó.

00:12.000 --> 00:14.530
Nếu bây giờ chúng tôi truy cập trình duyệt và chúng tôi muốn

00:14.530 --> 00:17.420
hiểu mã của mình làm gì, chúng tôi có thể chuyển đến tab nguồn tại đây

00:17.420 --> 00:21.620
trong công cụ dành cho nhà phát triển và ở đó chúng tôi tìm thấy các tệp JavaScript của mình.

00:21.620 --> 00:23.060
Bây giờ chúng ta có thể đi

00:23.060 --> 00:25.090
sâu vào các tệp này và điều tốt là những

00:25.090 --> 00:28.350
tệp này khá dễ đọc đối với chúng ta, tất nhiên là con người

00:28.350 --> 00:30.940
vì cuối cùng chúng chứa mã JavaScript.

00:30.940 --> 00:35.200
Bây giờ điều đó tốt nhưng điều gì sẽ xảy ra nếu chúng ta có mã TypeScript

00:35.200 --> 00:38.940
phức tạp hơn và chúng ta muốn gỡ lỗi mã TypeScript của mình chứ

00:38.940 --> 00:41.640
không phải mã JavaScript đã biên dịch.

00:41.640 --> 00:43.060
Nói cách khác, sẽ thật tuyệt

00:43.060 --> 00:47.180
nếu chúng ta thấy các tệp TypeScript ở đây chứ không phải các tệp JavaScript.

00:47.180 --> 00:50.000
Với tùy chọn sourceMap, bạn có thể đến đó.

00:50.000 --> 00:53.700
Nếu bạn đặt giá trị này thành true và chạy lại lệnh tsc thì bạn sẽ thấy chúng tôi

00:53.700 --> 00:56.950
nhận được các tệp . js, . các tệp bản

00:56.950 --> 00:58.810
đồ cũng được tạo.

00:58.810 --> 01:01.540
Bây giờ nếu chúng ta nhìn vào chúng thì chúng là

01:01.540 --> 01:04.920
những tệp khá lạ nhưng những gì chúng làm về cơ bản là hoạt động

01:04.920 --> 01:07.110
như một cầu nối mà các trình duyệt hiện

01:07.110 --> 01:10.170
đại và các công cụ dành cho nhà phát triển ở đó hiểu được

01:10.170 --> 01:13.410
để kết nối các tệp JavaScript với các tệp đầu vào.

01:13.410 --> 01:17.440
Vì vậy, với những tệp này được tạo nếu tôi tải lại ở đây, bạn sẽ thấy trong tab

01:17.440 --> 01:20.320
nguồn, giờ đây chúng tôi không chỉ có các tệp JavaScript

01:20.320 --> 01:23.497
mà còn thấy các tệp TypeScript của chúng tôi ở đó.

01:23.497 --> 01:27.230
Và chúng ta thậm chí có thể đặt các điểm ngắt trong tệp TypeScript và

01:27.230 --> 01:29.320
nếu bây giờ tôi nhấp vào nút chẳng hạn,

01:29.320 --> 01:31.650
thì nó sẽ tạm dừng trong tệp TypeScript.

01:31.650 --> 01:34.720
Tất nhiên là siêu, siêu tiện lợi.

01:34.720 --> 01:37.670
Bởi vì điều đó thực sự đưa quy trình gỡ lỗi của chúng tôi lên

01:37.670 --> 01:40.260
một tầm cao mới vì về cơ bản, chúng tôi có thể làm việc

01:40.260 --> 01:43.400
trực tiếp trong các tệp đầu vào của mình, trong các tệp TypeScript

01:43.400 --> 01:45.670
thay vì các tệp JavaScript.

01:45.670 --> 01:48.010
Tuy nhiên, bây giờ ở đây tôi sẽ nhận xét điều này

01:48.010 --> 01:50.800
vì chúng tôi có một dự án khá đơn giản ở đây và tôi không

01:50.800 --> 01:53.580
muốn có thêm các tệp . tập tin bản đồ nằm xung quanh đây.

01:53.580 --> 01:55.950
Nhưng điều này cực kỳ hữu ích trong các dự án

01:55.950 --> 01:57.803
vì nó đơn giản hóa việc gỡ lỗi.
