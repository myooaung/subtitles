WEBVTT

00:02.220 --> 00:05.760
-: Als volgende stap wil ik werken aan deze types hier,

00:05.760 --> 00:09.900
het type dat ik hier gebruik voor mijn toegewezen projecten,

00:09.900 --> 00:11.320
voor de luisteraars hier,

00:11.320 --> 00:14.980
en ook voor de projecten in de projectstatus.

00:14.980 --> 00:19.030
Natuurlijk wil ik hier niet werken met eender welke, het zou zinvoller

00:19.030 --> 00:20.740
zijn om een specifieke projectklasse

00:20.740 --> 00:25.660
of projecttype te hebben, die we kunnen gebruiken.

00:25.660 --> 00:27.760
En inderdaad, ik zal een klasse maken

00:29.070 --> 00:29.903
voor dat projecttype,

00:31.390 --> 00:32.450
gewoon door klasse

00:32.450 --> 00:34.890
project te gebruiken, zodat we een manier

00:34.890 --> 00:38.740
hebben om projectobjecten te bouwen, die altijd dezelfde

00:38.740 --> 00:41.570
structuur hebben.

00:41.570 --> 00:44.760
Op dit moment doe ik het daar beneden met de letterlijke notatie.

00:44.760 --> 00:47.920
De keerzijde daarvan is natuurlijk dat we moeten onthouden

00:47.920 --> 00:50.490
dat het om een beschrijving gaat en niet om Desc.

00:50.490 --> 00:52.410
dat we een ID nodig hebben, wat een string

00:52.410 --> 00:53.470
is, enzovoort.

00:53.470 --> 00:56.440
Dus dat is waar een aangepast type ons kan helpen

00:56.440 --> 00:59.750
en ik maak een klasse en niet een interface of een aangepast

00:59.750 --> 01:02.300
type met het type sleutelwoord omdat ik

01:02.300 --> 01:05.470
het wil kunnen instantiëren.

01:05.470 --> 01:07.960
Hoe moet zo'n klas of zo'n project

01:07.960 --> 01:10.700
er dan precies uitzien?

01:10.700 --> 01:12.320
Nou, ik voeg een constructor

01:12.320 --> 01:17.280
toe en gebruik dan deze snelkoppeling om argumenten of parameters toe te kennen aan

01:17.280 --> 01:19.100
de constructor, die dan automatisch

01:19.100 --> 01:22.310
ook eigenschappen worden, door de accessor toe te voegen

01:22.310 --> 01:24.460
aan het begin, Public, in dit geval,

01:24.460 --> 01:25.650
en dan de naam van het

01:25.650 --> 01:29.450
argument en de eigenschap, en dan het type.

01:29.450 --> 01:33.100
En hier moet elk project een ID hebben.

01:33.100 --> 01:34.990
Elk project moet een titel hebben,

01:34.990 --> 01:37.330
die ook een string is, net als de ID.

01:37.330 --> 01:38.690
Het zou een beschrijving

01:38.690 --> 01:39.920
moeten hebben, dat is een

01:39.920 --> 01:43.540
string, het zou een People eigenschap moeten hebben, dat is een getal

01:43.540 --> 01:44.420
dat het aantal mensen

01:44.420 --> 01:47.440
is dat aan een project is toegewezen.

01:47.440 --> 01:49.580
En één ding dat ik ook wil toevoegen,

01:49.580 --> 01:51.640
wat we tot nu toe niet hadden, is eigenlijk

01:51.640 --> 01:53.580
een projectstatus.

01:53.580 --> 01:56.920
Want als we nu een project toevoegen, verschijnt

01:56.920 --> 01:58.680
het in beide lijsten.

01:58.680 --> 02:01.530
Nu wil ik status toevoegen aan een project, die

02:01.530 --> 02:03.630
natuurlijk kan worden gewijzigd,

02:03.630 --> 02:07.470
zodat we in feite kunnen filteren op actieve projecten in het

02:07.470 --> 02:11.470
eerste vak en op voltooide projecten in een tweede vak.

02:11.470 --> 02:15.000
Dus om alleen de juiste projecten te laten zien bij elke box.

02:15.000 --> 02:19.890
Dus daarvoor voeg ik nog een publieke eigenschap toe, status.

02:19.890 --> 02:21.280
En nu is de vraag natuurlijk

02:21.280 --> 02:23.985
welk type deze status moet hebben?

02:23.985 --> 02:28.240
Nu zouden we een union-type kunnen gebruiken met twee letterlijke types

02:28.240 --> 02:31.170
Active en Finished wat we eerder al gebruikten.

02:31.170 --> 02:33.280
Maar hier wil ik steeds een ander type

02:33.280 --> 02:36.890
introduceren of herintroduceren waarover je geleerd hebt,

02:36.890 --> 02:38.320
en dat is de Enum.

02:38.320 --> 02:41.890
De Enum is hier perfect omdat we precies twee opties hebben.

02:41.890 --> 02:44.950
En hier in de context van dit projectobject hebben we ook geen

02:44.950 --> 02:48.740
voor mensen begrijpelijke tekst nodig, die we opslaan als een waarde, maar

02:48.740 --> 02:50.270
hebben we eigenlijk alleen een

02:50.270 --> 02:52.341
of andere identificatie nodig.

02:52.341 --> 02:56.140
Dus hier voeg ik een nieuwe Enum projectstatus toe.

02:56.140 --> 02:59.810
En ik wil daar twee waarden hebben,

02:59.810 --> 03:02.890
Actief en Voltooid.

03:02.890 --> 03:05.440
En dan hier, zal deze status gewoon

03:05.440 --> 03:08.610
van het type projectstatus zijn.

03:08.610 --> 03:11.003
Dit is nu mijn project klas.

03:11.900 --> 03:14.220
Daarmee kunnen we zeggen dat dit een

03:14.220 --> 03:17.820
reeks projecten is die die projectklasse gebruiken.

03:17.820 --> 03:20.351
En natuurlijk, als we hier een

03:20.351 --> 03:24.780
project aanmaken, doen we dat met nieuw project, niet

03:24.780 --> 03:26.620
met projectstaat.

03:26.620 --> 03:30.310
En hier geven we aan het project een ID door,

03:30.310 --> 03:32.200
zoals eerder vermeld,

03:32.200 --> 03:35.370
een willekeurig nummer dat we omzetten

03:35.370 --> 03:36.720
in een string, dan

03:36.720 --> 03:38.210
de titel, dan de beschrijving,

03:38.210 --> 03:41.930
dan de NUM of People hier, en dan natuurlijk

03:41.930 --> 03:45.080
ook de status.

03:45.080 --> 03:49.950
En één ding dat ik hier in deze toepassing in dit demoproject

03:49.950 --> 03:53.180
wil hebben, is dat elk nieuw project standaard

03:53.180 --> 03:54.830
actief is.

03:54.830 --> 03:57.040
Dus als we hier een nieuw project aanmaken, kennen

03:57.040 --> 04:00.064
we de projectstatus toe. actief hier als een waarde

04:00.064 --> 04:02.990
voor de status met dat, moeten we projecteren

04:02.990 --> 04:05.230
die we toevoegen.

04:05.230 --> 04:06.720
En nu is er nog een plek waar we

04:06.720 --> 04:08.450
de project klasse nodig hebben.

04:08.450 --> 04:11.220
En dat is hier in de project List klasse, we hebben

04:11.220 --> 04:13.474
de Assign projects eigenschap.

04:13.474 --> 04:17.240
En natuurlijk moet dat altijd een reeks projecten zijn.

04:17.240 --> 04:19.530
Nu gebruiken we Beta typing.

04:19.530 --> 04:22.810
En een voordeel is dat we hier in renderprojecten

04:22.810 --> 04:26.360
nu bijvoorbeeld ook auto completion krijgen.

04:26.360 --> 04:29.020
En we zouden ook een fout krijgen, een compilatiefout

04:29.020 --> 04:31.300
als we dat proberen op te slaan, omdat

04:31.300 --> 04:33.100
TypeScript nu begrijpt met welke

04:33.100 --> 04:35.360
types we hier werken.

04:35.360 --> 04:39.040
Dus dat is het project Klasse en hoe we dat kunnen gebruiken.

04:39.040 --> 04:41.760
Project klasse is niet de enige klasse Echter,

04:41.760 --> 04:44.230
we hebben hier ook de Listener.

04:44.230 --> 04:48.630
En daarvoor voeg ik een nieuw aangepast type Listener toe.

04:48.630 --> 04:50.390
De naam is natuurlijk aan jou.

04:50.390 --> 04:54.280
En ik gebruik hier gewoon een type omdat ik eigenlijk

04:54.280 --> 04:58.260
een functietype wil coderen met één woord.

04:58.260 --> 04:59.640
Wat bedoelen we daarmee?

04:59.640 --> 05:03.270
Nou, natuurlijk, een luisteraar hier in onze applicatie

05:03.270 --> 05:05.370
is gewoon een functie, toch?

05:05.370 --> 05:07.160
Wat we hebben opgeslagen in de listeners

05:07.160 --> 05:08.960
array is gewoon een stel functies Add

05:08.960 --> 05:11.060
Listener pusht een nieuwe functie, en als

05:11.060 --> 05:12.200
er iets verandert, voeren

05:12.200 --> 05:14.190
we die functie uit.

05:14.190 --> 05:17.610
Dus hier is een luisteraar eigenlijk gewoon een functie.

05:17.610 --> 05:22.610
Maar het is een functie die onze items ontvangt, bepaalde

05:22.870 --> 05:23.703
items in ons

05:23.703 --> 05:27.113
geval en een reeks projecten.

05:28.500 --> 05:30.410
En dat doet er dan iets mee.

05:30.410 --> 05:32.480
Om hier precies te zijn, natuurlijk, om een functietype

05:32.480 --> 05:33.550
te definiëren, hebben we

05:33.550 --> 05:35.200
hier geen accolades, maar in plaats daarvan,

05:35.200 --> 05:37.440
zoals je geleerd hebt, het terugkeertype, en dat

05:37.440 --> 05:38.780
zal breed zijn, wat betekent dat

05:38.780 --> 05:41.880
we ons niets aantrekken van enige waarde die de Listener-functie zou

05:41.880 --> 05:44.090
kunnen teruggeven.

05:44.090 --> 05:46.140
Op de plaats waar we met luisteraars werken.

05:46.140 --> 05:47.940
We hebben geen terugkeer nodig.

05:47.940 --> 05:49.810
We willen er alleen voor zorgen

05:49.810 --> 05:51.880
dat wie zo'n listener doorgeeft,

05:51.880 --> 05:55.870
verwacht dat hij wat items krijgt als de listener afgaat.

05:55.870 --> 05:58.530
Daarmee kunnen we zeggen dat Listeners

05:58.530 --> 06:02.760
uiteindelijk een array van listener well functies is.

06:02.760 --> 06:05.670
En hier, als ik luisterfunctie duw, moet ik duidelijk

06:05.670 --> 06:08.480
maken dat het niet zomaar een functie is, maar

06:08.480 --> 06:10.630
dat het een type luisteraar is, dan

06:10.630 --> 06:12.350
werkt alles.

06:12.350 --> 06:14.530
Op de plaats waar we Listener toevoegen,

06:14.530 --> 06:16.180
dat is daar beneden, kunnen

06:16.180 --> 06:17.650
we nu natuurlijk ook ons

06:17.650 --> 06:19.869
typen verbeteren en duidelijk maken

06:19.869 --> 06:23.440
dat we hier eigenlijk een stel projecten krijgen.

06:23.440 --> 06:27.220
Dus daarmee hebben we onze luisteraar ingesteld,

06:27.220 --> 06:32.210
het projecttype toegevoegd, en dat verandert hier niets.

06:32.210 --> 06:35.120
Als we nu iets toevoegen dat werkt, en als ik een tweede

06:35.120 --> 06:36.900
item toevoeg, wordt dat nog steeds

06:36.900 --> 06:38.880
toegevoegd naast het eerste item

06:38.880 --> 06:40.530
dat ook weer wordt toegevoegd,

06:40.530 --> 06:43.230
en we doen helemaal geen filtering in een van

06:43.230 --> 06:45.260
de lijsten.

06:45.260 --> 06:48.600
Dus voordat we verder werken aan onze onderdelen, laten

06:48.600 --> 06:50.570
we ervoor zorgen dat we deze duplicatie

06:50.570 --> 06:53.990
hier niet hebben binnen een enkele lijst, en ook niet de duplicatie

06:53.990 --> 06:58.610
over beide dozen hier, maar dat in plaats daarvan alleen actieve projecten hier

06:58.610 --> 07:01.030
worden getoond en alleen voltooide projecten

07:01.030 --> 07:02.940
en dus in eerste instantie geen projecten

07:02.940 --> 07:08.010
hier verschijnen in voltooide projecten.

07:08.010 --> 07:09.623
Dus laten we dat oplossen.
