WEBVTT

00:02.130 --> 00:04.900
Giảng viên: Khóa học này được đóng gói với nội dung.

00:04.900 --> 00:06.940
Chúng ta gần như đã bắt đầu xong và

00:06.940 --> 00:09.500
sau đó chúng ta sẽ đi sâu vào TypeScript và

00:09.500 --> 00:11.667
tất cả các tính năng thú vị của nó cũng

00:11.667 --> 00:13.850
như tìm hiểu chúng từng bước một.

00:13.850 --> 00:16.210
Tất nhiên, chúng ta sẽ bắt đầu với những điều cơ bản về TypeScript.

00:16.210 --> 00:18.800
Các loại cốt lõi, cách thức hoạt động chung,

00:18.800 --> 00:20.880
một số tính năng mới mà nó bổ sung

00:20.880 --> 00:22.930
và tất cả những gì bạn cần biết để

00:22.930 --> 00:25.320
hiểu rõ về TypeScript.

00:25.320 --> 00:27.690
Sau đó, chúng ta sẽ tìm hiểu sâu hơn về trình

00:27.690 --> 00:29.590
biên dịch TypeScript và cấu hình

00:29.590 --> 00:32.310
của nó bởi vì điều cực kỳ quan trọng là bạn phải hiểu

00:32.310 --> 00:35.480
những gì bạn có thể định cấu hình ở đó và tất cả những cài

00:35.480 --> 00:37.450
đặt khác nhau này làm gì, vì vậy chúng

00:37.450 --> 00:39.120
ta sẽ xem xét kỹ hơn về điều đó trong

00:39.120 --> 00:40.840
mô-đun này.

00:40.840 --> 00:43.900
Sau đó, chúng ta sẽ khám phá các tính năng JavaScript thế hệ tiếp

00:43.900 --> 00:45.850
theo được hỗ trợ trong TypeScript.

00:45.850 --> 00:48.880
Cách chúng hoạt động và cách bạn có thể sử dụng chúng trong TypeScript.

00:48.880 --> 00:51.500
Chúng ta sẽ tiếp tục với các lớp và giao diện, một

00:51.500 --> 00:55.000
khái niệm cực kỳ quan trọng một phần cũng có trong vanilla JavaScript

00:55.000 --> 00:57.350
trong trường hợp của các lớp, nhưng với các

00:57.350 --> 00:59.510
giao diện, chúng ta cũng có một tính năng

00:59.510 --> 01:01.600
TypeScript hoàn toàn mới và bạn sẽ hiểu

01:01.600 --> 01:03.550
chúng là gì, chúng làm gì và tại sao chúng

01:03.550 --> 01:06.210
ta có thể muốn sử dụng chúng.

01:06.210 --> 01:08.190
Sau đó là thời gian để lặn sâu hơn.

01:08.190 --> 01:10.490
Chúng ta sẽ xem xét một số kiểu nâng cao và

01:10.490 --> 01:13.280
các tính năng nâng cao của TypeScript nói chung

01:13.280 --> 01:15.040
để đưa nó lên cấp độ tiếp theo ở đó

01:15.040 --> 01:16.640
và xây dựng dựa trên những điều

01:16.640 --> 01:20.110
cơ bản mà chúng ta đã tìm hiểu cho đến thời điểm này.

01:20.110 --> 01:22.630
Ngoài ra, một tính năng nâng cao,

01:22.630 --> 01:27.210
chắc chắn xứng đáng có phần riêng, là tính năng chung.

01:27.210 --> 01:28.910
Bạn sẽ tìm hiểu đó là gì và

01:28.910 --> 01:31.160
tại sao nó thực sự, thực sự hữu ích

01:31.160 --> 01:32.650
trong mô-đun này.

01:32.650 --> 01:34.570
Tiếp theo là trang trí.

01:34.570 --> 01:37.360
Trình trang trí là một tính năng khá thú vị cũng

01:37.360 --> 01:40.550
được TypeScript thêm vào và chúng ta sẽ xem xét kỹ hơn

01:40.550 --> 01:43.810
về trình trang trí và cũng xây dựng một số trình trang

01:43.810 --> 01:46.200
trí thực sự hữu ích trong mô-đun đó và sau

01:46.200 --> 01:50.100
đó chúng ta sẽ học được nhiều điều về TypeScript.

01:50.100 --> 01:52.660
Bây giờ, khóa học được tổ chức sao cho tôi

01:52.660 --> 01:56.460
trình bày tất cả các tính năng riêng lẻ này trong các bản trình

01:56.460 --> 01:59.040
diễn đơn giản tương đối nhỏ.

01:59.040 --> 02:01.730
Bây giờ để cung cấp cho bạn một bức tranh toàn cảnh

02:01.730 --> 02:04.640
hơn và để xem cách bạn sẽ áp dụng tất cả các tính năng

02:04.640 --> 02:08.140
này trong một dự án thực tế, chúng tôi sẽ xây dựng điều đó.

02:08.140 --> 02:10.400
Chúng tôi sẽ có toàn bộ mô-đun nơi chúng

02:10.400 --> 02:14.420
tôi xây dựng toàn bộ dự án hoàn toàn bằng TypeScript từ đầu để bạn thấy

02:14.420 --> 02:17.720
nhiều tính năng trong số này, hầu hết các tính năng mà bạn

02:17.720 --> 02:20.090
đã tìm hiểu cho đến thời điểm này, đang hoạt

02:20.090 --> 02:21.920
động và bạn sẽ thấy chúng hoạt động

02:21.920 --> 02:23.680
cùng nhau như thế nào và tại sao

02:23.680 --> 02:28.160
họ lại đơn giản hóa quá trình xây dựng một dự án như vậy.

02:28.160 --> 02:29.940
Sau khi xây dựng xong dự án này, chúng

02:29.940 --> 02:31.770
tôi sẽ xác định một vấn đề mới và chúng

02:31.770 --> 02:34.420
tôi sẽ tìm hiểu cách giải quyết vấn đề đó bằng cách làm

02:34.420 --> 02:36.450
việc với các không gian tên và mô-đun,

02:36.450 --> 02:38.100
điều này sẽ giúp chúng tôi làm cho

02:38.100 --> 02:40.570
mã của mình dễ quản lý và dễ đọc hơn.

02:40.570 --> 02:42.600
Dựa trên điều đó, chúng ta cũng sẽ khám

02:42.600 --> 02:44.350
phá Webpack với TypeScript.

02:44.350 --> 02:47.690
Webpack là một công cụ xây dựng mà chúng tôi sử dụng trong quá trình phát

02:47.690 --> 02:49.530
triển web giao diện người dùng hiện đại

02:49.530 --> 02:52.970
và bạn có thể sử dụng nó kết hợp với TypeScript để thiết lập một dự án tốt

02:52.970 --> 02:55.520
hơn, đơn giản là làm cho một số việc dễ dàng hơn và cho phép

02:55.520 --> 02:57.990
bạn tận dụng tối đa thế giới phiền phức.

02:57.990 --> 02:59.850
Một trải nghiệm phát triển tuyệt

02:59.850 --> 03:02.170
vời và mã cũng hoạt động thực sự tốt cho

03:02.170 --> 03:04.120
người dùng cuối của bạn.

03:04.120 --> 03:06.320
Sau khi hoàn thành, chúng ta có một bức tranh

03:06.320 --> 03:08.710
rất chắc chắn về TypeScript và cách làm việc

03:08.710 --> 03:10.180
với nó trong các dự án.

03:10.180 --> 03:13.250
Bây giờ, những gì bạn sẽ cần trong rất nhiều dự án thực

03:13.250 --> 03:15.183
tế là các thư viện của bên thứ ba,

03:15.183 --> 03:16.820
vì vậy chúng tôi sẽ xem xét

03:16.820 --> 03:20.250
kỹ hơn vì có một số thư viện của bên thứ ba thực sự chấp nhận

03:20.250 --> 03:22.280
TypeScript và đã tích hợp hỗ trợ TypeScript,

03:22.280 --> 03:24.630
nhưng cũng có nhiều thư viện không hỗ trợ

03:24.630 --> 03:26.600
TypeScript. 't và chúng ta sẽ xem

03:26.600 --> 03:29.030
cách chúng ta có thể làm việc với cả hai loại

03:29.030 --> 03:34.520
thư viện một cách hiệu quả trong các dự án TypeScript.

03:34.520 --> 03:36.630
Chà, sau đó có một số tình huống cụ

03:36.630 --> 03:39.620
thể xứng đáng với các mô-đun của riêng chúng.

03:39.620 --> 03:41.570
Chúng ta sẽ có toàn bộ mô-đun về

03:41.570 --> 03:44.320
React với TypeScript, cách bạn có thể xây

03:44.320 --> 03:47.540
dựng toàn bộ ứng dụng React chỉ với TypeScript,

03:47.540 --> 03:49.452
cũng như toàn bộ mô-đun về NodeJS

03:49.452 --> 03:53.260
và express end type script để bạn cũng có những ví dụ tuyệt

03:53.260 --> 03:55.390
vời cho cách sử dụng cụ thể và rất

03:55.390 --> 03:58.910
phổ biến này các trường hợp TypeScript mà bạn có thể

03:58.910 --> 04:01.270
đột nhiên tạo các ứng dụng React hoặc

04:01.270 --> 04:03.630
Node theo một cách hoàn toàn mới với

04:03.630 --> 04:06.760
một ngôn ngữ hoàn toàn mới.

04:06.760 --> 04:09.260
Rất nhiều nội dung thú vị trong khóa học.

04:09.260 --> 04:10.970
Chúng ta đừng lãng phí thời gian.

04:10.970 --> 04:12.720
Hãy xem cách bạn có thể tận dụng

04:12.720 --> 04:15.263
tối đa khóa học và sau đó hãy đi sâu vào.
