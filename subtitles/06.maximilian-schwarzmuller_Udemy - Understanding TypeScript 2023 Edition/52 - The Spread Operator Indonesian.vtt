WEBVTT

00:02.250 --> 00:04.530
Instruktur: Kita juga mendapatkan

00:04.530 --> 00:09.240
fitur-fitur berguna yang berhubungan dengan array dan objek dan bagaimana

00:09.240 --> 00:13.600
kita bisa mengambil data yang disimpan dalam array dan objek.

00:13.600 --> 00:17.180
Sekarang, untuk itu, mari kita tambahkan array baru di sini, katakanlah

00:17.180 --> 00:19.880
hobi dan itu bisa berupa array string.

00:22.520 --> 00:26.700
Seperti olahraga dan memasak di sini dan sekarang jelas

00:26.700 --> 00:31.700
kita dapat mengambil elemen berdasarkan indeks di sini, seperti

00:31.810 --> 00:33.030
ini misalnya.

00:33.030 --> 00:36.150
Tetapi, Anda harus mengetahui hal-hal dasar JavaScript ini.

00:36.150 --> 00:40.310
Next Gen JavaScript, memperkenalkan fitur yang bagus jika kita ingin

00:41.172 --> 00:43.910
mengekstrak semua nilai dari sebuah array.

00:43.910 --> 00:44.990
Kapan Anda membutuhkannya?

00:44.990 --> 00:48.670
Katakanlah Anda memiliki hobi yang aktif dan itu adalah

00:48.670 --> 00:53.670
susunan di mana saya memiliki hiking sebagai hobi, dan sekarang saya ingin menambahkan

00:54.200 --> 00:56.510
olahraga dan memasak.

00:56.510 --> 00:58.960
Sekarang kita dapat menambahkan item ke hobi aktif

00:58.960 --> 01:01.290
dengan memanggil push, ngomong-ngomong jika Anda

01:01.290 --> 01:05.620
bertanya-tanya bagaimana saya bisa mendorong ke konstanta, perlu diingat bahwa array adalah

01:05.620 --> 01:08.130
objek dan objek adalah nilai referensi.

01:08.130 --> 01:11.010
Ketika kita mendorong, kita mengubah memori tetapi bukan alamatnya.

01:11.010 --> 01:14.150
Jika ini tidak memberi tahu Anda apa pun, periksa sumber daya tambahan

01:14.150 --> 01:17.390
yang saya lampirkan pada kuliah ini mengenai topik itu, jadi kembali

01:17.390 --> 01:20.170
ke contoh ini, kita dapat mendorong di sini, tetapi dorong,

01:20.170 --> 01:24.120
jika kita mendorong hobi, kita akan menambahkan hobi sebagai larik baru dalam

01:24.120 --> 01:27.540
larik, jadi sebagai larik bersarang baru.

01:27.540 --> 01:30.920
Tipe mana yang sebenarnya akan mendeteksinya, ia memberitahu

01:30.920 --> 01:33.690
saya bahwa jika saya ingin menambahkan larik string

01:33.690 --> 01:36.143
ke larik string, itu tidak boleh.

01:37.110 --> 01:40.390
Jadi sebagai gantinya push mengambil nilai tunggal sehingga

01:40.390 --> 01:44.450
kita bisa melewatkan hobi nol, sebenarnya push bahkan mengambil jumlah

01:44.450 --> 01:47.450
argumen yang tidak terbatas sehingga kita dapat mendorong

01:47.450 --> 01:51.240
beberapa item sekaligus seperti itu.

01:51.240 --> 01:54.013
Tapi itu agak merepotkan dan di situlah Spread Operator

01:54.013 --> 01:54.890
masuk.

01:54.890 --> 01:57.700
Kelihatannya seperti ini, ini tiga titik dan ya ini terlihat

01:57.700 --> 02:00.850
aneh tapi ini adalah Operator JavaScript yang valid yang didukung

02:00.850 --> 02:04.770
oleh [Hypescript? ] dan setelah itu kita tentukan

02:04.770 --> 02:09.547
atau kita arahkan pada array atau objek seperti yang juga akan Anda pelajari,

02:09.547 --> 02:11.700
yang ingin kita sebarkan.

02:11.700 --> 02:15.160
Jadi apa yang dilakukannya adalah, ini memberi tahu JavaScript

02:15.160 --> 02:17.690
pada akhirnya karena itu adalah Operator Vanilla

02:17.690 --> 02:21.070
JavaScript yang tersedia di JavaScript Modern, jadi ini memberi

02:21.070 --> 02:25.500
tahu JavaScript untuk menarik semua elemen setelah larik dan pada dasarnya menambahkannya

02:25.500 --> 02:28.530
sebagai daftar nilai, jadi bukan sebagai larik tetapi daftar

02:28.530 --> 02:31.900
nilai individu di tempat Anda menggunakan Operator, jadi di sini

02:31.900 --> 02:33.950
misalnya adalah daftar argumen yang diteruskan

02:33.950 --> 02:36.090
ke push dan sekarang tempat di mana Anda dapat

02:36.090 --> 02:41.740
menggunakannya secara langsung saat Anda membuat larik baru.

02:41.740 --> 02:46.220
Di sana, Anda juga bisa menyebarkan larik yang sudah ada ke dalam larik itu.

02:46.220 --> 02:48.950
Jadi pada dasarnya setiap kali Anda membutuhkan daftar nilai yang

02:48.950 --> 02:51.460
dipisahkan koma, Anda dapat menggunakan Operator Spread

02:51.460 --> 02:54.360
dengan array untuk mendapatkan daftar yang dipisahkan koma.

02:54.360 --> 02:56.660
Itulah ide dari Spread Operator dan oleh karena

02:56.660 --> 02:59.230
itu sangat berguna untuk menarik elemen-elemen

02:59.230 --> 03:00.663
dari sebuah array.

03:01.860 --> 03:04.380
Operator Spread, semua itu tidak hanya

03:04.380 --> 03:07.880
ada pada array, tetapi juga ada pada objek.

03:07.880 --> 03:10.990
Katakanlah kita memiliki seseorang yang memiliki

03:10.990 --> 03:14.070
kunci nama, Max dan kunci h yaitu 30 dan sekarang kita

03:14.070 --> 03:16.640
ingin membuat orang yang disalin.

03:16.640 --> 03:19.060
Sekarang jika kita hanya menugaskan orang seperti

03:19.060 --> 03:22.680
ini, apa yang kita lakukan sebenarnya adalah kita menyalin pointer

03:22.680 --> 03:25.000
pada objek orang ini dalam memori ke dalam konstanta

03:25.000 --> 03:27.050
copy person ini.

03:27.050 --> 03:30.470
Dan sekali lagi, periksa sumber daya nilai referensi saya yang terlampir

03:30.470 --> 03:32.360
jika itu tidak memberi tahu Anda banyak.

03:32.360 --> 03:36.190
Jadi, kita tidak benar-benar membuat salinan objek itu.

03:36.190 --> 03:38.610
Sekarang untuk membuat salinan nyata, kita bisa

03:38.610 --> 03:40.880
menggunakan operator spread dengan objek.

03:40.880 --> 03:43.400
Kita buat objek baru dengan kurung kurawal

03:43.400 --> 03:46.510
dan kemudian kita gunakan Spread Operator, tiga titik

03:46.510 --> 03:49.630
dengan objek pertama yang ingin Anda salin.

03:49.630 --> 03:52.970
Sekarang apa yang dilakukannya adalah menarik semua elemen tetapi

03:52.970 --> 03:56.310
tentu saja di sini elemen-elemennya adalah pasangan nilai kunci,

03:56.310 --> 03:58.630
bukan nilai tunggal seperti larik.

03:58.630 --> 04:00.550
Di sini kita mendapatkan pasangan nilai kunci.

04:00.550 --> 04:04.110
Jadi pasangan nilai kunci ini ditarik keluar dari sana dan kemudian

04:04.110 --> 04:08.010
dapat digunakan di mana saja di mana Anda membutuhkan pasangan nilai

04:08.010 --> 04:11.310
kunci, yang biasanya tidak pernah menjadi objek yang mungkin

04:11.310 --> 04:12.920
Anda tambahkan.

04:12.920 --> 04:15.447
Jadi oleh karena itu, ke objek yang tadinya kosong

04:15.447 --> 04:19.100
ini, pasangan nilai kunci dari orang sekarang ditambahkan dan karena

04:19.100 --> 04:21.240
kita membuat objek baru di sini, dan hanya

04:21.240 --> 04:23.700
menambahkannya ke pasangan nilai kunci, kita

04:23.700 --> 04:27.310
mendapatkan salinan sempurna dari objek asli dan bukan hanya pointer

04:27.310 --> 04:30.803
yang menunjuk ke objek dalam memori.
