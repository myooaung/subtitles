WEBVTT

00:02.270 --> 00:05.210
教师：我们现在看到了一个更有用的装饰器｡ 

00:05.210 --> 00:11.030
我想用你应该知道的另一件重要的事情来结束这个关于装饰器的非常基本的介绍,

00:11.030 --> 00:17.760
你可以向一个类添加多个装饰器, 或者在你可以使用装饰器的任何地方添加｡

00:17.760 --> 00:18.940
所以, 让我们也在这里添加logger装饰器,

00:18.940 --> 00:23.040
例如, 像这样｡

00:23.040 --> 00:25.810
如果我们保存它, 您会看到它编译时没有错误,

00:25.810 --> 00:29.030
而且我们还在这里看到了日志消息｡

00:29.030 --> 00:31.490
这就留下了一个重要的问题,

00:31.490 --> 00:34.840
这些装饰器以什么顺序执行？

00:34.840 --> 00:38.880
为了找到答案, 我们将日志消息放入这两个文件中｡

00:38.880 --> 00:41.340
我们在Logger中确实有一个日志消息, 很明显,

00:41.340 --> 00:43.400
现在让我们转到decorator函数｡

00:43.400 --> 00:46.350
那么以WithTemplate的内部函数,

00:46.350 --> 00:49.900
以及Rendering Template为例来说｡

00:49.900 --> 00:56.820
现在让我们看看这些函数的执行顺序以及这些日志语句的打印顺序｡

00:56.820 --> 00:59.570
我们看到渲染模板首先运行,

00:59.570 --> 01:02.540
然后我们得到记录器输出｡

01:02.540 --> 01:04.070
这告诉我们的是,

01:04.070 --> 01:06.260
他们是自下而上执行的｡

01:06.260 --> 01:08.033
首先是最底层的装饰器,

01:08.033 --> 01:10.790
然后是它上面的装饰器｡

01:10.790 --> 01:14.230
首先运行WithTemplate, 然后执行Logger｡ 

01:14.230 --> 01:15.270
重要的是,

01:15.270 --> 01:18.920
我说的是实际的装饰器函数｡

01:18.920 --> 01:23.710
这里的装饰器工厂运行得更早｡ 

01:23.710 --> 01:26.790
如果我们在这里有Logger Factory,

01:26.790 --> 01:31.080
而在Template Factory中有相同的日志, 我在日志中说Template

01:31.080 --> 01:35.000
Factory, 您会看到, 实际上Logger Factory首先运行,

01:35.000 --> 01:39.930
然后是Template Factory｡

01:39.930 --> 01:41.750
这是有道理的, 因为最后, 尽管我们在这里有一个@符号,

01:41.750 --> 01:46.850
我在这里执行一个函数, 我们在这里做同样的事情｡

01:46.850 --> 01:49.930
当然, 这里应用常规JavaScript规则,

01:49.930 --> 01:53.610
并且此函数执行发生在此函数执行之前｡

01:53.610 --> 01:59.470
这就是为什么我们在看到模板工厂之前看到记录器工厂｡

01:59.470 --> 02:07.280
因此, 实际装饰器函数的创建是按照我们指定这些工厂函数的顺序进行的｡

02:07.280 --> 02:12.700
但是实际装饰器函数的执行是自下而上进行的｡

02:12.700 --> 02:19.000
这意味着最底层的装饰器首先执行, 因此这个装饰器函数,

02:19.000 --> 02:23.250
然后上面的装饰器执行｡

02:23.250 --> 02:25.163
只是有些事你必须知道｡ 

02:26.040 --> 02:29.620
这样, 我们就有了关于装饰器的坚实的基础知识,

02:29.620 --> 02:32.240
你也会看到一个更高级的装饰器,

02:32.240 --> 02:34.900
希望它也能给你一个第一印象, 为什么装饰器会很有用,

02:34.900 --> 02:41.970
特别是如果你也考虑像Angular这样的框架｡

02:41.970 --> 02:46.470
现在, 让我们看看除了类之外, 还有哪些地方可以添加装饰器,

02:46.470 --> 02:50.363
以及我们可以在那里做些什么｡
