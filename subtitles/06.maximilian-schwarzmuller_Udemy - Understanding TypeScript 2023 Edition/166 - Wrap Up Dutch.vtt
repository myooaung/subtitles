WEBVTT

00:02.150 --> 00:05.480
En dat is het al voor deze module.

00:05.480 --> 00:08.090
Nu zijn er natuurlijk tonnen bibliotheken

00:08.090 --> 00:10.130
van derden die je kunt gebruiken.

00:10.130 --> 00:12.680
Er is nog veel meer dat u kunt ontdekken op de

00:12.680 --> 00:15.806
pakketten Class Validator en Class Transformer.

00:15.806 --> 00:18.652
Maar het idee hier is niet zozeer om in alle mogelijkheden

00:18.652 --> 00:21.410
van deze pakketten te duiken.

00:21.410 --> 00:24.300
Dat laat ik liever aan jou over om te onderzoeken.

00:24.300 --> 00:27.983
Het idee is dat u een gevoel krijgt voor twee belangrijke

00:27.983 --> 00:31.575
dingen: Het eerste is dat u met TypeScript gewone JavaScript-pakketten

00:31.575 --> 00:36.719
zoals Lodash zonder problemen kunt gebruiken.

00:36.719 --> 00:39.350
Misschien krijg je aanvankelijk fouten,

00:39.350 --> 00:41.767
maar technisch gezien werkte het wel.

00:41.767 --> 00:45.244
Maar u kunt deze compilatiefouten ook omzeilen door de

00:45.244 --> 00:49.260
juiste types te importeren, de juiste vertaling van JavaScript

00:49.260 --> 00:51.500
naar TypeScript uiteindelijk.

00:51.500 --> 00:54.590
En dergelijke vertaalpakketten bestaan voor alle

00:54.590 --> 00:55.980
grote en populaire en zelfs

00:55.980 --> 00:59.180
veel kleine JavaScript-bibliotheken.

00:59.180 --> 01:02.221
U werkt misschien ook met JavaScript-bibliotheken

01:02.221 --> 01:04.470
waarin deze vertaalbestanden, deze

01:04.470 --> 01:07.110
DTS-bestanden al zijn ingebouwd.

01:07.110 --> 01:08.840
U hoeft daarna natuurlijk niet meer

01:08.840 --> 01:10.713
zulke vertalingen te installeren.

01:11.550 --> 01:14.350
Wel, en naast deze Vanilla-banen met bibliotheken

01:14.350 --> 01:17.094
die misschien vertalingen nodig hebben, heb

01:17.094 --> 01:20.610
je ook bibliotheken zoals Class Transformer die prima werken

01:20.610 --> 01:24.280
in Vanilla JavaScript, in modern Vanilla JavaScript althans,

01:24.280 --> 01:26.580
waar je ook klassen hebt, maar die al het

01:26.580 --> 01:31.400
werk doen, zonder extra vertalingen en TypeScript-projecten.

01:31.400 --> 01:34.960
En dan hebben we pakketten zoals Class Validator.

01:34.960 --> 01:38.440
Ze omarmen echt TypeScript-specifieke functies en geven

01:38.440 --> 01:42.370
u een geheel nieuwe manier van denken over uw project en het oplossen

01:42.370 --> 01:44.840
van bepaalde problemen.

01:44.840 --> 01:47.603
In dit geval hier, door decorators te gebruiken.

01:48.680 --> 01:51.080
Al deze dingen weten is super belangrijk en geeft

01:51.080 --> 01:53.440
je alle flexibiliteit die je nodig hebt voor

01:53.440 --> 01:55.253
je toekomstige projecten.
