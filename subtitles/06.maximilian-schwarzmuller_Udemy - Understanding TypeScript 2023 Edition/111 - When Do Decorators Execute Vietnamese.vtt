WEBVTT

00:02.440 --> 00:04.260
-: Trước khi chúng ta đi sâu vào các

00:04.260 --> 00:05.433
ví dụ khác, hãy hiểu thứ

00:05.433 --> 00:07.940
tự mà các trình trang trí chạy mặc dù.

00:07.940 --> 00:10.530
Và ở đây, điều quan trọng là phải hiểu rằng trước

00:10.530 --> 00:11.950
hết, tất cả chúng đều đang

00:11.950 --> 00:13.710
chạy mà không cần chúng tôi khởi

00:13.710 --> 00:15.396
tạo sản phẩm này.

00:15.396 --> 00:16.600
Hay nói cách khác,

00:16.600 --> 00:18.300
nếu tôi tạo một sản phẩm ở

00:18.300 --> 00:19.670
đây với sản phẩm mới,

00:19.670 --> 00:21.233
cuốn sách, với giá 19 đô

00:21.233 --> 00:23.730
la và tôi tạo một sản phẩm khác ở đây,

00:23.730 --> 00:24.563
cuốn sách thứ

00:24.563 --> 00:26.660
hai với giá 29 đô la.

00:26.660 --> 00:27.887
điều này tuân thủ mà không

00:27.887 --> 00:29.970
có lỗi mã trang trí của tôi ở đây không

00:29.970 --> 00:31.730
chạy thường xuyên hơn.

00:31.730 --> 00:35.350
Vì vậy, việc khởi tạo lớp này không phải là vấn đề quan trọng.

00:35.350 --> 00:36.680
Tất cả các trình trang trí

00:36.680 --> 00:38.452
này, bất kể đó là trình trang trí

00:38.452 --> 00:41.810
thuộc tính, trình trang trí phương thức, trình trang trí trình

00:41.810 --> 00:43.620
truy cập hay trình trang trí tham

00:43.620 --> 00:46.770
số, tất cả chúng đều được thực thi khi bạn xác định lớp này

00:46.770 --> 00:48.930
và điều quan trọng là phải hiểu.

00:48.930 --> 00:50.960
Đây không phải là các trình trang trí chạy trong

00:50.960 --> 00:53.190
thời gian chạy khi bạn gọi chúng là phương thức hoặc

00:53.190 --> 00:55.100
khi bạn làm việc với một thuộc tính.

00:55.100 --> 00:57.190
Đây không phải là những gì họ làm.

00:57.190 --> 00:59.360
Thay vào đó, các bộ trang trí này cho

00:59.360 --> 01:01.875
phép bạn thực hiện thêm công việc thiết lập

01:01.875 --> 01:04.397
hậu trường khi một lớp được xác định.

01:04.397 --> 01:06.590
Quay lại khái niệm siêu lập trình mà tôi

01:06.590 --> 01:08.070
đã giải thích trước đó.

01:08.070 --> 01:10.200
Đó là ý tưởng đằng sau những người trang trí

01:10.200 --> 01:12.410
hoặc đó là trường hợp sử dụng cốt lõi của họ.

01:12.410 --> 01:15.520
Chúng không phải là trình lắng nghe sự kiện mà bạn thêm vào thứ gì đó

01:15.520 --> 01:17.100
để khi bạn làm việc với một thuộc tính,

01:17.100 --> 01:18.490
bạn có thể chạy một số mã.

01:18.490 --> 01:19.740
Bạn thực sự có thể làm

01:19.740 --> 01:21.069
cho một cái gì đó tương

01:21.069 --> 01:23.740
tự hoạt động với các công cụ trang trí, nhưng

01:23.740 --> 01:24.977
bằng cách điều chỉnh

01:24.977 --> 01:26.756
và chỉnh sửa một số thứ đằng sau

01:26.756 --> 01:29.710
hậu trường, nhưng bản thân công cụ trang trí thực

01:29.710 --> 01:32.400
sự chỉ là một chức năng thực thi khi lớp của bạn

01:32.400 --> 01:33.233
được xác định,

01:33.233 --> 01:35.010
khi bạn (lầm bầm) và sau đó bạn

01:35.010 --> 01:37.460
có thể sử dụng công cụ trang trí để thực hiện

01:37.460 --> 01:39.890
một số công việc hậu trường, sau đó thiết

01:39.890 --> 01:42.250
lập một số mã sẽ chạy bất cứ khi nào mã này

01:42.250 --> 01:43.660
được gọi.

01:43.660 --> 01:47.310
Để thêm siêu dữ liệu bổ sung hoặc lưu trữ một số dữ liệu về một thuộc

01:47.310 --> 01:50.030
tính ở một nơi khác trong dự án của bạn hoặc trong

01:50.030 --> 01:51.696
thư viện mà bạn đang tạo.

01:51.696 --> 01:54.075
Đây là những gì bạn có thể sử dụng các công

01:54.075 --> 01:55.756
cụ trang trí và đó là tất cả các

01:55.756 --> 01:58.420
mẫu mà bạn sẽ thấy khi tôi cho bạn xem những ví

01:58.420 --> 02:00.320
dụ này về những gì bạn có thể xây dựng

02:00.320 --> 02:02.290
với các công cụ trang trí.

02:02.290 --> 02:04.740
Họ đang bổ sung chức năng bổ sung ở hậu trường

02:04.740 --> 02:06.200
mà đôi khi có thể thực thi

02:06.200 --> 02:08.060
khi bạn làm điều gì đó với lớp

02:08.060 --> 02:10.530
hoặc với phương thức của mình, nhưng cũng

02:10.530 --> 02:12.740
có thể thực hiện những việc hoàn toàn

02:12.740 --> 02:14.313
khác.

02:15.240 --> 02:17.860
Đó là tất cả những điều quan trọng đối với ví dụ

02:17.860 --> 02:21.320
người của chúng tôi từ trước đó với trình trang trí mẫu.

02:21.320 --> 02:22.980
Điều này không thêm mẫu này bất cứ

02:22.980 --> 02:25.160
khi nào chúng tôi khởi tạo một người ở đây.

02:25.160 --> 02:27.890
Nó sẽ thêm nó bất cứ khi nào chúng ta định nghĩa lớp này.

02:27.890 --> 02:29.820
Chúng tôi sẽ phải thêm logic bổ sung bên

02:29.820 --> 02:31.650
trong chức năng trang trí của mình

02:31.650 --> 02:33.140
để thay đổi hành vi này.

02:33.140 --> 02:35.980
Và để có thể chỉ cần lưu trữ mẫu này trong một số

02:35.980 --> 02:38.441
cấu trúc dữ liệu khác của dự án của chúng

02:38.441 --> 02:41.380
tôi mà sau đó chúng tôi sẽ nhập vào bất cứ khi nào

02:41.380 --> 02:43.650
chúng tôi tạo một người mới ở đây.

02:43.650 --> 02:45.278
Vì vậy, về cơ bản, chúng tôi chỉ thiết

02:45.278 --> 02:47.240
lập điều này khi chúng tôi xác định lớp, nhưng

02:47.240 --> 02:48.400
sau đó chúng tôi chỉ lưu trữ

02:48.400 --> 02:49.890
nó bên trong nội bộ và sau đó chúng

02:49.890 --> 02:51.170
tôi có thể sử dụng nó khi chúng

02:51.170 --> 02:52.350
tôi muốn sử dụng.

02:52.350 --> 02:54.160
Ngay bây giờ, chúng tôi luôn kết xuất điều

02:54.160 --> 02:55.380
này khi chúng tôi xác định lớp

02:55.380 --> 02:57.610
này, không phải khi bạn tạo một thể hiện mới.

02:57.610 --> 02:59.570
Đây là cách các decorator thực hiện

02:59.570 --> 03:00.403
và như tôi đã nói,

03:00.403 --> 03:01.940
bây giờ tôi sẽ chỉ cho bạn một

03:01.940 --> 03:04.504
vài ví dụ mà chúng ta tận dụng các decorator nói

03:04.504 --> 03:06.900
chung và thời gian thực hiện của chúng để làm

03:06.900 --> 03:08.883
một số điều hay ho với chúng.
