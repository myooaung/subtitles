WEBVTT

00:02.440 --> 00:05.240
الراوي: لقد رأينا كيف يمكننا بناء أشياء

00:05.240 --> 00:08.120
مدهشة تمامًا باستخدام المصممين ومصانع

00:08.120 --> 00:11.740
الديكور ومن ثم أيضًا من خلال الاستفادة من القيم المرتجعة

00:11.740 --> 00:12.790
لمصممي الديكور

00:12.790 --> 00:14.930
والتي في الأمثلة ، يتيح لنا مصمم

00:14.930 --> 00:18.740
الديكور استبدال الفصل الذي أضفنا إليه المصمم بفصل هو

00:18.740 --> 00:21.400
مختلف تمامًا ، فهو يعتمد على الفصل الحالي

00:21.400 --> 00:23.900
، كما هو الحال في حالتنا ، وبالتالي

00:23.900 --> 00:27.230
قد يضيف بعض الوظائف.

00:27.230 --> 00:30.490
يمكنك الآن إرجاع القيم في أدوات الديكور الأخرى أيضًا

00:30.490 --> 00:32.030
ولكن ليس في كل منهم.

00:32.030 --> 00:35.430
أو لا يتم احترام القيمة المعادة في كل منهم.

00:35.430 --> 00:38.150
الآن ، المصممون حيث يمكنك إرجاع شيء ما هم الزخارف

00:38.150 --> 00:41.330
التي يمكنك إضافتها إلى الأساليب والديكورات التي

00:41.330 --> 00:43.540
تضيفها إلى الملحقات.

00:43.540 --> 00:47.400
لذلك هنا في سجل الإعداد 2 والسجل 3 بالطريقة التي يستخدمها

00:47.400 --> 00:51.210
هذان المصممان ، السجل 2 والسجل 3 ، يمكن لهما أيضًا إرجاع

00:51.210 --> 00:54.080
شيء ما وسيستخدمه TypeScript.

00:54.080 --> 00:58.040
يمكن أيضًا لمصممي الخصائص والمعلمات بالطبع

00:58.040 --> 01:00.670
إرجاع شيء ما ولكن سيتجاهله

01:00.670 --> 01:02.500
TypeScript.

01:02.500 --> 01:05.030
لذلك لا يتم دعم قيم الإرجاع هناك

01:05.030 --> 01:07.700
أو لا يتم استخدامها لتكون دقيقة.

01:07.700 --> 01:09.690
الآن ماذا يمكنك العودة في السجل 3؟

01:09.690 --> 01:12.680
هكذا على طريقة الديكور وعلى السجل 2 ، وهكذا على

01:12.680 --> 01:15.320
الديكورات الملحقات بالرغم من ذلك.

01:15.320 --> 01:19.320
يمكنك إرجاع واصف خاصية علامة تجارية جديدة.

01:19.320 --> 01:22.050
Log 2 و log 3 ، ما هما المصممان اللذان أتحدث عنهما

01:22.050 --> 01:23.110
، أليس كذلك؟

01:23.110 --> 01:28.110
السجل 2 والسجل 3 ، كلاهما ينزع الوصف من الخاصية ، بعيدًا عن الطريقة ، يمكنك

01:28.170 --> 01:30.510
القول ، أنهما مرتبطان بهما.

01:30.510 --> 01:33.034
نظرًا لأن الموصّل يشبه طريقة

01:33.034 --> 01:36.220
ما ، فلديك وظيفة يتم تنفيذها هناك.

01:36.220 --> 01:39.072
الآن واصف الخاصية هو شيء جافا سكريبت ، كما تعلم

01:39.072 --> 01:41.980
، إذا ألقينا نظرة على هذه الصفحة مرة أخرى وقمنا

01:41.980 --> 01:44.500
بإعادة تحميلها ، نرى أنه ، على سبيل المثال

01:44.500 --> 01:47.260
بالنسبة لمصمم الملحقات لدينا ، فإن واصف الخاصية

01:47.260 --> 01:50.497
هو هذا الكائن الذي يحتوي على العنصر القابل للتكوين

01:50.497 --> 01:52.470
والعدد. والحصول على الخصائص

01:52.470 --> 01:54.910
وتعيينها.

01:54.910 --> 01:57.660
وبالنسبة لمصمم الطريقة ، فإن الواصف الخاص بنا هو هذا

01:57.660 --> 01:59.330
الكائن هنا الذي يحتوي أيضًا على

01:59.330 --> 02:02.290
عنصر قابل للتكوين ، وعددا ، وقيمة وقابل للكتابة.

02:02.290 --> 02:04.410
وهذه هي لغة جافا سكريبت الفانيليا.

02:04.410 --> 02:07.830
لديك واصفات الممتلكات في Vanilla JavaScript أيضًا.

02:07.830 --> 02:11.710
أنها تسمح لك بتحديد خاصية بمزيد من التفصيل.

02:11.710 --> 02:14.430
يمكنك بالطبع تعيين قيمة لخاصية ما ، وبما أننا

02:14.430 --> 02:15.990
نتحدث عن طريقة ، فإن القيمة

02:15.990 --> 02:17.940
هي دالة في هذه الحالة ولكن يمكنك

02:17.940 --> 02:20.010
أيضًا التحكم في ما إذا كانت قابلة للكتابة

02:20.010 --> 02:22.910
، لذلك إذا كان من الممكن تغييرها بعد إنشائها ، بعد

02:22.910 --> 02:24.700
تم إنشاء الكائن.

02:24.700 --> 02:25.950
ما إذا كان قابلاً للتكوين

02:25.950 --> 02:27.140
، لذا إذا كان بإمكانك تغيير

02:27.140 --> 02:29.570
تكوينه وإذا كان بإمكانك حذف هذه الخاصية.

02:29.570 --> 02:30.770
وإذا كان معدودًا ، فهذا

02:30.770 --> 02:33.166
يعني أنه يظهر عندما تقوم بالتكرار خلال الكائن

02:33.166 --> 02:35.410
الخاص بك على سبيل المثال.

02:35.410 --> 02:36.810
وبالتالي ، يتم تعيين

02:36.810 --> 02:38.790
طريقة على سبيل المثال افتراضيًا

02:38.790 --> 02:40.930
على خطأ بحيث لا تتم طباعة هذه الطريقة

02:40.930 --> 02:44.040
كخاصية إذا استخدمت حلقة for في كائن.

02:44.040 --> 02:45.240
بالنسبة إلى الموصِّل

02:45.240 --> 02:47.180
، حصلنا أيضًا على قابلية للتهيئة

02:47.180 --> 02:49.750
والعدد ، ولكننا حصلنا عليها وضبطناها وهناك

02:49.750 --> 02:53.040
يمكنك بالطبع أيضًا ، على سبيل المثال ، إرجاع واصف

02:53.040 --> 02:56.180
جديد يعين طريقة مجموعة جديدة تمامًا أو يضيف فجأة

02:56.180 --> 02:58.750
وظيفة الحصول عليها.

02:58.750 --> 03:01.585
لذلك هنا في السجل 2 والسجل 3 ، يمكنك إرجاع

03:01.585 --> 03:05.190
كائن واصف جديد في النهاية وتوضيح لـ TypeScript

03:05.190 --> 03:08.020
أنك ستقوم بذلك عن طريق العودة أو عن طريق

03:08.020 --> 03:10.560
تعيين نوع الإرجاع إلى واصف الخاصية

03:10.560 --> 03:14.860
، وهناك يمكنك أيضًا تعيين الكلمة الأساسية المحددة أو الحصول

03:14.860 --> 03:17.010
على الكلمة الأساسية أو الخاصية

03:17.010 --> 03:22.010
القابلة للتكوين أو القابلة للتعداد وتغيير كيفية تكوين هذا الموصل

03:22.500 --> 03:24.800
أو الطريقة.

03:24.800 --> 03:27.560
الآن لا أريد أن أفعل ذلك هنا للموصل

03:27.560 --> 03:29.800
، لا يوجد شيء مثير للاهتمام

03:29.800 --> 03:32.520
يمكنني فعله به ، لذلك لن أعيد واصف

03:32.520 --> 03:36.400
الخاصية ، لكنني سأعرض لك بالفعل مثالًا باستخدام

03:36.400 --> 03:40.080
مصمم الطريقة حيث سنعيد شيئًا ويمكننا بناء مثير

03:40.080 --> 03:42.533
بمساعدة المصممين.
