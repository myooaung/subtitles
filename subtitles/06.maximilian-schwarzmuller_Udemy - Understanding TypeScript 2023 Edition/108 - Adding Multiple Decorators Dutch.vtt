WEBVTT

00:02.270 --> 00:05.210
Instructeur: Dus we hebben nu een nuttigere decorateur gezien.

00:05.210 --> 00:08.750
Ik wil deze zeer eenvoudige inleiding tot decorator afsluiten

00:08.750 --> 00:11.030
met een ander belangrijk ding dat je moet

00:11.030 --> 00:14.600
weten: je kunt meer dan één decorator toevoegen aan een klasse,

00:14.600 --> 00:17.760
of ergens anders waar je een decorator kunt gebruiken.

00:17.760 --> 00:18.940
Dus laten we ook

00:18.940 --> 00:23.040
de logger decorator hier toevoegen, zoals dit.

00:23.040 --> 00:25.810
Als we dat opslaan, zie je dat het compileert zonder

00:25.810 --> 00:29.030
fouten, en inderdaad zien we hier ook het logbericht.

00:29.030 --> 00:31.490
Dan blijft er nog één belangrijke vraag over:

00:31.490 --> 00:34.840
in welke volgorde worden deze decoratoren uitgevoerd?

00:34.840 --> 00:36.550
Nou, om dat uit te zoeken, laten

00:36.550 --> 00:38.880
we logboekberichten in beide gooien.

00:38.880 --> 00:41.340
We hebben een logbericht in de Logger, uiteraard, laten

00:41.340 --> 00:43.400
we nu naar de decoratiefunctie gaan.

00:43.400 --> 00:46.350
Dus naar de binnenste functie van WithTemplate,

00:46.350 --> 00:49.900
en zeg bijvoorbeeld Rendering Template.

00:49.900 --> 00:50.733
En laten we nu eens

00:50.733 --> 00:53.830
kijken in welke volgorde deze functies worden uitgevoerd en in

00:53.830 --> 00:56.820
welke volgorde deze log statements worden afgedrukt.

00:56.820 --> 00:59.570
En we zien dat Rendering Template eerst draait,

00:59.570 --> 01:02.540
en dan krijgen we de Logger uitvoer.

01:02.540 --> 01:04.070
Wat dit ons natuurlijk vertelt,

01:04.070 --> 01:06.260
is dat ze bottom-up uitvoeren.

01:06.260 --> 01:08.033
De onderste decorateur eerst,

01:08.033 --> 01:10.790
daarna de decorateurs erboven.

01:10.790 --> 01:14.230
WithTemplate wordt eerst uitgevoerd, daarna Logger.

01:14.230 --> 01:15.270
En belangrijk,

01:15.270 --> 01:18.920
ik heb het over de eigenlijke decoratiefuncties.

01:18.920 --> 01:23.710
De decoratiefabrieken hier draaien eerder.

01:23.710 --> 01:26.790
Als we hier Logger Factory hebben, en we hebben

01:26.790 --> 01:31.080
dezelfde log in de Template Factory, dus daar zeg ik Template

01:31.080 --> 01:33.950
Factory in mijn log, zul je zien dat daar,

01:33.950 --> 01:35.000
eigenlijk de Logger

01:35.000 --> 01:37.490
Factory eerst draait, en dan hebben

01:37.490 --> 01:39.930
we de Template Factory.

01:39.930 --> 01:41.750
En dat is logisch want uiteindelijk,

01:41.750 --> 01:43.740
ook al hebben we dit @ symbool hier, voer

01:43.740 --> 01:45.600
ik hier een functie uit, en wij doen

01:45.600 --> 01:46.850
hier hetzelfde.

01:46.850 --> 01:49.930
En natuurlijk gelden hier de gewone JavaScript regels en

01:49.930 --> 01:51.380
gebeurt deze functie-uitvoering

01:51.380 --> 01:53.610
vóór deze functie-uitvoering.

01:53.610 --> 01:56.590
Daarom zien we de Logger Factory voordat

01:56.590 --> 01:59.470
we de Template Factory zien.

01:59.470 --> 02:02.650
De creatie van onze eigenlijke decoratorfuncties gebeurt

02:02.650 --> 02:03.970
dus in de volgorde waarin

02:03.970 --> 02:07.280
we deze fabrieksfuncties specificeren.

02:07.280 --> 02:10.780
Maar de uitvoering van de eigenlijke decoratiefuncties

02:10.780 --> 02:12.700
gebeurt dan bottom-up.

02:12.700 --> 02:17.300
Dat betekent dat de onderste decorator eerst wordt uitgevoerd,

02:17.300 --> 02:19.000
dus deze decoratorfunctie,

02:19.000 --> 02:23.250
en daarna de decorator daarboven.

02:23.250 --> 02:25.163
Het is gewoon iets wat je moet weten.

02:26.040 --> 02:29.620
Daarmee hebben we een solide basiskennis over decorators,

02:29.620 --> 02:32.240
en je ziet ook een meer geavanceerde decorator

02:32.240 --> 02:34.900
die je hopelijk ook een eerste indruk geeft

02:34.900 --> 02:37.810
van waarom decorators nuttig kunnen zijn, zeker

02:37.810 --> 02:41.970
als je ook denkt aan frameworks als Angular.

02:41.970 --> 02:46.470
Laten we nu eens kijken aan welke andere plaatsen, naast klassen, we decoratoren

02:46.470 --> 02:48.140
kunnen toevoegen en wat we daar

02:48.140 --> 02:50.363
zouden kunnen doen.
