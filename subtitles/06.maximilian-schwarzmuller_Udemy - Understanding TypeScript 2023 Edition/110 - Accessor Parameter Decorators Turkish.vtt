WEBVTT

00:02.210 --> 00:03.450
Erkek Eğitmen: Şimdi özelliklerin

00:03.450 --> 00:06.170
yanı sıra, erişimcilere dekoratörler de ekleyebilirsiniz

00:06.170 --> 00:09.200
ve orada yeni bir dekoratör işlevi oluşturacağım çünkü bu artık

00:09.200 --> 00:11.660
serbest argümanlar alacak.

00:11.660 --> 00:16.430
Log2, aynı zamanda bir örnek erişimciyle uğraşıyorsak yine prototip

00:16.430 --> 00:18.330
olan hedefi alacak ya da statik

00:18.330 --> 00:21.290
bir erişimciyle uğraşıyorsak, kurucu işlev

00:21.290 --> 00:23.360
olacaktır, bu nedenle herhangi

00:23.360 --> 00:24.960
bir türde olacağımızı

00:24.960 --> 00:27.290
bilmiyoruz.

00:27.290 --> 00:32.290
O zaman muhatap olduğumuz üyenin adını alacağız.

00:32.410 --> 00:35.030
Yani sondaki erişimcinin adı.

00:35.030 --> 00:38.683
Ayrıca burada özellik tanımlayıcımız olacak ve bu da özellik

00:39.580 --> 00:42.030
tanımlayıcısı türünde olacaktır.

00:42.030 --> 00:44.600
Bu, TypeScript'te yerleşik olarak bulunan türdür.

00:44.600 --> 00:49.600
Bu yüzden orada, erişimci dekoratörünü günlüğe kaydedelim ve sonra

00:50.030 --> 00:54.210
da hedefi burada konsol günlüğüne kaydedeceğim, sonra

00:54.210 --> 00:56.470
belki çıktıda daha okunabilir

00:56.470 --> 01:01.470
hale getirmek için yeni satırlar, isim ve ayrıca tanımlayıcı.

01:01.720 --> 01:05.890
Şimdi setter'a şu şekilde log2 ekleyelim ve ne elde ettiğimize

01:05.890 --> 01:07.350
bakalım.

01:07.350 --> 01:10.733
Bunu kaydedersek, aşağıda burada çalışan

01:10.733 --> 01:14.090
erişimci dekoratörünü görürsünüz.

01:14.090 --> 01:19.090
Prototipimizi tekrar aldık, aynı mülk için bir buff gibi.

01:19.320 --> 01:23.570
Ardından erişimcimizin adını aldık, bu durumda fiyat.

01:23.570 --> 01:24.900
Fiyatın altını çizmez, bu

01:24.900 --> 01:27.890
nedenle dahili olarak ilgilendiği özellik değildir.

01:27.890 --> 01:30.570
Bunun yerine gerçekten erişimcinin adı.

01:30.570 --> 01:33.630
Ve burada bir özellik tanımlayıcımız var, burada örneğin

01:33.630 --> 01:36.240
bir setter fonksiyonunun tanımlandığını, bir getter

01:36.240 --> 01:37.600
fonksiyonunun tanımlanmadığını

01:37.600 --> 01:41.990
görüyoruz, çünkü fiyat için sadece bir setter'ım var, getter yok.

01:41.990 --> 01:44.320
Ve bunun numaralandırılabilir olmadığını, ancak yapılandırılabilir

01:44.320 --> 01:45.680
olduğunu görüyoruz.

01:45.680 --> 01:47.810
Böylece buradaki tanımı değiştirebiliriz,

01:47.810 --> 01:51.000
örneğin silebiliriz vb.

01:51.000 --> 01:54.520
Tüm bunlar mevcuttur ve bir erişimciye nasıl dekoratör ekleyebileceğimizi

01:54.520 --> 01:56.650
ve bu dekoratörün içinde nelere erişebileceğimizi

01:56.650 --> 01:58.920
gösterir.

01:58.920 --> 02:00.910
Artık özellikler ve erişimcilerin yanı sıra

02:00.910 --> 02:04.350
yöntemlerimiz de var ve yöntemlere dekoratörler ekleyebiliyoruz.

02:04.350 --> 02:09.350
Bu yüzden buraya Log3 ekleyeceğim ve bunu metinle fiyat almak için aşağıdaki

02:09.430 --> 02:11.970
yöntemime ekleyeceğim.

02:11.970 --> 02:13.220
Ve şimdi soru elbette

02:13.220 --> 02:17.323
böyle bir yöntem dekoratörünün hangi argümanları alacağıdır?

02:18.180 --> 02:22.230
Bir yöntem dekoratörü aynı zamanda serbest argümanlar

02:22.230 --> 02:25.520
da alır, hedef yine bir örnek yöntemiyse

02:25.520 --> 02:28.420
nesnenin prototipidir.

02:28.420 --> 02:31.150
Statik bir yöntemse, daha önce olduğu

02:31.150 --> 02:34.993
gibi kurucu işlev, ardından burada yöntemin adı, yani

02:36.450 --> 02:39.380
aslında bir dize veya bir sembol.

02:39.380 --> 02:44.380
Ve ayrıca sondaki tanımlayıcı, özellik tanımlayıcısı.

02:44.490 --> 02:46.140
Bunlar burada elde ettiğimiz serbest argümanlardır

02:46.140 --> 02:48.110
ve bunların erişimcimizdeki argümanlarla aynı olduğunu

02:48.110 --> 02:49.410
görüyorsunuz.

02:49.410 --> 02:51.630
Aslında bunu da yeniden kullanabiliriz,

02:51.630 --> 02:54.340
ancak ben yeni bir tane oluşturacağım, böylece

02:54.340 --> 02:57.483
burada yöntem dekoratörünü yazdırabilirim.

02:59.020 --> 03:00.840
Şimdi bunu kaydedersem, bu çalışır

03:01.980 --> 03:04.410
ve burada yöntem dekoratörümüzün çalıştığını

03:04.410 --> 03:07.880
görürsünüz ve sonra burada prototipimizi alırız, daha önce olduğu

03:07.880 --> 03:09.380
gibi aynı nesne.

03:09.380 --> 03:11.310
Metodun adını buradan alıyoruz

03:11.310 --> 03:14.700
ve bu metodun tanımlayıcısını buradan alıyoruz.

03:14.700 --> 03:17.440
Yani temelde daha önce olduğu gibi aynı davranış, sadece

03:17.440 --> 03:19.400
bir tanımlayıcı, bir erişimci tanımlayıcı

03:19.400 --> 03:20.950
değil, bir yöntem tanımlayıcı olduğu

03:20.950 --> 03:22.550
için biraz farklıdır.

03:22.550 --> 03:25.720
Burada bir değerimiz ve yazılabilir bir özelliğimiz var.

03:25.720 --> 03:27.750
Daha önce erişimci tanımlayıcısında

03:27.750 --> 03:28.860
get ve set vardı.

03:28.860 --> 03:30.910
Ancak bu sadece bir java script farkıdır,

03:30.910 --> 03:33.088
TypeScript'e özgü bir şey değildir.

03:33.088 --> 03:38.088
Şimdi burada metoda eklediğimiz üçüncü dekoratör fonksiyonumuz

03:38.150 --> 03:40.070
var.

03:40.070 --> 03:43.390
Ekleyebileceğimiz son dekoratör bir parametredir.

03:43.390 --> 03:45.260
Bunu şimdi yapalım.

03:45.260 --> 03:47.550
Bunun için burada bir fonksiyon daha

03:47.550 --> 03:51.269
oluşturacağım, Log4 ve burada aldığım tek parametreye Log4

03:51.269 --> 03:53.660
eklemek istiyorum, vergi ve tabii ki aldığınız

03:53.660 --> 03:57.130
her parametreye bir tane ekleyebilirsiniz.

03:57.130 --> 03:59.560
Bunu yapmak zorunda değilsiniz ancak dekoratör eklemek istediğiniz

03:59.560 --> 04:02.990
herhangi bir parametreye bunları bağımsız olarak ekleyebilirsiniz.

04:02.990 --> 04:06.419
Şimdi bir parametre dekoratörü argüman olarak ne alır?

04:06.419 --> 04:10.790
Daha önce olduğu gibi hedefe ulaşıyor.

04:10.790 --> 04:12.520
Aldığımız bir sonraki argüman isimdir

04:12.520 --> 04:14.100
ve parametrenin ismi değil,

04:14.100 --> 04:17.310
bu parametreyi kullandığımız metodun ismidir.

04:17.310 --> 04:20.530
Yani temel olarak, şimdiye kadarki yöntem dekoratöründe olduğu gibi.

04:20.530 --> 04:22.170
Ancak son argüman farklıdır.

04:22.170 --> 04:24.250
Bu artık özellik tanımlayıcısı

04:24.250 --> 04:28.380
değildir, bunun yerine bu argümanın konumudur, yani argümanın

04:28.380 --> 04:30.100
numarasıdır.

04:30.100 --> 04:32.763
Örneğin burada, bu ilk argüman olacaktır.

04:35.310 --> 04:38.670
Şimdi tekrar buraya kopyalayalım ve tüm

04:38.670 --> 04:43.550
bunları Log4 parametre dekoratörüne yerleştirelim.

04:43.550 --> 04:45.410
İçeride ne olduğunu görebilmek için buradan

04:45.410 --> 04:47.170
da çıkış pozisyonu alalım.

04:47.170 --> 04:50.960
Şimdi kaydettiysek, parametre dekoratörümüzü orada görüyoruz, en

04:50.960 --> 04:53.480
son çıktı değil çünkü yürütme sırası farklı ama

04:53.480 --> 04:55.630
parametre dekoratörümüzü burada ve sonra

04:55.630 --> 04:57.180
burada görüyoruz.

04:57.180 --> 04:59.530
Daha önce olduğu gibi prototipi aldık.

04:59.530 --> 05:00.860
Bu parametreyi kullandığımız

05:00.860 --> 05:02.190
yöntemin adını ve ardından

05:02.190 --> 05:04.770
bu argümanın indeksini aldık ve bu sıfırdan

05:04.770 --> 05:06.240
başlar, yani ilk argümanın

05:06.240 --> 05:12.740
burada sıfır sayısı, sıfır indeksi vardır ve bu bizim parametre dekoratörümüzdür.

05:12.740 --> 05:14.920
İşte tüm bunlar dekoratörler ve TypeScript ekleyebileceğimiz

05:14.920 --> 05:16.370
ve bunlarla çeşitli şeyler yapabileceğimiz

05:16.370 --> 05:18.570
yerlerdir.

05:18.570 --> 05:20.450
Şimdi size bu modülde birkaç

05:20.450 --> 05:21.660
örnek göstereceğim

05:21.660 --> 05:24.813
ve ayrıca dekoratörleri yoğun olarak kullanan

05:24.813 --> 05:28.380
kütüphaneleri veya çerçeveleri de göstereceğim.

05:28.380 --> 05:30.550
Ve size dekoratörlerin sahip olabileceği güç

05:30.550 --> 05:34.583
hakkında bir fikir vermek için dekoratörlerle neler yaptıklarını göstereceğim.
