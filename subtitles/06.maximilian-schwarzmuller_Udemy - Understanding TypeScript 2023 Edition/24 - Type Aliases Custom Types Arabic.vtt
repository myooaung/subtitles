WEBVTT

00:02.340 --> 00:05.860
-: الآن عند العمل مع أنواع الاتحاد ، مثل

00:05.860 --> 00:06.970
هذا وذاك ، قد

00:06.970 --> 00:11.070
يكون من المرهق تكرار نوع الاتحاد دائمًا.

00:11.070 --> 00:13.070
قد ترغب في تداول نوع جديد يعيد

00:13.070 --> 00:15.330
تثبيت هذا النوع من النقابات.

00:15.330 --> 00:18.540
ويمكنك القيام بذلك باستخدام ميزة أخرى من الأنواع الرائعة

00:18.540 --> 00:21.410
، وهي ميزة الأسماء المستعارة للنوع.

00:21.410 --> 00:22.723
تقوم بإنشاء مثل هذا الاسم

00:24.280 --> 00:25.670
المستعار ، عادةً قبل استخدامه

00:25.670 --> 00:29.240
، لذلك هنا في الجزء العلوي من الملف في هذه الحالة هنا ، باستخدام الكلمة

00:29.240 --> 00:31.240
الأساسية من النوع.

00:31.240 --> 00:34.040
الآن لم يتم تضمين الكلمة الأساسية من النوع في JavaScript

00:34.040 --> 00:35.880
، فهي مدعومة في TypeScript على الرغم

00:35.880 --> 00:40.450
من ذلك ، وبعد الكتابة تضيف اسم النوع المخصص الخاص بك ، أو الاسم المستعار من النوع

00:40.450 --> 00:42.860
الخاص بك ، يجب أن أقول.

00:42.860 --> 00:44.980
على سبيل المثال قابل للجمع.

00:44.980 --> 00:46.720
لكن الاسم متروك لك حقًا.

00:46.720 --> 00:48.380
يمكنك هنا اختراع أي اسم

00:48.380 --> 00:50.520
غير مضمن في JavaScript أو TypeScript

00:50.520 --> 00:52.530
كاسم مفتاح.

00:52.530 --> 00:54.360
لذلك لن يُسمح بشيء مثل التاريخ لأن

00:54.360 --> 00:56.250
ذلك مضمن في JavaScript ، لكن الدمج

00:56.250 --> 00:58.900
ليس مضمنًا في JavaScript ، وليس مضمنًا في TypeScript

00:58.900 --> 01:01.170
حتى نتمكن من استخدامه.

01:01.170 --> 01:04.550
والآن بعلامة التساوي تقوم بتعيين النوع الذي تريد

01:04.550 --> 01:08.320
ترميزه في الاسم المستعار الخاص بك ، على سبيل المثال.

01:08.320 --> 01:10.300
لذلك يمكننا تخزين رقم هنا ، والآن

01:10.300 --> 01:12.790
كلما أردنا التأكد من أن الشيء يجب أن يكون

01:12.790 --> 01:14.390
رقمًا ، يمكننا استخدام قابل

01:14.390 --> 01:16.400
للدمج بدلاً من ذلك.

01:16.400 --> 01:18.570
الآن ، هذا ليس له معنى كبير ، يمكن القول

01:18.570 --> 01:21.630
إنه سيجعل قراءة الكود الخاص بنا أكثر صعوبة.

01:21.630 --> 01:25.500
إذا استخدمت الدمج هناك على سبيل المثال ، فسيعمل هذا

01:25.500 --> 01:27.420
تقنيًا ولكن إذا ألقينا نظرة

01:27.420 --> 01:29.550
سريعة على الكود الخاص بنا ، فليس

01:29.550 --> 01:33.180
من الواضح أننا هنا نريد رقمًا أو سلسلة.

01:33.180 --> 01:35.560
حسنًا ، عادةً ما تستخدم ذلك جنبًا

01:35.560 --> 01:37.500
إلى جنب مع أنواع الاتحاد.

01:37.500 --> 01:40.380
لذلك يمكننا تخزين نوع الاتحاد في النوع المخصص لدينا

01:40.380 --> 01:42.250
، على سبيل المثال ، في الاسم المستعار

01:42.250 --> 01:45.240
من النوع الخاص بنا ، والآن نشير فقط إلى قابل للدمج هناك

01:45.240 --> 01:48.170
بدلاً من نوع الاتحاد الخاص بنا.

01:48.170 --> 01:51.060
لذلك ، لدينا نفس الإعداد تمامًا كما كان من قبل ، لدينا فقط

01:51.060 --> 01:54.230
اسم مستعار من النوع القابل لإعادة الاستخدام هنا والذي يمكننا

01:54.230 --> 01:55.580
استخدامه بدلاً من ذلك.

01:55.580 --> 01:57.660
وهذا يسمح لنا بحفظ بعض التعليمات البرمجية

01:57.660 --> 01:59.200
الإضافية والتأكد من أننا

01:59.200 --> 02:04.200
نشير دائمًا إلى نفس الأنواع أو نفس إعداد النوع عندما نستخدم قابلة للدمج.

02:04.234 --> 02:06.600
وبالطبع لا يمكننا استخدام ذلك فقط للرقم

02:06.600 --> 02:08.970
والسلسلة ، يمكننا استخدام ذلك لأي إعداد

02:08.970 --> 02:11.140
من النوع قد نرغب في تخزينه في اسم مستعار

02:11.140 --> 02:14.810
، بما في ذلك هذين النوعين الحرفيين ، على سبيل المثال.

02:14.810 --> 02:18.210
لذلك ، بالنسبة لهذين النوعين هنا ، بالنسبة لهذا النوع

02:18.210 --> 02:20.660
الاتحادي ، يمكننا أيضًا تداول الاسم المستعار

02:20.660 --> 02:24.030
للنوع ، ConversionDescriptor ، أو كيفما تريد تسميته

02:24.030 --> 02:28.920
، وتخزين هذا النوع بالضبط في هذا النوع من الاسم المستعار.

02:28.920 --> 02:32.270
والآن يمكننا استخدام هذا النوع من الاسم المستعار هناك.

02:32.270 --> 02:34.970
لذا فإن كتابة الأسماء المستعارة مفيدة حقًا.

02:34.970 --> 02:37.490
يمكنك ترميز تعريفات الأنواع الأكثر تعقيدًا في الأنواع

02:37.490 --> 02:40.860
الخاصة بك ، إلى أسماء الأنواع الخاصة بك ، على سبيل المثال ، وإعادة استخدامها

02:40.860 --> 02:43.120
في كل مكان في التعليمات البرمجية الخاصة بك حيث

02:43.120 --> 02:45.920
تحتاج بالضبط هذا النوع من الإعداد.

02:45.920 --> 02:48.060
حتى تتجنب الأخطاء الإملائية الموجودة هناك

02:48.060 --> 02:51.000
ويمكنك ببساطة حفظ الكود وكتابة التعليمات البرمجية بشكل

02:51.000 --> 02:53.490
أسرع وتكون دائمًا أكثر وضوحًا بشأن نواياك ، على

02:53.490 --> 02:56.010
سبيل المثال عن طريق اختيار الأسماء المستعارة من

02:56.010 --> 02:57.653
النوع الوصفي هناك.
