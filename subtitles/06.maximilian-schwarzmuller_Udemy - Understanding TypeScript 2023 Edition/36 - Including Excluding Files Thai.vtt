WEBVTT

00:02.200 --> 00:03.840
ผู้สอน: นี่คือวิธีที่เราสามารถจัดการไฟล์หลายไฟล์ด้วย

00:03.840 --> 00:06.290
TypeScript

00:06.290 --> 00:11.500
ตอนนี้ หนึ่งคำเกี่ยวกับการมีหลายไฟล์ เมื่อคุณทำงานกับไฟล์หลายไฟล์ในขณะที่เรากำลังทำอยู่นี้

00:11.500 --> 00:15.280
คุณยังสามารถนำเข้าไฟล์เหล่านั้นเข้าด้วยกันด้วยโมดูล ซึ่งคุณอาจทราบจากวานิลลา

00:15.280 --> 00:20.770
JavaScript ที่นั่นเรามีโมดูลเช่นกัน เป็นสิ่งที่ฉันจะพูดถึงในส่วนเฉพาะของหลักสูตรนี้ ดังนั้นสำหรับตอนนี้

00:20.770 --> 00:31.040
เรามีไฟล์เพียงสองไฟล์ที่ไม่ได้นำเข้ามารวมกัน แต่จะนำเข้าในดัชนีแทน

00:31.040 --> 00:31.040
html.

00:31.040 --> 00:35.930
ตอนนี้เรารู้ว่าเราสามารถจัดการสิ่งนี้เป็นโครงการและเราสามารถรวบรวมไฟล์หลาย

00:35.930 --> 00:39.060
ๆ ไฟล์ได้ที่นี่

00:39.060 --> 00:41.910
ทีนี้มาดูที่ tsconfig กัน json เนื่องจากเป็นไฟล์สำคัญสำหรับการจัดการโปรเจกต์นี้

00:41.910 --> 00:51.290
โดยพื้นฐานแล้วจะบอก TypeScript ว่าควรคอมไพล์ไฟล์เหล่านี้อย่างไร

00:51.290 --> 00:55.260
ตอนนี้ ก่อนที่เราจะดำดิ่งลงไปในตัวเลือกของคอมไพเลอร์

00:55.260 --> 00:56.470
ซึ่งตามชื่อที่เราแนะนำ

00:56.470 --> 00:59.620
เราสามารถกำหนดค่าการทำงานของคอมไพเลอร์ได้

00:59.620 --> 01:02.220
เรามาเลื่อนลงไปที่ตำแหน่งก่อนวงเล็บปีกกาปิด

01:02.220 --> 01:03.760
แต่หลังจากวงเล็บปีกกาปิดที่ซ้อนกันนี้

01:03.760 --> 01:23.410
และเรามาดูตัวเลือกบางอย่างที่เรา สามารถเพิ่มที่นี่ซึ่งไม่ส่งผลกระทบต่อคอมไพเลอร์หรือลักษณะการทำงานของขั้นตอนการคอมไพล์ แต่แทนที่การทำงานของคอมไพเลอร์กับโครงการนี้ เนื่องจากตัวอย่างเช่น คุณสามารถตั้งค่าตัวเลือกการยกเว้นได้

01:23.700 --> 01:26.770
ตอนนี้ ถ้าคุณเพิ่มการยกเว้นที่นี่ นั่นจะเป็นอาร์เรย์

01:26.770 --> 01:33.480
และสิ่งที่คุณป้อนได้ที่นี่คือพาธไปยังไฟล์ที่ไม่ควรรวมในการคอมไพล์เมื่อคุณเรียกใช้

01:33.480 --> 01:36.400
TSC กับโปรเจ็กต์ทั้งหมด

01:36.400 --> 01:41.137
ตัวอย่างเช่น ที่นี่ เราอาจบอกว่าเราต้องการยกเว้นการวิเคราะห์

01:41.137 --> 01:41.137
ts

01:41.137 --> 01:45.300
จากการคอมไพล์ และแน่นอนว่ามันไม่สมเหตุสมผลเลยที่นี่ แต่เพียงเพื่อแสดงให้เห็นว่ามันทำงานอย่างไร

01:45.300 --> 01:51.600
ถ้าเราทำเช่นนั้น และตอนนี้เรารัน tsc อีกครั้ง และก่อนอื่นฉันจะลบการวิเคราะห์

01:51.600 --> 01:51.600
js

01:51.600 --> 01:53.730
เพื่อให้เราดูว่าสร้างใหม่หรือไม่ หากตอนนี้เรารัน

01:53.730 --> 01:59.810
tsc หรือ tsc ในโหมดเฝ้าดู คุณจะไม่เห็นการวิเคราะห์

01:59.810 --> 01:59.810
ไฟล์

01:59.810 --> 02:02.060
js ถูกสร้างขึ้น และเหตุผลคือเราไม่รวมไฟล์นั้น

02:02.060 --> 02:03.340
แน่นอนว่าสำหรับไฟล์นี้

02:03.340 --> 02:04.670
มันไม่มีเหตุผลมากนักเพราะโดยปกติแล้วฉันต้องการรวมไฟล์นี้

02:04.670 --> 02:12.440
แต่ถ้าคุณมีไฟล์ที่ไม่ควรคอมไพล์ด้วยเหตุผลบางประการ คุณสามารถแยกมันออกด้วยวิธีนี้

02:12.440 --> 02:14.210
คุณยังสามารถทำงานกับไวด์การ์ดได้ด้วย

02:14.210 --> 02:15.810
ตัวอย่างเช่น ถ้าคุณมีไฟล์ที่ชื่อว่า

02:15.810 --> 02:20.810
analytics ผู้พัฒนา ts และคุณไม่ต้องการคอมไพล์มัน

02:20.850 --> 02:22.900
คุณสามารถพูดได้ว่าไฟล์ทั้งหมดที่จบ

02:22.900 --> 02:29.620
dev ts ไม่ควรคอมไพล์ และคุณสามารถทำได้โดยการเพิ่มเครื่องหมายดอกจันที่นี่

02:29.620 --> 02:33.750
ซึ่งเป็นไวด์การ์ดโดยทั่วไป และตอนนี้ TypeScript จะละเว้นไฟล์ใดๆ ที่มี

02:33.750 --> 02:36.470
. ผู้พัฒนา รวมอยู่ด้วย

02:36.470 --> 02:40.037
คุณยังสามารถเพิ่มเครื่องหมายดอกจัน เครื่องหมายดอกจัน

02:40.037 --> 02:43.080
เครื่องหมายทับ ซึ่งหมายความว่าไฟล์ที่มีรูปแบบนั้นในโฟลเดอร์ใดๆ

02:43.080 --> 02:45.770
จะถูกละเว้น

02:45.770 --> 02:47.420
นี่คือสิ่งที่คุณตั้งค่าได้ที่นี่

02:47.420 --> 02:49.220
สิ่งเดียวที่ผมต้องการตั้งค่าที่นี่

02:49.220 --> 02:51.500
และนั่นคือการตั้งค่าที่คุณมักจะพบ คือผมต้องการยกเว้น

02:51.500 --> 02:54.103
node_modules และแนวคิดในที่นี้คือ ผมไม่ต้องการ

02:55.409 --> 02:58.260
เพื่อรวบรวมไฟล์ TypeScript ที่ฉันอาจมีอยู่ภายใน

02:58.260 --> 03:01.373
node_modules

03:02.449 --> 03:09.570
ตอนนี้ node_modules เป็นโฟลเดอร์ที่เก็บการอ้างอิงทั้งหมดที่เราติดตั้งที่นี่ในแพ็คเกจ

03:09.570 --> 03:09.570
json

03:09.570 --> 03:11.890
และการขึ้นต่อกันของการขึ้นต่อกันเหล่านี้

03:11.890 --> 03:14.660
ดังนั้น สิ่งเหล่านี้คือไลบรารีของบุคคลที่สามที่เรากำลังนำเข้า

03:14.660 --> 03:29.200
ซึ่งเราไม่ต้องการแตะต้อง และถ้าไลบรารีเหล่านี้ควรส่งโค้ด TypeScript บางตัว เราก็ไม่ต้องการอย่างแน่นอน คอมไพล์มัน มันจะทำให้กระบวนการคอมไพล์ของเราช้าลง และในกรณีที่แย่ที่สุด มันอาจทำให้โปรเจคของเราพังได้

03:29.200 --> 03:30.370
ดังนั้นจึงเป็นเรื่องปกติที่จะยกเว้น

03:30.370 --> 03:36.510
node_modules ที่นี่ แม้ว่าฉันจะบอกว่า หากคุณไม่ระบุตัวเลือกการยกเว้นเลย node_modules จะถูกแยกออกจากการตั้งค่าเริ่มต้นโดยอัตโนมัติ

03:36.510 --> 03:55.670
ดังนั้นคุณไม่จำเป็นต้องเพิ่มตัวเลือกนี้ที่นี่ นี่จะเป็นค่าเริ่มต้น ฉันแค่ต้องการแสดงว่ามีการยกเว้นอยู่และคุณจะใช้มันได้อย่างไรหากสิ่งเดียวที่คุณต้องการยกเว้นคือ node_modules คุณไม่จำเป็นต้องเพิ่มคีย์การยกเว้นเลย

03:55.670 --> 03:58.500
หากคุณเพิ่ม คุณควรตั้งค่า node_modules

03:58.500 --> 04:01.400
เพราะไม่เช่นนั้นจะไม่รวมสิ่งนั้น

04:01.400 --> 04:04.570
นอกจากการยกเว้นแล้ว เรายังมีคำสั่ง include และ include

04:04.570 --> 04:06.630
ให้คุณทำสิ่งที่ตรงกันข้าม ซึ่งช่วยให้คุณบอก

04:06.630 --> 04:16.380
TypeScript ได้เฉพาะเจาะจงว่าไฟล์ใดที่คุณต้องการรวมไว้ในขั้นตอนการคอมไพล์ และอะไรก็ตามที่ไม่ได้อยู่ในรายการที่นี่จะไม่คอมไพล์ ดังนั้นหากผมชี้ไปที่

04:16.380 --> 04:20.620
แอป. ts ที่นี่ คุณจะเห็นว่าถ้าฉันเรียกใช้ tsc อีกครั้ง

04:20.620 --> 04:25.570
เราจะไม่ได้รับการวิเคราะห์ด้วย ts หรือไม่มีการวิเคราะห์

04:25.570 --> 04:25.570
js ฉันควรจะพูด

04:25.570 --> 04:26.403
ทำไม

04:26.403 --> 04:29.230
เพราะการวิเคราะห์ js ไม่รวมอยู่ในการรวม

04:29.230 --> 04:35.810
และอย่างที่ฉันพูด ถ้าเราตั้งค่าคีย์การรวม เราจะต้องรวมทุกอย่างที่เราต้องการคอมไพล์จริงๆ

04:35.810 --> 04:40.080
แน่นอนว่าที่นี่ เราสามารถเพิ่มการวิเคราะห์ได้ ts ที่นี่ และด้วยการเพิ่มนั้น เราจะเริ่มต้นและรวบรวมมัน

04:40.080 --> 04:46.740
อย่างที่คุณเห็นตอนนี้ เรามีการวิเคราะห์

04:46.740 --> 04:46.740
js

04:46.740 --> 04:49.650
หรืออีกทางเลือกหนึ่ง เราระบุทั้งโฟลเดอร์ที่นี่

04:49.650 --> 04:52.560
ซึ่งโดยทั่วไปจะเก็บไฟล์ที่เราต้องการคอมไพล์

04:52.560 --> 04:55.520
อย่างไรก็ตาม หากตั้งค่าพร้อมกับการรวมจะเป็นการกรองการรวม

04:55.520 --> 05:04.980
ดังนั้นหากเราแยกโฟลเดอร์ย่อยบางโฟลเดอร์ของโฟลเดอร์ที่เป็นส่วนหนึ่งของการรวม โฟลเดอร์ย่อยที่แยกนั้นจะถูกแยกออก ดังนั้นโดยพื้นฐานแล้ว

05:04.980 --> 05:08.720
เราจะรวบรวมรวมรวมลบไม่รวม

05:08.720 --> 05:10.420
แน่นอนว่าตอนนี้ ฉันไม่ต้องการตั้งค่าการรวม

05:10.420 --> 05:12.520
ฉันต้องการคอมไพล์ไฟล์ TypeScript ทั้งหมด

05:12.520 --> 05:15.050
ดังนั้นฉันจึงไม่ต้องกังวลเรื่องนั้น การยกเว้น node_modules

05:15.050 --> 05:17.200
คือทั้งหมดที่ฉันต้องการ และตามที่ฉันอธิบาย

05:17.200 --> 05:22.423
ในทางทฤษฎีฉันไม่ ไม่จำเป็นต้องเพิ่มด้วยซ้ำเพราะจะถูกยกเว้นโดยค่าเริ่มต้น

05:23.260 --> 05:27.560
ตอนนี้คุณยังมีตัวเลือกไฟล์ ซึ่งช่วยให้คุณสามารถชี้ไปที่แต่ละไฟล์ได้

05:27.560 --> 05:36.020
ดังนั้นมันจึงเหมือนกับการรวม แต่ต่างกันตรงที่คุณไม่สามารถระบุโฟลเดอร์ทั้งหมดที่คุณต้องการรวมได้ แทนที่จะระบุไฟล์แต่ละไฟล์จริงๆ

05:36.020 --> 05:40.710
คุณต้องการคอมไพล์ นั่นอาจเป็นตัวเลือกสำหรับโปรเจกต์ขนาดเล็กที่คุณรู้ว่าคุณจะทำงานกับไฟล์ฟรีเท่านั้น

05:40.710 --> 05:51.340
และด้วยเหตุผลบางอย่าง คุณจึงมีไฟล์ TypeScript อื่นสองสามไฟล์ซึ่งคุณไม่ต้องการแตะต้อง จากนั้นคุณสามารถตั้งค่า รายการไฟล์แบบนี้

05:51.340 --> 05:55.740
ในความเป็นจริง คุณอาจไม่จำเป็นต้องตั้งค่านั้นบ่อยนัก

05:55.740 --> 06:00.910
ดังนั้นจึงมีตัวเลือกการรวบรวมพื้นฐานหรือการจัดการโครงการที่นี่

06:00.910 --> 06:10.793
แน่นอนว่ายังมีวิธีที่เราสามารถระบุได้มากขึ้น วิธีที่เราสามารถระบุได้มากขึ้นเกี่ยวกับตัวคอมไพเลอร์และวิธีการทำงานของคอมไพเลอร์ในระหว่างขั้นตอนการคอมไพล์
