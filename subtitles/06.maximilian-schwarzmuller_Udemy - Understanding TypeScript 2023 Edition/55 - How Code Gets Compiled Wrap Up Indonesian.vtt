WEBVTT

00:02.200 --> 00:03.970
Instruktur: Sekarang, inilah saatnya untuk modul ini.

00:03.970 --> 00:06.080
Jelas JavaScript modern memiliki beberapa

00:06.080 --> 00:07.790
fitur rapi lainnya juga.

00:07.790 --> 00:09.810
Sebagai contoh, saya akan membahas kelas-kelas

00:09.810 --> 00:11.120
dalam modul kelas dan secara

00:11.120 --> 00:13.470
umum ini bukan kursus JavaScript.

00:13.470 --> 00:16.540
Saya tidak ingin membuat Anda bosan dengan banyak pengetahuan

00:16.540 --> 00:19.030
JavaScript yang tidak benar-benar berhubungan dengan

00:19.030 --> 00:20.140
TypeScript.

00:20.140 --> 00:22.700
Saya ingin menyebutkan fitur-fitur spesifik ini karena

00:22.700 --> 00:24.650
bagus untuk mengetahui bahwa TypeScript

00:24.650 --> 00:28.210
membantu kita menggunakan fitur-fitur ini dengan cara yang masih berjalan

00:28.210 --> 00:29.580
di browser lama.

00:29.580 --> 00:32.920
Karena itu adalah sesuatu yang tidak boleh Anda lupakan.

00:32.920 --> 00:35.600
Kode Anda akan dikompilasi.

00:35.600 --> 00:38.690
Saat ini, saya harus menargetkan ke ES6 dan oleh

00:38.690 --> 00:41.540
karena itu jika kita memeriksa folder dist kita

00:41.540 --> 00:44.280
melihat konstanta pada semua tersedia di file

00:44.280 --> 00:46.030
JS aplikasi juga.

00:46.030 --> 00:48.070
Object de structuring, ada cara

00:48.070 --> 00:50.600
untuk seperti ini di sana karena semua

00:50.600 --> 00:52.480
fitur ini didukung di ES6.

00:52.480 --> 00:55.230
Jika saya akan mengatur target ke ES5 dan saya mengomentari

00:55.230 --> 00:56.590
lib sekarang, sehingga lib

00:56.590 --> 00:58.680
yang benar diimpor untuk target ES5 yang

00:58.680 --> 01:00.930
akan terjadi secara default, Anda akan melihat

01:00.930 --> 01:03.680
bahwa kode yang dihasilkan sekarang terlihat sangat

01:03.680 --> 01:05.290
berbeda.

01:05.290 --> 01:08.140
Ini jauh lebih lama karena sekarang kita menggunakan

01:08.140 --> 01:09.810
var dan TypeScript harus menemukan

01:09.810 --> 01:12.960
cara kerja untuk sintaks tertentu yang tidak didukung dalam

01:12.960 --> 01:14.730
ES5 JavaScript.

01:14.730 --> 01:18.240
Misalnya, sintaksis penataan de telah dihapus.

01:18.240 --> 01:21.140
Jadi, itu adalah hal yang penting untuk selalu diingat.

01:21.140 --> 01:23.490
TypeScript mengkompilasi kode Anda,

01:23.490 --> 01:26.440
tidak hanya dari fitur TypeScript saja ke JavaScript

01:26.440 --> 01:29.210
biasa, tetapi semuanya dari JavaScript modern

01:29.210 --> 01:33.000
ke JavaScript lama jika Anda memberi tahu TypeScript untuk

01:33.000 --> 01:35.433
melakukannya.
