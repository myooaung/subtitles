WEBVTT

1
00:00:02.290 --> 00:00:03.280
<v Instructor>So let's get started</v>

2
00:00:03.280 --> 00:00:06.110
with our Node typescript application.

3
00:00:06.110 --> 00:00:08.750
Now, you might think that we need a complex setup

4
00:00:08.750 --> 00:00:11.170
with webpack and so on now,

5
00:00:11.170 --> 00:00:12.410
but we actually don't.

6
00:00:12.410 --> 00:00:16.270
We'll just use the tsc command to compile our files.

7
00:00:16.270 --> 00:00:18.160
And then, we can use the node command

8
00:00:18.160 --> 00:00:19.890
to execute our compiled files.

9
00:00:19.890 --> 00:00:21.700
That's all we need here.

10
00:00:21.700 --> 00:00:25.960
Still, I will setup a project here with npm init

11
00:00:25.960 --> 00:00:28.810
simply so that we get a package.json file

12
00:00:28.810 --> 00:00:32.250
because since we'll create a normal Node application here,

13
00:00:32.250 --> 00:00:36.240
we'll install some third party packages like Express.js.

14
00:00:36.240 --> 00:00:38.470
And I also wanna install one extra tool

15
00:00:38.470 --> 00:00:40.950
that simplifies our development process.

16
00:00:40.950 --> 00:00:44.630
So run npm init here in any empty folder of your choice.

17
00:00:44.630 --> 00:00:48.190
You can confirm all the default settings here if you want,

18
00:00:48.190 --> 00:00:50.540
and there after, you'll have a package.json file

19
00:00:50.540 --> 00:00:52.750
which should look something like this.

20
00:00:52.750 --> 00:00:56.210
Now, also run tsc --init in here

21
00:00:56.210 --> 00:00:59.390
to also initialize this project as a typescript project

22
00:00:59.390 --> 00:01:01.860
so that you get this tsconfig.json file

23
00:01:01.860 --> 00:01:04.313
which you now can find into your requirements.

24
00:01:05.770 --> 00:01:09.020
And there, I already got the first adjustment I wanna make.

25
00:01:09.020 --> 00:01:13.300
The target here can easily be set to es2018

26
00:01:13.300 --> 00:01:16.090
for example depending on the node version you're using

27
00:01:16.090 --> 00:01:17.750
but if you're using the latest one,

28
00:01:17.750 --> 00:01:19.630
this modern JavaScript syntax should

29
00:01:19.630 --> 00:01:21.380
definitely be supported.

30
00:01:21.380 --> 00:01:24.220
Module can stay at commonjs,

31
00:01:24.220 --> 00:01:27.460
but then, I also want to add moduleResolution here

32
00:01:27.460 --> 00:01:29.010
and set this to node.

33
00:01:29.010 --> 00:01:33.350
This simply tells typescript how your different files

34
00:01:33.350 --> 00:01:35.483
and imports will work together.

35
00:01:36.410 --> 00:01:37.640
And we need to set this to node

36
00:01:37.640 --> 00:01:40.020
to make sure that everything works correctly.

37
00:01:40.020 --> 00:01:42.470
I will also set my outDir here,

38
00:01:42.470 --> 00:01:44.790
comment this in and set it to dist,

39
00:01:44.790 --> 00:01:46.990
and my rootDir to src

40
00:01:46.990 --> 00:01:49.600
because I wanna separate my typescript source code.

41
00:01:49.600 --> 00:01:50.700
And then the output

42
00:01:50.700 --> 00:01:53.170
which will be the actual JavaScript files

43
00:01:53.170 --> 00:01:55.733
we can execute with help of node.

44
00:01:56.820 --> 00:01:58.850
Other than that, I'm fine with strict mode,

45
00:01:58.850 --> 00:02:00.710
but of course, you can fine-tune this all

46
00:02:00.710 --> 00:02:03.030
to your personal needs and likings.

47
00:02:03.030 --> 00:02:06.320
You learned all about that throughout this course after all.

48
00:02:06.320 --> 00:02:08.830
And with that, we can save this configuration.

49
00:02:08.830 --> 00:02:11.070
You'll also find this very basic starting setup

50
00:02:11.070 --> 00:02:12.460
attached by the way.

51
00:02:12.460 --> 00:02:14.120
You can save this configuration.

52
00:02:14.120 --> 00:02:16.170
And I'll also create a src folder

53
00:02:16.170 --> 00:02:18.130
where we will write our source code,

54
00:02:18.130 --> 00:02:20.230
our typescript source code.

55
00:02:20.230 --> 00:02:23.020
And that's the part where I now wanna dive in.

56
00:02:23.020 --> 00:02:26.370
We'll build our application with typescript

57
00:02:26.370 --> 00:02:27.960
in the src folder now.

58
00:02:27.960 --> 00:02:30.200
And since we'll build a simple web server

59
00:02:30.200 --> 00:02:32.920
and we also wanna use Express.js there,

60
00:02:32.920 --> 00:02:36.120
I will, first of all, install some dependencies here.

61
00:02:36.120 --> 00:02:38.440
With npm install --save,

62
00:02:38.440 --> 00:02:41.040
I wanna install express here

63
00:02:41.040 --> 00:02:44.100
which is the Express framework for Node.js

64
00:02:44.100 --> 00:02:45.680
which you, of course, don't always need

65
00:02:45.680 --> 00:02:48.440
but here, I wanna build a Node Express application.

66
00:02:48.440 --> 00:02:51.500
And it will install the body-parser package

67
00:02:51.500 --> 00:02:54.403
which helps us parse incoming request bodies.

68
00:02:55.290 --> 00:02:58.180
For now, that's it regarding my production dependencies.

69
00:02:58.180 --> 00:03:00.110
We might add more later.

70
00:03:00.110 --> 00:03:01.523
So let's hit enter here.

71
00:03:02.960 --> 00:03:04.120
And with that installed,

72
00:03:04.120 --> 00:03:07.540
let's have a look at the development dependencies.

73
00:03:07.540 --> 00:03:11.450
I will install those with npm install --save-dev,

74
00:03:11.450 --> 00:03:13.330
and there, I want to install modemon,

75
00:03:13.330 --> 00:03:16.340
a tool which allows us to execute a file with Node,

76
00:03:16.340 --> 00:03:18.210
but which then watches the file

77
00:03:18.210 --> 00:03:19.820
and the folder the file is in,

78
00:03:19.820 --> 00:03:22.690
as well as all subfolders for changes.

79
00:03:22.690 --> 00:03:24.050
Whenever a file changes,

80
00:03:24.050 --> 00:03:26.030
it will restart the Node server.

81
00:03:26.030 --> 00:03:27.620
This will simply speed up development

82
00:03:27.620 --> 00:03:29.510
because it will automatically restart

83
00:03:29.510 --> 00:03:31.490
our Node application server

84
00:03:31.490 --> 00:03:33.500
every time we change the source code.

85
00:03:33.500 --> 00:03:36.180
We need to restart the server when the code changes

86
00:03:36.180 --> 00:03:39.430
because otherwise, our server still runs on the old code,

87
00:03:39.430 --> 00:03:41.340
but manually restarting is annoying

88
00:03:41.340 --> 00:03:44.190
so we can't speed this up with nodemon.

89
00:03:44.190 --> 00:03:47.323
And for the moment, that's actually it.

90
00:03:49.290 --> 00:03:50.340
So let's hit enter here

91
00:03:50.340 --> 00:03:52.360
and install this development dependency.

92
00:03:52.360 --> 00:03:54.760
It will not be the last one we need in this course,

93
00:03:54.760 --> 00:03:56.660
but for the moment, we're fine.

94
00:03:56.660 --> 00:03:58.830
So let's wait for this to finish.

95
00:03:58.830 --> 00:04:00.130
So installation did finish,

96
00:04:00.130 --> 00:04:01.450
and now let's start writing

97
00:04:01.450 --> 00:04:04.773
and creating a very basic Node Express application.

