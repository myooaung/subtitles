WEBVTT

00:02.200 --> 00:04.920
Konuşmacı: İşte Typescript ile sınıflar,

00:04.920 --> 00:07.510
özellikler ve kalıtım.

00:07.510 --> 00:08.343
Bahsettiğim

00:08.343 --> 00:10.260
gibi, bu özellikler genel

00:10.260 --> 00:12.490
olarak Javascript'te desteklense

00:12.490 --> 00:14.230
de, modern JavaScript'te,

00:14.230 --> 00:16.940
elbette tür atamaları ve ayrıca protected

00:16.940 --> 00:21.060
private public hariç.

00:21.060 --> 00:24.770
Bu anahtar kelimeler gerçekten sadece Typescript'te mevcuttur.

00:24.770 --> 00:28.560
Sınıflarla yapabilecekleriniz bu kadarla sınırlı değil.

00:28.560 --> 00:29.940
İhtiyaç duyduğunuzda,

00:29.940 --> 00:32.840
vanilla JavaScript'te de sahip olduğunuz

00:32.840 --> 00:35.670
ve Typescript'te de desteklenen özellik

00:35.670 --> 00:38.610
getter ve setter'lardır.

00:38.610 --> 00:43.390
Şimdi burada, örneğin muhasebe departmanında,

00:43.390 --> 00:47.450
diyelim ki son bir raporumuz var, mülk.

00:47.450 --> 00:51.630
Bu da özel bir özelliktir ve string türündedir, yani

00:51.630 --> 00:53.310
elimizde bu var.

00:53.310 --> 00:56.480
Ve sonra burada bunu, burada aldığımız

00:56.480 --> 01:01.480
raporlar özellik emirleri argümanımız olacak şekilde başlatıyoruz

01:02.270 --> 01:04.880
ve bunlar ilk değerdir.

01:04.880 --> 01:07.877
Tabii ki boş bir rapor dizisi geçersek

01:07.877 --> 01:09.890
bu tanımsız olur.

01:09.890 --> 01:14.680
Şimdi bir rapor eklediğimizde, bu son raporu metne eşit olarak

01:14.680 --> 01:17.010
ayarlamak istiyorum.

01:17.010 --> 01:20.440
Rapor dizimize eklediğimiz şey de budur.

01:20.440 --> 01:23.890
Şimdi son rapor özeldir, bu nedenle ona bu yöntemin

01:23.890 --> 01:26.250
içinden erişebiliriz, ancak nokta

01:26.250 --> 01:30.240
gösterimi ile dışarıdan erişemeyiz.

01:30.240 --> 01:33.440
Şimdi hala erişilebilir kılmak için bir getter ekleyebiliriz.

01:33.440 --> 01:36.020
Getter temel olarak, bir değeri aldığınızda

01:36.020 --> 01:38.670
bir işlevi veya yöntemi çalıştırdığınız ve

01:38.670 --> 01:40.910
bir geliştirici olarak daha karmaşık

01:40.910 --> 01:42.380
mantık eklemenize olanak

01:42.380 --> 01:44.460
tanıyan bir özelliktir.

01:44.460 --> 01:47.560
Burada, get anahtar sözcüğünü ve ardından istediğiniz herhangi bir adı kullanarak

01:47.560 --> 01:49.250
bir getter oluşturursunuz.

01:49.250 --> 01:51.810
Genellikle erişimi kontrol etmeye çalıştığınız

01:51.810 --> 01:54.180
mülkle yakından ilgilidir.

01:54.180 --> 01:58.180
Örneğin burada en son rapor olarak adlandırabiliriz.

01:58.180 --> 01:59.340
Bunun gibi bir şey.

01:59.340 --> 02:01.630
Şimdi önemli olan bunun bir yöntem gibi tanımlanmasıdır.

02:01.630 --> 02:04.260
Yani parantez ve ardından küme parantezleri eklersiniz.

02:04.260 --> 02:07.250
Ve şimdi burada, bir şey döndürmeniz gerekiyor,

02:07.250 --> 02:11.990
bu önemli bir getter metodu, bir şey döndürmek zorunda.

02:11.990 --> 02:14.610
Böylece bu son raporu geri gönderebilirsiniz

02:14.610 --> 02:16.660
ve sonra bunu bir nevi kapsülleriz,

02:16.660 --> 02:19.570
çünkü bu artık kamuya açıktır.

02:19.570 --> 02:22.720
Ancak genellikle burada daha karmaşık bir mantığa sahip olmak istersiniz.

02:22.720 --> 02:26.240
Yani burada bir değerimiz olup olmadığını kontrol edebiliriz,

02:26.240 --> 02:27.600
yani bu doğruysa.

02:27.600 --> 02:28.960
Tanımsız değilse,

02:28.960 --> 02:31.520
son raporu döndürmek istiyoruz, aksi

02:31.520 --> 02:34.440
takdirde farklı bir mantık döndürmek isteyebiliriz,

02:34.440 --> 02:37.850
örneğin aksi takdirde yeni hata at, rapor bulunamadı

02:37.850 --> 02:42.650
şeklinde bir hata mesajı atıyoruz diyelim.

02:42.650 --> 02:46.650
Şimdi bu özelliğe daha fazla mantık, daha karmaşık mantık ekledik

02:46.650 --> 02:49.200
ve onu almak istediğimizde, bu özelliği nokta

02:49.200 --> 02:51.500
gösterimi aracılığıyla doğrudan alamayız,

02:51.500 --> 02:57.240
ancak bunu bu mantığı çalıştırmak için bir özellik olarak kullanabiliriz.

02:57.240 --> 02:58.810
Peki bu nasıl olacak?

02:58.810 --> 03:02.170
Aşağıda, muhasebe departmanımı oluşturduğum yerde.

03:02.170 --> 03:08.693
Raporumu eklemeden önce, Konsol günlüğünü denediysem, muhasebe.

03:08.693 --> 03:08.693
en

03:09.630 --> 03:11.010
son rapor, ve şimdi önemli.

03:11.010 --> 03:13.902
Oops, muhasebe. en son rapor.

03:13.902 --> 03:16.890
Ve şimdi buna bir mülk olarak erişmeniz önemlidir.

03:16.890 --> 03:18.690
Yani burada parantez yok.

03:18.690 --> 03:20.570
Bunu bir yöntem olarak uygulayamazsınız.

03:20.570 --> 03:23.030
Buna normal bir özellik gibi erişirsiniz

03:23.030 --> 03:24.460
ve perde arkasında

03:24.460 --> 03:27.890
bu yöntem orada çalıştırılır.

03:27.890 --> 03:31.670
Şimdi bunu raporumuzu eklemeden önce denersem, bunun hatasız olarak

03:31.670 --> 03:33.940
yeniden oluşturulduğunu, hatasız olarak

03:33.940 --> 03:35.440
yeniden derlendiğini göreceğiz,

03:35.440 --> 03:38.550
ancak elbette burada bir hata atılıyor, bu bizim özel

03:38.550 --> 03:40.820
rapor bulunamadı hatamız, çünkü henüz

03:40.820 --> 03:42.820
bir rapor eklenmedi ve bunu bir getter

03:42.820 --> 03:45.370
olarak kullandığımızdan, bu yönteme erişiyor

03:45.370 --> 03:48.310
ve onu çalıştırıyor.

03:48.310 --> 03:51.560
Rapor yoksa, bu EĞER kontrolüne veya bu EĞER ifadesine

03:51.560 --> 03:52.830
ulaşamayız ve bu nedenle

03:52.830 --> 03:55.693
buradaki bu satır devreye girer.

03:56.590 --> 04:00.250
Alternatif olarak, bir rapor ekledikten sonra bunu aşağı

04:00.250 --> 04:02.210
taşırsak, elbette bunu kaydedebiliriz

04:02.210 --> 04:04.100
ve artık bir hata almayız, bunun

04:04.100 --> 04:05.730
yerine bu son raporun çıktısını

04:05.730 --> 04:08.400
alırız.

04:08.400 --> 04:09.750
Yani bu bir alıcı.

04:09.750 --> 04:12.190
Ayrıca bir ayarlayıcı da ekleyebilirsiniz.

04:12.190 --> 04:14.550
Bir ayarlayıcı neredeyse aynı şekilde eklenir.

04:14.550 --> 04:16.290
Set anahtar kelimesini ve ardından yine

04:16.290 --> 04:18.630
istediğiniz herhangi bir ismi kullanırsınız.

04:18.630 --> 04:21.940
tipik olarak ayarlanması gereken özellikle ilgili

04:21.940 --> 04:22.870
bir ad.

04:22.870 --> 04:25.570
Bu yüzden burada en son raporu tekrar kullanacağım.

04:25.570 --> 04:27.840
Böylece bunu hem bir değeri okumak hem de bir değeri ayarlamak

04:27.840 --> 04:29.150
için kullanabiliriz.

04:29.150 --> 04:30.090
Ve sonra tekrar, bunu

04:30.090 --> 04:31.850
bir yöntem gibi tanımladınız.

04:31.850 --> 04:34.850
Ama şimdi, bunun bir tartışmaya dönüşmesi gerekiyor.

04:34.850 --> 04:38.630
Kullanıcının girmiş olacağı değer.

04:38.630 --> 04:40.940
Burada bir dize değeri olmalıdır ve şimdi

04:40.940 --> 04:44.110
burada bunu saklamak için istediğiniz herhangi bir mantığı

04:44.110 --> 04:46.160
çalıştırabilirsiniz.

04:46.160 --> 04:48.530
Şimdi burada en son rapor için bir değer

04:48.530 --> 04:51.890
girdiğimizden, sonunda rapor eklemeyi çalıştırmak

04:51.890 --> 04:53.080
istiyorum.

04:53.080 --> 04:55.370
Yani burada bir setter basitçe rapor ekleme yöntemine

04:55.370 --> 04:57.140
bir alternatif olabilir.

04:57.140 --> 05:01.280
Böylece buradan bu rapor eklemeye erişebiliriz.

05:01.280 --> 05:03.760
Sınıfın içinde olduğumuz için bu gereklidir.

05:03.760 --> 05:07.280
Burada sınıfa ve ardından bu sınıf yöntemine atıfta bulunuyoruz.

05:07.280 --> 05:10.380
Ve şimdi değeri buraya iletebiliriz.

05:10.380 --> 05:12.310
Şimdi daha karmaşık bir mantık ekleyebilir

05:12.310 --> 05:16.130
ve değerin yanlış olması durumunda tanımlanmamış olup olmadığını

05:16.130 --> 05:19.810
kontrol edebilir ve ardından lütfen geçerli bir değer iletin

05:19.810 --> 05:24.020
dediğimiz yeni bir hata döndürür veya atarız.

05:24.020 --> 05:26.140
Bu bizim de yapabileceğimiz bir şey.

05:26.140 --> 05:29.010
Ve şimdi burada da bir setter kullanıyoruz.

05:29.010 --> 05:31.330
Bunu ekledikten sonra test edebiliriz.

05:31.330 --> 05:36.570
Aşağıya, en son raporu ekleyebilirim.

05:36.570 --> 05:38.780
Buna muhasebeden erişebilirdim ve tıpkı

05:38.780 --> 05:40.770
bunun gibi ondan okurduk, ancak şimdi

05:40.770 --> 05:42.300
bir eşittir işareti ekleyerek,

05:42.300 --> 05:44.520
buna bir değer ayarlamaya çalışıyoruz ve

05:44.520 --> 05:47.150
bu da bu setter yöntemini tetikleyecek.

05:47.150 --> 05:50.090
Yine daha önce olduğu gibi bunu bir yöntem olarak çalıştırmıyoruz,

05:50.090 --> 05:52.383
sadece bir özellik gibi erişiyoruz.

05:53.220 --> 05:56.030
Şimdi burada boş bir dize girersem, teknik

05:56.030 --> 05:58.770
olarak bir dize girmiş oluruz, ancak boş bir

05:58.770 --> 06:02.760
dize yanlış olarak değerlendirilecektir, buraya bakın.

06:02.760 --> 06:04.950
Bu nedenle, şimdi bir hata almalıyız.

06:04.950 --> 06:07.450
Dolayısıyla, bu kod satırını kaydedersem,

06:07.450 --> 06:09.850
kodu bu kod satırı eklenmiş olarak kaydedersem,

06:11.120 --> 06:14.530
lütfen geçerli bir değer girin hatasını alırız.

06:14.530 --> 06:17.010
Yine de geçerli bir değer girersem,

06:17.010 --> 06:23.900
örneğin buraya yıl sonu raporu dersem ve şimdi bunu kaydedersem.

06:23.900 --> 06:27.210
Şimdi tüm bunların çalıştığını ve yıl sonu raporunun rapor listemizin

06:27.210 --> 06:29.620
bir parçası olduğunu göreceksiniz.

06:29.620 --> 06:31.150
Yani bunlar, mantığı kapsüllemek

06:31.150 --> 06:33.620
ve bir özelliği okumaya çalıştığınızda veya bir özelliği

06:33.620 --> 06:35.390
ayarlamaya çalıştığınızda çalışması

06:35.390 --> 06:38.050
gereken ekstra mantık eklemek için harika olabilen getter

06:38.050 --> 06:40.243
ve setter'lardır.
