WEBVTT

00:02.180 --> 00:05.590
Istruttore: Torniamo alle interfacce per gli oggetti.

00:05.590 --> 00:10.090
È possibile definire proprietà opzionali anche nelle

00:10.090 --> 00:14.100
interfacce e nelle classi, come vi mostrerò.

00:14.100 --> 00:16.437
Per questo, si aggiunge il nome della proprietà,

00:16.437 --> 00:20.740
diciamo 'outputName', che può essere quello che si vuole, naturalmente, e deve

00:20.740 --> 00:22.238
essere una stringa.

00:22.238 --> 00:26.400
Non voglio obbligare tutte le classi basate su Named ad avere questa

00:26.400 --> 00:27.630
caratteristica.

00:27.630 --> 00:31.120
Dovrebbe essere facoltativo, che lo si voglia o meno.

00:31.120 --> 00:34.289
È possibile specificare una proprietà opzionale aggiungendo

00:34.289 --> 00:37.670
un punto interrogativo dopo il nome della proprietà.

00:37.670 --> 00:40.130
Ciò indica a Tivescript che questa proprietà potrebbe

00:40.130 --> 00:44.060
esistere nelle classi che implementano questa interfaccia, ma non è necessario

00:44.060 --> 00:45.680
che esista.

00:45.680 --> 00:48.540
Pertanto, non si ottiene alcun errore in 'Person',

00:48.540 --> 00:51.180
anche se non ho una proprietà di output name,

00:51.180 --> 00:53.440
perché è opzionale.

00:53.440 --> 00:56.072
Naturalmente, posso aggiungere il nome dell'output

00:56.072 --> 00:59.130
e inizializzarlo con un valore o usarlo come qualsiasi

00:59.130 --> 01:02.800
altra proprietà, ma non è necessario.

01:02.800 --> 01:06.720
Ora, in una classe è possibile avere anche una proprietà opzionale.

01:06.720 --> 01:09.670
Lo stesso nome qui dovrebbe essere opzionale,

01:09.670 --> 01:13.840
perché forse non abbiamo un valore per N.

01:13.840 --> 01:16.010
Anche qui possiamo aggiungere un punto interrogativo

01:16.010 --> 01:17.460
nella nostra classe.

01:17.460 --> 01:20.890
Ora dobbiamo renderlo facoltativo anche qui in Named,

01:20.890 --> 01:23.610
altrimenti violiamo la nostra interfaccia

01:23.610 --> 01:26.012
che obbliga a essere una stringa.

01:26.012 --> 01:29.000
Sto dicendo che questo può essere facoltativo.

01:29.000 --> 01:30.510
Quindi qui non è facoltativo

01:30.510 --> 01:32.750
e quando lo imposto uguale a

01:32.750 --> 01:37.640
N, voglio farlo solo se N è vero, se è impostato.

01:37.640 --> 01:40.080
Quindi solo se non è una stringa vuota, ad esempio.

01:40.080 --> 01:43.340
Altrimenti, name non sarà impostato e questo va bene

01:43.340 --> 01:46.524
perché l'ho trasformato in una proprietà opzionale

01:46.524 --> 01:49.853
sia qui nell'interfaccia che nella mia classe.

01:50.790 --> 01:53.070
Ora, quando costruiamo un nuovo oggetto,

01:53.070 --> 01:56.203
potremmo farlo senza passare un nome.

01:57.060 --> 01:59.813
Per consentirlo, dobbiamo andare nel costruttore

01:59.813 --> 02:02.600
e fornire un valore predefinito o aggiungere

02:02.600 --> 02:05.120
un punto interrogativo.

02:05.120 --> 02:06.260
Tutto questo per consentirlo.

02:06.260 --> 02:08.800
È possibile aggiungere parametri opzionali

02:08.800 --> 02:12.170
fornendo un valore predefinito di ripiego o aggiungendo

02:12.170 --> 02:13.990
un punto interrogativo, nel qual

02:13.990 --> 02:17.170
caso il valore predefinito sarà indefinito.

02:17.170 --> 02:20.450
Ora possiamo chiamare questo costruttore senza un valore,

02:20.450 --> 02:22.446
perché abbiamo un parametro opzionale

02:22.446 --> 02:25.960
e perché abbiamo una proprietà opzionale che va bene, non abbiamo

02:25.960 --> 02:27.930
bisogno di inizializzarla.

02:27.930 --> 02:29.648
E quindi, se salutate,

02:29.648 --> 02:33.510
questo nome non sarà definito.

02:33.510 --> 02:35.640
Quindi probabilmente dovremmo controllare anche qui se

02:35.640 --> 02:37.000
abbiamo un nome e, in caso affermativo,

02:37.000 --> 02:39.100
utilizzare la console. registrare questo.

02:39.100 --> 02:42.970
Altrimenti, ci consoliamo. "Ciao" senza alcun riferimento

02:42.970 --> 02:45.200
al nome, perché non ne abbiamo uno.

02:45.200 --> 02:47.170
Se diciamo che se tutto viene

02:47.170 --> 02:48.840
compilato e vediamo solo

02:48.840 --> 02:51.520
hi qui perché non ha fornito un nome.

02:51.520 --> 02:53.950
Quindi si tratta di proprietà opzionali

02:53.950 --> 02:56.008
sia in una classe che in un'interfaccia

02:56.008 --> 02:59.910
e anche nel mio elenco di costruttori.

02:59.910 --> 03:01.660
Per chiarire ancora una volta

03:01.660 --> 03:04.790
che queste tre cose sono solo vagamente collegate.

03:04.790 --> 03:07.980
È possibile inserire una proprietà opzionale in un'interfaccia

03:07.980 --> 03:11.910
e poi implementarla come proprietà non opzionale nella classe.

03:11.910 --> 03:14.550
Bisogna quindi assicurarsi che la logica sia tale

03:14.550 --> 03:17.810
che questo sia sempre inizializzato, altrimenti si ottiene

03:17.810 --> 03:19.720
un errore come appena visto.

03:19.720 --> 03:22.180
Se si ha una proprietà opzionale in

03:23.723 --> 03:26.870
un'interfaccia e una proprietà opzionale nella

03:26.870 --> 03:31.630
classe, non è necessario assegnare un valore in tutti i casi.

03:31.630 --> 03:34.210
Inoltre, e in modo del tutto estraneo, si possono

03:34.210 --> 03:36.020
avere parametri opzionali nelle

03:36.020 --> 03:38.300
funzioni e quindi anche nei metodi, compreso

03:38.300 --> 03:40.300
il metodo costruttore.

03:40.300 --> 03:42.670
I parametri opzionali sono definiti con il

03:42.670 --> 03:43.810
punto interrogativo,

03:43.810 --> 03:48.040
dove il valore predefinito, se non impostato, è quindi indefinito, oppure semplicemente

03:48.040 --> 03:51.690
assegnando un valore predefinito come questo.

03:51.690 --> 03:53.785
Come si sa, anche questo è facoltativo

03:53.785 --> 03:56.960
e il valore predefinito viene assunto se non si inserisce

03:56.960 --> 03:58.750
un valore più specifico.

03:58.750 --> 04:00.720
In questo modo si ottiene una maggiore

04:00.720 --> 04:02.950
flessibilità nel modo in cui si strutturano

04:02.950 --> 04:04.770
le classi e, quando si parla di interfacce,

04:04.770 --> 04:06.860
nel modo in cui si strutturano i contratti

04:06.860 --> 04:09.103
a cui le classi devono aderire.
