WEBVTT

00:02.150 --> 00:04.320
ผู้บรรยาย: เมื่อพูดถึงการสร้างแอป

00:04.320 --> 00:07.220
React ด้วย Typescript แน่นอนว่าเราต้องการการตั้งค่าโครงการ

00:07.220 --> 00:10.800
ซึ่งสามารถจัดการโค้ด React ของเราได้ทั้งสองอย่าง

00:10.800 --> 00:17.480
เช่น JSX ซึ่งคอมไพล์จะคงอยู่และเพิ่มประสิทธิภาพโค้ด React ของเรา และ ซึ่งในขณะเดียวกันก็สามารถเข้าใจ

00:17.480 --> 00:25.320
TypeScript และคอมไพล์ TypeScript เป็น JavaScript ได้

00:25.320 --> 00:28.750
การตั้งค่าโปรเจ็กต์ดังกล่าวด้วยตัวเราเองอาจค่อนข้างยาก

00:28.750 --> 00:34.080
ดังนั้นจึงเป็นเรื่องดีที่ Create React App ซึ่งเป็นเครื่องมือที่จัดการโดยทีม React

00:34.080 --> 00:36.420
ซึ่งเราสามารถใช้สร้างโปรเจ็กต์ React

00:36.420 --> 00:39.110
รองรับ TypeScript ได้ทันที

00:39.110 --> 00:42.110
คุณเพียงแค่ใช้ Google สำหรับ Create React App TypeScript

00:42.110 --> 00:44.590
และคุณควรค้นหารายการนี้ในเอกสารประกอบ

00:44.590 --> 00:47.000
Create React App อย่างเป็นทางการ

00:47.000 --> 00:49.140
คุณจะได้เรียนรู้วิธีเพิ่ม TypeScript

00:49.140 --> 00:51.540
ให้กับโปรเจ็กต์ที่มีอยู่ ที่นี่

00:51.540 --> 00:54.850
ขั้นตอนเหล่านี้ หรือวิธีสร้างโปรเจ็กต์ใหม่ด้วย

00:54.850 --> 00:57.290
Create React App และ TypeScript และที่นี่

00:57.290 --> 01:00.400
คุณจะเห็นคำสั่งที่คุณสามารถคัดลอกเพื่อสร้าง

01:00.400 --> 01:03.030
โครงการ React ใหม่ซึ่งรองรับ TypeScript

01:03.030 --> 01:05.680
ด้วย

01:05.680 --> 01:11.110
ตอนนี้ฉันจะใช้ที่นี่และที่นี่ฉันอยู่ในโฟลเดอร์ที่ฉันต้องการใช้

01:11.110 --> 01:14.790
นี่เป็นเพียงโฟลเดอร์โครงการที่ฉันต้องการใช้สำหรับโครงการนี้

01:14.790 --> 01:16.900
จากนั้นเราจะวางในคำสั่งนี้

01:16.900 --> 01:17.740
และในกรณีนี้

01:17.740 --> 01:22.710
เนื่องจากฉันต้องการใช้โฟลเดอร์ที่ฉันอยู่ และที่นี่ในเทอร์มินัลของฉันด้วย

01:22.710 --> 01:31.730
ฉันจะแทนที่ชื่อโปรเจ็กต์ด้วยจุด เพื่อไม่ให้สร้างโฟลเดอร์ย่อยใหม่และสร้างโปรเจ็กต์ในนั้น แต่นั่นจะใช้โฟลเดอร์นี้แทน

01:31.730 --> 01:33.720
แน่นอนว่านี่เป็นทางเลือก

01:33.720 --> 01:38.070
ฉันอยากจะบอกว่าฉันสังเกตเห็นว่าคำสั่งนี้ใช้ไม่ได้เสมอไป

01:38.070 --> 01:41.390
บางครั้งก็สร้างโครงการจาวาสคริปต์ปกติ

01:41.390 --> 01:42.590
ในการแก้ไขปัญหานั้น

01:42.590 --> 01:46.343
คุณสามารถติดตั้งแอป Create React บนเครื่องของคุณได้ทั่วโลก

01:47.340 --> 01:49.140
สิ่งที่คุณสามารถทำได้โดยการเรียกใช้

01:49.140 --> 01:56.560
npm install -g create-react-app บน Mac และ Linux คุณอาจต้องเพิ่ม sudo ข้างหน้า

01:56.560 --> 01:59.360
และเมื่อติดตั้งสิ่งนี้ในเครื่องของคุณแล้ว

01:59.360 --> 02:03.010
คุณสามารถเรียกใช้คำสั่งนี้ได้ที่นี่ แต่ถ้าไม่มี npx แบบนี้

02:03.010 --> 02:05.920
แล้วมันควรจะใช้งานได้อย่างแน่นอน

02:05.920 --> 02:07.270
นั่นคือสิ่งที่ฉันจะทำที่นี่

02:07.270 --> 02:09.320
แต่โดยปกติแล้ว มันควรจะทำงานได้โดยไม่ต้องติดตั้ง

02:09.320 --> 02:12.250
เพียงแค่ใช้เครื่องมือ npx ซึ่งเป็นส่วนหนึ่งของเครื่องมือ

02:12.250 --> 02:18.840
npm ที่เราติดตั้งร่วมกับ Node

02:18.840 --> 02:18.840
js ก่อนหน้านี้ในหลักสูตร

02:18.840 --> 02:23.250
ดังนั้นตอนนี้จึงวางโครงสร้างโครงการใหม่ไว้ในโฟลเดอร์นี้ที่นี่

02:23.250 --> 02:27.460
และในโครงการนั้นจะตั้งค่าแอปพลิเคชัน React ที่เราทุกคนสามารถเขียนโค้ดทั้งหมดของเราด้วย

02:27.460 --> 02:31.070
TypeScript

02:31.070 --> 02:32.460
งั้นเรามารอกันให้เสร็จก่อนดีกว่า

02:32.460 --> 02:34.610
แล้วมาดูกันว่าสิ่งนี้ให้อะไรเราบ้าง

02:34.610 --> 02:36.010
และมันก็เสร็จสิ้น

02:36.010 --> 02:37.930
มาดูกันดีกว่าว่ามีอะไรบ้าง

02:37.930 --> 02:41.000
เรามีโฟลเดอร์ ซึ่งคุณอาจจำได้ว่าเป็นโครงสร้างเดียวกับที่คุณมีเมื่อคุณสร้างแอป

02:41.000 --> 02:45.500
React โดยไม่มี TypeScript

02:45.500 --> 02:48.790
แต่เราเห็น tsconfig แล้ว ไฟล์ json

02:48.790 --> 02:52.940
นอกจากนี้ คุณยังสามารถแก้ไขไฟล์นี้และปรับแต่งตามความต้องการของคุณได้ด้วย

02:52.940 --> 02:57.120
คุณได้เรียนรู้วิธีปรับแต่งการกำหนดค่านี้ตั้งแต่ก่อนหน้านี้ในหลักสูตร

02:57.120 --> 03:01.160
แม้ว่าการกำหนดค่าเริ่มต้นควรจะใช้ได้สำหรับกรณีการใช้งานส่วนใหญ่

03:01.160 --> 03:02.950
ตอนนี้หากเราสำรวจโฟลเดอร์

03:02.950 --> 03:05.230
src ซึ่งเป็นตำแหน่งที่เราจะเขียนซอร์สโค้ด

03:05.230 --> 03:08.550
เราจะพบไฟล์ . ไฟล์ tsx อยู่ในนั้น

03:08.550 --> 03:11.900
จนถึงตอนนี้ในหลักสูตร เราไม่ได้ทำงานกับ tsx แต่เฉพาะกับ

03:11.900 --> 03:13.787
. ไฟล์ ts. tsx ถูกเลือกที่นี่

03:13.787 --> 03:17.800
เนื่องจากไฟล์เหล่านี้เป็นไฟล์ที่คุณไม่สามารถเขียนโค้ด

03:17.800 --> 03:22.000
TypeScript ได้ แต่ใช้โค้ด JSX ทั้งหมด ซึ่งเป็นเพียง React พิเศษ

03:22.000 --> 03:25.570
ไวยากรณ์ JavaScript ที่คุณเขียนมาร์กอัป HTML ภายใน

03:25.570 --> 03:29.930
JavaScript ของคุณ หรือในกรณีนี้ TypeScript รหัส.

03:29.930 --> 03:32.880
นั่นคือสิ่งที่เราได้รับที่นี่

03:32.880 --> 03:34.920
ตอนนี้ในไฟล์เหล่านี้ เราสามารถเห็นไวยากรณ์ของ

03:34.920 --> 03:36.500
TypeScript ได้แล้ว เช่น ที่นี่

03:36.500 --> 03:41.480
เราได้รับการกำหนดประเภท ฉันจะดูประเภทนี้ให้ละเอียดยิ่งขึ้นในภายหลัง แต่สำหรับตอนนี้

03:41.480 --> 03:43.880
เราเพิ่งเห็นได้ทันทีว่าเราใช้ TypeScript

03:43.880 --> 03:45.780
ที่นี่ .

03:45.780 --> 03:49.290
ด้วยสิ่งนั้น ให้ฉันทำความสะอาดโครงสร้างโฟลเดอร์เริ่มต้นนี้สักหน่อย

03:49.290 --> 03:50.680
จากนั้นมาสร้างแอป React

03:50.680 --> 03:52.730
แบบง่ายๆ ด้วยกัน และในขณะที่เรากำลังดำเนินการนั้น

03:52.730 --> 03:57.550
เรามาสำรวจว่าเราจะใช้ TypeScript กับ React ได้อย่างไร

03:57.550 --> 04:02.950
ก่อนอื่นมาโฟกัสที่การล้างที่นี่ในแอพ

04:02.950 --> 04:02.950
tsx

04:02.950 --> 04:06.860
ฉันจะลบการนำเข้าโลโก้และลบเนื้อหาทั้งหมดใน

04:06.860 --> 04:09.380
div ของฉันที่นี่ และเก็บ div นั้นไว้

04:09.380 --> 04:15.530
ฉันจะลบแอพด้วย นำเข้า css กำจัดแอพ

04:15.530 --> 04:15.530
css ไฟล์และแอพ ทดสอบ. tsx

04:15.530 --> 04:23.470
เช่นเดียวกับโลโก้ svg และ serviceWorker ts ลบทั้งหมด

04:23.470 --> 04:25.500
ในดัชนี tsx ฉันจะลบการนำเข้า serviceWorker

04:25.500 --> 04:29.060
นี้ เนื่องจากเราจะไม่ทำงานกับ

04:29.060 --> 04:32.100
serviceWorkers ที่นี่ ลบรหัสนั้นลงที่นั่น และจบลงด้วยการตั้งค่านี้

04:32.100 --> 04:34.530
และในดัชนี css ฉันจะล้างข้อมูลทั้งหมดนี้ และตั้งค่าสไตล์

04:34.530 --> 04:40.610
HTML บางส่วนที่ฉันต้องการตั้งค่าตระกูลฟอนต์ของ

04:40.610 --> 04:45.860
sans-serif แล้วก็สไตล์เนื้อหาที่ฉันต้องการกำจัดระยะขอบ ง่ายๆ แบบนี้

04:45.860 --> 04:48.820
จัดแต่งทรงผม

04:48.820 --> 04:54.540
ด้วยเหตุนี้ เราจึงมีการตั้งค่าเริ่มต้นที่ฉันต้องการใช้

04:54.540 --> 04:55.840
อีกครั้ง ฉันได้พูดถึงมันแล้ว

04:55.840 --> 04:57.370
แต่ถ้าทั้งหมดนี้ไม่ได้บอกอะไรคุณเลย

04:57.370 --> 04:59.710
ถ้านี่เป็นไวยากรณ์ที่คุณไม่เคยเห็นมาก่อน ให้ดำดิ่งลงไปในทรัพยากรของ

04:59.710 --> 05:02.200
React ก่อน

05:02.200 --> 05:05.610
นี่ไม่ใช่สิ่งที่เราจะเน้นในโมดูลนี้ คุณจะไม่ได้เรียนรู้

05:05.610 --> 05:08.130
React ในโมดูลนี้

05:08.130 --> 05:11.010
แต่ด้วยวิธีนั้น มาบันทึกการเปลี่ยนแปลงทั้งหมดของเราและดำเนินการต่อ

05:11.010 --> 05:12.920
และเริ่มเขียนโค้ด React และ Typhon

05:12.920 --> 05:17.980
และเรียนรู้ว่าสองสิ่งนี้ทำงานร่วมกันอย่างไร
