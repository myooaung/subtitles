WEBVTT

00:02.220 --> 00:05.760
-: Bir sonraki adım olarak, buradaki tipler üzerinde çalışmak

00:05.760 --> 00:09.900
istiyorum, burada atanan projelerim için, buradaki dinleyiciler için

00:09.900 --> 00:11.320
ve ayrıca proje durumundaki

00:11.320 --> 00:14.980
projeler için kullandığım herhangi bir tip.

00:14.980 --> 00:19.030
Tabii ki, burada herhangi biriyle çalışmak istemiyorum, kullanabileceğimiz

00:19.030 --> 00:20.740
özel bir proje sınıfına veya

00:20.740 --> 00:25.660
proje türüne sahip olmak daha mantıklı olacaktır.

00:25.660 --> 00:27.760
Ve aslında, sadece class project

00:29.070 --> 00:29.903
kullanarak

00:31.390 --> 00:32.450
bu proje türü için

00:32.450 --> 00:34.890
bir sınıf oluşturacağım, böylece

00:34.890 --> 00:38.740
her zaman aynı yapıya sahip olan proje nesneleri oluşturmanın

00:38.740 --> 00:41.570
bir yolunu bulacağız.

00:41.570 --> 00:44.760
Şu anda bunu aşağıda gerçek notasyonla yapıyorum.

00:44.760 --> 00:47.920
Elbette bunun dezavantajı, bunun bir tanımlama olduğunu ve Desc

00:47.920 --> 00:50.490
olmadığını hatırlamak zorunda olmamızdır.

00:50.490 --> 00:52.410
bir dize olan bir ID'ye ihtiyacımız var ve

00:52.410 --> 00:53.470
bu böyle devam ediyor.

00:53.470 --> 00:56.440
İşte bu noktada özel bir tür bize yardımcı olabilir

00:56.440 --> 00:59.750
ve ben bir arayüz değil bir sınıf ya da type anahtar

00:59.750 --> 01:02.300
sözcüğüyle bir Özel tür oluşturacağım

01:02.300 --> 01:05.470
çünkü onu örnekleyebilmek istiyorum.

01:05.470 --> 01:07.960
Peki böyle bir sınıf ya da böyle bir proje

01:07.960 --> 01:10.700
tam olarak nasıl görünmelidir?

01:10.700 --> 01:12.320
Pekala, bir kurucu ekleyeceğim

01:12.320 --> 01:17.280
ve ardından kurucuya argüman veya parametre atama kısayolunu kullanacağım,

01:17.280 --> 01:19.100
bunlar da otomatik olarak özellik

01:19.100 --> 01:25.650
haline gelecek, bu durumda en başa Public erişimcisini, ardından argümanın ve özelliğin adını

01:25.650 --> 01:29.450
ve sonra da türünü ekleyeceğim.

01:29.450 --> 01:33.100
Ve burada her projenin bir kimliği olmalıdır.

01:33.100 --> 01:34.990
Her projenin, tıpkı ID gibi bir

01:34.990 --> 01:37.330
dize olan bir başlığı olmalıdır.

01:37.330 --> 01:38.690
Bir dize olan bir açıklamaya

01:38.690 --> 01:39.920
sahip olmalıdır,

01:39.920 --> 01:44.420
bir projeye atanan kişi sayısı olan bir sayı olan bir People özelliğine

01:44.420 --> 01:47.440
sahip olmalıdır.

01:47.440 --> 01:49.580
Ayrıca eklemek istediğim ve şu ana

01:49.580 --> 01:51.640
kadar sahip olmadığımız bir şey

01:51.640 --> 01:53.580
de aslında bir proje durumu.

01:53.580 --> 01:56.920
Çünkü şu anda buraya bir proje eklediğimizde, her

01:56.920 --> 01:58.680
iki listede de görünüyor.

01:58.680 --> 02:01.530
Şimdi, bir projeye elbette değiştirilebilecek

02:01.530 --> 02:03.630
bir durum eklemek istiyorum, böylece

02:03.630 --> 02:07.470
aslında ilk kutuda aktif projeleri ve ikinci bir kutuda

02:07.470 --> 02:11.470
bitmiş projeleri filtreleyebiliriz.

02:11.470 --> 02:15.000
Yani her kutuda sadece doğru projeleri göstermek.

02:15.000 --> 02:19.890
Bunun için buraya başka bir genel özellik ekleyeceğim, durum.

02:19.890 --> 02:21.280
Ve şimdi soru elbette bu statünün

02:21.280 --> 02:23.985
hangi türe sahip olması gerektiğidir?

02:23.985 --> 02:28.240
Şimdi iki literal tipe sahip bir union tipi kullanabiliriz Active

02:28.240 --> 02:31.170
ve Finished daha önce kullandığımız şey.

02:31.170 --> 02:33.280
Ancak burada, her zaman öğrendiğiniz

02:33.280 --> 02:36.890
başka bir türü tanıtmak veya yeniden tanıtmak istiyorum

02:36.890 --> 02:38.320
ve bu da Enum'dur.

02:38.320 --> 02:41.890
Enum burada mükemmel çünkü tam olarak iki seçeneğimiz var.

02:41.890 --> 02:44.950
Ve burada, bu proje nesnesi bağlamında, insanlar için anlamlı

02:44.950 --> 02:48.740
olan ve değer olarak sakladığımız bir metne de ihtiyacımız yok, ancak

02:48.740 --> 02:50.270
gerçekten sadece bir tanımlayıcıya

02:50.270 --> 02:52.341
ihtiyacımız var.

02:52.341 --> 02:56.140
Bu yüzden buraya yeni bir Enum proje durumu ekleyeceğim.

02:56.140 --> 02:59.810
Ve orada iki değer olmasını istiyorum,

02:59.810 --> 03:02.890
Aktif ve Bitti.

03:02.890 --> 03:05.440
Ve sonra burada, bu durum tıpkı bunun

03:05.440 --> 03:08.610
gibi proje durumu türünde olacaktır.

03:08.610 --> 03:11.003
Bu artık benim proje sınıfım.

03:11.900 --> 03:14.220
Bununla birlikte, bunun o proje sınıfını

03:14.220 --> 03:17.820
kullanan bir dizi proje olduğunu söyleyebiliriz.

03:17.820 --> 03:20.351
Ve tabii ki, burada bir proje oluşturduğumuzda,

03:20.351 --> 03:26.620
bunu proje durumunu değil, yeni proje projesini kullanarak yaparız.

03:26.620 --> 03:30.310
Ve burada projeye, daha önce de belirtildiği

03:30.310 --> 03:32.200
gibi, bir dizeye dönüştürdüğümüz

03:32.200 --> 03:35.370
rastgele bir sayı, sonra başlık, sonra

03:35.370 --> 03:36.720
açıklama, sonra

03:36.720 --> 03:38.210
buradaki Kişi Sayısı

03:38.210 --> 03:41.930
ve sonra da tabii ki durum olan bir kimlik iletiyoruz,

03:41.930 --> 03:45.080
değil mi?

03:45.080 --> 03:49.950
Ve bu uygulamada, bu demo projede olmasını istediğim bir şey

03:49.950 --> 03:53.180
de varsayılan olarak her yeni projenin

03:53.180 --> 03:54.830
aktif olmasıdır.

03:54.830 --> 03:57.040
Yani burada yeni bir proje oluşturduğumuzda,

03:57.040 --> 04:00.064
proje durumu atıyoruz. Burada aktif olan durum

04:00.064 --> 04:05.230
için bir değer olarak, eklediğimiz projelendirmeliyiz.

04:05.230 --> 04:06.720
Ve şimdi proje sınıfına ihtiyaç

04:06.720 --> 04:08.450
duyduğumuz bir yer daha var.

04:08.450 --> 04:11.220
Ve burada, Proje Listesi sınıfında, Projeleri

04:11.220 --> 04:13.474
ata özelliğimiz var.

04:13.474 --> 04:17.240
Ve tabii ki bu her zaman bir dizi proje olmalıdır.

04:17.240 --> 04:19.530
Şimdi bununla Beta yazımını kullanıyoruz.

04:19.530 --> 04:22.810
Bunun bir avantajı da, örneğin render projelerinde

04:22.810 --> 04:26.360
artık otomatik tamamlama özelliğine de sahip olmamız.

04:26.360 --> 04:29.020
Ayrıca bunu kaydetmeye çalışırsak bir hata,

04:29.020 --> 04:31.300
bir derleme hatası alırız, çünkü artık

04:31.300 --> 04:33.100
TypeScript burada hangi türlerle

04:33.100 --> 04:35.360
çalıştığımızı anlar.

04:35.360 --> 04:39.040
İşte proje sınıfı ve bunu nasıl kullanabileceğimiz.

04:39.040 --> 04:41.760
Project sınıfı tek sınıf değil Ancak,

04:41.760 --> 04:44.230
burada Listener da var.

04:44.230 --> 04:48.630
Ve bunun için yeni bir özel tip Listener ekleyeceğim.

04:48.630 --> 04:50.390
İsim elbette size kalmış.

04:50.390 --> 04:54.280
Burada sadece bir tür kullanıyorum çünkü temelde bir

04:54.280 --> 04:58.260
işlev türünü tek bir kelimeyle kodlamak istiyorum.

04:58.260 --> 04:59.640
Peki bununla ne demek istiyoruz?

04:59.640 --> 05:03.270
Elbette, uygulamamızdaki bir dinleyici sadece

05:03.270 --> 05:05.370
bir işlevdir, değil mi?

05:05.370 --> 05:07.160
Listeners dizisinde sakladığımız

05:07.160 --> 05:08.960
şey sadece bir grup işlev Add Listener

05:08.960 --> 05:12.200
yeni bir işlevi iter ve bir şey değiştiğinde bu işlevi

05:12.200 --> 05:14.190
çalıştırırız.

05:14.190 --> 05:17.610
Yani burada bir dinleyici aslında sadece bir işlevdir.

05:17.610 --> 05:22.610
Ancak öğelerimizi, bizim durumumuzdaki belirli öğeleri

05:22.870 --> 05:23.703
ve proje dizisini

05:23.703 --> 05:27.113
alan bir işlevdir.

05:28.500 --> 05:30.410
Ve bu da onunla bir şeyler yapar.

05:30.410 --> 05:32.480
Şimdi burada kesin olmak gerekirse, elbette,

05:32.480 --> 05:33.550
bir fonksiyon tipi tanımlamak

05:33.550 --> 05:35.200
için burada küme parantezlerimiz

05:35.200 --> 05:37.440
yok, bunun yerine öğrendiğiniz gibi geri dönüş

05:37.440 --> 05:38.780
tipimiz var ve bu geniş olacak,

05:38.780 --> 05:41.880
yani Listener fonksiyonunun döndürebileceği herhangi bir değerle

05:41.880 --> 05:44.090
ilgilenmiyoruz.

05:44.090 --> 05:46.140
Dinleyicilerle çalıştığımız yerde.

05:46.140 --> 05:47.940
Herhangi bir dönüş türüne ihtiyacımız yok.

05:47.940 --> 05:49.810
Sadece böyle bir dinleyici olarak

05:49.810 --> 05:51.880
geçen kişinin, dinleyici ateşlendiğinde

05:51.880 --> 05:55.870
bazı öğeleri almayı beklediğinden emin olmak istiyoruz.

05:55.870 --> 05:58.530
Buradan hareketle, Listeners'ın sonuçta

05:58.530 --> 06:02.760
bir dizi dinleyici kuyu fonksiyonu olduğunu söyleyebiliriz.

06:02.760 --> 06:05.670
Ve burada, dinleyici işlevini ittiğimde, bunun herhangi

06:05.670 --> 06:08.480
bir işlev olmadığını, ancak bir dinleyici türü olduğunu

06:08.480 --> 06:10.630
açıkça belirtmem gerekiyor, o zaman her

06:10.630 --> 06:12.350
şey çalışıyor.

06:12.350 --> 06:14.530
Şimdi, aşağıda yer alan Dinleyici

06:14.530 --> 06:16.180
Ekle'yi kullandığımız yerde,

06:16.180 --> 06:17.650
elbette yazımımızı geliştirebilir

06:17.650 --> 06:19.869
ve burada aslında bir grup proje alacağımızı

06:19.869 --> 06:23.440
açıkça belirtebiliriz.

06:23.440 --> 06:27.220
Şimdi bununla birlikte dinleyicimizi kurduk,

06:27.220 --> 06:32.210
proje türünü ekledik ve burada hiçbir şey değişmedi.

06:32.210 --> 06:35.120
Şimdi çalışan bir şey eklersek ve ikinci

06:35.120 --> 06:36.900
bir öğe eklersem, ilk öğenin

06:36.900 --> 06:38.880
tekrar eklenmesinin yanı sıra

06:38.880 --> 06:40.530
bu da eklenir ve listelerin

06:40.530 --> 06:43.230
hiçbirinde herhangi bir filtreleme

06:43.230 --> 06:45.260
yapmayız.

06:45.260 --> 06:48.600
Parçalarımız üzerinde çalışmaya devam etmeden önce, burada

06:48.600 --> 06:50.570
tek bir liste içinde bu çoğaltmayı

06:50.570 --> 06:53.990
yapmadığımızdan ve ayrıca buradaki her iki kutuda da çoğaltma

06:53.990 --> 06:58.610
yapmadığımızdan, bunun yerine burada yalnızca aktif projelerin ve yalnızca

06:58.610 --> 07:01.030
bitmiş projelerin gösterildiğinden ve

07:01.030 --> 07:02.940
bu nedenle başlangıçta burada bitmiş

07:02.940 --> 07:08.010
projelerde hiçbir projenin gösterilmediğinden emin olalım.

07:08.010 --> 07:09.623
Hadi bunu düzeltelim.
