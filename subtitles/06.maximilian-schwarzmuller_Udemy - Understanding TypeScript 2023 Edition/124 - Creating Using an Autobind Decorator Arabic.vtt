WEBVTT

00:02.220 --> 00:04.550
-: أنا أتحدث عن المصمم الذي يمكننا إضافته

00:04.550 --> 00:07.350
والذي يربط تلقائيًا الكلمة الرئيسية "this"

00:07.350 --> 00:09.930
حتى لا نضطر إلى استدعاء bind هنا.

00:09.930 --> 00:12.500
من الواضح الآن أن استدعاء الربط هنا ليس شيئًا

00:12.500 --> 00:14.160
كبيرًا إذا لم يكن هناك خطأ في

00:14.160 --> 00:16.460
ذلك ، ولكننا نريد أيضًا ممارسة ما تعلمناه

00:16.460 --> 00:20.220
وإذا كان علينا القيام بذلك في العديد من الأماكن عبر تطبيقنا الذي

00:20.220 --> 00:22.730
لدينا مصمم ، والذي يمكننا فقط إضافة ربما في

00:22.730 --> 00:24.970
الواقع يكون من الأسهل.

00:24.970 --> 00:27.100
لذا ، دعونا نتخلص من ربط هذا هنا.

00:27.100 --> 00:30.010
وبدلاً من ذلك ، فوق الفصل هنا ، سأضيف

00:30.010 --> 00:33.010
مصمم الربط التلقائي وأضيف بعض التعليقات

00:33.010 --> 00:34.920
هنا للحفاظ على هذا الملف

00:34.920 --> 00:38.750
منظمًا ، على الأقل قليلاً.

00:38.750 --> 00:40.490
فئة إدخال المشروع

00:42.260 --> 00:44.790
إذن ، ما هو المصمم؟

00:44.790 --> 00:46.770
الديكور هو وظيفة ، أليس كذلك؟

00:46.770 --> 00:48.130
ويمكنك أن تجدها إما

00:48.130 --> 00:51.383
مع زخرفة الوظيفة هنا أو كتعبير وظيفي.

00:52.490 --> 00:54.780
لذا ، سأستخدم هنا زخرفة وظيفية ، وسأطلق

00:54.780 --> 00:57.780
عليها اسم الربط التلقائي ، والاسم متروك لك.

00:57.780 --> 01:01.670
وسيحصل هذا المصمم على حجج مجانية الهدف ، واسم

01:01.670 --> 01:03.173
الطريقة التي يرتبط

01:04.430 --> 01:06.430
بها ، لأنني سأقوم بإنشاء

01:06.430 --> 01:09.083
مصمم طريقة هنا.

01:09.980 --> 01:12.960
وكذلك واصف تلك

01:12.960 --> 01:15.720
الطريقة.

01:15.720 --> 01:18.370
أه ، واصف الخاصية لأن الطرق في

01:18.370 --> 01:22.760
النهاية هي مجرد خصائص ، خصائص تحتوي على وظائف.

01:22.760 --> 01:24.400
الآن ، لماذا هذه طريقة تزيين؟

01:24.400 --> 01:29.210
لأن الفكرة هي أنه يمكننا إضافته لتقديم معالج

01:29.210 --> 01:32.210
مثل هذا ، والانتهاء من ذلك.

01:32.210 --> 01:33.680
هذه هي الفكرة.

01:33.680 --> 01:35.500
الآن ، لم نصل إلى هناك بالكامل بعد ، ولكن

01:35.500 --> 01:38.143
هذه هي الطريقة التي يجب أن تعمل بها في النهاية.

01:39.090 --> 01:42.950
الآن ، لجعلها تعمل ، دعنا نعود إلى وظيفتنا هناك

01:42.950 --> 01:46.880
وما الذي يجب أن يدخل في جسم الوظيفة بعد ذلك؟

01:46.880 --> 01:49.490
حسنًا ، هناك ، أريد أولاً وقبل كل شيء

01:49.490 --> 01:51.950
الوصول إلى الطريقة الأصلية.

01:51.950 --> 01:56.593
مع الواصف. القيمة حتى نخزن الطريقة

01:56.593 --> 01:59.380
التي حددناها في الأصل.

01:59.380 --> 02:03.540
ثم أريد إنشاء واصفي المعدل هنا

02:03.540 --> 02:04.873
وهو كائن.

02:06.650 --> 02:11.090
سأكتب PropertyDescriptor ، في الواقع.

02:11.090 --> 02:13.880
حيث يجب ضبط قابلية التهيئة على "true" ، حتى

02:13.880 --> 02:15.910
نتمكن دائمًا من تغييرها.

02:15.910 --> 02:17.573
وحيث نحتاج بعد ذلك إلى جامع.

02:18.510 --> 02:21.770
وفي هذا البرنامج ، هنا ، والذي يجب تنفيذه عند

02:21.770 --> 02:24.270
محاولة الوصول إلى الوظيفة.

02:24.270 --> 02:27.710
سنقوم بإعداد الدالة المقيدة هنا ، باستخدام

02:27.710 --> 02:29.220
الطريقة الأصلية التي

02:29.220 --> 02:31.030
نستخرجها هناك.

02:31.030 --> 02:34.063
واستدعاء ربط هذا عليه.

02:35.370 --> 02:36.203
بعد ذلك ، أريد

02:37.860 --> 02:40.170
أن أعيد تلك الوظيفة المقيدة ، ويجب

02:40.170 --> 02:41.603
أن يكون هذا كل شيء.

02:42.510 --> 02:44.190
وعمومًا بالطبع ، سأقوم

02:44.190 --> 02:46.620
بإرجاع الواصف المعدل في مصمم

02:46.620 --> 02:48.653
الطريقة هذا.

02:49.510 --> 02:52.880
الآن حصلنا على خطأ في ذلك ، في عملية الإرسال.

02:52.880 --> 02:56.020
هذا ، الدعم التجريبي لمصممي الديكور هو ميزة تحتاج

02:56.020 --> 02:57.960
بشكل أساسي إلى التمكين.

02:57.960 --> 03:00.400
لذلك يجب أن نذهب إلى ملف tsconfig ، وهناك

03:00.400 --> 03:02.320
فقط قم بالتمرير لأسفل.

03:02.320 --> 03:05.770
يجب أن تجد خيار "الديكورات التجريبية" فقط قم بالتعليق

03:05.770 --> 03:07.450
على ذلك بتنسيق.

03:07.450 --> 03:09.980
وأضف فاصلة أمامه.

03:09.980 --> 03:14.183
احفظ ذلك ، ثم أعد تشغيل عملية تجميع الأنواع.

03:15.180 --> 03:17.700
الآن ، لا يزال يظهر لي بعض الأخطاء هنا ، إذا قمت

03:17.700 --> 03:18.913
بتوسيع هذا ، فسيتم الإعلان

03:20.212 --> 03:23.170
عن اسم methodName ، لكن قيمته لا تُقرأ أبدًا.

03:23.170 --> 03:25.410
في التطبيق. ts الخط الرابع.

03:25.410 --> 03:26.760
إنها تشير إلى هذا هنا ،

03:26.760 --> 03:29.020
لقد حصلت على هذه الحجة ، التي تلقيتها

03:29.020 --> 03:30.940
هنا والتي لم أستخدمها مطلقًا.

03:30.940 --> 03:34.370
نفس الشيء صحيح بالنسبة للهدف ، لم أستخدمه أبدًا.

03:34.370 --> 03:36.343
الآن ، هناك طريقتان لحل هذا.

03:37.200 --> 03:39.610
طريقة واحدة ، هي الذهاب إلى tsconfig

03:39.610 --> 03:42.813
، وتخفيف قواعدنا الصارمة ، هنا.

03:44.160 --> 03:46.740
noUnusedParameters ، إذا قمنا بتعيين هذا على خطأ ، فإننا

03:46.740 --> 03:49.090
في الواقع نسمح بالمعلمات غير المستخدمة.

03:49.090 --> 03:50.670
لذلك ، سيكون هذا شيئًا واحدًا

03:50.670 --> 03:52.910
، أو يمكنك استخدام شرطة سفلية خاصة

03:52.910 --> 03:54.053
بالأسماء ، وشرطة

03:55.180 --> 03:56.653
سفلية اثنين.

03:57.770 --> 04:01.860
هذا في الواقع ، تلميح للطباعة وجافا سكريبت أنك تدرك

04:01.860 --> 04:03.130
أنك لن تستخدم هذه

04:03.130 --> 04:04.800
القيم ، لكنك تحتاج إلى

04:04.800 --> 04:05.930
قبولها لأنك تحتاج

04:05.930 --> 04:08.740
إلى الحجة التي تلاحقها.

04:08.740 --> 04:11.810
إذا قمت بحفظ هذا الآن ، فسيتم تجميع هذا بدون

04:11.810 --> 04:14.700
أخطاء وإذا عدنا وأدخلنا مرحبًا هنا وقمنا

04:14.700 --> 04:17.040
بإرسال هذا ، فإنه لا يزال يعمل الآن

04:17.040 --> 04:20.060
بفضل مصمم الربط التلقائي الخاص بنا.

04:20.060 --> 04:23.120
والذي نأمل أن يظهر أيضًا أن هذا المصمم يمكن أن يكون

04:23.120 --> 04:24.950
له بعض الاستخدام الحقيقي.

04:24.950 --> 04:27.530
الآن بالطبع هنا عمل أكثر قليلاً

04:27.530 --> 04:29.510
من مجرد استدعاء bind.

04:29.510 --> 04:32.120
لكن تخيل أن هذا يتم استخدامه في المزيد والمزيد من الأساليب

04:32.120 --> 04:33.820
التي يجب أن تكون جميعها ملزمة.

04:33.820 --> 04:36.140
عدم الاضطرار إلى استدعاء ربط هذا يدويًا

04:36.140 --> 04:38.140
، يمكنه بعد ذلك إعادة توفير بعض الوقت

04:38.140 --> 04:40.430
، وكذلك منع بعض الأخطاء المحتملة في الحالات

04:40.430 --> 04:42.343
التي نسيتها للتو.
