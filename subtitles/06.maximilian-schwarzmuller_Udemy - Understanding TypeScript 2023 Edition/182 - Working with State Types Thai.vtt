WEBVTT

00:02.260 --> 00:05.340
ผู้อธิบาย: ถึงเวลาสำหรับการจัดการสถานะบางอย่างในคอมโพเนนต์ของแอป

00:05.340 --> 00:08.880
เนื่องจากเมื่อเราอัปเดตอาร์เรย์แบบนี้ คอมโพเนนต์จะไม่ถูกเรนเดอร์ซ้ำ

00:08.880 --> 00:10.530
นั่นคือวิธีการทำงานของ React

00:10.530 --> 00:12.590
ในส่วนประกอบของฟังก์ชัน เราสามารถจัดการ

00:12.590 --> 00:15.000
State ด้วย useState hook

00:15.000 --> 00:16.820
และอีกครั้ง หากคุณไม่ทราบสิ่งนี้

00:16.820 --> 00:18.750
หรือหากส่วนประกอบสถานะหรือฟังก์ชันหรือ

00:18.750 --> 00:21.120
hooks ไม่ได้บอกอะไรคุณ ให้ลองดูทรัพยากร

00:21.120 --> 00:26.480
React เฉพาะบางอย่าง เช่น React ของฉัน ซึ่งเป็นหลักสูตรคำแนะนำฉบับสมบูรณ์

00:26.480 --> 00:29.870
ดังนั้น ตอนนี้ฉันต้องการจัดการ todos ของฉันที่นี่ด้วย

00:29.870 --> 00:31.760
state และเพื่อการนั้น ฉันจะล้าง

00:31.760 --> 00:33.060
todos จำลองที่ฉันเริ่มต้น

00:33.060 --> 00:36.430
และเริ่มต้น state แทนโดยการเรียก useState อย่างไรก็ตาม

00:36.430 --> 00:39.080
ฉันสามารถส่งอาร์เรย์ว่างของฉันเป็นจุดเริ่มต้น

00:39.080 --> 00:44.510
ค่าสถานะเพื่อให้ในตอนแรกสถานะของฉันเป็นอาร์เรย์ว่าง

00:44.510 --> 00:49.370
ตอนนี้ useState จะส่งคืนอาร์เรย์ที่มีสององค์ประกอบเสมอ

00:49.370 --> 00:53.630
องค์ประกอบแรกคือภาพรวมสถานะล่าสุดสำหรับรอบการเรนเดอร์นี้

00:53.630 --> 00:55.070
และอาร์กิวเมนต์ที่สอง

00:55.070 --> 01:01.110
องค์ประกอบที่สองในอาร์เรย์คือฟังก์ชันเพื่ออัปเดตสถานะนั้นและแสดงผลองค์ประกอบใหม่

01:01.110 --> 01:05.060
เราสามารถใช้การจัดโครงสร้างอาร์เรย์ใหม่ที่เราได้เรียนรู้ก่อนหน้านี้ในหลักสูตร

01:05.060 --> 01:09.230
เพื่อดึงองค์ประกอบทั้งสองนี้ออกมาและเก็บไว้ในค่าคงที่แยกกัน

01:09.230 --> 01:10.900
จากนั้นเรามี todos และสมมติว่าเป็นฟังก์ชันชื่อ

01:10.900 --> 01:13.103
setTodos

01:14.920 --> 01:16.820
ด้วยสิ่งนั้น เรายังคงได้รับ

01:16.820 --> 01:19.530
todos array ของเรา และตอนนี้ใน todoAddHandler

01:19.530 --> 01:21.480
ฉันต้องการเรียก setTodos และตั้งค่า

01:21.480 --> 01:24.430
todos array ของฉันเป็น array ใหม่ ซึ่งมี todoText

01:24.430 --> 01:27.373
ใหม่เพิ่มเข้าไป

01:28.240 --> 01:34.100
แน่นอนว่าตอนนี้เราสามารถส่งผ่านอาร์เรย์ใหม่และเพิ่มวัตถุใหม่

01:34.100 --> 01:36.530
สมมติว่ามี ID ที่เราสร้าง ID

01:36.530 --> 01:42.530
แบบสุ่มด้วย Math

01:42.530 --> 01:42.530
สุ่ม(). ถึงสตริง

01:42.530 --> 01:44.830
มันไม่ซ้ำกันจริงๆ แต่ก็ดีพอที่นี่ และที่ที่เรามีข้อความของเราด้วย

01:44.830 --> 01:48.760
ซึ่งก็คือค่าข้อความที่ฉันได้รับที่นี่

01:48.760 --> 01:51.910
แต่น่าแปลกที่ฉันได้รับข้อผิดพลาดที่นี่

01:51.910 --> 01:56.860
และข้อผิดพลาดที่เราได้รับคืออาร์กิวเมนต์นี้ไม่สามารถกำหนดได้

01:56.860 --> 02:01.970
โดยพื้นฐานแล้วเป็นสิ่งที่คาดว่าจะไม่มีอะไรมากมาย

02:01.970 --> 02:03.590
และนั่นไม่ใช่สิ่งที่คุณต้องการที่นี่

02:03.590 --> 02:06.010
เราไม่ต้องการมีอะไรมากมายเป็นรัฐของเรา

02:06.010 --> 02:07.110
ทำไมสิ่งนี้ถึงเกิดขึ้น?

02:07.950 --> 02:11.800
เนื่องจากที่นี่ เมื่อฉันเริ่มต้น useState ด้วยอาร์เรย์ว่าง

02:11.800 --> 02:17.060
TypeScript จะอนุมานว่าสถานะของเราจะเป็นอย่างไร ถ้าฉันจะเริ่มต้นสิ่งนี้เป็นสตริง

02:17.060 --> 02:20.130
TypeScript จะอนุมานว่าสถานะของฉันเป็นสตริง

02:20.130 --> 02:24.123
ดังนั้นหากฉันลบสิ่งนี้ชั่วคราวและส่งข้อความบางส่วนไป มันก็จะได้รับการยอมรับ

02:25.160 --> 02:26.137
ถ้าฉันส่งมันในอาร์เรย์

02:26.137 --> 02:28.260
TypeScript คาดว่ามันจะเป็นอาร์เรย์ แต่ไม่ใช่อาร์เรย์ของอะไร

02:28.260 --> 02:32.000
แต่โดยพื้นฐานแล้วจะเป็นอาร์เรย์ว่างเสมอ

02:32.000 --> 02:36.070
ไม่มีอะไรมากมายซึ่งแน่นอนว่าฉันไม่ต้องการที่นี่

02:36.070 --> 02:40.460
ในการแก้ไขปัญหานี้ เราต้องบอก React ว่าอสังหาริมทรัพย์ของเราจะมีลักษณะอย่างไรเมื่อเวลาผ่านไป

02:40.460 --> 02:42.920
และเพื่อสิ่งนั้น เราสามารถใช้ useState เป็นฟังก์ชันทั่วไปได้อีกครั้ง

02:42.920 --> 02:48.080
เพราะเราสามารถส่งผ่านโครงสร้างของอสังหาริมทรัพย์ของเราได้

02:48.080 --> 02:51.240
ดังนั้นข้อมูลประเภทใดที่สถานะของเราเป็น

02:51.240 --> 02:54.200
และเราสามารถส่งผ่านได้ว่าสถานะของเราควรเป็นอาร์เรย์ของออบเจกต์

02:54.200 --> 02:59.570
เพื่อให้แม่นยำและเป็นอาร์เรย์ของออบเจ็กต์ที่เรามีคุณสมบัติ ID ซึ่งเป็นสตริง

02:59.570 --> 03:04.860
และคุณสมบัติข้อความ ซึ่ง เป็นสตริง

03:04.860 --> 03:08.050
และตอนนี้การอัปเดตสถานะนี้ได้รับอนุญาตแล้ว

03:08.050 --> 03:10.100
แน่นอนว่าตอนนี้เขียนสิ่งนี้ที่นี่ได้ แต่เนื่องจากเราต้องการใช้ในที่ต่างๆ

03:10.100 --> 03:16.710
ในแอป ฉันจะสร้างไฟล์ใหม่และตั้งชื่อสิ่งที่ต้องทำนี้

03:16.710 --> 03:16.710
แบบอย่าง. ท.

03:16.710 --> 03:18.210
ชื่อไฟล์ขึ้นอยู่กับคุณ

03:18.210 --> 03:19.940
และที่นี่ ฉันต้องการส่งออกโดยพื้นฐานแล้ว

03:19.940 --> 03:21.710
ชื่ออินเทอร์เฟซ Todo ซึ่งฉันแค่ต้องการอธิบายว่า

03:21.710 --> 03:25.440
Todo ID ของเราควรมีลักษณะอย่างไรในแอปของฉัน ซึ่งฉันต้องการให้มี ID

03:25.440 --> 03:30.190
เป็นประเภทสตริง และคุณสมบัติข้อความเป็นประเภทสตริง

03:30.190 --> 03:35.900
และด้วยสิ่งนี้ส่งออกที่นี่ในส่วนประกอบของแอพ เราสามารถนำเข้าสิ่งนี้

03:35.900 --> 03:38.210
ดังนั้นเราจึงสามารถนำเข้า

03:39.080 --> 03:42.543
Todo จาก . /ทำ. แบบอย่าง.

03:43.900 --> 03:49.550
และที่นี่เราก็มีชุดสิ่งที่ต้องทำซึ่งแน่นอนว่าสั้นกว่าและอ่านง่ายกว่า

03:49.550 --> 03:52.870
และตอนนี้การอัปเดตสถานะของเรายังคงใช้งานได้ แต่นี่ค่อนข้างสะอาดกว่าเล็กน้อย

03:52.870 --> 04:04.270
และอย่างที่คุณเห็นเป็นสิ่งสำคัญมากที่นี่เมื่อทำงานกับบางอย่างเช่นอาร์เรย์ที่มีเนื้อหาประเภทใดที่คุณต้องการจัดเก็บในที่สุดหากคุณเริ่มต้นด้วยอาร์เรย์ว่าง

04:04.270 --> 04:06.250
อย่างไรก็ตามสิ่งนี้ใช้งานได้

04:06.250 --> 04:07.450
ข้อเสียของหลักสูตรคือ

04:07.450 --> 04:09.910
ตรรกะการอัปเดตสถานะของเราที่นี่ไม่ถูกต้อง

04:09.910 --> 04:17.400
เพราะตอนนี้ฉันมักจะเขียนทับอาร์เรย์ของ todos ที่มีอยู่ด้วยอาร์เรย์ใหม่ที่มีเพียงองค์ประกอบเดียวเท่านั้น

04:17.400 --> 04:23.730
และฉันต้องการเขียนทับด้วยอาร์เรย์ใหม่ที่มีองค์ประกอบเก่าทั้งหมดรวมถึงองค์ประกอบใหม่ด้วย

04:23.730 --> 04:26.583
ดังนั้นเรามาปรับตรรกะนี้ในการบรรยายครั้งต่อไป
