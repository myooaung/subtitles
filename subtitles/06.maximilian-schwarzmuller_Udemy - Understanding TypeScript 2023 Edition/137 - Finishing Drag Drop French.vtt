WEBVTT

00:02.300 --> 00:03.133
Instructeur : Donc, bien sûr,

00:03.133 --> 00:05.250
notre objectif n'est pas seulement d'enregistrer cette identification.

00:05.250 --> 00:09.340
Au lieu de cela, je veux extraire l'ID du projet ici dans le journal, dans

00:09.340 --> 00:11.110
le gestionnaire de dépôt.

00:11.110 --> 00:15.410
Et avec cela, l'objectif est de faire réellement avancer le projet maintenant,

00:15.410 --> 00:18.910
ou de changer le statut du projet, pour être précis.

00:18.910 --> 00:21.400
Maintenant, comment pouvons-nous faire ça ?

00:21.400 --> 00:26.063
Eh bien, dans notre état, je dirais, dans notre état de projet, où nous avons

00:26.950 --> 00:30.000
actuellement une méthode addProject, nous avons

00:30.000 --> 00:33.160
également besoin d'une méthode moveProject.

00:33.160 --> 00:35.060
Et le but de cette méthode sera

00:35.060 --> 00:38.550
essentiellement de changer le statut d'un projet.

00:38.550 --> 00:40.180
Bien sûr, vous pourriez aussi l'appeler

00:40.180 --> 00:42.970
SwitchProjectStatus, ou ce que vous voulez, mais puisque nous

00:42.970 --> 00:44.390
faisons du glisser-déposer, je

00:44.390 --> 00:46.440
vais l'appeler MoveProject.

00:46.440 --> 00:49.470
Ainsi, dans MoveProject, le but est de déplacer un projet

00:49.470 --> 00:53.860
de la liste dans laquelle il se trouve actuellement vers une nouvelle liste.

00:53.860 --> 00:55.460
Cela ne signifie pas toujours

00:55.460 --> 00:58.030
qu'il suffit de faire passer le statut du projet

00:58.030 --> 01:00.480
d'actif à terminé et vice-versa.

01:00.480 --> 01:02.870
Après tout, un utilisateur pourrait faire ceci,

01:02.870 --> 01:05.060
glisser-déposer dans la même boîte.

01:05.060 --> 01:07.120
Ainsi, si nous déclenchons toujours une

01:07.120 --> 01:10.680
méthode qui change le statut, nous aurions un effet inattendu où

01:10.680 --> 01:12.690
le fait de déposer dans la même boîte fait

01:12.690 --> 01:15.754
toujours passer le projet dans l'autre boîte.

01:15.754 --> 01:18.972
Donc, à la place, dans MoveProject, nous devons vraiment

01:18.972 --> 01:23.402
savoir quel projet déplacer, et quelle est la nouvelle boîte.

01:23.402 --> 01:24.235
Donc, quel est le nouveau statut.

01:25.940 --> 01:28.190
Donc, je m'attends à obtenir l'ID du projet

01:28.190 --> 01:31.410
ici, qui devrait être une chaîne, et le nouveau statut.

01:31.410 --> 01:34.130
Et le nouveau statut ici, bien sûr, peut

01:34.130 --> 01:36.410
être de type ProjectStatus.

01:38.580 --> 01:40.803
Et ensuite, dans MoveProject,

01:41.692 --> 01:44.320
je veux trouver un projet avec cet ID

01:44.320 --> 01:46.830
dans mon tableau de projets.

01:46.830 --> 01:49.090
Donc, ici, dans ce tableau de projets,

01:49.090 --> 01:51.680
et ensuite inverser son statut.

01:51.680 --> 01:54.580
Donc, pour cela, nous pouvons atteindre ce projet,

01:54.580 --> 01:57.450
trouver un projet là-dedans, et la méthode find

01:57.450 --> 01:59.440
est parfaite pour cela.

01:59.440 --> 02:01.210
Il s'exécute sur chaque élément de ce tableau,

02:01.210 --> 02:02.680
nous donne accès à chaque élément, et ensuite

02:02.680 --> 02:03.970
nous devons retourner vrai si c'est

02:03.970 --> 02:05.770
l'élément que nous recherchons.

02:05.770 --> 02:07.150
Et je veux retourner vrai

02:07.150 --> 02:09.860
si l'ID de l'élément que nous regardons actuellement

02:09.860 --> 02:12.830
est égal au projectId que je reçois comme argument ici,

02:12.830 --> 02:15.420
alors nous avons l'élément qui devrait changer,

02:15.420 --> 02:17.470
et là sur cet élément, nous avons juste

02:17.470 --> 02:21.070
à changer le statut pour le nouveau statut.

02:21.070 --> 02:22.653
Maintenant, cela pourrait être

02:23.490 --> 02:26.490
nul, donc ici je vais appeler cela, projet, stocké comme

02:26.490 --> 02:28.080
une constante appelée projet,

02:28.080 --> 02:30.550
et vérifier si le projet existe.

02:30.550 --> 02:34.160
Et s'il existe, alors je veux que le statut soit

02:34.160 --> 02:39.160
égal au nouveau statut ici. C'est aussi simple que cela.

02:39.250 --> 02:42.900
Cela va déjà changer l'objet dans le tableau et nous

02:42.900 --> 02:45.643
en avons pratiquement terminé.

02:46.970 --> 02:50.010
Bien sûr, nous n'avons pas tout à fait terminé.

02:50.010 --> 02:52.250
Nous devons maintenant faire savoir à tout

02:52.250 --> 02:56.040
le monde, à tous nos auditeurs, que quelque chose a changé dans notre projet,

02:56.040 --> 02:57.870
et qu'ils doivent rerendre.

02:57.870 --> 02:59.980
Nous devons donc à nouveau passer en revue tous

02:59.980 --> 03:01.910
les écouteurs, et puisque nous répéterions

03:01.910 --> 03:04.080
du code ici, je vais externaliser cela dans une

03:04.080 --> 03:07.920
nouvelle méthode privée, updateListeners pourrait être un nom viable, et là

03:07.920 --> 03:10.490
j'aurai cette boucle for, où nous passons en revue tous

03:10.490 --> 03:13.660
les écouteurs et faisons ensuite quelque chose.

03:13.660 --> 03:15.890
Et ensuite, j'appellerai ce updateListeners

03:15.890 --> 03:17.430
à la fois à partir de la méthode

03:17.430 --> 03:20.890
addProject et à partir de la méthode moveProject.

03:20.890 --> 03:23.033
Ici, seulement si nous avons changé quelque chose.

03:24.350 --> 03:26.100
Donc maintenant tous les listeners seront déclenchés.

03:26.100 --> 03:28.980
Et si vous vous souvenez, un écouteur dans notre application

03:28.980 --> 03:33.010
ici, conduit essentiellement à la liste pour rendre ses éléments.

03:33.010 --> 03:35.310
Donc cela fonctionnera exactement comme il se doit,

03:35.310 --> 03:37.940
ou cela devrait fonctionner exactement comme il se doit.

03:37.940 --> 03:40.640
Maintenant que nous avons la méthode moveProject, en bas

03:40.640 --> 03:43.730
dans le gestionnaire de dépôt, nous pouvons utiliser ceci.

03:43.730 --> 03:46.390
Là, nous pouvons maintenant utiliser le projectState,

03:46.390 --> 03:49.670
appeler moveProject, et passer dans l'ID du projet, et maintenant

03:49.670 --> 03:52.296
le nouveau statut du projet.

03:52.296 --> 03:54.190
Et le nouveau statut du projet

03:54.190 --> 03:57.880
dépend de la liste sur laquelle on dépose ça.

03:57.880 --> 03:59.630
Donc, je veux lier automatiquement

04:00.760 --> 04:01.790
mon gestionnaire de

04:01.790 --> 04:04.050
dépôt, de sorte que le mot-clé this dans le

04:04.050 --> 04:06.020
gestionnaire de dépôt se réfère à la classe

04:06.020 --> 04:08.500
environnante, et cette classe environnante est

04:08.500 --> 04:10.320
une liste de projets qui, si vous vous

04:10.320 --> 04:13.020
souvenez, aura une propriété de type ici, nous la stockons

04:13.020 --> 04:15.820
ici, nous avons un type, une propriété, et c'est actif

04:15.820 --> 04:18.120
ou terminé.

04:18.120 --> 04:21.000
Il ne nous reste plus qu'à traduire les termes "actif" et "terminé"

04:21.000 --> 04:22.640
en valeurs d'énumération.

04:22.640 --> 04:24.850
Donc, ici, je passe dans ce. et je vérifie si elle

04:24.850 --> 04:27.230
est égale à active, dans ce cas, nous passons

04:27.230 --> 04:31.580
dans ProjectStatus. Actif, comme nouveau statut

04:31.580 --> 04:33.750
du projet, car c'est le statut

04:33.750 --> 04:36.190
de la liste dans laquelle nous avons

04:36.190 --> 04:38.160
déplacé le projet.

04:38.160 --> 04:41.733
Sinon, nous passons dans ProjectStatus. Terminé, et laissez-moi reformater

04:42.660 --> 04:45.423
ça pour que ce soit plus facile à lire.

04:46.730 --> 04:48.110
Sur ce, faisons un essai.

04:48.110 --> 04:52.440
Sauvegardons tout, et ajoutons un nouveau projet ici, et maintenant faisons-le

04:52.440 --> 04:56.620
glisser vers les projets finis et cela change, et la même chose et si je le

04:56.620 --> 04:58.270
déplace en arrière.

04:58.270 --> 05:02.320
Si je laisse aller ici dans les projets actifs, rien ne change.

05:02.320 --> 05:04.400
Maintenant, vous verrez, si vous inspectez

05:04.400 --> 05:08.100
le DOM, que techniquement, il y a une redirection, ce qui n'est peut-être

05:08.100 --> 05:11.450
pas idéal, donc nous pourrions penser à trouver une solution qui vérifie

05:11.450 --> 05:15.290
si le statut a effectivement changé, et si ce n'est pas le cas, nous ne mettons

05:15.290 --> 05:17.400
pas à jour, c'est quelque chose que nous pouvons

05:17.400 --> 05:18.890
faire.

05:18.890 --> 05:22.620
Mais du point de vue de l'interface utilisateur, il se met à jour comme il se doit.

05:22.620 --> 05:24.570
Maintenant, ajoutons également

05:24.570 --> 05:27.120
un deuxième projet et voyons si cela détruit

05:27.120 --> 05:29.260
quelque chose, si tout fonctionne encore,

05:29.260 --> 05:31.750
et je dirais que cela semble décent, cela me

05:31.750 --> 05:33.720
semble assez bon.

05:33.720 --> 05:37.120
Tout semble fonctionner exactement comme il se doit.

05:37.120 --> 05:40.230
Le glisser-déposer fonctionne donc très bien ici, mais

05:40.230 --> 05:42.600
il y a cette amélioration que j'ai mentionnée

05:42.600 --> 05:46.305
dans l'état du projet, dans moveProject, lorsque j'ai appelé cette

05:46.305 --> 05:49.470
updateListeners, nous pouvons en fait vérifier si nous

05:49.470 --> 05:51.920
avons vraiment changé l'état.

05:51.920 --> 05:54.150
Donc ici nous pouvons vérifier si le projet,

05:54.150 --> 05:57.940
donc si nous en avons trouvé un, et si le statut du projet, est différent

05:57.940 --> 06:00.270
du nouveau statut, et seulement alors nous

06:00.270 --> 06:03.830
changeons le statut et mettons à jour les auditeurs.

06:03.830 --> 06:06.060
Si le statut est le même, nous ne le faisons

06:06.060 --> 06:09.310
pas et nous évitons le cycle inutile de rerender.

06:09.310 --> 06:10.143
Maintenant, avec

06:10.143 --> 06:12.900
cela, si nous l'avons sauvegardé et que nous ajoutons rapidement

06:12.900 --> 06:14.790
un nouveau projet, vous verrez que si j'inspecte

06:14.790 --> 06:18.190
les éléments ici et que vous regardez le L-I et vérifiez s'il clignote, ce

06:18.190 --> 06:21.800
qui signifie qu'il se rendrait à nouveau, il ne clignote pas ici, seul le dropable

06:21.800 --> 06:24.490
clignote, la classe que nous venons d'ajouter, mais le L-I

06:24.490 --> 06:27.970
ne clignote pas si je le dépose dans la même boîte, il clignote seulement si

06:27.970 --> 06:30.990
je le déplace vers une boîte différente.

06:30.990 --> 06:34.460
Et il devrait clignoter à ce moment-là parce qu'alors nous l'avons vraiment déplacé.

06:34.460 --> 06:36.180
Nous l'optimisons donc un peu, et

06:36.180 --> 06:39.050
nous avons maintenant un système de glisser-déposer qui

06:39.050 --> 06:42.223
fonctionne, le tout construit et alimenté par TypeScript.
