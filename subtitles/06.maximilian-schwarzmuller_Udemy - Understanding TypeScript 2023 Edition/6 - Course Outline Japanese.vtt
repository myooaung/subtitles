WEBVTT

00:02.130 --> 00:04.900
講師：このコースは内容が充実しています｡ 

00:04.900 --> 00:13.850
これからTypeScriptの魅力的な機能を順を追って学んでいきます｡

00:13.850 --> 00:16.210
もちろんTypeScriptsの基本的なところから始めます｡ 

00:16.210 --> 00:18.800
コアとなる型､ 一般的な動作､ 追加された新機能など､

00:18.800 --> 00:25.320
TypeScriptをよく理解するために必要なことをすべて紹介します｡

00:25.320 --> 00:27.690
このモジュールでは､

00:27.690 --> 00:40.840
TypeScriptコンパイラとその設定について詳しく見ていきます｡

00:40.840 --> 00:45.850
その後､ TypeScriptでサポートされる次世代JavaScriptの機能を探ります｡

00:45.850 --> 00:48.880
その仕組みとTypeScriptでの使い方を紹介します｡ 

00:48.880 --> 00:51.500
クラスとインターフェースについて説明します｡

00:51.500 --> 00:55.000
クラスの場合はバニラJavaScriptにもある超重要な概念ですが､

00:55.000 --> 00:59.510
インターフェースについてはTypeScriptの全く新しい機能であり､ それらが何であるか､

00:59.510 --> 01:06.210
何をするか､ そしてなぜそれらを使いたいと思うかを理解することができます｡

01:06.210 --> 01:08.190
それ以降は､ より深く掘り下げていくことになります｡ 

01:08.190 --> 01:13.280
ここでは､ TypeScriptの高度な型や機能全般について､

01:13.280 --> 01:20.110
次のレベルに進み､ これまで学んできた基本的なことをさらに発展させます｡

01:20.110 --> 01:22.630
また､ 高度な機能として､

01:22.630 --> 01:27.210
ジェネリックスという機能があります｡

01:27.210 --> 01:28.910
このモジュールでは､ それがどのようなもので､

01:28.910 --> 01:32.650
なぜ本当に役に立つのかを学びます｡

01:32.650 --> 01:34.570
続いて､ デコレーター｡ 

01:34.570 --> 01:40.550
デコレータはTypeScriptが追加したとてもクールな機能です｡

01:40.550 --> 01:43.810
このモジュールでは､ デコレータを詳しく見て､

01:43.810 --> 01:50.100
本当に便利なデコレータをいくつか作ってみましょう｡

01:50.100 --> 01:59.040
さて､ この講座は､ これらの個々の機能を比較的小さな簡単なデモで紹介するような構成になっています｡

01:59.040 --> 02:01.730
では､ これらの機能を実際のプロジェクトにどのように適用するか､

02:01.730 --> 02:08.140
より大きなイメージを持っていただくために､ 実際のプロジェクトで構築してみましょう｡

02:08.140 --> 02:14.420
このモジュールでは､ プロジェクト全体をゼロからTypeScriptで構築していくので､

02:14.420 --> 02:20.090
これらの機能の多く､ つまりここまでに学んだ機能のほとんどを実際に使ってみて､

02:20.090 --> 02:21.920
それらがどのように連携し､

02:21.920 --> 02:28.160
なぜプロジェクトの構築プロセスを簡略化するのかを見てみましょう｡

02:28.160 --> 02:29.940
このプロジェクトを作り終えたら､

02:29.940 --> 02:31.770
新しい問題を発見し､ それを解決する方法を学びます｡

02:31.770 --> 02:40.570
名前空間とモジュールを使って作業することで､ コードをより管理しやすく､ 読みやすいものにすることができます｡

02:40.570 --> 02:44.350
それを踏まえて､ TypeScriptを使ったWebpackも探求していきます｡

02:44.350 --> 02:47.690
Webpackは最新のフロントエンドWeb開発で使用するビルドツールで､

02:47.690 --> 02:49.530
TypeScriptと組み合わせて使用することで､

02:49.530 --> 02:52.970
より良いプロジェクトのセットアップができ､ 単純に特定のことが容易になり､

02:52.970 --> 02:57.990
煩わしい世界の最良のものを手に入れることができます｡

02:57.990 --> 03:04.120
素晴らしい開発体験と､ エンドユーザーにとって本当によく機能するコードです｡

03:04.120 --> 03:06.320
これが終われば､ TypeScriptとそれを使ったプロジェクトの進め方について､

03:06.320 --> 03:10.180
非常に確かなイメージを持つことができます｡

03:10.180 --> 03:16.820
実際のプロジェクトの多くで必要となるのはサードパーティのライブラリである｡

03:16.820 --> 03:29.030
ここでは､ TypeScriptを受け入れ､ TypeScriptをサポートしているサードパーティのライブラリもあるが､

03:29.030 --> 03:34.520
そうでないライブラリも多くある｡

03:34.520 --> 03:39.620
まあ､ それから､ 独自のモジュールに値するような特定のシナリオもあります｡

03:39.620 --> 03:41.570
TypeScriptを使ったReactのモジュール､

03:41.570 --> 03:53.260
TypeScriptだけでReactアプリケーション全体を構築する方法､ そしてNodeJSとエクスプレスエンドのタイプスクリプトについてのモジュールも用意していますので､

03:53.260 --> 04:06.760
TypeScriptの非常に人気のある特定の使用例について､ 新しい言語でまったく新しい方法でReactやNodeアプリケーションを突然作成できる素晴らしい例もご紹介します｡

04:06.760 --> 04:09.260
だから､ コースにはエキサイティングなコンテンツがたくさんあるんだ｡ 

04:09.260 --> 04:10.970
時間を無駄にしないようにしよう｡ 

04:10.970 --> 04:12.720
このコースでどのような効果が得られるのか､

04:12.720 --> 04:15.263
それ以降､ 飛び込んでみましょう｡
