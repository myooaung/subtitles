WEBVTT

00:02.180 --> 00:04.432
-: Agora uma fonte comum de confusão,

00:04.432 --> 00:06.300
quero esclarecer aqui, é a diferença

00:06.300 --> 00:09.030
entre os genéricos e os tipos de União.

00:09.030 --> 00:11.950
Por que você poderia confundir esses dois?

00:11.950 --> 00:14.440
Bem, por exemplo, nosso armazenamento de dados aqui.

00:14.440 --> 00:16.260
Se estamos aceitando tipos

00:16.260 --> 00:19.240
genéricos baseados nesses tipos, também poderíamos

00:19.240 --> 00:21.157
reescrever isso para dizer

00:21.157 --> 00:23.750
apenas: "Bem, queremos armazenar cordas,

00:23.750 --> 00:27.610
ou números, ou Booleans aqui, certo? Assim, poderíamos armazenar isso ou, para ser mais preciso, embrulhar

00:27.610 --> 00:30.470
isso entre parênteses para que possamos dizer qualquer

00:30.470 --> 00:32.660
um desses tipos como uma matriz.

00:32.660 --> 00:35.040
Então aqui, é claro, poderíamos também dizer:

00:35.040 --> 00:37.017
"Bem, o que recebemos aqui quando adicionamos

00:37.017 --> 00:38.420
um item é um fio, um número, ou

00:38.420 --> 00:39.740
um booleano, quando o removemos

00:39.740 --> 00:41.120
é o mesmo". Agora, qual é o problema desta abordagem?

00:41.120 --> 00:43.007
À primeira vista, pode parecer que consegue o mesmo, mas,

00:44.424 --> 00:45.880
na verdade, faz algo totalmente diferente.

00:45.880 --> 00:49.630
O que estamos dizendo aqui é que estamos armazenando qualquer

00:49.630 --> 00:52.310
tipo de dado ali, desde que seja uma série

00:52.310 --> 00:53.710
de cordas, números ou

00:53.710 --> 00:55.690
Booleanos, e também estamos adicionando

00:55.690 --> 00:57.220
qualquer tipo de dado aqui,

00:57.220 --> 00:59.730
seja uma corda, um número ou um Booleano,

00:59.730 --> 01:02.930
e o mesmo para remoção.

01:02.930 --> 01:04.670
Agora, já temos alguns erros lá embaixo, é claro, porque

01:04.670 --> 01:06.650
não posso mais inicializar isto de uma maneira genérica.

01:06.650 --> 01:09.830
Mas, além disso, funciona.

01:09.830 --> 01:12.520
Agora, o problema, no entanto, é para um aqui em cima,

01:12.520 --> 01:14.420
não estamos dizendo que isto é ou um conjunto

01:14.420 --> 01:15.890
de cordas, ou um conjunto de números,

01:15.890 --> 01:18.260
ou um conjunto de Booleanos.

01:18.260 --> 01:20.630
Isto diz que temos uma matriz que pode

01:20.630 --> 01:24.190
ter cordas, números e Booleanos misturados.

01:24.190 --> 01:26.290
Portanto, se você quiser dizer um

01:26.290 --> 01:30.190
conjunto de cordas, ou um conjunto de números, teremos que dizer

01:30.190 --> 01:32.100
conjunto de cordas, conjunto de

01:32.100 --> 01:34.403
números, ou conjunto booleano.

01:34.403 --> 01:36.020
Bem, nós podemos fazer isso, mas agora temos um problema aqui.

01:36.020 --> 01:39.100
Agora, estamos adicionando uma string, um número ou um Booleano,

01:39.100 --> 01:41.660
mas dependendo do que realmente definimos como

01:41.660 --> 01:44.710
sendo esta matriz de dados, seja uma matriz de números,

01:44.710 --> 01:46.750
ou uma matriz Booleana, ou uma matriz

01:46.750 --> 01:50.270
de string, não estamos autorizados a adicionar um número, ou um

01:50.270 --> 01:52.320
Booleano ou uma string.

01:52.320 --> 01:54.140
Se definirmos isto como um conjunto de cordas,

01:54.140 --> 01:55.870
então não podemos adicionar um número aqui.

01:55.870 --> 01:57.833
No entanto, aqui estou bem com qualquer parâmetro

01:57.833 --> 01:59.800
desde que seja um número, booleano, ou um fio.

01:59.800 --> 02:02.850
Portanto, o problema está aqui com os tipos de União.

02:02.850 --> 02:05.670
Aceitamos qualquer um destes valores toda vez

02:05.670 --> 02:08.380
que este método é chamado, ou este método.

02:08.380 --> 02:11.053
Portanto, não estamos dizendo: "Ei, sempre que estamos

02:11.053 --> 02:14.250
trabalhando com esta classe, você tem que decidir por um tipo

02:14.250 --> 02:15.397
e se ater a ele, em vez disso,

02:15.397 --> 02:18.150
estamos dizendo, sempre que você chama este método,

02:18.150 --> 02:21.830
você é livre para usar qualquer um destes tipos.

02:21.830 --> 02:23.440
Não é exatamente isso que queremos aqui.

02:23.440 --> 02:26.150
Se eu reverter isso para a configuração

02:26.150 --> 02:29.640
anterior, onde usamos tipos genéricos, então

02:29.640 --> 02:33.050
temos uma configuração diferente.

02:33.050 --> 02:34.810
Aqui, dizemos que você tem que escolher

02:37.580 --> 02:39.450
uma vez que tipo de dados você quer armazenar

02:39.450 --> 02:42.060
e então você só tem permissão para adicionar esse tipo

02:42.060 --> 02:43.950
exato de dados.

02:43.950 --> 02:45.750
Então aqui se eu adicionar um número,

02:45.750 --> 02:48.523
por exemplo, recebo um erro porque isso não é uma string

02:49.710 --> 02:52.623
e mostra que eu só quero gerenciar as strings aqui quando

02:53.830 --> 02:54.730
eu definir o tipo

02:54.730 --> 02:56.170
genérico.

02:56.170 --> 02:57.810
Essa é a diferença entre os tipos de sindicatos e os tipos genéricos.

02:57.810 --> 03:01.250
Os tipos de união podem ser ótimos se você quiser

03:01.250 --> 03:05.040
ter uma função que você pode chamar com um destes tipos

03:05.040 --> 03:06.920
toda vez que a chamar.

03:06.920 --> 03:08.690
Os tipos genéricos são ótimos

03:08.690 --> 03:11.570
se você quiser trancar um determinado tipo.

03:11.570 --> 03:13.460
Use o mesmo tipo em toda a instância

03:13.460 --> 03:15.510
de classe que você criar.

03:15.510 --> 03:18.380
Use o mesmo tipo em toda a função.

03:18.380 --> 03:20.070
É aí que você quer o tipo genérico.

03:20.070 --> 03:23.300
Você quer tipos de união quando você é flexível para

03:23.300 --> 03:25.850
ter um tipo diferente com cada chamada de

03:25.850 --> 03:28.120
método, com cada chamada de função.

03:28.120 --> 03:30.810
Depois, é possível utilizar tipos de sindicatos.

03:30.810 --> 03:33.470
Os tipos genéricos travam em um tipo.
