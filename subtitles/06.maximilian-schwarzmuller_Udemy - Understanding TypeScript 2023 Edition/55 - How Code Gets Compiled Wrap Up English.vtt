WEBVTT

1
00:00:02.200 --> 00:00:03.970
<v Instructor>Now this is it for this module.</v>

2
00:00:03.970 --> 00:00:06.080
Obviously modern JavaScript has a couple

3
00:00:06.080 --> 00:00:07.790
of other neat features as well.

4
00:00:07.790 --> 00:00:09.810
For example, I will cover classes

5
00:00:09.810 --> 00:00:11.120
in the class module

6
00:00:11.120 --> 00:00:13.470
and in general this is no JavaScript course.

7
00:00:13.470 --> 00:00:16.540
I don't wanna bore you with tons of

8
00:00:16.540 --> 00:00:19.030
JavaScript knowledge that doesn't really relate

9
00:00:19.030 --> 00:00:20.140
to TypeScript.

10
00:00:20.140 --> 00:00:22.700
I wanted to mention these specific features

11
00:00:22.700 --> 00:00:24.650
because it's good to know that TypeScript

12
00:00:24.650 --> 00:00:28.210
helps us use these features in a way that still runs

13
00:00:28.210 --> 00:00:29.580
in older browsers.

14
00:00:29.580 --> 00:00:32.920
Because that is something which you must never forget.

15
00:00:32.920 --> 00:00:35.600
Your code gets compiled.

16
00:00:35.600 --> 00:00:38.690
Currently, I have to target set to ES6

17
00:00:38.690 --> 00:00:41.540
and therefore if we check the dist folder

18
00:00:41.540 --> 00:00:44.280
we see constants on are all available

19
00:00:44.280 --> 00:00:46.030
in the app JS file as well.

20
00:00:46.030 --> 00:00:48.070
Object de structuring, there is a way

21
00:00:48.070 --> 00:00:50.600
to like this there because all these features

22
00:00:50.600 --> 00:00:52.480
are supported in ES6.

23
00:00:52.480 --> 00:00:55.230
If I would set the target to ES5

24
00:00:55.230 --> 00:00:56.590
and I comment out lib now,

25
00:00:56.590 --> 00:00:58.680
so that the correct libs are imported

26
00:00:58.680 --> 00:01:00.930
for the ES5 target which will happen

27
00:01:00.930 --> 00:01:03.680
by default, you will see that the generated

28
00:01:03.680 --> 00:01:05.290
code now looks quite different.

29
00:01:05.290 --> 00:01:08.140
It's way longer because now we're using var

30
00:01:08.140 --> 00:01:09.810
and TypeScript had to find work

31
00:01:09.810 --> 00:01:12.960
arounds for certain syntaxes that are not supported

32
00:01:12.960 --> 00:01:14.730
in ES5 JavaScript.

33
00:01:14.730 --> 00:01:18.240
For example, the de structuring syntax was removed.

34
00:01:18.240 --> 00:01:21.140
So that's an important thing to always keep in mind.

35
00:01:21.140 --> 00:01:23.490
TypeScript compiles your code,

36
00:01:23.490 --> 00:01:26.440
not just from TypeScript only features

37
00:01:26.440 --> 00:01:29.210
to regular JavaScript, but all them from

38
00:01:29.210 --> 00:01:33.000
modern JavaScript to old JavaScript

39
00:01:33.000 --> 00:01:35.433
if you tell TypeScript to do so.

