WEBVTT

00:02.050 --> 00:04.370
Instructeur: We kunnen geïsoleerde modules

00:04.370 --> 00:05.880
niet negeren, maar er is nog een

00:05.880 --> 00:08.000
andere optie, die hier eigenlijk niet eens

00:08.000 --> 00:10.810
genoemd wordt, die ik zelf toch wil noemen.

00:10.810 --> 00:14.680
En dat is de geen uitstoot bij fouten optie.

00:14.680 --> 00:16.200
U kunt dit instellen op waar of

00:16.200 --> 00:18.820
onwaar en de standaardinstelling is onwaar.

00:18.820 --> 00:19.653
Wat doet dit nu?

00:19.653 --> 00:21.330
Als we het op false zetten, laat ik u zien

00:21.330 --> 00:23.050
waar dit een probleem kan zijn.

00:23.050 --> 00:26.530
Het is een probleem als we een fout introduceren of het kan een

00:26.530 --> 00:27.590
probleem zijn.

00:27.590 --> 00:30.690
Laten we zeggen dat ik mijn knop heb en dit uitroepteken

00:30.690 --> 00:32.410
verwijder.

00:32.410 --> 00:34.750
Ook al begrijpen we niet helemaal wat er aan

00:34.750 --> 00:38.030
de hand is, het probleem hier is gewoon dat TypeScript niet

00:38.030 --> 00:40.610
weet dat we hier zeker een knop hebben.

00:40.610 --> 00:42.790
Immers, als we zoeken naar een knop krijgen

00:42.790 --> 00:45.990
we die misschien niet als er geen element in de DOM is dat aan

00:45.990 --> 00:47.540
deze selector voldoet, dan komt

00:47.540 --> 00:48.800
dit nu terug.

00:48.800 --> 00:50.910
En dat is eigenlijk waar TypeScript over klaagt.

00:50.910 --> 00:54.849
Hier openen we iets op een potentieel nul object

00:54.849 --> 00:57.200
en dat is niet goed.

00:57.200 --> 00:59.300
Dat is een fout die we hier hebben.

00:59.300 --> 01:02.120
Als we onze code compileren, krijgen we

01:02.120 --> 01:04.770
ook deze foutmelding in de console.

01:04.770 --> 01:08.210
Toch wordt het bestand aangemaakt.

01:08.210 --> 01:11.660
Dus zelfs als ik de app verwijder. jsfile wordt het opnieuw aangemaakt.

01:11.660 --> 01:13.910
Dus zelfs als we een fout hebben, creëert

01:13.910 --> 01:16.300
TypeScript een JavaScript-bestand.

01:16.300 --> 01:18.740
Dit kan wel of niet gewenst zijn.

01:18.740 --> 01:21.360
Misschien heb je een fout in je TypeScript-bestand en weet je

01:21.360 --> 01:22.980
niet echt hoe je daar omheen moet werken,

01:22.980 --> 01:26.000
maar weet je dat het geen probleem zal zijn in de uiteindelijke app.

01:26.000 --> 01:29.410
Zoals hier, zelfs als we het uitroepteken niet kennen.

01:29.410 --> 01:31.577
Als we het uitroepteken niet kennen,

01:31.577 --> 01:35.900
weten we misschien niet hoe we deze fout moeten uitschakelen.

01:35.900 --> 01:39.630
Maar toch weten we dat dit zal werken in onze pagina hier.

01:39.630 --> 01:41.890
Dus misschien kunnen we dit toch compileren,

01:41.890 --> 01:43.630
ondanks een fout.

01:43.630 --> 01:45.570
Maar in werkelijkheid moet u natuurlijk

01:45.570 --> 01:48.850
streven naar foutloze projecten en liever leren hoe u dit

01:48.850 --> 01:51.720
probleem kunt omzeilen dan het te negeren.

01:51.720 --> 01:54.590
Niettemin zou u dit op false kunnen zetten of helemaal

01:54.590 --> 01:57.590
niet, omdat false de standaard is, als u het goed vindt

01:57.590 --> 02:00.687
dat er JavaScript-bestanden worden gegenereerd als

02:00.687 --> 02:02.590
er een fout optreedt.

02:02.590 --> 02:04.240
Als u dit echter op true

02:04.240 --> 02:07.700
zet, worden er geen problematische bestanden

02:07.700 --> 02:09.100
gegenereerd.

02:09.100 --> 02:10.910
Als ik dit nu herhaal...

02:12.440 --> 02:15.110
Zie je, er wordt eigenlijk niets gegenereerd.

02:15.110 --> 02:18.180
Zelfs de analyses. ts bestand wordt niet

02:18.180 --> 02:21.440
uitgevoerd als er naast console nog andere

02:21.440 --> 02:26.440
inhoud in staat. log, zie je dat het niet gegenereerd wordt.

02:26.550 --> 02:27.560
En de reden daarvoor

02:27.560 --> 02:29.600
is dat we een fout in het bestand hebben.

02:29.600 --> 02:32.940
En als een bestand niet compileert, worden geen bestanden

02:32.940 --> 02:34.300
weggelaten.

02:34.300 --> 02:35.810
Hier moeten we er dus voor zorgen

02:35.810 --> 02:38.850
dat we deze fout oplossen voordat we TypeScript weer bestanden

02:38.850 --> 02:40.890
voor ons kunnen laten compileren.

02:40.890 --> 02:43.530
En daarom is het een optie die ik meestal graag instel, omdat

02:43.530 --> 02:46.830
ik niet geïnteresseerd ben in het verkrijgen van JavaScript-bestanden

02:46.830 --> 02:49.703
als ik nog steeds fouten heb in mijn TypeScript-bestanden.
