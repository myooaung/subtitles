WEBVTT

00:02.050 --> 00:04.370
教师：我们不能忽略隔离模块,

00:04.370 --> 00:05.880
但还有一个选项,

00:05.880 --> 00:08.000
实际上这里甚至没有提到,

00:08.000 --> 00:10.810
但我还是想提一下｡

00:10.810 --> 00:14.680
这就是错误时不发射选项｡ 

00:14.680 --> 00:16.200
您可以将其设置为true或false,

00:16.200 --> 00:18.820
默认值为false｡

00:18.820 --> 00:19.653
这是干什么用的？

00:19.653 --> 00:23.050
如果我们将其设置为false, 让我来告诉您哪里可能会出现问题｡

00:23.050 --> 00:27.590
如果我们引入了一个错误, 它就是一个问题, 或者它可能是一个问题｡

00:27.590 --> 00:32.410
比如说, 我有按钮, 我去掉了这个感叹号.

00:32.410 --> 00:34.750
尽管我们还不完全明白到底发生了什么,

00:34.750 --> 00:40.610
但问题是TypeScript不知道我们这里确实有一个按钮｡

00:40.610 --> 00:42.790
毕竟, 当查询按钮时, 如果DOM中没有满足此选择器的元素,

00:42.790 --> 00:48.800
我们可能不会得到按钮, 那么现在将返回｡

00:48.800 --> 00:50.910
这基本上就是TypeScript抱怨的问题｡ 

00:50.910 --> 00:54.849
这里我们访问了一个潜在的空对象,

00:54.849 --> 00:57.200
这是不好的｡

00:57.200 --> 00:59.300
这是一个错误｡ 

00:59.300 --> 01:04.770
如果我们编译代码, 控制台中也会出现此错误｡

01:04.770 --> 01:08.210
尽管如此, 还是会建立档案｡ 

01:08.210 --> 01:11.660
所以即使我删除了应用程序｡  jsfile文件中, 则将重新创建它｡ 

01:11.660 --> 01:16.300
因此, 即使出现错误, TypeScript也会创建一个JavaScript文件｡

01:16.300 --> 01:18.740
这可能是需要的, 也可能不是｡ 

01:18.740 --> 01:21.360
也许你在你的TypeScript文件中有一个错误,

01:21.360 --> 01:26.000
你不知道如何解决它, 但你知道它不会在最终的应用程序中出现问题｡

01:26.000 --> 01:29.410
就像这里, 即使我们不知道感叹号｡ 

01:29.410 --> 01:31.577
如果我们不知道感叹号,

01:31.577 --> 01:35.900
我们可能不知道如何禁用这个错误, 基本上｡

01:35.900 --> 01:39.630
但我们仍然知道, 这将在我们的页面在这里工作｡ 

01:39.630 --> 01:43.630
因此, 尽管有错误, 但我们编译它可能没有问题｡

01:43.630 --> 01:45.570
但是, 当然, 在现实中,

01:45.570 --> 01:48.850
你应该以无错误的项目为目标,

01:48.850 --> 01:51.720
而不是忽略它｡

01:51.720 --> 01:54.590
尽管如此, 您可以将其设置为false或根本不设置它,

01:54.590 --> 02:02.590
因为false是默认值, 如果您在遇到错误时可以生成JavaScript文件的话｡

02:02.590 --> 02:04.240
但是, 如果将此设置为true,

02:04.240 --> 02:09.100
则不会生成有问题的文件｡

02:09.100 --> 02:10.910
如果我现在重新运行...

02:12.440 --> 02:15.110
你看, 实际上什么都没有产生｡ 

02:15.110 --> 02:18.180
甚至是分析｡  如果除控制台外还有其他内容,

02:18.180 --> 02:26.440
则不会输出ts文件｡

02:26.440 --> 02:26.440
日志时, 您会看到它没有生成｡ 

02:26.550 --> 02:29.600
原因是文件中有错误｡

02:29.600 --> 02:34.300
如果任何文件编译失败, 则不会忽略任何文件｡

02:34.300 --> 02:40.890
因此, 在这里, 我们必须确保在让TypeScript再次为我们编译文件之前修复此错误｡

02:40.890 --> 02:43.530
因此, 这是我通常喜欢设置的一个选项, 因为如果我的TypeScript文件中仍然有错误,

02:43.530 --> 02:49.703
我对获取JavaScript文件不感兴趣｡
