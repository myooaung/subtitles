WEBVTT

00:02.190 --> 00:05.900
Instructor: Con todo nuestro trabajo de herencia fuera del camino, volvamos

00:05.900 --> 00:08.400
a renderizar los elementos de la lista, vamos a

00:08.400 --> 00:10.590
renderizar más detalles allí.

00:10.590 --> 00:12.800
Y, como ya he dicho, asegurémonos también

00:12.800 --> 00:14.900
de renderizarlos de forma diferente.

00:14.900 --> 00:18.050
Hasta ahora hemos seguido un enfoque orientado a objetos,

00:18.050 --> 00:22.440
y por ejemplo, para nuestra lista de proyectos tenemos una clase y cuando

00:22.440 --> 00:25.130
instanciamos esa clase tal caja se renderiza

00:25.130 --> 00:26.560
aquí.

00:26.560 --> 00:30.000
Y lo mismo para la entrada, tenemos una clase de entrada de proyecto, y

00:30.000 --> 00:33.460
cuando instanciamos eso, esta área de entrada de proyecto aquí en la parte

00:33.460 --> 00:34.880
superior se renderiza.

00:34.880 --> 00:38.330
Ahora, ¿por qué no hacemos lo mismo para nuestro elemento de proyecto

00:38.330 --> 00:42.290
y, a continuación, dentro de la lista de proyectos en los proyectos renderizados

00:42.290 --> 00:45.030
en lugar de crear un elemento de la lista como esta, nos

00:45.030 --> 00:48.290
acaba de instanciar nuestra clase de elemento de proyecto y en

00:48.290 --> 00:52.230
el constructor de esa clase de elemento de proyecto que luego hacer toda la

00:52.230 --> 00:55.100
inicialización y así sucesivamente.

00:55.100 --> 00:57.240
Esa es mi idea al menos.

00:57.240 --> 00:59.850
Ahora, como siempre, puedes pausar el vídeo aquí e

00:59.850 --> 01:01.680
intentar esto por tu cuenta primero,

01:01.680 --> 01:04.610
pero después de una breve pausa, que te doy para que pauses

01:04.610 --> 01:06.960
el vídeo si quieres, lo haremos juntos.

01:09.080 --> 01:12.980
Así que vamos a hacer eso juntos, y para ello por encima de la clase

01:12.980 --> 01:17.940
de lista de proyectos, voy a añadir la clase de elemento de proyecto, y esta será

01:17.940 --> 01:20.610
la clase responsable de la representación

01:20.610 --> 01:22.920
de un solo elemento de proyecto.

01:22.920 --> 01:25.620
Ahora, la clase del elemento del proyecto siempre

01:25.620 --> 01:28.940
debe extender el componente, porque será una clase que se

01:28.940 --> 01:31.600
encargará de renderizar algo en la pantalla, y

01:31.600 --> 01:34.800
para eso tenemos nuestra clase componente, cierto, para

01:34.800 --> 01:36.410
eso la construimos.

01:36.410 --> 01:40.100
Así que pasamos una plantilla, un elemento de acogida y así sucesivamente.

01:40.100 --> 01:43.560
Así que en el elemento de proyecto, por supuesto, necesitamos un constructor,

01:43.560 --> 01:47.030
un constructor en el que luego también tenemos que llamar a super.

01:47.030 --> 01:50.650
Y en realidad antes de llamar a super, vamos a establecer estos

01:50.650 --> 01:53.610
tipos genéricos para la clase base para heredar.

01:53.610 --> 01:56.440
Tenga en cuenta, el primer tipo que pasamos allí

01:56.440 --> 02:00.410
es el elemento de acogida, por lo que donde queremos hacer algo.

02:00.410 --> 02:02.760
El segundo tipo genérico que pasamos, es el

02:02.760 --> 02:04.800
elemento que hacemos renderizar.

02:04.800 --> 02:07.040
Así que en el caso del ítem del proyecto,

02:07.040 --> 02:10.550
eso significa que el primer elemento que pasamos es, ya que

02:10.550 --> 02:13.570
es el lugar donde queremos renderizar algo, es una

02:13.570 --> 02:15.587
Lista U HTML, una lista desordenada,

02:15.587 --> 02:17.370
porque cada ítem del proyecto

02:17.370 --> 02:20.440
será renderizado dentro de nuestra, bueno lista

02:20.440 --> 02:22.550
desordenada.

02:22.550 --> 02:26.160
Y el segundo elemento será un elemento HTML LI, por lo que

02:26.160 --> 02:29.313
el elemento concreto de la lista que se creará.

02:30.210 --> 02:35.210
Ahora elija super, tenemos que proporcionar el Id del elemento en el que el elemento

02:35.280 --> 02:38.210
del proyecto debe ser renderizado.

02:38.210 --> 02:41.410
Y, por supuesto, ese Id no es fijo, porque

02:41.410 --> 02:43.030
tenemos dos listas

02:43.030 --> 02:45.040
en las que el elemento podría

02:45.040 --> 02:47.480
ser renderizado.

02:47.480 --> 02:51.760
Así que espero obtener ese Id aquí en el constructor, allí

02:51.760 --> 02:55.400
quiero obtener el Id del host, digamos, que debe

02:55.400 --> 02:56.233
ser una cadena,

02:56.233 --> 02:59.140
podemos enviar eso a super.

02:59.140 --> 03:02.220
Sin embargo, lo primero que enviamos a super, es el

03:02.220 --> 03:05.520
Id de la plantilla, para un solo elemento de la lista,

03:05.520 --> 03:07.410
y que es esta plantilla aquí.

03:07.410 --> 03:09.620
Así que podemos envolver eso.

03:09.620 --> 03:11.580
Ahora, por supuesto, eso es una plantilla

03:11.580 --> 03:13.580
muy simple, usted podría discutir si realmente

03:13.580 --> 03:16.380
necesita eso, es sólo un elemento de la lista, podríamos crear

03:16.380 --> 03:18.920
que en el código con el documento crear elemento, así,

03:18.920 --> 03:22.560
pero con el fin de ser capaz de reutilizar nuestra cláusula base de componentes

03:22.560 --> 03:26.240
que se basa en las plantillas, vamos a utilizar este enfoque.

03:26.240 --> 03:29.680
Así que el proyecto único es el Id de la plantilla, el Id del

03:29.680 --> 03:32.550
host, entonces es el Id que quiero reenviar al constructor

03:32.550 --> 03:34.500
de la cláusula base.

03:34.500 --> 03:37.150
Entonces, para responder a la pregunta, si

03:37.150 --> 03:40.010
esto debe ser rendido al principio o al final.

03:40.010 --> 03:43.020
Bueno, en realidad cada nuevo elemento de la lista debería

03:43.020 --> 03:45.630
añadirse al final de la misma, aunque eso es totalmente

03:45.630 --> 03:48.450
a tu gusto, también puedes añadirlo al principio si

03:48.450 --> 03:51.150
quieres, pero aquí voy a ir con el final y por lo tanto

03:51.150 --> 03:53.423
voy a pasar falso aquí.

03:54.410 --> 03:57.153
Y luego para el nuevo elemento Id, vender

03:57.153 --> 03:59.330
el Id que debe ser asignado al

03:59.330 --> 04:01.580
elemento recién creado.

04:01.580 --> 04:03.760
Espero obtenerlo también desde fuera, porque

04:03.760 --> 04:06.860
también será diferente para cada elemento del proyecto, después

04:06.860 --> 04:09.860
de todo, renderizaremos múltiples elementos de este tipo.

04:09.860 --> 04:12.240
Así que aquí espero obtener el Id que todo para

04:12.240 --> 04:15.060
ser una cadena, en la que luego sólo hacia adelante.

04:15.060 --> 04:17.820
Así que ese es ahora el constructor.

04:17.820 --> 04:22.250
Ahora todo tendría sentido para almacenar el proyecto que pertenece a este

04:23.500 --> 04:26.080
elemento de proyecto en esta clase de elemento

04:26.080 --> 04:27.280
de proyecto.

04:27.280 --> 04:31.020
Y con proyecto me refiero al proyecto basado en nuestra clase

04:31.020 --> 04:33.770
de proyecto, que hemos creado ahí arriba.

04:33.770 --> 04:37.490
Esto es básicamente con lo que trabajamos, los datos con los que trabajamos.

04:37.490 --> 04:40.440
Y quiero almacenar el proyecto que pertenece a este elemento

04:40.440 --> 04:44.000
de proyecto renderizado en esa clase de elemento de proyecto.

04:44.000 --> 04:47.650
Por lo tanto aquí podemos añadir un proyecto de propiedad

04:47.650 --> 04:51.510
privada por ejemplo, pero debe ser de tipo proyecto así.

04:51.510 --> 04:55.350
En el constructor entonces obtenemos el Id y podemos simplemente

04:55.350 --> 04:58.090
cambiar esto para obtener realmente el proyecto

04:58.090 --> 05:00.950
aquí como esto, y luego simplemente decir que este

05:00.950 --> 05:04.340
proyecto es igual al proyecto, y aquí ya que cada proyecto

05:04.340 --> 05:07.360
tiene una propiedad Id, simplemente reenviamos el

05:07.360 --> 05:09.440
proyecto. id.

05:09.440 --> 05:12.330
Creo que esa configuración tiene un poco más de sentido.

05:12.330 --> 05:14.710
Ahora tenemos que añadir un par de métodos, tenemos

05:14.710 --> 05:17.760
que añadir un método de configuración, por supuesto.

05:17.760 --> 05:22.300
Necesitamos añadir el método render content, que es requerido por nuestra

05:22.300 --> 05:25.040
clase base que estamos extendiendo.

05:25.040 --> 05:29.850
Y siempre llama a configurar y renderizar contenido aquí al

05:29.850 --> 05:32.000
final del constructor.

05:32.000 --> 05:34.890
Ahora con respecto a la configuración, no hay nada que hacer

05:34.890 --> 05:37.730
en este momento para el contenido que queremos renderizar,

05:37.730 --> 05:40.050
definitivamente hay trabajo que hacer.

05:40.050 --> 05:42.710
Ahora tenemos una plantilla muy simple aquí,

05:42.710 --> 05:44.520
y en realidad podríamos cambiar

05:44.520 --> 05:47.650
esto aquí en el archivo HTML de índice para ser un poco

05:47.650 --> 05:50.850
más complejo, de modo que cada proyecto tiene una etiqueta

05:50.850 --> 05:54.250
h2, tiene una etiqueta h3 debajo de eso digamos, y también

05:54.250 --> 05:56.740
tiene un párrafo, de modo que podemos mostrar

05:56.740 --> 05:59.170
el título del proyecto, el número de personas

05:59.170 --> 06:03.290
asignadas tal vez, y luego la descripción.

06:03.290 --> 06:05.720
Y luego aquí en app ts en la representación de contenido,

06:05.720 --> 06:09.050
sólo tenemos que llegar a estos diferentes elementos en nuestro

06:09.050 --> 06:10.130
elemento, por lo que a

06:10.130 --> 06:12.090
la etiqueta h2 y así sucesivamente, y luego

06:12.090 --> 06:14.440
insertar algo de contenido.

06:14.440 --> 06:17.300
Así que ahí podemos llegar a este elemento, que es nuestro

06:17.300 --> 06:19.360
elemento renderizado, por lo que es nuestro

06:19.360 --> 06:21.750
elemento LI renderizado.

06:21.750 --> 06:24.970
Y ahí tenemos que seleccionar estas diferentes cosas.

06:24.970 --> 06:27.270
Así que podemos utilizar el selector de consulta h2, y establecer

06:27.270 --> 06:28.930
el contenido del texto aquí.

06:28.930 --> 06:33.930
Digamos que a esto. proyecto. para hacer el título allí.

06:34.350 --> 06:36.470
Por supuesto, deberíamos añadir un signo de exclamación

06:36.470 --> 06:39.010
aquí para dejar claro que siempre obtendremos este elemento

06:39.010 --> 06:40.700
que conocemos con certeza porque forma

06:40.700 --> 06:42.563
parte de nuestra plantilla.

06:43.980 --> 06:46.870
Bueno, entonces en realidad, podemos repetir

06:46.870 --> 06:49.170
esto, pero ahora busque la etiqueta h3,

06:49.170 --> 06:52.990
y allí quiero salida el número de personas, sin embargo, donde

06:52.990 --> 06:55.690
la gente es el nombre de la propiedad, sin embargo

06:55.690 --> 06:58.030
voy a ajustar esto un poco.

06:58.030 --> 07:00.300
Ahora para uno esto aquí, es un número, y este

07:00.300 --> 07:01.690
es una cadena, así que en realidad

07:01.690 --> 07:04.110
voy a llamar a la cadena aquí.

07:04.110 --> 07:06.900
Pero ese no es el problema principal, en realidad

07:06.900 --> 07:11.160
quiero ajustar esto para que produzca algo más que un número aquí, pero

07:11.160 --> 07:12.590
volveré a eso.

07:14.960 --> 07:17.260
En primer lugar, vamos a repetir esto una vez

07:17.260 --> 07:19.600
más, y la consulta para el párrafo aquí.

07:19.600 --> 07:22.623
Y ponlo igual a este proyecto. descripción.

07:23.810 --> 07:25.810
Ahora, de nuevo voy a ajustar esto más tarde, por ahora

07:25.810 --> 07:27.140
vamos a dejarlo como está.

07:27.140 --> 07:28.870
Y con eso tenemos un elemento

07:28.870 --> 07:29.880
de proyecto que debe

07:29.880 --> 07:33.470
ser renderizado, y que debe exponer todo su contenido.

07:33.470 --> 07:35.460
Así que ahora tenemos que usar el elemento

07:35.460 --> 07:37.880
de proyecto, y el lugar para usarlo es la lista de proyectos,

07:37.880 --> 07:40.450
porque eso hace la lista de proyectos.

07:40.450 --> 07:44.150
Y allí, específicamente en los proyectos de render, es donde tenemos

07:44.150 --> 07:46.630
que asegurarnos de renderizar los elementos

07:46.630 --> 07:48.260
de nuestro proyecto.

07:48.260 --> 07:51.140
Aquí sí que repasamos todos los elementos de

07:51.140 --> 07:52.860
los proyectos asignados.

07:52.860 --> 07:55.870
Y los proyectos asignados es esta propiedad aquí,

07:55.870 --> 07:58.960
que tiene una lista o una matriz de proyectos.

07:58.960 --> 08:02.330
Así que ahora aquí en este bucle, en lugar de crear un

08:02.330 --> 08:04.720
elemento de la lista manualmente y así

08:04.720 --> 08:08.270
sucesivamente, voy a deshacerse de todo eso y simplemente

08:08.270 --> 08:11.870
decir nuevo elemento del proyecto aquí, y ahora dos elementos

08:11.870 --> 08:13.740
del proyecto.

08:13.740 --> 08:16.110
Tenemos que pasar la idea del anfitrión,

08:16.110 --> 08:21.090
ahora que por supuesto es el Id que se sentó en nuestro elemento de la

08:21.090 --> 08:22.730
lista aquí.

08:22.730 --> 08:25.990
Así que básicamente esto. elemento. id, es el Id del elemento

08:25.990 --> 08:27.800
host, porque este elemento

08:27.800 --> 08:29.980
que es la lista desordenada debe

08:29.980 --> 08:31.670
ser el host.

08:31.670 --> 08:34.210
Entonces el segundo argumento aquí, es el proyecto

08:34.210 --> 08:37.400
y ese es el elemento purgado aquí básicamente.

08:37.400 --> 08:40.950
Así que esta constante que obtenemos dentro del bucle.

08:40.950 --> 08:42.790
Y ahora el adjunto ocurrirá dentro

08:42.790 --> 08:46.530
del ítem del proyecto o dentro de la cláusula base de la clase del componente,

08:46.530 --> 08:49.770
que los ítems del proyecto extienden.

08:49.770 --> 08:53.570
Y la instanciación del elemento del proyecto debería ser todo lo que necesitamos hacer.

08:53.570 --> 08:58.380
Así que si guardamos eso y volvemos y tenemos este código aquí de nuevo,

08:58.380 --> 09:00.890
o tenemos esta entrada de nuevo.

09:00.890 --> 09:04.140
Verás, esto se renderiza, y no se ve tan mal.

09:04.140 --> 09:06.320
Ahora hay dos cosas que no me gustan,

09:06.320 --> 09:10.220
por supuesto esa viñeta de aquí, no me gusta demasiado.

09:10.220 --> 09:12.710
Y sólo teniendo el libre aquí,

09:12.710 --> 09:15.590
todo no es súper feliz con esto.

09:15.590 --> 09:17.293
Entonces, ¿cómo podemos arreglar esto ahora?

09:18.730 --> 09:21.380
Para arreglar la viñeta, inspeccionemos nuestro contenido.

09:21.380 --> 09:24.110
Y lo que vemos ahí es que el elemento de la lista

09:24.110 --> 09:28.060
en realidad se renderiza fuera de la lista desordenada.

09:28.060 --> 09:29.600
Así que no está dentro de ella.

09:29.600 --> 09:32.710
Si estuviera dentro, entonces funcionaría correctamente,

09:32.710 --> 09:35.530
pero no puedo arrastrarlo hasta allí.

09:35.530 --> 09:38.050
Así que tenemos que asegurarnos de que se renderiza dentro de

09:38.050 --> 09:39.000
la lista desordenada.

09:39.000 --> 09:41.363
Así que vamos a averiguar por qué no es así.

09:42.220 --> 09:46.710
Probablemente no es el caso porque en el elemento del proyecto,

09:46.710 --> 09:50.430
paso false aquí, al constructor de la cláusula base,

09:50.430 --> 09:53.660
y pasar false aquí significa que no se está insertando

09:53.660 --> 09:57.640
al principio, y eso a su vez significa que en attach tenemos

09:57.640 --> 10:02.670
antes y como valor aquí, donde se está insertando.

10:02.670 --> 10:05.660
Sin embargo, esto es lo que queremos que ocurra,

10:05.660 --> 10:08.360
así que probablemente no sea el problema.

10:08.360 --> 10:12.420
Bueno, el problema sigue siendo que, por supuesto, lo insertamos

10:12.420 --> 10:14.970
en el elemento anfitrión.

10:14.970 --> 10:17.650
Y ahora pensemos de nuevo, ¿cuál es el elemento anfitrión

10:17.650 --> 10:19.460
de la lista de proyectos?

10:19.460 --> 10:20.900
Y eso es al final lo que importa

10:20.900 --> 10:23.850
aquí, porque cuando renderizamos nuestros proyectos,

10:23.850 --> 10:25.620
creamos un nuevo elemento de proyecto,

10:25.620 --> 10:31.240
y reenvío el Id de nuestro elemento aquí, del elemento renderizado en la lista de proyectos a

10:31.240 --> 10:34.180
elemento de proyecto.

10:34.180 --> 10:36.670
Así que esa será la idea del elemento anfitrión de un

10:36.670 --> 10:38.120
solo elemento del proyecto.

10:38.120 --> 10:40.720
Pero, ¿qué es este elemento aquí?

10:40.720 --> 10:43.770
Este elemento de aquí no es la lista desordenada que

10:43.770 --> 10:44.900
tenemos en esa caja,

10:44.900 --> 10:47.350
es la propia caja es nuestra sección.

10:47.350 --> 10:50.260
Si inspeccionamos la plantilla vemos que la sección aquí es

10:50.260 --> 10:53.810
lo que realmente se renderiza para nuestra clase de lista de proyectos.

10:53.810 --> 10:55.500
No es sólo la lista, es la sección

10:55.500 --> 10:58.300
que también incluye un encabezado.

10:58.300 --> 11:00.320
Así que en realidad tenemos que acceder

11:00.320 --> 11:02.020
a la lista dentro de nuestro elemento

11:02.020 --> 11:05.070
aquí, y luego obtener acceso a la idea de esa lista, porque

11:05.070 --> 11:08.710
aquí, en realidad establecer un Id en esa lista, por lo que habrá

11:08.710 --> 11:12.230
un Id, sólo tenemos que agarrar el derecho.

11:12.230 --> 11:14.880
Por lo tanto, hacerse a la idea del elemento

11:14.880 --> 11:16.790
en sí no es correcto.

11:16.790 --> 11:20.580
En cambio aquí, deberíamos tener la idea de la lista desordenada en

11:20.580 --> 11:23.580
nuestro elemento, y sabemos con certeza que habrá una

11:23.580 --> 11:25.310
lista desordenada, por lo que podemos

11:25.310 --> 11:26.350
saltarnos la comprobación

11:26.350 --> 11:30.063
de nulos añadiendo el signo de exclamación.

11:30.930 --> 11:34.463
Ahora con eso añadido, si añadimos un nuevo elemento aquí, esto se

11:35.490 --> 11:37.680
ve mejor, ahora el punto de bala se ha ido,

11:37.680 --> 11:39.920
porque ahora el estilo adecuado se aplica,

11:39.920 --> 11:43.100
ya que el LI, el elemento de la lista es ahora realmente añadido

11:43.100 --> 11:46.320
dentro de la lista desordenada como se puede ver.

11:46.320 --> 11:49.390
Eso es una cosa, ahora pasemos a ese cinco, porque

11:49.390 --> 11:51.180
poner un cinco aquí no es realmente

11:51.180 --> 11:52.990
lo que quiero hacer.

11:52.990 --> 11:56.143
¿Qué tal si se emite un poco más de información útil?
