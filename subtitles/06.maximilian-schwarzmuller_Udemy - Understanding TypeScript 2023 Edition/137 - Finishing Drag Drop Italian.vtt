WEBVTT

00:02.300 --> 00:03.133
Istruttore: Naturalmente,

00:03.133 --> 00:05.250
il nostro obiettivo non è solo quello di registrare l'ID.

00:05.250 --> 00:09.340
Invece, voglio estrarre l'ID del progetto qui nel log,

00:09.340 --> 00:11.110
nel gestore di drop.

00:11.110 --> 00:15.410
E con questo, l'obiettivo è quello di spostare il progetto ora, o di

00:15.410 --> 00:18.910
cambiare lo stato del progetto, per essere precisi.

00:18.910 --> 00:21.400
Come possiamo farlo?

00:21.400 --> 00:26.063
Nel nostro stato, direi, nel nostro stato di progetto, dove attualmente

00:26.950 --> 00:30.000
abbiamo un metodo addProject, abbiamo bisogno

00:30.000 --> 00:33.160
anche di un metodo moveProject.

00:33.160 --> 00:35.060
L'obiettivo di questo metodo sarà

00:35.060 --> 00:38.550
quello di cambiare sostanzialmente lo stato di un progetto.

00:38.550 --> 00:40.180
Naturalmente, si potrebbe anche

00:40.180 --> 00:42.970
chiamarla SwitchProjectStatus o come si vuole, ma dato

00:42.970 --> 00:44.390
che si tratta di un drag-and-drop,

00:44.390 --> 00:46.440
la chiamerò MoveProject.

00:46.440 --> 00:49.470
Quindi, in MoveProject l'obiettivo è spostare un

00:49.470 --> 00:53.860
progetto dall'elenco in cui si trova attualmente a un nuovo elenco.

00:53.860 --> 00:55.460
Ora, questo non significa

00:55.460 --> 00:58.030
che si debba sempre cambiare lo stato del progetto

00:58.030 --> 01:00.480
da attivo a finito e viceversa.

01:00.480 --> 01:02.870
Dopo tutto, un utente potrebbe fare questo, trascinare

01:02.870 --> 01:05.060
e rilasciare nella stessa casella.

01:05.060 --> 01:07.120
Quindi, se attivassimo sempre un metodo

01:07.120 --> 01:10.680
che commuta lo stato, avremmo un effetto inaspettato, in cui

01:10.680 --> 01:12.690
la caduta nella stessa casella commuta

01:12.690 --> 01:15.754
ancora il progetto nell'altra casella.

01:15.754 --> 01:18.972
In MoveProject, invece, dobbiamo sapere

01:18.972 --> 01:23.402
quale progetto spostare e quale sia la nuova casella.

01:23.402 --> 01:24.235
Quindi, qual è il nuovo status.

01:25.940 --> 01:28.190
Quindi, mi aspetto di ottenere l'ID del progetto,

01:28.190 --> 01:31.410
che dovrebbe essere una stringa, e il nuovo stato.

01:31.410 --> 01:34.130
Il nuovo stato, ovviamente, può essere

01:34.130 --> 01:36.410
di tipo ProjectStatus.

01:38.580 --> 01:40.803
E poi, all'interno di MoveProject,

01:41.692 --> 01:44.320
voglio trovare un progetto con quell'ID

01:44.320 --> 01:46.830
nel mio array di progetti.

01:46.830 --> 01:49.090
Quindi qui, in questa serie di progetti,

01:49.090 --> 01:51.680
e poi capovolgere il suo stato.

01:51.680 --> 01:54.580
Per questo possiamo raggiungere questo progetto,

01:54.580 --> 01:57.450
trovare un progetto lì dentro e il metodo find

01:57.450 --> 01:59.440
è perfetto per questo.

01:59.440 --> 02:01.210
Viene eseguito su ogni elemento di questo

02:01.210 --> 02:02.680
array, ci dà accesso a ogni elemento

02:02.680 --> 02:03.970
e poi deve restituire true se è

02:03.970 --> 02:05.770
l'elemento che stiamo cercando.

02:05.770 --> 02:07.150
E voglio restituire true

02:07.150 --> 02:09.860
se l'ID dell'elemento che stiamo guardando

02:09.860 --> 02:12.830
è uguale al projectId che ricevo come argomento,

02:12.830 --> 02:15.420
quindi abbiamo l'elemento che deve cambiare

02:15.420 --> 02:17.470
e su questo elemento dobbiamo solo

02:17.470 --> 02:21.070
cambiare lo stato al nuovo stato.

02:21.070 --> 02:22.653
Ora questo potrebbe essere

02:23.490 --> 02:26.490
nullo, quindi lo chiamerò progetto, memorizzato come

02:26.490 --> 02:28.080
costante chiamata progetto,

02:28.080 --> 02:30.550
e verificherò se il progetto esiste.

02:30.550 --> 02:34.160
E se esiste, voglio impostare lo stato

02:34.160 --> 02:39.160
uguale al nuovo stato qui. Semplice.

02:39.250 --> 02:42.900
Questo cambierà già l'oggetto nell'array

02:42.900 --> 02:45.643
e in pratica abbiamo finito.

02:46.970 --> 02:50.010
Naturalmente, però, non abbiamo finito del tutto.

02:50.010 --> 02:52.250
Ora dobbiamo comunicare a tutti, a tutti i

02:52.250 --> 02:56.040
nostri ascoltatori, che qualcosa è cambiato nel nostro progetto e che

02:56.040 --> 02:57.870
devono eseguire il rendering.

02:57.870 --> 02:59.980
Quindi dobbiamo passare di nuovo in rassegna

02:59.980 --> 03:01.910
tutti gli ascoltatori e, poiché qui ripeteremmo

03:01.910 --> 03:04.080
il codice, lo esternalizzerò in un nuovo metodo

03:04.080 --> 03:07.920
privato, updateListeners potrebbe essere un nome valido, e in esso avremo questo

03:07.920 --> 03:10.490
ciclo for, in cui passiamo in rassegna tutti gli ascoltatori

03:10.490 --> 03:13.660
e poi facciamo qualcosa.

03:13.660 --> 03:15.890
E poi chiamerò questo updateListeners

03:15.890 --> 03:17.430
sia dal metodo addProject,

03:17.430 --> 03:20.890
sia dal metodo moveProject.

03:20.890 --> 03:23.033
Qui, solo se abbiamo cambiato qualcosa.

03:24.350 --> 03:26.100
Quindi ora tutti gli ascoltatori saranno attivati.

03:26.100 --> 03:28.980
E se ricordate, un ascoltatore nella nostra applicazione

03:28.980 --> 03:33.010
porta fondamentalmente all'elenco per renderizzare i suoi elementi.

03:33.010 --> 03:35.310
Quindi funzionerà esattamente come dovrebbe,

03:35.310 --> 03:37.940
o dovrebbe funzionare esattamente come dovrebbe.

03:37.940 --> 03:40.640
Ora abbiamo il metodo moveProject, laggiù

03:40.640 --> 03:43.730
nel gestore di drop, e possiamo usare questo.

03:43.730 --> 03:46.390
Ora possiamo usare il projectState,

03:46.390 --> 03:49.670
chiamare moveProject e passare l'ID del progetto

03:49.670 --> 03:52.296
e il nuovo stato del progetto.

03:52.296 --> 03:54.190
E lo stato del nuovo progetto

03:54.190 --> 03:57.880
dipende dall'elenco in cui lo lasciamo.

03:57.880 --> 03:59.630
Quindi, voglio autobindare

04:00.760 --> 04:01.790
il mio gestore di drop,

04:01.790 --> 04:04.050
in modo che la parola chiave this nel gestore

04:04.050 --> 04:06.020
di drop si riferisca alla classe

04:06.020 --> 04:08.500
circostante e questa classe circostante

04:08.500 --> 04:10.320
è un elenco di progetti che, se

04:10.320 --> 04:13.020
ricordate, avrà una proprietà type qui, la memorizziamo

04:13.020 --> 04:15.820
qui, abbiamo una proprietà type, che è attiva o

04:15.820 --> 04:18.120
finita.

04:18.120 --> 04:21.000
Quindi ora dobbiamo solo tradurre attivo o finito

04:21.000 --> 04:22.640
nei nostri valori enum.

04:22.640 --> 04:24.850
Ecco, io passo in questo. e verifico se è

04:24.850 --> 04:27.230
uguale a active, nel qual caso

04:27.230 --> 04:31.580
passiamo ProjectStatus. Attivo, come nuovo stato del

04:31.580 --> 04:33.750
progetto, perché è lo stato

04:33.750 --> 04:36.190
dell'elenco in cui abbiamo spostato

04:36.190 --> 04:38.160
il progetto.

04:38.160 --> 04:41.733
Altrimenti, si passa a ProjectStatus. Finito, e permettetemi di riformattarlo

04:42.660 --> 04:45.423
per renderlo più facile da leggere.

04:46.730 --> 04:48.110
Con questo facciamo una prova.

04:48.110 --> 04:52.440
Salviamo tutto, aggiungiamo un nuovo progetto e trasciniamolo

04:52.440 --> 04:56.620
su progetti finiti e si cambia, e lo stesso se lo sposto

04:56.620 --> 04:58.270
indietro.

04:58.270 --> 05:02.320
Se lascio andare qui i progetti attivi, non cambia nulla.

05:02.320 --> 05:04.400
Ora, se si ispeziona il DOM, si noterà

05:04.400 --> 05:08.100
che tecnicamente viene eseguito un nuovo invio, il che potrebbe

05:08.100 --> 05:11.450
non essere l'ideale, quindi si potrebbe pensare a una soluzione

05:11.450 --> 05:15.290
che verifichi se lo stato è effettivamente cambiato e, in caso contrario,

05:15.290 --> 05:17.400
non venga aggiornato, cosa che si può

05:17.400 --> 05:18.890
fare.

05:18.890 --> 05:22.620
Ma dal punto di vista dell'interfaccia utente, si aggiorna proprio come dovrebbe.

05:22.620 --> 05:24.570
Ora aggiungiamo anche un secondo

05:24.570 --> 05:27.120
progetto e vediamo se questo distrugge

05:27.120 --> 05:29.260
qualcosa, se tutto funziona ancora,

05:29.260 --> 05:31.750
e direi che sembra decente, mi sembra abbastanza

05:31.750 --> 05:33.720
buono.

05:33.720 --> 05:37.120
Tutto sembra funzionare esattamente come dovrebbe.

05:37.120 --> 05:40.230
Quindi il trascinamento funziona bene, ma c'è un miglioramento

05:40.230 --> 05:42.600
di cui ho parlato prima nello stato del

05:42.600 --> 05:46.305
progetto, in moveProject, quando ho chiamato questo updateListeners,

05:46.305 --> 05:49.470
possiamo verificare se abbiamo davvero cambiato lo

05:49.470 --> 05:51.920
stato.

05:51.920 --> 05:54.150
Qui possiamo verificare se il progetto,

05:54.150 --> 05:57.940
se ne abbiamo trovato uno, e se lo stato del progetto è diverso

05:57.940 --> 06:00.270
dal nuovo stato, solo allora cambiamo

06:00.270 --> 06:03.830
lo stato e aggiorniamo gli ascoltatori.

06:03.830 --> 06:06.060
Se lo stato è lo stesso, non lo facciamo

06:06.060 --> 06:09.310
ed evitiamo un inutile ciclo di rerender.

06:09.310 --> 06:10.143
Quindi, se lo salviamo

06:10.143 --> 06:12.900
e aggiungiamo rapidamente un nuovo progetto, vedrete

06:12.900 --> 06:14.790
che se ispeziono gli elementi qui e osservate

06:14.790 --> 06:18.190
la L-I e controllate se questa lampeggia, il che significa che verrebbe

06:18.190 --> 06:21.800
renderizzata, non lampeggia qui, lampeggia solo il droppable, la classe

06:21.800 --> 06:24.490
che abbiamo appena aggiunto, ma la L-I non lampeggia

06:24.490 --> 06:27.970
se la lascio cadere nella stessa casella, lampeggia solo se la sposto

06:27.970 --> 06:30.990
in una casella diversa.

06:30.990 --> 06:34.460
E dovrebbe lampeggiare, perché in quel caso l'abbiamo davvero spostato.

06:34.460 --> 06:36.180
Quindi ora ottimizziamo un po'

06:36.180 --> 06:39.050
questo aspetto e abbiamo un drag-and-drop funzionante,

06:39.050 --> 06:42.223
tutto costruito e alimentato con TypeScript.
