WEBVTT

00:02.340 --> 00:04.100
ผู้บรรยาย: ดังนั้นเราจึงเริ่มด้วย

00:04.100 --> 00:06.670
generics และหวังว่าจะชัดเจนว่า TypeScript ทำอะไรที่นี่

00:06.670 --> 00:14.370
เราส่งข้อมูลพิเศษบางอย่างไปยังฟังก์ชันการผสาน เพื่อให้เราสามารถทำงานในลักษณะที่ดีขึ้นด้วยผลลัพธ์ของฟังก์ชันการผสาน

00:14.370 --> 00:16.540
นั่นคือสิ่งที่ยาชื่อสามัญมีไว้สำหรับ

00:16.540 --> 00:19.890
ช่วยให้คุณสามารถทำงานกับข้อมูลของคุณต่อไปในวิธีที่เหมาะสมที่สุดของ

00:19.890 --> 00:21.960
TypeScript

00:21.960 --> 00:23.820
ทีนี้, ในกรณีนี้, ตรงนี้,

00:23.820 --> 00:25.810
เราจะมีปัญหาถ้าผมผ่านเข้าไป,

00:25.810 --> 00:28.570
สมมุติว่าเลข 30 ตรงนี้

00:28.570 --> 00:32.010
แน่นอน ตอนนี้ TypeScript ส่งข้อผิดพลาดเนื่องจากพยายามเข้าถึงอายุ

00:32.010 --> 00:33.870
แต่การเข้าถึงชื่อจะใช้งานได้

00:33.870 --> 00:37.100
อย่างไรก็ตาม หากเราบันทึกสิ่งนั้น มันจะคอมไพล์โดยไม่มีข้อผิดพลาด

00:37.100 --> 00:43.910
และถ้าฉันพิมพ์วัตถุที่ผสานโดยรวม เราจะเห็นว่าสิ่งที่ฉันได้รับกลับมาเป็นเพียงงานอดิเรกและชื่อในวัตถุของฉัน ซึ่งสมเหตุสมผลเพราะ

00:43.910 --> 00:54.590
30 เป็นตัวเลข และเมื่อเราผ่านจุดนั้นไปแล้ว เป็นอาร์กิวเมนต์ที่สองของการกำหนดออบเจกต์ ซึ่งในที่สุดเราก็ทำที่นี่ ทีนี้ มันก็ล้มเหลวอย่างเงียบๆ

00:54.590 --> 00:57.860
JavaScript ไม่ส่งข้อผิดพลาด ไม่บ่น

00:57.860 --> 01:02.270
แต่แน่นอนว่ามันไม่ได้รวม 30 เข้ากับวัตถุที่สร้างขึ้นใหม่

01:02.270 --> 01:04.690
คุณจะเห็นว่าไม่มี 30 ในวัตถุนี้

01:04.690 --> 01:06.540
ตอนนี้ JavaScript จะทำอย่างไร

01:06.540 --> 01:08.470
เนื่องจาก 30 ไม่ใช่อ็อบเจกต์

01:08.470 --> 01:12.150
การกำหนดอ็อบเจ็กต์เท่านั้นจึงจะสามารถรวมอ็อบเจ็กต์ต่างๆ

01:12.150 --> 01:14.090
เข้าด้วยกันได้

01:14.090 --> 01:15.410
สุดท้ายแล้วเราต้องการจะบันทึกอะไร

01:15.410 --> 01:20.040
เราไม่สนใจประเภทที่แน่นอน เราไม่สนใจโครงสร้างที่แน่นอนของวัตถุที่คุณระบุที่นี่สำหรับ

01:20.040 --> 01:22.980
U และ T

01:22.980 --> 01:26.600
แต่สิ่งที่เราสนใจคือพารามิเตอร์ทั้งสอง

01:26.600 --> 01:34.420
ทั้งประเภท T และ U ควรเป็นวัตถุชนิดใดก็ได้ แต่ควรเป็นวัตถุตลอดเวลา

01:34.420 --> 01:36.830
และตอนนี้เราไม่ได้พูดอย่างนั้น

01:36.830 --> 01:37.820
ในตอนนี้ เราแค่พูดว่า

01:37.820 --> 01:40.110
พวกมันควรเป็นประเภทไหนก็ได้ ฉันไม่สนใจ

01:40.110 --> 01:41.750
บ่อยไปก็ไม่เป็นไร

01:41.750 --> 01:46.683
คุณต้องการจำกัดประเภทของ T และ U ที่นี่ แก้ปัญหาประเภททั่วไปของคุณ

01:47.830 --> 01:51.540
คุณสามารถทำได้ด้วยข้อจำกัดประเภท

01:51.540 --> 01:58.280
สำหรับประเภททั่วไป คุณสามารถตั้งค่าข้อจำกัดบางอย่างเกี่ยวกับประเภทประเภททั่วไปของคุณ

01:58.280 --> 02:05.150
และคุณทำได้โดยใช้คำสำคัญเพิ่มเติมที่นี่ในวงเล็บเหลี่ยมตามประเภทที่คุณต้องการจำกัด

02:05.150 --> 02:07.410
ในที่นี้เราสามารถพูดได้ว่าวัตถุขยาย

02:07.410 --> 02:09.020
และด้วยที่ฉันกำลังบอกว่า

02:09.020 --> 02:12.740
ประเภท T สามารถเป็นวัตถุใดๆ ที่มีโครงสร้างใดก็ได้

02:12.740 --> 02:15.340
แต่มันต้องเป็นวัตถุ

02:15.340 --> 02:17.480
เราสามารถทำเช่นเดียวกันกับ U

02:17.480 --> 02:19.040
และถ้าฉันทำอย่างนั้น คุณจะเห็นว่าตอนนี้ฉันได้รับข้อผิดพลาดใน

02:19.040 --> 02:21.820
IDE แล้ว

02:21.820 --> 02:23.980
และถ้าฉันพยายามบันทึก ฉันยังได้รับข้อผิดพลาดในคอมไพเลอร์

02:23.980 --> 02:26.150
เนื่องจากอาร์กิวเมนต์ประเภท 30

02:26.150 --> 02:31.133
ที่นี่ไม่สามารถกำหนดให้กับวัตถุประเภทได้

02:32.080 --> 02:34.480
แน่นอนว่านั่นคือพฤติกรรมที่เราต้องการที่นี่

02:34.480 --> 02:38.190
ตอนนี้เราถูกบังคับให้ส่งวัตถุอีกครั้ง

02:38.190 --> 02:39.940
อ๊ะ แบบนี้

02:39.940 --> 02:41.990
ตอนนี้เราถูกบังคับให้ส่งสิ่งนี้อีกครั้ง

02:41.990 --> 02:45.290
ดังนั้นเราจึงปรับปรุงฟังก์ชันนี้เพราะตอนนี้มันใช้งานได้จริง

02:45.290 --> 02:48.980
และเรารู้ว่าการกำหนดวัตถุต้องการสองวัตถุ

02:48.980 --> 02:56.370
ในท้ายที่สุด เราต้องการรับประกันว่าเราได้วัตถุสองชิ้นที่นี่โดยการตั้งค่าข้อจำกัดบางอย่างสำหรับประเภททั่วไปของเรา

02:56.370 --> 02:58.630
และข้อจำกัดตรงนี้สามารถเป็นอะไรก็ได้

02:58.630 --> 03:03.730
คุณสามารถอ้างถึงอ็อบเจกต์ สตริง คุณสามารถใช้ประเภทของคุณเองได้หากคุณมี

03:03.730 --> 03:06.700
คุณยังสามารถใช้ประเภทสหภาพได้ที่นี่หากต้องการ คุณมีความยืดหยุ่นมาก

03:06.700 --> 03:10.510
คุณสามารถตั้งค่าข้อจำกัดใดๆ ที่คุณต้องการ

03:10.510 --> 03:13.720
และแน่นอน คุณไม่จำเป็นต้องจำกัดประเภททั่วไปทั้งหมด

03:13.720 --> 03:16.560
หากคุณต้องการจำกัด U คุณก็ทำได้

03:16.560 --> 03:19.620
ในตัวอย่างนี้ มันสมเหตุสมผลแล้วที่จะจำกัดทั้งสองอย่าง

03:19.620 --> 03:24.640
เพราะการกำหนดวัตถุต้องการสองวัตถุที่นี่ แต่คุณมีความยืดหยุ่นมาก

03:24.640 --> 03:26.620
สิ่งสำคัญคือต้องตระหนักถึงแนวคิดเรื่องข้อจำกัด

03:26.620 --> 03:30.560
เพราะนั่นทำให้คุณสามารถทำงานกับประเภททั่วไปได้ดีขึ้นด้วยวิธีที่เหมาะสมที่สุด

03:30.560 --> 03:37.513
ซึ่งจะหลีกเลี่ยงข้อผิดพลาดที่ไม่จำเป็นหรือพฤติกรรมแปลกๆ เหมือนที่เราเคยทำมาก่อน
