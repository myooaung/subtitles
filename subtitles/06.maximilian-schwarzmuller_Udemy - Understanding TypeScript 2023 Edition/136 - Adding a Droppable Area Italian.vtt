WEBVTT

00:02.180 --> 00:04.910
Istruttore: Visivamente, siamo in grado di trascinare

00:04.910 --> 00:07.240
e rilasciare, ma tecnicamente, in JavaScript,

00:07.240 --> 00:10.410
il nostro script non ha idea di cosa stia accadendo.

00:10.410 --> 00:12.030
Ma per noi umani è chiaro che

00:12.030 --> 00:14.810
stiamo trascinando proprio questo oggetto.

00:14.810 --> 00:16.300
Ma se diamo un'occhiata al nostro

00:16.300 --> 00:20.320
codice, come fa JavaScript a sapere cosa viene trascinato dove?

00:20.320 --> 00:21.980
Come potremmo aggiornare il nostro

00:21.980 --> 00:24.440
stato in base alle informazioni che abbiamo ora?

00:24.440 --> 00:26.690
Non sarebbe davvero possibile.

00:26.690 --> 00:28.810
Quindi, per farlo funzionare in JavaScript,

00:28.810 --> 00:30.840
dobbiamo tornare alla classe del nostro

00:30.840 --> 00:33.960
elemento trascinabile, l'elemento del progetto.

00:33.960 --> 00:36.710
In questo caso, nel dragStartHandler, la registrazione

00:36.710 --> 00:38.250
dell'evento della console

00:38.250 --> 00:39.950
non è tutto da fare.

00:39.950 --> 00:42.200
In realtà non c'è bisogno di farlo.

00:42.200 --> 00:45.070
Utilizziamo invece il nostro oggetto evento,

00:45.070 --> 00:48.210
che ha una proprietà di trasferimento dati.

00:48.210 --> 00:50.440
È speciale per gli eventi di trascinamento, che

00:50.440 --> 00:53.280
si disponga di una proprietà di trasferimento dei dati.

00:53.280 --> 00:55.330
Su questa proprietà è possibile allegare

00:55.330 --> 00:57.530
dati all'evento di trascinamento e in seguito

00:57.530 --> 00:59.520
sarà possibile estrarre tali dati al momento

00:59.520 --> 01:01.390
del rilascio e il browser, in JavaScript,

01:01.390 --> 01:03.730
dietro le quinte, memorizzerà tali dati durante

01:03.730 --> 01:06.430
l'operazione di trascinamento, assicurandosi che

01:06.430 --> 01:09.470
i dati ottenuti al momento del rilascio siano gli stessi che

01:09.470 --> 01:12.020
sono stati allegati qui.

01:12.020 --> 01:15.520
Per questo si può chiamare setData sul trasferimento dei dati,

01:15.520 --> 01:18.910
ma il trasferimento dei dati potrebbe essere nullo.

01:18.910 --> 01:21.080
Dobbiamo quindi aggiungere un punto esclamativo,

01:21.080 --> 01:23.460
perché sappiamo che non sarà nullo.

01:23.460 --> 01:25.700
Ci si potrebbe chiedere: perché potrebbe essere nullo?

01:25.700 --> 01:29.060
L'evento di trascinamento è sempre lo stesso tipo di evento,

01:29.060 --> 01:31.340
ma in base all'ascoltatore che lo attiva

01:31.340 --> 01:34.190
o all'evento esatto che si sta ascoltando, il trasferimento

01:34.190 --> 01:37.520
dei dati non è necessariamente disponibile.

01:37.520 --> 01:39.896
Quindi non tutti gli eventi legati al trascinamento

01:39.896 --> 01:42.640
forniscono un oggetto evento con l'oggetto trasferimento

01:42.640 --> 01:44.073
dati.

01:45.320 --> 01:46.620
Il dragStartHandler che si

01:46.620 --> 01:49.080
attiva sull'evento di avvio del trascinamento, tuttavia,

01:49.080 --> 01:52.840
lo possiede, quindi possiamo chiamare tranquillamente setData.

01:52.840 --> 01:56.330
Ora setData riceve due argomenti.

01:56.330 --> 01:59.900
Il primo argomento è un identificatore del formato

01:59.900 --> 02:01.320
dei dati e sono disponibili

02:01.320 --> 02:04.970
alcuni formati possibili.

02:04.970 --> 02:08.210
In allegato troverete un approfondimento sul drag and drop

02:08.210 --> 02:10.890
con JavaScript, dove potrete saperne di più.

02:10.890 --> 02:12.270
Tra l'altro, potrete saperne

02:12.270 --> 02:15.140
di più nel mio corso JavaScript Complete Guide.

02:15.140 --> 02:18.390
Qui abbiamo bisogno del formato text/plain, il

02:18.390 --> 02:20.010
che significa che stiamo

02:20.010 --> 02:24.190
per allegare del testo semplice ai dati trasferiti, e questo

02:24.190 --> 02:25.430
è importante.

02:25.430 --> 02:28.250
Non attaccheremo i nostri oggetti qui, il nostro progetto

02:28.250 --> 02:29.740
stesso, continueremo a rimanere

02:29.740 --> 02:31.390
intrappolati.

02:31.390 --> 02:34.340
Quindi non il progetto completo che può essere visualizzato qui.

02:34.340 --> 02:37.955
Invece, è sufficiente allegare l'ID del progetto,

02:37.955 --> 02:41.645
perché questo ci consentirà in seguito di recuperare

02:41.645 --> 02:44.870
quel progetto dal nostro stato.

02:44.870 --> 02:47.320
È quindi sufficiente allegare l'ID.

02:47.320 --> 02:50.240
Vogliamo trasferire solo una piccola quantità di dati,

02:50.240 --> 02:52.053
in modo da risparmiare memoria.

02:53.100 --> 02:56.300
Ora stiamo allegando i dati all'evento di trascinamento.

02:56.300 --> 02:58.330
Un'altra cosa che voglio fare è, nel

02:58.330 --> 03:00.610
trasferimento dei dati dove dobbiamo aggiungere

03:00.610 --> 03:02.340
il punto esclamativo, impostare

03:02.340 --> 03:05.430
la proprietà effectAllowed su move.

03:05.430 --> 03:08.610
In pratica controlla l'aspetto del cursore e comunica

03:08.610 --> 03:12.440
al browser un po' della nostra intenzione, ovvero che intendiamo

03:12.440 --> 03:15.200
spostare un elemento da A a B.

03:15.200 --> 03:16.760
Un'alternativa potrebbe essere

03:16.760 --> 03:19.230
copia, dove si ottiene un cursore diverso che

03:19.230 --> 03:20.820
indica all'utente che si sta

03:20.820 --> 03:23.120
copiando e non spostando, ma in questo caso

03:23.120 --> 03:25.140
vogliamo spostare l'elemento, il che

03:25.140 --> 03:26.580
significa che con un drop lo

03:26.580 --> 03:28.810
rimuoviamo dal suo posto originale e lo

03:28.810 --> 03:31.360
aggiungiamo al nuovo posto.

03:31.360 --> 03:34.940
Quindi i dati sono allegati qui e questo è il primo passo.

03:34.940 --> 03:36.870
Torniamo ora al punto in cui vogliamo

03:36.870 --> 03:38.470
che avvenga il rilascio, ovvero

03:38.470 --> 03:40.360
l'elenco dei progetti.

03:40.360 --> 03:43.400
Lì, inizia nel dragLeaveHandler.

03:43.400 --> 03:46.370
Ora, in questa applicazione, in questo progetto,

03:46.370 --> 03:49.200
abbiamo solo un'operazione di trascinamento

03:49.200 --> 03:51.500
e si tratta dei nostri progetti.

03:51.500 --> 03:54.970
Nelle applicazioni più grandi si possono avere diversi pezzi

03:54.970 --> 03:57.220
sulla pagina che possono essere trascinati

03:57.220 --> 04:01.080
e rilasciati e non si vuole rendere tutto trascinabile ovunque.

04:01.080 --> 04:06.080
Pertanto, qui nel dragOverHandler, che si attiva quando si entra in un'area

04:06.230 --> 04:09.580
trascinabile con un elemento collegato al mouse,

04:09.580 --> 04:11.860
voglio verificare se il trascinamento

04:11.860 --> 04:14.970
è davvero consentito.

04:14.970 --> 04:19.546
Per questo, verificherò se l'evento. dataTransfer, anche

04:19.546 --> 04:21.060
qui è disponibile,

04:21.060 --> 04:22.950
quindi se è disponibile,

04:22.950 --> 04:25.500
la proprietà tipi di trasferimento

04:25.500 --> 04:29.140
dati ha un primo valore che è uguale

04:29.140 --> 04:34.140
a text/plain.

04:34.300 --> 04:39.280
Ciò significa semplicemente che i dati allegati all'evento di

04:39.280 --> 04:42.390
trascinamento sono di quel formato?

04:42.390 --> 04:43.360
E naturalmente lo è,

04:43.360 --> 04:45.030
perché questo è il formato che abbiamo

04:45.030 --> 04:47.320
impostato nel dragStartHandler.

04:47.320 --> 04:50.490
Quindi, ad esempio, non è possibile inserire immagini

04:50.490 --> 04:51.380
o simili, che hanno

04:51.380 --> 04:53.180
un formato di dati diverso.

04:53.180 --> 04:56.173
Ho appena consentito l'abbandono del testo semplice.

04:57.170 --> 04:59.450
Naturalmente ora devo sostituire nuovamente

04:59.450 --> 05:01.020
il trattino basso con un evento,

05:01.020 --> 05:03.280
perché mi riferisco ad esso qui.

05:03.280 --> 05:07.150
Se questo è il caso, so che voglio consentire una caduta e quindi

05:07.150 --> 05:09.070
aggiornerò lo sfondo.

05:09.070 --> 05:11.620
E un'altra cosa importante da fare è chiamare

05:11.620 --> 05:13.960
l'evento. preventDefault.

05:13.960 --> 05:15.950
Ma perché dobbiamo chiamarlo così?

05:15.950 --> 05:18.860
Perché in JavaScript un trascinamento funziona

05:18.860 --> 05:22.480
in modo tale che una caduta è effettivamente consentita,

05:22.480 --> 05:26.119
quindi l'evento di caduta si attiverà solo su un elemento,

05:26.119 --> 05:29.649
se nel gestore del trascinamento su quello stesso elemento

05:29.649 --> 05:32.750
si è chiamato preventDefault.

05:32.750 --> 05:35.360
Si può pensare a questo come a quanto segue.

05:35.360 --> 05:38.870
L'impostazione predefinita per gli eventi di trascinamento di

05:38.870 --> 05:41.350
JavaScript è di non consentire il rilascio, quindi

05:41.350 --> 05:44.889
occorre impedire l'impostazione predefinita nel gestore del trascinamento

05:44.889 --> 05:48.120
per dire a JavaScript e al browser che per questo elemento, in

05:48.120 --> 05:49.670
questo caso per questa sezione

05:49.670 --> 05:54.870
per questa classe senza progetto, si vuole consentire il rilascio.

05:54.870 --> 05:57.920
Quindi, solo se questo è un dragOverHandler, l'evento drop

05:57.920 --> 06:00.020
si attiverà effettivamente quando l'utente

06:00.020 --> 06:01.220
lascia la presa.

06:01.220 --> 06:02.910
Altrimenti, se l'utente lascia

06:02.910 --> 06:05.060
la presa, l'evento drop non si attiverà.

06:05.060 --> 06:07.090
In questo modo, il gestore del drop

06:07.090 --> 06:08.960
verrà eseguito, naturalmente,

06:08.960 --> 06:12.620
perché ora stiamo permettendo che ciò avvenga.

06:12.620 --> 06:16.440
Quindi nel gestore del drop possiamo accettare l'evento e per il momento

06:16.440 --> 06:20.610
limitiamoci alla console. registrare l'evento in questo

06:20.610 --> 06:23.003
modo per verificare se funziona.

06:23.940 --> 06:28.100
Ora salviamo tutto, aggiungiamo un nuovo elemento

06:28.100 --> 06:30.220
e trasciniamo questo.

06:30.220 --> 06:33.430
Se lo lascio qui nei progetti finiti, si vede che

06:33.430 --> 06:36.490
l'evento di trascinamento si attiva qui.

06:36.490 --> 06:39.360
E questo proviene dalla riga 236, che

06:39.360 --> 06:43.050
è appunto questa riga del gestore di drop.

06:43.050 --> 06:45.950
Ora, se ispezioniamo l'evento di trascinamento qui nel browser,

06:45.950 --> 06:47.447
vediamo che abbiamo un mucchio di

06:47.447 --> 06:50.830
dati qui e abbiamo anche la proprietà di trasferimento dei dati.

06:50.830 --> 06:52.920
Lì vedrete l'effetto che abbiamo

06:52.920 --> 06:54.320
permesso, che è Move,

06:54.320 --> 06:57.930
e vedrete anche che non c'è nulla.

06:57.930 --> 07:01.600
Solo perché i dati erano già stati cancellati

07:01.600 --> 07:04.510
dopo l'inserimento nella console.

07:04.510 --> 07:06.100
E poiché abbiamo inserito l'oggetto

07:06.100 --> 07:08.160
qui e gli oggetti sono tipi di riferimento, vediamo

07:08.160 --> 07:10.830
l'ultima istantanea in cui i dati sono stati persi.

07:10.830 --> 07:13.360
In realtà, nel momento in cui lo abbandoniamo,

07:13.360 --> 07:16.910
saremo in grado di estrarre i dati dal trasferimento dei dati.

07:16.910 --> 07:18.360
E posso dimostrarvelo.

07:18.360 --> 07:20.960
Naturalmente possiamo accedere semplicemente

07:20.960 --> 07:23.210
al trasferimento dei dati e abbiamo un metodo

07:23.210 --> 07:26.580
getData; ora vogliamo ottenere i dati con questo formato text/plain

07:26.580 --> 07:29.560
e questo dovrebbe essere l'ID del progetto che abbiamo allegato

07:29.560 --> 07:34.560
al nostro pacchetto di trasferimento dei dati sull'elemento del progetto.

07:35.060 --> 07:37.179
Quindi, se ora salviamo e aggiungiamo

07:37.179 --> 07:39.690
nuovamente il progetto qui e trasciniamo

07:39.690 --> 07:41.050
questo qui, vedrete

07:41.050 --> 07:46.050
che questo qui è l'ID di questo elemento del progetto.

07:46.600 --> 07:47.920
Possiamo vederlo

07:47.920 --> 07:50.880
se lo ispezioniamo, perché lo aggiungiamo

07:50.880 --> 07:55.124
anche qui come ID, 0. 2167, a me sembra questo ID.

07:55.124 --> 07:59.170
Quindi il trasferimento dell'ID è avvenuto con successo.

07:59.170 --> 08:00.490
Ora ci siamo quasi.

08:00.490 --> 08:04.100
Ora dobbiamo solo aggiornare il nostro stato dietro le quinte e

08:04.100 --> 08:06.163
poi renderizzare nuovamente DUI.
