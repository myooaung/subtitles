WEBVTT

00:02.150 --> 00:03.360
Instructeur: Nu kun je binnen

00:03.360 --> 00:06.310
een interface ook de read-only modifier toevoegen.

00:06.310 --> 00:10.780
U kunt geen publiek of privé of iets dergelijks toevoegen.

00:10.780 --> 00:13.300
Dit is niet mogelijk op een interface, maar u

00:13.300 --> 00:15.610
kunt read-only toevoegen om duidelijk te

00:15.610 --> 00:19.470
maken dat deze eigenschap in welk object dan ook dat u op deze interface

00:19.470 --> 00:22.710
baseert, slechts eenmaal moet worden ingesteld en daarna

00:22.710 --> 00:26.030
read-only is, zodat het niet kan worden veranderd nadat het

00:26.030 --> 00:28.440
object is geïnitialiseerd.

00:28.440 --> 00:31.893
Dit is ook iets, als we in plaats daarvan een type gebruiken, dat

00:33.220 --> 00:36.180
je op een type kunt gebruiken als je dat wilt, dus nogmaals,

00:36.180 --> 00:38.800
deze twee dingen lijken erg op elkaar, maar het is

00:38.800 --> 00:41.510
gebruikelijker of vaker gezien dat als je echt met

00:41.510 --> 00:43.790
een object wilt werken, je daarvoor een interface

00:43.790 --> 00:45.730
gebruikt, en alleen-lezen is gewoon

00:45.730 --> 00:48.620
een ander ding dat je daar kunt toevoegen als een extra

00:48.620 --> 00:51.400
functie die je kunt instellen.

00:51.400 --> 00:53.320
Met alleen-lezen hier toegevoegd, trouwens,

00:53.320 --> 00:56.100
je ziet dat ik het niet hier in de klas heb toegevoegd.

00:56.100 --> 00:58.170
Ik heb hier geen alleen-lezen toegevoegd

00:58.170 --> 01:00.560
en als ik nu naar gebruiker één ga en dan probeer

01:00.560 --> 01:03.460
naam op iets anders in te stellen, krijg ik hier al een

01:03.460 --> 01:04.740
fout omdat het alleen-lezen

01:04.740 --> 01:06.120
is en natuurlijk krijg ik

01:06.120 --> 01:08.210
dat ook als ik het opsla en het probeer te

01:08.210 --> 01:10.140
compileren, dus de interface heeft

01:10.140 --> 01:12.640
hier echt een effect zodra we het implementeren

01:12.640 --> 01:14.880
in onze klasse, ook al heb ik hier geen alleen-lezen

01:14.880 --> 01:16.910
toegevoegd, de klasse weet dat het leesbaar

01:16.910 --> 01:19.650
implementeert en het neemt automatisch aan dat de

01:19.650 --> 01:27.430
eigenschapsnaam, die we hier hebben, die we moeten hebben vanwege de interface, alleen-lezen is omdat dat is wat we binnen de interface hebben

01:27.430 --> 01:32.973
ingesteld, en dat is natuurlijk ook best handig.
