WEBVTT

00:02.270 --> 00:04.610
Instructor: Este es el código con el que terminamos

00:04.610 --> 00:08.580
al final de la última sección básica, nuestro proyecto de práctica, un montón

00:08.580 --> 00:11.050
de código todo en un archivo, y esto podría decirse

00:11.050 --> 00:14.050
que no es un proyecto súper complejo.

00:14.050 --> 00:17.420
Definitivamente puedes escribir proyectos y aplicaciones mucho

00:17.420 --> 00:20.380
más elaborados, y terminarías con mucho más código, así

00:20.380 --> 00:23.640
que ponerlo todo en un solo archivo probablemente no es lo que

00:23.640 --> 00:25.000
quieres hacer.

00:25.000 --> 00:26.390
Así que lo que quieres hacer

00:26.390 --> 00:28.740
en su lugar es escribir código modular, lo que

00:28.740 --> 00:31.120
significa simplemente que quieres dividir tu

00:31.120 --> 00:34.010
código a través de múltiples archivos para que cada archivo

00:34.010 --> 00:37.157
por sí mismo siga siendo manejable y mantenible, y entonces

00:37.157 --> 00:39.640
simplemente importas y exportas desde y hacia

00:39.640 --> 00:42.100
estos archivos y te aseguras de que, por lo tanto,

00:42.100 --> 00:44.740
todos estos archivos están conectados, pero están

00:44.740 --> 00:47.990
conectados por Typescript o por el navegador o por alguna herramienta

00:47.990 --> 00:50.310
de construcción de terceros y no por ti al fusionarlos

00:50.310 --> 00:54.500
todos en un archivo durante el desarrollo.

00:54.500 --> 00:55.940
Ahora, en este módulo, echaremos

00:55.940 --> 00:59.910
un vistazo a dos opciones principales que nos ayudan a organizar nuestro código

00:59.910 --> 01:02.160
en múltiples archivos, y no sólo las conoceremos

01:02.160 --> 01:04.930
en teoría sino también en la práctica.

01:04.930 --> 01:07.320
Por supuesto, aplicaremos estos diferentes enfoques

01:07.320 --> 01:09.453
y veremos cómo podemos dividir nuestro código.
