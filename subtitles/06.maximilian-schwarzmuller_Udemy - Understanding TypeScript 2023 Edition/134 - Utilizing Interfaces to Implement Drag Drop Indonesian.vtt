WEBVTT

00:02.190 --> 00:05.380
Instruktur: Jadi sekarang mari kita sampai pada akhir

00:05.380 --> 00:09.590
proyek ini, dan itu melibatkan kemungkinan untuk menyeret dan menjatuhkan

00:09.590 --> 00:12.390
proyek yang kita miliki di salah satu kotak, misalnya,

00:12.390 --> 00:16.410
di kotak proyek aktif ke dalam kotak lainnya.

00:16.410 --> 00:19.310
Jadi, pada dasarnya, untuk mengalihkan proyek

00:19.310 --> 00:22.780
dari proyek aktif menjadi proyek yang sudah selesai.

00:22.780 --> 00:25.430
Jadi, ini juga bukan hanya tentang pembaruan

00:25.430 --> 00:27.800
visual, ini bukan hanya tentang menyeret

00:27.800 --> 00:31.050
dan menjatuhkannya dan memperbarui UI, ini juga tentang

00:31.050 --> 00:35.470
menyesuaikan data di belakang layar di kelas manajemen status kami, status

00:35.470 --> 00:37.790
proyek tempat kami mengelola daftar proyek

00:37.790 --> 00:39.960
pada akhirnya, perlu diingat bahwa setiap

00:39.960 --> 00:42.990
proyek memang memiliki properti status dan kami juga

00:42.990 --> 00:45.420
perlu memperbaruinya.

00:45.420 --> 00:48.610
Jadi, dua hal yang perlu kita terapkan: seret dan

00:48.610 --> 00:51.800
lepas dan kemudian semua keadaan di balik layar

00:51.800 --> 00:53.410
dan pembaruan data.

00:53.410 --> 00:56.220
Sekarang mari kita mulai dengan drag and drop, dan untuk

00:56.220 --> 00:59.870
itu pada dasarnya kita akan mengimplementasikan drag and drop seperti

00:59.870 --> 01:02.960
yang akan kita lakukan dalam skrip java vanila yang dapat

01:02.960 --> 01:04.790
Anda pelajari, misalnya, dalam panduan

01:04.790 --> 01:06.970
skrip java lengkap saya.

01:06.970 --> 01:09.690
Pada dasarnya, ini semua tentang mengimplementasikan sekumpulan

01:09.690 --> 01:11.960
pendengar peristiwa dan tentu saja Anda akan melihat bagaimana

01:11.960 --> 01:14.800
cara kerjanya dalam modul ini dalam kuliah-kuliah berikutnya, tetapi

01:14.800 --> 01:17.350
kita akan mengimplementasikannya dalam gaya typescript, jadi

01:17.350 --> 01:21.150
kita akan menyempurnakannya dengan menggunakan beberapa fitur typescript.

01:21.150 --> 01:24.240
Jadi, mari kita mulai dan bagaimana saya ingin menyempurnakannya

01:24.240 --> 01:25.790
dengan fitur typescript?

01:25.790 --> 01:28.423
Nah, saya ingin menggunakan kembali antarmuka di sini.

01:29.280 --> 01:32.120
Seret dan lepas antarmuka, tetapi tidak hanya untuk

01:32.120 --> 01:35.470
mendefinisikan struktur beberapa objek seperti yang sebelumnya

01:35.470 --> 01:39.060
kita gunakan antarmuka, tetapi untuk benar-benar menyiapkan

01:39.060 --> 01:42.010
kontrak yang dapat ditandatangani oleh kelas-kelas

01:42.010 --> 01:44.590
tertentu untuk memaksa kelas-kelas ini, pada

01:44.590 --> 01:46.970
dasarnya mengimplementasikan metode

01:46.970 --> 01:49.690
tertentu yang membantu kita dengan seret dan

01:49.690 --> 01:51.980
lepas.

01:51.980 --> 01:55.250
Tepatnya, saya memikirkan tentang dua antarmuka, dan tentu saja,

01:55.250 --> 01:58.590
menggunakan antarmuka ini akan menjadi opsional tetapi ini akan

01:58.590 --> 02:00.920
memungkinkan kita untuk, pada dasarnya, menyediakan

02:00.920 --> 02:04.465
beberapa kode yang memaksa kelas untuk mengimplementasikan semua

02:04.465 --> 02:06.340
yang dibutuhkan untuk dapat diseret

02:06.340 --> 02:09.810
atau menjadi target drop yang valid yang jika kita membangun aplikasi

02:09.810 --> 02:12.960
yang lebih besar dapat membantu kita menulis kode yang lebih

02:12.960 --> 02:15.160
bersih dan kode yang lebih mudah dimengerti,

02:15.160 --> 02:19.080
terutama ketika bekerja dalam tim.

02:19.080 --> 02:21.710
Jadi, antarmuka mana yang saya bicarakan?

02:21.710 --> 02:23.160
Saya ingin memiliki satu antarmuka,

02:23.160 --> 02:24.617
yang akan saya beri nama draggable,

02:26.200 --> 02:28.660
dan saya akan memiliki antarmuka kedua yang akan

02:28.660 --> 02:31.060
saya beri nama drag target.

02:31.060 --> 02:32.950
Ide saya di sini adalah bahwa kita bisa

02:32.950 --> 02:35.710
menambahkan antarmuka draggable ke kelas apa pun yang me-render

02:35.710 --> 02:38.030
dan elemen yang bisa di-draggable.

02:38.030 --> 02:41.810
Dalam contoh kita, itu akan menjadi kelas item proyek.

02:41.810 --> 02:44.170
Kelas item proyek bertanggung jawab untuk

02:44.170 --> 02:46.600
merender, yah, item proyek ini dan ini harus

02:46.600 --> 02:49.230
menjadi bagian yang dapat diseret, dan kotak-kotak,

02:49.230 --> 02:53.320
proyek yang aktif dan proyek yang sudah selesai, jadi di sini kelas

02:53.320 --> 02:57.880
daftar proyek kita harus menjadi target seret.

02:57.880 --> 03:02.100
Sekarang, apa yang dipaksakan oleh interface ini untuk diimplementasikan atau

03:02.100 --> 03:03.890
ditambahkan ke kelas-kelas?

03:03.890 --> 03:05.760
Mari kita mulai dengan draggable.

03:05.760 --> 03:09.550
Di sini, pada dasarnya kita memerlukan dua pendengar peristiwa dan oleh

03:09.550 --> 03:12.540
karena itu dua penangan untuk peristiwa-peristiwa ini.

03:12.540 --> 03:17.070
Sebuah drag start handler, yang akan menjadi sebuah metode dan drag end handler,

03:17.070 --> 03:19.733
karena ketika mengimplementasikan drag and

03:22.020 --> 03:24.180
drop, hal yang ingin Anda seret akan

03:24.180 --> 03:26.070
membutuhkan beberapa pendengar

03:26.070 --> 03:29.840
yang mendengarkan awal dari peristiwa seret itu dan juga, berpotensi

03:29.840 --> 03:32.330
menjadi pendengar yang mendengarkan akhir

03:32.330 --> 03:36.560
dari peristiwa seret sehingga dapat melakukan pembaruan apa pun di

03:36.560 --> 03:40.440
sana yang ingin Anda lakukan.

03:40.440 --> 03:42.580
Sekarang, drag start event handler akan

03:42.580 --> 03:44.225
mendapatkan objek event yang

03:44.225 --> 03:47.370
akan kita sebut drag event, itu adalah tipe bawaan, tipe

03:47.370 --> 03:51.010
dengan opsi libs, karena pengaturan konflik TS kita dan libs yang

03:51.010 --> 03:53.210
kita tambahkan di sana dan itu tidak akan

03:53.210 --> 03:55.330
mengembalikan apa pun, itu akan menjadi

03:55.330 --> 03:57.600
metode yang mengeksekusi tetapi yang kemudian

03:57.600 --> 03:59.882
hanya melakukan sesuatu, mengkonfigurasi

03:59.882 --> 04:03.930
drag event misalnya, tetapi tidak kembali.

04:03.930 --> 04:06.970
Sekarang penangan akhir seret mendapatkan peristiwa yang sama,

04:06.970 --> 04:10.730
ia juga mendapatkan peristiwa seret dan semuanya tidak mengembalikan apa-apa.

04:10.730 --> 04:13.130
Sekarang, tentu saja Anda akan melihat bagaimana kita menerapkannya

04:13.130 --> 04:15.810
hanya dalam beberapa detik, jadi jangan khawatir.

04:15.810 --> 04:17.810
Sekarang, bagaimana dengan target tarikan?

04:17.810 --> 04:20.530
Nah, untuk target, jadi kotak tempat kita

04:20.530 --> 04:22.620
bisa menyeret sesuatu ada tiga

04:22.620 --> 04:26.280
event handler yang ingin saya implementasikan.

04:26.280 --> 04:28.593
Pawang seret ke atas,

04:29.440 --> 04:31.800
pawang jatuhkan, dan

04:31.800 --> 04:34.280
pawang seret keluar.

04:34.280 --> 04:36.470
Sekarang, apa yang dilakukan benda-benda ini?

04:36.470 --> 04:39.370
Sekarang, Anda perlu menerapkan drag over handler

04:39.370 --> 04:41.960
saat menerapkan drag and drop dalam skrip

04:41.960 --> 04:45.140
java untuk pada dasarnya memberi sinyal pada browser

04:45.140 --> 04:48.060
dalam skrip java bahwa hal yang Anda seret adalah

04:48.060 --> 04:50.160
target seret yang valid.

04:50.160 --> 04:53.840
Jika Anda tidak melakukan hal yang benar dalam penangan seret,

04:53.840 --> 04:56.410
menjatuhkan tidak akan mungkin dilakukan.

04:56.410 --> 04:57.980
Anda membutuhkan drop handler

04:57.980 --> 05:00.760
untuk bereaksi terhadap drop yang sebenarnya terjadi,

05:00.760 --> 05:03.960
jadi jika drag over handler akan mengizinkan drop dengan

05:03.960 --> 05:06.500
drop handler akan menangani drop dan kemudian

05:06.500 --> 05:08.650
di sini kita dapat memperbarui data dan

05:08.650 --> 05:11.960
UI kita misalnya dan drag leave handler dapat berguna jika kita,

05:11.960 --> 05:14.500
misalnya, memberikan umpan balik visual kepada

05:14.500 --> 05:16.940
pengguna ketika dia menyeret sesuatu ke atas

05:16.940 --> 05:19.880
kotak misalnya, kita mengubah warna latar belakang

05:19.880 --> 05:22.210
dengan baik jika tidak ada drop yang terjadi

05:22.210 --> 05:25.790
dan malah dibatalkan atau pengguna memindahkan elemen itu, kita

05:25.790 --> 05:28.410
dapat menggunakan drag leave handler untuk mengembalikan

05:28.410 --> 05:32.190
pembaruan visual kita.

05:32.190 --> 05:36.250
Sekarang, ketiga handler semuanya menerima event drag dan tidak

05:36.250 --> 05:37.990
mengembalikan apapun, jadi

05:37.990 --> 05:41.473
mari kita perbarui dengan tepat seperti ini.

05:44.070 --> 05:47.250
Dan juga untuk penangan terakhir di sini.

05:47.250 --> 05:49.810
Dan sekarang kita mengkonfigurasi beberapa interface

05:49.810 --> 05:52.840
yang pada mereka sendiri tidak melakukan banyak hal, tetapi

05:52.840 --> 05:55.710
sekarang kita dapat menggunakannya dan saya ingin memulai

05:55.710 --> 05:57.490
dengan item proyek.

05:57.490 --> 06:00.380
Jadi mari kita temukan kelas item proyek kita untuk komponen

06:00.380 --> 06:02.710
ini, inilah komponennya, inilah item proyeknya,

06:02.710 --> 06:05.100
dan sekarang Anda mungkin ingat bahwa antarmuka

06:05.100 --> 06:08.540
tidak hanya dapat digunakan untuk mendefinisikan tipe objek kustom

06:08.540 --> 06:12.290
tetapi Anda dapat menggunakannya sebagai kontrak pada kelas.

06:12.290 --> 06:15.760
Anda dapat memanggil implements, atau menambahkan implements di sini setelah

06:15.760 --> 06:16.750
nama kelas Anda dan setelah

06:16.750 --> 06:19.290
ekstensi potensial yang Anda lakukan dan kemudian mengimplementasikan

06:19.290 --> 06:20.900
antarmuka.

06:20.900 --> 06:24.340
Dalam hal ini, antarmuka yang dapat diseret.

06:24.340 --> 06:27.250
Sekarang, ketika Anda melakukannya, dan saya hanya memformat ini untuk

06:27.250 --> 06:29.820
membawanya dalam baris baru agar lebih mudah dibaca.

06:29.820 --> 06:31.393
Ketika Anda melakukannya, Anda

06:31.393 --> 06:34.460
akan mendapatkan error bahwa kelas di sini salah mengimplementasikan

06:34.460 --> 06:38.600
interface karena interface draggable memaksa kita untuk menambahkan dua method,

06:38.600 --> 06:40.763
jika Anda ingat.

06:42.840 --> 06:44.480
Jadi, mari kita tambahkan di sini.

06:44.480 --> 06:46.290
Mungkin kita akan memuat konstruktor.

06:46.290 --> 06:49.550
Mari kita tambahkan handler drag start yang

06:49.550 --> 06:53.610
mendapatkan event dari tipe drag event dan mari kita

06:53.610 --> 06:56.500
juga menambahkan handler drag end yang

06:56.500 --> 06:59.143
menerima event drag kita.

06:59.990 --> 07:02.010
Dan sekarang kita memiliki dua metode yang ditambahkan.

07:02.010 --> 07:05.330
Sekarang, itu saja tidak memungkinkan seret dan lepas.

07:05.330 --> 07:08.900
Ini hanya membantu kita menulis komponen yang dapat diseret atau kelas

07:08.900 --> 07:11.880
yang dapat diseret dengan cara yang seragam, jadi jika kita

07:11.880 --> 07:14.560
menambahkan lebih banyak kelas yang harus dapat diseret,

07:14.560 --> 07:18.210
kita akan selalu memiliki metode-metode ini yang hanya membuatnya lebih

07:18.210 --> 07:20.700
mudah untuk bernalar tentang kode kita dan untuk mengerjakan

07:20.700 --> 07:22.870
kode kita, terutama ketika bekerja dalam tim,

07:22.870 --> 07:25.520
karena semua orang tahu di mana harus bekerja untuk acara

07:25.520 --> 07:27.840
mulai seret.

07:27.840 --> 07:31.340
Sekarang, apa yang tidak dilakukan ini, tentu saja, adalah mendengarkan

07:31.340 --> 07:32.950
peristiwa mulai seret.

07:32.950 --> 07:35.010
Itu adalah sesuatu yang dapat kita lakukan dalam metode

07:35.010 --> 07:36.730
configure yang sudah Anda miliki.

07:36.730 --> 07:38.980
Kita dapat menjangkau elemen yang dirender dan menambahkan

07:38.980 --> 07:41.090
pendengar peristiwa ke elemen tersebut dan di

07:41.090 --> 07:43.890
sana, itu akan menjadi peristiwa mulai seret.

07:43.890 --> 07:45.780
Peristiwa mulai seret adalah satu

07:45.780 --> 07:49.190
peristiwa, satu peristiwa dom browser default yang dapat Anda

07:49.190 --> 07:51.750
dengarkan dan bahkan penangan yang ingin kita picu,

07:51.750 --> 07:53.740
tentu saja, adalah penangan mulai seret,

07:55.320 --> 07:57.793
yang dapat kita arahkan di sini.

07:59.080 --> 08:00.750
Sekarang, kita juga ingin memastikan

08:00.750 --> 08:02.460
bahwa di dalam drag start handler bahwa

08:02.460 --> 08:04.870
kata kunci ini mengacu pada kelas kita dan seperti yang

08:04.870 --> 08:06.560
Anda pelajari dengan pendengar acara

08:06.560 --> 08:08.530
yang secara default tidak akan menjadi kasusnya,

08:08.530 --> 08:11.810
jadi kita bisa menggunakan bind di sini dan bind ini yang akan valid, tetapi

08:11.810 --> 08:14.750
kita memiliki cara yang lebih baik sebenarnya.

08:14.750 --> 08:16.900
Kita telah menambahkan dekorator pengikat otomatis,

08:16.900 --> 08:18.550
jadi saya hanya akan menambahkan ini

08:18.550 --> 08:20.303
di sini ke penangan mulai seret.

08:21.210 --> 08:26.070
Sekarang, kita juga dapat mendengarkan peristiwa akhir seret di sini dan

08:26.070 --> 08:28.530
menunjuk pada penangan akhir seret.

08:28.530 --> 08:30.400
Anda juga dapat menambahkan auto bind di sana

08:30.400 --> 08:32.690
jika Anda berencana menggunakan kata kunci vis di sini

08:32.690 --> 08:35.830
untuk saat ini saya hanya akan mencatat drag end di sini sehingga kita melihat

08:35.830 --> 08:37.730
bahwa itu dipicu karena di sini saya sebenarnya

08:37.730 --> 08:40.520
tidak ada yang spesifik yang ingin saya lakukan dengannya dan oleh

08:40.520 --> 08:44.410
karena itu saya juga akan mengosongkan parameter ini dan pada dasarnya memberi tahu typescript

08:44.410 --> 08:47.310
bahwa saya tidak menggunakannya.

08:47.310 --> 08:49.850
Di sini, di drag start, kita akan menggunakan event

08:49.850 --> 08:51.730
dan untuk saat ini, saya hanya akan mencatat

08:51.730 --> 08:53.720
event, ketika event ini terjadi.

08:53.720 --> 08:55.610
Sekarang, itu saja tidak akan berhasil.

08:55.610 --> 08:57.000
Jika Anda menyimpan semuanya dan menambahkan

08:57.000 --> 08:59.230
beberapa proyek di sini, Anda akan melihat bahwa Anda tidak

08:59.230 --> 09:01.460
dapat menyeretnya kembali, bukan?

09:01.460 --> 09:04.750
Jika Anda mencoba menyeretnya, itu tidak akan berhasil

09:04.750 --> 09:07.390
karena Anda juga perlu mengubah sesuatu

09:07.390 --> 09:09.720
dalam berkas HTML Anda.

09:09.720 --> 09:11.810
Pada item daftar ini, yang akan dirender

09:11.810 --> 09:14.550
untuk setiap proyek, yang merupakan hal yang ingin

09:14.550 --> 09:18.380
Anda seret, Anda harus menambahkan atribut draggable dan mengaturnya

09:18.380 --> 09:19.830
ke true.

09:19.830 --> 09:21.040
Itu penting.

09:21.040 --> 09:24.200
Ini memberi tahu browser bahwa ini akan dapat diseret.

09:24.200 --> 09:28.430
Dengan itu, jika Anda menyimpannya, dan Anda menambahkan kembali proyek di sini, Anda lihat

09:28.430 --> 09:30.400
sekarang, ini memang dapat diseret, sekarang

09:30.400 --> 09:32.070
menempel pada mouse saya dan sekarang

09:32.070 --> 09:35.720
kita benar-benar dapat memindahkannya di sekitar sini dengan baik.

09:35.720 --> 09:38.530
Anda juga akan melihat di sebelah kanan bahwa drag event ditembakkan

09:38.530 --> 09:41.390
ketika saya mulai menyeret dan jika saya melepaskannya, Anda akan

09:41.390 --> 09:43.860
melihat drag end event juga ditembakkan.

09:43.860 --> 09:46.510
Jadi pendengar kita terhubung dan kita dapat

09:46.510 --> 09:50.540
menyeret, sekarang kita dapat bekerja pada target drop jadi pada

09:50.540 --> 09:53.200
kotak tempat ini harus dapat diseret, untuk

09:53.200 --> 09:56.560
kemudian menambahkan proyek ke kotak itu.

09:56.560 --> 09:58.660
Satu hal yang juga akan saya lakukan

09:58.660 --> 10:02.930
dengan cepat adalah di aplikasi. css, pada daftar item, jadi pada proyek

10:02.930 --> 10:06.550
LI, saya akan menambahkan warna latar belakang putih hanya

10:06.550 --> 10:09.810
agar kita bisa melihat ini sedikit lebih baik.

10:09.810 --> 10:12.350
Jadi di sini, project LI, saya menambahkan warna putih

10:12.350 --> 10:15.800
sehingga ketika kita menyeret proyek di sini, kita memiliki latar belakang

10:15.800 --> 10:17.370
putih di sini sehingga ini membuatnya

10:17.370 --> 10:19.150
sedikit lebih mudah dilihat.

10:19.150 --> 10:20.840
Namun, tidak mengubah langkah kami selanjutnya.

10:20.840 --> 10:22.700
Kami ingin membuat dia dropabble.
