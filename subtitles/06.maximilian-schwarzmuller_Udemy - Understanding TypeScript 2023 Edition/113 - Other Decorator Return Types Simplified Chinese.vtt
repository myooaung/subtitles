WEBVTT

00:02.440 --> 00:05.240
解说员：我们看到了如何使用装饰器､

00:05.240 --> 00:08.120
装饰器工厂以及利用装饰器的返回值来构建非常令人惊奇的东西,

00:08.120 --> 00:27.230
在示例中, 类装饰器允许我们基本上用一个完全不同的类来替换我们添加了装饰器的类, 这个类是在现有类的基础上构建的, 就像我们的例子一样, 因此可能会添加一些功能｡

00:27.230 --> 00:32.030
现在您也可以在其他装饰器中返回值, 但不是在所有装饰器中｡

00:32.030 --> 00:35.430
或者不是在所有这些函数中都考虑返回值｡ 

00:35.430 --> 00:43.540
现在, 可以返回某些内容的装饰器是可以添加到方法中的装饰器和添加到访问器中的装饰器｡

00:43.540 --> 00:47.400
在setter方法的log2和log3上, 这两个装饰器,

00:47.400 --> 00:54.080
log2和log3也可以返回一些东西, TypeScript会使用它.

00:54.080 --> 00:58.040
当然, 属性和参数上的装饰器也可以返回一些东西,

00:58.040 --> 01:02.500
但TypeScript会忽略它｡

01:02.500 --> 01:05.030
因此, 此处不支持返回值,

01:05.030 --> 01:07.700
或者返回值不精确｡

01:07.700 --> 01:09.690
现在, 您可以在日志3上返回什么？

01:09.690 --> 01:12.680
方法装饰器和log2上也是如此,

01:12.680 --> 01:15.320
但访问器装饰器也是如此｡

01:15.320 --> 01:19.320
您可以返回一个全新的属性描述符｡ 

01:19.320 --> 01:22.050
对数2和对数3, 这就是我所说的两个装饰者,

01:22.050 --> 01:23.110
对吗？

01:23.110 --> 01:28.110
日志 2 和 日志 3 都 从 属性 和 方法 中 获取 描述 符 , 你 可以

01:28.170 --> 01:30.510
说 , 它们 是 附加 到 的 ｡

01:30.510 --> 01:36.220
因为访问器有点像方法, 所以有一个在那里执行的函数｡

01:36.220 --> 01:39.072
现在, 属性描述符是JavaScript的一部分,

01:39.072 --> 01:44.500
如您所知, 如果我们再次查看此页面并重新加载它, 我们会看到, 例如,

01:44.500 --> 01:54.910
对于我们的访问器装饰器, 属性描述符是此处的此对象, 它具有可配置和可枚举以及get和set属性｡

01:54.910 --> 01:57.660
对于方法装饰器, 我们的描述符是这个对象,

01:57.660 --> 01:59.330
它也有可配置的､ 可枚举的､

01:59.330 --> 02:02.290
值的和可写的｡

02:02.290 --> 02:04.410
这是普通JavaScript｡ 

02:04.410 --> 02:07.830
在vanilla JavaScript中也有属性描述符｡ 

02:07.830 --> 02:11.710
它们允许您更详细地定义属性｡ 

02:11.710 --> 02:14.430
你当然可以给属性赋值, 因为我们讨论的是方法,

02:14.430 --> 02:15.990
这里的值是一个函数,

02:15.990 --> 02:24.700
但是你也可以控制它是否可写, 也就是说, 在对象创建之后, 它是否可以被修改.

02:24.700 --> 02:29.570
它是否可配置, 例如是否可以更改其配置以及是否可以删除此属性｡

02:29.570 --> 02:30.770
如果它是可枚举的,

02:30.770 --> 02:35.410
也就是说当你循环遍历对象的时候它会出现.

02:35.410 --> 02:36.810
因此, 一个方法, 例如,

02:36.810 --> 02:38.790
默认情况下, this被设置为false,

02:38.790 --> 02:40.930
这样, 如果你在一个对象上使用for

02:40.930 --> 02:44.040
in循环, 这个方法就不会被打印为属性｡

02:44.040 --> 02:45.240
对于一个访问器,

02:45.240 --> 02:47.180
我们也有可配置的和可枚举的,

02:47.180 --> 02:49.750
但是我们有get和set, 当然,

02:49.750 --> 02:58.750
你也可以, 例如, 返回一个新的描述符, 它分配了一个全新的set方法, 或者突然增加了get功能｡

02:58.750 --> 03:05.190
因此, 在日志2和日志3中, 您可以在最后返回一个新的描述符对象,

03:05.190 --> 03:10.560
并通过返回或将返回类型设置为属性描述符向TypeScript明确表示您将这样做,

03:10.560 --> 03:17.010
因此, 您还可以在此处设置set关键字､ get关键字､ 可配置或可枚举属性,

03:17.010 --> 03:24.800
并更改此访问器或方法的配置方式｡

03:24.800 --> 03:27.560
现在我不想在这里对访问器做这些,

03:27.560 --> 03:36.400
我对它没有什么兴趣, 所以我不会返回一个属性描述符, 但是我会给你们看一个关于方法装饰器的例子,

03:36.400 --> 03:42.533
我们会返回一些东西, 我们可以在装饰器的帮助下构建有趣的东西｡
