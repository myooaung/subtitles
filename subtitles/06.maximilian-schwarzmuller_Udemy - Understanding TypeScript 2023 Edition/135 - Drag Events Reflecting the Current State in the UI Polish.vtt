WEBVTT

00:02.320 --> 00:03.570
Instruktor: Aby uczynić

00:03.570 --> 00:05.090
go droppable, musimy przejść

00:05.090 --> 00:07.730
do klauzuli, lub do komponentu w naszej aplikacji,

00:07.730 --> 00:11.600
który powinien w końcu działać jako drag target.

00:11.600 --> 00:14.120
Więc tutaj klasa Project List jest właściwą klauzulą

00:14.120 --> 00:15.870
i tam możemy zaimplementować nasz

00:15.870 --> 00:17.150
drugi interfejs, który

00:17.150 --> 00:20.130
dodaliśmy, czyli interfejs Drag Target.

00:20.130 --> 00:23.550
Teraz, podobnie jak interfejs draggable, zmusza

00:23.550 --> 00:26.510
nas to do dodania pewnych metod.

00:26.510 --> 00:30.600
Aby być precyzyjnym, musimy dodać handler przeciągania, handler

00:30.600 --> 00:33.500
upuszczania i handler opuszczania.

00:33.500 --> 00:34.540
Więc, zróbmy to.

00:34.540 --> 00:38.640
Może wszystko właśnie tutaj pod konstruktorem powyżej configure.

00:38.640 --> 00:40.080
Dokładne miejsce zależy

00:40.080 --> 00:42.880
od Ciebie, kolejność metod nie ma znaczenia.

00:42.880 --> 00:45.680
Więc tutaj dodam handler drag over,

00:45.680 --> 00:49.730
gdzie otrzymamy nasze zdarzenie przeciągania.

00:49.730 --> 00:51.850
Następnie dodam tutaj handler kropli, gdzie również

00:51.850 --> 00:54.203
otrzymamy nasze zdarzenie przeciągania.

00:55.710 --> 00:59.130
I wreszcie drag leave handler, gdzie również

00:59.130 --> 01:02.260
otrzymujemy zdarzenie drag.

01:02.260 --> 01:05.410
Teraz te zdarzenia, nawiasem mówiąc, przechowują różne rodzaje

01:05.410 --> 01:08.594
danych, ale wszystkie są oparte na typie zdarzenia Case Core.

01:08.594 --> 01:11.860
Teraz dostajemy kilka różnych rzeczy do zrobienia.

01:11.860 --> 01:15.120
Zacznijmy może od handler'a drag over.

01:15.120 --> 01:18.770
W handlerze przeciągania chcę zmienić wygląd mojego pudełka lub

01:18.770 --> 01:21.900
listy nieuporządkowanej w tym miejscu, aby zwizualizować,

01:21.900 --> 01:24.470
że jest to obszar, który można upuścić.

01:24.470 --> 01:26.960
Ponieważ teraz, gdy przeciągamy wokół elementu, nie

01:26.960 --> 01:30.200
dostajemy żadnej wskazówki, gdzie możemy go upuścić, prawda?

01:30.200 --> 01:33.410
Nic się nie zmienia na UI, więc chcę to zmienić.

01:33.410 --> 01:35.950
Aby to zmienić, dodam pewną klauzulę css do listy nieuporządkowanej,

01:35.950 --> 01:38.680
którą znajdziesz w app. css.

01:38.680 --> 01:42.080
Klauzula droppable, która będzie zmieniać kolor tła, a

01:42.080 --> 01:45.460
więc w tym miejscu, na początek, musimy po prostu uzyskać

01:45.460 --> 01:49.070
dostęp do naszego elementu listy nieuporządkowanej.

01:49.070 --> 01:53.850
Możemy to zrobić sięgając do tego elementu, querySelectror uL i dodać wykrzyknik,

01:53.850 --> 01:57.380
ponieważ zawsze będzie tam nieuporządkowana lista, nawet

01:57.380 --> 01:59.440
jeśli nie trzyma jeszcze żadnych

01:59.440 --> 02:00.963
elementów.

02:02.560 --> 02:05.570
Musimy tylko upewnić się, że to słowo kluczowe działa tutaj

02:05.570 --> 02:08.600
i możemy to zrobić poprzez autobindowanie tego tutaj, aby

02:08.600 --> 02:11.050
upewnić się, że to słowo kluczowe jest związane

02:11.050 --> 02:12.840
z otaczającą klauzulą.

02:12.840 --> 02:15.610
Następnie z wybranymi elementami listy,

02:15.610 --> 02:19.550
możemy użyć właściwości listy klauzul elementów dom, więc

02:19.550 --> 02:22.090
to jest Vanilla JavaScript tutaj ponownie,

02:22.090 --> 02:26.080
i wywołać metodę add tam, aby dodać klauzulę droppable do

02:26.080 --> 02:27.540
niego.

02:27.540 --> 02:29.360
Teraz oczywiście musimy się

02:29.360 --> 02:33.000
upewnić, że dragOverHandler zostanie odpalony, gdy przeciągniemy

02:33.000 --> 02:37.333
coś nad tym elementem, nad tą wyrenderowaną sekcją.

02:39.090 --> 02:42.400
Aby to zrobić w metodzie configure, gdzie mamy już

02:42.400 --> 02:46.020
tutaj jednego listenera, nasłuchującego naszych zmian

02:46.020 --> 02:50.280
stanu, zarejestruję również listenery na samym elemencie.

02:50.280 --> 02:53.380
Pierwszym EventListenerem jest tam oczywiście zdarzenie

02:53.380 --> 02:54.760
przeciągnięcia nad, a ja

02:54.760 --> 02:58.090
zbinduję to do dragOverHandler, bez zaskoczenia.

02:58.090 --> 03:01.060
Następnie powtórzę to, ponieważ chcę również słuchać

03:01.060 --> 03:03.740
zdarzenia dragLeave i powiązać to z dragLeaveHandler

03:03.740 --> 03:06.870
i do zdarzenia drop i powiązać to z dropHandler, ponieważ

03:06.870 --> 03:08.700
będziemy również potrzebować tego

03:08.700 --> 03:10.583
później.

03:11.580 --> 03:16.500
Tak więc, z tym, mamy ten słuchacz zdarzeń przeciągania i dragOverHandler

03:16.500 --> 03:18.797
podłączony, ale mamy również kilka

03:18.797 --> 03:21.780
błędów w kodzie teraz.

03:21.780 --> 03:24.610
Cóż, to powinny być nieużywane obiekty zdarzeń tutaj,

03:24.610 --> 03:27.430
więc na razie, aby zaspokoić typescript, po prostu

03:27.430 --> 03:28.810
je wyczyśćmy.

03:28.810 --> 03:31.477
Będziemy ich potrzebować później, ale na razie, aby to zadziałało,

03:31.477 --> 03:33.690
wymażmy je poprzez użycie podkreślenia tutaj,

03:33.690 --> 03:35.677
aby powiedzieć typescriptowi, "Dobrze, że

03:35.677 --> 03:37.670
nie używamy ich w tej chwili. Teraz to się kompiluje i teraz z powrotem w

03:37.670 --> 03:38.950
projekcie, kiedy dodajemy

03:38.950 --> 03:42.910
nowy projekt tutaj i przeciągam to, widzisz, kiedy przeciągam to nad gotowymi projektami,

03:42.910 --> 03:45.320
tło tutaj stało się jasnoniebieskie.

03:45.320 --> 03:49.620
Tutaj nad aktywnymi projektami zrobił się lekki

03:49.620 --> 03:53.270
róż, jakby lekko różowy kolor.

03:53.270 --> 03:56.220
Aby pokazać to ponownie, jeśli przeładuję, widzisz

03:56.220 --> 03:58.650
teraz mamy białe tło w projektach, whoops,

03:58.650 --> 04:02.670
i jak tylko zacznę przeciągać, to tutaj dostaje jasnoróżowe tło

04:02.670 --> 04:06.490
i kiedy przeciągam go nad gotowymi projektami, tło pudełka

04:06.490 --> 04:09.470
zmienia się na jasnoniebieskie.

04:09.470 --> 04:13.360
Teraz nigdy nie zmienia się z powrotem na biały, ponieważ nigdy nie usunęliśmy

04:13.360 --> 04:16.050
tej klauzuli droppable, ale jest to pierwszy krok.

04:16.050 --> 04:19.480
Oczywiście upuszczanie nadal nie działa.

04:19.480 --> 04:21.700
Wrzucenie go tutaj nie dodaje

04:21.700 --> 04:23.890
projektu, bo niby jak?

04:23.890 --> 04:25.300
Nie dodaliśmy do tego żadnej logiki.

04:25.300 --> 04:28.200
Zadbajmy więc o to, aby zaktualizować

04:28.200 --> 04:33.200
również stylizację, gdy zatrzymamy się, gdy opuścimy element.

04:33.410 --> 04:36.390
Kiedy w zasadzie przeciągamy go tutaj i odchodzimy.

04:36.390 --> 04:39.670
Upewnij się, że niebieskie tło zniknie w tym przypadku,

04:39.670 --> 04:42.640
to jest to, co chcę zrobić dalej.

04:42.640 --> 04:44.870
W tym celu możemy użyć dragLeaverHandler

04:44.870 --> 04:47.020
tutaj, ponieważ będzie on odpalany za każdym

04:47.020 --> 04:50.990
razem, gdy opuścimy ten element z naszym przeciągniętym elementem.

04:50.990 --> 04:53.019
Teraz tam oczywiście też chcę

04:53.019 --> 04:57.550
uzyskać dostęp do mojej nieuporządkowanej listy, więc skopiuję

04:57.550 --> 05:01.420
ten kod, ale potem tam chcę usunąć klauzulę droppable.

05:01.420 --> 05:05.553
Powinniśmy teraz również autobindować this, aby słowo

05:06.448 --> 05:11.220
kluczowe this tutaj odnosiło się do otaczającej klauzuli.

05:11.220 --> 05:13.120
Jeśli to zapiszemy, to dodajemy tutaj nowy element.

05:14.040 --> 05:17.740
Spróbujmy.

05:17.740 --> 05:18.773
Jak zacznę przeciągać,

05:20.310 --> 05:23.740
to widać, że mamy tu swoje zaplecze, a jak wyjdę, to się rozejdzie.

05:24.610 --> 05:27.120
Więc teraz tło naprawdę jest zaktualizowane.

05:27.120 --> 05:29.930
Widać tutaj pewne migotanie, ponieważ

05:29.930 --> 05:33.670
zdarzenie dragLeave jest również uruchamiane, gdy

05:33.670 --> 05:37.190
przechodzimy z kursora myszy nad tłem do elementu

05:37.190 --> 05:40.960
renderowanego, ale tutaj powinno być w porządku.

05:40.960 --> 05:42.500
Tutaj nie ma większych problemów.

05:42.500 --> 05:43.620
Więc właściwie uzyskaliśmy pożądany efekt, powiedziałbym.

05:43.620 --> 05:47.320
Więc UI jest aktualizowany tak, jak powinien teraz, ale

05:47.320 --> 05:50.950
oczywiście nie jesteśmy w stanie upuścić i naprawdę

05:50.950 --> 05:53.140
przenieść danych, więc to będzie

05:53.140 --> 05:54.700
następny krok.
