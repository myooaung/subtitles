WEBVTT

1
00:00:02.220 --> 00:00:03.660
<v Narrator>Now, to get started,</v>

2
00:00:03.660 --> 00:00:04.630
I want to make sure that

3
00:00:04.630 --> 00:00:07.210
I don't have to rerun this command here;

4
00:00:07.210 --> 00:00:10.104
this TFC command where I point at a file

5
00:00:10.104 --> 00:00:12.220
after every change I make.

6
00:00:12.220 --> 00:00:16.100
Because right now, whenever I change something here,

7
00:00:16.100 --> 00:00:17.640
in my TypeScript file,

8
00:00:17.640 --> 00:00:22.640
and I want to reflect that in my output file,

9
00:00:22.670 --> 00:00:25.270
and on this webpage here,

10
00:00:25.270 --> 00:00:29.410
we have to save the file, run the compilation again,

11
00:00:29.410 --> 00:00:33.270
and then reload this file;

12
00:00:33.270 --> 00:00:36.630
or, if we have our NPM start process running,

13
00:00:36.630 --> 00:00:37.650
which we should have,

14
00:00:37.650 --> 00:00:41.400
then at least our browser will automatically reload,

15
00:00:41.400 --> 00:00:43.410
if we don't directly open the file,

16
00:00:43.410 --> 00:00:46.200
but instead are on localhost: 3000.

17
00:00:46.200 --> 00:00:47.760
But nonetheless, even though with that

18
00:00:47.760 --> 00:00:48.910
reloading automatically,

19
00:00:48.910 --> 00:00:52.760
we still have to manually rerun the compilation command.

20
00:00:52.760 --> 00:00:54.730
So, to get rid of that,

21
00:00:54.730 --> 00:00:56.620
we can enter watch mode.

22
00:00:56.620 --> 00:01:01.160
That means we can tell TypeScript to watch a file,

23
00:01:01.160 --> 00:01:04.980
and whenever that file changes, TypeScript will recompile.

24
00:01:04.980 --> 00:01:07.260
So, for that we can still run the same command,

25
00:01:07.260 --> 00:01:10.560
but now we add --watch at the end,

26
00:01:10.560 --> 00:01:14.010
or just -w.

27
00:01:14.010 --> 00:01:17.950
If we do that, then we are in watch mode on that file,

28
00:01:17.950 --> 00:01:20.940
and now, whenever we change anything in there,

29
00:01:20.940 --> 00:01:22.120
and we save that,

30
00:01:22.120 --> 00:01:25.610
so that the file on the disk technically changes as well,

31
00:01:25.610 --> 00:01:27.940
you see, this automatically recompiles,

32
00:01:27.940 --> 00:01:28.773
and of course,

33
00:01:28.773 --> 00:01:30.260
this also means that

34
00:01:30.260 --> 00:01:32.860
if we would do anything which is not allowed,

35
00:01:32.860 --> 00:01:35.630
like for example, reassigning to a constant,

36
00:01:35.630 --> 00:01:37.790
and then a wrong type as well.

37
00:01:37.790 --> 00:01:39.320
Whenever we try to do that,

38
00:01:39.320 --> 00:01:40.940
of course, it all recompiles,

39
00:01:40.940 --> 00:01:43.850
but then, just as if we manually run the command,

40
00:01:43.850 --> 00:01:46.290
we see the compilation error down there.

41
00:01:46.290 --> 00:01:49.510
So, watch mode is already a big improvement.

42
00:01:49.510 --> 00:01:52.540
The downside is that we still have to

43
00:01:52.540 --> 00:01:55.180
specifically target this file here.

44
00:01:55.180 --> 00:01:56.700
And at the moment, of course,

45
00:01:56.700 --> 00:01:58.980
this is the only file we're working with,

46
00:01:58.980 --> 00:02:00.940
but typically in bigger projects,

47
00:02:00.940 --> 00:02:02.973
that's not necessarily the case.

