WEBVTT

00:02.200 --> 00:03.840
Kursleiter: So können wir also

00:03.840 --> 00:06.290
mehrere Dateien mit TypeScript verwalten.

00:06.290 --> 00:08.870
Wenn Sie mit mehreren Dateien arbeiten, wie wir es

00:08.870 --> 00:11.500
hier tun, können Sie sie auch mit Modulen ineinander

00:11.500 --> 00:15.280
importieren, was Sie vielleicht von Vanilla JavaScript kennen, dort haben

00:15.280 --> 00:18.180
wir auch Module, das ist etwas, das ich in einem eigenen

00:18.180 --> 00:20.770
Abschnitt dieses Kurses behandeln werde, aber für

00:20.770 --> 00:23.830
jetzt haben wir nur zwei Dateien, die nicht ineinander importiert

00:23.830 --> 00:25.560
werden, sondern die stattdessen

00:25.560 --> 00:31.040
in index importiert werden.

00:31.040 --> 00:31.040
html.

00:31.040 --> 00:32.990
Nun wissen wir aber, dass

00:32.990 --> 00:35.930
wir dies als Projekt verwalten und mehrere

00:35.930 --> 00:39.060
Dateien kompilieren können.

00:39.060 --> 00:41.910
Werfen wir nun einen Blick auf die tsconfig. json-Datei, da dies eine

00:41.910 --> 00:45.660
wichtige Datei für die Verwaltung dieses Projekts ist, die

00:45.660 --> 00:48.100
TypeScript im Wesentlichen mitteilt,

00:48.100 --> 00:51.290
wie es diese Dateien kompilieren soll.

00:51.290 --> 00:55.260
Bevor wir nun in die compilerOptions eintauchen, wo wir, wie der Name schon

00:55.260 --> 00:56.470
sagt, konfigurieren können,

00:56.470 --> 00:59.620
wie sich der Compiler verhält, scrollen wir nach unten zu

00:59.620 --> 01:02.220
der Stelle vor der schließenden geschweiften Klammer,

01:02.220 --> 01:03.760
aber nach dieser verschachtelten

01:03.760 --> 01:08.340
schließenden geschweiften Klammer, und sehen wir uns einige der Optionen an, die wir

01:08.340 --> 01:14.190
hier hinzufügen können, die sich nicht auf den Compiler oder das Verhalten des Kompilierschritts auswirken,

01:14.190 --> 01:18.410
sondern darauf, wie der Compiler mit diesem Projekt arbeitet, denn dort können

01:18.410 --> 01:23.410
Sie zum Beispiel eine exclude-Option festlegen.

01:23.700 --> 01:26.770
Wenn Sie nun hier exclude hinzufügen, wird das ein Array

01:26.770 --> 01:30.450
sein, und was Sie hier eingeben können, sind Pfade zu Dateien, die

01:30.450 --> 01:33.480
nicht in die Kompilierung einbezogen werden sollen,

01:33.480 --> 01:36.400
wenn Sie TSC auf dem gesamten Projekt ausführen.

01:36.400 --> 01:38.010
Hier könnten wir zum Beispiel sagen, dass

01:38.010 --> 01:41.137
wir die Analytik ausschließen wollen. ts aus der Kompilierung, und natürlich

01:41.137 --> 01:43.390
macht das hier nicht viel Sinn, aber nur um zu zeigen,

01:43.390 --> 01:45.300
wie das funktioniert.

01:45.300 --> 01:49.350
Wenn wir das tun und nun tsc erneut ausführen, lösche ich zunächst

01:49.350 --> 01:51.600
analytics. js, so dass wir sehen

01:51.600 --> 01:53.730
können, ob es neu erstellt wird, wenn wir

01:53.730 --> 01:57.140
jetzt tsc oder tsc im Überwachungsmodus ausführen, sehen Sie

01:57.140 --> 01:59.810
keine Analysen. js-Datei erstellt wird, und der

01:59.810 --> 02:02.060
Grund dafür ist, dass wir diese Datei ausschließen.

02:02.060 --> 02:03.340
Für diese Datei macht das natürlich

02:03.340 --> 02:04.670
nicht viel Sinn, weil ich sie

02:04.670 --> 02:07.250
normalerweise einschließen möchte, aber wenn Sie eine

02:07.250 --> 02:09.360
Datei haben, die aus irgendeinem Grund nicht kompiliert

02:09.360 --> 02:12.440
werden soll, können Sie sie so ausschließen.

02:12.440 --> 02:14.210
Sie können auch mit Platzhaltern arbeiten,

02:14.210 --> 02:15.810
wenn Sie zum Beispiel eine Datei mit

02:15.810 --> 02:20.810
dem Namen analytics haben. dev. ts und man will das nicht wirklich

02:20.850 --> 02:22.900
kompilieren, man könnte sagen, alle

02:22.900 --> 02:25.770
Dateien, die auf dev. ts sollten nicht kompiliert

02:25.770 --> 02:27.790
werden, und Sie können das tun, indem Sie

02:27.790 --> 02:29.620
hier auch ein Sternchen hinzufügen,

02:29.620 --> 02:31.630
das im Grunde ein Platzhalter ist, und

02:31.630 --> 02:33.750
nun wird TypeScript alle Dateien ignorieren,

02:33.750 --> 02:36.470
die . dev. ts enthalten.

02:36.470 --> 02:40.037
Sie könnten hier auch Sternchen, Sternchen, Schrägstrich einfügen,

02:40.037 --> 02:43.080
und das würde bedeuten, dass jede Datei mit diesem Muster

02:43.080 --> 02:45.770
in einem beliebigen Ordner ignoriert wird.

02:45.770 --> 02:47.420
Das sind also Dinge, die man hier einstellen

02:47.420 --> 02:49.220
kann. Das Einzige, was ich hier einstellen

02:49.220 --> 02:51.500
möchte, und das ist eine Einstellung, die man oft findet,

02:51.500 --> 02:54.103
ist, dass ich node_modules ausschließen möchte, und die Idee

02:55.409 --> 02:58.260
dabei ist, dass ich keine TypeScript-Dateien kompilieren möchte,

02:58.260 --> 03:01.373
die ich vielleicht innerhalb von node_modules habe.

03:02.449 --> 03:05.080
node_modules ist der Ordner, der alle Abhängigkeiten

03:05.080 --> 03:09.570
enthält, die wir hier im Paket installieren.

03:09.570 --> 03:09.570
json

03:09.570 --> 03:11.890
und die Abhängigkeiten dieser Abhängigkeiten,

03:11.890 --> 03:14.660
und daher sind dies Bibliotheken von Drittanbietern, die

03:14.660 --> 03:16.810
wir importieren, die wir nicht berühren wollen,

03:16.810 --> 03:18.510
und wenn eine dieser Bibliotheken TypeScript-Code

03:18.510 --> 03:20.630
ausliefern sollte, dann wollen wir sie auf keinen

03:20.630 --> 03:22.690
Fall kompilieren, es wird nur unseren Kompilierungsprozess

03:22.690 --> 03:25.840
verlangsamen, und im schlimmsten Fall könnte es sogar unser Projekt

03:25.840 --> 03:29.200
zerstören.

03:29.200 --> 03:30.370
Daher ist es üblich, node_modules

03:30.370 --> 03:33.330
hier auszuschließen, obwohl ich sagen möchte, dass, wenn Sie

03:33.330 --> 03:36.510
die Option exclude nicht angeben, node_modules automatisch als

03:36.510 --> 03:41.420
Standardeinstellung ausgeschlossen wird, so dass Sie diese Option hier nicht wirklich hinzufügen

03:41.420 --> 03:43.980
müssen, dies wäre die Standardeinstellung, ich möchte

03:43.980 --> 03:48.520
nur zeigen, dass exclude existiert und wie Sie es verwenden können, wenn die einzige Sache,

03:48.520 --> 03:50.570
die Sie ausschließen möchten, node_modules

03:50.570 --> 03:55.670
ist, Sie müssen den Schlüssel exclude überhaupt nicht hinzufügen.

03:55.670 --> 03:58.500
Wenn Sie es jedoch hinzufügen, sollten Sie node_modules

03:58.500 --> 04:01.400
setzen, da es sonst nicht ausgeschlossen wird.

04:01.400 --> 04:04.570
Neben exclude gibt es auch include, und include

04:04.570 --> 04:06.630
erlaubt das Gegenteil, nämlich

04:06.630 --> 04:09.570
TypeScript mitzuteilen, welche Dateien in

04:09.570 --> 04:12.730
den Kompilierungsprozess einbezogen werden

04:12.730 --> 04:16.380
sollen, und alles, was hier nicht aufgeführt ist, wird

04:16.380 --> 04:20.620
nicht kompiliert. ts hier, werden Sie sehen, wenn ich tsc erneut ausführe, werden

04:20.620 --> 04:23.470
wir auch keine Analysen erhalten. ts-Datei, oder keine

04:23.470 --> 04:25.570
Analysen. js-Datei sollte ich sagen.

04:25.570 --> 04:26.403
Warum?

04:26.403 --> 04:29.230
Weil die Analytik. js ist nicht in Include enthalten,

04:29.230 --> 04:32.370
und wie gesagt, wenn wir den Include-Schlüssel setzen, dann müssen

04:32.370 --> 04:33.970
wir wirklich alles einschließen,

04:33.970 --> 04:35.810
was wir kompilieren wollen.

04:35.810 --> 04:40.080
Hier könnten wir dann natürlich auch die Analytik hinzufügen. ts hier, und mit diesem Zusatz würden

04:40.080 --> 04:43.950
wir beginnen und es kompilieren, wie Sie jetzt sehen, haben wir

04:43.950 --> 04:46.740
die Analysen. js-Datei, oder alternativ

04:46.740 --> 04:49.650
geben wir hier einen ganzen Ordner an, der typischerweise

04:49.650 --> 04:52.560
die Dateien enthält, die wir kompilieren wollen.

04:52.560 --> 04:55.520
Wenn wir also einen Unterordner eines

04:55.520 --> 04:57.160
Ordners ausschließen,

04:57.160 --> 05:00.290
der Teil von include ist, dann wird dieser

05:00.290 --> 05:01.740
ausgeschlossene

05:01.740 --> 05:04.980
Unterordner ausgeschlossen, also kompilieren

05:04.980 --> 05:08.720
wir include minus exclude.

05:08.720 --> 05:10.420
Hier möchte ich natürlich kein Include setzen,

05:10.420 --> 05:12.520
ich möchte alle TypeScript-Dateien kompilieren, und

05:12.520 --> 05:15.050
deshalb muss ich mir darüber keine Gedanken machen, der Ausschluss

05:15.050 --> 05:17.200
von node_modules ist alles, was ich brauche, und wie ich

05:17.200 --> 05:18.930
bereits erklärt habe, muss ich das theoretisch

05:18.930 --> 05:20.280
nicht einmal hinzufügen, weil es standardmäßig

05:20.280 --> 05:22.423
ausgeschlossen wird.

05:23.260 --> 05:25.310
Jetzt haben Sie auch eine Datei-Option, die es

05:25.310 --> 05:27.560
Ihnen erlaubt, auf die einzelnen Dateien zu zeigen,

05:27.560 --> 05:30.870
es ist also ein bisschen wie include, mit dem Unterschied, dass Sie hier nicht

05:30.870 --> 05:34.200
ganze Ordner angeben können, die Sie einschließen wollen, stattdessen

05:34.200 --> 05:36.020
geben Sie wirklich nur die einzelnen Dateien

05:36.020 --> 05:38.220
an, die Sie kompilieren wollen, das könnte eine Option

05:38.220 --> 05:40.710
für kleinere Projekte sein, bei denen Sie wissen, dass

05:40.710 --> 05:43.660
Sie nur mit freien Dateien arbeiten werden, und aus irgendeinem

05:43.660 --> 05:46.770
Grund haben Sie ein paar andere TypeScript-Dateien, die Sie aber nicht

05:46.770 --> 05:48.560
anfassen wollen, dann können Sie die Liste

05:48.560 --> 05:51.340
der Dateien so einstellen.

05:51.340 --> 05:53.360
In der Realität werden Sie diese Einstellung

05:53.360 --> 05:55.740
jedoch nicht so oft benötigen.

05:55.740 --> 05:58.530
Das war's dann auch schon mit den grundlegenden Zusammenstellungs-

05:58.530 --> 06:00.910
oder Projektmanagementoptionen.

06:00.910 --> 06:03.900
Natürlich können wir noch viel mehr spezifizieren,

06:03.900 --> 06:08.230
viel mehr über den Compiler selbst und sein Verhalten während des

06:08.230 --> 06:10.793
Kompilierungsschritts.
