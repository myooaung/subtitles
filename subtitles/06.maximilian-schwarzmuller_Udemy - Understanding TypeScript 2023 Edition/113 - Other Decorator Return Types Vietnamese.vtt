WEBVTT

00:02.440 --> 00:05.240
Người kể chuyện: Chúng ta đã thấy cách chúng ta có

00:05.240 --> 00:08.120
thể xây dựng những thứ khá tuyệt vời với các bộ trang

00:08.120 --> 00:11.740
trí, các nhà máy trang trí và sau đó bằng cách sử dụng các giá trị trả

00:11.740 --> 00:12.790
về của các bộ trang

00:12.790 --> 00:14.930
trí mà trong các ví dụ, bộ trang trí lớp

00:14.930 --> 00:18.740
cho phép chúng ta thay thế về cơ bản lớp mà chúng ta đã thêm bộ trang trí

00:18.740 --> 00:21.400
vào bằng một lớp mà hoàn toàn khác, được xây dựng

00:21.400 --> 00:23.900
trên lớp hiện có, giống như trong trường hợp

00:23.900 --> 00:27.230
của chúng tôi và do đó có thể thêm một số chức năng.

00:27.230 --> 00:30.490
Bây giờ bạn cũng có thể trả lại giá trị trong các trình trang trí khác nhưng

00:30.490 --> 00:32.030
không phải trong tất cả chúng.

00:32.030 --> 00:35.430
Hoặc không phải trong tất cả chúng, giá trị trả về được tôn trọng.

00:35.430 --> 00:38.150
Bây giờ, các công cụ trang trí nơi bạn có thể trả về một thứ gì

00:38.150 --> 00:41.330
đó là các công cụ trang trí bạn có thể thêm vào các phương thức và các công

00:41.330 --> 00:43.540
cụ trang trí bạn thêm vào các công cụ truy cập.

00:43.540 --> 00:47.400
Vì vậy, ở đây trên setter log 2 và log 3 trên phương thức, hai trình

00:47.400 --> 00:51.210
trang trí này, log 2 và log 3, những thứ này cũng có thể trả về một

00:51.210 --> 00:54.080
cái gì đó và TypeScript sẽ sử dụng nó.

00:54.080 --> 00:58.040
Tất nhiên, các trình trang trí trên các thuộc tính và trên các

00:58.040 --> 01:00.670
tham số cũng có thể trả về một cái gì đó nhưng

01:00.670 --> 01:02.500
TypeScript sẽ bỏ qua nó.

01:02.500 --> 01:05.030
Vì vậy, các giá trị trả về không được hỗ trợ

01:05.030 --> 01:07.700
ở đó hoặc không được sử dụng chính xác.

01:07.700 --> 01:09.690
Bây giờ bạn có thể trả lại những gì trên nhật ký 3?

01:09.690 --> 01:12.680
Vì vậy, trên các trình trang trí phương thức và trên nhật ký 2,

01:12.680 --> 01:15.320
mặc dù vậy, trên các trình trang trí trình truy cập.

01:15.320 --> 01:19.320
Bạn có thể trả lại một bộ mô tả thuộc tính hoàn toàn mới.

01:19.320 --> 01:22.050
Nhật ký 2 và nhật ký 3, đó là hai trình trang trí mà tôi đang

01:22.050 --> 01:23.110
nói đến, phải không?

01:23.110 --> 01:28.110
Nhật ký 2 và nhật ký 3, cả hai đều lấy bộ mô tả khỏi thuộc tính, tắt phương thức,

01:28.170 --> 01:30.510
bạn có thể nói, chúng được đính kèm.

01:30.510 --> 01:33.034
Bởi vì một bộ truy cập giống như một phương

01:33.034 --> 01:36.220
thức, nên bạn có một hàm được thực thi ở đó.

01:36.220 --> 01:39.072
Bây giờ bộ mô tả thuộc tính là một thứ JavaScript,

01:39.072 --> 01:41.980
như bạn đã biết, nếu chúng ta xem lại trang này

01:41.980 --> 01:44.500
và tải lại nó, chúng ta sẽ thấy rằng, ví

01:44.500 --> 01:47.260
dụ đối với trình trang trí bộ truy cập của chúng

01:47.260 --> 01:50.497
ta, bộ mô tả thuộc tính là đối tượng này ở đây có thể

01:50.497 --> 01:52.470
định cấu hình và đếm được và nhận

01:52.470 --> 01:54.910
và đặt thuộc tính.

01:54.910 --> 01:57.660
Và đối với trình trang trí phương thức, trình mô tả của

01:57.660 --> 01:59.330
chúng tôi là đối tượng này ở đây cũng

01:59.330 --> 02:02.290
có thể định cấu hình, đếm được, giá trị và có thể ghi.

02:02.290 --> 02:04.410
Và đây là JavaScript vani.

02:04.410 --> 02:07.830
Bạn cũng có các bộ mô tả thuộc tính trong vanilla JavaScript.

02:07.830 --> 02:11.710
Chúng cho phép bạn xác định một thuộc tính chi tiết hơn.

02:11.710 --> 02:14.430
Tất nhiên, bạn có thể gán một giá trị cho một thuộc tính và vì

02:14.430 --> 02:15.990
chúng ta đang nói về một phương thức,

02:15.990 --> 02:17.940
nên giá trị là một hàm trong trường hợp này

02:17.940 --> 02:20.010
nhưng bạn cũng có thể kiểm soát xem nó có thể ghi

02:20.010 --> 02:22.910
hay không, vì vậy nếu nó có thể được thay đổi sau khi nó được tạo,

02:22.910 --> 02:24.700
sau khi đối tượng đã được tạo.

02:24.700 --> 02:25.950
Liệu nó có thể định cấu hình hay không,

02:25.950 --> 02:27.140
vì vậy liệu bạn có thể thay đổi cấu hình

02:27.140 --> 02:29.570
của nó hay không và liệu bạn có thể xóa thuộc tính này hay không.

02:29.570 --> 02:30.770
Và nếu nó có thể đếm được,

02:30.770 --> 02:33.166
điều đó có nghĩa là nếu nó xuất hiện khi bạn lặp

02:33.166 --> 02:35.410
qua đối tượng của mình chẳng hạn.

02:35.410 --> 02:36.810
Và do đó, một phương thức chẳng

02:36.810 --> 02:38.790
hạn theo mặc định, phương thức này được đặt thành

02:38.790 --> 02:40.930
false để nếu bạn sử dụng vòng lặp for trên một đối

02:40.930 --> 02:44.040
tượng thì phương thức này không được in dưới dạng thuộc tính.

02:44.040 --> 02:45.240
Đối với một trình truy

02:45.240 --> 02:47.180
cập, chúng tôi cũng có thể định cấu

02:47.180 --> 02:49.750
hình và đếm được, nhưng chúng tôi nhận và đặt

02:49.750 --> 02:53.040
và ở đó, tất nhiên, bạn cũng có thể trả về một bộ mô tả mới

02:53.040 --> 02:56.180
gán một phương thức thiết lập hoàn toàn mới hoặc đột

02:56.180 --> 02:58.750
nhiên thêm chức năng nhận.

02:58.750 --> 03:01.585
Vì vậy, ở đây trong nhật ký 2 và nhật ký 3, cuối

03:01.585 --> 03:05.190
cùng bạn có thể trả về một đối tượng mô tả mới và nói rõ với

03:05.190 --> 03:08.020
TypeScript rằng bạn sẽ làm như vậy bằng cách

03:08.020 --> 03:10.560
trả về hoặc bằng cách đặt kiểu trả về thành

03:10.560 --> 03:14.860
bộ mô tả thuộc tính và do đó, bạn cũng có thể đặt từ khóa set , từ khóa

03:14.860 --> 03:17.010
get, thuộc tính có thể định cấu hình

03:17.010 --> 03:22.010
hoặc có thể đếm được và thay đổi cách cấu hình trình truy cập hoặc phương thức

03:22.500 --> 03:24.800
này.

03:24.800 --> 03:27.560
Bây giờ tôi không muốn làm điều đó ở đây cho trình

03:27.560 --> 03:29.800
truy cập, tôi không thể làm gì thú vị với

03:29.800 --> 03:32.520
nó vì vậy tôi sẽ không trả về một bộ mô tả thuộc tính,

03:32.520 --> 03:36.400
nhưng tôi sẽ thực sự chỉ cho bạn một ví dụ với trình trang trí phương thức

03:36.400 --> 03:40.080
nơi chúng tôi sẽ trả về một thứ gì đó và chúng tôi có thể xây dựng thú

03:40.080 --> 03:42.533
vị với sự giúp đỡ của trang trí.
