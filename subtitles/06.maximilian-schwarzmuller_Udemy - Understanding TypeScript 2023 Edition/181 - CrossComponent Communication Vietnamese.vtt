WEBVTT

00:02.230 --> 00:05.130
Giảng viên: Vì vậy, bây giờ chúng tôi muốn chuyển văn bản đã nhập

00:05.130 --> 00:07.960
ở đây từ thành phần NewTodo sang thành phần ứng dụng.

00:07.960 --> 00:09.690
Tại sao lại là thành phần ứng dụng?

00:09.690 --> 00:11.160
Bởi vì đó là thành phần của

00:11.160 --> 00:13.610
chúng tôi có liên kết trực tiếp đến cả thành

00:13.610 --> 00:16.340
phần NewTodo cũng như thành phần TodoList.

00:16.340 --> 00:19.320
Vì vậy, ở đây tôi muốn thêm một chức năng mới

00:20.800 --> 00:24.560
và tôi sẽ đặt tên cho nó là todoAddHandler, tên tùy thuộc

00:24.560 --> 00:25.393
vào bạn, tôi

00:25.393 --> 00:27.990
chỉ muốn sử dụng quy ước có trình xử lý ở

00:27.990 --> 00:31.390
cuối nếu đó là chức năng kích hoạt một sự kiện.

00:31.390 --> 00:34.330
Và ở đây, tôi mong đợi nhận được văn bản, dưới dạng một chuỗi,

00:34.330 --> 00:37.970
đó là chức năng của chúng tôi để chúng tôi có thể mong đợi điều này.

00:37.970 --> 00:40.720
Và sau đó tôi muốn thêm điều này như một việc cần làm ở đây.

00:40.720 --> 00:42.270
Tất nhiên, bây giờ, vì bạn biết React, bạn

00:42.270 --> 00:45.230
biết rằng việc cập nhật mảng này một mình sẽ không thực hiện được mẹo, điều

00:45.230 --> 00:47.440
này sẽ không kết xuất lại thành phần này, vì vậy chúng tôi

00:47.440 --> 00:49.360
sẽ phải sử dụng một số quản lý trạng thái ở đây để thực

00:49.360 --> 00:51.900
hiện công việc này, trước khi chúng tôi thực hiện tuy nhiên, hãy

00:51.900 --> 00:53.040
đảm bảo rằng ít nhất chúng ta

00:53.040 --> 00:54.750
nhận được giá trị cho hàm này.

00:54.750 --> 00:57.460
Vì vậy, hãy ghi lại văn bản ở đây và sau đó chúng ta có thể tập trung

00:57.460 --> 01:00.133
vào phần quản lý trạng thái của nó như một bước thứ hai.

01:01.000 --> 01:03.020
Để có được điều đó ở đây, chúng ta

01:03.020 --> 01:05.850
cần đảm bảo rằng chức năng todoAddHandler này

01:05.850 --> 01:09.050
có thể được gọi từ bên trong thành phần NewTodo vì đó

01:09.050 --> 01:12.113
là nơi chúng ta thêm việc cần làm cuối cùng.

01:13.090 --> 01:15.370
Bây giờ, làm cách nào để làm cho chức năng này

01:15.370 --> 01:17.860
có thể gọi được từ bên trong thành phần này?

01:17.860 --> 01:22.300
Chúng tôi chuyển một con trỏ tại hàm này tới thành phần đó.

01:22.300 --> 01:25.640
Vì vậy, ở đây chúng ta có thể thêm một tên thuộc tính, onAddTodo, và

01:25.640 --> 01:27.280
bạn có thể đặt tên cho nó theo bất

01:27.280 --> 01:28.560
kỳ cách nào bạn muốn, tôi

01:28.560 --> 01:32.030
chỉ đặt tên như thế này vì điều này về cơ bản sẽ xảy ra khi một sự kiện, một

01:32.030 --> 01:34.600
sự kiện mà tất nhiên chúng ta vẫn kiểm soát.

01:34.600 --> 01:38.030
Và ở đây, tôi muốn chuyển tiếp todoAddHandler nên

01:38.030 --> 01:40.600
tôi chuyển một con trỏ vào hàm này, tôi

01:40.600 --> 01:42.120
không thực thi nó ở đây,

01:42.120 --> 01:44.620
tôi chỉ chuyển một con trỏ tới hàm này,

01:44.620 --> 01:49.240
vào onAddTodo để thay vì NewTodo trên các đạo cụ, mà chúng ta có thể

01:49.240 --> 01:52.230
lấy ở đây, chúng ta có thể gọi cái này, để chúng

01:52.230 --> 01:56.220
ta có thể gọi props. onAddTodo tại đây và chuyển tiếp

01:56.220 --> 01:59.640
văn bản đã nhập, đó là ý tưởng. Nhưng, tất nhiên, TypeScript

01:59.640 --> 02:01.730
không thích điều này bởi vì nó không

02:01.730 --> 02:03.440
biết rằng sẽ có một chỗ dựa onAddTodo

02:03.440 --> 02:06.180
trên các chỗ dựa của chúng ta ở đây và chỗ dựa đó

02:06.180 --> 02:08.240
sẽ trông như thế nào.

02:08.240 --> 02:11.670
Vì vậy, giống như trong TodoList, chúng ta phải thiết lập giao diện hoặc

02:11.670 --> 02:14.540
đơn giản là định nghĩa kiểu cho các đạo cụ của chúng ta.

02:14.540 --> 02:18.200
Vì vậy, hãy truy cập NewTodo và có thể, một lần nữa, thêm giao diện,

02:18.200 --> 02:20.820
bạn cũng có thể thêm một loại khóa học và tôi sẽ

02:20.820 --> 02:23.060
làm điều đó ở đây để kết hợp mọi thứ.

02:23.060 --> 02:25.380
Tôi thường sẽ luôn chọn một giao diện

02:25.380 --> 02:27.660
nhưng sử dụng một loại cũng tốt.

02:27.660 --> 02:30.493
Vì vậy, để sử dụng một loại ở đây, chúng ta có thể đặt

02:31.357 --> 02:33.820
tên cho nó là NewTodoProps và loại này là một

02:33.820 --> 02:36.830
loại đối tượng mà tôi muốn có một chỗ dựa onAddTodo

02:36.830 --> 02:39.120
và đến lượt nó, đây sẽ là một loại hàm, nó

02:39.120 --> 02:40.753
sẽ trỏ đến một hàm.

02:41.720 --> 02:44.290
Bạn sẽ xác định các loại hàm như thế này, như bạn

02:44.290 --> 02:46.760
đã học, nó sẽ là một hàm không trả về bất kỳ thứ

02:46.760 --> 02:48.850
gì ngoài việc mong đợi một chu vi và đó

02:48.850 --> 02:51.410
sẽ là văn bản mà người dùng đã nhập.

02:51.410 --> 02:54.023
Vì vậy, văn bản Todo thuộc loại chuỗi, đó là

02:55.120 --> 02:57.123
những gì chức năng này mong đợi.

02:58.920 --> 03:01.770
Bây giờ, hãy thiết lập loại chung này ở đây và chỉ

03:01.770 --> 03:03.103
vào NewTodoProps.

03:04.510 --> 03:08.620
Và với điều đó, chúng ta có thể gọi onAddTodo và chuyển vào một chuỗi.

03:08.620 --> 03:11.470
Và nếu nó cố gắng chuyển vào một số ở đây, chẳng hạn,

03:11.470 --> 03:14.730
thì tất nhiên, chúng tôi sẽ gặp lỗi vì chúng tôi đã xác định

03:14.730 --> 03:17.590
rõ ràng rằng đối số phải là một chuỗi ở trên đó.

03:17.590 --> 03:18.733
Vì vậy, hãy hoàn nguyên điều này.

03:20.550 --> 03:24.630
Cùng với đó, nếu chúng tôi nhập lại mục tiêu mới, hoàn thành mục tiêu

03:24.630 --> 03:27.150
đó sau một tháng, chúng tôi lại thấy nhật ký

03:27.150 --> 03:28.690
ở đây nhưng bây giờ nhật ký

03:28.690 --> 03:30.750
đến từ thành phần ứng dụng, như bạn

03:30.750 --> 03:34.170
có thể thấy rõ, vì chúng tôi đã thêm nhật ký này ở đây.

03:34.170 --> 03:37.380
Vì vậy, giao tiếp này giữa thành phần NewTodo và thành

03:37.380 --> 03:39.480
phần ứng dụng ở đây hoạt động.

03:39.480 --> 03:42.750
Và cùng với đó, hãy triển khai một số quản lý trạng thái ở đây và,

03:42.750 --> 03:44.160
một lần nữa, đây cũng là điều

03:44.160 --> 03:46.850
bạn có thể tự mình thử trước nếu muốn, để đảm bảo rằng

03:46.850 --> 03:49.670
chúng tôi kết xuất todos ở trạng thái để bất cứ khi nào chúng

03:49.670 --> 03:52.170
tôi cập nhật todos của mình, chúng tôi cũng sẽ thực

03:52.170 --> 03:54.460
hiện lại kết xuất thành phần này.

03:54.460 --> 03:56.263
Hãy làm điều đó trong bài giảng tiếp theo.
