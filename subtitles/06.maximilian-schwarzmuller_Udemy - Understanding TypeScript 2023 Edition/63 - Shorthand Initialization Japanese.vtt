WEBVTT

00:02.320 --> 00:04.500
講師：私有財産と公共財を学んだので､

00:04.500 --> 00:07.650
名前も私有財産にしたいと思います｡

00:07.650 --> 00:10.730
そして今､ ここにちょっとした､ 問題というほどでもないけれど､

00:10.730 --> 00:12.730
ちょっとした不都合が発生しています｡

00:12.730 --> 00:14.540
名前フィールドがここにあり､

00:14.540 --> 00:16.810
コンストラクタでその値を取得し､

00:16.810 --> 00:21.920
コンストラクタのフィールドにその値を格納しています｡

00:21.920 --> 00:22.900
私たちはそれを実現することができますし､

00:22.900 --> 00:25.820
私たちがここで何をしているのかは､ 確かにとても明確です｡

00:25.820 --> 00:35.010
しかし､ 多くの使用例では､ 持っているすべてのプロパティやフィールドがコンストラクタで初期化されるようなクラスがたくさんあります｡

00:35.010 --> 00:36.520
そのため､ 多くの場合､

00:36.520 --> 00:39.870
このように上部にいくつかのプロパティやフィールドを記述し

00:39.870 --> 00:55.110
- private か public かは関係ありません - それをすべてコンストラクタ内で繰り返し､ コンストラクタ関数の中でこれらの値を初期化します｡

00:55.110 --> 00:57.080
そんなことする必要はない｡ 

00:57.080 --> 01:05.220
ここで二重の初期化コードを実行する代わりに､ 上のフィールド定義を取り除くことができます｡

01:05.220 --> 01:07.150
そして今､ あなたはエラーが発生することを確認しました｡ 

01:07.150 --> 01:09.040
しかし､ ここでこれを取り除き､

01:09.040 --> 01:15.130
代わりにパラメータの前にアクセス修飾子を追加するだけにすることもできます｡

01:15.130 --> 01:17.950
だから､ 公開すべき場合は､ 公開を追加する｡ 

01:17.950 --> 01:20.290
仮に､ 名前については､ 今は公開しておくとしましょう｡ 

01:20.290 --> 01:23.530
非公開にする場合は､ privateを追加します｡ 

01:23.530 --> 01:25.250
これはtypescriptに対して明示的な指示を与えるもので､

01:25.250 --> 01:41.950
コンストラクタでこれらの引数を取得するだけでなく､ このクラスに対して全く同じ名前のプロパティを作成することをtypescriptに指示します｡

01:41.950 --> 01:45.350
したがって､ ここでもnをnameに改めるべきだろう｡ 

01:45.350 --> 01:49.250
そのため､ nameプロパティがクリエータクラスに作成されるようにします｡

01:49.250 --> 01:54.270
つまり､ この二重初期化コードのショートカットがここにあるだけなのです｡

01:54.270 --> 01:56.340
従来はフィールドを探し､ その値を格納する必要がありましたが､

01:56.340 --> 02:00.110
今は一度にすべてを行うことができます｡

02:00.110 --> 02:02.690
コンストラクタが受け取る引数を定義し､

02:02.690 --> 02:14.420
そのようなアクセス修飾子を前に持つ引数ごとに､ 同じ名前のプロパティを作成し､ その作成したプロパティに引数の値を格納するのです｡

02:14.420 --> 02:20.780
ですから､ あとはここで部門の作成を修正し､ この新しい引数を追加したのでIDを追加するだけです｡

02:20.780 --> 02:22.230
そして､ この下にあるdescribeを呼び出すと､

02:22.230 --> 02:28.113
実際にIDも入れます｡ このdepartment user stringを変更することで､ 文字通り､

02:29.130 --> 02:38.890
Departmentとなります｡

02:38.890 --> 02:38.890
idと､

02:40.205 --> 02:42.450
ここでこれ｡ という名前をつけると､

02:42.450 --> 02:45.380
これでもかというほど効果があることがわかります｡

02:45.380 --> 02:47.360
ここではエラーなくコンパイルされます｡ 

02:47.360 --> 02:51.710
そして､ ここではIDと名前が出力されています｡

02:51.710 --> 02:53.480
そのちょっとしたショートカットのおかげで､

02:53.480 --> 02:55.563
すべてのコードを節約することもできました｡
