WEBVTT

00:02.250 --> 00:04.530
Instruktor: Poznaliśmy również

00:04.530 --> 00:09.240
przydatne funkcje związane z tablicami i obiektami oraz sposoby pobierania

00:09.240 --> 00:13.600
danych przechowywanych w tablicach i obiektach.

00:13.600 --> 00:17.180
Teraz w tym celu dodajmy tutaj nową tablicę, powiedzmy hobbies

00:17.180 --> 00:19.880
i to może być tablica ciągów znaków.

00:22.520 --> 00:26.700
Jak sport i gotowanie tutaj i teraz oczywiście

00:26.700 --> 00:31.700
możemy pobrać elementy według indeksu tutaj, jak to na

00:31.810 --> 00:33.030
przykład.

00:33.030 --> 00:36.150
Ale, powinieneś znać te podstawowe rzeczy związane z JavaScript.

00:36.150 --> 00:40.310
Next Gen JavaScript, wprowadzają fajną funkcję, jeśli chcemy wyodrębnić

00:41.172 --> 00:43.910
wszystkie wartości tablicy.

00:43.910 --> 00:44.990
Kiedy można tego potrzebować?

00:44.990 --> 00:48.670
Powiedzmy, że masz aktywne hobby i to jest

00:48.670 --> 00:53.670
tablica, gdzie mam wędrówki jako hobby, a teraz chcę dodać

00:54.200 --> 00:56.510
sport i gotowanie.

00:56.510 --> 00:58.960
Teraz możemy dodać przedmiot do aktywnych zainteresowań,

00:58.960 --> 01:01.290
wywołując push, przy okazji w przypadku, gdy zastanawiasz

01:01.290 --> 01:05.620
się, jak mogę pchnąć do stałej, pamiętaj, że tablice są obiektami, a obiekty są wartościami

01:05.620 --> 01:08.130
referencyjnymi.

01:08.130 --> 01:11.010
Gdy naciskamy zmieniamy pamięć, ale nie adres.

01:11.010 --> 01:14.150
Jeśli nic ci to nie mówi sprawdź dodatkowe zasoby, które

01:14.150 --> 01:17.390
dołączyłem do tego wykładu dotyczące tego tematu, więc wracając

01:17.390 --> 01:20.170
do tego przykładu to, możemy wcisnąć tutaj, ale wcisnąć,

01:20.170 --> 01:24.120
jeśli wciśniemy hobbies, dodamy hobbies jako nową tablicę w tablicy,

01:24.120 --> 01:27.540
więc jako nową zagnieżdżoną tablicę.

01:27.540 --> 01:30.920
Które typy faktycznie by to wykryły, mówi mi, że jeśli

01:30.920 --> 01:33.690
chcę dodać tablicę ciągów do tablicy ciągów,

01:33.690 --> 01:36.143
to nie jest to w porządku.

01:37.110 --> 01:40.390
Więc zamiast tego push przyjmuje pojedyncze wartości,

01:40.390 --> 01:44.450
więc moglibyśmy przekazać hobby zero, właściwie push przyjmuje nawet

01:44.450 --> 01:47.450
nieograniczoną ilość argumentów, abyśmy mogli popchnąć

01:47.450 --> 01:51.240
wiele elementów w kolejności na raz w ten sposób.

01:51.240 --> 01:54.013
Jest to jednak trochę uciążliwe i tu z pomocą przychodzi Spread

01:54.013 --> 01:54.890
Operator.

01:54.890 --> 01:57.700
Wygląda to tak, to trzy kropki i tak to wygląda dziwnie,

01:57.700 --> 02:00.850
ale jest to poprawny operator JavaScript obsługiwany

02:00.850 --> 02:04.770
przez [Hypescript? ] i po tym określamy lub wskazujemy

02:04.770 --> 02:09.547
na tablicę lub obiekt, jak się również dowiesz, który chcemy

02:09.547 --> 02:11.700
rozłożyć.

02:11.700 --> 02:15.160
Więc co to robi, to mówi JavaScriptowi w końcu, ponieważ jest

02:15.160 --> 02:17.690
to Vanilla JavaScript Operator dostępny

02:17.690 --> 02:21.070
w Modern JavaScript, więc mówi JavaScriptowi, aby wyciągnąć

02:21.070 --> 02:25.500
wszystkie elementy po tablicy i zasadniczo dodać je jako listę wartości,

02:25.500 --> 02:28.530
więc nie jako tablicę, ale listę poszczególnych wartości

02:28.530 --> 02:31.900
w miejscu, w którym użyłeś Operatora, więc tutaj na przykład

02:31.900 --> 02:33.950
jest lista argumentów przekazanych

02:33.950 --> 02:36.090
do push i teraz miejsce, w którym mógłbyś

02:36.090 --> 02:41.740
użyć tego jest bezpośrednio, gdy tworzysz nową tablicę.

02:41.740 --> 02:46.220
Tam też można rozłożyć istniejącą tablicę na tę tablicę.

02:46.220 --> 02:48.950
Więc w zasadzie zawsze, gdy potrzebujesz listy wartości rozdzielonych

02:48.950 --> 02:51.460
przecinkami, możesz użyć Operatora Spread z tablicą,

02:51.460 --> 02:54.360
aby uzyskać taką listę rozdzieloną przecinkami.

02:54.360 --> 02:56.660
Taka jest idea Operatora Spread i dlatego

02:56.660 --> 02:59.230
jest on naprawdę przydatny do wyciągania elementów

02:59.230 --> 03:00.663
tablicy.

03:01.860 --> 03:04.380
Operator Spread, wszystko to, że nie istnieje

03:04.380 --> 03:07.880
tylko na tablicach, istnieje również na obiektach.

03:07.880 --> 03:10.990
Powiedzmy, że mamy osobę, która ma klucz nazwy,

03:10.990 --> 03:14.070
Max i klucz h, który jest 30, a teraz chcemy

03:14.070 --> 03:16.640
stworzyć skopiowaną osobę.

03:16.640 --> 03:19.060
Jeśli po prostu przypiszemy osobę w

03:19.060 --> 03:22.680
ten sposób, to co robimy, to właściwie kopiujemy wskaźnik

03:22.680 --> 03:25.000
na ten obiekt osoby w pamięci do tej

03:25.000 --> 03:27.050
stałej copy person.

03:27.050 --> 03:30.470
I znowu, sprawdź moje zasoby wartości referencyjnych dołączone,

03:30.470 --> 03:32.360
jeśli to nie mówi ci wiele.

03:32.360 --> 03:36.190
Tak więc, tak naprawdę nie tworzymy kopii tego obiektu.

03:36.190 --> 03:38.610
Teraz, aby stworzyć prawdziwą kopię, możemy użyć

03:38.610 --> 03:40.880
operatora rozprzestrzeniania z obiektami.

03:40.880 --> 03:43.400
Tworzymy nowy obiekt z nawiasami klamrowymi,

03:43.400 --> 03:46.510
a następnie używamy operatora Spread, trzy kropki z naszym

03:46.510 --> 03:49.630
pierwszym obiektem, który chcemy skopiować.

03:49.630 --> 03:52.970
Teraz to, co to robi, to wyciąga wszystkie elementy, ale oczywiście

03:52.970 --> 03:56.310
tutaj elementy są parami wartości klucza, a nie pojedynczymi wartościami

03:56.310 --> 03:58.630
jak w przypadku tablicy.

03:58.630 --> 04:00.550
Tutaj mamy pary wartości kluczy.

04:00.550 --> 04:04.110
Tak więc te pary wartości kluczy są wyciągane stamtąd, a następnie

04:04.110 --> 04:08.010
mogą być używane wszędzie tam, gdzie potrzebujesz par wartości

04:08.010 --> 04:11.310
kluczy, co zwykle jest nigdy obiektem, do którego możesz

04:11.310 --> 04:12.920
je dodać.

04:12.920 --> 04:15.447
Tak więc do tego skądinąd pustego obiektu

04:15.447 --> 04:19.100
dodano teraz pary wartości kluczy osoby, a ponieważ stworzyliśmy

04:19.100 --> 04:21.240
tu nowy obiekt i po prostu dodajemy

04:21.240 --> 04:23.700
go do par wartości kluczy, otrzymaliśmy

04:23.700 --> 04:27.310
doskonałą kopię oryginalnego obiektu, a nie tylko wskaźnika,

04:27.310 --> 04:30.803
który wskazuje na obiekt w pamięci.
