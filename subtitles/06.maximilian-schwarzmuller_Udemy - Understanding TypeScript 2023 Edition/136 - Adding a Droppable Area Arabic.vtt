WEBVTT

00:02.180 --> 00:04.910
المدرب: بصريًا ، يمكننا السحب والإفلات ولكن

00:04.910 --> 00:07.240
من الناحية الفنية في JavaScript بالطبع

00:07.240 --> 00:10.410
، ليس لدى النص البرمجي أي فكرة عما يحدث.

00:10.410 --> 00:12.030
لكن بالنسبة لنا نحن البشر بالطبع

00:12.030 --> 00:14.810
، من الواضح أننا نسحب هذا العنصر المحدد هنا.

00:14.810 --> 00:16.300
ولكن إذا ألقينا نظرة على

00:16.300 --> 00:20.320
الكود الخاص بنا ، كيف ستعرف JavaScript ما الذي يتم جره إلى أين؟

00:20.320 --> 00:21.980
كيف يمكننا تحديث حالتنا بناءً

00:21.980 --> 00:24.440
على المعلومات المتوفرة لدينا الآن؟

00:24.440 --> 00:26.690
لن يكون ذلك ممكنًا حقًا.

00:26.690 --> 00:28.810
لذا لكي نجعل ذلك يعمل في JavaScript

00:28.810 --> 00:30.840
، يتعين علينا العودة إلى فئة

00:30.840 --> 00:33.960
العنصر القابل للسحب ، عنصر المشروع.

00:33.960 --> 00:36.710
هناك ، في dragStartHandler ، ليس تسجيل

00:36.710 --> 00:38.250
حدث وحدة التحكم هو كل ما

00:38.250 --> 00:39.950
يجب علينا القيام به.

00:39.950 --> 00:42.200
في الواقع لسنا بحاجة إلى القيام بذلك على الإطلاق.

00:42.200 --> 00:45.070
بدلاً من ذلك ، دعنا الآن نستخدم كائن الحدث الخاص

00:45.070 --> 00:48.210
بنا هنا لأنه يحتوي على خاصية نقل البيانات.

00:48.210 --> 00:50.440
هذا خاص لأحداث السحب ، أن لديك

00:50.440 --> 00:53.280
مثل هذه الخاصية لنقل البيانات.

00:53.280 --> 00:55.330
وعلى هذه الخاصية ، يمكنك إرفاق

00:55.330 --> 00:57.530
البيانات بحدث السحب وستتمكن لاحقًا

00:57.530 --> 00:59.520
من استخراج تلك البيانات عند

00:59.520 --> 01:01.390
قطرة وسيخزن المتصفح في JavaScript

01:01.390 --> 01:03.730
خلف الكواليس تلك البيانات أثناء

01:03.730 --> 01:06.430
عملية السحب والتأكد من أن البيانات الحصول

01:06.430 --> 01:09.470
عليها عند حدوث الانخفاض هو نفس البيانات التي

01:09.470 --> 01:12.020
ترفقها هنا.

01:12.020 --> 01:15.520
لذلك يمكنك استدعاء setData عند نقل البيانات ،

01:15.520 --> 01:18.910
لكن نقل البيانات قد يكون في الواقع فارغًا.

01:18.910 --> 01:21.080
لذلك علينا إضافة علامة تعجب هنا ، ونعلم

01:21.080 --> 01:23.460
بالطبع أنها لن تكون خالية هنا.

01:23.460 --> 01:25.700
قد تتساءل لماذا يمكن أن يكون لاغيا؟

01:25.700 --> 01:29.060
حسنًا ، يكون حدث السحب دائمًا من نفس النوع من الأحداث

01:29.060 --> 01:31.340
ولكن بناءً على المستمع الذي يقوم

01:31.340 --> 01:34.190
بتشغيله أو الحدث المحدد الذي تستمع إليه

01:34.190 --> 01:37.520
، فإن نقل البيانات ليس متاحًا بالضرورة.

01:37.520 --> 01:39.896
لذلك لا تمنحك جميع الأحداث المتعلقة

01:39.896 --> 01:44.073
بالسحب كائن حدث يحتوي على كائن نقل البيانات.

01:45.320 --> 01:46.620
ومع ذلك ، فإن dragStartHandler

01:46.620 --> 01:49.080
الذي يتم تشغيله في حدث بدء السحب ، يحتوي

01:49.080 --> 01:52.840
عليه ، لذا يمكننا هنا استدعاء setData بأمان.

01:52.840 --> 01:56.330
والآن تأخذ setData حجتين هنا.

01:56.330 --> 01:59.900
الوسيطة الأولى هي معرف تنسيق البيانات

01:59.900 --> 02:01.320
، وهناك لديك بعض

02:01.320 --> 02:04.970
التنسيقات الممكنة المتاحة.

02:04.970 --> 02:08.210
مرفقًا ، ستجد الغوص العميق في السحب والإفلات باستخدام

02:08.210 --> 02:10.890
JavaScript حيث يمكنك معرفة المزيد عنها.

02:10.890 --> 02:12.270
ستتعلم أيضًا المزيد حول هذا

02:12.270 --> 02:15.140
الموضوع في دورة الدليل الكامل لجافا سكريبت بالمناسبة.

02:15.140 --> 02:18.390
نحتاج هنا إلى تنسيق النص / العادي مما يعني

02:18.390 --> 02:20.010
أننا سنقوم فقط بإرفاق

02:20.010 --> 02:24.190
بعض البيانات المطلوبة بنص عادي والتي يتم نقلها ، وهذا

02:24.190 --> 02:25.430
أمر مهم.

02:25.430 --> 02:28.250
لن نعلق كائناتنا هنا ، مشروعنا

02:28.250 --> 02:29.740
نفسه ، سنستمر في

02:29.740 --> 02:31.390
الوقوع في الفخ.

02:31.390 --> 02:34.340
لذلك ليس المشروع الكامل الذي يمكن تقديمه هنا.

02:34.340 --> 02:37.955
بدلاً من ذلك ، يكفي في الواقع إرفاق معرف

02:37.955 --> 02:41.645
المشروع لأن هذا سيسمح لنا لاحقًا بجلب

02:41.645 --> 02:44.870
هذا المشروع من ولايتنا.

02:44.870 --> 02:47.320
لذا فإن إرفاق المعرف هو كل ما نحتاج إلى القيام به.

02:47.320 --> 02:50.240
نريد نقل كمية صغيرة فقط من البيانات ، وهذا سيوفر

02:50.240 --> 02:52.053
لنا أيضًا بعض الذاكرة.

02:53.100 --> 02:56.300
الآن مع ذلك ، نقوم بإرفاق البيانات بحدث السحب.

02:56.300 --> 02:58.330
شيء آخر أريد القيام به هو ، عند نقل

02:58.330 --> 03:00.610
البيانات حيث يتعين علينا مرة أخرى

03:00.610 --> 03:02.340
إضافة علامة التعجب ، سأقوم

03:02.340 --> 03:05.430
بتعيين الخاصية effectAllowed للتحرك.

03:05.430 --> 03:08.610
يتحكم هذا بشكل أساسي في كيفية ظهور

03:08.610 --> 03:12.440
المؤشر ، ويخبر المتصفح قليلاً عن نيتنا ، أننا

03:12.440 --> 03:15.200
نخطط لنقل عنصر من A إلى B.

03:15.200 --> 03:16.760
يمكن أن يكون البديل هو

03:16.760 --> 03:19.230
النسخ ، حيث تحصل بعد ذلك على مؤشر مختلف

03:19.230 --> 03:20.820
يشير إلى المستخدم أنك

03:20.820 --> 03:23.120
تنسخ ولا تتحرك ، ولكن هنا نريد تحريك

03:23.120 --> 03:25.140
العنصر مما يعني أنه عند نقطة

03:25.140 --> 03:26.580
واحدة ، نقوم بإزالته

03:26.580 --> 03:28.810
في مكانه الأصلي وإضافته إلى المكان

03:28.810 --> 03:31.360
الجديد.

03:31.360 --> 03:34.940
والآن يتم إرفاق البيانات هنا وهذه هي الخطوة الأولى.

03:34.940 --> 03:36.870
دعنا الآن نعود إلى المكان الذي

03:36.870 --> 03:38.470
نريد أن يحدث الانخفاض فيه

03:38.470 --> 03:40.360
، وهو قائمة المشاريع.

03:40.360 --> 03:43.400
هناك ، يبدأ في dragLeaveHandler.

03:43.400 --> 03:46.370
الآن في هذا التطبيق ، في هذا المشروع

03:46.370 --> 03:49.200
هنا ، لدينا عملية سحب وإفلات واحدة

03:49.200 --> 03:51.500
فقط وهذه هي مشاريعنا هنا.

03:51.500 --> 03:54.970
في التطبيقات الأكبر حجمًا ، قد يكون لديك أجزاء مختلفة

03:54.970 --> 03:57.220
على الصفحة يمكن سحبها وإسقاطها

03:57.220 --> 04:01.080
ولا تريد جعل كل شيء قابل للإفلات في كل مكان.

04:01.080 --> 04:06.080
لذلك ، هنا في dragOverHandler ، الذي يتم تنشيطه عندما تدخل

04:06.230 --> 04:09.580
منطقة قابلة للسحب مع عنصر متصل بالماوس

04:09.580 --> 04:11.860
، أريد التحقق مما إذا كان السحب

04:11.860 --> 04:14.970
مسموحًا به حقًا هنا.

04:14.970 --> 04:19.546
لذلك ، سوف أتحقق مما إذا كان الحدث. نقل البيانات ، يتوفر

04:19.546 --> 04:21.060
هنا أيضًا ، لذلك

04:21.060 --> 04:22.950
إذا كان ذلك متاحًا

04:22.950 --> 04:25.500
، وإذا كان متاحًا ، فإن

04:25.500 --> 04:29.140
خاصية أنواع نقل البيانات لها قيمة

04:29.140 --> 04:34.140
أولى تساوي نصًا / عاديًا.

04:34.300 --> 04:39.280
هذا يعني ببساطة ، هل البيانات مرتبطة بحدث السحب

04:39.280 --> 04:42.390
الخاص بنا ، هل هذا التنسيق؟

04:42.390 --> 04:43.360
وهذا بالطبع لأن هذا

04:43.360 --> 04:45.030
هو التنسيق الذي قمنا بإعداده

04:45.030 --> 04:47.320
في برنامج dragStartHandler هنا.

04:47.320 --> 04:50.490
لذلك على سبيل المثال ، لن يسمح هنا بإسقاط الصور أو شيء من

04:50.490 --> 04:51.380
هذا القبيل والذي

04:51.380 --> 04:53.180
سيكون له تنسيق بيانات مختلف.

04:53.180 --> 04:56.173
لقد سمحت للتو بإسقاط نص عادي.

04:57.170 --> 04:59.450
بالطبع أحتاج الآن أيضًا إلى استبدال

04:59.450 --> 05:01.020
الشرطة السفلية بحدث مرة

05:01.020 --> 05:03.280
أخرى لأنني أشير إليها هنا.

05:03.280 --> 05:07.150
الآن إذا كان هذا هو الحال ، فأنا أعلم أنني أريد السماح بإسقاط

05:07.150 --> 05:09.070
، لذلك سأقوم بتحديث الخلفية.

05:09.070 --> 05:11.620
وفقط شيء مهم آخر علينا القيام به ، عليك

05:11.620 --> 05:13.960
استدعاء حدث. منع افتراضي.

05:13.960 --> 05:15.950
لكن لماذا علينا أن نسمي ذلك؟

05:15.950 --> 05:18.860
لأنه في جافا سكريبت ، يعمل السحب والإفلات

05:18.860 --> 05:22.480
بحيث لا يُسمح بالإسقاط في الواقع إلا ، لذا فإن

05:22.480 --> 05:26.119
حدث الإسقاط سيتم تشغيله فقط على عنصر ، إذا كنت

05:26.119 --> 05:29.649
في عملية السحب على هذا العنصر نفسه ، قمت باستدعاء

05:29.649 --> 05:32.750
منع الإفلات.

05:32.750 --> 05:35.360
يمكنك التفكير في هذا على النحو التالي.

05:35.360 --> 05:38.870
يتمثل الإعداد الافتراضي لأحداث السحب والإفلات في JavaScript

05:38.870 --> 05:41.350
في عدم السماح بالإسقاط ، لذا يتعين عليك

05:41.350 --> 05:44.889
منع الإعداد الافتراضي في السحب عبر المعالج لإخبار JavaScript

05:44.889 --> 05:49.670
والمتصفح أنه بالنسبة لهذا العنصر ، في هذه الحالة بالنسبة لهذا القسم الخاص

05:49.670 --> 05:52.980
بهذه الفئة التي لا يوجد بها مشروع ، فأنت تريد السماح

05:52.980 --> 05:54.870
بإسقاطه.

05:54.870 --> 05:57.920
لذلك فقط إذا قمت بإجراء هذا الأمر هو dragOverHandler

05:57.920 --> 06:00.020
، فسيتم تشغيل حدث الإفلات بالفعل عندما

06:00.020 --> 06:01.220
يترك المستخدم.

06:01.220 --> 06:02.910
وإلا إذا ترك المستخدم ،

06:02.910 --> 06:05.060
فلن يتم إطلاق حدث الإسقاط.

06:05.060 --> 06:07.090
مع ذلك ، سيتم تنفيذ معالج

06:07.090 --> 06:08.960
الإسقاط في النهاية بالطبع

06:08.960 --> 06:12.620
، لأننا الآن نسمح بحدوث ذلك.

06:12.620 --> 06:16.440
لذا هنا في معالج الإسقاط يمكننا الآن قبول الحدث ، وفي الوقت

06:16.440 --> 06:20.610
الحالي دعونا نتحكم فقط. سجل الحدث هنا مثل هذا لمعرفة

06:20.610 --> 06:23.003
ما إذا كان هذا يعمل.

06:23.940 --> 06:28.100
نحن الآن نحفظ كل شيء ، ونضيف عنصرًا جديدًا

06:28.100 --> 06:30.220
هنا ، وأقوم بسحب هذا.

06:30.220 --> 06:33.430
إذا قمت بإسقاطه هنا في المشاريع المنتهية

06:33.430 --> 06:36.490
، فسترى أن حدث السحب هذا يتم إطلاقه هنا.

06:36.490 --> 06:39.360
وهذا يأتي من السطر 236 وهو بالفعل

06:39.360 --> 06:43.050
هذا السطر في معالج الإسقاط.

06:43.050 --> 06:45.950
الآن إذا فحصنا حدث السحب هنا في المتصفح ، فسترى

06:45.950 --> 06:47.447
أن لدينا مجموعة من البيانات

06:47.447 --> 06:50.830
هنا ولدينا أيضًا خاصية نقل البيانات هذه.

06:50.830 --> 06:52.920
وهناك ترى التأثير الذي

06:52.920 --> 06:54.320
سمحنا به ، وهو الحركة

06:54.320 --> 06:57.930
، ولن ترى أيضًا أي شيء هناك.

06:57.930 --> 07:01.600
حسنًا ، فقط لأن البيانات قد تم مسحها بالفعل

07:01.600 --> 07:04.510
بعد أن تم وضعها في وحدة التحكم.

07:04.510 --> 07:06.100
ونظرًا لأننا وضعنا الكائن

07:06.100 --> 07:08.160
هنا وأن الكائنات هي أنواع مرجعية ،

07:08.160 --> 07:10.830
حسنًا ، نرى أحدث لقطة حيث فقدت البيانات.

07:10.830 --> 07:13.360
في الواقع في الوقت الذي نتخلى فيه عن هذا

07:13.360 --> 07:16.910
، سنكون قادرين على استخراج البيانات من نقل البيانات.

07:16.910 --> 07:18.360
ويمكنني إثبات ذلك لك.

07:18.360 --> 07:20.960
بالطبع يمكننا ببساطة الوصول إلى نقل

07:20.960 --> 07:23.210
البيانات وهناك لديك طريقة getData

07:23.210 --> 07:26.580
، والآن نريد الحصول على البيانات بهذا التنسيق النصي

07:26.580 --> 07:29.560
/ العادي ويجب أن يكون هذا هو معرف المشروع الذي

07:29.560 --> 07:34.560
نرفقه بحزمة نقل البيانات الخاصة بنا على عنصر المشروع.

07:35.060 --> 07:37.179
لذا إذا حفظنا هذا الآن

07:37.179 --> 07:39.690
وأعدنا إضافة المشروع هنا

07:39.690 --> 07:41.050
، وسحبناه هنا ،

07:41.050 --> 07:46.050
سترى هذا هنا بالفعل ، هو معرف عنصر المشروع هذا.

07:46.600 --> 07:47.920
يمكننا أن نرى

07:47.920 --> 07:50.880
أنه إذا فحصناه لأننا نضيفه هنا

07:50.880 --> 07:55.124
أيضًا كمعرف ، 0. 2167 ، يبدو هذا المعرف بالنسبة لي.

07:55.124 --> 07:59.170
لذلك نقوم بتحويل المعرف بنجاح.

07:59.170 --> 08:00.490
نحن الآن على وشك الانتهاء.

08:00.490 --> 08:04.100
الآن علينا فقط تحديث حالتنا خلف الكواليس ثم إعادة

08:04.100 --> 08:06.163
عرض وثيقة الهوية الوحيدة.
