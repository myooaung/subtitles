WEBVTT

00:02.310 --> 00:04.580
المدرب: هدفنا الآن هو نقل المشاريع

00:04.580 --> 00:06.000
من أ إلى ب.

00:06.000 --> 00:09.750
لكي نكون دقيقين ، عندما ينشئ المستخدمون مشروعًا جديدًا

00:09.750 --> 00:11.850
، عندما يدخلون جميع البيانات

00:11.850 --> 00:15.790
، نريد إنشاء كائن مشروع جديد في النهاية ، والذي نخرجه بعد

00:15.790 --> 00:18.830
ذلك في فئة قائمة المشروع كجزء من القائمة غير

00:18.830 --> 00:20.460
المرتبة ، والتي يتم تقديمها

00:20.460 --> 00:21.990
هناك.

00:21.990 --> 00:23.299
هذه هي الفكرة.

00:23.299 --> 00:26.350
بالطبع قد تكون الطريقة البسيطة لتنفيذ ذلك هي

00:26.350 --> 00:28.890
الانتقال ببساطة إلى المكان الذي يتم

00:28.890 --> 00:30.830
فيه إدخال مدخلات المستخدم ثم

00:30.830 --> 00:34.513
استخدام المستند هنا. getElementbyId ، للوصول

00:36.100 --> 00:39.410
إلى تلك القائمة غير المرتبة التي قدمناها كجزء

00:39.410 --> 00:42.270
من فئة قائمة المشاريع لدينا ، والتي تحتوي

00:42.270 --> 00:44.470
على هذا المعرف هنا ، أو قائمة المشاريع

00:44.470 --> 00:49.110
النشطة أو قائمة المشاريع المنتهية ، ثم قم ببساطة بالوصول إليها

00:49.110 --> 00:52.760
وإضافة عنصر جديد إليها .

00:52.760 --> 00:54.770
لكن هذه ليست حقًا فكرة كيف

00:54.770 --> 00:57.250
أريد إنشاء هذا التطبيق.

00:57.250 --> 00:59.800
أريد أن أبنيها بطريقة موجهة

00:59.800 --> 01:02.530
للكائنات حيث لدينا فصولنا المختلفة

01:02.530 --> 01:06.500
التي تعمل معًا بطريقة تفاعلية حيث نقوم بإنشاء

01:06.500 --> 01:08.200
فئة جديدة ثم يحدث شيء

01:08.200 --> 01:10.550
ما في dom.

01:10.550 --> 01:12.730
حيث نسمي طريقة الفصل ثم تقوم

01:12.730 --> 01:14.650
هذه الفئة بعمل شيء ما.

01:14.650 --> 01:16.980
هكذا أريد أن تعمل هذه الأشياء.

01:16.980 --> 01:19.560
الآن بالطبع يمكننا إضافة طريقة إلى

01:19.560 --> 01:21.550
فئة قائمة المشروع ، دعنا نقول

01:21.550 --> 01:24.120
أنني أضفت طريقة المشروع.

01:24.120 --> 01:25.890
يجب بعد ذلك استدعاء هذه الطريقة

01:25.890 --> 01:28.200
عندما يجب إضافة المشروع وتقديمه

01:28.200 --> 01:30.700
، وعلينا أن نجد طريقة ما للاتصال به من

01:30.700 --> 01:32.940
داخل مدخلات المشروع.

01:32.940 --> 01:34.820
للقيام بذلك ، يمكننا التأكد

01:34.820 --> 01:37.940
من أننا نقوم بالفعل بتمرير المراجع إلى قائمتنا

01:37.940 --> 01:40.330
هنا ، إلى مُنشئ مدخلات المشروع ، بحيث

01:40.330 --> 01:42.810
يمكننا من داخل فئة إدخال المشروع ، العمل

01:42.810 --> 01:45.290
مع هذه الحالات الملموسة واستدعاء الأساليب

01:45.290 --> 01:47.570
في هذه الحالات.

01:47.570 --> 01:50.260
لأن هذا هو ما يتعين علينا القيام به.

01:50.260 --> 01:52.050
ستكون هذه طريقة قابلة

01:52.050 --> 01:54.400
للتطبيق ، وبالتأكيد نهج يمكنك

01:54.400 --> 01:58.680
اتباعه ، لكنني أريد اتباع نهج أكثر تجريدًا.

01:58.680 --> 02:01.393
نهج أكثر إثارة للاهتمام في رأيي.

02:02.330 --> 02:06.210
سأقوم بإنشاء فصل دراسي يدير حالة تطبيقنا

02:06.210 --> 02:08.110
، إذا جاز التعبير ، فصلًا

02:08.110 --> 02:11.187
يدير مشاريعنا ، أو أي حالة قد نحتاج

02:11.187 --> 02:13.840
إلى إدارتها في التطبيق ، مما

02:13.840 --> 02:15.530
يتيح لنا أيضًا إعداد

02:15.530 --> 02:18.660
مستمعين في أجزاء مختلفة من التطبيق

02:18.660 --> 02:21.670
المهتم.

02:21.670 --> 02:24.540
قد يبدو هذا النمط مألوفًا لك إذا كنت

02:24.540 --> 02:27.050
تعمل مع أطر عمل مثل Angular أو

02:27.050 --> 02:29.820
مكتبات مثل React و Redux.

02:29.820 --> 02:33.423
أن لديك كائن إدارة دولة عالمية وأنك تستمع

02:33.423 --> 02:35.443
فقط إلى التغييرات.

02:35.443 --> 02:37.480
هذا ما أريد تنفيذه هنا.

02:37.480 --> 02:39.620
بالطبع هذه مجرد طريقة واحدة للقيام بذلك

02:39.620 --> 02:41.660
، لكنني أعتقد أنها طريقة ممتعة للغاية

02:41.660 --> 02:43.680
، ولهذا السبب أريد أن أعرضها.

02:43.680 --> 02:45.908
لذا في الجزء العلوي من ملف

02:45.908 --> 02:50.350
ts للتطبيق ، سأضيف فئة إدارة حالة المشروع.

02:50.350 --> 02:53.347
وسأقوم ببساطة بتسمية ProjectState ؛ يبدو

02:54.820 --> 02:57.210
وكأنه اسم معقول بالنسبة لي.

02:57.210 --> 02:59.900
الفكرة الآن هي أنه في هذه

02:59.900 --> 03:03.760
الفئة لدينا خاصية أو مجال ، مجال خاص

03:03.760 --> 03:06.570
، مشاريع ، تحتوي على مجموعة

03:06.570 --> 03:08.800
من المشاريع.

03:08.800 --> 03:12.000
نحتاج الآن أيضًا إلى تحديد الشكل الذي يجب أن يبدو عليه المشروع

03:12.000 --> 03:13.360
، وسنفعل ذلك في الخطوة التالية

03:13.360 --> 03:15.830
، والآن سأقول فقط إنها مجموعة من أي شيء ، وهو

03:15.830 --> 03:18.710
بالطبع ليس مثاليًا ، وليس نهائيًا ، لكنني أريد التركيز

03:18.710 --> 03:22.240
على حل إدارة الدولة هذا في الوقت الحالي.

03:22.240 --> 03:25.653
لذلك لدينا قائمة المشاريع هذه هنا.

03:26.530 --> 03:30.163
هدفي الآن هو أنني أريد إضافة عنصر إلى

03:30.163 --> 03:35.163
تلك القائمة كلما نقرت فوق زر إضافة المشروع هنا.

03:36.940 --> 03:39.970
لإنجاز هذا العمل ، داخل فئة حالة المشروع

03:39.970 --> 03:43.460
، سأضيف طريقة إضافة مشروع ، طريقة عامة.

03:43.460 --> 03:45.560
وهناك أتوقع الحصول على العنوان

03:45.560 --> 03:47.060
، الذي يجب أن يكون عبارة

03:47.060 --> 03:49.390
عن سلسلة ، والوصف ، الذي يجب أن يكون

03:49.390 --> 03:53.250
سلسلة ، وكذلك عدد الأشخاص الذين يعملون في المشروع ، والذي

03:53.250 --> 03:55.220
يجب أن يكون رقمًا.

03:55.220 --> 03:58.450
ثم هنا ، يمكننا إنشاء مشروع جديد بالتدوين

03:58.450 --> 04:00.950
الحرفي للكائن في الوقت الحالي.

04:00.950 --> 04:03.950
حيث يجب أن يكون لدينا بعض المعرفات لكل مشروع حتى نتمكن

04:03.950 --> 04:06.050
من التعرف عليه بشكل فريد ، وسأقوم بإنشاء

04:06.050 --> 04:12.100
معرف هنا باستخدام الرياضيات.

04:12.100 --> 04:12.100
عشوائي(). إلى سلسلة.

04:12.100 --> 04:14.960
الآن الرقم العشوائي ليس معرفًا فريدًا حقًا

04:14.960 --> 04:17.880
، يمكنك إنشاء نفس الرقم أكثر من مرة ، لكنه غير

04:17.880 --> 04:19.300
محتمل للغاية ، ولأغراض

04:19.300 --> 04:22.570
العرض التوضيحي لدينا هنا سيفعل ذلك.

04:22.570 --> 04:25.170
الآن بالإضافة إلى أنه يجب أن يكون لكل مشروع

04:25.170 --> 04:28.370
عنوان وسوف يتم تخزين حجة العنوان التي حصلنا عليها.

04:28.370 --> 04:30.913
نفس الشيء بالنسبة للوصف ،

04:31.960 --> 04:33.830
حيث سأخزن الوصف.

04:33.830 --> 04:37.693
وشعبي حيث سأخزن عدد الأشخاص.

04:39.700 --> 04:43.440
هذا ، في الوقت الحالي ، هو المشروع الذي أريد تخزينه.

04:43.440 --> 04:45.000
لذلك بمجرد إنشائنا هنا ،

04:45.000 --> 04:48.020
يمكننا الوصول إلى مصفوفة المشاريع في حالة المشاريع

04:48.020 --> 04:48.853
، وهي خاصة ، ولكن

04:48.853 --> 04:50.320
من داخل الفصل ، وهي هذه الطريقة

04:50.320 --> 04:51.530
، يمكننا الوصول إليها

04:51.530 --> 04:53.340
بالطبع.

04:53.340 --> 04:55.900
وهناك أريد إضافة هذا المشروع الجديد

04:55.900 --> 05:00.380
ومن أجل ذلك يمكننا ببساطة دفع مشروعنا الجديد إليه.

05:00.380 --> 05:03.350
الآن مع ذلك ، نحن قادرون على إضافة مشروع.

05:03.350 --> 05:07.027
لكن لا يزال لدينا بالطبع سؤالان غير واضحين.

05:07.027 --> 05:12.027
كيف نسمي إضافة مشروع من داخل فصلنا في الأسفل حيث نجمع مدخلات

05:12.750 --> 05:14.650
المستخدم من داخل معالج

05:14.650 --> 05:15.990
الإرسال؟

05:15.990 --> 05:17.940
كيف نسمي مشروع إضافة؟

05:17.940 --> 05:21.730
وكيف نمرر تلك القائمة المحدثة من المشاريع

05:21.730 --> 05:25.690
كلما تغيرت إلى فئة قائمة المشروع؟

05:25.690 --> 05:29.230
هاتان هما المسألتان اللتان نواجههما بالطبع في الوقت الحالي.

05:29.230 --> 05:31.840
حسنًا ، هناك شيء واحد سأفعله هنا

05:31.840 --> 05:36.499
، وهو أنني سأقوم بإنشاء مثيل لحالة المشروع هنا.

05:36.499 --> 05:39.720
مثال عام ، يمكننا استخدامه من الملف بأكمله

05:39.720 --> 05:42.760
، وسأفعل ذلك مباشرة بعد إنشاء هذا الفصل.

05:42.760 --> 05:47.050
هنا لدي حالة مشروعي ثابتة حيث أقوم بإنشاء

05:47.050 --> 05:50.370
مثيل لحالة المشروع مثل هذه.

05:50.370 --> 05:52.400
بهذه الطريقة ، هذا ثابت عالمي

05:52.400 --> 05:54.620
يمكن استخدامه في أي مكان في الملف

05:54.620 --> 05:58.000
، لذا فإن التحدث إلى هذا الفصل أصبح الآن بسيطًا للغاية

05:58.000 --> 06:01.660
، ما عليك سوى استخدام هذا الثابت العام هنا.

06:01.660 --> 06:04.850
يمكننا حتى استخدام ميزة تعلمناها جميعًا

06:04.850 --> 06:06.430
، المُنشئ الخاص ، لضمان

06:06.430 --> 06:09.170
أن هذه فئة فردية.

06:09.170 --> 06:11.950
يمكننا إنشاء مُنشئ خاص هنا ومن ثم لدينا

06:11.950 --> 06:14.300
خاصية خاصة أخرى هنا ، على سبيل المثال

06:14.300 --> 06:16.670
، وهي من نوع حالة المشروع ، لذلك نفس

06:16.670 --> 06:18.933
النوع من هذه الفئة.

06:20.640 --> 06:24.360
ثم نضيف طريقة الحصول على مثيل هنا ، وهي طريقة

06:24.360 --> 06:26.390
ثابتة في الواقع ، حيث نتحقق

06:26.390 --> 06:30.050
من ذلك. المثال هو شيء ، ولهذا

06:30.050 --> 06:31.020
، يجب أن يكون

06:31.020 --> 06:33.970
هذا أيضًا مثالًا ثابتًا ، أو خاصية

06:33.970 --> 06:35.800
ثابتة ، أعني.

06:35.800 --> 06:37.100
إذا كان هذا شيء ، إذا كان كذلك

06:37.100 --> 06:39.550
، فإننا نعيد هذا. على سبيل المثال ،

06:39.550 --> 06:42.230
لذلك نعيد مثيلًا واحدًا حصلنا عليه ،

06:42.230 --> 06:44.590
وإلا فإننا ننشئ مثيلًا جديدًا.

06:44.590 --> 06:45.423
خلاف

06:45.423 --> 06:50.423
ذلك ، هذا. سيكون المثيل مساويًا لحالة المشروع الجديدة.

06:50.450 --> 06:52.963
ثم نعيد هذا. نموذج.

06:54.740 --> 07:00.903
الآن مع ذلك ، يمكننا استدعاء الحصول على مثيل هناك ، مثل هذا ، ProjectState.

07:00.903 --> 07:00.903
getInstance

07:02.650 --> 07:04.390
، ونحن نضمن العمل دائمًا

07:04.390 --> 07:06.560
مع نفس الكائن بالضبط وسيكون لدينا

07:06.560 --> 07:11.700
دائمًا كائن واحد فقط من النوع في التطبيق بأكمله.

07:11.700 --> 07:12.840
وهي الفكرة هنا

07:12.840 --> 07:16.480
، لأنني أريد فقط أن يكون لدي كائن إدارة دولة واحد

07:16.480 --> 07:17.503
لمشروعنا.

07:17.503 --> 07:19.570
هذه هي حالة هذا المشروع مع

07:19.570 --> 07:21.563
المُنشئ الفردي الآن.

07:22.730 --> 07:25.890
الآن لدينا حالة مشروعنا ثابتة.

07:25.890 --> 07:28.040
دعنا ننتقل إلى فئة إدخال المشروع

07:28.040 --> 07:30.270
حيث نجمع مدخلات المستخدم.

07:30.270 --> 07:33.950
هنا ، يمكننا الآن استدعاء projectState. addProject وإعادة

07:33.950 --> 07:37.830
توجيه العنوان والوصف والأشخاص ، نعود من جمع

07:37.830 --> 07:40.960
مدخلات المستخدم في النهاية.

07:40.960 --> 07:43.920
لذا الآن يجب إنشاء هذا المشروع.

07:43.920 --> 07:47.140
الآن نحتاج فقط إلى دفع تلك المعلومات

07:47.140 --> 07:51.530
التي لدينا مشروع جديد إلى فئة قائمة المشروع ، لأن

07:51.530 --> 07:53.840
هذه هي الفئة المسؤولة عن إخراج

07:53.840 --> 07:56.500
شيء ما على الشاشة.

07:56.500 --> 08:00.350
ولهذا أريد إعداد نمط اشتراك في النهاية.

08:00.350 --> 08:03.020
حيث يوضح داخل مشروعنا أننا ندير

08:03.020 --> 08:05.730
قائمة من المستمعين ، لذلك توجد قائمة

08:05.730 --> 08:08.690
بالوظائف في النهاية ، والتي يجب استدعاؤها

08:08.690 --> 08:11.600
كلما تغير شيء ما.

08:11.600 --> 08:12.433
لذلك سأضيف

08:12.433 --> 08:15.830
هنا خاصية خاصة أخرى ، أيها المستمعون.

08:15.830 --> 08:18.810
وسيكون المستمعون عبارة عن مصفوفة فارغة

08:18.810 --> 08:22.130
وفي الوقت الحالي ، مرة أخرى ، مجرد مجموعة من

08:22.130 --> 08:25.543
أي شيء سنحدده بمزيد من التفصيل لاحقًا.

08:26.760 --> 08:31.382
الآن أريد أيضًا الحصول على طريقة هنا addListener

08:31.382 --> 08:35.590
حيث أحصل على وظيفة مستمع ، لذلك يجب أن تكون

08:35.590 --> 08:39.150
هذه وظيفة في النهاية هنا.

08:39.150 --> 08:41.370
وسأضيف هذا بعد ذلك إلى مستمعي.

08:41.370 --> 08:43.970
لذلك ندفع وظيفة المستمع هنا

08:43.970 --> 08:46.500
إلى مجموعة المستمعين.

08:46.500 --> 08:49.580
الآن ما هي فكرة وجود مجموعة مستمعين؟

08:49.580 --> 08:51.110
إنها مجموعة من الوظائف ،

08:51.110 --> 08:53.070
من مراجع الوظيفة ، أليس كذلك؟

08:53.070 --> 08:55.250
الفكرة هي أنه كلما تغير شيء ما ، كما هو

08:55.250 --> 08:57.310
الحال هنا عندما نضيف مشروعًا جديدًا

08:57.310 --> 08:59.790
، فإننا نسمي جميع وظائف المستمع.

08:59.790 --> 09:03.050
لذلك نحن نمر عبر جميع المستمعين ، لهذا المستمع

09:03.050 --> 09:04.720
، لذلك من خلال جميع وظائف

09:04.720 --> 09:07.330
المستمع ، وبعد ذلك بما أن هذه مراجع

09:07.330 --> 09:09.520
وظيفية ، يمكننا تنفيذ هذا

09:09.520 --> 09:11.593
كدالة.

09:13.010 --> 09:14.630
ومن أجل هذه الوظيفة ، نمرر

09:14.630 --> 09:18.620
الشيء المناسب لها ، بناءً على الحالة التي نديرها ، وهي

09:18.620 --> 09:20.130
في هذه الحالة ، في هذه

09:20.130 --> 09:23.280
الفئة بالطبع ، قائمة مشاريعنا.

09:23.280 --> 09:27.983
هذه هي الحالة المسؤولة عنها هذه الفئة.

09:29.100 --> 09:29.933
لذا هنا ، أقوم

09:30.980 --> 09:33.050
بإعادة توجيه هذا المشروع

09:33.050 --> 09:35.170
وسأسميه slice لإرجاع نسخة

09:35.170 --> 09:37.550
من ذلك المصفوفة فقط وليس المصفوفة

09:37.550 --> 09:39.100
الأصلية.

09:39.100 --> 09:41.880
بحيث لا يمكن تحريره من المكان الذي

09:41.880 --> 09:44.210
تأتي منه وظيفة المستمع.

09:44.210 --> 09:45.760
نظرًا لأن المصفوفات والكائنات

09:45.760 --> 09:48.110
هي قيم مرجعية في جافا سكريبت ، لذلك

09:48.110 --> 09:50.490
إذا مررت المصفوفة الأصلية ، فيمكننا

09:50.490 --> 09:52.600
تحريرها من الخارج وأيضًا على نفس

09:52.600 --> 09:54.380
اليد ، إذا دفعنا شيئًا إليها

09:54.380 --> 09:57.020
من داخل هذه الفئة ، فسيتغير بالفعل في كل

09:57.020 --> 09:59.830
مكان آخر في التطبيق ، لكن هذه الأماكن لن تلاحظ

09:59.830 --> 10:03.540
حقًا أنه قد تغير ، لذلك يمكن أن تحدث أخطاء غريبة إذا مررنا

10:03.540 --> 10:05.630
حول المرجع الأصلي ، وهذا هو السبب

10:05.630 --> 10:08.270
في أنني مررت حول النسخة الجديدة تمامًا

10:08.270 --> 10:12.770
، وهي مصفوفة جديدة تمامًا هنا.

10:12.770 --> 10:15.390
حتى الآن يتم تنفيذ كل وظيفة مستمع والحصول

10:15.390 --> 10:19.400
على نسختنا ، نسخة العلامة التجارية الجديدة من المشاريع.

10:19.400 --> 10:21.380
الآن نحتاج فقط إلى الذهاب إلى

10:21.380 --> 10:23.800
الأماكن التي نريد أن نكون على علم بالتغييرات

10:23.800 --> 10:26.560
فيها ، في حالتنا ، فئة قائمة المشروع هنا ،

10:26.560 --> 10:29.030
وإعداد مثل هذا المستمع.

10:29.030 --> 10:32.880
لذلك هنا ، في مُنشئ فئة قائمة المشروع ، قبل

10:32.880 --> 10:35.546
إرفاق المحتوى وعرضه ، سأتواصل

10:35.546 --> 10:38.010
مع projectState واستدعى

10:38.010 --> 10:40.110
addListener هنا لتسجيل

10:40.110 --> 10:43.720
وظيفة مستمع هنا بشكل أساسي.

10:43.720 --> 10:46.150
الآن المستمع ، كما قلت ، هو وظيفة ، لذلك

10:46.150 --> 10:49.100
علينا تمرير وظيفة إلى addListener.

10:49.100 --> 10:51.210
لأن المستمعين الذين نديرهم هنا في

10:51.210 --> 10:52.610
حالة المشروع ، هذه مجرد

10:52.610 --> 10:54.680
قائمة من الوظائف ، والتي سنسميها

10:54.680 --> 10:56.300
في النهاية عندما يتغير شيء

10:56.300 --> 10:57.773
ما بشكل صحيح؟

10:58.840 --> 11:01.110
لذلك سأحتاج إلى تمرير دالة

11:01.110 --> 11:04.990
لوظيفة addListener الخاصة بي هنا.

11:04.990 --> 11:07.520
هنا أقوم بتمرير وظيفة سهم مجهول.

11:07.520 --> 11:10.770
وستحصل هذه الوظيفة على قائمة بالمشاريع

11:10.770 --> 11:14.400
عندما يتم استدعاؤها من داخل دولة المشروع.

11:14.400 --> 11:17.430
لذلك نحصل على قائمة بالمشاريع ، نعلم أنه داخل هذا

11:17.430 --> 11:19.160
الهيكل الوظيفي ، يمكننا بعد

11:19.160 --> 11:21.560
ذلك استخدام قائمة المشاريع هذه.

11:21.560 --> 11:26.046
وهنا سأضيف حقلاً جديدًا إلى قائمة المشاريع ، ربما مشاريع

11:26.046 --> 11:28.410
معينة ، وهو من نوع أي مصفوفة

11:28.410 --> 11:30.310
، لذلك أي شيء في مصفوفة

11:30.310 --> 11:32.357
، ومجموعة من أي قيم ، حسنًا

11:32.357 --> 11:34.010
بالطبع سأحدد هذا أيضًا

11:34.010 --> 11:37.630
بمزيد من التفصيل لاحقًا.

11:37.630 --> 11:39.890
ثم هنا يمكننا القول أن هذا المشروع

11:39.890 --> 11:41.780
المعين يساوي المشاريع.

11:41.780 --> 11:44.240
لذلك بالنسبة للمشاريع التي نحصل عليها.

11:44.240 --> 11:45.870
الآن هنا للتخلص من أي نوع

11:45.870 --> 11:47.280
خطأ ضمني ، يجب أن أكون

11:47.280 --> 11:49.900
واضحًا أن هذا سيكون في الواقع مصفوفة

11:49.900 --> 11:51.563
من أي شيء هنا.

11:52.610 --> 11:55.020
لذا الآن أقوم بإضافة المشاريع التي

11:55.020 --> 11:57.660
أحصل عليها لأن شيئًا ما تغير في حالتي.

11:57.660 --> 11:59.490
هنا في المشاريع المعينة الخاصة

11:59.490 --> 12:00.530
بي حيث لا أقوم بإضافتها

12:00.530 --> 12:02.350
، أقوم بتجاوز المشاريع المعينة

12:02.350 --> 12:04.170
بالمشاريع الجديدة.

12:04.170 --> 12:08.223
ثم فكرتي هي تقديم كل هذه المشاريع.

12:09.080 --> 12:10.883
لذلك يمكننا إضافة طريقة

12:11.951 --> 12:15.080
جديدة ؛ RenderPrjects ، على سبيل المثال.

12:15.080 --> 12:16.920
الذي أريد الاتصال به من هنا

12:16.920 --> 12:20.063
، هذا العرض المشاريع ، تمامًا مثل هذا.

12:22.230 --> 12:24.120
ينتهي من RenderProjects.

12:24.120 --> 12:27.480
سأصل إلى هذه القائمة هنا ، حسنًا ، نقوم بتعيين

12:27.480 --> 12:30.150
هذا المعرف عندما نعرض المحتوى ، وهو ما

12:30.150 --> 12:31.290
نقوم به هنا.

12:31.290 --> 12:34.440
يبدو أننا نقوم بذلك بعد استدعاء RenderProjects ، ولكن

12:34.440 --> 12:36.640
ضع في اعتبارك أن هذا ينتهي من وظيفة ، والتي

12:36.640 --> 12:38.470
لن يتم استدعاؤها في النهاية إلا

12:38.470 --> 12:40.230
بمجرد إضافة مشاريع جديدة.

12:40.230 --> 12:43.510
لذلك في الواقع سيتم تشغيل RenderContent أولاً.

12:43.510 --> 12:47.090
وبالتالي ، في RenderProjects ، يمكننا الاعتماد على

12:47.090 --> 12:49.370
هذا المعرف الذي يتم تعيينه لقائمة

12:49.370 --> 12:53.030
غير مرتبة ، لذلك يمكننا هنا الحصول على هذا والحصول على

12:53.030 --> 12:58.030
عنصر القائمة باستخدام المستند. getElementbyId وبعد ذلك قمت فقط بتمرير

12:58.469 --> 13:00.790
معرف المعرف هذا باستخدام نوع فئة

13:00.790 --> 13:03.690
قائمة المشروع الملموسة هذه.

13:03.690 --> 13:08.563
ثم باستخدام ، حسنًا ، بقية هذا المعرف الذي أنشأناه.

13:09.580 --> 13:11.130
وإلى تلك القائمة أو في تلك

13:11.130 --> 13:14.170
القائمة ، أريد تقديم جميع المشاريع التي لدينا.

13:14.170 --> 13:17.670
لذلك ، سوف أتناول جميع عناصر المشروع

13:17.670 --> 13:21.060
الخاصة بهذه المشاريع المعينة هنا.

13:21.060 --> 13:23.150
ثم لكل عنصر أريد إضافة شيء ما إلى القائمة

13:23.150 --> 13:23.983
وسنقوم بتنقيح

13:23.983 --> 13:25.380
ذلك لاحقًا.

13:25.380 --> 13:29.787
في الوقت الحالي ، سأقوم فقط باستدعاء appendChild هنا في عنصر

13:30.890 --> 13:32.480
القائمة الخاصة بي.

13:32.480 --> 13:34.490
بالمناسبة ، يجب أن نضيف هنا علامة

13:34.490 --> 13:36.970
تعجب لتوضيح أن هذا لن يكون فارغًا.

13:36.970 --> 13:41.970
يمكننا أيضًا نقل هذا إلى عنصر قائمة HTML UL ، لذلك إلى عنصر

13:42.000 --> 13:43.560
قائمة غير مرتب لأن

13:43.560 --> 13:45.420
هذا هو ما سيكون عليه.

13:45.420 --> 13:47.530
وبعد ذلك يمكننا إلحاق الطفل هنا

13:47.530 --> 13:49.740
ويجب أن يكون ذلك عنصر قائمة جديد

13:49.740 --> 13:51.980
تمامًا ؛ لذلك يمكننا هنا إنشاء عنصر

13:51.980 --> 13:56.160
قائمتنا مع المستند. إنشاء العنصر LI.

13:56.160 --> 13:58.350
وفي عنصر القائمة هذا هنا ، سأقوم فقط

13:58.350 --> 14:03.950
بتعيين محتوى النص مساويًا لعنصر المشروع.

14:03.950 --> 14:03.950
لقب.

14:03.950 --> 14:06.240
سيكون كل عنصر مشروع مشروعًا حيث

14:06.240 --> 14:09.940
نقوم بإنشائه هناك في حالة المشروع ، لذلك سيكون مثل

14:09.940 --> 14:11.350
هذا الكائن ، وبالتالي

14:11.350 --> 14:13.100
سيكون له عنوان.

14:14.210 --> 14:15.940
الآن مع ذلك إذا ذهبنا إلى هناك

14:15.940 --> 14:18.880
، فلدينا عنصر قائمتنا الذي تمت إضافته الآن هنا.

14:18.880 --> 14:20.730
وبهذا نكون على وشك الانتهاء

14:20.730 --> 14:22.340
، والإصلاحات المتبقية

14:22.340 --> 14:23.740
هنا ، قمت بإعداد هذا

14:23.740 --> 14:27.080
الحقل ، لكن في المُنشئ لم أشير إليه مطلقًا.

14:27.080 --> 14:29.090
هنا فقط في وظيفة المستمع الخاصة

14:29.090 --> 14:31.230
بي ، ولكن كما ذكرنا ، لا يعمل هذا على

14:31.230 --> 14:32.640
الفور في المنشئ.

14:32.640 --> 14:37.640
إذن ما سأفعله هنا هو أنني سأجعل هذه المشاريع المعينة مساوية لمصفوفة

14:38.970 --> 14:41.200
فارغة هنا في البداية ، حتى نكون

14:41.200 --> 14:44.450
جميعًا سعداء ويتم تهيئة هذا.

14:44.450 --> 14:45.510
الآن إذا حفظنا هذا

14:45.510 --> 14:47.780
، يجب أن يتم تجميعه بدون أخطاء.

14:47.780 --> 14:50.400
والآن إذا أضفنا شيئًا ما هنا

14:50.400 --> 14:51.993
، فهل يعمل هذا؟

14:53.480 --> 14:56.270
نحن بالفعل نراه يظهر في قوائمنا.

14:56.270 --> 14:58.270
في كلتا القائمتين في الوقت الحالي

14:58.270 --> 15:00.847
لأنه ليس لدينا منطق تصفية وما إلى ذلك.

15:00.847 --> 15:03.210
وهذا شيء يمكننا إصلاحه لاحقًا

15:03.210 --> 15:04.710
، لكنه يعمل ، وهذا هو

15:04.710 --> 15:06.220
الشيء المهم.

15:06.220 --> 15:08.390
الآن ترى أن لدينا أيضًا خطأ هنا.

15:08.390 --> 15:10.260
إذا أضفت عنصرًا ثانيًا ، فإننا

15:10.260 --> 15:12.370
نكرر العنصر الأخير ونضيف العناصر

15:12.370 --> 15:13.880
الجديدة ، لذلك سيتعين علينا

15:13.880 --> 15:15.490
إصلاح هذا الأمر.

15:15.490 --> 15:17.653
وهذه كلها أشياء سنتناولها ، لكننا

15:17.653 --> 15:21.270
الآن على الأقل قادرون على إخراج شيء ما باستخدام ذلك

15:21.270 --> 15:24.450
، دعنا نتعمق في جميع التحسينات مثل توضيح الأنواع

15:24.450 --> 15:27.160
التي نستخدمها ، وتجنب المخرجات المكررة

15:27.160 --> 15:30.733
، وأشياء أخرى كثيرة مثل نحن سوف.
