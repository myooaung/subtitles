WEBVTT

1
00:00:02.060 --> 00:00:04.960
<v Instructor>So that is it for generic types already.</v>

2
00:00:04.960 --> 00:00:07.370
They can really be tricky to understand,

3
00:00:07.370 --> 00:00:10.670
but in the end, the summary I gave you in the last lecture

4
00:00:10.670 --> 00:00:14.400
is the perfect explanation. They give us flexibility

5
00:00:14.400 --> 00:00:16.710
combined with type safety.

6
00:00:16.710 --> 00:00:19.700
We're flexible regarding the values we pass in

7
00:00:19.700 --> 00:00:21.660
or the values we use in a class,

8
00:00:21.660 --> 00:00:24.960
at least as long as we adhere to the possible constraints,

9
00:00:24.960 --> 00:00:26.800
which you might have added,

10
00:00:26.800 --> 00:00:30.190
but we got full type support what we then do

11
00:00:30.190 --> 00:00:34.500
with the class or with the result of a generic function

12
00:00:34.500 --> 00:00:38.720
because TypeScript then knows which concrete type

13
00:00:38.720 --> 00:00:41.640
we pass in when we call the function here

14
00:00:41.640 --> 00:00:44.360
or when we instantiate the class here.

15
00:00:44.360 --> 00:00:46.680
Here we then set a concrete type,

16
00:00:46.680 --> 00:00:49.970
but we don't lock this class or this function down

17
00:00:49.970 --> 00:00:52.600
to that concrete type when we create it.

18
00:00:52.600 --> 00:00:55.540
Instead, we're flexible and might just provide

19
00:00:55.540 --> 00:00:58.090
some constraints, and, of course, these constraints,

20
00:00:58.090 --> 00:01:02.350
alls are optional, and you might have some generic classes

21
00:01:02.350 --> 00:01:04.800
or generic functions which have no constraints

22
00:01:04.800 --> 00:01:07.510
and some which have a lot of constraints.

23
00:01:07.510 --> 00:01:09.960
So generic types are a really useful feature.

24
00:01:09.960 --> 00:01:12.700
With promise and array, I showed you two

25
00:01:12.700 --> 00:01:15.600
of the many built-in generic types,

26
00:01:15.600 --> 00:01:16.990
and, of course, we'll also see more,

27
00:01:16.990 --> 00:01:20.053
including custom generic types throughout this course.

