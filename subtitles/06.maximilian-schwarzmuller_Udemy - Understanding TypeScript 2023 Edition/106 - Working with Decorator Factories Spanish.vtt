WEBVTT

00:02.120 --> 00:04.420
Instructor: Además de crear un decorador

00:04.420 --> 00:07.060
como este, también podemos definir una fábrica

00:07.060 --> 00:10.150
de decoradores, que básicamente devuelve una función

00:10.150 --> 00:13.120
de decorador, pero nos permite configurarla cuando

00:13.120 --> 00:15.440
la asignamos como decorador a algo.

00:15.440 --> 00:18.210
Para mostrar esto, vamos a convertir esta función

00:18.210 --> 00:19.790
aquí en una fábrica.

00:19.790 --> 00:22.260
Para ello, voy a agarrar este argumento constructor

00:22.260 --> 00:23.220
y eliminarlo, y en

00:23.220 --> 00:24.170
su lugar aquí voy

00:24.170 --> 00:26.120
a devolver una nueva función anónima

00:26.120 --> 00:28.000
que toma ese argumento constructor

00:28.000 --> 00:29.920
y que luego mantiene este registro

00:29.920 --> 00:33.070
que quiero ejecutar dentro del decorador, así que muevo

00:33.070 --> 00:34.610
eso ahí.

00:34.610 --> 00:37.890
Así que ahora tenemos una función que devuelve una nueva función.

00:37.890 --> 00:40.780
Así que ahora cuando queremos aplicar este decorador tenemos

00:40.780 --> 00:43.350
que ejecutarlo como una función aquí, de modo que

00:43.350 --> 00:45.740
ejecutamos esta función externa y adjuntamos

00:45.740 --> 00:47.670
el valor de retorno, que es esta función

00:47.670 --> 00:49.000
interna que es nuestra función

00:49.000 --> 00:51.350
decoradora válida, como un decorador a la clase

00:51.350 --> 00:53.430
por lo tanto.

00:53.430 --> 00:54.740
¿Por qué íbamos a hacerlo?

00:54.740 --> 00:56.630
Porque ahora aquí, por ejemplo, podríamos

00:56.630 --> 01:00.390
aceptar una cadena de registro aquí, que es una cadena, cualquier

01:00.390 --> 01:01.790
argumento de su elección

01:01.790 --> 01:03.750
y tantos argumentos como desee, y pasar

01:03.750 --> 01:08.230
un valor para que en "registro - persona" y el uso que dentro de nuestra función

01:08.230 --> 01:11.280
de decorador para que aquí, en lugar de mostrar que el

01:11.280 --> 01:14.470
texto de registro estándar, mostramos nuestra cadena de

01:14.470 --> 01:16.300
registro.

01:16.300 --> 01:18.540
Así que ahora podemos personalizar

01:18.540 --> 01:22.100
los valores que la función decoradora utiliza cuando se

01:22.100 --> 01:25.000
ejecuta con nuestra función de fábrica.

01:25.000 --> 01:27.410
Ahora llamamos a nuestro decorador aquí, porque

01:27.410 --> 01:30.710
no estamos ejecutando la función del decorador, sino que estamos

01:30.710 --> 01:33.290
ejecutando una función que devolverá dicha función

01:33.290 --> 01:35.060
del decorador.

01:35.060 --> 01:36.940
Y la ventaja de esto es que ahora

01:36.940 --> 01:40.790
podemos pasar valores que serán utilizados por esa función

01:40.790 --> 01:43.750
interna de decorador devuelta.

01:43.750 --> 01:47.050
Así que, si ahora guardo eso, vemos la antigua salida, pero con

01:47.050 --> 01:49.940
nuestra cadena de registro personalizada aquí.

01:49.940 --> 01:53.010
Por lo tanto, el uso de fábricas de decoradores

01:53.010 --> 01:55.730
puede darnos más poder y más posibilidades

01:55.730 --> 01:59.973
de configurar lo que el decorador hace internamente.
