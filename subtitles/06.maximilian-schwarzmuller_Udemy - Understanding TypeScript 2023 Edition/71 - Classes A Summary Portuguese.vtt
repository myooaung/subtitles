WEBVTT

00:02.140 --> 00:04.200
-: Agora é tudo para as aulas.

00:04.200 --> 00:06.180
Aprendemos sobre as próprias aulas.

00:06.180 --> 00:08.260
Aprendemos sobre suas propriedades,

00:08.260 --> 00:09.850
os modificadores de eixo,

00:09.850 --> 00:12.110
privados para eixo interno, protegidos

00:12.110 --> 00:15.990
para eixo interno também em classes herdadas, e públicos

00:15.990 --> 00:19.560
para eixo de todos os lugares.

00:19.560 --> 00:21.610
Também aprendemos sobre métodos que podemos acrescentar.

00:21.610 --> 00:23.520
Sobre métodos e propriedades estáticas.

00:23.520 --> 00:25.520
Sobre métodos abstratos e classes

00:25.520 --> 00:28.280
abstratas, o que é importante quando falamos

00:28.280 --> 00:31.350
de outro conceito importante, a herança que

00:31.350 --> 00:33.490
podemos utilizar.

00:33.490 --> 00:36.360
Aqui, estamos herdando do "Departamento" com a palavra-chave

00:36.360 --> 00:37.660
"estende".

00:37.660 --> 00:40.440
Isto nos permite compartilhar funcionalidades,

00:40.440 --> 00:41.830
propriedades e métodos,

00:41.830 --> 00:45.100
da classe 'Departamento' com esta classe herdeira e acrescentar

00:45.100 --> 00:47.162
nossas próprias funcionalidades ou

00:47.162 --> 00:50.300
substituir as funcionalidades existentes.

00:50.300 --> 00:52.560
Ou porque temos que ignorar, como no

00:52.560 --> 00:55.620
caso de "descrever", que é um método abstrato.

00:55.620 --> 00:58.710
Ou porque queremos substituir, como no caso do 'addEmployee'

00:58.710 --> 01:01.640
aqui no Departamento de Contabilidade.

01:01.640 --> 01:04.290
Esse não é um método abstrato na classe base,

01:04.290 --> 01:07.540
mas é claro que ainda podemos ignorá-lo se quisermos.

01:07.540 --> 01:10.370
Também aprendemos sobre o padrão singleton e "construtores

01:10.370 --> 01:14.180
privados", que também podem ser úteis às vezes.

01:14.180 --> 01:17.290
E então, em geral, espera-se agora que você tenha uma boa idéia

01:17.290 --> 01:20.290
das aulas e do que você pode fazer com elas em TypeScript.

01:20.290 --> 01:22.760
Em geral, é claro, você precisaria saber quais

01:22.760 --> 01:26.030
classes e objetos, e também um pouco sobre o que são protótipos

01:26.030 --> 01:29.690
em Vanilla JavaScript, porque isso geralmente não é algo introduzido

01:29.690 --> 01:31.870
pelo TypeScript, mas é claro, algo com o qual

01:31.870 --> 01:34.600
o TypeScript está relacionado, porque o TypeScript

01:34.600 --> 01:37.800
se baseia nestas características padrão do JavaScript, e acrescenta

01:37.800 --> 01:41.663
sua própria magia em cima destas características.
