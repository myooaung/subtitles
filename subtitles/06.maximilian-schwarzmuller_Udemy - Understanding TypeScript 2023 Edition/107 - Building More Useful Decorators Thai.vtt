WEBVTT

00:02.480 --> 00:06.780
ชาย: ตอนนี้ ด้วยความรู้เกี่ยวกับการทำงานของโรงงาน หรือช่างตกแต่งโรงงาน

00:06.780 --> 00:10.523
เราสามารถทำสิ่งที่น่าสนใจได้ทีเดียว

00:11.570 --> 00:16.240
เราสามารถแลกเปลี่ยนโรงงานมัณฑนากรใหม่กับแม่แบบ

00:16.240 --> 00:17.693
เป็นต้น

00:19.400 --> 00:21.590
และที่นี่ ฉันคาดว่าจะได้เทมเพลต

00:21.590 --> 00:23.780
ซึ่งควรเป็นสตริง

00:23.780 --> 00:28.780
และ hookId ซึ่งควรเป็นสตริงด้วย

00:28.870 --> 00:32.050
จากนั้นที่นี่ ฉันจะส่งคืนฟังก์ชันนิรนามของฉัน ซึ่งก็คือมัณฑนากรจริงๆ

00:32.050 --> 00:34.800
ตามที่คุณได้เรียนรู้

00:34.800 --> 00:37.440
เพราะอีกอย่าง ผมมีโรงงานมัณฑนากร

00:37.440 --> 00:40.570
และในนั้น ฉันต้องการแสดงเทมเพลตบางอย่าง

00:40.570 --> 00:42.530
ซึ่งควรเป็นโค้ด HTML ลงในที่ใดที่หนึ่งในดอม

00:42.530 --> 00:46.590
ซึ่งฉันพบ hookId นี้

00:46.590 --> 00:51.250
ตอนนี้เราสามารถไปที่ดัชนี html และเพิ่มสถานที่ดังกล่าวเพื่อให้เราเห็นว่าใช้งานได้

00:51.250 --> 00:54.483
เราสามารถเพิ่ม div ตรงนี้ด้วย id ของแอพก็ได้

00:55.430 --> 00:59.560
แล้วในแอพ ts แทนที่จะใช้ตัวบันทึก ฉันเพิ่ม

00:59.560 --> 01:01.357
WithTemplate

01:02.570 --> 01:06.810
ตอนนี้ให้ส่งสตริงว่างเป็นอาร์กิวเมนต์แรก และแอปเป็นอาร์กิวเมนต์ที่สอง

01:06.810 --> 01:09.313
ดังนั้น ID นี้ที่ฉันกำหนดให้กับ div ที่นี่

01:10.170 --> 01:13.830
และตอนนี้ภายในฟังก์ชั่นภายในนั้นก็คือมัณฑนากรที่แท้จริงของเรา

01:13.830 --> 01:19.500
ภายในฟังก์ชันมัณฑนากรนี้ ฉันต้องการเข้าถึงองค์ประกอบต่างๆ

01:19.500 --> 01:24.500
ไปที่องค์ประกอบ hook ด้วยเอกสาร getElementById

01:25.662 --> 01:29.390
สำหรับ hookId เราได้รับที่นี่เป็นอาร์กิวเมนต์

01:29.390 --> 01:33.480
และถ้า HookEl เป็นสิ่งที่มีอยู่จริง ฉันก็ต้องการเข้าถึงเป็น

01:34.330 --> 01:39.920
innerHTML และตั้งค่านี้เท่ากับเทมเพลต สมมุติว่า

01:39.920 --> 01:41.440
แน่นอนการตั้งค่าที่ง่ายมาก

01:41.440 --> 01:43.640
แต่ควรทำเคล็ดลับ

01:43.640 --> 01:45.460
ตอนนี้ฉันไม่สนใจตัวสร้าง

01:45.460 --> 01:48.110
และเพื่อบอก typescript ว่าฉันไม่สนใจที่นี่ ฉันสามารถเพิ่มเครื่องหมายขีดล่างเป็นชื่อ

01:48.110 --> 01:50.370
ซึ่งโดยพื้นฐานแล้วเป็นการส่งสัญญาณถึงตัวพิมพ์

01:50.370 --> 01:52.007
"ใช่ ฉันรู้ว่าฉันได้รับข้อโต้แย้งนี้

01:52.007 --> 01:54.580
แต่ฉันไม่ต้องการมัน

01:54.580 --> 01:56.170
ฉันต้องระบุมันว่า

01:56.170 --> 01:58.920
ด้วยขีดล่างนี้ ฉันบอกคุณว่าฉันทราบแล้ว

01:58.920 --> 02:00.850
แต่จะไม่ใช้มัน เพราะทั้งหมดที่ฉันอยากทำในตอนนี้ คือ

02:00.850 --> 02:02.300
ฉันอยากจะเรนเดอร์ในปีนี้

02:02.300 --> 02:04.033
ตอนนี้เมื่อเราเพิ่ม WithTemplate

02:05.580 --> 02:07.750
ที่นี่ เราสามารถเพิ่มแท็ก h1 My

02:07.750 --> 02:10.400
Person Object ได้ที่นี่

02:10.400 --> 02:14.570
นอกจากนี้ให้ปิด

02:14.570 --> 02:15.653
และถ้าเราบันทึกไว้ตอนนี้ มันจะคอมไพล์โดยไม่มีข้อผิดพลาด

02:19.130 --> 02:22.380
และที่นี่คุณเห็นว่าสิ่งนี้ถูกเรนเดอร์บนหน้าจอ

02:22.380 --> 02:29.720
และหวังว่าจะแสดงให้คุณเห็นถึงพลังที่คุณมีต่อนักตกแต่ง

02:29.720 --> 02:31.720
คุณสามารถสร้างมัณฑนากรขั้นสูงเช่นนี้ได้

02:31.720 --> 02:34.780
ซึ่งในทันใดก็มีเวทมนตร์อยู่เบื้องหลัง

02:34.780 --> 02:38.500
และนั่นคือสิ่งที่ฉันหมายถึงด้วยการเขียนโปรแกรมเมตา

02:38.500 --> 02:46.190
เราเพิ่มตรรกะบางอย่างที่นี่ ซึ่งเราสามารถเปิดเผยได้หากนี่เป็นไลบรารีของบุคคลที่สามที่เราแบ่งปันกับผู้ใช้รายอื่น

02:46.190 --> 02:47.890
เราสามารถเปิดเผยสิ่งนี้โดยเป็นส่วนหนึ่งของไลบรารี

02:47.890 --> 02:57.408
และใครก็ตามที่ใช้ไลบรารีของเราสามารถนำเข้าฟังก์ชันมัณฑนากรนี้และเพิ่มลงในคลาสเพื่อแสดงผลเนื้อหาบางอย่างได้อย่างน่าอัศจรรย์ในทันที

02:57.408 --> 03:00.500
และแน่นอน คุณไม่ได้ถูกจำกัดให้ทำแบบนั้นด้วยซ้ำ

03:00.500 --> 03:05.340
หากคุณต้องการส่งออกชื่อซึ่งเป็นส่วนหนึ่งของคลาสเมื่อได้รับการสร้างอินสแตนซ์

03:05.340 --> 03:07.850
คุณก็สามารถทำได้เช่นกัน

03:07.850 --> 03:09.570
เราได้ตัวสร้างของเรา: ฟังก์ชันที่นี่หลังจากทั้งหมด

03:09.570 --> 03:12.427
ตอนนี้สิ่งที่เราทำได้คือ เราสามารถสร้างบุคคลใหม่ที่นี่ได้

03:14.190 --> 03:16.010
โดยเรียกตัวสร้างของเรา เพราะนั่นคือตัวสร้างของเรา:

03:16.010 --> 03:20.380
ฟังก์ชันที่นี่ ท้ายที่สุดแล้ว

03:20.380 --> 03:23.820
ขอผมแปลงมันเป็นอะไรก็ได้ เพื่อให้ typescript อนุญาต

03:23.820 --> 03:26.570
และไม่คิดว่ามันเป็นฟังก์ชันปกติ

03:26.570 --> 03:29.240
จากนั้นเราสามารถไปที่องค์ประกอบ

03:29.240 --> 03:35.160
hook และค้นหาแท็ก h1 ซึ่งแน่นอนว่าในทางปฏิบัติคุณไม่มี

03:35.160 --> 03:37.330
แต่สำหรับการสาธิต ฉันคิดว่าเราจะมีที่นี่เสมอ

03:37.330 --> 03:42.330
อ๊ะ และฉันควรปิดแท็ก h1 ด้านล่างเสมอเมื่อฉันเห็น

03:42.330 --> 03:43.850
และที่นี่ ด้วยเครื่องหมายอัศเจรีย์

03:43.850 --> 03:46.750
สมมติว่าเราพบองค์ประกอบ h1 เสมอ เราสามารถตั้งค่า

03:46.750 --> 03:49.900
textContent เท่ากับ p ชื่อ.

03:49.900 --> 03:53.660
และถ้าฉันทำเช่นนั้นและบันทึกสิ่งนี้

03:53.660 --> 03:59.400
ตอนนี้ฉันจะส่งออกชื่อซึ่งเป็นส่วนหนึ่งของวัตถุในแม่แบบ

03:59.400 --> 04:01.540
นี่เป็นสิ่งที่คุณทำได้ และแน่นอน

04:01.540 --> 04:06.010
คุณสามารถเขียนแบบของนักตกแต่งได้ละเอียดกว่าที่ฉันทำที่นี่

04:06.010 --> 04:07.840
ลองพิจารณา Angular ซึ่งเป็นเฟรมเวิร์กยอดนิยมที่ใช้

04:07.840 --> 04:09.550
typescript

04:09.550 --> 04:12.270
พวกเขาใช้ตัวตกแต่ง เช่น ตัวตกแต่งองค์ประกอบนี้

04:12.270 --> 04:15.740
เพื่อให้คุณสามารถส่งผ่านวัตถุที่คุณระบุสิ่งต่างๆ

04:15.740 --> 04:21.020
เช่น เทมเพลตสำหรับตัวแยกส่วน

04:21.020 --> 04:23.950
และตัวเลือกในโดมที่ควรแสดงผลเทมเพลตนี้

04:23.950 --> 04:25.760
ซึ่งค่อนข้างใกล้เคียงกับที่เรากำหนดไว้ที่นี่

04:25.760 --> 04:28.170
เทมเพลต และสถานที่ที่ควรแสดงผล

04:28.170 --> 04:36.550
ตอนนี้ไม่จำเป็นต้องพูดแล้ว แน่นอนว่าผู้ตกแต่งเชิงมุมนั้นก้าวหน้าและประณีตกว่านักตกแต่งขั้นพื้นฐานของเราที่นี่

04:36.550 --> 04:38.740
อย่างไรก็ตาม แนวคิดหลักก็เหมือนกัน

04:38.740 --> 04:41.660
Angular มอบตัวตกแต่งให้คุณที่นี่ เพื่อให้คุณสามารถระบุโค้ด

04:41.660 --> 04:51.760
HTML บางส่วน ซึ่งสามารถเชื่อมต่อกับคลาสคอมโพเนนต์ของคุณที่จะแสดงผลไปยังโดมเมื่อคอมโพเนนต์นี้ถูกเรนเดอร์

04:51.760 --> 04:53.830
ในกรณีที่คุณไม่รู้ว่า Angular

04:53.830 --> 04:55.850
ทำงานอย่างไร นั่นไม่ใช่ปัญหา

04:55.850 --> 04:58.700
คุณต้องเข้าใจที่นี่ว่ามันใช้ได้กับชั้นเรียนและมัณฑนากร

04:58.700 --> 05:01.300
จากนั้นมันก็ทำในสิ่งที่เราทำที่นี่

05:01.300 --> 05:03.600
นั่นเป็นอีกสิ่งหนึ่งที่คุณสามารถทำได้กับมัณฑนากร

05:03.600 --> 05:06.400
หรือโดยเฉพาะที่นี่ กับโรงงานมัณฑนากร

05:06.400 --> 05:12.210
เพราะนั่นทำให้เราผ่านความขัดแย้งพิเศษที่เราต้องการที่นี่

05:12.210 --> 05:13.610
และนั่นคือสิ่งที่ฉันหมายถึงด้วยการเขียนโปรแกรมเมตา

05:13.610 --> 05:16.590
เรากำลังสร้างสิ่งต่าง ๆ เรากำลังสร้างฟังก์ชันการตกแต่ง

05:16.590 --> 05:21.130
ซึ่งคุณอาจกล่าวได้ว่ามีผลกระทบต่อผู้ใช้ปลายทาง

05:21.130 --> 05:24.840
ใน NP dual render หรือบางอย่างบนหน้าจอที่นี่

05:24.840 --> 05:29.090
แต่เราทำเช่นนั้นด้วยเครื่องมือที่เราเปิดเผยต่อนักพัฒนารายอื่น

05:29.090 --> 05:31.370
เนื่องจากมัณฑนากรนี้เป็นเครื่องมือดังกล่าว

05:31.370 --> 05:36.000
ซึ่งนักพัฒนารายอื่นต้องใช้โดยการเพิ่มลงในคลาสในตัวอย่างนี้

05:36.000 --> 05:38.580
มิฉะนั้นจะไม่ทำอะไรเลย

05:38.580 --> 05:40.300
ดังนั้นเราจึงจัดเตรียมโปรแกรมอรรถประโยชน์พิเศษให้กับนักพัฒนา

05:40.300 --> 05:49.050
ซึ่งนักพัฒนารายอื่นๆ สามารถนำไปใช้ได้ เช่น เรนเดอร์บางอย่างบนหน้าจอสำหรับชั้นเรียนที่ให้อย่างสะดวก

05:49.050 --> 05:50.590
นั่นคือสิ่งเดียวกับที่ Angular ทำที่นี่

05:50.590 --> 05:54.220
ในรูปแบบที่ก้าวหน้ากว่า และเป็นสิ่งที่ผู้ให้คะแนนเหมาะสมที่สุด
