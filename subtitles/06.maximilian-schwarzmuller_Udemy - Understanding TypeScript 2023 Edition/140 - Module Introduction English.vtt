WEBVTT

1
00:00:02.270 --> 00:00:04.610
<v Instructor>This is the code we ended up with</v>

2
00:00:04.610 --> 00:00:08.580
at the end of the last core section, our practice project,

3
00:00:08.580 --> 00:00:11.050
a lot of code all in one file,

4
00:00:11.050 --> 00:00:14.050
and this is arguably not a super complex project.

5
00:00:14.050 --> 00:00:17.420
You can definitely write way more elaborate projects

6
00:00:17.420 --> 00:00:20.380
and applications, and you would end up with way more code,

7
00:00:20.380 --> 00:00:23.640
so putting it all into one file is probably not

8
00:00:23.640 --> 00:00:25.000
what you wanna do.

9
00:00:25.000 --> 00:00:26.390
So what you wanna do instead

10
00:00:26.390 --> 00:00:28.740
is you wanna write modular code,

11
00:00:28.740 --> 00:00:31.120
which simply means you wanna split your code

12
00:00:31.120 --> 00:00:34.010
across multiple files so that each file

13
00:00:34.010 --> 00:00:37.157
on its own stays manageable and maintainable,

14
00:00:37.157 --> 00:00:39.640
and you then simply import and export

15
00:00:39.640 --> 00:00:42.100
from and to these files and make sure that,

16
00:00:42.100 --> 00:00:44.740
therefore, all these files are connected,

17
00:00:44.740 --> 00:00:47.990
but they're connected by Typescript or by the browser

18
00:00:47.990 --> 00:00:50.310
or by some third party build tool

19
00:00:50.310 --> 00:00:52.310
and not by you by merging them all

20
00:00:52.310 --> 00:00:54.500
into one file during development.

21
00:00:54.500 --> 00:00:55.940
Now, in this module, we'll have a look

22
00:00:55.940 --> 00:00:59.910
at two main options that help us with organizing our code

23
00:00:59.910 --> 00:01:02.160
in multiple files, and we'll not just learn

24
00:01:02.160 --> 00:01:04.930
about them in theory but also in practice.

25
00:01:04.930 --> 00:01:07.320
We'll, of course, apply these different approaches

26
00:01:07.320 --> 00:01:09.453
and see how we can split our code.

