WEBVTT

00:02.130 --> 00:04.900
مدرس: هذه الدورة مليئة بالمحتوى.

00:04.900 --> 00:06.940
لقد انتهينا تقريبًا من البدء

00:06.940 --> 00:09.500
وبعد ذلك سنتعمق في TypeScript

00:09.500 --> 00:11.667
وفي جميع ميزاته المثيرة ونتعلمها

00:11.667 --> 00:13.850
خطوة بخطوة.

00:13.850 --> 00:16.210
سنبدأ بالطبع بأساسيات TypeScripts.

00:16.210 --> 00:18.800
الأنواع الأساسية ، وكيف تعمل بشكل عام

00:18.800 --> 00:20.880
، وبعض الميزات الجديدة التي تضيفها

00:20.880 --> 00:22.930
، وكل ما تحتاج إلى معرفته للحصول

00:22.930 --> 00:25.320
على فهم جيد لـ TypeScript.

00:25.320 --> 00:27.690
بعد ذلك ، سنتعمق بالفعل في مترجم

00:27.690 --> 00:29.590
TypeScript وتكوينه لأنه

00:29.590 --> 00:32.310
من المهم للغاية أن تفهم ما يمكنك تهيئته

00:32.310 --> 00:35.480
هناك وما تفعله كل هذه الإعدادات المختلفة

00:35.480 --> 00:40.840
، لذا سنلقي نظرة فاحصة على ذلك في هذه الوحدة.

00:40.840 --> 00:43.900
بعد ذلك سوف نستكشف الجيل التالي من ميزات JavaScript

00:43.900 --> 00:45.850
المدعومة في TypeScript.

00:45.850 --> 00:48.880
كيف تعمل وكيف يمكنك استخدامها في TypeScript.

00:48.880 --> 00:51.500
سنستمر في استخدام الفئات والواجهات

00:51.500 --> 00:55.000
، وهو مفهوم مهم جدًا جزئيًا أيضًا في Vanilla JavaScript

00:55.000 --> 00:57.350
في حالة الفئات ، ولكن مع الواجهات

00:57.350 --> 00:59.510
، حصلنا أيضًا على ميزة TypeScript

00:59.510 --> 01:01.600
جديدة تمامًا وستفهم ما هي وماذا

01:01.600 --> 01:06.210
تفعل ولماذا نحن قد ترغب في استخدامها.

01:06.210 --> 01:08.190
بعد ذلك حان الوقت للغوص بشكل أعمق.

01:08.190 --> 01:10.490
سنلقي نظرة على بعض الأنواع المتقدمة

01:10.490 --> 01:13.280
وميزات TypeScript المتقدمة بشكل عام ، وننتقل

01:13.280 --> 01:15.040
بها إلى المستوى التالي هناك

01:15.040 --> 01:16.640
ونبني على الأساسيات التي

01:16.640 --> 01:20.110
تعلمناها بالفعل حتى هذه النقطة.

01:20.110 --> 01:22.630
أيضًا ميزة متقدمة ، والتي تستحق

01:22.630 --> 01:27.210
بالتأكيد قسم خاص بها ، هي ميزة الأدوية الجنسية.

01:27.210 --> 01:28.910
سوف تتعلم ماهية ذلك

01:28.910 --> 01:31.160
ولماذا هو مفيد حقًا في هذه

01:31.160 --> 01:32.650
الوحدة.

01:32.650 --> 01:34.570
تلاه المصممون.

01:34.570 --> 01:37.360
تُعد Decorators ميزة رائعة جدًا تمت

01:37.360 --> 01:40.550
إضافتها أيضًا بواسطة TypeScript وسنلقي

01:40.550 --> 01:43.810
نظرة فاحصة على الزخارف ونبني أيضًا بعض الزخارف

01:43.810 --> 01:46.200
المفيدة حقًا في تلك الوحدة وبعد

01:46.200 --> 01:50.100
ذلك سنتعلم الكثير عن TypeScript.

01:50.100 --> 01:52.660
الآن ، تم تنظيم الدورة بحيث

01:52.660 --> 01:56.460
أعرض كل هذه الميزات الفردية في عروض توضيحية

01:56.460 --> 01:59.040
بسيطة صغيرة نسبيًا.

01:59.040 --> 02:01.730
الآن لإعطائك صورة أكبر ومعرفة

02:01.730 --> 02:04.640
كيفية تطبيق كل هذه الميزات في مشروع

02:04.640 --> 02:08.140
حقيقي ، سنقوم ببناء ذلك بالضبط.

02:08.140 --> 02:10.400
سيكون لدينا وحدة نمطية كاملة

02:10.400 --> 02:14.420
حيث نقوم ببناء مشروع كامل بالكامل باستخدام TypeScript

02:14.420 --> 02:17.720
من البداية حتى ترى العديد من هذه الميزات ،

02:17.720 --> 02:20.090
ومعظم هذه الميزات التي تعلمتها

02:20.090 --> 02:21.920
حتى هذه النقطة ، قيد التنفيذ

02:21.920 --> 02:23.680
وسترى كيف تعمل معًا ولماذا

02:23.680 --> 02:28.160
يبسطون عملية بناء مثل هذا المشروع.

02:28.160 --> 02:29.940
بمجرد الانتهاء من بناء هذا المشروع

02:29.940 --> 02:31.770
، سنحدد مشكلة جديدة وسنتعلم كيفية

02:31.770 --> 02:34.420
حلها من خلال العمل مع مساحات الأسماء والوحدات

02:34.420 --> 02:36.450
النمطية التي ستساعدنا في جعل الكود

02:36.450 --> 02:38.100
الخاص بنا أكثر قابلية للإدارة

02:38.100 --> 02:40.570
والقراءة.

02:40.570 --> 02:42.600
بناءً على ذلك ، سنستكشف أيضًا

02:42.600 --> 02:44.350
Webpack مع TypeScript.

02:44.350 --> 02:47.690
Webpack هي أداة بناء نستخدمها في تطوير الويب للواجهة

02:47.690 --> 02:49.530
الأمامية الحديثة ويمكنك استخدامها

02:49.530 --> 02:52.970
جنبًا إلى جنب مع TypeScript للحصول على إعداد أفضل للمشروع

02:52.970 --> 02:55.520
مما يجعل بعض الأشياء أسهل ويسمح لك بالحصول

02:55.520 --> 02:57.990
على أفضل العوالم المزعجة.

02:57.990 --> 02:59.850
تجربة تطوير رائعة وأيضًا

02:59.850 --> 03:02.170
رمز يعمل جيدًا للمستخدمين

03:02.170 --> 03:04.120
النهائيين.

03:04.120 --> 03:06.320
بمجرد الانتهاء من ذلك ، لدينا صورة

03:06.320 --> 03:08.710
قوية جدًا لـ TypeScript وكيفية العمل

03:08.710 --> 03:10.180
معها في المشاريع.

03:10.180 --> 03:13.250
الآن ما ستحتاجه في الكثير من المشاريع الحقيقية

03:13.250 --> 03:15.183
هو مكتبات تابعة لجهات خارجية

03:15.183 --> 03:16.820
، لذا سنلقي نظرة فاحصة على

03:16.820 --> 03:20.250
ذلك نظرًا لوجود مكتبات معينة تابعة لجهات خارجية

03:20.250 --> 03:22.280
احتضنت بالفعل TypeScript وقد

03:22.280 --> 03:24.630
بنيت في دعم TypeScript ، ولكن هناك

03:24.630 --> 03:26.600
أيضًا العديد من المكتبات التي

03:26.600 --> 03:29.030
لا سنلقي نظرة على كيفية العمل مع كلا

03:29.030 --> 03:34.520
النوعين من المكتبات بطريقة رائعة في مشاريع TypeScript.

03:34.520 --> 03:36.630
حسنًا ، هناك بعض السيناريوهات

03:36.630 --> 03:39.620
المحددة التي تستحق وحداتها الخاصة.

03:39.620 --> 03:41.570
سيكون لدينا وحدة كاملة حول

03:41.570 --> 03:44.320
React مع TypeScript ، وكيف يمكنك إنشاء

03:44.320 --> 03:47.540
تطبيق React بالكامل باستخدام TypeScript

03:47.540 --> 03:49.452
فقط ، وأيضًا وحدة كاملة حول

03:49.452 --> 03:53.260
NodeJS ونص كتابة النهاية السريعة بحيث يكون لديك أيضًا

03:53.260 --> 03:55.390
أمثلة رائعة لهذه الاستخدامات

03:55.390 --> 03:58.910
الشائعة والمحددة حالات TypeScript حيث يمكنك

03:58.910 --> 04:01.270
فجأة إنشاء تطبيقات React أو Node

04:01.270 --> 04:03.630
بطريقة جديدة تمامًا باستخدام

04:03.630 --> 04:06.760
لغة جديدة تمامًا.

04:06.760 --> 04:09.260
الكثير من المحتوى المثير في الدورة.

04:09.260 --> 04:10.970
دعونا لا نضيع الوقت.

04:10.970 --> 04:12.720
دعنا نرى كيف يمكنك تحقيق أقصى

04:12.720 --> 04:15.263
استفادة من الدورة وبعد ذلك دعنا نتعمق.
