WEBVTT

00:02.310 --> 00:03.143
Istruttore: per questo, ritorno

00:03.143 --> 00:05.860
all'impostazione generale del progetto su cui abbiamo lavorato in precedenza.

00:05.860 --> 00:10.940
Lo troverete allegato nell'indice. e l'applicazione.

00:10.940 --> 00:10.940
file ts.

00:10.940 --> 00:15.410
E lì voglio tuffarmi con i tipi di intersezione.

00:15.410 --> 00:19.570
I tipi di intersezione consentono di combinare altri tipi.

00:19.570 --> 00:23.280
Diciamo che abbiamo un tipo admin, che è un tipo di oggetto,

00:23.280 --> 00:25.430
quindi, di nuovo, non stiamo creando

00:25.430 --> 00:28.170
un oggetto, ma definendo un tipo, quindi sto

00:28.170 --> 00:30.340
solo definendo un tipo qui e admin

00:31.200 --> 00:35.560
dovrebbe avere un nome, che è una stringa, diciamo, e un amministratore

00:35.560 --> 00:38.230
dovrebbe anche avere dei privilegi, che dovrebbero

00:39.910 --> 00:44.370
essere un array di stringhe, per esempio.

00:44.370 --> 00:47.010
Ora, avremmo potuto crearlo con un'interfaccia,

00:47.010 --> 00:48.950
ma qui lo sto facendo con

00:49.810 --> 00:54.470
un tipo e ora ho un altro tipo, diciamo un tipo generico di dipendente,

00:54.470 --> 00:59.130
e ho anche un nome, stringa.

00:59.130 --> 01:02.890
Non ho privilegi, ma ho una data di inizio.

01:02.890 --> 01:04.380
Potrebbe essere di tipo data.

01:04.380 --> 01:07.350
Non l'abbiamo mai visto prima, ma la data è un tipo

01:07.350 --> 01:10.340
supportato dallo script basato sull'oggetto dati

01:10.340 --> 01:12.163
costruito in JavaScript.

01:13.730 --> 01:17.580
Ora vogliamo creare un nuovo tipo, diciamo un dipendente

01:17.580 --> 01:21.120
elevato, che dovrebbe essere la combinazione

01:21.120 --> 01:23.900
di questi due tipi.

01:23.900 --> 01:26.470
Naturalmente, potremmo crearlo manualmente

01:26.470 --> 01:28.770
definendo semplicemente un tipo di

01:28.770 --> 01:31.750
oggetto, con un nome, una data di inizio e un privilegio,

01:31.750 --> 01:34.120
ma se abbiamo già questi due tipi, possiamo

01:34.120 --> 01:37.540
anche combinarli semplicemente dicendo admin e, usando

01:37.540 --> 01:42.000
il simbolo dell'ampersand, employee.

01:42.000 --> 01:44.370
Il risultato è un nuovo tipo di oggetto che deve

01:44.370 --> 01:46.390
avere entrambe le caratteristiche.

01:46.390 --> 01:50.470
Quindi, se ho il mio dipendente, E uno, che dovrebbe essere

01:50.470 --> 01:54.770
di tipo dipendente elevato, posso memorizzare un oggetto

01:54.770 --> 01:57.440
in esso che deve avere una proprietà name,

01:57.440 --> 02:00.113
che deve avere una proprietà privilege,

02:02.510 --> 02:08.800
create server, e che deve anche avere una data di inizio con nuovi dati.

02:08.800 --> 02:10.070
Crea un nuovo oggetto dati che

02:10.070 --> 02:12.700
rappresenta semplicemente il timestamp corrente.

02:12.700 --> 02:15.610
Si tratta quindi di un modo semplice per combinare due tipi.

02:15.610 --> 02:17.740
Ora, dirò che i tipi di intersezione

02:17.740 --> 02:21.550
sono strettamente correlati all'ereditarietà delle

02:21.550 --> 02:24.320
interfacce, perché ovviamente avremmo

02:24.320 --> 02:28.590
potuto ottenere lo stesso risultato usando un'interfaccia

02:29.620 --> 02:32.420
admin e poi un'interfaccia employee,

02:32.420 --> 02:34.700
e poi avremmo potuto usare un tipo

02:34.700 --> 02:38.853
di intersezione su queste interfacce o creare una terza

02:40.100 --> 02:44.040
interfaccia, elevated employee, che estende employee

02:47.230 --> 02:50.653
e admin.

02:52.700 --> 02:54.520
Pertanto, se ora lo commentassi,

02:54.520 --> 02:56.830
otterremmo lo stesso effetto.

02:56.830 --> 02:58.550
Ora, probabilmente, questo è un po' più codice.

02:58.550 --> 03:01.750
Un motivo per cui forse preferiremmo usare i tipi invece

03:01.750 --> 03:04.280
delle interfacce, ma la relazione è sicuramente

03:04.280 --> 03:06.300
molto stretta e si potrebbero assolutamente

03:06.300 --> 03:09.770
usare le interfacce per questo esempio.

03:09.770 --> 03:13.040
Tuttavia, vale la pena di notare che, sebbene i tipi di intersezione

03:13.040 --> 03:15.600
possano essere particolarmente utili quando vengono

03:15.600 --> 03:18.240
utilizzati insieme ai tipi di oggetto, come facciamo qui,

03:18.240 --> 03:20.910
è possibile utilizzarli con qualsiasi tipo.

03:20.910 --> 03:22.683
Quindi, se avessimo un altro

03:23.655 --> 03:28.450
tipo, combinabile, diciamo, che è una stringa o un numero, quindi abbiamo

03:28.450 --> 03:29.940
un tipo unione qui con i

03:29.940 --> 03:32.380
tipi base stringa o numero e poi abbiamo

03:32.380 --> 03:34.770
un tipo numerico qui, che è un numero o

03:34.770 --> 03:38.660
un booleano, beh, allora, potremmo avere il nostro, diciamo,

03:38.660 --> 03:43.660
tipo universale qui intersecando combinabile con numerico e alla fine, i tipi

03:43.730 --> 03:48.160
potrebbero vedere che l'universale naturalmente è di tipo numero,

03:48.160 --> 03:49.800
perché questa è l'unica intersezione

03:49.800 --> 03:51.950
che abbiamo qui, ma se avessimo più

03:51.950 --> 03:56.520
intersezioni, allora questo sarebbe il tipo a cui è assegnato l'universale,

03:56.520 --> 04:04.940
quindi potrebbe anche essere un tipo unione, che è l'intersezione di questi due tipi unione.

04:04.940 --> 04:07.800
Quindi l'operatore di intersezione può essere

04:07.800 --> 04:11.790
usato con qualsiasi tipo e costruisce semplicemente l'intersezione

04:11.790 --> 04:12.980
di questi tipi.

04:12.980 --> 04:14.330
Nel caso di un tipo di unione,

04:14.330 --> 04:17.300
si tratta fondamentalmente dei tipi che hanno in comune.

04:17.300 --> 04:18.890
Nel caso dei tipi di oggetto, si tratta

04:18.890 --> 04:22.220
semplicemente della combinazione di queste proprietà dell'oggetto,

04:22.220 --> 04:23.510
per così dire.

04:23.510 --> 04:25.960
Si tratta quindi di tipi di intersezione.

04:25.960 --> 04:27.360
A volte può essere utile.

04:27.360 --> 04:29.050
Non li userete sempre, ma sicuramente

04:29.050 --> 04:31.570
vi capiterà di trovarvi in situazioni in cui potrete

04:31.570 --> 04:35.010
esprimere qualcosa in modo più semplice o più breve usando i tipi

04:35.010 --> 04:37.230
di intersezione.

04:37.230 --> 04:39.520
Ora, per dimostrare che tutto questo funziona,

04:39.520 --> 04:42.050
apriamo una nuova scheda nel terminale ed eseguiamo

04:42.050 --> 04:45.390
TSC dash W per avviare la modalità di osservazione, in modo da non

04:45.390 --> 04:47.770
dover entrare solo nel server live, ma anche

04:47.770 --> 04:49.850
per costruire il codice.

04:49.850 --> 04:51.210
Ora, se ricarico una volta qui,

04:51.210 --> 04:53.200
vediamo che viene eseguito senza errori

04:53.200 --> 04:55.443
e che viene anche compilato senza errori.
