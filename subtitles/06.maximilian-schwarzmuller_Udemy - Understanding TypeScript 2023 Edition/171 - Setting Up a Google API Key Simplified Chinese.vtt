WEBVTT

00:02.110 --> 00:03.839
教师：您可以搜索Google

00:03.839 --> 00:06.930
Geocoding API, 您将找到官方的Geocoding

00:06.930 --> 00:09.210
API文档｡

00:09.210 --> 00:12.130
地理编码API是一种开放式API,

00:12.130 --> 00:20.020
可用于将地址转换为坐标对或将坐标对转换为地址｡

00:20.020 --> 00:21.910
在这里, 我们要进行查找,

00:21.910 --> 00:24.120
在这里我们提供一个地址｡

00:24.120 --> 00:28.513
所以, 这个普通的地理编码请求会返回坐标｡

00:29.400 --> 00:31.130
现在, 我们可以向此URL发送请求,

00:31.130 --> 00:36.020
但需要一个API密钥来执行此操作｡

00:36.020 --> 00:38.360
而且我们可以免费得到一个｡ 

00:38.360 --> 00:43.320
所有你需要的是一个谷歌帐户和（喃喃自语）信用卡｡

00:43.320 --> 00:45.260
不幸的是, 你需要这个

00:45.260 --> 00:48.330
它将是免费的, 因为有一个非常慷慨的免费层,

00:48.330 --> 00:55.480
你可以使用每个月, 我们不会超过这个免费层与我们在这里做什么｡

00:55.480 --> 01:00.890
但不幸的是, 你仍然需要一张信用卡才能使用谷歌地图的功能｡

01:00.890 --> 01:02.660
如果你没有这样的信用卡,

01:02.660 --> 01:05.340
不幸的是, 你不能使用API｡

01:05.340 --> 01:06.860
因此, 创建一个Google帐户,

01:06.860 --> 01:08.670
然后获得这样的API密钥,

01:08.670 --> 01:10.960
点击这里开始｡

01:10.960 --> 01:13.160
并且开始会带你到一个页面,

01:13.160 --> 01:16.310
在那里你可以告诉谷歌你想要哪些功能｡

01:16.310 --> 01:18.030
我们需要Places功能,

01:18.030 --> 01:21.160
因为它包括地理编码API, 但我们还需要Maps功能,

01:21.160 --> 01:22.970
因为它将包括Google

01:22.970 --> 01:25.010
Maps Java Script

01:25.010 --> 01:28.380
SDK, 我们稍后需要它｡

01:28.380 --> 01:31.770
因此, 请选中这两项, 然后单击“继续”｡ 

01:31.770 --> 01:35.510
接下来, 您必须选择要启用此功能的项目｡

01:35.510 --> 01:38.803
您甚至可以创建一个新的或选择一个现有的｡

01:40.670 --> 01:43.430
一旦你这样做了, 你被转发,

01:46.670 --> 01:51.580
你应该被询问, 每当你想要设置该帐户的计费｡

01:51.580 --> 01:53.003
只需确认这一点｡ 

01:55.350 --> 01:58.133
在等待和加载一段时间后, 您将看到您的API密钥,

02:01.100 --> 02:04.540
您可以使用它｡

02:04.540 --> 02:11.360
侧记, 你也可以限制应用程序, 这是能够使用该密钥在这个谷歌开发者控制台.

02:11.360 --> 02:16.190
但在这里, 我们可以复制该密钥并在项目中使用它｡

02:16.190 --> 02:17.560
那么, 让我们存储该密钥｡ 

02:17.560 --> 02:18.980
也许这里在不断的变化｡ 

02:18.980 --> 02:21.193
Google API密钥｡ 

02:24.840 --> 02:27.930
接下来, 让我们关注发送请求｡ 

02:27.930 --> 02:31.680
为此, 让我们再次使用Google的Google地理编码API,

02:31.680 --> 02:34.570
这样我们就可以在这里再次获得此URL｡

02:34.570 --> 02:38.230
此URL是我们需要将请求发送到的URL｡ 

02:38.230 --> 02:41.130
为此, 我们需要某种方式从类型脚本内部发送请求,

02:41.130 --> 02:45.763
从而从Java脚本代码内部发送请求｡
