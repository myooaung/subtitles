WEBVTT

00:02.090 --> 00:05.740
Anlatıcı: Arayüzler ve sınıflar için hepsi bu kadar.

00:05.740 --> 00:08.190
Bu modülde, sınıflara ve orada neler yapabileceğimize

00:08.190 --> 00:09.630
ayrıntılı bir şekilde baktık.

00:09.630 --> 00:11.390
Sınıflar ve TypeScript, sonuçta

00:11.390 --> 00:14.130
JavaScript için sınıfların üzerine inşa

00:14.130 --> 00:18.720
edilir ve bunları bu modülde biraz daha önce özetlemiştim.

00:18.720 --> 00:20.710
Arayüzler farklı bir şeydir.

00:20.710 --> 00:22.600
Bunlar yalnızca TypeScript'te mevcuttur.

00:22.600 --> 00:24.670
Bunlar saf bir TypeScript özelliğidir

00:24.670 --> 00:27.390
ve açık, net bir şekilde yapılandırılmış ve çok açık

00:27.390 --> 00:29.450
kod yazmanıza yardımcı olur.

00:29.450 --> 00:33.010
Sınıfları belirli özelliklere veya genel olarak nesneleri belirli

00:33.010 --> 00:36.810
bir yapıya sahip olmaya zorlamanıza yardımcı olabilirler.

00:36.810 --> 00:39.860
Öğrendiğiniz gibi bir fonksiyon türü olarak kullanılabilirler.

00:39.860 --> 00:42.490
Bu arada, yöntem adından sonra bir soru işareti

00:42.490 --> 00:45.200
eklerseniz, isteğe bağlı özelliklere ve dolayısıyla

00:45.200 --> 00:48.290
isteğe bağlı yöntemlere izin verirler.

00:48.290 --> 00:50.190
Yani bu kullanabileceğiniz bir şey.

00:50.190 --> 00:53.210
Ve az önce gördüğünüz gibi, TypeScript'in kodunuzu kontrol

00:53.210 --> 00:55.870
etmesine izin verme rollerini yerine getirdikten

00:55.870 --> 00:57.680
sonra derlendiklerinde, bu arayüzler

00:57.680 --> 01:00.410
için hiçbir şey atlanmaz.

01:00.410 --> 01:02.300
Kod basitçe çöpe atılır.

01:02.300 --> 01:05.080
Bununla birlikte arayüzler, sınıflarınızı veya

01:05.080 --> 01:07.420
nesnelerinizi belirli bir yapıya sahip

01:07.420 --> 01:09.140
olmaya zorlamak ve bir nesnenin

01:09.140 --> 01:12.400
nasıl görünmesi gerektiğine dair fikrinizi açıkça tanımlamak

01:12.400 --> 01:14.810
için güçlü bir özelliktir.

01:14.810 --> 01:18.650
Şimdi öğrendiğiniz gibi, isterseniz bunları çoğunlukla özel

01:18.650 --> 01:21.120
türlerle değiştirebilirsiniz.

01:21.120 --> 01:23.580
Özel türleri de uygulayabilirsiniz, ancak

01:23.580 --> 01:27.700
bunun için bir arayüz kullanmak, bir nesneyi tanımlamak istiyorsanız

01:27.700 --> 01:30.360
bir arayüz kullanmak, onu uygulamaktan daha

01:30.360 --> 01:32.180
yaygındır.

01:32.180 --> 01:33.980
TypeScript'in ilk günlerinde, özel

01:33.980 --> 01:36.490
türler arayüzler gibi uygulanamadığı veya kullanılamadığı

01:36.490 --> 01:38.980
için bunların hepsi tarihi nedenlerden dolayı

01:38.980 --> 01:40.710
vardır.

01:40.710 --> 01:42.610
Artık daha fazla esneklik var, ancak

01:42.610 --> 01:45.150
nesnelerle çalışıyorsanız ve yapılarını tanımlamak

01:45.150 --> 01:46.420
istiyorsanız hala arayüzleri

01:46.420 --> 01:48.680
tercih etmeniz önerilir.

01:48.680 --> 01:50.620
Ayrıca bu kurs boyunca onları tekrar

01:50.620 --> 01:51.883
tekrar göreceğiz.
