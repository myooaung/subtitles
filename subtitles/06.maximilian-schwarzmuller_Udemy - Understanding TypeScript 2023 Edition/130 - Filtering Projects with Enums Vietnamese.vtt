WEBVTT

00:02.310 --> 00:03.940
Người đàn ông: Vì vậy, chúng tôi có hai

00:03.940 --> 00:06.500
vấn đề, nếu chúng tôi muốn gọi chúng như vậy, để khắc phục.

00:06.500 --> 00:07.820
Bây giờ tôi muốn bắt đầu

00:07.820 --> 00:10.960
với vấn đề là các dự án hiển thị trong cả hai hộp.

00:10.960 --> 00:13.050
Tôi muốn giới thiệu một số

00:13.050 --> 00:15.980
bộ lọc và nơi tốt nhất để lọc tất nhiên

00:15.980 --> 00:18.930
là chức năng nghe của chúng ta.

00:18.930 --> 00:22.743
Nếu chúng ta đi đến nơi chúng ta đăng ký người nghe của

00:26.000 --> 00:29.170
mình, ở đây trong mệnh đề danh sách dự án.

00:29.170 --> 00:32.270
Sau đó, ở đây, chúng ta có một- một danh sách các dự án, phải không?

00:32.270 --> 00:36.170
Bây giờ, danh sách các dự án đó bao gồm tất cả các dự án.

00:36.170 --> 00:39.400
Tuy nhiên, bây giờ, bên trong mệnh đề danh sách dự án, chúng

00:39.400 --> 00:43.140
tôi chỉ quan tâm đến các dự án đang hoạt động hoặc đã hoàn thành.

00:43.140 --> 00:44.250
Nhân tiện, ở đây,

00:44.250 --> 00:49.103
về mặt lý thuyết, chúng ta cũng có thể sử dụng enum của mình, nhưng thực ra, tôi

00:50.660 --> 00:53.160
cần các giá trị cụ thể được lưu trữ trong

00:53.160 --> 00:56.440
enum ở dưới đó hoặc trong kiểu ở dưới đó và do đó, ở đây

00:56.440 --> 00:57.880
tôi không muốn sử dụng

00:57.880 --> 00:58.990
enum luôn luôn bởi

00:58.990 --> 01:02.180
vì tôi muốn hiển thị các loại chuỗi ký tự.

01:02.180 --> 01:06.190
Vì vậy, những gì chúng tôi sẽ làm ở đây bên trong chức năng nghe của chúng tôi là,

01:06.190 --> 01:08.690
trước khi chúng tôi lưu trữ các dự án và hiển thị chúng,

01:08.690 --> 01:10.470
chúng tôi muốn lọc chúng.

01:10.470 --> 01:13.020
Vì vậy, ở đây chúng tôi có các dự án liên quan của

01:13.020 --> 01:16.660
chúng tôi, bạn có thể nói, và tất nhiên, đó là các dự án được lọc.

01:16.660 --> 01:19.070
Phương thức bộ lọc là một phương thức mặc định tồn

01:19.070 --> 01:21.460
tại trên bất kỳ mảng nào trong JavaScript.

01:21.460 --> 01:23.690
Hàm này nhận một hàm mà sau đó thực

01:23.690 --> 01:26.820
thi trên mọi mục trong mảng dự án đó và khi hàm

01:26.820 --> 01:29.660
này ở đây trả về true, chúng tôi giữ mục đó

01:29.660 --> 01:30.940
trong một mảng mới

01:30.940 --> 01:33.530
tạo, sau đó được lưu trữ trong các dự án

01:33.530 --> 01:35.040
có liên quan.

01:35.040 --> 01:38.130
Nếu hàm này trả về false, chúng tôi sẽ loại bỏ mục đó, không

01:38.130 --> 01:39.770
phải từ danh sách ban đầu mà trong

01:39.770 --> 01:41.660
danh sách mới được tạo và được lưu

01:41.660 --> 01:44.230
trữ trong các dự án có liên quan.

01:44.230 --> 01:46.600
Vì vậy, ở đây, chúng ta phải trả về true hoặc false tùy thuộc

01:46.600 --> 01:48.810
vào việc chúng ta có muốn giữ dự án hay không.

01:48.810 --> 01:52.430
Và để làm được điều đó, tất nhiên, chúng ta chỉ cần nhìn vào trạng thái.

01:52.430 --> 01:55.310
Trạng thái dự án là một enum và chúng tôi muốn

01:55.310 --> 01:59.070
kiểm tra xem trạng thái dự án có bằng trạng thái dự án đang hoạt

01:59.070 --> 02:03.590
động hay không nếu chúng tôi nằm trong danh sách dự án đang hoạt động,

02:03.590 --> 02:05.790
vì vậy nếu thuộc tính loại đang hoạt

02:05.790 --> 02:07.940
động hoặc nếu trạng thái dự án kết

02:07.940 --> 02:10.640
thúc nếu chúng tôi đang ở trong danh sách xong

02:10.640 --> 02:12.270
danh sách.

02:12.270 --> 02:15.430
Vì vậy, ở đây tôi sẽ thực sự viết a- một thân

02:15.430 --> 02:17.250
hàm thực bằng cách gói nó

02:17.250 --> 02:19.110
bằng dấu ngoặc nhọn, không

02:19.110 --> 02:20.100
sử dụng phím tắt

02:20.100 --> 02:23.480
hàm mũi tên và sau đó chúng ta có thể kiểm tra,

02:23.480 --> 02:25.540
nếu loại này hoạt động bình

02:26.800 --> 02:31.480
đẳng, thì tôi muốn trả về kết quả của việc kiểm tra này tại đây

02:31.480 --> 02:34.130
other và do đó, chỉ sau câu lệnh if này,

02:34.130 --> 02:37.150
tôi muốn trả lại sự so sánh về trạng thái

02:37.150 --> 02:40.160
dự án đã hoàn thành.

02:40.160 --> 02:42.220
Cùng với đó, chúng tôi nhận được các dự án có liên quan

02:42.220 --> 02:43.520
mà giờ đây chúng tôi có thể lưu trữ

02:43.520 --> 02:45.490
tại đây, trong các dự án được chỉ định.

02:45.490 --> 02:47.070
Vì vậy, bây giờ chúng ta hãy xem liệu nó có hoạt động không.

02:47.070 --> 02:48.053
Nếu tôi tải lại và

02:49.310 --> 02:51.570
chúng tôi thêm một dự án ở đây, nó có hoạt

02:51.570 --> 02:52.743
động không?

02:54.950 --> 02:55.930
Điều này hoạt động và, bạn

02:55.930 --> 02:58.050
thấy đấy, nó chỉ được thêm vào các dự án đang hoạt động,

02:58.050 --> 03:00.020
không phải cho các dự án đã hoàn thành.

03:00.020 --> 03:02.390
Tuy nhiên, nếu tôi thêm một dự án thứ hai

03:02.390 --> 03:04.740
ở đây, chúng ta vẫn có sự trùng lặp đó.

03:04.740 --> 03:08.720
Bây giờ, điều đó liên quan đến cách chúng tôi hiển thị các dự án của mình.

03:08.720 --> 03:10.520
Bên trong các dự án kết xuất, chúng

03:10.520 --> 03:13.430
tôi luôn xem qua tất cả các mục dự án của mình và nối

03:13.430 --> 03:15.090
chúng vào danh sách.

03:15.090 --> 03:16.640
Bây giờ, vấn đề với điều đó,

03:16.640 --> 03:19.900
tất nhiên, là chúng ta có thể đã có một hạng mục dự án

03:19.900 --> 03:21.950
được hiển thị trên màn hình.

03:21.950 --> 03:25.020
Bây giờ, giải pháp tốt nhất có thể ở đây là chạy

03:25.020 --> 03:27.450
một số so sánh trong đó bạn kiểm tra

03:27.450 --> 03:30.170
những gì đã được kết xuất và những gì bạn

03:30.170 --> 03:31.730
cần kết xuất, để tránh

03:31.730 --> 03:34.110
kết xuất lại không cần thiết.

03:34.110 --> 03:35.760
Tuy nhiên, chạy so sánh này

03:35.760 --> 03:38.440
bằng cách nhìn vào DOM thực cũng tiêu tốn khá

03:38.440 --> 03:39.710
nhiều hiệu năng.

03:39.710 --> 03:43.100
Đối với ứng dụng này ở đây, hoàn toàn ổn nếu chỉ cần lấy phần

03:43.100 --> 03:45.250
tử danh sách của chúng tôi và xóa tất cả

03:45.250 --> 03:48.720
nội dung của nó bằng cách đặt HTML bên trong thành một chuỗi

03:48.720 --> 03:49.640
trống, có nghĩa

03:49.640 --> 03:52.460
là chúng tôi loại bỏ tất cả các mục danh sách và sau

03:52.460 --> 03:53.710
đó kết xuất lại.

03:53.710 --> 03:56.350
Điều đó có nghĩa là bất cứ khi nào chúng tôi thêm một

03:56.350 --> 03:58.470
dự án mới, chúng tôi sẽ kết xuất lại tất cả

03:58.470 --> 04:00.210
các dự án, nhưng với mục đích của dự

04:00.210 --> 04:01.670
án này ở đây, cho ứng dụng này

04:01.670 --> 04:03.490
ở đây, điều đó hoàn toàn ổn.

04:03.490 --> 04:05.410
Vì vậy, bây giờ với điều đó, nếu chúng ta

04:05.410 --> 04:06.987
lưu điều đó, hãy thử lại lần nữa.

04:06.987 --> 04:10.540
"Cái này có hiệu quả không? " là dự án đầu tiên và bây giờ nếu

04:10.540 --> 04:12.960
tôi thêm một dự án khác vào đây, bạn thấy

04:12.960 --> 04:14.530
đấy, dự án đó sẽ được thêm

04:14.530 --> 04:17.453
nhưng dự án kia sẽ không được thêm lại.

04:18.430 --> 04:21.870
Rất tiếc, bây giờ, tôi gặp lỗi (lầm bầm) ở đây

04:21.870 --> 04:23.540
vì mô tả không đủ dài.

04:23.540 --> 04:26.230
Vì vậy, tất cả điều này hiện đang hoạt động, như bạn

04:26.230 --> 04:28.150
có thể nói và chúng tôi đang hiển thị

04:28.150 --> 04:30.090
các dự án này theo cách mà chúng nên được

04:30.090 --> 04:32.170
hiển thị, tất nhiên là đúng.

04:32.170 --> 04:35.050
Và với điều đó, ứng dụng trông không quá tệ.

04:35.050 --> 04:36.890
Một thứ còn thiếu là một số

04:36.890 --> 04:39.550
chức năng kéo và thả hoặc một số cách để

04:39.550 --> 04:44.040
đưa các dự án từ danh sách đầu tiên này sang danh sách thứ hai.

04:44.040 --> 04:45.180
Chúng tôi cũng không thực

04:45.180 --> 04:46.930
sự xuất ra các thông tin khác mà chúng

04:46.930 --> 04:48.900
tôi có, mô tả và số lượng người.

04:48.900 --> 04:50.750
Vì vậy, đó cũng không phải là tuyệt vời.

04:50.750 --> 04:54.980
Và, chúng tôi cũng có một chút trùng lặp mã khi chúng tôi

04:54.980 --> 04:57.620
thực sự xem danh sách dự án tại mệnh đề

04:57.620 --> 04:58.910
này tại đây và tại

04:58.910 --> 05:01.000
mệnh đề đầu vào của dự án.

05:01.000 --> 05:04.270
Trong cả hai, chúng tôi có phần tử mẫu, phần tử máy chủ và phần

05:04.270 --> 05:06.970
tử và chúng tôi có một phương thức đính kèm, v.v.

05:06.970 --> 05:09.180
Vì vậy, tôi muốn cải thiện mã ở đây

05:09.180 --> 05:11.800
và sử dụng lại một số mã bằng cách sử dụng

05:11.800 --> 05:14.480
thừa kế và sử dụng mệnh đề cơ sở, sau đó,

05:14.480 --> 05:16.850
tôi cũng muốn tạo một mệnh đề dành riêng

05:16.850 --> 05:18.580
cho mọi hạng mục dự án, sau

05:18.580 --> 05:20.340
đó chúng ta chỉ cần khởi tạo

05:20.340 --> 05:22.200
mệnh đề hạng mục dự án đó bên

05:22.200 --> 05:23.725
trong danh sách dự án thay

05:23.725 --> 05:27.050
vì nối thêm mục danh sách theo cách thủ công, như

05:27.050 --> 05:30.700
thế này và sau đó bên trong mệnh đề mục dự án 'được tạo'

05:30.700 --> 05:34.540
đó, phần nối thêm đó sẽ xảy ra và sau đó tôi cũng muốn xuất

05:34.540 --> 05:38.440
thêm thông tin về mục dự án, bao gồm mô tả và số lượng người

05:38.440 --> 05:40.540
giao.

05:40.540 --> 05:42.080
Vì vậy, còn một số việc phải

05:42.080 --> 05:44.520
làm và, trước khi chúng ta làm việc với

05:44.520 --> 05:47.120
hạng mục dự án ở dạng mà tôi muốn có nó, hãy

05:47.120 --> 05:48.660
thực sự đảm bảo rằng chúng

05:48.660 --> 05:53.660
ta, trước hết, thêm một số kế thừa để tạo danh sách dự án và đầu vào dự án, hoặc

05:53.800 --> 05:57.693
một số phần của nó, có thể tái sử dụng nhiều hơn.
