WEBVTT

00:02.210 --> 00:04.920
الراوي: الآن ، نوع خاص من نوع الحارس ، يمكنك

00:04.920 --> 00:05.753
أن تقول ، أو أي

00:05.753 --> 00:07.940
شيء يساعدك مع حراس الكتابة ، هو

00:07.940 --> 00:10.000
النقابة المميّزة.

00:10.000 --> 00:11.300
الآن ما هذا.

00:11.300 --> 00:13.310
إنه نمط ، يمكنك استخدامه

00:13.310 --> 00:15.030
عند العمل مع أنواع النقابات

00:15.030 --> 00:18.900
، مما يجعل تطبيق حراس الكتابة أسهل.

00:18.900 --> 00:22.000
يتوفر عند العمل مع أنواع الكائنات.

00:22.000 --> 00:24.580
دعني أريك كيف تعمل.

00:24.580 --> 00:26.850
لنفترض أن لدينا واجهتين ، ويمكن أن

00:26.850 --> 00:28.450
تكون هذه فئات أيضًا ، ولكن

00:28.450 --> 00:29.950
هنا سأذهب للواجهات لإظهار

00:29.950 --> 00:32.193
أنها تعمل مع تلك أيضًا.

00:33.170 --> 00:34.803
وهناك لدي طائرتي ، التي

00:36.480 --> 00:38.830
لديها سرعة طيران ، والتي يجب أن تكون

00:38.830 --> 00:40.973
من نوع الرقم ، دعنا نقول.

00:42.660 --> 00:45.890
ولدي أيضًا حصاني ، الذي لديه سرعة

00:45.890 --> 00:50.310
أرضية أو سرعة ركض ، والتي يجب أن تكون من نوع

00:50.310 --> 00:51.913
الرقم.

00:53.130 --> 00:55.430
إذن لدينا هاتان الواجهتان هنا.

00:55.430 --> 00:58.800
الآن نقوم بإنشاء نوع اتحاد خاص بنا

00:58.800 --> 00:59.633
، حيوان ،

01:00.750 --> 01:03.370
وهو إما طائر أو حصان.

01:03.370 --> 01:05.743
ومثلما كان من قبل ، قد يكون لدينا وظيفة

01:06.740 --> 01:08.480
، تحريك حيوان يأخذ حيوانًا

01:09.800 --> 01:13.040
كمدخل ، وهو من نوع حيوان ، لذلك باستخدام نوع الاتحاد

01:13.040 --> 01:14.800
الخاص بنا.

01:14.800 --> 01:19.800
والآن هناك ، أريد أن أقول التحرك بسرعة ، والآن بالطبع

01:19.990 --> 01:21.050
، أحتاج إلى

01:21.050 --> 01:25.180
الوصول إلى سرعة الطيران أو سرعة الجري.

01:25.180 --> 01:27.730
الآن ، بالطبع ، كان بإمكاننا تسميتها بالسرعة.

01:27.730 --> 01:30.840
لكن هذا مجرد مثال مبسط لحالة استخدام حقيقية

01:30.840 --> 01:33.900
قد تواجهها ، حيث يكون لديك بعض الواجهات

01:33.900 --> 01:37.390
أو الكائنات بشكل عام ، والتي هي نوعًا ما مترابطة

01:37.390 --> 01:40.500
ولكن لها خصائص أو طرق مختلفة.

01:40.500 --> 01:42.050
لذا فهنا ، خاصية السرعة

01:42.050 --> 01:43.900
، وهي مختلفة بالفعل.

01:43.900 --> 01:46.780
لذلك لا يمكنها الوصول إلى سرعة الطيران هنا بسبب بالطبع

01:46.780 --> 01:49.240
، ليست كل الحيوانات لديها سرعة طيران.

01:49.240 --> 01:51.210
الآن يمكننا أن نفعل ما تعلمناه من قبل.

01:51.210 --> 01:56.063
يمكننا التحقق مما إذا كانت سرعة الطيران في الحيوانات هنا.

01:58.240 --> 02:01.063
وإذا كان الأمر كذلك ، فيمكننا تنفيذ هذا الكود.

02:01.960 --> 02:04.470
الآن هذا نهج يمكننا اتباعه ، ولكن كلما زاد عدد

02:04.470 --> 02:07.430
الحيوانات المحتملة التي نصل إليها ، زاد عدد الأشياء

02:07.430 --> 02:09.233
التي يتعين علينا التحقق منها.

02:10.880 --> 02:14.100
يمكننا أيضًا أن نخطئ في الكتابة هنا في هذه السلسلة.

02:14.100 --> 02:15.810
يمكننا أن ننسى الحرف E ، على

02:15.810 --> 02:18.460
سبيل المثال ، ونتساءل عن سبب عدم نجاح ذلك.

02:18.460 --> 02:20.410
الآن ، لا يمكننا استخدام مثيل هنا

02:20.410 --> 02:22.570
لأنني أقوم بالانفصال عن الواجهات.

02:22.570 --> 02:27.490
كما أوضحت ، لن يعمل مثيل الطيور على الحيوانات لأن البيانات

02:27.490 --> 02:29.680
عبارة عن واجهة لم يتم تجميعها

02:29.680 --> 02:31.840
في JavaScript.

02:31.840 --> 02:33.970
لذلك في وقت التشغيل ، لن يكون

02:33.970 --> 02:36.210
هذا متاحًا كدالة مُنشئ.

02:36.210 --> 02:37.690
لذلك ، هذا لا يعمل.

02:37.690 --> 02:40.380
الآن يمكننا بناء اتحاد تمييزي هنا

02:40.380 --> 02:42.460
من خلال إعطاء كل واجهة.

02:42.460 --> 02:45.380
لذلك كل كائن يجب أن يكون جزءًا من الاتحاد

02:45.380 --> 02:47.130
، وممتلكات إضافية.

02:47.130 --> 02:48.640
يمكنك استخدام أي اسم تريده.

02:48.640 --> 02:51.490
غالبًا ما تستخدم اللطف أو تكتب هنا.

02:51.490 --> 02:55.090
سأختار النوع ، وأسمي هذا الطائر.

02:55.090 --> 02:57.480
الآن مهم ، نحن نتداول واجهة هنا.

02:57.480 --> 03:02.480
لذا فهذه في الواقع ليست قيمة لخاصية النوع.

03:02.650 --> 03:05.410
هذا بدلاً من ذلك هو نوع حرفي كما تعلمت ، حيث

03:05.410 --> 03:09.110
يجب أن يحتوي النوع على سلسلة ، والتي يجب أن تكون طائر.

03:09.110 --> 03:10.880
لذلك هذا هو تعيين النوع

03:10.880 --> 03:15.000
، حيث نقوم بتضييق القيمة التي يمكن تخزينها في النوع

03:15.000 --> 03:17.590
إلى قيمة السلسلة بالضبط هذه.

03:17.590 --> 03:19.810
ثم افعل الشيء نفسه بالنسبة للخيول

03:19.810 --> 03:22.283
، فقط باستخدام الحصان كنوع حرفي.

03:23.400 --> 03:25.060
الآن هنا ، في وظيفتنا

03:25.060 --> 03:27.550
، يمكننا استخدام بيان

03:27.550 --> 03:29.840
التبديل وتشغيل نوع

03:29.840 --> 03:32.280
نقطة حيوان.

03:32.280 --> 03:34.080
لكل حيوان خاصية نوع لأننا

03:34.080 --> 03:36.330
أضفناها إلى جميع الواجهات التي

03:36.330 --> 03:38.350
يتكون منها حيواننا.

03:38.350 --> 03:40.730
وبعد ذلك ، يمكننا أن نحصل على بضع حالات

03:40.730 --> 03:42.330
حيث نحصل على الإكمال التلقائي

03:42.330 --> 03:44.990
لأن TypeScript و IDE الخاص بنا يفهم أن

03:44.990 --> 03:49.040
هذا النوع يمكن أن يكون طائرًا أو حصانًا فقط.

03:49.040 --> 03:51.050
وإذا كان طائرًا ، فيمكننا

03:51.050 --> 03:55.003
ضبط بعض السرعة المتغيرة الداخلية لنفترض

03:55.900 --> 03:58.860
أن سرعة تحليق نقطة للحيوان ثم

03:59.880 --> 04:02.250
تنكسر بعد ذلك.

04:02.250 --> 04:05.183
خلاف ذلك ، إذا كانت الحالة حصان ،

04:06.830 --> 04:11.753
فإننا نضبط سرعة مساوية لسرعة تشغيل نقطة الحيوان.

04:14.150 --> 04:17.490
وهناك بعد ذلك يمكننا التحكم في السجل

04:17.490 --> 04:20.843
، والتحرك بسرعة زائد السرعة.

04:22.490 --> 04:26.540
إذا اتصلت الآن ، انقل حيوانًا مع حيوان أقوم بإنشائه

04:26.540 --> 04:30.300
أثناء الطيران هنا ، حيث أقوم بتعيين النوع إلى طائر

04:30.300 --> 04:32.810
وأسمح فقط باستخدام طائر أو حصان

04:32.810 --> 04:34.930
، ثم يتعين علي ضبط سرعة الطيران

04:36.140 --> 04:39.210
الخاصة بي وبالمناسبة ، يتعرف TypeScript

04:39.210 --> 04:42.050
حتى أن مفهوم سرعة الجري هنا لمحاولة

04:42.050 --> 04:44.220
القيام بذلك وضبط هذا على 10

04:44.220 --> 04:48.980
، فإنه يشكو من أن هذا غير متوفر لنوع الطيور.

04:48.980 --> 04:51.360
إذا قمت بضبطه على سرعة الطيران

04:51.360 --> 04:55.120
، ومع ذلك فهو يعمل ، إذا حفظنا ذلك ، فإنه ينتج هذا بشكل

04:55.120 --> 04:57.700
صحيح ، كما أنه يجمع دون أخطاء.

04:57.700 --> 04:59.530
الآن هذا اتحاد مميز

04:59.530 --> 05:04.060
لأن لدينا خاصية مشتركة واحدة في كل كائن يشكل اتحادنا

05:04.060 --> 05:08.040
، والتي تصف هذا الكائن ، حتى نتمكن من استخدام

05:08.040 --> 05:11.490
هذه الخاصية التي تصف هذا الكائن في فحصنا

05:11.490 --> 05:16.490
للحصول على أمان بنسبة 100٪ وفهم الخصائص متاحة لمثل

05:16.770 --> 05:21.930
هذا الكائن والخصائص التي ليست كذلك.

05:21.930 --> 05:24.500
لذلك هذا نمط جديد ومفيد يمكنك استخدامه

05:24.500 --> 05:28.060
عند العمل مع الكائنات والأنواع الموحدة.

05:28.060 --> 05:30.340
وهي تعمل أيضًا مع الواجهات لأن

05:30.340 --> 05:33.630
هذه الواجهة تفرض على كل كائن تقوم ببنائه بناءً

05:33.630 --> 05:37.050
على هذه الواجهة أن يكون لديه هذا النوع.

05:37.050 --> 05:39.400
لذا بدلاً من التحقق من وجود خاصية

05:39.400 --> 05:41.200
معينة ، أو بدلاً من استخدام

05:41.200 --> 05:43.660
مثيل لـ ، نستخدم خاصية نعرف أنها

05:43.660 --> 05:46.310
موجودة للتحقق من نوع الكائنات التي

05:46.310 --> 05:49.020
نتعامل معها.

05:49.020 --> 05:51.930
نحن أيضًا نتخلص من خطر الكتابة الخاطئة لأن

05:51.930 --> 05:54.730
TypeScript تدرك أن الحالات الوحيدة التي

05:54.730 --> 05:58.480
يمكننا الحصول عليها هنا ، لنوع الحيوان ، هي الطيور والحصان

05:58.480 --> 06:00.810
، وبالتالي فهي تعطينا فن الإكمال ،

06:00.810 --> 06:02.770
وإذا أدخلت خطأ مطبعيًا ، فسنحصل

06:02.770 --> 06:04.690
على الفور على خطأ .

06:04.690 --> 06:06.780
لذلك يعد هذا نمطًا مفيدًا جدًا عند

06:06.780 --> 06:09.333
التعامل مع الكائنات والأنواع الموحدة.
