WEBVTT

00:02.270 --> 00:04.610
المعلم: هذا هو الكود الذي انتهينا إليه

00:04.610 --> 00:08.580
في نهاية القسم الأساسي الأخير ، مشروع التدريب لدينا ، الكثير من

00:08.580 --> 00:11.050
التعليمات البرمجية كلها في ملف واحد ، ويمكن

00:11.050 --> 00:14.050
القول إن هذا ليس مشروعًا معقدًا للغاية.

00:14.050 --> 00:17.420
يمكنك بالتأكيد كتابة مشاريع وتطبيقات أكثر تفصيلاً

00:17.420 --> 00:20.380
، وسوف ينتهي بك الأمر مع المزيد من التعليمات البرمجية

00:20.380 --> 00:23.640
، لذا فإن وضع كل ذلك في ملف واحد ربما لا يكون ما تريد القيام

00:23.640 --> 00:25.000
به.

00:25.000 --> 00:26.390
لذا ما تريد فعله بدلاً

00:26.390 --> 00:28.740
من ذلك هو أنك تريد كتابة رمز معياري

00:28.740 --> 00:31.120
، مما يعني ببساطة أنك تريد تقسيم الكود

00:31.120 --> 00:34.010
الخاص بك عبر ملفات متعددة بحيث يظل كل ملف بمفرده

00:34.010 --> 00:37.157
قابلاً للإدارة والصيانة ، وبعد ذلك يمكنك ببساطة

00:37.157 --> 00:39.640
الاستيراد والتصدير من وإلى هذه الملفات

00:39.640 --> 00:42.100
وإنشاء تأكد من أن كل هذه الملفات متصلة

00:42.100 --> 00:44.740
، لكنها متصلة بواسطة Typescript أو المستعرض

00:44.740 --> 00:54.500
أو بواسطة أداة إنشاء تابعة لجهة خارجية وليس بواسطتك عن طريق دمجها جميعًا في ملف واحد أثناء التطوير.

00:54.500 --> 00:55.940
الآن ، في هذه الوحدة ، سوف

00:55.940 --> 00:59.910
نلقي نظرة على خيارين رئيسيين يساعداننا في تنظيم الكود الخاص بنا في

00:59.910 --> 01:02.160
ملفات متعددة ، ولن نتعلم عنها فقط من الناحية

01:02.160 --> 01:04.930
النظرية ولكن أيضًا من الناحية العملية.

01:04.930 --> 01:07.320
سنقوم بالطبع بتطبيق هذه الأساليب المختلفة

01:07.320 --> 01:09.453
ونرى كيف يمكننا تقسيم الكود الخاص بنا.
