WEBVTT

00:02.140 --> 00:03.970
-: إذن في تطبيقنا. ts ، نحتاج

00:03.970 --> 00:08.100
إلى التحقق من إرسال هذا النموذج هنا.

00:08.100 --> 00:09.070
لهذا هنا ، سوف أقوم

00:09.070 --> 00:10.800
بإنشاء نموذج ثابت والوصول

00:10.800 --> 00:12.170
إلى النموذج باستخدام

00:12.170 --> 00:14.310
محدد استعلام المستند ، والاستعلام

00:14.310 --> 00:16.080
عن علامة النموذج.

00:16.080 --> 00:17.840
ونظرًا لأن لدينا علامة نموذج واحدة

00:17.840 --> 00:18.820
فقط في المستند بأكمله

00:18.820 --> 00:20.170
، فسنجلب ذلك بالطبع.

00:21.150 --> 00:23.500
إذن هذا يتيح لنا الوصول إلى النموذج.

00:23.500 --> 00:26.163
في هذا النموذج سأضيف مستمعًا للحدث.

00:29.630 --> 00:31.873
وسأستمع لحدث الإرسال.

00:33.290 --> 00:35.330
الآن هذا النموذج بالطبع يمكن أن يكون فارغًا

00:35.330 --> 00:36.163
، كما هو الحال دائمًا

00:36.163 --> 00:37.430
، لكننا نعلم أنه لن يكون كذلك

00:37.430 --> 00:39.480
، لذلك يمكننا إضافة علامة التعجب القديمة الجيدة

00:39.480 --> 00:42.850
هذه هناك بعد إخبار TypeScript أن هذا لن يكون فارغًا.

00:42.850 --> 00:45.080
ثم هنا لدينا مستمع الحدث

00:45.080 --> 00:46.490
، وسوف يحدد الوظيفة

00:46.490 --> 00:49.160
التي يجب تشغيلها وهي وظيفة

00:49.160 --> 00:50.440
معالج عنوان

00:50.440 --> 00:51.710
البحث ، دعنا

00:51.710 --> 00:53.610
نقول.

00:53.610 --> 00:55.420
ويجب تشغيل هذه الوظيفة

00:55.420 --> 00:58.160
كلما تم تقديم هذا النموذج.

00:58.160 --> 01:00.880
الآن في هذه الوظيفة ، سنحصل على كائن الحدث

01:00.880 --> 01:04.900
وسأقوم أولاً وقبل كل شيء بمنع حدث الاستدعاء الافتراضي هنا.

01:04.900 --> 01:07.240
ودعنا نعطي TypeScript بعض التلميحات

01:07.240 --> 01:09.980
هنا ودعنا نبلغها أن هذا حدث حتى تعرف أن

01:09.980 --> 01:12.370
أمر المنع الافتراضي هذا سيكون موجودًا

01:12.370 --> 01:14.033
هنا.

01:14.870 --> 01:17.440
من خلال منع إرسال النموذج ، نضمن

01:17.440 --> 01:19.900
عدم إرسال أي طلب ، لكنني الآن أريد

01:19.900 --> 01:21.980
الوصول إلى العنوان الذي أدخله

01:21.980 --> 01:23.630
المستخدم.

01:23.630 --> 01:24.900
الآن لا ينبغي أن يكون ذلك

01:24.900 --> 01:27.820
صعبًا للغاية ، فلدينا مدخل واحد هنا ولدينا فكرة عن العنوان

01:27.820 --> 01:30.360
، لذا في النهاية نريد الحصول على القيمة التي تم إدخالها

01:30.360 --> 01:31.850
في الإدخال.

01:31.850 --> 01:33.780
ويمكننا القيام بذلك هنا عن طريق

01:33.780 --> 01:36.010
تحديد إدخال عنوان ثابت آخر ، والذي

01:36.010 --> 01:37.610
نحصل عليه من خلال محدد استعلام

01:37.610 --> 01:40.500
المستند ، أو الحصول على عنصر من خلال المعرف

01:40.500 --> 01:43.210
، ثم كان المعرف هو العنوان الذي كان الفكرة

01:44.050 --> 01:47.860
الموقعة على هذا العنصر ، وكما كنا نعرف من قبل لن يكون هذا

01:47.860 --> 01:50.630
فارغًا أبدًا ، لذا يمكننا إضافة علامة التعجب

01:50.630 --> 01:52.823
هذه هنا.

01:53.770 --> 01:58.730
وبهذا حصلنا على العنوان الذي تم إدخاله هنا عن طريق

01:58.730 --> 02:00.370
الوصول إلى قيمة

02:00.370 --> 02:02.490
نقطة إدخال العنوان الآن

02:02.490 --> 02:03.700
لماذا لا تحب

02:05.960 --> 02:09.350
TypeScript القيمة هنا؟

02:09.350 --> 02:12.020
لأنه لا يعرف أن ما نجلبه هنا

02:12.020 --> 02:14.500
هو عنصر إدخال html.

02:14.500 --> 02:16.000
لذلك دعنا نقول TypeScript.

02:16.000 --> 02:18.930
دعنا نحول هذا إلى عنصر إدخال html

02:18.930 --> 02:20.820
مع typecasting هنا.

02:20.820 --> 02:23.650
الآن لا يشتكي TypeScript من هذه القيمة التي يمكن الوصول

02:23.650 --> 02:25.040
إليها هنا بعد الآن ، ويعطينا

02:25.040 --> 02:26.923
العنوان الذي تم إدخاله.

02:27.770 --> 02:29.710
والآن نحتاج إلى إرسال هذا إلى

02:30.570 --> 02:31.740
واجهة برمجة تطبيقات

02:32.970 --> 02:34.180
Google.

02:34.180 --> 02:37.850
لنفعل ذلك بمساعدة حزمة طرف ثالث أخرى في المحاضرة

02:37.850 --> 02:38.943
التالية.
