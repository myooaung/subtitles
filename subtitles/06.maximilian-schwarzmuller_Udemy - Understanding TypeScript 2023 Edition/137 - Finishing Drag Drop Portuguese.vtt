WEBVTT

00:02.300 --> 00:03.133
Instrutor: Então, é claro,

00:03.133 --> 00:05.250
nosso objetivo não é apenas registrar essa identificação.

00:05.250 --> 00:09.340
Em vez disso, quero extrair a identificação do projeto aqui no registro,

00:09.340 --> 00:11.110
no manipulador de gotas.

00:11.110 --> 00:15.410
E com isso, o objetivo é realmente mudar o projeto agora, ou mudar

00:15.410 --> 00:18.910
o status do projeto, para ser mais preciso.

00:18.910 --> 00:21.400
Agora, como podemos fazer isso?

00:21.400 --> 00:26.063
Bem, em nosso estado, eu diria, em nosso estado de projeto, onde atualmente

00:26.950 --> 00:30.000
temos um método addProject, também precisamos

00:30.000 --> 00:33.160
de um método moveProject.

00:33.160 --> 00:35.060
E o objetivo deste método será

00:35.060 --> 00:38.550
basicamente mudar o status de um projeto.

00:38.550 --> 00:40.180
É claro que você também poderia nomeá-lo,

00:40.180 --> 00:42.970
SwitchProjectStatus, ou o que você quiser, mas já que estamos

00:42.970 --> 00:44.390
fazendo o drag-and-drop, estou

00:44.390 --> 00:46.440
chamando-o de MoveProject.

00:46.440 --> 00:49.470
Portanto, no MoveProject o objetivo é mover um projeto

00:49.470 --> 00:53.860
da lista em que se encontra atualmente, para uma nova lista.

00:53.860 --> 00:55.460
Agora, isto nem sempre significa

00:55.460 --> 00:58.030
que temos apenas que reverter o status do projeto

00:58.030 --> 01:00.480
de ativo para acabado e o contrário.

01:00.480 --> 01:02.870
Afinal, um usuário pode estar fazendo isso,

01:02.870 --> 01:05.060
arrastando e soltando na mesma caixa.

01:05.060 --> 01:07.120
Então, se sempre acionamos um

01:07.120 --> 01:10.680
método que muda o status, teríamos um efeito inesperado

01:10.680 --> 01:12.690
onde cair na mesma caixa ainda

01:12.690 --> 01:15.754
muda o projeto para a outra caixa.

01:15.754 --> 01:18.972
Portanto, em vez disso, na MoveProject, temos realmente

01:18.972 --> 01:23.402
que saber qual projeto mover, e qual caixa a nova caixa é.

01:23.402 --> 01:24.235
Portanto, qual é o novo status.

01:25.940 --> 01:28.190
Portanto, espero obter aqui a identificação

01:28.190 --> 01:31.410
do projeto, que deve ser uma seqüência, e o novo status.

01:31.410 --> 01:34.130
E o novo status aqui, é claro, pode

01:34.130 --> 01:36.410
ser do tipo ProjectStatus.

01:38.580 --> 01:40.803
E então dentro da MoveProject, quero

01:41.692 --> 01:44.320
encontrar um projeto com essa identificação

01:44.320 --> 01:46.830
em minha série de projetos.

01:46.830 --> 01:49.090
Portanto, aqui, nesta série de projetos,

01:49.090 --> 01:51.680
e depois inverter seu status.

01:51.680 --> 01:54.580
Para que possamos chegar a este projeto, encontre

01:54.580 --> 01:57.450
um projeto lá dentro, e o método de busca é perfeito

01:57.450 --> 01:59.440
para isso.

01:59.440 --> 02:01.210
Ele funciona em cada elemento desta matriz,

02:01.210 --> 02:02.680
nos dá acesso a cada elemento, e então

02:02.680 --> 02:03.970
temos que retornar verdadeiro se

02:03.970 --> 02:05.770
for o elemento que estamos procurando.

02:05.770 --> 02:07.150
E quero voltar a ser verdadeiro

02:07.150 --> 02:09.860
se a identificação do elemento que estamos analisando

02:09.860 --> 02:12.830
atualmente estiver à altura do projetoIdemonstrar que

02:12.830 --> 02:15.420
estou argumentando aqui, então temos o elemento

02:15.420 --> 02:17.470
que deve mudar, e lá neste elemento, só

02:17.470 --> 02:21.070
temos que mudar o status para o novo status.

02:21.070 --> 02:22.653
Agora isto pode ser nulo, então

02:23.490 --> 02:26.490
aqui eu vou chamar isto de projeto, armazenado como agora

02:26.490 --> 02:28.080
constante chamado projeto,

02:28.080 --> 02:30.550
e verificar se o projeto existe.

02:30.550 --> 02:34.160
E se ela existir, então eu quero definir aqui

02:34.160 --> 02:39.160
o status igual ao novo status. Tão simples quanto isso.

02:39.250 --> 02:42.900
Isto já mudará o objeto na matriz e basicamente

02:42.900 --> 02:45.643
já terminamos com ele.

02:46.970 --> 02:50.010
É claro, porém, que ainda não terminamos completamente.

02:50.010 --> 02:52.250
Agora precisamos informar a todos,

02:52.250 --> 02:56.040
a todos os nossos ouvintes, que algo mudou em nosso projeto,

02:56.040 --> 02:57.870
e que eles devem se render.

02:57.870 --> 02:59.980
Portanto, temos que passar por todos

02:59.980 --> 03:01.910
os ouvintes novamente, e como repetiríamos

03:01.910 --> 03:04.080
o código aqui, vou terceirizar isto em

03:04.080 --> 03:07.920
um novo método privado, updateListeners poderia ser um nome viável,

03:07.920 --> 03:10.490
e ali terei isto para loop, onde passaremos por

03:10.490 --> 03:13.660
todos os ouvintes e depois faremos algo.

03:13.660 --> 03:15.890
E então chamarei esta atualização

03:15.890 --> 03:17.430
de Ouvintes tanto do addProject,

03:17.430 --> 03:20.890
como também do método moveProject.

03:20.890 --> 03:23.033
Aqui, somente se nós mudássemos alguma coisa.

03:24.350 --> 03:26.100
Portanto, agora todos os ouvintes serão acionados.

03:26.100 --> 03:28.980
E se você se lembra, um ouvinte em nosso aplicativo

03:28.980 --> 03:33.010
aqui, basicamente leva a lista a renderizar seus itens.

03:33.010 --> 03:35.310
Portanto, isso funcionará exatamente como deve funcionar,

03:35.310 --> 03:37.940
ou deve funcionar exatamente como deve funcionar.

03:37.940 --> 03:40.640
Portanto, agora temos o método moveProject, lá em

03:40.640 --> 03:43.730
baixo no manipulador de gotas, agora podemos usar isto.

03:43.730 --> 03:46.390
Lá agora podemos usar o projectState,

03:46.390 --> 03:49.670
chamar moveProject, e passar no ID do projeto,

03:49.670 --> 03:52.296
e agora o novo status do projeto.

03:52.296 --> 03:54.190
E o novo status do projeto depende

03:54.190 --> 03:57.880
da lista sobre a qual deixamos isso cair.

03:57.880 --> 03:59.630
Por isso, quero ligar automaticamente

04:00.760 --> 04:01.790
meu manipulador de

04:01.790 --> 04:04.050
gotas, para que esta palavra-chave no manipulador

04:04.050 --> 04:06.020
de gotas se refira à classe ao redor,

04:06.020 --> 04:08.500
e esta classe ao redor é uma lista de projetos

04:08.500 --> 04:10.320
que, se você se lembra, terá um tipo

04:10.320 --> 04:13.020
de propriedade aqui, estamos armazenando aqui,

04:13.020 --> 04:15.820
estamos tendo um tipo, propriedade, e que está ativo

04:15.820 --> 04:18.120
ou acabado.

04:18.120 --> 04:21.000
Portanto, agora só temos que traduzir ativos ou acabados para

04:21.000 --> 04:22.640
nossos valores enuméricos.

04:22.640 --> 04:24.850
Portanto, aqui, eu passo nisto. e eu verifico se

04:24.850 --> 04:27.230
é igual a ativo, em cujo caso, passamos

04:27.230 --> 04:31.580
no ProjectStatus. Ativo, como o novo status

04:31.580 --> 04:33.750
do projeto, porque esse é

04:33.750 --> 04:36.190
o status da lista para a qual

04:36.190 --> 04:38.160
mudamos o projeto.

04:38.160 --> 04:41.733
Caso contrário, nós passamos no ProjectStatus. Terminado, e deixe-me reformatar

04:42.660 --> 04:45.423
isso para facilitar a leitura.

04:46.730 --> 04:48.110
Com isso, vamos tentar.

04:48.110 --> 04:52.440
Vamos salvar tudo, e adicionar um novo projeto aqui, e agora

04:52.440 --> 04:56.620
arrastá-lo para projetos terminados e ele muda, e o mesmo e

04:56.620 --> 04:58.270
se eu o mover de volta.

04:58.270 --> 05:02.320
Se eu deixar ir aqui em projetos ativos, nada muda.

05:02.320 --> 05:04.400
Agora você verá, se você inspecionar

05:04.400 --> 05:08.100
o DOM, que tecnicamente ele se reenvia, o que pode não ser o ideal,

05:08.100 --> 05:11.450
então poderíamos pensar em encontrar alguma solução

05:11.450 --> 05:15.290
que verificasse se o status realmente mudou, e se não mudou, não

05:15.290 --> 05:17.400
atualizamos, isso é algo que podemos

05:17.400 --> 05:18.890
fazer.

05:18.890 --> 05:22.620
Mas do ponto de vista da IU, ele se atualiza exatamente como deveria.

05:22.620 --> 05:24.570
Agora vamos também acrescentar

05:24.570 --> 05:27.120
um segundo projeto e ver se isso destrói

05:27.120 --> 05:29.260
algo, se tudo ainda funciona, e

05:29.260 --> 05:31.750
eu diria que isso parece decente, que

05:31.750 --> 05:33.720
me parece muito bom.

05:33.720 --> 05:37.120
Tudo parece funcionar exatamente do jeito que deveria.

05:37.120 --> 05:40.230
Portanto, arrastar e largar funciona muito bem aqui,

05:40.230 --> 05:42.600
mas há uma melhoria que mencionei no estado

05:42.600 --> 05:46.305
do projeto, no moveProject, quando chamei esta atualizaçãoOuvintes,

05:46.305 --> 05:49.470
podemos realmente verificar se realmente mudamos

05:49.470 --> 05:51.920
o estado.

05:51.920 --> 05:54.150
Portanto, aqui podemos verificar se

05:54.150 --> 05:57.940
o projeto, então se encontramos um, e se então o status do projeto

05:57.940 --> 06:00.270
é diferente do novo status, e somente

06:00.270 --> 06:03.830
então mudamos o status e atualizamos os ouvintes.

06:03.830 --> 06:06.060
Se o status for o mesmo, não fazemos

06:06.060 --> 06:09.310
isso e evitamos o ciclo desnecessário de reenvio.

06:09.310 --> 06:10.143
Então agora com

06:10.143 --> 06:12.900
isso, se nós o salvamos e rapidamente adicionamos

06:12.900 --> 06:14.790
um novo projeto, você verá se eu inspeciono

06:14.790 --> 06:18.190
os elementos aqui e você observa o L-I e verifica se este flashes,

06:18.190 --> 06:21.800
o que significa que ele iria se render, ele não pisca aqui, apenas

06:21.800 --> 06:24.490
pisca, a classe que acabamos de adicionar, mas

06:24.490 --> 06:27.970
o L-I não pisca se eu cair na mesma caixa, ele só pisca se eu o mover

06:27.970 --> 06:30.990
para uma caixa diferente.

06:30.990 --> 06:34.460
E deve piscar então porque então nós realmente o movemos.

06:34.460 --> 06:36.180
Portanto, agora otimizamos um pouco

06:36.180 --> 06:39.050
isso, e agora temos aqui o trabalho de arrastar e soltar,

06:39.050 --> 06:42.223
tudo construído e alimentado com e por TypeScript.
