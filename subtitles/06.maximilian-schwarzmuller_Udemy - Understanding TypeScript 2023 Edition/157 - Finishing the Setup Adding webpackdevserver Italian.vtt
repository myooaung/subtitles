WEBVTT

00:02.160 --> 00:05.070
-: Al momento non sto usando il server webpack-dev.

00:05.070 --> 00:07.680
Ora, però, l'utilizzo è molto semplice.

00:07.680 --> 00:10.030
Dobbiamo solo fare il pacchetto. json e ora al

00:10.030 --> 00:12.430
posto di "lite-server"

00:12.430 --> 00:17.380
usiamo "webpack-dev-server", in questo modo.

00:17.380 --> 00:20.020
E ora avviamo di nuovo npm start.

00:20.020 --> 00:21.560
Ora si vedrà che viene avviato

00:21.560 --> 00:23.610
un server in esecuzione sull'host

00:23.610 --> 00:25.780
locale 8080 e viene avviato il flusso

00:25.780 --> 00:28.330
di lavoro di creazione di webpack.

00:28.330 --> 00:30.060
Quindi ora se si visita l'host locale

00:30.060 --> 00:32.020
8080 si vede il nostro progetto.

00:32.020 --> 00:33.860
La cosa interessante è che se cambiamo

00:33.860 --> 00:35.510
qualcosa nel codice, per esempio,

00:35.510 --> 00:38.520
se modifichiamo il log della console ERA qui, e viene

00:38.520 --> 00:41.200
salvato e poi guardiamo il fondo qui, vediamo che

00:41.200 --> 00:43.160
si ricompila.

00:43.160 --> 00:46.450
Tuttavia, se si ricarica non si vede il log qui E anche nella

00:46.450 --> 00:47.860
scheda sources, nella scheda

00:47.860 --> 00:49.130
webpack source, se si

00:49.130 --> 00:51.920
va su app. ts, non si vede il log qui.

00:51.920 --> 00:54.820
Quindi in realtà non ha caricato il codice corretto.

00:54.820 --> 00:58.790
La situazione diventa più chiara se elimino questo bundle. js qui.

00:58.790 --> 01:01.513
Se ora riavvio il processo di avvio di npm, si vedrà

01:02.630 --> 01:04.750
che funziona ancora e, a proposito, non

01:04.750 --> 01:08.090
ci si deve meravigliare che la cartella dist rimanga vuota

01:08.090 --> 01:10.240
ora, nella modalità server di webpack-dev

01:10.240 --> 01:13.020
il bundle viene generato solo in memoria, quindi

01:13.020 --> 01:15.840
è lì e viene caricato dal server dev, ma non viene effettivamente

01:15.840 --> 01:18.490
scritto nella dist.

01:18.490 --> 01:20.270
Ma vedrete che se ricaricate,

01:20.270 --> 01:22.180
anche questa pagina si blocca.

01:22.180 --> 01:24.050
Ho detto che il file sarebbe

01:24.050 --> 01:27.080
stato lì, ma non sembra che ci sia, giusto?

01:27.080 --> 01:29.120
Ora manca nella dist, come ho detto, e ovviamente

01:29.120 --> 01:35.130
stiamo importando da dist/bundle. js e indice.

01:35.130 --> 01:35.130
html,

01:35.130 --> 01:36.810
ma in effetti potete credermi che sia generato in memoria.

01:36.810 --> 01:38.450
Il problema è che al momento

01:38.450 --> 01:41.640
le cose non sono cablate correttamente.

01:41.640 --> 01:45.330
Per modificarlo dobbiamo andare in webpack. config. js e lì, nell'output,

01:45.330 --> 01:50.330
aggiungere una chiave publicPath e impostarla

01:50.350 --> 01:53.647
su "dist. Se ora si salva il tutto e si riavvia, si

01:56.250 --> 01:59.120
vede che viene ricaricato e si vede

01:59.120 --> 02:00.670
"Ciao" qui.

02:00.670 --> 02:02.400
Nella scheda Sorgenti è

02:02.400 --> 02:05.320
ora visibile anche l'output corretto.

02:05.320 --> 02:06.580
Se si va nella cartella dei punti,

02:06.580 --> 02:07.860
applicazione sorgente. ts si vede la dichiarazione di log della console.

02:07.860 --> 02:11.270
E se ora vado all'app. ts e cancellarlo, si ricostruisce e ora la dichiarazione

02:11.270 --> 02:13.893
di log della console è sparita.

02:15.220 --> 02:18.460
Questa è solo una configurazione aggiuntiva, necessaria

02:18.460 --> 02:20.410
affinché il server webpack-dev

02:20.410 --> 02:22.970
capisca davvero dove viene scritto l'output

02:22.970 --> 02:26.520
e dove si trova rispetto all'indice. file html.

02:26.520 --> 02:29.910
Perché per impostazione predefinita

02:29.910 --> 02:32.180
il server webpack-dev serve un indice. file html, si trova nella stessa cartella in cui si esegue

02:32.180 --> 02:34.030
questo script qui.

02:34.030 --> 02:37.550
Il che è corretto, ma poi non effettua correttamente la

02:37.550 --> 02:40.520
connessione alla cartella dist, motivo per cui

02:40.520 --> 02:42.030
dobbiamo informare il server

02:42.030 --> 02:44.970
webpack-dev con publicPath dove trovare i nostri

02:44.970 --> 02:48.040
assest, quindi il nostro bundle. js in questo caso.

02:48.040 --> 02:50.960
Ora, se usciamo dal server di sviluppo,

02:50.960 --> 02:52.370
c'è un'altra impostazione che voglio

02:52.370 --> 02:53.790
applicare in modalità di sviluppo.

02:53.790 --> 02:56.080
E lo farò proprio nella parte superiore dell'oggetto esportato.

02:56.080 --> 02:59.180
Imposterò la modalità su "sviluppo". In questo modo, webpack si accorgerà che stiamo costruendo

02:59.180 --> 03:01.800
per lo sviluppo e farà meno ottimizzazioni

03:01.800 --> 03:03.550
per migliorare l'esperienza

03:03.550 --> 03:05.590
di sviluppo, rendere il debug ancora

03:05.590 --> 03:09.450
più semplice e dare messaggi di errore più significativi, ad

03:09.450 --> 03:11.420
esempio.

03:11.420 --> 03:12.950
Quindi nello sviluppo

03:12.950 --> 03:16.420
vogliamo aggiungere questa chiave.

03:16.420 --> 03:17.840
Con questo e il server webpack-dev configurato,

03:17.840 --> 03:20.110
otteniamo ora il flusso di lavoro di sviluppo finito.

03:20.110 --> 03:22.880
Ora, per la produzione, dovremo modificare un

03:22.880 --> 03:25.570
po' questo flusso di lavoro perché vogliamo

03:25.570 --> 03:27.100
un risultato diverso.
