WEBVTT

00:02.140 --> 00:03.970
-：ですから､ 私たちのアプリでは｡  tsファイルでは､

00:03.970 --> 00:08.100
このフォームの送信をここでチェックする必要があります｡

00:08.100 --> 00:09.070
ここでは､ フォーム定数を作成し､

00:09.070 --> 00:12.170
ドキュメントクエリセレクタでフォームにアクセスし､

00:12.170 --> 00:16.080
フォームタグを問い合わせることにします｡

00:16.080 --> 00:17.840
そして､ 文書全体ではフォームタグは1つしかないので､

00:17.840 --> 00:20.170
もちろんそれを取得します｡

00:21.150 --> 00:23.500
これでフォームにアクセスできるようになったわけです｡ 

00:23.500 --> 00:26.163
そのフォームに､ イベントリスナーを追加することにします｡ 

00:29.630 --> 00:31.873
そして､ サブミットイベントを聞く｡ 

00:33.290 --> 00:36.163
もちろん､ このフォームもいつものようにnullになる可能性があるが､

00:36.163 --> 00:37.430
そうならないことは分かっているので､

00:37.430 --> 00:42.850
この後に感嘆符を追加して､ TypeScriptにnullにならないことを伝えることができる｡

00:42.850 --> 00:46.490
そして､ イベントリスナーがあり､

00:46.490 --> 00:53.610
トリガーされるべき関数が定義されています｡

00:53.610 --> 00:58.160
そして､ この関数は､ このフォームが送信されるたびに起動される必要があります｡

00:58.160 --> 01:00.880
さて､ この関数ではイベントオブジェクトを取得し､

01:00.880 --> 01:04.900
まず最初にここで event prevent default を呼び出します｡

01:04.900 --> 01:07.240
さらに､ TypeScriptにヒントを与えて､

01:07.240 --> 01:14.033
これがイベントであることを知らせ､ ここにあるデフォルトのコマンドを防ぐことができるようにしよう｡

01:14.870 --> 01:17.440
これでフォームの送信を防ぎ､ リクエストが送信されないようにしましたが､

01:17.440 --> 01:23.630
今度はユーザーが入力したアドレスにアクセスできるようにしたいのです｡

01:23.630 --> 01:24.900
さて､ これはそれほど難しいことではありません｡

01:24.900 --> 01:27.820
ここには1つの入力があり､ それはアドレスのアイデアを持っているので､

01:27.820 --> 01:31.850
最終的には入力に入力された値を取得したいのです｡

01:31.850 --> 01:37.610
これは､ ドキュメントクエリセレクタで取得するか､

01:37.610 --> 01:40.500
実際にIDで要素を取得し､

01:40.500 --> 01:52.823
そのIDがこの要素に署名されたアイデアであるアドレスであることを示します｡

01:53.770 --> 02:00.370
そして､ address input dot valueにアクセスすることで､

02:00.370 --> 02:09.350
入力されたアドレスがここに表示されます｡

02:09.350 --> 02:14.500
なぜなら､ ここで取得したものがhtmlのinput要素であることを知らないからです｡

02:14.500 --> 02:16.000
では､ TypeScriptに伝えてみましょう｡ 

02:16.000 --> 02:20.820
ここでタイプキャストを用いて､ htmlのinput要素に変換してみましょう｡

02:20.820 --> 02:23.650
これでTypeScriptはもうここでの値アクセスに文句を言わずに､

02:23.650 --> 02:26.923
入力されたアドレスを教えてくれるようになった｡

02:27.770 --> 02:34.180
そして､ 今度はこれをGoogleのAPIに送信する必要があります｡

02:34.180 --> 02:38.943
次回の講義では､ 他のサードパーティパッケージの助けを借りて､ それをやってみましょう｡
