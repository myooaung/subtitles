WEBVTT

00:02.160 --> 00:05.070
-: ในขณะนี้ ฉันไม่ได้ใช้เซิร์ฟเวอร์ webpack-dev

00:05.070 --> 00:07.680
ตอนนี้การใช้งานมันตรงไปตรงมามาก

00:07.680 --> 00:10.030
เราเพียงแค่ต้องแพคเกจ json และตอนนี้แทนที่จะเป็น

00:10.030 --> 00:12.430
"lite-server" มาใช้ "webpack-dev-server"

00:12.430 --> 00:17.380
แบบนี้

00:17.380 --> 00:20.020
และตอนนี้เรามาเริ่ม npm start อีกครั้ง

00:20.020 --> 00:23.610
ตอนนี้สิ่งที่คุณเห็นคือตอนนี้เซิร์ฟเวอร์ทำงานบนโลคัลโฮสต์

00:23.610 --> 00:25.780
8080 และทำให้เวิร์กโฟลว์การสร้าง

00:25.780 --> 00:28.330
webpack เพิ่มขึ้น

00:28.330 --> 00:30.060
ตอนนี้ถ้าคุณไปที่โฮสต์ท้องถิ่น

00:30.060 --> 00:32.020
8080 เราจะเห็นโครงการของเราที่นั่น

00:32.020 --> 00:35.510
สิ่งที่น่าสนใจตอนนี้คือถ้าเราเปลี่ยนบางอย่างในโค้ด

00:35.510 --> 00:38.520
เช่น ถ้าคุณปรับบันทึกคอนโซล ERA ที่นี่ และมันถูกบันทึก

00:38.520 --> 00:43.160
แล้วคุณดูด้านล่างที่นี่ คุณจะเห็นมันคอมไพล์ใหม่

00:43.160 --> 00:46.450
อย่างไรก็ตาม หากคุณโหลดซ้ำ คุณจะไม่เห็นบันทึกที่นี่ และในแท็บแหล่งที่มา

00:46.450 --> 00:47.860
ในแท็บแหล่งที่มาของ webpack

00:47.860 --> 00:51.920
หากคุณไปที่แอป

00:51.920 --> 00:51.920
ts คุณไม่เห็นบันทึกที่นี่

00:51.920 --> 00:54.820
ดังนั้นจึงไม่ได้โหลดรหัสที่ถูกต้อง

00:54.820 --> 00:58.790
สิ่งนี้จะชัดเจนยิ่งขึ้นหากฉันลบบันเดิลนี้ js ที่นี่

00:58.790 --> 01:01.513
ถ้าตอนนี้ฉันรีสตาร์ทกระบวนการเริ่มต้น npm นี้

01:02.630 --> 01:04.750
คุณจะเห็นว่ามันยังคงใช้งานได้ และยังไงก็ตาม

01:04.750 --> 01:08.090
อย่าแปลกใจว่าโฟลเดอร์ dist ยังคงว่างเปล่าอยู่ในขณะนี้

01:08.090 --> 01:13.020
ในโหมดเซิร์ฟเวอร์ webpack-dev บันเดิลจะถูกสร้างขึ้นในหน่วยความจำเท่านั้น ดังนั้นมันจึง

01:13.020 --> 01:15.840
อยู่ที่นั่นและโหลดโดยเซิร์ฟเวอร์ dev แต่ไม่ได้เขียนลงใน

01:15.840 --> 01:18.490
dist

01:18.490 --> 01:20.270
แต่คุณจะเห็นว่าหากคุณโหลดซ้ำ

01:20.270 --> 01:22.180
หน้านี้ก็หยุดทำงานเช่นกัน

01:22.180 --> 01:24.050
ตอนนี้ฉันบอกว่าไฟล์จะอยู่ที่นั่น

01:24.050 --> 01:27.080
แต่ดูเหมือนว่าจะไม่อยู่ที่นั่นใช่ไหม

01:27.080 --> 01:29.120
ตอนนี้มันขาดหายไปใน dist อย่างที่ฉันพูด และแน่นอนว่าเรากำลังนำเข้าจาก

01:29.120 --> 01:35.130
dist/bundle js และดัชนี

01:35.130 --> 01:35.130
html

01:35.130 --> 01:36.810
แต่คุณสามารถเชื่อฉันได้เลยว่ามันถูกสร้างขึ้นในหน่วยความจำ

01:36.810 --> 01:38.450
ปัญหาคือสิ่งต่าง ๆ

01:38.450 --> 01:41.640
ไม่ได้ต่อสายอย่างถูกต้องในขณะนี้

01:41.640 --> 01:45.330
ในการปรับแต่งเราต้องไปที่ webpack การกำหนดค่า js และในเอาต์พุต

01:45.330 --> 01:50.330
ให้เพิ่มคีย์ publicPath และตั้งค่านี้เป็น

01:50.350 --> 01:53.647
"dist.js" หากคุณบันทึกและรีสตาร์ท ตอนนี้คุณจะเห็นโหลดซ้ำและเห็น

01:56.250 --> 02:00.670
"สวัสดี" ที่นี่

02:00.670 --> 02:05.320
ในแท็บแหล่งที่มา ตอนนี้คุณจะเห็นผลลัพธ์ที่ถูกต้องที่นั่นด้วย

02:05.320 --> 02:06.580
หากคุณไปที่โฟลเดอร์

02:06.580 --> 02:07.860
dot แอพต้นทาง คุณเห็นคำสั่งบันทึกคอนโซล

02:07.860 --> 02:13.893
และถ้าตอนนี้ฉันไปที่แอพ ts และลบออก มันสร้างใหม่และตอนนี้คำสั่งบันทึกคอนโซลหายไปที่นั่น

02:15.220 --> 02:18.460
นี่เป็นเพียงการกำหนดค่าเพิ่มเติมที่จำเป็นสำหรับเซิร์ฟเวอร์

02:18.460 --> 02:26.520
webpack-dev เพื่อทำความเข้าใจว่าเอาต์พุตถูกเขียนไปที่ใดและตำแหน่งใดที่สัมพันธ์กับดัชนี

02:26.520 --> 02:26.520
ไฟล์ .html

02:26.520 --> 02:29.910
เนื่องจากโดยค่าเริ่มต้นแล้ว

02:29.910 --> 02:34.030
เซิร์ฟเวอร์ webpack-dev ให้บริการดัชนี html ซึ่งพบในโฟลเดอร์เดียวกับที่คุณเรียกใช้สคริปต์นี้ที่นี่

02:34.030 --> 02:37.550
ซึ่งถูกต้อง แต่ก็ไม่ได้ทำการเชื่อมต่อไปยังโฟลเดอร์

02:37.550 --> 02:42.030
dist อย่างถูกต้อง ซึ่งเป็นสาเหตุที่เราต้องแจ้งเซิร์ฟเวอร์ webpack-dev

02:42.030 --> 02:44.970
ด้วย publicPath ว่าจะค้นหา assests ได้จากที่ใด

02:44.970 --> 02:48.040
ดังนั้นบันเดิลของเรา js ในกรณีนี้

02:48.040 --> 02:50.960
ตอนนี้ถ้าเราออกจากเซิร์ฟเวอร์การพัฒนา

02:50.960 --> 02:53.790
มีการตั้งค่าอื่นที่ฉันอยากจะใช้ที่นี่ในโหมดการพัฒนา

02:53.790 --> 02:56.080
และฉันจะทำตรงนี้ที่ด้านบนของวัตถุที่ส่งออก

02:56.080 --> 03:05.590
ฉันจะตั้งโหมดเป็น "การพัฒนา ในท้ายที่สุดแล้ว สิ่งนี้จะบอก webpack ว่าที่นี่เรากำลังสร้างเพื่อการพัฒนาและจะทำการเพิ่มประสิทธิภาพน้อยลงเพื่อปรับปรุงประสบการณ์การพัฒนาของเรา

03:05.590 --> 03:11.420
ทำให้การดีบักง่ายยิ่งขึ้น และให้ข้อความแสดงข้อผิดพลาดที่มีความหมายมากขึ้นแก่เรา เป็นต้น

03:11.420 --> 03:16.420
ดังนั้นในการพัฒนา เราต้องการเพิ่มคีย์นี้ที่นี่อย่างแน่นอน

03:16.420 --> 03:17.840
และด้วยการกำหนดค่าเซิร์ฟเวอร์ webpack-dev

03:17.840 --> 03:20.110
ตอนนี้เราได้รับขั้นตอนการพัฒนาที่เสร็จสิ้นแล้ว

03:20.110 --> 03:22.880
ตอนนี้สำหรับการผลิต เราจะต้องปรับเวิร์กโฟลว์นี้เล็กน้อย

03:22.880 --> 03:27.100
เนื่องจากเราต้องการผลลัพธ์ที่แตกต่างออกไป
