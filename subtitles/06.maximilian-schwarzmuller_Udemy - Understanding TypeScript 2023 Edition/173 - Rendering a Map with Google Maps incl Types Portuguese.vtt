WEBVTT

00:02.120 --> 00:05.300
Homem: Então, como podemos emitir as coordenadas em um mapa agora?

00:05.300 --> 00:08.180
Para isso, mais uma vez, usaremos uma API do Google.

00:08.180 --> 00:10.690
Se você pesquisar pelo Google JavaScript Maps,

00:10.690 --> 00:13.810
ou Google JS Maps, você encontrará os documentos oficiais

00:13.810 --> 00:16.970
para o google JavaScript Google Maps API.

00:16.970 --> 00:19.660
E aqui você aprenderá como você pode usar o Google Maps

00:19.660 --> 00:22.020
em sua aplicação web para renderizar um mapa.

00:22.020 --> 00:24.720
E é realmente simples e direto.

00:24.720 --> 00:27.280
Antes de tudo, precisamos adicionar este

00:27.280 --> 00:31.720
script aqui, que adicionará este Google Maps SDK à nossa aplicação.

00:31.720 --> 00:34.220
Portanto, basta pegar esse script, e adicioná-lo

00:34.220 --> 00:38.210
ao seu arquivo html índice, acima de seu script.

00:38.210 --> 00:40.670
Agora importante, nós não instalamos este

00:40.670 --> 00:42.920
NPM, porque ele não é publicado para o NPM,

00:42.920 --> 00:45.900
por isso usamos este link CDN, que puxa o script, diretamente

00:45.900 --> 00:48.140
dos servidores do Google.

00:48.140 --> 00:51.560
E aqui precisamos configurar nosso API_KEY.

00:51.560 --> 00:54.390
Agora é claro que é o API_KEY que já temos aqui

00:54.390 --> 00:57.430
o arquivo do typescript, então podemos simplesmente

00:57.430 --> 01:02.170
copiar isso no índice html e substituir YOUR_API_KEY por ele.

01:02.170 --> 01:06.120
E também se livrar desta coisa do "&amp;callback=initMap" no final,

01:06.120 --> 01:07.150
isto desencadearia

01:07.150 --> 01:10.240
uma função assim que este mapa fosse carregado, ou

01:10.240 --> 01:13.430
assim que este SDK fosse carregado, e isso não é algo que

01:13.430 --> 01:14.843
eu quero aqui.

01:15.840 --> 01:19.760
Então, com isso, estamos carregando este SDK, e agora

01:19.760 --> 01:22.820
podemos usá-lo, e aqui é onde teremos um

01:22.820 --> 01:24.250
problema.

01:24.250 --> 01:26.210
Quero usá-lo para renderizar um mapa,

01:26.210 --> 01:28.710
e renderizar um mapa é na verdade direto.

01:28.710 --> 01:31.070
Nos documentos oficiais, vemos que, no final, temos de instanciar

01:31.070 --> 01:33.870
este google. mapas. Função construtor

01:33.870 --> 01:36.870
de mapas, passar um centro para ele, que é

01:36.870 --> 01:38.960
essencialmente...

01:38.960 --> 01:41.720
Este par de coordenadas que estamos obtendo de trás, e

01:41.720 --> 01:43.250
acrescente um nível de zoom.

01:43.250 --> 01:45.820
Portanto, podemos simplesmente copiar isto,

01:45.820 --> 01:48.710
e depois aqui, uma vez que tenhamos as coordenadas,

01:48.710 --> 01:50.010
executar este código e

01:50.010 --> 01:53.750
talvez armazenar o mapa aqui em uma constante chamada "Mapa". Mas é claro que temos aqui um erro.

01:53.750 --> 01:55.117
"Não consigo encontrar o

01:55.117 --> 01:57.600
nome google", e isso faz sentido, isto não estará

01:57.600 --> 02:01.320
disponível globalmente, mas o datilografia não sabe disso.

02:01.320 --> 02:03.380
Ele estará disponível globalmente, devido

02:03.380 --> 02:06.300
a este JavaScript SDK que estamos importando.

02:06.300 --> 02:08.343
Mas é claro que o datilografia não sabe disso.

02:09.390 --> 02:12.270
Você aprenderá o que pode fazer lá, você

02:12.270 --> 02:14.200
pode, naturalmente, usar

02:14.200 --> 02:19.200
"declarar var google", e definir isto para qualquer um.

02:19.990 --> 02:21.020
Com isso você está dizendo datilografia:

02:21.020 --> 02:22.887
"Tudo bem, isto existirá, não se preocupe. Podemos fazer isso, e o erro vai embora.

02:22.887 --> 02:26.480
Agora também podemos usar nossas coordenadas aqui,

02:26.480 --> 02:29.060
ao invés das codificadas, e se também

02:29.060 --> 02:31.370
quisermos renderizar um marcador,

02:31.370 --> 02:33.480
isso também é possível.

02:33.480 --> 02:36.430
Nos documentos oficiais, basta clicar em "Adicionar

02:36.430 --> 02:37.930
um mapa com um marcador",

02:37.930 --> 02:39.517
aprendemos que adicionar

02:39.517 --> 02:41.520
um marcador é simples, usamos apenas

02:41.520 --> 02:44.600
o mapa criado, e criamos um marcador com este comando,

02:44.600 --> 02:47.223
e apontamos para este mapa.

02:49.040 --> 02:50.950
Portanto, vamos apenas copiar este trecho

02:50.950 --> 02:52.980
de código aqui, e de volta em nosso código,

02:52.980 --> 02:56.130
depois de termos criado o mapa, eu crio meu marcador assim, e a

02:56.130 --> 02:59.160
posição aqui novamente são minhas coordenadas.

02:59.160 --> 03:01.160
Assim, isso agora renderá um

03:01.160 --> 03:04.173
mapa e colocará um marcador sobre ele.

03:05.040 --> 03:06.600
A única coisa restante é que,

03:06.600 --> 03:08.580
precisamos garantir que este mapa

03:08.580 --> 03:10.350
seja feito no lugar certo.

03:10.350 --> 03:12.350
Por padrão, procura por um elemento com um I. D. "mapa" e isso é o que

03:12.350 --> 03:14.010
temos aqui.

03:14.010 --> 03:16.670
Mas se você escolheu um I diferente. D. aqui, certifique-se

03:16.670 --> 03:18.720
de ajustar isto em seu código datilografado.

03:18.720 --> 03:20.470
Com isso,

03:20.470 --> 03:23.473
se salvarmos isto, ele se compila sem

03:24.610 --> 03:26.890
erros, e agora, se eu entrar

03:26.890 --> 03:30.640
um endereço aqui, ele deve render isto.

03:30.640 --> 03:33.450
Portanto, isto está funcionando, e podemos ajustar o nível

03:33.450 --> 03:35.320
de zoom aqui, para ser ampliado um pouco

03:35.320 --> 03:38.650
mais, por exemplo, mudando-o para 16, e agora, se tentarmos isto, podemos

03:38.650 --> 03:40.370
vê-lo um pouco mais claro.

03:40.370 --> 03:42.910
Mas está funcionando, e isso é o que podemos dizer.

03:42.910 --> 03:45.640
Podemos rolar e usar este mapa.

03:45.640 --> 03:47.480
Tudo isso é bom, mas não é ótimo.

03:47.480 --> 03:50.420
É claro que funciona, graças a "declarar var google",

03:50.420 --> 03:53.340
não estamos recebendo nenhum erro.

03:53.340 --> 03:56.760
Mas também não estamos recebendo nenhum tipo de apoio.

03:56.760 --> 03:58.810
SE eu introduzir um erro,

03:58.810 --> 04:01.550
se eu, por exemplo, me referir a ". mapa" ao invés de ". mapas", compila sem problemas, e só se

04:01.550 --> 04:02.960
despenha na produção

04:02.960 --> 04:06.730
depois disso.

04:06.730 --> 04:08.860
Se eu tentar fazer um mapa.

04:08.860 --> 04:11.280
Agora eu recebo um erro aqui, apanhado por nosso manipulador de erros.

04:11.280 --> 04:13.150
Portanto, é claro que isto não é o que queremos.

04:13.150 --> 04:16.493
Queremos apoio de tipo, queremos lidar com erros de despejo como este, durante

04:17.470 --> 04:19.770
o desenvolvimento, e não em tempo de execução.

04:19.770 --> 04:22.880
Então, como podemos garantir que o datilografia conheça o Google Maps?

04:22.880 --> 04:27.380
Tipos para o resgate.

04:27.380 --> 04:31.080
Se você procura por "tipos google maps", você encontra vários pacotes,

04:31.080 --> 04:32.470
o que adiciona tipos para,

04:32.470 --> 04:34.160
bem, Google Maps.

04:34.160 --> 04:37.350
Agora nós não instalamos o pacote Google Maps através do NPM,

04:37.350 --> 04:38.800
mas ainda podemos instalar

04:38.800 --> 04:41.050
tipos para esse pacote através do NPM.

04:41.050 --> 04:44.130
E aqui vou eu buscar este primeiro pacote, e simplesmente

04:44.130 --> 04:46.160
instalá-lo em nosso projeto.

04:46.160 --> 04:48.790
Portanto, vamos voltar, servidor de desenvolvimento

04:48.790 --> 04:51.560
rápido, e executar "npm install --save-dev "@types/googlemaps",

04:51.560 --> 04:54.030
uma palavra.

04:54.030 --> 04:56.400
Esse era o nome deste pacote.

04:58.613 --> 05:01.560
Isto agora vai instalar tipos globais para este pacote.

05:01.560 --> 05:03.303
Portanto, agora se eu reiniciar

05:04.200 --> 05:08.410
isto com o NPM, vamos ver se temos uma situação melhor.

05:08.410 --> 05:11.500
Se eu remover esta coisa de "declarar

05:11.500 --> 05:15.180
var" aqui, ou se eu a comentar.

05:15.180 --> 05:18.090
Ele ainda compila, agora esta coisa do google maps aqui é detectada,

05:18.090 --> 05:19.940
e se eu tentar acessar". mapa" aqui, eu recebo um erro,

05:19.940 --> 05:23.290
também recebo auto-completamento agora e vê: "Sim,

05:23.290 --> 05:27.010
há uma coisa de mapas. Também me diz que este construtor

05:27.010 --> 05:29.880
de mapas, precisa de um "Div" ou um "Elemento" onde

05:29.880 --> 05:32.410
ele deve apresentar o mapa como primeiro argumento,

05:32.410 --> 05:35.100
e depois algumas opções para o mapa.

05:35.100 --> 05:38.660
Portanto, isto agora está funcionando aqui, como deveria.

05:38.660 --> 05:40.270
E isto é, naturalmente, um grande

05:40.270 --> 05:42.850
passo em frente, porque agora temos nossa aplicação

05:42.850 --> 05:45.170
de trabalho, e isto também funcionou antes.

05:45.170 --> 05:47.600
Mas agora funciona também com

05:47.600 --> 05:51.170
tipos, e com um suporte de tipo adequado.

05:51.170 --> 05:53.490
E este funcionário é outra grande prática, para

05:53.490 --> 05:56.050
a forma como você constrói aplicações com script de

05:56.050 --> 05:58.500
tipo e usa certos tipos de recursos, mas é especialmente

05:58.500 --> 06:00.690
uma grande prática para a forma como você pode

06:00.690 --> 06:03.700
trabalhar com bibliotecas de terceiros.

06:03.700 --> 06:06.250
Alguns, como os "axioses", trazem seus próprios tipos.

06:06.250 --> 06:08.470
Outros, nem mesmo são instalados

06:08.470 --> 06:11.540
com NPM, e ainda assim você pode adicionar

06:11.540 --> 06:15.421
tipos com um pacote de tipos apropriado.

06:15.421 --> 06:18.810
Espero que este módulo tenha sido útil, para entender isto e para

06:18.810 --> 06:21.320
todos os projetos futuros em que você possa estar

06:21.320 --> 06:23.230
trabalhando, onde você provavelmente

06:23.230 --> 06:25.620
também trabalhará, com certas bibliotecas

06:25.620 --> 06:27.040
de terceiros.
