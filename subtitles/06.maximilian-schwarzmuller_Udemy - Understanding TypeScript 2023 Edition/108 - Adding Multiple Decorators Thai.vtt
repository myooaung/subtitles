WEBVTT

00:02.270 --> 00:05.210
ผู้สอน: ตอนนี้เราเห็นมัณฑนากรที่มีประโยชน์มากขึ้น

00:05.210 --> 00:08.750
ฉันขอสรุปการแนะนำมัณฑนากรขั้นพื้นฐานนี้ด้วยสิ่งสำคัญอีกอย่างที่คุณควรรู้

00:08.750 --> 00:17.760
คุณสามารถเพิ่มมัณฑนากรมากกว่าหนึ่งคนในชั้นเรียน หรือที่อื่น ๆ ที่คุณสามารถใช้มัณฑนากรได้

00:17.760 --> 00:18.940
ลองเพิ่มตัวตกแต่งคนตัดไม้ที่นี่ด้วย

00:18.940 --> 00:23.040
เช่น แบบนี้

00:23.040 --> 00:25.810
หากเราบันทึก คุณจะเห็นการคอมไพล์โดยไม่มีข้อผิดพลาด

00:25.810 --> 00:29.030
และแน่นอนว่าเราจะเห็นข้อความบันทึกที่นี่เช่นกัน

00:29.030 --> 00:34.840
นี่เป็นเพียงคำถามสำคัญข้อหนึ่งซึ่งผู้ตกแต่งเหล่านี้ดำเนินการตามลำดับใด

00:34.840 --> 00:38.880
เพื่อหาคำตอบลองโยนข้อความบันทึกลงในทั้งสอง

00:38.880 --> 00:43.400
เรามีข้อความบันทึกใน Logger แน่นอน ตอนนี้ไปที่ฟังก์ชันมัณฑนากร

00:43.400 --> 00:46.350
ดังนั้นไปที่ฟังก์ชันภายในของ WithTemplate

00:46.350 --> 00:49.900
และพูดว่า Rendering Template เป็นต้น

00:49.900 --> 00:56.820
และตอนนี้เรามาดูกันว่าฟังก์ชันเหล่านี้กำลังดำเนินการอยู่ในลำดับใดและคำสั่งบันทึกเหล่านี้จะถูกพิมพ์ในลำดับใด

00:56.820 --> 00:59.570
และเราเห็น Rendering Template ทำงานก่อน

00:59.570 --> 01:02.540
จากนั้นเราจะได้เอาต์พุต Logger

01:02.540 --> 01:06.260
สิ่งที่บอกเราแน่นอนก็คือพวกมันดำเนินการจากล่างขึ้นบน

01:06.260 --> 01:08.033
มัณฑนากรที่อยู่ล่างสุดก่อน

01:08.033 --> 01:10.790
แล้วจึงตามด้วยมัณฑนากรที่อยู่เบื้องบน

01:10.790 --> 01:14.230
WithTemplate จะทำงานก่อน จากนั้น Logger จะดำเนินการ

01:14.230 --> 01:15.270
และที่สำคัญ

01:15.270 --> 01:18.920
ฉันกำลังพูดถึงฟังก์ชั่นมัณฑนากรจริงๆ

01:18.920 --> 01:23.710
โรงงานมัณฑนากรที่นี่ดำเนินการก่อนหน้านี้

01:23.710 --> 01:26.790
ถ้าเรามี Logger Factory ที่นี่ และเรามี Log

01:26.790 --> 01:31.080
เดียวกันใน Template Factory ดังนั้นผมจึงพูดว่า Template

01:31.080 --> 01:33.950
Factory ในบันทึกของผม คุณจะเห็นว่าที่นั่น

01:33.950 --> 01:35.000
จริงๆ แล้ว Logger

01:35.000 --> 01:37.490
Factory จะทำงานก่อน จากนั้นเราได้

01:37.490 --> 01:39.930
Template Factory

01:39.930 --> 01:41.750
และนั่นสมเหตุสมผลเพราะในท้ายที่สุด

01:41.750 --> 01:43.740
แม้ว่าเราจะมีสัญลักษณ์ @ ตรงนี้ แต่ฉันกำลังเรียกใช้ฟังก์ชันอยู่

01:43.740 --> 01:46.850
และเราก็ทำเช่นเดียวกันที่นี่

01:46.850 --> 01:53.610
และแน่นอนว่ากฎ JavaScript ปกติจะใช้ที่นี่ และการเรียกใช้ฟังก์ชันนี้จะเกิดขึ้นก่อนการเรียกใช้ฟังก์ชันนี้

01:53.610 --> 01:56.590
ซึ่งเป็นเหตุผลที่เราเห็น Logger Factory

01:56.590 --> 01:59.470
ก่อนที่เราจะเห็น Template Factory

01:59.470 --> 02:07.280
ดังนั้นการสร้างฟังก์ชันมัณฑนากรที่แท้จริงของเราจึงเกิดขึ้นตามลำดับที่เราระบุฟังก์ชันจากโรงงานเหล่านี้

02:07.280 --> 02:12.700
แต่การทำงานของมัณฑนากรจริงนั้นเกิดขึ้นจากล่างขึ้นบน

02:12.700 --> 02:19.000
ซึ่งหมายความว่ามัณฑนากรที่อยู่ล่างสุดจะดำเนินการก่อน ดังนั้นฟังก์ชันมัณฑนากรนี้

02:19.000 --> 02:23.250
และหลังจากนั้นมัณฑนากรที่อยู่ด้านบนจะดำเนินการ

02:23.250 --> 02:25.163
เป็นเพียงสิ่งที่คุณต้องรู้

02:26.040 --> 02:29.620
ด้วยเหตุนี้ เราจึงได้รับความรู้พื้นฐานที่แน่นแฟ้นเกี่ยวกับมัณฑนากร

02:29.620 --> 02:37.810
และคุณยังเห็นมัณฑนากรขั้นสูง ซึ่งหวังว่าจะให้ความประทับใจแรกแก่คุณว่าเหตุใดมัณฑนากรจึงมีประโยชน์ โดยเฉพาะอย่างยิ่งหากคุณคิดเกี่ยวกับเฟรมเวิร์กเช่น

02:37.810 --> 02:41.970
Angular

02:41.970 --> 02:50.363
ทีนี้มาดูกันว่าที่อื่นๆ นอกจากชั้นเรียนแล้ว เราสามารถเพิ่มมัณฑนากรและทำอะไรได้บ้างที่นั่น
