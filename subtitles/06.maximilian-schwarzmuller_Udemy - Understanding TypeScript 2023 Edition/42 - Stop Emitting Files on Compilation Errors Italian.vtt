WEBVTT

00:02.050 --> 00:04.370
Istruttore: Non possiamo ignorare i moduli isolati,

00:04.370 --> 00:05.880
ma c'è un'altra opzione, che in

00:05.880 --> 00:08.000
realtà non è nemmeno menzionata qui, ma che

00:08.000 --> 00:10.810
voglio comunque menzionare io stesso.

00:10.810 --> 00:14.680
E questa è l'opzione "no emit on error".

00:14.680 --> 00:16.200
Si può impostare su true o false

00:16.200 --> 00:18.820
e l'impostazione predefinita è false.

00:18.820 --> 00:19.653
A cosa serve questo?

00:19.653 --> 00:21.330
Se lo impostiamo su false, vi mostrerò dove

00:21.330 --> 00:23.050
questo potrebbe essere un problema.

00:23.050 --> 00:26.530
È un problema se introduciamo un errore o può essere

00:26.530 --> 00:27.590
un problema.

00:27.590 --> 00:30.690
Diciamo che ho il mio pulsante e rimuovo il

00:30.690 --> 00:32.410
punto esclamativo.

00:32.410 --> 00:34.750
Ora, anche se non capiamo bene cosa sta

00:34.750 --> 00:38.030
succedendo, il problema è semplicemente che TypeScript

00:38.030 --> 00:40.610
non sa che abbiamo un pulsante.

00:40.610 --> 00:42.790
Dopo tutto, quando si interroga un pulsante,

00:42.790 --> 00:45.990
si potrebbe non ottenerlo, se non c'è nessun elemento nel DOM che soddisfi

00:45.990 --> 00:47.540
questo selettore, allora questo

00:47.540 --> 00:48.800
ritornerà ora.

00:48.800 --> 00:50.910
E questo è fondamentalmente ciò di cui TypeScript si lamenta.

00:50.910 --> 00:54.849
Qui accediamo a qualcosa su un potenziale oggetto

00:54.849 --> 00:57.200
nullo e questo non va bene.

00:57.200 --> 00:59.300
Questo è un errore che abbiamo qui.

00:59.300 --> 01:02.120
Se compiliamo il nostro codice, otteniamo

01:02.120 --> 01:04.770
anche questo errore nella console.

01:04.770 --> 01:08.210
Tuttavia, il file viene creato.

01:08.210 --> 01:11.660
Quindi anche se cancello l'app. jsfile verrà ricreato.

01:11.660 --> 01:13.910
Quindi, anche se si verifica un errore,

01:13.910 --> 01:16.300
TypeScript crea un file JavaScript.

01:16.300 --> 01:18.740
Questo potrebbe essere voluto o meno.

01:18.740 --> 01:21.360
Forse c'è un errore nel file TypeScript e non si

01:21.360 --> 01:22.980
sa come risolverlo, ma si sa che

01:22.980 --> 01:26.000
non sarà un problema nell'applicazione finale.

01:26.000 --> 01:29.410
Come qui, anche se non conosciamo il punto esclamativo.

01:29.410 --> 01:31.577
Se non conosciamo il punto esclamativo,

01:31.577 --> 01:35.900
non sappiamo come disabilitare questo errore.

01:35.900 --> 01:39.630
Ma sappiamo comunque che funzionerà nella nostra pagina.

01:39.630 --> 01:41.890
Quindi potremmo essere a posto con la compilazione

01:41.890 --> 01:43.630
nonostante l'errore.

01:43.630 --> 01:45.570
Ma, naturalmente, in realtà dovreste

01:45.570 --> 01:48.850
puntare a progetti privi di errori e imparare come aggirare

01:48.850 --> 01:51.720
questo problema piuttosto che ignorarlo.

01:51.720 --> 01:54.590
Tuttavia, si può impostare questo valore a false

01:54.590 --> 01:57.590
o non impostarlo affatto, perché false è il valore

01:57.590 --> 02:00.687
predefinito, se non si ha problemi a generare file JavaScript

02:00.687 --> 02:02.590
in caso di errore.

02:02.590 --> 02:04.240
Se si imposta questa opzione

02:04.240 --> 02:07.700
su true, tuttavia, i file problematici non verranno

02:07.700 --> 02:09.100
generati.

02:09.100 --> 02:10.910
Se ora ripeto questo...

02:12.440 --> 02:15.110
In realtà non viene generato nulla.

02:15.110 --> 02:18.180
Anche l'analisi. Il file ts non viene

02:18.180 --> 02:21.440
emesso se c'è del contenuto oltre

02:21.440 --> 02:26.440
alla console. log, si vede che non viene generato.

02:26.550 --> 02:27.560
Il motivo è che

02:27.560 --> 02:29.600
c'è un errore nel file.

02:29.600 --> 02:32.940
Se un file non viene compilato, nessun file

02:32.940 --> 02:34.300
viene omesso.

02:34.300 --> 02:35.810
Dobbiamo quindi assicurarci

02:35.810 --> 02:38.850
di risolvere questo errore prima di poter far compilare

02:38.850 --> 02:40.890
nuovamente i file a TypeScript.

02:40.890 --> 02:43.530
Pertanto, è un'opzione che in genere mi piace impostare,

02:43.530 --> 02:46.830
perché non mi interessa ottenere file JavaScript se ho ancora

02:46.830 --> 02:49.703
errori nei miei file TypeScript.
