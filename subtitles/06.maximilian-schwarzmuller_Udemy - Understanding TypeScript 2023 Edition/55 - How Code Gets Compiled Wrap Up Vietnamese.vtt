WEBVTT

00:02.200 --> 00:03.970
Người hướng dẫn: Đây là phần dành cho mô-đun này.

00:03.970 --> 00:06.080
Rõ ràng JavaScript hiện đại cũng có

00:06.080 --> 00:07.790
một số tính năng thú vị khác.

00:07.790 --> 00:09.810
Ví dụ, tôi sẽ đề cập đến các lớp học trong

00:09.810 --> 00:11.120
mô-đun lớp học và nói chung

00:11.120 --> 00:13.470
đây không phải là khóa học JavaScript.

00:13.470 --> 00:16.540
Tôi không muốn làm bạn nhàm chán với hàng tấn kiến thức

00:16.540 --> 00:20.140
JavaScript không thực sự liên quan đến TypeScript.

00:20.140 --> 00:22.700
Tôi muốn đề cập đến các tính năng cụ thể này vì thật

00:22.700 --> 00:24.650
tốt khi biết rằng TypeScript giúp

00:24.650 --> 00:28.210
chúng tôi sử dụng các tính năng này theo cách vẫn chạy trong các

00:28.210 --> 00:29.580
trình duyệt cũ hơn.

00:29.580 --> 00:32.920
Bởi vì đó là điều mà bạn không bao giờ được phép quên.

00:32.920 --> 00:35.600
Mã của bạn được biên dịch.

00:35.600 --> 00:38.690
Hiện tại, tôi phải đặt mục tiêu thành ES6 và do đó,

00:38.690 --> 00:41.540
nếu chúng tôi kiểm tra thư mục dist, chúng tôi

00:41.540 --> 00:44.280
sẽ thấy các hằng số trên đó cũng có sẵn trong

00:44.280 --> 00:46.030
tệp JS của ứng dụng.

00:46.030 --> 00:48.070
Object de structuring, có cách thích

00:48.070 --> 00:50.600
cái này chỗ kia vì tất cả các tính năng này đều

00:50.600 --> 00:52.480
được hỗ trợ trong ES6.

00:52.480 --> 00:55.230
Nếu tôi đặt mục tiêu thành ES5 và tôi nhận

00:55.230 --> 00:56.590
xét lib ngay bây giờ,

00:56.590 --> 00:58.680
để các lib chính xác được nhập cho

00:58.680 --> 01:00.930
mục tiêu ES5, điều này sẽ xảy ra theo

01:00.930 --> 01:03.680
mặc định, bạn sẽ thấy mã được tạo bây giờ trông

01:03.680 --> 01:05.290
khá khác.

01:05.290 --> 01:08.140
Nó lâu hơn bởi vì bây giờ chúng tôi đang sử dụng var

01:08.140 --> 01:09.810
và TypeScript phải tìm cách

01:09.810 --> 01:12.960
khắc phục cho một số cú pháp nhất định không được hỗ trợ

01:12.960 --> 01:14.730
trong ES5 JavaScript.

01:14.730 --> 01:18.240
Ví dụ, cú pháp hủy cấu trúc đã bị xóa.

01:18.240 --> 01:21.140
Vì vậy, đó là một điều quan trọng cần luôn ghi nhớ.

01:21.140 --> 01:23.490
TypeScript biên dịch mã của bạn, không

01:23.490 --> 01:26.440
chỉ từ các tính năng duy nhất của TypeScript

01:26.440 --> 01:29.210
sang JavaScript thông thường, mà tất cả chúng

01:29.210 --> 01:33.000
từ JavaScript hiện đại sang JavaScript cũ nếu bạn yêu cầu

01:33.000 --> 01:35.433
TypeScript làm như vậy.
