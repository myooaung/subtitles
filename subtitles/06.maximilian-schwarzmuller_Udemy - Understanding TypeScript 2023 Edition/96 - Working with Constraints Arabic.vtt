WEBVTT

00:02.340 --> 00:04.100
الراوي: لقد بدأنا مع الأدوية

00:04.100 --> 00:06.670
العامة ونأمل أن يكون واضحًا ما يفعله TypeScript

00:06.670 --> 00:10.240
هنا ، ونمرر بعض المعلومات الإضافية إلى وظيفة الدمج ، حتى

00:10.240 --> 00:12.130
نتمكن من العمل بطريقة أفضل مع

00:12.130 --> 00:14.370
نتيجة وظيفة الدمج.

00:14.370 --> 00:16.540
هذا هو عادة ما توجد من أجله الأدوية الجنيسة.

00:16.540 --> 00:19.890
إنها تسمح لك بمواصلة العمل مع بياناتك بطريقة

00:19.890 --> 00:21.960
TypeScript المثلى.

00:21.960 --> 00:23.820
الآن ، في هذه الحالة ، هنا ،

00:23.820 --> 00:25.810
على أي حال ، سيكون لدينا مشكلة

00:25.810 --> 00:28.570
إذا مررت ، دعنا نقول فقط رقم 30 هنا.

00:28.570 --> 00:30.470
بالطبع ، تُلقي TypeScript الآن بخطأ

00:30.470 --> 00:32.010
، لأنها حاولت الوصول إلى العمر

00:32.010 --> 00:33.870
، لكن الوصول إلى الاسم سيعمل.

00:33.870 --> 00:37.100
ومع ذلك ، إذا حفظنا ذلك ، فسيتم تجميعه بدون أخطاء

00:37.100 --> 00:39.710
، وإذا قمت بطباعة الكائن المدمج بشكل

00:39.710 --> 00:41.610
عام ، فإننا نرى أن ما أعود إليه

00:41.610 --> 00:43.910
هو مجرد هوايات واسم في موضوعي ،

00:43.910 --> 00:46.570
وهو أمر منطقي لأن الرقم 30 هو رقم ، وعندما

00:46.570 --> 00:48.010
نجتاز ذلك كحجة ثانية

00:48.010 --> 00:50.080
لإسناد الكائن ، وهو ما نقوم به

00:50.080 --> 00:51.920
هنا في النهاية ، حسنًا ، فهذا

00:51.920 --> 00:54.590
يفشل بصمت.

00:54.590 --> 00:57.860
JavaScript لا يخطئ ، لا يشكو.

00:57.860 --> 01:00.460
لكن بالطبع ، لا يدمج أيضًا 30 في الكائن

01:00.460 --> 01:02.270
الذي تم إنشاؤه حديثًا ، كما

01:02.270 --> 01:04.690
ترى أنه لا يوجد 30 في هذا الكائن.

01:04.690 --> 01:06.540
الآن ، كيف سيفعل JavaScript ذلك؟

01:06.540 --> 01:08.470
نظرًا لأن 30 ليس كائنًا

01:08.470 --> 01:12.150
، فإن تخصيص الكائن فقط قادر على دمج كائنات مختلفة

01:12.150 --> 01:14.090
مع بعضها البعض.

01:14.090 --> 01:15.410
إذن ما الذي نريد حفظه في النهاية؟

01:15.410 --> 01:17.600
حسنًا ، لا نهتم بالنوع الدقيق

01:17.600 --> 01:20.040
، ولا نهتم بالبنية الدقيقة للكائن

01:20.040 --> 01:22.980
الذي تقدمه هنا لـ U و T.

01:22.980 --> 01:26.600
ولكن ما يهمنا هو أن كلا المعلمتين ، كلا النوعين

01:26.600 --> 01:31.370
T و U يجب أن يكونا من أي نوع من الأشياء ولكن يجب أن يكونا

01:31.370 --> 01:34.420
كائنًا في جميع الأوقات.

01:34.420 --> 01:36.830
وفي الوقت الحالي ، لا نقول ذلك.

01:36.830 --> 01:37.820
حاليًا ، نحن نقول

01:37.820 --> 01:40.110
فقط ، يجب أن يكونوا من أي نوع ، لا يهمني.

01:40.110 --> 01:41.750
الآن في كثير من الأحيان ، هذا ليس على ما يرام.

01:41.750 --> 01:45.060
تريد تقييد أنواع T و U هنا ، وحل الأنواع

01:45.060 --> 01:46.683
العامة الخاصة بك.

01:47.830 --> 01:51.540
يمكنك القيام بذلك باستخدام قيود النوع.

01:51.540 --> 01:55.170
بالنسبة للأنواع العامة ، يمكنك تعيين قيود معينة فيما يتعلق بالأنواع

01:55.170 --> 01:58.280
التي يمكن أن تستند إليها الأنواع العامة الخاصة بك ويمكنك

01:58.280 --> 02:01.120
القيام بذلك باستخدام الكلمة الرئيسية الممتدة

02:01.120 --> 02:05.150
هنا في الأقواس الزاوية بعد النوع الذي تريد تقييده.

02:05.150 --> 02:07.410
هنا يمكننا القول أنه يمتد

02:07.410 --> 02:09.020
كائنًا ، وبهذا أقول

02:09.020 --> 02:12.740
، يمكن أن يكون النوع T أي كائن بأي بنية ، ولكن

02:12.740 --> 02:15.340
يجب أن يكون كائنًا.

02:15.340 --> 02:17.480
يمكننا أن نفعل الشيء نفسه مع U.

02:17.480 --> 02:19.040
وإذا قمت بذلك ، فسترى الآن

02:19.040 --> 02:21.820
أنني تلقيت بالفعل خطأ هنا في IDE.

02:21.820 --> 02:23.980
وإذا حاولت حفظ ذلك ، فسأحصل

02:23.980 --> 02:26.150
أيضًا على خطأ في المترجم ،

02:26.150 --> 02:28.640
لأن وسيطة النوع 30 هنا غير قابلة

02:28.640 --> 02:31.133
للتخصيص لكتابة الكائن.

02:32.080 --> 02:34.480
هذا بالطبع هو السلوك الذي نريده هنا.

02:34.480 --> 02:38.190
الآن نحن مجبرون على تمرير كائن مرة أخرى

02:38.190 --> 02:39.940
، يصيح ، هكذا.

02:39.940 --> 02:41.990
نحن مضطرون الآن إلى تمرير هذا مرة أخرى

02:41.990 --> 02:43.680
، وبالتالي نقوم بتحسين هذه الوظيفة

02:43.680 --> 02:45.290
لأنها تعمل الآن بالفعل.

02:45.290 --> 02:48.980
ونعلم أن إسناد الكائن يتطلب شيئين.

02:48.980 --> 02:51.000
لذا في النهاية ، نريد أن نضمن

02:51.000 --> 02:52.820
حصولنا على كائنين هنا من

02:52.820 --> 02:56.370
خلال وضع قيود معينة على الأنواع العامة لدينا.

02:56.370 --> 02:58.630
وهذه القيود هنا يمكن أن تكون أي شيء.

02:58.630 --> 03:01.290
يمكنك الرجوع إلى الكائنات ، إلى السلسلة ، يمكنك

03:01.290 --> 03:03.730
استخدام النوع الخاص بك إذا كان لديك.

03:03.730 --> 03:06.700
يمكنك أيضًا استخدام أنواع الاتحاد هنا إذا كنت ترغب

03:06.700 --> 03:08.470
في ذلك ، فأنت مرن حقًا هناك ، ويمكنك

03:08.470 --> 03:10.510
تعيين أي قيود تريدها.

03:10.510 --> 03:12.620
وبالطبع ، ليس عليك تقييد جميع الأنواع

03:12.620 --> 03:13.720
العامة.

03:13.720 --> 03:16.560
إذا كنت تريد فقط تقييد U ، فيمكنك القيام بذلك.

03:16.560 --> 03:19.620
في هذا المثال ، من المنطقي تقييد كليهما

03:19.620 --> 03:22.880
لأن تخصيص الكائن يتطلب كائنين هنا ، لكنك

03:22.880 --> 03:24.640
حقًا مرن هناك.

03:24.640 --> 03:26.620
من المهم أن تكون على دراية بمفهوم

03:26.620 --> 03:28.440
القيود هذا ، لأن ذلك يسمح لك

03:28.440 --> 03:30.560
بالعمل مع الأنواع العامة بطريقة

03:30.560 --> 03:32.640
أفضل بالطريقة المثلى ، والتي تتجنب

03:32.640 --> 03:34.810
الأخطاء غير الضرورية أو السلوكيات

03:34.810 --> 03:37.513
الغريبة كما فعلنا من قبل.
