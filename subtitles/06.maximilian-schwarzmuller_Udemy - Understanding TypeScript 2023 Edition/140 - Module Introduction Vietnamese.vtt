WEBVTT

00:02.270 --> 00:04.610
Người hướng dẫn: Đây là mã mà chúng tôi đã

00:04.610 --> 00:08.580
hoàn thành ở cuối phần cốt lõi cuối cùng, dự án thực hành của chúng tôi,

00:08.580 --> 00:11.050
rất nhiều mã tất cả trong một tệp và đây được

00:11.050 --> 00:14.050
cho là không phải là một dự án siêu phức tạp.

00:14.050 --> 00:17.420
Bạn chắc chắn có thể viết nhiều dự án và ứng dụng phức

00:17.420 --> 00:20.380
tạp hơn, và cuối cùng bạn sẽ có nhiều mã hơn, vì

00:20.380 --> 00:23.640
vậy, việc đưa tất cả vào một tệp có thể không phải là

00:23.640 --> 00:25.000
điều bạn muốn làm.

00:25.000 --> 00:26.390
Vì vậy, thay vào đó, điều

00:26.390 --> 00:28.740
bạn muốn làm là viết mã mô-đun, nghĩa đơn

00:28.740 --> 00:31.120
giản là bạn muốn chia mã của mình thành nhiều

00:31.120 --> 00:34.010
tệp để mỗi tệp riêng lẻ có thể quản lý và bảo trì được,

00:34.010 --> 00:37.157
sau đó bạn chỉ cần nhập và xuất từ và sang các tệp này rồi

00:37.157 --> 00:39.640
thực hiện do đó, đảm bảo rằng tất cả các tệp

00:39.640 --> 00:42.100
này đều được kết nối, nhưng chúng được kết

00:42.100 --> 00:44.740
nối bằng Bản mô tả hoặc bởi trình duyệt hoặc

00:44.740 --> 00:47.990
bởi một số công cụ xây dựng của bên thứ ba chứ không phải

00:47.990 --> 00:50.310
bởi bạn bằng cách hợp nhất tất cả chúng

00:50.310 --> 00:52.310
thành một tệp trong quá trình phát

00:52.310 --> 00:54.500
triển.

00:54.500 --> 00:55.940
Bây giờ, trong mô-đun này,

00:55.940 --> 00:59.910
chúng ta sẽ xem xét hai tùy chọn chính giúp chúng ta tổ chức mã của mình trong

00:59.910 --> 01:02.160
nhiều tệp và chúng ta sẽ không chỉ tìm hiểu

01:02.160 --> 01:04.930
về chúng trên lý thuyết mà còn trong thực tế.

01:04.930 --> 01:07.320
Tất nhiên, chúng tôi sẽ áp dụng các cách tiếp cận khác nhau này

01:07.320 --> 01:09.453
và xem cách chúng tôi có thể phân tách mã của mình.
