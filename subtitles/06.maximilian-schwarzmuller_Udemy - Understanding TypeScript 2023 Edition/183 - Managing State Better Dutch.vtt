WEBVTT

00:02.190 --> 00:04.310
Docent: Dus hoe moeten we in plaats daarvan de staat bijwerken?

00:04.310 --> 00:06.970
We kunnen onze spreidingsoperator hier gebruiken,

00:06.970 --> 00:09.680
en al onze bestaande TODO's in deze matrix spreiden

00:09.680 --> 00:13.520
en dan gewoon de nieuwe TODO toevoegen als een nieuw item aan het einde.

00:13.520 --> 00:16.300
Dit werkt, maar is niet de schoonste manier om dit bij te werken.

00:16.300 --> 00:18.780
Het zal waarschijnlijk werken in alle scenario's

00:18.780 --> 00:20.090
die we in deze app hebben,

00:20.090 --> 00:23.170
maar theoretisch gezien plant react toestandsupdates en

00:23.170 --> 00:26.050
daarom hoeft wat hier in onze TODO-waarde staat niet noodzakelijkerwijs

00:26.050 --> 00:28.490
de laatste stand te zijn wanneer deze update wordt

00:28.490 --> 00:30.710
uitgevoerd.

00:30.710 --> 00:33.360
Om dit te garanderen kunnen we hier echter een functie doorgeven

00:33.360 --> 00:35.340
aan deze toestand bijwerkende functie.

00:35.340 --> 00:37.500
Een functie die onze vorige TODO's krijgt en

00:37.500 --> 00:39.680
die alsdan de nieuwe toestand teruggeeft.

00:39.680 --> 00:41.460
Dit alles wordt ondersteund door react.

00:41.460 --> 00:44.370
Deze functie zal ook door react voor ons worden aangeroepen

00:44.370 --> 00:48.340
en dan kunnen we erop vertrouwen dat prevTodos in deze functie werkelijk

00:48.340 --> 00:51.363
de laatste momentopname is.

00:52.220 --> 00:55.480
Daarmee werken we onze TODO's bij met de oude TODO's en

00:55.480 --> 00:57.080
de nieuwe en nu hebben we hier

00:57.080 --> 00:59.100
een functie waarmee we nieuwe TODO's

00:59.100 --> 01:01.860
zouden moeten kunnen toevoegen.

01:01.860 --> 01:03.800
Dus als we dat nu allemaal opslaan

01:03.800 --> 01:05.470
en we gaan terug naar de

01:05.470 --> 01:10.260
applicatie en voeren hier de cursus af, dan werkt dit.

01:10.260 --> 01:14.400
En als ik het hier in een maand afmaak, komt dit er

01:14.400 --> 01:15.650
ook nog bij.

01:15.650 --> 01:17.330
Dus dit werkt nu allemaal.

01:17.330 --> 01:18.960
De ontbrekende functionaliteit

01:18.960 --> 01:21.180
is nu dat we ze ook kunnen verwijderen.

01:21.180 --> 01:22.790
Dat doen we in de volgende lezing,

01:22.790 --> 01:24.310
maar belangrijker dan dat is

01:24.310 --> 01:26.470
dat je nu ook geleerd hebt hoe je state beheert

01:26.470 --> 01:28.260
met react en typescript, wat naast

01:28.260 --> 01:29.930
props natuurlijk een ander kernconcept

01:29.930 --> 01:31.693
is.
