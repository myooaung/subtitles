WEBVTT

00:02.250 --> 00:05.050
Instructeur : Maintenant, avant d'explorer des cas d'utilisation

00:05.050 --> 00:07.811
plus utiles ou des scénarios pour certains décorateurs.

00:07.811 --> 00:10.700
Je vais vous montrer brièvement tous les autres endroits où

00:10.700 --> 00:12.550
vous pouvez ajouter des décorateurs.

00:12.550 --> 00:15.670
Il est évident que nous pouvons ajouter des décorateurs aux classes, mais il existe

00:15.670 --> 00:17.731
d'autres endroits où nous pouvons les ajouter.

00:17.731 --> 00:20.750
Pour cela, je vais créer une nouvelle classe, car nous avons besoin d'une classe

00:20.750 --> 00:22.460
pour chaque décorateur que nous voulons utiliser,

00:22.460 --> 00:24.580
mais nous n'avons pas besoin d'ajouter tous les décorateurs

00:24.580 --> 00:26.420
directement à la classe.

00:26.420 --> 00:28.480
Disons que nous avons une classe

00:28.480 --> 00:31.523
de produit ici et dans la classe de produit, nous

00:31.523 --> 00:34.540
avons un titre peut-être, qui est une chaîne.

00:34.540 --> 00:37.070
Et nous pouvons attribuer une valeur ici avec le constructeur.

00:37.070 --> 00:39.600
Bien sûr, nous pouvons toujours utiliser le raccourci et faire tout cela

00:39.600 --> 00:41.570
en une seule étape dans un constructeur, comme vous l'avez

00:41.570 --> 00:42.680
appris précédemment.

00:42.680 --> 00:44.451
Ici, je vais prendre la route la plus longue.

00:44.451 --> 00:49.451
Nous pouvons avoir une méthode ici, obtenir le prix avec la taxe.

00:50.150 --> 00:53.442
Pour cela, je m'attends à obtenir un taux d'imposition qui est un nombre

00:53.442 --> 00:57.150
et pour que cela fonctionne, nous devons également stocker un prix ici.

00:57.150 --> 01:01.200
La propriété Price que nous obtenons également dans le cadre du constructeur.

01:01.200 --> 01:04.060
Encore une fois, nous pourrions utiliser le raccourci ici, mais

01:04.060 --> 01:05.340
je vais le faire comme ça.

01:05.340 --> 01:08.120
Et ensuite, dans cette méthode,

01:08.120 --> 01:13.120
je vais retourner, This. prix multiplié par un plus taxe.

01:13.200 --> 01:15.300
Nous avons donc cette méthode utilitaire et

01:15.300 --> 01:17.610
nous pouvons également ajouter un getter et un setter

01:17.610 --> 01:19.090
si vous le souhaitez.

01:19.090 --> 01:22.700
Par exemple, nous pouvons ajouter un setter pour le prix ici, où nous obtenons

01:22.700 --> 01:25.850
la valeur qui doit être un nombre et où nous contrôlons que nous pouvons

01:25.850 --> 01:28.231
seulement définir certaines valeurs.

01:28.231 --> 01:32.090
Maintenant, pour que cela fonctionne, je vais renommer price ici, pour

01:32.090 --> 01:35.350
souligner price et le rendre privé en fait, afin que nous ne puissions

01:35.350 --> 01:37.540
pas l'atteindre directement.

01:37.540 --> 01:39.970
Et ici je vais définir ce prix souligné

01:39.970 --> 01:42.580
et ici je vais utiliser ce prix souligné.

01:42.580 --> 01:44.800
Et avec ces changements dans le setter, nous pouvons

01:44.800 --> 01:48.350
fixer ce prix de soulignement égal à la valeur que nous obtenons.

01:48.350 --> 01:51.290
Mais avant de le faire, nous pouvons vérifier si la

01:51.290 --> 01:52.770
valeur est supérieure à zéro,

01:52.770 --> 01:55.630
afin de ne pas accepter des prix négatifs.

01:55.630 --> 01:57.220
Ainsi, nous ne fixons le prix que

01:57.220 --> 02:00.159
s'il est supérieur à zéro, sinon nous ne faisons rien.

02:00.159 --> 02:04.330
En effet, nous pourrions lancer une erreur dans l'autre cas.

02:04.330 --> 02:08.389
Le prix invalide doit être positif.

02:08.389 --> 02:11.350
C'est donc quelque chose que nous pouvons faire, maintenant

02:11.350 --> 02:14.020
nous avons une classe avec deux propriétés, avec

02:14.020 --> 02:16.700
un accesseur et aussi avec une méthode ici et cette

02:16.700 --> 02:18.570
méthode a un paramètre.

02:18.570 --> 02:21.180
À toutes ces choses, nous pouvons ajouter des

02:21.180 --> 02:24.690
décorateurs et commençons par un bon vieil ami, le décorateur

02:24.690 --> 02:25.910
de bûches.

02:25.910 --> 02:28.960
Ici, je l'appellerai log pour ne pas entrer en conflit avec logger,

02:28.960 --> 02:30.650
car ce décorateur log ne sera pas ajouté

02:30.650 --> 02:31.960
à une classe et recevra donc

02:31.960 --> 02:33.770
des arguments différents.

02:33.770 --> 02:35.671
Il obtiendra des arguments cependant,

02:35.671 --> 02:38.580
et quels arguments le décorateur obtient, dépend de l'endroit

02:38.580 --> 02:40.030
où vous l'ajoutez.

02:40.030 --> 02:41.960
C'est pourquoi je ne peux pas réutiliser le

02:41.960 --> 02:45.700
logger, parce qu'il a été mis au point pour ne fonctionner qu'avec des classes.

02:45.700 --> 02:48.100
Ici, je n'ai pas de fabrique de décorateurs, je dois

02:48.100 --> 02:49.980
juste décorer une fonction comme celle-ci,

02:49.980 --> 02:53.510
mais les arguments que reçoit cette fonction décoratrice dépendent de l'endroit

02:53.510 --> 02:55.230
où nous l'utilisons.

02:55.230 --> 02:58.750
Par exemple, nous pouvons ajouter un décorateur à une propriété.

02:58.750 --> 03:01.120
Ici, je peux ajouter un protocole comme ceci et

03:01.120 --> 03:03.840
si vous ajoutez un décorateur à une propriété, le décorateur

03:03.840 --> 03:05.759
reçoit deux arguments.

03:05.759 --> 03:09.830
Le premier argument, est la cible de la propriété et pour une propriété

03:09.830 --> 03:12.010
d'instance comme celle-ci, que nous appelons

03:12.010 --> 03:15.290
sur une instance si vous travaillez avec elle.

03:15.290 --> 03:19.490
Ce sera le prototype de l'objet qui a été créé.

03:19.490 --> 03:22.140
Si nous avions une propriété statique ici, la cible se

03:22.140 --> 03:24.850
référerait à l'état de la fonction du constructeur.

03:24.850 --> 03:27.770
Je dirai donc ici n'importe laquelle parce que je ne sais pas

03:27.770 --> 03:30.140
exactement quelle structure aura l'objet.

03:30.140 --> 03:35.140
Le deuxième argument que nous obtenons, est simplement le nom de la propriété.

03:35.290 --> 03:37.682
Il peut s'agir d'une chaîne de caractères,

03:37.682 --> 03:40.400
mais aussi d'un symbole.

03:40.400 --> 03:43.470
Nous ne savons pas ce que nous utilisons comme identifiant de propriété.

03:43.470 --> 03:48.037
Et puis ici je vais loger le décorateur de propriété, de sorte que nous

03:49.130 --> 03:51.120
pouvons voir quand cela fonctionne

03:51.120 --> 03:55.980
et je veux une console. cible du journal et aussi le nom de la propriété.

03:55.980 --> 03:57.780
Pour qu'on voie ce qu'il y a dans ces deux valeurs.

03:57.780 --> 04:01.280
Avec cela, si nous sauvegardons de sorte qu'il compile sans erreurs,

04:01.280 --> 04:03.080
et si nous allons sur notre serveur,

04:03.080 --> 04:06.871
nous voyons, le décorateur de propriété est imprimé là-bas.

04:06.871 --> 04:08.630
Et voici le résultat que nous obtenons.

04:08.630 --> 04:13.220
Nous voyons ici que c'est le prototype de notre objet parce que nous

04:13.220 --> 04:15.850
ne voyons pas le titre et le prix ici.

04:15.850 --> 04:18.160
Mais nous voyons obtenir le prix avec la taxe et

04:18.160 --> 04:19.770
en effet les méthodes sont enregistrées

04:19.770 --> 04:21.900
sur le prototype d'un objet.

04:21.900 --> 04:24.240
C'est donc le prototype de notre objet et nous voyons

04:24.240 --> 04:26.640
le titre ici sur la droite, c'est le nom de la propriété

04:26.640 --> 04:28.943
avec laquelle nous travaillons.

04:29.800 --> 04:33.770
Maintenant, quand exactement ce logger s'exécute-t-il ?

04:33.770 --> 04:37.880
Eh bien, comme vous pouvez le constater, puisque je n'instancie jamais aucun

04:37.880 --> 04:41.670
produit, il s'exécute essentiellement lorsque votre définition de classe

04:41.670 --> 04:43.980
est enregistrée par JavaScript.

04:43.980 --> 04:47.660
Il s'exécute donc lorsque vous définissez cette propriété en JavaScript,

04:47.660 --> 04:49.140
dans le cadre de votre classe,

04:49.140 --> 04:50.960
dans le cadre de cette fonction de

04:50.960 --> 04:52.970
construction.

04:52.970 --> 04:54.610
Ce qui est créé ici à la fin.

04:54.610 --> 04:58.053
C'est à ce moment que le décorateur de propriété s'exécute.
