WEBVTT

00:02.440 --> 00:05.240
Narrateur : Nous avons vu comment nous pouvons construire

00:05.240 --> 00:08.120
des choses assez étonnantes avec des décorateurs, des

00:08.120 --> 00:11.740
usines de décorateurs et aussi en utilisant les valeurs de retour des

00:11.740 --> 00:12.790
décorateurs. Dans les

00:12.790 --> 00:14.930
exemples, le décorateur de classe nous permet

00:14.930 --> 00:18.740
de remplacer la classe à laquelle nous avons ajouté le décorateur par une

00:18.740 --> 00:21.400
classe totalement différente, qui s'appuie sur la

00:21.400 --> 00:23.900
classe existante, comme dans notre cas, et qui peut

00:23.900 --> 00:27.230
donc ajouter certaines fonctionnalités.

00:27.230 --> 00:30.490
Vous pouvez maintenant renvoyer des valeurs dans d'autres décorateurs

00:30.490 --> 00:32.030
également, mais pas dans tous.

00:32.030 --> 00:35.430
Ou pas, dans tous les cas, la valeur de retour est respectée.

00:35.430 --> 00:38.150
Les décorateurs permettant de retourner quelque chose

00:38.150 --> 00:41.330
sont les décorateurs que l'on peut ajouter aux méthodes et les décorateurs

00:41.330 --> 00:43.540
que l'on ajoute aux accesseurs.

00:43.540 --> 00:47.400
Donc ici, sur le setter log 2 et log 3 sur la méthode, ces deux décorateurs,

00:47.400 --> 00:51.210
log 2 et log 3, pourraient également retourner quelque chose

00:51.210 --> 00:54.080
et TypeScript l'utiliserait.

00:54.080 --> 00:58.040
Les décorateurs sur les propriétés et sur les paramètres, bien sûr,

00:58.040 --> 01:00.670
peuvent aussi retourner quelque chose mais

01:00.670 --> 01:02.500
TypeScript l'ignorera.

01:02.500 --> 01:05.030
Les valeurs de retour ne sont donc pas prises en charge à

01:05.030 --> 01:07.700
cet endroit ou ne sont pas utilisées pour être précises.

01:07.700 --> 01:09.690
Maintenant, qu'est-ce que vous pouvez retourner sur le log 3 ?

01:09.690 --> 01:12.680
Ainsi sur les décorateurs de méthodes et sur le log 2, ainsi

01:12.680 --> 01:15.320
sur les décorateurs d'accesseurs cependant.

01:15.320 --> 01:19.320
Vous pouvez renvoyer un tout nouveau descripteur de propriété.

01:19.320 --> 01:22.050
Log 2 et log 3, qui sont les deux décorateurs dont je parle,

01:22.050 --> 01:23.110
n'est-ce pas ?

01:23.110 --> 01:28.110
Les journaux 2 et 3 obtiennent tous deux le descripteur de la propriété, de la méthode, pourrait-on

01:28.170 --> 01:30.510
dire, à laquelle ils sont attachés.

01:30.510 --> 01:33.034
Parce qu'un accesseur est un peu comme une méthode,

01:33.034 --> 01:36.220
vous avez une fonction qui est exécutée ici.

01:36.220 --> 01:39.072
Maintenant, le descripteur de propriété est une chose

01:39.072 --> 01:41.980
JavaScript, comme vous le savez, si nous regardons

01:41.980 --> 01:44.500
à nouveau cette page et que nous la rechargeons,

01:44.500 --> 01:47.260
nous voyons que, par exemple pour notre décorateur

01:47.260 --> 01:50.497
d'accesseur, le descripteur de propriété est cet objet ici

01:50.497 --> 01:52.470
qui a les propriétés configurables

01:52.470 --> 01:54.910
et énumérables et get et set.

01:54.910 --> 01:57.660
Et pour le décorateur de méthode, notre descripteur

01:57.660 --> 01:59.330
est cet objet ici qui a également

01:59.330 --> 02:02.290
configurable, énumérable, valeur et inscriptible.

02:02.290 --> 02:04.410
Et ça, c'est du vanilla JavaScript.

02:04.410 --> 02:07.830
Vous avez également des descripteurs de propriétés dans le JavaScript classique.

02:07.830 --> 02:11.710
Ils vous permettent de définir une propriété de manière plus détaillée.

02:11.710 --> 02:14.430
Vous pouvez bien sûr attribuer une valeur à une propriété et,

02:14.430 --> 02:15.990
puisque nous parlons d'une méthode,

02:15.990 --> 02:17.940
la valeur est une fonction dans ce cas, mais vous

02:17.940 --> 02:20.010
pouvez également contrôler si elle est inscriptible,

02:20.010 --> 02:22.910
c'est-à-dire si elle peut être modifiée après sa création, après

02:22.910 --> 02:24.700
la création de l'objet.

02:24.700 --> 02:25.950
Si elle est configurable, c'est-à-dire

02:25.950 --> 02:27.140
si vous pouvez modifier sa configuration

02:27.140 --> 02:29.570
et si vous pouvez supprimer cette propriété.

02:29.570 --> 02:30.770
Et s'il est énumérable,

02:30.770 --> 02:33.166
c'est-à-dire s'il apparaît lorsque vous

02:33.166 --> 02:35.410
bouclez votre objet par exemple.

02:35.410 --> 02:36.810
Et donc une méthode, par exemple,

02:36.810 --> 02:38.790
par défaut, elle est définie sur false, de sorte

02:38.790 --> 02:40.930
que si vous utilisez une boucle for in sur un objet,

02:40.930 --> 02:44.040
cette méthode n'est pas imprimée comme une propriété.

02:44.040 --> 02:45.240
Pour un accesseur, nous

02:45.240 --> 02:47.180
avons aussi configurable et énumérable,

02:47.180 --> 02:49.750
mais nous avons get et set et là, vous pourriez bien

02:49.750 --> 02:53.040
sûr aussi, par exemple, renvoyer un nouveau descripteur qui assigne

02:53.040 --> 02:56.180
une toute nouvelle méthode set ou qui ajoute soudainement aussi

02:56.180 --> 02:58.750
une fonctionnalité get.

02:58.750 --> 03:01.585
Donc ici, dans les logs 2 et 3, vous pouvez renvoyer

03:01.585 --> 03:05.190
un nouvel objet descripteur à la fin et indiquer clairement

03:05.190 --> 03:08.020
à TypeScript que vous le ferez en renvoyant ou

03:08.020 --> 03:10.560
en définissant le type de retour à la propriété

03:10.560 --> 03:14.860
descripteur et là, vous pouvez donc également définir le mot-clé set,

03:14.860 --> 03:17.010
le mot-clé get, la propriété configurable

03:17.010 --> 03:24.800
ou énumérable et changer la façon dont cet accesseur ou cette méthode est configuré.

03:24.800 --> 03:27.560
Maintenant, je ne veux pas faire cela ici pour l'accesseur,

03:27.560 --> 03:29.800
il n'y a rien d'intéressant à faire avec lui, donc

03:29.800 --> 03:32.520
je ne vais pas retourner un descripteur de propriété, mais

03:32.520 --> 03:36.400
je vais vous montrer un exemple avec le décorateur de méthode où nous allons retourner

03:36.400 --> 03:40.080
quelque chose et nous pouvons construire des choses intéressantes avec l'aide

03:40.080 --> 03:42.533
des décorateurs.
