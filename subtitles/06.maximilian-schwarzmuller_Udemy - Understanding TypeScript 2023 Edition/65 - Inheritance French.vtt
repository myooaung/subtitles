WEBVTT

00:02.300 --> 00:03.830
Instructeur : Nous travaillons donc

00:03.830 --> 00:07.350
beaucoup avec notre département ici et j'ai créé mon département de comptabilité.

00:07.350 --> 00:09.610
Maintenant, pour l'application que nous construisons,

00:09.610 --> 00:12.120
nous pouvons avoir besoin de départements, bien sûr, mais

00:12.120 --> 00:14.320
nous pouvons avoir besoin de plus d'informations

00:14.320 --> 00:16.660
pour les types spécifiques de départements.

00:16.660 --> 00:18.830
Nous pouvons avoir un département informatique,

00:18.830 --> 00:22.680
qui a un ID, qui a un nom, qui a des employés, mais qui a aussi des administrateurs,

00:22.680 --> 00:24.900
quelque chose que seul le département

00:24.900 --> 00:28.180
informatique a par exemple.

00:28.180 --> 00:30.340
Nous pourrions avoir le département de

00:30.340 --> 00:34.280
la comptabilité qui pourrait également avoir un ID, un nom et des employés,

00:34.280 --> 00:37.470
mais il pourrait aussi avoir, disons, des rapports.

00:37.470 --> 00:41.030
Un tableau de rapports qu'il a généré, et ainsi de suite.

00:41.030 --> 00:44.541
Il peut donc y avoir des propriétés de base et des méthodes que tous les

00:44.541 --> 00:46.970
départements doivent avoir, mais il peut aussi

00:46.970 --> 00:49.050
y avoir des versions spécialisées de ces

00:49.050 --> 00:51.900
départements avec leurs propres propriétés et méthodes

00:51.900 --> 00:54.660
spécifiques que seul ce département peut avoir.

00:54.660 --> 00:58.100
Un héritage peut nous aider à mettre en œuvre quelque chose comme cela.

00:58.100 --> 01:00.010
Alors, comment pouvons-nous utiliser l'héritage ici ?

01:00.010 --> 01:01.670
Eh bien, nous avons notre département de classe.

01:01.670 --> 01:05.130
Créons maintenant ces départements spécialisés.

01:05.130 --> 01:08.483
Donc ici, nous pourrions avoir un département informatique de classe.

01:09.610 --> 01:14.010
Et dans cette classe ici, je veux utiliser le nom et l'ID et les employés

01:14.010 --> 01:17.270
du département général mais je veux ajouter mes propres

01:17.270 --> 01:19.537
caractéristiques.

01:19.537 --> 01:21.970
Maintenant, nous pouvons hériter de la classe département

01:21.970 --> 01:24.270
en utilisant le mot clé extends ici et ensuite la classe

01:24.270 --> 01:25.970
dont nous voulons hériter.

01:25.970 --> 01:27.530
Dans ce cas, c'est le département.

01:27.530 --> 01:30.600
Maintenant, il est important que vous ne puissiez hériter que d'une seule

01:30.600 --> 01:33.010
classe, donc vous ne pouvez pas hériter de plusieurs classes,

01:33.010 --> 01:34.660
si vous en avez besoin.

01:34.660 --> 01:38.070
Donc maintenant, ici, j'hérite de department et une conséquence

01:38.070 --> 01:40.700
est que si je crée maintenant un département

01:40.700 --> 01:44.560
informatique ici, je peux l'appeler comme ceci, avec ce genre de

01:44.560 --> 01:46.640
constructeur, même si la classe de département

01:46.640 --> 01:49.400
informatique est vide.

01:49.400 --> 01:52.830
Si nous sauvegardons cela, nous voyons effectivement que

01:52.830 --> 01:55.152
cela fonctionne comme avant, parce que

01:55.152 --> 01:59.610
lorsque nous héritons d'une autre classe, la classe qui hérite obtient automatiquement

01:59.610 --> 02:02.870
tout ce que la classe de base, département dans ce cas, a,

02:02.870 --> 02:06.072
y compris son constructeur, donc tant que nous n'ajoutons

02:06.072 --> 02:11.072
pas un constructeur dédié pour cette classe héritée, donc pour cette sous-classe,

02:11.130 --> 02:14.760
le constructeur de la classe de base, donc ce constructeur est

02:14.760 --> 02:17.830
automatiquement utilisé lorsque nous instancions

02:17.830 --> 02:20.800
notre sous-classe.

02:20.800 --> 02:25.170
Donc, à la fin, nous appelons magiquement le constructeur de la classe de base

02:25.170 --> 02:27.562
avec les arguments que nous passons ici.

02:27.562 --> 02:30.350
Maintenant, nous pouvons ajouter notre propre constructeur,

02:30.350 --> 02:33.570
cependant, en ajoutant le constructeur ici dans le département IT et maintenant

02:33.570 --> 02:35.800
vous voyez que j'obtiens des erreurs.

02:35.800 --> 02:38.580
D'une part, nous devons bien sûr accepter les données que nous

02:38.580 --> 02:40.850
recevons ici, bien que nous puissions argumenter

02:40.850 --> 02:44.120
que le nom ne devrait pas être quelque chose que nous devons passer ici.

02:44.120 --> 02:46.430
Et ça ne devrait pas être aussi de la comptabilité.

02:46.430 --> 02:49.110
Mais ici, le nom du département, puisqu'il s'agit de

02:49.110 --> 02:52.563
la classe du département informatique, peut toujours être IT.

02:53.700 --> 02:56.910
Je veux toujours accepter mon ID, mais

02:56.910 --> 03:01.130
maintenant je veux essentiellement le transmettre,

03:01.130 --> 03:04.120
tout comme le nom fixe IT, au constructeur

03:04.120 --> 03:06.420
de département.

03:06.420 --> 03:09.240
Et pour cela, nous avons un mot-clé spécial que nous pouvons,

03:09.240 --> 03:11.120
et dans ce cas nous devons, utiliser.

03:11.120 --> 03:13.210
Et c'est super.

03:13.210 --> 03:15.580
Lorsque vous ajoutez votre propre constructeur

03:15.580 --> 03:18.400
dans une classe qui hérite d'une autre classe, vous

03:18.400 --> 03:21.200
devez ajouter super dans la classe héritière et

03:21.200 --> 03:23.790
l'exécuter comme une fonction.

03:23.790 --> 03:28.070
Super appelle ici le constructeur de la classe de base, donc

03:28.070 --> 03:31.300
le constructeur de département dans ce cas.

03:31.300 --> 03:33.690
Et maintenant l'autre super prend les

03:33.690 --> 03:37.630
arguments du constructeur de la classe parent, l'ID et le nom.

03:37.630 --> 03:41.060
Donc, ici, je peux faire suivre l'ID, donc l'ID que je

03:41.060 --> 03:44.360
reçois ici est juste passé à super, et je peux coder en

03:44.360 --> 03:46.860
dur une valeur pour le nom, comme IT.

03:46.860 --> 03:48.840
Ainsi, le constructeur de la classe

03:48.840 --> 03:52.500
de base sera appelé à l'intérieur de la sous-classe.

03:52.500 --> 03:55.310
Maintenant, il est important que vous appeliez d'abord

03:55.310 --> 03:58.220
super dans votre constructeur avant de faire quoi que ce soit

03:58.220 --> 03:59.700
avec le mot-clé "this".

03:59.700 --> 04:03.860
Donc, si vous prévoyez d'attribuer d'autres propriétés spéciales ici,

04:03.860 --> 04:06.670
vous devez le faire après avoir appelé super.

04:06.670 --> 04:10.346
Et en effet, je veux ajouter mes propres propriétés spéciales ici.

04:10.346 --> 04:13.528
Nous pourrions ajouter nos administrateurs ici.

04:13.528 --> 04:17.800
Disons en tant que privé, ou en tant que public, en fait.

04:17.800 --> 04:20.878
En tant que propriété publique, les admins,

04:20.878 --> 04:25.630
et cela devrait être un tableau de chaînes de caractères, disons.

04:25.630 --> 04:27.780
Dans ce cas, je ne veux pas transmettre

04:27.780 --> 04:31.460
ces données à ma classe de base, car la classe de département

04:31.460 --> 04:34.670
ne veut pas de données d'administrateur.

04:34.670 --> 04:38.800
Au lieu de cela, je veux stocker ces données dans une propriété du département

04:38.800 --> 04:42.150
informatique. Nous pouvons donc ajouter admins comme un

04:42.150 --> 04:44.922
champ qui prend un couple d'administrateurs et

04:44.922 --> 04:47.290
stocker admins dans ce champ, ou parce que

04:47.290 --> 04:49.070
j'utilise public ici, j'utilise

04:49.070 --> 04:52.020
déjà ce raccourci où une propriété du même nom sera

04:52.020 --> 04:55.160
créée et les données que nous introduisons dans cet argument

04:55.160 --> 04:57.530
sont stockées dans cette propriété créée

04:57.530 --> 05:00.148
automatiquement.

05:00.148 --> 05:03.710
Toujours pour qu'il soit clair que le super doit être appelé en

05:03.710 --> 05:07.610
premier, je vais prendre la voie la plus longue, ajouter les admins

05:07.610 --> 05:12.610
ici, comme ça, et ensuite ici dire, ceci. admins = admins.

05:13.260 --> 05:15.160
Là encore, le raccourci serait plus court.

05:15.160 --> 05:17.830
Je fais cela ici pour montrer et rendre très clair

05:17.830 --> 05:21.020
que si vous utilisez quelque chose qui utilise le mot-clé

05:21.020 --> 05:24.480
"this", vous devez le faire après avoir appelé super.

05:24.480 --> 05:27.640
Et avec cela, si nous sauvegardons, je vais avoir une erreur, parce

05:27.640 --> 05:29.530
que je ne passe pas dans les admins, alors

05:29.530 --> 05:30.920
faisons-le ici.

05:30.920 --> 05:33.920
Max est le seul administrateur que je fais passer ici.

05:33.920 --> 05:36.950
Maintenant nous pouvons sauvegarder cela et le compiler sans erreurs

05:36.950 --> 05:39.910
et maintenant ici, en effet nous voyons notre département ici.

05:39.910 --> 05:41.840
Elle porte désormais le nom de IT.

05:41.840 --> 05:44.670
Et si nous consignons l'ensemble du département,

05:44.670 --> 05:49.670
nous pourrons peut-être renommer le service de comptabilité en service informatique,

05:50.220 --> 05:54.250
puis en console. Connectez-vous ici.

05:54.250 --> 05:57.570
Bien sûr, le renommage était facultatif, il est juste plus logique, étant donné

05:57.570 --> 06:00.160
que nous construisons un département informatique ici.

06:00.160 --> 06:02.510
Maintenant que j'ai consigné en console l'ensemble

06:02.510 --> 06:06.110
du département, nous voyons en effet que nous avons des administrateurs,

06:06.110 --> 06:11.110
mais aussi des employés et tout ce que j'ai configuré dans ma classe de département ici.

06:12.000 --> 06:13.990
C'est donc l'héritage en action, une

06:13.990 --> 06:16.520
fonctionnalité très utile, parce que maintenant,

06:16.520 --> 06:20.770
bien sûr, nous pouvons également créer notre département de comptabilité ici

06:20.770 --> 06:23.260
en étendant le département et là nous pouvons

06:23.260 --> 06:27.030
alors ajouter nos choses spécifiques à la comptabilité.

06:27.030 --> 06:29.540
Ainsi, nous pouvons toujours utiliser un constructeur

06:29.540 --> 06:31.700
ici, et maintenant peut-être avec le raccourci,

06:31.700 --> 06:34.400
accepter un couple de rapports ici qui pourrait être une

06:34.400 --> 06:36.170
propriété privée et ensuite nous avons

06:36.170 --> 06:40.950
addReport qui prend le texte, qui devrait être une chaîne, et ensuite nous atteignons les rapports

06:40.950 --> 06:45.360
ici et poussons le texte comme un élément dans le rapport et peut-être nous avons aussi getReports

06:45.360 --> 06:56.990
ici et là nous avons juste la console.

06:56.990 --> 06:56.990
log (this. rapports)

06:57.563 --> 07:00.860
ou nous l'appelons printReports, ce qui est plus logique.

07:00.860 --> 07:02.720
Et maintenant nous aurions une version très

07:02.720 --> 07:04.890
spéciale d'un département avec deux méthodes que

07:04.890 --> 07:06.740
le département de base n'a pas et avec une

07:06.740 --> 07:08.100
propriété supplémentaire que

07:08.100 --> 07:09.840
le département de base n'a pas.

07:09.840 --> 07:13.000
Et pourtant, nous recevons tout du département de base.

07:13.000 --> 07:15.560
Le nom, que je vais définir comme étant la comptabilité

07:15.560 --> 07:17.950
ici, et l'ID, que nous transmettons également au

07:17.950 --> 07:20.260
constructeur du département de base.

07:20.260 --> 07:22.120
Et donc avec cela, en bas, si

07:22.120 --> 07:24.770
nous créons notre comptabilité ici

07:24.770 --> 07:27.510
avec new AccountingDepartment, nous

07:27.510 --> 07:31.750
pouvons introduire notre ID et ensuite nos rapports.

07:31.750 --> 07:34.340
Disons que c'est un tableau vide au départ.

07:34.340 --> 07:39.340
Ensuite, nous pouvons appeler addReport, quelque chose s'est mal passé, jamais

07:40.550 --> 07:43.446
si bien que ça bien sûr, dans la comptabilité je

07:43.446 --> 07:48.446
suppose, et puis nous pouvons aussi imprimer nos rapports ici comme ça et avec tout

07:50.070 --> 07:52.630
ça, ça se compile très bien et nous obtenons

07:52.630 --> 07:55.710
le rapport ici et nous voyons, le département IT par

07:55.710 --> 07:58.890
exemple, n'aurait pas de rapports.

07:58.890 --> 08:01.820
Le département de la comptabilité le fait grâce à l'héritage, où nous

08:01.820 --> 08:05.623
héritons de certaines fonctionnalités et ajoutons nos propres fonctionnalités.
