WEBVTT

00:02.560 --> 00:03.680
Instrutor: Agora,

00:03.680 --> 00:06.770
além destas diferentes sintaxes de importação e exportação,

00:06.770 --> 00:10.160
que são boas de se saber, há uma outra coisa que você tem que

00:10.160 --> 00:12.583
entender e conhecer.

00:13.430 --> 00:16.900
No estado de projeto, não estamos apenas exportando uma classe ou uma

00:16.900 --> 00:20.690
interface, como o estamos fazendo em todos os outros arquivos, mas na verdade

00:20.690 --> 00:23.810
estamos exportando um estado constante do projeto.

00:23.810 --> 00:26.710
Agora, a questão é que estamos importando esta constante

00:26.710 --> 00:28.660
em vários outros arquivos.

00:28.660 --> 00:31.930
Estamos importando na lista de projetos. ts, também estamos importando

00:31.930 --> 00:35.480
na entrada do projeto. ts arquivar.

00:35.480 --> 00:38.490
Portanto, importamos do mesmo arquivo várias vezes.

00:38.490 --> 00:41.560
A questão é se este código neste arquivo, ou seja,

00:41.560 --> 00:44.600
a criação desta constante aqui, ela é executada

00:44.600 --> 00:48.920
uma ou duas vezes ou com que freqüência ela é executada?

00:48.920 --> 00:53.240
Uma vez por declaração de importação ou uma vez para a aplicação inteira?

00:53.240 --> 00:57.980
Acontece que ele funciona uma vez quando o arquivo é importado pela

00:57.980 --> 01:01.000
primeira vez por qualquer outro arquivo.

01:01.000 --> 01:05.280
Se outro arquivo importar esse mesmo arquivo novamente, ele não

01:05.280 --> 01:07.320
será executado novamente.

01:07.320 --> 01:08.970
Também podemos validar isto adicionando

01:08.970 --> 01:11.210
aqui uma declaração de registro do console.

01:11.210 --> 01:12.370
Em funcionamento.

01:12.370 --> 01:15.893
Veremos que isto só será impresso uma vez mesmo que estejamos

01:15.893 --> 01:20.190
importando projeto-estado. ts ambos aqui na lista de

01:20.190 --> 01:22.360
projetos. ts e na entrada

01:22.360 --> 01:24.620
do projeto. ts arquivar.

01:24.620 --> 01:27.740
Mesmo assim, isto só será impresso para o console uma única vez.

01:27.740 --> 01:28.610
Você o vê aqui.

01:28.610 --> 01:29.443
Em funcionamento.

01:29.443 --> 01:31.350
Ela nunca será impressa uma segunda vez,

01:31.350 --> 01:32.653
não importa o que façamos.

01:33.720 --> 01:36.360
Portanto, isto só acontece uma vez.

01:36.360 --> 01:38.620
É assim que ele se comporta e isto é apenas algo que você

01:38.620 --> 01:41.723
tem que saber para que possa planejar seu aplicativo adequadamente.
