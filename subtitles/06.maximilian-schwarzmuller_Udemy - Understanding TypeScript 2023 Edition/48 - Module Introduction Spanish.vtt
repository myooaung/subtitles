WEBVTT

00:02.260 --> 00:04.220
Ahora que tenemos una buena comprensión

00:04.220 --> 00:08.410
de las características básicas de typescript y de lo que éste añade.

00:08.410 --> 00:10.070
Y también entendemos cómo funciona

00:10.070 --> 00:12.320
el compilador de tipos de letra.

00:12.320 --> 00:13.760
Echemos un vistazo a lo que ofrece

00:13.760 --> 00:15.020
typescript, especialmente

00:15.020 --> 00:18.700
en lo que respecta a la sintaxis moderna de Javascript.

00:18.700 --> 00:22.130
Ahora, este es un término difícil, bastante vago, pero al final lo que

00:22.130 --> 00:23.360
quiero decir con eso, son

00:23.360 --> 00:26.380
características de Javascript que han estado alrededor de

00:26.380 --> 00:28.410
unos años por ahora y que están bien soportados

00:28.410 --> 00:30.790
en los navegadores modernos, pero que no necesariamente

00:30.790 --> 00:33.290
se ejecutan en todos, especialmente en los navegadores

00:33.290 --> 00:34.970
más antiguos y allí, especialmente

00:34.970 --> 00:37.570
en Internet Explorer.

00:37.570 --> 00:40.210
Me refiero a cosas como Let, Cons, funciones

00:40.210 --> 00:43.240
de flecha, sintaxis de desestructuración, operador

00:43.240 --> 00:45.350
de propagación, etc.

00:45.350 --> 00:48.220
Así que si eso es algo que ya sabes absolutamente,

00:48.220 --> 00:51.950
puedes saltarte este módulo porque también refrescará los conocimientos

00:51.950 --> 00:54.230
sobre estos temas, pero también explicará

00:54.230 --> 00:56.240
lo que hace typescript con estas cosas,

00:56.240 --> 00:59.000
con esta sintaxis.

00:59.000 --> 01:01.450
Sin embargo, la historia corta es que la tipografía la compila

01:01.450 --> 01:02.980
de tal manera que funciona.

01:02.980 --> 01:04.510
No obstante, echaremos un vistazo

01:04.510 --> 01:05.940
a eso, pero puedes saltarte

01:05.940 --> 01:08.290
este módulo si todo eso ya lo sabes.

01:08.290 --> 01:10.130
Puedes echar un vistazo al plan de estudios

01:10.130 --> 01:12.400
y ver si hay alguna conferencia en este módulo

01:12.400 --> 01:14.260
que te pueda interesar, si no, nos vemos

01:14.260 --> 01:16.450
después de este módulo.

01:16.450 --> 01:18.140
Si no estás seguro de estas características,

01:18.140 --> 01:20.500
si conoces Javascript, con respecto a Var y Zon,

01:20.500 --> 01:22.610
pero no sabes lo que significa realmente la

01:22.610 --> 01:24.810
palabra clave Let o Cons, entonces deberías

01:24.810 --> 01:27.820
quedarte conmigo y sumergirte en este módulo.

01:27.820 --> 01:29.860
Para ello tengo un nuevo proyecto de configuración,

01:29.860 --> 01:31.450
lo encontrarás adjunto.

01:31.450 --> 01:34.780
Y siempre hay que ejecutar primero la instalación de NPM en estos

01:34.780 --> 01:35.613
proyectos.

01:35.613 --> 01:37.610
No se olvide de esto para instalar todas las dependencias

01:37.610 --> 01:39.530
y, a continuación, siempre NPM inicio para poner

01:39.530 --> 01:41.390
en marcha ese servidor de desarrollo.

01:41.390 --> 01:44.480
Ahora, este es un proyecto básicamente como lo teníamos antes

01:44.480 --> 01:46.280
al final del módulo pasado.

01:46.280 --> 01:49.550
archivo tsconfig con una configuración bastante estricta

01:50.470 --> 01:53.210
Una aplicación. ts aquí y esta carpeta se generará

01:53.210 --> 01:54.740
automáticamente.

01:54.740 --> 01:57.100
Por cierto, mantén este servidor de desarrollo

01:57.100 --> 01:58.360
funcionando por supuesto

01:58.360 --> 02:00.610
como lo hiciste antes, y ahora siempre podemos

02:00.610 --> 02:03.300
compilar nuestro código con el comando TSC aquí.

02:03.300 --> 02:06.670
O, y eso es lo que haré aquí, TSC dash W para entrar en el modo de

02:06.670 --> 02:09.160
vigilancia y asegurarse de que recompilamos

02:09.160 --> 02:10.980
cada vez que cambiamos algo.

02:10.980 --> 02:12.900
Así que esta es la configuración de nuestro proyecto

02:12.900 --> 02:15.030
y ahora nos sumergiremos en algunas características

02:15.030 --> 02:17.790
de la próxima generación de Javascript, que soporta typescript y

02:17.790 --> 02:19.390
lo que debe tener en cuenta.
