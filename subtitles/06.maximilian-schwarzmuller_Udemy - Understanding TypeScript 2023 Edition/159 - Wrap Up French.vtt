WEBVTT

00:02.190 --> 00:05.030
Instructeur : Nous avons donc ajouté webpack, un outil

00:05.030 --> 00:08.070
très important qui nous permet de regrouper nos différents

00:08.070 --> 00:09.690
fichiers en un seul.

00:09.690 --> 00:12.090
Cela nous aide vraiment à diminuer le nombre de

00:12.090 --> 00:14.500
requêtes HTTP effectuées et, par conséquent,

00:14.500 --> 00:16.500
à accélérer notre application.

00:16.500 --> 00:19.840
Si vous travaillez avec un grand nombre de fichiers individuels,

00:19.840 --> 00:22.270
ce qui est généralement le cas dans les projets

00:22.270 --> 00:24.360
plus importants, des outils comme webpack

00:24.360 --> 00:26.910
sont indispensables et webpack est l'outil le plus

00:26.910 --> 00:28.200
important et le plus proéminent

00:28.200 --> 00:31.190
qui vous aide dans ce domaine.

00:31.190 --> 00:33.730
Vous voyez que webpack est hautement configurable et comme

00:33.730 --> 00:36.190
je l'ai mentionné à plusieurs reprises, la documentation

00:36.190 --> 00:39.630
officielle de webpack est l'endroit où aller pour tout apprendre.

00:39.630 --> 00:42.120
Sur les différents chargeurs, les différents paramètres d'erreur

00:42.120 --> 00:44.770
que vous pouvez configurer et comment cela fonctionne, en général.

00:44.770 --> 00:47.109
Il faut donc se plonger dans cette documentation

00:47.109 --> 00:49.660
si vous voulez devenir un maître de webpack et si vous

00:49.660 --> 00:52.720
voulez avoir une configuration plus élaborée.

00:52.720 --> 00:55.610
Cependant, notre configuration de base nous permet

00:55.610 --> 00:58.200
déjà de compiler les fichiers TypeScript avec

00:58.200 --> 01:00.940
webpack, puis de regrouper tous les résultats

01:00.940 --> 01:03.820
en un seul paquet. fichier js.

01:03.820 --> 01:06.500
Nous avons également établi une configuration pour

01:06.500 --> 01:09.050
le développement qui facilite le débogage et nous

01:09.050 --> 01:11.510
donne des messages d'erreur plus utiles.

01:11.510 --> 01:13.250
Et nous obtenons une configuration

01:13.250 --> 01:15.570
de production qui nous donne un code hautement

01:15.570 --> 01:17.840
optimisé que nous pouvons ensuite déployer

01:17.840 --> 01:21.160
sur un serveur pour lui envoyer le moins de code possible.

01:21.160 --> 01:22.210
Et c'est tout.

01:22.210 --> 01:25.740
webpack est vraiment un outil essentiel et il est très important

01:25.740 --> 01:26.573
de pouvoir l'utiliser

01:26.573 --> 01:30.260
et d'avoir une configuration qui fonctionne vraiment.

01:30.260 --> 01:33.800
Il s'agit donc d'une utilisation incontournable dans tout projet moderne, je dirais,

01:33.800 --> 01:36.710
et dans ce module, vous apprendrez comment vous pouvez commencer à l'utiliser

01:36.710 --> 01:38.763
dans vos projets TypeScript.
