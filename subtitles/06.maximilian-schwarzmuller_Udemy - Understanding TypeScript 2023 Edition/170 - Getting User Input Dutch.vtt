WEBVTT

00:02.140 --> 00:03.970
-Dus in onze app. ts bestand, moeten

00:03.970 --> 00:08.100
we hier controleren op het indienen van dit formulier.

00:08.100 --> 00:09.070
Daarvoor maak ik hier

00:09.070 --> 00:10.800
een formulierconstante en bereik

00:10.800 --> 00:12.170
ik het formulier met de document

00:12.170 --> 00:14.310
query selector, waarbij ik vraag naar de

00:14.310 --> 00:16.080
formuliertag.

00:16.080 --> 00:17.840
En omdat we maar één formuliertag in het

00:17.840 --> 00:18.820
hele document hebben,

00:18.820 --> 00:20.170
halen we die natuurlijk op.

00:21.150 --> 00:23.500
Dus dit geeft ons toegang tot het formulier.

00:23.500 --> 00:26.163
Op dat formulier voeg ik een event listener toe.

00:29.630 --> 00:31.873
En ik luister naar de submit event.

00:33.290 --> 00:35.330
Nu zou deze vorm natuurlijk null kunnen zijn,

00:35.330 --> 00:36.163
zoals altijd, maar

00:36.163 --> 00:37.430
we weten dat het niet zo zal zijn,

00:37.430 --> 00:39.480
dus kunnen we dit goede oude uitroepteken toevoegen

00:39.480 --> 00:41.683
om TypeScript te vertellen dat dit niet null zal

00:41.683 --> 00:42.850
zijn.

00:42.850 --> 00:45.080
En dan hebben we hier de event listener,

00:45.080 --> 00:46.490
en die zal een functie

00:46.490 --> 00:47.940
definiëren die geactiveerd

00:47.940 --> 00:49.160
moet worden en dat

00:49.160 --> 00:51.710
is de zoekadres handler functie laten

00:51.710 --> 00:53.610
we zeggen.

00:53.610 --> 00:55.420
En deze functie moet worden geactiveerd

00:55.420 --> 00:58.160
telkens als dit formulier wordt ingediend.

00:58.160 --> 01:00.880
Nu krijgen we in deze functie het gebeurtenisobject

01:00.880 --> 01:04.900
en ik roep hier allereerst gebeurtenispreventie standaard op.

01:04.900 --> 01:07.240
En laten we TypeScript hier ook wat hints geven

01:07.240 --> 01:09.980
en laten we het informeren dat dit een event is, zodat

01:09.980 --> 01:12.370
het weet dat dit preventieve standaard commando

01:12.370 --> 01:14.033
hier zal bestaan.

01:14.870 --> 01:17.440
Daarmee voorkomen we dat het formulier wordt ingediend,

01:17.440 --> 01:19.900
we zorgen ervoor dat er geen verzoek wordt verzonden,

01:19.900 --> 01:21.980
maar nu wil ik toegang krijgen tot het adres dat

01:21.980 --> 01:23.630
de gebruiker heeft ingevoerd.

01:23.630 --> 01:24.900
Nu moet dat niet al te moeilijk

01:24.900 --> 01:27.820
zijn, we hebben hier een ingang en die heeft een idee van adres,

01:27.820 --> 01:30.360
dus uiteindelijk willen we de waarde krijgen die in de

01:30.360 --> 01:31.850
ingang is ingevoerd.

01:31.850 --> 01:33.780
En we kunnen dit hier doen door gewoon

01:33.780 --> 01:36.010
een andere constante te definiëren, adres

01:36.010 --> 01:37.610
invoer, die we krijgen met document

01:37.610 --> 01:40.500
query selector, of eigenlijk element krijgen op

01:40.500 --> 01:43.210
ID en dan de ID was adres dat was het idee ondertekend

01:44.050 --> 01:47.860
om dit element, en net als voorheen weten we dat dit nooit null zal

01:47.860 --> 01:52.823
zijn, dus we kunnen dit uitroepteken hier toevoegen.

01:53.770 --> 01:58.730
En daarmee hebben we ons ingevoerde adres hier door toegang

01:58.730 --> 02:00.370
te krijgen tot adres

02:00.370 --> 02:02.490
invoer punt waarde nu waarom

02:02.490 --> 02:03.700
houdt TypeScript

02:05.960 --> 02:09.350
niet van waarde hier?

02:09.350 --> 02:12.020
Omdat het niet weet dat wat we hier ophalen

02:12.020 --> 02:14.500
een html input element is.

02:14.500 --> 02:16.000
Dus laten we TypeScript vertellen.

02:16.000 --> 02:18.930
Laten we dit omzetten naar een html input element

02:18.930 --> 02:20.820
met de typecasting hier.

02:20.820 --> 02:23.650
Nu klaagt TypeScript hier niet meer over die waardetoegang,

02:23.650 --> 02:25.040
en geeft ons het ingevoerde

02:25.040 --> 02:26.923
adres.

02:27.770 --> 02:29.710
En nu moeten we dit naar

02:30.570 --> 02:31.740
Google's API

02:32.970 --> 02:34.180
sturen.

02:34.180 --> 02:37.850
Laten we dat doen met behulp van een ander pakket van derden in de

02:37.850 --> 02:38.943
volgende lezing.
