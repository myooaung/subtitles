WEBVTT

00:02.270 --> 00:04.610
Istruttore: Questo è il codice che abbiamo

00:04.610 --> 00:08.580
ottenuto alla fine dell'ultima sezione, il nostro progetto pratico, un

00:08.580 --> 00:11.050
sacco di codice in un unico file, e probabilmente

00:11.050 --> 00:14.050
non si tratta di un progetto super complesso.

00:14.050 --> 00:17.420
Si possono sicuramente scrivere progetti e applicazioni molto

00:17.420 --> 00:20.380
più elaborati e si finirebbe per avere molto più codice,

00:20.380 --> 00:23.640
quindi mettere tutto in un unico file probabilmente non è quello

00:23.640 --> 00:25.000
che si vuole fare.

00:25.000 --> 00:26.390
Quindi, quello che si

00:26.390 --> 00:28.740
vuole fare è scrivere codice modulare,

00:28.740 --> 00:31.120
il che significa semplicemente dividere

00:31.120 --> 00:34.010
il codice in più file, in modo che ogni file rimanga

00:34.010 --> 00:37.157
gestibile e manutenibile, e poi importare ed esportare

00:37.157 --> 00:39.640
da e verso questi file e assicurarsi che

00:39.640 --> 00:42.100
tutti i file siano collegati, ma che siano

00:42.100 --> 00:44.740
collegati da Typescript o dal browser o da

00:44.740 --> 00:47.990
qualche strumento di compilazione di terze parti

00:47.990 --> 00:54.500
e non da voi, unendoli tutti in un unico file durante lo sviluppo.

00:54.500 --> 00:55.940
In questo modulo vedremo

00:55.940 --> 00:59.910
due opzioni principali che ci aiutano a organizzare il nostro

00:59.910 --> 01:02.160
codice in più file, non solo in teoria

01:02.160 --> 01:04.930
ma anche in pratica.

01:04.930 --> 01:07.320
Naturalmente applicheremo questi diversi approcci

01:07.320 --> 01:09.453
e vedremo come dividere il nostro codice.
