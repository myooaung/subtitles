WEBVTT

00:02.220 --> 00:03.053
-: هيا لنذهب.

00:03.053 --> 00:04.950
لقد حصلنا على خيار File

00:04.950 --> 00:07.730
هنا ، والآن لا يهمنا هذا الخيار الآن

00:07.730 --> 00:09.440
، ولن يعمل الآن.

00:09.440 --> 00:12.340
أكثر إثارة للاهتمام بالنسبة لنا هو outDIR و rootDir.

00:12.340 --> 00:14.720
كلما زاد حجم مشروعك ، زادت

00:14.720 --> 00:17.640
رغبتك في تنظيم ملفاتك.

00:17.640 --> 00:19.690
عادةً ، لا تريد فقط أن تكون

00:19.690 --> 00:21.770
ملفاتك موجودة هنا في مجلد

00:21.770 --> 00:24.120
المشروع على مستوى الجذر.

00:24.120 --> 00:26.580
بدلاً من ذلك ، ما تراه غالبًا في المشاريع

00:26.580 --> 00:28.080
هو أن لديك مجلد مصدر ،

00:28.080 --> 00:29.790
ولديك مجلد dist ، التالي

00:29.790 --> 00:31.240
، التالي.

00:31.240 --> 00:35.690
لذا ، فإن مجلد Dist لديه وظيفة الاحتفاظ بجميع المخرجات ، لذلك لنفترض

00:35.690 --> 00:37.800
أن جميع ملفات JavaScript.

00:37.800 --> 00:41.380
وقد يحتوي المجلد المصدر على جميع ملفات TypeScript الخاصة بنا.

00:41.380 --> 00:44.643
حتى نتمكن من نقل ملفات TypeScript إلى المجلد المصدر

00:44.643 --> 00:47.430
، وإذا قمت الآن بحذف مجلد JavaScript ، فإننا

00:47.430 --> 00:49.891
نواجه مشكلة أنه إذا قمنا بتجميع كل شيء

00:49.891 --> 00:53.167
، فسيتم تجميع ملفات TypeScript هذه لأن TypeScript

00:53.167 --> 00:55.768
، فإن المترجم يبحث في المجلدات الفرعية

00:55.768 --> 01:00.050
، ولكن يقع الإخراج بجوار ملفات الإدخال الخاصة بنا.

01:00.050 --> 01:02.760
وهذا شيء يمكننا التحكم فيه مع outDir ، على

01:02.760 --> 01:03.660
سبيل المثال.

01:03.660 --> 01:07.117
إذا وضعنا outDir ، فيمكننا إخبار الأنواع

01:07.117 --> 01:10.900
بالمترجم حيث يجب تخزين الملف الذي تم إنشاؤه.

01:10.900 --> 01:13.580
يمكننا ضبط هذا على التوزيع.

01:13.580 --> 01:17.037
الآن إذا قمنا بذلك ، إذا قمت بتشغيل بذور chia ، فسترى

01:17.037 --> 01:19.560
أن ملفات JavaScript ، في الواقع ، لا

01:19.560 --> 01:21.500
يتم وضعها في المجلد المصدر ،

01:21.500 --> 01:23.170
ولكن في مجلد dist.

01:23.170 --> 01:26.340
الآن علينا فقط تعديل فهرسنا. html ، وهناك نقطة في

01:26.340 --> 01:28.540
dist / app. js و dist /

01:28.540 --> 01:31.630
analytics. js أو حرك الفهرس بدلاً

01:31.630 --> 01:33.880
من ذلك. html في مجلد dist

01:33.880 --> 01:36.172
ولكن بعد ذلك لن يعمل خادم def بشكل

01:36.172 --> 01:37.550
صحيح بعد الآن.

01:37.550 --> 01:39.875
لذلك دعونا فقط نعدل هذه

01:39.875 --> 01:44.140
الواردات ومع ذلك ، لا يزال لدينا تطبيق يعمل

01:44.140 --> 01:45.270
، كما ترون ،

01:45.270 --> 01:48.480
ولكن الآن بهيكل مشروع أنظف.

01:48.480 --> 01:49.650
الشيء الجيد الآن هو

01:49.650 --> 01:51.530
، إذا كان لدينا مجلد فرعي هنا

01:51.530 --> 01:52.980
، مجلد تحليلات ، دعنا نقول

01:52.980 --> 01:54.893
، وكان لدينا ملف TypeScript هناك

01:54.893 --> 01:57.350
، ثم إذا أعدنا الترجمة ، ولا يهم إذا قمت

01:57.350 --> 02:00.373
بذلك باستخدام هذا الأمر أو وضع المشاهدة ، سيتم

02:00.373 --> 02:03.300
نسخ بنية المجلد هذه التي لديك المجلد المصدر

02:03.300 --> 02:05.640
جميعًا في مجلد dist وهو ، بالطبع ، مناسب

02:05.640 --> 02:08.813
جدًا لأن ذلك يضمن إمكانية استيراد الملفات بشكل

02:08.813 --> 02:12.670
أساسي كما يمكنك استيرادها في المجلد المصدر ، أيضًا ، حتى يتم

02:12.670 --> 02:14.110
الاحتفاظ بالبنية التي

02:14.110 --> 02:16.640
أعددتها هناك.

02:16.640 --> 02:18.800
الآن يمكنك أيضًا تعيين الدليل

02:18.800 --> 02:21.230
الجذر وتعيين هذا تحديدًا في المجلد

02:21.230 --> 02:23.800
حيث يتم تخزين ملفاتك ، كما في هذا

02:23.800 --> 02:25.202
المثال ، المصدر ،

02:25.202 --> 02:30.030
للتأكد من أن أنواع المترجم لا تظهر في مجلداتنا.

02:30.030 --> 02:31.530
هذا أيضًا شيء يمكنك فعله

02:31.530 --> 02:34.003
بخيار التضمين هناك ، أليس كذلك؟

02:34.870 --> 02:36.007
ولكن مع الدليل

02:36.007 --> 02:38.781
الجذر ، لن تنظر أنواع المترجم فقط إلى

02:38.781 --> 02:41.450
المجلد المصدر هذا فحسب ، بل يتأكد

02:41.450 --> 02:44.700
أيضًا من أن بنية المشروع ، التي قمت بإعدادها

02:44.700 --> 02:45.680
هناك ، محفوظة

02:45.680 --> 02:47.880
في مجلد توزيع.

02:47.880 --> 02:50.020
الآن فعلت ذلك افتراضيًا من قبل ، كما رأيت

02:50.020 --> 02:51.820
، لكن ضع في اعتبارك أنه قبل ذلك كان

02:51.820 --> 02:54.280
سيشمل أي ملفات TypeScript هنا ، كل بداية المصدر

02:54.280 --> 02:55.699
، لذلك ، على سبيل المثال ، إذا

02:55.699 --> 02:58.830
قمت بالتعليق على هذا مؤقتًا إذا كان لدينا مجلد مستخدم هنا

02:58.830 --> 03:03.280
في المستوى الأعلى مع المستخدم.

03:03.280 --> 03:03.280
ts

03:03.280 --> 03:06.170
حيث لدينا اسم مستخدم Max ، دعنا نقول ، إذا

03:06.170 --> 03:07.750
قمنا بتجميع هذا ، فسترى

03:07.750 --> 03:09.752
جميعًا مجلد المستخدم هذا في

03:09.752 --> 03:11.420
مجلد dist.

03:11.420 --> 03:13.810
والآن تم تضمين المجلد المصدر أيضًا

03:13.810 --> 03:17.200
لأن لدينا الآن ملفًا مطبوعًا على مستوى أعلى ، وبالتالي

03:17.200 --> 03:19.950
يعتقد المترجم المنسوخ أن مشروعنا بالكامل

03:19.950 --> 03:21.780
مرة أخرى هو المدخلات ويقوم

03:21.780 --> 03:25.970
بتكرار بنية المجلد التي يجدها هناك في مجلد dist.

03:25.970 --> 03:28.960
الآن هذا ، بالطبع ، ليس ما نريده وهذا هو المكان

03:28.960 --> 03:30.120
الذي يساعدنا فيه

03:30.976 --> 03:32.660
خيار rootDir.

03:32.660 --> 03:34.020
الآن إذا قمنا بتعيين هذا

03:34.020 --> 03:35.950
على المصدر ، حتى لو كان لدينا مجلدات

03:35.950 --> 03:38.630
أخرى بها ملفات TypeScript هناك على مستوى الجذر

03:38.630 --> 03:40.400
، فلن يتم تضمينها في الإخراج

03:40.400 --> 03:41.830
ولن ينتهي المجلد المصدر

03:41.830 --> 03:43.780
نفسه فجأة هناك.

03:43.780 --> 03:46.480
غالبًا ما تقوم بتعيين كل من rootDir و outDir ليكونا

03:46.480 --> 03:49.650
واضحين حقًا فيما يتعلق بالمكان الذي تقوم فيه بإدخال الملفات

03:49.650 --> 03:52.040
والمكان الذي سيتم إنشاء ملفات الإخراج فيه.

03:52.040 --> 03:54.870
إذا تقدمنا ، يمكننا تجاهل المركب.

03:54.870 --> 03:57.010
يمكننا إلقاء نظرة على إزالة التعليقات.

03:57.010 --> 03:58.780
يجب أن يكون واضحًا تمامًا

03:58.780 --> 04:00.850
إذا قمت بتعيين هذا ، فستتم إزالة

04:00.850 --> 04:04.450
أي تعليقات قد تكون لديك في ملفات TypeScript الخاصة

04:04.450 --> 04:08.000
بك في ملفات JavaScript المترجمة.

04:08.000 --> 04:11.200
لذلك إذا قمت بالتعليق على هذا وقمت بتجميع الكود الخاص بي ، فسترى

04:11.200 --> 04:12.970
تطبيقًا. ts ، لدي تعليق.

04:12.970 --> 04:14.990
تطبيق. شبيبة ، ليس هناك.

04:14.990 --> 04:18.330
لذلك يمكنك القيام بذلك لجعل ملفاتك أصغر

04:18.330 --> 04:20.950
وقد يكون الجهد خيارًا جيدًا.

04:20.950 --> 04:23.820
يمكنك أيضًا تعيين noEmit إذا كنت لا تريد إنشاء

04:23.820 --> 04:25.600
أي ملفات JavaScript.

04:25.600 --> 04:27.130
الآن قد يبدو هذا غريبًا

04:27.130 --> 04:29.190
لأن هذه هي فكرة TypeScript ، ولكن

04:29.190 --> 04:30.700
إذا كنت تريد فقط التحقق

04:30.700 --> 04:32.420
مما إذا كانت ملفاتك صحيحة

04:32.420 --> 04:35.030
ولكنك لا تريد كتابة كل ملفات الإخراج هذه

04:35.030 --> 04:37.680
، لتوفير بعض الوقت ، على سبيل المثال ، في

04:37.680 --> 04:39.120
مشروع أكبر ، ثم يمكنك

04:39.120 --> 04:41.792
ضبط هذا على "صحيح" فقط لجعل أنواع المترجم

04:41.792 --> 04:45.460
تتحقق من ملفاتك وتبلغ عن أي أخطاء محتملة دون إنشاء ملف

04:45.460 --> 04:47.903
إخراج فعليًا.

04:47.903 --> 04:50.490
importHelpers ليس مهمًا حقًا بالنسبة لنا

04:50.490 --> 04:52.065
، وهنا يمكننا تجاهل ذلك.

04:52.065 --> 04:54.570
يعد التكرار خيارًا متقدمًا.

04:54.570 --> 04:57.150
من المثير للاهتمام أن تقوم بترجمة التعليمات

04:57.150 --> 05:00.295
البرمجية الخاصة بك إلى إصدارات أقدم من JavaScript

05:00.295 --> 05:02.690
وتعمل بأربع حلقات.

05:02.690 --> 05:05.798
ثم في بعض السيناريوهات النادرة ، قد تواجه مشكلات

05:05.798 --> 05:08.378
حيث لا يعمل التجميع بشكل صحيح.

05:08.378 --> 05:10.440
يمنحك هذا الخيار ، إذا قمت بتشغيله ،

05:10.440 --> 05:12.770
تجميعًا أكثر دقة ، والذي سيعمل في هذه الحالات

05:12.770 --> 05:15.280
المتخصصة ، لذلك قد تعتقد أنه يجب عليك دائمًا

05:15.280 --> 05:17.210
تشغيله ، ولكنه سيؤدي أيضًا إلى إخراج

05:17.210 --> 05:20.097
المزيد من هذه التعليمات البرمجية.

05:20.097 --> 05:21.880
لذلك يجب عليك فقط تشغيل هذا إذا

05:21.880 --> 05:25.110
كان لديك حلقات ورأيت أن الكود الذي تم إنشاؤه يتصرف

05:25.110 --> 05:27.700
فجأة بشكل مختلف عما ينبغي عليه فيما يتعلق

05:27.700 --> 05:29.023
بتلك الحلقات.
