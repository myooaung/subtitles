WEBVTT

00:02.320 --> 00:04.500
教师：既然我们已经学习了私有和公有,

00:04.500 --> 00:07.650
我还想把名字变成私有财产｡

00:07.650 --> 00:10.730
现在我们有一点, 不是真正的问题,

00:10.730 --> 00:12.730
但有点不便｡

00:12.730 --> 00:14.540
我们在这里有一个name字段,

00:14.540 --> 00:16.810
然后在构造函数中为它取一个值,

00:16.810 --> 00:21.920
然后将该字段值存储在构造函数的字段中｡

00:21.920 --> 00:22.900
我们可以做到这一点,

00:22.900 --> 00:25.820
而且我们在这里做的事情非常清楚｡

00:25.820 --> 00:29.690
但是, 在很多用例中, 你会有很多类, 其中所有的属性,

00:29.690 --> 00:35.010
所有的字段, 都被初始化到构造函数中｡

00:35.010 --> 00:44.270
因此, 通常, 您可能会发现自己在顶部编写了几个属性和几个字段：不管它们是私有的还是公有的,

00:44.270 --> 00:47.993
然后你在构造函数中重复所有的操作,

00:49.030 --> 00:55.110
然后在构造函数中初始化这些值.

00:55.110 --> 00:57.080
你不必这样做｡ 

00:57.080 --> 01:05.220
您可以在上面删除字段定义, 而不是在这里执行双重初始化代码｡

01:05.220 --> 01:07.150
现在你会看到一个错误｡ 

01:07.150 --> 01:09.040
但是您也可以在这里去掉它,

01:09.040 --> 01:15.130
取而代之的是, 现在只需在参数前面添加访问修饰符｡

01:15.130 --> 01:17.950
因此, 如果它应该是public, 则添加public｡ 

01:17.950 --> 01:20.290
比如说, 为了这个名字, 我们现在把它公开｡ 

01:20.290 --> 01:23.530
如果它应该是private, 请添加private｡ 

01:23.530 --> 01:25.250
在这里, 你必须添加public,

01:25.250 --> 01:41.950
因为这是一个显式的typescript指令, 它告诉typescript你不仅要在构造函数中得到这些参数, 还要用完全相同的名字为这个类创建属性｡

01:41.950 --> 01:45.350
因此, 在这里, 我们也应该将n重命名为name｡ 

01:45.350 --> 01:49.250
以便在创建者类上创建name属性｡

01:49.250 --> 01:54.270
这只是这个双重初始化代码的一个捷径｡

01:54.270 --> 01:56.340
您必须找到字段, 然后存储值,

01:56.340 --> 02:00.110
现在我们可以一次完成所有操作｡

02:00.110 --> 02:02.690
我们定义构造函数接受哪些参数,

02:02.690 --> 02:09.630
然后为每个前面有这样的访问修饰符的参数创建一个同名的属性,

02:09.630 --> 02:14.420
参数的值存储在创建的属性中｡

02:14.420 --> 02:17.750
所以现在我们只需要在这里修复我们的部门创建,

02:17.750 --> 02:20.780
并添加一个ID, 因为我添加了这个新参数｡

02:20.780 --> 02:25.640
现在你会看到, 当我们在下面调用describe的时候, 实际上,

02:25.640 --> 02:28.113
我也会把ID放在那里, 可能是通过改变这个部门用户字符串,

02:29.130 --> 02:38.890
字面上在这里, 部门在这里.

02:38.890 --> 02:38.890
id然后这个｡

02:40.205 --> 02:42.450
name,

02:42.450 --> 02:45.380
您将看到这一切仍然有效｡

02:45.380 --> 02:47.360
它在此处编译时不会出现错误｡ 

02:47.360 --> 02:51.710
在这里, 我们得到了带有ID和名称的输出｡

02:51.710 --> 02:53.480
因为有了这个小捷径,

02:53.480 --> 02:55.563
我们还保存了一些代码｡
