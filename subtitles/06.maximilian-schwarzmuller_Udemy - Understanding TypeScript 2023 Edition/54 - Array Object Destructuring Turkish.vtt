WEBVTT

00:02.100 --> 00:04.870
Eğitmen: Dizilere ve nesnelere bağlı kalalım.

00:04.870 --> 00:06.750
Modern JavaScript'te ve ayrıca Typescript

00:06.750 --> 00:09.160
projelerinde çokça göreceğiniz bir diğer

00:09.160 --> 00:10.440
önemli sözdizimi de dizi

00:10.440 --> 00:13.133
ve nesne yapılandırmasıdır.

00:14.180 --> 00:15.013
Nasıl çalışıyor?

00:15.013 --> 00:17.220
Peki, elimizdeki dizi ile başlayalım,

00:17.220 --> 00:20.220
iki hobisi olan hobiler dizisi.

00:20.220 --> 00:22.200
Diyelim ki bu iki hobiyi çıkarmak

00:22.200 --> 00:26.340
ve bunları değişkenlerde veya sabitlerde saklamak istiyorsunuz.

00:26.340 --> 00:28.891
Tabii ki, bunu ilk eleman olan

00:28.891 --> 00:32.340
sıfır indeksi için hobi bir eşit hobiler

00:32.340 --> 00:34.820
ile yapabiliriz.

00:34.820 --> 00:38.720
Ve aynı şey birinci dizindeki hobiler için ikinci hobi için de geçerli olabilir.

00:38.720 --> 00:40.500
Bu, bu iki öğeyi çekecek

00:40.500 --> 00:43.330
ve sabitlerde saklayacaktır.

00:43.330 --> 00:44.720
Bu işlem iki satır kod gerektirdi

00:44.720 --> 00:46.710
ve ne kadar çok öğe almak isterseniz o kadar

00:46.710 --> 00:48.493
çok kod satırı gerekiyor.

00:49.340 --> 00:51.690
Dizi yeniden yapılandırması bunu kısaltmamızı sağlar.

00:51.690 --> 00:53.090
Bu arada sadece const ile

00:53.090 --> 00:56.250
değil let ile de çalışan dizi yıkımı ile, eşittir işaretinin

00:56.250 --> 00:59.760
sol tarafına köşeli parantez eklersiniz ki bu alışılmadık

00:59.760 --> 01:01.400
bir yerdir.

01:01.400 --> 01:02.900
Bunu daha önce görmemiştim.

01:02.900 --> 01:04.780
Sağ tarafta ise yıkmak istediğiniz

01:04.780 --> 01:06.480
dizi var.

01:06.480 --> 01:08.430
Şimdi destructure gerçekten diziden

01:08.430 --> 01:10.470
eleman çekmeniz anlamına gelir.

01:10.470 --> 01:13.570
Ve burada sol tarafta köşeli parantezler arasında, bunları

01:13.570 --> 01:15.040
sabitlerde veya let kullanıyorsanız

01:15.040 --> 01:17.250
değişkenlerde saklarsınız.

01:17.250 --> 01:21.170
O halde burada hobi bir ve hobi ikiye sahip olabiliriz.

01:21.170 --> 01:23.000
Ve bu sözdiziminin yaptığı

01:23.000 --> 01:25.640
şey, hobiler dizisinden geçer, ilk öğeyi

01:25.640 --> 01:26.920
alır ve bu adla bir

01:26.920 --> 01:29.050
sabitte saklar, ikinci öğeyi

01:29.050 --> 01:30.290
alır ve bu adla bir

01:30.290 --> 01:32.320
sabitte saklar.

01:32.320 --> 01:35.490
Hatta buraya geri kalan parametreleri ekleyebilir

01:35.490 --> 01:38.720
ve hobiler dizisinin ikiden fazla elemanı olması durumunda

01:38.720 --> 01:42.130
kalan hobileri buraya alabilirsiniz.

01:42.130 --> 01:46.260
Ardından, hobi bir veya hobi ikiye çekmediğiniz kalan

01:46.260 --> 01:48.070
tüm öğeler, kalan hobiler

01:48.070 --> 01:51.290
adlı yeni bir dizide saklanacaktır.

01:51.290 --> 01:54.090
Böylece yeni bir dizide birleştirileceklerdir.

01:54.090 --> 01:57.940
Bu arada, yeniden yapılandırma orijinal diziyi değiştirmez.

01:57.940 --> 02:02.940
Yani eğer teselli edersek. burada hobiler, hobi bir ve hobi iki'yi günlüğe kaydedin,

02:04.260 --> 02:06.840
hobilerin hala eski dizi olduğunu göreceksiniz.

02:06.840 --> 02:08.840
Boş ya da onun gibi bir şey değil.

02:08.840 --> 02:11.780
Yani tırnak içinde çıkardığımız değerler aslında

02:11.780 --> 02:14.870
sadece yeni sabitlere veya değişkenlere kopyalanır,

02:14.870 --> 02:17.720
diziden gerçekten çıkarılmaz.

02:17.720 --> 02:18.980
İşte bu dizinin yeniden yapılandırılmasıdır.

02:18.980 --> 02:20.600
Aynı şey nesneler için de geçerli.

02:20.600 --> 02:21.690
Adamımız burada.

02:21.690 --> 02:23.440
Şimdi diyelim ki isim ve yaşı bağımsız

02:23.440 --> 02:26.630
sabitlerde veya değişkenlerde saklamak istiyoruz.

02:26.630 --> 02:28.480
Tıpkı dizi yeniden yapılandırmada olduğu

02:28.480 --> 02:31.840
gibi, nesne yeniden yapılandırma da hem const hem de let ile çalışır.

02:31.840 --> 02:33.010
Burada const ile gideceğim.

02:33.010 --> 02:34.930
Ve şimdi eşittir işaretinin sol tarafında

02:34.930 --> 02:37.090
küme parantezleri kullanabiliriz.

02:37.090 --> 02:38.883
Yeni bir sözdizimi olsa da sanırım.

02:39.920 --> 02:43.750
Ve nesnemizin ya da değişkenimizin sağ taraftaki nesneyi işaret etmesini

02:43.750 --> 02:44.890
sağlayın.

02:44.890 --> 02:46.110
Bu arada, lütfen dikkat

02:46.110 --> 02:48.770
edin, burada atadığım bir nesne türü değil.

02:48.770 --> 02:51.200
Burada iki nokta üst üste yok.

02:51.200 --> 02:54.080
Sol tarafta, sabit bir isimden sonra iki nokta

02:54.080 --> 02:58.210
üst üste olmadan bunun gibi kıvrımlı parantezlerden ibarettir.

02:58.210 --> 03:01.000
Bu yüzden bir sabit saklanabilecek değerin

03:01.000 --> 03:02.720
türünü atamıyorum.

03:02.720 --> 03:05.470
Gerçekten sadece özel bir sözdizimi kullanıyorum.

03:05.470 --> 03:08.450
Çünkü burada artık bir nesnede sahip

03:08.450 --> 03:11.340
olduğumuz özellik adlarına da başvurabiliyoruz,

03:11.340 --> 03:13.920
örneğin ad ve yaş, bu anahtarların

03:13.920 --> 03:18.030
değerlerini person'dan çekip aynı adlı sabitlerde

03:18.030 --> 03:21.283
saklamak için.

03:23.290 --> 03:24.390
Şimdi burada hata

03:24.390 --> 03:27.820
alıyorum çünkü en üstte zaten bir yaş değişkenim var.

03:27.820 --> 03:30.890
Ve name her halükarda var olan küresel olarak kullanılabilir bir değişken

03:30.890 --> 03:32.173
olarak ortaya çıkıyor.

03:33.240 --> 03:34.940
Bu nedenle, geçici çözüm

03:34.940 --> 03:38.313
burada farklı bir anahtar adı kullanmak olacaktır,

03:40.240 --> 03:41.920
örneğin firstName.

03:41.920 --> 03:45.020
Ve şimdi bu anahtara göre değeri buradan çekebiliriz.

03:45.020 --> 03:46.900
Nesne yeniden yapılandırma bu şekilde çalışır.

03:46.900 --> 03:50.110
Burada önemli olan, dizi yıkımı için, elemanlar

03:50.110 --> 03:52.260
sırayla çekilir, çünkü bir

03:52.260 --> 03:55.110
dizi sıralı bir listedir.

03:55.110 --> 03:58.110
Nesnelerde, sıra her zaman garanti edilmez ve bu nedenle,

03:58.110 --> 04:00.720
öğeleri konuma göre değil, anahtar adına göre

04:00.720 --> 04:02.070
çekeriz.

04:02.070 --> 04:04.790
Yani burada küme parantezleri arasında belirttiğiniz

04:04.790 --> 04:05.930
değerler veya isimler

04:05.930 --> 04:07.630
keyfi değildir.

04:07.630 --> 04:09.700
Burada isim bulamazsın.

04:09.700 --> 04:13.860
Bunlar nesnede bulduğunuz özellik adları olmalıdır, böylece

04:13.860 --> 04:16.010
bu anahtarların değerleri nesneden

04:16.010 --> 04:18.160
çekilebilir Ve sonra aynı adı taşıyan

04:18.160 --> 04:21.880
sabitlerde veya değişkenlerde saklanırlar.

04:21.880 --> 04:24.120
Bu adı geçersiz kılmak isterseniz, bunu burada iki

04:24.120 --> 04:25.970
nokta üst üste koyarak yapabilirsiniz.

04:25.970 --> 04:28.050
Tekrar söylüyorum, bu bir tip ataması değil.

04:28.050 --> 04:29.680
Sadece yeni bir isim belirler.

04:29.680 --> 04:31.970
Yani bu tamamen JavaScript sözdizimidir, Typescript

04:31.970 --> 04:33.820
ile hiçbir ilgisi yoktur.

04:33.820 --> 04:35.370
Yani burada bunu örneğin

04:35.370 --> 04:38.750
bir userName sabitinde saklayabiliriz.

04:38.750 --> 04:39.840
Bu nedenle, bundan

04:39.840 --> 04:44.040
sonra teselli edebiliriz. userName ve age öğelerini günlüğe kaydeder,

04:44.040 --> 04:45.290
ancak firstName öğesini günlüğe

04:45.290 --> 04:47.870
kaydetmez, çünkü burada değerleri çektiğimizde oluşturduğumuz

04:47.870 --> 04:50.900
sabitte userName olarak adlandırılmak üzere firstName öğesinin

04:50.900 --> 04:52.790
üzerine yazılır.

04:52.790 --> 04:55.880
Yaşın üzerine yazılmaz, bu yüzden onu bu şekilde kullanabiliriz.

04:55.880 --> 04:58.183
Tekrar ediyorum, bu bir tip ödevi değildir.

04:58.183 --> 05:00.210
Bu JavaScript sözdizimidir,

05:00.210 --> 05:03.680
burada kişiden çektiğimiz bir özelliği takma adla

05:03.680 --> 05:05.500
yeniden adlandırırız.

05:05.500 --> 05:07.430
Ayrıca, daha önce dizide olduğu gibi,

05:07.430 --> 05:09.840
kişi nesnesinin kendisi de değişmemiştir.

05:09.840 --> 05:13.380
Aslında sadece bu değerleri nesneden kopyalıyoruz.

05:13.380 --> 05:15.643
Ve bu nedenle, burada bu çıktıyı elde ederiz.
