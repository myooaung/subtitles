WEBVTT

00:02.260 --> 00:05.180
ผู้สอน: ทีนี้ถ้าเรากลับมาที่อินเทอร์เฟซนี้

00:05.180 --> 00:08.230
คำถามคือทำไมเราถึงต้องการสิ่งนี้

00:08.230 --> 00:13.420
เราจะไม่มีสิ่งเดียวกันแน่นอนถ้าเราจะเพิ่มประเภทที่กำหนดเองที่นี่และที่นั่น

00:13.420 --> 00:19.940
ต่างกันแค่เราต้องใส่เครื่องหมายเท่ากับแล้วบอกว่าประเภทบุคคลเป็นวัตถุที่มีลักษณะแบบนี้?

00:19.940 --> 00:23.220
และแน่นอน ถ้าเราบันทึก มันจะคอมไพล์โดยไม่มีข้อผิดพลาด

00:23.220 --> 00:28.490
ดังนั้นเราจึงสามารถแทนที่อินเทอร์เฟซของเราด้วยประเภทดังกล่าวและใช้งานได้เหมือนเดิม

00:28.490 --> 00:31.290
แล้วทำไมเราถึงมีส่วนต่อประสาน?

00:31.290 --> 00:35.310
อินเทอร์เฟซและประเภทแบบกำหนดเองนั้นไม่เหมือนกันซะทีเดียว

00:35.310 --> 00:43.520
ในขณะที่บ่อยครั้ง คุณสามารถใช้มันแทนกันได้ และคุณสามารถใช้อินเทอร์เฟซแทนประเภทแบบกำหนดเองหรือในทางกลับกัน

00:43.520 --> 00:45.720
นอกจากนี้ยังมีความแตกต่างบางประการ

00:45.720 --> 00:49.070
ความแตกต่างโดยธรรมชาติประการหนึ่งคืออินเทอร์เฟซสามารถใช้เพื่ออธิบายโครงสร้างของวัตถุเท่านั้น

00:49.070 --> 00:51.470
คุณสามารถใช้ประเภทสำหรับสิ่งนั้นได้เช่นกัน

00:51.470 --> 00:56.800
แต่แทนที่จะเป็นประเภทแบบกำหนดเอง คุณยังสามารถจัดเก็บสิ่งอื่นๆ เช่น ประเภทยูเนี่ยน และอื่นๆ ที่เรา

00:56.800 --> 01:00.350
ได้ในช่วงต้นของหลักสูตร

01:00.350 --> 01:08.510
ดูเหมือนว่าประเภทจะยืดหยุ่นกว่า แต่อีกด้านหนึ่งของเหรียญคืออินเทอร์เฟซนั้นชัดเจนกว่า

01:08.510 --> 01:10.870
เมื่อคุณกำหนดบางสิ่งเป็นอินเทอร์เฟซ

01:10.870 --> 01:15.580
มันชัดเจนมากว่าคุณต้องการกำหนดโครงสร้างของวัตถุด้วยสิ่งนั้น

01:15.580 --> 01:18.360
และเมื่อพูดถึงการกำหนดประเภทออบเจกต์

01:18.360 --> 01:21.630
คุณมักจะเห็นอินเทอร์เฟซในธรรมชาติมากขึ้น

01:21.630 --> 01:23.800
จากนั้น คุณจะเห็นประเภทแบบกำหนดเอง

01:23.800 --> 01:26.410
ตอนนี้ อีกอย่างที่คุณสามารถทำได้กับอินเทอร์เฟซ

01:26.410 --> 01:33.360
แต่คุณทำได้เฉพาะกับประเภทที่กำหนดเองเท่านั้นคือคุณสามารถใช้อินเทอร์เฟซในคลาสได้

01:33.360 --> 01:34.820
เราหมายความว่าอย่างไร

01:34.820 --> 01:46.400
เหตุผลที่คุณมักจะทำงานกับอินเทอร์เฟซคืออินเทอร์เฟซสามารถใช้เป็นสัญญาที่คลาสสามารถนำไปใช้ได้และคลาสจะต้องปฏิบัติตาม

01:46.400 --> 01:48.150
เราหมายความว่าอย่างไร

01:48.150 --> 01:53.970
สมมติว่าอินเทอร์เฟซของเราไม่ใช่อินเทอร์เฟซบุคคลที่มีชื่อและอายุ

01:53.970 --> 01:57.690
แต่เราตั้งชื่อว่า Greetable

01:57.690 --> 01:59.270
ตอนนี้สิ่งนี้อาจดูเป็นชื่อแปลก

01:59.270 --> 02:01.090
ๆ แต่ท้ายที่สุดแล้วสิ่งนี้เป็นเพียงการบอกว่าวัตถุใด

02:01.090 --> 02:03.560
ๆ ที่ควรได้รับการปฏิบัติเหมือน Greetable

02:03.560 --> 02:09.251
จะต้องเป็นวัตถุที่มีชื่อและด้วยวิธีการทักทาย

02:09.251 --> 02:10.783
ตอนนี้ เราสามารถพูดตรงนี้ได้ว่าตัวแปร

02:10.783 --> 02:19.930
user1 นี้ควรเก็บ Greetable object และแน่นอนว่าตอนนี้เราได้รับข้อผิดพลาดเพราะเรามีมากกว่าแค่ชื่อและคำทักทาย

02:19.930 --> 02:22.000
แต่เราสามารถใช้อินเทอร์เฟซนี้เพื่อแชร์กับคลาสต่างๆ

02:22.000 --> 02:33.410
ที่เป็นไปได้เพื่อให้แน่ใจว่าทุกคลาสที่ปฏิบัติตามอินเทอร์เฟซนี้ต้องมีคุณสมบัติชื่อและต้องมีเมธอดการทักทาย

02:33.410 --> 02:38.540
ตอนนี้เราสามารถเพิ่มคลาส Person ชื่อนี้สามารถใช้ได้อีกครั้งเพราะเราเปลี่ยนชื่ออินเทอร์เฟซ

02:38.540 --> 02:45.480
และตอนนี้บอก typescript และคลาสนี้โดยพื้นฐานแล้วควรเป็นไปตามอินเทอร์เฟซนี้

02:45.480 --> 02:48.350
ควรใช้อินเทอร์เฟซนี้

02:48.350 --> 02:53.000
ควรเป็นไปตามการตั้งค่าสัญญานั้นโดยอินเทอร์เฟซนี้

02:53.000 --> 02:56.930
เราทำเช่นนี้โดยเพิ่มคำหลักที่ใช้หลังชื่อชั้นเรียน

02:56.930 --> 02:59.280
จากนั้นชื่ออินเทอร์เฟซของเรา Greetable

03:00.420 --> 03:02.780
และคุณสามารถใช้อินเทอร์เฟซได้มากกว่าหนึ่งอินเทอร์เฟซ

03:02.780 --> 03:04.710
นั่นเป็นความแตกต่างเมื่อเทียบกับมรดก

03:04.710 --> 03:07.270
คุณสามารถสืบทอดจากคลาสเดียวเท่านั้น

03:07.270 --> 03:09.370
คุณสามารถใช้หลายอินเทอร์เฟซโดยเพียงแค่คั่นด้วยเครื่องหมายจุลภาค

03:09.370 --> 03:16.000
ดังนั้นที่นั่น เราสามารถมีอินเทอร์เฟซอื่นได้หากมี

03:16.000 --> 03:17.710
ที่นี่ฉันมีเพียงหนึ่งแม้ว่า

03:17.710 --> 03:20.350
และตอนนี้ ความหมายโดยนัยคือ เราได้รับข้อผิดพลาดที่นี่

03:20.350 --> 03:25.200
เนื่องจากคลาสของเราใช้งานอินเทอร์เฟซไม่ถูกต้อง

03:25.200 --> 03:29.690
ไม่มีคุณสมบัติชื่อไม่มีวิธีการทักทาย

03:29.690 --> 03:38.173
ตอนนี้เราต้องตั้งค่าที่นี่ในคลาสของเรา บางทีฉันจะตั้งค่าตัวสร้างที่เราได้รับค่าสำหรับชื่อ

03:39.010 --> 03:44.380
แล้วตั้งค่าแบบนี้ และที่เราเพิ่มวิธีการทักทายที่เราอาจมี

03:44.380 --> 03:48.080
ตรรกะนี้จากที่นั่น

03:48.080 --> 03:50.780
ตอนนี้ในชั้นเรียนของเรา เราสามารถมีมากกว่านั้น

03:50.780 --> 03:52.340
เราสามารถมีฟิลด์มากขึ้น

03:52.340 --> 03:53.920
เราสามารถมีเมธอดมากขึ้น

03:53.920 --> 03:59.170
เราสามารถขยายคลาสนี้ได้ด้วย เราสามารถทำงานกับคลาสนี้ได้เหมือนที่เราทำได้เสมอ

03:59.170 --> 04:02.640
แต่เราถูกบังคับให้ใช้วิธีนี้อย่างถูกต้องเพื่อให้มีคุณสมบัติชื่อนี้

04:02.640 --> 04:07.040
เนื่องจากเรากำลังใช้อินเทอร์เฟซนี้

04:07.040 --> 04:09.740
ดังนั้น อินเทอร์เฟซจึงมักถูกใช้เพื่อแบ่งปันฟังก์ชันการทำงานระหว่างคลาสต่างๆ

04:09.740 --> 04:16.550
ที่ไม่เกี่ยวกับการใช้งานที่เป็นรูปธรรม

04:16.550 --> 04:19.240
คุณไม่สามารถมีการใช้งานหรือค่าภายในอินเทอร์เฟซ

04:19.240 --> 04:24.980
แต่เกี่ยวกับโครงสร้าง เกี่ยวกับคุณสมบัติที่คลาสควรมี

04:24.980 --> 04:28.120
มันเหมือนกับการทำงานกับคลาสนามธรรม

04:28.120 --> 04:33.520
ดังนั้น ความแตกต่างคืออินเทอร์เฟซไม่มีรายละเอียดการใช้งานเลย

04:33.520 --> 04:39.330
ในขณะที่คลาสนามธรรมสามารถผสมกันได้ คุณต้องเขียนทับส่วนเหล่านี้

04:39.330 --> 04:42.470
และฉันมีส่วนที่นำไปใช้จริง

04:42.470 --> 04:46.860
นั่นเป็นข้อแตกต่างที่สำคัญระหว่างอินเทอร์เฟซและคลาสนามธรรม

04:46.860 --> 04:49.790
อย่างไรก็ตาม ตอนนี้เรามีคลาสบุคคลของเราที่นี่

04:49.790 --> 04:58.090
และตอนนี้ที่นี่ ผู้ใช้ 1 สามารถสร้างได้โดยใช้บุคคลใหม่และป้อนข้อมูลในชื่อตัวอย่าง

04:58.090 --> 05:02.300
และตอนนี้ ใช้ดูว่าไม่เป็นไรที่เรามีอายุเท่านี้ใน

05:02.300 --> 05:05.870
user1 เพราะเราส่ง user1 ตาม Person, Person ใช้

05:05.870 --> 05:07.540
Greetable และคุณสามารถเพิ่มได้มากกว่า

05:07.540 --> 05:15.120
Greetable ในคลาส แต่คุณต้องปฏิบัติตามเงื่อนไขที่ตั้งค่าโดยอินเทอร์เฟซ

05:15.120 --> 05:17.130
ดังนั้นตอนนี้ ถ้าเราบันทึกทุกอย่าง เราก็มีรหัสที่ถูกต้อง

05:17.130 --> 05:23.040
และถ้าเราบันทึก user1 ของเราลงไปที่นั่นด้วยคอนโซล

05:23.040 --> 05:23.040
เราจะเห็นว่ามันเป็นออบเจกต์ปกติที่มีชื่อและอายุในกรณีนี้

05:27.590 --> 05:32.770
แต่ประเด็นสำคัญคือมันขึ้นอยู่กับคลาสที่ใช้อินเทอร์เฟซ

05:32.770 --> 05:35.550
จากนั้นคุณสามารถใช้อินเทอร์เฟซเป็นประเภทได้

05:35.550 --> 05:37.780
แน่นอน เราสามารถตั้งค่าให้พิมพ์ Person

05:37.780 --> 05:40.580
ได้ แต่อย่างที่คุณเห็น การใช้พิมพ์ Greetable ที่นี่ได้ผลเพราะวัตถุ

05:40.580 --> 05:42.200
Person ที่เราจัดเก็บไว้ในคลาส

05:42.200 --> 05:46.300
user1 ในตอนท้ายนั้นใช้อินเทอร์เฟซ Greetable

05:46.300 --> 05:47.750
มันใช้สิ่งนี้

05:47.750 --> 05:49.820
นั่นเป็นอีกหนึ่งคุณสมบัติที่ทรงพลัง

05:49.820 --> 06:03.950
คุณสามารถใช้อินเทอร์เฟซเป็นประเภทหนึ่งสำหรับค่าคงที่หรือตัวแปรซึ่งจะจัดเก็บคลาสอื่นของประเภทอื่นซึ่งจะขึ้นอยู่กับประเภทอินเทอร์เฟซเนื่องจากนำไปใช้

06:03.950 --> 06:06.530
นั่นคืออินเทอร์เฟซโดยสรุป

06:06.530 --> 06:08.643
รวมคุณสมบัติที่ทรงพลังมากมาย
