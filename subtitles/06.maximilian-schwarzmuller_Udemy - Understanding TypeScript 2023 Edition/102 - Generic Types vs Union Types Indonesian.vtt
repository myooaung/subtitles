WEBVTT

00:02.180 --> 00:04.432
-: Sekarang salah satu sumber kebingungan yang

00:04.432 --> 00:06.300
umum, saya ingin mengklarifikasi di sini,

00:06.300 --> 00:09.030
adalah perbedaan antara Generik dan tipe Union.

00:09.030 --> 00:11.950
Mengapa Anda bisa mengacaukan keduanya?

00:11.950 --> 00:14.440
Misalnya, penyimpanan data kami di sini.

00:14.440 --> 00:16.260
Jika kita menerima tipe Generik

00:16.260 --> 00:19.240
berdasarkan tipe-tipe ini, kita juga bisa menulis

00:19.240 --> 00:21.157
ulang itu hanya dengan mengatakan,

00:21.157 --> 00:23.750
"Nah, kita ingin menyimpan string, atau

00:23.750 --> 00:27.610
angka, atau Boolean di sini, kan? Jadi, kita bisa menyimpannya atau lebih tepatnya, membungkusnya

00:27.610 --> 00:30.470
dalam tanda kurung sehingga kita mengatakan salah

00:30.470 --> 00:32.660
satu dari jenis ini sebagai array.

00:32.660 --> 00:35.040
Kemudian di sini, tentu saja, kita juga bisa mengatakan,

00:35.040 --> 00:37.017
"Nah, apa yang kita dapatkan di sini ketika kita

00:37.017 --> 00:38.420
menambahkan item adalah string, angka,

00:38.420 --> 00:39.740
atau Boolean, ketika kita menghapusnya,

00:39.740 --> 00:41.120
itu sama saja. Sekarang, apa masalahnya dengan pendekatan ini?

00:41.120 --> 00:43.007
Pada pandangan pertama, mungkin terlihat seperti mencapai hal yang sama, tetapi,

00:44.424 --> 00:45.880
sebenarnya melakukan sesuatu yang sama sekali berbeda.

00:45.880 --> 00:49.630
Apa yang kita katakan di sini adalah, kita menyimpan segala

00:49.630 --> 00:52.310
jenis data di sana selama itu adalah larik

00:52.310 --> 00:53.710
string, angka atau Boolean,

00:53.710 --> 00:55.690
dan kita juga kemudian menambahkan

00:55.690 --> 00:57.220
segala jenis data di sini,

00:57.220 --> 00:59.730
baik string, angka atau Boolean, dan hal

00:59.730 --> 01:02.930
yang sama untuk menghapus.

01:02.930 --> 01:04.670
Sekarang, kita sudah memiliki beberapa kesalahan di sana, tentu saja,

01:04.670 --> 01:06.650
karena saya tidak bisa menginisialisasi ini dengan cara generik lagi.

01:06.650 --> 01:09.830
Tetapi, selain itu, ini berfungsi.

01:09.830 --> 01:12.520
Sekarang, masalahnya, bagaimanapun, adalah untuk

01:12.520 --> 01:14.420
satu di sini, kita tidak mengatakan

01:14.420 --> 01:15.890
ini adalah larik string, atau

01:15.890 --> 01:18.260
larik angka, atau larik Boolean.

01:18.260 --> 01:20.630
Ini mengatakan, kita memiliki larik yang

01:20.630 --> 01:24.190
bisa memiliki string, angka dan Boolean yang tercampur.

01:24.190 --> 01:26.290
Jadi, jika Anda ingin mengatakan

01:26.290 --> 01:30.190
larik string, atau larik angka, kita harus mengatakan

01:30.190 --> 01:32.100
larik string, larik angka,

01:32.100 --> 01:34.403
atau larik Boolean.

01:34.403 --> 01:36.020
Nah, kita bisa melakukan itu, tetapi sekarang kita punya masalah di sini.

01:36.020 --> 01:39.100
Sekarang, kita menambahkan string, angka, atau Boolean,

01:39.100 --> 01:41.660
tetapi tergantung pada apa yang sebenarnya

01:41.660 --> 01:44.710
kita atur larik data ini, baik larik angka, atau larik

01:44.710 --> 01:46.750
Boolean, atau larik string, kita

01:46.750 --> 01:50.270
tidak diizinkan untuk menambahkan angka, atau Boolean

01:50.270 --> 01:52.320
atau string.

01:52.320 --> 01:54.140
Jika kita mengatur ini menjadi larik string maka

01:54.140 --> 01:55.870
kita tidak bisa menambahkan angka di sini.

01:55.870 --> 01:57.833
Namun, di sini saya tidak masalah dengan parameter apa

01:57.833 --> 01:59.800
pun selama itu adalah angka, Boolean, atau string.

01:59.800 --> 02:02.850
Jadi, masalahnya ada di sini dengan tipe Union.

02:02.850 --> 02:05.670
Kita menerima salah satu dari nilai-nilai ini setiap

02:05.670 --> 02:08.380
kali metode ini dipanggil, atau metode ini.

02:08.380 --> 02:11.053
Jadi, kita tidak mengatakan, "Hei, kapan pun kita bekerja

02:11.053 --> 02:14.250
dengan kelas ini, Anda harus memutuskan untuk satu jenis dan tetap

02:14.250 --> 02:15.397
berpegang teguh pada itu,

02:15.397 --> 02:18.150
sebaliknya kita mengatakan, kapan pun Anda memanggil metode

02:18.150 --> 02:21.830
ini, Anda bebas menggunakan salah satu dari jenis ini.

02:21.830 --> 02:23.440
Bukan itu yang kita inginkan di sini.

02:23.440 --> 02:26.150
Jika saya mengembalikan ini ke pengaturan

02:26.150 --> 02:29.640
sebelumnya di mana kita menggunakan tipe generik maka

02:29.640 --> 02:33.050
kita mendapatkan pengaturan yang berbeda.

02:33.050 --> 02:34.810
Di sini, kami katakan bahwa Anda harus

02:37.580 --> 02:39.450
memilih satu kali jenis data yang ingin

02:39.450 --> 02:42.060
Anda simpan dan kemudian Anda hanya diizinkan untuk menambahkan

02:42.060 --> 02:43.950
jenis data yang tepat itu.

02:43.950 --> 02:45.750
Jadi di sini jika saya menambahkan angka,

02:45.750 --> 02:48.523
misalnya, saya mendapatkan kesalahan karena itu bukan string

02:49.710 --> 02:52.623
dan itu menunjukkan bahwa saya hanya ingin mengelola string di

02:53.830 --> 02:54.730
sini ketika saya mengatur

02:54.730 --> 02:56.170
tipe generik.

02:56.170 --> 02:57.810
Itulah perbedaan antara tipe union dan tipe generik.

02:57.810 --> 03:01.250
Tipe union bisa sangat bagus jika Anda ingin memiliki

03:01.250 --> 03:05.040
fungsi yang bisa Anda panggil dengan salah satu tipe ini setiap

03:05.040 --> 03:06.920
kali Anda memanggilnya.

03:06.920 --> 03:08.690
Tipe generik sangat bagus

03:08.690 --> 03:11.570
jika Anda ingin mengunci tipe tertentu.

03:11.570 --> 03:13.460
Gunakan tipe yang sama di seluruh

03:13.460 --> 03:15.510
instance kelas yang Anda buat.

03:15.510 --> 03:18.380
Gunakan jenis yang sama di seluruh fungsi.

03:18.380 --> 03:20.070
Di situlah Anda menginginkan tipe generik.

03:20.070 --> 03:23.300
Anda menginginkan tipe union ketika Anda fleksibel untuk memiliki

03:23.300 --> 03:25.850
tipe yang berbeda dengan setiap pemanggilan metode,

03:25.850 --> 03:28.120
dengan setiap pemanggilan fungsi.

03:28.120 --> 03:30.810
Kemudian, Anda bisa menggunakan tipe union.

03:30.810 --> 03:33.470
Tipe generik mengunci suatu tipe.
