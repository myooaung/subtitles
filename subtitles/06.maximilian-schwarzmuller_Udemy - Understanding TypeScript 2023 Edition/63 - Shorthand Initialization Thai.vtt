WEBVTT

00:02.320 --> 00:04.500
ผู้สอน: ตอนนี้เราได้เรียนรู้เกี่ยวกับส่วนตัวและสาธารณะแล้ว

00:04.500 --> 00:07.650
ฉันอยากจะเปลี่ยนชื่อเป็นทรัพย์สินส่วนตัวด้วย

00:07.650 --> 00:09.700
และตอนนี้เรามีเรื่องเล็กน้อย

00:09.700 --> 00:12.730
ไม่ใช่ปัญหา แต่เป็นความไม่สะดวกเล็กน้อย

00:12.730 --> 00:16.810
เรามีฟิลด์ชื่อนั้นที่นี่ จากนั้นเราได้รับค่าสำหรับฟิลด์นี้ในตัวสร้าง

00:16.810 --> 00:19.350
จากนั้นเราเก็บค่านั้นสำหรับฟิลด์นั้นที่นี่ในตัวสร้าง

00:19.350 --> 00:21.920
ในฟิลด์

00:21.920 --> 00:22.900
เราสามารถทำได้

00:22.900 --> 00:25.820
และชัดเจนว่าเรากำลังทำอะไรที่นี่

00:25.820 --> 00:29.690
แต่ในหลายกรณีการใช้งาน คุณจะมีคลาสมากมายที่พร็อพเพอร์ตี้ทั้งหมดที่คุณมีอยู่

00:29.690 --> 00:35.010
ฟิลด์ทั้งหมดที่คุณมีอยู่ ถูกเตรียมใช้งานให้กับคอนสตรัคเตอร์

00:35.010 --> 00:42.090
ดังนั้น บ่อยครั้งที่คุณอาจพบว่าตัวเองกำลังเขียนคุณสมบัติสองสามฟิลด์แบบนี้ที่ด้านบน

00:42.090 --> 00:44.270
-: ไม่ว่าจะเป็นแบบส่วนตัวหรือแบบสาธารณะ

00:44.270 --> 00:47.993
- จากนั้นคุณก็ทำซ้ำทั้งหมดนั้นในคอนสตรัคเตอร์

00:49.030 --> 00:55.110
เพียงเพื่อเริ่มต้นค่าเหล่านี้ที่นี่ในฟังก์ชันตัวสร้าง

00:55.110 --> 00:57.080
คุณไม่จำเป็นต้องทำอย่างนั้น

00:57.080 --> 01:05.220
แทนที่จะทำรหัสเริ่มต้นสองครั้งที่นี่ คุณสามารถกำจัดคำจำกัดความฟิลด์ของคุณที่นั่นได้

01:05.220 --> 01:07.150
และตอนนี้คุณจะเห็นว่าคุณได้รับข้อผิดพลาด

01:07.150 --> 01:09.040
แต่คุณสามารถกำจัดสิ่งนี้ได้ที่นี่

01:09.040 --> 01:15.130
และเพิ่มตัวแก้ไขการเข้าถึงหน้าพารามิเตอร์แทน

01:15.130 --> 01:17.950
ดังนั้นหากควรเป็นสาธารณะ ให้เพิ่มสาธารณะ

01:17.950 --> 01:20.290
สมมติว่าสำหรับชื่อ เราเปิดเผยต่อสาธารณะในขณะนี้

01:20.290 --> 01:23.530
หากควรเป็นส่วนตัว ให้เพิ่มส่วนตัว

01:23.530 --> 01:25.250
ที่นี่ คุณต้องเพิ่ม public

01:25.250 --> 01:30.250
เพราะตอนนี้เป็นคำสั่งที่ชัดเจนสำหรับ typescript ซึ่งบอก typescript

01:30.370 --> 01:32.880
ว่าคุณไม่ต้องการแค่รับอาร์กิวเมนต์เหล่านี้ในตัวสร้าง

01:32.880 --> 01:41.950
แต่คุณต้องการสร้างคุณสมบัติสำหรับคลาสนี้ด้วยชื่อที่เหมือนกันทุกประการ

01:41.950 --> 01:45.350
ดังนั้น ณ ที่นี้ เราควรเปลี่ยนชื่อ n เป็นชื่อด้วย

01:45.350 --> 01:49.250
เพื่อให้คุณสมบัติชื่อถูกสร้างขึ้นในคลาสผู้สร้าง

01:49.250 --> 01:54.270
นี่เป็นเพียงทางลัดสำหรับรหัสเริ่มต้นสองครั้งที่นี่

01:54.270 --> 01:56.340
ที่ซึ่งคุณต้องค้นหาฟิลด์ของคุณ

01:56.340 --> 02:00.110
แล้วเก็บค่า ตอนนี้เรากำลังทำทุกอย่างในคราวเดียว

02:00.110 --> 02:02.690
เรากำหนดว่าอาร์กิวเมนต์ใดที่ตัวสร้างใช้

02:02.690 --> 02:09.630
จากนั้นสำหรับทุกอาร์กิวเมนต์ที่มีตัวแก้ไขการเข้าถึงอยู่ข้างหน้า คุณสมบัติที่มีชื่อเดียวกันจะถูกสร้างขึ้น

02:09.630 --> 02:14.420
และค่าของอาร์กิวเมนต์จะถูกเก็บไว้ในคุณสมบัติที่สร้างขึ้นนั้น

02:14.420 --> 02:17.750
ตอนนี้เราต้องแก้ไขการสร้างแผนกของเราที่นี่ และเพิ่ม

02:17.750 --> 02:20.780
ID เพราะฉันเพิ่มอาร์กิวเมนต์ใหม่นี้

02:20.780 --> 02:22.230
และตอนนี้สิ่งที่คุณเห็นก็คือ

02:22.230 --> 02:25.640
เมื่อเราเรียก อธิบายลงไป และฉันใส่

02:25.640 --> 02:32.640
ID ลงไปที่นั่นด้วย อาจจะโดยการเปลี่ยนสตริงผู้ใช้แผนกนี้ ตามตัวอักษรตรงนี้

02:32.640 --> 02:38.890
แผนกนี้

02:38.890 --> 02:38.890
id

02:40.205 --> 02:45.380
แล้วนี่ ชื่อคุณจะเห็นว่าทั้งหมดนี้ยังคงใช้งานได้

02:45.380 --> 02:47.360
มันรวบรวมโดยไม่มีข้อผิดพลาดที่นี่

02:47.360 --> 02:49.980
และที่นี่เราได้ผลลัพธ์พร้อม

02:49.980 --> 02:51.710
ID และชื่อของเรา

02:51.710 --> 02:55.563
เนื่องจากทางลัดเล็ก ๆ น้อย ๆ นั้น เราจึงบันทึกรหัสบางส่วนไว้สำหรับทั้งหมดนั้นด้วย
