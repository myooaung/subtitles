WEBVTT

00:02.200 --> 00:03.840
Instructeur : Donc, c'est maintenant comment

00:03.840 --> 00:06.290
nous pouvons gérer plusieurs fichiers avec TypeScript.

00:06.290 --> 00:08.870
Maintenant, un mot sur le fait d'avoir plusieurs fichiers,

00:08.870 --> 00:11.500
lorsque vous travaillez avec plusieurs fichiers comme nous

00:11.500 --> 00:15.280
le faisons ici, vous pouvez également les importer les uns dans les autres avec des modules,

00:15.280 --> 00:18.180
que vous connaissez peut-être de vanilla JavaScript, là aussi nous

00:18.180 --> 00:20.770
avons des modules, c'est quelque chose que je couvrirai dans

00:20.770 --> 00:23.830
une section dédiée de ce cours cependant, donc pour l'instant, nous avons

00:23.830 --> 00:25.560
juste deux fichiers qui ne sont pas importés

00:25.560 --> 00:27.620
l'un dans l'autre, mais qui sont plutôt importés

00:27.620 --> 00:31.040
dans l'index. html.

00:31.040 --> 00:32.990
Maintenant que cela est fait, nous

00:32.990 --> 00:35.930
savons que nous pouvons gérer ceci comme un projet et

00:35.930 --> 00:39.060
que nous pouvons compiler plusieurs fichiers ici.

00:39.060 --> 00:41.910
Maintenant, jetons un coup d'oeil à la tsconfig. json car il s'agit d'un

00:41.910 --> 00:45.660
fichier crucial pour la gestion de ce projet, il indique

00:45.660 --> 00:48.100
essentiellement à TypeScript comment

00:48.100 --> 00:51.290
compiler ces fichiers.

00:51.290 --> 00:55.260
Maintenant, avant de plonger dans les options du compilateur où, comme

00:55.260 --> 00:56.470
son nom l'indique, nous

00:56.470 --> 00:59.620
pouvons configurer le comportement du compilateur,

00:59.620 --> 01:02.220
descendons jusqu'à l'endroit situé avant l'accolade

01:02.220 --> 01:03.760
fermante mais après cette

01:03.760 --> 01:06.620
accolade fermante imbriquée, et voyons quelques-unes

01:06.620 --> 01:08.340
des options que nous pouvons ajouter

01:08.340 --> 01:11.910
ici et qui n'affectent pas le comportement du compilateur ou

01:11.910 --> 01:14.190
de l'étape de compilation, mais plutôt

01:14.190 --> 01:18.410
la façon dont le compilateur fonctionne avec ce projet, car là, par exemple,

01:18.410 --> 01:23.410
vous pouvez définir une option d'exclusion.

01:23.700 --> 01:26.770
Maintenant, si vous ajoutez exclude ici, ce sera un tableau,

01:26.770 --> 01:30.450
et ce que vous pouvez entrer ici sont des chemins vers des fichiers qui

01:30.450 --> 01:33.480
ne doivent pas être inclus dans la compilation lorsque

01:33.480 --> 01:36.400
vous exécutez TSC sur l'ensemble du projet.

01:36.400 --> 01:38.010
Ainsi, par exemple, nous pourrions dire ici

01:38.010 --> 01:41.137
que nous voulons exclure les analyses. ts de la compilation, et bien sûr,

01:41.137 --> 01:43.390
cela n'a pas beaucoup de sens ici, mais juste pour

01:43.390 --> 01:45.300
montrer comment cela fonctionne.

01:45.300 --> 01:49.350
Si nous faisons cela et que nous réexécutons maintenant tsc, et que je commence par

01:49.350 --> 01:51.600
supprimer analytics. js afin que nous puissions

01:51.600 --> 01:53.730
voir s'il est recréé, si nous lançons

01:53.730 --> 01:57.140
maintenant tsc ou tsc en mode veille, vous ne voyez aucune

01:57.140 --> 01:59.810
analyse. js est créé, et la raison

01:59.810 --> 02:02.060
en est que nous excluons ce fichier.

02:02.060 --> 02:03.340
Maintenant, bien sûr, pour ce

02:03.340 --> 02:04.670
fichier, cela n'a pas beaucoup

02:04.670 --> 02:07.250
de sens parce que je veux typiquement l'inclure, mais si vous

02:07.250 --> 02:09.360
avez un fichier qui, pour une raison quelconque,

02:09.360 --> 02:12.440
ne devrait pas être compilé, vous pouvez l'exclure comme ceci.

02:12.440 --> 02:14.210
Vous pouvez également travailler avec des caractères

02:14.210 --> 02:15.810
génériques, et par exemple, si vous avez un

02:15.810 --> 02:20.810
fichier qui s'appelle analytics. dév. ts et vous ne voulez pas vraiment compiler

02:20.850 --> 02:22.900
cela, vous pourriez dire que tous les fichiers

02:22.900 --> 02:25.770
qui se terminent par dev. ts ne doivent pas être compilés,

02:25.770 --> 02:27.790
et vous pouvez le faire en ajoutant également

02:27.790 --> 02:29.620
un astérisque ici, qui est un joker, et

02:29.620 --> 02:31.630
maintenant TypeScript ignorera tous les

02:31.630 --> 02:36.470
fichiers qui ont .

02:36.470 --> 02:36.470
dév. ts inclus.

02:36.470 --> 02:40.037
Vous pourriez également ajouter un astérisque, un astérisque, une barre

02:40.037 --> 02:43.080
oblique ici, et cela signifierait que tout fichier avec ce motif

02:43.080 --> 02:45.770
dans n'importe quel dossier sera ignoré.

02:45.770 --> 02:47.420
Ce sont des choses que vous pouvez configurer

02:47.420 --> 02:49.220
ici, la seule chose que je veux configurer

02:49.220 --> 02:51.500
ici, et c'est un paramètre que vous trouverez souvent,

02:51.500 --> 02:54.103
est que je veux exclure node_modules, et l'idée ici est que

02:55.409 --> 02:58.260
je ne veux pas compiler les fichiers TypeScript que je pourrais

02:58.260 --> 03:01.373
avoir à l'intérieur de node_modules.

03:02.449 --> 03:05.080
Maintenant, node_modules est ce dossier qui contient

03:05.080 --> 03:07.160
toutes les dépendances que nous installons

03:07.160 --> 03:09.570
ici dans le paquet. json et les dépendances

03:09.570 --> 03:11.890
de ces dépendances, et par conséquent, ce sont

03:11.890 --> 03:14.660
des bibliothèques tierces que nous importons, que nous

03:14.660 --> 03:16.810
ne voulons pas toucher, et si l'une de ces bibliothèques

03:16.810 --> 03:18.510
devait livrer du code TypeScript,

03:18.510 --> 03:20.630
alors nous ne voulons certainement pas le

03:20.630 --> 03:22.690
compiler, cela ne ferait que ralentir notre

03:22.690 --> 03:25.840
processus de compilation, et dans le pire des cas, cela pourrait

03:25.840 --> 03:29.200
même casser notre projet.

03:29.200 --> 03:30.370
Il est donc assez courant

03:30.370 --> 03:33.330
d'exclure node_modules ici, bien que je précise que si

03:33.330 --> 03:36.510
vous ne spécifiez pas du tout l'option exclude, node_modules

03:36.510 --> 03:41.420
est automatiquement exclu par défaut. Vous n'avez donc pas vraiment besoin d'ajouter cette

03:41.420 --> 03:43.980
option ici, ce serait la valeur par défaut, je veux

03:43.980 --> 03:48.520
juste montrer que l'option exclude existe et comment vous pouvez l'utiliser si la

03:48.520 --> 03:50.570
seule chose que vous voulez exclure est

03:50.570 --> 03:53.404
node_modules, vous n'avez pas besoin d'ajouter la

03:53.404 --> 03:55.670
clé exclude du tout.

03:55.670 --> 03:58.500
Cependant, si vous l'ajoutez, vous devez définir

03:58.500 --> 04:01.400
node_modules car, sinon, il ne l'exclura pas.

04:01.400 --> 04:04.570
Maintenant, en plus d'exclure, nous avons aussi inclure,

04:04.570 --> 04:06.630
et inclure vous permet de faire le contraire,

04:06.630 --> 04:09.570
il vous permet de dire spécifiquement à TypeScript quels

04:09.570 --> 04:12.730
fichiers vous voulez inclure dans le processus de compilation,

04:12.730 --> 04:16.380
et tout ce qui n'est pas répertorié ici ne sera pas compilé, donc si je

04:16.380 --> 04:20.620
pointe sur app. ts ici, vous verrez que si je réexécute tsc, nous n'obtiendrons

04:20.620 --> 04:23.470
pas non plus d'analyse. ts, ou aucune

04:23.470 --> 04:25.570
analyse. Je devrais dire le fichier js.

04:25.570 --> 04:26.403
Pourquoi ?

04:26.403 --> 04:29.230
Parce que l'analyse. js n'est pas inclus dans include,

04:29.230 --> 04:32.370
et comme je l'ai dit, si nous définissons la clé include, alors nous

04:32.370 --> 04:33.970
devons vraiment inclure tout ce

04:33.970 --> 04:35.810
que nous voulons compiler.

04:35.810 --> 04:40.080
Bien entendu, nous pouvons également ajouter des données analytiques. ts ici, et avec cet ajout, nous commencerions

04:40.080 --> 04:43.950
et compilerions, comme vous le voyez maintenant, nous avons les

04:43.950 --> 04:46.740
analyses. js, ou comme alternative,

04:46.740 --> 04:49.650
nous spécifions ici un dossier entier qui contient généralement

04:49.650 --> 04:52.560
les fichiers que nous voulons compiler.

04:52.560 --> 04:55.520
L'exclusion, d'ailleurs, si elle est définie en même temps

04:55.520 --> 04:57.160
que l'inclusion, filtrera l'inclusion,

04:57.160 --> 05:00.290
donc si nous excluons un sous-dossier d'un dossier qui fait

05:00.290 --> 05:01.740
partie de l'inclusion, alors

05:01.740 --> 05:04.980
ce sous-dossier exclu sera exclu, donc fondamentalement nous

05:04.980 --> 05:08.720
compilons l'inclusion moins l'exclusion.

05:08.720 --> 05:10.420
Bien sûr, ici, je ne veux pas définir d'inclusion,

05:10.420 --> 05:12.520
je veux compiler tous les fichiers TypeScript,

05:12.520 --> 05:15.050
et donc je n'ai pas à m'en soucier, exclure node_modules

05:15.050 --> 05:17.200
est tout ce dont j'ai besoin, et comme je l'ai expliqué,

05:17.200 --> 05:20.280
théoriquement, je n'ai même pas besoin de l'ajouter car il serait exclu

05:20.280 --> 05:22.423
par défaut.

05:23.260 --> 05:25.310
Maintenant, vous avez également une option de fichiers,

05:25.310 --> 05:27.560
qui vous permet de pointer sur les fichiers individuels,

05:27.560 --> 05:30.870
donc c'est un peu comme include avec la différence qu'ici vous ne pouvez pas spécifier

05:30.870 --> 05:34.200
des dossiers entiers que vous voulez inclure, au lieu de cela vous spécifiez

05:34.200 --> 05:36.020
juste les fichiers individuels que vous voulez

05:36.020 --> 05:38.220
compiler, cela pourrait être une option pour les petits

05:38.220 --> 05:40.710
projets où vous savez que vous ne travaillerez qu'avec des

05:40.710 --> 05:48.560
fichiers libres, et pour une raison quelconque vous avez un couple d'autres fichiers TypeScript que vous ne voulez pas toucher cependant, alors vous pouvez définir la liste des fichiers

05:48.560 --> 05:51.340
comme ceci.

05:51.340 --> 05:53.360
En réalité, vous n'aurez peut-être

05:53.360 --> 05:55.740
pas besoin de ce paramètre aussi souvent.

05:55.740 --> 05:58.530
Et donc, c'est tout avec la compilation de base

05:58.530 --> 06:00.910
ou les options de gestion de projet ici.

06:00.910 --> 06:03.900
Bien entendu, il est possible de spécifier bien plus de choses

06:03.900 --> 06:08.230
encore, notamment en ce qui concerne le compilateur lui-même et la façon dont il se

06:08.230 --> 06:10.793
comporte pendant l'étape de compilation.
