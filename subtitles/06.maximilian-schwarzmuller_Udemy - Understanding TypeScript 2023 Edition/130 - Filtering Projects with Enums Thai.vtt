WEBVTT

00:02.310 --> 00:03.940
ชาย: ดังนั้นเรามีปัญหาสองประการ

00:03.940 --> 00:06.500
หากเราต้องการเรียกพวกเขาเช่นนั้น ให้แก้ไข

00:06.500 --> 00:10.960
ตอนนี้ฉันต้องการเริ่มต้นด้วยปัญหาที่โครงการแสดงในทั้งสองกล่อง

00:10.960 --> 00:18.930
ฉันต้องการแนะนำการกรองและแน่นอนว่าสถานที่ที่ดีที่สุดในการกรองคือฟังก์ชันการฟังของเรา

00:18.930 --> 00:22.743
ถ้าเราไปที่ที่เราลงทะเบียนผู้ฟังของเรา

00:26.000 --> 00:29.170
ที่นี่ในประโยครายการโครงการ

00:29.170 --> 00:32.270
ทีนี้ เราก็ได้รายชื่อโครงการมาใช่ไหม?

00:32.270 --> 00:36.170
ตอนนี้รายชื่อโครงการนั้นประกอบด้วยโครงการทั้งหมด

00:36.170 --> 00:43.140
อย่างไรก็ตาม ตอนนี้ภายในประโยครายการโครงการ เราสนใจเฉพาะโครงการที่ใช้งานอยู่หรือโครงการที่เสร็จสิ้นแล้วเท่านั้น

00:43.140 --> 00:44.250
อย่างไรก็ตาม ที่นี่

00:44.250 --> 00:53.160
ในทางทฤษฎี เราสามารถใช้ enum ของเราได้เช่นกัน แต่จริงๆ แล้ว ฉันต้องการค่าที่เป็นรูปธรรมที่เก็บไว้ใน enum ด้านล่างหรือในประเภทด้านล่าง

00:53.160 --> 01:02.180
ดังนั้น ที่นี่ ฉันไม่ต้องการใช้ enum เสมอเพราะฉันต้องการแสดงประเภทตัวอักษรของสตริง

01:02.180 --> 01:06.190
ดังนั้น สิ่งที่เราจะทำที่นี่ภายในฟังก์ชันฟังของเราคือ ก่อนที่เราจะจัดเก็บโปรเจ็กต์และเรนเดอร์

01:06.190 --> 01:10.470
เราต้องการกรองโปรเจ็กต์เหล่านั้น

01:10.470 --> 01:13.020
ดังนั้น ที่นี่เรามีโครงการที่เกี่ยวข้องของเรา

01:13.020 --> 01:16.660
คุณสามารถพูดได้ และแน่นอนว่าโครงการถูกกรองแล้ว

01:16.660 --> 01:19.070
วิธีการกรองเป็นวิธีการเริ่มต้นที่มีอยู่ในอาร์เรย์ใดๆ

01:19.070 --> 01:21.460
ใน JavaScript

01:21.460 --> 01:23.690
การดำเนินการนี้ใช้ฟังก์ชันซึ่งดำเนินการกับทุกรายการในอาร์เรย์ของโปรเจกต์นั้น

01:23.690 --> 01:35.040
และเมื่อฟังก์ชันนี้คืนค่าจริง เราจะเก็บรายการนั้นไว้ในอาร์เรย์ที่สร้างขึ้นใหม่ซึ่งจากนั้นจะถูกจัดเก็บไว้ในโปรเจ็กต์ที่เกี่ยวข้อง

01:35.040 --> 01:38.130
หากฟังก์ชันนี้ส่งคืนค่าเท็จ เราจะปล่อยรายการนั้น

01:38.130 --> 01:44.230
ไม่ใช่จากรายการเดิม แต่อยู่ในรายการใหม่ที่สร้างขึ้นและจัดเก็บไว้ในโครงการที่เกี่ยวข้อง

01:44.230 --> 01:48.810
ดังนั้นในที่นี้ เราต้อง return จริงหรือเท็จ ขึ้นอยู่กับว่าเราต้องการเก็บโครงการไว้หรือไม่

01:48.810 --> 01:52.430
และแน่นอนว่าเราต้องดูสถานะ

01:52.430 --> 01:59.070
สถานะโครงการคือ enum และเราต้องการตรวจสอบว่าสถานะโครงการเท่ากับสถานะโครงการที่ใช้งานอยู่หรือไม่

01:59.070 --> 02:05.790
หากเราอยู่ในรายการโครงการที่ใช้งานอยู่ ดังนั้นหากคุณสมบัติประเภทเปิดใช้งานอยู่

02:05.790 --> 02:12.270
หรือหากสถานะโครงการเสร็จสิ้นหากเราอยู่ใน รายการเสร็จสิ้น

02:12.270 --> 02:15.430
ตรงนี้ ผมจะเขียน a- ตัวของฟังก์ชันจริงๆ

02:15.430 --> 02:17.250
โดยพันสิ่งนี้ด้วยวงเล็บปีกกา

02:17.250 --> 02:20.100
ไม่ใช้ปุ่มลัดฟังก์ชันลูกศร แล้วเราตรวจสอบได้

02:20.100 --> 02:25.540
ถ้าประเภทนี้เท่ากัน ฉันต้องการส่งคืนผลลัพธ์ของการตรวจสอบนี้

02:26.800 --> 02:40.160
อื่น และดังนั้น หลังจากคำสั่ง if นี้ ฉันต้องการคืนค่าการเปรียบเทียบเป็นสถานะโครงการที่เสร็จสิ้นแล้ว

02:40.160 --> 02:43.520
ด้วยเหตุนี้ เราจึงได้โปรเจ็กต์ที่เกี่ยวข้องซึ่งตอนนี้เราสามารถจัดเก็บไว้ที่นี่

02:43.520 --> 02:45.490
ในโครงการที่ได้รับมอบหมาย

02:45.490 --> 02:47.070
ทีนี้มาดูกันว่ามันใช้ได้ไหม

02:47.070 --> 02:48.053
ถ้าฉันโหลดซ้ำและเราเพิ่มโปรเจ็กต์ที่นี่

02:49.310 --> 02:52.743
จะใช้งานได้หรือไม่

02:54.950 --> 02:58.050
วิธีนี้ใช้ได้ผลและคุณจะเห็นว่ามันถูกเพิ่มในโครงการที่ใช้งานอยู่เท่านั้น

02:58.050 --> 03:00.020
ไม่ใช่กับโครงการที่เสร็จสิ้นแล้ว

03:00.020 --> 03:02.390
อย่างไรก็ตาม หากฉันเพิ่มโครงการที่สองที่นี่

03:02.390 --> 03:04.740
เรายังคงมีการทำสำเนานั้นอยู่

03:04.740 --> 03:08.720
ตอนนี้เกี่ยวข้องกับวิธีที่เราเรนเดอร์โปรเจกต์ของเรา

03:08.720 --> 03:10.520
ภายในโปรเจ็กต์การเรนเดอร์

03:10.520 --> 03:15.090
เรามักจะดูรายการโปรเจ็กต์ทั้งหมดของเราและผนวกเข้ากับรายการ

03:15.090 --> 03:16.640
ตอนนี้ ปัญหาของเรื่องนั้น

03:16.640 --> 03:21.950
แน่นอน คือเราอาจมีการแสดงรายการโครงการบนหน้าจออยู่แล้ว

03:21.950 --> 03:30.170
ตอนนี้ วิธีแก้ไขที่ดีที่สุดที่เป็นไปได้ในที่นี้คือทำการเปรียบเทียบโดยที่คุณตรวจสอบสิ่งที่เรนเดอร์ไปแล้วและสิ่งที่คุณต้องเรนเดอร์

03:30.170 --> 03:34.110
เพื่อหลีกเลี่ยงเรนเดอร์ซ้ำโดยไม่จำเป็น

03:34.110 --> 03:35.760
อย่างไรก็ตาม การเรียกใช้การเปรียบเทียบนี้โดยดูที่

03:35.760 --> 03:39.710
DOM จริงนั้นมีค่าใช้จ่ายด้านประสิทธิภาพค่อนข้างน้อย

03:39.710 --> 03:45.250
สำหรับแอปพลิเคชันนี้ จึงเป็นเรื่องปกติอย่างยิ่งที่จะใช้องค์ประกอบรายการของเราและล้างเนื้อหาทั้งหมดโดยตั้งค่า

03:45.250 --> 03:53.710
HTML ภายในเป็นสตริงว่าง ซึ่งหมายความว่าเราจะกำจัดรายการทั้งหมดแล้วแสดงผลใหม่

03:53.710 --> 03:56.350
นั่นหมายความว่าเมื่อใดก็ตามที่เราเพิ่มโปรเจ็กต์ใหม่

03:56.350 --> 04:00.210
เราจะเรนเดอร์โปรเจ็กต์ทั้งหมด แต่เพื่อจุดประสงค์ของโปรเจกต์ที่นี่

04:00.210 --> 04:01.670
สำหรับแอปพลิเคชันนี้ ที่นี่

04:01.670 --> 04:03.490
ไม่เป็นไรอย่างแน่นอน

04:03.490 --> 04:06.987
ทีนี้ถ้าเราบันทึกมันได้ เรามาลองดูกันอีกครั้ง

04:06.987 --> 04:10.540
"มันใช้ได้ไหม? " เป็นโปรเจ็กต์แรกและตอนนี้ถ้าฉันเพิ่มโปรเจ็กต์อื่นที่นี่

04:10.540 --> 04:17.453
คุณเห็นไหมว่าโปรเจ็กต์นั้นถูกเพิ่ม แต่โปรเจ็กต์อื่นจะไม่ถูกเพิ่มอีก

04:18.430 --> 04:23.540
อ๊ะ และตอนนี้ ฉันได้รับข้อผิดพลาด (พึมพำ) เนื่องจากคำอธิบายยาวไม่พอ

04:23.540 --> 04:26.230
ตอนนี้ทุกอย่างใช้งานได้แล้ว อย่างที่คุณบอก

04:26.230 --> 04:30.090
และเรากำลังเรนเดอร์โปรเจกต์เหล่านี้ในแบบที่ควรเรนเดอร์

04:30.090 --> 04:32.170
ซึ่งแน่นอนว่าถูกต้อง

04:32.170 --> 04:35.050
และด้วยเหตุนี้ แอปพลิเคชันจึงดูไม่เลวนัก

04:35.050 --> 04:44.040
สิ่งหนึ่งที่ขาดหายไปคือฟังก์ชันการลากและวางหรือวิธีการรับโครงการจากรายการแรกไปยังรายการที่สอง

04:44.040 --> 04:45.180
เราไม่ได้แสดงข้อมูลอื่นๆ

04:45.180 --> 04:48.900
ที่เราได้รับ คำอธิบาย และจำนวนคนจริงๆ

04:48.900 --> 04:50.750
นั่นก็ไม่ดีเช่นกัน

04:50.750 --> 05:01.000
และเรายังมีโค้ดที่ซ้ำกันอีกเล็กน้อยเมื่อเราดูรายการโครงการที่ส่วนนี้และส่วนอินพุตของโครงการ

05:01.000 --> 05:04.270
ในทั้งสองเรามีองค์ประกอบเทมเพลต องค์ประกอบโฮสต์ และองค์ประกอบ

05:04.270 --> 05:06.970
และเรามีวิธีการแนบและอื่นๆ

05:06.970 --> 05:14.480
ดังนั้นฉันต้องการปรับปรุงโค้ดที่นี่และนำโค้ดบางส่วนกลับมาใช้ใหม่โดยใช้การสืบทอดและใช้ส่วนคำสั่งฐาน

05:14.480 --> 05:18.580
และหลังจากนั้น ฉันต้องการสร้างส่วนคำสั่งเฉพาะสำหรับทุกรายการโครงการ

05:18.580 --> 05:23.725
ซึ่งเราจะยกตัวอย่างส่วนคำสั่งรายการโครงการนั้นภายในรายการโครงการ แทนที่จะต่อท้ายรายการด้วยตนเอง

05:23.725 --> 05:40.540
เช่นนี้แล้วภายในส่วนคำสั่งรายการโครงการ 'ที่จะสร้าง' ส่วนที่ต่อท้ายควรเกิดขึ้น จากนั้นฉันยังต้องการแสดงข้อมูลเพิ่มเติมเกี่ยวกับรายการโครงการ รวมถึงคำอธิบายและจำนวนคน ที่ได้รับมอบหมาย.

05:40.540 --> 05:42.080
ดังนั้น มีงานบางอย่างที่ต้องทำ

05:42.080 --> 05:48.660
และก่อนที่เราจะทำงานกับรายการโครงการในรูปแบบที่ฉันต้องการ เรามาตรวจสอบให้แน่ใจก่อนอื่น

05:48.660 --> 05:53.660
เราเพิ่มการสืบทอดเพื่อสร้างรายการโครงการและอินพุตโครงการของเรา

05:53.800 --> 05:57.693
หรือบางส่วนนำมาใช้ใหม่ได้มากขึ้น
