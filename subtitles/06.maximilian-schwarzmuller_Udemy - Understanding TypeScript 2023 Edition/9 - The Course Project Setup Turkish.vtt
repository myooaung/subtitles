WEBVTT

00:02.490 --> 00:03.860
Erkek Eğitmen: IDE'yi kurduk,

00:03.860 --> 00:04.860
ki bu önemli.

00:04.860 --> 00:07.780
Şimdi de bu kurs boyunca farklı kurs modüllerinde

00:07.780 --> 00:09.370
kullanacağımız bir başlangıç

00:09.370 --> 00:11.250
projesi oluşturalım.

00:11.250 --> 00:13.230
Yani temel olarak, her kurs modülünü

00:13.230 --> 00:16.110
başlatabileceğimiz ve daha sonra kodumuzu yazabileceğimiz

00:16.110 --> 00:18.339
bir proje kurulumu.

00:18.339 --> 00:20.730
Bu kurs boyunca göreceğiniz gibi, kod

00:20.730 --> 00:24.330
yazmak genel olarak karmaşık bir kurulum gerektirmez.

00:24.330 --> 00:28.330
Ancak burada, kod yazabileceğimiz, derleyebileceğimiz ve ardından

00:28.330 --> 00:31.490
bu kodun çıktısını tarayıcıda hemen görebileceğimiz

00:31.490 --> 00:33.530
bir proje istiyorum.

00:33.530 --> 00:36.970
Bunun için öncelikle yeni bir dizin HTML dosyası ekleyeceğim.

00:36.970 --> 00:39.520
Ve bunu herhangi bir boş klasöre ekleyebilirsiniz,

00:39.520 --> 00:42.620
burada gördüğünüz diğer iki dosya veya klasör, sürüm

00:42.620 --> 00:45.530
kontrolü kullanıyorsanız git için ve yakınlaştırma

00:45.530 --> 00:47.460
düzeyini ayarlayan editörüm için

00:47.460 --> 00:50.200
yapılandırma dosyalarıdır.

00:50.200 --> 00:51.670
Elimdeki tek şey bu.

00:51.670 --> 00:54.930
Ancak bu dizin HTML dosyasında, şimdi onu bir temel

00:54.930 --> 00:56.750
iskeletle başlatacağım.

00:56.750 --> 00:58.390
Ve bu kişilerin kod yazması

00:58.390 --> 01:02.770
için HTML yazıp html:5 seçeneğini seçebilirsiniz, eğer bu menüyü alamıyorsanız,

01:02.770 --> 01:04.200
control ve boşluk tuşlarına

01:04.200 --> 01:06.820
basmanız yeterlidir.

01:06.820 --> 01:09.600
Html:5 seçeneğini seçin ve enter tuşuna basın;

01:09.600 --> 01:11.740
bu iskeleti elde edeceksiniz.

01:11.740 --> 01:14.670
Burada TypeScript'i anlamayı başlık olarak girebilirdik

01:14.670 --> 01:16.722
ama bunun çok fazla önemi yok.

01:16.722 --> 01:21.150
Daha da önemlisi, burada head bölümünüze bir script etiketi

01:21.150 --> 01:25.000
eklemeniz ve bir kaynak ekleyip uygulamayı işaret

01:25.000 --> 01:29.020
etmenizdir. js dosyasını buraya ekleyin ve defer özelliğini ekleyin.

01:29.020 --> 01:32.270
Bu, bir uygulamayı içe aktarmaya çalışır. js dosyası, tabii

01:32.270 --> 01:34.520
ki şu anda mevcut değil.

01:34.520 --> 01:35.530
Ve elbette daha sonra,

01:35.530 --> 01:37.960
eğer bulursa, onu da infaz edecektir.

01:37.960 --> 01:41.210
Bu, değişikliklerimizi, kod değişikliklerimizi doğrudan

01:41.210 --> 01:44.790
tarayıcıdaki ekranda görüntülememizi sağlar.

01:44.790 --> 01:47.410
Ya da sadece konsola, tarayıcı def araçlarına

01:47.410 --> 01:49.560
bir şey kaydediyorsak.

01:49.560 --> 01:52.250
Sonra, bir uygulama ekleyeceğim. ts dosyası.

01:52.250 --> 01:54.170
Bu dosya, bazı kodların yazılacağı bir

01:54.170 --> 01:55.530
TypeScript dosyasıdır.

01:55.530 --> 01:58.580
Ve orada, örneğin, kodunuzun buraya gittiğini veya ne isterseniz

01:58.580 --> 02:01.580
onu konsol günlüğüne kaydedebilirsiniz.

02:01.580 --> 02:03.780
Burada istediğiniz her şeyi konsol günlüğüne kaydedebilirsiniz.

02:03.780 --> 02:06.870
Ve bunu yaparsanız, bu dosyayı daha önce yüklediğimiz TypeScript

02:06.870 --> 02:09.280
ile derleyebilirsiniz, bunun için terminali

02:09.280 --> 02:10.880
açabilir, buradaki editöre entegre

02:10.880 --> 02:13.070
edebilirsiniz.

02:13.070 --> 02:16.580
Ve basitçe tsc uygulamasını yazın. ts.

02:16.580 --> 02:18.490
Bu TypeScript dosyasını derler ve bir uygulama

02:18.490 --> 02:20.610
oluşturur. js dosyası, burada

02:20.610 --> 02:22.530
içe aktardığımız dosya.

02:22.530 --> 02:25.160
Ve şimdi bu dizini açarsanız. html dosyasında, burada

02:25.160 --> 02:27.120
ne olduğunu görürsünüz.

02:27.120 --> 02:29.800
Burada yazdığınız mantıkla yola çıkıyorsunuz.

02:29.800 --> 02:32.340
Ve bu ya dom üzerindeki bir şeyi manipüle eden

02:32.340 --> 02:34.410
bir mantıktır ya da bu durumda olduğu

02:34.410 --> 02:37.870
gibi, sadece konsola kilitlenen bir mantıktır.

02:37.870 --> 02:41.700
Bu durumda bu HTML dosyasını tarayıcıda açtım.

02:41.700 --> 02:44.460
IDE'nin dışında üzerine çift tıklayabilirsiniz.

02:44.460 --> 02:47.960
Yani normal Windows Explorer'da veya Mac Finder'da.

02:47.960 --> 02:49.910
Konsola bir şeyler kaydediyorsanız geliştirici

02:49.910 --> 02:51.830
araçlarınızı açabilirsiniz ve günlüğünüzü

02:51.830 --> 02:54.010
burada görebilirsiniz.

02:54.010 --> 02:56.690
Şimdi bu güzel, ancak burada kodumuzda bir

02:56.690 --> 03:00.470
şey değiştirdiğimizde, manuel olarak yeniden derlememiz

03:00.470 --> 03:02.340
gerekiyor, şimdilik böyle.

03:02.340 --> 03:04.300
Kursun ilerleyen bölümlerinde değişecektir.

03:04.300 --> 03:07.970
Ancak bu sayfayı da manuel olarak yeniden yüklememiz gerekiyor.

03:07.970 --> 03:10.140
Bunu hızlandırmak ve bir şeyi her değiştirdiğinizde

03:10.140 --> 03:11.940
bunu yapmak zorunda kalmamanızı

03:11.940 --> 03:13.900
sağlamak için, aslında bu kurs boyunca

03:13.900 --> 03:19.500
kullanacağımız bu sahte kuruluma başka bir araç da ekleyeceğiz, böylece bu otomatik olarak

03:19.500 --> 03:22.360
gerçekleşecek.

03:22.360 --> 03:23.720
Şimdi böyle bir aracı yüklemek

03:23.720 --> 03:26.430
için burada npm init'i çalıştıralım.

03:26.430 --> 03:29.830
Bu proje klasöründe, node JS yüklediyseniz

03:29.830 --> 03:32.113
npm komutu kullanılabilir.

03:32.960 --> 03:36.050
Bunun için nodejs'i ziyaret ettiğinizden emin olun. org adresine gidin ve burada

03:36.050 --> 03:39.690
bulacağınız en son sürümü indirip yükleyin.

03:39.690 --> 03:43.040
Şimdilik, herhangi bir node JS kodu yazmayacağız, ancak node JS,

03:43.040 --> 03:45.960
üçüncü taraf bağımlılıklarını veya geliştirmemizi hızlandıran

03:45.960 --> 03:48.610
yararlı araçları yüklemek için kullanabileceğiniz

03:48.610 --> 03:51.210
NPM aracıyla birlikte gelir.

03:51.210 --> 03:53.840
Ve bu nedenle, ona burada ihtiyacımız var.

03:53.840 --> 03:55.970
Bu yüklendikten sonra, bu proje klasöründe

03:55.970 --> 03:57.800
npm init'i çalıştırabilirsiniz.

03:57.800 --> 03:58.740
Sadece enter tuşuna

03:58.740 --> 04:00.560
basın ve buradaki tüm soruları her zaman

04:00.560 --> 04:03.570
enter tuşuna basarak varsayılanlarla yanıtlayabilirsiniz.

04:03.570 --> 04:06.780
Ve bu tamamlandığında, size bir paket verir. json dosyası buna benzer

04:06.780 --> 04:08.150
bir şeye benziyor.

04:08.150 --> 04:12.500
Ve şimdi bu projeye özel bir bağımlılık yüklemek için npm install'ı

04:12.500 --> 04:14.410
çalıştırabilirsiniz.

04:14.410 --> 04:16.210
Yani bir aracı yüklemek için, bu projede

04:16.210 --> 04:17.730
kullanabileceğiniz -: -save-dev

04:17.730 --> 04:22.520
seçeneğini kullanarak onu yalnızca geliştirme bağımlılığı olarak işaretleyebilirsiniz,

04:22.520 --> 04:24.580
yani geliştirme sırasında bize yardımcı

04:24.580 --> 04:26.610
olan ve ana kodumuzun bir parçası olarak

04:26.610 --> 04:29.930
çalışacak herhangi bir kod içermeyen bir araç.

04:29.930 --> 04:33.470
Ve aracın adı lite-server.

04:33.470 --> 04:37.103
Burada enter tuşuna basarsanız, bu ekstra aracı yükler.

04:38.230 --> 04:42.000
Ve bu bittiğinde, paketinize girin. json dosyasını açın ve scripts

04:42.000 --> 04:44.390
kısmına virgül ekleyin ve start adını

04:44.390 --> 04:46.870
vereceğiniz yeni bir script ekleyin.

04:46.870 --> 04:49.029
Ve sonra çift tırnak arasında bir

04:49.029 --> 04:51.570
değer olarak lite-server girin.

04:51.570 --> 04:54.580
Yani buraya eklenen paketin adı.

04:54.580 --> 04:57.550
Şimdi enter tuşuna basarsanız, bu başlangıç betiğini başlatmak için

04:57.550 --> 04:59.400
burada npm start'ı çalıştırabilirsiniz.

04:59.400 --> 05:02.530
Ve lite sunucu, her zaman dizine hizmet eden basit bir geliştirme

05:02.530 --> 05:05.430
sunucusudur. sayfanın yanındaki

05:05.430 --> 05:08.410
html dosyası. json dosyası, yani bu dosya.

05:08.410 --> 05:13.410
Ve uygulamanızı burada gördüğünüz URL'de, varsayılan olarak

05:13.620 --> 05:16.143
localhost:3000'de sunar.

05:17.440 --> 05:19.690
Ve sonra sadece bu konumu ziyaret edebilirsiniz.

05:19.690 --> 05:23.090
Tarayıcıya localhost:3000 girmeniz yeterlidir.

05:23.090 --> 05:24.860
Ve şimdi kodunuz burada çalışıyor.

05:24.860 --> 05:26.170
Peki bu neden daha iyi?

05:26.170 --> 05:28.840
Artık bu dizindeki başka bir dosya değiştiğinde

05:28.840 --> 05:32.180
sayfa otomatik olarak yeniden yüklenecektir.

05:32.180 --> 05:35.130
Örneğin, buraya bir ünlem işareti eklersem ve bunu

05:35.130 --> 05:38.180
kaydedersem ve daha sonra bunu tsc uygulamasıyla tekrar

05:38.180 --> 05:40.323
derlersem. TS'ye girdiğinizde ve tarayıcıya

05:42.270 --> 05:43.580
geri döndüğünüzde, otomatik

05:43.580 --> 05:45.340
olarak yeniden yüklendiği için en son

05:45.340 --> 05:47.230
çıktıyı hemen görürsünüz.

05:47.230 --> 05:49.620
Bu da bizi elle doldurma gibi ekstra

05:49.620 --> 05:51.690
bir zahmetten kurtarıyor.

05:51.690 --> 05:54.540
Şimdi bu npm başlatma işlemi hakkında önemli olan, projeniz

05:54.540 --> 05:57.450
üzerinde çalıştığınız sürece, tarayıcıda çalıştırıldığını

05:57.450 --> 06:00.210
görmek istediğiniz kodu yazdığınız sürece kesinlikle

06:00.210 --> 06:02.800
çalışır durumda tutun.

06:02.800 --> 06:03.633
İşiniz bittiğinde,

06:03.633 --> 06:06.450
bu işlemden her zaman control C ile çıkabilirsiniz, ancak

06:06.450 --> 06:08.200
bunu yaptığınızda, projeniz artık

06:08.200 --> 06:11.600
yerel ana bilgisayar 3000 altında sunulmayacaktır.

06:11.600 --> 06:13.980
Bu yüzden kod yazdığınız ve değişiklik yaptığınız

06:13.980 --> 06:15.650
sürece onu çalışır durumda tutun.

06:15.650 --> 06:17.510
Bununla birlikte, geri değiştireceğim,

06:17.510 --> 06:19.200
ancak bu tamamen size kalmış.

06:19.200 --> 06:21.480
Ve bu kurs boyunca kullanacağım proje kurulumu

06:21.480 --> 06:22.410
budur.

06:22.410 --> 06:24.200
Ayrıca, elbette, bitmiş halini

06:24.200 --> 06:25.530
de ekte bulacaksınız.

06:25.530 --> 06:27.250
Sadece önemli bir not.

06:27.250 --> 06:30.330
Ekteki başlangıç projesini veya başka bir kurs anlık

06:30.330 --> 06:32.500
görüntüsünü, kursun herhangi bir yerinde

06:32.500 --> 06:35.900
bulduğunuz başka bir kod anlık görüntüsünü indirirseniz,

06:35.900 --> 06:38.920
bu düğüm modülleri klasörünü içermeyen bir indirme

06:38.920 --> 06:41.070
elde edersiniz.

06:41.070 --> 06:42.590
Bu, sonuçta tüm üçüncü taraf

06:42.590 --> 06:45.250
paketlerini ve bağımlılıklarını depolayan

06:45.250 --> 06:46.970
büyük bir klasördür.

06:46.970 --> 06:49.840
Ve çok büyük olduğu için genellikle siliyorum, çünkü

06:49.840 --> 06:52.260
npm install'ı çalıştırarak kolayca yeniden

06:52.260 --> 06:54.080
oluşturabilirsiniz.

06:54.080 --> 06:56.640
Bu nedenle, eklerimden birini indirirseniz,

06:56.640 --> 06:59.010
çıkarılan klasöre gidin ve bu klasörde

06:59.010 --> 07:01.530
npm install'ı çalıştırın.

07:01.530 --> 07:03.341
Bu da tüm bağımlılıkları yükleyecek ve

07:03.341 --> 07:06.110
bu node modülleri klasörünü yeniden oluşturacaktır.

07:06.110 --> 07:07.280
Ve bunu yaptıktan sonra, npm

07:07.280 --> 07:08.610
start'ı çalıştırabilir veya

07:08.610 --> 07:11.330
bu projede ne yapmak istiyorsanız onu yapabilirsiniz.

07:11.330 --> 07:13.360
Ve bununla birlikte, kurs boyunca kullanacağımız

07:13.360 --> 07:14.750
bu proje kurulumuna sahip olduk.

07:14.750 --> 07:16.810
Şimdi daha fazla zaman kaybetmeyelim

07:16.810 --> 07:18.303
ve hemen başlayalım.
