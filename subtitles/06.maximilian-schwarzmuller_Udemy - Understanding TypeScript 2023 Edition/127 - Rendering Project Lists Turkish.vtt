WEBVTT

00:02.370 --> 00:05.290
Anlatıcı: Artık kullanıcı girdisini alabildiğimize ve

00:05.290 --> 00:08.630
TypeScript'imizin yardımıyla tüm doğrulamaları yapabildiğimize

00:08.630 --> 00:11.420
göre, burada tahrik edilen doğrulama mantığı.

00:11.420 --> 00:13.810
Devam edelim ve bu toplanan kullanıcı girdisiyle

00:13.810 --> 00:18.420
konsola çıktı vermekten daha fazlasını yaptığımızdan emin olalım.

00:18.420 --> 00:19.450
Çünkü şu anda tabii

00:19.450 --> 00:21.330
ki yaptığımız şey bu, doğru.

00:21.330 --> 00:24.670
Sonunda, konsol yapmak için topladığımız deed

00:24.670 --> 00:26.030
bilgilerini yazdırıyorum

00:26.030 --> 00:30.300
ve bu uygulamadaki nihai hedefimiz bu değil.

00:30.300 --> 00:34.290
Bunun yerine amaç, her proje kaleminin buradaki

00:34.290 --> 00:37.770
şablona dayandığı bu proje listesini de bu

00:37.770 --> 00:41.550
şablona dayalı hale getirmek olmalıdır.

00:41.550 --> 00:45.750
Ve burada topladığımız bilgileri yayınlıyoruz.

00:45.750 --> 00:48.520
Üzerinde çalışmak istediğim bir sonraki şey bu olacak.

00:48.520 --> 00:52.970
Burada forumu oluşturmaktan ve kullanıcı girdisini toplamaktan

00:52.970 --> 00:55.440
sorumlu olan proje giriş maddemizin

00:55.440 --> 00:57.350
yanı sıra, bir proje listesi

00:57.350 --> 00:59.410
oluşturmaktan sorumlu olan

00:59.410 --> 01:03.230
sayı maddesine sahip olmak istiyorum.

01:03.230 --> 01:06.100
Ve aslında bunu iki maddeye ayıracağız.

01:06.100 --> 01:07.650
Liste için bir madde

01:07.650 --> 01:11.000
ve listedeki proje öğesi başına bir sınıf.

01:11.000 --> 01:14.970
Ve sonra burada toplanan girdiyi temel olarak proje listemize

01:14.970 --> 01:18.500
aktarmanın ve ona yeni bir öğe eklemenin bir yolunu

01:18.500 --> 01:20.650
bulmamız gerekiyor.

01:20.650 --> 01:23.420
Öyleyse bunu adım adım ele alalım ve bir proje

01:23.420 --> 01:26.880
listesi sınıfı ekleyerek başlayalım derim.

01:26.880 --> 01:29.380
Şimdi tam olarak eklediğiniz yerde, bu size kalmış.

01:29.380 --> 01:32.900
Sıra önemli değildir, çünkü Java betiği sonunda çalıştırmadan

01:32.900 --> 01:36.430
önce bu dosyanın tamamını ayrıştıracaktır.

01:36.430 --> 01:38.860
Böylece tüm sınıflardan haberdar olacaktır.

01:38.860 --> 01:41.990
Yine de bunu buraya proje giriş cümlesinin üstüne ekleyeceğim

01:41.990 --> 01:45.740
çünkü proje giriş sınıfının içine inşa etmek üzere olduğum proje

01:45.740 --> 01:48.810
listesi cümlesine güveniyorum, ancak yine de gerçekten

01:48.810 --> 01:50.500
önemli.

01:50.500 --> 01:55.500
Burada proje listesi cümlem olacak, proje listesi ve buradaki

01:55.600 --> 01:59.230
bu cümle fikri biraz proje girişinde yaptığımız

01:59.230 --> 02:01.170
şeyle ilgili.

02:01.170 --> 02:04.300
Buradaki şablonuma ulaşmak ve ardından onu uygulama dışında

02:04.300 --> 02:06.930
belirli bir yerde işlemek istiyorum.

02:06.930 --> 02:09.480
Bu nedenle, burada yapabileceğimiz şey yine

02:09.480 --> 02:13.120
bir kurucu ekleyebiliriz, ihtiyacımız olan alanları ekleyebiliriz

02:13.120 --> 02:15.310
ve sonunda şablon öğesine ve ana bilgisayar

02:15.310 --> 02:17.030
öğesine ihtiyaç duyacağız, bu

02:17.030 --> 02:22.030
nedenle her ikisini de buraya proje listemize ekleyebiliriz.

02:22.440 --> 02:25.190
Ayrıca elemanın kendisine de ihtiyacımız

02:25.190 --> 02:29.640
olacak, yani render edilecek olan somut elemana diyebilirim.

02:29.640 --> 02:31.800
Yine de türler farklılık gösterecektir.

02:31.800 --> 02:34.580
Ana öğe hala bir div olacak çünkü listeyi

02:34.580 --> 02:38.330
bu div içinde de oluşturmak istiyorum.

02:38.330 --> 02:40.970
Ama somut unsur, ki biz onu işliyoruz.

02:40.970 --> 02:43.960
Elbette, bu bir form öğesi değil, ancak liste

02:43.960 --> 02:46.180
şablonumuza bakarsak, içinde

02:46.180 --> 02:48.520
bir bölüm olduğunu görürüz.

02:48.520 --> 02:51.010
Yani, bir bölüm elemanımız var.

02:51.010 --> 02:54.420
Şimdi element ve bu bölüm elementi olmadığı ortaya çıktı, bu yüzden

02:54.420 --> 02:57.040
sadece normal bir HTML elementine sahip olacağız

02:57.040 --> 03:00.490
çünkü her element bazı vergiler için burada bu tipe sahiptir.

03:00.490 --> 03:03.060
Eğer öyleyse daha özel tipler vardır ve

03:03.060 --> 03:05.710
biz sadece HTML tipini kullanabiliriz.

03:05.710 --> 03:10.710
Şimdi elbette bu unsurlara erişmemiz gerekiyor.

03:10.970 --> 03:15.600
Dolayısıyla, bu kodu aslında proje listesinin yapıcısına

03:15.600 --> 03:20.250
eklenen proje girdisinin yapıcısından buraya kopyalayabilir

03:20.250 --> 03:24.730
ve şimdi bazı şeyleri ayarlayabiliriz.

03:24.730 --> 03:27.630
Örneğin, şablon öğem şu anda proje girdisi hakkında

03:27.630 --> 03:29.420
bir fikre sahip değil.

03:29.420 --> 03:32.150
Bunun yerine artık proje listesi var.

03:32.150 --> 03:36.660
Şimdi bunu kopyalayalım ve öğeyi seçmek için bunu kullanalım.

03:36.660 --> 03:39.760
Yine de maliyetini karşılayacağım ve yine de alacağımı

03:39.760 --> 03:42.710
kesin olarak biliyorum, bu yüzden dis değişmez.

03:42.710 --> 03:45.520
Ana bilgisayar elemanları ID uygulaması ile hala ölmek üzere.

03:45.520 --> 03:47.820
Yani bu durum değişmez.

03:47.820 --> 03:52.070
Sonra içeriğimi içe aktarıyorum ve sonra, yani mağaza,

03:52.070 --> 03:53.530
ilk öğe.

03:53.530 --> 03:55.380
İthalattan, şablondan.

03:55.380 --> 03:57.780
Yani temel olarak şablondaki ilk

03:57.780 --> 04:01.590
öğe olan bölümü buradaki öğe özelliğinde sakladım.

04:01.590 --> 04:04.430
Ancak, bu bir HTML form öğesi değildir.

04:04.430 --> 04:07.210
Burada sadece bir HTML öğesi var.

04:07.210 --> 04:11.710
Şimdi buraya bir ID de atayabiliriz ve aslında atadık, dinamik

04:11.710 --> 04:15.380
olmalı, sabit kodlu olmamalı çünkü birden fazla proje

04:15.380 --> 04:16.970
listemiz olacak.

04:16.970 --> 04:21.220
Son uygulamada araç listelerine sahip olmak istiyorum, biri projelerin

04:21.220 --> 04:25.060
eylemi için ve diğeri projelerin yürürlüğe konması için ve

04:25.060 --> 04:28.420
teklif ediyorlar, yapıcıya bazı ek bilgiler almak

04:28.420 --> 04:29.895
istiyorum.

04:29.895 --> 04:35.703
Projenin türü ve ben istatistikler, TypeScript kısayolunu kullanacağım.

04:35.703 --> 04:39.250
Otomatik olarak aynı isimde bir özellik oluşturmak

04:39.250 --> 04:44.170
ve bu argümana aktarılan değeri aynı isimli özellikte saklamak için parametrenin

04:44.170 --> 04:48.060
önüne private veya public bir accessor ekleyebileceğiniz

04:48.060 --> 04:51.730
yerler hakkında bilgi edinirsiniz.

04:51.730 --> 04:55.040
Artık bu sınıfın da yazılacak bir özellik adı olacaktır.

04:55.040 --> 04:57.910
Şimdi soru şu: Bu tip parametresinin tipi

04:57.910 --> 04:58.790
nedir?

04:58.790 --> 05:03.640
Ve bu aslında bir literal tip ve bir union tip olmalıdır.

05:03.640 --> 05:07.270
Ya aktiftir ya da bitmiştir.

05:07.270 --> 05:11.050
Aktif projelerimiz veya bitmiş projelerimiz bile var.

05:11.050 --> 05:14.270
Yani bu, proje listesi oluşturulduğunda almayı

05:14.270 --> 05:16.080
beklediğim bir argüman.

05:16.080 --> 05:20.440
Ve babamla birlikte, D ID özelliğini yazmalıyız, daha sonra buna

05:20.440 --> 05:21.870
dayalı olmalıdır.

05:21.870 --> 05:25.090
Öyle olmalı ve babam için burada gerçek bir şablon kullanıyorum.

05:25.090 --> 05:30.090
Dash projeleri türünde olmalıdır, yani ya aktif dash projeleri

05:31.240 --> 05:33.640
ya da bitmiş dash projeleri.

05:33.640 --> 05:35.070
Benim fikrim de bu.

05:35.070 --> 05:37.540
TypeScript'in bu özelliği kullandığımızı ve

05:37.540 --> 05:40.380
kullanılmadığını anlaması için her zaman bu nokta türünü

05:40.380 --> 05:41.890
kullanabilirsiniz.

05:41.890 --> 05:46.200
Böylece, tüm temel öğelere erişim sağlıyoruz ve şablonumuzdan

05:46.200 --> 05:50.790
elde ettiğimiz bölüme bir kimlik ekliyoruz.

05:50.790 --> 05:53.650
Şimdi, tabii ki, bir, onu işlemek istiyoruz, değil mi?

05:53.650 --> 05:58.600
İşte tüm bu fikir, yine özel bir yöntemle ortaya atılmıştır.

05:58.600 --> 06:00.540
Adaleti sağlayın.

06:00.540 --> 06:06.310
Proje girişinde vardı ve orada şimdi hedef kuyruğunda.

06:06.310 --> 06:11.300
Peki, şimdi baba listesini Dom'a işlemek için bunu Dom'a

06:11.300 --> 06:12.750
ekleyin.

06:12.750 --> 06:16.610
Bu yüzden attach yerine, aslında proje formu için attach

06:16.610 --> 06:19.223
yaptığımın aynısını yapacağım.

06:20.070 --> 06:24.230
Böylece bu satırı buraya kopyalayabilir ve tutum ekleyebiliriz.

06:24.230 --> 06:27.040
Ana öğem var ve bitişik bir öğe eklemek

06:27.040 --> 06:28.420
istiyorum.

06:28.420 --> 06:30.240
Başlangıçtan sonra, bu unsur olmalıdır.

06:30.240 --> 06:33.300
Bunu buradaki şablondan çıkarıyoruz.

06:33.300 --> 06:36.990
Ancak, aslında bunu başlangıçtan sonra değil,

06:36.990 --> 06:41.960
bitişten önce yapmak istiyorum, yani kapanıştan önce, ana öğeyi

06:41.960 --> 06:45.870
yapıştırın ve sonra burada oluşturduğumuz öğeyi

06:45.870 --> 06:51.763
Dom'a eklemek için elbette yapıcıda buraya ekle diyebiliriz.

06:53.880 --> 06:56.370
Şimdi bu liste için proje girdisine

06:56.370 --> 06:59.630
kıyasla önemli bir fark var.

06:59.630 --> 07:03.220
Sadece listeyi Dom'a eklemekle iş bitmiyor.

07:03.220 --> 07:05.270
Giriş bitmişti, değil mi?

07:05.270 --> 07:07.130
Buradaki form tamamlandı.

07:07.130 --> 07:08.720
Tüm girdilerimiz oradaydı.

07:08.720 --> 07:12.420
Tek yapmamız gereken bir olay dinleyicisi kurmaktı.

07:12.420 --> 07:15.840
Şimdi buradaki liste için, aslında onu boş bir şekilde

07:15.840 --> 07:16.673
almadık.

07:16.673 --> 07:21.130
Örneğin, H'den teknolojiye ve oraya bazı metinler eklemek istiyorum.

07:21.130 --> 07:22.990
Bu yüzden bir sayı ekleyeceğim.

07:22.990 --> 07:26.020
Özel yönteminize yeni yöntem.

07:26.020 --> 07:29.120
Render veya içerik uygun bir isim olabilir.

07:29.120 --> 07:34.120
Benim buradaki fikrim ise bu şablondaki boş alanları bir

07:34.230 --> 07:36.862
yaşam yılı ile doldurmak.

07:36.862 --> 07:37.780
Bunun için.

07:37.780 --> 07:40.040
Ölü içerik oluşturma yöntemine gidelim ve yapmak

07:40.040 --> 07:41.580
istediğim birkaç şey var.

07:41.580 --> 07:45.390
Buradaki proje listemin bir parçası olan ölü sırasız

07:45.390 --> 07:47.200
liste için bir şey stat.

07:47.200 --> 07:48.640
Ona bir kimlik eklemek istiyorum.

07:48.640 --> 07:50.860
Elbette bunu yapmak zorunda değilsiniz, ancak bunu yapmak

07:50.860 --> 07:53.500
istiyorum, böylece daha sonra seçmemiz gerekirse, bunu bunlarla

07:53.500 --> 07:54.390
yapabiliriz.

07:54.390 --> 07:58.220
Burada bir sabitte saklanan bir liste kimliği oluşturacağım

07:58.220 --> 08:00.190
ve bu bir şablon değişmezi olacak,

08:00.190 --> 08:04.100
yani dinamik içerik enjekte edebileceğimiz bir dize olacak

08:04.100 --> 08:09.100
ve bunu çevreleyen proje listesinin türüne dayandırmak istiyorum, bu yüzden

08:09.370 --> 08:14.370
çevreleyen bölümden çıkın ve ardından projeler listesini ekleyin.

08:15.220 --> 08:19.700
Şimdi, stat bölümü yılı olan elemanımızda elde ettiğimiz bir sipariş

08:19.700 --> 08:23.820
listesine ulaşabiliriz, sağ eleman ölü bölümdür.

08:23.820 --> 08:27.360
Dolayısıyla, sıralanmamış listeyi içeriden almak için, örneğin

08:27.360 --> 08:30.940
bir sorgu seçici kullanabilir ve ilkini ve bu durumda yalnızca sıralanmamış

08:30.940 --> 08:33.120
listeyi arayabiliriz.

08:33.120 --> 08:35.720
Bir tane alacağımızı biliyoruz çünkü bir tane olacağını biliyoruz ve sonra

08:35.720 --> 08:38.280
buraya liste kimliği olması gereken bir kimlik ekleyebiliriz.

08:38.280 --> 08:40.280
Yapmak istediğim şeylerden biri de bu.

08:40.280 --> 08:44.970
Ayrıca bu yaştaki metin içeriğini buradaki etikete ayarlamak

08:44.970 --> 08:50.200
istiyorum ve bunun için bu öğeye, sorgu seçiciye ulaşabiliriz.

08:50.200 --> 08:53.020
İlk ve tek HQ etiketini bulun.

08:53.020 --> 08:56.340
Bir tane bulacağımızı biliyoruz, bu nedenle ölü boş

08:56.340 --> 09:01.340
harfleri elemek için ünlem işareti koyduk ve metin içeriğini büyük harfe yazmak

09:02.940 --> 09:05.610
için buna eşit olarak ayarladık.

09:05.610 --> 09:08.130
Tipin her zaman aktif olduğunu unutmayın.

09:08.130 --> 09:10.060
İki opera davasını bitirdik.

09:10.060 --> 09:15.060
Bunu büyük harf artı projelere dönüştürüyoruz, bir Sten de öyle.

09:16.200 --> 09:19.853
Sadece ileriye doğru başlık bölümüdür.

09:21.970 --> 09:25.220
Ve şimdi bununla, genel olarak işimiz bitti.

09:25.220 --> 09:27.580
Bu listede henüz bir ürünümüz yok.

09:27.580 --> 09:30.230
Bunun üzerinde daha sonra çalışacağız, ancak genel olarak işimiz bitti.

09:30.230 --> 09:35.120
Bu render işlemini bir içerik olarak veya örneğin Dom'a ekledikten

09:35.120 --> 09:37.210
sonra çağırabiliriz.

09:37.210 --> 09:39.210
Şimdi bunları iş başında görmek güzel olurdu.

09:39.210 --> 09:42.600
Tabii ki, yine liste öğeleri eksik olacaktır, ancak

09:42.600 --> 09:45.523
burada eylemde bir şey görmek güzel olurdu.

09:46.690 --> 09:49.620
Bunun için, proje girdisini örneklendirdiğimiz

09:49.620 --> 09:53.310
dosyanın en altına gidelim ve orada listelerimizi her zaman

09:53.310 --> 09:55.200
örneklendiremeyiz.

09:55.200 --> 09:59.200
Örneklediğimiz aktif proje listemiz var, ancak yeni proje

09:59.200 --> 10:01.230
listesini çağırıyoruz.

10:01.230 --> 10:04.220
Ve burada ya aktif ya da bitmiş olan bu tip argümanını

10:04.220 --> 10:06.040
aktarmamız gerekir.

10:06.040 --> 10:08.610
Aktif listeyi oluşturduğum için tabii ki pasif

10:08.610 --> 10:09.950
duruma geçiyorum.

10:09.950 --> 10:13.140
Ve tabii ki burada da bitmiş proje

10:13.140 --> 10:15.290
listemiz var.

10:15.290 --> 10:18.673
Şimdi güvenli hale getirirsek, hatasız derlenmesi gerekir.

10:19.520 --> 10:23.090
Dolayısıyla, geri döndüğünüzde görmeniz gereken

10:23.090 --> 10:27.770
şey, buradaki başlıklarla birlikte bu iki boş bölüm ve daha sonra

10:27.770 --> 10:33.390
eklenecek öğelerin, proje öğelerinin ekleneceği boş alandır.

10:33.390 --> 10:37.440
Şu an için böyle bir proje kalemimiz yok, kar.

10:37.440 --> 10:39.710
Bu nedenle bir sonraki adım olarak,

10:39.710 --> 10:43.660
proje ekle'ye tıkladığımızda kodda yeni bir proje

10:43.660 --> 10:49.420
oluşturduğumuzdan emin olmanın bir yolu üzerinde çalışmalıyız.

10:49.420 --> 10:53.730
Yani bir projeyi temsil eden yeni bir veri yapısı ve daha

10:53.730 --> 10:58.047
sonra bu yeni proje hakkındaki bu bilgileri projeler eylemine

10:58.047 --> 10:59.870
aktarıyoruz.

10:59.870 --> 11:03.850
Burada bu aktif proje bölümünü listeleyin, çünkü her yeni proje

11:03.850 --> 11:06.500
varsayılan olarak aktif olmalıdır.

11:06.500 --> 11:09.390
Bir sonraki hedefimiz bu olacak ve yine bunu

11:09.390 --> 11:12.080
uygulamanın birçok farklı yolu olacak.

11:12.080 --> 11:15.870
Bunu bir sonraki derste bulduğum bir yöntemle birlikte

11:15.870 --> 11:16.703
yapacağız.
