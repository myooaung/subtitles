WEBVTT

00:02.120 --> 00:04.590
Eğitmen: Son derste bahsettiğim gibi, izleme

00:04.590 --> 00:06.080
modu harika bir başlangıç ama

00:06.080 --> 00:08.910
ya birden fazla TypeScript dosyamız varsa?

00:08.910 --> 00:13.370
Ya bir de analitiğimiz varsa. sunucumuza varsayımsal

00:13.370 --> 00:18.370
olarak analitik verileri gönderdiğimiz ts dosyası?

00:18.530 --> 00:21.430
Şimdi, burada herhangi bir şey olması için, sadece

00:21.430 --> 00:24.240
bir konsol koyacağım. log deyimini kullanabilirsiniz,

00:24.240 --> 00:26.710
ancak elbette dediğim gibi burada analiz hizmetinize

00:26.710 --> 00:29.180
HTTP istekleri gönderiyor olabilirsiniz.

00:29.180 --> 00:32.685
Diyelim ki bu dosyayı da dizinimize

00:32.685 --> 00:36.420
aktardık. html dosyası.

00:36.420 --> 00:40.320
Eğer analitiği işaret edersek. js burada henüz mevcut değil ancak

00:40.320 --> 00:41.730
derlemeden sonra mevcut

00:41.730 --> 00:44.760
olacak, o zaman bu iki dosyayı yüklüyor olabiliriz

00:44.760 --> 00:46.660
ve tabii ki bunlardan biri değiştiğinde

00:46.660 --> 00:50.900
her iki dosyayı da derlemek isteriz.

00:50.900 --> 00:52.490
Şimdi, bunun için, bir dosyayı

00:52.490 --> 00:55.320
işaret etmeden tsc'yi bu şekilde çalıştırdığımız

00:55.320 --> 00:57.630
ve tüm proje klasörümüzü izlediği ve değişebilecek

00:57.630 --> 00:59.790
herhangi bir TypeScript dosyasını

00:59.790 --> 01:02.480
yeniden derlediği genel bir izleme moduna girebilseydik

01:02.480 --> 01:05.823
iyi olurdu.

01:06.720 --> 01:08.960
Bunun mümkün olduğu ortaya çıktı.

01:08.960 --> 01:11.340
Bunun için TypeScript'e bunun TypeScript

01:11.340 --> 01:15.020
ile yönetilmesi gereken bir proje olduğunu söylememiz

01:15.020 --> 01:16.750
gerekir ve bunu öncelikle

01:16.750 --> 01:18.980
tsc --init komutunu çalıştırarak

01:18.980 --> 01:20.700
yaparız ve bunu yalnızca

01:20.700 --> 01:23.710
bir kez yapmamız gerekir.

01:23.710 --> 01:26.170
Yani burada belirli bir dosyaya işaret etmiyorum, sadece

01:26.170 --> 01:29.540
tsc'yi çalıştırıyorum ve sonra --init'i çalıştırıyorum ve tekrar ediyorum,

01:29.540 --> 01:31.230
bu sadece bir kez gerekli.

01:31.230 --> 01:33.530
Bu komutu çalıştırdığınız bu projeyi bir

01:33.530 --> 01:36.390
TypeScript projesi olarak başlatacaktır.

01:36.390 --> 01:39.910
Bu, temel olarak TypeScript'e bu komutu çalıştırdığınız

01:39.910 --> 01:41.850
klasördeki her şeyi söyleyeceği

01:41.850 --> 01:44.160
anlamına gelir ve bu nedenle bu komutu

01:44.160 --> 01:46.470
VS Code'daki yerleşik terminalle çalıştırmadan

01:46.470 --> 01:48.070
önce doğru klasöre gitmeniz

01:48.070 --> 01:50.550
önemlidir.

01:50.550 --> 01:52.910
Dosyalarımın bulunduğu bu proje klasörüne otomatik

01:52.910 --> 01:55.740
olarak giriyorum, böylece bu proje artık TypeScript tarafından

01:55.740 --> 01:57.370
yönetiliyor.

01:57.370 --> 01:58.400
Enter tuşuna basalım

01:58.400 --> 02:02.634
ve bu tsconfig'i oluştursun. json dosyası.

02:02.634 --> 02:06.580
Bu temel olarak TypeScript için bu dosyanın bulunduğu projenin

02:06.580 --> 02:09.950
ve bu klasörün tüm alt klasörlerinin TypeScript

02:09.950 --> 02:12.239
tarafından yönetilmesi gerektiğinin

02:12.239 --> 02:14.710
göstergesidir.

02:14.710 --> 02:16.080
Şimdi, bu dosyaya bir göz atarsak,

02:16.080 --> 02:17.860
orada bir sürü seçenek görüyoruz, çoğu

02:17.860 --> 02:19.330
yorumlanmış, sadece onları ayarlayabileceğinizi

02:19.330 --> 02:22.090
görmeniz için oradalar ve burada da kısa bir açıklamanız var,

02:22.090 --> 02:24.500
ancak şu anda bunlar hakkında endişelenmemize gerek

02:24.500 --> 02:26.380
yok.

02:26.380 --> 02:29.040
Birazdan onlara da değineceğiz.

02:29.040 --> 02:31.610
Şimdilik, bu dosyayı kapatalım ve bunun

02:32.800 --> 02:35.100
bize ne verdiğini görelim çünkü bize

02:35.100 --> 02:36.550
verdiği şey, artık belirli

02:36.550 --> 02:39.870
bir dosyayı işaret etmeden sadece tsc'yi bu şekilde

02:39.870 --> 02:42.610
çalıştırabileceğimizdir.

02:42.610 --> 02:45.550
Ve bunun yapacağı şey TypeScript'e devam etmesini

02:45.550 --> 02:49.080
ve tüm TypeScript dosyalarını derlemesini söylemektir,

02:49.080 --> 02:53.090
böylece tüm . ts dosyalarını bu projede bulabilir, bu

02:53.090 --> 02:54.770
yüzden burada Enter tuşuna basarsam,

02:54.770 --> 02:56.830
görüyorsunuz, bu biraz zaman alıyor ve şimdi

02:56.830 --> 03:02.620
elimizde bu analitik var. js dosyası ve bu uygulama.

03:02.620 --> 03:02.620
js dosyası.

03:02.620 --> 03:05.160
Şimdi, analizler. js dosyası TypeScript tarafından

03:05.160 --> 03:08.010
oluşturuldu çünkü analitiklere sahip olduğumuzu tespit

03:08.010 --> 03:10.060
etti. ts dosyası ve dediğim

03:10.060 --> 03:14.730
gibi, artık projedeki tüm TypeScript dosyalarını derleyecektir.

03:14.730 --> 03:17.660
Ve elbette bu, saat modu ile de birleştirilebilir.

03:17.660 --> 03:20.630
Daha önce gösterdiğim gibi tsc -w veya --watch komutunu

03:20.630 --> 03:23.420
çalıştırabilirsiniz ve bu artık tüm TypeScript

03:23.420 --> 03:26.970
dosyaları için izleme moduna girecektir.

03:26.970 --> 03:29.590
Şimdi ne zaman bunlardan birini değiştirsem

03:29.590 --> 03:31.920
ve kaydetsem, yeniden derlenecek.

03:31.920 --> 03:33.840
Değişen dosyayı ve dolayısıyla JavaScript

03:33.840 --> 03:36.100
dosyasındaki tüm yansıtılan değişikliği yeniden

03:36.100 --> 03:37.800
derleyecektir.

03:37.800 --> 03:38.633
Ve şimdi burada.

03:38.633 --> 03:41.430
Sayfama geri döndüğümde veri gönderme işlemini de görebiliyoruz

03:41.430 --> 03:44.463
çünkü artık analitikler var. ts dosyası da derlenmiştir.
