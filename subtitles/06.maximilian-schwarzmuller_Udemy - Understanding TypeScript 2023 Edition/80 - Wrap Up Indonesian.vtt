WEBVTT

00:02.090 --> 00:05.740
Narator: Dan itu saja untuk antarmuka dan kelas.

00:05.740 --> 00:08.190
Dalam modul ini, kita telah melihat secara rinci kelas-kelas dan

00:08.190 --> 00:09.630
apa yang bisa kita lakukan di sana.

00:09.630 --> 00:11.390
Classes dan TypeScript, pada

00:11.390 --> 00:14.130
akhirnya, hanya membangun class untuk JavaScript,

00:14.130 --> 00:17.180
dan saya sudah merangkumnya sedikit lebih awal dalam

00:17.180 --> 00:18.720
modul ini.

00:18.720 --> 00:20.710
Antarmuka adalah hal yang berbeda.

00:20.710 --> 00:22.600
Mereka hanya ada di TypeScript.

00:22.600 --> 00:24.670
Mereka adalah fitur TypeScript murni,

00:24.670 --> 00:27.390
membantu Anda menulis kode yang jelas, terstruktur

00:27.390 --> 00:29.450
dengan jelas, dan sangat eksplisit.

00:29.450 --> 00:33.010
Mereka dapat membantu Anda untuk memaksa kelas untuk memiliki fitur-fitur

00:33.010 --> 00:36.810
tertentu atau objek secara umum untuk memiliki struktur tertentu.

00:36.810 --> 00:39.860
Mereka bisa digunakan sebagai tipe fungsi, seperti yang Anda pelajari.

00:39.860 --> 00:42.490
Mereka mengizinkan properti opsional dan

00:42.490 --> 00:45.200
semua metode opsional, omong-omong, jika Anda

00:45.200 --> 00:48.290
menambahkan tanda tanya setelah nama metode.

00:48.290 --> 00:50.190
Jadi, itu adalah sesuatu yang bisa Anda gunakan.

00:50.190 --> 00:53.210
Dan, seperti yang baru saja Anda lihat, ketika dikompilasi

00:53.210 --> 00:55.870
setelah memenuhi perannya untuk memungkinkan TypeScript

00:55.870 --> 00:57.680
memeriksa kode Anda, tidak ada yang

00:57.680 --> 01:00.410
dihilangkan untuk antarmuka ini.

01:00.410 --> 01:02.300
Kode dibuang begitu saja.

01:02.300 --> 01:05.080
Interfaces, bagaimanapun juga, adalah fitur yang

01:05.080 --> 01:07.420
kuat untuk memaksa kelas atau objek Anda untuk

01:07.420 --> 01:09.140
memiliki struktur tertentu dan

01:09.140 --> 01:12.400
untuk mendeskripsikan dengan jelas ide Anda tentang bagaimana

01:12.400 --> 01:14.810
sebuah objek seharusnya terlihat.

01:14.810 --> 01:18.650
Sekarang seperti yang Anda pelajari, Anda sebagian besar dapat menggantinya

01:18.650 --> 01:21.120
dengan tipe kustom jika Anda menginginkannya.

01:21.120 --> 01:23.580
Anda juga dapat mengimplementasikan tipe khusus,

01:23.580 --> 01:27.700
tetapi lebih umum menggunakan antarmuka untuk itu, menggunakan antarmuka jika Anda

01:27.700 --> 01:30.360
ingin mendeskripsikan objek daripada jika Anda ingin

01:30.360 --> 01:32.180
mengimplementasikannya.

01:32.180 --> 01:33.980
Semua ada karena alasan historis,

01:33.980 --> 01:36.490
karena pada masa-masa awal TypeScript, tipe kustom

01:36.490 --> 01:38.980
tidak dapat diimplementasikan atau digunakan

01:38.980 --> 01:40.710
seperti antarmuka.

01:40.710 --> 01:42.610
Sekarang ada lebih banyak fleksibilitas,

01:42.610 --> 01:45.150
tetapi masih disarankan untuk menggunakan interface jika

01:45.150 --> 01:46.420
Anda bekerja dengan objek dan

01:46.420 --> 01:48.680
jika Anda ingin mendeskripsikan strukturnya.

01:48.680 --> 01:50.620
Kita juga akan melihat mereka di sepanjang kursus

01:50.620 --> 01:51.883
ini berulang-ulang.
