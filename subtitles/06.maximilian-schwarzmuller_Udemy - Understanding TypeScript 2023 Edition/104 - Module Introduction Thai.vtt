WEBVTT

00:02.260 --> 00:03.810
ผู้บรรยาย: เมื่อเลิกใช้ผลิตภัณฑ์ทั่วไปแล้ว

00:03.810 --> 00:08.860
เรามาดำดิ่งสู่คุณสมบัติขั้นสูงถัดไป นั่นคือตัวตกแต่ง

00:08.860 --> 00:14.000
มัณฑนากรเป็นคุณสมบัติที่มีประโยชน์มากสำหรับการเขียนโปรแกรมเมตา

00:14.000 --> 00:16.230
ตอนนี้การเขียนโปรแกรมเมตาหมายความว่าอย่างไร

00:16.230 --> 00:24.840
หมายความว่าโดยปกติแล้วคุณจะไม่ใช้ตัวตกแต่งที่มักจะมีผลกระทบโดยตรงต่อผู้ใช้ปลายทางของเพจของคุณ

00:24.840 --> 00:27.080
ดังนั้นผู้ใช้ที่เยี่ยมชมเพจของคุณ

00:27.080 --> 00:37.600
แต่เครื่องมือตกแต่งเป็นเครื่องมือที่เหมาะสมอย่างยิ่งสำหรับการเขียนโค้ดซึ่งนักพัฒนารายอื่นจะใช้ได้ง่ายกว่า

00:37.600 --> 00:41.280
ตอนนี้อาจฟังดูแปลก แต่คุณจะเห็นว่าฉันหมายถึงอะไรในโมดูลนี้

00:41.280 --> 00:45.530
ในท้ายที่สุด ทั้งหมดนี้มาจากข้อเท็จจริงที่ว่าไม่เหมือนกับโค้ดส่วนย่อยอื่นๆ

00:45.530 --> 00:47.320
สมมติว่าเมื่อเราเพิ่มตัวฟังเหตุการณ์

00:47.320 --> 00:51.810
เราสามารถเขียนโค้ดที่มีผลกระทบโดยตรงต่อผู้ใช้เพจของเราได้อย่างง่ายดาย

00:51.810 --> 00:56.740
หากเราลงทะเบียนผู้ฟังบนปุ่มและเราแสดงการแจ้งเตือนหลังจากคลิกปุ่ม

00:56.740 --> 01:00.320
ผู้ใช้ที่เข้าชมเพจของเราจะเห็นบางสิ่งทันที

01:00.320 --> 01:02.810
สำหรับมัณฑนากร เราจะไม่ทำงานกับสิ่งนั้น

01:02.810 --> 01:07.690
แต่เราสามารถรับประกันได้ว่าคลาสใดคลาสหนึ่งของเราถูกใช้อย่างถูกต้อง

01:07.690 --> 01:09.230
หรือเมธอดในคลาส หรือเราทำการแปลงแบบซ่อน

01:09.230 --> 01:13.190
อะไรทำนองนั้น

01:13.190 --> 01:14.760
ดังนั้นในรายละเอียดในโมดูลนี้

01:14.760 --> 01:17.300
เราจะมาดูกันว่ามัณฑนากรคืออะไร เกี่ยวข้องอย่างไร

01:17.300 --> 01:19.460
และทำไมเราถึงใช้มัน

01:19.460 --> 01:22.140
แน่นอนเราจะใช้มันและคุณจะได้เรียนรู้เกี่ยวกับประเภทต่าง

01:22.140 --> 01:24.760
ๆ ของนักตกแต่ง ประเภทของการสนับสนุน

01:24.760 --> 01:32.233
และเราจะเห็นตัวอย่างสองสามตัวอย่างที่ควรทำให้ชัดเจนยิ่งขึ้นว่าผู้ตกแต่งสวมบทบาทใดและเหตุใดจึงมีประโยชน์
