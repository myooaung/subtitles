WEBVTT

00:02.170 --> 00:03.003
المدرب: الآن بعد

00:03.003 --> 00:04.760
أن أصبح لدينا مشروع تم تكوينه بشكل

00:04.760 --> 00:08.130
صحيح ، دعنا نتعمق قليلاً في كيفية تصحيح أخطاء مشروعك أو كيف

00:08.130 --> 00:10.500
يمكنك الحصول على تدفق تطوير رائع.

00:10.500 --> 00:13.560
أريكم إعداد IDE الأساسي الخاص بي في بداية هذه الدورة

00:13.560 --> 00:14.575
التدريبية.

00:14.575 --> 00:17.750
تأكد حقًا من تثبيت الامتدادات الصحيحة.

00:17.750 --> 00:22.750
هناك بالنسبة لـ TypeScript ، يتعلق الأمر بـ ESLint الذي يمكن

00:22.980 --> 00:26.410
أن يساعدك في فحص كود TypeScript الخاص بك.

00:26.410 --> 00:29.310
لذلك مع تحسين جودة الكود ، قد تحتاج

00:29.310 --> 00:31.620
إلى تكوين إضافي لـ ESLint

00:31.620 --> 00:33.900
ليكون له تأثير.

00:33.900 --> 00:36.310
يمكن أن يساعدك في مشاريع أكثر تقدمًا

00:37.220 --> 00:38.570
أكثر إثارة للاهتمام

00:38.570 --> 00:40.818
من ذلك ، فأنت تريد حقًا استخدام

00:40.818 --> 00:43.370
Prettier لتنسيق التعليمات البرمجية

00:43.370 --> 00:45.770
تلقائيًا ولديك رمز منسق بشكل جيد

00:45.770 --> 00:49.870
وقد ترغب في تجربة Debugger لـ Chrome لأن ذلك يسمح لك

00:49.870 --> 00:53.140
بتصحيح ملفات TypeScript حتى من داخل VS Code

00:53.140 --> 00:55.810
عبر Chrome ولكن بدون استخدام أدوات

00:55.810 --> 00:59.440
Chrome Dev.

00:59.440 --> 01:01.820
بالطبع ، يمكنك استخدامها كما

01:01.820 --> 01:02.653
تعلمت.

01:02.653 --> 01:05.154
إذا قمت بتمكين sourceMaps هنا ، وهو ما يمكنك

01:05.154 --> 01:07.160
بالطبع القيام به دائمًا ، فستحصل على

01:07.160 --> 01:09.240
هذه الملفات المترجمة هناك أيضًا وهو

01:09.240 --> 01:10.429
أمر رائع حقًا.

01:10.429 --> 01:14.170
ولكن يمكنك أيضًا استخدام رمز VS.

01:14.170 --> 01:15.960
يمكنك وضع نقاط التوقف هنا

01:15.960 --> 01:17.340
، دعنا نقول في clickHandler

01:17.340 --> 01:19.842
والآن لتشغيل ملفاتك هنا من خلال

01:19.842 --> 01:24.842
VS Code ، تحتاج إلى تمكين sourceMaps أيضًا ولكن لا يزال بإمكاننا

01:26.100 --> 01:28.690
استخدام VS Code بدلاً من متصفح Dev

01:28.690 --> 01:30.950
Tools.

01:30.950 --> 01:34.570
لذا قم بتمكين sourceMaps ، ضع نقطة التوقف

01:34.570 --> 01:38.930
الخاصة بك ثم انتقل إلى Debug ، Start Debugging.

01:38.930 --> 01:40.320
الآن ، في المرة الأولى التي

01:40.320 --> 01:42.170
تقوم فيها بتشغيل هذا ، يجب أن يطلب

01:42.170 --> 01:45.350
منك البيئة وهناك مع تثبيت ملحق Debugger لـ Chrome ، يجب

01:45.350 --> 01:47.850
أن تكون قادرًا على اختيار Chrome.

01:47.850 --> 01:49.960
سوف يذهب الآن إلى لاوكنه. json حيث تقوم

01:49.960 --> 01:53.200
بتكوين كيفية تشغيله وهناك يجب أن تشير إلى

01:53.200 --> 01:56.740
المضيف المحلي: 3000 لأن هذا هو المكان الذي يعمل

01:56.740 --> 01:59.330
فيه خادم التطوير لدينا وبالطبع هذه

01:59.330 --> 02:02.710
العملية ، لذلك يجب أن تكون عملية بدء npm قيد

02:02.710 --> 02:04.220
التشغيل.

02:04.220 --> 02:06.910
للإشارة إلى المضيف المحلي: 3000 هناك وباعتباره

02:06.910 --> 02:09.740
webRoot ، يمكنك ترك هذا العنصر النائب هنا مما

02:09.740 --> 02:11.890
يعني أنه من المفترض أن يكون مجلد المشروع

02:11.890 --> 02:13.780
هذا هو مضيف ملفاتك وهذا هو الحال

02:13.780 --> 02:17.120
والآن قم بتجميع الكود الخاص بك بحيث يتم إنشاء خرائط

02:17.120 --> 02:19.780
المصدر أيضًا بعد الإعداد تهيئة sourceMaps

02:19.780 --> 02:25.290
إلى true ، لذا أصبح لدينا الآن هذه في كود JavaScript.

02:25.290 --> 02:26.870
ثم مع إضافة نقطة التوقف الخاصة بك

02:26.870 --> 02:28.400
هنا وإطلاقك. تم تكوين json

02:28.400 --> 02:30.400
، فلنقم بإجراء تصحيح الأخطاء هنا.

02:30.400 --> 02:32.140
ابدأ التصحيح الآن بشكل حقيقي

02:32.140 --> 02:34.830
وسيفتح علامة تبويب جديدة تلقائيًا الآن.

02:34.830 --> 02:36.020
سيتم إغلاق علامة التبويب

02:36.020 --> 02:38.730
هذه عند إنهاء عملية التصحيح أو إذا قمت بإغلاق

02:38.730 --> 02:41.940
علامة التبويب ، سيتم إنهاء عملية التصحيح.

02:41.940 --> 02:44.590
الآن مع ذلك ، يمكنك إدخال عرض تصحيح الأخطاء هذا

02:44.590 --> 02:46.790
هنا في VS Code حيث يمكنك تتبع المتغيرات

02:46.790 --> 02:48.230
ومشاهدة تعبيرات معينة ورؤية

02:48.230 --> 02:50.120
مكدس الاستدعاءات الحالي ، وإذا

02:50.120 --> 02:51.910
نقرت الآن على Click Me ، فيجب أن

02:51.910 --> 02:54.120
يتم نقلك مرة أخرى إلى المحرر ويوقف تنفيذ

02:54.120 --> 02:56.590
التعليمات البرمجية مؤقتًا عند نقطة التوقف

02:56.590 --> 02:59.630
الخاصة بك في ملف TypeScript ، والآن يمكنك التجول في

02:59.630 --> 03:01.410
الملف ، وفحص القيم المحلية لهذه

03:01.410 --> 03:04.540
الكلمة الأساسية أو لمتغير الرسالة ، على سبيل المثال

03:04.540 --> 03:07.120
، المتغيرات على مستوى البرنامج النصي التي قد

03:07.120 --> 03:09.750
تكون لديك والمتغيرات العامة التي حصلت عليها

03:09.750 --> 03:13.320
من الوصول إلى الكائنات العالمية.

03:13.320 --> 03:15.560
يمكنك مشاهدة بعض التعبيرات

03:15.560 --> 03:19.290
مثل الرسالة + علامات التعجب المتعددة ، وبعد

03:19.290 --> 03:22.690
ذلك يمكنك دائمًا تتبع القيمة الموجودة

03:22.690 --> 03:27.483
هنا في هذه النافذة إذا كنت ترغب في ذلك.

03:27.483 --> 03:30.480
ويمكنك رؤية مكدس استدعاء الوظيفة الحالي ، على سبيل

03:30.480 --> 03:33.010
المثال ، الذي سيحدث في clickHandler والآن

03:33.010 --> 03:34.710
يمكنك التنقل خلال التعليمات

03:34.710 --> 03:37.590
البرمجية باستخدام عناصر التحكم هذه للانتقال

03:37.590 --> 03:39.800
إلى الخطوة التالية ، وتخطي استدعاء

03:39.800 --> 03:41.500
الوظيفة التالية ، والدخول إلى

03:41.500 --> 03:43.827
استدعاء الوظيفة أو الخروج من استدعاء

03:43.827 --> 03:46.710
الوظيفة الحالية ومكدس الاستدعاءات ، بالطبع ،

03:46.710 --> 03:49.280
هنا سيتم ضبطه وفقًا لذلك ومع ذلك ، يمكنك تجاهل

03:49.280 --> 03:51.920
شيء المتصفح هذا هنا ، وبهذا ، يمكنك دائمًا استئناف

03:51.920 --> 03:56.210
تنفيذ الكود بالنقر فوق زر التشغيل والإيقاف المؤقت فقط كلما تصل إلى نقطة

03:56.210 --> 04:00.290
التوقف الخاصة بك في المرة القادمة.

04:00.290 --> 04:02.080
هذه هي الطريقة التي يمكنك بها تصحيح التعليمات البرمجية.

04:02.080 --> 04:04.050
يمكنك إزالة نقطة توقف عن طريق النقر عليها.

04:04.050 --> 04:05.910
هذه هي الطريقة التي يمكنك بها

04:05.910 --> 04:07.310
تصحيح أخطاء التعليمات

04:07.310 --> 04:09.728
البرمجية من داخل VS Code بمساعدة أدوات

04:09.728 --> 04:12.450
تصحيح الأخطاء المضمنة وامتداد Chrome Debugger

04:12.450 --> 04:15.470
والتكوين المشتق وخرائط soureMaps التي تم إعدادها

04:15.470 --> 04:17.743
في تكوين TypeScript.
