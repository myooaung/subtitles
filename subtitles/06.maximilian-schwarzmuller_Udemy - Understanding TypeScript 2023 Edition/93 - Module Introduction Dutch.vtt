WEBVTT

00:02.500 --> 00:04.010
Instructeur: In deze module

00:04.010 --> 00:06.400
duiken we in een concept dat generics heet.

00:06.400 --> 00:10.890
Generics bestaan in TypeScript, niet in vanilla JavaScript, dus er

00:10.890 --> 00:12.860
is hier geen echte vertaling.

00:12.860 --> 00:14.480
Maar we kunnen ze wel gebruiken in TypeScript.

00:14.480 --> 00:17.200
En het concept van generieke types bestaat

00:17.200 --> 00:19.730
al in andere programmeertalen.

00:19.730 --> 00:21.950
Niet in alle andere programmeertalen natuurlijk,

00:21.950 --> 00:24.530
maar wel in sommige, bijvoorbeeld in C Sharp.

00:24.530 --> 00:27.290
Nu gaat deze cursus natuurlijk niet over C Sharp.

00:27.290 --> 00:29.280
Laten we dus eens kijken wat generics zijn

00:29.280 --> 00:30.770
en wat ze zijn in TypeScript en hoe

00:30.770 --> 00:33.410
we ze daar gebruiken en waarom we ze daar gebruiken.

00:33.410 --> 00:36.450
Meer bepaald zullen we bekijken wat generieke geneesmiddelen precies

00:36.450 --> 00:39.000
zijn en waarom ze interessant en nuttig zijn.

00:39.000 --> 00:41.925
Dan bouwen we onze eigen generieke functies

00:41.925 --> 00:44.820
en klassen, want dat blijkt te kunnen.

00:44.820 --> 00:47.910
Dan kijken we naar generieke beperkingen

00:47.910 --> 00:51.800
en wat dat is en waarom we zoiets zouden gebruiken.

00:51.800 --> 00:53.300
En we zullen een paar speciale

00:53.300 --> 00:55.250
TypeScript-types bekijken,

00:55.250 --> 00:57.750
die ook typisch generiek zijn en die

00:57.750 --> 01:01.100
we nu pas echt kunnen begrijpen.

01:01.100 --> 01:02.963
Laten we eens kijken wat we daar hebben.
