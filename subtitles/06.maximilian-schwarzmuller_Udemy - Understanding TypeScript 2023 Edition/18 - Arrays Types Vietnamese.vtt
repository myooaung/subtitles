WEBVTT

00:02.170 --> 00:06.250
-: Bây giờ bên cạnh các đối tượng, chúng ta còn có các mảng trong JavaScript,

00:06.250 --> 00:08.300
loại dữ liệu rất quan trọng.

00:08.300 --> 00:10.810
Mảng được tạo như thế này trong JavaScript, như bạn

00:10.810 --> 00:12.560
biết, và bạn có thể lưu trữ bất kỳ dữ liệu

00:12.560 --> 00:15.970
nào trong đó: số, chuỗi, booleans, đối tượng, các mảng khác, sau tất cả,

00:15.970 --> 00:17.970
bạn có thể có các mảng lồng nhau và bạn cũng

00:17.970 --> 00:19.380
có thể trộn dữ liệu.

00:19.380 --> 00:23.200
Bạn có thể có một mảng với các chuỗi và số trộn lẫn.

00:23.200 --> 00:25.570
Và TypeScript cũng hỗ trợ mảng.

00:25.570 --> 00:29.260
Bất kỳ mảng JavaScript nào cũng được hỗ trợ và các loại của

00:29.260 --> 00:32.140
mảng đó có thể linh hoạt hoặc nghiêm ngặt.

00:32.140 --> 00:35.200
Bây giờ hãy xem xét điều đó trong TypeScript.

00:35.200 --> 00:38.760
Đối với điều đó ở đây trong ứng dụng. ts, giả sử người của chúng ta cũng

00:38.760 --> 00:42.810
có khóa sở thích, nhưng tất nhiên chúng ta cũng có thể có một biến hoặc

00:42.810 --> 00:45.660
hằng số sở thích bên ngoài đối tượng.

00:45.660 --> 00:49.050
Vì vậy, việc sử dụng các mảng hoàn toàn giống nhau bên trong

00:49.050 --> 00:50.853
và bên ngoài đối tượng.

00:51.950 --> 00:54.780
Vì vậy, ở đây chúng ta có sở thích, và sở

00:54.780 --> 00:58.140
thích có thể là thể thao và nấu ăn chẳng hạn.

00:58.140 --> 01:01.150
Vì vậy, tôi có hai phần tử trong đó, và những phần tử

01:01.150 --> 01:03.620
này, như bạn có thể thấy, là các chuỗi.

01:03.620 --> 01:07.570
Bây giờ nếu chúng ta di chuột qua sở thích, TypeScript đã phát hiện

01:07.570 --> 01:10.630
chính xác khoảng cách của mảng chuỗi kiểu.

01:10.630 --> 01:12.500
Đó là một cú pháp mà bạn chưa từng thấy

01:12.500 --> 01:16.140
trước đây, nhưng đây là cách TypeScript mô tả một mảng dữ liệu.

01:16.140 --> 01:18.510
Bạn có dấu ngoặc vuông và phía trước

01:18.510 --> 01:21.340
là loại dữ liệu được lưu trữ trong đó.

01:21.340 --> 01:23.530
Bây giờ đây là loại, nhóm của loại được suy ra.

01:23.530 --> 01:25.810
Nó thấy rằng ở đây chúng ta có một mảng

01:25.810 --> 01:29.110
và chúng ta chỉ có các chuỗi trong đó, vì vậy nó suy ra rằng

01:29.110 --> 01:31.940
sở thích có lẽ phải là một mảng các chuỗi.

01:31.940 --> 01:34.903
Và thực sự, đối với sở thích, điều đó rất có ý nghĩa.

01:36.210 --> 01:41.040
Tất nhiên, bạn cũng có thể đặt loại biến một cách rõ ràng.

01:41.040 --> 01:44.720
Nếu chúng ta thêm một biến mới, các hoạt động yêu thích

01:45.580 --> 01:48.670
và ban đầu biến đó sẽ trống, thì chúng ta có

01:48.670 --> 01:51.160
thể muốn đặt rõ ràng loại dữ liệu được

01:51.160 --> 01:53.140
lưu trữ trong đó.

01:53.140 --> 01:55.590
Bây giờ, giả sử đó phải là một mảng các chuỗi, sau đó

01:55.590 --> 01:57.570
chúng ta có thể lặp lại những gì chúng ta vừa

01:57.570 --> 02:00.330
thấy; nhập chuỗi, rồi sau đó đặt dấu ngoặc vuông và điều này

02:00.330 --> 02:03.330
cho TypeScript biết những gì chúng tôi lưu trữ ở đây không chỉ

02:03.330 --> 02:05.990
là một chuỗi đơn lẻ, mà là một mảng các chuỗi.

02:05.990 --> 02:09.550
Và thực sự nếu tôi cố gắng chỉ lưu trữ các môn thể thao trong

02:09.550 --> 02:12.183
đó, tôi sẽ gặp lỗi. Tôi gặp lỗi vì đây là

02:12.183 --> 02:15.650
một chuỗi đơn chứ không phải một chuỗi các chuỗi.

02:15.650 --> 02:19.370
Tất nhiên, tôi không gặp lỗi nếu tôi đặt nó trong dấu ngoặc

02:19.370 --> 02:22.610
vuông và do đó tạo một mảng một cách hiệu quả.

02:22.610 --> 02:25.870
Tuy nhiên, tôi lại gặp lỗi, nếu tôi thêm một số, giả sử,

02:25.870 --> 02:29.220
bởi vì chúng tôi xác định đây là một mảng các chuỗi.

02:29.220 --> 02:31.290
Bây giờ ở đây, chúng ta có một mảng hỗn hợp.

02:31.290 --> 02:34.920
Đó là một mảng các chuỗi và số nên không hoạt động

02:34.920 --> 02:37.180
và không được hỗ trợ ở đây.

02:37.180 --> 02:40.100
Nếu chúng ta muốn hỗ trợ một mảng hỗn hợp như vậy,

02:40.100 --> 02:43.120
một giải pháp sẽ là sử dụng "bất kỳ" ở đây.

02:43.120 --> 02:45.880
Loại "bất kỳ" là một loại đặc biệt trong TypeScript,

02:45.880 --> 02:47.610
mà chúng ta sẽ xem xét kỹ hơn sau,

02:47.610 --> 02:50.530
về cơ bản có nghĩa là, làm bất cứ điều gì bạn muốn.

02:50.530 --> 02:53.020
Tất nhiên đó là loại mà bạn không muốn sử dụng quá thường

02:53.020 --> 02:55.630
xuyên vì bạn sẽ mất đi những lợi ích mà TypeScript mang lại

02:55.630 --> 02:58.170
cho bạn, quay trở lại thế giới JavaScript, nơi bạn cũng có

02:58.170 --> 03:00.140
thể sử dụng bất kỳ giá trị nào ở bất kỳ đâu.

03:00.140 --> 03:02.940
Vì vậy, "bất kỳ" thực sự linh hoạt, nhưng tính

03:02.940 --> 03:06.270
linh hoạt này phải trả giá bằng việc từ bỏ tất cả các

03:06.270 --> 03:08.710
lợi ích mà TypeScript mang lại.

03:08.710 --> 03:10.840
Vì vậy, ở đây tôi sẽ quay lại chuỗi, bởi vì tôi

03:10.840 --> 03:12.530
thực sự không muốn có một số trong đó,

03:12.530 --> 03:14.933
và do đó chúng tôi có thể xóa số đó và chúng tôi ổn.

03:15.900 --> 03:18.830
Mảng cũng cho chúng ta một ví dụ tuyệt vời, thực

03:18.830 --> 03:21.890
ra cũng giống như đối tượng và thuộc tính của chúng,

03:21.890 --> 03:25.730
suy luận kiểu của TypeScript động như thế nào.

03:25.730 --> 03:28.750
Nếu chúng ta thêm một vòng lặp "for" ở dưới cùng ở đây và chúng ta

03:28.750 --> 03:31.570
muốn theo dõi tất cả sở thích của một người, tất nhiên chúng

03:31.570 --> 03:33.220
ta có thể sử dụng vòng lặp "for" truyền

03:33.220 --> 03:38.220
thống với for const sở thích của một người. sở thích, vì vậy hãy truy cập thuộc tính

03:38.620 --> 03:41.130
sở thích và xem qua tất cả sở thích ở đó,

03:41.130 --> 03:42.793
lưu trữ từng sở thích cho

03:43.690 --> 03:46.780
mỗi lần lặp trong hằng số này, sau đó chúng ta

03:46.780 --> 03:50.090
có thể tham khảo nhật ký sở thích tại đây.

03:50.090 --> 03:52.000
Điều đó không quá lạ mắt, đó là điều mà chúng

03:52.000 --> 03:53.710
ta biết từ JavaScript, phải không.

03:53.710 --> 03:58.280
Nếu bây giờ tôi biên dịch ứng dụng này. ts ở dưới đó, chúng tôi

03:58.280 --> 04:01.700
lấy tên từ dòng này và sau đó hai

04:01.700 --> 04:04.750
sở thích được in ra.

04:04.750 --> 04:07.800
Nhưng điều thực sự thú vị ở đây là theo sở thích, chúng ta có thể truy

04:07.800 --> 04:11.040
cập bất cứ thứ gì, chúng ta có thể truy cập vào bất kỳ chuỗi nào.

04:11.040 --> 04:14.210
Ví dụ: đối với UpperCase, tôi nhận được phần hoàn thành tự động

04:14.210 --> 04:16.230
này và TypeScript không phàn nàn.

04:16.230 --> 04:18.070
Tại sao nó không phàn nàn?

04:18.070 --> 04:21.930
Vì nó biết rằng sở thích là kiểu mảng chuỗi nên khi

04:21.930 --> 04:25.830
mình truy cập person. sở thích, suy luận của TypeScript

04:25.830 --> 04:29.700
phát hiện ra rằng sở thích sẽ là một chuỗi các chuỗi.

04:29.700 --> 04:33.450
Vì vậy, mặt khác, sở thích được xác định chính xác là một

04:33.450 --> 04:36.000
chuỗi, bởi vì chúng ta duyệt qua một mảng

04:36.000 --> 04:38.370
các chuỗi, nên các giá trị riêng lẻ

04:38.370 --> 04:40.510
phải chỉ là các chuỗi.

04:40.510 --> 04:43.450
Và do đó, các loại cung cấp cho chúng tôi sự hỗ trợ tuyệt

04:43.450 --> 04:46.490
vời ở dưới đó và cho phép chúng tôi làm bất cứ điều gì với sở

04:46.490 --> 04:50.050
thích có thể được thực hiện với một chuỗi, bởi vì nó biết chắc chắn

04:50.050 --> 04:53.810
rằng sở thích sẽ là một chuỗi vì các loại chúng tôi thiết lập ở đó.

04:53.810 --> 04:56.300
Và điều đó thực sự linh hoạt, và tất nhiên là

04:56.300 --> 04:59.030
một tính năng tuyệt vời giúp viết mã dễ dàng hơn,

04:59.030 --> 05:01.360
linh hoạt và an toàn hơn rất nhiều.

05:01.360 --> 05:04.440
Ví dụ: chúng tôi sẽ gặp lỗi ở đây nếu nó

05:04.440 --> 05:08.570
cố truy cập sở thích. map, nếu tôi nghĩ đây sẽ là một mảng.

05:08.570 --> 05:12.060
Phương thức bản đồ khả dụng trên mảng, nhưng không có trên chuỗi.

05:12.060 --> 05:14.540
Và ở đây, một cách chính xác, một lần nữa, lỗi bản

05:14.540 --> 05:17.810
đồ không tồn tại trên chuỗi loại bởi vì nó không tồn tại.

05:17.810 --> 05:21.290
Vì vậy, ở đây chúng tôi nhận được một lỗi, và thật tốt khi chúng tôi

05:21.290 --> 05:24.510
nhận được nó, bởi vì điều này sẽ sai, và ở đây chúng tôi thấy suy

05:24.510 --> 05:27.343
luận của TypeScript thực sự, thực sự tỏa sáng.
