WEBVTT

00:02.090 --> 00:02.923
الراوي: من أجل

00:02.923 --> 00:04.750
القيام بأشياء أكثر تقدمًا مع

00:04.750 --> 00:07.340
مصممي الديكور ، يجب أن تلاحظ أن بعض مصممي

00:07.340 --> 00:09.200
الديكور على سبيل المثال ، مصممي

00:09.200 --> 00:11.700
الصفوف وأيضًا مصممي الطرق ، على سبيل المثال

00:11.700 --> 00:14.650
، قادرون أيضًا على إرجاع شيء ما.

00:14.650 --> 00:16.570
الآن ، لن أعيد أي شيء عند

00:16.570 --> 00:17.510
أي مصمم.

00:17.510 --> 00:18.430
أنا لا أتحدث عن

00:18.430 --> 00:20.010
وظيفة الديكور ، والتي

00:20.010 --> 00:22.460
يتم إرجاعها في مصنع الديكور.

00:22.460 --> 00:23.701
أعني حقًا قيمة مرتجعة

00:23.701 --> 00:26.040
داخل وظيفة التزيين ، وليس لدينا

00:26.040 --> 00:28.890
أي قيمة من هذا القبيل في أي مكان.

00:28.890 --> 00:31.559
الآن في وظيفة WithTemplate ، في وظيفة الديكور

00:31.559 --> 00:34.670
WithTemplate هذه ، يجب أن أقول ، يمكننا إضافة

00:34.670 --> 00:36.930
مثل هذه القيمة المرجعة.

00:36.930 --> 00:38.520
وما يمكنك إرجاعه وما

00:38.520 --> 00:40.430
يمكن لـ TypeScript استخدامه

00:40.430 --> 00:43.660
، يعتمد على نوع المصمم الذي تعمل معه.

00:43.660 --> 00:44.990
هنا ، نحن نعمل مع مصمم

00:44.990 --> 00:47.270
ديكور تمت إضافته إلى فصل دراسي

00:47.270 --> 00:48.750
، وفي وظيفة التزيين

00:48.750 --> 00:51.677
هذه ، يمكنك إرجاع وظيفة مُنشئ جديدة ، والتي

00:51.677 --> 00:53.800
ستحل محل القديم.

00:53.800 --> 00:55.590
يمكنك أن تقول ما الذي سيحل

00:55.590 --> 00:58.330
محل الفصل الذي أضفته إلى مصمم الديكور.

00:58.330 --> 01:01.073
لذا يمكننا هنا إرجاع دالة جديدة ، أو

01:01.073 --> 01:02.490
دالة مُنشئ جديدة ،

01:02.490 --> 01:06.370
أو ببساطة إرجاع فئة جديدة ، في النهاية ، لأن الفئة

01:06.370 --> 01:08.280
، الكلمة الأساسية للفصل

01:08.280 --> 01:11.150
، تسمح لنا باستخدام هذا السكر النحوي

01:11.150 --> 01:13.360
لإنشاء مثل وظيفة المُنشئ ،

01:13.360 --> 01:15.951
والفئة أنا أقوم بإنشاء هنا لا يحتاج

01:15.951 --> 01:17.463
إلى اسم ، لكن يمكننا

01:17.463 --> 01:22.250
ويجب علينا تمديد المُنشئ الذي نحصل عليه هنا.

01:22.250 --> 01:23.730
إذن ما أفعله هنا الآن

01:23.730 --> 01:25.848
هو وظيفة المصمم هنا ، سأعيد

01:25.848 --> 01:28.060
فصلًا جديدًا ، ومرة أخرى ضع في

01:28.060 --> 01:29.270
اعتبارك أن هذا مجرد

01:29.270 --> 01:30.910
سكر نحوي لوظيفة المُنشئ

01:30.910 --> 01:32.770
، لذلك سأعيد وظيفة المُنشئ

01:32.770 --> 01:35.400
، في النهاية ، التي تستند إلى وظيفة

01:35.400 --> 01:38.830
المُنشئ الأصلية ، حتى أحتفظ بجميع خصائص صفي

01:38.830 --> 01:42.610
الأصلي ، ووظيفة المُنشئ الأصلية ، لا يتعين علينا

01:42.610 --> 01:44.810
بالضرورة القيام بذلك ، لكنني

01:44.810 --> 01:50.520
لا أريد أن أفقد خصائصي هنا ، لذلك أنا سأفعلها.

01:50.520 --> 01:53.670
وبعد ذلك هنا يمكننا إضافة وظائف جديدة.

01:53.670 --> 01:56.716
على سبيل المثال ، وسأضطر إلى تغيير بعض الأسماء

01:56.716 --> 02:00.340
هنا ، يمكنني إضافة دالة مُنشئ جديدة هناك ، ولتجنب الالتباس

02:00.340 --> 02:01.500
، سأعيد تسمية المُنشئ

02:01.500 --> 02:04.040
الذي أحصل عليه هنا.

02:04.040 --> 02:06.640
إذاً ، الفصل الذي أضفت فيه

02:06.640 --> 02:09.620
هذا المصمم ، سأسمي هذا هنا ، المُنشئ

02:12.889 --> 02:15.690
الأصلي ونسخه هنا.

02:15.690 --> 02:18.950
والآن ، بدلاً من وظيفة المُنشئ هذه هنا

02:18.950 --> 02:20.853
، يجب أن أستدعي super لاستدعاء

02:20.853 --> 02:25.430
وظيفة المُنشئ الأصلية هذه من داخلها ، لأنك إذا أضفت

02:25.430 --> 02:27.410
دالة مُنشئ في فصل يمتد فئة

02:27.410 --> 02:29.920
أخرى ، وهو في النهاية ما تفعل

02:29.920 --> 02:33.630
هنا ، ثم عليك استدعاء سوبر.

02:33.630 --> 02:36.108
والآن هنا يمكنك كتابة أي منطق تريده.

02:36.108 --> 02:40.040
وعلى سبيل المثال ، هنا ، يمكننا نقل منطق عرض

02:40.040 --> 02:42.782
القالب هذا هنا ، من وظيفة التزيين

02:42.782 --> 02:45.620
الخاصة بنا إلى وظيفة المُنشئ الجديدة

02:45.620 --> 02:49.020
هذه التي نعود إليها هنا.

02:49.020 --> 02:50.960
لذا مرة أخرى ، ضع في اعتبارك حقًا أننا

02:50.960 --> 02:52.550
نقوم بإنشاء فئة هنا والتي في

02:52.550 --> 02:53.383
النهاية تخلق فقط

02:53.383 --> 02:54.540
دالة مُنشئ مع هذا المنطق

02:54.540 --> 02:55.833
بداخلها.

02:56.670 --> 02:58.850
والآن ما أحاول القيام به هو

02:58.850 --> 03:01.367
أنني أحاول استبدال الفصل.

03:01.367 --> 03:04.298
وظيفة المُنشئ التي أضفنا إليها مُصمم

03:04.298 --> 03:07.550
الديكور بفئة جديدة ، مع وظيفة مُنشئ جديدة ،

03:07.550 --> 03:10.290
حيث ما زلت أقوم بتنفيذ المنطق القديم

03:10.290 --> 03:12.920
، ولكن حيث أقوم أيضًا بإضافة المنطق

03:12.920 --> 03:14.670
الجديد الخاص بي ، وبالتالي

03:14.670 --> 03:17.450
، الآن يجب أن يتم عرض القالب في الواقع

03:17.450 --> 03:21.340
فقط إذا قمت بالفعل بإنشاء مثيل لكائن هنا.

03:21.340 --> 03:22.890
وليس طوال الوقت ، عندما

03:22.890 --> 03:25.180
يتم تنفيذ وظيفة التزيين هذه

03:25.180 --> 03:26.340
، والتي كما تعلمت

03:26.340 --> 03:29.620
، تحدث بمجرد تحديد الفصل.

03:29.620 --> 03:31.010
الآن ، تعديل بسيط هنا ، لم

03:31.010 --> 03:34.290
أعد أتصل بالمُنشئ الأصلي هنا بعد الآن ، بدلاً من ذلك يمكننا

03:34.290 --> 03:37.380
فقط الوصول إلى هذا. name للحصول على

03:37.380 --> 03:40.180
قيمة خاصية الاسم للمثيل

03:40.180 --> 03:42.750
الذي نقوم بإنشائه.

03:42.750 --> 03:45.120
الآن نتلقى بعض الشكوى بشأن

03:45.120 --> 03:47.750
الأنواع غير الصحيحة.

03:47.750 --> 03:51.330
لإصلاح ذلك ، يمكننا تحويل وظيفة التزيين الخاصة

03:51.330 --> 03:53.990
بنا إلى وظيفة عامة حيث نحصل على نوع

03:53.990 --> 03:57.113
، وتعيينه كنوع المُنشئ الأصلي ، والآن

03:58.090 --> 03:59.820
نوضح أن هذا سيكون في الواقع

03:59.820 --> 04:01.668
دالة مُنشئ ، ويمكننا أن

04:01.668 --> 04:05.780
نجعل ذلك واضح من خلال تعيين نوع خاص ، نوع كائن ، حيث

04:05.780 --> 04:09.260
قمنا بتعيين خاصية جديدة ، هذا اسم احتياطي

04:09.260 --> 04:17.760
بالطبع ، لكنه يخبر TypeScript أنه في النهاية سيكون هذا كائنًا يمكن تجديده.

04:17.760 --> 04:19.690
ستكون هذه وظيفة مُنشئ ، وهي وظيفة

04:19.690 --> 04:22.170
يمكننا استدعاؤها بالكلمة الرئيسية

04:22.170 --> 04:24.380
الجديدة لإنشاء كائن جديد.

04:24.380 --> 04:27.410
وهذه الوظيفة الجديدة ، هذه الطريقة الجديدة

04:27.410 --> 04:30.660
، التي يعتمد عليها الكائن T ، ستحصل على أي قدر

04:30.660 --> 04:33.520
من الوسيطات ، لذلك أنا أستخدم متغيرات

04:33.520 --> 04:35.380
الراحة هنا لقبول أي عدد تريده

04:35.380 --> 04:37.290
من الوسائط ، بحيث تكون مرنة

04:37.290 --> 04:39.840
حقًا فيما يتعلق بالحجج التي يمكن تمريرها

04:39.840 --> 04:44.000
إلى مُنشئ الفصل الذي نحاول تغييره.

04:45.420 --> 04:46.430
ستؤدي إضافة الوظيفة

04:46.430 --> 04:49.063
الجديدة في النهاية إلى إرجاع كائن هنا.

04:50.140 --> 04:53.500
الآن يجب أن أقوم أيضًا بنسخ هذا التحديد للمعامل rest

04:53.500 --> 04:55.680
إلى المُنشئ الخاص بي هنا ، بحيث يكون

04:55.680 --> 04:57.640
هذا المنشئ قادرًا أيضًا على قبول

04:57.640 --> 05:00.260
جميع الحجج التي قد نحصل عليها ، حتى نتمكن من

05:00.260 --> 05:02.380
إنشاء مثيل للشخص بشكل أساسي مع أي وسيطات

05:02.380 --> 05:04.380
تريد تمريرها هنا.

05:04.380 --> 05:06.610
مع أي وسيطات قد نحتاجها هنا

05:06.610 --> 05:09.279
أيضًا ، في دالة الباني الأصلية.

05:09.279 --> 05:11.600
ومع ذلك ، فإن المشكلة الوحيدة التي

05:11.600 --> 05:14.021
سنواجهها هي أننا لا نعرف أن خاصية الاسم

05:14.021 --> 05:16.250
هذه موجودة ، وبشكل صحيح ، لا نعرف إلى

05:16.250 --> 05:19.639
أي فئة سنضيف مصمم الديكور باستخدام القالب ، لذلك لا

05:19.639 --> 05:22.530
نعرف إذا كانت هناك خاصية name في الفصل الذي

05:22.530 --> 05:23.951
نضيفه إليه.

05:23.951 --> 05:25.560
ولكن ، يمكننا إصلاح ذلك

05:25.560 --> 05:27.140
عن طريق إخبار TypeScript

05:27.140 --> 05:30.200
ببساطة أن الكائن T يعتمد عليه ، لذا فإن وظيفة

05:30.200 --> 05:32.773
المُنشئ الأصلية الخاصة بنا لن تنتج

05:32.773 --> 05:35.530
أي كائن فحسب ، بل ستنتج في الواقع كائنًا

05:35.530 --> 05:37.460
بخاصية name والتي ستكون من

05:37.460 --> 05:41.140
النوع string وهذا هو صحيح.

05:41.140 --> 05:44.922
تمت إضافة مصمم الديكور WithTemplate الخاص بنا إلى فئة ، والتي سيكون

05:44.922 --> 05:46.250
لها خاصية الاسم.

05:46.250 --> 05:47.300
إذا كنت أود التعليق

05:47.300 --> 05:48.133
على هذا ، فسنحصل

05:48.133 --> 05:50.740
على خطأ ، لأننا الآن سنحاول إضافة هذا

05:50.740 --> 05:53.460
المصمم إلى فئة لا تفي بهذا المعيار ولكن

05:53.460 --> 05:55.543
هنا ، هذا يحققه.

05:55.543 --> 05:58.790
الآن ، يظهر لي خطأ هنا عندما أحاول تجميع هذا ، لأنني

05:58.790 --> 06:00.630
لا أستخدم args هنا ، يمكننا

06:00.630 --> 06:02.660
تغيير هذا إلى _ لإخبارنا بأننا

06:02.660 --> 06:04.930
نعلم أننا لا نستخدمها وأننا نريد

06:04.930 --> 06:06.230
تجاهل هذا.

06:06.230 --> 06:08.050
هذا اسم معلمة صالح ، إنه

06:08.050 --> 06:10.678
مجرد اسم خاص تأخذه المطبوع على أنه

06:10.678 --> 06:13.220
اسم أحصل عليه ، أحتاج إلى قبوله

06:13.220 --> 06:15.260
، لكنني لن أستخدمه.

06:15.260 --> 06:18.273
ومع ذلك ، يتم تجميع كل شيء ، وإذا أعدنا التحميل

06:19.440 --> 06:22.420
، كما ترى ، ما زلنا نرى Max على الصفحة هنا.

06:22.420 --> 06:23.910
الشيء المثير للاهتمام

06:23.910 --> 06:25.480
هو أنه إذا قمنا الآن بإزالة

06:25.480 --> 06:27.060
هذا الرمز حيث نقوم بإنشاء

06:27.060 --> 06:28.440
مثيل للشخص إذا قمت بالتعليق

06:28.440 --> 06:30.740
على هذا حتى أجد فئة شخص فقط ، لكنني لا

06:30.740 --> 06:33.550
أقوم بإنشاء مثيل له في أي مكان ، فسترى أنه يتم

06:33.550 --> 06:36.890
إعادة التحميل لا نرى Max على شاشة.

06:36.890 --> 06:39.467
لا يزال جميع المصممين ينفذون أعمالهم

06:39.467 --> 06:42.410
، لكننا لم نعد نعرض أي شيء على الشاشة.

06:42.410 --> 06:43.243
والسبب في ذلك

06:43.243 --> 06:46.340
، هو أننا قمنا الآن بتحسين مصمم الديكور

06:46.340 --> 06:49.520
لدينا هنا أكثر ، من خلال الاستفادة من ميزته

06:49.520 --> 06:52.360
حيث يمكننا إرجاع قيمة جديدة أو في هذه

06:52.360 --> 06:55.350
الحالة وظيفة مُنشئ جديدة.

06:55.350 --> 06:57.205
في حالة مصمم الطبقة.

06:57.205 --> 07:00.780
هذه وظيفة مُنشِئة جديدة ، أو فئة جديدة ، والتي

07:00.780 --> 07:03.040
، كما أوضحت ، هي مجرد سكر نحوي

07:03.040 --> 07:04.300
لوظيفة المُنشئ

07:04.300 --> 07:06.750
، وبالتالي ، تحل وظيفة المُنشئ

07:06.750 --> 07:09.070
هذه محل صنفنا الأصلي ، وظيفة

07:09.070 --> 07:12.160
المُنشئ الأصلية.

07:12.160 --> 07:15.220
الآن ، بما أنني اتصلت بـ super هنا ، فإننا

07:15.220 --> 07:17.610
نحفظ الوظيفة الأصلية.

07:17.610 --> 07:19.690
نحفظ الفصل الأصلي ، كل شيء نقوم بالتهيئة

07:19.690 --> 07:22.540
هنا بشكل أساسي لا يزال يحدث ، لأنني أفعل ذلك

07:22.540 --> 07:25.530
في مُنشئ الاستبدال الخاص بي أيضًا ، وأقوم بتوسيع

07:25.530 --> 07:27.480
الفصل الأصلي.

07:27.480 --> 07:30.420
لذلك نقوم بحفظ كل ما كان في الفصل الأصلي.

07:30.420 --> 07:31.550
لست مضطرًا لفعل ذلك

07:31.550 --> 07:32.670
، لكنني أفعل ذلك هنا

07:32.670 --> 07:35.560
، لأنني لا أريد أن أفقد تلك البيانات الأصلية.

07:35.560 --> 07:36.850
لكن ، خلف الكواليس

07:36.850 --> 07:39.770
، استبدلت الفصل بفصلي المخصص الجديد هنا

07:39.770 --> 07:42.370
، وهذا يسمح لنا بإضافة منطق إضافي ، يجب

07:42.370 --> 07:45.600
أن يتم تشغيله عند إنشاء الفصل الدراسي.

07:45.600 --> 07:49.090
والآن فجأة أصبحنا قادرين على إضافة منطق

07:49.090 --> 07:52.410
لا يعمل عند تعريف الفئة ، ولكن عندما يتم

07:52.410 --> 07:54.660
إنشاء مثيل للفئة.

07:54.660 --> 07:57.150
وبالتالي يجب أن يكون هذا أول مثال

07:57.150 --> 08:01.860
رائع على القوة الكاملة التي يمكنك إطلاقها مع المصممين إذا كنت

08:01.860 --> 08:04.480
تفهم حقًا ما يمكنك فعله معهم.

08:04.480 --> 08:06.800
ولا يمكنك فقط تحديدها كوظائف ،

08:06.800 --> 08:09.970
ولا يمكنك فقط تعريفها بوظائف العوامل.

08:09.970 --> 08:12.600
في بعض المصممين ، مثل مصمم الفصل ،

08:12.600 --> 08:14.400
يمكنك أيضًا إرجاع شيء ما

08:14.400 --> 08:17.650
لاستبدال الشيء الذي أضفته إلى المصمم في

08:17.650 --> 08:19.470
حالتنا ، الفصل ، بفئة جديدة

08:19.470 --> 08:23.000
يمكنها تنفيذ الفئة القديمة ولكن أيضًا إضافة

08:23.000 --> 08:25.711
منطقها المخصص الجديد.

08:25.711 --> 08:28.004
وبهذا ، إذا علقنا على هذا مرة أخرى

08:28.004 --> 08:30.240
، فإننا نعرض Max مرة أخرى على الشاشة

08:30.240 --> 08:31.570
بفصلنا الخاص الذي يحل

08:31.570 --> 08:35.793
محل الفصل القديم ، أو الذي يمتد ويستبدل الفصل القديم.
