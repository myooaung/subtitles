WEBVTT

00:02.500 --> 00:04.010
Eğitmen: Bu modülde jenerik

00:04.010 --> 00:06.400
adı verilen bir kavramı inceleyeceğiz.

00:06.400 --> 00:10.890
Jenerikler TypeScript'te mevcuttur, vanilla JavaScript'te değil, bu nedenle

00:10.890 --> 00:12.860
burada gerçek bir çeviri yoktur.

00:12.860 --> 00:14.480
Ancak bunları TypeScript'te kullanabiliriz.

00:14.480 --> 00:17.200
Ve jenerik tipler kavramı diğer programlama

00:17.200 --> 00:19.730
dillerinde de mevcuttur.

00:19.730 --> 00:21.950
Elbette diğer tüm programlama dillerinde

00:21.950 --> 00:24.530
değil, ancak bazılarında, örneğin C Sharp'ta.

00:24.530 --> 00:27.290
Bu kurs tabii ki Do Sharp ile ilgili değil.

00:27.290 --> 00:29.280
Şimdi jeneriklerin ne olduğuna ve TypeScript'te

00:29.280 --> 00:30.770
ne işe yaradıklarına, onları orada nasıl

00:30.770 --> 00:33.410
kullandığımıza ve neden kullandığımıza bir göz atalım.

00:33.410 --> 00:36.450
Özellikle, jeneriklerin tam olarak ne olduğuna ve neden ilginç

00:36.450 --> 00:39.000
ve yararlı olduklarına bir göz atacağız.

00:39.000 --> 00:41.925
Daha sonra kendi genel fonksiyonlarımızı ve sınıflarımızı

00:41.925 --> 00:44.820
oluşturacağız çünkü bunu yapabiliyoruz.

00:44.820 --> 00:47.910
Daha sonra genel kısıtlamalara, bunun ne olduğuna

00:47.910 --> 00:51.800
ve neden böyle bir şey kullanacağımıza bir göz atacağız.

00:51.800 --> 00:53.300
Ve tipik olarak genel

00:53.300 --> 00:55.250
olan ve ancak şimdi gerçekten

00:55.250 --> 00:57.750
anlayabileceğimiz birkaç özel

00:57.750 --> 01:01.100
TypeScript türüne de göz atacağız.

01:01.100 --> 01:02.963
Bakalım orada ne varmış.
