WEBVTT

00:02.160 --> 00:05.070
-: No momento, não estou usando o servidor webpack-dev.

00:05.070 --> 00:07.680
Agora, porém, usá-la é muito simples.

00:07.680 --> 00:10.030
Só temos que chegar ao pacote. json file e agora

00:10.030 --> 00:12.430
lá em vez de "lite-server"

00:12.430 --> 00:17.380
vamos usar "webpack-dev-server", desta forma.

00:17.380 --> 00:20.020
E agora vamos começar npm começar de novo.

00:20.020 --> 00:21.560
Agora o que você verá é que

00:21.560 --> 00:23.610
isto agora gira um servidor rodando

00:23.610 --> 00:25.780
no host local 8080, e gira o fluxo de

00:25.780 --> 00:28.330
trabalho de construção do webpack.

00:28.330 --> 00:30.060
Portanto, agora, se você visitar o anfitrião

00:30.060 --> 00:32.020
local 8080, vemos nosso projeto lá.

00:32.020 --> 00:33.860
O interessante agora é que se mudarmos

00:33.860 --> 00:35.510
algo em código, por exemplo,

00:35.510 --> 00:38.520
se você ajustar o log do console ERA aqui, E ele é salvo

00:38.520 --> 00:43.160
e então você observa o fundo aqui, você o vê recompilar.

00:43.160 --> 00:46.450
Entretanto, se você recarregar, não verá o log aqui e também

00:46.450 --> 00:47.860
na aba de fontes, na aba de

00:47.860 --> 00:49.130
fontes do webpack, se

00:49.130 --> 00:51.920
você for ao app. ts, você não vê o tronco aqui.

00:51.920 --> 00:54.820
Portanto, na verdade, não carregou o código correto.

00:54.820 --> 00:58.790
Isto se torna mais claro se eu apagar este pacote. js arquivar aqui.

00:58.790 --> 01:01.513
Se eu agora reiniciar este processo de inicialização

01:02.630 --> 01:04.750
npm, você verá que ele ainda funciona

01:04.750 --> 01:08.090
e, a propósito, não se pergunte se a pasta dist fica vazia agora,

01:08.090 --> 01:10.240
no modo servidor webpack-dev o pacote

01:10.240 --> 01:13.020
é gerado apenas na memória, então ele está lá e é carregado

01:13.020 --> 01:15.840
pelo servidor dev, mas não está realmente escrito

01:15.840 --> 01:18.490
para a pasta dist.

01:18.490 --> 01:20.270
Mas você verá que, se você recarregar,

01:20.270 --> 01:22.180
esta página agora também se choca.

01:22.180 --> 01:24.050
Agora, eu disse que o arquivo estaria

01:24.050 --> 01:27.080
lá, mas não parece que esteja lá, certo?

01:27.080 --> 01:29.120
Agora está faltando no dist como eu disse, e é claro que

01:29.120 --> 01:35.130
estamos importando do dist/bundle. js e índice.

01:35.130 --> 01:35.130
html,

01:35.130 --> 01:36.810
mas na verdade você pode acreditar que ele é gerado em memória.

01:36.810 --> 01:38.450
O problema é que, no momento,

01:38.450 --> 01:41.640
as coisas não estão interligadas corretamente.

01:41.640 --> 01:45.330
Para ajustar isto, temos que ir para o webpack. config. js e lá, na saída,

01:45.330 --> 01:50.330
adicionar realmente uma chave publicPath e defini-la

01:50.350 --> 01:53.647
como "dist". Se você agora salvar isto e reiniciar,

01:56.250 --> 01:59.120
agora você vê a recarga e agora você

01:59.120 --> 02:00.670
vê "Olá" aqui.

02:00.670 --> 02:02.400
Na aba de fontes, você

02:02.400 --> 02:05.320
agora também vê a saída correta ali.

02:05.320 --> 02:06.580
Se você for para a pasta

02:06.580 --> 02:07.860
de pontos, fonte app. e você vê a declaração de registro do console.

02:07.860 --> 02:11.270
E se agora eu for à app. ts e exclua isso, ele reconstrói e agora a declaração

02:11.270 --> 02:13.893
de registro do console desapareceu lá.

02:15.220 --> 02:18.460
Esta é apenas uma configuração adicional que é

02:18.460 --> 02:20.410
necessária para que o servidor

02:20.410 --> 02:22.970
webpack-dev realmente entenda onde

02:22.970 --> 02:26.520
a saída é escrita e onde ela é relativa ao índice. arquivo html.

02:26.520 --> 02:29.910
Porque, por padrão, o servidor

02:29.910 --> 02:32.180
webpack-dev serve um índice. html, encontra-se na mesma pasta em que você executa

02:32.180 --> 02:34.030
este script aqui.

02:34.030 --> 02:37.550
O que é correto, mas depois não faz a conexão à pasta dist

02:37.550 --> 02:40.520
corretamente, e é por isso que temos que informar

02:40.520 --> 02:42.030
ao servidor webpack-dev

02:42.030 --> 02:44.970
com o publicPath onde encontrar nossos assests,

02:44.970 --> 02:48.040
portanto nosso pacote. js neste caso.

02:48.040 --> 02:50.960
Agora, se sairmos do servidor de desenvolvimento,

02:50.960 --> 02:52.370
há uma outra configuração que quero aplicar

02:52.370 --> 02:53.790
aqui no modo de desenvolvimento.

02:53.790 --> 02:56.080
E eu farei isso bem no topo do objeto exportado.

02:56.080 --> 02:59.180
Vou definir o modo para "desenvolvimento". Isto no final dirá ao webpack que aqui estamos construindo

02:59.180 --> 03:01.800
para o desenvolvimento e que ele fará menos otimizações

03:01.800 --> 03:03.550
para melhorar nossa experiência

03:03.550 --> 03:05.590
de desenvolvimento, tornar a depuração

03:05.590 --> 03:09.450
ainda mais fácil e nos dar mensagens de erro mais significativas, por

03:09.450 --> 03:11.420
exemplo.

03:11.420 --> 03:12.950
Portanto, no desenvolvimento

03:12.950 --> 03:16.420
também queremos definitivamente acrescentar esta chave aqui.

03:16.420 --> 03:17.840
E com isso e com o servidor webpack-dev configurado,

03:17.840 --> 03:20.110
temos agora o fluxo de trabalho de desenvolvimento acabado.

03:20.110 --> 03:22.880
Agora, para a produção, precisaremos ajustar um

03:22.880 --> 03:25.570
pouco este fluxo de trabalho, porque lá queremos

03:25.570 --> 03:27.100
uma produção diferente.
