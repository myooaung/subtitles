WEBVTT

00:02.220 --> 00:03.760
Instruktur: Tipe menarik terakhir

00:03.760 --> 00:07.490
yang ingin saya tunjukkan dalam modul ini adalah tipe never (tidak pernah).

00:07.490 --> 00:10.660
Sekarang kita melihat fungsi yang mengembalikan void.

00:10.660 --> 00:13.058
Sehingga tidak pernah mengembalikan apa pun.

00:13.058 --> 00:17.380
Tidak pernah ada fungsi tipe lain yang bisa dikembalikan.

00:17.380 --> 00:19.240
Dan itu mungkin terdengar aneh.

00:19.240 --> 00:21.110
Mari kita lihat cara kerjanya.

00:21.110 --> 00:24.662
Katakanlah kita memiliki fungsi generateError.

00:24.662 --> 00:28.280
Di sini saya berharap mendapatkan pesan, yang berupa string, dan mungkin

00:28.280 --> 00:31.610
beberapa kode kesalahan, yang mungkin berupa angka.

00:31.610 --> 00:33.700
Sekarang di dalam fungsi ini, katakanlah,

00:33.700 --> 00:35.130
kita melempar kesalahan.

00:35.130 --> 00:37.760
Jadi, ini pada dasarnya harus menjadi fungsi utilitas

00:37.760 --> 00:41.500
yang menghasilkan objek kesalahan dan melemparkannya.

00:41.500 --> 00:42.990
Jadi di sini kita mungkin melempar objek, yang

00:42.990 --> 00:44.380
dapat kita lakukan dalam JavaScript.

00:44.380 --> 00:47.366
Kita bisa melempar objek apa pun atau nilai apa pun sebagai

00:47.366 --> 00:49.930
kesalahan, dan itu harus memiliki properti pesan,

00:49.930 --> 00:53.990
di mana saya menyimpan nilai argumen pesan saya di sini.

00:53.990 --> 00:56.390
Dan saya ingin memiliki properti kode kesalahan,

00:56.390 --> 00:59.417
katakanlah menghapus kata, argumen kode di .

01:00.330 --> 01:02.390
Begitu pula dengan fungsi

01:02.390 --> 01:06.600
invalid, dan kita bisa memanggil ini dengan error occurred,

01:06.600 --> 01:09.640
misalnya, dan kode 500.

01:09.640 --> 01:12.213
Jika kita melakukan itu, dan kita mengkompilasi file ini di sini,

01:14.120 --> 01:17.080
kita melihat bahwa setelah ini dimuat ulang kita mendapatkan kesalahan

01:17.080 --> 01:19.150
kita, baik sebagai kesalahan di sini.

01:19.150 --> 01:21.670
Dan ini mungkin terdengar cukup abstrak, tetapi

01:21.670 --> 01:22.850
sebenarnya tidak.

01:22.850 --> 01:24.640
Memiliki fungsi utilitas seperti ini

01:24.640 --> 01:27.850
akan cukup standar dalam aplikasi yang lebih besar di mana Anda tidak

01:27.850 --> 01:30.270
ingin secara manual melempar kesalahan di 10 tempat

01:30.270 --> 01:32.540
berbeda di aplikasi Anda, dan di mana Anda ingin

01:32.540 --> 01:35.380
menjangkau satu fungsi yang nyaman yang membangun objek kesalahan

01:35.380 --> 01:37.450
untuk Anda dan mungkin juga melemparkannya

01:37.450 --> 01:39.350
segera, sehingga Anda dapat memanggil fungsi

01:39.350 --> 01:42.300
ini dengan input yang berbeda tetapi Anda selalu memiliki kesalahan

01:42.300 --> 01:44.690
yang dilemparkan.

01:44.690 --> 01:47.010
Sekarang hal yang menarik tentang fungsi ini adalah,

01:47.010 --> 01:49.048
fungsi ini tidak hanya mengembalikan void.

01:49.048 --> 01:52.385
Saya sebenarnya bisa menentukan bahwa fungsi ini mengembalikan

01:52.385 --> 01:54.545
void, karena tentu saja tidak mengembalikan

01:54.545 --> 01:58.030
apa-apa, tetapi sebenarnya fungsi ini tidak hanya mengembalikan apa-apa,

01:58.030 --> 02:02.630
jika kita benar-benar jujur, fungsi ini tidak pernah mengembalikan apa-apa.

02:02.630 --> 02:05.518
Fungsi ini tidak pernah menghasilkan nilai balik.

02:05.518 --> 02:08.860
Jika saya mencoba mengembalikan nilai balik di sini, dalam

02:08.860 --> 02:11.193
hasil log konsol, dan saya kemudian mengkompilasi

02:12.040 --> 02:16.240
kode saya dalam eksekusi ini, kita melihat tidak ada undefined yang

02:16.240 --> 02:19.630
dicatat di sini, karena karena kesalahan dilemparkan,

02:19.630 --> 02:22.220
ini pada dasarnya membuat skrip kita macet,

02:22.220 --> 02:25.330
Anda bisa mengatakannya.

02:25.330 --> 02:27.080
Ini membatalkan naskah kita.

02:27.080 --> 02:30.290
Dan ini akan selalu menjadi kasus untuk fungsi ini.

02:30.290 --> 02:32.210
Tentu saja kita bisa membungkusnya dengan try

02:32.210 --> 02:34.260
catch sehingga kita masih bisa melanjutkan script

02:34.260 --> 02:37.620
ini, tetapi fungsi ini pada dasarnya tidak pernah menghasilkan nilai.

02:37.620 --> 02:41.060
Fungsi ini selalu merusak skrip atau bagian dari skrip

02:41.060 --> 02:42.910
ini, jika Anda menggunakan

02:42.910 --> 02:44.720
try catch, dan oleh karena

02:44.720 --> 02:47.910
itu tidak pernah mengembalikan apa pun.

02:47.910 --> 02:50.400
Dan karenanya tipe pengembalian fungsi

02:50.400 --> 02:54.483
ini sebenarnya bukan hanya void, tetapi juga tidak pernah.

02:55.710 --> 02:56.700
Sekarang hal yang menarik

02:56.700 --> 02:59.060
adalah, jika Anda mengarahkan kursor ke atasnya tanpa menetapkan

02:59.060 --> 03:01.680
tidak pernah, Anda melihat tipe yang disimpulkan adalah void.

03:01.680 --> 03:05.410
Semua karena never adalah tipe yang lebih baru, sudah ada sejak beberapa

03:05.410 --> 03:07.060
waktu yang lalu, tetapi tidak dibangun

03:07.060 --> 03:10.000
ke dalam versi pertama TypeScript, dan oleh karena itu

03:10.000 --> 03:12.620
void biasanya diasumsikan, dan tidak mengerikan

03:12.620 --> 03:15.417
untuk membiarkannya begitu saja.

03:15.417 --> 03:17.740
Tetapi Anda bisa sangat jelas dan secara eksplisit

03:17.740 --> 03:21.470
menetapkan never sebagai tipe pengembalian untuk membuatnya benar-benar

03:21.470 --> 03:24.490
jelas bahwa ini tidak pernah mengembalikan apa pun.

03:24.490 --> 03:26.770
Jadi dari perspektif kualitas kode, ini mungkin

03:26.770 --> 03:29.560
lebih jelas mengenai niat Anda dan membuatnya sangat jelas

03:29.560 --> 03:30.680
bagi pengembang kami yang

03:30.680 --> 03:32.330
membaca kode Anda bahwa fungsi ini

03:32.330 --> 03:35.850
dimaksudkan untuk tidak pernah mengembalikan apa pun, dan pada dasarnya

03:35.850 --> 03:40.954
merusak atau menghancurkan skrip Anda, atau bagian dari skrip tersebut.

03:40.954 --> 03:43.890
Fungsi lain yang tidak akan pernah kembali

03:43.890 --> 03:47.190
adalah fungsi dengan perulangan tak terbatas.

03:47.190 --> 03:49.370
Jadi, jika kita memiliki while (true) di sana,

03:49.370 --> 03:51.060
itu menciptakan loop tak terbatas,

03:51.060 --> 03:52.790
dan karena itu juga akan menjadi fungsi

03:52.790 --> 03:54.410
yang tidak pernah kembali.

03:54.410 --> 03:56.070
Fungsi error di sini, atau fungsi

03:56.070 --> 03:58.852
yang menghasilkan error yang dibekukan mungkin adalah

03:58.852 --> 04:01.305
kasus penggunaan yang lebih umum.

04:01.305 --> 04:04.500
Jadi jangan pernah, juga tipe yang menarik, yang dapat

04:04.500 --> 04:06.230
Anda gunakan pada fungsi untuk

04:06.230 --> 04:08.553
kasus seperti ini di sini.
