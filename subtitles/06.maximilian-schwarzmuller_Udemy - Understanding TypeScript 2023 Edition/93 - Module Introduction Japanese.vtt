WEBVTT

00:02.500 --> 00:06.400
講師：このモジュールでは､ ジェネリックスと呼ばれる概念に飛び込みます｡

00:06.400 --> 00:10.890
GenericsはTypeScriptに存在し､ バニラJavaScriptには存在しないので､

00:10.890 --> 00:12.860
ここで実際に翻訳することはできない｡

00:12.860 --> 00:14.480
しかし､ TypeScriptではそれらを活用することができます｡ 

00:14.480 --> 00:19.730
また､ 汎用型の概念は､ 他のプログラミング言語にもすべて存在します｡

00:19.730 --> 00:21.950
もちろん､ 他のすべてのプログラミング言語ではありませんが､

00:21.950 --> 00:24.530
例えばC Sharpのように､ いくつかの言語ではそうです｡

00:24.530 --> 00:27.290
さて､ この講座はもちろんCシャープの話ではないのですが｡ 

00:27.290 --> 00:30.770
では､ ジェネリックとは何か､ TypeScriptではどうなっているのか､

00:30.770 --> 00:33.410
そこでどう使うのか､ なぜ使うのか､ 見ていきましょう｡

00:33.410 --> 00:36.450
具体的には､ ジェネリックとは何か､ なぜ面白いのか､

00:36.450 --> 00:39.000
なぜ役に立つのか､ について見ていきます｡

00:39.000 --> 00:44.820
そして､ 独自の汎用関数やクラスを構築していきます｡

00:44.820 --> 00:51.800
次に､ 汎用制約とは何か､ なぜそのようなものを使用するのかについて見ていきます｡

00:51.800 --> 00:55.250
また､ TypeScriptの特殊な型もいくつか見てみましょう｡

00:55.250 --> 01:01.100
これらは一般的なもので､ 今までは本当に理解することしかできませんでした｡

01:01.100 --> 01:02.963
では､ その成果をご覧ください｡ 
