WEBVTT

00:02.220 --> 00:07.490
ผู้สอน: ประเภทที่น่าสนใจสุดท้ายที่ฉันต้องการแสดงในโมดูลนี้คือประเภทที่ไม่เคย

00:07.490 --> 00:10.660
ตอนนี้เราเห็นฟังก์ชันที่คืนค่าเป็นโมฆะ

00:10.660 --> 00:13.058
สิ่งนั้นไม่เคยได้อะไรกลับมา

00:13.058 --> 00:17.380
ฟังก์ชันประเภทอื่นไม่สามารถส่งคืนได้

00:17.380 --> 00:19.240
และนั่นอาจฟังดูแปลก

00:19.240 --> 00:21.110
เรามาดูกันดีกว่าว่ามันทำงานอย่างไร

00:21.110 --> 00:24.662
สมมติว่าเรามีฟังก์ชัน createError

00:24.662 --> 00:31.610
ที่นี่ฉันคาดว่าจะได้รับข้อความซึ่งเป็นสตริงและอาจมีรหัสข้อผิดพลาดซึ่งอาจเป็นตัวเลข

00:31.610 --> 00:35.130
ภายในฟังก์ชันนี้ สมมติว่าเราส่งข้อผิดพลาด

00:35.130 --> 00:41.500
ดังนั้น นี่ควรเป็นฟังก์ชันอรรถประโยชน์ที่สร้างออบเจกต์ข้อผิดพลาดและโยนทิ้ง

00:41.500 --> 00:42.990
ตรงนี้เราอาจโยนวัตถุซึ่งเราสามารถทำได้ใน

00:42.990 --> 00:44.380
JavaScript

00:44.380 --> 00:47.366
เราสามารถโยนวัตถุใดๆ หรือค่าใดๆ ให้เป็นข้อผิดพลาด

00:47.366 --> 00:53.990
และนั่นควรมีคุณสมบัติของข้อความ ซึ่งฉันเก็บค่าของอาร์กิวเมนต์ข้อความไว้ที่นี่

00:53.990 --> 00:56.390
และฉันต้องการคุณสมบัติรหัสข้อผิดพลาด

00:56.390 --> 00:59.417
สมมติว่าลบคำ อาร์กิวเมนต์รหัสใน .

01:00.330 --> 01:02.390
ดังนั้นจึงเป็นฟังก์ชันที่ไม่ถูกต้อง

01:02.390 --> 01:06.600
และเราสามารถเรียกใช้สิ่งนี้ได้โดยมีข้อผิดพลาดเกิดขึ้น

01:06.600 --> 01:09.640
เช่น และรหัส 500

01:09.640 --> 01:12.213
ถ้าเราทำอย่างนั้น และเราคอมไพล์ไฟล์ที่นี่

01:14.120 --> 01:17.080
เราจะเห็นว่าเมื่อโหลดซ้ำ เราได้รับข้อผิดพลาด

01:17.080 --> 01:19.150
รวมทั้งข้อผิดพลาดที่นี่

01:19.150 --> 01:22.850
และนี่อาจฟังดูเป็นนามธรรม แต่จริงๆ แล้วมันไม่ใช่เลย

01:22.850 --> 01:24.640
การมีฟังก์ชันยูทิลิตี้เช่นนี้จะเป็นมาตรฐานที่ค่อนข้างดีในแอปพลิเคชันขนาดใหญ่

01:24.640 --> 01:37.450
ซึ่งคุณไม่ต้องการส่งข้อผิดพลาดด้วยตนเองใน 10 ตำแหน่งที่แตกต่างกันในแอปของคุณ และตำแหน่งที่คุณต้องการเข้าถึงฟังก์ชันที่สะดวกเพียงฟังก์ชันเดียวที่สร้างวัตถุแสดงข้อผิดพลาดสำหรับคุณและ อาจโยนมันทันทีเพื่อให้คุณสามารถเรียกใช้ฟังก์ชันนี้ด้วยอินพุตที่แตกต่างกัน

01:37.450 --> 01:44.690
แต่คุณจะมีข้อผิดพลาดเกิดขึ้นเสมอ

01:44.690 --> 01:47.010
สิ่งที่น่าสนใจเกี่ยวกับฟังก์ชันนี้คือ

01:47.010 --> 01:49.048
มันไม่ได้คืนค่าเป็นโมฆะ

01:49.048 --> 01:54.545
ฉันระบุได้ว่ามันคืนค่า void เพราะแน่นอนว่าไม่คืนค่าอะไรเลย

01:54.545 --> 01:58.030
แต่จริง ๆ แล้วมันไม่ได้คืนค่าอะไรเลย

01:58.030 --> 02:02.630
ถ้าเราพูดตามตรง ฟังก์ชันนี้ไม่คืนค่าเลย

02:02.630 --> 02:05.518
ฟังก์ชันนี้จะไม่สร้างค่าที่ส่งคืน

02:05.518 --> 02:08.860
ถ้าฉันพยายามกู้คืนค่าที่ส่งคืนที่นี่ ในผลลัพธ์บันทึกของคอนโซล

02:08.860 --> 02:11.193
จากนั้นฉันคอมไพล์โค้ดของฉันในการดำเนินการนี้

02:12.040 --> 02:19.630
เราจะเห็นว่าไม่มีการบันทึกที่ไม่ได้กำหนดที่นี่ เนื่องจากข้อผิดพลาดเกิดขึ้น สิ่งนี้จะทำให้สคริปต์ของเราล่ม

02:19.630 --> 02:25.330
คุณสามารถพูดได้

02:25.330 --> 02:27.080
มันยกเลิกสคริปต์ของเรา

02:27.080 --> 02:30.290
และนี่จะเป็นกรณีสำหรับฟังก์ชันนี้เสมอ

02:30.290 --> 02:32.210
แน่นอนว่าเราสามารถรวมไว้ใน try catch

02:32.210 --> 02:34.260
เพื่อให้เรายังคงสามารถดำเนินการต่อในสคริปต์นี้ได้

02:34.260 --> 02:37.620
แต่โดยพื้นฐานแล้วฟังก์ชันนี้ไม่เคยสร้างค่า

02:37.620 --> 02:42.910
ฟังก์ชันนี้จะทำให้สคริปต์หรือส่วนนี้ของสคริปต์หยุดทำงานเสมอ

02:42.910 --> 02:47.910
หากคุณใช้ try catch ดังนั้นจึงไม่ส่งคืนสิ่งใดๆ

02:47.910 --> 02:50.400
และด้วยเหตุนี้ประเภทการส่งคืนของฟังก์ชันนี้จึงไม่ใช่แค่เป็นโมฆะ

02:50.400 --> 02:54.483
แต่ไม่เคยเป็นเช่นนั้นด้วย

02:55.710 --> 02:56.700
ตอนนี้สิ่งที่น่าสนใจคือ

02:56.700 --> 03:01.680
ถ้าคุณวางเมาส์เหนือมันโดยไม่มอบหมายเลย คุณจะเห็นว่าประเภทที่อนุมานนั้นเป็นโมฆะ

03:01.680 --> 03:05.410
ทั้งหมดเป็นเพราะไม่เคยเป็นประเภทที่ใหม่กว่า มันมีมาระยะหนึ่งแล้ว

03:05.410 --> 03:07.060
แต่มันไม่ได้ถูกสร้างไว้ใน

03:07.060 --> 03:15.417
TypeScript เวอร์ชันแรก ดังนั้นจึงถือว่าโมฆะโดยทั่วไป และไม่น่ากลัวที่จะปล่อยไว้อย่างนั้น

03:15.417 --> 03:17.740
แต่คุณสามารถระบุได้อย่างชัดเจนและชัดเจนว่าไม่เคยเป็นประเภทการส่งคืน

03:17.740 --> 03:24.490
เพื่อให้ชัดเจนว่าสิ่งนี้จะไม่ส่งคืนสิ่งใดเลย

03:24.490 --> 03:26.770
ดังนั้นจากมุมมองของคุณภาพโค้ด สิ่งนี้อาจชัดเจนขึ้นเกี่ยวกับความตั้งใจของคุณ

03:26.770 --> 03:35.850
และทำให้นักพัฒนาของเราอ่านโค้ดของคุณอย่างชัดเจนว่าฟังก์ชันนี้มีจุดมุ่งหมายที่จะไม่ส่งคืนสิ่งใดๆ และโดยหลักแล้วจะทำให้สคริปต์ของคุณพังหรือเสียหาย

03:35.850 --> 03:40.954
หรือเป็นส่วนหนึ่งของ สคริปต์

03:40.954 --> 03:47.190
อีกฟังก์ชันหนึ่งที่จะไม่มีวันกลับมาอีกก็คือฟังก์ชันที่มีการวนซ้ำไม่สิ้นสุด

03:47.190 --> 03:49.370
ดังนั้นถ้าเรามี while (จริง) อยู่ในนั้น

03:49.370 --> 03:51.060
สิ่งนั้นจะสร้างการวนซ้ำไม่สิ้นสุด

03:51.060 --> 03:54.410
และนั่นก็เป็นฟังก์ชันที่ไม่คืนค่าด้วย

03:54.410 --> 04:01.305
ฟังก์ชันข้อผิดพลาดที่นี่หรือฟังก์ชันที่สร้างข้อผิดพลาดค้างอาจเป็นกรณีการใช้งานทั่วไปมากกว่า

04:01.305 --> 04:08.553
ยังไม่เคยเป็นประเภทที่น่าสนใจซึ่งคุณสามารถใช้กับฟังก์ชันสำหรับกรณีเช่นนี้ได้ที่นี่
