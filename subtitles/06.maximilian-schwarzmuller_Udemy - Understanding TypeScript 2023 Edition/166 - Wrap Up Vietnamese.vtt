WEBVTT

00:02.150 --> 00:05.480
Người kể chuyện: Và đó đã là đủ cho mô-đun này.

00:05.480 --> 00:08.090
Bây giờ rõ ràng là có rất nhiều thư viện của

00:08.090 --> 00:10.130
bên thứ ba mà bạn có thể sử dụng.

00:10.130 --> 00:12.680
Còn nhiều điều nữa mà bạn có thể khám phá trên

00:12.680 --> 00:15.806
các gói Trình xác thực lớp và Trình biến áp lớp.

00:15.806 --> 00:18.652
Nhưng ý tưởng ở đây không phải là đi sâu vào

00:18.652 --> 00:21.410
tất cả các tính năng của các gói này.

00:21.410 --> 00:24.300
Tôi muốn để điều đó tùy thuộc vào bạn khám phá.

00:24.300 --> 00:27.983
Ý tưởng là bạn sẽ cảm nhận được hai điều quan trọng:

00:27.983 --> 00:31.575
Điều đầu tiên là, với TypeScript, bạn có thể sử dụng

00:31.575 --> 00:35.600
các gói JavaScript thông thường như Lodash mà không gặp

00:35.600 --> 00:36.719
sự cố.

00:36.719 --> 00:39.350
Ban đầu, bạn có thể gặp lỗi, hãy nhớ rằng

00:39.350 --> 00:41.767
về mặt kỹ thuật, nó vẫn hoạt động.

00:41.767 --> 00:45.244
Nhưng bạn cũng có thể khắc phục các lỗi biên dịch này

00:45.244 --> 00:49.260
sau đó bằng cách nhập đúng loại, cuối cùng là bản dịch đúng từ

00:49.260 --> 00:51.500
JavaScript sang TypeScript.

00:51.500 --> 00:54.590
Và các gói dịch như vậy tồn tại cho tất cả các thư viện

00:54.590 --> 00:55.980
JavaScript lớn và phổ biến

00:55.980 --> 00:59.180
và thậm chí là rất nhiều thư viện JavaScript nhỏ.

00:59.180 --> 01:02.221
Bạn cũng có thể đang làm việc với các thư viện

01:02.221 --> 01:04.470
JavaScript có các tệp dịch này,

01:04.470 --> 01:07.110
các tệp DTS này đã được tích hợp sẵn.

01:07.110 --> 01:08.840
Tất nhiên, bạn không cần phải cài

01:08.840 --> 01:10.713
đặt các bản dịch như vậy sau đó.

01:11.550 --> 01:14.350
Chà, bên cạnh những công việc Vanilla này với các

01:14.350 --> 01:17.094
thư viện có thể cần dịch, bạn cũng có thể có các

01:17.094 --> 01:20.610
thư viện như Class Transformer hoạt động tốt trong Vanilla

01:20.610 --> 01:24.280
JavaScript, trong Vanilla JavaScript hiện đại, ít nhất là ở

01:24.280 --> 01:26.580
nơi bạn cũng có các lớp, nhưng tất cả đều

01:26.580 --> 01:29.430
hoạt động mà không cần bất kỳ các bản dịch bổ sung

01:29.430 --> 01:31.400
và các dự án TypeScript.

01:31.400 --> 01:34.960
Và sau đó chúng tôi có các gói như Trình xác thực lớp.

01:34.960 --> 01:38.440
Chúng thực sự bao gồm các tính năng dành riêng cho TypeScript

01:38.440 --> 01:42.370
và cung cấp cho bạn một cách suy nghĩ hoàn toàn mới về dự án của bạn

01:42.370 --> 01:44.840
và giải quyết các vấn đề nhất định.

01:44.840 --> 01:47.603
Trong trường hợp này ở đây, bằng cách sử dụng decorators.

01:48.680 --> 01:51.080
Biết tất cả những điều này là cực kỳ quan trọng và

01:51.080 --> 01:53.440
mang lại cho bạn tất cả sự linh hoạt mà bạn cần cho

01:53.440 --> 01:55.253
các dự án trong tương lai của mình.
