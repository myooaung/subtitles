WEBVTT

00:02.320 --> 00:03.570
Instructor: Para que

00:03.570 --> 00:05.090
sea droppable, tenemos que

00:05.090 --> 00:07.730
ir a la cláusula, o al componente en nuestra aplicación,

00:07.730 --> 00:11.600
que al final debe actuar como un objetivo de arrastre.

00:11.600 --> 00:14.120
Así que aquí la clase Lista de Proyectos es la cláusula

00:14.120 --> 00:15.870
correcta y allí podemos implementar

00:15.870 --> 00:17.150
nuestra segunda interfaz

00:17.150 --> 00:20.130
que añadimos, la interfaz Arrastrar Objetivo.

00:20.130 --> 00:23.550
Ahora, al igual que la interfaz draggable, esto

00:23.550 --> 00:26.510
nos obliga a añadir ciertos métodos.

00:26.510 --> 00:30.600
Para ser precisos, necesitamos añadir el manejador de arrastrar,

00:30.600 --> 00:33.500
el manejador de soltar y el manejador de dejar.

00:33.500 --> 00:34.540
Así que, hagamos eso.

00:34.540 --> 00:38.640
Tal vez todo aquí debajo del constructor por encima de configurar.

00:38.640 --> 00:40.080
El lugar exacto depende

00:40.080 --> 00:42.880
de usted, el orden de los métodos no importa.

00:42.880 --> 00:45.680
Así que aquí voy a añadir el controlador de

00:45.680 --> 00:49.730
arrastre, donde obtenemos nuestro evento de arrastre.

00:49.730 --> 00:51.850
Luego agregaré el manejador de la caída aquí, donde

00:51.850 --> 00:54.203
también obtendremos nuestro evento de arrastre.

00:55.710 --> 00:59.130
Y por último, pero no menos importante, el manejador de salida de

00:59.130 --> 01:02.260
arrastre, donde también obtenemos un evento de arrastre.

01:02.260 --> 01:05.410
Ahora bien, estos eventos, por cierto, contienen diferentes tipos

01:05.410 --> 01:08.594
de datos, pero todos se basan en el tipo de evento central del caso.

01:08.594 --> 01:11.860
Ahora tenemos un par de cosas diferentes que hacer.

01:11.860 --> 01:15.120
Comencemos con el manejador de arrastre, tal vez.

01:15.120 --> 01:18.770
En el manipulador de arrastre, quiero cambiar la apariencia

01:18.770 --> 01:21.900
de mi caja o de la lista desordenada allí, para visualizar

01:21.900 --> 01:24.470
que esta es un área droppable.

01:24.470 --> 01:26.960
Porque ahora mismo, cuando arrastramos un elemento,

01:26.960 --> 01:30.200
no tenemos ninguna pista de dónde podemos soltarlo, ¿verdad?

01:30.200 --> 01:33.410
Nada cambia en la interfaz de usuario, así que quiero cambiar esto.

01:33.410 --> 01:35.950
Para cambiar esto voy a añadir una cláusula css a la lista desordenada,

01:35.950 --> 01:38.680
que se encuentra en la aplicación. css.

01:38.680 --> 01:42.080
La cláusula droppable que cambiará el color de fondo

01:42.080 --> 01:45.460
y por lo tanto aquí, para empezar, sólo tenemos que

01:45.460 --> 01:49.070
acceder a nuestro elemento de lista desordenada.

01:49.070 --> 01:53.850
Podemos hacerlo llegando a este elemento, querySelectror uL y añadiendo un signo

01:53.850 --> 01:57.380
de exclamación porque allí siempre habrá una lista desordenada,

01:57.380 --> 01:59.440
aunque no contenga todavía ningún

01:59.440 --> 02:00.963
elemento.

02:02.560 --> 02:05.570
Sólo tenemos que asegurarnos de que esta palabra clave funciona

02:05.570 --> 02:08.600
aquí y podemos hacerlo autovinculando esto aquí para asegurarnos

02:08.600 --> 02:11.050
de que esta palabra clave está vinculada a la cláusula

02:11.050 --> 02:12.840
circundante.

02:12.840 --> 02:15.610
Luego, con los elementos de la lista seleccionados,

02:15.610 --> 02:19.550
podemos usar la propiedad de la lista de cláusulas de los elementos

02:19.550 --> 02:22.090
dom, así que esto es Vanilla JavaScript aquí

02:22.090 --> 02:26.080
de nuevo, y llamar al método add allí para añadir la cláusula droppable

02:26.080 --> 02:27.540
a ella.

02:27.540 --> 02:29.360
Ahora con eso, por supuesto tenemos

02:29.360 --> 02:33.000
que asegurarnos de que el dragOverHandler realmente se dispara cuando

02:33.000 --> 02:37.333
arrastramos algo sobre este elemento aquí, sobre esta sección renderizada.

02:39.090 --> 02:42.400
Para ello en el método configure, donde ya tenemos

02:42.400 --> 02:46.020
un listener aquí, escuchando nuestros cambios de estado,

02:46.020 --> 02:50.280
también registraré listeners en el propio elemento.

02:50.280 --> 02:53.380
El primer EventListener es, por supuesto, el evento

02:53.380 --> 02:54.760
drag over y lo enlazaré

02:54.760 --> 02:58.090
con el dragOverHandler, como es lógico.

02:58.090 --> 03:01.060
Luego repetiré esto porque también quiero escuchar

03:01.060 --> 03:03.740
el evento dragLeave y vincular esto al dragLeaveHandler

03:03.740 --> 03:06.870
y al evento drop y vincular esto al dropHandler porque

03:06.870 --> 03:10.583
también lo necesitaremos después.

03:11.580 --> 03:16.500
Así que, con eso, tenemos este oyente de eventos de arrastre y el dragOverHandler

03:16.500 --> 03:18.797
conectado, pero también tenemos algunos

03:18.797 --> 03:21.780
errores en el código ahora.

03:21.780 --> 03:24.610
Bueno, eso debería ser los objetos de evento no utilizados aquí,

03:24.610 --> 03:27.430
así que por el momento, para satisfacer la tipografía, vamos

03:27.430 --> 03:28.810
a dejarlos en blanco.

03:28.810 --> 03:31.477
Los necesitaremos más adelante, pero por el momento, para hacer

03:31.477 --> 03:33.690
que esto funcione, vamos a dejarlos en blanco usando

03:33.690 --> 03:35.677
guiones bajos aquí para decirle a Typescript,

03:35.677 --> 03:37.670
"Estamos bien sin usarlos por el momento". Ahora esto compila y ahora de vuelta en el proyecto,

03:37.670 --> 03:38.950
cuando añadimos un nuevo proyecto

03:38.950 --> 03:42.910
aquí, y arrastro esto, ves cuando arrastro esto sobre los proyectos terminados, el

03:42.910 --> 03:45.320
fondo aquí se puso azul claro.

03:45.320 --> 03:49.620
Aquí, sobre los proyectos activos, se puso rosa

03:49.620 --> 03:53.270
claro, como un ligero color rosa.

03:53.270 --> 03:56.220
Sólo para mostrar esto de nuevo, si vuelvo a cargar, ves

03:56.220 --> 03:58.650
que ahora tenemos fondos blancos en los proyectos,

03:58.650 --> 04:02.670
whoops, y tan pronto como empiezo a arrastrar, esto de aquí se pone de fondo

04:02.670 --> 04:06.490
rosa claro y cuando lo arrastro sobre los proyectos terminados, el

04:06.490 --> 04:09.470
fondo de la caja cambia a azul claro.

04:09.470 --> 04:13.360
Ahora no vuelve a cambiar a blanco porque nunca eliminamos esa

04:13.360 --> 04:16.050
cláusula de caída, pero es un primer paso.

04:16.050 --> 04:19.480
Por supuesto, la caída sigue sin funcionar.

04:19.480 --> 04:21.700
Dejarlo aquí no añade el proyecto

04:21.700 --> 04:23.890
porque ¿cómo lo haría?

04:23.890 --> 04:25.300
No hemos añadido ninguna lógica para esto.

04:25.300 --> 04:28.200
Así que asegurémonos de actualizar también

04:28.200 --> 04:33.200
el estilo cuando nos detengamos, cuando dejemos el elemento.

04:33.410 --> 04:36.390
Cuando básicamente lo arrastramos hasta aquí y luego nos vamos.

04:36.390 --> 04:39.670
Asegúrate de que el fondo azul desaparece en ese caso,

04:39.670 --> 04:42.640
eso es lo que quiero hacer a continuación.

04:42.640 --> 04:44.870
Para ello podemos utilizar el dragLeaverHandler

04:44.870 --> 04:47.020
aquí porque eso se disparará cada vez que

04:47.020 --> 04:50.990
dejemos este elemento con nuestro elemento arrastrado.

04:50.990 --> 04:53.019
Ahora allí, por supuesto, también

04:53.019 --> 04:57.550
quiero tener acceso a mi lista desordenada, así que voy a copiar ese código,

04:57.550 --> 05:01.420
pero luego allí, quiero eliminar la cláusula droppable.

05:01.420 --> 05:05.553
Ahora también debemos autoenlazar esto para que la

05:06.448 --> 05:11.220
palabra clave this se refiera a la cláusula circundante.

05:11.220 --> 05:13.120
Si guardamos eso, añadimos un nuevo elemento aquí.

05:14.040 --> 05:17.740
Vamos a intentarlo.

05:17.740 --> 05:18.773
Si empiezo a arrastrarme,

05:20.310 --> 05:23.740
ya ves que tenemos nuestro fondo aquí y si me voy, se va.

05:24.610 --> 05:27.120
Así que ahora el fondo está realmente actualizado.

05:27.120 --> 05:29.930
Aquí se ve un poco de parpadeo porque el evento

05:29.930 --> 05:33.670
dragLeave también se dispara si pasas de tener el cursor

05:33.670 --> 05:37.190
del ratón sobre el fondo a tenerlo sobre un elemento

05:37.190 --> 05:40.960
renderizado, pero eso debería estar bien aquí.

05:40.960 --> 05:42.500
No es un gran problema.

05:42.500 --> 05:43.620
Así que, en realidad, conseguimos el efecto deseado, diría yo.

05:43.620 --> 05:47.320
Así que la interfaz de usuario se actualiza como debería ahora,

05:47.320 --> 05:50.950
pero por supuesto no somos capaces de soltar y transferir realmente

05:50.950 --> 05:53.140
los datos, así que ese será el siguiente

05:53.140 --> 05:54.700
paso.
