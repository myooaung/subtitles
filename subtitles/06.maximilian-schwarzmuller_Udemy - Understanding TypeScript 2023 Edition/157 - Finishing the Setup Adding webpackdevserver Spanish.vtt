WEBVTT

00:02.160 --> 00:05.070
-: Por el momento no estoy usando el servidor webpack-dev.

00:05.070 --> 00:07.680
Sin embargo, su uso es muy sencillo.

00:07.680 --> 00:10.030
Sólo tenemos que el paquete. json y ahora

00:10.030 --> 00:12.430
allí en vez de "lite-server"

00:12.430 --> 00:17.380
usemos "webpack-dev-server", así.

00:17.380 --> 00:20.020
Y ahora vamos a iniciar npm start de nuevo.

00:20.020 --> 00:21.560
Ahora lo que verás es que esto

00:21.560 --> 00:23.610
pone en marcha un servidor que se ejecuta

00:23.610 --> 00:25.780
en el host local 8080, y pone en marcha el flujo

00:25.780 --> 00:28.330
de trabajo de construcción de webpack.

00:28.330 --> 00:30.060
Así que ahora si visita el host local

00:30.060 --> 00:32.020
8080 vemos nuestro proyecto allí.

00:32.020 --> 00:33.860
Lo interesante ahora es que si cambiamos

00:33.860 --> 00:35.510
algo en el código, por ejemplo,

00:35.510 --> 00:38.520
si se ajusta el registro de la consola de ERA aquí, Y se

00:38.520 --> 00:41.200
guarda y luego se ve la parte inferior aquí, se

00:41.200 --> 00:43.160
ve que recompila.

00:43.160 --> 00:46.450
Sin embargo, si recargas no ves el registro aquí Y también en

00:46.450 --> 00:47.860
la pestaña de fuentes, en

00:47.860 --> 00:49.130
la pestaña de fuentes de

00:49.130 --> 00:51.920
webpack, si vas a app. ts, no se ve el registro aquí.

00:51.920 --> 00:54.820
Así que en realidad no cargó el código correcto.

00:54.820 --> 00:58.790
Esto se aclara si borro este paquete. js aquí.

00:58.790 --> 01:01.513
Si ahora reinicio este proceso de inicio de npm,

01:02.630 --> 01:04.750
veréis que sigue funcionando, y por

01:04.750 --> 01:08.090
cierto, no os extrañe que la carpeta dist se quede vacía ahora,

01:08.090 --> 01:10.240
en el modo de servidor webpack-dev el

01:10.240 --> 01:13.020
bundle se genera sólo en memoria, por lo que está

01:13.020 --> 01:15.840
ahí y es cargado por el servidor dev, pero no se escribe

01:15.840 --> 01:18.490
realmente en la dist.

01:18.490 --> 01:20.270
Pero verás que si recargas, esta

01:20.270 --> 01:22.180
página ahora también se bloquea.

01:22.180 --> 01:24.050
Ahora, dije que el archivo estaría

01:24.050 --> 01:27.080
allí, pero parece que no está allí, ¿verdad?

01:27.080 --> 01:29.120
Ahora falta en la dist como he dicho, y por supuesto estamos

01:29.120 --> 01:35.130
importando desde dist/bundle. js y el índice.

01:35.130 --> 01:35.130
html,

01:35.130 --> 01:36.810
pero efectivamente puede creerme que se genera en la memoria.

01:36.810 --> 01:38.450
El problema es que las cosas

01:38.450 --> 01:41.640
no están conectadas correctamente en este momento.

01:41.640 --> 01:45.330
Para ajustar esto tenemos que ir al webpack. configurar. js y allí, en

01:45.330 --> 01:50.330
la salida, añadir realmente una clave publicPath

01:50.350 --> 01:53.647
y establecer esto a "dist. Si ahora guardas esto y reinicias, ahora

01:56.250 --> 01:59.120
ves que se recarga y ahora ves "Hola"

01:59.120 --> 02:00.670
aquí.

02:00.670 --> 02:02.400
En la pestaña de fuentes ahora

02:02.400 --> 02:05.320
también se ve esa salida correcta allí.

02:05.320 --> 02:06.580
Si vas a la carpeta de puntos,

02:06.580 --> 02:07.860
aplicación de origen. n el que se ve la declaración de registro de la consola.

02:07.860 --> 02:11.270
Y si ahora voy a la app. ts y eliminar eso, se reconstruye y ahora la declaración

02:11.270 --> 02:13.893
de registro de la consola se ha ido allí.

02:15.220 --> 02:18.460
Esto es sólo una configuración adicional que se necesita

02:18.460 --> 02:20.410
para que el servidor webpack-dev

02:20.410 --> 02:22.970
entienda realmente dónde se escribe la salida

02:22.970 --> 02:26.520
y dónde está en relación con el índice. archivo html.

02:26.520 --> 02:29.910
Porque por defecto el servidor

02:29.910 --> 02:32.180
webpack-dev sirve un índice. archivo html, se encuentra en la misma carpeta que se ejecuta

02:32.180 --> 02:34.030
este script aquí.

02:34.030 --> 02:37.550
Lo cual es correcto, pero entonces no hace la conexión a la

02:37.550 --> 02:40.520
carpeta dist correctamente, por lo que tenemos

02:40.520 --> 02:42.030
que informar al servidor

02:42.030 --> 02:44.970
webpack-dev con publicPath donde encontrar nuestros

02:44.970 --> 02:48.040
assests, por lo que nuestro bundle. js en este caso.

02:48.040 --> 02:50.960
Ahora bien, si salimos del servidor de desarrollo

02:50.960 --> 02:52.370
hay otra configuración que quiero aplicar

02:52.370 --> 02:53.790
aquí en el modo de desarrollo.

02:53.790 --> 02:56.080
Y lo haré justo en la parte superior del objeto exportado.

02:56.080 --> 02:59.180
Pondré el modo en "desarrollo". Esto al final le dirá a webpack que aquí estamos construyendo

02:59.180 --> 03:01.800
para el desarrollo y que hará menos optimizaciones

03:01.800 --> 03:03.550
para mejorar nuestra experiencia

03:03.550 --> 03:05.590
de desarrollo, facilitar la depuración

03:05.590 --> 03:11.420
y darnos mensajes de error más significativos, por ejemplo.

03:11.420 --> 03:12.950
Así que en el desarrollo también

03:12.950 --> 03:16.420
queremos añadir definitivamente esta clave aquí.

03:16.420 --> 03:17.840
Y con eso y el servidor webpack-dev configurado,

03:17.840 --> 03:20.110
ya tenemos el flujo de trabajo de desarrollo terminado.

03:20.110 --> 03:22.880
Ahora, para la producción, tendremos que ajustar

03:22.880 --> 03:25.570
un poco este flujo de trabajo porque allí queremos

03:25.570 --> 03:27.100
una salida diferente.
