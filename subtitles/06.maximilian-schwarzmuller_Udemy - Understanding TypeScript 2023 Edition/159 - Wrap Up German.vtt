WEBVTT

00:02.190 --> 00:05.030
Kursleiter: Wir haben also webpack hinzugefügt, ein sehr wichtiges

00:05.030 --> 00:08.070
Tool, mit dem wir unsere verschiedenen Dateien zu einem Paket zusammenfassen

00:08.070 --> 00:09.690
können.

00:09.690 --> 00:12.090
Dies hilft uns, die Anzahl der HTTP-Anfragen

00:12.090 --> 00:14.500
zu verringern und somit unsere Anwendung

00:14.500 --> 00:16.500
zu beschleunigen.

00:16.500 --> 00:19.840
Wenn man mit vielen einzelnen Dateien arbeitet, was typischerweise

00:19.840 --> 00:22.270
bei größeren Projekten der Fall ist, sind Tools

00:22.270 --> 00:24.360
wie webpack ein Muss, und webpack ist das

00:24.360 --> 00:26.910
wichtigste und bekannteste Tool, das einem dabei

00:26.910 --> 00:28.200
hilft, und daher ist es das

00:28.200 --> 00:31.190
Tool, das ich hier zeigen wollte.

00:31.190 --> 00:33.730
Wie Sie sehen, ist webpack hochgradig konfigurierbar und

00:33.730 --> 00:36.190
wie ich bereits mehrfach erwähnt habe, sind die offiziellen

00:36.190 --> 00:39.630
Dokumente von webpack der richtige Ort, um alles darüber zu erfahren.

00:39.630 --> 00:42.120
Über verschiedene Lader, verschiedene Fehlereinstellungen,

00:42.120 --> 00:44.770
die Sie einrichten können, und wie es im Allgemeinen funktioniert.

00:44.770 --> 00:47.109
Wenn Sie also ein Webpack-Master werden wollen

00:47.109 --> 00:49.660
und ein ausgeklügeltes Setup haben wollen, sollten

00:49.660 --> 00:52.720
Sie unbedingt in diese Dokumentation eintauchen.

00:52.720 --> 00:55.610
Unser Basis-Setup hier erlaubt es uns jedoch bereits,

00:55.610 --> 00:58.200
TypeScript-Dateien mit Webpack zu kompilieren

00:58.200 --> 01:00.940
und dann die gesamte Ausgabe in einem einzigen Bundle

01:00.940 --> 01:03.820
zusammenzufassen. js-Datei.

01:03.820 --> 01:06.500
Außerdem haben wir eine Konfiguration für die Entwicklung

01:06.500 --> 01:09.050
eingerichtet, die das Debugging erleichtert und uns

01:09.050 --> 01:11.510
hilfreichere Fehlermeldungen liefert.

01:11.510 --> 01:13.250
Und wir erhalten ein Produktions-Setup,

01:13.250 --> 01:15.570
das uns einen hoch optimierten Code liefert,

01:15.570 --> 01:17.840
den wir dann auf einem Server bereitstellen

01:17.840 --> 01:21.160
können, um so wenig Code wie möglich zu übertragen.

01:21.160 --> 01:22.210
Und das war's.

01:22.210 --> 01:25.740
webpack ist wirklich ein Kernwerkzeug, und es zu benutzen und

01:25.740 --> 01:26.573
eine Konfiguration

01:26.573 --> 01:30.260
zu haben, die wirklich funktioniert, ist super wichtig.

01:30.260 --> 01:33.800
Es ist also ein Muss in jedem modernen Projekt, würde ich sagen, und in

01:33.800 --> 01:36.710
diesem Modul werden Sie lernen, wie Sie damit in Ihren TypeScript-Projekten

01:36.710 --> 01:38.763
beginnen können.
