WEBVTT

00:02.150 --> 00:05.480
Narrador: Y eso es todo para este módulo.

00:05.480 --> 00:08.090
Ahora, obviamente, hay toneladas de bibliotecas de terceros

00:08.090 --> 00:10.130
por ahí que usted podría utilizar.

00:10.130 --> 00:12.680
Hay todo esto más que puedes explorar en los

00:12.680 --> 00:15.806
paquetes Class Validator y Class Transformer.

00:15.806 --> 00:18.652
Pero la idea aquí no es tanto sumergirse en todas

00:18.652 --> 00:21.410
las características de estos paquetes.

00:21.410 --> 00:24.300
Prefiero dejar que lo exploren ustedes.

00:24.300 --> 00:27.983
La idea es que te hagas una idea de dos cosas importantes:

00:27.983 --> 00:31.575
La primera es que, con TypeScript, puedes usar paquetes

00:31.575 --> 00:36.719
de JavaScript normales como Lodash sin problemas.

00:36.719 --> 00:39.350
Es posible que te dé errores al principio, pero ten

00:39.350 --> 00:41.767
en cuenta que técnicamente ha funcionado.

00:41.767 --> 00:45.244
Pero también se puede trabajar en torno a estos errores de compilación

00:45.244 --> 00:49.260
entonces importando los tipos correctos, la traducción correcta de JavaScript

00:49.260 --> 00:51.500
a TypeScript al final.

00:51.500 --> 00:54.590
Y estos paquetes de traducción existen para todas las bibliotecas

00:54.590 --> 00:55.980
de JavaScript más importantes

00:55.980 --> 00:59.180
y populares, e incluso para muchas pequeñas.

00:59.180 --> 01:02.221
También es posible que trabaje con bibliotecas de JavaScript

01:02.221 --> 01:04.470
que tienen estos archivos de traducción,

01:04.470 --> 01:07.110
estos archivos DTS incorporados.

01:07.110 --> 01:08.840
Por supuesto, no es necesario instalar dichas

01:08.840 --> 01:10.713
traducciones a partir de entonces.

01:11.550 --> 01:14.350
Bueno, y además de estos trabajos de Vanilla con bibliotecas

01:14.350 --> 01:17.094
que pueden necesitar traducciones, también puedes

01:17.094 --> 01:20.610
tener bibliotecas como Class Transformer que funcionan bien en

01:20.610 --> 01:24.280
Vanilla JavaScript, en Vanilla JavaScript moderno, al menos donde

01:24.280 --> 01:26.580
también tienes clases, pero que todo el trabajo,

01:26.580 --> 01:31.400
sin ninguna traducción extra y proyectos de TypeScript.

01:31.400 --> 01:34.960
Y luego tenemos paquetes como Class Validator.

01:34.960 --> 01:38.440
Realmente adoptan las características específicas

01:38.440 --> 01:42.370
de TypeScript y te dan una nueva forma de pensar en tu proyecto

01:42.370 --> 01:44.840
y de resolver ciertos problemas.

01:44.840 --> 01:47.603
En este caso, utilizando decoradores.

01:48.680 --> 01:51.080
Saber todas estas cosas es súper importante

01:51.080 --> 01:53.440
y te da toda la flexibilidad que necesitas

01:53.440 --> 01:55.253
para tus futuros proyectos.
