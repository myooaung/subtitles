WEBVTT

00:02.440 --> 00:05.240
Erzähler: Wir haben gesehen, wie wir ziemlich erstaunliche

00:05.240 --> 00:08.120
Dinge mit Dekoratoren, Dekorator-Fabriken und dann auch

00:08.120 --> 00:11.740
durch die Nutzung der Rückgabewerte von Dekoratoren bauen können. In

00:11.740 --> 00:12.790
den Beispielen erlaubt

00:12.790 --> 00:14.930
uns der Klassendekorator, die Klasse, der

00:14.930 --> 00:18.740
wir den Dekorator hinzugefügt haben, durch eine Klasse zu ersetzen, die

00:18.740 --> 00:21.400
völlig anders ist, die auf der existierenden Klasse

00:21.400 --> 00:23.900
aufbaut, wie in unserem Fall, und die daher einige

00:23.900 --> 00:27.230
Funktionalitäten hinzufügen kann.

00:27.230 --> 00:30.490
Jetzt können Sie auch in anderen Dekoratoren Werte zurückgeben,

00:30.490 --> 00:32.030
aber nicht in allen.

00:32.030 --> 00:35.430
Oder der Rückgabewert wird nicht in allen Fällen beachtet.

00:35.430 --> 00:38.150
Nun, Dekoratoren, bei denen man etwas zurückgeben kann,

00:38.150 --> 00:41.330
sind die Dekoratoren, die man zu Methoden hinzufügen kann und die Dekoratoren,

00:41.330 --> 00:43.540
die man zu Accessors hinzufügt.

00:43.540 --> 00:47.400
Also hier auf dem Setter log 2 und log 3 auf der Methode diese zwei

00:47.400 --> 00:51.210
Dekoratoren, log 2 und log 3 diese könnten auch etwas zurückgeben

00:51.210 --> 00:54.080
und TypeScript würde es verwenden.

00:54.080 --> 00:58.040
Die Dekoratoren für Eigenschaften und Parameter können natürlich

00:58.040 --> 01:00.670
auch etwas zurückgeben, aber TypeScript

01:00.670 --> 01:02.500
wird es ignorieren.

01:02.500 --> 01:05.030
Daher werden Rückgabewerte dort nicht unterstützt

01:05.030 --> 01:07.700
oder nicht verwendet, um genau zu sein.

01:07.700 --> 01:09.690
Was können Sie nun auf Log 3 zurückgeben?

01:09.690 --> 01:12.680
Also auf Methoden-Dekoratoren und auf Log 2, also

01:12.680 --> 01:15.320
auf Accessor-Dekoratoren allerdings.

01:15.320 --> 01:19.320
Sie können einen brandneuen Eigenschaftsdeskriptor zurückgeben.

01:19.320 --> 01:22.050
Log 2 und Log 3, das sind die beiden Dekorateure, von denen ich

01:22.050 --> 01:23.110
spreche, richtig?

01:23.110 --> 01:28.110
Log 2 und Log 3 erhalten beide den Deskriptor von der Eigenschaft, von der Methode,

01:28.170 --> 01:30.510
an die sie angehängt sind.

01:30.510 --> 01:33.034
Da ein Accessor eine Art Methode ist, haben

01:33.034 --> 01:36.220
Sie eine Funktion, die dort ausgeführt wird.

01:36.220 --> 01:39.072
Wenn wir uns diese Seite noch einmal ansehen

01:39.072 --> 01:41.980
und neu laden, sehen wir, dass zum Beispiel

01:41.980 --> 01:44.500
für unseren Accessor-Dekorator der

01:44.500 --> 01:47.260
Property-Deskriptor dieses Objekt hier

01:47.260 --> 01:50.497
ist, das die konfigurierbaren und aufzählbaren

01:50.497 --> 01:52.470
sowie die get- und set-Eigenschaften

01:52.470 --> 01:54.910
hat.

01:54.910 --> 01:57.660
Und für den Methodendekorator ist unser Deskriptor dieses

01:57.660 --> 01:59.330
Objekt hier, das auch konfigurierbar,

01:59.330 --> 02:02.290
aufzählbar, wertvoll und beschreibbar ist.

02:02.290 --> 02:04.410
Und das ist Vanilla JavaScript.

02:04.410 --> 02:07.830
Sie haben Eigenschaft Deskriptoren in vanilla JavaScript als gut.

02:07.830 --> 02:11.710
Sie ermöglichen es Ihnen, eine Eigenschaft genauer zu definieren.

02:11.710 --> 02:14.430
Sie können einer Eigenschaft natürlich einen Wert zuweisen,

02:14.430 --> 02:15.990
und da es sich um eine Methode handelt,

02:15.990 --> 02:17.940
ist der Wert in diesem Fall eine Funktion,

02:17.940 --> 02:20.010
aber Sie können auch steuern, ob die Eigenschaft

02:20.010 --> 02:22.910
beschreibbar ist, d. h. ob sie nach der Erstellung des Objekts

02:22.910 --> 02:24.700
geändert werden kann.

02:24.700 --> 02:25.950
ob sie konfigurierbar ist, d.h.

02:25.950 --> 02:27.140
ob Sie die Konfiguration ändern

02:27.140 --> 02:29.570
können und ob Sie diese Eigenschaft löschen können.

02:29.570 --> 02:30.770
Und wenn es aufzählbar

02:30.770 --> 02:33.166
ist, d.h. wenn es z.B. in einer Schleife

02:33.166 --> 02:35.410
durch Ihr Objekt auftaucht.

02:35.410 --> 02:36.810
Und daher eine Methode zum Beispiel

02:36.810 --> 02:38.790
standardmäßig ist dies auf false gesetzt,

02:38.790 --> 02:40.930
so dass, wenn Sie eine for in-Schleife auf ein Objekt

02:40.930 --> 02:44.040
diese Methode nicht als Eigenschaft gedruckt wird.

02:44.040 --> 02:45.240
Für einen Accessor haben

02:45.240 --> 02:47.180
wir auch configurable und enumerable,

02:47.180 --> 02:49.750
aber wir haben get und set und da könnte man natürlich

02:49.750 --> 02:53.040
auch zum Beispiel einen neuen Deskriptor zurückgeben, der eine

02:53.040 --> 02:56.180
ganz neue set-Methode zuweist oder der plötzlich auch eine

02:56.180 --> 02:58.750
get-Funktionalität hinzufügt.

02:58.750 --> 03:01.585
Hier in log 2 und log 3 können Sie also am Ende ein neues

03:01.585 --> 03:05.190
Deskriptor-Objekt zurückgeben und TypeScript klar machen,

03:05.190 --> 03:08.020
dass Sie dies durch Rückgabe oder durch Setzen des

03:08.020 --> 03:10.560
Rückgabetyps auf die Eigenschaft deskriptor

03:10.560 --> 03:14.860
tun werden, und dort können Sie also auch das set-Schlüsselwort, das get-Schlüsselwort,

03:14.860 --> 03:17.010
die konfigurierbare oder die aufzählbare

03:17.010 --> 03:22.010
Eigenschaft setzen und ändern, wie dieser Accessor oder diese Methode konfiguriert

03:22.500 --> 03:24.800
ist.

03:24.800 --> 03:27.560
Jetzt möchte ich das hier für den Accessor nicht tun,

03:27.560 --> 03:29.800
es gibt nichts Interessantes, was ich damit

03:29.800 --> 03:32.520
tun könnte, also werde ich keinen Eigenschaftsdeskriptor

03:32.520 --> 03:36.400
zurückgeben, aber ich werde Ihnen ein Beispiel mit dem Methodendekorator

03:36.400 --> 03:40.080
zeigen, wo wir etwas zurückgeben werden und wir können mit Hilfe von Dekoratoren

03:40.080 --> 03:42.533
Interessantes bauen.
