WEBVTT

00:02.060 --> 00:04.960
講師：もうジェネリックタイプはこれでおしまいですね｡ 

00:04.960 --> 00:14.400
本当に難しいのですが､ 最終的には前回の講義でお伝えしたまとめが最適な説明となります｡

00:14.400 --> 00:14.400
柔軟性と安全性を兼ね備えているのです｡

00:16.710 --> 00:21.660
クラスで渡す値や使用する値については､

00:21.660 --> 00:26.800
少なくとも可能な制約を守る限り柔軟である｡

00:26.800 --> 00:44.360
しかし､ クラスやジェネリック関数の結果に対して行う型については完全にサポートされている｡

00:44.360 --> 00:46.680
ここでは具象型を設定していますが､

00:46.680 --> 00:52.600
このクラスや関数を作成するときに､ その具象型に固定するわけではありません｡

00:52.600 --> 00:55.540
もちろん､ これらの制約はすべてオプションです｡

00:55.540 --> 01:07.510
そして､ 制約を持たない汎用クラスや汎用関数もあれば､ 多くの制約を持つものもあるでしょう｡

01:07.510 --> 01:09.960
ですから､ ジェネリックタイプは本当に便利な機能です｡ 

01:09.960 --> 01:12.700
promiseとarrayで､ 多くの組み込み汎用型のうちの2つを示しましたが､

01:12.700 --> 01:20.053
もちろん､ このコースを通じて､ カスタム汎用型も含めて､ もっと多くのものを見ることができます｡
