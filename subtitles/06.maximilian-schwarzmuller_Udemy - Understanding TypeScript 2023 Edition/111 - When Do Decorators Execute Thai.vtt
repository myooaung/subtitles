WEBVTT

00:02.440 --> 00:04.260
-: ก่อนที่เราจะดำดิ่งสู่ตัวอย่างมากกว่านี้

00:04.260 --> 00:07.940
เรามาทำความเข้าใจลำดับการทำงานของมัณฑนากรกันก่อนดีกว่า

00:07.940 --> 00:10.530
และที่นี่ สิ่งสำคัญคือต้องเข้าใจว่าก่อนอื่น

00:10.530 --> 00:15.396
ทั้งหมดกำลังทำงานโดยที่เราไม่ต้องสร้างอินสแตนซ์ผลิตภัณฑ์นี้

00:15.396 --> 00:16.600
หรืออีกนัยหนึ่ง

00:16.600 --> 00:19.670
ถ้าฉันสร้างผลิตภัณฑ์ที่นี่ด้วยผลิตภัณฑ์ใหม่

00:19.670 --> 00:24.563
หนังสือ ราคา $19 และฉันสร้างผลิตภัณฑ์อื่นที่นี่ หนังสือสองเล่มในราคา

00:24.563 --> 00:26.660
$29

00:26.660 --> 00:31.730
สิ่งนี้ปฏิบัติตามโดยไม่มีข้อผิดพลาดของรหัสมัณฑนากรของฉันที่นี่ไม่ทำงานบ่อยกว่านี้

00:31.730 --> 00:35.350
ดังนั้นจึงไม่ใช่การยกตัวอย่างของคลาสนี้ที่สำคัญ

00:35.350 --> 00:36.680
มัณฑนากรเหล่านี้ทั้งหมด

00:36.680 --> 00:38.452
ไม่ว่าจะเป็นพร็อพเพอร์ตี้

00:38.452 --> 00:41.810
มัณฑนากร เมธอด มัณฑนากร accessor มัณฑนากร หรือพารามิเตอร์

00:41.810 --> 00:43.620
มัณฑนากร พวกเขาทั้งหมดดำเนินการเมื่อคุณกำหนดคลาสนี้

00:43.620 --> 00:48.930
และนั่นเป็นสิ่งสำคัญที่ต้องเข้าใจ

00:48.930 --> 00:55.100
สิ่งเหล่านี้ไม่ใช่ตัวตกแต่งที่ทำงานในเวลาที่คุณเรียกใช้เมธอดหรือเมื่อคุณทำงานกับพร็อพเพอร์ตี้

00:55.100 --> 00:57.190
นี่ไม่ใช่สิ่งที่พวกเขาทำ

00:57.190 --> 01:04.397
มัณฑนากรเหล่านี้ช่วยให้คุณสามารถทำงานเบื้องหลังการตั้งค่าเพิ่มเติมเมื่อมีการกำหนดคลาส

01:04.397 --> 01:06.590
กลับไปที่แนวคิดเมตาโปรแกรมมิงที่ฉันอธิบายไปก่อนหน้านี้

01:06.590 --> 01:08.070
ถูกต้อง

01:08.070 --> 01:12.410
นั่นคือแนวคิดเบื้องหลังนักตกแต่งหรือนั่นคือกรณีการใช้งานหลักของพวกเขา

01:12.410 --> 01:15.520
พวกเขาไม่ใช่ผู้ฟังเหตุการณ์ที่คุณเพิ่มในบางสิ่ง เพื่อที่ว่าเมื่อคุณทำงานกับพร็อพเพอร์ตี้

01:15.520 --> 01:18.490
คุณสามารถเรียกใช้โค้ดบางอย่างได้

01:18.490 --> 01:21.069
คุณสามารถสร้างบางอย่างที่ทำงานกับมัณฑนากรได้จริง

01:21.069 --> 01:35.010
แต่ด้วยการปรับแต่งและแก้ไขบางอย่างเบื้องหลัง แต่มัณฑนากรเองเป็นเพียงฟังก์ชั่นที่ดำเนินการเมื่อคลาสของคุณถูกกำหนดเมื่อคุณ (พึมพำ) และคุณสามารถใช้มัณฑนากรได้ เพื่อทำงานเบื้องหลังบางอย่าง

01:35.010 --> 01:43.660
จากนั้นจึงตั้งค่าโค้ดบางอย่างที่ควรรันทุกครั้งที่เรียกสิ่งนี้

01:43.660 --> 01:51.696
หากต้องการเพิ่มข้อมูลเมตาเพิ่มเติมหรือจัดเก็บข้อมูลบางอย่างเกี่ยวกับพร็อพเพอร์ตี้ไว้ที่อื่นในโครงการหรือในไลบรารีที่คุณกำลังสร้าง

01:51.696 --> 01:54.075
นี่คือสิ่งที่คุณจะใช้มัณฑนากรได้

01:54.075 --> 02:02.290
และนั่นคือรูปแบบทั้งหมดที่คุณจะได้เห็นเมื่อตอนนี้ฉันแสดงตัวอย่างสิ่งที่คุณสร้างได้ด้วยมัณฑนากร

02:02.290 --> 02:04.740
พวกเขากำลังเพิ่มฟังก์ชันการทำงานพิเศษเบื้องหลัง

02:04.740 --> 02:14.313
ซึ่งบางครั้งอาจดำเนินการได้เมื่อคุณทำบางอย่างกับชั้นเรียนหรือด้วยวิธีการของคุณ แต่ก็สามารถทำสิ่งที่แตกต่างไปจากเดิมอย่างสิ้นเชิงได้

02:15.240 --> 02:21.320
ทั้งหมดนี้เป็นสิ่งสำคัญสำหรับตัวอย่างบุคคลของเราจากก่อนหน้านี้ด้วยเครื่องมือตกแต่งเทมเพลต

02:21.320 --> 02:25.160
ซึ่งจะไม่เพิ่มเทมเพลตนี้ทุกครั้งที่เรายกตัวอย่างบุคคลที่นี่

02:25.160 --> 02:27.890
มันเพิ่มเมื่อใดก็ตามที่เรากำหนดคลาสนี้

02:27.890 --> 02:33.140
เราจะต้องเพิ่มตรรกะพิเศษภายในฟังก์ชันมัณฑนากรของเราเพื่อเปลี่ยนพฤติกรรมนี้

02:33.140 --> 02:35.980
และอาจจะเพียงแค่เก็บแม่แบบนี้ไว้ในโครงสร้างข้อมูลอื่น

02:35.980 --> 02:43.650
ๆ ของโครงการของเรา ซึ่งเราจะแท็บเมื่อใดก็ตามที่เราสร้างบุคคลใหม่ที่นี่

02:43.650 --> 02:45.278
ดังนั้น โดยพื้นฐานแล้วเราเพียงแค่ตั้งค่านี้เมื่อเรากำหนดคลาส

02:45.278 --> 02:52.350
แต่จากนั้นเราก็เก็บมันไว้เบื้องหลังภายใน และจากนั้นเราสามารถใช้มันได้เมื่อเราต้องการใช้มัน

02:52.350 --> 02:54.160
ตอนนี้เราแสดงผลเสมอเมื่อเรากำหนดคลาสนี้

02:54.160 --> 02:57.610
ไม่ใช่เมื่อคุณสร้างอินสแตนซ์ใหม่

02:57.610 --> 03:00.403
นี่คือวิธีดำเนินการของมัณฑนากรและอย่างที่ฉันพูด

03:00.403 --> 03:08.883
ตอนนี้ฉันจะแสดงให้คุณเห็นตัวอย่างสองสามตัวอย่างที่เราใช้ประโยชน์จากมัณฑนากรโดยทั่วไปและเวลาในการดำเนินการเพื่อทำสิ่งที่ดีกับพวกเขา
