WEBVTT

00:02.310 --> 00:03.143
Kursleiter: Hier bin ich

00:03.143 --> 00:05.860
wieder bei der allgemeinen Projektstruktur, an der wir zuvor gearbeitet haben.

00:05.860 --> 00:10.940
Sie finden ihn im Index beigefügt. html-Datei und die Anwendung.

00:10.940 --> 00:10.940
ts-Datei.

00:10.940 --> 00:15.410
Und da will ich gleich mit Schnittpunkttypen einsteigen.

00:15.410 --> 00:19.570
Schnittpunkttypen ermöglichen es uns, andere Typen zu kombinieren.

00:19.570 --> 00:23.280
Sagen wir, wir haben einen Typ admin, der ein Objekttyp ist,

00:23.280 --> 00:25.430
also noch einmal, wir erstellen hier

00:25.430 --> 00:28.170
kein Objekt, wir definieren einen Typ, also

00:28.170 --> 00:30.340
definiere ich hier nur eine Typdefinition

00:31.200 --> 00:35.560
und admin sollte einen Namen haben, der ein String ist, sagen wir, und

00:35.560 --> 00:38.230
ein admin sollte auch Privilegien haben,

00:39.910 --> 00:44.370
und das sollte zum Beispiel ein String-Array sein.

00:44.370 --> 00:47.010
Wir hätten dies auch mit einer Schnittstelle

00:47.010 --> 00:48.950
erstellen können, aber hier mache

00:49.810 --> 00:54.470
ich es mit einem Typ, und jetzt habe ich einen anderen Typ, sagen wir den allgemeinen

00:54.470 --> 00:59.130
Angestelltentyp, und dort habe ich auch einen Namen, String.

00:59.130 --> 01:02.890
Ich habe kein Privileg, aber ich habe einen Starttermin.

01:02.890 --> 01:04.380
Das könnte vom Typ Datum sein.

01:04.380 --> 01:07.350
Das haben wir noch nicht gesehen, aber das Datum ist ein Typ, der

01:07.350 --> 01:10.340
vom Skript auf der Grundlage des Datenobjekts unterstützt wird,

01:10.340 --> 01:12.163
das in JavaScript eingebaut ist.

01:13.730 --> 01:17.580
Nun wollen wir hier einen neuen Typus erstellen, sagen

01:17.580 --> 01:21.120
wir einen gehobenen Angestellten, der die Kombination

01:21.120 --> 01:23.900
dieser beiden Typen sein soll.

01:23.900 --> 01:26.470
Natürlich könnten wir es manuell erstellen, indem

01:26.470 --> 01:28.770
wir einfach einen Objekttyp definieren, der

01:28.770 --> 01:31.750
einen Namen, ein Startdatum und ein Privileg hat, aber wenn

01:31.750 --> 01:34.120
wir diese beiden Typen bereits haben, dann können

01:34.120 --> 01:37.540
wir das auch einfach kombinieren, indem wir sagen admin und, also

01:37.540 --> 01:42.000
verwenden wir hier das kaufmännische Und-Symbol, employee.

01:42.000 --> 01:44.370
Das Ergebnis ist nun ein neuer Objekttyp,

01:44.370 --> 01:46.390
der beides haben muss.

01:46.390 --> 01:50.470
Wenn ich also meinen Mitarbeiter, E one, habe, der vom Typ

01:50.470 --> 01:54.770
elevated employee sein soll, dann kann ich dort ein Objekt speichern,

01:54.770 --> 01:57.440
das eine Eigenschaft name haben muss,

01:57.440 --> 02:00.113
das eine Eigenschaft privilege haben

02:02.510 --> 02:08.800
muss, create server, und das auch ein Startdatum mit neuen Daten haben muss.

02:08.800 --> 02:10.070
Erstellen Sie ein neues Datenobjekt,

02:10.070 --> 02:12.700
das einfach der aktuelle Zeitstempel ist.

02:12.700 --> 02:15.610
Dies ist nun eine einfache Möglichkeit, zwei Typen zu kombinieren.

02:15.610 --> 02:17.740
Ich möchte anmerken, dass Schnittstellentypen

02:17.740 --> 02:21.550
eng mit der Vererbung von Schnittstellen verbunden

02:21.550 --> 02:24.320
sind, denn natürlich hätten wir hier dasselbe

02:24.320 --> 02:28.590
erreichen können, indem wir eine Schnittstelle admin und

02:29.620 --> 02:34.700
dann eine Schnittstelle employee verwenden, und dann könnten wir auch

02:34.700 --> 02:38.853
einen Schnittstellentyp auf diesen Schnittstellen verwenden

02:40.100 --> 02:50.653
oder wir erstellen eine dritte Schnittstelle, elevated employee, die employee und admin erweitert.

02:52.700 --> 02:54.520
Wenn ich das jetzt auskommentiere,

02:54.520 --> 02:56.830
haben wir also genau den gleichen Effekt.

02:56.830 --> 02:58.550
Nun, das ist wohl ein bisschen mehr Code.

02:58.550 --> 03:01.750
Ein Grund, warum wir hier vielleicht lieber Typen statt Schnittstellen

03:01.750 --> 03:04.280
verwenden würden, aber die Beziehung ist auf jeden

03:04.280 --> 03:06.300
Fall sehr eng und man könnte durchaus Schnittstellen

03:06.300 --> 03:09.770
für dieses Beispiel verwenden.

03:09.770 --> 03:13.040
Es ist jedoch erwähnenswert, dass Schnittpunkttypen zwar besonders

03:13.040 --> 03:15.600
nützlich sein können, wenn sie in Verbindung mit Objekttypen

03:15.600 --> 03:18.240
verwendet werden, wie wir es hier tun, aber Sie können

03:18.240 --> 03:20.910
sie mit allen Typen verwenden.

03:20.910 --> 03:22.683
Wenn Sie also einen anderen Typ hätten,

03:23.655 --> 03:28.450
sagen wir mal kombinierbar, der entweder eine Zeichenkette oder eine Zahl ist, dann hätten

03:28.450 --> 03:29.940
wir hier einen Vereinigungstyp

03:29.940 --> 03:32.380
mit den Basistypen Zeichenkette oder Zahl und

03:32.380 --> 03:34.770
dann hätten wir hier einen numerischen Typ,

03:34.770 --> 03:38.660
der entweder eine Zahl oder ein Boolescher Wert ist, nun, dann könnten wir

03:38.660 --> 03:43.660
hier unseren, sagen wir mal, universellen Typ haben, indem wir kombinierbar mit numerisch

03:43.730 --> 03:49.800
schneiden und am Ende könnten die Typen dann sehen, dass der universelle Typ natürlich vom Typ Zahl ist, weil das

03:49.800 --> 03:51.950
der einzige Schnittpunkt ist, den wir hier

03:51.950 --> 03:54.730
haben, aber wenn Sie mehr Schnittpunkte hätten, dann

03:54.730 --> 03:56.520
wäre das der Typ, der universell zugewiesen

03:56.520 --> 03:59.830
ist, also könnte es auch ein Vereinigungstyp sein, der der Schnittpunkt

03:59.830 --> 04:04.940
dieser zwei Vereinigungstypen ist.

04:04.940 --> 04:07.800
Der Schnittmengenoperator kann also mit beliebigen

04:07.800 --> 04:11.790
Typen verwendet werden und bildet dann einfach die Schnittmenge dieser

04:11.790 --> 04:12.980
Typen.

04:12.980 --> 04:14.330
Im Falle eines Unionstyps sind

04:14.330 --> 04:17.300
das im Wesentlichen die Typen, die sie gemeinsam haben.

04:17.300 --> 04:18.890
Bei den Objekttypen handelt

04:18.890 --> 04:23.510
es sich sozusagen um die Kombination dieser Objekteigenschaften.

04:23.510 --> 04:25.960
Es handelt sich also um Schnittpunkttypen.

04:25.960 --> 04:27.360
Kann manchmal nützlich sein.

04:27.360 --> 04:29.050
Sie werden sie nicht immer verwenden,

04:29.050 --> 04:31.570
aber es gibt bestimmt Situationen, in denen Sie

04:31.570 --> 04:35.010
etwas einfacher oder kürzer ausdrücken können, indem Sie Schnittpunkttypen

04:35.010 --> 04:37.230
verwenden.

04:37.230 --> 04:39.520
Um zu beweisen, dass das alles funktioniert, öffne

04:39.520 --> 04:42.050
ich eine neue Registerkarte in meinem Terminal und

04:42.050 --> 04:45.390
führe TSC dash W aus, um den Überwachungsmodus zu starten, so dass ich

04:45.390 --> 04:47.770
nicht nur in den Live-Server gehen muss, sondern

04:47.770 --> 04:49.850
auch meinen Code erstellen kann.

04:49.850 --> 04:51.210
Wenn ich jetzt hier einmal nachlade,

04:51.210 --> 04:53.200
sehen wir, dass dies ohne Fehler läuft und

04:53.200 --> 04:55.443
auch ohne Fehler kompiliert wird.
