WEBVTT

00:02.250 --> 00:04.870
-: Więc teraz, gdy wiemy o tych potężnych funkcjach,

00:04.870 --> 00:07.960
oczywiste pytanie brzmi: dlaczego mielibyśmy tego używać?

00:07.960 --> 00:09.610
Dlaczego to jest pomocne?

00:09.610 --> 00:12.200
Otóż jest to przydatne w takich sytuacjach jak

00:12.200 --> 00:13.780
ta, gdzie wiemy, że chcemy mieć

00:13.780 --> 00:15.820
pewien zestaw funkcjonalności.

00:15.820 --> 00:18.750
Powiedzmy, że metoda greet, i chcemy zapewnić,

00:18.750 --> 00:21.910
że klauzula ma taką metodę greet, a inna klauzula

00:21.910 --> 00:24.450
ma ją może również, cóż, wtedy możemy zaimplementować

00:24.450 --> 00:26.360
interfejs, który wymusza istnienie

00:26.360 --> 00:29.570
tej metody.

00:29.570 --> 00:32.690
Wtedy możemy łatwo dzielić funkcjonalność między klauzule,

00:32.690 --> 00:35.850
a każda klauzula musi dodać swoją własną implementację,

00:35.850 --> 00:38.060
dokładny kod, który powinien wykonać się

00:38.060 --> 00:39.450
po wywołaniu metody, ale

00:39.450 --> 00:41.370
wymuszamy pewną strukturę za pomocą

00:41.370 --> 00:43.280
interfejsów.

00:43.280 --> 00:46.400
Może to być przydatne, jeśli nie mamy innych części naszego

00:46.400 --> 00:48.550
kodu, które polegają na tej strukturze.

00:48.550 --> 00:51.680
Tutaj ustawiamy user1 jako typ Greetable, i tym

00:51.680 --> 00:55.240
samym mówimy, że nie obchodzi nas co jest w środku user,

00:55.240 --> 00:57.840
ale to co musi tam być to metoda greet, i wiemy,

00:57.840 --> 00:59.730
że musi tam być, ponieważ cokolwiek

00:59.730 --> 01:03.510
przechowujemy w user1 musi być greetable.

01:03.510 --> 01:07.350
To pozwala nam pisać naprawdę potężny i elastyczny kod, w którym

01:07.350 --> 01:09.840
nie musimy wiedzieć wszystkiego o obiekcie

01:09.840 --> 01:11.710
lub wszystko o klauzuli, ale po prostu

01:11.710 --> 01:14.710
wiemy, że cokolwiek dostaję tutaj w user1 musi mieć

01:14.710 --> 01:16.210
metodę greet.

01:16.210 --> 01:18.850
Nie interesuje nas czy Person ma coś jeszcze,

01:18.850 --> 01:20.630
tutaj interesuje nas greet, stąd

01:20.630 --> 01:22.400
wysłaliśmy do Greetable, a co za

01:22.400 --> 01:25.180
tym idzie nie możemy przechowywać w user1 niczego

01:25.180 --> 01:27.190
co nie miałoby metody greet, bo Greetable

01:27.190 --> 01:30.770
wymusza na czymkolwiek co na nim bazujesz, aby miało taką metodę

01:30.770 --> 01:32.333
greet.
