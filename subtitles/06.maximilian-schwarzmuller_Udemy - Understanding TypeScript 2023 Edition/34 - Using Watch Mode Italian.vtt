WEBVTT

00:02.220 --> 00:03.660
Ora, per iniziare, voglio

00:03.660 --> 00:04.630
assicurarmi di

00:04.630 --> 00:07.210
non dover rieseguire questo comando qui;

00:07.210 --> 00:10.104
questo comando TFC che indica un file dopo ogni

00:10.104 --> 00:12.220
modifica apportata.

00:12.220 --> 00:16.100
Perché ora, ogni volta che modifico qualcosa qui, nel

00:16.100 --> 00:17.640
mio file TypeScript,

00:17.640 --> 00:22.640
e voglio rifletterlo nel mio file di output e in questa pagina web, dobbiamo

00:22.670 --> 00:25.270
salvare il file, eseguire di nuovo

00:25.270 --> 00:29.410
la compilazione e poi ricaricare questo file; oppure,

00:29.410 --> 00:33.270
se abbiamo il nostro processo di avvio NPM in esecuzione,

00:33.270 --> 00:37.650
cosa che dovremmo avere, almeno il nostro browser si ricaricherà

00:37.650 --> 00:43.410
automaticamente, se non apriamo direttamente il file, ma siamo su localhost:

00:43.410 --> 00:46.200
3000.

00:46.200 --> 00:47.760
Tuttavia, anche se il caricamento

00:47.760 --> 00:48.910
avviene automaticamente,

00:48.910 --> 00:52.760
dobbiamo comunque rieseguire manualmente il comando di compilazione.

00:52.760 --> 00:54.730
Per ovviare a questo problema, è possibile

00:54.730 --> 00:56.620
attivare la modalità di osservazione.

00:56.620 --> 01:01.160
Ciò significa che possiamo dire a TypeScript di osservare un file e ogni volta

01:01.160 --> 01:04.980
che questo file viene modificato, TypeScript lo ricompila.

01:04.980 --> 01:07.260
Quindi, per questo possiamo eseguire

01:07.260 --> 01:10.560
lo stesso comando, ma ora aggiungiamo --watch

01:10.560 --> 01:14.010
alla fine, o semplicemente -w.

01:14.010 --> 01:17.950
Se lo facciamo, siamo in modalità di controllo su quel file e ora,

01:17.950 --> 01:20.940
ogni volta che modifichiamo qualcosa e lo salviamo,

01:20.940 --> 01:22.120
in modo che anche il

01:22.120 --> 01:25.610
file sul disco cambi tecnicamente, vediamo che questo ricompila

01:25.610 --> 01:28.773
automaticamente e, naturalmente, questo significa

01:28.773 --> 01:30.260
anche che se facciamo qualcosa

01:30.260 --> 01:32.860
che non è consentito, come per esempio riassegnare

01:32.860 --> 01:37.790
a una costante e poi un tipo sbagliato.

01:37.790 --> 01:39.320
Ogni volta che proviamo a farlo,

01:39.320 --> 01:40.940
ovviamente, tutto si ricompila,

01:40.940 --> 01:43.850
ma poi, proprio come se eseguissimo manualmente il comando,

01:43.850 --> 01:46.290
vediamo l'errore di compilazione qui sotto.

01:46.290 --> 01:49.510
Quindi, la modalità orologio è già un grande miglioramento.

01:49.510 --> 01:52.540
L'aspetto negativo è che dobbiamo ancora indirizzare

01:52.540 --> 01:55.180
specificamente questo file qui.

01:55.180 --> 01:56.700
Al momento, naturalmente,

01:56.700 --> 01:58.980
questo è l'unico file con cui stiamo lavorando,

01:58.980 --> 02:00.940
ma in genere nei progetti più grandi

02:00.940 --> 02:02.973
non è necessariamente così.
