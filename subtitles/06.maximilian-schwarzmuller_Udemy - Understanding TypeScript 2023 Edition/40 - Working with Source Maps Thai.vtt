WEBVTT

00:02.240 --> 00:06.560
ผู้สอน: SourceMap ช่วยเราในการแก้ไขจุดบกพร่องและการพัฒนา

00:06.560 --> 00:09.540
ดังนั้นเพื่อแสดงสิ่งนี้ให้ฉันรวบรวมทุกอย่างโดยไม่มีการตั้งค่า

00:09.540 --> 00:12.000
sourceMap

00:12.000 --> 00:14.530
หากตอนนี้เราไปที่เบราว์เซอร์และเราต้องการทำความเข้าใจว่าโค้ดของเราทำอะไร

00:14.530 --> 00:17.420
เราสามารถไปที่แท็บแหล่งที่มาที่นี่ในเครื่องมือสำหรับนักพัฒนา

00:17.420 --> 00:21.620
และเราจะพบไฟล์ JavaScript ของเราที่นั่น

00:21.620 --> 00:23.060
ตอนนี้เราสามารถดำดิ่งลงไปในไฟล์เหล่านี้ได้

00:23.060 --> 00:25.090
และสิ่งที่ดีคือไฟล์เหล่านี้สามารถอ่านได้สำหรับเรา

00:25.090 --> 00:30.940
ซึ่งแน่นอนว่ามนุษย์มีโค้ด JavaScript อยู่ในตอนท้าย

00:30.940 --> 00:35.200
ตอนนี้เป็นเรื่องที่ดี แต่ถ้าเรามีโค้ด TypeScript ที่ซับซ้อนกว่านี้

00:35.200 --> 00:38.940
และเราต้องการดีบักโค้ด TypeScript ของเรา ไม่ใช่โค้ด

00:38.940 --> 00:41.640
JavaScript ที่คอมไพล์แล้ว

00:41.640 --> 00:43.060
กล่าวอีกนัยหนึ่ง คงจะดีถ้าเราเห็นไฟล์

00:43.060 --> 00:47.180
TypeScript ที่นี่ ไม่ใช่ไฟล์ JavaScript

00:47.180 --> 00:50.000
ด้วยตัวเลือก sourceMap คุณสามารถไปที่นั่นได้

00:50.000 --> 00:56.950
หากคุณตั้งค่านี้เป็น true และรันคำสั่ง tsc อีกครั้ง คุณจะเห็นว่าเราได้รับสิ่งเหล่านี้

00:56.950 --> 00:56.950
เจส, . ไฟล์แผนที่ถูกสร้างขึ้นด้วย

00:58.810 --> 01:01.540
ตอนนี้ถ้าเราดูพวกเขา มันเป็นไฟล์ที่ค่อนข้างแปลก

01:01.540 --> 01:10.170
แต่สิ่งที่พวกเขาทำคือทำหน้าที่เป็นสะพานเชื่อมซึ่งเบราว์เซอร์สมัยใหม่เข้าใจและเครื่องมือสำหรับนักพัฒนาที่นั่นเพื่อเชื่อมต่อไฟล์

01:10.170 --> 01:13.410
JavaScript กับไฟล์อินพุต

01:13.410 --> 01:17.440
ด้วยไฟล์เหล่านี้ที่สร้างขึ้นหากฉันโหลดซ้ำที่นี่ คุณเห็นในแท็บแหล่งที่มา

01:17.440 --> 01:20.320
ตอนนี้เราไม่ได้มีแค่ไฟล์ JavaScript ของเรา เรายังเห็นไฟล์

01:20.320 --> 01:23.497
TypeScript ของเราที่นั่นด้วย

01:23.497 --> 01:27.230
และเรายังสามารถวางเบรกพอยต์ในไฟล์ TypeScript และถ้าฉันคลิกที่ปุ่ม

01:27.230 --> 01:29.320
เช่น ตอนนี้ปุ่มจะหยุดชั่วคราวในไฟล์

01:29.320 --> 01:31.650
TypeScript

01:31.650 --> 01:34.720
ซึ่งแน่นอนว่าสะดวกสุดๆ

01:34.720 --> 01:37.670
เพราะนั่นทำให้กระบวนการดีบั๊กของเราก้าวไปอีกขั้น

01:37.670 --> 01:40.260
เนื่องจากเราสามารถทำงานโดยตรงในไฟล์อินพุตของเราโดยพื้นฐานแล้ว

01:40.260 --> 01:45.670
ในไฟล์ TypeScript แทนไฟล์ JavaScript

01:45.670 --> 01:48.010
อย่างไรก็ตาม ตอนนี้ฉันจะแสดงความคิดเห็นที่นี่เพราะเรามีโครงการที่ค่อนข้างเรียบง่ายที่นี่

01:48.010 --> 01:53.580
และฉันไม่ต้องการให้มีเพิ่มเติม

01:53.580 --> 01:53.580
ไฟล์แผนที่อยู่แถวนี้

01:53.580 --> 01:57.803
แต่สิ่งนี้มีประโยชน์มากในโครงการเพราะช่วยลดความยุ่งยากในการดีบัก
