WEBVTT

00:02.290 --> 00:03.280
Eğitmen: Şimdi Node

00:03.280 --> 00:06.110
typescript uygulamamızla başlayalım.

00:06.110 --> 00:08.750
Şimdi, webpack ve benzeri karmaşık bir kuruluma

00:08.750 --> 00:11.170
ihtiyacımız olduğunu düşünebilirsiniz,

00:11.170 --> 00:12.410
ancak aslında yok.

00:12.410 --> 00:16.270
Dosyalarımızı derlemek için tsc komutunu kullanacağız.

00:16.270 --> 00:18.160
Ve sonra, derlenmiş dosyalarımızı çalıştırmak

00:18.160 --> 00:19.890
için node komutunu kullanabiliriz.

00:19.890 --> 00:21.700
Burada ihtiyacımız olan tek şey bu.

00:21.700 --> 00:25.960
Yine de, burada npm init ile bir proje kuracağım, böylece bir paket

00:25.960 --> 00:28.810
elde edeceğiz. json dosyası çünkü burada normal

00:28.810 --> 00:32.250
bir Node uygulaması oluşturacağımız için Express gibi bazı üçüncü

00:32.250 --> 00:36.240
parti paketleri yükleyeceğiz. js.

00:36.240 --> 00:38.470
Ayrıca geliştirme sürecimizi basitleştirecek

00:38.470 --> 00:40.950
ekstra bir araç daha yüklemek istiyorum.

00:40.950 --> 00:44.630
Bu yüzden npm init'i istediğiniz herhangi bir boş klasörde çalıştırın.

00:44.630 --> 00:48.190
İsterseniz burada tüm varsayılan ayarları onaylayabilirsiniz ve sonrasında

00:48.190 --> 00:50.540
bir paketiniz olacaktır. json dosyası aşağıdaki

00:50.540 --> 00:52.750
gibi görünmelidir.

00:52.750 --> 00:56.210
Şimdi, bu projeyi bir typescript projesi olarak başlatmak için

00:56.210 --> 00:59.390
tsc --init komutunu da çalıştırın, böylece bu tsconfig'i

00:59.390 --> 01:01.860
elde edersiniz. json dosyasını artık

01:01.860 --> 01:04.313
gereksinimlerinizde bulabilirsiniz.

01:05.770 --> 01:09.020
Ve işte, yapmak istediğim ilk ayarlamayı yaptım bile.

01:09.020 --> 01:13.300
Buradaki hedef, kullandığınız node sürümüne bağlı olarak örneğin es2018

01:13.300 --> 01:16.090
olarak kolayca ayarlanabilir, ancak en son sürümü

01:16.090 --> 01:17.750
kullanıyorsanız, bu modern

01:17.750 --> 01:19.630
JavaScript sözdizimi kesinlikle

01:19.630 --> 01:21.380
desteklenmelidir.

01:21.380 --> 01:24.220
Modül commonjs'de kalabilir, ancak daha sonra

01:24.220 --> 01:27.460
buraya moduleResolution eklemek ve bunu node olarak

01:27.460 --> 01:29.010
ayarlamak istiyorum.

01:29.010 --> 01:33.350
Bu basitçe typescript'e farklı dosyalarınızın ve içe aktarmalarınızın birlikte

01:33.350 --> 01:35.483
nasıl çalışacağını söyler.

01:36.410 --> 01:37.640
Ve her şeyin doğru çalıştığından

01:37.640 --> 01:40.020
emin olmak için bunu node olarak ayarlamamız gerekir.

01:40.020 --> 01:42.470
Ayrıca outDir'imi buraya ayarlayacağım, bunu

01:42.470 --> 01:44.790
yorumlayıp dist olarak ayarlayacağım ve rootDir'imi

01:44.790 --> 01:46.990
src olarak ayarlayacağım çünkü typescript

01:46.990 --> 01:49.600
kaynak kodumu ayırmak istiyorum.

01:49.600 --> 01:50.700
Ve sonra node yardımıyla

01:50.700 --> 01:53.170
çalıştırabileceğimiz gerçek JavaScript

01:53.170 --> 01:55.733
dosyaları olacak çıktı.

01:56.820 --> 01:58.850
Bunun dışında, katı moddan memnunum, ancak elbette

01:58.850 --> 02:00.710
tüm bunları kişisel ihtiyaçlarınıza ve beğenilerinize

02:00.710 --> 02:03.030
göre ayarlayabilirsiniz.

02:03.030 --> 02:06.320
Ne de olsa bu kurs boyunca bu konuda her şeyi öğrendiniz.

02:06.320 --> 02:08.830
Ve bununla birlikte, bu yapılandırmayı kaydedebiliriz.

02:08.830 --> 02:11.070
Bu arada bu çok temel başlangıç kurulumunu

02:11.070 --> 02:12.460
da ekte bulacaksınız.

02:12.460 --> 02:14.120
Bu yapılandırmayı kaydedebilirsiniz.

02:14.120 --> 02:16.170
Ayrıca kaynak kodumuzu, yani typescript

02:16.170 --> 02:18.130
kaynak kodumuzu yazacağımız bir

02:18.130 --> 02:20.230
src klasörü oluşturacağım.

02:20.230 --> 02:23.020
İşte şimdi bu kısma dalmak istiyorum.

02:23.020 --> 02:26.370
Uygulamamızı şimdi src klasöründeki typescript

02:26.370 --> 02:27.960
ile oluşturacağız.

02:27.960 --> 02:30.200
Basit bir web sunucusu oluşturacağımızdan ve Express'i

02:30.200 --> 02:32.920
kullanmak istediğimizden. js orada, öncelikle

02:32.920 --> 02:36.120
bazı bağımlılıkları buraya yükleyeceğim.

02:36.120 --> 02:38.440
npm install --save ile, Node için Express

02:38.440 --> 02:41.040
çatısı olan express'i buraya yüklemek

02:41.040 --> 02:44.100
istiyorum. js'ye elbette her zaman ihtiyacınız

02:44.100 --> 02:45.680
olmaz, ancak burada bir Node Express

02:45.680 --> 02:48.440
uygulaması oluşturmak istiyorum.

02:48.440 --> 02:51.500
Ve gelen istek gövdelerini ayrıştırmamıza yardımcı

02:51.500 --> 02:54.403
olan body-parser paketini yükleyecektir.

02:55.290 --> 02:58.180
Üretim bağımlılıklarım şimdilik bu kadar.

02:58.180 --> 03:00.110
Daha sonra daha fazlasını ekleyebiliriz.

03:00.110 --> 03:01.523
Enter tuşuna basalım.

03:02.960 --> 03:04.120
Ve bu yüklendikten

03:04.120 --> 03:07.540
sonra, geliştirme bağımlılıklarına bir göz atalım.

03:07.540 --> 03:11.450
Bunları npm install --save-dev ile yükleyeceğim ve orada, Node ile

03:11.450 --> 03:13.330
bir dosyayı çalıştırmamıza izin

03:13.330 --> 03:16.340
veren, ancak daha sonra dosyayı ve dosyanın bulunduğu

03:16.340 --> 03:18.210
klasörü ve tüm alt klasörleri değişiklikler

03:18.210 --> 03:19.820
için izleyen bir araç olan modemon'u

03:19.820 --> 03:22.690
yüklemek istiyorum.

03:22.690 --> 03:24.050
Bir dosya değiştiğinde, Node

03:24.050 --> 03:26.030
sunucusunu yeniden başlatacaktır.

03:26.030 --> 03:27.620
Bu, kaynak kodunu her değiştirdiğimizde

03:27.620 --> 03:29.510
Node uygulama sunucumuzu otomatik olarak

03:29.510 --> 03:31.490
yeniden başlatacağı için geliştirmeyi

03:31.490 --> 03:33.500
hızlandıracaktır.

03:33.500 --> 03:36.180
Kod değiştiğinde sunucuyu yeniden başlatmamız gerekiyor

03:36.180 --> 03:39.430
çünkü aksi takdirde sunucumuz hala eski kodla çalışıyor, ancak manuel

03:39.430 --> 03:41.340
olarak yeniden başlatmak can sıkıcı, bu

03:41.340 --> 03:44.190
yüzden bunu nodemon ile hızlandıramayız.

03:44.190 --> 03:47.323
Ve şu an için, aslında hepsi bu.

03:49.290 --> 03:50.340
Şimdi enter tuşuna basalım

03:50.340 --> 03:52.360
ve bu geliştirme bağımlılığını yükleyelim.

03:52.360 --> 03:54.760
Bu kursta ihtiyacımız olan son şey bu olmayacak,

03:54.760 --> 03:56.660
ancak şu an için sorun yok.

03:56.660 --> 03:58.830
O yüzden bunun bitmesini bekleyelim.

03:58.830 --> 04:00.130
Kurulum tamamlandı ve şimdi

04:00.130 --> 04:01.450
çok temel bir Node Express

04:01.450 --> 04:04.773
uygulaması yazmaya ve oluşturmaya başlayalım.
