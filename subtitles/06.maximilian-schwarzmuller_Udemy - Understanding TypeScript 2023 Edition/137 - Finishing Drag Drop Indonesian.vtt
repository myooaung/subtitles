WEBVTT

00:02.300 --> 00:03.133
Instruktur: Jadi tentu

00:03.133 --> 00:05.250
saja, tujuan kita bukan hanya mencatat ID itu.

00:05.250 --> 00:09.340
Malahan, saya ingin mengekstrak ID proyek di sini di

00:09.340 --> 00:11.110
log, di drop handler.

00:11.110 --> 00:15.410
Dan dengan itu, tujuannya adalah untuk benar-benar memindahkan proyek

00:15.410 --> 00:18.910
sekarang, atau mengubah status proyek, tepatnya.

00:18.910 --> 00:21.400
Sekarang, bagaimana kita bisa melakukan itu?

00:21.400 --> 00:26.063
Nah, dalam state kita, saya akan mengatakan, dalam state proyek kita,

00:26.950 --> 00:30.000
di mana saat ini kita memiliki metode addProject,

00:30.000 --> 00:33.160
kita juga memerlukan metode moveProject.

00:33.160 --> 00:35.060
Dan tujuan dari metode ini pada

00:35.060 --> 00:38.550
dasarnya adalah untuk mengalihkan status proyek.

00:38.550 --> 00:40.180
Tentu saja, Anda juga bisa menamainya,

00:40.180 --> 00:42.970
SwitchProjectStatus, atau apa pun yang Anda inginkan, tetapi

00:42.970 --> 00:44.390
karena kita melakukan drag-and-drop,

00:44.390 --> 00:46.440
saya menyebutnya MoveProject.

00:46.440 --> 00:49.470
Jadi, dalam MoveProject, tujuannya adalah untuk

00:49.470 --> 00:53.860
memindahkan proyek dari daftar yang ada saat ini, ke daftar baru.

00:53.860 --> 00:55.460
Sekarang, ini tidak selalu berarti

00:55.460 --> 00:58.030
bahwa kita hanya perlu membalik status proyek dari

00:58.030 --> 01:00.480
aktif ke selesai dan sebaliknya.

01:00.480 --> 01:02.870
Lagi pula, pengguna bisa saja melakukan ini,

01:02.870 --> 01:05.060
seret-dan-lepas di kotak yang sama.

01:05.060 --> 01:07.120
Jadi, jika kita kemudian selalu memicu

01:07.120 --> 01:10.680
metode yang mengalihkan status, kita akan memiliki efek yang tidak

01:10.680 --> 01:12.690
terduga di mana menjatuhkan di kotak yang

01:12.690 --> 01:15.754
sama masih mengalihkan proyek ke kotak lainnya.

01:15.754 --> 01:18.972
Jadi sebagai gantinya, dalam MoveProject, kita benar-benar harus

01:18.972 --> 01:23.402
mengetahui proyek mana yang akan dipindahkan, dan kotak mana yang menjadi kotak baru.

01:23.402 --> 01:24.235
Jadi, status mana yang status baru.

01:25.940 --> 01:28.190
Jadi, saya berharap mendapatkan ID proyek

01:28.190 --> 01:31.410
di sini, yang seharusnya berupa string, dan status baru.

01:31.410 --> 01:34.130
Dan status baru di sini, tentu saja,

01:34.130 --> 01:36.410
bisa bertipe ProjectStatus.

01:38.580 --> 01:40.803
Dan kemudian di dalam MoveProject,

01:41.692 --> 01:44.320
saya ingin menemukan proyek dengan ID

01:44.320 --> 01:46.830
itu dalam array proyek saya.

01:46.830 --> 01:49.090
Jadi di sini, dalam susunan proyek

01:49.090 --> 01:51.680
ini, dan kemudian membalik statusnya.

01:51.680 --> 01:54.580
Jadi untuk itu kita bisa menjangkau proyek

01:54.580 --> 01:57.450
ini, menemukan proyek di sana, dan metode find

01:57.450 --> 01:59.440
sangat cocok untuk itu.

01:59.440 --> 02:01.210
Ini berjalan pada setiap elemen dalam larik ini,

02:01.210 --> 02:02.680
memberi kita akses ke setiap elemen, dan

02:02.680 --> 02:03.970
kemudian kita harus mengembalikan

02:03.970 --> 02:05.770
nilai true jika itu adalah elemen yang kita cari.

02:05.770 --> 02:07.150
Dan saya ingin mengembalikan

02:07.150 --> 02:09.860
true jika ID elemen yang sedang kita lihat sama

02:09.860 --> 02:12.830
dengan projectId yang saya dapatkan sebagai argumen

02:12.830 --> 02:15.420
di sini, maka kita memiliki elemen yang harus

02:15.420 --> 02:17.470
berubah, dan di sana pada elemen ini,

02:17.470 --> 02:21.070
kita hanya perlu mengubah status ke status baru.

02:21.070 --> 02:22.653
Sekarang ini mungkin null, jadi

02:23.490 --> 02:26.490
di sini saya akan memanggil ini, project, disimpan sebagai

02:26.490 --> 02:28.080
konstanta yang sekarang disebut

02:28.080 --> 02:30.550
project, dan periksa apakah project ada.

02:30.550 --> 02:34.160
Dan jika ada, maka saya ingin menetapkan status

02:34.160 --> 02:39.160
sama dengan status baru di sini. Sesederhana itu.

02:39.250 --> 02:42.900
Ini sudah akan mengubah objek dalam larik dan pada dasarnya

02:42.900 --> 02:45.643
kita sudah selesai dengan itu.

02:46.970 --> 02:50.010
Tentu saja, bagaimanapun juga, kami belum sepenuhnya selesai.

02:50.010 --> 02:52.250
Kita sekarang perlu memberi tahu semua orang, semua

02:52.250 --> 02:56.040
pendengar kita, bahwa ada sesuatu yang berubah tentang proyek kita, dan mereka

02:56.040 --> 02:57.870
harus melakukan render ulang.

02:57.870 --> 02:59.980
Jadi kita harus melalui semua pendengar lagi,

02:59.980 --> 03:01.910
dan karena kita akan mengulang kode di sini,

03:01.910 --> 03:04.080
saya akan mengalihdayakan ini dalam metode

03:04.080 --> 03:07.920
privat baru, updateListeners bisa menjadi nama yang layak, dan di sana saya

03:07.920 --> 03:10.490
akan memiliki loop for ini, di mana kita akan melalui

03:10.490 --> 03:13.660
semua pendengar dan kemudian melakukan sesuatu.

03:13.660 --> 03:15.890
Dan kemudian saya akan memanggil updateListeners

03:15.890 --> 03:17.430
ini baik dari addProject,

03:17.430 --> 03:20.890
dan juga dari metode moveProject.

03:20.890 --> 03:23.033
Di sini, hanya jika kita memang mengubah sesuatu.

03:24.350 --> 03:26.100
Jadi, sekarang semua pendengar akan terpicu.

03:26.100 --> 03:28.980
Dan jika Anda ingat, pendengar di aplikasi kita di sini,

03:28.980 --> 03:33.010
pada dasarnya mengarah ke daftar untuk me-render ulang item-itemnya.

03:33.010 --> 03:35.310
Jadi, itu akan berfungsi persis sebagaimana mestinya,

03:35.310 --> 03:37.940
atau harus berfungsi persis sebagaimana mestinya.

03:37.940 --> 03:40.640
Jadi sekarang kita memiliki metode moveProject, di bawah

03:40.640 --> 03:43.730
sana di drop handler, sekarang kita bisa menggunakan ini.

03:43.730 --> 03:46.390
Di sana kita sekarang bisa menggunakan projectState,

03:46.390 --> 03:49.670
memanggil moveProject, dan memasukkan ID proyek, dan sekarang

03:49.670 --> 03:52.296
status proyek yang baru.

03:52.296 --> 03:54.190
Dan status proyek baru tergantung

03:54.190 --> 03:57.880
pada daftar di mana kita menjatuhkan ini.

03:57.880 --> 03:59.630
Jadi, saya ingin autobind drop

04:00.760 --> 04:01.790
handler saya, sehingga

04:01.790 --> 04:04.050
kata kunci ini di drop handler mengacu

04:04.050 --> 04:06.020
pada kelas di sekitarnya, dan kelas

04:06.020 --> 04:08.500
di sekitarnya ini adalah daftar proyek yang,

04:08.500 --> 04:10.320
jika Anda ingat, akan memiliki

04:10.320 --> 04:13.020
properti tipe di sini, kami menyimpannya di sini,

04:13.020 --> 04:15.820
kami memiliki tipe, properti, dan itu aktif atau

04:15.820 --> 04:18.120
selesai.

04:18.120 --> 04:21.000
Jadi sekarang kita hanya perlu menerjemahkan aktif atau

04:21.000 --> 04:22.640
selesai ke nilai enum kita.

04:22.640 --> 04:24.850
Jadi di sini, saya lulus dalam hal ini. dan saya memeriksa

04:24.850 --> 04:27.230
apakah itu sama dengan aktif, dalam hal ini,

04:27.230 --> 04:31.580
kami meneruskan ProjectStatus. Active, sebagai status baru

04:31.580 --> 04:33.750
proyek, karena itu adalah

04:33.750 --> 04:36.190
status daftar yang kita pindahkan

04:36.190 --> 04:38.160
proyeknya.

04:38.160 --> 04:41.733
Jika tidak, kita mengoper ProjectStatus. Selesai, dan izinkan saya memformat

04:42.660 --> 04:45.423
ulang agar lebih mudah dibaca.

04:46.730 --> 04:48.110
Dengan itu, mari kita mencobanya.

04:48.110 --> 04:52.440
Mari kita simpan semua, dan tambahkan proyek baru di sini, dan sekarang seret

04:52.440 --> 04:56.620
ke proyek yang sudah selesai dan itu beralih, dan sama dan jika saya memindahkannya

04:56.620 --> 04:58.270
kembali.

04:58.270 --> 05:02.320
Jika saya melepaskan proyek aktif di sini, tidak ada yang berubah.

05:02.320 --> 05:04.400
Sekarang Anda akan melihat, jika Anda memeriksa

05:04.400 --> 05:08.100
DOM, bahwa secara teknis itu me-render ulang, yang mungkin tidak ideal,

05:08.100 --> 05:11.450
jadi kita bisa memikirkan untuk datang dengan beberapa solusi yang

05:11.450 --> 05:15.290
memeriksa apakah status benar-benar berubah, dan jika tidak, kita tidak

05:15.290 --> 05:17.400
memperbarui, itu sesuatu yang bisa kita

05:17.400 --> 05:18.890
lakukan.

05:18.890 --> 05:22.620
Tetapi dari perspektif UI, ini memperbarui sebagaimana mestinya.

05:22.620 --> 05:24.570
Sekarang mari kita tambahkan proyek

05:24.570 --> 05:27.120
kedua dan lihat apakah itu menghancurkan sesuatu,

05:27.120 --> 05:29.260
jika semuanya masih berfungsi, dan saya

05:29.260 --> 05:31.750
akan mengatakan bahwa itu terlihat layak, itu terlihat

05:31.750 --> 05:33.720
cukup bagus bagi saya.

05:33.720 --> 05:37.120
Segala sesuatunya tampak bekerja persis seperti yang seharusnya.

05:37.120 --> 05:40.230
Jadi menyeret dan menjatuhkan berfungsi dengan baik di sini,

05:40.230 --> 05:42.600
tetapi ada satu peningkatan yang saya sebutkan

05:42.600 --> 05:46.305
kembali di status proyek, di moveProject, ketika saya memanggil updateListeners

05:46.305 --> 05:49.470
ini, kita sebenarnya dapat memeriksa apakah kita benar-benar

05:49.470 --> 05:51.920
mengubah status.

05:51.920 --> 05:54.150
Jadi di sini kita dapat memeriksa apakah

05:54.150 --> 05:57.940
proyek, jadi jika kita menemukannya, dan jika kemudian status proyek,

05:57.940 --> 06:00.270
berbeda dari status baru, dan hanya kemudian

06:00.270 --> 06:03.830
kita mengubah status dan memperbarui pendengar.

06:03.830 --> 06:06.060
Jika statusnya sama, kita tidak melakukan

06:06.060 --> 06:09.310
ini dan kita menghindari siklus rerender yang tidak perlu.

06:09.310 --> 06:10.143
Jadi sekarang dengan

06:10.143 --> 06:12.900
itu, jika kita menyimpannya dan kita dengan cepat menambahkan

06:12.900 --> 06:14.790
proyek baru, Anda akan melihat jika saya memeriksa

06:14.790 --> 06:18.190
elemen-elemen di sini dan Anda menonton L-I dan memeriksa apakah ini berkedip,

06:18.190 --> 06:21.800
yang berarti akan me-render ulang, itu tidak berkedip di sini, hanya flash yang dapat

06:21.800 --> 06:24.490
dijatuhkan, kelas yang baru saja kita tambahkan, tetapi L-I

06:24.490 --> 06:27.970
tidak berkedip jika saya jatuhkan di kotak yang sama, itu hanya berkedip jika saya

06:27.970 --> 06:30.990
memindahkannya ke kotak yang berbeda.

06:30.990 --> 06:34.460
Dan itu harus berkedip karena kita benar-benar memindahkannya.

06:34.460 --> 06:36.180
Jadi sekarang kita mengoptimalkan ini

06:36.180 --> 06:39.050
sedikit, dan sekarang kita telah bekerja drag-and-drop di sini,

06:39.050 --> 06:42.223
semua dibangun dan didukung dengan dan oleh TypeScript.
