WEBVTT

1
00:00:02.110 --> 00:00:04.160
<v Instructor>So in this little dummy application,</v>

2
00:00:04.160 --> 00:00:07.390
I also want to ensure that we can delete to do's

3
00:00:07.390 --> 00:00:08.500
and to implement that,

4
00:00:08.500 --> 00:00:11.610
let's make sure that in the to do list, in our list item,

5
00:00:11.610 --> 00:00:14.220
we don't just have to do text,

6
00:00:14.220 --> 00:00:17.640
but that we maybe have that inside of a span

7
00:00:17.640 --> 00:00:20.763
and then besides that in the same list item,

8
00:00:21.620 --> 00:00:23.140
we have a button as well,

9
00:00:23.140 --> 00:00:26.520
a button where we say delete just like that

10
00:00:26.520 --> 00:00:28.120
and when that button is pressed,

11
00:00:28.120 --> 00:00:31.368
I will want to delete this to do so on click here,

12
00:00:31.368 --> 00:00:34.900
I want to do something that gets rid of that to do

13
00:00:34.900 --> 00:00:38.040
Now since we managed to do is here in the app component,

14
00:00:38.040 --> 00:00:42.100
we need a new function here to do delete handler,

15
00:00:42.100 --> 00:00:44.960
which is triggered and which then clears this to do

16
00:00:44.960 --> 00:00:46.440
from that list.

17
00:00:46.440 --> 00:00:47.700
So here as our argument,

18
00:00:47.700 --> 00:00:50.690
I expect to get the to do ID which is a string

19
00:00:50.690 --> 00:00:53.340
because in our to do model and ID is a string

20
00:00:55.650 --> 00:00:59.010
and then in there we again call set to do's,

21
00:00:59.010 --> 00:01:01.260
but now to remove a to do.

22
00:01:01.260 --> 00:01:03.200
For this all again use this function forum

23
00:01:03.200 --> 00:01:04.750
because we have a state update,

24
00:01:04.750 --> 00:01:06.940
which depends on the previous state

25
00:01:06.940 --> 00:01:09.460
and in there I will return a new array.

26
00:01:09.460 --> 00:01:13.520
and that will basically be my old array but filtered.

27
00:01:13.520 --> 00:01:16.230
Filter is a built in method in JavaScript,

28
00:01:16.230 --> 00:01:18.020
which returns a new array of data

29
00:01:18.020 --> 00:01:21.270
and this new array will basically be the old array

30
00:01:21.270 --> 00:01:24.490
minus anything you filter out.

31
00:01:24.490 --> 00:01:26.810
Filter takes a function which is executed

32
00:01:26.810 --> 00:01:28.590
on every item in the old array

33
00:01:28.590 --> 00:01:31.390
and when that function you pass and returns true,

34
00:01:31.390 --> 00:01:34.160
the item is kept and added to the new array

35
00:01:34.160 --> 00:01:37.330
if it returns false, it will be dropped.

36
00:01:37.330 --> 00:01:39.820
So it will run on all the to do's we already have

37
00:01:39.820 --> 00:01:42.810
and now we need to have some logic that returns false

38
00:01:42.810 --> 00:01:45.330
if the to do ID we're looking at

39
00:01:45.330 --> 00:01:48.120
is equal to the to do ID we're getting here.

40
00:01:48.120 --> 00:01:52.100
So that if the to do's are equal, it's getting dropped.

41
00:01:52.100 --> 00:01:53.570
So we need false here not true

42
00:01:53.570 --> 00:01:55.560
and hence let's inverse this in the next

43
00:01:55.560 --> 00:01:57.430
and add an exclamation mark.

44
00:01:57.430 --> 00:02:00.620
With that we keep all to do's but the to do

45
00:02:00.620 --> 00:02:03.430
where the ID is equal to the ID we're getting here

46
00:02:03.430 --> 00:02:05.130
because that is the ID we wanna to drop

47
00:02:05.130 --> 00:02:07.833
because it is the to do we wanna to delete.

48
00:02:08.710 --> 00:02:11.499
Now we need to make sure that to do delete handler

49
00:02:11.499 --> 00:02:14.610
can be called from inside the to do list

50
00:02:14.610 --> 00:02:16.370
and again we can use props for this

51
00:02:16.370 --> 00:02:19.580
and add the on Delete to do prop here

52
00:02:19.580 --> 00:02:22.520
and point at the to do delete handler

53
00:02:22.520 --> 00:02:25.100
but of course TypeScript isn't too happy about that

54
00:02:25.100 --> 00:02:27.240
because on the to do list props,

55
00:02:27.240 --> 00:02:30.000
we're not saying anything about this

56
00:02:30.000 --> 00:02:33.130
on delete to do prop here.

57
00:02:33.130 --> 00:02:34.350
Let's change this.

58
00:02:34.350 --> 00:02:38.730
In to do list TSX let's add on delete to do as a prop

59
00:02:38.730 --> 00:02:40.530
and this will now point at a function

60
00:02:40.530 --> 00:02:42.218
so we need a function type here,

61
00:02:42.218 --> 00:02:45.380
a function which eventually returns nothing.

62
00:02:45.380 --> 00:02:48.150
So void but which gets the idea

63
00:02:48.150 --> 00:02:51.380
of the to be deleted to do as a parameter.

64
00:02:51.380 --> 00:02:54.230
Now the error in the app component is gone

65
00:02:54.230 --> 00:02:55.380
and now as an adjustment,

66
00:02:55.380 --> 00:02:57.210
we need to make sure that this function

67
00:02:57.210 --> 00:03:00.320
is getting called when this button is getting clicked.

68
00:03:00.320 --> 00:03:04.100
Production point at props on delete to do

69
00:03:04.100 --> 00:03:06.990
and not execute this but instead just point at it

70
00:03:06.990 --> 00:03:09.650
so that this function we're receiving on this prop

71
00:03:09.650 --> 00:03:12.930
will be called when I click on this button occurs.

72
00:03:12.930 --> 00:03:15.203
The only problem was this approach,

73
00:03:15.203 --> 00:03:19.460
is that here on this function,

74
00:03:19.460 --> 00:03:22.970
we expect to get the to do ID as a parameter.

75
00:03:22.970 --> 00:03:26.620
Now to ensure that this works,

76
00:03:26.620 --> 00:03:28.740
we can simply use bind here,

77
00:03:28.740 --> 00:03:32.010
I don't care about this keyword in to to be called functions

78
00:03:32.010 --> 00:03:35.920
or set it to know but the second argument we pass to bind,

79
00:03:35.920 --> 00:03:39.570
will be the first parameter received in on delete to do

80
00:03:39.570 --> 00:03:43.743
and that should be the idea of the to do so to do.ID here.

81
00:03:44.620 --> 00:03:47.440
With that it should work we now save this

82
00:03:47.440 --> 00:03:52.440
and I add finish the course and finish it in one month.

83
00:03:55.180 --> 00:03:57.940
If I click on Delete here, that's gone and that's gone

84
00:03:57.940 --> 00:03:59.700
so this now all works.

85
00:03:59.700 --> 00:04:01.480
Now I just want to polish this,

86
00:04:01.480 --> 00:04:03.690
add a little bit of a nicer styling to it

87
00:04:03.690 --> 00:04:07.333
and thereafter we're done with this basic application here.

