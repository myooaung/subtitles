WEBVTT

00:02.180 --> 00:03.710
-: Do tego dołączony jest projekt

00:03.710 --> 00:06.590
startowy, jak widziałeś go wielokrotnie w kursie

00:06.590 --> 00:07.640
już, bardzo trywialny

00:07.640 --> 00:09.140
projekt z zasadniczo pustym

00:09.140 --> 00:14.400
indeksem. html i pustą aplikację.

00:14.400 --> 00:14.400
ts

00:14.400 --> 00:17.140
i tutaj zbudujemy małą aplikację

00:17.140 --> 00:20.350
demo, mały projekt.

00:20.350 --> 00:24.705
Teraz aplikacja, którą zamierzamy zbudować nie będzie zbyt skomplikowana,

00:24.705 --> 00:28.080
ale będzie to miła aplikacja, w której zasadniczo

00:28.080 --> 00:31.480
będziemy mogli zarządzać kilkoma projektami, gdzie

00:31.480 --> 00:35.690
projekt zasadniczo jest celem, który można powiedzieć, że mamy

00:35.690 --> 00:37.582
listy projektów i będziemy mieli

00:37.582 --> 00:43.270
dwie listy projektów aktywną listę i skończoną listę i będziemy mogli przeciągać i

00:43.270 --> 00:46.210
upuszczać elementy z jednej listy do drugiej

00:46.210 --> 00:49.530
i tego typu rzeczy.

00:49.530 --> 00:52.734
Oczywiście sama aplikacja będzie fajna, ale najważniejsze

00:52.734 --> 00:54.619
jest to, że pozwoli nam przećwiczyć

00:54.619 --> 00:56.570
wiele rzeczy, których nauczyliśmy

00:56.570 --> 00:59.160
się do tej pory i to jest oczywiście celem

00:59.160 --> 01:02.240
tego modułu.

01:02.240 --> 01:04.210
Teraz również jedna ważna uwaga

01:04.210 --> 01:05.710
dla tego modułu zamierzam

01:05.710 --> 01:07.900
napisać cały kod w jednym pliku w tej

01:07.900 --> 01:12.010
jednej jedynej aplikacji. ts i dlatego stanie

01:12.010 --> 01:17.000
się to bardzo dużym plikiem.

01:17.000 --> 01:19.420
W module po tym module zanurkuję w ten

01:19.420 --> 01:21.400
problem i pokażę, jak TypeSript

01:21.400 --> 01:24.660
pozwala nam podzielić ten plik, ale na razie, ponieważ

01:24.660 --> 01:27.030
jeszcze tego nie wiemy i jak dotąd nie

01:27.030 --> 01:29.680
mieliśmy problemów z rozmiarem, skupmy

01:29.680 --> 01:32.930
się na naszej aplikacji demo.

01:32.930 --> 01:34.710
I w tym celu właściwie zaczniemy

01:34.710 --> 01:37.420
od pracy nad indeksem. plik html.

01:37.420 --> 01:39.100
W załączniku znajdziesz nowy

01:39.100 --> 01:42.430
plik pobierz go i zastąp wszystkie treści w tym indeksie

01:42.430 --> 01:44.650
startowym. html z pobranym

01:44.650 --> 01:46.314
plikiem i zrób to samo dla

01:46.314 --> 01:48.700
aplikacji. css tam nie mamy jeszcze

01:48.700 --> 01:50.360
żadnego pliku po prostu dodajemy

01:50.360 --> 01:52.870
do projektu obok indexu plik, który znajduje się

01:52.870 --> 01:57.010
w załączniku do tego wykładu.

01:57.010 --> 01:57.010
html,

01:57.010 --> 01:59.470
bo tam już zaimportowaliśmy.

01:59.470 --> 02:02.200
Więc co tu się dzieje w tych aktach?

02:02.200 --> 02:04.560
W indeksie. html plik, który importujemy

02:04.560 --> 02:06.900
do aplikacji. plik css dla niektórych

02:06.900 --> 02:10.484
stylizacji i aplikacji. js dla pewnej logiki JavaScript oczywiście nie

02:10.484 --> 02:12.240
będziemy pisać żadnego kodu JavaScript w ten

02:12.240 --> 02:15.589
sposób będziemy pisać kod w aplikacji.

02:15.589 --> 02:15.589
ts,

02:15.589 --> 02:19.658
ale to oczywiście zostanie skompilowane do pliku JavaScript.

02:19.658 --> 02:23.320
Teraz w ciele tego pliku html znajdziesz kilka

02:23.320 --> 02:25.890
znaczników szablonu.

02:25.890 --> 02:28.436
Szablonowe znaczniki są domyślnymi znacznikami

02:28.436 --> 02:30.427
html obsługiwanymi przez nowoczesne

02:30.427 --> 02:34.080
przeglądarki, które pozwalają nam określić pewien kod html, który

02:34.080 --> 02:36.060
nie jest ładowany natychmiast, który

02:36.060 --> 02:37.870
nie jest widoczny natychmiast,

02:37.870 --> 02:40.600
który nie jest renderowany natychmiast, że tak powiem,

02:40.600 --> 02:44.610
ale zamiast tego, do którego można dotrzeć za pomocą JavaScript, a zatem

02:44.610 --> 02:46.310
również za pomocą TypeScript,

02:46.310 --> 02:49.650
aby następnie wyrenderować go, gdy chcemy go wyrenderować,

02:49.650 --> 02:51.911
aby kontrolować go za pomocą JavaScript

02:51.911 --> 02:54.830
i TypeScript i tam widzisz mam formularz z wolnymi wejściami

02:54.830 --> 02:57.500
w zasadzie tytuł, opis i wejście osób, gdzie możemy

02:57.500 --> 03:00.500
zdecydować, jaki jest tytuł naszego projektu, jaki jest

03:00.500 --> 03:05.550
opis naszego projektu i ile osób może być przypisanych do niego lub powinno być przypisanych

03:05.550 --> 03:11.386
do niego, a następnie przycisk dodaj projekt.

03:11.386 --> 03:13.320
Następnie mamy kolejny szablon,

03:13.320 --> 03:15.450
który po prostu przechowuje element

03:15.450 --> 03:18.440
listy, który będzie używany do renderowania pojedynczego

03:18.440 --> 03:20.100
projektu na naszej liście projektów,

03:20.100 --> 03:27.280
czyli ten szablon tutaj zobaczysz, że mam nagłówek z sekcją h2, a następnie nieuporządkowaną listę i rzeczywiście ta

03:27.280 --> 03:30.150
nieuporządkowana lista będzie później zawierała

03:30.150 --> 03:33.988
wiele pojedynczych projektów opartych na tym szablonie, który

03:33.988 --> 03:42.357
będzie renderował dane wprowadzone tutaj poprzez formularz na górze i wszystko zostanie następnie dołączone za pomocą TypeScript do tego

03:42.357 --> 03:45.930
div tutaj z id "app".

03:45.930 --> 03:48.970
Teraz aplikacja. css po prostu przechowuje niektóre

03:48.970 --> 03:50.790
style css możesz oczywiście przejrzeć

03:50.790 --> 03:52.130
to nie będę się skupiał na

03:52.130 --> 03:54.020
tym tutaj ponieważ nie ma to nic wspólnego

03:54.020 --> 03:56.960
z TypeScriptem i teraz naszym zadaniem jest napisanie

03:56.960 --> 04:00.216
jakiegoś kodu TypeScript, który w końcu pobiera cokolwiek

04:00.216 --> 04:03.502
użytkownik wpisze tutaj dobrze, właściwie po pierwsze renderuje

04:03.502 --> 04:08.390
ten formularz następnie pobiera cokolwiek użytkownik wpisze waliduje to co użytkownik

04:08.390 --> 04:11.975
wpisze więc tytuł, opis i ludzie mają prawidłowe wartości słucha

04:11.975 --> 04:15.030
kliknięcia na ten przycisk lub na przesłanie formularza,

04:15.030 --> 04:29.490
aby być precyzyjnym następnie tworzy nowy projekt więc nowy obiekt JavaScript w końcu, który jest przechowywany w jakiejś tablicy prawdopodobnie gdzie ta tablica jest następnie renderowana do tej listy i oczywiście cała lista musi być również dodana

04:29.490 --> 04:36.790
do dom więc to są wszystkie kroki i oczywiście jest to dość dużo kroków.

04:36.790 --> 04:39.580
Teraz, jeśli czujesz się bardzo pewnie, oczywiście zdecydowanie

04:39.580 --> 04:42.900
potraktuj to jako szansę, aby wstrzymać się teraz i spróbować wdrożyć

04:42.900 --> 04:45.080
to na własną rękę, bez względu na to, jak to wygląda

04:45.080 --> 04:48.141
w końcu, że po prostu masz ustawione, gdzie to forum jest widoczne,

04:48.141 --> 04:51.980
gdzie użytkownicy mogą coś tam wprowadzić i gdzie dla każdego projektu, w którym

04:51.980 --> 04:54.295
coś wprowadzisz, renderujesz element listy

04:54.295 --> 04:57.810
w tej liście, która również powinna być widoczna, jeśli osiągniesz

04:57.810 --> 05:00.539
to, to już jest niesamowite, ale oczywiście będziemy

05:00.539 --> 05:06.340
również wdrażać to krok po kroku razem i następnie, gdy to zostanie wdrożone, upewnimy się również, że faktycznie

05:06.340 --> 05:09.037
renderujemy listy narzędzi i możemy przełączać projekty

05:09.037 --> 05:15.440
między tymi listami za pomocą przeciągania i upuszczania i tak dalej.

05:15.440 --> 05:17.993
Tak więc, pierwsze rzeczy choć zacznijmy.
