WEBVTT

00:02.180 --> 00:03.710
-: Dazu finden Sie im Anhang ein

00:03.710 --> 00:06.590
Startprojekt, wie Sie es schon mehrfach im Kurs gesehen

00:06.590 --> 00:07.640
haben, ein sehr triviales

00:07.640 --> 00:09.140
Projekt mit einem im Grunde leeren

00:09.140 --> 00:12.030
Index. html-Datei und eine leere

00:12.030 --> 00:14.400
Anwendung. ts-Datei und hier

00:14.400 --> 00:17.140
werden wir eine kleine Demo-Anwendung,

00:17.140 --> 00:20.350
ein kleines Projekt, erstellen.

00:20.350 --> 00:24.705
Die Anwendung, die wir erstellen werden, wird nicht allzu komplex sein,

00:24.705 --> 00:28.080
aber es wird eine nette Anwendung sein, in der wir im Wesentlichen

00:28.080 --> 00:31.480
in der Lage sein werden, einige Projekte zu verwalten, wobei

00:31.480 --> 00:35.690
ein Projekt im Wesentlichen ein Ziel ist, so dass wir Listen von Projekten

00:35.690 --> 00:37.582
haben werden, und wir werden zwei

00:37.582 --> 00:41.670
Listen von Projekten haben, eine aktive Liste und eine fertige Liste,

00:41.670 --> 00:43.270
und wir werden in der Lage sein,

00:43.270 --> 00:46.210
Elemente von einer Liste zur anderen zu ziehen und

00:46.210 --> 00:49.530
abzulegen und so weiter.

00:49.530 --> 00:52.734
Die Anwendung selbst wird natürlich schön sein,

00:52.734 --> 00:54.619
aber das Wichtigste ist, dass

00:54.619 --> 00:56.570
sie uns ermöglicht, viele der

00:56.570 --> 00:59.160
bisher gelernten Dinge zu üben, und das

00:59.160 --> 01:02.240
ist natürlich das Ziel dieses Moduls.

01:02.240 --> 01:04.210
Nun noch ein wichtiger Hinweis für dieses

01:04.210 --> 01:05.710
Modul: Ich werde den gesamten

01:05.710 --> 01:07.900
Code in einer einzigen Datei in dieser einen

01:07.900 --> 01:12.010
Anwendung schreiben. ts-Datei und diese

01:12.010 --> 01:17.000
wird daher sehr, sehr groß werden.

01:17.000 --> 01:19.420
Im Modul nach diesem Modul werde ich auf dieses

01:19.420 --> 01:21.400
Problem eingehen und Ihnen zeigen, wie

01:21.400 --> 01:24.660
TypeSript es uns ermöglicht, diese Datei aufzuteilen, aber

01:24.660 --> 01:27.030
im Moment, da wir das noch nicht wissen und wir

01:27.030 --> 01:29.680
bisher keine Größenprobleme hatten, sollten wir

01:29.680 --> 01:32.930
uns auf unsere Demo-Anwendung konzentrieren.

01:32.930 --> 01:34.710
Und dafür werden wir zunächst

01:34.710 --> 01:37.420
den Index bearbeiten. html-Datei.

01:37.420 --> 01:39.100
Im Anhang finden Sie eine neue Datei,

01:39.100 --> 01:42.430
die Sie herunterladen und den gesamten Inhalt dieses Startindexes

01:42.430 --> 01:44.650
ersetzen können. html-Datei mit der heruntergeladenen

01:44.650 --> 01:46.314
Datei und machen Sie dasselbe für die

01:46.314 --> 01:48.700
App. css haben wir noch keine

01:48.700 --> 01:50.360
Datei, fügen Sie einfach die

01:50.360 --> 01:52.870
Datei, die Sie im Anhang zu dieser Vorlesung

01:52.870 --> 01:54.410
finden, zu Ihrem Projekt neben

01:54.410 --> 01:57.010
index hinzu. html, denn dort haben

01:57.010 --> 01:59.470
wir bereits importiert.

01:59.470 --> 02:02.200
Was geht also in diesen Dateien vor?

02:02.200 --> 02:04.560
Im Index. html-Datei importieren

02:04.560 --> 02:06.900
wir die Anwendung. css-Datei für das

02:06.900 --> 02:10.484
Styling und die App. js-Datei für einige JavaScript-Logik natürlich

02:10.484 --> 02:12.240
werden wir keine JavaScript-Code wie diese

02:12.240 --> 02:15.589
wir gehen, um Code in app schreiben.

02:15.589 --> 02:15.589
ts,

02:15.589 --> 02:19.658
aber das wird natürlich zu einer JavaScript-Datei kompiliert.

02:19.658 --> 02:23.320
Im Hauptteil der HTML-Datei finden Sie

02:23.320 --> 02:25.890
nun einige Template-Tags.

02:25.890 --> 02:28.436
Template-Tags sind Standard-HTML-Tags, die von

02:28.436 --> 02:30.427
modernen Browsern unterstützt werden

02:30.427 --> 02:34.080
und die es uns ermöglichen, einen HTML-Code zu spezifizieren, der nicht

02:34.080 --> 02:36.060
sofort geladen wird, der nicht sofort

02:36.060 --> 02:37.870
sichtbar ist, der sozusagen nicht

02:37.870 --> 02:40.600
sofort gerendert wird, sondern der stattdessen über

02:40.600 --> 02:44.610
JavaScript und somit auch über TypeScript erreicht werden kann, um ihn dann

02:44.610 --> 02:46.310
zu rendern, wenn wir ihn rendern

02:46.310 --> 02:49.650
wollen, um ihn mit JavaScript und TypeScript zu steuern, und dort

02:49.650 --> 02:51.911
sehen Sie, dass ich ein Formular mit freien

02:51.911 --> 02:54.830
Eingaben habe, im Wesentlichen einen Titel, eine Beschreibung

02:54.830 --> 02:57.500
und eine Personeneingabe, bei der wir entscheiden

02:57.500 --> 03:00.500
können, wie der Titel unseres Projekts lautet, wie die Beschreibung

03:00.500 --> 03:05.550
unseres Projekts lautet und wie viele Personen ihm zugewiesen werden können oder sollten, und

03:05.550 --> 03:11.386
dann die Schaltfläche "Projekt hinzufügen".

03:11.386 --> 03:13.320
Dann haben wir eine andere Vorlage,

03:13.320 --> 03:15.450
die nur ein Listenelement enthält,

03:15.450 --> 03:18.440
das verwendet wird, um ein einzelnes Projekt in unserer

03:18.440 --> 03:20.100
Projektliste zu rendern, die

03:20.100 --> 03:22.360
dann diese Vorlage hier ist. Sie sehen,

03:22.360 --> 03:23.950
dass ich eine Kopfzeile mit

03:23.950 --> 03:25.176
einem h2-Abschnitt und

03:25.176 --> 03:27.280
dann eine ungeordnete Liste habe, und

03:27.280 --> 03:30.150
in der Tat wird diese ungeordnete Liste später mehrere

03:30.150 --> 03:33.988
einzelne Projekte enthalten, die auf dieser Vorlage basieren,

03:33.988 --> 03:38.490
die die Daten rendern wird, die hier über das Formular oben eingegeben werden,

03:38.490 --> 03:42.357
und alles wird dann mit Hilfe von TypeScript an dieses div hier mit

03:42.357 --> 03:45.930
der id "app" angehängt.

03:45.930 --> 03:48.970
Nun, app. css nur hält einige css Stile

03:48.970 --> 03:50.790
können Sie natürlich durch, dass

03:50.790 --> 03:52.130
ich nicht auf diese hier

03:52.130 --> 03:54.020
konzentrieren, da es nichts mit

03:54.020 --> 03:56.960
TypeScript zu tun hat und jetzt ist es unsere Aufgabe,

03:56.960 --> 04:00.216
einige TypeScript-Code zu schreiben, die am Ende holt,

04:00.216 --> 04:03.502
was auch immer der Benutzer hier gut eingibt, eigentlich

04:03.502 --> 04:06.400
zuerst, die dieses Formular rendert dann holt, was

04:06.400 --> 04:08.390
auch immer der Benutzer eingibt validiert,

04:08.390 --> 04:11.975
was der Benutzer eingibt, so dass der Titel, Beschreibung und

04:11.975 --> 04:15.030
Menschen hat gültige Werte, um genau zu sein dann ein

04:15.030 --> 04:18.440
neues Projekt erstellt, so dass ein neues JavaScript-Objekt

04:18.440 --> 04:26.490
am Ende, die in einigen Array wahrscheinlich, wo dieses Array dann zu dieser Liste gerendert wird gespeichert ist und natürlich die gesamte

04:26.490 --> 04:36.790
Liste muss auch auf die Dom hinzugefügt werden, so dass dies alle Schritte und natürlich sind diese ganz ein paar Schritte.

04:36.790 --> 04:39.580
Wenn du dich jetzt sehr sicher fühlst, dann nimm das natürlich

04:39.580 --> 04:42.900
auf jeden Fall zum Anlass, jetzt mal innezuhalten und zu versuchen,

04:42.900 --> 04:45.080
das selbst zu implementieren, egal wie es

04:45.080 --> 04:46.740
am Ende aussieht, dass du einfach

04:46.740 --> 04:48.141
ein Set-Up hast, wo dieses Forum

04:48.141 --> 04:49.990
sichtbar ist, wo Benutzer etwas eintragen

04:49.990 --> 04:51.980
können und wo du für jedes Projekt, wo du

04:51.980 --> 04:54.295
etwas einträgst, ein Listenelement in dieser

04:54.295 --> 04:57.810
Liste renderst, das auch sichtbar sein sollte, wenn du das erreichst,

04:57.810 --> 05:00.539
das ist schon toll, aber wir werden das natürlich auch

05:00.539 --> 05:06.340
Schritt für Schritt gemeinsam implementieren und danach, wenn das implementiert ist, werden wir auch dafür sorgen,

05:06.340 --> 05:09.037
dass wir tatsächlich Tool-Listen rendern und wir können

05:09.037 --> 05:15.440
Projekte zwischen diesen Listen mit Drag and Drop und so weiter wechseln.

05:15.440 --> 05:17.993
Also, das Wichtigste zuerst: Fangen wir an.
