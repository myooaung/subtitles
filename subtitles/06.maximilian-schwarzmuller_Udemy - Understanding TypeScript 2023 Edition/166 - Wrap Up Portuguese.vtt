WEBVTT

00:02.150 --> 00:05.480
Narrador: E já é tudo para este módulo.

00:05.480 --> 00:08.090
Agora, obviamente, há toneladas de bibliotecas de

00:08.090 --> 00:10.130
terceiros por aí que você poderia usar.

00:10.130 --> 00:12.680
Há tudo isso mais que você pode explorar nos pacotes

00:12.680 --> 00:15.806
de Validador de Classe e Transformador de Classe.

00:15.806 --> 00:18.652
Mas a idéia aqui não é tanto de mergulhar em todas

00:18.652 --> 00:21.410
as características destes pacotes.

00:21.410 --> 00:24.300
Eu prefiro deixar isso para você explorar.

00:24.300 --> 00:27.983
A idéia é que você tem uma sensação de duas coisas importantes:

00:27.983 --> 00:31.575
A primeira é que, com o TypeScript, você pode usar pacotes

00:31.575 --> 00:36.719
regulares de JavaScript como Lodash sem problemas.

00:36.719 --> 00:39.350
No início, você pode cometer erros, mas tenha

00:39.350 --> 00:41.767
em mente que tecnicamente funcionou.

00:41.767 --> 00:45.244
Mas você também pode contornar estes erros de compilação

00:45.244 --> 00:49.260
importando os tipos certos, a tradução correta do JavaScript

00:49.260 --> 00:51.500
para o TypeScript no final.

00:51.500 --> 00:54.590
E tais pacotes de tradução existem para todas as grandes

00:54.590 --> 00:55.980
e populares e até mesmo para

00:55.980 --> 00:59.180
muitas pequenas bibliotecas JavaScript.

00:59.180 --> 01:02.221
Você também pode estar trabalhando com bibliotecas JavaScript

01:02.221 --> 01:04.470
que têm estes arquivos de tradução, estes

01:04.470 --> 01:07.110
arquivos DTS já incorporados.

01:07.110 --> 01:08.840
Lá, é claro, não é necessário instalar

01:08.840 --> 01:10.713
tais traduções posteriormente.

01:11.550 --> 01:14.350
Bem, e além desses trabalhos de Vanilla com bibliotecas

01:14.350 --> 01:17.094
que podem precisar de traduções, você também pode

01:17.094 --> 01:20.610
ter bibliotecas como Class Transformer que funcionam bem em

01:20.610 --> 01:24.280
Vanilla JavaScript, em Vanilla JavaScript moderno, pelo menos

01:24.280 --> 01:26.580
onde você também tem aulas, mas que todo

01:26.580 --> 01:29.430
o trabalho, sem nenhuma tradução extra e projetos

01:29.430 --> 01:31.400
de TypeScript.

01:31.400 --> 01:34.960
E depois temos pacotes como o Class Validator.

01:34.960 --> 01:38.440
Eles realmente abraçam características específicas

01:38.440 --> 01:42.370
do TypeScript e lhe dão uma nova forma de pensar sobre seu projeto

01:42.370 --> 01:44.840
e de resolver certos problemas.

01:44.840 --> 01:47.603
Neste caso aqui, utilizando decoradores.

01:48.680 --> 01:51.080
Conhecer todas essas coisas é super importante

01:51.080 --> 01:53.440
e lhe dá toda a flexibilidade de que você precisa

01:53.440 --> 01:55.253
para seus projetos futuros.
