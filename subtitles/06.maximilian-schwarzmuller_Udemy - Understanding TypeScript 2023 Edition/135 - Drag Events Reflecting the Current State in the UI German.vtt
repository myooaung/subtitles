WEBVTT

00:02.320 --> 00:03.570
Instructor: Um es absetzbar

00:03.570 --> 00:05.090
zu machen, müssen wir zur Klausel

00:05.090 --> 00:07.730
oder zur Komponente in unserer Anwendung gehen,

00:07.730 --> 00:11.600
die letztendlich als Ziehziel dienen soll.

00:11.600 --> 00:14.120
Hier ist also die Projektlistenklasse die richtige Klausel,

00:14.120 --> 00:15.870
und dort können wir unsere zweite Schnittstelle

00:15.870 --> 00:17.150
implementieren, die wir hinzugefügt

00:17.150 --> 00:20.130
haben, nämlich die Schnittstelle Drag Target.

00:20.130 --> 00:23.550
Wie bei der Draggable-Schnittstelle sind wir auch hier

00:23.550 --> 00:26.510
gezwungen, bestimmte Methoden hinzuzufügen.

00:26.510 --> 00:30.600
Um genau zu sein, müssen wir hier den Drag-Over-Handler, den Drop-Handler

00:30.600 --> 00:33.500
und den Drag-Learn-Handler hinzufügen.

00:33.500 --> 00:34.540
Also, lasst uns das tun.

00:34.540 --> 00:38.640
Vielleicht alles genau hier unter dem Konstruktor oben konfigurieren.

00:38.640 --> 00:40.080
Der genaue Ort ist Ihnen überlassen,

00:40.080 --> 00:42.880
die Reihenfolge der Methoden spielt keine Rolle.

00:42.880 --> 00:45.680
Hier füge ich also den Drag-Over-Handler

00:45.680 --> 00:49.730
hinzu, über den wir unser Drag-Ereignis erhalten.

00:49.730 --> 00:51.850
Ich werde dann den Drop-Handler hier hinzufügen,

00:51.850 --> 00:54.203
wo wir auch unser Drag-Ereignis erhalten.

00:55.710 --> 00:59.130
Und zu guter Letzt, der Drag Leave Handler, wo

00:59.130 --> 01:02.260
wir auch ein Drag-Ereignis erhalten.

01:02.260 --> 01:05.410
Diese Ereignisse enthalten übrigens unterschiedliche Arten von

01:05.410 --> 01:08.594
Daten, aber sie basieren alle auf dem Ereignistyp Case Core.

01:08.594 --> 01:11.860
Jetzt haben wir verschiedene Dinge zu tun.

01:11.860 --> 01:15.120
Beginnen wir vielleicht mit dem Drag-over-Handler.

01:15.120 --> 01:18.770
Im Drag-Over-Handler möchte ich das Aussehen meiner Box oder der ungeordneten

01:18.770 --> 01:21.900
Liste darin ändern, um zu verdeutlichen, dass es sich um einen

01:21.900 --> 01:24.470
absetzbaren Bereich handelt.

01:24.470 --> 01:26.960
Denn wenn wir jetzt um ein Element herumziehen, bekommen

01:26.960 --> 01:30.200
wir keinen Hinweis darauf, wo wir es ablegen können, richtig?

01:30.200 --> 01:33.410
An der Benutzeroberfläche ändert sich nichts, deshalb möchte ich dies ändern.

01:33.410 --> 01:35.950
Um dies zu ändern, füge ich der ungeordneten Liste eine bestimmte CSS-Klausel

01:35.950 --> 01:38.680
hinzu, die Sie in app finden. css.

01:38.680 --> 01:42.080
Die droppable-Klausel, die die Hintergrundfarbe ändern

01:42.080 --> 01:45.460
wird und daher hier, für einen Start, müssen wir nur den Zugriff

01:45.460 --> 01:49.070
auf unsere ungeordnete Liste Element zu bekommen.

01:49.070 --> 01:53.850
Wir können dies tun, indem wir auf dieses Element zugreifen, querySelectror uL und

01:53.850 --> 01:57.380
fügen Sie ein Ausrufezeichen, weil es immer eine ungeordnete

01:57.380 --> 01:59.440
Liste gibt es, auch wenn es keine Elemente

01:59.440 --> 02:00.963
noch enthalten.

02:02.560 --> 02:05.570
Wir müssen nur sicherstellen, dass dieses Schlüsselwort hier funktioniert,

02:05.570 --> 02:08.600
und wir können dies tun, indem wir es hier automatisch binden, um sicherzustellen,

02:08.600 --> 02:11.050
dass dieses Schlüsselwort an die umgebende Klausel gebunden

02:11.050 --> 02:12.840
ist.

02:12.840 --> 02:15.610
Wenn die Listenelemente ausgewählt sind,

02:15.610 --> 02:19.550
können wir die Klausellisteneigenschaft von Dom-Elementen

02:19.550 --> 02:22.090
verwenden, also hier wieder Vanilla JavaScript,

02:22.090 --> 02:27.540
und die Add-Methode aufrufen, um die abwerfbare Klausel hinzuzufügen.

02:27.540 --> 02:29.360
Jetzt müssen wir natürlich sicherstellen,

02:29.360 --> 02:33.000
dass der dragOverHandler tatsächlich ausgelöst wird, wenn wir etwas

02:33.000 --> 02:37.333
über dieses Element hier ziehen, über diesen gerenderten Abschnitt.

02:39.090 --> 02:42.400
Um das in der configure-Methode zu tun, wo wir hier bereits

02:42.400 --> 02:46.020
einen Listener haben, der auf unsere Zustandsänderungen hört,

02:46.020 --> 02:50.280
werde ich auch Listener auf dem Element selbst registrieren.

02:50.280 --> 02:53.380
Der erste EventListener ist natürlich das Drag-Over-Ereignis,

02:53.380 --> 02:54.760
das ich natürlich an den

02:54.760 --> 02:58.090
dragOverHandler binden werde.

02:58.090 --> 03:01.060
Dann wiederhole ich das, weil ich auch auf das dragLeave-Ereignis

03:01.060 --> 03:03.740
hören und dies an den dragLeaveHandler binden möchte

03:03.740 --> 03:06.870
und auf das Drop-Ereignis und dies an den dropHandler binden

03:06.870 --> 03:08.700
möchte, weil wir auch das später brauchen

03:08.700 --> 03:10.583
werden.

03:11.580 --> 03:16.500
Damit haben wir also diesen Drag-Over-Ereignis-Listener und den DragOverHandler

03:16.500 --> 03:18.797
verbunden, aber wir haben jetzt auch

03:18.797 --> 03:21.780
einige Fehler im Code.

03:21.780 --> 03:24.610
Nun, das sollten die unbenutzten Ereignisobjekte hier

03:24.610 --> 03:27.430
sein, also lassen wir sie im Moment einfach weg, um Typescript

03:27.430 --> 03:28.810
zu genügen.

03:28.810 --> 03:31.477
Wir werden sie später brauchen, aber im Moment, damit das hier funktioniert,

03:31.477 --> 03:33.690
blenden wir sie aus, indem wir hier Unterstriche verwenden,

03:33.690 --> 03:35.677
um typescript zu sagen: "Es ist in Ordnung, sie im

03:35.677 --> 03:37.670
Moment nicht zu verwenden. Jetzt wird das kompiliert und jetzt zurück

03:37.670 --> 03:38.950
im Projekt, wenn wir hier ein

03:38.950 --> 03:42.910
neues Projekt hinzufügen und ich dies ziehe, sehen Sie, wenn ich dies über fertige Projekte

03:42.910 --> 03:45.320
ziehe, wird der Hintergrund hier hellblau.

03:45.320 --> 03:49.620
Hier bei den aktiven Projekten wurde es hellrosa,

03:49.620 --> 03:53.270
wie eine leichte rosa Farbe.

03:53.270 --> 03:56.220
Um das noch einmal zu verdeutlichen: Wenn ich neu lade, sehen

03:56.220 --> 03:58.650
Sie, dass wir jetzt weiße Hintergründe in den Projekten

03:58.650 --> 04:02.670
haben, hoppla, und sobald ich anfange zu ziehen, bekommt das hier einen hellrosa

04:02.670 --> 04:06.490
Hintergrund, und wenn ich es über fertige Projekte ziehe, ändert sich der

04:06.490 --> 04:09.470
Kastenhintergrund in hellblau.

04:09.470 --> 04:13.360
Jetzt wird es nie wieder weiß, weil wir die abwerfbare Klausel nie entfernt

04:13.360 --> 04:16.050
haben, aber es ist ein erster Schritt.

04:16.050 --> 04:19.480
Natürlich funktioniert das Fallenlassen immer noch nicht.

04:19.480 --> 04:21.700
Wenn man es hier fallen lässt, wird das Projekt

04:21.700 --> 04:23.890
nicht erweitert, denn wie sollte das gehen?

04:23.890 --> 04:25.300
Wir haben dafür keine Logik vorgesehen.

04:25.300 --> 04:28.200
Stellen wir also sicher, dass wir das Styling

04:28.200 --> 04:33.200
auch aktualisieren, wenn wir aufhören, wenn wir das Element verlassen.

04:33.410 --> 04:36.390
Wenn wir es im Grunde hierher ziehen und dann weggehen.

04:36.390 --> 04:39.670
Vergewissern Sie sich, dass der blaue Hintergrund in diesem Fall verschwindet,

04:39.670 --> 04:42.640
das ist das, was ich als Nächstes tun möchte.

04:42.640 --> 04:44.870
Dafür können wir hier den dragLeaverHandler

04:44.870 --> 04:47.020
verwenden, der immer dann ausgelöst wird,

04:47.020 --> 04:50.990
wenn wir dieses Element mit unserem gezogenen Element verlassen.

04:50.990 --> 04:53.019
Dort möchte ich natürlich auch

04:53.019 --> 04:57.550
auf meine ungeordnete Liste zugreifen, also kopiere ich diesen Code,

04:57.550 --> 05:01.420
aber dann möchte ich die droppable-Klausel entfernen.

05:01.420 --> 05:05.553
Wir sollten dies nun auch automatisch binden, so dass sich

05:06.448 --> 05:11.220
das Schlüsselwort this hier auf die umgebende Klausel bezieht.

05:11.220 --> 05:13.120
Wenn wir das speichern, fügen wir hier ein neues Element hinzu.

05:14.040 --> 05:17.740
Versuchen wir es mal.

05:17.740 --> 05:18.773
Wenn ich anfange zu schleppen,

05:20.310 --> 05:23.740
sehen Sie, dass wir hier unseren Hintergrund haben, und wenn ich gehe, verschwindet er.

05:24.610 --> 05:27.120
Jetzt ist der Hintergrund also wirklich aktualisiert.

05:27.120 --> 05:29.930
Sie sehen hier ein gewisses Flackern, weil das

05:29.930 --> 05:33.670
dragLeave-Ereignis auch ausgelöst wird, wenn Sie den Mauszeiger

05:33.670 --> 05:37.190
über den Hintergrund bewegen, um ihn über ein gerendertes

05:37.190 --> 05:40.960
Element zu bewegen, aber das sollte hier in Ordnung sein.

05:40.960 --> 05:42.500
Das ist hier keine große Sache.

05:42.500 --> 05:43.620
Wir haben also den gewünschten Effekt erzielt, würde ich sagen.

05:43.620 --> 05:47.320
Die Benutzeroberfläche ist jetzt so aktualisiert, wie sie

05:47.320 --> 05:50.950
sein sollte, aber natürlich können wir noch keine Daten ablegen

05:50.950 --> 05:53.140
und übertragen, das wird der nächste

05:53.140 --> 05:54.700
Schritt sein.
