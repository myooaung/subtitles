WEBVTT

00:02.251 --> 00:05.350
ผู้สอน: คุณลักษณะที่ดีอีกอย่างหนึ่งเกี่ยวกับคุณสมบัติและเมธอด

00:05.350 --> 00:08.000
ซึ่งมีอยู่ใน JavaScript เมื่อคุณใช้ ES6

00:08.000 --> 00:14.010
หรือใหม่กว่า แต่ typescript ทั้งหมดเป็นคุณสมบัติและเมธอดแบบสแตติก

00:14.010 --> 00:22.530
คุณสมบัติและเมธอดแบบสแตติกช่วยให้คุณสามารถเพิ่มคุณสมบัติและเมธอดให้กับคลาสที่ไม่ได้เข้าถึงบนอินสแตนซ์ของคลาส

00:22.530 --> 00:26.080
ดังนั้นคุณไม่จำเป็นต้องเรียกชื่อคลาสใหม่ก่อน

00:26.080 --> 00:28.950
แต่ให้คุณเข้าถึงโดยตรงจากคลาส

00:28.950 --> 00:35.922
มักใช้สำหรับฟังก์ชันยูทิลิตี้ที่คุณต้องการจัดกลุ่มหรือแมปกับคลาสอย่างมีเหตุผล

00:35.922 --> 00:40.860
หรือค่าคงที่ส่วนกลางที่คุณต้องการจัดเก็บไว้ในคลาสด้วย

00:40.860 --> 00:43.270
ตัวอย่างที่สร้างขึ้นใน JavaScript

00:43.270 --> 00:46.050
ซึ่งไม่ได้กำหนดโดย typescript และไม่ได้กำหนดโดยคุณ

00:46.050 --> 00:55.500
แต่ส่วนหนึ่งของ JavaScript ในเบราว์เซอร์คือฟังก์ชันตัวสร้างคณิตศาสตร์ หรือคลาส ถ้าคุณต้องการเรียกแบบนี้ ซึ่งมีอยู่ใน JavaScript

00:55.500 --> 01:01.400
ทั่วโลก ซึ่งคุณสามารถทำได้ เข้าถึง pi เป็นค่าคงที่เพื่อให้หมายเลข pi หรือฟังก์ชันหรือเมธอดนั้นแม่นยำ

01:01.400 --> 01:08.610
เช่น pow เพื่อคำนวณกำลังของบางสิ่ง

01:08.610 --> 01:10.530
นี่คือเมธอดและคุณสมบัติที่คุณไม่สามารถเข้าถึงได้บนอินสแตนซ์ของ

01:10.530 --> 01:13.370
Math

01:13.370 --> 01:16.310
คุณไม่จำเป็นต้องเรียกคณิตศาสตร์ใหม่ก่อน

01:16.310 --> 01:22.360
แน่นอนว่ามันใช้งานไม่ได้ แต่คุณเข้าถึงคุณสมบัติเหล่านี้ในวิธีการโดยตรงบนคลาส

01:22.360 --> 01:25.340
ดังนั้น Math จึงทำหน้าที่เหมือนเนมสเปซเป็นกลไกการจัดกลุ่มที่นี่

01:25.340 --> 01:33.650
และนั่นเป็นกรณีการใช้งานทั่วไปสำหรับเมธอดและคุณสมบัติสแตติก และคุณสามารถเพิ่มลงในคลาสของคุณเองได้เช่นกัน

01:33.650 --> 01:36.770
สมมติว่าในแผนกเราต้องการมีวิธีการที่ช่วยให้เราสร้างพนักงาน

01:36.770 --> 01:46.890
และนั่นคือสิ่งที่เราอาจต้องการสามารถเข้าถึงได้โดยไม่ต้องสร้างอินสแตนซ์ของแผนก เพราะโดยปกติแล้วเราจะสร้างอินสแตนซ์เวอร์ชันเฉพาะทาง

01:46.890 --> 01:51.290
แผนกไอที และแผนกบัญชีของเรา แต่เราไม่ ต้องการยกตัวอย่างแผนกจริง

01:51.290 --> 02:07.621
ๆ เพียงเพื่อเรียกยูทิลิตี้เมธอด ดังนั้นเราจึงสามารถเพิ่มเมธอดที่นี่ สร้างพนักงาน สมมติว่าเราต้องการได้รับชื่อซึ่งเป็นสตริงเป็นอาร์กิวเมนต์และเราต้องการส่งคืนบางสิ่ง

02:07.621 --> 02:12.920
ตอนนี้เพื่อให้เป็นเมธอดแบบสแตติก ซึ่งเราสามารถเข้าถึงได้โดยไม่ต้องสร้างอินสแตนซ์ของคลาสนี้

02:12.920 --> 02:23.549
เราเพิ่มสแตติกคีย์เวิร์ดหน้าเมธอดนี้ และจากนั้นในที่นี่ เราอาจส่งคืนออบเจกต์ที่เราได้ระบุคุณสมบัติชื่อกับค่าชื่อนี้

02:25.170 --> 02:27.010
แน่นอนว่านี่เป็นวิธีที่ง่ายมาก

02:27.010 --> 02:28.690
แต่คุณก็เข้าใจ

02:28.690 --> 02:31.960
ตอนนี้เพื่อใช้ว่าเราสามารถลงไปที่นั่นที่เรารันโค้ดของเรา

02:31.960 --> 02:33.490
และตอนนี้สมมติว่าเราต้องการพนักงานใหม่

02:33.490 --> 02:36.940
พนักงาน1

02:39.300 --> 02:41.020
งั้นเราก็ได้สิ่งนี้กับ

02:41.020 --> 02:46.020
Department createEmployee และส่งผ่าน Max

02:46.920 --> 02:50.680
เช่น และถ้าฉันคอนโซล log(employee1) เราควรเห็นวัตถุที่มีชื่อ

02:50.680 --> 02:53.170
Max

02:53.170 --> 02:58.240
ถ้าฉันบันทึก อันที่จริงนี่คือพนักงานที่เราเพิ่งสร้างขึ้น

02:58.240 --> 03:01.200
นี่จะเป็นตัวอย่างทั่วไปสำหรับเมธอดสแตติก

03:01.200 --> 03:06.360
เราเรียกมันโดยตรงในคลาส โดยไม่มีคีย์เวิร์ดใหม่ ดังนั้นเราจึงใช้คลาสเป็นกลไกการจัดกลุ่มที่คุณสามารถพูดได้

03:06.360 --> 03:13.470
และถ้าคุณต้องการเพิ่มคุณสมบัติแบบสแตติก คุณก็สามารถทำได้เช่นกัน

03:13.470 --> 03:17.950
หากคุณมีบางอย่าง เช่น ปีงบประมาณที่นี่ ที่คุณต้องการใช้ในบริษัทของคุณ

03:19.730 --> 03:24.980
คุณสามารถตั้งค่าเป็นปี 2020 และอีกครั้งเพื่อให้พร้อมใช้งานโดยไม่ต้องสร้างอินสแตนซ์

03:24.980 --> 03:33.950
คุณสามารถเพิ่มแบบคงที่ข้างหน้าคุณสมบัตินี้ หรือข้างหน้า ของฟิลด์นั้นและตอนนี้เข้าถึงได้

03:33.950 --> 03:36.560
ตอนนี้ลงมีคอนโซล บันทึก. (mycreatedemployee).

03:38.050 --> 03:46.190
ที่นี่เรายังสามารถเข้าถึงแผนก การคลัง ปีแบบนั้นโดยไม่สร้างอินสแตนซ์และถ้าเราบันทึก

03:46.190 --> 03:47.150
ก็ไม่น่าแปลกใจที่เราจะเห็นว่าปี

03:47.150 --> 03:51.130
2020 ถูกบันทึกที่นี่

03:51.130 --> 03:53.347
นี่คือเมธอดและคุณสมบัติสแตติก

03:53.347 --> 03:56.947
หนึ่งคำสำคัญเกี่ยวกับพวกเขาหรือสิ่งหนึ่งที่คุณควรจำไว้

03:56.947 --> 04:03.370
เมื่อคุณเพิ่มในชั้นเรียน คุณจะไม่สามารถเข้าถึงได้จากภายในส่วนที่ไม่คงที่ของคุณ

04:03.370 --> 04:10.375
ดังนั้นหากคุณต้องการเข้าถึงปีงบประมาณที่นี่ในตัวสร้างและคุณต้องการคอนโซล

04:10.375 --> 04:10.375
เข้าสู่ระบบที่นี่อย่างที่คุณเห็นจะไม่ทำงาน

04:13.490 --> 04:18.690
ฉันได้รับข้อผิดพลาดที่นี่ว่าคุณสมบัติfiscalYearเป็นสมาชิกแบบคงที่

04:18.690 --> 04:20.976
เราไม่สามารถเข้าถึงได้ที่นี่เพราะตัวสร้างและโดยพื้นฐานแล้วอะไรก็ตามในนั้น

04:20.976 --> 04:37.660
เมธอดทั้งหมดเช่นกัน ซึ่งไม่ได้ทำเครื่องหมายด้วยสแตติก และคุณไม่สามารถทำเครื่องหมายตัวสร้างเป็นสแตติก อย่างไรก็ตาม จะไม่สามารถเข้าถึงได้ คุณสมบัติสแตติก เนื่องจากสิ่งนี้อ้างถึงอินสแตนซ์ที่สร้างขึ้นตามคลาสในขณะที่คุณสมบัติสแตติกไม่พร้อมใช้งานบนอินสแตนซ์

04:37.660 --> 04:47.780
เนื่องจากแนวคิดทั้งหมดที่อยู่เบื้องหลังคุณสมบัติสแตติกและเมธอดสแตติกคือการแยกออกจากอินสแตนซ์

04:47.780 --> 04:50.930
แน่นอนว่าคุณไม่สามารถเข้าถึงได้ด้วยคีย์เวิร์ดนี้

04:50.930 --> 04:53.940
หากคุณต้องการใช้คุณสมบัติหรือเมธอดแบบคงที่จากภายในคลาส

04:53.940 --> 04:59.380
คุณจะต้องใช้ชื่อคลาสที่นี่เพื่อเข้าถึง

04:59.380 --> 05:04.290
สิ่งนี้ช่วยให้คุณเข้าถึงคุณสมบัติและเมธอดแบบสแตติกทั้งหมดจากภายในคลาส

05:04.290 --> 05:06.593
นั่นเป็นสิ่งสำคัญอย่างหนึ่งที่ต้องจำไว้
