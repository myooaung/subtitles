WEBVTT

00:02.130 --> 00:04.110
المدرب: لقد أعددنا سير عمل التطوير

00:04.110 --> 00:06.137
الخاص بنا لـ Webpack هنا ، وقمنا

00:06.137 --> 00:08.490
بتكوينه لخادم Webpack dev ، وضبط الوضع

00:08.490 --> 00:10.840
على التطوير ، وإعداد خرائط المصدر لتحسين

00:10.840 --> 00:13.210
تجربة تصحيح الأخطاء لدينا ، لتزويدنا

00:13.210 --> 00:16.570
برسائل خطأ أفضل وما إلى ذلك.

00:16.570 --> 00:20.150
الآن للإنتاج ، لذلك عندما نريد إعداد الكود الخاص بنا

00:20.150 --> 00:23.260
لتحميله على خادم حيث سيتم تقديمه بعد ذلك إلى مستخدمينا

00:23.260 --> 00:27.070
النهائيين ، فإننا نريد عادةً سير عمل مختلفًا.

00:27.070 --> 00:28.790
لذلك سأضيف تكوينًا جديدًا يسمى

00:28.790 --> 00:31.820
webpack. التكوين. همز. شبيبة.

00:31.820 --> 00:33.210
هذا الاسم ليس متروكًا

00:33.210 --> 00:36.043
لك لأن Webpack لن يبحث عنه افتراضيًا.

00:36.880 --> 00:39.710
سنطلب منه البحث عنه في غضون ثانية.

00:39.710 --> 00:41.920
قبل أن نخبرها ، دعنا ننسخ

00:41.920 --> 00:44.708
كل إعدادات التطوير هنا إلى

00:44.708 --> 00:48.480
هذا التكوين. prod ولكن الآن دعنا نضبطه.

00:48.480 --> 00:51.150
يمكننا ضبط الوضع على الإنتاج ، على سبيل المثال.

00:51.150 --> 00:54.380
سيخبر هذا Webpack بالقيام بهذه التحسينات ، وتقليل

00:54.380 --> 00:56.550
الكود الخاص بنا وما إلى ذلك ، لذا

00:56.550 --> 00:59.220
فأنت بالتأكيد تريد تعيين هذا هنا.

00:59.220 --> 01:00.440
سنترك الدخول.

01:00.440 --> 01:02.910
في الإخراج لا يمكننا التخلص من المسار العام

01:02.910 --> 01:05.860
لأن ذلك كان مطلوبًا لخادم تطوير Webpack.

01:05.860 --> 01:08.810
الآن لن نستخدمه هنا ، لأننا نريد تشغيل برنامج

01:08.810 --> 01:10.430
Webpack النصي للإنتاج

01:10.430 --> 01:12.940
وإنشاء مخرجاتنا مكتوبة على قرص ولا

01:12.940 --> 01:16.900
يتم تقديمها مؤقتًا على خادم يعمل محليًا.

01:16.900 --> 01:19.350
يمكننا تعيين devtool على لا شيء

01:19.350 --> 01:22.090
لعدم إنشاء أي خرائط مصدر هنا لأننا

01:22.090 --> 01:24.913
في الإنتاج قد لا نحتاج إليها.

01:26.140 --> 01:30.160
الآن يمكن أن يبقى الباقي كما هو ، لكننا سنضيف المزيد.

01:30.160 --> 01:34.620
في الجزء السفلي هنا ، أريد إضافة إدخال المكونات الإضافية وتعيين

01:34.620 --> 01:36.220
هذا على مصفوفة.

01:36.220 --> 01:41.070
الإضافات هي امتدادات إضافية أو ، حسنًا ، مكونات إضافية يمكنك إضافتها إلى

01:41.070 --> 01:43.020
سير عمل Webpack الخاص بك والذي

01:43.020 --> 01:46.080
سيتم تطبيقه بشكل أساسي على الإخراج بالكامل ،

01:46.080 --> 01:47.820
على المشروع بأكمله.

01:47.820 --> 01:50.190
يتم تطبيق القواعد والوحدة على

01:50.190 --> 01:52.870
وجه التحديد على مستوى كل ملف.

01:52.870 --> 01:57.260
يتم تطبيق الإضافات على سير العمل العام.

01:57.260 --> 01:58.730
هنا أريد إضافة مكون

01:58.730 --> 02:00.620
إضافي يحذف تلقائيًا كل

02:00.620 --> 02:04.370
شيء في مجلد dist قبل كتابة مخرجات جديدة هناك

02:04.370 --> 02:06.540
بحيث يكون لدينا دائمًا أحدث

02:06.540 --> 02:09.410
وأحدث إخراج في مجلد dist.

02:09.410 --> 02:11.900
لذلك ، سأقوم بتثبيت حزمة جديدة تمامًا

02:11.900 --> 02:16.900
مع --save-dev وهذا هو المكون الإضافي clean-webpack.

02:19.090 --> 02:21.900
وسيساعدنا هذا في تنظيف مجلد

02:21.900 --> 02:26.360
dist ، في حالتنا ، عندما نعيد بناء مشروعنا.

02:26.360 --> 02:29.820
لذلك مع تثبيت ذلك ، دعنا نستورده هنا في الأعلى.

02:29.820 --> 02:32.090
سأقوم بتسميته CleanPlugin واستيراده

02:32.090 --> 02:36.400
من خلال طلب مكون إضافي webpack نظيف ومع تثبيته في مصفوفة

02:36.400 --> 02:39.810
المكونات الإضافية في الأسفل ، نسمي CleanPlugin

02:39.810 --> 02:44.073
الجديد. CleanWebpackPlugin وإنشاء

02:45.422 --> 02:46.500
مثيل لهذا.

02:46.500 --> 02:49.660
هذه دالة منشئ والآن قم بإنشاء مثيل لها.

02:49.660 --> 02:51.650
هذا كل ما عليك القيام به هنا وسيخبر

02:51.650 --> 02:53.260
هذا في النهاية Webpack أنه

02:53.260 --> 02:56.490
قبل أن يكتب شيئًا ما في مجلد الإخراج هذا ، فإنه سيمسح

02:56.490 --> 02:58.593
كل ما هو موجود هناك.

02:59.440 --> 03:02.020
الآن حصلنا على سير عمل الإنتاج النهائي.

03:02.020 --> 03:04.620
الآن لاستخدامه ، دعنا نذهب إلى الحزمة. json وهناك دعونا

03:04.620 --> 03:07.280
نضبط نص البناء هذا.

03:07.280 --> 03:10.510
هنا أريد أن أخبر Wepback باستخدام ملف prod هذا ، ملف

03:10.510 --> 03:13.110
تكوين الإنتاج هذا ونقوم بذلك عن طريق إضافة

03:13.110 --> 03:21.140
--config ثم webpack.

03:21.140 --> 03:21.140
التكوين. همز. شبيبة هنا.

03:21.140 --> 03:23.610
يجب أن يكون هذا هنا هو أي اسم ملف تختاره وهذا

03:23.610 --> 03:27.000
يوجه Webpack لاستخدام ملف التكوين هذا بدلاً من Webpack

03:27.000 --> 03:29.730
الافتراضي. التكوين. js الذي

03:29.730 --> 03:32.030
يبحث عنه عادةً.

03:32.030 --> 03:34.600
مع ذلك ، إذا قمت الآن بتشغيل npn run build

03:34.600 --> 03:36.700
، فسوف يبني تطبيقك للإنتاج مما

03:36.700 --> 03:39.950
يعني أنه يمنحك هذا الإخراج المحسن.

03:39.950 --> 03:42.460
لذلك إذا انتظرت ، فقد حصلنا على الحزمة. js وهذا هو بالفعل

03:42.460 --> 03:45.110
الكود المُحسَّن المصمم للإنتاج

03:45.110 --> 03:47.880
وهذا جنبًا إلى جنب مع الفهرس الخاص

03:47.880 --> 03:50.980
بك. html والتطبيق. css هو ما ستضعه

03:50.980 --> 03:53.800
على الخادم هنا إذا كنت تريد

03:53.800 --> 03:56.393
نشر تطبيقك.

03:57.260 --> 04:00.440
هذه أيضًا نهاية هذه الوحدة.

04:00.440 --> 04:02.140
الآن اسمحوا لي أن ألخص ما تعلمناه.
