WEBVTT

00:02.160 --> 00:05.070
-: Op dit moment gebruik ik de webpack-dev server niet.

00:05.070 --> 00:07.680
Maar nu is het gebruik ervan heel eenvoudig.

00:07.680 --> 00:10.030
We moeten gewoon het pakket. json bestand en

00:10.030 --> 00:12.430
nu daar in plaats van "lite-server"

00:12.430 --> 00:17.380
laten we "webpack-dev-server" gebruiken, zoals dit.

00:17.380 --> 00:20.020
En nu starten we npm start opnieuw.

00:20.020 --> 00:21.560
Wat u nu zult zien is dat

00:21.560 --> 00:23.610
dit nu een server opstart die draait

00:23.610 --> 00:25.780
op lokale host 8080, en het opstart

00:25.780 --> 00:28.330
de webpack build workflow.

00:28.330 --> 00:30.060
Dus als je nu lokale host 8080 bezoekt,

00:30.060 --> 00:32.020
zien we daar ons project.

00:32.020 --> 00:33.860
Het interessante nu is als we iets

00:33.860 --> 00:35.510
veranderen in de code, bijvoorbeeld

00:35.510 --> 00:38.520
als je ERA console log hier aanpast, En het wordt opgeslagen

00:38.520 --> 00:41.200
en dan kijk je hier onderaan, je ziet dat het opnieuw

00:41.200 --> 00:43.160
compileert.

00:43.160 --> 00:46.450
Echter, als je opnieuw laadt zie je het logboek hier niet En ook

00:46.450 --> 00:47.860
in het tabblad bronnen, in

00:47.860 --> 00:49.130
het tabblad webpack source,

00:49.130 --> 00:51.920
als je naar app. ts, je ziet het logboek hier niet.

00:51.920 --> 00:54.820
Dus het laadde eigenlijk niet de juiste code.

00:54.820 --> 00:58.790
Dit wordt duidelijker als ik deze bundel verwijder. js bestand hier.

00:58.790 --> 01:01.513
Als ik nu dit npm start proces opnieuw start, zie

01:02.630 --> 01:04.750
je dat het nog steeds werkt, en trouwens,

01:04.750 --> 01:08.090
verbaas je er niet over dat de dist map nu leeg blijft, in de webpack-dev

01:08.090 --> 01:10.240
server modus wordt de bundel alleen in

01:10.240 --> 01:13.020
het geheugen gegenereerd, dus hij is er en hij wordt

01:13.020 --> 01:15.840
geladen door de dev server, maar hij wordt niet echt

01:15.840 --> 01:18.490
naar de dist geschreven.

01:18.490 --> 01:20.270
Maar je zult zien dat als je opnieuw

01:20.270 --> 01:22.180
laadt, deze pagina nu ook crasht.

01:22.180 --> 01:24.050
Ik zei dat het bestand er zou

01:24.050 --> 01:27.080
zijn, maar het lijkt er niet op, toch?

01:27.080 --> 01:29.120
Nu ontbreekt het op de dist zoals ik zei, en natuurlijk

01:29.120 --> 01:35.130
importeren we van dist/bundel. js en index.

01:35.130 --> 01:35.130
html,

01:35.130 --> 01:36.810
maar je kunt me inderdaad geloven dat het in het geheugen wordt gegenereerd.

01:36.810 --> 01:38.450
Het probleem is alleen dat

01:38.450 --> 01:41.640
de dingen momenteel niet goed zijn aangesloten.

01:41.640 --> 01:45.330
Om dit te tweaken moeten we naar de webpack gaan. config. js bestand en voeg

01:45.330 --> 01:50.330
daar, in de uitvoer, daadwerkelijk een publicPath sleutel

01:50.350 --> 01:53.647
toe en stel deze in op "dist. Als je dit nu opslaat en opnieuw opstart,

01:56.250 --> 01:59.120
zie je dat het opnieuw laadt en nu zie

01:59.120 --> 02:00.670
je hier "Hi".

02:00.670 --> 02:02.400
In het tabblad bronnen

02:02.400 --> 02:05.320
zie je nu ook die correcte uitvoer.

02:05.320 --> 02:06.580
Als je naar de dot map

02:06.580 --> 02:07.860
gaat, bron app. zie je de console log verklaring.

02:07.860 --> 02:11.270
En als ik nu naar app. ts en verwijder dat, het herbouwt en nu is de console

02:11.270 --> 02:13.893
log verklaring daar weg.

02:15.220 --> 02:18.460
Dit is slechts een bijkomende configuratie die nodig is opdat

02:18.460 --> 02:20.410
de webpack-dev server echt zou begrijpen

02:20.410 --> 02:22.970
waar de uitvoer naartoe wordt geschreven en waar

02:22.970 --> 02:26.520
deze zich bevindt ten opzichte van de index. html bestand.

02:26.520 --> 02:29.910
Omdat de webpack-dev server

02:29.910 --> 02:32.180
standaard een index serveert. html bestand, het vindt in dezelfde map als je dit script

02:32.180 --> 02:34.030
hier uitvoert.

02:34.030 --> 02:37.550
Wat correct is, maar dan maakt het de verbinding met

02:37.550 --> 02:40.520
de dist map niet correct, daarom moeten we

02:40.520 --> 02:42.030
webpack-dev server informeren

02:42.030 --> 02:44.970
met publicPath waar we onze assests kunnen

02:44.970 --> 02:48.040
vinden, dus onze bundel. js bestand in dit geval.

02:48.040 --> 02:50.960
Als we de ontwikkelingsserver verlaten

02:50.960 --> 02:52.370
is er nog een instelling die ik wil toepassen

02:52.370 --> 02:53.790
in de ontwikkelingsmodus.

02:53.790 --> 02:56.080
En ik doe dit bovenaan het geÃ«xporteerde object.

02:56.080 --> 02:59.180
Ik zet de modus op "ontwikkeling". Dit zal webpack uiteindelijk vertellen dat we hier bouwen

02:59.180 --> 03:01.800
voor ontwikkeling en dat het minder optimalisaties

03:01.800 --> 03:03.550
zal doen om onze ontwikkelingservaring

03:03.550 --> 03:05.590
te verbeteren, debugging nog gemakkelijker

03:05.590 --> 03:09.450
te maken, en ons bijvoorbeeld meer betekenisvolle foutmeldingen te

03:09.450 --> 03:11.420
geven.

03:11.420 --> 03:12.950
Dus in de ontwikkeling

03:12.950 --> 03:16.420
willen we ook zeker deze sleutel toevoegen.

03:16.420 --> 03:17.840
En met dat en de webpack-dev server geconfigureerd,

03:17.840 --> 03:20.110
krijgen we nu de afgewerkte ontwikkelingswerkstroom.

03:20.110 --> 03:22.880
Voor productie moeten we deze workflow een

03:22.880 --> 03:25.570
beetje aanpassen, want daar willen we een

03:25.570 --> 03:27.100
andere output.
