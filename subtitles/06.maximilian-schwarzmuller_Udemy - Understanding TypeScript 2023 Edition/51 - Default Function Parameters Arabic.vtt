WEBVTT

00:02.170 --> 00:03.830
دعنا نلتزم بالوظائف.

00:03.830 --> 00:07.120
ميزة أخرى لطيفة متوفرة في JavaScript الحديثة

00:07.120 --> 00:09.450
هي أنه يمكنك تعيين وسيطات افتراضية

00:09.450 --> 00:11.033
لمعلمات الوظيفة.

00:11.880 --> 00:13.830
دعنا نقول هنا في دالة الإضافة

00:13.830 --> 00:17.720
، لسبب ما ، أردنا قيمة افتراضية لـ b.

00:17.720 --> 00:20.180
نعلم أننا نريد أن نتمكن من جمع عددين معًا.

00:20.180 --> 00:23.850
لكن في حالة استدعاء هذه الوظيفة برقم واحد

00:23.850 --> 00:28.130
فقط ، سنفترض وجود قيمة افتراضية للمتغير الثاني ،

00:28.130 --> 00:29.990
أو للمعامل الثاني.

00:29.990 --> 00:32.120
يمكننا القيام بذلك عن طريق إضافة علامة يساوي

00:32.120 --> 00:34.980
هنا في قائمة المعلمات ثم تعيين القيمة الافتراضية لدينا.

00:34.980 --> 00:36.920
الذي بالطبع يجب أن يتطابق مع نوعنا.

00:36.920 --> 00:40.020
على سبيل المثال ، يجب أن يكون واحدًا أو أيًا كان الوضع الافتراضي.

00:40.020 --> 00:42.770
والآن يمكننا هذا من استدعاء هذه الدالة

00:42.770 --> 00:44.080
بسعة واحدة فقط.

00:44.080 --> 00:46.700
لذلك يمكنني تسميتها على هذا النحو ولن تشتكي

00:46.700 --> 00:48.830
TypeScript لأنها تكتشف أن لدينا حجة

00:48.830 --> 00:50.200
افتراضية هنا والتي يتم

00:50.200 --> 00:51.860
أخذها بعد ذلك لـ b.

00:51.860 --> 00:53.910
وبالتالي ، أحصل هنا على ناتج ستة

00:53.910 --> 00:58.910
لأن القيمة الافتراضية الخاصة بي هي واحد وأضيف خمسة ، مما يجعل ستة الآن

00:59.130 --> 01:03.113
، ملاحظة مهمة واحدة حول الوسيطات الافتراضية هنا.

01:04.010 --> 01:07.090
يجب أن يكونوا في القائمة الأخيرة.

01:07.090 --> 01:10.710
إذا قمت بتعيين وسيطة افتراضية إلى ، على سبيل المثال

01:10.710 --> 01:12.640
، لدينا مشكلة ، لماذا؟

01:12.640 --> 01:15.290
لأنه لا يتم تخطي الوسائط الافتراضية

01:15.290 --> 01:16.840
عند استدعاء دالة.

01:16.840 --> 01:19.490
لذا ، إذا استدعيت دالة هنا بمعامل واحد

01:19.490 --> 01:21.990
، فسيتم تمرير المعطيات التي أمررها

01:21.990 --> 01:25.060
هنا إلى المعلمات بنفس الترتيب.

01:25.060 --> 01:27.240
لذا ، عند استدعاء الدالة مع وسيطة واحدة

01:27.240 --> 01:29.900
، خمسة في هذه الحالة ، تمرر هذه الوسيطة الواحدة

01:29.900 --> 01:32.400
إلى المعامل الأول هنا في قائمة المعلمات.

01:32.400 --> 01:34.150
ونظرًا لأن الوسيطة الثانية

01:34.150 --> 01:37.660
غير مزودة بعلامة افتراضية ، فهي ليست اختيارية.

01:37.660 --> 01:40.920
ومن ثم فإننا لا نقدم حجة ثانية على الإطلاق.

01:40.920 --> 01:43.730
لذا ، فإن TypeScript ، أو JavaScript

01:43.730 --> 01:46.800
في الواقع ، لا تنظر في تعريف وظيفتك وتخمن

01:46.800 --> 01:50.650
أنك ربما تريد تخطي الوسيطة الافتراضية وتقديم القيمة

01:50.650 --> 01:53.290
إلى الوسيطة غير الافتراضية.

01:53.290 --> 01:55.740
بدلاً من ذلك ، فإنه ببساطة يلتزم بالترتيب.

01:55.740 --> 01:59.720
وبالتالي يجب عليك تعيين الإعدادات الافتراضية من اليمين.

01:59.720 --> 02:01.830
لذا تأكد من أن المعلمات التي

02:01.830 --> 02:04.010
لا تقبل الوسيطات الافتراضية

02:04.010 --> 02:07.523
لها تأتي أولاً قبل المعلمات الافتراضية.
