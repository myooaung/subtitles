WEBVTT

00:02.180 --> 00:05.590
Instrutor: Voltemos às interfaces para objetos.

00:05.590 --> 00:10.090
Você também pode definir propriedades opcionais em interfaces

00:10.090 --> 00:14.100
e também em classes, como eu lhe mostrarei.

00:14.100 --> 00:16.437
Para isso, você acrescenta seu nome de propriedade,

00:16.437 --> 00:20.740
digamos 'outputName' aqui, pode ser o que você quiser, é claro, e isso deve

00:20.740 --> 00:22.238
ser um fio.

00:22.238 --> 00:26.400
Eu não quero forçar todas as classes baseadas em Named

00:26.400 --> 00:27.630
a ter isso.

00:27.630 --> 00:31.120
Deve ser opcional, quer você queira ou não tê-lo.

00:31.120 --> 00:34.289
Você pode especificar uma propriedade opcional adicionando

00:34.289 --> 00:37.670
um ponto de interrogação após o nome da propriedade.

00:37.670 --> 00:40.130
Isto diz ao Tivescript que esta propriedade

00:40.130 --> 00:44.060
pode existir em classes que implementam esta interface, mas não

00:44.060 --> 00:45.680
tem que existir.

00:45.680 --> 00:48.540
E, portanto, não recebemos nenhum erro aqui em 'Pessoa',

00:48.540 --> 00:51.180
embora eu não tenha uma propriedade de nome de

00:51.180 --> 00:53.440
saída porque é opcional.

00:53.440 --> 00:56.072
Agora, é claro, posso adicionar o nome de saída

00:56.072 --> 00:59.130
aqui e inicializá-lo com algum valor ou usá-lo como

00:59.130 --> 01:02.800
qualquer outra propriedade, mas não tenho que fazê-lo.

01:02.800 --> 01:06.720
Agora em uma classe você também pode ter uma propriedade opcional.

01:06.720 --> 01:09.670
O mesmo nome aqui deveria ser opcional,

01:09.670 --> 01:13.840
porque talvez não obtenhamos aqui um valor para o N.

01:13.840 --> 01:16.010
Podemos acrescentar um ponto de interrogação

01:16.010 --> 01:17.460
também aqui em nossa classe.

01:17.460 --> 01:20.890
Agora só temos que torná-lo opcional aqui em Named,

01:20.890 --> 01:23.610
caso contrário, violamos nossa interface,

01:23.610 --> 01:26.012
o que força isto a ser uma corda.

01:26.012 --> 01:29.000
Agora eu estou dizendo que isto pode ser opcional.

01:29.000 --> 01:30.510
Portanto, aqui não é opcional,

01:30.510 --> 01:32.750
e aqui quando eu defino isso como

01:32.750 --> 01:36.190
N, eu só quero fazer isso se N for verdadeiro, se for

01:36.190 --> 01:37.640
definido.

01:37.640 --> 01:40.080
Portanto, somente se não for um fio vazio, por exemplo.

01:40.080 --> 01:43.340
Caso contrário, o nome não será definido e isso não faz mal

01:43.340 --> 01:46.524
porque eu o transformei em uma propriedade opcional tanto

01:46.524 --> 01:49.853
aqui na interface como também em minha classe.

01:50.790 --> 01:53.070
Agora aqui, quando construímos um novo

01:53.070 --> 01:56.203
objeto, poderíamos fazer isso sem passar por um nome.

01:57.060 --> 01:59.813
Para permitir isso, temos que ir até o construtor

01:59.813 --> 02:02.600
e fornecer um valor padrão aqui ou também acrescentar

02:02.600 --> 02:05.120
um ponto de interrogação aqui.

02:05.120 --> 02:06.260
Tudo isto é para permitir isso.

02:06.260 --> 02:08.800
Você pode adicionar parâmetros opcionais,

02:08.800 --> 02:12.170
fornecendo um valor padrão de queda ou adicionando

02:12.170 --> 02:13.990
um ponto de interrogação, caso

02:13.990 --> 02:17.170
em que o valor padrão será indefinido.

02:17.170 --> 02:20.450
E agora podemos chamar este construtor sem um valor porque

02:20.450 --> 02:22.446
temos esse parâmetro opcional e

02:22.446 --> 02:25.960
porque temos a propriedade opcional que está bem, não precisamos

02:25.960 --> 02:27.930
inicializá-la.

02:27.930 --> 02:29.648
E, portanto, se você saudar,

02:29.648 --> 02:33.510
bem, este nome, é claro, não será definido.

02:33.510 --> 02:35.640
Portanto, provavelmente também deveríamos verificar

02:35.640 --> 02:37.000
aqui se temos um nome, e se temos

02:37.000 --> 02:39.100
um console. registrar isto.

02:39.100 --> 02:42.970
Senão, nós consolamos. log "oi" sem nenhuma referência

02:42.970 --> 02:45.200
ao nome porque não temos um.

02:45.200 --> 02:47.170
Se dizemos que se tudo se compila

02:47.170 --> 02:48.840
e vemos apenas oi aqui porque

02:48.840 --> 02:51.520
não forneceu um nome.

02:51.520 --> 02:53.950
Portanto, isso seria opcional tanto

02:53.950 --> 02:56.008
em uma classe quanto em uma interface

02:56.008 --> 02:59.910
e também em minha lista de construtores aqui.

02:59.910 --> 03:01.660
Agora, só para deixar bem claro novamente,

03:01.660 --> 03:04.790
estas três coisas estão apenas vagamente relacionadas.

03:04.790 --> 03:07.980
Você pode uma propriedade opcional em uma interface e depois

03:07.980 --> 03:11.910
implementá-la como uma propriedade não opcional na classe.

03:11.910 --> 03:14.550
Você então só tem que se certificar de que sua lógica

03:14.550 --> 03:17.810
é tal que isso seja sempre inicializado, caso contrário você

03:17.810 --> 03:19.720
recebe um erro como acabou de ver.

03:19.720 --> 03:22.180
Ou você tem uma propriedade opcional em

03:23.723 --> 03:26.870
uma interface e uma propriedade opcional em sua classe,

03:26.870 --> 03:31.630
então você não tem que atribuir um valor em todos os casos aqui.

03:31.630 --> 03:34.210
E, além disso e totalmente não relacionado aqui,

03:34.210 --> 03:36.020
você pode ter parâmetros opcionais

03:36.020 --> 03:38.300
em funções e, portanto, também em métodos incluindo

03:38.300 --> 03:40.300
o método do construtor.

03:40.300 --> 03:42.670
Os parâmetros opcionais são definidos

03:42.670 --> 03:43.810
ou com o ponto de interrogação,

03:43.810 --> 03:48.040
onde o valor padrão se não for definido é, portanto, indefinido ou simplesmente

03:48.040 --> 03:51.690
atribuindo um valor padrão como este.

03:51.690 --> 03:53.785
Então, conforme você aprende, isto também

03:53.785 --> 03:56.960
é opcional e o valor padrão será assumido se você não passar em

03:56.960 --> 03:58.750
um valor mais específico.

03:58.750 --> 04:00.720
Isto lhe dá mais flexibilidade na forma

04:00.720 --> 04:02.950
como você estrutura suas aulas, e quando

04:02.950 --> 04:04.770
falamos de interfaces, como você

04:04.770 --> 04:06.860
estrutura suas aulas de contratos pode

04:06.860 --> 04:09.103
precisar aderir a elas.
