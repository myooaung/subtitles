WEBVTT

00:02.160 --> 00:05.373
-: Jadi kembali ke proyek kita, jika Anda ingin menggunakan webpack di sana, pertama-tama

00:07.223 --> 00:09.948
saya akan keluar dari kompilasi saya dan server pengembangan saat ini,

00:09.948 --> 00:10.870
dan kemudian stat, pastikan

00:10.870 --> 00:13.440
kita dapat menggunakan webpack di sana.

00:13.440 --> 00:16.420
Sekarang karena ini sudah menjadi file dari file package dot json,

00:16.420 --> 00:19.462
kita dapat menggunakan NPM untuk menginstal lebih banyak dependensi

00:19.462 --> 00:21.050
ke dalam proyek ini.

00:21.050 --> 00:23.410
Jadi sederhananya, lebih banyak pustaka pihak ketiga yang

00:23.410 --> 00:24.940
kita butuhkan dalam proyek ini.

00:24.940 --> 00:28.610
Dan di sini yang saya maksudkan bukan pustaka pihak ketiga yang menyediakan

00:28.610 --> 00:31.480
fungsionalitas tertentu menggunakan kode kita, melainkan

00:31.480 --> 00:33.930
pustaka pihak ketiga yang membantu kita mengatur

00:33.930 --> 00:37.157
alur kerja dan konfigurasi proyek yang membuat pengembangan

00:37.157 --> 00:40.430
menjadi sangat efisien bagi kita.

00:40.430 --> 00:45.110
Kami melakukan ini dengan NPM terinstal, dash dash aman dash

00:45.110 --> 00:48.600
dev untuk menunjukkan bahwa itu adalah ketergantungan

00:48.600 --> 00:53.600
pengembangan saja, dan kemudian webpack webpack dash CLI, webpack

00:53.713 --> 00:58.713
dash dev dash server typescript dan ts loader.

01:01.030 --> 01:03.040
Jadi itu adalah sekumpulan paket dan saya akan mengatakan

01:03.040 --> 01:04.800
apa yang mereka lakukan sebentar lagi.

01:04.800 --> 01:06.680
Jadi pertama-tama mari kita tekan enter dan

01:06.680 --> 01:08.485
pastikan semua ini sekarang sudah terinstal

01:08.485 --> 01:10.801
ke dalam proyek kita di sini, dan setelah itu kita akan

01:10.801 --> 01:14.100
melihat setiap paket dan melihat mengapa kita menginstalnya, jadi mari

01:14.100 --> 01:16.290
kita tunggu sampai ini selesai.

01:16.290 --> 01:18.530
Jadi itu selesai menginstal untuk saya di sini,

01:18.530 --> 01:21.710
dan sekarang dengan itu, mari kita analisis apa yang kita instal.

01:21.710 --> 01:25.380
Di package dot json, bagian dev dependencies yang baru, atau sudah ada,

01:25.380 --> 01:27.063
tetapi sekarang kita memiliki banyak

01:27.063 --> 01:29.474
paket baru di sana, saya harus mengatakan, paket-paket

01:29.474 --> 01:31.290
ini ditambahkan.

01:31.290 --> 01:33.690
Sekarang, apa yang dilakukan semua paket ini?

01:33.690 --> 01:35.460
Mari kita mulai dengan webpack.

01:35.460 --> 01:37.580
Webpack adalah alat yang baru saja saya bicarakan,

01:37.580 --> 01:40.080
ini adalah jantung dari seluruh pengaturan yang sekarang

01:40.080 --> 01:41.780
akan kita buat.

01:41.780 --> 01:43.980
Ini adalah alat yang memungkinkan kita untuk

01:43.980 --> 01:47.150
menyambungkan fungsi-fungsi tertentu untuk membundel kode kita

01:47.150 --> 01:49.210
dan juga untuk mengubah kode kita.

01:49.210 --> 01:52.470
Dan itu mengubah bagian kode kita menjadi penting, kita memiliki

01:52.470 --> 01:54.740
proyek typescript di sini, bukan?

01:54.740 --> 01:56.620
Sekarang tentu saja kita bisa menggunakan

01:56.620 --> 02:00.220
webpack untuk kemudian membundel semua output JavaScript, tetapi akan

02:00.220 --> 02:03.310
lebih baik lagi jika webpack akan melakukan keduanya.

02:03.310 --> 02:06.250
Ubah kode typescript kita ke JavaScript, dan kemudian

02:06.250 --> 02:10.180
benar-benar memancarkan file Javascript yang dibundel, dan

02:10.180 --> 02:13.420
untungnya webpack dapat melakukannya.

02:13.420 --> 02:16.610
Kita membutuhkan webpack CLI untuk menjalankan perintah

02:16.610 --> 02:18.922
webpack dalam proyek kita, dan webpack dev

02:18.922 --> 02:21.603
server untuk memiliki server pengembangan yang

02:21.603 --> 02:24.286
dibangun, yang memulai webpack di bawah tenda, yang

02:24.286 --> 02:27.056
mengawasi file-file kita untuk perubahan, secara

02:27.056 --> 02:30.180
otomatis memicu webpack untuk mengkompilasi ulang ketika

02:30.180 --> 02:34.760
ada sesuatu yang berubah, dan yang secara otomatis melayani halaman kita.

02:34.760 --> 02:37.300
Dan kemudian kita punya typescript dan typescript

02:37.300 --> 02:39.460
loader, ts loader di sini.

02:39.460 --> 02:42.850
Sekarang kita sudah menginstal typescript secara global di mesin

02:42.850 --> 02:46.208
kita, itulah sebabnya kita dapat menjalankan tsc dash w.

02:46.208 --> 02:49.760
Sekarang ini adalah praktik yang baik untuk menginstal salinan typescript

02:49.760 --> 02:53.450
secara otomatis per proyek, sehingga untuk proyek ini, Anda mendapatkan

02:53.450 --> 02:56.000
versi typescript tertentu.

02:56.000 --> 02:58.320
Keuntungannya jika Anda pernah mengubah versi

02:58.320 --> 03:01.624
typescript global Anda, Anda tidak merusak versi proyek Anda,

03:01.624 --> 03:05.170
pengaturan proyek Anda jika ada perubahan yang melanggar di typescript

03:05.170 --> 03:07.280
itu sendiri, jadi kami dapat mengunci versi

03:07.280 --> 03:10.340
typescript tertentu untuk sebuah proyek, itulah mengapa

03:10.340 --> 03:13.880
kami menginstalnya secara terpisah di sini.

03:13.880 --> 03:16.440
Dan ts loader sekarang adalah sebuah paket yang

03:16.440 --> 03:18.380
akan bekerja sama dengan webpack.

03:18.380 --> 03:21.068
Ts loader adalah paket yang memberi tahu webpack

03:21.068 --> 03:24.396
bagaimana cara mengubah kode typescript menjadi Javascript,

03:24.396 --> 03:29.180
sehingga webpack mampu melakukan keduanya, mengkompilasi kode kita, dengan bantuan

03:29.180 --> 03:30.920
typescript loader, yang pada gilirannya

03:30.920 --> 03:33.370
tentu saja menggunakan kompiler typescript

03:33.370 --> 03:36.665
di bawah kap, dan kemudian webpack juga mampu membundel file

03:36.665 --> 03:41.580
javascript yang dipancarkan ke dalam file js yang dibundel menjadi satu file kode yang

03:41.580 --> 03:44.260
dibundel.

03:44.260 --> 03:47.440
Nah, dan dengan itu, mari kita mulai saja dan mari kita siapkan

03:47.440 --> 03:50.852
proyek webpack sehingga kita dapat menggunakan webpack untuk

03:50.852 --> 03:53.223
semua hal yang menyenangkan ini.
