WEBVTT

00:02.320 --> 00:04.500
Instrutor: Agora que aprendemos sobre privado e

00:04.500 --> 00:07.650
público, eu também quero transformar o nome em propriedade privada.

00:07.650 --> 00:09.700
E agora aqui temos um pouco de um problema,

00:09.700 --> 00:10.730
não realmente um problema,

00:10.730 --> 00:12.730
mas um pouco de inconveniência.

00:12.730 --> 00:14.540
Temos esse campo de nome aqui, depois

00:14.540 --> 00:16.810
recebemos um valor para ele aqui no construtor,

00:16.810 --> 00:19.350
e depois armazenamos esse valor para esse campo

00:19.350 --> 00:21.920
aqui no construtor, no campo.

00:21.920 --> 00:22.900
Podemos fazer isso,

00:22.900 --> 00:25.820
e certamente é muito claro o que estamos fazendo aqui.

00:25.820 --> 00:29.690
Mas, em muitos casos de uso, você terá muitas classes onde todas as propriedades

00:29.690 --> 00:31.810
que você tem, todos os campos que você

00:31.810 --> 00:33.210
tem, são inicializados para

00:33.210 --> 00:35.010
o construtor.

00:35.010 --> 00:36.520
E portanto, muitas vezes,

00:36.520 --> 00:39.870
você pode se encontrar escrevendo algumas propriedades,

00:39.870 --> 00:42.090
alguns campos como este no topo - não

00:42.090 --> 00:44.270
importa se são privados ou públicos

00:44.270 --> 00:46.320
- e então você apenas repete tudo

00:46.320 --> 00:47.993
isso lá embaixo no construtor,

00:49.030 --> 00:52.860
apenas para então inicializar estes valores aqui na função

00:52.860 --> 00:55.110
de construtor.

00:55.110 --> 00:57.080
Você não tem que fazer isso.

00:57.080 --> 01:01.690
Em vez de fazer este código de inicialização dupla aqui, você pode

01:01.690 --> 01:05.220
se livrar de suas definições de campo lá em cima.

01:05.220 --> 01:07.150
E agora você vê que vai receber um erro.

01:07.150 --> 01:09.040
Mas você também pode se livrar disso

01:09.040 --> 01:12.970
aqui, e em vez disso, agora basta adicionar o modificador de acesso

01:12.970 --> 01:15.130
na frente do parâmetro.

01:15.130 --> 01:17.950
Portanto, se deve ser público, acrescente público.

01:17.950 --> 01:20.290
Digamos, pelo nome, que o mantemos público agora.

01:20.290 --> 01:23.530
Se deve ser privado, acrescente privado.

01:23.530 --> 01:25.250
Aqui, você tem que adicionar

01:25.250 --> 01:30.250
público porque esta agora é uma instrução explícita para datilografia,

01:30.370 --> 01:32.880
que diz que você quer não apenas obter

01:32.880 --> 01:36.450
estes argumentos aqui no construtor, mas que você quer

01:36.450 --> 01:39.880
criar propriedades para esta classe com exatamente

01:39.880 --> 01:41.950
os mesmos nomes.

01:41.950 --> 01:45.350
E, portanto, aqui, devemos também renomear n para nomear.

01:45.350 --> 01:47.600
Para que a propriedade do nome seja criada

01:47.600 --> 01:49.250
na classe do criador.

01:49.250 --> 01:51.250
Portanto, este é simplesmente um atalho

01:51.250 --> 01:54.270
para este código de inicialização dupla aqui.

01:54.270 --> 01:56.340
Onde você tinha que encontrar seus campos,

01:56.340 --> 01:57.930
e depois armazenar o valor, agora

01:57.930 --> 02:00.110
estamos fazendo tudo de uma só vez.

02:00.110 --> 02:02.690
Definimos quais argumentos o construtor

02:02.690 --> 02:04.430
leva, e então para cada argumento

02:04.430 --> 02:07.290
que tem um modificador de acesso na frente dele,

02:07.290 --> 02:09.630
uma propriedade do mesmo nome é criada,

02:09.630 --> 02:11.480
e o valor para o argumento é armazenado

02:11.480 --> 02:14.420
naquela propriedade criada.

02:14.420 --> 02:17.750
Portanto, agora só temos que consertar a criação de nosso departamento aqui, e acrescentar

02:17.750 --> 02:20.780
uma identificação, pois acrescentei este novo argumento.

02:20.780 --> 02:22.230
E agora o que você verá é que

02:22.230 --> 02:25.640
quando chamarmos a descrição lá embaixo, e na verdade o

02:25.640 --> 02:28.113
faço, colocarei a identificação lá também,

02:29.130 --> 02:32.640
talvez mudando esta cadeia de usuários do departamento,

02:32.640 --> 02:38.890
literalmente aqui, Departamento isto.

02:38.890 --> 02:38.890
id

02:40.205 --> 02:42.450
e depois aqui isto. nome, você vai

02:42.450 --> 02:45.380
ver que tudo isso ainda funciona.

02:45.380 --> 02:47.360
Ele se compila sem erros aqui.

02:47.360 --> 02:49.980
E aqui obtemos a saída com nossa identificação

02:49.980 --> 02:51.710
e com nosso nome.

02:51.710 --> 02:53.480
Por causa desse pequeno atalho, nós também

02:53.480 --> 02:55.563
guardamos algum código para tudo isso.
