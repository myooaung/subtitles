WEBVTT

00:02.270 --> 00:05.210
Kursleiter: Wir haben jetzt also einen nützlicheren Dekorator gesehen.

00:05.210 --> 00:08.750
Ich möchte diese sehr grundlegende Einführung in den Decorator mit einer

00:08.750 --> 00:11.030
weiteren wichtigen Sache abschließen, die man

00:11.030 --> 00:14.600
wissen sollte, man kann mehr als einen Decorator zu einer Klasse hinzufügen,

00:14.600 --> 00:17.760
oder irgendwo anders, wo man einen Decorator verwenden kann.

00:17.760 --> 00:18.940
Fügen wir also zum

00:18.940 --> 00:23.040
Beispiel den Logger-Dekorator hinzu, etwa so.

00:23.040 --> 00:25.810
Wenn wir das speichern, sehen Sie, dass es ohne Fehler

00:25.810 --> 00:29.030
kompiliert wird, und wir sehen hier auch die Log-Meldung.

00:29.030 --> 00:31.490
Es bleibt nur noch eine wichtige Frage: In welcher

00:31.490 --> 00:34.840
Reihenfolge werden diese Dekoratoren ausgeführt?

00:34.840 --> 00:36.550
Um das herauszufinden, sollten wir

00:36.550 --> 00:38.880
beide mit Protokollnachrichten versehen.

00:38.880 --> 00:41.340
Wir haben natürlich eine Log-Meldung im Logger,

00:41.340 --> 00:43.400
gehen wir nun zur Decorator-Funktion.

00:43.400 --> 00:46.350
Also auf die innere Funktion von WithTemplate,

00:46.350 --> 00:49.900
und sagen Sie Rendering Template, zum Beispiel.

00:49.900 --> 00:50.733
Und nun wollen wir

00:50.733 --> 00:53.830
sehen, in welcher Reihenfolge diese Funktionen ausgeführt

00:53.830 --> 00:56.820
und die Protokollanweisungen gedruckt werden.

00:56.820 --> 00:59.570
Wir sehen, dass die Rendering-Vorlage zuerst ausgeführt

00:59.570 --> 01:02.540
wird, und dann erhalten wir die Logger-Ausgabe.

01:02.540 --> 01:04.070
Das sagt uns natürlich, dass

01:04.070 --> 01:06.260
sie von unten nach oben arbeiten.

01:06.260 --> 01:08.033
Zuerst der unterste Dekorateur,

01:08.033 --> 01:10.790
dann die darüber liegenden Dekorateure.

01:10.790 --> 01:14.230
WithTemplate wird zuerst ausgeführt, dann wird Logger ausgeführt.

01:14.230 --> 01:15.270
Und wichtig, ich

01:15.270 --> 01:18.920
spreche von den eigentlichen Dekoratorfunktionen.

01:18.920 --> 01:23.710
Die Dekorationsfabriken hier laufen früher.

01:23.710 --> 01:26.790
Wenn wir hier die Logger Factory haben, und wir haben

01:26.790 --> 01:31.080
das gleiche Protokoll in der Template Factory, also dort sage ich Template

01:31.080 --> 01:33.950
Factory in meinem Protokoll, werden Sie sehen, dass

01:33.950 --> 01:35.000
dort eigentlich die

01:35.000 --> 01:37.490
Logger Factory zuerst läuft, und dann haben

01:37.490 --> 01:39.930
wir die Template Factory.

01:39.930 --> 01:41.750
Und das macht Sinn, denn schließlich

01:41.750 --> 01:43.740
führe ich hier trotz des @-Symbols eine

01:43.740 --> 01:45.600
Funktion aus, und wir machen hier

01:45.600 --> 01:46.850
dasselbe.

01:46.850 --> 01:49.930
Und natürlich gelten hier die üblichen JavaScript-Regeln, und die

01:49.930 --> 01:51.380
Ausführung dieser Funktion erfolgt

01:51.380 --> 01:53.610
vor der Ausführung dieser Funktion.

01:53.610 --> 01:56.590
Aus diesem Grund sehen wir die Logger

01:56.590 --> 01:59.470
Factory vor der Template Factory.

01:59.470 --> 02:02.650
Die Erstellung unserer eigentlichen Dekoratorfunktionen

02:02.650 --> 02:03.970
erfolgt also in der Reihenfolge,

02:03.970 --> 02:07.280
in der wir diese Fabrikfunktionen angeben.

02:07.280 --> 02:10.780
Aber die Ausführung der eigentlichen Dekoratorfunktionen erfolgt

02:10.780 --> 02:12.700
dann von unten nach oben.

02:12.700 --> 02:17.300
Das bedeutet, dass der unterste Dekorator zuerst ausgeführt wird, also

02:17.300 --> 02:19.000
diese Dekoratorfunktion,

02:19.000 --> 02:23.250
und danach wird der darüber liegende Dekorator ausgeführt.

02:23.250 --> 02:25.163
Das muss man einfach wissen.

02:26.040 --> 02:29.620
Damit haben wir ein solides Basiswissen über Dekoratoren, und

02:29.620 --> 02:32.240
ihr seht auch einen fortgeschritteneren Dekorator,

02:32.240 --> 02:34.900
der euch hoffentlich auch einen ersten Eindruck

02:34.900 --> 02:37.810
davon gibt, warum Dekoratoren nützlich sein können,

02:37.810 --> 02:41.970
besonders wenn ihr auch an Frameworks wie Angular denkt.

02:41.970 --> 02:46.470
Schauen wir uns nun an, an welchen anderen Stellen, außer in Klassen, wir

02:46.470 --> 02:48.140
Dekoratoren hinzufügen können

02:48.140 --> 02:50.363
und was wir dort tun können.
