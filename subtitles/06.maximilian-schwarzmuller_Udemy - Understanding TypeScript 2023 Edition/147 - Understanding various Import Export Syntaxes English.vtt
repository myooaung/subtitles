WEBVTT

1
00:00:02.310 --> 00:00:04.270
<v Instructor>So we're using ES modules.</v>

2
00:00:04.270 --> 00:00:06.470
Turns out there are some variations

3
00:00:06.470 --> 00:00:08.550
of that export and import syntax

4
00:00:08.550 --> 00:00:10.100
which you should be aware of.

5
00:00:10.100 --> 00:00:12.276
For example, you can bundle imports.

6
00:00:12.276 --> 00:00:14.300
Lets say here in project input,

7
00:00:14.300 --> 00:00:15.870
where I'm importing two things

8
00:00:15.870 --> 00:00:18.060
from the validation file here.

9
00:00:18.060 --> 00:00:22.030
You might want to group that all into one object

10
00:00:22.030 --> 00:00:25.493
where you then can call dot validatable and dot validate,

11
00:00:25.493 --> 00:00:29.170
so that you don't have to call validate like this.

12
00:00:29.170 --> 00:00:30.940
Maybe you want to call it like this,

13
00:00:30.940 --> 00:00:33.510
but if you had let's say a function of the same name

14
00:00:33.510 --> 00:00:35.210
and year or anything like that

15
00:00:35.210 --> 00:00:36.719
and you want to avoid a name clash

16
00:00:36.719 --> 00:00:38.250
or you want to make it clear

17
00:00:38.250 --> 00:00:40.292
that this belongs to some kind of package,

18
00:00:40.292 --> 00:00:42.069
you could group that.

19
00:00:42.069 --> 00:00:45.090
To group imports you don't import them like this

20
00:00:45.090 --> 00:00:49.150
with the curly braces, but instead you use a star here

21
00:00:49.150 --> 00:00:51.970
which means import everything from that file,

22
00:00:51.970 --> 00:00:55.080
as and then any alias of your choice,

23
00:00:55.080 --> 00:00:57.192
for example, validation.

24
00:00:57.192 --> 00:00:59.280
Now you have to go to the places

25
00:00:59.280 --> 00:01:01.070
where you use something from that file

26
00:01:01.070 --> 00:01:05.470
and use it like an object validation.validatable.

27
00:01:05.470 --> 00:01:07.920
So everything which is exported in that file

28
00:01:07.920 --> 00:01:10.400
which you now group under this name here

29
00:01:10.400 --> 00:01:12.341
is accessed through the dot notation.

30
00:01:12.341 --> 00:01:15.700
So validation.validatable all the way

31
00:01:15.700 --> 00:01:18.830
and then also down there where we have the validate function

32
00:01:18.830 --> 00:01:22.786
it's of course validation.validate, validation.validate,

33
00:01:22.786 --> 00:01:25.197
and validation.validate.

34
00:01:25.197 --> 00:01:29.604
And with that you will see, well validation works.

35
00:01:29.604 --> 00:01:32.490
So grouping is one thing you can do.

36
00:01:32.490 --> 00:01:34.960
That alias thing here is also

37
00:01:34.960 --> 00:01:36.890
something you can do in general.

38
00:01:36.890 --> 00:01:38.830
You're not liking autobind like this,

39
00:01:38.830 --> 00:01:41.270
you want to have a capital character at the beginning?

40
00:01:41.270 --> 00:01:45.360
Well, you can simply assign alias with the as key word here.

41
00:01:45.360 --> 00:01:48.150
Inside of the curly braces you can use it as well.

42
00:01:48.150 --> 00:01:50.431
Then you rename this import and only this import.

43
00:01:50.431 --> 00:01:54.350
You don't rename it in the original file of course.

44
00:01:54.350 --> 00:01:58.390
It's only imported under a different name in this file here.

45
00:01:58.390 --> 00:02:01.280
So now instead of using autobind with a lower case a

46
00:02:01.280 --> 00:02:05.780
here we now have to use our alias name with the uppercase A.

47
00:02:05.780 --> 00:02:09.150
So that can be another nice feature to avoid name clashes

48
00:02:09.150 --> 00:02:11.570
if you had another thing named autobind

49
00:02:11.570 --> 00:02:14.543
with the lower case a in the same file, for example.

50
00:02:16.180 --> 00:02:20.010
You can also work with default exports.

51
00:02:20.010 --> 00:02:22.926
If you have a file which only exports one thing,

52
00:02:22.926 --> 00:02:25.120
let's say base-component.

53
00:02:25.120 --> 00:02:28.020
Actually we have a lot of files that only export one thing.

54
00:02:28.020 --> 00:02:29.240
But let's say here in this file

55
00:02:29.240 --> 00:02:31.360
we don't want to export it like this,

56
00:02:31.360 --> 00:02:33.770
a so-called named export,

57
00:02:33.770 --> 00:02:37.330
because we imported by name here in the curly braces.

58
00:02:37.330 --> 00:02:40.258
We need to use the exact name we used here.

59
00:02:40.258 --> 00:02:42.170
If you don't want to do that,

60
00:02:42.170 --> 00:02:45.140
you simply add another keyword, default.

61
00:02:45.140 --> 00:02:48.940
And this tells JavaScript that this is the main,

62
00:02:48.940 --> 00:02:52.064
well, the default export of this file.

63
00:02:52.064 --> 00:02:55.929
You could still have other named exports here

64
00:02:55.929 --> 00:02:58.500
that would be allowed.

65
00:02:58.500 --> 00:03:01.220
Whoops, for example a constant here

66
00:03:01.220 --> 00:03:02.120
that would be allowed.

67
00:03:02.120 --> 00:03:04.750
You can have named and default exports mixed

68
00:03:04.750 --> 00:03:06.130
in the same file,

69
00:03:06.130 --> 00:03:07.800
but if you use a default export,

70
00:03:07.800 --> 00:03:11.440
you can only have one default export per file.

71
00:03:11.440 --> 00:03:14.210
So here I have my default export and now in the files

72
00:03:14.210 --> 00:03:16.926
where I imported, you don't import it by name.

73
00:03:16.926 --> 00:03:19.900
You can only import named exports by name.

74
00:03:19.900 --> 00:03:22.639
For example, that something constant added.

75
00:03:22.639 --> 00:03:24.743
Instead you import your default

76
00:03:24.743 --> 00:03:28.600
simply by choosing any name of your choice now,

77
00:03:28.600 --> 00:03:30.890
which doesn't have to match the name you used

78
00:03:30.890 --> 00:03:32.400
in the exported file.

79
00:03:32.400 --> 00:03:34.354
So you don't have to use component now.

80
00:03:34.354 --> 00:03:37.037
You could use just Cmp for example here now.

81
00:03:37.037 --> 00:03:40.700
And import it like this, without curly braces.

82
00:03:40.700 --> 00:03:44.127
There also is no star, so I'm not importing everything.

83
00:03:44.127 --> 00:03:46.827
I'm just importing the default.

84
00:03:46.827 --> 00:03:49.460
Therefore this is only available if the file

85
00:03:49.460 --> 00:03:52.210
you're importing from has a default export.

86
00:03:52.210 --> 00:03:53.850
Because this tells JavaScript,

87
00:03:53.850 --> 00:03:58.010
hey, I wanna use the default export of that file.

88
00:03:58.010 --> 00:04:00.520
Then here I can name this Cmp, of course.

89
00:04:00.520 --> 00:04:02.569
Or, I have to use Cmp, of course now.

90
00:04:02.569 --> 00:04:04.509
Component is not allowed anymore

91
00:04:04.509 --> 00:04:06.666
because I'm not importing it by that name.

92
00:04:06.666 --> 00:04:09.710
Of course, we now also need to tweak this in project-item

93
00:04:09.710 --> 00:04:10.675
and project-list.

94
00:04:10.675 --> 00:04:12.486
We use the default export.

95
00:04:12.486 --> 00:04:14.515
I will stick to component here,

96
00:04:14.515 --> 00:04:16.540
but you don't have to, as I just showed.

97
00:04:16.540 --> 00:04:18.300
You could use any name you want here,

98
00:04:18.300 --> 00:04:21.900
but for simplicity, I will use component here.

99
00:04:21.900 --> 00:04:24.075
Default exports can be nice if you only have

100
00:04:24.075 --> 00:04:25.740
one thing per file.

101
00:04:25.740 --> 00:04:29.080
I personally prefer named exports though,

102
00:04:29.080 --> 00:04:31.075
because you get auto-completion,

103
00:04:31.075 --> 00:04:33.590
you enforce a clear naming pattern,

104
00:04:33.590 --> 00:04:37.290
if another developer imports your class

105
00:04:37.290 --> 00:04:40.460
or your exported thing, he has to use your name,

106
00:04:40.460 --> 00:04:41.870
which typically is good

107
00:04:41.870 --> 00:04:43.290
because that allows you to enforce

108
00:04:43.290 --> 00:04:46.579
certain naming conventions across a team or organization.

109
00:04:46.579 --> 00:04:49.840
And therefore, I personally like named exports,

110
00:04:49.840 --> 00:04:51.740
but of course you should be aware

111
00:04:51.740 --> 00:04:53.340
of the default export as well,

112
00:04:53.340 --> 00:04:54.853
which you can use like that.

