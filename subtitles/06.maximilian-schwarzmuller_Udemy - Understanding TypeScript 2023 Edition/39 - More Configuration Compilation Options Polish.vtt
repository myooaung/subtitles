WEBVTT

00:01.639 --> 00:03.340
Instruktor: Teraz wszystko,

00:03.340 --> 00:05.320
co ciekawe, to allowJs.

00:05.320 --> 00:07.590
Dzięki allowJs i przy okazji całej drogi

00:07.590 --> 00:10.060
mamy checkJs zawsze możesz włączyć pliki JavaScript

00:10.060 --> 00:11.620
do kompilacji.

00:11.620 --> 00:13.747
Teraz z allowJs plik JavaScript

00:13.747 --> 00:17.470
będzie kompilowany przez typ script, więc nawet jeśli nie

00:17.470 --> 00:19.813
kończy się na . ts, skrypt typu skompiluje

00:19.813 --> 00:22.266
go z checkJs nie skompiluje go, ale nadal będzie

00:22.266 --> 00:24.107
sprawdzał składnię tam i zgłaszał

00:24.107 --> 00:26.079
potencjalnie błędy.

00:26.079 --> 00:28.212
To może być miłe, jeśli naprawdę nie

00:28.212 --> 00:29.934
chcesz używać skryptu typu,

00:29.934 --> 00:33.095
ale chcesz skorzystać z niektórych jego funkcji

00:33.095 --> 00:37.060
i o ile skrypt typu może pomóc ci z dowolnym typem tylko, który

00:37.060 --> 00:38.487
jest skutecznie tym, co

00:38.487 --> 00:41.385
masz w JavaScript, zrobi to, jeśli włączysz te

00:41.385 --> 00:42.540
opcje.

00:42.540 --> 00:44.170
Teraz nie potrzebujemy tego do

00:44.170 --> 00:46.316
tego projektu i w tym projekcie chcielibyśmy

00:46.316 --> 00:48.745
się upewnić, że nie będziemy podwójnie kompilować

00:48.745 --> 00:50.833
tych plików JavaScript, które wywodzą

00:50.833 --> 00:53.004
się z plików typu script, więc musielibyśmy

00:53.004 --> 00:54.782
trochę podrasować ustawienia include

00:54.782 --> 00:57.218
i exclude, ale mógłbyś użyć tego w projektach,

00:57.218 --> 01:00.830
w których nie chcesz używać typu script w ogóle lub gdzie z jakiegokolwiek

01:00.830 --> 01:04.037
powodu masz kilka plików vanilla JavaScript obok plików typu

01:04.037 --> 01:06.263
script i chcesz sprawdzić również pliki vanilla

01:06.263 --> 01:09.393
JavaScript.

01:10.530 --> 01:12.923
Teraz przyspieszmy trochę do przodu, jsx

01:12.923 --> 01:17.050
to opcja, która może pomóc ci w react js, która tak naprawdę nie ma dla nas

01:17.050 --> 01:20.250
znaczenia tutaj, deklaracja i declarationMap również

01:20.250 --> 01:21.550
nie są ważne tutaj.

01:21.550 --> 01:24.830
Pliki Dts to zaawansowana koncepcja, która ma znaczenie dla

01:24.830 --> 01:27.022
ciebie, jeśli wysyłasz swój projekt jako

01:27.022 --> 01:30.044
bibliotekę do innych ludzi i potrzebujesz w zasadzie pliku

01:30.044 --> 01:32.287
manifestu, który opisuje wszystkie typy,

01:32.287 --> 01:34.537
które masz w swoim projekcie, to jest taki

01:34.537 --> 01:36.022
. d. plik ts.

01:36.022 --> 01:39.403
Mapa źródłowa to jednak ciekawa sprawa.
