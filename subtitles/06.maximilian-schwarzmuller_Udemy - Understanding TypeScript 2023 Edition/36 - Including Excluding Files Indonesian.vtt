WEBVTT

00:02.200 --> 00:03.840
Instruktur: Jadi sekarang ini adalah bagaimana

00:03.840 --> 00:06.290
kita dapat mengelola banyak file dengan TypeScript.

00:06.290 --> 00:08.870
Sekarang, satu kata tentang memiliki banyak file,

00:08.870 --> 00:11.500
ketika Anda bekerja dengan banyak file seperti yang

00:11.500 --> 00:15.280
kita lakukan di sini, Anda juga dapat mengimpornya satu sama lain dengan modul,

00:15.280 --> 00:18.180
yang mungkin Anda ketahui dari vanilla JavaScript, di sana

00:18.180 --> 00:20.770
kami memiliki modul juga, itu adalah sesuatu yang akan

00:20.770 --> 00:23.830
saya bahas di bagian khusus dari kursus ini, jadi untuk saat ini,

00:23.830 --> 00:25.560
kami hanya memiliki dua file yang tidak

00:25.560 --> 00:27.620
diimpor satu sama lain, tetapi yang diimpor

00:27.620 --> 00:31.040
ke indeks. html.

00:31.040 --> 00:32.990
Sekarang dengan itu, kita tahu bahwa

00:32.990 --> 00:35.930
kita dapat mengelola ini sebagai proyek dan bahwa

00:35.930 --> 00:39.060
kita dapat mengkompilasi beberapa file di sini.

00:39.060 --> 00:41.910
Sekarang mari kita lihat tsconfig. json karena ini adalah

00:41.910 --> 00:45.660
file penting untuk mengelola proyek ini, pada dasarnya

00:45.660 --> 00:48.100
memberi tahu TypeScript bagaimana

00:48.100 --> 00:51.290
seharusnya mengkompilasi file-file ini.

00:51.290 --> 00:55.260
Sekarang, sebelum kita menyelami compilerOptions di mana kita,

00:55.260 --> 00:56.470
seperti namanya, dapat

00:56.470 --> 00:59.620
mengonfigurasi bagaimana kompiler berperilaku, mari

00:59.620 --> 01:02.220
kita gulir ke bawah ke tempat sebelum kurung

01:02.220 --> 01:03.760
kurawal penutup tetapi setelah

01:03.760 --> 01:06.620
kurung kurawal penutup bersarang ini, dan mari

01:06.620 --> 01:08.340
kita lihat beberapa opsi yang

01:08.340 --> 01:11.910
dapat kita tambahkan di sini yang tidak mempengaruhi kompiler

01:11.910 --> 01:14.190
atau perilaku langkah kompilasi, tetapi

01:14.190 --> 01:18.410
sebaliknya bagaimana kompiler bekerja dengan proyek ini, karena di sana

01:18.410 --> 01:23.410
misalnya, Anda dapat mengatur opsi pengecualian.

01:23.700 --> 01:26.770
Sekarang jika Anda menambahkan exclude di sini, itu akan

01:26.770 --> 01:30.450
menjadi array, dan apa yang bisa Anda masukkan di sini adalah jalur

01:30.450 --> 01:33.480
ke file yang tidak boleh disertakan dalam kompilasi ketika

01:33.480 --> 01:36.400
Anda menjalankan TSC pada seluruh proyek.

01:36.400 --> 01:38.010
Jadi misalnya, di sini kita bisa mengatakan bahwa

01:38.010 --> 01:41.137
kita ingin mengecualikan analitik. ts dari kompilasi, dan tentu saja,

01:41.137 --> 01:43.390
hal ini tidak masuk akal di sini, tetapi hanya

01:43.390 --> 01:45.300
untuk menunjukkan cara kerjanya.

01:45.300 --> 01:49.350
Jika kita melakukan itu dan sekarang kita jalankan kembali tsc, dan saya pertama-tama

01:49.350 --> 01:51.600
menghapus analitik. js sehingga kita dapat

01:51.600 --> 01:53.730
melihat apakah itu dibuat ulang, jika sekarang

01:53.730 --> 01:57.140
kita menjalankan tsc atau tsc dalam mode tontonan, Anda tidak melihat

01:57.140 --> 01:59.810
analisis. js dibuat, dan alasannya adalah

01:59.810 --> 02:02.060
karena kita mengecualikan file itu.

02:02.060 --> 02:03.340
Sekarang tentu saja untuk file

02:03.340 --> 02:04.670
ini, ini tidak masuk akal karena

02:04.670 --> 02:07.250
saya biasanya ingin memasukkannya, tetapi jika Anda memiliki

02:07.250 --> 02:09.360
file yang karena alasan tertentu tidak boleh dikompilasi,

02:09.360 --> 02:12.440
Anda dapat mengecualikannya seperti ini.

02:12.440 --> 02:14.210
Anda juga dapat bekerja dengan wildcard,

02:14.210 --> 02:15.810
dan misalnya, jika Anda memiliki

02:15.810 --> 02:20.810
file yang bernama analytics. dev. ts dan Anda tidak benar-benar ingin

02:20.850 --> 02:22.900
mengkompilasi itu, Anda bisa mengatakan semua

02:22.900 --> 02:25.770
file yang berakhir dev. ts tidak boleh dikompilasi, dan

02:25.770 --> 02:27.790
Anda dapat melakukannya dengan menambahkan

02:27.790 --> 02:29.620
tanda bintang di sini, yang pada dasarnya

02:29.620 --> 02:31.630
adalah wildcard, dan sekarang TypeScript

02:31.630 --> 02:33.750
akan mengabaikan file apa pun yang memiliki

02:33.750 --> 02:36.470
file . dev. termasuk.

02:36.470 --> 02:40.037
Anda juga bisa menambahkan asterisk, asterisk, slash

02:40.037 --> 02:43.080
di sini, dan itu berarti file apa pun dengan pola

02:43.080 --> 02:45.770
itu di folder mana pun akan diabaikan.

02:45.770 --> 02:47.420
Jadi ini adalah hal-hal yang dapat Anda atur

02:47.420 --> 02:49.220
di sini, satu-satunya hal yang ingin saya atur

02:49.220 --> 02:51.500
di sini, dan itu adalah pengaturan yang akan sering Anda

02:51.500 --> 02:54.103
temukan, adalah bahwa saya ingin mengecualikan node_modules,

02:55.409 --> 02:58.260
dan idenya di sini adalah bahwa saya tidak ingin mengkompilasi file TypeScript

02:58.260 --> 03:01.373
apa pun yang mungkin saya miliki di dalam node_modules.

03:02.449 --> 03:05.080
Sekarang, node_modules adalah folder yang menampung

03:05.080 --> 03:07.160
semua dependensi yang kita instal di sini

03:07.160 --> 03:09.570
dalam paket. json dan dependensi dari

03:09.570 --> 03:11.890
dependensi ini, dan oleh karena itu, ini adalah

03:11.890 --> 03:14.660
pustaka pihak ketiga yang kita impor, yang tidak ingin

03:14.660 --> 03:16.810
kita sentuh, dan jika salah satu dari pustaka

03:16.810 --> 03:18.510
ini harus mengirimkan beberapa

03:18.510 --> 03:20.630
kode TypeScript, maka kita tentu tidak

03:20.630 --> 03:22.690
ingin mengompilasinya, itu hanya akan

03:22.690 --> 03:25.840
memperlambat proses kompilasi kita, dan dalam kasus terburuk,

03:25.840 --> 03:29.200
bahkan mungkin merusak proyek kita.

03:29.200 --> 03:30.370
Jadi oleh karena itu, cukup

03:30.370 --> 03:33.330
umum untuk mengecualikan node_modules di sini, meskipun saya

03:33.330 --> 03:36.510
akan mengatakan, jika Anda tidak menentukan opsi kecualikan sama

03:36.510 --> 03:41.420
sekali, node_modules secara otomatis dikecualikan sebagai pengaturan default, jadi Anda tidak perlu

03:41.420 --> 03:43.980
menambahkan opsi ini di sini, ini akan menjadi default,

03:43.980 --> 03:48.520
saya hanya ingin menunjukkan bahwa pengecualian itu ada dan bagaimana Anda dapat menggunakannya

03:48.520 --> 03:50.570
jika satu-satunya hal yang ingin Anda kecualikan

03:50.570 --> 03:53.404
adalah node_modules, Anda tidak perlu menambahkan kunci pengecualian

03:53.404 --> 03:55.670
sama sekali.

03:55.670 --> 03:58.500
Jika Anda menambahkannya, Anda harus mengatur node_modules

03:58.500 --> 04:01.400
karena jika tidak, itu tidak akan mengecualikannya.

04:01.400 --> 04:04.570
Sekarang selain exclude, kita juga memiliki include, dan include

04:04.570 --> 04:06.630
memungkinkan Anda untuk melakukan yang sebaliknya,

04:06.630 --> 04:09.570
ini memungkinkan Anda untuk secara khusus memberi tahu TypeScript

04:09.570 --> 04:12.730
file mana yang ingin Anda sertakan dalam proses kompilasi, dan apa

04:12.730 --> 04:16.380
pun yang tidak tercantum di sini tidak akan dikompilasi, jadi jika saya menunjuk

04:16.380 --> 04:20.620
ke app. ts di sini, Anda akan melihat jika saya menjalankan ulang tsc, kami

04:20.620 --> 04:23.470
juga tidak akan mendapatkan analisis. ts, atau tidak ada

04:23.470 --> 04:25.570
analisis. file js yang harus saya katakan.

04:25.570 --> 04:26.403
Mengapa?

04:26.403 --> 04:29.230
Karena analitik. js tidak disertakan dalam include,

04:29.230 --> 04:32.370
dan seperti yang saya katakan, jika kita menetapkan kunci include, maka

04:32.370 --> 04:33.970
kita benar-benar harus menyertakan

04:33.970 --> 04:35.810
semua yang ingin kita kompilasi.

04:35.810 --> 04:40.080
Jadi tentu saja di sini, kita juga bisa menambahkan analitik. ts di sini, dan dengan tambahan itu, kita

04:40.080 --> 04:43.950
akan mulai dan menyusunnya, seperti yang Anda lihat sekarang, kita

04:43.950 --> 04:46.740
memiliki analitik. js, atau sebagai alternatif,

04:46.740 --> 04:49.650
kita tentukan seluruh folder di sini yang biasanya

04:49.650 --> 04:52.560
menyimpan file yang ingin kita kompilasi.

04:52.560 --> 04:55.520
Ngomong-ngomong, Exclude, jika diatur bersama include

04:55.520 --> 04:57.160
akan menyaring include, jadi jika

04:57.160 --> 05:00.290
kita mengecualikan beberapa sub-folder dari folder yang merupakan

05:00.290 --> 05:01.740
bagian dari include, maka sub-folder

05:01.740 --> 05:04.980
yang dikecualikan itu akan dikecualikan, jadi pada dasarnya

05:04.980 --> 05:08.720
kita menyusun include dikurangi exclude.

05:08.720 --> 05:10.420
Sekarang tentu saja di sini, saya tidak ingin mengatur

05:10.420 --> 05:12.520
include, saya ingin mengkompilasi semua file TypeScript,

05:12.520 --> 05:15.050
dan oleh karena itu saya tidak perlu khawatir tentang hal itu, mengecualikan

05:15.050 --> 05:17.200
node_modules adalah semua yang saya butuhkan, dan seperti

05:17.200 --> 05:18.930
yang saya jelaskan, secara teoritis saya bahkan

05:18.930 --> 05:20.280
tidak perlu menambahkannya karena itu

05:20.280 --> 05:22.423
akan dikecualikan secara default.

05:23.260 --> 05:25.310
Sekarang Anda juga memiliki opsi file, ini memungkinkan

05:25.310 --> 05:27.560
Anda untuk menunjuk pada file individual, jadi ini

05:27.560 --> 05:30.870
sedikit seperti include dengan perbedaan bahwa di sini Anda tidak dapat menentukan

05:30.870 --> 05:34.200
seluruh folder yang ingin Anda sertakan, sebagai gantinya Anda benar-benar

05:34.200 --> 05:36.020
hanya menentukan file individual yang ingin

05:36.020 --> 05:38.220
Anda kompilasi, yang mungkin menjadi pilihan untuk

05:38.220 --> 05:40.710
proyek-proyek yang lebih kecil di mana Anda tahu bahwa Anda

05:40.710 --> 05:48.560
hanya akan bekerja dengan file-file gratis, dan untuk beberapa alasan Anda punya beberapa file TypeScript lain yang tidak ingin Anda sentuh, maka Anda dapat mengatur daftar

05:48.560 --> 05:51.340
file seperti ini.

05:51.340 --> 05:53.360
Pada kenyataannya, Anda mungkin tidak

05:53.360 --> 05:55.740
memerlukan pengaturan itu sesering itu.

05:55.740 --> 05:58.530
Dan oleh karena itu, itu saja dengan kompilasi dasar

05:58.530 --> 06:00.910
atau opsi manajemen proyek di sini.

06:00.910 --> 06:03.900
Sekarang tentu saja, ada lebih banyak lagi yang dapat kita tentukan,

06:03.900 --> 06:08.230
lebih banyak lagi yang dapat kita tentukan tentang kompilator itu sendiri dan bagaimana

06:08.230 --> 06:10.793
perilakunya selama langkah kompilasi.
