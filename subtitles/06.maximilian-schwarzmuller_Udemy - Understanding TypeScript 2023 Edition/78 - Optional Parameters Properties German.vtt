WEBVTT

00:02.180 --> 00:05.590
Kursleiter: Lassen Sie uns noch einmal auf die Schnittstellen für Objekte zurückkommen.

00:05.590 --> 00:10.090
Sie können auch optionale Eigenschaften in Schnittstellen und

00:10.090 --> 00:14.100
auch in Klassen definieren, wie ich Ihnen zeigen werde.

00:14.100 --> 00:16.437
Dazu fügen Sie den Namen Ihrer Eigenschaft hinzu,

00:16.437 --> 00:20.740
sagen wir hier "outputName", das kann natürlich alles sein, was Sie wollen, und das sollte

00:20.740 --> 00:22.238
eine Zeichenkette sein.

00:22.238 --> 00:26.400
Ich möchte nicht, dass jede Klasse, die auf "Named" basiert,

00:26.400 --> 00:27.630
das haben muss.

00:27.630 --> 00:31.120
Es sollte fakultativ sein, ob man es haben will oder nicht.

00:31.120 --> 00:34.289
Sie können eine optionale Eigenschaft angeben, indem Sie

00:34.289 --> 00:37.670
ein Fragezeichen hinter den Eigenschaftsnamen setzen.

00:37.670 --> 00:40.130
Damit wird Tivescript mitgeteilt, dass diese Eigenschaft

00:40.130 --> 00:44.060
in Klassen, die diese Schnittstelle implementieren, vorhanden sein kann,

00:44.060 --> 00:45.680
aber nicht muss.

00:45.680 --> 00:48.540
Und deshalb erhalten wir hier in "Person" keinen

00:48.540 --> 00:51.180
Fehler, obwohl ich keine Eigenschaft "output

00:51.180 --> 00:53.440
name" habe, weil sie optional ist.

00:53.440 --> 00:56.072
Natürlich kann ich hier einen Ausgabenamen hinzufügen

00:56.072 --> 00:59.130
und diesen mit einem Wert initialisieren oder ihn wie jede

00:59.130 --> 01:02.800
andere Eigenschaft verwenden, aber das muss ich nicht.

01:02.800 --> 01:06.720
Bei einer Klasse können Sie jetzt auch eine optionale Eigenschaft haben.

01:06.720 --> 01:09.670
Let's same name sollte hier optional sein,

01:09.670 --> 01:13.840
weil wir hier vielleicht keinen Wert für N bekommen.

01:13.840 --> 01:16.010
Auch hier können wir in unserer Klasse ein

01:16.010 --> 01:17.460
Fragezeichen hinzufügen.

01:17.460 --> 01:20.890
Wir müssen es hier in Named optional machen, da wir sonst

01:20.890 --> 01:23.610
gegen unsere Schnittstelle verstoßen, die

01:23.610 --> 01:26.012
einen String vorschreibt.

01:26.012 --> 01:29.000
Ich sage jetzt, dass dies optional sein kann.

01:29.000 --> 01:30.510
Hier ist es also nicht optional,

01:30.510 --> 01:32.750
und wenn ich dies gleich N setze,

01:32.750 --> 01:36.190
möchte ich dies nur tun, wenn N wahr ist, wenn es gesetzt

01:36.190 --> 01:37.640
ist.

01:37.640 --> 01:40.080
Also nur, wenn es sich zum Beispiel nicht um eine leere Zeichenkette handelt.

01:40.080 --> 01:43.340
Andernfalls wird name nicht gesetzt, und das ist in Ordnung,

01:43.340 --> 01:46.524
weil ich es zu einer optionalen Eigenschaft sowohl hier in

01:46.524 --> 01:49.853
der Schnittstelle als auch in meiner Klasse gemacht habe.

01:50.790 --> 01:53.070
Wenn wir nun ein neues Objekt konstruieren,

01:53.070 --> 01:56.203
könnten wir dies tun, ohne einen Namen zu übergeben.

01:57.060 --> 01:59.813
Um dies zu ermöglichen, müssen wir in den Konstruktor

01:59.813 --> 02:02.600
gehen und hier einen Standardwert angeben oder

02:02.600 --> 02:05.120
auch ein Fragezeichen hinzufügen.

02:05.120 --> 02:06.260
Das ist alles, um es zu ermöglichen.

02:06.260 --> 02:08.800
Sie können optionale Parameter hinzufügen,

02:08.800 --> 02:12.170
indem Sie entweder einen Standardrückfallwert angeben

02:12.170 --> 02:13.990
oder ein Fragezeichen hinzufügen,

02:13.990 --> 02:17.170
wobei der Standardwert undefiniert ist.

02:17.170 --> 02:20.450
Und jetzt können wir diesen Konstruktor ohne einen Wert aufrufen, weil

02:20.450 --> 02:22.446
wir diesen optionalen Parameter haben und

02:22.446 --> 02:25.960
weil wir die optionale Eigenschaft haben, die in Ordnung ist, wir brauchen

02:25.960 --> 02:27.930
sie nicht zu initialisieren.

02:27.930 --> 02:29.648
Und wenn man danach grüßt,

02:29.648 --> 02:33.510
dann wird dieser Name natürlich undefiniert ausfallen.

02:33.510 --> 02:35.640
Wahrscheinlich sollten wir auch hier prüfen, ob wir

02:35.640 --> 02:37.000
einen Namen haben, und wenn ja, konsultieren

02:37.000 --> 02:39.100
wir ihn. dies protokollieren.

02:39.100 --> 02:42.970
Sonst trösten wir. loggen Sie "hallo" ohne Hinweis auf

02:42.970 --> 02:45.200
den Namen, denn wir haben keinen Namen.

02:45.200 --> 02:47.170
Wenn wir sagen, dass, wenn alles kompiliert

02:47.170 --> 02:48.840
und wir sehen nur hallo hier, weil es

02:48.840 --> 02:51.520
nicht einen Namen zur Verfügung gestellt hat.

02:51.520 --> 02:53.950
Das wären also optionale Eigenschaften

02:53.950 --> 02:56.008
sowohl in einer Klasse als auch in einer

02:56.008 --> 02:59.910
Schnittstelle und auch in meiner Konstruktorliste hier.

02:59.910 --> 03:01.660
Um es noch einmal deutlich zu machen:

03:01.660 --> 03:04.790
Diese drei Dinge sind nur lose miteinander verbunden.

03:04.790 --> 03:07.980
Sie können eine optionale Eigenschaft in eine Schnittstelle aufnehmen

03:07.980 --> 03:11.910
und sie dann als nicht optionale Eigenschaft in der Klasse implementieren.

03:11.910 --> 03:14.550
Sie müssen dann nur sicherstellen, dass Ihre Logik so

03:14.550 --> 03:17.810
ist, dass dies immer initialisiert wird, sonst erhalten Sie einen

03:17.810 --> 03:19.720
Fehler, wie Sie gerade gesehen haben.

03:19.720 --> 03:22.180
Oder Sie haben eine optionale Eigenschaft

03:23.723 --> 03:26.870
in einer Schnittstelle und eine optionale Eigenschaft

03:26.870 --> 03:31.630
in Ihrer Klasse, dann müssen Sie hier nicht in allen Fällen einen Wert zuweisen.

03:31.630 --> 03:34.210
Darüber hinaus und völlig unabhängig davon können

03:34.210 --> 03:36.020
Sie optionale Parameter in Funktionen

03:36.020 --> 03:38.300
und somit auch in Methoden einschließlich der

03:38.300 --> 03:40.300
Konstruktormethode haben.

03:40.300 --> 03:42.670
Optionale Parameter werden entweder mit einem

03:42.670 --> 03:43.810
Fragezeichen definiert,

03:43.810 --> 03:48.040
wobei der Standardwert, wenn er nicht gesetzt wird, daher undefiniert ist, oder

03:48.040 --> 03:51.690
einfach durch Zuweisung eines Standardwerts wie diesem.

03:51.690 --> 03:53.785
Wie Sie dann erfahren, ist auch dies optional

03:53.785 --> 03:56.960
und der Standardwert wird angenommen, wenn Sie keinen genaueren

03:56.960 --> 03:58.750
Wert angeben.

03:58.750 --> 04:00.720
Das gibt Ihnen also mehr Flexibilität bei

04:00.720 --> 04:02.950
der Strukturierung Ihrer Klassen, und wenn wir

04:02.950 --> 04:04.770
über Schnittstellen sprechen, wie Sie

04:04.770 --> 04:06.860
Ihre Verträge strukturieren, an die sich die

04:06.860 --> 04:09.103
Klassen möglicherweise halten müssen.
