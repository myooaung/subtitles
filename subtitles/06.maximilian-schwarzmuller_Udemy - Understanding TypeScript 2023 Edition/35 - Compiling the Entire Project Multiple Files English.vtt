WEBVTT

1
00:00:02.120 --> 00:00:04.590
<v Instructor>So as I mentioned in the last lecture,</v>

2
00:00:04.590 --> 00:00:06.080
watch mode is a great start

3
00:00:06.080 --> 00:00:08.910
but what if we have more than one TypeScript file?

4
00:00:08.910 --> 00:00:13.370
What if we also have an analytics.ts file

5
00:00:13.370 --> 00:00:18.370
where we hypothetically send analytics data to our server?

6
00:00:18.530 --> 00:00:21.430
Now, here to just have anything in there,

7
00:00:21.430 --> 00:00:24.240
I'll just put in a console.log statement

8
00:00:24.240 --> 00:00:26.710
but of course, you could be sending HTTP requests

9
00:00:26.710 --> 00:00:29.180
to your analytics service here as I said.

10
00:00:29.180 --> 00:00:32.685
So let's say we also did import this file here

11
00:00:32.685 --> 00:00:36.420
in our index.html file.

12
00:00:36.420 --> 00:00:40.320
If we point at analytics.js here

13
00:00:40.320 --> 00:00:41.730
which does not exist yet

14
00:00:41.730 --> 00:00:44.760
but which will exist after compilation,

15
00:00:44.760 --> 00:00:46.660
then we could be loading these two files

16
00:00:46.660 --> 00:00:48.950
and of course, we wanna compile both files

17
00:00:48.950 --> 00:00:50.900
whenever one of them changes.

18
00:00:50.900 --> 00:00:52.490
Now, for that, it would be nice

19
00:00:52.490 --> 00:00:55.320
if we could enter some general watch mode

20
00:00:55.320 --> 00:00:57.630
where we just run tsc like this

21
00:00:57.630 --> 00:00:59.790
so without pointing at a file

22
00:00:59.790 --> 00:01:02.480
and it just watches our entire project folder

23
00:01:02.480 --> 00:01:05.823
and recompiles any TypeScript file that might change.

24
00:01:06.720 --> 00:01:08.960
Well, turns out that this is possible.

25
00:01:08.960 --> 00:01:11.340
For that we just need to tell TypeScript

26
00:01:11.340 --> 00:01:15.020
that this here is one project

27
00:01:15.020 --> 00:01:16.750
that should be managed with TypeScript

28
00:01:16.750 --> 00:01:18.980
and we do that by first of all,

29
00:01:18.980 --> 00:01:20.700
and we only need to do this once,

30
00:01:20.700 --> 00:01:23.710
running tsc --init.

31
00:01:23.710 --> 00:01:26.170
So I'm not pointing at a specific file here,

32
00:01:26.170 --> 00:01:29.540
I just run tsc and then --init here

33
00:01:29.540 --> 00:01:31.230
and again, this is only required once.

34
00:01:31.230 --> 00:01:33.530
It will initialize this project

35
00:01:33.530 --> 00:01:36.390
in which you run this command as a TypeScript project.

36
00:01:36.390 --> 00:01:39.910
That means it will now basically tell TypeScript

37
00:01:39.910 --> 00:01:41.850
that everything in the folder

38
00:01:41.850 --> 00:01:44.160
where you run this command and therefore it's important

39
00:01:44.160 --> 00:01:46.470
that you navigated into the right folder

40
00:01:46.470 --> 00:01:48.070
before you ran this command

41
00:01:48.070 --> 00:01:50.550
with the built-in terminal here in VS Code.

42
00:01:50.550 --> 00:01:52.910
I'm automatically in this project folder

43
00:01:52.910 --> 00:01:55.740
where my files are so that this project

44
00:01:55.740 --> 00:01:57.370
is now managed by TypeScript.

45
00:01:57.370 --> 00:01:58.400
So let's hit Enter

46
00:01:58.400 --> 00:02:02.634
and what this does is it creates this tsconfig.json file.

47
00:02:02.634 --> 00:02:06.580
This basically is the indicator for TypeScript

48
00:02:06.580 --> 00:02:09.950
that the project in which this file lies

49
00:02:09.950 --> 00:02:12.239
and all sub folders of this folder

50
00:02:12.239 --> 00:02:14.710
should be managed by TypeScript.

51
00:02:14.710 --> 00:02:16.080
Now, if we have a look into this file,

52
00:02:16.080 --> 00:02:17.860
we see there a bunch of options,

53
00:02:17.860 --> 00:02:19.330
most of them commented out,

54
00:02:19.330 --> 00:02:22.090
they're just there so that you see that you could set them

55
00:02:22.090 --> 00:02:24.500
and you've got a short explanation here as well

56
00:02:24.500 --> 00:02:26.380
but we don't have to worry about those right now.

57
00:02:26.380 --> 00:02:29.040
We'll dive into them in a second.

58
00:02:29.040 --> 00:02:31.610
For the moment, let's just close this file here

59
00:02:32.800 --> 00:02:35.100
and let's see what this gives us

60
00:02:35.100 --> 00:02:36.550
because what it does give us

61
00:02:36.550 --> 00:02:39.870
is that we can now run just tsc like this

62
00:02:39.870 --> 00:02:42.610
without pointing at a specific file.

63
00:02:42.610 --> 00:02:45.550
And what this will do is it will tell TypeScript

64
00:02:45.550 --> 00:02:49.080
to go ahead and compile all TypeScript files

65
00:02:49.080 --> 00:02:53.090
so all .ts files it can find in this project

66
00:02:53.090 --> 00:02:54.770
so if I hit Enter here,

67
00:02:54.770 --> 00:02:56.830
you see, this takes a while,

68
00:02:56.830 --> 00:03:00.530
and now what we got is this analytics.js file

69
00:03:00.530 --> 00:03:02.620
and this app.js file.

70
00:03:02.620 --> 00:03:05.160
Now, the analytics.js file was just created

71
00:03:05.160 --> 00:03:08.010
by TypeScript because it found

72
00:03:08.010 --> 00:03:10.060
that we have the analytics.ts file

73
00:03:10.060 --> 00:03:13.390
and as I said, it will now compile all TypeScript files

74
00:03:13.390 --> 00:03:14.730
in the project.

75
00:03:14.730 --> 00:03:17.660
And of course, this can also be combined with watch mode.

76
00:03:17.660 --> 00:03:20.630
You can run tsc -w

77
00:03:20.630 --> 00:03:23.420
or --watch as I showed before

78
00:03:23.420 --> 00:03:26.970
and this will now enter watch mode for all TypeScript files.

79
00:03:26.970 --> 00:03:29.590
So now whenever I change one of them

80
00:03:29.590 --> 00:03:31.920
and I save it, it will recompile.

81
00:03:31.920 --> 00:03:33.840
It will recompile that file

82
00:03:33.840 --> 00:03:36.100
that changed and therefore, all the reflected change

83
00:03:36.100 --> 00:03:37.800
in the JavaScript file.

84
00:03:37.800 --> 00:03:38.633
And it's now here.

85
00:03:38.633 --> 00:03:41.430
If I got back to my page, we see sending data as well

86
00:03:41.430 --> 00:03:44.463
because now the analytics.ts file was also compiled.

