WEBVTT

00:02.310 --> 00:04.270
Istruttore: Quindi stiamo usando i moduli ES.

00:04.270 --> 00:06.470
È emerso che esistono alcune varianti di questa

00:06.470 --> 00:08.550
sintassi di esportazione e importazione

00:08.550 --> 00:10.100
che è bene conoscere.

00:10.100 --> 00:12.276
Ad esempio, è possibile raggruppare le importazioni.

00:12.276 --> 00:14.300
Diciamo che qui, nell'input del

00:14.300 --> 00:15.870
progetto, sto importando

00:15.870 --> 00:18.060
due cose dal file di convalida.

00:18.060 --> 00:22.030
Si potrebbe voler raggruppare il tutto in un unico oggetto,

00:22.030 --> 00:25.493
dove poter chiamare dot validatable e dot validate,

00:25.493 --> 00:29.170
in modo da non dover chiamare validate in questo modo.

00:29.170 --> 00:30.940
Forse si vuole chiamarla così, ma se

00:30.940 --> 00:33.510
si ha, per esempio, una funzione con lo stesso nome e lo

00:33.510 --> 00:35.210
stesso anno o qualcosa di simile e si

00:35.210 --> 00:36.719
vuole evitare uno scontro di nomi

00:36.719 --> 00:38.250
o si vuole rendere chiaro che questa

00:38.250 --> 00:40.292
appartiene a un qualche tipo di pacchetto,

00:40.292 --> 00:42.069
si può raggruppare.

00:42.069 --> 00:45.090
Per raggruppare le importazioni non si importano

00:45.090 --> 00:49.150
così, con le parentesi graffe, ma si usa un asterisco, che

00:49.150 --> 00:51.970
significa importare tutto da quel file,

00:51.970 --> 00:55.080
come e poi qualsiasi alias a scelta, per esempio

00:55.080 --> 00:57.192
validazione.

00:57.192 --> 00:59.280
Ora bisogna andare nei punti in cui si

00:59.280 --> 01:01.070
usa qualcosa da quel file e usarlo

01:01.070 --> 01:05.470
come una convalida dell'oggetto. validabile.

01:05.470 --> 01:07.920
Quindi tutto ciò che viene esportato in quel file, che

01:07.920 --> 01:10.400
ora viene raggruppato con questo nome, è accessibile

01:10.400 --> 01:12.341
attraverso la notazione a punti.

01:12.341 --> 01:15.700
Quindi la convalida. validabile e poi anche laggiù,

01:15.700 --> 01:18.830
dove c'è la funzione validate, c'è ovviamente la

01:18.830 --> 01:25.197
validazione. convalidare, convalidare. convalidare e convalidare.

01:25.197 --> 01:25.197
convalidare.

01:25.197 --> 01:29.604
E con questo vedrete che la convalida funziona.

01:29.604 --> 01:32.490
Il raggruppamento è una cosa che si può fare.

01:32.490 --> 01:34.960
L'alias è un'altra cosa che si

01:34.960 --> 01:36.890
può fare in generale.

01:36.890 --> 01:38.830
Non ti piace l'autobind in questo modo,

01:38.830 --> 01:41.270
vuoi avere un carattere maiuscolo all'inizio?

01:41.270 --> 01:45.360
È possibile assegnare un alias con la parola chiave.

01:45.360 --> 01:48.150
Si può usare anche all'interno delle parentesi graffe.

01:48.150 --> 01:50.431
Quindi rinominare questa e solo questa importazione.

01:50.431 --> 01:54.350
Naturalmente, non è possibile rinominarlo nel file originale.

01:54.350 --> 01:58.390
È importato solo con un nome diverso in questo file.

01:58.390 --> 02:01.280
Quindi, invece di usare l'autobind con la A

02:01.280 --> 02:05.780
minuscola, dobbiamo usare il nome dell'alias con la A maiuscola.

02:05.780 --> 02:09.150
Questa può essere un'altra bella funzione per evitare scontri

02:09.150 --> 02:11.570
di nomi, ad esempio se nello stesso file c'è un'altra

02:11.570 --> 02:14.543
cosa chiamata autobind con la a minuscola.

02:16.180 --> 02:20.010
È inoltre possibile lavorare con le esportazioni predefinite.

02:20.010 --> 02:22.926
Se si dispone di un file che esporta solo una cosa,

02:22.926 --> 02:25.120
diciamo un componente di base.

02:25.120 --> 02:28.020
In realtà abbiamo molti file che esportano solo una cosa.

02:28.020 --> 02:29.240
Ma diciamo che in questo

02:29.240 --> 02:31.360
file non vogliamo esportare in questo modo,

02:31.360 --> 02:33.770
una cosiddetta esportazione con nome, perché

02:33.770 --> 02:37.330
abbiamo importato per nome qui tra le parentesi graffe.

02:37.330 --> 02:40.258
Dobbiamo usare il nome esatto che abbiamo usato qui.

02:40.258 --> 02:42.170
Se non si desidera farlo, è sufficiente

02:42.170 --> 02:45.140
aggiungere un'altra parola chiave, default.

02:45.140 --> 02:48.940
Questo indica a JavaScript che questa è la principale, beh,

02:48.940 --> 02:52.064
l'esportazione predefinita di questo file.

02:52.064 --> 02:55.929
Potreste comunque avere altre esportazioni nominative

02:55.929 --> 02:58.500
che sarebbero consentite.

02:58.500 --> 03:01.220
Ops, ad esempio una costante qui sarebbe

03:01.220 --> 03:02.120
consentita.

03:02.120 --> 03:04.750
Si possono avere esportazioni nominate e predefinite

03:04.750 --> 03:06.130
nello stesso file, ma se si

03:06.130 --> 03:07.800
usa un'esportazione predefinita,

03:07.800 --> 03:11.440
si può avere solo un'esportazione predefinita per file.

03:11.440 --> 03:14.210
Quindi qui ho la mia esportazione predefinita e ora

03:14.210 --> 03:16.926
nei file che ho importato, non si importa per nome.

03:16.926 --> 03:19.900
È possibile importare solo esportazioni denominate per nome.

03:19.900 --> 03:22.639
Ad esempio, l'aggiunta di qualcosa di costante.

03:22.639 --> 03:24.743
Per importare il proprio predefinito

03:24.743 --> 03:28.600
è sufficiente scegliere un nome a piacere, che non deve necessariamente

03:28.600 --> 03:30.890
corrispondere al nome utilizzato nel file

03:30.890 --> 03:32.400
esportato.

03:32.400 --> 03:34.354
Quindi non è necessario utilizzare il componente ora.

03:34.354 --> 03:37.037
A questo punto si può usare solo Cmp come esempio.

03:37.037 --> 03:40.700
E importarlo in questo modo, senza parentesi graffe.

03:40.700 --> 03:44.127
Inoltre non c'è nessuna stella, quindi non sto importando tutto.

03:44.127 --> 03:46.827
Sto solo importando l'impostazione predefinita.

03:46.827 --> 03:49.460
Pertanto, questa opzione è disponibile solo se il file da

03:49.460 --> 03:52.210
cui si sta importando ha un'esportazione predefinita.

03:52.210 --> 03:53.850
Perché questo dice a JavaScript:

03:53.850 --> 03:58.010
"Voglio usare l'esportazione predefinita di quel file".

03:58.010 --> 04:00.520
Poi posso dare un nome a questo Cmp, naturalmente.

04:00.520 --> 04:02.569
Oppure devo usare Cmp, ovviamente ora.

04:02.569 --> 04:04.509
Il componente non è più consentito perché

04:04.509 --> 04:06.666
non lo sto importando con quel nome.

04:06.666 --> 04:09.710
Naturalmente, ora dobbiamo modificare questo aspetto anche in project-item

04:09.710 --> 04:10.675
e project-list.

04:10.675 --> 04:12.486
Utilizziamo l'esportazione predefinita.

04:12.486 --> 04:14.515
Io mi atterrò ai componenti, ma voi non siete obbligati

04:14.515 --> 04:16.540
a farlo, come ho appena dimostrato.

04:16.540 --> 04:18.300
Si può usare qualsiasi nome,

04:18.300 --> 04:21.900
ma per semplicità userò il termine "component".

04:21.900 --> 04:24.075
Le esportazioni predefinite possono essere utili

04:24.075 --> 04:25.740
se si ha solo una cosa per file.

04:25.740 --> 04:29.080
Personalmente preferisco le esportazioni con nome, perché

04:29.080 --> 04:31.075
si ottiene il completamento automatico,

04:31.075 --> 04:33.590
si impone uno schema di denominazione chiaro,

04:33.590 --> 04:37.290
e se un altro sviluppatore importa la vostra classe o la vostra cosa esportata,

04:37.290 --> 04:40.460
deve usare il vostro nome, il che di solito è positivo perché

04:40.460 --> 04:41.870
permette di imporre certe

04:41.870 --> 04:43.290
convenzioni di denominazione

04:43.290 --> 04:46.579
in un team o in un'organizzazione.

04:46.579 --> 04:49.840
Per questo motivo, personalmente preferisco le esportazioni con nome, ma naturalmente

04:49.840 --> 04:51.740
è necessario conoscere anche l'esportazione

04:51.740 --> 04:53.340
predefinita, che può essere utilizzata

04:53.340 --> 04:54.853
in questo modo.
