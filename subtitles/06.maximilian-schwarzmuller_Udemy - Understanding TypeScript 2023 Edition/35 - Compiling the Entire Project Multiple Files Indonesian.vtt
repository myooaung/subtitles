WEBVTT

00:02.120 --> 00:04.590
Instruktur: Jadi seperti yang saya sebutkan di kuliah terakhir,

00:04.590 --> 00:06.080
watch mode adalah awal yang baik tetapi

00:06.080 --> 00:08.910
bagaimana jika kita memiliki lebih dari satu file TypeScript?

00:08.910 --> 00:13.370
Bagaimana jika kita juga memiliki analitik. ts file di mana kita secara

00:13.370 --> 00:18.370
hipotetis mengirim data analitik ke server kita?

00:18.530 --> 00:21.430
Sekarang, di sini untuk memiliki apa pun di sana, saya hanya

00:21.430 --> 00:24.240
akan memasukkan konsol. tetapi tentu saja, Anda bisa

00:24.240 --> 00:26.710
mengirimkan permintaan HTTP ke layanan analitik

00:26.710 --> 00:29.180
Anda di sini seperti yang saya katakan.

00:29.180 --> 00:32.685
Jadi, katakanlah kita juga mengimpor file ini di

00:32.685 --> 00:36.420
sini dalam indeks kita. file html.

00:36.420 --> 00:40.320
Jika kita menunjuk pada analitik. js di sini yang belum ada tetapi

00:40.320 --> 00:41.730
akan ada setelah kompilasi,

00:41.730 --> 00:44.760
maka kita bisa memuat kedua file ini dan tentu saja,

00:44.760 --> 00:46.660
kita ingin mengkompilasi kedua

00:46.660 --> 00:48.950
file tersebut setiap kali salah satunya

00:48.950 --> 00:50.900
berubah.

00:50.900 --> 00:52.490
Sekarang, untuk itu, akan lebih

00:52.490 --> 00:55.320
baik jika kita bisa masuk ke beberapa mode pengawasan umum

00:55.320 --> 00:57.630
di mana kita hanya menjalankan tsc seperti ini

00:57.630 --> 00:59.790
sehingga tanpa menunjuk pada sebuah file dan

00:59.790 --> 01:02.480
hanya mengawasi seluruh folder proyek kita dan mengkompilasi

01:02.480 --> 01:05.823
ulang setiap file TypeScript yang mungkin berubah.

01:06.720 --> 01:08.960
Nah, ternyata hal ini dimungkinkan.

01:08.960 --> 01:11.340
Untuk itu kita hanya perlu memberi tahu

01:11.340 --> 01:15.020
TypeScript bahwa di sini adalah salah satu proyek yang harus

01:15.020 --> 01:16.750
dikelola dengan TypeScript

01:16.750 --> 01:18.980
dan kita melakukannya dengan pertama-tama,

01:18.980 --> 01:20.700
dan kita hanya perlu melakukan

01:20.700 --> 01:23.710
ini sekali, menjalankan tsc --init.

01:23.710 --> 01:26.170
Jadi saya tidak menunjuk pada file tertentu di sini,

01:26.170 --> 01:29.540
saya hanya menjalankan tsc dan kemudian --init di sini dan sekali lagi,

01:29.540 --> 01:31.230
ini hanya diperlukan sekali.

01:31.230 --> 01:33.530
Ini akan menginisialisasi proyek ini di mana Anda

01:33.530 --> 01:36.390
menjalankan perintah ini sebagai proyek TypeScript.

01:36.390 --> 01:39.910
Itu berarti sekarang pada dasarnya akan memberi tahu TypeScript bahwa semua

01:39.910 --> 01:41.850
yang ada di folder tempat Anda menjalankan

01:41.850 --> 01:44.160
perintah ini dan oleh karena itu penting bagi Anda

01:44.160 --> 01:46.470
untuk menavigasi ke folder yang tepat sebelum Anda

01:46.470 --> 01:48.070
menjalankan perintah ini dengan

01:48.070 --> 01:50.550
terminal bawaan di sini di VS Code.

01:50.550 --> 01:52.910
Saya secara otomatis di folder proyek ini di mana

01:52.910 --> 01:55.740
file-file saya berada sehingga proyek ini sekarang dikelola

01:55.740 --> 01:57.370
oleh TypeScript.

01:57.370 --> 01:58.400
Jadi mari kita tekan Enter dan

01:58.400 --> 02:02.634
apa yang dilakukannya adalah menciptakan tsconfig ini. file json.

02:02.634 --> 02:06.580
Ini pada dasarnya adalah indikator untuk TypeScript

02:06.580 --> 02:09.950
bahwa proyek di mana file ini berada dan semua

02:09.950 --> 02:12.239
sub folder dari folder ini harus

02:12.239 --> 02:14.710
dikelola oleh TypeScript.

02:14.710 --> 02:16.080
Sekarang, jika kita melihat ke dalam

02:16.080 --> 02:17.860
file ini, kita melihat ada banyak opsi, sebagian

02:17.860 --> 02:19.330
besar dikomentari, mereka hanya ada

02:19.330 --> 02:22.090
di sana sehingga Anda melihat bahwa Anda dapat mengaturnya dan Anda juga

02:22.090 --> 02:24.500
memiliki penjelasan singkat di sini, tetapi kita tidak perlu

02:24.500 --> 02:26.380
mengkhawatirkan hal itu sekarang.

02:26.380 --> 02:29.040
Kita akan menyelaminya sebentar lagi.

02:29.040 --> 02:31.610
Untuk saat ini, mari kita tutup file ini di sini dan

02:32.800 --> 02:35.100
mari kita lihat apa yang diberikannya kepada

02:35.100 --> 02:36.550
kita karena apa yang diberikannya

02:36.550 --> 02:39.870
kepada kita adalah bahwa kita sekarang dapat menjalankan tsc seperti

02:39.870 --> 02:42.610
ini tanpa menunjuk pada file tertentu.

02:42.610 --> 02:45.550
Dan apa yang akan dilakukan ini akan memberitahu TypeScript

02:45.550 --> 02:49.080
untuk melanjutkan dan mengkompilasi semua file TypeScript

02:49.080 --> 02:53.090
sehingga semua file . ts file yang dapat ditemukan dalam proyek ini jadi

02:53.090 --> 02:54.770
jika saya menekan Enter di sini, Anda lihat,

02:54.770 --> 02:56.830
ini membutuhkan waktu beberapa saat, dan sekarang

02:56.830 --> 03:00.530
yang kita dapatkan adalah analitik ini. js dan aplikasi

03:00.530 --> 03:02.620
ini. file js.

03:02.620 --> 03:05.160
Sekarang, analisisnya. js baru saja dibuat oleh

03:05.160 --> 03:08.010
TypeScript karena ditemukan bahwa kita memiliki

03:08.010 --> 03:10.060
analitik. ts dan seperti yang

03:10.060 --> 03:13.390
saya katakan, sekarang akan mengkompilasi semua file TypeScript

03:13.390 --> 03:14.730
dalam proyek.

03:14.730 --> 03:17.660
Dan tentu saja, ini juga bisa dikombinasikan dengan watch mode.

03:17.660 --> 03:20.630
Anda dapat menjalankan tsc -w atau --watch seperti

03:20.630 --> 03:23.420
yang saya tunjukkan sebelumnya dan ini sekarang

03:23.420 --> 03:26.970
akan masuk ke mode pengawasan untuk semua file TypeScript.

03:26.970 --> 03:29.590
Jadi sekarang setiap kali saya mengubah salah satu dari mereka

03:29.590 --> 03:31.920
dan saya menyimpannya, itu akan dikompilasi ulang.

03:31.920 --> 03:33.840
Ini akan mengkompilasi ulang file yang berubah

03:33.840 --> 03:36.100
dan oleh karena itu, semua perubahan yang tercermin

03:36.100 --> 03:37.800
dalam file JavaScript.

03:37.800 --> 03:38.633
Dan sekarang sudah ada di sini.

03:38.633 --> 03:41.430
Jika saya kembali ke halaman saya, kami melihat pengiriman data

03:41.430 --> 03:44.463
juga karena sekarang analitik. ts juga dikompilasi.
