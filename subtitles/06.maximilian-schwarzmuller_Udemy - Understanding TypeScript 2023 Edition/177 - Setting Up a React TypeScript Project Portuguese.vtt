WEBVTT

00:02.150 --> 00:04.320
Narrador: Quando se trata de construir

00:04.320 --> 00:07.220
um React App com Typescript, é claro que precisamos

00:07.220 --> 00:10.800
de uma configuração de projeto, que seja capaz de tanto lidar

00:10.800 --> 00:13.730
com nosso código React, de modo que coisas como

00:13.730 --> 00:17.480
JSX, por exemplo, e que compile estadias e otimize nosso código

00:17.480 --> 00:21.500
React, e que ao mesmo tempo, seja capaz de entender TypeScript e de

00:21.500 --> 00:25.320
compilar TypeScript para JavaScript.

00:25.320 --> 00:27.430
Montar tal projeto por conta própria

00:27.430 --> 00:28.750
pode ser bastante difícil

00:28.750 --> 00:31.940
e, portanto, é bom que Create React App, uma ferramenta

00:31.940 --> 00:34.080
gerenciada pela equipe React, que podemos

00:34.080 --> 00:36.420
usar para criar projetos React, suporte

00:36.420 --> 00:39.110
o TypeScript out of the box.

00:39.110 --> 00:42.110
Você pode simplesmente usar o Google para Create React App

00:42.110 --> 00:44.590
TypeScript, e você deve encontrar esta entrada

00:44.590 --> 00:47.000
na documentação oficial do Create React App.

00:47.000 --> 00:49.140
Lá você aprenderá como você pode adicionar

00:49.140 --> 00:51.540
TypeScript a um projeto existente, aqui,

00:51.540 --> 00:54.850
estas etapas, ou como você pode criar um novo projeto com

00:54.850 --> 00:57.290
Create React App e TypeScript, e aqui você

00:57.290 --> 01:00.400
verá um comando que você pode simplesmente copiar,

01:00.400 --> 01:03.030
para criar um novo projeto React, que também

01:03.030 --> 01:05.680
suporta TypeScript.

01:05.680 --> 01:07.020
Agora, vou usar isto

01:07.020 --> 01:11.110
aqui, e aqui já estou em uma pasta, que eu quero usar.

01:11.110 --> 01:13.210
Esta é simplesmente a pasta do projeto que eu

01:13.210 --> 01:14.790
quero usar para este projeto.

01:14.790 --> 01:16.900
E então vamos apenas colar neste comando.

01:16.900 --> 01:17.740
E neste caso,

01:17.740 --> 01:20.970
porque quero usar a pasta em que já estou, também aqui

01:20.970 --> 01:22.710
no meu terminal, vou substituir

01:22.710 --> 01:25.190
o nome do projeto por um ponto, para que

01:25.190 --> 01:27.590
ele não crie uma nova subpasta e crie o

01:27.590 --> 01:29.550
projeto nela, mas que em vez disso

01:29.550 --> 01:31.730
use esta pasta.

01:31.730 --> 01:33.720
Isto é, naturalmente, opcional.

01:33.720 --> 01:35.850
Também quero dizer que notei que este

01:35.850 --> 01:38.070
comando nem sempre funciona.

01:38.070 --> 01:41.390
Às vezes, ele cria um projeto JavaScript regular.

01:41.390 --> 01:42.590
Para consertar isso,

01:42.590 --> 01:46.343
você pode instalar o Create React App globalmente em sua máquina.

01:47.340 --> 01:49.140
Algo que você pode fazer simplesmente

01:49.140 --> 01:54.140
executando npm install -g create-react-app, em Mac e Linux você pode precisar adicionar

01:54.780 --> 01:56.560
um sudo em frente a isto.

01:56.560 --> 01:59.360
E com isto instalado em sua máquina, você pode realmente

01:59.360 --> 02:03.010
executar este comando aqui, mas sem npx, exatamente como este, e

02:03.010 --> 02:05.920
então ele deve definitivamente funcionar.

02:05.920 --> 02:07.270
Então é isso que vou fazer

02:07.270 --> 02:09.320
aqui, mas normalmente, também deve

02:09.320 --> 02:12.250
funcionar sem instalá-lo usando apenas a ferramenta

02:12.250 --> 02:15.520
npx, que faz parte da ferramenta npm que já instalamos junto

02:15.520 --> 02:18.840
com o Node. js no início do curso.

02:18.840 --> 02:23.250
Portanto, por enquanto, um novo projeto é inserido nesta pasta.

02:23.250 --> 02:27.460
E nesse projeto, ele criará uma aplicação React onde todos nós

02:27.460 --> 02:31.070
podemos escrever todo nosso código com TypeScript.

02:31.070 --> 02:32.460
Portanto, vamos esperar que isto termine.

02:32.460 --> 02:34.610
E vamos ver o que isso nos dá.

02:34.610 --> 02:36.010
E terminou.

02:36.010 --> 02:37.930
Portanto, vamos dar uma olhada no que temos.

02:37.930 --> 02:41.000
Temos uma pasta, que você pode reconhecer que é basicamente

02:41.000 --> 02:43.970
a mesma estrutura que você tem quando cria um React App

02:43.970 --> 02:45.500
sem TypeScript.

02:45.500 --> 02:48.790
Mas já podemos ver o tsconfig. arquivo json.

02:48.790 --> 02:51.020
A propósito, você também pode editar este arquivo e

02:51.020 --> 02:52.940
ajustá-lo de acordo com suas necessidades.

02:52.940 --> 02:55.250
Afinal, você aprendeu como ajustar esta configuração

02:55.250 --> 02:57.120
mais cedo no curso.

02:57.120 --> 02:58.460
A configuração padrão deve,

02:58.460 --> 03:01.160
no entanto, ser boa para a maioria dos casos de uso.

03:01.160 --> 03:02.950
Agora, se explorarmos a pasta src, que

03:02.950 --> 03:05.230
é onde vamos escrever nosso código fonte, também

03:05.230 --> 03:08.550
encontramos um monte de . arquivos tsx lá dentro.

03:08.550 --> 03:11.900
Até agora, no curso, não trabalhamos com . tsx, mas somente com

03:11.900 --> 03:13.787
arquivos . ts arquivos. tsx foi simplesmente

03:13.787 --> 03:17.800
escolhido aqui, porque estes são arquivos onde você não pode simplesmente

03:17.800 --> 03:20.530
escrever código TypeScript, mas todo o código

03:20.530 --> 03:22.000
JSX, que é apenas Reage especial,

03:22.000 --> 03:25.570
sintaxe JavaScript, onde você escreve marcação HTML dentro

03:25.570 --> 03:29.930
de seu JavaScript, ou neste caso, código TypeScript.

03:29.930 --> 03:32.880
É o que recebemos aqui.

03:32.880 --> 03:34.920
Agora nestes arquivos, já podemos ver alguma

03:34.920 --> 03:36.500
sintaxe TypeScript, por exemplo,

03:36.500 --> 03:38.800
aqui, temos uma atribuição de tipo, eu darei uma

03:38.800 --> 03:41.480
olhada de perto neste tipo mais tarde, mas por enquanto,

03:41.480 --> 03:43.880
só podemos ver imediatamente que obviamente usamos

03:43.880 --> 03:45.780
TypeScript aqui.

03:45.780 --> 03:49.290
Com isso, deixe-me apenas limpar um pouco esta estrutura de pastas

03:49.290 --> 03:50.680
iniciais, e então vamos construir

03:50.680 --> 03:52.730
juntos um React App muito simples, e enquanto

03:52.730 --> 03:56.150
fazemos isso, vamos explorar como podemos usar o TypeScript com

03:56.150 --> 03:57.550
React.

03:57.550 --> 04:01.000
Portanto, vamos primeiro nos concentrar na

04:01.000 --> 04:02.950
limpeza, aqui na App. tsx, removerei a importação do logotipo

04:02.950 --> 04:06.860
e removerei todo o conteúdo do meu mergulho

04:06.860 --> 04:09.380
aqui, e apenas manterei esse mergulho, portanto.

04:09.380 --> 04:12.020
Também removerei o aplicativo. css import, livrar-se

04:12.020 --> 04:19.560
do App. css e o arquivo App. teste. tsx, assim como o logotipo.

04:19.560 --> 04:19.560
svg e o serviceWorker. ts

04:19.560 --> 04:23.470
arquivos, remova todos eles.

04:23.470 --> 04:25.500
Em índice. tsx, vou remover esta importação de serviceWorker,

04:25.500 --> 04:29.060
porque não vamos trabalhar com serviceWorkers

04:29.060 --> 04:32.100
aqui, remover esse código lá embaixo, e acabar com esta configuração,

04:32.100 --> 04:34.530
e no índice. css Vou limpar tudo isso, e apenas criar

04:34.530 --> 04:38.870
um estilo HTML onde quero criar uma

04:38.870 --> 04:40.610
fonte-família de sem-serifa,

04:40.610 --> 04:43.140
e depois um estilo corporal onde quero

04:43.140 --> 04:45.860
me livrar da margem, exatamente como este,

04:45.860 --> 04:48.820
um estilo muito simples.

04:48.820 --> 04:50.763
E com isso, temos uma configuração inicial

04:52.790 --> 04:54.540
com a qual eu quero trabalhar.

04:54.540 --> 04:55.840
Agora novamente, eu mencionei isso,

04:55.840 --> 04:57.370
mas se tudo isso não lhe diz nada, se esta

04:57.370 --> 04:59.710
é uma sintaxe que você nunca viu antes, então definitivamente

04:59.710 --> 05:02.200
mergulhe primeiro em alguns recursos do React.

05:02.200 --> 05:05.610
Não é nisto que vamos nos concentrar neste módulo, você

05:05.610 --> 05:08.130
não vai aprender Reagir neste módulo.

05:08.130 --> 05:11.010
Mas com isso, vamos salvar todas as nossas mudanças e agora

05:11.010 --> 05:12.920
vamos continuar, e vamos começar a escrever

05:12.920 --> 05:15.680
algum código React e Typhon, e aprender como essas duas

05:15.680 --> 05:17.980
coisas funcionam juntas.
