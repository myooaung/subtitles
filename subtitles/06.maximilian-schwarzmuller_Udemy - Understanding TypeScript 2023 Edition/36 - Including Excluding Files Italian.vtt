WEBVTT

00:02.200 --> 00:03.840
Istruttore: Ecco come

00:03.840 --> 00:06.290
gestire più file con TypeScript.

00:06.290 --> 00:08.870
Ora, una parola sull'avere più file: quando si lavora

00:08.870 --> 00:11.500
con più file, come stiamo facendo qui, è anche possibile

00:11.500 --> 00:15.280
importarli l'uno nell'altro con i moduli, che forse conoscete da JavaScript

00:15.280 --> 00:18.180
vanilla, anche lì abbiamo i moduli, ma è qualcosa che tratterò

00:18.180 --> 00:20.770
in una sezione dedicata di questo corso, quindi per

00:20.770 --> 00:25.560
ora abbiamo solo due file che non sono importati l'uno nell'altro, ma che sono invece importati

00:25.560 --> 00:31.040
nell'indice.

00:31.040 --> 00:31.040
html.

00:31.040 --> 00:32.990
Ora, però, sappiamo che

00:32.990 --> 00:35.930
possiamo gestire questo progetto

00:35.930 --> 00:39.060
e che possiamo compilare più file.

00:39.060 --> 00:41.910
Ora diamo un'occhiata a tsconfig. json, perché è un file

00:41.910 --> 00:45.660
cruciale per la gestione di questo progetto, in quanto

00:45.660 --> 00:48.100
indica essenzialmente a TypeScript

00:48.100 --> 00:51.290
come deve compilare questi file.

00:51.290 --> 00:55.260
Ora, prima di tuffarci in compilerOptions dove, come suggerisce il nome,

00:55.260 --> 00:56.470
possiamo configurare

00:56.470 --> 00:59.620
il comportamento del compilatore, scorriamo verso il

00:59.620 --> 01:02.220
basso fino al punto prima della parentesi graffa

01:02.220 --> 01:03.760
di chiusura, ma dopo questa

01:03.760 --> 01:06.620
parentesi graffa di chiusura annidata, e vediamo

01:06.620 --> 01:08.340
alcune delle opzioni che possiamo

01:08.340 --> 01:11.910
aggiungere qui, che non hanno effetto sul compilatore o sul comportamento

01:11.910 --> 01:14.190
della fase di compilazione, ma invece sul

01:14.190 --> 01:18.410
modo in cui il compilatore lavora con questo progetto, perché lì, per esempio,

01:18.410 --> 01:23.410
si può impostare un'opzione di esclusione.

01:23.700 --> 01:26.770
Ora, se si aggiunge exclude qui, questo sarà un

01:26.770 --> 01:30.450
array e si possono inserire i percorsi dei file che non devono

01:30.450 --> 01:33.480
essere inclusi nella compilazione quando si

01:33.480 --> 01:36.400
esegue TSC sull'intero progetto.

01:36.400 --> 01:38.010
Ad esempio, potremmo dire che vogliamo

01:38.010 --> 01:41.137
escludere l'analisi. dalla compilazione e, naturalmente,

01:41.137 --> 01:43.390
questo non ha molto senso in questo caso, ma solo

01:43.390 --> 01:45.300
per mostrare come funziona.

01:45.300 --> 01:49.350
Se si esegue nuovamente tsc, per prima cosa si cancella

01:49.350 --> 01:51.600
analytics. js in modo da poter

01:51.600 --> 01:53.730
vedere se viene ricreato, se ora

01:53.730 --> 01:57.140
si esegue tsc o tsc in modalità watch, non si vede alcuna

01:57.140 --> 01:59.810
analisi. js viene creato e il motivo

01:59.810 --> 02:02.060
è che stiamo escludendo quel file.

02:02.060 --> 02:03.340
Naturalmente per questo

02:03.340 --> 02:04.670
file non ha molto senso, perché

02:04.670 --> 02:07.250
di solito lo voglio includere, ma se aveste un file

02:07.250 --> 02:09.360
che per qualche motivo non dovrebbe essere

02:09.360 --> 02:12.440
compilato, potete escluderlo in questo modo.

02:12.440 --> 02:14.210
Si può anche lavorare con i caratteri

02:14.210 --> 02:15.810
jolly, ad esempio se si ha un file

02:15.810 --> 02:20.810
chiamato analytics. dev. e non si vuole compilare,

02:20.850 --> 02:22.900
si può dire che tutti i file che

02:22.900 --> 02:25.770
terminano con dev. ts non dovrebbe essere compilato,

02:25.770 --> 02:27.790
e si può fare aggiungendo anche un asterisco

02:27.790 --> 02:29.620
qui, che è un carattere jolly, e ora

02:29.620 --> 02:31.630
TypeScript ignorerà tutti i file che

02:31.630 --> 02:36.470
hanno .

02:36.470 --> 02:36.470
dev. ts incluso.

02:36.470 --> 02:40.037
Si potrebbe anche aggiungere asterisco, asterisco, barra qui,

02:40.037 --> 02:43.080
e ciò significherebbe che qualsiasi file con quello schema

02:43.080 --> 02:45.770
in qualsiasi cartella sarà ignorato.

02:45.770 --> 02:47.420
Quindi, queste sono cose che si possono

02:47.420 --> 02:49.220
impostare qui, l'unica cosa che voglio

02:49.220 --> 02:51.500
impostare qui, ed è un'impostazione che si trova

02:51.500 --> 02:54.103
spesso, è che voglio escludere node_modules, e l'idea

02:55.409 --> 02:58.260
è che non voglio compilare alcun file TypeScript che potrei

02:58.260 --> 03:01.373
avere all'interno di node_modules.

03:02.449 --> 03:05.080
Ora, node_modules è la cartella che contiene

03:05.080 --> 03:07.160
tutte le dipendenze che installiamo

03:07.160 --> 03:09.570
qui nel pacchetto. json e le dipendenze di

03:09.570 --> 03:11.890
queste dipendenze, e quindi si tratta di librerie

03:11.890 --> 03:14.660
di terze parti che stiamo importando, che non vogliamo

03:14.660 --> 03:16.810
toccare, e se una di queste librerie dovesse

03:16.810 --> 03:18.510
spedire del codice TypeScript,

03:18.510 --> 03:20.630
allora non vogliamo certo compilarla,

03:20.630 --> 03:22.690
perché rallenterebbe il nostro processo

03:22.690 --> 03:25.840
di compilazione e, nel peggiore dei casi, potrebbe anche

03:25.840 --> 03:29.200
rompere il nostro progetto.

03:29.200 --> 03:30.370
Pertanto, è abbastanza

03:30.370 --> 03:33.330
comune escludere node_modules qui, anche se devo dire

03:33.330 --> 03:36.510
che se non si specifica affatto l'opzione exclude, node_modules

03:36.510 --> 03:41.420
viene automaticamente escluso come impostazione predefinita, quindi non c'è bisogno

03:41.420 --> 03:43.980
di aggiungere questa opzione qui, sarebbe quella

03:43.980 --> 03:48.520
predefinita, voglio solo mostrare che exclude esiste e come si può usare se l'unica

03:48.520 --> 03:50.570
cosa che si vuole escludere è node_modules,

03:50.570 --> 03:55.670
non è necessario aggiungere la chiave exclude.

03:55.670 --> 03:58.500
Se lo si aggiunge, però, bisogna impostare node_modules,

03:58.500 --> 04:01.400
perché altrimenti non lo escluderà.

04:01.400 --> 04:04.570
Oltre a exclude, abbiamo anche include, che consente

04:04.570 --> 04:06.630
di fare l'opposto, di indicare

04:06.630 --> 04:09.570
specificamente a TypeScript quali file includere

04:09.570 --> 04:12.730
nel processo di compilazione e tutto ciò che non

04:12.730 --> 04:16.380
è elencato qui non verrà compilato, quindi se indico

04:16.380 --> 04:20.620
app. Se eseguo nuovamente tsc, non otterremo

04:20.620 --> 04:23.470
alcuna analisi. ts, oppure nessuna

04:23.470 --> 04:25.570
analisi. Il file js, per intenderci.

04:25.570 --> 04:26.403
Perché?

04:26.403 --> 04:29.230
Perché l'analisi. js non è incluso in include

04:29.230 --> 04:32.370
e, come ho detto, se impostiamo la chiave include, dobbiamo

04:32.370 --> 04:33.970
davvero includere tutto ciò

04:33.970 --> 04:35.810
che vogliamo compilare.

04:35.810 --> 04:40.080
Naturalmente qui possiamo aggiungere anche l'analisi. e con questa aggiunta, inizieremo

04:40.080 --> 04:46.740
a compilarla, come vedete ora, abbiamo l'analisi.

04:46.740 --> 04:46.740
js

04:46.740 --> 04:49.650
o, in alternativa, si può specificare un'intera cartella

04:49.650 --> 04:52.560
che contiene i file che si vogliono compilare.

04:52.560 --> 04:55.520
A proposito, Exclude, se impostato insieme a

04:55.520 --> 04:57.160
include, filtrerà include,

04:57.160 --> 05:00.290
quindi se escludiamo una sottocartella di una cartella

05:00.290 --> 05:01.740
che fa parte di include,

05:01.740 --> 05:04.980
la sottocartella esclusa sarà esclusa, quindi in

05:04.980 --> 05:08.720
pratica compiliamo include meno exclude.

05:08.720 --> 05:10.420
Ovviamente qui non voglio impostare include,

05:10.420 --> 05:12.520
voglio compilare tutti i file TypeScript e quindi

05:12.520 --> 05:15.050
non devo preoccuparmi di questo, l'esclusione di node_modules

05:15.050 --> 05:17.200
è tutto ciò di cui ho bisogno e, come ho spiegato, teoricamente

05:17.200 --> 05:20.280
non ho nemmeno bisogno di aggiungerlo perché sarebbe escluso per impostazione

05:20.280 --> 05:22.423
predefinita.

05:23.260 --> 05:25.310
Ora c'è anche l'opzione

05:25.310 --> 05:27.560
file, che consente

05:27.560 --> 05:30.870
di puntare ai singoli file,

05:30.870 --> 05:34.200
quindi è un po' come include,

05:34.200 --> 05:36.020
con la differenza

05:36.020 --> 05:38.220
che qui non si possono

05:38.220 --> 05:51.340
specificare intere cartelle da includere, ma solo i singoli file che si desidera compilare.

05:51.340 --> 05:53.360
In realtà, questa impostazione potrebbe

05:53.360 --> 05:55.740
non essere necessaria molto spesso.

05:55.740 --> 05:58.530
E quindi, questo è tutto per quanto riguarda le opzioni di compilazione

05:58.530 --> 06:00.910
o di gestione del progetto di base.

06:00.910 --> 06:03.900
Ora, naturalmente, si può specificare molto

06:03.900 --> 06:08.230
di più, molto di più sul compilatore stesso e su come si comporta

06:08.230 --> 06:10.793
durante la fase di compilazione.
