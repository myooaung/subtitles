WEBVTT

00:02.190 --> 00:04.310
Dosen: Jadi, bagaimana seharusnya kita memperbarui keadaan?

00:04.310 --> 00:06.970
Kita bisa menggunakan operator spread di sini, dan

00:06.970 --> 00:09.680
menyebarkan semua TODO yang ada ke dalam array ini dan

00:09.680 --> 00:13.520
kemudian menambahkan TODO baru sebagai item baru di bagian akhir.

00:13.520 --> 00:16.300
Ini berfungsi, tetapi bukan cara yang paling bersih untuk memperbarui ini.

00:16.300 --> 00:18.780
Ini kemungkinan besar akan bekerja di semua skenario

00:18.780 --> 00:20.090
yang kita miliki di aplikasi

00:20.090 --> 00:23.170
ini, tetapi secara teoritis bereaksi menjadwalkan pembaruan

00:23.170 --> 00:26.050
status dan karenanya apa yang ada di nilai TODO kita di sini,

00:26.050 --> 00:28.490
mungkin belum tentu menjadi status terbaru saat

00:28.490 --> 00:30.710
pembaruan ini dilakukan.

00:30.710 --> 00:33.360
Untuk menjamin hal ini, kita bisa melewatkan fungsi ke

00:33.360 --> 00:35.340
fungsi pemutakhiran keadaan di sini.

00:35.340 --> 00:37.500
Sebuah fungsi yang mendapatkan TODO sebelumnya

00:37.500 --> 00:39.680
dan yang kemudian mengembalikan state baru.

00:39.680 --> 00:41.460
Ini semua didukung oleh react.

00:41.460 --> 00:44.370
Fungsi ini juga akan dipanggil oleh react untuk kita

00:44.370 --> 00:48.340
dan kemudian kita dapat mengandalkan prevTodos di dalam fungsi ini untuk

00:48.340 --> 00:51.363
benar-benar menjadi snapshot state terbaru.

00:52.220 --> 00:55.480
Sekarang dengan itu, kita memperbarui TODO kita dengan TODO

00:55.480 --> 00:57.080
lama dan yang baru dan sekarang

00:57.080 --> 00:59.100
kita memiliki fungsi di sini di mana

00:59.100 --> 01:01.860
kita harus dapat menambahkan TODO baru.

01:01.860 --> 01:03.800
Jadi jika sekarang kita menyimpan

01:03.800 --> 01:05.470
semua itu dan kita kembali ke

01:05.470 --> 01:10.260
aplikasi dan kemudian masuk menyelesaikan kursus di sini, ini berfungsi.

01:10.260 --> 01:14.400
Dan jika saya masuk menyelesaikannya dalam satu bulan di sini, ini

01:14.400 --> 01:15.650
juga ditambahkan.

01:15.650 --> 01:17.330
Jadi, sekarang ini semua berfungsi.

01:17.330 --> 01:18.960
Fungsionalitas yang hilang sekarang

01:18.960 --> 01:21.180
adalah bahwa kita juga bisa menghapusnya.

01:21.180 --> 01:22.790
Kita akan melakukan ini di kuliah berikutnya,

01:22.790 --> 01:24.310
tetapi yang lebih penting dari itu,

01:24.310 --> 01:26.470
Anda sekarang juga belajar bagaimana mengelola

01:26.470 --> 01:28.260
state dengan react dan typescript, yang

01:28.260 --> 01:29.930
selain props tentu saja, adalah konsep

01:29.930 --> 01:31.693
inti lainnya.
