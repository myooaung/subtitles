WEBVTT

1
00:00:02.150 --> 00:00:05.480
<v Narrator>And that is already it for this module.</v>

2
00:00:05.480 --> 00:00:08.090
Now obviously, there are tons of third-party

3
00:00:08.090 --> 00:00:10.130
libraries out there that you could use.

4
00:00:10.130 --> 00:00:12.680
There's all this more that you can explore on

5
00:00:12.680 --> 00:00:15.806
the Class Validator and Class Transformer packages.

6
00:00:15.806 --> 00:00:18.652
But the idea here is not so much to dive into

7
00:00:18.652 --> 00:00:21.410
all the features of these packages.

8
00:00:21.410 --> 00:00:24.300
I'd rather leave that up to you to explore.

9
00:00:24.300 --> 00:00:27.983
The idea is that you get a feeling for two important things:

10
00:00:27.983 --> 00:00:31.575
The first thing is that, with TypeScript,

11
00:00:31.575 --> 00:00:35.600
you can use regular JavaScript packages like Lodash

12
00:00:35.600 --> 00:00:36.719
without issues.

13
00:00:36.719 --> 00:00:39.350
You might get errors initially,

14
00:00:39.350 --> 00:00:41.767
keep in mind that technically it worked though.

15
00:00:41.767 --> 00:00:45.244
But you can also work around these compilation errors then

16
00:00:45.244 --> 00:00:49.260
by importing the right types, the right translation

17
00:00:49.260 --> 00:00:51.500
from JavaScript to TypeScript in the end.

18
00:00:51.500 --> 00:00:54.590
And such translation packages exist for all

19
00:00:54.590 --> 00:00:55.980
major and popular

20
00:00:55.980 --> 00:00:59.180
and even a lot of small JavaScript libraries.

21
00:00:59.180 --> 00:01:02.221
You also might be working with JavaScript libraries

22
00:01:02.221 --> 00:01:04.470
which have these translation files,

23
00:01:04.470 --> 00:01:07.110
these DTS files built in already.

24
00:01:07.110 --> 00:01:08.840
There of course, you don't need to install

25
00:01:08.840 --> 00:01:10.713
such translations thereafter.

26
00:01:11.550 --> 00:01:14.350
Well, and besides these Vanilla jobs with libraries

27
00:01:14.350 --> 00:01:17.094
which might need translations, you also might have

28
00:01:17.094 --> 00:01:20.610
libraries like Class Transformer which work fine

29
00:01:20.610 --> 00:01:24.280
in Vanilla JavaScript, in modern Vanilla JavaScript,

30
00:01:24.280 --> 00:01:26.580
at least where you also have classes,

31
00:01:26.580 --> 00:01:29.430
but which all the work, without any extra translations

32
00:01:29.430 --> 00:01:31.400
and TypeScript projects.

33
00:01:31.400 --> 00:01:34.960
And then we have packages like Class Validator.

34
00:01:34.960 --> 00:01:38.440
They really embrace TypeScript-specific features

35
00:01:38.440 --> 00:01:42.370
and give you a brand new way of thinking about your project

36
00:01:42.370 --> 00:01:44.840
and of solving certain problems.

37
00:01:44.840 --> 00:01:47.603
In this case here, by utilizing decorators.

38
00:01:48.680 --> 00:01:51.080
Knowing all these things is super important

39
00:01:51.080 --> 00:01:53.440
and gives you all the flexibility you need

40
00:01:53.440 --> 00:01:55.253
for your future projects.

