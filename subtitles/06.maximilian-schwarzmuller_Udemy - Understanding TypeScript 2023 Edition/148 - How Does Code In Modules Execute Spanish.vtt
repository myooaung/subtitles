WEBVTT

00:02.560 --> 00:03.680
Instructor: Ahora,

00:03.680 --> 00:06.770
además de estas diferentes sintaxis de importación

00:06.770 --> 00:10.160
y exportación, que es bueno conocer, hay otra cosa que

00:10.160 --> 00:12.583
tienes que entender y conocer.

00:13.430 --> 00:16.900
En el estado del proyecto, no sólo estamos exportando una clase

00:16.900 --> 00:20.690
o una interfaz, como lo hacemos en todos los demás archivos, sino que

00:20.690 --> 00:23.810
estamos exportando un estado constante del proyecto.

00:23.810 --> 00:26.710
Ahora, la cosa es que estamos importando esta constante

00:26.710 --> 00:28.660
en múltiples otros archivos.

00:28.660 --> 00:31.930
Lo importamos en la lista de proyectos. ts, también lo importamos

00:31.930 --> 00:35.480
en el proyecto de entrada. ts file.

00:35.480 --> 00:38.490
Así que importamos desde el mismo archivo varias veces.

00:38.490 --> 00:41.560
La pregunta es si este código en este archivo,

00:41.560 --> 00:44.600
es decir, la creación de esta constante aquí,

00:44.600 --> 00:48.920
se ejecuta una o dos veces o con qué frecuencia se ejecuta?

00:48.920 --> 00:53.240
¿Una vez por declaración de importación o una vez para toda la aplicación?

00:53.240 --> 00:57.980
Bueno, resulta que se ejecuta una vez cuando el archivo es importado por

00:57.980 --> 01:01.000
primera vez por cualquier otro archivo.

01:01.000 --> 01:05.280
Si luego otro archivo vuelve a importar ese mismo archivo,

01:05.280 --> 01:07.320
no se vuelve a ejecutar.

01:07.320 --> 01:08.970
También podemos validar esto añadiendo

01:08.970 --> 01:11.210
una declaración de registro de la consola aquí.

01:11.210 --> 01:12.370
Corriendo.

01:12.370 --> 01:15.893
Veremos que esto sólo se imprimirá una vez aunque estemos importando

01:15.893 --> 01:20.190
el estado del proyecto. t ambos aquí en la lista de

01:20.190 --> 01:22.360
proyectos. ts y en la entrada

01:22.360 --> 01:24.620
del proyecto. ts file.

01:24.620 --> 01:27.740
Aun así, esto sólo se imprimirá en la consola una vez.

01:27.740 --> 01:28.610
Lo ves aquí.

01:28.610 --> 01:29.443
Corriendo.

01:29.443 --> 01:31.350
Nunca se imprimirá por segunda vez,

01:31.350 --> 01:32.653
hagamos lo que hagamos.

01:33.720 --> 01:36.360
Así que esto sólo se ejecuta una vez.

01:36.360 --> 01:38.620
Así es como se comporta y esto es algo que tienes

01:38.620 --> 01:41.723
que saber para poder planificar tu aplicación adecuadamente.
