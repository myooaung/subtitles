WEBVTT

00:02.180 --> 00:03.710
-: Bu ekte, kursta birçok kez

00:03.710 --> 00:06.590
gördüğünüz gibi bir başlangıç projesi bulacaksınız,

00:06.590 --> 00:07.640
temelde boş bir dizine

00:07.640 --> 00:12.030
sahip çok önemsiz bir proje.

00:12.030 --> 00:12.030
html

00:12.030 --> 00:14.400
dosyası ve boş bir uygulama. ts dosyası ve burada

00:14.400 --> 00:17.140
küçük bir demo uygulaması, küçük

00:17.140 --> 00:20.350
bir proje oluşturacağız.

00:20.350 --> 00:24.705
Şimdi oluşturacağımız uygulama çok karmaşık olmayacak,

00:24.705 --> 00:28.080
ancak esasen bir projenin esasen bir hedef

00:28.080 --> 00:31.480
olduğu birkaç projeyi yönetebileceğimiz

00:31.480 --> 00:35.690
güzel bir uygulama olacak, böylece proje listelerimiz

00:35.690 --> 00:37.582
olacak ve aktif bir liste

00:37.582 --> 00:40.580
ve bitmiş bir liste olmak üzere iki proje

00:40.580 --> 00:41.670
listemiz olacak

00:41.670 --> 00:43.270
ve öğeleri bir listeden

00:43.270 --> 00:46.210
diğerine sürükleyip bırakabileceğiz

00:46.210 --> 00:49.530
ve bunun gibi şeyler.

00:49.530 --> 00:52.734
Elbette uygulamanın kendisi de güzel olacak

00:52.734 --> 00:54.619
ama en önemlisi şu ana kadar

00:54.619 --> 00:56.570
öğrendiğimiz pek çok şeyi

00:56.570 --> 00:59.160
pratik etmemizi sağlayacak olması

00:59.160 --> 01:02.240
ve elbette bu modülün amacı da bu.

01:02.240 --> 01:04.210
Şimdi bu modül için önemli

01:04.210 --> 01:05.710
bir not, tüm kodu bu

01:05.710 --> 01:07.900
tek uygulamada tek bir dosyada

01:07.900 --> 01:12.010
yazacağım. ts dosyasıdır ve bu nedenle

01:12.010 --> 01:17.000
çok çok büyük bir dosya haline gelecektir.

01:17.000 --> 01:19.420
Bu modülden sonraki modülde bu sorunu inceleyeceğim

01:19.420 --> 01:21.400
ve TypeSript'in bu dosyayı bölmemize

01:21.400 --> 01:24.660
nasıl izin verdiğini göstereceğim, ancak şimdilik

01:24.660 --> 01:27.030
bunu henüz bilmediğimizden ve şimdiye

01:27.030 --> 01:29.680
kadar boyut sorunumuz olmadığından, demo

01:29.680 --> 01:32.930
uygulamamıza odaklanalım.

01:32.930 --> 01:34.710
Ve bunun için aslında indeks üzerinde

01:34.710 --> 01:37.420
çalışarak başlayacağız. html dosyası.

01:37.420 --> 01:39.100
Ekte yeni bir dosya bulacaksınız, onu

01:39.100 --> 01:44.650
indirin ve bu başlangıç dizinindeki tüm içeriği değiştirin.

01:44.650 --> 01:44.650
html

01:44.650 --> 01:46.314
dosyasını indirilen dosya ile değiştirin ve uygulama

01:46.314 --> 01:48.700
için de aynısını yapın. css dosyamız henüz yok,

01:48.700 --> 01:50.360
sadece bu dersin ekinde bulacağınız

01:50.360 --> 01:57.010
dosyayı projenize index'in yanına ekleyin.

01:57.010 --> 01:57.010
html

01:57.010 --> 01:59.470
çünkü orada zaten ithal ettik.

01:59.470 --> 02:02.200
Peki bu dosyalarda neler oluyor?

02:02.200 --> 02:04.560
Dizinde. html dosyasını içe

02:04.560 --> 02:06.900
aktarıyoruz. Bazı stil ve uygulama

02:06.900 --> 02:10.484
için css dosyası. Bazı JavaScript mantığı için js dosyası tabii

02:10.484 --> 02:12.240
ki bunun gibi herhangi bir JavaScript kodu yazmayacağız,

02:12.240 --> 02:15.589
kodu uygulamada yazacağız.

02:15.589 --> 02:15.589
ancak

02:15.589 --> 02:19.658
bu elbette bir JavaScript dosyasına derlenecektir.

02:19.658 --> 02:23.320
Şimdi bu html dosyasının gövdesinde birkaç şablon

02:23.320 --> 02:25.890
etiketi bulacaksınız.

02:25.890 --> 02:28.436
Şablon etiketleri, modern tarayıcılar tarafından

02:28.436 --> 02:30.427
desteklenen varsayılan html etiketleridir

02:30.427 --> 02:34.080
ve hemen yüklenmeyen, hemen görünmeyen, tabiri caizse hemen

02:34.080 --> 02:37.870
işlenmeyen, bunun yerine JavaScript ve dolayısıyla TypeScript

02:37.870 --> 02:40.600
aracılığıyla ulaşılabilen ve daha sonra işlemek

02:40.600 --> 02:46.310
istediğimizde işlemek için JavaScript ve TypeScript ile kontrol edebileceğimiz bazı html

02:46.310 --> 02:51.911
kodlarını belirtmemize olanak tanır ve burada temel olarak bir başlık, bir açıklama ve projemizin

02:51.911 --> 03:00.500
başlığının ne olduğuna, projemizin açıklamasının ne olduğuna ve projeye kaç kişinin atanabileceğine veya atanması gerektiğine karar verebileceğimiz

03:00.500 --> 03:11.386
bir kişi girişi ve ardından proje ekle düğmesi olan ücretsiz girdileri olan bir formum olduğunu görüyorsunuz.

03:11.386 --> 03:13.320
Ardından, projeler listemizde

03:13.320 --> 03:15.450
tek bir projeyi işlemek için kullanılacak

03:15.450 --> 03:18.440
bir liste öğesini tutan başka bir şablonumuz

03:18.440 --> 03:20.100
var, bu şablon burada h2

03:20.100 --> 03:27.280
bölümüne sahip bir başlığım ve ardından sırasız bir listem olduğunu göreceksiniz ve aslında bu sırasız

03:27.280 --> 03:30.150
liste daha sonra bu şablona dayalı olarak

03:30.150 --> 03:33.988
birden fazla tek projeyi tutacak ve buraya girilen verileri

03:33.988 --> 03:42.357
en üstteki form aracılığıyla işleyecek ve her şey daha sonra TypeScript yardımıyla buradaki "app" kimliğine sahip bu div'e

03:42.357 --> 03:45.930
eklenecektir.

03:45.930 --> 03:48.970
Şimdi, uygulama. css sadece bazı css stillerini

03:48.970 --> 03:50.790
tutar, elbette buna bakabilirsiniz

03:50.790 --> 03:52.130
TypeScript ile ilgisi

03:52.130 --> 03:54.020
olmadığı için burada buna odaklanmayacağım

03:54.020 --> 03:56.960
ve şimdi bizim işimiz, sonunda kullanıcının buraya

03:56.960 --> 04:00.216
girdiği her şeyi getiren bazı TypeScript kodları yazmaktır,

04:00.216 --> 04:08.390
aslında her şeyden önce bu formu oluşturur, sonra kullanıcının girdiği her şeyi getirir, kullanıcının girdiklerini doğrular, böylece

04:08.390 --> 04:15.030
başlık, açıklama ve kişiler geçerli değerlere sahip olur, bu düğmeye tıklamayı veya formun gönderilmesini

04:15.030 --> 04:21.430
dinler, daha kesin olmak gerekirse, sonunda yeni bir proje oluşturur, yani muhtemelen bu dizinin daha sonra

04:21.430 --> 04:26.490
bu listeye dönüştürüldüğü bir dizide saklanan yeni bir JavaScript nesnesi ve elbette

04:26.490 --> 04:36.790
tüm listenin dom'a eklenmesi gerekir, yani tüm adımlar bunlardır ve elbette bunlar oldukça az adımdır.

04:36.790 --> 04:39.580
Şimdi, eğer kendinize çok güveniyorsanız, elbette

04:39.580 --> 04:42.900
bunu şu anda duraklamak için bir şans olarak değerlendirin

04:42.900 --> 04:45.080
ve sonunda nasıl göründüğüne bakılmaksızın

04:45.080 --> 04:46.740
bunu kendi başınıza uygulamayı

04:46.740 --> 04:48.141
deneyin, sadece bu forumun

04:48.141 --> 04:49.990
görünür olduğu, kullanıcıların

04:49.990 --> 04:51.980
oraya bir şeyler girebileceği ve bir

04:51.980 --> 04:54.295
şey girdiğiniz her proje için bu listede bir

04:54.295 --> 04:57.810
liste öğesi oluşturduğunuz ve buna ulaşırsanız görünür olması

04:57.810 --> 05:00.539
gereken bir kurulumunuz var, bu zaten harika ama

05:00.539 --> 05:06.340
elbette bunu birlikte adım adım uygulayacağız ve daha sonra bu uygulandıktan sonra araç listelerini gerçekten

05:06.340 --> 05:09.037
oluşturduğumuzdan ve sürükle ve bırak ile bu listeler

05:09.037 --> 05:15.440
arasında projeler arasında geçiş yapabildiğimizden emin olacağız.

05:15.440 --> 05:17.993
Her şeyin bir sırası var, başlayalım.
