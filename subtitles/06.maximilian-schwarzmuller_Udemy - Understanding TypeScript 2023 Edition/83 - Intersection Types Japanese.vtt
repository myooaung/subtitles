WEBVTT

00:02.310 --> 00:05.860
講師：今回は､ 以前取り組んだ一般的なプロジェクトの設定に戻しました｡

00:05.860 --> 00:10.940
インデックスに添付されています｡  html ファイルとアプリの

00:10.940 --> 00:10.940
tsファイルです｡ 

00:10.940 --> 00:15.410
そして､ その中で､ 交差点タイプに飛び込みたいと思います｡ 

00:15.410 --> 00:19.570
交差点タイプは､ 他のタイプを組み合わせることができます｡ 

00:19.570 --> 00:23.280
adminという型があるとします｡

00:23.280 --> 00:44.370
これはオブジェクト型なので､ ここでもオブジェクトを作成しているわけではなく､ 型を定義しています｡

00:44.370 --> 00:48.950
さて､ インターフェースで作成することもできましたが､

00:49.810 --> 00:59.130
ここでは型を使って行っています｡

00:59.130 --> 01:02.890
特典はありませんが､ 開始日は決まっています｡ 

01:02.890 --> 01:04.380
それは､ 日付のタイプである可能性があります｡ 

01:04.380 --> 01:12.163
今まで見たことがありませんが､ 日付はJavaScriptに組み込まれているデータオブジェクトに基づいてスクリプトでサポートされている型です｡

01:13.730 --> 01:17.580
そこで､ この2つのタイプを組み合わせた新しいタイプ､

01:17.580 --> 01:23.900
たとえば高給取りの従業員を作成したいと思います｡

01:23.900 --> 01:28.770
もちろん､ 名前､ 開始日､ 権限を持つオブジェクト・タイプを定義して､

01:28.770 --> 01:34.120
手動で作成することもできますが､ この2つのタイプがすでにある場合は､

01:34.120 --> 01:37.540
adminとemployeeというアンパサンド記号を使用して､

01:37.540 --> 01:42.000
これを組み合わせることもできます｡

01:42.000 --> 01:46.390
そして､ その結果は､ 両方を持たなければならない新しいオブジェクトタイプになりました｡

01:46.390 --> 01:50.470
つまり､ E1という従業員がいて､ その従業員のタイプが昇格型である場合､

01:50.470 --> 01:54.770
そこにオブジェクトを格納することができます｡ オブジェクトには､

01:54.770 --> 02:00.113
nameプロパティ､ create serverという権限プロパティ､

02:02.510 --> 02:08.800
そして新しいデータによる開始日時が必要です｡

02:08.800 --> 02:12.700
単に現在のタイムスタンプを表す新しいデータオブジェクトを作成します｡

02:12.700 --> 02:15.610
これで､ 2つのタイプを簡単に組み合わせることができるようになったわけです｡ 

02:15.610 --> 02:17.740
もちろん､

02:17.740 --> 02:34.700
インターフェイスadminとインターフェイスemployeeを使用することで､

02:34.700 --> 02:50.653
同じことを実現することができます｡

02:52.700 --> 02:54.520
ですから､ 今､ 私がこれをコメントアウトしても､

02:54.520 --> 02:56.830
まったく同じ効果が得られます｡

02:56.830 --> 02:58.550
さて､ 議論の余地なく､ それはもう少し多くのコードです｡ 

02:58.550 --> 03:01.750
この例では､ インターフェイスではなく型を使うことを好むかもしれません｡

03:01.750 --> 03:09.770
しかし､ 関係は非常に密接で､ この例では絶対にインターフェイスを使うことができます｡

03:09.770 --> 03:15.600
しかし､ 交差型は､ 今回のようにオブジェクト型と組み合わせて使うと特に便利ですが､

03:15.600 --> 03:20.910
どんな型にも使えるということは知っておいて損はないでしょう｡

03:20.910 --> 03:38.660
例えば文字列や数値を表すcombinable型があるとします｡

03:38.660 --> 03:48.160
ここで文字列や数値を表すユニオン型と､

03:48.160 --> 04:04.940
数値やブール値を表す数値型があるとします｡

04:04.940 --> 04:07.800
つまり､ intersection演算子は任意の型に対して使用することができ､

04:07.800 --> 04:12.980
これらの型の交差点を単純に構築する｡

04:12.980 --> 04:14.330
ユニオン型の場合､

04:14.330 --> 04:17.300
それは基本的に共通に持つ型である｡

04:17.300 --> 04:18.890
オブジェクトタイプの場合は､

04:18.890 --> 04:23.510
いわばこのオブジェクトのプロパティの組み合わせに過ぎないのです｡

04:23.510 --> 04:25.960
これが交差点タイプなんですね｡ 

04:25.960 --> 04:27.360
時に役立つことができる｡ 

04:27.360 --> 04:29.050
常に使うわけではありませんが､

04:29.050 --> 04:37.230
交差型を使ってよりシンプルに､ あるいはより短く表現できる場面に遭遇することは間違いないでしょう｡

04:37.230 --> 04:39.520
さて､ これがすべてうまくいくことを証明するために､

04:39.520 --> 04:42.050
ターミナルで新しいタブを開いて､

04:42.050 --> 04:49.850
TSC dash Wを実行してウォッチモードを開始します｡

04:49.850 --> 04:51.210
ここで一度リロードすると､

04:51.210 --> 04:55.443
エラーなしで実行され､ またエラーなしでコンパイルされることがわかります｡
