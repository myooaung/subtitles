WEBVTT

00:02.310 --> 00:03.940
Man: Dus we krijgen twee problemen,

00:03.940 --> 00:06.500
als we ze zo willen noemen, om op te lossen.

00:06.500 --> 00:07.820
Nu wil ik beginnen met het

00:07.820 --> 00:10.960
probleem dat projecten in beide vakken verschijnen.

00:10.960 --> 00:13.050
Ik wil wat filtering introduceren

00:13.050 --> 00:15.980
en de beste plaats om te filteren is natuurlijk

00:15.980 --> 00:18.930
onze luisterfunctie.

00:18.930 --> 00:22.743
Als we naar de plaats gaan waar we onze luisteraar registreren,

00:26.000 --> 00:29.170
hier in de projectlijst clausule.

00:29.170 --> 00:32.270
Dan krijgen we hier een lijst met projecten, toch?

00:32.270 --> 00:36.170
Nu, die lijst van projecten omvat alle projecten.

00:36.170 --> 00:39.400
Binnen de projectlijstclausule zijn we echter alleen

00:39.400 --> 00:43.140
geïnteresseerd in actieve of voltooide projecten.

00:43.140 --> 00:44.250
Nu, hier, tussen haakjes,

00:44.250 --> 00:49.103
zouden we theoretisch ook ons enum kunnen gebruiken, maar eigenlijk heb ik de concrete

00:50.660 --> 00:53.160
waarden nodig die zijn opgeslagen in het enum

00:53.160 --> 00:56.440
daar beneden of in het type daar beneden en daarom wil ik hier

00:56.440 --> 00:58.990
niet altijd een enum gebruiken omdat ik de string

00:58.990 --> 01:02.180
letterlijke types wil laten zien.

01:02.180 --> 01:06.190
Dus, wat we hier gaan doen in onze listener functie is, voordat

01:06.190 --> 01:08.690
we de projecten opslaan en renderen,

01:08.690 --> 01:10.470
willen we ze filteren.

01:10.470 --> 01:13.020
Dus, hier hebben we onze relevante projecten, zou

01:13.020 --> 01:16.660
je kunnen zeggen, en dat is, natuurlijk, projecten gefilterd.

01:16.660 --> 01:19.070
De filtermethode is een standaardmethode

01:19.070 --> 01:21.460
die bestaat op elke array in JavaScript.

01:21.460 --> 01:23.690
Dit neemt een functie die dan wordt uitgevoerd

01:23.690 --> 01:26.820
op elk item in die projecten array en wanneer deze functie

01:26.820 --> 01:29.660
hier true teruggeeft, houden we het item in een nieuw

01:29.660 --> 01:30.940
aangemaakte array die

01:30.940 --> 01:35.040
dan wordt opgeslagen in relevante projecten.

01:35.040 --> 01:38.130
Als deze functie false teruggeeft, laten we het item vallen, niet

01:38.130 --> 01:39.770
uit de oorspronkelijke lijst, maar

01:39.770 --> 01:41.660
in de nieuwe lijst die wordt gegenereerd

01:41.660 --> 01:44.230
en die wordt opgeslagen in relevante projecten.

01:44.230 --> 01:46.600
Hier moeten we dus true of false teruggeven, afhankelijk

01:46.600 --> 01:48.810
van of we het project willen behouden of niet.

01:48.810 --> 01:52.430
En daarvoor hoeven we alleen maar naar de status te kijken.

01:52.430 --> 01:55.310
Projectstatus is een enum en we willen controleren

01:55.310 --> 01:59.070
of projectstatus gelijk is aan projectstatus actief

01:59.070 --> 02:03.590
als we ons in een actieve projectlijst bevinden, dus als de type

02:03.590 --> 02:05.790
eigenschap actief is, of als de

02:05.790 --> 02:07.940
projectstatus gereed is als

02:07.940 --> 02:12.270
we ons in een gereed lijst bevinden.

02:12.270 --> 02:15.430
Dus hier schrijf ik eigenlijk een - een echt functie

02:15.430 --> 02:17.250
lichaam door dit in te pakken

02:17.250 --> 02:20.100
met accolades, niet met behulp van de pijl

02:20.100 --> 02:23.480
functie snelkoppeling en dan kunnen we controleren,

02:23.480 --> 02:25.540
als dit type is gelijk actief,

02:26.800 --> 02:31.480
dan wil ik het resultaat van deze controle hier anders en daarom, gewoon

02:31.480 --> 02:34.130
na deze if verklaring, wil ik de vergelijking

02:34.130 --> 02:40.160
met de afgewerkte project status retourneren.

02:40.160 --> 02:42.220
Daarmee krijgen we onze relevante projecten

02:42.220 --> 02:43.520
die we nu hier kunnen opslaan,

02:43.520 --> 02:45.490
in toegewezen projecten.

02:45.490 --> 02:47.070
Dus, laten we nu kijken of het werkt.

02:47.070 --> 02:48.053
Als ik opnieuw laad,

02:49.310 --> 02:51.570
en we voegen hier een project toe, werkt

02:51.570 --> 02:52.743
dit dan?

02:54.950 --> 02:55.930
Dit werkt en, zie je,

02:55.930 --> 02:58.050
het wordt alleen toegevoegd aan actieve projecten,

02:58.050 --> 03:00.020
niet aan voltooide projecten.

03:00.020 --> 03:02.390
Maar als ik hier een tweede project toevoeg,

03:02.390 --> 03:04.740
hebben we nog steeds die duplicatie.

03:04.740 --> 03:08.720
Nu, dat heeft te maken met hoe we onze projecten renderen.

03:08.720 --> 03:10.520
Binnen renderprojecten doorlopen

03:10.520 --> 03:13.430
we altijd al onze projectitems en voegen ze toe

03:13.430 --> 03:15.090
aan de lijst.

03:15.090 --> 03:16.640
Het probleem daarbij is

03:16.640 --> 03:19.900
natuurlijk dat we misschien al een projectobject

03:19.900 --> 03:21.950
op het scherm hebben.

03:21.950 --> 03:25.020
De best mogelijke oplossing hier zou zijn om een soort

03:25.020 --> 03:27.450
vergelijking uit te voeren waarbij je controleert

03:27.450 --> 03:30.170
wat al is gerenderd en wat je nog moet renderen,

03:30.170 --> 03:31.730
om onnodig opnieuw renderen

03:31.730 --> 03:34.110
te voorkomen.

03:34.110 --> 03:35.760
Deze vergelijking uitvoeren

03:35.760 --> 03:38.440
door naar de echte DOM te kijken kost echter ook nogal

03:38.440 --> 03:39.710
wat prestaties.

03:39.710 --> 03:43.100
Voor deze toepassing is het dus prima om gewoon ons lijstelement

03:43.100 --> 03:45.250
te nemen en alle inhoud ervan te wissen

03:45.250 --> 03:49.640
door de innerlijke HTML op een lege string te zetten, wat betekent dat we alle

03:49.640 --> 03:53.710
lijstitems verwijderen en dan opnieuw renderen.

03:53.710 --> 03:56.350
Dat betekent dat wanneer we een nieuw project toevoegen,

03:56.350 --> 03:58.470
we alle projecten opnieuw renderen, maar

03:58.470 --> 04:00.210
voor het doel van dit project hier,

04:00.210 --> 04:01.670
voor deze toepassing hier,

04:01.670 --> 04:03.490
is dat absoluut prima.

04:03.490 --> 04:05.410
Dus, nu met dat, als we dat redden, laten

04:05.410 --> 04:06.987
we het nog eens proberen.

04:06.987 --> 04:10.540
"Werkt dit? " is het eerste project en als

04:10.540 --> 04:12.960
ik nu hier een ander project toevoeg,

04:12.960 --> 04:14.530
zie je dat het wordt toegevoegd,

04:14.530 --> 04:17.453
maar het andere project niet meer.

04:18.430 --> 04:21.870
Whoops en, nu, hier kreeg ik (mompelt) fout omdat de beschrijving

04:21.870 --> 04:23.540
niet lang genoeg was.

04:23.540 --> 04:26.230
Dus, dit werkt nu allemaal, zoals je kunt zien

04:26.230 --> 04:28.150
en we renderen deze projecten

04:28.150 --> 04:30.090
zoals ze moeten worden gerenderd,

04:30.090 --> 04:32.170
wat natuurlijk goed is.

04:32.170 --> 04:35.050
En daarmee ziet de toepassing er niet slecht uit.

04:35.050 --> 04:36.890
Wat ontbreekt is een sleepfunctie

04:36.890 --> 04:39.550
of een manier om projecten van de eerste

04:39.550 --> 04:44.040
lijst naar de tweede lijst te slepen.

04:44.040 --> 04:45.180
We voeren ook niet echt

04:45.180 --> 04:46.930
de andere informatie uit die we kregen,

04:46.930 --> 04:48.900
beschrijving en aantal mensen.

04:48.900 --> 04:50.750
Dus, dat is ook niet geweldig.

04:50.750 --> 04:54.980
En we hebben ook een beetje dubbele code als we kijken naar

04:54.980 --> 04:57.620
de projectlijst bij deze clausule

04:57.620 --> 05:01.000
hier en bij de projectinvoerclausule.

05:01.000 --> 05:04.270
In beide hebben we template element, host element en element

05:04.270 --> 05:06.970
en we hebben een attach methode enzovoort.

05:06.970 --> 05:09.180
Dus ik wil de code hier verbeteren en wat

05:09.180 --> 05:11.800
code hergebruiken door overerving en een basisclausule

05:11.800 --> 05:14.480
te gebruiken en daarna wil ik ook een speciale

05:14.480 --> 05:16.850
clausule maken voor elk projectitem waarbij

05:16.850 --> 05:20.340
we dan gewoon die projectitemclausule instantiëren binnen

05:20.340 --> 05:23.725
de projectlijst in plaats van handmatig een lijstitem toe

05:23.725 --> 05:27.050
te voegen, zoals dit en dan binnen die 'aan te maken' projectitemclausule

05:27.050 --> 05:34.540
moet dat toevoegende deel gebeuren en dan wil ik ook meer informatie over het projectitem uitvoeren, inclusief de beschrijving

05:34.540 --> 05:40.540
ervan en het aantal toegewezen personen.

05:40.540 --> 05:42.080
Dus, er is nog wat werk te doen

05:42.080 --> 05:44.520
en, voordat we werken aan het project item

05:44.520 --> 05:47.120
in die vorm waarin ik het wil hebben, laten we

05:47.120 --> 05:48.660
er eigenlijk voor zorgen dat

05:48.660 --> 05:53.660
we, allereerst wat overerving toevoegen om onze projectlijst en projectinvoer, of

05:53.800 --> 05:57.693
bepaalde delen daarvan, meer herbruikbaar te maken.
