WEBVTT

00:02.300 --> 00:03.133
ผู้สอน: แน่นอน เป้าหมายของเราไม่ใช่แค่บันทึก

00:03.133 --> 00:05.250
ID นั้น

00:05.250 --> 00:11.110
ฉันต้องการแยกรหัสโครงการที่นี่ในบันทึกในตัวจัดการดรอป

00:11.110 --> 00:15.410
และด้วยเหตุนี้ เป้าหมายก็คือการย้ายโครงการจริงๆ ตอนนี้

00:15.410 --> 00:18.910
หรือเปลี่ยนสถานะโครงการ เพื่อให้แม่นยำ

00:18.910 --> 00:21.400
ทีนี้ เราจะทำอย่างนั้นได้อย่างไร?

00:21.400 --> 00:26.063
ในสถานะของเรา ฉันจะบอกว่าในสถานะโปรเจ็กต์ของเรา ซึ่งขณะนี้เรามีเมธอด

00:26.950 --> 00:30.000
addProject เราจำเป็นต้องมีเมธอด moveProject

00:30.000 --> 00:33.160
ด้วย

00:33.160 --> 00:38.550
และเป้าหมายของวิธีนี้คือการสลับสถานะของโครงการโดยทั่วไป

00:38.550 --> 00:40.180
แน่นอน คุณสามารถตั้งชื่อมันว่า

00:40.180 --> 00:44.390
SwitchProjectStatus หรืออะไรก็ได้ที่คุณต้องการ แต่เนื่องจากเรากำลังทำการลากและวาง

00:44.390 --> 00:46.440
ฉันจึงเรียกมันว่า MoveProject

00:46.440 --> 00:49.470
ดังนั้น ใน MoveProject เป้าหมายคือการย้ายโครงการจากรายการที่มีอยู่ในปัจจุบัน

00:49.470 --> 00:53.860
ไปยังรายการใหม่

00:53.860 --> 00:58.030
ไม่ได้หมายความว่าเราต้องเปลี่ยนสถานะโครงการจากใช้งานอยู่เป็นเสร็จสิ้นเสมอไป

00:58.030 --> 01:00.480
และในทางกลับกัน

01:00.480 --> 01:02.870
ท้ายที่สุด ผู้ใช้สามารถทำเช่นนี้ได้

01:02.870 --> 01:05.060
โดยลากและวางในช่องเดียวกัน

01:05.060 --> 01:07.120
ดังนั้น หากเราทริกเกอร์เมธอดที่เปลี่ยนสถานะเสมอ

01:07.120 --> 01:15.754
เราจะได้รับผลที่ไม่คาดคิดโดยที่การทิ้งในกล่องเดียวกันยังคงสลับโปรเจ็กต์ไปยังอีกกล่องหนึ่ง

01:15.754 --> 01:18.972
ดังนั้น ใน MoveProject เราต้องรู้จริง

01:18.972 --> 01:23.402
ๆ ว่าโครงการใดที่จะย้าย และกล่องใหม่คือกล่องใด

01:23.402 --> 01:24.235
ดังนั้นสถานะใหม่คือสถานะใด

01:25.940 --> 01:28.190
ดังนั้น ฉันคาดว่าจะได้รับรหัสโครงการที่นี่

01:28.190 --> 01:31.410
ซึ่งควรเป็นสตริง และสถานะใหม่

01:31.410 --> 01:34.130
และแน่นอนว่าสถานะใหม่ที่นี่อาจเป็นประเภท

01:34.130 --> 01:36.410
ProjectStatus

01:38.580 --> 01:40.803
จากนั้นภายใน MoveProject

01:41.692 --> 01:44.320
ฉันต้องการค้นหาโครงการที่มี ID

01:44.320 --> 01:46.830
นั้นในอาร์เรย์ของโครงการ

01:46.830 --> 01:49.090
ตรงนี้ ในอาร์เรย์ของโปรเจกต์

01:49.090 --> 01:51.680
แล้วพลิกสถานะของมัน

01:51.680 --> 01:54.580
เพื่อให้เราสามารถติดต่อโครงการนี้ ค้นหาโครงการในนั้น

01:54.580 --> 01:59.440
และวิธีการค้นหาก็สมบูรณ์แบบสำหรับสิ่งนั้น

01:59.440 --> 02:01.210
มันทำงานบนทุกองค์ประกอบในอาร์เรย์นี้

02:01.210 --> 02:05.770
ทำให้เราเข้าถึงทุกองค์ประกอบ และจากนั้นเราต้องคืนค่าจริงหากเป็นองค์ประกอบที่เราต้องการ

02:05.770 --> 02:07.150
และฉันต้องการคืนค่าจริงถ้า

02:07.150 --> 02:09.860
ID ขององค์ประกอบที่เรากำลังดูอยู่ เท่ากับ

02:09.860 --> 02:12.830
projectId ที่ฉันได้รับจากอาร์กิวเมนต์ตรงนี้

02:12.830 --> 02:17.470
เราก็มีองค์ประกอบที่ควรเปลี่ยน และในองค์ประกอบนี้ เราก็แค่ต้อง

02:17.470 --> 02:21.070
เปลี่ยนสถานะเป็นสถานะใหม่

02:21.070 --> 02:22.653
ตอนนี้อาจเป็นโมฆะ ดังนั้นที่นี่ฉันจะเรียกสิ่งนี้ว่า

02:23.490 --> 02:30.550
โปรเจ็กต์ ซึ่งจัดเก็บเป็นค่าคงที่แล้วเรียกว่า โปรเจ็กต์ และตรวจสอบว่ามีโปรเจ็กต์อยู่หรือไม่

02:30.550 --> 02:39.160
และถ้ามีอยู่แล้ว ฉันต้องการตั้งค่าสถานะให้เท่ากับสถานะใหม่ที่นี่

02:39.160 --> 02:39.160
ง่ายอย่างนั้น

02:39.250 --> 02:45.643
สิ่งนี้จะเปลี่ยนวัตถุในอาร์เรย์แล้ว และโดยพื้นฐานแล้วเราก็ทำเสร็จแล้ว

02:46.970 --> 02:50.010
แน่นอนว่าเรายังไม่ได้ทำทั้งหมด

02:50.010 --> 02:52.250
ตอนนี้เราต้องแจ้งให้ทุกคนทราบ รวมถึงผู้ฟังของเราทั้งหมด

02:52.250 --> 02:57.870
ว่ามีบางสิ่งเปลี่ยนแปลงเกี่ยวกับโปรเจ็กต์ของเรา และพวกเขาควรแสดงผลใหม่

02:57.870 --> 02:59.980
ดังนั้นเราต้องตรวจสอบผู้ฟังทั้งหมดอีกครั้ง

02:59.980 --> 03:01.910
และเนื่องจากเราจะทำซ้ำโค้ดที่นี่

03:01.910 --> 03:04.080
ฉันจะจ้างบุคคลภายนอกให้ใช้วิธีส่วนตัวใหม่

03:04.080 --> 03:10.490
updateListeners อาจเป็นชื่อที่ใช้การได้ และในนั้นฉันจะมีสิ่งนี้สำหรับการวนซ้ำ ซึ่งเราต้องดำเนินการต่อไป

03:10.490 --> 03:13.660
ฟังทั้งหมดแล้วทำอะไร

03:13.660 --> 03:17.430
จากนั้นฉันจะเรียกการอัปเดตนี้ฟังทั้งจาก

03:17.430 --> 03:20.890
addProject และจากเมธอด moveProject

03:20.890 --> 03:23.033
ที่นี่ เฉพาะในกรณีที่เราเปลี่ยนแปลงบางอย่าง

03:24.350 --> 03:26.100
ตอนนี้ผู้ฟังทั้งหมดจะถูกกระตุ้น

03:26.100 --> 03:28.980
และถ้าคุณจำได้ ผู้ฟังในแอปของเราที่นี่

03:28.980 --> 03:33.010
โดยทั่วไปจะนำไปสู่รายการเพื่อแสดงผลรายการของมัน

03:33.010 --> 03:35.310
จึงจะทำงานได้ตรงตามที่ควร

03:35.310 --> 03:37.940
หรือควรทำงานตรงตามที่ควร

03:37.940 --> 03:40.640
ตอนนี้เรามีเมธอดของ moveProject ซึ่งอยู่ใน

03:40.640 --> 03:43.730
drop handler เราสามารถใช้วิธีนี้ได้แล้ว

03:43.730 --> 03:46.390
ตอนนี้เราสามารถใช้ projectState

03:46.390 --> 03:49.670
เรียก moveProject และส่งผ่านรหัสโครงการ

03:49.670 --> 03:52.296
และตอนนี้สถานะโครงการใหม่

03:52.296 --> 03:57.880
และสถานะโครงการใหม่ขึ้นอยู่กับรายการที่เราทิ้ง

03:57.880 --> 04:01.790
ดังนั้น ฉันต้องการเชื่อมโยงตัวจัดการดรอปของฉันโดยอัตโนมัติ

04:01.790 --> 04:06.020
เพื่อให้คีย์เวิร์ดนี้ในตัวจัดการดรอปอ้างอิงถึงคลาสรอบข้าง

04:06.020 --> 04:08.500
และคลาสรอบข้างนี้คือรายการโปรเจ็กต์

04:08.500 --> 04:10.320
ซึ่งถ้าคุณจำได้ จะมีคุณสมบัติประเภทที่นี่

04:10.320 --> 04:13.020
เรากำลังจัดเก็บมัน ที่นี่ เรามีประเภท คุณสมบัติ

04:13.020 --> 04:18.120
และที่ใช้งานอยู่หรือเสร็จสิ้นแล้ว

04:18.120 --> 04:21.000
ตอนนี้เราต้องแปลค่าที่ใช้งานอยู่หรือเสร็จสิ้นเป็นค่า

04:21.000 --> 04:22.640
enum ของเรา

04:22.640 --> 04:24.850
ตรงนี้ผมให้ผ่านครับ type และฉันตรวจสอบว่ามันเท่ากับ

04:24.850 --> 04:27.230
active หรือไม่ ซึ่งในกรณีนี้ เราจะผ่านใน

04:27.230 --> 04:31.580
ProjectStatus ใช้งาน เป็นสถานะใหม่ของโครงการ

04:31.580 --> 04:38.160
เนื่องจากเป็นสถานะของรายการที่เราย้ายโครงการไป

04:38.160 --> 04:45.423
มิฉะนั้น เราจะผ่านใน ProjectStatus เสร็จแล้ว ขอผมฟอร์แมตใหม่เพื่อให้อ่านง่ายขึ้น

04:46.730 --> 04:48.110
ด้วยสิ่งนั้นเรามาลองดูกัน

04:48.110 --> 04:52.440
มาบันทึกทั้งหมด และเพิ่มโครงการใหม่ที่นี่ และตอนนี้ ลากไปยังโครงการที่เสร็จแล้ว

04:52.440 --> 04:58.270
และมันจะสลับ และเหมือนกัน และถ้าฉันย้ายกลับ

04:58.270 --> 05:02.320
ถ้าฉันปล่อยให้ไปที่นี่ในโครงการที่ใช้งานอยู่ จะไม่มีอะไรเปลี่ยนแปลง

05:02.320 --> 05:04.400
ตอนนี้คุณจะเห็นว่าหากคุณตรวจสอบ

05:04.400 --> 05:11.450
DOM ในทางเทคนิคแล้ว การแสดงผลนั้นอาจไม่เหมาะสม ดังนั้นเราจึงสามารถคิดหาวิธีแก้ไขปัญหาที่จะตรวจสอบว่าสถานะมีการเปลี่ยนแปลงจริงหรือไม่

05:11.450 --> 05:18.890
และหากไม่เป็นเช่นนั้น เราก็ไม่ทำ ไม่อัปเดต นั่นคือสิ่งที่เราทำได้

05:18.890 --> 05:22.620
แต่จากมุมมองของ UI จะอัปเดตตามที่ควร

05:22.620 --> 05:27.120
ทีนี้มาเพิ่มโปรเจกต์ที่สองและดูว่ามันจะทำลายบางอย่างหรือไม่

05:27.120 --> 05:33.720
ถ้าทุกอย่างยังใช้การได้ และฉันจะบอกว่ามันดูดี มันดูดีมากสำหรับฉัน

05:33.720 --> 05:37.120
ทุกอย่างดูเหมือนจะทำงานได้อย่างที่ควรจะเป็น

05:37.120 --> 05:42.600
ดังนั้นการลากและวางจึงใช้งานได้ดีที่นี่ แต่มีการปรับปรุงอย่างหนึ่งที่ฉันพูดถึงในสถานะโปรเจ็กต์

05:42.600 --> 05:46.305
ใน moveProject เมื่อฉันเรียกสิ่งนี้ว่า updateListeners

05:46.305 --> 05:49.470
เราสามารถตรวจสอบได้ว่าเราเปลี่ยนสถานะจริงๆ

05:49.470 --> 05:51.920
หรือไม่

05:51.920 --> 05:54.150
ที่นี่เราสามารถตรวจสอบได้ว่าโปรเจกต์หรือไม่

05:54.150 --> 05:57.940
หากเราพบโปรเจกต์หนึ่ง และถ้าสถานะโปรเจกต์แตกต่างจากสถานะใหม่

05:57.940 --> 06:03.830
จากนั้นเราจะเปลี่ยนสถานะและอัปเดตผู้ฟังเท่านั้น

06:03.830 --> 06:06.060
หากสถานะยังเหมือนเดิม เราจะไม่ทำเช่นนี้

06:06.060 --> 06:09.310
และเราจะหลีกเลี่ยงรอบการแสดงซ้ำที่ไม่จำเป็น

06:09.310 --> 06:12.900
ทีนี้ถ้าเราบันทึกมันและเราเพิ่มโปรเจกต์ใหม่อย่างรวดเร็ว

06:12.900 --> 06:14.790
คุณจะเห็นว่าผมตรวจสอบองค์ประกอบที่นี่หรือไม่

06:14.790 --> 06:18.190
และคุณดู L-I และตรวจสอบว่ามันกะพริบหรือไม่ ซึ่งหมายความว่ามันจะเรนเดอร์ใหม่

06:18.190 --> 06:30.990
มันไม่แฟลชที่นี่เท่านั้น dropable กะพริบ คลาสที่เราเพิ่งเพิ่มเข้าไป แต่ L-I ไม่กะพริบหากฉันวางในช่องเดียวกัน แต่จะกะพริบก็ต่อเมื่อฉันย้ายไปยังช่องอื่น

06:30.990 --> 06:34.460
แล้วมันก็ควรจะกระพริบ เพราะตอนนั้นเราย้ายมันจริงๆ

06:34.460 --> 06:36.180
ตอนนี้เราเพิ่มประสิทธิภาพนี้เล็กน้อย

06:36.180 --> 06:39.050
และตอนนี้เราได้ทำงานแบบลากและวางที่นี่ ทั้งหมดสร้างและขับเคลื่อนด้วยและโดย

06:39.050 --> 06:42.223
TypeScript
