WEBVTT

00:02.100 --> 00:04.870
Giáo viên: Hãy gắn bó với mảng và đối tượng.

00:04.870 --> 00:06.750
Một cú pháp quan trọng khác, mà

00:06.750 --> 00:09.160
bạn sẽ thấy rất nhiều trong các dự án JavaScript

00:09.160 --> 00:10.440
hiện đại và cả Typescript,

00:10.440 --> 00:13.133
là phá hủy mảng và đối tượng.

00:14.180 --> 00:15.013
Làm thế nào nó hoạt động?

00:15.013 --> 00:17.220
Chà, hãy bắt đầu với mảng mà chúng

00:17.220 --> 00:20.220
ta có, mảng sở thích có hai sở thích.

00:20.220 --> 00:22.200
Giả sử bạn muốn trích xuất hai

00:22.200 --> 00:26.340
sở thích này và lưu trữ chúng trong các biến hoặc hằng số.

00:26.340 --> 00:28.891
Tất nhiên, chúng ta có thể làm điều

00:28.891 --> 00:32.340
đó với sở thích một sở thích ngang bằng với chỉ

00:32.340 --> 00:33.470
số 0, là yếu tố đầu

00:33.470 --> 00:34.820
tiên.

00:34.820 --> 00:38.720
Và điều tương tự có thể xảy ra với sở thích thứ hai đối với sở thích ở chỉ số một.

00:38.720 --> 00:40.500
Thao tác này sẽ lấy ra hai phần

00:40.500 --> 00:43.330
tử này và lưu trữ chúng trong các hằng số.

00:43.330 --> 00:44.720
Chúng tôi mất hai dòng mã và

00:44.720 --> 00:46.710
bạn càng muốn truy xuất nhiều yếu tố thì

00:46.710 --> 00:48.493
chúng tôi càng cần nhiều dòng mã.

00:49.340 --> 00:51.690
Phá hủy mảng cho phép chúng ta rút ngắn nó.

00:51.690 --> 00:53.090
Với tính năng phá hủy mảng,

00:53.090 --> 00:56.250
cũng hoạt động với let chứ không chỉ với const, bạn thêm

00:56.250 --> 00:59.760
dấu ngoặc vuông ở bên trái của dấu bằng, đây là một vị trí không

00:59.760 --> 01:01.400
bình thường.

01:01.400 --> 01:02.900
Chưa từng thấy điều đó trước đây.

01:02.900 --> 01:04.780
Và ở phía bên phải, bạn có mảng

01:04.780 --> 01:06.480
mà bạn muốn hủy cấu trúc.

01:06.480 --> 01:08.430
Bây giờ hủy cấu trúc thực sự có nghĩa

01:08.430 --> 01:10.470
là bạn kéo các phần tử ra khỏi mảng.

01:10.470 --> 01:13.570
Và ở đây, phía bên trái giữa các dấu ngoặc vuông này, bạn lưu

01:13.570 --> 01:15.040
trữ chúng trong các hằng số,

01:15.040 --> 01:17.250
hoặc nếu bạn sử dụng let, trong các biến.

01:17.250 --> 01:21.170
Vì vậy, ở đây, chúng ta có thể có sở thích một và sở thích hai.

01:21.170 --> 01:23.000
Và nhiệm vụ của cú pháp này là,

01:23.000 --> 01:25.640
nó đi qua mảng sở thích, lấy phần tử đầu tiên

01:25.640 --> 01:26.920
và lưu trữ nó trong một

01:26.920 --> 01:29.050
hằng số có tên này, lấy phần tử thứ

01:29.050 --> 01:30.290
hai, lưu trữ nó trong

01:30.290 --> 01:32.320
một hằng số có tên này.

01:32.320 --> 01:35.490
Bạn thậm chí có thể thêm các tham số còn lại ở đây

01:35.490 --> 01:38.720
và các sở thích còn lại ở đây trong trường hợp mảng

01:38.720 --> 01:42.130
sở thích có nhiều phần tử hơn chỉ hai phần tử.

01:42.130 --> 01:46.260
Sau đó, tất cả các yếu tố còn lại mà bạn không đưa vào sở thích một

01:46.260 --> 01:48.070
hoặc sở thích hai sẽ được lưu

01:48.070 --> 01:51.290
trữ trong một mảng mới gọi là sở thích còn lại.

01:51.290 --> 01:54.090
Vì vậy, chúng sẽ được hợp nhất với nhau thành một mảng mới.

01:54.090 --> 01:57.940
Nhân tiện, việc phá hủy không thay đổi mảng ban đầu.

01:57.940 --> 02:02.940
Vì vậy, nếu chúng ta an ủi. đăng nhập sở thích, sở thích một và sở thích hai

02:04.260 --> 02:06.840
vào đây, bạn sẽ thấy rằng sở thích vẫn là mảng cũ.

02:06.840 --> 02:08.840
Nó không trống rỗng hay bất cứ thứ gì tương tự.

02:08.840 --> 02:11.780
Vì vậy, các giá trị mà chúng tôi lấy ra trong dấu ngoặc

02:11.780 --> 02:14.870
kép thực sự chỉ được sao chép vào các hằng số hoặc biến

02:14.870 --> 02:17.720
mới, không thực sự bị xóa khỏi mảng.

02:17.720 --> 02:18.980
Bây giờ đó là phá hủy mảng.

02:18.980 --> 02:20.600
Chúng tôi đã có cùng một đối tượng.

02:20.600 --> 02:21.690
Chúng tôi đã có người của chúng tôi ở đây.

02:21.690 --> 02:23.440
Bây giờ, giả sử chúng ta muốn lưu

02:23.440 --> 02:26.630
trữ tên và tuổi trong các hằng số hoặc biến độc lập.

02:26.630 --> 02:28.480
Giống như quá trình phá hủy mảng,

02:28.480 --> 02:31.840
quá trình phá hủy đối tượng hoạt động với cả const và let.

02:31.840 --> 02:33.010
Ở đây tôi sẽ đi với const.

02:33.010 --> 02:34.930
Và bây giờ chúng ta có thể sử dụng dấu

02:34.930 --> 02:37.090
ngoặc nhọn ở phía bên trái của dấu bằng.

02:37.090 --> 02:38.883
Mặc dù một cú pháp mới, tôi đoán vậy.

02:39.920 --> 02:43.750
Và có đối tượng của chúng ta, hoặc biến trỏ vào đối tượng

02:43.750 --> 02:44.890
ở phía bên phải.

02:44.890 --> 02:46.110
Nhân đây, xin lưu ý, đây không

02:46.110 --> 02:48.770
phải là loại đối tượng mà tôi đang chỉ định ở đây.

02:48.770 --> 02:51.200
Tôi không có dấu hai chấm ở đây.

02:51.200 --> 02:54.080
Nó thực sự chỉ là các dấu ngoặc nhọn như thế này

02:54.080 --> 02:58.210
ở phía bên trái mà không có dấu hai chấm sau một số tên cố định.

02:58.210 --> 03:01.000
Vì vậy, tôi không chỉ định loại giá trị có thể

03:01.000 --> 03:02.720
được lưu trữ là hằng số.

03:02.720 --> 03:05.470
Tôi thực sự chỉ đang sử dụng một cú pháp đặc biệt.

03:05.470 --> 03:08.450
Bởi vì ở đây, bây giờ chúng ta cũng có thể tham

03:08.450 --> 03:11.340
chiếu đến các tên thuộc tính mà chúng ta có

03:11.340 --> 03:13.920
trong một đối tượng, chẳng hạn như tên

03:13.920 --> 03:18.030
và tuổi, để lấy các giá trị cho các khóa này ra khỏi người và lưu

03:18.030 --> 03:21.283
trữ chúng trong các hằng số có cùng tên.

03:23.290 --> 03:24.390
Bây giờ ở đây tôi

03:24.390 --> 03:27.820
gặp lỗi vì ở trên cùng tôi đã có một biến tuổi.

03:27.820 --> 03:30.890
Và tên hóa ra là một biến có sẵn trên toàn cầu, dù

03:30.890 --> 03:32.173
sao cũng tồn tại.

03:33.240 --> 03:34.940
Vì vậy, giải pháp thay thế

03:34.940 --> 03:38.313
thực sự là chỉ cần sử dụng một tên khóa khác ở đây, chẳng

03:40.240 --> 03:41.920
hạn như FirstName.

03:41.920 --> 03:45.020
Và bây giờ chúng ta có thể lấy ra giá trị bằng khóa đó tại đây.

03:45.020 --> 03:46.900
Vì vậy, đây là cách hoạt động của tính năng phá hủy đối tượng.

03:46.900 --> 03:50.110
Điều quan trọng ở đây là để phá hủy mảng, các

03:50.110 --> 03:52.260
phần tử được lấy ra theo thứ tự

03:52.260 --> 03:55.110
vì mảng là một danh sách có thứ tự.

03:55.110 --> 03:58.110
Trong các đối tượng, thứ tự không phải lúc nào cũng được đảm

03:58.110 --> 04:00.720
bảo và do đó, chúng tôi không lấy các phần tử ra theo

04:00.720 --> 04:02.070
vị trí mà theo tên khóa.

04:02.070 --> 04:04.790
Vì vậy, các giá trị hoặc tên bạn chỉ định ở đây

04:04.790 --> 04:05.930
giữa các dấu ngoặc

04:05.930 --> 04:07.630
nhọn, không phải là tùy ý.

04:07.630 --> 04:09.700
Bạn không thể nghĩ ra những cái tên ở đây.

04:09.700 --> 04:13.860
Đây phải là các tên thuộc tính mà bạn tìm thấy trong đối tượng, để

04:13.860 --> 04:16.010
có thể lấy các giá trị cho các khóa

04:16.010 --> 04:18.160
này ra khỏi đối tượng. Sau đó, chúng

04:18.160 --> 04:20.600
được lưu trữ trong các hằng số hoặc biến

04:20.600 --> 04:21.880
có cùng tên.

04:21.880 --> 04:24.120
Nếu bạn muốn ghi đè tên đó, bạn có thể làm

04:24.120 --> 04:25.970
như vậy bằng dấu hai chấm ở đây.

04:25.970 --> 04:28.050
Một lần nữa, nó không phải là một bài tập loại ở đây.

04:28.050 --> 04:29.680
Nó chỉ đặt một tên mới.

04:29.680 --> 04:31.970
Vì vậy, đây là tất cả cú pháp JavaScript,

04:31.970 --> 04:33.820
không liên quan gì đến Bản mô tả.

04:33.820 --> 04:35.370
Vì vậy, ở đây chúng ta có thể

04:35.370 --> 04:38.750
lưu trữ cái này trong một hằng số tên người dùng chẳng hạn.

04:38.750 --> 04:39.840
Và do đó, sau đó,

04:39.840 --> 04:44.040
chúng ta có thể an ủi. log userName và age, nhưng không

04:44.040 --> 04:45.290
phải firstName, vì

04:45.290 --> 04:47.870
về cơ bản, nó đã ghi đè firstName thành

04:47.870 --> 04:50.900
tên userName trong hằng số mà chúng ta tạo khi

04:50.900 --> 04:52.790
lấy ra các giá trị ở đây.

04:52.790 --> 04:55.880
Tuổi không bị ghi đè, vì vậy chúng ta có thể sử dụng nó như vậy.

04:55.880 --> 04:58.183
Một lần nữa, đây không phải là một bài tập kiểu ở đây.

04:58.183 --> 05:00.210
Đây là cú pháp JavaScript, trong

05:00.210 --> 05:03.680
đó chúng tôi đặt bí danh đổi tên một thuộc tính mà chúng tôi

05:03.680 --> 05:05.500
đang rút ra khỏi người.

05:05.500 --> 05:07.430
Ngoài ra, giống như trước đây với mảng,

05:07.430 --> 05:09.840
bản thân đối tượng người không thay đổi.

05:09.840 --> 05:13.380
Chúng tôi thực sự chỉ sao chép các giá trị này ra khỏi đối tượng.

05:13.380 --> 05:15.643
Và do đó, chúng tôi nhận được đầu ra này ở đây.
