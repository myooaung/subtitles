WEBVTT

00:02.310 --> 00:03.940
Adam: Yani düzeltmemiz gereken iki

00:03.940 --> 00:06.500
sorunumuz var, eğer böyle adlandırmak istiyorsak.

00:06.500 --> 00:07.820
Şimdi projelerin her iki

00:07.820 --> 00:10.960
kutuda da görünmesi sorunuyla başlamak istiyorum.

00:10.960 --> 00:13.050
Biraz filtreleme yapmak

00:13.050 --> 00:15.980
istiyorum ve filtreleme için en iyi

00:15.980 --> 00:18.930
yer elbette dinleyici işlevimiz.

00:18.930 --> 00:22.743
Dinleyicimizi kaydettiğimiz yere, burada

00:26.000 --> 00:29.170
proje listesi maddesine gidersek.

00:29.170 --> 00:32.270
Sonra, burada, bir proje listesi var, değil mi?

00:32.270 --> 00:36.170
Şimdi, bu proje listesi tüm projeleri kapsamaktadır.

00:36.170 --> 00:39.400
Ancak şimdi, proje listesi maddesinin içinde yalnızca

00:39.400 --> 00:43.140
aktif veya bitmiş projelerle ilgileniyoruz.

00:43.140 --> 00:44.250
Şimdi, burada, bu arada,

00:44.250 --> 00:49.103
teorik olarak enum'umuzu da kullanabilirdik, ancak aslında, aşağıdaki enum'da

00:50.660 --> 00:53.160
veya aşağıdaki tipte saklanan somut değerlere

00:53.160 --> 00:58.990
ihtiyacım var ve bu nedenle, burada her zaman bir enum kullanmak istemiyorum çünkü string literal

00:58.990 --> 01:02.180
tiplerini göstermek istiyorum.

01:02.180 --> 01:06.190
Burada dinleyici işlevimizin içinde yapacağımız şey, projeleri

01:06.190 --> 01:08.690
depolamadan ve oluşturmadan önce onları

01:08.690 --> 01:10.470
filtrelemektir.

01:10.470 --> 01:13.020
Yani, burada ilgili projelerimiz var

01:13.020 --> 01:16.660
diyebiliriz ve bu da elbette filtrelenmiş projeler.

01:16.660 --> 01:19.070
Filtre yöntemi, JavaScript'teki herhangi bir

01:19.070 --> 01:21.460
dizide var olan varsayılan bir yöntemdir.

01:21.460 --> 01:23.690
Bu, daha sonra bu projeler dizisindeki

01:23.690 --> 01:26.820
her öğe üzerinde çalışan bir işlev alır ve buradaki

01:26.820 --> 01:29.660
işlev true değerini döndürdüğünde, öğeyi daha

01:29.660 --> 01:30.940
sonra ilgili projelerde

01:30.940 --> 01:35.040
depolanan yeni oluşturulmuş bir dizide tutarız.

01:35.040 --> 01:38.130
Bu fonksiyon false döndürürse, öğeyi orijinal

01:38.130 --> 01:39.770
listeden değil, oluşturulan

01:39.770 --> 01:41.660
ve ilgili projelerde depolanan

01:41.660 --> 01:44.230
yeni listeden düşürürüz.

01:44.230 --> 01:46.600
Dolayısıyla, burada, projeyi tutmak isteyip istemediğimize

01:46.600 --> 01:48.810
bağlı olarak true veya false döndürmemiz gerekir.

01:48.810 --> 01:52.430
Bunun için de elbette sadece duruma bakmamız gerekiyor.

01:52.430 --> 01:55.310
Proje durumu bir enum'dur ve aktif bir

01:55.310 --> 01:59.070
proje listesindeysek proje durumunun proje durumu

01:59.070 --> 02:03.590
aktif'e eşit olup olmadığını, yani tür özelliği aktifse

02:03.590 --> 02:05.790
veya bitmiş bir listedeysek

02:05.790 --> 02:07.940
proje durumunun bitmiş olup

02:07.940 --> 02:12.270
olmadığını kontrol etmek istiyoruz.

02:12.270 --> 02:15.430
Bu yüzden burada, ok fonksiyonu kısayolunu

02:15.430 --> 02:17.250
kullanmadan, bunu küme parantezleriyle

02:17.250 --> 02:20.100
sararak gerçek bir fonksiyon gövdesi yazacağım

02:20.100 --> 02:25.540
ve sonra kontrol edebiliriz, eğer bu tip eşit aktifse, o zaman bu kontrolün

02:26.800 --> 02:31.480
sonucunu burada döndürmek istiyorum ve bu nedenle, sadece bu if

02:31.480 --> 02:34.130
ifadesinden sonra, karşılaştırmayı

02:34.130 --> 02:40.160
bitmiş proje durumuna döndürmek istiyorum.

02:40.160 --> 02:42.220
Bununla birlikte, artık burada, atanmış projelerde

02:42.220 --> 02:43.520
saklayabileceğimiz ilgili

02:43.520 --> 02:45.490
projelerimizi elde ederiz.

02:45.490 --> 02:47.070
Şimdi işe yarayıp yaramadığını görelim.

02:47.070 --> 02:48.053
Yeniden yüklersem

02:49.310 --> 02:51.570
ve buraya bir proje eklersek, bu çalışır

02:51.570 --> 02:52.743
mı?

02:54.950 --> 02:55.930
Bu işe yarıyor ve görüyorsunuz,

02:55.930 --> 02:58.050
sadece aktif projelere ekleniyor, bitmiş

02:58.050 --> 03:00.020
projelere değil.

03:00.020 --> 03:02.390
Ancak, buraya ikinci bir proje eklersem,

03:02.390 --> 03:04.740
bu çoğaltma devam eder.

03:04.740 --> 03:08.720
Şimdi bu, projelerimizi nasıl oluşturduğumuzla ilgili.

03:08.720 --> 03:10.520
Render projelerinin içinde, her

03:10.520 --> 03:13.430
zaman tüm proje öğelerimizi gözden geçirir ve bunları

03:13.430 --> 03:15.090
listeye ekleriz.

03:15.090 --> 03:16.640
Şimdi, elbette bununla ilgili

03:16.640 --> 03:19.900
sorun, zaten ekrana işlenmiş bir proje öğesine sahip

03:19.900 --> 03:21.950
olabileceğimizdir.

03:21.950 --> 03:25.020
Şimdi, burada mümkün olan en iyi çözüm, gereksiz yeniden

03:25.020 --> 03:27.450
render işleminden kaçınmak için neyin zaten

03:27.450 --> 03:30.170
render edildiğini ve neyin render edilmesi gerektiğini

03:30.170 --> 03:31.730
kontrol ettiğiniz bir tür karşılaştırma

03:31.730 --> 03:34.110
yapmak olacaktır.

03:34.110 --> 03:35.760
Ancak bu karşılaştırmayı gerçek

03:35.760 --> 03:38.440
DOM'a bakarak yapmak da oldukça yüksek bir performansa

03:38.440 --> 03:39.710
mal oluyor.

03:39.710 --> 03:43.100
Dolayısıyla, buradaki uygulama için liste öğemizi alıp

03:43.100 --> 03:45.250
iç HTML'yi boş bir dizeye ayarlayarak

03:45.250 --> 03:48.720
tüm içeriğini temizlememiz, yani tüm liste öğelerinden

03:48.720 --> 03:49.640
kurtulmamız ve

03:49.640 --> 03:53.710
ardından yeniden render etmemiz gayet uygundur.

03:53.710 --> 03:56.350
Bu, yeni bir proje eklediğimizde, tüm projeleri

03:56.350 --> 03:58.470
yeniden oluşturduğumuz anlamına gelir,

03:58.470 --> 04:00.210
ancak buradaki bu projenin amacı

04:00.210 --> 04:01.670
için, buradaki bu uygulama

04:01.670 --> 04:03.490
için, bu kesinlikle iyidir.

04:03.490 --> 04:05.410
Şimdi bununla birlikte, eğer bunu kaydedersek,

04:05.410 --> 04:06.987
bir kez daha deneyelim.

04:06.987 --> 04:10.540
"Bu işe yarıyor mu? " ilk proje ve şimdi buraya

04:10.540 --> 04:12.960
başka bir proje eklersem, görüyorsunuz,

04:12.960 --> 04:14.530
o ekleniyor ama diğer

04:14.530 --> 04:17.453
proje tekrar eklenmiyor.

04:18.430 --> 04:21.870
Whoops ve şimdi, burada (mırıldanıyor) hatası aldım çünkü açıklama

04:21.870 --> 04:23.540
yeterince uzun değildi.

04:23.540 --> 04:26.230
Anlayacağınız üzere, artık tüm bunlar

04:26.230 --> 04:28.150
çalışıyor ve bu projeleri olması

04:28.150 --> 04:30.090
gerektiği gibi, yani doğru şekilde

04:30.090 --> 04:32.170
oluşturuyoruz.

04:32.170 --> 04:35.050
Ve bununla birlikte, uygulama çok da kötü görünmüyor.

04:35.050 --> 04:36.890
Eksik olan tek şey, bazı

04:36.890 --> 04:39.550
sürükle ve bırak işlevleri veya projeleri

04:39.550 --> 04:44.040
bu ilk listeden ikinci listeye almanın bir yolu.

04:44.040 --> 04:45.180
Elimizdeki diğer bilgileri,

04:45.180 --> 04:46.930
açıklama ve kişi sayısını da tam

04:46.930 --> 04:48.900
olarak vermiyoruz.

04:48.900 --> 04:50.750
Yani, bu da harika değil.

04:50.750 --> 04:54.980
Ayrıca, proje listesinde bu maddeye ve proje

04:54.980 --> 04:57.620
giriş maddesine baktığımızda

04:57.620 --> 04:58.910
da biraz kod tekrarımız

04:58.910 --> 05:01.000
var.

05:01.000 --> 05:04.270
Her ikisinde de şablon elemanımız, ana elemanımız ve elemanımız

05:04.270 --> 05:06.970
var ve bir ekleme yöntemimiz var vb.

05:06.970 --> 05:09.180
Bu nedenle, buradaki kodu iyileştirmek

05:09.180 --> 05:11.800
ve kalıtım kullanarak ve bir temel cümle kullanarak

05:11.800 --> 05:14.480
bazı kodları yeniden kullanmak istiyorum ve daha

05:14.480 --> 05:16.850
sonra, her proje öğesi için özel bir cümle

05:16.850 --> 05:18.580
oluşturmak istiyorum, burada

05:18.580 --> 05:20.340
bir liste öğesini manuel olarak

05:20.340 --> 05:22.200
eklemek yerine proje listesinin

05:22.200 --> 05:23.725
içinde bu proje öğesi cümlesini

05:23.725 --> 05:27.050
örneklendiriyoruz, bunun gibi ve daha sonra bu 'oluşturulacak'

05:27.050 --> 05:30.700
proje öğesi cümlesinin içinde, bu ekleme kısmı gerçekleşmeli

05:30.700 --> 05:34.540
ve daha sonra açıklaması ve atanan kişi sayısı da dahil olmak üzere

05:34.540 --> 05:40.540
proje öğesi hakkında daha fazla bilgi çıktısı almak istiyorum.

05:40.540 --> 05:42.080
Bu nedenle, yapılacak bazı

05:42.080 --> 05:44.520
işler var ve proje öğesi üzerinde istediğim

05:44.520 --> 05:47.120
biçimde çalışmadan önce, proje listemizi

05:47.120 --> 05:48.660
ve proje girdimizi veya bunların

05:48.660 --> 05:53.660
belirli bölümlerini daha yeniden kullanılabilir hale getirmek için öncelikle

05:53.800 --> 05:57.693
bazı kalıtımlar eklediğimizden emin olalım.
