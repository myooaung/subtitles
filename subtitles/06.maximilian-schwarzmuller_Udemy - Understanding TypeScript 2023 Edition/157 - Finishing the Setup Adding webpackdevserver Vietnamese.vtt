WEBVTT

00:02.160 --> 00:05.070
-: Hiện tại tôi không sử dụng máy chủ webpack-dev.

00:05.070 --> 00:07.680
Tuy nhiên, bây giờ việc sử dụng nó rất đơn giản.

00:07.680 --> 00:10.030
Chúng tôi chỉ cần gói. json và bây giờ

00:10.030 --> 00:12.430
ở đó thay vì "lite-server",

00:12.430 --> 00:17.380
hãy sử dụng "webpack-dev-server", như thế này.

00:17.380 --> 00:20.020
Và bây giờ hãy bắt đầu lại npm start.

00:20.020 --> 00:21.560
Bây giờ những gì bạn sẽ thấy

00:21.560 --> 00:23.610
là điều này hiện tạo ra một máy chủ chạy

00:23.610 --> 00:25.780
trên máy chủ lưu trữ cục bộ 8080 và nó tạo

00:25.780 --> 00:28.330
ra luồng công việc xây dựng gói webpack.

00:28.330 --> 00:30.060
Vì vậy, bây giờ nếu bạn truy cập máy chủ cục bộ

00:30.060 --> 00:32.020
8080, chúng tôi sẽ thấy dự án của chúng tôi ở đó.

00:32.020 --> 00:33.860
Điều thú vị bây giờ là nếu chúng ta thay

00:33.860 --> 00:35.510
đổi điều gì đó trong mã, chẳng hạn,

00:35.510 --> 00:38.520
nếu bạn điều chỉnh nhật ký bảng điều khiển ERA ở đây, và nó

00:38.520 --> 00:41.200
được lưu và sau đó bạn xem phần dưới cùng ở đây, bạn sẽ

00:41.200 --> 00:43.160
thấy nó được biên dịch lại.

00:43.160 --> 00:46.450
Tuy nhiên, nếu bạn tải lại, bạn sẽ không thấy nhật ký ở đây Và

00:46.450 --> 00:47.860
cả trong tab nguồn, trong

00:47.860 --> 00:49.130
tab nguồn webpack, nếu

00:49.130 --> 00:51.920
bạn truy cập ứng dụng. ts, bạn không thấy nhật ký ở đây.

00:51.920 --> 00:54.820
Vì vậy, nó thực sự đã không tải đúng mã.

00:54.820 --> 00:58.790
Điều này trở nên rõ ràng hơn nếu tôi xóa gói này. tập tin js ở đây.

00:58.790 --> 01:01.513
Nếu bây giờ tôi khởi động lại quá trình bắt đầu

01:02.630 --> 01:04.750
npm này, bạn sẽ thấy nó vẫn hoạt động

01:04.750 --> 01:08.090
và nhân tiện, đừng ngạc nhiên rằng thư mục dist hiện vẫn

01:08.090 --> 01:10.240
trống, trong chế độ máy chủ webpack-dev,

01:10.240 --> 01:13.020
gói chỉ được tạo trong bộ nhớ, vì vậy nó ở đó và nó

01:13.020 --> 01:15.840
được tải bởi máy chủ nhà phát triển, nhưng nó không

01:15.840 --> 01:18.490
thực sự được ghi vào dist.

01:18.490 --> 01:20.270
Nhưng bạn sẽ thấy rằng nếu bạn tải

01:20.270 --> 01:22.180
lại, trang này cũng bị treo.

01:22.180 --> 01:24.050
Bây giờ, tôi đã nói rằng tập tin

01:24.050 --> 01:27.080
sẽ ở đó, nhưng có vẻ như nó không ở đó, phải không?

01:27.080 --> 01:29.120
Bây giờ nó bị thiếu trên dist như tôi đã nói, và tất nhiên

01:29.120 --> 01:32.120
chúng tôi đang nhập từ dist/bundle. js và chỉ

01:32.120 --> 01:35.130
mục. html, nhưng thực sự bạn có thể tin

01:35.130 --> 01:36.810
tôi rằng nó được tạo trong bộ nhớ.

01:36.810 --> 01:38.450
Vấn đề chỉ là mọi thứ không

01:38.450 --> 01:41.640
được kết nối chính xác vào lúc này.

01:41.640 --> 01:45.330
Để tinh chỉnh cái này, chúng ta phải vào webpack. cấu hình. js và ở đó, trong

01:45.330 --> 01:50.330
đầu ra, thực sự thêm khóa publicPath và đặt

01:50.350 --> 01:53.647
khóa này thành "dist. Nếu bây giờ bạn lưu cái này và khởi động lại, bây

01:56.250 --> 01:59.120
giờ bạn sẽ thấy nó tải lại và bây giờ bạn thấy

01:59.120 --> 02:00.670
"Xin chào" ở đây.

02:00.670 --> 02:02.400
Trong tab nguồn, bây giờ

02:02.400 --> 02:05.320
bạn cũng thấy đầu ra chính xác ở đó.

02:05.320 --> 02:06.580
Nếu bạn vào thư mục dấu

02:06.580 --> 02:07.860
chấm, source app. ts, bạn sẽ thấy câu lệnh nhật ký giao diện điều khiển.

02:07.860 --> 02:11.270
Và nếu bây giờ tôi truy cập app. ts và xóa nó, nó sẽ xây dựng lại và bây giờ câu lệnh nhật

02:11.270 --> 02:13.893
ký bảng điều khiển đã biến mất ở đó.

02:15.220 --> 02:18.460
Đây chỉ là một cấu hình bổ sung cần thiết

02:18.460 --> 02:20.410
để máy chủ webpack-dev

02:20.410 --> 02:22.970
thực sự hiểu đầu ra được ghi vào

02:22.970 --> 02:26.520
đâu và vị trí của nó so với chỉ mục. tập tin html.

02:26.520 --> 02:29.910
Bởi vì theo mặc định, máy chủ

02:29.910 --> 02:32.180
webpack-dev phục vụ tệp index. html, nó sẽ tìm thấy trong cùng thư mục khi bạn chạy tập

02:32.180 --> 02:34.030
lệnh này tại đây.

02:34.030 --> 02:37.550
Điều đó đúng, nhưng sau đó nó không tạo kết nối chính xác

02:37.550 --> 02:40.520
đến thư mục dist, đó là lý do tại sao chúng tôi phải

02:40.520 --> 02:42.030
thông báo cho máy chủ webpack-dev

02:42.030 --> 02:44.970
bằng publicPath nơi tìm các xác nhận của chúng

02:44.970 --> 02:48.040
tôi, vì vậy gói của chúng tôi. js trong trường hợp này.

02:48.040 --> 02:50.960
Bây giờ nếu chúng tôi thoát khỏi máy chủ phát

02:50.960 --> 02:52.370
triển, có một cài đặt khác mà tôi muốn áp

02:52.370 --> 02:53.790
dụng ở đây trong chế độ phát triển.

02:53.790 --> 02:56.080
Và tôi sẽ làm điều này ngay trên đầu đối tượng đã xuất.

02:56.080 --> 02:59.180
Tôi sẽ đặt chế độ thành "Development. Điều này cuối cùng sẽ cho webpack biết rằng ở đây chúng

02:59.180 --> 03:01.800
tôi đang xây dựng để phát triển và nó sẽ thực hiện

03:01.800 --> 03:03.550
ít tối ưu hóa hơn để cải thiện trải

03:03.550 --> 03:05.590
nghiệm phát triển của chúng tôi, giúp

03:05.590 --> 03:09.450
gỡ lỗi dễ dàng hơn và cung cấp cho chúng tôi các thông báo lỗi có ý nghĩa

03:09.450 --> 03:11.420
hơn chẳng hạn.

03:11.420 --> 03:12.950
Vì vậy, trong quá trình phát

03:12.950 --> 03:16.420
triển, chúng tôi chắc chắn cũng muốn thêm khóa này vào đây.

03:16.420 --> 03:17.840
Và với điều đó và máy chủ webpack-dev được định cấu

03:17.840 --> 03:20.110
hình, giờ đây chúng ta có được quy trình công việc phát triển đã hoàn thành.

03:20.110 --> 03:22.880
Bây giờ để sản xuất, chúng tôi sẽ cần điều chỉnh

03:22.880 --> 03:25.570
luồng công việc này một chút vì ở đó chúng tôi

03:25.570 --> 03:27.100
muốn có một đầu ra khác.
