WEBVTT

00:02.240 --> 00:04.220
Instruktor: SourceMap pomaga

00:04.220 --> 00:06.560
nam w debugowaniu i rozwoju.

00:06.560 --> 00:09.540
Więc aby pokazać, co to robi, pozwól mi skompilować

00:09.540 --> 00:12.000
wszystko bez tego ustawienia sourceMap.

00:12.000 --> 00:14.530
Jeśli teraz przejdziemy do przeglądarki i będziemy chcieli

00:14.530 --> 00:17.420
zrozumieć, co robi nasz kod, możemy przejść do zakładki źródła

00:17.420 --> 00:21.620
tutaj w narzędziach deweloperskich i tam znajdziemy nasze pliki JavaScript.

00:21.620 --> 00:23.060
Teraz możemy zanurkować

00:23.060 --> 00:25.090
w te pliki i dobrą rzeczą jest to, że

00:25.090 --> 00:28.350
te pliki są dość czytelne dla nas, ludzi oczywiście, ponieważ

00:28.350 --> 00:30.940
zawierają kod JavaScript w końcu.

00:30.940 --> 00:35.200
Teraz to jest dobre, ale co jeśli mamy bardziej złożony kod

00:35.200 --> 00:38.940
TypeScript i chcemy debugować nasz kod TypeScript,

00:38.940 --> 00:41.640
a nie skompilowany kod JavaScript.

00:41.640 --> 00:43.060
Innymi słowy byłoby miło,

00:43.060 --> 00:47.180
gdybyśmy widzieli tutaj pliki TypeScript, a nie pliki JavaScript.

00:47.180 --> 00:50.000
Dzięki opcji sourceMap można się tam dostać.

00:50.000 --> 00:53.700
Jeśli ustawisz to na true i uruchomisz ponownie polecenie tsc to zobaczysz,

00:53.700 --> 00:56.950
że mamy te . js, . generowane są

00:56.950 --> 00:58.810
również pliki map.

00:58.810 --> 01:01.540
Teraz, jeśli spojrzymy na nie, są to dość dziwne

01:01.540 --> 01:04.920
pliki, ale to, co robią, to w zasadzie działają jako most,

01:04.920 --> 01:07.110
który jest rozumiany przez nowoczesne

01:07.110 --> 01:10.170
przeglądarki i narzędzia deweloperskie tam, aby połączyć

01:10.170 --> 01:13.410
pliki JavaScript z plikami wejściowymi.

01:13.410 --> 01:17.440
Więc z tymi plikami wygenerowanymi, jeśli przeładuję tutaj, widzisz

01:17.440 --> 01:20.320
w zakładce źródeł nie tylko nasze pliki JavaScript,

01:20.320 --> 01:23.497
ale także nasze pliki TypeScript.

01:23.497 --> 01:27.230
Możemy nawet umieścić punkty przerwania w plikach TypeScript i jeśli

01:27.230 --> 01:29.320
teraz kliknę na przykład na przycisk, to

01:29.320 --> 01:31.650
teraz wstrzyma się on w pliku TypeScript.

01:31.650 --> 01:34.720
Co oczywiście jest super, super wygodne.

01:34.720 --> 01:37.670
Ponieważ to naprawdę przenosi nasz proces debugowania na następny

01:37.670 --> 01:40.260
poziom, ponieważ możemy pracować bezpośrednio w naszych

01:40.260 --> 01:43.400
plikach wejściowych w zasadzie, w naszych plikach TypeScript

01:43.400 --> 01:45.670
zamiast plików JavaScript.

01:45.670 --> 01:48.010
Teraz mimo wszystko tutaj to skomentuję,

01:48.010 --> 01:50.800
bo mamy tutaj dość prosty projekt i nie chcę mieć

01:50.800 --> 01:53.580
tych dodatkowych . pliki map leżą tutaj.

01:53.580 --> 01:55.950
Ale jest to super przydatne w projektach, ponieważ

01:55.950 --> 01:57.803
upraszcza debugowanie.
