WEBVTT

00:02.250 --> 00:04.530
Istruttore: Abbiamo anche delle

00:04.530 --> 00:09.240
utili funzioni relative agli array e agli oggetti e come possiamo recuperare

00:09.240 --> 00:13.600
i dati memorizzati negli array e negli oggetti.

00:13.600 --> 00:17.180
Ora, per questo, aggiungiamo un nuovo array, diciamo hobby,

00:17.180 --> 00:19.880
che può essere un array di stringhe.

00:22.520 --> 00:26.700
Come lo sport e la cucina e ora possiamo ovviamente

00:26.700 --> 00:33.030
recuperare gli elementi per indice, ad esempio questo.

00:33.030 --> 00:36.150
Tuttavia, è necessario conoscere questi elementi di base di JavaScript.

00:36.150 --> 00:40.310
Next Gen JavaScript introduce una bella funzione per estrarre

00:41.172 --> 00:43.910
tutti i valori di un array.

00:43.910 --> 00:44.990
Quando può servire?

00:44.990 --> 00:48.670
Beh, diciamo che avete gli hobby attivi e questa

00:48.670 --> 00:53.670
è una serie in cui ho l'escursionismo come hobby, e ora voglio aggiungere

00:54.200 --> 00:56.510
lo sport e la cucina.

00:56.510 --> 00:58.960
Ora possiamo aggiungere un elemento agli hobby attivi

00:58.960 --> 01:01.290
chiamando push; a proposito, nel caso in cui vi stiate

01:01.290 --> 01:05.620
chiedendo come faccio a fare push su una costante, tenete presente che gli array sono oggetti

01:05.620 --> 01:08.130
e gli oggetti sono valori di riferimento.

01:08.130 --> 01:11.010
Quando si preme si modifica una memoria, ma non l'indirizzo.

01:11.010 --> 01:14.150
Se questo non vi dice nulla, consultate le risorse aggiuntive

01:14.150 --> 01:17.390
che ho allegato a questa lezione e che riguardano questo argomento.

01:17.390 --> 01:20.170
Torniamo a questo esempio: possiamo fare un push qui,

01:20.170 --> 01:24.120
ma se facciamo un push sugli hobby, aggiungeremo gli hobby come un nuovo array

01:24.120 --> 01:27.540
nell'array, quindi come un nuovo array annidato.

01:27.540 --> 01:30.920
Che i tipi lo rilevano effettivamente, mi dice che

01:30.920 --> 01:33.690
se voglio aggiungere un array di stringhe

01:33.690 --> 01:36.143
a un array di stringhe, non va bene.

01:37.110 --> 01:40.390
Invece push accetta valori singoli, in modo da poter

01:40.390 --> 01:44.450
passare zero hobby, anzi push accetta persino una quantità illimitata

01:44.450 --> 01:47.450
di argomenti, in modo da poter spingere più elementi

01:47.450 --> 01:51.240
in ordine contemporaneamente.

01:51.240 --> 01:54.013
Ma questo è un po' macchinoso ed è qui che entra in gioco lo Spread

01:54.013 --> 01:54.890
Operator.

01:54.890 --> 01:57.700
Sembra così, sono tre punti e sì, sembra strano,

01:57.700 --> 02:00.850
ma è un operatore JavaScript valido supportato

02:00.850 --> 02:04.770
da [Hypescript? ] e poi specifichiamo o

02:04.770 --> 02:09.547
indichiamo l'array o l'oggetto, come imparerete, che

02:09.547 --> 02:11.700
vogliamo diffondere.

02:11.700 --> 02:15.160
Ciò che fa è dire a JavaScript, alla fine, perché questo è un

02:15.160 --> 02:17.690
operatore di Vanilla JavaScript disponibile

02:17.690 --> 02:21.070
in Modern JavaScript, quindi dice a JavaScript di estrarre

02:21.070 --> 02:25.500
tutti gli elementi dopo l'array e di aggiungerli come una lista di valori,

02:25.500 --> 02:28.530
quindi non come un array, ma come una lista di valori

02:28.530 --> 02:31.900
individuali nel luogo in cui è stato usato un operatore,

02:31.900 --> 02:33.950
quindi qui, per esempio, c'è una lista

02:33.950 --> 02:36.090
di argomenti passati a push e ora un luogo

02:36.090 --> 02:39.180
in cui si può usare questo è direttamente quando si crea

02:39.180 --> 02:41.740
un nuovo array.

02:41.740 --> 02:46.220
È anche possibile estendere una matrice esistente in quella matrice.

02:46.220 --> 02:48.950
In pratica, ogni volta che si ha bisogno di un elenco di valori separati

02:48.950 --> 02:51.460
da una virgola, si può usare l'Operatore di diffusione con

02:51.460 --> 02:54.360
un array per ottenere tale elenco separato da virgole.

02:54.360 --> 02:56.660
Questa è l'idea dell'operatore di diffusione

02:56.660 --> 02:59.230
e quindi è molto utile per estrarre gli elementi

02:59.230 --> 03:00.663
di un array.

03:01.860 --> 03:04.380
L'operatore di diffusione, tutto ciò che

03:04.380 --> 03:07.880
non esiste solo sugli array, ma anche sugli oggetti.

03:07.880 --> 03:10.990
Supponiamo di avere una persona con una chiave

03:10.990 --> 03:14.070
name, Max, e una chiave h, 30, e di voler creare

03:14.070 --> 03:16.640
una persona copiata.

03:16.640 --> 03:19.060
Ora, se assegniamo una persona in questo

03:19.060 --> 03:22.680
modo, ciò che stiamo facendo è copiare il puntatore a questo

03:22.680 --> 03:25.000
oggetto persona in memoria in questa

03:25.000 --> 03:27.050
costante copy person.

03:27.050 --> 03:30.470
E ancora, controllate le mie risorse di riferimento allegate

03:30.470 --> 03:32.360
se questo non vi dice molto.

03:32.360 --> 03:36.190
Quindi, non stiamo creando una copia di quell'oggetto.

03:36.190 --> 03:38.610
Per creare una copia vera e propria, possiamo usare

03:38.610 --> 03:40.880
l'operatore di diffusione con gli oggetti.

03:40.880 --> 03:43.400
Creiamo un nuovo oggetto con le parentesi

03:43.400 --> 03:46.510
graffe e poi usiamo l'operatore di diffusione, tre

03:46.510 --> 03:49.630
punti con il primo oggetto che vogliamo copiare.

03:49.630 --> 03:52.970
Ciò che fa è estrarre tutti gli elementi, ma naturalmente

03:52.970 --> 03:56.310
qui gli elementi sono coppie chiave-valore, non singoli

03:56.310 --> 03:58.630
valori come in un array.

03:58.630 --> 04:00.550
Qui abbiamo coppie chiave-valore.

04:00.550 --> 04:04.110
Quindi, queste coppie di valori-chiave vengono estratte

04:04.110 --> 04:08.010
da lì e possono essere utilizzate ovunque sia necessario avere

04:08.010 --> 04:11.310
delle coppie di valori-chiave, in genere un oggetto

04:11.310 --> 04:12.920
a cui aggiungerle.

04:12.920 --> 04:15.447
Pertanto, a questo oggetto altrimenti vuoto,

04:15.447 --> 04:19.100
vengono aggiunte le coppie chiave-valore di persona e, poiché

04:19.100 --> 04:21.240
abbiamo creato un nuovo oggetto e lo aggiungiamo

04:21.240 --> 04:23.700
alle coppie chiave-valore, abbiamo ottenuto

04:23.700 --> 04:27.310
una copia perfetta dell'oggetto originale e non solo del puntatore

04:27.310 --> 04:30.803
che punta all'oggetto in memoria.
