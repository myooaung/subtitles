WEBVTT

00:02.140 --> 00:03.970
- : Donc dans notre application. ts, nous devons

00:03.970 --> 00:08.100
vérifier la soumission de ce formulaire ici.

00:08.100 --> 00:09.070
Pour cela, je vais créer

00:09.070 --> 00:10.800
une constante de formulaire et accéder

00:10.800 --> 00:12.170
au formulaire avec le sélecteur

00:12.170 --> 00:14.310
de requête de document, en recherchant la balise

00:14.310 --> 00:16.080
de formulaire.

00:16.080 --> 00:17.840
Et comme nous n'avons qu'une seule balise de formulaire

00:17.840 --> 00:18.820
dans tout le document, nous

00:18.820 --> 00:20.170
allons bien sûr la récupérer.

00:21.150 --> 00:23.500
Cela nous donne donc accès au formulaire.

00:23.500 --> 00:26.163
Sur ce formulaire, je vais ajouter un écouteur d'événements.

00:29.630 --> 00:31.873
Et je vais écouter pour l'événement de soumission.

00:33.290 --> 00:35.330
Maintenant, cette forme pourrait bien sûr être

00:35.330 --> 00:36.163
nulle, comme toujours,

00:36.163 --> 00:37.430
mais nous savons qu'elle ne le

00:37.430 --> 00:39.480
sera pas, donc nous pouvons ajouter ce bon vieux

00:39.480 --> 00:41.683
point d'exclamation après pour dire à TypeScript que

00:41.683 --> 00:42.850
ce ne sera pas nul.

00:42.850 --> 00:45.080
Et puis ici nous avons l'écouteur d'événement,

00:45.080 --> 00:46.490
et il va définir une fonction

00:46.490 --> 00:51.710
qui doit être déclenchée et c'est la fonction du gestionnaire d'adresse de recherche

00:51.710 --> 00:53.610
disons.

00:53.610 --> 00:55.420
Et cette fonction doit être déclenchée

00:55.420 --> 00:58.160
chaque fois que ce formulaire est soumis.

00:58.160 --> 01:00.880
Maintenant, dans cette fonction, nous allons obtenir l'objet

01:00.880 --> 01:04.900
événement et je vais tout d'abord appeler l'événement prévenir par défaut ici.

01:04.900 --> 01:07.240
Donnons également quelques indications à TypeScript

01:07.240 --> 01:09.980
et informons-le qu'il s'agit d'un événement afin qu'il

01:09.980 --> 01:12.370
sache que cette commande par défaut préventive

01:12.370 --> 01:14.033
existera.

01:14.870 --> 01:17.440
Avec cela, nous empêchons la soumission du formulaire,

01:17.440 --> 01:19.900
nous nous assurons qu'aucune requête n'est envoyée,

01:19.900 --> 01:21.980
mais maintenant je veux avoir accès à l'adresse

01:21.980 --> 01:23.630
que l'utilisateur a saisie.

01:23.630 --> 01:24.900
Maintenant, cela ne devrait

01:24.900 --> 01:27.820
pas être trop difficile, nous avons une entrée ici et elle a une idée

01:27.820 --> 01:30.360
d'adresse, donc à la fin nous voulons obtenir la valeur qui

01:30.360 --> 01:31.850
a été entrée dans l'entrée.

01:31.850 --> 01:33.780
Et nous pouvons le faire ici en définissant

01:33.780 --> 01:36.010
simplement une autre constante, l'entrée

01:36.010 --> 01:37.610
adresse, que nous obtenons avec

01:37.610 --> 01:40.500
le sélecteur de requête de document, ou en fait obtenir

01:40.500 --> 01:43.210
l'élément par ID et alors l'ID était l'adresse qui

01:44.050 --> 01:46.710
était l'idée signée à cet élément, et comme avant

01:46.710 --> 01:47.860
nous savons que cela ne

01:47.860 --> 01:50.630
sera jamais nul, donc nous pouvons ajouter ce point

01:50.630 --> 01:52.823
d'exclamation ici.

01:53.770 --> 01:58.730
Et avec cela nous avons obtenu notre adresse entrée ici en accédant

01:58.730 --> 02:00.370
à l'entrée d'adresse

02:00.370 --> 02:03.700
point valeur maintenant pourquoi TypeScript

02:05.960 --> 02:09.350
n'aime pas la valeur ici ?

02:09.350 --> 02:12.020
Parce qu'il ne sait pas que ce que nous récupérons

02:12.020 --> 02:14.500
ici est un élément d'entrée html.

02:14.500 --> 02:16.000
Alors disons-le à TypeScript.

02:16.000 --> 02:18.930
Convertissons ceci en un élément d'entrée html

02:18.930 --> 02:20.820
avec le typecasting ici.

02:20.820 --> 02:23.650
Maintenant TypeScript ne se plaint plus de cet

02:23.650 --> 02:25.040
accès à la valeur ici, et

02:25.040 --> 02:26.923
nous donne l'adresse saisie.

02:27.770 --> 02:29.710
Et maintenant nous devons

02:30.570 --> 02:31.740
envoyer ça à l'API

02:32.970 --> 02:34.180
de Google.

02:34.180 --> 02:37.850
Nous le ferons avec l'aide d'un autre paquet tiers dans le

02:37.850 --> 02:38.943
prochain cours.
