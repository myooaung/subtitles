WEBVTT

1
00:00:02.450 --> 00:00:04.900
<v Instructor>Now what do you do if you have a library</v>

2
00:00:04.900 --> 00:00:07.090
where you can't install types

3
00:00:07.090 --> 00:00:10.470
as we did it for Lodash, for example?

4
00:00:10.470 --> 00:00:14.440
For Lodash, thankfully we have such a types package,

5
00:00:14.440 --> 00:00:15.880
and as I mentioned,

6
00:00:15.880 --> 00:00:18.870
for most third party libraries, you have that,

7
00:00:18.870 --> 00:00:21.210
but not necessarily for all.

8
00:00:21.210 --> 00:00:25.320
Or, what if you have some other JavaScript code,

9
00:00:25.320 --> 00:00:27.320
let's say in your index.html file,

10
00:00:27.320 --> 00:00:29.800
you have some other script code,

11
00:00:29.800 --> 00:00:34.800
which executes stare, where you set some global variable.

12
00:00:35.350 --> 00:00:38.450
GLOBAL = 'THIS IS SET'

13
00:00:38.450 --> 00:00:40.770
Something like this where you in the end know

14
00:00:40.770 --> 00:00:43.180
this will be available globally.

15
00:00:43.180 --> 00:00:46.240
As you know, such variables added like this

16
00:00:46.240 --> 00:00:48.600
will be added to the global window object,

17
00:00:48.600 --> 00:00:50.210
and you want to utilize them

18
00:00:50.210 --> 00:00:52.670
from inside your TypeScript code.

19
00:00:52.670 --> 00:00:53.503
For example,

20
00:00:53.503 --> 00:00:57.770
here if I want to console.log(GLOBAL) like this,

21
00:00:57.770 --> 00:00:59.990
I get an error here in my IDE.

22
00:00:59.990 --> 00:01:04.299
And if I run tsc -w to start compilation,

23
00:01:04.299 --> 00:01:06.340
I also get an error here.

24
00:01:06.340 --> 00:01:09.470
So, it doesn't like that global thing,

25
00:01:09.470 --> 00:01:11.530
even though we know that it will work

26
00:01:11.530 --> 00:01:15.630
because our index.html file defines this global variable.

27
00:01:15.630 --> 00:01:18.010
And, since we have defer on this script,

28
00:01:18.010 --> 00:01:19.493
this script will be executed

29
00:01:19.493 --> 00:01:22.170
after this script down there.

30
00:01:22.170 --> 00:01:23.780
In such cases,

31
00:01:23.780 --> 00:01:26.460
you have another syntax available in TypeScript,

32
00:01:26.460 --> 00:01:29.460
and that is the declare command which you can use.

33
00:01:29.460 --> 00:01:32.110
You can declare certain variables,

34
00:01:32.110 --> 00:01:34.150
for example, to TypeScript.

35
00:01:34.150 --> 00:01:36.730
You can say declare var GLOBAL

36
00:01:36.730 --> 00:01:38.640
and tell TypeScript that, for example,

37
00:01:38.640 --> 00:01:42.050
this will be a string, or that this is anything.

38
00:01:42.050 --> 00:01:43.687
This basically tells TypeScript,

39
00:01:43.687 --> 00:01:45.910
"Don't worry, it will exist,"

40
00:01:45.910 --> 00:01:47.823
and ever if we do save this,

41
00:01:49.090 --> 00:01:52.580
and I quit this compiler and use webpack instead,

42
00:01:52.580 --> 00:01:55.740
we do see this output on our page,

43
00:01:55.740 --> 00:01:57.650
because it technically works,

44
00:01:57.650 --> 00:01:59.060
and with declare var,

45
00:01:59.060 --> 00:02:02.270
we also tell TypeScript that this exists.

46
00:02:02.270 --> 00:02:04.420
Now I'm going to remove this dmidecode here,

47
00:02:04.420 --> 00:02:06.770
but being aware of declare, of this key word,

48
00:02:06.770 --> 00:02:08.830
of this command is important.

49
00:02:08.830 --> 00:02:12.160
It allows you to declare TypeScript features

50
00:02:12.160 --> 00:02:14.590
or variables where you know that they exist

51
00:02:14.590 --> 00:02:17.210
or let TypeScript know about packages,

52
00:02:17.210 --> 00:02:18.670
global variables in general,

53
00:02:18.670 --> 00:02:20.150
which Typescript can't know,

54
00:02:20.150 --> 00:02:22.080
but whereas you as a developer know

55
00:02:22.080 --> 00:02:23.373
that they will be there.

