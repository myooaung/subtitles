WEBVTT

00:02.190 --> 00:05.380
Eğitmen: Şimdi bu projenin sonuna gelelim

00:05.380 --> 00:09.590
ve bu da kutulardan birinde, örneğin aktif projeler kutusunda

00:09.590 --> 00:12.390
bulunan bir projeyi diğer kutuya sürükleyip

00:12.390 --> 00:16.410
bırakma olanağını içeriyor.

00:16.410 --> 00:19.310
Yani, temel olarak projeyi aktif bir proje olmaktan

00:19.310 --> 00:22.780
çıkarıp bitmiş bir proje haline getirmek.

00:22.780 --> 00:25.430
Dolayısıyla, bu sadece görsel güncellemeyle ilgili

00:25.430 --> 00:27.800
değildir, sadece sürükleyip bırakmak ve kullanıcı

00:27.800 --> 00:31.050
arayüzünü güncellemekle ilgili değildir, aynı zamanda durum

00:31.050 --> 00:35.470
yönetimi sınıfımızdaki perde arkasındaki verileri ayarlamakla da ilgilidir,

00:35.470 --> 00:37.790
sonuçta bir proje listesini yönettiğimiz

00:37.790 --> 00:39.960
proje durumu, her projenin bir durum özelliği

00:39.960 --> 00:45.420
olduğunu ve bunu da güncellememiz gerektiğini unutmayın.

00:45.420 --> 00:48.610
Dolayısıyla, uygulamamız gereken iki şey var: sürükle

00:48.610 --> 00:51.800
ve bırak ve ardından tüm bu perde arkası durum ve veri

00:51.800 --> 00:53.410
güncellemesi.

00:53.410 --> 00:56.220
Şimdi sürükle ve bırak ile başlayalım ve bunun

00:56.220 --> 00:59.870
için temel olarak sürükle ve bırak'ı vanilla java script'te

00:59.870 --> 01:02.960
yaptığımız gibi uygulayacağız, örneğin, benim

01:02.960 --> 01:04.790
eksiksiz java script kılavuzumda

01:04.790 --> 01:06.970
öğrenebilirsiniz.

01:06.970 --> 01:09.690
Temel olarak, bir grup olay dinleyicisi uygulamakla

01:09.690 --> 01:11.960
ilgilidir ve elbette bu modülde nasıl çalıştığını

01:11.960 --> 01:14.800
sonraki derslerde göreceksiniz, ancak bunu typescript

01:14.800 --> 01:17.350
tarzında uygulayacağız, bu yüzden bazı typescript

01:17.350 --> 01:21.150
özelliklerini kullanarak geliştireceğiz.

01:21.150 --> 01:24.240
Peki, başlayalım ve bunu typescript özellikleriyle nasıl

01:24.240 --> 01:25.790
geliştirmek istiyorum?

01:25.790 --> 01:28.423
Burada arayüzleri yeniden kullanmak istiyorum.

01:29.280 --> 01:32.120
Sürükle ve bırak arayüzleri, ancak daha önce

01:32.120 --> 01:35.470
arayüzleri kullandığımız gibi sadece bazı nesnelerin

01:35.470 --> 01:39.060
yapısını tanımlamak için değil, bunun yerine belirli

01:39.060 --> 01:42.010
sınıfların bu sınıfları zorlamak için imzalayabileceği

01:42.010 --> 01:44.590
bir sözleşme oluşturmak için, temelde

01:44.590 --> 01:46.970
sürükle ve bırak konusunda bize yardımcı

01:46.970 --> 01:51.980
olan belirli yöntemleri uygulamak için.

01:51.980 --> 01:55.250
Kesin olmak gerekirse, iki arayüz düşünüyorum ve elbette

01:55.250 --> 01:58.590
bu arayüzleri kullanmak isteğe bağlı olacak, ancak bu,

01:58.590 --> 02:00.920
temel olarak, bir sınıfı sürüklenebilir

02:00.920 --> 02:04.465
olması veya geçerli bir bırakma hedefi olması için gereken

02:04.465 --> 02:06.340
her şeyi uygulamaya zorlayan bazı

02:06.340 --> 02:09.810
kodlar sağlamamıza olanak tanıyacak ve bu da daha büyük

02:09.810 --> 02:12.960
bir uygulama oluşturuyorsak, özellikle bir ekiple

02:12.960 --> 02:15.160
çalışırken daha temiz kod ve daha anlaşılır

02:15.160 --> 02:19.080
kod yazmamıza yardımcı olabilir.

02:19.080 --> 02:21.710
Peki, hangi arayüzlerden bahsediyorum?

02:21.710 --> 02:23.160
Sürüklenebilir olarak adlandıracağım

02:23.160 --> 02:24.617
bir arayüze ve sürükleme hedefi

02:26.200 --> 02:28.660
olarak adlandıracağım ikinci bir arayüze sahip

02:28.660 --> 02:31.060
olmak istiyorum.

02:31.060 --> 02:32.950
Buradaki fikrim, sürüklenebilir

02:32.950 --> 02:35.710
arayüzü, sürüklenebilir öğe oluşturan herhangi

02:35.710 --> 02:38.030
bir sınıfa ekleyebilmemizdir.

02:38.030 --> 02:41.810
Örneğimizde bu, proje öğesi sınıfı olacaktır.

02:41.810 --> 02:44.170
Proje öğesi sınıfı, bu proje öğelerini

02:44.170 --> 02:46.600
oluşturmaktan sorumludur ve bunlar

02:46.600 --> 02:49.230
sürüklenebilir parçalar ve kutular, aktif

02:49.230 --> 02:53.320
projeler ve bitmiş projeler olmalıdır, bu nedenle burada proje

02:53.320 --> 02:57.880
listesi sınıfımız sürükleme hedefleri olmalıdır.

02:57.880 --> 03:02.100
Peki, o zaman bu arayüzler nelerin uygulanmasını ya da sınıflara eklenmesini

03:02.100 --> 03:03.890
zorunlu kılıyor?

03:03.890 --> 03:05.760
Draggable ile başlayalım.

03:05.760 --> 03:09.550
Burada, temel olarak iki olay dinleyicisine ve dolayısıyla bu

03:09.550 --> 03:12.540
olaylar için iki işleyiciye ihtiyacımız var.

03:12.540 --> 03:17.070
Bir yöntem olacak bir sürükleme başlangıç işleyicisi ve bir sürükleme

03:17.070 --> 03:19.733
bitiş işleyicisi, çünkü sürükleyip bırakmak

03:22.020 --> 03:24.180
istediğiniz şeyi uygularken, bu

03:24.180 --> 03:26.070
sürükleme olayının başlangıcını

03:26.070 --> 03:29.840
dinleyen bir dinleyiciye ve ayrıca potansiyel olarak sürükleme

03:29.840 --> 03:32.330
olayının sonunu dinleyen bir dinleyiciye

03:32.330 --> 03:34.540
ihtiyaç duyacaksınız, böylece orada

03:34.540 --> 03:40.440
yapmak istediğiniz her türlü güncellemeyi yapabilirsiniz.

03:40.440 --> 03:42.580
Şimdi, sürükleme başlatma olay işleyicisi,

03:42.580 --> 03:44.225
sürükleme olayı olarak adlandıracağımız

03:44.225 --> 03:47.370
bir olay nesnesi alacaktır, bu yerleşik bir türdür, TS çakışma

03:47.370 --> 03:55.330
kurulumumuz ve oraya eklediğimiz lib'ler nedeniyle seçenek lib'lerine sahip türler ve hiçbir şey döndürmeyecek, çalıştırılan ancak daha

03:55.330 --> 03:59.882
sonra sadece bir şeyler yapan, örneğin sürükleme olayını yapılandıran, ancak

03:59.882 --> 04:03.930
geri dönmeyen bir yöntem olacaktır.

04:03.930 --> 04:06.970
Şimdi sürükleme sonu işleyicisi benzer bir olay

04:06.970 --> 04:10.730
alır, o da bir sürükleme olayı alır ve hiçbir şey döndürmez.

04:10.730 --> 04:13.130
Şimdi, elbette bunları nasıl uygulayacağımızı birkaç

04:13.130 --> 04:15.810
saniye içinde göreceksiniz, bu yüzden bana sabır gösterin.

04:15.810 --> 04:17.810
Peki ya sürükleme hedefi?

04:17.810 --> 04:20.530
Hedef için, yani üzerine bir şey sürükleyebileceğimiz

04:20.530 --> 04:22.620
kutu için uygulamak istediğim

04:22.620 --> 04:26.280
üç olay işleyici var.

04:26.280 --> 04:28.593
Üzerine sürükleme işleyicisi,

04:29.440 --> 04:31.800
bırakma işleyicisi ve sürükleyerek

04:31.800 --> 04:34.280
bırakma işleyicisi.

04:34.280 --> 04:36.470
Şimdi, bu şeyler ne işe yarar?

04:36.470 --> 04:39.370
Şimdi, java script'te sürükle ve bırak özelliğini uygularken,

04:39.370 --> 04:41.960
temel olarak java script'te tarayıcıya bir şeyi

04:41.960 --> 04:45.140
üzerine sürüklediğiniz şeyin geçerli bir sürükleme hedefi

04:45.140 --> 04:48.060
olduğunu bildirmek için bir üzerine sürükleme işleyicisi

04:48.060 --> 04:50.160
uygulamanız gerekir.

04:50.160 --> 04:53.840
Üzerinde sürükleme işleyicisinde doğru işlemi yapmazsanız,

04:53.840 --> 04:56.410
bırakma mümkün olmayacaktır.

04:56.410 --> 04:57.980
Gerçekleşen düşüşe tepki vermek

04:57.980 --> 05:00.760
için düşüş işleyicisine ihtiyacınız vardır, bu nedenle

05:00.760 --> 05:03.960
eğer sürükleme işleyicisi düşüş işleyicisi ile düşüşe izin

05:03.960 --> 05:06.500
verecekse düşüşü işleyecek ve daha sonra burada

05:06.500 --> 05:08.650
verilerimizi ve kullanıcı arayüzümüzü

05:08.650 --> 05:11.960
güncelleyebiliriz ve sürükleme bırakma işleyicisi, örneğin

05:11.960 --> 05:14.500
kullanıcıya kutunun üzerine bir şey sürüklediğinde

05:14.500 --> 05:16.940
bazı görsel geri bildirimler veriyorsak yararlı

05:16.940 --> 05:19.880
olabilir, örneğin arka plan rengini iyi değiştiririz,

05:19.880 --> 05:22.210
eğer düşüş gerçekleşmezse ve bunun yerine

05:22.210 --> 05:28.410
iptal edilirse veya kullanıcı öğeyi uzaklaştırırsa görsel güncellememizi geri almak için sürükleme bırakma işleyicisini

05:28.410 --> 05:32.190
kullanabiliriz.

05:32.190 --> 05:36.250
Şimdi, her üç işleyici de bir sürükleme olayı alır ve hiçbir

05:36.250 --> 05:37.990
şey döndürmez, bu nedenle

05:37.990 --> 05:41.473
bunları uygun şekilde şu şekilde güncelleyelim.

05:44.070 --> 05:47.250
Ve ayrıca buradaki son işleyici için.

05:47.250 --> 05:49.810
Ve şimdi kendi başlarına pek bir şey yapmayan

05:49.810 --> 05:52.840
bazı arayüzleri yapılandırdık, ancak şimdi bunları

05:52.840 --> 05:55.710
kullanabiliriz ve proje öğesiyle başlamak

05:55.710 --> 05:57.490
istiyorum.

05:57.490 --> 06:00.380
Bunun için proje öğesi sınıfımızı bulalım, işte bileşen,

06:00.380 --> 06:02.710
işte proje öğesi ve şimdi bir arayüzün yalnızca

06:02.710 --> 06:05.100
özel bir nesne türü tanımlamak için kullanılamayacağını,

06:05.100 --> 06:08.540
ancak bunu bir sınıf üzerinde bir sözleşme olarak kullanabileceğinizi

06:08.540 --> 06:12.290
hatırlayabilirsiniz.

06:12.290 --> 06:15.760
implements diyebilir veya sınıf adınızdan sonra ve yaptığınız olası

06:15.760 --> 06:16.750
uzantılardan sonra

06:16.750 --> 06:19.290
buraya implements ekleyebilir ve ardından arayüzü

06:19.290 --> 06:20.900
uygulayabilirsiniz.

06:20.900 --> 06:24.340
Bu durumda, sürüklenebilir arayüz.

06:24.340 --> 06:27.250
Şimdi, bunu yaptığınızda, okumayı kolaylaştırmak için bunu

06:27.250 --> 06:29.820
yeni bir satıra getirecek şekilde biçimlendirdim.

06:29.820 --> 06:31.393
Bunu yaptığınızda, buradaki

06:31.393 --> 06:34.460
sınıfın arayüzü yanlış uyguladığına dair bir hata

06:34.460 --> 06:38.600
alırsınız çünkü hatırlarsanız bu sürüklenebilir arayüz bizi iki

06:38.600 --> 06:40.763
yöntem eklemeye zorlar.

06:42.840 --> 06:44.480
Öyleyse onları buraya ekleyelim.

06:44.480 --> 06:46.290
Belki bir kurucu yükleriz.

06:46.290 --> 06:49.550
Drag event türünde bir olay alan bir

06:49.550 --> 06:53.610
drag start işleyicisi ekleyelim ve drag event'imizi

06:53.610 --> 06:56.500
alan drag end işleyicimizi de

06:56.500 --> 06:59.143
ekleyelim.

06:59.990 --> 07:02.010
Ve şimdi bu iki yöntemi ekledik.

07:02.010 --> 07:05.330
Şimdi, bu tek başına sürükle ve bırak özelliğini etkinleştirmez.

07:05.330 --> 07:08.900
Sadece sürüklenebilir bileşenleri veya sürüklenebilir sınıfları

07:08.900 --> 07:11.880
tek tip bir şekilde yazmamıza yardımcı olur, böylece sürüklenebilir

07:11.880 --> 07:14.560
olması gereken daha fazla sınıf eklersek, her zaman

07:14.560 --> 07:18.210
bu yöntemlere sahip oluruz, bu da kodumuz hakkında mantık yürütmeyi

07:18.210 --> 07:20.700
ve kodumuzu çalıştırmayı kolaylaştırır, özellikle

07:20.700 --> 07:22.870
bir ekipte çalışırken, çünkü herkes sürükleme

07:22.870 --> 07:27.840
başlatma olayı için nereye iş koyacağını bilir.

07:27.840 --> 07:31.340
Elbette bunun yapmadığı şey, bir sürükleme başlatma

07:31.340 --> 07:32.950
olayını dinlemektir.

07:32.950 --> 07:35.010
Bu, zaten sahip olduğunuz configure yönteminde

07:35.010 --> 07:36.730
yapabileceğimiz bir şeydir.

07:36.730 --> 07:38.980
Oluşturulan öğemize ulaşabilir ve ona

07:38.980 --> 07:41.090
bir olay dinleyicisi ekleyebiliriz

07:41.090 --> 07:43.890
ve işte bu, sürükleme başlatma olayı olacaktır.

07:43.890 --> 07:45.780
Sürükleme başlatma olayı, dinleyebileceğiniz

07:45.780 --> 07:49.190
bir olay, bir varsayılan tarayıcı dom olayıdır ve tetiklemek

07:49.190 --> 07:51.750
istediğimiz eşit işleyici, elbette, burada

07:51.750 --> 07:53.740
işaret edebileceğimiz sürükleme başlatma

07:55.320 --> 07:57.793
işleyicisidir.

07:59.080 --> 08:00.750
Şimdi, sürükleme başlatma işleyicisinin

08:00.750 --> 08:02.460
içinde bu anahtar sözcüğün sınıfımıza

08:02.460 --> 08:04.870
atıfta bulunduğundan emin olmak istiyoruz ve olay dinleyicileri

08:04.870 --> 08:06.560
ile öğrendiğiniz gibi, varsayılan olarak

08:06.560 --> 08:08.530
durum böyle olmayacaktır, bu nedenle burada

08:08.530 --> 08:11.810
bind kullanabilir ve geçerli olacak şekilde bunu bağlayabiliriz, ancak

08:11.810 --> 08:14.750
aslında daha iyi bir yolumuz var.

08:14.750 --> 08:16.900
Otomatik bağlama dekoratörünü ekledik, bu

08:16.900 --> 08:18.550
yüzden bunu buraya sürükleme başlatma

08:18.550 --> 08:20.303
işleyicisine ekleyeceğim.

08:21.210 --> 08:26.070
Şimdi, burada sürükleme sonu olayını da dinleyebilir ve sürükleme sonu

08:26.070 --> 08:28.530
işleyicisine işaret edebiliriz.

08:28.530 --> 08:30.400
Ayrıca vis anahtar kelimesini kullanmayı

08:30.400 --> 08:32.690
planlıyorsanız buraya auto bind ekleyebilirsiniz.

08:32.690 --> 08:35.830
Şu an için sadece drag end'i buraya kaydedeceğim, böylece bunun

08:35.830 --> 08:37.730
tetiklendiğini göreceğiz çünkü burada

08:37.730 --> 08:40.520
aslında onunla yapmak istediğim belirli bir şey yok ve

08:40.520 --> 08:44.410
bu nedenle bu parametreyi de boş bırakacağım ve temelde typescript'e onu kullanmadığımı

08:44.410 --> 08:47.310
söyleyeceğim.

08:47.310 --> 08:49.850
Burada sürükleme başlangıcında, olay kullanacağız

08:49.850 --> 08:51.730
ve şu an için, bu olay gerçekleştiğinde

08:51.730 --> 08:53.720
sadece olayı günlüğe kaydedeceğim.

08:53.720 --> 08:55.610
Yine de bu tek başına işe yaramayacaktır.

08:55.610 --> 08:57.000
Her şeyi kaydederseniz ve buraya

08:57.000 --> 08:59.230
bir proje eklerseniz, yeniden sürükleyemeyeceğinizi

08:59.230 --> 09:01.460
göreceksiniz, değil mi?

09:01.460 --> 09:04.750
Sürüklemeye çalışırsanız bu işe yaramayacaktır

09:04.750 --> 09:07.390
çünkü HTML dosyanızda da bir şeyleri değiştirmeniz

09:07.390 --> 09:09.720
gerekecektir.

09:09.720 --> 09:11.810
Sürüklemek istediğiniz şey olan

09:11.810 --> 09:14.550
her proje için oluşturulan bu liste öğesine

09:14.550 --> 09:18.380
sürüklenebilir niteliğini eklemeniz ve bunu true olarak ayarlamanız

09:18.380 --> 09:19.830
gerekir.

09:19.830 --> 09:21.040
Bu çok önemli.

09:21.040 --> 09:24.200
Bu, tarayıcıya bunun sürüklenebilir olacağını söyler.

09:24.200 --> 09:28.430
Bununla birlikte, eğer kaydettiyseniz ve buraya yeniden bir proje eklerseniz, şimdi

09:28.430 --> 09:30.400
görüyorsunuz, bu gerçekten sürüklenebilir,

09:30.400 --> 09:32.070
şimdi fareme yapıştı ve şimdi onu

09:32.070 --> 09:35.720
burada gerçekten iyi bir şekilde hareket ettirebiliriz.

09:35.720 --> 09:38.530
Ayrıca sağ tarafta sürüklemeye başladığımda bir sürükleme

09:38.530 --> 09:41.390
olayının tetiklendiğini ve bıraktığımda sürükleme sonu

09:41.390 --> 09:43.860
olayının da tetiklendiğini göreceksiniz.

09:43.860 --> 09:46.510
Böylece dinleyicilerimiz bağlandı ve sürükleyebiliyoruz,

09:46.510 --> 09:50.540
şimdi bırakma hedefi üzerinde çalışabiliriz, yani bunun sürüklenebilir

09:50.540 --> 09:53.200
olması gereken kutuda, daha sonra projeyi

09:53.200 --> 09:56.560
bu kutuya eklemek için.

09:56.560 --> 09:58.660
Bunu da çok hızlı bir şekilde

09:58.660 --> 10:02.930
uygulamalarda yapacağım. css dosyası, liste öğelerinde,

10:02.930 --> 10:06.550
yani LI projelerinde, bunu biraz daha iyi görebilmemiz

10:06.550 --> 10:09.810
için beyaz bir arka plan rengi ekleyeceğim.

10:09.810 --> 10:12.350
Burada, proje LI, beyazı ekledim, böylece

10:12.350 --> 10:15.800
projeyi buraya sürüklediğimizde, burada beyaz arka planımız

10:15.800 --> 10:17.370
var, bu da görmeyi biraz daha

10:17.370 --> 10:19.150
kolaylaştırıyor.

10:19.150 --> 10:20.840
Yine de bir sonraki adımımızı değiştirmez.

10:20.840 --> 10:22.700
Onu düşürmek istiyoruz.
