WEBVTT

00:02.310 --> 00:03.143
Instrutor: Para isto,

00:03.143 --> 00:05.860
estou de volta à configuração geral do projeto em que trabalhamos antes.

00:05.860 --> 00:10.940
Você o encontrará anexado no índice. html e o arquivo de aplicação.

00:10.940 --> 00:10.940
ts arquivar.

00:10.940 --> 00:15.410
E ali, quero mergulhar com tipos de interseção.

00:15.410 --> 00:19.570
Os tipos de interseção nos permitem combinar outros tipos.

00:19.570 --> 00:23.280
Digamos que temos um tipo admin, que é um tipo de objeto, então

00:23.280 --> 00:25.430
novamente, isto não é criar um objeto

00:25.430 --> 00:28.170
aqui, estamos definindo um tipo, então estou

00:28.170 --> 00:30.340
apenas definindo uma definição de

00:31.200 --> 00:35.560
tipo aqui e admin deveria ter um nome, que é uma string, digamos, e um

00:35.560 --> 00:38.230
admin também deveria ter privilégios, e

00:39.910 --> 00:44.370
isto deveria ser uma string array, por exemplo.

00:44.370 --> 00:47.010
Agora, poderíamos ter criado isto com

00:47.010 --> 00:48.950
uma interface, mas aqui estou

00:49.810 --> 00:54.470
eu fazendo isto com um tipo e agora tenho outro tipo, tipo geral de

00:54.470 --> 00:59.130
funcionário, digamos, e lá também tenho um nome, string.

00:59.130 --> 01:02.890
Não tenho nenhum privilégio, mas tenho uma data de início.

01:02.890 --> 01:04.380
Isso poderia ser do tipo data.

01:04.380 --> 01:07.350
Não vimos isso antes, mas data é um tipo que é suportado

01:07.350 --> 01:10.340
pelo script baseado no objeto de dados que é construído

01:10.340 --> 01:12.163
em JavaScript.

01:13.730 --> 01:17.580
Portanto, agora queremos criar aqui um novo tipo,

01:17.580 --> 01:21.120
um funcionário elevado, digamos, que deve ser

01:21.120 --> 01:23.900
a combinação destes dois tipos.

01:23.900 --> 01:26.470
É claro que poderíamos criá-lo manualmente

01:26.470 --> 01:28.770
simplesmente definindo um tipo de objeto,

01:28.770 --> 01:31.750
que tem um nome, que tem uma data de início e que tem privilégio,

01:31.750 --> 01:34.120
mas se já temos estes dois tipos, então também

01:34.120 --> 01:37.540
podemos simplesmente combinar isto dizendo admin e, portanto,

01:37.540 --> 01:42.000
usamos aqui o símbolo ampersand, funcionário.

01:42.000 --> 01:44.370
E agora o resultado é um novo tipo de

01:44.370 --> 01:46.390
objeto que deve ter ambos.

01:46.390 --> 01:50.470
Assim, se eu tiver meu funcionário, E um, que deve ser do tipo

01:50.470 --> 01:54.770
funcionário elevado, então eu posso armazenar um objeto lá

01:54.770 --> 01:57.440
dentro que deve ter um nome de propriedade,

01:57.440 --> 02:00.113
que deve ter um privilégio de propriedade,

02:02.510 --> 02:08.800
criar servidor, e que também deve ter uma data de início com novos dados.

02:08.800 --> 02:10.070
Criar um novo objeto de dados

02:10.070 --> 02:12.700
que seja simplesmente o carimbo da hora atual.

02:12.700 --> 02:15.610
Portanto, esta é agora uma maneira simples de combinar dois tipos.

02:15.610 --> 02:17.740
Agora, direi que os tipos de

02:17.740 --> 02:21.550
interseção estão intimamente relacionados à

02:21.550 --> 02:24.320
herança da interface porque, é claro,

02:24.320 --> 02:28.590
poderíamos ter conseguido o mesmo aqui usando uma interface

02:29.620 --> 02:34.700
administrativa e depois um funcionário da interface, e então

02:34.700 --> 02:38.853
poderíamos também usar um tipo de interseção nestas

02:40.100 --> 02:50.653
interfaces ou criar uma terceira interface, funcionário elevado, que estende funcionário e administrador.

02:52.700 --> 02:54.520
Portanto, se eu agora comentasse isto,

02:54.520 --> 02:56.830
teríamos exatamente o mesmo efeito.

02:56.830 --> 02:58.550
Agora, sem dúvida, isso é um pouco mais de código.

02:58.550 --> 03:01.750
Uma razão pela qual talvez preferíssemos usar tipos aqui

03:01.750 --> 03:04.280
em vez de interfaces, mas a relação é definitivamente

03:04.280 --> 03:06.300
muito próxima e você poderia absolutamente

03:06.300 --> 03:09.770
usar interfaces para este exemplo.

03:09.770 --> 03:13.040
Entretanto, vale notar que, embora os tipos de interseção possam

03:13.040 --> 03:15.600
ser especialmente úteis quando usados em conjunto

03:15.600 --> 03:18.240
com tipos de objetos como estamos fazendo aqui, você

03:18.240 --> 03:20.910
pode usá-los com qualquer tipo.

03:20.910 --> 03:22.683
Então, se você tivesse algum

03:23.655 --> 03:28.450
outro tipo, combinável, digamos, que seja uma corda ou um número, então

03:28.450 --> 03:29.940
temos aqui um tipo de união

03:29.940 --> 03:32.380
com os tipos de corda ou de base numérica

03:32.380 --> 03:34.770
e depois temos aqui um tipo numérico,

03:34.770 --> 03:38.660
que é ou um número ou um booleano, bem, então, poderíamos ter

03:38.660 --> 03:43.660
aqui o nosso, digamos, tipo universal, cruzando combinável com numérico e,

03:43.730 --> 03:48.160
no final, os tipos poderiam então ver que o universal, é claro, é de tipo

03:48.160 --> 03:49.800
número, porque essa é a única

03:49.800 --> 03:51.950
interseção que temos aqui, mas se

03:51.950 --> 03:54.730
você tivesse mais interseções, então este

03:54.730 --> 03:56.520
seria o tipo que é atribuído

03:56.520 --> 03:59.830
universal, então também poderia ser um tipo de união,

03:59.830 --> 04:04.940
que é a interseção desses dois tipos de união.

04:04.940 --> 04:07.800
Assim, o operador do cruzamento pode ser usado

04:07.800 --> 04:11.790
com qualquer tipo e então ele simplesmente constrói o cruzamento

04:11.790 --> 04:12.980
desses tipos.

04:12.980 --> 04:14.330
No caso de um tipo de sindicato,

04:14.330 --> 04:17.300
isto é, basicamente os tipos que eles têm em comum.

04:17.300 --> 04:18.890
No caso de tipos de objetos,

04:18.890 --> 04:22.220
é simplesmente a combinação dessas propriedades do objeto,

04:22.220 --> 04:23.510
por assim dizer.

04:23.510 --> 04:25.960
Portanto, estes são tipos de interseção.

04:25.960 --> 04:27.360
Às vezes pode ser útil.

04:27.360 --> 04:29.050
Você não vai usá-los o tempo todo,

04:29.050 --> 04:31.570
mas definitivamente pode encontrar situações

04:31.570 --> 04:35.010
onde você pode expressar algo de forma mais simples ou mais curta

04:35.010 --> 04:37.230
usando tipos de interseção.

04:37.230 --> 04:39.520
Agora só para provar que tudo isso funciona,

04:39.520 --> 04:42.050
deixe-me abrir uma nova aba aqui no meu terminal e

04:42.050 --> 04:45.390
executar o traço W do TSC para iniciar o modo de relógio, para que eu

04:45.390 --> 04:47.770
não tenha que apenas entrar no servidor ao vivo,

04:47.770 --> 04:49.850
mas também construir meu código.

04:49.850 --> 04:51.210
Agora, se eu recarregar

04:51.210 --> 04:53.200
uma vez aqui, vemos isto funcionar

04:53.200 --> 04:55.443
sem erros e também compila sem erros.
