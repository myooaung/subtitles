WEBVTT

00:02.340 --> 00:05.740
Prezenter: I to jest to dla tego małego projektu demo.

00:05.740 --> 00:08.590
Oczywiście zawsze można zrobić więcej, ale

00:08.590 --> 00:12.070
tutaj już używamy kilku fajnych typów funkcji, o których

00:12.070 --> 00:14.950
dowiedziałeś się w tym kursie.

00:14.950 --> 00:18.220
I dzięki temu projektowi, masz nadzieję, że masz lepsze

00:18.220 --> 00:22.610
pojęcie o tym, kiedy używasz jakiej funkcji, dlaczego pewne funkcje,

00:22.610 --> 00:25.968
takie jak dekoratory i interfejsy, istnieją, jak mogą

00:25.968 --> 00:30.770
nam pomóc i jak możemy pisać bezpieczny dla typu, skalowalny kod.

00:30.770 --> 00:33.735
Teraz zdecydowanie nie krępuj się rozbudować tego

00:33.735 --> 00:35.826
projektu, dodać więcej funkcji na własną

00:35.826 --> 00:38.110
rękę, zbadać co można by tam zmienić i po

00:38.110 --> 00:40.870
prostu poćwiczyć pracę z typescriptem.

00:40.870 --> 00:44.344
Jestem zadowolony z obecnego stanu i w następnym module

00:44.344 --> 00:47.456
chcę teraz zająć się dość oczywistym problemem.

00:47.456 --> 00:51.150
Mamy tu jeden super ogromny plik.

00:51.150 --> 00:55.030
Tak więc, podzielenie tego na wiele plików naprawdę pomogłoby nam

00:55.030 --> 00:56.953
w zarządzaniu naszą bazą kodu.

00:56.953 --> 01:00.090
Bo teraz jeśli chcemy coś gdzieś zmienić, to zawsze

01:00.090 --> 01:02.710
musimy przewijać cały plik i znaleźć miejsce,

01:02.710 --> 01:05.340
w którym chcemy dokonać zmiany.

01:05.340 --> 01:07.000
To nie jest idealne rozwiązanie.

01:07.000 --> 01:09.030
Już teraz jest dość dużo kodu, w jeszcze

01:09.030 --> 01:12.770
większych projektach byłoby to zupełnie nie do opanowania.

01:12.770 --> 01:14.780
Tak więc w następnym module przyjrzymy

01:14.780 --> 01:17.750
się typom funkcji jakie nam daje, które pomagają nam

01:17.750 --> 01:20.423
w dzieleniu naszego kodu na wiele plików.
