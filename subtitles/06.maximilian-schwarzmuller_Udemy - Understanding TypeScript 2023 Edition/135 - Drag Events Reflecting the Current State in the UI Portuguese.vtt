WEBVTT

00:02.320 --> 00:03.570
Instrutor: Para torná-lo

00:03.570 --> 00:05.090
inactivo, temos que ir à

00:05.090 --> 00:07.730
cláusula, ou ao componente em nossa aplicação,

00:07.730 --> 00:11.600
que deve no final agir como um alvo de arrasto.

00:11.600 --> 00:14.120
Portanto, aqui a classe Project List é a cláusula

00:14.120 --> 00:15.870
correta e lá podemos implementar

00:15.870 --> 00:17.150
nossa segunda interface

00:17.150 --> 00:20.130
que adicionamos, a interface Drag Target.

00:20.130 --> 00:23.550
Agora, assim como a interface arrastável, isto nos

00:23.550 --> 00:26.510
obriga a acrescentar certos métodos.

00:26.510 --> 00:30.600
Para ser preciso aqui, precisamos adicionar o manipulador de arraste, o manipulador

00:30.600 --> 00:33.500
de gota e o manipulador de arraste de saída.

00:33.500 --> 00:34.540
Então, vamos fazer isso.

00:34.540 --> 00:38.640
Talvez tudo aqui abaixo o construtor acima configure.

00:38.640 --> 00:40.080
O lugar exato depende

00:40.080 --> 00:42.880
de você, a ordem dos métodos não importa.

00:42.880 --> 00:45.680
Portanto, aqui eu acrescentarei o arrastador,

00:45.680 --> 00:49.730
onde obtemos nosso evento de arrastamento.

00:49.730 --> 00:51.850
Em seguida, acrescentarei aqui o manipulador de gotas,

00:51.850 --> 00:54.203
onde também recebemos nosso evento de arrasto.

00:55.710 --> 00:59.130
E por último, mas não menos importante, o manipulador de

00:59.130 --> 01:02.260
arrasto, onde também temos um evento de arrasto.

01:02.260 --> 01:05.410
Agora esses eventos, por sinal, contêm diferentes tipos de dados,

01:05.410 --> 01:08.594
mas todos eles se baseiam no tipo de evento central do caso.

01:08.594 --> 01:11.860
Agora temos um par de coisas diferentes a fazer.

01:11.860 --> 01:15.120
Comecemos talvez com o "drag over handler".

01:15.120 --> 01:18.770
No manipulador de arraste, quero mudar a aparência da minha

01:18.770 --> 01:21.900
caixa ou da lista desordenada ali dentro, para visualizar

01:21.900 --> 01:24.470
que esta é uma área de gotejamento.

01:24.470 --> 01:26.960
Porque neste momento, quando arrastamos um elemento,

01:26.960 --> 01:30.200
não temos a menor idéia de onde podemos deixá-lo cair, certo?

01:30.200 --> 01:33.410
Nada muda na IU, por isso quero mudar isto.

01:33.410 --> 01:35.950
Para mudar isso, acrescentarei uma certa cláusula css à lista não-ordenada,

01:35.950 --> 01:38.680
que você encontra no app. css.

01:38.680 --> 01:42.080
A cláusula de suspensão que mudará a cor de fundo e,

01:42.080 --> 01:45.460
portanto, aqui, para começar, só precisamos ter

01:45.460 --> 01:49.070
acesso ao nosso elemento de lista não ordenada.

01:49.070 --> 01:53.850
Podemos fazê-lo alcançando este elemento, consultandoSelectror uL e adicionando

01:53.850 --> 01:57.380
um ponto de exclamação porque sempre haverá uma lista não ordenada,

01:57.380 --> 02:00.963
mesmo que ainda não contenha elementos.

02:02.560 --> 02:05.570
Só temos que ter certeza de que esta palavra-chave funciona

02:05.570 --> 02:08.600
aqui e podemos fazer isso através da vinculação automática aqui

02:08.600 --> 02:11.050
para ter certeza de que esta palavra-chave está vinculada

02:11.050 --> 02:12.840
à cláusula ao redor.

02:12.840 --> 02:15.610
Então, com os elementos da lista selecionados,

02:15.610 --> 02:19.550
podemos usar a propriedade da lista de cláusulas dos elementos de

02:19.550 --> 02:22.090
dom, então este é o Vanilla JavaScript aqui

02:22.090 --> 02:26.080
novamente, e chamar o método de adição lá para adicionar a cláusula

02:26.080 --> 02:27.540
de droppable a ele.

02:27.540 --> 02:29.360
Agora com isso, é claro que temos que

02:29.360 --> 02:33.000
nos certificar de que o dragOverHandler seja realmente despedido quando

02:33.000 --> 02:37.333
arrastamos algo sobre este elemento aqui, sobre esta seção renderizada.

02:39.090 --> 02:42.400
Para fazer isso no método de configuração, onde já

02:42.400 --> 02:46.020
temos um ouvinte aqui, ouvindo as mudanças de nosso estado,

02:46.020 --> 02:50.280
também vou registrar ouvintes no próprio elemento.

02:50.280 --> 02:53.380
O primeiro EventListener lá é, é claro, o dragOverHandler

02:53.380 --> 02:54.760
e, sem surpresas, vou

02:54.760 --> 02:58.090
amarrar isto ao dragOverHandler.

02:58.090 --> 03:01.060
Então vou repetir isto porque também quero ouvir

03:01.060 --> 03:03.740
o evento dragLeave e amarrar isto ao dragLeaveHandler

03:03.740 --> 03:06.870
e ao evento drop e amarrar isto ao dropHandler porque

03:06.870 --> 03:08.700
também vamos precisar disto mais

03:08.700 --> 03:10.583
tarde.

03:11.580 --> 03:16.500
Então, com isso, temos este arrastamento sobre o ouvinte do evento e o dragOverHandler

03:16.500 --> 03:18.797
conectado, mas agora também temos

03:18.797 --> 03:21.780
alguns erros no código.

03:21.780 --> 03:24.610
Bem, esses devem ser os objetos de eventos não utilizados aqui,

03:24.610 --> 03:27.430
então, por enquanto, para satisfazer a datilografia, vamos apenas

03:27.430 --> 03:28.810
deixá-los em branco.

03:28.810 --> 03:31.477
Vamos precisar deles mais tarde, mas, por enquanto, para fazer

03:31.477 --> 03:33.690
isto funcionar, vamos deixá-los em branco usando os

03:33.690 --> 03:35.677
sublinhados aqui para dizer àtilografia: "Não

03:35.677 --> 03:37.670
há problema em não usá-los no momento. Agora isto se compila e agora de volta ao projeto,

03:37.670 --> 03:38.950
quando adicionamos um novo

03:38.950 --> 03:42.910
projeto aqui, e eu arrasto isto, você vê quando eu arrasto isto sobre projetos acabados,

03:42.910 --> 03:45.320
o fundo aqui ficou azul claro.

03:45.320 --> 03:49.620
Aqui, sobre os projetos ativos, ficou rosa

03:49.620 --> 03:53.270
claro, como uma leve cor rosa.

03:53.270 --> 03:56.220
Só para mostrar isto novamente, se eu recarregar,

03:56.220 --> 03:58.650
você vê agora que temos fundos brancos nos

03:58.650 --> 04:02.670
projetos, whoops, e assim que eu começo a arrastar, isto aqui fica

04:02.670 --> 04:06.490
com fundo rosa claro e quando eu arrasto sobre os projetos acabados,

04:06.490 --> 04:09.470
o fundo da caixa muda para azul claro.

04:09.470 --> 04:13.360
Agora ela nunca mais muda para branco porque nunca removemos essa cláusula

04:13.360 --> 04:16.050
de suspensão, mas é um primeiro passo.

04:16.050 --> 04:19.480
É claro que a queda ainda não funciona.

04:19.480 --> 04:21.700
Deixá-lo aqui não acrescenta o projeto

04:21.700 --> 04:23.890
porque como ele o faria?

04:23.890 --> 04:25.300
Não acrescentamos nenhuma lógica para isto.

04:25.300 --> 04:28.200
Portanto, vamos nos certificar de atualizar

04:28.200 --> 04:33.200
também o estilo quando pararmos, quando deixarmos o elemento.

04:33.410 --> 04:36.390
Quando basicamente o arrastamos para cá e depois vamos embora.

04:36.390 --> 04:39.670
Certifique-se de que o fundo azul vá embora nesse

04:39.670 --> 04:42.640
caso, é o que eu quero fazer a seguir.

04:42.640 --> 04:44.870
Para isso, podemos usar aqui o dragLeaverHandler

04:44.870 --> 04:47.020
porque ele disparará sempre que deixarmos

04:47.020 --> 04:50.990
este elemento com nosso elemento arrastado.

04:50.990 --> 04:53.019
Agora lá, claro que também quero ter

04:53.019 --> 04:57.550
acesso à minha lista não ordenada, por isso vou copiar esse código, mas depois,

04:57.550 --> 05:01.420
lá, quero remover a cláusula de não poder mais ser usado.

05:01.420 --> 05:05.553
Devemos agora também autocindir isto para que esta

05:06.448 --> 05:11.220
palavra-chave aqui se refira à cláusula circundante.

05:11.220 --> 05:13.120
Se salvarmos isso, adicionamos um novo elemento aqui.

05:14.040 --> 05:17.740
Vamos tentar.

05:17.740 --> 05:18.773
Se eu começar a arrastar,

05:20.310 --> 05:23.740
você vê que temos nosso passado aqui e se eu sair, ele vai embora.

05:24.610 --> 05:27.120
Portanto, agora o pano de fundo está realmente atualizado.

05:27.120 --> 05:29.930
Você vê alguma cintilação aqui porque o evento

05:29.930 --> 05:33.670
"dragLeave" também dispara se você passar de ter o cursor

05:33.670 --> 05:37.190
do mouse sobre o fundo para tê-lo sobre um elemento

05:37.190 --> 05:40.960
renderizado, mas isso deve ser bom aqui.

05:40.960 --> 05:42.500
Não é grande coisa aqui.

05:42.500 --> 05:43.620
Portanto, na verdade, temos o efeito desejado, eu diria.

05:43.620 --> 05:47.320
Portanto, a IU está atualizada exatamente como deveria

05:47.320 --> 05:50.950
agora, mas é claro que não podemos deixar cair e realmente

05:50.950 --> 05:53.140
transferir dados, então esse será

05:53.140 --> 05:54.700
o próximo passo.
