WEBVTT

00:02.320 --> 00:04.290
Öğretim Görevlisi: Bu modül için bu kadar.

00:04.290 --> 00:05.660
Node express uygulamasında

00:05.660 --> 00:08.480
typescript'i nasıl kullanabileceğinizi, dosyalarınızda

00:08.480 --> 00:11.940
harika typescript desteği elde etmek için express ve node

00:11.940 --> 00:13.230
için ekstra tipler yükleyebileceğinizi

00:13.230 --> 00:16.320
öğrendiniz.

00:16.320 --> 00:18.570
Başvuruyu her zaman yazdığınız

00:18.570 --> 00:19.990
gibi yazmanız.

00:19.990 --> 00:21.790
Ancak, örneğin, içe ve dışa aktarma

00:21.790 --> 00:23.720
sözdiziminiz farklıdır ve elbette

00:23.720 --> 00:26.120
türleri ve ayrıca öğrendiğiniz diğer tür

00:26.120 --> 00:29.300
kodu özelliklerini kullanabilirsiniz.

00:29.300 --> 00:31.080
Arayüzleri kullanabilirsiniz,

00:31.080 --> 00:33.080
dekoratörleri kullanabilirsiniz,

00:33.080 --> 00:35.480
eNom'ları ve QPUll'leri ve typescript'e özel

00:35.480 --> 00:37.840
olan her şeyi kullanabilirsiniz.

00:37.840 --> 00:39.310
Tüm bunlar burada işe yarıyor,

00:39.310 --> 00:42.650
çünkü burada normal bir typescript uygulaması yazıyoruz

00:42.650 --> 00:46.070
ve normal typescript derleyicisi ile normal Javascript

00:46.070 --> 00:48.050
koduna derleniyor.

00:48.050 --> 00:52.750
Daha sonra node JS ile çalıştırılan Javascript kodu.

00:52.750 --> 00:54.450
Şimdi, typescript ve node express ile

00:54.450 --> 00:57.720
nasıl çalışılacağı hakkında daha fazla örneğe sahip olmak istiyorsanız,

00:57.720 --> 00:58.910
elbette, daha fazla örnek

00:58.910 --> 01:01.210
bulmak için node express typescript için google'da

01:01.210 --> 01:02.840
arama yapabilirsiniz.

01:02.840 --> 01:04.600
Ancak NestJS'i kontrol etmenizi

01:04.600 --> 01:06.980
de şiddetle tavsiye edebilirim.

01:06.980 --> 01:10.390
Bu bir düğüm. Bu modül boyunca gördüğünüz gibi,

01:10.390 --> 01:13.270
node express'in typescript ile çalışmasını sağlayabilirken,

01:13.270 --> 01:15.310
typescript'i kucaklayan js çerçevesi,

01:15.310 --> 01:18.010
size kutudan çıkan typescript desteği ile projeler,

01:18.010 --> 01:21.740
node projeleri veren bir çerçevedir.

01:21.740 --> 01:24.490
Ve dekoratörler ve benzeri gibi tüm bu typescript

01:24.490 --> 01:26.960
özelliklerini benimser.

01:26.960 --> 01:30.910
NestJS ile node web uygulamaları, rest API'lerin yanı sıra görünümleri

01:30.910 --> 01:36.440
veya graphQL API'leri oluşturduğunuz uygulamalar da oluşturabilirsiniz.

01:36.440 --> 01:38.930
Bunların hepsini node ile oluşturabilirsiniz. js'nin yanı sıra typescript'i

01:38.930 --> 01:41.110
de kullanıyor ve bu proje dekoratörler,

01:41.110 --> 01:43.380
arayüzler gibi özellikleri yoğun

01:43.380 --> 01:46.950
bir şekilde kullanıyor.

01:46.950 --> 01:50.200
Eğer node ve typescript ile servis tarafı web uygulaması

01:50.200 --> 01:53.580
oluşturmak istiyorsanız NestJS'e kesinlikle göz atın.

01:53.580 --> 01:56.660
Harika bir framework, kullanımı gerçekten eğlenceli

01:56.660 --> 02:00.350
ve typescript'in sunduğu tüm harika özellikleri kullanıyor.

02:00.350 --> 02:03.630
Bu nedenle özel tip kurulumu, etrafta çalışma veya bunun gibi herhangi

02:03.630 --> 02:05.310
bir şeye gerek yoktur.

02:05.310 --> 02:08.913
Burada kutudan çıkar çıkmaz harika bir dizgi desteği elde edersiniz.
