WEBVTT

00:02.210 --> 00:04.150
المعلم: وهذا كل شيء لهذه الوحدة.

00:04.150 --> 00:07.040
لقد ألقينا نظرة مفصلة للغاية على برنامج التحويل البرمجي

00:07.040 --> 00:08.140
TypeScript ، وكيف يمكنك

00:08.140 --> 00:10.360
تكوينه ، وكيف يمكنك التأكد من أنه يجمع الكود

00:10.360 --> 00:12.800
الخاص بك بالطريقة التي تريدها.

00:12.800 --> 00:15.190
لقد ألقينا نظرة على كل هذه الخيارات المختلفة

00:15.190 --> 00:17.030
، خاصة الخيارات الصارمة ، تسمح لك

00:17.030 --> 00:19.610
حقًا بكتابة التعليمات البرمجية الصحيحة وعدم

00:19.610 --> 00:21.850
التعرض لأخطاء غريبة ، وأخطاء وقت تشغيل

00:21.850 --> 00:24.100
غريبة قد تواجهها ، على سبيل المثال ، مع عمليات

00:24.100 --> 00:26.610
التحقق من القيمة الفارغة الصارمة ، بالإضافة

00:26.610 --> 00:27.660
إلى ذلك ، لقد ألقينا

00:27.660 --> 00:28.960
نظرة على تصحيح الأخطاء

00:28.960 --> 00:31.390
، وكيف يمكنك بسهولة تكوين Chrome و VS Code بحيث

00:31.390 --> 00:34.830
يمكنك تصحيح الأخطاء من داخل VS Code.

00:34.830 --> 00:37.480
يعد التصحيح من داخل Chrome باستخدام خرائط المصدر

00:37.480 --> 00:38.900
وعلامة تبويب المصادر ، بالطبع

00:38.900 --> 00:40.390
، خيارًا دائمًا.

00:40.390 --> 00:42.850
المفتاح هنا أيضًا هو خرائط المصدر

00:42.850 --> 00:45.710
، التي تقوم بتكوينها ليتم إنشاؤها في ملف

00:45.710 --> 00:47.350
tsconfig ، وهي ملفات الخرائط

00:47.350 --> 00:48.900
التي تعيش بجوار ملفات

00:48.900 --> 00:51.210
JavaScript.

00:51.210 --> 00:54.600
تعمل بشكل أساسي كجسور لمصحح الأخطاء بين ملفات

00:54.600 --> 00:56.300
JavaScript وملفات TypeScript

00:56.300 --> 00:57.820
الخاصة بك.

00:57.820 --> 01:00.160
وبهذا ، نعرف المزيد فيما يتعلق

01:00.160 --> 01:02.680
بكيفية إدارة مشاريعنا.

01:02.680 --> 01:03.870
دعنا الآن نرى ما يمكننا

01:03.870 --> 01:06.173
فعله باستخدام TypeScript و JavaScript.
