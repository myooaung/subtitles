WEBVTT

00:02.200 --> 00:04.920
المتحدث: إذن هذه الفئات ، والخصائص

00:04.920 --> 00:07.510
، والميراث مع تنسكريبتي.

00:07.510 --> 00:08.343
وكما ذكرت ،

00:08.343 --> 00:10.260
فإن هذه الميزات على الرغم

00:10.260 --> 00:12.490
من أنها مدعومة بشكل عام في Javascript

00:12.490 --> 00:14.230
، في JavaScript الحديث

00:14.230 --> 00:16.940
، بالطبع باستثناء تعيينات النوع ، وكذلك

00:16.940 --> 00:21.060
باستثناء العامة الخاصة المحمية.

00:21.060 --> 00:24.770
هذه الكلمات الأساسية متاحة بالفعل فقط في كتابته المطبوعة.

00:24.770 --> 00:28.560
الآن ليس كل ما يمكنك فعله بالفصول الدراسية.

00:28.560 --> 00:29.940
كلما احتجت إلى ميزة

00:29.940 --> 00:32.840
، والتي لديك أيضًا في Vanilla JavaScript

00:32.840 --> 00:35.670
، والتي يتم دعمها أيضًا في Typescript

00:35.670 --> 00:38.610
، فهي أدوات محسوبة ومحددات.

00:38.610 --> 00:42.050
الآن دعنا نرى ذلك هنا في قسم المحاسبة

00:42.050 --> 00:43.390
على سبيل المثال

00:43.390 --> 00:47.450
، لنفترض أن لدينا تقريرًا أخيرًا ، خاصية.

00:47.450 --> 00:51.630
وهي خاصية خاصة ، وهي سلسلة نصية ، لذلك

00:51.630 --> 00:53.310
لدينا ذلك.

00:53.310 --> 00:56.480
ثم هنا نبدأ هذا ، لنكون حجة أوامر

00:56.480 --> 01:01.480
الملكية في تقاريرنا التي حصلنا عليها هنا وهي

01:02.270 --> 01:04.880
القيمة الأولى.

01:04.880 --> 01:07.877
وهو بالطبع غير محدد بشكل أساسي إذا مررنا

01:07.877 --> 01:09.890
مصفوفة تقرير فارغة.

01:09.890 --> 01:14.680
الآن عندما نضيف تقريرًا ، فأنا أريد تعيين هذا التقرير

01:14.680 --> 01:17.010
الأخير ، مساويًا للنص.

01:17.010 --> 01:20.440
وهو ما نضيفه إلى مجموعة تقاريرنا.

01:20.440 --> 01:23.890
الآن التقرير الأخير خاص ، لذا يمكننا الوصول إليه

01:23.890 --> 01:26.250
من داخل هذه الطريقة ، لكننا لن نتمكن

01:26.250 --> 01:28.590
من الوصول إليه من الخارج باستخدام

01:28.590 --> 01:30.240
تدوين النقطة.

01:30.240 --> 01:33.440
الآن يمكننا إضافة برنامج جامع ، لجعله متاحًا.

01:33.440 --> 01:36.020
إن getter هي في الأساس خاصية ،

01:36.020 --> 01:38.670
حيث تقوم بتنفيذ وظيفة أو طريقة

01:38.670 --> 01:40.910
، عندما تسترجع قيمة وهذا يسمح

01:40.910 --> 01:42.380
لك كمطور بإضافة منطق

01:42.380 --> 01:44.460
أكثر تعقيدًا.

01:44.460 --> 01:47.560
هنا ، يمكنك إنشاء برنامج getter باستخدام الكلمة الأساسية

01:47.560 --> 01:49.250
get ، ثم أي اسم من اختيارك.

01:49.250 --> 01:51.810
عادةً ما يكون مرتبطًا ارتباطًا وثيقًا بالملكية

01:51.810 --> 01:54.180
التي تحاول التحكم في الوصول إليها.

01:54.180 --> 01:58.180
على سبيل المثال هنا يمكننا تسميته أحدث تقرير.

01:58.180 --> 01:59.340
أي شيء من هذا القبيل.

01:59.340 --> 02:01.630
الآن من المهم أن يتم تعريف هذا على أنه طريقة.

02:01.630 --> 02:04.260
إذن ، تضيف الأقواس ثم الأقواس المتعرجة.

02:04.260 --> 02:07.250
والآن هنا ، عليك أن تعيد شيئًا

02:07.250 --> 02:11.990
ما ، وهذه طريقة مهمة ، يجب أن تعيد شيئًا ما.

02:11.990 --> 02:14.610
لذا يمكنك إعادة هذا التقرير الأخير

02:14.610 --> 02:16.660
، ثم نقوم بتغليفه نوعًا ما

02:16.660 --> 02:19.570
، لأن هذا متاح للجميع الآن.

02:19.570 --> 02:22.720
لكن غالبًا ما تريد أن يكون لديك منطق أكثر تعقيدًا هنا.

02:22.720 --> 02:26.240
لذلك يمكننا هنا التحقق مما إذا كانت لدينا قيمة هنا ، لذلك إذا

02:26.240 --> 02:27.600
كانت هذه هي الحقيقة.

02:27.600 --> 02:28.960
إذا لم يكن غير محدد

02:28.960 --> 02:31.520
، فنحن نرغب في إرجاع التقرير الأخير

02:31.520 --> 02:34.440
، وإلا فقد نرغب في إرجاع بعض المنطق المختلف

02:34.440 --> 02:37.850
، على سبيل المثال ، لنفترض أننا نلقي رسالة

02:37.850 --> 02:42.650
خطأ برمي خطأ جديد ، ولم يتم العثور على تقارير.

02:42.650 --> 02:46.650
لذا أضفنا الآن المزيد من المنطق ، والمنطق الأكثر تعقيدًا ، إلى

02:46.650 --> 02:49.200
هذه الخاصية وعندما نريد استردادها ، لا

02:49.200 --> 02:51.500
يمكننا استرداد هذه الخاصية مباشرة

02:51.500 --> 02:55.290
من خلال تدوين النقطة ، ولكن يمكننا استخدام هذه الخاصية حتى

02:55.290 --> 02:57.240
النهاية لتشغيل هذا المنطق.

02:57.240 --> 02:58.810
فكيف سيعمل هذا؟

02:58.810 --> 03:02.170
حسنًا هناك ، حيث أقوم بإنشاء قسم المحاسبة الخاص بي.

03:02.170 --> 03:08.693
قبل أن أضيف تقريري ، إذا حاولت تسجيل وحدة التحكم ، والمحاسبة.

03:08.693 --> 03:08.693
أحدث

03:09.630 --> 03:11.010
تقرير ، والآن مهم.

03:11.010 --> 03:13.902
عفوًا ، المحاسبة. أحدث تقرير.

03:13.902 --> 03:16.890
والآن من المهم أن تصل إلى هذا باعتباره خاصية.

03:16.890 --> 03:18.690
لذلك لا يوجد أقواس هنا.

03:18.690 --> 03:20.570
أنت لا تنفذ هذا كطريقة.

03:20.570 --> 03:23.030
ما عليك سوى الوصول إليه كخاصية عادية

03:23.030 --> 03:24.460
، وخلف الكواليس ، سيؤدي

03:24.460 --> 03:27.890
ذلك إلى تنفيذ هذه الطريقة هناك.

03:27.890 --> 03:31.670
لذلك إذا جربت هذا الآن قبل أن نضيف تقريرنا ، فسنرى

03:31.670 --> 03:33.940
أن هذا تمت إعادة بنائه بدون أخطاء

03:33.940 --> 03:35.440
، وإعادة تجميعه بدون

03:35.440 --> 03:38.550
أخطاء ، ولكن بالطبع هنا تم إلقاء خطأ إنه مخصص

03:38.550 --> 03:40.820
لم يتم العثور على تقرير خطأ ، لأنه

03:40.820 --> 03:42.820
لم تتم إضافة أي تقرير حتى الآن

03:42.820 --> 03:45.370
، و منذ استخدام هذا كجالب ، يصل إلى

03:45.370 --> 03:48.310
هذه الطريقة وينفذها.

03:48.310 --> 03:51.560
إذا لم يكن لدينا تقرير ، فلن نجعله إلى هذا التحقق

03:51.560 --> 03:52.830
من IF ، أو في عبارة IF

03:52.830 --> 03:55.693
هذه ، وبالتالي هذا السطر هنا ، يبدأ.

03:56.590 --> 04:00.250
كبديل إذا أردنا نقل ذلك إلى أسفل ، بعد أن أضفنا

04:00.250 --> 04:02.210
تقريرًا ، يمكننا بالطبع

04:02.210 --> 04:04.100
حفظ ذلك ، ولم يعد لدينا خطأ

04:04.100 --> 04:05.730
، ولكن بدلاً من ذلك نخرج

04:05.730 --> 04:08.400
هذا التقرير الأخير.

04:08.400 --> 04:09.750
لذلك هذا هو جامع.

04:09.750 --> 04:12.190
ويمكنك أيضًا إضافة أداة ضبط.

04:12.190 --> 04:14.550
تتم إضافة أداة ضبط بنفس الطريقة تقريبًا.

04:14.550 --> 04:16.290
يمكنك استخدام الكلمة الأساسية

04:16.290 --> 04:18.630
المحددة ، ثم مرة أخرى أي اسم من اختيارك.

04:18.630 --> 04:22.870
عادة اسم متعلق بالخاصية التي يجب تعيينها.

04:22.870 --> 04:25.570
لذا سأعيد هنا استخدام أحدث تقرير.

04:25.570 --> 04:27.840
حتى نتمكن من استخدام هذا في قراءة

04:27.840 --> 04:29.150
قيمة وتعيين قيمة.

04:29.150 --> 04:30.090
ثم مرة أخرى ، قمت

04:30.090 --> 04:31.850
بتعريف هذا على أنه طريقة.

04:31.850 --> 04:34.850
لكن الآن ، هذا يحتاج إلى مناقشة.

04:34.850 --> 04:38.630
القيمة التي كان يمكن للمستخدم تمريرها.

04:38.630 --> 04:40.940
هنا يجب أن تكون هناك قيمة

04:40.940 --> 04:44.110
سلسلة ، والآن هنا يمكنك تشغيل أي

04:44.110 --> 04:46.160
منطق تريد تخزينه.

04:46.160 --> 04:48.530
الآن هنا منذ أن تم تمرير قيمة

04:48.530 --> 04:51.890
لأحدث تقرير ، أريد في النهاية تنفيذ تقرير

04:51.890 --> 04:53.080
الإضافة.

04:53.080 --> 04:55.370
لذلك هنا يمكن أن يكون الواضع بديلاً

04:55.370 --> 04:57.140
لطريقة إضافة تقرير.

04:57.140 --> 05:01.280
حتى هنا يمكننا الوصول إلى هذا التقرير الإضافة.

05:01.280 --> 05:03.760
هذا مطلوب لأننا داخل الفصل.

05:03.760 --> 05:07.280
نشير هنا إلى الفصل ، ثم إلى طريقة الصنف هذه.

05:07.280 --> 05:10.380
والآن يمكننا إعادة توجيه القيمة هنا.

05:10.380 --> 05:12.310
يمكننا الآن إضافة منطق أكثر

05:12.310 --> 05:16.130
تعقيدًا ، والتحقق أيضًا مما إذا كانت القيمة ربما

05:16.130 --> 05:19.810
لم يتم تحديدها إذا كانت خاطئة ، ثم قم بإرجاع أو

05:19.810 --> 05:24.020
طرح خطأ جديد ، حيث نقول من فضلك مرر قيمة صالحة.

05:24.020 --> 05:26.140
هذا شيء يمكننا القيام به أيضًا.

05:26.140 --> 05:29.010
والآن نستخدم أداة ضبط هنا أيضًا.

05:29.010 --> 05:31.330
مع ذلك يمكننا اختباره.

05:31.330 --> 05:33.193
هناك في الأسفل ، يمكنني إضافة

05:35.400 --> 05:36.570
أحدث تقرير.

05:36.570 --> 05:38.780
يمكنني الوصول إلى هذا في المحاسبة

05:38.780 --> 05:40.770
، ومثل هذا تمامًا سنقرأ منه ، ولكن

05:40.770 --> 05:42.300
الآن بإضافة علامة التساوي

05:42.300 --> 05:44.520
، نحاول تعيين قيمة لذلك ، وسيؤدي ذلك

05:44.520 --> 05:47.150
إلى تشغيل طريقة الإعداد هذه.

05:47.150 --> 05:50.090
مرة أخرى قبل أن لا ننفذها كطريقة ، ولكن

05:50.090 --> 05:52.383
ببساطة نصل إليها كخاصية.

05:53.220 --> 05:56.030
الآن هنا إذا مررت في سلسلة فارغة ، فإننا من

05:56.030 --> 05:58.770
الناحية الفنية نقوم بتمرير سلسلة ، ولكن سيتم

05:58.770 --> 06:02.760
التعامل مع السلسلة الفارغة على أنها خاطئة ، انظر هنا.

06:02.760 --> 06:04.950
وبالتالي ، يجب أن يكون لدينا خطأ الآن.

06:04.950 --> 06:07.450
لذلك إذا قمت بحفظ هذا السطر من التعليمات البرمجية

06:07.450 --> 06:09.850
، إذا قمت بحفظ الكود مع إضافة سطر التعليمات البرمجية

06:11.120 --> 06:14.530
هذا ، فقد حصلنا على هذا الخطأ ، يرجى تمرير قيمة صالحة.

06:14.530 --> 06:17.010
إذا قمت بتمرير قيمة صالحة

06:17.010 --> 06:22.010
، إذا قلت تقرير نهاية العام هنا على سبيل المثال ، وأنا

06:22.250 --> 06:23.900
الآن أحفظ هذا.

06:23.900 --> 06:27.210
الآن سترى هذا كل الأعمال وتقرير نهاية العام

06:27.210 --> 06:29.620
هو جزء من قائمة التقارير لدينا.

06:29.620 --> 06:31.150
إذن فهذه هي القيم والمحددات

06:31.150 --> 06:33.620
، والتي يمكن أن تكون رائعة لتغليف المنطق

06:33.620 --> 06:35.390
، ولإضافة منطق إضافي ، يجب تشغيل

06:35.390 --> 06:38.050
ذلك عند محاولة قراءة خاصية ، أو عند محاولة

06:38.050 --> 06:40.243
تعيين خاصية.
