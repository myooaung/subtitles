WEBVTT

00:02.450 --> 00:04.810
Eğitmen: Artık dosyalarımızı derleyici

00:04.810 --> 00:07.850
ile nasıl yönetebileceğimizi anladığımıza göre, derleyici

00:07.850 --> 00:09.870
seçeneklerine geçelim, çünkü bu gerçekten

00:09.870 --> 00:11.300
ilginç.

00:11.300 --> 00:13.860
Bu, TypeScript kodumuzun nasıl derlendiğini,

00:13.860 --> 00:16.620
yani yalnızca hangi dosyaların değil, aynı zamanda

00:16.620 --> 00:18.360
derlenen dosyaların TypeScript

00:18.360 --> 00:20.920
tarafından nasıl ele alındığını da kontrol

00:20.920 --> 00:23.230
etmemize olanak tanır.

00:23.230 --> 00:26.760
Ve işte görüyorsunuz, bir sürü seçeneğimiz var.

00:26.760 --> 00:29.560
Bu seçeneklerin yanında kısa açıklamalar var.

00:29.560 --> 00:32.450
Bazı açıklamaların büyük ölçüde gizemli olduğu söylenebilir.

00:32.450 --> 00:34.210
Diğerleri oldukça açık.

00:34.210 --> 00:36.450
Ve bu seçeneklerin çoğunun, bu seçeneklerin

00:36.450 --> 00:39.950
çoğunun çoğu projede önemli olmayacağını söyleyeceğim.

00:39.950 --> 00:43.900
Yani, bu seçeneklerin hepsini ayarlamayacaksınız, hatta yakınından bile geçmeyeceksiniz.

00:43.900 --> 00:46.070
Genellikle bu seçeneklerin çoğunu görmezden gelebilirsiniz.

00:46.070 --> 00:48.765
Şimdi, bu kurs boyunca buradaki önemli seçenekleri ele

00:48.765 --> 00:50.230
alacağım, çünkü bazı seçenekler

00:50.230 --> 00:52.140
yalnızca belirli bir özelliği öğrendiğimizde

00:52.140 --> 00:53.911
anlam kazanıyor.

00:53.911 --> 00:55.940
Ve şimdiden bazı seçeneklere

00:55.940 --> 00:57.250
dalmak istiyorum.

00:57.250 --> 01:00.840
Bunun için dosyayı yukarıdan aşağıya doğru inceleyelim

01:00.840 --> 01:02.340
ve orada ne var görelim.

01:02.340 --> 01:04.410
Hedef seçeneği ile başlayalım.

01:04.410 --> 01:07.230
Gördüğünüz gibi, bu aslında varsayılan olarak ayarlanmıştır.

01:07.230 --> 01:08.750
Yorumlanmamış.

01:08.750 --> 01:10.780
Bu seçenekle yaptığınız şey, TypeScript'e

01:10.780 --> 01:16.970
kodu hangi hedef JavaScript sürümü için derlemek istediğinizi söylemektir.

01:16.970 --> 01:18.850
Çünkü TypeScript'in yaptığı

01:18.850 --> 01:21.600
şey, JavaScript'te bulunmayan tür ek açıklamaları

01:21.600 --> 01:23.500
gibi yeni özellikleri JavaScript

01:23.500 --> 01:26.960
koduna derlemek değildir.

01:26.960 --> 01:29.667
Yani sadece buranın çalışmasına

01:29.667 --> 01:33.270
dikkat etmekle kalmıyor.

01:33.270 --> 01:37.530
Ayrıca kodu belirli bir dizi tarayıcıda

01:37.530 --> 01:41.370
çalışan JavaScript'e derler.

01:41.370 --> 01:43.798
Ve temel olarak hedefi belirleyerek hangi tarayıcıların

01:43.798 --> 01:46.980
derleme kodunu desteklediğini tanımlarsınız.

01:46.980 --> 01:49.520
Gördüğünüz gibi bu projede varsayılan

01:49.520 --> 01:52.430
hedef es5'tir, bu da her tür kodun derlendiği

01:52.430 --> 01:55.517
anlamına gelir.

01:55.517 --> 01:57.550
Bunu gerçekten görebiliyoruz.

01:57.550 --> 02:00.770
Tüm dosyalarımı derlemek için TSC'yi burada çalıştırırsam,

02:00.770 --> 02:03.260
app. ts let ve const kullanıyorum,

02:03.260 --> 02:05.732
ancak uygulamada. js, we se var.

02:05.732 --> 02:09.890
Bu da es5 hedefimiz olduğu için oluyor

02:09.890 --> 02:13.816
ve es5 dünyasında let ve const yok.

02:13.816 --> 02:16.810
Buradaki iyi şey, eski tarayıcılarda da çalışan

02:16.810 --> 02:20.650
kod üretmek için TypeScript'i kullanabilmemizdir.

02:20.650 --> 02:22.930
Ancak bunu yapmak isteyip istemediğimiz tamamen kullanımımıza bağlı.

02:22.930 --> 02:25.550
Belki de bunu TypeScript ile yapmak istemiyoruz, çünkü

02:25.550 --> 02:27.670
belki de JavaScript transpilasyonuyla ilgilenecek

02:27.670 --> 02:30.560
başka bir derleme aracımız var ve bu nedenle TypeScript'in

02:30.560 --> 02:33.290
bunu yapmasını istemiyoruz veya belki de uygulamamızın

02:33.290 --> 02:35.340
yalnızca modern tarayıcılarda çalışacağını

02:35.340 --> 02:37.030
bildiğimiz için yalnızca modern

02:37.030 --> 02:41.170
tarayıcılarda çalışan bir kod göndermek istiyoruz.

02:41.170 --> 02:44.160
Bu nedenle, değeri silerseniz alternatif seçenekler

02:44.160 --> 02:46.070
burada görülebilir ve daha sonra

02:46.070 --> 02:48.080
burada vscode'da en azından otomatik

02:48.080 --> 02:51.300
tamamlamayı almak için Control + Space tuşlarına basarsanız,

02:51.300 --> 02:54.180
bir dizi öneri görürsünüz ve burada mevcut tüm değerleri

02:54.180 --> 02:56.450
görürsünüz.

02:56.450 --> 02:58.700
Zaman içinde bu durum elbette değişecektir

02:58.700 --> 03:01.900
çünkü yeni JavaScript sürümleri yayınlanmaktadır.

03:01.900 --> 03:03.785
Bunu daha önce es5 olarak ayarladığımızı gördünüz.

03:03.785 --> 03:06.150
Hedefi hiç belirtmezseniz, şu anda

03:06.150 --> 03:09.520
TypeScript es3'e bile derlenir, bu nedenle daha

03:09.520 --> 03:12.200
da eski bir sürümü destekler.

03:12.200 --> 03:15.130
Ancak, daha modern olan es6 ile de gidebilirsiniz,

03:15.130 --> 03:17.510
örneğin const'ı destekler ve daha

03:17.510 --> 03:19.310
da yeni bir sürüm almanıza

03:19.310 --> 03:24.310
izin verir, es6 es2015'e eşdeğerdir, sadece kayıt için.

03:24.870 --> 03:27.480
Örneğin bunu es6 olarak ayarlarsak ve tsconfig'i

03:27.480 --> 03:29.580
değiştirdikten sonra tsc komutunu yeniden

03:29.580 --> 03:32.460
çalıştırırsam. json dosyası, bunu şimdi uygulamada

03:32.460 --> 03:35.440
göreceksiniz. js, let ve const aldık, çünkü

03:35.440 --> 03:38.130
artık bunlar orada destekleniyor.

03:38.130 --> 03:39.340
Yani bu size kalmış.

03:39.340 --> 03:41.720
Elbette, burada ne kadar modern bir JavaScript

03:41.720 --> 03:43.641
sürümü seçerseniz, TypeScript

03:43.641 --> 03:47.450
daha az kod derlemek zorunda olduğundan veya daha az durumda

03:47.450 --> 03:50.440
mevcut olmayan özellikler etrafında çalışmak

03:50.440 --> 03:54.010
zorunda olduğundan, oluşturulan kodunuz o kadar özlü olur

03:54.010 --> 03:56.190
ve bu nedenle derlenen kod genellikle

03:56.190 --> 03:59.560
daha özlü ve daha kısa yapılır.

03:59.560 --> 04:01.150
Yani hedef bu.

04:01.150 --> 04:02.623
Peki ya diğer seçenekler?
