WEBVTT

00:02.170 --> 00:03.830
Mari kita tetap berpegang pada fungsi.

00:03.830 --> 00:07.120
Fitur bagus lainnya yang tersedia dalam JavaScript modern

00:07.120 --> 00:09.450
adalah Anda dapat menetapkan argumen default

00:09.450 --> 00:11.033
ke parameter fungsi.

00:11.880 --> 00:13.830
Katakanlah di sini dalam fungsi tambah

00:13.830 --> 00:17.720
kita, untuk beberapa alasan, kita menginginkan nilai default untuk b.

00:17.720 --> 00:20.180
Jadi, kita tahu bahwa kita ingin bisa menjumlahkan dua angka bersama-sama.

00:20.180 --> 00:23.850
Tetapi jika Anda memanggil fungsi ini hanya dengan satu

00:23.850 --> 00:28.130
angka, kita akan mengasumsikan default untuk argumen kedua, atau

00:28.130 --> 00:29.990
untuk parameter kedua.

00:29.990 --> 00:32.120
Kita bisa melakukannya dengan menambahkan tanda sama dengan

00:32.120 --> 00:34.980
di sini dalam daftar parameter dan kemudian menetapkan nilai default kita.

00:34.980 --> 00:36.920
Yang tentu saja harus sesuai dengan tipe kita.

00:36.920 --> 00:40.020
Misalnya, satu atau apa pun defaultnya.

00:40.020 --> 00:42.770
Dan sekarang ini memungkinkan kita untuk memanggil fungsi ini

00:42.770 --> 00:44.080
hanya dengan satu argumen.

00:44.080 --> 00:46.700
Jadi saya bisa memanggilnya seperti ini dan TypeScript tidak

00:46.700 --> 00:48.830
akan komplain karena mendeteksi bahwa kita memiliki

00:48.830 --> 00:50.200
argumen default di sini yang kemudian

00:50.200 --> 00:51.860
diambil untuk b.

00:51.860 --> 00:53.910
Dan oleh karena itu di sini saya mendapatkan

00:53.910 --> 00:58.910
output enam karena default b saya adalah satu dan saya menambahkan lima, yang membuat enam Sekarang,

00:59.130 --> 01:03.113
satu catatan penting tentang argumen default di sini.

01:04.010 --> 01:07.090
Mereka harus berada di urutan terakhir dalam daftar.

01:07.090 --> 01:10.710
Jika Anda menetapkan argumen default ke a, misalnya, kita akan

01:10.710 --> 01:12.640
memiliki masalah, mengapa?

01:12.640 --> 01:15.290
Karena argumen default tidak dilewati saat

01:15.290 --> 01:16.840
Anda memanggil fungsi.

01:16.840 --> 01:19.490
Jadi jika saya memanggil fungsi di sini dengan satu

01:19.490 --> 01:21.990
argumen, maka argumen yang saya masukkan di sini

01:21.990 --> 01:25.060
diteruskan ke parameter dalam urutan yang sama.

01:25.060 --> 01:27.240
Jadi memanggil fungsi dengan satu argumen,

01:27.240 --> 01:29.900
lima dalam kasus ini, meneruskan satu argumen ini ke argumen

01:29.900 --> 01:32.400
pertama di sini dalam daftar parameter.

01:32.400 --> 01:34.150
Dan karena argumen kedua tidak

01:34.150 --> 01:37.660
disediakan dengan default, maka tidak bersifat opsional.

01:37.660 --> 01:40.920
Dan karenanya kita tidak memberikan argumen kedua sama sekali.

01:40.920 --> 01:43.730
Jadi TypeScript, atau JavaScript sebenarnya,

01:43.730 --> 01:46.800
tidak melihat definisi fungsi Anda dan menebak bahwa

01:46.800 --> 01:50.650
Anda mungkin ingin melewatkan argumen default dan memberikan

01:50.650 --> 01:53.290
nilai Anda ke argumen non-default.

01:53.290 --> 01:55.740
Alih-alih, ia hanya mematuhi perintah.

01:55.740 --> 01:59.720
Dan oleh karena itu, Anda harus menetapkan default dari kanan.

01:59.720 --> 02:01.830
Jadi, pastikan bahwa parameter yang

02:01.830 --> 02:04.010
Anda tidak menerima argumen default

02:04.010 --> 02:07.523
didahulukan sebelum parameter default Anda.
