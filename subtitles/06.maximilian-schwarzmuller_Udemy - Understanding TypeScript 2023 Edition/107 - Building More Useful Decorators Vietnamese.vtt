WEBVTT

00:02.480 --> 00:06.780
Người đàn ông: Bây giờ, với kiến thức về các chức năng của nhà máy, hoặc các

00:06.780 --> 00:10.523
bộ trang trí nhà máy, chúng ta có thể làm những điều khá thú vị.

00:11.570 --> 00:16.240
Ví dụ, chúng ta có thể trao đổi một nhà máy trang trí

00:16.240 --> 00:17.693
mới với mẫu.

00:19.400 --> 00:21.590
Và ở đây, tôi hy vọng sẽ nhận được

00:21.590 --> 00:23.780
một mẫu, đó phải là một số chuỗi.

00:23.780 --> 00:28.780
Và một hookId, cũng phải là một chuỗi.

00:28.870 --> 00:32.050
Sau đó, ở đây, tôi trả lại hàm ẩn danh của mình, là

00:32.050 --> 00:34.800
hàm trang trí thực tế, như bạn đã học.

00:34.800 --> 00:37.440
Bởi vì một lần nữa, tôi có một xưởng sản xuất đồ trang trí.

00:37.440 --> 00:40.570
Và trong đó, tôi muốn hiển thị một số mẫu, có

00:40.570 --> 00:42.530
thể là một số mã HTML, vào một

00:42.530 --> 00:46.590
vị trí nào đó trong dom, nơi tôi tìm thấy hookId này.

00:46.590 --> 00:49.160
Vì vậy, bây giờ chúng ta có thể vào index. html và thêm một địa điểm như

00:49.160 --> 00:51.250
vậy để chúng tôi có thể thấy rằng nó hoạt động.

00:51.250 --> 00:54.483
Chúng tôi có thể thêm một div ở đây, với một id của ứng dụng, có thể.

00:55.430 --> 00:59.560
Và sau đó trong ứng dụng. ts, thay vì logger, tôi thêm

00:59.560 --> 01:01.357
WithTemplate.

01:02.570 --> 01:05.130
Bây giờ, hãy chuyển một chuỗi trống làm đối số đầu tiên

01:05.130 --> 01:06.810
và ứng dụng làm đối số thứ hai.

01:06.810 --> 01:09.313
Vì vậy, ID này tôi đã gán cho div ở đây.

01:10.170 --> 01:12.400
Và bây giờ bên trong chức năng bên trong đó là trình

01:12.400 --> 01:13.830
trang trí thực sự của chúng ta.

01:13.830 --> 01:16.540
Bên trong chức năng trang trí này,

01:16.540 --> 01:19.500
tôi muốn tiếp cận với phần tử.

01:19.500 --> 01:24.500
Đến phần tử hook với document. getElementById.

01:25.662 --> 01:29.390
Đối với hookId, chúng tôi lấy đây làm đối số.

01:29.390 --> 01:33.480
Và nếu HookEl là một thứ tồn tại, thì tôi muốn truy

01:34.330 --> 01:37.960
cập vào bên trongHTML của nó và đặt cái này bằng

01:37.960 --> 01:39.920
mẫu, giả sử như vậy.

01:39.920 --> 01:41.440
Tất nhiên, một thiết lập rất đơn

01:41.440 --> 01:43.640
giản, nhưng điều này sẽ thực hiện thủ thuật.

01:43.640 --> 01:45.460
Bây giờ, tôi không quan tâm đến hàm tạo.

01:45.460 --> 01:48.110
Và để nói với bản đánh máy rằng tôi không quan tâm ở đây, tôi

01:48.110 --> 01:50.370
có thể thêm một dấu gạch dưới làm tên, về cơ bản nó

01:50.370 --> 01:52.007
báo hiệu bản đánh máy, "Vâng, tôi biết

01:52.007 --> 01:54.580
tôi hiểu đối số này, nhưng tôi không cần nó.

01:54.580 --> 01:56.170
Tôi phải xác định nó mặc dù.

01:56.170 --> 01:58.920
Vì vậy, với dấu gạch dưới này, tôi nói với bạn rằng tôi biết

01:58.920 --> 02:00.850
về nó, nhưng tôi sẽ không sử dụng nó. Bởi vì, tất cả những gì tôi muốn làm bây giờ, là

02:00.850 --> 02:02.300
tôi muốn kết xuất trong năm nay.

02:02.300 --> 02:04.033
Vì vậy, bây giờ khi chúng tôi thêm

02:05.580 --> 02:07.750
WithTemplate ở đây, ở đây chúng tôi có thể

02:07.750 --> 02:10.400
thêm thẻ h1, Đối tượng người của tôi như thế này.

02:10.400 --> 02:14.570
Ngoài ra, đóng nó lại.

02:14.570 --> 02:15.653
Và nếu bây giờ chúng tôi đã lưu nó, nó sẽ biên dịch mà không có lỗi.

02:19.130 --> 02:22.380
Và thực sự, ở đây bạn thấy điều này đã được hiển thị trên màn hình.

02:22.380 --> 02:26.350
Và điều này hy vọng sẽ cho bạn thấy sức mạnh mà

02:26.350 --> 02:29.720
bạn có với những người trang trí.

02:29.720 --> 02:31.720
Bạn có thể xây dựng các công cụ trang trí thực sự tiên tiến

02:31.720 --> 02:34.780
như công cụ này, công cụ này đột nhiên tạo ra một số điều kỳ diệu đằng sau hậu trường.

02:34.780 --> 02:38.500
Và đó là những gì tôi muốn nói với siêu lập trình.

02:38.500 --> 02:41.260
Chúng tôi thêm một số logic ở đây mà chúng tôi có thể

02:41.260 --> 02:43.930
tiết lộ nếu đây là thư viện của bên thứ ba mà chúng

02:43.930 --> 02:46.190
tôi chia sẻ với những người dùng khác.

02:46.190 --> 02:47.890
Chúng tôi có thể hiển thị điều này

02:47.890 --> 02:50.350
như một phần của thư viện và bất kỳ ai sử dụng thư

02:50.350 --> 02:52.630
viện của chúng tôi đều có thể nhập hàm trang

02:52.630 --> 02:54.910
trí này và thêm nó vào một lớp để sau đó đột ngột

02:54.910 --> 02:57.408
hiển thị một số nội dung một cách kỳ diệu.

02:57.408 --> 03:00.500
Và tất nhiên, bạn là, bạn thậm chí không bị giới hạn để làm điều đó.

03:00.500 --> 03:02.980
Nếu bạn muốn xuất tên là một phần

03:02.980 --> 03:05.340
của lớp khi nó được khởi tạo,

03:05.340 --> 03:07.850
bạn cũng có thể làm điều đó.

03:07.850 --> 03:09.570
Rốt cuộc, chúng tôi nhận được hàm tạo của mình: Chức năng ở đây.

03:09.570 --> 03:12.427
Bây giờ những gì chúng ta có thể làm với điều đó là chúng ta

03:14.190 --> 03:16.010
có thể tạo một người mới ở đây, bằng cách

03:16.010 --> 03:18.660
gọi hàm tạo của chúng ta, bởi vì đó là hàm tạo của chúng

03:18.660 --> 03:20.380
ta: Xét cho cùng, hàm ở đây.

03:20.380 --> 03:23.820
Hãy để tôi chuyển đổi cái này thành bất kỳ, vì vậy bản đánh máy cho phép

03:23.820 --> 03:26.570
điều này và không nghĩ đó là một chức năng bình thường.

03:26.570 --> 03:29.240
Và sau đó, chúng ta có thể chuyển đến phần tử

03:29.240 --> 03:31.880
hook của mình và truy vấn thẻ h1, tất nhiên,

03:31.880 --> 03:35.160
trong thực tế, bạn sẽ không phải lúc nào cũng có.

03:35.160 --> 03:36.070
Nhưng với mục đích demo, tôi cho

03:36.070 --> 03:37.330
rằng chúng ta sẽ luôn có một cái ở đây.

03:37.330 --> 03:39.820
Rất tiếc, và tôi phải luôn đóng thẻ

03:39.820 --> 03:42.330
h1 ở dưới đó khi tôi nhìn thấy nó.

03:42.330 --> 03:43.850
Và ở đây, với dấu chấm than,

03:43.850 --> 03:46.750
một lần nữa giả sử rằng chúng ta luôn tìm thấy phần

03:46.750 --> 03:49.900
tử h1, chúng ta có thể đặt textContent bằng p. Tên.

03:49.900 --> 03:53.660
Và nếu tôi làm điều đó và lưu

03:53.660 --> 03:56.010
cái này, bây giờ tôi xuất tên, là

03:56.010 --> 03:59.400
một phần của đối tượng ở đây trong mẫu.

03:59.400 --> 04:01.540
Vì vậy, đây là điều bạn có thể làm, và tất

04:01.540 --> 04:03.420
nhiên bạn có thể viết nhiều cách

04:03.420 --> 04:06.010
trang trí phức tạp hơn tôi đang làm ở đây.

04:06.010 --> 04:07.840
Hãy xem xét Angular, một framework

04:07.840 --> 04:09.550
rất phổ biến sử dụng bản thảo.

04:09.550 --> 04:12.270
Chúng sử dụng các trình trang trí, chẳng hạn

04:12.270 --> 04:15.740
như trình trang trí thành phần này, để cho phép bạn chuyển

04:15.740 --> 04:18.420
vào một đối tượng nơi bạn chỉ định những thứ như

04:18.420 --> 04:21.020
mẫu cho trình phân tách thành phần.

04:21.020 --> 04:21.930
Và bộ chọn trong

04:21.930 --> 04:23.950
dom nơi mẫu này sẽ được hiển thị.

04:23.950 --> 04:25.760
Điều này tương đối gần với những gì chúng tôi đã xác định ở đây.

04:25.760 --> 04:28.170
Một mẫu và sau đó là một nơi mà nó sẽ được hiển thị.

04:28.170 --> 04:31.230
Bây giờ không cần phải nói, các bộ trang trí Angular

04:31.230 --> 04:33.760
tất nhiên là tiên tiến và phức tạp hơn nhiều

04:33.760 --> 04:36.550
so với bộ trang trí cơ bản của chúng ta ở đây.

04:36.550 --> 04:38.740
Tuy nhiên, ý tưởng cốt lõi là như nhau.

04:38.740 --> 04:41.660
Angular cung cấp cho bạn các trình trang trí

04:41.660 --> 04:43.900
ở đây, để bạn có thể chỉ định một số mã

04:43.900 --> 04:46.700
HTML, mã này có thể được kết nối với lớp thành

04:46.700 --> 04:49.470
phần của bạn sẽ được hiển thị cho dom khi thành

04:49.470 --> 04:51.760
phần này được hiển thị.

04:51.760 --> 04:53.830
Bây giờ trong trường hợp bạn không biết cách thức

04:53.830 --> 04:55.850
hoạt động của Angular, đó không phải là vấn đề.

04:55.850 --> 04:57.060
Bạn chỉ cần hiểu ở đây rằng nó

04:57.060 --> 04:58.700
hoạt động với các lớp và trình trang trí,

04:58.700 --> 05:01.300
và về cơ bản nó sẽ thực hiện những gì chúng ta đã làm ở đây.

05:01.300 --> 05:03.600
Vì vậy, đó là một điều khác mà bạn có thể làm với các

05:03.600 --> 05:06.400
nhà trang trí, hoặc cụ thể ở đây, với các nhà máy trang trí.

05:06.400 --> 05:09.220
Bởi vì điều đó cho phép chúng ta vượt qua

05:09.220 --> 05:12.210
xung đột bổ sung mà chúng ta cần ở đây.

05:12.210 --> 05:13.610
Và đó cũng là điều tôi muốn nói với siêu lập trình.

05:13.610 --> 05:16.590
Chúng tôi đang tạo ra mọi thứ, chúng tôi đang tạo ra các

05:16.590 --> 05:21.130
chức năng trang trí mà bạn có thể nói là có một số tác động đến người dùng cuối.

05:21.130 --> 05:24.840
Trong NP dual render hay gì đó trên màn hình đây.

05:24.840 --> 05:27.510
Nhưng chúng tôi làm điều đó bằng một công cụ mà chúng tôi giới

05:27.510 --> 05:29.090
thiệu cho các nhà phát triển khác.

05:29.090 --> 05:31.370
Bởi vì trình trang trí này là một công cụ mà

05:31.370 --> 05:33.970
các nhà phát triển khác phải sử dụng bằng cách thêm

05:33.970 --> 05:36.000
nó vào một lớp trong ví dụ này.

05:36.000 --> 05:38.580
Nếu không, điều này sẽ không làm gì cả.

05:38.580 --> 05:40.300
Vì vậy, chúng tôi cung cấp các tiện

05:40.300 --> 05:43.490
ích bổ sung cho các nhà phát triển, chẳng hạn như các tiện ích mà các

05:43.490 --> 05:46.590
nhà phát triển khác có thể sử dụng để hiển thị một thứ gì đó trên

05:46.590 --> 05:49.050
màn hình một cách thuận tiện cho một lớp học.

05:49.050 --> 05:50.590
Đó là điều tương tự mà Angular làm ở

05:50.590 --> 05:52.940
đây, theo một cách nâng cao hơn, và đó là thứ mà các học

05:52.940 --> 05:54.220
sinh chấm điểm rất phù hợp.
