WEBVTT

00:02.050 --> 00:04.370
ผู้สอน: เราไม่สามารถเพิกเฉยต่อโมดูลที่แยกออกมา

00:04.370 --> 00:10.810
แต่มีอีกทางเลือกหนึ่งซึ่งไม่ได้กล่าวถึงในที่นี้ด้วยซ้ำ ซึ่งฉันยังอยากจะกล่าวถึงตัวเองอยู่

00:10.810 --> 00:14.680
และนั่นคือตัวเลือกไม่ปล่อยข้อผิดพลาด

00:14.680 --> 00:18.820
คุณสามารถตั้งค่านี้เป็นจริงหรือเท็จและค่าเริ่มต้นเป็นเท็จ

00:18.820 --> 00:19.653
ตอนนี้มันทำอะไร?

00:19.653 --> 00:23.050
หากเราตั้งค่าเป็นเท็จ ให้ฉันแสดงจุดที่อาจเป็นปัญหา

00:23.050 --> 00:27.590
มันเป็นปัญหาถ้าเราแนะนำข้อผิดพลาดหรืออาจเป็นปัญหาได้

00:27.590 --> 00:32.410
สมมติว่าที่นี่ ฉันมีปุ่มของฉันและลบเครื่องหมายอัศเจรีย์นี้ออก

00:32.410 --> 00:34.750
แม้ว่าตอนนี้เราจะยังไม่เข้าใจอย่างถ่องแท้ว่าเกิดอะไรขึ้นกับปัญหาที่เกิดขึ้น

00:34.750 --> 00:40.610
แต่เพียงว่า TypeScript ไม่รู้ว่าเรามีปุ่มอยู่ตรงนี้อย่างแน่นอน

00:40.610 --> 00:42.790
ท้ายที่สุด เมื่อค้นหาปุ่ม เราอาจไม่ได้รับปุ่มนั้นหากไม่มีองค์ประกอบใน

00:42.790 --> 00:48.800
DOM ที่ตรงกับตัวเลือกนี้ ปุ่มนี้จะกลับมาทันที

00:48.800 --> 00:50.910
และนั่นคือสิ่งที่ TypeScript บ่นเกี่ยวกับ

00:50.910 --> 00:57.200
ที่นี่เราเข้าถึงบางสิ่งบนวัตถุที่เป็นโมฆะและนั่นไม่ดี

00:57.200 --> 00:59.300
นั่นเป็นข้อผิดพลาดที่เรามีที่นี่

00:59.300 --> 01:04.770
หากเรารวบรวมโค้ด เราจะได้รับข้อผิดพลาดนี้ในคอนโซลด้วย

01:04.770 --> 01:08.210
อย่างไรก็ตาม ไฟล์ถูกสร้างขึ้น

01:08.210 --> 01:11.660
แม้ว่าฉันจะลบแอพ jsfile มันจะถูกสร้างใหม่

01:11.660 --> 01:13.910
ดังนั้นแม้ว่าเราจะมีข้อผิดพลาด

01:13.910 --> 01:16.300
TypeScript จะสร้างไฟล์ JavaScript

01:16.300 --> 01:18.740
สิ่งนี้อาจเป็นที่ต้องการหรือไม่ก็ได้

01:18.740 --> 01:21.360
บางทีคุณอาจมีข้อผิดพลาดในไฟล์ TypeScript

01:21.360 --> 01:22.980
ของคุณและคุณไม่ทราบวิธีการแก้ไข

01:22.980 --> 01:26.000
แต่คุณรู้ว่าจะไม่เป็นปัญหาในแอปสุดท้าย

01:26.000 --> 01:29.410
เช่นเดียวกับที่นี่แม้ว่าเราจะไม่รู้เกี่ยวกับเครื่องหมายอัศเจรีย์

01:29.410 --> 01:31.577
หากเราไม่ทราบเกี่ยวกับเครื่องหมายอัศเจรีย์

01:31.577 --> 01:35.900
เราอาจไม่ทราบวิธีปิดใช้งานข้อผิดพลาดนี้ โดยพื้นฐานแล้ว

01:35.900 --> 01:39.630
แต่เรายังรู้ว่าสิ่งนี้จะใช้ได้ในหน้าของเราที่นี่

01:39.630 --> 01:43.630
ดังนั้นเราจึงสามารถคอมไพล์สิ่งนี้ได้แม้ว่าจะมีข้อผิดพลาดก็ตาม

01:43.630 --> 01:45.570
แต่แน่นอนว่าในความเป็นจริง คุณควรตั้งเป้าหมายให้โปรเจ็กต์ปราศจากข้อผิดพลาด

01:45.570 --> 01:51.720
และเรียนรู้วิธีแก้ไขปัญหานี้แทนที่จะเพิกเฉย

01:51.720 --> 01:54.590
อย่างไรก็ตาม คุณสามารถตั้งค่านี้เป็น False

01:54.590 --> 01:57.590
หรือไม่ตั้งค่าเลยก็ได้ เนื่องจาก False เป็นค่าเริ่มต้น

01:57.590 --> 02:02.590
หากคุณสร้างไฟล์ JavaScript ได้หากคุณมีข้อผิดพลาด

02:02.590 --> 02:04.240
หากคุณตั้งค่านี้เป็นจริง

02:04.240 --> 02:09.100
สิ่งที่จะเกิดขึ้นคือไฟล์ที่มีปัญหาจะไม่ถูกสร้างขึ้น

02:09.100 --> 02:10.910
ถ้าตอนนี้ฉันรีรันสิ่งนี้...

02:12.440 --> 02:15.110
คุณเห็นไหมว่าไม่มีอะไรถูกสร้างขึ้นจริง

02:15.110 --> 02:26.440
แม้แต่การวิเคราะห์ ไฟล์ ts จะไม่ส่งออกหากเรามีเนื้อหาบางอย่างนอกเหนือจากคอนโซล

02:26.440 --> 02:26.440
เข้าสู่ระบบ คุณเห็นว่ามันไม่ได้ถูกสร้างขึ้น

02:26.550 --> 02:29.600
และสาเหตุก็คือเรามีข้อผิดพลาดในไฟล์

02:29.600 --> 02:34.300
และหากไฟล์ใดไม่สามารถคอมไพล์ได้ ก็จะไม่มีการละไฟล์ใดๆ

02:34.300 --> 02:35.810
ดังนั้นเราจึงต้องทำให้แน่ใจว่าเราได้แก้ไขข้อผิดพลาดนี้ก่อนที่เราจะสามารถรับ

02:35.810 --> 02:40.890
TypeScript เพื่อคอมไพล์ไฟล์ให้เราอีกครั้ง

02:40.890 --> 02:43.530
และดังนั้นจึงเป็นตัวเลือกที่ฉันชอบตั้งค่า

02:43.530 --> 02:46.830
เพราะฉันไม่สนใจที่จะรับไฟล์ JavaScript หากยังมีข้อผิดพลาดในไฟล์

02:46.830 --> 02:49.703
TypeScript ของฉัน
