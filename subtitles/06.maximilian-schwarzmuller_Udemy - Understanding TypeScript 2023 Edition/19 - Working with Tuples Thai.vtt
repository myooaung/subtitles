WEBVTT

00:02.460 --> 00:05.590
-: ดังนั้นจึงรองรับอาร์เรย์และด้วยตัวเลข สตริง

00:05.590 --> 00:07.620
บูลีน วัตถุ และอาร์เรย์

00:07.620 --> 00:11.400
เราได้ค่าหลักหรือประเภทค่า JavaScript ไม่รองรับใน TypeScript

00:11.400 --> 00:15.100
ดังที่คุณจะได้เรียนรู้จากตัวอย่างออบเจกต์ในอาร์เรย์ของพวกเขา

00:15.100 --> 00:17.884
TypeScript ยังนำเสนอวิธีการใช้งานที่มากกว่านั้น

00:17.884 --> 00:30.140
แต่นั่นก็เป็นขั้นสูงกว่าเล็กน้อย ซึ่งเป็นเหตุผลที่เราจะมี ดูในภายหลัง แต่แม้แต่ประเภทหลักเหล่านี้กับสิ่งที่คุณจะได้เรียนรู้ในการบรรยายครั้งก่อนก็ได้รับการสนับสนุน

00:30.140 --> 00:33.540
ตอนนี้ TypeScript ถือเป็นสองแนวคิดใหม่

00:33.540 --> 00:37.840
ประเภทใหม่ ซึ่งเราไม่ทราบจากวานิลลาจาวาสคริปต์

00:37.840 --> 00:40.300
ตัวอย่างเช่น ประเภททูเพิล

00:40.300 --> 00:44.360
ตอนนี้คุณอาจรู้จักทูเพิลจากภาษาโปรแกรมอื่นๆ

00:44.360 --> 00:46.570
แต่ JavaScript ไม่มี

00:46.570 --> 00:49.570
นี่คือทูเพิล ตัวอย่างเช่น และคุณจะบอกว่า

00:49.570 --> 00:52.290
นี่คืออาร์เรย์ มันเป็นอาร์เรย์ แต่เป็นอาร์เรย์ที่มีความยาวคงที่

00:52.290 --> 00:54.520
และจริง ๆ แล้วไม่ใช่แค่ความยาวคงที่เท่านั้น

00:54.520 --> 00:58.650
แต่ยังเป็นประเภทคงที่ด้วย

00:58.650 --> 01:00.730
และสิ่งนี้จะมีประโยชน์ที่ไหน

01:00.730 --> 01:03.350
สมมติว่าในตัวเรา เรามีคุณสมบัติและบทบาทจำนวนหนึ่ง

01:03.350 --> 01:11.160
ซึ่งเป็นอาร์เรย์ที่มีสององค์ประกอบพอดี โดยที่ตัวแรกคือตัวระบุตัวเลข เช่น

01:11.160 --> 01:22.765
สองตัว และตัวที่สองคือตัวระบุสตริงและตัวมนุษย์ คำอธิบายที่อ่านได้เช่นผู้เขียน

01:22.765 --> 01:26.496
ตอนนี้สิ่งนี้ควรมีสององค์ประกอบเสมอ เพราะผู้ใช้หรือบุคคลในแอปพลิเคชันนี้ที่เรากำลังเขียน

01:26.496 --> 01:35.185
สมมติว่าสามารถมีได้เพียงหนึ่งบทบาท และบทบาทหนึ่งประกอบด้วยสององค์ประกอบเท่านั้น

01:35.185 --> 01:37.400
แน่นอนว่าเราสามารถใช้ออปติกที่นี่ได้

01:37.400 --> 01:39.090
แต่ด้วยเหตุผลบางอย่างเราต้องการมีอาร์เรย์ที่มีสององค์ประกอบพอดี

01:39.090 --> 01:50.220
โดยที่องค์ประกอบแรกจะเป็นตัวระบุตัวเลขเสมอ และองค์ประกอบที่สองจะเป็นตัวระบุสตริงหรือคำอธิบายเสมอ หรืออย่างไรก็ตามคุณต้องการเรียก มัน.

01:50.220 --> 01:52.420
ทีนี้ หากเราวางเมาส์เหนือ TypeScript นี้จะอนุมานถึงประเภทแปลกๆ

01:52.420 --> 01:58.550
ที่เราไม่เคยเห็นมาก่อน อันที่จริง ถ้าเรา dis หมายความว่า TypeScript เข้าใจว่าเรามีอาร์เรย์ซึ่งอาจเก็บสตริงหรือตัวเลขได้ นี่เป็นประเภทสหภาพ

01:58.550 --> 02:06.710
และเรา ' จะดำดิ่งลงไปในสิ่งเหล่านั้นในภายหลัง

02:06.710 --> 02:06.710
ประเด็นสำคัญคือการที่

02:06.710 --> 02:11.668
TypeScript เข้าใจว่าควรเป็นอาร์เรย์ที่มีค่าประเภทเหล่านี้

02:11.668 --> 02:14.580
ดาวน์ที่ตาย เราสามารถเรียกใช้โค้ดนี้ได้แม้ว่า

02:14.580 --> 02:18.780
บทบาทของบุคคล การพุช ผู้ดูแลระบบ

02:18.780 --> 02:20.250
ตอนนี้สำหรับแอปพลิเคชันของเรา

02:20.250 --> 02:23.960
สิ่งนี้อาจไม่สมเหตุสมผลเพราะเรารู้ว่าเราต้องการเพียงสององค์ประกอบ

02:23.960 --> 02:28.963
TypeScript ยังไม่รู้ว่าเราต้องการเพียงสององค์ประกอบ

02:28.963 --> 02:28.963
เรายังสามารถเปลี่ยนบทบาทบุคคลองค์ประกอบที่สองที่มีดัชนีหนึ่งเป็นตัวเลขได้อีกด้วย

02:35.200 --> 02:38.010
สิ่งนี้จะได้ผลเนื่องจาก TypeScript รู้แต่เพียงว่าบทบาทควรเป็นประเภทสตริงหรืออาร์เรย์ตัวเลข

02:38.010 --> 02:52.580
ดังนั้นการกำหนดตัวเลขที่นี่ให้กับองค์ประกอบที่สองและดังนั้นจึงอนุญาตให้แทนที่ด้วยตัวเลขได้ เนื่องจากเราแค่พูดอะไรบางอย่างเกี่ยวกับประเภทที่เราใช้กันทั่วไป สามารถใช้ในนั้น

02:52.580 --> 02:55.040
เรารู้ว่าเราต้องการมีโครงสร้างแบบนั้น

02:55.040 --> 02:58.094
สององค์ประกอบ หมายเลของค์ประกอบแรก สตริงองค์ประกอบที่สอง

02:58.094 --> 03:01.770
แต่ TypeScript ไม่ทำเช่นนั้น สำหรับสถานการณ์เช่นนี้

03:01.770 --> 03:05.865
ทูเพิลจะสมบูรณ์แบบ เราสามารถบอก TypeScript

03:05.865 --> 03:10.865
ได้ว่าควรมีบทบาทใด โดยกำหนดประเภทของบทบาทอย่างชัดเจน

03:11.010 --> 03:13.230
ตรงนี้เรายังมีตัวอย่างที่ TypeScript

03:13.230 --> 03:19.927
ไม่ใช่ phototype แต่เราต้องการแทนที่มันอย่างชัดเจน

03:19.927 --> 03:19.927
ตอนนี้เราสามารถเพิ่มประเภทออบเจกต์ที่ชัดเจนได้โดยการเพิ่มเครื่องหมายทวิภาคหลังบุคคล

03:23.041 --> 03:31.180
จากนั้นวงเล็บปีกกาและชื่อควรเป็นสตริง อายุควรเป็นตัวเลข และงานอดิเรกควรเป็นอาร์เรย์สตริง

03:31.180 --> 03:33.740
ทั้งหมดตามที่ TypeScript สรุป

03:33.740 --> 03:35.401
เพื่อสิ่งนั้น เราไม่ต้องการ

03:35.401 --> 03:36.827
การมอบหมายที่โจ่งแจ้งนี้

03:36.827 --> 03:38.789
และอย่างที่คุณทราบ มันคงจะแย่

03:38.789 --> 03:43.565
แต่ตอนนี้เรามีสถานการณ์ที่การอนุมานไม่ได้ผลตามที่เราต้องการ

03:43.565 --> 03:47.510
และเราต้องการกำหนดให้บทบาทเป็นทูเพิล

03:47.510 --> 03:49.730
ตอนนี้ แทนที่จะตั้งค่าอาร์เรย์สตริงหรืออาร์เรย์ตัวเลขสองชุด

03:49.730 --> 03:51.660
หรือใช้ประเภทเดียวกันที่ไม่ใช่สามก่อนหน้านี้

03:51.660 --> 03:55.180
ตอนนี้เราสามารถใช้ประเภทพิเศษได้แล้ว

03:55.180 --> 03:56.810
เราใช้วงเล็บเหลี่ยมอีกครั้ง

03:56.810 --> 04:03.637
แต่ตอนนี้ภายในวงเล็บเหลี่ยมเราเพิ่มตัวเลข ตามด้วยเครื่องหมายจุลภาคและสตริง

04:03.637 --> 04:07.340
ตอนนี้นี่เป็นประเภททูเพิลที่นี่

04:07.340 --> 04:10.729
ทูเพิลเป็นโครงสร้างพิเศษ TypeScript เข้าใจ ในจาวาสคริปต์จะเป็นอาร์เรย์ปกติ

04:10.729 --> 04:18.190
แต่ในระหว่างการพัฒนาด้วย TypeScript เราจะได้รับข้อผิดพลาดเกี่ยวกับโค้ดแบบนี้ที่นี่

04:18.190 --> 04:20.313
ตอนนี้สิ่งอันดับทำอะไร?

04:21.620 --> 04:23.564
นี่บอก TypeScript ว่าฉันต้องการมีอาร์เรย์พิเศษที่มีสององค์ประกอบพอดี

04:23.564 --> 04:32.020
เพราะฉันมีสองประเภทในนั้นพอดี และองค์ประกอบแรกควรเป็นตัวเลข

04:32.020 --> 04:35.436
องค์ประกอบที่สองควรเป็นสตริง ดังนั้น

04:35.436 --> 04:39.033
หากเรารวบรวมโค้ดนี้ที่นี่ ฉันได้รับข้อผิดพลาดเกี่ยวกับ

04:40.663 --> 04:48.346
10 ที่ไม่สามารถกำหนดเป็นประเภทได้ที่นี่ เนื่องจากเราต้องการมีสตริงเป็นค่าที่สอง และถ้าฉันกำหนด

04:48.346 --> 04:56.544
10 เป็น a ค่าที่สองตรงนี้ เห็นได้ชัดว่าฉันไม่ทำตามกฎนี้

04:56.544 --> 05:01.544
หากคุณแสดงความคิดเห็นและเรารวบรวมมันใช้งานได้

05:02.240 --> 05:06.290
เป็นเรื่องแปลกเล็กน้อยเพราะเหตุใดการพุชจึงทำงานที่นี่

05:06.290 --> 05:08.610
เพราะเราทุกคนกำลังบอกว่าบทบาทนั้นควรมีสององค์ประกอบพอดี

05:08.610 --> 05:14.980
ดังนั้นทำไมเราจึงส่งผู้ดูแลระบบไปยังอาร์เรย์บทบาทที่นี่

05:14.980 --> 05:19.300
Push จริง ๆ แล้วเป็นข้อยกเว้นที่อนุญาตใน tuples

05:19.300 --> 05:22.410
น่าเสียดายที่ TypeScript ไม่สามารถตรวจจับข้อผิดพลาดนี้ได้

05:22.410 --> 05:24.840
แต่อย่างน้อยก็ช่วยให้แน่ใจว่าเราไม่ได้กำหนดค่าที่ไม่ถูกต้องที่นี่

05:24.840 --> 05:31.500
และนอกจากการพุชแล้ว เรายังได้รับความช่วยเหลือเกี่ยวกับความยาวอีกด้วย

05:31.500 --> 05:33.671
หากเรากำหนดให้บุคคลนั้นมีบทบาทใหม่

05:33.671 --> 05:36.420
ตัวอย่างเช่น ไม่อนุญาตให้ใช้อาร์เรย์ว่าง

05:36.420 --> 05:43.510
ที่มีโครงสร้างตรงตามที่เรากำหนดไว้ ถ้าฉันเพิ่มองค์ประกอบพิเศษที่นี่

05:43.510 --> 05:45.880
จากนั้นเราจะได้รับข้อผิดพลาดอีกครั้ง

05:45.880 --> 05:50.720
ดังนั้นความยาวจะถูกบังคับใช้ถ้าเรากำหนดแบบนี้ แต่ไม่ใช่สำหรับการผลักและอื่นๆ

05:50.720 --> 05:55.580
นี่คือสิ่งที่คุณต้องระวัง แต่ยังคงได้รับการสนับสนุนนี้และการสนับสนุนนี้ค่อนข้างดี

05:55.580 --> 05:57.899
และถ้าคุณมีสถานการณ์ที่คุณต้องการค่าจำนวน

05:57.899 --> 06:07.900
X ในอาร์เรย์ และคุณทราบประเภทของแต่ละค่าล่วงหน้า จากนั้นคุณอาจต้องการพิจารณาทูเพิลแทนอาร์เรย์เพื่อให้แอปของคุณมีความเข้มงวดมากขึ้น

06:07.900 --> 06:17.543
เพื่อให้ชัดเจนยิ่งขึ้นเกี่ยวกับประเภทข้อมูลที่คุณกำลังทำงานด้วยและประเภทข้อมูลที่คุณคาดหวัง
