WEBVTT

00:02.180 --> 00:04.432
- : Maintenant, une source commune de confusion,

00:04.432 --> 00:06.300
je veux clarifier ici, est la différence

00:06.300 --> 00:09.030
entre les types Génériques et Union.

00:09.030 --> 00:11.950
Pourquoi pouvez-vous confondre ces deux-là ?

00:11.950 --> 00:14.440
Eh bien, par exemple, notre stockage de données ici.

00:14.440 --> 00:16.260
Si nous acceptons les types génériques

00:16.260 --> 00:19.240
basés sur ces types, nous pourrions aussi réécrire

00:19.240 --> 00:21.157
cela pour dire simplement : "Nous

00:21.157 --> 00:23.750
voulons stocker des chaînes de caractères,

00:23.750 --> 00:27.610
des nombres ou des booléens ici, n'est-ce pas ? Ainsi, nous pourrions stocker cela ou, pour être précis, l'envelopper

00:27.610 --> 00:30.470
entre parenthèses afin de dire que l'un ou l'autre

00:30.470 --> 00:32.660
de ces types est un tableau.

00:32.660 --> 00:35.040
Puis ici, bien sûr, nous pourrions aussi dire : "Eh bien, ce que nous

00:35.040 --> 00:37.017
obtenons ici lorsque nous ajoutons un élément est soit

00:37.017 --> 00:38.420
une chaîne de caractères, soit un nombre,

00:38.420 --> 00:39.740
soit un booléen, et lorsque nous le supprimons,

00:39.740 --> 00:41.120
c'est la même chose. Maintenant, quel est le problème avec cette approche ?

00:41.120 --> 00:43.007
À première vue, on pourrait croire qu'il s'agit de la même chose, mais en fait,

00:44.424 --> 00:45.880
il s'agit de quelque chose de totalement différent.

00:45.880 --> 00:49.630
Ce que nous disons ici, c'est que nous stockons n'importe quel type

00:49.630 --> 00:52.310
de données ici, tant qu'il s'agit d'un tableau

00:52.310 --> 00:53.710
de chaînes, de nombres ou

00:53.710 --> 00:55.690
de booléens, et nous ajoutons ensuite

00:55.690 --> 00:57.220
n'importe quel type de données

00:57.220 --> 00:59.730
ici, soit une chaîne, un nombre ou un booléen,

00:59.730 --> 01:02.930
et la même chose pour la suppression.

01:02.930 --> 01:04.670
Maintenant, nous avons déjà quelques erreurs ici, bien sûr,

01:04.670 --> 01:06.650
parce que je ne peux plus initialiser ceci d'une manière générique.

01:06.650 --> 01:09.830
Mais, à part ça, ça fonctionne.

01:09.830 --> 01:12.520
Le problème, cependant, est que pour l'un d'entre eux, nous

01:12.520 --> 01:14.420
ne disons pas qu'il s'agit d'un tableau de

01:14.420 --> 01:15.890
chaînes de caractères, d'un tableau

01:15.890 --> 01:18.260
de nombres ou d'un tableau de booléens.

01:18.260 --> 01:20.630
Cela signifie que nous avons un tableau qui peut

01:20.630 --> 01:24.190
contenir des chaînes de caractères, des nombres et des booléens.

01:24.190 --> 01:26.290
Ainsi, si vous voulez dire soit un tableau

01:26.290 --> 01:30.190
de chaînes de caractères, soit un tableau de nombres, nous devons dire tableau

01:30.190 --> 01:32.100
de chaînes de caractères, tableau de

01:32.100 --> 01:34.403
nombres ou tableau de booléens.

01:34.403 --> 01:36.020
Eh bien, nous pouvons le faire, mais maintenant nous avons un problème ici.

01:36.020 --> 01:39.100
Maintenant, nous ajoutons une chaîne, un nombre ou un booléen,

01:39.100 --> 01:41.660
mais en fonction de ce que nous avons défini pour

01:41.660 --> 01:44.710
ce tableau de données, soit un tableau de nombres, soit

01:44.710 --> 01:46.750
un tableau de booléens, soit un tableau

01:46.750 --> 01:50.270
de chaînes, nous ne sommes pas autorisés à ajouter un nombre, un

01:50.270 --> 01:52.320
booléen ou une chaîne.

01:52.320 --> 01:54.140
Si nous définissons ce tableau comme un tableau de chaînes de

01:54.140 --> 01:55.870
caractères, nous ne pouvons pas ajouter un nombre ici.

01:55.870 --> 01:57.833
Pourtant, ici, tout paramètre me convient, à condition qu'il s'agisse

01:57.833 --> 01:59.800
d'un nombre, d'un booléen ou d'une chaîne de caractères.

01:59.800 --> 02:02.850
Le problème se situe donc ici au niveau des types d'Union.

02:02.850 --> 02:05.670
Nous acceptons n'importe laquelle de ces valeurs chaque

02:05.670 --> 02:08.380
fois que cette méthode est appelée, ou cette méthode.

02:08.380 --> 02:11.053
Donc, nous ne disons pas, "Hey, chaque fois que nous

02:11.053 --> 02:14.250
travaillons avec cette classe, vous devez choisir un type

02:14.250 --> 02:15.397
et vous y tenir, au lieu

02:15.397 --> 02:18.150
de cela, nous disons, chaque fois que vous appelez

02:18.150 --> 02:20.990
cette méthode, vous êtes libre d'utiliser l'un de ces

02:20.990 --> 02:21.830
types.

02:21.830 --> 02:23.440
Ce n'est pas du tout ce que nous voulons ici.

02:23.440 --> 02:26.150
Si je reviens à la configuration précédente

02:26.150 --> 02:29.640
où nous utilisions des types génériques, nous obtenons

02:29.640 --> 02:33.050
une configuration différente.

02:33.050 --> 02:34.810
Ici, nous disons que vous devez choisir

02:37.580 --> 02:39.450
une fois le type de données que vous voulez

02:39.450 --> 02:42.060
stocker et que vous n'êtes autorisé à ajouter que ce

02:42.060 --> 02:43.950
type exact de données.

02:43.950 --> 02:45.750
Donc ici, si j'ajoute un nombre, par exemple,

02:45.750 --> 02:48.523
j'obtiens une erreur parce que ce n'est pas une chaîne de caractères

02:49.710 --> 02:52.623
et cela montre que je ne veux gérer que les chaînes de caractères ici

02:53.830 --> 02:54.730
lorsque je définis le

02:54.730 --> 02:56.170
type générique.

02:56.170 --> 02:57.810
C'est la différence entre les types union et les types génériques.

02:57.810 --> 03:01.250
Les types d'union peuvent être très utiles si vous voulez avoir

03:01.250 --> 03:05.040
une fonction que vous pouvez appeler avec l'un de ces types à chaque

03:05.040 --> 03:06.920
fois que vous l'appelez.

03:06.920 --> 03:08.690
Les types génériques sont parfaits

03:08.690 --> 03:11.570
si vous voulez verrouiller un certain type.

03:11.570 --> 03:13.460
Utilisez le même type dans toute l'instance

03:13.460 --> 03:15.510
de classe que vous créez.

03:15.510 --> 03:18.380
Utilisez le même type dans toute la fonction.

03:18.380 --> 03:20.070
C'est là que vous voulez le type générique.

03:20.070 --> 03:23.300
Vous voulez des types d'union lorsque vous êtes flexible

03:23.300 --> 03:25.850
pour avoir un type différent à chaque appel de

03:25.850 --> 03:28.120
méthode, à chaque appel de fonction.

03:28.120 --> 03:30.810
Ensuite, vous pouvez utiliser les types d'union.

03:30.810 --> 03:33.470
Les types génériques verrouillent un type.
