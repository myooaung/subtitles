WEBVTT

00:02.220 --> 00:03.053
ผู้สอน: ถ้าคุณไปต่อ

00:03.053 --> 00:04.883
เรามีตัวเลือกเพิ่มเติม noUnusedLocals,

00:04.883 --> 00:07.920
noUnusedParameters, noImplicitReturns

00:07.920 --> 00:10.470
สิ่งนี้จะช่วยให้คุณมีคุณภาพของรหัสโดยทั่วไป

00:10.470 --> 00:13.110
TypeScript จะบ่นถ้าคุณมีตัวแปรที่ไม่ได้ใช้บางตัว

00:13.110 --> 00:15.930
เป็นต้น

00:15.930 --> 00:20.930
ตัวอย่างเช่น หากเราเปิดใช้ตัวเลือกทั้งสามนี้ ตัวเลือกนี้จะช่วยคุณด้วยคำสั่ง

00:21.711 --> 00:26.270
Switch ซึ่งคุณอาจลืมคำหลัก break

00:26.270 --> 00:28.880
แต่ถ้าเราเปิดใช้สามตัวเลือกนี้ สิ่งที่

00:28.880 --> 00:31.760
TypeScript จะบ่นก็คือ ตัวอย่างเช่น ถ้าคุณมีตัวแปรชื่อผู้ใช้ที่นี่

00:31.760 --> 00:33.600
อยู่ในฟังก์ชันนี้ในเครื่อง

00:33.600 --> 00:36.730
และคุณไม่ได้ใช้มัน

00:36.730 --> 00:39.490
คุณเห็นไหมว่ามันมีเส้นหยักสีเหลือง เพราะจริงๆ

00:39.490 --> 00:41.500
แล้วมันไม่ใช่ข้อผิดพลาด

00:41.500 --> 00:43.179
เป็นเหมือนคำเตือนหรือคำใบ้มากกว่า

00:43.179 --> 00:45.643
ดังนั้น ถ้าฉันคอมไพล์ที่นี่ คุณจะเห็นตอนนี้ อย่างไรก็ตาม

00:47.750 --> 00:49.500
ฉันได้รับข้อผิดพลาดเนื่องจาก TypeScript

00:49.500 --> 00:51.900
รู้แต่ข้อผิดพลาดเท่านั้น

00:51.900 --> 00:54.140
และที่นั่นเราเห็นว่าชื่อผู้ใช้ถูกประกาศ

00:54.140 --> 01:00.550
แต่ค่าของมันจะไม่ถูกอ่าน เนื่องจากเราแน่ใจว่าเราไม่ต้องการตัวแปรโลคัลที่ไม่ได้ใช้

01:00.550 --> 01:02.483
อนุญาตให้ใช้ตัวแปรส่วนกลางที่ไม่ได้ใช้

01:03.440 --> 01:06.340
ดังนั้นหากฉันมี appId ที่นี่ เพราะ TypeScript

01:06.340 --> 01:13.870
ไม่สามารถรู้ได้ว่าคุณอาจต้องการค่าที่กำหนดทั่วโลกนั้นในไฟล์สคริปต์อื่นหรือไม่

01:13.870 --> 01:14.980
ดังนั้นจึงได้รับอนุญาต

01:14.980 --> 01:17.280
แต่ในฟังก์ชันที่ไม่มีที่อื่นที่คุณต้องการ

01:17.280 --> 01:22.020
TypeScript จะบ่นทันทีหากคุณมีรหัสที่ไม่ได้ใช้

01:22.020 --> 01:23.540
และนั่นเป็นความคิดที่ดีโดยทั่วไป

01:23.540 --> 01:26.021
ให้คุณตัดรหัสที่ไม่ได้ใช้ดังกล่าวออก

01:26.021 --> 01:28.510
เหมือนกันสำหรับพารามิเตอร์ที่ไม่ได้ใช้

01:28.510 --> 01:31.350
ถ้าคุณจะใช้ H ที่นี่ ซึ่งแน่นอนว่าตอนนี้การผูกขาด

01:31.350 --> 01:33.050
แต่แม้ว่าเราจะผ่านสิ่งนี้ในงานนี้

01:33.050 --> 01:35.970
แต่ตอนนี้ อีกครั้ง TypeScript ดังนั้น ID

01:35.970 --> 01:44.293
จึงบอกเราว่าสิ่งนี้ไม่ได้ใช้และสิ่งนี้ ดังนั้นบางที คุณควรลบออกหรือเริ่มใช้

01:45.238 --> 01:48.173
นั่นคือ noUnusedParameters

01:48.173 --> 01:57.130
และ noImplicitReturns หมายความว่าเราจะได้รับข้อผิดพลาดหากเรามีฟังก์ชันที่บางครั้งส่งคืนบางสิ่งและบางครั้งก็ไม่ส่งคืน

01:57.130 --> 02:02.940
สมมติว่าเรามีฟังก์ชันอื่น บวก โดยที่เราได้เลขสองตัว

02:02.940 --> 02:05.906
จำนวนและ n2 เป็นตัวเลข

02:05.906 --> 02:10.906
และแน่นอน เราคืนค่า n1 บวก n2 ได้

02:14.030 --> 02:15.710
แต่สมมุติว่าเรากำลังตรวจสอบว่า

02:15.710 --> 02:18.518
n1 บวก n2 มากกว่า 0 ด้วยเหตุผลบางประการหรือไม่

02:18.518 --> 02:23.700
เพราะเราต้องการคืนค่าก็ต่อเมื่อเราได้ผลลัพธ์มากกว่าศูนย์เท่านั้น

02:23.700 --> 02:25.040
จากนั้นเราต้องการค่าที่ส่งคืน

02:25.040 --> 02:26.940
มิฉะนั้นเราไม่ต้องการคืนอะไร

02:26.940 --> 02:28.170
เราไม่ต้องการผลตอบแทน

02:28.170 --> 02:30.550
ถ้าอย่างนั้นเราได้รับคำเตือนเนื่องจากการตั้งค่าพิเศษนั้นด้วย

02:30.550 --> 02:32.598
noImplicitReturns

02:32.598 --> 02:36.401
TypeScript ตรวจพบว่าไม่ใช่ทุกสาขาในฟังก์ชันนี้ที่นำไปสู่คำสั่ง

02:36.401 --> 02:38.760
return และเนื่องจากการตั้งค่าของเรา

02:38.760 --> 02:40.650
จึงไม่อนุญาต

02:40.650 --> 02:45.790
อย่างน้อยเราต้องจงใจไม่ส่งคืนสิ่งใดที่นี่โดยเพิ่มคำหลักส่งคืน

02:45.790 --> 02:48.260
ไม่อนุญาตให้ละเว้นที่นี่

02:48.260 --> 02:49.730
ได้รับอนุญาตหากคุณมีฟังก์ชันที่ไม่ส่งคืนสิ่งใดๆ

02:49.730 --> 02:59.933
โดยไม่มีสาขา แต่ถ้าคุณมีอย่างน้อยหนึ่งกรณีที่ฟังก์ชันของคุณส่งคืนบางสิ่ง คุณต้องแน่ใจว่าคุณได้ส่งคืนบางสิ่งในทุกกรณี

03:01.830 --> 03:04.240
และด้วยเหตุนี้ เราจึงใกล้ถึงจุดสิ้นสุดของการฝึกปฏิบัติการกำหนดค่านี้

03:04.240 --> 03:06.526
เราสามารถเพิกเฉยต่อ moduleResolution ได้ที่นี่

03:06.526 --> 03:08.933
ตัวเลือกทั้งหมดเหล่านี้ค่อนข้างล้ำหน้า

03:08.933 --> 03:10.830
ซึ่งไม่สำคัญสำหรับเราที่นี่

03:10.830 --> 03:13.510
ไม่สำคัญสำหรับคุณในหลายๆ โครงการ

03:13.510 --> 03:18.180
ตัวเลือกแผนที่แหล่งที่มาช่วยให้คุณสามารถปรับแต่งแผนที่แหล่งที่มาเหล่านี้ที่เราได้ดูไปก่อนหน้านี้

03:18.180 --> 03:21.440
ดังนั้นไฟล์การแปลเหล่านี้จาก JavaScript เป็น TypeScript

03:21.440 --> 03:23.720
โดยปกติแล้ว การตั้งค่าเริ่มต้นควรจะใช้ได้ที่นี่

03:23.720 --> 03:27.010
ดังนั้นหากคุณไม่รู้ว่าคุณกำลังเปลี่ยนแปลงอะไรและทำไมคุณถึงทำการเปลี่ยนแปลง

03:27.010 --> 03:29.470
คุณก็ไม่จำเป็นต้องเปลี่ยนแปลงอะไรที่นี่

03:29.470 --> 03:31.512
และเกี่ยวกับตัวเลือกการทดลองเหล่านี้

03:31.512 --> 03:34.380
ฉันจะดูที่ตัวเลือกเหล่านี้ โดยเฉพาะที่

03:34.380 --> 03:38.910
ExperimentalDecorators ในภายหลังในโมดูลการตกแต่ง

03:38.910 --> 03:41.810
ซึ่งโดยทั่วไปจะทำให้ใช้ฟีเจอร์บางอย่างใน

03:41.810 --> 03:45.060
TypeScript ซึ่งเป็นช่วงทดลองจริง ๆ ซึ่งยังไม่แน่ใจว่าจะลงเอยด้วย

03:45.060 --> 03:52.940
JavaScript ในอนาคตหรือไม่ และคุณยังอาจอยากใช้งานฟีเจอร์เหล่านี้อยู่หรือไม่

03:52.940 --> 03:57.070
จากนั้นคุณต้องบอก TypeScript อย่างชัดเจนว่าคุณต้องการทำงานกับคุณสมบัติเหล่านี้

03:57.070 --> 03:59.390
และคุณสามารถทำได้ด้วยการกำหนดค่านั้น

03:59.390 --> 04:01.880
แต่อีกครั้งฉันจะกลับมาที่

04:01.880 --> 04:05.870
ดังนั้นตอนนี้ เราจะแนะนำไฟล์นี้ ตัวเลือกมากมายที่คุณสามารถตั้งค่าได้

04:05.870 --> 04:08.222
และเมื่อ TypeScript เติบโตขึ้น คุณมักจะได้รับตัวเลือกมากขึ้นเรื่อย

04:08.222 --> 04:20.343
ๆ ที่นี่ ดังนั้นเอกสารอย่างเป็นทางการจึงเป็นสถานที่ที่ดีในการเจาะลึกมากขึ้น และเพื่อให้แน่ใจว่าคุณจะไม่พลาดตัวเลือกที่น่าสนใจที่อาจช่วยคุณในโครงการของคุณ
