WEBVTT

00:02.210 --> 00:04.400
Portanto, agora, isso é o básico sobre herança.

00:04.400 --> 00:06.900
Também podemos sobrepor métodos

00:06.900 --> 00:09.810
ou propriedades de nossa classe base.

00:09.810 --> 00:13.350
Portanto, digamos na contabilidade, eu quero adicionar meu próprio método

00:13.350 --> 00:15.020
de adição de funcionários.

00:15.020 --> 00:16.200
Nós podemos fazer isso.

00:16.200 --> 00:18.500
Podemos acrescentar nosso próprio método

00:18.500 --> 00:20.120
aqui, e obter o nome aqui.

00:20.120 --> 00:21.330
Digamos.

00:21.330 --> 00:22.550
E agora, aqui, eu quero ter uma lógica

00:22.550 --> 00:23.860
diferente para acrescentar isso.

00:23.860 --> 00:27.610
Um extra se cheque ou um se cheque se nome=Max, bem, então

00:27.610 --> 00:29.410
eu quero voltar, e não adicionar

00:29.410 --> 00:31.930
Max como funcionário, porque Max é totalmente

00:31.930 --> 00:34.770
inadequado para isso.

00:34.770 --> 00:36.360
Caso contrário, se o nome não for Max,

00:36.360 --> 00:38.050
quero acrescentar o funcionário.

00:38.050 --> 00:40.420
Agora, no entanto, enfrentamos outro problema.

00:40.420 --> 00:44.520
Se eu tentar acrescentar estes dois funcionários, vemos que os funcionários

00:44.520 --> 00:47.500
não são uma propriedade conhecida.

00:47.500 --> 00:50.510
A razão para isso é que os funcionários são privados.

00:50.510 --> 00:51.890
Agora, isso é importante.

00:51.890 --> 00:54.860
As propriedades privadas são realmente acessíveis

00:54.860 --> 00:57.360
apenas de dentro da classe em que estão definidas,

00:57.360 --> 01:00.670
não as classes que herdam dessa classe.

01:00.670 --> 01:03.530
Portanto, os funcionários estão disponíveis dentro do departamento,

01:03.530 --> 01:06.100
mas não em classes baseadas no departamento.

01:06.100 --> 01:09.040
Portanto, o departamento de contabilidade não tem acesso

01:09.040 --> 01:11.320
direto às propriedades dos funcionários.

01:11.320 --> 01:15.930
Se quisermos conceder esse acesso, e ainda assim garantir que não seja

01:15.930 --> 01:19.840
uma propriedade que possa ser mudada do exterior, podemos

01:19.840 --> 01:22.080
mudá-la para protegida.

01:22.080 --> 01:25.760
Protegido é como privado, mas ao contrário do privado,

01:25.760 --> 01:28.280
agora não está disponível apenas nesta

01:28.280 --> 01:32.040
classe, mas também em qualquer classe que a estenda.

01:32.040 --> 01:35.130
Assim, agora podemos ter acesso aos funcionários de dentro

01:35.130 --> 01:37.740
de nosso departamento de contabilidade.

01:37.740 --> 01:41.377
Aqui, agora posso adicionar um funcionário se não for o Max.

01:41.377 --> 01:43.980
Portanto, agora, se eu for lá embaixo,

01:43.980 --> 01:45.680
e na minha contabilidade,

01:45.680 --> 01:49.240
quero acrescentar um funcionário com o nome Max.

01:49.240 --> 01:50.480
Isto não deve funcionar.

01:50.480 --> 01:52.790
Se eu tentar acrescentar Manu, isto deve funcionar.

01:52.790 --> 01:57.110
Portanto, se agora salvarmos isso, e também imprimirmos aqui as informações

01:57.110 --> 01:59.196
dos funcionários, e depois salvarmos

01:59.196 --> 02:00.840
isso, devemos ver que, de fato,

02:00.840 --> 02:03.120
temos um funcionário lá, que é Manu, por causa

02:03.120 --> 02:06.620
de minha própria lógica de método contábil para AddEmployee,

02:06.620 --> 02:08.590
Max não foi adicionado.

02:08.590 --> 02:10.017
Portanto, a chave aqui

02:10.017 --> 02:14.010
é que você A) pode anular os métodos da sua classe base.

02:14.010 --> 02:16.690
Você pode adicionar sua própria implementação, e então

02:16.690 --> 02:18.690
essa implementação é utilizada, ao invés

02:18.690 --> 02:21.023
da implementação da classe base.

02:21.023 --> 02:25.130
E B) você também tem que controlar o acesso às

02:25.130 --> 02:28.100
propriedades com proteção.

02:28.100 --> 02:29.690
Porque se você usa privado,

02:29.690 --> 02:32.120
você está realmente restrito a esta classe,

02:32.120 --> 02:36.400
enquanto protegido ainda a torna inacessível do exterior, mas a torna

02:36.400 --> 02:39.270
acessível de dentro das classes que estendem

02:39.270 --> 02:41.123
a classe base.
