WEBVTT

00:02.340 --> 00:05.740
Sunucu: Ve bu küçük demo projesi için bu kadar.

00:05.740 --> 00:08.590
Elbette her zaman daha fazlasını yapabilirsiniz,

00:08.590 --> 00:12.070
ancak burada bu kurs boyunca öğrendiğiniz bir dizi güzel

00:12.070 --> 00:14.950
özelliği zaten kullanıyoruz.

00:14.950 --> 00:18.220
Ve bu projeyle, hangi özelliği ne zaman kullanacağınız, dekoratörler

00:18.220 --> 00:22.610
ve arayüzler gibi belirli özelliklerin neden var olduğu, bize nasıl yardımcı olabilecekleri

00:22.610 --> 00:25.968
ve tip güvenli, ölçeklenebilir kodu nasıl yazabileceğimiz

00:25.968 --> 00:30.770
konusunda daha iyi bir fikre sahip olacağınızı umuyoruz.

00:30.770 --> 00:33.735
Şimdi, bu projeyi geliştirmekten, kendi başınıza daha fazla özellik

00:33.735 --> 00:35.826
eklemekten, orada neleri değiştirebileceğinizi

00:35.826 --> 00:38.110
keşfetmekten ve sadece typescript ile çalışma pratiği

00:38.110 --> 00:40.870
yapmaktan kesinlikle çekinmeyin.

00:40.870 --> 00:44.344
Mevcut durumdan memnunum ve bir sonraki modülde artık

00:44.344 --> 00:47.456
oldukça bariz bir sorunu ele almak istiyorum.

00:47.456 --> 00:51.150
Burada çok büyük bir dosya var.

00:51.150 --> 00:55.030
Dolayısıyla, bunu birden fazla dosyaya bölmek kod tabanımızı yönetmemize

00:55.030 --> 00:56.953
gerçekten yardımcı olacaktır.

00:56.953 --> 01:00.090
Çünkü şu anda bir yerde bir değişiklik yapmak istediğimizde,

01:00.090 --> 01:02.710
her zaman tüm dosyayı kaydırmamız ve değişiklik yapmak

01:02.710 --> 01:05.340
istediğimiz yeri bulmamız gerekiyor.

01:05.340 --> 01:07.000
Bu ideal değil.

01:07.000 --> 01:09.030
Zaten oldukça fazla kod var, daha

01:09.030 --> 01:12.770
da büyük projelerde tamamen yönetilemez olurdu.

01:12.770 --> 01:14.780
Bu nedenle, bir sonraki modülde kodumuzu

01:14.780 --> 01:17.750
birden fazla dosyaya bölmemize yardımcı olan özellik

01:17.750 --> 01:20.423
türlerine bir göz atacağız.
