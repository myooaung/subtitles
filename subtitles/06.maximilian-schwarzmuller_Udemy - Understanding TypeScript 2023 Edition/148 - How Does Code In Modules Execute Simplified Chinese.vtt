WEBVTT

00:02.560 --> 00:03.680
教师：现在,

00:03.680 --> 00:06.770
除了这些不同的导入和导出语法,

00:06.770 --> 00:12.583
这是很好的了解, 还有一件事, 你必须了解和知道｡

00:13.430 --> 00:16.900
在项目状态中, 我们不只是导出一个类或接口,

00:16.900 --> 00:23.810
就像我们在所有其他文件中所做的那样, 我们实际上是在导出一个恒定的项目状态｡

00:23.810 --> 00:28.660
现在, 问题是, 我们将这个常量导入到多个其他文件中｡

00:28.660 --> 00:35.480
我们正在项目列表中导入它｡  ts文件, 我们也在项目输入中导入它｡

00:35.480 --> 00:35.480
ts文件中｡ 

00:35.480 --> 00:38.490
因此, 我们多次从同一文件导入｡ 

00:38.490 --> 00:41.560
问题是这个文件中的代码, 也就是这个常量的创建,

00:41.560 --> 00:48.920
是运行一次还是两次, 或者多久运行一次？

00:48.920 --> 00:53.240
每个import语句一次还是为整个应用程序一次？

00:53.240 --> 00:57.980
好吧, 当文件第一次被任何其他文件导入时,

00:57.980 --> 01:01.000
它会运行一次｡

01:01.000 --> 01:05.280
如果另一个文件随后再次导入同一文件,

01:05.280 --> 01:07.320
则不会再次运行｡

01:07.320 --> 01:11.210
我们还可以通过在此处添加控制台日志语句来验证这一点｡

01:11.210 --> 01:12.370
跑步｡ 

01:12.370 --> 01:15.893
我们将看到, 即使我们正在导入项目状态,

01:15.893 --> 01:22.360
它也只会被打印一次｡ 在项目列表中｡

01:22.360 --> 01:22.360
ts文件和项目输入中｡

01:22.360 --> 01:24.620
ts文件中｡ 

01:24.620 --> 01:27.740
不过, 这只会打印到控制台一次｡ 

01:27.740 --> 01:28.610
你看这里｡ 

01:28.610 --> 01:29.443
跑步｡ 

01:29.443 --> 01:32.653
无论我们做什么, 它都不会被打印第二次｡

01:33.720 --> 01:36.360
所以这只运行一次｡ 

01:36.360 --> 01:38.620
这是它的行为方式, 这只是你必须知道的事情,

01:38.620 --> 01:41.723
这样你才能适当地规划你的应用程序｡
