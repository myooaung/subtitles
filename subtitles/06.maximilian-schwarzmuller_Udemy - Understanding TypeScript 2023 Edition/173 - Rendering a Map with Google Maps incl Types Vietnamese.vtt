WEBVTT

00:02.120 --> 00:05.300
Người đàn ông: Vậy làm thế nào chúng ta có thể xuất tọa độ trên bản đồ bây giờ?

00:05.300 --> 00:08.180
Đối với điều đó một lần nữa, chúng tôi sẽ sử dụng Google API.

00:08.180 --> 00:10.690
Nếu bạn tìm kiếm Google JavaScript Maps

00:10.690 --> 00:13.810
hoặc Google JS Maps, bạn sẽ tìm thấy các tài liệu chính

00:13.810 --> 00:16.970
thức cho Google JavaScript Google Maps API.

00:16.970 --> 00:19.660
Và tại đây, bạn sẽ tìm hiểu cách sử dụng Google Maps trong

00:19.660 --> 00:22.020
ứng dụng web của mình để hiển thị bản đồ.

00:22.020 --> 00:24.720
Và nó thực sự đơn giản và dễ hiểu.

00:24.720 --> 00:27.280
Trước hết, chúng tôi cần thêm tập lệnh này vào

00:27.280 --> 00:31.720
đây, tập lệnh này sẽ thêm SDK Google Maps này vào ứng dụng của chúng tôi.

00:31.720 --> 00:34.220
Vì vậy, chỉ cần lấy tập lệnh đó và thêm

00:34.220 --> 00:38.210
nó vào tệp html chỉ mục của bạn, phía trên tập lệnh của bạn.

00:38.210 --> 00:40.670
Quan trọng bây giờ, chúng tôi không cài đặt NPM

00:40.670 --> 00:42.920
này, vì nó không được xuất bản lên NPM, do đó

00:42.920 --> 00:45.900
chúng tôi sử dụng liên kết CDN này, liên kết này lấy tập lệnh,

00:45.900 --> 00:48.140
trực tiếp từ máy chủ của Google.

00:48.140 --> 00:51.560
Và ở đây chúng ta cần thiết lập API_KEY.

00:51.560 --> 00:54.390
Tất nhiên, đó là API_KEY mà chúng tôi đã có

00:54.390 --> 00:57.430
ở đây tệp bản thảo, vì vậy chúng tôi chỉ cần sao

00:57.430 --> 01:02.170
chép tệp đó vào chỉ mục html và thay thế YOUR_API_KEY bằng tệp đó.

01:02.170 --> 01:06.120
Và cuối cùng, hãy loại bỏ điều "&amp;callback=initMap", điều

01:06.120 --> 01:07.150
này sẽ kích hoạt

01:07.150 --> 01:10.240
một chức năng ngay khi bản đồ này được tải hoặc

01:10.240 --> 01:13.430
khi SDK này được tải và đó không phải là điều tôi

01:13.430 --> 01:14.843
muốn ở đây.

01:15.840 --> 01:19.760
Vì vậy, với điều đó, chúng tôi đang tải SDK này và bây giờ

01:19.760 --> 01:22.820
chúng tôi có thể sử dụng nó và đây là nơi chúng

01:22.820 --> 01:24.250
tôi sẽ gặp sự cố.

01:24.250 --> 01:26.210
Tôi muốn sử dụng nó để hiển thị bản đồ

01:26.210 --> 01:28.710
và việc hiển thị bản đồ thực sự rất dễ dàng.

01:28.710 --> 01:31.070
Trong các tài liệu chính thức, chúng tôi thấy rằng cuối cùng chúng tôi

01:31.070 --> 01:33.870
phải khởi tạo google này. bản đồ. Hàm tạo bản

01:33.870 --> 01:36.870
đồ, chuyển một trung tâm cho nó,

01:36.870 --> 01:38.960
về cơ bản là ...

01:38.960 --> 01:41.720
Cặp tọa độ này chúng tôi lấy từ phía sau và

01:41.720 --> 01:43.250
thêm mức thu phóng.

01:43.250 --> 01:45.820
Vì vậy, chúng tôi chỉ có thể sao chép cái

01:45.820 --> 01:48.710
này, và sau đó ở đây khi chúng tôi có tọa độ, thực

01:48.710 --> 01:50.010
thi mã này và có thể lưu

01:50.010 --> 01:53.750
trữ bản đồ ở đây trong một hằng số có tên "Map. Nhưng tất nhiên chúng tôi nhận được một lỗi ở đây.

01:53.750 --> 01:55.117
"Không thể tìm thấy tên

01:55.117 --> 01:57.600
google" và điều đó hợp lý, điều này sẽ không

01:57.600 --> 02:01.320
khả dụng trên toàn cầu, nhưng TypeScript không biết điều đó.

02:01.320 --> 02:03.380
Nó sẽ có sẵn trên toàn cầu, vì SDK

02:03.380 --> 02:06.300
JavaScript này mà chúng tôi đang nhập.

02:06.300 --> 02:08.343
Nhưng tất nhiên Typescript không biết điều này.

02:09.390 --> 02:12.270
Bạn sẽ tìm hiểu những gì bạn có thể làm

02:12.270 --> 02:14.200
ở đó, tất nhiên bạn có thể

02:14.200 --> 02:19.200
sử dụng "khai báo var google" và đặt tùy chọn này thành bất kỳ.

02:19.990 --> 02:21.020
Với điều đó, bạn đang nói với TypeScript,

02:21.020 --> 02:22.887
"Không sao đâu, cái này sẽ tồn tại, đừng lo lắng. Chúng tôi có thể làm điều đó và lỗi sẽ biến mất.

02:22.887 --> 02:26.480
Bây giờ chúng ta cũng có thể sử dụng tọa độ của mình ở đây,

02:26.480 --> 02:29.060
thay vì tọa độ được mã hóa cứng và nếu chúng

02:29.060 --> 02:31.370
ta cũng muốn hiển thị điểm đánh dấu,

02:31.370 --> 02:33.480
điều đó cũng có thể.

02:33.480 --> 02:36.430
Trong các tài liệu chính thức, chỉ cần nhấp vào "Thêm

02:36.430 --> 02:37.930
bản đồ bằng điểm đánh dấu",

02:37.930 --> 02:39.517
chúng tôi biết rằng việc thêm

02:39.517 --> 02:41.520
điểm đánh dấu rất đơn giản, chúng

02:41.520 --> 02:44.600
tôi chỉ cần sử dụng bản đồ đã tạo và tạo điểm đánh dấu bằng

02:44.600 --> 02:47.223
lệnh này và chỉ vào bản đồ này.

02:49.040 --> 02:50.950
Vì vậy, chúng tôi sẽ chỉ sao chép đoạn

02:50.950 --> 02:52.980
mã này ở đây và quay lại mã của chúng tôi,

02:52.980 --> 02:56.130
sau khi chúng tôi tạo bản đồ, tôi tạo điểm đánh dấu của mình như

02:56.130 --> 02:59.160
thế này và vị trí ở đây một lần nữa là tọa độ của tôi.

02:59.160 --> 03:01.160
Vì vậy, điều này bây giờ sẽ hiển

03:01.160 --> 03:04.173
thị bản đồ và đặt điểm đánh dấu trên đó.

03:05.040 --> 03:06.600
Điều duy nhất còn lại là, chúng

03:06.600 --> 03:08.580
tôi cần đảm bảo rằng bản đồ này được

03:08.580 --> 03:10.350
hiển thị ở đúng nơi.

03:10.350 --> 03:12.350
Theo mặc định, nó tìm kiếm phần tử có chữ I. Đ. "bản đồ" và đó là những gì

03:12.350 --> 03:14.010
chúng ta có ở đây.

03:14.010 --> 03:16.670
Nhưng nếu bạn chọn một cái tôi khác. Đ. ở đây, đảm bảo điều

03:16.670 --> 03:18.720
chỉnh điều này trong mã bản thảo của bạn.

03:18.720 --> 03:20.470
Cùng với

03:20.470 --> 03:23.473
đó, nếu chúng tôi lưu cái này, nó sẽ biên dịch

03:24.610 --> 03:26.890
mà không có lỗi và bây giờ nếu tôi

03:26.890 --> 03:30.640
nhập địa chỉ vào đây, nó sẽ hiển thị cái này.

03:30.640 --> 03:33.450
Vì vậy, điều này đang hoạt động và chúng tôi có thể điều chỉnh mức

03:33.450 --> 03:35.320
thu phóng ở đây, để phóng to hơn một chút, ví

03:35.320 --> 03:38.650
dụ: thay đổi nó thành 16, và bây giờ nếu chúng tôi thử điều này, chúng tôi có

03:38.650 --> 03:40.370
thể thấy nó rõ ràng hơn một chút.

03:40.370 --> 03:42.910
Nhưng nó đang hoạt động, và đó là những gì chúng ta có thể nói.

03:42.910 --> 03:45.640
Chúng ta có thể di chuyển xung quanh và sử dụng bản đồ này.

03:45.640 --> 03:47.480
Điều này là tốt, nhưng nó không phải là tối ưu.

03:47.480 --> 03:50.420
Tất nhiên nó hoạt động, nhờ có "khai báo var google",

03:50.420 --> 03:53.340
chúng tôi không nhận được bất kỳ lỗi nào.

03:53.340 --> 03:56.760
Nhưng chúng tôi cũng không nhận được bất kỳ loại hỗ trợ nào.

03:56.760 --> 03:58.810
NẾU tôi đưa ra một lỗi,

03:58.810 --> 04:01.550
ví dụ nếu tôi đề cập đến ". bản đồ" thay vì ". maps", nó sẽ biên dịch mà không gặp sự cố và sau

04:01.550 --> 04:02.960
đó nó chỉ gặp sự cố trong

04:02.960 --> 04:06.730
quá trình sản xuất.

04:06.730 --> 04:08.860
Nếu tôi cố gắng hiển thị bản đồ.

04:08.860 --> 04:11.280
Bây giờ tôi gặp lỗi ở đây, do trình xử lý lỗi của chúng tôi phát hiện.

04:11.280 --> 04:13.150
Vì vậy, đây tất nhiên không phải là những gì chúng tôi muốn.

04:13.150 --> 04:16.493
Chúng tôi muốn hỗ trợ loại, chúng tôi muốn xử lý các lỗi kết xuất như thế này, trong quá

04:17.470 --> 04:19.770
trình phát triển chứ không phải trong thời gian chạy.

04:19.770 --> 04:22.880
Vậy làm cách nào chúng tôi có thể đảm bảo bản đánh máy biết Google Maps?

04:22.880 --> 04:27.380
Các loại để giải cứu.

04:27.380 --> 04:31.080
Nếu bạn tìm kiếm "loại bản đồ google", bạn sẽ tìm thấy nhiều gói

04:31.080 --> 04:32.470
khác nhau, bổ sung thêm

04:32.470 --> 04:34.160
loại cho Google Maps.

04:34.160 --> 04:37.350
Bây giờ chúng tôi không cài đặt gói Google Maps thông qua NPM,

04:37.350 --> 04:38.800
nhưng chúng tôi vẫn có thể cài

04:38.800 --> 04:41.050
đặt các loại cho gói đó thông qua NPM.

04:41.050 --> 04:44.130
Và ở đây tôi sẽ chọn gói đầu tiên này và chỉ cần cài đặt

04:44.130 --> 04:46.160
gói đó vào dự án của chúng ta.

04:46.160 --> 04:48.790
Vì vậy, hãy quay lại, máy chủ phát triển

04:48.790 --> 04:51.560
nhanh và chạy "npm install --save-dev

04:51.560 --> 04:54.030
"@types/googlemaps," một từ.

04:54.030 --> 04:56.400
Đó là tên của gói này.

04:58.613 --> 05:01.560
Điều này bây giờ sẽ cài đặt các loại toàn cầu cho gói này.

05:01.560 --> 05:03.303
Vì vậy, bây giờ nếu tôi khởi động

05:04.200 --> 05:08.410
lại điều này với NPM start, hãy xem liệu chúng ta có tình hình tốt hơn không.

05:08.410 --> 05:11.500
Nếu tôi xóa cái thứ "khai báo var"

05:11.500 --> 05:15.180
này ở đây, hoặc tôi bình luận nó ra.

05:15.180 --> 05:18.090
Nó vẫn biên dịch, bây giờ thứ google maps ở đây đã được

05:18.090 --> 05:19.940
phát hiện và nếu tôi cố truy cập ". map" ở đây, tôi gặp lỗi, tôi cũng

05:19.940 --> 05:23.290
nhận được tính năng tự động hoàn thành và hiển thị,

05:23.290 --> 05:27.010
"Có, có vấn đề về bản đồ. Nó cũng cho tôi biết rằng hàm tạo

05:27.010 --> 05:29.880
bản đồ này, cần một "Div" hoặc "Phần tử" trong

05:29.880 --> 05:32.410
đó nó sẽ hiển thị bản đồ làm đối số đầu tiên,

05:32.410 --> 05:35.100
sau đó là một số tùy chọn cho bản đồ.

05:35.100 --> 05:38.660
Vì vậy, điều này hiện đang làm việc ở đây, như nó nên.

05:38.660 --> 05:40.270
Và đây tất nhiên là một bước tiến

05:40.270 --> 05:42.850
tuyệt vời, bởi vì bây giờ chúng tôi có ứng dụng đang

05:42.850 --> 05:45.170
hoạt động và nó cũng đã hoạt động trước đây.

05:45.170 --> 05:47.600
Nhưng bây giờ nó cũng hoạt động

05:47.600 --> 05:51.170
với các loại và với sự hỗ trợ loại thích hợp.

05:51.170 --> 05:53.490
Và nhân viên này là một phương pháp tuyệt vời khác,

05:53.490 --> 05:56.050
về cách bạn xây dựng các ứng dụng với tập lệnh kiểu và

05:56.050 --> 05:58.500
sử dụng một số loại tính năng nhất định, nhưng nó

05:58.500 --> 06:00.690
đặc biệt là một phương pháp tuyệt vời về cách

06:00.690 --> 06:03.700
bạn có thể làm việc với các thư viện của bên thứ ba.

06:03.700 --> 06:06.250
Một số, như "axios" mang các loại của riêng họ.

06:06.250 --> 06:08.470
Những người khác, thậm chí

06:08.470 --> 06:11.540
không được cài đặt với NPM, nhưng bạn

06:11.540 --> 06:15.421
có thể thêm các loại bằng gói loại thích hợp.

06:15.421 --> 06:18.810
Tôi hy vọng mô-đun này hữu ích để hiểu điều này và cho tất

06:18.810 --> 06:21.320
cả các dự án trong tương lai mà bạn có thể

06:21.320 --> 06:23.230
đang thực hiện, nơi mà bạn rất có

06:23.230 --> 06:25.620
thể cũng sẽ làm việc, với một số thư viện

06:25.620 --> 06:27.040
của bên thứ ba.
