WEBVTT

00:02.300 --> 00:03.830
ผู้สอน: เราทำงานกับแผนกของเราค่อนข้างน้อยที่นี่

00:03.830 --> 00:07.350
และฉันก็สร้างแผนกบัญชีขึ้นมา

00:07.350 --> 00:09.610
ตอนนี้สำหรับแอปพลิเคชันที่เรากำลังสร้าง

00:09.610 --> 00:16.660
เราอาจต้องการแผนกต่างๆ แน่นอน แต่เราอาจต้องการข้อมูลเพิ่มเติมสำหรับแผนกเฉพาะประเภท

00:16.660 --> 00:18.830
เราอาจมีแผนกไอที ซึ่งมี

00:18.830 --> 00:22.680
ID ซึ่งมีชื่อ มีพนักงาน แต่มีผู้ดูแลระบบด้วย

00:22.680 --> 00:24.900
บางอย่างที่มีเฉพาะแผนก

00:24.900 --> 00:28.180
IT เท่านั้นที่มี เป็นต้น

00:28.180 --> 00:30.340
เราอาจมีแผนกบัญชีซึ่งอาจมีรหัสประจำตัว

00:30.340 --> 00:37.470
ชื่อ และพนักงาน แต่อาจมีรายงานด้วย

00:37.470 --> 00:41.030
อาร์เรย์ของรายงานที่สร้างขึ้น และอื่นๆ

00:41.030 --> 00:44.541
ดังนั้นคุณอาจมีคุณสมบัติพื้นฐานและวิธีการที่ทุกแผนกควรมี

00:44.541 --> 00:54.660
แต่เราอาจมีรุ่นพิเศษของแผนกเหล่านี้ที่มีคุณสมบัติและวิธีการเฉพาะของตนเองซึ่งแผนกนั้นอาจมีได้

00:54.660 --> 00:58.100
การสืบทอดสามารถช่วยเราดำเนินการบางอย่างเช่นนี้

00:58.100 --> 01:00.010
แล้วเราจะใช้ประโยชน์จากมรดกที่นี่ได้อย่างไร?

01:00.010 --> 01:01.670
เรามีแผนกชั้นเรียนของเรา

01:01.670 --> 01:05.130
ตอนนี้เรามาสร้างแผนกพิเศษเหล่านี้กัน

01:05.130 --> 01:08.483
ที่นี่เราสามารถมีแผนกไอทีระดับหนึ่งได้

01:09.610 --> 01:14.010
และในคลาสนี้ฉันต้องการใช้ชื่อและ ID และพนักงานของแผนกทั่วไป

01:14.010 --> 01:19.537
แต่ฉันต้องการเพิ่มคุณสมบัติของตัวเอง

01:19.537 --> 01:25.970
ตอนนี้เราสามารถสืบทอดคลาสแผนกได้โดยใช้คำหลักขยายที่นี่แล้วคลาสที่เราต้องการสืบทอด

01:25.970 --> 01:27.530
ในกรณีนี้นั่นคือแผนก

01:27.530 --> 01:30.600
ตอนนี้ สิ่งสำคัญคือคุณสามารถสืบทอดจากคลาสเดียวเท่านั้น

01:30.600 --> 01:33.010
ดังนั้นคุณจึงไม่สามารถสืบทอดจากหลายคลาสได้

01:33.010 --> 01:34.660
ถ้าคุณต้องการ

01:34.660 --> 01:38.070
ตอนนี้ ที่นี่ ฉันสืบทอดจากแผนก และผลอย่างหนึ่งคือ

01:38.070 --> 01:40.700
ถ้าตอนนี้ฉันสร้างแผนก IT ที่นี่

01:40.700 --> 01:44.560
ฉันสามารถเรียกมันว่าแบบนี้ได้ ด้วยตัวสร้างประเภทนี้

01:44.560 --> 01:49.400
แม้ว่าคลาสแผนก IT จะว่างเปล่าก็ตาม

01:49.400 --> 01:52.830
ถ้าเราบันทึกสิ่งนั้น เราจะเห็นว่ามันใช้งานได้เหมือนเดิม

01:52.830 --> 01:55.152
เพราะเมื่อเราสืบทอดจากคลาสอื่น

01:55.152 --> 01:59.610
คลาสที่สืบทอดมาโดยอัตโนมัติจะได้รับทุกอย่างที่คลาสพื้นฐาน

01:59.610 --> 02:06.072
แผนกในกรณีนี้มี รวมถึงตัวสร้างของมัน ตราบเท่าที่เราไม่' t เพิ่มตัวสร้างเฉพาะสำหรับคลาสที่สืบทอดนี้

02:06.072 --> 02:20.800
ดังนั้นสำหรับคลาสย่อยนี้ ตัวสร้างคลาสฐาน' ดังนั้นตัวสร้างนี้จะถูกใช้โดยอัตโนมัติเมื่อเราสร้างอินสแตนซ์ของคลาสย่อยของเรา

02:20.800 --> 02:27.562
ในที่สุดเราก็เรียกตัวสร้างคลาสฐานได้อย่างน่าอัศจรรย์ด้วยอาร์กิวเมนต์ที่เรากำลังผ่าน

02:27.562 --> 02:30.350
ตอนนี้เราสามารถเพิ่มตัวสร้างของเราเองได้โดยเพิ่มตัวสร้างที่นี่ในแผนกไอที

02:30.350 --> 02:35.800
และตอนนี้คุณเห็นว่าฉันได้รับข้อผิดพลาด

02:35.800 --> 02:38.580
อย่างแรก แน่นอนว่าตอนนี้เราควรยอมรับข้อมูลที่เราได้รับจากที่นี่

02:38.580 --> 02:44.120
แม้ว่าเราจะโต้แย้งว่าชื่อนี้ไม่ควรเป็นสิ่งที่เราต้องส่งเข้ามาที่นี่

02:44.120 --> 02:46.430
และไม่ควรมีการลงบัญชีด้วย

02:46.430 --> 02:52.563
แต่ในที่นี้ ชื่อของแผนก เนื่องจากเป็นแผนกไอทีจึงสามารถเป็นไอทีได้เสมอ

02:53.700 --> 02:56.910
ฉันยังคงต้องการยอมรับ ID ของฉัน

02:56.910 --> 03:01.130
แต่ตอนนี้ฉันต้องการส่งต่อสิ่งนั้นเช่นเดียวกับชื่อคงที่

03:01.130 --> 03:06.420
IT ไปยังตัวสร้างของแผนก

03:06.420 --> 03:09.240
และเพื่อสิ่งนั้น เรามีคำหลักพิเศษที่เราสามารถทำได้

03:09.240 --> 03:11.120
และในกรณีนี้ เราต้องใช้

03:11.120 --> 03:13.210
และที่สุดยอด

03:13.210 --> 03:18.400
เมื่อใดก็ตามที่คุณเพิ่มตัวสร้างของคุณเองในคลาสที่สืบทอดมาจากคลาสอื่น

03:18.400 --> 03:23.790
คุณต้องเพิ่ม super ในคลาสที่สืบทอด และคุณต้องดำเนินการเหมือนฟังก์ชัน

03:23.790 --> 03:31.300
Super ที่นี่เรียกตัวสร้างของคลาสฐาน ดังนั้นตัวสร้างแผนกในกรณีนี้

03:31.300 --> 03:33.690
และตอนนี้ super อื่นใช้อาร์กิวเมนต์ของตัวสร้างคลาสพาเรนต์

03:33.690 --> 03:37.630
ID และชื่อ

03:37.630 --> 03:41.060
ที่นี่ฉันสามารถส่งต่อ ID ได้ ดังนั้น ID ที่ฉันได้รับจึงถูกส่งไปยัง

03:41.060 --> 03:44.360
super และฉันสามารถฮาร์ดโค้ดค่าสำหรับชื่อได้

03:44.360 --> 03:46.860
เช่น IT

03:46.860 --> 03:52.500
ดังนั้นตอนนี้จะเรียกตัวสร้างของคลาสฐานจากภายในคลาสย่อย

03:52.500 --> 03:58.220
ตอนนี้ สิ่งสำคัญ คุณต้องเรียกใช้ super ก่อนในตัวสร้างของคุณก่อนที่คุณจะทำอะไรกับคีย์เวิร์ด

03:58.220 --> 03:59.700
"นี้"

03:59.700 --> 04:03.860
ดังนั้นหากคุณวางแผนที่จะกำหนดคุณสมบัติพิเศษอื่น ๆ

04:03.860 --> 04:06.670
ที่นี่ คุณต้องทำหลังจากโทรหา super

04:06.670 --> 04:10.346
และฉันต้องการเพิ่มคุณสมบัติพิเศษของตัวเองที่นี่

04:10.346 --> 04:13.528
เราสามารถเพิ่มผู้ดูแลระบบของเราได้ที่นี่

04:13.528 --> 04:17.800
สมมติว่าเป็นส่วนตัวหรือเป็นสาธารณะจริง ๆ แล้ว

04:17.800 --> 04:20.878
สมมติว่าเป็นทรัพย์สินสาธารณะ

04:20.878 --> 04:25.630
ผู้ดูแลระบบ และนั่นควรเป็นอาร์เรย์ของสตริง

04:25.630 --> 04:34.670
ถ้าอย่างนั้นฉันไม่ต้องการส่งต่อสิ่งนี้ไปยังคลาสพื้นฐานของฉันเพราะคลาสแผนกไม่ต้องการข้อมูลผู้ดูแลระบบ

04:34.670 --> 04:44.922
ฉันต้องการเก็บสิ่งนี้ไว้ในทรัพย์สินของแผนกไอที ดังนั้นที่นี่เราจึงสามารถเพิ่มผู้ดูแลระบบเป็นฟิลด์ซึ่งใช้ผู้ดูแลระบบสองสามคนและผู้ดูแลระบบร้านค้าในนั้น

04:44.922 --> 05:00.148
หรือเพราะฉันใช้สาธารณะในที่นี่ ฉันใช้อยู่แล้ว ทางลัดที่จะสร้างพร็อพเพอร์ตี้ที่มีชื่อเดียวกันและข้อมูลที่เราป้อนลงในอาร์กิวเมนต์นี้จะถูกจัดเก็บไว้ในพร็อพเพอร์ตี้ที่สร้างขึ้นโดยอัตโนมัติ

05:00.148 --> 05:03.710
ยังต้องทำให้ชัดเจนว่าต้องเรียก super ก่อน ฉันจะใช้เส้นทางที่ยาวกว่า

05:03.710 --> 05:12.610
เพิ่มผู้ดูแลระบบที่นี่ อย่างนั้น แล้วก็พูดว่า นี่

05:12.610 --> 05:12.610
ผู้ดูแลระบบ = ผู้ดูแลระบบ

05:13.260 --> 05:15.160
ทางลัดจะสั้นลงอีกครั้ง

05:15.160 --> 05:17.830
ฉันทำสิ่งนี้เพื่อแสดงและทำให้ชัดเจนว่าถ้าคุณใช้คำหลัก

05:17.830 --> 05:21.020
"นี้" คุณต้องทำอย่างนั้นหลังจากเรียก

05:21.020 --> 05:24.480
super

05:24.480 --> 05:27.640
และถ้าเราบันทึกมัน ฉันจะได้รับข้อผิดพลาด เพราะฉันไม่ผ่านผู้ดูแลระบบ

05:27.640 --> 05:30.920
ดังนั้น มาทำกันที่นี่

05:30.920 --> 05:33.920
แม็กซ์เป็นผู้ดูแลระบบคนเดียวที่ฉันผ่านที่นี่

05:33.920 --> 05:36.950
ตอนนี้เราสามารถบันทึกและคอมไพล์ได้โดยไม่มีข้อผิดพลาด

05:36.950 --> 05:39.910
และตอนนี้ที่นี่ เราเห็นแผนกของเราที่นี่

05:39.910 --> 05:41.840
ตอนนี้มันมีชื่อว่าไอที

05:41.840 --> 05:44.670
และถ้าเราคอนโซลให้บันทึกทั้งแผนก

05:44.670 --> 05:54.250
และเราอาจสามารถเปลี่ยนชื่อจากบัญชีเป็น IT แล้วจึงคอนโซล

05:54.250 --> 05:54.250
เข้าสู่ระบบไอทีที่นี่

05:54.250 --> 05:57.570
แน่นอนว่าการเปลี่ยนชื่อนั้นเป็นทางเลือก ซึ่งเหมาะสมกว่า

05:57.570 --> 06:00.160
เนื่องจากเรากำลังสร้างแผนกไอทีที่นี่

06:00.160 --> 06:02.510
ตอนนี้ฉันคอนโซลบันทึกทั้งแผนกแล้ว

06:02.510 --> 06:11.110
เราเห็นว่าเรามีผู้ดูแลระบบ แต่เรายังมีพนักงานและทุกอย่างที่ฉันตั้งค่าในชั้นเรียนแผนกของฉันที่นี่

06:12.000 --> 06:13.990
นั่นคือการสืบทอดการทำงาน

06:13.990 --> 06:16.520
คุณลักษณะที่มีประโยชน์มาก เพราะตอนนี้

06:16.520 --> 06:20.770
แน่นอน เราสามารถสร้างแผนกบัญชีของเราที่นี่ด้วยการขยายแผนก

06:20.770 --> 06:27.030
และที่นั่น เราสามารถเพิ่มสิ่งเฉพาะทางบัญชีของเราได้

06:27.030 --> 06:29.540
ดังนั้นเรายังสามารถใช้ตัวสร้างที่นี่

06:29.540 --> 06:36.170
และตอนนี้อาจใช้ทางลัด ยอมรับรายงานสองสามรายการที่นี่ซึ่งอาจเป็นคุณสมบัติส่วนตัว จากนั้นเรามี

06:36.170 --> 06:40.950
addReport ซึ่งรับข้อความ ซึ่งควรเป็นสตริง จากนั้นเราจึงเข้าถึงรายงาน

06:40.950 --> 06:45.360
ที่นี่และพุชข้อความเป็นรายการในรายงาน และบางทีเราอาจมี getReports

06:45.360 --> 06:56.990
ที่นี่ด้วย และที่นั่นเราแค่คอนโซล

06:56.990 --> 06:56.990
บันทึก (นี่. รายงาน)

06:57.563 --> 07:00.860
หรือเราตั้งชื่อว่า printReports ดังนั้นจึงเหมาะสมกว่า

07:00.860 --> 07:04.890
และตอนนี้เราจะมีแผนกเวอร์ชันพิเศษที่มีสองวิธีที่แผนกพื้นฐานไม่มี

07:04.890 --> 07:09.840
และพร็อพเพอร์ตี้พิเศษซึ่งแผนกพื้นฐานไม่มี

07:09.840 --> 07:13.000
เรายังได้รับทุกอย่างจากแผนกพื้นฐาน

07:13.000 --> 07:15.560
ชื่อ ซึ่งฉันจะตั้งค่าการบัญชีที่นี่

07:15.560 --> 07:20.260
และ ID ซึ่งเราจะส่งต่อไปยังตัวสร้างแผนกพื้นฐานด้วย

07:20.260 --> 07:24.770
ด้วยเหตุนี้ หากเราสร้างบัญชีของเราที่นี่ด้วยแผนกบัญชีใหม่

07:24.770 --> 07:31.750
เราสามารถป้อนข้อมูลใน ID ของเราและรายงานของเรา

07:31.750 --> 07:34.340
สมมติว่าเป็นอาร์เรย์ว่างในตอนแรก

07:34.340 --> 07:39.340
จากนั้นเราสามารถเรียกใช้ addReport มีบางอย่างผิดพลาด

07:40.550 --> 07:43.446
ไม่มีทางที่ดีแน่นอน ในการบัญชี

07:43.446 --> 07:52.630
ฉันเดาว่า จากนั้นเรายังสามารถพิมพ์รายงานของเราที่นี่ได้ และด้วยทั้งหมดนี้ มันรวบรวมได้ดี และเราได้รับรายงานที่นี่

07:52.630 --> 07:58.890
และเรา ดูตัวอย่าง แผนกไอทีจะไม่มีรายงานใดๆ

07:58.890 --> 08:05.623
แผนกบัญชีทำเพราะการสืบทอดซึ่งเราสืบทอดคุณสมบัติบางอย่างและเพิ่มคุณสมบัติของเราเอง
