WEBVTT

00:02.260 --> 00:05.180
Eğitmen: Şimdi buradaki arayüze geri dönecek

00:05.180 --> 00:08.230
olursak, soru şu ki buna neden ihtiyacımız var?

00:08.230 --> 00:10.160
Oraya buraya özel bir tür

00:10.160 --> 00:13.420
eklesek de aynı şeyi elde edemez miyiz?

00:13.420 --> 00:15.580
Aradaki fark sadece bir eşittir işareti eklememiz

00:15.580 --> 00:18.470
ve ardından Person türünün şuna benzeyen bir nesne olduğunu

00:18.470 --> 00:19.940
söylememizdir.

00:19.940 --> 00:21.490
Ve gerçekten de, eğer bunu kaydedersek,

00:21.490 --> 00:23.220
hatasız derlenir.

00:23.220 --> 00:26.740
Böylece arayüzümüzü bu tip ile değiştirebiliriz

00:26.740 --> 00:28.490
ve eskisi gibi çalışır.

00:28.490 --> 00:31.290
O zaman neden bir arayüzümüz var?

00:31.290 --> 00:32.277
Bir arayüz ve özel

00:32.277 --> 00:35.310
bir tür tam olarak aynı değildir, ancak çoğu zaman

00:35.310 --> 00:39.260
bunları birbirinin yerine kullanabilirsiniz ve özel bir tür yerine

00:39.260 --> 00:43.520
bir arayüz kullanabilir veya tam tersini yapabilirsiniz.

00:43.520 --> 00:45.720
Bazı farklılıklar da vardır.

00:45.720 --> 00:47.400
Arayüzler sadece bir nesnenin

00:47.400 --> 00:49.070
yapısını tanımlamak için kullanılabilir,

00:49.070 --> 00:51.470
bunun için de tip kullanabilirsiniz, ancak

00:51.470 --> 00:56.800
özel bir tip yerine, kursun başlarında yaptığımız gibi birlik tipleri ve benzeri diğer

00:56.800 --> 01:00.350
şeyleri de saklayabilirsiniz.

01:00.350 --> 01:03.740
Bu, tipin bu nedenle daha esnek olduğu anlamına

01:03.740 --> 01:08.510
gelir, ancak madalyonun diğer yüzü arayüzün daha net olmasıdır.

01:08.510 --> 01:10.870
Bir şeyi arayüz olarak tanımladığınızda,

01:10.870 --> 01:12.900
bir nesnenin yapısını bununla tanımlamak

01:12.900 --> 01:15.580
istediğiniz çok açıktır.

01:15.580 --> 01:18.360
Ve gerçekten de nesne türlerini tanımlamak söz konusu

01:18.360 --> 01:21.630
olduğunda, vahşi doğada daha sık arayüzler görürsünüz.

01:21.630 --> 01:23.800
Ardından, özel türleri görürsünüz.

01:23.800 --> 01:26.410
Şimdi, arayüzlerle yapabileceğiniz ancak

01:26.410 --> 01:27.530
yalnızca özel tiplerle

01:27.530 --> 01:30.090
yapabileceğiniz bir başka şey de bir arayüzü

01:30.090 --> 01:33.360
bir sınıfta uygulayabilmenizdir.

01:33.360 --> 01:34.820
Bununla ne demek istiyoruz?

01:34.820 --> 01:38.360
Genellikle arayüzlerle çalışmanızın nedeni, bir arayüzün

01:38.360 --> 01:40.550
bir sınıfın uygulayabileceği ve

01:40.550 --> 01:43.750
bir sınıfın daha sonra uyması gereken bir sözleşme

01:43.750 --> 01:46.400
olarak kullanılabilmesidir.

01:46.400 --> 01:48.150
Bununla ne demek istiyoruz?

01:48.150 --> 01:52.390
Diyelim ki arayüzümüz isim ve yaşa sahip bir Person

01:52.390 --> 01:53.970
arayüzü değil, bunun

01:53.970 --> 01:57.690
yerine Greetable adını veriyoruz.

01:57.690 --> 01:59.270
Şimdi bu garip bir isim gibi

01:59.270 --> 02:01.090
görünebilir, ancak sonuçta bu sadece

02:01.090 --> 02:03.560
Greetable olarak ele alınması gereken herhangi

02:03.560 --> 02:06.310
bir nesnenin bir adı ve bir greet yöntemi olan bir

02:06.310 --> 02:09.251
nesne olması gerektiğini söyler.

02:09.251 --> 02:10.783
Şimdi, burada şunu söyleyebiliriz,

02:10.783 --> 02:14.630
bu user1 değişkeni bir Greetable nesnesi tutmalıdır ve elbette şimdi

02:14.630 --> 02:16.730
bir hata alıyoruz çünkü sadece name

02:16.730 --> 02:19.930
ve greet'ten daha fazlasına sahibiz.

02:19.930 --> 02:22.000
Ancak bu arayüzü muhtemelen birden

02:22.000 --> 02:25.860
fazla sınıf arasında paylaşmak için kullanabiliriz, bu

02:25.860 --> 02:27.410
arayüze bağlı olan her sınıfın

02:27.410 --> 02:30.860
bir name özelliğine ve bir greet yöntemine sahip olmasını

02:30.860 --> 02:33.410
sağlamalıyız.

02:33.410 --> 02:35.730
Yani burada, artık bir Person sınıfı ekleyebiliriz, arayüzü

02:35.730 --> 02:36.970
yeniden adlandırdığımız için

02:36.970 --> 02:38.540
isim tekrar kullanılabilir.

02:38.540 --> 02:40.790
Ve şimdi, typescript'e söyleyin

02:40.790 --> 02:45.480
ve bu sınıf temel olarak bu arayüze uymalıdır.

02:45.480 --> 02:48.350
Bu arayüzü uygulamalıdır.

02:48.350 --> 02:53.000
Bu arayüz tarafından kurulan sözleşmeyi takip etmelidir.

02:53.000 --> 02:55.260
Bunu, sınıf adından sonra implements anahtar

02:55.260 --> 02:56.930
sözcüğünü ekleyerek yaparız.

02:56.930 --> 02:59.280
Ve sonra, arayüzümüzün adı, Greetable.

03:00.420 --> 03:02.780
Ve birden fazla arayüz uygulayabilirsiniz.

03:02.780 --> 03:04.710
Bu, mirasa kıyasla bir farktır.

03:04.710 --> 03:07.270
Sadece bir sınıftan miras alabilirsiniz,

03:07.270 --> 03:09.370
sadece virgülle ayırarak birden fazla

03:09.370 --> 03:12.730
arayüzü uygulayabilirsiniz, bu nedenle, eğer bir arayüzümüz

03:12.730 --> 03:16.000
olsaydı başka bir arayüzümüz olabilirdi.

03:16.000 --> 03:17.710
Burada sadece bir tane var.

03:17.710 --> 03:20.350
Ve şimdi, bunun anlamı, sınıfımız

03:20.350 --> 03:21.740
arayüzü yanlış uyguladığı

03:21.740 --> 03:25.200
için burada bir hata almamızdır.

03:25.200 --> 03:27.240
name özelliğine sahip değildir,

03:27.240 --> 03:29.690
greet yöntemine sahip değildir.

03:29.690 --> 03:33.960
Şimdi, bunu sınıfımızda ayarlamamız gerekiyor, belki de

03:33.960 --> 03:35.610
isim için bir değer alacağımız

03:35.610 --> 03:38.173
bir kurucu ayarlayacağım ve sonra bu

03:39.010 --> 03:41.260
şekilde ayarlayacağım ve daha

03:41.260 --> 03:44.380
sonra bu mantığa sahip olabileceğimiz greet

03:44.380 --> 03:48.080
yöntemimizi de ekleyeceğimiz yer.

03:48.080 --> 03:50.780
Şimdi, sınıfımızda bundan daha fazlasına sahip olabiliriz.

03:50.780 --> 03:52.340
Daha fazla alana sahip olabiliriz,

03:52.340 --> 03:53.920
daha fazla metoda sahip olabiliriz,

03:53.920 --> 03:56.030
bu sınıfı genişletebiliriz, bu sınıfla

03:56.030 --> 03:59.170
her zaman yapabildiğimiz gibi çalışabiliriz.

03:59.170 --> 04:02.640
Ancak bu arayüzü uyguladığımız için bu name özelliğine

04:02.640 --> 04:04.400
sahip olmak için bu yöntemi doğru

04:04.400 --> 04:07.040
bir şekilde uygulamak zorundayız.

04:07.040 --> 04:09.740
Bu nedenle, arayüzler genellikle somut

04:09.740 --> 04:13.870
uygulamalarına bakılmaksızın farklı sınıflar arasında işlevselliği

04:13.870 --> 04:16.550
paylaşmak için kullanılır.

04:16.550 --> 04:19.240
Arayüzlerin içinde uygulama veya değerlere sahip

04:19.240 --> 04:22.450
olamazsınız, ancak yapıyla ilgili olarak, bir sınıfın sahip

04:22.450 --> 04:24.980
olması gereken özelliklerle ilgili olarak.

04:24.980 --> 04:28.120
Bu biraz soyut sınıflarla çalışmaya benzer, bu

04:28.120 --> 04:29.640
nedenle aradaki fark, bir

04:29.640 --> 04:33.520
arayüzün hiçbir uygulama detayına sahip olmamasıdır, oysa

04:33.520 --> 04:37.160
soyut sınıflar, bu parçaların üzerine yazmanız gereken

04:37.160 --> 04:39.330
ve somut bir uygulama parçalarına

04:39.330 --> 04:42.470
sahip olduğum bir karışım olabilir.

04:42.470 --> 04:43.730
Bu, arayüzler ile soyut

04:43.730 --> 04:46.860
sınıflar arasındaki önemli bir farktır.

04:46.860 --> 04:47.850
Şimdi bununla birlikte,

04:47.850 --> 04:49.790
burada kişi sınıfımız var.

04:49.790 --> 04:53.910
Ve şimdi burada, kullanıcı1 new Person kullanılarak

04:53.910 --> 04:55.930
ve örneğin isim girilerek

04:55.930 --> 04:58.090
oluşturulabilir.

04:58.090 --> 04:59.730
Ve şimdi, user1'de bu yaşa sahip

04:59.730 --> 05:02.300
olmamızın sorun olmadığını görüyoruz çünkü

05:02.300 --> 05:05.870
user1'i Person'a göre botluyoruz, Person Greetable'ı uygular

05:05.870 --> 05:07.540
ve bir sınıfa Greetable'dan

05:07.540 --> 05:10.440
daha fazlasını ekleyebilirsiniz ancak arayüz tarafından

05:10.440 --> 05:15.120
belirlenen koşulları yerine getirmeniz gerekir.

05:15.120 --> 05:17.130
Bu nedenle, şimdi her şeyi kaydedersek, geçerli

05:17.130 --> 05:18.730
bir kodumuz olur ve kullanıcı1'imizi

05:18.730 --> 05:23.040
orada console ile günlüğe kaydedersek. loguna baktığımızda, bu durumda

05:23.040 --> 05:25.430
yaş ve isme sahip normal bir nesne

05:25.430 --> 05:27.590
olduğunu görüyoruz, ancak temel

05:27.590 --> 05:30.950
çıkarım, arayüzü uygulayan bir sınıfa dayalı

05:30.950 --> 05:32.770
olmasıdır.

05:32.770 --> 05:35.550
Ve daha sonra hepiniz arayüzü bir tür olarak kullanabilirsiniz.

05:35.550 --> 05:37.780
Elbette bunu Person türüne de ayarlayabilirdik,

05:37.780 --> 05:40.580
ancak gördüğünüz gibi burada Greetable türünü kullanmak

05:40.580 --> 05:42.200
işe yarıyor çünkü sonuçta user1 sınıfında

05:42.200 --> 05:46.300
sakladığımız Person nesnesi Greetable arayüzüne dayanıyor.

05:46.300 --> 05:47.750
Bunu uyguluyor.

05:47.750 --> 05:49.820
Bu da bir başka güçlü özellik.

05:49.820 --> 05:53.690
Bir arayüzü bir sabit veya değişken üzerinde bir tür

05:53.690 --> 05:58.010
olarak kullanabilirsiniz, bu da aslında başka bir türden

05:58.010 --> 06:02.330
başka bir sınıfı depolar ve bu da arayüz türüne dayanır çünkü

06:02.330 --> 06:03.950
onu uygular.

06:03.950 --> 06:06.530
Yani özetle arayüzler bu.

06:06.530 --> 06:08.643
Çok sayıda güçlü özellik dahildir.
