WEBVTT

00:02.150 --> 00:04.320
Người kể chuyện: Khi nói đến việc

00:04.320 --> 00:07.220
xây dựng Ứng dụng React với Typescript, tất

00:07.220 --> 00:10.800
nhiên chúng ta cần thiết lập dự án, dự án này có khả năng

00:10.800 --> 00:13.730
xử lý cả mã React của chúng ta, vì vậy những thứ

00:13.730 --> 00:17.480
như JSX chẳng hạn, biên dịch giữ nguyên và tối ưu hóa mã React

00:17.480 --> 00:21.500
của chúng ta, và đồng thời có khả năng hiểu TypeScript và biên

00:21.500 --> 00:25.320
dịch TypeScript thành JavaScript.

00:25.320 --> 00:27.430
Việc tự mình thiết lập một dự án như

00:27.430 --> 00:28.750
vậy có thể khá khó khăn

00:28.750 --> 00:31.940
và do đó, thật tốt khi Create React App, một công

00:31.940 --> 00:34.080
cụ do nhóm React quản lý mà chúng ta

00:34.080 --> 00:36.420
có thể sử dụng để tạo các dự án React,

00:36.420 --> 00:39.110
hỗ trợ TypeScript ngay lập tức.

00:39.110 --> 00:42.110
Bạn có thể chỉ cần Google để tạo TypeScript ứng dụng

00:42.110 --> 00:44.590
phản ứng và bạn sẽ tìm thấy mục này trên tài liệu

00:44.590 --> 00:47.000
chính thức về Tạo ứng dụng phản ứng.

00:47.000 --> 00:49.140
Ở đó, bạn sẽ tìm hiểu cách có thể

00:49.140 --> 00:51.540
thêm TypeScript vào một dự án hiện

00:51.540 --> 00:54.850
có, tại đây, các bước này hoặc cách bạn có thể tạo

00:54.850 --> 00:57.290
một dự án mới bằng Create React App

00:57.290 --> 01:00.400
và TypeScript, và ở đây bạn thấy một lệnh mà bạn

01:00.400 --> 01:03.030
có thể sao chép, để tạo một dự án React

01:03.030 --> 01:05.680
mới, cũng hỗ trợ TypeScript.

01:05.680 --> 01:07.020
Bây giờ, tôi sẽ sử dụng

01:07.020 --> 01:11.110
cái này ở đây, và ở đây tôi đã ở trong một thư mục mà tôi muốn sử dụng.

01:11.110 --> 01:13.210
Đây chỉ đơn giản là thư mục dự án mà tôi

01:13.210 --> 01:14.790
muốn sử dụng cho dự án này.

01:14.790 --> 01:16.900
Và sau đó chúng ta sẽ chỉ cần dán vào lệnh này.

01:16.900 --> 01:17.740
Và trong trường

01:17.740 --> 01:20.970
hợp này, vì tôi muốn sử dụng thư mục mà tôi đã có, cũng

01:20.970 --> 01:22.710
ở đây trong thiết bị đầu cuối

01:22.710 --> 01:25.190
của tôi, tôi sẽ thay thế tên dự án bằng dấu

01:25.190 --> 01:27.590
chấm, để nó không tạo thư mục con mới và

01:27.590 --> 01:29.550
tạo dự án trong đó , nhưng thay vào

01:29.550 --> 01:31.730
đó, nó sử dụng thư mục này.

01:31.730 --> 01:33.720
Tất nhiên đây là tùy chọn.

01:33.720 --> 01:35.850
Tôi cũng muốn nói rằng tôi nhận thấy rằng lệnh

01:35.850 --> 01:38.070
này không phải lúc nào cũng hoạt động.

01:38.070 --> 01:41.390
Đôi khi, nó tạo ra một dự án JavaScript thông thường.

01:41.390 --> 01:42.590
Để khắc phục điều đó, bạn

01:42.590 --> 01:46.343
có thể cài đặt ứng dụng Create React trên toàn cầu trên máy của mình.

01:47.340 --> 01:49.140
Điều gì đó bạn có thể thực hiện một cách

01:49.140 --> 01:54.140
đơn giản bằng cách chạy npm install -g create-react-app, trên Mac và Linux, bạn có thể cần thêm

01:54.780 --> 01:56.560
một sudo trước điều này.

01:56.560 --> 01:59.360
Và với cái này được cài đặt trên máy của bạn, bạn

01:59.360 --> 02:03.010
thực sự có thể chạy lệnh này ở đây, nhưng không có npx, giống như

02:03.010 --> 02:05.920
thế này, và sau đó nó chắc chắn sẽ hoạt động.

02:05.920 --> 02:07.270
Vì vậy, đó là những gì tôi

02:07.270 --> 02:09.320
sẽ làm ở đây, nhưng thông thường, nó cũng

02:09.320 --> 02:12.250
sẽ hoạt động mà không cần cài đặt bằng cách chỉ sử dụng

02:12.250 --> 02:15.520
công cụ npx, đây là một phần của công cụ npm mà chúng tôi đã cài

02:15.520 --> 02:18.840
đặt cùng với Node. js sớm hơn trong khóa học.

02:18.840 --> 02:23.250
Vì vậy, bây giờ nó tạo một dự án mới vào thư mục này ở đây.

02:23.250 --> 02:27.460
Và trong dự án đó, nó sẽ thiết lập một ứng dụng React nơi tất cả chúng

02:27.460 --> 02:31.070
ta có thể viết tất cả mã của mình bằng TypeScript.

02:31.070 --> 02:32.460
Vì vậy, hãy đợi cho đến khi điều này kết thúc.

02:32.460 --> 02:34.610
Và hãy xem điều này mang lại cho chúng ta điều gì.

02:34.610 --> 02:36.010
Và nó đã hoàn thành.

02:36.010 --> 02:37.930
Vì vậy, hãy xem những gì chúng ta có.

02:37.930 --> 02:41.000
Chúng tôi có một thư mục mà bạn có thể nhận ra về cơ bản

02:41.000 --> 02:43.970
nó giống với cấu trúc bạn có khi tạo Ứng dụng React mà

02:43.970 --> 02:45.500
không có TypeScript.

02:45.500 --> 02:48.790
Nhưng chúng ta đã có thể thấy tệp tsconfig. tập tin json.

02:48.790 --> 02:51.020
Nhân tiện, bạn cũng có thể chỉnh sửa tệp này và

02:51.020 --> 02:52.940
tinh chỉnh nó theo nhu cầu của mình.

02:52.940 --> 02:55.250
Rốt cuộc, bạn đã học cách điều chỉnh cấu hình

02:55.250 --> 02:57.120
này sớm hơn trong khóa học.

02:57.120 --> 02:58.460
Tuy nhiên, cấu hình mặc định

02:58.460 --> 03:01.160
sẽ ổn đối với hầu hết các trường hợp sử dụng.

03:01.160 --> 03:02.950
Bây giờ nếu chúng ta khám phá thư mục src,

03:02.950 --> 03:05.230
nơi chúng ta sẽ viết mã nguồn của mình, chúng ta cũng

03:05.230 --> 03:08.550
sẽ tìm thấy một loạt các tệp . tsx trong đó.

03:08.550 --> 03:11.900
Cho đến nay trong khóa học, chúng tôi đã không làm việc với . tsx, nhưng chỉ với

03:11.900 --> 03:13.787
các tệp . tập tin ts. tsx đơn giản đã

03:13.787 --> 03:17.800
được chọn ở đây, bởi vì đây là những tệp mà bạn không thể chỉ viết

03:17.800 --> 03:20.530
mã TypeScript mà phải viết tất cả mã JSX, chỉ

03:20.530 --> 03:22.000
là cú pháp React, JavaScript

03:22.000 --> 03:25.570
đặc biệt, nơi bạn viết đánh dấu HTML bên trong JavaScript

03:25.570 --> 03:29.930
của mình hoặc trong trường hợp này là TypeScript mã số.

03:29.930 --> 03:32.880
Đó là những gì chúng tôi nhận được ở đây.

03:32.880 --> 03:34.920
Bây giờ trong các tệp này, chúng ta đã có

03:34.920 --> 03:36.500
thể thấy một số cú pháp TypeScript,

03:36.500 --> 03:38.800
ví dụ, ở đây, chúng ta có một kiểu gán, tôi sẽ

03:38.800 --> 03:41.480
xem xét kỹ hơn về kiểu này sau, nhưng hiện tại, chúng

03:41.480 --> 03:43.880
ta có thể thấy ngay rằng rõ ràng chúng ta sử dụng

03:43.880 --> 03:45.780
TypeScript ở đây .

03:45.780 --> 03:49.290
Cùng với đó, hãy để tôi dọn dẹp cấu trúc thư mục bắt đầu này một chút,

03:49.290 --> 03:50.680
sau đó hãy cùng nhau xây dựng

03:50.680 --> 03:52.730
một Ứng dụng React rất đơn giản và trong

03:52.730 --> 03:56.150
khi chúng ta làm việc đó, hãy khám phá cách chúng ta có thể sử dụng TypeScript

03:56.150 --> 03:57.550
với React.

03:57.550 --> 04:01.000
Vì vậy, trước tiên hãy tập trung vào việc dọn

04:01.000 --> 04:02.950
dẹp, ở đây trong App. tsx, tôi sẽ xóa nhập logo và xóa

04:02.950 --> 04:06.860
tất cả nội dung trong div của tôi

04:06.860 --> 04:09.380
ở đây và do đó chỉ giữ lại div đó.

04:09.380 --> 04:12.020
Tôi cũng sẽ xóa Ứng dụng. nhập css, thoát khỏi

04:12.020 --> 04:15.530
Ứng dụng. css và ứng dụng. kiểm tra. tsx cũng như

04:15.530 --> 04:19.560
logo. svg và serviceWorker. ts, hãy xóa tất

04:19.560 --> 04:23.470
cả các tệp đó.

04:23.470 --> 04:25.500
Trong chỉ mục. tsx, tôi sẽ xóa phần nhập serviceWorker

04:25.500 --> 04:29.060
này, bởi vì chúng tôi sẽ không làm việc

04:29.060 --> 04:32.100
với serviceWorkers ở đây, hãy xóa mã đó ở dưới đó và kết thúc

04:32.100 --> 04:34.530
với thiết lập này và trong tệp index. css, tôi sẽ xóa tất cả những thứ này

04:34.530 --> 04:38.870
và chỉ thiết lập một số kiểu HTML

04:38.870 --> 04:40.610
nơi tôi muốn đặt họ phông

04:40.610 --> 04:43.140
chữ sans-serif, và sau đó là kiểu nội

04:43.140 --> 04:45.860
dung mà tôi muốn loại bỏ lề, giống như thế

04:45.860 --> 04:47.190
này, rất đơn giản phong

04:47.190 --> 04:48.820
cách.

04:48.820 --> 04:50.763
Và với điều đó, chúng tôi đã có một thiết

04:52.790 --> 04:54.540
lập ban đầu mà tôi muốn làm việc.

04:54.540 --> 04:55.840
Bây giờ một lần nữa, tôi đã đề cập đến

04:55.840 --> 04:57.370
nó, nhưng nếu tất cả những điều này không cho

04:57.370 --> 04:59.710
bạn biết bất cứ điều gì, nếu đây là cú pháp mà bạn chưa từng thấy trước

04:59.710 --> 05:02.200
đây, thì trước tiên hãy đi sâu vào một số tài nguyên React.

05:02.200 --> 05:05.610
Đây không phải là điều chúng ta sẽ tập trung vào trong mô-đun này,

05:05.610 --> 05:08.130
bạn sẽ không học React trong mô-đun này.

05:08.130 --> 05:11.010
Nhưng với điều đó, hãy lưu tất cả các thay đổi của chúng

05:11.010 --> 05:12.920
tôi và bây giờ hãy tiếp tục, và hãy bắt

05:12.920 --> 05:15.680
đầu viết một số mã React và Typhon, đồng thời tìm hiểu

05:15.680 --> 05:17.980
cách hai thứ này hoạt động cùng nhau.
