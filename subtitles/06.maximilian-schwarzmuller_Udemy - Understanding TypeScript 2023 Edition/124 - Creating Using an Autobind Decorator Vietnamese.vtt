WEBVTT

00:02.220 --> 00:04.550
-: Tôi đang nói về một trình trang trí mà chúng

00:04.550 --> 00:07.350
ta có thể thêm vào để tự động liên kết từ khóa "this"

00:07.350 --> 00:09.930
để chúng ta không phải gọi liên kết ở đây.

00:09.930 --> 00:12.500
Bây giờ rõ ràng việc gọi liên kết ở đây không phải là vấn

00:12.500 --> 00:14.160
đề lớn nếu không có gì sai với nó, nhưng

00:14.160 --> 00:16.460
chúng tôi cũng muốn thực hành những gì chúng tôi

00:16.460 --> 00:20.220
đã học và nếu chúng tôi phải làm điều này ở nhiều nơi trên ứng dụng của mình thì

00:20.220 --> 00:22.730
có một công cụ trang trí mà chúng tôi có thể thêm vào

00:22.730 --> 00:24.970
thực sự có thể được dễ dàng hơn.

00:24.970 --> 00:27.100
Vì vậy, hãy loại bỏ ràng buộc này ở đây.

00:27.100 --> 00:30.010
Và thay vào đó, phía trên lớp ở đây, tôi sẽ

00:30.010 --> 00:33.010
thêm trình trang trí liên kết tự động và tôi

00:33.010 --> 00:34.920
chỉ thêm một số nhận xét ở đây

00:34.920 --> 00:38.750
để giữ cho tệp này được sắp xếp, ít nhất là một chút.

00:38.750 --> 00:40.490
Lớp ProjectInput Vì vậy,

00:42.260 --> 00:44.790
một trình trang trí là gì?

00:44.790 --> 00:46.770
Một trang trí là một chức năng, phải không?

00:46.770 --> 00:48.130
Và bạn có thể tìm thấy nó với

00:48.130 --> 00:51.383
trang trí chức năng ở đây hoặc dưới dạng biểu thức chức năng.

00:52.490 --> 00:54.780
Vì vậy, ở đây tôi sẽ sử dụng một chức năng trang trí

00:54.780 --> 00:57.780
và tôi sẽ đặt tên cho nó là autobind, tên tùy thuộc vào bạn.

00:57.780 --> 01:01.670
Và trình trang trí này sẽ nhận được các đối số miễn phí là đích,

01:01.670 --> 01:03.173
tên phương thức mà nó được

01:04.430 --> 01:06.430
liên kết, bởi vì tôi sẽ tạo một trình

01:06.430 --> 01:09.083
trang trí phương thức ở đây.

01:09.980 --> 01:12.960
Và cũng là mô tả của

01:12.960 --> 01:15.720
phương pháp đó.

01:15.720 --> 01:18.370
Uh, bộ mô tả thuộc tính bởi vì các phương

01:18.370 --> 01:22.760
thức cuối cùng chỉ là các thuộc tính, thuộc tính chứa chức năng.

01:22.760 --> 01:24.400
Bây giờ, tại sao đây là một method decorator?

01:24.400 --> 01:29.210
Bởi vì ý tưởng là chúng ta có thể thêm nó vào submitHandler

01:29.210 --> 01:32.210
như thế này và hoàn thành nó.

01:32.210 --> 01:33.680
Đó là ý tưởng.

01:33.680 --> 01:35.500
Bây giờ, chúng tôi vẫn chưa hoàn toàn

01:35.500 --> 01:38.143
ở đó, nhưng đây là cách cuối cùng nó sẽ hoạt động.

01:39.090 --> 01:42.950
Bây giờ, để làm cho nó hoạt động, hãy quay lại chức năng của chúng

01:42.950 --> 01:46.880
ta ở trên đó và sau đó cái gì phải đi vào phần thân chức năng?

01:46.880 --> 01:49.490
Chà, trong đó, trước hết tôi muốn truy

01:49.490 --> 01:51.950
cập vào phương thức ban đầu.

01:51.950 --> 01:56.593
Với mô tả. value để chúng tôi lưu trữ phương

01:56.593 --> 01:59.380
thức mà chúng tôi đã xác định ban đầu.

01:59.380 --> 02:03.540
Sau đó, tôi muốn tạo bộ mô tả đã điều chỉnh ở đây là

02:03.540 --> 02:04.873
một đối tượng.

02:06.650 --> 02:11.090
Thực ra tôi sẽ gõ PropertyDescriptor.

02:11.090 --> 02:13.880
Trường hợp có thể định cấu hình nên được đặt thành true

02:13.880 --> 02:15.910
để chúng tôi luôn có thể thay đổi nó.

02:15.910 --> 02:17.573
Và nơi chúng ta sau đó cần một getter.

02:18.510 --> 02:21.770
Và trong getter đó, ở đây, nó sẽ được thực thi

02:21.770 --> 02:24.270
khi bạn cố gắng truy cập hàm.

02:24.270 --> 02:27.710
Chúng tôi sẽ thiết lập chức năng liên kết ở đây, bằng cách sử dụng

02:27.710 --> 02:29.220
phương thức ban đầu mà chúng

02:29.220 --> 02:31.030
tôi đang trích xuất ở đó.

02:31.030 --> 02:34.063
Và gọi liên kết này trên nó.

02:35.370 --> 02:36.203
Sau đó, tôi muốn

02:37.860 --> 02:40.170
trả lại chức năng bị ràng buộc đó, và

02:40.170 --> 02:41.603
đó sẽ là tất cả.

02:42.510 --> 02:44.190
Và tất nhiên, về tổng thể, do

02:44.190 --> 02:46.620
đó tôi sẽ trả lại bộ mô tả đã điều chỉnh trong

02:46.620 --> 02:48.653
trình trang trí phương thức đó.

02:49.510 --> 02:52.880
Bây giờ chúng tôi gặp lỗi với điều đó, trên trình xử lý.

02:52.880 --> 02:56.020
Điều đó, hỗ trợ thử nghiệm cho người trang trí là một tính

02:56.020 --> 02:57.960
năng về cơ bản cần được bật.

02:57.960 --> 03:00.400
Vì vậy, chúng ta nên chuyển đến tệp tsconfig

03:00.400 --> 03:02.320
và trong đó chỉ cần cuộn xuống.

03:02.320 --> 03:05.770
Bạn sẽ thấy tùy chọn "experimentalDecorators" chỉ cần

03:05.770 --> 03:07.450
nhận xét điều đó trong.

03:07.450 --> 03:09.980
Và thêm một dấu phẩy phía trước nó.

03:09.980 --> 03:14.183
Lưu nó và sau đó khởi động lại quá trình biên dịch các loại.

03:15.180 --> 03:17.700
Bây giờ, nó vẫn hiển thị cho tôi một số lỗi ở đây, nếu tôi

03:17.700 --> 03:18.913
mở rộng cái này, methodName

03:20.212 --> 03:23.170
được khai báo, nhưng giá trị của nó không bao giờ được đọc.

03:23.170 --> 03:25.410
Trong ứng dụng. ts dòng bốn.

03:25.410 --> 03:26.760
Nó đề cập đến điều này ở đây,

03:26.760 --> 03:29.020
tôi có lập luận này, mà tôi đã nhận được ở đây

03:29.020 --> 03:30.940
mà tôi thực sự chưa bao giờ sử dụng.

03:30.940 --> 03:34.370
Điều tương tự cũng đúng với mục tiêu, tôi chưa bao giờ sử dụng nó.

03:34.370 --> 03:36.343
Bây giờ, có hai cách để giải quyết điều này.

03:37.200 --> 03:39.610
Một cách là truy cập tsconfig và nới lỏng

03:39.610 --> 03:42.813
các quy tắc nghiêm ngặt của chúng tôi tại đây.

03:44.160 --> 03:46.740
noUnusedParameters, nếu chúng ta đặt giá trị này thành false thì

03:46.740 --> 03:49.090
thực tế chúng ta đang cho phép các tham số không được sử dụng.

03:49.090 --> 03:50.670
Vì vậy, đây sẽ là một điều,

03:50.670 --> 03:52.910
hoặc bạn sử dụng dấu gạch dưới tên

03:52.910 --> 03:54.053
đặc biệt và dấu gạch

03:55.180 --> 03:56.653
dưới hai.

03:57.770 --> 04:01.860
Đây thực sự là một gợi ý cho bản thảo và javascript mà bạn biết rằng

04:01.860 --> 04:03.130
bạn sẽ không sử dụng

04:03.130 --> 04:04.800
các giá trị này, nhưng bạn

04:04.800 --> 04:05.930
cần chấp nhận chúng

04:05.930 --> 04:08.740
vì bạn cần đối số mà chúng theo đuổi.

04:08.740 --> 04:11.810
Nếu bây giờ bạn lưu cái này, cái này sẽ biên dịch mà không

04:11.810 --> 04:14.700
có lỗi và nếu chúng ta quay lại và nhập xin chào ở đây

04:14.700 --> 04:17.040
và gửi cái này, nó vẫn hoạt động bây giờ nhờ

04:17.040 --> 04:20.060
trình trang trí liên kết tự động của chúng tôi.

04:20.060 --> 04:23.120
Điều đó hy vọng cũng cho thấy rằng trang trí này có thể

04:23.120 --> 04:24.950
có một số công dụng thực sự.

04:24.950 --> 04:27.530
Bây giờ tất nhiên ở đây thực sự là một công việc nhiều

04:27.530 --> 04:29.510
hơn một chút, hơn là chỉ gọi liên kết.

04:29.510 --> 04:32.120
Nhưng hãy tưởng tượng điều này được sử dụng trên ngày càng nhiều phương

04:32.120 --> 04:33.820
pháp mà tất cả đều phải được ràng buộc.

04:33.820 --> 04:36.140
Không cần phải gọi liên kết này theo cách thủ

04:36.140 --> 04:38.140
công, sau đó có thể giúp bạn tiết kiệm lại

04:38.140 --> 04:40.430
thời gian và cũng ngăn ngừa một số lỗi tiềm ẩn

04:40.430 --> 04:42.343
trong trường hợp bạn quên nó.
