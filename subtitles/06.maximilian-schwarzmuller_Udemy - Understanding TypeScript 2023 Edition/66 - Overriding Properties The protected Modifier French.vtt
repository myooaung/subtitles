WEBVTT

00:02.210 --> 00:04.400
Voilà, c'est l'essentiel de l'héritage.

00:04.400 --> 00:06.900
Nous pouvons également surcharger les méthodes

00:06.900 --> 00:09.810
ou les propriétés de notre classe de base.

00:09.810 --> 00:13.350
Ainsi, disons que dans la comptabilité, je veux ajouter ma propre

00:13.350 --> 00:15.020
méthode addEmployee.

00:15.020 --> 00:16.200
Nous pouvons le faire.

00:16.200 --> 00:18.500
Nous pouvons ajouter notre propre méthode

00:18.500 --> 00:20.120
ici, et obtenir le nom ici.

00:20.120 --> 00:21.330
Disons.

00:21.330 --> 00:22.550
Et maintenant, ici, je veux avoir une

00:22.550 --> 00:23.860
logique différente pour ajouter cela.

00:23.860 --> 00:27.610
Une vérification supplémentaire si ou une vérification si nom=Max,

00:27.610 --> 00:29.410
bien, alors je veux retourner,

00:29.410 --> 00:31.930
et ne pas ajouter Max comme employé, parce que

00:31.930 --> 00:34.770
Max est totalement inadapté pour cela.

00:34.770 --> 00:36.360
Sinon, si le nom n'est pas Max,

00:36.360 --> 00:38.050
je veux ajouter l'employé.

00:38.050 --> 00:40.420
Aujourd'hui, cependant, nous sommes confrontés à un autre problème.

00:40.420 --> 00:44.520
Si j'essaie d'ajouter ces deux employés, on voit que employees

00:44.520 --> 00:47.500
n'est pas une propriété connue.

00:47.500 --> 00:50.510
La raison en est que les employés sont privés.

00:50.510 --> 00:51.890
C'est important.

00:51.890 --> 00:54.860
Les propriétés privées ne sont accessibles que depuis

00:54.860 --> 00:57.360
la classe dans laquelle elles sont définies,

00:57.360 --> 01:00.670
et non depuis les classes qui héritent de cette classe.

01:00.670 --> 01:03.530
Ainsi, les employés sont disponibles à l'intérieur du département,

01:03.530 --> 01:06.100
mais pas dans les classes basées sur le département.

01:06.100 --> 01:09.040
Ainsi, le service comptable n'a pas d'accès direct

01:09.040 --> 01:11.320
aux propriétés des employés.

01:11.320 --> 01:15.930
Si nous voulons accorder cet accès, tout en nous assurant qu'il ne s'agit pas

01:15.930 --> 01:19.840
d'une propriété qui peut être modifiée de l'extérieur, nous pouvons

01:19.840 --> 01:22.080
la passer en mode protégé.

01:22.080 --> 01:25.760
Protected est comme private, mais contrairement à private, il

01:25.760 --> 01:28.280
n'est pas seulement disponible dans cette

01:28.280 --> 01:32.040
classe, mais aussi dans toute classe qui étend cette classe.

01:32.040 --> 01:35.130
Donc, maintenant, nous pouvons accéder aux employés à partir

01:35.130 --> 01:37.740
de notre département de comptabilité.

01:37.740 --> 01:41.377
Ici, je peux maintenant ajouter un employé s'il n'est pas Max.

01:41.377 --> 01:43.980
Donc, maintenant, si je vais là-bas,

01:43.980 --> 01:45.680
et sur ma comptabilité,

01:45.680 --> 01:49.240
je veux ajouter un employé du nom de Max.

01:49.240 --> 01:50.480
Cela ne devrait pas fonctionner.

01:50.480 --> 01:52.790
Si j'essaie d'ajouter Manu, ça devrait marcher.

01:52.790 --> 01:57.110
Donc, si nous sauvegardons maintenant cela, et si nous sortons également les informations

01:57.110 --> 01:59.196
sur l'employé d'impression ici, puis sauvegardons

01:59.196 --> 02:00.840
cela, nous devrions voir que, en effet,

02:00.840 --> 02:03.120
nous avons un employé là, qui est Manu, à cause de

02:03.120 --> 02:06.620
ma propre logique de méthode de comptabilité pour AddEmployee, Max n'a

02:06.620 --> 02:08.590
pas été ajouté.

02:08.590 --> 02:10.017
Ainsi, le point essentiel à retenir

02:10.017 --> 02:14.010
ici est que vous A) pouvez surcharger les méthodes de votre classe de base.

02:14.010 --> 02:16.690
Vous pouvez ajouter votre propre implémentation,

02:16.690 --> 02:18.690
qui sera alors utilisée à la place

02:18.690 --> 02:21.023
de celle de la classe de base.

02:21.023 --> 02:25.130
Et B) vous devez également contrôler l'accès

02:25.130 --> 02:28.100
aux propriétés protégées.

02:28.100 --> 02:29.690
Parce que si vous utilisez private,

02:29.690 --> 02:32.120
vous êtes vraiment limité à cette classe, alors

02:32.120 --> 02:36.400
que protected la rend toujours inaccessible de l'extérieur, mais la rend accessible

02:36.400 --> 02:39.270
de l'intérieur des classes qui étendent la classe de

02:39.270 --> 02:41.123
base.
