WEBVTT

00:02.130 --> 00:04.900
Instructeur: Deze cursus zit boordevol inhoud.

00:04.900 --> 00:06.940
We zijn bijna klaar met de start en

00:06.940 --> 00:09.500
daarna duiken we meteen in TypeScript en

00:09.500 --> 00:11.667
in al zijn spannende mogelijkheden

00:11.667 --> 00:13.850
en leren die stap voor stap.

00:13.850 --> 00:16.210
We beginnen natuurlijk met de basis van TypeScripts.

00:16.210 --> 00:18.800
De kerntypes, hoe het in het algemeen werkt,

00:18.800 --> 00:20.880
enkele van de nieuwe mogelijkheden

00:20.880 --> 00:22.930
die het toevoegt, en alles wat u moet

00:22.930 --> 00:25.320
weten om TypeScript goed te begrijpen.

00:25.320 --> 00:27.690
Daarna duiken we al dieper in de TypeScript

00:27.690 --> 00:29.590
compiler en de configuratie ervan,

00:29.590 --> 00:32.310
want het is superbelangrijk voor u om te begrijpen

00:32.310 --> 00:35.480
wat u daar kunt configureren en wat al die verschillende

00:35.480 --> 00:37.450
instellingen doen, dus daar gaan

00:37.450 --> 00:40.840
we in deze module dieper op in.

00:40.840 --> 00:43.900
Daarna verkennen we de volgende generatie JavaScript-functies

00:43.900 --> 00:45.850
die in TypeScript worden ondersteund.

00:45.850 --> 00:48.880
Hoe ze werken en hoe u ze kunt gebruiken in TypeScript.

00:48.880 --> 00:51.500
We gaan verder met klassen en interfaces, een superbelangrijk

00:51.500 --> 00:55.000
concept dat deels ook in vanilla JavaScript voorkomt in het geval

00:55.000 --> 00:57.350
van klassen, maar met interfaces hebben we

00:57.350 --> 00:59.510
ook een gloednieuwe TypeScript-functie

00:59.510 --> 01:01.600
en u zult begrijpen wat ze zijn, wat ze

01:01.600 --> 01:03.550
doen, en waarom we ze misschien willen

01:03.550 --> 01:06.210
gebruiken.

01:06.210 --> 01:08.190
Daarna is het tijd om dieper te duiken.

01:08.190 --> 01:10.490
We kijken naar enkele geavanceerde types

01:10.490 --> 01:13.280
en geavanceerde TypeScript-functies in het algemeen,

01:13.280 --> 01:15.040
waarbij we het naar een hoger niveau

01:15.040 --> 01:16.640
tillen en voortbouwen op de

01:16.640 --> 01:20.110
basis die we tot nu toe hebben geleerd.

01:20.110 --> 01:22.630
Ook een geavanceerde functie, die

01:22.630 --> 01:27.210
zeker zijn eigen sectie verdient, is de generieke functie.

01:27.210 --> 01:28.910
In deze module leer je

01:28.910 --> 01:31.160
wat dat is en waarom het echt,

01:31.160 --> 01:32.650
echt nuttig is.

01:32.650 --> 01:34.570
Gevolgd door decorateurs.

01:34.570 --> 01:37.360
Decorators zijn een behoorlijk coole functie

01:37.360 --> 01:40.550
die TypeScript ook heeft toegevoegd en we zullen decorators

01:40.550 --> 01:43.810
nader bekijken en ook enkele echt nuttige decorators

01:43.810 --> 01:46.200
bouwen in die module en daarna zullen

01:46.200 --> 01:50.100
we veel geleerd hebben over TypeScript.

01:50.100 --> 01:52.660
Nu is de cursus zo georganiseerd dat

01:52.660 --> 01:56.460
ik al deze individuele functies laat zien in relatief

01:56.460 --> 01:59.040
kleine eenvoudige demo's.

01:59.040 --> 02:01.730
Om u een groter beeld te geven en te zien

02:01.730 --> 02:04.640
hoe u al deze functies in een echt project

02:04.640 --> 02:08.140
kunt toepassen, gaan we dat nu bouwen.

02:08.140 --> 02:10.400
We hebben een hele module waarin we

02:10.400 --> 02:14.420
een heel project vanaf nul opbouwen met TypeScript, zodat u

02:14.420 --> 02:17.720
veel van deze functies, de meeste van deze functies

02:17.720 --> 02:20.090
waarover u tot nu toe hebt geleerd, in

02:20.090 --> 02:21.920
actie ziet en u zult zien hoe

02:21.920 --> 02:23.680
ze samenwerken en waarom ze

02:23.680 --> 02:28.160
het proces van het bouwen van zo'n project vereenvoudigen.

02:28.160 --> 02:29.940
Als we klaar zijn met dit project

02:29.940 --> 02:31.770
zullen we een nieuw probleem identificeren

02:31.770 --> 02:34.420
en leren hoe we dat kunnen oplossen door te werken

02:34.420 --> 02:36.450
met namespaces en modules die ons zullen

02:36.450 --> 02:38.100
helpen onze code beter beheersbaar

02:38.100 --> 02:40.570
en leesbaar te maken.

02:40.570 --> 02:42.600
Daarop voortbouwend zullen we ook Webpack

02:42.600 --> 02:44.350
met TypeScript verkennen.

02:44.350 --> 02:47.690
Webpack is een build-tool die we gebruiken bij moderne front-end

02:47.690 --> 02:49.530
webontwikkeling en je kunt het gebruiken

02:49.530 --> 02:52.970
in combinatie met TypeScript om een beter project op te zetten dat bepaalde

02:52.970 --> 02:55.520
dingen gewoon makkelijker maakt en je het beste van

02:55.520 --> 02:57.990
de twee werelden laat krijgen.

02:57.990 --> 02:59.850
Een geweldige ontwikkelingservaring

02:59.850 --> 03:02.170
en ook code die echt goed werkt voor uw

03:02.170 --> 03:04.120
eindgebruikers.

03:04.120 --> 03:06.320
Als we daarmee klaar zijn hebben we een

03:06.320 --> 03:08.710
heel goed beeld van TypeScript en hoe ermee

03:08.710 --> 03:10.180
te werken in projecten.

03:10.180 --> 03:13.250
Wat je nu in veel echte projecten nodig hebt zijn bibliotheken

03:13.250 --> 03:15.183
van derden, dus daar gaan we wat dieper

03:15.183 --> 03:16.820
op in, want er zijn bepaalde bibliotheken

03:16.820 --> 03:20.250
van derden die TypeScript echt omarmd hebben en ingebouwde

03:20.250 --> 03:22.280
TypeScript-ondersteuning hebben,

03:22.280 --> 03:26.600
maar er zijn ook veel bibliotheken die dat niet hebben en we gaan kijken hoe

03:26.600 --> 03:29.030
we met beide soorten bibliotheken op een goede

03:29.030 --> 03:34.520
manier kunnen werken in TypeScript-projecten.

03:34.520 --> 03:36.630
Nou en? Er zijn enkele specifieke

03:36.630 --> 03:39.620
scenario's die hun eigen modules verdienen.

03:39.620 --> 03:41.570
We zullen een hele module hebben

03:41.570 --> 03:44.320
over React met TypeScript, hoe je een hele

03:44.320 --> 03:47.540
React-applicatie kunt bouwen met alleen TypeScript,

03:47.540 --> 03:49.452
en ook een hele module over NodeJS

03:49.452 --> 03:53.260
en express end type script, zodat je ook geweldige voorbeelden

03:53.260 --> 03:55.390
hebt voor deze zeer populaire en

03:55.390 --> 03:58.910
specifieke use cases van TypeScript waar je ineens React-

03:58.910 --> 04:01.270
of Node-applicaties kunt maken op een

04:01.270 --> 04:03.630
gloednieuwe manier met een gloednieuwe

04:03.630 --> 04:06.760
taal.

04:06.760 --> 04:09.260
Dus veel spannende inhoud in de cursus.

04:09.260 --> 04:10.970
Laten we geen tijd verspillen.

04:10.970 --> 04:12.720
Laten we eens kijken hoe je het meeste

04:12.720 --> 04:15.263
uit de cursus kunt halen en er daarna induiken.
