WEBVTT

00:02.500 --> 00:04.010
Giảng viên: Trong mô-đun này, chúng

00:04.010 --> 00:06.400
ta sẽ đi sâu vào một khái niệm gọi là thuốc generic.

00:06.400 --> 00:10.890
Generics tồn tại trong TypeScript, không phải trong vanilla JavaScript, vì

00:10.890 --> 00:12.860
vậy không có bản dịch thực sự ở đây.

00:12.860 --> 00:14.480
Nhưng chúng ta có thể sử dụng chúng trong TypeScript.

00:14.480 --> 00:17.200
Và khái niệm về các loại chung đều tồn tại

00:17.200 --> 00:19.730
trong các ngôn ngữ lập trình khác.

00:19.730 --> 00:21.950
Tất nhiên, không phải trong tất cả các ngôn ngữ lập trình

00:21.950 --> 00:24.530
khác, nhưng trong một số ngôn ngữ, chẳng hạn như trong C Sharp.

00:24.530 --> 00:27.290
Bây giờ khóa học này tất nhiên không phải là về C Sharp.

00:27.290 --> 00:29.280
Vì vậy, hãy xem khái quát là gì và chúng là gì trong

00:29.280 --> 00:30.770
TypeScript cũng như cách chúng tôi

00:30.770 --> 00:33.410
sử dụng chúng ở đó và tại sao chúng tôi sử dụng chúng ở đó.

00:33.410 --> 00:36.450
Cụ thể, chúng ta sẽ xem xét thuốc generic chính xác

00:36.450 --> 00:39.000
là gì và tại sao chúng lại thú vị và hữu ích.

00:39.000 --> 00:41.925
Sau đó, chúng ta sẽ xây dựng các hàm và lớp chung của riêng

00:41.925 --> 00:44.820
mình bởi vì, hóa ra, chúng ta có thể làm điều đó.

00:44.820 --> 00:47.910
Sau đó, chúng ta sẽ xem xét các ràng buộc chung và

00:47.910 --> 00:51.800
đó là gì và tại sao chúng ta sẽ sử dụng một cái gì đó như thế.

00:51.800 --> 00:53.300
Và chúng ta sẽ xem xét

00:53.300 --> 00:55.250
một số loại TypeScript đặc

00:55.250 --> 00:57.750
biệt, thường là chung chung và chúng

00:57.750 --> 01:01.100
ta chỉ thực sự có thể hiểu bây giờ.

01:01.100 --> 01:02.963
Vì vậy, hãy xem những gì chúng tôi đã có ở đó.
