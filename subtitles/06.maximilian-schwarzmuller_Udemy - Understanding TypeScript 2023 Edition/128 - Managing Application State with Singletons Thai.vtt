WEBVTT

00:02.310 --> 00:04.580
ผู้สอน: ดังนั้นการทำให้โครงการจาก A ถึง

00:04.580 --> 00:06.000
B เป็นเป้าหมายของเรา

00:06.000 --> 00:09.750
เพื่อให้แม่นยำ เมื่อผู้ใช้สร้างโปรเจ็กต์ใหม่ เมื่อพวกเขาป้อนข้อมูลทั้งหมด

00:09.750 --> 00:11.850
เราต้องการสร้างออบเจกต์โปรเจ็กต์ใหม่ในตอนท้าย

00:11.850 --> 00:21.990
ซึ่งเราจะส่งออกในคลาสรายการโปรเจ็กต์ของเราโดยเป็นส่วนหนึ่งของรายการแบบไม่เรียงลำดับ ซึ่งแสดงผลที่นั่น

00:21.990 --> 00:23.299
นั่นคือความคิด

00:23.299 --> 00:28.890
แน่นอนว่าวิธีเล็กๆ น้อยๆ ในการดำเนินการนี้อาจเป็นเพียงแค่ไปที่ตำแหน่งที่ป้อนอินพุตของผู้ใช้

00:28.890 --> 00:34.513
จากนั้นจึงใช้เอกสารที่นี่

00:34.513 --> 00:34.513
getElementbyId

00:36.100 --> 00:42.270
เพื่อเข้าถึงรายการที่ไม่เรียงลำดับที่เราแสดงเป็นส่วนหนึ่งของคลาสรายการโครงการของเรา

00:42.270 --> 00:51.090
ซึ่งมี ID นี้อยู่ที่นี่ ดังนั้นรายการโครงการที่ใช้งานอยู่หรือรายการโครงการที่เสร็จสิ้นแล้ว เพียงแค่ติดต่อและเพิ่มรายการใหม่เข้าไป

00:51.090 --> 00:52.760
.

00:52.760 --> 00:57.250
แต่นั่นไม่ใช่ความคิดที่ว่าฉันต้องการสร้างแอปพลิเคชันนี้อย่างไร

00:57.250 --> 01:02.530
ฉันต้องการสร้างมันในลักษณะเชิงวัตถุโดยที่เรามีคลาสต่างๆ

01:02.530 --> 01:10.550
ที่ทำงานร่วมกันในแบบโต้ตอบ โดยที่เราสร้างคลาสใหม่แล้วมีบางอย่างเกิดขึ้นในโดม

01:10.550 --> 01:14.650
ที่เราเรียกเมธอดของคลาส แล้วคลาสนี้ทำบางอย่าง

01:14.650 --> 01:16.980
นั่นเป็นวิธีที่ฉันต้องการให้สิ่งเหล่านี้ทำงาน

01:16.980 --> 01:21.550
แน่นอน ตอนนี้เราสามารถเพิ่มเมธอดในคลาสรายการโปรเจ็กต์ได้

01:21.550 --> 01:24.120
สมมติว่าฉันเพิ่มเมธอดโปรเจ็กต์

01:24.120 --> 01:28.200
จากนั้นควรเรียกใช้เมธอดนั้นเมื่อควรเพิ่มและเรนเดอร์โปรเจ็กต์

01:28.200 --> 01:32.940
และเราจะต้องหาวิธีเรียกจากภายในอินพุตโปรเจ็กต์

01:32.940 --> 01:37.940
ในการทำเช่นนั้น เราสามารถทำให้แน่ใจว่าเราส่งการอ้างอิงไปยังรายการของเราที่นี่จริง

01:37.940 --> 01:40.330
ๆ ไปยังตัวสร้างอินพุตโปรเจ็กต์ เพื่อให้จากภายในคลาสอินพุตโปรเจ็กต์

01:40.330 --> 01:47.570
เราสามารถทำงานกับอินสแตนซ์ที่เป็นรูปธรรมเหล่านี้และเรียกเมธอดบนอินสแตนซ์เหล่านี้ได้

01:47.570 --> 01:50.260
เพราะนั่นคือสิ่งที่เราต้องทำ

01:50.260 --> 01:52.050
นั่นจะเป็นวิธีที่ใช้การได้

01:52.050 --> 01:54.400
เป็นแนวทางที่คุณสามารถทำได้

01:54.400 --> 01:58.680
แต่ฉันอยากใช้วิธีที่เป็นนามธรรมมากกว่านั้น

01:58.680 --> 02:01.393
วิธีการที่น่าสนใจยิ่งขึ้นในความคิดของฉัน

02:02.330 --> 02:06.210
ฉันจะสร้างคลาสที่จัดการสถานะของแอปพลิเคชันของเรา

02:06.210 --> 02:08.110
กล่าวคือ คลาสที่จัดการโครงการของเรา

02:08.110 --> 02:21.670
หรือสถานะใดก็ตามที่เราอาจต้องจัดการในแอปพลิเคชัน ซึ่งยังช่วยให้เราสามารถตั้งค่าผู้ฟังในส่วนต่างๆ ของ แอพที่สนใจ

02:21.670 --> 02:24.540
รูปแบบนี้อาจฟังดูคุ้นหูหากคุณทำงานกับเฟรมเวิร์กอย่าง

02:24.540 --> 02:27.050
Angular หรือไลบรารีอย่าง React

02:27.050 --> 02:29.820
และ Redux

02:29.820 --> 02:35.443
คุณมีวัตถุการจัดการสถานะส่วนกลางและคุณเพียงแค่รับฟังการเปลี่ยนแปลง

02:35.443 --> 02:37.480
นั่นคือสิ่งที่ฉันต้องการใช้ที่นี่

02:37.480 --> 02:39.620
แน่นอนว่ามันเป็นเพียงวิธีหนึ่งในการทำเช่นนี้

02:39.620 --> 02:41.660
แต่ฉันคิดว่ามันเป็นวิธีที่น่าสนใจทีเดียว

02:41.660 --> 02:43.680
ซึ่งเป็นเหตุผลที่ฉันอยากจะแสดงให้เห็น

02:43.680 --> 02:45.908
ที่ด้านบนของไฟล์ app

02:45.908 --> 02:50.350
ts ฉันจะเพิ่มคลาสการจัดการสถานะโครงการ

02:50.350 --> 02:57.210
และฉันจะตั้งชื่อว่า projectState; ฟังดูเป็นชื่อที่สมเหตุสมผลสำหรับฉัน

02:57.210 --> 02:59.900
ตอนนี้แนวคิดคือในคลาสนี้เรามีทรัพย์สินหรือฟิลด์

02:59.900 --> 03:08.800
ฟิลด์ส่วนตัว โปรเจ็กต์ ซึ่งเก็บอาร์เรย์ของโปรเจ็กต์

03:08.800 --> 03:12.000
ตอนนี้เราต้องกำหนดด้วยว่าโปรเจ็กต์ควรมีลักษณะอย่างไร เราจะทำในขั้นตอนต่อไป

03:12.000 --> 03:15.830
สำหรับตอนนี้ฉันจะบอกว่ามันเป็นอาร์เรย์ของอะไรก็ได้ ซึ่งแน่นอนว่าไม่สมบูรณ์แบบ

03:15.830 --> 03:22.240
ไม่ใช่ขั้นสุดท้าย แต่ฉันต้องการโฟกัส เกี่ยวกับโซลูชันการจัดการสถานะนั้นสำหรับตอนนี้

03:22.240 --> 03:25.653
ดังนั้นเราจึงมีรายชื่อโครงการที่นี่

03:26.530 --> 03:35.163
ตอนนี้เป้าหมายของฉันคือฉันต้องการเพิ่มรายการในรายการนั้นเมื่อใดก็ตามที่เราคลิกปุ่มเพิ่มโครงการที่นี่

03:36.940 --> 03:39.970
ในการทำงานนั้น ภายในคลาสสถานะโปรเจ็กต์ ฉันจะเพิ่มวิธีเพิ่มโปรเจ็กต์

03:39.970 --> 03:43.460
ซึ่งเป็นวิธีสาธารณะ

03:43.460 --> 03:45.560
และที่นั่นฉันคาดว่าจะได้รับชื่อ

03:45.560 --> 03:47.060
ซึ่งควรเป็นสตริง

03:47.060 --> 03:49.390
คำอธิบาย ซึ่งควรเป็นสตริง

03:49.390 --> 03:55.220
และจำนวนคนที่ทำงานในโครงการ ซึ่งควรเป็นตัวเลข

03:55.220 --> 04:00.950
จากนั้นที่นี่ เราสามารถสร้างโครงการใหม่ด้วยสัญลักษณ์ตามตัวอักษรของวัตถุได้ในตอนนี้

04:00.950 --> 04:03.950
ที่ที่เราควรมี ID บางส่วนสำหรับทุกโปรเจกต์ เพื่อให้เราสามารถระบุได้โดยไม่ซ้ำกัน

04:03.950 --> 04:12.100
และฉันจะสร้าง ID ที่นี่โดยใช้คณิตศาสตร์

04:12.100 --> 04:12.100
สุ่ม(). ถึงสตริง

04:12.100 --> 04:14.960
ตอนนี้ตัวเลขสุ่มไม่ใช่ ID เฉพาะจริงๆ คุณสามารถสร้างหมายเลขเดียวกันได้มากกว่าหนึ่งครั้ง

04:14.960 --> 04:22.570
แต่เป็นไปได้น้อยมาก และสำหรับจุดประสงค์ในการสาธิตของเรา ที่นี่ก็ใช้ได้

04:22.570 --> 04:28.370
นอกจากนี้ทุกโครงการควรมีชื่อเรื่องและจะมีการเก็บอาร์กิวเมนต์ชื่อเรื่องที่เราได้รับ

04:28.370 --> 04:33.830
เช่นเดียวกับคำอธิบาย ฉันจะเก็บคำอธิบายไว้ที่ไหน

04:33.830 --> 04:37.693
และคนของฉันฉันจะเก็บจำนวนคนไว้ที่ไหน

04:39.700 --> 04:43.440
สำหรับตอนนี้ นี่คือโครงการที่ฉันต้องการจัดเก็บ

04:43.440 --> 04:45.000
เมื่อเราสร้างมันขึ้นมาที่นี่

04:45.000 --> 04:48.020
เราสามารถเข้าถึงอาร์เรย์โปรเจ็กต์ในสถานะโปรเจ็กต์

04:48.020 --> 04:48.853
ซึ่งเป็นสถานะส่วนตัว

04:48.853 --> 04:53.340
แต่จากภายในคลาส ซึ่งวิธีนี้คือ เราสามารถเข้าถึงได้แน่นอน

04:53.340 --> 04:55.900
และที่นั่นฉันต้องการเพิ่มโปรเจ็กต์ใหม่นี้

04:55.900 --> 05:00.380
และเพื่อที่เราจะได้ผลักดันโปรเจ็กต์ใหม่ของเราเข้าไป

05:00.380 --> 05:03.350
ในตอนนี้ เราสามารถเพิ่มโครงการได้

05:03.350 --> 05:07.027
แต่แน่นอนว่าเรายังมีคำถามที่ไม่ชัดเจนสองสามข้อ

05:07.027 --> 05:15.990
เราจะเรียกเพิ่มโครงการจากในชั้นเรียนของเราลงไปที่นั่นได้อย่างไร โดยที่เรารวบรวมอินพุตของผู้ใช้จากภายในตัวจัดการการส่ง

05:15.990 --> 05:17.940
เราจะเรียก add project ได้อย่างไร?

05:17.940 --> 05:25.690
และเราจะส่งรายการโครงการที่อัปเดตเมื่อใดที่เปลี่ยนเป็นคลาสรายการโครงการได้อย่างไร

05:25.690 --> 05:29.230
แน่นอนว่านี่คือสองประเด็นที่เราเผชิญอยู่ในขณะนี้

05:29.230 --> 05:31.840
สิ่งหนึ่งที่ฉันจะทำที่นี่

05:31.840 --> 05:36.499
คือฉันจะสร้างตัวอย่างสถานะของโปรเจ็กต์ที่นี่

05:36.499 --> 05:39.720
อินสแตนซ์ส่วนกลาง ซึ่งเราสามารถใช้ได้จากไฟล์ทั้งหมด

05:39.720 --> 05:42.760
และฉันจะทำทันทีหลังจากที่เราสร้างคลาสนั้น

05:42.760 --> 05:50.370
ตรงนี้ฉันมีค่าคงที่สถานะโปรเจ็กต์โดยที่ฉันสร้างอินสแตนซ์สถานะโปรเจ็กต์แบบนี้

05:50.370 --> 05:54.620
ด้วยวิธีนี้ นี่คือค่าคงที่ส่วนกลางที่สามารถใช้ได้ทุกที่ในไฟล์

05:54.620 --> 06:01.660
ดังนั้นการพูดคุยกับคลาสนั้นจึงง่ายมาก คุณแค่ต้องใช้ค่าคงที่ส่วนกลางที่นี่

06:01.660 --> 06:06.430
เรายังสามารถใช้คุณสมบัติที่เราได้เรียนรู้ทั้งหมดเกี่ยวกับตัวสร้างส่วนตัว

06:06.430 --> 06:09.170
เพื่อรับประกันว่านี่คือคลาสซิงเกิลตัน

06:09.170 --> 06:11.950
เราสามารถสร้างตัวสร้างส่วนตัวที่นี่ จากนั้นเรามีคุณสมบัติส่วนตัวอีกอันที่นี่

06:11.950 --> 06:14.300
อินสแตนซ์ซึ่งเป็นประเภทโปรเจ็กต์สเตต

06:14.300 --> 06:18.933
ดังนั้นคลาสนี้จึงเป็นประเภทเดียวกัน

06:20.640 --> 06:24.360
จากนั้นเราก็เพิ่มเมธอด get ตัวอย่างที่นี่ ซึ่งเป็นเมธอดแบบสแตติก

06:24.360 --> 06:30.050
ซึ่งเราจะตรวจสอบว่านี่

06:30.050 --> 06:30.050
อินสแตนซ์เป็นสิ่งหนึ่ง

06:31.020 --> 06:33.970
และสำหรับสิ่งนั้น จริง ๆ แล้วมันต้องเป็นอินสแตนซ์แบบสแตติกด้วย

06:33.970 --> 06:35.800
ฉันหมายถึงคุณสมบัติแบบสแตติก

06:35.800 --> 06:37.100
ถ้านี่คือสิ่งหนึ่ง ถ้าใช่

06:37.100 --> 06:39.550
เราจะส่งคืนสิ่งนี้ ดังนั้นเราจะส่งคืนอินสแตนซ์เดียวที่เราได้รับ

06:39.550 --> 06:44.590
มิฉะนั้น เราจะสร้างอินสแตนซ์ใหม่

06:44.590 --> 06:50.423
อย่างอื่นก็ประมาณนี้

06:50.423 --> 06:50.423
อินสแตนซ์จะเท่ากับสถานะโครงการใหม่

06:50.450 --> 06:52.963
แล้วเราคืนสิ่งนี้ ตัวอย่าง.

06:54.740 --> 07:00.903
จากนี้ไป เราสามารถเรียกรับอินสแตนซ์ลงไปได้ แบบนี้ ProjectState

07:00.903 --> 07:00.903
getInstance

07:02.650 --> 07:11.700
และเรารับประกันว่าจะทำงานกับออบเจกต์เดียวกันเสมอ และจะมีออบเจ็กต์ประเภทเดียวเท่านั้นในแอปพลิเคชันทั้งหมด

07:11.700 --> 07:12.840
ซึ่งเป็นแนวคิดที่นี่

07:12.840 --> 07:17.503
เพราะฉันต้องการมีวัตถุการจัดการสถานะเดียวสำหรับโครงการของเรา

07:17.503 --> 07:21.563
นั่นคือสถานะของโปรเจ็กต์ที่มีตัวสร้างซิงเกิลตันตอนนี้

07:22.730 --> 07:25.890
ตอนนี้เรามีค่าคงที่สถานะโปรเจ็กต์แล้ว

07:25.890 --> 07:30.270
ลงไปที่คลาสอินพุตโครงการซึ่งเรารวบรวมอินพุตของผู้ใช้

07:30.270 --> 07:33.950
ตอนนี้เราสามารถเรียก projectState ได้แล้ว addProject และส่งต่อชื่อเรื่อง

07:33.950 --> 07:40.960
คำอธิบาย และผู้คน เราได้รับกลับมาจากการรวบรวมข้อมูลของผู้ใช้ในตอนท้าย

07:40.960 --> 07:43.920
ดังนั้นตอนนี้ควรสร้างโครงการนี้

07:43.920 --> 07:47.140
ตอนนี้เราต้องส่งข้อมูลว่าเรามีโปรเจ็กต์ใหม่ไปยังคลาสรายการโปรเจ็กต์ของเรา

07:47.140 --> 07:56.500
เพราะนั่นคือคลาสที่มีหน้าที่ส่งออกบางอย่างไปยังหน้าจอ

07:56.500 --> 08:00.350
และเพื่อสิ่งนั้น ฉันอยากจะตั้งค่ารูปแบบการสมัครสมาชิกในตอนท้าย

08:00.350 --> 08:03.020
โดยที่ภายในสถานะโปรเจ็กต์ของเรา เราจัดการรายการฟัง

08:03.020 --> 08:05.730
ดังนั้นรายการของฟังก์ชันในตอนท้าย

08:05.730 --> 08:11.600
ซึ่งควรถูกเรียกใช้เมื่อใดก็ตามที่มีการเปลี่ยนแปลง

08:11.600 --> 08:15.830
เพื่อที่ฉันจะเพิ่มอีกทรัพย์สินส่วนตัวที่นี่ผู้ฟัง

08:15.830 --> 08:18.810
และผู้ฟังจะเป็นอาร์เรย์ที่ว่างเปล่า และสำหรับตอนนี้

08:18.810 --> 08:25.543
อีกครั้ง เป็นเพียงอาร์เรย์ของอะไรก็ได้ที่เราจะระบุในรายละเอียดมากกว่านี้ในภายหลัง

08:26.760 --> 08:31.382
ตอนนี้ฉันต้องการมีเมธอดที่นี่ addListener

08:31.382 --> 08:39.150
ที่ฉันได้รับฟังก์ชันฟัง ดังนั้นนี่ควรเป็นฟังก์ชันในตอนท้ายที่นี่

08:39.150 --> 08:41.370
แล้วฉันจะเพิ่มสิ่งนี้ให้กับผู้ฟังของฉัน

08:41.370 --> 08:46.500
ดังนั้นเราจึงผลักดันฟังก์ชันผู้ฟังที่นี่ไปยังอาร์เรย์ผู้ฟัง

08:46.500 --> 08:49.580
ทีนี้ความคิดที่จะให้อาร์เรย์ผู้ฟังนั้นเป็นอย่างไร

08:49.580 --> 08:51.110
มันเป็นอาร์เรย์ของฟังก์ชัน

08:51.110 --> 08:53.070
การอ้างอิงฟังก์ชันใช่ไหม

08:53.070 --> 08:55.250
แนวคิดคือเมื่อใดก็ตามที่มีการเปลี่ยนแปลง

08:55.250 --> 08:59.790
เช่น เมื่อเราเพิ่มโปรเจ็กต์ใหม่ เราจะเรียกฟังก์ชันฟังทั้งหมด

08:59.790 --> 09:04.720
ดังนั้นเราจึงวนผ่านฟังชันทั้งหมด ของฟังนี้ และผ่านฟังก์ชันฟังทั้งหมด

09:04.720 --> 09:07.330
และเนื่องจากสิ่งเหล่านี้เป็นการอ้างอิงฟังก์ชัน

09:07.330 --> 09:11.593
เราจึงดำเนินการสิ่งนี้เป็นฟังก์ชันได้

09:13.010 --> 09:14.630
และไปยังฟังก์ชันนั้น

09:14.630 --> 09:18.620
เราจะส่งสิ่งที่เกี่ยวข้องกับมัน ตามสถานะที่เรากำลังจัดการ

09:18.620 --> 09:23.280
ซึ่งในกรณีนี้ ในคลาสนี้คือรายการโครงการของเรา

09:23.280 --> 09:27.983
นี่คือสถานะที่คลาสนี้รับผิดชอบ

09:29.100 --> 09:35.170
ตรงนี้ ฉันส่งต่อโปรเจกต์นี้และจะเรียกสไลซ์เพื่อส่งกลับเฉพาะสำเนาของอาร์เรย์นั้น

09:35.170 --> 09:39.100
ไม่ใช่อาร์เรย์ดั้งเดิม

09:39.100 --> 09:44.210
เพื่อไม่ให้แก้ไขจากที่ที่ฟังชั่นฟังชั่นมา

09:44.210 --> 09:45.760
เนื่องจากอาร์เรย์และออบเจกต์เป็นค่าอ้างอิงใน

09:45.760 --> 09:54.380
Javascript ดังนั้นหากคุณจะส่งต่ออาร์เรย์เดิม เราสามารถแก้ไขได้จากภายนอกและในทางกลับกัน หากเราพุชบางอย่างจากภายในคลาสนี้

09:54.380 --> 09:59.830
มันจะเปลี่ยนไปที่อื่นอยู่แล้ว ในแอป แต่สถานที่เหล่านี้จะไม่สังเกตว่ามีการเปลี่ยนแปลง

09:59.830 --> 10:12.770
ดังนั้นมันอาจแนะนำจุดบกพร่องแปลก ๆ หากเราส่งต่อการอ้างอิงดั้งเดิม ซึ่งเป็นเหตุผลที่ฉันส่งต่อสำเนาใหม่ล่าสุด อาร์เรย์ใหม่ล่าสุดที่นี่

10:12.770 --> 10:15.390
ตอนนี้ฟังก์ชันฟังทุกฟังก์ชันกำลังดำเนินการและได้รับสำเนาของเรา

10:15.390 --> 10:19.400
ซึ่งเป็นสำเนาใหม่ของโปรเจ็กต์

10:19.400 --> 10:23.800
ตอนนี้เราต้องไปยังสถานที่ที่เราต้องการทราบเกี่ยวกับการเปลี่ยนแปลง

10:23.800 --> 10:29.030
ในกรณีของเรา คลาสรายการโครงการที่นี่ และตั้งค่าผู้ฟังดังกล่าว

10:29.030 --> 10:32.880
ดังนั้นที่นี่ ใน Constructor ของคลาสรายการโปรเจ็กต์

10:32.880 --> 10:35.546
ก่อนที่เราจะแนบและเรนเดอร์เนื้อหา

10:35.546 --> 10:38.010
ฉันจะติดต่อ ProjectState และเรียก

10:38.010 --> 10:40.110
AddListener ที่นี่เพื่อลงทะเบียนฟังก์ชัน

10:40.110 --> 10:43.720
Listener ที่นี่

10:43.720 --> 10:46.150
อย่างที่ผมบอกไป ตอนนี้ Listener คือฟังก์ชัน

10:46.150 --> 10:49.100
ดังนั้นเราต้องส่งฟังก์ชันไปยัง addListener

10:49.100 --> 10:51.210
เนื่องจากผู้ฟังที่เรากำลังจัดการที่นี่ในสถานะโครงการ

10:51.210 --> 10:52.610
นั่นเป็นเพียงรายการของฟังก์ชัน

10:52.610 --> 10:57.773
ซึ่งในที่สุดเราจะเรียกใช้เมื่อมีบางสิ่งเปลี่ยนแปลงใช่ไหม

10:58.840 --> 11:01.110
ดังนั้นฉันจะต้องส่งฟังก์ชันไปยังฟังก์ชัน

11:01.110 --> 11:04.990
addListener ของฉันที่นี่

11:04.990 --> 11:07.520
ที่นี่ฉันกำลังส่งฟังก์ชันลูกศรนิรนาม

11:07.520 --> 11:14.400
และฟังก์ชันนั้นจะได้รับรายชื่อโปรเจ็กต์เมื่อเรียกจากภายในโปรเจ็กต์สเตท

11:14.400 --> 11:17.430
เราจึงได้รายการของโปรเจ็กต์ เรารู้ว่าภายในเนื้อหาของฟังก์ชันนี้

11:17.430 --> 11:21.560
เราสามารถใช้รายการของโปรเจ็กต์นี้ได้

11:21.560 --> 11:28.410
และที่นี่ฉันจะเพิ่มฟิลด์ใหม่ลงในรายการโปรเจ็กต์ บางทีโปรเจกต์ที่ได้รับมอบหมายอาจเป็นประเภทอาร์เรย์ใดก็ได้

11:28.410 --> 11:30.310
ดังนั้นอะไรก็ได้ในอาร์เรย์

11:30.310 --> 11:37.630
และอาร์เรย์ของค่าใดๆ แน่นอนว่าฉันจะระบุสิ่งนี้โดยละเอียดในภายหลังด้วย

11:37.630 --> 11:41.780
ในที่นี้เราสามารถพูดได้ว่าโปรเจ็กต์ที่กำหนดให้นี้เท่ากับโปรเจ็กต์

11:41.780 --> 11:44.240
ดังนั้นสำหรับโครงการที่เรากำลังได้รับ

11:44.240 --> 11:45.870
ตอนนี้เพื่อกำจัดข้อผิดพลาดประเภทใด

11:45.870 --> 11:51.563
ๆ โดยนัยฉันต้องชัดเจนว่านี่จะเป็นอาร์เรย์ของอะไรก็ได้ที่นี่

11:52.610 --> 11:57.660
ตอนนี้ฉันกำลังเพิ่มโครงการที่ฉันได้รับเพราะมีบางอย่างเปลี่ยนไปในสถานะของฉัน

11:57.660 --> 12:00.530
ที่นี่สำหรับโครงการที่ได้รับมอบหมายของฉันซึ่งฉันไม่ได้เพิ่ม

12:00.530 --> 12:04.170
ฉันกำลังแทนที่โครงการที่ได้รับมอบหมายด้วยโครงการใหม่

12:04.170 --> 12:08.223
แล้วความคิดของฉันคือการแสดงโครงการทั้งหมดเหล่านี้

12:09.080 --> 12:10.883
เพื่อที่เราจะสามารถเพิ่มวิธีการใหม่;

12:11.951 --> 12:15.080
ตัวอย่างเช่น renderPrjects

12:15.080 --> 12:16.920
ซึ่งผมอยากเรียกจากที่นี่

12:16.920 --> 12:20.063
โปรเจกต์การเรนเดอร์นี้ แบบนี้

12:22.230 --> 12:24.120
มันสิ้นสุดจาก renderProjects

12:24.120 --> 12:27.480
ฉันจะติดต่อรายการนี้ที่นี่ เรากำหนด ID

12:27.480 --> 12:31.290
นั้นเมื่อเราแสดงเนื้อหา ซึ่งเราทำที่นี่

12:31.290 --> 12:34.440
ดูเหมือนว่าเราจะทำสิ่งนี้หลังจากที่มีการเรียก renderProjects

12:34.440 --> 12:40.230
แต่โปรดจำไว้ว่านั่นจะจบลงที่ฟังก์ชัน ซึ่งท้ายที่สุดจะถูกเรียกใช้ก็ต่อเมื่อมีการเพิ่มโปรเจ็กต์ใหม่เท่านั้น

12:40.230 --> 12:43.510
ดังนั้น RenderContent จะทำงานก่อน

12:43.510 --> 12:58.030
ดังนั้นใน renderProjects เราสามารถพึ่งพา ID นี้ที่กำหนดให้กับรายการที่ไม่มีลำดับ ดังนั้นที่นี่เราสามารถคว้ามันและรับองค์ประกอบรายการของเราโดยใช้เอกสาร

12:58.030 --> 12:58.030
getElementbyId

12:58.469 --> 13:03.690
จากนั้นฉันก็ส่งต่อตัวระบุ ID นี้โดยใช้ประเภทของคลาสรายการโครงการที่เป็นรูปธรรมนี้

13:03.690 --> 13:08.563
จากนั้นใช้ ID ที่เหลือที่เราสร้างขึ้น

13:09.580 --> 13:14.170
และในรายการนั้น ผมต้องการแสดงโครงการทั้งหมดที่เรามี

13:14.170 --> 13:21.060
ดังนั้นฉันจะดูรายการโครงการทั้งหมดของโครงการที่ได้รับมอบหมายที่นี่

13:21.060 --> 13:23.983
จากนั้นสำหรับทุกรายการ ฉันต้องการเพิ่มบางอย่างในรายการ

13:23.983 --> 13:25.380
และเราจะปรับแต่งในภายหลัง

13:25.380 --> 13:32.480
ในขณะนี้ ฉันจะเรียก appendChild ที่นี่ในองค์ประกอบรายการของฉัน

13:32.480 --> 13:36.970
โดยวิธีการที่นี่เราควรเพิ่มเครื่องหมายอัศเจรีย์เพื่อให้ชัดเจนว่านี่จะไม่เป็นโมฆะ

13:36.970 --> 13:45.420
เรายังสามารถส่งสิ่งนี้ไปยังองค์ประกอบรายการ HTML UL ดังนั้นไปยังองค์ประกอบรายการที่ไม่มีลำดับเพราะนั่นคือสิ่งที่จะเป็น

13:45.420 --> 13:56.160
จากนั้นเราสามารถต่อท้ายเด็กที่นี่และนั่นควรเป็นรายการใหม่ทั้งหมด ดังนั้นที่นี่เราสามารถสร้างรายการของเราด้วยเอกสาร

13:56.160 --> 13:56.160
createElement LI

13:56.160 --> 14:03.950
และในรายการนั้นที่นี่ ฉันจะตั้งค่าเนื้อหาข้อความเท่ากับรายการโครงการ

14:03.950 --> 14:03.950
ชื่อ.

14:03.950 --> 14:06.240
ทุกรายการของโปรเจ็กต์จะเป็นโปรเจ็กต์เมื่อเราสร้างมันขึ้นมาในสถานะโปรเจ็กต์

14:06.240 --> 14:13.100
ดังนั้นมันจึงเป็นอ็อบเจกต์ และดังนั้นจึงมีชื่อเรื่อง

14:14.210 --> 14:18.880
ตอนนี้ถ้าเราลงไปที่นั่นเรามีรายการของเราซึ่งตอนนี้ถูกเพิ่มที่นี่

14:18.880 --> 14:20.730
และเมื่อเราเกือบเสร็จแล้ว

14:20.730 --> 14:22.340
การแก้ไขที่เหลืออยู่ที่นี่

14:22.340 --> 14:23.740
ฉันตั้งค่าฟิลด์นั้น

14:23.740 --> 14:27.080
แต่ในคอนสตรัคเตอร์ ฉันไม่เคยอ้างอิงมันเลย

14:27.080 --> 14:29.090
เฉพาะที่นี่ในฟังก์ชั่นฟังของฉัน

14:29.090 --> 14:32.640
แต่อย่างที่กล่าวไว้ สิ่งนี้ไม่ทำงานทันทีในตัวสร้าง

14:32.640 --> 14:37.640
สิ่งที่ฉันจะทำตรงนี้คือ ฉันจะตั้งค่าโปรเจ็กต์ที่กำหนดให้เท่ากับอาร์เรย์ว่างตรงนี้ในตอนแรก

14:38.970 --> 14:41.200
เพื่อที่เราทุกคนจะได้มีความสุข

14:41.200 --> 14:44.450
และสิ่งนี้เริ่มต้นได้

14:44.450 --> 14:45.510
ตอนนี้ถ้าเราบันทึกสิ่งนี้

14:45.510 --> 14:47.780
มันควรจะคอมไพล์โดยไม่มีข้อผิดพลาด

14:47.780 --> 14:50.400
และตอนนี้ถ้าเราเพิ่มบางอย่างเข้าไป

14:50.400 --> 14:51.993
มันจะได้ผลไหม?

14:53.480 --> 14:56.270
เราเห็นมันปรากฏในรายการของเรา

14:56.270 --> 14:58.270
ในทั้งสองรายการในขณะนี้ เนื่องจากเราไม่มีตรรกะการกรอง

14:58.270 --> 15:00.847
และอื่นๆ

15:00.847 --> 15:03.210
และนั่นเป็นสิ่งที่เราสามารถแก้ไขได้ในภายหลัง

15:03.210 --> 15:06.220
แต่มันได้ผล และนั่นคือสิ่งสำคัญ

15:06.220 --> 15:08.390
ตอนนี้คุณเห็นว่าเรามีข้อบกพร่องที่นี่เช่นกัน

15:08.390 --> 15:10.260
ถ้าฉันเพิ่มองค์ประกอบที่สอง

15:10.260 --> 15:12.370
เราจะทำซ้ำองค์ประกอบสุดท้ายและเพิ่มองค์ประกอบใหม่

15:12.370 --> 15:15.490
นั่นคือสิ่งที่เราต้องแก้ไข

15:15.490 --> 15:21.270
และนี่คือทุกสิ่งที่เราจะจัดการ แต่ตอนนี้อย่างน้อยเราก็สามารถแสดงผลลัพธ์บางอย่างกับสิ่งนั้นได้

15:21.270 --> 15:24.450
เรามาดำดิ่งสู่การปรับปรุงทั้งหมด เช่น ชัดเจนขึ้นเกี่ยวกับประเภทที่เราใช้

15:24.450 --> 15:30.733
หลีกเลี่ยงเอาต์พุตที่ซ้ำกัน และอื่นๆ อีกมากมาย เช่น ดี.
