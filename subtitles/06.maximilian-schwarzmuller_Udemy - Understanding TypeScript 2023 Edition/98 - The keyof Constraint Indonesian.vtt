WEBVTT

00:02.230 --> 00:03.280
Instruktur: Jadi, kita sudah

00:03.280 --> 00:04.930
mendapatkan dasar-dasar tentang generik,

00:04.930 --> 00:07.150
sekarang mari kita selami lebih dalam tentang batasan,

00:07.150 --> 00:09.250
atau ke dalam satu jenis batasan tertentu, yang dapat

00:09.250 --> 00:10.400
Anda tambahkan.

00:10.400 --> 00:12.680
Untuk itu saya akan menukar fungsi lain,

00:12.680 --> 00:16.293
fungsi generik, yang akan saya beri nama extractAndConvert.

00:18.700 --> 00:21.550
Ide dari fungsi ini di sini adalah bahwa kita

00:21.550 --> 00:24.120
mendapatkan objek sebagai argumen pertama,

00:24.120 --> 00:26.340
dan parameter kedua, pada akhirnya,

00:26.340 --> 00:28.413
adalah sebuah kunci.

00:30.050 --> 00:32.570
Sekarang saya ingin mengembalikan nilai untuk kunci itu dalam objek,

00:32.570 --> 00:35.310
yang dapat kita lakukan dengan notasi JavaScript default ini.

00:35.310 --> 00:36.310
Menggunakan tanda kurung

00:36.310 --> 00:38.200
siku untuk exe sebagai properti dalam sebuah

00:38.200 --> 00:39.840
objek, tetapi itu bukan hal yang spesifik

00:39.840 --> 00:42.010
TypeScript, itu Vanilla JavaScript lagi.

00:42.010 --> 00:43.000
Nah oleh karena itu di sini

00:43.000 --> 00:44.580
kita bisa mengatakan bahwa di sini kita

00:44.580 --> 00:48.460
ingin memiliki objek, dan untuk kuncinya kita ingin memiliki string, katakanlah.

00:48.460 --> 00:50.160
Sekarang di sini saya mendapatkan

00:50.160 --> 00:52.000
error, karena pada akhirnya kita tidak

00:52.000 --> 00:54.500
tahu di sini, apakah objek yang kita dapatkan di

00:54.500 --> 00:57.510
sini benar-benar akan memiliki kunci itu.

00:57.510 --> 00:59.410
Itulah akhir dari apa yang TypeScript katakan

00:59.410 --> 01:01.430
kepada kita dengan kesalahan aneh ini.

01:01.430 --> 01:02.530
Sebagai contoh di

01:02.530 --> 01:05.700
sini, saya bisa console log hasil dari pemanggilan

01:05.700 --> 01:09.770
ini dengan katakanlah, objek kosong dan kemudian nama.

01:09.770 --> 01:12.600
Dan di sini saya menyebutnya extractAndConvert,

01:12.600 --> 01:16.025
karena saya ingin memanggil ini tanpa log konsol dan hanya

01:16.025 --> 01:18.600
mengatakan Value, colon, plus.

01:18.600 --> 01:19.660
Tapi itu hanya catatan sampingan

01:19.660 --> 01:22.450
yang saya kembalikan kita tersesat pada akhirnya dengan data yang diambil itu.

01:22.450 --> 01:23.840
Tetapi masalah utama di sini adalah,

01:23.840 --> 01:25.160
saya bisa memanggilnya seperti ini

01:26.091 --> 01:28.020
dan akan mengoper objek sebagai parameter pertama,

01:28.020 --> 01:29.890
dan kemudian string sebagai parameter kedua.

01:29.890 --> 01:31.430
Tetapi dengan benar, TypeScript memberitahu

01:31.430 --> 01:33.200
saya bahwa pada akhirnya tidak dijamin

01:33.200 --> 01:35.193
bahwa key ini ada di objek ini.

01:36.420 --> 01:39.920
Sekarang untuk menjamin hal ini, kita bisa kembali menggunakan tipe generik di sini.

01:39.920 --> 01:41.620
Kita bisa mengatakan bahwa kita punya tipe T,

01:41.620 --> 01:43.130
dan itu akan menjadi objek kita di sini.

01:43.130 --> 01:46.550
Kita bisa mengatakan, memperluas objek.

01:46.550 --> 01:48.363
Tapi kita juga harus mengetik U.

01:49.440 --> 01:52.850
Kunci kita di sini katakanlah, yang pada akhirnya,

01:52.850 --> 01:56.320
harus menjadi kunci dari tipe-T kita.

01:56.320 --> 01:58.210
Jadi dari objek ini, kita ingin menjamin

01:58.210 --> 02:01.560
bahwa apa yang kita dapatkan di sini sebagai parameter kedua

02:01.560 --> 02:04.890
sebagai kunci adalah properti dari tipe pertama.

02:04.890 --> 02:09.130
Dan untuk itu kita bisa mengatakan memperpanjang kunci T.

02:11.550 --> 02:13.540
Dan sekarang Anda lihat errornya hilang

02:13.540 --> 02:15.370
di sini, dan sebagai gantinya saya mendapatkan

02:15.370 --> 02:17.930
error di sana, karena sekarang saya menginformasikan

02:17.930 --> 02:21.800
TypeScript di sini, bahwa parameter pertama harus berupa objek apa pun, dan

02:21.800 --> 02:23.610
parameter kedua harus berupa kunci

02:23.610 --> 02:25.870
apa pun dalam objek itu.

02:25.870 --> 02:28.480
Dan di sini, ya kita mengoperkan segala jenis objek, tetapi

02:28.480 --> 02:30.430
kita tidak memiliki kunci nama di sana.

02:30.430 --> 02:34.990
Kesalahan ini hanya akan hilang begitu saya menambahkan kunci nama.

02:34.990 --> 02:37.990
Jadi ini semua adalah waktu untuk kita dapat menggunakan tipe generik

02:37.990 --> 02:41.800
untuk dengan keyoff keyword di sini juga, untuk memberitahu TypeScript bahwa kita

02:41.800 --> 02:45.730
ingin memastikan bahwa kita memiliki struktur yang benar ini, dan tentu saja sangat

02:45.730 --> 02:47.460
berguna, karena memungkinkan kita untuk

02:47.460 --> 02:49.120
memastikan bahwa kita tidak membuat

02:49.120 --> 02:51.160
kesalahan bodoh, di mana kita mencoba memanggil

02:51.160 --> 02:53.390
fungsi ini, yang pada akhirnya, kita mencoba untuk

02:53.390 --> 02:56.740
exe sebagai properti yang tidak ada.

02:56.740 --> 02:58.140
Jadi ini berhasil.

02:58.140 --> 02:59.870
Tetapi jika saya mencoba untuk exe sebagai 'age' di

02:59.870 --> 03:01.570
sini, saya kembali mendapatkan error, misalnya.

03:02.890 --> 03:05.560
Jadi, mari kita alihkan ini kembali ke 'nama'.
