WEBVTT

1
00:00:02.260 --> 00:00:03.960
<v Instructor>With that, we're almost done</v>

2
00:00:03.960 --> 00:00:04.920
with the core types.

3
00:00:04.920 --> 00:00:07.470
There is one more type, which we already saw,

4
00:00:07.470 --> 00:00:09.390
and that's the any type.

5
00:00:09.390 --> 00:00:11.480
The any type is the most flexible type

6
00:00:11.480 --> 00:00:13.310
you can assign in TypeScript.

7
00:00:13.310 --> 00:00:16.710
This type doesn't tell TypeScript anything.

8
00:00:16.710 --> 00:00:19.960
It basically means you can store any kind of value in there.

9
00:00:19.960 --> 00:00:22.031
We got no specific type assignment.

10
00:00:22.031 --> 00:00:25.260
TypeScript will basically never yell at you

11
00:00:25.260 --> 00:00:27.040
when you use any.

12
00:00:27.040 --> 00:00:28.030
Back in our code here,

13
00:00:28.030 --> 00:00:31.360
if I would set the type of favorite activities to any,

14
00:00:31.360 --> 00:00:32.870
would not get an error.

15
00:00:32.870 --> 00:00:36.580
If it set it to any array, I at least tell TypeScript

16
00:00:36.580 --> 00:00:39.220
that favorite activities is an array of something.

17
00:00:39.220 --> 00:00:41.460
So if I would store just a single value I there,

18
00:00:41.460 --> 00:00:42.830
I would get an error.

19
00:00:42.830 --> 00:00:44.500
But as long as it is an array,

20
00:00:44.500 --> 00:00:46.638
I can store whatever I want in there.

21
00:00:46.638 --> 00:00:49.840
So any is really flexible.

22
00:00:49.840 --> 00:00:52.070
And this can sound great at fist,

23
00:00:52.070 --> 00:00:54.060
but actually it's a big disadvantage

24
00:00:54.060 --> 00:00:58.290
and you absolutely want to avoid any whenever possible.

25
00:00:58.290 --> 00:01:00.170
Because any takes away basically

26
00:01:00.170 --> 00:01:02.512
all advantages TypeScript gives you.

27
00:01:02.512 --> 00:01:04.380
It gives you the same experience

28
00:01:04.380 --> 00:01:06.430
you have with vanilla JavaScript

29
00:01:06.430 --> 00:01:10.480
where you also have to any type on everything so to say.

30
00:01:10.480 --> 00:01:13.820
Any basically makes sure that the TypeScript compiler

31
00:01:13.820 --> 00:01:16.020
can't check anything,

32
00:01:16.020 --> 00:01:19.180
because if any property or any variable

33
00:01:19.180 --> 00:01:20.818
can store any value,

34
00:01:20.818 --> 00:01:23.687
well then there is not much to check, right?

35
00:01:23.687 --> 00:01:27.130
So you can use any as a fallback

36
00:01:27.130 --> 00:01:30.270
if you have some value, some kind of data

37
00:01:30.270 --> 00:01:31.810
where you really can't know

38
00:01:31.810 --> 00:01:33.820
which kind of data will be stored in there

39
00:01:33.820 --> 00:01:37.050
and where you then maybe are using some runtime checks,

40
00:01:37.050 --> 00:01:40.440
like we did here, at runtime to narrow down

41
00:01:40.440 --> 00:01:42.660
what you want to do for certain values.

42
00:01:42.660 --> 00:01:44.600
Then you could go with any.

43
00:01:44.600 --> 00:01:48.210
But in other cases, you really wanna avoid any.

44
00:01:48.210 --> 00:01:51.120
If you have a chance of knowing which kind of data

45
00:01:51.120 --> 00:01:54.090
you're working with, be explicit about it.

46
00:01:54.090 --> 00:01:56.780
Let TypeScript inference do its job

47
00:01:56.780 --> 00:01:58.817
or explicitly set your own types.

48
00:01:58.817 --> 00:02:01.783
Don't fall back to any if you don't need to.

