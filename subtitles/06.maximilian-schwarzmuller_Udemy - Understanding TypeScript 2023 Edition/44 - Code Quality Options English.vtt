WEBVTT

1
00:00:02.220 --> 00:00:03.053
<v Instructor>Now if you move on,</v>

2
00:00:03.053 --> 00:00:04.883
we got more options, noUnusedLocals,

3
00:00:04.883 --> 00:00:07.920
noUnusedParameters, noImplicitReturns.

4
00:00:07.920 --> 00:00:10.470
This helps you with code quality, basically.

5
00:00:10.470 --> 00:00:13.110
TypeScript will complain if you have

6
00:00:13.110 --> 00:00:15.930
certain unused variables and so on.

7
00:00:15.930 --> 00:00:20.930
So if we turn these three options on, for example,

8
00:00:21.711 --> 00:00:24.230
this option helps you with Switch statements,

9
00:00:24.230 --> 00:00:26.270
where you might forget the break keyword.

10
00:00:26.270 --> 00:00:28.880
But if we turn these three options on,

11
00:00:28.880 --> 00:00:31.760
what TypeScript will complain about is, for example,

12
00:00:31.760 --> 00:00:33.600
if you had a username variable here,

13
00:00:33.600 --> 00:00:36.730
locally in this function, and you don't use it.

14
00:00:36.730 --> 00:00:39.490
You see, this has yellow squiggly lines

15
00:00:39.490 --> 00:00:41.500
because it's not an error, really.

16
00:00:41.500 --> 00:00:43.179
It's more like a warning or a hint.

17
00:00:43.179 --> 00:00:45.643
So if I compile here,

18
00:00:47.750 --> 00:00:49.500
you'll see now, however, I do get an error

19
00:00:49.500 --> 00:00:51.900
because TypeScript only knows errors.

20
00:00:51.900 --> 00:00:54.140
And there we see that the username is declared,

21
00:00:54.140 --> 00:00:57.080
but its value is never read because we made sure

22
00:00:57.080 --> 00:01:00.550
that we don't want unused local variables.

23
00:01:00.550 --> 00:01:02.483
Unused global variables,

24
00:01:03.440 --> 00:01:06.340
so if I had something like appId here,

25
00:01:06.340 --> 00:01:09.130
are allowed though because TypeScript can't know

26
00:01:09.130 --> 00:01:12.370
if you maybe need that globally defined value

27
00:01:12.370 --> 00:01:13.870
in another script file.

28
00:01:13.870 --> 00:01:14.980
So therefore this is allowed,

29
00:01:14.980 --> 00:01:17.280
but in a function where there is no other place

30
00:01:17.280 --> 00:01:20.010
where you could need it, TypeScript will complain now

31
00:01:20.010 --> 00:01:22.020
if you have unused code.

32
00:01:22.020 --> 00:01:23.540
And that's generally a good idea.

33
00:01:23.540 --> 00:01:26.021
Allows you to strip out such unused code.

34
00:01:26.021 --> 00:01:28.510
Same goes for unused parameters.

35
00:01:28.510 --> 00:01:31.350
If you would take a H here

36
00:01:31.350 --> 00:01:33.050
where one, of course, bind is broken now,

37
00:01:33.050 --> 00:01:35.970
but even if we pass this in this works,

38
00:01:35.970 --> 00:01:39.220
but now, again, TypeScript and therefore the ID tells us

39
00:01:39.220 --> 00:01:41.780
that this is unused and either this,

40
00:01:41.780 --> 00:01:44.293
so maybe you should remove it or start using it.

41
00:01:45.238 --> 00:01:48.173
So that's noUnusedParameters.

42
00:01:48.173 --> 00:01:51.365
And noImplicitReturns means that we'll get an error

43
00:01:51.365 --> 00:01:55.620
if we have a function that sometimes returns something

44
00:01:55.620 --> 00:01:57.130
and sometimes it does not.

45
00:01:57.130 --> 00:02:00.913
Let's say we have another function, add,

46
00:02:01.912 --> 00:02:02.940
where we get two numbers.

47
00:02:02.940 --> 00:02:05.906
Number and n2 is a number.

48
00:02:05.906 --> 00:02:10.906
And, of course we can return n1 plus n2.

49
00:02:14.030 --> 00:02:15.710
But let's say we're, for some reason,

50
00:02:15.710 --> 00:02:18.518
checking if n1 plus n2 is greater than zero,

51
00:02:18.518 --> 00:02:21.800
because we only want to return if we have a result

52
00:02:21.800 --> 00:02:23.700
greater than zero.

53
00:02:23.700 --> 00:02:25.040
Then we want a returned value.

54
00:02:25.040 --> 00:02:26.940
Otherwise we want to return nothing.

55
00:02:26.940 --> 00:02:28.170
We don't want a return.

56
00:02:28.170 --> 00:02:30.550
Well, then we get a warning because of that extra setting

57
00:02:30.550 --> 00:02:32.598
with noImplicitReturns.

58
00:02:32.598 --> 00:02:36.401
TypeScript detects that not all branches in this function

59
00:02:36.401 --> 00:02:38.760
lead to a return statement

60
00:02:38.760 --> 00:02:40.650
and because of our setting, that's not allowed.

61
00:02:40.650 --> 00:02:44.150
We at least have to deliberately not return anything here

62
00:02:44.150 --> 00:02:45.790
by adding the return keyword.

63
00:02:45.790 --> 00:02:48.260
Just omitting it is not allowed here.

64
00:02:48.260 --> 00:02:49.730
It is allowed if you have a function

65
00:02:49.730 --> 00:02:52.446
that does not return anything, in no branch,

66
00:02:52.446 --> 00:02:54.520
but if you have at least one case

67
00:02:54.520 --> 00:02:56.423
where your function does return something,

68
00:02:56.423 --> 00:02:58.770
then you have to make sure that you return something

69
00:02:58.770 --> 00:02:59.933
in all cases.

70
00:03:01.830 --> 00:03:03.130
And with that, we're nearing the end

71
00:03:03.130 --> 00:03:04.240
of this config walkthrough.

72
00:03:04.240 --> 00:03:06.526
We can ignore the moduleResolution here.

73
00:03:06.526 --> 00:03:08.933
All these options actually are pretty advanced,

74
00:03:08.933 --> 00:03:10.830
that don't matter to us here,

75
00:03:10.830 --> 00:03:13.510
don't matter to you in a lot of projects.

76
00:03:13.510 --> 00:03:16.600
Source Map Options allow you to tweak these source maps

77
00:03:16.600 --> 00:03:18.180
we had a look at earlier.

78
00:03:18.180 --> 00:03:21.440
So these translation files from JavaScript to TypeScript.

79
00:03:21.440 --> 00:03:23.720
Typically default settings should be fine here,

80
00:03:23.720 --> 00:03:26.000
so if you don't know what you're changing

81
00:03:26.000 --> 00:03:27.010
and why you're doing it,

82
00:03:27.010 --> 00:03:29.470
you typically don't need to change anything here.

83
00:03:29.470 --> 00:03:31.512
And regarding these experimental options,

84
00:03:31.512 --> 00:03:34.380
I'll have a look at them,

85
00:03:34.380 --> 00:03:37.010
specifically at experimentalDecorators,

86
00:03:37.010 --> 00:03:38.910
later in the decorators module.

87
00:03:38.910 --> 00:03:41.810
This basically enables certain features to be used

88
00:03:41.810 --> 00:03:45.060
in TypeScript which are really experimental,

89
00:03:45.060 --> 00:03:48.271
where it's not sure if they will end up in JavaScript

90
00:03:48.271 --> 00:03:50.270
at some time in the future

91
00:03:50.270 --> 00:03:52.940
and where you still might wanna work with them.

92
00:03:52.940 --> 00:03:55.220
Then you explicitly have to tell TypeScript

93
00:03:55.220 --> 00:03:57.070
that you want to work with these features

94
00:03:57.070 --> 00:03:59.390
and you can do that with that configuration.

95
00:03:59.390 --> 00:04:01.880
But again, I will come back to that.

96
00:04:01.880 --> 00:04:04.170
And therefore now, we walk through this file,

97
00:04:04.170 --> 00:04:05.870
lot of options you can set there.

98
00:04:05.870 --> 00:04:08.222
And as TypeScript grows, you typically also get

99
00:04:08.222 --> 00:04:10.612
more and more options added here,

100
00:04:10.612 --> 00:04:13.837
therefore the official docs always are a great place

101
00:04:13.837 --> 00:04:16.160
to dive deeper and to make sure

102
00:04:16.160 --> 00:04:18.210
that you don't miss an interesting option

103
00:04:18.210 --> 00:04:20.343
that might help you in your project.

