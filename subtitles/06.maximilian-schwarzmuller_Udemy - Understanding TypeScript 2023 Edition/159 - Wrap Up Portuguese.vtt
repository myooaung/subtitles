WEBVTT

00:02.190 --> 00:05.030
Instrutor: Assim, adicionamos o webpack, uma ferramenta

00:05.030 --> 00:08.070
muito importante que nos permite agrupar nossos diferentes

00:08.070 --> 00:09.690
arquivos em um único pacote.

00:09.690 --> 00:12.090
Isto realmente nos ajuda a diminuir a quantidade

00:12.090 --> 00:14.500
de solicitações HTTP feitas e, portanto, pode

00:14.500 --> 00:16.500
acelerar nossa aplicação.

00:16.500 --> 00:19.840
Se você se encontra trabalhando com muitos arquivos individuais,

00:19.840 --> 00:22.270
o que você normalmente faz em projetos maiores, ferramentas

00:22.270 --> 00:24.360
como o webpack são de uso obrigatório e o webpack

00:24.360 --> 00:26.910
é a ferramenta mais importante e proeminente que o ajuda

00:26.910 --> 00:28.200
com isso, portanto, é a ferramenta

00:28.200 --> 00:31.190
que eu queria mostrar aqui.

00:31.190 --> 00:33.730
Você vê que o webpack é altamente configurável e,

00:33.730 --> 00:36.190
como mencionei várias vezes, os documentos oficiais

00:36.190 --> 00:39.630
do webpack são o lugar para ir aprender tudo sobre ele.

00:39.630 --> 00:42.120
Sobre diferentes carregadores, diferentes configurações

00:42.120 --> 00:44.770
de erros que você pode configurar e como funciona, em geral.

00:44.770 --> 00:47.109
Portanto, definitivamente mergulhe nesta

00:47.109 --> 00:49.660
documentação se você quiser se tornar um webpack

00:49.660 --> 00:52.720
master e quiser ter uma configuração mais elaborada.

00:52.720 --> 00:55.610
Nossa configuração básica aqui, entretanto,

00:55.610 --> 00:58.200
já nos permite compilar arquivos TypeScript

00:58.200 --> 01:00.940
com webpack e depois agrupar toda a produção

01:00.940 --> 01:03.820
em um único pacote. arquivo js.

01:03.820 --> 01:06.500
E também configuramos uma configuração para

01:06.500 --> 01:09.050
desenvolvimento que facilita a depuração

01:09.050 --> 01:11.510
e nos dá mensagens de erro mais úteis.

01:11.510 --> 01:13.250
E obtemos uma configuração de produção

01:13.250 --> 01:15.570
que nos dá um código altamente otimizado que

01:15.570 --> 01:17.840
poderíamos então implantar em um servidor

01:17.840 --> 01:21.160
para enviar o menor código possível para ele.

01:21.160 --> 01:22.210
E é isso aí.

01:22.210 --> 01:25.740
webpack é realmente uma ferramenta essencial e poder usá-la

01:25.740 --> 01:26.573
e ter uma configuração

01:26.573 --> 01:30.260
que realmente funcione, é super importante.

01:30.260 --> 01:33.800
Portanto, é um uso obrigatório em qualquer projeto moderno, eu diria,

01:33.800 --> 01:36.710
e neste módulo, você aprenderá como pode começar com ele

01:36.710 --> 01:38.763
em seus projetos de TypeScript.
