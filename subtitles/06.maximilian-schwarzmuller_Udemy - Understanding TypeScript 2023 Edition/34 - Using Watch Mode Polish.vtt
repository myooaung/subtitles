WEBVTT

00:02.220 --> 00:03.660
Narrator: Teraz, aby rozpocząć,

00:03.660 --> 00:04.630
chcę się upewnić, że

00:04.630 --> 00:07.210
nie muszę ponownie uruchomić tego polecenia tutaj;

00:07.210 --> 00:10.104
tego polecenia TFC, w którym wskazuję na plik po każdej zmianie,

00:10.104 --> 00:12.220
którą wprowadzam.

00:12.220 --> 00:16.100
Ponieważ teraz, gdy tylko zmienię coś tutaj, w moim pliku

00:16.100 --> 00:17.640
TypeScript, i chcę odzwierciedlić

00:17.640 --> 00:22.640
to w moim pliku wyjściowym, a także na tej stronie internetowej, musimy zapisać

00:22.670 --> 00:25.270
plik, uruchomić kompilację ponownie,

00:25.270 --> 00:29.410
a następnie ponownie załadować ten plik; lub, jeśli mamy nasz

00:29.410 --> 00:33.270
proces startowy NPM uruchomiony, który powinniśmy mieć,

00:33.270 --> 00:37.650
to przynajmniej nasza przeglądarka automatycznie przeładuje,

00:37.650 --> 00:46.200
jeśli nie otwieramy bezpośrednio pliku, ale zamiast tego jesteśmy na localhost: 3000.

00:46.200 --> 00:47.760
Ale mimo to, nawet jeśli z tym przeładowaniem

00:47.760 --> 00:48.910
automatycznie, nadal

00:48.910 --> 00:52.760
musimy ręcznie ponownie uruchomić polecenie kompilacji.

00:52.760 --> 00:54.730
Dlatego, aby się tego pozbyć, możemy

00:54.730 --> 00:56.620
wejść w tryb obserwacyjny.

00:56.620 --> 01:01.160
Oznacza to, że możemy powiedzieć TypeScriptowi, aby obserwował plik,

01:01.160 --> 01:04.980
a gdy ten plik się zmieni, TypeScript przekompiluje się.

01:04.980 --> 01:07.260
Tak więc, w tym celu możemy nadal

01:07.260 --> 01:10.560
uruchomić to samo polecenie, ale teraz dodajemy

01:10.560 --> 01:14.010
--watch na końcu, lub po prostu -w.

01:14.010 --> 01:17.950
Jeśli to zrobimy, to jesteśmy w trybie obserwacyjnym na tym pliku,

01:17.950 --> 01:20.940
i teraz, kiedy tylko coś tam zmienimy i zapiszemy,

01:20.940 --> 01:22.120
tak że plik na dysku

01:22.120 --> 01:25.610
technicznie również się zmieni, widzisz, to automatycznie

01:25.610 --> 01:28.773
rekompiluje się, i oczywiście oznacza to również,

01:28.773 --> 01:30.260
że jeśli zrobimy coś, co

01:30.260 --> 01:32.860
nie jest dozwolone, jak na przykład, ponowne

01:32.860 --> 01:35.630
przypisanie do stałej, a następnie zły typ,

01:35.630 --> 01:37.790
jak również.

01:37.790 --> 01:39.320
Kiedykolwiek próbujemy to zrobić,

01:39.320 --> 01:40.940
oczywiście wszystko rekompiluje

01:40.940 --> 01:43.850
się, ale wtedy, podobnie jak w przypadku ręcznego uruchomienia

01:43.850 --> 01:46.290
polecenia, widzimy błąd kompilacji na dole.

01:46.290 --> 01:49.510
Tak więc tryb zegarka jest już dużym usprawnieniem.

01:49.510 --> 01:52.540
Minusem jest to, że musimy jeszcze konkretnie

01:52.540 --> 01:55.180
namierzyć ten plik tutaj.

01:55.180 --> 01:56.700
I w tej chwili oczywiście

01:56.700 --> 01:58.980
jest to jedyny plik, z którym pracujemy,

01:58.980 --> 02:00.940
ale zazwyczaj przy większych projektach

02:00.940 --> 02:02.973
tak być nie musi.
