WEBVTT

00:02.190 --> 00:04.310
อาจารย์ : แล้วเราควรปรับปรุงสถานะอย่างไร?

00:04.310 --> 00:06.970
เราสามารถใช้ตัวดำเนินการสเปรดของเราที่นี่

00:06.970 --> 00:09.680
และกระจาย TODO ที่มีอยู่ทั้งหมดของเราในอาร์เรย์นี้

00:09.680 --> 00:13.520
จากนั้นเพียงเพิ่ม TODO ใหม่เป็นรายการใหม่ในตอนท้าย

00:13.520 --> 00:16.300
ใช้งานได้ แต่ไม่ใช่วิธีที่สะอาดที่สุดในการอัปเดตสิ่งนี้

00:16.300 --> 00:20.090
มีแนวโน้มว่าจะใช้งานได้ในทุกสถานการณ์ที่เรามีในแอปนี้

00:20.090 --> 00:23.170
แต่ในทางทฤษฎีการตอบสนองการอัปเดตสถานะกำหนดการและสิ่งที่อยู่ในค่า

00:23.170 --> 00:30.710
TODO ของเราที่นี่ อาจไม่จำเป็นต้องเป็นสถานะล่าสุดเมื่อดำเนินการอัปเดตนี้

00:30.710 --> 00:35.340
เพื่อรับประกันสิ่งนี้ เราสามารถส่งฟังก์ชันไปยังฟังก์ชันการอัพเดตสถานะนี้ได้ที่นี่

00:35.340 --> 00:39.680
ฟังก์ชันที่ได้รับ TODO ก่อนหน้าของเราและจะส่งคืนสถานะใหม่เมื่อใด

00:39.680 --> 00:41.460
ทั้งหมดนี้รองรับโดย react

00:41.460 --> 00:44.370
ฟังก์ชันนี้จะถูกเรียกใช้โดย react สำหรับเรา

00:44.370 --> 00:51.363
จากนั้นเราสามารถพึ่งพา prevTodos ภายในฟังก์ชันนี้ให้เป็นสแน็ปช็อตสถานะล่าสุดจริงๆ

00:52.220 --> 00:55.480
ในตอนนี้ เราได้อัปเดต TODO ของเราด้วย TODO

00:55.480 --> 00:59.100
เก่าและใหม่ และตอนนี้เรามีฟังก์ชันที่เราควรจะสามารถเพิ่ม

00:59.100 --> 01:01.860
TODO ใหม่ได้ที่นี่

01:01.860 --> 01:05.470
ดังนั้นหากเราบันทึกทั้งหมดนั้นและกลับไปที่แอปพลิเคชัน

01:05.470 --> 01:10.260
จากนั้นป้อนหลักสูตรให้จบที่นี่ วิธีนี้ใช้ได้ผล

01:10.260 --> 01:15.650
และถ้าฉันป้อนให้เสร็จในหนึ่งเดือนที่นี่ นี่ก็เพิ่มเข้าไปด้วย

01:15.650 --> 01:17.330
ตอนนี้ทุกอย่างใช้งานได้แล้ว

01:17.330 --> 01:21.180
ฟังก์ชันที่ขาดหายไปในขณะนี้คือเราสามารถลบออกได้

01:21.180 --> 01:22.790
เราจะทำสิ่งนี้ในการบรรยายครั้งหน้า

01:22.790 --> 01:26.470
แต่ที่สำคัญกว่านั้น ตอนนี้คุณยังได้เรียนรู้วิธีจัดการสถานะด้วย

01:26.470 --> 01:29.930
react และ typescript ซึ่งแน่นอนว่านอกจากอุปกรณ์ประกอบฉากแล้ว

01:29.930 --> 01:31.693
ก็เป็นอีกแนวคิดหลัก
