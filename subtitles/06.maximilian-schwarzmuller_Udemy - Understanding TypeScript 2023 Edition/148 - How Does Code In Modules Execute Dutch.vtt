WEBVTT

00:02.560 --> 00:03.680
Instructeur: Naast

00:03.680 --> 00:06.770
deze verschillende import en export syntaxen,

00:06.770 --> 00:10.160
die goed zijn om te weten, is er nog iets dat je moet

00:10.160 --> 00:12.583
begrijpen en weten.

00:13.430 --> 00:16.900
In projectstaat exporteren we niet alleen een klasse of een

00:16.900 --> 00:20.690
interface, zoals we dat in alle andere bestanden doen, maar we exporteren

00:20.690 --> 00:23.810
eigenlijk een constante projectstaat.

00:23.810 --> 00:26.710
We importeren deze constante in meerdere

00:26.710 --> 00:28.660
andere bestanden.

00:28.660 --> 00:31.930
We importeren het in de projectlijst. ts bestand, we importeren het

00:31.930 --> 00:35.480
ook in de project-input. ts bestand.

00:35.480 --> 00:38.490
Dus we importeren meerdere keren uit hetzelfde bestand.

00:38.490 --> 00:41.560
De vraag is of deze code in dit bestand, namelijk

00:41.560 --> 00:44.600
het aanmaken van deze constante hier, één of twee

00:44.600 --> 00:48.920
keer wordt uitgevoerd of hoe vaak wordt deze uitgevoerd?

00:48.920 --> 00:53.240
Eenmaal per importverklaring of eenmaal voor de hele app?

00:53.240 --> 00:57.980
Nou, blijkt dat het één keer draait als het bestand voor het eerst wordt

00:57.980 --> 01:01.000
geïmporteerd door een ander bestand.

01:01.000 --> 01:05.280
Als een ander bestand datzelfde bestand vervolgens weer importeert,

01:05.280 --> 01:07.320
wordt het niet meer uitgevoerd.

01:07.320 --> 01:08.970
We kunnen dit ook valideren door hier

01:08.970 --> 01:11.210
een console log statement toe te voegen.

01:11.210 --> 01:12.370
Rennen.

01:12.370 --> 01:15.893
We zullen zien dat dit maar één keer wordt afgedrukt, ook

01:15.893 --> 01:22.360
al importeren we projectstatus. ts beide hier in de projectlijst.

01:22.360 --> 01:22.360
ts

01:22.360 --> 01:24.620
bestand en in de project-input. ts bestand.

01:24.620 --> 01:27.740
Toch wordt dit maar één keer naar de console afgedrukt.

01:27.740 --> 01:28.610
Je ziet het hier.

01:28.610 --> 01:29.443
Rennen.

01:29.443 --> 01:31.350
Het zal nooit een tweede keer gedrukt

01:31.350 --> 01:32.653
worden, wat we ook doen.

01:33.720 --> 01:36.360
Dus dit loopt maar één keer.

01:36.360 --> 01:38.620
Dit is hoe het zich gedraagt en dit is gewoon iets

01:38.620 --> 01:41.723
wat je moet weten zodat je je app op de juiste manier kunt plannen.
