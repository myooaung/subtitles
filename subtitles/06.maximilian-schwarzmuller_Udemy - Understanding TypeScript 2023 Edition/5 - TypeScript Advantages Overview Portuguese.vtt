WEBVTT

00:02.290 --> 00:04.300
Narrador: Então você viu o TypeScript

00:04.300 --> 00:06.700
em ação e ele oferece grandes vantagens.

00:06.700 --> 00:10.570
Isso torna a escrita de código limpo realmente mais fácil.

00:10.570 --> 00:14.060
O TypeScript acrescenta Tipos e dados super importantes.

00:14.060 --> 00:16.810
Com os Tipos temos que ser muito mais explícitos

00:16.810 --> 00:20.970
sobre como as coisas funcionam e podemos evitar muitos erros não

00:20.970 --> 00:24.460
aceitos e desnecessários usando os Tipos.

00:24.460 --> 00:27.640
Além disso, também podemos utilizar as modernas

00:27.640 --> 00:31.070
IDE's que foram incorporadas no suporte Types, que

00:31.070 --> 00:33.130
podem pegar estes tipos e nos dar

00:33.130 --> 00:36.940
melhor auto-completar e erros incorporados que mostram

00:36.940 --> 00:39.570
antes mesmo de compilarmos o código, pois

00:39.570 --> 00:43.050
elas também entendem TypeScript.

00:43.050 --> 00:46.870
Mas, além dos Tipos e das enormes vantagens que obtemos sozinhos usando

00:46.870 --> 00:49.660
os Tipos, também obtemos outras características adicionadas

00:49.660 --> 00:51.410
pelo TypeScript.

00:51.410 --> 00:55.170
Podemos usar certos recursos JavaScript da próxima geração que você

00:55.170 --> 00:58.340
pode escrever e usar em nossos arquivos TypeScript e então

00:58.340 --> 01:01.890
eles serão compilados até o código JavaScript para funcionar em

01:01.890 --> 01:05.630
soluções que funcionam até mesmo em navegadores mais antigos.

01:05.630 --> 01:08.170
Se você conhece o Bevel, que é uma ferramenta que

01:08.170 --> 01:11.120
nos permite fazer isso também com o Vanilla JavaScript,

01:11.120 --> 01:14.680
é um pouco assim, apenas já incorporado ao TypeScript.

01:14.680 --> 01:18.350
Podemos usar recursos modernos de JavaScript e ainda produzir e enviar

01:18.350 --> 01:21.773
códigos que funcionam também em navegadores mais antigos.

01:22.610 --> 01:25.210
O TypeScript também acrescenta certas características

01:25.210 --> 01:26.930
que somente o TypeScript entende,

01:26.930 --> 01:29.070
como Interfaces e Genéricos.

01:29.070 --> 01:32.560
São recursos que compilam para JavaScript, mas não precisam

01:32.560 --> 01:35.360
ser compilados porque são recursos que nos ajudam

01:35.360 --> 01:39.610
durante o desenvolvimento que nos dão erros mais claros e nos ajudam

01:39.610 --> 01:42.200
a evitar ainda mais erros.

01:42.200 --> 01:45.660
Assim, acrescenta ainda mais características nessa frente,

01:45.660 --> 01:47.950
além dos Tipos que já conhecemos.

01:47.950 --> 01:50.900
Também nos dá certas características de Meta-programação

01:50.900 --> 01:53.700
como Decoradores nos quais eu tenho um módulo inteiro

01:53.700 --> 01:55.850
neste curso onde você entenderá o que

01:55.850 --> 01:59.520
são exatamente Decoradores, porque eles são tão meta, e porque

01:59.520 --> 02:01.790
eles são incríveis.

02:01.790 --> 02:04.230
O TypeScript alls é altamente configurável.

02:04.230 --> 02:06.390
Não o configuramos até agora, mas

02:06.390 --> 02:09.350
tenho um módulo inteiro no curso onde falamos

02:09.350 --> 02:12.510
apenas sobre o compilador e como configurá-lo.

02:12.510 --> 02:15.700
E você pode realmente ajustá-lo às suas exigências para

02:15.700 --> 02:18.960
torná-lo mais rígido ou mais solto e para garantir que ele

02:18.960 --> 02:23.310
se comporte exatamente da maneira que você deseja que se comporte.

02:23.310 --> 02:26.790
E com o Modern Tooling com IDE's modernas você obtém

02:26.790 --> 02:30.610
até mesmo suporte em projetos não-TypeScript.

02:30.610 --> 02:33.700
A IDE que você acabou de ver, código de estúdio visual,

02:33.700 --> 02:37.740
que até lhe dá melhor suporte em arquivos JavaScript simples porque

02:37.740 --> 02:41.010
é capaz de usar alguns recursos TypeScript sob o capô

02:41.010 --> 02:44.710
sem você usar explicitamente o TypeScript.

02:44.710 --> 02:47.640
Portanto, esse é um ganho grátis que você obtém

02:47.640 --> 02:49.810
quando está ciente do TypeScript e

02:49.810 --> 02:52.020
quando usa ferramentas modernas.

02:52.020 --> 02:54.830
Portanto, há muitas razões para usar o TypeScript e é

02:54.830 --> 02:57.460
provavelmente por isso que você fez este curso.

02:57.460 --> 03:00.360
Neste curso, vamos agora aprender passo a passo e aprender

03:00.360 --> 03:03.663
tudo sobre as características incríveis que ele acrescenta.
