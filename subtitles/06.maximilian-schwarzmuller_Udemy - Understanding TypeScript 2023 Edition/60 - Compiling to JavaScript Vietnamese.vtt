WEBVTT

00:02.510 --> 00:04.490
Giảng viên: Với lớp cơ bản của chúng ta, nếu bây giờ chúng

00:04.490 --> 00:07.570
ta vào thư mục dist và kiểm tra ứng dụng. js, chúng ta sẽ thấy

00:07.570 --> 00:10.110
những gì được tạo ra trong JavaScript

00:10.110 --> 00:13.560
và ở đó bạn thấy chúng ta có cùng một mã.

00:13.560 --> 00:17.870
Hai điểm khác biệt quan trọng là trường tên mà chúng

00:17.870 --> 00:20.870
ta có ở đây không tồn tại như thế này ở

00:20.870 --> 00:22.230
đây trong lớp.

00:22.230 --> 00:25.460
Điều này thực sự sẽ được hỗ trợ trong JavaScript hiện đại nhưng

00:25.460 --> 00:27.910
nó phụ thuộc vào phiên bản JavaScript mà bạn

00:27.910 --> 00:29.130
đang xây dựng.

00:29.130 --> 00:33.450
Vì vậy, chỉ riêng trong ES6, nó thực sự không được hỗ trợ.

00:33.450 --> 00:35.430
Và tất nhiên, điều tuyệt vời

00:35.430 --> 00:37.360
đang thấy là kiểu gán.

00:37.360 --> 00:39.760
Mặc dù vậy, chúng tôi có logic xây dựng

00:39.760 --> 00:43.870
của mình và thực sự đây là cách bạn thêm các thuộc tính vào các

00:43.870 --> 00:48.150
đối tượng sẽ được tạo trong Vanilla JavaScript khi không sử

00:48.150 --> 00:51.570
dụng phiên bản JavaScript mới nhất, nơi cú pháp

00:51.570 --> 00:54.470
trường này cũng sẽ được hỗ trợ.

00:54.470 --> 00:56.480
Vì vậy, đây là những gì tôi có trong JavaScript.

00:56.480 --> 00:58.710
Tuy nhiên, bây giờ nó trở nên thú vị nếu chúng

00:58.710 --> 01:02.080
ta truy cập tệp tsconfig. json và chúng tôi chuyển

01:02.080 --> 01:05.970
mục tiêu từ ES5 sang ES6 và nhận xét lib tại đây.

01:05.970 --> 01:08.190
Vì vậy, các thư viện chính xác và được

01:08.190 --> 01:10.870
đề xuất sẽ được TypeScript tự động thêm vào.

01:10.870 --> 01:14.090
Nếu bây giờ bạn lưu tệp cấu hình này và bạn quay lại app. js, bạn sẽ thấy điều

01:14.090 --> 01:16.350
gì đó hoàn toàn khác.

01:16.350 --> 01:18.810
Và đó là điều khá thú vị mà chúng ta thấy ở đây.

01:18.810 --> 01:20.960
Chúng ta có gì ở đây?

01:20.960 --> 01:23.290
Vâng, những gì chúng ta cuối cùng

01:23.290 --> 01:26.453
có ở đây là một hàm xây dựng được gọi là.

01:27.299 --> 01:31.600
Hàm xây dựng là thứ được tích hợp trong JavaScript,

01:31.600 --> 01:33.770
về cơ bản bạn có thể nói rằng

01:33.770 --> 01:35.520
nó đã ở đó từ trước đến

01:35.520 --> 01:40.230
nay và đây là cách JavaScript không hiện đại của Vanilla

01:40.230 --> 01:44.480
để tạo bản thiết kế đối tượng.

01:44.480 --> 01:47.100
Đó là một hàm được gọi với sự trợ giúp của

01:47.100 --> 01:50.890
từ khóa new và sau đó thật bất ngờ, thật kỳ diệu, hàm này mặc

01:50.890 --> 01:53.640
dù không có câu lệnh trả về bên trong nhưng

01:53.640 --> 01:55.850
lại trả về một thứ như bạn thấy khi

01:55.850 --> 01:57.540
chúng ta gọi nó ở đây.

01:57.540 --> 01:59.730
Nó trả về một đối tượng.

01:59.730 --> 02:03.110
Một đối tượng mới sẽ có thuộc tính tên.

02:03.110 --> 02:04.940
Vì vậy, khái niệm này không phải là mới,

02:04.940 --> 02:08.680
nó không được giới thiệu bởi JavaScript hiện đại hoặc TypeScript.

02:08.680 --> 02:12.500
Ý tưởng có bản thiết kế cho các đối tượng đã xuất hiện

02:12.500 --> 02:15.180
trong JavaScript từ rất lâu.

02:15.180 --> 02:19.070
Tuy nhiên, trong quá khứ, chúng tôi phải sử dụng các hàm xây dựng và vì điều

02:19.070 --> 02:21.870
này có thể hơi không trực quan, đặc biệt là đối với các

02:21.870 --> 02:24.520
nhà phát triển, những người có thể đã làm việc với

02:24.520 --> 02:26.600
các ngôn ngữ lập trình khác nhau.

02:26.600 --> 02:30.510
JavaScript hiện đại đã giới thiệu ý tưởng về các lớp có

02:30.510 --> 02:34.950
cú pháp rõ ràng hơn này và TypeScript cũng hỗ trợ điều này.

02:34.950 --> 02:38.180
Và do khả năng biên dịch mạnh mẽ của TypeScript, bạn có

02:38.180 --> 02:40.830
thể chọn bất cứ nơi nào bạn muốn biên dịch nó thành,

02:40.830 --> 02:44.130
kiểu cũ hơn, tất nhiên là phù hợp với nhiều trình duyệt hơn

02:44.130 --> 02:48.280
hoặc theo kiểu ES6 hiện đại hơn mà chúng ta đã thấy trước đây.

02:48.280 --> 02:51.700
Mà trông rất giống như thế này ở đây.

02:51.700 --> 02:54.500
Điều quan trọng cần lưu ý là chúng tôi có tính năng này được

02:54.500 --> 02:57.300
tích hợp trong JavaScript và được hỗ trợ bởi TypeScript

02:57.300 --> 03:00.163
để chúng tôi có thể xác định bản thiết kế đối tượng.
