WEBVTT

00:02.230 --> 00:05.130
Docente: Ora vogliamo trasferire il testo inserito

00:05.130 --> 00:07.960
dal componente NewTodo al componente App.

00:07.960 --> 00:09.690
Perché al componente dell'app?

00:09.690 --> 00:11.160
Perché questo è il nostro componente

00:11.160 --> 00:13.610
che ha un collegamento diretto sia con il componente

00:13.610 --> 00:16.340
NewTodo che con il componente TodoList.

00:16.340 --> 00:19.320
Quindi, voglio aggiungere una nuova funzione e

00:20.800 --> 00:24.560
la chiamerò todoAddHandler; il nome dipende da voi, a me piace

00:24.560 --> 00:25.393
usare la convenzione

00:25.393 --> 00:27.990
di avere un gestore alla fine se si tratta di

00:27.990 --> 00:31.390
una funzione che si attiva su un evento.

00:31.390 --> 00:34.330
E qui mi aspetto di ottenere il testo, come stringa,

00:34.330 --> 00:37.970
è la nostra funzione, quindi possiamo aspettarci questo.

00:37.970 --> 00:40.720
E poi vogliamo aggiungere questo come un todo qui.

00:40.720 --> 00:42.270
Ora, naturalmente, poiché conoscete

00:42.270 --> 00:45.230
React, sapete che l'aggiornamento di questo array da solo non basta,

00:45.230 --> 00:47.440
non farà il re-rendering di questo componente, quindi

00:47.440 --> 00:49.360
dovremo usare un po' di gestione dello stato

00:49.360 --> 00:51.900
per farlo funzionare; prima di farlo, però, assicuriamoci

00:51.900 --> 00:53.040
di ottenere almeno il valore

00:53.040 --> 00:54.750
di questa funzione.

00:54.750 --> 00:57.460
Quindi registriamo il testo qui e poi possiamo concentrarci

00:57.460 --> 01:00.133
sulla parte di gestione dello stato come secondo passo.

01:01.000 --> 01:03.020
Per ottenere ciò, dobbiamo assicurarci

01:03.020 --> 01:05.850
che la funzione todoAddHandler possa essere richiamata

01:05.850 --> 01:09.050
dall'interno del componente NewTodo, perché è lì che

01:09.050 --> 01:12.113
aggiungiamo il todo alla fine.

01:13.090 --> 01:15.370
Ora, come facciamo a rendere questa funzione

01:15.370 --> 01:17.860
richiamabile dall'interno del componente?

01:17.860 --> 01:22.300
Si passa un puntatore a questa funzione al componente.

01:22.300 --> 01:25.640
Quindi, possiamo aggiungere il nome di una proprietà, onAddTodo,

01:25.640 --> 01:27.280
e possiamo chiamarla come vogliamo,

01:27.280 --> 01:28.560
io l'ho chiamata così perché

01:28.560 --> 01:32.030
fondamentalmente si verificherà in seguito a un evento, un evento che

01:32.030 --> 01:34.600
ovviamente controlliamo, ma comunque.

01:34.600 --> 01:38.030
E qui voglio inoltrare todoAddHandler, quindi passo un

01:38.030 --> 01:40.600
puntatore a questa funzione, non la eseguo

01:40.600 --> 01:42.120
qui, passo solo un puntatore

01:42.120 --> 01:44.620
a questa funzione, in onAddTodo, in modo

01:44.620 --> 01:49.240
che invece di NewTodo su props, che possiamo ottenere qui, possiamo chiamare

01:49.240 --> 01:56.220
questo, in modo da poter chiamare props.

01:56.220 --> 01:56.220
onAddTodo

01:56.220 --> 01:59.640
qui e inoltrare il testo inserito, questa è l'idea, ma naturalmente

01:59.640 --> 02:01.730
a TypeScript non piace, perché non sa che

02:01.730 --> 02:03.440
ci sarà un oggetto onAddTodo nei

02:03.440 --> 02:06.180
nostri oggetti di scena e come tale oggetto dovrebbe

02:06.180 --> 02:08.240
apparire.

02:08.240 --> 02:11.670
Quindi, proprio come in TodoList, dobbiamo impostare un'interfaccia o semplicemente

02:11.670 --> 02:14.540
una definizione del tipo dei nostri oggetti di scena.

02:14.540 --> 02:18.200
Quindi, andiamo su NewTodo e forse, ancora una volta, aggiungiamo un'interfaccia,

02:18.200 --> 02:20.820
potremmo anche aggiungere un tipo di corso e lo farò

02:20.820 --> 02:23.060
qui per mescolare le cose.

02:23.060 --> 02:25.380
In genere opterei sempre per un'interfaccia,

02:25.380 --> 02:27.660
ma anche l'utilizzo di un tipo va bene.

02:27.660 --> 02:30.493
Quindi, per usare un tipo qui, possiamo chiamarlo

02:31.357 --> 02:33.820
NewTodoProps e il tipo è un tipo di oggetto

02:33.820 --> 02:36.830
in cui voglio avere un oggetto onAddTodo e questo, a

02:36.830 --> 02:39.120
sua volta, sarà un tipo di funzione, che

02:39.120 --> 02:40.753
punterà a una funzione.

02:41.720 --> 02:44.290
Si definiranno tipi di funzione come questo, come

02:44.290 --> 02:46.760
avete imparato, una funzione che non restituisce

02:46.760 --> 02:48.850
nulla, ma che si aspetta un perimetro, che

02:48.850 --> 02:51.410
sarà il testo inserito dall'utente.

02:51.410 --> 02:54.023
Quindi, il testo di Todo, che è di tipo stringa, è

02:55.120 --> 02:57.123
ciò che questa funzione si aspetta.

02:58.920 --> 03:01.770
Ora, impostiamo questo tipo generico qui e puntiamo

03:01.770 --> 03:03.103
a NewTodoProps.

03:04.510 --> 03:08.620
E con questo, possiamo chiamare onAddTodo e passare una stringa.

03:08.620 --> 03:11.470
Se si tentasse di inserire un numero, per esempio,

03:11.470 --> 03:14.730
si otterrebbe un errore, perché abbiamo chiaramente definito

03:14.730 --> 03:17.590
che l'argomento deve essere una stringa.

03:17.590 --> 03:18.733
Quindi, ripristiniamo la situazione.

03:20.550 --> 03:24.630
Se inseriamo di nuovo un nuovo obiettivo, terminarlo in un mese, vediamo

03:24.630 --> 03:27.150
di nuovo un registro qui, ma ora proviene

03:27.150 --> 03:28.690
dal componente dell'app,

03:28.690 --> 03:30.750
come si può chiaramente vedere, perché

03:30.750 --> 03:34.170
abbiamo aggiunto questo registro qui.

03:34.170 --> 03:37.380
Quindi la comunicazione tra il componente NewTodo

03:37.380 --> 03:39.480
e il componente app funziona.

03:39.480 --> 03:42.750
E con questo, implementiamo un po' di gestione dello stato

03:42.750 --> 03:44.160
e, di nuovo, questo è qualcosa

03:44.160 --> 03:46.850
che si può provare prima da soli, se si vuole, per

03:46.850 --> 03:49.670
assicurarsi di rendere i todos in stato, in modo che

03:49.670 --> 03:52.170
ogni volta che aggiorniamo i todos, rendiamo

03:52.170 --> 03:54.460
anche questo componente.

03:54.460 --> 03:56.263
Lo faremo nella prossima lezione.
