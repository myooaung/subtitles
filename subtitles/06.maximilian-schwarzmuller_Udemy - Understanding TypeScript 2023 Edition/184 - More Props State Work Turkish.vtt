WEBVTT

00:02.110 --> 00:04.160
Eğitmen: Bu küçük kukla uygulamada,

00:04.160 --> 00:07.390
yapılacakları silebildiğimizden de emin olmak istiyorum

00:07.390 --> 00:08.500
ve bunu uygulamak için,

00:08.500 --> 00:11.610
yapılacaklar listesinde, liste öğemizde, sadece yapılacaklar

00:11.610 --> 00:14.220
metnine sahip olmadığımızdan emin olalım,

00:14.220 --> 00:17.640
ancak bunu bir yayılma alanının içinde tutabiliriz ve bunun

00:17.640 --> 00:23.140
yanı sıra aynı liste öğesinde bir düğmemiz de var, aynen böyle sil dediğimiz bir düğme ve bu düğmeye

00:23.140 --> 00:28.120
basıldığında, bu yapılacakları silmek isteyeceğim, bu yüzden buraya tıklandığında,

00:28.120 --> 00:31.368
bu yapılacaklardan kurtulmak için bir şey yapmak istiyorum

00:31.368 --> 00:38.040
Şimdi yapılacakları burada uygulama bileşeninde yönettiğimiz için, burada tetiklenen ve daha sonra bu yapılacakları

00:38.040 --> 00:42.100
listeden temizleyen silme işleyicisi yapmak için yeni bir işleve ihtiyacımız

00:42.100 --> 00:46.440
var.

00:46.440 --> 00:47.700
Yani burada argümanımız

00:47.700 --> 00:50.690
olarak, bir dize olan yapılacaklar kimliğini almayı bekliyorum

00:50.690 --> 00:53.340
çünkü yapılacaklar modelimizde kimlik bir dizedir

00:55.650 --> 00:59.010
ve sonra orada tekrar yapılacakları ayarla diyoruz, ancak şimdi bir

00:59.010 --> 01:01.260
yapılacakları kaldırmak için.

01:01.260 --> 01:03.200
Tüm bunlar için yine bu forum fonksiyonunu

01:03.200 --> 01:04.750
kullanın çünkü önceki duruma

01:04.750 --> 01:06.940
bağlı olan bir durum güncellememiz var ve

01:06.940 --> 01:09.460
orada yeni bir dizi döndüreceğim.

01:09.460 --> 01:13.520
ve bu temelde benim eski dizim olacak ama filtrelenmiş olacak.

01:13.520 --> 01:16.230
Filtre, JavaScript'te yeni bir veri dizisi

01:16.230 --> 01:18.020
döndüren yerleşik bir yöntemdir

01:18.020 --> 01:21.270
ve bu yeni dizi temelde eski dizi eksi filtrelediğiniz

01:21.270 --> 01:24.490
her şey olacaktır.

01:24.490 --> 01:26.810
Filtre, eski dizideki her öğe üzerinde

01:26.810 --> 01:28.590
çalıştırılan bir işlev

01:28.590 --> 01:31.390
alır ve ilettiğiniz işlev true döndürdüğünde

01:31.390 --> 01:34.160
öğe tutulur ve yeni diziye eklenir, false

01:34.160 --> 01:37.330
döndürürse atılır.

01:37.330 --> 01:39.820
Böylece halihazırda sahip olduğumuz tüm yapılacaklar

01:39.820 --> 01:42.810
üzerinde çalışacak ve şimdi baktığımız yapılacak kimliği burada

01:42.810 --> 01:45.330
aldığımız yapılacak kimliğine eşitse false döndüren

01:45.330 --> 01:48.120
bir mantığa sahip olmamız gerekiyor.

01:48.120 --> 01:52.100
Böylece yapılacaklar eşitse, bırakılıyor.

01:52.100 --> 01:53.570
Yani burada true değil false'a ihtiyacımız

01:53.570 --> 01:55.560
var ve dolayısıyla bunu bir sonraki adımda tersine çevirelim

01:55.560 --> 01:57.430
ve bir ünlem işareti ekleyelim.

01:57.430 --> 02:00.620
Bununla birlikte, tüm yapılacakları tutarız, ancak kimliğin

02:00.620 --> 02:03.430
burada aldığımız kimliğe eşit olduğu yapılacaklar, çünkü

02:03.430 --> 02:05.130
bu, silmek istediğimiz yapılacak

02:05.130 --> 02:07.833
olduğu için bırakmak istediğimiz kimliktir.

02:08.710 --> 02:11.499
Şimdi yapılacaklar listesinin içinden yapılacak

02:11.499 --> 02:14.610
silme işleyicisinin çağrılabileceğinden emin olmamız

02:14.610 --> 02:16.370
gerekiyor ve bunun için yine prop'ları

02:16.370 --> 02:19.580
kullanabiliriz ve buraya yapılacak silme prop'unu ekleyip

02:19.580 --> 02:22.520
yapılacak silme işleyicisini işaret edebiliriz,

02:22.520 --> 02:25.100
ancak elbette TypeScript bundan pek memnun değil

02:25.100 --> 02:27.240
çünkü yapılacaklar listesi prop'larında,

02:27.240 --> 02:30.000
buradaki yapılacak silme prop'u hakkında hiçbir

02:30.000 --> 02:33.130
şey söylemiyoruz.

02:33.130 --> 02:34.350
Bunu değiştirelim.

02:34.350 --> 02:38.730
Yapılacaklar listesi TSX'te yapılacakları sil'i bir prop olarak ekleyelim ve bu şimdi bir

02:38.730 --> 02:40.530
fonksiyona işaret edecek, bu yüzden

02:40.530 --> 02:42.218
burada bir fonksiyon tipine ihtiyacımız

02:42.218 --> 02:45.380
var, sonuçta hiçbir şey döndürmeyen bir fonksiyon.

02:45.380 --> 02:48.150
Yani void ama bir parametre olarak

02:48.150 --> 02:51.380
yapmak için silinecek fikrini alır.

02:51.380 --> 02:54.230
Artık uygulama bileşenindeki hata ortadan kalktı

02:54.230 --> 02:55.380
ve şimdi bir ayarlama

02:55.380 --> 02:57.210
olarak, bu düğmeye tıklandığında

02:57.210 --> 03:00.320
bu işlevin çağrıldığından emin olmamız gerekiyor.

03:00.320 --> 03:04.100
Üretim yapmak için silme işlemindeki prop'ları işaret edin

03:04.100 --> 03:06.990
ve bunu çalıştırmayın, bunun yerine sadece işaret

03:06.990 --> 03:09.650
edin, böylece bu prop'ta aldığımız bu işlev,

03:09.650 --> 03:12.930
bu düğmeye tıkladığımda çağrılacaktır.

03:12.930 --> 03:15.203
Bu yaklaşımdaki tek sorun,

03:15.203 --> 03:19.460
bu fonksiyonda parametre olarak yapılacak işin

03:19.460 --> 03:22.970
kimliğini almayı beklememizdir.

03:22.970 --> 03:26.620
Şimdi bunun çalıştığından emin olmak için, burada basitçe bind kullanabiliriz,

03:26.620 --> 03:28.740
to be called functions'daki bu anahtar

03:28.740 --> 03:32.010
kelimeyi umursamıyorum ya da know olarak ayarlamıyorum ama

03:32.010 --> 03:35.920
bind'a aktardığımız ikinci argüman, delete to do'da alınan ilk parametre

03:35.920 --> 03:43.743
olacaktır ve bu to do so to do'nun fikri olmalıdır.

03:43.743 --> 03:43.743
Kimlik burada.

03:44.620 --> 03:47.440
Bununla birlikte çalışmalı, şimdi

03:47.440 --> 03:52.440
bunu kaydediyoruz ve kursu bitirip bir ay içinde bitiriyorum.

03:55.180 --> 03:57.940
Burada Sil'e tıklarsam, o gitti ve bu da gitti, böylece

03:57.940 --> 03:59.700
şimdi hepsi çalışıyor.

03:59.700 --> 04:01.480
Şimdi bunu parlatmak, biraz daha

04:01.480 --> 04:03.690
güzel bir stil eklemek istiyorum ve bundan

04:03.690 --> 04:07.333
sonra buradaki bu temel uygulamayla işimiz bitti.
