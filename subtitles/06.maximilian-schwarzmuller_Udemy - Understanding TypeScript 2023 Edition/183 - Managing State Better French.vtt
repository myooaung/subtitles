WEBVTT

00:02.190 --> 00:04.310
Conférencier : Alors comment mettre à jour l'état à la place ?

00:04.310 --> 00:06.970
Nous pouvons utiliser l'opérateur de répartition

00:06.970 --> 00:09.680
ici, et répartir toutes nos TODO existantes dans ce

00:09.680 --> 00:13.520
tableau, puis ajouter la nouvelle TODO comme un nouvel élément à la fin.

00:13.520 --> 00:16.300
Cela fonctionne, mais ce n'est pas la façon la plus propre de mettre à jour ce système.

00:16.300 --> 00:18.780
Cela fonctionnera très probablement dans tous les scénarios

00:18.780 --> 00:20.090
que nous avons dans cette application,

00:20.090 --> 00:23.170
mais théoriquement, la réaction programme les mises à jour d'état

00:23.170 --> 00:26.050
et donc ce qui est dans notre valeur TODOs ici, pourrait ne pas être

00:26.050 --> 00:28.490
nécessairement le dernier état lorsque cette mise à

00:28.490 --> 00:30.710
jour est effectuée.

00:30.710 --> 00:33.360
Pour garantir cela, nous pouvons passer une fonction à cette fonction

00:33.360 --> 00:35.340
de mise à jour de l'état ici cependant.

00:35.340 --> 00:37.500
Une fonction qui récupère nos TODO précédents et qui,

00:37.500 --> 00:39.680
lorsqu'elle le fait, renvoie le nouvel état.

00:39.680 --> 00:41.460
Tout ceci est soutenu par react.

00:41.460 --> 00:44.370
Cette fonction sera également appelée par react pour nous

00:44.370 --> 00:48.340
et nous pouvons alors compter sur prevTodos à l'intérieur de cette fonction

00:48.340 --> 00:51.363
pour être vraiment le dernier instantané de l'état.

00:52.220 --> 00:55.480
Avec cela, nous mettons à jour nos TODOs avec les anciens TODOs

00:55.480 --> 00:57.080
et les nouveaux et maintenant nous

00:57.080 --> 00:59.100
avons une fonction ici où nous devrions

00:59.100 --> 01:01.860
être en mesure d'ajouter de nouveaux TODOs.

01:01.860 --> 01:03.800
Donc, si nous sauvegardons tout cela,

01:03.800 --> 01:05.470
que nous retournons à l'application

01:05.470 --> 01:10.260
et que nous entrons ici pour terminer le cours, cela fonctionne.

01:10.260 --> 01:14.400
Et si j'arrive à le finir en un mois ici, c'est aussi

01:14.400 --> 01:15.650
ajouté.

01:15.650 --> 01:17.330
Donc, tout cela fonctionne maintenant.

01:17.330 --> 01:18.960
La fonctionnalité manquante maintenant

01:18.960 --> 01:21.180
est que nous pouvons également les supprimer.

01:21.180 --> 01:22.790
Nous le ferons dans le prochain

01:22.790 --> 01:24.310
cours, mais surtout, vous

01:24.310 --> 01:26.470
avez appris à gérer l'état avec react

01:26.470 --> 01:28.260
et typescript, ce qui, outre les

01:28.260 --> 01:29.930
accessoires, est un autre concept

01:29.930 --> 01:31.693
fondamental.
