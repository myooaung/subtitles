WEBVTT

00:02.120 --> 00:04.590
Instructeur : Comme je l'ai mentionné dans la dernière conférence,

00:04.590 --> 00:06.080
le mode veille est un bon début, mais

00:06.080 --> 00:08.910
que faire si nous avons plus d'un fichier TypeScript ?

00:08.910 --> 00:13.370
Et si nous avions aussi une analyse. ts où nous envoyons hypothétiquement

00:13.370 --> 00:18.370
les données analytiques à notre serveur ?

00:18.530 --> 00:21.430
Maintenant, ici pour avoir n'importe quoi là-dedans, je vais

00:21.430 --> 00:24.240
juste mettre une console. mais bien sûr, vous pourriez

00:24.240 --> 00:26.710
envoyer des requêtes HTTP à votre service

00:26.710 --> 00:29.180
d'analyse comme je l'ai dit.

00:29.180 --> 00:32.685
Disons que nous avons également importé ce fichier

00:32.685 --> 00:36.420
ici dans notre index. fichier html.

00:36.420 --> 00:40.320
Si nous pointons du doigt l'analytique. js ici qui n'existe pas encore mais

00:40.320 --> 00:41.730
qui existera après la compilation,

00:41.730 --> 00:44.760
alors nous pourrions charger ces deux fichiers et

00:44.760 --> 00:46.660
bien sûr, nous voulons compiler

00:46.660 --> 00:48.950
les deux fichiers chaque fois que l'un

00:48.950 --> 00:50.900
d'eux change.

00:50.900 --> 00:52.490
Maintenant, pour cela, ce serait

00:52.490 --> 00:55.320
bien si nous pouvions entrer dans un mode de surveillance

00:55.320 --> 00:57.630
générale où nous lançons simplement tsc comme

00:57.630 --> 00:59.790
ceci sans pointer vers un fichier et il surveille

00:59.790 --> 01:02.480
juste notre dossier de projet entier et recompile tout

01:02.480 --> 01:05.823
fichier TypeScript qui pourrait changer.

01:06.720 --> 01:08.960
Eh bien, il s'avère que c'est possible.

01:08.960 --> 01:11.340
Pour cela, nous avons juste besoin

01:11.340 --> 01:15.020
de dire à TypeScript que ceci est un projet qui doit être

01:15.020 --> 01:16.750
géré avec TypeScript et nous

01:16.750 --> 01:18.980
le faisons tout d'abord, et nous

01:18.980 --> 01:20.700
ne devons le faire qu'une

01:20.700 --> 01:23.710
seule fois, en exécutant tsc --init.

01:23.710 --> 01:26.170
Donc je ne pointe pas vers un fichier spécifique

01:26.170 --> 01:29.540
ici, je lance juste tsc et ensuite --init ici et encore une fois,

01:29.540 --> 01:31.230
ce n'est requis qu'une fois.

01:31.230 --> 01:33.530
Il initialisera ce projet dans lequel vous exécutez

01:33.530 --> 01:36.390
cette commande comme un projet TypeScript.

01:36.390 --> 01:39.910
Cela signifie qu'il va maintenant dire à TypeScript que tout ce qui

01:39.910 --> 01:41.850
se trouve dans le dossier où vous exécutez

01:41.850 --> 01:44.160
cette commande et il est donc important que

01:44.160 --> 01:46.470
vous naviguiez dans le bon dossier avant d'exécuter

01:46.470 --> 01:48.070
cette commande avec le terminal

01:48.070 --> 01:50.550
intégré ici dans VS Code.

01:50.550 --> 01:52.910
Je suis automatiquement dans ce dossier de projet

01:52.910 --> 01:55.740
où se trouvent mes fichiers afin que ce projet soit maintenant

01:55.740 --> 01:57.370
géré par TypeScript.

01:57.370 --> 01:58.400
Donc on appuie sur Enter

01:58.400 --> 02:02.634
et ce que ça fait c'est qu'on crée ce tsconfig. json.

02:02.634 --> 02:06.580
Il s'agit essentiellement de l'indicateur pour TypeScript

02:06.580 --> 02:09.950
que le projet dans lequel se trouve ce fichier et tous

02:09.950 --> 02:12.239
les sous-dossiers de ce dossier doivent

02:12.239 --> 02:14.710
être gérés par TypeScript.

02:14.710 --> 02:16.080
Maintenant, si nous jetons un coup d'oeil

02:16.080 --> 02:17.860
à ce fichier, nous voyons qu'il y a un tas d'options,

02:17.860 --> 02:19.330
la plupart d'entre elles sont commentées,

02:19.330 --> 02:22.090
elles sont juste là pour que vous voyiez que vous pouvez les définir et vous

02:22.090 --> 02:24.500
avez une courte explication ici aussi mais nous n'avons pas à nous

02:24.500 --> 02:26.380
soucier de celles-ci pour le moment.

02:26.380 --> 02:29.040
Nous y reviendrons dans une seconde.

02:29.040 --> 02:31.610
Pour l'instant, fermons ce fichier et voyons

02:32.800 --> 02:35.100
ce que cela nous donne, car ce que cela

02:35.100 --> 02:36.550
nous donne, c'est que nous

02:36.550 --> 02:39.870
pouvons maintenant exécuter tsc comme ceci sans pointer

02:39.870 --> 02:42.610
vers un fichier spécifique.

02:42.610 --> 02:45.550
Et ce que cela va faire, c'est dire à TypeScript d'aller

02:45.550 --> 02:49.080
de l'avant et de compiler tous les fichiers TypeScript afin

02:49.080 --> 02:53.090
que tous les fichiers . ts fichiers qu'il peut trouver dans ce projet,

02:53.090 --> 02:54.770
donc si j'appuie sur Entrée ici, vous voyez,

02:54.770 --> 02:56.830
cela prend un certain temps, et maintenant ce que

02:56.830 --> 03:02.620
nous avons est cette analyse. js et cette application.

03:02.620 --> 03:02.620
fichier js.

03:02.620 --> 03:05.160
Maintenant, l'analyse. js vient d'être créé par TypeScript

03:05.160 --> 03:10.060
parce qu'il a trouvé que nous avons l'analytique.

03:10.060 --> 03:10.060
ts

03:10.060 --> 03:13.390
et, comme je l'ai dit, il va maintenant compiler tous les fichiers

03:13.390 --> 03:14.730
TypeScript du projet.

03:14.730 --> 03:17.660
Et bien sûr, cela peut aussi être combiné avec le mode montre.

03:17.660 --> 03:20.630
Vous pouvez exécuter tsc -w ou --watch comme je l'ai

03:20.630 --> 03:23.420
montré précédemment et cela va maintenant entrer

03:23.420 --> 03:26.970
en mode surveillance pour tous les fichiers TypeScript.

03:26.970 --> 03:29.590
Donc maintenant, chaque fois que je change l'un d'entre

03:29.590 --> 03:31.920
eux et que je l'enregistre, il se recompile.

03:31.920 --> 03:33.840
Il recompilera le fichier qui a été modifié

03:33.840 --> 03:36.100
et, par conséquent, tous les changements reflétés

03:36.100 --> 03:37.800
dans le fichier JavaScript.

03:37.800 --> 03:38.633
Et c'est maintenant ici.

03:38.633 --> 03:41.430
Si je suis retourné à ma page, nous voyons les données d'envoi aussi bien

03:41.430 --> 03:44.463
parce que maintenant l'analytique. ts a également été compilé.
