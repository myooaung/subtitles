WEBVTT

00:02.120 --> 00:04.420
Instruktor: Oprócz tworzenia dekoratora

00:04.420 --> 00:07.060
w ten sposób, możemy również zdefiniować fabrykę

00:07.060 --> 00:10.150
dekoratorów, która zasadniczo zwraca funkcję dekoratora,

00:10.150 --> 00:13.120
ale pozwala nam skonfigurować ją, gdy przypisujemy

00:13.120 --> 00:15.440
ją jako dekorator do czegoś.

00:15.440 --> 00:18.210
Aby to pokazać, przekształćmy tę funkcję

00:18.210 --> 00:19.790
tutaj w fabrykę.

00:19.790 --> 00:22.260
W tym celu złapię ten argument konstruktora

00:22.260 --> 00:23.220
i usunę go, a zamiast

00:23.220 --> 00:24.170
tego tutaj zwrócę

00:24.170 --> 00:26.120
nową, anonimową funkcję, która przyjmuje

00:26.120 --> 00:28.000
ten argument konstruktora i która

00:28.000 --> 00:29.920
następnie przechowuje to logowanie,

00:29.920 --> 00:33.070
które chcę wykonać wewnątrz dekoratora, więc przenoszę

00:33.070 --> 00:34.610
to tam.

00:34.610 --> 00:37.890
Więc teraz mamy funkcję, która zwraca nową funkcję.

00:37.890 --> 00:40.780
Więc teraz, kiedy chcemy zastosować ten dekorator,

00:40.780 --> 00:43.350
musimy wykonać go jako funkcję tutaj, więc wykonujemy

00:43.350 --> 00:45.740
tę zewnętrzną funkcję i dołączamy wartość

00:45.740 --> 00:47.670
zwrotną, która jest tą wewnętrzną

00:47.670 --> 00:49.000
funkcją, która jest naszą

00:49.000 --> 00:51.350
poprawną funkcją dekoratora, jako dekorator

00:51.350 --> 00:53.430
do klasy dlatego.

00:53.430 --> 00:54.740
Dlaczego mielibyśmy to robić?

00:54.740 --> 00:56.630
Ponieważ teraz tutaj, na przykład,

00:56.630 --> 00:59.440
moglibyśmy przyjąć ciąg logów, który jest ciągiem,

00:59.440 --> 01:00.390
dowolny argument

01:00.390 --> 01:01.790
z wyboru i tyle argumentów,

01:01.790 --> 01:03.750
ile chcesz, i przekazać wartość

01:03.750 --> 01:08.230
dla tego w "logowanie - osoba" i użyć tego wewnątrz naszej funkcji dekoratora,

01:08.230 --> 01:11.280
tak że tutaj, zamiast pokazywać ten standardowy

01:11.280 --> 01:16.300
tekst logowania, pokazujemy nasz ciąg logów.

01:16.300 --> 01:18.540
Więc teraz możemy dostosować wartości,

01:18.540 --> 01:22.100
których używa funkcja dekoratora, gdy wykonuje się

01:22.100 --> 01:25.000
z naszą funkcją fabryczną.

01:25.000 --> 01:27.410
Teraz nazywamy tutaj nasz dekorator,

01:27.410 --> 01:30.710
ponieważ nie wykonujemy funkcji dekoratora, ale

01:30.710 --> 01:33.290
wykonujemy funkcję, która zwróci taką

01:33.290 --> 01:35.060
funkcję dekoratora.

01:35.060 --> 01:36.940
A zaletą tego jest to, że możemy

01:36.940 --> 01:40.790
teraz przekazać wartości, które będą używane przez tę wewnętrzną

01:40.790 --> 01:43.750
zwróconą funkcję dekoratora.

01:43.750 --> 01:47.050
Więc jeśli teraz zapiszę to, widzimy stare wyjście, ale

01:47.050 --> 01:49.940
z naszym niestandardowym ciągiem logów tutaj.

01:49.940 --> 01:53.010
Tak więc użycie fabryk dekoratorów może dać

01:53.010 --> 01:55.730
nam większą moc i więcej możliwości konfiguracji

01:55.730 --> 01:59.973
tego, co dekorator następnie robi wewnętrznie.
