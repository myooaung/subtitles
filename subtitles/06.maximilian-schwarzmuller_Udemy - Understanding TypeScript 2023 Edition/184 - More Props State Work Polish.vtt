WEBVTT

00:02.110 --> 00:04.160
Instruktor: Więc w tej małej aplikacji

00:04.160 --> 00:07.390
dummy, chcę również zapewnić, że możemy usunąć to

00:07.390 --> 00:08.500
do i aby to wdrożyć,

00:08.500 --> 00:11.610
upewnijmy się, że w liście to do, w naszym elemencie

00:11.610 --> 00:14.220
listy, nie mamy po prostu tekst to do, ale

00:14.220 --> 00:17.640
że możemy mieć, że wewnątrz span, a następnie oprócz

00:17.640 --> 00:23.140
tego w tym samym elemencie listy, mamy przycisk, jak również, przycisk, gdzie mówimy

00:23.140 --> 00:28.120
usuń tak i kiedy ten przycisk jest naciśnięty, będę chciał usunąć to to do, więc

00:28.120 --> 00:31.368
na kliknięcie tutaj, chcę zrobić coś, co pozbywa się

00:31.368 --> 00:34.900
tego to do Teraz, ponieważ udało się to zrobić jest tutaj

00:34.900 --> 00:38.040
w komponencie aplikacji, potrzebujemy nowej funkcji

00:38.040 --> 00:42.100
tutaj to do delete handler, który jest uruchamiany i który następnie

00:42.100 --> 00:46.440
czyści to to do z tej listy.

00:46.440 --> 00:47.700
Więc tutaj jako nasz argument,

00:47.700 --> 00:50.690
spodziewam się uzyskać ID to do, które jest łańcuchem,

00:50.690 --> 00:53.340
ponieważ w naszym modelu to do i ID jest łańcuchem,

00:55.650 --> 00:59.010
a następnie w nim ponownie nazywamy set to do's, ale teraz,

00:59.010 --> 01:01.260
aby usunąć to do.

01:01.260 --> 01:03.200
Do tego wszystkiego ponownie użyj tej

01:03.200 --> 01:04.750
funkcji forum, ponieważ mamy

01:04.750 --> 01:06.940
aktualizację stanu, która zależy od poprzedniego

01:06.940 --> 01:09.460
stanu i w niej zwrócę nową tablicę.

01:09.460 --> 01:13.520
i to będzie w zasadzie moja stara tablica, ale przefiltrowana.

01:13.520 --> 01:16.230
Filtr jest wbudowaną metodą w JavaScript,

01:16.230 --> 01:18.020
która zwraca nową tablicę danych,

01:18.020 --> 01:21.270
a ta nowa tablica będzie w zasadzie starą tablicą

01:21.270 --> 01:24.490
minus wszystko, co odfiltrujesz.

01:24.490 --> 01:26.810
Filter przyjmuje funkcję, która jest wykonywana

01:26.810 --> 01:28.590
na każdym elemencie w starej tablicy

01:28.590 --> 01:31.390
i kiedy ta funkcja, którą przekazujesz i zwraca true,

01:31.390 --> 01:34.160
element jest zachowany i dodany do nowej tablicy, jeśli

01:34.160 --> 01:37.330
zwróci false, zostanie porzucony.

01:37.330 --> 01:39.820
Więc będzie działać na wszystkich to do, które

01:39.820 --> 01:42.810
już mamy, a teraz musimy mieć jakąś logikę, która zwraca

01:42.810 --> 01:45.330
false, jeśli ID to do, które oglądamy jest równe

01:45.330 --> 01:48.120
ID to do, które otrzymujemy tutaj.

01:48.120 --> 01:52.100
Tak, że jak jest równa liczba to do, to się zrzuca.

01:52.100 --> 01:53.570
Potrzebujemy więc tutaj

01:53.570 --> 01:55.560
false nie true i stąd odwróćmy to

01:55.560 --> 01:57.430
w next i dodajmy wykrzyknik.

01:57.430 --> 02:00.620
Dzięki temu zachowamy wszystkie to do, ale to to do, którego

02:00.620 --> 02:03.430
ID jest równe ID, które otrzymujemy tutaj, ponieważ

02:03.430 --> 02:05.130
jest to ID, które chcemy upuścić,

02:05.130 --> 02:07.833
ponieważ jest to to do, które chcemy usunąć.

02:08.710 --> 02:11.499
Teraz musimy się upewnić, że obsługa usuwania

02:11.499 --> 02:14.610
to do może być wywołana z wnętrza listy to do i

02:14.610 --> 02:16.370
znowu możemy użyć do tego

02:16.370 --> 02:19.580
rekwizytów i dodać on Delete to do prop tutaj i

02:19.580 --> 02:22.520
wskazać na obsługę usuwania to do, ale oczywiście

02:22.520 --> 02:25.100
TypeScript nie jest zbyt zadowolony

02:25.100 --> 02:27.240
z tego, ponieważ na rekwizytach

02:27.240 --> 02:30.000
listy to do, nie mówimy nic o tym on delete

02:30.000 --> 02:33.130
to do prop tutaj.

02:33.130 --> 02:34.350
Zmieńmy to.

02:34.350 --> 02:38.730
W liście to do TSX dodajmy delete to do jako prop i to będzie teraz wskazywało

02:38.730 --> 02:40.530
na funkcję, więc potrzebujemy

02:40.530 --> 02:42.218
tutaj typu funkcji, funkcji,

02:42.218 --> 02:45.380
która ostatecznie nic nie zwraca.

02:45.380 --> 02:48.150
Tak void, ale który dostaje ideę

02:48.150 --> 02:51.380
to be deleted to do jako parametr.

02:51.380 --> 02:54.230
Teraz błąd w komponencie aplikacji zniknął, a teraz

02:54.230 --> 02:55.380
jako dostosowanie musimy

02:55.380 --> 02:57.210
upewnić się, że ta funkcja jest wywoływana,

02:57.210 --> 03:00.320
gdy ten przycisk zostanie kliknięty.

03:00.320 --> 03:04.100
Produkcja wskazuje na rekwizyty na delete, aby zrobić i nie wykonać

03:04.100 --> 03:06.990
to, ale zamiast tego po prostu wskazać, aby ta funkcja,

03:06.990 --> 03:09.650
którą otrzymujemy na tym rekwizycie, została

03:09.650 --> 03:12.930
wywołana, gdy kliknę ten przycisk występuje.

03:12.930 --> 03:15.203
Jedynym problemem było to podejście,

03:15.203 --> 03:19.460
jest to, że tutaj na tej funkcji, oczekujemy, że otrzymamy identyfikator

03:19.460 --> 03:22.970
do zrobienia jako parametr.

03:22.970 --> 03:26.620
Teraz, aby upewnić się, że to działa, możemy po prostu użyć

03:26.620 --> 03:28.740
bind tutaj, nie obchodzi mnie to słowo

03:28.740 --> 03:32.010
kluczowe w to, aby być nazywanym funkcjami lub ustawić

03:32.010 --> 03:35.920
go na know, ale drugi argument, który przekazujemy do bind, będzie

03:35.920 --> 03:39.570
pierwszym parametrem otrzymanym w na delete to do i to powinno

03:39.570 --> 03:43.743
być ideą to do. ID tutaj.

03:44.620 --> 03:47.440
Z tym powinno zadziałać teraz zapisujemy

03:47.440 --> 03:52.440
to i dodaję zakończ kurs i zakończ go w miesiąc.

03:55.180 --> 03:57.940
Jeśli kliknę na Delete here, to zniknęło i to, więc

03:57.940 --> 03:59.700
to teraz wszystko działa.

03:59.700 --> 04:01.480
Teraz chcę to tylko wypolerować,

04:01.480 --> 04:03.690
dodać trochę ładniejszej stylizacji

04:03.690 --> 04:07.333
do tego i po tym skończymy z tą podstawową aplikacją tutaj.
