WEBVTT

00:02.260 --> 00:05.180
Giảng viên: Bây giờ nếu chúng ta quay lại giao diện này ở

00:05.180 --> 00:08.230
đây, câu hỏi đặt ra là tại sao chúng ta cần giao diện này?

00:08.230 --> 00:10.160
Chúng ta sẽ không có cùng một thứ

00:10.160 --> 00:13.420
nếu chúng ta thêm một loại tùy chỉnh ở đây và ở đó?

00:13.420 --> 00:15.580
Sự khác biệt chỉ là chúng ta phải thêm một

00:15.580 --> 00:18.470
dấu bằng và sau đó chúng ta nói kiểu Người là một đối tượng

00:18.470 --> 00:19.940
trông như thế này?

00:19.940 --> 00:21.490
Và thực sự, nếu chúng ta lưu nó,

00:21.490 --> 00:23.220
nó sẽ biên dịch mà không có lỗi.

00:23.220 --> 00:26.740
Vì vậy, chúng tôi có thể thay thế giao diện của mình bằng loại như

00:26.740 --> 00:28.490
vậy và nó hoạt động như trước.

00:28.490 --> 00:31.290
Vậy tại sao chúng ta lại có một giao diện?

00:31.290 --> 00:32.277
Chà, giao diện và

00:32.277 --> 00:35.310
loại tùy chỉnh không hoàn toàn giống nhau trong

00:35.310 --> 00:39.260
khi thông thường, bạn có thể sử dụng chúng thay thế cho nhau và bạn

00:39.260 --> 00:42.130
có thể sử dụng giao diện thay vì loại tùy chỉnh

00:42.130 --> 00:43.520
hoặc ngược lại.

00:43.520 --> 00:45.720
Cũng có một số khác biệt.

00:45.720 --> 00:47.400
Chà, một điểm khác biệt về bản chất

00:47.400 --> 00:49.070
là các giao diện chỉ có thể được

00:49.070 --> 00:51.470
sử dụng để mô tả cấu trúc của một đối tượng, bạn

00:51.470 --> 00:53.780
cũng có thể sử dụng loại cho điều đó, nhưng

00:53.780 --> 00:55.250
thay vì loại tùy chỉnh, bạn

00:55.250 --> 00:56.800
cũng có thể lưu trữ những thứ

00:56.800 --> 01:00.350
khác như loại kết hợp, v.v. làm sớm trong khóa học.

01:00.350 --> 01:03.740
Do đó, nghe có vẻ như loại linh hoạt hơn,

01:03.740 --> 01:08.510
nhưng mặt khác của đồng xu là giao diện đó rõ ràng hơn.

01:08.510 --> 01:10.870
Khi bạn định nghĩa một thứ gì đó như một

01:10.870 --> 01:12.900
giao diện, rõ ràng là bạn muốn xác

01:12.900 --> 01:15.580
định cấu trúc của một đối tượng với thứ đó.

01:15.580 --> 01:18.360
Và thực sự khi nói đến việc xác định các loại đối tượng,

01:18.360 --> 01:21.630
bạn thường thấy các giao diện ngoài kia nhiều hơn.

01:21.630 --> 01:23.800
Sau đó, bạn sẽ thấy các loại tùy chỉnh.

01:23.800 --> 01:26.410
Bây giờ, một điều khác mà bạn có thể thực hiện với

01:26.410 --> 01:27.530
các giao diện nhưng

01:27.530 --> 01:30.090
bạn chỉ có thể thực hiện với các loại tùy chỉnh

01:30.090 --> 01:33.360
là bạn có thể triển khai một giao diện trong một lớp.

01:33.360 --> 01:34.820
Chúng ta có nghĩa là gì vậy?

01:34.820 --> 01:38.360
Lý do tại sao bạn thường làm việc với các giao diện

01:38.360 --> 01:40.550
là vì một giao diện có thể được sử

01:40.550 --> 01:43.750
dụng như một hợp đồng mà một lớp có thể thực hiện

01:43.750 --> 01:46.400
và sau đó một lớp phải tuân theo.

01:46.400 --> 01:48.150
Chúng ta có ý nghĩa gì với điều đó?

01:48.150 --> 01:52.390
Giả sử giao diện của chúng ta không phải là giao diện Người

01:52.390 --> 01:53.970
có tên và tuổi, nhưng

01:53.970 --> 01:57.690
thay vào đó, chúng ta đặt tên là Greetable.

01:57.690 --> 01:59.270
Bây giờ điều này có thể trông

01:59.270 --> 02:01.090
giống như một cái tên lạ nhưng

02:01.090 --> 02:03.560
cuối cùng điều này chỉ nói rằng bất kỳ đối

02:03.560 --> 02:06.310
tượng nào nên được coi là Greetable phải là

02:06.310 --> 02:09.251
đối tượng có tên và có phương thức chào.

02:09.251 --> 02:10.783
Vì vậy, bây giờ, chúng ta có

02:10.783 --> 02:14.630
thể nói điều này ở đây, biến user1 này sẽ chứa một đối tượng Greetable

02:14.630 --> 02:16.730
và tất nhiên bây giờ chúng ta gặp lỗi vì

02:16.730 --> 02:19.930
chúng ta có nhiều thứ hơn là chỉ có tên và lời chào.

02:19.930 --> 02:22.000
Nhưng chúng ta có thể sử dụng

02:22.000 --> 02:25.860
giao diện này để chia sẻ nó giữa nhiều lớp, chúng ta

02:25.860 --> 02:27.410
phải đảm bảo rằng mọi

02:27.410 --> 02:30.860
lớp tuân thủ giao diện này phải có thuộc tính tên

02:30.860 --> 02:33.410
và phải có phương thức chào.

02:33.410 --> 02:35.730
Vì vậy, ở đây, bây giờ chúng ta có thể thêm một lớp Người,

02:35.730 --> 02:36.970
tên này có sẵn một lần nữa vì

02:36.970 --> 02:38.540
chúng ta đã đổi tên giao diện.

02:38.540 --> 02:40.790
Và bây giờ, nói với TypeScript

02:40.790 --> 02:45.480
và lớp này về cơ bản phải tuân theo giao diện này.

02:45.480 --> 02:48.350
Nó sẽ thực hiện giao diện này.

02:48.350 --> 02:53.000
Nó sẽ tuân theo thiết lập hợp đồng đó bằng giao diện này.

02:53.000 --> 02:55.260
Chúng tôi làm điều này bằng cách thêm từ

02:55.260 --> 02:56.930
khóa thực hiện sau tên lớp.

02:56.930 --> 02:59.280
Và sau đó, tên giao diện của chúng ta, Greetable.

03:00.420 --> 03:02.780
Và bạn có thể triển khai nhiều hơn một giao diện.

03:02.780 --> 03:04.710
Đó là một sự khác biệt so với thừa kế.

03:04.710 --> 03:07.270
Bạn chỉ có thể kế thừa từ một lớp, bạn có

03:07.270 --> 03:09.370
thể triển khai nhiều giao diện

03:09.370 --> 03:12.730
bằng cách tách chúng bằng dấu phẩy, vì vậy, ở đó,

03:12.730 --> 03:14.750
chúng ta có thể có một giao diện

03:14.750 --> 03:16.000
khác nếu có.

03:16.000 --> 03:17.710
Ở đây, tôi chỉ có một mà thôi.

03:17.710 --> 03:20.350
Và bây giờ, hàm ý của điều này là chúng ta

03:20.350 --> 03:21.740
gặp lỗi ở đây vì lớp của

03:21.740 --> 03:25.200
chúng ta triển khai giao diện không chính xác.

03:25.200 --> 03:27.240
Nó không có thuộc tính tên,

03:27.240 --> 03:29.690
không có phương thức chào.

03:29.690 --> 03:33.960
Vì vậy, bây giờ, chúng ta phải đặt cái này ở đây trong lớp của mình,

03:33.960 --> 03:35.610
có thể tôi sẽ đặt một hàm tạo

03:35.610 --> 03:38.173
nơi chúng ta nhận giá trị cho tên, sau đó

03:39.010 --> 03:41.260
thiết lập nó như thế này, và nơi chúng

03:41.260 --> 03:44.380
ta cũng thêm phương thức chào của mình vào nơi

03:44.380 --> 03:48.080
chúng ta có thể có logic này từ ngoài kia.

03:48.080 --> 03:50.780
Bây giờ, trong lớp học của chúng tôi, chúng tôi có thể có nhiều hơn thế.

03:50.780 --> 03:52.340
Chúng ta có thể có nhiều trường

03:52.340 --> 03:53.920
hơn, chúng ta có thể có nhiều phương

03:53.920 --> 03:56.030
thức hơn, chúng ta cũng có thể mở rộng lớp

03:56.030 --> 03:59.170
này, chúng ta có thể làm việc với lớp này như mọi khi.

03:59.170 --> 04:02.640
Nhưng chúng tôi buộc phải triển khai phương thức này một cách

04:02.640 --> 04:04.400
chính xác để có thuộc tính tên này

04:04.400 --> 04:07.040
vì chúng tôi đang triển khai giao diện này.

04:07.040 --> 04:09.740
Và do đó, các giao diện thường được sử dụng

04:09.740 --> 04:13.870
để chia sẻ chức năng giữa các lớp khác nhau không liên quan đến

04:13.870 --> 04:16.550
việc triển khai cụ thể của chúng.

04:16.550 --> 04:19.240
Bạn không thể triển khai hoặc có các giá trị bên

04:19.240 --> 04:22.450
trong giao diện nhưng liên quan đến cấu trúc, liên quan

04:22.450 --> 04:24.980
đến các tính năng mà một lớp nên có.

04:24.980 --> 04:28.120
Do đó, nó giống như làm việc với các lớp trừu tượng,

04:28.120 --> 04:29.640
do đó, điểm khác biệt là

04:29.640 --> 04:33.520
một giao diện hoàn toàn không có chi tiết triển khai, trong

04:33.520 --> 04:37.160
khi các lớp trừu tượng có thể là sự kết hợp giữa bạn phải

04:37.160 --> 04:39.330
ghi đè lên các phần này và tôi có

04:39.330 --> 04:42.470
một phần triển khai cụ thể.

04:42.470 --> 04:43.730
Đó là sự khác biệt quan

04:43.730 --> 04:46.860
trọng giữa giao diện và lớp trừu tượng.

04:46.860 --> 04:47.850
Tuy nhiên, bây giờ với điều

04:47.850 --> 04:49.790
đó, chúng tôi có lớp người của chúng tôi ở đây.

04:49.790 --> 04:53.910
Và bây giờ ở đây, user1 có thể được tạo bằng cách

04:53.910 --> 04:55.930
sử dụng Người mới và nhập

04:55.930 --> 04:58.090
tên chẳng hạn.

04:58.090 --> 04:59.730
Và bây giờ, hãy sử dụng xem

04:59.730 --> 05:02.300
có ổn không khi chúng tôi có độ tuổi này ở

05:02.300 --> 05:05.870
đây trong user1 vì chúng tôi đưa user1 dựa trên Person,

05:05.870 --> 05:07.540
Person triển khai Greetable

05:07.540 --> 05:10.440
và bạn có thể thêm nhiều hơn Greetable trong một

05:10.440 --> 05:14.010
lớp nhưng bạn phải đáp ứng các điều kiện do giao diện thiết

05:14.010 --> 05:15.120
lập.

05:15.120 --> 05:17.130
Và do đó, bây giờ, nếu chúng tôi lưu mọi thứ, chúng

05:17.130 --> 05:18.730
tôi có một mã hợp lệ và nếu chúng tôi đăng

05:18.730 --> 05:23.040
nhập user1 của mình xuống đó bằng console. log, chúng ta thấy rằng nó là

05:23.040 --> 05:25.430
một đối tượng bình thường với tuổi

05:25.430 --> 05:27.590
và tên trong trường hợp này,

05:27.590 --> 05:30.950
nhưng điểm mấu chốt là nó dựa trên một lớp thực

05:30.950 --> 05:32.770
hiện giao diện.

05:32.770 --> 05:35.550
Và sau đó bạn có thể sử dụng tất cả giao diện như một loại.

05:35.550 --> 05:37.780
Tất nhiên, chúng ta có thể đặt kiểu này thành

05:37.780 --> 05:40.580
kiểu Person, nhưng như bạn thấy, sử dụng kiểu Greetable

05:40.580 --> 05:42.200
ở đây nó hoạt động vì đối tượng Person

05:42.200 --> 05:45.090
mà chúng ta lưu trữ trong lớp user1 cuối cùng dựa trên giao

05:45.090 --> 05:46.300
diện Greetable.

05:46.300 --> 05:47.750
Nó thực hiện điều này.

05:47.750 --> 05:49.820
Vì vậy, đó là một tính năng mạnh mẽ khác.

05:49.820 --> 05:53.690
Bạn có thể sử dụng một giao diện như một loại trên một

05:53.690 --> 05:58.010
số hằng số hoặc biến mà sau đó sẽ thực sự lưu trữ một lớp khác

05:58.010 --> 06:02.330
thuộc loại khác, lần lượt dựa trên loại giao diện vì nó thực

06:02.330 --> 06:03.950
hiện nó.

06:03.950 --> 06:06.530
Vì vậy, đó là các giao diện một cách ngắn gọn.

06:06.530 --> 06:08.643
Rất nhiều tính năng mạnh mẽ bao gồm.
