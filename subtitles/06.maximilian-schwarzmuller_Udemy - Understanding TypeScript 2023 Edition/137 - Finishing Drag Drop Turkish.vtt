WEBVTT

00:02.300 --> 00:03.133
Eğitmen: Tabii ki

00:03.133 --> 00:05.250
amacımız sadece o kimliği kaydetmek değil.

00:05.250 --> 00:09.340
Bunun yerine, proje kimliğini günlükte, bırakma işleyicisinde

00:09.340 --> 00:11.110
çıkarmak istiyorum.

00:11.110 --> 00:15.410
Ve bununla birlikte amaç, projeyi gerçekten harekete geçirmek veya daha

00:15.410 --> 00:18.910
kesin olmak gerekirse proje durumunu değiştirmektir.

00:18.910 --> 00:21.400
Şimdi, bunu nasıl yapabiliriz?

00:21.400 --> 00:26.063
Şu anda bir addProject yöntemine sahip olduğumuz proje durumumuzda,

00:26.950 --> 00:30.000
bir moveProject yöntemine de ihtiyacımız

00:30.000 --> 00:33.160
olduğunu söyleyebilirim.

00:33.160 --> 00:35.060
Ve bu yöntemin amacı temel olarak

00:35.060 --> 00:38.550
bir projenin durumunu değiştirmek olacaktır.

00:38.550 --> 00:40.180
Elbette, bu nedenle SwitchProjectStatus

00:40.180 --> 00:42.970
veya ne isterseniz onu da adlandırabilirsiniz, ancak sürükle-bırak

00:42.970 --> 00:44.390
yaptığımız için ben buna MoveProject

00:44.390 --> 00:46.440
adını veriyorum.

00:46.440 --> 00:49.470
MoveProject'te amaç, bir projeyi şu anda

00:49.470 --> 00:53.860
bulunduğu listeden yeni bir listeye taşımaktır.

00:53.860 --> 00:55.460
Şimdi, bu her zaman proje durumunu

00:55.460 --> 00:58.030
aktiften bitmişe ya da tam tersine çevirmemiz

00:58.030 --> 01:00.480
gerektiği anlamına gelmez.

01:00.480 --> 01:02.870
Sonuçta, bir kullanıcı bunu yapıyor olabilir,

01:02.870 --> 01:05.060
aynı kutuya sürükle ve bırak.

01:05.060 --> 01:07.120
Bu nedenle, her zaman durumu değiştiren

01:07.120 --> 01:10.680
bir yöntemi tetiklersek, aynı kutuya bırakmanın projeyi

01:10.680 --> 01:12.690
diğer kutuya geçirdiği beklenmedik

01:12.690 --> 01:15.754
bir etkiye sahip oluruz.

01:15.754 --> 01:18.972
Bunun yerine, MoveProject'te, hangi projenin taşınacağını

01:18.972 --> 01:23.402
ve yeni kutunun hangi kutu olduğunu gerçekten bilmemiz gerekir.

01:23.402 --> 01:24.235
Peki, yeni statü hangi statüdür.

01:25.940 --> 01:28.190
Dolayısıyla, burada bir dize olması gereken

01:28.190 --> 01:31.410
proje kimliğini ve yeni durumu almayı bekliyorum.

01:31.410 --> 01:34.130
Ve elbette buradaki yeni durum ProjectStatus

01:34.130 --> 01:36.410
türünde olabilir.

01:38.580 --> 01:40.803
Ve sonra MoveProject'in içinde,

01:41.692 --> 01:44.320
proje dizimde bu kimliğe sahip bir

01:44.320 --> 01:46.830
proje bulmak istiyorum.

01:46.830 --> 01:49.090
Yani burada, bu proje dizisinde

01:49.090 --> 01:51.680
ve sonra durumunu çevirin.

01:51.680 --> 01:54.580
Bunun için bu projeye ulaşabilir, orada

01:54.580 --> 01:57.450
bir proje bulabiliriz ve find yöntemi bunun

01:57.450 --> 01:59.440
için mükemmeldir.

01:59.440 --> 02:01.210
Bu dizideki her öğe üzerinde çalışır,

02:01.210 --> 02:02.680
bize her öğeye erişim sağlar

02:02.680 --> 02:03.970
ve sonra aradığımız öğe ise

02:03.970 --> 02:05.770
true döndürmemiz gerekir.

02:05.770 --> 02:07.150
Ve şu anda baktığımız

02:07.150 --> 02:09.860
öğenin kimliği burada argüman olarak

02:09.860 --> 02:12.830
aldığım projectId'ye eşitse true döndürmek

02:12.830 --> 02:15.420
istiyorum, o zaman değişmesi gereken

02:15.420 --> 02:17.470
öğeye sahibiz ve bu öğede durumu

02:17.470 --> 02:21.070
yeni duruma değiştirmemiz gerekiyor.

02:21.070 --> 02:22.653
Şimdi bu null olabilir, bu yüzden

02:23.490 --> 02:26.490
burada bunu çağıracağım, proje, şimdi proje adlı sabit

02:26.490 --> 02:28.080
olarak saklanır ve projenin

02:28.080 --> 02:30.550
var olup olmadığını kontrol eder.

02:30.550 --> 02:34.160
Ve eğer varsa, o zaman durumu buradaki yeni duruma

02:34.160 --> 02:39.160
eşit olarak ayarlamak istiyorum. Bu kadar basit.

02:39.250 --> 02:42.900
Bu zaten dizideki nesneyi değiştirecektir

02:42.900 --> 02:45.643
ve temelde işimiz bitmiştir.

02:46.970 --> 02:50.010
Ancak elbette işimiz tamamen bitmiş değil.

02:50.010 --> 02:52.250
Şimdi herkese, tüm dinleyicilerimize projemizle

02:52.250 --> 02:56.040
ilgili bir şeylerin değiştiğini ve yeniden oluşturmaları gerektiğini

02:56.040 --> 02:57.870
bildirmemiz gerekiyor.

02:57.870 --> 02:59.980
Bu yüzden tüm dinleyicileri tekrar gözden

02:59.980 --> 03:01.910
geçirmemiz gerekiyor ve burada kodu tekrar

03:01.910 --> 03:04.080
edeceğimiz için, bunu yeni bir özel yöntemde

03:04.080 --> 03:07.920
dış kaynak olarak kullanacağım, updateListeners uygun bir isim olabilir

03:07.920 --> 03:10.490
ve orada tüm dinleyicileri gözden geçirip bir şeyler

03:10.490 --> 03:13.660
yapacağımız bu for döngüsüne sahip olacağım.

03:13.660 --> 03:15.890
Ve sonra bu updateListeners'ı

03:15.890 --> 03:17.430
hem addProject hem de

03:17.430 --> 03:20.890
moveProject yönteminden çağıracağım.

03:20.890 --> 03:23.033
Burada, sadece bir şeyi değiştirirsek.

03:24.350 --> 03:26.100
Şimdi tüm dinleyiciler tetiklenecektir.

03:26.100 --> 03:28.980
Ve hatırlarsanız, buradaki uygulamamızdaki bir dinleyici,

03:28.980 --> 03:33.010
temel olarak listenin öğelerini yeniden oluşturmasına yol açar.

03:33.010 --> 03:35.310
Yani bu tam olarak olması gerektiği gibi çalışacaktır

03:35.310 --> 03:37.940
ya da tam olarak olması gerektiği gibi çalışmalıdır.

03:37.940 --> 03:40.640
Şimdi moveProject metodumuz var, aşağıda

03:40.640 --> 03:43.730
drop handler'da, şimdi bunu kullanabiliriz.

03:43.730 --> 03:46.390
Artık projectState'i kullanabilir, moveProject'i

03:46.390 --> 03:49.670
çağırabilir ve proje kimliğini ve şimdi de yeni proje

03:49.670 --> 03:52.296
durumunu aktarabiliriz.

03:52.296 --> 03:54.190
Ve yeni proje durumu,

03:54.190 --> 03:57.880
bunu bıraktığımız listeye bağlıdır.

03:57.880 --> 03:59.630
Bu yüzden, drop handler'ımı otomatik

04:00.760 --> 04:01.790
olarak bağlamak istiyorum,

04:01.790 --> 04:04.050
böylece drop handler'daki this anahtar

04:04.050 --> 04:06.020
sözcüğü çevreleyen sınıfa atıfta

04:06.020 --> 04:08.500
bulunur ve bu çevreleyen sınıf, hatırlarsanız,

04:08.500 --> 04:10.320
burada bir tür özelliğine sahip

04:10.320 --> 04:13.020
olacak bir proje listesidir, burada depoluyoruz,

04:13.020 --> 04:18.120
bir türümüz, özelliğimiz var ve bu aktif veya bitmiş.

04:18.120 --> 04:21.000
Şimdi tek yapmamız gereken aktif veya bitmiş değerlerini

04:21.000 --> 04:22.640
enum değerlerimize çevirmek.

04:22.640 --> 04:24.850
İşte, bunu geçiyorum. türünü seçiyorum ve active

04:24.850 --> 04:27.230
değerine eşit olup olmadığını kontrol ediyorum, bu durumda

04:27.230 --> 04:31.580
ProjectStatus değerini geçiyoruz. Aktif, projenin yeni durumu

04:31.580 --> 04:33.750
olarak, çünkü projeyi

04:33.750 --> 04:36.190
taşıdığımız listenin durumu

04:36.190 --> 04:38.160
budur.

04:38.160 --> 04:41.733
Aksi takdirde, ProjectStatus'u aktarırız. Bitti ve okumayı kolaylaştırmak

04:42.660 --> 04:45.423
için yeniden biçimlendirmeme izin verin.

04:46.730 --> 04:48.110
Bununla birlikte bir deneyelim.

04:48.110 --> 04:52.440
Tümünü kaydedelim ve buraya yeni bir proje ekleyelim ve şimdi

04:52.440 --> 04:56.620
onu bitmiş projelere sürükleyelim ve geçiş yapsın ve aynı şekilde

04:56.620 --> 04:58.270
geri taşırsam.

04:58.270 --> 05:02.320
Burada aktif projelerde bırakırsam hiçbir şey değişmez.

05:02.320 --> 05:04.400
Şimdi, DOM'u incelerseniz, teknik

05:04.400 --> 05:08.100
olarak yeniden işlendiğini göreceksiniz, bu ideal olmayabilir,

05:08.100 --> 05:11.450
bu nedenle durumun gerçekten değişip değişmediğini kontrol

05:11.450 --> 05:15.290
eden bir çözüm bulmayı düşünebiliriz ve değişmediyse güncelleme

05:15.290 --> 05:17.400
yapmayız, bu yapabileceğimiz bir

05:17.400 --> 05:18.890
şey.

05:18.890 --> 05:22.620
Ancak kullanıcı arayüzü açısından bakıldığında, olması gerektiği gibi güncelleniyor.

05:22.620 --> 05:24.570
Şimdi ikinci bir proje ekleyelim

05:24.570 --> 05:27.120
ve bunun bir şeyi yok edip etmediğine bakalım,

05:27.120 --> 05:29.260
her şey hala çalışıyorsa ve bunun iyi

05:29.260 --> 05:31.750
göründüğünü söyleyebilirim, bu bana oldukça

05:31.750 --> 05:33.720
iyi görünüyor.

05:33.720 --> 05:37.120
Her şey tam olarak olması gerektiği gibi çalışıyor gibi görünüyor.

05:37.120 --> 05:40.230
Sürükleyip bırakmak burada gayet iyi çalışıyor,

05:40.230 --> 05:42.600
ancak proje durumunda bahsettiğim bir

05:42.600 --> 05:46.305
gelişme var, moveProject'te, bu updateListeners'ı çağırdığımda,

05:46.305 --> 05:49.470
durumu gerçekten değiştirip değiştirmediğimizi

05:49.470 --> 05:51.920
kontrol edebiliriz.

05:51.920 --> 05:54.150
Böylece burada projenin olup olmadığını

05:54.150 --> 05:57.940
kontrol edebiliriz, yani bir tane bulduysak ve proje durumu yeni

05:57.940 --> 06:00.270
durumdan farklıysa, ancak o zaman durumu

06:00.270 --> 06:03.830
değiştirir ve dinleyicileri güncelleriz.

06:03.830 --> 06:06.060
Durum aynıysa bunu yapmayız ve

06:06.060 --> 06:09.310
gereksiz rerender döngüsünden kaçınırız.

06:09.310 --> 06:10.143
Şimdi bunu kaydedip

06:10.143 --> 06:12.900
hızlıca yeni bir proje eklersek, buradaki öğeleri

06:12.900 --> 06:14.790
incelediğimde L-I'yi izlediğinizi

06:14.790 --> 06:18.190
ve bunun yanıp sönüp sönmediğini kontrol ettiğinizi göreceksiniz,

06:18.190 --> 06:21.800
bu da rerender olacağı anlamına gelir, burada yanıp sönmez, yalnızca

06:21.800 --> 06:24.490
bırakılabilir yanıp söner, az önce eklediğimiz sınıf,

06:24.490 --> 06:27.970
ancak L-I aynı kutuya bırakırsam yanıp sönmez, yalnızca farklı bir

06:27.970 --> 06:30.990
kutuya taşırsam yanıp söner.

06:30.990 --> 06:34.460
Ve o zaman yanıp sönmeli çünkü o zaman gerçekten hareket ettirdik.

06:34.460 --> 06:36.180
Şimdi bunu biraz optimize ettik ve

06:36.180 --> 06:39.050
şimdi burada, tamamı TypeScript ile oluşturulmuş ve desteklenmiş,

06:39.050 --> 06:42.223
çalışan bir sürükle ve bırak sistemimiz var.
