WEBVTT

00:02.130 --> 00:04.900
Instrutor: Este curso está repleto de conteúdo.

00:04.900 --> 00:06.940
Estamos quase terminando de começar e depois

00:06.940 --> 00:09.500
disso vamos mergulhar diretamente no TypeScript

00:09.500 --> 00:11.667
e em todas as suas características empolgantes

00:11.667 --> 00:13.850
e aprendê-las passo a passo.

00:13.850 --> 00:16.210
Começaremos com o básico de TypeScripts, é claro.

00:16.210 --> 00:18.800
Os tipos centrais, como geralmente funciona, algumas

00:18.800 --> 00:20.880
das novas características que acrescenta,

00:20.880 --> 00:22.930
e tudo o que você precisa saber para ter uma

00:22.930 --> 00:25.320
boa compreensão do TypeScript.

00:25.320 --> 00:27.690
Depois disso, já mergulharemos mais profundamente

00:27.690 --> 00:29.590
no compilador TypeScript e na configuração

00:29.590 --> 00:32.310
do mesmo, pois é super importante que você entenda

00:32.310 --> 00:37.450
o que pode configurar ali e o que todas essas diferentes configurações fazem para que possamos

00:37.450 --> 00:40.840
ver mais de perto isso neste módulo.

00:40.840 --> 00:43.900
A partir daí, exploraremos as características JavaScript de próxima

00:43.900 --> 00:45.850
geração suportadas em TypeScript.

00:45.850 --> 00:48.880
Como eles funcionam e como você pode utilizá-los em TypeScript.

00:48.880 --> 00:51.500
Vamos continuar com as classes e interfaces,

00:51.500 --> 00:55.000
um conceito super importante em parte também no caso

00:55.000 --> 00:57.350
das classes, mas com as interfaces

00:57.350 --> 00:59.510
também temos um novo recurso de

00:59.510 --> 01:01.600
TypeScript e você entenderá o

01:01.600 --> 01:03.550
que são, o que fazem e porque podemos

01:03.550 --> 01:06.210
querer usá-las.

01:06.210 --> 01:08.190
A partir daí, é hora de mergulhar mais fundo.

01:08.190 --> 01:10.490
Vamos dar uma olhada em alguns tipos avançados

01:10.490 --> 01:13.280
e características TypeScript avançadas em geral,

01:13.280 --> 01:15.040
levando-o para o próximo nível

01:15.040 --> 01:16.640
lá e desenvolvendo sobre o básico

01:16.640 --> 01:20.110
que já aprendemos até este ponto.

01:20.110 --> 01:22.630
Também uma característica avançada, que definitivamente

01:22.630 --> 01:27.210
merece sua própria seção, é a característica dos genéricos.

01:27.210 --> 01:28.910
Você aprenderá o que isso

01:28.910 --> 01:31.160
é e por que é realmente, realmente

01:31.160 --> 01:32.650
útil neste módulo.

01:32.650 --> 01:34.570
Seguido por decoradores.

01:34.570 --> 01:37.360
Os decoradores são uma característica muito legal

01:37.360 --> 01:40.550
também adicionada pelo TypeScript e nós teremos uma visão

01:40.550 --> 01:43.810
mais detalhada dos decoradores e também construiremos alguns

01:43.810 --> 01:46.200
decoradores realmente úteis nesse módulo

01:46.200 --> 01:48.800
e depois disso teremos aprendido muito sobre o

01:48.800 --> 01:50.100
TypeScript.

01:50.100 --> 01:52.660
Agora, o curso está organizado de tal forma que

01:52.660 --> 01:56.460
eu mostro todas essas características individuais em demonstrações

01:56.460 --> 01:59.040
relativamente pequenas e simples.

01:59.040 --> 02:01.730
Agora, para dar-lhe também um quadro mais amplo

02:01.730 --> 02:04.640
e para ver como você aplicaria todas essas características

02:04.640 --> 02:08.140
em um projeto real, construiremos exatamente isso.

02:08.140 --> 02:10.400
Teremos um módulo inteiro onde construímos

02:10.400 --> 02:14.420
um projeto inteiro com TypeScript do zero para que você veja

02:14.420 --> 02:17.720
muitas destas características, a maioria das quais

02:17.720 --> 02:20.090
você aprendeu até este ponto, em ação

02:20.090 --> 02:21.920
e você verá como elas funcionam

02:21.920 --> 02:23.680
juntas e porque simplificam

02:23.680 --> 02:28.160
o processo de construção de tal projeto.

02:28.160 --> 02:29.940
Quando terminarmos de construir

02:29.940 --> 02:31.770
este projeto, identificaremos um

02:31.770 --> 02:34.420
novo problema e aprenderemos como resolvê-lo trabalhando

02:34.420 --> 02:36.450
com namespaces e módulos que nos ajudarão

02:36.450 --> 02:38.100
a tornar nosso código mais gerenciável

02:38.100 --> 02:40.570
e legível.

02:40.570 --> 02:42.600
Com base nisso, também vamos explorar

02:42.600 --> 02:44.350
o Webpack com TypeScript.

02:44.350 --> 02:47.690
Webpack é uma ferramenta de construção que usamos no desenvolvimento

02:47.690 --> 02:49.530
da web moderna e você pode usá-la combinada

02:49.530 --> 02:52.970
com o TypeScript para conseguir um projeto melhor, o que simplesmente

02:52.970 --> 02:55.520
facilita certas coisas e permite que você obtenha

02:55.520 --> 02:57.990
o melhor dos mundos incômodos.

02:57.990 --> 02:59.850
Uma grande experiência de desenvolvimento

02:59.850 --> 03:02.170
e também um código que funciona muito bem para

03:02.170 --> 03:04.120
seus usuários finais.

03:04.120 --> 03:06.320
Uma vez terminado isso, temos uma imagem

03:06.320 --> 03:08.710
muito sólida do TypeScript e de como trabalhar

03:08.710 --> 03:10.180
com ele em projetos.

03:10.180 --> 03:13.250
Agora o que você vai precisar em muitos projetos reais são

03:13.250 --> 03:15.183
bibliotecas de terceiros, então vamos

03:15.183 --> 03:16.820
dar uma olhada mais de perto nisso

03:16.820 --> 03:20.250
porque existem certas bibliotecas de terceiros que realmente

03:20.250 --> 03:22.280
abraçaram o TypeScript e construíram

03:22.280 --> 03:24.630
suporte ao TypeScript, mas também existem

03:24.630 --> 03:26.600
muitas bibliotecas que não o fazem e

03:26.600 --> 03:29.030
vamos dar uma olhada em como podemos trabalhar

03:29.030 --> 03:32.320
com ambos os tipos de bibliotecas de uma forma excelente em projetos

03:32.320 --> 03:34.520
TypeScript.

03:34.520 --> 03:36.630
Bem, e depois há alguns cenários específicos

03:36.630 --> 03:39.620
que merecem seus próprios módulos.

03:39.620 --> 03:41.570
Teremos um módulo inteiro sobre

03:41.570 --> 03:44.320
React com TypeScript, como você pode construir

03:44.320 --> 03:47.540
uma aplicação React inteira com TypeScript apenas,

03:47.540 --> 03:49.452
e também um módulo inteiro sobre

03:49.452 --> 03:53.260
NodeJS e script de tipo final expresso para que você também tenha

03:53.260 --> 03:55.390
grandes exemplos para estes casos

03:55.390 --> 03:58.910
de uso muito populares e específicos de TypeScript, onde

03:58.910 --> 04:01.270
você pode de repente criar aplicações

04:01.270 --> 04:03.630
React ou Node de uma maneira totalmente

04:03.630 --> 04:06.760
nova com uma linguagem totalmente nova.

04:06.760 --> 04:09.260
Portanto, muito conteúdo empolgante no curso.

04:09.260 --> 04:10.970
Não vamos perder tempo.

04:10.970 --> 04:12.720
Vamos ver como você pode tirar o máximo

04:12.720 --> 04:15.263
proveito do curso e depois vamos mergulhar.
