WEBVTT

00:02.210 --> 00:03.450
Giảng viên nam: Bây giờ bên

00:03.450 --> 00:06.170
cạnh các thuộc tính, bạn cũng có thể thêm các bộ trang

00:06.170 --> 00:09.200
trí vào các bộ truy cập và ở đó tôi sẽ tạo một hàm trang trí mới

00:09.200 --> 00:11.660
vì hàm này sẽ nhận được các đối số miễn phí.

00:11.660 --> 00:16.430
Log2, nó cũng sẽ nhận được mục tiêu một lần nữa là nguyên mẫu, nếu chúng

00:16.430 --> 00:18.330
ta đang xử lý một trình truy

00:18.330 --> 00:21.290
cập cá thể hoặc nếu chúng ta đang xử lý một

00:21.290 --> 00:23.360
tĩnh, thì đó sẽ là hàm tạo nên

00:23.360 --> 00:24.960
chúng ta không biết mình

00:24.960 --> 00:27.290
sẽ thuộc loại bất kỳ.

00:27.290 --> 00:32.290
Sau đó, chúng tôi sẽ có tên của thành viên mà chúng tôi đang giải quyết.

00:32.410 --> 00:35.030
Vì vậy, tên của người truy cập cuối cùng.

00:35.030 --> 00:38.683
Và chúng ta cũng sẽ có bộ mô tả thuộc tính ở đây, thuộc

00:39.580 --> 00:42.030
loại bộ mô tả thuộc tính.

00:42.030 --> 00:44.600
Đó là loại được tích hợp trong TypeScript.

00:44.600 --> 00:49.600
Vì vậy, trong đó, hãy ghi lại trình trang trí bộ truy cập nhật ký

00:50.030 --> 00:54.210
và sau đó tôi cũng sẽ điều khiển ghi nhật ký mục tiêu ở

00:54.210 --> 00:56.470
đây, sau đó có thể là các dòng

00:56.470 --> 01:01.470
mới để làm cho chúng dễ đọc hơn trong đầu ra, tên và cả bộ mô tả.

01:01.720 --> 01:05.890
Bây giờ, hãy thêm log2 vào setter ở đây như thế này và hãy xem những

01:05.890 --> 01:07.350
gì chúng ta nhận được.

01:07.350 --> 01:10.733
Nếu chúng tôi lưu nó, bạn sẽ thấy ở dưới đó, bạn

01:10.733 --> 01:14.090
có trình trang trí bộ truy cập thực thi ở đây.

01:14.090 --> 01:19.090
Chúng tôi đã nhận lại mẫu thử nghiệm của mình, giống như một phần thưởng cho tài sản.

01:19.320 --> 01:23.570
Sau đó, chúng tôi có tên của người truy cập của chúng tôi, giá trong trường hợp này.

01:23.570 --> 01:24.900
Không phải giá gạch dưới,

01:24.900 --> 01:27.890
vì vậy không phải là tài sản mà nó giao dịch nội bộ.

01:27.890 --> 01:30.570
Thay vào đó thực sự là tên của chính người truy cập.

01:30.570 --> 01:33.630
Và chúng ta có một bộ mô tả thuộc tính ở đây, nơi chúng

01:33.630 --> 01:36.240
ta thấy rằng một hàm setter được xác định chẳng

01:36.240 --> 01:37.600
hạn, một hàm getter thì

01:37.600 --> 01:41.990
không, bởi vì về giá cả, tôi chỉ có một setter, không có getter.

01:41.990 --> 01:44.320
Và chúng tôi thấy rằng nó không thể đếm được, nhưng

01:44.320 --> 01:45.680
nó có thể cấu hình được.

01:45.680 --> 01:47.810
Vì vậy, chúng tôi có thể thay đổi định nghĩa

01:47.810 --> 01:51.000
này ở đây, chẳng hạn như chúng tôi có thể xóa nó, v.v.

01:51.000 --> 01:54.520
Tất cả điều này tồn tại và đây là cách chúng ta có thể thêm một trình trang trí

01:54.520 --> 01:56.650
vào một trình truy cập và sau đó chúng ta có thể

01:56.650 --> 01:58.920
truy cập những gì bên trong trình trang trí này.

01:58.920 --> 02:00.910
Bây giờ bên cạnh các thuộc tính và bộ truy cập, chúng

02:00.910 --> 02:04.350
ta cũng có các phương thức và có thể thêm các bộ trang trí vào các phương thức.

02:04.350 --> 02:09.350
Vì vậy, ở đây tôi sẽ thêm Log3 và thêm nó vào phương thức của tôi ở dưới

02:09.430 --> 02:11.970
đó để nhận giá bằng văn bản.

02:11.970 --> 02:13.220
Và bây giờ, câu hỏi tất nhiên

02:13.220 --> 02:17.323
là một trình trang trí phương thức như vậy nhận được những đối số nào?

02:18.180 --> 02:22.230
Một trình trang trí phương thức cũng nhận được các đối số miễn

02:22.230 --> 02:25.520
phí, mục tiêu một lần nữa nếu đó là một phương thức

02:25.520 --> 02:28.420
thể hiện, là nguyên mẫu của đối tượng.

02:28.420 --> 02:31.150
Nếu đó là một phương thức tĩnh, hàm tạo

02:31.150 --> 02:34.993
vẫn như trước, thì tên của phương thức ở đây, do đó,

02:36.450 --> 02:39.380
một chuỗi hoặc một ký hiệu thực sự.

02:39.380 --> 02:44.380
Và cả bộ mô tả ở cuối, bộ mô tả thuộc tính.

02:44.490 --> 02:46.140
Đây là những đối số miễn phí mà chúng tôi nhận

02:46.140 --> 02:48.110
được ở đây và bạn thấy đây là những đối số giống như trong

02:48.110 --> 02:49.410
trình truy cập của chúng tôi.

02:49.410 --> 02:51.630
Vì vậy, thực sự chúng ta cũng có thể

02:51.630 --> 02:54.340
sử dụng lại cái này, nhưng tôi sẽ tạo một cái

02:54.340 --> 02:57.483
mới để ở đây tôi có thể in trang trí phương thức.

02:59.020 --> 03:00.840
Bây giờ với điều đó nếu tôi đã lưu cái này, cái

03:01.980 --> 03:04.410
này sẽ thực thi và bạn thấy ở đây trình trang trí phương thức

03:04.410 --> 03:07.880
của chúng tôi thực thi và sau đó ở đây chúng tôi nhận được nguyên mẫu của mình, cùng

03:07.880 --> 03:09.380
một đối tượng như trước đây.

03:09.380 --> 03:11.310
Chúng ta lấy tên của phương thức

03:11.310 --> 03:14.700
ở đây và chúng ta lấy bộ mô tả của phương thức này ở đây.

03:14.700 --> 03:17.440
Vì vậy, về cơ bản, hành vi rất giống như trước đây, chỉ là

03:17.440 --> 03:19.400
một bộ mô tả hơi khác một chút vì nó là một

03:19.400 --> 03:20.950
bộ mô tả phương thức chứ không phải

03:20.950 --> 03:22.550
một bộ mô tả bộ truy cập.

03:22.550 --> 03:25.720
Chúng tôi có một giá trị và thuộc tính có thể ghi ở đây.

03:25.720 --> 03:27.750
Trước đây trên bộ mô tả trình truy cập, chúng tôi

03:27.750 --> 03:28.860
đã nhận và thiết lập.

03:28.860 --> 03:30.910
Nhưng đó chỉ là một sự khác biệt về tập lệnh

03:30.910 --> 03:33.088
java, không có gì cụ thể đối với TypeScript.

03:33.088 --> 03:38.088
Vì vậy, ở đây chúng tôi có chức năng trang trí thứ ba mà chúng tôi hiện

03:38.150 --> 03:40.070
đã thêm vào phương thức.

03:40.070 --> 03:43.390
Trình trang trí cuối cùng mà chúng ta có thể thêm là tham số.

03:43.390 --> 03:45.260
Vì vậy, hãy làm điều đó ngay bây giờ.

03:45.260 --> 03:47.550
Để làm được điều đó, tôi sẽ tạo thêm một

03:47.550 --> 03:51.269
hàm ở đây, Log4 và tôi muốn thêm Log4 vào một tham số mà tôi đang

03:51.269 --> 03:53.660
nhận ở đây, thuế và tất nhiên bạn có thể

03:53.660 --> 03:55.510
thêm một hàm vào mọi tham số mà

03:55.510 --> 03:57.130
bạn nhận được.

03:57.130 --> 03:59.560
Bạn không cần phải làm như vậy nhưng bạn có thể thêm chúng

03:59.560 --> 04:02.990
một cách độc lập vào bất kỳ tham số nào mà bạn muốn thêm trình trang trí vào.

04:02.990 --> 04:06.419
Bây giờ tham số decorator lấy gì làm đối số?

04:06.419 --> 04:10.790
Vâng, nó có được mục tiêu giống như trước đây.

04:10.790 --> 04:12.520
Đối số tiếp theo mà chúng ta nhận được

04:12.520 --> 04:14.100
là tên chứ không phải tên của tham

04:14.100 --> 04:17.310
số mà là tên của phương thức mà chúng ta đã sử dụng tham số này.

04:17.310 --> 04:20.530
Vì vậy, về cơ bản, giống như trong trình trang trí phương thức cho đến nay.

04:20.530 --> 04:22.170
Nhưng đối số cuối cùng là khác nhau.

04:22.170 --> 04:24.250
Đây bây giờ không phải là bộ mô

04:24.250 --> 04:28.380
tả thuộc tính, mà thay vào đó, đây là vị trí của đối số này,

04:28.380 --> 04:30.100
do đó, số lượng đối số.

04:30.100 --> 04:32.763
Ví dụ ở đây, đây sẽ là đối số đầu tiên.

04:35.310 --> 04:38.670
Vì vậy, bây giờ một lần nữa, hãy sao chép nó ở

04:38.670 --> 04:43.550
đây và đặt tất cả những thứ đó vào trình trang trí tham số Log4.

04:43.550 --> 04:45.410
Và hãy xuất vị trí ở đây để chúng

04:45.410 --> 04:47.170
ta có thể xem có gì trong đó.

04:47.170 --> 04:50.960
Nếu bây giờ chúng tôi đã lưu nó, chúng tôi sẽ thấy trình trang trí tham số của chúng tôi

04:50.960 --> 04:53.480
ở đó, không phải đầu ra cuối cùng vì thứ tự thực hiện khác

04:53.480 --> 04:55.630
nhưng chúng tôi thấy trình trang trí tham số của

04:55.630 --> 04:57.180
chúng tôi ở đây và sau đó ở đây.

04:57.180 --> 04:59.530
Chúng tôi có nguyên mẫu như trước đây.

04:59.530 --> 05:00.860
Chúng tôi có tên của phương

05:00.860 --> 05:02.190
thức mà chúng tôi đã sử

05:02.190 --> 05:04.770
dụng tham số này, sau đó là chỉ mục của đối

05:04.770 --> 05:06.240
số đó và bắt đầu bằng 0, vì

05:06.240 --> 05:09.070
vậy đối số đầu tiên có số 0 ở đây, chỉ mục bằng 0

05:09.070 --> 05:10.360
và đó là trình trang trí

05:10.360 --> 05:12.740
tham số của chúng tôi.

05:12.740 --> 05:14.920
Vì vậy, đây là tất cả những nơi mà chúng tôi có thể thêm các

05:14.920 --> 05:16.370
công cụ trang trí và TypeScript và chúng

05:16.370 --> 05:18.570
tôi có thể thực hiện nhiều việc khác nhau với chúng.

05:18.570 --> 05:20.450
Bây giờ tôi sẽ chỉ cho bạn một

05:20.450 --> 05:21.660
vài ví dụ trong mô-đun

05:21.660 --> 05:24.813
này ở đây và tôi cũng sẽ chỉ cho bạn các thư viện

05:24.813 --> 05:28.380
hoặc khung sử dụng nhiều trình trang trí.

05:28.380 --> 05:30.550
Và tôi sẽ cho bạn thấy họ làm gì với những người

05:30.550 --> 05:34.583
trang trí để giúp bạn hình dung về sức mạnh mà những người trang trí có thể có.
