WEBVTT

00:02.220 --> 00:03.053
Instruktur: Sekarang,

00:03.053 --> 00:04.920
saya telah menyebutkan bahwa interface digunakan

00:04.920 --> 00:07.114
untuk mendefinisikan struktur sebuah objek.

00:07.114 --> 00:09.690
Sekarang, interface juga dapat digunakan untuk

00:09.690 --> 00:11.750
mendefinisikan struktur fungsi.

00:11.750 --> 00:14.330
Jadi pada dasarnya sebagai pengganti tipe fungsi yang

00:14.330 --> 00:15.578
sudah Anda pelajari.

00:15.578 --> 00:17.890
Sebagai penyegaran singkat, kita dapat

00:17.890 --> 00:20.090
mendefinisikan tipe fungsi, misalnya,

00:20.090 --> 00:23.305
dengan tipe kustom dengan kata kunci type.

00:23.305 --> 00:26.380
AddFn untuk fungsi add yang kemudian bisa menampung

00:26.380 --> 00:29.350
definisi fungsi seperti ini.

00:29.350 --> 00:30.830
Ini harus mengembalikan

00:30.830 --> 00:32.370
angka dan harus mengambil

00:32.370 --> 00:35.970
dua argumen di mana setiap argumen juga bertipe angka.

00:35.970 --> 00:39.310
Sekarang, kita bisa membuat fungsi baru add di sini yang

00:39.310 --> 00:42.860
bertipe AddFn dan ketika kita tidak menginisialisasinya

00:42.860 --> 00:45.040
tetapi menetapkan fungsi kita nanti,

00:45.040 --> 00:46.580
maka tentu saja, kita harus

00:46.580 --> 00:49.470
memastikan bahwa fungsi ini mengambil dua argumen

00:49.470 --> 00:51.300
yang bertipe number dan di sana,

00:51.300 --> 00:55.170
kita juga mengembalikan angka.

00:55.170 --> 00:56.360
Ini adalah sesuatu yang bisa kita lakukan.

00:56.360 --> 00:57.843
Inilah yang sudah Anda pelajari.

00:57.843 --> 01:01.760
Sekarang, Anda juga dapat menggunakan antarmuka sebagai alternatif

01:01.760 --> 01:03.077
untuk tipe kustom ini.

01:03.077 --> 01:06.860
Antarmuka ada di sana untuk mendefinisikan struktur objek seperti yang saya ajarkan

01:06.860 --> 01:08.240
kepada Anda, tetapi pada akhirnya,

01:08.240 --> 01:10.220
fungsi hanyalah objek dan oleh karena itu

01:10.220 --> 01:12.720
ini adalah sedikit pengecualian.

01:12.720 --> 01:15.350
Anda bisa membuat tipe fungsi dengan interface.

01:15.350 --> 01:18.930
Untuk itu Anda membuat interface, beri nama AddFn untuk

01:18.930 --> 01:20.930
tetap menjaga nama itu di sini.

01:20.930 --> 01:23.720
Dan sekarang di sana, Anda mendefinisikan

01:23.720 --> 01:28.300
sedikit fungsi dengan hanya menambahkan tanda kurung dengan argumen

01:28.300 --> 01:31.150
Anda, a: angka, B: angka, misalnya, dan kemudian

01:31.150 --> 01:33.980
titik dua, bukan panah tetapi titik dua di sini

01:33.980 --> 01:36.810
dengan tipe pengembalian.

01:36.810 --> 01:39.780
Jadi pada akhirnya, seperti Anda mendefinisikan method seperti

01:39.780 --> 01:41.630
yang kita lakukan di sini dengan greet,

01:41.630 --> 01:45.710
dengan pengecualian bahwa kita sekarang tidak menambahkan nama method.

01:45.710 --> 01:47.880
Jadi kami memiliki fungsi anonim

01:47.880 --> 01:49.300
jika Anda ingin menyebutnya

01:49.300 --> 01:52.000
seperti ini di antarmuka AddFn dan TypeScript

01:52.000 --> 01:55.250
memahami sintaksis khusus fungsi anonim ini di antarmuka

01:55.250 --> 01:57.800
Anda dan memahami bahwa Anda ingin menggunakan

01:57.800 --> 02:02.070
antarmuka ini sebagai tipe fungsi dan seperti inilah tampilan fungsi

02:02.070 --> 02:05.360
Anda.

02:05.360 --> 02:07.650
Jadi sekarang kita bisa menggunakan AddFn

02:07.650 --> 02:10.440
di sini dan memang, jika saya akan mencoba menerima string

02:10.440 --> 02:11.640
di sini, kita akan mendapatkan

02:11.640 --> 02:13.786
error karena ini tidak bisa di assignable,

02:13.786 --> 02:17.060
kita perlu memiliki angka, bukan string.

02:17.060 --> 02:19.670
Jadi, ini hanyalah alternatif untuk tipe kustom ini.

02:19.670 --> 02:23.010
Tentu saja, di sini saya berpendapat menggunakan tipe kustom mungkin

02:23.010 --> 02:25.020
sedikit lebih umum, juga sedikit lebih

02:25.020 --> 02:26.470
pendek tetapi ini adalah sintaks

02:26.470 --> 02:28.340
alternatif yang bagus untuk diperhatikan,

02:28.340 --> 02:30.870
terutama jika Anda menemukan ini di beberapa proyek

02:30.870 --> 02:35.265
dan Anda bingung apa artinya ini, metode anonim yang aneh ini.

02:35.265 --> 02:38.993
Nah, pada akhirnya hanya tipe fungsi kustom.
