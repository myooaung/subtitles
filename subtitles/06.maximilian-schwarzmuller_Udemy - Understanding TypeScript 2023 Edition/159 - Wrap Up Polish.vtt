WEBVTT

00:02.190 --> 00:05.030
Instruktor: Dodaliśmy więc webpack, bardzo ważne

00:05.030 --> 00:08.070
narzędzie, które pozwala nam połączyć nasze różne

00:08.070 --> 00:09.690
pliki w jeden bundle.

00:09.690 --> 00:12.090
To naprawdę pomaga nam zmniejszyć ilość

00:12.090 --> 00:14.500
wykonywanych żądań HTTP, a tym samym może

00:14.500 --> 00:16.500
przyspieszyć naszą aplikację.

00:16.500 --> 00:19.840
Jeśli znajdziesz się w pracy z dużą ilością pojedynczych plików, co

00:19.840 --> 00:22.270
zwykle robisz w większych projektach, narzędzia

00:22.270 --> 00:24.360
takie jak webpack są koniecznością, a webpack

00:24.360 --> 00:26.910
jest najważniejszym i wybitnym narzędziem, które

00:26.910 --> 00:28.200
pomaga w tym, więc dlatego

00:28.200 --> 00:31.190
jest to narzędzie, które chciałem tutaj pokazać.

00:31.190 --> 00:33.730
Widzisz, że webpack jest wysoce konfigurowalny i jak wspomniałem

00:33.730 --> 00:36.190
wielokrotnie, oficjalne docs of webpack są miejscem,

00:36.190 --> 00:39.630
do którego należy się udać, aby dowiedzieć się wszystkiego o nim.

00:39.630 --> 00:42.120
O różnych loaderach, różnych ustawieniach błędów,

00:42.120 --> 00:44.770
które można ustawić i jak to ogólnie działa.

00:44.770 --> 00:47.109
Więc zdecydowanie zanurkuj w tej dokumentacji,

00:47.109 --> 00:49.660
jeśli chcesz zostać mistrzem webpacka i chcesz

00:49.660 --> 00:52.720
mieć bardziej rozbudowaną konfigurację.

00:52.720 --> 00:55.610
Nasza podstawowa konfiguracja pozwala nam jednak na

00:55.610 --> 00:58.200
kompilację plików TypeScript za pomocą webpacka,

00:58.200 --> 01:00.940
a następnie łączenie wszystkich danych wyjściowych

01:00.940 --> 01:03.820
w jeden bundle. plik js.

01:03.820 --> 01:06.500
A także ustawiamy konfigurację dla rozwoju,

01:06.500 --> 01:09.050
która ułatwia debugowanie i daje nam bardziej

01:09.050 --> 01:11.510
pomocne komunikaty o błędach.

01:11.510 --> 01:13.250
I otrzymujemy konfigurację produkcyjną,

01:13.250 --> 01:15.570
która daje nam wysoce zoptymalizowany kod,

01:15.570 --> 01:17.840
który następnie możemy wdrożyć na serwer,

01:17.840 --> 01:21.160
aby wysłać do niego jak najmniej kodu.

01:21.160 --> 01:22.210
I to jest właśnie to.

01:22.210 --> 01:25.740
webpack naprawdę jest podstawowym narzędziem i możliwość korzystania

01:25.740 --> 01:26.573
z niego i posiadania

01:26.573 --> 01:30.260
konfiguracji, która naprawdę po prostu działa, jest super ważna.

01:30.260 --> 01:33.800
Jest to więc must-use w każdym nowoczesnym projekcie, powiedziałbym,

01:33.800 --> 01:36.710
i w tym module dowiesz się, jak możesz zacząć go używać w

01:36.710 --> 01:38.763
swoich projektach TypeScript.
