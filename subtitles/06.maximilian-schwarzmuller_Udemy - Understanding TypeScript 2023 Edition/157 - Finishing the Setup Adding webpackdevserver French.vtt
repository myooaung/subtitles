WEBVTT

00:02.160 --> 00:05.070
- : Pour le moment, je n'utilise pas le serveur webpack-dev.

00:05.070 --> 00:07.680
Maintenant, son utilisation est très simple.

00:07.680 --> 00:10.030
Nous devons juste faire le paquet. json et maintenant

00:10.030 --> 00:12.430
au lieu de "lite-server" utilisons

00:12.430 --> 00:17.380
"webpack-dev-server", comme ceci.

00:17.380 --> 00:20.020
Et maintenant, relançons npm start.

00:20.020 --> 00:21.560
Ce que vous verrez, c'est que

00:21.560 --> 00:23.610
cela fait tourner un serveur sur l'hôte

00:23.610 --> 00:25.780
local 8080, et cela fait tourner le flux

00:25.780 --> 00:28.330
de travail de construction de webpack.

00:28.330 --> 00:30.060
Donc maintenant si vous visitez l'hôte

00:30.060 --> 00:32.020
local 8080 nous voyons notre projet là.

00:32.020 --> 00:33.860
La chose intéressante maintenant est que

00:33.860 --> 00:35.510
si nous changeons quelque chose dans

00:35.510 --> 00:38.520
le code, par exemple, si vous ajustez le journal de la console ERA

00:38.520 --> 00:41.200
ici, Et il est enregistré et ensuite vous regardez le bas

00:41.200 --> 00:43.160
ici, vous voyez qu'il recompile.

00:43.160 --> 00:46.450
Cependant, si vous rechargez, vous ne voyez pas le journal ici. Et aussi

00:46.450 --> 00:47.860
dans l'onglet des sources, dans

00:47.860 --> 00:49.130
l'onglet des sources de webpack,

00:49.130 --> 00:51.920
si vous allez dans app. ts, vous ne voyez pas le journal ici.

00:51.920 --> 00:54.820
Donc en fait, il n'a pas chargé le bon code.

00:54.820 --> 00:58.790
Cela devient plus clair si je supprime ce paquet. js ici.

00:58.790 --> 01:01.513
Si je redémarre maintenant ce processus de démarrage

01:02.630 --> 01:04.750
npm, vous verrez que cela fonctionne toujours,

01:04.750 --> 01:08.090
et d'ailleurs, ne vous étonnez pas que le dossier dist reste vide

01:08.090 --> 01:10.240
maintenant, dans le mode serveur webpack-dev

01:10.240 --> 01:13.020
le bundle est généré en mémoire seulement, donc il est

01:13.020 --> 01:15.840
là et il est chargé par le serveur dev, mais il n'est pas

01:15.840 --> 01:18.490
réellement écrit dans le dist.

01:18.490 --> 01:20.270
Mais vous verrez que si vous rechargez,

01:20.270 --> 01:22.180
cette page se ferme également.

01:22.180 --> 01:24.050
J'ai dit que le fichier serait

01:24.050 --> 01:27.080
là, mais on dirait qu'il n'y est pas, non ?

01:27.080 --> 01:29.120
Maintenant, il manque sur la dist comme je l'ai dit, et bien

01:29.120 --> 01:35.130
sûr nous importons de la dist/bundle. js et index.

01:35.130 --> 01:35.130
html,

01:35.130 --> 01:36.810
mais en effet vous pouvez me croire il est généré en mémoire.

01:36.810 --> 01:38.450
Le problème, c'est que les choses

01:38.450 --> 01:41.640
ne sont pas câblées correctement pour le moment.

01:41.640 --> 01:45.330
Pour modifier cela, nous devons aller dans le webpack. config. js et là, dans

01:45.330 --> 01:50.330
la sortie, ajoutez une clé publicPath et définissez-la

01:50.350 --> 01:53.647
à "dist. Si vous sauvegardez maintenant et redémarrez, vous

01:56.250 --> 01:59.120
voyez que cela se recharge et vous voyez maintenant

01:59.120 --> 02:00.670
"Hi" ici.

02:00.670 --> 02:02.400
Dans l'onglet des sources, vous

02:02.400 --> 02:05.320
voyez maintenant aussi la sortie correcte.

02:05.320 --> 02:06.580
Si vous allez dans le dossier

02:06.580 --> 02:07.860
point, application source. ts vous voyez l'énoncé du journal de la console.

02:07.860 --> 02:11.270
Et si je vais maintenant dans l'app. ts et supprimez-la, elle se reconstruit et maintenant la déclaration

02:11.270 --> 02:13.893
du journal de la console a disparu.

02:15.220 --> 02:18.460
Il s'agit simplement d'une configuration supplémentaire

02:18.460 --> 02:20.410
qui est nécessaire pour que le serveur

02:20.410 --> 02:22.970
webpack-dev comprenne vraiment où la sortie

02:22.970 --> 02:26.520
est écrite et où elle est relative à l'index. fichier html.

02:26.520 --> 02:29.910
Parce que par défaut le serveur

02:29.910 --> 02:32.180
webpack-dev sert un index. fichier html, il trouve dans le même dossier que vous exécutez

02:32.180 --> 02:34.030
ce script ici.

02:34.030 --> 02:37.550
Ce qui est correct, mais alors il ne fait pas la connexion

02:37.550 --> 02:40.520
au dossier dist correctement, c'est pourquoi

02:40.520 --> 02:42.030
nous devons informer le

02:42.030 --> 02:44.970
serveur webpack-dev avec publicPath où trouver

02:44.970 --> 02:48.040
nos assests, donc notre bundle. js dans ce cas.

02:48.040 --> 02:50.960
Maintenant, si nous quittons le serveur de développement,

02:50.960 --> 02:52.370
il y a un autre paramètre que je veux appliquer

02:52.370 --> 02:53.790
ici en mode développement.

02:53.790 --> 02:56.080
Et je vais faire ça juste en haut de l'objet exporté.

02:56.080 --> 02:59.180
Je vais régler le mode sur "développement". Au final, cela indiquera à webpack que nous construisons

02:59.180 --> 03:01.800
ici pour le développement et qu'il fera moins d'optimisations

03:01.800 --> 03:03.550
pour améliorer notre expérience

03:03.550 --> 03:05.590
de développement, faciliter le débogage

03:05.590 --> 03:11.420
et nous donner des messages d'erreur plus significatifs, par exemple.

03:11.420 --> 03:12.950
Donc, dans le développement,

03:12.950 --> 03:16.420
nous voulons aussi certainement ajouter cette clé ici.

03:16.420 --> 03:17.840
Et avec cela et le serveur webpack-dev configuré,

03:17.840 --> 03:20.110
nous avons maintenant le flux de travail de développement terminé.

03:20.110 --> 03:22.880
Maintenant, pour la production, nous allons devoir

03:22.880 --> 03:25.570
ajuster un peu ce flux de travail car nous voulons

03:25.570 --> 03:27.100
un résultat différent.
