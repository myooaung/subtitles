WEBVTT

00:02.110 --> 00:03.890
Instruktur: Jadi sekarang, setelah

00:03.890 --> 00:07.820
semua fitur-fitur ini di mana kita bekerja dengan tipe-tipe itu sendiri, jadi

00:07.820 --> 00:10.340
untuk mengatakan, di mana kita bekerja pada pengecekan

00:10.340 --> 00:13.880
tipe, biaya tipe, mari kita kembali ke fitur-fitur yang membantu kita

00:13.880 --> 00:16.110
mengendarai kode yang fleksibel.

00:16.110 --> 00:17.930
Tentu saja, masih menulis dua jenis tersebut.

00:17.930 --> 00:20.150
Bagaimanapun juga, ini adalah typescript, tetapi tidak

00:20.150 --> 00:23.520
begitu terfokus hanya pada jenis-jenisnya saja, sekarang kita bisa mengelolanya.

00:23.520 --> 00:25.830
Dan untuk itu, saya ingin memulai dengan tipe

00:25.830 --> 00:29.040
indeks, sebuah fitur yang memungkinkan kita untuk membuat objek

00:29.040 --> 00:31.150
yang lebih fleksibel mengenai properti

00:31.150 --> 00:33.010
yang mungkin mereka miliki.

00:33.010 --> 00:34.485
Sekarang apa yang saya maksud dengan itu?

00:34.485 --> 00:36.813
Katakanlah Anda menulis aplikasi di mana

00:36.813 --> 00:39.680
Anda memvalidasi beberapa input pengguna.

00:39.680 --> 00:41.810
Jadi, Anda memiliki beberapa bidang input

00:41.810 --> 00:44.603
dan tergantung pada apa yang dimasukkan pengguna di sana

00:44.603 --> 00:46.682
dan bidang mana itu, Anda mungkin ingin menyimpan

00:46.682 --> 00:50.490
dan akhirnya menampilkan pesan kesalahan yang berbeda.

00:50.490 --> 00:52.520
Misalnya, jika itu adalah bidang email,

00:52.520 --> 00:54.360
Anda ingin memeriksa siapa pun yang

00:54.360 --> 00:55.590
ada di email dan jika tidak

00:55.590 --> 00:59.830
maka Anda ingin menambahkan pesan kesalahan yang tepat ke wadah kesalahan.

00:59.830 --> 01:01.133
Jadi, itulah yang akan saya mulai.

01:01.133 --> 01:06.133
Saya akan memiliki wadah kesalahan antarmuka saya di sini.

01:07.570 --> 01:09.530
Dan itu harus berupa objek, maka saya menggunakan

01:09.530 --> 01:11.400
antarmuka di sini, tetapi harus fleksibel

01:11.400 --> 01:14.090
mengenai apa yang dipegangnya.

01:14.090 --> 01:15.680
Pada akhirnya, tujuan saya adalah bahwa

01:15.680 --> 01:17.692
dengan itu kita dapat memperlakukan objek di mana

01:17.692 --> 01:20.782
kita memiliki beberapa pengidentifikasi kesalahan, yang bisa menjadi

01:20.782 --> 01:23.700
ideal jika bidang input yang menjadi milik kesalahan.

01:23.700 --> 01:26.581
Misalnya, email. Dan kemudian beberapa string

01:26.581 --> 01:31.581
kesalahan, bukan email yang valid. Dan kemudian kita memiliki properti lain.

01:32.130 --> 01:35.610
Katakanlah nama pengguna dan kemudian string

01:35.610 --> 01:37.150
kesalahan mungkin menyimpan

01:37.150 --> 01:39.280
bidang input itu jika bidang

01:39.280 --> 01:41.611
input salah.

01:41.611 --> 01:45.770
Harus dimulai dengan karakter.

01:45.770 --> 01:49.170
Sesuatu seperti itu harus disimpan dalam objek itu.

01:49.170 --> 01:51.992
Masalahnya, saya tidak tahu sebelumnya,

01:51.992 --> 01:55.320
nama properti apa yang akan kita miliki di sana.

01:55.320 --> 01:58.021
Anda bisa saja mengatakan, kita akan memiliki email dan nama pengguna,

01:58.021 --> 02:01.650
tetapi untuk yang pertama, saya ingin ini menjadi wadah yang fleksibel.

02:01.650 --> 02:03.150
Saya ingin bisa menggunakannya pada

02:03.150 --> 02:05.350
formulir apa pun yang saya miliki di halaman web saya.

02:05.350 --> 02:07.560
Dan saya mungkin memiliki formulir yang berbeda dengan

02:07.560 --> 02:10.157
input yang berbeda dengan pengidentifikasi yang berbeda.

02:10.157 --> 02:12.741
Jadi, saya tidak ingin membatasi diri saya

02:12.741 --> 02:16.150
hanya pada kesalahan email dan nama pengguna kita.

02:16.150 --> 02:18.461
Dan sebagai tambahan, bahkan jika kita selalu hanya

02:18.461 --> 02:20.859
memiliki input email dan nama pengguna dan kita hanya

02:20.859 --> 02:23.291
ingin menyimpan kesalahan untuk itu.

02:23.291 --> 02:27.461
Apa yang kita lakukan jika hanya email yang tidak valid dan bukan nama pengguna?

02:27.461 --> 02:30.912
Kemudian tentu saja dalam objek ini kita bisa menyimpan null sebagai

02:30.912 --> 02:34.421
nilai untuk nama pengguna, tapi saya ingin menghilangkannya saja.

02:34.421 --> 02:37.232
Jadi, apakah kita memiliki objek yang hanya menyimpan

02:37.232 --> 02:40.419
properti untuk input di mana kita memiliki error?

02:40.419 --> 02:42.960
Jadi kita juga bisa mengulang-ulang objek ini dengan

02:42.960 --> 02:46.260
perulangan empat dalam untuk membaca semua kesalahan yang kita dapatkan

02:46.260 --> 02:48.200
misalnya dan tidak memiliki properti apa

02:48.200 --> 02:51.112
pun di sana yang sebenarnya tidak menyimpan kesalahan.

02:51.112 --> 02:53.261
Jadi singkat cerita, saya membutuhkan

02:53.261 --> 02:56.861
sebuah objek di mana saya cukup jelas mengenai tipe nilainya.

02:56.861 --> 03:00.260
Ini harus berupa string, tetapi di mana saya tidak tidak memajukan

03:00.260 --> 03:02.190
berapa banyak properti yang akan saya

03:02.190 --> 03:05.320
miliki dan nama properti yang mana yang akan dimiliki.

03:05.320 --> 03:08.171
Dan untuk skenario seperti itu, kita bisa menggunakan tipe indeks.

03:08.171 --> 03:10.760
Anda mendefinisikan tipe indeks dengan menggunakan tanda kurung siku di sini.

03:10.760 --> 03:14.730
Ingat, biasanya kita akan menulis nama properti di sini, tetapi sekarang kita menggunakan

03:14.730 --> 03:16.280
tanda kurung siku.

03:16.280 --> 03:21.280
Kemudian, nama apa pun pilihan Anda, misalnya kunci atau penyangga.

03:23.581 --> 03:28.581
Kemudian, sebuah titik dua. Dan kemudian tipe nilai properti.

03:29.010 --> 03:30.010
Dan kemudian sebuah objek.

03:30.010 --> 03:33.760
Anda tidak bisa memiliki string, angka, atau simbol sebagai properti.

03:33.760 --> 03:37.660
Anda misalnya, tidak bisa menggunakan boolean di sini. Itu tidak diperbolehkan.

03:37.660 --> 03:40.504
Tetapi Anda bisa menggunakan string di sini.

03:40.504 --> 03:43.190
Dengan itu, saya hanya mengatakan bahwa objek

03:43.190 --> 03:46.330
apa pun yang saya buat berdasarkan antarmuka wadah

03:46.330 --> 03:51.083
kesalahan ini nantinya harus memiliki properti, yang berupa string.

03:52.120 --> 03:53.928
Nama pengguna misalnya akan menjadi string yang valid

03:53.928 --> 03:55.899
bahkan jika saya tidak membungkusnya dalam tanda kutip.

03:55.899 --> 03:59.980
Kemudian, kita tambahkan titik dua. Dan kemudian tipe nilainya, yaitu

03:59.980 --> 04:01.629
string. Jadi dengan itu saya

04:01.629 --> 04:04.320
katakan bahwa saya tidak tahu nama properti yang tepat.

04:04.320 --> 04:07.620
Saya juga tidak tahu jumlah properti.

04:07.620 --> 04:10.608
Saya hanya tahu bahwa setiap properti yang ditambahkan

04:10.608 --> 04:13.459
ke objek ini, yang didasarkan pada error container,

04:13.459 --> 04:16.959
harus memiliki nama properti yang dapat diinterpretasikan

04:16.959 --> 04:20.640
sebagai string dan nilai dari properti tersebut juga harus berupa

04:20.640 --> 04:23.080
string. Itulah yang saya katakan di sini.

04:23.080 --> 04:28.080
Sekarang, dengan itu kita juga masih dapat menambahkan properti yang telah ditentukan sebelumnya,

04:29.560 --> 04:31.906
namun, hanya jika mereka memiliki tipe yang sama

04:31.906 --> 04:35.339
seperti ini di sini. Jadi kita bisa menambahkan ID yang merupakan tipe string.

04:35.339 --> 04:39.760
Dan kemudian objek apa pun yang kita bangun yang mengikuti antarmuka ini harus memiliki

04:39.760 --> 04:43.360
properti ID dan dapat menambahkan properti lain sebanyak yang diinginkannya,

04:43.360 --> 04:47.370
tetapi kita tidak dapat mengatur ID ke angka di sini, misalnya, karena kita memiliki

04:47.370 --> 04:49.277
tipe indeks di sini.

04:49.277 --> 04:53.033
Jadi itu adalah pembatasan yang kita miliki jika kita membangun objek seperti itu.

04:55.240 --> 04:56.550
Jadi sekarang apa konsekuensinya?

04:56.550 --> 05:00.080
Sekarang kita bisa membuat error bag misalnya yang bertipe error

05:00.080 --> 05:02.390
container yang merupakan sebuah objek dan

05:02.390 --> 05:05.150
akan valid seperti ini karena kita tidak perlu menambahkan

05:05.150 --> 05:07.440
properti apapun.

05:07.440 --> 05:10.340
Itu semua valid. Tetapi tentu saja sekarang kita bisa menambahkan beberapa.

05:10.340 --> 05:13.380
Misalnya, email bukan email yang valid.

05:13.380 --> 05:15.780
Dan ini tidak apa-apa. Tidak akan baik jika saya

05:15.780 --> 05:17.093
malah menetapkan angka di

05:17.093 --> 05:19.133
sini karena kita mengatakan setiap properti

05:19.133 --> 05:23.001
membutuhkan tipe nilai string. Jadi, kita harus menggunakan string di sini.

05:23.001 --> 05:25.940
Jika saya menggunakan angka di sini, itu akan berfungsi karena

05:25.940 --> 05:28.610
itu dapat ditafsirkan sebagai string juga.

05:28.610 --> 05:30.883
Jadi, saya juga bisa menggunakan angka sebagai jenis kunci di sini

05:30.883 --> 05:33.031
jika saya menginginkannya. Saya cukup bebas mengenai

05:33.031 --> 05:35.981
apa yang saya gunakan di sini. Jika itu akan mengubah

05:35.981 --> 05:40.981
jenis prop di sini menjadi angka, maka Anda bisa melakukan itu dan ini akan

05:42.130 --> 05:44.810
baik-baik saja. Tetapi ini tidak akan terjadi

05:44.810 --> 05:46.470
karena email bukanlah angka.

05:46.470 --> 05:48.170
Ini tidak bisa dikonversi ke angka.

05:48.170 --> 05:51.550
Ini bisa diperlakukan sebagai string, tetapi bukan sebagai angka.

05:51.550 --> 05:54.870
Jadi, beginilah cara Anda mengontrol jenis properti yang mana, atau

05:54.870 --> 05:56.990
nama properti yang mana, yang Anda izinkan.

05:56.990 --> 05:59.493
Dan di sini saya melakukan satu untuk mengizinkan nama properti string.

05:59.493 --> 06:02.264
Jadi, apa pun yang bisa dikonversi ke string adalah nama

06:02.264 --> 06:04.740
properti yang valid. Dan kemudian nilainya

06:04.740 --> 06:06.413
juga harus berupa string.

06:06.413 --> 06:08.021
Dan seperti yang saya katakan tentu

06:08.021 --> 06:10.632
saja sekarang kita dapat menambahkan beberapa nilai di sini,

06:10.632 --> 06:12.830
beberapa nilai yang harus saya katakan.

06:12.830 --> 06:17.263
Harus diawali dengan huruf kapital.

06:18.170 --> 06:21.220
Jadi sekarang ini adalah error bag yang bisa kita bangun

06:21.220 --> 06:22.722
dengan bantuan error container,

06:22.722 --> 06:25.392
yang memberi kita fleksibilitas ekstra sehingga

06:25.392 --> 06:27.522
kita tidak perlu tahu sebelumnya nama properti

06:27.522 --> 06:30.740
mana yang ingin kita gunakan dan berapa banyak properti yang

06:30.740 --> 06:32.653
kita butuhkan.
