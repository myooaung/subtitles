WEBVTT

00:02.150 --> 00:03.360
Instruktur: Sekarang di dalam

00:03.360 --> 00:06.310
antarmuka Anda juga dapat menambahkan modifier read-only.

00:06.310 --> 00:10.780
Anda tidak bisa menambahkan publik atau privat atau semacamnya.

00:10.780 --> 00:13.300
Ini tidak mungkin dilakukan pada antarmuka,

00:13.300 --> 00:15.610
tetapi Anda dapat menambahkan read-only

00:15.610 --> 00:19.470
untuk memperjelas bahwa properti ini dalam objek apa pun yang Anda bangun

00:19.470 --> 00:22.710
berdasarkan antarmuka ini hanya boleh disetel satu kali

00:22.710 --> 00:26.030
dan hanya-baca setelahnya sehingga tidak dapat diubah setelah

00:26.030 --> 00:28.440
objek diinisialisasi.

00:28.440 --> 00:31.893
Ini juga sesuatu, jika kita menggunakan tipe sebagai gantinya, yang

00:33.220 --> 00:36.180
dapat Anda gunakan pada tipe jika Anda mau, jadi sekali lagi,

00:36.180 --> 00:38.800
kedua hal ini sangat mirip di sini, tetapi lebih umum

00:38.800 --> 00:41.510
atau lebih sering terlihat bahwa jika Anda benar-benar

00:41.510 --> 00:43.790
ingin bekerja dengan objek, Anda menggunakan

00:43.790 --> 00:45.730
antarmuka untuk itu, dan read-only hanyalah

00:45.730 --> 00:48.620
satu hal lain yang dapat Anda tambahkan di sana sebagai fitur

00:48.620 --> 00:51.400
tambahan yang dapat Anda atur.

00:51.400 --> 00:53.320
Dengan read-only ditambahkan di sini, ngomong-ngomong,

00:53.320 --> 00:56.100
Anda lihat saya tidak menambahkannya di sini di kelas.

00:56.100 --> 00:58.170
Saya tidak menambahkan read-only di sini dan

00:58.170 --> 01:00.560
tetap saja jika saya sekarang pergi ke pengguna satu

01:00.560 --> 01:03.460
dan kemudian mencoba mengatur nama ke sesuatu yang lain, saya

01:03.460 --> 01:04.740
sudah mendapatkan kesalahan

01:04.740 --> 01:06.120
di sini karena itu read-only

01:06.120 --> 01:08.210
dan tentu saja saya juga mendapatkannya jika

01:08.210 --> 01:10.140
saya menyimpannya dan mencoba untuk mengkompilasi

01:10.140 --> 01:12.640
itu, jadi antarmuka benar-benar berpengaruh di sini

01:12.640 --> 01:14.880
setelah kita menerapkannya ke dalam kelas kita

01:14.880 --> 01:16.910
meskipun saya tidak menambahkan read-only

01:16.910 --> 01:19.650
di sini, kelas tahu bahwa ia mengimplementasikan readable

01:19.650 --> 01:27.430
dan secara otomatis mengasumsikan bahwa nama properti, yang kita miliki di sini, yang perlu kita miliki karena antarmuka, adalah read-only karena itulah yang

01:27.430 --> 01:32.973
kita atur di dalam antarmuka, dan tentu saja itu cukup nyaman juga.
