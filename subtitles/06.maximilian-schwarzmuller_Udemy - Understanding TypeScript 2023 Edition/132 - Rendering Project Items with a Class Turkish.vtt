WEBVTT

00:02.190 --> 00:05.900
Eğitmen: Tüm kalıtım çalışmalarımızı aradan çıkardıktan sonra,

00:05.900 --> 00:08.400
liste öğelerini oluşturmaya geri dönelim, orada

00:08.400 --> 00:10.590
daha fazla ayrıntı oluşturalım.

00:10.590 --> 00:12.800
Ve bahsettiğim gibi, bunları farklı şekilde

00:12.800 --> 00:14.900
işlediğimizden de emin olalım.

00:14.900 --> 00:18.050
Şimdiye kadar nesne yönelimli bir yaklaşım izledik

00:18.050 --> 00:22.440
ve örneğin, proje listemiz için bir sınıfımız var ve bu sınıfı örneklediğimizde

00:22.440 --> 00:26.560
burada böyle bir kutu oluşturuluyor.

00:26.560 --> 00:30.000
Aynı şey girdi için de geçerli, bir proje girdi sınıfımız

00:30.000 --> 00:33.460
var ve bunu örneklediğimizde, üstteki bu proje girdi alanı

00:33.460 --> 00:34.880
oluşturuluyor.

00:34.880 --> 00:38.330
Şimdi neden aynı şeyi proje öğemiz için yapmıyoruz

00:38.330 --> 00:42.290
ve daha sonra işlenen projelerdeki proje listesinin içinde

00:42.290 --> 00:45.030
bu şekilde bir liste öğesi oluşturmak yerine,

00:45.030 --> 00:48.290
sadece proje öğesi sınıfımızı örneklendiririz

00:48.290 --> 00:52.230
ve bu proje öğesi sınıfının yapıcısında tüm başlatma işlemlerini

00:52.230 --> 00:55.100
yaparız.

00:55.100 --> 00:57.240
En azından benim fikrim bu.

00:57.240 --> 00:59.850
Şimdi her zaman olduğu gibi, videoyu burada duraklatabilir

00:59.850 --> 01:01.680
ve bunu önce kendi başınıza deneyebilirsiniz,

01:01.680 --> 01:04.610
ancak kısa bir aradan sonra, isterseniz videoyu duraklatmanız için

01:04.610 --> 01:06.960
size vereceğim, birlikte yapacağız.

01:09.080 --> 01:12.980
Şimdi bunu birlikte yapalım ve bunun için proje listesi

01:12.980 --> 01:17.940
sınıfının üzerine proje öğesi sınıfını ekleyeceğim ve bu tek bir

01:17.940 --> 01:20.610
proje öğesini oluşturmaktan sorumlu

01:20.610 --> 01:22.920
sınıf olacak.

01:22.920 --> 01:25.620
Şimdi proje öğesi sınıfı her zaman bileşeni

01:25.620 --> 01:28.940
genişletmelidir, çünkü ekranda bir şey oluşturmaktan

01:28.940 --> 01:31.600
sorumlu bir sınıf olacaktır ve bileşen sınıfımız

01:31.600 --> 01:36.410
bunun için vardır, doğru, onu bunun için oluşturuyoruz.

01:36.410 --> 01:40.100
Böylece bir şablon, bir ana öğe ve benzerlerini iletiriz.

01:40.100 --> 01:43.560
Dolayısıyla, proje öğesinde, elbette bir kurucuya, daha sonra

01:43.560 --> 01:47.030
super'i de çağırmamız gereken bir kurucuya ihtiyacımız var.

01:47.030 --> 01:50.650
Ve aslında super'i çağırmadan önce, bu jenerik tipleri miras

01:50.650 --> 01:53.610
alınacak temel sınıf için ayarlayalım.

01:53.610 --> 01:56.440
Unutmayın, oraya aktardığımız ilk tür ana

01:56.440 --> 02:00.410
öğedir, yani bir şey oluşturmak istediğimiz yerdir.

02:00.410 --> 02:02.760
İçeri aktardığımız ikinci jenerik tip,

02:02.760 --> 02:04.800
render ettiğimiz elementtir.

02:04.800 --> 02:07.040
Proje öğesi söz konusu olduğunda,

02:07.040 --> 02:10.550
bu, içeri aktardığımız ilk öğenin, bir şeyi işlemek

02:10.550 --> 02:13.570
istediğimiz yer olduğu için, bir HTML U Listesi,

02:13.570 --> 02:15.587
sırasız bir liste olduğu anlamına

02:15.587 --> 02:17.370
gelir, çünkü her proje öğesi

02:17.370 --> 02:22.550
bizim sırasız listemizin içinde işlenecektir.

02:22.550 --> 02:26.160
İkinci eleman ise bir HTML LI Elemanı, yani oluşturulacak

02:26.160 --> 02:29.313
somut liste öğesi elemanı olacaktır.

02:30.210 --> 02:35.210
Şimdi super'i seçin, proje öğesinin içinde oluşturulması gereken

02:35.280 --> 02:38.210
öğenin Id'sini sağlamamız gerekir.

02:38.210 --> 02:41.410
Ve elbette bu Id sabit değildir,

02:41.410 --> 02:45.040
çünkü öğenin işlenebileceği iki

02:45.040 --> 02:47.480
listemiz vardır.

02:47.480 --> 02:51.760
Bu yüzden bu Id'yi burada yapıcıda almayı bekliyorum, orada

02:51.760 --> 02:55.400
ana bilgisayar Id'sini almak istiyorum, diyelim ki

02:55.400 --> 02:56.233
bu bir string

02:56.233 --> 02:59.140
olmalı, bunu super'e iletebiliriz.

02:59.140 --> 03:02.220
Bununla birlikte, süper için ilettiğimiz ilk

03:02.220 --> 03:05.520
şey, tek bir liste öğesi için şablon Kimliğidir ve

03:05.520 --> 03:07.410
bu da buradaki şablondur.

03:07.410 --> 03:09.620
Böylece bunu paketleyebiliriz.

03:09.620 --> 03:11.580
Şimdi elbette bu çok basit bir şablon,

03:11.580 --> 03:13.580
buna gerçekten ihtiyacınız olup olmadığını

03:13.580 --> 03:16.380
tartışabilirsiniz, bu sadece bir liste öğesi, bunu

03:16.380 --> 03:18.920
kodda belge oluşturma öğesiyle de oluşturabiliriz,

03:18.920 --> 03:22.560
ancak şablonlara dayanan bileşen temel cümlemizi yeniden kullanabilmek

03:22.560 --> 03:26.240
için bu yaklaşımı kullanacağız.

03:26.240 --> 03:29.680
Yani tek proje şablon kimliğidir, ana bilgisayar kimliğidir,

03:29.680 --> 03:32.550
ardından temel cümle kurucusuna iletmek istediğim

03:32.550 --> 03:34.500
kimliktir.

03:34.500 --> 03:37.150
O halde, bunun başlangıçta mı yoksa sonda mı yapılması

03:37.150 --> 03:40.010
gerektiği sorusunu yanıtlamak için.

03:40.010 --> 03:43.020
Aslında her yeni liste öğesi listenin sonuna

03:43.020 --> 03:45.630
eklenmelidir, ancak bu tamamen size kalmış,

03:45.630 --> 03:48.450
isterseniz başa da ekleyebilirsiniz, ancak

03:48.450 --> 03:51.150
burada son ile gideceğim ve bu nedenle burada

03:51.150 --> 03:53.423
yanlış geçeceğim.

03:54.410 --> 03:57.153
Ve sonra yeni öğe Id'si için, yeni

03:57.153 --> 03:59.330
oluşturulan öğeye atanması

03:59.330 --> 04:01.580
gereken Id'yi satın.

04:01.580 --> 04:03.760
Bunu dışarıdan da almayı bekliyorum,

04:03.760 --> 04:06.860
çünkü bu da her proje kalemi için farklılık gösterecek,

04:06.860 --> 04:09.860
sonuçta birden fazla kalem oluşturacağız.

04:09.860 --> 04:12.240
Bu yüzden burada Id'nin bir dize olmasını

04:12.240 --> 04:15.060
bekliyorum ve bunu iletiyorum.

04:15.060 --> 04:17.820
İşte şimdi kurucu budur.

04:17.820 --> 04:22.250
Şimdi bu proje öğesine ait olan projeyi bu proje öğesi

04:23.500 --> 04:27.280
sınıfında saklamak mantıklı olacaktır.

04:27.280 --> 04:31.020
Proje derken, yukarıda oluşturduğumuz proje sınıfımıza

04:31.020 --> 04:33.770
dayalı projeyi kastediyorum.

04:33.770 --> 04:37.490
Temelde çalıştığımız şey bu, çalıştığımız veriler.

04:37.490 --> 04:40.440
Ve bu işlenmiş proje öğesine ait projeyi

04:40.440 --> 04:44.000
bu proje öğesi sınıfında saklamak istiyorum.

04:44.000 --> 04:47.650
Bu nedenle buraya örneğin bir özel mülk projesi ekleyebiliriz,

04:47.650 --> 04:51.510
ancak bunun gibi proje türünde olmalıdır.

04:51.510 --> 04:55.350
Yapıcıda Id'yi alırız ve bunu basitçe değiştirerek

04:55.350 --> 04:58.090
projeyi bu şekilde alırız ve sonra basitçe

04:58.090 --> 05:00.950
bu proje eşittir proje deriz ve burada

05:00.950 --> 05:04.340
her projenin bir Id özelliği olduğundan, sadece

05:04.340 --> 05:09.440
projeyi iletiriz.

05:09.440 --> 05:09.440
id.

05:09.440 --> 05:12.330
Bence bu düzen biraz daha mantıklı.

05:12.330 --> 05:14.710
Şimdi her zaman birkaç yöntem eklememiz gerekiyor,

05:14.710 --> 05:17.760
elbette bir configure yöntemi eklememiz gerekiyor.

05:17.760 --> 05:22.300
Genişletmekte olduğumuz temel sınıfımızın gerektirdiği render content

05:22.300 --> 05:25.040
metodunu eklememiz gerekiyor.

05:25.040 --> 05:29.850
Ve her zaman yapılandırıcıyı çağırır ve yapıcının sonunda içeriği

05:29.850 --> 05:32.000
burada oluşturur.

05:32.000 --> 05:34.890
Şimdi yapılandırmayla ilgili olarak, işlemek istediğimiz

05:34.890 --> 05:37.730
içerik için şu anda yapmamız gereken bir şey yok, kesinlikle

05:37.730 --> 05:40.050
yapılacak işler var.

05:40.050 --> 05:42.710
Şimdi burada çok basit bir şablonumuz var

05:42.710 --> 05:44.520
ve aslında bunu dizin HTML dosyasında

05:44.520 --> 05:47.650
biraz daha karmaşık olacak şekilde değiştirebiliriz,

05:47.650 --> 05:50.850
böylece her projenin bir h2 etiketi, diyelim ki

05:50.850 --> 05:54.250
bunun altında bir h3 etiketi ve ayrıca bir paragrafı

05:54.250 --> 06:03.290
olur, böylece projenin başlığını, belki atanan kişi sayısını ve ardından açıklamayı verebiliriz.

06:03.290 --> 06:05.720
Ve sonra burada, app ts'de içerik oluştururken,

06:05.720 --> 06:09.050
elementimizdeki bu farklı elementlere, yani h2 etiketine

06:09.050 --> 06:10.130
ve benzerlerine ulaşmamız

06:10.130 --> 06:12.090
ve ardından bazı içerikler eklememiz

06:12.090 --> 06:14.440
gerekir.

06:14.440 --> 06:17.300
Böylece, render edilmiş elementimiz olan

06:17.300 --> 06:19.360
bu elemente ulaşabiliriz, yani

06:19.360 --> 06:21.750
render edilmiş LI Elementimiz.

06:21.750 --> 06:24.970
Ve orada şimdi bu farklı şeyleri seçmemiz gerekiyor.

06:24.970 --> 06:27.270
Böylece h2 sorgu seçicisini kullanabilir ve metin

06:27.270 --> 06:28.930
içeriğini burada ayarlayabiliriz.

06:28.930 --> 06:33.930
Şöyle diyelim. proje. başlığını orada işlemek için.

06:34.350 --> 06:36.470
Elbette, şablonumuzun bir parçası olduğu

06:36.470 --> 06:39.010
için kesin olarak bildiğimiz bu öğeyi her zaman alacağımızı

06:39.010 --> 06:40.700
açıkça belirtmek için buraya bir ünlem

06:40.700 --> 06:42.563
işareti eklemeliyiz.

06:43.980 --> 06:46.870
Aslında bunu tekrarlayabiliriz, ancak

06:46.870 --> 06:49.170
şimdi h3 etiketini arayın ve orada

06:49.170 --> 06:52.990
kişi sayısının çıktısını almak istiyorum, ancak burada

06:52.990 --> 06:55.690
insanlar özellik adıdır, ancak bunu biraz

06:55.690 --> 06:58.030
değiştireceğim.

06:58.030 --> 07:00.300
Şimdi buradaki bir sayıdır ve bu da bir

07:00.300 --> 07:01.690
dizedir, bu yüzden aslında

07:01.690 --> 07:04.110
burada dizeyi çağıracağım.

07:04.110 --> 07:06.900
Ancak asıl sorun bu değil, aslında burada bir sayıdan

07:06.900 --> 07:11.160
daha fazlasını vermesi için bunu değiştirmek istiyorum, ancak buna geri

07:11.160 --> 07:12.590
döneceğim.

07:14.960 --> 07:17.260
Öncelikle bunu bir kez daha tekrarlayalım ve

07:17.260 --> 07:19.600
buradaki paragraf için sorgulama yapalım.

07:19.600 --> 07:22.623
Ve bunu bu projeye eşit olarak ayarlayın. Açıklama.

07:23.810 --> 07:25.810
Şimdi, yine bunu daha sonra değiştireceğim, şimdilik

07:25.810 --> 07:27.140
olduğu gibi bırakalım.

07:27.140 --> 07:28.870
Ve bununla birlikte, işlenmesi

07:28.870 --> 07:29.880
gereken bir proje

07:29.880 --> 07:33.470
öğemiz var ve bu da tüm içeriğini ortaya koymalı.

07:33.470 --> 07:35.460
Şimdi proje öğesini kullanmamız gerekiyor

07:35.460 --> 07:37.880
ve bunu kullanacağımız yer proje listesidir,

07:37.880 --> 07:40.450
çünkü bu proje listesini oluşturur.

07:40.450 --> 07:44.150
Ve özellikle render projelerinde, proje öğelerimizi

07:44.150 --> 07:46.630
render ettiğimizden emin olmamız gereken

07:46.630 --> 07:48.260
yer burasıdır.

07:48.260 --> 07:51.140
Burada, atanmış projelerdeki tüm proje kalemlerini

07:51.140 --> 07:52.860
gözden geçiriyoruz.

07:52.860 --> 07:55.870
Ve atanmış projeler, projelerin bir listesini

07:55.870 --> 07:58.960
veya bir dizisini içeren bu özelliktir.

07:58.960 --> 08:02.330
Şimdi burada, bu döngüde, manuel olarak

08:02.330 --> 08:04.720
bir liste öğesi oluşturmak yerine,

08:04.720 --> 08:08.270
tüm bunlardan kurtulacağım ve sadece burada

08:08.270 --> 08:13.740
yeni proje öğesi ve şimdi iki proje öğesi diyeceğim.

08:13.740 --> 08:16.110
Ev sahibi fikrini aktarmamız

08:16.110 --> 08:21.090
gerekiyor, şimdi bu tabii ki buradaki liste maddemize oturan

08:21.090 --> 08:22.730
kimlik.

08:22.730 --> 08:25.990
Yani temel olarak bu. element. id, bu ana bilgisayar

08:25.990 --> 08:27.800
öğesinin Id'sidir, çünkü sırasız

08:27.800 --> 08:31.670
liste olan bu öğe ana bilgisayar olmalıdır.

08:31.670 --> 08:34.210
Buradaki ikinci argüman ise projedir

08:34.210 --> 08:37.400
ve temelde burada tasfiye edilen öğedir.

08:37.400 --> 08:40.950
Yani döngünün içine aldığımız bu sabit.

08:40.950 --> 08:42.790
Ve şimdi ek, proje öğesinin içinde

08:42.790 --> 08:46.530
veya proje öğelerinin genişlettiği bileşen sınıfının temel

08:46.530 --> 08:49.770
cümlesinin içinde gerçekleşecektir.

08:49.770 --> 08:53.570
Ve tek yapmamız gereken proje öğesini örneklemek olmalıdır.

08:53.570 --> 08:58.380
Yani bunu kaydedip geri dönersek ve burada yine bu koda sahip olursak

08:58.380 --> 09:00.890
ya da yine bu girdiye sahip olursak.

09:00.890 --> 09:04.140
Görüyorsunuz, bu işleniyor ve bu çok da kötü görünmüyor.

09:04.140 --> 09:06.320
Şimdi hoşlanmadığım iki şey var,

09:06.320 --> 09:10.220
tabii ki buradaki madde, bundan pek hoşlanmıyorum.

09:10.220 --> 09:12.710
Ve sadece burada özgür olmak,

09:12.710 --> 09:15.590
herkes bu konuda çok mutlu değil.

09:15.590 --> 09:17.293
Peki bunu şimdi nasıl düzeltebiliriz?

09:18.730 --> 09:21.380
Madde işaretini düzeltmek için içeriğimizi inceleyelim.

09:21.380 --> 09:24.110
Ve burada gördüğümüz şey, liste öğesinin

09:24.110 --> 09:28.060
aslında sırasız listenin dışında işlendiğidir.

09:28.060 --> 09:29.600
Yani içinde değil.

09:29.600 --> 09:32.710
İçeride olsaydı düzgün çalışırdı

09:32.710 --> 09:35.530
ama oraya sürükleyemiyorum.

09:35.530 --> 09:38.050
Bu yüzden sırasız listenin içinde işlendiğinden emin

09:38.050 --> 09:39.000
olmamız gerekir.

09:39.000 --> 09:41.363
Şimdi bunun neden böyle olmadığını öğrenelim.

09:42.220 --> 09:46.710
Muhtemelen durum böyle değildir çünkü proje öğesinde,

09:46.710 --> 09:50.430
temel cümle kurucusuna burada false geçiyorum

09:50.430 --> 09:53.660
ve burada false geçmek, başlangıçta eklenmeyeceği

09:53.660 --> 09:57.640
anlamına gelir ve bu da attach'ta burada before

09:57.640 --> 10:02.670
ve as a value olduğu anlamına gelir.

10:02.670 --> 10:05.660
Ancak olmasını istediğimiz şey bu, bu yüzden

10:05.660 --> 10:08.360
muhtemelen sorun bu değil.

10:08.360 --> 10:12.420
Sorun şu ki, elbette bunu ana

10:12.420 --> 10:14.970
öğeye ekliyoruz.

10:14.970 --> 10:17.650
Şimdi tekrar düşünelim, proje listesinin

10:17.650 --> 10:19.460
ev sahibi unsuru nedir?

10:19.460 --> 10:20.900
Ve sonuçta burada önemli

10:20.900 --> 10:23.850
olan da bu, çünkü projelerimizi işlediğimizde

10:23.850 --> 10:25.620
yeni bir proje öğesi oluşturuyoruz

10:25.620 --> 10:31.240
ve burada öğemizin Id'sini, proje listesindeki işlenmiş öğenin proje öğesine

10:31.240 --> 10:34.180
iletiyorum.

10:34.180 --> 10:36.670
Böylece tek bir proje öğesinin ev sahibi unsuru

10:36.670 --> 10:38.120
fikri ortaya çıkacaktır.

10:38.120 --> 10:40.720
Ama buradaki unsur nedir?

10:40.720 --> 10:43.770
Buradaki öğe, o kutuda sahip olduğumuz sırasız liste

10:43.770 --> 10:44.900
değil, kutunun kendisidir,

10:44.900 --> 10:47.350
bizim bölümümüzdür.

10:47.350 --> 10:50.260
Gördüğümüz şablonu incelersek, buradaki bölüm

10:50.260 --> 10:53.810
aslında proje listesi sınıfımız için işlenen bölümdür.

10:53.810 --> 10:55.500
Bu sadece liste değil, aynı

10:55.500 --> 10:58.300
zamanda bir başlık da içeren bölümdür.

10:58.300 --> 11:00.320
Bu nedenle, aslında buradaki öğemizin

11:00.320 --> 11:02.020
içindeki listeye erişmemiz ve

11:02.020 --> 11:05.070
ardından bu listenin fikrine erişmemiz gerekiyor, çünkü

11:05.070 --> 11:08.710
burada, aslında bu listede bir Kimlik belirliyoruz, bu nedenle bir

11:08.710 --> 11:10.750
Kimlik olacak, sadece doğru olanı almamız

11:10.750 --> 11:12.230
gerekiyor.

11:12.230 --> 11:14.880
Dolayısıyla, elementin kendisi hakkında fikir

11:14.880 --> 11:16.790
edinmek doğru değildir.

11:16.790 --> 11:20.580
Bunun yerine, elemanımızda sırasız liste fikrini almalıyız

11:20.580 --> 11:23.580
ve sırasız bir liste olacağını kesin olarak

11:23.580 --> 11:25.310
biliyoruz, bu nedenle ünlem

11:25.310 --> 11:26.350
işareti ekleyerek

11:26.350 --> 11:30.063
null kontrolünü atlayabiliriz.

11:30.930 --> 11:34.463
Şimdi bu eklendiğinde, buraya yeni bir öğe eklersek, bu

11:35.490 --> 11:37.680
daha iyi görünür, şimdi madde işareti

11:37.680 --> 11:39.920
gitti, çünkü şimdi uygun stil uygulandı,

11:39.920 --> 11:43.100
çünkü LI, liste öğesi şimdi gördüğünüz gibi sırasız

11:43.100 --> 11:46.320
listenin içine gerçekten eklendi.

11:46.320 --> 11:49.390
Şimdi bu bir şey, şimdi şu beşe geçelim, çünkü buraya

11:49.390 --> 11:51.180
sadece bir beş koymak gerçekten

11:51.180 --> 11:52.990
yapmak istediğim şey değil.

11:52.990 --> 11:56.143
Biraz daha faydalı bilgiler vermeye ne dersiniz?
