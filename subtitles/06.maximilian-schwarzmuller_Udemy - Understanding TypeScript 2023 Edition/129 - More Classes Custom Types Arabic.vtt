WEBVTT

00:02.220 --> 00:05.760
-: كخطوة تالية ، أريد العمل على هذه الأنواع

00:05.760 --> 00:11.320
هنا ، أي نوع أستخدمه هنا لمشاريعي المخصصة ، وللمستمعين هنا ،

00:11.320 --> 00:14.980
وكذلك للمشاريع في حالة المشروع.

00:14.980 --> 00:19.030
بالطبع ، هنا ، لا أريد العمل مع أي شخص ، سيكون

00:19.030 --> 00:20.740
من المنطقي أن يكون

00:20.740 --> 00:25.660
لديك فئة مشروع أو نوع مشروع مخصص ، يمكننا استخدامه.

00:25.660 --> 00:27.760
وبالفعل ، سوف أقوم بإنشاء فصل

00:29.070 --> 00:29.903
دراسي لهذا النوع

00:31.390 --> 00:32.450
من المشروع ، وذلك

00:32.450 --> 00:34.890
ببساطة عن طريق استخدام مشروع الفصل

00:34.890 --> 00:38.740
بحيث يكون لدينا طريقة لبناء كائنات المشروع ، والتي

00:38.740 --> 00:41.570
لها نفس الهيكل دائمًا.

00:41.570 --> 00:44.760
في الوقت الحالي ، أفعل ذلك في الأسفل باستخدام الترميز الحرفي.

00:44.760 --> 00:47.920
الجانب السلبي لذلك ، بالطبع ، هو أننا يجب

00:47.920 --> 00:50.490
أن نتذكر أنه وصف وليس تنازليا.

00:50.490 --> 00:52.410
أننا بحاجة إلى معرف ، وهو عبارة عن سلسلة

00:52.410 --> 00:53.470
، وما إلى ذلك.

00:53.470 --> 00:56.440
هذا هو المكان الذي يمكن أن يساعدنا فيه النوع

00:56.440 --> 00:59.750
المخصص وسأقوم بإنشاء فئة وليس واجهة أو نوع مخصص

00:59.750 --> 01:02.300
باستخدام الكلمة الأساسية من النوع لأنني

01:02.300 --> 01:05.470
أريد أن أكون قادرًا على إنشاء مثيل لها.

01:05.470 --> 01:07.960
إذن كيف يجب أن تبدو مثل هذه الفئة

01:07.960 --> 01:10.700
أو أن يبدو مثل هذا المشروع دقيقًا؟

01:10.700 --> 01:12.320
حسنًا ، سأضيف مُنشئًا

01:12.320 --> 01:17.280
ثم استخدم هذا الاختصار لتعيين الوسائط أو المعلمات للمنشئ

01:17.280 --> 01:19.100
، والتي تصبح بعد ذلك خصائص

01:19.100 --> 01:22.310
تلقائيًا أيضًا ، عن طريق إضافة الموصل

01:22.310 --> 01:25.650
في البداية ، عام ، في هذه الحالة ، ثم اسم الوسيطة

01:25.650 --> 01:29.450
والممتلكات ، ثم النوع.

01:29.450 --> 01:33.100
وهنا يجب أن يكون لكل مشروع معرّف.

01:33.100 --> 01:34.990
يجب أن يكون لكل مشروع عنوان ، وهو

01:34.990 --> 01:37.330
أيضًا سلسلة ، تمامًا مثل المعرف.

01:37.330 --> 01:38.690
يجب أن تحتوي على

01:38.690 --> 01:39.920
وصف ، وهو عبارة

01:39.920 --> 01:43.540
عن سلسلة ، ويجب أن يكون لها خاصية الأشخاص ، وهو

01:43.540 --> 01:44.420
رقم يمثل عدد

01:44.420 --> 01:47.440
الأشخاص المعينين للمشروع.

01:47.440 --> 01:49.580
والشيء الوحيد الذي أريد إضافته

01:49.580 --> 01:51.640
، والذي لم يكن لدينا حتى الآن ، هو

01:51.640 --> 01:53.580
في الواقع حالة المشروع.

01:53.580 --> 01:56.920
لأنه الآن عندما نضيف مشروعًا هنا ، فإنه يظهر

01:56.920 --> 01:58.680
في كلتا القائمتين.

01:58.680 --> 02:01.530
الآن ، أريد إضافة حالة إلى مشروع يمكن

02:01.530 --> 02:03.630
بالطبع تغييره حتى نتمكن بالفعل

02:03.630 --> 02:07.470
من التصفية للمشاريع النشطة في المربع الأول والمشاريع

02:07.470 --> 02:11.470
المنتهية في المربع الثاني.

02:11.470 --> 02:15.000
حتى يتم عرض المشاريع الصحيحة فقط في كل صندوق.

02:15.000 --> 02:19.890
لذلك سأضيف هنا ملكية عامة أخرى ، الحالة.

02:19.890 --> 02:21.280
والآن السؤال بالطبع

02:21.280 --> 02:23.985
هو أي نوع يجب أن يكون لهذه الحالة؟

02:23.985 --> 02:28.240
الآن يمكننا استخدام نوع الاتحاد مع نوعين حرفيين نشط وانتهى

02:28.240 --> 02:31.170
ما استخدمناه سابقًا بالفعل.

02:31.170 --> 02:33.280
لكن هنا ، أرغب دائمًا في

02:33.280 --> 02:36.890
تقديم أو إعادة تقديم نوع آخر تعلمت عنه

02:36.890 --> 02:38.320
، وهو Enum.

02:38.320 --> 02:41.890
Enum مثالي هنا لأن لدينا خياران بالضبط.

02:41.890 --> 02:44.950
وهنا في سياق كائن المشروع هذا ، لا نحتاج

02:44.950 --> 02:48.740
أيضًا إلى نص منطقي للبشر ، والذي نقوم بتخزينه كقيمة

02:48.740 --> 02:50.270
، لكننا نحتاج فقط إلى

02:50.270 --> 02:52.341
بعض المعرفات.

02:52.341 --> 02:56.140
لذا سأضيف هنا حالة مشروع Enum جديدة.

02:56.140 --> 02:59.810
وأريد أن يكون لدي قيمتان هناك

02:59.810 --> 03:02.890
، نشطة ومنتهية.

03:02.890 --> 03:05.440
ثم هنا ، ستكون هذه الحالة من

03:05.440 --> 03:08.610
نوع حالة المشروع تمامًا مثل ذلك.

03:08.610 --> 03:11.003
هذا هو فصل مشروعي الآن.

03:11.900 --> 03:14.220
مع ذلك هنا ، يمكننا القول أن هذه

03:14.220 --> 03:17.820
مجموعة من المشاريع باستخدام فئة المشروع هذه.

03:17.820 --> 03:20.351
وبالطبع ، عندما ننشئ مشروعًا

03:20.351 --> 03:24.780
هنا ، فإننا نفعل ذلك باستخدام مشروع مشروع جديد ، وليس

03:24.780 --> 03:26.620
حالة المشروع.

03:26.620 --> 03:30.310
وهنا للتخطيط ، نعيد توجيه معرف في هذه

03:30.310 --> 03:32.200
الحالة ، كما ذكرنا

03:32.200 --> 03:35.370
سابقًا ، رقم عشوائي نقوم بتحويله

03:35.370 --> 03:36.720
إلى سلسلة ، ثم

03:36.720 --> 03:38.210
العنوان ، ثم الوصف

03:38.210 --> 03:41.930
، ثم NUM من الأشخاص هنا ، ثم أيضًا ، بالطبع

03:41.930 --> 03:45.080
، هذه الحالة ، حقا.

03:45.080 --> 03:49.950
والشيء الوحيد الذي أرغب في الحصول عليه هنا في هذا التطبيق في

03:49.950 --> 03:53.180
هذا المشروع التجريبي هو أن كل مشروع جديد

03:53.180 --> 03:54.830
نشط بشكل افتراضي.

03:54.830 --> 03:57.040
لذلك عندما نقوم بإنشاء مشروع جديد هنا ، نقوم

03:57.040 --> 04:00.064
بتعيين حالة المشروع. نشط هنا كقيمة

04:00.064 --> 04:02.990
للوضع مع ذلك ، علينا أن نتوقع

04:02.990 --> 04:05.230
ما نضيفه.

04:05.230 --> 04:06.720
والآن هناك مكان آخر نحتاج

04:06.720 --> 04:08.450
فيه إلى فصل دراسي للمشروع.

04:08.450 --> 04:11.220
وهذا هنا في فئة قائمة المشاريع هناك ،

04:11.220 --> 04:13.474
لدينا خاصية تعيين المشاريع.

04:13.474 --> 04:17.240
وبالطبع ، يجب أن يكون ذلك دائمًا مجموعة من المشاريع.

04:17.240 --> 04:19.530
الآن مع ذلك نحن نستخدم الكتابة التجريبية.

04:19.530 --> 04:22.810
وتتمثل إحدى الميزات في أنه هنا في مشروعات العرض ، نحصل

04:22.810 --> 04:26.360
الآن أيضًا على الإكمال التلقائي هنا ، على سبيل المثال.

04:26.360 --> 04:29.020
وقد نحصل أيضًا على خطأ ، خطأ في التجميع

04:29.020 --> 04:31.300
إذا حاولنا حفظ ذلك ، لأن TypeScript

04:31.300 --> 04:33.100
الآن يفهم الأنواع التي

04:33.100 --> 04:35.360
نعمل هنا.

04:35.360 --> 04:39.040
هذه هي فئة المشروع وكيف يمكننا استخدام ذلك.

04:39.040 --> 04:41.760
فئة المشروع ليست هي الفصل الوحيد ، ومع

04:41.760 --> 04:44.230
ذلك ، لدينا أيضًا المستمع هنا.

04:44.230 --> 04:48.630
ولهذا ، سأضيف مستمع نوع مخصص جديد.

04:48.630 --> 04:50.390
الاسم بالطبع متروك لك.

04:50.390 --> 04:54.280
وأنا فقط أستخدم نوعًا هنا لأنني أريد

04:54.280 --> 04:58.260
أساسًا ترميز نوع دالة بكلمة واحدة.

04:58.260 --> 04:59.640
إذن ماذا نعني بذلك؟

04:59.640 --> 05:03.270
حسنًا ، بالطبع ، المستمع هنا في تطبيقنا هو

05:03.270 --> 05:05.370
مجرد وظيفة ، أليس كذلك؟

05:05.370 --> 05:07.160
ما قمنا بتخزينه في مصفوفة المستمعين

05:07.160 --> 05:08.960
هو مجرد مجموعة من الوظائف. Add

05:08.960 --> 05:11.060
Listener يدفع وظيفة جديدة ، وعندما

05:11.060 --> 05:12.200
يتغير شيء ما ، نقوم

05:12.200 --> 05:14.190
بتنفيذ هذه الوظيفة.

05:14.190 --> 05:17.610
لذا فإن المستمع هنا هو في الحقيقة مجرد وظيفة.

05:17.610 --> 05:22.610
لكنها وظيفة تتلقى عناصرنا وعناصر معينة

05:22.870 --> 05:23.703
في حالتنا

05:23.703 --> 05:27.113
ومجموعة من المشاريع.

05:28.500 --> 05:30.410
وهذا بعد ذلك يفعل شيئًا به.

05:30.410 --> 05:32.480
الآن لكي نكون دقيقين هنا ، بالطبع

05:32.480 --> 05:33.550
، لتحديد نوع الوظيفة

05:33.550 --> 05:35.200
، ليس لدينا أقواس معقوفة

05:35.200 --> 05:37.440
هنا ، ولكن بدلاً من ذلك كما تعلمت نوع

05:37.440 --> 05:38.780
الإرجاع ، وسيكون ذلك

05:38.780 --> 05:41.880
واسعًا ، مما يعني أننا لا نهتم بأي قيمة قد تعود

05:41.880 --> 05:44.090
وظيفة المستمع.

05:44.090 --> 05:46.140
في المكان الذي نعمل فيه مع المستمعين.

05:46.140 --> 05:47.940
لا نحتاج إلى أي نوع عودة.

05:47.940 --> 05:49.810
نريد فقط التأكد من أن أي شخص

05:49.810 --> 05:51.880
يمر على هذا النحو يتوقع المستمع

05:51.880 --> 05:55.870
الحصول على بعض العناصر عندما ينطلق المستمع.

05:55.870 --> 05:58.530
مع ذلك هنا ، يمكننا أن نقول أن المستمعين

05:58.530 --> 06:02.760
عبارة عن مجموعة من وظائف المستمع الجيد في النهاية.

06:02.760 --> 06:05.670
وهنا ، عندما أقوم بدفع وظيفة المستمع

06:05.670 --> 06:08.480
، أحتاج إلى توضيح أنها ليست مجرد وظيفة

06:08.480 --> 06:10.630
، ولكنها نوع من المستمع ، ثم

06:10.630 --> 06:12.350
يعمل كل شيء.

06:12.350 --> 06:14.530
الآن في المكان الذي نستخدم فيه إضافة

06:14.530 --> 06:16.180
مستمع ، الموجود بالأسفل

06:16.180 --> 06:17.650
، يمكننا الآن بالطبع ،

06:17.650 --> 06:19.869
بالطبع ، تحسين كتابتنا وتوضيح أننا

06:19.869 --> 06:23.440
هنا ، سنحصل بالفعل على مجموعة من المشاريع.

06:23.440 --> 06:27.220
الآن مع ذلك ، قمنا بإعداد المستمع الخاص

06:27.220 --> 06:32.210
بنا ، وأضفنا نوع المشروع ، وهذا لا يغير شيئًا هنا.

06:32.210 --> 06:35.120
إذا أضفنا الآن شيئًا يعمل ، وإذا أضفت عنصرًا

06:35.120 --> 06:36.900
ثانيًا ، فسيتم إضافته إلى

06:36.900 --> 06:38.880
جانب العنصر الأول الذي تتم

06:38.880 --> 06:40.530
إضافته مرة أخرى أيضًا

06:40.530 --> 06:43.230
، ولا نقوم بأي تصفية في أي من القوائم

06:43.230 --> 06:45.260
على الإطلاق.

06:45.260 --> 06:48.600
لذا ، قبل أن نواصل العمل على أجزائنا ، لنتأكد

06:48.600 --> 06:50.570
من عدم وجود هذه التكرار هنا

06:50.570 --> 06:53.990
داخل قائمة واحدة ، وكذلك عدم وجود تكرار في كلا

06:53.990 --> 06:58.610
المربعين هنا ، ولكن بدلاً من ذلك ، تظهر فقط المشاريع النشطة

06:58.610 --> 07:01.030
هنا وتم الانتهاء منها فقط المشاريع

07:01.030 --> 07:02.940
وبالتالي في البداية لا توجد

07:02.940 --> 07:08.010
مشاريع تظهر هنا في المشاريع المكتملة.

07:08.010 --> 07:09.623
لذلك دعونا نصلح ذلك.
