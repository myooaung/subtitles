WEBVTT

00:02.250 --> 00:04.380
-: Teraz jedna ważna uwaga, przy okazji,

00:04.380 --> 00:07.280
możesz się zastanawiać, dlaczego autobind działa

00:07.280 --> 00:09.960
tutaj w ProjectList, mimo że nie dodałem importu

00:09.960 --> 00:11.840
do dekoratora autobind.

00:11.840 --> 00:15.860
No właśnie, bo w app. ts, mam te wszystkie importy.

00:15.860 --> 00:18.610
Teraz faktycznie, jeśli usunę tam te importy,

00:18.610 --> 00:21.430
co byłoby poprawne, bo tutaj technicznie używam

00:21.430 --> 00:25.010
tylko ProjectInput ProjectList is on, to będziemy mieli

00:25.010 --> 00:26.253
problem.

00:27.260 --> 00:30.680
Widzisz, jeśli to się przeładuje, mamy tutaj błąd, mimo że

00:30.680 --> 00:33.280
nie dostajemy błędu kompilacji niestety, ale

00:33.280 --> 00:35.010
dostajemy błąd runtime.

00:35.010 --> 00:37.470
Musimy więc upewnić się, że importujemy wszystko, czego

00:37.470 --> 00:40.150
używamy w pliku do tego pliku, aby być bezpiecznym.

00:40.150 --> 00:42.890
Technicznie możemy zaimportować wszystko w app. ts, a ponieważ ProjectInput

00:42.890 --> 00:45.260
i ProjectList, które na przykład używają

00:45.260 --> 00:48.320
dekoratora autobind, przychodzą później, dekorator

00:48.320 --> 00:51.750
autobind będzie dostępny, gdy będą go potrzebować.

00:51.750 --> 00:54.320
Nie jest to jednak najczystszy z możliwych sposobów.

00:54.320 --> 00:56.740
Jeśli zamiast tego importujesz wszystko, czego potrzebuje

00:56.740 --> 00:58.450
plik z wnętrza tego pliku, musisz zagwarantować,

00:58.450 --> 01:00.540
że ten plik będzie miał to dostępne, gdy będzie

01:00.540 --> 01:02.360
tego potrzebował, a nie polegasz na jakimś

01:02.360 --> 01:09.570
globalnym pliku, który importuje wszystko, gdzie następnie możesz usunąć import i nagle wszystko się zepsuje.

01:09.570 --> 01:11.390
Jakie więc jest tutaj rozwiązanie?

01:11.390 --> 01:13.350
Cóż, wróćmy do plików i zaimportujmy to,

01:13.350 --> 01:14.530
czego potrzebują.

01:14.530 --> 01:16.630
Na przykład ProjectInput nie potrzebuje tylko

01:16.630 --> 01:18.790
komponentu bazowego, potrzebuje również logiki

01:18.790 --> 01:21.270
sprawdzania poprawności i autobind.

01:21.270 --> 01:23.630
Więc w tym miejscu zaimportuję wchodząc o jeden

01:24.970 --> 01:27.110
poziom wyżej z dwoma kropkami, z decorators,

01:27.110 --> 01:35.366
dekorator autobind, whoops, like this, i z util, validation.

01:35.366 --> 01:35.366
plik ts.

01:35.366 --> 01:39.770
To jest zdecydowanie potrzebne w tym pliku tutaj.

01:39.770 --> 01:42.210
Potrzebuję również stanu projektu w tym miejscu.

01:42.210 --> 01:46.810
Zaimportuję więc /state/project-state. ts.

01:46.810 --> 01:50.690
I złapię te importy i przejdę do ProjectItem, a tam nie potrzebuję

01:50.690 --> 01:53.210
stanu projektu i walidacji, więc możemy

01:53.210 --> 01:54.320
to usunąć.

01:54.320 --> 01:56.560
Będziemy jednak potrzebowali dekoratora autobind.

01:56.560 --> 02:00.580
Potrzebujemy również przeciągalnego interfejsu i modelu projektu.

02:00.580 --> 02:04.040
Więc tutaj również przejdziemy do folderu models i zaimportujemy

02:04.040 --> 02:08.257
projekt. ts i drag-drop. ts.

02:10.820 --> 02:14.720
W ProjectList nie będziemy potrzebować walidacji, ale

02:14.720 --> 02:17.520
potrzebuję ProjectState i autobind.

02:17.520 --> 02:21.100
A dodatkowo z folderu models potrzebuję

02:21.100 --> 02:25.710
projektu. ts plik i przeciągnąć. plik ts.

02:25.710 --> 02:27.840
Z tym tylko zapisuje i kompiluje, a teraz

02:27.840 --> 02:30.170
to wszystko działa ponownie, jak widzisz,

02:30.170 --> 02:32.820
teraz nie mamy błędów runtime, ponieważ teraz mamy

02:32.820 --> 02:35.520
wszystkie te importy z powrotem w plikach.

02:35.520 --> 02:37.380
Tak więc, jest to właściwy sposób robienia

02:37.380 --> 02:40.060
tego, każdy plik określa, czego potrzebuje, a my możemy

02:40.060 --> 02:41.500
podzielić nasz kod i nadal skończyć

02:41.500 --> 02:43.310
z jednym plikiem, więc dostajemy najlepsze

02:43.310 --> 02:45.940
z obu światów, można powiedzieć.

02:45.940 --> 02:48.000
Jednak niekoniecznie jest to

02:48.000 --> 02:49.963
najlepszy możliwy sposób.
