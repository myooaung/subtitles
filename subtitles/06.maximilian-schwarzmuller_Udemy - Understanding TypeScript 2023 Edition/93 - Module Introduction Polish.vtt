WEBVTT

00:02.500 --> 00:04.010
Instruktor: W tym module zanurkujemy

00:04.010 --> 00:06.400
w koncepcję zwaną generics.

00:06.400 --> 00:10.890
Generics istnieją w TypeScript, a nie w vanilla JavaScript, więc nie ma

00:10.890 --> 00:12.860
tu prawdziwego tłumaczenia.

00:12.860 --> 00:14.480
Możemy je jednak wykorzystać w TypeScript.

00:14.480 --> 00:17.200
A koncepcja typów generycznych wszystkie istnieją

00:17.200 --> 00:19.730
w innych językach programowania.

00:19.730 --> 00:21.950
Oczywiście nie we wszystkich innych językach programowania,

00:21.950 --> 00:24.530
ale w niektórych, na przykład w C Sharp.

00:24.530 --> 00:27.290
Ten kurs nie jest jednak o C Sharp.

00:27.290 --> 00:29.280
Przyjrzyjmy się więc czym są generics

00:29.280 --> 00:30.770
i czym są w TypeScript oraz

00:30.770 --> 00:33.410
jak ich tam używamy i dlaczego ich używamy.

00:33.410 --> 00:36.450
W szczególności przyjrzymy się temu, czym dokładnie są generics

00:36.450 --> 00:39.000
i dlaczego są interesujące i pomocne.

00:39.000 --> 00:41.925
Następnie zbudujemy własne funkcje i klasy generyczne,

00:41.925 --> 00:44.820
ponieważ, jak się okazuje, możemy to zrobić.

00:44.820 --> 00:47.910
Następnie przyjrzymy się generycznym ograniczeniom

00:47.910 --> 00:51.800
i co to jest i dlaczego użylibyśmy czegoś takiego.

00:51.800 --> 00:53.300
I będziemy mieli spojrzenie

00:53.300 --> 00:55.250
na kilka specjalnych typów TypeScript,

00:55.250 --> 00:57.750
które również typowo są generyczne i które kiedykolwiek

00:57.750 --> 01:01.100
naprawdę moglibyśmy zrozumieć tylko teraz.

01:01.100 --> 01:02.963
Zobaczmy więc, co tam mamy.
