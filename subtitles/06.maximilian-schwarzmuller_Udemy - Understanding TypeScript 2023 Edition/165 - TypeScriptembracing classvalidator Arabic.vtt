WEBVTT

00:02.130 --> 00:03.630
الراوي: لقد ألقينا نظرة

00:03.630 --> 00:06.210
على Lodash ، وهي حزمة JavaScript فانيليا

00:06.210 --> 00:08.360
حيث نحتاج إلى تثبيت بعض الترجمات.

00:08.360 --> 00:10.310
وقد ألقينا نظرة على محول الفصل

00:10.310 --> 00:13.530
، والذي يعمل أيضًا في Vanilla JavaScript ، ولكنه

00:13.530 --> 00:17.328
يعمل أيضًا بشكل جيد بشكل خاص في TypeScript.

00:17.328 --> 00:20.330
الآن دعونا نلقي نظرة على مدقق الفصل.

00:20.330 --> 00:24.540
هذه الآن حزمة تستخدم TypeScript حقًا.

00:24.540 --> 00:28.300
إنه يعتمد على مفهوم مصممي TypeScript ، ويمنحنا

00:28.300 --> 00:32.340
طريقة جديدة تمامًا للعمل معهم ، أو على الأقل تقريبًا

00:32.340 --> 00:34.330
علامة تجارية جديدة.

00:34.330 --> 00:38.230
إذا اتبعت من خلال وحدة الديكور الخاصة بي في هذه الدورة

00:38.230 --> 00:41.200
، فسترى شيئًا ما هنا في هذه المحاضرة ، والذي

00:41.200 --> 00:44.150
قمنا ببنائه بأنفسنا هناك أيضًا.

00:44.150 --> 00:47.100
الآن ، مع مكتبة الطرف الثالث هذه ، لا يتعين علينا

00:47.100 --> 00:49.330
إعادة اختراع العجلة من الصفر ، ولا يتعين

00:49.330 --> 00:51.193
علينا أن نبنيها بمفردنا.

00:51.193 --> 00:53.320
ويمكن القول أيضًا أن هذه المكتبة

00:53.320 --> 00:55.710
أكثر تفصيلاً قليلاً من حلنا

00:55.710 --> 00:57.830
في وحدة المصمم.

00:57.830 --> 01:00.026
أنا أتحدث عن التحقق من الصحة.

01:00.026 --> 01:02.870
هذه حزمة تسمح لنا بإضافة قواعد التحقق

01:02.870 --> 01:06.390
بمساعدة بعض المصممين ، داخل الفصل ، وبعد ذلك

01:06.390 --> 01:08.590
كلما قمنا بإنشاء مثل هذه الفئة

01:08.590 --> 01:09.920
، يمكننا بالفعل التحقق

01:09.920 --> 01:12.610
من صحتها للقواعد التي أنشأناها هناك

01:12.610 --> 01:15.610
بمساعدة المصممين.

01:15.610 --> 01:18.960
الآن للبدء ، نحتاج فقط إلى استيراد هذه الحزمة هنا.

01:18.960 --> 01:23.130
لذا ، ثبت npm class-validator - save ، وبعد

01:23.130 --> 01:26.130
ذلك يمكننا البدء على الفور.

01:26.130 --> 01:29.220
لذا اسمحوا لي بإعادة تشغيل خادم webpack-dev-server

01:29.220 --> 01:30.600
، ولاستخدام هذه الحزمة

01:30.600 --> 01:33.580
، يتعين علينا إضافة اثنين من الزخارف إلى النماذج

01:33.580 --> 01:35.740
، لذلك إلى الفئات التي نريد التحقق من

01:35.740 --> 01:37.490
خصائص معينة فيها.

01:37.490 --> 01:39.730
لذلك في حالتي هنا في نموذج

01:39.730 --> 01:43.240
المنتج ، سأستورد شيئًا من مدقق الفئة.

01:43.240 --> 01:45.110
والآن مرة أخرى ، إذا اتبعت

01:45.110 --> 01:47.360
وحدة الديكور في هذه الدورة

01:47.360 --> 01:49.640
، فهذا مفهوم قمت بالفعل ببنائه

01:49.640 --> 01:52.870
من البداية بدون هذه الحزمة.

01:52.870 --> 01:56.270
لكن بالطبع قمنا ببناء نسخة أساسية ساذجة للغاية ،

01:56.270 --> 01:57.840
مع هذه الحزمة لا يتعين علينا

01:57.840 --> 02:01.200
بناءها بمفردنا وهي أيضًا أكثر تفصيلاً.

02:01.200 --> 02:02.770
الآن من مدقق الفصل ، يمكننا

02:02.770 --> 02:04.820
استيراد بعض الديكورات.

02:04.820 --> 02:05.893
على سبيل المثال

02:07.139 --> 02:08.630
، IsNotEmpty أو

02:08.630 --> 02:11.410
أيضًا IsNumber.

02:11.410 --> 02:13.500
يمكننا أيضًا استيراد IsPositive.

02:15.940 --> 02:18.940
الآن يمكننا إضافتها إلى الخصائص التي نريد التحقق من صحتها.

02:18.940 --> 02:20.900
هنا على سبيل المثال في العنوان

02:20.900 --> 02:24.220
، يمكننا إضافة IsNotEmpty كمصمم ديكور مثل

02:24.220 --> 02:26.390
هذا ، وهذه كلها مصانع ديكور

02:26.390 --> 02:29.610
، لذلك عليك دائمًا تنفيذها.

02:29.610 --> 02:31.318
وهنا أيضًا

02:31.318 --> 02:33.485
، IsNumber و

02:34.472 --> 02:37.380
IsPositive.

02:37.380 --> 02:38.763
دعونا ننفذ ذلك.

02:40.250 --> 02:41.730
الآن لاستخدام المصممين هنا ، يجب عليك

02:41.730 --> 02:44.730
أيضًا الانتقال إلى tsconfig. js ، وتأكد من

02:44.730 --> 02:49.550
تشغيل أدوات الزينة التجريبية هناك.

02:49.550 --> 02:51.593
بعد ذلك ، احفظ هذا ، والآن يجب أن

02:52.750 --> 02:55.040
تختفي هذه المناطق هنا أيضًا.

02:55.040 --> 02:57.300
نحتاج أيضًا إلى إعادة تشغيل خادم dev ،

02:57.300 --> 03:00.840
بحيث يلتقط tsconfig الجديد. شبيبة التحويل.

03:00.840 --> 03:02.650
الآن أضفنا هذه القواعد

03:02.650 --> 03:04.768
، قواعد التحقق هذه هنا.

03:04.768 --> 03:07.710
نحن في الأساس نقول إن العنوان يجب ألا يكون

03:07.710 --> 03:11.830
سلسلة فارغة ويجب أن تكون الأرقام رقمًا موجبًا.

03:11.830 --> 03:13.980
الآن يمكننا إنشاء منتج

03:13.980 --> 03:15.119
جديد هنا ، دعنا

03:15.119 --> 03:16.870
نقول هناك ، newProd

03:16.870 --> 03:19.078
، حيث نسمي منتجًا جديدًا

03:19.078 --> 03:21.720
وأمرر سلسلة فارغة للعنوان ،

03:21.720 --> 03:25.210
ثم ناقص 5. 99 في للرقم.

03:25.210 --> 03:26.700
إذا كنت ثم تعزية. قم بتسجيل

03:27.576 --> 03:29.920
الدخول إلى newProd ، و getInformation

03:29.920 --> 03:34.830
، ثم قم بتنفيذ ذلك ، فلنرى أين تعمل.

03:34.830 --> 03:35.683
حسنًا ، احفظ ذلك.

03:37.840 --> 03:40.040
هاه ، إنه يعمل.

03:40.040 --> 03:42.330
حسنًا ، لم نصل إلى هناك بالكامل بعد.

03:42.330 --> 03:46.470
مع مصممي الديكور لدينا وضعنا القواعد.

03:46.470 --> 03:49.560
لكن هؤلاء المصممين بمفردهم لا يفعلون الكثير.

03:49.560 --> 03:52.880
بدلاً من ذلك ، يتعين علينا الآن أيضًا استيراد

03:52.880 --> 03:56.190
طريقة المدقق من مدقق الفئة.

03:56.190 --> 03:57.300
لذلك من هذه الحزمة

03:57.300 --> 03:59.840
، نقوم باستيراد التحقق وعلينا

03:59.840 --> 04:02.260
تنفيذ هذا على مثيل ملموس ، خارج

04:02.260 --> 04:05.750
الفصل الذي أضفنا إليه الديكور.

04:05.750 --> 04:07.300
في هذه الحالة هنا ،

04:07.300 --> 04:12.020
يمكننا تشغيل التحقق من الصحة وتمرير newProd إليه.

04:12.020 --> 04:14.670
وسيعيد التحقق من الصحة بعد ذلك الوعد

04:14.670 --> 04:19.150
الذي قد يؤدي في الواقع إلى أخطاء في التحقق من الصحة.

04:19.150 --> 04:21.440
يمكننا بعد ذلك أن نضيف هنا ، إذا كنت

04:21.440 --> 04:23.080
تعمل بوظيفة تسهيل ، يمكنك

04:23.080 --> 04:25.680
أيضًا استخدام وزن واحد بالطبع.

04:25.680 --> 04:27.920
وهنا نسترجع الأخطاء التي وجدتها

04:27.920 --> 04:30.093
وظيفة التحقق من الصحة.

04:30.980 --> 04:31.813
من المهم الآن ، أن

04:31.813 --> 04:34.950
ينتهي بنا المطاف دائمًا في ذلك الوقت حتى لو كانت هناك أخطاء ،

04:34.950 --> 04:36.560
لذلك إذا كانت هناك أخطاء في التحقق

04:36.560 --> 04:38.420
من الصحة ، فإننا لا ندخل في بعض كتلة catch

04:38.420 --> 04:41.120
، فنحن دائمًا ننتقل إلى الكتلة حينئذٍ.

04:41.120 --> 04:44.360
الآن هنا يمكننا التحقق مما إذا كانت الأخطاء

04:44.360 --> 04:45.980
، وهي مصفوفة ، طول النقطة

04:45.980 --> 04:48.400
أكبر من الصفر.

04:48.400 --> 04:51.300
مما يعني وجود أخطاء في التحقق من الصحة.

04:51.300 --> 04:52.910
في هذه الحالة يمكننا

04:53.750 --> 04:56.700
تسجيل أخطاء التحقق ، وربما أيضًا إخراج

04:56.700 --> 04:59.200
الأخطاء التي وجدناها.

04:59.200 --> 05:01.820
لذا تعزية. سجل الأخطاء ، وإلا

05:01.820 --> 05:03.700
في حالتي هنا ، سأقوم بتسجيل

05:03.700 --> 05:05.290
المعلومات.

05:05.290 --> 05:06.580
الآن بالطبع يعتمد الأمر على

05:06.580 --> 05:09.100
التطبيق الذي تقوم ببنائه ما تريد القيام به هنا.

05:09.100 --> 05:10.860
قد ترغب في إظهار تنبيه للمستخدم

05:10.860 --> 05:13.790
في هذه الحالة هنا إذا كانت هناك أخطاء.

05:13.790 --> 05:15.360
قد ترغب في إعادة تعيين الإدخال ، مهما

05:15.360 --> 05:16.520
كنت تريد القيام به.

05:16.520 --> 05:19.690
هنا ، سأقوم بتسجيل شيء ما على وحدة التحكم.

05:19.690 --> 05:22.080
وإذا حفظنا ذلك الآن ، سترى أخطاء

05:22.080 --> 05:24.870
التحقق من الصحة ، ثم هنا مجموعة من

05:24.870 --> 05:27.830
الأخطاء التي تم العثور عليها.

05:27.830 --> 05:31.890
على سبيل المثال ، الخطأ الأول موجود في خاصية العنوان

05:31.890 --> 05:34.770
، بحيث لا يجب أن يكون فارغًا.

05:34.770 --> 05:38.290
والخطأ الثاني يتعلق بخاصية السعر ، حيث

05:38.290 --> 05:41.150
يجب أن يكون رقمًا موجبًا.

05:41.150 --> 05:44.950
وهذه هي السهولة التي يمكنك بها إضافة تحقق قوي

05:44.950 --> 05:47.960
جدًا لمشاريعك باستخدام هذا النهج

05:47.960 --> 05:50.170
القائم على الديكور.

05:50.170 --> 05:53.190
يتعلق بما فعلناه سابقًا في الدورة ، ووحدة

05:53.190 --> 05:54.530
مصممي الديكور ، ولكن

05:54.530 --> 05:56.062
كما ذكرت عدة مرات ، يكون

05:56.062 --> 05:59.890
أكثر تفصيلاً مع مجموعة من القواعد المضمنة ، ويمكنك

05:59.890 --> 06:01.190
تعلم كل شيء عن ذلك

06:01.190 --> 06:03.610
بالطبع في مستندات هذه الحزمة ، وبدون

06:03.610 --> 06:06.350
إعادة اختراع العجلة.

06:06.350 --> 06:09.300
لذا فإن حزمة التحقق من صحة الفئة هي بالفعل حزمة

06:09.300 --> 06:10.930
قوية يجب أن تكون على دراية

06:10.930 --> 06:14.693
بها إذا كنت تقوم ببناء مشاريع أكبر باستخدام TypeScript.
