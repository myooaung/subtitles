WEBVTT

00:02.260 --> 00:04.220
ตอนนี้เรามีความเข้าใจที่ดีเกี่ยวกับคุณสมบัติพื้นฐานของ

00:04.220 --> 00:08.410
typescript และสิ่งที่ typescript เพิ่ม

00:08.410 --> 00:10.070
และเรายังเข้าใจวิธีการทำงานของคอมไพเลอร์

00:10.070 --> 00:12.320
typescript

00:12.320 --> 00:13.760
มาดูกันดีกว่าว่า typescript

00:13.760 --> 00:15.020
มีอะไรอีกบ้าง โดยเฉพาะเมื่อพูดถึงไวยากรณ์

00:15.020 --> 00:18.700
Javascript สมัยใหม่

00:18.700 --> 00:23.360
ตอนนี้เป็นคำที่ยากและค่อนข้างคลุมเครือ แต่ท้ายที่สุดแล้วสิ่งที่ฉันหมายถึงคือคุณลักษณะของ

00:23.360 --> 00:28.410
Javascript ซึ่งมีมาสองสามปีแล้วและได้รับการสนับสนุนอย่างดีในเบราว์เซอร์สมัยใหม่

00:28.410 --> 00:34.970
แต่ไม่จำเป็นต้องเรียกใช้ โดยเฉพาะอย่างยิ่งในเบราว์เซอร์รุ่นเก่าและที่นั่น โดยเฉพาะอย่างยิ่งใน Internet

00:34.970 --> 00:37.570
Explorer

00:37.570 --> 00:40.210
ฉันกำลังพูดถึงสิ่งต่างๆ เช่น Let, Cons,

00:40.210 --> 00:43.240
arrow functions, de-structuring syntax, spread

00:43.240 --> 00:45.350
operation, end เป็นต้น

00:45.350 --> 00:48.220
ดังนั้น หากนั่นคือสิ่งที่คุณรู้แล้วจริงๆ

00:48.220 --> 00:51.950
คุณสามารถข้ามโมดูลนี้ได้ เพราะจะเป็นการรีเฟรชความรู้ในหัวข้อเหล่านี้ด้วย

00:51.950 --> 00:59.000
แต่จะอธิบายด้วยว่า typescript ทำอะไรกับสิ่งเหล่านี้ด้วยไวยากรณ์นี้

00:59.000 --> 01:02.980
แม้ว่าเรื่องสั้นคือ typescript รวบรวมไว้เพื่อให้ใช้งานได้

01:02.980 --> 01:04.510
อย่างไรก็ตาม เราจะพิจารณาเรื่องนี้

01:04.510 --> 01:08.290
แต่คุณสามารถข้ามโมดูลนี้ได้หากนั่นคือสิ่งที่คุณรู้อยู่แล้ว

01:08.290 --> 01:14.260
คุณสามารถดูหลักสูตรและดูว่ามีการบรรยายใดในโมดูลนี้ที่อาจยังน่าสนใจสำหรับคุณหรือไม่

01:14.260 --> 01:16.450
แล้วพบกันใหม่หลังโมดูลนี้

01:16.450 --> 01:18.140
หากคุณไม่แน่ใจเกี่ยวกับคุณลักษณะเหล่านี้

01:18.140 --> 01:20.500
หากคุณรู้จัก Javascript เกี่ยวกับ Var และ

01:20.500 --> 01:22.610
Zon แต่คุณไม่รู้ว่าคำหลัก Let หรือ

01:22.610 --> 01:27.820
Cons หมายถึงอะไรจริงๆ คุณควรอยู่กับฉันและดำดิ่งสู่โมดูลนี้

01:27.820 --> 01:29.860
เนื่องจากฉันมีการตั้งค่าโครงการใหม่ล่าสุด

01:29.860 --> 01:31.450
คุณจะพบว่ามันแนบมาด้วย

01:31.450 --> 01:35.613
และคุณจำเป็นต้องเรียกใช้การติดตั้ง NPM ก่อนในโครงการเหล่านี้เสมอ

01:35.613 --> 01:37.610
อย่าลืมสิ่งนี้เพื่อติดตั้งการพึ่งพาทั้งหมด

01:37.610 --> 01:41.390
และหลังจากนั้น NPM จะเริ่มต้นเสมอเพื่อเริ่มต้นเซิร์ฟเวอร์การพัฒนานั้น

01:41.390 --> 01:46.280
ตอนนี้ นี่คือโปรเจ็กต์โดยพื้นฐานแล้วเหมือนกับที่เราเคยทำมาเมื่อตอนท้ายของโมดูลที่แล้ว

01:46.280 --> 01:49.550
ไฟล์ tsconfig ที่มีการกำหนดค่าที่ค่อนข้างเข้มงวด

01:50.470 --> 01:54.740
แอป ts ที่นี่ และโฟลเดอร์นี้จะถูกสร้างขึ้นโดยอัตโนมัติ

01:54.740 --> 01:58.360
ยังไงก็ตาม ปล่อยให้เซิร์ฟเวอร์การพัฒนานี้ทำงานเหมือนที่คุณทำก่อนหน้านี้

01:58.360 --> 02:00.610
และตอนนี้เราสามารถคอมไพล์โค้ดของเราด้วยคำสั่ง

02:00.610 --> 02:03.300
TSC ได้ที่นี่

02:03.300 --> 02:10.980
หรือนั่นคือสิ่งที่ฉันจะทำที่นี่ TSC รีบ W เพื่อเข้าสู่โหมดเฝ้าดูและตรวจสอบให้แน่ใจว่าเราคอมไพล์ใหม่ทุกครั้งที่เราเปลี่ยนแปลงบางสิ่ง

02:10.980 --> 02:12.900
ตอนนี้เป็นการตั้งค่าโครงการของเรา

02:12.900 --> 02:15.030
และตอนนี้เราจะเจาะลึกคุณลักษณะ Javascript

02:15.030 --> 02:19.390
รุ่นต่อไปซึ่งรองรับ typescript และสิ่งที่คุณควรทราบ
