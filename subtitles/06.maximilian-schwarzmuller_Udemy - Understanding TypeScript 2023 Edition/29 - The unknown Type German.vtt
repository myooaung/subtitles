WEBVTT

00:02.340 --> 00:04.020
Kursleiter: Wir sind fast fertig mit den

00:04.020 --> 00:06.240
Grundlagen über TypeScript und die Kerntypen.

00:06.240 --> 00:10.130
Es gibt noch zwei weitere Arten, die man kennen sollte, weil

00:10.130 --> 00:13.170
sie von Zeit zu Zeit eine Rolle spielen werden.

00:13.170 --> 00:16.603
Der erste Typ ist der unbekannte Typ.

00:17.860 --> 00:20.350
Dazu werde ich diese Datei Ihre Funktionen nennen. ts und fügen Sie eine

00:20.350 --> 00:23.343
neue Anwendung hinzu. ts-Datei, und darin

00:24.290 --> 00:28.620
haben wir eine neue Variable, userInput, und

00:28.620 --> 00:32.143
diese ist vom Typ unknown.

00:32.143 --> 00:34.850
Sie ist nicht vom Typ any, was der Standard wäre, sondern

00:34.850 --> 00:36.690
von unknown, einem anderen Typ, der von

00:36.690 --> 00:38.500
TypeScript eingeführt wurde.

00:38.500 --> 00:40.950
Sie könnte unbekannt sein, weil wir noch nicht wissen, was

00:40.950 --> 00:42.950
der Benutzer letztendlich eingeben wird.

00:42.950 --> 00:45.593
Ob es eine Zahl oder eine Zeichenkette ist, wissen wir nicht.

00:46.770 --> 00:48.960
Das Interessante an dem unbekannten Typ ist,

00:48.960 --> 00:51.020
dass wir dort jeden beliebigen Wert speichern

00:51.020 --> 00:54.630
können, ohne dass es zu Fehlern kommt, also ist alles erlaubt.

00:54.630 --> 00:57.660
Wenn ich nun meine Datei hier kompiliere, sehe ich, dass

00:57.660 --> 01:00.290
ich keinen Kompilierungsfehler erhalte.

01:00.290 --> 01:01.910
Bis jetzt ist es also so, als ob

01:01.910 --> 01:03.820
wir hier keinen Typ zugewiesen hätten

01:03.820 --> 01:05.260
und daher den Typ any hätten

01:05.260 --> 01:08.610
oder wenn wir explizit any als Typ festgelegt hätten.

01:08.610 --> 01:11.810
Aber dennoch, unbekannt ist anders als sonst.

01:11.810 --> 01:15.430
Das hier funktioniert, aber wir werden Probleme bekommen, wenn

01:15.430 --> 01:19.660
ich eine andere Variable habe, sagen wir Benutzername, die eine Zeichenkette

01:19.660 --> 01:20.890
sein sollte.

01:20.890 --> 01:22.860
Und das ist hier uninitialisiert,

01:22.860 --> 01:27.200
aber hier möchte ich userName gleich userInput setzen.

01:27.200 --> 01:29.150
Jetzt sehen Sie, dass wir einen Fehler erhalten.

01:29.150 --> 01:33.010
Der Typ unknown ist nicht dem Typ string zuordenbar.

01:33.010 --> 01:34.590
So will userName eine Zeichenkette sein,

01:34.590 --> 01:37.990
und natürlich ist nicht garantiert, dass unknown eine Zeichenkette ist.

01:37.990 --> 01:41.620
Hier habe ich einen zugewiesen, aber das ist nur in dieser Zeile der Fall.

01:41.620 --> 01:44.460
userInput könnte technisch gesehen jeden beliebigen

01:44.460 --> 01:46.490
Wert enthalten, da er unbekannt ist.

01:46.490 --> 01:47.640
Das Interessante ist

01:47.640 --> 01:51.060
nun, dass dieser Fehler verschwindet, wenn ich unknown auf any

01:51.060 --> 01:53.900
umstelle, weil any der flexibelste Typ in TypeScript

01:53.900 --> 01:56.810
ist und im Grunde alle Typüberprüfungen deaktiviert

01:56.810 --> 02:00.950
und TypeScript einfach sagt: "Ich gebe auf, mach was du willst. Unknown ist etwas restriktiver als any.

02:00.950 --> 02:05.510
Bei unknown müssen wir zunächst den Typ prüfen, der gerade in

02:05.510 --> 02:08.820
userInput gespeichert ist, bevor wir ihn z.

02:08.820 --> 02:12.200
B. einer Variablen zuweisen können, die eine

02:12.200 --> 02:14.400
Zeichenkette haben möchte.

02:14.400 --> 02:16.180
Da hier also eine Zeichenkette gewünscht

02:16.180 --> 02:18.110
ist, könnten wir prüfen, ob der Typ von

02:18.110 --> 02:23.110
userInput gleich string ist, und TypeScript wird diese Prüfung erkennen und verstehen, dass

02:23.650 --> 02:26.020
das, was hier in userName gespeichert ist, weil

02:26.020 --> 02:29.790
es aus dieser if-Anweisung herauskommt, wo ich prüfe, ob userInput vom

02:29.790 --> 02:31.830
Typ string ist, userInput garantiert

02:31.830 --> 02:34.680
eine Zeichenkette ist und ich es daher sicher userName

02:34.680 --> 02:36.920
zuweisen kann.

02:36.920 --> 02:39.990
Ich brauche also eine zusätzliche Typüberprüfung

02:39.990 --> 02:42.670
mit unknown, um einen unbekannten Wert

02:42.670 --> 02:47.560
einem Wert mit festem Typ zuordnen zu können, und deshalb ist unknown

02:47.560 --> 02:50.530
die bessere Wahl als any, wenn ich nicht genau

02:50.530 --> 02:54.780
sagen kann, welchen Typ ich dort speichern will, es könnte eine

02:54.780 --> 02:56.930
Zahl sein, es könnte eine Zeichenkette

02:56.930 --> 02:59.450
sein, aber ich weiß, was ich letztendlich

02:59.450 --> 03:02.910
damit tun will.

03:02.910 --> 03:05.470
Fügen Sie einfach eine zusätzliche Prüfung hinzu, um sicherzustellen,

03:05.470 --> 03:07.440
dass das, was Sie tun wollen, auch möglich ist, so dass

03:07.440 --> 03:10.240
Sie, wenn Sie mit einer Zeichenkette arbeiten wollen, eine Zeichenkette

03:10.240 --> 03:12.160
haben, und schon sind Sie fertig.

03:12.160 --> 03:14.690
Und dann ist unbekannt besser als alles andere,

03:14.690 --> 03:18.720
weil es sicherstellt, dass man nicht alles machen darf, aber man hat

03:18.720 --> 03:20.930
zumindest eine Art Kontrolle.

03:20.930 --> 03:23.260
Natürlich, wenn Sie eine Chance haben, im Voraus zu wissen,

03:23.260 --> 03:25.990
dass userInput ist immer eine Zeichenfolge, oder immer eine Zeichenfolge

03:25.990 --> 03:28.150
oder eine Zahl, gut, dann sollten Sie String oder

03:28.150 --> 03:30.000
eine solche Union Typ anstelle von unbekannten

03:30.000 --> 03:31.680
verwenden.

03:31.680 --> 03:34.460
Unbekannt ist also ein Typ, den man nicht immer verwenden sollte,

03:34.460 --> 03:36.010
aber er ist aus den beschriebenen Gründen

03:36.010 --> 03:37.460
besser als jeder andere.
