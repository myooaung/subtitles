WEBVTT

00:02.270 --> 00:05.210
Instructor: Así que ahora vimos un decorador más útil.

00:05.210 --> 00:08.750
Quiero concluir esta introducción muy básica a los decoradores

00:08.750 --> 00:11.030
con otra cosa importante que debes saber,

00:11.030 --> 00:14.600
puedes añadir más de un decorador a una clase, o a cualquier otro

00:14.600 --> 00:17.760
lugar donde puedas usar un decorador.

00:17.760 --> 00:18.940
Así que vamos a añadir

00:18.940 --> 00:23.040
también el decorador del registrador aquí, por ejemplo, así.

00:23.040 --> 00:25.810
Si guardamos eso, ves que compila sin errores,

00:25.810 --> 00:29.030
y de hecho vemos el mensaje de registro aquí también.

00:29.030 --> 00:31.490
Esto sólo deja una pregunta importante,

00:31.490 --> 00:34.840
¿en qué orden se ejecutan estos decoradores?

00:34.840 --> 00:36.550
Pues bien, para averiguarlo, vamos

00:36.550 --> 00:38.880
a lanzar mensajes de registro en ambos.

00:38.880 --> 00:41.340
Tenemos un mensaje de registro en el Logger, obviamente,

00:41.340 --> 00:43.400
ahora vamos a la función del decorador.

00:43.400 --> 00:46.350
Así que a la función interna de WithTemplate,

00:46.350 --> 00:49.900
y decir Rendering Template, por ejemplo.

00:49.900 --> 00:50.733
Y ahora veamos

00:50.733 --> 00:53.830
en qué orden se ejecutan estas funciones y en qué orden

00:53.830 --> 00:56.820
se imprimen estas declaraciones de registro.

00:56.820 --> 00:59.570
Y vemos que la Plantilla de Renderización se ejecuta

00:59.570 --> 01:02.540
primero, y luego obtenemos la salida del Logger.

01:02.540 --> 01:04.070
Lo que esto nos dice, por supuesto,

01:04.070 --> 01:06.260
es que ejecutan de abajo hacia arriba.

01:06.260 --> 01:08.033
Primero el decorador de abajo,

01:08.033 --> 01:10.790
y después los decoradores de arriba.

01:10.790 --> 01:14.230
WithTemplate se ejecuta primero, luego se ejecuta Logger.

01:14.230 --> 01:15.270
E importante, estoy

01:15.270 --> 01:18.920
hablando de las funciones del decorador real.

01:18.920 --> 01:23.710
Las fábricas de decorados aquí funcionan antes.

01:23.710 --> 01:26.790
Si tenemos Logger Factory aquí, y tenemos el mismo

01:26.790 --> 01:31.080
registro en la Template Factory, así que ahí digo Template Factory

01:31.080 --> 01:33.950
en mi registro, verás que ahí, en realidad

01:33.950 --> 01:35.000
la Logger Factory

01:35.000 --> 01:37.490
se ejecuta primero, y luego tenemos la

01:37.490 --> 01:39.930
Template Factory.

01:39.930 --> 01:41.750
Y eso tiene sentido porque al final, aunque

01:41.750 --> 01:43.740
tengamos este símbolo @ aquí, aquí estoy ejecutando

01:43.740 --> 01:45.600
una función, y estamos haciendo lo mismo

01:45.600 --> 01:46.850
aquí.

01:46.850 --> 01:49.930
Y por supuesto, las reglas regulares de JavaScript se aplican aquí

01:49.930 --> 01:51.380
y la ejecución de esta función ocurre

01:51.380 --> 01:53.610
antes de la ejecución de esta función.

01:53.610 --> 01:56.590
Por eso vemos la Fábrica de Registros antes

01:56.590 --> 01:59.470
de ver la Fábrica de Plantillas.

01:59.470 --> 02:02.650
Por lo tanto, la creación de nuestras funciones decoradoras

02:02.650 --> 02:03.970
reales ocurre en el orden

02:03.970 --> 02:07.280
en que especificamos estas funciones de fábrica.

02:07.280 --> 02:10.780
Pero la ejecución de las funciones reales del decorador ocurre

02:10.780 --> 02:12.700
entonces de abajo hacia arriba.

02:12.700 --> 02:17.300
Lo que significa que el decorador más bajo se ejecuta primero, por lo

02:17.300 --> 02:19.000
que esta función del decorador,

02:19.000 --> 02:23.250
y después se ejecuta el decorador que está por encima.

02:23.250 --> 02:25.163
Es algo que hay que saber.

02:26.040 --> 02:29.620
Con esto, tenemos una base sólida de conocimiento sobre los decoradores,

02:29.620 --> 02:32.240
y también ves un decorador más avanzado que, con

02:32.240 --> 02:34.900
suerte, también te da una primera impresión de

02:34.900 --> 02:37.810
por qué los decoradores pueden ser útiles, especialmente

02:37.810 --> 02:41.970
si también piensas en frameworks como Angular.

02:41.970 --> 02:46.470
Ahora vamos a ver a qué otros lugares, además de las clases, podemos

02:46.470 --> 02:48.140
añadir decoradores y lo

02:48.140 --> 02:50.363
que podríamos hacer allí.
