WEBVTT

00:02.140 --> 00:03.970
-: Así que en nuestra aplicación. ts, tenemos

00:03.970 --> 00:08.100
que comprobar el envío de este formulario aquí.

00:08.100 --> 00:09.070
Para esto aquí, voy

00:09.070 --> 00:10.800
a crear una constante de forma y llegar

00:10.800 --> 00:12.170
a la forma con el selector

00:12.170 --> 00:14.310
de consulta de documentos, la consulta

00:14.310 --> 00:16.080
de la etiqueta de forma.

00:16.080 --> 00:17.840
Y puesto que sólo tenemos una etiqueta de formulario

00:17.840 --> 00:18.820
en todo el documento, por supuesto

00:18.820 --> 00:20.170
la recuperaremos.

00:21.150 --> 00:23.500
Así que esto nos da acceso al formulario.

00:23.500 --> 00:26.163
En ese formulario añadiré un receptor de eventos.

00:29.630 --> 00:31.873
Y escucharé el evento de presentación.

00:33.290 --> 00:35.330
Ahora esta forma, por supuesto, podría ser nula,

00:35.330 --> 00:36.163
como siempre, pero

00:36.163 --> 00:37.430
sabemos que no lo será, así que

00:37.430 --> 00:39.480
podemos añadir este viejo signo de exclamación

00:39.480 --> 00:41.683
después para decirle a TypeScript que esto no será

00:41.683 --> 00:42.850
nulo.

00:42.850 --> 00:45.080
Y luego aquí tenemos el oyente de

00:45.080 --> 00:46.490
eventos, y definirá una

00:46.490 --> 00:47.940
función que debe ser disparada

00:47.940 --> 00:49.160
y que es la función

00:49.160 --> 00:51.710
de controlador de dirección de búsqueda

00:51.710 --> 00:53.610
digamos.

00:53.610 --> 00:55.420
Y esta función debe activarse

00:55.420 --> 00:58.160
cada vez que se envíe este formulario.

00:58.160 --> 01:00.880
Ahora en esta función obtendremos el objeto

01:00.880 --> 01:04.900
de evento y en primer lugar llamaré a event prevent default aquí.

01:04.900 --> 01:07.240
Y también vamos a dar a TypeScript algunas pistas

01:07.240 --> 01:09.980
aquí y vamos a informarle de que esto es un evento para

01:09.980 --> 01:12.370
que sepa que este prevenir comando por defecto

01:12.370 --> 01:14.033
aquí existirá.

01:14.870 --> 01:17.440
Con esto evitamos el envío del formulario, nos aseguramos

01:17.440 --> 01:19.900
de que no se envíe ninguna petición, pero ahora

01:19.900 --> 01:21.980
quiero acceder a la dirección que el usuario

01:21.980 --> 01:23.630
introdujo.

01:23.630 --> 01:24.900
Ahora que no debería ser demasiado

01:24.900 --> 01:27.820
difícil, tenemos una entrada aquí y tiene una idea de la dirección

01:27.820 --> 01:30.360
por lo que al final queremos obtener el valor que se introdujo

01:30.360 --> 01:31.850
en la entrada.

01:31.850 --> 01:33.780
Y podemos hacer esto aquí simplemente

01:33.780 --> 01:36.010
definiendo otra constante, la entrada de

01:36.010 --> 01:37.610
la dirección, que obtenemos con

01:37.610 --> 01:40.500
el selector de consulta del documento, o en realidad obtener

01:40.500 --> 01:43.210
el elemento por el ID y luego el ID fue la dirección que

01:44.050 --> 01:47.860
fue la idea firmada a este elemento, y al igual que antes sabemos que esto

01:47.860 --> 01:50.630
nunca será nulo, por lo que podemos añadir este signo

01:50.630 --> 01:52.823
de exclamación aquí.

01:53.770 --> 01:58.730
Y con eso conseguimos nuestra dirección introducida aquí accediendo

01:58.730 --> 02:00.370
al valor de punto de entrada

02:00.370 --> 02:03.700
de la dirección ahora ¿por qué a TypeScript

02:05.960 --> 02:09.350
no le gusta el valor aquí?

02:09.350 --> 02:12.020
Porque no sabe que lo que traemos aquí

02:12.020 --> 02:14.500
es un elemento de entrada html.

02:14.500 --> 02:16.000
Así que vamos a decirle a TypeScript.

02:16.000 --> 02:18.930
Convirtamos esto en un elemento de entrada html

02:18.930 --> 02:20.820
con el typecasting aquí.

02:20.820 --> 02:23.650
Ahora TypeScript ya no se queja de ese acceso

02:23.650 --> 02:25.040
al valor aquí, y nos da

02:25.040 --> 02:26.923
la dirección introducida.

02:27.770 --> 02:29.710
Y ahora tenemos que enviar

02:30.570 --> 02:31.740
esto a la API de

02:32.970 --> 02:34.180
Google.

02:34.180 --> 02:37.850
Vamos a hacerlo con la ayuda de algún otro paquete de terceros en la próxima

02:37.850 --> 02:38.943
conferencia.
