WEBVTT

00:02.100 --> 00:04.390
Eğitmen: Elbette daha büyük React uygulamalarında

00:04.390 --> 00:08.640
useRef ve useState'ten daha fazlasıyla çalışırsınız.

00:08.640 --> 00:10.950
TypeScript'i burada nasıl kullandığınızı anlamak

00:10.950 --> 00:13.460
için, çağırdığınız işlevlerin, yani birlikte çalıştığınız

00:13.460 --> 00:15.180
diğer kancaların üzerinde gezinmek gerçekten

00:15.180 --> 00:17.090
her zaman yararlıdır.

00:17.090 --> 00:20.010
Örneğin, herhangi bir nedenle NewTodo bileşeninde

00:20.010 --> 00:22.660
useEffect aracına ihtiyaç duyarsanız, bu aracı

00:22.660 --> 00:26.330
çağırabilir ve daha sonra hangi türlerle çalıştığını anlamak

00:26.330 --> 00:29.010
için üzerine gelebilirsiniz.

00:29.010 --> 00:30.960
Örneğin, ilk bağımsız değişkenin bir

00:30.960 --> 00:33.720
EffectCallback olduğunu, bunun özel bir işlev olduğunu,

00:33.720 --> 00:37.100
yanlış ayarlarsanız TypeScript'in sizi uyaracağını, ikinci bağımsız

00:37.100 --> 00:38.610
değişkenin ya hiçbir şey ya da

00:38.610 --> 00:41.480
herhangi bir şeyin dizisi olduğunu, bunun gibi şeyler

00:41.480 --> 00:42.997
size her zaman yardımcı olacaktır.

00:42.997 --> 00:45.930
useEffect'in hiçbir şey döndürmediğini de öğreneceksiniz,

00:45.930 --> 00:49.200
örneğin ve useState'te, her zaman tam olarak iki öğeli bir dizi

00:49.200 --> 00:52.410
döndürdüğünüzden bahsetmiştim, burada da useState'in bir

00:52.410 --> 00:56.310
dizi döndürdüğünü görüyorsunuz, burada gördüğümüz şey bu, açma ve kapama

00:56.310 --> 00:59.140
parantezi, ilk öğenin genel türünüz olduğu, yani bir

00:59.140 --> 01:01.750
Todos listesi, çünkü bu sizin durum anlık görüntünüz,

01:01.750 --> 01:08.600
ikinci öğe ise bir React.

01:08.600 --> 01:08.600
Sonunda

01:08.600 --> 01:11.370
burada sevk işlevi, burada olan şey bu.

01:11.370 --> 01:12.690
Yani bu faydalı olabilir.

01:12.690 --> 01:15.490
Belki Redux ile de çalışıyorsunuzdur.

01:15.490 --> 01:19.660
Neyse ki, belgelerine dalarsanız, Redux'u TypeScript

01:19.660 --> 01:21.360
ile kullanma hakkında

01:21.360 --> 01:24.530
talimatlar da bulacaksınız.

01:24.530 --> 01:27.430
Burada, Tarifler altında TypeScript ile Kullanım'ı

01:27.430 --> 01:30.710
bulabilirsiniz ve orada, eylemlerinize, indirgeyicilerinize

01:30.710 --> 01:33.270
ve Redux ile durum yönetiminize nasıl tür ekleyebileceğinizi

01:33.270 --> 01:35.540
öğrenebilirsiniz.

01:35.540 --> 01:38.650
Gerçekten basittir, hiç karmaşık değildir

01:38.650 --> 01:41.520
ve oraya çok fazla tip güvenliği ekler.

01:41.520 --> 01:43.230
Belki React Router paketini

01:43.230 --> 01:47.110
de kullanıyorsunuzdur, bu paket burada.

01:47.110 --> 01:52.040
Orada, belirli TypeScript notasyonları bulamazsınız, elbette bunu projenize

01:52.040 --> 01:54.020
de yükleyebilirsiniz, npm install

01:54.020 --> 01:55.340
dash dash save react

01:55.340 --> 01:58.770
dash router dash dom, bu paketi React projenize yüklemek

01:58.770 --> 02:00.740
için tipik olarak kullanacağınız

02:00.740 --> 02:03.720
komuttur.

02:03.720 --> 02:07.000
Yani bu react-router-dom paketini ekleyecektir.

02:07.000 --> 02:10.250
Ancak bu paketin sayfasında özel bir tür talimatı

02:10.250 --> 02:12.430
yok, burada TypeScript'e özgü

02:12.430 --> 02:14.720
hiçbir şey bulamazsınız, en azından

02:14.720 --> 02:17.570
bunu kaydettiğim anda.

02:17.570 --> 02:19.163
Bununla birlikte, elbette bunu

02:19.163 --> 02:21.250
bir TypeScript projesinde de kullanabilir

02:21.250 --> 02:23.920
ve orada iyi bir tür desteği alabiliriz.

02:23.920 --> 02:25.800
Şimdi, yüklendiğinde, react-router-dom'dan

02:25.800 --> 02:29.360
içe aktarırsam, orada gerçekten harika bir tür desteğine sahip

02:29.360 --> 02:31.880
olmadığımı fark edeceksiniz.

02:31.880 --> 02:33.870
Örneğin, buradan bir şey içe aktarmaya

02:33.870 --> 02:36.870
çalışırsam, react-router-dom modülü için bir bildirim

02:36.870 --> 02:39.210
bulamadığına dair bir uyarı alıyorum, yani

02:39.210 --> 02:42.730
burada herhangi bir tür bilgisi bulamadı.

02:42.730 --> 02:45.420
Bunu düzeltmek için elbette daha önce yaptığımız

02:45.420 --> 02:48.450
bir şeyi yapabiliriz, npm install dash dash save dash

02:48.450 --> 02:52.530
dev, at types, slash react dash router dash dom, böylece buradaki at arama

02:52.530 --> 02:54.620
türlerini iptal ediyoruz ve yine iyiyiz,

02:54.620 --> 02:56.860
bu zaten kursun başlarında öğrendiğiniz

02:56.860 --> 02:59.097
bir püf noktasıdır, ancak elbette bunu

02:59.097 --> 03:02.010
unutmaya gerek yok, çünkü zaten pek çok şeyin kutudan

03:02.010 --> 03:03.920
çıktığı TypeScript ile çalıştığı

03:03.920 --> 03:06.790
bir projemiz var.

03:06.790 --> 03:08.140
Daha sonra TypeScript ile

03:08.140 --> 03:10.810
çalışmayan bir şey eklersek, bunun gibi, onu bu

03:10.810 --> 03:13.700
şekilde ekleyebiliriz ve artık Route'un farkındadır,

03:13.700 --> 03:15.380
bu paketteki diğer tüm özelliklerin

03:15.380 --> 03:17.270
de farkındadır.

03:17.270 --> 03:21.070
İşte bunun için de bu kadar kolay destek ekleyebilirsiniz.

03:21.070 --> 03:23.560
Genel olarak bu şekilde yaklaşmalısınız, resmi

03:23.560 --> 03:26.010
dokümanlara bir göz atın, orada TypeScript ile

03:26.010 --> 03:29.030
kullanım hakkında talimatlar görüp görmediğinizi kontrol

03:29.030 --> 03:31.590
edin, yoksa yükleyin ve yerleşik tür desteğine

03:31.590 --> 03:33.720
sahip olup olmadığına bakın, böylece en

03:33.720 --> 03:37.350
azından iyi bir otomatik tamamlama ve derleme desteği elde edersiniz

03:37.350 --> 03:39.090
ve bu da yoksa, burada yaptığımız

03:39.090 --> 03:42.080
gibi bir tür paketi yükleyin.

03:42.080 --> 03:43.980
Bu modülde anlatacaklarımız bu kadar

03:43.980 --> 03:46.410
ve TypeScript'i ve tüm harika özelliklerini

03:46.410 --> 03:49.920
bir React uygulamasında bu şekilde kullanabilirsiniz ve elbette

03:49.920 --> 03:52.450
bu derste öğrendiğiniz her şey bir React uygulaması

03:52.450 --> 03:54.370
için de geçerlidir.

03:54.370 --> 03:56.380
Bu derste öğrendiğiniz tüm TypeScript özelliklerini

03:56.380 --> 03:59.130
bir React projesinde kullanabilirsiniz.
