WEBVTT

00:02.160 --> 00:06.440
ผู้นำเสนอ: ตอนนี้เราได้เห็นตัวอย่างที่ดีอีกตัวอย่างหนึ่งเกี่ยวกับวิธีที่เราสามารถทำงานร่วมกับนักตกแต่งได้

00:06.440 --> 00:09.040
มีตัวอย่างสุดท้ายที่ฉันอยากจะเจาะลึกลงไป

00:09.040 --> 00:11.997
และนั่นคือมัณฑนากรสำหรับการตรวจสอบ

00:11.997 --> 00:17.733
ที่ด้านล่างของไฟล์ ฉันจะเพิ่มคลาสใหม่ที่นี่

00:18.780 --> 00:20.530
นั่นอาจเป็นหลักสูตร

00:20.530 --> 00:23.903
ตอนนี้หลักสูตรควรมีชื่อซึ่งเป็นสตริง

00:25.430 --> 00:27.483
และอาจเป็นราคาซึ่งเป็นตัวเลข

00:29.730 --> 00:32.640
แล้วที่นี่เรามีคอนสตรัคเตอร์ที่เราได้รับค่าทั้งสองที่นี่

00:32.640 --> 00:34.440
และฉันก็จงใจไม่ใช้ช็อตคัทที่นี่

00:35.550 --> 00:40.953
เพื่อที่ฉันจะได้เพิ่มพร็อพเพอร์ตี้มัณฑนากรได้อย่างง่ายดาย

00:42.690 --> 00:44.560
จากนั้น ผมตั้งชื่อเรื่องนี้เท่ากับ

00:44.560 --> 00:46.653
t และราคานี้เท่ากับ p

00:47.990 --> 00:50.530
ตอนนี้ แน่นอนว่าเมื่อเราต้องการสร้างตัวอย่างหลักสูตรนี้

00:50.530 --> 00:53.610
เราต้องส่งชื่อที่ถูกต้องและราคาที่ถูกต้อง

00:53.610 --> 00:59.630
แต่สถานการณ์ทั่วไปอย่างหนึ่งที่คุณอาจพบในบางแอปพลิเคชันคือการที่คุณดึงข้อมูล

00:59.630 --> 01:05.854
สมมติว่ามาจากทรัพยากรบนเว็บ และคุณได้รับข้อมูลโดยที่คุณเดาว่าคุณมีหลักสูตรสองสามหลักสูตร

01:05.854 --> 01:08.110
แต่คุณไม่ทราบแน่ชัด

01:08.110 --> 01:15.490
หรืออีกสถานการณ์หนึ่งที่เป็นไปได้ คุณให้ผู้ใช้ป้อนข้อมูล และคุณเพียงต้องการกำหนดข้อมูลนั้นและแลกเปลี่ยนหลักสูตรใหม่กับข้อมูลที่ผู้ใช้ป้อน

01:15.490 --> 01:24.210
และคุณถือว่าข้อมูลนั้นถูกต้อง แต่คุณไม่รับประกันว่าข้อมูลนั้นถูกต้อง ดังนั้นคุณจึงต้องการ ตรวจสอบการป้อนข้อมูล

01:24.210 --> 01:26.380
นั่นคือสถานการณ์ที่ฉันต้องการปลอมที่นี่

01:26.380 --> 01:29.940
สมมติว่าในไฟล์ html ดัชนีของเรา เราได้รูปแบบที่เรียบง่ายที่นี่

01:30.894 --> 01:32.840
และฉันจะไม่จัดรูปแบบ ดังนั้นตอนนี้มันจะสวยงามมาก

01:32.840 --> 01:36.074
แต่เรามีรูปแบบที่เรียบง่ายที่นี่พร้อมการป้อนข้อความประเภทและตัวยึดชื่อเรื่อง

01:36.074 --> 01:50.605
ขออภัย , หลักสูตร, ชื่อเรื่องและรหัสของสมมติว่าชื่อเรื่อง และด้านล่างเรามีตัวเลขที่ป้อนโดยประเภทคือข้อความทั้งหมด แต่เป็นราคาหลักสูตรและรหัสคือราคา

01:50.605 --> 01:55.030
จากนั้นเราก็มีปุ่มที่เราส่งสิ่งนี้

01:55.030 --> 02:00.030
ดังนั้นปุ่มจึงเป็นประเภท submit

02:00.040 --> 02:02.780
เป็นรูปแบบที่เรียบง่ายมาก และอย่างที่บอกว่ามันไม่สวยถ้าเราดูที่นี่

02:02.780 --> 02:06.070
แต่มันมีทุกอย่างที่เราต้องการ

02:06.070 --> 02:08.763
ตอนนี้ขอฟังแบบฟอร์มที่นี่

02:09.830 --> 02:14.780
ดังนั้นฉันจึงได้รับแบบฟอร์มหลักสูตรซึ่งฉันจะได้รับจากเอกสาร ตัวเลือกแบบสอบถาม

02:14.780 --> 02:18.840
แบบฟอร์ม และฉันเพิ่มเครื่องหมายอัศเจรีย์ เพราะฉันรู้ว่าฉันจะได้หนึ่ง

02:18.840 --> 02:21.910
ดังนั้นสิ่งนี้จะไม่เป็นโมฆะ จากนั้นในแบบฟอร์ม

02:21.910 --> 02:32.360
เราสามารถเพิ่มEventListener ผู้ฟังเหตุการณ์ที่ส่ง และ จากนั้นเราจะได้วัตถุเหตุการณ์ผ่านไปยังฟังก์ชันที่ฉันกำหนดให้โดยอัตโนมัติ

02:32.360 --> 02:35.450
ที่นั่นฉันต้องการเรียกเหตุการณ์ PreventDefault เพื่อไม่ให้เราส่งแบบฟอร์มและไม่ส่งคำขอ

02:35.450 --> 02:38.030
http

02:38.030 --> 02:42.910
จากนั้นเราต้องการดึงข้อมูลสำหรับชื่อเรื่องและราคา

02:42.910 --> 02:45.779
ดังนั้น สามารถดึงชื่อเรื่องได้โดยการเข้าถึงเอกสาร,

02:45.779 --> 02:49.700
querySelector หรือที่จริงแล้ว เนื่องจากเรากำหนด id,

02:49.700 --> 02:54.700
getElementById, ชื่อเรื่อง และเรารู้ว่านี่จะเป็น HTMLInputElement

02:55.560 --> 02:59.760
ดังนั้นเราจึงสามารถใช้ typecasting เพื่อให้ typescript

02:59.760 --> 03:01.700
ทราบเกี่ยวกับสิ่งนี้และราคา

03:01.700 --> 03:06.174
เป็นเอกสาร, getElementById, ราคา และเรายังสามารถแปลงสิ่งนี้เป็น

03:06.174 --> 03:09.672
InputElement

03:09.672 --> 03:11.320
และที่จริงฉันมีองค์ประกอบเหล่านี้

03:11.320 --> 03:14.520
ดังนั้นเราจะเปลี่ยนชื่อค่าคงที่เป็น titleEL และ priceEl

03:14.520 --> 03:17.779
และเพื่อให้ได้ชื่อที่เป็นรูปธรรม ตอนนี้เราสามารถไปที่ titleEl

03:17.779 --> 03:20.930
การเข้าถึงคุณสมบัติมูลค่า และเพื่อให้ได้ราคา เราสามารถทำเช่นเดียวกันสำหรับ

03:20.930 --> 03:30.060
priceElement และรับค่าตรงนั้นด้วย และฉันต้องการบวกเป็นตัวเลข ดังนั้นฉันจึงใส่เครื่องหมายบวกข้างหน้าเพื่อแปลงเป็นตัวเลข

03:30.060 --> 03:36.090
นั่นแหละ แต่ตอนนี้ฉันต้องการสร้างหลักสูตรใหม่ด้วยข้อมูลนั้น

03:36.090 --> 03:43.850
ที่นี่เรามีหลักสูตรที่สร้างขึ้นซึ่งฉันสามารถเรียกหลักสูตรใหม่และผ่านชื่อและราคา

03:43.850 --> 03:46.770
ตอนนี้ typescript ยอมรับสิ่งนี้ เนื่องจากชื่อจะเป็นสตริง

03:46.770 --> 03:48.640
และเนื่องจากฉันแปลงอินพุตนี้เป็นตัวเลข

03:48.640 --> 03:50.200
ราคาจะเป็นตัวเลข

03:50.200 --> 03:55.530
ดังนั้น ถ้าฉันคอนโซลบันทึก หลักสูตรที่สร้างขึ้นหลังจากนั้น เราสามารถตรวจสอบได้ว่าวิธีนี้ใช้ได้หรือไม่

03:55.530 --> 03:58.693
มาบันทึกไว้ โหลดใหม่ อาจล้างคอนโซลเพื่อให้เรามองเห็นผลลัพธ์ได้ชัดเจน

03:58.693 --> 04:02.400
แล้วจึงเพิ่มหลักสูตรใหม่ที่นี่

04:02.400 --> 04:08.010
Javascript คู่มือฉบับสมบูรณ์มีราคา $ 199 และดูเหมือนว่าจะใช้งานได้

04:08.010 --> 04:13.290
ตอนนี้ โชคไม่ดีที่วิธีนี้ใช้ได้เฉพาะในกรณีที่ฉันไม่ได้ป้อนอะไรเลย

04:13.290 --> 04:16.600
ถ้าตอนนี้ฉันคลิกบันทึก เราจะเห็นว่าหลักสูตรนี้ถูกสร้างขึ้น

04:16.600 --> 04:19.820
ตอนนี้ ในทางเทคนิคแล้ว หลักสูตรนี้เป็นหลักสูตรที่ถูกต้อง

04:19.820 --> 04:23.121
แต่แน่นอนว่า ไม่ถูกต้องสำหรับการสมัครของเรา

04:23.121 --> 04:28.620
เราอาจต้องการชื่อที่ไม่ว่างเปล่าและราคาที่มากกว่าศูนย์

04:28.620 --> 04:30.660
ดังนั้นเราต้องการเพิ่มการตรวจสอบ

04:30.660 --> 04:32.670
แน่นอน เราสามารถเพิ่มเครื่องหมาย

04:32.670 --> 04:41.100
if ตรงนี้และตรวจสอบว่าชื่อ, ส่วนตัด, ความยาวมีค่ามากกว่าศูนย์หรือไม่ ซึ่งหมายความว่าไม่ว่างเปล่าและเราตรวจสอบความถูกต้องของราคาด้วย

04:41.100 --> 04:43.870
แต่นั่นหมายความว่าเมื่อใดก็ตามที่เราสร้างหลักสูตรใหม่

04:43.870 --> 04:47.880
เราต้องเพิ่มตรรกะการตรวจสอบที่นี่ก่อนที่เราจะเพิ่ม

04:47.880 --> 04:53.940
จะดีไหมถ้าตรรกะการตรวจสอบจะรวมอยู่ในชั้นเรียนของหลักสูตรด้วยความช่วยเหลือของผู้ตกแต่ง

04:53.940 --> 04:56.770
และนั่นคือสิ่งที่ฉันต้องการจะทำที่นี่

04:56.770 --> 05:01.447
ตอนนี้ฉันจะให้เพียงแนวคิดพื้นฐานว่าเราจะนำสิ่งนี้ไปใช้ได้อย่างไร

05:01.447 --> 05:10.010
ในโมดูลถัดไป ฉันจะแสดงให้คุณเห็นตัวอย่างแพ็คเกจที่ทำสิ่งนี้ด้วยวิธีที่ซับซ้อนมากขึ้น และเราจะใช้ที่นั่นเพื่อเล่นกับมันสักหน่อย

05:10.010 --> 05:12.080
.

05:12.080 --> 05:16.300
อย่างไรก็ตาม ตอนนี้ฉันต้องการใช้สิ่งนี้กับมัณฑนากรของฉันเอง

05:16.300 --> 05:19.370
และฉันจะเพิ่มมัณฑนากรที่จำเป็นที่นี่ และเราจะเพิ่มฟังก์ชันมัณฑนากรอื่น

05:19.370 --> 05:24.433
ซึ่งฉันจะตั้งชื่อว่า PositiveNumber

05:26.710 --> 05:28.510
ฉันจึงได้มัณฑนากรสองคนมาที่นี่

05:28.510 --> 05:31.240
และตอนนี้ ความคิดของฉันคือ เราสามารถเพิ่มพวกมันที่นี่ในคุณสมบัติของเรา

05:31.240 --> 05:35.369
เช่น Required ข้างหน้าชื่อ และ positiveNumber ข้างหน้า

05:35.369 --> 05:44.020
price และ typescript ชนิดของ register this ที่ใดที่หนึ่ง จากนั้นเราก็ได้ฟังก์ชันที่สาม ซึ่งตรวจสอบความถูกต้องที่เราสามารถทำได้

05:44.020 --> 06:03.410
ผ่านวัตถุเพื่อให้วัตถุและ typescript ใด ๆ มีลักษณะที่โครงการ ค้นหาการตรวจสอบใด ๆ ที่เราลงทะเบียนในคลาสนี้สำหรับวัตถุนี้ก่อนหน้านี้ และใช้ตรรกะการตรวจสอบความถูกต้องของเรา

06:03.410 --> 06:05.480
นั่นคือความคิดที่ฉันมีที่นี่

06:05.480 --> 06:08.240
ดังนั้น นี่อาจเป็นส่วนหนึ่งของไลบรารีของบุคคลที่สามที่เราเปิดเผยให้คุณทราบ

06:08.240 --> 06:16.750
จากนั้นคุณเพียงแค่นำเข้าจำนวนบวกที่จำเป็นและตรวจสอบความถูกต้องเพื่อตั้งค่าตัวตรวจสอบความถูกต้องก่อน แล้วจึงเรียกการตรวจสอบในบางจุด

06:16.750 --> 06:18.634
ตัวอย่างเช่น ที่นี่ เมื่อเราสร้างหลักสูตร

06:18.634 --> 06:22.462
เราสามารถเรียกใช้การตรวจสอบความถูกต้องและผ่านในหลักสูตรที่สร้างขึ้น

06:22.462 --> 06:35.040
และถ้านี่ไม่เป็นความจริง สมมติว่าสิ่งนี้ควรคืนค่าจริงหรือเท็จ หากไม่เป็นจริง เราจะส่งข้อผิดพลาดหรือแสดง แจ้งเตือน ข้อมูลที่ป้อนไม่ถูกต้อง โปรดลองอีกครั้ง

06:35.040 --> 06:42.960
มิฉะนั้นเราจะดำเนินการต่อ

06:42.960 --> 06:43.870
นั่นคือความคิดของฉัน

06:43.870 --> 06:46.540
ที่เราสามารถเรียกว่าตรวจสอบได้ซึ่งจะส่งกลับจริงหรือเท็จ

06:46.540 --> 06:48.793
จริงถ้าถูกต้อง เท็จถ้าไม่ถูกต้อง

06:48.793 --> 06:51.670
และเราสามารถใช้ผลลัพธ์ได้

06:51.670 --> 06:53.730
ดังนั้นเราจึงได้รับสองสิ่งที่ต้องทำ

06:53.730 --> 06:56.290
เราต้องแน่ใจว่าเมื่อเราเพิ่มมัณฑนากรที่นี่

06:56.290 --> 06:59.350
สิ่งนี้จะถูกเก็บไว้ที่ไหนสักแห่ง

06:59.350 --> 07:02.950
โปรดทราบว่านี่อาจเป็นส่วนหนึ่งของไลบรารีบุคคลที่สามของเราเอง

07:02.950 --> 07:05.710
ดังนั้นในนั้นเราอาจมีที่เก็บข้อมูลบางประเภทที่เก็บสิ่งนั้นสำหรับคลาสนี้และคุณสมบัติชื่อนี้

07:05.710 --> 07:12.480
ตัวอย่างเช่น เราต้องการให้จำเป็นต้องใช้

07:12.480 --> 07:15.630
และในการตรวจสอบความถูกต้อง จากนั้นเราสามารถตรวจสอบได้ว่าในที่เก็บข้อมูลสำหรับวัตถุที่เราได้รับหรือไม่

07:15.630 --> 07:23.330
สำหรับคลาสของวัตถุขึ้นอยู่กับเรามีตัวตรวจสอบความถูกต้องที่ลงทะเบียนสำหรับชื่อเรื่อง สำหรับราคาและอื่นๆ

07:23.330 --> 07:25.260
จากนั้นเราก็เรียกใช้ตรรกะการตรวจสอบของเรา

07:25.260 --> 07:26.453
นั่นคือความคิดของฉันที่นี่
