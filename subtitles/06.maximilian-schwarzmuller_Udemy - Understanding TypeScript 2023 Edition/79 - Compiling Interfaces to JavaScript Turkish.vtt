WEBVTT

00:02.170 --> 00:03.290
Eğitmen: Şu anda arayüzler

00:03.290 --> 00:05.580
ve sınıflar hakkında çok fazla konuşma yapıldı.

00:05.580 --> 00:07.390
Şimdi kaputun altına bakalım

00:07.390 --> 00:11.650
ve JavaScript'in gerçekte ne ürettiğini veya arayüze alternatif

00:11.650 --> 00:15.290
olarak ne sunduğunu görelim.

00:15.290 --> 00:17.450
Sınıf kodu için, sonuçta derlediğimiz

00:17.450 --> 00:20.560
sürüme bağlı olduğunu öğrendik.

00:20.560 --> 00:24.280
Burada ts çakışmasında es6 için derleme yaparsanız, çıktımız

00:24.280 --> 00:27.160
class anahtar sözcüğünü kullanacaktır.

00:27.160 --> 00:29.330
Burada es5 için derlediğimizden, bunun

00:29.330 --> 00:31.880
yerine yapı veya fonksiyonları kullanarak bu

00:31.880 --> 00:33.420
geçici çözümü görüyoruz.

00:33.420 --> 00:36.670
Bununla birlikte, arayüzler için ne olur?

00:36.670 --> 00:38.720
Peki, uygulamaya bir göz atalım. js dosyası.

00:38.720 --> 00:41.780
Ve orada hiçbir şey görmüyorsun.

00:41.780 --> 00:46.360
Arayüzlerimiz için herhangi bir çeviri görmeyeceksiniz.

00:46.360 --> 00:49.410
AddFn, Named, Greetable.

00:49.410 --> 00:52.970
Bu tür şeyleri uygulamada hiçbir yerde bulamazsınız. js.

00:52.970 --> 00:55.440
Burada sadece fonksiyonumuzu bulursunuz,

00:55.440 --> 00:59.180
person nesnesi için kurucu fonksiyonumuzu bulursunuz,

00:59.180 --> 01:02.320
yani temel olarak person sınıfı için bu çeviri ve

01:02.320 --> 01:03.500
diğer kod.

01:03.500 --> 01:06.680
Hiçbir arayüzde referans bulamazsınız.

01:06.680 --> 01:08.240
Ve bunun iyi bir nedeni var.

01:08.240 --> 01:11.350
Arayüzler için çeviri yoktur.

01:11.350 --> 01:13.650
JavaScript bu özelliği bilmiyor.

01:13.650 --> 01:15.550
Bu, yalnızca geliştirme ve derleme

01:15.550 --> 01:18.830
sırasında kullanılabilen saf bir TypeScript özelliğidir.

01:18.830 --> 01:21.640
Böylece kodunuzu geliştirmek için kullanabilirsiniz.

01:21.640 --> 01:23.970
Bunun için hiçbir çıktı JavaScript dosyalarınıza

01:23.970 --> 01:26.010
girmeyecektir, bu nedenle daha iyi

01:26.010 --> 01:28.390
kod yazmanıza yardımcı olan saf bir geliştirme

01:28.390 --> 01:30.700
özelliğidir, net kuralları takip eden

01:30.700 --> 01:34.100
net bir şekilde yapılandırılmış kod.

01:34.100 --> 01:38.720
Çalışma zamanında bu arayüzlerden hiçbir iz kalmayacaktır.

01:38.720 --> 01:41.760
Kodunuzda arayüzlerle ilgili hiçbir şey göremezsiniz,

01:41.760 --> 01:44.710
sadece fonksiyonlar, sınıflar ve diğer tüm kodlar

01:44.710 --> 01:47.130
çıktı olarak derlenir.

01:47.130 --> 01:50.020
Arayüzler basitçe çöpe atılır, diyebilirsiniz.

01:50.020 --> 01:53.170
Derleme sırasında kodunuzu kontrol etmek için kullanılırlar ve daha sonra

01:53.170 --> 01:54.340
göz ardı edilirler.

01:54.340 --> 01:56.690
Onlar için çıktı olabilecek hiçbir şey yoktur.
