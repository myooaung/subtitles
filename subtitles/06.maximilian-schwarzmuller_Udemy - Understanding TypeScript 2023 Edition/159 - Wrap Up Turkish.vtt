WEBVTT

00:02.190 --> 00:05.030
Eğitmen: Farklı dosyalarımızı tek bir pakette

00:05.030 --> 00:08.070
bir araya getirmemizi sağlayan çok önemli bir araç

00:08.070 --> 00:09.690
olan webpack'i ekledik.

00:09.690 --> 00:12.090
Bu, yapılan HTTP isteklerinin miktarını azaltmamıza

00:12.090 --> 00:14.500
gerçekten yardımcı olur ve bu nedenle uygulamamızı

00:14.500 --> 00:16.500
hızlandırabilir.

00:16.500 --> 00:19.840
Kendinizi çok sayıda tekil dosya ile çalışırken bulursanız, ki

00:19.840 --> 00:22.270
genellikle büyük projelerde bunu yaparsınız,

00:22.270 --> 00:24.360
webpack gibi araçlar mutlaka kullanılmalıdır

00:24.360 --> 00:26.910
ve webpack size bu konuda yardımcı olan en önemli ve

00:26.910 --> 00:28.200
önde gelen araçtır, bu nedenle

00:28.200 --> 00:31.190
burada göstermek istediğim araç budur.

00:31.190 --> 00:33.730
Webpack'in son derece yapılandırılabilir olduğunu görüyorsunuz

00:33.730 --> 00:36.190
ve birçok kez belirttiğim gibi, webpack'in resmi belgeleri

00:36.190 --> 00:39.630
bu konuda her şeyi öğrenmek için gidilecek yerdir.

00:39.630 --> 00:42.120
Farklı yükleyiciler, ayarlayabileceğiniz farklı hata

00:42.120 --> 00:44.770
ayarları ve genel olarak nasıl çalıştığı hakkında.

00:44.770 --> 00:47.109
Bu nedenle, bir webpack ustası olmak istiyorsanız

00:47.109 --> 00:49.660
ve daha ayrıntılı bir kuruluma sahip olmak istiyorsanız

00:49.660 --> 00:52.720
kesinlikle bu belgeye dalın.

00:52.720 --> 00:55.610
Ancak buradaki temel kurulumumuz, TypeScript dosyalarını

00:55.610 --> 00:58.200
webpack ile derlememize ve ardından tüm çıktıları

00:58.200 --> 01:00.940
tek bir pakette bir araya getirmemize zaten izin

01:00.940 --> 01:03.820
veriyor. js dosyası.

01:03.820 --> 01:06.500
Ayrıca, hata ayıklamayı kolaylaştıran ve bize

01:06.500 --> 01:09.050
daha yararlı hata mesajları veren bir geliştirme

01:09.050 --> 01:11.510
yapılandırması da kurduk.

01:11.510 --> 01:13.250
Ve bize son derece optimize edilmiş

01:13.250 --> 01:15.570
bir kod veren bir üretim kurulumu elde ederiz,

01:15.570 --> 01:17.840
daha sonra mümkün olduğunca az kod göndermek

01:17.840 --> 01:21.160
için bir sunucuya dağıtabiliriz.

01:21.160 --> 01:22.210
İşte bu kadar.

01:22.210 --> 01:25.740
webpack gerçekten temel bir araçtır ve onu kullanabilmek

01:25.740 --> 01:26.573
ve gerçekten çalışan

01:26.573 --> 01:30.260
bir yapılandırmaya sahip olmak çok önemlidir.

01:30.260 --> 01:33.800
Bu nedenle, herhangi bir modern projede mutlaka kullanılması gerektiğini söyleyebilirim

01:33.800 --> 01:36.710
ve bu modülde, TypeScript projelerinizde bunu kullanmaya nasıl başlayabileceğinizi

01:36.710 --> 01:38.763
öğreneceksiniz.
