WEBVTT

00:02.370 --> 00:05.290
ผู้บรรยาย: ตอนนี้เราสามารถดึงข้อมูลที่ป้อนเข้าของผู้ใช้และการตรวจสอบความถูกต้องทั้งหมดด้วยความช่วยเหลือของ

00:05.290 --> 00:11.420
TypeScript ของเรา ตรรกะการตรวจสอบที่ขับเคลื่อนที่นี่

00:11.420 --> 00:18.420
มาดำเนินการต่อและทำให้แน่ใจว่าเราทำได้มากกว่าการป้อนข้อมูลของผู้ใช้ที่รวบรวมมามากกว่าเพียงแค่ส่งออกข้อมูลในคอนโซล

00:18.420 --> 00:21.330
เพราะในขณะนี้ แน่นอนว่าสิ่งที่เรากำลังทำอยู่

00:21.330 --> 00:26.030
ท้ายที่สุด ฉันแค่พิมพ์ข้อมูลการกระทำที่เรารวบรวมไว้เพื่อทำคอนโซล

00:26.030 --> 00:30.300
และนั่นไม่ใช่เป้าหมายสุดท้ายของเราในแอปพลิเคชันนี้

00:30.300 --> 00:34.290
เป้าหมายคือเราควรแสดงรายการโครงการที่นี่ตามเทมเพลตนี้

00:34.290 --> 00:41.550
โดยที่ทุกรายการโครงการจะอิงตามเทมเพลตนี้ที่นี่

00:41.550 --> 00:45.750
และเราส่งข้อมูลที่เรารวบรวมไว้ที่นี่

00:45.750 --> 00:48.520
นั่นจะเป็นสิ่งต่อไป ฉันอยากจะทำงานต่อไป

00:48.520 --> 00:57.350
นอกจากมีคำสั่งอินพุตโปรเจ็กต์ของเราที่นี่ ซึ่งมีหน้าที่ในการแสดงฟอรัมและรวบรวมอินพุตของผู้ใช้

00:57.350 --> 01:03.230
ฉันต้องการมีจำนวนคำสั่งที่รับผิดชอบในการแสดงรายการโปรเจ็กต์

01:03.230 --> 01:06.100
และเราจะแบ่งมันออกเป็นสองข้อ

01:06.100 --> 01:11.000
หนึ่งข้อสำหรับรายการและหนึ่งคลาสต่อรายการโครงการในรายการ

01:11.000 --> 01:18.500
จากนั้นเราต้องหาทางส่งต่อข้อมูลที่รวบรวมไว้ที่นี่โดยพื้นฐานแล้วไปยังรายการโครงการของเรา

01:18.500 --> 01:20.650
และเพิ่มรายการใหม่เข้าไป

01:20.650 --> 01:23.420
เรามาจัดการเรื่องนี้ทีละขั้นตอนกันเถอะ

01:23.420 --> 01:26.880
และเริ่มด้วยการเพิ่มคลาสรายการโปรเจ็กต์

01:26.880 --> 01:29.380
ตอนนี้อยู่ที่ตำแหน่งที่คุณเพิ่มเข้ามาแล้ว ก็ขึ้นอยู่กับคุณแล้ว

01:29.380 --> 01:36.430
ลำดับไม่สำคัญเพราะจาวาสคริปต์ในตอนท้ายจะแยกวิเคราะห์ไฟล์ทั้งหมดก่อนที่จะดำเนินการ

01:36.430 --> 01:38.860
จึงจะทราบโดยทั่วกัน

01:38.860 --> 01:41.990
ถึงกระนั้น ฉันจะเพิ่มไว้ที่นี่เหนือส่วนคำสั่งอินพุตโครงการ

01:41.990 --> 01:45.740
เพราะฉันจะพึ่งพาส่วนคำสั่งรายการโครงการ ซึ่งฉันกำลังจะสร้างภายในคลาสอินพุตโครงการ

01:45.740 --> 01:50.500
แต่ก็มีความสำคัญอีกครั้ง

01:50.500 --> 02:01.170
ดังนั้น ที่นี่ฉันจะมีส่วนย่อยของรายการโครงการ รายการโครงการ และแนวคิดของส่วนนี้จะเกี่ยวข้องกับสิ่งที่เราทำในการป้อนข้อมูลโครงการ

02:01.170 --> 02:06.930
ฉันต้องการติดต่อเทมเพลตของฉันที่นี่ แล้วแสดงผลในตำแหน่งใดตำแหน่งหนึ่งนอกแอปพลิเคชัน

02:06.930 --> 02:09.480
ดังนั้น สิ่งที่เราสามารถทำได้ที่นี่ก็คือ

02:09.480 --> 02:13.120
เราสามารถเพิ่มคอนสตรัคเตอร์ได้อีกครั้ง เราสามารถเพิ่มฟิลด์ที่เราต้องการ

02:13.120 --> 02:17.030
และจะต้องมีองค์ประกอบเทมเพลตและองค์ประกอบโฮสต์ในตอนท้าย ดังนั้น

02:17.030 --> 02:22.030
เราจึงสามารถเพิ่มทั้งสองที่นี่ในรายการโครงการของเรา

02:22.440 --> 02:25.190
เราจะต้องจัดองค์ประกอบด้วย ฉันว่าองค์ประกอบที่เป็นรูปธรรม

02:25.190 --> 02:29.640
ซึ่งกำลังได้รับการเรนเดอร์

02:29.640 --> 02:31.800
และประเภทจะแตกต่างกันไป

02:31.800 --> 02:34.580
องค์ประกอบโฮสต์จะยังคงเป็น div เพราะฉันต้องการแสดงรายการนั้นใน

02:34.580 --> 02:38.330
div นั้นที่นี่เช่นกัน

02:38.330 --> 02:40.970
แต่องค์ประกอบที่เป็นรูปธรรมที่เราทำให้

02:40.970 --> 02:43.960
แน่นอนว่าไม่ใช่องค์ประกอบแบบฟอร์ม แต่ถ้าเราดูเทมเพลตรายการของเราที่นี่

02:43.960 --> 02:48.520
เราจะเห็นว่ามีส่วนหนึ่งอยู่ภายในนั้น

02:48.520 --> 02:51.010
ดังนั้นเราจึงมีองค์ประกอบส่วน

02:51.010 --> 02:54.420
ตอนนี้ปรากฎว่าไม่มีองค์ประกอบและองค์ประกอบส่วนเหล่านั้น

02:54.420 --> 03:00.490
ดังนั้นเราจะมีองค์ประกอบ HTML ปกติเพราะทุกองค์ประกอบมีประเภทนี้ที่นี่เพื่อเสียภาษี

03:00.490 --> 03:03.060
มีประเภทพิเศษมากกว่านี้หากมี

03:03.060 --> 03:05.710
และเราสามารถใช้ประเภท HTML ได้

03:05.710 --> 03:10.710
แน่นอนว่าตอนนี้เราต้องเข้าถึงองค์ประกอบเหล่านี้

03:10.970 --> 03:24.730
ดังนั้นเราจึงสามารถคัดลอกโค้ดนี้จากตัวสร้างของอินพุตโครงการที่เพิ่มไปยังตัวสร้างของรายการโครงการและตอนนี้ปรับบางอย่าง

03:24.730 --> 03:29.420
ตัวอย่างเช่น แน่นอนว่าตอนนี้องค์ประกอบเทมเพลตของฉันไม่มีแนวคิดในการป้อนข้อมูลโครงการ

03:29.420 --> 03:32.150
ตอนนี้กลายเป็นรายการโครงการแทน

03:32.150 --> 03:36.660
ลองคัดลอกและใช้ที่นี่เพื่อเลือกองค์ประกอบ

03:36.660 --> 03:42.710
ฉันจะยังคงจ่ายมัน และฉันยังรู้ด้วยความมั่นใจว่าฉันได้รับมันโดยไม่เปลี่ยนแปลง

03:42.710 --> 03:45.520
องค์ประกอบโฮสต์ยังคงตายด้วยแอพ ID

03:45.520 --> 03:47.820
สิ่งนี้จึงไม่เปลี่ยนแปลง

03:47.820 --> 03:52.070
จากนั้นฉันนำเข้าเนื้อหาของฉัน แล้วก็ฉัน ร้านค้า

03:52.070 --> 03:53.530
องค์ประกอบแรก

03:53.530 --> 03:55.380
ปิดการนำเข้าเทมเพลต

03:55.380 --> 03:57.780
โดยพื้นฐานแล้ว องค์ประกอบแรกในเทมเพลต ซึ่งก็คือส่วน

03:57.780 --> 04:01.590
ฉันเก็บองค์ประกอบนั้นไว้ในคุณสมบัติองค์ประกอบที่นี่

04:01.590 --> 04:04.430
อย่างไรก็ตาม นี่ไม่ใช่องค์ประกอบรูปแบบ HTML

04:04.430 --> 04:07.210
มันเป็นเพียงองค์ประกอบ HTML ที่นี่

04:07.210 --> 04:11.710
ตอนนี้เรายังสามารถกำหนด ID ได้ที่นี่ ซึ่งจริงๆ แล้วควรเป็นไดนามิก

04:11.710 --> 04:16.970
ไม่ใช่ฮาร์ดโค้ด เนื่องจากเราจะมีรายการโปรเจกต์มากกว่าหนึ่งรายการ

04:16.970 --> 04:25.060
ฉันต้องการมีรายการเครื่องมือในแอปขั้นสุดท้าย หนึ่งรายการสำหรับการกระทำของโครงการและอีกรายการหนึ่งสำหรับการบังคับใช้โครงการ

04:25.060 --> 04:29.895
และพวกเขาเสนอ ฉันต้องการรับข้อมูลเพิ่มเติมบางอย่างไปยังตัวสร้าง

04:29.895 --> 04:35.703
ประเภทของโครงการ และฉันจะใช้สถิติทางลัด TypeScript

04:35.703 --> 04:39.250
คุณเรียนรู้เกี่ยวกับตำแหน่งที่คุณสามารถเพิ่มตัวเข้าถึงหน้าพารามิเตอร์

04:39.250 --> 04:44.170
ส่วนตัวหรือสาธารณะเพื่อสร้างคุณสมบัติที่มีชื่อเดียวกันโดยอัตโนมัติ

04:44.170 --> 04:51.730
และเก็บค่าที่ส่งผ่านอาร์กิวเมนต์นี้ในคุณสมบัติที่มีชื่อเท่ากัน

04:51.730 --> 04:55.040
ดังนั้นตอนนี้คลาสนี้จะมีชื่อคุณสมบัติให้พิมพ์ด้วย

04:55.040 --> 04:58.790
และตอนนี้คำถามคือ ประเภทของพารามิเตอร์ประเภทนี้คืออะไร?

04:58.790 --> 05:03.640
และนี่ควรเป็นประเภทตัวอักษรและประเภทสหภาพ

05:03.640 --> 05:07.270
ใช้งานได้หรือเสร็จสิ้นแล้ว

05:07.270 --> 05:11.050
เรายังมีโครงการที่ใช้งานอยู่หรือโครงการที่เสร็จสิ้นแล้ว

05:11.050 --> 05:16.080
นั่นเป็นข้อโต้แย้งที่ฉันคาดว่าจะได้รับเมื่อสร้างรายการโครงการ

05:16.080 --> 05:21.870
และด้วยพ่อเราต้องพิมพ์คุณสมบัติ D ID ก็ควรจะเป็นตามนี้

05:21.870 --> 05:25.090
มันควรจะเป็น และสำหรับพ่อ ฉันใช้เทมเพลตตัวอักษรที่นี่

05:25.090 --> 05:30.090
ควรเป็นประเภทโครงการ dash ดังนั้นโครงการ dash ที่ใช้งานอยู่หรือโครงการ

05:31.240 --> 05:33.640
dash ที่เสร็จสิ้นแล้ว

05:33.640 --> 05:35.070
นั่นคือความคิดของฉันที่นี่

05:35.070 --> 05:37.540
คุณสามารถใช้จุดประเภทนี้ได้เสมอ เพื่อให้

05:37.540 --> 05:41.890
TypeScript เข้าใจว่าเรากำลังใช้คุณสมบัตินี้และไม่ได้ใช้งาน

05:41.890 --> 05:46.200
ด้วยเหตุนี้ เราจึงเข้าถึงองค์ประกอบหลักทั้งหมดได้ และเรากำลังเพิ่ม

05:46.200 --> 05:50.790
ID ลงในส่วน ซึ่งเราได้มาจากเทมเพลตของเรา

05:50.790 --> 05:53.650
ตอนนี้ แน่นอน เราต้องการ a เราต้องการเรนเดอร์ใช่ไหม

05:53.650 --> 05:58.600
นั่นคือแนวคิดสำหรับทั้งหมดนี้อีกครั้งด้วยวิธีส่วนตัว

05:58.600 --> 06:00.540
แนบความยุติธรรม

06:00.540 --> 06:06.310
เรามีมันในการป้อนข้อมูลโครงการ และในนั้นตอนนี้เป็นคิวเป้าหมาย

06:06.310 --> 06:11.300
แนบสิ่งนี้กับ Dom เพื่อเรนเดอร์รายชื่อพ่อให้กับ

06:11.300 --> 06:12.750
Dom

06:12.750 --> 06:19.223
ดังนั้น แทนที่จะแนบ ฉันจะทำแบบเดียวกับที่ฉันแนบกับแบบฟอร์มโครงการ

06:20.070 --> 06:24.230
ดังนั้นเราสามารถคัดลอกบรรทัดนั้นที่นี่และแนบทัศนคติ

06:24.230 --> 06:28.420
ฉันมีองค์ประกอบโฮสต์และต้องการแทรกองค์ประกอบที่อยู่ติดกัน

06:28.420 --> 06:30.240
หลังจากเริ่มต้นและสิ่งนี้ควรเป็นองค์ประกอบ

06:30.240 --> 06:33.300
เราดึงข้อมูลจากเทมเพลตที่นี่

06:33.300 --> 06:36.990
อย่างไรก็ตาม จริง ๆ แล้วฉันไม่ต้องการทำอย่างนั้นหลังจากเริ่มต้น

06:36.990 --> 06:41.960
แต่แทนที่จะทำก่อนสิ้นสุด ซึ่งหมายความว่าก่อนปิด ให้ปิดองค์ประกอบโฮสต์

06:41.960 --> 06:51.763
จากนั้นเราสามารถเรียกแนบที่นี่ในคอนสตรัคเตอร์ เพื่อแนบองค์ประกอบที่เราสร้างขึ้นได้ ที่นี่เพื่อ Dom

06:53.880 --> 06:59.630
ขณะนี้มีความแตกต่างที่สำคัญอย่างหนึ่งเมื่อเทียบกับอินพุตของโครงการสำหรับรายการนี้

06:59.630 --> 07:03.220
ยังไม่เสร็จเพียงแค่เพิ่มรายการใน Dom

07:03.220 --> 07:05.270
ป้อนเสร็จแล้วใช่ไหม

07:05.270 --> 07:07.130
แบบฟอร์มที่นี่เสร็จสิ้นแล้ว

07:07.130 --> 07:08.720
เรามีปัจจัยการผลิตทั้งหมดที่นั่น

07:08.720 --> 07:12.420
สิ่งที่เราต้องทำคือตั้งค่าผู้ฟังเหตุการณ์

07:12.420 --> 07:16.673
ตอนนี้สำหรับรายการที่นี่ เราไม่ได้มีเธอว่าง

07:16.673 --> 07:21.130
เช่น H ถึง tech และฉันต้องการเพิ่มข้อความบางส่วนที่นั่น

07:21.130 --> 07:22.990
ดังนั้นฉันจะเพิ่มตัวเลข

07:22.990 --> 07:26.020
วิธีการใหม่สำหรับวิธีการส่วนตัวของคุณ

07:26.020 --> 07:29.120
การแสดงผลหรือเนื้อหาอาจเป็นชื่อที่เหมาะสม

07:29.120 --> 07:36.862
และแนวคิดของฉันคือเติมช่องว่างในเทมเพลตนั้นด้วยปีชีวิต

07:36.862 --> 07:37.780
สำหรับการที่.

07:37.780 --> 07:40.040
ไปที่วิธีการเรนเดอร์เนื้อหาที่ตายแล้ว

07:40.040 --> 07:41.580
และมีสองสิ่งที่ฉันอยากทำ

07:41.580 --> 07:47.200
สิ่งหนึ่งคือสถิติสำหรับรายการที่ไม่ได้เรียงลำดับซึ่งเป็นส่วนหนึ่งของรายการโครงการของฉันที่นี่

07:47.200 --> 07:48.640
ฉันต้องการเพิ่ม ID ให้กับมัน

07:48.640 --> 07:50.860
แน่นอนคุณไม่ต้องทำแบบนั้น แต่ฉันต้องการทำเพื่อที่ว่าถ้าเราจำเป็นต้องเลือกในภายหลัง

07:50.860 --> 07:54.390
เราก็สามารถทำได้ด้วยสิ่งเหล่านี้

07:54.390 --> 07:58.220
ดังนั้นฉันจะสร้าง ID รายการที่นี่ซึ่งถูกเก็บไว้ในค่าคงที่

07:58.220 --> 08:00.190
และนี่จะเป็นเทมเพลตตามตัวอักษร

08:00.190 --> 08:04.100
ดังนั้นมันจะเป็นสตริงที่เราสามารถใส่เนื้อหาไดนามิกได้

08:04.100 --> 08:09.100
และฉันต้องการอิงตามประเภทของรายการโครงการโดยรอบ ให้ปิดส่วนรอบๆ

08:09.370 --> 08:14.370
แล้วเพิ่มรายการโครงการหลังจากนั้น

08:15.220 --> 08:19.700
ตอนนี้เราสามารถเข้าถึงรายการสั่งซื้อได้ ซึ่งเราได้รับจากองค์ประกอบของเรา

08:19.700 --> 08:23.820
ซึ่งก็คือส่วนสถิติปี ส่วนด้านขวาคือส่วนที่ตายแล้ว

08:23.820 --> 08:27.360
ดังนั้น เพื่อให้ได้รายการที่ไม่เรียงลำดับภายในนั้น เราทำได้

08:27.360 --> 08:33.120
เช่น ใช้ตัวเลือกข้อความค้นหาและค้นหารายการแรก และในกรณีนี้เฉพาะรายการที่ไม่เรียงลำดับเท่านั้น

08:33.120 --> 08:35.720
เรารู้ว่าเราจะได้หนึ่งเพราะเรารู้ว่าจะมีหนึ่ง และจากนั้น

08:35.720 --> 08:38.280
เราสามารถเพิ่มรหัสที่นี่ ซึ่งควรเป็นรหัสรายการ

08:38.280 --> 08:40.280
นั่นเป็นสิ่งหนึ่งที่ฉันอยากทำ

08:40.280 --> 08:44.970
ฉันยังต้องการตั้งค่าเนื้อหาข้อความตามอายุที่จะแท็กที่นี่ และสำหรับสิ่งนี้

08:44.970 --> 08:50.200
เราสามารถติดต่อองค์ประกอบนี้ ซึ่งก็คือตัวเลือกข้อความค้นหา

08:50.200 --> 08:53.020
ค้นหาแท็ก HQ แห่งแรกและแห่งเดียว

08:53.020 --> 08:56.340
เรารู้ว่าเราจะพบหนึ่งตัว ดังนั้น เครื่องหมายอัศเจรีย์

08:56.340 --> 09:05.610
เพื่อตัดกรณี null ที่ตายแล้ว และตั้งค่าเนื้อหาข้อความเท่ากับสิ่งนี้เพื่อพิมพ์เป็นตัวพิมพ์ใหญ่

09:05.610 --> 09:08.130
จำประเภทที่เคยใช้งาน

09:08.130 --> 09:10.060
เราเสร็จสิ้นกับสองกรณีโอเปร่า

09:10.060 --> 09:15.060
เราแปลงสิ่งนี้เป็นโปรเจกต์ตัวพิมพ์ใหญ่ทั้งหมด Sten ก็เช่นกัน

09:16.200 --> 09:19.853
เพียงมุ่งไปข้างหน้าคือส่วน

09:21.970 --> 09:25.220
และตอนนี้เราก็เสร็จแล้ว

09:25.220 --> 09:27.580
เรายังไม่มีรายการในรายการนั้น

09:27.580 --> 09:30.230
เราจะดำเนินการเรื่องนี้ในภายหลัง แต่โดยทั่วไปแล้วเราจะทำเสร็จแล้ว

09:30.230 --> 09:35.120
เราสามารถเรียกสิ่งนี้ว่าเรนเดอร์เนื้อหาหรือหลังจากที่เราแนบมันเข้ากับ

09:35.120 --> 09:37.210
Dom เป็นต้น

09:37.210 --> 09:39.210
ตอนนี้มันคงจะดีถ้าได้เห็นการกระทำเหล่านั้น

09:39.210 --> 09:45.523
แน่นอน อีกครั้ง รายการที่ลงท้ายด้วยจะหายไป แต่คงจะดีหากได้เห็นบางอย่างเกิดขึ้นจริงที่นี่

09:46.690 --> 09:49.620
ไปที่ด้านล่างของไฟล์ที่เราสร้างอินสแตนซ์ของอินพุตโครงการ

09:49.620 --> 09:55.200
และที่นั่นเราไม่สามารถสร้างอินสแตนซ์รายการของเราได้ตลอดเวลา

09:55.200 --> 10:01.230
เรามีรายการโครงการที่ใช้งานอยู่ซึ่งเรายกตัวอย่าง แต่เรียกรายการโครงการใหม่

10:01.230 --> 10:06.040
และเราต้องผ่านอาร์กิวเมนต์ประเภทนั้น ซึ่งไม่ว่าจะใช้งานอยู่หรือเสร็จสิ้นที่นี่

10:06.040 --> 10:09.950
เนื่องจากฉันกำลังแสดงรายการที่ใช้งานอยู่ แน่นอนว่าฉันผ่านการไม่ใช้งาน

10:09.950 --> 10:15.290
และที่นี่เรามีรายการโครงการที่เสร็จสมบูรณ์ซึ่งแน่นอนว่าฉันผ่านไปแล้ว

10:15.290 --> 10:18.673
หากตอนนี้เราปลอดภัยที่จะรวบรวมโดยไม่มีข้อผิดพลาด

10:19.520 --> 10:27.770
และด้วยเหตุนี้สิ่งที่คุณควรเห็นหากคุณย้อนกลับไปคือส่วนที่ว่างเปล่าสองส่วนที่มีหัวเรื่องอยู่ที่นี่และพื้นที่ว่างที่จะเพิ่มรายการในภายหลัง

10:27.770 --> 10:33.390
รายการโครงการจะถูกเพิ่ม

10:33.390 --> 10:37.440
ตอนนี้เราไม่มีรายการโปรเจกต์หิมะ

10:37.440 --> 10:43.660
ในขั้นตอนต่อไป เราควรดำเนินการบางอย่างเพื่อให้แน่ใจว่าเมื่อเราคลิกเพิ่มโครงการ

10:43.660 --> 10:49.420
เราจะสร้างโครงการใหม่ในรหัส

10:49.420 --> 10:59.870
ดังนั้นโครงสร้างข้อมูลใหม่ที่แสดงถึงโครงการ และจากนั้นเราจะส่งข้อมูลนี้เกี่ยวกับโครงการใหม่นี้ไปยังการกระทำของโครงการ

10:59.870 --> 11:06.500
แสดงรายการในส่วนโครงการที่ใช้งานอยู่นี้ เนื่องจากโครงการใหม่ทุกโครงการควรเปิดใช้งานตามค่าเริ่มต้น

11:06.500 --> 11:09.390
นี่จะเป็นเป้าหมายต่อไปของเรา และอีกครั้ง จะมีวิธีต่างๆ

11:09.390 --> 11:12.080
มากมายในการดำเนินการตามนี้

11:12.080 --> 11:16.703
เราจะทำร่วมกับวิธีหนึ่งที่ฉันคิดขึ้นมาในการบรรยายครั้งหน้า
