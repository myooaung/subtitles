WEBVTT

00:02.310 --> 00:03.143
Instructor: Para esto,

00:03.143 --> 00:05.860
vuelvo a la configuración general del proyecto en la que trabajamos antes.

00:05.860 --> 00:10.940
Lo encontrará adjunto en el índice. archivo html y la aplicación.

00:10.940 --> 00:10.940
ts file.

00:10.940 --> 00:15.410
Y ahí, quiero meterme de lleno con los tipos de intersección.

00:15.410 --> 00:19.570
Los tipos de intersección nos permiten combinar otros tipos.

00:19.570 --> 00:23.280
Digamos que tenemos un tipo admin, que es un tipo de objeto, así

00:23.280 --> 00:25.430
que de nuevo, esto no es la creación

00:25.430 --> 00:28.170
de un objeto aquí, estamos definiendo un tipo,

00:28.170 --> 00:30.340
así que sólo estoy definiendo una definición

00:31.200 --> 00:35.560
de tipo aquí y admin debe tener un nombre, que es una cadena, digamos, y un

00:35.560 --> 00:38.230
administrador también debe tener privilegios,

00:39.910 --> 00:44.370
y que debe ser una matriz de cadenas, por ejemplo.

00:44.370 --> 00:47.010
Ahora, podríamos haber creado esto con

00:47.010 --> 00:48.950
una interfaz pero aquí lo estoy

00:49.810 --> 00:54.470
haciendo con un tipo y ahora tengo otro tipo, tipo general de empleado,

00:54.470 --> 00:59.130
digamos, y ahí también tengo un nombre, cadena.

00:59.130 --> 01:02.890
No tengo ningún privilegio, pero tengo una fecha de inicio.

01:02.890 --> 01:04.380
Que podría ser de tipo fecha.

01:04.380 --> 01:07.350
No hemos visto eso antes, pero la fecha es un tipo que es

01:07.350 --> 01:10.340
soportado por el script basado en el objeto de datos que

01:10.340 --> 01:12.163
se construye en JavaScript.

01:13.730 --> 01:17.580
Así que ahora queremos crear un nuevo tipo aquí, un

01:17.580 --> 01:21.120
empleado elevado, digamos, que debería ser la

01:21.120 --> 01:23.900
combinación de estos dos tipos.

01:23.900 --> 01:26.470
Por supuesto, podríamos crearlo manualmente

01:26.470 --> 01:28.770
simplemente definiendo un tipo de objeto,

01:28.770 --> 01:31.750
que tiene un nombre, que tiene una fecha de inicio, y que

01:31.750 --> 01:34.120
tiene privilegio, pero si ya tenemos estos

01:34.120 --> 01:37.540
dos tipos, entonces también podemos simplemente combinar esto

01:37.540 --> 01:42.000
diciendo admin y, por lo que usamos el símbolo de ampersand aquí, empleado.

01:42.000 --> 01:44.370
Y ahora el resultado es un nuevo tipo de

01:44.370 --> 01:46.390
objeto que debe tener ambos.

01:46.390 --> 01:50.470
Así que si tengo mi empleado, E uno, que debe ser de tipo empleado

01:50.470 --> 01:54.770
elevado, entonces puedo almacenar un objeto allí que debe

01:54.770 --> 01:57.440
tener una propiedad nombre, que debe

01:57.440 --> 02:00.113
tener una propiedad privilegio, crear

02:02.510 --> 02:08.800
servidor, y que también debe tener una fecha de inicio con nuevos datos.

02:08.800 --> 02:10.070
Crea un nuevo objeto de datos

02:10.070 --> 02:12.700
que simplemente es la marca de tiempo actual.

02:12.700 --> 02:15.610
Así que esta es una forma sencilla de combinar dos tipos.

02:15.610 --> 02:17.740
Ahora, diré que los tipos de intersección

02:17.740 --> 02:21.550
están estrechamente relacionados con la herencia

02:21.550 --> 02:24.320
de la interfaz porque, por supuesto,

02:24.320 --> 02:28.590
podríamos haber logrado lo mismo aquí usando una interfaz

02:29.620 --> 02:32.420
admin y luego una interfaz employee,

02:32.420 --> 02:34.700
y luego también podríamos usar

02:34.700 --> 02:38.853
un tipo de intersección en estas interfaces o creamos una

02:40.100 --> 02:44.040
tercera interfaz, elevated employee, que extiende

02:47.230 --> 02:50.653
employee y admin.

02:52.700 --> 02:54.520
Por lo tanto, si ahora comento esto,

02:54.520 --> 02:56.830
tendríamos exactamente el mismo efecto.

02:56.830 --> 02:58.550
Ahora, podría decirse que es un poco más de código.

02:58.550 --> 03:01.750
Una de las razones por las que tal vez preferiríamos usar tipos

03:01.750 --> 03:04.280
aquí en lugar de interfaces, pero la relación

03:04.280 --> 03:06.300
definitivamente es muy cercana y podrías

03:06.300 --> 03:09.770
usar absolutamente interfaces para este ejemplo.

03:09.770 --> 03:13.040
Sin embargo, vale la pena señalar que, aunque los tipos de intersección

03:13.040 --> 03:15.600
pueden ser especialmente útiles cuando se utilizan

03:15.600 --> 03:18.240
junto con los tipos de objeto, como lo estamos haciendo

03:18.240 --> 03:20.910
aquí, se pueden utilizar con cualquier tipo.

03:20.910 --> 03:22.683
Así que si tuvieras algún otro

03:23.655 --> 03:28.450
tipo, combinable, digamos, que es una cadena o un número, por lo que tenemos un

03:28.450 --> 03:29.940
tipo de unión aquí con los

03:29.940 --> 03:32.380
tipos de base de cadena o número y luego tuvimos

03:32.380 --> 03:34.770
un tipo numérico aquí, que es un número

03:34.770 --> 03:38.660
o un booleano, bueno, entonces, podríamos tener nuestro, digamos,

03:38.660 --> 03:43.660
tipo universal aquí mediante la intersección combinable con numérico y al final,

03:43.730 --> 03:49.800
los tipos podrían entonces ver el universal, por supuesto, es de tipo número porque esa es la única

03:49.800 --> 03:51.950
intersección que tenemos aquí, pero

03:51.950 --> 03:56.520
si tuvieras más intersecciones, entonces este sería el tipo que se asigna

03:56.520 --> 03:59.830
universal por lo que también podría ser un tipo de unión,

03:59.830 --> 04:04.940
que es la intersección de estos dos tipos de unión.

04:04.940 --> 04:07.800
Así que el operador de intersección puede ser utilizado

04:07.800 --> 04:11.790
con cualquier tipo y entonces simplemente construye la intersección de

04:11.790 --> 04:12.980
estos tipos.

04:12.980 --> 04:14.330
En el caso de un tipo de unión,

04:14.330 --> 04:17.300
se trata básicamente de los tipos que tienen en común.

04:17.300 --> 04:18.890
En el caso de los tipos de objetos,

04:18.890 --> 04:22.220
es simplemente la combinación de estas propiedades de los objetos,

04:22.220 --> 04:23.510
por así decirlo.

04:23.510 --> 04:25.960
Así que estos son tipos de intersección.

04:25.960 --> 04:27.360
A veces puede ser útil.

04:27.360 --> 04:29.050
No los usarás todo el tiempo, pero

04:29.050 --> 04:31.570
definitivamente puedes encontrarte con situaciones

04:31.570 --> 04:35.010
en las que puedes expresar algo de una manera más simple o más corta

04:35.010 --> 04:37.230
usando tipos de intersección.

04:37.230 --> 04:39.520
Ahora sólo para demostrar que todo esto funciona,

04:39.520 --> 04:42.050
permítanme abrir una nueva pestaña aquí en mi terminal

04:42.050 --> 04:45.390
y ejecutar TSC dash W para iniciar el modo de vigilancia para que no sólo

04:45.390 --> 04:47.770
tengo que ir en el servidor en vivo, pero en realidad

04:47.770 --> 04:49.850
también construir mi código.

04:49.850 --> 04:51.210
Ahora si recargo una vez

04:51.210 --> 04:53.200
aquí, vemos que esto se ejecuta sin errores

04:53.200 --> 04:55.443
y también compila sin errores.
