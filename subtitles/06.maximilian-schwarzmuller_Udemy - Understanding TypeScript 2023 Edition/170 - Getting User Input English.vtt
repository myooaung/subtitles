WEBVTT

1
00:00:02.140 --> 00:00:03.970
<v ->So in our app.ts file,</v>

2
00:00:03.970 --> 00:00:08.100
we need to check for this form submission here.

3
00:00:08.100 --> 00:00:09.070
For this here,

4
00:00:09.070 --> 00:00:10.800
I will create a form constant

5
00:00:10.800 --> 00:00:12.170
and reach out to the form

6
00:00:12.170 --> 00:00:14.310
with document query selector,

7
00:00:14.310 --> 00:00:16.080
querying for the form tag.

8
00:00:16.080 --> 00:00:17.840
And since we have only one form tag

9
00:00:17.840 --> 00:00:18.820
in the entire document,

10
00:00:18.820 --> 00:00:20.170
we'll of course fetch that.

11
00:00:21.150 --> 00:00:23.500
So this gives us access to the form.

12
00:00:23.500 --> 00:00:26.163
On that form I will add an event listener.

13
00:00:29.630 --> 00:00:31.873
And I'll listen for the submit event.

14
00:00:33.290 --> 00:00:35.330
Now this form of course could be null,

15
00:00:35.330 --> 00:00:36.163
as always,

16
00:00:36.163 --> 00:00:37.430
but we know it won't be,

17
00:00:37.430 --> 00:00:39.480
so we can add this good old exclamation mark

18
00:00:39.480 --> 00:00:41.683
there after to tell TypeScript

19
00:00:41.683 --> 00:00:42.850
that this will not be null.

20
00:00:42.850 --> 00:00:45.080
And then here we have the event listener,

21
00:00:45.080 --> 00:00:46.490
and it will define a function

22
00:00:46.490 --> 00:00:47.940
which should be triggered

23
00:00:47.940 --> 00:00:49.160
and that is the

24
00:00:49.160 --> 00:00:50.440
search

25
00:00:50.440 --> 00:00:51.710
address

26
00:00:51.710 --> 00:00:53.610
handler function let's say.

27
00:00:53.610 --> 00:00:55.420
And this function should be triggered

28
00:00:55.420 --> 00:00:58.160
whenever this form is submitted.

29
00:00:58.160 --> 00:01:00.880
Now in this function we'll get the event object

30
00:01:00.880 --> 00:01:04.900
and I will first of all call event prevent default here.

31
00:01:04.900 --> 00:01:07.240
And also let's give TypeScript some hints here

32
00:01:07.240 --> 00:01:09.980
and let's inform it that this is an event

33
00:01:09.980 --> 00:01:12.370
so that it knows that this prevent default

34
00:01:12.370 --> 00:01:14.033
command here will exist.

35
00:01:14.870 --> 00:01:17.440
With that we prevent the form submission,

36
00:01:17.440 --> 00:01:19.900
we ensure that no request gets sent,

37
00:01:19.900 --> 00:01:21.980
but now I want to get access to the address

38
00:01:21.980 --> 00:01:23.630
the user entered.

39
00:01:23.630 --> 00:01:24.900
Now that shouldn't be too hard,

40
00:01:24.900 --> 00:01:27.820
we have one input here and it has an idea of address

41
00:01:27.820 --> 00:01:30.360
so in the end we wanna get the value that was entered

42
00:01:30.360 --> 00:01:31.850
into the input.

43
00:01:31.850 --> 00:01:33.780
And we can do this here by simply

44
00:01:33.780 --> 00:01:36.010
defining another constant,

45
00:01:36.010 --> 00:01:37.610
address input,

46
00:01:37.610 --> 00:01:40.500
which we get with document query selector,

47
00:01:40.500 --> 00:01:43.210
or actually get element by ID

48
00:01:44.050 --> 00:01:46.710
and then the ID was address that was the idea

49
00:01:46.710 --> 00:01:47.860
signed to this element,

50
00:01:47.860 --> 00:01:50.630
and just as before we know this will never be null,

51
00:01:50.630 --> 00:01:52.823
so we can add this exclamation mark here.

52
00:01:53.770 --> 00:01:58.730
And with that we got our entered address here

53
00:01:58.730 --> 00:02:00.370
by

54
00:02:00.370 --> 00:02:02.490
accessing address input

55
00:02:02.490 --> 00:02:03.700
dot value

56
00:02:05.960 --> 00:02:09.350
now why does TypeScript not like value here?

57
00:02:09.350 --> 00:02:12.020
Because it doesn't know that what we fetch here

58
00:02:12.020 --> 00:02:14.500
is a html input element.

59
00:02:14.500 --> 00:02:16.000
So let's tell TypeScript.

60
00:02:16.000 --> 00:02:18.930
Let's convert this to an html input element

61
00:02:18.930 --> 00:02:20.820
with the typecasting here.

62
00:02:20.820 --> 00:02:23.650
Now TypeScript doesn't complain about that value

63
00:02:23.650 --> 00:02:25.040
access here anymore,

64
00:02:25.040 --> 00:02:26.923
and gives us the entered address.

65
00:02:27.770 --> 00:02:29.710
And now we need to send this

66
00:02:30.570 --> 00:02:31.740
to Google's

67
00:02:32.970 --> 00:02:34.180
API.

68
00:02:34.180 --> 00:02:37.850
Let's do that with help of some other third party package

69
00:02:37.850 --> 00:02:38.943
in the next lecture.

