WEBVTT

00:02.210 --> 00:04.400
Jadi, sekarang, itulah dasar-dasar tentang pewarisan.

00:04.400 --> 00:06.900
Kita juga bisa meng-override method

00:06.900 --> 00:09.810
atau properti dari kelas dasar kita.

00:09.810 --> 00:13.350
Jadi, katakanlah dalam akuntansi, saya ingin menambahkan metode

00:13.350 --> 00:15.020
addEmployee saya sendiri.

00:15.020 --> 00:16.200
Kita bisa melakukan itu.

00:16.200 --> 00:18.500
Kita bisa menambahkan metode kita sendiri di sini,

00:18.500 --> 00:20.120
dan mendapatkan namanya di sini.

00:20.120 --> 00:21.330
Katakanlah.

00:21.330 --> 00:22.550
Dan sekarang, di sini, saya ingin memiliki

00:22.550 --> 00:23.860
logika yang berbeda untuk menambahkan itu.

00:23.860 --> 00:27.610
Pemeriksaan if tambahan atau pemeriksaan if if jika nama=Max,

00:27.610 --> 00:29.410
nah, maka saya ingin kembali, dan

00:29.410 --> 00:31.930
tidak menambahkan Max sebagai karyawan, karena

00:31.930 --> 00:34.770
Max sama sekali tidak cocok untuk itu.

00:34.770 --> 00:36.360
Jika tidak, jika namanya bukan Max, saya

00:36.360 --> 00:38.050
ingin menambahkan karyawan tersebut.

00:38.050 --> 00:40.420
Namun, sekarang, kita menghadapi masalah lain.

00:40.420 --> 00:44.520
Jika saya mencoba menambahkan kedua karyawan ini, kita melihat

00:44.520 --> 00:47.500
karyawan bukanlah properti yang diketahui.

00:47.500 --> 00:50.510
Alasan untuk itu adalah bahwa karyawan bersifat pribadi.

00:50.510 --> 00:51.890
Sekarang, itu penting.

00:51.890 --> 00:54.860
Properti privat benar-benar hanya dapat diakses dari

00:54.860 --> 00:57.360
dalam kelas di mana properti tersebut didefinisikan,

00:57.360 --> 01:00.670
bukan kelas yang mewarisi dari kelas tersebut.

01:00.670 --> 01:03.530
Jadi, karyawan tersedia di dalam departemen, tetapi

01:03.530 --> 01:06.100
tidak di kelas-kelas berdasarkan departemen.

01:06.100 --> 01:09.040
Jadi, departemen akuntansi tidak memiliki akses

01:09.040 --> 01:11.320
langsung ke properti karyawan.

01:11.320 --> 01:15.930
Jika kita ingin memberikan akses itu, dan tetap memastikan bahwa

01:15.930 --> 01:19.840
itu bukan properti yang bisa diubah dari luar, kita bisa

01:19.840 --> 01:22.080
mengalihkannya ke protected.

01:22.080 --> 01:25.760
Protected sama seperti private, tetapi tidak seperti private, protected

01:25.760 --> 01:28.280
sekarang tidak hanya tersedia di kelas ini, tetapi

01:28.280 --> 01:32.040
juga di kelas mana pun yang memperluas kelas ini.

01:32.040 --> 01:35.130
Jadi, sekarang kita bisa mengakses karyawan dari

01:35.130 --> 01:37.740
dalam departemen akuntansi kita.

01:37.740 --> 01:41.377
Di sini, sekarang saya bisa menambahkan karyawan jika bukan Max.

01:41.377 --> 01:43.980
Oleh karena itu, sekarang, jika saya pergi

01:43.980 --> 01:45.680
ke sana, dan pada akunting saya,

01:45.680 --> 01:49.240
saya ingin menambahkan karyawan dengan nama Max.

01:49.240 --> 01:50.480
Ini seharusnya tidak berhasil.

01:50.480 --> 01:52.790
Jika saya mencoba menambahkan Manu, ini seharusnya berhasil.

01:52.790 --> 01:57.110
Jadi, jika sekarang kita simpan itu, dan kita juga mengeluarkan output cetak informasi

01:57.110 --> 01:59.196
karyawan di sini, dan kemudian menyimpannya,

01:59.196 --> 02:00.840
kita akan melihat bahwa, memang,

02:00.840 --> 02:03.120
kita memiliki satu karyawan di sana, yaitu Manu,

02:03.120 --> 02:06.620
karena logika metode akuntansi saya sendiri untuk AddEmployee, Max

02:06.620 --> 02:08.590
tidak ditambahkan.

02:08.590 --> 02:10.017
Jadi, kunci utama di sini adalah

02:10.017 --> 02:14.010
bahwa Anda A) dapat meng-override metode-metode kelas dasar Anda.

02:14.010 --> 02:16.690
Anda bisa menambahkan implementasi Anda sendiri,

02:16.690 --> 02:18.690
dan kemudian implementasi itu digunakan,

02:18.690 --> 02:21.023
bukan implementasi kelas dasar.

02:21.023 --> 02:25.130
Dan B) Anda juga harus mengontrol akses ke

02:25.130 --> 02:28.100
properti yang dilindungi.

02:28.100 --> 02:29.690
Karena jika Anda menggunakan

02:29.690 --> 02:32.120
private, Anda benar-benar terbatas pada kelas

02:32.120 --> 02:36.400
ini, sedangkan protected masih membuatnya tidak dapat diakses dari luar, tetapi

02:36.400 --> 02:39.270
membuatnya dapat diakses dari dalam kelas yang memperluas

02:39.270 --> 02:41.123
kelas dasar.
