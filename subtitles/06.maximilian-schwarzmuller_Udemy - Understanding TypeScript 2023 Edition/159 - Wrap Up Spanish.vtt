WEBVTT

00:02.190 --> 00:05.030
Instructor: Así que añadimos webpack, una herramienta

00:05.030 --> 00:08.070
muy importante que nos permite agrupar nuestros diferentes

00:08.070 --> 00:09.690
archivos en un solo paquete.

00:09.690 --> 00:12.090
Esto realmente nos ayuda a disminuir la cantidad

00:12.090 --> 00:14.500
de peticiones HTTP realizadas y, por lo tanto, puede

00:14.500 --> 00:16.500
acelerar nuestra aplicación.

00:16.500 --> 00:19.840
Si te encuentras trabajando con un montón de archivos individuales, lo

00:19.840 --> 00:22.270
que normalmente haces en proyectos más grandes, herramientas

00:22.270 --> 00:24.360
como webpack son de uso obligatorio y webpack

00:24.360 --> 00:26.910
es la herramienta más importante y destacada que te ayuda

00:26.910 --> 00:28.200
con eso así que, por lo tanto,

00:28.200 --> 00:31.190
es la herramienta que quería mostrar aquí.

00:31.190 --> 00:33.730
Ya ves que webpack es altamente configurable y, como

00:33.730 --> 00:36.190
he mencionado en múltiples ocasiones, los docs oficiales

00:36.190 --> 00:39.630
de webpack son el lugar al que acudir para aprenderlo todo.

00:39.630 --> 00:42.120
Sobre los diferentes cargadores, las diferentes configuraciones

00:42.120 --> 00:44.770
de error que se pueden establecer y cómo funciona, en general.

00:44.770 --> 00:47.109
Así que, definitivamente, sumérgete en esta documentación

00:47.109 --> 00:49.660
si quieres convertirte en un maestro de webpack y quieres

00:49.660 --> 00:52.720
tener una configuración más elaborada.

00:52.720 --> 00:55.610
Nuestra configuración básica aquí, sin embargo,

00:55.610 --> 00:58.200
ya nos permite compilar archivos TypeScript

00:58.200 --> 01:00.940
con webpack y luego agrupar toda la salida en un

01:00.940 --> 01:03.820
solo paquete. archivo js.

01:03.820 --> 01:06.500
Además, hemos establecido una configuración para

01:06.500 --> 01:09.050
el desarrollo que facilita la depuración y nos proporciona

01:09.050 --> 01:11.510
mensajes de error más útiles.

01:11.510 --> 01:13.250
Y obtenemos una configuración

01:13.250 --> 01:15.570
de producción que nos da un código altamente

01:15.570 --> 01:17.840
optimizado que luego podríamos desplegar

01:17.840 --> 01:21.160
en un servidor para enviarle el menor código posible.

01:21.160 --> 01:22.210
Y eso es todo.

01:22.210 --> 01:25.740
webpack es realmente una herramienta fundamental y poder usarla

01:25.740 --> 01:26.573
y tener una configuración

01:26.573 --> 01:30.260
que realmente funcione, es súper importante.

01:30.260 --> 01:33.800
Así que es un uso imprescindible en cualquier proyecto moderno, diría

01:33.800 --> 01:36.710
yo, y en este módulo, aprenderás cómo puedes empezar a usarlo

01:36.710 --> 01:38.763
en tus proyectos de TypeScript.
