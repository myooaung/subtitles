WEBVTT

00:02.120 --> 00:05.300
Hombre: Entonces, ¿cómo podemos imprimir las coordenadas en un mapa ahora?

00:05.300 --> 00:08.180
Para ello, volveremos a utilizar una API de Google.

00:08.180 --> 00:10.690
Si buscas Google JavaScript Maps, o Google

00:10.690 --> 00:13.810
JS Maps, encontrarás los documentos oficiales

00:13.810 --> 00:16.970
de la API de Google Maps en JavaScript.

00:16.970 --> 00:19.660
Y aquí aprenderás cómo puedes utilizar Google Maps en

00:19.660 --> 00:22.020
tu aplicación web para representar un mapa.

00:22.020 --> 00:24.720
Y es realmente sencillo y simple.

00:24.720 --> 00:27.280
En primer lugar tenemos que añadir este script

00:27.280 --> 00:31.720
aquí, que añadirá este SDK de Google Maps a nuestra aplicación.

00:31.720 --> 00:34.220
Así que simplemente coge ese script, y

00:34.220 --> 00:38.210
añádelo a tu archivo html de índice, por encima de tu script.

00:38.210 --> 00:40.670
Ahora importante, no instalamos este NPM,

00:40.670 --> 00:42.920
porque no está publicado en NPM, de ahí que

00:42.920 --> 00:45.900
usemos este enlace CDN, que saca el script, directamente

00:45.900 --> 00:48.140
de los servidores de Google.

00:48.140 --> 00:51.560
Y aquí tenemos que configurar nuestra API_KEY.

00:51.560 --> 00:54.390
Ahora que es, por supuesto, la API_KEY que ya

00:54.390 --> 00:57.430
tenemos aquí el archivo typescript, por lo que sólo

00:57.430 --> 01:02.170
puede copiar que en el índice html y reemplazar YOUR_API_KEY con él.

01:02.170 --> 01:06.120
Y también deshacerse de esta cosa "&amp;callback=initMap" al

01:06.120 --> 01:07.150
final, esto activaría

01:07.150 --> 01:10.240
una función tan pronto como este mapa se carga,

01:10.240 --> 01:13.430
o como este SDK se carga, y eso no es algo que quiero

01:13.430 --> 01:14.843
aquí.

01:15.840 --> 01:19.760
Así que, con eso, estamos cargando este SDK, y ahora

01:19.760 --> 01:22.820
podemos usarlo, y aquí es donde tendremos

01:22.820 --> 01:24.250
un problema.

01:24.250 --> 01:26.210
Quiero usarlo para renderizar un mapa,

01:26.210 --> 01:28.710
y renderizar un mapa es realmente sencillo.

01:28.710 --> 01:31.070
En los docs oficiales, vemos que al final tenemos que instanciar

01:31.070 --> 01:33.870
este google. mapas. Función constructora

01:33.870 --> 01:38.960
del mapa, pasarle un centro, que es esencialmente...

01:38.960 --> 01:41.720
Este par de coordenadas las obtenemos de la parte trasera,

01:41.720 --> 01:43.250
y añadimos un nivel de zoom.

01:43.250 --> 01:45.820
Así que podemos copiar esto, y luego aquí

01:45.820 --> 01:48.710
una vez que tenemos las coordenadas, ejecutar

01:48.710 --> 01:50.010
este código, y tal vez

01:50.010 --> 01:53.750
almacenar mapa aquí en una constante llamada "Mapa. Pero, por supuesto, aquí se produce un error.

01:53.750 --> 01:55.117
"No se puede encontrar el

01:55.117 --> 01:57.600
nombre de Google", y eso tiene sentido, esto

01:57.600 --> 02:01.320
no estará disponible globalmente, pero typescript no lo sabe.

02:01.320 --> 02:03.380
Estará disponible en todo el mundo, gracias

02:03.380 --> 02:06.300
a este SDK de JavaScript que estamos importando.

02:06.300 --> 02:08.343
Pero, por supuesto, Typecript no sabe esto.

02:09.390 --> 02:12.270
Aprenderás lo que puedes hacer allí,

02:12.270 --> 02:14.200
puedes por supuesto usar

02:14.200 --> 02:19.200
"declarar var google", y establecer esto como cualquiera.

02:19.990 --> 02:21.020
Con eso le estás diciendo a la tipografía:

02:21.020 --> 02:22.887
"Está bien, esto existirá, no te preocupes. Podemos hacerlo y el error desaparece.

02:22.887 --> 02:26.480
Ahora también podemos utilizar nuestras coordenadas

02:26.480 --> 02:29.060
aquí, en lugar de las codificadas, y si también

02:29.060 --> 02:31.370
queremos renderizar un marcador, eso

02:31.370 --> 02:33.480
también es posible.

02:33.480 --> 02:36.430
En los documentos oficiales, simplemente haga clic

02:36.430 --> 02:37.930
en, "Añadir un mapa con un marcador,"

02:37.930 --> 02:39.517
aprendemos, que la adición de

02:39.517 --> 02:41.520
un marcador es sencillo que acaba de

02:41.520 --> 02:44.600
utilizar el mapa creado, y crear un marcador con este comando,

02:44.600 --> 02:47.223
y el punto en este mapa.

02:49.040 --> 02:50.950
Así que vamos a copiar este fragmento

02:50.950 --> 02:52.980
de código aquí, y de vuelta en nuestro

02:52.980 --> 02:56.130
código, después de crear el mapa, creo mi marcador como este,

02:56.130 --> 02:59.160
y la posición aquí de nuevo son mis coordenadas.

02:59.160 --> 03:01.160
Así que ahora se renderizará

03:01.160 --> 03:04.173
un mapa, y se colocará un marcador en él.

03:05.040 --> 03:06.600
Lo único que queda es que, tenemos

03:06.600 --> 03:08.580
que asegurarnos de que este mapa se renderiza

03:08.580 --> 03:10.350
en el lugar correcto.

03:10.350 --> 03:12.350
Por defecto busca un elemento con una I. D. "mapa" y eso es lo que

03:12.350 --> 03:14.010
tenemos aquí.

03:14.010 --> 03:16.670
Pero si eliges una I diferente. D. aquí, asegúrese de

03:16.670 --> 03:18.720
ajustar esto en su código tipográfico.

03:18.720 --> 03:20.470
Con esto

03:20.470 --> 03:23.473
si guardamos esto, se compila sin errores,

03:24.610 --> 03:26.890
y ahora si introduzco una dirección

03:26.890 --> 03:30.640
aquí, debería renderizar esto.

03:30.640 --> 03:33.450
Así que esto está funcionando, y podemos ajustar el nivel

03:33.450 --> 03:35.320
de zoom aquí, para que se acerque un poco

03:35.320 --> 03:38.650
más, por ejemplo lo cambió a 16, y ahora si probamos esto podemos

03:38.650 --> 03:40.370
verlo un poco más claro.

03:40.370 --> 03:42.910
Pero está funcionando, y eso es lo que podemos decir.

03:42.910 --> 03:45.640
Podemos desplazarnos y utilizar este mapa.

03:45.640 --> 03:47.480
Todo esto es bonito, pero no es lo óptimo.

03:47.480 --> 03:50.420
Por supuesto que funciona, gracias a "declare

03:50.420 --> 03:53.340
var google", no tenemos ningún error.

03:53.340 --> 03:56.760
Pero tampoco estamos recibiendo ningún tipo de apoyo.

03:56.760 --> 03:58.810
Si introduzco un error,

03:58.810 --> 04:01.550
si por ejemplo me refiero a ". map" en lugar de ". maps" se compila sin problemas, y sólo se bloquea

04:01.550 --> 04:02.960
en producción a partir

04:02.960 --> 04:06.730
de entonces.

04:06.730 --> 04:08.860
Si intento renderizar un mapa.

04:08.860 --> 04:11.280
Ahora tengo un error aquí, capturado por nuestro manejador de errores.

04:11.280 --> 04:13.150
Así que, por supuesto, esto no es lo que queremos.

04:13.150 --> 04:16.493
Queremos soporte de tipo, queremos manejar errores de volcado como este, durante

04:17.470 --> 04:19.770
el desarrollo, y no en tiempo de ejecución.

04:19.770 --> 04:22.880
Entonces, ¿cómo podemos asegurarnos de que la tipografía conoce Google Maps?

04:22.880 --> 04:27.380
Tipos al rescate.

04:27.380 --> 04:31.080
Si buscas "types google maps", encontrarás varios paquetes,

04:31.080 --> 04:32.470
que añaden types para,

04:32.470 --> 04:34.160
bueno, Google Maps.

04:34.160 --> 04:37.350
Ahora no instalamos el paquete de Google Maps a través de NPM,

04:37.350 --> 04:38.800
pero todavía podemos instalar

04:38.800 --> 04:41.050
tipos para ese paquete a través de NPM.

04:41.050 --> 04:44.130
Y aquí voy a ir para este primer paquete, y simplemente

04:44.130 --> 04:46.160
instalar que en nuestro proyecto.

04:46.160 --> 04:48.790
Así que vamos a volver, servidor de desarrollo

04:48.790 --> 04:51.560
rápido, y ejecutar "npm install --save-dev "@types/googlemaps,"

04:51.560 --> 04:54.030
una palabra.

04:54.030 --> 04:56.400
Ese era el nombre de este paquete.

04:58.613 --> 05:01.560
Esto instalará los tipos globales para este paquete.

05:01.560 --> 05:03.303
Así que ahora si reinicio

05:04.200 --> 05:08.410
esto con NPM start, veamos si tenemos una mejor situación.

05:08.410 --> 05:11.500
Si quito esto de "declarar

05:11.500 --> 05:15.180
var" aquí, o lo comento.

05:15.180 --> 05:18.090
Sigue compilando, ahora se detecta esto de google maps

05:18.090 --> 05:19.940
aquí, y si intento acceder a ". mapa" aquí, me da un error,

05:19.940 --> 05:23.290
también me da autocompletar ahora y ve, "Sí,

05:23.290 --> 05:27.010
hay una cosa de mapas. También me dice que este constructor

05:27.010 --> 05:29.880
de mapas, necesita un "Div" o un "Elemento" donde debe

05:29.880 --> 05:32.410
renderizar el mapa como primer argumento, y

05:32.410 --> 05:35.100
luego algunas opciones para el mapa.

05:35.100 --> 05:38.660
Así que esto ya funciona aquí, como debería.

05:38.660 --> 05:40.270
Y esto es, por supuesto, un gran paso

05:40.270 --> 05:42.850
adelante, porque ahora tenemos nuestra aplicación en

05:42.850 --> 05:45.170
funcionamiento, y antes también funcionaba.

05:45.170 --> 05:47.600
Pero ahora también funciona con

05:47.600 --> 05:51.170
tipos, y con un soporte de tipos adecuado.

05:51.170 --> 05:53.490
Y este empleado es otra gran práctica, para la

05:53.490 --> 05:56.050
forma de construir aplicaciones con script de tipo

05:56.050 --> 05:58.500
y utilizar ciertos tipos de características, pero

05:58.500 --> 06:00.690
es especialmente una gran práctica para la

06:00.690 --> 06:03.700
forma de trabajar con las bibliotecas de terceros.

06:03.700 --> 06:06.250
Algunos, como "axios", traen sus propios tipos.

06:06.250 --> 06:08.470
Otros, ni siquiera se instalan

06:08.470 --> 06:11.540
con NPM, y sin embargo puedes añadir tipos

06:11.540 --> 06:15.421
con un paquete de tipos apropiado.

06:15.421 --> 06:18.810
Espero que este módulo haya sido útil, para entender esto, y para

06:18.810 --> 06:21.320
todos los futuros proyectos en los que pueda estar

06:21.320 --> 06:23.230
trabajando, donde muy probablemente

06:23.230 --> 06:25.620
también trabajará, con ciertas bibliotecas

06:25.620 --> 06:27.040
de terceros.
