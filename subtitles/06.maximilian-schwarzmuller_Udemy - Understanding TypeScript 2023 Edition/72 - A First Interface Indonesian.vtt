WEBVTT

00:02.802 --> 00:04.030
Instruktur: Sekarang setelah kita

00:04.030 --> 00:05.910
membahas kelas-kelas, mari kita lihat interface.

00:05.910 --> 00:09.510
Kita akan mengganti nama file app ts menjadi classes dan menambahkan

00:09.510 --> 00:11.230
file app ts baru, sementara selanjutnya

00:11.230 --> 00:13.730
akan dikompilasi menjadi app js.

00:13.730 --> 00:15.130
Dan di dalam file app ts ini, kita

00:15.130 --> 00:17.026
sekarang akan menyelami antarmuka.

00:17.026 --> 00:19.850
Apa yang dimaksud dengan antarmuka?

00:19.850 --> 00:21.640
Nah, dalam versi yang paling sederhana,

00:21.640 --> 00:25.470
sebuah antarmuka menggambarkan struktur sebuah objek.

00:25.470 --> 00:28.502
Kita bisa menggunakannya untuk mendeskripsikan bagaimana suatu objek seharusnya terlihat.

00:28.502 --> 00:29.856
Izinkan saya menunjukkan sebuah contoh.

00:29.856 --> 00:32.990
Kita membuat antarmuka dengan kata kunci antarmuka,

00:32.990 --> 00:37.510
yang hanya ada di typescript, bukan di JavaScript vanilla.

00:37.510 --> 00:39.600
Sekarang mari kita beri nama orang.

00:39.600 --> 00:41.140
Sekali lagi, sama seperti di kelas,

00:41.140 --> 00:43.150
saya mulai dengan huruf kapital, bukan

00:43.150 --> 00:46.820
suatu keharusan, tetapi sebuah rekomendasi dan konvensi.

00:46.820 --> 00:47.910
Sekarang di sana, kita bisa

00:47.910 --> 00:51.160
mendefinisikan bagaimana objek seseorang seharusnya terlihat.

00:51.160 --> 00:52.480
Sekarang, tidak seperti kelas,

00:52.480 --> 00:54.930
kita tidak akan menggunakan ini sebagai cetak biru.

00:54.930 --> 00:57.543
Hanya sebagai tipe khusus, kita bisa mengatakan.

00:58.490 --> 01:00.690
Di sini, Anda bisa mengatakan bahwa seseorang

01:00.690 --> 01:01.860
bisa memiliki nama, yang

01:01.860 --> 01:04.300
bertipe string, dan usia yang bertipe angka.

01:04.300 --> 01:05.140
Seperti yang bisa

01:05.140 --> 01:08.020
Anda lihat di sini, saya menambahkan properti atau definisi

01:08.020 --> 01:09.970
bidang, di mana saya memiliki nama properti

01:09.970 --> 01:13.440
dan jenis nilai yang akan disimpan di sana.

01:13.440 --> 01:16.560
Apa yang tidak kita miliki di sini adalah nilai-nilai konkret.

01:16.560 --> 01:17.730
Jadi kita tidak memiliki ini.

01:17.730 --> 01:20.510
Dan jika kita mencoba dan menetapkan nilai default di

01:20.510 --> 01:21.810
sini, kita akan mendapatkan

01:21.810 --> 01:25.290
error bahwa interface tidak dapat memiliki inisialisasi.

01:25.290 --> 01:27.540
Jadi, kita hanya bisa mendefinisikan strukturnya

01:27.540 --> 01:29.610
saja, bukan nilai-nilai konkretnya.

01:29.610 --> 01:32.930
Kita juga bisa menambahkan metode di sini, salam contohnya.

01:32.930 --> 01:34.470
Sekarang sama seperti properti,

01:34.470 --> 01:37.440
kita tidak menambahkan metode aktual di sini, tetapi

01:37.440 --> 01:39.610
hanya strukturnya saja, deskripsi yang

01:39.610 --> 01:41.020
bisa dikatakan.

01:41.020 --> 01:42.670
Bagaimana seharusnya terlihat.

01:42.670 --> 01:46.600
Dan untuk mendefinisikan metode yang harus dimiliki objek orang, kita

01:46.600 --> 01:49.470
menambahkan nama metode, lalu tanda kurung, lalu

01:49.470 --> 01:50.920
tipe pengembalian.

01:50.920 --> 01:52.210
Misalnya, putih, dan dalam tanda

01:52.210 --> 01:53.260
kurung Anda bisa memiliki

01:53.260 --> 01:55.310
argumen apa pun yang ingin Anda miliki.

01:55.310 --> 01:57.740
Seperti frasa yang seharusnya menjadi jenis.

01:57.740 --> 02:01.920
Sekali lagi, hanya nama argumen dan kemudian jenisnya.

02:01.920 --> 02:03.610
Kemudian tipe pengembalian metode.

02:03.610 --> 02:06.450
Tentu saja, Anda tidak perlu menambahkan parameter.

02:06.450 --> 02:09.080
Apa yang sekarang bisa kita lakukan dengan antarmuka orang ini?

02:09.080 --> 02:11.360
Apa ide di baliknya?

02:11.360 --> 02:12.610
Nah, sekarang kita bisa menggunakan

02:12.610 --> 02:14.810
ini untuk mengetikkan pemeriksaan objek, misalnya.

02:14.810 --> 02:18.020
Kita bisa memiliki variabel, pengguna satu, dan katakanlah

02:18.020 --> 02:19.130
untuk beberapa alasan

02:19.130 --> 02:22.620
kita tidak segera menginisialisasi.

02:22.620 --> 02:25.660
Kita hanya ingin menyimpan sebuah objek

02:25.660 --> 02:28.490
di sana, yang memiliki struktur ini.

02:28.490 --> 02:30.710
Kemudian kita bisa menetapkan tipe ke pengguna satu,

02:30.710 --> 02:31.830
yang bisa berupa orang.

02:31.830 --> 02:34.604
Kita bisa menggunakan antarmuka kita sebagai sebuah tipe.

02:34.604 --> 02:38.410
Dan sekarang ketika saya menetapkan nilai ke pengguna satu, itu harus

02:38.410 --> 02:39.730
berupa objek karena antarmuka

02:39.730 --> 02:42.780
digunakan untuk mendefinisikan objek.

02:42.780 --> 02:45.560
Dan itu harus berupa objek dengan properti nama,

02:45.560 --> 02:47.190
yang harus menyimpan string,

02:47.190 --> 02:49.850
properti usia, yang harus menyimpan angka,

02:49.850 --> 02:53.102
dan metode greet yang harus mengambil argumen frase

02:53.102 --> 02:56.920
dan kemudian juga tidak mengembalikan apa pun.

02:56.920 --> 02:57.830
Di sini, di objek ini,

02:57.830 --> 02:59.360
kita bisa menambahkan nama.

02:59.360 --> 03:00.730
Max, misalnya.

03:00.730 --> 03:03.010
Sekarang di sini kita menambahkan nilai konkret

03:03.010 --> 03:06.310
dan itu harus dari jenis yang didefinisikan di atas sana.

03:06.310 --> 03:08.160
Sekarang dipisahkan dengan koma, dan

03:08.160 --> 03:11.110
itu adalah perbedaan dari definisi antarmuka kita.

03:11.110 --> 03:16.110
Di sana kita memisahkan kunci dan properti kita dengan titik koma.

03:16.470 --> 03:18.430
Tetapi di bawah sana, ketika kita membuat objek

03:18.430 --> 03:21.390
kita, seperti halnya dalam JavaScript vanila, kita menggunakan koma.

03:21.390 --> 03:25.570
Kemudian usia, dan tentu saja, juga metode salam.

03:25.570 --> 03:27.550
Sekarang metode greet, seperti yang

03:27.550 --> 03:32.020
Anda pelajari, harus menjadi metode yang mengambil satu parameter, phrase, yang

03:32.020 --> 03:33.790
harus berupa string, dan di mana

03:33.790 --> 03:36.134
saya kemudian ingin konsol log phrase ditambah

03:36.134 --> 03:41.134
beberapa spasi putih ditambah ini. nama.

03:41.210 --> 03:43.930
Ini bisa menjadi salah satu implementasi dari metode greet.

03:43.930 --> 03:45.670
Sekarang apa yang ada di sana tidak masalah.

03:45.670 --> 03:48.210
Yang penting kita hanya memiliki satu parameter

03:48.210 --> 03:49.270
ini, yaitu string, dan

03:49.270 --> 03:51.290
kita tidak mengembalikan apa-apa.

03:51.290 --> 03:54.090
Sekarang ini akan menjadi objek pengguna

03:54.090 --> 03:58.150
yang valid karena memenuhi definisi antarmuka kita.

03:58.150 --> 03:59.040
Oleh karena itu, tentu

03:59.040 --> 04:00.940
saja, kita sekarang bisa misalnya memanggil

04:00.940 --> 04:04.020
salam dan mengatakan hi there there, I am, dan setelah itu kita

04:04.020 --> 04:06.220
harus mencetak nama.

04:06.220 --> 04:08.300
Jika sekarang simpan itu dan kemudian muat

04:08.300 --> 04:10.330
ulang, kita lihat hai di sana saya Max.

04:10.330 --> 04:12.840
Dan itu berasal dari metode sapaan kami.

04:12.840 --> 04:14.090
Ini adalah antarmuka.

04:14.090 --> 04:18.280
Hal ini memungkinkan kita untuk mendefinisikan struktur suatu objek.

04:18.280 --> 04:21.140
Kita bisa menggunakannya sebagai type to type

04:21.140 --> 04:24.453
check untuk objek yang harus memiliki struktur ini.
