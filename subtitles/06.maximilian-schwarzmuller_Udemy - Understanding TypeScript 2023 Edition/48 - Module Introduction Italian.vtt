WEBVTT

00:02.260 --> 00:04.220
Ora che abbiamo una buona comprensione

00:04.220 --> 00:08.410
delle caratteristiche di base di typescript e di ciò che typescript aggiunge.

00:08.410 --> 00:10.070
E capiamo anche come funziona

00:10.070 --> 00:12.320
il compilatore di dattiloscritti.

00:12.320 --> 00:13.760
Vediamo cos'altro ha da offrire

00:13.760 --> 00:15.020
typescript, in particolare

00:15.020 --> 00:18.700
per quanto riguarda la moderna sintassi di Javascript.

00:18.700 --> 00:22.130
Ora, questo è un termine difficile e piuttosto vago, ma alla fine

00:22.130 --> 00:23.360
ciò che intendo è che si

00:23.360 --> 00:26.380
tratta di funzionalità Javascript che sono in circolazione

00:26.380 --> 00:28.410
da alcuni anni e che sono ben supportate

00:28.410 --> 00:30.790
nei browser moderni, ma che non necessariamente

00:30.790 --> 00:33.290
funzionano in tutti, soprattutto nei browser

00:33.290 --> 00:34.970
più vecchi e in particolare in

00:34.970 --> 00:37.570
Internet Explorer.

00:37.570 --> 00:40.210
Mi riferisco a cose come Let, Cons, le funzioni

00:40.210 --> 00:43.240
freccia, la sintassi di destrutturazione, l'operatore

00:43.240 --> 00:45.350
di diffusione e così via.

00:45.350 --> 00:48.220
Quindi, se si tratta di qualcosa che si conosce assolutamente,

00:48.220 --> 00:51.950
si può saltare questo modulo perché rinfresca le conoscenze su

00:51.950 --> 00:54.230
questi argomenti, ma spiega anche cosa

00:54.230 --> 00:56.240
fa il dattiloscritto con queste cose,

00:56.240 --> 00:59.000
con questa sintassi.

00:59.000 --> 01:01.450
Tuttavia, la storia breve è che il dattiloscritto lo

01:01.450 --> 01:02.980
compone in modo che funzioni.

01:02.980 --> 01:04.510
Ciononostante, daremo un'occhiata

01:04.510 --> 01:05.940
a questo aspetto, ma potete saltare

01:05.940 --> 01:08.290
questo modulo se si tratta di cose che conoscete già.

01:08.290 --> 01:10.130
Puoi dare un'occhiata al programma e vedere

01:10.130 --> 01:12.400
se in questo modulo c'è qualche lezione che potrebbe

01:12.400 --> 01:14.260
essere ancora interessante per te, altrimenti

01:14.260 --> 01:16.450
ci vediamo dopo questo modulo.

01:16.450 --> 01:18.140
Se non siete sicuri di queste caratteristiche,

01:18.140 --> 01:20.500
se conoscete Javascript, Var e Zon, ma non sapete

01:20.500 --> 01:22.610
cosa significhi veramente la parola chiave

01:22.610 --> 01:24.810
Let o Cons, allora dovreste seguirmi e immergervi

01:24.810 --> 01:27.820
in questo modulo.

01:27.820 --> 01:29.860
Per questo ho impostato un progetto nuovo di zecca,

01:29.860 --> 01:31.450
che troverete in allegato.

01:31.450 --> 01:34.780
In questi progetti è sempre necessario eseguire prima l'installazione

01:34.780 --> 01:35.613
di NPM.

01:35.613 --> 01:37.610
Non dimenticate di installare tutte le dipendenze

01:37.610 --> 01:39.530
e poi di avviare sempre NPM start per avviare

01:39.530 --> 01:41.390
il server di sviluppo.

01:41.390 --> 01:44.480
Si tratta di un progetto sostanzialmente simile a quello che abbiamo presentato

01:44.480 --> 01:46.280
alla fine dello scorso modulo.

01:46.280 --> 01:49.550
Il file tsconfig con una configurazione piuttosto rigida

01:50.470 --> 01:53.210
Un'applicazione. ts e questa cartella verrà

01:53.210 --> 01:54.740
generata automaticamente.

01:54.740 --> 01:57.100
A proposito, mantenete il server di sviluppo

01:57.100 --> 01:58.360
in funzione, come avete

01:58.360 --> 02:00.610
fatto finora, e ora possiamo sempre compilare

02:00.610 --> 02:03.300
il nostro codice con il comando TSC.

02:03.300 --> 02:06.670
Oppure, ed è quello che farò qui, TSC dash W per entrare in modalità

02:06.670 --> 02:09.160
di controllo e assicurarsi di ricompilare ogni

02:09.160 --> 02:10.980
volta che si cambia qualcosa.

02:10.980 --> 02:12.900
Ecco la configurazione del nostro progetto e ora

02:12.900 --> 02:15.030
ci addentreremo in alcune caratteristiche di Javascript

02:15.030 --> 02:17.790
di nuova generazione, quali tipi di codice supporta e di cosa dovreste

02:17.790 --> 02:19.390
essere consapevoli.
