WEBVTT

00:02.100 --> 00:04.390
Instruktur: Sekarang tentu saja, dalam aplikasi

00:04.390 --> 00:08.640
React yang lebih besar, Anda bekerja dengan lebih dari sekedar useRef dan useState.

00:08.640 --> 00:10.950
Untuk memahami bagaimana Anda menggunakan TypeScript

00:10.950 --> 00:13.460
di sana, akan sangat membantu jika Anda hanya mengarahkan kursor

00:13.460 --> 00:15.180
ke fungsi-fungsi yang Anda panggil, sehingga

00:15.180 --> 00:17.090
hook lain yang Anda gunakan.

00:17.090 --> 00:20.010
Misalnya, jika Anda memerlukan tool useEffect di sini,

00:20.010 --> 00:22.660
di komponen NewTodo, untuk alasan apa pun, maka, Anda

00:22.660 --> 00:26.330
dapat memanggilnya dan cukup mengarahkan kursor ke atasnya setelah itu,

00:26.330 --> 00:29.010
untuk memahami dengan tipe mana ia bekerja.

00:29.010 --> 00:30.960
Misalnya, bahwa argumen pertama adalah

00:30.960 --> 00:33.720
EffectCallback, yang merupakan fungsi khusus, di mana TypeScript

00:33.720 --> 00:37.100
akan memperingatkan Anda jika Anda salah mengaturnya, bahwa argumen

00:37.100 --> 00:38.610
kedua adalah tidak ada atau array

00:38.610 --> 00:41.480
dari apa pun, hal-hal seperti itu, ini akan selalu membantu

00:41.480 --> 00:42.997
Anda, Anda juga akan belajar bahwa

00:42.997 --> 00:45.930
useEffect tidak mengembalikan apa pun, misalnya, dan pada useState,

00:45.930 --> 00:49.200
di mana saya menyebutkan bahwa Anda selalu mendapatkan kembali array

00:49.200 --> 00:52.410
dengan tepat dua elemen, well, Anda juga melihat bahwa di sini, useState

00:52.410 --> 00:56.310
mengembalikan array, itulah yang kita lihat di sini, kurung pembuka dan penutup,

00:56.310 --> 00:59.140
di mana elemen pertama adalah tipe generik Anda, jadi daftar

00:59.140 --> 01:01.750
Todos, karena itu adalah snapshot state Anda, elemen

01:01.750 --> 01:08.600
kedua adalah React.

01:08.600 --> 01:08.600
Fungsi

01:08.600 --> 01:11.370
pengiriman di sini pada akhirnya, itulah yang terjadi di sini.

01:11.370 --> 01:12.690
Jadi itu bisa berguna.

01:12.690 --> 01:15.490
Mungkin Anda juga bekerja dengan Redux.

01:15.490 --> 01:19.660
Nah, untungnya, jika Anda menyelam ke dalam dokumentasi mereka, Anda

01:19.660 --> 01:21.360
juga akan menemukan instruksi

01:21.360 --> 01:24.530
tentang menggunakan Redux dengan TypeScript.

01:24.530 --> 01:27.430
Di sini, di bawah Recipes Anda menemukan Penggunaan dengan

01:27.430 --> 01:30.710
TypeScript, dan di sana, Anda dapat mempelajari bagaimana Anda dapat

01:30.710 --> 01:33.270
menambahkan tipe ke aksi Anda, dan ke reduksi Anda, dan

01:33.270 --> 01:35.540
ke manajemen state Anda dengan Redux.

01:35.540 --> 01:38.650
Ini benar-benar mudah, tidak rumit sama sekali, dan

01:38.650 --> 01:41.520
menambahkan banyak keamanan tipe di sana.

01:41.520 --> 01:43.230
Mungkin Anda juga menggunakan

01:43.230 --> 01:47.110
paket React Router, paket ini di sini.

01:47.110 --> 01:52.040
Di sana, Anda tidak menemukan notasi TypeScript khusus di sana, yah, tentu saja Anda dapat menginstalnya

01:52.040 --> 01:54.020
ke dalam proyek Anda, juga, dengan npm

01:54.020 --> 01:55.340
install dash dash save react

01:55.340 --> 01:58.770
dash dash router dash dom, yang merupakan perintah yang biasanya

01:58.770 --> 02:00.740
Anda gunakan untuk menginstal paket

02:00.740 --> 02:03.720
ini ke dalam proyek React Anda.

02:03.720 --> 02:07.000
Jadi ini akan menambahkan paket react-router-dom.

02:07.000 --> 02:10.250
Tetapi paket ini tidak memiliki instruksi tipe khusus pada

02:10.250 --> 02:12.430
halamannya di sini, Anda tidak menemukan

02:12.430 --> 02:14.720
apa pun yang spesifik TypeScript di sini,

02:14.720 --> 02:17.570
setidaknya pada saat saya merekam ini.

02:17.570 --> 02:19.163
Meskipun demikian, tentu saja kita dapat

02:19.163 --> 02:21.250
menggunakan ini dalam proyek TypeScript juga,

02:21.250 --> 02:23.920
dan bisa mendapatkan dukungan tipe yang baik di sana.

02:23.920 --> 02:25.800
Sekarang, dengan itu terinstal, Anda akan

02:25.800 --> 02:29.360
melihat bahwa jika saya mengimpor dari react-router-dom, saya tidak benar-benar

02:29.360 --> 02:31.880
memiliki dukungan tipe yang bagus di sana.

02:31.880 --> 02:33.870
Sebagai contoh, jika saya mencoba mengimpor

02:33.870 --> 02:36.870
sesuatu di sini, saya sudah mendapatkan peringatan, bahwa tidak

02:36.870 --> 02:39.210
dapat menemukan deklarasi untuk modul react-router-dom,

02:39.210 --> 02:42.730
sehingga tidak menemukan informasi tipe apa pun di sini.

02:42.730 --> 02:45.420
Untuk memperbaikinya, tentu saja, kita dapat melakukan

02:45.420 --> 02:48.450
sesuatu yang kita lakukan sebelumnya, npm instal dash dash

02:48.450 --> 02:52.530
save dash dev, at types, slash react dash dash router dash dom, jadi kita batalkan

02:52.530 --> 02:54.620
at search types di sini, dan kita baik lagi,

02:54.620 --> 02:56.860
ini adalah trik yang sudah Anda pelajari,

02:56.860 --> 02:59.097
di awal kursus, tetapi tentu saja, tidak perlu

02:59.097 --> 03:02.010
melupakannya, hanya karena kita memiliki proyek di mana

03:02.010 --> 03:03.920
banyak yang sudah bekerja dengan TypeScript

03:03.920 --> 03:06.790
out of the box.

03:06.790 --> 03:08.140
Jika kita kemudian menambahkan

03:08.140 --> 03:10.810
sesuatu yang tidak bekerja dengan TypeScript, seperti yang

03:10.810 --> 03:13.700
satu ini, kita dapat menambahkannya seperti ini, dan sekarang

03:13.700 --> 03:15.380
ia mengetahui Route, ia juga mengetahui

03:15.380 --> 03:17.270
semua fitur lain dari paket ini.

03:17.270 --> 03:21.070
Jadi, beginilah cara mudah Anda bisa menambahkan dukungan untuk ini juga.

03:21.070 --> 03:23.560
Dan begitulah cara Anda secara umum mendekati ini,

03:23.560 --> 03:26.010
lihatlah dokumen resmi, periksa apakah Anda melihat

03:26.010 --> 03:29.030
instruksi tentang penggunaan dengan TypeScript di sana, jika

03:29.030 --> 03:31.590
tidak, instal dan lihat apakah ia memiliki dukungan

03:31.590 --> 03:33.720
tipe bawaan, sehingga Anda setidaknya mendapatkan

03:33.720 --> 03:37.350
dukungan pelengkapan otomatis dan kompilasi yang baik, dan jika itu juga

03:37.350 --> 03:39.090
tidak ada, instal paket tipe, seperti

03:39.090 --> 03:42.080
yang kami lakukan di sini.

03:42.080 --> 03:43.980
Dan itu saja untuk modul ini, dan ini adalah

03:43.980 --> 03:46.410
bagaimana Anda dapat memanfaatkan TypeScript, dan

03:46.410 --> 03:49.920
semua fitur-fiturnya yang luar biasa dalam aplikasi React, dan tentu saja,

03:49.920 --> 03:52.450
semua yang Anda pelajari dari kursus ini, berlaku untuk

03:52.450 --> 03:54.370
aplikasi React juga.

03:54.370 --> 03:56.380
Anda dapat menggunakan semua fitur TypeScript

03:56.380 --> 03:59.130
yang Anda pelajari dari kursus ini, dalam proyek React.
