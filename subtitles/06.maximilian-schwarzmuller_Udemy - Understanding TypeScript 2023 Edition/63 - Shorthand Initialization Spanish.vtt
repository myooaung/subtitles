WEBVTT

00:02.320 --> 00:04.500
Instructor: Ahora que hemos aprendido sobre lo privado

00:04.500 --> 00:07.650
y lo público, también quiero convertir el nombre en una propiedad privada.

00:07.650 --> 00:09.700
Y ahora aquí tenemos un pequeño, no realmente

00:09.700 --> 00:10.730
un problema, pero sí

00:10.730 --> 00:12.730
un pequeño inconveniente.

00:12.730 --> 00:14.540
Tenemos ese campo nombre aquí, luego

00:14.540 --> 00:16.810
obtenemos un valor para él aquí en el constructor,

00:16.810 --> 00:19.350
y luego almacenamos ese valor para ese campo aquí

00:19.350 --> 00:21.920
en el constructor, en el campo.

00:21.920 --> 00:22.900
Podemos hacerlo, y ciertamente

00:22.900 --> 00:25.820
está muy claro lo que estamos haciendo aquí.

00:25.820 --> 00:29.690
Pero, en muchos casos de uso, tendrás un montón de clases donde todas

00:29.690 --> 00:31.810
las propiedades que tienes, todos los

00:31.810 --> 00:33.210
campos que tienes, se inicializan

00:33.210 --> 00:35.010
en el constructor.

00:35.010 --> 00:36.520
Y por lo tanto, a menudo, usted

00:36.520 --> 00:39.870
podría encontrarse escribiendo un par de propiedades,

00:39.870 --> 00:42.090
un par de campos como este en la parte superior

00:42.090 --> 00:44.270
-: no importa si son privados o públicos

00:44.270 --> 00:46.320
- y luego sólo se repite todo eso ahí

00:46.320 --> 00:47.993
abajo en el constructor, sólo

00:49.030 --> 00:55.110
para luego inicializar estos valores aquí en la función del constructor.

00:55.110 --> 00:57.080
No tienes que hacer eso.

00:57.080 --> 01:01.690
En lugar de hacer este código de doble inicialización aquí, puede deshacerse

01:01.690 --> 01:05.220
de sus definiciones de campo allí arriba.

01:05.220 --> 01:07.150
Y ahora verás que te dará un error.

01:07.150 --> 01:09.040
Pero también puedes deshacerte

01:09.040 --> 01:12.970
de esto aquí, y en su lugar, ahora simplemente añadir el modificador

01:12.970 --> 01:15.130
de acceso delante del parámetro.

01:15.130 --> 01:17.950
Por lo tanto, si debe ser público, añada público.

01:17.950 --> 01:20.290
Digamos que, para el nombre, lo mantenemos público ahora.

01:20.290 --> 01:23.530
Si debe ser privado, añada privado.

01:23.530 --> 01:25.250
Aquí, tienes que añadir public

01:25.250 --> 01:30.250
porque esto ahora es una instrucción explícita para typescript, que le dice

01:30.370 --> 01:32.880
a typescript que no sólo quieres obtener

01:32.880 --> 01:36.450
estos argumentos aquí en el constructor, sino que quieres

01:36.450 --> 01:39.880
crear propiedades para esta clase con los mismos nombres

01:39.880 --> 01:41.950
exactos.

01:41.950 --> 01:45.350
Y por lo tanto, aquí, también debemos renombrar n a nombre.

01:45.350 --> 01:47.600
Para que se cree la propiedad name

01:47.600 --> 01:49.250
en la clase creator.

01:49.250 --> 01:51.250
Así que esto es simplemente un atajo

01:51.250 --> 01:54.270
para este código de doble inicialización aquí.

01:54.270 --> 01:56.340
Antes había que buscar los campos y luego

01:56.340 --> 01:57.930
almacenar el valor, ahora lo

01:57.930 --> 02:00.110
hacemos todo de una sola vez.

02:00.110 --> 02:02.690
Definimos los argumentos que toma el constructor,

02:02.690 --> 02:04.430
y luego para cada argumento que

02:04.430 --> 02:07.290
tiene un modificador de acceso delante de él, se

02:07.290 --> 02:09.630
crea una propiedad del mismo nombre, y

02:09.630 --> 02:11.480
el valor del argumento se almacena

02:11.480 --> 02:14.420
en esa propiedad creada.

02:14.420 --> 02:17.750
Así que ahora sólo tenemos que arreglar la creación de nuestro departamento

02:17.750 --> 02:20.780
aquí, y añadir un ID porque he añadido este nuevo argumento.

02:20.780 --> 02:22.230
Y ahora lo que verás es

02:22.230 --> 02:25.640
que cuando llamamos a describir allí abajo, y lo hago

02:25.640 --> 02:28.113
en realidad, voy a poner el ID allí también,

02:29.130 --> 02:34.160
tal vez cambiando esta cadena de usuario del departamento, literal aquí,

02:34.160 --> 02:38.890
Departamento esto.

02:38.890 --> 02:38.890
id

02:40.205 --> 02:42.450
y luego aquí esto. nombre, verás

02:42.450 --> 02:45.380
que todo esto sigue funcionando.

02:45.380 --> 02:47.360
Aquí se compila sin errores.

02:47.360 --> 02:49.980
Y aquí obtenemos la salida con nuestro

02:49.980 --> 02:51.710
ID y con nuestro nombre.

02:51.710 --> 02:53.480
Gracias a ese pequeño atajo, también

02:53.480 --> 02:55.563
nos ahorramos algo de código para todo eso.
