WEBVTT

00:02.250 --> 00:04.380
-: Ahora una nota importante, por cierto,

00:04.380 --> 00:07.280
usted podría preguntarse por qué autobind funciona aquí

00:07.280 --> 00:09.960
en ProjectList a pesar de que no he añadido una importación

00:09.960 --> 00:11.840
al decorador autobind.

00:11.840 --> 00:15.860
Bueno, porque en la app. ts, tengo todas estas importaciones.

00:15.860 --> 00:18.610
Ahora, en realidad, si elimino estas importaciones

00:18.610 --> 00:21.430
allí, lo que sería correcto, porque aquí técnicamente

00:21.430 --> 00:26.253
sólo uso ProjectInput ProjectList está en, vamos a tener un problema.

00:27.260 --> 00:30.680
Verás, si esto se recarga, tenemos un error aquí, aunque no obtenemos

00:30.680 --> 00:33.280
ningún error de compilación desafortunadamente, pero

00:33.280 --> 00:35.010
tenemos un error de ejecución.

00:35.010 --> 00:37.470
Así que tenemos que asegurarnos de importar todo

00:37.470 --> 00:40.150
lo que usamos en un archivo para estar seguros.

00:40.150 --> 00:42.890
Técnicamente, podemos importar todo en app. ts, y como ProjectInput

00:42.890 --> 00:45.260
y ProjectList que, por ejemplo, utilizan

00:45.260 --> 00:48.320
el decorador autobind vienen después, el decorador

00:48.320 --> 00:51.750
autobind estará disponible cuando lo necesiten.

00:51.750 --> 00:54.320
Pero esta no es la forma más limpia posible.

00:54.320 --> 00:56.740
Si en cambio importas todo lo que necesita un archivo

00:56.740 --> 00:58.450
desde dentro de ese archivo, tienes

00:58.450 --> 01:00.540
que garantizar que este archivo lo tendrá

01:00.540 --> 01:02.360
disponible cuando lo necesite, y no estás

01:02.360 --> 01:04.400
dependiendo de algún archivo global que

01:04.400 --> 01:05.790
importa todo, donde luego podrías

01:05.790 --> 01:07.500
eliminar una importación y de repente,

01:07.500 --> 01:09.570
todo se rompe.

01:09.570 --> 01:11.390
Entonces, ¿cuál es la solución aquí?

01:11.390 --> 01:13.350
Bien, volvamos a los archivos e importemos

01:13.350 --> 01:14.530
lo que necesitan.

01:14.530 --> 01:16.630
Por ejemplo, ProjectInput no sólo necesita

01:16.630 --> 01:18.790
el componente base, sino también la lógica

01:18.790 --> 01:21.270
de validación y el autoenlace.

01:21.270 --> 01:23.630
Así que aquí, voy a importar subiendo un nivel

01:24.970 --> 01:27.110
con dos puntos, desde decoradores, el

01:27.110 --> 01:35.366
decorador autobind, whoops, así, y desde util, la validación.

01:35.366 --> 01:35.366
ts file.

01:35.366 --> 01:39.770
Esto es definitivamente necesario en este archivo.

01:39.770 --> 01:42.210
También necesito el estado del proyecto aquí.

01:42.210 --> 01:46.810
Así que importaré /state/project-state. ts.

01:46.810 --> 01:50.690
Y voy a agarrar estas importaciones e ir a ProjectItem, y allí no necesito el

01:50.690 --> 01:53.210
estado del proyecto y la validación, por lo que podemos

01:53.210 --> 01:54.320
eliminar eso.

01:54.320 --> 01:56.560
Pero necesitaremos el decorador autobind.

01:56.560 --> 02:00.580
También necesitamos la interfaz de arrastre y el modelo de proyecto.

02:00.580 --> 02:04.040
Así que también vamos a ir a la carpeta de modelos aquí, y el proyecto

02:04.040 --> 02:08.257
de importación. ts y arrastrar y soltar. ts.

02:10.820 --> 02:14.720
En ProjectList, no necesitaremos validación,

02:14.720 --> 02:17.520
pero sí ProjectState y autobind.

02:17.520 --> 02:21.100
Y además de la carpeta de modelos, necesito

02:21.100 --> 02:25.710
el proyecto. ts y el arrastre. ts file.

02:25.710 --> 02:27.840
Con eso sólo guarda y compila, y ahora todo

02:27.840 --> 02:30.170
esto funciona de nuevo, como ves, ahora no tenemos

02:30.170 --> 02:32.820
errores de ejecución, porque ahora tenemos todas estas

02:32.820 --> 02:35.520
importaciones de nuevo en los archivos.

02:35.520 --> 02:37.380
Así, esta es la forma correcta de hacerlo,

02:37.380 --> 02:40.060
cada archivo especifica lo que necesita, y podemos dividir

02:40.060 --> 02:41.500
nuestro código y aún así terminar

02:41.500 --> 02:43.310
con un archivo, por lo que obtenemos lo

02:43.310 --> 02:45.940
mejor de ambos mundos, podríamos decir.

02:45.940 --> 02:48.000
Sin embargo, esta no es necesariamente

02:48.000 --> 02:49.963
la mejor manera posible de hacerlo.
