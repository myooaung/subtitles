WEBVTT

00:02.060 --> 00:04.960
Instrutor: Então já é assim para tipos genéricos.

00:04.960 --> 00:07.370
Eles podem realmente ser difíceis de entender,

00:07.370 --> 00:10.670
mas no final, o resumo que lhes dei na última palestra é a

00:10.670 --> 00:14.400
explicação perfeita. Eles nos dão flexibilidade

00:14.400 --> 00:16.710
combinada com segurança de tipo.

00:16.710 --> 00:19.700
Somos flexíveis com relação aos valores que passamos

00:19.700 --> 00:21.660
ou aos valores que usamos em uma

00:21.660 --> 00:24.960
classe, pelo menos desde que aderiamos às possíveis

00:24.960 --> 00:26.800
restrições, que você poderia

00:26.800 --> 00:30.190
ter acrescentado, mas temos suporte total do tipo o

00:30.190 --> 00:34.500
que fazemos com a classe ou com o resultado de uma função genérica

00:34.500 --> 00:38.720
porque o TypeScript sabe então qual tipo concreto passamos quando

00:38.720 --> 00:41.640
chamamos a função aqui ou quando instanciamos

00:41.640 --> 00:44.360
a classe aqui.

00:44.360 --> 00:46.680
Aqui definimos então um tipo concreto,

00:46.680 --> 00:49.970
mas não fechamos esta classe ou esta função a este

00:49.970 --> 00:52.600
tipo concreto quando o criamos.

00:52.600 --> 00:55.540
Em vez disso, somos flexíveis e podemos apenas fornecer

00:55.540 --> 00:58.090
algumas restrições e, é claro, essas restrições,

00:58.090 --> 01:02.350
todas são opcionais, e você pode ter algumas classes genéricas ou funções

01:02.350 --> 01:04.800
genéricas que não têm restrições e algumas

01:04.800 --> 01:07.510
que têm muitas restrições.

01:07.510 --> 01:09.960
Portanto, os tipos genéricos são uma característica realmente útil.

01:09.960 --> 01:12.700
Com promessa e variedade, mostrei a vocês dois dos

01:12.700 --> 01:15.600
muitos tipos genéricos incorporados e, é claro, veremos

01:15.600 --> 01:16.990
mais, incluindo tipos genéricos

01:16.990 --> 01:20.053
personalizados ao longo deste curso.
