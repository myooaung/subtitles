WEBVTT

00:02.190 --> 00:05.900
Instructeur : Avec tout notre travail sur l'héritage,

00:05.900 --> 00:08.400
revenons au rendu des éléments de la liste,

00:08.400 --> 00:10.590
rendons plus de détails.

00:10.590 --> 00:12.800
Et comme je l'ai mentionné, assurons-nous

00:12.800 --> 00:14.900
également de les rendre différemment.

00:14.900 --> 00:18.050
Jusqu'à présent, nous avons suivi une approche orientée

00:18.050 --> 00:22.440
objet, et par exemple, pour notre liste de projets, nous avons une classe et lorsque

00:22.440 --> 00:25.130
nous instancions cette classe, une telle boîte

00:25.130 --> 00:26.560
est rendue ici.

00:26.560 --> 00:30.000
Et de même pour l'entrée, nous avons une classe d'entrée de projet,

00:30.000 --> 00:33.460
et lorsque nous l'instancions, cette zone d'entrée de projet ici

00:33.460 --> 00:34.880
en haut est rendue.

00:34.880 --> 00:38.330
Maintenant, pourquoi ne pas faire la même chose pour notre élément

00:38.330 --> 00:42.290
de projet et ensuite à l'intérieur de la liste de projet dans les projets rendus

00:42.290 --> 00:45.030
au lieu de créer un élément de liste comme ceci, nous

00:45.030 --> 00:48.290
allons juste instancier notre classe d'élément de projet et

00:48.290 --> 00:52.230
dans le constructeur de cette classe d'élément de projet nous allons faire

00:52.230 --> 00:55.100
toute l'initialisation et ainsi de suite.

00:55.100 --> 00:57.240
C'est du moins mon idée.

00:57.240 --> 00:59.850
Comme toujours, vous pouvez mettre la vidéo en pause ici et

00:59.850 --> 01:01.680
essayer tout seul d'abord, mais après une

01:01.680 --> 01:04.610
courte pause, que je vous donne pour mettre la vidéo en pause si vous

01:04.610 --> 01:06.960
le souhaitez, nous allons le faire ensemble.

01:09.080 --> 01:12.980
Faisons cela ensemble, et pour cela, au-dessus de la classe

01:12.980 --> 01:17.940
de liste de projets, je vais ajouter la classe d'élément de projet, et ce

01:17.940 --> 01:20.610
sera la classe responsable du rendu d'un

01:20.610 --> 01:22.920
seul élément de projet.

01:22.920 --> 01:25.620
Maintenant, la classe de l'élément de projet doit toujours

01:25.620 --> 01:28.940
étendre le composant, parce que ce sera une classe qui est responsable

01:28.940 --> 01:31.600
du rendu de quelque chose sur l'écran, et c'est pour cela

01:31.600 --> 01:34.800
que nous avons notre classe de composant, d'accord, c'est pour cela

01:34.800 --> 01:36.410
que nous la construisons.

01:36.410 --> 01:40.100
Ainsi, nous passons un modèle, un élément hôte et ainsi de suite.

01:40.100 --> 01:43.560
Ainsi, dans l'élément de projet, nous avons bien sûr besoin d'un constructeur,

01:43.560 --> 01:47.030
un constructeur où nous devons également appeler super.

01:47.030 --> 01:50.650
Et en fait, avant d'appeler super, définissons ces types

01:50.650 --> 01:53.610
génériques pour la classe de base à hériter.

01:53.610 --> 01:56.440
Gardez à l'esprit que le premier type que nous passons

01:56.440 --> 02:00.410
ici est l'élément hôte, donc où nous voulons rendre quelque chose.

02:00.410 --> 02:02.760
Le deuxième type générique que nous transmettons

02:02.760 --> 02:04.800
est l'élément que nous rendons.

02:04.800 --> 02:07.040
Donc, dans le cas de l'élément de projet,

02:07.040 --> 02:10.550
cela signifie que le premier élément que nous passons est,

02:10.550 --> 02:13.570
puisque c'est l'endroit où nous voulons rendre quelque

02:13.570 --> 02:15.587
chose, une liste HTML U, une liste

02:15.587 --> 02:17.370
non ordonnée, parce que chaque

02:17.370 --> 02:20.440
élément de projet sera rendu à l'intérieur de notre

02:20.440 --> 02:22.550
liste non ordonnée.

02:22.550 --> 02:26.160
Et le deuxième élément sera un élément HTML LI, donc

02:26.160 --> 02:29.313
l'élément concret de la liste qui sera créé.

02:30.210 --> 02:35.210
Maintenant, choisissez super, nous devons fournir l'Id de l'élément dans lequel

02:35.280 --> 02:38.210
l'élément du projet doit être rendu.

02:38.210 --> 02:41.410
Et bien sûr, cet Id n'est pas fixe, car nous

02:41.410 --> 02:43.030
avons deux listes dans

02:43.030 --> 02:45.040
lesquelles l'élément pourrait

02:45.040 --> 02:47.480
être rendu.

02:47.480 --> 02:51.760
Donc je m'attends à obtenir cet Id ici dans le constructeur, là je

02:51.760 --> 02:55.400
veux obtenir l'Id de l'hôte, disons, qui devrait être

02:55.400 --> 02:56.233
une chaîne, nous

02:56.233 --> 02:59.140
pouvons transmettre cela à super.

02:59.140 --> 03:02.220
Cependant, la première chose que nous souhaitons superposer,

03:02.220 --> 03:05.520
c'est l'Id du modèle, pour un seul élément de liste, et c'est

03:05.520 --> 03:07.410
ce modèle ici.

03:07.410 --> 03:09.620
Donc on peut juste emballer ça.

03:09.620 --> 03:11.580
Bien sûr, il s'agit d'un modèle très simple,

03:11.580 --> 03:13.580
vous pouvez vous demander si vous en avez vraiment

03:13.580 --> 03:16.380
besoin, il s'agit juste d'un élément de liste, nous pourrions

03:16.380 --> 03:18.920
également le créer dans le code avec l'élément document

03:18.920 --> 03:22.560
create, mais afin de pouvoir réutiliser notre clause de base de composant qui

03:22.560 --> 03:26.240
repose sur des modèles, nous allons utiliser cette approche.

03:26.240 --> 03:29.680
Donc le projet unique est l'Id du modèle, l'Id de l'hôte,

03:29.680 --> 03:32.550
puis c'est l'Id que je veux transmettre au constructeur

03:32.550 --> 03:34.500
de la clause de base.

03:34.500 --> 03:37.150
Ensuite, pour répondre à la question de savoir

03:37.150 --> 03:40.010
si cela doit être rendu au début ou à la fin.

03:40.010 --> 03:43.020
En fait, chaque nouvel élément de la liste devrait être ajouté

03:43.020 --> 03:45.630
à la fin de la liste, bien que cela soit totalement

03:45.630 --> 03:48.450
libre, vous pouvez également l'ajouter au début si vous

03:48.450 --> 03:51.150
le souhaitez, mais ici je vais aller avec la fin et donc

03:51.150 --> 03:53.423
je vais passer faux ici.

03:54.410 --> 03:57.153
Et ensuite, pour le nouvel élément Id, vendez

03:57.153 --> 03:59.330
l'Id qui doit être attribué à l'élément

03:59.330 --> 04:01.580
nouvellement créé.

04:01.580 --> 04:03.760
Je m'attends à ce que cela vienne de l'extérieur également,

04:03.760 --> 04:06.860
car cela sera également différent pour chaque élément du projet, nous

04:06.860 --> 04:09.860
rendrons plusieurs éléments de ce type après tout.

04:09.860 --> 04:12.240
Je m'attends donc à obtenir l'identifiant, qui sera

04:12.240 --> 04:15.060
une chaîne de caractères, que je transmettrai ensuite.

04:15.060 --> 04:17.820
Donc c'est maintenant le constructeur.

04:17.820 --> 04:22.250
Maintenant, il serait logique de stocker le projet qui appartient à cet

04:23.500 --> 04:26.080
élément de projet dans cette classe d'élément

04:26.080 --> 04:27.280
de projet.

04:27.280 --> 04:31.020
Et par projet, j'entends le projet basé sur notre classe

04:31.020 --> 04:33.770
de projet, que nous avons créé là-haut.

04:33.770 --> 04:37.490
C'est en gros ce avec quoi nous travaillons, les données avec lesquelles nous travaillons.

04:37.490 --> 04:40.440
Et je veux stocker le projet qui appartient à cet élément

04:40.440 --> 04:44.000
de projet rendu dans cette classe d'élément de projet.

04:44.000 --> 04:47.650
Donc, ici, nous pouvons ajouter un projet de propriété privée

04:47.650 --> 04:51.510
par exemple, mais il doit être de type projet comme ceci.

04:51.510 --> 04:55.350
Dans le constructeur, nous obtenons l'Id et nous pouvons simplement

04:55.350 --> 04:58.090
changer cela pour obtenir le projet ici comme ceci,

04:58.090 --> 05:00.950
et ensuite simplement dire que ce projet est égal au

05:00.950 --> 05:04.340
projet, et ici puisque chaque projet a une propriété Id, nous

05:04.340 --> 05:09.440
faisons juste suivre le projet.

05:09.440 --> 05:09.440
id.

05:09.440 --> 05:12.330
Je pense que cette configuration a un peu plus de sens.

05:12.330 --> 05:14.710
Maintenant nous devons toujours ajouter quelques

05:14.710 --> 05:17.760
méthodes, nous devons ajouter une méthode configure bien sûr.

05:17.760 --> 05:22.300
Nous devons ajouter la méthode de rendu du contenu, qui est requise par

05:22.300 --> 05:25.040
notre classe de base que nous étendons.

05:25.040 --> 05:29.850
Et il appelle toujours configurer et rendre le contenu ici

05:29.850 --> 05:32.000
à la fin du constructeur.

05:32.000 --> 05:34.890
Maintenant, en ce qui concerne la configuration, il n'y a rien

05:34.890 --> 05:37.730
à faire pour le moment pour le contenu que nous voulons rendre,

05:37.730 --> 05:40.050
il y a certainement du travail à faire.

05:40.050 --> 05:42.710
Nous avons ici un modèle très simple, et

05:42.710 --> 05:44.520
nous pourrions le modifier

05:44.520 --> 05:47.650
dans le fichier HTML de l'index pour qu'il soit

05:47.650 --> 05:50.850
un peu plus complexe, de sorte que chaque projet

05:50.850 --> 05:54.250
ait une balise h2, une balise h3 en dessous, par exemple,

05:54.250 --> 05:56.740
et un paragraphe, de sorte que nous puissions

05:56.740 --> 05:59.170
afficher le titre du projet, le nombre

05:59.170 --> 06:03.290
de personnes affectées et la description.

06:03.290 --> 06:05.720
Et puis ici, dans l'application ts, dans le rendu

06:05.720 --> 06:09.050
du contenu, nous avons juste besoin d'atteindre ces différents

06:09.050 --> 06:10.130
éléments dans notre élément,

06:10.130 --> 06:12.090
donc à la balise h2 et ainsi de suite, et

06:12.090 --> 06:14.440
puis insérer un certain contenu.

06:14.440 --> 06:17.300
Ainsi, nous pouvons atteindre cet élément,

06:17.300 --> 06:19.360
qui est notre élément rendu, donc

06:19.360 --> 06:21.750
qui est notre élément LI rendu.

06:21.750 --> 06:24.970
Et là, nous devons maintenant sélectionner ces différentes choses.

06:24.970 --> 06:27.270
Nous pouvons donc utiliser le sélecteur de requête h2,

06:27.270 --> 06:28.930
et définir le contenu du texte ici.

06:28.930 --> 06:33.930
Disons à cela. projet. pour rendre le titre à cet endroit.

06:34.350 --> 06:36.470
Bien sûr, nous devrions ajouter un point d'exclamation

06:36.470 --> 06:39.010
ici pour préciser que nous obtiendrons toujours cet élément

06:39.010 --> 06:40.700
que nous connaissons avec certitude car

06:40.700 --> 06:42.563
il fait partie de notre modèle.

06:43.980 --> 06:46.870
Eh bien, en fait, nous pouvons juste répéter

06:46.870 --> 06:49.170
cela, mais maintenant, cherchez

06:49.170 --> 06:52.990
la balise h3, et là, je veux sortir le nombre de personnes,

06:52.990 --> 06:55.690
où people est le nom de la propriété, mais

06:55.690 --> 06:58.030
je vais le modifier un peu.

06:58.030 --> 07:00.300
Pour l'un d'entre eux, celui-ci est un nombre, et celui-là

07:00.300 --> 07:01.690
est une chaîne de caractères, donc

07:01.690 --> 07:04.110
en fait je vais appeler la chaîne de caractères ici.

07:04.110 --> 07:06.900
Mais ce n'est pas le problème principal, en fait,

07:06.900 --> 07:11.160
je veux le modifier pour qu'il sorte plus qu'un simple nombre ici, mais

07:11.160 --> 07:12.590
j'y reviendrai.

07:14.960 --> 07:17.260
Tout d'abord, répétons ceci une fois de plus,

07:17.260 --> 07:19.600
et interrogeons le paragraphe ici.

07:19.600 --> 07:22.623
Et mettez-le à égalité avec ce projet. description.

07:23.810 --> 07:25.810
Encore une fois, je modifierai cela plus tard, mais pour l'instant,

07:25.810 --> 07:27.140
laissons les choses telles qu'elles sont.

07:27.140 --> 07:28.870
Et avec cela, nous avons un élément

07:28.870 --> 07:29.880
de projet qui devrait

07:29.880 --> 07:33.470
être rendu, et qui devrait ensuite présenter tout son contenu.

07:33.470 --> 07:35.460
Nous devons donc maintenant utiliser l'élément

07:35.460 --> 07:37.880
de projet, et l'endroit où l'utiliser est la liste de projets,

07:37.880 --> 07:40.450
parce que cela rend la liste des projets.

07:40.450 --> 07:44.150
Et là, spécifiquement dans rendre les projets, c'est là que nous

07:44.150 --> 07:46.630
devons nous assurer que nous rendons les éléments

07:46.630 --> 07:48.260
de notre projet.

07:48.260 --> 07:51.140
Ici, nous passons en revue tous les éléments de projet

07:51.140 --> 07:52.860
dans les projets assignés.

07:52.860 --> 07:55.870
Et les projets assignés sont cette propriété

07:55.870 --> 07:58.960
ici, qui a une liste ou un tableau de projets.

07:58.960 --> 08:02.330
Donc maintenant, ici dans cette boucle, au lieu de créer

08:02.330 --> 08:04.720
un élément de liste manuellement et ainsi

08:04.720 --> 08:08.270
de suite, je vais me débarrasser de tout cela et dire simplement

08:08.270 --> 08:11.870
nouvel élément de projet ici, et maintenant deux éléments

08:11.870 --> 08:13.740
de projet.

08:13.740 --> 08:16.110
Nous devons passer l'idée de l'hôte,

08:16.110 --> 08:21.090
maintenant, bien sûr, c'est l'Id qui était assis sur notre élément

08:21.090 --> 08:22.730
de liste ici.

08:22.730 --> 08:25.990
Donc, en gros, ceci. élément. id, c'est l'Id de l'élément

08:25.990 --> 08:27.800
hôte, parce que cet élément qui

08:27.800 --> 08:29.980
est la liste non ordonnée devrait être

08:29.980 --> 08:31.670
l'hôte.

08:31.670 --> 08:34.210
Ensuite, le deuxième argument est

08:34.210 --> 08:37.400
le projet et c'est un élément purgé ici.

08:37.400 --> 08:40.950
Donc cette constante que l'on obtient à l'intérieur de la boucle.

08:40.950 --> 08:42.790
Et maintenant l'attachement se produira

08:42.790 --> 08:46.530
à l'intérieur de l'élément de projet ou à l'intérieur de la clause de base de la

08:46.530 --> 08:49.770
classe de composant, que les éléments de projet étendent.

08:49.770 --> 08:53.570
Et l'instanciation de l'élément de projet devrait être tout ce que nous devons faire.

08:53.570 --> 08:58.380
Donc si nous sauvegardons cela et que nous revenons en arrière et que nous avons à nouveau ce code

08:58.380 --> 09:00.890
ici, ou que nous avons à nouveau cette entrée.

09:00.890 --> 09:04.140
Tu vois, ça a été rendu, et ça n'a pas l'air trop mal.

09:04.140 --> 09:06.320
Il y a deux choses que je n'aime

09:06.320 --> 09:10.220
pas, bien sûr ce point ici, je ne l'aime pas trop.

09:10.220 --> 09:12.710
Et juste avoir le libre ici, tout

09:12.710 --> 09:15.590
n'est pas super heureux à ce sujet.

09:15.590 --> 09:17.293
Alors comment pouvons-nous régler ce problème maintenant ?

09:18.730 --> 09:21.380
Pour corriger la puce, inspectons notre contenu.

09:21.380 --> 09:24.110
Et ce que nous voyons ici, c'est que l'élément

09:24.110 --> 09:28.060
de la liste est rendu en dehors de la liste non ordonnée.

09:28.060 --> 09:29.600
Donc ce n'est pas à l'intérieur.

09:29.600 --> 09:32.710
S'il était à l'intérieur, alors il fonctionnerait correctement,

09:32.710 --> 09:35.530
mais je ne peux pas le faire glisser là.

09:35.530 --> 09:38.050
Nous devons donc nous assurer qu'il est rendu à l'intérieur de

09:38.050 --> 09:39.000
la liste non ordonnée.

09:39.000 --> 09:41.363
Voyons donc pourquoi ce n'est pas le cas.

09:42.220 --> 09:46.710
Ce n'est probablement pas le cas parce que dans project item, je

09:46.710 --> 09:50.430
passe false ici, au constructeur de la clause de base,

09:50.430 --> 09:53.660
et passer false ici signifie qu'elle n'est pas

09:53.660 --> 09:57.640
insérée au début, et cela signifie à son tour que dans attach

09:57.640 --> 10:00.590
nous avons before et as a value ici, où elle

10:00.590 --> 10:02.670
est insérée.

10:02.670 --> 10:05.660
C'est pourtant ce que nous voulons voir se produire,

10:05.660 --> 10:08.360
donc ce n'est probablement pas le problème.

10:08.360 --> 10:12.420
Le problème est que nous l'insérons bien

10:12.420 --> 10:14.970
sûr dans l'élément hôte.

10:14.970 --> 10:17.650
Et maintenant, réfléchissons à nouveau, quel est l'élément

10:17.650 --> 10:19.460
hôte de la liste de projets ?

10:19.460 --> 10:20.900
Et c'est finalement ce

10:20.900 --> 10:23.850
qui importe ici, parce que lorsque nous rendons

10:23.850 --> 10:25.620
nos projets, nous créons un nouvel

10:25.620 --> 10:29.680
élément de projet, et je transmets l'Id de notre élément ici, de l'élément

10:29.680 --> 10:31.240
rendu dans la liste de projet

10:31.240 --> 10:34.180
à l'élément de projet.

10:34.180 --> 10:36.670
Ce sera donc l'idée de l'élément hôte d'un élément

10:36.670 --> 10:38.120
de projet unique.

10:38.120 --> 10:40.720
Mais quel est cet élément ici ?

10:40.720 --> 10:43.770
Cet élément ici n'est pas la liste non ordonnée que nous avons

10:43.770 --> 10:44.900
dans cette boîte, c'est

10:44.900 --> 10:47.350
la boîte elle-même, c'est notre section.

10:47.350 --> 10:50.260
Si nous inspectons le modèle, nous voyons que la section

10:50.260 --> 10:53.810
ici est ce qui est rendu pour notre classe de liste de projets.

10:53.810 --> 10:55.500
Il ne s'agit pas seulement de la liste,

10:55.500 --> 10:58.300
mais de la section qui comprend également un en-tête.

10:58.300 --> 11:00.320
Nous devons donc accéder à la liste

11:00.320 --> 11:02.020
à l'intérieur de notre élément

11:02.020 --> 11:05.070
ici, puis accéder à l'idée de cette liste, parce

11:05.070 --> 11:08.710
qu'ici, nous avons défini un Id sur cette liste, donc il y

11:08.710 --> 11:10.750
aura un Id, nous devons juste saisir

11:10.750 --> 11:12.230
le bon.

11:12.230 --> 11:14.880
L'idée de l'élément lui-même n'est

11:14.880 --> 11:16.790
donc pas correcte.

11:16.790 --> 11:20.580
Au lieu de cela, ici, nous devrions avoir l'idée de la liste non ordonnée

11:20.580 --> 11:23.580
dans notre élément, et nous savons avec certitude qu'il y

11:23.580 --> 11:25.310
aura une liste non ordonnée, donc

11:25.310 --> 11:26.350
nous pouvons sauter

11:26.350 --> 11:28.460
la vérification de la nullité en ajoutant

11:28.460 --> 11:30.063
le point d'exclamation.

11:30.930 --> 11:34.463
Maintenant, avec cet ajout, si nous ajoutons un nouvel élément ici, cela semble

11:35.490 --> 11:37.680
mieux, maintenant le bullet point est parti, parce

11:37.680 --> 11:39.920
que maintenant le style approprié est appliqué,

11:39.920 --> 11:43.100
puisque le LI, l'élément de liste est maintenant vraiment ajouté à l'intérieur

11:43.100 --> 11:46.320
de la liste non ordonnée comme vous pouvez le voir.

11:46.320 --> 11:49.390
C'est une chose, maintenant passons à ce cinq, parce

11:49.390 --> 11:51.180
que mettre un cinq ici n'est pas

11:51.180 --> 11:52.990
vraiment ce que je veux faire.

11:52.990 --> 11:56.143
Pourquoi ne pas produire des informations un peu plus utiles ?
