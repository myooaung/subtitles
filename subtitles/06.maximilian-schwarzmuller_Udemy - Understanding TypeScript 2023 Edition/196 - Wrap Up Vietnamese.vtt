WEBVTT

00:02.320 --> 00:04.290
Giảng viên: Vậy là xong mô-đun này.

00:04.290 --> 00:05.660
Bạn đã học cách sử dụng

00:05.660 --> 00:08.480
bản in trong ứng dụng nút express, bạn có thể

00:08.480 --> 00:11.940
cài đặt các loại bổ sung cho express và cho nút chẳng

00:11.940 --> 00:13.230
hạn, để nhận hỗ trợ bản

00:13.230 --> 00:16.320
in tuyệt vời trong các tệp của bạn.

00:16.320 --> 00:18.570
Rằng bạn viết ứng dụng như bạn

00:18.570 --> 00:19.990
sẽ luôn viết nó.

00:19.990 --> 00:21.790
Nhưng điều đó, ví dụ, cú pháp nhập

00:21.790 --> 00:23.720
và xuất của bạn khác và tất nhiên

00:23.720 --> 00:26.120
bạn có thể sử dụng các loại cũng như bất

00:26.120 --> 00:29.300
kỳ tính năng bản ghi nào khác mà bạn tìm hiểu.

00:29.300 --> 00:31.080
Bạn có thể sử dụng giao diện,

00:31.080 --> 00:33.080
bạn có thể sử dụng trình trang trí,

00:33.080 --> 00:35.480
bạn có thể sử dụng eNoms và QPUlls và mọi

00:35.480 --> 00:37.840
thứ dành riêng cho bản in.

00:37.840 --> 00:39.310
Tất cả đều hoạt động ở đây, bởi

00:39.310 --> 00:42.650
vì chúng tôi đang viết một ứng dụng bản thảo thông thường ở đây và

00:42.650 --> 00:46.070
nó được biên dịch bằng trình biên dịch bản thảo thông thường thành

00:46.070 --> 00:48.050
mã Javascript thông thường.

00:48.050 --> 00:52.750
Mã Javascript sau đó được thực thi với nút JS.

00:52.750 --> 00:54.450
Bây giờ, nếu bạn muốn có thêm ví dụ

00:54.450 --> 00:57.720
về cách làm việc với TypeScript và Node Express, tất nhiên,

00:57.720 --> 00:58.910
bạn có thể, đối với một

00:58.910 --> 01:01.210
ví dụ, chỉ cần google cho Node Express TypeScript

01:01.210 --> 01:02.840
để tìm thêm ví dụ.

01:02.840 --> 01:04.600
Nhưng tôi cũng thực sự khuyên

01:04.600 --> 01:06.980
bạn nên kiểm tra NestJS.

01:06.980 --> 01:10.390
Đó là một nút. js bao gồm TypeScript trong

01:10.390 --> 01:13.270
khi bạn có thể làm cho nút express hoạt động với TypeScript,

01:13.270 --> 01:15.310
như bạn đã thấy trong suốt mô-đun này,

01:15.310 --> 01:18.010
đây là một khung cung cấp cho bạn các dự án, dự

01:18.010 --> 01:21.740
án nút, với hỗ trợ TypeScript ngay lập tức.

01:21.740 --> 01:24.490
Và nó bao gồm tất cả các tính năng bản

01:24.490 --> 01:26.960
in này như trình trang trí, v.v.

01:26.960 --> 01:30.910
Với NestJS, bạn có thể xây dựng các ứng dụng web nút, phần còn

01:30.910 --> 01:34.390
lại của API cũng như các ứng dụng nơi bạn hiển thị chế

01:34.390 --> 01:36.440
độ xem hoặc API graphQL.

01:36.440 --> 01:38.930
Bạn có thể xây dựng tất cả với node. js mà còn với TypeScript

01:38.930 --> 01:41.110
và dự án này sử dụng nhiều

01:41.110 --> 01:43.380
tính năng như trình trang

01:43.380 --> 01:46.950
trí, giao diện, v.v.

01:46.950 --> 01:50.200
Vì vậy, hãy chắc chắn kiểm tra NestJS nếu bạn muốn xây

01:50.200 --> 01:53.580
dựng ứng dụng web phía dịch vụ với nút và bản thảo.

01:53.580 --> 01:56.660
Đó là một khung tuyệt vời, thực sự thú vị khi sử dụng

01:56.660 --> 02:00.350
và sử dụng tất cả các tính năng thú vị mà TypeScript cung cấp.

02:00.350 --> 02:03.630
Vì vậy, không cần cài đặt loại tùy chỉnh, cách giải quyết

02:03.630 --> 02:05.310
hoặc bất kỳ thứ gì tương tự.

02:05.310 --> 02:08.913
Tại đây, bạn nhận được hỗ trợ TypeScript tuyệt vời ngay lập tức.
