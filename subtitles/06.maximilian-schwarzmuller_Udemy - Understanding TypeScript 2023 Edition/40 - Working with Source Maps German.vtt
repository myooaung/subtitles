WEBVTT

00:02.240 --> 00:04.220
Ausbilder: SourceMap hilft uns bei

00:04.220 --> 00:06.560
der Fehlersuche und Entwicklung.

00:06.560 --> 00:09.540
Um zu zeigen, was das bewirkt, kompiliere ich alles

00:09.540 --> 00:12.000
ohne die sourceMap-Einstellung.

00:12.000 --> 00:14.530
Wenn wir jetzt zum Browser gehen und verstehen wollen,

00:14.530 --> 00:17.420
was unser Code macht, können wir hier in den Entwicklertools

00:17.420 --> 00:21.620
auf die Registerkarte Quellen gehen und dort unsere JavaScript-Dateien finden.

00:21.620 --> 00:23.060
Jetzt können wir in diese Dateien

00:23.060 --> 00:25.090
eintauchen, und das Gute daran ist, dass

00:25.090 --> 00:28.350
diese Dateien für uns Menschen relativ gut lesbar sind, da sie letztendlich

00:28.350 --> 00:30.940
JavaScript-Code enthalten.

00:30.940 --> 00:35.200
Das ist gut, aber was ist, wenn wir komplexeren TypeScript-Code haben

00:35.200 --> 00:38.940
und unseren TypeScript-Code debuggen wollen und nicht den

00:38.940 --> 00:41.640
kompilierten JavaScript-Code.

00:41.640 --> 00:43.060
Mit anderen Worten, es wäre schön,

00:43.060 --> 00:47.180
wenn wir hier die TypeScript-Dateien sehen würden und nicht die JavaScript-Dateien.

00:47.180 --> 00:50.000
Mit der Option sourceMap können Sie das Ziel erreichen.

00:50.000 --> 00:53.700
Wenn Sie dies auf true setzen und den tsc-Befehl erneut ausführen, sehen

00:53.700 --> 00:56.950
Sie, dass wir diese . js, . auch Kartendateien

00:56.950 --> 00:58.810
erzeugt werden.

00:58.810 --> 01:01.540
Wenn man sich diese Dateien ansieht, sind sie ziemlich

01:01.540 --> 01:04.920
seltsam, aber sie fungieren im Grunde als eine Brücke, die

01:04.920 --> 01:07.110
von modernen Browsern und den Entwickler-Tools

01:07.110 --> 01:10.170
verstanden wird, um die JavaScript-Dateien mit den

01:10.170 --> 01:13.410
Eingabedateien zu verbinden.

01:13.410 --> 01:17.440
Wenn ich diese Dateien neu lade, sehen Sie auf der Registerkarte "Quellen", dass

01:17.440 --> 01:20.320
wir jetzt nicht nur unsere JavaScript-Dateien, sondern

01:20.320 --> 01:23.497
auch unsere TypeScript-Dateien angezeigt bekommen.

01:23.497 --> 01:27.230
Und wir können sogar Haltepunkte in den TypeScript-Dateien platzieren. Wenn

01:27.230 --> 01:29.320
ich jetzt zum Beispiel auf die Schaltfläche

01:29.320 --> 01:31.650
klicke, wird die TypeScript-Datei angehalten.

01:31.650 --> 01:34.720
Das ist natürlich super, super praktisch.

01:34.720 --> 01:37.670
Das bringt unseren Debugging-Prozess auf die nächste

01:37.670 --> 01:40.260
Stufe, weil wir direkt in unseren Eingabedateien

01:40.260 --> 01:43.400
arbeiten können, in unseren TypeScript-Dateien statt

01:43.400 --> 01:45.670
in den JavaScript-Dateien.

01:45.670 --> 01:48.010
Trotzdem werde ich das hier auskommentieren, denn

01:48.010 --> 01:50.800
wir haben hier ein ziemlich einfaches Projekt und ich möchte

01:50.800 --> 01:53.580
nicht diese zusätzlichen . Kartendateien liegen hier herum.

01:53.580 --> 01:55.950
Aber das ist in Projekten sehr nützlich, weil

01:55.950 --> 01:57.803
es die Fehlersuche vereinfacht.
