WEBVTT

00:02.150 --> 00:05.480
Narrateur : Et c'est déjà tout pour ce module.

00:05.480 --> 00:08.090
Il existe évidemment des tonnes de bibliothèques

00:08.090 --> 00:10.130
tierces que vous pouvez utiliser.

00:10.130 --> 00:12.680
Il y a tout cela en plus que vous pouvez explorer

00:12.680 --> 00:15.806
sur les paquets Class Validator et Class Transformer.

00:15.806 --> 00:18.652
Mais l'idée ici n'est pas tant de se plonger dans

00:18.652 --> 00:21.410
toutes les fonctionnalités de ces paquets.

00:21.410 --> 00:24.300
Je préfère vous laisser le soin de l'explorer.

00:24.300 --> 00:27.983
L'idée est de vous faire sentir deux choses importantes

00:27.983 --> 00:31.575
: la première est qu'avec TypeScript, vous pouvez utiliser

00:31.575 --> 00:36.719
sans problème des paquets JavaScript ordinaires comme Lodash.

00:36.719 --> 00:39.350
Il se peut que vous obteniez des erreurs au début, mais gardez

00:39.350 --> 00:41.767
à l'esprit que techniquement, cela a fonctionné.

00:41.767 --> 00:45.244
Mais vous pouvez également contourner ces erreurs de

00:45.244 --> 00:49.260
compilation en important les bons types, la bonne traduction

00:49.260 --> 00:51.500
de JavaScript à TypeScript.

00:51.500 --> 00:54.590
De tels paquets de traduction existent pour toutes les bibliothèques

00:54.590 --> 00:55.980
JavaScript majeures et populaires,

00:55.980 --> 00:59.180
et même pour un grand nombre de petites bibliothèques.

00:59.180 --> 01:02.221
Il se peut également que vous travailliez avec des bibliothèques

01:02.221 --> 01:04.470
JavaScript qui intègrent déjà ces fichiers

01:04.470 --> 01:07.110
de traduction, ces fichiers DTS.

01:07.110 --> 01:08.840
Bien entendu, vous n'avez pas besoin d'installer

01:08.840 --> 01:10.713
ces traductions par la suite.

01:11.550 --> 01:14.350
En plus de ces emplois Vanilla avec des bibliothèques

01:14.350 --> 01:17.094
qui peuvent nécessiter des traductions, vous pouvez

01:17.094 --> 01:20.610
aussi avoir des bibliothèques comme Class Transformer qui fonctionnent

01:20.610 --> 01:24.280
bien dans Vanilla JavaScript, dans Vanilla JavaScript moderne, au moins

01:24.280 --> 01:26.580
où vous avez aussi des classes, mais qui font

01:26.580 --> 01:29.430
tout le travail, sans traductions supplémentaires et

01:29.430 --> 01:31.400
sans projets TypeScript.

01:31.400 --> 01:34.960
Et puis nous avons des paquets comme Class Validator.

01:34.960 --> 01:38.440
Elles englobent réellement les fonctionnalités spécifiques

01:38.440 --> 01:42.370
à TypeScript et vous offrent une toute nouvelle façon de penser à votre

01:42.370 --> 01:44.840
projet et de résoudre certains problèmes.

01:44.840 --> 01:47.603
Dans ce cas-ci, en utilisant des décorateurs.

01:48.680 --> 01:51.080
Connaître toutes ces choses est super important

01:51.080 --> 01:53.440
et vous donne toute la flexibilité dont vous avez

01:53.440 --> 01:55.253
besoin pour vos futurs projets.
