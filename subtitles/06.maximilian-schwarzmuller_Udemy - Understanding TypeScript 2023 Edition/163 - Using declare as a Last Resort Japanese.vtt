WEBVTT

00:02.450 --> 00:04.900
講師：では､ 例えばLodashで行ったように､

00:04.900 --> 00:10.470
型をインストールできないライブラリの場合はどうすればいいのでしょうか｡

00:10.470 --> 00:14.440
Lodashの場合､ ありがたいことにそのようなタイプのパッケージがありますし､

00:14.440 --> 00:15.880
先ほど申し上げたように､ ほとんどのサードパーティライブラリの場合､

00:15.880 --> 00:21.210
それがありますが､ 必ずしもすべてがそうとは限りません｡

00:21.210 --> 00:27.320
あるいは､ 例えばインデックスに他のJavaScriptのコードがある場合はどうでしょう｡

00:27.320 --> 00:27.320
html

00:27.320 --> 00:29.800
ファイルに､ グローバル変数を設定し､

00:29.800 --> 00:34.800
凝視を実行する他のスクリプトコードがあります｡

00:35.350 --> 00:38.450
GLOBAL = 'THIS IS SET' このようなもので､

00:38.450 --> 00:43.180
最終的にこれがグローバルに利用できるようになることが分かります｡

00:43.180 --> 00:48.600
このように追加された変数は､ ご存知のようにグローバルなウィンドウオブジェクトに追加されますので､

00:48.600 --> 00:52.670
TypeScriptのコード内部から利用したいものです｡

00:52.670 --> 00:57.770
例えば､ ここでコンソールにする場合｡

00:57.770 --> 00:57.770
log(GLOBAL)をこのようにすると､

00:57.770 --> 00:59.990
私のIDEではここでエラーになります｡

00:59.990 --> 01:06.340
また､ tsc -wを実行してコンパイルを開始すると､ ここでもエラーが発生します｡

01:06.340 --> 01:09.470
そのため､ 私たちのインデックスで動作することが分かっていても､

01:09.470 --> 01:15.630
そのグローバルなものを好まないのです｡

01:15.630 --> 01:15.630
htmlファイルでは､ このグローバル変数を定義しています｡ 

01:15.630 --> 01:18.010
そして､ このスクリプトにdeferを付けているので､

01:18.010 --> 01:22.170
このスクリプトは下のスクリプトの後に実行されることになります｡

01:22.170 --> 01:26.460
そんなとき､ TypeScriptでは別の構文が用意されており､

01:26.460 --> 01:29.460
それがdeclareコマンドです｡

01:29.460 --> 01:34.150
例えば､ ある変数をTypeScriptに宣言することができます｡

01:34.150 --> 01:36.730
declare var GLOBALと言えば､ TypeScriptに､

01:36.730 --> 01:38.640
例えばこれは文字列になりますよ､ とか､ これは何でもいいんですよ､

01:38.640 --> 01:42.050
と伝えることができるのです｡

01:42.050 --> 01:45.910
これは基本的にTypeScriptに「心配しないで､

01:45.910 --> 01:47.823
これは存在するよ」と伝えるもので､

01:49.090 --> 01:55.740
これを保存して､ このコンパイラを終了して代わりにwebpackを使用すると､

01:55.740 --> 02:02.270
技術的に動作するので､ ページにこの出力が表示されます｡

02:02.270 --> 02:04.420
これからこのdmidecodeを削除しますが､

02:04.420 --> 02:08.830
declare､ このキーワード､ このコマンドを意識することは重要です｡

02:08.830 --> 02:12.160
TypeScriptの機能や変数が存在することが分かっているところで宣言したり､

02:12.160 --> 02:23.373
TypeScriptが知ることのできないパッケージや一般的なグローバル変数について､ 開発者として知っておくことができるのです｡
