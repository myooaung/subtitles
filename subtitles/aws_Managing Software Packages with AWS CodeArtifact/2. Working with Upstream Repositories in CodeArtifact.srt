1
00:00:00,840 --> 00:00:01,420
Okay,

2
00:00:01,420 --> 00:00:07,340
so now we know what software packages are and how to use them in our repository.

3
00:00:07,340 --> 00:00:13,870
Let's figure out what are upstream repositories. CodeArtifact can have

4
00:00:13,870 --> 00:00:18,740
something called upstream repositories, such as npm.

5
00:00:18,740 --> 00:00:22,960
These can be external repositories such as npm, or

6
00:00:22,960 --> 00:00:26,320
internal ones such as your own.

7
00:00:26,320 --> 00:00:31,240
You can have multiple upstream repositories which contain multiple types of

8
00:00:31,240 --> 00:00:35,690
software packages and assets, and they can be shared throughout your own

9
00:00:35,690 --> 00:00:42,430
domain. CodeArtifact will pull these packages into your own domain to manage

10
00:00:42,430 --> 00:00:47,050
itself, and will never push any of your private packages to external

11
00:00:47,050 --> 00:00:54,770
upstream repositories. And, just like with our own software packages, when

12
00:00:54,770 --> 00:00:56,440
using upstream repository,

13
00:00:56,440 --> 00:00:59,850
you cannot recreate an external software package with the

14
00:00:59,850 --> 00:01:03,740
same name, as this will throw an error,

15
00:01:03,740 --> 00:01:07,840
which is a good thing and stops duplication.

16
00:01:07,840 --> 00:01:14,140
You can set upstream repositories in a dashboard or by using the CLI.

17
00:01:14,140 --> 00:01:14,650
Okay,

18
00:01:14,650 --> 00:01:19,540
so now we have a basic understanding of AWS CodeArtifact upstream repositories,

19
00:01:19,540 --> 00:01:25,260
let's take a look at how to set one up. In this demo, we're going to cover the

20
00:01:25,260 --> 00:01:29,040
following components in a little bit more detail.

21
00:01:29,040 --> 00:01:32,320
We're going to take a look at adding an upstream repository to our

22
00:01:32,320 --> 00:01:36,350
repository, and then we're going to have a look at installing a

23
00:01:36,350 --> 00:01:41,540
package from an upstream repository.

24
00:01:41,540 --> 00:01:47,640
Okay, so in our final demo, let's have a play with some upstream repositories.

25
00:01:47,640 --> 00:01:54,900
So here I am in our globomantics‑repo. I'm going to hit Edit, and then I'm

26
00:01:54,900 --> 00:02:03,460
going to select an upstream repository. I'm going to use the npm‑store, and

27
00:02:03,460 --> 00:02:07,470
then I'm going to update the repository to then use this one as an upstream

28
00:02:07,470 --> 00:02:15,810
one. Cool, that was successful, so let's jump back over to our Bash window,

29
00:02:15,810 --> 00:02:23,350
and then in this Bash window we're going to install the very simple code

30
00:02:23,350 --> 00:02:27,040
package called alphabet.

31
00:02:27,040 --> 00:02:33,540
So we'll install alphabet, and now what's going to happen is npm is

32
00:02:33,540 --> 00:02:39,560
going to install through our repository using upstream public npm

33
00:02:39,560 --> 00:02:43,520
repos, this software package called alphabet, and it's then going to

34
00:02:43,520 --> 00:02:46,410
store it inside of our repo too.

35
00:02:46,410 --> 00:02:50,710
So let's do that now.

36
00:02:50,710 --> 00:02:54,340
There we go, alphabet was installed.

37
00:02:54,340 --> 00:02:54,850
Okay,

38
00:02:54,850 --> 00:03:01,080
so let's jump over to our editor now, and we'll see that our alphabet

39
00:03:01,080 --> 00:03:09,100
module, our alphabet software package has installed. Awesome, so let's

40
00:03:09,100 --> 00:03:12,510
take a look at that in the dashboard.

41
00:03:12,510 --> 00:03:18,290
If we refresh our repo, we should now see an alphabet package alongside our

42
00:03:18,290 --> 00:03:27,180
custom globomantics‑package. And now in here we will see that's also

43
00:03:27,180 --> 00:03:31,940
installed our alphabet package ready for us to use.

44
00:03:31,940 --> 00:03:35,890
So there we go, there's an example of using an upstream repository and

45
00:03:35,890 --> 00:03:40,240
installing an external package through the upstream repo.

46
00:03:40,240 --> 00:03:41,640
Pretty cool, huh?

47
00:03:41,640 --> 00:03:44,040
Okay, let's have a quick recap.

48
00:03:44,040 --> 00:03:49,380
We just covered software packages and assets, how to add them,

49
00:03:49,380 --> 00:03:51,600
list them, delete them,

50
00:03:51,600 --> 00:03:55,970
update their versions, and then we took a look at upstream

51
00:03:55,970 --> 00:04:01,440
repositories and how to use them with our own repositories.

52
00:04:01,440 --> 00:04:04,240
Whoa, that wasn't so bad, was it?

53
00:04:04,240 --> 00:04:07,410
Now you're well on your way to be experts on AWS

54
00:04:07,410 --> 00:04:10,070
CodeArtifact, but before you go,

55
00:04:10,070 --> 00:04:14,940
let's take a look at where to go next and have a look at some inspiration.

56
00:04:14,940 --> 00:04:19,240
So, what's next, and where can you go from here?

57
00:04:19,240 --> 00:04:22,520
I would suggest looking to automate as much as possible of your

58
00:04:22,520 --> 00:04:27,410
software engineering lifecycle, and to start to really implement and

59
00:04:27,410 --> 00:04:33,080
include as much DevOps methodologies as possible.

60
00:04:33,080 --> 00:04:37,850
There are a couple of other AWS services that tie into CodeArtifact really well,

61
00:04:37,850 --> 00:04:41,440
such as CodeBuild and CodePipeline.

62
00:04:41,440 --> 00:04:45,230
Why not try to use CodeArtifact in one of your CodeBuild

63
00:04:45,230 --> 00:04:53,400
builds? Werner Vogel's is the CTO of AWS.

64
00:04:53,400 --> 00:04:57,740
He has driven and pointed AWS in innovative directions and

65
00:04:57,740 --> 00:05:01,830
made sure they're ahead of the market curve.

66
00:05:01,830 --> 00:05:04,210
As you can see from this quote, he says,

67
00:05:04,210 --> 00:05:09,640
security is everyone's job now, not just the security teams.

68
00:05:09,640 --> 00:05:16,740
All developers have to be security engineers.

69
00:05:16,740 --> 00:05:19,730
He believes that to reduce risk to your services,

70
00:05:19,730 --> 00:05:27,030
we should all be security conscious, and one benefit of using AWS CodeArtifact

71
00:05:27,030 --> 00:05:31,780
is that it allows you to add software packages to your repository that have bean

72
00:05:31,780 --> 00:05:38,840
audited and vetted for use within your software.

73
00:05:38,840 --> 00:05:43,730
Well, that's it. All finished, I promise.

74
00:05:43,730 --> 00:05:47,740
Why not head over to the Discussion tab to see how everyone else got on,

75
00:05:47,740 --> 00:05:53,440
or maybe try the test I put together on what you learned today.

76
00:05:53,440 --> 00:05:56,980
Anyway, it's been an absolute blast, and if you're on Twitter,

77
00:05:56,980 --> 00:05:59,840
why not give me a follow and send me a Tweet?

78
00:05:59,840 --> 00:06:06,000
I always love to hear feedback from my viewers. My name's @JoshuaGEdwards.

