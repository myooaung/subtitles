WEBVTT
1
00:00:00.230 --> 00:00:05.670
Not video we converted our car into a vehicle such that when the car is driving the wheels can turn

2
00:00:05.730 --> 00:00:09.640
and roll like a real life vehicle would we haven't implemented driving yet.

3
00:00:09.660 --> 00:00:12.080
We'll do that in the next video for now.

4
00:00:12.090 --> 00:00:15.900
Just notice how the car vibrates like it has an actual engine.

5
00:00:15.900 --> 00:00:17.560
But how do we steer the car.

6
00:00:17.610 --> 00:00:21.140
For example I want to start when I orient my fill in to the left.

7
00:00:21.240 --> 00:00:23.520
The car's wheels should steer to the left.

8
00:00:23.640 --> 00:00:28.110
If I orient my phone to the right the cars will steer to the right.

9
00:00:28.140 --> 00:00:30.690
Right now they don't move at all to get started.

10
00:00:30.690 --> 00:00:35.700
There's a delegate that's made specifically for physics simulations called did simulate physics that

11
00:00:35.760 --> 00:00:39.260
time that simulate physics at time.

12
00:00:39.390 --> 00:00:45.510
This method is called once per Phryne if your session is running at 60 frames per second then this delegate

13
00:00:45.510 --> 00:00:47.800
gets called 60 times a second.

14
00:00:47.820 --> 00:00:58.290
So inside of you did load right self does scene view does show statistics is equal to true and inside

15
00:00:58.280 --> 00:01:04.460
of did simulate physics put a print statement of simulating physics

16
00:01:07.920 --> 00:01:14.630
remove this prince tainment for now and run the up if you look at the statistics bar on the bottom.

17
00:01:14.640 --> 00:01:20.130
It's telling us that scenes are rendered at 60 frames per second and this print statement you see in

18
00:01:20.130 --> 00:01:23.580
the debugger is happening 60 times per second as well.

19
00:01:23.580 --> 00:01:28.500
This is basically a never ending loop a rendering loop any game logic.

20
00:01:28.510 --> 00:01:33.190
In our case the vehicle logic we add to this rendering loop is immediately reflected and displayed in

21
00:01:33.190 --> 00:01:37.850
the scene making this the perfect delegate function for physics simulations.

22
00:01:37.900 --> 00:01:43.340
The first thing I want to simulate is the car's wheels turning as I rotate my phone in different orientations.

23
00:01:43.390 --> 00:01:48.910
Now I remember from before in lecture 3 of the suction the accelerometer lecture we discussed how when

24
00:01:48.910 --> 00:01:54.160
the vertical acceleration is zero there is no gravitational acceleration being applied in the vertical

25
00:01:54.160 --> 00:01:55.080
part of the phone.

26
00:01:55.210 --> 00:02:01.240
So the phone would be completely horizontal when the vertical acceleration is closer to one or a negative

27
00:02:01.240 --> 00:02:01.880
one.

28
00:02:01.900 --> 00:02:06.790
That means all the acceleration is being applied on the vertical part of the phone making the phone

29
00:02:06.790 --> 00:02:08.040
completely vertical.

30
00:02:08.050 --> 00:02:14.920
So based on the value of our vertical acceleration we can determine the orientation of our phone such

31
00:02:14.920 --> 00:02:20.170
that when this is zero the orientation of the phone is horizontal and when it's one or negative one

32
00:02:20.170 --> 00:02:22.740
the orientation of the film is completely vertical.

33
00:02:23.200 --> 00:02:34.210
So back to our view controller make a variable var orientation of type C.G. float is equal to zero.

34
00:02:34.250 --> 00:02:43.870
So the default value is zero inside of the accelerometer to change set the orientation self orientation

35
00:02:44.410 --> 00:02:49.290
is equal to your vertical acceleration.

36
00:02:49.520 --> 00:02:55.130
Since we discussed before that whatever the vertical acceleration is is going to reflect the orientation

37
00:02:55.130 --> 00:02:56.020
of the phone.

38
00:02:56.340 --> 00:03:01.430
So now we have the orientation of the phone we can orient the wheels accordingly.

39
00:03:01.460 --> 00:03:12.010
Before I explain what I'm getting to write the following Self of vehicle data set steering angle orientation

40
00:03:12.550 --> 00:03:19.900
and we want to steer the front wheels the front wheels are located at index's two and three of our vehicle

41
00:03:19.900 --> 00:03:20.550
wheels are right.

42
00:03:20.620 --> 00:03:23.890
So we're going to steer the wheel that's an index number two of the array.

43
00:03:23.890 --> 00:03:29.350
The front right wheel and we're also going to steer the front left wheel the one that's an index.

44
00:03:29.350 --> 00:03:32.740
Three of our vehicle wheels are at four wheel at three

45
00:03:35.760 --> 00:03:37.360
put this French S.M. back.

46
00:03:41.140 --> 00:03:47.110
Delete this one and run the app so remember that we set the steering angle equal to the orientation

47
00:03:47.110 --> 00:03:51.960
of the phone which is basically just equal to the vertical gravitational acceleration.

48
00:03:51.970 --> 00:03:58.010
Now when the phone is completely horizontal the gravitational acceleration is going to be zero or approach

49
00:03:58.010 --> 00:04:01.240
zero when the steering angle is zero.

50
00:04:01.330 --> 00:04:03.430
The wheel will not rotate at all.

51
00:04:03.430 --> 00:04:05.550
This would make the steering angle zero.

52
00:04:05.560 --> 00:04:11.680
The wheels will not rotate at all since there will be no steering angle at zero no angle of rotation

53
00:04:11.680 --> 00:04:13.510
is being applied to the wheels.

54
00:04:13.840 --> 00:04:16.610
At the moment however here's what would happen.

55
00:04:16.630 --> 00:04:20.070
The closer the acceleration gets to negative one.

56
00:04:20.080 --> 00:04:28.360
So as I move my phone to the right our steering angle will get close to negative one as well as the

57
00:04:28.360 --> 00:04:30.480
steering angle gets close to negative one.

58
00:04:30.490 --> 00:04:35.860
The wheels will move to the right since the vertical acceleration approach is negative one the phone

59
00:04:35.860 --> 00:04:37.980
is being oriented to the right.

60
00:04:37.990 --> 00:04:42.940
So in other words you could say that when I orient my phone to the right the wheels will steer to the

61
00:04:42.940 --> 00:04:43.710
right.

62
00:04:43.720 --> 00:04:46.720
Let me show you a demonstration of this to see if that's the case.

63
00:04:47.780 --> 00:04:56.230
Wait till the world origin loads once your world orange loads start detecting some planes once you've

64
00:04:56.230 --> 00:04:57.910
detected a big enough plane.

65
00:04:59.860 --> 00:05:08.480
Your car and for now make sure that the phone is oriented completely horizontally such as that the camera

66
00:05:08.900 --> 00:05:14.240
is positioned where your left hand is not your right hand your left hand.

67
00:05:14.240 --> 00:05:15.670
I'll explain why later.

68
00:05:15.830 --> 00:05:18.590
But make sure that you follow what I'm doing.

69
00:05:18.620 --> 00:05:21.410
So right now my phone is completely horizontal.

70
00:05:21.410 --> 00:05:29.880
The vertical acceleration the acceleration Why is zero so the steering angle of the wheel is zero since

71
00:05:29.880 --> 00:05:32.540
the steering angle is zero.

72
00:05:32.570 --> 00:05:37.520
The wheels should not rotate at all and they should be completely horizontal as they are right now.

73
00:05:37.790 --> 00:05:43.700
However if I orient my phone to the right the closer the vertical acceleration you get to negative one

74
00:05:45.000 --> 00:05:49.670
the steering angle gets closer to negative 1 and the wheels move to the right.

75
00:05:49.710 --> 00:05:55.290
If I orient my phone to the left the acceleration Y gets closer to 1.

76
00:05:55.290 --> 00:05:59.590
The steering angle gets closer to one and the wheels move to the left.

77
00:06:01.030 --> 00:06:01.950
This is perfect.

78
00:06:01.960 --> 00:06:04.580
If you orient to the right the wheels go to the right.

79
00:06:04.660 --> 00:06:07.560
If you orient to the left the wheels go to the left.

80
00:06:07.660 --> 00:06:09.940
We just accomplish something huge.

81
00:06:09.940 --> 00:06:15.100
The accelerometer is telling us how much gravitational acceleration is being applied on the vertical

82
00:06:15.100 --> 00:06:20.950
part of the phone and we're using this acceleration to represent how the phone is oriented and based

83
00:06:20.950 --> 00:06:22.740
on the orientation of the phone.

84
00:06:22.750 --> 00:06:28.350
We set our steering angle and we're using that steering angle to orient the wheels.

85
00:06:29.060 --> 00:06:35.660
Now note that we're actually orienting the wheel parents but since the wheels are children of the wheel

86
00:06:35.660 --> 00:06:41.360
parents as we have it right here in our scene file the wheels our children of our parents whereas the

87
00:06:41.360 --> 00:06:47.010
wheels are positioned exactly where the parents are whatever steering angle we apply to the wheel.

88
00:06:47.030 --> 00:06:50.810
Parents that steer applies to the wheels as well.

89
00:06:50.810 --> 00:06:56.540
One more thing to note is that we're adding the orientation to the vehicle variable the vehicle variable

90
00:06:56.660 --> 00:06:59.850
remember controls the behavior of our car.

91
00:07:00.110 --> 00:07:06.130
So by setting the steering angle for the vehicle we're setting a steering angle for the car itself.

92
00:07:06.170 --> 00:07:13.400
So from now on just know that whatever we do to this vehicle variable is going to apply to our car since

93
00:07:13.400 --> 00:07:20.140
we made it such that the vehicle controls the behavior of our car itself at all times.

94
00:07:20.140 --> 00:07:21.120
Now there is a bug.

95
00:07:21.250 --> 00:07:26.980
Remember how I was telling you to make sure that you orient the phone completely horizontally but such

96
00:07:26.980 --> 00:07:32.800
that the camera is positioned where your left hand is what if I positioned the camera where my right

97
00:07:32.800 --> 00:07:33.850
hand was.

98
00:07:34.120 --> 00:07:40.770
Let me just rerun the app wait till the world origin loads start detecting some surfaces once you've

99
00:07:40.770 --> 00:07:44.690
detected a large enough surface in your car.

100
00:07:47.190 --> 00:07:54.540
And right now my phone is positioned such that the camera is to my left as I move the film to the left

101
00:07:54.630 --> 00:07:56.370
the car goes left as well.

102
00:07:56.520 --> 00:07:59.160
If I orient my phone to the right the car goes to the right.

103
00:07:59.160 --> 00:08:01.290
Everything is perfect at the moment.

104
00:08:01.290 --> 00:08:09.260
Now what if I rotate my phone a full 180 degrees such that the phone is horizontal still.

105
00:08:09.280 --> 00:08:14.640
However the camera is positioned where my right hand is the camera of the phone.

106
00:08:14.940 --> 00:08:21.240
If I orient my phone to the left the wheels orient to the right if I orient to my phone to the right

107
00:08:21.570 --> 00:08:23.340
the wheels go to the left.

108
00:08:23.640 --> 00:08:25.180
Well here is what's happening.

109
00:08:25.200 --> 00:08:30.250
So when the phone is completely horizontal such that the camera is positioned where my right hand is.

110
00:08:30.360 --> 00:08:35.760
The vertical accelerations direction gets reversed and therefore the steering angle gets reversed as

111
00:08:35.760 --> 00:08:36.350
well.

112
00:08:36.360 --> 00:08:40.630
So we need a way of figuring out when the phone is oriented horizontally.

113
00:08:40.830 --> 00:08:47.160
But the other way around such that the camera is on the right and as we've been doing this entire time

114
00:08:47.430 --> 00:08:53.940
the only way to figure out how the phone is oriented a certain way is to use our acceleration data.

115
00:08:54.060 --> 00:09:02.730
This time we're going to use our acceleration X sprint that run the app so if I rotate my phone such

116
00:09:02.730 --> 00:09:08.870
that it's completely horizontal but the camera is positioned where my left hand is the acceleration

117
00:09:08.870 --> 00:09:14.630
due to gravity in the x direction whether I move to the right or left as negative.

118
00:09:14.660 --> 00:09:20.990
However if I reverse my orientation such that the phone is completely horizontal whereas the camera

119
00:09:20.990 --> 00:09:28.160
is positioned where my right hand is the acceleration due to gravity in the x direction is also reversed.

120
00:09:28.160 --> 00:09:35.210
So whether I move my phone to the right or the left it will be positive not negative.

121
00:09:35.240 --> 00:09:39.910
So now we know how to detect when the camera is positioned next to my right hand.

122
00:09:40.250 --> 00:09:43.710
When the acceleration in the horizontal direction is positive.

123
00:09:44.030 --> 00:09:56.040
So back to your view controller if the acceleration X is bigger than 0 so if the horizontal acceleration

124
00:09:56.040 --> 00:10:07.340
is positive then set the orientation equal to the reverse of our vertical acceleration.

125
00:10:07.530 --> 00:10:11.910
This makes sense since when the horizontal acceleration is bigger than zero.

126
00:10:12.120 --> 00:10:17.460
So when the phone's cameras positioned where my right hand is the vertical acceleration gets reversed

127
00:10:17.820 --> 00:10:23.850
and we're reversing and by adding this negative else if the camera is positioned where my left hand

128
00:10:23.850 --> 00:10:24.090
is.

129
00:10:24.090 --> 00:10:31.840
So if everything was as it was before just leave the orientation equal to their regular vertical acceleration.

130
00:10:31.860 --> 00:10:33.000
So here's what I just did.

131
00:10:33.090 --> 00:10:38.800
We're using the vertical acceleration to set our orientation the vertical acceleration is reversed.

132
00:10:38.820 --> 00:10:45.120
When the phone is rotated horizontally such that the camera position where my right hand is when the

133
00:10:45.120 --> 00:10:46.730
vertical acceleration is reversed.

134
00:10:46.770 --> 00:10:49.190
The steering wheel gets reversed as well.

135
00:10:49.200 --> 00:10:54.030
We also concluded that when the phone is in that position such that the camera is where my rear end

136
00:10:54.030 --> 00:10:57.190
is the x acceleration is always positive.

137
00:10:57.540 --> 00:11:00.240
And of course the acceleration is reversed.

138
00:11:00.240 --> 00:11:06.120
So if the x acceleration is positive then and reverse the Y acceleration and the steering angle should

139
00:11:06.120 --> 00:11:07.900
now be fixed.

140
00:11:08.010 --> 00:11:13.980
Otherwise if the acceleration not X is not bigger than 0 if the camera is positioned where my left hand

141
00:11:13.980 --> 00:11:16.220
is we have everything the way it was before.

142
00:11:16.380 --> 00:11:17.850
Now the bug should be fixed.

143
00:11:17.880 --> 00:11:18.780
So we're on the up

144
00:11:22.460 --> 00:11:29.550
going to wait till the world origin loads once it loads start detecting some surfaces once you've detected

145
00:11:29.600 --> 00:11:36.920
a large enough surface in your car and no matter how well orienting my phone if I go to the left wheel

146
00:11:37.010 --> 00:11:40.980
steer to the left if I go to the right the wheels steer to the right.

147
00:11:42.200 --> 00:11:47.110
So even if I reverse the orientation of the phone such that the camera is where in my right hand is

148
00:11:47.510 --> 00:11:49.580
if I go to the left the wheels go to the left.

149
00:11:49.610 --> 00:11:52.850
And if I go to the right the wheels go to the right as well.

150
00:11:52.850 --> 00:11:54.480
This is looking pretty good.

151
00:11:54.590 --> 00:12:00.380
Now that we're done with orientation we know how to steer the wheels based on the orientation of the

152
00:12:00.380 --> 00:12:02.240
phone and the next video.

153
00:12:02.270 --> 00:12:04.090
We're going to start driving the car.
