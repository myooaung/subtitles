1
00:00:00,190 --> 00:00:04,420
In your section we learn how to place household objects on horizontal planes.

2
00:00:04,620 --> 00:00:09,780
In this section we're going to build a vehicle that drives on horizontal pavement how it works.

3
00:00:09,780 --> 00:00:19,130
First you have to discover horizontal planes in your environment and put concrete on top of these planes.

4
00:00:19,360 --> 00:00:22,270
Once you have enough concrete place the car on top of it

5
00:00:25,690 --> 00:00:26,680
and have it Newf

6
00:00:30,360 --> 00:00:38,530
now discovering horizontal planes and placing concrete in their place we did something very similar

7
00:00:38,530 --> 00:00:44,740
to that in the last section when we did the floor is lava up the finished code for floor as lava is

8
00:00:44,740 --> 00:00:45,980
in your resources folder.

9
00:00:45,980 --> 00:00:47,950
So make sure to download it.

10
00:00:47,950 --> 00:00:51,100
I'm going to open mine up right here anyway.

11
00:00:51,220 --> 00:00:51,890
Run the app

12
00:00:55,160 --> 00:00:56,720
if you ever get a crash like this.

13
00:00:56,720 --> 00:00:58,640
Just make sure to clean your app

14
00:01:07,300 --> 00:01:09,200
so in case you forgot how it works.

15
00:01:09,280 --> 00:01:14,810
As I move around horizontal planes are replaced with loving.

16
00:01:14,990 --> 00:01:22,030
However since we're going to be driving we need to replace the lava with concrete.

17
00:01:22,520 --> 00:01:27,590
So first changed the name from Flores lover to vehicle.

18
00:01:27,830 --> 00:01:36,280
Do it by going to the project navigator and right here on the page icon instead of Florez lover right.

19
00:01:36,350 --> 00:01:36,880
Vehicle

20
00:01:40,550 --> 00:01:41,790
press rename.

21
00:01:42,100 --> 00:01:43,200
OK.

22
00:01:43,280 --> 00:01:46,370
And do the same thing for the project folder.

23
00:01:46,490 --> 00:01:49,810
Rename it from Florez lover to vehicle.

24
00:01:49,850 --> 00:01:54,790
We're going to be reusing this code instead of reinventing the wheel.

25
00:01:54,800 --> 00:01:56,230
Now if I build the app

26
00:01:59,500 --> 00:02:00,710
there is one error.

27
00:02:00,970 --> 00:02:09,230
The error is that could not read data from users floor level and put up the list to fix that.

28
00:02:09,280 --> 00:02:11,260
Go with your project Navigator.

29
00:02:11,410 --> 00:02:18,690
And we need to choose our end put up this fight click on your input up list and choose.

30
00:02:18,910 --> 00:02:20,430
This should be fixed by now.

31
00:02:20,680 --> 00:02:27,130
And the last thing we want to do is go to your project folder and just to keep things consistent.

32
00:02:27,160 --> 00:02:30,490
Rename the whole directory as vehicle as well.

33
00:02:30,760 --> 00:02:35,940
Click receive OK click on vehicle.

34
00:02:36,140 --> 00:02:40,140
Now we're officially loading a vehicle project not Floras lover.

35
00:02:40,430 --> 00:02:44,470
So rerun the app to make sure there are no crashes and everything works fine.

36
00:02:46,970 --> 00:02:51,350
There are no crashes and everything still works the way it should work.

37
00:02:52,010 --> 00:02:55,510
Ok back to our ex-cult project.

38
00:02:55,580 --> 00:02:59,780
So we've already done all of this code in section 6.

39
00:02:59,780 --> 00:03:06,370
If you're confused about this code in any way make sure to watch the first two videos of the last section.

40
00:03:06,860 --> 00:03:15,890
So first go to the assets folder and delete this image US-CERT make a new image set called concrete

41
00:03:19,870 --> 00:03:23,320
this image of concrete is in your resources folder.

42
00:03:23,320 --> 00:03:28,210
So make sure to download it in place your concrete image back into your assets folder.

43
00:03:30,540 --> 00:03:31,990
OK.

44
00:03:32,320 --> 00:03:40,190
And now in your view controller where we are setting the detected plane as lava set it to concrete instead

45
00:03:40,630 --> 00:03:48,620
by just replacing it with the concrete image we for auto complete to work there you go.

46
00:03:49,830 --> 00:03:52,010
Rerun the app to see how this works.

47
00:03:52,810 --> 00:03:55,210
I'm going to wait for the world origin to load.

48
00:03:55,250 --> 00:04:02,940
And as you've guessed if I place this on a horizontal surface instead of lover it places concrete.

49
00:04:02,960 --> 00:04:06,360
So right now I'm standing on top of concrete.

50
00:04:06,380 --> 00:04:15,170
We need to place our vehicle our car right in front of the phone back to code go to the main storyboard

51
00:04:18,320 --> 00:04:24,130
add a bunch to the Wii controller by writing button drag the button to the bottom left of your Wii controller

52
00:04:24,170 --> 00:04:31,170
pin it to the bottom spaced by 20 pixels and to the leading space by 28 pixels This will give it a what

53
00:04:31,340 --> 00:04:33,680
50 pixels and a height of 30

54
00:04:36,530 --> 00:04:44,770
had the four constraints go to the attributes and Specter scroll to the color tag the background color

55
00:04:44,770 --> 00:04:48,520
tag and give the button any background color you want.

56
00:04:48,520 --> 00:04:58,230
I'm going to give it a color of yellow and call this button and now open up the assistant editor and

57
00:04:58,320 --> 00:05:02,610
link the button to the View Controller with an IB action.

58
00:05:02,730 --> 00:05:11,070
So drag this button by pressing control on left click instead of I put action and call the IAB action

59
00:05:11,160 --> 00:05:18,750
ad car connect the IAB action close the assistant editor and back to your controller.

60
00:05:21,930 --> 00:05:29,040
Whenever we press the add on the add carbon we have to add a car in the current position of the phone.

61
00:05:29,100 --> 00:05:33,540
However for now we're just going to add a box in the current position of the phone.

62
00:05:33,930 --> 00:05:46,150
So right left box is equal to see a node with geometry I see in box with dimensions zero point one for

63
00:05:46,150 --> 00:05:51,270
the width height and length the chamfer radius will just be zero.

64
00:05:53,270 --> 00:06:02,180
Give the box a color of blue by writing books that geometry that first material that diffuse contents

65
00:06:02,270 --> 00:06:06,260
is equal to you color it up blue.

66
00:06:06,380 --> 00:06:11,780
You should know by now that the fuse is the color that spread across the surface of a node the color

67
00:06:11,780 --> 00:06:13,490
or texture.

68
00:06:13,490 --> 00:06:17,960
Now you need the current position of the camera since it is at that point in the scene view that you

69
00:06:17,960 --> 00:06:21,830
will add your box if you're a member from the drawing up

70
00:06:25,240 --> 00:06:31,780
this right here is the ex-cult project for the drawing up that we made in section 2 right here and will

71
00:06:31,780 --> 00:06:39,970
render a scene we discuss that position is a combination of orientation and location.

72
00:06:39,970 --> 00:06:46,070
We need to extract the location and orientation of the camera whenever we press this button.

73
00:06:47,320 --> 00:06:52,780
So the code I'm about to write in this IAB action should look very familiar to you because we are already

74
00:06:52,780 --> 00:06:57,970
did it in the drawing up we already did get the current position of the camera in the drawing up and

75
00:06:57,970 --> 00:06:59,840
we're about to do it again.

76
00:07:00,490 --> 00:07:01,310
OK.

77
00:07:01,540 --> 00:07:08,390
So back to your project we need to place the box in the current position of the camera.

78
00:07:08,700 --> 00:07:13,380
So before I declare my node First you need the point of view of the scene view.

79
00:07:13,650 --> 00:07:21,110
So Gardley at points of view is equal to scene view point of view.

80
00:07:21,570 --> 00:07:26,570
Else return we're unwrapping the point of view safely with a guard statement.

81
00:07:26,610 --> 00:07:32,250
And the point of you can change the current location and orientation of the camera view combining the

82
00:07:32,250 --> 00:07:35,850
location and orientation of the camera you get the current position.

83
00:07:35,880 --> 00:07:40,530
So if you remember from before location and orientation are encoded inside of the point of view and

84
00:07:40,530 --> 00:07:46,160
a transform matrix get the transform matrix by writing that transform is equal to a point of view does

85
00:07:46,200 --> 00:07:53,700
transform ex-drug the current orientation of your camera by writing like orientation is the will to

86
00:07:53,820 --> 00:08:01,320
see and vector 3 for now I'll just leave them at 0 0 and 0 and you remember from before that orientation

87
00:08:01,320 --> 00:08:05,680
is always encoded in this transform matrix such that it's in column 3.

88
00:08:05,790 --> 00:08:07,380
We already did it right here.

89
00:08:07,380 --> 00:08:11,970
So let's do it again by writing for The X field transform.

90
00:08:12,090 --> 00:08:13,480
And 3.

91
00:08:13,500 --> 00:08:15,620
So we're in the third column of The Matrix.

92
00:08:15,660 --> 00:08:19,120
And one third column of The Matrix row 1.

93
00:08:19,320 --> 00:08:22,880
This is where the x value of the Camors orientation is located.

94
00:08:22,890 --> 00:08:28,440
We've been through this before the Y and Zed fields of your orientation are placed in the second and

95
00:08:28,440 --> 00:08:30,210
third row respectively.

96
00:08:30,630 --> 00:08:34,190
So simply write transform that and 3:2.

97
00:08:34,230 --> 00:08:40,980
Second row is where the wind field is and transform that and 3:3 the third row is where these at fielders

98
00:08:41,070 --> 00:08:42,760
of the orientation.

99
00:08:42,760 --> 00:08:49,440
Also if you remember from before we concluded that this orientation is reversed so to reverse it all

100
00:08:49,440 --> 00:08:52,980
we did was add a negative value to each transform.

101
00:08:53,040 --> 00:08:55,320
So just put a negative for each one.

102
00:08:55,470 --> 00:08:58,690
And if you for and if you forget why we did this.

103
00:08:58,770 --> 00:09:02,040
Make sure to revisit lecture 2 of section 3.

104
00:09:02,040 --> 00:09:04,740
Now you need the current location of the camera.

105
00:09:04,890 --> 00:09:12,210
So right location is equal to SDN vector 3 0 0 and 0.

106
00:09:12,390 --> 00:09:16,050
The location of the X field is located in column 401.

107
00:09:16,200 --> 00:09:25,530
So just write transform dot and for one the location for the Y field is located in column 4 road to

108
00:09:25,570 --> 00:09:33,540
Tusa Detroit transform that and 4:2 and the said field as in column 4 row 3.

109
00:09:33,730 --> 00:09:38,480
Now we need to get the current position of the camera by combining location and orientation.

110
00:09:38,530 --> 00:09:51,140
So right let current position of camera is equal to orientation plus location.

111
00:09:51,160 --> 00:09:54,030
Now I could have just copied and pasted all of this.

112
00:09:54,070 --> 00:09:58,780
But for the sake of review I just decided to go through this a little more quickly this time.

113
00:09:58,960 --> 00:10:05,500
And as for this error we've already gone before and the air was that we cannot add to and vector 3 operands

114
00:10:05,950 --> 00:10:12,230
to fix this we made a function which modified the plus operator such that it can accept to SDN vectors

115
00:10:12,230 --> 00:10:13,520
or three types.

116
00:10:13,540 --> 00:10:18,110
So make sure to copy it from your A-R drawing project the way you are drawing.

117
00:10:18,110 --> 00:10:20,980
Our project is also in your resources folder.

118
00:10:21,250 --> 00:10:25,840
OK now that we added the location and orientation we have the current position of the camera in one

119
00:10:25,840 --> 00:10:31,720
variable placed the box in the current position of the camera by a writing box.

120
00:10:31,720 --> 00:10:37,040
That position is equal to current position of camera.

121
00:10:37,540 --> 00:10:43,910
And finally add the box to the scene view by writing self does scene view that scene.

122
00:10:44,290 --> 00:10:48,900
The root node thought actual node box.

123
00:10:49,390 --> 00:10:52,590
Run the app.

124
00:10:52,770 --> 00:10:54,540
Wait till the world origin loads

125
00:10:57,450 --> 00:11:00,050
I'm going to start detecting some planes.

126
00:11:03,440 --> 00:11:08,580
Pressed odd and the box shows up right in front of us were the cameras facing.

127
00:11:08,780 --> 00:11:14,360
No I notice that the boxes actually drop on the concrete for something to drop.

128
00:11:14,360 --> 00:11:15,840
You need gravity.

129
00:11:16,040 --> 00:11:24,040
Right now the boxes are weightless nodes and there are no forces being applied to them back in X code.

130
00:11:24,050 --> 00:11:26,770
We're going to give the box a physical body

131
00:11:32,190 --> 00:11:34,090
inside of our car.

132
00:11:34,260 --> 00:11:34,960
Right.

133
00:11:35,100 --> 00:11:43,350
Body is equal to se and physics body with a type of dynamic dynamic.

134
00:11:43,350 --> 00:11:48,770
So by putting dynamic we're seeing that we want the box to be affected by forces.

135
00:11:48,930 --> 00:11:50,640
Gravity is a force.

136
00:11:50,700 --> 00:11:53,580
We want the box to be affected by gravity.

137
00:11:53,580 --> 00:11:54,870
And as for the shape.

138
00:11:54,900 --> 00:11:55,380
Right.

139
00:11:55,410 --> 00:12:02,530
See in physics shape and the node is just going to be our box node.

140
00:12:02,930 --> 00:12:08,630
We need to place our body after we declare the box nodes and that we can use the box node right here.

141
00:12:08,930 --> 00:12:18,950
And as for the options we're going to write as S.N. physics shape options keep ask compound is equal

142
00:12:18,950 --> 00:12:23,170
to true whether this is true or false right now.

143
00:12:23,180 --> 00:12:24,870
Doesn't really make a difference.

144
00:12:24,950 --> 00:12:30,850
Basically if it's true it converts separate geometries into separate shapes and then joins them.

145
00:12:31,160 --> 00:12:38,630
If false it combines all of the geometry of your node into one shape the box node only has one shape

146
00:12:38,720 --> 00:12:43,280
one geometry so it doesn't really matter what we put for this value.

147
00:12:43,730 --> 00:12:45,320
But make sure that it's true.

148
00:12:45,620 --> 00:12:52,280
Since we're going to need it to be true once we add a car the car is going to have many geometries and

149
00:12:52,280 --> 00:12:55,030
we don't want them to be combined all into one.

150
00:12:55,130 --> 00:12:58,820
Since we're going to give the wheels a specific function.

151
00:12:58,880 --> 00:13:04,610
So anyway now just Redbox the physics body is equal to body.

152
00:13:04,940 --> 00:13:10,970
So all the physics that we apply to this body is now applied to our box node the box node is going to

153
00:13:10,970 --> 00:13:13,420
be affected by gravity and fall down.

154
00:13:13,610 --> 00:13:14,520
So we're on the up

155
00:13:17,490 --> 00:13:20,490
try and find some planes and replace them with concrete

156
00:13:23,390 --> 00:13:26,200
press Add in the box fall down.

157
00:13:26,240 --> 00:13:27,260
Gravity worked.

158
00:13:27,260 --> 00:13:29,810
Gravity was applied to the box.

159
00:13:29,810 --> 00:13:32,630
However the box just falls into oblivion.

160
00:13:33,950 --> 00:13:40,220
We need to give the concrete physical features such that when the box falls on it the concrete is able

161
00:13:40,220 --> 00:13:46,160
to support it and create lava is where we are adding concrete.

162
00:13:46,410 --> 00:13:53,110
So change this function from create lava to create concrete since we're not dealing with lava anymore.

163
00:13:53,420 --> 00:13:58,580
And instead of love no would change this to a concrete node.

164
00:13:59,120 --> 00:14:05,720
Do the same thing for anything else that needs the lava node right here and return the concrete node

165
00:14:05,750 --> 00:14:07,750
instead of the lava node.

166
00:14:07,910 --> 00:14:14,970
We should be get to go in we get an error right here telling us that create lava is an unresolved identifier.

167
00:14:15,260 --> 00:14:21,580
That's because it is it's now called create concrete and instead of this being the law of a node making

168
00:14:21,590 --> 00:14:26,440
a concrete node instead do the same thing for a did update.

169
00:14:26,510 --> 00:14:30,350
Right here it is named love a node change that the concrete note as well.

170
00:14:30,560 --> 00:14:37,310
This is not create Lovett's create concrete's do the same thing for love note right here.

171
00:14:37,850 --> 00:14:40,400
And we should be good to go for the rest.

172
00:14:40,430 --> 00:14:46,220
So I'm hoping that right now there are no traces of lava anywhere because we renamed our project vehicle

173
00:14:46,220 --> 00:14:49,570
and we replaced everything that lava no to concrete.

174
00:14:49,610 --> 00:14:57,020
So just like we gave the box a physics body we need to give the concrete for a physics body such that

175
00:14:57,020 --> 00:14:58,300
its static.

176
00:14:58,790 --> 00:15:12,810
So right less static body is equal to seen physics body not static and apply this physical body to our

177
00:15:12,810 --> 00:15:21,130
concrete floor by writing concrete node that physical body is equal to static body.

178
00:15:21,480 --> 00:15:23,460
Here is how this works.

179
00:15:23,460 --> 00:15:26,250
Static is designed for fixtures.

180
00:15:26,250 --> 00:15:29,030
Anything that's going to be fixed in one place.

181
00:15:29,100 --> 00:15:30,780
Something that does not move.

182
00:15:30,990 --> 00:15:35,880
But it needs to collide with other bodies it needs to support other bodies.

183
00:15:35,970 --> 00:15:41,970
We need our concrete floor to collide with the box to support the box.

184
00:15:41,970 --> 00:15:50,610
Static bodies are not affected by forces for example since we gave the concrete node a static body its

185
00:15:50,610 --> 00:15:58,170
able to interact with other physical bodies like the box but gravity won't affect it otherwise the floor

186
00:15:58,170 --> 00:16:00,540
would just fall into oblivion.

187
00:16:00,660 --> 00:16:06,630
The concrete floor is going to remain in its fixed position but it will be able to collide with any

188
00:16:06,630 --> 00:16:09,000
physical body that hits it.

189
00:16:09,000 --> 00:16:14,520
So in summary our concrete node is a fixture by making a static.

190
00:16:14,580 --> 00:16:17,560
Its not going to move and gravity won't affect it.

191
00:16:17,850 --> 00:16:24,030
However it will be able to collide with other objects so when the box falls on the concrete floor there

192
00:16:24,030 --> 00:16:27,460
will be an actual physical impact between the two.

193
00:16:27,840 --> 00:16:28,620
So run the

194
00:16:32,920 --> 00:16:40,930
wait till the origin loads detect horizontal surfaces.

195
00:16:41,040 --> 00:16:48,240
Now that you've detected a large enough concrete surface drop your box and the box actually lands on

196
00:16:48,240 --> 00:16:49,520
your concrete floor.

197
00:16:49,650 --> 00:16:51,220
There is an impact.

198
00:16:51,300 --> 00:16:58,350
So your box has a normal physics body such that it can interact with forces like gravity it can move

199
00:16:58,440 --> 00:17:01,850
and can collide with other physical bodies like the concrete floor.

200
00:17:02,770 --> 00:17:04,440
The concrete floor is static.

201
00:17:04,450 --> 00:17:08,850
Its a static body its not affected by gravity or any other forces.

202
00:17:08,980 --> 00:17:13,810
If it was affected by gravity the concrete floor would just fall into oblivion and wouldn't stay still

203
00:17:13,810 --> 00:17:15,520
like it is right now.

204
00:17:15,520 --> 00:17:22,950
However its static and the fact that its static it can't move but it can collide with other objects

205
00:17:23,430 --> 00:17:25,820
just like it's colliding with our box right now.

206
00:17:28,050 --> 00:17:32,130
And the next video we're going to turn this box node into an actual car.
