WEBVTT
1
00:00:00.290 --> 00:00:06.450
And the last video you are able to add a 3D model to the market scene view in this video we're going

2
00:00:06.450 --> 00:00:08.960
to add animations to that 3-D model.

3
00:00:11.430 --> 00:00:13.320
The animation will be the following.

4
00:00:13.370 --> 00:00:16.760
Every time you type on a jellyfish it does a shaky spin.

5
00:00:17.900 --> 00:00:24.190
Declare a function animate node with argument node of type or see a node.

6
00:00:24.560 --> 00:00:31.070
It will not have a return value and just expand the brackets and now call the function inside of handle

7
00:00:31.070 --> 00:00:31.980
top.

8
00:00:32.030 --> 00:00:42.860
So right here self animate node and right here results node and you know what instead of accessing the

9
00:00:42.860 --> 00:00:43.320
node.

10
00:00:43.340 --> 00:00:44.690
This way every time.

11
00:00:44.690 --> 00:00:48.570
Why not just make a node variable equal to results not node.

12
00:00:49.160 --> 00:00:55.280
And then just call node right here and we won't need this geometry any more because this was just for

13
00:00:55.280 --> 00:00:57.430
demonstration purposes.

14
00:00:57.430 --> 00:00:58.140
All right.

15
00:00:58.490 --> 00:01:04.610
So every time we tap on a jellyfish it's going to go to this statement because of the hit test is not

16
00:01:04.640 --> 00:01:05.420
empty.

17
00:01:05.810 --> 00:01:10.120
And every time the estimate it gets called it's going to call animate node.

18
00:01:10.520 --> 00:01:15.910
So an enemy node we need to animate the jellyfish such that it does a shaky spin.

19
00:01:15.980 --> 00:01:16.890
So to do that.

20
00:01:16.910 --> 00:01:17.230
Right.

21
00:01:17.240 --> 00:01:24.220
Less spin is equal to see a basic animation with key path position

22
00:01:27.150 --> 00:01:28.170
lower case.

23
00:01:28.170 --> 00:01:29.250
All right.

24
00:01:29.580 --> 00:01:36.150
So if you hold the option key and click on see a basic animation the first thing you should notice is

25
00:01:36.150 --> 00:01:38.750
that it lets you animate many things.

26
00:01:38.820 --> 00:01:45.130
For example you can animate opacity So the brightness of an object background color as well.

27
00:01:45.360 --> 00:01:48.410
So it animate the change in color.

28
00:01:48.510 --> 00:01:53.760
You can also animate the position the position is what we're going to animate.

29
00:01:53.970 --> 00:01:59.580
So if you notice from the previous demonstration when the jellyfish was doing its Shakey's spin that

30
00:01:59.580 --> 00:02:02.640
was just an animated change in position.

31
00:02:02.640 --> 00:02:12.340
So back to our function right spin the from value is equal to node presentation position.

32
00:02:12.690 --> 00:02:17.920
So presentation represents the current state of the object inside of the scene view.

33
00:02:18.060 --> 00:02:24.530
So basically in this line of code ensures that the animation starts in the current position of the node

34
00:02:25.230 --> 00:02:37.030
and then from the current position right spin to value is equal to A C and vector 3 0 0 and negative

35
00:02:37.030 --> 00:02:37.740
2.

36
00:02:38.170 --> 00:02:44.910
So we start in the From value the current position of the node in from the current position.

37
00:02:44.950 --> 00:02:49.100
Move 2 meters behind these that axis.

38
00:02:49.100 --> 00:03:03.100
So this animation to the node by writing node dot and animation spin for key position.

39
00:03:05.180 --> 00:03:08.370
So run the app press play

40
00:03:11.560 --> 00:03:17.610
click on the jellyfish and notice that it travels in behind the nodes axis.

41
00:03:17.740 --> 00:03:21.980
The animation stops and the jellyfish is back to its previous position.

42
00:03:22.030 --> 00:03:23.970
So back to X code.

43
00:03:24.130 --> 00:03:30.340
What if I told you that the node didn't actually move 2 meters it moved only one meter.

44
00:03:30.340 --> 00:03:34.050
This LCN vector 3 is relative to the world origin.

45
00:03:35.230 --> 00:03:41.630
So we basically told the node start from your current position which is one meter behind the world origin.

46
00:03:42.450 --> 00:03:48.930
And then travel to the position that's two meters behind the world origins axis but the node is already

47
00:03:48.930 --> 00:03:51.180
1 metres behind the world origin.

48
00:03:51.390 --> 00:03:57.780
So to move two metres behind the world origin the node only has to move one metre so to better explain

49
00:03:57.780 --> 00:04:01.570
this what if I put a negative one right here.

50
00:04:01.620 --> 00:04:06.180
So before your assumption would have been that the jellyfish would start at its current position and

51
00:04:06.180 --> 00:04:09.200
then move one meter behind these that axis of the node.

52
00:04:09.540 --> 00:04:16.690
So run the app press play tap on the jellyfish and nothing happens.

53
00:04:17.530 --> 00:04:23.800
So back to X code actually happening is that you start from the current position of the node and then

54
00:04:23.800 --> 00:04:30.610
you're moving one meter behind the axis relative to the world origin not the node but the jellyfish

55
00:04:30.640 --> 00:04:33.750
is already one meter behind the world origin.

56
00:04:34.000 --> 00:04:36.320
So you're just staying in the same spot.

57
00:04:36.730 --> 00:04:47.830
So to fix that instead of putting negative one here put node up presentation position that Zad minus

58
00:04:47.830 --> 00:04:50.290
one.

59
00:04:50.290 --> 00:04:55.890
So this basically says is from the current position of the Zad value of the node.

60
00:04:56.860 --> 00:04:59.170
Then go 1 metres backwards.

61
00:04:59.470 --> 00:05:10.200
So run the up press play tap the jellyfish and it goes one metre behind the axis of the node.

62
00:05:10.750 --> 00:05:11.040
All right.

63
00:05:11.050 --> 00:05:16.270
Now if I keep pressing this I noticed that the jellyfish goes one meter behind that's owns that axis

64
00:05:16.860 --> 00:05:23.080
but then the animation stops and the jellyfish comes back to its initial position very abruptly.

65
00:05:23.110 --> 00:05:32.370
So to have the jellyfish actually animate itself coming back back to X code right spin out or reverses

66
00:05:33.890 --> 00:05:35.250
is equal to true.

67
00:05:35.750 --> 00:05:41.830
So auto reverse makes sure that the node comes back to its initial position such that it's animated.

68
00:05:42.170 --> 00:05:43.350
So right here.

69
00:05:43.400 --> 00:05:46.760
Enemy 1 metre away from these that axis.

70
00:05:46.850 --> 00:05:54.360
But then since this is true it would animate back one meter to its initial position so to better observe

71
00:05:54.360 --> 00:06:01.510
this give the spin a duration of three seconds spin duration is equal to three.

72
00:06:01.590 --> 00:06:07.800
So it should take three seconds for it to go one meter behind its axis and then three seconds for it

73
00:06:07.800 --> 00:06:10.410
to come back to its initial position.

74
00:06:10.470 --> 00:06:20.990
So run the up press play tap the jellyfish and it goes forward three seconds later it comes back and

75
00:06:21.000 --> 00:06:23.370
it takes three seconds for it to come back.

76
00:06:23.640 --> 00:06:24.810
Perfect.

77
00:06:24.810 --> 00:06:26.290
Now back to X code.

78
00:06:28.520 --> 00:06:33.710
Make the duration 0.07 seconds instead of three seconds.

79
00:06:33.770 --> 00:06:36.670
So the animation now should be a lot faster.

80
00:06:36.740 --> 00:06:37.550
So rerun the

81
00:06:41.250 --> 00:06:48.830
press play top the jellyfish and the animation is really quick but its not very pretty to make it look

82
00:06:48.830 --> 00:06:55.890
like what we had in the demonstration back to X code were going to have to study it kind of vibrates

83
00:06:55.920 --> 00:06:57.390
in all directions.

84
00:06:57.390 --> 00:07:05.540
So for the x value have it move 0.2 meters to the left of the current horizontal position of the jellyfish

85
00:07:05.570 --> 00:07:15.580
by writing node presentation position X minus 0.2 and for the y value.

86
00:07:16.540 --> 00:07:26.210
Have it move 0.2 meters below the current vertical position by reading node presentation position misspelled

87
00:07:26.210 --> 00:07:38.630
presentation position y minus 0.2 and do the same thing for those that value that move 0.2 meters away

88
00:07:38.630 --> 00:07:47.090
from the node behind us all right so the node is going to move a small distance 0.2 meters in all directions

89
00:07:47.090 --> 00:07:54.340
of its orientation zero point two to the left point to below and point 2 away.

90
00:07:54.800 --> 00:08:00.940
And since auto reverse is true it's also going to animate itself coming back in all directions.

91
00:08:01.720 --> 00:08:02.140
All right.

92
00:08:02.140 --> 00:08:13.090
So run up press play top on the jelly fish and it goes 0.2 meters in all directions left down and 0.2

93
00:08:13.150 --> 00:08:19.600
meters away from these that Oxus and it comes back in all directions and it all happened so fast so

94
00:08:19.600 --> 00:08:22.330
it looks like it's vibrating very strongly.

95
00:08:22.420 --> 00:08:26.600
Now I want this vibration to repeat five times.

96
00:08:26.800 --> 00:08:34.610
So in X code right spin repeat count is equal to five.

97
00:08:34.610 --> 00:08:35.430
All right.

98
00:08:35.430 --> 00:08:38.670
Run the app press play.

99
00:08:38.700 --> 00:08:46.170
Tap the jellyfish and the animation repeats itself five times with each repeat being 0.07 seconds in

100
00:08:46.170 --> 00:08:48.000
all directions.

101
00:08:48.000 --> 00:08:48.360
All right.

102
00:08:48.360 --> 00:08:51.640
Notice how fast and strong the vibration is.

103
00:08:51.660 --> 00:08:53.450
Now there are two books to deal with.

104
00:08:53.700 --> 00:08:59.790
So in X code let me put the animation to two seconds to observe the bug more clearly.

105
00:08:59.790 --> 00:09:03.340
Run the app so Press play.

106
00:09:03.670 --> 00:09:06.240
If I touch the jelly fish it animates.

107
00:09:06.310 --> 00:09:12.240
But if I touch it as it's animating it does one more animation as it's already animating.

108
00:09:12.460 --> 00:09:16.220
And if I touch it again it just keeps animating over and over.

109
00:09:16.510 --> 00:09:23.030
We need to make sure that the jellyfish doesn't perform any animation when it's already being animated.

110
00:09:23.050 --> 00:09:25.070
So back to X code.

111
00:09:25.090 --> 00:09:31.570
Now the node itself has an array of animation keys since we gave an animation key right here.

112
00:09:32.110 --> 00:09:37.870
So when the node isn't animating the animation keys array for the node is empty.

113
00:09:38.020 --> 00:09:42.220
However when it is animating the animation Keizer it is not empty.

114
00:09:42.640 --> 00:09:52.900
So in handle top right after node if node animation keys that is empty so only one there isn't an animation

115
00:09:52.900 --> 00:09:58.670
currently going on then animate the node so run the app

116
00:10:02.700 --> 00:10:12.750
press play tap the jellyfish no matter how many times I keep pressing on it it doesn't do any more animations

117
00:10:13.140 --> 00:10:15.760
because the animation Keizer right is not empty.

118
00:10:17.100 --> 00:10:20.530
Now I'm just going to wait till this animation is done.

119
00:10:20.940 --> 00:10:25.080
So now that the animation is done the animation Keizer is empty.

120
00:10:25.140 --> 00:10:28.330
So if I press on it it animates again.

121
00:10:28.330 --> 00:10:30.150
All right this works perfectly.

122
00:10:31.240 --> 00:10:32.430
But there is one more bug.

123
00:10:32.470 --> 00:10:34.390
I did say before that there were two bugs.

124
00:10:34.420 --> 00:10:40.870
And the second one is if I keep pressing play it keeps adding jellyfish to that same spot which makes

125
00:10:40.870 --> 00:10:42.680
sense since we're telling it.

126
00:10:42.700 --> 00:10:47.760
So you need to make sure that if there is a jellyfish in the scene don't add another one.

127
00:10:48.100 --> 00:10:58.980
So back in X code in the main storyboard open up the assistant editor and link the player to the Wii

128
00:10:58.980 --> 00:11:02.720
controller with an IB outlet called the outlet plate.

129
00:11:03.170 --> 00:11:07.340
Close the assistant editor and back to the view controller.

130
00:11:07.740 --> 00:11:14.400
When you press the play button have it add a jellyfish but as soon as it adds the first jelly fish then

131
00:11:14.500 --> 00:11:24.580
the save will be playable and by writing self up play that is enabled is equal to false and then restore

132
00:11:24.580 --> 00:11:27.820
the animations to how we had them before.

133
00:11:27.820 --> 00:11:34.220
So put this back as 0.07 seconds and everything in here looks fine.

134
00:11:35.250 --> 00:11:38.580
Run the app press play.

135
00:11:38.580 --> 00:11:45.000
It adds a jellyfish and the play button is disabled so you can't add any more jellyfish no matter how

136
00:11:45.000 --> 00:11:46.480
many times you touch it.

137
00:11:46.680 --> 00:11:49.480
Tap the jellyfish and everything works fine.

138
00:11:49.920 --> 00:11:56.860
All right so now we have a 3D model and we learned how to animate a 3D model in the next video.

139
00:11:56.880 --> 00:12:00.810
We're going to finish our game by adding rules and timers.
