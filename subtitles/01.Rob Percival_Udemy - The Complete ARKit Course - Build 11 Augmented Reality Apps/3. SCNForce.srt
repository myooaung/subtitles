1
00:00:01,190 --> 00:00:07,390
The last video we built our basketball net in this video we're going to shoot a ball.

2
00:00:07,410 --> 00:00:08,690
The idea is simple.

3
00:00:08,790 --> 00:00:12,260
Whenever you touch the screen it shoots the ball into your net.

4
00:00:12,360 --> 00:00:15,920
The longer you touch the screen the further your ball goes.

5
00:00:15,930 --> 00:00:22,500
So override touches begin now as you remember from before it touches began gets triggered whenever you

6
00:00:22,500 --> 00:00:24,060
touch the screen.

7
00:00:24,120 --> 00:00:30,000
And before we shoot the ball we need to check and see if there is a basketball not to do that make a

8
00:00:30,000 --> 00:00:31,900
computed property.

9
00:00:31,900 --> 00:00:45,500
Var Baskett added of type bool when they return value and return self scene view the scene a node with

10
00:00:45,500 --> 00:00:51,110
name and the name that we're going to check for the basket node.

11
00:00:51,160 --> 00:00:59,770
Copy and paste it into your view controller recursively as false is not equal to no.

12
00:00:59,790 --> 00:01:06,360
So this checks if there is a basketball on the inside of your scene view and if there is this value

13
00:01:06,360 --> 00:01:11,420
will be true if there isn't a basketball not inside of your scene views root node.

14
00:01:11,580 --> 00:01:14,940
If it's no this value will be false.

15
00:01:14,940 --> 00:01:22,370
So in touch begin if self Baskett added is equal to true.

16
00:01:22,920 --> 00:01:26,630
So if there is a basketball court then we're going to shoot the ball.

17
00:01:27,830 --> 00:01:33,280
Now we're going to shoot the ball right where the camera is facing and the point of view of the camera.

18
00:01:33,530 --> 00:01:40,780
This is something we already did in the drawing up in the vehicle up and in the ruler up having practice

19
00:01:40,950 --> 00:01:44,390
at least three times pause the video and try this one on your own.

20
00:01:49,770 --> 00:01:53,310
So what you would do is get the point of view of the scene view by writing.

21
00:01:53,310 --> 00:02:04,430
Guard let point of view is equal to self does scene view point of view point of view as you remember

22
00:02:04,430 --> 00:02:09,470
from before has the current orientation and location of the film camera view point of view.

23
00:02:09,470 --> 00:02:15,390
We discussed in section two that the location is in Column number four of the transform matrix.

24
00:02:15,390 --> 00:02:23,560
So location is equal to c and vector 3 and I seem to have forgotten to put my else return clause.

25
00:02:24,030 --> 00:02:29,550
So SDN vector 3 point of view transform.

26
00:02:30,010 --> 00:02:30,610
And you know what.

27
00:02:30,640 --> 00:02:32,800
Instead of always the clearing point of view right here.

28
00:02:32,800 --> 00:02:40,000
Let me just make a transform variable equal to point of view transform and right here or just put transform

29
00:02:40,690 --> 00:02:46,480
dot and for one the X of the location is located in column for row 1.

30
00:02:46,480 --> 00:02:54,200
As we discussed before the why isn't column 4 road 2 and the Zad field is in column for row 3.

31
00:02:54,250 --> 00:03:01,640
Now we need the orientation of the camera view which would simply be left orientation is equal to c

32
00:03:01,640 --> 00:03:04,980
and vector 3 transform.

33
00:03:05,060 --> 00:03:12,470
M3 1 orientation is in the third column transform not M3 to transform.

34
00:03:12,490 --> 00:03:18,260
And 3:3 and we discussed before that the orientation is reversed.

35
00:03:18,370 --> 00:03:23,790
So to honor reverse it just add a negative to each field.

36
00:03:23,860 --> 00:03:27,250
And now finally to get the current position just right.

37
00:03:27,300 --> 00:03:33,790
Position is equal to location plus orientation.

38
00:03:34,070 --> 00:03:40,500
And we should get an error very soon telling us that we cannot combine these two types and it's right

39
00:03:40,560 --> 00:03:41,250
there.

40
00:03:41,250 --> 00:03:45,140
The binary operator cannot be applied between two of the vector three operands.

41
00:03:45,300 --> 00:03:50,650
And to fix that we made a certain function which modified this binary operator.

42
00:03:50,790 --> 00:04:00,930
So right phunk Plus which takes an to see and vector 3 types a left hand side and a right hand side

43
00:04:01,890 --> 00:04:04,060
and from the two LCN vectors.

44
00:04:04,070 --> 00:04:09,000
3. you're adding simply return another third dimensional vector

45
00:04:12,140 --> 00:04:15,400
and just return a C and vector 3 make.

46
00:04:15,650 --> 00:04:22,790
So from the two vectors that we're adding make a new vector such that we're adding the X fields of both

47
00:04:22,790 --> 00:04:29,110
vectors left dot X plus right dot X we're adding the y fields as well.

48
00:04:30,860 --> 00:04:38,590
And the set fields left outside plus right outside cat.

49
00:04:38,800 --> 00:04:44,200
Now the error should be gone and we have the current orientation and location in one variable.

50
00:04:44,200 --> 00:04:46,050
We have the position of the camera.

51
00:04:46,270 --> 00:04:50,280
So we want to position our basketball in this exact position.

52
00:04:50,380 --> 00:04:52,320
First we have to make a basketball note.

53
00:04:52,360 --> 00:05:04,060
So let ball is equal to C.A. with a geometry of C and sphere which has a radius of about zero point

54
00:05:04,360 --> 00:05:07,700
three meters 30 centimeters.

55
00:05:07,910 --> 00:05:17,380
And now give the ball a diffuse color of blue by writing Balado geometry first material dot to fuse

56
00:05:17,890 --> 00:05:23,470
contents is equal to you like colored dark blue.

57
00:05:23,470 --> 00:05:30,050
And finally just position the ball exactly in the position of the camera view by writing ball up position

58
00:05:30,760 --> 00:05:33,130
equal to position.

59
00:05:33,130 --> 00:05:40,030
Now just on the ball to the scene view by writing self-deceit you'd seen a root node dot ChildNet and

60
00:05:41,130 --> 00:05:42,370
ball.

61
00:05:43,230 --> 00:05:50,700
So I just want to test this bool value first and foremost so run the app.

62
00:05:50,730 --> 00:05:57,220
So if I try and place a ball right now it should not get placed because a Baskett was not added.

63
00:05:57,330 --> 00:06:03,950
So if I detect a surface and then on a basketball court right here now I can add my basketball.

64
00:06:03,960 --> 00:06:05,300
It's right here in front of me.

65
00:06:06,770 --> 00:06:08,350
It's just floating.

66
00:06:08,390 --> 00:06:13,230
Now the ball looks kind of blend at the moment in your resources folder.

67
00:06:13,250 --> 00:06:17,310
I'm just on the run up in your resources folder.

68
00:06:18,610 --> 00:06:25,960
There is a picture of a basketball or a texture of a basketball I should say so in X code making new

69
00:06:26,040 --> 00:06:29,230
images called the ball

70
00:06:32,140 --> 00:06:41,380
and your basketball texture right into it back into your view can truly set the diffuse equal to your

71
00:06:41,380 --> 00:06:41,920
ball.

72
00:06:41,940 --> 00:06:47,130
Instead let me just run the see how that looks.

73
00:06:49,170 --> 00:06:56,050
Trying to tuck a horizontal surface it just started talking once your real orange and loaded loaded

74
00:06:57,000 --> 00:07:04,290
your court now your ball and there is are about skiable it looks pretty darn cool.

75
00:07:04,440 --> 00:07:07,810
Now how do we actually launched this ball towards the net.

76
00:07:08,680 --> 00:07:15,670
To launch something we need to apply a force on it to apply a force on the Snoad it needs to be a physics

77
00:07:15,700 --> 00:07:16,870
body.

78
00:07:16,900 --> 00:07:18,370
So back to your controller

79
00:07:20,980 --> 00:07:21,570
right here.

80
00:07:21,640 --> 00:07:22,220
Right.

81
00:07:22,240 --> 00:07:26,590
Body is equal to c in physics body

82
00:07:30,030 --> 00:07:38,310
the type will be dynamic dynamic simply means that the body will be affected by forces like gravity

83
00:07:38,460 --> 00:07:40,640
and other applied forces.

84
00:07:40,680 --> 00:07:41,920
And as for the shape.

85
00:07:41,970 --> 00:07:42,570
Right.

86
00:07:42,630 --> 00:07:44,150
See C and physics shape

87
00:07:47,020 --> 00:07:49,960
and it will have the shape of a ball.

88
00:07:50,110 --> 00:07:52,530
So the node will simply be our ball

89
00:07:55,520 --> 00:07:58,130
and we don't need any options.

90
00:07:59,080 --> 00:08:08,320
Now give our ball node this physics body by writing ball the physics body is equal to body.

91
00:08:08,650 --> 00:08:12,640
Now that the node has a physics body we can apply a force to it.

92
00:08:12,640 --> 00:08:18,480
And before I go into any of this if you're confused by physics bodies in any way make sure to visit

93
00:08:18,480 --> 00:08:22,970
the vehicle section of this course we covered them very Thorley.

94
00:08:23,110 --> 00:08:33,360
Anyway now we need to apply a force on our ball to do that simply right ball physics body apply force.

95
00:08:33,580 --> 00:08:39,580
The first argument is the direction the direction at which we're going to launch the ball the direction

96
00:08:39,580 --> 00:08:42,610
in which we're going to launch the ball is simply the direction the film is facing.

97
00:08:42,610 --> 00:08:44,880
So the orientation of the phone.

98
00:08:45,280 --> 00:08:47,530
So just right as CN vectors 3

99
00:08:49,960 --> 00:09:04,660
orientation dot X orientation dot Y and orientation dot said and such as impulse to true if as impulse

100
00:09:04,750 --> 00:09:10,690
is set to true the ball accelerates immediately which is exactly what we want as soon as we touch the

101
00:09:10,690 --> 00:09:11,320
screen.

102
00:09:11,320 --> 00:09:13,430
We want the ball to be launched immediately.

103
00:09:13,690 --> 00:09:17,690
Whenever you're launching projectiles like we are right now we're launching the ball.

104
00:09:17,740 --> 00:09:22,110
We need this to be true to simulate an instantaneous effect.

105
00:09:22,880 --> 00:09:24,020
So run up

106
00:09:27,710 --> 00:09:32,600
trying to attack the horizontal surface to start detecting very soon.

107
00:09:32,600 --> 00:09:35,360
There we go once in your court.

108
00:09:35,360 --> 00:09:43,150
If I tap the screen it should launch the ball it launches it but it launches it at a very small force

109
00:09:43,810 --> 00:09:44,500
at this rate.

110
00:09:44,500 --> 00:09:48,170
The ball will never reach the hoop unless I get really close.

111
00:09:48,490 --> 00:09:50,160
And it still doesn't reach it.

112
00:09:50,230 --> 00:09:56,710
So what if I wanted the force being applied on the ball to be much more powerful just make it variable

113
00:09:58,200 --> 00:10:03,400
var power of type float is equal to 1.0.

114
00:10:03,540 --> 00:10:09,780
And now inside of touch is begin where we are launching the ball.

115
00:10:09,950 --> 00:10:18,800
I mean just do it right here actually right here self up power is equal to 10 and now multiply every

116
00:10:18,800 --> 00:10:22,720
single direction in which the force is being applied by the power.

117
00:10:22,730 --> 00:10:30,860
So time's power in this case by ten than the force being applied on the ball will be ten times more

118
00:10:30,860 --> 00:10:34,760
powerful in every direction that it's being launched.

119
00:10:34,760 --> 00:10:35,510
So let me just do it.

120
00:10:35,510 --> 00:10:38,810
Time is power right here as well and run the app

121
00:10:42,650 --> 00:10:51,190
trying to detect the horizontal surface once it starts detecting it and your CT shoot your ball

122
00:10:53,930 --> 00:10:54,300
can't.

123
00:10:54,340 --> 00:10:57,430
Let me just try and aim better.

124
00:10:57,500 --> 00:10:59,730
And the ball reaches the net.

125
00:10:59,930 --> 00:11:03,730
However it doesn't bounce off of it.

126
00:11:03,740 --> 00:11:10,320
The reason being is that right now the hoop and the buckboard are just weightless hollow nodes.

127
00:11:10,460 --> 00:11:14,370
We need to give them a physics body so that they can interact with the ball.

128
00:11:14,750 --> 00:11:18,490
So back to your view controller inside of basket.

129
00:11:18,860 --> 00:11:19,220
Right.

130
00:11:19,220 --> 00:11:28,410
Baskett node does physics body is equal to a C in physics body that's static.

131
00:11:30,190 --> 00:11:31,940
We've used static before.

132
00:11:32,110 --> 00:11:38,830
Basically it means that the basket node can collide with other physical bodies but it will not be affected

133
00:11:38,830 --> 00:11:45,370
by forces like gravity or applied forces it will stay in its place which is exactly what we need.

134
00:11:45,370 --> 00:11:47,590
We need our back porch to stay in one place.

135
00:11:47,590 --> 00:11:49,600
We don't want it moving around.

136
00:11:49,600 --> 00:11:50,440
So run the up

137
00:11:54,390 --> 00:12:00,580
start detecting some surfaces as soon as your warlord's and load's detecting.

138
00:12:00,600 --> 00:12:05,770
Now if I try and shoot the ball that means aim really well at about board.

139
00:12:06,000 --> 00:12:11,350
If I shoot it bounces off but the ball can never actually go in.

140
00:12:12,520 --> 00:12:18,430
And the reason being is that air kit at the moment is not able to recognize the detail in the basket.

141
00:12:18,420 --> 00:12:23,000
Node such that this Taurus right here has a hole.

142
00:12:23,140 --> 00:12:27,180
It treats the whole as another shape but a hole is hollow.

143
00:12:27,190 --> 00:12:28,830
It shouldn't be a shape.

144
00:12:28,900 --> 00:12:35,740
So objects like our ball are able to interact and collide with the hole when they should simply just

145
00:12:35,740 --> 00:12:37,730
be going through it.

146
00:12:37,750 --> 00:12:46,970
So back to the view controller instead of putting static expand the argument for C and physics body

147
00:12:47,720 --> 00:12:51,650
and the type of the body will still be a static body.

148
00:12:51,650 --> 00:12:55,290
We still don't want it to be affected by external forces.

149
00:12:55,290 --> 00:13:04,710
And for the shape just put a C in physics shape the node will simply be our basket node.

150
00:13:04,960 --> 00:13:10,400
And as for the option right as you see in physics shape that option.

151
00:13:10,510 --> 00:13:14,740
Keep ask compound is equal to true.

152
00:13:14,740 --> 00:13:16,610
I've explained this one before.

153
00:13:16,780 --> 00:13:19,460
This should be a colon not an equal sign.

154
00:13:19,500 --> 00:13:25,090
Anyway I've explained this before by putting this archaic treat separate geometries separate shapes

155
00:13:25,150 --> 00:13:27,490
and joins them to make the resulting shape.

156
00:13:27,610 --> 00:13:30,900
So we'll treat the box in Taurus as separate shapes.

157
00:13:31,120 --> 00:13:32,900
The default value is true.

158
00:13:33,130 --> 00:13:34,720
So it doesn't matter if you put this or not.

159
00:13:34,720 --> 00:13:36,530
I just thought it was good for review.

160
00:13:36,910 --> 00:13:38,890
I mean just fix the error whatever it is.

161
00:13:41,290 --> 00:13:42,790
Now here's the important part.

162
00:13:42,790 --> 00:13:47,810
Put us in physics shape option.

163
00:13:48,130 --> 00:13:52,350
Type will equal an S C and physics shape.

164
00:13:54,890 --> 00:13:59,380
Does shape type concave polyhedron.

165
00:13:59,510 --> 00:14:03,110
This option provides the highest level of detail.

166
00:14:03,320 --> 00:14:06,180
It can detect precise collision behavior.

167
00:14:06,530 --> 00:14:14,420
So now Eric KITT can recognize the finest detail in our basket node such that the Taurus and the Taurus

168
00:14:14,420 --> 00:14:20,930
has a hole and nothing can collide with the hole only with the highest level of detail.

169
00:14:20,930 --> 00:14:22,770
Can a kit recognize that.

170
00:14:23,270 --> 00:14:29,760
So run the app detecting some planes.

171
00:14:29,960 --> 00:14:38,480
Once you've detected a plane your court now shoot the ball and he actually scored.

172
00:14:38,480 --> 00:14:44,870
The balls can finally go through the hole if you think the balls are a bit too big you can change them

173
00:14:44,870 --> 00:14:46,980
to whatever size you want it's up to you.

174
00:14:50,710 --> 00:14:57,330
And so finally I want to do one more thing I want is that the longer I tap on the screen the more powerful

175
00:14:57,330 --> 00:15:00,580
the shot gets into Google.

176
00:15:00,810 --> 00:15:03,530
Right on to Google Chrome right.

177
00:15:03,570 --> 00:15:08,560
Each get hub timer.

178
00:15:08,690 --> 00:15:16,670
The second thing is what you need where it says each timer click on the page and scroll down right here

179
00:15:16,820 --> 00:15:23,720
to install the framework you'll see that it requires cocoa pods and if you still don't have cocoa pods

180
00:15:23,720 --> 00:15:24,250
installed.

181
00:15:24,290 --> 00:15:33,890
Go to Cocoa pods dark and copy this pseudo gem command right into your terminal press command space

182
00:15:33,890 --> 00:15:36,930
and do a spotlight search terminal.

183
00:15:37,040 --> 00:15:40,550
Press enter and just copy this right here.

184
00:15:40,550 --> 00:15:41,360
Press enter.

185
00:15:41,360 --> 00:15:43,610
Put your computer password and all that.

186
00:15:43,610 --> 00:15:49,400
I'm not going to reinstall cocoa pods because I already have it installed but if you don't make sure

187
00:15:49,400 --> 00:15:51,850
to put your password in then press enter.

188
00:15:51,980 --> 00:15:58,310
So I'm going to cancel this command by pressing control X and once you're done installing cocoa pods

189
00:15:58,940 --> 00:16:03,880
navigate to your project's directory by writing CD.

190
00:16:04,880 --> 00:16:07,060
Drag your project right on to here.

191
00:16:07,150 --> 00:16:14,290
Hoops and now that we are in the projects directory We want to initialize a pod file so right pod and

192
00:16:14,290 --> 00:16:22,140
net and now that we initialized a pod file access to your part file by writing and notepad file and

193
00:16:22,150 --> 00:16:29,950
right here we want to install our pod so you'll find the pod we need to install right here part each.

194
00:16:30,090 --> 00:16:33,220
Make sure to copy and paste what you have in front of you.

195
00:16:34,830 --> 00:16:44,460
Copy rights into your part file press control access to exit press the Wike you to save and POD install

196
00:16:44,460 --> 00:16:49,710
to install your pod.

197
00:16:49,830 --> 00:16:58,270
So once you're finished installing the pods close your X code project and now make sure to open up the

198
00:16:58,270 --> 00:17:03,710
workspace not the project just resize this.

199
00:17:04,220 --> 00:17:07,000
OK now into our view controller

200
00:17:10,590 --> 00:17:12,200
import each.

201
00:17:12,270 --> 00:17:15,200
If I just build the code this error should go away.

202
00:17:15,420 --> 00:17:17,460
Since I'm sure that we installed each pod

203
00:17:21,440 --> 00:17:23,090
so everything works out fine.

204
00:17:23,230 --> 00:17:33,680
And before I do anything all of this logic put inside of a function so make a new function func shoot

205
00:17:33,680 --> 00:17:41,630
ball with no argument and no return value and just copy all this logic right here and remove all of

206
00:17:41,630 --> 00:17:42,110
this

207
00:17:44,950 --> 00:17:58,870
first off the Klare a timer var timer is equal to each 0.05 seconds.

208
00:17:58,930 --> 00:18:00,850
Let me just make this a constant instead.

209
00:18:00,910 --> 00:18:02,820
We're not going to be modifying it.

210
00:18:02,850 --> 00:18:10,870
And so this timer once we activate it is going to trigger a block of code every 0.05 seconds and to

211
00:18:10,870 --> 00:18:15,830
trigger a block of code just right timer perform.

212
00:18:16,450 --> 00:18:17,300
And inside of it.

213
00:18:17,300 --> 00:18:17,590
Right.

214
00:18:17,590 --> 00:18:25,380
Self power plus equals one.

215
00:18:25,380 --> 00:18:30,000
So as soon as you touch the screen the timer will start.

216
00:18:30,000 --> 00:18:33,200
Let's try to then 1.0 to get rid of this error.

217
00:18:33,240 --> 00:18:39,730
So as I was saying and it's Tell me that the plus equal binary operator cannot be applied with a float.

218
00:18:39,730 --> 00:18:42,910
So let me just make this an integer instead.

219
00:18:43,250 --> 00:18:49,000
And we should be good to go so soon as you touch the screen this time or we'll start and it will trigger

220
00:18:49,030 --> 00:18:53,200
this block of code once every 0.05 seconds.

221
00:18:53,200 --> 00:18:59,320
So our power variable will increase by one every 0.05 seconds.

222
00:18:59,320 --> 00:19:06,190
So if you touch the screen for an entire second the power variable will equal 120 so the power of the

223
00:19:06,190 --> 00:19:09,600
shot will be and times more powerful.

224
00:19:09,610 --> 00:19:13,970
Finally just return does continue.

225
00:19:15,310 --> 00:19:23,170
So we want this block of code to keep getting activated and as soon as touch is and it gets triggered.

226
00:19:23,170 --> 00:19:28,990
So as soon as you release your fingers from the screen if there is a basketball court if self-taught

227
00:19:28,990 --> 00:19:38,190
basket it is equal to true stop the timer self timer stop and shoot the ball.

228
00:19:38,380 --> 00:19:41,560
Self don't shoot ball.

229
00:19:41,690 --> 00:19:47,730
And at the very end set the power right back to one so that it restarts.

230
00:19:47,900 --> 00:19:53,620
Finally when the view controller DNA realizes stop the timer as well.

231
00:19:53,700 --> 00:19:57,280
Self timer stop.

232
00:19:57,440 --> 00:20:02,570
We only have one view controller so our view controller will never be initialized and DNA will never

233
00:20:02,570 --> 00:20:03,390
get called.

234
00:20:03,710 --> 00:20:06,020
But I'm just going to leave this there as a reference.

235
00:20:06,050 --> 00:20:08,890
If you do end up using this part in the future.

236
00:20:08,960 --> 00:20:13,200
So before I run up I've noticed that the ball is a bit too big.

237
00:20:13,310 --> 00:20:21,770
Let me just change its size to about zero point to five meters and run the up and the build fails because

238
00:20:21,830 --> 00:20:26,540
I cannot multiply an integer by a float.

239
00:20:26,870 --> 00:20:32,140
So you know what let me just convert this back to a float.

240
00:20:32,610 --> 00:20:35,080
And we don't need the plus equals operator.

241
00:20:35,160 --> 00:20:39,600
Just make this equal to self-taught power plus one.

242
00:20:39,690 --> 00:20:41,660
This is the exact same thing as before.

243
00:20:41,670 --> 00:20:46,000
It's just that it's not letting us use the plus equal binary operator.

244
00:20:46,000 --> 00:20:55,170
And now we should be get to go run the app going to wait till the world origin loads should have loaded

245
00:20:55,170 --> 00:20:55,740
by now.

246
00:20:55,740 --> 00:21:00,370
Let me just detect some surfaces and your basketball court.

247
00:21:00,690 --> 00:21:09,300
Now if I shoot the ball nothing gets triggered and that's because touches and it never gets triggered.

248
00:21:12,170 --> 00:21:19,980
The reason being the top gesture recognizer interferes with the touch is functions that we override

249
00:21:20,810 --> 00:21:22,610
to fix that just right.

250
00:21:22,610 --> 00:21:24,590
Top right here.

251
00:21:24,590 --> 00:21:33,100
Tap josher recognizer cancels touches and view is equal to false.

252
00:21:33,560 --> 00:21:34,900
So this is true.

253
00:21:35,360 --> 00:21:41,960
Touches ended is considered a pending gesture and any pending gestures are canceled through retouches

254
00:21:41,980 --> 00:21:45,170
cancelled function by setting this to false.

255
00:21:45,230 --> 00:21:51,410
The touches ended function will not be cancelled and the view will receive every touch gesture and a

256
00:21:51,410 --> 00:21:52,910
multi-touch sequence.

257
00:21:53,160 --> 00:21:58,340
So touches end and will get sugared and our ball will be shot and before running the app let me just

258
00:21:58,340 --> 00:22:03,110
remove this hard coded self-talk power and we should be good to go.

259
00:22:03,110 --> 00:22:10,200
Run it.

260
00:22:10,490 --> 00:22:15,150
Going to wait till the world orange and loads once it loads.

261
00:22:15,150 --> 00:22:17,700
I'm going to add my surface.

262
00:22:17,700 --> 00:22:19,870
I mean my basketball court.

263
00:22:19,990 --> 00:22:22,260
They seem to have thrown a basketball too early.

264
00:22:22,640 --> 00:22:25,340
But let me just take a shot right now.

265
00:22:25,340 --> 00:22:33,850
If I hold the screen for a really long time the ball should go at a massive speed this is really strong.

266
00:22:33,890 --> 00:22:41,980
If I simply just tappet it's pretty low and if I just hold it for a little bit that is a fair shot.

267
00:22:42,000 --> 00:22:43,730
OK so there's three more books.

268
00:22:43,740 --> 00:22:49,500
The first one as soon as I tap the place the basketball court a ball gets placed right after.

269
00:22:49,500 --> 00:22:55,490
So let's focus on this book first and that's because as soon as you touch the screen both touches begin

270
00:22:55,560 --> 00:22:57,810
and touches ended as well as handle top.

271
00:22:57,810 --> 00:22:59,270
All of them get triggered.

272
00:23:00,740 --> 00:23:06,240
Hendel top as your basketball court which makes this computed property equal to true.

273
00:23:06,350 --> 00:23:10,670
And since this is true your ball is added.

274
00:23:10,820 --> 00:23:16,460
So instead of this being a computed property make it a simple Boole's value equal to false

275
00:23:20,600 --> 00:23:23,420
and so only once you add your basketball court

276
00:23:26,910 --> 00:23:32,630
set Baskett added equal to true only after 0.2 seconds or some small number like.

277
00:23:32,760 --> 00:23:35,040
So dispatch cue up Main.

278
00:23:35,240 --> 00:23:36,800
A sync after that.

279
00:23:36,800 --> 00:23:45,480
Now Plus 0.2 and after 0.2 seconds Foskett added equal to half true.

280
00:23:45,660 --> 00:23:46,880
So here is what would happen.

281
00:23:47,220 --> 00:23:54,530
Haendel top would get triggered as your basket then touches began and touches ended would get triggered.

282
00:23:54,570 --> 00:24:01,620
This would be false only up until 0.2 seconds but this would have already gone triggered and nothing

283
00:24:01,620 --> 00:24:02,240
would happen.

284
00:24:02,280 --> 00:24:03,710
The ball wouldn't get shot.

285
00:24:03,750 --> 00:24:06,330
This is false.

286
00:24:06,470 --> 00:24:08,660
So one more thing we want to add.

287
00:24:08,660 --> 00:24:12,470
Only if there isn't a basketball court already added then.

288
00:24:12,530 --> 00:24:13,660
A basketball court.

289
00:24:13,800 --> 00:24:18,730
So if Baskett is equal to false then a basketball court.

290
00:24:19,010 --> 00:24:20,520
Otherwise do nothing.

291
00:24:23,760 --> 00:24:25,860
OK one more thing I want to do.

292
00:24:25,980 --> 00:24:31,320
Every time I shoot the ball it just clutters more and more balls into the scene view we want to make

293
00:24:31,320 --> 00:24:36,010
sure that as soon as we shoot a ball it removes every single other ball from the scene view.

294
00:24:36,300 --> 00:24:38,090
So here is what you would do.

295
00:24:38,160 --> 00:24:43,080
Make a function phunk remove every other ball

296
00:24:46,870 --> 00:24:53,660
and just do self seen view seen root node.

297
00:24:53,740 --> 00:24:55,710
Numerous child notes.

298
00:24:56,350 --> 00:24:57,140
First argument.

299
00:24:57,160 --> 00:25:03,980
Note we don't care about the second argument and just student Noad dot removed from parent node.

300
00:25:04,870 --> 00:25:11,010
Now be careful the basketball court is also a child of the scene views root node.

301
00:25:11,320 --> 00:25:13,430
So here is how I would fix this.

302
00:25:13,450 --> 00:25:14,860
Every ball you shoot.

303
00:25:14,920 --> 00:25:17,420
Give it a name of basketball.

304
00:25:17,920 --> 00:25:23,500
So where it says shoot ball when we're declaring the ball right.

305
00:25:23,500 --> 00:25:24,710
Ball.

306
00:25:24,870 --> 00:25:30,750
Name and set the name equal to basketball.

307
00:25:31,030 --> 00:25:40,320
And now if no name is equal to basketball

308
00:25:42,910 --> 00:25:45,590
then remove that from the parent node.

309
00:25:46,360 --> 00:25:48,550
Now right before we shoot our ball.

310
00:25:48,550 --> 00:25:52,780
Make sure to remove every other ball.

311
00:25:52,810 --> 00:26:03,990
It's as simple as the run up can't wait till the world origin loads tucked a surface right now.

312
00:26:04,320 --> 00:26:06,350
Your basketball court.

313
00:26:06,760 --> 00:26:07,290
OK.

314
00:26:07,310 --> 00:26:12,650
Notice that a ball was not added as you are your court and now every time I shoot a ball

315
00:26:15,770 --> 00:26:18,190
it removes the ball that was previously shot.

316
00:26:19,270 --> 00:26:26,040
Now I can actually control how far the ball bounces back from the back board back to the controller.

317
00:26:26,110 --> 00:26:30,400
Just set body that restitution is equal to 0.2.

318
00:26:30,430 --> 00:26:32,030
So here is how this works.

319
00:26:32,040 --> 00:26:37,570
Restitution controls the energy that's lost when two objects collide.

320
00:26:37,570 --> 00:26:43,520
If the value is 1 then the basketball is not going to lose any energy when it collides with the back

321
00:26:43,520 --> 00:26:44,260
board.

322
00:26:44,260 --> 00:26:49,590
So it's going to bounce back at the same speed that it collided with the buckboard.

323
00:26:49,630 --> 00:26:56,830
If the value is 0 then the ball is going to lose all of its kinetic energy as soon as it collides with

324
00:26:56,830 --> 00:27:01,110
the buckboard and it's going to bounce back at a really low speed.

325
00:27:01,360 --> 00:27:06,280
So if we set it to zero point two the ball is not going to lose all of its energy.

326
00:27:06,490 --> 00:27:13,800
It's going to lose most of its kinetic energy and is going to bounce back at a pretty low speed.

327
00:27:13,840 --> 00:27:15,950
Let's run the app to see this in action.

328
00:27:17,030 --> 00:27:20,960
Wait till the world origin loads are detecting a surface.

329
00:27:20,960 --> 00:27:27,590
Put your basketball court and if you shoot the ball the ball balances out a pretty good speed.

330
00:27:27,590 --> 00:27:32,110
This is a very realistic bounce and that's it for the basketball up.

331
00:27:32,120 --> 00:27:34,350
This is one of the cooler ups.

332
00:27:34,370 --> 00:27:40,540
You learned how to apply forces on nodes and have them collide with other objects in the next section

333
00:27:40,550 --> 00:27:45,720
we're going to look into collisions by making our final op the shooter up.

334
00:27:45,740 --> 00:27:46,690
I'll see you there.
