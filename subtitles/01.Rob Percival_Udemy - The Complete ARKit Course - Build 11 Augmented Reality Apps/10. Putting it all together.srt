1
00:00:00,590 --> 00:00:05,340
In this video we're going to finish our game.

2
00:00:05,360 --> 00:00:10,670
So first off we need to download this framework called each to get to this framework.

3
00:00:10,670 --> 00:00:16,490
Make sure to write these keywords into Google and this should pop up first in the results.

4
00:00:16,490 --> 00:00:22,610
And so to download this framework first I'm going to go into it and if I scroll down you'll see that

5
00:00:22,610 --> 00:00:24,910
it requires cocoa pots.

6
00:00:25,070 --> 00:00:27,930
So if you don't already have go boards installed.

7
00:00:27,980 --> 00:00:30,080
Go to Cocoa pods dot org.

8
00:00:30,200 --> 00:00:34,980
Scroll down and copy this pseudo gem command right into your terminal.

9
00:00:35,510 --> 00:00:42,370
So to go to your terminal do a spotlight search by pressing command space right terminal press enter.

10
00:00:42,770 --> 00:00:47,860
And right here is where you will copy or should login Command press enter.

11
00:00:48,110 --> 00:00:49,690
Put your computer password.

12
00:00:49,700 --> 00:00:53,270
I'm going to put mine and here you press enter as well.

13
00:00:54,640 --> 00:00:56,840
So I've already installed cocoa pods.

14
00:00:56,890 --> 00:01:00,210
So I'm just going to fast forward this video.

15
00:01:00,230 --> 00:01:05,600
All right so once you're done installing cocoa pods you're going to navigate to your projects directory

16
00:01:06,660 --> 00:01:07,150
to do that.

17
00:01:07,200 --> 00:01:10,400
Go to your desktop and write the command CD.

18
00:01:10,470 --> 00:01:15,620
Our projects name is whack a jellyfish so make sure to drag the right here.

19
00:01:15,990 --> 00:01:24,030
Now we are in the projects directory and now write the command pod in it to initialize a pod file into

20
00:01:24,030 --> 00:01:25,800
your project.

21
00:01:25,980 --> 00:01:32,790
Write an applied file to access to your pod file and right here is where you will put all the pods or

22
00:01:32,850 --> 00:01:38,250
frameworks that you want to install to find the framework that we want to install the pod.

23
00:01:38,250 --> 00:01:46,710
Go to the Get help page and right here is what we have to write into our APOD file to install this framework.

24
00:01:46,710 --> 00:01:49,830
My version says 1.2 years could be different.

25
00:01:49,830 --> 00:01:51,570
So make sure you copy yours.

26
00:01:51,570 --> 00:01:52,660
Not mine.

27
00:01:53,040 --> 00:01:57,450
So copy whatever you have and right here paste it.

28
00:01:57,810 --> 00:02:03,390
Hold the keys control X to exit press the Y key to save and enter.

29
00:02:03,570 --> 00:02:12,880
Now write pod install to install your Pod's and we should be good to go very soon and we are so right

30
00:02:12,880 --> 00:02:13,190
now.

31
00:02:13,210 --> 00:02:14,410
In fact a jellyfish.

32
00:02:14,410 --> 00:02:16,530
You will notice a workspace.

33
00:02:16,750 --> 00:02:21,790
A workspace gets placed into your project whenever you have Pod's with your project.

34
00:02:21,790 --> 00:02:27,100
So make sure to close the project if you have it open and open up the workspace.

35
00:02:27,320 --> 00:02:36,510
So I'm getting this error because I have the XCode project open so make sure to close that stub tasks.

36
00:02:36,590 --> 00:02:39,390
So I'm going to close this and open it again.

37
00:02:40,640 --> 00:02:42,510
And Raggatt.

38
00:02:42,640 --> 00:02:46,930
So before anything let me just give you a quick refresh of how the game works.

39
00:02:46,990 --> 00:02:52,690
So you have a limited amount of time to touch a jellyfish and once you tap a jellyfish another one pops

40
00:02:52,690 --> 00:02:54,580
up in a random location.

41
00:02:54,580 --> 00:02:58,150
You have to look for the other one and top it before the time runs out.

42
00:02:58,210 --> 00:03:02,250
If it takes you too long to top the jellyfish you lose the game.

43
00:03:02,280 --> 00:03:08,800
So first we need to have it such that the jellyfish pops up in a random location not in front of you

44
00:03:08,800 --> 00:03:10,600
every time.

45
00:03:10,600 --> 00:03:15,350
So remember this function it's in your resources folder.

46
00:03:15,430 --> 00:03:21,430
We use that before to get a random decimal between a minimum number and a maximum number.

47
00:03:21,430 --> 00:03:26,650
So don't worry about this complicated return value just know that when you call this function you have

48
00:03:26,650 --> 00:03:32,140
to give it a minimum and the maximum value and the return value gives you a random decimal in between

49
00:03:32,140 --> 00:03:33,370
that range.

50
00:03:33,400 --> 00:03:39,490
So instead of placing the jellyfish right in front of us we're going to place the jellyfish in random

51
00:03:39,490 --> 00:03:40,740
positions every time.

52
00:03:41,140 --> 00:03:46,930
So give the x value a random position between negative 1 meters and 1 meter to the right by writing

53
00:03:47,120 --> 00:03:49,380
a random number.

54
00:03:50,350 --> 00:03:57,910
The first number will be negative 1 so 1 meters to the left and then 1 meters to the right give the

55
00:03:57,910 --> 00:04:06,370
y value a random position as well negative 0.5 meters below the world origin and 0.5 meters above the

56
00:04:06,370 --> 00:04:07,440
world origin.

57
00:04:07,480 --> 00:04:13,120
So we're going to get a vertical position in between this range and as for any set value you give it

58
00:04:13,120 --> 00:04:14,740
a random position as well.

59
00:04:14,740 --> 00:04:22,330
By also putting random numbers and make it negative 1 meter behind these add axis and 1 meter in front

60
00:04:22,330 --> 00:04:23,590
of the set axis.

61
00:04:23,590 --> 00:04:26,800
So we're going to get a depth in between that position as well.

62
00:04:28,460 --> 00:04:36,470
So now that we have a variety of positions of where the jellyfish could be run and the soap press play

63
00:04:37,210 --> 00:04:39,790
and now try and find your jelly fish it could be anywhere.

64
00:04:39,810 --> 00:04:41,870
And mine is right here.

65
00:04:42,190 --> 00:04:48,320
And so when I tap on the jelly fish after it animates I need the jelly fish to be removed from the scene

66
00:04:48,320 --> 00:04:48,940
view.

67
00:04:49,280 --> 00:04:53,770
So back to X code for the jellyfish to be removed right after it.

68
00:04:53,770 --> 00:04:55,670
Estimates go right here.

69
00:04:55,700 --> 00:05:03,680
So right after animate node just right node dot removed from parent node the parent node is the seen

70
00:05:03,680 --> 00:05:04,490
views root node.

71
00:05:04,490 --> 00:05:09,290
So by removing the node from the scene views root node where removing it from the scene view essentially.

72
00:05:09,420 --> 00:05:11,210
So it should disappear.

73
00:05:11,210 --> 00:05:13,080
So run the app again.

74
00:05:14,870 --> 00:05:18,630
So press play try and find your jellyfish.

75
00:05:18,650 --> 00:05:21,770
It could be anywhere maybe on top.

76
00:05:21,810 --> 00:05:23,830
Nope try the bottom

77
00:05:27,710 --> 00:05:28,990
and there it is right behind you.

78
00:05:29,060 --> 00:05:35,630
Now if I tap on the jelly fish it disappears and before it has the chance to fully animates So we need

79
00:05:35,630 --> 00:05:40,920
to make sure that this line of code only gets triggered once the entire animation is done.

80
00:05:41,390 --> 00:05:44,470
And so to do that we need a scene transaction.

81
00:05:44,570 --> 00:05:48,710
A transaction can be used to control animations.

82
00:05:48,710 --> 00:05:58,400
So start a transaction by writing a CN transaction see transaction that begin and make sure to put that

83
00:05:58,430 --> 00:06:03,560
right before animate node.

84
00:06:03,690 --> 00:06:04,320
All right.

85
00:06:04,320 --> 00:06:11,130
So by calling animate node right in front of a CN transaction not begin it's officially part of this

86
00:06:11,130 --> 00:06:12,490
transaction.

87
00:06:12,780 --> 00:06:16,780
And the only animation that I want in this transaction is animate node.

88
00:06:16,860 --> 00:06:21,410
We don't want the removal from the parent know to happen in the transaction as well.

89
00:06:21,630 --> 00:06:26,670
We want the removal to happen after the animation is completed.

90
00:06:26,790 --> 00:06:30,020
So we need to have this in a completion block.

91
00:06:30,140 --> 00:06:41,610
So once we're done animations call seeing transaction completion block is equal to a closure block and

92
00:06:41,610 --> 00:06:48,580
just put remove from parent node inside of the closure minimize all the ugly space.

93
00:06:48,640 --> 00:06:54,710
OK so once everything in this transaction is complete once this animation is done then remove the jellyfish

94
00:06:54,810 --> 00:06:56,340
from the parent node.

95
00:06:56,340 --> 00:07:05,970
Now to finally trigger all of this all we have to do is write a scene transaction document now run the

96
00:07:05,970 --> 00:07:11,450
app press play find your a jellyfish.

97
00:07:11,460 --> 00:07:17,380
I hope it's somewhere a bit more convenient this time and it is and top your jellyfish.

98
00:07:17,730 --> 00:07:20,570
Once the animation is done then it is removed.

99
00:07:20,610 --> 00:07:23,350
So this worked out perfectly.

100
00:07:23,370 --> 00:07:26,590
Now the OP is finally shaping up.

101
00:07:26,630 --> 00:07:26,900
All right.

102
00:07:26,900 --> 00:07:32,880
So now once the jellyfish is gone we need to add a new one to another random position.

103
00:07:32,900 --> 00:07:37,460
So back to X code right after you remove the node.

104
00:07:37,580 --> 00:07:40,330
It's as simple as just adding another one.

105
00:07:40,580 --> 00:07:46,140
So find the function node and call it right here self dot node

106
00:07:48,910 --> 00:07:50,580
OK.

107
00:07:51,180 --> 00:07:53,230
Now rerun the app.

108
00:07:53,370 --> 00:07:59,280
So wait for the device to recognize its surroundings so that things don't get messed up and once you

109
00:07:59,280 --> 00:08:00,630
see the world origin.

110
00:08:00,630 --> 00:08:03,510
So right here then you're good to press play.

111
00:08:03,600 --> 00:08:10,040
Now find your jellyfish could be anywhere and it's right in front of me conveniently.

112
00:08:10,100 --> 00:08:10,670
All right.

113
00:08:10,680 --> 00:08:15,190
Now if I press on the jellyfish it gets removed and I should find another one.

114
00:08:15,230 --> 00:08:16,670
Any other random location.

115
00:08:16,680 --> 00:08:18,120
And there it is.

116
00:08:18,280 --> 00:08:21,510
If I press on this it should make another one right here.

117
00:08:23,440 --> 00:08:26,470
All right so you get the point.

118
00:08:26,480 --> 00:08:30,490
So now in our storyboard we're going to add our timer label.

119
00:08:30,590 --> 00:08:40,940
So go to the storyboard and right here on top drag it down a bit and remove the top constraint by giving

120
00:08:40,940 --> 00:08:49,340
to this ruler symbol the size inspector and delete this constraint for now and add a UI view right on

121
00:08:49,340 --> 00:08:51,340
top of our view controller.

122
00:08:51,830 --> 00:09:00,010
You view put it right here on top drag its edges such that it matches that of the super view.

123
00:09:03,100 --> 00:09:10,580
And drag it down a bit so that it doesn't interfere with the info bar put it 20 pixels from the top

124
00:09:11,030 --> 00:09:19,960
or you know what 0 is fine zero to the leading zero to the trailing and give it a height of 50 pixels.

125
00:09:21,500 --> 00:09:22,900
There seems to be a problem.

126
00:09:22,970 --> 00:09:26,470
And the problem being is that I set the width as 50 not the height.

127
00:09:26,470 --> 00:09:28,670
Make sure to set the height as 50

128
00:09:31,800 --> 00:09:37,020
put the scene view 0 pixels from the bottom of the view.

129
00:09:38,010 --> 00:09:44,760
And write in the view we're going to add a label or line the label inside of the view vertically and

130
00:09:44,760 --> 00:09:45,680
horizontally.

131
00:09:48,850 --> 00:09:53,990
Give the label a text of let's play.

132
00:09:54,760 --> 00:09:59,140
So before the timer starts it's just going to have this playful text.

133
00:09:59,140 --> 00:10:04,560
I'm going to give it a font of Avenir next since that's usually the good one to go with.

134
00:10:04,570 --> 00:10:08,120
It just looks nice and a font size of 22.

135
00:10:08,560 --> 00:10:12,400
You can give it any font size you want and we're good to go.

136
00:10:12,400 --> 00:10:19,420
So open up the assistant editor and right to the top of the Wii controller connect the label with an

137
00:10:19,420 --> 00:10:27,850
IBM let call the label timer connect it close to the assistant editor and back to the view controller

138
00:10:28,210 --> 00:10:30,950
declare a variable timer.

139
00:10:31,120 --> 00:10:37,310
Right on top of all the outlets are actually var timer is equal to each.

140
00:10:37,330 --> 00:10:37,660
All right.

141
00:10:37,660 --> 00:10:40,550
So we haven't imported our each framework yet.

142
00:10:40,870 --> 00:10:44,710
So remember the framework we installed with cocoa pods we're about to use that right now.

143
00:10:44,710 --> 00:10:55,630
So import each and then write var timer is equal to each one dot seconds.

144
00:10:55,630 --> 00:11:04,560
All right so this timer is going to keep counting up by a 1 second.

145
00:11:04,590 --> 00:11:07,560
It looks like these two variables are conflicting names.

146
00:11:07,650 --> 00:11:11,540
So delete the IAB outlet go to the main storyboard.

147
00:11:11,550 --> 00:11:16,020
Make sure you can link this label to what it was connected to before.

148
00:11:16,500 --> 00:11:18,920
And back to the assistant editor.

149
00:11:19,020 --> 00:11:23,050
I'm just going to rename this to be Taimur label

150
00:11:28,580 --> 00:11:32,060
close to the assistant editor and back to the view controller.

151
00:11:32,880 --> 00:11:39,500
Put this on top of all the outlets to avoid confusion and declare a variable count down.

152
00:11:39,520 --> 00:11:46,740
So var count down is equal to 10 seconds.

153
00:11:46,740 --> 00:11:48,990
Now in the bottom of your class.

154
00:11:49,230 --> 00:11:51,990
Now first off this seems to be outside of your class.

155
00:11:51,990 --> 00:11:54,010
So make sure that it's inside.

156
00:11:54,030 --> 00:11:57,030
It doesn't really matter it's just cleaner for it to be that way.

157
00:11:57,360 --> 00:12:06,840
And now in the bottom of your class right phunk set timer which takes a no argument and has no return

158
00:12:06,840 --> 00:12:07,340
value.

159
00:12:08,940 --> 00:12:13,500
When the user presses the play button we're going to make sure to call this function.

160
00:12:13,530 --> 00:12:30,810
So inside of play right here just right self set timer inside of the function call self timer up perform.

161
00:12:30,820 --> 00:12:38,140
OK so right here the timer is going to keep counting up by one second every time the timer counts up.

162
00:12:38,150 --> 00:12:44,680
Second any block of code in here is going to get triggered this closure also has the return value of

163
00:12:44,720 --> 00:12:45,660
next step.

164
00:12:45,730 --> 00:12:47,410
I'll explain what that is in a bit.

165
00:12:47,800 --> 00:12:55,250
So every time the timer counts up by a second decrement the countdown variable by minus 1.

166
00:12:55,720 --> 00:12:59,890
So it's going to go from 10 9 8 etc..

167
00:13:00,160 --> 00:13:07,720
Set the timer label self timer label that text is equal to whatever the countdown is.

168
00:13:07,780 --> 00:13:11,100
But make sure it's the string value of the countdown.

169
00:13:11,300 --> 00:13:14,820
So string self-doubt count down.

170
00:13:15,370 --> 00:13:22,240
And now to get rid of this error discloser expect a return value the return value specifies to the timer.

171
00:13:22,270 --> 00:13:23,220
What to do.

172
00:13:23,260 --> 00:13:25,150
Every time it counts up.

173
00:13:25,450 --> 00:13:26,850
So every time it counts up.

174
00:13:26,860 --> 00:13:30,800
Second just keep counting and continue counting.

175
00:13:31,450 --> 00:13:31,930
OK.

176
00:13:31,960 --> 00:13:41,720
So we're in the up once I press play or the timer should start and it starts now there is a bug in this

177
00:13:41,780 --> 00:13:49,730
and you'll find that once it reaches 0 2 1 0 and it keeps going down.

178
00:13:49,730 --> 00:13:54,130
Now the problem is that in X code we just told them to keep continuing on.

179
00:13:54,170 --> 00:13:58,830
Every time it counts of by a second we need it to stop at one point.

180
00:13:58,850 --> 00:14:00,280
So right here right.

181
00:14:00,320 --> 00:14:05,700
If self does count down is equal to zero.

182
00:14:07,580 --> 00:14:10,080
Set the timer label 2 you lose.

183
00:14:10,130 --> 00:14:17,760
So self timer label that text is equal to use.

184
00:14:17,810 --> 00:14:23,970
So the idea is that if the user can't up a jellyfish before the ten seconds is up he loses.

185
00:14:23,960 --> 00:14:31,820
Stop the timer by returning dot stop not returning return dot stop.

186
00:14:31,840 --> 00:14:36,400
All right so this will not get called anymore because the count down reached zero.

187
00:14:36,740 --> 00:14:37,400
Run the app

188
00:14:40,590 --> 00:14:51,020
so press play the countdown starts and once it reaches zero you lose all right.

189
00:14:51,020 --> 00:14:58,100
Now back to X code we need it such that if the user tabs on a jellyfish it restores the timer back to

190
00:14:58,100 --> 00:14:59,250
10 seconds.

191
00:14:59,570 --> 00:15:10,720
So I think we store a timer with no argument or return value and just reset the count down to 10 set

192
00:15:10,720 --> 00:15:18,050
the timer label equal to the count down the string value of the countdown.

193
00:15:18,700 --> 00:15:24,730
Call this function inside of Hendel tap right here.

194
00:15:25,210 --> 00:15:30,890
So every time user taps on a jellyfish it's going to restore the timer to what it was.

195
00:15:31,030 --> 00:15:31,750
Run the app

196
00:15:35,840 --> 00:15:44,060
and I need to write self-torture storytime or since we're inside of a closure run the app so Press play.

197
00:15:44,100 --> 00:15:45,310
The countdown starts.

198
00:15:45,320 --> 00:15:48,190
Make sure to find your jellyfish before the timer runs out.

199
00:15:48,380 --> 00:15:52,280
And if I tap on it the timer gets back to turn.

200
00:15:52,310 --> 00:15:56,480
And now you have time to find your second one and you get the point.

201
00:15:56,480 --> 00:15:58,030
All right so now that I lost.

202
00:15:58,040 --> 00:16:04,580
Let me just find the other jellyfish which is right here now I need it so that if I lose I can't tap

203
00:16:04,610 --> 00:16:06,630
this jellyfish and have it remove.

204
00:16:06,680 --> 00:16:07,010
All right.

205
00:16:07,010 --> 00:16:09,830
So you shouldn't be able to tap a jelly fish when you lose.

206
00:16:09,890 --> 00:16:15,800
So and handle top make sure that nothing gets triggered unless the countdown is bigger than zero

207
00:16:18,530 --> 00:16:20,000
otherwise do nothing.

208
00:16:21,910 --> 00:16:23,860
OK so rerun the app.

209
00:16:24,220 --> 00:16:29,550
Ok so press play and I'm actually just going to lose on purpose.

210
00:16:29,590 --> 00:16:37,450
I am not going to tap this jellyfish and once it reaches zero if I start tapping on the jellyfish nothing

211
00:16:37,450 --> 00:16:42,970
happens because the countdown is not bigger than zero it is zero indeed.

212
00:16:42,970 --> 00:16:43,240
All right.

213
00:16:43,240 --> 00:16:44,800
So this works perfectly.

214
00:16:45,040 --> 00:16:53,380
Now since we lost I need to be able to reset the game in our recent IAB action when the user wants to

215
00:16:53,380 --> 00:16:55,820
reset the game just start the timer.

216
00:16:57,420 --> 00:17:06,220
And restore our count down by writing self we store timer Nabl the play button.

217
00:17:06,270 --> 00:17:13,960
Self play is enabled is equal to true so that the user can play again.

218
00:17:14,590 --> 00:17:23,250
And now we're going to remove the jellyfish from the scene view by writing scene view scene.

219
00:17:23,460 --> 00:17:30,760
The SS capitalized that scene the root node innumerate child nodes.

220
00:17:31,280 --> 00:17:36,730
The first argument is node leave this one blank and right here.

221
00:17:36,740 --> 00:17:43,360
Just remove the node from the scene view from the parent node.

222
00:17:43,360 --> 00:17:52,150
All right so run the app press play I'm going to tap on the first jellyfish.

223
00:17:52,360 --> 00:17:53,490
Everything is fine.

224
00:17:53,530 --> 00:17:55,290
Now if I wait 10 seconds

225
00:17:57,860 --> 00:17:58,910
I lose the game.

226
00:17:59,210 --> 00:18:05,630
And now I can just press reset and everything is back to normal and I can play again and I can even

227
00:18:05,630 --> 00:18:11,220
reset the game as I'm already playing which is why I gave the option right here to stop the timer.

228
00:18:12,120 --> 00:18:18,660
You've officially just made a small game with a market using notes textures and animations.

229
00:18:18,660 --> 00:18:21,970
Now it's finally time to look up planes.

230
00:18:21,990 --> 00:18:23,680
We'll do that in the next section.
