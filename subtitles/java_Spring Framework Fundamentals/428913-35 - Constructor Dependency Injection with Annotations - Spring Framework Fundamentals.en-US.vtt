WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.580
just because we're using annotations,

00:00:03.580 --> 00:00:06.720
it doesn't mean that we still can't define this style of dependency injection that we're

00:00:06.720 --> 00:00:07.160
using.

00:00:07.160 --> 00:00:09.250
So here this is using settle injection,

00:00:09.250 --> 00:00:09.910
but similar.

00:00:09.910 --> 00:00:11.870
We can also use constructor injection.

00:00:11.870 --> 00:00:14.770
How we could do that by simply putting in a constructor.

00:00:14.770 --> 00:00:17.120
You can do here,

00:00:17.120 --> 00:00:18.350
just move that up there.

00:00:18.350 --> 00:00:25.960
And then we just put the annotation on the constructor instead.

00:00:25.960 --> 00:00:28.790
And we can prove that it's using constructor injection,

00:00:28.790 --> 00:00:34.740
because if we de begins in the class here,

00:00:34.740 --> 00:00:36.210
we can see the spring framework.

00:00:36.210 --> 00:00:39.160
You is in the constructor to inject this mind repository dependency.

00:00:39.160 --> 00:00:40.670
And if you're curious,

00:00:40.670 --> 00:00:46.080
you can also see all of the different methods that Kurt in the spring framework to actually

00:00:46.080 --> 00:00:46.780
make that happen.

00:00:46.780 --> 00:00:49.220
And sometimes it's nice to have a bit of a look through that.

00:00:49.220 --> 00:00:49.600
So,

00:00:49.600 --> 00:00:50.070
for example,

00:00:50.070 --> 00:00:53.100
here's our main method where it's creating the clasp ethics.

00:00:53.100 --> 00:00:54.390
No application context,

00:00:54.390 --> 00:00:56.820
then is constructing it when it constructs it.

00:00:56.820 --> 00:00:57.890
It's doing a refresh,

00:00:57.890 --> 00:00:59.680
which basically loads everything in here.

00:00:59.680 --> 00:01:05.620
We can see the sequence of steps which spring considered girls through to start the

00:01:05.620 --> 00:01:06.890
application up here.

00:01:06.890 --> 00:01:08.610
It's doing the extension of Singleton's,

00:01:08.610 --> 00:01:15.040
but it's getting the beans going through all the different parts of the spring framework,

00:01:15.040 --> 00:01:19.750
basically to get to be in when it needs to get a bean to be able to resolve the constructor

00:01:19.750 --> 00:01:19.750
.

00:01:19.750 --> 00:01:23.150
And then finally we get but higher up.

00:01:23.150 --> 00:01:25.630
It's declaring a new instance,

00:01:25.630 --> 00:01:27.750
and then it's setting the repository in passing in here.

00:01:27.750 --> 00:01:29.960
So see,

00:01:29.960 --> 00:01:30.960
we put this the repositories.

00:01:30.960 --> 00:01:31.360
No.

00:01:31.360 --> 00:01:34.460
And then when we do f a two step over that makes it,

00:01:34.460 --> 00:01:36.100
signed it onto the class,

00:01:36.100 --> 00:01:37.290
so there's a repository there.

