WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:05.590
So we've seen constructor injection on the fact that we can pass in dependencies.

00:00:05.590 --> 00:00:07.470
But let's have a look at the alternative to this.

00:00:07.470 --> 00:00:11.700
The alternative to this if you're not doing dependency injection is to do something like

00:00:11.700 --> 00:00:12.160
this.

00:00:12.160 --> 00:00:19.250
And this is bad because this means that the service class is now tightly coupled with the

00:00:19.250 --> 00:00:20.250
repository class.

00:00:20.250 --> 00:00:21.150
In other words,

00:00:21.150 --> 00:00:27.770
you can't even create an instance of my service without my service also creating this very

00:00:27.770 --> 00:00:30.280
specific instance off the repository.

00:00:30.280 --> 00:00:33.320
We don't have the option to plug and play and said,

00:00:33.320 --> 00:00:33.560
You know,

00:00:33.560 --> 00:00:35.750
I'm gonna use the production repository one minute,

00:00:35.750 --> 00:00:39.680
the next minute I'm really use a test repository or a local development repository the next

00:00:39.680 --> 00:00:39.680
.

00:00:39.680 --> 00:00:41.570
We can't do that because effectively,

00:00:41.570 --> 00:00:46.240
we've hard coded the dependency or the accessing Orenstein chelation of that dependency

00:00:46.240 --> 00:00:48.360
inside the thing that needs it.

00:00:48.360 --> 00:00:52.050
And this is why dependency injection is such a powerful thing because,

00:00:52.050 --> 00:00:52.510
as we've said,

00:00:52.510 --> 00:00:57.280
by shifting the responsibility for the creation of the objects outside of the objects

00:00:57.280 --> 00:01:02.320
themselves to do this kind of thing constructor injection,

00:01:02.320 --> 00:01:05.060
we end up with a very nice on loosely coupled system,

00:01:05.060 --> 00:01:07.220
which also makes it much easier to Testa's well,

00:01:07.220 --> 00:01:08.460
which is something else you'll find.

00:01:08.460 --> 00:01:11.980
So that's constructor injection and simply as well,

00:01:11.980 --> 00:01:12.530
By the way,

00:01:12.530 --> 00:01:14.540
here we only have one argument.

00:01:14.540 --> 00:01:19.140
But if there are many different beans that you wanted to inject into the service being,

00:01:19.140 --> 00:01:20.120
that's also possible as well.

00:01:20.120 --> 00:01:24.220
We just put more constructor arcs passing in the index number,

00:01:24.220 --> 00:01:24.890
for example.

00:01:24.890 --> 00:01:26.130
There are different ways of doing it,

00:01:26.130 --> 00:01:28.760
but that's that's one way from what spent too much time on that.

00:01:28.760 --> 00:01:30.560
Because this is pretty much on older,

00:01:30.560 --> 00:01:32.680
way off configuring spring applications.

00:01:32.680 --> 00:01:33.430
There's a new,

00:01:33.430 --> 00:01:35.120
more modern way using annotations,

00:01:35.120 --> 00:01:36.000
which will see shortly.

00:01:36.000 --> 00:01:38.320
But this just gives you a good introduction to handle.

00:01:38.320 --> 00:01:39.140
Spring hangs together.

00:01:39.140 --> 00:01:40.980
It's good to go from the Basics festival,

00:01:40.980 --> 00:01:44.240
so going back and looking at the constructor,

00:01:44.240 --> 00:01:46.920
this is constructed dependency injection we're seeing now.

00:01:46.920 --> 00:01:51.450
This idea of passing in the dependencies to the bean that requires them is also known as

00:01:51.450 --> 00:01:52.570
the Hollywood principle.

00:01:52.570 --> 00:01:53.180
You know,

00:01:53.180 --> 00:01:54.610
from back in the old Hollywood days,

00:01:54.610 --> 00:01:56.030
when the agents used to say,

00:01:56.030 --> 00:01:56.780
Don't colors,

00:01:56.780 --> 00:01:59.480
we'll call you was the same idea with beans.

00:01:59.480 --> 00:02:02.350
The beans shouldn't call out to get the dependencies.

00:02:02.350 --> 00:02:03.160
Instead,

00:02:03.160 --> 00:02:05.450
they should be called on have the dependencies set.

00:02:05.450 --> 00:02:10.180
And yet that's known as the Hollywood principal system of the term that you might come

00:02:10.180 --> 00:02:12.650
across when you're reading about dependency injection on spring.

