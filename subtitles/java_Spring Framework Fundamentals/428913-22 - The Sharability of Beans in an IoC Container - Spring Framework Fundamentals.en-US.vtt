WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.510
So,

00:00:02.510 --> 00:00:05.420
given the fact that we can now inject dependencies into have Bean,

00:00:05.420 --> 00:00:08.280
this raises a question about the share ability of beans.

00:00:08.280 --> 00:00:09.750
So let's take a look at this now.

00:00:09.750 --> 00:00:16.070
So going back to the code in addition to getting the service being so,

00:00:16.070 --> 00:00:18.580
he is getting the service being in addition to that,

00:00:18.580 --> 00:00:19.350
we can also,

00:00:19.350 --> 00:00:20.140
if we want to,

00:00:20.140 --> 00:00:26.600
we could get the report it for being too.

00:00:26.600 --> 00:00:27.630
So there's nothing.

00:00:27.630 --> 00:00:28.080
Stopping is,

00:00:28.080 --> 00:00:28.720
in other words,

00:00:28.720 --> 00:00:30.950
from getting the beans independently.

00:00:30.950 --> 00:00:32.800
So in here,

00:00:32.800 --> 00:00:34.640
just because we have the service,

00:00:34.640 --> 00:00:38.300
which is really the thing we're after and the thing we're interested in because this is

00:00:38.300 --> 00:00:41.850
going to contend the business logic and that just happens to really get to the repository.

00:00:41.850 --> 00:00:44.470
There's nothing actually stopping us getting the repository as well.

00:00:44.470 --> 00:00:46.710
If you wanted to do something directly with the repository,

00:00:46.710 --> 00:00:50.570
we wouldn't normally do that in a late application.

00:00:50.570 --> 00:00:51.280
Basically,

00:00:51.280 --> 00:00:54.720
Controller would talk to a service or possibly multiple services,

00:00:54.720 --> 00:00:56.790
and each service then would talk to repository,

00:00:56.790 --> 00:00:58.460
possibly multiple repositories.

00:00:58.460 --> 00:01:00.210
That's really the layering with girl for,

00:01:00.210 --> 00:01:02.350
but just know that it's possible to do that.

00:01:02.350 --> 00:01:04.150
This also means as well there.

00:01:04.150 --> 00:01:06.550
Any beans can be shared with any other beans as well.

00:01:06.550 --> 00:01:08.090
So that's supposed this was,

00:01:08.090 --> 00:01:08.810
for example,

00:01:08.810 --> 00:01:11.350
in order repository in some kind of e commerce store.

00:01:11.350 --> 00:01:14.610
Then maybe the order repository is used by multiple services.

00:01:14.610 --> 00:01:16.770
Maybe there's a in order fulfillment service,

00:01:16.770 --> 00:01:20.070
which is responsible for placing an order with a back end system for the user.

00:01:20.070 --> 00:01:24.280
And maybe there's another service which is responsible for getting the orders.

00:01:24.280 --> 00:01:24.580
You know,

00:01:24.580 --> 00:01:26.890
we only could like view orders in your Amazon account,

00:01:26.890 --> 00:01:29.780
like a previous orders service or something.

00:01:29.780 --> 00:01:30.620
Yes,

00:01:30.620 --> 00:01:34.520
you could have mentioned having like a historic orders service on an order fulfillment

00:01:34.520 --> 00:01:35.590
service or something like that.

00:01:35.590 --> 00:01:36.030
By the way,

00:01:36.030 --> 00:01:40.050
the point is that both of those services legitimately could be using the same repository.

