WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:06.340
So we saw in the last video that we can resolve ambiguity by using a narrower type.

00:00:06.340 --> 00:00:06.990
However,

00:00:06.990 --> 00:00:09.300
there's another way of doing it of so called qualifiers.

00:00:09.300 --> 00:00:10.790
So I see how to do this now.

00:00:10.790 --> 00:00:14.650
So if I change that back to my repository,

00:00:14.650 --> 00:00:21.490
I can add a different annotation prefix called a qualifier on inside this qualifier.

00:00:21.490 --> 00:00:24.680
It takes a value on the value is gonna take.

00:00:24.680 --> 00:00:28.490
It's gonna be the name of the instance we're gonna use to resolve the conflict.

00:00:28.490 --> 00:00:29.710
It makes sense.

00:00:29.710 --> 00:00:30.780
It's the name and not the type.

00:00:30.780 --> 00:00:31.600
So in this case,

00:00:31.600 --> 00:00:37.360
let's say we want my repository import and we'll put a break point here so we can see

00:00:37.360 --> 00:00:38.670
what's actually assigned.

00:00:38.670 --> 00:00:41.790
So now if I go back to app on do Control,

00:00:41.790 --> 00:00:44.940
shifty to debug,

00:00:44.940 --> 00:00:51.220
we can see here as the containers initializing it's passed in Repository on Repository is a

00:00:51.220 --> 00:00:55.850
type my repository import because have used its qualifier annotation here,

00:00:55.850 --> 00:00:57.810
finished playing all that off.

00:00:57.810 --> 00:00:58.170
By the way,

00:00:58.170 --> 00:01:02.940
if you ever get into any of springs code and you want to jump back up to where your card is

00:01:02.940 --> 00:01:02.940
,

00:01:02.940 --> 00:01:06.550
you can do shift in their faith and it'll basically they'll do step out off.

00:01:06.550 --> 00:01:11.150
So I just did that a few times to go back from Springs framework.

00:01:11.150 --> 00:01:18.010
I would normally need to do that.

00:01:18.010 --> 00:01:20.640
But I'm just showing you because I pressed the wrong key by accident.

00:01:20.640 --> 00:01:21.630
It's over.

00:01:21.630 --> 00:01:22.380
FAA over.

00:01:22.380 --> 00:01:25.820
We can see here recruiting caught the context here.

00:01:25.820 --> 00:01:27.840
Service One year service to,

00:01:27.840 --> 00:01:32.450
and you can see that service to has my repository import thanks to the qualifier.

00:01:32.450 --> 00:01:37.490
So that's how you can resolve having multiple beans in the spring runtime,

00:01:37.490 --> 00:01:39.010
which implement the same interface.

00:01:39.010 --> 00:01:41.950
You can do that by using the qualifier mechanism.

