WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.750
So the last video we have the dependencies installed.

00:00:04.750 --> 00:00:05.450
That's great.

00:00:05.450 --> 00:00:06.760
That's a fantastic first move.

00:00:06.760 --> 00:00:07.820
But before we go any further,

00:00:07.820 --> 00:00:09.940
we're just gonna quickly do one best practice,

00:00:09.940 --> 00:00:11.490
which is you do with spring projects.

00:00:11.490 --> 00:00:14.400
And that's basically to use a thing called the Bill of Materials Palm.

00:00:14.400 --> 00:00:15.490
So let's look at this.

00:00:15.490 --> 00:00:18.010
Now jump back into the Comdex and all file.

00:00:18.010 --> 00:00:21.360
It's just delete that jump back into the pond XML,

00:00:21.360 --> 00:00:23.830
and we're just gonna quickly apply a best practice,

00:00:23.830 --> 00:00:27.060
which you should always do when you're creating projects with spring.

00:00:27.060 --> 00:00:30.350
So if we go back to the live in search website again,

00:00:30.350 --> 00:00:38.170
and if we go back and put in our Walk Door Spring Framework column to get the list of

00:00:38.170 --> 00:00:38.810
modules,

00:00:38.810 --> 00:00:41.530
you'll see this one down at the bottom here,

00:00:41.530 --> 00:00:43.200
which is spring framework bomb.

00:00:43.200 --> 00:00:45.560
So we're going to include this now.

00:00:45.560 --> 00:00:50.180
What spring framework bombed us is it was not as in MEV in terms a bill of materials palm

00:00:50.180 --> 00:00:52.160
on a bill of materials palm.

00:00:52.160 --> 00:00:53.130
In a nutshell,

00:00:53.130 --> 00:00:58.010
it basically defines all of the dependencies for a given project or forgiven library,

00:00:58.010 --> 00:00:59.970
if you like on all the version information,

00:00:59.970 --> 00:01:02.400
so let's just see what that means in practice.

00:01:02.400 --> 00:01:04.780
If we click again this 5 to 7 release,

00:01:04.780 --> 00:01:08.200
which is the latest version we're going to import and you can see here on the left hand

00:01:08.200 --> 00:01:12.010
side we've seen in the right hand side we've got the dependence is we can pull in on the

00:01:12.010 --> 00:01:12.780
left hand side.

00:01:12.780 --> 00:01:16.370
We've got the actual palmed aches and old file off the dependency itself.

00:01:16.370 --> 00:01:17.480
So in other words,

00:01:17.480 --> 00:01:20.650
spring framework Bomb as a project also has a Palm takes an awful,

00:01:20.650 --> 00:01:22.900
which describes its project object model.

00:01:22.900 --> 00:01:24.950
So the dependence is it needs have the group I,

00:01:24.950 --> 00:01:29.670
the artifact idea inversion that it will be published on Develop Blunder in other member

00:01:29.670 --> 00:01:30.260
repositories,

00:01:30.260 --> 00:01:31.230
that's generally help.

00:01:31.230 --> 00:01:32.020
Dependence is working,

00:01:32.020 --> 00:01:32.410
Melvin,

00:01:32.410 --> 00:01:33.300
but the bomb,

00:01:33.300 --> 00:01:36.630
a bill of materials is that especially in the respect that doesn't include dependencies

00:01:36.630 --> 00:01:37.230
itself,

00:01:37.230 --> 00:01:39.250
it just declares a surf dependencies.

00:01:39.250 --> 00:01:41.620
So let's see what this means.

00:01:41.620 --> 00:01:45.600
So basically you can see here we've got a dependency management section on under that we've

00:01:45.600 --> 00:01:48.550
got several different dependence is so we've got again spring,

00:01:48.550 --> 00:01:50.320
AARP spring aspect,

00:01:50.320 --> 00:01:51.120
spring beans,

00:01:51.120 --> 00:01:52.190
spring context,

00:01:52.190 --> 00:01:55.150
spring context indexer so on and so forth.

00:01:55.150 --> 00:01:57.410
Now we have not pulled in all of these dependencies ourselves.

00:01:57.410 --> 00:01:58.080
In the project,

00:01:58.080 --> 00:01:58.680
for example,

00:01:58.680 --> 00:02:01.950
we don't have spring aspect or spring context indexer,

00:02:01.950 --> 00:02:02.920
and that's OK.

00:02:02.920 --> 00:02:07.170
Including this bomb doesn't mean that you're going to include those extra modules as well,

00:02:07.170 --> 00:02:08.200
so don't worry about that.

00:02:08.200 --> 00:02:13.330
All it means is that it's providing a one stop shop to declare the versions for all the

00:02:13.330 --> 00:02:16.980
modules you could possibly import into this particular spring release on.

00:02:16.980 --> 00:02:19.980
The advantage of doing that is that you don't have to put the version than in the

00:02:19.980 --> 00:02:21.650
dependence of section in the pond XML.

00:02:21.650 --> 00:02:25.460
I also means you're gonna get consistent versions across any models of holding,

00:02:25.460 --> 00:02:27.070
even if their transit deeply pulled in.

00:02:27.070 --> 00:02:28.900
This might seem quite complex now.

00:02:28.900 --> 00:02:29.470
It probably does,

00:02:29.470 --> 00:02:30.570
but it's actually quite simple,

00:02:30.570 --> 00:02:31.810
and it's just something that you can do.

00:02:31.810 --> 00:02:33.150
Set it up and then forget about it.

00:02:33.150 --> 00:02:34.910
But it will save you some issues down the road,

00:02:34.910 --> 00:02:36.520
so let's just install it.

00:02:36.520 --> 00:02:37.060
So if you go back,

00:02:37.060 --> 00:02:37.590
appear,

00:02:37.590 --> 00:02:38.950
grab this dependency,

00:02:38.950 --> 00:02:40.640
I shall do it the other way.

00:02:40.640 --> 00:02:43.210
This time I'll click the copy to Clipboard,

00:02:43.210 --> 00:02:48.680
go back into intelligent idea on What you want to do now is basically put in a new section

00:02:48.680 --> 00:02:48.680
,

00:02:48.680 --> 00:02:51.300
which is dependency management,

00:02:51.300 --> 00:02:54.080
which has the dependencies section underneath.

00:02:54.080 --> 00:02:55.630
And then we're gonna copy.

00:02:55.630 --> 00:02:55.850
Sorry.

00:02:55.850 --> 00:02:56.030
Rather,

00:02:56.030 --> 00:02:58.780
we're gonna pissed the bill of materials dependency him,

00:02:58.780 --> 00:03:02.340
and we're gonna give it a scope off import.

00:03:02.340 --> 00:03:04.160
What this does is it means,

00:03:04.160 --> 00:03:04.570
basically,

00:03:04.570 --> 00:03:06.840
that if we go down to hear weaken,

00:03:06.840 --> 00:03:08.030
delete that version.

00:03:08.030 --> 00:03:09.510
So this has several advantages.

00:03:09.510 --> 00:03:11.890
That means basically want to pulling any other modules.

00:03:11.890 --> 00:03:16.050
We could just effective a copy and paste that block Andi change,

00:03:16.050 --> 00:03:18.890
obviously the module name to whatever spring module were important.

00:03:18.890 --> 00:03:19.050
So,

00:03:19.050 --> 00:03:19.600
for example,

00:03:19.600 --> 00:03:22.500
Spring Web if we were doing some spring NBC type stuff,

00:03:22.500 --> 00:03:23.410
so that's nice.

00:03:23.410 --> 00:03:26.250
It means we also don't have to keep repeating the version number as well.

00:03:26.250 --> 00:03:30.440
That also means that when a dependence is brought in to the project on this could either be

00:03:30.440 --> 00:03:35.790
from spring itself or it could be from third party like is that you bring into your project

00:03:35.790 --> 00:03:35.790
.

00:03:35.790 --> 00:03:36.730
So other dependencies,

00:03:36.730 --> 00:03:40.250
you just happen to bring in which maybe they also bring in some extra spring stuff because

00:03:40.250 --> 00:03:41.540
they also depend on spring.

00:03:41.540 --> 00:03:45.400
It basically means that you won't end up having conflicting versions.

00:03:45.400 --> 00:03:46.300
So what?

00:03:46.300 --> 00:03:46.870
I mean by that is,

00:03:46.870 --> 00:03:47.780
let's took a spring.

00:03:47.780 --> 00:03:49.970
AARP We included spring context.

00:03:49.970 --> 00:03:52.350
They brought in Springer P of this particular version.

00:03:52.350 --> 00:03:55.050
Let's suppose we brought in a different dependency,

00:03:55.050 --> 00:03:57.410
which also happened to alone Spring AARP.

00:03:57.410 --> 00:04:00.010
But the spring Air P version it relied on was,

00:04:00.010 --> 00:04:00.660
for example,

00:04:00.660 --> 00:04:02.390
for 13 effectively.

00:04:02.390 --> 00:04:05.290
You've now got two separate versions which have been brought him,

00:04:05.290 --> 00:04:06.490
so you don't have that.

00:04:06.490 --> 00:04:06.940
So,

00:04:06.940 --> 00:04:08.930
in order to unify the version of spring,

00:04:08.930 --> 00:04:12.950
that particular module is aligned with particular version that's brought into the project.

00:04:12.950 --> 00:04:15.350
You do it with this bomb section here.

00:04:15.350 --> 00:04:18.980
This means that everything is always gonna be 5 to 7 release,

00:04:18.980 --> 00:04:19.740
which is good.

00:04:19.740 --> 00:04:20.160
Also,

00:04:20.160 --> 00:04:21.210
there's a side effect as well,

00:04:21.210 --> 00:04:22.740
which is quite cool if you decided.

00:04:22.740 --> 00:04:23.090
You know what?

00:04:23.090 --> 00:04:24.270
I want to change my version.

00:04:24.270 --> 00:04:26.030
I want to use another say,

00:04:26.030 --> 00:04:27.880
517 release.

00:04:27.880 --> 00:04:29.960
You could just change it in one place,

00:04:29.960 --> 00:04:33.520
and then what you'll see is it's now refreshing dependencies.

00:04:33.520 --> 00:04:33.910
And now look,

00:04:33.910 --> 00:04:37.860
you'll see that all changed into 517 and you didn't have to do anything Apartment.

00:04:37.860 --> 00:04:38.980
Just change it in one place,

00:04:38.980 --> 00:04:43.170
so we'll put it back to 5 to 7 now But,

00:04:43.170 --> 00:04:43.340
yeah,

00:04:43.340 --> 00:04:44.390
that's a really good best practice.

00:04:44.390 --> 00:04:47.550
Always make sure that you've got your bill of materials dependency in the dependency

00:04:47.550 --> 00:04:49.150
management section at the top,

00:04:49.150 --> 00:04:54.120
so you can import effectively a full version set of all the modules that could be used in

00:04:54.120 --> 00:04:55.260
your project on.

00:04:55.260 --> 00:04:59.310
Then just declare the actual modules explicitly that you want to use out of the spring

00:04:59.310 --> 00:05:01.200
framework beneath that,

00:05:01.200 --> 00:05:02.640
just in terms of the group I d.

00:05:02.640 --> 00:05:04.240
On art if I tidy So anyway,

00:05:04.240 --> 00:05:07.850
that's how you get set up creating or preparing a project to use the spring framework.

00:05:07.850 --> 00:05:09.060
And in the next videos,

00:05:09.060 --> 00:05:13.300
we'll see how we can delve in and see exactly how we do that programmatically look at the

00:05:13.300 --> 00:05:16.750
application context in that kind of thing and start using spring itself.

