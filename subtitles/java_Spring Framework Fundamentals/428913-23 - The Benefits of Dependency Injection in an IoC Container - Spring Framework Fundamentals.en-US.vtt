WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:05.990
Now I just want to take a moment for us to appreciate just how powerful this paradigm shift

00:00:05.990 --> 00:00:10.300
is because in doing one very simple thing which is saying I'm not gonna be control off

00:00:10.300 --> 00:00:11.400
creating an object,

00:00:11.400 --> 00:00:16.320
the container can be in control of creating the objects that one simple paradigm shift is

00:00:16.320 --> 00:00:20.590
what makes all this dependency injection magic possible on when we use dependency injection

00:00:20.590 --> 00:00:22.680
potentially in a lot of objects in a large system.

00:00:22.680 --> 00:00:23.310
In doing that,

00:00:23.310 --> 00:00:27.640
it means that we can effectively and very easily establish a graph of different objects at

00:00:27.640 --> 00:00:28.200
run time.

00:00:28.200 --> 00:00:31.740
And we get that for free without having to manage all of those interdependencies between

00:00:31.740 --> 00:00:32.370
the objects.

00:00:32.370 --> 00:00:33.440
And as a consequence of this,

00:00:33.440 --> 00:00:36.080
we can also keep these objects very loosely coupled.

00:00:36.080 --> 00:00:37.410
So by loosely coupled,

00:00:37.410 --> 00:00:39.870
I mean that from the service here,

00:00:39.870 --> 00:00:41.600
just accept its dependency.

00:00:41.600 --> 00:00:43.150
Just accept it.

00:00:43.150 --> 00:00:43.800
In fact,

00:00:43.800 --> 00:00:47.410
it can't even be created without having this this dependency been injected him.

00:00:47.410 --> 00:00:48.040
And that's nice,

00:00:48.040 --> 00:00:49.570
because using a container like spring,

00:00:49.570 --> 00:00:54.600
it means that we can inject anything of that type into that dependency place older so it

00:00:54.600 --> 00:00:59.360
could be the real repository in a production system as we said before or it could be an in

00:00:59.360 --> 00:01:00.210
memory repository.

00:01:00.210 --> 00:01:03.650
If we're like doing local development or something and to swap out the production

00:01:03.650 --> 00:01:06.350
repository for the development of local repository,

00:01:06.350 --> 00:01:12.400
we don't have to do anything with this class itself that just becomes a responsibility now

00:01:12.400 --> 00:01:15.740
off the container that's managing the wiring of the beans and doing the dependency

00:01:15.740 --> 00:01:16.280
injection.

00:01:16.280 --> 00:01:20.830
So the more you learn about dependency injection on this inversion of control principle,

00:01:20.830 --> 00:01:22.730
where an object doesn't create its dependencies,

00:01:22.730 --> 00:01:23.710
it has them handed to.

00:01:23.710 --> 00:01:24.250
Instead,

00:01:24.250 --> 00:01:27.340
the more you appreciate the benefits it brings with loose coupling,

00:01:27.340 --> 00:01:31.320
better test ability and run turn configurable ity being the key aspects of this.

