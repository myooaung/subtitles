WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.710
So we've seen the application context interface on.

00:00:04.710 --> 00:00:06.700
We've seen the three concrete classes,

00:00:06.700 --> 00:00:09.210
which we would instead ship which implement that interface.

00:00:09.210 --> 00:00:09.900
Sort of the words.

00:00:09.900 --> 00:00:11.040
We can create a spring container,

00:00:11.040 --> 00:00:14.310
either through the file based external application context,

00:00:14.310 --> 00:00:14.700
the class,

00:00:14.700 --> 00:00:18.370
both external application context or the annotation based context.

00:00:18.370 --> 00:00:19.170
So in this video,

00:00:19.170 --> 00:00:22.680
let's have a look how we create a basic XML configuration file,

00:00:22.680 --> 00:00:26.440
which allows us to create of being put into the spring application and retrieve that bean

00:00:26.440 --> 00:00:27.750
from the application context.

00:00:27.750 --> 00:00:30.220
Let's really now and have a look at how that happens.

00:00:30.220 --> 00:00:33.580
So if I go back to the APP and here,

00:00:33.580 --> 00:00:41.220
you can see the context and we just gonna do new file system XML application context said

00:00:41.220 --> 00:00:41.990
that every mouthful,

00:00:41.990 --> 00:00:43.440
but it does what it says on the tin.

00:00:43.440 --> 00:00:45.870
So we do command P here to look at the parameters.

00:00:45.870 --> 00:00:50.030
You'll see that we can either specify a parent that's over doing the hierarchical context

00:00:50.030 --> 00:00:50.950
in which we're not doing here,

00:00:50.950 --> 00:00:51.950
says an advanced use.

00:00:51.950 --> 00:00:52.720
Instead,

00:00:52.720 --> 00:00:52.860
though,

00:00:52.860 --> 00:00:54.130
you'll see we've got conflict,

00:00:54.130 --> 00:00:55.750
location or conflict locations,

00:00:55.750 --> 00:00:59.060
and so we're gonna use the 2nd 1 We've only got one configuration file.

00:00:59.060 --> 00:00:59.910
We want to pass in,

00:00:59.910 --> 00:01:01.760
which is the moment going to create in a second,

00:01:01.760 --> 00:01:04.420
you can pass in multiple configuration files as well,

00:01:04.420 --> 00:01:08.410
and it's a good idea to do that as your application becomes more complex.

00:01:08.410 --> 00:01:11.300
It's a good idea to have separate application context files,

00:01:11.300 --> 00:01:13.280
usually for different layers of the application.

00:01:13.280 --> 00:01:13.630
So,

00:01:13.630 --> 00:01:14.020
for example,

00:01:14.020 --> 00:01:16.730
you could have an application context presentation XML,

00:01:16.730 --> 00:01:18.010
which would have the beans.

00:01:18.010 --> 00:01:20.350
You'd use the presentation layer of a Web application,

00:01:20.350 --> 00:01:20.930
for example,

00:01:20.930 --> 00:01:23.250
So those are the controllers which handled the Web requests.

00:01:23.250 --> 00:01:26.350
You could have an application context services take smell,

00:01:26.350 --> 00:01:29.270
which would have all of the beans related to the service layer,

00:01:29.270 --> 00:01:29.930
which your control is.

00:01:29.930 --> 00:01:30.040
What?

00:01:30.040 --> 00:01:30.450
Cole.

00:01:30.450 --> 00:01:34.150
The services housing the actual business logic of the application itself.

00:01:34.150 --> 00:01:36.110
And you might have an application context,

00:01:36.110 --> 00:01:37.180
persistence like smell,

00:01:37.180 --> 00:01:41.590
which has all of the beans related to persistence and accessing the relational database.

00:01:41.590 --> 00:01:42.180
Or no sequel,

00:01:42.180 --> 00:01:43.250
dentist or you might use.

00:01:43.250 --> 00:01:45.110
So it's a good idea to do that with a large,

00:01:45.110 --> 00:01:48.690
complex application because it keeps everything in one place or beans which related

00:01:48.690 --> 00:01:50.350
together going specific file.

00:01:50.350 --> 00:01:51.380
But for this demo,

00:01:51.380 --> 00:01:52.200
we're just starting out,

00:01:52.200 --> 00:01:54.620
so it is going to use one single application context.

00:01:54.620 --> 00:01:54.950
Well,

00:01:54.950 --> 00:02:02.150
so let's just put it in here now and it's gonna put application context.

00:02:02.150 --> 00:02:07.830
XML Now where we're gonna go with this is once we've got the application,

00:02:07.830 --> 00:02:10.480
context will be able to do things like this.

00:02:10.480 --> 00:02:11.730
See ticks.

00:02:11.730 --> 00:02:16.690
But get bean on basically passing the class of the bean that we want to get.

00:02:16.690 --> 00:02:17.770
So we're gonna do that yet.

00:02:17.770 --> 00:02:19.660
But that's what I want to get set up in this demo,

00:02:19.660 --> 00:02:20.460
that first stuff.

00:02:20.460 --> 00:02:22.020
Let's create this XML file,

00:02:22.020 --> 00:02:22.860
by the way as well.

00:02:22.860 --> 00:02:27.040
Sometimes people camel kissed the application context like have done there.

00:02:27.040 --> 00:02:29.110
You could also do That's what with a hyphen.

00:02:29.110 --> 00:02:29.740
Either's fine,

00:02:29.740 --> 00:02:29.920
Really.

00:02:29.920 --> 00:02:30.450
To be honest,

00:02:30.450 --> 00:02:31.750
the name is not really important.

00:02:31.750 --> 00:02:33.090
Doesn't just get to a convention.

00:02:33.090 --> 00:02:33.870
That's the main thing,

00:02:33.870 --> 00:02:35.150
actually looks a little bit better,

00:02:35.150 --> 00:02:35.850
so I'll stick with that.

00:02:35.850 --> 00:02:41.100
So it in order to create an application context out off this external configuration file,

00:02:41.100 --> 00:02:42.850
we need to create the file itself,

00:02:42.850 --> 00:02:44.650
which brings onto the actual path.

00:02:44.650 --> 00:02:46.930
So the path this is looking for if we run this now,

00:02:46.930 --> 00:02:48.690
it'll fail because we can create the file.

00:02:48.690 --> 00:02:53.460
But if we run this Now you'll see that it's actually looking for the application context

00:02:53.460 --> 00:02:53.850
file,

00:02:53.850 --> 00:02:56.550
basically from where the application is run from.

00:02:56.550 --> 00:02:57.320
In other words,

00:02:57.320 --> 00:02:58.250
from where the JV M,

00:02:58.250 --> 00:03:02.080
which launches the program where that's physically executed from you can see here,

00:03:02.080 --> 00:03:03.120
found that found exception,

00:03:03.120 --> 00:03:08.480
application context XML and you can see that it's trying to load the application context

00:03:08.480 --> 00:03:12.600
xml from the sample app that I've got on my desktop.

00:03:12.600 --> 00:03:13.520
So basically,

00:03:13.520 --> 00:03:15.050
if I just stop up to my desktop,

00:03:15.050 --> 00:03:16.080
you can see here.

00:03:16.080 --> 00:03:18.320
I've just got my APP folder on in there.

00:03:18.320 --> 00:03:20.300
That's where we have the actual application itself.

00:03:20.300 --> 00:03:21.230
So I got my app.

00:03:21.230 --> 00:03:23.590
That's the pom XML file we saw before.

00:03:23.590 --> 00:03:24.470
Source.

00:03:24.470 --> 00:03:25.950
Main Java.

00:03:25.950 --> 00:03:28.450
Then we got the package structure down here,

00:03:28.450 --> 00:03:35.500
and that's on application there says where it's looking for.

00:03:35.500 --> 00:03:37.600
So we just need to create one here,

00:03:37.600 --> 00:03:38.120
so I mean,

00:03:38.120 --> 00:03:40.180
that's not my app would just create the file that said,

00:03:40.180 --> 00:03:45.560
we got a new file and we'll call it a good practice that,

00:03:45.560 --> 00:03:45.910
in fact,

00:03:45.910 --> 00:03:48.280
instead just typing it manually again,

00:03:48.280 --> 00:03:49.680
just copy to file them there,

00:03:49.680 --> 00:03:56.810
that you giving and then we know that we're using the exact same one because Sometimes you

00:03:56.810 --> 00:03:57.610
can make typos,

00:03:57.610 --> 00:03:58.890
and that could be confusing.

00:03:58.890 --> 00:03:59.970
Okay,

00:03:59.970 --> 00:04:01.420
so here we have an application context.

00:04:01.420 --> 00:04:02.160
XML file.

00:04:02.160 --> 00:04:02.880
There's nothing in it.

00:04:02.880 --> 00:04:03.430
Of course.

00:04:03.430 --> 00:04:03.950
Again,

00:04:03.950 --> 00:04:04.820
this won't work.

00:04:04.820 --> 00:04:05.460
We run.

00:04:05.460 --> 00:04:06.950
It was quite obviously won't work.

00:04:06.950 --> 00:04:10.760
At least it's located the file now,

00:04:10.760 --> 00:04:12.060
but instead we get a different era.

00:04:12.060 --> 00:04:12.620
We gotta sex.

00:04:12.620 --> 00:04:14.420
Parts exception Premature end of file.

00:04:14.420 --> 00:04:15.050
In other words,

00:04:15.050 --> 00:04:16.630
it's saying there's nothing in it,

00:04:16.630 --> 00:04:17.790
which is fine.

00:04:17.790 --> 00:04:18.350
There isn't.

00:04:18.350 --> 00:04:20.250
So we're gonna fill this in now on.

00:04:20.250 --> 00:04:21.500
We'll do that in the next video.

