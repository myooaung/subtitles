WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.910
So first up,

00:00:02.910 --> 00:00:03.330
here we are.

00:00:03.330 --> 00:00:04.170
We've got a project.

00:00:04.170 --> 00:00:06.980
Just called it my our pictures on my desktop on There's Nothing in it.

00:00:06.980 --> 00:00:11.050
It's basically a project which is just being created with the maven quick start archetype.

00:00:11.050 --> 00:00:13.340
So it was a pom XML file,

00:00:13.340 --> 00:00:18.650
which is the basic bare bones public smell generate from the archetype.

00:00:18.650 --> 00:00:24.670
And then in here we've got a source main on Java filled and we've got a package,

00:00:24.670 --> 00:00:25.650
so rates begin.

00:00:25.650 --> 00:00:27.270
So first up,

00:00:27.270 --> 00:00:36.510
let's create a class we'll just call the app on Apple's just gonna have a Men method.

00:00:36.510 --> 00:00:39.600
So when we run up,

00:00:39.600 --> 00:00:41.020
it's gonna be a spring application.

00:00:41.020 --> 00:00:42.480
Let's just double check.

00:00:42.480 --> 00:00:43.020
Good.

00:00:43.020 --> 00:00:43.570
Everything set up?

00:00:43.570 --> 00:00:44.010
Okay,

00:00:44.010 --> 00:00:50.580
We'll just say hello and we'll just right click on app and you run.

00:00:50.580 --> 00:00:54.540
We're just doing this just to make sure that the project compiles and that it can run in.

00:00:54.540 --> 00:00:56.390
Everything's OK on here.

00:00:56.390 --> 00:00:57.560
We can see we've got hello.

00:00:57.560 --> 00:00:58.830
Which is the output from the program,

00:00:58.830 --> 00:01:00.470
which caused him to the idea console.

00:01:00.470 --> 00:01:01.000
So Okay,

00:01:01.000 --> 00:01:01.410
that's fine.

00:01:01.410 --> 00:01:01.970
That's all good.

00:01:01.970 --> 00:01:03.080
Nothing to do with spring it,

00:01:03.080 --> 00:01:03.240
though.

00:01:03.240 --> 00:01:05.350
So let's bring this spring into the equation.

00:01:05.350 --> 00:01:09.990
So we're gonna do for this demo is we just want to do the smallest possible thing,

00:01:09.990 --> 00:01:11.600
which gives us a spring application.

00:01:11.600 --> 00:01:14.530
And that's basically to create an application context,

00:01:14.530 --> 00:01:15.860
which is springs container,

00:01:15.860 --> 00:01:16.530
which will use,

00:01:16.530 --> 00:01:17.810
which allows us to do dependency,

00:01:17.810 --> 00:01:19.040
injection and all that kind of stuff,

00:01:19.040 --> 00:01:19.960
which you probably heard about.

00:01:19.960 --> 00:01:24.250
We just need to be able to create an application context from the spring framework in this

00:01:24.250 --> 00:01:25.540
man method and then effectively,

00:01:25.540 --> 00:01:27.390
we've got the beginnings of a spring application.

00:01:27.390 --> 00:01:28.980
So to do this,

00:01:28.980 --> 00:01:30.150
let's go into Crumb.

00:01:30.150 --> 00:01:39.460
I will go to search Don't maven dog on from here.

00:01:39.460 --> 00:01:42.700
This is where you can search the Merentes central repository for any dependency,

00:01:42.700 --> 00:01:43.400
not just spring.

00:01:43.400 --> 00:01:48.080
Any dependency you were want to look for or you want to have access to the preferred method

00:01:48.080 --> 00:01:48.080
.

00:01:48.080 --> 00:01:50.310
These is It's to go to search dot moving dog.

00:01:50.310 --> 00:01:54.850
So we need to do is research for Ork spring framework,

00:01:54.850 --> 00:01:58.330
which is the group Heidi off the spring framework on.

00:01:58.330 --> 00:01:58.430
Then,

00:01:58.430 --> 00:01:59.360
if we put a colon,

00:01:59.360 --> 00:02:02.900
you'll see we have a set of individual modules from the Spring framework itself,

00:02:02.900 --> 00:02:03.910
which weaken pulling.

00:02:03.910 --> 00:02:06.600
That's about 20 modules in spring itself,

00:02:06.600 --> 00:02:08.200
and this is a listing of them basically.

00:02:08.200 --> 00:02:11.910
So the one we want to have is called Spring Dash context.

00:02:11.910 --> 00:02:14.890
So spring context basically pulls in a few other dependencies,

00:02:14.890 --> 00:02:15.550
as we'll see.

00:02:15.550 --> 00:02:18.670
But it enables us to create the spring container,

00:02:18.670 --> 00:02:20.520
this so called application context.

00:02:20.520 --> 00:02:21.670
We do that by extension,

00:02:21.670 --> 00:02:22.820
the application context.

00:02:22.820 --> 00:02:25.430
Quitting an instance out of effectively on dialysis.

00:02:25.430 --> 00:02:27.080
Do the dependency injection stuff as well,

00:02:27.080 --> 00:02:29.460
which is one of the main selling points of spring.

00:02:29.460 --> 00:02:30.060
And what comes?

00:02:30.060 --> 00:02:32.370
Why that's important later running the course on why that's very,

00:02:32.370 --> 00:02:36.590
very useful on why it's made spring the number one framework in the Java community.

00:02:36.590 --> 00:02:37.000
But for now,

00:02:37.000 --> 00:02:39.300
let's just pull the module in so you can see here.

00:02:39.300 --> 00:02:43.620
This page will always give you the latest release so you could see the legis release.

00:02:43.620 --> 00:02:45.490
Here is 5 to 7 release,

00:02:45.490 --> 00:02:47.340
which is the one we're gonna use for this,

00:02:47.340 --> 00:02:50.790
and that's the very latest and greatest version off the spring framework where we were

00:02:50.790 --> 00:02:51.400
going to use.

00:02:51.400 --> 00:02:55.950
So if we go down and search for context,

00:02:55.950 --> 00:03:00.140
you can see here it is on.

00:03:00.140 --> 00:03:02.080
If we click on the version itself,

00:03:02.080 --> 00:03:06.370
then will be taken directly to a page which enables us to copy and paste the dependency.

00:03:06.370 --> 00:03:07.360
So like I said before,

00:03:07.360 --> 00:03:08.290
we're using Medvene.

00:03:08.290 --> 00:03:10.420
So we're gonna use this dependency here.

00:03:10.420 --> 00:03:14.410
You can see if using griddle you can use the one underneath on Sunday school.

00:03:14.410 --> 00:03:16.360
Basically copy this dependency.

00:03:16.360 --> 00:03:17.590
Come and see.

00:03:17.590 --> 00:03:20.150
You can also click this icon here.

00:03:20.150 --> 00:03:22.150
I copied to the clipboard.

00:03:22.150 --> 00:03:23.750
Go back into the idea.

00:03:23.750 --> 00:03:25.150
Do a cross to the pond,

00:03:25.150 --> 00:03:26.880
aches and all foil on.

00:03:26.880 --> 00:03:28.960
You'll see we've already got independence is section here.

00:03:28.960 --> 00:03:32.600
So there's only one dependency out of the box which is provided for us,

00:03:32.600 --> 00:03:36.310
which is J unit for which is provided by the quick start archetype which generated this

00:03:36.310 --> 00:03:39.250
project which is gonna put dependency above that on.

00:03:39.250 --> 00:03:42.880
That's basically the dependency for spring context.

00:03:42.880 --> 00:03:48.710
So command V to copy and paste that now I could go on here to enable or to import on.

00:03:48.710 --> 00:03:52.600
What this will do is make sure that the class paths between mavens model of the project on

00:03:52.600 --> 00:03:55.560
intelligent ideas with Project Ares class pastor the same.

00:03:55.560 --> 00:03:58.020
So if I now jump up into external libraries,

00:03:58.020 --> 00:03:59.150
open that up.

00:03:59.150 --> 00:04:05.020
We can see here that we've got some extra dependencies which have been pulled in from this

00:04:05.020 --> 00:04:05.980
spring context.

00:04:05.980 --> 00:04:10.890
So spring context is the top level dependency want to bring in to get started with spring.

00:04:10.890 --> 00:04:14.060
But spring context itself will pull in other dependencies,

00:04:14.060 --> 00:04:15.450
and it just sort transitive Lee.

00:04:15.450 --> 00:04:17.660
So in common with all Meffan projects,

00:04:17.660 --> 00:04:21.890
not only are you as a melon project dependency which other people can include or the

00:04:21.890 --> 00:04:23.840
projects can include rather similarly,

00:04:23.840 --> 00:04:26.990
you also depend on other projects to be able to get your work done.

00:04:26.990 --> 00:04:28.400
So you have other dependencies.

00:04:28.400 --> 00:04:29.260
So in this case,

00:04:29.260 --> 00:04:32.230
spring context has Dependence is on AARP,

00:04:32.230 --> 00:04:35.750
which is used to support aspect oriented programming beans,

00:04:35.750 --> 00:04:38.430
which provides support for beans context,

00:04:38.430 --> 00:04:42.020
which is better than the application context framework that will see call,

00:04:42.020 --> 00:04:44.460
which is the foundation of everything expression,

00:04:44.460 --> 00:04:49.200
which is to do with spring expression language support on finally spring Jesse L.

00:04:49.200 --> 00:04:50.800
Which is an inbuilt longer.

00:04:50.800 --> 00:04:52.010
That's great.

00:04:52.010 --> 00:04:54.270
We've imported this spring context.

00:04:54.270 --> 00:04:56.660
Now you can see here 5 to 7 spring context,

00:04:56.660 --> 00:04:59.460
which means that if we go into the app itself,

00:04:59.460 --> 00:05:04.360
we should be able to delete this line and we should have access to the application concepts

00:05:04.360 --> 00:05:04.950
interface,

00:05:04.950 --> 00:05:10.370
and you can see here is coming up a suggestion from or that spring framework that concepts

00:05:10.370 --> 00:05:10.370
.

00:05:10.370 --> 00:05:11.600
So that's great.

00:05:11.600 --> 00:05:15.070
Whole dependence is instead of correctly now and now we can start to use this spring.

