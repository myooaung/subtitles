WEBVTT
1
00:00:01.040 --> 00:00:04.210
[Autogenerated] Let's at Springwood actuator to the demo application.

2
00:00:04.210 --> 00:00:10.340
Now start up the IDE e and take a look at the second example project.

3
00:00:10.340 --> 00:00:14.840
We're going to AD DS Springwood actuator to the back end service.

4
00:00:14.840 --> 00:00:17.950
The first thing we need to do is added dependency

5
00:00:17.950 --> 00:00:20.840
in the maven POM GUID XML Foul.

6
00:00:20.840 --> 00:00:23.750
Let's open up this file and at the dependency on

7
00:00:23.750 --> 00:00:26.640
spring Bootstrap charter actuator.

8
00:00:26.640 --> 00:00:29.350
That's really all we have to do to get Springwood.

9
00:00:29.350 --> 00:00:31.240
Actually, they're working.

10
00:00:31.240 --> 00:00:35.340
It's initialized automatically by spring boots auto configuration

11
00:00:35.340 --> 00:00:40.100
mechanism so we don't need to explicitly at any configuration or

12
00:00:40.100 --> 00:00:43.240
modify the Java code off the application.

13
00:00:43.240 --> 00:00:46.640
Let's start everything up and see what we get.

14
00:00:46.640 --> 00:00:48.050
Remember greenmail.

15
00:00:48.050 --> 00:00:52.540
So make sure that the docker container with greenmail is running.

16
00:00:52.540 --> 00:00:58.640
Then start S3 services, which is easy to do from Intelligence services Panel,

17
00:00:58.640 --> 00:01:01.820
the backhand service to which we've just added Springwood

18
00:01:01.820 --> 00:01:05.220
actuator is listening on Port 80 81.

19
00:01:05.220 --> 00:01:10.710
So let's go to HTTP local host Port 80 81 slash actuator.

20
00:01:10.710 --> 00:01:16.740
In the browser, you will see that you're going to response with some links there.

21
00:01:16.740 --> 00:01:21.360
What we're looking at here is actuators Discovery Page which shows

22
00:01:21.360 --> 00:01:24.640
these actuator endpoints that are available.

23
00:01:24.640 --> 00:01:28.950
By the way, I'm using a JSON for matter extension in my browser here,

24
00:01:28.950 --> 00:01:32.240
so I get this nicely formatted output.

25
00:01:32.240 --> 00:01:34.310
There are two endpoints available,

26
00:01:34.310 --> 00:01:40.540
one named Health that can optionally take some path and the other named info.

27
00:01:40.540 --> 00:01:43.840
Let's follow the health link first.

28
00:01:43.840 --> 00:01:48.180
Now we get a very short response with just status up,

29
00:01:48.180 --> 00:01:52.440
which tells us that the application is up and running normally.

30
00:01:52.440 --> 00:01:56.040
Let's go back and follow the info link.

31
00:01:56.040 --> 00:02:01.440
This gives us an even shorter response with Justin anti JSON object,

32
00:02:01.440 --> 00:02:04.740
so there's not really a lot to see here yet.

33
00:02:04.740 --> 00:02:10.040
One thing we can do is enable more details on the health endpoint.

34
00:02:10.040 --> 00:02:10.700
To do that,

35
00:02:10.700 --> 00:02:15.940
we need to set a configuration property in the Application Properties file.

36
00:02:15.940 --> 00:02:21.140
Let's set the property management endpoint health show details to the

37
00:02:21.140 --> 00:02:25.840
value always and then restart the back on services.

38
00:02:25.840 --> 00:02:28.090
When we now go to the health and point,

39
00:02:28.090 --> 00:02:32.640
we get more details about different components in the application,

40
00:02:32.640 --> 00:02:35.980
we can see that the connection to the database is working.

41
00:02:35.980 --> 00:02:41.440
Some details about this space and the connection to the mail server is working.

42
00:02:41.440 --> 00:02:45.790
If we stop the Green Mill Docker container and refresh this page,

43
00:02:45.790 --> 00:02:50.240
you will see that the connection to the mail server is now down.

44
00:02:50.240 --> 00:02:53.980
So this health and point is really useful to see if all the

45
00:02:53.980 --> 00:02:57.440
components off the application are running normally.

46
00:02:57.440 --> 00:03:01.430
You can imagine that you could make a dashboard for system administrators

47
00:03:01.430 --> 00:03:05.470
that would regularly check the health and point and warn them if something

48
00:03:05.470 --> 00:03:09.780
goes down when we start greenmail again and refresh,

49
00:03:09.780 --> 00:03:13.840
it will also quickly report that the connection is up again.

50
00:03:13.840 --> 00:03:18.620
The info endpoint is meant to display general information about the application,

51
00:03:18.620 --> 00:03:22.640
such as maybe the applications name and version number.

52
00:03:22.640 --> 00:03:25.570
Besides these health and info endpoints,

53
00:03:25.570 --> 00:03:29.540
there are many more endpoints that actuator provides out of the box.

54
00:03:29.540 --> 00:03:36.440
But most of them are not exposed by default via HTTP for security reasons.

55
00:03:36.440 --> 00:03:39.020
In the spring Bootstrap reference documentation,

56
00:03:39.020 --> 00:03:43.770
there is a chapter about spring Bootstrap actuator that lists and explains all

57
00:03:43.770 --> 00:03:48.130
the provided endpoints in the Application Properties file.

58
00:03:48.130 --> 00:03:52.820
We can set the property management endpoints web exposure

59
00:03:52.820 --> 00:03:57.570
include to a comma separated list off endpoint names off the

60
00:03:57.570 --> 00:04:00.340
endpoints that you want to expose.

61
00:04:00.340 --> 00:04:03.620
We can also set it to asked the risk to expose all

62
00:04:03.620 --> 00:04:07.760
endpoints When you now restart the back and service and go

63
00:04:07.760 --> 00:04:13.040
to the actuator Discovery page again, you'll see many more endpoints.

64
00:04:13.040 --> 00:04:16.880
Take a look around yourself and see what information you can find

65
00:04:16.880 --> 00:04:21.270
their the one that's going to be most interesting for the rest of

66
00:04:21.270 --> 00:04:24.640
this module is the metrics and point.

67
00:04:24.640 --> 00:04:27.680
One remark I need to make is that we're not paying

68
00:04:27.680 --> 00:04:33.340
much attention to security here, as that's not the main focus of this course.

69
00:04:33.340 --> 00:04:36.170
If you're going to use Springwood actuator in your

70
00:04:36.170 --> 00:04:39.180
own application in production, it is, of course,

71
00:04:39.180 --> 00:04:43.040
very important that you pay attention to security.

72
00:04:43.040 --> 00:04:43.880
In general.

73
00:04:43.880 --> 00:04:46.960
You don't want to expose any information about how

74
00:04:46.960 --> 00:04:49.400
your application works to hackers,

75
00:04:49.400 --> 00:04:55.410
so you should properly secure your actuator endpoints using spring security.

76
00:04:55.410 --> 00:05:03.000
It's easy to, for example, only give logged in users with an admin role. Access to the endpoints

