1
00:00:01,040 --> 00:00:03,440
[Autogenerated] when you use micro meter in the spring boot

2
00:00:03,440 --> 00:00:07,050
application than a media registry is conveniently created

3
00:00:07,050 --> 00:00:09,840
for you by auto configuration.

4
00:00:09,840 --> 00:00:13,540
But what if you need to configure the meter registry?

5
00:00:13,540 --> 00:00:16,360
You can do that by providing a meter registry.

6
00:00:16,360 --> 00:00:18,440
Customize your bean.

7
00:00:18,440 --> 00:00:21,740
Let's add the media registry customize error being to the main

8
00:00:21,740 --> 00:00:25,840
application class Globomantics service application.

9
00:00:25,840 --> 00:00:30,510
We'll add a method with the being a notation that will return a meteor registry.

10
00:00:30,510 --> 00:00:32,240
Customize er,

11
00:00:32,240 --> 00:00:35,170
the media registry customize er interface defines a

12
00:00:35,170 --> 00:00:37,310
single method named customize,

13
00:00:37,310 --> 00:00:42,160
that we have to implement instead of implementing it as an anonymous glass,

14
00:00:42,160 --> 00:00:45,400
we can, of course, use the Lambda expression.

15
00:00:45,400 --> 00:00:50,240
The method gets past the meter registry to customize as an argument.

16
00:00:50,240 --> 00:00:54,380
One purpose we can use this for is to define common tax that

17
00:00:54,380 --> 00:00:57,540
you want to appear on all your metrics.

18
00:00:57,540 --> 00:00:59,010
Suppose, for example,

19
00:00:59,010 --> 00:01:02,720
that are application will run on multiple machines and that we

20
00:01:02,720 --> 00:01:06,910
want to add a host name tag to all metrics so that we can real

21
00:01:06,910 --> 00:01:10,240
down to the metrics for specific machine.

22
00:01:10,240 --> 00:01:15,270
We can do that by defining a common tack on the registry by calling registry

23
00:01:15,270 --> 00:01:20,200
do conflict or common tax real pass this method attack,

24
00:01:20,200 --> 00:01:21,940
name and value.

25
00:01:21,940 --> 00:01:24,770
The tech name is just as string host name,

26
00:01:24,770 --> 00:01:28,140
and the value is the actual host name off the machine

27
00:01:28,140 --> 00:01:30,640
that the application is running on.

28
00:01:30,640 --> 00:01:33,880
Since determining the host name is unfortunately,

29
00:01:33,880 --> 00:01:35,510
not a short statement,

30
00:01:35,510 --> 00:01:39,270
I've put that code in a separate component that will inject

31
00:01:39,270 --> 00:01:42,840
and call here to keep this example simple.

32
00:01:42,840 --> 00:01:46,930
When you now restart the spring boots service and look at any of the metrics,

33
00:01:46,930 --> 00:01:58,000
you'll see that they all have a host name tag listed under available tax. This allows you to select the metrics for a specific machine.

