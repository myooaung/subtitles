WEBVTT
1
00:00:01.570 --> 00:00:05.020
[Autogenerated] seen step functions can be used for many different cases.

2
00:00:05.020 --> 00:00:09.240
The ways we trigger them also have to be flexible when it comes to triggering.

3
00:00:09.240 --> 00:00:11.660
We have a couple of different ways off doing it.

4
00:00:11.660 --> 00:00:13.360
We can use the A B i k qui.

5
00:00:13.360 --> 00:00:14.940
It'll trigger our work clothes.

6
00:00:14.940 --> 00:00:18.540
80 I gateways can directly integrate with Amazon step functions,

7
00:00:18.540 --> 00:00:21.450
which then can be used to easily trigger them from any

8
00:00:21.450 --> 00:00:23.150
applications that we might have.

9
00:00:23.150 --> 00:00:27.360
We also can use Amazon cloudwatch events using cloudwatch events.

10
00:00:27.360 --> 00:00:30.880
We have the ability to trigger work clothes in respond to any event,

11
00:00:30.880 --> 00:00:31.770
and finally,

12
00:00:31.770 --> 00:00:35.300
we have the option to trigger the work clothes programmatically we can use.

13
00:00:35.300 --> 00:00:38.730
The Amazon is decay and the programming language off our choice toe

14
00:00:38.730 --> 00:00:41.250
programmatically trigger the step function workflow,

15
00:00:41.250 --> 00:00:42.460
thes could be alarmed.

16
00:00:42.460 --> 00:00:47.180
A function or called that runs in your own infrastructure for this demo

17
00:00:47.180 --> 00:00:50.250
were going to trigger the workflow using the FBI gateway.

18
00:00:50.250 --> 00:00:50.820
First,

19
00:00:50.820 --> 00:00:55.200
we need to create a new FBI once in the FBI gateway console that's

20
00:00:55.200 --> 00:00:57.650
greet the new FBI using the create FBI bottom.

21
00:00:57.650 --> 00:00:59.710
We are going to build arrest FBI.

22
00:00:59.710 --> 00:01:02.110
So let's choose rest and click build.

23
00:01:02.110 --> 00:01:06.260
Let's give it a descriptive name and create a B I A s a p I is created.

24
00:01:06.260 --> 00:01:07.520
We need to add a matter.

25
00:01:07.520 --> 00:01:10.420
We can do that using the create method option on the actions

26
00:01:10.420 --> 00:01:12.460
bottom for the method type we can use,

27
00:01:12.460 --> 00:01:16.570
get or boast Post is a more appropriate method for this kind of operation.

28
00:01:16.570 --> 00:01:20.140
Since we are triggering something and not asking for data,

29
00:01:20.140 --> 00:01:21.670
once we create our end point,

30
00:01:21.670 --> 00:01:24.260
we get to set up the service integration for our method.

31
00:01:24.260 --> 00:01:27.270
In the integration time, we need to choose A W S service.

32
00:01:27.270 --> 00:01:31.040
Once we do that, we get the option to select a region and the service.

33
00:01:31.040 --> 00:01:36.280
My region is US East one or North Virginia And for the AWS service,

34
00:01:36.280 --> 00:01:38.490
we're going to need to choose step functions.

35
00:01:38.490 --> 00:01:39.070
Next.

36
00:01:39.070 --> 00:01:40.130
We need to select an A C.

37
00:01:40.130 --> 00:01:42.770
To be matter, for our case is going to be posed.

38
00:01:42.770 --> 00:01:46.940
The last remaining options are action and execution role for action.

39
00:01:46.940 --> 00:01:49.300
We need to specify the value start execution.

40
00:01:49.300 --> 00:01:50.840
We can find a list of factions.

41
00:01:50.840 --> 00:01:50.980
Well,

42
00:01:50.980 --> 00:01:53.590
the Amazon step functions recommendation page start

43
00:01:53.590 --> 00:01:55.890
execution will trigger a new workflow execution,

44
00:01:55.890 --> 00:01:57.730
which is what we want in our case.

45
00:01:57.730 --> 00:02:00.330
The start execution method expects an import,

46
00:02:00.330 --> 00:02:03.140
a name and a state machine for its payload.

47
00:02:03.140 --> 00:02:06.540
And finally, for the execution roll, we need to create a new role,

48
00:02:06.540 --> 00:02:09.030
which has access to AWS step functions.

49
00:02:09.030 --> 00:02:12.120
Let's not forget to the access management console and create a neuro

50
00:02:12.120 --> 00:02:15.990
in the roll section it to create roll bottom for the transit entity

51
00:02:15.990 --> 00:02:20.450
type we're going to choose AWS service on on the list of service is we

52
00:02:20.450 --> 00:02:22.240
need to choose a B I gateway.

53
00:02:22.240 --> 00:02:25.290
We do not need to change anything on the permissions page,

54
00:02:25.290 --> 00:02:27.560
and next we can add a tug if you want.

55
00:02:27.560 --> 00:02:29.380
But in our case, we don't need to.

56
00:02:29.380 --> 00:02:32.270
And finally, let's give you the name and the description.

57
00:02:32.270 --> 00:02:36.040
Now that we have given it a name and a description, let's create our role.

58
00:02:36.040 --> 00:02:38.430
Once you're old has been created, that's open it,

59
00:02:38.430 --> 00:02:39.230
and at that,

60
00:02:39.230 --> 00:02:41.650
some permissions to eat this role needs to be able to

61
00:02:41.650 --> 00:02:43.960
execute state machines to keep things simple.

62
00:02:43.960 --> 00:02:49.100
Let's give it full access to AWS step functions.

63
00:02:49.100 --> 00:02:51.380
Now that our world has appropriate permissions,

64
00:02:51.380 --> 00:02:55.970
let's call payroll air and and go to a P I gateway set up in the execution roll.

65
00:02:55.970 --> 00:02:58.200
Let's beat the newly created roll Aaron.

66
00:02:58.200 --> 00:03:00.980
And finally, let's save our E p I baby,

67
00:03:00.980 --> 00:03:03.330
I Gateway has built in testing support that we can

68
00:03:03.330 --> 00:03:05.390
use to test our FBI integration.

69
00:03:05.390 --> 00:03:07.410
Clicking on the test, Barton will bring up the test.

70
00:03:07.410 --> 00:03:10.050
You Why in the request body,

71
00:03:10.050 --> 00:03:13.760
we need to provide the following options A name for the execution.

72
00:03:13.760 --> 00:03:17.080
These will show up in the execution is sorry for better tracking.

73
00:03:17.080 --> 00:03:19.130
Then we need to specify the state machine.

74
00:03:19.130 --> 00:03:22.440
Aaron, these should point the workflow that we want to execute.

75
00:03:22.440 --> 00:03:26.410
In this case, these points to the workflow be created in the previous clips.

76
00:03:26.410 --> 00:03:28.930
And finally, we need to pass an import.

77
00:03:28.930 --> 00:03:30.440
The import is a string property.

78
00:03:30.440 --> 00:03:32.870
So before we can pass our Jason, we need to string.

79
00:03:32.870 --> 00:03:34.270
If I for this demo,

80
00:03:34.270 --> 00:03:37.260
we're going to pass the same input as we did when we tested our report.

81
00:03:37.260 --> 00:03:38.640
Generation workflow.

82
00:03:38.640 --> 00:03:42.040
Now let's test it by clicking the desk bottom.

83
00:03:42.040 --> 00:03:44.870
If the request was successful in the response body,

84
00:03:44.870 --> 00:03:48.050
we should see the execution Aaron and start date for the execution.

85
00:03:48.050 --> 00:03:48.630
Now,

86
00:03:48.630 --> 00:03:51.600
let's not forget where step functions workflow and check if the execution

87
00:03:51.600 --> 00:03:54.860
was successful and if we look at the execution history.

88
00:03:54.860 --> 00:03:57.650
We have an execution with the name we gave a P I gateway

89
00:03:57.650 --> 00:04:00.590
execution one which was successful.

90
00:04:00.590 --> 00:04:03.560
And if we open the workflow and check its import is a

91
00:04:03.560 --> 00:04:06.710
simple that we passed through the FBI Gateway using FBI

92
00:04:06.710 --> 00:04:08.390
Gateway to trigger our work clothes.

93
00:04:08.390 --> 00:04:11.610
This has a lot of flexibility where we could use our existing

94
00:04:11.610 --> 00:04:14.340
infrastructure to integrate it with our new one.

95
00:04:14.340 --> 00:04:22.000
Without writing any called, we'll dive into other step function options in the cliffs to come.

