1
00:00:01,340 --> 00:00:04,590
[Autogenerated] step functions provide us with a lot of useful features,

2
00:00:04,590 --> 00:00:08,240
but like many other service, they have their limitations.

3
00:00:08,240 --> 00:00:10,110
We'll go over some of those limitations.

4
00:00:10,110 --> 00:00:14,780
In this clip, a workflow has a maximum one year execution time.

5
00:00:14,780 --> 00:00:17,720
If an execution continues for more than one year,

6
00:00:17,720 --> 00:00:20,240
it will fail with a timeout error.

7
00:00:20,240 --> 00:00:22,860
Most work clothes will not run for a year.

8
00:00:22,860 --> 00:00:26,130
But if by any chance your workflow has an outside input

9
00:00:26,130 --> 00:00:29,150
factor and that is not results within a year,

10
00:00:29,150 --> 00:00:30,880
your work for, well, time out.

11
00:00:30,880 --> 00:00:33,310
And if we're using express work close.

12
00:00:33,310 --> 00:00:35,780
They have a maximum lifetime off five minutes.

13
00:00:35,780 --> 00:00:39,010
But since they're used for high event, read were close.

14
00:00:39,010 --> 00:00:44,090
They're meant to run for very short periods of times and not likely to time out.

15
00:00:44,090 --> 00:00:49,510
A workflow has a 25,000 history limit to guarantee the execution off.

16
00:00:49,510 --> 00:00:53,030
All steps and their order step functions start the history of

17
00:00:53,030 --> 00:00:56,240
each execution after completion off each state.

18
00:00:56,240 --> 00:01:00,270
The execution history includes all the information that we see here.

19
00:01:00,270 --> 00:01:04,840
All of these execution event history can only go up to 25,000.

20
00:01:04,840 --> 00:01:06,030
For most cases.

21
00:01:06,030 --> 00:01:10,280
This will not be an issue if you do have very long running executions

22
00:01:10,280 --> 00:01:13,260
that may reach such higher number of state transitions.

23
00:01:13,260 --> 00:01:17,740
You might need to consider splitting your work floors to stay under the limit.

24
00:01:17,740 --> 00:01:19,700
Or we can add logic to our workflow.

25
00:01:19,700 --> 00:01:23,970
So we keep track off the execution, he 30 and when the limit is reached,

26
00:01:23,970 --> 00:01:28,050
we can start a new execution when we use activities were continuously

27
00:01:28,050 --> 00:01:32,040
pulling for available tasks to complete the number of conquering requests

28
00:01:32,040 --> 00:01:35,940
that we can have for a specific activity East 1000.

29
00:01:35,940 --> 00:01:37,360
If we exceed this quarter,

30
00:01:37,360 --> 00:01:40,380
we will get an error that says the maximum number of workers

31
00:01:40,380 --> 00:01:44,040
concurrently pulling for an activity task has been reached.

32
00:01:44,040 --> 00:01:47,200
One of the limitation that we have is a payload size that we can

33
00:01:47,200 --> 00:01:50,130
make a request against an AWS step function.

34
00:01:50,130 --> 00:01:53,100
This payload is said to 32 kilobytes.

35
00:01:53,100 --> 00:01:55,950
If we have a pay look that is more than 32 kilobytes,

36
00:01:55,950 --> 00:01:58,020
then we should use something else to story.

37
00:01:58,020 --> 00:02:00,540
A good candidate is Amazonas three.

38
00:02:00,540 --> 00:02:05,140
Once we start appeal it there, then we compare the file air in between steps.

39
00:02:05,140 --> 00:02:08,770
These will help bring down the pale outside significantly,

40
00:02:08,770 --> 00:02:11,990
and if we happen to have sensitive information going

41
00:02:11,990 --> 00:02:14,440
in as input into different steps.

42
00:02:14,440 --> 00:02:18,010
Then we could encrypt that information industry so

43
00:02:18,010 --> 00:02:20,440
no unauthorized people can see.

44
00:02:20,440 --> 00:02:23,300
Now let's look at what happens when we pass a payload

45
00:02:23,300 --> 00:02:25,640
that is more than 32 kilobytes.

46
00:02:25,640 --> 00:02:29,820
As a payload, I'm passing in a property that says more than 32 kilobyte,

47
00:02:29,820 --> 00:02:32,640
which is a _____ payload out of generated.

48
00:02:32,640 --> 00:02:37,840
Once we started execution, you should get a mirror, and indeed we get an error.

49
00:02:37,840 --> 00:02:40,980
The value of input is more than 32 kilobytes.

50
00:02:40,980 --> 00:02:42,710
We get this error using a console.

51
00:02:42,710 --> 00:02:46,540
You I and if we were using other means off triggering our workflow,

52
00:02:46,540 --> 00:02:49,040
we would get a similar error message.

53
00:02:49,040 --> 00:02:50,400
When building your workflow,

54
00:02:50,400 --> 00:02:58,000
Try to keep this information in mind so you don't get any surprises while running your work clothes on production.

