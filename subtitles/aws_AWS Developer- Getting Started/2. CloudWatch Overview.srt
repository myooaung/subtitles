1
00:00:00,940 --> 00:00:04,820
[Autogenerated] imagine getting that call at two a.m. You know the one I'm

2
00:00:04,820 --> 00:00:08,620
talking about your manager shouting through the phone that the production

3
00:00:08,620 --> 00:00:11,780
side is down and why did his boss have to call him?

4
00:00:11,780 --> 00:00:15,140
Wondering why the ceo couldn't access his product.

5
00:00:15,140 --> 00:00:17,440
It's a pretty bad situation right?

6
00:00:17,440 --> 00:00:20,490
Being aware of the status of your application and resources

7
00:00:20,490 --> 00:00:24,040
is a vital part of deploying any application to production

8
00:00:24,040 --> 00:00:26,340
and especially in the cloud.

9
00:00:26,340 --> 00:00:29,490
I doubt you want to manually watch your resources,

10
00:00:29,490 --> 00:00:32,820
which is why CloudWatch might end up being one of your favorite.

11
00:00:32,820 --> 00:00:36,670
services CloudWatch is a service that allows you to set

12
00:00:36,670 --> 00:00:39,640
alarms for various metric thresholds.

13
00:00:39,640 --> 00:00:44,920
Some examples are CPU usage on ec two instances provisioned

14
00:00:44,920 --> 00:00:49,790
throughput for dynamodb tables or billing estimates by setting

15
00:00:49,790 --> 00:00:52,050
an alarm and adding a notification.

16
00:00:52,050 --> 00:00:56,340
CloudWatch will send out an alert anytime the alarm is triggered.

17
00:00:56,340 --> 00:01:00,560
You can easily configure where the alert should be sent to using the

18
00:01:00,560 --> 00:01:05,710
simple notification service and at 10 cents per alarm each month you

19
00:01:05,710 --> 00:01:09,170
can add as many alarms as you'd like to ensure you're notified

20
00:01:09,170 --> 00:01:11,940
anytime something eventful happens,

21
00:01:11,940 --> 00:01:18,110
notifications can be sent as email sms http requests and

22
00:01:18,110 --> 00:01:20,500
more cloudwatch alarms don't stop.

23
00:01:20,500 --> 00:01:22,740
It's simple notifications however,

24
00:01:22,740 --> 00:01:25,840
you can also configure an alarm to trigger an action

25
00:01:25,840 --> 00:01:28,240
when a certain threshold is passed.

26
00:01:28,240 --> 00:01:31,550
This action-based response is available for ec two

27
00:01:31,550 --> 00:01:36,080
instances and auto scaling groups an example would be if

28
00:01:36,080 --> 00:01:38,810
the incoming network requests to an ec.

29
00:01:38,810 --> 00:01:43,420
Two instance pass a certain threshold then you could trigger an auto scaling

30
00:01:43,420 --> 00:01:47,550
group action that adds another ec two instance to the group.

31
00:01:47,550 --> 00:01:51,490
In fact auto scaling groups use CloudWatch under the covers

32
00:01:51,490 --> 00:01:54,940
to trigger their own scaling actions.

33
00:01:54,940 --> 00:01:56,690
After setting cloudwatch alarms,

34
00:01:56,690 --> 00:02:07,000
you can rest easy knowing that your application can auto scale as needed and, if any other operation needs your attention that you'll be notified swiftly.

