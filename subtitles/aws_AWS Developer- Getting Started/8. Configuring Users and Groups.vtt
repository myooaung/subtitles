WEBVTT
1
00:00:01.040 --> 00:00:03.240
[Autogenerated] users and I am allow you to manage

2
00:00:03.240 --> 00:00:06.750
authentication and access for a single entity,

3
00:00:06.750 --> 00:00:07.700
sometimes a person,

4
00:00:07.700 --> 00:00:12.610
but other times an application or resource from the I am console,

5
00:00:12.610 --> 00:00:16.240
you can manage a user's access and permissions easily.

6
00:00:16.240 --> 00:00:20.640
But as the number of users rise management can become complex.

7
00:00:20.640 --> 00:00:24.740
This is why Amazon provides the group's functionality as well.

8
00:00:24.740 --> 00:00:28.240
Groups allow you to apply policies to a group of users

9
00:00:28.240 --> 00:00:30.550
that have been added to set group.

10
00:00:30.550 --> 00:00:36.040
In fact, amazon suggests applying policies to groups instead of users.

11
00:00:36.040 --> 00:00:39.240
Since it is easier to manage permissions that way,

12
00:00:39.240 --> 00:00:41.890
users can be added to more than one group as well.

13
00:00:41.890 --> 00:00:45.510
So there's no problems with making groups as specific

14
00:00:45.510 --> 00:00:48.180
as you want as a best practice.

15
00:00:48.180 --> 00:00:52.310
Amazon suggests not using your root account to do things in A W.

16
00:00:52.310 --> 00:00:57.440
S because you have unlimited permissions to do just about anything.

17
00:00:57.440 --> 00:00:58.170
Instead,

18
00:00:58.170 --> 00:01:01.450
it is suggested to create a user and login under that

19
00:01:01.450 --> 00:01:04.560
account to administer services in AWS.

20
00:01:04.560 --> 00:01:08.240
So let's do that now in the AWS management console.

21
00:01:08.240 --> 00:01:14.040
Go to the I AM dashboard on the left hand side, select the users option.

22
00:01:14.040 --> 00:01:16.140
Now we want to make a new user.

23
00:01:16.140 --> 00:01:18.840
So click the add user button,

24
00:01:18.840 --> 00:01:22.220
enter a user name that you'll use for yourself here.

25
00:01:22.220 --> 00:01:25.280
It's probably best to make it different from your root login.

26
00:01:25.280 --> 00:01:26.630
To avoid confusion,

27
00:01:26.630 --> 00:01:32.680
we will replace our AWS Cli access key with the one assigned to this user.

28
00:01:32.680 --> 00:01:36.440
So click the programmatic access button,

29
00:01:36.440 --> 00:01:41.260
click next we're not going to set any permissions for this user just yet.

30
00:01:41.260 --> 00:01:46.820
So click next and then next again and finally create user.

31
00:01:46.820 --> 00:01:50.680
Now either download the credentials or copy the credentials

32
00:01:50.680 --> 00:01:53.840
here and save them somewhere temporarily.

33
00:01:53.840 --> 00:01:58.100
When you're done, click the close button before we modify our user.

34
00:01:58.100 --> 00:02:03.770
We just created let's update the access keys and our AWS cli open up a

35
00:02:03.770 --> 00:02:09.520
command line and type AWS configure this prompt should seem familiar but

36
00:02:09.520 --> 00:02:12.440
it now has some new values and brackets.

37
00:02:12.440 --> 00:02:14.990
These are the previously configured values.

38
00:02:14.990 --> 00:02:18.350
Input the new access key and secret that we just generated with

39
00:02:18.350 --> 00:02:22.970
our new user at the default region and output fields hit enter

40
00:02:22.970 --> 00:02:25.740
to accept what you entered before.

41
00:02:25.740 --> 00:02:31.000
Now our Cli and SDK is configured to use the users access that we

42
00:02:31.000 --> 00:02:35.940
just created if we try the test operation we did before by entering

43
00:02:35.940 --> 00:02:41.040
a W S E C to describe dash instances.

44
00:02:41.040 --> 00:02:45.770
A message should output saying you aren't authorized to perform this operation,

45
00:02:45.770 --> 00:02:50.740
which is perfect because we haven't given this user any permissions yet.

46
00:02:50.740 --> 00:02:52.560
Now, back in the console,

47
00:02:52.560 --> 00:02:57.640
let's improve our root account security by deleting that root access key,

48
00:02:57.640 --> 00:03:01.840
click on your name in the upper right and select security credentials,

49
00:03:01.840 --> 00:03:07.540
expand the access keys section and find the key that you created previously.

50
00:03:07.540 --> 00:03:10.410
And select the delete option next to it.

51
00:03:10.410 --> 00:03:15.450
Go through these weird steps to permanently delete the key and

52
00:03:15.450 --> 00:03:19.190
then you'll have completed another AWS security.

53
00:03:19.190 --> 00:03:21.140
Best practice awesome.

54
00:03:21.140 --> 00:03:24.240
Now our account is even more secure.

55
00:03:24.240 --> 00:03:25.440
Back to our user.

56
00:03:25.440 --> 00:03:28.400
We will be logging in as this user to administer

57
00:03:28.400 --> 00:03:30.630
services for the rest of this course.

58
00:03:30.630 --> 00:03:33.140
So let's give it some permissions.

59
00:03:33.140 --> 00:03:36.890
Remember amazon suggests applying policies to groups.

60
00:03:36.890 --> 00:03:40.330
So let's create an admin group for our user to be

61
00:03:40.330 --> 00:03:46.140
added to from the I am dashboard, click the user groups menu option on the left,

62
00:03:46.140 --> 00:03:52.340
then click the create group button, name this group admin.

63
00:03:52.340 --> 00:03:53.630
Now scroll down.

64
00:03:53.630 --> 00:03:57.440
We won't be adding the user here because I want to show you how to

65
00:03:57.440 --> 00:03:59.730
do that in a different way a little bit later.

66
00:03:59.730 --> 00:04:03.940
Go ahead and keep scrolling to the permission section.

67
00:04:03.940 --> 00:04:08.570
Although amazon also suggests following the principle of least privilege and

68
00:04:08.570 --> 00:04:12.140
only giving users access to what they absolutely need.

69
00:04:12.140 --> 00:04:16.850
Including groups applying this principle will make the rest

70
00:04:16.850 --> 00:04:19.410
of this course really difficult because we're gonna be

71
00:04:19.410 --> 00:04:20.900
doing a lot of different things.

72
00:04:20.900 --> 00:04:24.610
So for the purposes of this course we're just going to

73
00:04:24.610 --> 00:04:26.690
let our user do pretty much anything.

74
00:04:26.690 --> 00:04:31.470
So use this filter box to search for administrator and

75
00:04:31.470 --> 00:04:35.510
then click the checkbox next to administrator access to

76
00:04:35.510 --> 00:04:38.340
attach that policy to this group.

77
00:04:38.340 --> 00:04:43.240
This will give our admin group access to do almost anything in AWS.

78
00:04:43.240 --> 00:04:45.850
You can tailor this to your needs later as well.

79
00:04:45.850 --> 00:04:48.640
Since you can apply and remove policies to users or

80
00:04:48.640 --> 00:04:50.660
groups anytime you want with.

81
00:04:50.660 --> 00:04:55.740
I am finally click the create group button.

82
00:04:55.740 --> 00:04:59.120
Now you can go about adding users to a group from either

83
00:04:59.120 --> 00:05:01.940
the group screen or the user screen.

84
00:05:01.940 --> 00:05:05.640
Since we're already at groups, let's just do it here.

85
00:05:05.640 --> 00:05:09.270
Click on our admin group and then click the add users

86
00:05:09.270 --> 00:05:12.140
to group button in the users tab.

87
00:05:12.140 --> 00:05:14.840
We've only got one user so select that.

88
00:05:14.840 --> 00:05:20.580
And click add users Now you should see the users tab again for your admin

89
00:05:20.580 --> 00:05:24.530
group and your user you just added should be visible.

90
00:05:24.530 --> 00:05:28.300
I want us to confirm the permissions that have been assigned to the user.

91
00:05:28.300 --> 00:05:32.920
So click the user that you just created then on the permissions tab

92
00:05:32.920 --> 00:05:37.490
you'll see that the administrator access policy is showing is

93
00:05:37.490 --> 00:05:40.200
attached to that user next to the policy.

94
00:05:40.200 --> 00:05:43.880
It says that the policy is coming from the group admin

95
00:05:43.880 --> 00:05:46.250
which is exactly as it should be.

96
00:05:46.250 --> 00:05:49.590
And so this is showing that by adding a policy to a

97
00:05:49.590 --> 00:05:52.110
group and the user to a group.

98
00:05:52.110 --> 00:05:55.080
The policy is then applied to the user.

99
00:05:55.080 --> 00:05:58.290
Now we have one last step to finishing setting up this

100
00:05:58.290 --> 00:06:01.430
user and that's configuring the sign in credentials for

101
00:06:01.430 --> 00:06:03.400
the user from the user screen.

102
00:06:03.400 --> 00:06:08.150
Select the security credentials, tap in the sign in credentials section.

103
00:06:08.150 --> 00:06:11.740
You'll see a few options that you can configure for a user to

104
00:06:11.740 --> 00:06:14.280
log into our account through the console.

105
00:06:14.280 --> 00:06:16.740
There must be a password configured,

106
00:06:16.740 --> 00:06:22.060
click the manage link next to console password and the model that pops up,

107
00:06:22.060 --> 00:06:26.240
select the enable radio button for console access,

108
00:06:26.240 --> 00:06:30.840
then select custom password and enter a password of your choice.

109
00:06:30.840 --> 00:06:33.950
You can see there are some other options to create an auto

110
00:06:33.950 --> 00:06:37.850
generated password and to require the user to create a new

111
00:06:37.850 --> 00:06:40.320
password after their next sign in.

112
00:06:40.320 --> 00:06:44.630
I do use these when configuring new users during my day job

113
00:06:44.630 --> 00:06:48.240
and recommend you do the same but don't worry about it here

114
00:06:48.240 --> 00:06:50.240
go ahead and click apply now.

115
00:06:50.240 --> 00:06:53.340
We have a user with a password and permissions.

116
00:06:53.340 --> 00:06:56.110
We'll be using this user to sign in for the rest of

117
00:06:56.110 --> 00:06:59.040
this course so let's give it a shot.

118
00:06:59.040 --> 00:07:02.420
Users won't use the login screen that we've used so far in this

119
00:07:02.420 --> 00:07:07.200
course that one is only for root logins instead they'll use a

120
00:07:07.200 --> 00:07:10.180
login URL with the AWS account I.

121
00:07:10.180 --> 00:07:10.480
D.

122
00:07:10.480 --> 00:07:11.680
Already built in.

123
00:07:11.680 --> 00:07:16.430
You can see the URL here on the user screen but you can also find it

124
00:07:16.430 --> 00:07:21.140
on the I am dashboard for your account right here,

125
00:07:21.140 --> 00:07:26.540
copy that link to save it and then log out of the current AWS session.

126
00:07:26.540 --> 00:07:31.640
Once the log out is complete pacey URL and your browser and navigate to it.

127
00:07:31.640 --> 00:07:36.840
You'll see that this login screen looks slightly different than it did before.

128
00:07:36.840 --> 00:07:39.570
There's a field for an account number which is pre

129
00:07:39.570 --> 00:07:42.540
populated based on the link that you entered.

130
00:07:42.540 --> 00:07:43.260
This is how a.

131
00:07:43.260 --> 00:07:43.560
W.

132
00:07:43.560 --> 00:07:43.770
S.

133
00:07:43.770 --> 00:07:47.240
Will connect your log in to your account,

134
00:07:47.240 --> 00:07:52.250
enter the username and password for the user we created and sign in in

135
00:07:52.250 --> 00:07:55.450
the upper right hand corner you should see the user name and account

136
00:07:55.450 --> 00:07:59.040
number instead of the root account name.

137
00:07:59.040 --> 00:08:06.000
Now we're all set up to continue working in our AWS account for the rest of this course.

