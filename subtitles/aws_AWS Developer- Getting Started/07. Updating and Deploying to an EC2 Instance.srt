1
00:00:00,940 --> 00:00:03,430
[Autogenerated] now that we have access to our instance.

2
00:00:03,430 --> 00:00:06,540
We need to update and install some software.

3
00:00:06,540 --> 00:00:08,620
If you have disconnected from the instance,

4
00:00:08,620 --> 00:00:15,080
connect again with the command SSH dash I path your PIM file E C

5
00:00:15,080 --> 00:00:19,740
two dash user at elastic iP of your instance.

6
00:00:19,740 --> 00:00:22,580
Now the first thing we'll do is to update any

7
00:00:22,580 --> 00:00:25,140
packages in here that are out of date,

8
00:00:25,140 --> 00:00:33,040
run Sudo yum update and then why if it prompts for an installation,

9
00:00:33,040 --> 00:00:36,400
the next step is to install node on our instance so

10
00:00:36,400 --> 00:00:38,640
that we can run the demo application,

11
00:00:38,640 --> 00:00:43,260
we'll need to update our repositories and the yum package manager and then

12
00:00:43,260 --> 00:00:48,490
install it that way in the ec two instance prompt enter this command which is

13
00:00:48,490 --> 00:00:54,270
long and will sound really weird if I actually read it to you wait for it to

14
00:00:54,270 --> 00:01:02,180
finish and in the following prompt, execute Sudo yum install dash y.

15
00:01:02,180 --> 00:01:07,270
Node.js once that completes you should have knowed installed.

16
00:01:07,270 --> 00:01:12,700
So let's try it out by executing node dash V and you

17
00:01:12,700 --> 00:01:16,240
should see a node version output.

18
00:01:16,240 --> 00:01:17,740
Now that we've updated our instance,

19
00:01:17,740 --> 00:01:20,620
we're ready to transfer over our demo application code,

20
00:01:20,620 --> 00:01:23,930
we will use SCP for this transfer,

21
00:01:23,930 --> 00:01:27,650
this is installed by default on Mac and Linux for Windows

22
00:01:27,650 --> 00:01:33,070
users SCP comes with open SSH so if you've already installed

23
00:01:33,070 --> 00:01:36,840
open SSH then you have SCP as well.

24
00:01:36,840 --> 00:01:40,950
If you're still logged into the instance we do need to log out first.

25
00:01:40,950 --> 00:01:46,640
So type exit at the prompt and it should return you to your system prompt

26
00:01:46,640 --> 00:01:50,030
before we copy our Pizza Lovers files to our ec two instance,

27
00:01:50,030 --> 00:01:53,780
let's make sure and delete the local node modules folder.

28
00:01:53,780 --> 00:01:58,020
This holds all of our no dependencies and it takes up about 60

29
00:01:58,020 --> 00:02:03,000
megabytes copying this over is going to take extra long so we'll just

30
00:02:03,000 --> 00:02:06,240
re download the dependencies from our instance.

31
00:02:06,240 --> 00:02:10,910
Once you've deleted that folder entered this command SCP

32
00:02:10,910 --> 00:02:15,540
dash R dash I the path to your PIM file.

33
00:02:15,540 --> 00:02:22,170
The local path to the demo code E C two dash user at the ec two.

34
00:02:22,170 --> 00:02:30,640
IP colon slash home slash easy to dash user which was also really long.

35
00:02:30,640 --> 00:02:35,930
This will copy the contents of your local Pizza Lovers folder to a Pizza

36
00:02:35,930 --> 00:02:39,820
Lovers folder that will be created on the ec two instance.

37
00:02:39,820 --> 00:02:42,560
It will take some time to copy the files over.

38
00:02:42,560 --> 00:02:46,390
Remember we have a micro instance so the CPU and network

39
00:02:46,390 --> 00:02:50,310
performance are very low network intensive activities like

40
00:02:50,310 --> 00:02:53,340
downloading or uploading may take a while.

41
00:02:53,340 --> 00:02:54,260
Once it's complete,

42
00:02:54,260 --> 00:02:59,350
go ahead and log back into the instance with our SSH command when logging in,

43
00:02:59,350 --> 00:03:01,250
you will be placed in the ec.

44
00:03:01,250 --> 00:03:06,840
Two user directory which is where we copied our demo application code two.

45
00:03:06,840 --> 00:03:11,690
Change directories into the Pizza Lovers directory with the command cd,

46
00:03:11,690 --> 00:03:13,740
Pizza dash Lovers.

47
00:03:13,740 --> 00:03:17,120
The next step is to install the no dependencies into this folder.

48
00:03:17,120 --> 00:03:22,790
So run the command npm install when it finishes we can start

49
00:03:22,790 --> 00:03:25,240
our application up with the command in p.

50
00:03:25,240 --> 00:03:25,410
M.

51
00:03:25,410 --> 00:03:31,880
Start now the output message will say the app is running at a 10 dot x.

52
00:03:31,880 --> 00:03:37,290
IP but remember this is the internal IP Open up a browser window

53
00:03:37,290 --> 00:03:43,450
and enter the elastic IP then colon and the port 3000 hit go and

54
00:03:43,450 --> 00:03:46,140
you should see Pizza Lovers load up.

55
00:03:46,140 --> 00:03:47,440
Hold on.

56
00:03:47,440 --> 00:03:51,740
Is this pizza lovers running on an ec two instance?

57
00:03:51,740 --> 00:03:53,130
Yes, it is.

58
00:03:53,130 --> 00:03:57,310
You've successfully deployed your first application to AWS.

59
00:03:57,310 --> 00:04:02,540
Congratulations, go ahead and make yourself a pizza to celebrate.

60
00:04:02,540 --> 00:04:12,000
Now that we've got an app running successfully in ec two, let's make it scale by setting up a load balancer and an auto scaling group.

