1
00:00:00,740 --> 00:00:05,270
[Autogenerated] Aws is a collection of over 170 services to choose

2
00:00:05,270 --> 00:00:10,090
from and develop with most services can operate independently or by

3
00:00:10,090 --> 00:00:13,910
integrating with other services with so many choices and

4
00:00:13,910 --> 00:00:16,110
overlapping levels of functionality.

5
00:00:16,110 --> 00:00:20,930
It can definitely get confusing I don't think calling it a web of

6
00:00:20,930 --> 00:00:25,020
services is that much of a stretch considering how you can easily

7
00:00:25,020 --> 00:00:27,560
get stuck in trying to understand it all.

8
00:00:27,560 --> 00:00:32,460
And the more you thrash around, the more confusing it gets in this course,

9
00:00:32,460 --> 00:00:36,840
we're going to move calmly through this web and avoid getting caught in it.

10
00:00:36,840 --> 00:00:37,460
Instead,

11
00:00:37,460 --> 00:00:41,510
we're going to look at a W S as a whole to understand how everything

12
00:00:41,510 --> 00:00:46,990
interacts together most services in a W S R access with a TCP

13
00:00:46,990 --> 00:00:52,940
connection often this might simply be HTTP but sometimes can use a

14
00:00:52,940 --> 00:00:56,140
designated port based on the service.

15
00:00:56,140 --> 00:01:00,880
Each instance of a service oftentimes called a resources given a local

16
00:01:00,880 --> 00:01:04,940
IP address with which other services can communicate with it.

17
00:01:04,940 --> 00:01:07,740
This IP is not connected to the outside world,

18
00:01:07,740 --> 00:01:12,240
although you can also assign an external IP if needed.

19
00:01:12,240 --> 00:01:13,120
Alternately,

20
00:01:13,120 --> 00:01:16,600
some services should be referenced by their amazon resource

21
00:01:16,600 --> 00:01:20,820
names instead of IP like dynamodb for instance,

22
00:01:20,820 --> 00:01:25,380
and I should say this setup is true for most services where there is a

23
00:01:25,380 --> 00:01:31,180
resource created some of amazon services aren't resource based and so

24
00:01:31,180 --> 00:01:36,200
won't be used this way being able to connect to resources this way means

25
00:01:36,200 --> 00:01:38,530
that there isn't any magic going on.

26
00:01:38,530 --> 00:01:41,480
The connection may just be an http request,

27
00:01:41,480 --> 00:01:45,140
which you should be familiar with already.

28
00:01:45,140 --> 00:01:49,000
The core of the web of amazon web services is elastic.

29
00:01:49,000 --> 00:01:51,940
Cloud compute also called EC two.

30
00:01:51,940 --> 00:01:55,330
You can think of this as a service that provides servers

31
00:01:55,330 --> 00:01:58,140
where your application will be running.

32
00:01:58,140 --> 00:02:02,440
You see to actually forms the basis of many other services as well,

33
00:02:02,440 --> 00:02:07,140
such as relational database service and elastic beanstalk.

34
00:02:07,140 --> 00:02:11,370
We'll spend plenty of time on ec two and learn all the ins and outs

35
00:02:11,370 --> 00:02:14,940
of the service as well as many more in this class.

36
00:02:14,940 --> 00:02:17,440
although seemingly complex at first,

37
00:02:17,440 --> 00:02:20,410
once you start working with some of these services,

38
00:02:20,410 --> 00:02:23,850
the true nature of this web will become clear each

39
00:02:23,850 --> 00:02:25,980
service interacts slightly different,

40
00:02:25,980 --> 00:02:33,000
but the core principles of how AWS functions will become familiar as you work with them.

