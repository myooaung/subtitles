WEBVTT
0
1
00:00:00.630 --> 00:00:05.250
Question number 5 is am I making life difficult for my users?
1

2
00:00:05.250 --> 00:00:05.850
What does that mean?
2

3
00:00:05.910 --> 00:00:12.300
So you know when you go and buy a laptop you think about how much RAM is there in this laptop, how much
3

4
00:00:12.300 --> 00:00:13.680
memory does it have.
4

5
00:00:13.680 --> 00:00:19.860
Essentially you're looking at you know how many large programs can I run simultaneously and have my
5

6
00:00:19.860 --> 00:00:24.230
laptop still working smoothly and not freezing on me.
6

7
00:00:24.300 --> 00:00:25.810
That's essentially what that question is.
7

8
00:00:25.860 --> 00:00:31.340
And this is also what you should ask when you're designing apps for your users.
8

9
00:00:31.350 --> 00:00:35.340
As humans we also have a limited amount of RAM.
9

10
00:00:35.340 --> 00:00:39.040
And as designers we should treat that RAM with respect.
10

11
00:00:39.060 --> 00:00:43.330
We should try and minimize our toll on the user's brain.
11

12
00:00:43.350 --> 00:00:49.080
So just as when we're programming we're trying to make our code as lightweight as efficient as possible,
12

13
00:00:49.440 --> 00:00:50.670
when we're designing
13

14
00:00:50.670 --> 00:00:56.820
we're trying to make the interface as clear and as least confusing as possible for our users.
14

15
00:00:56.820 --> 00:00:58.240
So let me illustrate what I mean.
15

16
00:00:58.260 --> 00:01:04.830
We've all seen these horrendous password rules when you're trying to sign up to some website and they
16

17
00:01:04.830 --> 00:01:07.040
ask you to create a new password.
17

18
00:01:07.050 --> 00:01:10.100
Now this particular one is pretty bad.
18

19
00:01:10.110 --> 00:01:12.430
They have what eight rules.
19

20
00:01:12.450 --> 00:01:18.090
So your password has to include uppercase, lowercase, number symbol, 8 to 13 characters long,
20

21
00:01:18.120 --> 00:01:22.720
no dictionary words, no more than three adjacent or repeated keys.
21

22
00:01:22.800 --> 00:01:29.730
So I probably could come up with a password that fits all of these rules but I will never have to remember
22

23
00:01:29.730 --> 00:01:30.120
it.
23

24
00:01:30.120 --> 00:01:34.920
And this is that product asking to put a huge toll on my brain.
24

25
00:01:34.920 --> 00:01:42.480
Now, very often when I come across these types of account Sign-Up password rules, you know I think to
25

26
00:01:42.480 --> 00:01:46.240
myself "I'm not signing up for a job at MI5.
26

27
00:01:46.260 --> 00:01:48.140
I'm not signing up for the CIA.
27

28
00:01:48.150 --> 00:01:51.270
You know why does it need to be so secure?"
28

29
00:01:51.270 --> 00:01:56.100
Now of course security is really important and especially with payment details.
29

30
00:01:56.100 --> 00:02:01.560
But at the same time if I'm signing up for something like a service that helps you find dogs nearby
30

31
00:02:01.560 --> 00:02:08.730
to walk, do the password rules really need to be so stringent? And very often when you're designing product
31

32
00:02:08.820 --> 00:02:15.450
you'll notice that when the password rules get too complicated and you overload a user's brain making
32

33
00:02:15.450 --> 00:02:18.260
them think that this is way too much effort,
33

34
00:02:18.360 --> 00:02:20.650
you'll see that you'll sign ups drop off.
34

35
00:02:20.750 --> 00:02:27.780
And so there is a happy medium between keeping that password secure and encouraging your users to sign
35

36
00:02:27.780 --> 00:02:28.170
on.
36

37
00:02:28.170 --> 00:02:34.320
So I would urge you especially if you're making a product that doesn't require any payment details, any
37

38
00:02:34.320 --> 00:02:42.030
personally identifiable information, then just try and make your password rules as tolerant as forgiving
38

39
00:02:42.030 --> 00:02:43.080
as possible.
39

40
00:02:43.080 --> 00:02:46.370
Now the app equivalent to this is huge
40

41
00:02:46.410 --> 00:02:54.090
onboarding tutorials. Now in order to use this app you have to first get through nine screens of tutorials
41

42
00:02:54.360 --> 00:02:57.750
each telling you how to use the app.
42

43
00:02:57.780 --> 00:03:03.930
Now, firstly most users, you and I, included will probably just go skip skip skip until the end.
43

44
00:03:03.930 --> 00:03:07.590
We wouldn't have learned anything and it would have annoyed us ever so slightly.
44

45
00:03:07.710 --> 00:03:11.280
So you don't want to start off on the wrong foot with your users.
45

46
00:03:11.340 --> 00:03:18.980
Instead, what you want to do is you want to give people tidbits of information as and when it's needed.
46

47
00:03:18.990 --> 00:03:20.490
So make it contextual.
47

48
00:03:20.490 --> 00:03:27.630
For example, when you download the to-do app, on the home page if they're on no tasks, then the first time
48

49
00:03:27.900 --> 00:03:34.020
you open up this app it'll give you a slight hint saying hey if you press over here you can add a task.
49

50
00:03:34.470 --> 00:03:40.290
And when you do that, it'll give you another pointer saying "If you tab here you can see more options."
50

51
00:03:40.290 --> 00:03:43.470
Now these tips and hints are contextual.
51

52
00:03:43.590 --> 00:03:46.640
They are relevant to the task at hand.
52

53
00:03:46.770 --> 00:03:52.410
And for those people who are interested in accelerated learning or teaching methods, the most important
53

54
00:03:52.410 --> 00:03:58.420
thing is showing somebody something just as and when they need it
54

55
00:03:58.680 --> 00:04:00.440
and getting them to do it.
55

56
00:04:00.450 --> 00:04:02.250
To repeat that task.
56

57
00:04:02.250 --> 00:04:05.060
This is something that we embrace in our curriculum.
57

58
00:04:05.070 --> 00:04:11.030
For example, we have tutorial apps that teach you how to code up a certain functionality.
58

59
00:04:11.130 --> 00:04:14.390
You see me doing it, you seem explaining how it works
59

60
00:04:14.520 --> 00:04:18.350
and then the next step is you have to do it yourself.
60

61
00:04:18.510 --> 00:04:22.580
You have to solidify that knowledge by carrying out a task.
61

62
00:04:22.680 --> 00:04:25.760
And this is how you want to teach users to use your app.
62

63
00:04:25.830 --> 00:04:29.940
Don't overload their brain with loads of information at the beginning.
63

64
00:04:29.940 --> 00:04:35.720
This is called front loading and it's a really bad and it's really bad for teaching people.
64

65
00:04:35.790 --> 00:04:41.850
So tread gently on your uses brain. Try to minimize the effort that they need to put in in order to learn
65

66
00:04:41.850 --> 00:04:42.930
how to use your app.
66

67
00:04:42.960 --> 00:04:49.910
Now another way that you can overload a user's brain is with confusion tactics.
67

68
00:04:49.920 --> 00:04:59.370
Now what do I mean by this? This is the ATM PIN pad of all Barclays ATMs across the UK.
68

69
00:04:59.460 --> 00:05:05.990
Now the the thing that has changed over the last few years compared to previously is this button right
69

70
00:05:05.990 --> 00:05:13.670
here. This button used to say "CLEAR" and that makes a whole lot of sense because when you when you type
70

71
00:05:13.670 --> 00:05:19.310
in your PIN and you press this button, it's essentially the backspace. It delete your pin so that you
71

72
00:05:19.310 --> 00:05:20.500
can enter it again.
72

73
00:05:20.750 --> 00:05:23.250
And that button should be labeled clear
73

74
00:05:23.270 --> 00:05:28.260
because that's what you're doing. You're clearing the pin so that the user can enter it again.
74

75
00:05:28.310 --> 00:05:33.280
But recently they decided to change this to the word 'ERROR'.
75

76
00:05:33.650 --> 00:05:41.840
I do not know why, but this is really confusing because I'm at an ATM where I'm already paranoid because
76

77
00:05:41.840 --> 00:05:47.090
the machines telling me look behind your shoulders, see if somebody's stealing your PIN and then cover
77

78
00:05:47.090 --> 00:05:50.680
your PIN and it's it's a very stressful situation actually.
78

79
00:05:50.840 --> 00:05:56.060
And now I've entered the wrong pin because I'm stressed and I'm looking at those PIN pad and I can't see
79

80
00:05:56.060 --> 00:06:02.420
a clear button or backspace sign and all I see is this 'ERROR'. And I'm so confused, I'm thinking you know
80

81
00:06:02.450 --> 00:06:06.630
if I press this button, is the alarm bells going to ring?
81

82
00:06:06.860 --> 00:06:08.360
What kind of error am I-
82

83
00:06:08.360 --> 00:06:09.990
am I trying to report?
83

84
00:06:10.130 --> 00:06:15.640
So, don't confuse your users. Try to make your wording as clear as possible.
84

85
00:06:15.710 --> 00:06:19.130
And this is the app equivalent of that real life example.
85

86
00:06:19.130 --> 00:06:26.130
Now all of us are used to this idea that when we pull and we release, we are releasing to refresh.
86

87
00:06:26.300 --> 00:06:27.670
It's the same in Facebook,
87

88
00:06:27.680 --> 00:06:29.740
it's the same in Twitter, it's the same in Instagram,
88

89
00:06:29.750 --> 00:06:31.520
it is same everywhere.
89

90
00:06:31.520 --> 00:06:36.400
This is a pattern that has become ingrained in all of our brains.
90

91
00:06:36.410 --> 00:06:42.500
Now there was an app called Seed which decided that it was going to teach us a new trick and instead
91

92
00:06:42.500 --> 00:06:48.010
of pulling to refresh they decided that you should pull and release to
92

93
00:06:48.020 --> 00:06:52.850
add a reminder in the app and this was as confusing as hell.
93

94
00:06:52.970 --> 00:06:54.900
Nobody really understood this.
94

95
00:06:54.920 --> 00:06:58.720
And in the second version of this app they actually scrapped it entirely.
95

96
00:06:58.820 --> 00:07:00.800
But the damage was already done.
96

97
00:07:00.800 --> 00:07:03.940
They lost users based on this anti-pattern.
97

98
00:07:04.070 --> 00:07:10.550
When something is so ingrained such as pull to refresh or pinch to zoom, you can't try and map that on
98

99
00:07:10.550 --> 00:07:11.600
to something else.
99

100
00:07:11.600 --> 00:07:14.140
It will cause a lot of confusion
100

101
00:07:14.230 --> 00:07:17.090
and humans generally don't like being confused.
101

102
00:07:17.180 --> 00:07:22.440
They'll associate negative feelings with your app and so try and avoid confusing users
102

103
00:07:22.490 --> 00:07:23.120
if you can.
