WEBVTT
0
1
00:00:00.230 --> 00:00:00.870
All right, guys.
1

2
00:00:00.870 --> 00:00:04.920
Welcome to a brand-new module on a ARKit 2.
2

3
00:00:05.060 --> 00:00:09.900
And in this module, we're going to be exploring some of the updates and new features that Apple has brought
3

4
00:00:09.900 --> 00:00:13.500
out to ARKit IOs 12.
4

5
00:00:13.500 --> 00:00:20.550
Now, Apple is investing big into augmented reality and it's because they believe to some extent that
5

6
00:00:20.550 --> 00:00:28.200
the future, whether it be gaming or apps, really, should happen in augmented reality or virtual reality.
6

7
00:00:28.200 --> 00:00:34.650
And this is why they're piling their resources into creating new tools, new modules, new frameworks that
7

8
00:00:34.650 --> 00:00:41.720
makes it easy for us developers to create fantastic apps in augmented reality using ARKit.
8

9
00:00:41.740 --> 00:00:48.090
Now, in previous modules, we mentioned that the first version of ARKit only supported plane detection
9

10
00:00:48.420 --> 00:00:50.000
in the horizontal plane.
10

11
00:00:50.040 --> 00:00:51.880
Well, that's now been updated.
11

12
00:00:51.900 --> 00:00:57.790
And if you wanted to make an app that required detection in the vertical plane, that is now possible.
12

13
00:00:57.810 --> 00:01:03.600
So if you wanted to make an app where you can hang up a picture and see how it would look on your wall,
13

14
00:01:03.900 --> 00:01:09.000
then you can use that vertical detection inARKit to be able to do that.
14

15
00:01:09.000 --> 00:01:13.040
Now, that's a slightly incremental update and it's something that we've expected.
15

16
00:01:13.110 --> 00:01:18.830
But in this module, we're going to be exploring something way cooler that came out only very recently,
16

17
00:01:19.050 --> 00:01:27.690
and that's the ability to detect 2D images in our ARKit apps and render augmented reality objects on
17

18
00:01:27.690 --> 00:01:34.800
top of those images, and to be able to track the image so that the 3D objects that we render in AR
18

19
00:01:35.070 --> 00:01:40.650
will be able to stay on top of those images or stay relative to those images.
19

20
00:01:40.650 --> 00:01:45.360
So, for example, if you were to create a report for your company and you print it out for everybody to
20

21
00:01:45.360 --> 00:01:54.030
see using the AR app, they'll be able to view all of the content or data where the 3D rendered object.
21

22
00:01:54.030 --> 00:02:00.510
So, for example, you could animate all of your graphs or you could make the data show up in 3D, or render
22

23
00:02:00.540 --> 00:02:06.660
additional objects and additional information alongside with the 2D printer.
23

24
00:02:06.690 --> 00:02:11.940
That's all very well and good, but as with all of the tutorials that I teach, I really want to make something
24

25
00:02:12.270 --> 00:02:14.510
that is a project that we can make together.
25

26
00:02:14.580 --> 00:02:20.050
They'll be fun to create while we're learning about these new tools and new API.
26

27
00:02:20.430 --> 00:02:28.050
So recently, while I was in Japan in Akihabara, which is the technology district in Tokyo, I went into
27

28
00:02:28.050 --> 00:02:34.320
the SEGA store which is this giant sixth-floor building filled full of arcade games
28

29
00:02:34.320 --> 00:02:36.620
and every floor kind of has a theme.
29

30
00:02:36.810 --> 00:02:43.710
And it was really, really impressive to see some of the new technology and new games that they were developing
30

31
00:02:43.740 --> 00:02:45.360
and that could be played.
31

32
00:02:45.450 --> 00:02:48.570
Now, one of the games that really caught my eye
32

33
00:02:48.630 --> 00:02:57.390
is this sort of tower defense game that you could play, not just on screen, but it required physical cards,
33

34
00:02:57.870 --> 00:03:04.380
so you could collect these physical cards which would represent players or weapons or tools that you
34

35
00:03:04.380 --> 00:03:09.510
could use in the game, and you would place it onto the game mat.
35

36
00:03:09.810 --> 00:03:16.530
And by manipulating these cards and moving them around, you would interact with the video game and play
36

37
00:03:16.530 --> 00:03:22.530
the game with these cards that you own which I thought was just fantastically innovative and it's something
37

38
00:03:22.530 --> 00:03:29.520
that I've never seen before. And it makes it really interactive and really immersive. And it gives a reason
38

39
00:03:29.520 --> 00:03:32.790
to actually collecting all of these cards.
39

40
00:03:32.790 --> 00:03:36.160
I mean, I know how many Magic: The Gathering, and Pokémon cards I have,
40

41
00:03:36.600 --> 00:03:39.890
so why limit them to just being a card game.
41

42
00:03:40.200 --> 00:03:46.830
And these games are played across the internet live, so you could be playing against other players somewhere
42

43
00:03:46.830 --> 00:03:53.230
else, but using your own cards and your own chosen decks, and it was really, really interesting.
43

44
00:03:53.250 --> 00:04:00.180
So let's say that I have a deck of Pokémon cards and I pull out an Eevee, and there we go, we've got a
44

45
00:04:00.180 --> 00:04:06.900
3D Eevee rendered, and I pull out another one, Oddish, and  Oddish gets rendered again
45

46
00:04:06.900 --> 00:04:14.490
also in AR. and I can move them around, rotate them, or move them from side to side, so that they can
46

47
00:04:14.490 --> 00:04:17.650
interact with the game or interact with each other.
47

48
00:04:17.850 --> 00:04:24.600
And I don't know about you, but I find this so cool, the idea that you can turn all of these physical
48

49
00:04:24.600 --> 00:04:31.140
assets into a game element. And I'm really looking forward to playing with all the games that can be
49

50
00:04:31.140 --> 00:04:32.970
created using this concept.
50

51
00:04:33.900 --> 00:04:36.690
So once you're ready, let's get started building this.
