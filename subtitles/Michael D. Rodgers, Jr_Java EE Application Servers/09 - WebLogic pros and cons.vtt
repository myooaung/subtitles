WEBVTT
1
00:00:00.050 --> 00:00:02.010
- [Instructor] We've covered a lot of information,

2
00:00:02.010 --> 00:00:03.040
and unfortunately there was no way

3
00:00:03.040 --> 00:00:07.060
to get to all of the features and capabilities in WebLogic.

4
00:00:07.060 --> 00:00:10.030
Let's consider some pros and cons at a high level

5
00:00:10.030 --> 00:00:11.090
for a moment.

6
00:00:11.090 --> 00:00:15.070
What are the primary advantages of using WebLogic?

7
00:00:15.070 --> 00:00:19.080
As we've mentioned previously, WebLogic is fully compatible

8
00:00:19.080 --> 00:00:22.070
with the Java Standard Edition six and seven.

9
00:00:22.070 --> 00:00:25.010
It is a certified application container

10
00:00:25.010 --> 00:00:27.060
for Java Standard Edition eight.

11
00:00:27.060 --> 00:00:30.090
If you remember in our conversations about Tomcat,

12
00:00:30.090 --> 00:00:33.090
Apache Tomcat is not a certified Java EE server,

13
00:00:33.090 --> 00:00:35.060
so that means that we have to add

14
00:00:35.060 --> 00:00:41.000
a lot of extra dependencies to get Java EE apps to run,

15
00:00:41.000 --> 00:00:45.060
like what we've done here in WebLogic, it wasn't necessary.

16
00:00:45.060 --> 00:00:47.090
WebLogic has expansive capabilities

17
00:00:47.090 --> 00:00:51.030
for creating and managing servers and deploying de clusters.

18
00:00:51.030 --> 00:00:54.010
By the way, there was a good deal I didn't cover here,

19
00:00:54.010 --> 00:00:57.030
so take the time if you can and dig a little deeper.

20
00:00:57.030 --> 00:01:00.090
WebLogic provides out of the box full set

21
00:01:00.090 --> 00:01:06.000
of JDBC drivers that are both XA and non XA compliant

22
00:01:06.000 --> 00:01:08.000
as well as capabilities for managing

23
00:01:08.000 --> 00:01:11.040
and creating data sources for your applications.

24
00:01:11.040 --> 00:01:15.020
WebLogic provides a number of customizable security features

25
00:01:15.020 --> 00:01:16.040
that we didn't cover.

26
00:01:16.040 --> 00:01:19.010
You can actually secure apps and control access

27
00:01:19.010 --> 00:01:23.050
to various URLs in the application through WebLogic.

28
00:01:23.050 --> 00:01:25.060
If that is something you need to do,

29
00:01:25.060 --> 00:01:27.060
we really only covered core features

30
00:01:27.060 --> 00:01:29.000
and I challenge you to take time

31
00:01:29.000 --> 00:01:33.060
to dig into these other security capabilities.

32
00:01:33.060 --> 00:01:37.010
WebLogic additionally offers ability to set up,

33
00:01:37.010 --> 00:01:40.010
create, and maintain JMS queues and topics.

34
00:01:40.010 --> 00:01:44.050
It provides a fully implemented messaging capability

35
00:01:44.050 --> 00:01:47.050
instead of setting up an outside message queue facility

36
00:01:47.050 --> 00:01:52.060
like Apache MQ or many other various queues.

37
00:01:52.060 --> 00:01:56.000
WebLogic as well offers a scripting language

38
00:01:56.000 --> 00:02:00.090
based on Python and the syntax is called WLSL,

39
00:02:00.090 --> 00:02:03.000
or WebLogic scripting language.

40
00:02:03.000 --> 00:02:05.060
WLSL allows you to do everything

41
00:02:05.060 --> 00:02:08.080
that you can do via the administrative console.

42
00:02:08.080 --> 00:02:12.010
If you want to use Puppet or Chef

43
00:02:12.010 --> 00:02:14.000
to script your installations,

44
00:02:14.000 --> 00:02:18.010
you have a great tool to use with WLSL.

45
00:02:18.010 --> 00:02:21.000
You can additionally create templates of your installations,

46
00:02:21.000 --> 00:02:23.070
which are compressed down to JAR files,

47
00:02:23.070 --> 00:02:25.080
these make them great for transporting them

48
00:02:25.080 --> 00:02:29.010
or moving them around, capturing all of your configurations

49
00:02:29.010 --> 00:02:32.030
for easily setting up one or more WebLogic instances,

50
00:02:32.030 --> 00:02:34.030
manage servers, domains, et cetera.

51
00:02:34.030 --> 00:02:37.080
Again, one of those things that was out of scope

52
00:02:37.080 --> 00:02:40.040
for the discussion of this chapter.

53
00:02:40.040 --> 00:02:43.080
WebLogic also contains a great deal of monitoring

54
00:02:43.080 --> 00:02:45.090
and logging facilities.

55
00:02:45.090 --> 00:02:49.010
You can as well create a customizable monitoring solution

56
00:02:49.010 --> 00:02:51.020
for tracking certain detailed aspects

57
00:02:51.020 --> 00:02:54.070
of various resources deployed, like apps, drivers,

58
00:02:54.070 --> 00:02:59.040
JMS messages, queues, topics, managed servers, and clusters.

59
00:02:59.040 --> 00:03:03.070
There's a lot of advantages, but what's the disadvantage?

60
00:03:03.070 --> 00:03:07.020
Probably the number one disadvantage to WebLogic

61
00:03:07.020 --> 00:03:09.080
is the licensing structure.

62
00:03:09.080 --> 00:03:13.020
Oracle products in general are very expensive,

63
00:03:13.020 --> 00:03:14.090
and that is no different with WebLogic.

64
00:03:14.090 --> 00:03:19.040
If you want to know more, you can follow the link provided.

65
00:03:19.040 --> 00:03:25.090
Java Standard Edition 10 18.3 was released in March, 2018.

66
00:03:25.090 --> 00:03:28.060
We're currently at Java Standard Edition 11

67
00:03:28.060 --> 00:03:32.060
as of this video, which was released in September, 2018.

68
00:03:32.060 --> 00:03:37.080
And Java Standard Edition 12 will be released in March.

69
00:03:37.080 --> 00:03:42.020
WebLogic is not compatible with even version nine yet,

70
00:03:42.020 --> 00:03:45.060
or above, and the only version they are compatible with

71
00:03:45.060 --> 00:03:47.020
is version eight.

72
00:03:47.020 --> 00:03:49.020
That can be a show stopper for some.

73
00:03:49.020 --> 00:03:51.080
If your environment requires strict upgrades

74
00:03:51.080 --> 00:03:54.030
for security and vulnerability issues,

75
00:03:54.030 --> 00:03:57.020
you may be left with trying to get WebLogic 12C

76
00:03:57.020 --> 00:04:00.030
to work with incompatible versions of Java.

77
00:04:00.030 --> 00:04:03.010
It's not impossible, but it certainly won't be fun

78
00:04:03.010 --> 00:04:04.090
resolving all those class not found

79
00:04:04.090 --> 00:04:07.000
and class incompatibility issues.

80
00:04:07.000 --> 00:04:08.050
Something to think about and research

81
00:04:08.050 --> 00:04:11.000
with your organization.

82
00:04:11.000 --> 00:04:13.030
Not as huge an issue as versioning,

83
00:04:13.030 --> 00:04:16.050
but because of licensing constraints with Oracle,

84
00:04:16.050 --> 00:04:19.070
you must use the Oracle JDKs.

85
00:04:19.070 --> 00:04:23.050
And lastly, WebLogic is more complex to set up.

86
00:04:23.050 --> 00:04:25.070
And I certainly recommend that your system admin

87
00:04:25.070 --> 00:04:28.030
is prepared for the requirements.

88
00:04:28.030 --> 00:04:31.020
So WebLogic provides a lot of powerful features

89
00:04:31.020 --> 00:04:34.000
and maybe it's the right fit for your organization.

90
00:04:34.000 --> 00:04:37.000
Maybe your organization requires this

91
00:04:37.000 --> 00:04:39.070
due to governmental constraints to use

92
00:04:39.070 --> 00:04:43.060
only certain specified and approved application containers.

93
00:04:43.060 --> 00:04:45.010
I have certainly encountered that

94
00:04:45.010 --> 00:04:48.000
working with the military in past careers.

95
00:04:48.000 --> 00:04:49.090
Maybe you have the licensing requirements

96
00:04:49.090 --> 00:04:53.020
or architectural requirements, and so this makes sense

97
00:04:53.020 --> 00:04:54.030
as your only choice.

98
00:04:54.030 --> 00:04:57.000
But if you are a smaller organization,

99
00:04:57.000 --> 00:05:01.000
you might want to consider other open source solutions.

