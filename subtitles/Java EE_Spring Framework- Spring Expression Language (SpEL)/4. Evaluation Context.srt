1
00:00:02,219 --> 00:00:03,505
Evaluation context.

2
00:00:03,505 --> 00:00:05,433
What is it?

3
00:00:05,433 --> 00:00:10,322
The EvaluationContext is an interface in the SpEL API that is used

4
00:00:10,322 --> 00:00:13,282
when evaluating an expression to resolve fields,

5
00:00:13,282 --> 00:00:17,145
properties, and methods, and to perform type conversions.

6
00:00:17,145 --> 00:00:21,472
The out-of-the-box implementation of this interface that Spring

7
00:00:21,472 --> 00:00:25,514
provides is the StandardEvaluationContext class.

8
00:00:25,514 --> 00:00:30,942
Let's see how evaluation context helps to resolve fields with this code snippet.

9
00:00:30,942 --> 00:00:34,642
Note here that we are using the StandardEvaluationContext and setting a

10
00:00:34,642 --> 00:00:38,193
field called greeting to it with a value of Hello USA.

11
00:00:38,193 --> 00:00:41,994
And then we are parsing an SpEL expression in the

12
00:00:41,994 --> 00:00:46,237
context of that EvaluationContext (ec1).

13
00:00:46,237 --> 00:00:51,161
Now if we print the value of msg, we get the output as USA.

14
00:00:51,161 --> 00:00:51,498
Here,

15
00:00:51,498 --> 00:00:54,822
we've created a new StandardEvaluationContext (ec2) and

16
00:00:54,822 --> 00:00:58,197
set a field with the exact same name, greeting,

17
00:00:58,197 --> 00:01:02,803
to it, this time with a value of Hello UK.

18
00:01:02,803 --> 00:01:05,902
Now when the expression is parsed in the context of

19
00:01:05,902 --> 00:01:10,563
this EvaluationContext (ec2), we get the output as UK.

20
00:01:10,563 --> 00:01:12,563
So you see the point here.

21
00:01:12,563 --> 00:01:16,261
It helps to resolve fields when evaluating expressions.

22
00:01:16,261 --> 00:01:16,885
Further,

23
00:01:16,885 --> 00:01:20,458
the StandardEvaluationContext can be used to specify a root

24
00:01:20,458 --> 00:01:23,736
object against which an expression should be evaluated when

25
00:01:23,736 --> 00:01:28,548
resolving bean properties, methods, and performing type conversions.

26
00:01:28,548 --> 00:01:35,000
It uses reflection to do all of this. We will see this in the upcoming Demos.

