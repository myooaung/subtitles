WEBVTT
1
00:00:00.050 --> 00:00:01.070
- [Instructor] So, let us now implement

2
00:00:01.070 --> 00:00:03.020
the demo for URL Rewriting.

3
00:00:03.020 --> 00:00:04.070
The first thing we have to do is,

4
00:00:04.070 --> 00:00:06.060
we have to disable the cookies in the browser

5
00:00:06.060 --> 00:00:09.060
because we know that URL Rewriting will fit in

6
00:00:09.060 --> 00:00:11.050
only when the cookies are disabled.

7
00:00:11.050 --> 00:00:13.050
So, let me go to the browser.

8
00:00:13.050 --> 00:00:16.030
Go to settings,

9
00:00:16.030 --> 00:00:19.010
and you can just search for cookies, here,

10
00:00:19.010 --> 00:00:24.000
and you get an option of condense settings, that's the one.

11
00:00:24.000 --> 00:00:25.040
You have to click there.

12
00:00:25.040 --> 00:00:27.030
And, this is enabled right now.

13
00:00:27.030 --> 00:00:29.020
That's something that we will disable.

14
00:00:29.020 --> 00:00:32.000
So, when we disable, the cookies are gone now.

15
00:00:32.000 --> 00:00:32.080
Alright?

16
00:00:32.080 --> 00:00:34.050
So, the first step is done.

17
00:00:34.050 --> 00:00:36.050
Now, let's go ahead and write LoginServlet

18
00:00:36.050 --> 00:00:38.000
and set up the session.

19
00:00:38.000 --> 00:00:41.000
In our code, we already have the LoginServlet

20
00:00:41.000 --> 00:00:43.070
which we had utilized for the Request Dispatcher demo,

21
00:00:43.070 --> 00:00:45.050
so that's already ready with us.

22
00:00:45.050 --> 00:00:47.090
Now, we've just added the new post method,

23
00:00:47.090 --> 00:00:51.010
and that's the place we want to do some things, right?

24
00:00:51.010 --> 00:00:54.030
Now, please note that under the HTML folder,

25
00:00:54.030 --> 00:00:57.020
the home.jsp and profile.jsp,

26
00:00:57.020 --> 00:00:59.030
these files weren't functional before,

27
00:00:59.030 --> 00:01:00.050
but now we're going to use

28
00:01:00.050 --> 00:01:03.020
for this particular use case demo.

29
00:01:03.020 --> 00:01:05.070
So, let them just be there under the HTML folder,

30
00:01:05.070 --> 00:01:09.010
and we just need to use it in this particular demo.

31
00:01:09.010 --> 00:01:11.040
So, let's go ahead.

32
00:01:11.040 --> 00:01:13.070
Now, the first thing is when are you going

33
00:01:13.070 --> 00:01:15.010
to come to new post.

34
00:01:15.010 --> 00:01:17.040
Whenever the user enters the credentials

35
00:01:17.040 --> 00:01:20.030
on Login jsp and clicks on that login button.

36
00:01:20.030 --> 00:01:23.030
So, if want to take a look at the login.jsp,

37
00:01:23.030 --> 00:01:24.050
let's take a look at it.

38
00:01:24.050 --> 00:01:25.080
That's the form.

39
00:01:25.080 --> 00:01:28.090
So, you enter the username, you enter the password,

40
00:01:28.090 --> 00:01:30.060
and you click on the submit button,

41
00:01:30.060 --> 00:01:33.090
and you submit this form via a post request

42
00:01:33.090 --> 00:01:35.070
to that login sublet.

43
00:01:35.070 --> 00:01:38.070
So, let's quickly embed the attributes of action and method.

44
00:01:38.070 --> 00:01:40.060
So, action will be login,

45
00:01:40.060 --> 00:01:45.040
but the method, however, will be post this time.

46
00:01:45.040 --> 00:01:47.070
Now let's go ahead in the login sublet

47
00:01:47.070 --> 00:01:49.050
and let's do a few things here.

48
00:01:49.050 --> 00:01:51.010
The first one is you have to get

49
00:01:51.010 --> 00:01:53.010
the username from the login form.

50
00:01:53.010 --> 00:01:55.040
So I'm going to say string username

51
00:01:55.040 --> 00:01:57.010
to get the data from the request.

52
00:01:57.010 --> 00:01:59.060
We know how to do that now.

53
00:01:59.060 --> 00:02:02.030
Embed the name of the element.

54
00:02:02.030 --> 00:02:03.090
That's right.

55
00:02:03.090 --> 00:02:07.050
Next is we want to set up a session.

56
00:02:07.050 --> 00:02:10.020
Be it cookies or URL rewriting.

57
00:02:10.020 --> 00:02:12.090
In both the cases HTTP session object

58
00:02:12.090 --> 00:02:14.070
has to be present in your code,

59
00:02:14.070 --> 00:02:17.020
otherwise nothing of this will work.

60
00:02:17.020 --> 00:02:21.070
So let's take the HTTP session object quickly.

61
00:02:21.070 --> 00:02:28.080
The same way as we had done for the cookies, req.getsession.

62
00:02:28.080 --> 00:02:32.020
Now let's come ahead and set that username

63
00:02:32.020 --> 00:02:34.030
as an attribute in the session.

64
00:02:34.030 --> 00:02:37.000
The way we tracked the card in the previous video,

65
00:02:37.000 --> 00:02:40.000
you'll be able to track the username in this session.

66
00:02:40.000 --> 00:02:44.030
So we say session.setattribute,

67
00:02:44.030 --> 00:02:47.010
give it a key, let's call the key as username itself

68
00:02:47.010 --> 00:02:50.010
and the value is going to be this username

69
00:02:50.010 --> 00:02:53.000
that we collected from the front.

70
00:02:53.000 --> 00:02:54.010
Great.

71
00:02:54.010 --> 00:02:56.080
Now the last step will be to forward

72
00:02:56.080 --> 00:02:59.050
the control to the home page.

73
00:02:59.050 --> 00:03:02.020
Please understand that whenever we come to do post

74
00:03:02.020 --> 00:03:04.080
we are assuming, as I said, that this is going to be

75
00:03:04.080 --> 00:03:06.090
a successful login so I'm going

76
00:03:06.090 --> 00:03:08.060
to take the user to the home page.

77
00:03:08.060 --> 00:03:10.070
If you want to go to the home page, what do we do?

78
00:03:10.070 --> 00:03:14.020
We take the help of our own request dispatcher,

79
00:03:14.020 --> 00:03:22.090
so /html/home.jsp and then in walk the forward API

80
00:03:22.090 --> 00:03:27.070
pass the requested response objects and we are done.

81
00:03:27.070 --> 00:03:30.030
So we have already in the LoginServlet we have set up

82
00:03:30.030 --> 00:03:33.020
the session, we have stored the user information,

83
00:03:33.020 --> 00:03:37.020
and we have also forwarded the control to the home jsp

84
00:03:37.020 --> 00:03:41.030
assuming that it is a success login.

85
00:03:41.030 --> 00:03:45.060
Next step is to write the servlet for view profile link

86
00:03:45.060 --> 00:03:48.070
and fetch the session information to verify.

87
00:03:48.070 --> 00:03:51.040
What we intend to do is, once we are completed

88
00:03:51.040 --> 00:03:54.020
with this login process, the session is setup,

89
00:03:54.020 --> 00:03:55.090
the username is available.

90
00:03:55.090 --> 00:03:57.080
Now when we go to the homepage,

91
00:03:57.080 --> 00:03:59.070
I'm going to click on one of the links.

92
00:03:59.070 --> 00:04:02.070
When I click I should enter a servlet.

93
00:04:02.070 --> 00:04:05.000
That servlet should give me

94
00:04:05.000 --> 00:04:07.070
the appropriate username from the session.

95
00:04:07.070 --> 00:04:10.080
If that's the case, then we know that

96
00:04:10.080 --> 00:04:14.030
the URL rewriting is really working for session management.

97
00:04:14.030 --> 00:04:15.040
Let's do that.

98
00:04:15.040 --> 00:04:19.000
I have return to user view profiles servlet for that link

99
00:04:19.000 --> 00:04:20.070
and what I'm going to do here is I'm going to

100
00:04:20.070 --> 00:04:23.070
get the username from the session.

101
00:04:23.070 --> 00:04:33.090
I will say request.getsession and .getattribute.

102
00:04:33.090 --> 00:04:37.070
Pass attribute name and let's do one thing.

103
00:04:37.070 --> 00:04:40.080
Let's just print this out on the console itself

104
00:04:40.080 --> 00:04:44.050
so we know whether we are getting the username or not.

105
00:04:44.050 --> 00:04:48.080
Let's put a message for it too.

106
00:04:48.080 --> 00:04:53.080
Let's say username and profile servlet.

107
00:04:53.080 --> 00:04:58.020
Let's close this and open this value.

108
00:04:58.020 --> 00:05:01.080
Once we do this you're just going to go ahead

109
00:05:01.080 --> 00:05:04.020
and forward the control to profile jsp

110
00:05:04.020 --> 00:05:05.040
because that's where we want to reach.

111
00:05:05.040 --> 00:05:08.030
So we'll take the request object again.

112
00:05:08.030 --> 00:05:12.050
Consult our request dispatcher

113
00:05:12.050 --> 00:05:21.060
and forward the control to profile.jsp.

114
00:05:21.060 --> 00:05:23.050
Okay, that's good.

115
00:05:23.050 --> 00:05:25.000
So we've written out a servlet,

116
00:05:25.000 --> 00:05:27.070
we have fetched the username from the session,

117
00:05:27.070 --> 00:05:30.080
so if you get the correct username in the session

118
00:05:30.080 --> 00:05:33.000
it means that the session is correctly setup

119
00:05:33.000 --> 00:05:35.010
and everything now, it is getting done

120
00:05:35.010 --> 00:05:39.030
using a URL rewriting we are fixing in the session ID.

121
00:05:39.030 --> 00:05:44.070
Now the next step will be to encode the URL

122
00:05:44.070 --> 00:05:47.050
for the viewprofile hyperlink on home.jsp.

123
00:05:47.050 --> 00:05:51.070
So we know that the developer has to encode the URL

124
00:05:51.070 --> 00:05:54.020
only after the URL rewriting process

125
00:05:54.020 --> 00:05:56.030
is going to be done by the server.

126
00:05:56.030 --> 00:05:59.070
Let's go ahead, let's take this URL pattern

127
00:05:59.070 --> 00:06:01.060
on line number 11.

128
00:06:01.060 --> 00:06:04.090
Let's go to the home jsp and on line number 23

129
00:06:04.090 --> 00:06:08.000
is my list element for view my profile.

130
00:06:08.000 --> 00:06:10.040
So here I'm going to assign that URL,

131
00:06:10.040 --> 00:06:12.060
however I'm going to encode it first.

132
00:06:12.060 --> 00:06:13.060
How?

133
00:06:13.060 --> 00:06:15.000
Expression element.

134
00:06:15.000 --> 00:06:17.050
Let's take an expression element.

135
00:06:17.050 --> 00:06:20.020
Close this quickly and I'm going to use

136
00:06:20.020 --> 00:06:23.090
the implicit object of jsp response

137
00:06:23.090 --> 00:06:28.000
and I'm going to say, .encodeurl, that's the API.

138
00:06:28.000 --> 00:06:30.040
Under this now you can write your URL pattern.

139
00:06:30.040 --> 00:06:32.070
That is how it will go.

140
00:06:32.070 --> 00:06:34.000
So this is just a hyperlink.

141
00:06:34.000 --> 00:06:36.060
If you have any other form action elements on this page,

142
00:06:36.060 --> 00:06:40.040
you will need to encode all those URLs in a similar fashion.

143
00:06:40.040 --> 00:06:42.090
You have to invoke this API called response

144
00:06:42.090 --> 00:06:45.070
to our end code URL and then feed the URL pattern

145
00:06:45.070 --> 00:06:48.020
of that particular servlet that you want to go to.

146
00:06:48.020 --> 00:06:49.070
That's how this works.

147
00:06:49.070 --> 00:06:52.030
There is one last bit that we have

148
00:06:52.030 --> 00:06:54.090
to understand from the concept perspective.

149
00:06:54.090 --> 00:06:58.060
Whenever you see request.getsession

150
00:06:58.060 --> 00:07:00.090
and if it is the first time you are coming

151
00:07:00.090 --> 00:07:03.080
to the application, this request.getsession

152
00:07:03.080 --> 00:07:06.060
will return you a new HTTP session object.

153
00:07:06.060 --> 00:07:10.030
However, for all the subsequent requests

154
00:07:10.030 --> 00:07:12.060
that we are making to the login servlet

155
00:07:12.060 --> 00:07:15.010
and if the same API is invoked,

156
00:07:15.010 --> 00:07:17.070
it will return the same object

157
00:07:17.070 --> 00:07:19.030
that it created for that user.

158
00:07:19.030 --> 00:07:21.030
It's not going to be a new object now.

159
00:07:21.030 --> 00:07:24.040
That's exactly how session management works.

160
00:07:24.040 --> 00:07:28.010
Let's let it be for cookies or be it for URL rewriting,

161
00:07:28.010 --> 00:07:31.060
in either ways the server API is very smart

162
00:07:31.060 --> 00:07:34.010
that if it's the first time, this API call

163
00:07:34.010 --> 00:07:35.050
will give you a new object.

164
00:07:35.050 --> 00:07:37.080
If it's a subsequent times, then it's going to return

165
00:07:37.080 --> 00:07:40.070
the same object which was attached to that user.

166
00:07:40.070 --> 00:07:45.010
So we need not worry about managing that stuff.

167
00:07:45.010 --> 00:07:48.070
Alright, so we have coded all the steps,

168
00:07:48.070 --> 00:07:56.040
so let's go ahead and run this demo and check.

169
00:07:56.040 --> 00:07:59.000
So now I'm going to go to login.

170
00:07:59.000 --> 00:07:59.080
Let's quickly login.

171
00:07:59.080 --> 00:08:02.010
So admin is the username that I'm putting in

172
00:08:02.010 --> 00:08:04.080
and I'll click on the login button.

173
00:08:04.080 --> 00:08:06.050
So I'm on the homepage right now.

174
00:08:06.050 --> 00:08:09.080
Now, if I click on this view my profile hyperlink,

175
00:08:09.080 --> 00:08:12.080
I should be getting admin as the username

176
00:08:12.080 --> 00:08:14.020
that I have set in session.

177
00:08:14.020 --> 00:08:15.000
Let's check that.

178
00:08:15.000 --> 00:08:17.070
Let's click on this link and go to our console

179
00:08:17.070 --> 00:08:19.040
and see whether we are getting.

180
00:08:19.040 --> 00:08:20.080
Yes we are.

181
00:08:20.080 --> 00:08:25.000
We are getting the username admin in the profile servlet.

182
00:08:25.000 --> 00:08:28.070
So this entire thing was done basically by URL rewriting.

183
00:08:28.070 --> 00:08:31.030
You know how, upserve the URL.

184
00:08:31.030 --> 00:08:34.070
Do you see that the j session ID was up in that?

185
00:08:34.070 --> 00:08:37.040
That happened because we encoded the URL

186
00:08:37.040 --> 00:08:40.030
so that now the URL was re-returned

187
00:08:40.030 --> 00:08:43.010
and then the request was made to the server side.

188
00:08:43.010 --> 00:08:46.030
The server now is free to extract the session ID

189
00:08:46.030 --> 00:08:49.020
from the URL and hence it identifies

190
00:08:49.020 --> 00:08:53.050
that it is the same user who has come again.

191
00:08:53.050 --> 00:08:54.070
All of this we did.

192
00:08:54.070 --> 00:08:56.030
We did the entire session management,

193
00:08:56.030 --> 00:08:59.020
but this time, by disabling the cookies

194
00:08:59.020 --> 00:09:03.060
and falling back to the URL rewriting option.

195
00:09:03.060 --> 00:09:05.070
This is how session management works

196
00:09:05.070 --> 00:09:07.060
in most of the industry projects.

197
00:09:07.060 --> 00:09:10.040
You really don't do the disabling of cookies,

198
00:09:10.040 --> 00:09:12.080
so session management should smoothly work

199
00:09:12.080 --> 00:09:15.000
with cookies enabled in the browser.

