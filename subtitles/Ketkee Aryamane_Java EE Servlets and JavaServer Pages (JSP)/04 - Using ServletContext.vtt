WEBVTT
1
00:00:00.050 --> 00:00:02.070
- [Instructor] Now let us take a look at the ServletContext

2
00:00:02.070 --> 00:00:07.060
API, as opposed to ServletConfig, the ServletContext API

3
00:00:07.060 --> 00:00:10.030
will be used to pass configuration information for the

4
00:00:10.030 --> 00:00:14.000
entire application, as in, if you want to share any

5
00:00:14.000 --> 00:00:17.060
information across all the Servlets of your application

6
00:00:17.060 --> 00:00:21.030
then you need to grab the ServletContext object.

7
00:00:21.030 --> 00:00:24.040
Now for the ServletContext object as well, there will

8
00:00:24.040 --> 00:00:27.020
be parameters defined and they will be defined in the

9
00:00:27.020 --> 00:00:30.010
deployment descriptor which is our webXML file.

10
00:00:30.010 --> 00:00:33.090
Now please note that since it is for the entire application

11
00:00:33.090 --> 00:00:36.020
these parameters wouldn't be attached to a particular

12
00:00:36.020 --> 00:00:40.070
Servlet but they'd be attached to the entire app.

13
00:00:40.070 --> 00:00:43.080
The parameters like your Servlet configure again in the

14
00:00:43.080 --> 00:00:49.000
form of key-value pair and always of the type String.

15
00:00:49.000 --> 00:00:52.070
There's always one ServletContext object for the entire

16
00:00:52.070 --> 00:00:55.060
application, this is not going to be for every Servlet

17
00:00:55.060 --> 00:00:59.010
basis but it's going to be as an application basis.

18
00:00:59.010 --> 00:01:02.050
So lets try this out in the demo, we go to our getServlet,

19
00:01:02.050 --> 00:01:04.040
let me get rid of this annotation because I've already

20
00:01:04.040 --> 00:01:07.070
defined this getServlet in the webXML.

21
00:01:07.070 --> 00:01:11.020
And what we are going to do is, lets go to the webXML,

22
00:01:11.020 --> 00:01:14.060
this is that web application root tag and I'm not going

23
00:01:14.060 --> 00:01:18.020
to define the context parameters for the entire web app.

24
00:01:18.020 --> 00:01:21.040
So, the way we attached init-parameters for a specific

25
00:01:21.040 --> 00:01:24.090
Servlet for servletconfig, the init parameters for

26
00:01:24.090 --> 00:01:28.060
the context will not be for a servlet but will be within

27
00:01:28.060 --> 00:01:30.030
this web-app directly.

28
00:01:30.030 --> 00:01:33.060
So let me hold on and on line number 20 I'm going to put

29
00:01:33.060 --> 00:01:37.040
that configuration, I'm going to say, context-param, that's

30
00:01:37.040 --> 00:01:40.050
the element that will allow you to define the context init

31
00:01:40.050 --> 00:01:42.030
parameters.

32
00:01:42.030 --> 00:01:48.030
Under this you have two more tags, param name and

33
00:01:48.030 --> 00:01:50.070
param value.

34
00:01:50.070 --> 00:01:53.030
Lets take an example to code this out, lets say all your

35
00:01:53.030 --> 00:01:56.050
servlets are going to connect to the database, so they need

36
00:01:56.050 --> 00:01:59.020
the database URL, right?

37
00:01:59.020 --> 00:02:03.090
The database URL is available in our project, in the DBC

38
00:02:03.090 --> 00:02:07.060
connection class, if you see on line number 19, the first

39
00:02:07.060 --> 00:02:10.090
argument that we're exactly past is the database sub URL.

40
00:02:10.090 --> 00:02:13.050
And instead of hard coding this into classes like that,

41
00:02:13.050 --> 00:02:17.000
we could actually take this and put it as a context

42
00:02:17.000 --> 00:02:20.060
parameter so that it will be available to all the servlets

43
00:02:20.060 --> 00:02:23.020
within the application, so I'm going to give a name to this

44
00:02:23.020 --> 00:02:30.000
parameter, saying DB URL, lets call is dbURL and the value

45
00:02:30.000 --> 00:02:32.040
will be the entire URL.

46
00:02:32.040 --> 00:02:36.020
Now what we could do is fetch this parameter in our servlet,

47
00:02:36.020 --> 00:02:39.020
so let me go to getservlet and you're going to fetch this

48
00:02:39.020 --> 00:02:43.020
parameters, now using the servlet context object, so lets

49
00:02:43.020 --> 00:02:47.000
take a reference for it first.

50
00:02:47.000 --> 00:02:51.030
There it is, and how are we going to opt-in this object?

51
00:02:51.030 --> 00:02:54.070
So the way you have a getServletConfig similarly in the

52
00:02:54.070 --> 00:02:58.090
HttpServlet class you have a getServlet context API, which

53
00:02:58.090 --> 00:03:02.060
is this.

54
00:03:02.060 --> 00:03:06.000
So by that we can get the context object and then we'll

55
00:03:06.000 --> 00:03:09.070
put a small sys out again, which is going to fetch that

56
00:03:09.070 --> 00:03:13.030
init parameters and we're going to say context dot get init

57
00:03:13.030 --> 00:03:16.020
parameter and I'm going to fill the name of the parameter

58
00:03:16.020 --> 00:03:19.020
so lets go to webXML, take the name of the parameter

59
00:03:19.020 --> 00:03:22.060
on line number 21, go to the getServlet again, and paste it

60
00:03:22.060 --> 00:03:26.040
on line number 21, right.

61
00:03:26.040 --> 00:03:29.050
So that's how we'll be able to fetch the context information

62
00:03:29.050 --> 00:03:33.060
inside the servlet, now please note that since the servlet

63
00:03:33.060 --> 00:03:36.090
context is one per application, if you go to any other

64
00:03:36.090 --> 00:03:41.000
servlet in your app you will get this value of the

65
00:03:41.000 --> 00:03:43.080
parameter, right, so lets run this and check out the

66
00:03:43.080 --> 00:03:51.060
changes, let me hit the gerServlet.

67
00:03:51.060 --> 00:03:56.010
Yeah, I got a response and lets now check on the console.

68
00:03:56.010 --> 00:03:59.050
There we go, so we have been able to get the database URL

69
00:03:59.050 --> 00:04:03.060
fetched through the servletContext object this time inside

70
00:04:03.060 --> 00:04:06.090
our servlet, so, please note that context parameters are

71
00:04:06.090 --> 00:04:09.080
always defined inside the web app tab directly, they're not

72
00:04:09.080 --> 00:04:12.070
attached to any servlet and since they are not attached to

73
00:04:12.070 --> 00:04:16.050
any servlet, you wouldn't have a way to put the annotation

74
00:04:16.050 --> 00:04:19.000
configuration for the servlet context.

