WEBVTT
1
00:00:00.050 --> 00:00:02.050
- [Instructor] Okay, so we are now inside the AFLUC.

2
00:00:02.050 --> 00:00:04.040
We have put a condition that

3
00:00:04.040 --> 00:00:06.000
we are going to restrict the access

4
00:00:06.000 --> 00:00:10.020
to the servlet for these two URL patterns,

5
00:00:10.020 --> 00:00:12.000
Order History and Get Profile Details

6
00:00:12.000 --> 00:00:14.090
for the two links that you've already seen on Home Page.

7
00:00:14.090 --> 00:00:16.090
So what do we do under this?

8
00:00:16.090 --> 00:00:20.050
What we need to do is on line number 27,

9
00:00:20.050 --> 00:00:23.060
I'm going to take the HTTP session first.

10
00:00:23.060 --> 00:00:26.000
So we know that if it is a previous session,

11
00:00:26.000 --> 00:00:28.010
if it's already a set up session,

12
00:00:28.010 --> 00:00:30.090
the request.get session API

13
00:00:30.090 --> 00:00:34.060
will just return me that existing session, right?

14
00:00:34.060 --> 00:00:36.030
So now here inside,

15
00:00:36.030 --> 00:00:38.010
I am going to do one more thing.

16
00:00:38.010 --> 00:00:43.030
I'm going to say, "if session.get attribute user name"

17
00:00:43.030 --> 00:00:44.070
okay?

18
00:00:44.070 --> 00:00:45.090
If this is null,

19
00:00:45.090 --> 00:00:47.040
it means I'm not able to get

20
00:00:47.040 --> 00:00:48.090
a correct username in the session

21
00:00:48.090 --> 00:00:50.080
which means the session is messed up.

22
00:00:50.080 --> 00:00:54.020
Either invalidated or malicious access or whatever.

23
00:00:54.020 --> 00:00:56.080
So let's go ahead and put that condition

24
00:00:56.080 --> 00:00:58.070
and if it is indeed null,

25
00:00:58.070 --> 00:01:01.080
what I'm going to do, I'm just going to take that request object,

26
00:01:01.080 --> 00:01:03.070
get the request dispatcher,

27
00:01:03.070 --> 00:01:07.040
and just ask the user to move to the login page.

28
00:01:07.040 --> 00:01:08.080
Nothing more.

29
00:01:08.080 --> 00:01:10.020
We're just going to ask the user

30
00:01:10.020 --> 00:01:11.060
to log in again.

31
00:01:11.060 --> 00:01:14.050
That's all.

32
00:01:14.050 --> 00:01:17.040
This will be arg1,

33
00:01:17.040 --> 00:01:19.000
which is a response.

34
00:01:19.000 --> 00:01:19.090
Okay?

35
00:01:19.090 --> 00:01:24.040
So just abruptly terminator request execution,

36
00:01:24.040 --> 00:01:25.090
go back to login.jsp

37
00:01:25.090 --> 00:01:26.090
and say, "please login again"

38
00:01:26.090 --> 00:01:30.050
because I'm not able to find the session for you, okay?

39
00:01:30.050 --> 00:01:33.020
Let's say we get the value for username.

40
00:01:33.020 --> 00:01:35.000
In that case, we are good,

41
00:01:35.000 --> 00:01:38.000
so we can allow the user to go ahead

42
00:01:38.000 --> 00:01:40.030
and access the next page

43
00:01:40.030 --> 00:01:41.010
and it essentially means that

44
00:01:41.010 --> 00:01:43.020
we have to called servlet, right?

45
00:01:43.020 --> 00:01:46.070
So that call will be taken over by filter chain parameter,

46
00:01:46.070 --> 00:01:48.000
so on line number 35,

47
00:01:48.000 --> 00:01:51.020
I'm going to take that filter chain parameter,

48
00:01:51.020 --> 00:01:53.040
and I'm going to call do filter.

49
00:01:53.040 --> 00:01:56.070
And pass the request and response objects along.

50
00:01:56.070 --> 00:01:57.090
What is this call doing?

51
00:01:57.090 --> 00:01:59.050
This is a very important

52
00:01:59.050 --> 00:02:01.080
and critical statement that you need to write

53
00:02:01.080 --> 00:02:02.090
in the code.

54
00:02:02.090 --> 00:02:05.050
This is the line which is going to now take

55
00:02:05.050 --> 00:02:08.090
the control to the next servlet.

56
00:02:08.090 --> 00:02:11.020
The next servlet as in whichever servlet

57
00:02:11.020 --> 00:02:14.070
the user tried to access from the browser.

58
00:02:14.070 --> 00:02:15.080
Okay?

59
00:02:15.080 --> 00:02:19.090
If you have more than one filter in your application,

60
00:02:19.090 --> 00:02:23.040
then this call is going to take you to the next filter.

61
00:02:23.040 --> 00:02:25.040
If you have, let's say three filters,

62
00:02:25.040 --> 00:02:28.020
then this call is going to take you to second filter.

63
00:02:28.020 --> 00:02:29.080
Inside the second filter,

64
00:02:29.080 --> 00:02:31.070
there'll be a call like this again

65
00:02:31.070 --> 00:02:33.070
which will take you to the third filter.

66
00:02:33.070 --> 00:02:35.010
So on and so forth,

67
00:02:35.010 --> 00:02:37.070
so this chaining process that you do

68
00:02:37.070 --> 00:02:41.000
is extremely critical otherwise your flow

69
00:02:41.000 --> 00:02:42.060
will not complete.

70
00:02:42.060 --> 00:02:45.040
The filters that you can configure in your application

71
00:02:45.040 --> 00:02:48.090
and the servlet together form a filter chain.

72
00:02:48.090 --> 00:02:51.040
And the the do filter call that you're making

73
00:02:51.040 --> 00:02:52.080
on line number 35

74
00:02:52.080 --> 00:02:56.000
is going to ensure that you make those hops

75
00:02:56.000 --> 00:02:58.040
from filter number one to filter number two,

76
00:02:58.040 --> 00:03:01.020
to filter number N and then finally, the servlet.

77
00:03:01.020 --> 00:03:04.000
So in all the filters that you're configuring

78
00:03:04.000 --> 00:03:05.030
for your application

79
00:03:05.030 --> 00:03:08.010
the insertion of this call is a must.

80
00:03:08.010 --> 00:03:10.080
Please do not forget that, okay?

81
00:03:10.080 --> 00:03:12.080
Now, whatever you write

82
00:03:12.080 --> 00:03:16.040
before this call, is basically the preprocessing.

83
00:03:16.040 --> 00:03:19.050
So all of this logic that we have written out here

84
00:03:19.050 --> 00:03:22.050
is a part of preprocessing of the request.

85
00:03:22.050 --> 00:03:25.020
And let's say if you want to do any post processing,

86
00:03:25.020 --> 00:03:28.030
that will come after the chaining call.

87
00:03:28.030 --> 00:03:29.010
Right?

88
00:03:29.010 --> 00:03:30.060
So as of now, in our authentication use case

89
00:03:30.060 --> 00:03:32.060
we really don't have any post processing

90
00:03:32.060 --> 00:03:37.020
so we're going to stick only to preprocessing, okay?

91
00:03:37.020 --> 00:03:38.050
Now that we have done this,

92
00:03:38.050 --> 00:03:41.030
let's do the configuration of this filter class.

93
00:03:41.030 --> 00:03:45.020
For that, let's go to web XML.

94
00:03:45.020 --> 00:03:47.030
Let's open that.

95
00:03:47.030 --> 00:03:49.080
And let's come here

96
00:03:49.080 --> 00:03:51.020
And do the filter mapping.

97
00:03:51.020 --> 00:03:53.010
So I'm on line number 50.

98
00:03:53.010 --> 00:03:56.050
Filter Configuration will be done by two tags.

99
00:03:56.050 --> 00:03:59.010
The first one, is filter,

100
00:03:59.010 --> 00:04:02.080
which has a couple of other tags again.

101
00:04:02.080 --> 00:04:04.090
Filter name, give it a name

102
00:04:04.090 --> 00:04:06.020
which is a logical name of course,

103
00:04:06.020 --> 00:04:07.070
of your choice.

104
00:04:07.070 --> 00:04:10.060
I'm going to call it authentication filter.

105
00:04:10.060 --> 00:04:14.040
And filter class which is a fully qualified class

106
00:04:14.040 --> 00:04:15.080
name of your filter class.

107
00:04:15.080 --> 00:04:17.090
So let's pick that up from the class itself.

108
00:04:17.090 --> 00:04:20.000
Come.test.filter

109
00:04:20.000 --> 00:04:21.070
copy this from line number one.

110
00:04:21.070 --> 00:04:22.070
Go to XML,

111
00:04:22.070 --> 00:04:24.070
paste it on line number 52

112
00:04:24.070 --> 00:04:29.070
along with the name of third class.

113
00:04:29.070 --> 00:04:31.060
Okay.

114
00:04:31.060 --> 00:04:33.030
So authentication filter.

115
00:04:33.030 --> 00:04:34.010
One this is done,

116
00:04:34.010 --> 00:04:35.090
there is another tag that you need to define.

117
00:04:35.090 --> 00:04:37.080
So on line number 54,

118
00:04:37.080 --> 00:04:39.050
I'm going to define the filter mapping tag.

119
00:04:39.050 --> 00:04:40.090
That's how it goes.

120
00:04:40.090 --> 00:04:42.020
And under that again,

121
00:04:42.020 --> 00:04:43.040
you have a couple of tags.

122
00:04:43.040 --> 00:04:45.070
So we have filter name

123
00:04:45.070 --> 00:04:48.060
which is exactly same as the filter name that you've defined

124
00:04:48.060 --> 00:04:50.040
under the filter tag.

125
00:04:50.040 --> 00:04:51.020
Okay,

126
00:04:51.020 --> 00:04:53.040
I'm pasting it on line number 55.

127
00:04:53.040 --> 00:04:57.010
And you have something which is call this URL pattern.

128
00:04:57.010 --> 00:04:58.080
Now, this URL pattern

129
00:04:58.080 --> 00:05:01.000
is not for the filter.

130
00:05:01.000 --> 00:05:03.060
What this URL pattern signifies is

131
00:05:03.060 --> 00:05:07.070
that for how many servlets in your application

132
00:05:07.070 --> 00:05:10.020
is this filter going to run?

133
00:05:10.020 --> 00:05:12.030
If your user is trying to access

134
00:05:12.030 --> 00:05:14.030
any point in your application

135
00:05:14.030 --> 00:05:16.030
it will be through a servlet.

136
00:05:16.030 --> 00:05:17.010
Correct?

137
00:05:17.010 --> 00:05:19.010
So when ever you want to access a servlet,

138
00:05:19.010 --> 00:05:21.060
do you want that this filter runs first

139
00:05:21.060 --> 00:05:23.040
as a part of preprocessing?

140
00:05:23.040 --> 00:05:26.010
That is what the URL pattern signifies.

141
00:05:26.010 --> 00:05:29.010
So let's say if I put a slash star,

142
00:05:29.010 --> 00:05:31.080
it means that all the servlets

143
00:05:31.080 --> 00:05:33.010
whenever they run,

144
00:05:33.010 --> 00:05:35.090
this filter is going to run before that servlet.

145
00:05:35.090 --> 00:05:37.050
That is what this means.

146
00:05:37.050 --> 00:05:39.010
Generally, in a live project,

147
00:05:39.010 --> 00:05:41.010
this is the kind of configuration that we do.

148
00:05:41.010 --> 00:05:45.000
We incorporate the filter for all the servlet URL patterns.

149
00:05:45.000 --> 00:05:45.090
Okay?

150
00:05:45.090 --> 00:05:48.010
So I'm going to stick to this configuration.

151
00:05:48.010 --> 00:05:49.050
Do not worry about this too much

152
00:05:49.050 --> 00:05:51.000
because when it come in the filter,

153
00:05:51.000 --> 00:05:52.080
we have anyway,

154
00:05:52.080 --> 00:05:54.000
filtered out the URL's

155
00:05:54.000 --> 00:05:54.090
by this mechanism.

156
00:05:54.090 --> 00:05:56.070
So it's alright because right now

157
00:05:56.070 --> 00:05:58.000
the application requirement

158
00:05:58.000 --> 00:06:01.010
is that I need a restriction only for these two URL's.

159
00:06:01.010 --> 00:06:03.030
You may not put a restriction like that

160
00:06:03.030 --> 00:06:06.000
for filtering of URL's in your actual project,

161
00:06:06.000 --> 00:06:08.070
because you may really want to invoke the filter

162
00:06:08.070 --> 00:06:10.060
for every other servlet

163
00:06:10.060 --> 00:06:12.030
running in your application.

164
00:06:12.030 --> 00:06:14.000
So we are good.

165
00:06:14.000 --> 00:06:16.060
Let's also see how can you do the configuration

166
00:06:16.060 --> 00:06:18.020
of the filter for the class

167
00:06:18.020 --> 00:06:20.020
via annotation?

168
00:06:20.020 --> 00:06:23.060
So what we can do is, we can come here on line number 14

169
00:06:23.060 --> 00:06:26.050
and annotate this class

170
00:06:26.050 --> 00:06:27.070
with annotation list.

171
00:06:27.070 --> 00:06:29.070
We just stop the server

172
00:06:29.070 --> 00:06:32.030
and say web filter.

173
00:06:32.030 --> 00:06:33.050
That's the annotation.

174
00:06:33.050 --> 00:06:35.060
And you can mention the URL pattern

175
00:06:35.060 --> 00:06:37.000
in the form of double codes.

176
00:06:37.000 --> 00:06:39.060
So let's say I say slash star

177
00:06:39.060 --> 00:06:41.090
it means that this authentication filter

178
00:06:41.090 --> 00:06:46.020
is going to get executed for every servlet's URL pattern

179
00:06:46.020 --> 00:06:47.070
in your application.

180
00:06:47.070 --> 00:06:49.050
However, if you really want to go ahead

181
00:06:49.050 --> 00:06:51.030
and choose specific patterns

182
00:06:51.030 --> 00:06:54.070
that you can annotate with this.

183
00:06:54.070 --> 00:06:57.040
Go and mention all your URL patterns like that.

184
00:06:57.040 --> 00:06:59.080
If you also want to pass on any kind

185
00:06:59.080 --> 00:07:02.060
of initialization configuration for this filter,

186
00:07:02.060 --> 00:07:07.060
then you can do so via the initParams property.

187
00:07:07.060 --> 00:07:09.030
So you can go ahead and say,

188
00:07:09.030 --> 00:07:15.010
"equal to", and then go ahead and say,

189
00:07:15.010 --> 00:07:17.080
"web innit Param",

190
00:07:17.080 --> 00:07:18.070
that's the one.

191
00:07:18.070 --> 00:07:21.020
So you can photo-configurate with the name and key value.

192
00:07:21.020 --> 00:07:24.000
This is going to be very similar the way that we have done

193
00:07:24.000 --> 00:07:25.060
for our servlet classes.

194
00:07:25.060 --> 00:07:28.050
So you either choose the annotation way of configuration

195
00:07:28.050 --> 00:07:30.000
or you stick to the XML

196
00:07:30.000 --> 00:07:32.020
that we did a while ago.

197
00:07:32.020 --> 00:07:35.050
So I'm going to go ahead and save this.

198
00:07:35.050 --> 00:07:37.090
Yes, so that's a filter mapping.

199
00:07:37.090 --> 00:07:41.020
Yeah, and now let's quickly look at the PPD's

200
00:07:41.020 --> 00:07:42.000
in the filter class.

201
00:07:42.000 --> 00:07:44.080
We have retrieved the session for those sensitive URL's.

202
00:07:44.080 --> 00:07:48.020
We have checked the valid username

203
00:07:48.020 --> 00:07:49.010
and we've gone back to the login page

204
00:07:49.010 --> 00:07:51.000
in case no user was found.

205
00:07:51.000 --> 00:07:52.000
So there we are.

206
00:07:52.000 --> 00:07:53.040
We have completed all the changes,

207
00:07:53.040 --> 00:07:57.090
now let's go ahead and deploy this project.

208
00:07:57.090 --> 00:08:02.000
We're going to run this.

209
00:08:02.000 --> 00:08:05.010
Let me now log in first.

210
00:08:05.010 --> 00:08:07.060
Admin, admin.

211
00:08:07.060 --> 00:08:09.090
Alright, so now I'm on my homepage.

212
00:08:09.090 --> 00:08:12.050
So if I click on View My Profile,

213
00:08:12.050 --> 00:08:15.070
I will get to the profile page, right?

214
00:08:15.070 --> 00:08:16.080
Now, hold on.

215
00:08:16.080 --> 00:08:17.090
I'm going to take this link

216
00:08:17.090 --> 00:08:19.060
from the address bar,

217
00:08:19.060 --> 00:08:24.050
copy it and I'm going to open an incognito window.

218
00:08:24.050 --> 00:08:25.040
Why?

219
00:08:25.040 --> 00:08:27.070
Because incognito window will never save

220
00:08:27.070 --> 00:08:29.020
your session information.

221
00:08:29.020 --> 00:08:30.040
Please remember this.

222
00:08:30.040 --> 00:08:33.000
So in order to test out the scenario filters,

223
00:08:33.000 --> 00:08:36.040
I will have to go to the incognito window,

224
00:08:36.040 --> 00:08:38.020
paste to this URL.

225
00:08:38.020 --> 00:08:40.010
So this is a simulation

226
00:08:40.010 --> 00:08:43.050
of those cases where the user is trying to malicously access

227
00:08:43.050 --> 00:08:45.030
this URL from some other machine

228
00:08:45.030 --> 00:08:48.020
or maybe I'm accessing the URL on the same machine

229
00:08:48.020 --> 00:08:49.060
and the session timed out.

230
00:08:49.060 --> 00:08:51.000
Right?

231
00:08:51.000 --> 00:08:52.020
So let's click on enter.

232
00:08:52.020 --> 00:08:53.060
Do you see what happened?

233
00:08:53.060 --> 00:08:55.070
I came back to the login page.

234
00:08:55.070 --> 00:08:58.000
I didn't go to the Profile Page.

235
00:08:58.000 --> 00:08:59.050
I came back to the login

236
00:08:59.050 --> 00:09:02.030
because I realize that in this window

237
00:09:02.030 --> 00:09:04.090
I am not able to find a session's username.

238
00:09:04.090 --> 00:09:08.000
So the session is gone and somebody is trying to probably

239
00:09:08.000 --> 00:09:09.030
you create a problem.

240
00:09:09.030 --> 00:09:13.090
So I safely directed the user back to the login page.

241
00:09:13.090 --> 00:09:17.040
That is because I have configured the filter for this.

242
00:09:17.040 --> 00:09:19.000
So the same tagging that you saw

243
00:09:19.000 --> 00:09:20.030
that it came back to the login page

244
00:09:20.030 --> 00:09:23.060
is because that filter code is executing correctly.

245
00:09:23.060 --> 00:09:26.050
Okay, so this is what it is in the incognito window.

246
00:09:26.050 --> 00:09:29.000
Let's go back to the main window.

247
00:09:29.000 --> 00:09:30.080
Oh, let me close this.

248
00:09:30.080 --> 00:09:32.000
And here we are,

249
00:09:32.000 --> 00:09:33.010
so I'm just going to log out,

250
00:09:33.010 --> 00:09:34.090
and we're also going to test the case

251
00:09:34.090 --> 00:09:36.050
of an invalid login.

252
00:09:36.050 --> 00:09:38.060
So let me click on the login hyperlink

253
00:09:38.060 --> 00:09:42.020
and enter some wrong credentials.

254
00:09:42.020 --> 00:09:43.000
You see?

255
00:09:43.000 --> 00:09:44.040
So we got the invalid credentials.

256
00:09:44.040 --> 00:09:46.000
"Please log in again" message

257
00:09:46.000 --> 00:09:47.080
on the login page or cell.

258
00:09:47.080 --> 00:09:48.070
So you can login again

259
00:09:48.070 --> 00:09:51.040
and then enter the system, right?

260
00:09:51.040 --> 00:09:53.090
So this is what you can do with the filter.

261
00:09:53.090 --> 00:09:56.070
Any click on the page,

262
00:09:56.070 --> 00:09:58.040
any links that you access

263
00:09:58.040 --> 00:10:01.080
if you want that, it goes through an authentication process.

264
00:10:01.080 --> 00:10:04.070
You can go ahead and define a filter like that

265
00:10:04.070 --> 00:10:06.080
and put in your logic for it.

266
00:10:06.080 --> 00:10:08.020
So filters make it modular

267
00:10:08.020 --> 00:10:10.060
because this is not a part of your business logic.

268
00:10:10.060 --> 00:10:11.080
It's more maintanable

269
00:10:11.080 --> 00:10:14.010
and it is absolutely critical

270
00:10:14.010 --> 00:10:15.000
in your application.

