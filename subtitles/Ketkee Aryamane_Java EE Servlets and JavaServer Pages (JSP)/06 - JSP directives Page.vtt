WEBVTT
1
00:00:00.050 --> 00:00:04.030
- [Instructor] Now let's take a look at the JSP Directives.

2
00:00:04.030 --> 00:00:06.070
JSP Directives are special instructions

3
00:00:06.070 --> 00:00:09.000
that are provided to the container software

4
00:00:09.000 --> 00:00:10.090
for the translation process.

5
00:00:10.090 --> 00:00:13.070
We know by now that the container is responsible

6
00:00:13.070 --> 00:00:17.060
for converting that JSP into a servlet file,

7
00:00:17.060 --> 00:00:20.020
and whilst this conversion takes place,

8
00:00:20.020 --> 00:00:23.030
directives are those components inside your JSP page

9
00:00:23.030 --> 00:00:26.060
which will relay those instructions to the container

10
00:00:26.060 --> 00:00:28.030
for the translation process

11
00:00:28.030 --> 00:00:30.000
and definitely it is going to change

12
00:00:30.000 --> 00:00:32.080
how the compilation process also happens.

13
00:00:32.080 --> 00:00:34.070
Directives themselves will never appear

14
00:00:34.070 --> 00:00:36.000
as a part of the output.

15
00:00:36.000 --> 00:00:37.070
They do not produce any output.

16
00:00:37.070 --> 00:00:40.000
They're just supposed to be relaying messages

17
00:00:40.000 --> 00:00:41.050
to the container.

18
00:00:41.050 --> 00:00:43.090
So what are the kinds of jobs that JSP Directives

19
00:00:43.090 --> 00:00:45.030
can do for us?

20
00:00:45.030 --> 00:00:47.040
It could import classes for the code

21
00:00:47.040 --> 00:00:48.070
that you're writing on the JSP.

22
00:00:48.070 --> 00:00:52.030
So let's say you're using a lot of classes on the JSP code.

23
00:00:52.030 --> 00:00:55.000
In Java the rule is that if you're using a class

24
00:00:55.000 --> 00:00:56.070
you need to import it.

25
00:00:56.070 --> 00:00:58.060
So that's what the directive does for us.

26
00:00:58.060 --> 00:01:00.050
If you are using a class on JSP

27
00:01:00.050 --> 00:01:04.020
it will import that class for you using the page directive.

28
00:01:04.020 --> 00:01:07.000
Then it also allows you to devise error pages

29
00:01:07.000 --> 00:01:08.040
for the application.

30
00:01:08.040 --> 00:01:11.060
Let's say for example we have 10 screens in our application,

31
00:01:11.060 --> 00:01:13.090
one of the screens is right now functional

32
00:01:13.090 --> 00:01:15.080
and something goes wrong on it.

33
00:01:15.080 --> 00:01:17.020
If something goes wrong,

34
00:01:17.020 --> 00:01:20.090
you will really not want to show the exception stack trace

35
00:01:20.090 --> 00:01:22.040
to the end customer,

36
00:01:22.040 --> 00:01:23.050
because the customer wouldn't

37
00:01:23.050 --> 00:01:25.070
be able to make any meaning out of it.

38
00:01:25.070 --> 00:01:28.070
So instead it would be better to drive the user

39
00:01:28.070 --> 00:01:30.060
or the customer to an error page

40
00:01:30.060 --> 00:01:33.000
and show a beautifully displayed error message

41
00:01:33.000 --> 00:01:36.070
asking the user to try the website at a later point in time.

42
00:01:36.070 --> 00:01:38.040
So that facility can be devised

43
00:01:38.040 --> 00:01:41.000
with the help of JSP directives.

44
00:01:41.000 --> 00:01:45.040
It also helps you to include JSP resources dynamically

45
00:01:45.040 --> 00:01:47.060
into the current page.

46
00:01:47.060 --> 00:01:50.010
So let's see what are the types of JSP Directives

47
00:01:50.010 --> 00:01:51.020
that we have.

48
00:01:51.020 --> 00:01:53.030
There are in total of three directives,

49
00:01:53.030 --> 00:01:56.040
page, include, and taglib.

50
00:01:56.040 --> 00:01:58.090
The first one among them is the page directive.

51
00:01:58.090 --> 00:01:59.090
It looks like this.

52
00:01:59.090 --> 00:02:02.040
So there's an angle bracket, a percentage sign,

53
00:02:02.040 --> 00:02:04.030
and the directive is going to be denoted

54
00:02:04.030 --> 00:02:06.010
by at (mumbles) sign.

55
00:02:06.010 --> 00:02:09.010
Followed by that we have the name of the directive.

56
00:02:09.010 --> 00:02:11.030
In this case, it's going to be page.

57
00:02:11.030 --> 00:02:13.000
And if you want to close it you close it

58
00:02:13.000 --> 00:02:16.030
using the percentage and angle bracket in the reverse order.

59
00:02:16.030 --> 00:02:17.040
So that's the page directive.

60
00:02:17.040 --> 00:02:21.030
Now all the information that you want to feed

61
00:02:21.030 --> 00:02:25.040
to the page directive is always in the form of attributes.

62
00:02:25.040 --> 00:02:27.020
So basically a directive looks like

63
00:02:27.020 --> 00:02:29.030
an element on a JSP page,

64
00:02:29.030 --> 00:02:31.080
and the extra information that you need to feed

65
00:02:31.080 --> 00:02:33.090
is in the form of attributes.

66
00:02:33.090 --> 00:02:36.000
All right, what all does the page directive do?

67
00:02:36.000 --> 00:02:37.090
It imports classes,

68
00:02:37.090 --> 00:02:39.090
helps configure error pages,

69
00:02:39.090 --> 00:02:42.080
helps you to set up the session for the JSP,

70
00:02:42.080 --> 00:02:46.060
asks you to even set a character encoding for the page.

71
00:02:46.060 --> 00:02:48.070
So we're going to go to our Eclipse

72
00:02:48.070 --> 00:02:50.050
and quickly take a look at the attributes

73
00:02:50.050 --> 00:02:53.050
that are available on the page directive.

74
00:02:53.050 --> 00:02:55.000
The page directive is usually written

75
00:02:55.000 --> 00:02:56.050
at the top of every page

76
00:02:56.050 --> 00:02:58.050
because it is going to define a lot of attributes

77
00:02:58.050 --> 00:03:00.040
for that entire page.

78
00:03:00.040 --> 00:03:03.050
Now if you see, the page directive was already generated

79
00:03:03.050 --> 00:03:06.000
four times from line number two to five

80
00:03:06.000 --> 00:03:08.040
on the searchResults.jsp.

81
00:03:08.040 --> 00:03:10.040
That happened because, let's come down,

82
00:03:10.040 --> 00:03:12.050
when I wrote the scriptlet code

83
00:03:12.050 --> 00:03:15.020
starting on line number 63 to 68,

84
00:03:15.020 --> 00:03:17.040
I needed to import the list interface,

85
00:03:17.040 --> 00:03:20.020
the ArrayList class, the iterator interface,

86
00:03:20.020 --> 00:03:22.000
the product bean, etc.

87
00:03:22.000 --> 00:03:26.000
So all those imports have been automatically placed there

88
00:03:26.000 --> 00:03:29.010
at the top of the page using the page directive.

89
00:03:29.010 --> 00:03:32.080
Please note the import attribute is the only one

90
00:03:32.080 --> 00:03:35.010
which can be used with the page directive

91
00:03:35.010 --> 00:03:37.030
multiple number of times.

92
00:03:37.030 --> 00:03:39.050
Every other attribute that you use with page

93
00:03:39.050 --> 00:03:41.060
can be used only once.

94
00:03:41.060 --> 00:03:46.010
All right, so let's take a look at the other attributes.

95
00:03:46.010 --> 00:03:47.000
Buffer.

96
00:03:47.000 --> 00:03:51.020
Buffer is going to denote the capacity in KBs,

97
00:03:51.020 --> 00:03:55.000
and that's basically the output that the JSP can handle

98
00:03:55.000 --> 00:03:57.020
when it tries to display something on the page.

99
00:03:57.020 --> 00:04:00.030
Of course you can set this to a greater value,

100
00:04:00.030 --> 00:04:04.020
but it's by default always set to 8kb.

101
00:04:04.020 --> 00:04:07.070
Let's go to the next attribute.

102
00:04:07.070 --> 00:04:09.000
Content type.

103
00:04:09.000 --> 00:04:11.060
If you want to set a content type for this page,

104
00:04:11.060 --> 00:04:13.060
as in what characters are going to get

105
00:04:13.060 --> 00:04:14.060
displayed on this page

106
00:04:14.060 --> 00:04:16.040
and is there a character encoding format.

107
00:04:16.040 --> 00:04:18.090
All of this information can be set as

108
00:04:18.090 --> 00:04:22.080
the content type attribute on the page directive.

109
00:04:22.080 --> 00:04:25.080
Let's look at another one.

110
00:04:25.080 --> 00:04:26.090
Extends.

111
00:04:26.090 --> 00:04:29.080
Now we know that whenever the JSP gets translated,

112
00:04:29.080 --> 00:04:31.050
the parent that is written out

113
00:04:31.050 --> 00:04:34.080
in the translation process is HttpJspBase;

114
00:04:34.080 --> 00:04:38.060
however, if you want to change the parent class for this JSP

115
00:04:38.060 --> 00:04:41.030
you can do that via the extends attribute.

116
00:04:41.030 --> 00:04:44.000
Please note that nobody really uses this attribute,

117
00:04:44.000 --> 00:04:45.070
because if you do then you'll have to

118
00:04:45.070 --> 00:04:47.070
own up the responsibility of writing

119
00:04:47.070 --> 00:04:52.090
all the parent class code for this translated JSP.

120
00:04:52.090 --> 00:04:55.080
Let's look at another attribute,

121
00:04:55.080 --> 00:04:57.000
isELIgnored.

122
00:04:57.000 --> 00:04:58.010
IsELignored?

123
00:04:58.010 --> 00:05:00.030
EL is expression language.

124
00:05:00.030 --> 00:05:02.020
And when I say isELIgnored,

125
00:05:02.020 --> 00:05:04.040
it is trying to indicate whether you really want to

126
00:05:04.040 --> 00:05:07.060
ignore expression language for this JSP.

127
00:05:07.060 --> 00:05:10.010
We rarely do this because we always want

128
00:05:10.010 --> 00:05:12.050
expression language to work for our JSP.

129
00:05:12.050 --> 00:05:14.070
Do not worry too much about what expression language is

130
00:05:14.070 --> 00:05:15.080
because we are going to see that

131
00:05:15.080 --> 00:05:18.080
in the later part of this course.

132
00:05:18.080 --> 00:05:20.080
Then let's talk about isThreadSafe.

133
00:05:20.080 --> 00:05:22.080
IsThreadSage is set to true by default,

134
00:05:22.080 --> 00:05:27.080
and it means that your JSP can handle concurrent requests.

135
00:05:27.080 --> 00:05:30.050
If you set this to false it means a request

136
00:05:30.050 --> 00:05:32.090
will be handled one at a time,

137
00:05:32.090 --> 00:05:34.000
which is not a very good thing to do

138
00:05:34.000 --> 00:05:36.060
because it'll pull down the performance of your application.

139
00:05:36.060 --> 00:05:39.000
So when you say isThreadSafe equal to true,

140
00:05:39.000 --> 00:05:42.000
then you may have to synchronize that block of code

141
00:05:42.000 --> 00:05:49.050
which has a risk of accessing the shared resources.

142
00:05:49.050 --> 00:05:52.050
Now let's take a look at the couple of attributes

143
00:05:52.050 --> 00:05:54.010
which are going to help you devise

144
00:05:54.010 --> 00:05:56.020
error pages for the application.

145
00:05:56.020 --> 00:05:58.090
The first one among them is errorPage.

146
00:05:58.090 --> 00:06:00.040
What this means is,

147
00:06:00.040 --> 00:06:04.070
that if anything goes wrong on the searchResults.jsp file,

148
00:06:04.070 --> 00:06:08.020
then I'm going to direct the user to an error page.

149
00:06:08.020 --> 00:06:10.000
So let's do one thing first.

150
00:06:10.000 --> 00:06:13.000
Let's go to our HTML and create an error page.

151
00:06:13.000 --> 00:06:18.000
So I'm going to say new, JSP file,

152
00:06:18.000 --> 00:06:22.030
and let's label this as error.jsp.

153
00:06:22.030 --> 00:06:23.010
Once we do this,

154
00:06:23.010 --> 00:06:25.080
we're going to have a beautiful error message here,

155
00:06:25.080 --> 00:06:28.090
saying sorry,

156
00:06:28.090 --> 00:06:31.010
some error occurred,

157
00:06:31.010 --> 00:06:36.010
please try again later.

158
00:06:36.010 --> 00:06:37.090
Let's add a bit of paragraph element

159
00:06:37.090 --> 00:06:40.090
instead of an h3 element.

160
00:06:40.090 --> 00:06:43.030
Okay.

161
00:06:43.030 --> 00:06:46.010
Right, so this is the error page for our application.

162
00:06:46.010 --> 00:06:48.010
Now let's go back to searchResults.jsp

163
00:06:48.010 --> 00:06:49.070
and on line number five,

164
00:06:49.070 --> 00:06:52.000
when I had embedded the error page attribute,

165
00:06:52.000 --> 00:06:56.030
I mean that if anything goes wrong on searchResults.jsp

166
00:06:56.030 --> 00:06:58.090
that I need to go to the error.jsp

167
00:06:58.090 --> 00:07:00.060
to show the error message.

168
00:07:00.060 --> 00:07:02.010
So I'm going to give the relative part

169
00:07:02.010 --> 00:07:05.070
of that error.jsp right out here.

170
00:07:05.070 --> 00:07:07.000
That's all.

171
00:07:07.000 --> 00:07:08.050
The other attribute that you need

172
00:07:08.050 --> 00:07:11.000
to mention in terms of error pages configuration,

173
00:07:11.000 --> 00:07:12.080
is this one,

174
00:07:12.080 --> 00:07:15.020
isErrorPage.

175
00:07:15.020 --> 00:07:18.070
So this signifies whether the searchResults.jsp

176
00:07:18.070 --> 00:07:20.090
is the error page of your application,

177
00:07:20.090 --> 00:07:22.000
which is not.

178
00:07:22.000 --> 00:07:24.090
That's why we are setting isErrorPage is false.

179
00:07:24.090 --> 00:07:28.010
So what we need to do is we need to go in the error.jsp

180
00:07:28.010 --> 00:07:30.090
and there when you have the page directive,

181
00:07:30.090 --> 00:07:36.030
to that you need to say isErrorPage,

182
00:07:36.030 --> 00:07:38.060
this will be set to true.

183
00:07:38.060 --> 00:07:40.030
That's right, error.jsp

184
00:07:40.030 --> 00:07:42.060
is the error page for my application,

185
00:07:42.060 --> 00:07:44.010
and that is exactly what I'm trying

186
00:07:44.010 --> 00:07:46.010
to define by this attribute.

187
00:07:46.010 --> 00:07:49.000
In all the other pages of your application,

188
00:07:49.000 --> 00:07:51.050
this attribute will be set to false

189
00:07:51.050 --> 00:07:54.090
the way we did it on the searchResults.jsp.

190
00:07:54.090 --> 00:07:57.000
So now what I'm going to do is I'm going to deliberately

191
00:07:57.000 --> 00:08:00.080
do a mistake on this JSP so that something goes wrong,

192
00:08:00.080 --> 00:08:03.080
and then we'll check out the flow.

193
00:08:03.080 --> 00:08:06.080
So I'm going to do this mistake here.

194
00:08:06.080 --> 00:08:10.000
Let me go to line number 64

195
00:08:10.000 --> 00:08:12.050
and let me change the name of this key itself

196
00:08:12.050 --> 00:08:13.090
so it is never going to find it,

197
00:08:13.090 --> 00:08:16.030
and I'm going to get a NullPointerException at this line.

198
00:08:16.030 --> 00:08:19.010
A NullPointerException is basically a problem.

199
00:08:19.010 --> 00:08:20.040
So when that error occurs,

200
00:08:20.040 --> 00:08:23.070
I should be directed to that error.jsp, right?

201
00:08:23.070 --> 00:08:28.070
So let's deploy these changes and check our flow.

202
00:08:28.070 --> 00:08:30.050
Let's click on the search hyperlink,

203
00:08:30.050 --> 00:08:32.030
enter a search criteria.

204
00:08:32.030 --> 00:08:33.020
So there you go.

205
00:08:33.020 --> 00:08:34.080
You get the error message displayed,

206
00:08:34.080 --> 00:08:35.080
sorry, some error occurred,

207
00:08:35.080 --> 00:08:38.090
because something went wrong on the searchResults.jsp.

208
00:08:38.090 --> 00:08:41.070
So this is a mechanism of doing a graceful exit

209
00:08:41.070 --> 00:08:44.020
out of the application in case anything goes wrong

210
00:08:44.020 --> 00:08:45.080
in any of your pages.

211
00:08:45.080 --> 00:08:49.020
It's way better than showing the stack trace to the user

212
00:08:49.020 --> 00:08:52.000
because that's really an embarrassing situation.

