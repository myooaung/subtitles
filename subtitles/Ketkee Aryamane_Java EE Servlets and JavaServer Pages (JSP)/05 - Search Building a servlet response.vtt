WEBVTT
1
00:00:00.050 --> 00:00:02.020
- [Instructor] Now that we've added the method in the DAO

2
00:00:02.020 --> 00:00:04.010
let's come back to the SearchServlet

3
00:00:04.010 --> 00:00:06.020
and let's call the DAO from here.

4
00:00:06.020 --> 00:00:07.060
So, on line number 20, I'm going to

5
00:00:07.060 --> 00:00:09.090
make an instance of application DAO.

6
00:00:09.090 --> 00:00:16.010
Let's do that.

7
00:00:16.010 --> 00:00:18.050
And, once we do that we also call

8
00:00:18.050 --> 00:00:19.090
the search products method.

9
00:00:19.090 --> 00:00:22.050
So, I'm going to say dao.searchProducts

10
00:00:22.050 --> 00:00:24.010
and the search string that we have are collected

11
00:00:24.010 --> 00:00:26.000
on line number 21, we just going to pass

12
00:00:26.000 --> 00:00:27.040
that as an argument.

13
00:00:27.040 --> 00:00:37.030
And, collect this entire output in a list of products.

14
00:00:37.030 --> 00:00:38.080
Right.

15
00:00:38.080 --> 00:00:39.090
Now, let's look at the next step.

16
00:00:39.090 --> 00:00:41.070
The next step will be to build a method

17
00:00:41.070 --> 00:00:44.020
in the SearchServlet which is going

18
00:00:44.020 --> 00:00:47.050
to read the entire searchResults.html file.

19
00:00:47.050 --> 00:00:48.090
We talked about the portion where we need

20
00:00:48.090 --> 00:00:51.050
to read the entire HTML as a string.

21
00:00:51.050 --> 00:00:52.090
Right.

22
00:00:52.090 --> 00:00:53.070
That's what we are going to do now.

23
00:00:53.070 --> 00:00:55.020
The method is going to do a couple of jobs.

24
00:00:55.020 --> 00:00:57.080
One is to read the entire HTML as a string

25
00:00:57.080 --> 00:01:00.010
and then to replace those placeholders

26
00:01:00.010 --> 00:01:04.010
with the relevant data of product images and the names.

27
00:01:04.010 --> 00:01:06.080
And, for that, we are going to use message format API.

28
00:01:06.080 --> 00:01:10.090
So, let's build this method inside the SearchServlet.

29
00:01:10.090 --> 00:01:12.020
So, I've already put out a command for it,

30
00:01:12.020 --> 00:01:13.050
a documentation command

31
00:01:13.050 --> 00:01:15.040
and the command states that this method

32
00:01:15.040 --> 00:01:17.040
that we are going to generate now

33
00:01:17.040 --> 00:01:19.000
is going to read the HTML template as a string,

34
00:01:19.000 --> 00:01:20.080
replace the placeholders with the values,

35
00:01:20.080 --> 00:01:23.050
and return the entire page back as a string.

36
00:01:23.050 --> 00:01:24.040
So, let's write that method.

37
00:01:24.040 --> 00:01:30.090
I'm going to say public String getHTMLString.

38
00:01:30.090 --> 00:01:32.050
It'll take two parameters.

39
00:01:32.050 --> 00:01:37.000
One is the path of that HTML file

40
00:01:37.000 --> 00:01:38.040
and we want the data,

41
00:01:38.040 --> 00:01:40.020
which will get replaced in the placeholder,

42
00:01:40.020 --> 00:01:47.070
so let's take that as a list of products.

43
00:01:47.070 --> 00:01:48.070
What are we going to do inside?

44
00:01:48.070 --> 00:01:50.070
We are going to read that entire file

45
00:01:50.070 --> 00:01:52.070
for which I'm going to use code Java APIs.

46
00:01:52.070 --> 00:01:58.030
So, I'm going to use the bufferedReader object

47
00:01:58.030 --> 00:02:02.090
and I'm going to instantiate this.

48
00:02:02.090 --> 00:02:05.030
And, for that, I'm also going to pass an instance

49
00:02:05.030 --> 00:02:07.090
of the file reader

50
00:02:07.090 --> 00:02:11.010
to which I'll pass the file path.

51
00:02:11.010 --> 00:02:12.020
So, this is going to be simple Java code

52
00:02:12.020 --> 00:02:14.030
that you may already be aware of.

53
00:02:14.030 --> 00:02:16.090
After this, I'm going to take a simple string variable

54
00:02:16.090 --> 00:02:19.030
which represents every line.

55
00:02:19.030 --> 00:02:21.030
Let's set it to empty initially.

56
00:02:21.030 --> 00:02:23.020
Let's also take a StringBuffer object

57
00:02:23.020 --> 00:02:26.040
which is going to store all the contents of the entire HTML.

58
00:02:26.040 --> 00:02:30.040
So, I'm going to instantiate that as well.

59
00:02:30.040 --> 00:02:33.040
Now, let's go ahead and put a while loop

60
00:02:33.040 --> 00:02:36.090
which is going to read everything from this file line by line.

61
00:02:36.090 --> 00:02:40.050
So, I'm going to say while and inside that

62
00:02:40.050 --> 00:02:43.000
every line is going to get the output

63
00:02:43.000 --> 00:02:46.060
from the reader.readLine API call.

64
00:02:46.060 --> 00:02:49.050
So, I'm going to check if this is not null.

65
00:02:49.050 --> 00:02:51.040
So, I'm going to keep running this while loop

66
00:02:51.040 --> 00:02:53.050
until this line is not null.

67
00:02:53.050 --> 00:02:56.060
If it is null, it means I have reached the end of the file.

68
00:02:56.060 --> 00:02:57.040
Right.

69
00:02:57.040 --> 00:02:58.030
So, let's put the while loop

70
00:02:58.030 --> 00:03:03.050
and let's collect every line in that buffer object.

71
00:03:03.050 --> 00:03:05.090
So, I'm going to open that line to the buffer.

72
00:03:05.090 --> 00:03:08.020
Once I am done with the reading process,

73
00:03:08.020 --> 00:03:10.060
I can come out on line number 53,

74
00:03:10.060 --> 00:03:15.040
I am just going to take the reader object and close it.

75
00:03:15.040 --> 00:03:16.090
So, every resource that you open in the code

76
00:03:16.090 --> 00:03:18.020
has to definitely be closed

77
00:03:18.020 --> 00:03:19.090
as a part of your clean up activity.

78
00:03:19.090 --> 00:03:21.000
So, once we are done with that

79
00:03:21.000 --> 00:03:24.010
what we do is we take another page variable

80
00:03:24.010 --> 00:03:27.060
and empty the entire contents of the buffer

81
00:03:27.060 --> 00:03:31.040
as a string value right there.

82
00:03:31.040 --> 00:03:33.070
Now, of course, these errors that you are able to see

83
00:03:33.070 --> 00:03:36.030
are because these lines could possibly throw an exception.

84
00:03:36.030 --> 00:03:38.010
So, I'm quickly going to add the tools clause

85
00:03:38.010 --> 00:03:40.060
and eliminate those errors.

86
00:03:40.060 --> 00:03:42.020
Once we do that, what we've done is

87
00:03:42.020 --> 00:03:43.060
we've done with the first step.

88
00:03:43.060 --> 00:03:45.040
We've read the entire HTML as a string.

89
00:03:45.040 --> 00:03:47.020
Now, the next bit is you just need

90
00:03:47.020 --> 00:03:49.030
to replace those placeholders with the data.

91
00:03:49.030 --> 00:03:51.090
So, let's come back and on line number 56

92
00:03:51.090 --> 00:03:54.070
I'm going to say, I'm going to format this page

93
00:03:54.070 --> 00:03:57.020
using the message format API.

94
00:03:57.020 --> 00:03:59.040
So, let's do that,

95
00:03:59.040 --> 00:04:00.060
MessageFormat,

96
00:04:00.060 --> 00:04:02.060
call the format API,

97
00:04:02.060 --> 00:04:04.010
pass the page that you need to format

98
00:04:04.010 --> 00:04:07.040
and the argument will be the entire data from products.

99
00:04:07.040 --> 00:04:08.080
Now, for the sake of simplicity,

100
00:04:08.080 --> 00:04:12.000
I've taken only three products to be displayed on the page.

101
00:04:12.000 --> 00:04:14.050
So, I'm going to access the products by their indices.

102
00:04:14.050 --> 00:04:19.010
So, I'm going to say products.get of zero

103
00:04:19.010 --> 00:04:21.040
.getproduct image.

104
00:04:21.040 --> 00:04:22.060
That's the first placeholder

105
00:04:22.060 --> 00:04:24.030
for the first product.

106
00:04:24.030 --> 00:04:25.080
And, I'm going to do the same thing

107
00:04:25.080 --> 00:04:27.090
for the rest of the other products as well.

108
00:04:27.090 --> 00:04:29.080
So, just hit an enter

109
00:04:29.080 --> 00:04:32.040
and append this data to it.

110
00:04:32.040 --> 00:04:33.080
So, this is for the product number zero.

111
00:04:33.080 --> 00:04:35.090
This will be for product number one.

112
00:04:35.090 --> 00:04:38.090
And, that will be for product number two.

113
00:04:38.090 --> 00:04:40.060
Similarly, I need to open the data

114
00:04:40.060 --> 00:04:42.040
for the product name as well.

115
00:04:42.040 --> 00:04:45.020
So, again, I will have to first fetch the products

116
00:04:45.020 --> 00:04:47.040
from the list by the index.

117
00:04:47.040 --> 00:04:48.090
Get zero

118
00:04:48.090 --> 00:04:52.010
and then let's say getProductName.

119
00:04:52.010 --> 00:04:53.040
And now, the same thing I'll have to do

120
00:04:53.040 --> 00:04:54.060
for the rest of the two products.

121
00:04:54.060 --> 00:04:56.050
So, I'm just going to copy this

122
00:04:56.050 --> 00:05:01.020
and continue to paste it after the comma.

123
00:05:01.020 --> 00:05:03.010
So, this will be for product number one

124
00:05:03.010 --> 00:05:05.090
and that is again, product number two.

125
00:05:05.090 --> 00:05:07.080
So, we have replaced all the placeholders

126
00:05:07.080 --> 00:05:09.040
for product images and names.

127
00:05:09.040 --> 00:05:11.030
But, there's an action placeholder that we had

128
00:05:11.030 --> 00:05:12.090
for items in cart.

129
00:05:12.090 --> 00:05:14.020
Right now, it is going to be zero.

130
00:05:14.020 --> 00:05:15.080
So, I'm just going to append that zero

131
00:05:15.080 --> 00:05:18.070
and put a semi-colon to end this call.

132
00:05:18.070 --> 00:05:21.050
So, the message format is going to take arguments

133
00:05:21.050 --> 00:05:23.040
which is the page of self that you want to format

134
00:05:23.040 --> 00:05:24.080
and all the data that you want

135
00:05:24.080 --> 00:05:26.040
to replace in the placeholders.

136
00:05:26.040 --> 00:05:29.030
That, again, goes as a comma separated list of values,

137
00:05:29.030 --> 00:05:30.030
that's all.

138
00:05:30.030 --> 00:05:32.040
Once we do this, let's come back

139
00:05:32.040 --> 00:05:35.020
and on line number 62, I am just going

140
00:05:35.020 --> 00:05:38.070
to return this entire page variable back.

141
00:05:38.070 --> 00:05:39.050
Right.

142
00:05:39.050 --> 00:05:42.080
Now, what we need to do is once we are ready

143
00:05:42.080 --> 00:05:45.070
with this method we need to write that replaced page

144
00:05:45.070 --> 00:05:48.080
back to the web browser using the PrintWriter API.

145
00:05:48.080 --> 00:05:51.060
So, let's call this method from the do get method.

146
00:05:51.060 --> 00:05:54.020
So,

147
00:05:54.020 --> 00:05:58.000
lines number 27 and 28 where we are calling the DAO.

148
00:05:58.000 --> 00:06:02.010
I'm just going to put it up in the respective method block.

149
00:06:02.010 --> 00:06:03.010
So, that's calling the DAO layer

150
00:06:03.010 --> 00:06:05.000
and getting all the products and now we are going

151
00:06:05.000 --> 00:06:07.060
to write the products data back to the client.

152
00:06:07.060 --> 00:06:09.030
For that, on line number 34,

153
00:06:09.030 --> 00:06:11.020
I'll have to call this method here.

154
00:06:11.020 --> 00:06:14.050
So, I'm going to say String page equal to

155
00:06:14.050 --> 00:06:17.060
getHTMLString and I have to pass those arguments.

156
00:06:17.060 --> 00:06:20.070
The file path will be given

157
00:06:20.070 --> 00:06:24.030
by the method of getServletContext

158
00:06:24.030 --> 00:06:26.090
and chain another API on it getRealPath.

159
00:06:26.090 --> 00:06:27.090
Please don't worry about this.

160
00:06:27.090 --> 00:06:29.000
We are anyway going to look at this

161
00:06:29.000 --> 00:06:31.030
at a later point in our course.

162
00:06:31.030 --> 00:06:34.000
Filter relative path of that HTML

163
00:06:34.000 --> 00:06:38.030
which is searchResults.html

164
00:06:38.030 --> 00:06:40.080
and the second argument is, of course, the products.

165
00:06:40.080 --> 00:06:44.000
Once we get this, we just have to say getWriter

166
00:06:44.000 --> 00:06:46.020
and call the right method and stuff

167
00:06:46.020 --> 00:06:49.050
that entire page back to the client.

168
00:06:49.050 --> 00:06:51.020
So now that we've written out the response

169
00:06:51.020 --> 00:06:54.000
there's one last step that we have to execute.

170
00:06:54.000 --> 00:06:55.070
We have to assign the proper attributes

171
00:06:55.070 --> 00:06:58.000
to the form element on the HTML.

172
00:06:58.000 --> 00:06:59.030
So, let's go back to Eclipse.

173
00:06:59.030 --> 00:07:01.000
Let's go to the index.html.

174
00:07:01.000 --> 00:07:02.070
That's the subsection

175
00:07:02.070 --> 00:07:04.090
and if you look at the SearchServlet,

176
00:07:04.090 --> 00:07:06.080
we have already used the an edition approach

177
00:07:06.080 --> 00:07:09.050
to define the URL pattern for this servlet.

178
00:07:09.050 --> 00:07:11.020
So, I'm just going to pick this up,

179
00:07:11.020 --> 00:07:14.080
go to my next HTML and on the form element,

180
00:07:14.080 --> 00:07:16.080
I need to define a couple of attributes.

181
00:07:16.080 --> 00:07:20.050
One is the action, which is the search URL pattern

182
00:07:20.050 --> 00:07:22.090
and the method, because we are making a get request,

183
00:07:22.090 --> 00:07:25.010
the method is going to be set to get.

184
00:07:25.010 --> 00:07:26.090
Please know that in the previous video,

185
00:07:26.090 --> 00:07:28.060
we had actually implemented a get request

186
00:07:28.060 --> 00:07:30.000
by just accessing the URL.

187
00:07:30.000 --> 00:07:32.040
When you access the URL, you are just bound

188
00:07:32.040 --> 00:07:35.010
to make a get request by default.

189
00:07:35.010 --> 00:07:38.000
Here we are making a get request via the form element.

190
00:07:38.000 --> 00:07:38.090
Right.

191
00:07:38.090 --> 00:07:41.080
So, now, let's go ahead and run our changes

192
00:07:41.080 --> 00:07:44.070
and see if everything works fine.

193
00:07:44.070 --> 00:07:46.080
So, I'm going to take this,

194
00:07:46.080 --> 00:07:50.070
open the application in the browser,

195
00:07:50.070 --> 00:07:54.020
and click on the search hyperlink,

196
00:07:54.020 --> 00:07:55.090
enter the search criteria,

197
00:07:55.090 --> 00:07:57.020
there you go.

198
00:07:57.020 --> 00:07:58.080
You have got all the items listed

199
00:07:58.080 --> 00:08:00.010
as per the search criteria.

200
00:08:00.010 --> 00:08:02.030
Let me try out another search criteria.

201
00:08:02.030 --> 00:08:04.030
Let's say protein.

202
00:08:04.030 --> 00:08:06.050
And, you get all the protein bars listed

203
00:08:06.050 --> 00:08:08.050
with respect to my search criteria.

204
00:08:08.050 --> 00:08:10.030
So, that's how you can implement a get request

205
00:08:10.030 --> 00:08:13.000
in our application.

