WEBVTT
1
00:00:00.050 --> 00:00:01.060
- [Instructor] Now, let us see the demo

2
00:00:01.060 --> 00:00:04.010
for JSP standard actions.

3
00:00:04.010 --> 00:00:07.060
What we are going to do is, let's say we click on login

4
00:00:07.060 --> 00:00:11.000
and enter the credentials.

5
00:00:11.000 --> 00:00:13.000
After that, we click on view my profile

6
00:00:13.000 --> 00:00:15.030
and this profile information that you see,

7
00:00:15.030 --> 00:00:16.060
we are now going to display it

8
00:00:16.060 --> 00:00:18.020
with the help of JSP standard actions.

9
00:00:18.020 --> 00:00:21.020
So, that's what we are going to work out in the application.

10
00:00:21.020 --> 00:00:22.080
The first thing that we have to do is we have

11
00:00:22.080 --> 00:00:24.090
to add a method in DAO

12
00:00:24.090 --> 00:00:27.000
to get the profile details of the user.

13
00:00:27.000 --> 00:00:29.050
So, let's go to Eclipse, that's our application DAO

14
00:00:29.050 --> 00:00:32.050
and that's on the third template that's ready with me.

15
00:00:32.050 --> 00:00:34.090
This method is going to take a parameter of username.

16
00:00:34.090 --> 00:00:37.000
That's going to be passed in from the servlet

17
00:00:37.000 --> 00:00:38.040
and I'm going to connect to the database

18
00:00:38.040 --> 00:00:39.050
and get the profile details.

19
00:00:39.050 --> 00:00:41.010
So, let's get started on that.

20
00:00:41.010 --> 00:00:43.040
The first thing is getting a connection to the database.

21
00:00:43.040 --> 00:00:45.040
So, on line 102, I'm just going

22
00:00:45.040 --> 00:00:47.060
to quickly take the connection object

23
00:00:47.060 --> 00:00:50.060
with the help of the DB connection class.

24
00:00:50.060 --> 00:00:54.090
Once that's done, let's go ahead and write the query

25
00:00:54.090 --> 00:00:58.050
for selecting the user profile details.

26
00:00:58.050 --> 00:01:01.030
So, I'm going to say string SQL equal

27
00:01:01.030 --> 00:01:03.090
to select star from users,

28
00:01:03.090 --> 00:01:05.050
that's the table from which we can pull

29
00:01:05.050 --> 00:01:07.090
the entire profile information.

30
00:01:07.090 --> 00:01:12.030
Where username equal to question mark.

31
00:01:12.030 --> 00:01:14.050
So, we're going to pass this parameter dynamically

32
00:01:14.050 --> 00:01:16.030
through the prepared statement object.

33
00:01:16.030 --> 00:01:19.000
So, let's do that.

34
00:01:19.000 --> 00:01:20.090
Prepared statement.

35
00:01:20.090 --> 00:01:23.020
Now, let me check import of this.

36
00:01:23.020 --> 00:01:26.090
Prepared statement, Java dot SQL, yeah.

37
00:01:26.090 --> 00:01:30.010
And, let's take that on the connection object

38
00:01:30.010 --> 00:01:34.060
and pass that SQL query.

39
00:01:34.060 --> 00:01:36.080
And then, we'll set this parameter dynamically.

40
00:01:36.080 --> 00:01:41.030
So, let me say statement dot set string

41
00:01:41.030 --> 00:01:43.090
parameter index number one and the value would

42
00:01:43.090 --> 00:01:45.020
be the username which is coming

43
00:01:45.020 --> 00:01:47.050
in the form of the method parameter.

44
00:01:47.050 --> 00:01:49.040
Now, once done, let's execute this query.

45
00:01:49.040 --> 00:01:52.040
So, this will be statement dot execute query.

46
00:01:52.040 --> 00:01:54.030
And, of course, this is going to return me something

47
00:01:54.030 --> 00:01:56.040
of the result set type.

48
00:01:56.040 --> 00:02:01.010
So, let's fetch that into the reference variable.

49
00:02:01.010 --> 00:02:05.010
Now, let's iterate this result set.

50
00:02:05.010 --> 00:02:08.070
Let's say set dot next.

51
00:02:08.070 --> 00:02:10.080
And, what we are going to do is,

52
00:02:10.080 --> 00:02:13.020
this is an API call, yeah.

53
00:02:13.020 --> 00:02:15.020
So, what we want to do is we are going to take

54
00:02:15.020 --> 00:02:17.060
that entire rule of that result set

55
00:02:17.060 --> 00:02:21.030
and we are going to put it in a user object.

56
00:02:21.030 --> 00:02:23.080
So, what I'm going to do is on line number 101,

57
00:02:23.080 --> 00:02:26.080
I'll just create a user reference quickly.

58
00:02:26.080 --> 00:02:29.040
Set it to null initially.

59
00:02:29.040 --> 00:02:31.020
And, I'll come down in my while loop

60
00:02:31.020 --> 00:02:36.080
and I'll say user equal to new user.

61
00:02:36.080 --> 00:02:39.040
Let me get rid of this symbol here on 112.

62
00:02:39.040 --> 00:02:42.000
That's a problem, yes.

63
00:02:42.000 --> 00:02:45.040
Now, let's go ahead and set all the fields to the user

64
00:02:45.040 --> 00:02:46.090
by retrieving them from that row.

65
00:02:46.090 --> 00:02:52.000
So, I'm going to say user dot set

66
00:02:52.000 --> 00:02:57.030
username set dot get string

67
00:02:57.030 --> 00:03:02.000
and the column name is, of course, username.

68
00:03:02.000 --> 00:03:04.020
Like that, we'll be able to set the rest of the fields.

69
00:03:04.020 --> 00:03:07.050
So, user dot set first name.

70
00:03:07.050 --> 00:03:09.050
We don't need the password to be displayed on the screen

71
00:03:09.050 --> 00:03:11.050
so, I'm going to avoid that.

72
00:03:11.050 --> 00:03:14.030
Get string.

73
00:03:14.030 --> 00:03:17.060
This will be first underscore name.

74
00:03:17.060 --> 00:03:23.090
Similarly, you can go ahead and say user dot set last name

75
00:03:23.090 --> 00:03:26.010
and retrieve it from that results set

76
00:03:26.010 --> 00:03:28.070
in the form of the string value.

77
00:03:28.070 --> 00:03:33.060
So, I'll say last underscore name.

78
00:03:33.060 --> 00:03:36.090
Then, we say user dot set activity

79
00:03:36.090 --> 00:03:39.070
which is going to be set dot get string again

80
00:03:39.070 --> 00:03:44.070
and feed the name of the column.

81
00:03:44.070 --> 00:03:48.010
As for the age, it's an integer field

82
00:03:48.010 --> 00:03:53.020
so, we are going to say user dot set age.

83
00:03:53.020 --> 00:03:55.040
And, in order to retrieve that from the result set,

84
00:03:55.040 --> 00:03:58.030
we are going to say set dot get int

85
00:03:58.030 --> 00:04:04.050
and feed the name of the column age.

86
00:04:04.050 --> 00:04:06.070
So, once we do this,

87
00:04:06.070 --> 00:04:08.000
the only thing that remains is we have

88
00:04:08.000 --> 00:04:10.040
to get this user object back to the calling method.

89
00:04:10.040 --> 00:04:14.070
So, on line number 129, I'll just say return user.

90
00:04:14.070 --> 00:04:16.010
That's all.

91
00:04:16.010 --> 00:04:19.060
So, that's our method for retrieving the profile details

92
00:04:19.060 --> 00:04:22.010
from the database.

93
00:04:22.010 --> 00:04:24.000
Let's go ahead and see the next step.

94
00:04:24.000 --> 00:04:26.000
We'll have to write the ViewProfile servlet class

95
00:04:26.000 --> 00:04:28.060
which will collect username and call DAO layer

96
00:04:28.060 --> 00:04:30.060
to fetch the profile information.

97
00:04:30.060 --> 00:04:32.010
Now, in one of our previous videos,

98
00:04:32.010 --> 00:04:34.050
we have already coded the ViewProfile servlet

99
00:04:34.050 --> 00:04:36.070
where we were looking at the URL read writing demo.

100
00:04:36.070 --> 00:04:39.010
So, we have already collected the username

101
00:04:39.010 --> 00:04:42.090
on line number 18 from the session as an attribute.

102
00:04:42.090 --> 00:04:44.050
So, the only thing that will remain here is

103
00:04:44.050 --> 00:04:47.000
to call the DAO and get the details.

104
00:04:47.000 --> 00:04:49.080
So, on line number 21, I'm going

105
00:04:49.080 --> 00:04:53.070
to make an instance of application DAO

106
00:04:53.070 --> 00:04:56.010
and I'll simply call that method

107
00:04:56.010 --> 00:04:58.010
of get profile details and pass

108
00:04:58.010 --> 00:05:00.070
on the username as an argument.

109
00:05:00.070 --> 00:05:05.010
And, I'll collect all of this into a user object.

110
00:05:05.010 --> 00:05:06.020
Let's call it user.

111
00:05:06.020 --> 00:05:09.000
Yeah, that is good.

112
00:05:09.000 --> 00:05:11.060
Okay, so let's also do one more thing.

113
00:05:11.060 --> 00:05:12.040
We just have printed the username

114
00:05:12.040 --> 00:05:14.050
so, let's collect it in a variable first.

115
00:05:14.050 --> 00:05:18.070
On line 22, I'm going to say string username equal to

116
00:05:18.070 --> 00:05:22.010
copy this that is coming from the session as an attribute

117
00:05:22.010 --> 00:05:24.090
and paste it on line number 22

118
00:05:24.090 --> 00:05:28.030
assigning it to this username variable.

119
00:05:28.030 --> 00:05:30.010
Of course, this is going to return me something

120
00:05:30.010 --> 00:05:36.010
of type object, so let's also cast it to the string type.

121
00:05:36.010 --> 00:05:37.050
Now, once this is done, we are going

122
00:05:37.050 --> 00:05:39.050
to store the entire profile information

123
00:05:39.050 --> 00:05:40.080
in the request object.

124
00:05:40.080 --> 00:05:42.060
So, this user object that has been returned

125
00:05:42.060 --> 00:05:45.040
as a part of the get profile details method of the DAO,

126
00:05:45.040 --> 00:05:47.060
let's go ahead and store it in the request object.

127
00:05:47.060 --> 00:05:51.080
So, I'm going to say request dot set attribute.

128
00:05:51.080 --> 00:05:53.050
Let's say user.

129
00:05:53.050 --> 00:05:56.080
That's the key for that and the value is the actual object.

130
00:05:56.080 --> 00:05:59.020
And once we do that, you just have to now display

131
00:05:59.020 --> 00:06:01.010
on JSP using standard actions.

132
00:06:01.010 --> 00:06:04.000
So, this information of profile that we have stored

133
00:06:04.000 --> 00:06:06.080
in request, we are going to carry it to JSP

134
00:06:06.080 --> 00:06:10.050
and then display all of that using the JSP standard actions.

135
00:06:10.050 --> 00:06:12.020
So, if you see on line number 32,

136
00:06:12.020 --> 00:06:14.070
I have already taken the control to the profile JSP.

137
00:06:14.070 --> 00:06:17.050
So now, the rest of the code we'll see

138
00:06:17.050 --> 00:06:20.060
on the profile dot JSP, which is this page.

139
00:06:20.060 --> 00:06:23.000
So, let's take a look at this in the next video.

