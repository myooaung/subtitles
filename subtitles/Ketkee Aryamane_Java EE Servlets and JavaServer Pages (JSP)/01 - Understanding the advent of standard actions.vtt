WEBVTT
1
00:00:00.050 --> 00:00:01.060
- [Female Speaker] Now let us understand

2
00:00:01.060 --> 00:00:04.030
the advent of JSP Standard Actions.

3
00:00:04.030 --> 00:00:08.000
So far, we have known the basic elements on a JSP:

4
00:00:08.000 --> 00:00:10.090
scriptlet, expression, and declaration.

5
00:00:10.090 --> 00:00:14.030
Scriptlets allow you to write Java code statements.

6
00:00:14.030 --> 00:00:17.010
Expression allows you to evaluate expressions

7
00:00:17.010 --> 00:00:19.090
and print then on your JSP whereas declaration allows you

8
00:00:19.090 --> 00:00:22.050
to introduce new instances, variables, and methods

9
00:00:22.050 --> 00:00:25.060
in the translated servlet for your JSP.

10
00:00:25.060 --> 00:00:27.020
When we talk about a JSP,

11
00:00:27.020 --> 00:00:31.030
it is used only for navigating and displaying object data.

12
00:00:31.030 --> 00:00:33.030
In a typical MVC architecture,

13
00:00:33.030 --> 00:00:36.000
JSP is always the view layer of your application,

14
00:00:36.000 --> 00:00:38.050
which is basically the presentation,

15
00:00:38.050 --> 00:00:39.060
other than presentation,

16
00:00:39.060 --> 00:00:42.020
it should be really doing anything more.

17
00:00:42.020 --> 00:00:45.010
It should not be involved in any kind of business logic

18
00:00:45.010 --> 00:00:47.050
nor should it be involved in any kind

19
00:00:47.050 --> 00:00:50.030
of database interaction because it is merely there

20
00:00:50.030 --> 00:00:52.090
for the presentation purposes.

21
00:00:52.090 --> 00:00:54.070
Let's take a look at some of the code pieces

22
00:00:54.070 --> 00:00:58.010
that we have written with the basic elements.

23
00:00:58.010 --> 00:01:00.050
Look at the searchResults.jsp,

24
00:01:00.050 --> 00:01:02.060
we have this set of lines that we've written out.

25
00:01:02.060 --> 00:01:06.070
Basically the motive here was to display the product data.

26
00:01:06.070 --> 00:01:09.030
We had to open up a scriptlet in order to get the products

27
00:01:09.030 --> 00:01:12.040
from the request code then we had to start an Iterator

28
00:01:12.040 --> 00:01:15.020
and then we started running a While loop,

29
00:01:15.020 --> 00:01:17.030
but then for every product since we had

30
00:01:17.030 --> 00:01:19.000
to generate a form element,

31
00:01:19.000 --> 00:01:21.030
we actually had to close the scriptlet right here,

32
00:01:21.030 --> 00:01:23.080
because form is in HTML code.

33
00:01:23.080 --> 00:01:26.060
After we do all that, we are to open a scriptlet again

34
00:01:26.060 --> 00:01:30.060
so that we correctly close this While loop as well.

35
00:01:30.060 --> 00:01:34.080
Now this is just the code for small portion of your page.

36
00:01:34.080 --> 00:01:37.070
But let's say your JSP is huge and contains a lot

37
00:01:37.070 --> 00:01:40.010
of dynamically generated content.

38
00:01:40.010 --> 00:01:43.010
In that case, really looking at this code

39
00:01:43.010 --> 00:01:45.010
and reading it out is difficult.

40
00:01:45.010 --> 00:01:46.060
The read ability's highly reduced

41
00:01:46.060 --> 00:01:51.020
because it's trying to make your code a little messy.

42
00:01:51.020 --> 00:01:56.020
Let's take a look at another page. The login.jsp.

43
00:01:56.020 --> 00:01:59.010
The purpose of lines number 44-50

44
00:01:59.010 --> 00:02:02.070
was only to go ahead and fetch that error attribute

45
00:02:02.070 --> 00:02:05.060
from the request code and display it for the user.

46
00:02:05.060 --> 00:02:08.010
But if you take a look at this code, in the first shot,

47
00:02:08.010 --> 00:02:13.020
it really looks less readable, messy, and it's definitely

48
00:02:13.020 --> 00:02:16.050
going to be non-maintainable in the future.

49
00:02:16.050 --> 00:02:19.090
If you have this kind of code written all over your JSP page

50
00:02:19.090 --> 00:02:23.000
it's really going to become difficult to maintain it.

51
00:02:23.000 --> 00:02:26.030
So, all the JSP elements that we've seen so far,

52
00:02:26.030 --> 00:02:29.010
make your code messy, non-maintainable,

53
00:02:29.010 --> 00:02:33.010
and it's really difficult to even read that code.

54
00:02:33.010 --> 00:02:37.000
So now, we need to adopt an approach so that we stop

55
00:02:37.000 --> 00:02:39.030
writing these kind of lengthy code statements

56
00:02:39.030 --> 00:02:41.040
on our JSP pages.

57
00:02:41.040 --> 00:02:43.030
Take a look at this page again.

58
00:02:43.030 --> 00:02:46.040
When you look at a HTML set of tags,

59
00:02:46.040 --> 00:02:49.070
don't you think that it is definitely a more readable code?

60
00:02:49.070 --> 00:02:51.050
It's really nice to read that code.

61
00:02:51.050 --> 00:02:53.070
You understand it quite quickly

62
00:02:53.070 --> 00:02:56.060
rather than reading the JSP elements code.

63
00:02:56.060 --> 00:02:59.060
So, we basically now need to go towards an approach

64
00:02:59.060 --> 00:03:03.080
where instead of writing of lot of Java code statements,

65
00:03:03.080 --> 00:03:05.080
we start writing tags.

66
00:03:05.080 --> 00:03:07.070
However, when it comes to JSP code,

67
00:03:07.070 --> 00:03:09.090
it is basically Java code and that needs

68
00:03:09.090 --> 00:03:12.020
to get executed through the server side.

69
00:03:12.020 --> 00:03:14.070
Which means, that whenever we write a tag

70
00:03:14.070 --> 00:03:17.020
and when your JSP executes,

71
00:03:17.020 --> 00:03:19.060
behind the scenes there must be some Java code

72
00:03:19.060 --> 00:03:22.040
that should run so that it does the job

73
00:03:22.040 --> 00:03:25.010
that you want to do on your presentation

74
00:03:25.010 --> 00:03:26.090
and that's exactly where you have

75
00:03:26.090 --> 00:03:29.040
JSP Standard Actions coming in.

76
00:03:29.040 --> 00:03:32.080
They are some actions that you take on your JSP

77
00:03:32.080 --> 00:03:35.050
and they will be in the form of tags that you write

78
00:03:35.050 --> 00:03:38.010
which will get your job done.

79
00:03:38.010 --> 00:03:40.010
So, JSP Standard Actions are, of course,

80
00:03:40.010 --> 00:03:43.090
tags which take action during the JSP execution.

81
00:03:43.090 --> 00:03:45.060
They can do a lot of stuff for you.

82
00:03:45.060 --> 00:03:48.000
Like for example, you want to fetch the value

83
00:03:48.000 --> 00:03:50.070
of a Java property out of a Java object

84
00:03:50.070 --> 00:03:53.010
which has probably been set in some pre-defined scope

85
00:03:53.010 --> 00:03:56.050
like request, session, application, etc.,

86
00:03:56.050 --> 00:03:59.020
so a Standard Action of JSP will help you navigate through

87
00:03:59.020 --> 00:04:03.090
the Java object and display the output on the JSP page.

88
00:04:03.090 --> 00:04:05.090
Then we are also taking a look at the

89
00:04:05.090 --> 00:04:08.030
request dispatcher API which allowed us

90
00:04:08.030 --> 00:04:12.060
to forward a control to another servlet or another JSP.

91
00:04:12.060 --> 00:04:15.030
We also saw the option of request dispatcher

92
00:04:15.030 --> 00:04:17.040
helping us to include,

93
00:04:17.040 --> 00:04:21.020
that's combining the response of both the resources.

94
00:04:21.020 --> 00:04:23.010
So, whatever you could do there inside

95
00:04:23.010 --> 00:04:24.090
in the servlet using request dispatcher

96
00:04:24.090 --> 00:04:27.080
you can do the same thing on on a JSP as well.

97
00:04:27.080 --> 00:04:30.060
Using JSP Standard Actions, you can actually forward

98
00:04:30.060 --> 00:04:34.020
or include a resource in the current context.

99
00:04:34.020 --> 00:04:37.060
The syntax of a JSP Standard Action looks like that.

100
00:04:37.060 --> 00:04:39.050
You have an angle bracket and then there a word

101
00:04:39.050 --> 00:04:42.000
called jsp followed by colon and then

102
00:04:42.000 --> 00:04:43.090
the actual name of the tag.

103
00:04:43.090 --> 00:04:47.040
This word, jsp, is basically called prefix,

104
00:04:47.040 --> 00:04:50.020
which is used to identify that you're picking up a tag

105
00:04:50.020 --> 00:04:52.050
from this namespace.

106
00:04:52.050 --> 00:04:55.070
All the information that you want to specify in this tag

107
00:04:55.070 --> 00:04:58.000
is always in the form of attributes.

108
00:04:58.000 --> 00:05:00.040
So, you're no more going to write lengthy code statements.

109
00:05:00.040 --> 00:05:02.070
Instead, just define attribute so that

110
00:05:02.070 --> 00:05:04.090
when the stack executes on your JSP,

111
00:05:04.090 --> 00:05:07.000
it's going to run some Java code behind the scenes

112
00:05:07.000 --> 00:05:09.070
and do the job that you have already been doing before

113
00:05:09.070 --> 00:05:13.000
with scriptlets or expressions.

114
00:05:13.000 --> 00:05:16.070
Those are the commonly used JSP Standard Actions.

115
00:05:16.070 --> 00:05:19.060
There is something called a jsp:useBean

116
00:05:19.060 --> 00:05:22.040
so it's using a bean, as the name suggests,

117
00:05:22.040 --> 00:05:26.000
and it'll help you to instantiate a bean on the JSP page

118
00:05:26.000 --> 00:05:28.080
or it will also help you to fetch a bean,

119
00:05:28.080 --> 00:05:31.050
a java object I mean, on the JSP,

120
00:05:31.050 --> 00:05:35.020
which has already been set in a predefined scope.

121
00:05:35.020 --> 00:05:38.030
The forward and include tags as you see next

122
00:05:38.030 --> 00:05:40.050
are basically used to forward the control

123
00:05:40.050 --> 00:05:42.090
to another resource or include another resource

124
00:05:42.090 --> 00:05:45.000
and the currently resource respectively.

125
00:05:45.000 --> 00:05:46.050
So, it's basically doing the the same job

126
00:05:46.050 --> 00:05:48.040
as a request dispatcher or forward.

127
00:05:48.040 --> 00:05:52.050
Request dispatcher don't include API calls in your servlet.

128
00:05:52.050 --> 00:05:56.020
Jsp:getPropery on the other hand will help you to evaluate

129
00:05:56.020 --> 00:05:59.070
the value of a JSP property from an object

130
00:05:59.070 --> 00:06:02.050
and display it for you on your JSP.

131
00:06:02.050 --> 00:06:04.090
setProperty on the other hand is going help you

132
00:06:04.090 --> 00:06:07.040
provide a value to particular Java property

133
00:06:07.040 --> 00:06:11.010
of an object directly on the JSP.

134
00:06:11.010 --> 00:06:13.080
So, we'll take a look at a demo including these few

135
00:06:13.080 --> 00:06:16.000
Standard Actions in our next video.

