WEBVTT
1
00:00:00.040 --> 00:00:02.000
- [Teacher] So let's now understand the demo

2
00:00:02.000 --> 00:00:04.000
for expression language.

3
00:00:04.000 --> 00:00:06.030
We are going to work on the same profiler JSP

4
00:00:06.030 --> 00:00:09.000
that we will use our JSP standard actions.

5
00:00:09.000 --> 00:00:10.090
And we will do now evaluate

6
00:00:10.090 --> 00:00:14.010
and display all the data using expression language.

7
00:00:14.010 --> 00:00:16.070
For that, let me make one change in view profile.

8
00:00:16.070 --> 00:00:19.090
So, we've already got the user information in here.

9
00:00:19.090 --> 00:00:22.010
So we just display that user profile.

10
00:00:22.010 --> 00:00:24.000
However, we're going to make one more table

11
00:00:24.000 --> 00:00:28.020
on this profile JSP, which is basically the weight summary.

12
00:00:28.020 --> 00:00:30.070
The weight summary for that particular logged in user

13
00:00:30.070 --> 00:00:32.020
is going to be displayed for the months of

14
00:00:32.020 --> 00:00:34.040
January, February, and March.

15
00:00:34.040 --> 00:00:36.010
So what were going to do, is we're going to first clear

16
00:00:36.010 --> 00:00:38.050
that weight summary detail.

17
00:00:38.050 --> 00:00:40.060
Now, the thing is that you could of course

18
00:00:40.060 --> 00:00:43.020
pull this entire weight information from the database

19
00:00:43.020 --> 00:00:46.050
as a part of this call itself, you can do that.

20
00:00:46.050 --> 00:00:50.000
However, I'm just trying to create the data right now

21
00:00:50.000 --> 00:00:54.030
in the form of for map, on this servlet called itself.

22
00:00:54.030 --> 00:00:55.080
You're free to pull it off from the database,

23
00:00:55.080 --> 00:00:57.070
no problem with that at all.

24
00:00:57.070 --> 00:00:59.040
So let me create a map object here.

25
00:00:59.040 --> 00:01:02.030
I'm going to create a map and it is going to store value,

26
00:01:02.030 --> 00:01:04.040
of course, in the form of key in value.

27
00:01:04.040 --> 00:01:06.060
The key will be the name of the month,

28
00:01:06.060 --> 00:01:08.040
so let me put that as a string,

29
00:01:08.040 --> 00:01:12.020
and the weight will be in the form of double.

30
00:01:12.020 --> 00:01:16.040
Alright, let me give this map a name and say new hashmap.

31
00:01:16.040 --> 00:01:19.080
So this is a Java collection object that I'm using

32
00:01:19.080 --> 00:01:22.090
and on line number 31, we're going to fill up values in the map

33
00:01:22.090 --> 00:01:25.060
so I'm going to say weight summary dot put.

34
00:01:25.060 --> 00:01:28.070
Let's put the data for the month of January

35
00:01:28.070 --> 00:01:32.090
and the value should be 67.9, let's say.

36
00:01:32.090 --> 00:01:35.050
(typing)

37
00:01:35.050 --> 00:01:37.090
And then I'm again going to put in the weight for

38
00:01:37.090 --> 00:01:43.090
the month of February so they key will be February

39
00:01:43.090 --> 00:01:46.080
and the value, let's say the logged in user

40
00:01:46.080 --> 00:01:52.020
tried to reduce the weight so let's say 65.9, maybe.

41
00:01:52.020 --> 00:01:55.070
And we will copy this line 32 and again paste it on line 33

42
00:01:55.070 --> 00:01:57.090
to accommodate the weight of March.

43
00:01:57.090 --> 00:02:06.000
So, that is going to be, let's say, 64.8, let's say, okay?

44
00:02:06.000 --> 00:02:08.000
Now, I'm going to go ahead and do one more thing.

45
00:02:08.000 --> 00:02:09.070
I'm going to take this weight summary

46
00:02:09.070 --> 00:02:12.060
and store it in the request as an attribute.

47
00:02:12.060 --> 00:02:14.050
So let's go to line number 37

48
00:02:14.050 --> 00:02:16.030
and the way we have stored the user object,

49
00:02:16.030 --> 00:02:18.090
we'll store the wight summary map as well.

50
00:02:18.090 --> 00:02:22.020
So let's say it's set attribute, give it a name,

51
00:02:22.020 --> 00:02:23.090
let's say weight summary,

52
00:02:23.090 --> 00:02:28.040
and the actual object will be the value for this attribute.

53
00:02:28.040 --> 00:02:29.060
There we go.

54
00:02:29.060 --> 00:02:32.080
So now, let's go ahead and come to profiler JSP,

55
00:02:32.080 --> 00:02:35.020
and we're going to access all the information now

56
00:02:35.020 --> 00:02:38.010
with the expression language, right?

57
00:02:38.010 --> 00:02:39.070
So for that, I need to eliminate this

58
00:02:39.070 --> 00:02:42.050
because I do not need this anymore, line number 36

59
00:02:42.050 --> 00:02:44.060
where I used the JSP standard action.

60
00:02:44.060 --> 00:02:46.020
I don't need this with expression language,

61
00:02:46.020 --> 00:02:48.020
so I'm going to get that off.

62
00:02:48.020 --> 00:02:51.010
Now, let's come down there and this is the table

63
00:02:51.010 --> 00:02:53.010
that displays the profile information

64
00:02:53.010 --> 00:02:56.060
which is the username field at line number 43.

65
00:02:56.060 --> 00:02:59.060
For that, I have to evaluate an expression and display data.

66
00:02:59.060 --> 00:03:01.070
Let me get rid of the JPS standard action,

67
00:03:01.070 --> 00:03:03.000
because instead of that,

68
00:03:03.000 --> 00:03:05.040
I'm going to use expression language.

69
00:03:05.040 --> 00:03:06.090
So how does your expression look like?

70
00:03:06.090 --> 00:03:08.050
There's a dollar sign, of course,

71
00:03:08.050 --> 00:03:11.070
and there's a curly pair of braces, right?

72
00:03:11.070 --> 00:03:14.060
And under this, I'm going to write my expression.

73
00:03:14.060 --> 00:03:19.000
So now I can say user dot username.

74
00:03:19.000 --> 00:03:20.030
Where did this come from?

75
00:03:20.030 --> 00:03:23.070
User is basically the key of the object

76
00:03:23.070 --> 00:03:26.090
that you've stored in the request scope, right?

77
00:03:26.090 --> 00:03:29.020
If you look at view profile server, that was your key

78
00:03:29.020 --> 00:03:30.060
on line number 36.

79
00:03:30.060 --> 00:03:32.080
So I'm using that key and I'm accessing

80
00:03:32.080 --> 00:03:35.070
the instance variable of that bean.

81
00:03:35.070 --> 00:03:36.090
What do I mean by that?

82
00:03:36.090 --> 00:03:40.040
That is your user bean after you created an object, right?

83
00:03:40.040 --> 00:03:42.030
So I'm just picking up the instance variable name

84
00:03:42.030 --> 00:03:45.030
and directly entering that as part of that expression.

85
00:03:45.030 --> 00:03:46.080
That's all that you have to do.

86
00:03:46.080 --> 00:03:49.000
That is all that you have to write as an expression

87
00:03:49.000 --> 00:03:52.000
in order to print this username to the JSP page.

88
00:03:52.000 --> 00:03:54.030
So let's do a similar thing for all the other fields.

89
00:03:54.030 --> 00:03:57.090
I'm going to take this from line number 44, copy,

90
00:03:57.090 --> 00:04:02.000
and paste it on line number 48, okay?

91
00:04:02.000 --> 00:04:07.030
And let's change this property to first name, that's all.

92
00:04:07.030 --> 00:04:09.090
Right? Again, let's take the expression and paste it

93
00:04:09.090 --> 00:04:13.020
on line number 52 and I'm going to change the name

94
00:04:13.020 --> 00:04:14.010
of the property.

95
00:04:14.010 --> 00:04:16.080
This time I want to evaluate and print last name.

96
00:04:16.080 --> 00:04:20.010
Similarly, the thing will go with it to line number 56.

97
00:04:20.010 --> 00:04:22.050
I'm going to paste that expression

98
00:04:22.050 --> 00:04:25.060
and access the age property.

99
00:04:25.060 --> 00:04:27.000
And on line number 60,

100
00:04:27.000 --> 00:04:28.090
let me again paste that expression first,

101
00:04:28.090 --> 00:04:33.050
and change this to the activity property.

102
00:04:33.050 --> 00:04:36.010
So do you see how simple it is to write expressions

103
00:04:36.010 --> 00:04:38.070
and evaluate and display your data?

104
00:04:38.070 --> 00:04:40.010
Now you must be wondering

105
00:04:40.010 --> 00:04:42.070
how did it understand that, it has to pick up

106
00:04:42.070 --> 00:04:45.050
this user object from the request scope.

107
00:04:45.050 --> 00:04:48.090
Because when we specified the JSP standard actions mechanism

108
00:04:48.090 --> 00:04:51.040
we are explicitly mention that you're supposed to

109
00:04:51.040 --> 00:04:53.060
pick up this object from the request scope.

110
00:04:53.060 --> 00:04:55.050
However, here, in expression language,

111
00:04:55.050 --> 00:04:56.080
you don't have to do that.

112
00:04:56.080 --> 00:04:58.060
Because expression language is smart enough.

113
00:04:58.060 --> 00:05:03.010
What it does, is, if you have not mentioned any scope here

114
00:05:03.010 --> 00:05:05.070
in your expression itself, then it is going to search

115
00:05:05.070 --> 00:05:09.020
this object by they key user, by the name user,

116
00:05:09.020 --> 00:05:11.030
in those four scopes.

117
00:05:11.030 --> 00:05:14.000
The page scope, the request, the session,

118
00:05:14.000 --> 00:05:16.060
and then the application, in that order.

119
00:05:16.060 --> 00:05:18.050
So wherever it finds out that object,

120
00:05:18.050 --> 00:05:20.040
it's automatically going to pick it up for you

121
00:05:20.040 --> 00:05:23.050
and you can use it for displaying your data.

122
00:05:23.050 --> 00:05:26.040
So that way, expression language is smarter, okay?

123
00:05:26.040 --> 00:05:27.060
Let's also do one more thing,

124
00:05:27.060 --> 00:05:29.040
let's display the weight summary.

125
00:05:29.040 --> 00:05:31.040
So, I already have that map that I have

126
00:05:31.040 --> 00:05:33.020
prepared in the view profile servlet

127
00:05:33.020 --> 00:05:35.020
and I've stored it under the request scope.

128
00:05:35.020 --> 00:05:39.010
So now let's just go ahead and display those values.

129
00:05:39.010 --> 00:05:44.020
So there's a table here from lines number 67 to 82,

130
00:05:44.020 --> 00:05:45.060
which is displaying the weight summary.

131
00:05:45.060 --> 00:05:48.010
So I've already got the labels ready for the January month,

132
00:05:48.010 --> 00:05:50.050
I just have to go ahead and display the weight.

133
00:05:50.050 --> 00:05:53.030
So how am I going to access that map

134
00:05:53.030 --> 00:05:55.030
using expression language?

135
00:05:55.030 --> 00:05:56.040
Let's see that.

136
00:05:56.040 --> 00:05:58.090
So let's first enter the syntax for expression language,

137
00:05:58.090 --> 00:06:00.010
like that...

138
00:06:00.010 --> 00:06:02.040
And this time I'm going to do it a little differently.

139
00:06:02.040 --> 00:06:06.050
I'm going to say request scope dot...

140
00:06:06.050 --> 00:06:08.020
What is the key of that map?

141
00:06:08.020 --> 00:06:10.070
Let's pick it up from the view profile servlet,

142
00:06:10.070 --> 00:06:15.060
line number 37, let's pick it up and put it there, right?

143
00:06:15.060 --> 00:06:21.040
And now if I want to access the value of the key January,

144
00:06:21.040 --> 00:06:24.030
I just have to enter this pair of square brackets

145
00:06:24.030 --> 00:06:28.090
and mention the month name in quotes.

146
00:06:28.090 --> 00:06:31.010
So what the syntax is effectively doing is,

147
00:06:31.010 --> 00:06:33.040
it is picking up the weight summary object

148
00:06:33.040 --> 00:06:35.000
from the request scope

149
00:06:35.000 --> 00:06:38.010
and it is accessing the key of that map, January.

150
00:06:38.010 --> 00:06:41.010
So when I access the key, it is going to bring the value

151
00:06:41.010 --> 00:06:44.020
under this column for me on the page.

152
00:06:44.020 --> 00:06:46.060
Right? Let's take this line number 71,

153
00:06:46.060 --> 00:06:49.000
let's take this expression, copy, and paste it

154
00:06:49.000 --> 00:06:51.030
for the month of February and March.

155
00:06:51.030 --> 00:06:53.090
Now, the only thing that we have to change is,

156
00:06:53.090 --> 00:06:58.030
on line number 75, I just have to say February,

157
00:06:58.030 --> 00:07:03.020
and here, I have to say March, that's all.

158
00:07:03.020 --> 00:07:05.020
You must also be wondering as to

159
00:07:05.020 --> 00:07:08.070
where is this request scope name coming from?

160
00:07:08.070 --> 00:07:10.050
How did I write request scope?

161
00:07:10.050 --> 00:07:13.070
That is because, if you look at a JSP implicit objects,

162
00:07:13.070 --> 00:07:16.030
we have request as the implicit object for the request.

163
00:07:16.030 --> 00:07:17.020
Right?

164
00:07:17.020 --> 00:07:19.050
But in expression language, the implicit object,

165
00:07:19.050 --> 00:07:23.000
which can help you access the data of the request object,

166
00:07:23.000 --> 00:07:25.010
the name for it is request scope.

167
00:07:25.010 --> 00:07:27.030
We are anyway going to talk about the EL implicit objects

168
00:07:27.030 --> 00:07:29.060
quickly in a brief--in the next video,

169
00:07:29.060 --> 00:07:30.090
but this is just to introduce you

170
00:07:30.090 --> 00:07:33.000
so that there's no confusion around here.

171
00:07:33.000 --> 00:07:35.020
This is trying to access the request scope

172
00:07:35.020 --> 00:07:37.040
and trying to get this weight summary map

173
00:07:37.040 --> 00:07:41.030
out of which I'm accessing the value for the key January.

174
00:07:41.030 --> 00:07:42.050
That is what this means.

175
00:07:42.050 --> 00:07:43.050
So let's now do one thing,

176
00:07:43.050 --> 00:07:45.060
let's go ahead and deploy these changes

177
00:07:45.060 --> 00:07:49.060
and check out on the browser.

178
00:07:49.060 --> 00:07:51.020
So let me log in.

179
00:07:51.020 --> 00:07:55.030
(typing)

180
00:07:55.030 --> 00:07:57.090
And let me click on view my profile, and do you see

181
00:07:57.090 --> 00:08:00.070
that it is displaying all of that information now

182
00:08:00.070 --> 00:08:02.070
using expression language.

183
00:08:02.070 --> 00:08:04.010
We're going to do one more thing.

184
00:08:04.010 --> 00:08:09.060
Let's say that this 67.9kg, 65.9kg, 64.8kg

185
00:08:09.060 --> 00:08:11.060
or let's say if it were pounds.

186
00:08:11.060 --> 00:08:14.020
So what you could do is, if you wanted to display that data

187
00:08:14.020 --> 00:08:17.060
in either of the units, let's say it is in kg right now

188
00:08:17.060 --> 00:08:19.010
and you want to display it in pounds,

189
00:08:19.010 --> 00:08:20.090
you can quickly go ahead and just

190
00:08:20.090 --> 00:08:23.080
evaluate and edit the operation using expression language

191
00:08:23.080 --> 00:08:25.040
on the page and get this done.

192
00:08:25.040 --> 00:08:27.090
So let's say I'm going to go ahead and say

193
00:08:27.090 --> 00:08:32.030
on the page of profiler JSP,

194
00:08:32.030 --> 00:08:34.060
let's come here and...

195
00:08:34.060 --> 00:08:37.030
This is that expression, which is giving me the weight,

196
00:08:37.030 --> 00:08:39.060
so I could easily say divide by two,

197
00:08:39.060 --> 00:08:42.010
or I could say multiply by two, whichever unit that

198
00:08:42.010 --> 00:08:45.090
you may want to display the information in, right?

199
00:08:45.090 --> 00:08:47.060
So either of the operatives will work

200
00:08:47.060 --> 00:08:50.000
and basically this is an arithmetical expression

201
00:08:50.000 --> 00:08:51.010
that I am trying to write.

202
00:08:51.010 --> 00:08:53.000
So I can do the same thing, let's say here I want to say

203
00:08:53.000 --> 00:08:54.070
divide by two, right?

204
00:08:54.070 --> 00:08:55.070
So that also could be done.

205
00:08:55.070 --> 00:08:58.010
So let me just go ahead and check the changes.

206
00:08:58.010 --> 00:09:00.020
So this is a change only to the JSP,

207
00:09:00.020 --> 00:09:02.030
so if I just refresh this page,

208
00:09:02.030 --> 00:09:04.060
the changes are going to take effect.

209
00:09:04.060 --> 00:09:06.040
This is the case with JSP alone.

210
00:09:06.040 --> 00:09:08.010
If you just change something in a JSP

211
00:09:08.010 --> 00:09:10.060
and you refresh a browser, the changes take effect.

212
00:09:10.060 --> 00:09:13.050
However, if you change in the servlet Java files,

213
00:09:13.050 --> 00:09:15.030
then you will have to do a redeployment

214
00:09:15.030 --> 00:09:16.080
and a restart of the server.

215
00:09:16.080 --> 00:09:20.070
If you change your XML files, you just need a restart.

216
00:09:20.070 --> 00:09:22.060
Right? So let's refresh this page.

217
00:09:22.060 --> 00:09:25.010
And do you see? I get the changed values now.

218
00:09:25.010 --> 00:09:26.070
So according whichever unit

219
00:09:26.070 --> 00:09:28.030
I want to display the information,

220
00:09:28.030 --> 00:09:31.040
you can go ahead and simply evaluate

221
00:09:31.040 --> 00:09:33.050
those expressions using operators.

222
00:09:33.050 --> 00:09:35.050
This is what expression language can do for you.

223
00:09:35.050 --> 00:09:38.030
There's no need to store these values separately

224
00:09:38.030 --> 00:09:40.060
from the server side and then get it to the page.

225
00:09:40.060 --> 00:09:43.070
You can just quickly, on the fly, do these operations here

226
00:09:43.070 --> 00:09:45.030
with all the operators that we have.

227
00:09:45.030 --> 00:09:48.020
Arithmetic, relational, and logical.

228
00:09:48.020 --> 00:09:51.000
So this is overall how do you use expression language

229
00:09:51.000 --> 00:09:52.000
on a page.

