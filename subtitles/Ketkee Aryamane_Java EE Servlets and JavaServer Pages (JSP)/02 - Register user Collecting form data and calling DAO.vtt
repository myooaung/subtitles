WEBVTT
1
00:00:00.050 --> 00:00:02.050
- [Woman] Now let us take a look at the use case

2
00:00:02.050 --> 00:00:05.050
that we are going to implement as part of the post request.

3
00:00:05.050 --> 00:00:07.040
This is my application when I click on

4
00:00:07.040 --> 00:00:08.090
the new user hyperlink.

5
00:00:08.090 --> 00:00:11.090
There's a registry user form that opens up.

6
00:00:11.090 --> 00:00:13.070
So the user could fill out the fields

7
00:00:13.070 --> 00:00:16.040
of username, password, first name, last name, age

8
00:00:16.040 --> 00:00:18.030
and an activity.

9
00:00:18.030 --> 00:00:20.000
And then when the user submits this form,

10
00:00:20.000 --> 00:00:22.080
they going to submit it using the POST request.

11
00:00:22.080 --> 00:00:24.080
Once the request is submitted,

12
00:00:24.080 --> 00:00:28.080
we are just going to save this entire record to the database

13
00:00:28.080 --> 00:00:31.030
Right, so let's get started with this.

14
00:00:31.030 --> 00:00:33.050
The steps will be, we will stick with the approach.

15
00:00:33.050 --> 00:00:35.090
We use the action on the jsp html,

16
00:00:35.090 --> 00:00:38.000
from there we go to a servlet,

17
00:00:38.000 --> 00:00:39.060
from the servlet we call the dao,

18
00:00:39.060 --> 00:00:41.080
and the dao is going to talk to the database.

19
00:00:41.080 --> 00:00:44.020
So the dao is going to help us insert that record

20
00:00:44.020 --> 00:00:47.000
into one of the tables of our schemer.

21
00:00:47.000 --> 00:00:48.040
Let's take a look at

22
00:00:48.040 --> 00:00:50.090
our application.

23
00:00:50.090 --> 00:00:53.090
This is that registered html page,

24
00:00:53.090 --> 00:00:56.060
and all the fields that you saw as a part of the form

25
00:00:56.060 --> 00:00:58.080
are in compassion to this form element.

26
00:00:58.080 --> 00:01:01.050
So you have the username, password, first name, last name,

27
00:01:01.050 --> 00:01:04.030
age, and the activity that you choose.

28
00:01:04.030 --> 00:01:07.050
Each of these elements have the name property

29
00:01:07.050 --> 00:01:08.080
that has been given.

30
00:01:08.080 --> 00:01:10.060
And these are the names that we want to use

31
00:01:10.060 --> 00:01:14.090
in order to fetch the values inside our servlet cord.

32
00:01:14.090 --> 00:01:15.080
Right.

33
00:01:15.080 --> 00:01:17.020
Once we fill out all the fields

34
00:01:17.020 --> 00:01:20.060
we going to submit this form by other POST request.

35
00:01:20.060 --> 00:01:23.060
So let's go ahead and see the steps.

36
00:01:23.060 --> 00:01:26.030
The first one is write the register user servlet class

37
00:01:26.030 --> 00:01:28.010
with the doPost method,

38
00:01:28.010 --> 00:01:30.070
and inside that we going to collect all the form data,

39
00:01:30.070 --> 00:01:32.040
and pass it to the dao layer.

40
00:01:32.040 --> 00:01:34.030
So let's go to eclipse.

41
00:01:34.030 --> 00:01:36.060
The registered user servlet is ready with me

42
00:01:36.060 --> 00:01:38.000
in the form of a template.

43
00:01:38.000 --> 00:01:40.020
I've extended the http servlet class

44
00:01:40.020 --> 00:01:42.030
and I've also provided a url pattern

45
00:01:42.030 --> 00:01:44.090
while the addition of configuration.

46
00:01:44.090 --> 00:01:47.040
Now let's come here and collect all the form data.

47
00:01:47.040 --> 00:01:48.030
So I'm going to say

48
00:01:48.030 --> 00:01:51.080
string username equal to on the request object

49
00:01:51.080 --> 00:01:55.000
You can just go on and call the getParameter API

50
00:01:55.000 --> 00:01:59.010
and feed the name of the element to get the respective value

51
00:01:59.010 --> 00:02:01.040
The same thing I can do for the password.

52
00:02:01.040 --> 00:02:03.090
So I just have to change these names.

53
00:02:03.090 --> 00:02:05.030
So I copy line number 18

54
00:02:05.030 --> 00:02:07.030
and pasted it on line number 19

55
00:02:07.030 --> 00:02:10.030
and I'm just going to change the names of the fields now.

56
00:02:10.030 --> 00:02:13.090
Again, I copy the same line on

57
00:02:13.090 --> 00:02:14.080
Line number 20.

58
00:02:14.080 --> 00:02:18.010
So let me get this.

59
00:02:18.010 --> 00:02:21.020
And this one will be for the first name.

60
00:02:21.020 --> 00:02:26.060
So the name of the element for first name is F name.

61
00:02:26.060 --> 00:02:28.000
Again, we do it for the last name.

62
00:02:28.000 --> 00:02:30.010
Pasted my line on line number 21

63
00:02:30.010 --> 00:02:33.020
and let me rename this as the last name.

64
00:02:33.020 --> 00:02:37.050
The name field for last name is L name.

65
00:02:37.050 --> 00:02:40.070
I do the same thing for activity.

66
00:02:40.070 --> 00:02:43.020
Let me change this name

67
00:02:43.020 --> 00:02:47.090
and the field name for activity is activity itself.

68
00:02:47.090 --> 00:02:49.020
Lastly for the age,

69
00:02:49.020 --> 00:02:50.070
Age is an integer field

70
00:02:50.070 --> 00:02:51.080
So what we're going to do is

71
00:02:51.080 --> 00:02:53.060
we going to take an integer variable

72
00:02:53.060 --> 00:02:57.020
and I'm going to use the integer rapid class called java

73
00:02:57.020 --> 00:03:00.070
to come word the incoming value of age into value.

74
00:03:00.070 --> 00:03:02.050
So what I'll do is I will say

75
00:03:02.050 --> 00:03:04.070
Integer which is a rapper

76
00:03:04.070 --> 00:03:06.010
dot parseInt

77
00:03:06.010 --> 00:03:08.020
I'm going to invoke the parseInt API

78
00:03:08.020 --> 00:03:09.030
and to do this API

79
00:03:09.030 --> 00:03:11.000
I'm going to pass that string value that

80
00:03:11.000 --> 00:03:13.070
is coming out of that request parameter.

81
00:03:13.070 --> 00:03:17.080
Which is this.

82
00:03:17.080 --> 00:03:20.060
Right, so this is how we've collected all the data

83
00:03:20.060 --> 00:03:23.090
inside our servlet.

84
00:03:23.090 --> 00:03:25.020
Now as I said,

85
00:03:25.020 --> 00:03:27.020
we going to stick to the object integer design.

86
00:03:27.020 --> 00:03:28.000
So I'm going to fill up all this information

87
00:03:28.000 --> 00:03:31.000
into a user bean.

88
00:03:31.000 --> 00:03:32.090
I've already cleared that user bean in my project.

89
00:03:32.090 --> 00:03:33.090
This is what it looks like.

90
00:03:33.090 --> 00:03:35.050
A very simple java bean.

91
00:03:35.050 --> 00:03:36.050
Which is called

92
00:03:36.050 --> 00:03:38.090
password, username, first name, last name, age

93
00:03:38.090 --> 00:03:40.040
and activity fields

94
00:03:40.040 --> 00:03:43.050
along with all the getters and setters

95
00:03:43.050 --> 00:03:46.040
and you also may opt to write out any constructor

96
00:03:46.040 --> 00:03:49.060
that you feel that you want to use for your future purposes

97
00:03:49.060 --> 00:03:50.090
So this bean is ready with me.

98
00:03:50.090 --> 00:03:53.010
Let me go to the registered user servlet

99
00:03:53.010 --> 00:03:56.000
and fill up all of this information into that user bean

100
00:03:56.000 --> 00:04:00.050
So I'm going to create an instance of that.

101
00:04:00.050 --> 00:04:02.020
Saying new user

102
00:04:02.020 --> 00:04:05.080
and use the parameter constructor to quickly fill up

103
00:04:05.080 --> 00:04:09.040
all the information in one single shot.

104
00:04:09.040 --> 00:04:11.020
Right, so we've collected all the form data

105
00:04:11.020 --> 00:04:13.020
and we filled it up in the user object.

106
00:04:13.020 --> 00:04:15.060
Now let's call the dao from here as well.

107
00:04:15.060 --> 00:04:23.080
So I'm going to create an instance of the application dao.

108
00:04:23.080 --> 00:04:24.060
Right.

109
00:04:24.060 --> 00:04:25.070
We are ready with it.

110
00:04:25.070 --> 00:04:28.010
So we now need to write a method in the application dao

111
00:04:28.010 --> 00:04:29.060
to insert user the data.

112
00:04:29.060 --> 00:04:31.000
We'll look at that in the next video.

