WEBVTT
1
00:00:00.050 --> 00:00:04.000
- Now let us introduce ourselves to JavaServer Pages,

2
00:00:04.000 --> 00:00:05.050
which is the JSP, which is of course

3
00:00:05.050 --> 00:00:08.030
the second bit of our course.

4
00:00:08.030 --> 00:00:10.040
But the first thing to understand is

5
00:00:10.040 --> 00:00:14.000
why do you need a JSP when you already have an HTML?

6
00:00:14.000 --> 00:00:15.020
So let's understand the problems

7
00:00:15.020 --> 00:00:17.080
that we have with HTML pages.

8
00:00:17.080 --> 00:00:19.080
The first of the things is it allows you

9
00:00:19.080 --> 00:00:22.030
to render static data alone.

10
00:00:22.030 --> 00:00:23.070
There is no option to write out

11
00:00:23.070 --> 00:00:26.090
any kind of dynamic data on an HTML page.

12
00:00:26.090 --> 00:00:29.070
If you remember in our search use case of our application,

13
00:00:29.070 --> 00:00:31.060
in order to resolve this issue,

14
00:00:31.060 --> 00:00:33.060
we had proposed a workaround solution

15
00:00:33.060 --> 00:00:36.070
where we read an entire HTML template as a string,

16
00:00:36.070 --> 00:00:39.070
manipulated that string to replace certain portions,

17
00:00:39.070 --> 00:00:42.090
and then wrote that entire string back to the client.

18
00:00:42.090 --> 00:00:45.000
Nobody will do this in the industry projects today.

19
00:00:45.000 --> 00:00:46.060
Everybody uses a JSP.

20
00:00:46.060 --> 00:00:48.050
That was just a workaround in order to solve

21
00:00:48.050 --> 00:00:50.070
that problem at that point in time.

22
00:00:50.070 --> 00:00:53.070
That's because if you start doing an I/O operation

23
00:00:53.070 --> 00:00:56.040
to read and write HTML templates back and forth,

24
00:00:56.040 --> 00:00:58.040
it's going to be a time-consuming process,

25
00:00:58.040 --> 00:01:01.040
and it'll pull down the performance of your application.

26
00:01:01.040 --> 00:01:03.040
Another thing that is to do with JSPs,

27
00:01:03.040 --> 00:01:06.010
let's say you don't have a JSP and you have an HTML,

28
00:01:06.010 --> 00:01:09.040
you could stuff all your HTML with the CSS code

29
00:01:09.040 --> 00:01:13.070
directly inside a servlet and write it back to the client.

30
00:01:13.070 --> 00:01:16.070
But even if you do that, it's going to be a painful process.

31
00:01:16.070 --> 00:01:19.050
Specially if your HTML file is very huge.

32
00:01:19.050 --> 00:01:22.050
Writing and stuffing all the code inside a servlet

33
00:01:22.050 --> 00:01:25.060
is really going to be a painful process.

34
00:01:25.060 --> 00:01:28.000
Moreover, in some organizations that are

35
00:01:28.000 --> 00:01:30.040
specialized UI developers dedicated to

36
00:01:30.040 --> 00:01:33.040
only HTML and CSS development.

37
00:01:33.040 --> 00:01:36.070
So, asking them to stuff all that code inside a servlet

38
00:01:36.070 --> 00:01:38.070
is really not going to be appropriate,

39
00:01:38.070 --> 00:01:42.010
because they may not be equipped with core Java API

40
00:01:42.010 --> 00:01:45.000
let alone the servlet's code.

41
00:01:45.000 --> 00:01:48.000
So these problems that we face with HTML pages

42
00:01:48.000 --> 00:01:51.000
is going to definitely lead us to find out a solution,

43
00:01:51.000 --> 00:01:54.030
which will help us generate dynamic content.

44
00:01:54.030 --> 00:01:58.020
And that's exactly where you have the concept of a JSP.

45
00:01:58.020 --> 00:02:01.020
JSP allows you to create dynamic content.

46
00:02:01.020 --> 00:02:02.090
What is dynamic content?

47
00:02:02.090 --> 00:02:04.060
Let's take a look at this website.

48
00:02:04.060 --> 00:02:07.020
This is LinkedIn, and it shows you three sections.

49
00:02:07.020 --> 00:02:08.050
There's a newsfeed that probably

50
00:02:08.050 --> 00:02:10.080
gets updated an hourly basis,

51
00:02:10.080 --> 00:02:12.030
and there's a left page showing me

52
00:02:12.030 --> 00:02:14.040
my network connections, et cetera,

53
00:02:14.040 --> 00:02:16.060
and the right side I also have advertisements,

54
00:02:16.060 --> 00:02:17.080
which are completely customized

55
00:02:17.080 --> 00:02:20.050
according to the kind of user I am.

56
00:02:20.050 --> 00:02:22.020
That is dynamic content.

57
00:02:22.020 --> 00:02:24.030
Everything that happens on this application

58
00:02:24.030 --> 00:02:27.080
is a customized response with the respect to the user

59
00:02:27.080 --> 00:02:30.020
that is accessing this application.

60
00:02:30.020 --> 00:02:32.030
Let's take another example.

61
00:02:32.030 --> 00:02:34.000
Times of India, do you see the date?

62
00:02:34.000 --> 00:02:36.040
That's the date for 17th October,

63
00:02:36.040 --> 00:02:38.070
then there are top news stories flashing across the globe.

64
00:02:38.070 --> 00:02:40.070
This gets updated every now and then.

65
00:02:40.070 --> 00:02:42.060
There are advertisements and there are other sections

66
00:02:42.060 --> 00:02:44.080
on the page, which are customized completely

67
00:02:44.080 --> 00:02:48.030
according to the user looking at this website.

68
00:02:48.030 --> 00:02:52.030
Dynamic content is a must in web applications.

69
00:02:52.030 --> 00:02:54.010
You cannot build any application today

70
00:02:54.010 --> 00:02:56.030
which does not help you generate dynamic content.

71
00:02:56.030 --> 00:03:00.090
And that's exactly why we are going to use JavaServer Pages.

72
00:03:00.090 --> 00:03:05.010
So let us look at the features of a JSP.

73
00:03:05.010 --> 00:03:07.000
Let's say this is your page.

74
00:03:07.000 --> 00:03:08.090
And this is called some static code,

75
00:03:08.090 --> 00:03:11.080
which is in the form of HTML elements.

76
00:03:11.080 --> 00:03:14.030
Of course it will have HTML elements like input boxes,

77
00:03:14.030 --> 00:03:19.000
hyperlinks, images, radio boxes, checkboxes, et cetera.

78
00:03:19.000 --> 00:03:21.060
And to the static code, we're going to bind

79
00:03:21.060 --> 00:03:23.040
the dynamic data that's coming out

80
00:03:23.040 --> 00:03:27.040
from your server-side objects through the app server.

81
00:03:27.040 --> 00:03:29.030
This essentially means that a JSP

82
00:03:29.030 --> 00:03:34.000
will allow you to write both HTML plus Java code.

83
00:03:34.000 --> 00:03:38.080
And that's exactly how you can make your page dynamic.

84
00:03:38.080 --> 00:03:42.050
JSPs have a file extension of .jsp

85
00:03:42.050 --> 00:03:44.090
and they get executed at the server side

86
00:03:44.090 --> 00:03:48.010
and then are rendered to the client.

87
00:03:48.010 --> 00:03:51.020
JSP can work with a scripting language.

88
00:03:51.020 --> 00:03:53.010
As for this course, we're going to restrict ourselves

89
00:03:53.010 --> 00:03:55.010
to the Java scripting language.

90
00:03:55.010 --> 00:03:58.040
However, you can also choose JavaScript as a language

91
00:03:58.040 --> 00:04:01.030
on your JSP and code with it.

92
00:04:01.030 --> 00:04:04.070
JSPs come equipped with a lot of interesting features,

93
00:04:04.070 --> 00:04:09.000
like Expression Language and JavaServer Page's Tag Library.

94
00:04:09.000 --> 00:04:11.050
Expression Language is a very simplified syntax

95
00:04:11.050 --> 00:04:14.090
of navigating through your entire graph of Java objects

96
00:04:14.090 --> 00:04:19.080
of server side, with a very easy-to-go syntax on the JSP.

97
00:04:19.080 --> 00:04:21.080
Not only does it navigate your objects,

98
00:04:21.080 --> 00:04:24.070
but it also helps you to do a lot of computations,

99
00:04:24.070 --> 00:04:27.040
comparisons between operands, et cetera.

100
00:04:27.040 --> 00:04:30.020
JavaServer Pages Tag Library on the other hand

101
00:04:30.020 --> 00:04:34.010
is a huge bundle of many tags, which you can directly

102
00:04:34.010 --> 00:04:37.030
embed on your JSP and when your JSP gets executed,

103
00:04:37.030 --> 00:04:42.030
that tag is going to run some Java code behind the scenes.

104
00:04:42.030 --> 00:04:44.090
This is a very useful utility because instead of writing

105
00:04:44.090 --> 00:04:47.020
lengthy code statements on your JSP page,

106
00:04:47.020 --> 00:04:48.090
you can just embed a tag there,

107
00:04:48.090 --> 00:04:50.090
and it'll do the rest of the job for you.

108
00:04:50.090 --> 00:04:53.040
In the next video, we look at the basic JSP elements

109
00:04:53.040 --> 00:04:57.000
to work with, so that we get started on JSP.

