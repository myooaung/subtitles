WEBVTT
1
00:00:00.040 --> 00:00:02.010
- [Instructor] So, let's pick up from where we left off.

2
00:00:02.010 --> 00:00:03.060
We were about to run this project,

3
00:00:03.060 --> 00:00:05.010
but before that a small point.

4
00:00:05.010 --> 00:00:09.010
We also have to write the doGet method in the servlet.

5
00:00:09.010 --> 00:00:11.000
And this method's sole objective

6
00:00:11.000 --> 00:00:14.050
is to get us to the register.html file.

7
00:00:14.050 --> 00:00:16.040
And the strategy that we want to use

8
00:00:16.040 --> 00:00:19.020
is exactly calling the same method that we did before.

9
00:00:19.020 --> 00:00:20.070
So, what I'm going to do is,

10
00:00:20.070 --> 00:00:23.010
I'm going to say String page.

11
00:00:23.010 --> 00:00:26.090
I am going to call that getHTMLString method.

12
00:00:26.090 --> 00:00:30.030
I'm going to pass the file path

13
00:00:30.030 --> 00:00:38.000
using the servlet context.

14
00:00:38.000 --> 00:00:41.070
And the place holder for the message right now

15
00:00:41.070 --> 00:00:42.060
is nothing.

16
00:00:42.060 --> 00:00:45.040
It's going to be empty when the page loads for the first time.

17
00:00:45.040 --> 00:00:48.000
So, I'm just going to do that

18
00:00:48.000 --> 00:00:49.090
and then take the response object

19
00:00:49.090 --> 00:00:54.060
and write this entire thing back to the client.

20
00:00:54.060 --> 00:00:55.040
Right?

21
00:00:55.040 --> 00:00:56.070
We also need to do one more thing.

22
00:00:56.070 --> 00:00:58.030
The database out is ready with me

23
00:00:58.030 --> 00:01:00.050
and when we finally run these changes

24
00:01:00.050 --> 00:01:01.060
we are going to come to the database

25
00:01:01.060 --> 00:01:03.090
and see that the user indeed got inserted

26
00:01:03.090 --> 00:01:05.040
into the user's table.

27
00:01:05.040 --> 00:01:09.010
So, let's go ahead and deploy these changes now.

28
00:01:09.010 --> 00:01:11.040
And additionally, let's do a check.

29
00:01:11.040 --> 00:01:14.060
Yes, the form action is correctly entered

30
00:01:14.060 --> 00:01:16.040
on the index HTML as well,

31
00:01:16.040 --> 00:01:18.090
I'm going to enter the same action,

32
00:01:18.090 --> 00:01:20.070
but for the index HTML hyperlink

33
00:01:20.070 --> 00:01:22.030
the method is going to be doGet

34
00:01:22.030 --> 00:01:25.030
because a href always calls the doGet method.

35
00:01:25.030 --> 00:01:26.050
So, when you click on a hyperlink

36
00:01:26.050 --> 00:01:28.070
just remember in an email application

37
00:01:28.070 --> 00:01:30.010
if the click on a hyperlink

38
00:01:30.010 --> 00:01:31.050
is supposed to go to the server side,

39
00:01:31.050 --> 00:01:33.000
it's always a doGet call.

40
00:01:33.000 --> 00:01:35.040
So, that's how it is going to reach this doGet

41
00:01:35.040 --> 00:01:37.080
from where we're going to go to register HTML

42
00:01:37.080 --> 00:01:40.010
and once we submit the form on registration HTML

43
00:01:40.010 --> 00:01:42.030
we are going to come to this doPost.

44
00:01:42.030 --> 00:01:43.030
So, now let's go ahead and

45
00:01:43.030 --> 00:01:44.070
run this application in the browser

46
00:01:44.070 --> 00:01:45.080
and check the changes.

47
00:01:45.080 --> 00:01:48.010
So, say Run As Run on Server.

48
00:01:48.010 --> 00:01:49.060
Take this URL,

49
00:01:49.060 --> 00:01:52.020
go to the browser, paste it,

50
00:01:52.020 --> 00:01:53.070
access the home,

51
00:01:53.070 --> 00:01:55.070
and click on the new user hyperlink.

52
00:01:55.070 --> 00:01:57.060
So, that's the register user form.

53
00:01:57.060 --> 00:02:00.010
So, let's enter some information here

54
00:02:00.010 --> 00:02:02.040
and let's say I want to Hit the Gym.

55
00:02:02.040 --> 00:02:04.040
So, let's click on the submit button.

56
00:02:04.040 --> 00:02:06.020
Yes, the message is out there.

57
00:02:06.020 --> 00:02:07.090
The user has been registered successfully.

58
00:02:07.090 --> 00:02:10.010
Let's quickly go to the database

59
00:02:10.010 --> 00:02:13.060
and query the user's table and that's where you are.

60
00:02:13.060 --> 00:02:15.080
You have all your information stowed as a record

61
00:02:15.080 --> 00:02:17.030
inside the database table.

62
00:02:17.030 --> 00:02:20.010
So, this is how a post-request works.

63
00:02:20.010 --> 00:02:21.010
Now, we just summarize.

64
00:02:21.010 --> 00:02:22.020
We have seen the Get request

65
00:02:22.020 --> 00:02:23.090
and we have seen the Post request

66
00:02:23.090 --> 00:02:26.070
and a common question that may float in the mind is,

67
00:02:26.070 --> 00:02:29.060
what happens exactly behind the scenes?

68
00:02:29.060 --> 00:02:32.010
So, this is your context root URL, as we know.

69
00:02:32.010 --> 00:02:35.070
If we hit the URL pattern for a servlet through the URL

70
00:02:35.070 --> 00:02:37.030
it's a Get request.

71
00:02:37.030 --> 00:02:39.070
If we go through the form element,

72
00:02:39.070 --> 00:02:42.020
then it could either be a Get or a Post,

73
00:02:42.020 --> 00:02:45.020
depending on what kind of attribute

74
00:02:45.020 --> 00:02:46.080
you attached to this method.

75
00:02:46.080 --> 00:02:47.080
We know this.

76
00:02:47.080 --> 00:02:49.050
Now, let's quickly understand briefly

77
00:02:49.050 --> 00:02:52.070
how this entire thing happens behind the scene.

78
00:02:52.070 --> 00:02:54.030
What the server container does is

79
00:02:54.030 --> 00:02:56.020
it takes your URL, let's say,

80
00:02:56.020 --> 00:02:59.040
you're accessing a URL pattern of getServlet.

81
00:02:59.040 --> 00:03:01.000
Let's say you're hitting this request.

82
00:03:01.000 --> 00:03:02.070
What happens exactly is

83
00:03:02.070 --> 00:03:05.030
it takes this relative URL pattern

84
00:03:05.030 --> 00:03:08.030
and it will scan your web XML file.

85
00:03:08.030 --> 00:03:12.020
Or your annotation configuration in the respective classes.

86
00:03:12.020 --> 00:03:13.020
Because of the scanning

87
00:03:13.020 --> 00:03:16.040
it understands which servlet it is supposed to go to.

88
00:03:16.040 --> 00:03:19.000
And depending on the kind of request that you're making,

89
00:03:19.000 --> 00:03:20.060
either a Get or a Post,

90
00:03:20.060 --> 00:03:23.040
then it enters your specific doGet

91
00:03:23.040 --> 00:03:25.030
or the doPost method.

92
00:03:25.030 --> 00:03:27.080
That is how this entire thing works behind the scenes.

93
00:03:27.080 --> 00:03:29.080
We as developers do not do anything.

94
00:03:29.080 --> 00:03:32.080
The container takes the entire responsibility for this.

95
00:03:32.080 --> 00:03:33.060
Right?

96
00:03:33.060 --> 00:03:35.070
And whatever response you are getting generated

97
00:03:35.070 --> 00:03:37.090
from the servlet is written back to the client.

98
00:03:37.090 --> 00:03:40.040
It could be a text or it could be an entire HTML

99
00:03:40.040 --> 00:03:43.000
the way we have been writing so far.

