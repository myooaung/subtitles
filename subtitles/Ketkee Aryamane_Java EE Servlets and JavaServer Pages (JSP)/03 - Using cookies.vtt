WEBVTT
1
00:00:00.050 --> 00:00:01.070
- [Instructor] So now we will implement

2
00:00:01.070 --> 00:00:03.060
the demo for cookies.

3
00:00:03.060 --> 00:00:05.040
We've already seen what we are going to do.

4
00:00:05.040 --> 00:00:08.000
So this is our searchResults.jsp

5
00:00:08.000 --> 00:00:10.030
where we had displayed all the products.

6
00:00:10.030 --> 00:00:11.070
And that's the form tag.

7
00:00:11.070 --> 00:00:12.080
So what we are going to do is,

8
00:00:12.080 --> 00:00:14.070
whenever the user clicks on add to cart button

9
00:00:14.070 --> 00:00:16.000
we are going to reach a servlet.

10
00:00:16.000 --> 00:00:18.030
We are going to set up the entire session management

11
00:00:18.030 --> 00:00:19.060
using cookies.

12
00:00:19.060 --> 00:00:20.070
And then, we work it out to see

13
00:00:20.070 --> 00:00:22.050
whether the changes take effect.

14
00:00:22.050 --> 00:00:24.020
Okay, so the first step for this is

15
00:00:24.020 --> 00:00:28.040
we have to write a servlet class for session management.

16
00:00:28.040 --> 00:00:33.020
So, if you see, there is this products servlet class

17
00:00:33.020 --> 00:00:35.010
that I've already written out in the form of a template.

18
00:00:35.010 --> 00:00:37.090
Of course this extends the HttpServlet

19
00:00:37.090 --> 00:00:40.010
and I've annotated it with a URL pattern

20
00:00:40.010 --> 00:00:42.060
of addProducts on line number 11.

21
00:00:42.060 --> 00:00:46.040
The next step will be to get the HTTPSession object

22
00:00:46.040 --> 00:00:49.010
on the HTTPServletRequest API.

23
00:00:49.010 --> 00:00:51.000
So, as we discussed in the previous video,

24
00:00:51.000 --> 00:00:53.040
if we need to entirely set up the session,

25
00:00:53.040 --> 00:00:56.020
the session ID, and it has to get exchanged

26
00:00:56.020 --> 00:00:58.000
between the client and the server,

27
00:00:58.000 --> 00:01:01.040
we need the HTTPSession object inside the code.

28
00:01:01.040 --> 00:01:02.020
So, let's do that.

29
00:01:02.020 --> 00:01:05.020
I'm going to say HTTPSession which comes from,

30
00:01:05.020 --> 00:01:08.020
of course, javax.servlet.http package.

31
00:01:08.020 --> 00:01:09.090
And, take a reference for it

32
00:01:09.090 --> 00:01:14.070
and on the request object, you will get this session.

33
00:01:14.070 --> 00:01:15.050
Right.

34
00:01:15.050 --> 00:01:18.000
The next step will be to create a list

35
00:01:18.000 --> 00:01:19.070
of products for the user cart

36
00:01:19.070 --> 00:01:22.040
and keep adding selected product name to the list.

37
00:01:22.040 --> 00:01:25.000
So, the cart that we are going to build for the user

38
00:01:25.000 --> 00:01:29.010
is basically going to be as an arraylist

39
00:01:29.010 --> 00:01:30.080
and that arraylist we are going

40
00:01:30.080 --> 00:01:33.000
to create right now, like this,

41
00:01:33.000 --> 00:01:35.010
using the code java API.

42
00:01:35.010 --> 00:01:37.060
So, for simplicity, I am just going to put

43
00:01:37.060 --> 00:01:39.060
in the name of the product to this list

44
00:01:39.060 --> 00:01:42.030
rather than putting the entire product object.

45
00:01:42.030 --> 00:01:46.090
So, I'm going to say list cart equal to new ArrayList.

46
00:01:46.090 --> 00:01:47.080
Right.

47
00:01:47.080 --> 00:01:49.050
The next thing is you will have

48
00:01:49.050 --> 00:01:51.080
to add the selected product name to the list.

49
00:01:51.080 --> 00:01:53.010
That's right.

50
00:01:53.010 --> 00:01:55.040
So, whenever the user clicks on the active cart button,

51
00:01:55.040 --> 00:01:58.050
the user is going to come in this method

52
00:01:58.050 --> 00:01:59.050
so, we are going to check the product name

53
00:01:59.050 --> 00:02:01.020
and add it quickly to this cart.

54
00:02:01.020 --> 00:02:03.070
So, this is like adding the item to the cart.

55
00:02:03.070 --> 00:02:05.050
So, let's quickly do that.

56
00:02:05.050 --> 00:02:11.060
I'm going to check if request.getParameter

57
00:02:11.060 --> 00:02:12.060
the name of the field, of course,

58
00:02:12.060 --> 00:02:15.090
if that value is not null.

59
00:02:15.090 --> 00:02:18.070
Then, what I have to do is I have to take the cart

60
00:02:18.070 --> 00:02:23.020
and add that name quickly to the cart.

61
00:02:23.020 --> 00:02:26.000
So, I have to take this again from line number 29

62
00:02:26.000 --> 00:02:29.000
and paste it as an argument on line number 30.

63
00:02:29.000 --> 00:02:30.030
Right.

64
00:02:30.030 --> 00:02:33.000
Next is you will have to set that list

65
00:02:33.000 --> 00:02:35.060
to the session object as an attribute.

66
00:02:35.060 --> 00:02:36.040
Right.

67
00:02:36.040 --> 00:02:37.080
So, that's exactly what we want to do

68
00:02:37.080 --> 00:02:39.050
in this session management demo.

69
00:02:39.050 --> 00:02:41.010
We want to take that cart and we want

70
00:02:41.010 --> 00:02:42.090
to track it through the session.

71
00:02:42.090 --> 00:02:47.020
So, we are going to go ahead and do one more thing here.

72
00:02:47.020 --> 00:02:49.020
We say, session

73
00:02:49.020 --> 00:02:51.040
.setAttribute

74
00:02:51.040 --> 00:02:52.080
and attributes are always in the form

75
00:02:52.080 --> 00:02:54.000
of a key and value pair

76
00:02:54.000 --> 00:02:55.010
so, I'm going to give a key.

77
00:02:55.010 --> 00:02:57.000
The name is your choice

78
00:02:57.000 --> 00:03:00.010
and the value will be this entire cart object

79
00:03:00.010 --> 00:03:02.030
that we have created.

80
00:03:02.030 --> 00:03:03.010
Right.

81
00:03:03.010 --> 00:03:06.040
Once this is done, now we have to do a couple of things.

82
00:03:06.040 --> 00:03:08.010
One is we have to write the size

83
00:03:08.010 --> 00:03:09.030
of the cart back to the client

84
00:03:09.030 --> 00:03:11.050
and also have to display the search results

85
00:03:11.050 --> 00:03:13.030
against that search criteria.

86
00:03:13.030 --> 00:03:14.020
Right.

87
00:03:14.020 --> 00:03:15.080
There are quite a lot of things to do.

88
00:03:15.080 --> 00:03:18.020
Now, before we actually get to that point

89
00:03:18.020 --> 00:03:19.030
there's one more thing.

90
00:03:19.030 --> 00:03:22.010
Whenever the user clicks on the active cart button

91
00:03:22.010 --> 00:03:23.080
it's going to come in this method.

92
00:03:23.080 --> 00:03:24.070
Right.

93
00:03:24.070 --> 00:03:27.030
It essentially means that whenever the user comes here,

94
00:03:27.030 --> 00:03:29.050
we cannot create a new ArrayList.

95
00:03:29.050 --> 00:03:32.000
If we do that, then we are going

96
00:03:32.000 --> 00:03:34.020
to lose the previous cart information.

97
00:03:34.020 --> 00:03:36.080
So what we have to do is this list or this cart

98
00:03:36.080 --> 00:03:39.030
that we are picking up has to be picked up

99
00:03:39.030 --> 00:03:40.070
from the session itself.

100
00:03:40.070 --> 00:03:43.020
So, I'm going to modify line number 26

101
00:03:43.020 --> 00:03:47.030
and I'm going to say session.getAttribute cart.

102
00:03:47.030 --> 00:03:49.010
Let it come from the session itself.

103
00:03:49.010 --> 00:03:52.040
Now, this returns you something of the object type

104
00:03:52.040 --> 00:03:56.040
so I'm going to cast it quickly to ArrayList.

105
00:03:56.040 --> 00:03:57.070
Right.

106
00:03:57.070 --> 00:04:00.020
Now, there are two cases here.

107
00:04:00.020 --> 00:04:03.050
One, when the user comes in with the first product.

108
00:04:03.050 --> 00:04:06.060
That time, this cart is not going to exist.

109
00:04:06.060 --> 00:04:08.070
That time, this cart will be null.

110
00:04:08.070 --> 00:04:10.030
So, even if you try to fetch it

111
00:04:10.030 --> 00:04:11.090
from the session it will still be null.

112
00:04:11.090 --> 00:04:13.060
So, let's put a safe check there.

113
00:04:13.060 --> 00:04:17.040
Let's say, if the cart is going to be null

114
00:04:17.040 --> 00:04:20.040
then, we are going to instantiate

115
00:04:20.040 --> 00:04:24.020
that cart to a new array list.

116
00:04:24.020 --> 00:04:25.000
Right.

117
00:04:25.000 --> 00:04:28.040
So, the code on lines number 28 to 30 is a safe check

118
00:04:28.040 --> 00:04:30.020
that if you do not get a cart at all,

119
00:04:30.020 --> 00:04:32.050
which means the user is coming for the first time,

120
00:04:32.050 --> 00:04:35.010
only then we create a new ArrayList.

121
00:04:35.010 --> 00:04:37.040
In all the other subsequent requests

122
00:04:37.040 --> 00:04:38.090
to add products to the cart,

123
00:04:38.090 --> 00:04:42.000
we will pick up the cart from the session itself

124
00:04:42.000 --> 00:04:44.050
like we did on line number 26.

125
00:04:44.050 --> 00:04:45.080
Right.

126
00:04:45.080 --> 00:04:46.070
Okay.

127
00:04:46.070 --> 00:04:48.040
So, now we need to go back to the client,

128
00:04:48.040 --> 00:04:51.000
display the cart size, display the search results.

129
00:04:51.000 --> 00:04:52.090
Now, understand this bit as well.

130
00:04:52.090 --> 00:04:54.090
The search results were retrieved

131
00:04:54.090 --> 00:04:57.040
in the SearchServlet class.

132
00:04:57.040 --> 00:05:00.020
Right now, I am under the ProductsServlet.

133
00:05:00.020 --> 00:05:02.090
I do not have the search results with me.

134
00:05:02.090 --> 00:05:05.000
So, we are going to do that work around

135
00:05:05.000 --> 00:05:06.080
to get the search results again.

136
00:05:06.080 --> 00:05:07.090
How do we do that?

137
00:05:07.090 --> 00:05:09.030
Let's look at that bit.

138
00:05:09.030 --> 00:05:11.010
Let's go to SearchServlet.

139
00:05:11.010 --> 00:05:14.090
On line number 28, I'm going to take the request object,

140
00:05:14.090 --> 00:05:17.070
get the session object on it, like that,

141
00:05:17.070 --> 00:05:19.070
and I'm going to set an attribute

142
00:05:19.070 --> 00:05:25.040
inside the sessions code which is the search string.

143
00:05:25.040 --> 00:05:28.010
The search string is basically that we procure

144
00:05:28.010 --> 00:05:31.040
from the text box of the search that user enters.

145
00:05:31.040 --> 00:05:32.080
Right.

146
00:05:32.080 --> 00:05:35.020
So I'm going to take that and set it as a value here.

147
00:05:35.020 --> 00:05:36.060
Why have I done this?

148
00:05:36.060 --> 00:05:39.040
So that I get this attribute back

149
00:05:39.040 --> 00:05:43.000
and call the DAO again to get the search results.

150
00:05:43.000 --> 00:05:44.010
So, we look at it patiently.

151
00:05:44.010 --> 00:05:45.090
Now, right on line number 28,

152
00:05:45.090 --> 00:05:47.080
we've just set the search criteria

153
00:05:47.080 --> 00:05:49.090
as an attribute and request code.

154
00:05:49.090 --> 00:05:52.070
Now, let's go back to ProductServlet.

155
00:05:52.070 --> 00:05:54.000
Let me come here

156
00:05:54.000 --> 00:05:57.020
and let me get that search criteria

157
00:05:57.020 --> 00:05:58.080
that I set in the SearchServlet.

158
00:05:58.080 --> 00:06:01.080
So, on line number 42, I'm going to say

159
00:06:01.080 --> 00:06:05.000
string search equal to session

160
00:06:05.000 --> 00:06:07.050
.getAttribute

161
00:06:07.050 --> 00:06:08.030
search.

162
00:06:08.030 --> 00:06:10.060
So now, by doing this, I'm actually fetching

163
00:06:10.060 --> 00:06:13.060
the search criteria which I set in the session.

164
00:06:13.060 --> 00:06:15.090
This is going to return me something of type object.

165
00:06:15.090 --> 00:06:17.010
So, business as usual.

166
00:06:17.010 --> 00:06:20.000
I will have to cast it to a string value.

167
00:06:20.000 --> 00:06:24.010
Now, once I do this, I will call the application DAO again.

168
00:06:24.010 --> 00:06:26.050
On line number 46, I'm going to create an instance

169
00:06:26.050 --> 00:06:31.020
of ApplicationDao.

170
00:06:31.020 --> 00:06:35.040
And, I'm going to call the searchProducts method

171
00:06:35.040 --> 00:06:38.030
of that Dao and I'll pass that search string

172
00:06:38.030 --> 00:06:40.000
that I have with me.

173
00:06:40.000 --> 00:06:42.090
The output of this will be the entire list

174
00:06:42.090 --> 00:06:44.070
of product objects.

175
00:06:44.070 --> 00:06:46.000
So, we have already done this

176
00:06:46.000 --> 00:06:50.050
in our search use case earlier in one of our videos.

177
00:06:50.050 --> 00:06:51.030
Great.

178
00:06:51.030 --> 00:06:54.070
So now, we have been able to get the search results again

179
00:06:54.070 --> 00:06:57.030
and we'll be able to display that one the page.

180
00:06:57.030 --> 00:07:00.040
But, please understand, this is just a work around.

181
00:07:00.040 --> 00:07:02.080
In your actual live industry project,

182
00:07:02.080 --> 00:07:06.080
you may want to maintain the search results in a caching API

183
00:07:06.080 --> 00:07:07.090
because that's what you will do.

184
00:07:07.090 --> 00:07:10.050
The caching is going to hold a lot of data

185
00:07:10.050 --> 00:07:12.020
because if you try to order the database

186
00:07:12.020 --> 00:07:14.030
for every single call then, it is going

187
00:07:14.030 --> 00:07:16.050
to be a very tedious process

188
00:07:16.050 --> 00:07:18.020
and it'll pull down the performance.

189
00:07:18.020 --> 00:07:20.000
So, in a project in the industry,

190
00:07:20.000 --> 00:07:22.070
we generally keep these search results in a cache.

191
00:07:22.070 --> 00:07:23.050
Alright?

192
00:07:23.050 --> 00:07:24.080
So this is just a work around.

193
00:07:24.080 --> 00:07:27.070
Okay, now that we have the search results,

194
00:07:27.070 --> 00:07:29.050
we'll quickly set the search results

195
00:07:29.050 --> 00:07:31.050
to the request object as an attribute.

196
00:07:31.050 --> 00:07:32.040
Let's do that.

197
00:07:32.040 --> 00:07:34.020
So, I'm going to come here, down.

198
00:07:34.020 --> 00:07:36.070
And I'm going to take the request object

199
00:07:36.070 --> 00:07:38.030
and I'm going to say setAttribute

200
00:07:38.030 --> 00:07:40.080
and set the entire products data

201
00:07:40.080 --> 00:07:45.080
as an attribute in the request code.

202
00:07:45.080 --> 00:07:47.030
Good.

203
00:07:47.030 --> 00:07:48.090
And the last thing, we now need

204
00:07:48.090 --> 00:07:51.050
to go back to the searchResults.jsp

205
00:07:51.050 --> 00:07:54.040
to display the cart size and the products data.

206
00:07:54.040 --> 00:07:55.070
So, I'm going to do that.

207
00:07:55.070 --> 00:07:58.050
I'll say request

208
00:07:58.050 --> 00:08:02.000
.getRequestDispatcher.

209
00:08:02.000 --> 00:08:03.040
So, we know this API by now.

210
00:08:03.040 --> 00:08:10.010
I'm just going to forward the control to searchResults.jsp.

211
00:08:10.010 --> 00:08:13.070
And, once I do that, I have to invoke the forward API

212
00:08:13.070 --> 00:08:16.070
along with a request and the response objects.

213
00:08:16.070 --> 00:08:18.060
That's all.

214
00:08:18.060 --> 00:08:20.000
Right.

215
00:08:20.000 --> 00:08:22.010
So, our session management code is entirely ready with us.

216
00:08:22.010 --> 00:08:23.010
The last step will be

217
00:08:23.010 --> 00:08:26.030
to add form element attributes on page.

218
00:08:26.030 --> 00:08:27.010
Right.

219
00:08:27.010 --> 00:08:29.040
So, let's go to the JSP now, searchResults.jsp.

220
00:08:29.040 --> 00:08:32.070
We need to add these couple of attributes

221
00:08:32.070 --> 00:08:35.030
to the form element on line number 47.

222
00:08:35.030 --> 00:08:38.090
So, I'm going to say action is the URL pattern

223
00:08:38.090 --> 00:08:39.090
of the ProductsServlet.

224
00:08:39.090 --> 00:08:41.050
Let's go there.

225
00:08:41.050 --> 00:08:44.060
And quickly copy from line number 17

226
00:08:44.060 --> 00:08:47.050
and paste it to line number 47.

227
00:08:47.050 --> 00:08:49.090
And the method that you would opt for

228
00:08:49.090 --> 00:08:51.020
is the get method

229
00:08:51.020 --> 00:08:53.010
because all of the implementation

230
00:08:53.010 --> 00:08:55.060
that we have done is inside the do get method.

231
00:08:55.060 --> 00:08:56.090
Right.

232
00:08:56.090 --> 00:08:58.020
Another thing is we need

233
00:08:58.020 --> 00:09:00.000
to display the items in cart, right?

234
00:09:00.000 --> 00:09:02.040
So, now we are going to do that using scriptlet element.

235
00:09:02.040 --> 00:09:05.010
So, on line number 29, I'm now going

236
00:09:05.010 --> 00:09:07.060
to start a scriptlet element,

237
00:09:07.060 --> 00:09:09.030
but I'm going to do a check.

238
00:09:09.030 --> 00:09:11.040
I will say if

239
00:09:11.040 --> 00:09:15.040
session.getAttribute,

240
00:09:15.040 --> 00:09:16.050
cart,

241
00:09:16.050 --> 00:09:19.030
is not null,

242
00:09:19.030 --> 00:09:20.020
what am I going to do?

243
00:09:20.020 --> 00:09:23.030
I'm going to take that cart and display the size here.

244
00:09:23.030 --> 00:09:24.010
Okay.

245
00:09:24.010 --> 00:09:27.010
So, let's go ahead and eliminate this

246
00:09:27.010 --> 00:09:29.080
and put an expression element instead.

247
00:09:29.080 --> 00:09:34.010
And, let's take this from line number 29,

248
00:09:34.010 --> 00:09:35.060
come here down,

249
00:09:35.060 --> 00:09:38.000
put a crown pair of brackets.

250
00:09:38.000 --> 00:09:39.090
Now, please understand this thing.

251
00:09:39.090 --> 00:09:41.040
When I say session.getAttribute

252
00:09:41.040 --> 00:09:43.030
it will return you something of type object.

253
00:09:43.030 --> 00:09:45.090
You need to cast it to an ArrayList

254
00:09:45.090 --> 00:09:49.020
and after that, we can invoke the size API on it.

255
00:09:49.020 --> 00:09:50.000
Right.

256
00:09:50.000 --> 00:09:51.040
So, I'm going to do that.

257
00:09:51.040 --> 00:09:55.000
This is ArrayList

258
00:09:55.000 --> 00:09:56.040
and that's the value that we have.

259
00:09:56.040 --> 00:09:57.060
So, this casting is done.

260
00:09:57.060 --> 00:10:00.080
Now, over this, I'm going to invoke the size API.

261
00:10:00.080 --> 00:10:02.040
Great.

262
00:10:02.040 --> 00:10:03.020
Right.

263
00:10:03.020 --> 00:10:04.070
Additionally, let's also do one more thing.

264
00:10:04.070 --> 00:10:06.090
I'm going to take this entire expression element evaluation

265
00:10:06.090 --> 00:10:09.030
that we have done

266
00:10:09.030 --> 00:10:14.010
and assign this to the title attribute of the span element.

267
00:10:14.010 --> 00:10:15.030
Why do I need this?

268
00:10:15.030 --> 00:10:18.000
Because when I mouse over that span element,

269
00:10:18.000 --> 00:10:19.030
I should be able to see the names

270
00:10:19.030 --> 00:10:20.080
of the products that I had.

271
00:10:20.080 --> 00:10:21.060
Okay.

272
00:10:21.060 --> 00:10:22.060
So, let's go ahead and do this.

273
00:10:22.060 --> 00:10:25.020
So, this time, we don't want the size.

274
00:10:25.020 --> 00:10:27.010
We only want the product names.

275
00:10:27.010 --> 00:10:29.030
So, this will be all.

276
00:10:29.030 --> 00:10:30.010
Right.

277
00:10:30.010 --> 00:10:31.060
Let's complete that if condition.

278
00:10:31.060 --> 00:10:33.050
So, that's java code which means I will have

279
00:10:33.050 --> 00:10:37.020
to begin a new scriptlet element and close that condition.

280
00:10:37.020 --> 00:10:39.050
And, also, let's put an else condition there

281
00:10:39.050 --> 00:10:43.040
which is generating the span element

282
00:10:43.040 --> 00:10:45.070
with the same ID.

283
00:10:45.070 --> 00:10:51.000
But, this time, the items in cart will be zero.

284
00:10:51.000 --> 00:10:51.080
Right.

285
00:10:51.080 --> 00:10:54.030
And I also need another scriptlet again

286
00:10:54.030 --> 00:10:56.060
to close that ends condition.

287
00:10:56.060 --> 00:10:58.010
There we go.

288
00:10:58.010 --> 00:11:01.000
So, we have checked the cart from the session.

289
00:11:01.000 --> 00:11:02.080
If there is a cart and it's not null

290
00:11:02.080 --> 00:11:06.020
then, we are going to quickly display the size

291
00:11:06.020 --> 00:11:08.000
in the form of items to cart.

292
00:11:08.000 --> 00:11:09.010
And, if we don't get anything then, we are just going

293
00:11:09.010 --> 00:11:12.050
to put the items in cart as zero.

294
00:11:12.050 --> 00:11:13.050
Right.

295
00:11:13.050 --> 00:11:15.010
Yes, so we have done all the changes.

296
00:11:15.010 --> 00:11:17.030
Let's go ahead now, run this project,

297
00:11:17.030 --> 00:11:21.050
and see whether it works.

298
00:11:21.050 --> 00:11:22.090
Yeah, so I am on my index page.

299
00:11:22.090 --> 00:11:24.030
I'll click on the search hyperlink

300
00:11:24.030 --> 00:11:26.060
and search for a product.

301
00:11:26.060 --> 00:11:27.040
I get the products.

302
00:11:27.040 --> 00:11:30.040
Now I want to click on add to cart.

303
00:11:30.040 --> 00:11:31.050
There you go.

304
00:11:31.050 --> 00:11:33.090
Items in cart is now one.

305
00:11:33.090 --> 00:11:34.070
Good.

306
00:11:34.070 --> 00:11:35.050
Now, let's add another product.

307
00:11:35.050 --> 00:11:37.070
Items in cart is two.

308
00:11:37.070 --> 00:11:38.070
Items in cart is three.

309
00:11:38.070 --> 00:11:39.060
So, you know,

310
00:11:39.060 --> 00:11:42.050
this entire item's data we are tracking

311
00:11:42.050 --> 00:11:44.090
by the session management process.

312
00:11:44.090 --> 00:11:47.010
If I just go over and mouse over, you see,

313
00:11:47.010 --> 00:11:49.040
I get all the product names listed there.

314
00:11:49.040 --> 00:11:51.080
So, that's how you implement session management,

315
00:11:51.080 --> 00:11:53.000
the cookies way.

316
00:11:53.000 --> 00:11:56.000
In the next video, we'll see the video for URL rewriting.

