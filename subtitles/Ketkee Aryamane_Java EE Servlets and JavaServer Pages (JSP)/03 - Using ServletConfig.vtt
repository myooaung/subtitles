WEBVTT
1
00:00:00.040 --> 00:00:03.030
- Now let us understand a few other important APIs

2
00:00:03.030 --> 00:00:06.010
which are critical under the Servlet specification.

3
00:00:06.010 --> 00:00:09.060
The first one among them is the ServletConfig API.

4
00:00:09.060 --> 00:00:12.020
This is the one which is used to pass any kind

5
00:00:12.020 --> 00:00:15.090
of configuration information to a particular servlet.

6
00:00:15.090 --> 00:00:18.040
For example, let's say you're servlet wants

7
00:00:18.040 --> 00:00:20.080
to register to a web service URL.

8
00:00:20.080 --> 00:00:22.020
Or let's say it wants to register

9
00:00:22.020 --> 00:00:24.000
itself to a weather service URL.

10
00:00:24.000 --> 00:00:26.010
In that case, when you write out the code

11
00:00:26.010 --> 00:00:29.030
the URL will be hard-coded into the servlet class.

12
00:00:29.030 --> 00:00:30.070
But there's no need to hard-code

13
00:00:30.070 --> 00:00:33.010
because it's not a good practice.

14
00:00:33.010 --> 00:00:35.090
What we could do is, we could imbed this URL

15
00:00:35.090 --> 00:00:40.020
information in the form of config init parameter.

16
00:00:40.020 --> 00:00:43.020
These init parameters are typically defined in the

17
00:00:43.020 --> 00:00:46.010
deployment descriptor, which is our webxml file.

18
00:00:46.010 --> 00:00:50.060
And they're always defined under servlet element.

19
00:00:50.060 --> 00:00:52.080
These parameters that we define are of course

20
00:00:52.080 --> 00:00:55.020
in the form of a key and a value pair.

21
00:00:55.020 --> 00:00:58.060
And they're always of the string type.

22
00:00:58.060 --> 00:01:01.000
Once these parameters are defined in the

23
00:01:01.000 --> 00:01:04.030
deployment descriptor, they can be retrieved inside

24
00:01:04.030 --> 00:01:07.060
the servlet through the ServletConfig.

25
00:01:07.060 --> 00:01:09.060
Which is exactly why we say that

26
00:01:09.060 --> 00:01:12.010
ServletConfig passes the configuration

27
00:01:12.010 --> 00:01:14.080
information to the servlet class.

28
00:01:14.080 --> 00:01:17.000
For each servlet that you have in your application,

29
00:01:17.000 --> 00:01:19.080
there is one ServletConfig object

30
00:01:19.080 --> 00:01:21.060
created with respect to it.

31
00:01:21.060 --> 00:01:25.090
So there's one ServletConfig instance per servlet class.

32
00:01:25.090 --> 00:01:28.080
Let's quickly demo this feature out in our application.

33
00:01:28.080 --> 00:01:31.000
We've got to guest servlet here.

34
00:01:31.000 --> 00:01:33.040
And for the guest servlet, we are now

35
00:01:33.040 --> 00:01:35.090
going to define some minor parameters.

36
00:01:35.090 --> 00:01:38.020
Let's go to the web.xml and we have already

37
00:01:38.020 --> 00:01:40.030
configured our servlet there by means of

38
00:01:40.030 --> 00:01:43.010
the servlet and servlet mapping elements.

39
00:01:43.010 --> 00:01:44.040
Now what we could do is, we could go

40
00:01:44.040 --> 00:01:46.040
under the servlet tab and there

41
00:01:46.040 --> 00:01:50.030
we would find an element called init-param.

42
00:01:50.030 --> 00:01:53.010
Inside this, there are a couple of other tabs.

43
00:01:53.010 --> 00:01:54.070
So line number eight is where I

44
00:01:54.070 --> 00:01:56.050
started the init-param element.

45
00:01:56.050 --> 00:01:58.030
And on line number nine, I'm going to write

46
00:01:58.030 --> 00:02:00.000
a couple of other tags which come as

47
00:02:00.000 --> 00:02:02.040
"children" under the init-param.

48
00:02:02.040 --> 00:02:04.080
The first one is param-name.

49
00:02:04.080 --> 00:02:06.090
Which is a logical name to the parameter

50
00:02:06.090 --> 00:02:10.020
that you wish to give and it's completely your choice.

51
00:02:10.020 --> 00:02:13.040
So let me say, it's called, "URL".

52
00:02:13.040 --> 00:02:16.040
And the next element is the param-value.

53
00:02:16.040 --> 00:02:19.020
So this could be the complete URL of weather service.

54
00:02:19.020 --> 00:02:20.000
So let's say,

55
00:02:20.000 --> 00:02:20.090
(typing)

56
00:02:20.090 --> 00:02:22.080
www.weatherservice.com.

57
00:02:22.080 --> 00:02:26.060
(typing)

58
00:02:26.060 --> 00:02:28.080
This is just a demo URL that I've imbed ed

59
00:02:28.080 --> 00:02:31.050
as an information in line with parameter.

60
00:02:31.050 --> 00:02:34.090
Now that we have defined inet-param in the web.xml

61
00:02:34.090 --> 00:02:38.030
we could go to "GetServlet" and fetch that parameter.

62
00:02:38.030 --> 00:02:39.050
And that is going to be done

63
00:02:39.050 --> 00:02:42.000
with the help of ServletConfig API.

64
00:02:42.000 --> 00:02:44.000
So on line number 18, I need to

65
00:02:44.000 --> 00:02:46.050
get the ServletConfig off-checked first.

66
00:02:46.050 --> 00:02:48.080
How do I get it? Let's take a reference.

67
00:02:48.080 --> 00:02:51.020
(typing)

68
00:02:51.020 --> 00:02:53.030
And inside the parent-which is the

69
00:02:53.030 --> 00:02:57.020
HttpServlet class. There's an API which is available.

70
00:02:57.020 --> 00:02:59.040
Which is called, "getServletConfig".

71
00:02:59.040 --> 00:03:00.070
This is the one which will

72
00:03:00.070 --> 00:03:03.010
get us that ServletConfig object.

73
00:03:03.010 --> 00:03:06.050
Now what we need to do is, we need to sysout.

74
00:03:06.050 --> 00:03:09.000
We just put a small sysout which is going

75
00:03:09.000 --> 00:03:11.010
to fetch that parameter for us.

76
00:03:11.010 --> 00:03:13.080
How? Take the reference and invoke an

77
00:03:13.080 --> 00:03:16.090
API called, "getinit-parameter".

78
00:03:16.090 --> 00:03:19.070
This will demand the name of that parameter.

79
00:03:19.070 --> 00:03:21.070
So let's go to web.xml and quickly fetch

80
00:03:21.070 --> 00:03:24.060
the name of the parameter from line number nine.

81
00:03:24.060 --> 00:03:26.020
Let's come back to that servlet.

82
00:03:26.020 --> 00:03:31.010
And I'm going to put it as an "argument" on line 21.

83
00:03:31.010 --> 00:03:32.090
That is all that we have to do.

84
00:03:32.090 --> 00:03:34.060
Now what I'm going to do is, I'm just going

85
00:03:34.060 --> 00:03:36.060
to run this application

86
00:03:36.060 --> 00:03:40.030
and access the getservletURL pattern.

87
00:03:40.030 --> 00:03:41.050
And then we'll understand

88
00:03:41.050 --> 00:03:43.000
whether it gets printed or not.

89
00:03:43.000 --> 00:03:43.080
So I'm just going to see.

90
00:03:43.080 --> 00:03:44.070
(typing)

91
00:03:44.070 --> 00:03:46.070
- getServlet.

92
00:03:46.070 --> 00:03:48.080
Once I do this...yes I got a response.

93
00:03:48.080 --> 00:03:50.050
Now let's check our console and see

94
00:03:50.050 --> 00:03:53.060
whether we got init-parameter correctly.

95
00:03:53.060 --> 00:03:54.080
There we are.

96
00:03:54.080 --> 00:03:56.030
So we are able to fetch the value of the

97
00:03:56.030 --> 00:03:59.050
init-parameter and print it on the console.

98
00:03:59.050 --> 00:04:01.040
Now you can use that init-parameter with a value

99
00:04:01.040 --> 00:04:03.000
and consequently write the code

100
00:04:03.000 --> 00:04:05.050
for connecting to that weather service.

101
00:04:05.050 --> 00:04:08.040
So this is how ServletConfi API works.

102
00:04:08.040 --> 00:04:12.050
Remember, that ServletConfig is one per servlet.

103
00:04:12.050 --> 00:04:17.000
So every servlet will have its own ServletConfig object.

104
00:04:17.000 --> 00:04:20.070
So this is how we added the init-parameter to web.xml.

105
00:04:20.070 --> 00:04:22.070
However, if you want to do the same thing

106
00:04:22.070 --> 00:04:24.070
with annotation, this is how it will work.

107
00:04:24.070 --> 00:04:25.090
(typing)

108
00:04:25.090 --> 00:04:28.020
This is your webservlet under which

109
00:04:28.020 --> 00:04:31.080
you have the urlPatterns as one of the keys.

110
00:04:31.080 --> 00:04:34.050
You can define the URL pattern for this.

111
00:04:34.050 --> 00:04:35.030
Like this.

112
00:04:35.030 --> 00:04:36.010
(typing)

113
00:04:36.010 --> 00:04:38.060
After that, you can actually give out a comma

114
00:04:38.060 --> 00:04:42.020
and go on to the next parameter which is init-params.

115
00:04:42.020 --> 00:04:47.050
Now this is going to demand a WebinitParam annotation.

116
00:04:47.050 --> 00:04:49.030
And this is in turn is going to have

117
00:04:49.030 --> 00:04:52.060
a definition of the parameters. In the form of name.

118
00:04:52.060 --> 00:04:56.000
So let's say the name we had was, "URL".

119
00:04:56.000 --> 00:04:58.000
And then put a comma and say,

120
00:04:58.000 --> 00:05:02.000
"value=(the complete URL)".

121
00:05:02.000 --> 00:05:04.090
(typing)

122
00:05:04.090 --> 00:05:07.090
So in case you need to define your init parameter

123
00:05:07.090 --> 00:05:11.000
through annotations, this is how you'll go about it.

