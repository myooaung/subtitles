1
00:00:02,120 --> 00:00:08,620
Now before we actually run any commands, you might be wondering why I'm using the shell because when

2
00:00:08,620 --> 00:00:15,280
you're building a real application where you use mongodb, you will of course not use the shell for that,

3
00:00:15,400 --> 00:00:20,160
you will use one of the mongodb drivers depending on the programming language you're using.

4
00:00:20,470 --> 00:00:26,310
And on the official docs, a link to this page can be found in the last lecture of this module by the

5
00:00:26,310 --> 00:00:26,910
way,

6
00:00:27,100 --> 00:00:31,540
you find an extensive list of all the drivers mongodb offers

7
00:00:31,600 --> 00:00:36,130
and as you can see, there are drivers for C++, C# Java,

8
00:00:36,270 --> 00:00:39,360
NodeJS, PHP, Python,

9
00:00:39,410 --> 00:00:46,700
so all the important server side or desktop side programming languages.

10
00:00:46,870 --> 00:00:51,790
Now depending on what you're building for, you would of course choose your driver here,

11
00:00:51,940 --> 00:00:57,140
follow the installation docs and then embed it into your application code

12
00:00:57,310 --> 00:01:02,710
but in this course, as mentioned in the first module already, we of course want to show you an approach

13
00:01:02,710 --> 00:01:08,260
that works for every language and therefore we'll use the shell here.

14
00:01:08,560 --> 00:01:13,920
The shell allows us to write queries which are very similar to the queries in the different drivers,

15
00:01:13,990 --> 00:01:16,250
the shell is actually based on Javascript

16
00:01:16,360 --> 00:01:18,350
so it's extremely similar to Nodejs

17
00:01:18,370 --> 00:01:24,900
but if you check out the docs for the other drivers or even batter, in the official docs here,

18
00:01:25,210 --> 00:01:30,720
if you go to getting started and you find a link to this in the last lecture too,

19
00:01:31,030 --> 00:01:35,730
you can also see that there, you find a document about the crud operations and

20
00:01:35,750 --> 00:01:37,890
you don't need to worry too much about that right now,

21
00:01:37,930 --> 00:01:41,090
we'll learn all about these operations in this module.

22
00:01:41,380 --> 00:01:47,950
But if you check out any article there, you can actually switch between the different languages and the

23
00:01:47,950 --> 00:01:52,300
interesting thing is the default always is the shell, these are the commands we'll write

24
00:01:52,510 --> 00:01:56,680
but if you then switch to Python for example, you see this is pretty similar.

25
00:01:56,770 --> 00:02:00,170
We had insertOne in the shell written like this,

26
00:02:00,310 --> 00:02:06,030
now in python it follows the python naming standards but it's still insertOne and it's configured and used

27
00:02:06,030 --> 00:02:07,010
in the same way

28
00:02:07,120 --> 00:02:09,670
and this is true for all the programming languages.

29
00:02:09,850 --> 00:02:15,070
It of course uses the syntax of that language and the best practices you should use for writing code

30
00:02:15,070 --> 00:02:15,970
in that language

31
00:02:16,030 --> 00:02:21,760
but the way you use it, the way you pass data and then you can configure it always is the same

32
00:02:21,760 --> 00:02:24,160
and this is why we use the shell here.

33
00:02:24,250 --> 00:02:30,420
Now with that out of the way, let's start using that shell which is connected to our local mongo server

34
00:02:30,670 --> 00:02:36,640
and let's finally add some data and learn more about the data types we can use and how we can interact

35
00:02:36,640 --> 00:02:37,780
with data in general.
