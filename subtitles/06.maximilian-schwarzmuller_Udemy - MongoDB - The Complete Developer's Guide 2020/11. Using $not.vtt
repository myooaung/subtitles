WEBVTT
1
00:00:02.150 --> 00:00:04.340
Now we're almost done with the logical operators,

2
00:00:04.360 --> 00:00:05.900
there is one last operator and

3
00:00:05.950 --> 00:00:08.850
that's the $not operator.

4
00:00:08.900 --> 00:00:12.780
Now as you see here, it inverts the effect of a query expression,

5
00:00:12.790 --> 00:00:20.820
so what we could do here is we could look for movies that do not have a runtime of 60 minutes.

6
00:00:20.830 --> 00:00:28.660
Now I can use not to for example find all items or let's do a count here to output less, to find all items

7
00:00:28.660 --> 00:00:30.780
where the runtime is not equal to 60.

8
00:00:30.940 --> 00:00:34.290
Now not does not work by putting it first,

9
00:00:34.450 --> 00:00:41.830
instead you specify the field you want to look for, like runtime and then we can say not

10
00:00:41.830 --> 00:00:45.910
and then the query which we don't want to run.

11
00:00:45.940 --> 00:00:48.120
So here I could say not equal

12
00:00:48.130 --> 00:00:50.950
and now I need that equal operator, here

13
00:00:50.980 --> 00:00:58.510
it is helpful because we got no other way of expressing this with not, not equal to 60. If I hit enter,

14
00:00:58.560 --> 00:01:01.920
I find 70 movies where the runtime is not equal to 60.

15
00:01:01.920 --> 00:01:09.840
Now of course, not will not be used that often because this complex query is essentially just equal to

16
00:01:11.080 --> 00:01:13.320
ne 60 right,

17
00:01:13.330 --> 00:01:19.790
that also gives us back to 70 movies where the runtime is not equal to 60 and for or, you would have nor.

18
00:01:19.810 --> 00:01:23.930
So there are a lot of other ways of querying for the inverse

19
00:01:24.040 --> 00:01:27.780
but if you need it, if there is some query where you just can't inverse it

20
00:01:27.790 --> 00:01:32.730
in another way, then there is the not operator which you can use to look for the opposite.
