WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.440
all right.

00:00:01.440 --> 00:00:06.390
This is how arrest of the course on database is going to look like roughly.

00:00:06.390 --> 00:00:08.910
We're going to dedicate couple off videos,

00:00:08.910 --> 00:00:09.870
or maybe three,

00:00:09.870 --> 00:00:14.540
in understanding some of the concepts off database management system.

00:00:14.540 --> 00:00:15.490
Especially,

00:00:15.490 --> 00:00:21.410
we're going to focus on relational database because Relational database is the most popular

00:00:21.410 --> 00:00:24.210
form off database used another days,

00:00:24.210 --> 00:00:28.290
and then we'll jump into understanding structured query language,

00:00:28.290 --> 00:00:30.680
which in turn will have all these sections.

00:00:30.680 --> 00:00:34.210
And this is where most off our energy is going to go into.

00:00:34.210 --> 00:00:39.250
Because this is the place where Java developers will come into picture.

00:00:39.250 --> 00:00:44.420
They should know how to make use off SQL to come and get with the database from their

00:00:44.420 --> 00:00:45.350
applications.

00:00:45.350 --> 00:00:51.130
And then we'll talk about some of the things that you can do in PG admin.

00:00:51.130 --> 00:00:54.750
I mean the graphical user interface we have looked at.

00:00:54.750 --> 00:00:55.850
In fact,

00:00:55.850 --> 00:00:58.650
these two sections may go hand in hand.

00:00:58.650 --> 00:01:01.270
When I talk about structured query language,

00:01:01.270 --> 00:01:06.550
we're going to take a look at how we can accomplish the same task from post gree admin,

00:01:06.550 --> 00:01:08.820
and as a bonus,

00:01:08.820 --> 00:01:15.230
I'm also going to walk it through how you can go about designing a database this may help

00:01:15.230 --> 00:01:16.550
you in future,

00:01:16.550 --> 00:01:18.350
so why not discuss it?

00:01:18.350 --> 00:01:24.780
We'll jump into understanding some of the classes and interfaces involved in jail.

00:01:24.780 --> 00:01:30.780
ABC and in the end will try to wrap up by discussing some good practices.

00:01:30.780 --> 00:01:35.820
So let's start with some database concepts for this purpose.

00:01:35.820 --> 00:01:37.290
I've created this document.

00:01:37.290 --> 00:01:40.120
I'm going to make this available for you to download.

00:01:40.120 --> 00:01:43.140
DBM is introduced docks whatever.

00:01:43.140 --> 00:01:46.060
So let's start with the basic definition.

00:01:46.060 --> 00:01:49.590
What is a database and what is database management system?

00:01:49.590 --> 00:01:55.770
A database is simply a collection off interrelated data typically stored in the form off

00:01:55.770 --> 00:01:56.600
tables,

00:01:56.600 --> 00:02:00.300
just as we have seen in gives off US students table.

00:02:00.300 --> 00:02:06.320
And the most popular form of database is the relational database.

00:02:06.320 --> 00:02:09.760
This is where tables will come into picture.

00:02:09.760 --> 00:02:10.720
In fact,

00:02:10.720 --> 00:02:16.150
this tables are termed as relations will get into that next video,

00:02:16.150 --> 00:02:24.360
maybe NDB and misses a software that's going to assist you in managing your database in

00:02:24.360 --> 00:02:32.010
more efficient and secure manner and is also going to love you to perform credit operations

00:02:32.010 --> 00:02:32.010
,

00:02:32.010 --> 00:02:32.840
create,

00:02:32.840 --> 00:02:33.170
read,

00:02:33.170 --> 00:02:34.360
update and delete.

00:02:34.360 --> 00:02:41.650
Along with that d be amiss also offers host of other features which will discuss a spot off

00:02:41.650 --> 00:02:47.980
these advantages off db Emmis and is also going to offer better transaction management,

00:02:47.980 --> 00:02:51.850
which is also something that will discuss in a moment.

00:02:51.850 --> 00:02:55.550
So these are some of the examples off DBM a software,

00:02:55.550 --> 00:02:58.960
but the one which we have installed is obviously was great.

00:02:58.960 --> 00:03:00.860
Ask your Celestica.

00:03:00.860 --> 00:03:03.350
Look at some of the advantages off DB amiss.

00:03:03.350 --> 00:03:04.530
Now,

00:03:04.530 --> 00:03:11.150
whatever the advantages that have listed here are the advantageous compared to traditional

00:03:11.150 --> 00:03:12.350
way of storing data,

00:03:12.350 --> 00:03:17.750
I mean in files maybe in an associate are in an XML document.

00:03:17.750 --> 00:03:22.350
So the first head want is that we're going to talk about his data consistency,

00:03:22.350 --> 00:03:27.110
meaning that the data will be stored in consistent manner.

00:03:27.110 --> 00:03:33.080
Let us start understand an example off and data which is inconsistent.

00:03:33.080 --> 00:03:36.130
Let's say that you somehow decided to not use D.

00:03:36.130 --> 00:03:36.270
B.

00:03:36.270 --> 00:03:41.730
M s and instead you want to use an X erxi it and let us assume that you're storing the

00:03:41.730 --> 00:03:44.820
student information on multiple excel sheets.

00:03:44.820 --> 00:03:45.680
But now,

00:03:45.680 --> 00:03:49.150
today you wanted to make an update to their student information,

00:03:49.150 --> 00:03:50.360
for example,

00:03:50.360 --> 00:03:53.800
maybe you wanted to change his fee structure.

00:03:53.800 --> 00:03:57.710
You would change it in one location and you forget to change another location.

00:03:57.710 --> 00:04:01.250
That's going to result in data being inconsistent.

00:04:01.250 --> 00:04:04.750
So that's one of the example off data being inconsistent.

00:04:04.750 --> 00:04:09.320
But D VMS allows us to maintain data and consistent manner.

00:04:09.320 --> 00:04:14.330
You understand the concept of consistency when we taken example off transaction,

00:04:14.330 --> 00:04:15.350
which is coming next,

00:04:15.350 --> 00:04:21.290
DBM muscles offers better security and access restrictions.

00:04:21.290 --> 00:04:23.150
Let me just show you what I mean.

00:04:23.150 --> 00:04:24.730
If you go to PG Edmund,

00:04:24.730 --> 00:04:25.550
for instance,

00:04:25.550 --> 00:04:32.060
expand the server and then you go inside the section that says logging or group rolls

00:04:32.060 --> 00:04:32.940
expanded.

00:04:32.940 --> 00:04:39.340
And then you will be able to see the post gray user that we had used to log into there the

00:04:39.340 --> 00:04:44.100
best directly can it and go to properties and go to privileges.

00:04:44.100 --> 00:04:46.950
This user has all these privileges.

00:04:46.950 --> 00:04:47.710
He could,

00:04:47.710 --> 00:04:48.530
for instance,

00:04:48.530 --> 00:04:49.280
can log in.

00:04:49.280 --> 00:04:50.210
Yes,

00:04:50.210 --> 00:04:51.750
and then he is a super user,

00:04:51.750 --> 00:04:57.550
which means he'll have almost all the privileges on administering the was great skill.

00:04:57.550 --> 00:04:59.200
If we turn it off,

00:04:59.200 --> 00:05:02.470
then it's going to restrict certain privileges for this user.

00:05:02.470 --> 00:05:04.180
Similarly,

00:05:04.180 --> 00:05:05.810
got other privileges as well.

00:05:05.810 --> 00:05:11.090
But the point that I want to make here is we can create such restrictions.

00:05:11.090 --> 00:05:14.680
We can have multiple users with certain privileges.

00:05:14.680 --> 00:05:18.050
DBM Israel also ill.

00:05:18.050 --> 00:05:23.540
I was to have these off access to the database by using the structured query language,

00:05:23.540 --> 00:05:28.050
and the data gets retrieved in efficient manner.

00:05:28.050 --> 00:05:29.020
Internally,

00:05:29.020 --> 00:05:36.350
Devia misuses lot off algorithms in most efficient way possible to get their desired data.

00:05:36.350 --> 00:05:42.960
That's going to contribute in improving the user experience off your website D B.

00:05:42.960 --> 00:05:45.910
A missile seller was to take backups or for database.

00:05:45.910 --> 00:05:47.690
Let me just show you what I mean.

00:05:47.690 --> 00:05:49.070
For instance,

00:05:49.070 --> 00:05:53.850
if you choose one of the data basis available and if you go to tools,

00:05:53.850 --> 00:05:56.650
we have an option to take the backup.

00:05:56.650 --> 00:05:58.400
You take the backup and,

00:05:58.400 --> 00:06:00.090
in case often a disaster.

00:06:00.090 --> 00:06:02.600
Or if you lose your data in future,

00:06:02.600 --> 00:06:06.600
you can then restore the database and put things back on track.

00:06:06.600 --> 00:06:13.250
So recovery is being able to record the data and gets off data loss.

00:06:13.250 --> 00:06:16.150
You can also have automatic recovery.

00:06:16.150 --> 00:06:17.220
In fact,

00:06:17.220 --> 00:06:17.780
that's one off.

00:06:17.780 --> 00:06:24.940
The major features off DBM s is to be able to replicate the database on multiple locations

00:06:24.940 --> 00:06:24.940
.

00:06:24.940 --> 00:06:25.880
For example,

00:06:25.880 --> 00:06:30.180
let's say that you have multiple database servers were sitting on two different

00:06:30.180 --> 00:06:36.350
geographical locations and at the same time both the service would have exact same data

00:06:36.350 --> 00:06:37.950
without any mismatch.

00:06:37.950 --> 00:06:42.430
And in an event off loss of data on one of the servers,

00:06:42.430 --> 00:06:45.850
the others are is going to help recover the data.

00:06:45.850 --> 00:06:50.350
So it's one of the prominent features used in the industry as well,

00:06:50.350 --> 00:06:53.490
and d b a missile of us to switch to alternate.

00:06:53.490 --> 00:06:54.810
It's as well to more.

00:06:54.810 --> 00:06:58.200
If you decide to use another provider off DBM s.

00:06:58.200 --> 00:07:05.520
Maybe one of the other options we have here then it's not a very huge task to do that.

00:07:05.520 --> 00:07:13.140
You can easily switch because ultimately all this DBM a softness follow standard language,

00:07:13.140 --> 00:07:13.710
the structure,

00:07:13.710 --> 00:07:14.700
clear language,

00:07:14.700 --> 00:07:18.090
it can gender its SQL from the existing database.

00:07:18.090 --> 00:07:21.770
Run those instructions on another database and you're good to go.

00:07:21.770 --> 00:07:24.900
D bm us offers better transaction management,

00:07:24.900 --> 00:07:26.130
everything number.

00:07:26.130 --> 00:07:27.450
This is transaction.

00:07:27.450 --> 00:07:30.350
So let's talk about the transaction.

00:07:30.350 --> 00:07:34.990
Transaction is simply set off logically related sequence of actions.

00:07:34.990 --> 00:07:37.150
Let me just give you a quick example.

00:07:37.150 --> 00:07:45.440
Consider the following case where the person A has 1000 in his bank account and similarly

00:07:45.440 --> 00:07:48.350
be is also having 1000 in his account.

00:07:48.350 --> 00:07:56.750
Now let's say that a wants to send 200 to be now here is the sequence off steps which are

00:07:56.750 --> 00:08:01.610
logically related to perform this transaction or,

00:08:01.610 --> 00:08:02.470
in other words,

00:08:02.470 --> 00:08:04.390
in our transaction logic.

00:08:04.390 --> 00:08:06.220
This is what we're going to do.

00:08:06.220 --> 00:08:08.150
We're going to read the balance off A,

00:08:08.150 --> 00:08:12.390
which will be 1000 then we'll read the balance off B,

00:08:12.390 --> 00:08:14.240
which will also be 1000.

00:08:14.240 --> 00:08:19.950
We didn't 200 from a and then we credit that amount to be second,

00:08:19.950 --> 00:08:27.570
so a is will become 800 bees balance will become 1200 now.

00:08:27.570 --> 00:08:29.070
This is a simple example.

00:08:29.070 --> 00:08:30.050
Off transaction.

00:08:30.050 --> 00:08:36.680
Now let's see how dbm this is going to ensure reliability and consistency.

00:08:36.680 --> 00:08:37.340
Basically,

00:08:37.340 --> 00:08:45.080
it's going to follow this principle called acid properties A stands for a Thomas City See

00:08:45.080 --> 00:08:46.350
for consistency.

00:08:46.350 --> 00:08:47.070
Hi,

00:08:47.070 --> 00:08:49.750
for isolation D for durability.

00:08:49.750 --> 00:08:59.350
Thomas City insurers that the transaction takes place either completely are nothing or no

00:08:59.350 --> 00:09:00.950
transaction will take place.

00:09:00.950 --> 00:09:03.050
But not in between.

00:09:03.050 --> 00:09:06.510
Let us say that our dbm mrs not atomic in nature,

00:09:06.510 --> 00:09:08.900
Then that's going to cause problem.

00:09:08.900 --> 00:09:10.750
Let us consider the same example.

00:09:10.750 --> 00:09:17.580
What if my logic has deducted 200 from years account?

00:09:17.580 --> 00:09:20.600
But when I'm trying to execute this,

00:09:20.600 --> 00:09:22.350
maybe I lost my connection.

00:09:22.350 --> 00:09:24.070
Or maybe there is a park it,

00:09:24.070 --> 00:09:29.820
then this is going to result in debating the amount from years ago,

00:09:29.820 --> 00:09:34.050
but not but not crediting the amount to the bee's account.

00:09:34.050 --> 00:09:39.800
So at Thomas City insurers that either all these actions will take place or if the

00:09:39.800 --> 00:09:41.610
transaction failed somewhere in the middle,

00:09:41.610 --> 00:09:44.280
then nothing will be taking effect.

00:09:44.280 --> 00:09:47.590
You will still have the same old balance.

00:09:47.590 --> 00:09:56.090
Off 1000 consistency ensures that the database remaining consistent state even after a

00:09:56.090 --> 00:09:58.800
transaction has an example.

00:09:58.800 --> 00:10:00.730
The total amount of this,

00:10:00.730 --> 00:10:06.090
too and B is 2000 and after the transaction,

00:10:06.090 --> 00:10:07.760
it's still 2000.

00:10:07.760 --> 00:10:11.150
So that means our databases and consistent state.

00:10:11.150 --> 00:10:16.750
This is just to give an example off what it means to maintain a consistent data.

00:10:16.750 --> 00:10:21.250
And another important feature off transaction is isolation.

00:10:21.250 --> 00:10:26.270
Each and every individual transition needs to be executed in isolation.

00:10:26.270 --> 00:10:28.690
Let's see what problem with my face.

00:10:28.690 --> 00:10:31.550
If there is no concept off isolation,

00:10:31.550 --> 00:10:34.340
let's consider a similar example.

00:10:34.340 --> 00:10:38.380
Let's say that he has decided to send two under.

00:10:38.380 --> 00:10:40.800
Toby has alas,

00:10:40.800 --> 00:10:41.750
too,

00:10:41.750 --> 00:10:43.280
Mr C.

00:10:43.280 --> 00:10:44.810
So we're going tohave.

00:10:44.810 --> 00:10:48.730
Same set off transactional instructions for C as well.

00:10:48.730 --> 00:10:50.710
So this going to be see,

00:10:50.710 --> 00:10:51.650
for instance,

00:10:51.650 --> 00:10:52.680
No,

00:10:52.680 --> 00:10:57.550
let's say that we're performing those two transactions in one goal,

00:10:57.550 --> 00:11:06.150
or let me just quickly copy this and do seems it off Transaction for se.

00:11:06.150 --> 00:11:06.750
See?

00:11:06.750 --> 00:11:13.980
So this is how it's going to look like.

00:11:13.980 --> 00:11:18.260
So what this transaction are going to go simultaneously?

00:11:18.260 --> 00:11:19.190
Letter resume.

00:11:19.190 --> 00:11:20.200
Now,

00:11:20.200 --> 00:11:23.890
when you try to execute step number three simultaneously,

00:11:23.890 --> 00:11:29.950
then both these transactions are going to deduct 200 from that count.

00:11:29.950 --> 00:11:36.380
But do they can note by the time these transactions are going to deduct 200 the current

00:11:36.380 --> 00:11:37.910
balance off A.

00:11:37.910 --> 00:11:39.950
In both this transaction is 1000.

00:11:39.950 --> 00:11:44.770
So all the way directed 200 from both this transaction.

00:11:44.770 --> 00:11:45.480
Ultimately,

00:11:45.480 --> 00:11:49.450
it's going to result in only direction off 200.

00:11:49.450 --> 00:11:54.310
And the balance is going to be 800 instead off 600.

00:11:54.310 --> 00:12:01.050
So you flee exhibited these transactions one at a time in isolation.

00:12:01.050 --> 00:12:08.080
Then this transaction will take place first and the balance will become 800.

00:12:08.080 --> 00:12:15.730
And then comes this transaction to send the funds to person C and then the resultant while

00:12:15.730 --> 00:12:22.140
they will become 600 ultimately so But son do those changes.

00:12:22.140 --> 00:12:22.490
So,

00:12:22.490 --> 00:12:23.390
ultimately,

00:12:23.390 --> 00:12:28.550
isolation play a great role in performing transactions.

00:12:28.550 --> 00:12:35.890
The durability insures that the transaction doesnt lead to inconsistent database in case

00:12:35.890 --> 00:12:38.370
off power outage or network outage,

00:12:38.370 --> 00:12:40.990
or in case off system or load etcetera.

00:12:40.990 --> 00:12:48.570
So all these features off database ultimately is going to help us perform transactions in

00:12:48.570 --> 00:12:49.850
most reliable way.

00:12:49.850 --> 00:12:59.090
So clearly combat Teoh storing data in traditional way Devi Mrs Clearly the option.

00:12:59.090 --> 00:13:07.390
Unless you have a very simple application which has only say a page off data,

00:13:07.390 --> 00:13:11.780
then then it's OK to deal with XML Czar are in associate,

00:13:11.780 --> 00:13:16.150
But most likely your options should be a database.

00:13:16.150 --> 00:13:17.760
All right,

00:13:17.760 --> 00:13:18.850
see you in my next video.

