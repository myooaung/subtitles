WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.910
all right,

00:00:01.910 --> 00:00:05.500
This is going to be a very easy going video as well.

00:00:05.500 --> 00:00:11.970
We're going to take a look at some of the SQL statements with which we can fetch specific

00:00:11.970 --> 00:00:13.550
information from the table.

00:00:13.550 --> 00:00:15.390
And for this purpose,

00:00:15.390 --> 00:00:17.800
we're going to use the where clause,

00:00:17.800 --> 00:00:22.980
which would actually help us stretch details from the table based on the specified

00:00:22.980 --> 00:00:23.640
condition.

00:00:23.640 --> 00:00:28.650
And when you combine the where clause within and between,

00:00:28.650 --> 00:00:30.990
we can do already off things,

00:00:30.990 --> 00:00:33.950
and those are all demonstrated in these examples.

00:00:33.950 --> 00:00:35.110
First,

00:00:35.110 --> 00:00:40.860
let's talk about the bear claws we're going to say select and the list off column that

00:00:40.860 --> 00:00:48.770
you'd like to display from the students table where this condition is met in this case or

00:00:48.770 --> 00:00:54.530
condition is the age field must have the value greater than 25.

00:00:54.530 --> 00:00:58.810
And the student name has to be Krish.

00:00:58.810 --> 00:01:05.100
Whichever the records that match this condition would be returned by the statement.

00:01:05.100 --> 00:01:06.820
It's as simple as that.

00:01:06.820 --> 00:01:11.840
And if you would like to take a look at where he has different operators that we can use

00:01:11.840 --> 00:01:13.350
like we've used here,

00:01:13.350 --> 00:01:19.940
then I've created this document for you operators Doc txt even download and take a look at

00:01:19.940 --> 00:01:21.450
all the list off operators.

00:01:21.450 --> 00:01:24.350
If you're ever off any programming language,

00:01:24.350 --> 00:01:26.670
this should be pretty straightforward,

00:01:26.670 --> 00:01:32.850
and the next instruction would actually pretty much the same instruction.

00:01:32.850 --> 00:01:43.670
Except we're using the are operator to fetch the list off students whose ages 8 to 25 or 28

00:01:43.670 --> 00:01:44.850
as simple as that.

00:01:44.850 --> 00:01:46.480
Alternatively,

00:01:46.480 --> 00:01:50.780
we can accomplish the same task by using the key word in,

00:01:50.780 --> 00:01:57.750
and you'd specify the list off values this does you see here so in is kind of like an

00:01:57.750 --> 00:01:59.850
alternative to our.

00:01:59.850 --> 00:02:03.310
The only difference is if you're using in,

00:02:03.310 --> 00:02:06.550
then that's going to make all statement look more readable.

00:02:06.550 --> 00:02:09.260
Little come backed nothing different,

00:02:09.260 --> 00:02:10.270
and similarly,

00:02:10.270 --> 00:02:18.170
we can also use between to be able to fetch the students whose ages between 25 35.

00:02:18.170 --> 00:02:22.860
You can accomplish the same by using the end.

00:02:22.860 --> 00:02:23.770
For example,

00:02:23.770 --> 00:02:28.650
I'm going to say which all the student details from students Table,

00:02:28.650 --> 00:02:34.470
whose age is greater than 25 and age is less than 35.

00:02:34.470 --> 00:02:39.150
That's as good as saying between 25 to 35 years of age.

00:02:39.150 --> 00:02:48.380
You can also use this key would not between that is just simply opposite off between So we

00:02:48.380 --> 00:02:57.210
get all the student details whose age is not in between 25 to 35 and we have this fetch.

00:02:57.210 --> 00:03:00.560
This is like the sq limit key would.

00:03:00.560 --> 00:03:03.620
But the limit keyword is not a standard.

00:03:03.620 --> 00:03:05.350
Ask your key would,

00:03:05.350 --> 00:03:06.230
so you had better.

00:03:06.230 --> 00:03:07.860
Always use fetch instead.

00:03:07.860 --> 00:03:13.380
So what this does is it would help us limit the number off roars return from the quickie,

00:03:13.380 --> 00:03:16.150
an example of which you can see here.

00:03:16.150 --> 00:03:25.220
Select column names from students where age is greater than 25 we're saying Fetch Castro

00:03:25.220 --> 00:03:26.940
Only that means,

00:03:26.940 --> 00:03:29.180
as the statement suggests,

00:03:29.180 --> 00:03:36.150
it would only fetch one single row that gets found based on the condition we provide.

00:03:36.150 --> 00:03:37.450
And similarly,

00:03:37.450 --> 00:03:42.520
you can also specify the number off Rose that you would like to see a retreat.

00:03:42.520 --> 00:03:43.710
In this case,

00:03:43.710 --> 00:03:45.610
it's three pretty easy,

00:03:45.610 --> 00:03:46.090
right.

00:03:46.090 --> 00:03:51.530
SQL is also indeed one of the easiest language off the HTML.

00:03:51.530 --> 00:03:52.290
Of course,

00:03:52.290 --> 00:03:59.810
Next comes the keyword like and it would basically help us return The rose from a query

00:03:59.810 --> 00:04:01.950
based on the matching Patton,

00:04:01.950 --> 00:04:03.850
for example,

00:04:03.850 --> 00:04:12.220
in here were saying select star from students were student name like the pattern.

00:04:12.220 --> 00:04:18.470
This means any student name who has the letter A are would be fetched.

00:04:18.470 --> 00:04:21.830
And in here it's the opposite.

00:04:21.830 --> 00:04:24.970
You can also say not like so we would get less off.

00:04:24.970 --> 00:04:32.590
Students whose name does not contain a are the person date symbol is kind of like a

00:04:32.590 --> 00:04:36.050
placeholder for any other list of characters.

00:04:36.050 --> 00:04:37.800
Alternatively,

00:04:37.800 --> 00:04:39.810
you can also use underscore.

00:04:39.810 --> 00:04:40.950
Which means,

00:04:40.950 --> 00:04:41.670
for example,

00:04:41.670 --> 00:04:43.550
if you take a look at this Patton,

00:04:43.550 --> 00:04:46.500
then this means we wanted to fetch list.

00:04:46.500 --> 00:04:54.150
Or students whose name has three characters and the center character must be s.

00:04:54.150 --> 00:04:55.660
That's how it goes.

00:04:55.660 --> 00:04:57.280
Hope that makes sense.

00:04:57.280 --> 00:04:58.650
See you in my next video.

