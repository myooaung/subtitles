WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.120
in this video,

00:00:01.120 --> 00:00:03.100
we're going to talk about model,

00:00:03.100 --> 00:00:03.310
view,

00:00:03.310 --> 00:00:06.680
controller architecture or simply embassy architecture.

00:00:06.680 --> 00:00:08.130
In fact,

00:00:08.130 --> 00:00:13.650
we're going to go ahead and make changes to our code to make it fit for NBC architecture.

00:00:13.650 --> 00:00:16.640
So what is embassy architecture?

00:00:16.640 --> 00:00:19.070
It is one of the design patents.

00:00:19.070 --> 00:00:20.600
So now what is a design?

00:00:20.600 --> 00:00:22.150
Patton at Design?

00:00:22.150 --> 00:00:26.740
Patton is actually I tried and experimented way off,

00:00:26.740 --> 00:00:31.840
logically dividing the code so that it will address a certain problem.

00:00:31.840 --> 00:00:34.600
We have many different design patterns,

00:00:34.600 --> 00:00:35.360
but we're not.

00:00:35.360 --> 00:00:39.650
The popular one is the MBC designed Patton,

00:00:39.650 --> 00:00:42.150
or sometimes referred as embassy architecture.

00:00:42.150 --> 00:00:43.720
In fact,

00:00:43.720 --> 00:00:47.940
we will mix multiple design patterns to address multiple problems.

00:00:47.940 --> 00:00:49.420
But in this video,

00:00:49.420 --> 00:00:52.430
we're just concerned about one specific design pattern,

00:00:52.430 --> 00:00:53.120
and that's M.

00:00:53.120 --> 00:00:53.750
V C.

00:00:53.750 --> 00:00:55.410
So before we talk about it,

00:00:55.410 --> 00:01:00.440
let us try to understand the problem we have with the current code in this code were

00:01:00.440 --> 00:01:02.430
actually mixing multiple things.

00:01:02.430 --> 00:01:07.590
We have a piece off court that actually helps us connect to the database and to to some

00:01:07.590 --> 00:01:08.450
information.

00:01:08.450 --> 00:01:14.190
We also have a piss off court that is majorly meant for presentation purposes.

00:01:14.190 --> 00:01:14.820
I mean,

00:01:14.820 --> 00:01:16.460
the client side technologies like esteem,

00:01:16.460 --> 00:01:17.250
etcetera,

00:01:17.250 --> 00:01:19.350
so they're mixing.

00:01:19.350 --> 00:01:22.460
These two technologies here along with that,

00:01:22.460 --> 00:01:26.750
were also including the court that deals with the database.

00:01:26.750 --> 00:01:27.780
Well,

00:01:27.780 --> 00:01:30.230
this is OK in our simple example,

00:01:30.230 --> 00:01:31.260
but in real world,

00:01:31.260 --> 00:01:34.250
when you have thousands off files in your project,

00:01:34.250 --> 00:01:37.090
it becomes very tedious or,

00:01:37.090 --> 00:01:37.740
I should say,

00:01:37.740 --> 00:01:44.100
impossible to maintain the code because we want multiple developers working on their

00:01:44.100 --> 00:01:46.180
specific technology that they're good at.

00:01:46.180 --> 00:01:51.640
We don't want to mix all these three different sections together and create problems.

00:01:51.640 --> 00:01:54.590
This doesn't let the dollar purse work seamlessly,

00:01:54.590 --> 00:01:59.050
so the solution is obviously the embassy architecture.

00:01:59.050 --> 00:02:05.570
So what we're basically going to do is we're going to take out the code that is specific to

00:02:05.570 --> 00:02:09.470
database into another section or another file,

00:02:09.470 --> 00:02:17.690
and we're also going to take out the view part or the HTML code has part off a JSP file and

00:02:17.690 --> 00:02:18.070
the soul.

00:02:18.070 --> 00:02:25.740
It is actually going to act like a mediator between the JSP as well as the data best code.

00:02:25.740 --> 00:02:29.490
So let me go toe white board and try to explain what I mean.

00:02:29.490 --> 00:02:33.240
So here's how our current example is written.

00:02:33.240 --> 00:02:36.440
We have the data best code history.

00:02:36.440 --> 00:02:40.550
McCord has allows the business logic written under a Soviet.

00:02:40.550 --> 00:02:46.410
So what we're going to do now is we're going to take out this data best code and put it in

00:02:46.410 --> 00:02:47.340
another file.

00:02:47.340 --> 00:02:52.060
We call it model because we're sort of dealing with the data best model.

00:02:52.060 --> 00:02:53.290
And this,

00:02:53.290 --> 00:02:59.390
while will now have the cord that help us connect to the database as a less perform the

00:02:59.390 --> 00:03:02.020
crowd operations on the data base.

00:03:02.020 --> 00:03:02.830
Similar.

00:03:02.830 --> 00:03:09.440
We're going to actually take out this view court or the presentation code or the code that

00:03:09.440 --> 00:03:12.990
helps us with the presentation aspect off for application.

00:03:12.990 --> 00:03:17.450
We're going to take it out and put it under a JSP file,

00:03:17.450 --> 00:03:25.830
and we call it view because this is what the user would actually view on the browser and

00:03:25.830 --> 00:03:28.290
the business logic would remain in Seoul.

00:03:28.290 --> 00:03:32.730
It So now we know what is a model and what is the view.

00:03:32.730 --> 00:03:35.030
But what is controller ourselves?

00:03:35.030 --> 00:03:39.670
It is actually going to control the flow off our application.

00:03:39.670 --> 00:03:41.630
So here's how it is going to work.

00:03:41.630 --> 00:03:44.150
Like once the Euro request is placed,

00:03:44.150 --> 00:03:49.980
the request would first land on the sole it the logic inside the soul.

00:03:49.980 --> 00:03:56.250
It will then decide whether the request has any need with the database.

00:03:56.250 --> 00:03:58.010
If it is a case,

00:03:58.010 --> 00:04:02.040
it's actually going to fetch the required data from the database.

00:04:02.040 --> 00:04:03.800
By using the moral logic,

00:04:03.800 --> 00:04:09.530
it would connect to the database as well as do necessary operations with the database and

00:04:09.530 --> 00:04:11.100
finally get some response.

00:04:11.100 --> 00:04:12.890
Once it does that,

00:04:12.890 --> 00:04:18.010
the soul that will also take care off transferring that data that needs to present it to

00:04:18.010 --> 00:04:23.250
the user by making it part off a para meter to the view section,

00:04:23.250 --> 00:04:25.950
which will be the JSP.

00:04:25.950 --> 00:04:31.810
So now eat one off these modules will have their individual responsibilities.

00:04:31.810 --> 00:04:32.860
The model is taken.

00:04:32.860 --> 00:04:34.480
Care off the database.

00:04:34.480 --> 00:04:37.580
The JSP are the view part is taken.

00:04:37.580 --> 00:04:41.630
Care off the presentation aspect off your application and the soul.

00:04:41.630 --> 00:04:45.690
It is actually going to act like a mediator or the controller,

00:04:45.690 --> 00:04:48.490
which will control the flow off your application.

00:04:48.490 --> 00:04:52.380
This would make sense once we go through the example.

00:04:52.380 --> 00:04:54.990
So let's go back to our eclipse.

00:04:54.990 --> 00:05:04.480
I'm actually going to create a brand new project and do everything from scratch because

00:05:04.480 --> 00:05:11.050
it's not easy to digest for first timers someone to create a new dynamic where project that

00:05:11.050 --> 00:05:11.950
search for it.

00:05:11.950 --> 00:05:22.240
I went to call it First NBC application and click finish.

00:05:22.240 --> 00:05:29.150
The first thing that I'm going to do is to create the model.

00:05:29.150 --> 00:05:33.070
Let me create a new class file.

00:05:33.070 --> 00:05:34.450
I'll call it.

00:05:34.450 --> 00:05:37.660
It was Grease.

00:05:37.660 --> 00:05:39.450
Dow.

00:05:39.450 --> 00:05:42.050
Now what does this Dow stand for?

00:05:42.050 --> 00:05:44.430
The house stands for data access.

00:05:44.430 --> 00:05:45.110
Object.

00:05:45.110 --> 00:05:47.420
Once you create an object off this class,

00:05:47.420 --> 00:05:50.320
he can use that object to access the database.

00:05:50.320 --> 00:05:51.750
So that's what it meant.

00:05:51.750 --> 00:05:53.000
Data Access.

00:05:53.000 --> 00:05:53.550
Object.

00:05:53.550 --> 00:05:59.220
It's a good naming convention with softer dollar purse use for these kind of class files,

00:05:59.220 --> 00:06:02.090
so let's click finish now.

00:06:02.090 --> 00:06:06.040
The first thing that I'm going to do is to introduce a constructor that's going to accept

00:06:06.040 --> 00:06:11.150
the connection para meters that will help deposed with driver connect to the post grease

00:06:11.150 --> 00:06:13.590
database to perform more tests.

00:06:13.590 --> 00:06:19.180
So let me pause the video right here and introduce a few fields.

00:06:19.180 --> 00:06:23.630
So I have these four feels defined,

00:06:23.630 --> 00:06:24.810
which will be Excalibur,

00:06:24.810 --> 00:06:26.150
the connection para meters.

00:06:26.150 --> 00:06:29.670
Now let us go ahead and use the eclipse feature to auto gender.

00:06:29.670 --> 00:06:35.950
The constructor for us went to go to source generate constructor using fields.

00:06:35.950 --> 00:06:37.750
I'm going to choose all of them.

00:06:37.750 --> 00:06:39.160
Click OK,

00:06:39.160 --> 00:06:47.320
let me give my court proper for mating beheading control shift f I mean poured this class

00:06:47.320 --> 00:06:48.370
file which is missing.

00:06:48.370 --> 00:06:55.760
Now the next thing that I'm going to do is to introducing method that will fetch all the

00:06:55.760 --> 00:07:00.250
student details from the posibles database that is currently running.

00:07:00.250 --> 00:07:06.730
So our matter would take no para meters but would return list off students.

00:07:06.730 --> 00:07:07.560
So now,

00:07:07.560 --> 00:07:10.350
in order to create list off students,

00:07:10.350 --> 00:07:13.550
we now need to create a student class.

00:07:13.550 --> 00:07:17.750
Let's do that when directed here,

00:07:17.750 --> 00:07:19.290
new class.

00:07:19.290 --> 00:07:21.650
I'm going to say student,

00:07:21.650 --> 00:07:28.880
this class will actually help us hold student information temporarily for our activities.

00:07:28.880 --> 00:07:31.950
You will see how it is used in a while.

00:07:31.950 --> 00:07:34.010
Click finish.

00:07:34.010 --> 00:07:38.450
So we have these two files here.

00:07:38.450 --> 00:07:45.060
So now this student class for will have the fields that corresponds to the fields in the

00:07:45.060 --> 00:07:48.500
students table we have in database again.

00:07:48.500 --> 00:07:53.080
Let me just quickly pause the video while I write all the fields.

00:07:53.080 --> 00:07:55.570
So I've created this four fields.

00:07:55.570 --> 00:08:03.960
Let me make use off eclipse building feature to create the constructive for us which will

00:08:03.960 --> 00:08:08.570
accept all those fields so that now,

00:08:08.570 --> 00:08:09.800
when you're creating this object,

00:08:09.800 --> 00:08:13.150
we can also pass in some details like i d name,

00:08:13.150 --> 00:08:20.440
age etcetera to create that object also would like to introduce some ghettos and settles

00:08:20.440 --> 00:08:22.350
for all these fields again,

00:08:22.350 --> 00:08:31.370
it's always better that you use the art of generate feature so that you don't make silly

00:08:31.370 --> 00:08:32.140
mystics.

00:08:32.140 --> 00:08:38.130
So we got everything set our student classes ready.

00:08:38.130 --> 00:08:39.770
Now we can go back end,

00:08:39.770 --> 00:08:41.150
right that mattered.

00:08:41.150 --> 00:08:43.000
So it's public.

00:08:43.000 --> 00:08:46.490
It's going to return list off students.

00:08:46.490 --> 00:08:53.080
I went named the method as get student list,

00:08:53.080 --> 00:09:01.150
hoping in closing curly braces you to list.

00:09:01.150 --> 00:09:02.150
Okay,

00:09:02.150 --> 00:09:04.750
there is quite a bit off court that's going to go in here,

00:09:04.750 --> 00:09:10.740
So let me just save your time pausing this video and I'll walk you through the code.

00:09:10.740 --> 00:09:12.010
Okay,

00:09:12.010 --> 00:09:12.970
here's our code.

00:09:12.970 --> 00:09:17.050
Were just simply doing whatever we have done in our previous example,

00:09:17.050 --> 00:09:23.870
trying to fetch all the student details by this query and before we're trying to execute

00:09:23.870 --> 00:09:27.560
this query were actually connecting to the database by calling this method,

00:09:27.560 --> 00:09:29.390
which is also written by me.

00:09:29.390 --> 00:09:30.690
And in the end,

00:09:30.690 --> 00:09:32.250
once we're done with the operation,

00:09:32.250 --> 00:09:34.570
we're disconnecting as well.

00:09:34.570 --> 00:09:37.450
So here are the two methods to connect a data base,

00:09:37.450 --> 00:09:42.860
which is is simply lowering the driver as allows creating the connection object by using

00:09:42.860 --> 00:09:47.650
the driver manager and in this kind were just simply closing the connection.

00:09:47.650 --> 00:09:51.150
Pretty simple and straightforward.

00:09:51.150 --> 00:09:54.940
And in order to see if this is working,

00:09:54.940 --> 00:09:58.050
you can just simply create a class well with public sadiq void main,

00:09:58.050 --> 00:10:02.890
create an instance off this class and try to call this method.

00:10:02.890 --> 00:10:08.520
If that results in extracting information from the database,

00:10:08.520 --> 00:10:10.610
which in our case is going to believe star students,

00:10:10.610 --> 00:10:12.780
then it's working.

00:10:12.780 --> 00:10:15.050
So that's how you test.

00:10:15.050 --> 00:10:20.050
I didn't do that because I think this will pretty much will work.

00:10:20.050 --> 00:10:23.650
We've already used the same court in our previous example,

00:10:23.650 --> 00:10:26.380
so I'm quite confident about it.

00:10:26.380 --> 00:10:28.310
But if something goes wrong,

00:10:28.310 --> 00:10:32.180
then I walk it through what we can do about it as well.

00:10:32.180 --> 00:10:37.300
So the next step that we're going to do is our controller logic,

00:10:37.300 --> 00:10:38.970
which will be a soul.

00:10:38.970 --> 00:10:52.290
It So let's create another class file and let's call it so lift controller hit finish.

00:10:52.290 --> 00:10:56.280
Well,

00:10:56.280 --> 00:10:56.670
actually,

00:10:56.670 --> 00:11:02.050
I should have just created a solar that would bring those methods by default,

00:11:02.050 --> 00:11:19.740
immigrated off this and create a Soviet look finish.

00:11:19.740 --> 00:11:28.700
So this is what I was talking about in the new project.

00:11:28.700 --> 00:11:31.370
We don't have our soul that jar imported,

00:11:31.370 --> 00:11:33.550
So let's do that quickly.

00:11:33.550 --> 00:11:49.680
Bill Part Had external jars search for Soledad FBI Helped by and close Let me get it off

00:11:49.680 --> 00:11:51.710
all this unnecessary junk.

00:11:51.710 --> 00:11:54.370
It's unnecessary for now,

00:11:54.370 --> 00:11:55.400
in real world,

00:11:55.400 --> 00:12:00.190
Cummings do have importance.

00:12:00.190 --> 00:12:01.630
Well,

00:12:01.630 --> 00:12:01.930
again,

00:12:01.930 --> 00:12:02.640
let me this pause.

00:12:02.640 --> 00:12:04.550
The video doesn't clean up.

00:12:04.550 --> 00:12:05.590
Also,

00:12:05.590 --> 00:12:10.730
I would like to introduce the method that will actually help us connect to the database.

00:12:10.730 --> 00:12:13.610
Isn't the Dow plans that were created?

00:12:13.610 --> 00:12:16.450
So here's a cord.

00:12:16.450 --> 00:12:21.570
So during the initialization face off the soul it we're trying to connect to the database,

00:12:21.570 --> 00:12:27.560
but there's little modification that I would like to make is basically we're trying to

00:12:27.560 --> 00:12:30.100
accept the connection as an argument.

00:12:30.100 --> 00:12:31.160
We don't need it,

00:12:31.160 --> 00:12:34.550
so I'm just simply getting rid off it.

00:12:34.550 --> 00:12:37.750
And same thing goes here as well.

00:12:37.750 --> 00:12:40.460
Let's have the file now.

00:12:40.460 --> 00:12:47.600
What comes next is I'm going to introduce piece off code that will call this method to

00:12:47.600 --> 00:12:49.150
fetch all the student details,

00:12:49.150 --> 00:12:57.940
and those student details will be sent to the JSP page where we present those details to

00:12:57.940 --> 00:12:59.820
the user on the browser.

00:12:59.820 --> 00:13:03.850
So let us introduce the JSP file into a project.

00:13:03.850 --> 00:13:11.750
So I'm going to say new JSP file.

00:13:11.750 --> 00:13:19.330
I'm going to call this as JSP View and like,

00:13:19.330 --> 00:13:25.380
finish again in order to save your time.

00:13:25.380 --> 00:13:27.850
Let me write the code and get back.

00:13:27.850 --> 00:13:30.580
All right,

00:13:30.580 --> 00:13:34.270
so everything that you're seeing in here is very straightforward,

00:13:34.270 --> 00:13:36.960
but this is the court off significance.

00:13:36.960 --> 00:13:41.070
We're trying to look through the student list now.

00:13:41.070 --> 00:13:46.240
What is the student list is just simply the request attribute that will have all the

00:13:46.240 --> 00:13:47.540
student information.

00:13:47.540 --> 00:13:55.290
And we're going to populate this attribute in our soul it by fetching the data using the

00:13:55.290 --> 00:13:56.550
data access object.

00:13:56.550 --> 00:13:59.150
So let's do that in here.

00:13:59.150 --> 00:14:01.450
List off students.

00:14:01.450 --> 00:14:09.250
Student list equals on when to make use off this object.

00:14:09.250 --> 00:14:14.260
Get student list.

00:14:14.260 --> 00:14:16.900
I mean,

00:14:16.900 --> 00:14:17.650
port.

00:14:17.650 --> 00:14:22.570
The list interface is going to throw an exception.

00:14:22.570 --> 00:14:24.280
So it's try captured.

00:14:24.280 --> 00:14:32.900
Now I'm going to say request not said attribute.

00:14:32.900 --> 00:14:34.650
Let's give it some name,

00:14:34.650 --> 00:14:39.950
basically to give the same name what you're trying to read here.

00:14:39.950 --> 00:14:42.650
So let's copy invested here,

00:14:42.650 --> 00:14:46.770
and this will be the value.

00:14:46.770 --> 00:14:54.100
So now we're going to use the request dispatcher to forward this request to this jsp along

00:14:54.100 --> 00:15:01.250
with this attribute so that we can then read all the student details and render them one by

00:15:01.250 --> 00:15:01.650
one,

00:15:01.650 --> 00:15:18.870
because dispatcher equals request dot get request dispatcher and then you'll specify the

00:15:18.870 --> 00:15:38.050
name of the JSP file view dot Js be and then simply dispatcher dot forward request and

00:15:38.050 --> 00:15:39.560
response.

00:15:39.560 --> 00:15:44.260
All or nothing,

00:15:44.260 --> 00:15:45.350
this would suffice.

00:15:45.350 --> 00:15:49.420
Let's clean our project hard to simply run,

00:15:49.420 --> 00:15:56.410
since we're doing it for the first time going to run this application random.

00:15:56.410 --> 00:15:56.990
Several.

00:15:56.990 --> 00:16:13.270
It's going to It's going to take a while,

00:16:13.270 --> 00:16:23.550
Okay,

00:16:23.550 --> 00:16:24.160
as usual,

00:16:24.160 --> 00:16:26.130
eclipses and knowing at times.

00:16:26.130 --> 00:16:34.610
But so let's that's tried to clean the project and tried to run again and hopefully to work

00:16:34.610 --> 00:16:35.450
this time.

00:16:35.450 --> 00:17:01.200
And as for amounts over all right,

00:17:01.200 --> 00:17:04.950
sure enough were able to list all the students.

00:17:04.950 --> 00:17:12.000
So although the first lands this looks like we have actually increased the number of files

00:17:12.000 --> 00:17:13.240
and number of lines of code,

00:17:13.240 --> 00:17:19.500
this approach will actually be a lot beneficial in large scale projects.

00:17:19.500 --> 00:17:21.830
I hope that makes sense.

00:17:21.830 --> 00:17:22.670
See you soon

