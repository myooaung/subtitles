WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.530
in this video,

00:00:02.530 --> 00:00:07.180
we're going to take a look at various application architectures and see where DB a mess

00:00:07.180 --> 00:00:08.280
will come into picture.

00:00:08.280 --> 00:00:09.730
But before that,

00:00:09.730 --> 00:00:13.400
let us try to understand where he is competent involved,

00:00:13.400 --> 00:00:15.660
to form a database management system.

00:00:15.660 --> 00:00:20.770
The basic component is the hardware that's great.

00:00:20.770 --> 00:00:23.250
That's where the software will get installed,

00:00:23.250 --> 00:00:25.150
your D BMS software.

00:00:25.150 --> 00:00:31.050
And this is a place where the actual raw data will get stored as well.

00:00:31.050 --> 00:00:37.350
So this would basically be your computer or the Silver Harbour very install your D BMS

00:00:37.350 --> 00:00:38.060
software.

00:00:38.060 --> 00:00:43.220
Next comes is a software which is basically the software that you installed on this

00:00:43.220 --> 00:00:49.480
hardware so that you can now start interacting with the database data is simply the raw

00:00:49.480 --> 00:00:51.470
data that is stored in the database.

00:00:51.470 --> 00:00:52.650
In fact,

00:00:52.650 --> 00:00:56.010
it's because of data DBM Mrs.

00:00:56.010 --> 00:01:02.250
Existing procedures are just simply set off procedures that you follow to interact with the

00:01:02.250 --> 00:01:03.060
database.

00:01:03.060 --> 00:01:03.670
I mean,

00:01:03.670 --> 00:01:04.220
if you're falling,

00:01:04.220 --> 00:01:08.930
the instructions on installing this software are to access the data.

00:01:08.930 --> 00:01:13.400
That means you're following that in procedure to interact with the database.

00:01:13.400 --> 00:01:16.670
As simple as that query language is,

00:01:16.670 --> 00:01:21.390
the language is in which you would communicate with the database and use the underlying

00:01:21.390 --> 00:01:22.040
data,

00:01:22.040 --> 00:01:29.050
and we would typically be using Ask your structured query language to be able to do so.

00:01:29.050 --> 00:01:34.570
The query processor is the actual process that will take care off,

00:01:34.570 --> 00:01:37.400
understanding the SQL and do something with it.

00:01:37.400 --> 00:01:38.220
In fact,

00:01:38.220 --> 00:01:44.850
the query process will actually work with the database engine to perform their quite

00:01:44.850 --> 00:01:45.850
operations.

00:01:45.850 --> 00:01:46.790
Basically,

00:01:46.790 --> 00:01:53.490
all the crowd operations that I've talked about and the DB manager is another component

00:01:53.490 --> 00:01:55.650
which will actually help you manage the data.

00:01:55.650 --> 00:01:58.770
It said that you wanted to take the back up off your database.

00:01:58.770 --> 00:02:01.470
That's when the DB manager will come into picture.

00:02:01.470 --> 00:02:06.060
It will help you take backup or record the data etcetera.

00:02:06.060 --> 00:02:09.000
All such kind of additional stuff will be taken care.

00:02:09.000 --> 00:02:14.410
But the DB manager also when I say data that gets stored.

00:02:14.410 --> 00:02:17.050
It also involves meta data,

00:02:17.050 --> 00:02:19.480
which is data aboard the data.

00:02:19.480 --> 00:02:20.370
For example,

00:02:20.370 --> 00:02:25.050
a meta data could be details on when the data is stored,

00:02:25.050 --> 00:02:29.300
or how much size is a store data taking etcetera.

00:02:29.300 --> 00:02:32.750
What comes next is the architecture.

00:02:32.750 --> 00:02:33.700
First,

00:02:33.700 --> 00:02:36.110
let's talk about the one tire architecture er,

00:02:36.110 --> 00:02:38.250
in one time architecture,

00:02:38.250 --> 00:02:43.750
you would interact with the database without having to install a database server,

00:02:43.750 --> 00:02:48.170
which basically means you're just make use off some libraries,

00:02:48.170 --> 00:02:51.860
typically a dark jar file in the context of Java,

00:02:51.860 --> 00:02:56.800
and you would use those libraries to be able to access the underlying database so your

00:02:56.800 --> 00:03:01.820
application logic would directly communicate with the database that is stored in the same

00:03:01.820 --> 00:03:02.550
computer.

00:03:02.550 --> 00:03:07.150
An example off a wonder architecture would be a standalone application.

00:03:07.150 --> 00:03:12.050
All the applications that doesn't have to deal with the outside world,

00:03:12.050 --> 00:03:13.080
for example,

00:03:13.080 --> 00:03:16.030
and anti where software are a browser,

00:03:16.030 --> 00:03:16.940
for instance,

00:03:16.940 --> 00:03:22.450
Although the browser helps us in tracked with rest of the world and access Web applications

00:03:22.450 --> 00:03:22.450
,

00:03:22.450 --> 00:03:25.780
the brother in itself is a standalone application,

00:03:25.780 --> 00:03:27.860
and it typically relies on.

00:03:27.860 --> 00:03:30.150
These embittered databases are,

00:03:30.150 --> 00:03:31.030
in other words,

00:03:31.030 --> 00:03:37.340
without having to install additional data base silver to store the data for the application

00:03:37.340 --> 00:03:37.850
to run.

00:03:37.850 --> 00:03:40.480
Coming to do tire architecture ER,

00:03:40.480 --> 00:03:43.950
you would install a separate database over,

00:03:43.950 --> 00:03:46.800
and your presentation tire would interact with it.

00:03:46.800 --> 00:03:54.150
A good example for this is your using JSP pages for presentation time and from JSP file.

00:03:54.150 --> 00:03:56.390
You're going to have some instructions,

00:03:56.390 --> 00:03:59.060
typically by using and driver like Jerry,

00:03:59.060 --> 00:04:02.950
Busy driver to be able to connect to the server and communicate with it.

00:04:02.950 --> 00:04:03.860
Now,

00:04:03.860 --> 00:04:05.880
in this to their architecture,

00:04:05.880 --> 00:04:07.810
there is no soul that involved.

00:04:07.810 --> 00:04:08.610
JSP,

00:04:08.610 --> 00:04:11.500
which typically falls on the presentation tire,

00:04:11.500 --> 00:04:13.730
would directly interact with the data.

00:04:13.730 --> 00:04:16.400
Best Tire and Tudor architecture.

00:04:16.400 --> 00:04:17.970
A is not a popular one.

00:04:17.970 --> 00:04:23.070
What is popular is treat our architecture or a four tire architecture.

00:04:23.070 --> 00:04:25.390
Let's talk about the treat architecture.

00:04:25.390 --> 00:04:31.380
It simply means we get additional layer in between the presentation tire in the database

00:04:31.380 --> 00:04:31.850
star,

00:04:31.850 --> 00:04:36.640
which is the application tire where you'll have the business logic.

00:04:36.640 --> 00:04:42.320
The presentation tire would come and kill with the application tire and if necessary,

00:04:42.320 --> 00:04:44.070
application Tire logic,

00:04:44.070 --> 00:04:45.650
which is the business logic,

00:04:45.650 --> 00:04:48.820
would connect to the database using the driver Softwares.

00:04:48.820 --> 00:04:51.410
And then it would interact with the database.

00:04:51.410 --> 00:04:59.620
And it would present the data back to the presentation there so that it can render the data

00:04:59.620 --> 00:05:00.450
for the user.

00:05:00.450 --> 00:05:04.020
A typical Web application follows the street architecture,

00:05:04.020 --> 00:05:05.310
but it could be more,

00:05:05.310 --> 00:05:09.520
especially if you want to include additional components like,

00:05:09.520 --> 00:05:10.340
for example,

00:05:10.340 --> 00:05:13.860
enterprise java beans in the context of Java.

00:05:13.860 --> 00:05:17.110
Then we would have a controller layer,

00:05:17.110 --> 00:05:18.470
which will which will be the sole,

00:05:18.470 --> 00:05:24.170
that which will control the flow of execution and then in the application tire will have

00:05:24.170 --> 00:05:25.750
the business logic.

00:05:25.750 --> 00:05:27.730
Arrest all remain same.

00:05:27.730 --> 00:05:31.560
You'll understand more about that architecture model view,

00:05:31.560 --> 00:05:32.270
controller,

00:05:32.270 --> 00:05:33.000
architectural.

00:05:33.000 --> 00:05:34.890
But this is basically it.

00:05:34.890 --> 00:05:36.780
Also,

00:05:36.780 --> 00:05:38.560
I could have talked about where he is.

00:05:38.560 --> 00:05:39.750
Different data.

00:05:39.750 --> 00:05:41.220
Best models available.

00:05:41.220 --> 00:05:42.580
But let me tell you,

00:05:42.580 --> 00:05:46.720
the most popular more 11 days is relational database.

00:05:46.720 --> 00:05:48.850
Moral period.

00:05:48.850 --> 00:05:52.900
There is no substitute for that as off now.

00:05:52.900 --> 00:05:59.110
So there's no point in discussing all those old models which were used in 19 seventies and

00:05:59.110 --> 00:05:59.950
19 eighties.

00:05:59.950 --> 00:06:03.750
They're off no significance at this point.

00:06:03.750 --> 00:06:04.990
So in my next video,

00:06:04.990 --> 00:06:10.590
we're going to talk about the relational data best model and see some of the terminology is

00:06:10.590 --> 00:06:11.410
involved in it.

00:06:11.410 --> 00:06:13.150
See you soon.

