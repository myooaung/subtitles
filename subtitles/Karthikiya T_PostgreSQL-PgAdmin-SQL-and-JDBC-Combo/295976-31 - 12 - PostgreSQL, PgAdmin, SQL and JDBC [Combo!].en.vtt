WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.170
So the $1,000,000 question.

00:00:02.170 --> 00:00:03.120
What is Jonah?

00:00:03.120 --> 00:00:05.400
The simple answer would be.

00:00:05.400 --> 00:00:08.650
Java is a programming language and the computing platform.

00:00:08.650 --> 00:00:10.850
What exactly does that mean?

00:00:10.850 --> 00:00:13.530
Let us first understand what platform ease.

00:00:13.530 --> 00:00:17.130
Let's say you bought a new computer and as a friend off yours,

00:00:17.130 --> 00:00:19.550
I give you a few Softwares and games.

00:00:19.550 --> 00:00:21.850
I'll give you one photo shop,

00:00:21.850 --> 00:00:25.550
Chrome rosa and need for Speed Risen game.

00:00:25.550 --> 00:00:29.670
Would you be able to install these Softwares or play games?

00:00:29.670 --> 00:00:30.650
No,

00:00:30.650 --> 00:00:35.590
because your software's does not know your computer and your computer does not know your

00:00:35.590 --> 00:00:38.350
software's They both are strangers to each other.

00:00:38.350 --> 00:00:43.460
Now we need to some 100 years both the strangers to each other and develop friendship

00:00:43.460 --> 00:00:45.850
between them so that we can play games.

00:00:45.850 --> 00:00:53.650
So we need to hire a guy who does a job and you guesses his none other then the old rating

00:00:53.650 --> 00:00:56.350
system like Windows or Lennox.

00:00:56.350 --> 00:01:04.070
So if you see operating system is acting as a platform on which we can run applications or

00:01:04.070 --> 00:01:05.490
play games now,

00:01:05.490 --> 00:01:08.150
I hope that you got some idea on what black for me is.

00:01:08.150 --> 00:01:13.660
So just as operating system is there to run applications like photo Shop benefits and Crume

00:01:13.660 --> 00:01:21.600
Java platform is there to run Java programs or job applications Except Java Platform is

00:01:21.600 --> 00:01:22.020
installed,

00:01:22.020 --> 00:01:24.750
a new operating system just as any other software.

00:01:24.750 --> 00:01:26.770
And this is the very reason why.

00:01:26.770 --> 00:01:27.050
Job,

00:01:27.050 --> 00:01:29.950
I said Toby Portable will talk about portability later.

00:01:29.950 --> 00:01:31.280
Remember,

00:01:31.280 --> 00:01:31.640
I said,

00:01:31.640 --> 00:01:33.600
Java is also a programming language.

00:01:33.600 --> 00:01:38.850
These job applications must have been developed using Java programming language.

00:01:38.850 --> 00:01:39.810
So,

00:01:39.810 --> 00:01:41.280
depending on the context,

00:01:41.280 --> 00:01:42.400
you need to deter mined.

00:01:42.400 --> 00:01:48.950
What Joe is Java is a platform on which you can run Java programs or applications developed

00:01:48.950 --> 00:01:50.750
using Java programming language.

00:01:50.750 --> 00:01:55.250
Now let us take a look at some of the categories off programming language.

00:01:55.250 --> 00:01:57.980
We have high level programming language.

00:01:57.980 --> 00:02:03.300
These are somewhat closer to human readable language and our hands is it to learn?

00:02:03.300 --> 00:02:04.390
And is it to court?

00:02:04.390 --> 00:02:09.390
Most of the high level languages are portable or platform independent,

00:02:09.390 --> 00:02:14.990
which means you can write your program once and run it anywhere without having to worry

00:02:14.990 --> 00:02:17.750
about the operating system on what you're running a court.

00:02:17.750 --> 00:02:19.480
One setback,

00:02:19.480 --> 00:02:19.740
though,

00:02:19.740 --> 00:02:24.540
is that high level languages are relatively slower compared to low level language is one

00:02:24.540 --> 00:02:29.350
major reason is due to the conversion process which converts the court that you write the

00:02:29.350 --> 00:02:29.760
court.

00:02:29.760 --> 00:02:31.450
That mission can understand.

00:02:31.450 --> 00:02:36.850
This process abstracts lot off low level details for the convenience of the programmer.

00:02:36.850 --> 00:02:42.230
This would be minimal in case off low level language so more the languages grows up to

00:02:42.230 --> 00:02:43.520
human natural language,

00:02:43.520 --> 00:02:49.990
the slower it becomes C plus plus Java PHP or some of the examples off high level language

00:02:49.990 --> 00:02:51.960
coming to low level language.

00:02:51.960 --> 00:02:54.600
These are somewhat closer to mission language.

00:02:54.600 --> 00:02:55.310
I'm in zeros,

00:02:55.310 --> 00:02:59.310
and once and hence humans find it difficult to understand and to code.

00:02:59.310 --> 00:03:02.480
These languages are often dependent on platform,

00:03:02.480 --> 00:03:07.410
so the developer have to keep in mind on which offering system is really willing to run his

00:03:07.410 --> 00:03:07.880
program.

00:03:07.880 --> 00:03:10.770
So if you write a piece off court for Windows,

00:03:10.770 --> 00:03:13.850
there is no guarantee that it runs on Lennox.

00:03:13.850 --> 00:03:18.080
Developers have them and the court to get it working for all operating systems.

00:03:18.080 --> 00:03:23.100
And since these languages or close to mission readable language and my liver from humans,

00:03:23.100 --> 00:03:25.270
they run faster compared to high level languages.

00:03:25.270 --> 00:03:27.350
Assembly language is one good example,

00:03:27.350 --> 00:03:32.040
and middle low language lies in between high level language and low level language,

00:03:32.040 --> 00:03:34.540
and their nadir close to human now computer.

00:03:34.540 --> 00:03:36.090
This stain between the two.

00:03:36.090 --> 00:03:38.380
A good example would be C language.

00:03:38.380 --> 00:03:39.630
Although you can write core,

00:03:39.630 --> 00:03:42.120
which is somewhat closer to human datable language,

00:03:42.120 --> 00:03:44.210
it can also access member using pointers.

00:03:44.210 --> 00:03:46.970
Or you can even write us available cordis and see.

00:03:46.970 --> 00:03:50.870
You must be glad that job is considered as high level language,

00:03:50.870 --> 00:03:51.070
though.

