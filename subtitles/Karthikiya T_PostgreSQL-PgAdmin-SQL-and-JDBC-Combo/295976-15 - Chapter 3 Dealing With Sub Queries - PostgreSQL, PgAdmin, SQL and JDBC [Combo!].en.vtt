WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.030
okay in this,

00:00:02.030 --> 00:00:02.240
really,

00:00:02.240 --> 00:00:05.940
we're going to talk about sub very a sub.

00:00:05.940 --> 00:00:10.060
Queary is simply clearly nested inside another query.

00:00:10.060 --> 00:00:12.790
Let me just show you with an example.

00:00:12.790 --> 00:00:18.720
Let's say that I want to fetch all the list of students whose age is greater than the

00:00:18.720 --> 00:00:19.630
average age off.

00:00:19.630 --> 00:00:21.350
All the students combined together,

00:00:21.350 --> 00:00:23.900
so I can't have a query that say's.

00:00:23.900 --> 00:00:34.900
So let's start from students where age is good or than the function average off the age

00:00:34.900 --> 00:00:35.450
column.

00:00:35.450 --> 00:00:40.980
Now this is not going to work because we can't use functions like this in in the Where

00:00:40.980 --> 00:00:41.430
clause.

00:00:41.430 --> 00:00:42.860
And that's what it is complaining.

00:00:42.860 --> 00:00:44.950
So let me just don't do that.

00:00:44.950 --> 00:00:48.330
So what we're going to do is use this up very instead.

00:00:48.330 --> 00:00:54.020
So foster fall were to have a sub very that Britain's is the average age off all the

00:00:54.020 --> 00:00:54.650
students.

00:00:54.650 --> 00:00:57.810
And the way we go about writing the same is well,

00:00:57.810 --> 00:01:05.580
it says select average off age from students.

00:01:05.580 --> 00:01:06.650
As simple as that.

00:01:06.650 --> 00:01:09.550
This will return the average age,

00:01:09.550 --> 00:01:18.790
and now we can actually use this query in our wear Clothes has a sub query to retrieve this

00:01:18.790 --> 00:01:21.570
student list whose age is greater than the average age.

00:01:21.570 --> 00:01:29.560
So I'm going to say where age is greater than I put opening and closing Parentis is inside

00:01:29.560 --> 00:01:29.560
,

00:01:29.560 --> 00:01:33.780
which will have our sub query just as you see here.

00:01:33.780 --> 00:01:39.860
But we're not going to have the semi Colin here because this together is a single statement

00:01:39.860 --> 00:01:40.290
become.

00:01:40.290 --> 00:01:42.500
Have a statement inside another statement.

00:01:42.500 --> 00:01:45.740
So it's on this very and this list,

00:01:45.740 --> 00:01:49.650
all the students and age is definitely greater than 27 which we,

00:01:49.650 --> 00:01:54.150
which is the average age now let's take a look at a couple of key words,

00:01:54.150 --> 00:01:56.190
which are any and all.

00:01:56.190 --> 00:01:57.100
First,

00:01:57.100 --> 00:02:04.020
let's talk about the any key word letter that I wanted to retrieve all the list of students

00:02:04.020 --> 00:02:06.650
who enrolled for various courses.

00:02:06.650 --> 00:02:08.040
If you observe,

00:02:08.040 --> 00:02:13.650
if you take a look at all the list off students and if you compare with the foreign key

00:02:13.650 --> 00:02:17.860
reciting in the student course table dessert,

00:02:17.860 --> 00:02:22.430
all the list of students who haven't rolled There's a 12 and three,

00:02:22.430 --> 00:02:28.200
and we don't have the students 456 register for any course.

00:02:28.200 --> 00:02:29.950
So let's go back here.

00:02:29.950 --> 00:02:38.180
I'm going to say sell its star from students where the I d off the students table will

00:02:38.180 --> 00:02:44.440
match with any off the ideas that we're seeing here.

00:02:44.440 --> 00:02:46.910
So I'm just simply going to copy this statement,

00:02:46.910 --> 00:02:53.480
which is going to retrieve the list of ideas and passed it as a sub pretty,

00:02:53.480 --> 00:02:55.450
and that's all there is to it.

00:02:55.450 --> 00:03:01.620
But wait to use the keyword any because we wanted to see if I d matches with any off the

00:03:01.620 --> 00:03:04.200
ideas returned by this query again,

00:03:04.200 --> 00:03:06.850
you shouldn't be having the semi column here.

00:03:06.850 --> 00:03:10.650
And let's run the query credible and good.

00:03:10.650 --> 00:03:11.940
Similarly,

00:03:11.940 --> 00:03:18.840
we have the key word all instead of any would say all so that they were checking to see if

00:03:18.840 --> 00:03:22.220
my day is equal to all the values returned by the statement.

00:03:22.220 --> 00:03:24.440
But instead of saying equals,

00:03:24.440 --> 00:03:29.900
let's say greater than and we're retreating all the list of student whose idea is greater

00:03:29.900 --> 00:03:36.500
than all the ideas mentioned in this table and let's on the query.

00:03:36.500 --> 00:03:41.650
And obviously this is not a real time use case.

00:03:41.650 --> 00:03:43.820
This is just for demonstration purpose,

00:03:43.820 --> 00:03:44.740
all right,

00:03:44.740 --> 00:03:46.850
that's it on sub queries,

00:03:46.850 --> 00:03:53.500
and I've also created a document to demonstrate the same for your reference.

00:03:53.500 --> 00:04:00.460
It essentially has everything would have just explained its title dealing with sub Berries

00:04:00.460 --> 00:04:00.460
.

00:04:00.460 --> 00:04:01.950
All right,

00:04:01.950 --> 00:04:02.600
see,

00:04:02.600 --> 00:04:03.150
assume

