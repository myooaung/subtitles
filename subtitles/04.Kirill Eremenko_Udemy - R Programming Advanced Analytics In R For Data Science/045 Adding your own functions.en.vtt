WEBVTT
1
00:00:04.610 --> 00:00:08.670
Hello welcome back to that bonce course in our programming.

2
00:00:08.700 --> 00:00:12.090
Today we will talk about a very interesting topic.

3
00:00:12.210 --> 00:00:19.470
We will be looking at adding our own functions into the plie family functions so kind of nesting our

4
00:00:19.470 --> 00:00:22.620
own functions within the ply family functions.

5
00:00:22.790 --> 00:00:29.550
And as you can imagine from the of family function a very powerful Well nesting our own functions within

6
00:00:29.580 --> 00:00:34.590
apply functions is incredibly incredibly powerful.

7
00:00:34.590 --> 00:00:38.130
One of the most powerful techniques that exists in our.

8
00:00:38.190 --> 00:00:39.870
So let's get started.

9
00:00:39.900 --> 00:00:42.600
Let's see what this is all about.

10
00:00:42.600 --> 00:00:49.080
All right so here we've got El apply and we're applying it to the weather bestride.

11
00:00:49.260 --> 00:00:51.340
So what can we say here.

12
00:00:51.360 --> 00:00:54.030
For instance we've looked at Romains right.

13
00:00:54.070 --> 00:01:03.270
Roe means when we do that we take every component of the weather list which is indeed a matrix and then

14
00:01:03.270 --> 00:01:09.850
we apply the Romans function to that matrix and the output is a list with those results.

15
00:01:09.850 --> 00:01:17.960
If I run this and I have a look here you'll see that we've created a list of four components Chicago

16
00:01:18.010 --> 00:01:19.780
New York Houston and San Francisco.

17
00:01:20.040 --> 00:01:27.260
And every one of these components is a named vector with the averages of the rows of the sociate at

18
00:01:27.270 --> 00:01:29.970
Matrix that it was in the original list which was weather.

19
00:01:30.050 --> 00:01:31.500
And now we've already seen this.

20
00:01:31.500 --> 00:01:38.370
Well what Israel means Romeos is a predefined function in our what we can do is we can replace this

21
00:01:38.370 --> 00:01:39.670
function with our own.

22
00:01:39.690 --> 00:01:42.660
Nobody said we can just put in our own function in there.

23
00:01:42.730 --> 00:01:44.560
And that's exactly what we're going to do.

24
00:01:44.580 --> 00:01:49.400
So we'll start off an easy one we'll say l applied weather and here we're going to create on function

25
00:01:49.410 --> 00:01:50.790
how do we create functions.

26
00:01:50.790 --> 00:01:57.960
So that's something we discussed in the basic course sonar our and on our programming A to Zed to function

27
00:01:57.960 --> 00:01:59.950
you just type in the word function.

28
00:01:59.970 --> 00:02:05.520
Then you need to say how many arguments it will have and with Apply family functions you always need

29
00:02:05.520 --> 00:02:12.460
this one argument because that is what's the Apply or the Apply function will be iterating over.

30
00:02:12.460 --> 00:02:20.280
So weather has components so this is a individual components that apply will be extracting from weather

31
00:02:20.310 --> 00:02:21.810
and analyzing separately.

32
00:02:21.810 --> 00:02:22.080
Right.

33
00:02:22.080 --> 00:02:24.380
So and we'll see that in action just now.

34
00:02:24.390 --> 00:02:29.320
Now you can do whatever you like with this component so this is right after you say function whatever

35
00:02:29.340 --> 00:02:34.860
comes between this closing bracket this component and this closing bracket for the L function.

36
00:02:34.860 --> 00:02:39.530
So anything that you type in here basically is the body of your function.

37
00:02:39.540 --> 00:02:46.170
I know it's not as structured as you'd expect like C or other languages but that's pretty much it that's

38
00:02:46.170 --> 00:02:52.290
how you will find that most of the users of our will type up their code so it's something that is worth

39
00:02:52.290 --> 00:02:53.110
getting used to.

40
00:02:53.340 --> 00:02:58.860
So there we go again going to say X that we're going to say one common nothing what will this give us

41
00:02:58.860 --> 00:02:59.160
.

42
00:02:59.340 --> 00:03:05.070
This is basically this is all function and we're saying so now for every component of weather which

43
00:03:05.070 --> 00:03:08.240
is a matrix we want this to happen.

44
00:03:08.280 --> 00:03:13.860
So basically you want to use this function and the function what it does is it takes a component which

45
00:03:13.860 --> 00:03:21.390
can be Chicago New York Houston or San Francisco and then it will apply the square brackets with one

46
00:03:21.390 --> 00:03:22.290
common nothing to it.

47
00:03:22.290 --> 00:03:27.480
So what it will do is give us the first row of every one of these matrices and then they will be put

48
00:03:27.480 --> 00:03:35.320
into a list and sent off as a result of this line around that exactly what we were expecting.

49
00:03:35.340 --> 00:03:40.800
Right so there is our very first row of every one of these matrices.

50
00:03:40.800 --> 00:03:41.100
All right.

51
00:03:41.100 --> 00:03:45.610
So let's try something else let's say fifth row because that's hours of sunshine.

52
00:03:45.610 --> 00:03:47.020
Everybody loves sunshine.

53
00:03:47.190 --> 00:03:49.560
So let's put in five here.

54
00:03:49.980 --> 00:03:50.310
What is that.

55
00:03:50.310 --> 00:03:50.760
Yes.

56
00:03:50.810 --> 00:03:56.050
That gives us the fifth row of every one of those matrices.

57
00:03:56.250 --> 00:03:58.940
And they have been put into a separate list.

58
00:03:59.220 --> 00:03:59.970
OK.

59
00:04:00.300 --> 00:04:02.330
And what else can we do.

60
00:04:02.490 --> 00:04:09.390
We can do something similar and we can say let's look at December for every single one of these matrices

61
00:04:09.390 --> 00:04:09.450
.

62
00:04:09.450 --> 00:04:14.090
So those are the metrics for December because December is a 12 month.

63
00:04:14.250 --> 00:04:19.440
We're looking at all the rows we have nothing here comma 12 so 12 months.

64
00:04:19.470 --> 00:04:20.210
So there we go.

65
00:04:20.220 --> 00:04:28.080
That's December for a Chicago symbol for New York December for Houston and December for San Francisco

66
00:04:28.100 --> 00:04:28.320
.

67
00:04:28.530 --> 00:04:29.000
All right.

68
00:04:29.070 --> 00:04:31.430
So is this something a bit more complex.

69
00:04:31.470 --> 00:04:35.800
Let's say we want to take all of this just type it up just for practice.

70
00:04:35.810 --> 00:04:39.870
I'll apply a weather function and then X is combined.

71
00:04:39.870 --> 00:04:40.770
You don't have to name it.

72
00:04:40.820 --> 00:04:42.180
You can name it Zed.

73
00:04:42.410 --> 00:04:43.920
The same is said for a change.

74
00:04:44.040 --> 00:04:47.940
And here we want to say Zad square brackets want to come a nothing.

75
00:04:47.970 --> 00:04:53.360
So I'm just going to actually bring up weather here so that we know what we're dealing with.

76
00:04:53.520 --> 00:04:55.250
So let's look at Chicago.

77
00:04:55.260 --> 00:05:01.350
We're going to take the average high temperature in Fahrenheit and we're going to subtract the average

78
00:05:01.350 --> 00:05:02.910
low temperature in Fahrenheit.

79
00:05:02.940 --> 00:05:05.530
Right so we look at the difference.

80
00:05:05.580 --> 00:05:12.360
So we're going to say Zed 1 come or nothing which is the first real minus Zed to come in I think.

81
00:05:12.630 --> 00:05:16.560
And for that now you have the difference.

82
00:05:16.560 --> 00:05:25.670
So if I look at the top for Chicago is 32 minus 18 which is 14 36 and minus 21 which makes it 15.

83
00:05:25.860 --> 00:05:28.940
So let's have a look here 14 and 15.

84
00:05:28.950 --> 00:05:36.690
So that is a difference in degrees Fahrenheit between the average high temperature for that month and

85
00:05:36.690 --> 00:05:42.990
the average so average high temperature across the years that we have had in the data set or that were

86
00:05:43.020 --> 00:05:48.440
participated in this analysis originally because we got the data set with these averages already.

87
00:05:48.450 --> 00:05:53.280
So basically the difference between the average temperature and chanted the average high temperature

88
00:05:53.280 --> 00:05:58.420
in January and the average low temperature in January and degrees Fahrenheit.

89
00:05:58.740 --> 00:05:59.040
All right.

90
00:05:59.040 --> 00:06:01.700
So that is how you calculate the difference.

91
00:06:01.710 --> 00:06:07.800
Now what we want to do is we want to change this difference into a decimal right so we want to look

92
00:06:07.800 --> 00:06:11.690
at the relative change so that we can compare them.

93
00:06:11.790 --> 00:06:12.690
How do we do that.

94
00:06:12.870 --> 00:06:20.280
Well in deliverable two we were asked for is how we're by how the temperature fluctuates each month

95
00:06:20.280 --> 00:06:25.680
from minimum to maximum and we need to take the minimum temperature as the base.

96
00:06:25.680 --> 00:06:30.100
All right so we're going to take that one minus two.

97
00:06:30.270 --> 00:06:37.270
We'll put it in brackets and then we will divide by the base divide by the basis again.

98
00:06:37.290 --> 00:06:45.680
So bracket's divide by the base closes brackets and then we want to also obviously round because otherwise

99
00:06:45.680 --> 00:06:49.220
it would be too many decimal points or else run like that funnel.

100
00:06:49.620 --> 00:06:51.370
So you can see a lot of decimal points.

101
00:06:51.390 --> 00:06:54.230
So that's for now this round it round.

102
00:06:54.630 --> 00:06:59.680
We want to take this comma two decimal points around that.

103
00:06:59.700 --> 00:07:00.150
There we go.

104
00:07:00.150 --> 00:07:08.040
So now we can see how the temperature fluctuates so the difference between the minimum and the maximum

105
00:07:08.280 --> 00:07:15.810
temperature or low and the high there was observed in that month low on average across many years so

106
00:07:15.840 --> 00:07:20.440
you can see in Chicago it fluctuates by 78 percent in January.

107
00:07:20.460 --> 00:07:23.620
Right so that is a huge difference.

108
00:07:23.880 --> 00:07:31.650
Whereas in other places it looks like mostly it's 24 percent 20 percent in someplace in New York.

109
00:07:31.650 --> 00:07:34.580
So 20 percent isn't generally speaking that much.

110
00:07:34.590 --> 00:07:38.940
When you compare it to something like 78 percent but who else has to take into account that this is

111
00:07:39.510 --> 00:07:42.980
Fahrenheit and it doesn't convert leniently to Celsius.

112
00:07:42.980 --> 00:07:47.790
So there's all these little nuances that you have to keep in mind but that's more of domain knowledge

113
00:07:47.790 --> 00:07:48.150
.

114
00:07:48.150 --> 00:07:54.450
The main thing here is that we have come up with this result that we have been looking for so let's

115
00:07:54.450 --> 00:08:00.060
put a comment here saying that this is what we are kind of after.

116
00:08:00.060 --> 00:08:03.990
So this is deliverable to temperature fluctuations.

117
00:08:04.080 --> 00:08:07.390
But at the same time we will improve it.

118
00:08:07.410 --> 00:08:08.020
Right.

119
00:08:08.250 --> 00:08:13.050
It's not ideal because it's in a list and it's not very presentable right now.

120
00:08:13.050 --> 00:08:19.680
We do have the result but we can make it better and we will see how to make it better in upcoming.

121
00:08:20.040 --> 00:08:27.690
But basically that's how you create your own functions to work with components of a list and then use

122
00:08:27.690 --> 00:08:34.360
the Apply functions to apply your functions to those components or we list.

123
00:08:34.650 --> 00:08:36.310
Very very powerful technique.

124
00:08:36.330 --> 00:08:38.850
So definitely have a play around with that.

125
00:08:38.850 --> 00:08:45.570
See what other options or other things you might come up with in terms of working with these matrices

126
00:08:45.570 --> 00:08:46.200
that we have.

127
00:08:46.200 --> 00:08:48.900
So I would just create a function of your own liking.

128
00:08:48.900 --> 00:08:53.280
For instance you could try and divide one of the metrics by the other.

129
00:08:53.280 --> 00:08:54.580
So what do we have here.

130
00:08:54.630 --> 00:09:01.220
We have days of precipitation we have average precipitation in inches maybe try dividing average precipitation

131
00:09:01.230 --> 00:09:08.880
into in inches by the days of precipitation and see if you can create a function which will be similar

132
00:09:08.880 --> 00:09:14.970
to this and then apply it across all components of weather and just check your results see if you get

133
00:09:15.090 --> 00:09:21.150
a good result so that actually matches up to what you were expecting to be calculated.

134
00:09:21.150 --> 00:09:26.540
All right so this brings us to the end of today's tutorial and I look forward to seeing you next.

135
00:09:26.550 --> 00:09:27.930
Until then happy coding

136
00:09:29.940 --> 00:09:32.060
.
