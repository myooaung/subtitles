WEBVTT
1
00:00:05.710 --> 00:00:08.610
Hello and welcome back to the advanced course on our programming.

2
00:00:08.700 --> 00:00:12.240
In today's tutorial we talk about resetting the doorframe index.

3
00:00:12.240 --> 00:00:18.660
Now what I want to draw your attention to was that in the previous tutorial we deleted some rows from

4
00:00:18.750 --> 00:00:20.120
our daughter frame.

5
00:00:20.220 --> 00:00:27.030
So if you scroll up to the top you will see that we have removed rows 14 and 15.

6
00:00:27.030 --> 00:00:29.020
They're not here at the same time.

7
00:00:29.120 --> 00:00:34.080
The I.D. will obviously they doesn't change because the ID is the associate of the company.

8
00:00:34.080 --> 00:00:38.780
So this is this company's IDs 6 this company's IDs 7 and so on.

9
00:00:38.790 --> 00:00:45.810
There could have been a hundred and or hundred thousand and 100000 to it's just a number that is coded

10
00:00:45.810 --> 00:00:46.720
to the company.

11
00:00:47.070 --> 00:00:53.550
But then on the left here you see the row numbers are in fact these are the real names for this data

12
00:00:53.550 --> 00:00:54.090
for it.

13
00:00:54.180 --> 00:01:01.140
And what happened here is that when we deleted these two rows of 14 and 15 the name of the rows with

14
00:01:01.130 --> 00:01:02.740
their main rows did in a.

15
00:01:02.760 --> 00:01:06.660
Just so you can see 12 12 13 16 17.

16
00:01:06.690 --> 00:01:11.280
So if you go to the bottom you'll see that looks like we still have 500 rows where in fact we only have

17
00:01:11.300 --> 00:01:19.770
400 98 and that is something that happens in our Because in fact these aren't row numbers these are

18
00:01:19.830 --> 00:01:20.980
row names.

19
00:01:20.980 --> 00:01:22.720
They are associated with the rows.

20
00:01:22.920 --> 00:01:30.360
And unlike in excel in are these numbers don't change so in Excel if you go here if I were to delete

21
00:01:30.360 --> 00:01:33.480
these two rows I'd just remove them.

22
00:01:33.480 --> 00:01:39.420
You will see that the ID's have been kept for the companies but then these numbers on the left here

23
00:01:39.480 --> 00:01:44.760
they don't change so they basically they have well they have been adjusted for these are these rows

24
00:01:44.760 --> 00:01:46.780
have moved up in the order.

25
00:01:47.070 --> 00:01:48.600
So I'm going to cancel that.

26
00:01:48.600 --> 00:01:50.530
I'm going to return these rows in are.

27
00:01:50.550 --> 00:01:54.790
That doesn't happen so once we removed 14:15 these numbers also disappear.

28
00:01:54.900 --> 00:02:00.870
And that is because these are names of the rows rather than like in Excel they're just a framework of

29
00:02:01.230 --> 00:02:03.000
the program that you're working in.

30
00:02:03.120 --> 00:02:04.590
And how do we fix that.

31
00:02:04.590 --> 00:02:07.390
So the question is first of all do we want to fix that.

32
00:02:07.410 --> 00:02:13.110
And if we do then how the answer in your question if we want to is entirely up to you whether you for

33
00:02:13.110 --> 00:02:18.240
your analysis require that to be changed whether for aesthetic reasons you would want to actually keep

34
00:02:18.240 --> 00:02:25.080
the correct number numeration here or maybe the opposite you might be relying on this name maybe you

35
00:02:25.080 --> 00:02:30.330
don't have an ID column and you are relying on this name to pick out the reason you wanted to change

36
00:02:30.330 --> 00:02:35.760
you wanted to be associated with the same row all the time regardless of how you filter how you reorder

37
00:02:35.760 --> 00:02:36.690
your doorframe.

38
00:02:36.690 --> 00:02:38.160
So it really depends on you.

39
00:02:38.320 --> 00:02:43.680
In this trial I'm just going to show you how to do it because if you do need to do it then this knowledge

40
00:02:43.680 --> 00:02:45.410
will come in handy.

41
00:02:45.420 --> 00:02:45.680
All right.

42
00:02:45.690 --> 00:02:47.880
So how do we fix up their own names.

43
00:02:47.880 --> 00:02:49.150
It's very simple.

44
00:02:49.200 --> 00:02:51.910
We've got our data set.

45
00:02:52.380 --> 00:02:58.070
You can tell everything is actually very simple once we go through it.

46
00:02:58.150 --> 00:03:01.250
Our isn't like at this stage it's not that hard.

47
00:03:01.250 --> 00:03:06.120
We're not doing anything complex in our it's just a matter of knowing these concepts.

48
00:03:06.150 --> 00:03:12.260
So here we've got our data set fin and we've got names of Finn which is a vector with the names.

49
00:03:12.460 --> 00:03:18.180
And as we know we can basically assign anything into this vector we can give them names like actual

50
00:03:18.630 --> 00:03:25.910
character names or like we can what we can do is we can just find out how many rows we have in our data

51
00:03:25.910 --> 00:03:32.730
frame and then apply that so we can say 1 2 and we don't know how many rows we have but what we do is

52
00:03:32.770 --> 00:03:34.000
for 498.

53
00:03:34.020 --> 00:03:36.840
But the fastest way to count them is and row of finish.

54
00:03:36.840 --> 00:03:40.690
So this will give you the actual number of rows you have 498.

55
00:03:40.740 --> 00:03:48.090
This will give you a vector from 1 to 498 and this will assign that vector to the names of your rows

56
00:03:48.110 --> 00:03:48.140
.

57
00:03:48.150 --> 00:03:52.570
If I run that you will see that it's 498 here.

58
00:03:52.620 --> 00:03:58.790
So that's one of the approaches and I'm going to show you a quick tip or like a hack to this approach

59
00:03:59.190 --> 00:04:00.690
which is much faster.

60
00:04:00.690 --> 00:04:03.920
So let's quickly use our backup to restore fin.

61
00:04:03.990 --> 00:04:08.580
Right so fin comes from the back up just to redo this exercise.

62
00:04:08.580 --> 00:04:09.600
Remove that now.

63
00:04:09.750 --> 00:04:12.650
And if I run all of this right now.

64
00:04:12.670 --> 00:04:21.060
Now I look at fin you'll see that one again this is set to 500 and the fastest way to fix this up is

65
00:04:21.060 --> 00:04:24.780
just to go row names fin is null.

66
00:04:25.050 --> 00:04:27.690
And now if we look at fin you'll see that they have been reset.

67
00:04:27.690 --> 00:04:35.250
So basically we're emptying out the names of the rows were completely telling are to reset the row names

68
00:04:35.310 --> 00:04:38.230
and by default it will reset them to this anyway.

69
00:04:38.310 --> 00:04:43.700
So this is just a faster way to reset your road names to the correct enumeration.

70
00:04:43.710 --> 00:04:49.860
Once again it's a it's really a decision up to you as an analyst or a scientist whether or not you want

71
00:04:49.980 --> 00:04:51.150
to do that.

72
00:04:51.540 --> 00:04:51.810
OK.

73
00:04:51.810 --> 00:04:54.610
So there we go that's us for this tutorial.

74
00:04:54.780 --> 00:04:56.680
And I look forward to your next step.

75
00:04:56.760 --> 00:05:01.400
Until then happy coding.
