1
00:00:05,120 --> 00:00:08,490
Hello welcome back to that ball's course in our programming.

2
00:00:08,520 --> 00:00:12,200
In today's tutorial we've got a very interesting and even intriguing topic.

3
00:00:12,300 --> 00:00:15,730
We're talking about the fact variable trap or the FBT.

4
00:00:15,780 --> 00:00:22,080
So the fact of verbal trap comes into play when you're trying to convert a variable from a factor or

5
00:00:22,080 --> 00:00:25,040
a column from a factor into a non-factor.

6
00:00:25,140 --> 00:00:28,740
We've already talked about the other way we've talked about Turing from nonfactor to Fact is pretty

7
00:00:28,740 --> 00:00:30,890
simple you just use a factor function.

8
00:00:31,170 --> 00:00:35,760
But today we're going to talk about how to convert factors into non-factors.

9
00:00:35,760 --> 00:00:38,290
And that's where this pitfall arises.

10
00:00:38,550 --> 00:00:45,870
Now bear in mind if you do search for factory level trap on Google you probably won't find much because

11
00:00:46,000 --> 00:00:49,370
I came up with this term just for these tutorials.

12
00:00:49,380 --> 00:00:55,620
It's a known phenomenon but it isn't very well publicized it's not much discussed and I really don't

13
00:00:55,620 --> 00:01:03,240
know why not enough attention has been brought onto this issue and that is because it is a major pitfall

14
00:01:03,240 --> 00:01:09,640
that a lot of programmers end up falling into and just simply by covering it in the tutorial.

15
00:01:09,690 --> 00:01:15,000
I'm sure you will get the right knowledge and preparation to avoid this pitfall and know how to deal

16
00:01:15,000 --> 00:01:17,370
with it when you come across it.

17
00:01:17,400 --> 00:01:19,820
So without further ado let's dive straight into it.

18
00:01:19,820 --> 00:01:21,960
Let's see what we're talking about here.

19
00:01:21,960 --> 00:01:25,020
A few minutes we're going to forget about our data set that we've been working with and we're going

20
00:01:25,020 --> 00:01:28,690
to create a new vector so we'll create a vector A.

21
00:01:28,890 --> 00:01:31,140
And into that vector we're going to put the following values.

22
00:01:31,170 --> 00:01:38,130
So we're going to put in 12 13 14 and then we'll just put in 12 and 12 again.

23
00:01:38,280 --> 00:01:41,460
So five values all in quotation marks.

24
00:01:41,460 --> 00:01:47,800
If I look at a now you'll see that we've got the five L's here but because of the quotation marks I

25
00:01:47,910 --> 00:01:52,250
specified they are being stored as characters and not as numerics.

26
00:01:52,350 --> 00:01:55,450
And I can confirm that by just looking at a type of a.

27
00:01:55,500 --> 00:01:56,910
You'll see that it's a character.

28
00:01:56,910 --> 00:02:04,290
Now what would we do if we want to get to the bottom of these values so we want to actually deal with

29
00:02:04,290 --> 00:02:09,390
them as numerics rather than as characters so we want to maybe add them subtract them and perform other

30
00:02:09,510 --> 00:02:14,830
arithmetic operations what would we have to do if a in order to convert it to an American picture.

31
00:02:15,090 --> 00:02:20,430
Well it's very simple we would create a vector b and into that vector we would put the result of calling

32
00:02:20,430 --> 00:02:25,630
the falling function as numeric as an American word something into a numeric.

33
00:02:25,830 --> 00:02:28,370
And here we're going to pass on the vector.

34
00:02:28,620 --> 00:02:29,610
So far on that.

35
00:02:29,640 --> 00:02:30,720
And now we look at B.

36
00:02:30,930 --> 00:02:35,610
You'll see that we've got the same values 12 13 14 12 12 followed the quotation marks.

37
00:02:35,790 --> 00:02:40,420
And if I call now type of B you'll see that it's a double.

38
00:02:40,470 --> 00:02:48,090
So a double is a type of the Merak and therefore we can perform it's megacorporations if we wanted with

39
00:02:48,090 --> 00:02:48,840
this action.

40
00:02:49,050 --> 00:02:53,670
So that's a great way to convert characters into numerics.

41
00:02:53,700 --> 00:03:00,660
So here we can just say four characters but now the question is how do you convert factors into numerics

42
00:03:00,660 --> 00:03:00,720
.

43
00:03:00,720 --> 00:03:01,100
Right.

44
00:03:01,110 --> 00:03:07,760
So let's say converting into numerics just so that there's no confusion because the effect variable

45
00:03:07,770 --> 00:03:10,830
trap actually has nothing to do with this part.

46
00:03:10,830 --> 00:03:12,090
It's only for the second part.

47
00:03:12,120 --> 00:03:16,420
So here we can say converting into the merits or factors.

48
00:03:16,620 --> 00:03:17,190
All right.

49
00:03:17,190 --> 00:03:18,560
So let's have a look at this.

50
00:03:18,570 --> 00:03:21,490
How would you convert a factor into an America.

51
00:03:21,810 --> 00:03:24,320
Well the first thing is we need to create the factor right.

52
00:03:24,330 --> 00:03:30,120
So let's say we have a factor is that which is going to be exactly the same as vector A.

53
00:03:30,270 --> 00:03:35,760
So let's take that with the only difference that is going to be the factor as version of this picture

54
00:03:35,770 --> 00:03:35,890
.

55
00:03:36,000 --> 00:03:36,740
So what does that mean.

56
00:03:36,870 --> 00:03:42,450
Well it basically means that we're telling our Could you please take this vector and treated as a categorical

57
00:03:42,450 --> 00:03:49,950
so take these categories and create a fracture for us where you've recognized these different values

58
00:03:49,950 --> 00:03:51,850
that you find in this vector as carriers.

59
00:03:52,080 --> 00:03:54,280
So if you run this line we've got our vector Zed.

60
00:03:54,300 --> 00:04:01,680
If I run that now you'll see that we've got 12 13 14 12 12 and bear in mind the quotation marks are

61
00:04:01,680 --> 00:04:03,050
not shown here.

62
00:04:03,060 --> 00:04:08,460
What you also see is the levels so are can see the different levels because our knows that it's actually

63
00:04:08,460 --> 00:04:09,570
dealing with sets.

64
00:04:09,570 --> 00:04:11,370
And just to show you the quotation marks here.

65
00:04:11,460 --> 00:04:17,370
But at the same time it depreciates that these are indeed categories so it's not recognizing them as

66
00:04:17,370 --> 00:04:17,810
numbers.

67
00:04:17,940 --> 00:04:23,470
But what can be confusing to us is that we might think that these are recognized as numbers right.

68
00:04:23,490 --> 00:04:28,130
So what would we do if we wanted to convert them to numerics now.

69
00:04:28,140 --> 00:04:33,690
Right so if we said OK we've got this factor variable how do we get rid of this factorization just convert

70
00:04:33,710 --> 00:04:36,090
a to a normal numeric vector.

71
00:04:36,270 --> 00:04:39,630
We might try to do the same thing as we did over here.

72
00:04:39,720 --> 00:04:45,710
We might say we want a new vector Y and we want to say as numeric and vectors then right.

73
00:04:45,720 --> 00:04:47,640
And that's your first inclination.

74
00:04:47,700 --> 00:04:51,990
Once you want to do is all right I want to get to the bottom of these numbers I want to be able to deal

75
00:04:51,990 --> 00:04:55,620
with them not as a factor I want to deal with them as a numeric vector.

76
00:04:55,620 --> 00:04:56,490
How do I do that.

77
00:04:56,500 --> 00:05:01,400
And we're going to run as the merit of zed around and boy look at why Whoa.

78
00:05:01,820 --> 00:05:03,180
Very different right.

79
00:05:03,200 --> 00:05:04,520
1 2 3 1 1.

80
00:05:04,550 --> 00:05:06,060
What's going on here.

81
00:05:06,080 --> 00:05:09,260
Why is it not 12 13 14 12 12.

82
00:05:09,260 --> 00:05:14,710
This is this is completely not what I wanted and if I look at type of Y.

83
00:05:14,780 --> 00:05:15,120
Right.

84
00:05:15,140 --> 00:05:15,770
It's a double.

85
00:05:15,770 --> 00:05:16,390
That's what.

86
00:05:16,440 --> 00:05:20,200
It's exactly what I was expecting here like type of B type of Y.

87
00:05:20,210 --> 00:05:22,840
So we did exactly the same things.

88
00:05:23,060 --> 00:05:28,700
So here we did be as Americ a Y as an exam but the result is completely different.

89
00:05:28,700 --> 00:05:29,770
What happened here.

90
00:05:29,930 --> 00:05:36,470
Well what happened is we picked up the actual factorization of the variable rather than the factors

91
00:05:36,470 --> 00:05:37,230
themselves.

92
00:05:37,550 --> 00:05:40,990
And to understand that a bit better let's run a quick line here.

93
00:05:41,090 --> 00:05:46,670
After we created said this look at type of zed if you like a top of that is actually integer.

94
00:05:46,790 --> 00:05:47,050
Right.

95
00:05:47,050 --> 00:05:51,980
So said is being seen as an integer but doesn't mean this integer that's inside here.

96
00:05:52,000 --> 00:05:57,200
The integer that is that is Zed is the factorization integer.

97
00:05:57,200 --> 00:06:02,280
So let's understand that a bit better because this is basically the essence of this whole factor variable

98
00:06:02,300 --> 00:06:03,040
trap.

99
00:06:03,050 --> 00:06:06,070
So is going to create that line there.

100
00:06:06,230 --> 00:06:08,340
And if I look at that again.

101
00:06:08,370 --> 00:06:11,870
So this is at 12 13 14 12 12.

102
00:06:12,000 --> 00:06:15,430
What are does is it says OK levels 12 13 14.

103
00:06:15,680 --> 00:06:22,180
And as we discussed previously what a factor is is basically are seeing these as categories or seen

104
00:06:22,180 --> 00:06:25,150
this vector that it can be broken down into categories.

105
00:06:25,160 --> 00:06:26,540
And indeed indeed it can.

106
00:06:26,540 --> 00:06:29,670
There's a category of 12 that comes up three times.

107
00:06:29,770 --> 00:06:34,140
There's a category of 13 comes up once in a category of 14 which also comes up once.

108
00:06:34,430 --> 00:06:35,720
And so what does Arlan do.

109
00:06:35,720 --> 00:06:40,700
Then it shows these categories as levels well all the cold levels you can call them categories.

110
00:06:40,850 --> 00:06:49,030
And then in the back end of our what it does it is is it assigns just numerics to them says this is

111
00:06:49,040 --> 00:06:53,160
Category number one category number two category number three.

112
00:06:53,540 --> 00:07:02,780
And therefore when we look at it we see 12 13 14 12 12 when our looks at it it sees 1 2 3 1 1 because

113
00:07:02,780 --> 00:07:04,940
that's how they have been coded right.

114
00:07:04,940 --> 00:07:11,180
It doesn't matter what numbers I have here or if I have countries here or I have names or any other

115
00:07:11,370 --> 00:07:13,270
anything that can be categories.

116
00:07:13,420 --> 00:07:19,310
What are is doing is it is coating them with numbers so that is number one category number one carrier

117
00:07:19,320 --> 00:07:23,120
number two category three that category number one again and number one are you.

118
00:07:23,300 --> 00:07:29,900
So when you're trying to convert using the as Mary function what you will get is the categories so that's

119
00:07:29,900 --> 00:07:35,370
where you get the 1 2 3 1 1 rather than the actual numbers that you want.

120
00:07:35,570 --> 00:07:41,360
And that is the essence of the factor bearable trap that programmers who are not very aware of this

121
00:07:41,370 --> 00:07:45,980
or analysts are data scientists who are not aware of this can easily fall into this trap.

122
00:07:46,010 --> 00:07:51,650
And the worst part is that if you're expecting an American then you get this and you don't double check

123
00:07:51,650 --> 00:07:57,590
your work you can proceed to using these wrong numbers in your results and you will get completely incorrect

124
00:07:57,590 --> 00:07:58,250
results.

125
00:07:58,250 --> 00:08:04,700
So how do we avoid this fact verbal trap or how do we actually convert that into a numeric in this case

126
00:08:04,710 --> 00:08:04,950
.

127
00:08:05,180 --> 00:08:12,790
Well the correct way to do it is to first convert the Zed into character and then convert it into a

128
00:08:12,780 --> 00:08:13,100
factor.

129
00:08:13,100 --> 00:08:21,170
So what we do is we say as a character and I would say Zed right if we run that then you got to 12 13

130
00:08:21,170 --> 00:08:23,970
14 12:12 we without the levels.

131
00:08:24,170 --> 00:08:32,750
And if I go as dark Gnumeric around that and I put that into variable x and now I look at X you will

132
00:08:32,750 --> 00:08:36,890
see that 12 13 14 12 12 have been released.

133
00:08:36,920 --> 00:08:41,590
So from a factor they turned into a character for my character.

134
00:08:41,630 --> 00:08:46,430
They turned into a numeric So basically after they've turned into character we're repeating this process

135
00:08:46,440 --> 00:08:46,640
.

136
00:08:46,830 --> 00:08:51,030
And so now if I look at type of x you'll see that it is a double.

137
00:08:51,050 --> 00:08:52,450
So keep that in mind.

138
00:08:52,500 --> 00:09:00,740
This is the factor variable trap that you cannot convert something that is a number that should be a

139
00:09:01,130 --> 00:09:06,020
or is recognized as a factor that should not be recognized as a fact you cannot convert that right into

140
00:09:06,020 --> 00:09:14,580
a number right away because you will inevitably and inadvertently pick up the factorization values right

141
00:09:14,580 --> 00:09:21,110
so you'll pick up the numbers that are uses within its backhand for itself rather than the numbers that

142
00:09:21,120 --> 00:09:26,880
you're after if you want the numbers that actually are contained in that in these quotation marks.

143
00:09:26,880 --> 00:09:29,510
Then you first need to convert it to a real character.

144
00:09:29,510 --> 00:09:32,590
So as character and then convert it into numeric.

145
00:09:32,750 --> 00:09:35,870
So I know this may be a bit overwhelming at first.

146
00:09:35,930 --> 00:09:40,610
I have a play around with that try experiment create a few of your own vectors to really understand

147
00:09:40,620 --> 00:09:41,430
this better.

148
00:09:41,480 --> 00:09:48,380
And then we will start slowly implementing this in our daughter preparation phase so basically the following

149
00:09:48,380 --> 00:09:55,070
tutorials of the section is a very important part and is going to play a big role in how we approach

150
00:09:55,400 --> 00:09:59,330
conversion of the remaining columns into their correct types.

151
00:09:59,330 --> 00:10:02,380
Hope you enjoy this tutorial and I look forward to seeing your next one.

152
00:10:02,390 --> 00:10:03,900
And until then have a coding
