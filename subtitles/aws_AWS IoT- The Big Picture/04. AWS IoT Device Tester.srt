1
00:00:01,504 --> 00:00:05,986
So how do we know what sorts of devices support Amazon FreeRTOS?

2
00:00:05,986 --> 00:00:08,624
Well, there's a few ways we can do this.

3
00:00:08,624 --> 00:00:12,757
One of the first is to just read through the AWS partner vendors,

4
00:00:12,757 --> 00:00:15,523
companies like Espessif, Nordic Semiconductor,

5
00:00:15,523 --> 00:00:18,699
and STMicroelectronics,

6
00:00:18,699 --> 00:00:21,342
all produce hardware that's specifically designed and passed

7
00:00:21,342 --> 00:00:25,310
tests to be able to host Amazon FreeRTOS,

8
00:00:25,310 --> 00:00:26,665
the operating system.

9
00:00:26,665 --> 00:00:29,161
Now this is the same for Amazon Greengrass software,

10
00:00:29,161 --> 00:00:31,219
which we'll talk about later on,

11
00:00:31,219 --> 00:00:34,631
but what if you don't necessarily want to work with a partner vendor?

12
00:00:34,631 --> 00:00:34,920
Well,

13
00:00:34,920 --> 00:00:38,721
then you can use your own hardware and test the hardware

14
00:00:38,721 --> 00:00:41,944
for compatibility with Amazon FreeRTOS.

15
00:00:41,944 --> 00:00:42,521
But how do you do that?

16
00:00:42,521 --> 00:00:47,639
Well, let's take a look at the AWS IoT Device Tester.

17
00:00:47,639 --> 00:00:49,083
It is a Windows, Linux,

18
00:00:49,083 --> 00:00:53,788
and Mac test automation tool for connected devices that can determine if

19
00:00:53,788 --> 00:00:58,792
your device is running Amazon FreeRTOS or AWS IoT Greengrass can be

20
00:00:58,792 --> 00:01:04,018
authenticated by and interoperate with AWS IoT Services.

21
00:01:04,018 --> 00:01:07,342
So essentially this will allow you to test if your own

22
00:01:07,342 --> 00:01:10,729
hardware is going to be an effective device for Amazon

23
00:01:10,729 --> 00:01:14,284
FreeRTOS or Amazon's IoT Greengrass.

24
00:01:14,284 --> 00:01:17,162
So let's take a look at how this works exactly.

25
00:01:17,162 --> 00:01:21,779
Well, the first step is we'd have a machine running the device testing software.

26
00:01:21,779 --> 00:01:23,378
Now this would be a Mac, Linux,

27
00:01:23,378 --> 00:01:28,806
or Windows device that downloads and installs the device tester software.

28
00:01:28,806 --> 00:01:31,352
Now after this, you'll also need the device that you want to test,

29
00:01:31,352 --> 00:01:35,747
which will be a potentially compatible device that is eventually plugged into

30
00:01:35,747 --> 00:01:39,519
the testing machine and a series of tests are then run.

31
00:01:39,519 --> 00:01:42,419
Now these run in sequence because you can't run every single

32
00:01:42,419 --> 00:01:46,858
test at the same time because of potential limitations on the

33
00:01:46,858 --> 00:01:48,849
storage space on these devices.

34
00:01:48,849 --> 00:01:52,195
So several tests will be sent over, the results will be sent back,

35
00:01:52,195 --> 00:01:54,688
and then that process will continue until a full suite

36
00:01:54,688 --> 00:01:57,297
of tests has been run on a device.

37
00:01:57,297 --> 00:02:00,576
Now if after all the tests run, they all return successful,

38
00:02:00,576 --> 00:02:08,000
this means that your device is effectively ready to go and can be used with AWS's device software.

