WEBVTT
1
00:00:00.980 --> 00:00:02.230
[Autogenerated] Now it's time to go.

2
00:00:02.230 --> 00:00:06.490
For more details into the I am policy topics,

3
00:00:06.490 --> 00:00:09.090
we will start with the most basic policy type,

4
00:00:09.090 --> 00:00:13.340
which is identity basic policy.

5
00:00:13.340 --> 00:00:16.740
As usual, we will go for definition first.

6
00:00:16.740 --> 00:00:21.720
Identity basic policy are Jason permission policy documents that you can

7
00:00:21.720 --> 00:00:26.780
attach to an identity which is a user group of users or a role.

8
00:00:26.780 --> 00:00:28.920
This is the most basic form off i.

9
00:00:28.920 --> 00:00:29.180
E.

10
00:00:29.180 --> 00:00:29.420
A.

11
00:00:29.420 --> 00:00:30.440
M policy.

12
00:00:30.440 --> 00:00:34.740
You create a policy which, as you can remember, is adjacent document.

13
00:00:34.740 --> 00:00:38.640
Then you touch deep policy toe an I am identity,

14
00:00:38.640 --> 00:00:43.320
which automatically is provided with permission specified in the policy.

15
00:00:43.320 --> 00:00:47.440
Everything is very simple at this level.

16
00:00:47.440 --> 00:00:51.730
The rest of this section is dedicated to provide you some meaningful examples.

17
00:00:51.730 --> 00:00:57.810
Is organizing a set of scenarios and task to be performed For each scenario,

18
00:00:57.810 --> 00:01:01.550
let's begin indecision area.

19
00:01:01.550 --> 00:01:03.060
We will have a simple task.

20
00:01:03.060 --> 00:01:06.510
The inspection off the policy that we have attached to the

21
00:01:06.510 --> 00:01:11.180
admin group during the previous model.

22
00:01:11.180 --> 00:01:14.380
Let's go to complete this task,

23
00:01:14.380 --> 00:01:21.950
let me open I am dashboard and then go for groups select

24
00:01:21.950 --> 00:01:25.610
at the main group and here we go first.

25
00:01:25.610 --> 00:01:28.350
I want you to observe that as expected.

26
00:01:28.350 --> 00:01:31.230
There are currently two users in this group,

27
00:01:31.230 --> 00:01:35.240
Bob and Alice, which are our administrators.

28
00:01:35.240 --> 00:01:37.360
Then if you selected the permission tub,

29
00:01:37.360 --> 00:01:40.210
you see that we have a policy in place A here,

30
00:01:40.210 --> 00:01:44.740
which is called Administrator Access.

31
00:01:44.740 --> 00:01:47.640
Alternate that this is a manager policy.

32
00:01:47.640 --> 00:01:53.350
While we have no in line policies if we select the show policy,

33
00:01:53.350 --> 00:01:55.820
the Jason document, which described the policy,

34
00:01:55.820 --> 00:01:57.940
is display it.

35
00:01:57.940 --> 00:02:00.320
As you can see, it is a very simple policy,

36
00:02:00.320 --> 00:02:06.680
with the only one statement which say's allow all action on all resources,

37
00:02:06.680 --> 00:02:13.040
which is exactly what you expect from an administrator policy.

38
00:02:13.040 --> 00:02:13.560
Finally,

39
00:02:13.560 --> 00:02:18.570
I want you to show a tool which is very handy when comes to managing policies.

40
00:02:18.570 --> 00:02:21.640
The policies simulator.

41
00:02:21.640 --> 00:02:24.160
If you select the similarly option policy,

42
00:02:24.160 --> 00:02:27.500
a new tab is opened in your browser and the policies

43
00:02:27.500 --> 00:02:32.130
simulator tools is displayed on the left side.

44
00:02:32.130 --> 00:02:36.640
You can see the current policy, which is administrator access,

45
00:02:36.640 --> 00:02:41.440
also noted that currently the user bob is selected,

46
00:02:41.440 --> 00:02:44.740
Then we can select the service to test, for example,

47
00:02:44.740 --> 00:02:47.740
AWS s tree service.

48
00:02:47.740 --> 00:02:52.000
We can select a specific action to evaluate against our policy.

49
00:02:52.000 --> 00:02:57.340
Let's suppose that we select all of them And then we just fired the

50
00:02:57.340 --> 00:03:00.800
round simulator button and the policy is evaluated.

51
00:03:00.800 --> 00:03:04.080
The taking into account that current user is Bob.

52
00:03:04.080 --> 00:03:07.170
Target service is a degree ancestry,

53
00:03:07.170 --> 00:03:12.900
and all possible actions are evaluated as expected.

54
00:03:12.900 --> 00:03:16.020
Given the privilege is described by the policy,

55
00:03:16.020 --> 00:03:18.930
all actions are allowed for all possible.

56
00:03:18.930 --> 00:03:23.810
AWS s three Bacchus in the account.

57
00:03:23.810 --> 00:03:25.840
Let me describe this scenario.

58
00:03:25.840 --> 00:03:30.140
Jeff is a new user belonging to an already created group

59
00:03:30.140 --> 00:03:33.240
which is called S three user group.

60
00:03:33.240 --> 00:03:38.490
Your task is to create a policy which allow Jeff to access all as three buckets,

61
00:03:38.490 --> 00:03:42.610
with the only exception represented by specific Barket

62
00:03:42.610 --> 00:03:48.440
where Jeff has no right privileges.

63
00:03:48.440 --> 00:03:53.180
Let's start again with I e m dashboard.

64
00:03:53.180 --> 00:03:58.640
Then we moved to policy where all the current policies are displayed.

65
00:03:58.640 --> 00:04:05.100
We select the create policy, we select the service history,

66
00:04:05.100 --> 00:04:11.340
select all possible action and the first statement is done.

67
00:04:11.340 --> 00:04:19.740
Then let me had a second statement select again the s tree service,

68
00:04:19.740 --> 00:04:21.900
then switch to deny permission.

69
00:04:21.900 --> 00:04:24.750
Which means that this statement contains are denying

70
00:04:24.750 --> 00:04:30.040
effect select all right actions.

71
00:04:30.040 --> 00:04:33.780
Then we further specify the specific bucket where we want to

72
00:04:33.780 --> 00:04:37.150
deny right action by providing est Reebok.

73
00:04:37.150 --> 00:04:40.340
It results identify here.

74
00:04:40.340 --> 00:04:42.710
And finally, we provide a friendly name,

75
00:04:42.710 --> 00:04:47.940
which is Jeff Policy, and created the policy.

76
00:04:47.940 --> 00:04:49.040
That's old.

77
00:04:49.040 --> 00:04:50.240
Surely not.

78
00:04:50.240 --> 00:04:57.540
The policy has to be attached to Jeff to provide a concrete effect so quickly,

79
00:04:57.540 --> 00:05:00.240
go to the user,

80
00:05:00.240 --> 00:05:08.540
select the Jeff at the permissions and select the already created Jeff Policy.

81
00:05:08.540 --> 00:05:10.040
And here we go.

82
00:05:10.040 --> 00:05:15.340
Jeff has been granted the privileges specified in our policy.

83
00:05:15.340 --> 00:05:20.940
Let's move to verify if our policy is working.

84
00:05:20.940 --> 00:05:24.010
Now, let me switch to CLI.

85
00:05:24.010 --> 00:05:30.340
I have a red set up AWS Eli with proper Jeff profile.

86
00:05:30.340 --> 00:05:37.140
Now Jeff is able to lease all s three buckets created into the current account.

87
00:05:37.140 --> 00:05:43.340
Also is able to put a test fightin file into the allow with the bucket.

88
00:05:43.340 --> 00:05:45.760
Let's also be fight that the file is Codec.

89
00:05:45.760 --> 00:05:48.840
Plea started the dare.

90
00:05:48.840 --> 00:05:51.940
But if you try to put an object into the not a lot with the

91
00:05:51.940 --> 00:06:02.000
bucket we receive a never Jeff is expected has no right access to that specific bucket

