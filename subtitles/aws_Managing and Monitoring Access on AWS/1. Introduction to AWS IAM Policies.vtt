WEBVTT
1
00:00:01.040 --> 00:00:05.360
[Autogenerated] welcome to managing access to AWS Resources.

2
00:00:05.360 --> 00:00:09.980
In this model, we will concentrate on AWS authorization framework.

3
00:00:09.980 --> 00:00:14.840
I will provide an exhaustive overview off out of position framework.

4
00:00:14.840 --> 00:00:18.250
We will explore several scenarios and we will tackle the

5
00:00:18.250 --> 00:00:21.480
different problems by liver region on proper access

6
00:00:21.480 --> 00:00:26.080
management tools More in detail.

7
00:00:26.080 --> 00:00:32.680
We will explore the following topics aws I am policy which is an I am

8
00:00:32.680 --> 00:00:37.540
out the physician tool which allow us to grant grandmother permission

9
00:00:37.540 --> 00:00:42.000
on AWS results is regarding I am policy.

10
00:00:42.000 --> 00:00:45.660
We will see the different policy variation which are identity

11
00:00:45.660 --> 00:00:50.530
basit results based and session policies and we will understand

12
00:00:50.530 --> 00:00:53.240
the scenarios where they feed better.

13
00:00:53.240 --> 00:00:53.770
Also,

14
00:00:53.770 --> 00:01:00.030
we will explore with more details special policies related to AWS s three

15
00:01:00.030 --> 00:01:07.240
service which are bucket policies and lifecycle policies.

16
00:01:07.240 --> 00:01:11.660
Let me know start with the definition What is the least privileged principle?

17
00:01:11.660 --> 00:01:15.890
It is the practice of limiting access rights for the user to the bare

18
00:01:15.890 --> 00:01:19.570
minimum permissions they need to perform their work.

19
00:01:19.570 --> 00:01:23.050
It is very clear that providing all users the same

20
00:01:23.050 --> 00:01:26.940
access level toe all resources very, very dangerous.

21
00:01:26.940 --> 00:01:27.070
Ah,

22
00:01:27.070 --> 00:01:30.500
well desagneaux out of position framework must be able to

23
00:01:30.500 --> 00:01:34.570
cover this peaceful does allow in granular and control it

24
00:01:34.570 --> 00:01:38.940
access to proper resources.

25
00:01:38.940 --> 00:01:42.140
Let me now provide a quick note on AWS success

26
00:01:42.140 --> 00:01:45.840
management from operational points of view.

27
00:01:45.840 --> 00:01:46.440
First,

28
00:01:46.440 --> 00:01:53.230
we should note that a new AWS I am user by default has no privileges at all.

29
00:01:53.230 --> 00:01:57.260
This means that we need to do some additional configuration to

30
00:01:57.260 --> 00:02:01.780
allow the user to perform some actions on a Darius results is

31
00:02:01.780 --> 00:02:06.190
the set of privileges off the user is specified by an object

32
00:02:06.190 --> 00:02:08.740
which is called I am policy.

33
00:02:08.740 --> 00:02:11.840
Once created for the policy to be effective,

34
00:02:11.840 --> 00:02:13.240
it must be attached,

35
00:02:13.240 --> 00:02:18.750
which means associated with I am identities which are identified by users,

36
00:02:18.750 --> 00:02:21.140
groups, resources and roles.

37
00:02:21.140 --> 00:02:23.300
According the type of identity.

38
00:02:23.300 --> 00:02:30.240
We have different form off policies which we will describe later in the tales.

39
00:02:30.240 --> 00:02:32.220
Here we go with the definition.

40
00:02:32.220 --> 00:02:35.690
I am policy defined permission for inaction,

41
00:02:35.690 --> 00:02:39.240
regardless off the mattered that you used to perform the

42
00:02:39.240 --> 00:02:42.390
operation and this is kind of self explanatory.

43
00:02:42.390 --> 00:02:43.810
I am policy.

44
00:02:43.810 --> 00:02:47.340
The find a set of permission to do something also considered

45
00:02:47.340 --> 00:02:50.040
that if a policy allowed to do some action,

46
00:02:50.040 --> 00:02:51.880
then I use it with that policy.

47
00:02:51.880 --> 00:02:56.270
Can perform these action with AWS management console with

48
00:02:56.270 --> 00:03:02.940
AWS July or directly with AWS a p I.

49
00:03:02.940 --> 00:03:07.360
But how the policy looks like policy is adjacent document

50
00:03:07.360 --> 00:03:10.040
composed by the following elements.

51
00:03:10.040 --> 00:03:14.070
A version which identified the current version of the specific

52
00:03:14.070 --> 00:03:17.880
Policy Object and Help 1000 Policy Management.

53
00:03:17.880 --> 00:03:19.900
Then we have a set of statements.

54
00:03:19.900 --> 00:03:24.040
Each statement composed by a service identify air,

55
00:03:24.040 --> 00:03:27.750
which is a friendly name which help us in identify

56
00:03:27.750 --> 00:03:30.970
single statement within our policy.

57
00:03:30.970 --> 00:03:37.640
Then we have an effect which can assume in the allow or deny values the action

58
00:03:37.640 --> 00:03:41.610
which described the specific action we want to allow or deny.

59
00:03:41.610 --> 00:03:42.630
For example,

60
00:03:42.630 --> 00:03:49.180
it can be in a read on s tree object or a stop or two a C two machine and so on.

61
00:03:49.180 --> 00:03:52.660
Then we have the resources which indicates the AWS

62
00:03:52.660 --> 00:03:55.440
resources to which we provide access.

63
00:03:55.440 --> 00:03:56.050
And finally,

64
00:03:56.050 --> 00:03:59.420
we have the condition which specify some condition that has

65
00:03:59.420 --> 00:04:02.840
to be met for the policy toe have effect.

66
00:04:02.840 --> 00:04:08.200
Please note that I am policy has mandatory elements which are the orange

67
00:04:08.200 --> 00:04:13.810
ones and optional elements which are the blue ones and also noted that

68
00:04:13.810 --> 00:04:18.540
you can have as many statements as you want.

69
00:04:18.540 --> 00:04:20.730
Now let's introduce a tricky topic.

70
00:04:20.730 --> 00:04:25.890
How high Am Policy is evaluated Amazon as a specific workflow,

71
00:04:25.890 --> 00:04:28.380
which is made up of four points.

72
00:04:28.380 --> 00:04:33.000
First, authentication where the identity of the user is evaluated.

73
00:04:33.000 --> 00:04:35.530
Second, the context is processed.

74
00:04:35.530 --> 00:04:39.740
Context here consists in the body off the policy itself,

75
00:04:39.740 --> 00:04:43.370
____ the different type of policy here are evaluated

76
00:04:43.370 --> 00:04:46.780
together to establish if there is a least one allow

77
00:04:46.780 --> 00:04:50.130
statement within single account and finally,

78
00:04:50.130 --> 00:04:54.040
the most crucial step where the final evaluation take place.

79
00:04:54.040 --> 00:04:58.940
Let me provide more details regarding this point.

80
00:04:58.940 --> 00:05:02.640
There are three main points which rules the final evaluation.

81
00:05:02.640 --> 00:05:06.280
Often I am policy by default.

82
00:05:06.280 --> 00:05:10.430
All recast is implicitly denied in other terms.

83
00:05:10.430 --> 00:05:12.210
To allow someone to do something,

84
00:05:12.210 --> 00:05:15.920
you have to write down a policy to allow a specific combination off

85
00:05:15.920 --> 00:05:20.500
resources and actions and explicit allow can override.

86
00:05:20.500 --> 00:05:21.880
It is the fault.

87
00:05:21.880 --> 00:05:23.330
As a stated before,

88
00:05:23.330 --> 00:05:26.260
when you write down that someone can do something which

89
00:05:26.260 --> 00:05:31.450
is an explicit allow automatically, These authorized the default behavior,

90
00:05:31.450 --> 00:05:36.510
which is implicit, deny and finally, an explicit deny.

91
00:05:36.510 --> 00:05:40.540
Authorize a previously stated allow rule,

92
00:05:40.540 --> 00:05:41.900
and this can be subtle,

93
00:05:41.900 --> 00:05:44.920
but it is a very handy rule and gives you many degrees

94
00:05:44.920 --> 00:05:49.200
of freedom when creating a policy.

95
00:05:49.200 --> 00:05:51.440
One final note on different categories.

96
00:05:51.440 --> 00:05:56.500
Off I am policies On one side, we have managed policies.

97
00:05:56.500 --> 00:05:57.600
Manager policies,

98
00:05:57.600 --> 00:06:03.540
comes into different ways AWS management policies and customer manager policies.

99
00:06:03.540 --> 00:06:04.330
On the other side,

100
00:06:04.330 --> 00:06:09.940
we have in line policies which are embedded in I am identities,

101
00:06:09.940 --> 00:06:13.150
and the main use case for them is when you need a streak toe.

102
00:06:13.150 --> 00:06:24.000
Want one relationship between identity and it's permissions. In all other cases, AWS recommends the use of managers policies.

