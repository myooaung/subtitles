WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.610
hello guys will come to another session in this session.

00:00:02.610 --> 00:00:06.290
We're going to discuss about eight of Louis Relational database service.

00:00:06.290 --> 00:00:08.320
So let's jump into the diagram.

00:00:08.320 --> 00:00:09.620
And there we will discuss.

00:00:09.620 --> 00:00:14.430
So guys eight of Louis Relational database always is another kind of service,

00:00:14.430 --> 00:00:19.470
which eight of Louis offers leader Blewitt Sarnia Service makes it easier to set up,

00:00:19.470 --> 00:00:25.710
operate and scale a relational database in the AWS cloud it a bliss RDS provides cost

00:00:25.710 --> 00:00:26.370
efficient.

00:00:26.370 --> 00:00:32.160
The sage will capacity or in in the ST Standard Relational database and manages Common

00:00:32.160 --> 00:00:32.700
database.

00:00:32.700 --> 00:00:33.860
Administration does.

00:00:33.860 --> 00:00:36.930
So you must re asking that Why do you want a man?

00:00:36.930 --> 00:00:38.790
Is relational database Soviet?

00:00:38.790 --> 00:00:44.500
So I will tell you it is because imagine RD is takes over many off the difficult or tedious

00:00:44.500 --> 00:00:48.080
management task for relational database photo under stranded with her.

00:00:48.080 --> 00:00:51.660
Let's understand the flow of the database management process.

00:00:51.660 --> 00:00:52.560
Generally,

00:00:52.560 --> 00:00:56.150
what we do when we want to set up a data with environment,

00:00:56.150 --> 00:00:57.710
we buy your so it's over.

00:00:57.710 --> 00:01:02.990
We will get CPU memory story along with I also managing these hardware.

00:01:02.990 --> 00:01:03.530
It's really,

00:01:03.530 --> 00:01:04.760
really cumber sometimes,

00:01:04.760 --> 00:01:07.010
and this is not related to a single so over.

00:01:07.010 --> 00:01:10.790
Suppose in case if our application lord is getting increased too,

00:01:10.790 --> 00:01:12.500
and we want another little bit.

00:01:12.500 --> 00:01:16.850
So where in days then we also need to take care off scaling by our own.

00:01:16.850 --> 00:01:17.700
So here,

00:01:17.700 --> 00:01:20.940
another complexity off scaling comes into picture.

00:01:20.940 --> 00:01:23.030
And with all these processes,

00:01:23.030 --> 00:01:25.750
there is a huge cost and world with hardware,

00:01:25.750 --> 00:01:27.390
along with the maintenance costs,

00:01:27.390 --> 00:01:30.050
which is an overhead for any organization.

00:01:30.050 --> 00:01:32.690
But if you're adopting with the image on our ideas,

00:01:32.690 --> 00:01:37.050
these are split apart so that we can scale them independently.

00:01:37.050 --> 00:01:37.850
If we need more,

00:01:37.850 --> 00:01:38.550
see views,

00:01:38.550 --> 00:01:40.860
psyops or more storage,

00:01:40.860 --> 00:01:45.030
we can easily locate the with the help of imagine RDS services.

00:01:45.030 --> 00:01:49.120
Imagine RDS manages backup software patching automatic failure,

00:01:49.120 --> 00:01:52.380
detection and recovery with Imagine RDS services.

00:01:52.380 --> 00:01:55.950
We can have automated back up off home when we need them,

00:01:55.950 --> 00:01:59.890
or we can manually create our old backup snapshot.

00:01:59.890 --> 00:02:06.010
And we can use these backups to restore eateries in case of failure in majority is restored

00:02:06.010 --> 00:02:06.010
,

00:02:06.010 --> 00:02:12.160
process works reliably and efficiently another point of motivation to use the majority of

00:02:12.160 --> 00:02:14.370
service with the majority of service.

00:02:14.370 --> 00:02:19.640
We get higher availability with the primary instance and are synchronised secondary instant

00:02:19.640 --> 00:02:22.360
that week and fail over to win problems.

00:02:22.360 --> 00:02:22.870
Soccer.

00:02:22.870 --> 00:02:26.610
No moving for the let's understand about the basic building block off.

00:02:26.610 --> 00:02:29.010
Imagine our ideas that is deviance.

00:02:29.010 --> 00:02:34.380
Chances for DB instance is an isolated a terrorist involvement in the heat of Louis cloudy

00:02:34.380 --> 00:02:34.380
.

00:02:34.380 --> 00:02:37.650
Every instance can contain multiple user data bases.

00:02:37.650 --> 00:02:43.700
We can access our TV instance by using the same tools and applications that we use with the

00:02:43.700 --> 00:02:44.940
standalone database.

00:02:44.940 --> 00:02:45.470
Since then,

00:02:45.470 --> 00:02:50.930
we can create and modify your database instrument by using the AWS command line interface.

00:02:50.930 --> 00:02:56.510
Imagine rds ap eight or with the AWS management console in the lab station or afraid of

00:02:56.510 --> 00:02:57.600
Louis RDS.

00:02:57.600 --> 00:03:02.270
We will use AWS management console to create the idea service.

00:03:02.270 --> 00:03:02.750
So no,

00:03:02.750 --> 00:03:04.800
let's look into the databases,

00:03:04.800 --> 00:03:08.130
which is being supported by the AWS RDS services.

00:03:08.130 --> 00:03:09.350
So these are the deviants.

00:03:09.350 --> 00:03:09.860
Chances,

00:03:09.860 --> 00:03:14.230
which is being supported by our ideas are they support my school Warrior,

00:03:14.230 --> 00:03:14.740
Devi,

00:03:14.740 --> 00:03:17.240
Oracle Fortress Equal and Sequel.

00:03:17.240 --> 00:03:21.770
So both of these are the database engine which runs on Libyan stances.

00:03:21.770 --> 00:03:26.830
Each of these data Vlissingen has its own supported features and eat wasn't offer.

00:03:26.830 --> 00:03:29.730
Devi Indian may include specific creatures.

00:03:29.730 --> 00:03:30.490
Additionally,

00:03:30.490 --> 00:03:35.560
East defending has a set off barometers in a deeply perimeter group that controlled the

00:03:35.560 --> 00:03:38.460
behavior of databases that it manages.

00:03:38.460 --> 00:03:40.950
One question must be triggering in your mind that,

00:03:40.950 --> 00:03:41.430
however,

00:03:41.430 --> 00:03:46.960
the competitions and the memory capacity because each application has differently willow

00:03:46.960 --> 00:03:48.660
competition and memory.

00:03:48.660 --> 00:03:49.370
How are these?

00:03:49.370 --> 00:03:51.560
Can manage all this for different deviance.

00:03:51.560 --> 00:03:52.470
Transit were here.

00:03:52.470 --> 00:03:55.030
I would like to tell you that Aid of Louis Rd.

00:03:55.030 --> 00:03:57.440
A service where ideal Devi instance.

00:03:57.440 --> 00:03:59.240
Classes basically imagine.

00:03:59.240 --> 00:04:00.640
Idea supports three types.

00:04:00.640 --> 00:04:01.240
Off instance.

00:04:01.240 --> 00:04:06.150
Classes That is the standard memory off to my stand but stable performance.

00:04:06.150 --> 00:04:06.380
No,

00:04:06.380 --> 00:04:08.440
let's discuss about Debbie Instances.

00:04:08.440 --> 00:04:09.030
Storage.

00:04:09.030 --> 00:04:09.840
Give instance.

00:04:09.840 --> 00:04:16.080
The stories comes in three types that are magnetic general purpose assist e and prove is,

00:04:16.080 --> 00:04:19.150
and I hopes the the story straight differs in performance.

00:04:19.150 --> 00:04:24.470
Character restricts and praised E db instance has been the moment Mac stories requirements

00:04:24.470 --> 00:04:24.470
,

00:04:24.470 --> 00:04:28.020
depending on this tortoise type and the database engine it support.

00:04:28.020 --> 00:04:33.670
But it is really important to have self recently story so that our database have room to

00:04:33.670 --> 00:04:35.230
grow sufficiently stories.

00:04:35.230 --> 00:04:41.110
Make sure that features for the D V engine have room to write content or log entries.

00:04:41.110 --> 00:04:41.630
No,

00:04:41.630 --> 00:04:44.190
let's move further than discuss about security.

00:04:44.190 --> 00:04:50.280
A security group controls the access toward a DB instance and it controls way lying access

00:04:50.280 --> 00:04:51.930
to I p Address ranges.

00:04:51.930 --> 00:04:57.170
Or imagine easy twins Chances that us specify a 1,000,000 are ideas.

00:04:57.170 --> 00:04:59.110
Uses deep security groups,

00:04:59.110 --> 00:05:02.230
three pieces security groups and easy to security.

00:05:02.230 --> 00:05:03.030
Here,

00:05:03.030 --> 00:05:07.790
a diva security group control access to a DB instance that is not a no.

00:05:07.790 --> 00:05:08.820
BBC repeats.

00:05:08.820 --> 00:05:12.340
A security group controls access to Algerian stance,

00:05:12.340 --> 00:05:18.920
Insider re PC and easy to security group control access to an easy to instruct and can be

00:05:18.920 --> 00:05:24.320
used with the deviance tents now moving for the Let's discuss about monitoring off billions

00:05:24.320 --> 00:05:24.850
chances.

00:05:24.850 --> 00:05:28.470
Monitoring is an important part of maintaining the reliability,

00:05:28.470 --> 00:05:30.240
availability and performance off.

00:05:30.240 --> 00:05:31.760
Imagine RD is here.

00:05:31.760 --> 00:05:34.860
I would like to give you some tips regarding monitoring,

00:05:34.860 --> 00:05:38.980
and this tips is not related only to the monitoring RDS service.

00:05:38.980 --> 00:05:42.640
It is applicable to any of the resources afraid of Louis.

00:05:42.640 --> 00:05:44.400
Whenever you start monitoring,

00:05:44.400 --> 00:05:48.920
you must create a monitoring plan that includes answers to these questions.

00:05:48.920 --> 00:05:51.880
And the questions are what are your monitoring gold's.

00:05:51.880 --> 00:05:53.720
What resources will you monitor?

00:05:53.720 --> 00:05:57.270
How often will you monitor these resource is monitoring tool?

00:05:57.270 --> 00:06:03.320
Will you use who will perform the monitoring us and who should be notified when something

00:06:03.320 --> 00:06:03.860
goes wrong.

00:06:03.860 --> 00:06:08.770
So these are the question you should answer prior to setting up any off the monitoring off

00:06:08.770 --> 00:06:10.330
resources in your plan.

00:06:10.330 --> 00:06:16.180
The next step you can do in the monitoring set up is to establish a baseline for normal.

00:06:16.180 --> 00:06:21.810
Imagine RDS performance in your environment by measuring performance at various time and

00:06:21.810 --> 00:06:24.120
under different load conditions.

00:06:24.120 --> 00:06:25.010
As you monitor,

00:06:25.010 --> 00:06:26.050
imagine rd it.

00:06:26.050 --> 00:06:29.410
You should consider a strong historical monitoring data.

00:06:29.410 --> 00:06:34.280
This is toward data will give you a baseline to compare against with current performance

00:06:34.280 --> 00:06:34.820
data.

00:06:34.820 --> 00:06:39.750
I didn't define normal performance pattern and performance and families and provide methods

00:06:39.750 --> 00:06:41.010
to address issues.

00:06:41.010 --> 00:06:47.010
Generally acceptable values for performance mattresses depends on what your baseline look

00:06:47.010 --> 00:06:49.410
like and what your application is doing.

00:06:49.410 --> 00:06:53.910
Investigate consistent or trending variants from your baseline.

00:06:53.910 --> 00:06:59.680
I would recommend that you should follow these matrices or so set of these matrices to

00:06:59.680 --> 00:07:04.170
monitor your VW's DB instances that is high CPU,

00:07:04.170 --> 00:07:05.170
RAM consumption,

00:07:05.170 --> 00:07:06.980
discuss space consumption,

00:07:06.980 --> 00:07:11.670
network traffic database connections and I ops mattresses.

00:07:11.670 --> 00:07:12.950
Now enough of theory.

00:07:12.950 --> 00:07:15.370
So here I want to stop the session.

00:07:15.370 --> 00:07:16.580
In the next session,

00:07:16.580 --> 00:07:23.270
we will do a lab on imagine ideas where we will create a my sick will give the engine using

00:07:23.270 --> 00:07:25.090
image on our idea services.

00:07:25.090 --> 00:07:26.950
That is going to be really fun.

00:07:26.950 --> 00:07:29.260
Exercise to see in the next instant.

00:07:29.260 --> 00:07:29.750
Until then,

00:07:29.750 --> 00:07:30.010
Bob,

00:07:30.010 --> 00:07:30.670
I take you.

