WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.310
Hello everyone, Welcome back.

00:00:02.310 --> 00:00:03.854
So in this example,

00:00:03.854 --> 00:00:07.350
I'm going to create a simple program to

00:00:07.350 --> 00:00:11.355
show you how the high strategic client will work in Java nine.

00:00:11.355 --> 00:00:17.340
So once we're done with John and then we'll go and do Java 11 example, right?

00:00:17.340 --> 00:00:18.990
So now I have a project here,

00:00:18.990 --> 00:00:21.840
Java 11 tutorial, and I don't want to touch anything.

00:00:21.840 --> 00:00:26.310
And because this particular project based on Java 11 JDK.

00:00:26.310 --> 00:00:28.949
So I have a Java 9 tutorial,

00:00:28.949 --> 00:00:31.090
which I call it out just now.

00:00:31.090 --> 00:00:33.200
And let me open the module setting.

00:00:33.200 --> 00:00:37.130
And I'm just trying to show you it is based on which JDK.

00:00:37.130 --> 00:00:38.660
So choose your project here,

00:00:38.660 --> 00:00:40.880
project, and here it is Java 11.

00:00:40.880 --> 00:00:43.010
So I'm changing it to Java nine.

00:00:43.010 --> 00:00:44.715
If you don't have a javelin,

00:00:44.715 --> 00:00:48.155
just install it and then you should be able to see it here.

00:00:48.155 --> 00:00:52.415
So I'm just modifying it java nine version, I'm not going to play.

00:00:52.415 --> 00:00:55.280
And okay, so now these empty project,

00:00:55.280 --> 00:01:00.845
so I'm going to create which contains java.com dot au features here.

00:01:00.845 --> 00:01:03.560
So what I'm gonna do is I'm gonna create this in bulk glass

00:01:03.560 --> 00:01:06.935
here to explore how HTTP client example in John.

00:01:06.935 --> 00:01:11.435
But before that, they need to have some URL, right?

00:01:11.435 --> 00:01:15.620
Because we are going to make API call.

00:01:15.620 --> 00:01:18.935
So let's get some test API URL from,

00:01:18.935 --> 00:01:20.660
I think we had the postman, you are right,

00:01:20.660 --> 00:01:22.040
so what I'm gonna do,

00:01:22.040 --> 00:01:28.610
go to your browser and search for postmen echo API.

00:01:28.610 --> 00:01:34.050
So it will give you that some URL to taste.

00:01:36.130 --> 00:01:39.890
Okay, So this is a URL and this is how you get the response.

00:01:39.890 --> 00:01:43.610
But anyway, I don't want to do I'm going to copy this and I'm going to run it

00:01:43.610 --> 00:01:48.200
separately in a separate tab to see what is outcome.

00:01:48.200 --> 00:01:50.990
So now we've got this is the response for the URL.

00:01:50.990 --> 00:01:57.020
So what I'm gonna do, we're going to call the same URL using our hash table client.

00:01:57.020 --> 00:01:58.445
Right?

00:01:58.445 --> 00:02:00.830
Let's go back to intelligent here.

00:02:00.830 --> 00:02:03.785
So here, under the Java.com,

00:02:03.785 --> 00:02:05.480
I mean com dot Java nine fugal,

00:02:05.480 --> 00:02:07.100
I'm going to create a new class here.

00:02:07.100 --> 00:02:15.330
Create a new class, and I'm going to name them into HTTP 2 Example, java nine.

00:02:15.490 --> 00:02:20.070
Okay, so the first thing that's come out with the presentation mode,

00:02:22.330 --> 00:02:26.430
because the first thing first, I'm going to create a main method.

00:02:30.060 --> 00:02:31.945
Main method.

00:02:31.945 --> 00:02:34.300
So the first thing, as I mentioned,

00:02:34.300 --> 00:02:37.405
we need a client and we need the request.

00:02:37.405 --> 00:02:39.910
And also we know that you are, okay.

00:02:39.910 --> 00:02:43.520
First lets me create an HTTP client here.

00:02:44.610 --> 00:02:49.840
But it is trying to retrieve the data from sun dotnet dot w,

00:02:49.840 --> 00:02:52.210
w, because this is not the one which you are looking for.

00:02:52.210 --> 00:02:53.980
We're looking for the SDK incubator.

00:02:53.980 --> 00:02:56.515
Correct. But the problem is,

00:02:56.515 --> 00:03:01.180
it won't be visible here because we all know that Java and it's a modular programming.

00:03:01.180 --> 00:03:04.420
So we need to have a model config in your project in

00:03:04.420 --> 00:03:07.720
order to include any external models.

00:03:07.720 --> 00:03:09.850
Because the editor incubator is not a default model,

00:03:09.850 --> 00:03:13.650
it won't be available in the normal project.

00:03:13.650 --> 00:03:16.520
Normally when you are using other models,

00:03:16.520 --> 00:03:19.820
the streams that utils everything available by default hero now to

00:03:19.820 --> 00:03:23.000
explicitly mentioned in your config file, I want this.

00:03:23.000 --> 00:03:26.585
But when you're going for incubator model, you need to provide it.

00:03:26.585 --> 00:03:28.025
So what now what we need to do,

00:03:28.025 --> 00:03:35.645
it may go back to the project and open your project and create a new module configure.

00:03:35.645 --> 00:03:37.055
So down in Madrid.

00:03:37.055 --> 00:03:39.230
So what is the model we required?

00:03:39.230 --> 00:03:45.815
So requires JDK dot incubator dot hash tables like this is the one we're looking for.

00:03:45.815 --> 00:03:48.425
Save it in now,

00:03:48.425 --> 00:03:50.940
we're back to your example.

00:03:53.980 --> 00:03:56.090
So I'm going to continue now.

00:03:56.090 --> 00:03:58.920
So let's create a method now.

00:03:59.170 --> 00:04:02.045
I mean HTTP client.

00:04:02.045 --> 00:04:04.490
So now I need to look for JDK incubator,

00:04:04.490 --> 00:04:06.140
that HTTP client, okay?

00:04:06.140 --> 00:04:09.560
So this is going to be a client, is a Walt.

00:04:09.560 --> 00:04:18.335
And so the method we want to use new heights GDP claim, correct.

00:04:18.335 --> 00:04:20.090
So I study big client,

00:04:20.090 --> 00:04:22.550
dot knew how she declined.

00:04:22.550 --> 00:04:24.080
So now we have applied in place.

00:04:24.080 --> 00:04:26.270
The next thing is we need to find out the URL

00:04:26.270 --> 00:04:28.895
so which connect where I'm going to make the connection?

00:04:28.895 --> 00:04:33.260
So you Oral, I think we already copied from the browser, right?

00:04:33.260 --> 00:04:34.745
So copy here.

00:04:34.745 --> 00:04:37.325
This is the URL which we are trying to make a call.

00:04:37.325 --> 00:04:40.385
And then we need to create a request.

00:04:40.385 --> 00:04:44.400
Okay? So I start API request.

00:04:44.980 --> 00:04:49.805
I started it was just in the namely disabled request.

00:04:49.805 --> 00:04:53.765
And we need to use the builder my dad betweens,

00:04:53.765 --> 00:04:57.020
which will create instance out of it.

00:04:57.020 --> 00:05:00.785
Okay, so what are the URL I'm going to provide here?

00:05:00.785 --> 00:05:06.870
So new URI.

00:05:07.180 --> 00:05:12.090
So here we need to provide the URL.

00:05:12.550 --> 00:05:15.540
And then don't.

00:05:16.300 --> 00:05:18.635
And get my dot.

00:05:18.635 --> 00:05:21.650
And again, I should have declined dot new folder.

00:05:21.650 --> 00:05:25.620
Okay, so we need to input the URL in the first place.

00:05:39.700 --> 00:05:42.380
So new URL.

00:05:42.380 --> 00:05:44.990
So I, I want to get that.

00:05:44.990 --> 00:05:46.670
I need to use the get method.

00:05:46.670 --> 00:05:48.890
So we need to specify that area in a getMethod,

00:05:48.890 --> 00:05:51.140
AAD, post my data or update or delete rate.

00:05:51.140 --> 00:05:54.755
So we need to provide what are the mat then we're going to use.

00:05:54.755 --> 00:05:57.410
So I'm going to use getMethod.

00:05:57.410 --> 00:06:01.865
So what are the URI Joe dotnet.

00:06:01.865 --> 00:06:03.740
Okay, we just correct.

00:06:03.740 --> 00:06:08.960
So new URL and you are.

00:06:08.960 --> 00:06:13.235
Okay, Got it. So now we're supposed to get,

00:06:13.235 --> 00:06:18.030
and then we're going to use the build Matata.

00:06:18.190 --> 00:06:25.535
Okay, So weight is not Turing enter here showing a human but found one.

00:06:25.535 --> 00:06:26.615
Okay?

00:06:26.615 --> 00:06:32.420
So you just keep sake.

00:06:32.420 --> 00:06:33.830
Oh my bad.

00:06:33.830 --> 00:06:37.325
So it's supposed to be high HTTP request, not the client.

00:06:37.325 --> 00:06:39.545
So now it is done.

00:06:39.545 --> 00:06:41.900
So now we got that a question, please.

00:06:41.900 --> 00:06:44.090
All we need to do is a MakerBot.

00:06:44.090 --> 00:06:45.650
So when you make a call, what'll happen?

00:06:45.650 --> 00:06:46.700
You'll get there is one, right?

00:06:46.700 --> 00:06:51.455
So we need to receive them as a response here, right?

00:06:51.455 --> 00:06:54.965
So response and I'm going to make the call.

00:06:54.965 --> 00:06:59.870
So who can make the call of quantity client can make a ball dot send method.

00:06:59.870 --> 00:07:01.220
It just seemed goodness color.

00:07:01.220 --> 00:07:02.975
I'm going to use the sentiment dot,

00:07:02.975 --> 00:07:06.560
which means it's a normal synchronous call.

00:07:06.560 --> 00:07:10.400
Okay, So now here is the important thing.

00:07:10.400 --> 00:07:14.525
So how I want to retrieve my response back?

00:07:14.525 --> 00:07:18.740
All right, so now I just want, I mean, as a string.

00:07:18.740 --> 00:07:22.580
So what I need to do for my third unit to pass the request,

00:07:22.580 --> 00:07:25.865
which mean this may respond to a request which I'm trying to make a call.

00:07:25.865 --> 00:07:32.345
And I'm gonna use the body hand labs HTTP response dot because body hand less.

00:07:32.345 --> 00:07:34.190
They can convert the data.

00:07:34.190 --> 00:07:36.170
How would we wreck wash things?

00:07:36.170 --> 00:07:39.080
So for now I'm going to read as a string.

00:07:39.080 --> 00:07:41.555
So we just more than enough for me right now.

00:07:41.555 --> 00:07:44.460
So happen here.

00:07:44.620 --> 00:07:45.905
Okay?

00:07:45.905 --> 00:07:48.080
But I'll do anything, I'll just make an exception here,

00:07:48.080 --> 00:07:50.490
not a specific exception.

00:07:50.950 --> 00:07:52.655
Okay.

00:07:52.655 --> 00:07:53.300
Got it.

00:07:53.300 --> 00:07:56.510
So now we've got the request and we got that response.

00:07:56.510 --> 00:08:03.270
So what are the next thing? We have to print the response, right?

00:08:03.460 --> 00:08:07.250
So what I'm gonna do,

00:08:07.250 --> 00:08:14.375
let me put some statements here like API response.

00:08:14.375 --> 00:08:18.395
And then let's see what is it good because in this one you have a lot of things, right?

00:08:18.395 --> 00:08:22.820
We have the state as we have the status code, right?

00:08:22.820 --> 00:08:26.540
So let's see a each and every one of them is out here.

00:08:26.540 --> 00:08:30.500
And response for is.

00:08:30.500 --> 00:08:33.020
So what I can do is you need to use

00:08:33.020 --> 00:08:37.115
the response object and you can use the status code MATLAB,

00:08:37.115 --> 00:08:39.110
which will give you the status code.

00:08:39.110 --> 00:08:43.325
Now I want to know the body what that is pons contains.

00:08:43.325 --> 00:08:46.445
So I am going to print the S out here.

00:08:46.445 --> 00:08:49.025
So response,

00:08:49.025 --> 00:08:57.635
body, response dot body.

00:08:57.635 --> 00:09:01.655
So now I got data as part of the body as well.

00:09:01.655 --> 00:09:02.960
Right?

00:09:02.960 --> 00:09:04.775
So we're going to simply run it.

00:09:04.775 --> 00:09:10.250
Are you want to get the header information.

00:09:10.250 --> 00:09:11.810
So let me show you the header information later.

00:09:11.810 --> 00:09:15.050
For now I want to run this and I'll show you what are the outcomes it does.

00:09:15.050 --> 00:09:19.475
It will give you the same response which we tried in the browser.

00:09:19.475 --> 00:09:22.160
The only difference is I'm making the call from

00:09:22.160 --> 00:09:26.180
the Internet Explorer or Firefox that browser there.

00:09:26.180 --> 00:09:29.435
And here I'm making the call using our eyes to the big client,

00:09:29.435 --> 00:09:33.050
responds, What have you seen this out given the iPhone?

00:09:33.050 --> 00:09:41.015
So this is the same response which will receive as part of the previous one.

00:09:41.015 --> 00:09:43.850
When we try it from the browser rate,

00:09:43.850 --> 00:09:45.290
we got the same response, correct?

00:09:45.290 --> 00:09:46.550
And we got the response.

00:09:46.550 --> 00:09:48.440
What is true and what isn't what you mean may do a hundred,

00:09:48.440 --> 00:09:50.135
two hundred minutes. It's sepsis.

00:09:50.135 --> 00:09:52.190
So sepsis or discord.

00:09:52.190 --> 00:09:53.960
Now let's do some more things.

00:09:53.960 --> 00:09:56.135
So I want to get the header information.

00:09:56.135 --> 00:09:58.610
So to get the get header information,

00:09:58.610 --> 00:10:02.585
you need to use the response, correct,

00:10:02.585 --> 00:10:10.950
sorry, response dot headers.

00:10:12.430 --> 00:10:15.200
But what will happen when you use a head,

00:10:15.200 --> 00:10:18.110
does it, we've done the map.

00:10:18.110 --> 00:10:20.675
So you need to use the map method.

00:10:20.675 --> 00:10:26.795
So map method which will then as that map of string of under list of string.

00:10:26.795 --> 00:10:29.600
So we need to create the same way.

00:10:29.600 --> 00:10:32.210
Got it. So now I'm gonna,

00:10:32.210 --> 00:10:34.670
I'm gonna do so the outcome is going to map off because that is

00:10:34.670 --> 00:10:37.910
the return type of the map metabolites.

00:10:37.910 --> 00:10:41.405
So string and then list of

00:10:41.405 --> 00:10:50.590
string in here and it's going to

00:10:50.590 --> 00:11:00.775
be important the map.

00:11:00.775 --> 00:11:03.010
So now we have the map, so let's print it.

00:11:03.010 --> 00:11:06.865
So I'm going to use the for each method to print the data.

00:11:06.865 --> 00:11:12.710
So we need to get the key and the value SQL.

00:11:17.970 --> 00:11:21.685
So simply provides this out.

00:11:21.685 --> 00:11:31.390
So and so I'm

00:11:31.390 --> 00:11:32.875
printing the key and the value.

00:11:32.875 --> 00:11:35.000
So let me run it again.

00:11:40.200 --> 00:11:43.510
See, now we got the header information.

00:11:43.510 --> 00:11:46.075
So the content type, content, lint,

00:11:46.075 --> 00:11:50.440
date, and tax, and cookies and some other options as well.

00:11:50.440 --> 00:11:51.880
So these are the header information.

00:11:51.880 --> 00:11:54.250
So make sure when you're retrieving the header information,

00:11:54.250 --> 00:11:57.970
you need to retrieve as a map using map method.

00:11:57.970 --> 00:12:03.895
The map method which will return map of string and the value is a list of string.

00:12:03.895 --> 00:12:11.450
So here I just received as a string late still,

00:12:11.450 --> 00:12:15.110
you can receive the master file also.

00:12:15.110 --> 00:12:19.025
Okay, So let me tell you how you can receive the master file.

00:12:19.025 --> 00:12:22.985
So just copy the response line.

00:12:22.985 --> 00:12:28.700
And for now I'm just until we,

00:12:28.700 --> 00:12:32.225
and I'm going to make them as a response one.

00:12:32.225 --> 00:12:33.950
Not much of stages,

00:12:33.950 --> 00:12:36.470
the chain rule only in the body handler.

00:12:36.470 --> 00:12:39.605
So interleave as string, what we're gonna do,

00:12:39.605 --> 00:12:41.525
we're gonna call ASA,

00:12:41.525 --> 00:12:44.045
I mean, retrieve as a file.

00:12:44.045 --> 00:12:50.165
And you need to provide apart because that to save your file.

00:12:50.165 --> 00:12:58.240
So paths dot get and you might have to provide the filename,

00:12:58.240 --> 00:13:00.970
for example, sample.bcf HTML.

00:13:00.970 --> 00:13:02.485
That is, once it'll be saved in the file,

00:13:02.485 --> 00:13:05.905
you can open the file to see the response as well.

00:13:05.905 --> 00:13:08.320
So input class here, c.

00:13:08.320 --> 00:13:09.835
Now we all good.

00:13:09.835 --> 00:13:12.010
So if you're in the example, the file,

00:13:12.010 --> 00:13:14.410
it'll be good in the same location and you can open the file,

00:13:14.410 --> 00:13:16.120
it will open in your browser.

00:13:16.120 --> 00:13:17.605
It's as simple as that.

00:13:17.605 --> 00:13:19.330
Nothing much difference here.

00:13:19.330 --> 00:13:20.860
So in the next example,

00:13:20.860 --> 00:13:26.455
I'm going to show you the same example with the help of Java 11 changes.

00:13:26.455 --> 00:13:28.240
So in the Java 11,

00:13:28.240 --> 00:13:31.270
we're going to talk about the US synchronous code.

00:13:31.270 --> 00:13:32.800
At the same time, you're going to try

00:13:32.800 --> 00:13:36.350
some example for asynchronous call as well. Thank you.
