WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.115
Hello everyone, welcome back.

00:00:02.115 --> 00:00:06.120
In this example, we are again going to talk about the lines matter.

00:00:06.120 --> 00:00:07.965
But instead of a single string,

00:00:07.965 --> 00:00:14.205
I'm going to read a file and then I'm going to return a data.

00:00:14.205 --> 00:00:16.905
So save it. So first let me,

00:00:16.905 --> 00:00:18.120
okay, let me show you one more thing.

00:00:18.120 --> 00:00:20.550
So I have a file in my desktop.

00:00:20.550 --> 00:00:26.624
Okay, so let me go to my finder in my desktop.

00:00:26.624 --> 00:00:32.700
I have a file called test test.txt open with text editor.

00:00:32.700 --> 00:00:35.970
Okay, so here I have welcome to Java 11.

00:00:35.970 --> 00:00:38.865
And you don't have to provide the slash in here.

00:00:38.865 --> 00:00:40.200
I guess so.

00:00:40.200 --> 00:00:44.240
So getting 11 happy learnings.

00:00:44.240 --> 00:00:45.290
So I had a lot of things here.

00:00:45.290 --> 00:00:47.405
Okay, So let me remove this line, sorry.

00:00:47.405 --> 00:00:52.010
So so now we have 1, 2,

00:00:52.010 --> 00:00:53.930
3, 4, four legs have what I want to read

00:00:53.930 --> 00:00:56.585
that data file and I'm going to convert them into a stream.

00:00:56.585 --> 00:00:58.205
So that's what we're gonna do.

00:00:58.205 --> 00:01:01.710
Okay, so let's go back to our intelligence.

00:01:03.640 --> 00:01:09.750
And here, let me move on to the presentation mode.

00:01:10.090 --> 00:01:11.540
Right?

00:01:11.540 --> 00:01:17.340
So, so I have to write a new method which will return a string.

00:01:17.410 --> 00:01:23.390
So static string, read file.

00:01:23.390 --> 00:01:27.320
And I'm going to use the one that knew my dad introduced in

00:01:27.320 --> 00:01:31.910
Java for reading a file and writing the file.

00:01:31.910 --> 00:01:33.365
For now, I'm going to use them,

00:01:33.365 --> 00:01:34.970
but you don't worry about that.

00:01:34.970 --> 00:01:36.275
In the upcoming videos.

00:01:36.275 --> 00:01:37.700
We have the separate session for it,

00:01:37.700 --> 00:01:39.680
okay, for now, just go through it with me.

00:01:39.680 --> 00:01:44.120
So string st is equal to,

00:01:44.120 --> 00:01:46.550
so phenomena is null.

00:01:46.550 --> 00:01:50.720
And then we get into the part where is it written down?

00:01:50.720 --> 00:01:52.715
So SD.

00:01:52.715 --> 00:01:54.605
So now what I need to do,

00:01:54.605 --> 00:01:57.950
I add another part ripe system, but so string.

00:01:57.950 --> 00:02:02.135
But, so since I'm using a Mac,

00:02:02.135 --> 00:02:07.235
I can use this system dot get properties.

00:02:07.235 --> 00:02:13.190
So the property which I'm looking for is user.name home user.

00:02:13.190 --> 00:02:15.215
This will be different in Windows.

00:02:15.215 --> 00:02:17.480
If you want to indicate when a bigger because of the window,

00:02:17.480 --> 00:02:20.150
you can simply copy the entire part.

00:02:20.150 --> 00:02:22.430
You can open up Windows Explorer and

00:02:22.430 --> 00:02:24.950
then you can find valuable file is located and copy the entire,

00:02:24.950 --> 00:02:27.140
But then paste it here.

00:02:27.140 --> 00:02:29.780
And you can directly use a string, you don't need us.

00:02:29.780 --> 00:02:31.970
It's not a good property in your Windows machine.

00:02:31.970 --> 00:02:32.705
Okay.

00:02:32.705 --> 00:02:34.370
So home and plasma,

00:02:34.370 --> 00:02:35.615
what I'm looking for.

00:02:35.615 --> 00:02:37.940
So I'm looking for desktop.

00:02:37.940 --> 00:02:45.120
Under the desktop I have a file called test dot TXT. Got it.

00:02:45.900 --> 00:02:47.980
So now what I'm gonna do,

00:02:47.980 --> 00:02:49.630
I'm gonna try credit,

00:02:49.630 --> 00:02:52.005
try and a catch because I'm going to use a files rate.

00:02:52.005 --> 00:02:53.920
So obviously it will throw an exception.

00:02:53.920 --> 00:02:56.200
There's the possibility of exception,

00:02:56.200 --> 00:02:57.685
so I had to handle them.

00:02:57.685 --> 00:03:02.110
So exception e and e

00:03:02.110 --> 00:03:12.145
dot print stack trace.

00:03:12.145 --> 00:03:14.500
So here what I'm gonna do,

00:03:14.500 --> 00:03:18.985
I'm gonna mode, I'm reading a file and now returning and date it and do a string.

00:03:18.985 --> 00:03:22.885
So what I'm gonna do is I'm gonna create a new string.

00:03:22.885 --> 00:03:31.740
So here I'm going to use the new files and dissonant Java 11 to read all bytes.

00:03:32.380 --> 00:03:35.240
So which will take the path as a input.

00:03:35.240 --> 00:03:39.170
So paths that get,

00:03:39.170 --> 00:03:40.550
so what are the parts here?

00:03:40.550 --> 00:03:43.010
So part of the credit here,

00:03:43.010 --> 00:03:45.845
the one which occurred at the line number 25.

00:03:45.845 --> 00:03:48.980
So now we have the string which we need to return,

00:03:48.980 --> 00:03:53.390
which contains the data which received from the test.txt file.

00:03:53.390 --> 00:03:58.565
So now what I can do go to our old method and create a one more string is a string.

00:03:58.565 --> 00:04:03.110
This is going to be STR 3, so it's equal.

00:04:03.110 --> 00:04:08.855
So what I'm gonna do is is we're going to call the read files.

00:04:08.855 --> 00:04:14.170
Sorry. We're going to call the read files to get them.

00:04:14.170 --> 00:04:17.290
Because the read file which will return a string, right anyway.

00:04:17.290 --> 00:04:18.835
So now what I'm gonna do,

00:04:18.835 --> 00:04:25.075
I'm gonna paste the same line here.

00:04:25.075 --> 00:04:28.839
So internal lines three.

00:04:28.839 --> 00:04:37.550
So what you are going to do is this geometry, okay?

00:04:40.530 --> 00:04:45.445
So SDR, three dots and lines mattered.

00:04:45.445 --> 00:04:49.750
But you'll turn in a stream and I'm dotted loop printing all the data here, right?

00:04:49.750 --> 00:04:51.670
So for now what I'm gonna do,

00:04:51.670 --> 00:04:57.800
I'm gonna come on these two because to see that clear outcome, save it.

00:04:57.800 --> 00:05:00.630
Now I'm going to run them again.

00:05:02.620 --> 00:05:05.375
See, welcome to Java.

00:05:05.375 --> 00:05:06.725
Learn.

00:05:06.725 --> 00:05:10.520
I learned Java features from the ADA and happy learning and Java near future.

00:05:10.520 --> 00:05:12.740
So there are four different streams.

00:05:12.740 --> 00:05:14.210
If all our single stream,

00:05:14.210 --> 00:05:16.070
everything comes in a single line,

00:05:16.070 --> 00:05:19.865
you might think so how do I make sure that it's the only thing?

00:05:19.865 --> 00:05:24.965
So let me go back to finder here and then I'll modify the test.txt.

00:05:24.965 --> 00:05:28.940
Okay, so sick.

00:05:28.940 --> 00:05:35.330
And so I need to well,

00:05:35.330 --> 00:05:41.270
from the presentation mode and open finder.

00:05:41.270 --> 00:05:44.795
And this is a test.txt file literature looking for open it.

00:05:44.795 --> 00:05:50.450
And thanks. Welcome again.

00:05:50.450 --> 00:05:54.320
So just save it and close.

00:05:54.320 --> 00:05:57.155
And if we run the code again now,

00:05:57.155 --> 00:05:58.940
earlier we got only four streams.

00:05:58.940 --> 00:06:02.480
Now we might get to moles shrink because we added two more lines to it.

00:06:02.480 --> 00:06:06.590
See it got worked properly.

00:06:06.590 --> 00:06:10.100
So this is how a unit and make use of lines method.

00:06:10.100 --> 00:06:14.405
So in the next video, we're going to talk about this trip and its methods.

00:06:14.405 --> 00:06:15.990
Thank you.
