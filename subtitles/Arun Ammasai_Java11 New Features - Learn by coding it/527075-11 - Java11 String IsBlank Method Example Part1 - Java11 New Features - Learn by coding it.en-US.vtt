WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.535
Hello everyone, Welcome back.

00:00:02.535 --> 00:00:03.720
So in the last video,

00:00:03.720 --> 00:00:04.800
as I mentioned earlier,

00:00:04.800 --> 00:00:07.530
we just simply discussing about how it can be done before.

00:00:07.530 --> 00:00:09.750
So now what we're going to do,

00:00:09.750 --> 00:00:13.305
we're going to try how it has been achieved in Java 11.

00:00:13.305 --> 00:00:15.915
So I'm going to use the ISS blank Madonna.

00:00:15.915 --> 00:00:17.070
We know that is black.

00:00:17.070 --> 00:00:20.565
Mother will take care of empty spaces, right?

00:00:20.565 --> 00:00:23.055
And also extra spaces.

00:00:23.055 --> 00:00:30.340
Okay, so I'm going to create a new method which will help us to understand.

00:00:30.560 --> 00:00:37.550
String is blank example.

00:00:37.550 --> 00:00:38.720
So the method name itself,

00:00:38.720 --> 00:00:40.505
I'm giving it as a metonym.

00:00:40.505 --> 00:00:43.910
Okay, so we're going to check is black example here.

00:00:43.910 --> 00:00:45.320
Correct.

00:00:45.320 --> 00:00:49.715
Okay, So let me give you a simple example how it has been done before

00:00:49.715 --> 00:00:55.115
Java loan for only removing that to check the blank ought not blank.

00:00:55.115 --> 00:00:58.610
So before Java 11, it's quite simple.

00:00:58.610 --> 00:01:02.540
Okay, So string and it is equal to,

00:01:02.540 --> 00:01:10.115
I'm going to have a same value here or say simply provide Java 11.

00:01:10.115 --> 00:01:13.160
So now what I'm gonna do is I'm going to write a condition

00:01:13.160 --> 00:01:22.685
if content

00:01:22.685 --> 00:01:25.295
dot equals.

00:01:25.295 --> 00:01:31.955
So I'm taking empty at the same time or the length.

00:01:31.955 --> 00:01:33.350
So if you trim the lint,

00:01:33.350 --> 00:01:36.155
if it is greater than Europe, which meant it has some valid data in it.

00:01:36.155 --> 00:01:39.800
So content dot, trim,

00:01:39.800 --> 00:01:44.630
dot to lend is not equal to 0,

00:01:44.630 --> 00:01:48.660
which means this IS NOT null.

00:01:50.800 --> 00:01:53.705
So I'm going to provide this here.

00:01:53.705 --> 00:02:01.085
So string is not empty.

00:02:01.085 --> 00:02:04.490
So this is how we will do for let me run it one more time.

00:02:04.490 --> 00:02:06.890
And I'm going to call this method the main.

00:02:06.890 --> 00:02:09.510
So I'm going to come on the previous one.

00:02:14.080 --> 00:02:16.940
Okay, So string is blank.

00:02:16.940 --> 00:02:21.960
Example, save it says round to one more time before we implement these black Madonna.

00:02:22.030 --> 00:02:25.400
Say the string is not empty because it has some content in it.

00:02:25.400 --> 00:02:28.410
Let me remove the Java 11 and we'll say

00:02:30.100 --> 00:02:38.990
n. Now you won't find anything because the string is not empty.

00:02:38.990 --> 00:02:42.200
One level print if the data is not null when I have a multiple.

00:02:42.200 --> 00:02:44.330
So let's print it again. Again, it will print anything

00:02:44.330 --> 00:02:47.435
because it will not go into the slope.

00:02:47.435 --> 00:02:50.690
Okay, so here there's a problem.

00:02:50.690 --> 00:02:54.275
So it is printing the string is not empty.

00:02:54.275 --> 00:02:58.535
So that is a problem when it says single space and when we have a multiple space.

00:02:58.535 --> 00:03:01.445
So how it handled in Java 11.

00:03:01.445 --> 00:03:07.475
So I'm going to do the same thing using Java 11 is black Madonna.

00:03:07.475 --> 00:03:08.195
Okay?

00:03:08.195 --> 00:03:10.775
So let me minimize this one.

00:03:10.775 --> 00:03:13.340
Okay, Let's actually, okay,

00:03:13.340 --> 00:03:15.185
So for example, I have a string,

00:03:15.185 --> 00:03:17.160
STR 1 is equal,

00:03:17.160 --> 00:03:20.975
and let's assume it has a single whitespace in it, right?

00:03:20.975 --> 00:03:23.340
So I'm going to print,

00:03:24.850 --> 00:03:27.290
I use black Matata, Okay,

00:03:27.290 --> 00:03:34.830
So Java 11, SDR one is blank.

00:03:35.770 --> 00:03:46.580
So, and I'm going to use SDN p1.y is black metallic solids,

00:03:46.580 --> 00:03:49.295
SUR1 is blank Matata.

00:03:49.295 --> 00:03:50.315
Okay?

00:03:50.315 --> 00:03:55.535
So what happened if the string STR 1 dot d is blank returns true.

00:03:55.535 --> 00:03:56.600
If this returns true,

00:03:56.600 --> 00:04:00.260
which means this SDL one is empty, right?

00:04:00.260 --> 00:04:02.760
Okay, so let me run that.

00:04:05.020 --> 00:04:11.990
All right, It is true, which means the SDR one is not proper value because it's empty.

00:04:11.990 --> 00:04:13.970
So let me do the same thing.

00:04:13.970 --> 00:04:22.370
And in this time I'm going to have a multiple whitespaces,

00:04:22.370 --> 00:04:24.410
like I'm going to keep it as the SGLT2.

00:04:24.410 --> 00:04:27.680
And here I'm going to have multiple whitespaces, okay?

00:04:27.680 --> 00:04:29.135
So save it.

00:04:29.135 --> 00:04:36.090
And here it's going to be SGLT2 and this again is going to be SGLT-2. So let's run it.

00:04:39.190 --> 00:04:42.080
See both the damn it returns true,

00:04:42.080 --> 00:04:47.190
which means the variable which we provided or AMD.

00:04:48.040 --> 00:04:51.050
Okay, so far we try to only with the MD data.

00:04:51.050 --> 00:04:53.090
So let's try with some property down.

00:04:53.090 --> 00:04:54.725
So I'm going to paste it one more time.

00:04:54.725 --> 00:04:57.890
And I'm going to name this as a SGR three.

00:04:57.890 --> 00:05:01.520
And let's have some mental called Java 11.

00:05:01.520 --> 00:05:04.355
So if this methodic, I mean if SDR,

00:05:04.355 --> 00:05:05.720
SDR threes returns true,

00:05:05.720 --> 00:05:09.335
which means ASD R3 is null, which means empty.

00:05:09.335 --> 00:05:13.370
So, but what it is supposed to return because it has a valid data,

00:05:13.370 --> 00:05:15.290
so it is a pollutant or false.

00:05:15.290 --> 00:05:16.850
So each blanket and false,

00:05:16.850 --> 00:05:18.935
which means the data is not blank.

00:05:18.935 --> 00:05:21.600
Just right-click again and again.

00:05:23.170 --> 00:05:24.710
Got it.

00:05:24.710 --> 00:05:26.585
So string is not empty,

00:05:26.585 --> 00:05:28.730
true, true, false, false means is blank,

00:05:28.730 --> 00:05:29.870
method is returning false,

00:05:29.870 --> 00:05:33.125
which means the string is not a blank, right?

00:05:33.125 --> 00:05:38.615
Okay, so now, so the next thing what I'm going to show you is

00:05:38.615 --> 00:05:44.749
I'm going to do the same thing using lambda expression.

00:05:44.749 --> 00:05:46.325
Also met that reference,

00:05:46.325 --> 00:05:47.870
which we'll talk about in the next video.

00:05:47.870 --> 00:05:49.470
Thank you.
