WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.410
Hello everyone.

00:00:01.410 --> 00:00:02.160
Welcome back.

00:00:02.160 --> 00:00:06.075
So we tried ness members and to find the host.

00:00:06.075 --> 00:00:07.860
So what is it still pending?

00:00:07.860 --> 00:00:11.940
So now we need to check the nist made of mud that so where we

00:00:11.940 --> 00:00:16.035
can use whenever you want to validate some estimates.

00:00:16.035 --> 00:00:17.205
So what I'm gonna do,

00:00:17.205 --> 00:00:20.354
I'm gonna create a method which takes two classes.

00:00:20.354 --> 00:00:26.130
So basically my method has to return whether this first-last belongs to the next class,

00:00:26.130 --> 00:00:27.900
which means a nest of the next class.

00:00:27.900 --> 00:00:30.840
So what I'm gonna do, I'm gonna create a new method here.

00:00:30.840 --> 00:00:35.060
Again is going to be private static,

00:00:35.060 --> 00:00:40.640
and this time wine and tomato name is OK.

00:00:40.640 --> 00:00:42.140
So now I'm going to name there,

00:00:42.140 --> 00:00:46.415
so validate nest mates.

00:00:46.415 --> 00:00:49.070
And we need to do Glass sense, right?

00:00:49.070 --> 00:00:55.220
So first one is this is going to be class one.

00:00:55.220 --> 00:00:57.530
And the next one, again,

00:00:57.530 --> 00:01:02.315
it's going to be January because I can pass any kind of number, right?

00:01:02.315 --> 00:01:04.565
So here I'm going to pass class 2.

00:01:04.565 --> 00:01:06.515
Okay, so now we've got the inputs.

00:01:06.515 --> 00:01:12.380
So let's explore. So I'm

00:01:12.380 --> 00:01:17.705
going to check whether the class one is nice to me as Shelf Class 2.

00:01:17.705 --> 00:01:19.970
Okay, So if we written it's true.

00:01:19.970 --> 00:01:20.570
What does it mean?

00:01:20.570 --> 00:01:21.920
Okay, Both of them,

00:01:21.920 --> 00:01:26.495
this second that I'm in the second class is an image of the first-class nist made.

00:01:26.495 --> 00:01:29.045
I mean, if somebody is asking,

00:01:29.045 --> 00:01:30.875
Is this person is your classmate?

00:01:30.875 --> 00:01:33.200
If you know him, you will say is if you don't know him,

00:01:33.200 --> 00:01:35.540
no, He's not a classmate. A similar way.

00:01:35.540 --> 00:01:39.245
I'm getting two classes and I'm asking to the one cluster other class whether

00:01:39.245 --> 00:01:41.060
the second class is you witnessed made and

00:01:41.060 --> 00:01:43.055
the first-class is going to respond no, it is not.

00:01:43.055 --> 00:01:46.175
Orders. Yes. So that's what we're going to explore here.

00:01:46.175 --> 00:01:47.555
So now what I'm gonna do.

00:01:47.555 --> 00:01:53.165
So class one dot is an estimate of

00:01:53.165 --> 00:02:00.620
class two, Class 2.

00:02:00.620 --> 00:02:02.345
So eventually what will happen?

00:02:02.345 --> 00:02:04.865
This dot is going to return a Boolean, right?

00:02:04.865 --> 00:02:09.690
So, Boolean, Let's check.

00:02:11.380 --> 00:02:13.625
Check is a quote.

00:02:13.625 --> 00:02:16.295
So now I have that nice chick, okay.

00:02:16.295 --> 00:02:20.855
Which means it which contains whether it is an estimate of the glass to or not.

00:02:20.855 --> 00:02:21.530
Right.

00:02:21.530 --> 00:02:22.655
So let's do that.

00:02:22.655 --> 00:02:28.200
So I'm going to print them out here and let's check.

00:02:29.350 --> 00:02:31.055
Check.

00:02:31.055 --> 00:02:34.490
Okay, so and I'm going to print them as Chagas blue.

00:02:34.490 --> 00:02:36.170
Sorry.

00:02:36.170 --> 00:02:38.615
So nest check.

00:02:38.615 --> 00:02:40.280
Okay, so now we've got to McDonald's.

00:02:40.280 --> 00:02:42.845
Okay, So one of the following year, boolean, right?

00:02:42.845 --> 00:02:44.630
So now we have the method available.

00:02:44.630 --> 00:02:48.965
So all I need to do just passed two classes to validate them.

00:02:48.965 --> 00:02:50.075
Can do that.

00:02:50.075 --> 00:02:51.020
Yes, we can.

00:02:51.020 --> 00:02:52.490
So let's go back to our main method.

00:02:52.490 --> 00:02:53.870
Let's comment this one.

00:02:53.870 --> 00:02:58.415
And I'm going to call the while date nest mates.

00:02:58.415 --> 00:03:00.590
Okay, so what are the class? We can pass it.

00:03:00.590 --> 00:03:02.255
Okay, The first thing, what I'm gonna do,

00:03:02.255 --> 00:03:05.615
I'm gonna pass the Java collection method dot class.

00:03:05.615 --> 00:03:08.420
And the second one is nice Class C.

00:03:08.420 --> 00:03:09.260
Great.

00:03:09.260 --> 00:03:14.195
So next class, okay,

00:03:14.195 --> 00:03:15.800
So what we can do,

00:03:15.800 --> 00:03:17.940
Let's run it and see.

00:03:19.570 --> 00:03:21.785
Okay, It is true.

00:03:21.785 --> 00:03:23.315
So why it is true?

00:03:23.315 --> 00:03:28.160
Okay, So what I'm saying so I'm asking whether the NUS class year is

00:03:28.160 --> 00:03:33.350
it an estimate of this Java 11 affliction meant that just scopes to go top.

00:03:33.350 --> 00:03:38.675
And so these are the NUS domains and he's the host, right?

00:03:38.675 --> 00:03:41.510
So I'm asking whether the class is part of the reflection method.

00:03:41.510 --> 00:03:43.910
Yes, it is. So obviously Tilden, true.

00:03:43.910 --> 00:03:45.905
That's kinda try with the B now.

00:03:45.905 --> 00:03:48.125
Okay, so let me copy the same thing here.

00:03:48.125 --> 00:03:50.390
And I'm going to print it again.

00:03:50.390 --> 00:03:52.760
But instead of a,

00:03:52.760 --> 00:03:54.140
I'm going to pass BY.

00:03:54.140 --> 00:03:59.225
Eventually develop done, true because both are made of Java reflection.

00:03:59.225 --> 00:04:02.450
Okay, so to check invalid scenario,

00:04:02.450 --> 00:04:03.920
what I'm gonna do in the bottom,

00:04:03.920 --> 00:04:08.450
I'm going to create one more class called test class or test 1.

00:04:08.450 --> 00:04:12.620
So this is going to be class is just a dummy less than I think I'll be here.

00:04:12.620 --> 00:04:14.840
Okay, So now what I'm gonna do,

00:04:14.840 --> 00:04:17.825
so I'm going to paste the same code here.

00:04:17.825 --> 00:04:24.335
So I'm going to pass Test1.

00:04:24.335 --> 00:04:28.910
Okay? So this one is not part of this particular Java Reflection, my thought.

00:04:28.910 --> 00:04:31.970
Okay, I give you this.

00:04:31.970 --> 00:04:32.840
Okay?

00:04:32.840 --> 00:04:34.550
So only up to this,

00:04:34.550 --> 00:04:38.105
it is a part of Java reflection level methods class.

00:04:38.105 --> 00:04:39.905
And this is a new class,

00:04:39.905 --> 00:04:41.840
and it's not part of this one.

00:04:41.840 --> 00:04:45.260
So if I try, what'll happen?

00:04:45.260 --> 00:04:48.890
It has to return a false because that test1

00:04:48.890 --> 00:04:52.775
is not an estimate of the our reflection method because that's a separate class.

00:04:52.775 --> 00:04:53.480
Correct.

00:04:53.480 --> 00:04:56.820
Okay, so let's run this and see what's the outcome.

00:04:59.830 --> 00:05:01.250
Okay?

00:05:01.250 --> 00:05:02.540
It is a files, okay,

00:05:02.540 --> 00:05:05.120
it's a valid scenario because it is just a different class.

00:05:05.120 --> 00:05:08.000
It doesn't have to do anything with the jaguar.

00:05:08.000 --> 00:05:09.155
Our affection met that.

00:05:09.155 --> 00:05:12.305
Okay. So let's try something else as well. So let's copy this.

00:05:12.305 --> 00:05:14.060
And I'm going to copy one more time.

00:05:14.060 --> 00:05:15.620
I'm going to check.

00:05:15.620 --> 00:05:20.675
So next class C, and this is going to be industrial on,

00:05:20.675 --> 00:05:23.880
in this class we, let's see what happened now.

00:05:24.900 --> 00:05:27.130
It is again true, yes.

00:05:27.130 --> 00:05:28.180
And it's Class a and B.

00:05:28.180 --> 00:05:29.650
Both are estimates.

00:05:29.650 --> 00:05:30.820
I like a classmate's.

00:05:30.820 --> 00:05:34.195
They're all belongs to a single class, the early netlist.

00:05:34.195 --> 00:05:37.490
So obviously their nest mates.

00:05:37.740 --> 00:05:39.130
Right?

00:05:39.130 --> 00:05:42.190
So this is how you need to make use of all three methods.

00:05:42.190 --> 00:05:44.155
So, so far we tried,

00:05:44.155 --> 00:05:47.980
we know how to get the members of a nest.

00:05:47.980 --> 00:05:51.220
I mean, I remember suffer a simple house.

00:05:51.220 --> 00:05:53.770
You, I'll give you host and you can provide me

00:05:53.770 --> 00:05:56.980
all the nist members are available under the same host.

00:05:56.980 --> 00:05:59.320
Yes, I can do that using goodness members.

00:05:59.320 --> 00:06:01.689
Okay, So I want to find out a host.

00:06:01.689 --> 00:06:05.140
So what you can do, you can use the find host method,

00:06:05.140 --> 00:06:08.145
which will give you the host.

00:06:08.145 --> 00:06:10.835
And then I want to validate them.

00:06:10.835 --> 00:06:16.370
So you can use the nist made of matter which accepts a class as a input,

00:06:16.370 --> 00:06:18.800
which really done a Boolean as the outcome.

00:06:18.800 --> 00:06:19.670
Okay?

00:06:19.670 --> 00:06:22.070
So now we're going to make use of all three methods.

00:06:22.070 --> 00:06:23.300
So in the next video,

00:06:23.300 --> 00:06:25.850
we'll talk about the another future.

00:06:25.850 --> 00:06:27.510
Thank you.
