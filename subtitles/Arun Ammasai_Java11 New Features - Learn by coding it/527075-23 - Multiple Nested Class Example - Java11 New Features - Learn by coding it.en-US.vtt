WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.020 --> 00:00:02.580
Hello everyone, Welcome back.

00:00:02.580 --> 00:00:04.980
So we discussed how

00:00:04.980 --> 00:00:09.270
the inner classes communicated through in their nest members and the nest holes, right?

00:00:09.270 --> 00:00:14.715
So now it's time for us to explore what is a nest member and what isn't nice to host.

00:00:14.715 --> 00:00:17.220
The first example I'm going to show you here.

00:00:17.220 --> 00:00:20.385
That is a class which contains multiple classes inside.

00:00:20.385 --> 00:00:23.745
For example, I have a class called multiple nested class example.

00:00:23.745 --> 00:00:29.250
Instead I have a method which under my initial class example,

00:00:29.250 --> 00:00:32.520
and I have two different classes inside the same class,

00:00:32.520 --> 00:00:33.915
I have an assert class here,

00:00:33.915 --> 00:00:38.430
and I do have one more class called nested class B, right?

00:00:38.430 --> 00:00:43.040
And then nist members.

00:00:43.040 --> 00:00:45.200
So what is nist members?

00:00:45.200 --> 00:00:49.310
Here's an example and here is the outcome of it.

00:00:49.310 --> 00:00:52.250
So minus members our next class,

00:00:52.250 --> 00:00:56.120
C and nist class be good.

00:00:56.120 --> 00:00:58.505
And in that case hole with the host,

00:00:58.505 --> 00:01:02.569
the multiple nested class example is the nist host.

00:01:02.569 --> 00:01:06.185
So the classes which is a member of the host,

00:01:06.185 --> 00:01:09.030
they are called SM members.

00:01:09.250 --> 00:01:13.130
End nist host, who's the host here?

00:01:13.130 --> 00:01:16.445
See the multiple nested class example, AES.

00:01:16.445 --> 00:01:20.855
One is the host for the nested classes.

00:01:20.855 --> 00:01:24.260
So if you want to put it in a simple way, what I want,

00:01:24.260 --> 00:01:29.315
I can simply tell you is that is the class contains one,

00:01:29.315 --> 00:01:32.810
that is a class which contains two multiple classes, okay?

00:01:32.810 --> 00:01:35.180
That class contains tumor to interclass,

00:01:35.180 --> 00:01:36.725
that's called SNS to host.

00:01:36.725 --> 00:01:37.985
And the classes are, well,

00:01:37.985 --> 00:01:41.765
I'm in classes are available inside that particular host.

00:01:41.765 --> 00:01:44.550
They are called SNS to members.

00:01:45.220 --> 00:01:46.655
Right?

00:01:46.655 --> 00:01:50.540
So let's try the same example.

00:01:50.540 --> 00:01:54.740
We'll see whether we are able to see the nice members and the nist host.

00:01:54.740 --> 00:02:00.800
Okay, so let's go back to our editor.

00:02:00.800 --> 00:02:04.230
So I'm going to create a new example here.

00:02:05.290 --> 00:02:08.210
So I'm going to create a similar,

00:02:08.210 --> 00:02:18.720
a similar example, multiple Nestor glass example.

00:02:21.550 --> 00:02:26.105
Let's save it first, Control C and Control S,

00:02:26.105 --> 00:02:28.640
and save them in the same folder.

00:02:28.640 --> 00:02:30.630
This folder.

00:02:31.270 --> 00:02:33.710
Since I had a class existing,

00:02:33.710 --> 00:02:35.910
so I'm going to replace it.

00:02:36.040 --> 00:02:40.730
Okay, so now what I'm gonna do,

00:02:40.730 --> 00:02:43.520
I'm going to create a method here.

00:02:43.520 --> 00:02:53.720
So private, private, static,

00:02:53.720 --> 00:03:01.625
void, and the simple math dot system,

00:03:01.625 --> 00:03:07.880
dot out dot, print LN and just you can pass some data here.

00:03:07.880 --> 00:03:12.770
So, so we can simply say nist, host my dot.

00:03:12.770 --> 00:03:15.575
Because as we discussed,

00:03:15.575 --> 00:03:18.725
the class contents, everything called SN nist host straight.

00:03:18.725 --> 00:03:21.500
So the add method comes under this particular class,

00:03:21.500 --> 00:03:23.540
which means it's a host method.

00:03:23.540 --> 00:03:25.850
Okay, so now what I'm gonna do,

00:03:25.850 --> 00:03:29.855
so now we have to create different classes,

00:03:29.855 --> 00:03:32.870
which means that we are creating members for the host.

00:03:32.870 --> 00:03:37.010
So next,

00:03:37.010 --> 00:03:44.990
static nested class a,

00:03:44.990 --> 00:03:50.270
and I'm going to call copy the same thing, Control C.

00:03:50.270 --> 00:03:53.070
And I'm going to paste them.

00:03:54.340 --> 00:03:58.550
Okay, so this is going to be Class a and Class B.

00:03:58.550 --> 00:04:00.905
So I don't, I don't add anything inside my class B.

00:04:00.905 --> 00:04:03.440
And here, only in the nested class C,

00:04:03.440 --> 00:04:04.535
I'm going to provide something.

00:04:04.535 --> 00:04:06.485
I'm going to create a method,

00:04:06.485 --> 00:04:15.020
public, static, void, do some.

00:04:16.620 --> 00:04:19.450
So here what I'm gonna do, I'm not going to anything.

00:04:19.450 --> 00:04:22.240
I'm going to simply call the method available in my host.

00:04:22.240 --> 00:04:23.230
What is the host?

00:04:23.230 --> 00:04:24.880
Multiple initial class example,

00:04:24.880 --> 00:04:27.250
what is the host method did add metadata.

00:04:27.250 --> 00:04:29.200
So I'm going to add them up.

00:04:29.200 --> 00:04:30.805
So I'm going to save it.

00:04:30.805 --> 00:04:35.020
So now we created a new class which conduct multiple inner classes.

00:04:35.020 --> 00:04:37.075
Let's combine them and see what happened.

00:04:37.075 --> 00:04:38.830
So I need to open a terminal.

00:04:38.830 --> 00:04:40.870
So let me clear the console.

00:04:40.870 --> 00:04:44.770
So let's compile the code Java C and

00:04:44.770 --> 00:04:49.270
the multiple glass nested class example, the Java, right?

00:04:49.270 --> 00:04:55.100
So there is an error lane number for glitzy.

00:04:55.100 --> 00:05:00.365
So System.out.println, sorry, I always make a mistake here.

00:05:00.365 --> 00:05:02.420
So I'm going to compare them again.

00:05:02.420 --> 00:05:03.815
Now the compilation is done.

00:05:03.815 --> 00:05:06.890
So now we need to see how many files are created.

00:05:06.890 --> 00:05:11.120
Can you see here? This is my Java file,

00:05:11.120 --> 00:05:15.410
first one, the second one is the nested class C class and nested class B.

00:05:15.410 --> 00:05:18.470
And the final one is the, the host class.

00:05:18.470 --> 00:05:19.460
Right?

00:05:19.460 --> 00:05:20.750
So now what I'm gonna do,

00:05:20.750 --> 00:05:26.525
I'm gonna use a Java PHP command to see our open the class file and see what is inside.

00:05:26.525 --> 00:05:33.035
So Java VIF and we sum multiple example dot class file.

00:05:33.035 --> 00:05:35.600
Can you see something here?

00:05:35.600 --> 00:05:41.555
The nest members, because the class which I'm trying to dismantle is then host class.

00:05:41.555 --> 00:05:44.150
So host must contain some inner classes,

00:05:44.150 --> 00:05:46.955
which means the new, newest members.

00:05:46.955 --> 00:05:49.115
Okay, So when you explore,

00:05:49.115 --> 00:05:51.335
when you try to dismantle you were host class,

00:05:51.335 --> 00:05:53.870
you can see the nice members. They're similar way.

00:05:53.870 --> 00:05:56.840
When you tried to dismantle you were nest member,

00:05:56.840 --> 00:05:59.090
you should be able to see the next host.

00:05:59.090 --> 00:06:00.500
Can try that.

00:06:00.500 --> 00:06:10.250
So Java API, I find me some multiple class nested class a, that class.

00:06:10.250 --> 00:06:15.035
So see what happened here.

00:06:15.035 --> 00:06:17.150
When I, when I, when I tried to do

00:06:17.150 --> 00:06:20.060
the same thing in the previous class, which means the host class.

00:06:20.060 --> 00:06:21.305
I can see that nist members,

00:06:21.305 --> 00:06:25.025
but for this, I got next host.

00:06:25.025 --> 00:06:29.435
The reason the one I'm trying to open is a nest member.

00:06:29.435 --> 00:06:31.040
So when you open the nist member,

00:06:31.040 --> 00:06:34.325
you should be able to see who's the host for the nest.

00:06:34.325 --> 00:06:35.765
Right?

00:06:35.765 --> 00:06:40.230
So let's try for an underclass Astra, which means the B class.

00:06:40.570 --> 00:06:42.395
B.

00:06:42.395 --> 00:06:47.780
Again, you can see the nist host, right?

00:06:47.780 --> 00:06:51.275
So from the developer perspective,

00:06:51.275 --> 00:06:53.930
when you have a code with current times,

00:06:53.930 --> 00:06:57.020
the inner classes, you don't have to do any modifications

00:06:57.020 --> 00:07:01.010
because this changes under the compiler level.

00:07:01.010 --> 00:07:03.695
Okay, so in the next example,

00:07:03.695 --> 00:07:07.595
we're going to talk about how the impact will be on the reflection axis.

00:07:07.595 --> 00:07:09.330
Q.
