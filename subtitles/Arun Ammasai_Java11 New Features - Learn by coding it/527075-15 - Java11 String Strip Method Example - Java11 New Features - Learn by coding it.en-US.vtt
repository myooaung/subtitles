WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.295
Hello everyone. Welcome back.

00:00:02.295 --> 00:00:03.630
In this video, you're going to double.

00:00:03.630 --> 00:00:08.505
Well, then next new metal strip method.

00:00:08.505 --> 00:00:10.740
We had three different methods.

00:00:10.740 --> 00:00:13.080
We're going to talk about each, every one of them.

00:00:13.080 --> 00:00:15.075
So let me create a new class here.

00:00:15.075 --> 00:00:19.210
So tau 11,

00:00:19.220 --> 00:00:27.040
string, strip example.

00:00:30.610 --> 00:00:33.845
So let me open the presentation mode.

00:00:33.845 --> 00:00:40.370
So okay, so let's have a main method in the first place.

00:00:40.370 --> 00:00:43.940
So we're going to explore the strip method.

00:00:43.940 --> 00:00:47.190
So I'm going to create a new method here.

00:00:48.130 --> 00:00:55.470
Static wide, string strip example.

00:01:00.610 --> 00:01:02.705
String strip example.

00:01:02.705 --> 00:01:04.550
Okay, so first thing first,

00:01:04.550 --> 00:01:06.665
let me create a simple string here.

00:01:06.665 --> 00:01:10.745
String str1.

00:01:10.745 --> 00:01:13.820
I have some empty space here,

00:01:13.820 --> 00:01:17.180
so welcome to Java 11.

00:01:17.180 --> 00:01:21.710
Futures. And I have a few more empty spaces here.

00:01:21.710 --> 00:01:27.125
So trim means it's removing empty spaces.

00:01:27.125 --> 00:01:28.220
Okay?

00:01:28.220 --> 00:01:31.280
So I have some empty spaces here from

00:01:31.280 --> 00:01:35.375
the left side and also I have some empty spaces and the right side.

00:01:35.375 --> 00:01:39.005
So first, let me print the length of it.

00:01:39.005 --> 00:01:43.670
So I'm going to print the land and then I'm going to print D land after the trim.

00:01:43.670 --> 00:01:44.405
Okay?

00:01:44.405 --> 00:01:50.520
So here is going to be lent before Trump.

00:01:55.690 --> 00:02:00.755
Str 1 dot lend.

00:02:00.755 --> 00:02:04.730
And then I'm going to strip the content,

00:02:04.730 --> 00:02:12.080
and then I'm going to print the data string.

00:02:12.080 --> 00:02:16.415
Or maybe I can do something like this.

00:02:16.415 --> 00:02:19.340
Let me copy this entire more here.

00:02:19.340 --> 00:02:29.060
Control V, So lent after shrimp.

00:02:29.060 --> 00:02:31.580
So what I'm gonna do SGA or dot,

00:02:31.580 --> 00:02:34.385
I'm going to use the strip method,

00:02:34.385 --> 00:02:37.985
okay, which will trim both ways.

00:02:37.985 --> 00:02:42.680
Right? And then so Lint after all had to print the data source, right?

00:02:42.680 --> 00:02:46.890
So Control-C, Control-V here,

00:02:50.170 --> 00:02:54.570
trim STR 1.

00:02:56.230 --> 00:02:59.225
Okay, so I have a string STR 1,

00:02:59.225 --> 00:03:01.565
and I'm printing the land them before they're trumping.

00:03:01.565 --> 00:03:03.650
And I'm printing the data,

00:03:03.650 --> 00:03:06.440
how would it look like when you trim strip the data?

00:03:06.440 --> 00:03:08.255
Sorry, it's stripped, not a trim.

00:03:08.255 --> 00:03:11.850
So strip.

00:03:15.180 --> 00:03:18.760
Okay, so the first thing, lend,

00:03:18.760 --> 00:03:26.020
and then I'm stripping the data and then showing the length out of this trip.

00:03:26.020 --> 00:03:30.080
So let me run this, let me call this 1 first.

00:03:31.110 --> 00:03:33.730
Call the method here.

00:03:33.730 --> 00:03:37.945
Strings to, for example, say it.

00:03:37.945 --> 00:03:40.400
So I'm going to run this.

00:03:42.060 --> 00:03:46.210
See length before. Strip is 32.

00:03:46.210 --> 00:03:49.914
And this is the string which is stripped.

00:03:49.914 --> 00:03:55.330
So you won't be able to find any empty spaces after the future and before the welcome.

00:03:55.330 --> 00:03:59.705
So which is stripped into both ways, right?

00:03:59.705 --> 00:04:02.315
And here, the length.

00:04:02.315 --> 00:04:05.180
So I had to put a link to your right.

00:04:05.180 --> 00:04:07.055
So after the strip.

00:04:07.055 --> 00:04:09.480
So let me run it again.

00:04:10.240 --> 00:04:15.080
So now we've got the length 32 before stopping and after having 26.

00:04:15.080 --> 00:04:17.795
And these are data which we stripped.

00:04:17.795 --> 00:04:21.860
Okay? So now I want to replace that strip.

00:04:21.860 --> 00:04:24.800
Leading spaces are trailing spaces,

00:04:24.800 --> 00:04:27.695
which means before the word after the war.

00:04:27.695 --> 00:04:29.315
So now what I'm gonna do,

00:04:29.315 --> 00:04:31.220
I'm gonna pretty much doing the same thing.

00:04:31.220 --> 00:04:35.105
Just copy the code and paste it egging on more time.

00:04:35.105 --> 00:04:39.485
And I'm going to name them as STR to here.

00:04:39.485 --> 00:04:43.070
So before strip here, so SGLT2 again.

00:04:43.070 --> 00:04:47.000
So I'm going to use strip or leading.

00:04:47.000 --> 00:04:53.720
So and is going to be SGLT2 and land after strip,

00:04:53.720 --> 00:04:55.355
and it is going to be two.

00:04:55.355 --> 00:04:58.970
So now what I'm trying to do in the previous example,

00:04:58.970 --> 00:05:00.440
I tried strip alone,

00:05:00.440 --> 00:05:03.770
which means removing the empty spaces before and after.

00:05:03.770 --> 00:05:09.005
And here I'm going to remove one leaders basis from the before, which mean this trip.

00:05:09.005 --> 00:05:11.105
I'm in leading empty spaces.

00:05:11.105 --> 00:05:15.990
Okay, so I'm going to run it and let's see.

00:05:16.000 --> 00:05:19.025
C length before strip that,

00:05:19.025 --> 00:05:21.605
I'm using the same, all right, same statement.

00:05:21.605 --> 00:05:24.320
So this is a data which is stripped.

00:05:24.320 --> 00:05:26.750
See what happened when a man,

00:05:26.750 --> 00:05:32.060
I'm using the strip leading, right?

00:05:32.060 --> 00:05:33.230
See what happened.

00:05:33.230 --> 00:05:34.715
You should be able to see,

00:05:34.715 --> 00:05:36.110
you can select some space here,

00:05:36.110 --> 00:05:42.725
see 123, and here see 123.

00:05:42.725 --> 00:05:46.490
So this space remains the same.

00:05:46.490 --> 00:05:50.000
Only the space available before the word,

00:05:50.000 --> 00:05:51.140
which means before welcome,

00:05:51.140 --> 00:05:56.914
there will be 1233 spaces has been removed and the length is again 2006.

00:05:56.914 --> 00:06:00.770
Okay, Let's do the same thing for these two trailing spaces.

00:06:00.770 --> 00:06:03.800
Trailing means after the word control C,

00:06:03.800 --> 00:06:07.805
control V. And I'm going to change the name to ASD or to rescue a tree.

00:06:07.805 --> 00:06:11.345
And its geometry again here.

00:06:11.345 --> 00:06:15.530
And interests replacing, I'm going to strip trialing here.

00:06:15.530 --> 00:06:21.050
And this is going to be stripped tree and SGR tree.

00:06:21.050 --> 00:06:24.570
So now I'm gonna run it again.

00:06:26.400 --> 00:06:32.650
Here. We have 32 and here take a look at the piece of output here.

00:06:32.650 --> 00:06:38.680
So here you should be able to see 1233 spaces, 1233 spaces,

00:06:38.680 --> 00:06:41.005
but after the word that won't be any spaces here,

00:06:41.005 --> 00:06:43.495
the reason I'm using trailing spaces,

00:06:43.495 --> 00:06:46.855
trailing means after the leading.

00:06:46.855 --> 00:06:48.295
It's a before the word.

00:06:48.295 --> 00:06:52.525
Okay? So this is how you do use strip method.

00:06:52.525 --> 00:06:54.220
If you want to remove both of them,

00:06:54.220 --> 00:06:56.110
you can use strip or Lyft said,

00:06:56.110 --> 00:06:59.470
I've said you can go for trailing or leading spaces.

00:06:59.470 --> 00:07:03.010
In the next video, we're gonna talk about string.

00:07:03.010 --> 00:07:06.590
I want to repeat Mato. Thank you.
