WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.935
Hello everyone.

00:00:01.935 --> 00:00:03.090
Welcome back.

00:00:03.090 --> 00:00:04.725
So as part of Java 11,

00:00:04.725 --> 00:00:06.750
the next feature we're going to talk about,

00:00:06.750 --> 00:00:11.430
there are few new APIs has been introduced as part of the files API.

00:00:11.430 --> 00:00:12.990
So we're gonna talk about,

00:00:12.990 --> 00:00:16.185
so what are the APIs and how we are going to use them?

00:00:16.185 --> 00:00:22.530
Okay, The first one, phi under Files we are going to talk about read string API.

00:00:22.530 --> 00:00:26.880
So you can simply ask what is the read stream from the name itself.

00:00:26.880 --> 00:00:32.790
We can understand it is trying to read some string from some particular source.

00:00:32.790 --> 00:00:34.605
Okay? As part of,

00:00:34.605 --> 00:00:39.165
because these files are placed on the java dot n dot file dot files,

00:00:39.165 --> 00:00:41.815
it is not our I O files.

00:00:41.815 --> 00:00:48.410
So there are two methods has been over loaded in this particular APA.

00:00:48.410 --> 00:00:49.640
So the first mother,

00:00:49.640 --> 00:00:51.170
it is a read,

00:00:51.170 --> 00:00:54.635
a string which will accept if path of a file.

00:00:54.635 --> 00:00:57.140
And the second one, again,

00:00:57.140 --> 00:00:59.960
it's a read string and it will accept a path.

00:00:59.960 --> 00:01:05.195
And additionally it lags of that gas at how do you want to read a file?

00:01:05.195 --> 00:01:07.865
Which gas it you want to use it.

00:01:07.865 --> 00:01:12.274
Right? So you can add one more additional parameter.

00:01:12.274 --> 00:01:15.110
Okay, So let's talk over in brief,

00:01:15.110 --> 00:01:17.135
what is a read string about?

00:01:17.135 --> 00:01:21.365
So the first method, read the data from a file into a string.

00:01:21.365 --> 00:01:22.250
So what does that mean?

00:01:22.250 --> 00:01:23.975
So I have a file.

00:01:23.975 --> 00:01:26.510
Okay, If you're trying to read the data,

00:01:26.510 --> 00:01:30.380
it will read and it will give you as a string.

00:01:30.380 --> 00:01:32.570
That is a reason it is called as a reaching.

00:01:32.570 --> 00:01:36.875
So whatever the file it will lead and it'll give it to you as a string.

00:01:36.875 --> 00:01:39.980
And so once everything has been read properly,

00:01:39.980 --> 00:01:42.860
it will be automatically closed.

00:01:42.860 --> 00:01:44.300
Right?

00:01:44.300 --> 00:01:48.695
And second method, it's pretty much does the same thing,

00:01:48.695 --> 00:01:51.290
but only one difference in the first month that we

00:01:51.290 --> 00:01:53.810
don't have any specific way to provide.

00:01:53.810 --> 00:01:55.610
This is a cast that I want to read,

00:01:55.610 --> 00:01:58.355
but here you can use the Cassatt.

00:01:58.355 --> 00:02:02.180
So I want to read using this particular cast it,

00:02:02.180 --> 00:02:04.190
which you then do that.

00:02:04.190 --> 00:02:08.285
And one important thing about this leads string APIs.

00:02:08.285 --> 00:02:11.540
Those are all handling this small walk, okay,

00:02:11.540 --> 00:02:15.845
so if you're trying to read a huge file, it won't work.

00:02:15.845 --> 00:02:16.970
It might not walk,

00:02:16.970 --> 00:02:18.800
it might, or it might not work.

00:02:18.800 --> 00:02:21.695
Okay. The reason if it is too large,

00:02:21.695 --> 00:02:24.620
you will get an out-of-memory error because anyway,

00:02:24.620 --> 00:02:29.795
it is trying to retrieve your data and give you as a string.

00:02:29.795 --> 00:02:32.510
So that is always a possibility.

00:02:32.510 --> 00:02:35.375
You are getting it out of memory on it.

00:02:35.375 --> 00:02:38.645
So what do we need to do when it is a huge file?

00:02:38.645 --> 00:02:43.010
Traditionally, you have to go for your I O files.

00:02:43.010 --> 00:02:45.215
So that is all about or read a string.

00:02:45.215 --> 00:02:49.430
Okay, So the next one is the next API.

00:02:49.430 --> 00:02:56.090
So we discussed I would read API right now when it opened the right API.

00:02:56.090 --> 00:02:59.570
Okay, So again, it's placed under the same package,

00:02:59.570 --> 00:03:01.595
n i o dot file at files.

00:03:01.595 --> 00:03:04.535
And again it as a two hour,

00:03:04.535 --> 00:03:09.980
That's right, Right, a string and which will accept path.

00:03:09.980 --> 00:03:12.620
So where do you want to write and cast sequence?

00:03:12.620 --> 00:03:15.230
What kind of cast sequence inadequate provide?

00:03:15.230 --> 00:03:18.395
And we have one more option, options,

00:03:18.395 --> 00:03:21.695
open options that we'll discuss later, okay, That is the first method.

00:03:21.695 --> 00:03:22.925
So basically what do you need?

00:03:22.925 --> 00:03:27.725
You need a path and you need to gas sequence what the data you want to write it.

00:03:27.725 --> 00:03:29.690
And the second method,

00:03:29.690 --> 00:03:31.250
it is pretty much the same thing,

00:03:31.250 --> 00:03:34.970
but additionally, it has the gas.

00:03:34.970 --> 00:03:38.885
It like what we how we read the file.

00:03:38.885 --> 00:03:43.200
I'm going to read the data using Casio TI dissimilar where you can write.

00:03:43.810 --> 00:03:46.670
So if we take a look at it,

00:03:46.670 --> 00:03:51.275
the first method which will write the data into a file using UDF,

00:03:51.275 --> 00:03:53.570
Kazakh foreign LET is a default format.

00:03:53.570 --> 00:03:58.070
Okay, RA, if you want anything specific cash that I use or something like that,

00:03:58.070 --> 00:04:02.185
you have to provide the cash set as a parameter.

00:04:02.185 --> 00:04:04.570
And pretty much second,

00:04:04.570 --> 00:04:07.660
mother does the same thing with this specific gas that because in the second we are

00:04:07.660 --> 00:04:11.065
providing the gas it again.

00:04:11.065 --> 00:04:14.530
And another important thing, okay, option.

00:04:14.530 --> 00:04:16.855
So what is the purpose of option?

00:04:16.855 --> 00:04:20.260
Option is to specify how to open a file.

00:04:20.260 --> 00:04:21.640
Okay, So that's what I said.

00:04:21.640 --> 00:04:22.840
We'll discuss a bit later.

00:04:22.840 --> 00:04:24.025
Say open option.

00:04:24.025 --> 00:04:28.435
You write a file and you have some content into eat.

00:04:28.435 --> 00:04:30.760
And how do you want to open the file?

00:04:30.760 --> 00:04:35.230
So you can provide those information in the open option.

00:04:35.230 --> 00:04:37.735
So open option, so you have a file,

00:04:37.735 --> 00:04:38.875
I need to have options.

00:04:38.875 --> 00:04:42.735
How I need to open, that is why it is called as an open option.

00:04:42.735 --> 00:04:47.505
Okay, so in the next video we're going to talk about I simple example, how to read them.

00:04:47.505 --> 00:04:49.940
Normal way are using the car set.

00:04:49.940 --> 00:04:54.035
After that, we'll talk about one more example for a right sing API.

00:04:54.035 --> 00:04:56.070
Thank you.
