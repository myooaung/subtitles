WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.055
Hello everyone, Welcome back.

00:00:02.055 --> 00:00:05.865
So we discuss a book or read API and write API.

00:00:05.865 --> 00:00:09.105
So now it's time for us to create an example for it.

00:00:09.105 --> 00:00:12.960
So what I'm gonna do is I'm going to create a new package here.

00:00:12.960 --> 00:00:14.730
So under Java 11 futures,

00:00:14.730 --> 00:00:15.855
I need a new package.

00:00:15.855 --> 00:00:22.960
So I can specifically write the examples for File API changes or files API.

00:00:23.540 --> 00:00:27.400
And here I'm going to create a new class.

00:00:28.310 --> 00:00:38.680
And this is going to be, so this we can make it as a read string API example.

00:00:38.780 --> 00:00:42.620
Okay, so let me move on to the presentation mode.

00:00:43.740 --> 00:00:47.200
Okay, so first let me write a main method.

00:00:47.200 --> 00:00:49.120
Okay, so what I'm gonna do,

00:00:49.120 --> 00:00:52.795
I'm gonna write a method to read a string from a specific file.

00:00:52.795 --> 00:00:58.645
Okay, so private, static,

00:00:58.645 --> 00:01:02.170
void or read string.

00:01:02.170 --> 00:01:03.715
So what we're gonna do,

00:01:03.715 --> 00:01:05.830
we have our file and we're going to read it.

00:01:05.830 --> 00:01:07.420
So where is the file?

00:01:07.420 --> 00:01:10.075
So let me show you that I have the files.

00:01:10.075 --> 00:01:13.075
So in my desktop,

00:01:13.075 --> 00:01:15.865
I have a file called test.

00:01:15.865 --> 00:01:21.025
So I'm trying to read this file using a lot of ADP.

00:01:21.025 --> 00:01:23.515
So what basically will happen in the entire data

00:01:23.515 --> 00:01:26.519
converted into a string and I'll receive as a response.

00:01:26.519 --> 00:01:29.030
Good, that is what a read string will do.

00:01:29.030 --> 00:01:34.625
Ok, So now Let's go back to the presentation mode.

00:01:34.625 --> 00:01:35.900
Okay, so let's do it.

00:01:35.900 --> 00:01:39.410
The first thing I needed, the part, correct,

00:01:39.410 --> 00:01:44.000
so that my file is located string.

00:01:44.000 --> 00:01:48.770
But since I'm using Mac the way I'm reading the path it,

00:01:48.770 --> 00:01:50.015
or it might be different.

00:01:50.015 --> 00:01:51.650
But if you're using Windows,

00:01:51.650 --> 00:01:53.885
you can directly provide the Explorer,

00:01:53.885 --> 00:01:56.165
but I will show you that.

00:01:56.165 --> 00:02:00.155
So a system dot, so get property.

00:02:00.155 --> 00:02:03.875
So what I'm gonna do, I'm gonna read the user home.

00:02:03.875 --> 00:02:08.765
So it means my home data because my folders available under my home.

00:02:08.765 --> 00:02:13.250
And plus I'm going to add the file path as well.

00:02:13.250 --> 00:02:21.290
So my data is available in the desktop ender file called test dot TXT.

00:02:21.290 --> 00:02:26.150
Ok. So now you might think how can we then using Windows,

00:02:26.150 --> 00:02:27.395
if it is a Windows,

00:02:27.395 --> 00:02:28.825
for example, you have a D drive.

00:02:28.825 --> 00:02:32.750
So D, it has to be something like double-quotes.

00:02:32.750 --> 00:02:41.375
D Drive slash status of a folder called file slash.

00:02:41.375 --> 00:02:45.484
Here you can file called test dot TXT.

00:02:45.484 --> 00:02:47.450
You can directly provide the path.

00:02:47.450 --> 00:02:49.040
You don't have to use this historically

00:02:49.040 --> 00:02:51.155
the property using a double missing time, using Mac,

00:02:51.155 --> 00:02:55.265
I'm using a good property to read that my home, right?

00:02:55.265 --> 00:02:57.650
So now, what do we need to do?

00:02:57.650 --> 00:02:59.360
We need to have a part, right?

00:02:59.360 --> 00:03:01.620
So path.

00:03:01.720 --> 00:03:05.390
So the path I'm trying to get A's,

00:03:05.390 --> 00:03:11.360
but okay, input apart in the first place and put glass.

00:03:11.360 --> 00:03:14.355
See the file paths available under the file dot,

00:03:14.355 --> 00:03:17.120
dot java dot, dot file that part,

00:03:17.120 --> 00:03:20.040
right? So file that.

00:03:21.580 --> 00:03:23.060
Okay.

00:03:23.060 --> 00:03:27.150
So string location.

00:03:27.210 --> 00:03:33.340
So, but dat get right.

00:03:33.340 --> 00:03:40.000
Fonts, dot get, which

00:03:40.000 --> 00:03:45.850
will accept a location where my file is located.

00:03:45.850 --> 00:03:47.140
So address allocation.

00:03:47.140 --> 00:03:50.950
So the file will be available in the location where they will sit.

00:03:50.950 --> 00:03:53.275
Now what I need to do, I'm going to write it anyway,

00:03:53.275 --> 00:03:57.680
looking at the filed rates, so better to have an exception handling.

00:03:58.200 --> 00:04:00.740
Catch.

00:04:00.960 --> 00:04:04.960
It is always a good practices when you're looking at the files,

00:04:04.960 --> 00:04:08.545
just use the try and a catch block.

00:04:08.545 --> 00:04:12.800
So now what I'm going to do, I'm going to use the file cp, Right?

00:04:12.800 --> 00:04:16.955
So files dot read string which will accepts apart.

00:04:16.955 --> 00:04:20.584
And I do have a path which a colder in the line number 14.

00:04:20.584 --> 00:04:21.695
Got it.

00:04:21.695 --> 00:04:23.570
So basically what happened?

00:04:23.570 --> 00:04:26.195
Let me open the read string.

00:04:26.195 --> 00:04:28.340
So reaching my third,

00:04:28.340 --> 00:04:31.010
which will read a file from a specific part,

00:04:31.010 --> 00:04:34.595
I'm going to alert done as a string, right?

00:04:34.595 --> 00:04:38.975
So how light into receiving the data as a string.

00:04:38.975 --> 00:04:42.590
So string data.

00:04:42.590 --> 00:04:47.250
And now I can print the data.

00:04:47.680 --> 00:04:52.365
So here is the eigen sum.

00:04:52.365 --> 00:04:59.440
Okay? So now I have a method which will read a file from a specific location.

00:04:59.440 --> 00:05:04.210
So this is a location and this is a paths because the path is the expected.

00:05:04.210 --> 00:05:08.590
But I went too far the read file and then read string.

00:05:08.590 --> 00:05:10.360
So I provided the path here.

00:05:10.360 --> 00:05:13.600
So what this particular area does,

00:05:13.600 --> 00:05:19.675
which is reading the data as a string and it endo ICE as a string.

00:05:19.675 --> 00:05:24.790
So now I can run the code and I can show you the output.

00:05:24.790 --> 00:05:28.330
C. Welcome to Java Island New Java.

00:05:28.330 --> 00:05:30.940
Learn new features about your week 11, happy learning.

00:05:30.940 --> 00:05:32.860
So everything we have written our There,

00:05:32.860 --> 00:05:35.070
it is coming properly.

00:05:35.070 --> 00:05:36.830
So okay, you might think, okay,

00:05:36.830 --> 00:05:38.855
what happens if I make a changes in the file,

00:05:38.855 --> 00:05:41.210
okay, We can try that also.

00:05:41.210 --> 00:05:45.890
It may go back to the my desktop.

00:05:45.890 --> 00:05:50.670
And I'm going to open a test file.

00:05:50.800 --> 00:05:54.410
So I'm going to add something called Welcome.

00:05:54.410 --> 00:05:58.085
Again. It is, I'm just trying this just to show you,

00:05:58.085 --> 00:05:59.210
once you make changes,

00:05:59.210 --> 00:06:00.380
you can simply run the program.

00:06:00.380 --> 00:06:03.480
We still face the data.

00:06:03.580 --> 00:06:06.020
See, we got the welcome I get.

00:06:06.020 --> 00:06:08.120
So everything I'm going to assign a string now.

00:06:08.120 --> 00:06:08.900
Okay?

00:06:08.900 --> 00:06:10.580
So in the next example,

00:06:10.580 --> 00:06:12.485
I'm going to show you how to write a file.

00:06:12.485 --> 00:06:13.550
So in this example,

00:06:13.550 --> 00:06:15.725
we haven't used any cats that occur.

00:06:15.725 --> 00:06:17.255
While writing the code.

00:06:17.255 --> 00:06:21.695
I can show you what kind of cast that we can use it.

00:06:21.695 --> 00:06:24.005
Okay. It's still up to you. Most probably.

00:06:24.005 --> 00:06:26.780
We won't use any Cassatt to my experience,

00:06:26.780 --> 00:06:28.205
I never used before.

00:06:28.205 --> 00:06:30.815
But there are specific scenarios that you might need a calcium.

00:06:30.815 --> 00:06:32.945
So I'm going to give you an example in the next video.

00:06:32.945 --> 00:06:34.500
Thank you.
