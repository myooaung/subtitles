WEBVTT
1

00:00:04.740 --> 00:00:07.480

all right so at the moment we've got an



2

00:00:07.480 --> 00:00:09.880

interface is not terribly pretty and the



3

00:00:09.880 --> 00:00:11.770

options for formatting the information



4

00:00:11.770 --> 00:00:13.930

are fairly limited when you're using the



5

00:00:13.930 --> 00:00:16.570

basic array adapter class but this



6

00:00:16.570 --> 00:00:18.820

example does demonstrate how easy it is



7

00:00:18.820 --> 00:00:20.320

to use the ListView and an adapter



8

00:00:20.320 --> 00:00:22.930

together now if we wanted more control



9

00:00:22.930 --> 00:00:24.849

over exactly what happens in the



10

00:00:24.849 --> 00:00:26.950

ListView we then have to create our own



11

00:00:26.950 --> 00:00:29.140

adapter and we'll actually do that in



12

00:00:29.140 --> 00:00:30.189

the next video



13

00:00:30.189 --> 00:00:32.619

but what I want to do though is go



14

00:00:32.619 --> 00:00:34.540

through and we're going to comment out



15

00:00:34.540 --> 00:00:37.330

the two string method in the the two



16

00:00:37.330 --> 00:00:38.710

string method in the feed entry class



17

00:00:38.710 --> 00:00:40.750

just to show that the basic array



18

00:00:40.750 --> 00:00:42.940

adapter is using the objects two string



19

00:00:42.940 --> 00:00:45.310

method to display the class data and



20

00:00:45.310 --> 00:00:47.110

it's also going to show you what the



21

00:00:47.110 --> 00:00:49.060

default to string method produces so



22

00:00:49.060 --> 00:00:50.160

we're gonna head back to our class



23

00:00:50.160 --> 00:00:55.320

soaking together to parse applications



24

00:00:55.320 --> 00:00:57.490

now if you remember it was actually in



25

00:00:57.490 --> 00:00:59.470

main activity class feed entry which we



26

00:00:59.470 --> 00:01:01.390

had in our main activity so we cannot



27

00:01:01.390 --> 00:01:05.170

comment out the function the two string



28

00:01:05.170 --> 00:01:06.970

function we just can it literally just



29

00:01:06.970 --> 00:01:09.819

select all of it up to and including the



30

00:01:09.819 --> 00:01:13.829

closing right curly brace comment it out



31

00:01:13.829 --> 00:01:15.789

and if you actually run the app again



32

00:01:15.789 --> 00:01:22.700

now



33

00:01:22.700 --> 00:01:24.500

you can see that we're just getting



34

00:01:24.500 --> 00:01:26.180

their full class name and their strange



35

00:01:26.180 --> 00:01:27.920

hexadecimal number here that's actually



36

00:01:27.920 --> 00:01:29.899

changing for each object



37

00:01:29.899 --> 00:01:32.689

well that numbers the hash code of each



38

00:01:32.689 --> 00:01:35.299

instance of the feed entry class so it's



39

00:01:35.299 --> 00:01:36.920

not very user friendly and we're not



40

00:01:36.920 --> 00:01:38.509

seeing any of the actual data in the



41

00:01:38.509 --> 00:01:40.640

objects so that's why it was a good idea



42

00:01:40.640 --> 00:01:43.340

to override the two to the two string



43

00:01:43.340 --> 00:01:45.469

function so that we could see the actual



44

00:01:45.469 --> 00:01:47.060

data rather than this default



45

00:01:47.060 --> 00:01:49.880

representation of the objects so I



46

00:01:49.880 --> 00:01:51.319

mentioned earlier that we have to cater



47

00:01:51.319 --> 00:01:53.899

for the activity being destroyed while



48

00:01:53.899 --> 00:01:56.479

our async tasks still running now that's



49

00:01:56.479 --> 00:01:58.970

quite easy we can just cancel the tasks



50

00:01:58.970 --> 00:02:01.640

in the activities on destroy method now



51

00:02:01.640 --> 00:02:03.799

we don't have to move the Declaration of



52

00:02:03.799 --> 00:02:06.170

download data to make it available in



53

00:02:06.170 --> 00:02:08.450

ondestroy but let's go ahead and write



54

00:02:08.450 --> 00:02:10.970

the on destroy method first so I'm going



55

00:02:10.970 --> 00:02:14.750

to go back to our main activity we're



56

00:02:14.750 --> 00:02:15.829

going to put this just below the



57

00:02:15.829 --> 00:02:21.049

oncreate before the companion object



58

00:02:21.049 --> 00:02:24.410

line and will override we're looking for



59

00:02:24.410 --> 00:02:27.680

undestroyed so we're getting Android



60

00:02:27.680 --> 00:02:30.079

studio too right then I'll destroy stub



61

00:02:30.079 --> 00:02:32.959

for us we'll create this stub for us so



62

00:02:32.959 --> 00:02:35.120

in terms of the calls we're going to



63

00:02:35.120 --> 00:02:36.650

leave the super don't destroy in there



64

00:02:36.650 --> 00:02:38.329

and we're gonna add this one extra long



65

00:02:38.329 --> 00:02:40.910

as that's gonna be download data dot



66

00:02:40.910 --> 00:02:45.079

cancel parentheses true now at the



67

00:02:45.079 --> 00:02:46.760

moment download data is local to the



68

00:02:46.760 --> 00:02:48.739

other create method so to get this to



69

00:02:48.739 --> 00:02:50.299

work we need to declare it at the top of



70

00:02:50.299 --> 00:02:52.130

the class instead so I'm going to come



71

00:02:52.130 --> 00:02:53.569

up to the top of the class and do just



72

00:02:53.569 --> 00:02:55.250

that and we're going to put that just



73

00:02:55.250 --> 00:02:59.870

below the initial rough tag here so



74

00:02:59.870 --> 00:03:04.670

they'll download data is equal to



75

00:03:04.670 --> 00:03:07.340

download data of capital DS for both



76

00:03:07.340 --> 00:03:11.120

words and parentheses this comma space



77

00:03:11.120 --> 00:03:14.650

XML ListView



78

00:03:14.650 --> 00:03:16.849

now I'm getting this warning here when



79

00:03:16.849 --> 00:03:18.829

this error public properly exposes its



80

00:03:18.829 --> 00:03:21.829

private type download data there all



81

00:03:21.829 --> 00:03:23.419

properties in Kotler the public by



82

00:03:23.419 --> 00:03:26.180

default so download data is public but



83

00:03:26.180 --> 00:03:28.540

that's its type in our private class



84

00:03:28.540 --> 00:03:31.519

come down here and have a look we've got



85

00:03:31.519 --> 00:03:33.640

the type set for private here in line 52



86

00:03:33.640 --> 00:03:35.990

that's what's causing a problem



87

00:03:35.990 --> 00:03:37.850

so you can't expose an object whose top



88

00:03:37.850 --> 00:03:40.070

is private so we have to make download



89

00:03:40.070 --> 00:03:41.870

data private which it really should be



90

00:03:41.870 --> 00:03:43.670

anyway even if Kotlin doesn't enforce



91

00:03:43.670 --> 00:03:45.530

this or didn't enforce this there's no



92

00:03:45.530 --> 00:03:47.090

reason for well you know why anything



93

00:03:47.090 --> 00:03:49.310

outside main activity should be using



94

00:03:49.310 --> 00:03:51.740

our download data object anyway so we're



95

00:03:51.740 --> 00:03:53.150

gonna go back up and change this it



96

00:03:53.150 --> 00:03:56.060

should be private Val so when I with the



97

00:03:56.060 --> 00:03:59.360

keyword private to satisfy Kotler there



98

00:03:59.360 --> 00:04:01.940

alright so there's no error but at the



99

00:04:01.940 --> 00:04:04.820

moment it won't work though so why won't



100

00:04:04.820 --> 00:04:06.530

this work have a think about what's



101

00:04:06.530 --> 00:04:07.930

being passed to the download data



102

00:04:07.930 --> 00:04:11.360

constructor here and when we can



103

00:04:11.360 --> 00:04:13.760

reasonably expect things to exist pause



104

00:04:13.760 --> 00:04:15.320

the video now and then I'll explain why



105

00:04:15.320 --> 00:04:18.220

the code won't work when you come back



106

00:04:18.220 --> 00:04:21.290

all right so did you figure out why well



107

00:04:21.290 --> 00:04:23.720

what's wrong with that code well the



108

00:04:23.720 --> 00:04:25.970

problems caused by passing the reference



109

00:04:25.970 --> 00:04:29.150

to our ListView to the constructor now



110

00:04:29.150 --> 00:04:30.620

none of our widgets will exist until



111

00:04:30.620 --> 00:04:33.290

after the call to set content view in



112

00:04:33.290 --> 00:04:36.170

the oncreate method and we saw this if



113

00:04:36.170 --> 00:04:38.390

you recall in the calculator app the



114

00:04:38.390 --> 00:04:41.420

solution is to use by lazy so that the



115

00:04:41.420 --> 00:04:43.430

initialization isn't performed until the



116

00:04:43.430 --> 00:04:45.410

first time we need to use our download



117

00:04:45.410 --> 00:04:47.570

data object so let's go ahead and change



118

00:04:47.570 --> 00:04:49.610

that so it should be private Vout



119

00:04:49.610 --> 00:04:52.640

download data by lazy and we'll get rid



120

00:04:52.640 --> 00:04:57.080

of the equal sign so by lazy then we



121

00:04:57.080 --> 00:04:58.780

have put a left-to-right curly braces



122

00:04:58.780 --> 00:05:00.830

and we put this in the left or right



123

00:05:00.830 --> 00:05:03.890

curly braces like so so by the time we



124

00:05:03.890 --> 00:05:05.900

use download data the layouts been



125

00:05:05.900 --> 00:05:08.450

created and the widgets are available in



126

00:05:08.450 --> 00:05:10.490

our code so if you're not clear about



127

00:05:10.490 --> 00:05:12.800

that review the discussion that we had



128

00:05:12.800 --> 00:05:14.360

about this in the last section about



129

00:05:14.360 --> 00:05:17.240

using by lazy alright so that's it the



130

00:05:17.240 --> 00:05:19.490

activity is destroyed all our async



131

00:05:19.490 --> 00:05:20.870

tasks running in the task will be



132

00:05:20.870 --> 00:05:23.660

canceled now the other thing we need to



133

00:05:23.660 --> 00:05:25.640

do is obviously comment out our vow



134

00:05:25.640 --> 00:05:28.640

download data and what I didn't do was I



135

00:05:28.640 --> 00:05:30.320

probably should have actually copied



136

00:05:30.320 --> 00:05:34.250

this line 41 and actually copied it over



137

00:05:34.250 --> 00:05:36.020

and sort of paste that or move to I



138

00:05:36.020 --> 00:05:38.660

should say back up to the reference here



139

00:05:38.660 --> 00:05:40.520

on line 34 because obviously we've got



140

00:05:40.520 --> 00:05:42.560

the definition of download data in two



141

00:05:42.560 --> 00:05:44.450

places now so obviously that's another



142

00:05:44.450 --> 00:05:45.560

reason why we would have got an error



143

00:05:45.560 --> 00:05:47.570

when we're actually running this but the



144

00:05:47.570 --> 00:05:49.770

point is that should not be in there so



145

00:05:49.770 --> 00:05:51.270

to actually remove that now remove an



146

00:05:51.270 --> 00:05:53.789

entire definition on line 41 that's in



147

00:05:53.789 --> 00:05:56.069

the oncreate function because obviously



148

00:05:56.069 --> 00:05:58.590

now we've got the definitions showing up



149

00:05:58.590 --> 00:06:01.379

here on line 34 in our main activity



150

00:06:01.379 --> 00:06:04.229

class and because again we're using by



151

00:06:04.229 --> 00:06:06.900

lazy the values are only going to get



152

00:06:06.900 --> 00:06:10.169

updated with their first accessed right



153

00:06:10.169 --> 00:06:12.990

so let's just run this again to make



154

00:06:12.990 --> 00:06:19.319

sure it works or at lease a that that's



155

00:06:19.319 --> 00:06:20.909

still working what I'll do is I'll also



156

00:06:20.909 --> 00:06:23.069

make a change and put back the two



157

00:06:23.069 --> 00:06:24.599

string again just so we can see the



158

00:06:24.599 --> 00:06:28.259

normal values again they're running



159

00:06:28.259 --> 00:06:35.669

again okay so that's working nicely so



160

00:06:35.669 --> 00:06:37.409

now if the activity is destroyed while



161

00:06:37.409 --> 00:06:40.169

our async tasks running the task will be



162

00:06:40.169 --> 00:06:42.330

canceled now by the way the boolean



163

00:06:42.330 --> 00:06:47.669

argument to the cancel function I'm



164

00:06:47.669 --> 00:06:49.409

talking about this online 40 code onload



165

00:06:49.409 --> 00:06:52.229

47 that tells Android that it can



166

00:06:52.229 --> 00:06:53.669

interrupt the task and that's why we're



167

00:06:53.669 --> 00:06:55.860

passing true there to save that is okay



168

00:06:55.860 --> 00:06:58.319

to do that now that may seem like a



169

00:06:58.319 --> 00:07:00.659

strange thing to have to specify when



170

00:07:00.659 --> 00:07:03.120

cancelling a task however you may want



171

00:07:03.120 --> 00:07:04.949

the task to complete anyway depending on



172

00:07:04.949 --> 00:07:07.169

well it's doing what you don't want and



173

00:07:07.169 --> 00:07:09.479

what would cause a crash is if you then



174

00:07:09.479 --> 00:07:11.250

try to pass its results back to the



175

00:07:11.250 --> 00:07:13.380

activity that's being destroyed so there



176

00:07:13.380 --> 00:07:14.940

are situations where you want to pass



177

00:07:14.940 --> 00:07:17.580

false to the cancel function all right



178

00:07:17.580 --> 00:07:19.469

so I'm gonna stop the video here and in



179

00:07:19.469 --> 00:07:20.849

the next one we're gonna start creating



180

00:07:20.849 --> 00:07:23.250

our own adapter and this gives us far



181

00:07:23.250 --> 00:07:25.169

more control over what appears in the



182

00:07:25.169 --> 00:07:26.880

ListView is also a good way to



183

00:07:26.880 --> 00:07:29.400

understand how adapters work so I'll see



184

00:07:29.400 --> 00:07:32.090

you in the next video



