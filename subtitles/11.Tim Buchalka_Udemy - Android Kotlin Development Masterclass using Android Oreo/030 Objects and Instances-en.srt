1
00:00:04,880 --> 00:00:07,109
Okay, so moving on with the Kotlin

2
00:00:07,109 --> 00:00:08,820
tutorial I'm going to go into a bit more

3
00:00:08,820 --> 00:00:11,309
detail. Now with classes and look at them

4
00:00:11,309 --> 00:00:13,710
more in depth now an important thing to

5
00:00:13,710 --> 00:00:15,330
understand and it took me a while to get

6
00:00:15,330 --> 00:00:16,759
the hang of this when I first added

7
00:00:16,759 --> 00:00:19,290
object-oriented programming is that a

8
00:00:19,290 --> 00:00:21,359
class is like a cookie cutter or a

9
00:00:21,359 --> 00:00:23,939
template and from that you can create an

10
00:00:23,939 --> 00:00:25,980
unlimited number of player objects or

11
00:00:25,980 --> 00:00:28,080
player instances and at the end of the

12
00:00:28,080 --> 00:00:30,150
last video we created four instances

13
00:00:30,150 --> 00:00:32,970
from our player class so we're going to

14
00:00:32,970 --> 00:00:35,580
do is delete the commented out code

15
00:00:35,580 --> 00:00:37,049
firstly these four print lines because

16
00:00:37,049 --> 00:00:39,960
we don't need those anymore and then

17
00:00:39,960 --> 00:00:41,729
just run the program again even though

18
00:00:41,729 --> 00:00:42,870
it's still showing on the screen just to

19
00:00:42,870 --> 00:00:45,089
remind ourselves what it was doing you

20
00:00:45,089 --> 00:00:47,309
can see it's outputting the four player

21
00:00:47,309 --> 00:00:50,369
instances there and their values so

22
00:00:50,369 --> 00:00:51,809
we're getting four totally separate

23
00:00:51,809 --> 00:00:53,760
objects displayed but they were all

24
00:00:53,760 --> 00:00:56,699
created from the same template class our

25
00:00:56,699 --> 00:00:59,369
player class in this case now they all

26
00:00:59,369 --> 00:01:00,900
have the same properties they have a

27
00:01:00,900 --> 00:01:03,900
name and lives level and score

28
00:01:03,900 --> 00:01:06,540
properties but each instance or object

29
00:01:06,540 --> 00:01:08,340
has different values for those

30
00:01:08,340 --> 00:01:11,100
properties now they also all have a show

31
00:01:11,100 --> 00:01:13,680
method or show function they mean the

32
00:01:13,680 --> 00:01:15,780
same thing you know Colin tends to use

33
00:01:15,780 --> 00:01:17,820
determine function by the way but the

34
00:01:17,820 --> 00:01:21,000
object oriented team term is a method so

35
00:01:21,000 --> 00:01:22,770
you hear me use both ways to refer to a

36
00:01:22,770 --> 00:01:25,560
function that's part of a class now if

37
00:01:25,560 --> 00:01:28,110
we look at the show method in the player

38
00:01:28,110 --> 00:01:30,900
class it just prints out the values of

39
00:01:30,900 --> 00:01:32,700
the properties as you can see from Lyons

40
00:01:32,700 --> 00:01:35,880
are seven through water him now each

41
00:01:35,880 --> 00:01:37,470
instance of the player class has

42
00:01:37,470 --> 00:01:38,790
different values for the properties

43
00:01:38,790 --> 00:01:41,940
which is why calling Tim show on line

44
00:01:41,940 --> 00:01:44,850
three of our main method here prints

45
00:01:44,850 --> 00:01:47,010
different valleys to the Eloise not show

46
00:01:47,010 --> 00:01:48,800
on line six

47
00:01:48,800 --> 00:01:51,360
okay so let's extend our player class

48
00:01:51,360 --> 00:01:53,610
now a little bit further so we look at

49
00:01:53,610 --> 00:01:56,490
our player class again so we've got name

50
00:01:56,490 --> 00:01:59,640
lives level and score and we've used a

51
00:01:59,640 --> 00:02:02,580
string and three int types but you're

52
00:02:02,580 --> 00:02:04,380
not restricted to using just those types

53
00:02:04,380 --> 00:02:06,630
of variables we could use an object as a

54
00:02:06,630 --> 00:02:09,420
type in a class in fact in Kotlin string

55
00:02:09,420 --> 00:02:11,700
and into our classes so we're already

56
00:02:11,700 --> 00:02:14,430
using objects now that'll make more

57
00:02:14,430 --> 00:02:16,740
sense if I create an example so I'm

58
00:02:16,740 --> 00:02:18,569
going to create this new class called

59
00:02:18,569 --> 00:02:21,120
weapon to show what I mean there first

60
00:02:21,120 --> 00:02:23,340
before when creating a new class you

61
00:02:23,340 --> 00:02:24,959
click on a right click on the Java

62
00:02:24,959 --> 00:02:28,109
folder or Java Java directory new and

63
00:02:28,109 --> 00:02:31,319
select Kotlin file class and I call this

64
00:02:31,319 --> 00:02:34,829
one weapon we're going to leave this set

65
00:02:34,829 --> 00:02:36,239
to file this time just to show you what

66
00:02:36,239 --> 00:02:37,379
you'd have to do if you didn't select

67
00:02:37,379 --> 00:02:41,219
the class and you can see that it just

68
00:02:41,219 --> 00:02:42,689
created a comment but it hasn't actually

69
00:02:42,689 --> 00:02:45,419
created our class declaration so I can

70
00:02:45,419 --> 00:02:46,829
actually just type that in manually a

71
00:02:46,829 --> 00:02:51,389
class weapon in this case we're going to

72
00:02:51,389 --> 00:02:52,739
give it some properties in the primary

73
00:02:52,739 --> 00:02:54,840
constructor remember that we define them

74
00:02:54,840 --> 00:02:56,459
in parenthesis immediately after the

75
00:02:56,459 --> 00:02:58,280
class name some of the parentheses there

76
00:02:58,280 --> 00:03:01,349
so the properties that we weren't for a

77
00:03:01,349 --> 00:03:03,439
weapon we're going to start with val

78
00:03:03,439 --> 00:03:09,090
name colon string comma then var damage

79
00:03:09,090 --> 00:03:14,189
inflicted colon int closing parentheses

80
00:03:14,189 --> 00:03:16,230
and I'm going to open the code block

81
00:03:16,230 --> 00:03:18,840
create a block of code using the left or

82
00:03:18,840 --> 00:03:21,150
right curly braces so weapons gonna have

83
00:03:21,150 --> 00:03:23,639
a name like axe or sword and we'll store

84
00:03:23,639 --> 00:03:25,319
that in a string field then we have a

85
00:03:25,319 --> 00:03:26,879
need to show how much damage this

86
00:03:26,879 --> 00:03:29,759
particular weapon does now I haven't

87
00:03:29,759 --> 00:03:32,069
used any default values there so we'll

88
00:03:32,069 --> 00:03:34,199
have to specify both values when we

89
00:03:34,199 --> 00:03:36,870
create our weapon objects note that I've

90
00:03:36,870 --> 00:03:39,180
made damage inflicted of our property

91
00:03:39,180 --> 00:03:41,519
now it probably wouldn't change in the

92
00:03:41,519 --> 00:03:43,560
normal course of a game like this but I

93
00:03:43,560 --> 00:03:45,090
want to use it to demonstrate something

94
00:03:45,090 --> 00:03:47,220
else soon so imagine that there's some

95
00:03:47,220 --> 00:03:48,780
magic spell in the game that can make

96
00:03:48,780 --> 00:03:51,329
weapons more deadly or something okay so

97
00:03:51,329 --> 00:03:53,220
moving on and we've now got a very

98
00:03:53,220 --> 00:03:55,349
simple class that can be used to

99
00:03:55,349 --> 00:03:58,530
represent a weapon in a game so let's

100
00:03:58,530 --> 00:04:01,109
use this class in our player class we'll

101
00:04:01,109 --> 00:04:03,629
let the player have weapons so we need a

102
00:04:03,629 --> 00:04:05,459
property in the player class to store

103
00:04:05,459 --> 00:04:07,769
the weapon in and if you usually declare

104
00:04:07,769 --> 00:04:09,840
properties before methods so I'm going

105
00:04:09,840 --> 00:04:11,669
to go back to the player class we're

106
00:04:11,669 --> 00:04:13,349
going to add this at the start of the

107
00:04:13,349 --> 00:04:16,139
class so just below the class definition

108
00:04:16,139 --> 00:04:18,750
on line 5 I'm going to come over here

109
00:04:18,750 --> 00:04:24,300
tab over and type var weapon colon then

110
00:04:24,300 --> 00:04:27,389
weapon with a capital W I'm going to

111
00:04:27,389 --> 00:04:28,710
press Enter

112
00:04:28,710 --> 00:04:30,960
now you see that sort of thing done a

113
00:04:30,960 --> 00:04:32,430
lot in Kotlin programming

114
00:04:32,430 --> 00:04:34,110
the class name normally gives a good

115
00:04:34,110 --> 00:04:36,000
indication of what it represents

116
00:04:36,000 --> 00:04:39,030
so weapon with a capital W tells us that

117
00:04:39,030 --> 00:04:42,090
the class represents a weapon so that's

118
00:04:42,090 --> 00:04:44,490
the type of the property and we call it

119
00:04:44,490 --> 00:04:47,250
weapon with a lowercase W now we could

120
00:04:47,250 --> 00:04:48,630
have you called it something else such

121
00:04:48,630 --> 00:04:50,550
as player's weapon or something but

122
00:04:50,550 --> 00:04:53,550
weapons a good name for the object now

123
00:04:53,550 --> 00:04:55,350
because variables in Kotlin are

124
00:04:55,350 --> 00:04:57,750
case-sensitive weapon with a capital W

125
00:04:57,750 --> 00:05:00,060
and weapon with a lowercase W are

126
00:05:00,060 --> 00:05:01,889
referring to different things

127
00:05:01,889 --> 00:05:05,610
so here weapon with a capital W is W is

128
00:05:05,610 --> 00:05:08,039
the name of the class and weapon with a

129
00:05:08,039 --> 00:05:10,770
lowercase W is an object or instance of

130
00:05:10,770 --> 00:05:12,960
that type or it will be once we create

131
00:05:12,960 --> 00:05:15,060
the weapon so you'll see that sort of

132
00:05:15,060 --> 00:05:16,440
thing done a lot when we use Android

133
00:05:16,440 --> 00:05:18,840
classes and you'll see things like I'm

134
00:05:18,840 --> 00:05:19,800
just going to type some code in

135
00:05:19,800 --> 00:05:24,919
temporarily vowel recycler u adapter

136
00:05:24,919 --> 00:05:30,539
colon recyclerview adapter that's an

137
00:05:30,539 --> 00:05:32,280
example of code that you'll actually see

138
00:05:32,280 --> 00:05:34,440
in Android so it's very common to use

139
00:05:34,440 --> 00:05:37,229
the class name for the variable name but

140
00:05:37,229 --> 00:05:40,020
with a lowercase initial letter alright

141
00:05:40,020 --> 00:05:42,539
so I'm going to delete that line and now

142
00:05:42,539 --> 00:05:44,849
let's give the player a default weapon

143
00:05:44,849 --> 00:05:46,919
when the player objects or instances are

144
00:05:46,919 --> 00:05:49,229
created now at the moment we've got an

145
00:05:49,229 --> 00:05:51,150
error in the declaration of our weapon

146
00:05:51,150 --> 00:05:53,190
and that's because Colton wants

147
00:05:53,190 --> 00:05:55,470
everything to be given a value when it's

148
00:05:55,470 --> 00:05:57,720
declared now you'll see ways to avoid

149
00:05:57,720 --> 00:06:00,120
doing that and of deferring the initial

150
00:06:00,120 --> 00:06:02,310
value until later but for now we're

151
00:06:02,310 --> 00:06:04,199
going to give everything a value so when

152
00:06:04,199 --> 00:06:06,270
a player's first start playing I won't

153
00:06:06,270 --> 00:06:07,380
have found any weapons so we're just

154
00:06:07,380 --> 00:06:08,639
going to give them the fist to start

155
00:06:08,639 --> 00:06:11,340
with so we've typed var weapon colon

156
00:06:11,340 --> 00:06:13,380
weapon then we can put after an

157
00:06:13,380 --> 00:06:15,479
assignment so equals weapon with a

158
00:06:15,479 --> 00:06:19,729
capital W parenthesis double quotes fist

159
00:06:19,729 --> 00:06:24,780
comma one and ending parenthesis so now

160
00:06:24,780 --> 00:06:27,210
each time we create a new player the

161
00:06:27,210 --> 00:06:28,919
code will automatically create a new

162
00:06:28,919 --> 00:06:30,930
weapon object which in this case will be

163
00:06:30,930 --> 00:06:33,180
a fist now they're going to be finding

164
00:06:33,180 --> 00:06:35,400
more weapons as they play the game so

165
00:06:35,400 --> 00:06:37,200
that's why I've made weapon of are there

166
00:06:37,200 --> 00:06:39,389
now we want to assign different weapons

167
00:06:39,389 --> 00:06:41,520
to ultimately hopefully you know you're

168
00:06:41,520 --> 00:06:42,510
starting to see when to

169
00:06:42,510 --> 00:06:45,600
his Val I went to use var no don't worry

170
00:06:45,600 --> 00:06:46,890
though if it's still unclear just

171
00:06:46,890 --> 00:06:48,690
remember that you can always change your

172
00:06:48,690 --> 00:06:50,610
declarations if you decide that you

173
00:06:50,610 --> 00:06:52,290
should have used bar for example instead

174
00:06:52,290 --> 00:06:54,810
of Val so let's actually check this all

175
00:06:54,810 --> 00:06:57,390
works by printing out the name of aces

176
00:06:57,390 --> 00:06:59,940
weapon and the damage it can do in our

177
00:06:59,940 --> 00:07:01,440
main function so we're gonna come over

178
00:07:01,440 --> 00:07:04,860
here to main and we're going to after

179
00:07:04,860 --> 00:07:07,590
this one to watch dot show we're going

180
00:07:07,590 --> 00:07:11,520
to put print 'ln parentheses want to

181
00:07:11,520 --> 00:07:19,170
watch dot weapon dot name then on the

182
00:07:19,170 --> 00:07:23,610
next line print 'ln want to watch darts

183
00:07:23,610 --> 00:07:27,120
weapon dot damage inflicted first run

184
00:07:27,120 --> 00:07:31,800
the program and we can see down the

185
00:07:31,800 --> 00:07:33,270
bottom of here we've got fist and one

186
00:07:33,270 --> 00:07:36,000
printed so notice how we're still using

187
00:07:36,000 --> 00:07:38,580
dot notation to access the properties of

188
00:07:38,580 --> 00:07:40,980
the two classes so one to watch dot

189
00:07:40,980 --> 00:07:43,680
weapon gives us a reference to aces

190
00:07:43,680 --> 00:07:45,960
weapon object and we can access the

191
00:07:45,960 --> 00:07:47,730
properties of the weapon by using more

192
00:07:47,730 --> 00:07:50,250
dots so dot name gives the name of the

193
00:07:50,250 --> 00:07:53,040
weapon and dot damage inflicted gives

194
00:07:53,040 --> 00:07:54,570
the amount of damage that weapon does

195
00:07:54,570 --> 00:07:57,540
now the name he is a string and i

196
00:07:57,540 --> 00:08:00,150
mentioned that string is also a class so

197
00:08:00,150 --> 00:08:01,920
we can expect the string class to have

198
00:08:01,920 --> 00:08:04,590
some functions of its own and it turns

199
00:08:04,590 --> 00:08:06,390
out that it does so i'm not going to

200
00:08:06,390 --> 00:08:07,860
list them all here but a useful one

201
00:08:07,860 --> 00:08:10,800
converts the string to uppercase so we

202
00:08:10,800 --> 00:08:12,210
could come over here to weapon dot name

203
00:08:12,210 --> 00:08:13,680
and on the end of that we can add a dot

204
00:08:13,680 --> 00:08:18,050
to uppercase select that and press enter

205
00:08:18,050 --> 00:08:20,730
now we're using one to watch dot weapon

206
00:08:20,730 --> 00:08:22,830
to access the weapon then using dot name

207
00:08:22,830 --> 00:08:24,840
to get the weapons name and finally

208
00:08:24,840 --> 00:08:28,110
calling the names to uppercase function

209
00:08:28,110 --> 00:08:30,390
to convert the name string to capitals

210
00:08:30,390 --> 00:08:32,580
so you can chain these property and

211
00:08:32,580 --> 00:08:34,590
method accesses as far as you want to go

212
00:08:34,590 --> 00:08:36,300
so let's actually just run that to

213
00:08:36,300 --> 00:08:39,510
confirm that it actually works you can

214
00:08:39,510 --> 00:08:40,860
see about fish snails showing in upper

215
00:08:40,860 --> 00:08:43,260
case and this chaining is something that

216
00:08:43,260 --> 00:08:45,240
you see a lot of in Android programming

217
00:08:45,240 --> 00:08:47,880
in fact in common programming in general

218
00:08:47,880 --> 00:08:50,370
as well many of the built-in Java

219
00:08:50,370 --> 00:08:52,800
classes have been designed to be used in

220
00:08:52,800 --> 00:08:54,660
this way now I'm not going to go into

221
00:08:54,660 --> 00:08:56,430
any more complexity at this stage

222
00:08:56,430 --> 00:08:58,860
but suffice to say that when we read the

223
00:08:58,860 --> 00:09:00,720
program as you saw on the screen we've

224
00:09:00,720 --> 00:09:02,370
got fish nail printing out in capitals

225
00:09:02,370 --> 00:09:05,220
so before I finish we're gonna have a

226
00:09:05,220 --> 00:09:06,600
look at a couple of ways that we can

227
00:09:06,600 --> 00:09:08,400
give our place more impressive weapons

228
00:09:08,400 --> 00:09:11,610
now the first way is to create a new

229
00:09:11,610 --> 00:09:14,040
weapon object then assign it to the

230
00:09:14,040 --> 00:09:15,900
player's weapon property let's actually

231
00:09:15,900 --> 00:09:17,760
have a go at doing that so we're going

232
00:09:17,760 --> 00:09:21,270
to come down here after the one to watch

233
00:09:21,270 --> 00:09:23,520
drop weapon damage inflicted live I'm

234
00:09:23,520 --> 00:09:28,200
going to type valve x equals weapon and

235
00:09:28,200 --> 00:09:32,010
capital w parentheses and axe in double

236
00:09:32,010 --> 00:09:35,310
quotes comma and then 12 then we can

237
00:09:35,310 --> 00:09:40,110
type gr8 dot weapon equals ax then you

238
00:09:40,110 --> 00:09:47,270
can type Ritalin gr8 dot weapon dot name

239
00:09:47,270 --> 00:09:50,940
it's a typo and on the next line print

240
00:09:50,940 --> 00:09:58,380
l'm an axe dot name so we've created a

241
00:09:58,380 --> 00:10:00,570
new instance of weapon and we assign it

242
00:10:00,570 --> 00:10:04,080
to the variable X then we saw an axe to

243
00:10:04,080 --> 00:10:07,200
generate weapon property so gr8 neil has

244
00:10:07,200 --> 00:10:09,450
an axe as her weapon which we can see

245
00:10:09,450 --> 00:10:10,770
when we print it out so let's just run

246
00:10:10,770 --> 00:10:15,690
that to make sure that it works and you

247
00:10:15,690 --> 00:10:18,300
can see axe is showing there now X also

248
00:10:18,300 --> 00:10:20,010
exists within our main function

249
00:10:20,010 --> 00:10:22,320
and so we're printing out the value of

250
00:10:22,320 --> 00:10:25,590
the name property from axe on line 18 as

251
00:10:25,590 --> 00:10:27,990
well so we've got two references to the

252
00:10:27,990 --> 00:10:30,360
same object one reference is we're using

253
00:10:30,360 --> 00:10:32,820
the X variable and the others by using

254
00:10:32,820 --> 00:10:35,760
the gr8 or weapon so it's important here

255
00:10:35,760 --> 00:10:37,050
to understand that they both refer to

256
00:10:37,050 --> 00:10:40,560
exactly the same object the X now if

257
00:10:40,560 --> 00:10:42,690
that seems complicated keep in mind that

258
00:10:42,690 --> 00:10:45,180
we do the same thing in normal speech so

259
00:10:45,180 --> 00:10:47,730
someone might refer to my my sons wife's

260
00:10:47,730 --> 00:10:50,250
father-in-law or they may refer to meet

261
00:10:50,250 --> 00:10:52,590
in bachata so it's the same person

262
00:10:52,590 --> 00:10:54,780
unless my son has another wife that

263
00:10:54,780 --> 00:10:57,450
we're not aware of now we can check that

264
00:10:57,450 --> 00:10:59,580
they're the same object by casting that

265
00:10:59,580 --> 00:11:01,320
spell I mentioned earlier on the X and

266
00:11:01,320 --> 00:11:03,540
will increase the damage inflicted by

267
00:11:03,540 --> 00:11:06,600
the axe to 24 so let's actually add the

268
00:11:06,600 --> 00:11:09,160
code so atop X

269
00:11:09,160 --> 00:11:15,150
dot damage inflicted equals 24 print 'ln

270
00:11:15,150 --> 00:11:22,140
ax dot damage inflicted let's run that

271
00:11:22,140 --> 00:11:25,180
so no surprise is there we get 24

272
00:11:25,180 --> 00:11:27,220
printed but before I run the program

273
00:11:27,220 --> 00:11:29,020
again after making this next change

274
00:11:29,020 --> 00:11:30,880
however think about what should be

275
00:11:30,880 --> 00:11:33,510
printed so I'm going to type in the code first

276
00:11:33,510 --> 00:11:40,150
so print 'ln gr8 darts weapon dot damage

277
00:11:40,150 --> 00:11:42,550
inflicted so have a think about what you

278
00:11:42,550 --> 00:11:44,950
think that should print out the code on

279
00:11:44,950 --> 00:11:52,420
line 22 alright so let's run that and

280
00:11:52,420 --> 00:11:54,970
you can see it also shows the value of

281
00:11:54,970 --> 00:11:57,610
24 so remember that these are two

282
00:11:57,610 --> 00:11:59,260
different ways to refer to the same

283
00:11:59,260 --> 00:12:02,290
object the same acts in effect so when

284
00:12:02,290 --> 00:12:04,840
we change the damage inflicted by ax on

285
00:12:04,840 --> 00:12:08,260
line 22 24 generates weapon now it has

286
00:12:08,260 --> 00:12:11,560
24 points of damage so if you did work

287
00:12:11,560 --> 00:12:13,210
out that the program should print 24

288
00:12:13,210 --> 00:12:15,520
again well done and if you're not sure

289
00:12:15,520 --> 00:12:17,050
why that's worth watching these last

290
00:12:17,050 --> 00:12:19,330
couple of videos again alright so I'm

291
00:12:19,330 --> 00:12:20,680
kind of finished with the other way of

292
00:12:20,680 --> 00:12:22,330
assigning a weapon to one of the players

293
00:12:22,330 --> 00:12:25,060
will give me a sword so I'm going to

294
00:12:25,060 --> 00:12:28,600
come down here you're going to type Tim

295
00:12:28,600 --> 00:12:34,470
dot weapon is equal to weapon

296
00:12:34,470 --> 00:12:41,110
parenthesis double quotes sword 10 and

297
00:12:41,110 --> 00:12:44,310
you're going to print Len Tim dot weapon

298
00:12:44,310 --> 00:12:49,120
dot name so this time we're creating a

299
00:12:49,120 --> 00:12:51,880
new weapon and assigning it directly to

300
00:12:51,880 --> 00:12:54,040
my weapon property now we can still

301
00:12:54,040 --> 00:12:56,230
refer to it as Tim dot weapon but we

302
00:12:56,230 --> 00:12:58,360
don't have a direct reference to it in

303
00:12:58,360 --> 00:12:59,380
our main function

304
00:12:59,380 --> 00:13:05,110
so to run the program you can see it

305
00:13:05,110 --> 00:13:07,780
correctly prints out a sword so which

306
00:13:07,780 --> 00:13:10,060
way should you use well the answer is

307
00:13:10,060 --> 00:13:12,310
that it depends we're going to be seeing

308
00:13:12,310 --> 00:13:14,560
one reason for using the first method in

309
00:13:14,560 --> 00:13:16,690
a later video the important thing to

310
00:13:16,690 --> 00:13:18,850
consider is where the weapon in this

311
00:13:18,850 --> 00:13:21,760
case belongs you know obviously you

312
00:13:21,760 --> 00:13:22,990
won't just be dealing with web

313
00:13:22,990 --> 00:13:25,029
objects in your code but the principle

314
00:13:25,029 --> 00:13:27,220
is the same in other words does the axe

315
00:13:27,220 --> 00:13:29,890
belong to the player generate or is it

316
00:13:29,890 --> 00:13:32,290
part of the game so another way to look

317
00:13:32,290 --> 00:13:34,870
at that is to ask can the axe exist in

318
00:13:34,870 --> 00:13:37,330
our program without the player generate

319
00:13:37,330 --> 00:13:40,240
so things like the names Tim Louise one

320
00:13:40,240 --> 00:13:42,130
to watch and so on don't have any

321
00:13:42,130 --> 00:13:44,140
meaning without the player that they're

322
00:13:44,140 --> 00:13:46,630
attached to the X on the sword on the

323
00:13:46,630 --> 00:13:48,550
other hand are part of the overall game

324
00:13:48,550 --> 00:13:50,589
you know I could be forced to drop my

325
00:13:50,589 --> 00:13:52,270
sword at some point in which case

326
00:13:52,270 --> 00:13:55,270
another player might pick it up so if I

327
00:13:55,270 --> 00:13:57,070
drop the sword let's say I pick up a

328
00:13:57,070 --> 00:14:00,029
spear instead so adding that to the code

329
00:14:00,029 --> 00:14:04,570
Tim that weapon is equal to weapon for

330
00:14:04,570 --> 00:14:09,459
int disease spear comma 14 and print 'ln

331
00:14:09,459 --> 00:14:14,410
again Tim daunt weapon dot name so if we

332
00:14:14,410 --> 00:14:19,839
run this so I'm now got a spear and

333
00:14:19,839 --> 00:14:22,209
there's no trace of the sword anyway so

334
00:14:22,209 --> 00:14:24,310
the reference to Tim dot weapon no

335
00:14:24,310 --> 00:14:26,740
longer refers to the sword and we can't

336
00:14:26,740 --> 00:14:29,140
assign that to another player now don't

337
00:14:29,140 --> 00:14:30,730
worry too much about this it's one of

338
00:14:30,730 --> 00:14:32,980
the decisions we have to make when

339
00:14:32,980 --> 00:14:35,260
creating our code at this stage I just

340
00:14:35,260 --> 00:14:36,730
want you to be aware of the difference

341
00:14:36,730 --> 00:14:38,440
and that you can have more than one

342
00:14:38,440 --> 00:14:40,600
reference to the same object we'll come

343
00:14:40,600 --> 00:14:42,640
back to this in a later video when we

344
00:14:42,640 --> 00:14:44,320
provide a way for our players to drop

345
00:14:44,320 --> 00:14:46,180
things that they picked up so I'm going

346
00:14:46,180 --> 00:14:48,190
to stop the video here in the next one

347
00:14:48,190 --> 00:14:49,390
we're gonna have a challenge to let you

348
00:14:49,390 --> 00:14:51,430
practice some of these techniques, so see

349
00:14:51,430 --> 00:14:54,120
you in the next video.

