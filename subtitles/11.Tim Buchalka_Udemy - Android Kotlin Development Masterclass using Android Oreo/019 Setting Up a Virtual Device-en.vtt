WEBVTT
1

00:00:04.760 --> 00:00:07.010

In the previous video, we set up our



2

00:00:07.010 --> 00:00:09.350

hello world application and what I want



3

00:00:09.350 --> 00:00:11.030

to do now is take you through setting up



4

00:00:11.030 --> 00:00:13.160

the emulator so that when we get to the



5

00:00:13.160 --> 00:00:15.730

next video we can run this application.



6

00:00:15.730 --> 00:00:18.770

Now Android studio should have set up an



7

00:00:18.770 --> 00:00:20.360

emulator for you when you installed it



8

00:00:20.360 --> 00:00:22.009

but I want to go through and show you



9

00:00:22.009 --> 00:00:24.320

how to do that again anyway and that's



10

00:00:24.320 --> 00:00:25.640

because it's useful to know how to



11

00:00:25.640 --> 00:00:28.009

create new emulators so that you can



12

00:00:28.009 --> 00:00:29.570

download and test on different Android



13

00:00:29.570 --> 00:00:31.429

versions when you're going to release



14

00:00:31.429 --> 00:00:33.890

your app so to get to the Android



15

00:00:33.890 --> 00:00:35.960

virtual device manager you need to click



16

00:00:35.960 --> 00:00:38.180

on this little button over here or turn



17

00:00:38.180 --> 00:00:40.160

interval you can click on tools and



18

00:00:40.160 --> 00:00:43.399

Android and select a media manager so



19

00:00:43.399 --> 00:00:44.690

you can see that I've got an Android



20

00:00:44.690 --> 00:00:47.180

virtual device already set up but I'm



21

00:00:47.180 --> 00:00:48.859

going to delete that as I mentioned and



22

00:00:48.859 --> 00:00:50.239

walk through the process of creating it



23

00:00:50.239 --> 00:00:52.579

again so click on this little wire



24

00:00:52.579 --> 00:00:54.410

triangle that's on the far right and



25

00:00:54.410 --> 00:00:56.449

that's because it's a menu and from



26

00:00:56.449 --> 00:00:57.829

there when I click on it I can select it



27

00:00:57.829 --> 00:01:00.440

delete and click on yes now if you've



28

00:01:00.440 --> 00:01:01.789

got everything delete it like I have



29

00:01:01.789 --> 00:01:03.620

you'll start off with a screen that



30

00:01:03.620 --> 00:01:04.190

looks like this.



31

00:01:04.190 --> 00:01:05.930

so let's come down here and click on



32

00:01:05.930 --> 00:01:10.130

create virtual device I'll just expand



33

00:01:10.130 --> 00:01:11.180

this a little bit bigger so you can see



34

00:01:11.180 --> 00:01:14.450

it a bit better. Now I'm going to choose



35

00:01:14.450 --> 00:01:16.810

the Nexus 5x here for a few reasons,



36

00:01:16.810 --> 00:01:18.920

firstly it's a good one for testing



37

00:01:18.920 --> 00:01:21.290

purposes and secondly it's the device



38

00:01:21.290 --> 00:01:22.790

that the physical device that I actually



39

00:01:22.790 --> 00:01:25.340

own. Now if you're a bit shorter memory



40

00:01:25.340 --> 00:01:27.230

or you've got a slow computer then you



41

00:01:27.230 --> 00:01:28.490

may be better off with something like



42

00:01:28.490 --> 00:01:31.220

the Nexus 4 that uses less resources.



43

00:01:31.220 --> 00:01:34.100

Now this Play Store column is actually



44

00:01:34.100 --> 00:01:36.440

quite important because it tells us



45

00:01:36.440 --> 00:01:38.180

which devices can access the Google Play



46

00:01:38.180 --> 00:01:41.120

Store now at the time I'm recording this



47

00:01:41.120 --> 00:01:44.300

only the Nexus 5, the Nexus 5x emulators



48

00:01:44.300 --> 00:01:46.010

are able to download apps from the Play



49

00:01:46.010 --> 00:01:47.720

Store and of course that might change



50

00:01:47.720 --> 00:01:49.910

over time now there are a couple of



51

00:01:49.910 --> 00:01:52.820

implications of that the first one is



52

00:01:52.820 --> 00:01:54.230

that you can install apps from the Play



53

00:01:54.230 --> 00:01:56.810

Store on other devices the Nexus 4 for



54

00:01:56.810 --> 00:01:59.060

example but so that's got normally a



55

00:01:59.060 --> 00:02:01.220

problem because you usually use the



56

00:02:01.220 --> 00:02:03.410

emulator for testing your own apps and



57

00:02:03.410 --> 00:02:04.430

we'll touch on that a little bit later



58

00:02:04.430 --> 00:02:06.650

though another implication is to do with



59

00:02:06.650 --> 00:02:09.050

root access but don't worry about that



60

00:02:09.050 --> 00:02:11.300

at the moment just be aware that there



61

00:02:11.300 --> 00:02:13.099

are things you can't do or the Play



62

00:02:13.099 --> 00:02:15.079

Store emulators that's something else



63

00:02:15.079 --> 00:02:17.810

we'll discuss later in the course, once



64

00:02:17.810 --> 00:02:18.730

you've selected a



65

00:02:18.730 --> 00:02:21.560

click on next again I'll click I'm



66

00:02:21.560 --> 00:02:24.230

selecting the Nexus 5x now this next



67

00:02:24.230 --> 00:02:25.640

screen lets you choose which system



68

00:02:25.640 --> 00:02:28.160

image to use and you can see at the top



69

00:02:28.160 --> 00:02:30.410

there's three tabs here the first one is



70

00:02:30.410 --> 00:02:32.510

the recommended devices and you can



71

00:02:32.510 --> 00:02:34.250

download the images from here using the



72

00:02:34.250 --> 00:02:36.290

download link so if I wanted to select



73

00:02:36.290 --> 00:02:39.230

the API 24 version I could just click on



74

00:02:39.230 --> 00:02:41.330

download there that would download and



75

00:02:41.330 --> 00:02:42.680

then I would be able to access that and



76

00:02:42.680 --> 00:02:44.780

use that then in my case you can see



77

00:02:44.780 --> 00:02:46.040

we've got one that hasn't got the



78

00:02:46.040 --> 00:02:47.810

download option and that means that it's



79

00:02:47.810 --> 00:02:49.660

already been installed on this computer



80

00:02:49.660 --> 00:02:53.000

though note that these devices over here



81

00:02:53.000 --> 00:02:54.590

to the right on the target have got



82

00:02:54.590 --> 00:02:57.230

Google Play in the target name if we



83

00:02:57.230 --> 00:02:58.790

chosen a different model of firing on



84

00:02:58.790 --> 00:03:00.709

the previous screen the target names



85

00:03:00.709 --> 00:03:02.360

probably wouldn't include Google Play



86

00:03:02.360 --> 00:03:04.220

then this all the sailors tap up here



87

00:03:04.220 --> 00:03:07.640

for x86 images and also one for other



88

00:03:07.640 --> 00:03:11.299

images. Now the x86 images does give you



89

00:03:11.299 --> 00:03:12.829

a lot of choice but the decision is



90

00:03:12.829 --> 00:03:15.739

quite easy when you're starting off now



91

00:03:15.739 --> 00:03:17.780

the easy one is if you're running Linux



92

00:03:17.780 --> 00:03:20.120

if that's the case you just choose an



93

00:03:20.120 --> 00:03:24.109

x86 image for Android O, Oreo so you



94

00:03:24.109 --> 00:03:25.130

would choose this one if you're running



95

00:03:25.130 --> 00:03:26.660

Linux you don't have to worry about



96

00:03:26.660 --> 00:03:28.970

hexam or anything like that and if



97

00:03:28.970 --> 00:03:30.739

you've gone through the earlier video of



98

00:03:30.739 --> 00:03:32.660

checking and configuring a visualization



99

00:03:32.660 --> 00:03:34.880

support in your bios then there's really



100

00:03:34.880 --> 00:03:35.840

nothing more to be done



101

00:03:35.840 --> 00:03:38.690

Linux will happily use the x86 system



102

00:03:38.690 --> 00:03:40.639

images. Now if you're running on a Mac or



103

00:03:40.639 --> 00:03:43.489

Windows then the x86 images will give



104

00:03:43.489 --> 00:03:46.040

the best performance provided you manage



105

00:03:46.040 --> 00:03:48.380

to get hexam installed now if you did



106

00:03:48.380 --> 00:03:50.299

then you're in the same position as



107

00:03:50.299 --> 00:03:53.560

Linux users, so again choose an x86 image.



108

00:03:53.560 --> 00:03:56.090

Now if you're on Windows or a Mac



109

00:03:56.090 --> 00:03:59.450

without hexam the x86 emulators won't



110

00:03:59.450 --> 00:04:01.519

run they'll refuse to start because



111

00:04:01.519 --> 00:04:04.010

hexam isn't available so in that case



112

00:04:04.010 --> 00:04:06.290

you should use the other images to use



113

00:04:06.290 --> 00:04:09.200

an ARM image now all modern Mac's can



114

00:04:09.200 --> 00:04:11.120

run hexam although you may need to



115

00:04:11.120 --> 00:04:12.919

install the latest updates on your Mac



116

00:04:12.919 --> 00:04:14.660

so if you didn't manage to install



117

00:04:14.660 --> 00:04:16.459

hexam's sort that out before continuing



118

00:04:16.459 --> 00:04:19.010

now on Windows you can only install



119

00:04:19.010 --> 00:04:21.260

hexam if your computer has an Intel



120

00:04:21.260 --> 00:04:24.380

processor and supports virtualization so



121

00:04:24.380 --> 00:04:25.750

if you've got an AMD processor



122

00:04:25.750 --> 00:04:27.650

unfortunately you'll have to choose in



123

00:04:27.650 --> 00:04:32.440

the AR m EAB I'd at least 7 a image from



124

00:04:32.440 --> 00:04:35.740

other images tab. Now these system images



125

00:04:35.740 --> 00:04:37.840

these erm system images are



126

00:04:37.840 --> 00:04:39.820

unfortunately a lot slower than the x86



127

00:04:39.820 --> 00:04:42.310

ones so only use these if you've got no



128

00:04:42.310 --> 00:04:43.060

other choice



129

00:04:43.060 --> 00:04:45.160

in fact it's worth checking out the



130

00:04:45.160 --> 00:04:47.920

genie motion emulators instead because



131

00:04:47.920 --> 00:04:50.350

these AOM images in Android studio are



132

00:04:50.350 --> 00:04:52.510

very slow indeed now I'm going to add a



133

00:04:52.510 --> 00:04:55.780

link to the Genie motion website it's



134

00:04:55.780 --> 00:04:58.120

available at Genie motion dot com, now



135

00:04:58.120 --> 00:04:59.110

if we quickly have a look at this



136

00:04:59.110 --> 00:05:02.650

genymotion website I'll paste that in



137

00:05:02.650 --> 00:05:03.880

and this link will be in the resources



138

00:05:03.880 --> 00:05:07.450

section of this video there's an option



139

00:05:07.450 --> 00:05:08.530

over here to click in the top right



140

00:05:08.530 --> 00:05:11.590

called trial so they click on that and



141

00:05:11.590 --> 00:05:13.150

you'll be asked to register before you



142

00:05:13.150 --> 00:05:15.160

can actually download anything once



143

00:05:15.160 --> 00:05:16.660

you've registered you need to follow the



144

00:05:16.660 --> 00:05:18.910

link for the personal version at the



145

00:05:18.910 --> 00:05:20.200

moment that's not a button when you



146

00:05:20.200 --> 00:05:22.420

scroll down the page but that may will



147

00:05:22.420 --> 00:05:24.700

change so be prepared to hunt around the



148

00:05:24.700 --> 00:05:27.220

site to find it but again that's only if



149

00:05:27.220 --> 00:05:28.900

you can't get some of these other system



150

00:05:28.900 --> 00:05:31.330

images to work so going back to Android



151

00:05:31.330 --> 00:05:34.270

studio if you can use the x86 system



152

00:05:34.270 --> 00:05:35.340

images that come with Android studio



153

00:05:35.340 --> 00:05:37.840

then I certainly recommend that you use



154

00:05:37.840 --> 00:05:40.270

them otherwise check out the genymotion



155

00:05:40.270 --> 00:05:42.190

emulator if you find the ERM system



156

00:05:42.190 --> 00:05:45.160

images are too slow. Now if you're happy



157

00:05:45.160 --> 00:05:47.110

with working at the command prompt i'm



158

00:05:47.110 --> 00:05:48.430

going to be putting some instructions on



159

00:05:48.430 --> 00:05:50.500

how to use the x86 emulators from a



160

00:05:50.500 --> 00:05:52.210

command prompt then i'll let you run



161

00:05:52.210 --> 00:05:54.040

them on windows without hexam and gives



162

00:05:54.040 --> 00:05:55.720

better performance than the ARM system



163

00:05:55.720 --> 00:05:58.090

images but will add a document to the



164

00:05:58.090 --> 00:06:01.240

FAQ section explaining how to do that.



165

00:06:01.240 --> 00:06:04.120

Okay, so back to the x86 images so I'm going



166

00:06:04.120 --> 00:06:09.870

to use the oreo image API 26 year is



167

00:06:09.870 --> 00:06:13.180

Android 8 Google API so as you can see



168

00:06:13.180 --> 00:06:15.760

there so note that Google api's isn't



169

00:06:15.760 --> 00:06:18.040

the same thing as Google Play so this



170

00:06:18.040 --> 00:06:20.110

emulator won't be able to access the



171

00:06:20.110 --> 00:06:22.180

Google Play Store so that's fine I'm



172

00:06:22.180 --> 00:06:23.740

gonna be using this emulator for most of



173

00:06:23.740 --> 00:06:25.810

the apps in this course but we will be



174

00:06:25.810 --> 00:06:27.970

installing a Play Store emulator for the



175

00:06:27.970 --> 00:06:29.919

YouTube app a little bit later, so if



176

00:06:29.919 --> 00:06:31.540

you've got this option here and there's



177

00:06:31.540 --> 00:06:33.190

a download link you will need to click



178

00:06:33.190 --> 00:06:35.410

it at this point in my case is already



179

00:06:35.410 --> 00:06:37.750

downloaded so I can just click on next



180

00:06:37.750 --> 00:06:39.880

after making sure that the oreo version



181

00:06:39.880 --> 00:06:42.820

API level 26 is selected clicking on



182

00:06:42.820 --> 00:06:45.130

next. Now it's here that we get the



183

00:06:45.130 --> 00:06:45.879

chance to



184

00:06:45.879 --> 00:06:48.309

the configuration and you've got a few



185

00:06:48.309 --> 00:06:49.569

options here so I'm going to go through



186

00:06:49.569 --> 00:06:52.360

explain what they are firstly the AVD



187

00:06:52.360 --> 00:06:54.459

name now you can change that to



188

00:06:54.459 --> 00:06:56.319

something else if you want to but the



189

00:06:56.319 --> 00:06:58.110

suggested name is pretty good unless you



190

00:06:58.110 --> 00:07:01.119

create a lot of emulators then it's a



191

00:07:01.119 --> 00:07:02.259

good idea to use a name that describes



192

00:07:02.259 --> 00:07:04.629

little bit better so you know what all



193

00:07:04.629 --> 00:07:07.059

your nexus images are for example the



194

00:07:07.059 --> 00:07:08.379

default name is fine here, so I'm



195

00:07:08.379 --> 00:07:10.149

going to leave it as step right so



196

00:07:10.149 --> 00:07:11.919

there's another chance here to choose a



197

00:07:11.919 --> 00:07:13.569

different device by clicking the change



198

00:07:13.569 --> 00:07:15.969

button and I could also choose a



199

00:07:15.969 --> 00:07:17.409

different version of Android if I had



200

00:07:17.409 --> 00:07:19.179

the images downloaded and then I'll just



201

00:07:19.179 --> 00:07:20.589

show a screen similar to the previous



202

00:07:20.589 --> 00:07:22.389

one so I'm going to leave them both as



203

00:07:22.389 --> 00:07:24.429

they are in this next section down here



204

00:07:24.429 --> 00:07:26.769

you can actually choose you can change



205

00:07:26.769 --> 00:07:29.259

the orientation but you can also do that



206

00:07:29.259 --> 00:07:31.240

while the device is running so if you've



207

00:07:31.240 --> 00:07:33.580

created a tablet instead of a phone then



208

00:07:33.580 --> 00:07:35.289

landscape would make more sense as the



209

00:07:35.289 --> 00:07:37.209

default orientation rather than



210

00:07:37.209 --> 00:07:39.759

portraits now the emulated performance



211

00:07:39.759 --> 00:07:41.769

down here that's going to let you use



212

00:07:41.769 --> 00:07:44.080

the host GPU the graphics processing



213

00:07:44.080 --> 00:07:46.179

unit which can speed up the emulator



214

00:07:46.179 --> 00:07:48.610

display quite a lot but it can also



215

00:07:48.610 --> 00:07:50.409

cause problems with some systems though



216

00:07:50.409 --> 00:07:52.719

so it's best to leave it as I've got it



217

00:07:52.719 --> 00:07:54.939

on automatic to start with but if you do



218

00:07:54.939 --> 00:07:57.159

get GPU or GL errors when running the



219

00:07:57.159 --> 00:07:58.959

emulator then come back here and change



220

00:07:58.959 --> 00:08:01.629

it to software instead and that prevents



221

00:08:01.629 --> 00:08:03.579

the emulator from attempting to use your



222

00:08:03.579 --> 00:08:05.499

graphics card processor if there are



223

00:08:05.499 --> 00:08:07.809

problems you also try software if your



224

00:08:07.809 --> 00:08:09.129

emulator hangs and doesn't fall you



225

00:08:09.129 --> 00:08:11.409

start up sometimes that fixes the problem



226

00:08:11.409 --> 00:08:14.169

now if hexam isn't installed on windows



227

00:08:14.169 --> 00:08:17.529

and select a software without hacks some



228

00:08:17.529 --> 00:08:19.959

hardware often doesn't work the emulator



229

00:08:19.959 --> 00:08:22.240

isn't always very good at detecting that,



230

00:08:22.240 --> 00:08:24.399

so it's best to set it explicitly here



231

00:08:24.399 --> 00:08:26.589

in that scenario then this device frame



232

00:08:26.589 --> 00:08:28.509

that looks nice on the screens I'm going



233

00:08:28.509 --> 00:08:30.159

to leave that ticked it's really just



234

00:08:30.159 --> 00:08:32.469

eye candy though so install machines



235

00:08:32.469 --> 00:08:34.029

it's probably worth I'm ticking just to



236

00:08:34.029 --> 00:08:36.430

save for some resources and the show



237

00:08:36.430 --> 00:08:38.050

Advanced Settings button lets you



238

00:08:38.050 --> 00:08:39.459

configure things like the amount of RAM



239

00:08:39.459 --> 00:08:41.800

to allocate for the emulator if I click



240

00:08:41.800 --> 00:08:44.680

on that and have a look let's scroll



241

00:08:44.680 --> 00:08:46.139

down a little bit you can see here that



242

00:08:46.139 --> 00:08:50.230

currently is to fold into 1536 megabytes



243

00:08:50.230 --> 00:08:52.000

that's one of the half gig that the



244

00:08:52.000 --> 00:08:53.380

emulator will use from your system



245

00:08:53.380 --> 00:08:56.260

resources. So at a four gig system you're



246

00:08:56.260 --> 00:08:57.459

going to give a lot of memory to the



247

00:08:57.459 --> 00:08:59.590

emulator you may want to lock that



248

00:08:59.590 --> 00:09:02.830

in that scenario one gig or even 768 Meg



249

00:09:02.830 --> 00:09:04.750

may work better on a system with low



250

00:09:04.750 --> 00:09:07.780

memory. Now the VM heap is needed for the



251

00:09:07.780 --> 00:09:09.700

Java Runtime on the device the emulator



252

00:09:09.700 --> 00:09:11.680

and comes out of the total memory that



253

00:09:11.680 --> 00:09:14.350

you've allocated no internal storage is



254

00:09:14.350 --> 00:09:16.810

is a file on your hard drive so this 800



255

00:09:16.810 --> 00:09:18.910

megabytes here isn't coming out of your



256

00:09:18.910 --> 00:09:20.710

memory there's not really anything to be



257

00:09:20.710 --> 00:09:22.330

gained from increasing it so unless you



258

00:09:22.330 --> 00:09:23.980

intend to install hundreds of apps on



259

00:09:23.980 --> 00:09:24.550

the emulator



260

00:09:24.550 --> 00:09:26.950

I'd say leave it unchanged and



261

00:09:26.950 --> 00:09:29.800

specifying an external file for the SD



262

00:09:29.800 --> 00:09:31.480

card is an advanced thing to do and



263

00:09:31.480 --> 00:09:33.460

there's not much point changing that at



264

00:09:33.460 --> 00:09:34.990

this stage either you do that if you



265

00:09:34.990 --> 00:09:36.460

wanted to sort of pretend you're taking



266

00:09:36.460 --> 00:09:37.750

it out of the emulator and plugged it



267

00:09:37.750 --> 00:09:39.490

into your computer like you can do with



268

00:09:39.490 --> 00:09:41.290

a real SD card but that's not something



269

00:09:41.290 --> 00:09:43.140

we're going to be doing in this course



270

00:09:43.140 --> 00:09:45.400

now when I click that show advanced



271

00:09:45.400 --> 00:09:47.260

settings option the device frame options



272

00:09:47.260 --> 00:09:49.960

moved you can create custom skins for



273

00:09:49.960 --> 00:09:50.530

the emulator



274

00:09:50.530 --> 00:09:53.740

that's just eye candy really but it can



275

00:09:53.740 --> 00:09:55.060

be useful when you've come to publish



276

00:09:55.060 --> 00:09:56.650

your app because you can capture a



277

00:09:56.650 --> 00:09:58.000

screenshot of it running on an emulator



278

00:09:58.000 --> 00:09:59.950

and obviously they look better if it



279

00:09:59.950 --> 00:10:01.810

looks like a real device rather than



280

00:10:01.810 --> 00:10:03.730

just a square box so when the time comes



281

00:10:03.730 --> 00:10:05.140

for you to publish apps on the Google



282

00:10:05.140 --> 00:10:07.000

Play Store then certainly play around



283

00:10:07.000 --> 00:10:09.190

with the skins if you want this is the



284

00:10:09.190 --> 00:10:11.080

section I'm talking about in here but



285

00:10:11.080 --> 00:10:12.340

we're just starting out so either just



286

00:10:12.340 --> 00:10:14.380

accept the ones suggested that I'm going



287

00:10:14.380 --> 00:10:16.510

to do or you can untick enable device



288

00:10:16.510 --> 00:10:17.710

frame if you want to speed things up a



289

00:10:17.710 --> 00:10:19.390

little and give your computer less work



290

00:10:19.390 --> 00:10:21.580

to doing so finally down here there's



291

00:10:21.580 --> 00:10:23.680

this options for enable keyboard input



292

00:10:23.680 --> 00:10:25.510

well that box that's our use your



293

00:10:25.510 --> 00:10:27.250

computer's keyboard to type into the



294

00:10:27.250 --> 00:10:29.020

emulator so that's quicker than using



295

00:10:29.020 --> 00:10:31.480

the emulators on-screen keyboard but can



296

00:10:31.480 --> 00:10:33.790

alter the way your app works so I



297

00:10:33.790 --> 00:10:35.680

definitely recommend testing your app on



298

00:10:35.680 --> 00:10:37.420

an emulator that has this option



299

00:10:37.420 --> 00:10:39.730

unticked so you get a feel of how it



300

00:10:39.730 --> 00:10:42.220

behaves on the majority of devices so



301

00:10:42.220 --> 00:10:43.660

most users don't connect an external



302

00:10:43.660 --> 00:10:45.820

keyboard to their phones which is



303

00:10:45.820 --> 00:10:47.800

basically what this option is doing, so



304

00:10:47.800 --> 00:10:49.540

being forced to use a sound keyboard a



305

00:10:49.540 --> 00:10:51.610

to users can reveal some unexpected



306

00:10:51.610 --> 00:10:53.890

behavior now it's much quicker to type



307

00:10:53.890 --> 00:10:55.630

on a computer keyboard though so I'm



308

00:10:55.630 --> 00:10:57.330

going to leave this box ticked for now



309

00:10:57.330 --> 00:10:59.830

so once you've got everything selected



310

00:10:59.830 --> 00:11:03.640

and set up, click on finish and the



311

00:11:03.640 --> 00:11:05.860

device manager sets everything up and



312

00:11:05.860 --> 00:11:07.690

takes you back to the main AVG screen



313

00:11:07.690 --> 00:11:09.970

and you can now see our new device



314

00:11:09.970 --> 00:11:13.230

listed so - right over here of three or



315

00:11:13.230 --> 00:11:15.490

we've already seen any little triangle



316

00:11:15.490 --> 00:11:16.840

down here that actually gives you a list



317

00:11:16.840 --> 00:11:20.110

of options you duplicate this abd you



318

00:11:20.110 --> 00:11:22.720

can wipe the data you can show where it



319

00:11:22.720 --> 00:11:24.910

is on disk view the details or delete or



320

00:11:24.910 --> 00:11:26.620

even stop it if it's currently executing



321

00:11:26.620 --> 00:11:30.190

but for the other two icons the pencil



322

00:11:30.190 --> 00:11:32.680

icon will let you edit your emulator so



323

00:11:32.680 --> 00:11:34.960

if I click on that and it just goes back



324

00:11:34.960 --> 00:11:36.670

still to these screens that we were



325

00:11:36.670 --> 00:11:38.830

working on previously and you can make



326

00:11:38.830 --> 00:11:41.200

changes to that emulator, but obviously



327

00:11:41.200 --> 00:11:42.220

we don't need to do that because we've



328

00:11:42.220 --> 00:11:44.620

just created it now this great triangle



329

00:11:44.620 --> 00:11:46.360

here well that actually starts the



330

00:11:46.360 --> 00:11:48.160

emulator so I'm going to click that and



331

00:11:48.160 --> 00:11:51.640

the emulator will start up don't move



332

00:11:51.640 --> 00:11:52.510

that everyone's going to close that



333

00:11:52.510 --> 00:11:54.550

little screen down though. Now it



334

00:11:54.550 --> 00:11:56.110

takes a little while for the emulator to



335

00:11:56.110 --> 00:11:58.180

start up even on my Mac with 32



336

00:11:58.180 --> 00:12:00.280

gigabytes of RAM so you may have to be



337

00:12:00.280 --> 00:12:01.930

patient depending on the speed and



338

00:12:01.930 --> 00:12:05.140

capacity of your computer and it can't



339

00:12:05.140 --> 00:12:07.690

take literally half an hour or longer to



340

00:12:07.690 --> 00:12:09.550

stand an emulator up on some systems so



341

00:12:09.550 --> 00:12:11.050

it's a good idea to start it before you



342

00:12:11.050 --> 00:12:13.120

actually start coding that way it's up



343

00:12:13.120 --> 00:12:15.370

up and going and it's ready for you to



344

00:12:15.370 --> 00:12:17.740

use the own kind of let Android studio



345

00:12:17.740 --> 00:12:19.930

launch the emulator for us so I'm going



346

00:12:19.930 --> 00:12:21.820

to close this one down for now but if



347

00:12:21.820 --> 00:12:23.140

you maybe know this takes a long time to



348

00:12:23.140 --> 00:12:25.240

start and launch one from here so that



349

00:12:25.240 --> 00:12:27.310

it's available when you need it so I'm



350

00:12:27.310 --> 00:12:28.870

just going to click over here click on



351

00:12:28.870 --> 00:12:31.000

close hold the button down and select



352

00:12:31.000 --> 00:12:34.030

power off and that's shut down the



353

00:12:34.030 --> 00:12:36.340

emulator just a little confirmation in



354

00:12:36.340 --> 00:12:38.560

the bottom right hand corner. Now the



355

00:12:38.560 --> 00:12:39.970

last thing I want to point out is the



356

00:12:39.970 --> 00:12:41.860

three different types of system images



357

00:12:41.860 --> 00:12:44.620

in terms of their behaviors. Now the



358

00:12:44.620 --> 00:12:47.170

easiest place to see this is in the SDK



359

00:12:47.170 --> 00:12:49.210

manager, so I'm going to come over here



360

00:12:49.210 --> 00:12:54.760

the tools Android SDK manager I mean



361

00:12:54.760 --> 00:12:56.050

it'll come down here and click on show



362

00:12:56.050 --> 00:12:57.630

package details make sure that's checked



363

00:12:57.630 --> 00:12:59.710

and that's obviously available in the



364

00:12:59.710 --> 00:13:02.650

SDK platforms tap up here now starting



365

00:13:02.650 --> 00:13:04.870

with the Android 8 and ignoring the



366

00:13:04.870 --> 00:13:06.760

Android TV and Android wear system



367

00:13:06.760 --> 00:13:08.680

images you can see we've got various



368

00:13:08.680 --> 00:13:10.660

system images available now I don't know



369

00:13:10.660 --> 00:13:12.220

if Google is going to be releasing a ARM



370

00:13:12.220 --> 00:13:14.650

images for Oreo but at the moment I



371

00:13:14.650 --> 00:13:17.020

haven't got them available but I have



372

00:13:17.020 --> 00:13:19.180

got a - Intel x86 system images



373

00:13:19.180 --> 00:13:22.570

available Google api's until x86 in



374

00:13:22.570 --> 00:13:25.270

Google Play until x86 and again we're



375

00:13:25.270 --> 00:13:26.560

ignoring the



376

00:13:26.560 --> 00:13:29.980

android TV Intel x86 atom system image so



377

00:13:29.980 --> 00:13:32.350

if you need root access to the AVD and



378

00:13:32.350 --> 00:13:33.370

we'll be seeing that later in this



379

00:13:33.370 --> 00:13:36.040

course then we'll have to use the google



380

00:13:36.040 --> 00:13:38.860

api is system image but if you need



381

00:13:38.860 --> 00:13:40.990

access to the Google Play Store so that



382

00:13:40.990 --> 00:13:43.060

you can install apps on the device then



383

00:13:43.060 --> 00:13:44.740

you're wanting you to Google Play system



384

00:13:44.740 --> 00:13:47.770

image then there is a third variant and



385

00:13:47.770 --> 00:13:49.660

we can see that in the Android 4.2



386

00:13:49.660 --> 00:13:53.620

section all the way down here there's an



387

00:13:53.620 --> 00:13:55.600

Intel x86 system image with neither



388

00:13:55.600 --> 00:13:59.710

Google API's or Google Play API's so he



389

00:13:59.710 --> 00:14:03.279

just Intel x86 atom system image in the



390

00:14:03.279 --> 00:14:05.470

YouTube section of this course I'm going



391

00:14:05.470 --> 00:14:07.600

to be using the API 17 version of the



392

00:14:07.600 --> 00:14:11.050

system image and Android 4.2 and only



393

00:14:11.050 --> 00:14:12.250

going to be using that to show you an



394

00:14:12.250 --> 00:14:14.440

error we'll get because YouTube isn't



395

00:14:14.440 --> 00:14:16.540

installed on the system image, it's also



396

00:14:16.540 --> 00:14:18.279

a good version to check and we look at



397

00:14:18.279 --> 00:14:20.740

material design and section 9 now



398

00:14:20.740 --> 00:14:22.540

starting from the top again the system



399

00:14:22.540 --> 00:14:25.000

images we're going to be using the two



400

00:14:25.000 --> 00:14:28.510

android 8 or AR ones the google API



401

00:14:28.510 --> 00:14:31.240

until x86 atom system image and the



402

00:14:31.240 --> 00:14:33.790

google play until x86 atom system image



403

00:14:33.790 --> 00:14:35.920

that's from the android 8 and under



404

00:14:35.920 --> 00:14:38.500

android new car we're also going to be



405

00:14:38.500 --> 00:14:41.680

using the google api is into x86 anthem



406

00:14:41.680 --> 00:14:43.360

and that's i mentioned right down to



407

00:14:43.360 --> 00:14:44.830

android 4.2



408

00:14:44.830 --> 00:14:46.780

we're going to be using this one as well.



409

00:14:46.780 --> 00:14:48.820

Now if you're running Windows and can't



410

00:14:48.820 --> 00:14:50.500

get hacks I'm working then you won't be



411

00:14:50.500 --> 00:14:52.510

able to use the x86 system images from



412

00:14:52.510 --> 00:14:54.400

Android studio there is a way to run



413

00:14:54.400 --> 00:14:55.600

them from the command line and I'm going



414

00:14:55.600 --> 00:14:57.100

to be putting a document in the FAQ



415

00:14:57.100 --> 00:14:58.780

section describing how to do that



416

00:14:58.780 --> 00:15:00.760

and it'll also describe some other



417

00:15:00.760 --> 00:15:02.800

options for you to consider as well so



418

00:15:02.800 --> 00:15:04.150

that simulators we've now got one



419

00:15:04.150 --> 00:15:05.770

installed, let's move on to the next



420

00:15:05.770 --> 00:15:07.630

video we're going to actually get their



421

00:15:07.630 --> 00:15:09.910

hello world app running in this emulator.



422

00:15:09.910 --> 00:15:13.500

So I'll see you in the next video.



