1
00:00:05,290 --> 00:00:05,760
Tudo bem.

2
00:00:05,760 --> 00:00:09,070
Ento neste vdeo eu quero falar um pouco sobre testes.

3
00:00:09,210 --> 00:00:14,320
Agora testamos o aplicativo e os vrios cenrios em vdeos anteriores na seo do curso.

4
00:00:14,550 --> 00:00:17,480
Mas h mais alguns testes que devemos executar.

5
00:00:17,820 --> 00:00:23,690
 uma boa ideia criar um script de teste para garantir que voc cubra todas as situaes possveis.

6
00:00:23,700 --> 00:00:28,680
Agora o script em si no precisa ser muito complicado, mas deve incluir a

7
00:00:29,070 --> 00:00:35,310
condio inicial, bem como o resultado esperado para o teste de que as permisses funcionaram corretamente, pois o

8
00:00:35,540 --> 00:00:37,830
script se parece com o seguinte.

9
00:00:37,830 --> 00:00:42,480
Ento, podemos dizer que temos vrios testes que comeam a passar apenas o primeiro em

10
00:00:42,480 --> 00:00:44,490
que comeamos a condio no instalada.

11
00:00:44,490 --> 00:00:48,900
Ns temos vrias aes que podem dizer que podemos executar o aplicativo no lado direito

12
00:00:48,900 --> 00:00:51,330
que temos o resultado esperado para o primeiro teste.

13
00:00:51,510 --> 00:00:55,810
O resultado esperado  que os ces de permisso aparecem quando no esto instalados.

14
00:00:56,040 --> 00:00:58,590
E assim, quando passar pela lista  basicamente.

15
00:00:58,860 --> 00:01:00,260
Alguns testes l.

16
00:01:00,510 --> 00:01:05,650
E esse script no momento no testa permisso de acesso quando o EP  executado pela primeira vez.

17
00:01:05,760 --> 00:01:08,310
Ento, isso provavelmente tambm deve ser includo.

18
00:01:08,340 --> 00:01:14,190
Alm disso, no inclui testes em uma verso do Android anterior ao IPR 23.

19
00:01:14,220 --> 00:01:19,800
Ento, vamos dar a voc um desafio aqui e o desafio  adicionar esses dois testes ao

20
00:01:19,800 --> 00:01:22,230
script e execut-los para garantir que tudo funcione.

21
00:01:22,230 --> 00:01:28,020
Agora, quando digo script, estou falando apenas de um conjunto de scripts que voc escreveria em um pedao de

22
00:01:28,020 --> 00:01:28,370
papel.

23
00:01:28,370 --> 00:01:32,770
Ento, basicamente, apenas anote o que voc acha que os dois testes extras devem estar aqui.

24
00:01:33,090 --> 00:01:36,940
Alm disso, h outro teste que no inclumos.

25
00:01:37,080 --> 00:01:38,750
Ento, pense sobre isso tambm.

26
00:01:38,760 --> 00:01:40,980
O que  isso e adicione isso ao script.

27
00:01:40,980 --> 00:01:42,630
Em outras palavras, anote isso tambm.

28
00:01:42,690 --> 00:01:44,430
Ento pense sobre esses testes.

29
00:01:44,430 --> 00:01:47,760
Poste o vdeo agora e eu te vejo quando voc voltar.

30
00:01:47,760 --> 00:01:48,810
Poste o vdeo agora.

31
00:01:50,590 --> 00:01:50,860
EST BEM.

32
00:01:50,860 --> 00:01:52,020
Ento seja bem vindo de volta.

33
00:01:52,090 --> 00:01:57,660
Ento, vamos falar agora sobre o que perdemos nesse conjunto anterior de scripts.

34
00:01:57,700 --> 00:02:02,340
Ento, em primeiro lugar, os itens que voc pode ver so os testes adicionais.

35
00:02:02,340 --> 00:02:07,960
Portanto, voc quer garantir que os aplicativos se comportem corretamente depois que o usurio revogar as permisses

36
00:02:07,960 --> 00:02:09,800
que esto sendo concedidas anteriormente.

37
00:02:10,270 --> 00:02:14,290
E obviamente que os outros testes sobre os quais voc falou foram onde o aplicativo no foi

38
00:02:14,290 --> 00:02:14,910
instalado no topo.

39
00:02:14,950 --> 00:02:17,560
Ns corremos o dilogo de permisses do aplicativo deve aparecer e assim por diante.

40
00:02:17,630 --> 00:02:25,240
Em seguida, tambm o script de foto ou teste final foi se o aplicativo no est instalado executando uma verso do prottipo do Android

41
00:02:25,240 --> 00:02:30,500
para 23 e os prprios passos que eles tiveram para se certificar de que  testado tambm.

42
00:02:30,590 --> 00:02:32,390
O lado do Senado poderia ter feito isso.

43
00:02:32,390 --> 00:02:38,190
Ento isso  realmente voltar para um estdio e dar uma olhada final no cdigo antes de deixarmos as

44
00:02:38,200 --> 00:02:40,200
permisses e voltarmos aos bancos de dados.

45
00:02:41,050 --> 00:02:47,050
Portanto, a primeira coisa que posso ajudar a mudar agora que removemos o campo certo do contexto concedido

46
00:02:47,050 --> 00:02:48,370
est no mtodo uncreate.

47
00:02:48,370 --> 00:02:56,760
Ento, vamos apenas dizer que agora voc tem a condio de ter uma parte do if e else sobre a

48
00:02:56,760 --> 00:02:58,910
qual eu estou falando aqui.

49
00:02:59,280 --> 00:03:02,720
Mas a nica coisa que estamos fazendo  que a condio  verdadeira agora  logar.

50
00:03:02,900 --> 00:03:07,530
Agora, obviamente, anteriormente voc estava usando esse Takagi para atribuir o valor de true ao nosso campo

51
00:03:07,530 --> 00:03:08,190
direito concedido.

52
00:03:08,190 --> 00:03:14,160
Mas ns comentamos isso agora,  til registrar o fato de que estamos solicitando permisso, mas no

53
00:03:14,160 --> 00:03:17,730
 realmente necessrio ver se a permisso j foi concedida.

54
00:03:17,790 --> 00:03:21,800
Agora, a entrada de permisso solicitante no aparece no bloqueio.

55
00:03:22,080 --> 00:03:24,990
Ento, consequentemente, podemos simplificar esse cdigo.

56
00:03:24,990 --> 00:03:30,620
Ento, o que vou fazer  comentar o cdigo existente e colocar uma verso simplificada acima

57
00:03:30,720 --> 00:03:36,830
disso e, provavelmente, a maneira mais rpida de fazer isso  apenas pegar uma cpia desse cdigo.

58
00:03:37,170 --> 00:03:41,250
Vamos comentar isso quando chegarmos aqui e postarmos novamente.

59
00:03:41,340 --> 00:03:43,930
Ns s vamos mudar esse discurso um pouco.

60
00:03:43,970 --> 00:03:49,950
Ento, primeiro voc tem um teste para se ler permisso Comtek  igual a comisso concedida, mas

61
00:03:49,950 --> 00:03:54,090
j decidimos que no queremos realmente executar este cdigo, ento eu vou

62
00:03:54,090 --> 00:03:59,060
apagar essas duas linhas de cdigo, bem como o outro e depois vamos aparecer aqui.

63
00:03:59,070 --> 00:04:02,840
Duas palavras no iguais e no so iguais a duas.

64
00:04:03,420 --> 00:04:07,950
Ento, essencialmente, agora vamos apenas registrar o fato de que estamos solicitando permisso

65
00:04:07,950 --> 00:04:13,440
e, na verdade, passando pelo processo de usar a verso do Capet das permisses de solicitao

66
00:04:13,500 --> 00:04:14,410
para solicitar permisso.

67
00:04:14,820 --> 00:04:21,510
Isso  obviamente simplificado, o que torna muito mais fcil manter o STEPNELL, mas a prxima coisa  no mtodo

68
00:04:21,520 --> 00:04:27,540
de resultado de permisses on request agora para eles terem uma olhada que voc pode encontrar mudanas em

69
00:04:27,540 --> 00:04:32,940
um vdeo anterior que fizemos realmente a nica coisa acontecendo aqui nessa funo  que estamos

70
00:04:33,420 --> 00:04:36,560
registrando que no estamos fazendo nada alm de logar.

71
00:04:36,600 --> 00:04:42,090
Agora esta funo particular de Colback pode ser muito til e ns a usamos anteriormente para decidir com

72
00:04:42,090 --> 00:04:45,810
o boto de ao de combate se no tivssemos acesso ao contexto.

73
00:04:45,990 --> 00:04:48,190
Ento voc ainda quer usar isso s vezes.

74
00:04:48,300 --> 00:04:53,910
Mas aqui, especificamente, no precisamos us-lo para criar aplicativos mais complexos que possam ter

75
00:04:53,910 --> 00:04:55,080
uma funcionalidade secundria.

76
00:04:55,080 --> 00:05:00,330
Voc tambm pode encontrar usos para a funo de resultado de permisso on request e agora voc sabe como us-lo.

77
00:05:00,330 --> 00:05:00,450
&nbsp;

78
00:05:00,450 --> 00:05:05,610
Se voc realmente precisa que uma coisa que voc queira fazer aqui seja, talvez, fornecer uma caixa

79
00:05:05,610 --> 00:05:11,460
de dilogo mais descritiva, explicando por que o aplicativo precisava de uma permisso negada e explicando o que o

80
00:05:11,460 --> 00:05:13,560
aplicativo no conseguiria fazer sem acesso.

81
00:05:13,560 --> 00:05:18,810
Em outras palavras, sem que essa permisso seja ativada, muitas vezes no estamos realmente interessados em saber

82
00:05:18,810 --> 00:05:20,780
se a permisso foi concedida ou no.

83
00:05:20,790 --> 00:05:23,390
Voc escreveu o cdigo para lidar com as duas condies.

84
00:05:23,490 --> 00:05:29,160
Portanto, no h realmente nenhum ponto de criar a funo de resultado de permisses on request apenas por causa

85
00:05:29,160 --> 00:05:29,450
disso.

86
00:05:29,580 --> 00:05:32,510
Ento, por essa razo, vou comentar toda a funo

87
00:05:38,180 --> 00:05:38,990
de luxo.

88
00:05:39,430 --> 00:05:44,340
Tudo bem, ento esse  o fim da discusso sobre o modelo de permisses introduzido no Antwoord marshmallow.

89
00:05:44,360 --> 00:05:46,000
E ns cobrimos um pouco aqui.

90
00:05:46,240 --> 00:05:51,030
Agora esperamos que voc leia a documentao ou simplesmente volte ao crime.

91
00:05:51,050 --> 00:05:55,310
Ento, basicamente, este link espero que quando voc passar por isso agora vai fazer muito mais sentido.

92
00:05:55,310 --> 00:05:56,750
Agora voc j viu isso em ao.

93
00:05:56,900 --> 00:06:02,540
O novo sistema  muito flexvel, pelo menos para os usurios, e no cria muito trabalho

94
00:06:02,540 --> 00:06:04,490
extra para ns como desenvolvedores.

95
00:06:04,490 --> 00:06:09,480
Na maioria das vezes, voc provavelmente copia o cdigo desse aplicativo ou da documentao

96
00:06:09,480 --> 00:06:11,750
do Google e verses ligeiramente modificadas dele.

97
00:06:11,900 --> 00:06:17,630
E se voc quiser usar algo ou fazer algo um pouco mais complexo, voc deve ter tudo o que

98
00:06:17,630 --> 00:06:21,380
precisa para poder fazer isso, pelo menos do ponto de vista de permisses.

99
00:06:21,410 --> 00:06:25,520
Eu ainda no cobri ces compartilhados, mas faremos isso  luz do vdeo.

100
00:06:25,610 --> 00:06:33,170
Por enquanto, porm, com bancos de dados at agora nesta seo, analisamos bancos de dados e, portanto, tivemos que executar operaes

101
00:06:33,170 --> 00:06:38,040
bsicas de banco de dados usando muito o sequel language e a sequel.

102
00:06:38,060 --> 00:06:44,360
Em seguida, experimentamos os provedores de contedo e vimos como eles costumavam fornecer acesso compartilhado a uma fonte

103
00:06:44,360 --> 00:06:45,130
de dados.

104
00:06:45,350 --> 00:06:49,810
E tambm usamos cursores para percorrer os dados de uma fonte de dados.

105
00:06:49,820 --> 00:06:55,220
Ento, com isso feito na prxima seo, vamos criar um aplicativo completo que usa um banco de dados sequencial, como

106
00:06:55,710 --> 00:06:58,520
o qual podemos acessar os dados para nosso provedor de contedo.

107
00:06:58,670 --> 00:07:04,900
Ento, vou ver como criar e registrar nosso prprio provedor de contedo para permitir que os dados sejam compartilhados.

108
00:07:04,910 --> 00:07:08,510
Ento vamos ver no vdeo aqui e passar para a prxima seo e comear.

