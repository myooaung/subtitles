1
00:00:00,000 --> 00:00:07,379
a few videos ago we looked at different

2
00:00:07,379 --> 00:00:09,630
ways to get references to our widgets

3
00:00:09,630 --> 00:00:12,120
from Kotlin code so let's review the

4
00:00:12,120 --> 00:00:14,040
code again and quickly go over what we

5
00:00:14,040 --> 00:00:17,400
did now for the first two widgets the

6
00:00:17,400 --> 00:00:19,380
edit text widgets for the result and the

7
00:00:19,380 --> 00:00:21,660
users input we used the approach that

8
00:00:21,660 --> 00:00:24,660
would be familiar to Java programmers so

9
00:00:24,660 --> 00:00:26,699
we declared the properties first on

10
00:00:26,699 --> 00:00:29,820
lines 15 and 16 as you can see here then

11
00:00:29,820 --> 00:00:32,160
called find view by ID in the oncreate

12
00:00:32,160 --> 00:00:34,860
method to get the references to the

13
00:00:34,860 --> 00:00:37,140
widgets in the layout and we had to

14
00:00:37,140 --> 00:00:39,390
declare the two properties as late in it

15
00:00:39,390 --> 00:00:41,280
but otherwise that's pretty standard

16
00:00:41,280 --> 00:00:44,640
code now for the display operation

17
00:00:44,640 --> 00:00:49,140
textview we used a lazy delegate this is

18
00:00:49,140 --> 00:00:54,239
the code on line 17 now the find view by

19
00:00:54,239 --> 00:00:55,949
ID function isn't called

20
00:00:55,949 --> 00:00:57,930
until we first access the display

21
00:00:57,930 --> 00:01:00,719
operation property and is then cached so

22
00:01:00,719 --> 00:01:03,210
that find V by ID doesn't get called

23
00:01:03,210 --> 00:01:05,880
repeatedly now we had to give a Kotlin a

24
00:01:05,880 --> 00:01:06,360
hint

25
00:01:06,360 --> 00:01:08,790
so that it knows what type to cast the

26
00:01:08,790 --> 00:01:11,430
view to and we did that by using the

27
00:01:11,430 --> 00:01:14,790
Dimond operator to specify textview when

28
00:01:14,790 --> 00:01:17,490
calling finally by ID over here again on

29
00:01:17,490 --> 00:01:20,790
line 17 now Kotlin has a number of

30
00:01:20,790 --> 00:01:23,189
extensions for Android they can simplify

31
00:01:23,189 --> 00:01:25,950
this even further and one of these lets

32
00:01:25,950 --> 00:01:28,500
us effectively import the resources and

33
00:01:28,500 --> 00:01:30,329
then refer to them as normal properties

34
00:01:30,329 --> 00:01:33,810
in our code first we have to import what

35
00:01:33,810 --> 00:01:36,540
are called synthetic properties and for

36
00:01:36,540 --> 00:01:38,250
our activity underscore main layout

37
00:01:38,250 --> 00:01:39,810
that's going to look like the following

38
00:01:39,810 --> 00:01:41,880
so it's basically below the other

39
00:01:41,880 --> 00:01:47,159
imports up here we type import so it's

40
00:01:47,159 --> 00:01:50,700
hot links dot Android not columns I've

41
00:01:50,700 --> 00:01:54,810
got links that Android dot synthetic dot

42
00:01:54,810 --> 00:02:00,960
main dot TV underscore main dot star so

43
00:02:00,960 --> 00:02:03,210
after adding that import all the widgets

44
00:02:03,210 --> 00:02:05,460
in our layout can be accessed just like

45
00:02:05,460 --> 00:02:07,530
any other properties that we imported

46
00:02:07,530 --> 00:02:11,039
into our code now it's easier to fully

47
00:02:11,039 --> 00:02:12,690
appreciate that by seeing it in action

48
00:02:12,690 --> 00:02:13,800
so

49
00:02:13,800 --> 00:02:15,990
going to modify our existing code to

50
00:02:15,990 --> 00:02:17,820
make use of these extension properties

51
00:02:17,820 --> 00:02:20,520
and S&T notice that the only thing I'm

52
00:02:20,520 --> 00:02:23,340
doing is deleting code and in fact what

53
00:02:23,340 --> 00:02:24,450
I'm going to do is I'm going to start by

54
00:02:24,450 --> 00:02:26,370
commenting it out just so you can see

55
00:02:26,370 --> 00:02:29,430
how much code we can remove so I'm going

56
00:02:29,430 --> 00:02:31,140
to start by commenting out the three

57
00:02:31,140 --> 00:02:32,730
lines up here there are definitions in

58
00:02:32,730 --> 00:02:37,920
line 17 through 19 and next I'm going to

59
00:02:37,920 --> 00:02:40,350
come down here to the definitions in the

60
00:02:40,350 --> 00:02:43,230
oncreate function and I'm effectively

61
00:02:43,230 --> 00:02:44,880
going to comment all those out right

62
00:02:44,880 --> 00:02:48,770
down to the button plus definitions just

63
00:02:48,770 --> 00:02:51,240
right down here to the button plus I'm

64
00:02:51,240 --> 00:02:52,830
going to come up here including result

65
00:02:52,830 --> 00:02:55,830
and comment all of those out right down

66
00:02:55,830 --> 00:03:00,690
to bump to button plus so we've removed

67
00:03:00,690 --> 00:03:02,910
all the properties and local variables

68
00:03:02,910 --> 00:03:05,100
in all the boilerplate code that just

69
00:03:05,100 --> 00:03:06,690
calls find V by ID

70
00:03:06,690 --> 00:03:08,280
unless you can see in this particular

71
00:03:08,280 --> 00:03:11,400
program that's a fair bit of code now we

72
00:03:11,400 --> 00:03:13,920
do have two errors that's because we

73
00:03:13,920 --> 00:03:15,810
called the text view property display

74
00:03:15,810 --> 00:03:18,989
operation but the ID of the text view is

75
00:03:18,989 --> 00:03:21,300
operation so you just have to change the

76
00:03:21,300 --> 00:03:23,880
old property name into the to the

77
00:03:23,880 --> 00:03:25,470
correct ID and the two lines that we've

78
00:03:25,470 --> 00:03:27,300
got an error so firstly I click on the

79
00:03:27,300 --> 00:03:29,940
first one you can see we've got this

80
00:03:29,940 --> 00:03:31,650
display operation they're going to

81
00:03:31,650 --> 00:03:32,790
mention that the text view name is

82
00:03:32,790 --> 00:03:38,040
operation so let's change that operation

83
00:03:38,040 --> 00:03:42,620
and then look at the second error

84
00:03:42,620 --> 00:03:44,820
display operation again and make that

85
00:03:44,820 --> 00:03:48,660
operation now there's two of the lines

86
00:03:48,660 --> 00:03:50,790
we can remove this well because if you

87
00:03:50,790 --> 00:03:52,940
go back up to the top and have a look

88
00:03:52,940 --> 00:03:56,160
we've actually got two unused imports

89
00:03:56,160 --> 00:03:57,900
although android studio may have deleted

90
00:03:57,900 --> 00:03:59,850
them for you if you told to remove

91
00:03:59,850 --> 00:04:02,250
unused imports in the settings and in my

92
00:04:02,250 --> 00:04:04,290
case i have done that and the two one

93
00:04:04,290 --> 00:04:06,030
two were imports that have been removed

94
00:04:06,030 --> 00:04:09,390
our Android widgets X View and Android

95
00:04:09,390 --> 00:04:11,010
that widget donnetta ticks in my face

96
00:04:11,010 --> 00:04:12,870
you can see they have both been removed

97
00:04:12,870 --> 00:04:15,620
because I've got that setting to room to

98
00:04:15,620 --> 00:04:17,700
basically remove unused imports

99
00:04:17,700 --> 00:04:21,239
automatically and what I'll do is start

100
00:04:21,239 --> 00:04:22,830
my emulator because we're going to test

101
00:04:22,830 --> 00:04:24,060
the app again just to make sure that

102
00:04:24,060 --> 00:04:26,550
still works

103
00:04:26,550 --> 00:04:29,039
and it's obviously a good idea in this

104
00:04:29,039 --> 00:04:31,020
scenario given the changes we've made to

105
00:04:31,020 --> 00:04:33,000
do test run just to make sure that

106
00:04:33,000 --> 00:04:34,349
things still work is there working

107
00:04:34,349 --> 00:04:43,289
before so I'll just uh fast-forward this

108
00:04:43,289 --> 00:04:48,619
run our app to make sure it still works

109
00:04:48,619 --> 00:04:51,270
all right so let's try a calculation so

110
00:04:51,270 --> 00:04:59,909
25 x 4 equals and x 3 equals that's 300

111
00:04:59,909 --> 00:05:00,599
that's correct

112
00:05:00,599 --> 00:05:07,229
let's now divide it by 9 x 3 equals 100

113
00:05:07,229 --> 00:05:09,300
so that's working fine without all the

114
00:05:09,300 --> 00:05:11,580
code that we've now removed well so

115
00:05:11,580 --> 00:05:13,649
let's just go back to the code and don't

116
00:05:13,649 --> 00:05:17,249
love it too how this all works so what

117
00:05:17,249 --> 00:05:19,050
we add at that line which was on line 10

118
00:05:19,050 --> 00:05:20,759
which is now on line 7 this import this

119
00:05:20,759 --> 00:05:23,089
cotton links non-android not synthetic

120
00:05:23,089 --> 00:05:25,469
domain done activity underscore main dot

121
00:05:25,469 --> 00:05:28,559
star the Kotlin extension plugin creates

122
00:05:28,559 --> 00:05:30,930
properties corresponding to each of the

123
00:05:30,930 --> 00:05:33,389
views in the layout now in this case it

124
00:05:33,389 --> 00:05:34,709
would import them from activity

125
00:05:34,709 --> 00:05:36,629
underscore main because that's the name

126
00:05:36,629 --> 00:05:38,490
that we provided to the import again on

127
00:05:38,490 --> 00:05:41,819
line 7 now behind the scenes Kotlin adds

128
00:05:41,819 --> 00:05:45,029
a caching function to our class now the

129
00:05:45,029 --> 00:05:46,379
first time we access one of the

130
00:05:46,379 --> 00:05:49,379
properties by using the viewers ID the

131
00:05:49,379 --> 00:05:52,319
caching function calls find V by ID to

132
00:05:52,319 --> 00:05:54,089
get a reference to the view it then

133
00:05:54,089 --> 00:05:57,149
stores that so subsequent accesses don't

134
00:05:57,149 --> 00:05:59,789
result in further calls to find V by ID

135
00:05:59,789 --> 00:06:02,279
I think you can agree that's pretty neat

136
00:06:02,279 --> 00:06:04,589
because we can refer to the views in our

137
00:06:04,589 --> 00:06:06,870
layout without all that boilerplate code

138
00:06:06,870 --> 00:06:08,819
that we had before all that code that

139
00:06:08,819 --> 00:06:10,519
I've now commented out in this so class

140
00:06:10,519 --> 00:06:12,569
now I'm going to leave the comments for

141
00:06:12,569 --> 00:06:14,490
now so that they'll appear in the source

142
00:06:14,490 --> 00:06:16,529
code for this video in the resources

143
00:06:16,529 --> 00:06:18,449
section what I will do is delete the

144
00:06:18,449 --> 00:06:19,889
comments at the start of a future video

145
00:06:19,889 --> 00:06:22,409
before we make any more changes to the

146
00:06:22,409 --> 00:06:25,199
code now one thing that we couldn't see

147
00:06:25,199 --> 00:06:27,059
is that Android studio will add the

148
00:06:27,059 --> 00:06:29,849
import for us we couldn't see it because

149
00:06:29,849 --> 00:06:31,680
we'd already added code that used the

150
00:06:31,680 --> 00:06:33,569
properties but you'll see the import

151
00:06:33,569 --> 00:06:35,849
being added to our next step I'm going

152
00:06:35,849 --> 00:06:37,589
to be using this approach in most places

153
00:06:37,589 --> 00:06:39,899
from now on there's at least one bit of

154
00:06:39,899 --> 00:06:41,699
code where I won't but I'll explain why

155
00:06:41,699 --> 00:06:44,550
at the time so there are several ways of

156
00:06:44,550 --> 00:06:46,110
getting references to the views or

157
00:06:46,110 --> 00:06:48,689
widgets in a layout from our Kotlin code

158
00:06:48,689 --> 00:06:51,029
you'll find always being used in code

159
00:06:51,029 --> 00:06:52,529
that you'll come across and there's

160
00:06:52,529 --> 00:06:54,269
nothing right or wrong about any of the

161
00:06:54,269 --> 00:06:56,849
approaches I think this last way results

162
00:06:56,849 --> 00:06:58,770
in the simplest code which is why I'm

163
00:06:58,770 --> 00:07:00,899
going to be using it going forward now

164
00:07:00,899 --> 00:07:02,520
if this method wasn't available I'd

165
00:07:02,520 --> 00:07:05,129
prefer the lazy delegate method wherever

166
00:07:05,129 --> 00:07:07,379
possible if the widget reference has to

167
00:07:07,379 --> 00:07:09,270
be read right then later nits is the

168
00:07:09,270 --> 00:07:11,279
next choice and you can only use lazy

169
00:07:11,279 --> 00:07:13,889
with vowel properties not with VARs in

170
00:07:13,889 --> 00:07:15,059
the next few videos we're going to go

171
00:07:15,059 --> 00:07:17,339
back to layouts now calculator doesn't

172
00:07:17,339 --> 00:07:19,199
look too good in landscape and that's

173
00:07:19,199 --> 00:07:21,029
because the buttons aren't centered and

174
00:07:21,029 --> 00:07:23,369
we're a bit pushed for space vertically

175
00:07:23,369 --> 00:07:24,990
so we're going to look at ways to tidy

176
00:07:24,990 --> 00:07:26,909
that up so let's work on that in the

177
00:07:26,909 --> 00:07:29,360
next video

