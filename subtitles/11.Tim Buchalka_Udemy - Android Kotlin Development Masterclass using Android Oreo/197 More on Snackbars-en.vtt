WEBVTT
1

00:00:05.480 --> 00:00:10.710

In the previous video we copied the code from a project to add a snack bar to that.



2

00:00:10.950 --> 00:00:11.590

In this video.



3

00:00:11.590 --> 00:00:17.910

We're going to look at snack bars in more data now and see how we can make a little bit easier to use



4

00:00:18.480 --> 00:00:24.330

snack bars where introduced with material design and are intended as an alternative to the text messages



5

00:00:24.610 --> 00:00:30.540

you know snack bars and types of matches can be used to notify the user of something in an unobtrusive



6

00:00:30.540 --> 00:00:31.210

way.



7

00:00:31.320 --> 00:00:35.410

The music has to see the message but the messages don't interrupt the flow.



8

00:00:35.750 --> 00:00:39.840

And that's how to lock a dialogue that has to be dismissed before you can continue.



9

00:00:39.840 --> 00:00:45.540

In the case of text messages and snack bars they appear on the screen but shouldn't get in the way and



10

00:00:45.540 --> 00:00:47.100

thus can be ignored.



11

00:00:47.130 --> 00:00:50.550

Snack bars are a lot more versatile and text messages.



12

00:00:50.550 --> 00:00:55.370

One problem actually with a text message is that they may be easy to miss.



13

00:00:55.380 --> 00:01:00.330

There are only two options for how long a time it can stay on the screen length of school short and



14

00:01:00.330 --> 00:01:01.610

length out of school long.



15

00:01:01.890 --> 00:01:08.370

Once the specified period has expired then the text message will automatically disappear from the screen.



16

00:01:08.400 --> 00:01:13.300

Now in the case of snack bars we've got another value we can use length to a school indef..



17

00:01:13.500 --> 00:01:19.080

So what I'm going to do is change the code in a floating action buttons on click method to have a look



18

00:01:19.080 --> 00:01:22.190

at what this length and Osco indefinite does.



19

00:01:22.370 --> 00:01:23.560

I'm down here now.



20

00:01:23.700 --> 00:01:28.390

The card here are now line 62 to get a chance to length.



21

00:01:28.980 --> 00:01:30.590

I was going to print it.



22

00:01:30.780 --> 00:01:34.280

Now I can bring up the documentation for Alington def. to take a look at that.



23

00:01:34.440 --> 00:01:37.400

And you say it is people with control are all talking and have a check.



24

00:01:37.410 --> 00:01:43.290

I can click and select the source code and we can say the comments above they are talking about what



25

00:01:43.290 --> 00:01:43.980

it is.



26

00:01:44.030 --> 00:01:48.400

It still shows the snack bar and surprisingly indefinitely.



27

00:01:48.420 --> 00:01:53.580

Basically the snack bar will be displayed from the time that it shall want to eat if it's dismissed



28

00:01:54.030 --> 00:01:57.190

or another snack bar is shown which will then replace it.



29

00:01:57.570 --> 00:01:58.980

So in this case that's very good.



30

00:01:58.980 --> 00:02:03.600

It's going to allow us to leave that message on the screen until the user dismisses it or there's another



31

00:02:03.600 --> 00:02:05.430

snack bar message showing.



32

00:02:05.700 --> 00:02:10.080

And you probably worked this out by now but tonight is that the comments when we go into the source



33

00:02:10.080 --> 00:02:12.960

carrier to appear above the card they refer to.



34

00:02:12.960 --> 00:02:15.090

So make sure you do read the right comment.



35

00:02:15.090 --> 00:02:16.440

Otherwise things can get confusing.



36

00:02:16.440 --> 00:02:20.940

You're looking down here for example and wanting to apply telling what is going definite which is not



37

00:02:20.940 --> 00:02:21.940

the case.



38

00:02:22.040 --> 00:02:25.140

I'm going to close down that snack bar Java code.



39

00:02:25.480 --> 00:02:30.360

By the way we could have got a similar result by just returning the documentation and getting the information



40

00:02:30.360 --> 00:02:32.750

up that way which we've seen in previous videos as well.



41

00:02:34.070 --> 00:02:38.500

So let's run the app and see what happens now look up this different setting length was going different



42

00:02:38.510 --> 00:02:38.900

set



43

00:02:46.250 --> 00:02:47.680

all right so I'm going to click on to No.



44

00:02:47.720 --> 00:02:51.830

I hate this time this time around and I want to open.



45

00:02:51.830 --> 00:02:56.970

I'll click on the FEBE notice now that the snecked message doesn't disappear automatically.



46

00:02:57.110 --> 00:03:00.500

But if you do want to dismiss a snack bar to swap right.



47

00:03:00.580 --> 00:03:02.910

And an advantage on the screen I can see me doing that now.



48

00:03:03.470 --> 00:03:06.790

So that's pretty cool but I can get even better.



49

00:03:07.040 --> 00:03:11.870

So instead of just showing the user a message I think it'd be nice if we could provide them with a way



50

00:03:11.870 --> 00:03:19.190

to grant the access at the same time rather than just telling them that they need to grant that access.



51

00:03:19.190 --> 00:03:25.180

The good news here is that snack bars can contain a clickable link as well as displaying the message.



52

00:03:25.200 --> 00:03:29.980

They can also behave like a button and allow us to provide some extra functionality.



53

00:03:30.140 --> 00:03:32.050

So to do that came back to our code.



54

00:03:32.150 --> 00:03:37.070

What we need to do is add some code here in the listener and we can see with cowpie got that set to



55

00:03:37.070 --> 00:03:37.750

now.



56

00:03:38.000 --> 00:03:43.880

So I'm just going to delete that and anti-left to Kelly Price which I will automatically press enter



57

00:03:44.450 --> 00:03:48.620

and I'm going to talk in some code now so this would be the code to be executed.



58

00:03:48.620 --> 00:03:55.310

If the snecked bar button itself is tapped so I'm going to just put a text message in his or toast dot



59

00:03:55.940 --> 00:03:58.130

text parentheses.



60

00:03:58.320 --> 00:04:06.480

I take what context come up and I just want to permit you just snack bar action clicked.



61

00:04:07.460 --> 00:04:08.950

Come on it's probably toast.



62

00:04:09.080 --> 00:04:14.890

That was caught short and parentheses and dots show.



63

00:04:15.380 --> 00:04:20.010

Now I'm not suggesting that you should show a text message from a snack Bahi a bunny doing that here



64

00:04:20.090 --> 00:04:25.460

so we can see the action being cold will let you do something more useful with the action in a moment.



65

00:04:25.460 --> 00:04:27.620

Let's actually run the site just to see what it does.



66

00:04:27.640 --> 00:04:28.850

Make sure that it works.



67

00:04:34.860 --> 00:04:42.630

On Quicken to know I click on the finding or some button and that stays there because we are using the



68

00:04:42.630 --> 00:04:44.450

link from the score indef..



69

00:04:44.460 --> 00:04:49.670

Now if I click on the selection button you can say we got a text message showing up on the screen.



70

00:04:49.750 --> 00:04:53.270

It's likely that the action was invoked after we clicked it.



71

00:04:53.290 --> 00:04:58.170

No actually had a reason for showing that and the reason was that when we create a text message we have



72

00:04:58.170 --> 00:05:02.560

to provide a context to the text function.



73

00:05:02.670 --> 00:05:08.840

It could say that there were 965 the unclick method gets passed a reference to the view that was clicked



74

00:05:09.210 --> 00:05:15.560

but because we're using colon rather than Java and implementing the on click method with a lambda colon



75

00:05:15.570 --> 00:05:18.170

allows us to submit the parameter declaration.



76

00:05:18.440 --> 00:05:24.920

So instead of explicitly declaring the parameter Koplin does it for us and uses the symbol it can say



77

00:05:24.930 --> 00:05:26.710

I've taught it to context.



78

00:05:26.940 --> 00:05:32.450

So basically that's why we can refer to it to context as an argument to make text.



79

00:05:32.460 --> 00:05:37.590

Now the other thing that may not be obvious is that a view has a context and that's the other thing



80

00:05:37.590 --> 00:05:40.850

I wanted to demonstrate by using a text message here.



81

00:05:40.950 --> 00:05:44.210

Sometimes you might struggle to get a context and easily in an adept.



82

00:05:44.210 --> 00:05:47.810

For example you know if you find you need one in a click list.



83

00:05:48.090 --> 00:05:53.030

You can often use the context of the argument just like we're doing here.



84

00:05:53.410 --> 00:05:55.500

And again just to confirm.



85

00:05:55.950 --> 00:05:57.040

Run it again.



86

00:06:02.260 --> 00:06:07.960

You can deny this time you can see here there's an action action text is appearing on the right hand



87

00:06:07.960 --> 00:06:08.610

side.



88

00:06:08.890 --> 00:06:15.760

You know that text comes from the text specified in the seduction method and you can sleep with a cat



89

00:06:15.780 --> 00:06:22.120

outburst Mrs. showing on the screen the one common error that the people who make you forget to call



90

00:06:22.120 --> 00:06:28.930

the doc show at the end autostart my text and that applies when displaying Sneck and ticed messages



91

00:06:29.140 --> 00:06:31.780

the way it wants Judaea does warn you if you do that.



92

00:06:31.960 --> 00:06:33.850

But if you don't see the type of message.



93

00:06:33.850 --> 00:06:35.560

Make sure you've got to show at the end.



94

00:06:35.620 --> 00:06:41.400

In parentheses as I've got the code for displaying snack bars and TOSed messages look very similar.



95

00:06:41.650 --> 00:06:45.270

You make a snack bar or ticed that called a shared method.



96

00:06:45.310 --> 00:06:48.720

Now there's really not a great deal more to say about snack bars.



97

00:06:48.950 --> 00:06:52.360

We can check the documentation by clicking on snack bar which I can do either here.



98

00:06:54.920 --> 00:07:00.730

You can say it says that snakebites provide like white feedback about an operation a show a brief message



99

00:07:00.820 --> 00:07:07.810

at the bottom of the screen on mobile and lower left allowed devices snack bars appear above all other



100

00:07:07.810 --> 00:07:13.150

elements on screen and only one can be displayed at a on and off so they automatically disappear after



101

00:07:13.150 --> 00:07:18.720

a torment or after user interaction or on screen particularly after interactions that someone a new



102

00:07:18.730 --> 00:07:22.890

service or activity and there you saw that can also be swapped for screen.



103

00:07:23.210 --> 00:07:28.700

Now it's also possible to be code back when a snack bar is shown or dismissed if you need to check that



104

00:07:29.090 --> 00:07:29.980

all right.



105

00:07:30.020 --> 00:07:34.300

So got the ability to respond when a user clicks the action link.



106

00:07:34.360 --> 00:07:39.070

What we can do is present the user with the dialogue to grant access.



107

00:07:39.200 --> 00:07:40.290

And that's pretty easy.



108

00:07:40.330 --> 00:07:42.450

We just call that request permission method again.



109

00:07:42.640 --> 00:07:45.100

But what if permanently denied access.



110

00:07:45.280 --> 00:07:49.540

So in that case calling request permissions won't pop up the dialog again.



111

00:07:49.600 --> 00:07:55.450

What we can do in that case is take them into the settings for our map so that they can grant the access



112

00:07:55.450 --> 00:07:56.530

that we need.



113

00:07:56.530 --> 00:08:01.980

Now unfortunately Google doesn't allow a way to go all the way into the permissions but we can get them



114

00:08:01.990 --> 00:08:04.370

as far as how apt settings.



115

00:08:04.420 --> 00:08:05.800

So let's see how that's going to work.



116

00:08:05.800 --> 00:08:10.780

Before we wrote the code to do it we're going to switch over and show you a finished version of this



117

00:08:10.780 --> 00:08:17.390

app in my IP 27 emulator to show that we can see what Sabun what it's actually going to do.



118

00:08:21.010 --> 00:08:23.930

I so I'm running the final version as you can see on screen now.



119

00:08:24.260 --> 00:08:31.400

And we get the normal dialog to grant access and outside we've already seen in our app so I can't deny



120

00:08:31.400 --> 00:08:32.080

access



121

00:08:34.740 --> 00:08:37.050

unable to accept the filing action button.



122

00:08:37.200 --> 00:08:40.450

We get a snack bar and there's now an option here to grant access.



123

00:08:40.710 --> 00:08:48.560

So if that action in noticed that the pop up came up again and I can click on allow just to confirm



124

00:08:48.560 --> 00:08:49.760

that that does work.



125

00:08:49.790 --> 00:08:51.960

And we can now see a context where we run it.



126

00:08:52.160 --> 00:08:55.760

So that's a definite improvement rather than just a message.



127

00:08:55.760 --> 00:09:01.610

The user can grant access when they attempt to use the functionality that you to explain in the documentation



128

00:09:01.640 --> 00:09:02.470

that you'll be reading.



129

00:09:02.470 --> 00:09:09.080

Once when we finish this app users sometimes refuse access because I don't understand why it's being



130

00:09:09.080 --> 00:09:10.020

requested.



131

00:09:10.430 --> 00:09:15.440

When they come to use a feature that requires the access they're much more likely to understand why



132

00:09:15.470 --> 00:09:18.870

they're being asked for it and so therefore more likely to grant it.



133

00:09:19.220 --> 00:09:24.160

But what happens if they refuse access and tick the box not to be bothered again.



134

00:09:24.200 --> 00:09:28.190

So what I've got to do now is going to settings for this app this county that



135

00:09:33.950 --> 00:09:39.410

when you go into a content provider into permissions and click and turn this off.



136

00:09:39.450 --> 00:09:44.280

So I'm going to provide access to all who provide that permission so that when we run out again now



137

00:09:44.760 --> 00:09:47.260

we should find it ask for permission again.



138

00:09:50.100 --> 00:09:54.630

Start asking for permission again because we revoked access so this time I'm going to click on the don't



139

00:09:54.630 --> 00:09:57.190

ask again I'm going to click on tonight.



140

00:09:58.810 --> 00:10:05.530

Now that I've done that I'm going to click on fighting action button so you get to snack pass before



141

00:10:06.010 --> 00:10:06.800

this time.



142

00:10:06.940 --> 00:10:15.010

When I click here on Grand Texas non-listed it goes right into the settings for a content provider example



143

00:10:15.010 --> 00:10:15.580

app.



144

00:10:15.760 --> 00:10:20.470

And unfortunately as I mentioned this is as far as we can get the user only has to tap on the permissions



145

00:10:20.470 --> 00:10:28.840

here to get into and grant access so that much change in the future as Google gets feedback from users.



146

00:10:28.910 --> 00:10:31.050

But at the moment that's the best we can do.



147

00:10:31.070 --> 00:10:34.830

So with that said now that would enable the permission again doesn't work.



148

00:10:34.900 --> 00:10:35.830

I'll get back now.



149

00:10:37.810 --> 00:10:38.770

Keep time back.



150

00:10:38.770 --> 00:10:44.080

We're back in app and you can see we're accessing the contacts again so you can see that that clearly



151

00:10:44.080 --> 00:10:45.120

worked.



152

00:10:45.130 --> 00:10:48.110

So that's how our app ultimately is going to work.



153

00:10:48.310 --> 00:10:51.030

But obviously at this point in time we haven't implemented that card.



154

00:10:51.280 --> 00:10:56.600

So that stopped the video here and in the next video will actually go ahead and implement that functionality.



155

00:10:56.620 --> 00:10:57.990

So see you in the next video.



