WEBVTT
1

00:00:05.620 --> 00:00:10.960

Nosso aplicativo de navegao flickr est indo bem, e no processo ns cobrimos muitas tcnicas que



2

00:00:10.960 --> 00:00:13.300

voc achar teis em seus prprios aplicativos.



3

00:00:13.520 --> 00:00:19.240

Agora  hora de estender o navegador flickr para exibir uma foto em tela cheia quando o usurio tocar nele.



4

00:00:19.540 --> 00:00:25.020

Agora vamos precisar de alguma maneira para detectar que um item na exibio do reciclador foi aproveitado.



5

00:00:25.060 --> 00:00:27.650

Tambm precisamos saber qual item foi tocado.



6

00:00:27.660 --> 00:00:33.040

Agora, uma conseqncia da simplificao do Google da viso do reciclador  que ela no tem mais uma



7

00:00:33.040 --> 00:00:35.610

maneira fcil de definir um ouvinte de clique.



8

00:00:35.620 --> 00:00:40.630

Agora existem vrios mtodos para detectar quando um item na lista  tocado, e um mtodo comum



9

00:00:40.930 --> 00:00:42.320

 implementar a visualizao do



10

00:00:42.320 --> 00:00:46.460

reciclador, que na interface do listener de toque do item, em uma classe.



11

00:00:46.540 --> 00:00:48.270

Agora vamos fazer algo semelhante, mas



12

00:00:48.470 --> 00:00:53.870

vamos estender o ponto de vista do reciclador de maneira simples na classe de ouvinte de toque de item.



13

00:00:53.870 --> 00:00:58.930

Agora, o Google criou essa classe para que no tenhamos de implementar mtodos da interface que no



14

00:00:58.930 --> 00:01:00.020

usaremos e tambm para



15

00:01:00.020 --> 00:01:03.890

testar futuramente nossos aplicativos em relao s alteraes na exibio do reciclador.



16

00:01:03.950 --> 00:01:07.210

Agora h dois links interessantes que quero compartilhar com voc.



17

00:01:07.210 --> 00:01:12.940

Em primeiro lugar,  a documentao do Google sobre a interface do list touch touch. Vamos dar uma olhada nisso.



18

00:01:15.070 --> 00:01:20.760

Ento, se voc decidir implementar a interface que  um bom ponto de partida, essa pgina contm



19

00:01:20.760 --> 00:01:27.770

um link para o simples onItemTouchListener, que  este aqui. Voc pode clicar sobre isso e verificar isso tambm.



20

00:01:27.800 --> 00:01:29.730

Ento, ambos valem a pena ler.



21

00:01:29.870 --> 00:01:34.940

E eles mencionaram no comeo que estender essa classe  til, se voc no quiser



22

00:01:34.940 --> 00:01:36.840

implementar todos os mtodos da interface.



23

00:01:37.130 --> 00:01:42.860

Agora eles tambm garantem sempre fornecer uma implementao padro nesta classe se as coisas mudarem, de modo



24

00:01:43.030 --> 00:01:45.620

que o cdigo existente no seja quebrado.



25

00:01:45.620 --> 00:01:52.010

Ento, por essa razo, vale a pena considerar a extenso da classe de ouvinte de toque de item simples, em vez de



26

00:01:52.010 --> 00:01:55.040

implementar a interface de ouvinte de toque de item, e



27

00:01:55.250 --> 00:01:56.960

 isso que vou fazer aqui.



28

00:01:57.320 --> 00:02:03.510

Agora, se voc quiser usar uma interface, a abordagem  muito semelhante ao que vamos fazer.



29

00:02:03.860 --> 00:02:08.820

Na verdade, o construtor de classe e as funes que definimos podem ser usadas e alteradas.



30

00:02:08.870 --> 00:02:13.580

Voc s precisa substituir outras funes, mesmo que no as use.



31

00:02:13.580 --> 00:02:16.940

Agora, antes de entrarmos no cdigo, tambm h outra maneira de



32

00:02:16.950 --> 00:02:18.630

fazer isso que  bem legal.



33

00:02:18.650 --> 00:02:22.880

Agora eu s quero chamar sua ateno para um artigo muito legal. Eu s vou trazer



34

00:02:22.880 --> 00:02:24.510

isso na tela.



35

00:02:25.730 --> 00:02:29.740

Todos esses links, como de costume, esto na seo de recursos deste vdeo.



36

00:02:31.260 --> 00:02:36.570

E isso realmente lhe d outra maneira de fazer isso, ento pode ser legal se voc



37

00:02:36.600 --> 00:02:37.810

quiser investigar outra abordagem.



38

00:02:37.860 --> 00:02:43.910

Agora, o primeiro pedao de cdigo nesta pgina mostra como  a adio do listener, e voc pode ver isso aqui embaixo.



39

00:02:44.080 --> 00:02:49.930

E uma vez que voc criou a classe,  realmente muito fcil adicionar o ouvinte  visualizao do reciclador.



40

00:02:50.310 --> 00:02:52.160

Ento voc pode querer investigar isso



41

00:02:52.410 --> 00:02:58.410

ainda mais, se voc estiver usando muitas visualizaes de recicladores no mesmo aplicativo, mas para esse aplicativo, vamos estender essa classe



42

00:02:58.500 --> 00:03:00.200

simples, ento vamos comear com isso.



43

00:03:00.530 --> 00:03:02.580

Tudo bem, ento de volta ao Android Studio.



44

00:03:02.880 --> 00:03:08.470

Precisamos criar uma nova classe, ento, conforme o normal, vamos clicar com o boto direito



45

00:03:10.890 --> 00:03:18.380

do mouse no nome do pacote, New, Kotlin File / Class, vamos selecionar Class como o tipo, e vamos usar



46

00:03:18.800 --> 00:03:20.280

o nome Recycler ItemClickListener.



47

00:03:29.890 --> 00:03:34.300

Isso  RecyclerItemClickListener e estamos fazendo, chamando esse nome porque 



48

00:03:34.300 --> 00:03:36.180

essencialmente o que .



49

00:03:36.330 --> 00:03:38.590

Tudo bem assim,



50

00:03:38.740 --> 00:03:51.860

para comear, vamos comear com a tag usual para log, private val TAG  igual a duas aspas duplas, RecyclerItemClickListen.



51

00:03:51.860 --> 00:03:54.570

Agora, mais uma vez, tenha muito cuidado com o comprimento da tag.



52

00:03:54.730 --> 00:03:58.690

Lembre-se de que voc s tem 23 caracteres, e  por isso



53

00:03:58.700 --> 00:04:00.550

que estou abreviando isso no final.



54

00:04:01.430 --> 00:04:07.970

Agora, todas as abordagens para implementar um listener de reciclador usam um mecanismo de retorno de chamada, que  a



55

00:04:07.970 --> 00:04:12.050

maneira usual de notificar uma atividade de que alguma coisa est sendo clicada.



56

00:04:12.050 --> 00:04:19.070

Ento, consequentemente, precisamos encontrar uma interface que possamos chamar de volta. Vamos chamar a nossa de ouvinte



57

00:04:19.170 --> 00:04:26.280

de cliques recicladora, ento vamos implementar isso, ou criar isso de preferncia,



58

00:04:30.140 --> 00:04:40.340

ento faa a interface onRecyclerClickListener, ento queremos a chave esquerda e direita, e as duas funes sero



59

00:04:40.390 --> 00:04:50.800

divertidas onItem, clique, depois entre parnteses Ver dois pontos posio vrgula clon int, ea segunda funo ser



60

00:04:50.840 --> 00:04:58.100

divertido onItemLongClick parnteses, e o mesmo, ento veja dois pontos View position



61

00:04:58.420 --> 00:04:59.940

colon int.



62

00:05:00.060 --> 00:05:07.050

Ento essa  a nossa interface. Ento, basicamente, essas duas funes que definimos so para retornos de chamada. onItemClick para responder a um



63

00:05:07.050 --> 00:05:13.670

toque normal em um item, e onItemLongClick se o item for tocado por muito tempo.



64

00:05:13.740 --> 00:05:19.640

Agora nossa classe precisar saber o que chamar de retorno, o que fazemos fornecendo um ouvinte no construtor



65

00:05:19.650 --> 00:05:20.590

principal, e fizemos



66

00:05:20.700 --> 00:05:22.200

isso algumas vezes agora.



67

00:05:22.590 --> 00:05:28.850

E tambm precisamos de um contexto para o detector de gestos funcionar e uma referncia  viso do reciclador de



68

00:05:28.860 --> 00:05:30.470

que estamos detectando os toques.



69

00:05:30.480 --> 00:05:34.800

Ento, vamos adicionar esses parmetros ao construtor tambm. Vamos subir e fazer isso.



70

00:05:34.970 --> 00:05:41.100

Ento, vamos mudar isso agora para imprimir



71

00:05:41.660 --> 00:05:51.460

parnteses aps o RecyclerItemClickListener, contexto clon Contexto vrgula recyclerView clon, RecyclerView e,



72

00:05:51.830 --> 00:05:55.120

obviamente, a capitalizao 



73

00:05:55.850 --> 00:06:03.010

importante aqui, vrgula privada val ouvinte clon OnRecyclerClickListener.



74

00:06:03.640 --> 00:06:07.410

E na prxima linha apenas para fazer um



75

00:06:07.590 --> 00:06:09.670

grande espao aqui, eu



76

00:06:12.360 --> 00:06:17.800

vou colocar dois pontos, ento vamos retornar um parentesco RecycledView dot SimpleOnItemTouchListener.



77

00:06:19.750 --> 00:06:21.110

EST BEM.



78

00:06:21.530 --> 00:06:25.800

Ento, vimos o ouvinte usado algumas vezes para armazenar o objeto que estaremos chamando



79

00:06:25.970 --> 00:06:28.830

de volta, mas o que  esse detector de gestos.



80

00:06:29.120 --> 00:06:34.210

At agora, respondemos a toques simples em widgets, como botes ou a visualizao de lista.



81

00:06:34.490 --> 00:06:39.480

Agora, o Android fornece vrias formas de interao do usurio com aplicativos, incluindo



82

00:06:39.500 --> 00:06:42.420

recursos de toque longo, deslizamento e desenho.



83

00:06:42.420 --> 00:06:45.460

Agora todos so manipulados por um detector de gestos.



84

00:06:45.890 --> 00:06:52.310

Ento, vou usar a classe compat de detector de gestos para que nosso aplicativo seja



85

00:06:52.310 --> 00:06:59.240

compatvel com verses anteriores do Android. Agora voc pode encontrar a documentao de referncia na classe do detector de gestos pesquisando o nome da classe. Agora, o Google tambm fornece um



86

00:06:59.240 --> 00:07:03.320

documento de treinamento que ser exibido nos resultados da pesquisa.



87

00:07:03.710 --> 00:07:10.790

Se ns formos l e s dermos uma rpida olhada nisso. V para o Google e faremos uma pesquisa por



88

00:07:16.410 --> 00:07:22.020

um detector de gestos. Voc pode ver esta primeira opo aqui em cima, vamos clicar sobre isso. Ento, se voc quiser saber mais quando escrever aplicativos



89

00:07:22.020 --> 00:07:28.150

que usam gestos mais complexos, voc encontrar o que precisa para comear nesses links. E eu estou empurrando a documentao muito,



90

00:07:28.170 --> 00:07:34.860

porque, francamente, voc no pode ser um desenvolvedor de sucesso sem tirar proveito de



91

00:07:34.860 --> 00:07:37.830

todos os recursos disponveis na internet.



92

00:07:37.830 --> 00:07:43.570

As coisas esto mudando to rpido, e h tanta coisa que o Android pode fazer que voc simplesmente no consegue



93

00:07:43.570 --> 00:07:44.330

aprender tudo isso.



94

00:07:44.340 --> 00:07:47.380

O truque  aprender o que voc precisa quando precisa,



95

00:07:47.430 --> 00:07:53.380

baseando-se no que sabe sobre como as classes do Android funcionam e como o prprio Android lida com as coisas.



96

00:07:53.490 --> 00:07:58.620

Agora comeamos a escrever a verso Java deste curso, que foi baseado no Android Nougat, mais ou



97

00:07:58.620 --> 00:08:03.650

menos na mesma poca em que a Samsung comeou a implantar o Marshmallow em seus dispositivos.



98

00:08:03.690 --> 00:08:06.980

A maioria dos dispositivos l fora ainda estava no Lollipop ou anterior.



99

00:08:07.260 --> 00:08:11.910

Ento, isso significa que estvamos usando uma verso do Android que tinha duas verses mais avanadas do que a



100

00:08:11.910 --> 00:08:12.720

maioria dos dispositivos.



101

00:08:13.110 --> 00:08:18.570

Ento, trabalhando em um ambiente que est mudando to rapidamente, francamente estaramos completamente perdidos sem acesso



102

00:08:18.570 --> 00:08:22.150

a todas as informaes que o Google e outros disponibilizam.



103

00:08:22.530 --> 00:08:24.270

Tudo bem, ento de volta ao Android Studio.



104

00:08:24.660 --> 00:08:30.770

Portanto, essa classe RecyclerItemClickListener estende o SimpleOnItemTouchListener.



105

00:08:30.960 --> 00:08:36.070

Acho que eu disse anteriormente que ele realmente retorna, mas  basicamente estendendo-o, o RecyclerView. Simples OnItemTouchListener, e podemos substituir



106

00:08:36.180 --> 00:08:43.810

a funo de evento on interrupt touch para interceptar ou tocar em eventos que



107

00:08:43.810 --> 00:08:49.840

acontecem na exibio do reciclador. Assim, a funo ser chamada sempre que qualquer tipo de toque ocorrer, seja



108

00:08:49.840 --> 00:08:52.580

um toque, um toque duplo, um toque ou o que for.



109

00:08:52.870 --> 00:08:59.710

Ento, eu vou fazer com que o gerador de cdigo substitua a funo de evento de toque na interceptao, aps nossa declarao de



110

00:08:59.710 --> 00:09:05.050

interface e, em seguida, registre a chamada do mtodo. E estamos estendendo uma classe aqui, no implementando uma interface.



111

00:09:05.250 --> 00:09:11.570

Ento eu vou descer aqui depois da declarao da interface e fazer um controle o.



112

00:09:12.340 --> 00:09:18.670

Ento, queremos substituir o onInterceptTouchEvent, que  esse aqui.



113

00:09:18.800 --> 00:09:26.440

Ento, como eu mencionei, vou adicionar alguns logs, ento faremos isso, ento Log. d parnteses TAG vrgula aspas



114

00:09:26.450 --> 00:09:27.890

duplas dot



115

00:09:28.370 --> 00:09:37.980

no Intercept TouchEvent clon comea dlar e. Ento, vamos deixar por enquanto, e conectar este ouvinte



116

00:09:38.070 --> 00:09:43.170

 viso do reciclador no mtodo onCreate da atividade principal.



117

00:09:43.210 --> 00:09:49.960

Ento eu vou em frente e abrir isso, h o nosso onCcreate. Ento, primeiro vamos fazer com que o



118

00:09:50.300 --> 00:09:57.380

MainActivity implemente a interface onRecyclerClickListener para que possamos passar a atividade em vez de usar



119

00:09:57.380 --> 00:09:58.310

classes annimas.



120

00:09:58.380 --> 00:10:03.610

Agora fizemos isso antes, quando usamos a MainActivity como o ouvinte dos botes no aplicativo do YouTube.



121

00:10:04.070 --> 00:10:06.460

Ento essa linha vai ficar um pouco



122

00:10:06.470 --> 00:10:08.160

longa agora, ento vou dividir.



123

00:10:08.220 --> 00:10:11.330

Ento temos a atividade principal da classe e temos nossa atividade de appcompat.



124

00:10:11.540 --> 00:10:13.200

Ns temos o nosso download completo.



125

00:10:13.250 --> 00:10:13.610

Ento



126

00:10:13.610 --> 00:10:18.100

vamos para uma nova linha l, e colocar em GetFlickrJsonData



127

00:10:18.290 --> 00:10:19.580

dot OnDataAvailable.



128

00:10:19.650 --> 00:10:20.650

Ns precisamos



129

00:10:20.660 --> 00:10:31.520

adicionar o prximo agora, ento coloque uma vrgula, ento v para a prxima linha, e ser RecyclerItemClickListener dot OnRecycler



130

00:10:31.880 --> 00:10:32.840

ClickListener.



131

00:10:35.850 --> 00:10:40.630

Agora precisamos implementar as duas funes e, obviamente, a atividade principal quer que faamos isso agora,



132

00:10:40.660 --> 00:10:42.260

e  disso que estamos reclamando.



133

00:10:42.720 --> 00:10:47.870

Ento, vamos fazer com que o gerador crie os stubs para essas duas funes depois do mtodo onCreate,



134

00:10:47.900 --> 00:10:48.420

ento vamos



135

00:10:48.480 --> 00:10:48.750

apenas



136

00:10:51.830 --> 00:10:58.720

desenhar aqui, controlar i, e vamos selecionar ambos e clicar em OK. Vamos tambm adicionar alguns logs a ambos, e tambm adicionaremos uma mensagem



137

00:10:58.910 --> 00:11:01.630

do Toast para que possamos ver o que est acontecendo.



138

00:11:01.690 --> 00:11:04.130

Ento, primeiro onItemClick Log. d



139

00:11:04.130 --> 00:11:13.320

parnteses aspas duplas de TAG com ponto dot onItemClick colon starts.



140

00:11:13.980 --> 00:11:28.250

Ento ns queremos que o brinde makeText parnteses parea esta vrgula Toque normal na posio posio do dlar, e ento ns queremos colocar uma vrgula



141

00:11:28.910 --> 00:11:42.920

aps as aspas duplas, ponto de brinde Comprimento Parnteses curtos mostram ponto. E pelo longo clique,



142

00:11:43.220 --> 00:11:52.240

vamos colocar Log. d parnteses TAG vrgula ponto onItemLongClick comea, e



143

00:11:56.090 --> 00:12:00.300

depois vamos fazer um par de Toast makeText



144

00:12:00.320 --> 00:12:10.880

parntese, e vai ser isso de novo, aspas duplas toque longo na posio posio do dlar, ento vamos fazer



145

00:12:12.220 --> 00:12:19.120

uma vrgula Toast dot length parnteses de fechamento curtos show de pontos.



146

00:12:19.640 --> 00:12:20.560

EST BEM.



147

00:12:21.410 --> 00:12:26.030

E obviamente agora o Android Studio est feliz por termos implementado essas duas funes.



148

00:12:26.030 --> 00:12:31.660

Ento, tudo o que resta fazer agora para ver nossos eventos de cliques  criar uma nova instncia de



149

00:12:31.670 --> 00:12:36.240

nossa classe RecyclerItemClickListener e adicion-la como um ouvinte de toque para a visualizao do reciclador.



150

00:12:36.660 --> 00:12:39.880

Ento vamos fazer isso e vamos fazer isso aqui.



151

00:12:40.500 --> 00:12:48.200

Na verdade, o que faremos, faremos isso imediatamente aps o layout linear e antes de realmente definirmos o adaptador.



152

00:12:48.290 --> 00:12:59.300

Ento, eu vou coloc-lo aqui, por isso  reciclador sublinhar ponto dot addOnItemTouchListener parnteses RecyclerItem ClickListener



153

00:12:59.300 --> 00:13:01.810

parnteses, esta vrgula recycler



154

00:13:02.000 --> 00:13:10.740

sublinhar vista vrgula isso, e os dois parnteses de fechamento  direita.



155

00:13:11.670 --> 00:13:17.040

E caso voc esteja se perguntando sobre os dois que esto aqui, estamos passando isso tanto para o contexto, porque



156

00:13:17.040 --> 00:13:23.460

 uma atividade, quanto para o ouvinte, porque implementamos a interface necessria. Agora, antes de executar o programa, vou



157

00:13:23.820 --> 00:13:29.040

comentar o registro da contagem de itens no FlickrRecyclerView Adapter, apenas para



158

00:13:29.060 --> 00:13:30.070

manter o



159

00:13:30.830 --> 00:13:32.700

logcat um pouco mais claro.



160

00:13:32.940 --> 00:13:35.780

Sabemos que est funcionando agora mesmo assim, ento no h necessidade de continuar registrando.



161

00:13:36.060 --> 00:13:37.370

Ento, vamos comentar



162

00:13:41.090 --> 00:13:42.090

isso, assim.



163

00:13:42.870 --> 00:13:47.930

E tambm no precisamos registrar os detalhes da foto,



164

00:13:47.990 --> 00:13:49.090

seu onBindViewHolder,



165

00:13:49.280 --> 00:13:51.800

ento vamos comentar isso



166

00:13:51.800 --> 00:13:59.010

tambm, essa  a linha aqui. Tudo bem, ento vamos abrir o log cat, e eu vou limp-lo, e vamos executar o nosso aplicativo.



167

00:14:08.900 --> 00:14:16.940

Tudo bem, ento eu vou deixar comear, e certificando-me agora que voc pode realmente ver o log cat, o que podemos. Vou clicar uma vez no aplicativo



168

00:14:16.940 --> 00:14:17.880

no emulador.



169

00:14:18.050 --> 00:14:24.260

Quando fazemos isso, voc deve realmente ver o mtodo onInterceptTouchEvent sendo chamado duas vezes, e voc



170

00:14:24.260 --> 00:14:27.650

pode ver que onInterceptTouchEvent foi chamado duas vezes l.



171

00:14:27.740 --> 00:14:30.340

Agora, sempre que voc interage com uma tela



172

00:14:30.350 --> 00:14:34.970

do Android, h realmente alguns eventos gerados. Agora aqui a funo est sendo chamada quando



173

00:14:34.970 --> 00:14:41.050

detecta o toque, mas tambm quando a cotao no dedo  levantada da tela, ou o mouse no meu caso.



174

00:14:41.090 --> 00:14:44.460

Ento, em outras palavras, estamos recebendo dois eventos de toque para cada toque.



175

00:14:44.630 --> 00:14:48.650

Agora vamos tentar clicar e segurar o boto do mouse por um longo toque.



176

00:14:49.000 --> 00:14:50.460

Ento eu vou fazer isso



177

00:14:55.130 --> 00:15:00.080

em outro, e vou fazer isso de novo. Ento, segure-o e voc pode notar que havia um, e ento, quando eu soltei



178

00:15:00.290 --> 00:15:01.710

o boto, ele foi novamente, ento eu vou



179

00:15:01.970 --> 00:15:07.110

fazer de novo, fazer um longo toque neste momento - h o nico evento. Eu estou segurando o boto do mouse, e quando eu



180

00:15:07.250 --> 00:15:12.130

solto o boto do mouse, vemos o segundo evento. Tambm  interessante ver o que acontece quando eu rolar e arremessar a lista.



181

00:15:12.130 --> 00:15:17.660

Ento, quando eu rolar, perceba que estamos fazendo uma ao. Vou apenas mudar isso um pouco mais para que possamos ver isso



182

00:15:17.660 --> 00:15:18.630

um pouco mais claro.



183

00:15:18.960 --> 00:15:25.120

E eu vou fazer de novo para que possamos ver. Ento notem que estamos acertando, temos uma ao para baixo, seguida



184

00:15:25.120 --> 00:15:30.250

por uma srie de movimentos de ao, e finalmente h uma ao quando eu solto o mouse, e isso



185

00:15:30.250 --> 00:15:33.780

 o equivalente a levantar o dedo da tela em um telefone real.



186

00:15:33.860 --> 00:15:35.690

Ento, se eu fizer um pouco de



187

00:15:35.810 --> 00:15:39.290

aventura aqui, bem, isso deve resultar na mesma sequncia de eventos, apenas muito



188

00:15:42.680 --> 00:15:43.650

mais rpido, assim.



189

00:15:44.240 --> 00:15:50.060

Ento, quando eu rolar, obtemos uma ao underscore down action, seguida por uma srie de aes que



190

00:15:50.230 --> 00:15:53.020

sublinham os eventos de movimento enquanto eu rola.



191

00:15:53.150 --> 00:15:57.170

E voc pode ver isso acontecendo enquanto eu estou lentamente rolando, ento eu solto o boto do mouse e



192

00:15:57.170 --> 00:15:57.970

voltamos  ao novamente.



193

00:15:58.760 --> 00:16:03.390

Portanto, h muitos eventos de toque sendo gerados quando interagimos com a tela.



194

00:16:03.800 --> 00:16:08.130

Agora, obviamente, no podemos ir tentando exibir uma imagem em tela cheia em todos eles.



195

00:16:08.150 --> 00:16:10.180

Na verdade,  muito fcil quebrar as coisas.



196

00:16:10.490 --> 00:16:18.190

Ento, vamos fazer uma mudana na funo no ouvinte para ver como. Agora, no onInterceptTouchEvent na classe Recycler ItemClickListener, retornarei



197

00:16:18.190 --> 00:16:19.540

true, em vez



198

00:16:23.480 --> 00:16:25.240

de retornar o resultado



199

00:16:25.460 --> 00:16:30.590

da chamada para o Super Method. Ento, em outras palavras,



200

00:16:30.590 --> 00:16:33.230

quero comentar isso e,



201

00:16:33.230 --> 00:16:37.810

na prxima linha, vou colocar o return true.



202

00:16:37.940 --> 00:16:44.110

Ento, se eu parar e rodar novamente, e eu abrir o log cat tambm, e agora quando eu clicar, ainda



203

00:16:49.550 --> 00:16:57.520

temos duas chamadas de mtodo registradas - ao abaixo e ao para cima. Agora, se eu segurar o boto do mouse, ainda recebemos uma



204

00:16:57.520 --> 00:17:04.130

nica ligao, depois a outra, quando eu a solto. Agora eu no tenho certeza se voc ser capaz



205

00:17:04.130 --> 00:17:06.680

de ver isso muito bem no vdeo.



206

00:17:06.850 --> 00:17:14.150

Mas se eu tentar rolar, estou tentando rolar como fiz anteriormente neste vdeo. Nada est realmente acontecendo.



207

00:17:14.150 --> 00:17:20.810

Eu no posso realmente rolar, e estamos recebendo essas aes do evento como voc pode ver aqui, ento ainda estamos recebendo a ao aps o evento



208

00:17:20.810 --> 00:17:25.550

de download, apenas um nico como voc pode ver, mas a viso do reciclador  no mais rolando



209

00:17:25.550 --> 00:17:26.130

pela lista.



210

00:17:26.270 --> 00:17:31.340

Ento, em outras palavras, no estamos recebendo mais movimentos de ao, como fizemos anteriormente, apenas



211

00:17:31.340 --> 00:17:32.200

um nico.



212

00:17:32.210 --> 00:17:38.480

Ento o que eu fiz aqui usando este retorno TRUE, foi interceptado o evento de toque, ento disse ao



213

00:17:38.480 --> 00:17:40.810

sistema que ns lidamos com cada evento.



214

00:17:40.840 --> 00:17:45.530

Em outras palavras, isso diz ao Android que nada mais precisa lidar com esses eventos, que  o que



215

00:17:45.530 --> 00:17:46.690

acontece quando retornamos como verdadeiros.



216

00:17:47.030 --> 00:17:52.730

Ento, se lidarmos com um determinado evento de toque, podemos retornar true para que nada mais tente



217

00:17:52.730 --> 00:17:53.610

lidar com isso.



218

00:17:53.720 --> 00:17:59.000

Mas se no lidarmos com isso, teremos que retornar falso para que o que estiver ouvindo possa fazer



219

00:17:59.020 --> 00:18:00.120

o que ele quiser.



220

00:18:00.140 --> 00:18:05.870

De fato, se no retornarmos false, devemos retornar o resultado de chamar o supermtodo, porque isso



221

00:18:05.870 --> 00:18:10.940

d a qualquer outra coisa que esteja ouvindo os eventos uma chance de responder.



222

00:18:11.000 --> 00:18:15.980

Ento, como voc pode ver, isso  muito mais complexo do que responder a cliques simples, como fizemos com os



223

00:18:15.980 --> 00:18:19.320

botes ou o widget de exibio de lista, mas est comeando a fazer sentido.



224

00:18:19.400 --> 00:18:25.450

Essa abordagem que a estrutura do Android leva torna a viso do reciclador muito mais flexvel do que a viso de



225

00:18:25.450 --> 00:18:26.300

lista mais simples.



226

00:18:26.510 --> 00:18:31.100

Assim, podemos agora interceptar eventos de toque, e podemos deixar o sistema lidar com aqueles com os



227

00:18:31.100 --> 00:18:32.210

quais no queremos lidar.



228

00:18:32.210 --> 00:18:36.420

Ento isso nos deixa com mais uma pergunta. Como decidimos com quem lidar?



229

00:18:36.650 --> 00:18:39.360

Bem,  a que entra o detector de gestos.



230

00:18:39.440 --> 00:18:41.910

Ento vou parar o vdeo aqui. No prximo vdeo,



231

00:18:42.020 --> 00:18:44.400

veremos como usar um detector de gestos.



232

00:18:44.570 --> 00:18:45.930

Vejo voc no prximo vdeo.



