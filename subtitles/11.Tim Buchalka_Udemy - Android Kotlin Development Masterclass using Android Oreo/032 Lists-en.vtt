WEBVTT
1

00:00:04.759 --> 00:00:06.589

In this video we're going to go a bit



2

00:00:06.589 --> 00:00:08.510

deeper and look at setting up into the



3

00:00:08.510 --> 00:00:11.240

tree within our player class and that's



4

00:00:11.240 --> 00:00:13.040

going to show you the concept of storing



5

00:00:13.040 --> 00:00:15.980

multiple items within a class. Now just



6

00:00:15.980 --> 00:00:17.599

to recap we've seen how we could store



7

00:00:17.599 --> 00:00:19.820

objects in our classes where we added a



8

00:00:19.820 --> 00:00:22.640

weapon object to the player class at the



9

00:00:22.640 --> 00:00:24.169

moment we're just storing a single



10

00:00:24.169 --> 00:00:26.869

weapon we can change it by replacing it



11

00:00:26.869 --> 00:00:27.800

with another weapon.



12

00:00:27.800 --> 00:00:30.399

So let's actually review how that works



13

00:00:30.399 --> 00:00:32.780

you know I've left the a code that was



14

00:00:32.780 --> 00:00:34.399

run at the end of the last video and



15

00:00:34.399 --> 00:00:36.260

towards the end you can see that it's



16

00:00:36.260 --> 00:00:38.350

showing if we scroll up a little bit



17

00:00:38.350 --> 00:00:40.640

firstly there's been here sowing tip at



18

00:00:40.640 --> 00:00:43.340

level one last three weapons source and



19

00:00:43.340 --> 00:00:46.700

damage 10 now Tim that gives the sword



20

00:00:46.700 --> 00:00:48.110

to Louise you can see there's an



21

00:00:48.110 --> 00:00:50.390

expletive output here the middle part or



22

00:00:50.390 --> 00:00:51.800

you could say that Louise takes the



23

00:00:51.800 --> 00:00:53.210

sword from Tim depending how you want to



24

00:00:53.210 --> 00:00:54.980

look at it and we can also see the



25

00:00:54.980 --> 00:00:56.840

details in follow ways which is now



26

00:00:56.840 --> 00:00:59.180

outputting a sword then Tim picks up the



27

00:00:59.180 --> 00:01:00.680

spear if we can scroll down to have a



28

00:01:00.680 --> 00:01:02.390

look and you can see that final output



29

00:01:02.390 --> 00:01:04.489

that's the final call to Tim's macho



30

00:01:04.489 --> 00:01:06.500

functioned prince the spear with 14



31

00:01:06.500 --> 00:01:07.520

points of damage



32

00:01:07.520 --> 00:01:10.069

so objects can contain references to



33

00:01:10.069 --> 00:01:12.499

other objects so here a player object



34

00:01:12.499 --> 00:01:15.350

called Tim as a field that contains a



35

00:01:15.350 --> 00:01:17.450

reference to a weapon object that's a



36

00:01:17.450 --> 00:01:20.030

spear so that's great for modeling the



37

00:01:20.030 --> 00:01:22.490

real world or a fantasy world in the



38

00:01:22.490 --> 00:01:24.499

case of an adventure game now you can



39

00:01:24.499 --> 00:01:26.600

have a house object for example that



40

00:01:26.600 --> 00:01:28.639

contains room objects that themselves



41

00:01:28.639 --> 00:01:31.789

have window door and wall objects and if



42

00:01:31.789 --> 00:01:33.409

you gave those window door and wall



43

00:01:33.409 --> 00:01:35.929

objects some properties representing the



44

00:01:35.929 --> 00:01:37.939

materials they're made of and things



45

00:01:37.939 --> 00:01:40.700

like the thermal conductivity of the



46

00:01:40.700 --> 00:01:42.829

material then you could model the heat



47

00:01:42.829 --> 00:01:45.049

loss of different houses so that could



48

00:01:45.049 --> 00:01:47.170

that you design energy-efficient houses



49

00:01:47.170 --> 00:01:49.310

now that's great where the player has



50

00:01:49.310 --> 00:01:51.770

got one and only one weapon but what



51

00:01:51.770 --> 00:01:54.170

about a house so house hasn't only got



52

00:01:54.170 --> 00:01:57.709

one wall that's just a wall so so we



53

00:01:57.709 --> 00:01:59.450

often want to store multiple references



54

00:01:59.450 --> 00:02:01.369

to things so we're going to give our



55

00:02:01.369 --> 00:02:03.499

players inventory to track things that



56

00:02:03.499 --> 00:02:05.599

they have picked up in the game tops of



57

00:02:05.599 --> 00:02:07.759

things like potions or rings or armor



58

00:02:07.759 --> 00:02:10.280

where there could be many items now



59

00:02:10.280 --> 00:02:12.110

obviously we don't want to have to



60

00:02:12.110 --> 00:02:14.060

create one variable for each type of



61

00:02:14.060 --> 00:02:15.530

item because we don't know in advance



62

00:02:15.530 --> 00:02:18.200

how many items the plan will collect



63

00:02:18.200 --> 00:02:20.239

so we wouldn't want to try and guess and



64

00:02:20.239 --> 00:02:21.770

create a new property for every single



65

00:02:21.770 --> 00:02:24.170

item that the player may pick up in



66

00:02:24.170 --> 00:02:25.580

other words we wouldn't want to do



67

00:02:25.580 --> 00:02:27.580

something like this if we go back to the



68

00:02:27.580 --> 00:02:30.980

player class so we wouldn't want to do



69

00:02:30.980 --> 00:02:34.610

something on these lines their weapon -



70

00:02:34.610 --> 00:02:40.760

their weapon 3 their weapon 4 and so on



71

00:02:40.760 --> 00:02:43.430

that could be severely limiting as well



72

00:02:43.430 --> 00:02:45.530

as wasting memory if they had fewer



73

00:02:45.530 --> 00:02:47.410

weapons then we allocate properties for



74

00:02:47.410 --> 00:02:50.530

so I just like that



75

00:02:50.530 --> 00:02:53.150

what we really want is some way of



76

00:02:53.150 --> 00:02:55.760

storing a list that we can add things to



77

00:02:55.760 --> 00:02:58.160

or remove things from without having to



78

00:02:58.160 --> 00:03:00.650

worry about how many items there are now



79

00:03:00.650 --> 00:03:02.299

we can actually do that using something



80

00:03:02.299 --> 00:03:03.440

called it ArrayList



81

00:03:03.440 --> 00:03:06.319

so let's actually set that up so I've



82

00:03:06.319 --> 00:03:08.209

deleted those extra weapons that I just



83

00:03:08.209 --> 00:03:10.370

typed in so the first thing we're going



84

00:03:10.370 --> 00:03:12.640

to do though is create another class



85

00:03:12.640 --> 00:03:15.170

then this class will hold the details



86

00:03:15.170 --> 00:03:17.720

for the inventory items that will be



87

00:03:17.720 --> 00:03:20.569

storing in the list now inventory item



88

00:03:20.569 --> 00:03:22.670

is a good name for these things but the



89

00:03:22.670 --> 00:03:24.739

use of the word item you can get



90

00:03:24.739 --> 00:03:27.109

confusing that's because there are items



91

00:03:27.109 --> 00:03:29.569

in lists now anything the player picks



92

00:03:29.569 --> 00:03:30.920

up in the course of the game will be



93

00:03:30.920 --> 00:03:33.260

known as loot so that's a good name for



94

00:03:33.260 --> 00:03:35.120

this class so let's go with that so I'm



95

00:03:35.120 --> 00:03:37.400

going to right click on the Java folder



96

00:03:37.400 --> 00:03:40.280

new selector Kotlin file class select



97

00:03:40.280 --> 00:03:42.049

class under the drop-down although I



98

00:03:42.049 --> 00:03:43.489

could have left in us and we wanted to



99

00:03:43.489 --> 00:03:45.560

without charging that and then just type



100

00:03:45.560 --> 00:03:48.920

loot obviously we've done that a few



101

00:03:48.920 --> 00:03:50.540

times now I'll show you so you should be



102

00:03:50.540 --> 00:03:52.639

fairly familiar with that process all



103

00:03:52.639 --> 00:03:54.370

right so we've called the class loot now



104

00:03:54.370 --> 00:03:56.600

this class is going to have a few



105

00:03:56.600 --> 00:03:59.150

properties one of them will be the name



106

00:03:59.150 --> 00:04:01.430

each piece of loot will have a name so



107

00:04:01.430 --> 00:04:03.530

we know what it is but let's also have a



108

00:04:03.530 --> 00:04:06.980

type now the type will be used to store



109

00:04:06.980 --> 00:04:09.049

what kind of loot we've got whether it's



110

00:04:09.049 --> 00:04:11.569

a potion or a ring or perhaps it's some



111

00:04:11.569 --> 00:04:13.639

armor so we want to be able to break it



112

00:04:13.639 --> 00:04:15.709

down so we know what kind of thing each



113

00:04:15.709 --> 00:04:18.049

and every bit of loot we've got is so



114

00:04:18.049 --> 00:04:19.370

what we're going to do is use something



115

00:04:19.370 --> 00:04:22.250

that we call an enum now an enum is a



116

00:04:22.250 --> 00:04:24.380

way of storing multiple choices for



117

00:04:24.380 --> 00:04:26.510

something so if you think of an INT or



118

00:04:26.510 --> 00:04:28.400

property that we declared to being it



119

00:04:28.400 --> 00:04:30.200

can have an infinite number of values



120

00:04:30.200 --> 00:04:32.360

but if we've only got a few



121

00:04:32.360 --> 00:04:34.340

is that a property can have then that's



122

00:04:34.340 --> 00:04:36.919

where a Needham's really useful so we're



123

00:04:36.919 --> 00:04:40.219

going to call our enum loot type let's



124

00:04:40.219 --> 00:04:41.449

add some code I'm going to type this



125

00:04:41.449 --> 00:04:43.490

above the class definition we're going



126

00:04:43.490 --> 00:04:49.849

to type in um plus loot type writing the



127

00:04:49.849 --> 00:04:51.620

capitalization and word loot and type



128

00:04:51.620 --> 00:04:54.889

then curly braces then within there



129

00:04:54.889 --> 00:04:56.719

we're going to type potion all in



130

00:04:56.719 --> 00:05:01.490

uppercase cover ring in uppercase comma



131

00:05:01.490 --> 00:05:05.659

then armor I'm just going to put a space



132

00:05:05.659 --> 00:05:07.580

after the ending definition for the enum



133

00:05:07.580 --> 00:05:10.370

and before the class now the convention



134

00:05:10.370 --> 00:05:12.379

is to use all capitals for the values in



135

00:05:12.379 --> 00:05:14.900

an enum and that way they stand out when



136

00:05:14.900 --> 00:05:16.279

you read the code and you don't spend



137

00:05:16.279 --> 00:05:18.020

time wondering where the variable called



138

00:05:18.020 --> 00:05:20.360

potion is declared one advantage of



139

00:05:20.360 --> 00:05:21.800

using any know is that you can only



140

00:05:21.800 --> 00:05:23.930

assign one of those defined values to a



141

00:05:23.930 --> 00:05:26.389

looot type field any leak that players



142

00:05:26.389 --> 00:05:28.129

pick up in other words has to either be



143

00:05:28.129 --> 00:05:31.580

a potion a ring or AMA so that's the



144

00:05:31.580 --> 00:05:33.409

three types of loot that players may



145

00:05:33.409 --> 00:05:35.330

pick up while playing the game you



146

00:05:35.330 --> 00:05:36.800

officer you could add more but I'm gonna



147

00:05:36.800 --> 00:05:38.889

stick with those three types for this example



148

00:05:38.889 --> 00:05:41.120

alright so let's give our loot objects



149

00:05:41.120 --> 00:05:43.400

and properties go back to the class line



150

00:05:43.400 --> 00:05:45.169

definition we're going to add some



151

00:05:45.169 --> 00:05:48.229

parentheses and we're going to start by



152

00:05:48.229 --> 00:05:54.289

typing Val space name colon string cover



153

00:05:54.289 --> 00:05:59.389

val type colon recording that loot type



154

00:05:59.389 --> 00:06:02.779

no single type to loot top then comma



155

00:06:02.779 --> 00:06:08.589

val value colon double with a capital D



156

00:06:08.589 --> 00:06:11.000

so each piece of loot will have a name



157

00:06:11.000 --> 00:06:13.699

and a type the other type we will be one



158

00:06:13.699 --> 00:06:16.339

of our loot types potion ring or armor



159

00:06:16.339 --> 00:06:18.529

now we also store a value for the loot



160

00:06:18.529 --> 00:06:20.779

so we know what each piece is worth and



161

00:06:20.779 --> 00:06:23.120

I'm using a double for the valley so



162

00:06:23.120 --> 00:06:24.620

that we can work in dollars and cents



163

00:06:24.620 --> 00:06:26.569

say that lets us have valleys like



164

00:06:26.569 --> 00:06:28.939

twelve dollars fifty for example so



165

00:06:28.939 --> 00:06:32.150

that's our basic loot class now each



166

00:06:32.150 --> 00:06:33.889

particular item is going to be in a



167

00:06:33.889 --> 00:06:35.870

player's it inventory is going to have a



168

00:06:35.870 --> 00:06:38.810

name a type and a value assigned to it



169

00:06:38.810 --> 00:06:40.669

so now we want to go back to the player



170

00:06:40.669 --> 00:06:43.279

class and store our loot somehow so



171

00:06:43.279 --> 00:06:45.300

let's go back to the player class



172

00:06:45.300 --> 00:06:47.970

now we could cut down under the weapon



173

00:06:47.970 --> 00:06:50.490

definition now what we can't do is just



174

00:06:50.490 --> 00:06:54.290

do something like this their loot loot



175

00:06:54.290 --> 00:06:57.360

the problem with that is it's only going



176

00:06:57.360 --> 00:06:59.880

to store a single piece of loot what we



177

00:06:59.880 --> 00:07:02.130

want is a list of some sort and Java



178

00:07:02.130 --> 00:07:04.050

provides a few different types of Lists



179

00:07:04.050 --> 00:07:06.270

that we can use and I know it said Java



180

00:07:06.270 --> 00:07:07.770

rather than Kotlin there but I'm going



181

00:07:07.770 --> 00:07:09.660

to come back to that so here we're going



182

00:07:09.660 --> 00:07:11.880

to use something called an ArrayList so



183

00:07:11.880 --> 00:07:13.490

I'm going to come back and delete that



184

00:07:13.490 --> 00:07:16.980

and make the ver Val we're going to call



185

00:07:16.980 --> 00:07:22.770

it inventory equals ArrayList and then



186

00:07:22.770 --> 00:07:25.350

add a comment and then put loot in the



187

00:07:25.350 --> 00:07:27.630

middle of that then we need to add left



188

00:07:27.630 --> 00:07:29.280

or right curly braces on the Internet



189

00:07:29.280 --> 00:07:31.020

all right so you can see there that the



190

00:07:31.020 --> 00:07:32.730

Declaration of typing looks slightly



191

00:07:32.730 --> 00:07:35.460

different to the other fields now the



192

00:07:35.460 --> 00:07:37.500

reason for that is because our inventory



193

00:07:37.500 --> 00:07:40.230

array list will contain other objects we



194

00:07:40.230 --> 00:07:42.510

need to tell Kotlin what kind of objects



195

00:07:42.510 --> 00:07:45.420

it'll contain but we don't have to do



196

00:07:45.420 --> 00:07:46.830

that in fact the Java collections



197

00:07:46.830 --> 00:07:50.010

classes will quite happily that you



198

00:07:50.010 --> 00:07:51.930

store just about anything in them the



199

00:07:51.930 --> 00:07:53.220

problem with that though is we don't



200

00:07:53.220 --> 00:07:54.420

want to allow the program to store



201

00:07:54.420 --> 00:07:56.280

players or weapons in this list if we



202

00:07:56.280 --> 00:07:58.230

did that we'd have problems when we came



203

00:07:58.230 --> 00:08:00.240

to calculate the total value of our loot



204

00:08:00.240 --> 00:08:02.340

now if there was a player stored in the



205

00:08:02.340 --> 00:08:03.750

list for example then the program would



206

00:08:03.750 --> 00:08:05.640

crash well we try to access the player's



207

00:08:05.640 --> 00:08:07.860

value field now we're not allowing



208

00:08:07.860 --> 00:08:09.870

slavery in this game so players don't



209

00:08:09.870 --> 00:08:12.600

have a monetary value by specifying loot



210

00:08:12.600 --> 00:08:14.460

inside the angle brackets here as you



211

00:08:14.460 --> 00:08:16.500

can say that I've done on line 7 we're



212

00:08:16.500 --> 00:08:18.630

restricting the ArrayList to only hold



213

00:08:18.630 --> 00:08:21.390

objects of type loot and we can't then



214

00:08:21.390 --> 00:08:24.360

store other objects in the list now the



215

00:08:24.360 --> 00:08:27.090

ArrayList comes from Java or comes with



216

00:08:27.090 --> 00:08:29.220

Java and it's in the Java dot util



217

00:08:29.220 --> 00:08:31.650

package and it takes care of storing



218

00:08:31.650 --> 00:08:33.600

things in the list for us and that's why



219

00:08:33.600 --> 00:08:35.820

I referred to Java classes earlier and



220

00:08:35.820 --> 00:08:37.350

we can see that by holding down the ctrl



221

00:08:37.350 --> 00:08:39.300

key and clicking on a raela store I'm



222

00:08:39.300 --> 00:08:40.710

going to hold down command because I'm



223

00:08:40.710 --> 00:08:43.620

on a Mac you know cotton was using a



224

00:08:43.620 --> 00:08:45.330

type alias there so you can see on the



225

00:08:45.330 --> 00:08:47.490

screen so that we can refer to a ray



226

00:08:47.490 --> 00:08:49.260

list instead of the full Java name of



227

00:08:49.260 --> 00:08:52.140

Java dot util dot ArrayList and that



228

00:08:52.140 --> 00:08:54.510

saves typing but we're still using the



229

00:08:54.510 --> 00:08:57.960

Java ArrayList class in our code so



230

00:08:57.960 --> 00:08:58.740

you'll hear me



231

00:08:58.740 --> 00:09:00.779

to Java classes throughout the course



232

00:09:00.779 --> 00:09:03.330

because Kotlin uses a lot of the Java



233

00:09:03.330 --> 00:09:05.640

classes and actually most of the android



234

00:09:05.640 --> 00:09:08.100

framework still written in java now if



235

00:09:08.100 --> 00:09:09.480

you want more information on the java



236

00:09:09.480 --> 00:09:11.370

ArrayList class and the things you can



237

00:09:11.370 --> 00:09:12.810

do with it there's some documentation



238

00:09:12.810 --> 00:09:15.029

that i'll briefly show you now so I'm



239

00:09:15.029 --> 00:09:17.910

just going to load a browser it's gonna



240

00:09:17.910 --> 00:09:22.770

have a quick look so there's our



241

00:09:22.770 --> 00:09:24.570

ArrayList and if you scroll down and



242

00:09:24.570 --> 00:09:25.830

have a look at some of the methods in



243

00:09:25.830 --> 00:09:27.810

the method summary here than others



244

00:09:27.810 --> 00:09:30.180

great there's a method to add new items



245

00:09:30.180 --> 00:09:32.220

to the list as you can see up here and



246

00:09:32.220 --> 00:09:33.779

in fact there's two add methods the



247

00:09:33.779 --> 00:09:35.430

second one lets us add items at a



248

00:09:35.430 --> 00:09:38.160

specific position in the list we're also



249

00:09:38.160 --> 00:09:41.070

going to clear function there a bit



250

00:09:41.070 --> 00:09:42.480

further down if you scroll down we've



251

00:09:42.480 --> 00:09:44.880

also got to remove as well and oh



252

00:09:44.880 --> 00:09:47.220

there's also a get function as well so



253

00:09:47.220 --> 00:09:49.170

that we can use that to access the



254

00:09:49.170 --> 00:09:51.330

intervention items in the list but we'll



255

00:09:51.330 --> 00:09:54.029

use that probably in the next video so



256

00:09:54.029 --> 00:09:56.550

the ArrayList class provides a load of



257

00:09:56.550 --> 00:09:58.770

methods for manipulating the contents of



258

00:09:58.770 --> 00:10:00.600

the list we're going to be looking at a



259

00:10:00.600 --> 00:10:02.850

few of those methods next so that we can



260

00:10:02.850 --> 00:10:05.220

get a feel for how to use them now



261

00:10:05.220 --> 00:10:06.839

whenever you're using the Java classes



262

00:10:06.839 --> 00:10:09.390

or the android framework classes that so



263

00:10:09.390 --> 00:10:10.410

we're going to look at throughout the



264

00:10:10.410 --> 00:10:12.540

course check out the documentation to



265

00:10:12.540 --> 00:10:14.670

see what you can do with them. Alright so



266

00:10:14.670 --> 00:10:16.770

let's so go back to our code and what



267

00:10:16.770 --> 00:10:18.720

I'll do is I'll end the video here in



268

00:10:18.720 --> 00:10:20.850

the next one we'll continue on and we'll



269

00:10:20.850 --> 00:10:22.860

start making use of this ArrayList so



270

00:10:22.860 --> 00:10:25.910

I'll see you in the next video.



