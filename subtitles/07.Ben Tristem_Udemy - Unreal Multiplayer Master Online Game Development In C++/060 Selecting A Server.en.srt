1
00:00:04,590 --> 00:00:05,190
Welcome.

2
00:00:05,190 --> 00:00:07,770
I'm excited about this next lecture and you will know why.

3
00:00:07,770 --> 00:00:13,560
Because we are going to be making it so that when we have a list of items in an join menu we can select

4
00:00:13,860 --> 00:00:20,370
the items in that join menu and when we've selected them we will know which index we selected.

5
00:00:20,370 --> 00:00:24,840
Now currently it's not showing me in the UI that it selected that we're going to do later but you can

6
00:00:24,840 --> 00:00:30,060
see here in the logs it's telling me that my selected index is one of my selected index is not set or

7
00:00:30,060 --> 00:00:36,150
that my selective index is zero going to find out how we can do that and how we can make it look good

8
00:00:36,270 --> 00:00:40,810
like this so that we basically doesn't look like we're clicking on a button or a checkbox but rather

9
00:00:40,810 --> 00:00:45,060
that we're just clicking on the server row and we're going a little to learn about a little type called

10
00:00:45,120 --> 00:00:46,130
T optional.

11
00:00:46,170 --> 00:00:51,510
It is a contained type like a T array or a t shared pointer and we will find out what it does and why

12
00:00:51,510 --> 00:00:51,990
it's useful.

13
00:00:51,990 --> 00:00:54,600
So let's dive in and do that.

14
00:00:54,600 --> 00:01:00,030
So if we take a look at how our join menu is currently working at we have the side effect that if I

15
00:01:00,030 --> 00:01:06,060
hit join it will populate it with a list of servers and it just got overwritten by the final session

16
00:01:06,090 --> 00:01:07,360
but found none.

17
00:01:07,410 --> 00:01:12,660
But if I hit join we do get a list of well simulated servers at the very least.

18
00:01:12,660 --> 00:01:16,290
How do we want this menu to actually work because we've got this joined button it's not currently doing

19
00:01:16,290 --> 00:01:17,220
the right thing.

20
00:01:17,220 --> 00:01:20,130
We do want it to do the right thing or do something.

21
00:01:20,370 --> 00:01:21,210
What is that going to be.

22
00:01:21,210 --> 00:01:26,040
Well what I want to be able to do is hover over the items here get some affordance that when we're hovering

23
00:01:26,040 --> 00:01:32,100
over there selectable and then I want to be able to click on one of the items then it should look like

24
00:01:32,100 --> 00:01:33,220
it's selected.

25
00:01:33,360 --> 00:01:40,630
And when I go over and hit join when that triggers a button call-back it should be able to see with

26
00:01:40,760 --> 00:01:45,840
a variable basically which index was selected and we can send the index up to the game instance where

27
00:01:45,840 --> 00:01:50,250
it can find the server information for that index.

28
00:01:50,250 --> 00:01:56,760
So that's the idea is that I want to be able to set an index up at the new main menu level so that when

29
00:01:56,760 --> 00:02:03,600
we hit join it will have that index and we will access that index to send up.

30
00:02:03,870 --> 00:02:04,270
Okay.

31
00:02:04,440 --> 00:02:06,180
So for now we're not going to worry about sending.

32
00:02:06,180 --> 00:02:11,550
Up above you main menu level but we do want to get indexed to that you may many level and there is a

33
00:02:11,550 --> 00:02:15,840
slight hitch here because that index is optional.

34
00:02:15,870 --> 00:02:20,850
It's not necessarily going to be set for example when I've just arrived in this menu which indexes are

35
00:02:20,850 --> 00:02:21,880
going to be set to.

36
00:02:21,940 --> 00:02:26,010
Are we defaulting to the first or are we saying that it's not set to any.

37
00:02:26,010 --> 00:02:31,290
So we're going to need to deal with that case and one way that we can deal with that case is with a

38
00:02:31,290 --> 00:02:38,640
little something called a tea option or a tea option or is a special um real type that's going to have

39
00:02:38,640 --> 00:02:41,740
a look at the documentation which is also linked against this lecture.

40
00:02:41,970 --> 00:02:49,380
What it says here about a the he optional is that we have an optional value where is set returns true

41
00:02:49,800 --> 00:02:55,380
that optional value can be got at using the get value function.

42
00:02:55,380 --> 00:03:01,740
Otherwise get value is not meaningful basically meaning it's essentially like a nold pointer that when

43
00:03:01,740 --> 00:03:07,950
it is valid we can get the contents right we can dereference that null pointer but when it's not valid

44
00:03:07,980 --> 00:03:09,570
dereferencing is an error.

45
00:03:09,600 --> 00:03:10,890
It's exactly the same here.

46
00:03:10,890 --> 00:03:13,120
So why do we have a different concept.

47
00:03:13,320 --> 00:03:18,630
Because with a pointer we're assigning memory on the heap now assigning memory on the heap is a expensive

48
00:03:18,870 --> 00:03:21,490
and B we have to worry about allocating it.

49
00:03:21,720 --> 00:03:27,000
If we use an optional type none of that is true because we can just allocate the memory right here on

50
00:03:27,000 --> 00:03:28,610
the stack or wherever.

51
00:03:28,610 --> 00:03:33,890
This value is being created it might be on the heap but it can be part of an object on the heap.

52
00:03:34,020 --> 00:03:40,560
So t optional is a great option when you just want something that is essentially nullable but not necessarily

53
00:03:40,560 --> 00:03:41,190
a pointer.

54
00:03:41,190 --> 00:03:46,050
So were going to be using teh optional for our selected index.

55
00:03:46,080 --> 00:03:48,960
Let's go ahead and implement that in Visual Studio.

56
00:03:49,080 --> 00:03:57,030
So I'm going to set up a index in the main menu dot H and go to do it right at the bottom and we're

57
00:03:57,030 --> 00:03:58,110
going to have a.

58
00:03:58,170 --> 00:03:59,400
Optional.

59
00:03:59,400 --> 00:04:01,740
And what types is it going to be it's going to be a u you int.

60
00:04:01,740 --> 00:04:02,660
32.

61
00:04:02,670 --> 00:04:09,130
I don't need more than a 32 bit integer and I don't need it to have sign doesn't need to be negative

62
00:04:09,150 --> 00:04:14,500
so it's going to be a new int and I'm going to call it the selected index now.

63
00:04:14,520 --> 00:04:20,890
Note here that I could use an integer with a negative value and not worry with the T.

64
00:04:20,940 --> 00:04:26,490
Optional which I've misspelt because then I could use more negative numbers to say that the index is

65
00:04:26,490 --> 00:04:31,590
not set but obviously there are more than one negative number and it doesn't really protect us because

66
00:04:31,590 --> 00:04:33,330
there's no function like getting value.

67
00:04:33,330 --> 00:04:35,720
That reminds us that this could be null.

68
00:04:35,730 --> 00:04:40,680
The nice thing about t optional is that it really does remind you that the value you are getting might

69
00:04:40,680 --> 00:04:44,840
be a null value might not be set and in which case would be invalid.

70
00:04:44,880 --> 00:04:47,840
So I like using teh optional you can obviously not use it.

71
00:04:47,850 --> 00:04:51,390
If you don't feel comfortable using it and you can use a negative number to represent something that

72
00:04:51,390 --> 00:04:52,410
is unset.

73
00:04:52,620 --> 00:04:56,310
But if you want to try to be optional go ahead and try it.

74
00:04:56,310 --> 00:05:00,700
Next up we are going to set up a server row.

75
00:05:01,080 --> 00:05:03,870
No we're not I beg your pardon we're going to have to set a set up for.

76
00:05:03,950 --> 00:05:09,050
Selected index first because we want it to be set from the server row and then we're going to need to

77
00:05:09,050 --> 00:05:13,610
get the server row to have pointers up so it can set it basically.

78
00:05:13,610 --> 00:05:17,640
So first off let's create that public method for setting it so it's going to be void.

79
00:05:17,900 --> 00:05:20,350
Select index.

80
00:05:22,130 --> 00:05:24,070
And it is going to take a new int.

81
00:05:24,140 --> 00:05:29,710
32 doesn't need to be optional here because we could have a reset index if we need that later on.

82
00:05:29,930 --> 00:05:34,080
But for now is just going to give it the number it wants it to set to.

83
00:05:34,310 --> 00:05:38,120
So that's going to be the index and that should do the trick.

84
00:05:38,120 --> 00:05:44,210
I'm going to go over into the C plus bus and implement that I'm going to implement it between sets up

85
00:05:44,250 --> 00:05:50,560
a list and join server because I think chronologically that's about where it's going to happen.

86
00:05:50,750 --> 00:05:55,120
I'm going to namespace it and implement its body as we always do.

87
00:05:56,060 --> 00:06:01,760
Nothing new here and I'm going to set these selected index.

88
00:06:02,330 --> 00:06:03,980
Equal to index.

89
00:06:03,980 --> 00:06:07,330
Now noticed that I can just set it like this very much.

90
00:06:07,400 --> 00:06:11,810
Well no actually like a pointer in this case because we don't have to dereference it to set it.

91
00:06:11,810 --> 00:06:19,310
That's because the T optional has overloads for the equal assignment operator so it's an overlive overloaded

92
00:06:19,310 --> 00:06:24,680
assignment which is basically putting B you 32 in the box and saying that it is set.

93
00:06:24,860 --> 00:06:25,840
So that's great.

94
00:06:25,850 --> 00:06:27,530
We can just use it very simply.

95
00:06:27,530 --> 00:06:32,330
Setting is very easy it's the getting that we have to be cautious about because it might be null.

96
00:06:32,780 --> 00:06:35,910
Okay so we set it let's go ahead and print it.

97
00:06:35,920 --> 00:06:38,600
What does it look like to print one of these T optionals.

98
00:06:38,660 --> 00:06:46,850
I'm going to print it out in the join server call-back and what we have to be careful of as I have said

99
00:06:46,880 --> 00:06:49,110
is whether it's set or not set.

100
00:06:49,110 --> 00:06:53,530
I I'm going to do an if statement were going to say selected index.

101
00:06:54,240 --> 00:07:01,650
Dot is set which you'll find on the documentation page and if it is set then I'm going to do a u e underscore

102
00:07:01,650 --> 00:07:04,010
or log log temp.

103
00:07:04,870 --> 00:07:05,730
Warning.

104
00:07:06,740 --> 00:07:09,910
And with some text saying.

105
00:07:11,240 --> 00:07:13,720
Selected index.

106
00:07:14,400 --> 00:07:15,810
Percent D.

107
00:07:16,260 --> 00:07:17,260
A digit.

108
00:07:18,880 --> 00:07:20,290
For a decimal rather.

109
00:07:20,290 --> 00:07:23,430
And then we're going to get the value of the selected index.

110
00:07:24,840 --> 00:07:27,500
Which is going to be done with.

111
00:07:28,250 --> 00:07:29,760
Get value.

112
00:07:31,250 --> 00:07:34,120
So now obviously this doesn't work if it is not set.

113
00:07:34,130 --> 00:07:36,730
But we are in an IF statement the just said that it was.

114
00:07:36,800 --> 00:07:44,390
So we are fairly safe and we can do in ELT's and on the in the else we are going to do a ewy Log that

115
00:07:44,390 --> 00:07:47,900
says selected index not set.

116
00:07:50,440 --> 00:07:57,580
Now what would you expect to come back if we run this now or let's remove just that item from the log

117
00:07:57,580 --> 00:08:02,740
message that we don't need go ahead build them all tested out the build succeeded Let's hop head on

118
00:08:02,800 --> 00:08:08,380
into unreel and restart the game go to and join menu populate the join menu and you can see that it

119
00:08:08,380 --> 00:08:16,000
says a selected index is indeed not set because we have not yet called set and set were set index select

120
00:08:16,600 --> 00:08:18,780
select index that's the one select index.

121
00:08:18,910 --> 00:08:25,360
We have called that we are going to want to call this from our server row when a button is pressed So

122
00:08:25,690 --> 00:08:28,640
let's set up our server roads to be able to call up.

123
00:08:29,480 --> 00:08:34,520
We are going to do that from the head of aren't going to add a public method called set up.

124
00:08:34,610 --> 00:08:36,020
It's going to be void.

125
00:08:36,640 --> 00:08:37,400
Set up.

126
00:08:38,290 --> 00:08:44,290
And then we are going to have it's going to need a pointer basically to the main menu class so it's

127
00:08:44,290 --> 00:08:45,870
going to be for declaration here.

128
00:08:45,880 --> 00:08:56,080
You mean menu pointer and I'll call this parent because it's the owning menu essentially and then it's

129
00:08:56,080 --> 00:09:01,480
also going to want to know which index it is so that's you in 32 which is going to be index because

130
00:09:01,480 --> 00:09:07,000
it's going to need to call the parent don't need to call the method on the parent called select index

131
00:09:07,000 --> 00:09:09,640
and it's going to tell it which index it currently is.

132
00:09:09,640 --> 00:09:13,870
So we've got this set up I'm going to go into the key and implement this set up.

133
00:09:14,850 --> 00:09:19,470
Create the body copy the namespace from the head of file you server row.

134
00:09:21,330 --> 00:09:22,140
Count on colon.

135
00:09:22,200 --> 00:09:24,280
And that is now implement it.

136
00:09:24,360 --> 00:09:25,070
Okay.

137
00:09:25,230 --> 00:09:33,210
So all we can do now is we would be able to call up to the parent from within this class at least we

138
00:09:33,210 --> 00:09:34,760
have the information to do so.

139
00:09:35,190 --> 00:09:35,640
Okay.

140
00:09:35,760 --> 00:09:39,210
So we've got the information to do so what else do we need.

141
00:09:39,390 --> 00:09:45,140
Well we need to remember to set it up in the main key So where we've done so far created our role in

142
00:09:45,200 --> 00:09:46,630
set server list.

143
00:09:46,710 --> 00:09:51,500
We are going to do the ROE arrow set up.

144
00:09:52,980 --> 00:09:54,860
And it's going to pass a pointer to this.

145
00:09:54,900 --> 00:10:00,210
And the current index which we're going to have to create a for loop that basically is a range based

146
00:10:00,210 --> 00:10:02,940
for loop so it goes over the server names.

147
00:10:02,970 --> 00:10:07,790
So if we want to get an index i can keep a story separate to you in thirty two which I'm going to initialised

148
00:10:07,790 --> 00:10:13,680
to zero outside of the loop and then I'm going to use in our set up method and then after the set up

149
00:10:13,680 --> 00:10:18,540
method I'm going to increment and I'm going to use a pre increment he can read all about the difference

150
00:10:18,810 --> 00:10:21,610
between post increment and pre increment on the web.

151
00:10:21,630 --> 00:10:27,510
I'm not going to basically elaborate on this pre increment is slightly more efficient but really only

152
00:10:27,510 --> 00:10:29,330
slightly and it depends on your compiler.

153
00:10:29,640 --> 00:10:32,680
Okay so I am going to go ahead and do that.

154
00:10:32,710 --> 00:10:33,070
Great.

155
00:10:33,060 --> 00:10:36,150
The set up and just go check that it all compiles it should do.

156
00:10:36,270 --> 00:10:42,630
So let's move on to the next step which is actually setting up a new button and it's back on this server

157
00:10:42,630 --> 00:10:43,440
row.

158
00:10:43,620 --> 00:10:47,320
So I'm going to go over in to one real stop the game from playing.

159
00:10:47,340 --> 00:10:52,920
Go to my content browser open up the server row widget in blueprint which opens up on another screen

160
00:10:52,920 --> 00:10:54,360
for some reason with me.

161
00:10:54,360 --> 00:10:55,970
And here we are.

162
00:10:55,980 --> 00:11:03,210
I've got my server and I want to actually change it the screen size or sorry the desired size to custom

163
00:11:03,630 --> 00:11:08,820
where I can restart Gaelic to something that resembles more of a row and in fact what I'm going to do

164
00:11:08,820 --> 00:11:12,030
is I'm going to think it looks ugly without anything but the server names.

165
00:11:12,030 --> 00:11:14,700
I'm going to add in some mock stuff over on the right.

166
00:11:14,700 --> 00:11:19,280
Like the number of players on the server so I'm just going to do that by duplicate the text.

167
00:11:19,290 --> 00:11:20,430
I'm going to copy the text.

168
00:11:20,530 --> 00:11:27,030
I think the horizant box and paste the text in the horizontal box can change the text in the box to

169
00:11:27,030 --> 00:11:32,370
something that just like one out of two to indicate how many players there I didn't intend to have the

170
00:11:32,370 --> 00:11:36,980
hash there so I will remove the hash and then we can spaced this out with a widget.

171
00:11:36,990 --> 00:11:42,180
Call a spacer you can put the space between things in a horizontal box to add some space.

172
00:11:42,180 --> 00:11:48,140
You do need to select the spacer and select under the slot horizontal box slot you can select fill and

173
00:11:48,150 --> 00:11:50,940
that will fill it out so that it'll put it on the other side.

174
00:11:50,940 --> 00:11:55,920
If we go in hit play here and hit join you'll see this menu looks quite a lot better.

175
00:11:55,920 --> 00:12:01,860
It looks like it's intentionally a row of servers so I am going to close that back down again.

176
00:12:01,860 --> 00:12:06,090
And now I want to wrap this whole horizontal box inside a button so that you can click anywhere on this

177
00:12:06,090 --> 00:12:12,680
row to select it so I'm going to right click to a wrap with and I'm going to wrap it with a button.

178
00:12:12,730 --> 00:12:13,940
So I've got my button.

179
00:12:14,070 --> 00:12:18,420
You can see it's looking a bit funky it's looking like a button is wrapping it so I'm going to click

180
00:12:18,420 --> 00:12:19,730
on the horizontal box.

181
00:12:19,890 --> 00:12:25,700
Look at the slot buttons lot and I'm going horizontally and vertically fill it.

182
00:12:25,860 --> 00:12:30,720
So we are using all the space in the button and then I dont want it to look like a button song and select

183
00:12:30,720 --> 00:12:35,560
the button go to appearance and style and on in the normal section.

184
00:12:35,580 --> 00:12:38,920
I'm going to go into draw as and select draw as none.

185
00:12:39,150 --> 00:12:45,470
And I'm going to have to copy the normal style and paste it onto hovered and pressed so that it's a

186
00:12:45,600 --> 00:12:49,530
sensually eradicated any style from the button.

187
00:12:49,530 --> 00:12:55,470
So if I compile get hit play join and join again to see our test servers you can see that there's no

188
00:12:55,470 --> 00:13:00,270
hover and when I click there is no click other than it slightly moves the text which at least gives

189
00:13:00,270 --> 00:13:02,420
us some affordance so that's okay.

190
00:13:02,730 --> 00:13:07,800
Now in this lecture we aren't going to worry about making sure that the text is highlighted when we

191
00:13:07,800 --> 00:13:12,990
click on it because that's going to add a bit more time and I really want to get back to doing more

192
00:13:12,990 --> 00:13:13,950
multiplayer stuff.

193
00:13:13,950 --> 00:13:15,690
We're going to polish that off don't worry.

194
00:13:15,690 --> 00:13:17,850
In later in later lectures.

195
00:13:18,150 --> 00:13:24,420
Okay so the next step is for you to set the selected index that we have already set up.

196
00:13:24,450 --> 00:13:29,910
It's just hooking up the bits in between now basically the way you're going to do this is you're going

197
00:13:29,910 --> 00:13:35,340
to handle the button call with created a button you're gonna need to bind it handle it's call back and

198
00:13:35,340 --> 00:13:40,440
call the selected index on the main menu we've got the point and got the index so all the information

199
00:13:40,440 --> 00:13:42,590
for it you just need to make that happen.

200
00:13:43,020 --> 00:13:48,550
Then I want you to test that the printed value is actually set by hitting the join button.

201
00:13:48,560 --> 00:13:51,560
So pause a video and have a go at this challenge.

202
00:13:52,830 --> 00:13:55,600
Okay welcome back we're going to dive right in with this.

203
00:13:55,600 --> 00:14:00,250
So the first thing to do is go into our server row and bind that button.

204
00:14:00,270 --> 00:14:09,110
So I'm going to copy and paste the binding of the you text block and I am going to make that private

205
00:14:09,120 --> 00:14:14,700
because we don't want it called from the outside we're going to be doing the binding in the Servat row

206
00:14:14,720 --> 00:14:17,960
s.p it's going to be a new button.

207
00:14:18,240 --> 00:14:22,610
In this case and I'm going to call it as such I'm going to call it the row button.

208
00:14:23,360 --> 00:14:25,860
And this I'm going to copy and take over.

209
00:14:25,880 --> 00:14:27,710
Well that's first that the build off.

210
00:14:27,710 --> 00:14:35,480
Going to take it over in to the unreel editor and I'm going to rename the button to row button which

211
00:14:35,480 --> 00:14:37,950
should allow it to bind correctly.

212
00:14:38,030 --> 00:14:40,610
We'll see that when it is finished building.

213
00:14:40,640 --> 00:14:43,280
Okay so we have a row button now in set up.

214
00:14:43,280 --> 00:14:48,950
Well actually we're going need a function a u function to handle the On Click event of you button.

215
00:14:48,950 --> 00:14:50,740
So I'm going to create a new function.

216
00:14:51,870 --> 00:14:54,230
It does not need a return type.

217
00:14:54,600 --> 00:14:59,840
I believe you can check that with the documentation of course on clicked.

218
00:15:01,040 --> 00:15:04,210
Just like the handle for you button.

219
00:15:04,270 --> 00:15:08,840
What I'm going to call it and I'm going to go ahead and implement this over in the C plus plus where

220
00:15:08,870 --> 00:15:10,680
I will add a namespace.

221
00:15:11,530 --> 00:15:13,980
And I will add a body.

222
00:15:15,340 --> 00:15:22,170
Now we are going to want to hook up this call-back So I'm going to get a row button.

223
00:15:23,470 --> 00:15:24,670
And arrow.

224
00:15:24,790 --> 00:15:27,950
And I'm going to do on click it.

225
00:15:28,090 --> 00:15:31,720
We don't have the header file for Button So I'm going to go and include.

226
00:15:32,670 --> 00:15:37,070
The component components forward slash button.

227
00:15:37,080 --> 00:15:46,310
Dot H like so now on click it should work will have on clicked add dynamic and then auto complete gets

228
00:15:46,310 --> 00:15:48,950
my way so undo the auto complete.

229
00:15:48,950 --> 00:15:52,010
Going to add dynamic to this.

230
00:15:53,320 --> 00:15:58,290
And then I need to get the address of on clicked so I am going to do that.

231
00:15:59,010 --> 00:16:03,830
With the address of operator and the fully qualified name of honour clicked some come at the end of

232
00:16:03,830 --> 00:16:05,750
the line that should do the trick.

233
00:16:06,080 --> 00:16:07,560
Okay so that's great.

234
00:16:07,570 --> 00:16:09,690
I'm going to set that off building as well.

235
00:16:09,950 --> 00:16:15,400
But even on clicked we need to call the parent with the index so we're going to need to store the parent

236
00:16:15,470 --> 00:16:20,150
index as private variables are going to do that in the header.

237
00:16:20,210 --> 00:16:28,260
I'm going to stick that under our ROE button and I am going to see put them on separate lines at least.

238
00:16:29,870 --> 00:16:35,000
And I am going to make that parent the you main menu parent.

239
00:16:35,000 --> 00:16:41,270
I am going to pay you property so that it is properly handled by the garbage collection system and we

240
00:16:41,270 --> 00:16:44,240
won't get it won't go away when we don't want it to.

241
00:16:44,560 --> 00:16:49,070
Okay so we've got the parent point we've got you in 32.

242
00:16:49,070 --> 00:16:52,380
Now let's go into our server ocp where we're going to call the parent.

243
00:16:53,160 --> 00:16:54,720
So parent our own.

244
00:16:54,850 --> 00:16:59,640
Now you'll notice isn't completing and we get an error because we've got an incomplete class type so

245
00:16:59,640 --> 00:17:04,350
we need to include our main menu so hash it out.

246
00:17:04,350 --> 00:17:09,360
Well if I can hit hash go include main menu.

247
00:17:09,390 --> 00:17:10,130
H.

248
00:17:10,960 --> 00:17:16,750
And then we should be able to get access to that so I'm going to do a a what I want select.

249
00:17:17,580 --> 00:17:18,640
Index.

250
00:17:19,820 --> 00:17:21,140
And I'm going to pass it.

251
00:17:21,350 --> 00:17:23,410
The index variable.

252
00:17:24,250 --> 00:17:27,940
But it mustn't forget that these two variables have actually been set in set up so I'm going to set

253
00:17:27,940 --> 00:17:31,190
them in set up parent he took equal to parent.

254
00:17:31,270 --> 00:17:34,900
That's not going to work so I'm going have to rename parent too in parent.

255
00:17:34,930 --> 00:17:37,880
So it's got to be parent equal to in parent.

256
00:17:38,410 --> 00:17:45,250
And then we're going to do the same thing with index index equal to in index and then we're going to

257
00:17:45,430 --> 00:17:50,080
copy and paste that variable name in to the class.

258
00:17:50,140 --> 00:17:52,460
Enter the function parameter.

259
00:17:53,270 --> 00:17:56,290
And I would say that pretty much does the should fit the bill.

260
00:17:56,290 --> 00:17:58,890
So let's go ahead and build and test it out.

261
00:17:59,680 --> 00:18:00,550
Build all good.

262
00:18:00,550 --> 00:18:04,410
Let's go over to unreel and hit play.

263
00:18:04,540 --> 00:18:07,420
Go join and hit join met method.

264
00:18:07,420 --> 00:18:08,540
More than once.

265
00:18:08,980 --> 00:18:13,510
And you can see we've got selected index not set so far.

266
00:18:13,510 --> 00:18:17,340
Now if I click on one of the rows and hit join they go select it.

267
00:18:17,340 --> 00:18:18,360
Next is zero.

268
00:18:18,370 --> 00:18:21,760
If I hit two then the selected index is one.

269
00:18:21,940 --> 00:18:23,140
So that's working just fine.

270
00:18:23,140 --> 00:18:29,470
Were able to select an index and access it from joint which means that we should be able to pass that

271
00:18:29,470 --> 00:18:33,200
back up to our game instance pat yourselves on the back.

272
00:18:33,200 --> 00:18:38,500
LS quite intense we did quite a bit of stuff in there we had TI optional and did a few architectural

273
00:18:38,500 --> 00:18:42,610
manoeuvres but well done Pat yourselves on the back and I'll see you in the next lecture a will actually

274
00:18:42,610 --> 00:18:43,760
join that game.
