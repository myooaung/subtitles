1
00:00:04,750 --> 00:00:12,740
Welcome this lecture is all about getting hold of nuns C++ classes from within C++ entirely.

2
00:00:12,830 --> 00:00:17,470
The whole premise of this is to be able to create a main menu which we're going to be doing in later

3
00:00:17,470 --> 00:00:18,340
lectures.

4
00:00:18,340 --> 00:00:25,580
But first of all to do that we need to get hold of a reference to the blueprint class from within C++

5
00:00:25,600 --> 00:00:30,100
and what you can see here in this log method it doesn't look particularly exciting but this log message

6
00:00:30,100 --> 00:00:37,600
comes entirely from C++ and it's telling us the name of the class that is found the w.p. main menu underscored.

7
00:00:37,870 --> 00:00:39,930
Now that is quite cool.

8
00:00:39,940 --> 00:00:45,790
And we're going to find out how we can do that and are was going to learn about the UMG module and how

9
00:00:45,790 --> 00:00:49,120
to include extra modules in C++.

10
00:00:49,120 --> 00:00:53,010
So let's dive in and dig into some of this exciting stuff.

11
00:00:53,670 --> 00:01:00,150
So ideally we'd be able to create and launch our menu entirely from within C++ so we don't have to rely

12
00:01:00,210 --> 00:01:06,450
on blueprints in order to do this and create most of our logic in C++ which is what we do.

13
00:01:07,100 --> 00:01:13,130
However the first step to this will be to actually be able to get hold of that blueprint class so that

14
00:01:13,130 --> 00:01:15,420
we can create an instance of it.

15
00:01:15,680 --> 00:01:20,540
Now to get hold of a blueprint class isn't as easy as a C++ class with a C plus plus class it's quite

16
00:01:20,540 --> 00:01:25,850
easy you just do an include and then you've got the class but with a blueprint What do we have to do.

17
00:01:25,850 --> 00:01:31,460
Well we have to actually use string reference it and get hold of the class a different way using something

18
00:01:31,490 --> 00:01:33,710
called an F Class.

19
00:01:33,750 --> 00:01:41,390
A find is a helper class that allows you to find the blueprint class by a string reference to it.

20
00:01:41,390 --> 00:01:45,100
Now you've probably seen some of these before.

21
00:01:45,230 --> 00:01:50,390
You can go and have a look at the documentation I dont find the documentation particularly useful for

22
00:01:50,420 --> 00:01:54,030
this class not off the bat like this it's quite hard to reason about.

23
00:01:54,230 --> 00:01:59,570
So often when you find documentation that's a bit terse and a bit hard to use I like to resort to looking

24
00:01:59,570 --> 00:02:03,160
through the engine code for examples of its use.

25
00:02:03,170 --> 00:02:04,770
So let's start off with that.

26
00:02:04,850 --> 00:02:10,520
Im going to I mean my project Im going to just search through the project actually first before I look

27
00:02:10,520 --> 00:02:18,130
through the entire solution and just look for instances or uses of the S class finder class.

28
00:02:18,140 --> 00:02:22,910
So let's go ahead and find that and sure enough there is an example in the puzzle platform game modot

29
00:02:22,920 --> 00:02:23,870
Copy.

30
00:02:24,170 --> 00:02:25,660
So let's take a look at that.

31
00:02:26,020 --> 00:02:26,330
Okay.

32
00:02:26,360 --> 00:02:28,220
So that's quite a lot going on in one line.

33
00:02:28,220 --> 00:02:35,840
Let's break it down and kind of read it from the middle out as you do with these C++ declarations so

34
00:02:35,870 --> 00:02:45,110
we can see that it is a player pawn BP class variable that we're creating here and we can see that it

35
00:02:45,110 --> 00:02:49,610
is type F Class finder.

36
00:02:50,350 --> 00:02:54,690
With the parameter or the template parameter a pawn.

37
00:02:54,700 --> 00:02:57,970
So it's an F Class finder of a pawn.

38
00:02:58,510 --> 00:03:05,670
And then we are constructing it using this text macros just basically just the way of creating an F

39
00:03:05,680 --> 00:03:07,040
string.

40
00:03:07,060 --> 00:03:10,670
And we are passing it an F string of the.

41
00:03:11,580 --> 00:03:14,310
The location of the third person character.

42
00:03:14,600 --> 00:03:21,170
So in summary and finally just one more thing is it that it's static which means that this variable

43
00:03:21,200 --> 00:03:24,390
exists only once in the program not once.

44
00:03:24,410 --> 00:03:31,190
For every instance of the game mode but just once full stop every game mode will share the same F Class

45
00:03:31,190 --> 00:03:34,210
finder because it doesn't matter.

46
00:03:34,220 --> 00:03:39,740
We're always going to say find the same class every single time because there is only one third person

47
00:03:39,770 --> 00:03:41,210
character asset.

48
00:03:41,350 --> 00:03:45,110
That's just a bit of an obscene zation it's not to my zation which I don't particularly care about so

49
00:03:45,110 --> 00:03:50,750
we're not going to be using that one I think it complicates reading this line.

50
00:03:50,750 --> 00:03:59,120
So basically what we've done is we've constructed and play a BP play a pawn BP Classic which is a variable

51
00:03:59,270 --> 00:04:08,850
that helps us find a blueprint class or a class that is a subclass of a pawn in our asset folder.

52
00:04:09,940 --> 00:04:17,410
Then with this variable we can go ahead and access it's class property which is actually the pointer

53
00:04:17,440 --> 00:04:24,670
to that class object that we can then later use to instantiate and so on and we can do things like get

54
00:04:24,730 --> 00:04:26,940
its name get its name.

55
00:04:29,650 --> 00:04:35,410
So let's see if we can try and apply the use of the F Class finder to a class of our own.

56
00:04:35,470 --> 00:04:43,360
Let's go over to the unreel editor and hop into our content browser and go up to the top of content

57
00:04:43,390 --> 00:04:49,510
and then navigate down into puzzle platforms and we'll notice that there is a BP straight away called

58
00:04:49,540 --> 00:04:53,240
BP platform trigger which we have created in the last section.

59
00:04:53,290 --> 00:05:01,300
So I'd like to go ahead and get a reference to that class and log out it's name so let's see how that

60
00:05:01,300 --> 00:05:07,460
would be done how to find the BP platform trigger.

61
00:05:07,450 --> 00:05:15,850
So let's go ahead and copy everything from the game mode C P P from after static until the end of that

62
00:05:15,850 --> 00:05:17,260
first line.

63
00:05:18,800 --> 00:05:20,770
Or semicolon.

64
00:05:20,770 --> 00:05:26,230
And I'm going to go in to my game instance because this is I think is the logical place to be spawning

65
00:05:26,550 --> 00:05:34,420
and creating new eyes so that's where we're going to start and the F Class Finder has to be done inside

66
00:05:34,630 --> 00:05:41,020
the constructor you can tell because well it's a subclass it's in the name space construct help helpers

67
00:05:41,020 --> 00:05:45,010
so that's kind of an indication that it has to be done within the construct.

68
00:05:45,790 --> 00:05:48,040
And if you do elsewhere it will give you errors.

69
00:05:48,040 --> 00:05:52,330
So I'm going to replace that log that we have in our construct in fact no longer a just the X. I'm going

70
00:05:52,330 --> 00:05:58,720
to want to use the log later so Im going to paste in what I just copied and youll see there are a couple

71
00:05:58,720 --> 00:06:00,440
of errors off the bat.

72
00:06:00,520 --> 00:06:02,950
First off squiggly under construct to help us.

73
00:06:02,950 --> 00:06:04,890
The reason for that is I dont have the right include.

74
00:06:04,900 --> 00:06:08,590
Lets go back into the s.p. Files simple and find the right include.

75
00:06:09,090 --> 00:06:11,110
Can you see the right include.

76
00:06:11,110 --> 00:06:15,720
Well online 5 there is the e.u. object construct to help us that's the one.

77
00:06:15,720 --> 00:06:21,150
Everything else there is from the project so it wouldn't make sense to go back to the game and see people

78
00:06:21,200 --> 00:06:23,160
and I'm going to paste it underneath my engine.

79
00:06:23,160 --> 00:06:29,070
I'm keeping the engine in close together vs. the project includes which are on a site separated by a

80
00:06:29,070 --> 00:06:29,920
blank line.

81
00:06:31,240 --> 00:06:32,580
So I've got my construct to help.

82
00:06:32,590 --> 00:06:34,090
Now there's no squiggly.

83
00:06:34,270 --> 00:06:36,240
It's finding an a pawn.

84
00:06:36,250 --> 00:06:38,400
So what time do I want to find.

85
00:06:38,410 --> 00:06:39,250
Not a pawn.

86
00:06:39,250 --> 00:06:42,260
What I want to find is a platform trigger.

87
00:06:42,390 --> 00:06:48,700
Now obviously that's not included yet so let's go ahead and include B.

88
00:06:49,410 --> 00:06:50,030
Platform.

89
00:06:50,040 --> 00:06:51,100
Trigger.

90
00:06:51,160 --> 00:06:53,360
Dot H like so.

91
00:06:53,730 --> 00:06:59,740
And that means that now I have access to an a platform trigger.

92
00:07:00,180 --> 00:07:04,890
So we're saying that we're trying to find a class that is a subclass of the a platform trigger.

93
00:07:04,890 --> 00:07:07,530
Now let's rename the class finder.

94
00:07:08,040 --> 00:07:11,630
I'm going to call it platform trigger BP class.

95
00:07:13,270 --> 00:07:13,680
Okay.

96
00:07:13,690 --> 00:07:18,690
And then we're going to want to put in the right text reference to this BP class.

97
00:07:18,700 --> 00:07:26,860
Let's go back over and with our content browser in the B class selected let's write quick and copy reference.

98
00:07:27,630 --> 00:07:28,930
Back into visual studio.

99
00:07:29,070 --> 00:07:34,880
We can paste that reference in place of this text but we will need to remove a few bits.

100
00:07:34,890 --> 00:07:40,740
Basically everything from the blueprint to the single quote is going to be removed and everything from

101
00:07:40,740 --> 00:07:46,830
the dot at the end to the single quote is going to be removed so that we just end up with a forward

102
00:07:46,830 --> 00:07:52,490
slash game forwards that puzzle platform towards that BP platform trigger fairly straightforward.

103
00:07:52,930 --> 00:07:59,220
Okay so we've got hold of our BP platform trigger class hopefully all we need to do is do a null check

104
00:07:59,310 --> 00:08:03,360
of the class in case we didn't actually find the class at all.

105
00:08:03,360 --> 00:08:04,640
We can do this with.

106
00:08:04,680 --> 00:08:10,600
I've got my no read macro which will fill out so Im going to do a platform.

107
00:08:11,780 --> 00:08:14,920
Trigga BP class.

108
00:08:15,620 --> 00:08:16,550
Daughter class.

109
00:08:16,550 --> 00:08:21,960
Because its the dot class property which returns us the actual class that it found.

110
00:08:21,990 --> 00:08:25,650
And so that's going to return early if and trigger an error.

111
00:08:25,670 --> 00:08:32,210
If we've got null in that class which means that now it's safe to use that class to get hold of the

112
00:08:32,210 --> 00:08:38,360
name which is why I wanted to in the log message so I'm going to say found class in this log message.

113
00:08:40,060 --> 00:08:41,060
Percent s.

114
00:08:41,110 --> 00:08:47,790
And then at the end we give an extra argument for the class which is going to be platform trigger BP

115
00:08:47,800 --> 00:08:50,510
class declasse class which I copied.

116
00:08:50,620 --> 00:08:51,050
Arrow.

117
00:08:51,050 --> 00:08:57,130
Operator because it's a pointer that we get returned and we can do get name which is getting the name

118
00:08:57,190 --> 00:08:58,030
of the class.

119
00:08:58,030 --> 00:09:03,790
Basically it's a pointer to a class object which we can later use to instantiate other objects create

120
00:09:03,790 --> 00:09:05,410
some object and things like that.

121
00:09:05,530 --> 00:09:10,380
But we can also do some things on that class object itself such as get the name of the class that we've

122
00:09:10,380 --> 00:09:11,390
found.

123
00:09:11,500 --> 00:09:16,360
And finally we're gonna have to put a star in front of all of that argument because we want to get the

124
00:09:16,390 --> 00:09:19,280
in a string as we always do with log messages.

125
00:09:19,360 --> 00:09:26,560
Let's go ahead and build and see whether we've successfully got hold of the class by seeing whether

126
00:09:26,560 --> 00:09:28,650
it prints out the right class name.

127
00:09:28,900 --> 00:09:30,540
So my builder has succeeded.

128
00:09:30,540 --> 00:09:36,850
Let's go over into one real and just take a look at the logs straight away because it's in the construct.

129
00:09:36,910 --> 00:09:41,130
So it's running straight away in without even having to play.

130
00:09:41,170 --> 00:09:44,820
You'll notice that we found a class and it's the BP platform trigger.

131
00:09:44,850 --> 00:09:45,630
See.

132
00:09:45,700 --> 00:09:46,360
Fantastic.

133
00:09:46,360 --> 00:09:52,720
So it's found the right class and it's found its name and we've done all of that entirely in C++ So

134
00:09:52,720 --> 00:09:54,940
that's great great news.

135
00:09:54,940 --> 00:10:01,030
Now there is going to be one more hurdle in the road when trying to access the widget we go and have

136
00:10:01,030 --> 00:10:06,160
a look at our widget go up to the content browser to the root of content down to the menu system and

137
00:10:06,160 --> 00:10:10,100
select the WP main menu and hover over it.

138
00:10:10,100 --> 00:10:17,170
You'll see that it has a native parent class of you mge you don't use a widget.

139
00:10:17,170 --> 00:10:22,630
Now the problem is the UMG module isn't by default accessible in C++.

140
00:10:22,630 --> 00:10:29,320
Now going to give you a challenge in a minute to try getting hold of the UMG use a widget without actually

141
00:10:29,320 --> 00:10:30,650
doing these following steps.

142
00:10:30,790 --> 00:10:35,360
But first of all we're going to have to do is include the UMG module.

143
00:10:35,590 --> 00:10:41,230
So let's go into visual studio and we're going to open a very special file in our project which will

144
00:10:41,230 --> 00:10:46,410
probably haven't touched before you haven't touched before which is the puzzle platforms stop builder.

145
00:10:46,460 --> 00:10:52,230
So yes this is the build configuration for a project that's fairly straightforward here.

146
00:10:52,240 --> 00:10:59,860
But one of the key things here is online 11 for me the public dependency module names and this is a

147
00:10:59,950 --> 00:11:05,920
list of modules in the unreal engine that our product depends on.

148
00:11:05,920 --> 00:11:08,980
You can see it depends on core depends on core you object.

149
00:11:08,980 --> 00:11:10,390
It depends on engine.

150
00:11:10,540 --> 00:11:13,550
It depends on input core and head mounted display.

151
00:11:13,780 --> 00:11:19,690
Now a head mounted display is there because the default third person project is VR enabled.

152
00:11:19,690 --> 00:11:24,040
We're not going to remove any of that code just yet so let's leave the head mounted display as it is

153
00:11:24,760 --> 00:11:31,030
but an extra module we have to add in here at the end so comma open quote is it you.

154
00:11:31,060 --> 00:11:32,100
M G.

155
00:11:32,230 --> 00:11:40,500
The unreel graphics library so we're going to close quotes there and that should update our build configuration.

156
00:11:40,510 --> 00:11:44,760
Now to properly update our build configuration and get the right auto complete.

157
00:11:44,770 --> 00:11:47,140
We closed down our project.

158
00:11:48,020 --> 00:11:56,180
We need to go over to Explorer or find a right click on a new project and regenerate the visual studio

159
00:11:56,180 --> 00:11:59,540
project file which is under services for Mac users.

160
00:11:59,600 --> 00:12:04,010
Once we regenerate the project files then auto complete and Visual Studio will be able to work a lot

161
00:12:04,010 --> 00:12:04,630
better.

162
00:12:04,850 --> 00:12:07,030
So let's open up the solution once more.

163
00:12:08,170 --> 00:12:15,380
And the final step once we have opened up visual studio is going to be having to include the user widget

164
00:12:15,530 --> 00:12:16,120
class.

165
00:12:16,120 --> 00:12:18,620
Now this has a bit of an interesting includes.

166
00:12:18,650 --> 00:12:21,260
Let's go to the game instance key.

167
00:12:21,760 --> 00:12:23,530
Some reason it's asking me about line endings.

168
00:12:23,530 --> 00:12:30,970
I'm just going to say yes and then we are going to include the following class.

169
00:12:30,970 --> 00:12:34,830
In fact let's have a little look through the documentation for you with it.

170
00:12:35,020 --> 00:12:40,450
If you google for user widget you'll find that the unreal documentation that the class actually called

171
00:12:40,450 --> 00:12:43,590
you use a widget So that's what we've found here.

172
00:12:43,960 --> 00:12:51,250
And if I go ahead and scroll down to the bottom and then we will see that we're actually looking for

173
00:12:51,550 --> 00:12:54,290
this header runtime you injury public blueprint.

174
00:12:54,310 --> 00:12:58,890
Use a widget and we can just go ahead and select blueprint use a widget.

175
00:12:58,940 --> 00:13:01,050
H That is the Include that we need.

176
00:13:01,200 --> 00:13:03,050
Let's go back into visual studio.

177
00:13:03,070 --> 00:13:08,110
You can try doing it without the include unfortunately visual studio auto complete will mislead you

178
00:13:08,110 --> 00:13:11,180
and think that you use a widget is a class that's available.

179
00:13:11,290 --> 00:13:17,960
It's not unless you do include this include and you'll get some errors later down the line.

180
00:13:17,980 --> 00:13:23,430
But that's okay you can always try via error first and see whether that works out.

181
00:13:24,190 --> 00:13:29,500
So let's go back in to the Include and include our blueprint.

182
00:13:29,500 --> 00:13:30,070
Use a widget.

183
00:13:30,070 --> 00:13:37,870
This now means that our class finder could take for example a user widget and it wouldn't complain and

184
00:13:37,870 --> 00:13:40,440
it wouldn't give us build errors at the end.

185
00:13:40,630 --> 00:13:43,290
But that is for you to do.

186
00:13:43,330 --> 00:13:48,450
In your upcoming challenge to save our menu class.

187
00:13:50,470 --> 00:13:57,220
So to say the menu class what is the challenge going to be to create a menu menu class field a private

188
00:13:57,220 --> 00:14:00,820
variable on the class called menu class.

189
00:14:00,850 --> 00:14:07,450
You are going to have to find out how to use their class finder to save to it to get the string reference

190
00:14:07,510 --> 00:14:15,710
to add W. BP blueprint class and save the class that we find into the menu class field.

191
00:14:15,760 --> 00:14:19,600
You have to find out what type the menu class field should be.

192
00:14:19,600 --> 00:14:23,220
You can use the F Class find a documentation to do that.

193
00:14:24,170 --> 00:14:30,140
And I want you to log out the name that you found into it and as a bonus I would like you to try building

194
00:14:30,140 --> 00:14:32,050
without the u m g module included.

195
00:14:32,060 --> 00:14:37,760
Just so you can get a sense of what sort of error you get when you don't have the module dependencies

196
00:14:37,790 --> 00:14:40,190
because it's quite different to an include error.

197
00:14:40,190 --> 00:14:46,050
And I'd like you to see what that actually looks like so pause a video and have a go at this challenge.

198
00:14:48,090 --> 00:14:49,110
Okay welcome back.

199
00:14:49,110 --> 00:14:55,530
Let's dive right in with the challenge so I'm going to be searching for the user widget class as we

200
00:14:55,710 --> 00:14:57,750
have intimated already.

201
00:14:57,830 --> 00:15:08,100
We don't change the class find a name to be Instead the menu menu BP clas and I am going to save that

202
00:15:08,100 --> 00:15:10,620
to a private variable which I am about to create.

203
00:15:10,620 --> 00:15:11,600
So let's go to the game.

204
00:15:11,610 --> 00:15:16,490
Instance does H create a private section in the head a file.

205
00:15:18,140 --> 00:15:24,650
And it's going to be a menu class variable but what's its type going to be.

206
00:15:24,650 --> 00:15:29,990
Well you can find that out by looking at the documentation for F Class finder.

207
00:15:29,990 --> 00:15:36,650
As I already said and in F Class finder we have a variable called class which is what we've been using

208
00:15:36,650 --> 00:15:37,670
up till now.

209
00:15:37,730 --> 00:15:43,880
You click on that and you can see that the type of this is actually t subclass of and then t being the

210
00:15:43,880 --> 00:15:51,650
type that we have given as the parameter to an F Class so in our case if you use a widget so we can

211
00:15:51,650 --> 00:15:57,390
use that in game instance dot H we can do a T subclass of.

212
00:15:58,320 --> 00:16:00,500
And then have that.

213
00:16:02,300 --> 00:16:08,070
Brackets there and it's going to be a user widget but beware.

214
00:16:08,090 --> 00:16:11,870
We'll probably get some bill there as if we try and build it like this because we haven't gone.

215
00:16:11,870 --> 00:16:17,140
Include for user which at this point I'm going to forward declare it by putting class in front of its

216
00:16:17,140 --> 00:16:22,330
own class you use a widget will go back in to Game instance.

217
00:16:22,850 --> 00:16:29,770
Got to be PE menu class I'm going to copy that in to the null check going to remove the logging.

218
00:16:29,780 --> 00:16:34,070
At this stage because we don't want to do it there want to do it in in it.

219
00:16:34,430 --> 00:16:39,770
And then what I want to save to my menu class so it's going to be menu class.

220
00:16:39,770 --> 00:16:50,650
He calls it's going to be menu BP class Doc class to get hold of that t subclass object.

221
00:16:51,650 --> 00:16:55,140
In fact subclass is just something like a function.

222
00:16:55,160 --> 00:16:56,060
But four types.

223
00:16:56,060 --> 00:17:02,840
So what it does is it takes that you use a widget and says that this can be a type anything that that

224
00:17:02,840 --> 00:17:05,170
is a subclass of use a widget.

225
00:17:05,750 --> 00:17:11,010
Okay so now we've got hold of our menu class we can go ahead and edit the log in in it.

226
00:17:11,000 --> 00:17:15,490
I'm going to have it say something like found class.

227
00:17:16,850 --> 00:17:18,170
Percent S.

228
00:17:18,580 --> 00:17:23,650
And then give it the argument of star menu class.

229
00:17:24,390 --> 00:17:25,730
Arrow operator.

230
00:17:25,830 --> 00:17:29,550
And then it's going to be let's see.

231
00:17:29,760 --> 00:17:31,450
Get a name.

232
00:17:31,830 --> 00:17:35,840
Not get archetype get a name like autocomplete being overzealous there.

233
00:17:35,940 --> 00:17:40,060
And let's go ahead and build and see whether that works out for us.

234
00:17:40,120 --> 00:17:41,480
Hurray build success.

235
00:17:41,490 --> 00:17:45,010
Let's go over in that one real editor have a look at the logs.

236
00:17:45,120 --> 00:17:47,940
So it here will notice that there is an error.

237
00:17:47,940 --> 00:17:55,290
It's saying I failed to find the class because you're asking for basically something else you asking

238
00:17:55,290 --> 00:18:01,140
for a subclass that is not a subclass of you use a widget or you've given me a class that is not a subclass

239
00:18:01,140 --> 00:18:02,020
of you use Widget.

240
00:18:02,190 --> 00:18:07,410
Indeed that's because we forgot to update text reference so if we right click on the user widget in

241
00:18:07,410 --> 00:18:14,310
the content browser and then copy its reference then go back in to puzzle platforms and update this

242
00:18:14,340 --> 00:18:16,790
text reference to our platform trigger.

243
00:18:17,040 --> 00:18:24,030
Many of you probably spotted that I was going to make that mistake remove the Gump around it to make

244
00:18:24,030 --> 00:18:26,380
it look just like it was before so it's.

245
00:18:26,400 --> 00:18:31,870
GAME was left many system forwards lashed w.p. main menu and let's go ahead and build that slight change

246
00:18:31,870 --> 00:18:32,720
shouldn't take very long.

247
00:18:32,730 --> 00:18:34,790
Just a string the change.

248
00:18:35,900 --> 00:18:36,130
Now.

249
00:18:36,150 --> 00:18:38,060
Okay and let's go ahead and try that out.

250
00:18:38,060 --> 00:18:43,650
Go back into an output log and hopefully this time we shan't have any errors.

251
00:18:45,090 --> 00:18:48,940
So I think those errors were from before so I've gone ahead and cleared the logs.

252
00:18:49,080 --> 00:18:50,650
So let's go ahead and hit play.

253
00:18:50,670 --> 00:19:00,270
And sure enough we've got found class w w b main menu dasch underscores c so that as successfully found

254
00:19:00,270 --> 00:19:06,150
the correct class and kept it all the way from constructer until in it so we've shown that we can then

255
00:19:06,150 --> 00:19:12,750
use it later on to actually construct and create and set up this main menu so I'm really excited about

256
00:19:12,750 --> 00:19:12,930
that.

257
00:19:12,930 --> 00:19:17,560
That's quite cool though we've done all that within C++ without having to expose anything within blue

258
00:19:17,550 --> 00:19:18,330
print at all.

259
00:19:18,330 --> 00:19:20,330
In fact so very very cool.

260
00:19:20,340 --> 00:19:22,710
Now I'm going to leave the last bit of the challenge.

261
00:19:22,710 --> 00:19:28,260
The part about trying to build without you energy up to you because we're running out of time and we

262
00:19:28,260 --> 00:19:30,680
don't want to make this lecture too long.

263
00:19:30,690 --> 00:19:34,590
But you can definitely try taking out your energy from the module list and try rebuilding.

264
00:19:34,590 --> 00:19:41,310
See what error you get and just remember that error because if you ever need to use something that is

265
00:19:41,310 --> 00:19:46,170
in a different module and you forgot to include the module it's important to recognize what that error

266
00:19:46,170 --> 00:19:46,940
looks like.

267
00:19:47,100 --> 00:19:48,510
Okay patch cells on the back.

268
00:19:48,510 --> 00:19:53,940
We've managed to find the menu class from entirely within C plus plus using the class binders.

269
00:19:53,940 --> 00:19:56,270
Great stuff and I'll see you in the next lecture.
