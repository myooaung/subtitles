1
00:00:04,960 --> 00:00:06,810
Hello and welcome in this lecture.

2
00:00:06,820 --> 00:00:14,050
We are going to be looking at how we can create our own movement mechanics using a very rudimentary

3
00:00:14,050 --> 00:00:18,760
physics engine where we're going to simulate some forces and some accelerations going to revise all

4
00:00:18,760 --> 00:00:21,130
that Forces and acceleration stuff from scratch.

5
00:00:21,130 --> 00:00:26,020
So don't worry if you're very rusty on your physics and I am going to end up with something that can

6
00:00:26,050 --> 00:00:33,960
accelerate the car like so and can decelerate the car like so or very close to hitting the wall hand

7
00:00:34,010 --> 00:00:37,570
and go on and decelerate back in the opposite direction as well.

8
00:00:37,820 --> 00:00:45,100
Okay so let's dive in and see how we can achieve that kind of behaviour with the pseudo physics engine.

9
00:00:45,130 --> 00:00:46,640
Let's dive in and find.

10
00:00:47,970 --> 00:00:52,470
So our car is currently a little bit unrealistic as you can see going backwards and forwards.

11
00:00:52,560 --> 00:00:57,480
It instantly accelerates and reaches its acceleration maximum and doesn't go anywhere from there.

12
00:00:57,510 --> 00:01:00,600
We want to make this a little bit more realistic and make it more realistic.

13
00:01:00,600 --> 00:01:06,750
We need to get a bit more of an understanding of physics and how physics would actually make this work.

14
00:01:06,750 --> 00:01:11,460
So let's start off by a quick revision of forces in physics and how they work now.

15
00:01:11,560 --> 00:01:17,150
For some of you this you may know very very well off by heart but doesn't hurt to do a bit revision.

16
00:01:17,190 --> 00:01:20,090
So let's have a talk about how things move here.

17
00:01:20,100 --> 00:01:25,260
We've got a nice little porsh and we're going to be attempting to make this port move by putting our

18
00:01:25,260 --> 00:01:27,380
foot down on the accelerator.

19
00:01:27,450 --> 00:01:33,060
So what will happen when we put our foot down on the accelerator is that the engine will create a force

20
00:01:33,870 --> 00:01:36,840
and we denote forces by arrows just like vectors.

21
00:01:36,840 --> 00:01:40,620
They are they have direction and they have magnitude.

22
00:01:40,620 --> 00:01:48,110
So this is a vector going forwards and it has a certain magnitude indicated by the size of this arrow.

23
00:01:48,420 --> 00:01:53,720
So this is a force but the force itself does not cause the movement.

24
00:01:53,730 --> 00:01:55,940
The force is the first step in that chain.

25
00:01:55,980 --> 00:02:03,240
The next thing is that the force will create an acceleration in the car and the acceleration will create

26
00:02:03,480 --> 00:02:07,240
a velocity which it then moves the car.

27
00:02:07,500 --> 00:02:14,400
So was the relationship between our force and which were gonna use call F and our acceleration which

28
00:02:14,400 --> 00:02:16,950
we can call a while as a simple relationship.

29
00:02:16,950 --> 00:02:20,180
It's called F equals M times a.

30
00:02:20,340 --> 00:02:27,150
So F being the force M being the mass of the object moving and a being the acceleration that comes out

31
00:02:27,150 --> 00:02:27,890
of it.

32
00:02:28,140 --> 00:02:31,460
Obviously the acceleration coming out of it in this equation.

33
00:02:31,470 --> 00:02:37,450
It kind of is a bit topsy turvy so we can rearrange the equation to say that acceleration is equal to

34
00:02:37,450 --> 00:02:40,210
a force divided by the mass.

35
00:02:40,290 --> 00:02:44,940
So the heavier your object is the smaller the acceleration will be from the same force.

36
00:02:44,940 --> 00:02:49,140
It's harder to get something moving if it is very heavy.

37
00:02:49,140 --> 00:02:50,180
That obviously makes sense.

38
00:02:50,190 --> 00:02:53,520
You can easily push a feather very very hard to push a tank.

39
00:02:53,520 --> 00:02:59,010
You need require more force to get the same acceleration which is basically what these two equations

40
00:02:59,070 --> 00:02:59,750
say.

41
00:03:00,120 --> 00:03:04,970
So how does then the acceleration translate into an actual movement of the car.

42
00:03:05,140 --> 00:03:07,790
Well we've already said the following.

43
00:03:07,800 --> 00:03:20,130
We said that delta x over Delta T equals V where X is the movement then the location in space v is the

44
00:03:20,160 --> 00:03:20,960
velocity.

45
00:03:20,980 --> 00:03:27,150
Now you may not recognize it in this particular form because if we rearrange the equation what we get

46
00:03:27,210 --> 00:03:28,980
is that the Delta X..

47
00:03:29,040 --> 00:03:32,360
Let's actually have a look at our code because we've got this written into our code.

48
00:03:32,460 --> 00:03:39,870
We're saying that the translation also known as delta x is equal to the velocity multiplied by Delta

49
00:03:39,870 --> 00:03:40,850
time.

50
00:03:41,130 --> 00:03:42,590
So that's exactly what we've got here.

51
00:03:42,600 --> 00:03:43,330
Got velocity.

52
00:03:43,350 --> 00:03:45,770
And then we're adjusting for the units.

53
00:03:45,960 --> 00:03:47,690
And we've got a delta time.

54
00:03:47,820 --> 00:03:53,880
So this is exactly the same equation as the definition of velocity definition of velocity being that

55
00:03:53,970 --> 00:04:00,360
the small change in x So the translation divided by the time it took for that translation to happen

56
00:04:00,780 --> 00:04:02,460
is equal to the velocity.

57
00:04:02,550 --> 00:04:07,210
Now acceleration is defined in exactly the same way over velocity.

58
00:04:07,230 --> 00:04:13,620
So we're saying that the change in the velocity divided by the time it took for that change to happen

59
00:04:13,950 --> 00:04:15,850
is that the acceleration.

60
00:04:15,900 --> 00:04:16,980
So Delta V.

61
00:04:16,980 --> 00:04:23,790
Divide by Delta T equals acceleration and so the way we get an acceleration is exactly the same as we

62
00:04:23,790 --> 00:04:24,970
got our bill out.

63
00:04:25,010 --> 00:04:32,670
Our Delta sorry the way we get our delta v is exactly the same as we got our Delta X. We do Delta B

64
00:04:32,670 --> 00:04:36,420
is equal to the acceleration multiplied by Delta time.

65
00:04:36,730 --> 00:04:39,680
Okay so that all seems to make sense.

66
00:04:39,690 --> 00:04:43,240
But how does actually work when we start to translate things into code.

67
00:04:43,410 --> 00:04:46,310
Let's have a go at translating these into code.

68
00:04:46,650 --> 00:04:53,990
I'm going to assume that in tic we start off with a force so it's going to be an F vector force that

69
00:04:54,030 --> 00:04:56,860
obviously set to 0 by default but we are going to be.

70
00:04:56,930 --> 00:05:00,990
That's gonna be your challenge to make sure that is set to something meaningful and in the meantime

71
00:05:01,050 --> 00:05:04,300
will talk about this calculation that we need to do.

72
00:05:04,710 --> 00:05:08,740
So the first thing is from the force we want to get the acceleration.

73
00:05:08,910 --> 00:05:12,370
So we're going to have an F vector acceleration.

74
00:05:14,410 --> 00:05:20,950
And that's going to be equal to the force as we said divided by the mass of the object.

75
00:05:20,950 --> 00:05:25,010
Now the mass here a is not defined.

76
00:05:25,030 --> 00:05:26,080
How are we going to define it.

77
00:05:26,080 --> 00:05:31,480
Well we're going to go over into the dot h file and we're going to create ourselves a new property to

78
00:05:31,480 --> 00:05:34,030
define it so it's going to be your property.

79
00:05:35,320 --> 00:05:41,530
I'm going to make it an edit anywhere so that we can edit it both in the blueprint and the inspector.

80
00:05:41,530 --> 00:05:45,070
And it is going to be a float called mass.

81
00:05:45,910 --> 00:05:50,860
Because it is a real number so it can't be caught using a float and were going to give it a default

82
00:05:50,860 --> 00:05:54,170
value of one thousand.

83
00:05:54,220 --> 00:06:01,750
Which if we take the units to be kilogrammes is going to be about a metric ton so we can add a comment

84
00:06:01,750 --> 00:06:05,450
here just to make sure that it's clear what this mass property is.

85
00:06:05,460 --> 00:06:09,030
I'm going to call it the mass of the car.

86
00:06:10,690 --> 00:06:17,240
And I'm going to put in brackets that the unit is kg so that it's obvious to anybody who is using this.

87
00:06:17,440 --> 00:06:20,050
What size of number they should be putting in here.

88
00:06:20,050 --> 00:06:23,810
So this is a ton for a realistic car perhaps even quite a light car.

89
00:06:24,040 --> 00:06:29,930
And then we'll go over to C++ and that all seems to make sense now.

90
00:06:30,280 --> 00:06:35,410
Okay so we've got ourselves an acceleration but we have not got the velocity from that or we haven't

91
00:06:35,410 --> 00:06:39,070
got the change in velocity from that acceleration.

92
00:06:39,070 --> 00:06:44,740
So to get a change in velocity we need to do the acceleration.

93
00:06:46,310 --> 00:06:48,860
Multiplied by the delta time.

94
00:06:49,620 --> 00:06:56,970
Like so that's obviously a change in velocity what we've got here is velocity itself so to create a

95
00:06:56,970 --> 00:06:59,820
change we just need to add to velocity.

96
00:07:00,150 --> 00:07:03,090
So it's going to be velocity equals velocity.

97
00:07:04,000 --> 00:07:07,450
Plus acceleration times delta time.

98
00:07:07,660 --> 00:07:13,270
And that will work because if it's a negative acceleration then it's going to subtract from velocity

99
00:07:13,300 --> 00:07:17,350
because the addition sign Plus a negative will be a subtraction.

100
00:07:17,680 --> 00:07:17,940
OK.

101
00:07:17,980 --> 00:07:25,030
So that has allowed us to calculate the moving for the moving translation all the way from starting

102
00:07:25,060 --> 00:07:26,010
off with a force.

103
00:07:26,020 --> 00:07:27,550
And that's all physically based.

104
00:07:27,550 --> 00:07:32,080
So this should work pretty well once we have a realistic force coming in and that's going to be your

105
00:07:32,080 --> 00:07:36,150
challenge to provide the driving force and figure out how that's done.

106
00:07:36,160 --> 00:07:38,230
Let's have a look at that challenge definition.

107
00:07:38,530 --> 00:07:40,500
So provide the driving force.

108
00:07:40,500 --> 00:07:43,620
The main question here is where should it come from.

109
00:07:43,690 --> 00:07:48,250
What is the lever that you're going to pull that makes the driving force happen.

110
00:07:48,280 --> 00:07:50,070
What's the magnitude of that force going to be.

111
00:07:50,140 --> 00:07:55,450
All these questions make sure that it's configurable so that the size of the force can be configured

112
00:07:55,750 --> 00:07:58,700
in the editor and test it makes sure.

113
00:07:58,710 --> 00:08:02,400
But it works as you would expect both video and have a go.

114
00:08:04,180 --> 00:08:05,230
Okay welcome back.

115
00:08:05,230 --> 00:08:10,300
So let's go about providing that driving force you may have guessed it the driving force is going to

116
00:08:10,300 --> 00:08:14,260
come from move forward instead of setting the velocity directly.

117
00:08:14,260 --> 00:08:18,850
What I'm going do is I'm going to introduce a throttle variable where we can store the value of move

118
00:08:18,850 --> 00:08:23,310
forward this frame and we can then calculate the force in tick.

119
00:08:23,320 --> 00:08:29,970
So I'm going to go to my head a file and I am going to create a float called throttle.

120
00:08:31,020 --> 00:08:31,590
In here.

121
00:08:31,650 --> 00:08:37,780
And then that throttle value I'm going to set in our move forward.

122
00:08:37,830 --> 00:08:40,870
So it's going to be throttle equals value.

123
00:08:41,930 --> 00:08:42,710
Like so.

124
00:08:43,160 --> 00:08:44,600
And then what else do we need.

125
00:08:44,600 --> 00:08:51,320
We need another you property in here that allows us to define the driving force or the maximum driving

126
00:08:51,320 --> 00:08:56,430
force that when we've got the throttle fully down will be applied to the car.

127
00:08:56,570 --> 00:09:00,040
So I'm going to call it Max driving force.

128
00:09:02,870 --> 00:09:04,730
And it's going to be anywhere.

129
00:09:04,790 --> 00:09:06,770
It's going to be.

130
00:09:07,740 --> 00:09:09,610
Let me create a meaningful comment.

131
00:09:10,600 --> 00:09:14,610
So the force applied to the car when the throttle is fully down.

132
00:09:14,670 --> 00:09:17,070
Now what's the unit for this going to be.

133
00:09:17,080 --> 00:09:21,340
Well you may remember that the unit for forces is the Newton.

134
00:09:21,340 --> 00:09:26,070
So just like that in s are units standard units.

135
00:09:26,340 --> 00:09:27,510
So it's max driving force.

136
00:09:27,540 --> 00:09:30,660
Should it be a thousand let's ask ourselves that question.

137
00:09:30,660 --> 00:09:33,780
Well a typical very fast acceleration.

138
00:09:33,930 --> 00:09:39,430
In fact very very fast indeed is 10 meters per second per second.

139
00:09:39,430 --> 00:09:42,050
Remember that it is the delta time delta time.

140
00:09:42,060 --> 00:09:44,170
That's why we've got per second per second.

141
00:09:44,550 --> 00:09:46,870
Whereas velocity was just meters per second.

142
00:09:46,890 --> 00:09:52,560
So anyway the very fast acceleration is 10 meters per second in fact gravity's not even that fast but

143
00:09:52,560 --> 00:09:56,000
in games we typically are don't mind being a little unrealistic.

144
00:09:56,010 --> 00:10:00,110
So 10 meters per second per second is a good acceleration.

145
00:10:00,210 --> 00:10:07,440
If we want to achieve that with a metric ton which is a thousand kilograms we are going to have to have

146
00:10:07,660 --> 00:10:12,140
10000 Newtons because it is going to be.

147
00:10:13,520 --> 00:10:14,310
Ten thousand.

148
00:10:14,320 --> 00:10:18,450
Divided by 1000 gives us an acceleration of 10 Okay.

149
00:10:18,620 --> 00:10:23,450
So that's what I'm going to start off with a default driving force of let's go ahead and make sure that

150
00:10:23,450 --> 00:10:30,920
builds and go over into my C++ and I want to set our force to basically being that driving force.

151
00:10:30,980 --> 00:10:36,920
So it's going to be the driving force and that's the maximum driving force multiplied by the throttle

152
00:10:36,920 --> 00:10:37,380
value.

153
00:10:37,400 --> 00:10:41,450
Remember if your throttle is off it's going to be zero which means that we're going to have zero force

154
00:10:41,900 --> 00:10:49,490
which is perfectly fine and we're going to have a max force which is going to be as we said is going

155
00:10:49,490 --> 00:10:57,530
to be that thousand Newtons and then what we've got to do is have a direction to this Quand seekers

156
00:10:57,530 --> 00:11:01,130
at the moment it's got only a magnitude it's just two floats multiplied together.

157
00:11:01,130 --> 00:11:09,630
We need to add in some vector amount and to do that we do a Get active forward or actor forward vector

158
00:11:10,580 --> 00:11:16,580
because the driving force is going to be applied in the direction of the forward of the car or in the

159
00:11:16,580 --> 00:11:18,150
backwards if the throttle is negative.

160
00:11:18,170 --> 00:11:22,970
But using forward multiplied by a negative numbers is going to give you backwards that's why there is

161
00:11:22,970 --> 00:11:25,520
no get asked a backward vector.

162
00:11:25,820 --> 00:11:26,170
Okay.

163
00:11:26,210 --> 00:11:30,890
So that has built successfully I'm not sure whether incorporated my most recent changes are going to

164
00:11:30,890 --> 00:11:32,380
build one more time.

165
00:11:32,630 --> 00:11:33,700
So that was successful.

166
00:11:33,710 --> 00:11:38,180
Let's go over into the unreel editor and hit play and see if this is working.

167
00:11:38,180 --> 00:11:43,250
So now if I am holding down the accelerator you can see that it's going faster and faster and faster

168
00:11:43,250 --> 00:11:44,030
and faster.

169
00:11:44,240 --> 00:11:46,100
I'm passing through objects but that's okay.

170
00:11:46,100 --> 00:11:54,200
And if I hold down the back button so that as in the wac keys then I should be slowing down and going

171
00:11:54,200 --> 00:11:58,610
in the other direction I can't quite tell yet and probably see when I go shooting through the torain

172
00:11:58,610 --> 00:12:00,490
in the opposite direction.

173
00:12:00,500 --> 00:12:03,830
Let's let's see if I d possessor's f 8.

174
00:12:04,540 --> 00:12:07,690
I do appear to have just gone shooting through it right now.

175
00:12:07,690 --> 00:12:08,970
Let's go play again.

176
00:12:09,010 --> 00:12:12,770
So I'm accelerating forward if I take my hand off.

177
00:12:12,880 --> 00:12:16,880
It carries on going at the velocity that was previously set.

178
00:12:17,020 --> 00:12:23,170
If I hit the back button then you see it slows down and then starts going backwards and it can accelerate

179
00:12:23,410 --> 00:12:25,880
just as fast and just as much in the opposite direction.

180
00:12:25,900 --> 00:12:28,930
Obviously there's nothing limiting how fast we can go.

181
00:12:28,990 --> 00:12:36,310
That is for later lectures but for now you can see that we are able to accelerate by the use of a force

182
00:12:36,310 --> 00:12:40,180
and we've implemented all of that in our own code without using any physics engine.

183
00:12:40,180 --> 00:12:41,480
What so ever.

184
00:12:41,530 --> 00:12:47,920
So I'll see you in the next lecture where we are going to be extending this further to stop us from

185
00:12:47,920 --> 00:12:50,970
being able to go through walls like we currently are.
