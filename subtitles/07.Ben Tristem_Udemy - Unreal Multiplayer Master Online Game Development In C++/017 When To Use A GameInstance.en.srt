1
00:00:04,290 --> 00:00:09,900
Malcolm in this lecture we are going to be learning about the game instance class how we can create

2
00:00:09,960 --> 00:00:19,080
our own custom subclasses and how we can basically have one class basically a singleton that goes between

3
00:00:19,170 --> 00:00:25,170
all of our levels when we switch levels it's still there and it can create an overarching logic between

4
00:00:25,170 --> 00:00:25,690
our levels.

5
00:00:25,690 --> 00:00:31,090
Perfect for hosting servers and hosting clients right from within our game.

6
00:00:31,110 --> 00:00:33,500
So let's dive in and see how that's done.

7
00:00:33,990 --> 00:00:39,290
At this point we want to create an experience that we can share with our friends and family.

8
00:00:39,390 --> 00:00:43,890
And unfortunately when you got to use the command line a lot of people are afraid of that.

9
00:00:43,920 --> 00:00:53,310
So we need to build a system into our game to actually be able to join servers and to host servers.

10
00:00:53,310 --> 00:00:58,870
Now the way we're going to do this in this section is via the console.

11
00:00:58,890 --> 00:01:01,020
So let me just show you quickly what I mean by this.

12
00:01:01,020 --> 00:01:08,280
When you hit play you've got the option with the key underneath the escape key it's often tilled on

13
00:01:08,280 --> 00:01:10,800
a U.S. keyboard but on other keyboards can be different.

14
00:01:10,800 --> 00:01:13,190
It is always the one underneath the escape key.

15
00:01:13,260 --> 00:01:16,040
You get access to a console within the game.

16
00:01:16,140 --> 00:01:21,960
And in this console you can type various commands and let's just see I just start typing some random

17
00:01:21,960 --> 00:01:25,540
keys and it's got to play console key.

18
00:01:25,680 --> 00:01:27,440
No idea what these commands are.

19
00:01:27,540 --> 00:01:35,330
But we can create our own such commands to for example host a server and join a server.

20
00:01:35,640 --> 00:01:40,110
So we're going to be doing that to make it just a little bit easier for you to share your game with

21
00:01:40,140 --> 00:01:41,030
other people.

22
00:01:41,160 --> 00:01:47,880
Create a executable share on the service like it or I know get people to download it play with you and

23
00:01:47,880 --> 00:01:51,970
you can get very simple instructions on how to host and join a server.

24
00:01:52,170 --> 00:01:53,240
So that's great.

25
00:01:53,250 --> 00:01:55,870
We can see how this is going to pan out.

26
00:01:56,010 --> 00:01:59,690
But first off where are we going to create and handle those commands.

27
00:01:59,910 --> 00:02:04,980
Well to do that I'm going to tell you a little bit about a cool type of class which you probably not

28
00:02:04,980 --> 00:02:08,450
come across before called a game instance.

29
00:02:08,670 --> 00:02:13,440
Now a game instance as the name suggests is the core thing to your game.

30
00:02:13,440 --> 00:02:17,210
It is always there when your game is active.

31
00:02:17,280 --> 00:02:23,180
There aren't multiple games and says there's only one game instance and there is.

32
00:02:23,950 --> 00:02:31,120
Basically one between all levels so it's perfect when your logic involves switching between levels such

33
00:02:31,180 --> 00:02:37,300
as for example hosting a server or joining a server you're going to start off in a level such as maybe

34
00:02:37,300 --> 00:02:40,240
an empty menu level or or not.

35
00:02:40,240 --> 00:02:46,000
Or inside this game and you want to join in with somebody else that's perfect.

36
00:02:46,000 --> 00:02:51,000
Perfect material for a game instance because it doesn't depend on a single level.

37
00:02:51,280 --> 00:02:55,030
And that's what we're going to do we're going to create our own custom game instance because if you

38
00:02:55,030 --> 00:03:00,620
go to our blueprint menu here I think you can see that there is.

39
00:03:00,730 --> 00:03:06,760
Now these are game game modes but there are again instances running in the background it's kind of hard

40
00:03:06,760 --> 00:03:09,170
to see there somewhere hidden away in the settings.

41
00:03:09,220 --> 00:03:16,540
But let's have a look at how we can create a custom one of those game instances for your project.

42
00:03:16,540 --> 00:03:17,230
It's quite simple.

43
00:03:17,230 --> 00:03:24,070
Go over to the content browser go to add new and add new C++ classic only making a C plus plus game

44
00:03:24,100 --> 00:03:25,110
instance here.

45
00:03:25,180 --> 00:03:31,090
Now you can scroll through and see that we don't actually have any game instance classes here in these

46
00:03:31,090 --> 00:03:37,720
default classes so we're gonna go ahead and show all and search for game instance and we want the first

47
00:03:37,720 --> 00:03:40,030
one not the platform game instance.

48
00:03:40,030 --> 00:03:43,120
Go ahead hit next and give it a sensible name.

49
00:03:43,120 --> 00:03:48,730
I dont like the name my game instance I'm going to call it the puzzle platforms.

50
00:03:49,360 --> 00:03:51,120
Game instance.

51
00:03:53,020 --> 00:03:53,600
Like so.

52
00:03:53,600 --> 00:03:57,640
And go ahead and create that class again I'm just going to leave it in the default.

53
00:03:58,920 --> 00:04:03,450
Folder for now will find any structure if we need to find that structure.

54
00:04:03,450 --> 00:04:05,500
So go ahead and compiling.

55
00:04:05,580 --> 00:04:10,830
But there's nothing that's telling my game and telling unreel at the moment that this game instance

56
00:04:10,860 --> 00:04:12,720
is the one that I want to use.

57
00:04:12,720 --> 00:04:16,920
Now I have to let it compile to show you how we can change that in the settings.

58
00:04:16,920 --> 00:04:20,000
But it's basically a project wide setting.

59
00:04:21,040 --> 00:04:28,450
So that compiles completed I can go in to the settings go to the project settings here.

60
00:04:29,140 --> 00:04:31,990
And I'm not going to go and try and find it.

61
00:04:31,990 --> 00:04:37,720
I think I'm just going to go to this search and search for game instance and you see here we've got

62
00:04:37,810 --> 00:04:42,090
a game instance property called The Game instance class.

63
00:04:42,100 --> 00:04:49,660
So we can go to the drop down there and we can select our puzzle platforms game instance there and make

64
00:04:49,660 --> 00:04:52,920
sure that we go ahead and save.

65
00:04:52,930 --> 00:04:55,380
After that I think it's saved anyway.

66
00:04:55,450 --> 00:05:04,180
But what we're going to see over in our project changes which I have over on my other screen I may drag

67
00:05:04,180 --> 00:05:05,220
it across here.

68
00:05:07,510 --> 00:05:08,390
Here we go.

69
00:05:08,770 --> 00:05:12,670
So in my projects changes let's just have a look at this bit here.

70
00:05:12,940 --> 00:05:14,610
You can see I've got changed to the read me.

71
00:05:14,620 --> 00:05:20,080
That's right it's just telling me what we're seeing down here and some other changes we've got these

72
00:05:20,140 --> 00:05:27,010
puzzle platform C++ and h file which is the game instance we just created chain minor changes to the

73
00:05:27,010 --> 00:05:27,370
map.

74
00:05:27,380 --> 00:05:30,920
Maybe but the default game engine.

75
00:05:31,100 --> 00:05:33,360
Any has been changed.

76
00:05:33,520 --> 00:05:39,460
As you can see to save the property that the game instance class is pointing to this particular script

77
00:05:39,730 --> 00:05:42,390
of the puzzle platforms.

78
00:05:42,440 --> 00:05:43,090
Interesting.

79
00:05:43,180 --> 00:05:49,210
But that's how it works that's all these site settings are basically saved in these any files in your

80
00:05:49,210 --> 00:05:49,630
project.

81
00:05:49,630 --> 00:05:50,080
Okay.

82
00:05:50,080 --> 00:05:52,880
So we can get rid of that window now.

83
00:05:54,500 --> 00:06:01,790
So let's go ahead and open up that puzzle platforms game instance in Visual Studio which it has done

84
00:06:01,850 --> 00:06:02,300
over here.

85
00:06:02,300 --> 00:06:03,710
You can see it's pretty empty.

86
00:06:03,740 --> 00:06:10,260
Nothing much going on in here let's go and have a look at the C++ file again nothing much going on.

87
00:06:10,610 --> 00:06:17,720
So for starters I want us to see that we can indeed create or that this game instance is indeed being

88
00:06:17,720 --> 00:06:19,770
used in our project to do that.

89
00:06:19,850 --> 00:06:24,110
We can set off some log messages in that the constructor.

90
00:06:24,260 --> 00:06:28,170
And that's something called the initialization function as well.

91
00:06:28,170 --> 00:06:31,590
So let's have a look at the documentation for the game.

92
00:06:31,640 --> 00:06:35,150
Kindly I have it here in the background.

93
00:06:35,270 --> 00:06:42,830
The game you game instance and what we will see is we've got a constructor obviously but furthermore

94
00:06:43,050 --> 00:06:47,780
not lots of other functions as well and you can take a little bit of time to go reading those.

95
00:06:47,780 --> 00:06:55,430
But the function we're in interested in is called in it and this is the function here as it says virtual

96
00:06:55,430 --> 00:07:00,700
function to allow custom game instances an opportunity to set up what it needs.

97
00:07:00,890 --> 00:07:05,740
Okay so you might be wondering what's the difference between in it and a constructor.

98
00:07:05,870 --> 00:07:06,670
At this point.

99
00:07:06,680 --> 00:07:09,740
Well that's what you're going to find out in this chat.

100
00:07:11,260 --> 00:07:18,070
In it or construct that is the question as Shakespeare once said I'm sure implement both methods the

101
00:07:18,070 --> 00:07:22,240
init and construct methods using the documentation as your guide and remember the documentation is linked

102
00:07:22,570 --> 00:07:23,940
from the resources.

103
00:07:24,460 --> 00:07:26,790
Go and log out of both of them.

104
00:07:26,790 --> 00:07:32,200
I don't mean log out in the sense of log out of your user but put log messages in both them so you can

105
00:07:32,200 --> 00:07:34,560
distinguish which one is being called.

106
00:07:34,630 --> 00:07:42,880
Then try starting the game in different ways by doing a play in editor window doing just a normal standalone

107
00:07:42,880 --> 00:07:47,170
window doing a standalone game maybe launching the game without the editor.

108
00:07:47,230 --> 00:07:52,450
And perhaps try restarting the editor as well and see what happens in all of these cases what log messages

109
00:07:52,840 --> 00:07:59,390
get printed out and see what you notice and go and share what you notice and have a little bit of a

110
00:07:59,440 --> 00:08:03,200
theory on a tising about the in it and construct methods.

111
00:08:03,220 --> 00:08:05,090
Pause the video and have a go at that challenge.

112
00:08:06,690 --> 00:08:07,220
Okay.

113
00:08:07,230 --> 00:08:07,850
Welcome back.

114
00:08:07,850 --> 00:08:12,900
I hope a chance gave you some time to get acquainted with the ins and outs of the game instance.

115
00:08:12,900 --> 00:08:16,180
Now I'm going to go through and implement this change myself.

116
00:08:16,200 --> 00:08:24,120
First let's go to the constructor and use this constructor from the documentation as a base for us to

117
00:08:24,120 --> 00:08:24,860
use.

118
00:08:25,080 --> 00:08:32,400
I'm going to go ahead and put it in the puzzle platforms game instance dot H at the top here.

119
00:08:34,180 --> 00:08:38,680
And I think this is giving me a little warning about my ampersand here.

120
00:08:39,830 --> 00:08:40,950
I wonder why.

121
00:08:42,780 --> 00:08:49,170
I think probably because the game instance is the wrong name it should be the same name as my class.

122
00:08:49,170 --> 00:08:51,180
So let's play pace that one instead.

123
00:08:54,320 --> 00:08:56,390
That seems to have a better effect.

124
00:08:56,990 --> 00:09:00,130
And I think I might just want to make sure that.

125
00:09:01,530 --> 00:09:04,160
Don't think I need to put a virtual in front of constructor's.

126
00:09:04,170 --> 00:09:10,520
I think it's just fight like that put a semicolon at the end and we aag it go.

127
00:09:10,710 --> 00:09:12,400
Just going to make this a.

128
00:09:14,210 --> 00:09:17,600
Wrong Sievert or public I think public.

129
00:09:17,600 --> 00:09:20,130
What other classes to be able to construct us.

130
00:09:21,100 --> 00:09:25,780
And then we want to implement it as well.

131
00:09:25,780 --> 00:09:30,360
So let's go and find that in it in the documentation.

132
00:09:33,100 --> 00:09:35,230
Here it is and find it signature.

133
00:09:35,230 --> 00:09:36,760
It's a virtual void in it.

134
00:09:37,630 --> 00:09:39,630
So I will implement it as such.

135
00:09:39,630 --> 00:09:40,910
Virtual void in it.

136
00:09:41,100 --> 00:09:42,070
We're the semakula at the end.

137
00:09:42,070 --> 00:09:48,660
Now let's take those two signatures and go over into our C++ file and paste them in there.

138
00:09:48,700 --> 00:09:53,780
Now we are going to do the implementation step so that you.

139
00:09:54,860 --> 00:09:57,730
You puzzle platform game instance.

140
00:09:57,770 --> 00:10:02,000
Come on come along at the beginning of both remove the virtual key word.

141
00:10:02,000 --> 00:10:11,710
We don't need that in C++ files and then stick some curly braces after instead of a semicolon.

142
00:10:11,840 --> 00:10:13,550
You know the drill by now.

143
00:10:13,550 --> 00:10:16,280
So it's not complaining that is always a good sign.

144
00:10:16,280 --> 00:10:21,860
Now I can't be bothered to type out my log message so I'm just going to see if any of my other files

145
00:10:21,860 --> 00:10:24,830
have got logged messages left in.

146
00:10:25,040 --> 00:10:26,710
Looks like I'm going to have to be bothered.

147
00:10:26,750 --> 00:10:28,300
So it's eui underscore.

148
00:10:28,300 --> 00:10:34,570
Log log temp at this point you probably getting quite used to this warning.

149
00:10:35,630 --> 00:10:36,580
Text.

150
00:10:37,800 --> 00:10:45,520
And then in the text we can put the lets see game instance construct.

151
00:10:49,220 --> 00:10:50,820
If I can spell it correctly.

152
00:10:52,470 --> 00:10:58,680
Put some can't be underlining that it doesn't need it and put it another one in be in it.

153
00:11:00,490 --> 00:11:01,900
And call it in it.

154
00:11:01,900 --> 00:11:06,900
And I just noticed that I'm missing my colon colon in the in it.

155
00:11:08,030 --> 00:11:12,530
Doesn't the spying with confidence that the compiler is doing the right job things and put the Squidbillies

156
00:11:12,530 --> 00:11:14,020
on that one.

157
00:11:14,030 --> 00:11:18,710
That's right they and it's got constructer we've got log messages from both Let's go ahead and build

158
00:11:18,770 --> 00:11:23,450
and see whether I did indeed use the documentation correctly.

159
00:11:24,090 --> 00:11:25,220
Okay build complete.

160
00:11:25,230 --> 00:11:30,230
Let's go over in to unreel and check out our output log height.

161
00:11:30,240 --> 00:11:36,140
You'll notice that we have a game instance constructor has already been called but no in it I go and

162
00:11:36,140 --> 00:11:42,830
look for in it in the logs you notice that there is no warning type but is in it.

163
00:11:42,830 --> 00:11:48,770
In fact let's make this easier for us all by clicking on the filters of the output log and disabling

164
00:11:48,770 --> 00:11:54,960
messages so that we just have errors and warnings and you can see now we've got the game instance construct

165
00:11:54,960 --> 00:12:00,650
that has indeed been called if you dont get the game isn't constructer at this point then you may need

166
00:12:00,650 --> 00:12:02,600
to restart your editor.

167
00:12:02,990 --> 00:12:03,200
OK.

168
00:12:03,230 --> 00:12:05,300
Let's go ahead and do a normal play.

169
00:12:05,300 --> 00:12:11,270
So a play with this active level editor viewport and we can see that the constructor has been called

170
00:12:11,300 --> 00:12:15,230
again and it has been called Hang on it's been done twice.

171
00:12:15,230 --> 00:12:15,820
Why is that.

172
00:12:15,830 --> 00:12:18,400
Because you get one for every game instance.

173
00:12:18,410 --> 00:12:19,350
Hey look at this.

174
00:12:19,370 --> 00:12:22,160
But we've got the player too.

175
00:12:22,180 --> 00:12:28,310
And the player one and both of them get the game instance constructed and then initialised.

176
00:12:28,400 --> 00:12:29,210
That's that's quite cool.

177
00:12:29,210 --> 00:12:35,120
So we always get a construct of when we hit play but we also get a construct inside the editor just

178
00:12:35,120 --> 00:12:42,860
when we are using the editor whereas in it only happens when we hit play that is the difference between

179
00:12:42,860 --> 00:12:43,510
the two.

180
00:12:43,520 --> 00:12:49,940
We can go ahead and see with a new editor window whether that same thing happens go back into our logs

181
00:12:50,000 --> 00:12:53,980
and sure enough we've got two more constructs and in it.

182
00:12:54,320 --> 00:12:56,850
So I'm pretty happy that that is what's going on.

183
00:12:56,850 --> 00:13:01,190
Contri a standalone game as well but you might struggle to get the logs out of this one.

184
00:13:01,190 --> 00:13:08,690
So the same effect as a standalone game would be to do it with the logs from the terminal.

185
00:13:08,690 --> 00:13:11,880
So let's go ahead and open up a command prompt.

186
00:13:13,490 --> 00:13:16,640
And let's see if we can get this working.

187
00:13:16,750 --> 00:13:23,120
So I've just quit the standalone game and instead what I'm going do is go and copy the executable as

188
00:13:23,120 --> 00:13:26,830
we've done many times before into the command prompt.

189
00:13:26,890 --> 00:13:31,900
So those these I'm clearly not copying the right thing and select the executable again copy path and

190
00:13:31,940 --> 00:13:33,360
go back and command prompt.

191
00:13:33,380 --> 00:13:41,280
Paste it then select project you project copy path back into command prompt and paste it.

192
00:13:41,300 --> 00:13:47,600
Now I'm going to do a dash game and dash log and we'll see whether in the log we are going to get the

193
00:13:47,630 --> 00:13:49,860
game instance initializer.

194
00:13:49,950 --> 00:13:53,290
See here comes the game.

195
00:13:53,480 --> 00:13:57,320
Black screen signalling that something is happening here we are we're in the game.

196
00:13:57,320 --> 00:14:03,380
Let's go over to our log and sure enough constructer and in it both called in the standalone game as

197
00:14:03,380 --> 00:14:03,980
well.

198
00:14:04,010 --> 00:14:09,770
So basically it always gets called but only when we're playing the game constructor called all times

199
00:14:09,830 --> 00:14:13,400
even in the editor that is the summary.

200
00:14:13,400 --> 00:14:17,450
So go ahead and put game instances in your game.

201
00:14:17,450 --> 00:14:21,270
Are we seeing why they're useful in the following lectures.
