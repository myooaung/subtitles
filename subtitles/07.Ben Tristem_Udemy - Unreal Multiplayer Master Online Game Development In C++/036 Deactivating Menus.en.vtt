WEBVTT
1
00:00:04.750 --> 00:00:10.450
Welcome to another exciting that you are instalment in this one we are going to make sure our host button

2
00:00:10.450 --> 00:00:11.340
works fully.

3
00:00:11.500 --> 00:00:15.250
So by clicking it I can now actually move around the game.

4
00:00:15.250 --> 00:00:18.180
It's no longer just a fake button that doesn't do anything.

5
00:00:18.180 --> 00:00:23.240
It actually really does allow me to basically host a game.

6
00:00:23.350 --> 00:00:29.050
And the way we're going to do this is by properly deactivating our menu properly removing it and preventing

7
00:00:29.050 --> 00:00:32.560
it from having control of the mouse and input.

8
00:00:32.560 --> 00:00:36.870
So without further ado let's dive in and see how that works.

9
00:00:37.300 --> 00:00:42.400
So at this stage in our menu we've noticed that there's a floor when we host our game if I go ahead

10
00:00:42.400 --> 00:00:48.220
and hit host you'll notice it has indeed hosted the game but our input doesn't work.

11
00:00:48.220 --> 00:00:56.130
Now the reason for this is the input is still carrying over from the menu we set up our menu to accept

12
00:00:56.230 --> 00:01:02.580
except all the inputs and it's a menu UI only input and we haven't set that back.

13
00:01:02.620 --> 00:01:08.020
So let's go over into the C++ code and see where this problem is happening.

14
00:01:08.350 --> 00:01:17.590
We can go in to our puzzle platform game instance dot a or rather the C++ file and have a look inside

15
00:01:17.650 --> 00:01:19.530
our load menu.

16
00:01:20.310 --> 00:01:25.860
Our load menu function in our load menu function at least how I got it set up.

17
00:01:25.950 --> 00:01:29.600
You can see we've got a lot of stuff going on with the menu to set it up.

18
00:01:29.610 --> 00:01:31.840
We are adding it to the viewport.

19
00:01:31.890 --> 00:01:37.680
We are finding the first play controller we are then on that play controller setting the input mode

20
00:01:37.710 --> 00:01:43.910
and showing the cursor and all this stuff we want to reverse.

21
00:01:43.920 --> 00:01:52.830
When we go and host our game we want it to re re hide the cursor we want it to set the input mode back

22
00:01:52.830 --> 00:01:59.490
to game only we want it to remove the menu from the viewport if necessary.

23
00:01:59.490 --> 00:02:02.220
Now all of that is possible for sure.

24
00:02:02.370 --> 00:02:08.220
But one thing I don't like here is that in a load menu all this stuff about the menu essentially is

25
00:02:08.220 --> 00:02:11.370
happening in the game instance it doesn't seem like the right place.

26
00:02:11.400 --> 00:02:15.940
It seems like the right place would actually be in the game.

27
00:02:16.050 --> 00:02:19.260
Main Menu cvp itself.

28
00:02:19.260 --> 00:02:23.560
So let's start off by refactoring some of that out.

29
00:02:23.760 --> 00:02:25.230
Now it's going to be a short refractor.

30
00:02:25.230 --> 00:02:30.180
Don't worry some you might be hearing refactoring and saying oh no big re factors but no we're not doing

31
00:02:30.180 --> 00:02:31.520
big re factors here.

32
00:02:31.890 --> 00:02:37.080
Okay so the first thing is to create a public method and be method.

33
00:02:37.080 --> 00:02:39.390
We're going to call is set up.

34
00:02:39.540 --> 00:02:42.260
So I'm going to call it just void set up.

35
00:02:43.320 --> 00:02:46.810
With a capital S. And it doesn't need to take any parameters yet.

36
00:02:46.860 --> 00:02:49.590
I don't know whether it will need to in the end but it doesn't yet.

37
00:02:49.890 --> 00:02:57.480
Let's copy that and go over to the C++ file for the main menu and in here after initialize and perhaps

38
00:02:57.480 --> 00:03:03.570
after a set menu interface we are going to have set up method and defined the body.

39
00:03:03.570 --> 00:03:06.680
I'm going to add a namespace to it.

40
00:03:07.610 --> 00:03:09.770
And that should be about right.

41
00:03:09.770 --> 00:03:11.910
I think we've got that set up.

42
00:03:13.600 --> 00:03:18.170
Next we want to take that code that is in the game instance and bring it over.

43
00:03:18.170 --> 00:03:20.170
So I'm going to start with.

44
00:03:20.270 --> 00:03:24.390
We're not going to do the creating widget that that needs to be done here we need to create that widget.

45
00:03:24.400 --> 00:03:32.190
Here we need to check that it's null here but everything from an to view port down to not set menu interface

46
00:03:32.190 --> 00:03:34.280
so will leave set menu interface as it is.

47
00:03:34.490 --> 00:03:42.260
But everything up to that point we can cut and take and put in our C++ file and the set up method and

48
00:03:42.260 --> 00:03:47.280
hopefully that should more or less just work we're gonna change a couple of things such as menu.

49
00:03:47.300 --> 00:03:54.300
No longer is available in this context we want to be referring to this so be this adding it to viewport.

50
00:03:54.320 --> 00:03:55.880
Get the first play a controller.

51
00:03:55.910 --> 00:04:00.710
Now that doesn't work here in the main menu so let's see what does work.

52
00:04:00.710 --> 00:04:03.750
Let's see whether we can get a play controller some other how.

53
00:04:06.240 --> 00:04:12.570
So just using some autocomplete to have a look here doesn't look like anything there is going to be

54
00:04:12.570 --> 00:04:14.820
particularly useful.

55
00:04:14.820 --> 00:04:22.470
So another hint might be to go looking at the world seeing as this is a property related to the kind

56
00:04:22.470 --> 00:04:25.680
of the root object the world that we're currently in.

57
00:04:25.710 --> 00:04:31.740
If we take a look at their now familiar you world documentation and have a look in here for Play a controller

58
00:04:32.040 --> 00:04:33.280
Let's see what we can find.

59
00:04:33.300 --> 00:04:34.180
Good player.

60
00:04:34.200 --> 00:04:36.980
Let's look for the player controller.

61
00:04:37.290 --> 00:04:39.450
We've got get first player control.

62
00:04:39.450 --> 00:04:40.790
That seems like the one we want.

63
00:04:40.800 --> 00:04:47.250
So I'm going to copy that and we're going to get the world from within our YOU main menu.

64
00:04:47.250 --> 00:04:49.250
So let's go ahead and do that.

65
00:04:49.250 --> 00:04:55.240
First of all I want to check that the world is not null So we're going to install a new world pointer.

66
00:04:56.220 --> 00:04:57.990
To the world.

67
00:04:58.050 --> 00:05:02.310
Equals get a world within here.

68
00:05:02.730 --> 00:05:05.680
Get well basically every new object seems to have.

69
00:05:05.860 --> 00:05:09.570
They get world because it usually exists within a world and we can just check.

70
00:05:09.630 --> 00:05:11.740
We can just ensure that it's not null.

71
00:05:13.750 --> 00:05:17.450
Using my now famous macro.

72
00:05:17.530 --> 00:05:18.190
There we go.

73
00:05:18.190 --> 00:05:22.840
And it is going to then get hold of world.

74
00:05:23.420 --> 00:05:24.300
Arrow.

75
00:05:25.620 --> 00:05:27.420
Get first.

76
00:05:29.430 --> 00:05:33.080
First play control first local play controller would do fine as well.

77
00:05:33.090 --> 00:05:36.440
But I think first play controller is fine here.

78
00:05:36.810 --> 00:05:40.020
It's going to be about the same because at this point we haven't had access to the network anyway.

79
00:05:40.170 --> 00:05:41.330
So then we've got the player control.

80
00:05:41.330 --> 00:05:42.730
We check that the play control controllers not.

81
00:05:42.730 --> 00:05:47.180
Now we've got another instance of menu here which again has had to change to this.

82
00:05:47.190 --> 00:05:52.560
So it's this take widget and then we're setting up the first play controller.

83
00:05:52.950 --> 00:05:55.100
All looks great.

84
00:05:55.110 --> 00:05:58.980
Final thing to do is go ahead and check it all out.

85
00:05:58.980 --> 00:06:00.130
So let's go.

86
00:06:00.180 --> 00:06:01.320
Yes first the C++.

87
00:06:01.310 --> 00:06:06.050
We need to make sure we actually calling that method that we created so it's going to be menu.

88
00:06:06.930 --> 00:06:08.310
Arrow set up.

89
00:06:08.490 --> 00:06:13.710
That seems about right now so let's go ahead and build that and see whether our menu is still working

90
00:06:13.770 --> 00:06:15.710
as it should be.

91
00:06:15.750 --> 00:06:18.150
So the compile has successfully completed.

92
00:06:18.150 --> 00:06:23.760
Let's head back into unreel and just try it out and see whether it's still working.

93
00:06:23.760 --> 00:06:24.830
Hit my house button.

94
00:06:24.840 --> 00:06:25.010
Yeah.

95
00:06:25.050 --> 00:06:30.580
Everything's working exactly as before which is what we'd expect from a refactor as are we got it right.

96
00:06:30.720 --> 00:06:33.800
Next up let's create a stub for that tear down.

97
00:06:33.810 --> 00:06:39.490
So I've already said that in our game instance in the host method after.

98
00:06:39.550 --> 00:06:42.450
We basically are leaving the menu.

99
00:06:42.450 --> 00:06:47.090
We want to tear down that menu stop it from working.

100
00:06:47.210 --> 00:06:49.430
Now to do that we don't want to do it here.

101
00:06:49.440 --> 00:06:52.510
That's the entirely the reason that we've taken our set up out.

102
00:06:52.530 --> 00:06:54.290
So let's go in to the main.

103
00:06:54.360 --> 00:07:01.680
In fact let's go to the header file first and create a tear down method to go in concert with our set

104
00:07:01.680 --> 00:07:04.730
up so we're going to avoid tear down.

105
00:07:05.700 --> 00:07:12.450
All one word and that is what we're going to be calling from our game instance C++.

106
00:07:12.540 --> 00:07:18.420
Thanks to Dan Marshall on the forum for pointing out that a better alternative to using the tear down

107
00:07:18.420 --> 00:07:23.370
method would actually be to override this function belonging to you.

108
00:07:23.370 --> 00:07:28.710
Use a widget called on level remove from world if you override that that's going to get called as it

109
00:07:28.710 --> 00:07:30.240
says here in the remarks.

110
00:07:30.240 --> 00:07:37.800
When the level is basically being killed so you can leave basically up to the menu level and this will

111
00:07:37.860 --> 00:07:42.930
automatically get called so you won't have any problems with accidentally forgetting to call Ted down.

112
00:07:42.930 --> 00:07:46.930
Please excuse the dogs barking outside and foot and I can't do anything about them.

113
00:07:47.190 --> 00:07:53.370
So we're going to go into our house method now and right at the beginning of the host method we want

114
00:07:53.370 --> 00:07:59.030
to check if we have a menu and if we do have the menu we want it to tear it down.

115
00:07:59.040 --> 00:08:05.550
Now currently the menu is local to our load menu but we do want to keep a reference to this menu so

116
00:08:05.550 --> 00:08:07.200
we can later tear it down.

117
00:08:07.200 --> 00:08:14.040
So that is going to be done by going to our game instance dot H and creating a private variable for

118
00:08:14.100 --> 00:08:15.960
that main menu.

119
00:08:15.960 --> 00:08:19.570
So I am just going to do a forward declaration of the class.

120
00:08:19.580 --> 00:08:26.580
The main menu class just copying it over so that I don't make any mistakes typing and it's going to

121
00:08:26.580 --> 00:08:30.600
be a you may many class pointer and it's going to be called menu.

122
00:08:30.600 --> 00:08:33.480
So that's now going to be at private variable.

123
00:08:33.600 --> 00:08:37.420
And then I don't have to declare it locally in load menu anymore.

124
00:08:37.650 --> 00:08:40.830
I will just have that there.

125
00:08:41.680 --> 00:08:49.240
I will have a local variable called menu which I can assign to and in host I can now check if the menu

126
00:08:49.240 --> 00:08:49.830
is not known.

127
00:08:49.840 --> 00:08:54.070
So if menu not equals not pointer.

128
00:08:54.960 --> 00:08:59.570
Then we are able to do some work with it such as tear it down.

129
00:09:01.190 --> 00:09:07.340
Now the reason that I am not doing an insurer here is because I know that it could very well be NULL

130
00:09:07.340 --> 00:09:14.360
for good reason and that good reason could be that we are calling host from the command line in which

131
00:09:14.360 --> 00:09:16.380
case we've never had a menu open.

132
00:09:16.430 --> 00:09:21.970
This could lead to no point errors so we know it's deadly not not within the bounds of if statements

133
00:09:21.970 --> 00:09:23.470
so we can tear it down.

134
00:09:23.780 --> 00:09:25.790
And I'm going to go ahead and build that.

135
00:09:25.910 --> 00:09:31.100
And we will expect areas actually because I haven't created the stub for our tear down method in the

136
00:09:31.100 --> 00:09:32.090
C++.

137
00:09:32.090 --> 00:09:40.400
So let's copy that tear down declaration from the header file go into the C++ under set up and create

138
00:09:40.490 --> 00:09:47.280
our tear down method here under set up and I'm going to create the body of tear down.

139
00:09:47.510 --> 00:09:53.660
And I am going to go ahead and put in an namespace as well.

140
00:09:53.930 --> 00:09:58.650
Okay let's go ahead and build that should now have no problems.

141
00:09:58.850 --> 00:10:03.370
And sure enough when I get it all right we do get a successful build.

142
00:10:03.380 --> 00:10:07.050
Now obviously Ted is not going to do anything just yet.

143
00:10:07.190 --> 00:10:13.340
So let's challenge you to reverse the set up process and create this tear down method.

144
00:10:13.370 --> 00:10:17.800
So the challenge is going to be to use a set up as a base.

145
00:10:18.010 --> 00:10:25.040
Hide the cursor set the input mode and remove from the viewport all of that is in set up so you can

146
00:10:25.040 --> 00:10:29.480
just work through set up and make sure that every step is reversed.

147
00:10:29.480 --> 00:10:31.250
Pause the video and have a go.

148
00:10:32.350 --> 00:10:33.460
Okay welcome back.

149
00:10:33.460 --> 00:10:37.790
Let's have a go at reversing this set up method in our turban.

150
00:10:37.810 --> 00:10:40.780
So first thing is to remove from the viewport.

151
00:10:40.780 --> 00:10:42.450
So let's do this.

152
00:10:43.450 --> 00:10:47.170
Arrow and see if there is a remove from viewport.

153
00:10:48.620 --> 00:10:52.760
Sure enough there is a removed from viewport just as you would expect so that is not too hard.

154
00:10:52.760 --> 00:10:58.460
If I had typed my arrow operated correctly then it would have worked just fine.

155
00:10:58.460 --> 00:11:05.180
Next up we have got to get hold of our player controller if you want to get hold of the input mode so

156
00:11:05.180 --> 00:11:09.220
we're going to I'm just going to copy and paste this nold checking code.

157
00:11:09.980 --> 00:11:15.320
To get hold of our player control arm and then we're going to want to set an input mode.

158
00:11:15.320 --> 00:11:21.920
But this time we don't want to be setting the f input mode you I only want to be using a different input

159
00:11:21.920 --> 00:11:24.090
mode so it's going to be F input.

160
00:11:25.120 --> 00:11:30.430
And then it's going to be input mode game only.

161
00:11:31.670 --> 00:11:34.020
To call it still input mode data.

162
00:11:34.450 --> 00:11:35.860
So I did before.

163
00:11:36.250 --> 00:11:42.520
Remember that we have the documentation here for the input mode data base and we can go and look at

164
00:11:42.520 --> 00:11:47.440
the different datas that there are there's the game only is the one we're using.

165
00:11:47.590 --> 00:11:53.770
And we can see what variables and setters there are available only set consume capture a mouse down

166
00:11:53.770 --> 00:11:58.310
which is whether the mouse down that causes capture should be consumed.

167
00:11:58.390 --> 00:12:00.790
Basically I don't care about that one.

168
00:12:00.790 --> 00:12:05.560
It doesn't really matter so I'm going to leave it to whatever it defaults to being.

169
00:12:05.560 --> 00:12:13.360
So let's go ahead and get our play controller set its input mode to this this new input mode game only

170
00:12:13.360 --> 00:12:14.130
input mode.

171
00:12:14.470 --> 00:12:19.620
And then finally we want to just change our cursor over so that's currently setting the show cursor

172
00:12:19.620 --> 00:12:20.510
to true.

173
00:12:20.650 --> 00:12:23.860
And funnily enough we can be setting it to false.

174
00:12:23.920 --> 00:12:29.870
So let's save that and build and see whether our reversed process is going to pay dividends.

175
00:12:30.720 --> 00:12:31.510
Awesome sauce.

176
00:12:31.520 --> 00:12:37.270
Compile has finished and I've been playing with my Fidge it's been a while it goes as well.

177
00:12:37.290 --> 00:12:42.870
Here's a fun thing to do when compile is taking a while so compile has succeeded.

178
00:12:42.870 --> 00:12:47.190
Let's go ahead and hit play and see if we've got rid of that nasty bug that stopped us from actually

179
00:12:47.190 --> 00:12:50.890
being able to play a game once we hit host hit host and in.

180
00:12:50.940 --> 00:12:56.520
Sure enough I am able to move around there's no menu there I'm able to jump and totally interact with

181
00:12:56.520 --> 00:12:58.370
the menu as I did before.

182
00:12:58.510 --> 00:13:05.400
As are we have successfully created a reverse set up logic which has deactivated our menu and allows

183
00:13:05.400 --> 00:13:06.740
us to carry on playing.

184
00:13:06.780 --> 00:13:10.670
Very happy with that pat yourselves on the back and I'll see you in the next video.
