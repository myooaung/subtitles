1
00:00:05,010 --> 00:00:10,200
Welcome in this lecture we're going to be looking at how we can replicate position and location to the

2
00:00:10,200 --> 00:00:17,040
autonomous proxy from the service over we overwrite its location remove that source of error coming

3
00:00:17,040 --> 00:00:23,070
from the integration and be different time steps so you can see here that the output on the client is

4
00:00:23,400 --> 00:00:25,640
definitely more juddering than it was before.

5
00:00:25,650 --> 00:00:28,220
But this is just a stepping stone This isn't the final product.

6
00:00:28,230 --> 00:00:32,660
We're just trying some approaches and seeing what the limitations of each of them are.

7
00:00:32,790 --> 00:00:34,420
But you can see that for sure.

8
00:00:34,410 --> 00:00:38,310
We're definitely ending up in the same location and position as we were on the server because that's

9
00:00:38,400 --> 00:00:40,000
the location and position we're taking.

10
00:00:40,170 --> 00:00:46,170
So let's dive in and see how we can use property replication to copy our position and location down

11
00:00:46,170 --> 00:00:47,260
from the server.

12
00:00:48,410 --> 00:00:57,650
So our first approach if you recall from last lecture is to attempt to overwrite the location and position

13
00:00:58,010 --> 00:00:59,240
of our vehicles.

14
00:00:59,240 --> 00:01:07,370
So we're going to have a go at just overwriting our autonomous proxy's location from the authority that

15
00:01:07,370 --> 00:01:10,660
is the server now for doing this.

16
00:01:10,670 --> 00:01:16,370
We are going to start off just by replicating the property so obviously location is already replicated

17
00:01:16,370 --> 00:01:22,490
for us by the game engine except for it doesn't do that on the autonomous proxy.

18
00:01:22,490 --> 00:01:27,370
So what we're going to do is we're going to set up our own replication of position and rotation which

19
00:01:27,510 --> 00:01:31,630
will also help us to understand how things replicate in general in an e-mail.

20
00:01:31,670 --> 00:01:35,170
So let's get an overview of that property replication.

21
00:01:35,180 --> 00:01:40,010
So we've got a documentation page here that is also in the resources.

22
00:01:40,010 --> 00:01:44,120
Do you have a read of that you can have a pause and have a read of that if you like to get basis for

23
00:01:44,120 --> 00:01:44,620
this.

24
00:01:44,700 --> 00:01:46,300
Then I'm just going to walk you through.

25
00:01:47,140 --> 00:01:51,370
There are a few steps we need to go through to set up replication for a property.

26
00:01:51,370 --> 00:01:58,600
Now the first one is fairly easy you just add the replicated property to the you property or attribute

27
00:01:58,600 --> 00:02:04,150
whatever it's called to the you property that you want to replicate has to be you property on an actor

28
00:02:04,180 --> 00:02:07,990
preferably and that an actor has to replicate.

29
00:02:07,990 --> 00:02:12,340
So that's the third step first EP is the you property that third step is that the act of replicates.

30
00:02:12,460 --> 00:02:17,530
And then there's this other step of this and get a lifetime replicated properties which you have to

31
00:02:17,560 --> 00:02:22,720
implement and you have to implement exactly like this with this tea array of out lifetime properties

32
00:02:22,720 --> 00:02:29,450
and you need to do this do rep lifetime on the thing that you want to replicate.

33
00:02:29,590 --> 00:02:35,750
Both It's tight it needs to be passed in and the actual name itself.

34
00:02:35,760 --> 00:02:43,630
Now the reason for this is that Ben unreal can cash what properties get replicated and it makes it really

35
00:02:43,630 --> 00:02:46,300
efficient to actually do the replication process.

36
00:02:46,690 --> 00:02:52,870
So let's go ahead and have a go at doing this for the replication of the actors position.

37
00:02:52,870 --> 00:03:01,740
Now what we want to do is from the server set a variable that will be replicated down to the client.

38
00:03:01,750 --> 00:03:03,600
Both autonomous and non autonomous.

39
00:03:03,730 --> 00:03:08,140
And from there we want to overwrite the position on tick.

40
00:03:08,170 --> 00:03:15,250
So that's what we're going to do let's go in to our source and our source code and we're going to create

41
00:03:15,280 --> 00:03:22,450
a new property here specifically for this purpose which is going to be not the velocity but something

42
00:03:22,450 --> 00:03:24,610
similar to that similar position.

43
00:03:24,610 --> 00:03:29,020
Let's see where we should put this in the file and have a little think first before the moment seems

44
00:03:29,020 --> 00:03:31,680
like best place might be just underneath for lost.

45
00:03:31,720 --> 00:03:35,150
So I'm going to create a new F vector.

46
00:03:36,030 --> 00:03:38,420
And I'm going to call this f vector.

47
00:03:39,510 --> 00:03:40,750
Replicate it.

48
00:03:43,090 --> 00:03:44,840
Location like so.

49
00:03:45,750 --> 00:03:49,300
And then following that first step we are going to do a new property.

50
00:03:51,770 --> 00:03:52,430
With the.

51
00:03:52,460 --> 00:03:54,860
And tribute's replicate it.

52
00:03:55,740 --> 00:04:02,060
Like so now we can go ahead and make sure that it gets built while we think about the next step.

53
00:04:02,070 --> 00:04:07,190
So I'm going to go back to the documentation and the next step is to make sure our actor is replicating

54
00:04:07,200 --> 00:04:08,220
So let's do that.

55
00:04:08,220 --> 00:04:12,660
Go into an A go cart see BP and we've got can ever tick.

56
00:04:12,690 --> 00:04:15,610
Let's see whether anything is telling it that it can replicate.

57
00:04:16,810 --> 00:04:23,310
So I mean it should be replicating because so far we have been able to get our replicated locations.

58
00:04:23,310 --> 00:04:26,690
So I'm just trying to find where we've done that.

59
00:04:26,730 --> 00:04:32,440
It does look like we currently don't make it replicate so we should make it replicate so we can go ahead

60
00:04:32,440 --> 00:04:36,480
and do that in the constructor for the a go cart.

61
00:04:36,910 --> 00:04:44,030
MIKE So go ahead make sure it replicates and then we need to implement get lifetime replicated properties.

62
00:04:44,070 --> 00:04:45,510
So let's go ahead and do this.

63
00:04:45,510 --> 00:04:51,570
First of all just in the C++ file and we'll see whether we need to do it in the head file or not.

64
00:04:52,340 --> 00:04:55,130
So let's do that or go over to the C++.

65
00:04:55,380 --> 00:04:58,390
We will need to do it in the header far believe actually.

66
00:04:58,410 --> 00:05:04,470
I've just checked and we don't need to do it in the head file just in the C++.

67
00:05:04,470 --> 00:05:05,250
Why is that.

68
00:05:05,270 --> 00:05:10,530
I hear you ask because when you have this new property replicated it automatically goes looking for

69
00:05:10,530 --> 00:05:16,350
that get lifetime replicated properties in fact if we have built which we should done now I'll go to

70
00:05:16,410 --> 00:05:20,240
night output log some We're not showing.

71
00:05:22,520 --> 00:05:28,880
We are so rebuild showed the log and if we take a look at what we've got here you can see that it's

72
00:05:28,880 --> 00:05:34,570
automatically saying unresolved external symbol get lifetime replicated props.

73
00:05:34,580 --> 00:05:41,840
So basically by having put in a replicated property in there it's automatically expecting us to implement

74
00:05:41,850 --> 00:05:44,690
fluency plus plus we don't have to declare it head.

75
00:05:44,780 --> 00:05:48,120
It has been declared in fact it would be an error to redeclare it.

76
00:05:48,140 --> 00:05:54,060
So I'm going to go ahead and put this replication stuff down underneath.

77
00:05:54,230 --> 00:06:02,030
I actually kind of needs to go higher up in the hierarchy because it's closer to the set up methods

78
00:06:02,690 --> 00:06:08,330
like the begin play and the constructor So I'm going to put it after begin play that we get this Lifetime

79
00:06:08,330 --> 00:06:14,950
replicated propertys And then we've got this new lifetime rep he can see does not exist here.

80
00:06:15,110 --> 00:06:16,810
So we're going to need a head of file for that.

81
00:06:16,810 --> 00:06:20,390
So the thing to do is go over and search for it.

82
00:06:20,390 --> 00:06:25,700
But if like me you do that and get some results there are a bit Incans inconsistent and you can't really

83
00:06:26,030 --> 00:06:28,890
find this because this is a macro it's a little bit odd.

84
00:06:29,000 --> 00:06:35,240
Then what you can do is just do a search across the entire solution to find all that can take a little

85
00:06:35,240 --> 00:06:36,000
bit of time.

86
00:06:36,170 --> 00:06:42,770
But once you have got yourself the results list which is just being found at the moment then what you'll

87
00:06:42,770 --> 00:06:45,890
be able to do is find the place where that's declared.

88
00:06:46,160 --> 00:06:51,380
So we're just going to go ahead and look for a place where it is being defined.

89
00:06:51,380 --> 00:06:53,670
Here's one unreel network.

90
00:06:53,720 --> 00:06:55,700
H seems to be where it's defined.

91
00:06:55,700 --> 00:07:00,140
So let's go ahead and see whether we can just include unreal Network 8:00 am going to go to my C plus

92
00:07:00,160 --> 00:07:09,990
plus five and I'm going to go up to the top of the C++ file and do an include four unreal network dot

93
00:07:09,990 --> 00:07:10,250
H.

94
00:07:10,250 --> 00:07:10,820
There we go.

95
00:07:10,890 --> 00:07:16,030
Sure enough is showing up so we can do our do wrap thing there now.

96
00:07:16,040 --> 00:07:25,370
And I believe the type that it wants here is not the type of the object but rather the type of a go

97
00:07:25,370 --> 00:07:26,130
cart.

98
00:07:26,150 --> 00:07:29,600
So we're going to put that in place like so.

99
00:07:29,900 --> 00:07:33,160
And then notice this giving an error right now.

100
00:07:33,170 --> 00:07:38,930
But remember that this might not give us an error when we compile this might just be the Intellisense

101
00:07:39,020 --> 00:07:39,860
going wrong.

102
00:07:39,920 --> 00:07:42,950
So I'm going to copy replicated location and paste it here.

103
00:07:42,950 --> 00:07:49,650
So what this macro is actually doing is it's registering that this variable for replication.

104
00:07:49,730 --> 00:07:54,650
And in fact this property here don't change the name of that property if you change the name of the

105
00:07:54,650 --> 00:08:00,620
property you will find that the macro gives an error because it actually uses that inside here it's

106
00:08:00,620 --> 00:08:05,480
expanding out to some C++ code which is using the out lifetime props.

107
00:08:05,480 --> 00:08:06,920
So don't go change your name.

108
00:08:06,920 --> 00:08:11,900
Basically that's the name it's expecting or change the name and see how it fails.

109
00:08:11,900 --> 00:08:16,600
Just so that you know and feel a bit more comfortable with the code that we're using.

110
00:08:16,610 --> 00:08:18,780
And with the auto generation that's going on.

111
00:08:19,220 --> 00:08:24,470
So now hopefully that should be replicating replicated locations so whenever replicated location is

112
00:08:24,470 --> 00:08:32,510
set on the server all the clients will see that value trickle down to their value of replicated location.

113
00:08:32,510 --> 00:08:39,740
That's the idea of replicating a property and that's what I want you to use to go ahead and set and

114
00:08:39,980 --> 00:08:41,600
read the property.

115
00:08:41,600 --> 00:08:43,040
So how are we going to do that.

116
00:08:43,040 --> 00:08:45,300
Here's your challenge to say and get the position.

117
00:08:45,410 --> 00:08:46,230
I'd like you to.

118
00:08:46,250 --> 00:08:52,580
On the server set the replicated position then on the client get a get it on all the clients and make

119
00:08:52,580 --> 00:08:59,260
sure the position of your car the actual Get active location is updated from that replicated position.

120
00:08:59,270 --> 00:09:00,080
Test it.

121
00:09:00,080 --> 00:09:04,400
See that is getting replicated obviously the rotation won't be getting replicated all look a little

122
00:09:04,400 --> 00:09:05,090
bit funny.

123
00:09:05,240 --> 00:09:10,090
But then you can go ahead and repeat for rotation so pause the video and have a go at the challenge.

124
00:09:11,540 --> 00:09:12,460
Okay welcome back.

125
00:09:12,470 --> 00:09:15,420
So let's dive in and do this quickly.

126
00:09:15,440 --> 00:09:17,630
So we're going to go in at two.

127
00:09:17,690 --> 00:09:25,580
Tick tick is where our location is getting changed all the time so we're updating location from velocity

128
00:09:25,580 --> 00:09:26,130
here.

129
00:09:26,480 --> 00:09:32,780
And then what I want to do is at the end of this if we have the authority to do so I want to update

130
00:09:33,140 --> 00:09:34,070
the position.

131
00:09:34,070 --> 00:09:39,440
So this what we're going to do I'm going to say if in fact I'm going to wrap this whole thing up in

132
00:09:39,440 --> 00:09:43,260
the IF because there's no point at the moment.

133
00:09:44,150 --> 00:09:44,930
Let's think about this.

134
00:09:44,930 --> 00:09:47,500
There's no point at the moment doing this simulation.

135
00:09:47,750 --> 00:09:52,850
If we're just going to overwrite it on the client so I'm going to do it in the if.

136
00:09:53,030 --> 00:09:56,150
Just like this for now but then I'll show you what I mean.

137
00:09:56,360 --> 00:09:58,010
If has authority.

138
00:09:58,010 --> 00:10:00,970
So we are the server basically.

139
00:10:01,550 --> 00:10:05,120
Then we are going to want to set the position.

140
00:10:05,210 --> 00:10:10,740
So we do this with the proper bracketing the one that visual studio doesn't want me to do.

141
00:10:11,090 --> 00:10:17,370
We are going to want to go for the replicated location equals get actor.

142
00:10:18,730 --> 00:10:19,540
Location.

143
00:10:20,620 --> 00:10:27,190
Like so that should be enough to trigger the replication process that unreal is doing for us in the

144
00:10:27,190 --> 00:10:29,300
background and now otherwise.

145
00:10:29,350 --> 00:10:33,810
So if we don't have the replicated authority.

146
00:10:33,820 --> 00:10:39,710
So in a ELT's that means were either a autonomous proxy or a simulated proxy.

147
00:10:39,720 --> 00:10:43,080
Then we want to take this replicated location and set it.

148
00:10:43,120 --> 00:10:50,380
So were going to go ahead and do a set actor low if I can type akhira.

149
00:10:51,150 --> 00:10:54,190
Like so set out the location replicated.

150
00:10:55,350 --> 00:11:00,660
Location So that's the one that will have trickled down from the server because if we were the server

151
00:11:00,660 --> 00:11:06,150
we'd have got the first hand of the if and if if not then we're going to get this setting side of the.

152
00:11:06,450 --> 00:11:10,220
So we are going to go ahead and build that and see whether that does the trick.

153
00:11:10,230 --> 00:11:14,450
And you can see here what I mean is that here we're always every tick.

154
00:11:14,490 --> 00:11:19,050
We're not the server setting the at a location from our replicator location so it doesn't make sense

155
00:11:19,050 --> 00:11:22,880
that we're simulating at the top here but we're going to leave it like that for now.

156
00:11:22,880 --> 00:11:28,290
Um I'm undecided whether to leave it or not to leave it because very soon we are going to be wanting

157
00:11:28,290 --> 00:11:33,150
to just overwrite it when we get an update from the server and I'm going to show you how we can do things

158
00:11:33,180 --> 00:11:37,830
on updated replication in the next lecture case so the build succeeded.

159
00:11:37,830 --> 00:11:45,460
Let's go over into unreel and test it out so I'm going to go in here and I'm going to go ahead and be.

160
00:11:46,450 --> 00:11:51,400
Hopefully not a simulated proxy I'm not sure why it's saying that I'm a simulated proxy but you can

161
00:11:51,400 --> 00:12:00,670
see that as I am accelerating a round the rotation I am setting myself but the position is being set

162
00:12:00,790 --> 00:12:06,880
from the server which is why you can see it's a little bit jolting but it's definitely concurring with

163
00:12:06,880 --> 00:12:15,010
the server now so if I go all the way around you can see that I am still in the same place.

164
00:12:15,040 --> 00:12:17,950
When I come back to the server.

165
00:12:18,010 --> 00:12:18,970
Like so.

166
00:12:20,240 --> 00:12:23,180
So let's escape from the game and do the next bit.

167
00:12:23,570 --> 00:12:29,240
But just before we do that we did notice that we were getting the wrong name on our vehicle.

168
00:12:29,240 --> 00:12:33,710
Now the reason for this is it's a bit strange because the documentation doesn't tell you you need to

169
00:12:33,710 --> 00:12:40,820
do this but this get lifetime replicate propertys has a parent in the actors that we're driving from.

170
00:12:41,030 --> 00:12:43,250
And we're not calling that super prop..

171
00:12:43,240 --> 00:12:48,340
If you don't call that super property then what we see is that the wrong name comes out.

172
00:12:48,350 --> 00:12:52,660
So you want to go ahead and make sure you are doing that you are calling up to Super.

173
00:12:52,670 --> 00:12:54,210
So let's go to the right place.

174
00:12:54,230 --> 00:12:57,440
Here it is in the gets a lifetime replicate propertys.

175
00:12:57,440 --> 00:13:02,250
We are going to call super colon colon get lifetime replicated propertys.

176
00:13:02,720 --> 00:13:09,520
If I can paste them in the right place and then we are going to do that out lifetime props.

177
00:13:10,620 --> 00:13:14,540
And we are going to go ahead and build that and just check that we got the right name.

178
00:13:14,970 --> 00:13:18,990
So build successful we'll go back into one real and play.

179
00:13:19,200 --> 00:13:25,170
And we didn't spawn Let's hit play again some reason we're having a bit of difficulty spawning at the

180
00:13:25,170 --> 00:13:25,800
moment.

181
00:13:25,800 --> 00:13:29,570
Let's do it until we got her car and they can see that.

182
00:13:29,590 --> 00:13:34,020
Now the autonomous proxy indeed and we've got a bit of juddering gobbing juddering So that's definitely

183
00:13:34,020 --> 00:13:38,310
something we're going to want to fix and we're gonna want to figure out what that is and that rotation

184
00:13:38,340 --> 00:13:39,960
is currently working.

185
00:13:40,230 --> 00:13:43,460
But it could be liable to going wrong.

186
00:13:43,650 --> 00:13:46,080
So let's just see whether it is actually going to go wrong.

187
00:13:46,080 --> 00:13:51,690
I'm just gonna go and play around for a little bit and then hopefully with a lot of rotation and meandering

188
00:13:51,690 --> 00:14:00,500
back and forth and we'll see whether we're still on the same rotation on the client and on the server.

189
00:14:02,130 --> 00:14:06,390
So you can see we're kind of actually floating off slightly at an angle so that's already telling us

190
00:14:06,660 --> 00:14:11,670
that the client here has got a different rotation to what is being seen on the server because we're

191
00:14:11,730 --> 00:14:13,890
obviously travelling in a straight line on the server.

192
00:14:14,030 --> 00:14:17,840
But on the client we are thinking we're in a different rotation.

193
00:14:17,850 --> 00:14:22,080
So that's a good reason that we should go ahead and replicate the rotation as well.

194
00:14:22,080 --> 00:14:25,300
So I'm going to go back into visual studio and make sure that happens.

195
00:14:25,440 --> 00:14:28,840
So going to go up to the head of file and I'm going to actually just copy this.

196
00:14:28,980 --> 00:14:36,960
I've got an F vector we're gonna have to change the vector to an F rotator or whatever comes out of

197
00:14:37,020 --> 00:14:39,770
gets active rotation literally to make our lives easier.

198
00:14:39,960 --> 00:14:41,220
So what does come out of.

199
00:14:41,220 --> 00:14:42,770
Get asked a rotation Let's have a look.

200
00:14:42,770 --> 00:14:43,190
Get.

201
00:14:43,200 --> 00:14:47,940
Actor rotation on doing this in the attic.

202
00:14:48,210 --> 00:14:50,550
And if I hover over we get an F rotator.

203
00:14:50,550 --> 00:14:51,780
So that's what I'm going to use.

204
00:14:51,960 --> 00:14:54,490
So we're going to have an F rotator.

205
00:14:56,040 --> 00:15:01,310
Like so it's going to be a replicated rotation like so.

206
00:15:01,350 --> 00:15:08,110
And we're going to copy that replicates rotation because we're going to need it in our method.

207
00:15:08,130 --> 00:15:11,130
That sets up the lifetime replicated propertys.

208
00:15:11,780 --> 00:15:14,580
Just copying and pasting it for now.

209
00:15:14,640 --> 00:15:17,290
So I didn't lose it in my paste buffer.

210
00:15:17,420 --> 00:15:22,220
And then once we've done that we are pretty much good to go.

211
00:15:22,220 --> 00:15:29,240
We just need to set it in tic So it's going to be the rotation equals get active rotation.

212
00:15:29,970 --> 00:15:33,780
And the set actor rotation is what we're going to need.

213
00:15:33,810 --> 00:15:35,840
On the flip side on the clients.

214
00:15:36,890 --> 00:15:41,340
Set out a rotation to replicate rotation and we can go ahead and build that.

215
00:15:41,340 --> 00:15:43,470
They might be asking why we're not using a transform here.

216
00:15:43,490 --> 00:15:48,180
Well really it's just so that you could have a go at practicing doing this twice.

217
00:15:48,230 --> 00:15:52,560
You can definitely go ahead and replace these with a transformer if you prefer.

218
00:15:52,610 --> 00:15:54,310
We don't really care about scale.

219
00:15:54,350 --> 00:15:57,350
In this case so perhaps the transforms a little bit heavy weight.

220
00:15:57,350 --> 00:16:02,750
We'll see about that in just a bit when we go more into this replication.

221
00:16:02,750 --> 00:16:04,530
But for now it kind of works.

222
00:16:04,640 --> 00:16:06,220
Mr. semicha off one of the lines.

223
00:16:06,230 --> 00:16:08,490
Let's go ahead and build it one more time.

224
00:16:08,870 --> 00:16:09,870
Yeah that works now.

225
00:16:09,870 --> 00:16:13,300
So let's go back and see if we're able to play.

226
00:16:13,340 --> 00:16:18,110
Well basically you should be able to tell me as you can see that the rotation is certainly gone a bit

227
00:16:18,110 --> 00:16:23,330
more jugglery as well is not as smooth as it was because it's not really being replicated locally where

228
00:16:23,450 --> 00:16:29,660
we're always copying that replicated property from the server on every tick which means that our local

229
00:16:29,660 --> 00:16:33,260
simulation on the autonomous proxy doesn't really help very much.

230
00:16:33,320 --> 00:16:38,660
And you can see that's having a bit of an overhead in terms of our performance is not really working

231
00:16:38,690 --> 00:16:44,270
particularly fantastically but it is keeping things in sync for now which is the main thing.

232
00:16:44,270 --> 00:16:50,750
So were going to be looking at how we can make sure that we only update with the advent of an update

233
00:16:50,750 --> 00:16:53,240
from the server which should definitely help a lot.

234
00:16:53,240 --> 00:16:57,970
Because the updates don't come all the time and we're going to look at how to do that in the next lecture.

235
00:16:58,000 --> 00:16:58,830
So I'll see you there.
