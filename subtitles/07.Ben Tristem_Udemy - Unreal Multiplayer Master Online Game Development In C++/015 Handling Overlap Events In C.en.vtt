WEBVTT
1
00:00:04.500 --> 00:00:12.810
Welcome this lecture is about getting overlap events to handle in C++ so that we will be able to activate

2
00:00:12.840 --> 00:00:14.700
and deactivate our moving platform.

3
00:00:14.700 --> 00:00:17.530
This lecture is not going to be out activating the activating moon platform.

4
00:00:17.580 --> 00:00:19.250
It's just going to be about handling those events.

5
00:00:19.350 --> 00:00:26.910
So we're going to be able to do is if I go and spawn myself up near a platform and walk onto the platform

6
00:00:26.940 --> 00:00:31.530
we'll be able to print out these log messages when we move onto the press pad and when we move off the

7
00:00:31.530 --> 00:00:34.560
pressure pad for activating and deactivating.

8
00:00:34.560 --> 00:00:38.600
So without further ado let's dive in and see how that's done.

9
00:00:39.530 --> 00:00:46.600
So we've got a pretty but somewhat useless platform trigger as it currently doesn't really do anything.

10
00:00:46.730 --> 00:00:48.050
Not very useful is it.

11
00:00:48.230 --> 00:00:54.590
So let's go ahead and start implementing the fundamentals that we need which is to handle the begin

12
00:00:54.590 --> 00:01:00.100
overlap an end overlap of this you box component.

13
00:01:00.110 --> 00:01:07.610
Now the reason I know that's what we need is well one I've got a good memory and second but most importantly

14
00:01:08.180 --> 00:01:12.250
you can go to the trigger volume which we've got in the constructer.

15
00:01:13.160 --> 00:01:15.580
And we go trigger volume arrow.

16
00:01:16.370 --> 00:01:19.960
And then we can look for overlap.

17
00:01:21.780 --> 00:01:23.910
In auto complete.

18
00:01:23.940 --> 00:01:29.910
Or we can just look in the trigger value volume's documentation if you're on x code and you'll notice

19
00:01:29.910 --> 00:01:35.520
that we have an on component begin overlap an on component end overlap I'm going to start with implementing

20
00:01:35.580 --> 00:01:38.860
our own components begin overlap.

21
00:01:39.150 --> 00:01:43.580
Now I'm terrible at remembering the signatures for these things because they're long and unwieldy.

22
00:01:43.590 --> 00:01:48.390
So let's make sure we just go and look it up in the documentation.

23
00:01:48.390 --> 00:01:55.080
This is should be the same if you're on Mac and on windows obviously so this is always the best way

24
00:01:55.080 --> 00:01:55.890
to go.

25
00:01:55.890 --> 00:02:03.120
So on component beginner overlap has a very very complicated implementations signature.

26
00:02:03.120 --> 00:02:04.270
It returns void.

27
00:02:04.350 --> 00:02:07.380
But beyond that that's where the simplicity ends.

28
00:02:07.500 --> 00:02:10.260
We've got all sorts of stuff going in there.

29
00:02:10.260 --> 00:02:12.330
So let's just copy the signature.

30
00:02:12.330 --> 00:02:14.420
No need to memorize that sort of stuff.

31
00:02:14.580 --> 00:02:17.030
It's just wasting your brain space trust me.

32
00:02:17.070 --> 00:02:21.520
So let's go ahead and implement this remember that it has to be a u function.

33
00:02:21.660 --> 00:02:23.920
Now why does it have to be a u function.

34
00:02:25.290 --> 00:02:33.240
Because it is a dynamic event and dynamic events require that you use a u function you can try doing

35
00:02:33.240 --> 00:02:39.300
it as a nonu function and you will get a compile error which is nice and handy so it doesn't fail at

36
00:02:39.300 --> 00:02:42.900
runtime it just fails at compile time.

37
00:02:43.080 --> 00:02:47.130
So I paste in that signature with void so you function.

38
00:02:47.130 --> 00:02:51.840
And now I just need to go ahead and implement that over in my C++ files.

39
00:02:51.840 --> 00:02:55.830
Let's go towards the bottom I think after Tich should do the trick.

40
00:02:55.920 --> 00:02:58.520
Void a platform.

41
00:02:59.340 --> 00:03:00.730
Tree.

42
00:03:00.940 --> 00:03:09.750
LOL calon then that the signature then as new line and my curly braces to complete the act.

43
00:03:09.750 --> 00:03:11.870
And finally inside my.

44
00:03:11.880 --> 00:03:13.320
Begin overlap.

45
00:03:13.320 --> 00:03:14.020
What do I.

46
00:03:15.560 --> 00:03:22.940
Well I want to actually just do a long message for now I will deal with actually activating in deactivating

47
00:03:22.940 --> 00:03:25.040
the platforms in the next video.

48
00:03:25.040 --> 00:03:27.210
But for now let's just do a log temp.

49
00:03:27.970 --> 00:03:35.890
Warning just to make it stand out in the logs and then techs should be something like along the lines

50
00:03:35.890 --> 00:03:37.590
of activated.

51
00:03:38.530 --> 00:03:39.590
Like so.

52
00:03:40.090 --> 00:03:42.420
Okay so that is begin overlap.

53
00:03:42.460 --> 00:03:43.210
Implement it.

54
00:03:43.230 --> 00:03:46.960
Now we just need to register the event call back.

55
00:03:46.990 --> 00:03:49.750
Best place for this is in the constructer.

56
00:03:49.750 --> 00:03:52.120
I've already done my noell check.

57
00:03:52.240 --> 00:03:58.290
So I'm fine to go ahead with the Arrah operator but do do do just get in the habit.

58
00:03:58.300 --> 00:04:03.990
Every time use an arrow operator every time you use a dereferencing star think about is this a pointer.

59
00:04:04.000 --> 00:04:05.270
Could it be null.

60
00:04:05.290 --> 00:04:08.410
Is there even a vague chance it could be null and if there is.

61
00:04:08.410 --> 00:04:13.720
Just make sure it's protected because the worst thing in the world is if you got some changes that you

62
00:04:13.960 --> 00:04:14.720
made in the Editor.

63
00:04:14.710 --> 00:04:18.680
They're not saved and it comes crashing down around your ears because were not.

64
00:04:18.680 --> 00:04:19.780
Pointer error.

65
00:04:19.930 --> 00:04:23.720
So just get in the habit of every time you see one of those arrow operators.

66
00:04:23.800 --> 00:04:25.660
Just double checking yourself.

67
00:04:25.810 --> 00:04:30.820
And I've learned that the hard way unfortunately so we got on components begin overlap with as I said

68
00:04:30.820 --> 00:04:36.070
is a dynamic event which means that we can do an ADD dynamic.

69
00:04:36.090 --> 00:04:42.100
Now you'll notice this is an in the auto complete because they it's a it's a macro somewhere in the

70
00:04:42.100 --> 00:04:43.020
engine code.

71
00:04:43.120 --> 00:04:47.650
It unfortunately does what I complete in a rather awkward way in visual studio so you can have the UNDO

72
00:04:47.950 --> 00:04:54.400
control Z when it tries to autocomplete it that way and then quite simply lets just check out our signature

73
00:04:54.400 --> 00:04:57.270
for and dynamic because sometimes I forget it.

74
00:04:57.420 --> 00:05:06.170
Let's just Google it again and dynamic and dynamic delegates is the one I'm looking for.

75
00:05:06.220 --> 00:05:11.540
You just start to build a Google map of the documentation is what I find.

76
00:05:11.710 --> 00:05:17.590
So we've got to add dynamic has the user object and the function name so the user object.

77
00:05:17.590 --> 00:05:21.340
In this case what it means is the object that we want to call the function on.

78
00:05:21.340 --> 00:05:24.200
In this case it's this simple as that.

79
00:05:24.490 --> 00:05:31.900
And then we want the function the pointer to that function which is going to be to get hold of the address

80
00:05:31.930 --> 00:05:39.610
basically of that function we need the address of operator or the yes the address of operator so it's

81
00:05:39.610 --> 00:05:47.080
going to be this the platform trigger on Carol on on Begin overlap which I'm going to paste in there

82
00:05:47.350 --> 00:05:48.260
close brackets.

83
00:05:48.280 --> 00:05:49.230
Semicolon.

84
00:05:49.420 --> 00:05:51.140
Now that should do the trick.

85
00:05:51.140 --> 00:05:57.070
Let's go ahead and compile and see whether when we go in to that trigger volume we are indeed going

86
00:05:57.070 --> 00:05:59.640
to get our log message out.

87
00:05:59.710 --> 00:06:04.300
It is possible that you will need to move this into begin play instead of the constructor a few students

88
00:06:04.300 --> 00:06:05.940
have had issues with that.

89
00:06:05.950 --> 00:06:09.060
If you aren't seeing the log message then just give that a shot first.

90
00:06:09.070 --> 00:06:15.160
Well good news is that the compile succeeded so let's go into unreal and see if we can trigger something

91
00:06:15.250 --> 00:06:20.130
going into this volume now to avoid having to go through all of the puzzles.

92
00:06:20.200 --> 00:06:22.090
Why can do in this is the needle trick.

93
00:06:22.100 --> 00:06:29.620
As I can click where I want to spawn right click there and I can go play from here in the menu item

94
00:06:29.780 --> 00:06:33.810
that pops up the context menu item and hopefully I should spawn there.

95
00:06:33.820 --> 00:06:34.870
Except that didn't work.

96
00:06:34.870 --> 00:06:37.020
How strange Let me try that again.

97
00:06:37.060 --> 00:06:43.280
Go up to where I want to spawn right click play from here.

98
00:06:43.630 --> 00:06:45.470
Typically that should work.

99
00:06:45.670 --> 00:06:52.220
I know what's going on here is because we've got our man already in the world rather than at a player

100
00:06:52.230 --> 00:06:59.560
starts so if I remove my third person character from the world hopefully that will mean that he's going

101
00:06:59.560 --> 00:07:05.050
to spawn in either to play a start or where I told him to.

102
00:07:05.050 --> 00:07:06.510
So let's try that.

103
00:07:06.520 --> 00:07:07.540
There we go.

104
00:07:07.540 --> 00:07:17.290
So if I walk onto my platform and effort to grab hold of my mouse and go to the output log and just

105
00:07:17.290 --> 00:07:21.220
see where we got our log message.

106
00:07:21.280 --> 00:07:22.710
Nope doesn't look like it.

107
00:07:22.720 --> 00:07:30.670
Now the reason for this is that by default those trigger volumes don't fire those overlap events to

108
00:07:30.730 --> 00:07:32.260
fire the overlap events.

109
00:07:32.260 --> 00:07:37.990
You have to do basically an enabling step now.

110
00:07:38.080 --> 00:07:45.580
One way you can find this out is by going to the BP platform trigger blueprint that we've got as a child

111
00:07:45.580 --> 00:07:50.980
of our platform trigger and we can use that to take a look at some of the properties available on that

112
00:07:51.100 --> 00:07:54.130
trigger volume box Collider.

113
00:07:54.490 --> 00:08:01.210
So if we have a look at that then you will notice that that there is a simulation generates hit events

114
00:08:01.990 --> 00:08:07.540
and a generate overlap events trigger things here.

115
00:08:08.630 --> 00:08:15.590
But it looks like this works should work okay because we've got the component generating overlap events.

116
00:08:15.590 --> 00:08:24.650
So maybe this is a question of having to re compile our blueprint and potentially have to re place it

117
00:08:24.650 --> 00:08:30.980
in the world or reload our map in order to get it to load in.

118
00:08:31.010 --> 00:08:32.470
So let's just check that.

119
00:08:32.480 --> 00:08:40.300
It's enabled on this trigger volume by selecting the track of volume going to its trigger volume its

120
00:08:40.370 --> 00:08:42.590
box Collider component in the details.

121
00:08:42.590 --> 00:08:45.290
Pain in the world in the map.

122
00:08:46.240 --> 00:08:49.720
And go down to the collision and see whether we've got generate overlap events.

123
00:08:49.720 --> 00:08:51.580
Well it does look like we have.

124
00:08:51.940 --> 00:08:58.150
So that does lead me to believe that we may have an issue with it not having reg that the call-backs

125
00:08:58.150 --> 00:09:03.920
yet so I'm going to close down the editor's save the map and load the editor back up again.

126
00:09:04.030 --> 00:09:05.840
Here's my view.

127
00:09:05.860 --> 00:09:07.350
Bring over my folder.

128
00:09:08.220 --> 00:09:08.620
Right.

129
00:09:08.650 --> 00:09:10.510
I've got the new project.

130
00:09:10.510 --> 00:09:11.680
Here it is.

131
00:09:11.740 --> 00:09:14.580
And let me launch up that you project again.

132
00:09:15.650 --> 00:09:20.770
Now you may want to pause while that you project loads it can take a little bit of time.

133
00:09:21.800 --> 00:09:30.620
Okay let's see if now playing from our vantage point we can get on that trigger pad and make it cause

134
00:09:30.650 --> 00:09:33.280
a log message so I'm on the trigger pad now.

135
00:09:34.060 --> 00:09:34.890
And let's see.

136
00:09:34.890 --> 00:09:38.200
I'm going to effort here go into my output log.

137
00:09:38.310 --> 00:09:38.980
Hurrah.

138
00:09:39.000 --> 00:09:45.960
It's warning activated so it does look like the problem there was with the collider not having been

139
00:09:45.960 --> 00:09:53.580
set up because we did it in the in the constructor and the constructor doesn't by default run every

140
00:09:53.580 --> 00:09:56.880
time you hit play because the map is already loaded.

141
00:09:57.150 --> 00:09:57.440
Okay.

142
00:09:57.450 --> 00:09:59.810
So that sheds some light on that.

143
00:09:59.970 --> 00:10:04.830
So now what we want to do is set that up for on end overlap as well.

144
00:10:04.830 --> 00:10:07.030
And that's going to be your challenge.

145
00:10:07.050 --> 00:10:11.790
So here we go it should be a fairly simple repetition of what we've just done.

146
00:10:11.790 --> 00:10:14.400
Register for end overlap events.

147
00:10:14.550 --> 00:10:20.820
First off well basically repeating the steps that we've got check with a log message so when any overlap

148
00:10:20.820 --> 00:10:26.490
happens then puts a log message in there and then remember to reload the map because we're doing this

149
00:10:26.490 --> 00:10:29.790
in the constructor and it doesn't always reload things for you.

150
00:10:29.970 --> 00:10:30.570
Okay.

151
00:10:30.720 --> 00:10:31.900
Pause video have a go.

152
00:10:35.330 --> 00:10:38.750
Okay Welcome back let's give this a shot.

153
00:10:38.750 --> 00:10:45.020
So the first things first is I'm going to set up our call back now.

154
00:10:45.080 --> 00:10:46.240
What is the call-back.

155
00:10:46.240 --> 00:10:48.760
I hear you scream in anguish.

156
00:10:48.830 --> 00:10:53.640
It's another one of those really hard and long ones but it's on component begin overlap.

157
00:10:53.780 --> 00:11:01.190
Similar to that it's on component end overlap so let's Google for component end overlap and find that

158
00:11:01.220 --> 00:11:04.190
documentation that we can use as a starting point.

159
00:11:04.190 --> 00:11:12.550
So on that end overlap we can take it signature we can go over to Visual Studio.

160
00:11:13.470 --> 00:11:16.190
And to the head a file for platform trigger.

161
00:11:17.040 --> 00:11:26.340
And then on right at the bottom just after on overlap begin we are going to do a u function.

162
00:11:27.000 --> 00:11:32.090
Again avoid a return type and paste in that signature.

163
00:11:33.090 --> 00:11:35.940
Has Ah so got any overlap function.

164
00:11:35.940 --> 00:11:44.550
Now let's go to the C++ and implement it so again return type void a platform trigger you know the drill

165
00:11:44.550 --> 00:11:48.870
code along colon then the signature new line curly braces.

166
00:11:49.020 --> 00:11:55.320
And I'm going to copy and paste the log message from above rather than wearing out my fingers and it's

167
00:11:55.320 --> 00:11:59.250
going to be deactivate because that's what's going to happen we're going to be activating the platform

168
00:11:59.250 --> 00:12:01.070
we're going to be deactivating the platform.

169
00:12:01.440 --> 00:12:01.900
Okay.

170
00:12:01.910 --> 00:12:05.090
Now time to register that call back again.

171
00:12:05.100 --> 00:12:13.500
So copy and paste my trigger volume on component begin overlap add dynamic blah blah blah and do a second

172
00:12:13.500 --> 00:12:18.960
one of those except it's not going to be on competitive overlap anymore it's going to be on component.

173
00:12:19.750 --> 00:12:27.780
End overlap wherever that is and then we get now more or less the same except we want the function name

174
00:12:27.780 --> 00:12:30.440
for end rather than for big gain.

175
00:12:30.510 --> 00:12:33.240
So it's all just a slightly shorter line.

176
00:12:33.240 --> 00:12:37.720
Now let's go ahead and build that and see if it's going to work.

177
00:12:37.800 --> 00:12:42.180
And while we do that we might as well go and quit the Ed because we know that we're going to have to

178
00:12:42.180 --> 00:12:49.920
reload the map anyway so let's just get it compiling and get that compilation finished and take that

179
00:12:49.920 --> 00:12:50.870
compart completed.

180
00:12:50.870 --> 00:12:57.060
We didn't get our usual billing sound because the editor was not open so let's open up the editor once

181
00:12:57.060 --> 00:13:03.000
more and hopefully these constructors will get called and we will have a registered event for any overlap

182
00:13:03.000 --> 00:13:07.680
and we will be able to see the log message for both activate and deactivate So when we move in activate

183
00:13:07.980 --> 00:13:13.980
when we work out deactivate and that's what we're going to hook into enabling and disabling our platforms

184
00:13:13.980 --> 00:13:15.380
in the next lecture.

185
00:13:15.540 --> 00:13:20.680
So almost there towards getting active pressure pads enabled.

186
00:13:21.090 --> 00:13:25.380
Okay Ed up and launched Lets go and stand on those pressure pads.

187
00:13:25.530 --> 00:13:27.700
I'm going to right click play from here.

188
00:13:28.020 --> 00:13:35.370
And here I am stand on the pressure pad activated get off deactivated on activated off deactivated and

189
00:13:35.400 --> 00:13:38.400
I could carry on ad nauseum.

190
00:13:38.580 --> 00:13:43.710
Let's go and try out the other pression pad remember that we've got to in this world you may have more

191
00:13:43.720 --> 00:13:44.770
you might have less.

192
00:13:44.970 --> 00:13:49.030
I'm going to right click again and play from here on the other side of the world.

193
00:13:49.140 --> 00:13:56.760
And again the log messages are working as expected hasar we have set up our triggering call-backs in

194
00:13:56.760 --> 00:13:57.310
the next lecture.

195
00:13:57.310 --> 00:14:03.460
We're going to use them to activate and deactivate our moving platforms and I will see you there.
