WEBVTT
1
00:00:04.900 --> 00:00:05.950
Okay welcome back.

2
00:00:05.950 --> 00:00:07.390
We're going to give this shot.

3
00:00:07.390 --> 00:00:11.430
So first off let's go and do the menu instance bit.

4
00:00:11.470 --> 00:00:18.910
So the basically the best practice I was hinting at is that we should be using setter's rather than

5
00:00:18.910 --> 00:00:22.860
just setting a menu interface pointer generally good idea.

6
00:00:22.860 --> 00:00:27.760
So let's go over to the head a file create ourselves a public method.

7
00:00:28.380 --> 00:00:30.700
So first create a public section.

8
00:00:33.260 --> 00:00:42.870
And in there I'm going to have a void method called set menu interface which takes a menu interface

9
00:00:42.870 --> 00:00:43.950
pointer.

10
00:00:45.740 --> 00:00:51.400
Called menu interface or yes many interface would do just fine.

11
00:00:53.810 --> 00:00:57.950
And I'm going to go over to my C++ to implement this.

12
00:00:57.950 --> 00:01:06.410
So let's copy that signature go into the C++ do after initialize I think is the best place to do this

13
00:01:06.760 --> 00:01:12.170
go implement with you main menu namespace.

14
00:01:14.120 --> 00:01:17.500
Put curly brackets in place and it's going to be very simple.

15
00:01:17.500 --> 00:01:23.550
It's going to be this arrow menu interface equals menu interface.

16
00:01:23.550 --> 00:01:28.700
Now the reason I used this arrow instead of just using me and the interface as you might be able to

17
00:01:28.700 --> 00:01:34.400
guess is that the name many interface in this method is ambiguous.

18
00:01:34.400 --> 00:01:39.590
You cant tell whether its the property of the class or whether it is the thing being passed in.

19
00:01:39.590 --> 00:01:40.820
So just to disambiguate.

20
00:01:40.850 --> 00:01:48.390
I use this arrow of many interface to set the internal representation of many interface.

21
00:01:48.410 --> 00:01:57.610
Now this means hopefully means that if I go in to my game instance dot C++ which should be here somewhere

22
00:01:57.620 --> 00:02:01.960
I dont think Ive got it open so I'm going to have to go and open up our puzzle platform game instance

23
00:02:01.980 --> 00:02:06.220
C++ and what we should be able to do in here.

24
00:02:06.260 --> 00:02:11.660
We are creating an instance of a user widget at the moment but we know better.

25
00:02:11.660 --> 00:02:15.200
We know that its not just a you use a widget not any old you use a widget.

26
00:02:15.350 --> 00:02:17.200
It is in fact a main menu.

27
00:02:17.210 --> 00:02:20.970
So what we can do is we can go ahead and include.

28
00:02:21.660 --> 00:02:27.380
In this case we are going to be including something local so it's going to include menu system.

29
00:02:28.230 --> 00:02:29.380
Forward slash.

30
00:02:29.550 --> 00:02:33.770
And then it is going to be the main menu.

31
00:02:33.780 --> 00:02:35.460
Dot H.

32
00:02:35.460 --> 00:02:41.970
And that means we can use when creating our widget we can use the class you main menu.

33
00:02:44.100 --> 00:02:48.430
And we can use that for the pointer as well obviously implements everything.

34
00:02:48.450 --> 00:02:50.170
But the main menu does.

35
00:02:50.430 --> 00:02:57.150
And then when we've finished setting up and adding to the viewport and everything then showing the cursor

36
00:02:57.570 --> 00:03:03.290
then we can say to that menu go to menu arrow and do a set.

37
00:03:04.360 --> 00:03:06.540
Menu interface.

38
00:03:06.700 --> 00:03:10.330
And what do we set it to where we just set it to ourselves to this.

39
00:03:10.330 --> 00:03:17.470
The current game instance and that should do the trick because our game is this does implement the eye

40
00:03:17.590 --> 00:03:18.700
menu interface.

41
00:03:18.700 --> 00:03:23.410
Now at the moment it hasn't quite caught up for some reason compellation I don't know but if we go ahead

42
00:03:23.410 --> 00:03:27.210
and compile it should tell us whether this is working okay or whether it's not.

43
00:03:28.410 --> 00:03:31.800
Well it compiles successfully so that tells me that it is working.

44
00:03:31.800 --> 00:03:36.420
Let's go over into the unreel editor and see whether we can actually use this to host.

45
00:03:36.420 --> 00:03:39.380
So let's go ahead and play this level.

46
00:03:40.700 --> 00:03:46.330
And sure enough it has failed with a nice crash always a good sign.

47
00:03:48.300 --> 00:03:53.460
Now I think that was just a freak event so I'm going to go ahead and launch the editor again and launch

48
00:03:53.530 --> 00:03:54.320
again.

49
00:03:54.360 --> 00:03:57.620
And here we've got our main menu working just fine.

50
00:03:57.660 --> 00:04:01.850
So I think it was just a one off because we changed so much about the game instance.

51
00:04:01.860 --> 00:04:04.150
Now let's go ahead and click host.

52
00:04:04.230 --> 00:04:10.260
And sure enough we are hosting in our very own game very happy that that's worked.

53
00:04:10.260 --> 00:04:12.970
I can't play my game yet we're going to be figuring out why that is.

54
00:04:13.110 --> 00:04:14.120
At a later date.

55
00:04:14.130 --> 00:04:18.910
But for now it is definitely doing something with our button.

56
00:04:19.140 --> 00:04:23.790
So there's one list last little bit of the challenge which is what happens if the interface isn't fully

57
00:04:23.790 --> 00:04:24.770
implemented.

58
00:04:24.990 --> 00:04:30.450
Well the way I'm going to go ahead and test this is by going to our menu interface dot H and adding

59
00:04:30.450 --> 00:04:38.800
in a new function that I know doesn't exist so it's just going to be called Virtual void foobar.

60
00:04:40.750 --> 00:04:43.120
And it's going to be equal to zero.

61
00:04:43.330 --> 00:04:46.030
And I'm going to go ahead save that and build.

62
00:04:46.090 --> 00:04:49.000
Now we don't have a foobar method on our game instance.

63
00:04:49.000 --> 00:04:55.480
So I would expect this not to work because it no longer conforms to the interface and it would be an

64
00:04:55.510 --> 00:05:01.990
error if it managed to compile because then at run time when our main menu potentially calls foobar

65
00:05:02.260 --> 00:05:09.220
on game instance then indeed everything will be Foobar and everything will go up in flames because that

66
00:05:09.490 --> 00:05:11.560
method doesn't actually exist.

67
00:05:11.650 --> 00:05:16.870
But fortunately our compiler does catch it so if we go to our output logs you can see the kind of error

68
00:05:17.170 --> 00:05:19.870
that you will be getting.

69
00:05:19.870 --> 00:05:25.600
You can see that it's saying on our first error line that you puzzle platforms game instance cannot

70
00:05:25.660 --> 00:05:33.970
instantiate abstract class due to following members and then it says void you interface foo but void

71
00:05:34.000 --> 00:05:34.970
is abstract.

72
00:05:35.110 --> 00:05:35.940
Indeed it is.

73
00:05:35.940 --> 00:05:38.950
It is not implemented it is pure virtual It is abstract.

74
00:05:38.950 --> 00:05:44.170
These are all synonyms for each other and so our solution is to remove foobar.

75
00:05:44.170 --> 00:05:50.530
But your other solution would be to actually implement foobar in the game instance and that compile

76
00:05:50.650 --> 00:05:55.510
error gives you the heads up that you haven't fully implemented your interface.

77
00:05:55.540 --> 00:06:01.090
Congratulations I think we fully grokked interfaces at this stage and in the next lecture we will be

78
00:06:01.090 --> 00:06:06.700
seeing a little bit more about the menu system and how to get all that working fully once we started

79
00:06:06.700 --> 00:06:07.740
hosting games.
