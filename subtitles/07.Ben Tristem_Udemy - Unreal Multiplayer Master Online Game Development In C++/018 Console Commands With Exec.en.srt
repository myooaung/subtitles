1
00:00:04,530 --> 00:00:05,930
Hello and welcome in this lecture.

2
00:00:05,940 --> 00:00:12,000
We are going to be learning how to implement our own custom console commands so that when we open up

3
00:00:12,000 --> 00:00:17,730
a console like this we can type in a command such as host and get a message back at the top.

4
00:00:17,730 --> 00:00:20,760
We can even make it do stuff but we haven't made it do anything just yet.

5
00:00:20,850 --> 00:00:27,600
And I can do console commands with arguments as well such as join and I can join for example that's

6
00:00:27,680 --> 00:00:32,220
using while the previous commands that I've done I can join an IP address and it says that it's joining

7
00:00:32,220 --> 00:00:33,270
that IP address.

8
00:00:33,270 --> 00:00:34,040
Fantastic.

9
00:00:34,200 --> 00:00:36,820
And also going to see how it can do other cool things.

10
00:00:36,960 --> 00:00:39,410
As you will just see in a minute.

11
00:00:39,420 --> 00:00:43,710
So let's dive in and see how these console commands work and how it can be implemented.

12
00:00:43,860 --> 00:00:48,630
And you might even want to use them to implement cheats in your game.

13
00:00:48,630 --> 00:00:50,070
Let's dive in.

14
00:00:50,070 --> 00:00:55,140
So let's quickly overview once more what the console is so that we can understand how we are going to

15
00:00:55,140 --> 00:00:56,280
be using it.

16
00:00:56,400 --> 00:01:05,160
Go ahead and hit play in a stand alone in a new edita Window plane and then I am going to go and hit

17
00:01:05,190 --> 00:01:11,370
the till the key or the one underneath the escape key in your different on different keyboards.

18
00:01:11,370 --> 00:01:16,150
And here we've got at the bottom of our game the console show up before I hit Tilda twice.

19
00:01:16,350 --> 00:01:23,100
Then it shows up with basically a few things like messages that can show up as well as previous command

20
00:01:23,100 --> 00:01:31,500
history so I can use the if I had done some previous commands like these then you can see going with

21
00:01:31,500 --> 00:01:38,040
the up and down arrow goes through the previous commands I've executed very much like any old terminal.

22
00:01:38,330 --> 00:01:43,590
Okay so what we're going to do here is execute is create some of our own commands.

23
00:01:43,590 --> 00:01:49,350
You can see that when we start typing as some auto complete commands some of them have got arguments

24
00:01:49,410 --> 00:01:50,220
as well.

25
00:01:50,220 --> 00:01:56,370
So we could do things they like change size and then and give it a float it seems so maybe twenty three.

26
00:01:56,370 --> 00:02:01,770
What does that do that has done something really weird to my characters change the size of my character

27
00:02:01,800 --> 00:02:02,490
by the looks of it.

28
00:02:02,490 --> 00:02:03,930
I changed the size to one.

29
00:02:04,140 --> 00:02:05,790
Let's see what's going to happen there.

30
00:02:05,790 --> 00:02:07,260
He goes back to normal size.

31
00:02:07,300 --> 00:02:08,970
I change the size to two.

32
00:02:09,180 --> 00:02:10,830
He becomes double size.

33
00:02:10,830 --> 00:02:15,930
So these are kind of the basis of being able to do cheat style commands.

34
00:02:15,930 --> 00:02:22,320
This is very weird and his large and running around and generally that doesn't work very well but you

35
00:02:22,320 --> 00:02:28,050
can see how you could use this to create cheats and it's going to be how without implementing user interface

36
00:02:28,350 --> 00:02:36,390
we can actually have some interaction with a user interface type class.

37
00:02:36,690 --> 00:02:40,710
So implementing these types of command is actually really easy.

38
00:02:40,710 --> 00:02:46,830
All you got to do is go over in to your class and go.

39
00:02:46,920 --> 00:02:52,070
I think we're going to do it in the try to do the game instance as a starting point.

40
00:02:52,140 --> 00:02:57,890
You go to your head a file and all you have to do there is create a new function.

41
00:02:59,160 --> 00:03:02,810
And what I'm going to use as an example is the you function for host.

42
00:03:02,940 --> 00:03:04,190
Hosting a server.

43
00:03:05,190 --> 00:03:09,890
And all you've got to do is put in the you function properties exec.

44
00:03:10,810 --> 00:03:15,900
Like so we'll use it with a capital T although I don't think it matters.

45
00:03:15,900 --> 00:03:20,580
And if you go ahead and create the implementation for host.

46
00:03:21,260 --> 00:03:23,620
Go to your C++ file.

47
00:03:24,560 --> 00:03:26,530
And do the relevant things.

48
00:03:26,540 --> 00:03:34,910
Copy the class namespace and add curly braces instead of the semicolon as you are well aware of by now

49
00:03:35,410 --> 00:03:36,020
then.

50
00:03:36,050 --> 00:03:41,780
Well we can do that we can go ahead and build and we'll see how a console command appears called host

51
00:03:41,890 --> 00:03:45,840
and will be able to auto complete that console command.

52
00:03:45,890 --> 00:03:50,670
But this has worked because we've done it on the game in the science class.

53
00:03:50,780 --> 00:03:55,400
What other classes are eligible for us to put X deck functions on.

54
00:03:55,430 --> 00:03:57,130
So let's take a look at this list.

55
00:03:57,140 --> 00:03:59,860
The first thing is player controllers.

56
00:03:59,900 --> 00:04:07,370
So basically the idea is that these commands come in through a single player controller and it will

57
00:04:07,400 --> 00:04:12,230
execute on the play a controller who is actually typing the command So that's one thing you want to

58
00:04:12,920 --> 00:04:16,290
maybe change the size of a certain player.

59
00:04:16,310 --> 00:04:21,380
Change the controls for one particular player and you can add a command on a player control and it'll

60
00:04:21,410 --> 00:04:27,020
go straight to that relevant player controller and then obviously things are possessed by that player

61
00:04:27,020 --> 00:04:27,470
controller.

62
00:04:27,470 --> 00:04:31,880
It trickles down to them too so if you want to change the size of a pawn like we just did then when

63
00:04:31,880 --> 00:04:35,640
you type that in it only affects the size of your own porn Hard's.

64
00:04:35,660 --> 00:04:40,970
Again the ones attached to the relevant player controllers and then things like cheat managers.

65
00:04:40,970 --> 00:04:44,780
So this is where we're starting to go into more global things where it trickles up into more global

66
00:04:44,780 --> 00:04:50,910
stuff cheap managers if you know how to create them and what they are game modes game instances.

67
00:04:50,910 --> 00:04:53,290
Again we're in the Global Domain now.

68
00:04:53,300 --> 00:04:57,170
It's kind of trickled up from the play controller into more global stuff which is what we're going to

69
00:04:57,170 --> 00:05:00,800
be using the hosting and for joining games.

70
00:05:00,860 --> 00:05:03,730
We're going to be doing in the game instance as we've already seen.

71
00:05:06,510 --> 00:05:10,000
Now we've created our own host.

72
00:05:10,170 --> 00:05:18,030
And what I want to do is go ahead and log this out to the screen rather than to the console.

73
00:05:18,030 --> 00:05:20,690
Previously we've been doing things for the console but that's not going to work.

74
00:05:20,700 --> 00:05:25,560
If you're giving this to your friend and they want to see some feedback you're going to want to actually

75
00:05:25,560 --> 00:05:28,010
log out onto the games screen itself.

76
00:05:28,710 --> 00:05:35,070
Now to do this let's go and have a look for some possibilities which is go and google for search terms

77
00:05:35,070 --> 00:05:37,640
like logging to the screen in unreel.

78
00:05:37,720 --> 00:05:43,540
Then one of the results here is from the unreal Wicky and it's got lots of examples of how you can use

79
00:05:43,540 --> 00:05:44,200
a Yule log.

80
00:05:44,220 --> 00:05:46,280
But what I'm interested is towards the bottom.

81
00:05:46,320 --> 00:05:53,940
Something called ADD ON SCREEN debug message and it's got some examples here of how you can use these

82
00:05:53,940 --> 00:05:55,040
debug messages.

83
00:05:55,240 --> 00:05:57,780
Now it's using something called the G engine.

84
00:05:57,780 --> 00:06:01,640
Now this is a pointer to an engine object.

85
00:06:01,650 --> 00:06:03,120
Let's go ahead and have a go.

86
00:06:03,120 --> 00:06:09,360
If we see if we can get a hold of this ourselves so we're in the host method of our game instance and

87
00:06:09,390 --> 00:06:12,830
I want to get hold of the G instance object.

88
00:06:12,900 --> 00:06:19,110
But one thing about this if we go and have a look at its documentation or its.

89
00:06:20,530 --> 00:06:24,170
Just yeah just go and look at its documentation was auto complete settings.

90
00:06:24,340 --> 00:06:28,920
You will find that it says the G engine.

91
00:06:29,100 --> 00:06:32,320
At the moment say muchy engine is UN identified.

92
00:06:32,540 --> 00:06:33,900
That's a bit strange isn't it.

93
00:06:33,970 --> 00:06:34,540
Okay.

94
00:06:34,540 --> 00:06:39,620
Well one other way that we can do it is by doing a get engine instead.

95
00:06:39,640 --> 00:06:45,340
Engine is a method on the game instance so it doesn't exist everywhere but it does exist on this game

96
00:06:45,370 --> 00:06:51,130
instance and that gave us an engine object a new engine I believe.

97
00:06:51,190 --> 00:06:55,320
So a new engine pointer and I'll store this in a.

98
00:06:56,090 --> 00:06:58,520
Variable called engine well enough.

99
00:06:58,520 --> 00:07:03,830
Now one thing about this is the engine can be null at times and we don't want to cause a crash when

100
00:07:03,830 --> 00:07:04,730
that happens.

101
00:07:04,730 --> 00:07:14,900
So I'm going to put my no return expansion for engine here to make sure that we've not got a null engine

102
00:07:15,710 --> 00:07:21,510
and then we can use the arrow operator on said engine to see what is available.

103
00:07:21,500 --> 00:07:23,840
You'll notice there's nothing available at the minute.

104
00:07:23,870 --> 00:07:30,670
And that's because we need the relevant had a file so let's go ahead and look at the new engine documentation.

105
00:07:30,680 --> 00:07:38,870
I've already got it in my history and we can go to the bottom of this file of this page and see that

106
00:07:39,230 --> 00:07:42,620
the head of we need is engine for search engine dot H.

107
00:07:42,650 --> 00:07:47,750
So let's go ahead and include that at the top of the file again leaving a bit of a space between our

108
00:07:47,750 --> 00:07:51,600
includes and the includes from the engine.

109
00:07:52,020 --> 00:07:52,300
Okay.

110
00:07:52,310 --> 00:07:54,110
Now arrow should work.

111
00:07:54,110 --> 00:07:59,270
Once auto complete has caught up but you can also go and look at the documentation which I just shared

112
00:07:59,330 --> 00:08:01,440
with you and is in the results.

113
00:08:02,030 --> 00:08:08,930
And here in engine what we can do is we should be able to find a add on screen debug message or can

114
00:08:08,930 --> 00:08:15,950
just look for message or at on-screen debug message and then we can have a look at what is this built

115
00:08:15,950 --> 00:08:18,890
up of what are the arguments to it.

116
00:08:19,250 --> 00:08:24,620
Well for that I'm also going to look at the documentation for ad on-screen debug message which can be

117
00:08:24,620 --> 00:08:28,360
found from the you engine docs page.

118
00:08:28,550 --> 00:08:34,070
Let's go and search for add on screen debug message and was going to include this as a separate link

119
00:08:34,490 --> 00:08:36,260
for you folks.

120
00:08:36,260 --> 00:08:40,520
And you can see it's got some quite in-depth documentation here.

121
00:08:40,520 --> 00:08:46,280
Basically what we're saying is that the first argument there if it's a minus one or a zero tells us

122
00:08:46,280 --> 00:08:51,440
whether we want to overwrite the existing message or always add a new one.

123
00:08:51,440 --> 00:08:56,810
The second argument gives us the amount of time the message as Dana screen third argument the colour

124
00:08:56,810 --> 00:08:57,820
of said message.

125
00:08:57,950 --> 00:09:01,120
And the fourth argument finally the text of said message.

126
00:09:01,120 --> 00:09:07,030
So let's go ahead and give this a little shot who got an on screen message.

127
00:09:07,040 --> 00:09:12,620
I'm going to make it replace the last message so it's going to be zero.

128
00:09:12,650 --> 00:09:15,580
I'm going to keep it on screen for two seconds.

129
00:09:15,620 --> 00:09:18,720
I'm going to give it a display colour of f colour.

130
00:09:20,150 --> 00:09:21,210
Long calon.

131
00:09:22,020 --> 00:09:24,320
And it's going to be colour green.

132
00:09:24,980 --> 00:09:29,990
Because I want to say access we've hosted and then it takes an edge string which we can make with the

133
00:09:29,990 --> 00:09:39,410
text macro like so and I can then call it just hosting like that and put semicolon at the end.

134
00:09:39,410 --> 00:09:43,910
This time it's important they have SEMICON go ahead build and see if that has worked out whether we

135
00:09:43,910 --> 00:09:50,930
can actually call the host command and whether we can indeed see the result of this on screen debug

136
00:09:51,020 --> 00:09:52,400
message.

137
00:09:52,400 --> 00:09:55,220
So build succeeded Let's go and see this in action.

138
00:09:55,220 --> 00:09:56,600
I'm going to go ahead play.

139
00:09:56,750 --> 00:10:04,850
I open up the console start typing host as you can see is auto completing to host there by just hit

140
00:10:04,850 --> 00:10:06,790
tab to finish the all to completion.

141
00:10:06,800 --> 00:10:12,960
Hit enter and you can see our log message comes up on screen in Green saying house doing fantastic.

142
00:10:12,980 --> 00:10:16,490
It's worked out exactly according to my plan.

143
00:10:16,490 --> 00:10:18,590
Now let's escape out of that game.

144
00:10:18,590 --> 00:10:24,110
And next up we want to deal with arguments and we want to deal with joining in particular so we've got

145
00:10:24,410 --> 00:10:25,760
a message for hosting.

146
00:10:25,760 --> 00:10:29,790
Now we want a console message for joining as well.

147
00:10:30,080 --> 00:10:34,050
Well that is going to be a your challenge to make a join the command.

148
00:10:34,250 --> 00:10:35,680
Repeat the steps for host.

149
00:10:35,690 --> 00:10:41,900
Needless to say it's going to be very similar and a dress argument and see how does this show on the

150
00:10:41,900 --> 00:10:42,400
console.

151
00:10:42,410 --> 00:10:47,840
How is that impacting on the command that you have to type into the console.

152
00:10:47,840 --> 00:10:51,990
Then I would like you to print said address to the screen.

153
00:10:52,190 --> 00:10:57,770
And as a hint to print to the screen you may want to make use of the F string code on code on print

154
00:10:57,800 --> 00:10:58,850
F function.

155
00:10:58,850 --> 00:11:01,570
Have a look at the documentation for that function.

156
00:11:01,850 --> 00:11:03,160
Pause video and have a go.

157
00:11:05,090 --> 00:11:06,020
Okay welcome back.

158
00:11:06,020 --> 00:11:08,330
Let's dive in to creating this.

159
00:11:08,330 --> 00:11:15,710
Join the command so over into my game instance dot H I am going to create a new function.

160
00:11:17,510 --> 00:11:19,390
With exec behaviour.

161
00:11:19,720 --> 00:11:26,920
So we called by the console and it is going to be a void return type no point returning anything when

162
00:11:26,920 --> 00:11:27,930
it's a console.

163
00:11:28,180 --> 00:11:30,720
And it's going to take an F string.

164
00:11:30,730 --> 00:11:39,580
So it's going to be a concert f string reference just so we can avoid copying the string around when

165
00:11:39,580 --> 00:11:40,870
it's unnecessary.

166
00:11:40,930 --> 00:11:42,800
And this is going to be the address.

167
00:11:43,870 --> 00:11:50,580
Put a semicolon after it and remove that horrible indentation that visual studio so insists on having.

168
00:11:50,590 --> 00:11:59,890
And then let's go over to the C plus part to implement paste namespace it and replace it semicolon with

169
00:12:00,040 --> 00:12:01,060
braces.

170
00:12:01,150 --> 00:12:03,730
We've got cells a join come out now.

171
00:12:03,790 --> 00:12:08,500
What's going to happen is we're going to try and print out this log message so I'm going to copy and

172
00:12:08,500 --> 00:12:09,900
paste most of the code.

173
00:12:09,920 --> 00:12:14,470
But the code for checking the engine and then doing the log message.

174
00:12:14,560 --> 00:12:17,850
So this time I'm going to say joining.

175
00:12:18,350 --> 00:12:23,970
And I want to be able to do is format in the address which is an F string so it would be percent.

176
00:12:23,980 --> 00:12:30,040
As for formatting in an address whether you can't just do this in a text macro and you can't just do

177
00:12:30,040 --> 00:12:35,500
this in the add on screen debug message because it wants an F string it doesn't it hasn't got any funny

178
00:12:35,500 --> 00:12:38,830
macros to do anything in particular particularly clever.

179
00:12:38,830 --> 00:12:45,940
So what you can do is as I hinted you can use f string colon colon print F and that allows you to do

180
00:12:45,940 --> 00:12:51,420
the same string formatting that we would usually be doing in a U.S. log messages.

181
00:12:51,760 --> 00:12:59,410
So it allows us to put some arguments after our text and format it so I can put in my address which

182
00:12:59,410 --> 00:13:04,970
again has to be star addressed to get hold of the inner representation of the F string.

183
00:13:05,800 --> 00:13:10,050
And then we can close off and make sure our lab brackets are matched up.

184
00:13:10,060 --> 00:13:14,890
And that seems to be not giving me any red squiggly so I can go ahead and build and hopefully well that's

185
00:13:14,890 --> 00:13:19,270
going to do is give us a joint command with some way to give the address we're gong to have to look

186
00:13:19,300 --> 00:13:25,390
and see what that looks like and then it should print back joining with the address that we typed in.

187
00:13:25,390 --> 00:13:28,540
Let's see if that is indeed going to work out.

188
00:13:29,580 --> 00:13:30,700
Build as complete.

189
00:13:30,700 --> 00:13:33,820
Let's go back on over into one real hit play.

190
00:13:34,140 --> 00:13:35,800
Open up our console.

191
00:13:36,620 --> 00:13:43,340
And then we're going to join and as you can see what it's giving us here is that we need to hit space

192
00:13:43,760 --> 00:13:47,630
and it's telling us that we need to put in a dress and then it's going to be of type String.

193
00:13:47,630 --> 00:13:48,410
This is perfect.

194
00:13:48,410 --> 00:13:54,200
This is exactly what I wanted so I could put in something like 1 2 1 6 8 1..

195
00:13:55,460 --> 00:13:57,670
70 or something like 79.

196
00:13:57,820 --> 00:14:03,320
It turns out I go ahead and join and they go is printing back exactly what I want to join.

197
00:14:03,320 --> 00:14:05,600
That was a little bit short in my opinion.

198
00:14:05,600 --> 00:14:10,310
I think I could do with having that on the screen for 5 seconds but I'm not going to bother recompiling

199
00:14:10,610 --> 00:14:15,140
because I'm sure you can imagine what adding 5 seconds to that add on screen debug message is going

200
00:14:15,140 --> 00:14:16,760
to do perfect.

201
00:14:16,760 --> 00:14:22,760
We've shown how to use exect phone functions and as a bonus we found out how to print things to the

202
00:14:22,760 --> 00:14:26,490
screen from C++ pixels on the back and I'll see in the next lecture.

203
00:14:26,490 --> 00:14:31,240
Oh you're going to make these functions do something more meaningful starting with our join.
