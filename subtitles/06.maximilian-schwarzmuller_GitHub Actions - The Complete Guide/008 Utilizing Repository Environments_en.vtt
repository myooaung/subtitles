WEBVTT
1
00:00:02.130 --> 00:00:03.750
Now, in the previous lecture

2
00:00:03.750 --> 00:00:05.880
we got started with those secrets

3
00:00:05.880 --> 00:00:10.383
and we added two secrets as repository secrets.

4
00:00:11.220 --> 00:00:12.090
Now, you might have seen

5
00:00:12.090 --> 00:00:15.120
that there also are environment secrets,

6
00:00:15.120 --> 00:00:16.440
and you shouldn't see this

7
00:00:16.440 --> 00:00:20.790
if you are on a private repository in the free plan

8
00:00:20.790 --> 00:00:23.550
because environment secrets require

9
00:00:23.550 --> 00:00:26.790
the environment's feature which is only available

10
00:00:26.790 --> 00:00:30.090
in public repositories under the free plan

11
00:00:30.090 --> 00:00:34.230
or private repositories if you're paying for GitHub.

12
00:00:34.230 --> 00:00:37.053
But what are these environments in the first place?

13
00:00:38.070 --> 00:00:40.920
GitHub offers this environments feature

14
00:00:40.920 --> 00:00:43.470
for your actions workflows.

15
00:00:43.470 --> 00:00:45.990
And the idea behind these GitHub environments

16
00:00:45.990 --> 00:00:48.630
is that you attach them to repositories

17
00:00:48.630 --> 00:00:52.890
and workflow jobs can then reference these environments.

18
00:00:52.890 --> 00:00:56.580
And if a job targets such an environment you can,

19
00:00:56.580 --> 00:01:00.240
for example, provide extra configuration to that job.

20
00:01:00.240 --> 00:01:04.230
To be precise, extra secrets that are only available

21
00:01:04.230 --> 00:01:06.690
in a certain environment.

22
00:01:06.690 --> 00:01:10.020
You can also add special protect rules to, for example,

23
00:01:10.020 --> 00:01:12.360
make sure that no matter what the job

24
00:01:12.360 --> 00:01:16.530
and the workflow defines only pushes to certain branches

25
00:01:16.530 --> 00:01:19.800
can lead to a certain job being executed.

26
00:01:19.800 --> 00:01:21.800
But let's take a look at that in action.

27
00:01:22.680 --> 00:01:25.500
Here at the moment on this demo repository,

28
00:01:25.500 --> 00:01:27.210
I have no environments yet

29
00:01:27.210 --> 00:01:31.350
and you can add environments under Settings, Environments.

30
00:01:31.350 --> 00:01:33.330
Now, the idea is that you could, for example,

31
00:01:33.330 --> 00:01:37.050
set up a testing and a staging and a production environment

32
00:01:37.050 --> 00:01:41.700
and maybe all environments provide the same secrets.

33
00:01:41.700 --> 00:01:46.080
The secrets needed here in this workflow file,

34
00:01:46.080 --> 00:01:50.490
these secrets, maybe you provide the same secret names

35
00:01:50.490 --> 00:01:54.480
in all environments but you might have different values.

36
00:01:54.480 --> 00:01:58.080
And that of course, wouldn't be unreasonable to assume.

37
00:01:58.080 --> 00:01:59.940
Because let's say that you are connecting

38
00:01:59.940 --> 00:02:03.300
to a testing database in the test job,

39
00:02:03.300 --> 00:02:06.450
but you wanna connect to a different database

40
00:02:06.450 --> 00:02:11.430
to the staging database in your staging job, for example.

41
00:02:11.430 --> 00:02:14.370
So the same workflow might have different jobs

42
00:02:14.370 --> 00:02:16.590
that should connect to different databases

43
00:02:16.590 --> 00:02:18.570
with different credentials.

44
00:02:18.570 --> 00:02:21.870
Therefore, just having a general MongoDB username

45
00:02:21.870 --> 00:02:25.350
and password secret might not do the trick because you need

46
00:02:25.350 --> 00:02:27.900
different user names and different passwords

47
00:02:27.900 --> 00:02:31.323
depending on which job is currently executing.

48
00:02:32.250 --> 00:02:34.620
And at the moment, we just have general

49
00:02:34.620 --> 00:02:38.790
repository wide secrets which are always the same.

50
00:02:38.790 --> 00:02:42.360
So if you wanted different secret values for different jobs,

51
00:02:42.360 --> 00:02:45.060
we would need to add more secrets here

52
00:02:45.060 --> 00:02:47.043
and give them different names.

53
00:02:48.000 --> 00:02:50.580
With environments you can work around that.

54
00:02:50.580 --> 00:02:53.673
We can create a new environment, for example, testing.

55
00:02:54.810 --> 00:02:57.360
And now in that environment we can add

56
00:02:57.360 --> 00:03:00.600
our environment-specific secrets.

57
00:03:00.600 --> 00:03:05.160
So for example, here, I could again add MongoDB username.

58
00:03:05.160 --> 00:03:07.503
Make sure to not introduce a typo.

59
00:03:09.120 --> 00:03:14.120
And also add another secret, my MongoDB password.

60
00:03:16.230 --> 00:03:18.480
And here I'll grab that password

61
00:03:18.480 --> 00:03:22.290
from my database configuration here.

62
00:03:22.290 --> 00:03:25.470
I will actually auto-generate a new password and use that

63
00:03:25.470 --> 00:03:28.380
and update my user with that new password

64
00:03:28.380 --> 00:03:30.510
and use that value here.

65
00:03:30.510 --> 00:03:34.530
And now in that environment, we're using these secrets.

66
00:03:34.530 --> 00:03:37.050
Now, of course, the question is how that environment

67
00:03:37.050 --> 00:03:38.100
can be used.

68
00:03:38.100 --> 00:03:41.880
And for that, back here in your workflow definition file,

69
00:03:41.880 --> 00:03:45.840
you reference an environment inside of your jobs.

70
00:03:45.840 --> 00:03:47.820
So inside of a specific job,

71
00:03:47.820 --> 00:03:50.820
you can add the environment key.

72
00:03:50.820 --> 00:03:54.690
Not env, that's used for defining environment variables,

73
00:03:54.690 --> 00:03:58.020
but instead environment written like this.

74
00:03:58.020 --> 00:03:59.610
And then the name of the environment

75
00:03:59.610 --> 00:04:01.950
that should be used for this job.

76
00:04:01.950 --> 00:04:05.430
So now the test job uses the testing environment

77
00:04:05.430 --> 00:04:08.460
which is that environment I just created here.

78
00:04:08.460 --> 00:04:09.840
That's the testing environment.

79
00:04:09.840 --> 00:04:11.730
That's the one I just created.

80
00:04:11.730 --> 00:04:13.353
And therefore, this job,

81
00:04:14.220 --> 00:04:17.160
this job here uses this environment.

82
00:04:17.160 --> 00:04:20.250
And therefore, whenever this job accesses my secrets here,

83
00:04:20.250 --> 00:04:22.680
it will be using the secrets that are stored

84
00:04:22.680 --> 00:04:26.070
for this environment and not the general repository

85
00:04:26.070 --> 00:04:28.143
wide secrets which we stored before.

86
00:04:29.100 --> 00:04:32.250
I could indeed delete these repository wide secrets

87
00:04:32.250 --> 00:04:33.990
and the job would still work

88
00:04:33.990 --> 00:04:37.680
because it's using these environment-specific secrets now.

89
00:04:37.680 --> 00:04:39.930
And, of course, you can add multiple environments

90
00:04:39.930 --> 00:04:42.513
and use different environments in different jobs.

91
00:04:43.650 --> 00:04:47.130
Now, adding secrets to environments is one thing.

92
00:04:47.130 --> 00:04:49.530
You can do more with environments.

93
00:04:49.530 --> 00:04:52.530
For example, you can require special reviewers

94
00:04:52.530 --> 00:04:56.280
to make sure that whenever a workflow executes,

95
00:04:56.280 --> 00:04:59.310
a reviewer has to approve that workflow

96
00:04:59.310 --> 00:05:02.010
before it actually starts running.

97
00:05:02.010 --> 00:05:04.950
You could also add a wait timer so that every job

98
00:05:04.950 --> 00:05:08.460
pauses for 15 minutes before it actually starts.

99
00:05:08.460 --> 00:05:11.220
And you can also add some branch protection.

100
00:05:11.220 --> 00:05:13.770
And for example, make sure that a job

101
00:05:13.770 --> 00:05:16.980
that uses this environment will only be executed

102
00:05:16.980 --> 00:05:21.120
if it was triggered based on a branch you selected.

103
00:05:21.120 --> 00:05:24.540
For example, here I could add a deployment branch rule

104
00:05:24.540 --> 00:05:28.260
and say that only if the main branch was part of the event

105
00:05:28.260 --> 00:05:30.750
that triggered the workflow execution,

106
00:05:30.750 --> 00:05:33.240
only if that branch was part of the event,

107
00:05:33.240 --> 00:05:36.603
jobs that referenced the testing environment should execute.

108
00:05:37.440 --> 00:05:41.250
So if I would push to a different branch, to the dev branch,

109
00:05:41.250 --> 00:05:44.280
and that would trigger the workflow execution,

110
00:05:44.280 --> 00:05:46.770
any jobs referencing the testing environment

111
00:05:46.770 --> 00:05:49.380
would not be executed.

112
00:05:49.380 --> 00:05:52.470
And in general, this workflow can be triggered

113
00:05:52.470 --> 00:05:54.360
if I push to the dev branch.

114
00:05:54.360 --> 00:05:59.103
But thanks to this rule, this test job would not execute.

115
00:06:00.150 --> 00:06:01.830
And I will save that rule,

116
00:06:01.830 --> 00:06:04.200
so I will add this rule and keep this change

117
00:06:04.200 --> 00:06:06.603
so that I can also show this to you in action.

118
00:06:07.560 --> 00:06:10.290
So with that, I finish my environment configuration.

119
00:06:10.290 --> 00:06:12.780
I added that rule and my secrets.

120
00:06:12.780 --> 00:06:15.990
I updated the workflow file by adding this environment

121
00:06:15.990 --> 00:06:17.490
to the test job.

122
00:06:17.490 --> 00:06:21.630
And therefore, now if I create a new commit,

123
00:06:21.630 --> 00:06:24.990
add an environment, and I push this,

124
00:06:24.990 --> 00:06:28.680
you will see that here where I'm pushing to the main branch

125
00:06:28.680 --> 00:06:30.960
this will all execute successfully

126
00:06:30.960 --> 00:06:34.260
because it's now using these secrets from that environment

127
00:06:34.260 --> 00:06:36.690
and it's passing this protection rule.

128
00:06:36.690 --> 00:06:40.500
But if I later try the same by pushing to the dev branch,

129
00:06:40.500 --> 00:06:42.360
you will see that it will fail.

130
00:06:42.360 --> 00:06:43.193
But first of all,

131
00:06:43.193 --> 00:06:45.963
let's wait for this execution to finish here.

132
00:06:48.570 --> 00:06:49.920
Here we go.

133
00:06:49.920 --> 00:06:54.000
So the secrets were obviously picked up successfully,

134
00:06:54.000 --> 00:06:57.360
otherwise this wouldn't have finished successfully.

135
00:06:57.360 --> 00:06:59.790
And if I now go back and check out a new branch

136
00:06:59.790 --> 00:07:03.210
which I named dev and I now push this dev branch

137
00:07:03.210 --> 00:07:06.450
to my remote repository, you will see that the workflow

138
00:07:06.450 --> 00:07:10.440
also will be triggered because I have this trigger

139
00:07:10.440 --> 00:07:13.980
added to my workflow configuration file.

140
00:07:13.980 --> 00:07:17.400
But nonetheless, you see that it actually failed

141
00:07:17.400 --> 00:07:21.690
because this first job, this test job wasn't executed

142
00:07:21.690 --> 00:07:24.510
because the branch dev is not allowed to deploy

143
00:07:24.510 --> 00:07:25.890
to the testing environment

144
00:07:25.890 --> 00:07:28.473
due to this protection rule that I added.

