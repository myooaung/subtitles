WEBVTT
1
00:00:02.070 --> 00:00:03.030
Now, let's start

2
00:00:03.030 --> 00:00:05.190
with one of the most important questions

3
00:00:05.190 --> 00:00:08.490
to make sense of this entire course section.

4
00:00:08.490 --> 00:00:12.300
And that question, of course, is, what are containers?

5
00:00:12.300 --> 00:00:14.670
And here for this section,

6
00:00:14.670 --> 00:00:18.660
I mean Docker containers when I say containers,

7
00:00:18.660 --> 00:00:21.450
but most people mean Docker containers

8
00:00:21.450 --> 00:00:23.310
when they say containers.

9
00:00:23.310 --> 00:00:25.830
So, what are these Docker containers?

10
00:00:25.830 --> 00:00:27.570
Though the idea behind containers,

11
00:00:27.570 --> 00:00:30.030
no matter if they're Docker containers or not,

12
00:00:30.030 --> 00:00:31.710
is generally the same

13
00:00:31.710 --> 00:00:35.370
when we're talking about them in the context of development.

14
00:00:35.370 --> 00:00:37.980
Because the idea behind such containers

15
00:00:37.980 --> 00:00:41.010
is that you create packages, you could say,

16
00:00:41.010 --> 00:00:44.700
that contain both your code, your application,

17
00:00:44.700 --> 00:00:46.500
or website code

18
00:00:46.500 --> 00:00:49.410
as well as the environment that's needed

19
00:00:49.410 --> 00:00:53.280
to execute or build that code.

20
00:00:53.280 --> 00:00:56.760
And the advantage of using this container approach

21
00:00:56.760 --> 00:00:59.550
where you build these packages

22
00:00:59.550 --> 00:01:03.900
is that you build a reproducible execution environments

23
00:01:03.900 --> 00:01:08.220
where you always know that this code with its environment

24
00:01:08.220 --> 00:01:11.700
will run in exactly the same way.

25
00:01:11.700 --> 00:01:13.950
Because if you just have your code,

26
00:01:13.950 --> 00:01:17.220
and you then run it on machine A and machine B,

27
00:01:17.220 --> 00:01:21.960
those machines naturally have different configurations,

28
00:01:21.960 --> 00:01:24.690
different operating system versions,

29
00:01:24.690 --> 00:01:27.090
different software installed.

30
00:01:27.090 --> 00:01:30.900
With containers, you have isolated environments,

31
00:01:30.900 --> 00:01:34.710
isolated packages with clearly defined software,

32
00:01:34.710 --> 00:01:38.490
and you have always exactly the same execution environment

33
00:01:38.490 --> 00:01:41.940
no matter where you then run this container.

34
00:01:41.940 --> 00:01:44.643
That's the idea behind such containers.

