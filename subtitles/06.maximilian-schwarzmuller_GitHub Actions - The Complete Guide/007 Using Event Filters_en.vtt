WEBVTT
1
00:00:02.130 --> 00:00:06.480
Now, activity types are one important feature

2
00:00:06.480 --> 00:00:11.010
that helps you control when exactly a workflow executes.

3
00:00:11.010 --> 00:00:15.060
Another important feature are event filters.

4
00:00:15.060 --> 00:00:17.643
So what are event filters?

5
00:00:18.480 --> 00:00:22.860
Well, let's say that we also wanna listen to the push event.

6
00:00:22.860 --> 00:00:25.200
By default, out of the box, this would mean

7
00:00:25.200 --> 00:00:27.030
that whenever a commit is pushed

8
00:00:27.030 --> 00:00:30.273
to any branch, this workflow would be triggered.

9
00:00:31.110 --> 00:00:34.680
Now, especially for a workflow that deploys code

10
00:00:34.680 --> 00:00:37.050
and therefore, updates the website

11
00:00:37.050 --> 00:00:39.240
that's visible to your users

12
00:00:39.240 --> 00:00:44.240
should probably not run for all pushes against all branches.

13
00:00:44.790 --> 00:00:47.010
Instead, it would be reasonable to assume

14
00:00:47.010 --> 00:00:49.650
that only pushes to the main branch

15
00:00:49.650 --> 00:00:52.530
should trigger this workflow.

16
00:00:52.530 --> 00:00:54.750
And that's exactly what you can control

17
00:00:54.750 --> 00:00:56.880
with event filters.

18
00:00:56.880 --> 00:00:59.880
Now, you can also learn more about event filters

19
00:00:59.880 --> 00:01:03.720
in the official documentation under workflow syntax,

20
00:01:03.720 --> 00:01:07.320
and here you'll learn that for a short list

21
00:01:07.320 --> 00:01:11.940
of selected events, there are filters that can be added.

22
00:01:11.940 --> 00:01:15.480
To be precise, GitHub Actions currently supports filters

23
00:01:15.480 --> 00:01:18.600
for pull_request, pull_request_target,

24
00:01:18.600 --> 00:01:22.230
push, and also workflow _call,

25
00:01:22.230 --> 00:01:24.330
which is something I'll get back to later.

26
00:01:25.410 --> 00:01:28.590
Now, for push, we can, for example,

27
00:01:28.590 --> 00:01:32.400
add the branches filter here

28
00:01:32.400 --> 00:01:37.400
or the tags or branches-ignore or tags-ignore filters.

29
00:01:37.440 --> 00:01:40.860
This allows you to only start a workflow

30
00:01:40.860 --> 00:01:44.580
if a push targets a specific branch

31
00:01:44.580 --> 00:01:47.640
or does not target a specific branch

32
00:01:47.640 --> 00:01:49.830
if you wanna check for the opposite

33
00:01:49.830 --> 00:01:53.793
or has a specific tag attached to it so to say.

34
00:01:54.690 --> 00:01:57.870
So if you, for example, only want to run this workflow,

35
00:01:57.870 --> 00:02:00.900
if a push target's the main branch,

36
00:02:00.900 --> 00:02:05.700
you would add the branches filter under the push event,

37
00:02:05.700 --> 00:02:07.890
and this name also is reserved

38
00:02:07.890 --> 00:02:11.250
because it has to be branches as you see here

39
00:02:11.250 --> 00:02:12.603
in the official docs.

40
00:02:13.740 --> 00:02:16.110
So you add this branches filter

41
00:02:16.110 --> 00:02:19.620
and then you specify your list of branches

42
00:02:19.620 --> 00:02:20.580
that should be covered.

43
00:02:20.580 --> 00:02:22.860
For example, the main branch.

44
00:02:22.860 --> 00:02:25.110
This configuration would make sure

45
00:02:25.110 --> 00:02:27.330
that only pushes to the main branch

46
00:02:27.330 --> 00:02:30.000
would trigger this workflow.

47
00:02:30.000 --> 00:02:32.370
And of course, you can add multiple branches here

48
00:02:32.370 --> 00:02:35.550
and you can even use a more flexible notation

49
00:02:35.550 --> 00:02:38.130
and for example, write something like this,

50
00:02:38.130 --> 00:02:42.300
which would mean all branches that start with dev-

51
00:02:42.300 --> 00:02:45.450
and then any other word or combination of characters

52
00:02:45.450 --> 00:02:47.283
of your choice would be covered.

53
00:02:48.150 --> 00:02:51.570
Or something like this,

54
00:02:51.570 --> 00:02:56.070
which means all branches that start with feat/

55
00:02:56.070 --> 00:02:59.940
and having a slash in a branch name is totally fine,

56
00:02:59.940 --> 00:03:03.090
and then any other words or combination of characters

57
00:03:03.090 --> 00:03:06.060
including more slashes thereafter.

58
00:03:06.060 --> 00:03:08.160
That's the difference between one asterisk

59
00:03:08.160 --> 00:03:09.720
and double asterisk.

60
00:03:09.720 --> 00:03:12.990
The double asterisk allows for further slashes

61
00:03:12.990 --> 00:03:15.060
as part of the remaining characters.

62
00:03:15.060 --> 00:03:19.500
The single asterisk means any characters other than slashes.

63
00:03:19.500 --> 00:03:23.160
So this would cover pushes to dev-new

64
00:03:23.160 --> 00:03:25.230
or dev-this-is-new

65
00:03:25.230 --> 00:03:29.010
and this would cover pushes to feat/new

66
00:03:29.010 --> 00:03:33.000
or feat/new/button or anything like this.

67
00:03:33.000 --> 00:03:36.240
And this here would only cover main.

68
00:03:36.240 --> 00:03:39.540
So now pushes to any branch with a name like this

69
00:03:39.540 --> 00:03:41.610
would trigger a workflow.

70
00:03:41.610 --> 00:03:45.670
Pushes to a branch like developer-1

71
00:03:47.280 --> 00:03:49.170
would not trigger this workflow

72
00:03:49.170 --> 00:03:51.420
because this would not be covered

73
00:03:51.420 --> 00:03:53.133
by any of these definitions.

74
00:03:53.970 --> 00:03:56.220
So that's the branches filter.

75
00:03:56.220 --> 00:03:58.800
And this branches filter can also be added

76
00:03:58.800 --> 00:04:02.940
to pull_request, also in addition to the types here.

77
00:04:02.940 --> 00:04:05.970
So you can narrow this down even further.

78
00:04:05.970 --> 00:04:08.340
You could for example, say that this workflow

79
00:04:08.340 --> 00:04:11.910
should run if a push to one of these branches happens

80
00:04:11.910 --> 00:04:14.430
or if a pull request is opened

81
00:04:14.430 --> 00:04:17.430
and targets one of these branches.

82
00:04:17.430 --> 00:04:21.149
You can also add the branches filter here to pull_request

83
00:04:21.149 --> 00:04:23.733
as you also see in the official documentation.

84
00:04:24.660 --> 00:04:27.300
There under pull_request,

85
00:04:27.300 --> 00:04:30.453
you also see that branches can be added here.

86
00:04:31.620 --> 00:04:34.260
And if you know that you wanna run a workflow

87
00:04:34.260 --> 00:04:37.320
for all branches but one specific branch,

88
00:04:37.320 --> 00:04:39.420
or a list of specific branches,

89
00:04:39.420 --> 00:04:41.400
you could use branches-ignore.

90
00:04:41.400 --> 00:04:43.563
Also for the push event.

91
00:04:45.390 --> 00:04:47.580
Now, event filters are therefore useful

92
00:04:47.580 --> 00:04:51.210
and you're not limited to filtering based on branches.

93
00:04:51.210 --> 00:04:53.820
You can also filter based on file paths

94
00:04:53.820 --> 00:04:55.383
with the paths filter.

95
00:04:56.340 --> 00:04:59.100
This is another filter that can be added

96
00:04:59.100 --> 00:05:01.500
to pull requests and pushes,

97
00:05:01.500 --> 00:05:03.483
as you see in the official docs again.

98
00:05:04.500 --> 00:05:06.690
So for push and pull_request,

99
00:05:06.690 --> 00:05:11.690
you can add the paths and the paths-ignore filters.

100
00:05:11.790 --> 00:05:14.820
And this allows you to basically say

101
00:05:14.820 --> 00:05:17.340
that you want to run a workflow

102
00:05:17.340 --> 00:05:20.280
if a push or a pull_request changes files

103
00:05:20.280 --> 00:05:21.660
in a specific path

104
00:05:21.660 --> 00:05:24.720
or with paths-ignore if it changes anything

105
00:05:24.720 --> 00:05:27.333
but files in a specific folder.

106
00:05:28.290 --> 00:05:30.210
And at the bottom of this page,

107
00:05:30.210 --> 00:05:32.070
you also find cheat sheets

108
00:05:32.070 --> 00:05:36.180
with all the syntax, rules and combinations you can use

109
00:05:36.180 --> 00:05:38.280
for specifying your branches

110
00:05:38.280 --> 00:05:41.550
and for specifying your file paths.

111
00:05:41.550 --> 00:05:43.710
But here, for example, we could say

112
00:05:43.710 --> 00:05:45.900
that we want to run this workflow

113
00:05:45.900 --> 00:05:48.780
when we push to the main branch.

114
00:05:48.780 --> 00:05:53.780
But maybe only if we did not change a file

115
00:05:53.880 --> 00:05:56.820
in this github/workflows folder.

116
00:05:56.820 --> 00:06:00.433
This could be done by adding github/workflows/*

117
00:06:01.500 --> 00:06:03.720
as a paths-ignore value here

118
00:06:03.720 --> 00:06:06.480
and this means that this event here,

119
00:06:06.480 --> 00:06:09.150
this push event activates this workflow

120
00:06:09.150 --> 00:06:11.070
if we target one of these branches

121
00:06:11.070 --> 00:06:13.290
but we did not change a file

122
00:06:13.290 --> 00:06:16.620
in the workflows folder in the GitHub folder.

123
00:06:16.620 --> 00:06:19.290
And even if we also changed other files,

124
00:06:19.290 --> 00:06:21.210
as long as at least one file

125
00:06:21.210 --> 00:06:22.830
in this folder changed,

126
00:06:22.830 --> 00:06:24.840
this workflow will not be triggered

127
00:06:24.840 --> 00:06:27.630
because we used paths-ignore here.

128
00:06:27.630 --> 00:06:29.250
If we use just paths here,

129
00:06:29.250 --> 00:06:30.660
it would mean the opposite.

130
00:06:30.660 --> 00:06:33.120
Now this workflow would only be triggered

131
00:06:33.120 --> 00:06:36.540
if at least one file changed in this workflows folder

132
00:06:36.540 --> 00:06:39.330
and we targeted one of these branches.

133
00:06:39.330 --> 00:06:42.060
So that's how you can control in detail

134
00:06:42.060 --> 00:06:44.343
when this workflow will be triggered.

135
00:06:45.360 --> 00:06:49.440
And therefore now if I create a new commit here,

136
00:06:49.440 --> 00:06:53.250
and I say changed workflow,

137
00:06:53.250 --> 00:06:54.690
and I push this,

138
00:06:54.690 --> 00:06:57.390
the workflow should actually not execute

139
00:06:57.390 --> 00:07:00.510
because I changed a file in the workflows folder.

140
00:07:00.510 --> 00:07:03.690
I changed the definition of this workflow.

141
00:07:03.690 --> 00:07:06.120
So therefore now if I push this here,

142
00:07:06.120 --> 00:07:08.070
and we take a look at actions,

143
00:07:08.070 --> 00:07:11.580
we see that no new workflow run was started

144
00:07:11.580 --> 00:07:13.773
because for the reasons I just explained.

