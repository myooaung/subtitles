WEBVTT
1
00:00:02.070 --> 00:00:04.290
Now back here, in this project,

2
00:00:04.290 --> 00:00:07.740
you might have noticed that, at least here on my system,

3
00:00:07.740 --> 00:00:11.550
I never committed this .vscode folder.

4
00:00:11.550 --> 00:00:13.770
Now, you might not even have that folder,

5
00:00:13.770 --> 00:00:16.470
and I mentioned before that you don't need it.

6
00:00:16.470 --> 00:00:18.330
It only contains some settings

7
00:00:18.330 --> 00:00:20.550
for this code editor on my system,

8
00:00:20.550 --> 00:00:22.680
and these are some settings I wanna use

9
00:00:22.680 --> 00:00:24.183
for recording this video.

10
00:00:25.200 --> 00:00:28.260
Now what's important is that this folder

11
00:00:28.260 --> 00:00:31.200
and the settings file inside of it doesn't really belong

12
00:00:31.200 --> 00:00:32.670
to this code project.

13
00:00:32.670 --> 00:00:36.540
These are my specific settings which I wanna use.

14
00:00:36.540 --> 00:00:39.330
If I share that code with other developers,

15
00:00:39.330 --> 00:00:42.603
they don't necessarily need those settings.

16
00:00:43.500 --> 00:00:45.300
So, the offer, I don't wanna include

17
00:00:45.300 --> 00:00:47.850
those settings into my code base

18
00:00:47.850 --> 00:00:49.890
and that's why, thus far,

19
00:00:49.890 --> 00:00:52.950
I always just committed this one single file,

20
00:00:52.950 --> 00:00:56.460
and I never included this settings folder in my commits,

21
00:00:56.460 --> 00:00:58.773
because it's not part of the code base.

22
00:01:00.150 --> 00:01:02.490
Now, let's say that we're adding

23
00:01:02.490 --> 00:01:04.680
a couple of files to this project

24
00:01:04.680 --> 00:01:08.370
and, as before, you'll find these files attached.

25
00:01:08.370 --> 00:01:11.010
Attached you'll find a logo.png file

26
00:01:11.010 --> 00:01:13.620
and a styles.css file.

27
00:01:13.620 --> 00:01:16.890
You'll also find an updated index html file,

28
00:01:16.890 --> 00:01:19.710
which you can use to replace your file with it,

29
00:01:19.710 --> 00:01:21.750
or you just copy this link

30
00:01:21.750 --> 00:01:23.070
and this image element

31
00:01:23.070 --> 00:01:25.920
from the attached index html file into yours.

32
00:01:25.920 --> 00:01:27.123
That's the alternative.

33
00:01:29.550 --> 00:01:33.450
With all of that, the index html file was edited,

34
00:01:33.450 --> 00:01:36.723
and the logo file and the styles file was added.

35
00:01:37.920 --> 00:01:41.190
The advantage is that if you would now reload this website,

36
00:01:41.190 --> 00:01:42.570
it looks much nicer

37
00:01:42.570 --> 00:01:44.250
because of that image that was added

38
00:01:44.250 --> 00:01:45.753
and because of the styling.

39
00:01:46.710 --> 00:01:48.450
But this is not a web development course.

40
00:01:48.450 --> 00:01:49.683
It's just a side note.

41
00:01:50.850 --> 00:01:52.680
Since all these changes were made,

42
00:01:52.680 --> 00:01:57.300
we probably wanna create a new snapshot, a new commit,

43
00:01:57.300 --> 00:02:00.480
and I wanna include the index html file,

44
00:02:00.480 --> 00:02:03.450
the modifications that were made to that file,

45
00:02:03.450 --> 00:02:06.333
just as I wanna include these two new files.

46
00:02:07.470 --> 00:02:10.979
For that, we can open this terminal again,

47
00:02:10.979 --> 00:02:13.140
and we can, of course, run git add

48
00:02:13.140 --> 00:02:15.060
and add index html

49
00:02:15.060 --> 00:02:16.830
and then a white space,

50
00:02:16.830 --> 00:02:20.160
add the styles.css file, a white space,

51
00:02:20.160 --> 00:02:21.783
and then logo.png.

52
00:02:23.100 --> 00:02:25.230
But this isn't getting us anywhere.

53
00:02:25.230 --> 00:02:28.650
This will quickly become a long list of files here,

54
00:02:28.650 --> 00:02:30.900
and especially in even bigger projects,

55
00:02:30.900 --> 00:02:32.220
it would be super annoying

56
00:02:32.220 --> 00:02:35.280
if we had to add all files manually.

57
00:02:35.280 --> 00:02:38.430
It's good that we can add individual files,

58
00:02:38.430 --> 00:02:41.790
because sometimes not all files should be part of a commit,

59
00:02:41.790 --> 00:02:45.420
but you don't always wanna add target files individually.

60
00:02:45.420 --> 00:02:47.640
That's why it's good that git add, for example,

61
00:02:47.640 --> 00:02:49.680
also takes the name of a folder

62
00:02:49.680 --> 00:02:53.640
if you wanted to include all files in a folder.

63
00:02:53.640 --> 00:02:56.610
Or you use a star or a dot

64
00:02:56.610 --> 00:02:58.950
to include all files in your project,

65
00:02:58.950 --> 00:03:02.580
including all files in all subfolders.

66
00:03:02.580 --> 00:03:05.970
However, here I don't wanna run this command just yet,

67
00:03:05.970 --> 00:03:09.183
because it would also include my .vscode folder.

68
00:03:10.350 --> 00:03:11.790
You might not have that folder,

69
00:03:11.790 --> 00:03:13.590
but you might have other system

70
00:03:13.590 --> 00:03:16.353
or editor-specific folders or files.

71
00:03:17.670 --> 00:03:20.190
So I wanna be able to target all files

72
00:03:20.190 --> 00:03:21.960
and easily stage them,

73
00:03:21.960 --> 00:03:24.360
but at the same time, there should be some files

74
00:03:24.360 --> 00:03:26.580
that are always excluded.

75
00:03:26.580 --> 00:03:28.680
And this is such a common scenario

76
00:03:28.680 --> 00:03:30.330
and use case and problem

77
00:03:30.330 --> 00:03:32.550
that Git supports a special file

78
00:03:32.550 --> 00:03:34.530
which you can add to your project,

79
00:03:34.530 --> 00:03:36.780
a .gitignore file.

80
00:03:36.780 --> 00:03:40.080
And this file must be named .gitignore.

81
00:03:40.080 --> 00:03:41.973
The leading dot is important.

82
00:03:43.020 --> 00:03:46.500
This file allows you to specify folder

83
00:03:46.500 --> 00:03:49.170
and file names of folders and files

84
00:03:49.170 --> 00:03:52.563
that should always be ignored when you run git add.

85
00:03:53.610 --> 00:03:56.220
In my case, I would add .vscode here

86
00:03:56.220 --> 00:03:58.590
to tell Git that this folder

87
00:03:58.590 --> 00:04:00.930
and all the files and folders inside of it

88
00:04:00.930 --> 00:04:05.340
should always be ignored when I get at all my files

89
00:04:05.340 --> 00:04:09.003
or any files or folders that include that folder.

90
00:04:10.200 --> 00:04:14.430
I will also add a .DS_Store file here,

91
00:04:14.430 --> 00:04:17.459
because that's a special file that's created on macOS,

92
00:04:17.459 --> 00:04:18.540
which is invisible,

93
00:04:18.540 --> 00:04:20.070
but which I know that exists

94
00:04:20.070 --> 00:04:21.753
and which I also wanna ignore.

95
00:04:22.980 --> 00:04:25.410
With that, I save .gitignore.

96
00:04:25.410 --> 00:04:29.640
In Visual Studio Code, you see that .vscode gets grayed out,

97
00:04:29.640 --> 00:04:32.190
because Visual Studio Code understands

98
00:04:32.190 --> 00:04:33.270
that I'm ignoring this

99
00:04:33.270 --> 00:04:36.003
and that it's not tracked with Git anymore.

100
00:04:37.230 --> 00:04:39.690
And now if I run git add dot,

101
00:04:39.690 --> 00:04:43.470
I will stage all files, all changes in all files,

102
00:04:43.470 --> 00:04:46.170
but .vscode is ignored.

103
00:04:46.170 --> 00:04:48.750
If I run git status, it's also ignored here.

104
00:04:48.750 --> 00:04:51.360
Here I just see that all relevant files

105
00:04:51.360 --> 00:04:53.403
and modifications have been staged.

106
00:04:54.660 --> 00:04:59.660
So therefore, now I can commit and create a new snapshot.

107
00:04:59.820 --> 00:05:03.693
And here I can say added logo and styling.

108
00:05:04.980 --> 00:05:07.410
If I hit enter, this commit is created

109
00:05:07.410 --> 00:05:09.813
and the vscode folder will be ignored.

110
00:05:10.740 --> 00:05:14.190
And that's the last important fundamental piece

111
00:05:14.190 --> 00:05:17.190
of knowledge you need when getting started with Git

112
00:05:17.190 --> 00:05:19.020
if we ignore branches.

113
00:05:19.020 --> 00:05:22.830
Being able to stage and commit multiple files at once

114
00:05:22.830 --> 00:05:26.400
whilst still ignoring some files is crucial,

115
00:05:26.400 --> 00:05:29.703
especially when working on more complex projects.

