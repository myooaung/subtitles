WEBVTT
1
00:00:02.040 --> 00:00:04.920
Now, when it comes to working with data,

2
00:00:04.920 --> 00:00:07.560
in our GitHub Actions Workflows,

3
00:00:07.560 --> 00:00:10.620
there is a broad variety of data definitions

4
00:00:10.620 --> 00:00:12.390
we could be referring to.

5
00:00:12.390 --> 00:00:15.960
But we will start with Job Artifacts here.

6
00:00:15.960 --> 00:00:18.780
And to understand Job Artifacts,

7
00:00:18.780 --> 00:00:21.060
let's take a look at an example Job,

8
00:00:21.060 --> 00:00:24.000
that might be building an app.

9
00:00:24.000 --> 00:00:27.570
So, this Job could be producing the website files,

10
00:00:27.570 --> 00:00:29.970
that are uploaded to a web server,

11
00:00:29.970 --> 00:00:32.159
to a web hosting provider.

12
00:00:32.159 --> 00:00:34.740
But we could also be building a mobile app here,

13
00:00:34.740 --> 00:00:39.060
where we then upload some package to the app stores.

14
00:00:39.060 --> 00:00:42.630
Or we could be producing an executable here,

15
00:00:42.630 --> 00:00:45.360
which we distribute to our users.

16
00:00:45.360 --> 00:00:46.980
So, a desktop application,

17
00:00:46.980 --> 00:00:50.730
that can be executed on their machines, for example.

18
00:00:50.730 --> 00:00:53.006
We could be building anything, but let's assume

19
00:00:53.006 --> 00:00:56.763
that we have a Job that builds, such an app or website.

20
00:00:57.630 --> 00:00:59.850
Of course, if we have such a Job,

21
00:00:59.850 --> 00:01:02.940
this Job will produce an output.

22
00:01:02.940 --> 00:01:06.960
It will produce the website files that should be uploaded,

23
00:01:06.960 --> 00:01:09.270
or the binary executable file

24
00:01:09.270 --> 00:01:11.910
that should be distributed to users,

25
00:01:11.910 --> 00:01:13.170
or that package,

26
00:01:13.170 --> 00:01:15.870
that should be uploaded to app stores.

27
00:01:15.870 --> 00:01:20.700
So, we generate some assets that must be uploaded somewhere,

28
00:01:20.700 --> 00:01:22.890
or distributed somewhere.

29
00:01:22.890 --> 00:01:27.890
And these assets are commonly referred to as Job Artifacts.

30
00:01:28.440 --> 00:01:30.720
That's what a Job Artifacts is.

31
00:01:30.720 --> 00:01:35.700
It's the output, the assets generated by a Job.

32
00:01:35.700 --> 00:01:39.360
And with GitHub Actions, we can upload,

33
00:01:39.360 --> 00:01:43.380
and save those artifacts that are produced by a Job,

34
00:01:43.380 --> 00:01:47.430
so that as a user, as the owner of the Repository,

35
00:01:47.430 --> 00:01:50.670
we could download them manually, thereafter,

36
00:01:50.670 --> 00:01:51.750
to then for example,

37
00:01:51.750 --> 00:01:55.200
take them and upload them to an app store.

38
00:01:55.200 --> 00:01:56.580
But we can also download,

39
00:01:56.580 --> 00:01:59.430
and use them automatically in other Jobs.

40
00:01:59.430 --> 00:02:01.320
If we have a subsequent Job,

41
00:02:01.320 --> 00:02:04.520
that should do something with the produced output.

42
00:02:04.520 --> 00:02:06.450
For example, we could have a Job

43
00:02:06.450 --> 00:02:09.720
that automatically picks up those produced files,

44
00:02:09.720 --> 00:02:13.530
and uploads them to some web hosting provider.

45
00:02:13.530 --> 00:02:17.520
So, Job Artifacts are these outputs generated by Jobs.

46
00:02:17.520 --> 00:02:18.955
And just to be clear,

47
00:02:18.955 --> 00:02:23.955
it's not necessarily, just app binaries and similar files,

48
00:02:24.150 --> 00:02:27.480
we could also have log files that are produced

49
00:02:27.480 --> 00:02:30.720
by a testing Job or anything like that.

50
00:02:30.720 --> 00:02:32.910
But we're talking about files here,

51
00:02:32.910 --> 00:02:35.784
files and folders produced by a Job,

52
00:02:35.784 --> 00:02:38.040
that we want to use in other Jobs,

53
00:02:38.040 --> 00:02:42.150
or manually inspect after the Job finished.

54
00:02:42.150 --> 00:02:45.870
For example, if we had a Job that runs some testing scripts,

55
00:02:45.870 --> 00:02:49.440
and those testing scripts produce some log files,

56
00:02:49.440 --> 00:02:52.500
we might want to take a look at those log files,

57
00:02:52.500 --> 00:02:55.620
as the owner of Repository.

58
00:02:55.620 --> 00:02:57.330
So, that's what artifacts are.

59
00:02:57.330 --> 00:02:58.800
And with GitHub Actions,

60
00:02:58.800 --> 00:03:00.953
we have a way of storing these artifacts,

61
00:03:00.953 --> 00:03:04.950
so that we can then use them manually, or automatically.

62
00:03:04.950 --> 00:03:07.383
And that's what we'll take a closer look at now.

