WEBVTT
1
00:00:02.009 --> 00:00:04.740
Now the last pillar I want to explore here,

2
00:00:04.740 --> 00:00:08.670
is related to Permissions, and Permission issues.

3
00:00:08.670 --> 00:00:10.560
Because, even though we haven't done it

4
00:00:10.560 --> 00:00:12.000
thus far in this course,

5
00:00:12.000 --> 00:00:15.420
you can control which kind of permissions

6
00:00:15.420 --> 00:00:17.790
a Workflow has, and for example,

7
00:00:17.790 --> 00:00:20.460
whether, a Workflow is able to interact

8
00:00:20.460 --> 00:00:23.040
with the issues of a Repository,

9
00:00:23.040 --> 00:00:24.720
or just with the code,

10
00:00:24.720 --> 00:00:27.213
or with something totally different.

11
00:00:28.230 --> 00:00:29.730
And, right now in this course,

12
00:00:29.730 --> 00:00:33.660
we always gave all our workflows full permissions

13
00:00:33.660 --> 00:00:36.750
but that is not something you have to do.

14
00:00:36.750 --> 00:00:39.960
And I got this second Workflow here,

15
00:00:39.960 --> 00:00:41.670
to show you an example,

16
00:00:41.670 --> 00:00:45.300
For setting more restrictive permissions

17
00:00:45.300 --> 00:00:46.170
than you have,

18
00:00:46.170 --> 00:00:47.910
by default.

19
00:00:47.910 --> 00:00:49.410
This Workflow here,

20
00:00:49.410 --> 00:00:51.870
this second example of Workflow,

21
00:00:51.870 --> 00:00:54.330
does in the end, one simple thing.

22
00:00:54.330 --> 00:00:55.920
It also is executed

23
00:00:55.920 --> 00:00:58.200
whenever a new issue is opened.

24
00:00:58.200 --> 00:01:01.140
And then, we check the title of that issue,

25
00:01:01.140 --> 00:01:02.970
here in this if statement,

26
00:01:02.970 --> 00:01:04.830
which also is

27
00:01:04.830 --> 00:01:07.320
a place where we can look

28
00:01:07.320 --> 00:01:09.060
at user generated content

29
00:01:09.060 --> 00:01:10.170
in a secure way,

30
00:01:10.170 --> 00:01:13.560
without executing potentially injected code.

31
00:01:13.560 --> 00:01:14.670
And we simply check

32
00:01:14.670 --> 00:01:17.100
if the title of the issue contains the word 'bug'.

33
00:01:17.100 --> 00:01:18.420
And if that's the case,

34
00:01:18.420 --> 00:01:19.830
we use the curl command

35
00:01:19.830 --> 00:01:22.110
to send a postage TDP request

36
00:01:22.110 --> 00:01:23.700
to the GitHub API,

37
00:01:23.700 --> 00:01:25.020
and there to a path,

38
00:01:25.020 --> 00:01:27.180
which is constructed dynamically

39
00:01:27.180 --> 00:01:30.090
by also injecting the name of the Repository

40
00:01:30.090 --> 00:01:32.670
to which this Workflow belongs,

41
00:01:32.670 --> 00:01:35.250
And then also the number of the issue

42
00:01:35.250 --> 00:01:36.900
and we add a new label,

43
00:01:36.900 --> 00:01:37.890
to the issue.

44
00:01:37.890 --> 00:01:40.860
To be precise, we add the bug label.

45
00:01:40.860 --> 00:01:43.050
Now, I'll get back to this GitHub token thing

46
00:01:43.050 --> 00:01:44.280
in just a second.

47
00:01:44.280 --> 00:01:46.290
In order to see this Workflow in action,

48
00:01:46.290 --> 00:01:50.520
First, I'll go back to my Repository here,

49
00:01:50.520 --> 00:01:53.280
to my GitHub Repository,

50
00:01:53.280 --> 00:01:56.100
and there, if I open a new issue

51
00:01:56.100 --> 00:01:58.560
where I say a new...

52
00:01:58.560 --> 00:02:00.150
book, for example,

53
00:02:00.150 --> 00:02:02.790
You will see that once this is submitted,

54
00:02:02.790 --> 00:02:05.490
again, both Workflows will be triggered.

55
00:02:05.490 --> 00:02:08.070
But now the Permission example Workflow

56
00:02:08.070 --> 00:02:11.760
will actually assign a new bug label to that

57
00:02:11.760 --> 00:02:13.620
newly created issue.

58
00:02:13.620 --> 00:02:15.630
So we can wait for this to finish.

59
00:02:15.630 --> 00:02:17.400
And if we now go back to issues,

60
00:02:17.400 --> 00:02:18.780
we see that now there,

61
00:02:18.780 --> 00:02:20.760
we got this bug label,

62
00:02:20.760 --> 00:02:22.890
and that was added by this Workflow.

63
00:02:22.890 --> 00:02:24.273
So, that's what it does.

64
00:02:25.260 --> 00:02:27.900
Now, this Workflow that adds the bug label

65
00:02:27.900 --> 00:02:31.110
interacts with the GitHub API.

66
00:02:31.110 --> 00:02:35.220
And to be precise, it talks to the issues API

67
00:02:35.220 --> 00:02:38.220
to edit the labels...

68
00:02:38.220 --> 00:02:39.240
of an issue.

69
00:02:39.240 --> 00:02:41.280
That's what it does.

70
00:02:41.280 --> 00:02:42.150
Now, at the moment,

71
00:02:42.150 --> 00:02:44.040
by default, this Workflow

72
00:02:44.040 --> 00:02:46.380
could be doing all kinds of things though

73
00:02:46.380 --> 00:02:48.030
because we're not saying anything

74
00:02:48.030 --> 00:02:50.190
about the Permissions of that Workflow,

75
00:02:50.190 --> 00:02:53.040
or of the jobs in this Workflow.

76
00:02:53.040 --> 00:02:55.290
But you can be more restrictive,

77
00:02:55.290 --> 00:02:58.140
because this Workflow really only needs permission

78
00:02:58.140 --> 00:03:00.060
to interact with issues,

79
00:03:00.060 --> 00:03:02.700
but it does not need permission to interact

80
00:03:02.700 --> 00:03:03.990
with poll requests

81
00:03:03.990 --> 00:03:06.060
or change any actions,

82
00:03:06.060 --> 00:03:08.640
or even use the code of the Repository.

83
00:03:08.640 --> 00:03:11.550
That's all not needed because we're only interested

84
00:03:11.550 --> 00:03:14.100
in the issue that was created here.

85
00:03:14.100 --> 00:03:17.010
And GitHub Actions makes controlling Permissions

86
00:03:17.010 --> 00:03:20.070
for jobs quite easy and straightforward.

87
00:03:20.070 --> 00:03:23.970
Because you can add the special permissions key to a job,

88
00:03:23.970 --> 00:03:27.990
to control the permissions for various kinds of actions

89
00:03:27.990 --> 00:03:31.680
or areas a Workflow could be acting on.

90
00:03:31.680 --> 00:03:34.860
And in our case, it sounds like the issues area

91
00:03:34.860 --> 00:03:36.870
is the important one.

92
00:03:36.870 --> 00:03:37.800
So, therefore,

93
00:03:37.800 --> 00:03:39.720
here, we can go to our job,

94
00:03:39.720 --> 00:03:41.280
to this assigned label job,

95
00:03:41.280 --> 00:03:44.520
because permissions are managed on job level,

96
00:03:44.520 --> 00:03:45.360
to be precise,

97
00:03:45.360 --> 00:03:47.970
you can also add them here,

98
00:03:47.970 --> 00:03:49.230
on Workflow level,

99
00:03:49.230 --> 00:03:51.780
so that they apply to all jobs,

100
00:03:51.780 --> 00:03:53.550
but you either have to do it here

101
00:03:53.550 --> 00:03:55.320
or for a single job.

102
00:03:55.320 --> 00:03:58.560
These are the two areas where you can set permissions.

103
00:03:58.560 --> 00:04:01.680
And then we could set this to read-all

104
00:04:01.680 --> 00:04:03.780
or to even write-all,

105
00:04:03.780 --> 00:04:07.440
if this job really needed permission to interact

106
00:04:07.440 --> 00:04:10.290
with all these areas I just showed you.

107
00:04:10.290 --> 00:04:13.230
So if this job needed access to issues

108
00:04:13.230 --> 00:04:14.490
and the actions,

109
00:04:14.490 --> 00:04:15.510
and the contents,

110
00:04:15.510 --> 00:04:17.160
the code of the Repository,

111
00:04:17.160 --> 00:04:18.690
and all these things,

112
00:04:18.690 --> 00:04:21.240
if our Workflow needed to be able to read

113
00:04:21.240 --> 00:04:23.490
or even change all these things,

114
00:04:23.490 --> 00:04:25.440
you could set permissions to read-all

115
00:04:25.440 --> 00:04:26.610
or write-all.

116
00:04:26.610 --> 00:04:29.070
But typically that's not the case.

117
00:04:29.070 --> 00:04:31.920
And here we could instead add the issues key,

118
00:04:31.920 --> 00:04:33.690
nested below permissions,

119
00:04:33.690 --> 00:04:35.940
and then set this to...

120
00:04:35.940 --> 00:04:36.870
write,

121
00:04:36.870 --> 00:04:40.800
because we definitely need write access here as well.

122
00:04:40.800 --> 00:04:42.930
Now with this permission added,

123
00:04:42.930 --> 00:04:44.670
this Workflow should be able

124
00:04:44.670 --> 00:04:47.190
to successfully edit this issue,

125
00:04:47.190 --> 00:04:49.530
which it does with this post request,

126
00:04:49.530 --> 00:04:50.370
but it, for example,

127
00:04:50.370 --> 00:04:51.780
would not be able

128
00:04:51.780 --> 00:04:54.900
to explore the code of the Repository

129
00:04:54.900 --> 00:04:57.720
or manipulate the actions added

130
00:04:57.720 --> 00:04:58.920
to this Repository,

131
00:04:58.920 --> 00:05:00.573
or do anything like that.

132
00:05:01.500 --> 00:05:02.913
So if I saved this,

133
00:05:04.260 --> 00:05:05.883
I can create a new commit,

134
00:05:07.200 --> 00:05:10.230
changed permissions,

135
00:05:10.230 --> 00:05:11.880
and push this.

136
00:05:11.880 --> 00:05:14.190
And that's achieved with this setting

137
00:05:14.190 --> 00:05:17.040
because if you don't set permissions at all,

138
00:05:17.040 --> 00:05:18.870
then by default,

139
00:05:18.870 --> 00:05:21.180
and I'll show you how to change that default

140
00:05:21.180 --> 00:05:22.013
in a couple of minutes,

141
00:05:22.013 --> 00:05:23.940
but by default, this Workflow

142
00:05:23.940 --> 00:05:26.580
with all its jobs is able to do anything.

143
00:05:26.580 --> 00:05:28.530
It basically has full permissions

144
00:05:28.530 --> 00:05:30.813
or almost full permissions.

145
00:05:31.950 --> 00:05:34.980
As soon as you start adding this permissions key though,

146
00:05:34.980 --> 00:05:37.350
and you set at least one permission,

147
00:05:37.350 --> 00:05:40.590
this means that only what you are setting is granted

148
00:05:40.590 --> 00:05:43.140
and all our permissions are not granted

149
00:05:43.140 --> 00:05:44.250
by default.

150
00:05:44.250 --> 00:05:46.020
So now the default changes

151
00:05:46.020 --> 00:05:48.870
as soon as you start adding permissions.

152
00:05:48.870 --> 00:05:51.690
If you add only the issues permission here,

153
00:05:51.690 --> 00:05:53.490
and set it to read or write,

154
00:05:53.490 --> 00:05:54.540
does not matter,

155
00:05:54.540 --> 00:05:57.510
then all other permissions are not granted.

156
00:05:57.510 --> 00:05:59.310
That's how that works.

157
00:05:59.310 --> 00:06:01.440
So now if I go back here,

158
00:06:01.440 --> 00:06:04.860
I can create a new issue

159
00:06:04.860 --> 00:06:07.290
and name it yet another bug.

160
00:06:07.290 --> 00:06:09.810
And if I do that my Workflows

161
00:06:09.810 --> 00:06:12.510
should of course, start running again.

162
00:06:12.510 --> 00:06:14.610
And the permissions example Workflow

163
00:06:14.610 --> 00:06:17.790
should still finish successfully here,

164
00:06:17.790 --> 00:06:20.820
because all it does is assign a label.

165
00:06:20.820 --> 00:06:22.950
And indeed did.

166
00:06:22.950 --> 00:06:26.040
It added this bug label here.

167
00:06:26.040 --> 00:06:28.470
So regarding the result, nothing changed

168
00:06:28.470 --> 00:06:31.620
but we could argue that the Workflow is now more secure

169
00:06:31.620 --> 00:06:34.020
because we restricted permissions.

170
00:06:34.020 --> 00:06:35.580
And why does this matter?

171
00:06:35.580 --> 00:06:38.340
Well, for example, if you would be vulnerable

172
00:06:38.340 --> 00:06:39.690
to script injection,

173
00:06:39.690 --> 00:06:42.390
those scripts would not be able to do things

174
00:06:42.390 --> 00:06:44.460
that are not allowed by Permissions.

175
00:06:44.460 --> 00:06:47.550
So you have some additional layer of protection,

176
00:06:47.550 --> 00:06:49.800
even though you should of course, try to defend

177
00:06:49.800 --> 00:06:53.310
against Script Injection in the first place.

178
00:06:53.310 --> 00:06:55.860
But even if you don't worry about Script Injection

179
00:06:55.860 --> 00:06:58.380
you also make sure that any actions,

180
00:06:58.380 --> 00:07:00.060
you are using are not doing things

181
00:07:00.060 --> 00:07:01.680
you don't want them to do.

182
00:07:01.680 --> 00:07:05.460
So even if you haven't analyzed all these actions deeply,

183
00:07:05.460 --> 00:07:08.220
which you should, if you don't trust the authors

184
00:07:08.220 --> 00:07:09.720
but if you haven't done that

185
00:07:09.720 --> 00:07:12.900
at least you know what they can theoretically do.

186
00:07:12.900 --> 00:07:15.690
And if you have a job that has these permissions,

187
00:07:15.690 --> 00:07:17.340
then an action wouldn't be able

188
00:07:17.340 --> 00:07:19.620
to suddenly start reading your code

189
00:07:19.620 --> 00:07:21.420
or do anything else.

190
00:07:21.420 --> 00:07:23.490
So adding Permissions does not protect you

191
00:07:23.490 --> 00:07:25.410
against all possible problems,

192
00:07:25.410 --> 00:07:27.630
but it is an additional layer

193
00:07:27.630 --> 00:07:29.673
you should consider implementing.

