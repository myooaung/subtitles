WEBVTT
1
00:00:02.130 --> 00:00:05.190
Now that's it for this course section.

2
00:00:05.190 --> 00:00:07.950
We started with conditional jobs and steps

3
00:00:07.950 --> 00:00:11.640
and you can control step or job execution

4
00:00:11.640 --> 00:00:16.110
with the if field and dynamic expressions as you learned.

5
00:00:16.110 --> 00:00:18.510
That's very useful because in many scenarios

6
00:00:18.510 --> 00:00:22.050
you don't wanna execute all steps or jobs all the time

7
00:00:22.050 --> 00:00:24.840
and sometimes you wanna execute jobs or steps

8
00:00:24.840 --> 00:00:27.990
if they normally would not have been executed.

9
00:00:27.990 --> 00:00:31.230
And that's also where the failure success canceled

10
00:00:31.230 --> 00:00:33.720
and always functions come into play

11
00:00:33.720 --> 00:00:36.600
because these functions allow you to change GitHub Actions

12
00:00:36.600 --> 00:00:39.780
default behavior, and for example execute a job

13
00:00:39.780 --> 00:00:42.300
even if other dependent jobs failed,

14
00:00:42.300 --> 00:00:44.940
or for example execute some job or a step

15
00:00:44.940 --> 00:00:46.713
if a workflow was canceled.

16
00:00:47.730 --> 00:00:52.110
You can also use to continue on error field on a step

17
00:00:52.110 --> 00:00:55.260
to ignore the failure of that step and proceed

18
00:00:55.260 --> 00:00:57.540
as if that step would've succeeded.

19
00:00:57.540 --> 00:00:59.310
Now, that's one thing.

20
00:00:59.310 --> 00:01:01.740
We also learned about matrix jobs

21
00:01:01.740 --> 00:01:04.230
where you can easily run the same job

22
00:01:04.230 --> 00:01:06.720
with different job configurations

23
00:01:06.720 --> 00:01:10.953
and where a matrix of combinations is created automatically.

24
00:01:11.820 --> 00:01:14.850
You can also add or remove individual combinations

25
00:01:14.850 --> 00:01:17.010
as you learned and you can control

26
00:01:17.010 --> 00:01:20.850
whether a single job failure should lead to all other jobs

27
00:01:20.850 --> 00:01:22.710
being canceled or not with help

28
00:01:22.710 --> 00:01:24.993
of the continue on error setting.

29
00:01:26.310 --> 00:01:29.910
Last but not least, we also explored reusable workflows,

30
00:01:29.910 --> 00:01:32.730
which is a feature that allows you to build a workflow

31
00:01:32.730 --> 00:01:35.580
that can be used inside of other workflows

32
00:01:35.580 --> 00:01:38.370
and you simply create such a reusable workflow

33
00:01:38.370 --> 00:01:41.310
by adding the workflow call event to it.

34
00:01:41.310 --> 00:01:44.220
Any workflow that has this event can be called

35
00:01:44.220 --> 00:01:45.783
by other workflows.

36
00:01:46.890 --> 00:01:51.030
You can then reuse any logic you want and add as many jobs

37
00:01:51.030 --> 00:01:54.630
and steps as needed to that reusable workflow

38
00:01:54.630 --> 00:01:57.210
so you can really do whatever you want there.

39
00:01:57.210 --> 00:02:00.480
And you can also use inputs, outputs, and secrets

40
00:02:00.480 --> 00:02:04.110
to give that reusable workflow all the data it might need

41
00:02:04.110 --> 00:02:07.110
and to also pass data back to the workflow

42
00:02:07.110 --> 00:02:09.543
that uses the reusable workflow.

