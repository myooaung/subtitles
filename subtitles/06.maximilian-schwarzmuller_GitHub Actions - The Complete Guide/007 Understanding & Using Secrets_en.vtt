WEBVTT
1
00:00:02.100 --> 00:00:03.030
So, that's how we can use

2
00:00:03.030 --> 00:00:04.860
environment variables.

3
00:00:04.860 --> 00:00:06.450
And this is an important feature

4
00:00:06.450 --> 00:00:09.030
because environment variables are needed

5
00:00:09.030 --> 00:00:11.820
in a lot of Workflows to inject values,

6
00:00:11.820 --> 00:00:13.950
as we're doing it here.

7
00:00:13.950 --> 00:00:17.730
But we also have values, like these credentials here.

8
00:00:17.730 --> 00:00:19.950
Like, the username and the password,

9
00:00:19.950 --> 00:00:21.510
which we don't necessarily,

10
00:00:21.510 --> 00:00:24.480
wanna store in our Workflow file.

11
00:00:24.480 --> 00:00:25.860
Because you must keep in mind,

12
00:00:25.860 --> 00:00:27.930
that we pushed this to GitHub,

13
00:00:27.930 --> 00:00:30.690
so therefore, these credentials are on GitHub.

14
00:00:30.690 --> 00:00:33.090
Everybody with access to this Repository,

15
00:00:33.090 --> 00:00:34.893
can view these credentials here.

16
00:00:36.150 --> 00:00:38.430
Sure, that's just a testing database here,

17
00:00:38.430 --> 00:00:41.370
but we could have some production credentials here, as well.

18
00:00:41.370 --> 00:00:43.290
And even for the testing database,

19
00:00:43.290 --> 00:00:47.010
we typically, don't wanna expose such values.

20
00:00:47.010 --> 00:00:50.580
And that's where secrets come into play.

21
00:00:50.580 --> 00:00:52.140
Some environment variables,

22
00:00:52.140 --> 00:00:53.850
like these credentials I showed you,

23
00:00:53.850 --> 00:00:55.137
should never be exposed.

24
00:00:55.137 --> 00:00:57.570
They shouldn't be part of your code,

25
00:00:57.570 --> 00:01:00.210
or your definition files.

26
00:01:00.210 --> 00:01:04.680
That's why GitHub Actions and basically, all providers

27
00:01:04.680 --> 00:01:06.840
that provide services like this,

28
00:01:06.840 --> 00:01:10.140
allow you to store so-called secrets.

29
00:01:10.140 --> 00:01:13.228
These are essentially, also environment variables,

30
00:01:13.228 --> 00:01:16.320
but stored, such that no one can access them,

31
00:01:16.320 --> 00:01:17.643
no one can see them.

32
00:01:18.990 --> 00:01:23.065
And when using GitHub, there are a couple of places

33
00:01:23.065 --> 00:01:26.520
where such secrets can be stored.

34
00:01:26.520 --> 00:01:28.764
If you would have an organization account,

35
00:01:28.764 --> 00:01:31.170
you can store them on organization level

36
00:01:31.170 --> 00:01:32.550
by going to your settings.

37
00:01:32.550 --> 00:01:34.290
But I don't have that account here.

38
00:01:34.290 --> 00:01:35.130
So therefore here,

39
00:01:35.130 --> 00:01:39.375
I can't store my secrets on organization level.

40
00:01:39.375 --> 00:01:42.900
But you can store them on Repository level,

41
00:01:42.900 --> 00:01:46.050
by going to the settings of your Repository.

42
00:01:46.050 --> 00:01:49.923
There, under security, you have that secrets area.

43
00:01:51.360 --> 00:01:55.140
And there, you can store action specific secrets.

44
00:01:55.140 --> 00:01:58.680
So, values that will be available in all actions,

45
00:01:58.680 --> 00:02:00.210
in all Workflows,

46
00:02:00.210 --> 00:02:02.853
that are executed for this Repository.

47
00:02:04.260 --> 00:02:06.030
You add such a secret,

48
00:02:06.030 --> 00:02:09.479
by simply adding a new Repository secret

49
00:02:09.479 --> 00:02:11.670
And then you give it any name of your choice.

50
00:02:11.670 --> 00:02:14.310
Though, it makes sense to pick a name similar

51
00:02:14.310 --> 00:02:16.318
to the environment variable name here,

52
00:02:16.318 --> 00:02:19.110
but it doesn't have to be the same one.

53
00:02:19.110 --> 00:02:21.330
Here, I will use the same one though,

54
00:02:21.330 --> 00:02:22.953
my MongoDB username,

55
00:02:23.850 --> 00:02:26.430
and also store the username value here.

56
00:02:26.430 --> 00:02:29.700
So, the value goes into the secret box.

57
00:02:29.700 --> 00:02:31.380
And then after adding this,

58
00:02:31.380 --> 00:02:33.540
this can't be viewed anymore.

59
00:02:33.540 --> 00:02:37.078
You can update it, but you can't view it anymore,

60
00:02:37.078 --> 00:02:38.910
and nobody can view it.

61
00:02:38.910 --> 00:02:41.520
Especially, not people that might be visiting

62
00:02:41.520 --> 00:02:43.053
your Repository.

63
00:02:44.130 --> 00:02:46.530
Now, I will also add a second secret,

64
00:02:46.530 --> 00:02:50.220
and that's my MongoDB password.

65
00:02:50.220 --> 00:02:53.400
And here, of course, I also copy that value,

66
00:02:53.400 --> 00:02:54.783
and provided, like this.

67
00:02:56.550 --> 00:03:00.693
And now, these two credential values are stored as secrets.

68
00:03:01.710 --> 00:03:04.170
Now, we must update our Workflow file

69
00:03:04.170 --> 00:03:06.390
to remove the values from there,

70
00:03:06.390 --> 00:03:08.943
and reference those secrets, instead.

71
00:03:09.840 --> 00:03:10.950
And that can be done

72
00:03:10.950 --> 00:03:13.980
by using GitHub Actions expression syntax,

73
00:03:13.980 --> 00:03:17.580
with the dollar sign and the double curly braces.

74
00:03:17.580 --> 00:03:21.903
And then there's a special secrets context object.

75
00:03:22.830 --> 00:03:26.160
So just, as we have the end context object

76
00:03:26.160 --> 00:03:28.689
for accessing environment variables.

77
00:03:28.689 --> 00:03:31.650
We have the secrets context object

78
00:03:31.650 --> 00:03:36.630
for accessing secrets that are provided for this Repository.

79
00:03:36.630 --> 00:03:40.320
And since, I just added two secrets to this Repository.

80
00:03:40.320 --> 00:03:41.700
These two secrets here.

81
00:03:41.700 --> 00:03:45.270
I can access these two secrets and their values

82
00:03:45.270 --> 00:03:47.163
via the secrets context object.

83
00:03:48.300 --> 00:03:52.410
So here, I can access secrets.MONGODB_PASSWORD

84
00:03:52.410 --> 00:03:54.360
or to be precise, that should be down here.

85
00:03:54.360 --> 00:03:57.063
And here, it's secrets.MONGODB_USERNAME.

86
00:03:58.046 --> 00:04:01.383
So, that's here, for this first environment variable.

87
00:04:03.360 --> 00:04:06.330
And with that, when this Workflow runs

88
00:04:06.330 --> 00:04:10.500
the actual values stored as secrets will be injected,

89
00:04:10.500 --> 00:04:12.450
but nobody will see that.

90
00:04:12.450 --> 00:04:16.101
The actual values will never be exposed anymore.

91
00:04:16.101 --> 00:04:19.500
Actually, when you try to print such a value,

92
00:04:19.500 --> 00:04:21.660
as I'm doing it here with the username,

93
00:04:21.660 --> 00:04:25.380
you will later see that GitHub Actions recognizes this,

94
00:04:25.380 --> 00:04:27.630
and will actually hide this value

95
00:04:27.630 --> 00:04:31.050
so that you can't accidentally, print it and expose it,

96
00:04:31.050 --> 00:04:33.570
in your Workflow logs.

97
00:04:33.570 --> 00:04:35.640
So, GitHub Actions really takes care

98
00:04:35.640 --> 00:04:38.520
that your secrets stay secrets.

99
00:04:38.520 --> 00:04:40.500
So therefore, with these changes made,

100
00:04:40.500 --> 00:04:42.060
with those secrets added,

101
00:04:42.060 --> 00:04:45.030
and the Workflow definition file updated,

102
00:04:45.030 --> 00:04:49.620
I will create a new commit, switched to secrets,

103
00:04:49.620 --> 00:04:51.933
and I'll push that updated code,

104
00:04:53.130 --> 00:04:54.540
and therefore, now of course,

105
00:04:54.540 --> 00:04:56.820
will trigger another Workflow run.

106
00:04:56.820 --> 00:04:59.430
And that Workflow run should also succeed,

107
00:04:59.430 --> 00:05:00.420
but this time,

108
00:05:00.420 --> 00:05:03.390
it will be using secrets under the hood.

109
00:05:03.390 --> 00:05:05.553
So, let's wait for that to finish here.

110
00:05:06.720 --> 00:05:07.920
Here we go.

111
00:05:07.920 --> 00:05:09.510
And now, if we take a look,

112
00:05:09.510 --> 00:05:13.260
we see that both workflows finished successfully,

113
00:05:13.260 --> 00:05:14.970
and in the first Workflow,

114
00:05:14.970 --> 00:05:16.530
in the first Job, sorry,

115
00:05:16.530 --> 00:05:18.330
both Jobs finished successfully.

116
00:05:18.330 --> 00:05:20.880
In the first Job, under output information,

117
00:05:20.880 --> 00:05:22.594
you can see that there

118
00:05:22.594 --> 00:05:26.040
GitHub Actions actually hit that value,

119
00:05:26.040 --> 00:05:27.390
that username value,

120
00:05:27.390 --> 00:05:29.970
because it saw that this is actually a secret,

121
00:05:29.970 --> 00:05:31.350
and therefore, it's hiding it,

122
00:05:31.350 --> 00:05:33.960
when you're trying to expose it.

123
00:05:33.960 --> 00:05:37.383
So, these secrets, really are secrets.

