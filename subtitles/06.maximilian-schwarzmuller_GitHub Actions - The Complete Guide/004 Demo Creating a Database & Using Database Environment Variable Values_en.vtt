WEBVTT
1
00:00:02.009 --> 00:00:03.480
Now, in order to continue

2
00:00:03.480 --> 00:00:06.630
with a real database that we can use in this example,

3
00:00:06.630 --> 00:00:10.440
I quickly create a new MongoDB database

4
00:00:10.440 --> 00:00:12.660
by visiting mongodb.com

5
00:00:12.660 --> 00:00:15.150
and using their cloud database offering,

6
00:00:15.150 --> 00:00:17.310
which is called Atlas.

7
00:00:17.310 --> 00:00:19.290
You can get started with that for free,

8
00:00:19.290 --> 00:00:21.450
but of course, you can also just follow along

9
00:00:21.450 --> 00:00:22.860
by watching the videos.

10
00:00:22.860 --> 00:00:24.540
But you can get started for free

11
00:00:24.540 --> 00:00:26.103
by creating an account here.

12
00:00:27.690 --> 00:00:29.910
And once the account was created,

13
00:00:29.910 --> 00:00:33.390
if it's a brand new account, you can create a new database.

14
00:00:33.390 --> 00:00:36.480
And again, this will be a database hosted by MongoDB

15
00:00:36.480 --> 00:00:38.610
in a cloud environment provided by them.

16
00:00:38.610 --> 00:00:40.410
And you can get started for free

17
00:00:40.410 --> 00:00:42.810
with such a shared database.

18
00:00:42.810 --> 00:00:45.870
And I'll just keep all these free options here

19
00:00:45.870 --> 00:00:48.873
to make sure that I'm not paying for it.

20
00:00:50.280 --> 00:00:52.140
So therefore, I'll keep all the defaults

21
00:00:52.140 --> 00:00:54.060
to get started for free.

22
00:00:54.060 --> 00:00:56.310
And as mentioned, you don't have to follow along,

23
00:00:56.310 --> 00:00:58.830
but here I will now also create a user,

24
00:00:58.830 --> 00:01:00.420
username Maximilian,

25
00:01:00.420 --> 00:01:03.750
and then a password, which I autogenerate,

26
00:01:03.750 --> 00:01:06.900
and which I will also copy.

27
00:01:06.900 --> 00:01:09.420
And that value combined with the username

28
00:01:09.420 --> 00:01:12.600
is already the first value I wanna store here.

29
00:01:12.600 --> 00:01:16.080
So the password and the username.

30
00:01:16.080 --> 00:01:18.780
And I will say right away that storing credentials

31
00:01:18.780 --> 00:01:22.230
like this in the Workflow file is not ideal

32
00:01:22.230 --> 00:01:26.070
and we'll dive into a better solution in the next lectures.

33
00:01:26.070 --> 00:01:27.810
But for the moment, I'll just add

34
00:01:27.810 --> 00:01:31.410
that dummy data off that dummy database here.

35
00:01:31.410 --> 00:01:33.210
And with that, we can also finish

36
00:01:33.210 --> 00:01:38.210
this database creation here by creating that user

37
00:01:39.420 --> 00:01:43.023
and adding my current IP address and finishing this.

38
00:01:44.430 --> 00:01:45.990
And now with that created,

39
00:01:45.990 --> 00:01:47.730
I can click this connect button here

40
00:01:47.730 --> 00:01:52.230
and connect your application to get this address here

41
00:01:52.230 --> 00:01:53.220
off the database.

42
00:01:53.220 --> 00:01:54.363
This part here.

43
00:01:55.740 --> 00:01:59.013
And that's what I'll enter here as MongoDB cluster address.

44
00:02:00.510 --> 00:02:03.270
With that, I am providing all these environment

45
00:02:03.270 --> 00:02:05.430
variable values and data for later

46
00:02:05.430 --> 00:02:08.160
when my application runs in this environment,

47
00:02:08.160 --> 00:02:11.310
so on a runner hosted by GitHub Actions.

48
00:02:11.310 --> 00:02:14.340
These values will be provided to the application,

49
00:02:14.340 --> 00:02:15.990
so they will be available here

50
00:02:15.990 --> 00:02:18.510
and they will be used in that running application

51
00:02:18.510 --> 00:02:20.733
to successfully connect to the database.

52
00:02:21.930 --> 00:02:26.430
Now, for that, I just also must add it something here

53
00:02:26.430 --> 00:02:28.140
and go to network access

54
00:02:28.140 --> 00:02:30.480
and actually add another IP address

55
00:02:30.480 --> 00:02:32.340
and allow access from anywhere

56
00:02:32.340 --> 00:02:36.210
so that my application running on a GitHub Actions runner

57
00:02:36.210 --> 00:02:38.523
is able to connect to this database.

58
00:02:39.630 --> 00:02:42.330
But with that, I got this database created,

59
00:02:42.330 --> 00:02:45.150
or at least soon it will be created,

60
00:02:45.150 --> 00:02:48.690
and I got these values for these environment variables

61
00:02:48.690 --> 00:02:51.663
provided here as part of my Workflow file.

62
00:02:53.010 --> 00:02:56.160
There is just one last environment variable missing,

63
00:02:56.160 --> 00:02:59.310
and that's the port environment variable,

64
00:02:59.310 --> 00:03:00.870
which is used in app.js

65
00:03:00.870 --> 00:03:03.690
and in this playwright.config file.

66
00:03:03.690 --> 00:03:05.730
And then of course, also must be provided

67
00:03:05.730 --> 00:03:08.970
so that the web server is spun up successfully

68
00:03:08.970 --> 00:03:11.190
and lists is on the right port.

69
00:03:11.190 --> 00:03:13.830
And we can also do this on Workflow level

70
00:03:13.830 --> 00:03:16.680
or Job level if we have different jobs

71
00:03:16.680 --> 00:03:18.300
that should be using different ports,

72
00:03:18.300 --> 00:03:19.650
and I'll do the latter here

73
00:03:19.650 --> 00:03:23.640
and provide this port environment variable on Job level

74
00:03:23.640 --> 00:03:27.330
and set this to a value like 8080 or 3000,

75
00:03:27.330 --> 00:03:28.503
whatever you want.

