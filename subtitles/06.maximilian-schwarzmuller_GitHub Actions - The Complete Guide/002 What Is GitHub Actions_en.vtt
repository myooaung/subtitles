WEBVTT
1
00:00:02.100 --> 00:00:05.580
So what is GitHub Actions

2
00:00:05.580 --> 00:00:08.490
or what are GitHub Actions?

3
00:00:08.490 --> 00:00:12.750
Well, it's a Workflow Automation Service offered

4
00:00:12.750 --> 00:00:14.760
by the GitHub company.

5
00:00:14.760 --> 00:00:17.130
So GitHub is a company, and that company

6
00:00:17.130 --> 00:00:21.810
offers a Workflow Automation Service called GitHub Actions.

7
00:00:21.810 --> 00:00:24.630
And this service allows you to automate

8
00:00:24.630 --> 00:00:29.490
all kinds of repository-related processes and actions.

9
00:00:29.490 --> 00:00:33.060
Now what's a repository, in that context here though?

10
00:00:33.060 --> 00:00:36.720
Well, we'll take a closer look at GitHub in just a second.

11
00:00:36.720 --> 00:00:38.340
For the moment, it's enough to know

12
00:00:38.340 --> 00:00:42.510
that repositories, in the context of GitHub, are buckets

13
00:00:42.510 --> 00:00:44.370
you could say that contain code

14
00:00:44.370 --> 00:00:48.600
for applications or packages or websites.

15
00:00:48.600 --> 00:00:50.880
So you can store code on GitHub,

16
00:00:50.880 --> 00:00:53.340
and GitHub Actions is a service

17
00:00:53.340 --> 00:00:56.940
that offers various automations around the code

18
00:00:56.940 --> 00:00:58.530
that is stored on GitHub,

19
00:00:58.530 --> 00:01:01.923
around these repositories that hold that code.

20
00:01:02.880 --> 00:01:06.870
And there are, you could say, two main areas

21
00:01:06.870 --> 00:01:10.620
of processes that can be automated.

22
00:01:10.620 --> 00:01:14.940
And arguably, the most prominent and important area

23
00:01:14.940 --> 00:01:18.840
is the area of CI/CD processes,

24
00:01:18.840 --> 00:01:21.780
of code deployment you could say.

25
00:01:21.780 --> 00:01:25.800
Now CI/CD stands for Continuous Integration

26
00:01:25.800 --> 00:01:27.870
and Continuous Delivery,

27
00:01:27.870 --> 00:01:30.000
though the CD can also stand

28
00:01:30.000 --> 00:01:33.510
for Continuous Deployment, for example.

29
00:01:33.510 --> 00:01:37.860
Typically, these two terms are used in conjunction though,

30
00:01:37.860 --> 00:01:40.980
and you typically say CI/CD,

31
00:01:40.980 --> 00:01:43.860
instead of referring to these things

32
00:01:43.860 --> 00:01:47.070
as individual groups of processes.

33
00:01:47.070 --> 00:01:49.800
And combined, these terms are used

34
00:01:49.800 --> 00:01:53.460
to describe and group methods

35
00:01:53.460 --> 00:01:58.170
for automating app development and deployment.

36
00:01:58.170 --> 00:02:02.550
Continuous integration is all about integrating new code

37
00:02:02.550 --> 00:02:06.030
or code changes into an existing code base

38
00:02:06.030 --> 00:02:08.880
by building that code automatically.

39
00:02:08.880 --> 00:02:12.390
So that changed code by testing it automatically

40
00:02:12.390 --> 00:02:15.003
and by then merging it into existing code.

41
00:02:15.960 --> 00:02:18.240
Continuous delivery or deployment

42
00:02:18.240 --> 00:02:21.150
is about publishing new versions of your app

43
00:02:21.150 --> 00:02:23.850
or package or website automatically

44
00:02:23.850 --> 00:02:27.780
after the code has been tested and integrated.

45
00:02:27.780 --> 00:02:29.610
So it's all about automation

46
00:02:29.610 --> 00:02:33.960
and it's about automatically handling code changes.

47
00:02:33.960 --> 00:02:37.920
For example, you might want to automatically upload

48
00:02:37.920 --> 00:02:41.070
and publish a new version of your website,

49
00:02:41.070 --> 00:02:44.040
once you made a change to the website code.

50
00:02:44.040 --> 00:02:45.762
So that's CI/CD,

51
00:02:45.762 --> 00:02:49.440
and GitHub Actions makes setting up and configuring

52
00:02:49.440 --> 00:02:53.610
and running such CI/CD workflows a breeze.

53
00:02:53.610 --> 00:02:57.360
It makes it very easy for you to set up processes

54
00:02:57.360 --> 00:03:01.470
that do automatically build, test, and publish new versions

55
00:03:01.470 --> 00:03:03.990
of your app, website, or package

56
00:03:03.990 --> 00:03:06.600
whenever you make a code change.

57
00:03:06.600 --> 00:03:10.170
But it's not the only kind of workflow or process

58
00:03:10.170 --> 00:03:13.740
that can be automated with GitHub Actions.

59
00:03:13.740 --> 00:03:16.320
Instead, GitHub Actions also helps you

60
00:03:16.320 --> 00:03:19.620
with code and repository management.

61
00:03:19.620 --> 00:03:22.200
It can help with automating code reviews

62
00:03:22.200 --> 00:03:24.150
or issue management.

63
00:03:24.150 --> 00:03:29.150
But to better understand this second group of workflows,

64
00:03:29.550 --> 00:03:31.140
it's important to understand

65
00:03:31.140 --> 00:03:34.440
in detail what GitHub is really about.

66
00:03:34.440 --> 00:03:37.353
So what is GitHub all about?

