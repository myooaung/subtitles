WEBVTT
1
00:00:02.100 --> 00:00:05.370
So if we have jobs in our GitHub Actions Workflow

2
00:00:05.370 --> 00:00:07.920
that produce output that should be stored,

3
00:00:07.920 --> 00:00:10.050
we're dealing with artifacts.

4
00:00:10.050 --> 00:00:14.550
And to store these artifacts we can simply add a new step.

5
00:00:14.550 --> 00:00:17.550
Now, this step can of course receive any name of your choice

6
00:00:17.550 --> 00:00:19.590
and I'll name it Upload Artifacts,

7
00:00:19.590 --> 00:00:22.170
because that is what we'll be doing.

8
00:00:22.170 --> 00:00:24.270
And then here we don't run a script

9
00:00:24.270 --> 00:00:26.370
but instead we use an action.

10
00:00:26.370 --> 00:00:27.330
To be precise,

11
00:00:27.330 --> 00:00:31.440
there is an official Upload Artifact action

12
00:00:31.440 --> 00:00:34.860
developed and provided by the GitHub team.

13
00:00:34.860 --> 00:00:37.620
And this action does just what the name implies.

14
00:00:37.620 --> 00:00:41.010
It allows us to upload artifacts.

15
00:00:41.010 --> 00:00:43.290
As always on the official Repository,

16
00:00:43.290 --> 00:00:45.420
you can learn more about this action

17
00:00:45.420 --> 00:00:48.960
and how this action may be used and configured.

18
00:00:48.960 --> 00:00:52.263
But I'll also show you how to use it in this course section.

19
00:00:53.160 --> 00:00:58.160
So here we want to use this actions/upload-artifact action.

20
00:00:59.370 --> 00:01:01.620
And at the point of time I'm recording this,

21
00:01:01.620 --> 00:01:03.900
I want to use version three.

22
00:01:03.900 --> 00:01:05.580
And then we can add the with key to

23
00:01:05.580 --> 00:01:08.190
provide some additional configuration.

24
00:01:08.190 --> 00:01:10.800
And some additional configuration is needed here

25
00:01:10.800 --> 00:01:12.060
for this action

26
00:01:12.060 --> 00:01:15.780
because I must give my artifacts a name.

27
00:01:15.780 --> 00:01:19.410
This will then be useful for retrieving those artifacts,

28
00:01:19.410 --> 00:01:21.930
especially if you want to do that automatically

29
00:01:21.930 --> 00:01:24.000
in subsequent jobs.

30
00:01:24.000 --> 00:01:26.370
Which is something we'll do soon.

31
00:01:26.370 --> 00:01:29.520
And here I'll simply name it "dist-files"

32
00:01:29.520 --> 00:01:31.923
but this name is totally up to you, of course.

33
00:01:32.850 --> 00:01:34.740
And then we have to add a path.

34
00:01:34.740 --> 00:01:37.440
And this path simply describes where to

35
00:01:37.440 --> 00:01:40.770
find the files that should be stored.

36
00:01:40.770 --> 00:01:44.220
And you can store as many files as you need to.

37
00:01:44.220 --> 00:01:48.210
In the official documentation of this Repository

38
00:01:48.210 --> 00:01:51.450
you see that you can specify multiple paths here,

39
00:01:51.450 --> 00:01:53.670
so that multiple files would be organized

40
00:01:53.670 --> 00:01:56.070
under a single artifact identifier.

41
00:01:56.070 --> 00:01:58.770
And all these files could then be accessed manually

42
00:01:58.770 --> 00:02:02.160
or automatically from other steps.

43
00:02:02.160 --> 00:02:05.130
You can also exclude certain paths

44
00:02:05.130 --> 00:02:08.039
if you know that some files should be included,

45
00:02:08.039 --> 00:02:09.240
but some other files

46
00:02:09.240 --> 00:02:11.039
that would be part of the other paths

47
00:02:11.039 --> 00:02:12.870
should be excluded.

48
00:02:12.870 --> 00:02:15.930
Again, the official documentation covers all the use cases

49
00:02:15.930 --> 00:02:18.390
and all the configuration items you can set.

50
00:02:18.390 --> 00:02:19.950
Here, in my case,

51
00:02:19.950 --> 00:02:23.523
I just want to store the files in a dist folder.

52
00:02:24.540 --> 00:02:26.850
But to also simulate how multiple files

53
00:02:26.850 --> 00:02:28.290
would be stored and organized,

54
00:02:28.290 --> 00:02:30.300
and how we could then retrieve them,

55
00:02:30.300 --> 00:02:32.640
I will actually add the dist folder

56
00:02:32.640 --> 00:02:35.010
and then also add another path here,

57
00:02:35.010 --> 00:02:36.960
even though it's technically not needed.

58
00:02:36.960 --> 00:02:39.090
And store in a package.json file

59
00:02:39.090 --> 00:02:41.580
as an artifact as well.

60
00:02:41.580 --> 00:02:42.930
Again, this is redundant,

61
00:02:42.930 --> 00:02:45.240
I'm just doing this so that we also see

62
00:02:45.240 --> 00:02:47.280
how multiple files and paths

63
00:02:47.280 --> 00:02:49.353
could be put into a single artifact.

64
00:02:51.030 --> 00:02:53.160
Please note, that if you have

65
00:02:53.160 --> 00:02:55.080
multi-line instructions like this,

66
00:02:55.080 --> 00:02:57.510
you need to add the pipe symbol here,

67
00:02:57.510 --> 00:03:00.000
and then you can put your different instructions

68
00:03:00.000 --> 00:03:01.713
into different lines here.

69
00:03:03.180 --> 00:03:05.250
Now with that, if we saved this,

70
00:03:05.250 --> 00:03:08.850
we manipulated this job here, this build job,

71
00:03:08.850 --> 00:03:11.970
such that we store degenerated output

72
00:03:11.970 --> 00:03:15.030
under the dist-files identifier.

73
00:03:15.030 --> 00:03:16.560
And now to see this in action

74
00:03:16.560 --> 00:03:19.230
we just have to create a new commit here.

75
00:03:19.230 --> 00:03:23.160
So I will stage my files and create a commit

76
00:03:23.160 --> 00:03:23.993
where I say

77
00:03:23.993 --> 00:03:28.290
"added upload artifacts step".

78
00:03:28.290 --> 00:03:30.690
And then we can push this.

79
00:03:30.690 --> 00:03:32.700
And since we activate this Workflow

80
00:03:32.700 --> 00:03:34.380
upon pushing to the main branch,

81
00:03:34.380 --> 00:03:36.570
and I am pushing to the main branch here,

82
00:03:36.570 --> 00:03:40.200
this will also automatically run this Workflow already,

83
00:03:40.200 --> 00:03:42.990
as we can see here under actions.

84
00:03:42.990 --> 00:03:45.990
And there, if we wait for this Workflow to finish,

85
00:03:45.990 --> 00:03:49.890
we'll also be able to retrieve those stored artifacts.

86
00:03:49.890 --> 00:03:52.893
So let's wait for this Workflow to finish here.

87
00:03:53.850 --> 00:03:55.800
Here we go, the Workflow finished.

88
00:03:55.800 --> 00:03:57.930
And now you can see the artifacts here

89
00:03:57.930 --> 00:04:00.090
at the bottom of this page.

90
00:04:00.090 --> 00:04:03.630
Here you see the dist-files artifact,

91
00:04:03.630 --> 00:04:07.500
and of course that is the identifier we chose here

92
00:04:07.500 --> 00:04:10.470
in our Workflow definition file.

93
00:04:10.470 --> 00:04:14.400
And we can click on this artifact to download it.

94
00:04:14.400 --> 00:04:16.980
So now it's downloaded as a ZIP file,

95
00:04:16.980 --> 00:04:19.110
and if we extract that ZIP file,

96
00:04:19.110 --> 00:04:21.899
we get a folder that includes the dist folder,

97
00:04:21.899 --> 00:04:25.560
with all its contents, and the package.json file.

98
00:04:25.560 --> 00:04:28.980
Because those were the artifacts I added here.

99
00:04:28.980 --> 00:04:33.240
So that's how we can use this Upload Artifact action.

100
00:04:33.240 --> 00:04:34.830
Now here, I'll tweak it a little bit

101
00:04:34.830 --> 00:04:38.400
and actually get rid of this definition.

102
00:04:38.400 --> 00:04:40.980
I'll comment it out so that we can still see it.

103
00:04:40.980 --> 00:04:43.200
But I'll change the path here

104
00:04:43.200 --> 00:04:45.510
to actually just include the dist folder

105
00:04:45.510 --> 00:04:46.770
with all its contents,

106
00:04:46.770 --> 00:04:48.783
because that is all that's needed here.

