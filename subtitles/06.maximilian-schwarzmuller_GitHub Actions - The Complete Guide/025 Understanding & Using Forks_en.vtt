WEBVTT
1
00:00:02.190 --> 00:00:04.800
Okay, so we saw how poll requests work

2
00:00:04.800 --> 00:00:06.540
and how we can collaborate

3
00:00:06.540 --> 00:00:09.780
if we add people as collaborators.

4
00:00:09.780 --> 00:00:12.120
However, I did mention before that you typically

5
00:00:12.120 --> 00:00:15.570
don't want to trust everyone who's reaching out to you.

6
00:00:15.570 --> 00:00:18.630
You might not want to add everyone as a collaborator

7
00:00:18.630 --> 00:00:21.540
because even though you can protect some branches

8
00:00:21.540 --> 00:00:23.970
to make sure that even collaborators

9
00:00:23.970 --> 00:00:25.440
can't change everything,

10
00:00:25.440 --> 00:00:30.090
you still might not want to give everyone push permission.

11
00:00:30.090 --> 00:00:33.030
And therefore here as the owner of this repository,

12
00:00:33.030 --> 00:00:35.310
I'll remove that second account here.

13
00:00:35.310 --> 00:00:38.850
I'll remove that account as a collaborator.

14
00:00:38.850 --> 00:00:42.180
Therefore, now that our account no longer has permission

15
00:00:42.180 --> 00:00:45.030
to push, as we can see, if I'm again back

16
00:00:45.030 --> 00:00:47.370
on that second account's machine

17
00:00:47.370 --> 00:00:50.430
and I make some change,

18
00:00:50.430 --> 00:00:53.440
I break the code here and then

19
00:00:54.900 --> 00:00:58.780
I check out that color branch again

20
00:00:59.700 --> 00:01:03.450
and add that broken code, and create a commit

21
00:01:03.450 --> 00:01:07.980
where I say broke code, if I tried to push this branch,

22
00:01:07.980 --> 00:01:10.380
to remote which I did before as well,

23
00:01:10.380 --> 00:01:13.830
now we're all of a sudden getting a permission error again

24
00:01:13.830 --> 00:01:16.263
because I was removed as a collaborator.

25
00:01:17.970 --> 00:01:20.670
Now, let's say I'm a totally new person.

26
00:01:20.670 --> 00:01:23.880
Technically it's still that second GitHub account here.

27
00:01:23.880 --> 00:01:27.300
But let's say I never was a collaborator of this project,

28
00:01:27.300 --> 00:01:31.473
or maybe I was but I am no longer as it is the case now.

29
00:01:32.340 --> 00:01:35.730
Maybe I still wanna contribute and not by breaking code

30
00:01:35.730 --> 00:01:37.383
but by doing something useful.

31
00:01:38.250 --> 00:01:41.580
Now, let's say I have no chance of becoming a collaborator

32
00:01:41.580 --> 00:01:44.340
because people don't just add random people

33
00:01:44.340 --> 00:01:45.990
as collaborators.

34
00:01:45.990 --> 00:01:49.620
And indeed that is quite common for open source software.

35
00:01:49.620 --> 00:01:52.830
If you wanna collaborate there and maybe solve bugs

36
00:01:52.830 --> 00:01:56.250
on the code, you won't simply be added as a collaborator

37
00:01:56.250 --> 00:01:58.350
by the owners of these projects.

38
00:01:58.350 --> 00:02:00.960
And of course, rightfully so, they won't know

39
00:02:00.960 --> 00:02:03.333
who has good intentions and who has not.

40
00:02:04.350 --> 00:02:06.960
What you can do in such a case to still help

41
00:02:06.960 --> 00:02:09.213
is you can fork a repository.

42
00:02:10.169 --> 00:02:13.170
Now if you fork a repository, what you're doing

43
00:02:13.170 --> 00:02:17.700
is you are cloning that repository on GitHub

44
00:02:17.700 --> 00:02:20.730
so that you get your own repository on GitHub

45
00:02:20.730 --> 00:02:23.430
which is based on this repository.

46
00:02:23.430 --> 00:02:26.280
And then since that cloned repository on GitHub

47
00:02:26.280 --> 00:02:28.410
will be your own repository,

48
00:02:28.410 --> 00:02:32.010
you can clone that to your local machine, make changes,

49
00:02:32.010 --> 00:02:36.000
push it to your cloned and owned GitHub repository

50
00:02:36.000 --> 00:02:38.370
and then you can actually create poll requests

51
00:02:38.370 --> 00:02:40.740
across repositories on GitHub.

52
00:02:40.740 --> 00:02:42.153
That's what we'll do next.

53
00:02:43.020 --> 00:02:45.300
So therefore here, ask that second user

54
00:02:45.300 --> 00:02:48.360
on that repository on which we wanna work.

55
00:02:48.360 --> 00:02:52.920
I'll click Fork and now this will create this repository

56
00:02:52.920 --> 00:02:55.980
for this account, for this second account.

57
00:02:55.980 --> 00:02:59.130
So I'll click Create Fork here, and this will now create

58
00:02:59.130 --> 00:03:02.190
a brand new repository on GitHub which is forked

59
00:03:02.190 --> 00:03:04.350
from that original repository.

60
00:03:04.350 --> 00:03:07.323
But this is a different repository for a different user.

61
00:03:08.730 --> 00:03:12.033
Now we can clone this as we did it before.

62
00:03:13.170 --> 00:03:15.780
So here, therefore I'll again use Git clone

63
00:03:15.780 --> 00:03:17.973
and name this Git Demo 2.

64
00:03:19.320 --> 00:03:22.180
If I now hit Enter, this is downloaded

65
00:03:23.250 --> 00:03:25.860
and I can open this in VSCode.

66
00:03:25.860 --> 00:03:27.840
Again, that's now that second user

67
00:03:27.840 --> 00:03:29.010
but it's a new project

68
00:03:29.010 --> 00:03:31.623
based on this forked GitHub repository.

69
00:03:32.850 --> 00:03:35.640
Now, here I wanna make sure

70
00:03:35.640 --> 00:03:39.190
that I set my URL correctly for origin

71
00:03:41.100 --> 00:03:44.850
and I'll use that URL of that forked repository here,

72
00:03:44.850 --> 00:03:47.823
this URL with dot Git at the end here.

73
00:03:50.130 --> 00:03:51.990
But I'll again add my username here,

74
00:03:51.990 --> 00:03:55.410
Maxacademind2@GitHub.com

75
00:03:55.410 --> 00:03:59.520
so that future pushes will take this username into account.

76
00:03:59.520 --> 00:04:02.010
Okay, so now here I maybe wanna make a change,

77
00:04:02.010 --> 00:04:04.530
not a breaking change but a useful change.

78
00:04:04.530 --> 00:04:06.930
I want to change the color of these links

79
00:04:06.930 --> 00:04:09.393
and make it more reddish, something like this.

80
00:04:10.650 --> 00:04:12.960
So now I made this change

81
00:04:12.960 --> 00:04:15.390
and I'll actually make that in a new branch.

82
00:04:15.390 --> 00:04:17.700
And you can even check out and switch to a new branch

83
00:04:17.700 --> 00:04:19.260
after making this change

84
00:04:19.260 --> 00:04:21.779
as long as you haven't committed it.

85
00:04:21.779 --> 00:04:26.780
So here I'll name it feat link color, this new branch,

86
00:04:26.850 --> 00:04:30.990
and then I'll stage this style CSS file entry, this commit,

87
00:04:30.990 --> 00:04:35.613
where I say changed link color like this.

88
00:04:36.960 --> 00:04:41.960
Now I can push this feat link color branch

89
00:04:42.600 --> 00:04:45.510
by using Git push origin which points

90
00:04:45.510 --> 00:04:50.340
at my forked repository which this user does own on GitHub

91
00:04:50.340 --> 00:04:54.243
and push this feat link color branch to it.

92
00:04:55.800 --> 00:04:56.910
Now, this will succeed

93
00:04:56.910 --> 00:04:59.340
using that personal access token from before

94
00:04:59.340 --> 00:05:02.250
and since I added the username to the URL.

95
00:05:02.250 --> 00:05:04.893
And now this is on this forked repository.

96
00:05:05.910 --> 00:05:10.620
Important, it's not on the original repository.

97
00:05:10.620 --> 00:05:14.100
There if we take a look at that, this branch does not exist.

98
00:05:14.100 --> 00:05:16.950
Feat color is that other branch from before.

99
00:05:16.950 --> 00:05:19.470
The new branch is named feat link color

100
00:05:19.470 --> 00:05:22.803
and that only exists on that forked repository.

101
00:05:24.630 --> 00:05:28.020
Now I wanna suggest to implement this change

102
00:05:28.020 --> 00:05:30.120
to that main repository.

103
00:05:30.120 --> 00:05:32.310
For that, I could again create an issue

104
00:05:32.310 --> 00:05:34.500
and say that I want this feature

105
00:05:34.500 --> 00:05:37.860
but I can also create a poll request right away.

106
00:05:37.860 --> 00:05:40.590
For this, as this second user here,

107
00:05:40.590 --> 00:05:43.210
I'll go to the original repository

108
00:05:44.670 --> 00:05:47.460
and there I'll open a new poll request

109
00:05:47.460 --> 00:05:50.010
just as I did it before.

110
00:05:50.010 --> 00:05:53.730
Now, however, I wanna compare across forks

111
00:05:53.730 --> 00:05:56.223
and I can click this button here to do that.

112
00:05:57.750 --> 00:06:01.260
That now allows me to choose the repository

113
00:06:01.260 --> 00:06:03.630
and branch into which I wanna merge.

114
00:06:03.630 --> 00:06:07.230
And that is that main repository of the first GitHub user

115
00:06:07.230 --> 00:06:08.630
and there at the main branch

116
00:06:09.780 --> 00:06:13.710
but I'm selecting my own forked repository as the source

117
00:06:13.710 --> 00:06:16.293
and there the feat link color branch.

118
00:06:17.460 --> 00:06:20.370
And with that I'm now suggesting that these changes

119
00:06:20.370 --> 00:06:24.210
of my forked repository which I own are merged

120
00:06:24.210 --> 00:06:26.760
into that other repository in the main branch

121
00:06:26.760 --> 00:06:28.680
which I don't own.

122
00:06:28.680 --> 00:06:30.540
Now, otherwise it's the same as before.

123
00:06:30.540 --> 00:06:32.280
You can see the change here.

124
00:06:32.280 --> 00:06:36.393
I can then create a pole request, give is a nice title.

125
00:06:37.410 --> 00:06:42.410
Changed link color since it looks nicer, whatever.

126
00:06:43.050 --> 00:06:46.053
And I can create this poll request here.

127
00:06:48.450 --> 00:06:52.410
Now, this requires a reviewer just as before

128
00:06:52.410 --> 00:06:56.343
but I can leave the poll request like this if I want to.

129
00:06:57.510 --> 00:07:00.330
So now with that, that poll request was opened.

130
00:07:00.330 --> 00:07:04.920
And back on that main repository with the first GitHub user

131
00:07:04.920 --> 00:07:08.313
who owns this repository, I can see this poll request here.

132
00:07:09.450 --> 00:07:12.540
Now, I can again add myself as a reviewer

133
00:07:12.540 --> 00:07:14.253
since a review is needed.

134
00:07:15.240 --> 00:07:17.790
And after adding myself as a reviewer

135
00:07:17.790 --> 00:07:20.613
and reloading this page, I can add my review here.

136
00:07:21.660 --> 00:07:23.340
I can again take a look at the code

137
00:07:23.340 --> 00:07:26.220
and possibly add comments which then could be picked up

138
00:07:26.220 --> 00:07:29.010
by the person who did open this poll request.

139
00:07:29.010 --> 00:07:30.990
But here, I'm fine with everything.

140
00:07:30.990 --> 00:07:33.723
So again, approve this and submit my review.

141
00:07:34.980 --> 00:07:36.900
And now that this has been reviewed,

142
00:07:36.900 --> 00:07:39.510
I could add another comment but I'll just merge

143
00:07:39.510 --> 00:07:41.943
this poll request and confirm this merge.

144
00:07:42.990 --> 00:07:44.730
And now with that, we have another merge

145
00:07:44.730 --> 00:07:48.180
on this main repository which is now based on a change

146
00:07:48.180 --> 00:07:51.390
that was made in a different repository that was forked

147
00:07:51.390 --> 00:07:54.393
from this repository though, and that's the important part.

148
00:07:55.500 --> 00:07:58.680
And that's another way of collaborating and contributing

149
00:07:58.680 --> 00:08:00.600
which is all the very common way,

150
00:08:00.600 --> 00:08:03.303
especially for open source projects.

151
00:08:04.170 --> 00:08:06.150
So you have both approaches,

152
00:08:06.150 --> 00:08:09.120
adding collaborators or relying on forks.

153
00:08:09.120 --> 00:08:11.580
And it simply depends on which kind of project

154
00:08:11.580 --> 00:08:14.190
you are working on, if it's open source

155
00:08:14.190 --> 00:08:16.710
or if you're working on it in a small team,

156
00:08:16.710 --> 00:08:19.053
possibly in a private repository.

157
00:08:19.890 --> 00:08:22.950
GitHub has all these features and many features more

158
00:08:22.950 --> 00:08:25.920
but these are especially important features since GitHub

159
00:08:25.920 --> 00:08:28.680
in the end is all about storing code remotely

160
00:08:28.680 --> 00:08:31.410
but also about collaborating on that code,

161
00:08:31.410 --> 00:08:33.870
working together on that code.

162
00:08:33.870 --> 00:08:36.809
And poll requests, collaborators, forks,

163
00:08:36.809 --> 00:08:38.760
these are all features you should know

164
00:08:38.760 --> 00:08:40.203
when working with GitHub.

