WEBVTT
1
00:00:02.430 --> 00:00:05.130
So I did show you how you can add a service.

2
00:00:05.130 --> 00:00:08.189
In this case here, such as testing MongoDB database,

3
00:00:08.189 --> 00:00:10.350
which is running in a container.

4
00:00:10.350 --> 00:00:12.570
But now when it comes to communicating

5
00:00:12.570 --> 00:00:14.400
with that service container,

6
00:00:14.400 --> 00:00:15.810
from inside your Job,

7
00:00:15.810 --> 00:00:19.470
therefore there are some things to watch out for,

8
00:00:19.470 --> 00:00:20.760
and it will now matter,

9
00:00:20.760 --> 00:00:23.583
whether your Job runs in a container, or not.

10
00:00:24.720 --> 00:00:27.420
If your Job does run in a container,

11
00:00:27.420 --> 00:00:28.860
as it does here,

12
00:00:28.860 --> 00:00:31.200
then connecting to container services,

13
00:00:31.200 --> 00:00:34.020
is super simple because GitHub Actions

14
00:00:34.020 --> 00:00:37.110
will automatically create a networking environment,

15
00:00:37.110 --> 00:00:41.310
where you can use the label of your service container,

16
00:00:41.310 --> 00:00:43.440
as a connection address.

17
00:00:43.440 --> 00:00:47.550
So in my case here, I can just use MongoDB, here,

18
00:00:47.550 --> 00:00:51.810
since that is the label I'm using down there.

19
00:00:51.810 --> 00:00:54.330
So this label can now be used

20
00:00:54.330 --> 00:00:57.213
for establishing a network connection.

21
00:00:58.110 --> 00:00:59.460
So that's one important thing.

22
00:00:59.460 --> 00:01:02.700
And this only works if your Job runs in a container,

23
00:01:02.700 --> 00:01:04.352
as my Job does here.

24
00:01:05.640 --> 00:01:08.850
I also must change the connection protocol here,

25
00:01:08.850 --> 00:01:10.410
to just MongoDB,

26
00:01:10.410 --> 00:01:12.900
but that's a MongoDB specific setting,

27
00:01:12.900 --> 00:01:16.470
which I must change here, for this MongoDB image,

28
00:01:16.470 --> 00:01:17.520
which I'm using here.

29
00:01:17.520 --> 00:01:20.520
And you learn more about how to connect to it here,

30
00:01:20.520 --> 00:01:22.080
in the official documentation.

31
00:01:22.080 --> 00:01:24.090
But that is something that must be changed

32
00:01:24.090 --> 00:01:25.830
to make this work.

33
00:01:25.830 --> 00:01:27.000
With that, however,

34
00:01:27.000 --> 00:01:29.820
with the correct credentials being used here,

35
00:01:29.820 --> 00:01:31.530
and with the cluster address,

36
00:01:31.530 --> 00:01:34.110
being equal to that label name here,

37
00:01:34.110 --> 00:01:36.090
we got all the settings we do need

38
00:01:36.090 --> 00:01:38.640
to successfully run this Workflow,

39
00:01:38.640 --> 00:01:40.290
which now does not need

40
00:01:40.290 --> 00:01:44.370
any external MongoDB clusters, at all,

41
00:01:44.370 --> 00:01:46.800
but which instead works totally isolated,

42
00:01:46.800 --> 00:01:49.353
with help of that service container.

43
00:01:51.090 --> 00:01:53.130
So here, I'll create a new commit,

44
00:01:53.130 --> 00:01:56.970
added MongoDB service container,

45
00:01:56.970 --> 00:01:59.160
and I'll push this here.

46
00:01:59.160 --> 00:02:00.480
And this of course leads

47
00:02:00.480 --> 00:02:02.553
to another Workflow being triggered.

48
00:02:03.600 --> 00:02:05.340
Here we go.

49
00:02:05.340 --> 00:02:07.380
And as part of this Workflow,

50
00:02:07.380 --> 00:02:09.810
the service container will be set up,

51
00:02:09.810 --> 00:02:12.870
here, in the initialized containers step.

52
00:02:12.870 --> 00:02:15.360
It does download this Mongo image,

53
00:02:15.360 --> 00:02:18.030
and does set up that service container.

54
00:02:18.030 --> 00:02:21.543
It starts this MongoDB service container, as you see,

55
00:02:22.830 --> 00:02:25.830
and thereafter, it runs all these steps,

56
00:02:25.830 --> 00:02:27.570
step by step, as before,

57
00:02:27.570 --> 00:02:30.570
in this case, also inside of a container.

58
00:02:30.570 --> 00:02:31.530
And you will see,

59
00:02:31.530 --> 00:02:34.560
that it will successfully run all these tests,

60
00:02:34.560 --> 00:02:38.433
and the web server, as the service container will be used.

61
00:02:39.480 --> 00:02:41.700
Here, it connected successfully,

62
00:02:41.700 --> 00:02:43.680
and now runs all these tests.

63
00:02:43.680 --> 00:02:46.350
And therefore now we have a totally isolated Workflow,

64
00:02:46.350 --> 00:02:47.790
that runs successfully,

65
00:02:47.790 --> 00:02:51.180
that does not use any external testing database,

66
00:02:51.180 --> 00:02:53.880
or testing database server.

67
00:02:53.880 --> 00:02:58.620
So even if I would remove this public IP acceptance, here,

68
00:02:58.620 --> 00:03:01.923
my Workflow would still run successfully here.

69
00:03:03.120 --> 00:03:05.250
Now things change slightly,

70
00:03:05.250 --> 00:03:08.160
if our Job is not running in a container.

71
00:03:08.160 --> 00:03:12.000
So if I removed this, or commented this out.

72
00:03:12.000 --> 00:03:14.910
Now the Job will run on the runner itself,

73
00:03:14.910 --> 00:03:17.193
and not inside of this container anymore.

74
00:03:18.060 --> 00:03:21.210
If you do that, you can still use service containers,

75
00:03:21.210 --> 00:03:23.850
and you still set them up as before, here.

76
00:03:23.850 --> 00:03:27.810
But now there won't be some automated network,

77
00:03:27.810 --> 00:03:30.780
where you can use these service container label

78
00:03:30.780 --> 00:03:31.800
for connecting.

79
00:03:31.800 --> 00:03:33.543
That won't work anymore.

80
00:03:34.440 --> 00:03:38.790
Instead, now you have to use this local host IP address,

81
00:03:38.790 --> 00:03:42.450
one, two, seven, dot, zero, dot, zero, dot, one.

82
00:03:42.450 --> 00:03:46.050
And if there are any specific ports that are needed,

83
00:03:46.050 --> 00:03:48.930
you also must add that port here.

84
00:03:48.930 --> 00:03:50.190
In case of MongoDB,

85
00:03:50.190 --> 00:03:53.940
the default port used is this 2, 7, 0, 17 port,

86
00:03:53.940 --> 00:03:57.900
and I wanna connect to that port here.

87
00:03:57.900 --> 00:03:59.610
And even more importantly,

88
00:03:59.610 --> 00:04:04.260
I have to open that port here, on my service container.

89
00:04:04.260 --> 00:04:06.930
That's done by adding the extra ports setting.

90
00:04:06.930 --> 00:04:11.760
And then here the internal 2, 7, 0, 1, 7 port,

91
00:04:11.760 --> 00:04:15.003
should be forwarded to that port on the runner machine.

92
00:04:16.529 --> 00:04:19.500
So that my process running on the runner machine,

93
00:04:19.500 --> 00:04:22.350
my steps, which are running on the runner machine,

94
00:04:22.350 --> 00:04:25.680
can connect to the MongoDB database server,

95
00:04:25.680 --> 00:04:28.983
running inside of this container, through this port.

96
00:04:30.060 --> 00:04:32.070
Now, which ports must be opened,

97
00:04:32.070 --> 00:04:35.190
simply depends on which process you are running,

98
00:04:35.190 --> 00:04:36.360
in your container,

99
00:04:36.360 --> 00:04:38.880
in your service container, to be precise,

100
00:04:38.880 --> 00:04:42.300
and which ports are used by these processes.

101
00:04:42.300 --> 00:04:46.773
That 2, 7, 0, 17 port is simply the port used by MongoDB.

102
00:04:47.700 --> 00:04:50.430
Therefore, that's the address we should use for connecting.

103
00:04:50.430 --> 00:04:52.680
And that's the port that should be opened,

104
00:04:52.680 --> 00:04:55.920
by that service container, to that runner machine,

105
00:04:55.920 --> 00:04:58.890
so that processes running, on that runner machine,

106
00:04:58.890 --> 00:05:01.200
can connect to that service running,

107
00:05:01.200 --> 00:05:04.680
in that service container, through that port.

108
00:05:04.680 --> 00:05:07.020
And with that adjustment made,

109
00:05:07.020 --> 00:05:08.340
that is again everything,

110
00:05:08.340 --> 00:05:10.380
and we can create a commit,

111
00:05:10.380 --> 00:05:14.820
adjusted network settings could be the commit message.

112
00:05:14.820 --> 00:05:17.430
And with that, you will see that again,

113
00:05:17.430 --> 00:05:21.000
everything will be set up and will be executed, as expected,

114
00:05:21.000 --> 00:05:23.640
and this Workflow will run successfully,

115
00:05:23.640 --> 00:05:27.030
again, using this service container,

116
00:05:27.030 --> 00:05:29.070
but now in conjunction with a Job,

117
00:05:29.070 --> 00:05:30.840
that's running just on the runner,

118
00:05:30.840 --> 00:05:32.763
and not inside of a container.

119
00:05:33.690 --> 00:05:34.560
So here it's now,

120
00:05:34.560 --> 00:05:36.990
just setting up the MongoDB service container,

121
00:05:36.990 --> 00:05:38.793
and no other containers,

122
00:05:40.140 --> 00:05:41.730
and once that was done,

123
00:05:41.730 --> 00:05:44.160
all these Job steps will be executed,

124
00:05:44.160 --> 00:05:47.673
and it will still successfully run the server,

125
00:05:48.810 --> 00:05:52.890
as you see here, where it connected successfully.

126
00:05:52.890 --> 00:05:55.440
And thereafter, it will also run all these tests,

127
00:05:55.440 --> 00:05:57.450
as expected, and they will succeed.

128
00:05:57.450 --> 00:06:00.150
And we're still using this service container,

129
00:06:00.150 --> 00:06:02.340
but now, in conjunction with a Job,

130
00:06:02.340 --> 00:06:04.770
that's not using containers.

131
00:06:04.770 --> 00:06:06.510
And again, it is totally up to you,

132
00:06:06.510 --> 00:06:08.820
and simply depends on what you want to do,

133
00:06:08.820 --> 00:06:10.710
whether you wanna use containers,

134
00:06:10.710 --> 00:06:13.353
service containers, or none of these features.

