WEBVTT
1
00:00:02.160 --> 00:00:03.870
Now, over the last lectures,

2
00:00:03.870 --> 00:00:06.720
I explained the ideas behind activity types,

3
00:00:06.720 --> 00:00:10.680
which allow you to define which exact sub-event

4
00:00:10.680 --> 00:00:14.910
or version of an event should trigger a Workflow.

5
00:00:14.910 --> 00:00:17.506
And I explained the idea behind event filters,

6
00:00:17.506 --> 00:00:21.330
namely the branches and paths filters, which allow you

7
00:00:21.330 --> 00:00:24.420
to define which branches or file paths

8
00:00:24.420 --> 00:00:27.870
have to be targeted or changed by an event

9
00:00:27.870 --> 00:00:29.970
like the pull request or push event

10
00:00:29.970 --> 00:00:33.870
in order for that event to activate the Workflow.

11
00:00:33.870 --> 00:00:36.510
Now, there's one specific thing regarding

12
00:00:36.510 --> 00:00:39.720
the pull-request event that you should be aware of,

13
00:00:39.720 --> 00:00:44.100
no matter if you're using activity types or event filters.

14
00:00:44.100 --> 00:00:46.590
You should be aware of it when you are accepting

15
00:00:46.590 --> 00:00:51.060
pull requests from people that forked your Repository.

16
00:00:51.060 --> 00:00:53.696
As also covered in the crash course section,

17
00:00:53.696 --> 00:00:57.090
people can fork a GitHub Repository,

18
00:00:57.090 --> 00:01:00.000
in order to work on the code on their own,

19
00:01:00.000 --> 00:01:04.019
and then they can also open pull requests for that.

20
00:01:04.019 --> 00:01:06.210
Now, here's something I wanna show you.

21
00:01:06.210 --> 00:01:08.790
Keep in mind that this Workflow should run

22
00:01:08.790 --> 00:01:10.860
whenever a pull request is opened

23
00:01:10.860 --> 00:01:14.073
and that that pull request targets any of these branches.

24
00:01:15.120 --> 00:01:19.170
To simulate this as a third-party contributor,

25
00:01:19.170 --> 00:01:22.860
so not as the person who owns this Repository,

26
00:01:22.860 --> 00:01:27.690
I logged into my second GitHub account here,

27
00:01:27.690 --> 00:01:30.180
and I will then grab a link

28
00:01:30.180 --> 00:01:35.010
to this Repository and visit it from my second account.

29
00:01:35.010 --> 00:01:38.430
That's why I made the Repository public.

30
00:01:38.430 --> 00:01:40.290
So now here, I'm on the account

31
00:01:40.290 --> 00:01:45.290
that does not own this Repository, and I'll fork it.

32
00:01:45.510 --> 00:01:47.520
That's something every user can do.

33
00:01:47.520 --> 00:01:51.780
I'll fork it, which means I create a copy here on GitHub

34
00:01:51.780 --> 00:01:54.900
and I can then also clone this to my local machine.

35
00:01:54.900 --> 00:01:57.783
So now I'm simulating that I'm a different user.

36
00:01:59.190 --> 00:02:03.780
Here, I opened this Repository as this second user

37
00:02:03.780 --> 00:02:07.620
and now I'll make a tiny change to the code here.

38
00:02:07.620 --> 00:02:09.997
In main.jsx, I'll add a comment where I say,

39
00:02:09.997 --> 00:02:11.430
"This is important."

40
00:02:11.430 --> 00:02:13.230
It doesn't really matter.

41
00:02:13.230 --> 00:02:17.190
Now, I made this change and I will store this change

42
00:02:17.190 --> 00:02:18.600
in a new branch.

43
00:02:18.600 --> 00:02:21.330
Dev-max is my branch name here,

44
00:02:21.330 --> 00:02:23.550
but the branch name could be anything.

45
00:02:23.550 --> 00:02:25.680
It also doesn't have to be a branch name

46
00:02:25.680 --> 00:02:27.930
that qualifies for these filters

47
00:02:27.930 --> 00:02:30.390
because these filters are for the branch

48
00:02:30.390 --> 00:02:33.697
that's targeted by a pull request, and I created that branch

49
00:02:33.697 --> 00:02:37.320
to be used for a pull request in the future.

50
00:02:37.320 --> 00:02:40.380
So here I added this, then I will create a commit

51
00:02:40.380 --> 00:02:43.740
where I say "added comment"

52
00:02:43.740 --> 00:02:47.700
and then I'll push this like this.

53
00:02:47.700 --> 00:02:51.840
Now once this is pushed, this update is on my forked

54
00:02:51.840 --> 00:02:55.533
GitHub Repository, not on the original Repository,

55
00:02:56.700 --> 00:03:00.660
but now I can, of course, create a pull request

56
00:03:00.660 --> 00:03:03.240
on that original Repository.

57
00:03:03.240 --> 00:03:06.240
So this is now the original Repository

58
00:03:06.240 --> 00:03:09.090
and there I can open a new pull request

59
00:03:09.090 --> 00:03:11.310
and compare across forks

60
00:03:11.310 --> 00:03:14.934
to use my forked Repository as the source.

61
00:03:14.934 --> 00:03:18.390
And there this dev-max branch

62
00:03:18.390 --> 00:03:22.800
and target the main branch of the original Repository.

63
00:03:22.800 --> 00:03:26.070
Now, before I create this, please note

64
00:03:26.070 --> 00:03:29.280
that this should qualify for this Workflow.

65
00:03:29.280 --> 00:03:31.530
It should trigger this Workflow

66
00:03:31.530 --> 00:03:33.300
because it is a pull request.

67
00:03:33.300 --> 00:03:35.250
I'm opening a pull request

68
00:03:35.250 --> 00:03:37.373
and I'm targeting the main branch.

69
00:03:37.373 --> 00:03:39.870
The branch's filter here is always regarding

70
00:03:39.870 --> 00:03:41.430
the branch that's being targeted

71
00:03:41.430 --> 00:03:43.140
and I'm targeting the main branch.

72
00:03:43.140 --> 00:03:45.483
So this Workflow should be executed.

73
00:03:46.800 --> 00:03:51.800
So therefore back here, I will now create this pull request,

74
00:03:52.170 --> 00:03:57.170
like this, and back in the original Repository,

75
00:03:58.320 --> 00:04:00.681
if I refresh my actions page,

76
00:04:00.681 --> 00:04:05.681
I have this item here with this exclamation mark.

77
00:04:06.330 --> 00:04:09.870
So it looks like the Workflow wanted to run

78
00:04:09.870 --> 00:04:12.060
but wasn't really started.

79
00:04:12.060 --> 00:04:13.650
Now if we click on it,

80
00:04:13.650 --> 00:04:17.820
we see that here we must give approval first.

81
00:04:17.820 --> 00:04:21.894
We must first approve that this Workflow should be executed.

82
00:04:21.894 --> 00:04:23.943
Now why are we getting this?

83
00:04:24.870 --> 00:04:27.270
We are getting this because by default,

84
00:04:27.270 --> 00:04:31.260
pull requests based on forks do not trigger a Workflow,

85
00:04:31.260 --> 00:04:33.063
even if they technically should.

86
00:04:33.960 --> 00:04:37.320
The reason for that is that everyone can fork

87
00:04:37.320 --> 00:04:41.370
your public Repositories, and everyone can then create

88
00:04:41.370 --> 00:04:44.640
pull requests targeting your Repository.

89
00:04:44.640 --> 00:04:46.980
And because of that, people could, of course,

90
00:04:46.980 --> 00:04:49.950
start Workflow runs in a malicious way.

91
00:04:49.950 --> 00:04:54.450
More on that later in the course in the security section.

92
00:04:54.450 --> 00:04:58.050
And they could also simply spam your account

93
00:04:58.050 --> 00:05:00.870
and your Repository with Workflow runs

94
00:05:00.870 --> 00:05:04.530
by opening dozens or hundreds of pull requests.

95
00:05:04.530 --> 00:05:06.510
And even though you are not paying for that

96
00:05:06.510 --> 00:05:10.470
if it's a public Repository and you are using the free plan,

97
00:05:10.470 --> 00:05:12.540
this could get you into problems,

98
00:05:12.540 --> 00:05:14.850
and if you do have a paid GitHub account,

99
00:05:14.850 --> 00:05:16.623
it could even cost you money.

100
00:05:17.640 --> 00:05:20.220
So that can be a problem and that's why

101
00:05:20.220 --> 00:05:24.870
first-time contributors must be approved manually.

102
00:05:24.870 --> 00:05:27.570
So whenever first-time contributors,

103
00:05:27.570 --> 00:05:31.200
so people who have not opened pull requests before

104
00:05:31.200 --> 00:05:34.650
and had those pull requests approved by you before,

105
00:05:34.650 --> 00:05:38.070
whenever people open a pull request with your Repository

106
00:05:38.070 --> 00:05:41.880
for the first time, you as the owner have to approve

107
00:05:41.880 --> 00:05:45.960
that pull request first before the Workflow runs.

108
00:05:45.960 --> 00:05:48.660
And then subsequent pull requests

109
00:05:48.660 --> 00:05:51.090
will trigger the Workflow automatically

110
00:05:51.090 --> 00:05:54.813
because you approved this first pull request manually.

111
00:05:55.860 --> 00:05:57.870
So that's how that works.

112
00:05:57.870 --> 00:06:01.710
This is not the case if you add a collaborator

113
00:06:01.710 --> 00:06:05.070
and that collaborator opened a pull request

114
00:06:05.070 --> 00:06:06.540
because the assumption here is

115
00:06:06.540 --> 00:06:09.150
that people that were added as a collaborator

116
00:06:09.150 --> 00:06:13.620
by you are people you trust, but people you don't know,

117
00:06:13.620 --> 00:06:16.020
people who just fork your Repository,

118
00:06:16.020 --> 00:06:18.630
those people if they do open pull requests

119
00:06:18.630 --> 00:06:21.960
will not automatically trigger your workflows

120
00:06:21.960 --> 00:06:25.290
and the workflows will therefore not run automatically.

121
00:06:25.290 --> 00:06:27.093
That's something to be aware of.

