WEBVTT
1
00:00:02.070 --> 00:00:04.800
Now to get started with GitHub Actions,

2
00:00:04.800 --> 00:00:07.110
I wanna explore the key elements,

3
00:00:07.110 --> 00:00:10.470
the key components or building blocks you must understand

4
00:00:10.470 --> 00:00:14.790
when working with this GitHub Actions service or feature.

5
00:00:14.790 --> 00:00:17.880
And of course, we'll also see all these things in action

6
00:00:17.880 --> 00:00:19.080
in a couple of minutes.

7
00:00:19.080 --> 00:00:22.680
But let's take a look at these elements in theory first.

8
00:00:22.680 --> 00:00:25.560
And we got basically three main building blocks

9
00:00:25.560 --> 00:00:27.150
you must know and understand

10
00:00:27.150 --> 00:00:29.160
when working with GitHub Actions.

11
00:00:29.160 --> 00:00:33.090
And that would be Workflows, Jobs, and Steps.

12
00:00:33.090 --> 00:00:38.090
And workflows, Jobs, and Steps are related like this.

13
00:00:38.190 --> 00:00:40.950
You have a code Repository on GitHub

14
00:00:40.950 --> 00:00:43.920
that's important because this is a GitHub feature

15
00:00:43.920 --> 00:00:48.090
and it is related to repositories on GitHub.

16
00:00:48.090 --> 00:00:51.090
So you have such a Git Repository on GitHub

17
00:00:51.090 --> 00:00:53.580
and typically you'll be storing some code in there,

18
00:00:53.580 --> 00:00:56.520
but it could of course be any kind of project.

19
00:00:56.520 --> 00:00:59.130
The important thing just is that workflows

20
00:00:59.130 --> 00:01:02.430
are attached to those GitHub repositories.

21
00:01:02.430 --> 00:01:05.730
You can add workflows to GitHub repositories

22
00:01:05.730 --> 00:01:08.130
and you can add as many workflows as you want

23
00:01:08.130 --> 00:01:10.200
to a given repository.

24
00:01:10.200 --> 00:01:13.710
So this workflow thing is kind of the first thing you build

25
00:01:13.710 --> 00:01:17.220
or you create when setting up an automation process

26
00:01:17.220 --> 00:01:19.110
with GitHub Actions.

27
00:01:19.110 --> 00:01:24.000
Now such a workflow then includes one or more jobs,

28
00:01:24.000 --> 00:01:27.660
and that's the next important building block, jobs.

29
00:01:27.660 --> 00:01:30.870
So we have workflows that belong to repositories

30
00:01:30.870 --> 00:01:33.513
and then in those workflows we have jobs.

31
00:01:34.350 --> 00:01:38.580
Now those jobs then contain one or more steps

32
00:01:38.580 --> 00:01:40.860
that will be executed in the order

33
00:01:40.860 --> 00:01:42.420
in which they're specified.

34
00:01:42.420 --> 00:01:45.210
And these steps to define the actual things

35
00:01:45.210 --> 00:01:46.590
that will be done.

36
00:01:46.590 --> 00:01:50.460
Like for example, download the code in the first step,

37
00:01:50.460 --> 00:01:53.100
install the dependencies in the second step,

38
00:01:53.100 --> 00:01:56.700
and run automated tests in the third step.

39
00:01:56.700 --> 00:01:59.160
That's what you could do with GitHub Actions

40
00:01:59.160 --> 00:02:02.100
and with such a workflow that contains a job

41
00:02:02.100 --> 00:02:04.410
with the appropriate steps.

42
00:02:04.410 --> 00:02:05.280
And as mentioned,

43
00:02:05.280 --> 00:02:08.039
you can have as many workflows as you want,

44
00:02:08.039 --> 00:02:10.650
as many jobs per workflow as you want,

45
00:02:10.650 --> 00:02:13.263
and as many steps in a job as you want.

46
00:02:14.130 --> 00:02:17.670
So workflows, jobs, and steps are important.

47
00:02:17.670 --> 00:02:20.460
Now let's take a closer look at these three

48
00:02:20.460 --> 00:02:22.560
key building blocks though.

49
00:02:22.560 --> 00:02:26.820
As mentioned, workflows are attached to GitHub repositories,

50
00:02:26.820 --> 00:02:29.040
and they contain one or more jobs,

51
00:02:29.040 --> 00:02:31.200
that's what I already mentioned.

52
00:02:31.200 --> 00:02:32.670
Now what's important though

53
00:02:32.670 --> 00:02:36.240
is that you build those workflows with those jobs

54
00:02:36.240 --> 00:02:40.890
to set up some automated process that should be executed.

55
00:02:40.890 --> 00:02:43.890
But of course, it should not be executed all the time,

56
00:02:43.890 --> 00:02:47.730
but instead, with GitHub Actions, you assign so-called

57
00:02:47.730 --> 00:02:51.360
triggers or events to your workflows.

58
00:02:51.360 --> 00:02:55.770
These events define when a given workflow will be executed.

59
00:02:55.770 --> 00:02:58.950
For example, you could add an event that requires

60
00:02:58.950 --> 00:03:01.800
manual activation of a workflow,

61
00:03:01.800 --> 00:03:04.770
but you could also add an event that triggers

62
00:03:04.770 --> 00:03:08.760
and executes a workflow whenever a new commit is pushed

63
00:03:08.760 --> 00:03:10.113
to a certain branch.

64
00:03:11.250 --> 00:03:14.760
Now those jobs are then the things inside of the events

65
00:03:14.760 --> 00:03:18.180
that contain the steps that will be executed.

66
00:03:18.180 --> 00:03:20.760
Every job defines a so-called runner

67
00:03:20.760 --> 00:03:23.250
which is simply the execution environment,

68
00:03:23.250 --> 00:03:26.400
the machine and operating system that will be used

69
00:03:26.400 --> 00:03:28.680
for executing these steps.

70
00:03:28.680 --> 00:03:32.880
And with GitHub Actions, these runners can either be runners

71
00:03:32.880 --> 00:03:35.280
that are predefined by GitHub,

72
00:03:35.280 --> 00:03:39.420
they offer runners for Linux, Mac OS, and Windows,

73
00:03:39.420 --> 00:03:42.060
but you could also configure your own runners,

74
00:03:42.060 --> 00:03:43.683
but I'll get back to that later.

75
00:03:44.580 --> 00:03:47.220
Now, these jobs then also define the steps

76
00:03:47.220 --> 00:03:50.490
that will be executed in this runner environment,

77
00:03:50.490 --> 00:03:53.220
so on that machine you specified.

78
00:03:53.220 --> 00:03:57.750
And as mentioned before, you can have one or multiple jobs

79
00:03:57.750 --> 00:03:59.130
in a given Workflow.

80
00:03:59.130 --> 00:04:00.900
And if you have multiple jobs,

81
00:04:00.900 --> 00:04:03.360
they run in parallel by default,

82
00:04:03.360 --> 00:04:06.750
but you can also configure them to run in sequential order,

83
00:04:06.750 --> 00:04:08.763
so one job after another.

84
00:04:09.600 --> 00:04:11.940
You can also set up conditional jobs

85
00:04:11.940 --> 00:04:13.620
which will not always run,

86
00:04:13.620 --> 00:04:16.683
but which instead need a certain condition to be met.

87
00:04:17.610 --> 00:04:21.360
Now the part where the actual work happens

88
00:04:21.360 --> 00:04:25.230
or where you define what should be done, to be precise,

89
00:04:25.230 --> 00:04:26.910
are the steps.

90
00:04:26.910 --> 00:04:30.840
Steps belong to jobs, and a job can have one or more steps.

91
00:04:30.840 --> 00:04:33.690
And a step is either a shell script,

92
00:04:33.690 --> 00:04:36.690
a command in the command line that should be executed,

93
00:04:36.690 --> 00:04:40.980
or an action, which is another important building block,

94
00:04:40.980 --> 00:04:43.230
we'll take a closer look at later.

95
00:04:43.230 --> 00:04:47.340
Basically, actions in the context of GitHub Action

96
00:04:47.340 --> 00:04:51.000
are predefined scripts that perform a certain task

97
00:04:51.000 --> 00:04:52.230
you could say.

98
00:04:52.230 --> 00:04:54.900
And you can build your own actions if you need to

99
00:04:54.900 --> 00:04:58.830
or use third party actions, but for simple tasks,

100
00:04:58.830 --> 00:05:02.720
you can, as mentioned, also just execute a command

101
00:05:02.720 --> 00:05:03.840
in the command line,

102
00:05:03.840 --> 00:05:06.300
and you'll see all these things in action

103
00:05:06.300 --> 00:05:08.190
throughout the course, of course.

104
00:05:08.190 --> 00:05:11.340
Now a job must at least have one step,

105
00:05:11.340 --> 00:05:13.710
typically, you'll have more than one step though,

106
00:05:13.710 --> 00:05:17.010
and those steps are then executed in order,

107
00:05:17.010 --> 00:05:21.000
they don't run in parallel, but instead, step after step,

108
00:05:21.000 --> 00:05:24.030
and they can also be conditional.

109
00:05:24.030 --> 00:05:26.010
Now that's the theory.

110
00:05:26.010 --> 00:05:29.103
Let's now take a look at all these things in practice.

