WEBVTT
1
00:00:02.070 --> 00:00:04.980
Now, that's it for this course section,

2
00:00:04.980 --> 00:00:05.910
and in this section,

3
00:00:05.910 --> 00:00:09.600
you learned that there's a broad variety of events

4
00:00:09.600 --> 00:00:13.530
that can be used for triggering your workflows.

5
00:00:13.530 --> 00:00:15.240
There are many supported events,

6
00:00:15.240 --> 00:00:17.880
most of them are repository related

7
00:00:17.880 --> 00:00:21.780
like pushing or pull requests or issue related,

8
00:00:21.780 --> 00:00:24.060
but there also are more general events

9
00:00:24.060 --> 00:00:27.750
like a schedule on which you wanna run your workflows

10
00:00:27.750 --> 00:00:30.993
or manually triggering your workflows.

11
00:00:32.100 --> 00:00:34.440
Now, when it comes to specifying the events,

12
00:00:34.440 --> 00:00:37.830
many events do support activity types,

13
00:00:37.830 --> 00:00:40.320
which allow you to further narrow down

14
00:00:40.320 --> 00:00:44.220
which exact event types should trigger a workflow.

15
00:00:44.220 --> 00:00:46.920
For example, you could configure your workflow

16
00:00:46.920 --> 00:00:51.920
such that it runs when a pull request is opened or edited,

17
00:00:52.140 --> 00:00:54.120
you could also configure it such that it runs

18
00:00:54.120 --> 00:00:57.060
when it's closed, whatever you need.

19
00:00:57.060 --> 00:00:58.890
Now, regarding pull requests,

20
00:00:58.890 --> 00:01:01.800
it's also worth noting that if a pull request

21
00:01:01.800 --> 00:01:04.110
is coming from a forked repository,

22
00:01:04.110 --> 00:01:06.360
it will by default not trigger

23
00:01:06.360 --> 00:01:09.060
your pull request related workflows,

24
00:01:09.060 --> 00:01:11.520
because you have to manually approve

25
00:01:11.520 --> 00:01:14.640
such unknown contributors first

26
00:01:14.640 --> 00:01:18.990
before the pull request related workflow will run.

27
00:01:18.990 --> 00:01:22.650
Future workflow executions will then run automatically

28
00:01:22.650 --> 00:01:25.233
for pull requests from that person.

29
00:01:26.100 --> 00:01:28.410
Now, once a workflow is up and running,

30
00:01:28.410 --> 00:01:31.800
it can also be canceled either automatically,

31
00:01:31.800 --> 00:01:35.070
because it failed, because some job failed,

32
00:01:35.070 --> 00:01:38.400
because some step in a job failed,

33
00:01:38.400 --> 00:01:40.380
or you can cancel it manually

34
00:01:40.380 --> 00:01:43.410
if you know that the workflow won't succeed anyways

35
00:01:43.410 --> 00:01:44.760
or for some other reason,

36
00:01:44.760 --> 00:01:47.013
you don't want it to continue running.

37
00:01:47.970 --> 00:01:52.440
If you know right before pushing or whatever you're doing

38
00:01:52.440 --> 00:01:55.440
that you don't want your workflow to run,

39
00:01:55.440 --> 00:01:58.230
you can add a special instruction

40
00:01:58.230 --> 00:02:01.830
or a couple of special instructions to be precise

41
00:02:01.830 --> 00:02:06.090
to your commit messages to skip the workflow run

42
00:02:06.090 --> 00:02:08.103
that would otherwise be started.

43
00:02:09.150 --> 00:02:12.330
Well, and speaking of skipping workflow runs,

44
00:02:12.330 --> 00:02:16.410
you can also add event filters to your event definitions,

45
00:02:16.410 --> 00:02:19.800
which are kind of related to activity types,

46
00:02:19.800 --> 00:02:22.920
but which are not specifying which exact version

47
00:02:22.920 --> 00:02:25.620
of an event should trigger a workflow,

48
00:02:25.620 --> 00:02:28.770
but which instead allow you to only run a workflow

49
00:02:28.770 --> 00:02:31.890
if a certain condition is met.

50
00:02:31.890 --> 00:02:35.820
Those event filters exist for push and pull request events,

51
00:02:35.820 --> 00:02:38.820
and you can, for example, filter based on the branch

52
00:02:38.820 --> 00:02:41.700
that's targeted by the push or the pull request

53
00:02:41.700 --> 00:02:44.190
or by the files that will be affected.

54
00:02:44.190 --> 00:02:46.680
This allows you to control in detail

55
00:02:46.680 --> 00:02:50.193
when exactly your workflows should be executed.

