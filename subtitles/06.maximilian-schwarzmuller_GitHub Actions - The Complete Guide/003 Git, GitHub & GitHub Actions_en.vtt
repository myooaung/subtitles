WEBVTT
1
00:00:01.402 --> 00:00:04.800
I mentioned before that GitHub is a company,

2
00:00:04.800 --> 00:00:09.800
a company that helps with storing code in the cloud.

3
00:00:10.140 --> 00:00:13.830
But to better understand how GitHub helps with that,

4
00:00:13.830 --> 00:00:15.450
it's important to realize

5
00:00:15.450 --> 00:00:20.160
that the company's name GitHub includes the word Git.

6
00:00:20.160 --> 00:00:24.390
And Git is actually a standalone independent tool

7
00:00:24.390 --> 00:00:26.910
and it's important to understand what Git is

8
00:00:26.910 --> 00:00:30.630
to better understand what GitHub is all about.

9
00:00:30.630 --> 00:00:32.613
So what is Git?

10
00:00:33.837 --> 00:00:37.890
Git is a free version control system tool

11
00:00:37.890 --> 00:00:39.810
and it is a tool you can download

12
00:00:39.810 --> 00:00:42.510
and install on your machine no matter

13
00:00:42.510 --> 00:00:45.660
if it's a Windows or macOS or a Linux machine.

14
00:00:45.660 --> 00:00:50.660
And with that Git tool, you can manage source code changes

15
00:00:50.700 --> 00:00:52.936
of an application you might be writing

16
00:00:52.936 --> 00:00:55.980
or of a website you might be working on.

17
00:00:55.980 --> 00:00:57.420
Any source code,

18
00:00:57.420 --> 00:01:00.360
no matter which programming language is used

19
00:01:00.360 --> 00:01:03.510
or which kind of application is being built,

20
00:01:03.510 --> 00:01:07.260
any source code can be managed with Git.

21
00:01:07.260 --> 00:01:10.530
Now Git helps with managing your source code

22
00:01:10.530 --> 00:01:14.250
but, for example, allowing you to create snapshots,

23
00:01:14.250 --> 00:01:17.220
so-called commits, of that source code

24
00:01:17.220 --> 00:01:20.373
at any point in time you want to create a snapshot.

25
00:01:21.360 --> 00:01:25.530
You can also work on multiple versions of the same package

26
00:01:25.530 --> 00:01:29.460
or app or website or whatever simultaneously

27
00:01:29.460 --> 00:01:32.043
with help of a feature called branches.

28
00:01:32.880 --> 00:01:36.420
And you can easily switch between different branches

29
00:01:36.420 --> 00:01:39.210
and snapshots by checking them out.

30
00:01:39.210 --> 00:01:42.060
And these are all terms you will frequently hear

31
00:01:42.060 --> 00:01:44.460
in conjunction with Git.

32
00:01:44.460 --> 00:01:47.940
Now if this all does not tell you anything,

33
00:01:47.940 --> 00:01:50.820
then the next course section is for you

34
00:01:50.820 --> 00:01:53.490
because that next course section

35
00:01:53.490 --> 00:01:57.270
is a Git and GitHub crash course section

36
00:01:57.270 --> 00:01:59.790
which teaches you the key fundamentals

37
00:01:59.790 --> 00:02:02.370
you must know about Git and GitHub

38
00:02:02.370 --> 00:02:05.460
in order to get the most out of this course.

39
00:02:05.460 --> 00:02:09.750
If you already do know all these Git and GitHub fundamentals

40
00:02:09.750 --> 00:02:12.813
you can of course skip that next course section.

41
00:02:13.680 --> 00:02:16.260
So the idea behind Git is that you can use it

42
00:02:16.260 --> 00:02:18.240
to control your source code

43
00:02:18.240 --> 00:02:22.830
and, for example, easily roll back to older code snapshots

44
00:02:22.830 --> 00:02:24.720
if you messed something up,

45
00:02:24.720 --> 00:02:27.720
or develop new features simultaneously

46
00:02:27.720 --> 00:02:31.410
with your existing code without breaking that existing code

47
00:02:31.410 --> 00:02:35.130
which might currently be powering your active website.

48
00:02:35.130 --> 00:02:38.490
And you will see these things and Git in action

49
00:02:38.490 --> 00:02:42.390
in that crash course course section I just mentioned.

50
00:02:42.390 --> 00:02:43.740
So that's Git.

51
00:02:43.740 --> 00:02:46.080
What is GitHub then?

52
00:02:46.080 --> 00:02:47.520
GitHub is a company,

53
00:02:47.520 --> 00:02:51.990
and it is a company that offers cloud Git repositories

54
00:02:51.990 --> 00:02:55.140
and services related to that code

55
00:02:55.140 --> 00:02:56.913
which you're managing in the cloud.

56
00:02:57.900 --> 00:03:01.170
Now, a repository is simply a bucket,

57
00:03:01.170 --> 00:03:03.660
a space that contains your code.

58
00:03:03.660 --> 00:03:08.220
And when using Git, you have local code repositories.

59
00:03:08.220 --> 00:03:10.470
Any project that's managed with Git

60
00:03:10.470 --> 00:03:12.780
is called a repository.

61
00:03:12.780 --> 00:03:13.980
When using GitHub,

62
00:03:13.980 --> 00:03:17.460
you can also create such repositories in the cloud

63
00:03:17.460 --> 00:03:20.130
and you can connect such a cloud repository

64
00:03:20.130 --> 00:03:24.150
that you created with GitHub to your local repository

65
00:03:24.150 --> 00:03:28.110
and then push changes to that cloud repository

66
00:03:28.110 --> 00:03:31.050
or download them from that repository.

67
00:03:31.050 --> 00:03:33.330
And the idea simply is that if you,

68
00:03:33.330 --> 00:03:36.360
for example, lose your local machine,

69
00:03:36.360 --> 00:03:38.700
if it crashes and can't be restored,

70
00:03:38.700 --> 00:03:40.830
you don't lose your code.

71
00:03:40.830 --> 00:03:43.170
Or if you're switching to a different device

72
00:03:43.170 --> 00:03:47.100
you can download the code from this cloud repository

73
00:03:47.100 --> 00:03:49.470
and continue your work on it.

74
00:03:49.470 --> 00:03:50.400
Now with GitHub,

75
00:03:50.400 --> 00:03:53.400
you can create public and private repositories

76
00:03:53.400 --> 00:03:55.920
and you can also manage who has access

77
00:03:55.920 --> 00:03:59.793
to these repositories, who can change the code and so on.

78
00:04:00.930 --> 00:04:04.230
But it's not just about storing code.

79
00:04:04.230 --> 00:04:07.140
GitHub also offers features related

80
00:04:07.140 --> 00:04:11.310
to code management and collaborative development.

81
00:04:11.310 --> 00:04:13.530
It offers features called issues

82
00:04:13.530 --> 00:04:15.750
or projects or pull requests,

83
00:04:15.750 --> 00:04:17.399
which you will see in action

84
00:04:17.399 --> 00:04:20.640
in that crash course section I mentioned before,

85
00:04:20.640 --> 00:04:24.000
but which are in the end about tracking bugs,

86
00:04:24.000 --> 00:04:27.090
reporting bugs to code maintainers,

87
00:04:27.090 --> 00:04:30.480
organizing code projects, suggesting changes,

88
00:04:30.480 --> 00:04:31.830
and many other things.

89
00:04:31.830 --> 00:04:35.310
so GitHub is not just about storing code in the cloud,

90
00:04:35.310 --> 00:04:38.940
it's also about developing code together with others

91
00:04:38.940 --> 00:04:42.723
in the cloud with help of tools provided by GitHub.

92
00:04:43.650 --> 00:04:44.910
And last but not least,

93
00:04:44.910 --> 00:04:49.530
GitHub also offers automation services like GitHub Actions

94
00:04:49.530 --> 00:04:51.900
which, of course, is the focus of this course

95
00:04:51.900 --> 00:04:54.600
that help you automate repository

96
00:04:54.600 --> 00:04:57.360
and code related processes.

97
00:04:57.360 --> 00:05:01.710
So that's GitHub, that's Git, and most importantly,

98
00:05:01.710 --> 00:05:04.470
that's what GitHub Actions is.

99
00:05:04.470 --> 00:05:07.920
GitHub Actions is that service provided by GitHub

100
00:05:07.920 --> 00:05:10.710
that enables you to automate code

101
00:05:10.710 --> 00:05:14.790
or code and repository management related processes,

102
00:05:14.790 --> 00:05:15.963
and workflows.

