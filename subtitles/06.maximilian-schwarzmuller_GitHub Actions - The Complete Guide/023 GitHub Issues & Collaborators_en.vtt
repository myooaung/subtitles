WEBVTT
1
00:00:02.130 --> 00:00:04.530
So how can we now get our local changes

2
00:00:04.530 --> 00:00:07.320
to this Git Repository which we did not create,

3
00:00:07.320 --> 00:00:09.630
and which we don't own here on GitHub?

4
00:00:09.630 --> 00:00:13.710
How can we push these changes to this Repository?

5
00:00:13.710 --> 00:00:17.550
As you saw before, we don't have the permissions for that.

6
00:00:17.550 --> 00:00:20.610
Well, there are two main ways here.

7
00:00:20.610 --> 00:00:24.810
We could fork it, and I'll get back to forking later.

8
00:00:24.810 --> 00:00:26.913
But if we did not fork this Repository,

9
00:00:26.913 --> 00:00:31.350
and we instead cloned the original Repository as we did it,

10
00:00:31.350 --> 00:00:34.470
then we simply have to reach out

11
00:00:34.470 --> 00:00:38.820
to the creator of that Repository,

12
00:00:38.820 --> 00:00:43.113
and basically ask for permission to push to this Repository.

13
00:00:44.370 --> 00:00:45.990
Now, of course, we could reach out with

14
00:00:45.990 --> 00:00:48.210
help of contact details that might be

15
00:00:48.210 --> 00:00:50.070
mentioned here in the Read Me,

16
00:00:50.070 --> 00:00:54.330
but one way we could reach out is to create a issue.

17
00:00:54.330 --> 00:00:56.880
Now, very important, I don't wanna say that

18
00:00:56.880 --> 00:00:59.190
you Should use this issues feature

19
00:00:59.190 --> 00:01:01.890
to contact people on GitHub.

20
00:01:01.890 --> 00:01:04.050
Instead this issues feature is a

21
00:01:04.050 --> 00:01:06.330
feature meant to be used to report

22
00:01:06.330 --> 00:01:08.823
bugs or possibly suggestions.

23
00:01:09.690 --> 00:01:14.070
Nonetheless here, our suggestion could be to use this color,

24
00:01:14.070 --> 00:01:17.070
and therefore we could share our suggestion here.

25
00:01:17.070 --> 00:01:20.580
And then either, the original creator of this project

26
00:01:20.580 --> 00:01:22.560
implements this suggestion,

27
00:01:22.560 --> 00:01:24.420
in that case, it would be fine that

28
00:01:24.420 --> 00:01:26.100
we can't push our code,

29
00:01:26.100 --> 00:01:29.329
because our change then still made it into the project.

30
00:01:29.329 --> 00:01:32.190
Or the suggestion is not picked up,

31
00:01:32.190 --> 00:01:34.113
then we have to live with that.

32
00:01:35.040 --> 00:01:37.110
But there also is a third option,

33
00:01:37.110 --> 00:01:42.000
and the creator of the project might ask us to basically

34
00:01:42.000 --> 00:01:44.580
well, make that change ourselves because

35
00:01:44.580 --> 00:01:47.340
they like that change, but they don't have time

36
00:01:47.340 --> 00:01:49.110
to implement it themselves.

37
00:01:49.110 --> 00:01:52.320
And that might be what we're hoping for here.

38
00:01:52.320 --> 00:01:54.900
So the offer, we can report a new bug,

39
00:01:54.900 --> 00:01:58.020
or in our case, make a suggestion,

40
00:01:58.020 --> 00:02:01.140
by clicking on New Issue here.

41
00:02:01.140 --> 00:02:03.810
And keep in mind I am in this second account

42
00:02:03.810 --> 00:02:07.140
who does not own this Repository.

43
00:02:07.140 --> 00:02:09.060
And then here we might give this issue

44
00:02:09.060 --> 00:02:12.900
a title of suggestion, Change Title Color,

45
00:02:12.900 --> 00:02:14.790
and then we write some text where

46
00:02:14.790 --> 00:02:17.010
we go into more detail.

47
00:02:17.010 --> 00:02:20.670
Where we could say I think it looks better,

48
00:02:20.670 --> 00:02:25.290
if the main title is a bit more orange.

49
00:02:25.290 --> 00:02:30.240
The styling rule could be changed like this.

50
00:02:30.240 --> 00:02:32.613
And here we're again using markdown,

51
00:02:32.613 --> 00:02:36.510
and we can add some code by adding three backticks here,

52
00:02:36.510 --> 00:02:39.090
and three backticks here, and writing CSS

53
00:02:39.090 --> 00:02:42.600
after these three backticks to basically tell Mark down

54
00:02:42.600 --> 00:02:45.180
that we have a CSS code snippet between

55
00:02:45.180 --> 00:02:48.090
these wrapper backticks here.

56
00:02:48.090 --> 00:02:50.520
And then we simply grab our updated code here.

57
00:02:50.520 --> 00:02:55.350
Whoops, this H1 Code, and paste this in here.

58
00:02:55.350 --> 00:02:57.720
That could be our description text.

59
00:02:57.720 --> 00:02:59.670
Of course, it depends on which kind of

60
00:02:59.670 --> 00:03:01.920
bug or issue you're reporting.

61
00:03:01.920 --> 00:03:03.810
Or which kind of suggestion you have,

62
00:03:03.810 --> 00:03:05.193
what you wanna write here.

63
00:03:06.090 --> 00:03:09.060
You can also see a preview of what will be posted.

64
00:03:09.060 --> 00:03:11.160
And you can look up this Markdown help

65
00:03:11.160 --> 00:03:13.230
I showed you earlier.

66
00:03:13.230 --> 00:03:15.420
So here I'm now submitting this new issue,

67
00:03:15.420 --> 00:03:17.250
and now this was reported.

68
00:03:17.250 --> 00:03:18.960
And hence we have this one here.

69
00:03:18.960 --> 00:03:23.313
Now this Repository has one issue and that's our suggestion.

70
00:03:24.300 --> 00:03:27.240
Now here I'm back on GitHub with that main user,

71
00:03:27.240 --> 00:03:30.090
who did create this remote Repository

72
00:03:30.090 --> 00:03:32.610
and who owns this remote Repository.

73
00:03:32.610 --> 00:03:34.200
As you can tell by the fact that

74
00:03:34.200 --> 00:03:37.560
I do have this setting button here and here,

75
00:03:37.560 --> 00:03:40.560
I'm now seeing that a new issue was reported

76
00:03:40.560 --> 00:03:42.213
Or in this case a suggestion.

77
00:03:43.110 --> 00:03:47.190
I can read it and maybe I decide that this is a good idea

78
00:03:47.190 --> 00:03:49.170
and should be implemented.

79
00:03:49.170 --> 00:03:52.440
But I don't have time to do it myself now,

80
00:03:52.440 --> 00:03:54.990
and for some reason I trust this person.

81
00:03:54.990 --> 00:03:57.480
And of course, that's maybe a bit unrealistic.

82
00:03:57.480 --> 00:04:00.570
You typically don't start trusting strangers

83
00:04:00.570 --> 00:04:03.120
just because they reported one suggestion,

84
00:04:03.120 --> 00:04:04.680
but for the sake of this demo,

85
00:04:04.680 --> 00:04:07.290
let's say we wanna allow this person

86
00:04:07.290 --> 00:04:10.890
to edit the code of this Repository.

87
00:04:10.890 --> 00:04:14.220
Again, not necessarily something you wanna do all the time,

88
00:04:14.220 --> 00:04:16.140
but here I wanna show you how

89
00:04:16.140 --> 00:04:18.123
people can work together on GitHub.

90
00:04:19.230 --> 00:04:21.029
Therefore, what we wanna do,

91
00:04:21.029 --> 00:04:26.030
is add this person as a Collaborator to this Repository.

92
00:04:26.250 --> 00:04:28.350
Because right now this other person

93
00:04:28.350 --> 00:04:30.870
can't push to the Repository as you saw.

94
00:04:30.870 --> 00:04:32.820
And now I wanna make sure that this person

95
00:04:32.820 --> 00:04:33.970
is able to Push

96
00:04:34.920 --> 00:04:37.230
For that, as the owner of the Repository,

97
00:04:37.230 --> 00:04:40.980
we can go to settings, and then to Collaborators.

98
00:04:40.980 --> 00:04:43.590
And here we can add other GitHub accounts

99
00:04:43.590 --> 00:04:46.470
who should have right access to this Repository.

100
00:04:46.470 --> 00:04:49.143
So who can push to this Repository.

101
00:04:50.400 --> 00:04:52.620
Now, GitHub up also has some other features

102
00:04:52.620 --> 00:04:54.270
in their paid plans.

103
00:04:54.270 --> 00:04:56.280
There you can have organizations,

104
00:04:56.280 --> 00:04:58.380
and teams with team members.

105
00:04:58.380 --> 00:05:00.690
And of course there you can also manage

106
00:05:00.690 --> 00:05:03.150
access permissions for Repositories,

107
00:05:03.150 --> 00:05:06.660
but for public repositories, with such a free plan,

108
00:05:06.660 --> 00:05:08.463
we can add collaborators.

109
00:05:09.510 --> 00:05:12.360
So here I can now start adding people,

110
00:05:12.360 --> 00:05:15.630
People who are able to collaborate.

111
00:05:15.630 --> 00:05:18.030
And as you see here, I need the username,

112
00:05:18.030 --> 00:05:20.220
which in this case is Maxacademind2

113
00:05:20.220 --> 00:05:22.560
for my second user here.

114
00:05:22.560 --> 00:05:26.043
So I invite this person to collaborate here.

115
00:05:26.910 --> 00:05:30.390
Now that other person should receive email

116
00:05:30.390 --> 00:05:33.870
which invites it to collaborate.

117
00:05:33.870 --> 00:05:36.330
And if that other user clicks that link

118
00:05:36.330 --> 00:05:39.621
in that email, they can accept this invitation.

119
00:05:39.621 --> 00:05:42.840
And with that, as you can also see up here,

120
00:05:42.840 --> 00:05:46.143
we now have push access to this Repository.

121
00:05:46.980 --> 00:05:50.070
Now as the main owner of this Repository,

122
00:05:50.070 --> 00:05:53.730
So here Maxacademind1, I still might want to make sure

123
00:05:53.730 --> 00:05:57.150
that this other person can't push to the main Branch.

124
00:05:57.150 --> 00:05:59.220
So here under settings Branches,

125
00:05:59.220 --> 00:06:01.821
we can actually set up a branch protection rule,

126
00:06:01.821 --> 00:06:05.147
and select our main branch here,

127
00:06:05.147 --> 00:06:09.390
and require a pull request for this main branch,

128
00:06:09.390 --> 00:06:11.310
which means that for the main branch,

129
00:06:11.310 --> 00:06:14.520
you are not able to just directly push into it.

130
00:06:14.520 --> 00:06:17.430
Instead, you have to open a so-called pull request,

131
00:06:17.430 --> 00:06:19.773
which is something I'll get back to later.

132
00:06:20.760 --> 00:06:23.970
Here, I'll now create this branch protection rule.

133
00:06:23.970 --> 00:06:26.460
And now people should not be able to directly

134
00:06:26.460 --> 00:06:28.200
push into the main branch.

135
00:06:28.200 --> 00:06:32.100
To other branches it's possible, but not the main branch.

136
00:06:32.100 --> 00:06:33.960
Now here in this example, that's just fine,

137
00:06:33.960 --> 00:06:35.940
because I did create a separate branch

138
00:06:35.940 --> 00:06:38.730
and now that I have been added as a collaborator

139
00:06:38.730 --> 00:06:42.633
I wanna push this branch to this cue this GitHub Repository.

140
00:06:43.500 --> 00:06:46.620
In order to do that, I just have to do one thing.

141
00:06:46.620 --> 00:06:48.390
And again, keep in mind, now here

142
00:06:48.390 --> 00:06:50.310
I'm on that second account,

143
00:06:50.310 --> 00:06:55.310
I have to change that URL of my origins,

144
00:06:55.800 --> 00:06:59.160
of my remote Repository, that link URL

145
00:06:59.160 --> 00:07:01.620
and I have to include my GitHub username

146
00:07:01.620 --> 00:07:05.010
in order to make sure that I'll be prompted for a password,

147
00:07:05.010 --> 00:07:08.490
which then allows me to successfully push to that Repository

148
00:07:08.490 --> 00:07:10.983
because they still must authenticate my request.

149
00:07:12.270 --> 00:07:17.270
So the offer, I'll grab that URL again, add it here,

150
00:07:17.670 --> 00:07:21.120
but in front of github.com, I'll add my username,

151
00:07:21.120 --> 00:07:23.586
which in this case is Maxacademind2

152
00:07:23.586 --> 00:07:26.013
because I'm on that second user.

153
00:07:27.210 --> 00:07:32.210
Hit enter, and now if I wanna push this feat color branch,

154
00:07:32.940 --> 00:07:34.683
I'm again asked for a password.

155
00:07:35.910 --> 00:07:38.760
So therefore, now ask this second user again,

156
00:07:38.760 --> 00:07:41.700
as you can see here, I have to go to settings

157
00:07:41.700 --> 00:07:44.220
and use such a personal access token

158
00:07:44.220 --> 00:07:46.800
because this is on a different machine, different user,

159
00:07:46.800 --> 00:07:47.973
I need a new token.

160
00:07:48.870 --> 00:07:52.260
So generate that token, with any name of your choice,

161
00:07:52.260 --> 00:07:57.260
give it repo permissions, generate it, copy the token.

162
00:07:58.650 --> 00:08:00.570
Again, you'll only see it once,

163
00:08:00.570 --> 00:08:04.323
as it also says here, and use that for pushing.

164
00:08:05.670 --> 00:08:08.310
And now that branch was pushed successfully,

165
00:08:08.310 --> 00:08:10.410
because there was no branch protection,

166
00:08:10.410 --> 00:08:12.600
for this feature branch.

167
00:08:12.600 --> 00:08:15.930
Therefore, here we see that this branch was pushed.

168
00:08:15.930 --> 00:08:18.150
And as the owner of this Repository,

169
00:08:18.150 --> 00:08:21.033
we also see that this branch is there now.

170
00:08:21.990 --> 00:08:23.580
And that's now the part where

171
00:08:23.580 --> 00:08:26.400
we might wanna merge it into the main branch.

172
00:08:26.400 --> 00:08:28.260
And it's not a good idea to

173
00:08:28.260 --> 00:08:29.910
directly push to the main branch.

174
00:08:29.910 --> 00:08:32.010
That's typically not what you wanna do,

175
00:08:32.010 --> 00:08:35.520
because you wanna give the owner or your colleagues

176
00:08:35.520 --> 00:08:38.610
a chance of reviewing your change instead

177
00:08:38.610 --> 00:08:40.860
of directly pushing it, into this main branch

178
00:08:40.860 --> 00:08:43.049
which is typically the production branch.

179
00:08:43.049 --> 00:08:45.540
The branch that is responsible for the website

180
00:08:45.540 --> 00:08:46.830
that's currently live,

181
00:08:46.830 --> 00:08:50.490
and a branch that might trigger an automatic deployment flow

182
00:08:50.490 --> 00:08:52.050
once pushed into it.

183
00:08:52.050 --> 00:08:55.260
That's why we also set up this branch protection.

184
00:08:55.260 --> 00:08:58.170
So in order to get our changes into the main branch

185
00:08:58.170 --> 00:09:00.423
we'll now create such a pull request.

