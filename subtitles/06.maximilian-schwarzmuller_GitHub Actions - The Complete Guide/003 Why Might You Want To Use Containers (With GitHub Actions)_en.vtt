WEBVTT
1
00:00:02.130 --> 00:00:04.800
Now when it comes to Docker Containers,

2
00:00:04.800 --> 00:00:08.370
you can create them by writing a Docker file

3
00:00:08.370 --> 00:00:11.340
that defines how your Container

4
00:00:11.340 --> 00:00:14.370
so how this package should be set up.

5
00:00:14.370 --> 00:00:17.760
And you always start by defining a base image

6
00:00:17.760 --> 00:00:20.820
as it's called on which your Container is based.

7
00:00:20.820 --> 00:00:22.650
So in this case here, that for example

8
00:00:22.650 --> 00:00:25.110
would be an image that has node js installed

9
00:00:25.110 --> 00:00:27.960
on top of some Linux operating system.

10
00:00:27.960 --> 00:00:30.090
I have some environment variables to find

11
00:00:30.090 --> 00:00:32.182
for this Container.

12
00:00:32.182 --> 00:00:34.020
And then I have some steps that are always

13
00:00:34.020 --> 00:00:37.440
executed when this Container is prepared

14
00:00:37.440 --> 00:00:39.030
and which give me an environment

15
00:00:39.030 --> 00:00:41.910
in which I can run this application whenever I want to

16
00:00:41.910 --> 00:00:44.070
on whichever machine I want to

17
00:00:44.070 --> 00:00:46.983
as long as that machine supports Docker.

18
00:00:48.030 --> 00:00:49.830
But I do have a complete course

19
00:00:49.830 --> 00:00:53.160
about Docker and Containers where you can learn all

20
00:00:53.160 --> 00:00:55.020
about this Container thing

21
00:00:55.020 --> 00:00:57.450
and where you can dive much deeper.

22
00:00:57.450 --> 00:00:59.550
This is not a Container course, and

23
00:00:59.550 --> 00:01:01.860
if it doesn't make any sense to you at all

24
00:01:01.860 --> 00:01:03.780
you can skip this section

25
00:01:03.780 --> 00:01:06.900
because GitHub Actions supports Containers

26
00:01:06.900 --> 00:01:09.090
but you don't have to use them.

27
00:01:09.090 --> 00:01:13.590
But using Containers can have various advantages because

28
00:01:13.590 --> 00:01:17.580
with GitHub Actions you can run your jobs and their steps

29
00:01:17.580 --> 00:01:20.460
on "Just the Runner" machine, which you define.

30
00:01:20.460 --> 00:01:23.250
That's what we did thus far in this course

31
00:01:23.250 --> 00:01:25.260
but you can also run them inside

32
00:01:25.260 --> 00:01:27.990
of a Container defined by you.

33
00:01:27.990 --> 00:01:30.390
And the advantage of using Containers instead

34
00:01:30.390 --> 00:01:34.350
of "Just the Runner" machine as we did it thus far, is that

35
00:01:34.350 --> 00:01:38.040
with a Container, since you defined the entire environment

36
00:01:38.040 --> 00:01:41.430
you have full control over the environment

37
00:01:41.430 --> 00:01:43.410
over the installed software

38
00:01:43.410 --> 00:01:45.630
and the setup steps that were performed

39
00:01:45.630 --> 00:01:47.703
for setting up that environment.

40
00:01:48.540 --> 00:01:51.390
If you are running your jobs and their steps directly

41
00:01:51.390 --> 00:01:54.660
on the Runner, then you are stuck with that Runner.

42
00:01:54.660 --> 00:01:57.420
And that, for example, means that you have an environment

43
00:01:57.420 --> 00:02:00.300
with a predefined operating system version

44
00:02:00.300 --> 00:02:03.540
and a predefined list of software.

45
00:02:03.540 --> 00:02:06.930
I did show you this information about the pre-installed

46
00:02:06.930 --> 00:02:10.110
software earlier, and it depends on which runner

47
00:02:10.110 --> 00:02:11.160
you are using.

48
00:02:11.160 --> 00:02:14.460
And depending on that choice, you then have various tools

49
00:02:14.460 --> 00:02:17.610
and services pre-installed and running on that runner

50
00:02:17.610 --> 00:02:19.800
machine provided by GitHub.

51
00:02:19.800 --> 00:02:22.920
Now, often that maybe all the software you need

52
00:02:22.920 --> 00:02:26.160
but sometimes some software or setting might be missing

53
00:02:26.160 --> 00:02:29.700
or you might have a version that you don't wanna work with.

54
00:02:29.700 --> 00:02:33.300
Now of course, you can always go to a Workflow

55
00:02:33.300 --> 00:02:37.140
and add a new step where you install some extra software.

56
00:02:37.140 --> 00:02:40.500
That's always an option, but when using Containers

57
00:02:40.500 --> 00:02:43.680
you could create such a predefined environment separately

58
00:02:43.680 --> 00:02:46.980
from your GitHub Actions Workflow definition file

59
00:02:46.980 --> 00:02:49.980
and you could reuse the container in different workflows

60
00:02:49.980 --> 00:02:52.590
wherever you need that environment.

61
00:02:52.590 --> 00:02:53.910
So that could be the advantage

62
00:02:53.910 --> 00:02:56.949
of using such a Container that you can build

63
00:02:56.949 --> 00:02:58.860
your own clearly defined environment in which

64
00:02:58.860 --> 00:03:01.080
your code will run or will be built

65
00:03:01.080 --> 00:03:04.380
or tested or whatever you want to do with it.

66
00:03:04.380 --> 00:03:08.550
Now as mentioned, GitHub Actions supports Docker Containers

67
00:03:08.550 --> 00:03:12.420
and you can simply run Docker Containers on top

68
00:03:12.420 --> 00:03:17.420
of those Runners provided by GitHub and by GitHub Actions.

69
00:03:17.760 --> 00:03:22.080
Your containerized job is then simply hosted by the Runner

70
00:03:22.080 --> 00:03:24.450
so it's running on that Runner machine

71
00:03:24.450 --> 00:03:26.640
but in an isolated environment.

72
00:03:26.640 --> 00:03:29.830
The environment defined by you in the Container definition

73
00:03:31.084 --> 00:03:33.120
and the steps, and that's the important part

74
00:03:33.120 --> 00:03:37.203
the steps of the job are then executed inside the Container.

75
00:03:38.250 --> 00:03:41.520
And they're also is another feature called Services

76
00:03:41.520 --> 00:03:45.150
or Service containers, which we will also explore later

77
00:03:45.150 --> 00:03:48.630
in this section, which allows you to run extra services

78
00:03:48.630 --> 00:03:53.370
in Containers that might be needed by your main build job

79
00:03:53.370 --> 00:03:56.670
or by the main thing you might be doing in your job

80
00:03:56.670 --> 00:03:59.730
and it will become clearer later when also dive

81
00:03:59.730 --> 00:04:01.263
into a concrete example.

