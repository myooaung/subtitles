WEBVTT
1
00:00:02.100 --> 00:00:03.990
When working with Git

2
00:00:03.990 --> 00:00:06.600
and when using Git for managing code,

3
00:00:06.600 --> 00:00:11.600
it all comes down to creating a Git Repository initially.

4
00:00:12.240 --> 00:00:16.230
Because all these Git features and commands can only be used

5
00:00:16.230 --> 00:00:20.610
in projects that have a Git Repository attached to them.

6
00:00:20.610 --> 00:00:23.370
And a Repository simply is a folder

7
00:00:23.370 --> 00:00:25.770
that's part of your project folder

8
00:00:25.770 --> 00:00:27.960
that in the end is used by Git

9
00:00:27.960 --> 00:00:30.210
to track all your code changes

10
00:00:30.210 --> 00:00:33.540
and store all your code snapshots, you could say.

11
00:00:33.540 --> 00:00:36.180
It stores all the metadata that's needed

12
00:00:36.180 --> 00:00:38.850
by Git to allow you to jump back

13
00:00:38.850 --> 00:00:41.580
to older snapshots, for example.

14
00:00:41.580 --> 00:00:44.280
And Git commands are only available

15
00:00:44.280 --> 00:00:48.123
in projects that have such a Repository attached to them.

16
00:00:49.020 --> 00:00:51.780
Now whenever you create a brand new project

17
00:00:51.780 --> 00:00:55.650
it typically doesn't have a Git Repository attached

18
00:00:55.650 --> 00:00:58.650
to it though, and you can therefore easily create one

19
00:00:58.650 --> 00:01:03.630
by running the special Git init command in a project folder.

20
00:01:03.630 --> 00:01:06.390
That's only required once per project

21
00:01:06.390 --> 00:01:10.050
because it's only required to initialize that project

22
00:01:10.050 --> 00:01:14.130
and put it under Gits control, you could say.

23
00:01:14.130 --> 00:01:16.950
And some projects that you might have created

24
00:01:16.950 --> 00:01:20.460
with help of other tools or CLIs

25
00:01:20.460 --> 00:01:23.070
might already do that for you.

26
00:01:23.070 --> 00:01:25.200
In that case, Git init will tell you

27
00:01:25.200 --> 00:01:27.300
that it's not needed anymore though.

28
00:01:27.300 --> 00:01:30.120
For example, if you create new React projects

29
00:01:30.120 --> 00:01:33.033
those typically come with a Git Repository.

30
00:01:33.930 --> 00:01:36.390
But that's not too important here.

31
00:01:36.390 --> 00:01:39.690
This starting project here doesn't have a Repository

32
00:01:39.690 --> 00:01:41.760
attached to it yet, and we can tell

33
00:01:41.760 --> 00:01:46.760
that this is the case if we open our system terminal.

34
00:01:46.950 --> 00:01:51.950
Here in my case on macOS, it's this default macOS terminal.

35
00:01:52.410 --> 00:01:56.730
And we try to run a Git command here in this project folder.

36
00:01:56.730 --> 00:02:00.060
The nice thing about this integrated terminal here

37
00:02:00.060 --> 00:02:03.480
in Visual Studio Code is that it's already navigated

38
00:02:03.480 --> 00:02:04.950
into this project folder,

39
00:02:04.950 --> 00:02:07.680
so all commands I run in this terminal

40
00:02:07.680 --> 00:02:10.350
are executed in this folder.

41
00:02:10.350 --> 00:02:12.000
If you're using a different solution,

42
00:02:12.000 --> 00:02:14.940
you must make sure that you navigate it into this folder

43
00:02:14.940 --> 00:02:17.430
in your terminal or command prompt first

44
00:02:17.430 --> 00:02:19.473
before executing any commands.

45
00:02:20.370 --> 00:02:23.340
So here I now wanna run a Git command.

46
00:02:23.340 --> 00:02:25.530
And even though we haven't learned about it yet

47
00:02:25.530 --> 00:02:28.503
let's run Git add index html.

48
00:02:29.400 --> 00:02:31.020
I'll explain this command later,

49
00:02:31.020 --> 00:02:33.510
for the moment let's just try running this command.

50
00:02:33.510 --> 00:02:36.060
And as you will see it tells me

51
00:02:36.060 --> 00:02:38.880
that this is not a Git Repository,

52
00:02:38.880 --> 00:02:41.460
so that there is no Git Repository yet

53
00:02:41.460 --> 00:02:45.303
and therefore this project can't be managed with Git.

54
00:02:46.320 --> 00:02:49.590
That's why we need to run Git init as a first step,

55
00:02:49.590 --> 00:02:52.170
that command I showed you on the slide.

56
00:02:52.170 --> 00:02:55.920
This will initialize and create such a Git Repository

57
00:02:55.920 --> 00:02:59.040
and kind of attach it to this project folder.

58
00:02:59.040 --> 00:03:00.810
By the way, this also means

59
00:03:00.810 --> 00:03:04.683
that all subfolders of this project are managed by Git.

60
00:03:05.670 --> 00:03:08.880
So if I hit enter, this is created, and what this did

61
00:03:08.880 --> 00:03:13.170
under the hood is, it created an invisible .Git folder

62
00:03:13.170 --> 00:03:16.770
that holds all that Git relevant metadata.

63
00:03:16.770 --> 00:03:20.820
Now that I did initialize this project by running Git init

64
00:03:20.820 --> 00:03:24.240
I can use these other Git commands.

65
00:03:24.240 --> 00:03:27.900
Here in Visual Studio Code with all the default settings

66
00:03:27.900 --> 00:03:30.960
you might also notice that some things changed here,

67
00:03:30.960 --> 00:03:33.720
and for example, the text is now green

68
00:03:33.720 --> 00:03:36.150
or in some other color.

69
00:03:36.150 --> 00:03:40.800
You also might notice that there is a U next to index html

70
00:03:40.800 --> 00:03:44.310
after running Git init in this project folder.

71
00:03:44.310 --> 00:03:47.940
This is just some help provided by Visual Studio Code

72
00:03:47.940 --> 00:03:50.820
which has a strong Git integration

73
00:03:50.820 --> 00:03:55.820
to give you some visual hints that tell you which files

74
00:03:56.310 --> 00:04:00.150
are part of which snapshot and so on.

75
00:04:00.150 --> 00:04:02.910
You can totally ignore that and you don't need that

76
00:04:02.910 --> 00:04:06.180
but it can sometimes help with using Git.

77
00:04:06.180 --> 00:04:07.950
For this course it's not important

78
00:04:07.950 --> 00:04:10.860
that you have this color coding though.

79
00:04:10.860 --> 00:04:15.270
So this project was initialized, or Git was initialized.

80
00:04:15.270 --> 00:04:17.192
How can we now use Git?

