WEBVTT
1
00:00:02.340 --> 00:00:03.570
Now in the previous lecture

2
00:00:03.570 --> 00:00:05.640
I did add some environment variables

3
00:00:05.640 --> 00:00:07.530
and provide some values for them.

4
00:00:07.530 --> 00:00:10.620
And I did create that cloud database here,

5
00:00:10.620 --> 00:00:11.760
which I'll use here

6
00:00:11.760 --> 00:00:14.670
to really show you how this works in action.

7
00:00:14.670 --> 00:00:15.810
But I'm not fully finished

8
00:00:15.810 --> 00:00:18.063
with this Workflow definition file yet.

9
00:00:19.050 --> 00:00:21.060
Because there are some parts of that file

10
00:00:21.060 --> 00:00:24.540
that still must be added, for example, down here,

11
00:00:24.540 --> 00:00:27.240
this command in the end makes sure that the

12
00:00:27.240 --> 00:00:31.470
server, the web server, is started and it must be started

13
00:00:31.470 --> 00:00:34.230
in order to run the tests thereafter.

14
00:00:34.230 --> 00:00:36.660
But this part is then important to make sure

15
00:00:36.660 --> 00:00:39.240
that the next steps can be executed

16
00:00:39.240 --> 00:00:42.030
without shutting down the server first.

17
00:00:42.030 --> 00:00:45.720
And here I must enter the port of the web server.

18
00:00:45.720 --> 00:00:48.360
So the port on which I'm listening.

19
00:00:48.360 --> 00:00:50.340
Now of course the port is dynamic.

20
00:00:50.340 --> 00:00:53.640
I do set it here with this environment variable.

21
00:00:53.640 --> 00:00:57.060
So therefore, this environment variable is not just used

22
00:00:57.060 --> 00:00:59.340
in my code and configuration files.

23
00:00:59.340 --> 00:01:01.170
It's also used to write in here

24
00:01:01.170 --> 00:01:03.720
in this Workflow definition file.

25
00:01:03.720 --> 00:01:06.750
And that's not uncommon, that you have some environment

26
00:01:06.750 --> 00:01:08.730
variables that also must be used

27
00:01:08.730 --> 00:01:11.040
inside of the Workflow definition file.

28
00:01:11.040 --> 00:01:13.650
And thankfully, using environment variables in there

29
00:01:13.650 --> 00:01:16.380
is quite straightforward as well.

30
00:01:16.380 --> 00:01:19.050
Whenever you need to use an environment variable

31
00:01:19.050 --> 00:01:22.890
in such a run instruction, you can interpolate it

32
00:01:22.890 --> 00:01:25.470
by using dollar sign and then the name

33
00:01:25.470 --> 00:01:28.530
of the environment variable, in this case port.

34
00:01:28.530 --> 00:01:30.780
Now the exact syntax can be different

35
00:01:30.780 --> 00:01:32.970
if you're using a different shell here.

36
00:01:32.970 --> 00:01:35.400
If you're running this on a Windows machine, for example

37
00:01:35.400 --> 00:01:38.130
instead of a Linux machine as I'm doing it.

38
00:01:38.130 --> 00:01:41.130
But for a Linux, this is the syntax you use

39
00:01:41.130 --> 00:01:43.410
in a default shell to interpolate

40
00:01:43.410 --> 00:01:47.220
and output the value of an environment variable.

41
00:01:47.220 --> 00:01:50.880
On Windows where the PowerShell is used by default,

42
00:01:50.880 --> 00:01:54.990
this would be the syntax you use instead, for example.

43
00:01:54.990 --> 00:01:58.440
In general, you can also use the Shell key when

44
00:01:58.440 --> 00:02:02.100
defining a step to switch from the default operating shell

45
00:02:02.100 --> 00:02:05.790
to a different one. For example, instead of using Bash,

46
00:02:05.790 --> 00:02:08.789
which is the default on non-Windows platforms,

47
00:02:08.789 --> 00:02:12.750
you could switch to Python to execute all your commands

48
00:02:12.750 --> 00:02:14.313
as Python commands.

49
00:02:15.750 --> 00:02:18.300
And therefore, if you are switching to a different shell,

50
00:02:18.300 --> 00:02:21.780
by adding this shell key to your steps, you might need to

51
00:02:21.780 --> 00:02:25.020
change the syntax for interpolating environment variables,

52
00:02:25.020 --> 00:02:27.480
but in that case, the official shell documentation

53
00:02:27.480 --> 00:02:28.863
is the place to go.

54
00:02:29.760 --> 00:02:32.610
So here on Ubuntu latest in that default shell

55
00:02:32.610 --> 00:02:34.590
this is the syntax for interpolating

56
00:02:34.590 --> 00:02:36.750
and outputting an environment variable.

57
00:02:36.750 --> 00:02:39.030
But there also is another way of getting access

58
00:02:39.030 --> 00:02:41.340
to an environment variable value

59
00:02:41.340 --> 00:02:43.890
in your Workflow definition file.

60
00:02:43.890 --> 00:02:46.500
And we can take a look at this way down here,

61
00:02:46.500 --> 00:02:50.730
where I wanna output the value of an environment variable.

62
00:02:50.730 --> 00:02:53.630
For example, let's say here, I wanna say MONGODB_USERNAME.

63
00:02:54.720 --> 00:02:56.220
So this is just some text here,

64
00:02:56.220 --> 00:02:58.800
with that I'm not outputting anything, but thereafter

65
00:02:58.800 --> 00:03:02.310
I want to output the MONGODB_username environment

66
00:03:02.310 --> 00:03:05.823
variable value, which should be maximilian in my case.

67
00:03:06.660 --> 00:03:10.620
I could of course, again, interpolate it like this.

68
00:03:10.620 --> 00:03:13.440
That's what we saw before already.

69
00:03:13.440 --> 00:03:17.250
But we can also use that other syntax we already saw before

70
00:03:17.250 --> 00:03:21.030
in the course, this expression syntax here

71
00:03:21.030 --> 00:03:25.080
and access a specific environment-variable context object

72
00:03:25.080 --> 00:03:29.520
provided by GitHub, and that's the env object.

73
00:03:29.520 --> 00:03:32.310
So just as we had the steps and the needs

74
00:03:32.310 --> 00:03:35.880
and the GitHub objects in earlier course sections,

75
00:03:35.880 --> 00:03:39.480
here we have the env object which gives us access

76
00:03:39.480 --> 00:03:42.360
to all the environment variables that are available

77
00:03:42.360 --> 00:03:45.060
in this job or in this step here.

78
00:03:45.060 --> 00:03:46.770
And therefore here I could access

79
00:03:46.770 --> 00:03:50.583
env.MONGODB_USERNAME to output that value.

80
00:03:52.050 --> 00:03:54.630
So that's how we can output it, and I'll also repeat

81
00:03:54.630 --> 00:03:58.200
this down there in that other job also to show you

82
00:03:58.200 --> 00:04:01.320
that here some values will not be available

83
00:04:01.320 --> 00:04:05.340
because these are job specific environment variables.

84
00:04:05.340 --> 00:04:08.400
This on the other hand here is a Workflow environment

85
00:04:08.400 --> 00:04:12.420
variable, so that value should be available here.

86
00:04:12.420 --> 00:04:17.070
If I output MONGODB_NAME, for example, with interpolation

87
00:04:17.070 --> 00:04:20.250
or by using the env context object, doesn't matter.

88
00:04:20.250 --> 00:04:23.010
This value here should be available, this here

89
00:04:23.010 --> 00:04:25.263
should not be available in this job.

90
00:04:27.210 --> 00:04:29.460
So that's how we can output these values, how

91
00:04:29.460 --> 00:04:32.580
we can use them in this file and how we can define them so

92
00:04:32.580 --> 00:04:36.000
that they are also available in the code that's executed

93
00:04:36.000 --> 00:04:37.230
in this environment.

94
00:04:37.230 --> 00:04:40.470
So that's executed on this job's runner.

95
00:04:40.470 --> 00:04:42.870
And therefore, with all of that out of the way,

96
00:04:42.870 --> 00:04:45.900
this database created and the network settings configured

97
00:04:45.900 --> 00:04:50.070
as shown before, this should all work and we're ready to

98
00:04:50.070 --> 00:04:53.940
create a commit and push this to a remote repository.

99
00:04:53.940 --> 00:04:57.060
So therefore, here, I'll initialize this and then

100
00:04:57.060 --> 00:05:02.060
add my commit where I say initial commit, for example.

101
00:05:02.250 --> 00:05:05.130
And now I just need a remote repository.

102
00:05:05.130 --> 00:05:08.130
So therefore here I'm back in my GitHub account

103
00:05:08.130 --> 00:05:12.577
and I will create a new repository gha-env.

104
00:05:13.920 --> 00:05:17.370
It will be a public repository because later I want to show

105
00:05:17.370 --> 00:05:20.760
you a feature that requires a public repository.

106
00:05:20.760 --> 00:05:23.010
And with that, I'll create it.

107
00:05:23.010 --> 00:05:28.010
And then as always, grab that URL and add this as a remote.

108
00:05:33.180 --> 00:05:36.750
And then push this, with help of this command

109
00:05:36.750 --> 00:05:38.643
which is required initially.

110
00:05:40.050 --> 00:05:44.100
So now this is pushed, and since I have a push trigger here

111
00:05:44.100 --> 00:05:47.093
that should of course also lead to this action

112
00:05:47.093 --> 00:05:49.350
being executed.

113
00:05:49.350 --> 00:05:52.530
And it looks like I have an error in my YAML syntax

114
00:05:52.530 --> 00:05:54.213
in line 32.

115
00:05:55.890 --> 00:05:59.400
Yeah, let's move this to new line by writing it like this,

116
00:05:59.400 --> 00:06:02.283
so that this is interpreted correctly again.

117
00:06:05.190 --> 00:06:07.863
Fixed syntax and push this,

118
00:06:09.930 --> 00:06:12.063
and now this should execute.

119
00:06:13.710 --> 00:06:14.550
Here we go.

120
00:06:14.550 --> 00:06:17.280
And now I'll wait for this execution to finish

121
00:06:17.280 --> 00:06:19.860
and see whether everything works as intended

122
00:06:19.860 --> 00:06:22.893
to then see how these environment variables were used.

123
00:06:23.880 --> 00:06:27.330
So here for me, this all finished successfully.

124
00:06:27.330 --> 00:06:28.470
If it failed for you

125
00:06:28.470 --> 00:06:31.530
make sure that you did create your database correctly,

126
00:06:31.530 --> 00:06:35.730
that you did allow all IP addresses to connect

127
00:06:35.730 --> 00:06:37.890
and that you are using the correct credentials

128
00:06:37.890 --> 00:06:40.860
for your environment variable values.

129
00:06:40.860 --> 00:06:45.090
And if I now inspect my jobs, you see that first of all

130
00:06:45.090 --> 00:06:48.150
obviously the environment variables were injected

131
00:06:48.150 --> 00:06:50.880
in the code, otherwise the server wouldn't have

132
00:06:50.880 --> 00:06:52.890
started successfully.

133
00:06:52.890 --> 00:06:56.100
So it was able to connect to the database and that's only

134
00:06:56.100 --> 00:07:00.090
possible if the environment variable values were provided.

135
00:07:00.090 --> 00:07:02.340
So that obviously worked.

136
00:07:02.340 --> 00:07:05.550
And we can also see that under output information,

137
00:07:05.550 --> 00:07:09.240
I am outputting that MONGODB username and that is that value

138
00:07:09.240 --> 00:07:11.463
that is provided in the Workflow file.

139
00:07:12.570 --> 00:07:16.470
Under deploy on the other hand, we see that there

140
00:07:16.470 --> 00:07:20.100
I'm not able to output the MONGODB username.

141
00:07:20.100 --> 00:07:22.650
There is no value here,

142
00:07:22.650 --> 00:07:27.510
because this job doesn't have access to this username.

143
00:07:27.510 --> 00:07:30.180
Because if we take a look at our Workflow file again

144
00:07:30.180 --> 00:07:33.750
then this deploy job has no job-specific environment

145
00:07:33.750 --> 00:07:37.710
variables and also no step-specific environment variables.

146
00:07:37.710 --> 00:07:40.890
And the environment variables of the other job

147
00:07:40.890 --> 00:07:42.450
won't be available here.

148
00:07:42.450 --> 00:07:45.150
Therefore, it only has access to the Workflow

149
00:07:45.150 --> 00:07:48.840
environment variables, which in this case is only this one

150
00:07:48.840 --> 00:07:50.970
and therefore that environment variable

151
00:07:50.970 --> 00:07:54.060
and it's value is also output successfully.

152
00:07:54.060 --> 00:07:57.120
But the other environment variable, which is only defined

153
00:07:57.120 --> 00:08:00.210
in the other job, is not output successfully.

154
00:08:00.210 --> 00:08:03.090
But this shows us how environment variables can be set

155
00:08:03.090 --> 00:08:04.803
and how they can be used.

