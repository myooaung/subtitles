WEBVTT

00:03.130 --> 00:06.340
Now let's add the validation for the email.

00:06.880 --> 00:13.450
The first thing we are going to do is we are going to just copying one of the tests and pasting here.

00:13.450 --> 00:17.080
We are going to update the email field.

00:17.840 --> 00:22.490
And with the with the MTV and as a.

00:23.390 --> 00:23.960
Error message.

00:23.970 --> 00:24.500
We will see.

00:24.530 --> 00:26.660
Email is required.

00:26.660 --> 00:29.630
So we are using this.

00:30.710 --> 00:31.520
This name.

00:31.550 --> 00:32.330
Email.

00:33.820 --> 00:35.140
Female validation.

00:35.140 --> 00:41.260
So this is going to be the test idea we are going to use for the email error message.

00:41.440 --> 00:46.570
And this is the field name, so let's save this one.

00:47.880 --> 00:50.160
So this one is failing.

00:50.670 --> 00:56.230
Let's fix it here in the component for the email.

00:56.250 --> 01:04.410
We will add validators array and the will to the validator is going to be required.

01:04.770 --> 01:11.610
And just like we have this username error function here, we will have.

01:13.920 --> 01:16.520
Mail error.

01:16.530 --> 01:20.940
And this is going to be checking for the e mail control, email form control.

01:21.420 --> 01:25.950
And if it is required, it's going to be returning.

01:25.980 --> 01:37.560
Email is required and here in the template we will have just copying the diff for the user username,

01:37.560 --> 01:42.000
input and pasting after the email input.

01:42.210 --> 01:49.560
In this one, this is going to be the email validation and we are going to look for email error.

01:52.210 --> 01:59.920
And we will also assign this class dynamically like this.

01:59.920 --> 02:05.520
If there is this email error, we will apply the is invalid class.

02:05.530 --> 02:07.960
So let's save these changes.

02:08.830 --> 02:17.020
Now the test is passing and if we test on browser, just focusing to email and focusing other and here

02:17.020 --> 02:20.560
we see the the error is visible.

02:20.890 --> 02:24.520
Now let's do the same thing for the passwords input as well.

02:25.000 --> 02:35.920
So just copying this one and this is for the password field and the message will be password is required

02:36.370 --> 02:42.040
here we see the test is failing and fix is same.

02:43.450 --> 02:46.460
So we will have these validators every.

02:48.900 --> 02:50.250
For the password.

02:52.220 --> 02:57.230
And we will have the password error get function.

03:01.500 --> 03:12.030
For passwords, form control and the message will be password is required and.

03:13.950 --> 03:19.120
Just copying this dev pasting after password input.

03:19.140 --> 03:26.670
This is for password validation, looking for a password error and displaying that error.

03:26.670 --> 03:34.290
And also again, we will show this class to this input.

03:36.360 --> 03:45.990
If there is password error saving all the changes and the tests are passing and if you test it on browser,

03:45.990 --> 03:50.340
just focusing the password and focusing and here we see the error is there.

03:51.000 --> 03:53.880
Let's also add the test for the just part.

03:54.150 --> 03:56.550
So we already have the implementation.

03:56.550 --> 03:58.500
So we will just add the test here.

03:58.500 --> 04:06.990
So this is the table for the the repeating test, the first one for the e mail.

04:06.990 --> 04:11.790
This is the label and we are filling the form with empty value.

04:11.790 --> 04:20.670
And the message is email is required and the next one is for password and password is required.

04:20.670 --> 04:21.600
Saving it.

04:24.490 --> 04:26.710
And he receded as our passing.
