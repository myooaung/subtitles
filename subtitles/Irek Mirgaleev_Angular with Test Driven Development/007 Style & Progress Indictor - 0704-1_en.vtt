WEBVTT

00:03.300 --> 00:07.410
Now let's fix the style of these next and previous buttons.

00:08.460 --> 00:14.370
So first let's use the card component of the bootstrap.

00:14.370 --> 00:23.760
So we have the card header here and let's use the card footer and let's wrap these buttons in that card

00:23.760 --> 00:24.330
fold rhythm.

00:24.330 --> 00:34.230
And so we have a div here which is going to have the class of card footer and let's move the buttons

00:34.230 --> 00:36.630
into this div.

00:37.570 --> 00:39.010
So let's say this one.

00:40.660 --> 00:44.530
Now the buttons are in this card footer.

00:44.530 --> 00:50.980
And if I click next here we see both of the buttons and let's also apply the bootstrap styles for the

00:50.980 --> 00:51.940
button as well.

00:52.090 --> 01:01.870
And we have used the button bootstrap button here in the signup form and we will do the same thing here,

01:01.870 --> 01:04.480
but we will go with the different style.

01:04.480 --> 01:08.470
There are a couple of styles for the button, but let's see those.

01:08.470 --> 01:20.050
So there is this class and BTN now we are going to go with an outline style and we is a third parameter.

01:20.050 --> 01:26.440
We are setting the color like the colors are primary, secondary, default, danger and so on.

01:26.620 --> 01:35.550
And let's go with the secondary and let's also make this button a bit smaller by adding this BTN exam

01:35.860 --> 01:38.890
and let's add the same class for the.

01:40.190 --> 01:41.570
The next button.

01:41.600 --> 01:43.160
Saving this one.

01:44.570 --> 01:51.500
Now the button is looking like this and let's click the next and both are having the same style.

01:51.650 --> 01:57.860
Now, since the buttons are triggering the asynchronous action, which is loading the user's data from

01:57.860 --> 02:00.560
back end, this display is spinner to user.

02:00.830 --> 02:03.680
So a user would know there is something going on in the background.

02:04.760 --> 02:07.670
And for this one, let's add a test.

02:08.930 --> 02:13.820
This is the user, this component spec and let's add a new test here.

02:13.820 --> 02:20.030
It displays spinner during the API call.

02:22.300 --> 02:31.540
So we are going to get the let's say we will get the first page just copying these two lines.

02:31.960 --> 02:34.930
We are returning the first page.

02:35.320 --> 02:42.550
It doesn't really matter which page we will see, but before returning the response, we are going to

02:42.550 --> 02:45.610
query the existence of the the spinner.

02:45.610 --> 02:53.500
And previously we have added the spinner to the activate components back like this.

02:53.500 --> 02:56.110
So let's just copy this one.

02:57.790 --> 02:59.350
And pasting here.

02:59.350 --> 03:08.890
So we are querying the span, having the status roll and before receive the response we are going to

03:08.890 --> 03:10.060
see the spinner.

03:10.360 --> 03:22.870
Then after the response we are going to update the UI and when we query the spinner again, this time

03:22.870 --> 03:25.030
it's going to be false.

03:26.340 --> 03:32.070
So this is the test and let's open the karma and saving this one.

03:34.910 --> 03:40.610
So this one is failing a display spinner during the API call and user is component test.

03:41.060 --> 03:45.860
Now we are going to fix this in the user is component.

03:45.860 --> 03:48.710
We will track to the API request.

03:48.710 --> 03:56.000
So let's have a property here that's called this one is fetching data and initially let's say it is

03:56.000 --> 04:01.670
false and this is the function for loading the users data from back end.

04:01.670 --> 04:07.460
And whenever this is called, let's set this fetching data to true.

04:07.910 --> 04:13.430
And after we receive response, let's set this fetching data to false.

04:13.430 --> 04:22.310
Now we can use this one in template and we can conditionally show the the spinner right here.

04:22.400 --> 04:29.270
And again, I'm going to copy the spinner from Activate component here.

04:29.270 --> 04:38.360
We were displaying the spinner like this, just copying this one and pasting into this diff card filter.

04:38.360 --> 04:48.260
So like here, I'm just pasting here and this is going to be checking the fetching data and this is

04:48.500 --> 04:49.100
a boolean.

04:49.100 --> 04:51.260
So it is either true or false.

04:52.100 --> 04:55.010
And based on that it's going to be displaying the spinner.

04:55.010 --> 04:56.810
So let's say the changes.

04:58.880 --> 05:04.580
And here we see the tests are passing and let's test this one on browser.

05:04.580 --> 05:10.490
So if I click next it is showing and hiding two to this.

05:10.490 --> 05:17.900
So let's open the chrome devtools and it slow the network down and let's click to the next.

05:17.900 --> 05:25.010
Now we are seeing the spinner and the spinner is gone after the the response is received like when we

05:25.010 --> 05:27.350
click the previous we are seeing the spinner here.

05:27.470 --> 05:30.020
Now let's also change the style a bit more.

05:30.020 --> 05:34.820
Let's hide the next and previous buttons when the spinner is visible.

05:35.540 --> 05:37.910
So set the neutral timing for network.

05:38.760 --> 05:41.640
Now let's do like this.

05:42.450 --> 05:49.080
Since we want to hide the previous and next buttons, we can use the the fetching data here.

05:49.890 --> 05:53.190
So the buttons are conditional displayed.

05:53.310 --> 06:04.170
And for the previous page we have this has previous page and if it's not fetching data, so when we

06:04.170 --> 06:13.380
are fetching data even we have previous which the page we will be hiding the the previous button and

06:13.380 --> 06:14.250
similarly.

06:16.290 --> 06:18.180
For the next page.

06:18.540 --> 06:19.980
Again, we are going to.

06:22.650 --> 06:27.960
Check if you're not fetching data, let's say this one.

06:29.330 --> 06:35.120
And opening the console once again, slowing the network clicking next.

06:35.120 --> 06:38.060
Now the button is gone and spinner is visible.

06:38.840 --> 06:41.810
And same thing also happens when we click the previews.

06:42.410 --> 06:51.320
By the way, I'm switching from slow to neutral to link in between tests because whenever I save the

06:51.320 --> 06:54.740
changes in the VS code, the application is reloaded.

06:54.740 --> 07:02.360
And when the application is recorded in browser, when the network is slow, it takes more time to rebuild

07:02.360 --> 07:02.930
the application.

07:02.930 --> 07:05.600
So that's why I'm going back to no throttling.

07:06.470 --> 07:09.860
And now let's also have a styling like this.

07:09.860 --> 07:13.100
Let's move the spinner.

07:13.100 --> 07:14.930
Let's make the spinner visible in the center.

07:14.930 --> 07:20.960
And we can do that by setting text center in the root div.

07:20.960 --> 07:27.440
By div I mean this div card footer so we can set text center here.

07:28.160 --> 07:30.920
So it will be moving the things to the center.

07:31.010 --> 07:37.250
And let's say this, but this is also affecting the buttons here.

07:37.400 --> 07:39.530
For the buttons, let's do something like this.

07:39.530 --> 07:49.560
Let's move the next button to the right edge and show the previous button on the left edge of this this

07:50.060 --> 07:50.720
footer.

07:50.840 --> 07:56.270
And we can do that by using the float classes of bootstrap.

07:56.270 --> 08:00.920
So for the previous button we can set float start.

08:00.920 --> 08:06.440
So it will be moving the button to the start of the the div.

08:06.590 --> 08:18.140
And for the the next button we will add the float and class and that's going to be moving the button

08:18.140 --> 08:20.420
to the end of this line.

08:20.420 --> 08:22.010
So let's say this one.

08:23.220 --> 08:30.600
Now the next is visible here and again, let's open the network tab and slow the network.

08:30.600 --> 08:37.830
And when I click next here we see Spinner in the center and the previous is seen on the left, next

08:37.830 --> 08:39.060
is on the right.

08:39.420 --> 08:50.010
So now we have a better layout, better UI, and we are also providing more info to user about ongoing

08:50.190 --> 08:52.230
actions in the background.
