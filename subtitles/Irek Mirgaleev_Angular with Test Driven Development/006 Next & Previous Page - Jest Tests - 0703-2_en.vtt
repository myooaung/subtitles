WEBVTT

00:03.270 --> 00:08.010
Now for the next and previous page functionality, let's add the chest test.

00:08.400 --> 00:12.960
So let's have this one as a reference.

00:14.060 --> 00:20.300
And let's open the user list component just as here.

00:20.390 --> 00:25.640
So let's add the first one, which is this one.

00:26.120 --> 00:27.830
It displays next page button.

00:28.730 --> 00:31.400
So just copying this test description.

00:33.290 --> 00:36.650
It displays next page button.

00:40.290 --> 00:47.400
So we will be rendering the compound but let's extract this part is a is a separate set of function

00:47.520 --> 00:58.080
so we will use it in each test set up async and it is doing this part.

00:58.080 --> 01:02.550
So we are going to await set up here.

01:03.180 --> 01:11.790
Now in this one we are going to again call the setup, then we will wait until the API request to be

01:11.790 --> 01:16.710
completed because the next page button will be visible when the API request is completed.

01:16.710 --> 01:24.630
And initially we are loading the first page and in the first page we have the users like the user one,

01:24.630 --> 01:25.590
user two, user three.

01:25.590 --> 01:34.320
We can use one of those as a reference to make sure the API call is completed so we can say screen find

01:35.370 --> 01:40.260
by text and let's wait for user one text to appear.

01:40.260 --> 01:43.880
So this means the API call is completed, users are now visible.

01:44.190 --> 01:52.290
Then we can query screen query by text again.

01:52.440 --> 02:00.630
We are going to look for this one next and greater than sign to be in the document.

02:01.200 --> 02:08.700
So saving this one, since the implementation is there, the tests are going to be passing.

02:10.690 --> 02:13.180
And here we see the user list as our blessing.

02:13.720 --> 02:15.550
Now let's add the next test.

02:15.550 --> 02:17.380
And that one is.

02:19.100 --> 02:19.910
This one.

02:21.550 --> 02:30.250
And instead of going with the same description, we can go with something different for the most part,

02:30.250 --> 02:36.790
because in this test implementation we are interacting with the testing controller to make sure we are

02:36.790 --> 02:38.350
sending the correct parameters.

02:38.350 --> 02:45.630
But in the test part, we are using a mock service worker, which means we don't have to deal with the

02:45.640 --> 02:54.220
requests, we don't need to interact with the request, but we only care about the UI UI stated in the

02:54.220 --> 02:54.370
end.

02:54.370 --> 02:57.910
So let's, let's have the testing like this.

02:58.210 --> 03:04.540
It displays next page after clicking next.

03:04.960 --> 03:05.980
So.

03:08.480 --> 03:12.140
We are going to let's make sure this is async again.

03:12.890 --> 03:15.530
We are going to call setup again.

03:15.530 --> 03:22.380
We are going to wait for user one to appear initially the first page is loaded.

03:22.400 --> 03:29.870
Then let's get the let's say this is next page button.

03:31.180 --> 03:33.340
So we are going to click to this one.

03:34.600 --> 03:43.240
First, let's import user event from testing library user event.

03:45.400 --> 03:52.630
So we are going to user event, click to the next page.

03:52.720 --> 03:56.080
We can assign it to a variable or we can go like this.

03:58.270 --> 04:03.070
So this is complaining because the query by text returns either element or not.

04:03.070 --> 04:08.140
But since we know there will be a next page, we can change this one to get by text.

04:08.530 --> 04:11.670
So we are clicking to the next.

04:11.680 --> 04:18.430
Then in the next page we receive the next users like user four, five and six.

04:18.430 --> 04:24.430
So we are going to wait for user four to be visible.

04:24.880 --> 04:30.490
So that's the test and let's assign it to a variable.

04:30.610 --> 04:39.040
We know this is going to be failing if the page won't be visible, but let's go exploit explicit assertion

04:39.040 --> 04:39.280
part.

04:39.280 --> 04:54.610
So let's say this is the first user on page two and we expect this first user in page two to be in the.

04:55.760 --> 04:59.240
Document saving this one.

05:01.760 --> 05:03.170
And it's also passing.

05:03.170 --> 05:09.410
And the next test is the visibility of next page button in the last page.

05:09.410 --> 05:12.980
So it hides next page.

05:14.390 --> 05:15.230
Button.

05:18.640 --> 05:20.500
It's the last page.

05:21.250 --> 05:22.930
So we are.

05:24.490 --> 05:30.940
Initially in the first page clicking next, then we are in the second page, then we are going to click

05:30.940 --> 05:35.910
next one more time to to go to the last page.

05:35.920 --> 05:42.850
So this is going to be the last page because in the presentation implementation we only have three pages.

05:43.450 --> 05:52.090
So in the last page we will see the user seven and then we can query this next button.

05:52.690 --> 05:56.290
Now we are querying an element which can be null.

05:56.950 --> 05:59.950
So we are going with the query by text.

06:00.100 --> 06:08.650
So we are querying this next button, but this time we expect it not to be in the document, saving

06:08.650 --> 06:09.130
it.

06:10.940 --> 06:16.190
This is also passing and let's add the test for the previous button.

06:17.060 --> 06:30.770
And the first test was it does not display the previous page button in first page and I will just copy

06:31.280 --> 06:32.180
this test.

06:32.180 --> 06:35.720
It is displays next page button just copying this one.

06:37.170 --> 06:40.650
So this is the first page we are waiting for user one to appear.

06:40.660 --> 06:49.080
Then we are going to query previous and we expect this and not to be in the document.

06:49.710 --> 06:52.680
So saving this one.

06:54.320 --> 07:00.200
Now in the next test, we are going to check the visibility of the previous button in the second page.

07:00.200 --> 07:03.490
So the test will be like this.

07:03.500 --> 07:11.480
It displays previous page button in page two.

07:16.070 --> 07:23.090
So we are going to go to the next page and previously we have done that here.

07:24.140 --> 07:27.740
So we are clicking next.

07:27.920 --> 07:30.000
Waiting for user four to appear.

07:30.020 --> 07:35.150
Then we are going to check for previous visibility.

07:36.080 --> 07:37.910
So this is the test.

07:38.560 --> 07:39.860
So saving this one.

07:42.160 --> 07:46.540
And this is also passing and we have only one test left.

07:46.540 --> 07:49.570
And in that one we are going to click to the preview.

07:49.580 --> 07:53.380
So just copying the last test and pasting here.

07:53.620 --> 08:02.710
And in this one it displays a previous page after clicking previous page button.

08:03.970 --> 08:08.800
So we are going to click to the button in this one.

08:08.800 --> 08:21.220
So we will just call user event click and we will query the button, but we will use get by text because

08:21.220 --> 08:24.460
we know the button is there, we are clicking to it.

08:24.460 --> 08:27.610
Then we are going to wait for our user once to appear.

08:28.420 --> 08:40.390
And let's say this is first user in first page, let's have something like this one and we are expecting

08:40.390 --> 08:43.390
this to be in the document saving this one.

08:46.570 --> 08:48.520
And the tests are passing.

08:48.520 --> 08:55.720
So compared to the the Kama Jasmine version, I have different approach in the Gest test.

08:55.750 --> 09:03.610
The tests we are having are more similar to the ones we do in the browser manually, so we are just

09:03.610 --> 09:06.190
waiting for a page to load.

09:06.610 --> 09:08.530
Then we see the next button.

09:08.530 --> 09:13.060
Then we are clicking to that one and we are seeing the next page to be loaded.

09:13.060 --> 09:17.410
And then we do the assertion like we are seeing the previous button in the next page.

09:17.650 --> 09:25.930
So this is more like a real user steps compared to the jasmine and karma version.

09:27.740 --> 09:35.560
And by the way, I've just realized there is an inconsistency between the tests in the gist and the

09:36.060 --> 09:37.410
the test in the karma.

09:37.440 --> 09:44.550
Like it's a saying, there are 60 tests passing and if we check the karma, it says there are 55 tests

09:44.550 --> 09:45.210
are passing.

09:45.210 --> 09:53.730
And actually we have more tests in the karma version like here like the login component has this default

09:53.730 --> 09:58.040
test and also a user component has this default test as well.

09:58.050 --> 10:06.870
And also in the user list component, we had the test like this one, it sends size parameters three.

10:06.960 --> 10:14.400
We didn't do that one in the the just version like in the just we only have the test it displays three

10:14.400 --> 10:19.290
user in list like this one and we just directly jump to the next one.

10:19.290 --> 10:24.180
It displays next page button so we don't have that test as well.

10:24.210 --> 10:33.300
But the issue is now we are using the the function, this get page function and this is in the user

10:33.300 --> 10:39.750
list component spec and this is triggering just to run these tests as well.

10:40.350 --> 10:48.540
So let's verify this first here in the just output, I'm just going to filter the test to run only the

10:48.540 --> 10:49.530
user list.

10:49.530 --> 10:54.510
So hitting P and typing user dash list.

10:56.360 --> 10:59.300
And here we see there are 15 tests in this one.

10:59.300 --> 11:07.670
But if you check the the user list component, we only have these tests and if we count those, they

11:07.670 --> 11:09.050
are not 15.

11:09.620 --> 11:16.490
And if we checked the whole list right here, here we see there is this user list component.

11:16.490 --> 11:20.570
So this describes is basically coming from this one.

11:20.570 --> 11:26.240
We don't have that same describe in the in the user list compound justice.

11:26.240 --> 11:36.050
So this issue is occurring again because of the usage of the get page function in in the user list component.

11:36.050 --> 11:44.390
Just we are using this page which is in this aspect is to overcome this issue.

11:44.390 --> 11:45.830
It's not causing any problem.

11:45.830 --> 11:51.620
But let's, let's make sure we don't mix tests together.

11:52.010 --> 12:00.320
Let's extract the get page functionality out of this component spec.

12:00.500 --> 12:01.010
Yes.

12:01.010 --> 12:11.360
So just cutting this one and I'm just going to create a new file under this user list and I will name

12:11.360 --> 12:14.300
it as test helper.

12:14.300 --> 12:16.250
We can move it somewhere else.

12:16.250 --> 12:24.650
But just to demonstrate this is going to fix this problem, I would like to add the file just right

12:24.650 --> 12:30.890
here and pasting the the part I cut from the test module.

12:30.890 --> 12:32.390
So saving this one.

12:32.390 --> 12:41.450
And now in the user list component spec, I will just import this kit page function from this test helper.

12:41.870 --> 12:48.170
So here it is imported from this one and in the user is component as well.

12:48.170 --> 12:54.590
We are going to import this git page from the test helper.

12:55.480 --> 12:56.650
And saving it.

12:57.750 --> 13:00.040
Now the user lists are passing.

13:00.060 --> 13:06.990
Now we are seeing there's only seven tests are passing because it's only running this describe log user

13:06.990 --> 13:07.220
list.

13:07.230 --> 13:12.980
Now the the test in the spec is not involved in the just output.

13:12.990 --> 13:16.350
Let's also make sure nothing is broken on the car side as well.

13:16.350 --> 13:20.640
So here in the output we are seeing 55 tests are passing.

13:20.850 --> 13:27.300
And again, going back to just and let's run all the tests this time hitting a.

13:29.330 --> 13:31.040
And here we see all these are passing.

13:31.040 --> 13:39.200
And this time we see only 52 tests are passing because there are total 52 tests.

13:39.560 --> 13:43.340
And compared to karma, we are missing three tests.

13:43.340 --> 13:51.350
And those are if you go over one more time, the tests are this one like this is the the missing test

13:51.350 --> 13:52.400
on the chest part.

13:52.790 --> 13:56.420
And we don't have any test about the log in component and we don't.

13:56.420 --> 14:00.320
So we also don't have any test for the user component.

14:00.680 --> 14:06.740
So the additional three test cases are these are in the karma.
