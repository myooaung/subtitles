WEBVTT

00:03.230 --> 00:08.180
Now we are listing users, but currently listing only the first page.

00:08.360 --> 00:15.080
So we have seen we have multiple pages, so we must be displaying next and previous things to navigate

00:15.080 --> 00:16.370
between these pages.

00:16.880 --> 00:19.610
So adding our next test.

00:19.610 --> 00:25.640
So in this one it displays next page button.

00:26.900 --> 00:32.300
So we will have a button on this list which will indicate there is a next page.

00:32.600 --> 00:39.650
So we are handling the request and.

00:40.390 --> 00:45.430
We are just returning the the first page.

00:46.420 --> 00:49.510
So the page will be zero and the size will be three.

00:50.370 --> 00:53.670
And we wait for UI to be updated.

00:54.300 --> 01:01.590
Then we are going to get the button and we can do the query like this fixture, native element, query

01:01.590 --> 01:02.640
selector.

01:02.820 --> 01:12.690
And we are looking for a button and let's say this is next page button and we expect this page, next

01:12.690 --> 01:15.870
page button to be treated.

01:17.850 --> 01:23.230
So saving this one and moving karma to the front.

01:23.250 --> 01:25.080
So this test is failing.

01:25.080 --> 01:28.290
So let's fix this here.

01:28.320 --> 01:32.790
After the unordered list, let let's add a button.

01:33.430 --> 01:36.120
Is not our button, just a button.

01:36.630 --> 01:43.560
And we are going to have the text like this, like this one.

01:43.770 --> 01:48.180
I'm going to use the greater than sign to indicate the next is on the right.

01:48.180 --> 01:54.990
And I'm going to use the less than side to indicate the left hand side is the previous page.

01:55.000 --> 02:04.950
But since these are greater than and less than signs are are also used in the the tags in the HTML for

02:04.950 --> 02:07.590
escaping those conflicts.

02:07.590 --> 02:13.500
We can go like this and present greater than and semicolon.

02:13.740 --> 02:15.180
So saving this one.

02:17.600 --> 02:21.740
So the test is passing and here we are seeing the button.

02:22.070 --> 02:24.180
Now let's add another test.

02:24.200 --> 02:27.020
Now we are going to add functionality to this one.

02:27.740 --> 02:38.960
So in this test, it requests next page after clicking next page button.

02:40.010 --> 02:43.180
So we are going to click to this button.

02:43.190 --> 02:46.400
But first, I'm just copying the.

02:47.530 --> 02:49.840
The lines from previous test.

02:50.710 --> 02:57.790
So we are returning the first page, then getting the button.

02:57.790 --> 03:05.080
Now we are going to click to this one next page button, click add and this is going to be triggering

03:05.080 --> 03:06.640
the second tab request.

03:06.640 --> 03:14.170
So it's going to be assigned it to another variable here.

03:14.590 --> 03:18.100
Next request, let's say it is next request.

03:18.490 --> 03:26.470
And in this one we can do the assertion based on the page, a parameter we are receiving and we can

03:26.500 --> 03:29.650
do like this expect next request.

03:31.120 --> 03:34.840
And from this one, taking request and taking params.

03:34.840 --> 03:46.120
And from params we are getting page which is going to be two and not two, but one because the first

03:46.120 --> 03:50.350
page has the index zero and the second page as the index one.

03:50.650 --> 03:52.210
So saving this one.

03:53.370 --> 04:01.470
And here in the car window, we see that test is failing because we don't have the second request.

04:01.680 --> 04:03.780
And now let's fix this one.

04:04.110 --> 04:08.640
So we will have a function in user list component.

04:09.780 --> 04:14.440
So whenever we click to the next button, we will handle that event here.

04:14.460 --> 04:17.310
Let's call this one as load next.

04:18.120 --> 04:28.230
So in user list component, whenever we click to this one, we are calling this load next.

04:29.220 --> 04:34.770
And what we will do is we are going to call this user load service.

04:35.130 --> 04:40.680
But at the moment is the user load service is not taking the the page parameter.

04:41.100 --> 04:43.200
So first, let's update this one.

04:43.320 --> 04:49.800
It's going to be taking the page, which is going to be a number type of parameter.

04:50.130 --> 04:54.480
But we are calling this load users in the in this one as well.

04:54.690 --> 05:01.920
But let's make this parameter optional so it will have an initial value if you don't set for it like

05:01.920 --> 05:02.250
this.

05:02.250 --> 05:05.400
So it is initially going to be have the value zero.

05:05.580 --> 05:14.010
And we if we just call it like this, then we don't need to set like page param for this function.

05:14.010 --> 05:17.880
So that's how we take the parameter.

05:17.880 --> 05:24.020
And just like passing the size, we can pass the page in the params object as well.

05:24.030 --> 05:30.210
So we have this function and basically we will repeat the things we are doing in the the initial part,

05:30.720 --> 05:41.100
we are calling this load users, but we need to pass the page this time and we are starting the page

05:41.110 --> 05:42.300
info right here.

05:42.300 --> 05:48.900
So like this page parameter is containing the page index so we can increase it by one and pass it to

05:48.900 --> 05:51.180
the visit as a parameter here.

05:51.180 --> 06:01.470
So we can say this page refers to this one and from that page we take the page property and adding one

06:01.470 --> 06:01.800
to it.

06:01.800 --> 06:08.550
So we are increasing the page number and requesting next page.

06:08.550 --> 06:15.600
Then the response will be received and we will just update the user page, this page with the new data

06:15.600 --> 06:18.450
and that will contain the new page number.

06:19.350 --> 06:24.510
So we are set and let's save these changes.

06:28.070 --> 06:35.390
And here we see the tests are passing and if we test it on browser, let's make sure we open the developer

06:35.420 --> 06:36.410
tools as well.

06:36.800 --> 06:41.450
So in that work tab, just clearing the things and let's click to the next.

06:41.660 --> 06:49.490
So here we are seeing users from user 4 to 6 and in the request we also see the page parameter.

06:49.490 --> 06:58.160
And if I click one more time, we are seeing user seven, eight, nine and we are sending page two and

06:58.250 --> 07:02.150
let's continue until we reached the last page.

07:02.420 --> 07:12.320
And user 25 this is the last page, but we are still showing the the next button here, which does not

07:12.320 --> 07:18.140
make sense because if we click this one, we don't see anything in the next page.

07:18.770 --> 07:24.560
So let's make sure we hide the next button in the last page.

07:24.890 --> 07:27.560
So let's add a test for that one.

07:28.730 --> 07:36.590
And in this test, it does not display next page at last page.

07:37.520 --> 07:42.500
So we are going to again handle the request.

07:42.620 --> 07:51.620
Now, instead of returning the first page, we can return the last page, which means we have three

07:51.620 --> 07:52.670
pages here.

07:53.060 --> 07:57.020
And for the third page, the page index will be two.

07:57.050 --> 07:59.750
So this will return the last page.

08:00.290 --> 08:04.670
And in this one we are just going to query the next page again.

08:05.540 --> 08:12.530
But this time we expect this next page button to be false.

08:13.220 --> 08:14.660
It's not going to be there.

08:15.610 --> 08:16.780
Let's say this one.

08:17.570 --> 08:23.390
And here in the economy output we are seeing this is failing because the button is there.

08:23.390 --> 08:27.260
We tested on browser and the button is always there.

08:27.260 --> 08:35.030
So we are going to show the button conditionally and the condition is we have the, the total pages

08:35.750 --> 08:44.660
in the in the response and also we have this page indicator and we are going to compare them to show

08:44.660 --> 08:46.070
or hide the button.

08:46.070 --> 08:52.100
So let's add them, let's add the view decision logic into the component.

08:52.100 --> 08:57.290
So we will have a function like let's say has next page.

08:59.300 --> 09:03.500
First we will check the values of the page and total pages.

09:03.500 --> 09:14.090
So like let's get them here page and total pages from the page from this page.

09:14.720 --> 09:16.670
So we have the values.

09:16.670 --> 09:24.140
Now the logic is basically if the total pages is greater than page plus one, then that means we have

09:24.140 --> 09:25.070
more pages.

09:25.070 --> 09:33.980
So we are just going to return total pages greater than page plus one.

09:34.190 --> 09:44.000
So in user list component in HTML, we are going to show this button conditionally and we will have

09:44.000 --> 09:52.220
this engine if and it's going to be checking as next page.

09:52.970 --> 10:01.670
So this is the property we are checking to display this button, saving all these changes again.

10:05.080 --> 10:08.880
And the tests are passing and let's test it on browser again.

10:08.890 --> 10:10.830
So we are in the first page.

10:10.840 --> 10:11.980
Clicking next.

10:12.610 --> 10:15.520
Clicking next until we reach to the last one.

10:15.520 --> 10:22.690
So we are listing user 22, 23 and 24 and the next one is the last page clicking it.

10:22.780 --> 10:26.710
And here we are seeing the next button is gone.

10:27.070 --> 10:35.620
So we, we completed the next page implementation and just like this next page button, let's show previous

10:35.620 --> 10:39.730
page button for this one, we will have another button.

10:39.730 --> 10:47.530
And in the test we are right here we are querying the the button.

10:47.860 --> 10:56.140
But now if we add the second button to the layout, then this would break our test for the next page

10:56.140 --> 10:56.800
button.

10:56.800 --> 11:05.140
So let's have a more specific query to get the that get the next page button.

11:05.800 --> 11:13.990
And one thing we can do is we can set a data test ID again, data on test ID and let's say this is next

11:14.290 --> 11:15.040
button.

11:15.490 --> 11:19.810
So we are going to query the the buttons based on this one.

11:19.810 --> 11:28.990
So here we will not just query the button, but we will add the attribute and the attribute will be

11:29.000 --> 11:35.290
the data test ID and the value for that one is going to be next button.

11:35.590 --> 11:42.910
So just copying this query selector part and pasting to the next tests here.

11:42.910 --> 11:45.640
So let's save this one.

11:46.240 --> 11:50.320
And in karma window we see all tests are still passing.

11:50.590 --> 11:55.840
Now we can add our next test and this is for the previous button.

11:55.840 --> 11:59.980
So let's start with the first one.

12:00.820 --> 12:07.690
It does not display previous page button at first page.

12:07.690 --> 12:11.740
So if we are at the first page, then we don't need previous button.

12:11.740 --> 12:19.810
So like just copying this one, copying all the lines from the previous test.

12:19.810 --> 12:28.350
So we are going to return the first page and we are going to look for this time, let's have the test,

12:28.450 --> 12:36.880
the previous button and let's change this variable name to previous page button.

12:36.880 --> 12:44.710
So in the first page we are querying this previous button and we expect it to be false.

12:48.250 --> 12:52.540
So this test is pressing because we don't have this button at all.

12:52.570 --> 12:54.610
Now let's add the next test.

12:55.180 --> 13:02.050
It displays previous page button in page two.

13:03.400 --> 13:04.600
So not in the first page.

13:04.600 --> 13:08.980
But if you go to the second page, we will see the button.

13:08.990 --> 13:14.050
So I'm just copying the lines once again from the previous test.

13:14.050 --> 13:22.660
So we are going to go to second page, page index one and we are creating this previous button and this

13:22.660 --> 13:25.300
time it's going to be 30.

13:26.710 --> 13:28.840
So let's say this one.

13:32.240 --> 13:34.490
So this one is failing.

13:35.600 --> 13:36.500
Let's fix it.

13:36.500 --> 13:48.260
So we will have a presentation logic here as well for the get his previous page, which is basically

13:49.490 --> 13:55.580
if this page page is not zero.

13:55.580 --> 14:05.810
So if we are not in the the zero index, then this means we have option to go back in the pages and

14:05.810 --> 14:11.060
let's open the user component and we will add the second button.

14:11.390 --> 14:22.760
And this is going to be like this, just copying the next button and pasting after that, but let's

14:23.120 --> 14:25.160
have their orders like this.

14:25.340 --> 14:30.830
So before we will have the previous page button.

14:31.100 --> 14:39.170
At the moment we don't have click handler and this is for previous button and this time we will have

14:39.170 --> 14:46.430
the text like this less than sign and previous.

14:46.970 --> 14:49.010
So saving these changes.

14:52.460 --> 14:59.960
The tests are passing and if we check it on browser here after clicking to next, we are seeing the

14:59.960 --> 15:05.720
previous button visible, but at the moment we didn't implement any interaction functionality in this

15:05.720 --> 15:06.140
one.

15:06.320 --> 15:08.030
So let's do that.

15:09.090 --> 15:21.120
So adding the next test it displays previews page after clicking previous page button.

15:23.940 --> 15:25.470
So we will.

15:27.790 --> 15:30.340
But repeat the steps again.

15:30.340 --> 15:38.110
So we have the previous page button and we are going to click to that one previous page button and click.

15:38.740 --> 15:45.700
Then again, we can check the the parameter, the page parameter we are receiving in the FTP testing

15:45.700 --> 15:46.330
controller.

15:46.330 --> 15:50.860
So we will get the, the, let's say.

15:53.090 --> 15:58.400
Let's rename this as previous page request.

15:59.180 --> 16:03.560
So in this one, we are expecting this page to be zero.

16:03.590 --> 16:09.790
We at the index one and when we click the previous, it should be zero.

16:09.810 --> 16:11.240
So this one.

16:14.860 --> 16:16.750
So this is failing.

16:17.940 --> 16:19.560
Just like having this load.

16:19.710 --> 16:30.660
Next we will have just copying this one and we will have these loads previous and when we click the

16:30.660 --> 16:37.830
button we will call this one and it's going to be calling this load users with by subtracting one from

16:37.830 --> 16:44.190
the page and in component template.

16:44.340 --> 16:46.920
Let's add the click listener.

16:48.130 --> 16:52.600
So like here we will call vote previews.

16:53.230 --> 17:01.750
By the way, I'm just going to format this one to to fit all these things into the width like this.

17:01.750 --> 17:04.420
So let's save these changes.

17:06.910 --> 17:09.430
And the tests are passing.

17:10.060 --> 17:12.200
Let's test it on browser as well.

17:12.220 --> 17:14.890
And let's open the console.

17:15.280 --> 17:20.140
So just clearing the network logs, clicking the next.

17:20.140 --> 17:24.310
So we are seeing a request for page one and clicking one more time.

17:24.310 --> 17:25.970
It's going for page two.

17:25.990 --> 17:29.680
Then if I click previous, it's going for page one.

17:29.800 --> 17:35.950
And if I click one more time, we are at first page and we request it for the page zero.

17:35.950 --> 17:42.280
And the previous page button is gone because we are in the first page at the moment.

17:42.960 --> 17:48.150
So the functionality is properly working, but let's refactor our implementation.

17:48.720 --> 17:54.360
So in the component, we are doing the same thing three times.

17:55.410 --> 17:59.520
Like here in the initial part, we are loading users.

17:59.520 --> 18:03.360
Then when we click next, we are loading users once again.

18:03.360 --> 18:11.640
But the only difference is we are passing different parameters, different page numbers in each of these

18:11.640 --> 18:12.300
calls.

18:12.780 --> 18:19.770
So instead of repeating ourselves here, let's have one function only and let's call this one is, let's

18:19.770 --> 18:29.910
say load users and let's make this one to have parameters like it takes page number, which is going

18:29.910 --> 18:30.420
to be number.

18:30.420 --> 18:34.860
And if we don't set for it, it's going to be zero.

18:35.670 --> 18:45.570
So here, instead of having this implementation, we can just call this load users and we don't need

18:45.570 --> 18:49.500
to pass any data because it's going to be having this page number.

18:49.500 --> 18:57.180
And here we can just pass the page number to the load users in the user service.

18:57.360 --> 19:02.780
By the way, if this is getting confusing, we can change the name here.

19:02.790 --> 19:08.670
We can say load data and having the data in this one as well.

19:08.670 --> 19:14.280
So the load data is in the user component and the load users is in the user service.

19:14.280 --> 19:18.240
So we have this function and we don't need this load previous any more.

19:19.680 --> 19:26.820
Now we need to update the template because we were using the load next and previous and we also see

19:26.820 --> 19:28.470
the error here.

19:28.560 --> 19:35.940
We are going to call load data in this one as well, but we are going to pass the the page index and

19:35.940 --> 19:37.770
we can do like this.

19:37.770 --> 19:45.480
We can access to the page here and from that page we can get the page property of it and we can add

19:45.480 --> 19:48.150
one or subtract one to that page.

19:48.150 --> 19:54.120
So for the previous page, we will take the page and subtract one.

19:54.120 --> 20:01.020
And for the next page case we will again take the page and add one to it.

20:01.410 --> 20:04.230
So let's save these changes.

20:04.590 --> 20:08.690
And here in the karma window we are seeing all this are passing.

20:08.700 --> 20:15.180
So with this way we completed the functional part of the page nation and we are able to navigate from

20:15.180 --> 20:16.950
one page to another.

20:17.310 --> 20:23.910
In the next section we will change the styling here and we will complete the user list implementation.
