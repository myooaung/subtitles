WEBVTT

00:03.080 --> 00:09.860
Now this page is running an async action and let's make sure we display a progress indicator to user

00:09.860 --> 00:10.580
about it.

00:11.180 --> 00:16.670
We cannot know how long will it take to show a message to user about the action.

00:16.670 --> 00:20.030
So the user must be aware that there is an ongoing process.

00:20.030 --> 00:26.120
So if we check the current behavior at the moment, let's open the developer tools and switch the network

00:26.120 --> 00:30.110
tab and let's slow the things down here.

00:30.110 --> 00:38.900
So let's go with the network speed as slow of three G and if I click to the activate two, now I'm seeing

00:38.900 --> 00:42.430
a request going there, but it takes like 2 seconds to complete.

00:42.440 --> 00:47.600
But we didn't see anything about that progress and let's try it one more time.

00:47.840 --> 00:54.470
Let's click to activate one and there is a request, but we don't have anything on UI, so let's inform

00:54.470 --> 00:59.540
the user with a spinner so that they know there is an ongoing progress.

01:00.710 --> 01:08.900
So going back to an alternate link now, let's go back to the code and let's also open the karma window.

01:09.380 --> 01:12.680
Now we are going to add a new test for this one.

01:12.830 --> 01:24.620
So in the Activate component spec, it's adding a new test here and in this one it displays spanner

01:24.650 --> 01:28.640
during activation request.

01:31.880 --> 01:38.780
So again, we are going to use this subscriber and let's go with the 1 to 3.

01:40.030 --> 01:46.540
And it's going to be handling the request.

01:48.000 --> 01:49.750
And we are going to check the UI.

01:49.770 --> 01:53.510
But let's let's intercept the request here.

01:53.520 --> 01:55.880
Before the request returns a response.

01:55.890 --> 01:57.920
Let's make sure we update the UI.

01:57.930 --> 02:06.120
And right at this moment, before we receive the response, let's check if we have the spinner.

02:06.150 --> 02:10.830
And previously, again, we tested the spinner visibility in the signup.

02:10.950 --> 02:14.310
So let's, let's use the same thing.

02:15.120 --> 02:20.310
So here for the spinner, we were using the roll status right here.

02:20.310 --> 02:22.500
It displayed spinner after clicking submit.

02:22.770 --> 02:34.500
So we are going to do this just copying this one and let's open the activate component spectators so

02:34.500 --> 02:37.830
pasting here but we are going to.

02:39.780 --> 02:47.490
Query to fix your native element query selector and we are looking for status span to be false.

02:48.240 --> 02:56.340
Then we are returning the response by request flash, then again forcing UI to be updated.

02:56.340 --> 03:04.020
And this time we are going to check the spinner, but this time it's not going to be visible, so it's

03:04.020 --> 03:04.690
going to be false.

03:04.740 --> 03:06.420
By the way, I missed this part.

03:06.420 --> 03:09.900
I just copied that thing and totally missed this part.

03:10.470 --> 03:16.980
Initially, as the as there is an ongoing request, the spinner will be visible, which means it's going

03:16.980 --> 03:18.570
to be 30.

03:19.230 --> 03:22.780
But after the request is completed, it's going to be false.

03:22.800 --> 03:25.050
So it's not going to be on the document.

03:25.050 --> 03:27.120
So let's save this one.

03:30.160 --> 03:34.090
So this test is failing in the space during activation request.

03:35.050 --> 03:37.060
And let's fix this.

03:37.060 --> 03:39.880
So in the activate component.

03:41.500 --> 03:46.300
So we are tracking the status with this property.

03:46.300 --> 03:54.040
So success and fail and we can also have the in progress for this property as well.

03:54.040 --> 04:02.440
So let's have in progress and what we can do is we can just set this in progress.

04:03.400 --> 04:11.560
This activation status to be is to be in progress before we make the API request.

04:12.310 --> 04:18.370
Then after the API request, it is going to be either success or fail, but initially it's going to

04:18.370 --> 04:19.930
be in progress.

04:20.260 --> 04:29.680
So we have the the property for tracking that API request and here in the component activate component,

04:29.680 --> 04:37.540
just like displaying these alerts conditionally based on the activation status, let's show the spinner.

04:37.540 --> 04:43.240
And for spinner we can open the button and we are using Spinner right here.

04:43.900 --> 04:45.820
So this was the spinner syntax.

04:45.820 --> 04:53.230
This is again can bootstrap spinner and in the activate component, let's have the spinner here.

04:53.560 --> 05:01.360
And this time instead of checking the API progress, we are going to check activate activation status

05:01.570 --> 05:08.410
value to be in progress like this.

05:08.800 --> 05:13.600
So if the activation status is in progress, then we will display the spinner.

05:13.780 --> 05:21.040
If it is success, we will show the success message and if it is failed, we will show the fail message.

05:21.760 --> 05:23.410
Let's save all these changes.

05:26.460 --> 05:29.040
And here we see the tests are passing.

05:29.520 --> 05:34.470
Let's manually test it on browser and also opening the developer tools.

05:34.650 --> 05:36.780
It's clear the logs here.

05:37.530 --> 05:41.160
So we are on the activate one page.

05:41.910 --> 05:46.710
Let's change the network speed to slow three g and clicking the activate.

05:47.250 --> 05:49.010
Here we are seeing Spinner.

05:49.020 --> 05:55.020
Then after we receive the response, we are showing the alert and let's try one more time.

05:55.650 --> 06:00.300
Here we are going to activate one and we are seeing Spinner during the API call.

06:00.660 --> 06:05.370
So we are informing user that there is an ongoing progress in the background.

06:05.430 --> 06:13.620
Now we complete the implementation and we no longer need these links in the application, so let's remove

06:13.620 --> 06:14.080
those.

06:14.100 --> 06:20.700
Opening the app component, we added the links right here and just removing them.

06:20.970 --> 06:28.260
Let's save this and the links are gone before finishing this part.

06:28.500 --> 06:31.230
Let's test the whole signup flow.

06:32.850 --> 06:37.980
Switching to a bigger window and back end is running.

06:38.190 --> 06:42.630
We need this one because it's printing the activation part.

06:43.140 --> 06:45.960
So let's send the signup request for a new user.

06:47.330 --> 06:50.540
So filling the form lets go with the user like user.

06:50.570 --> 06:52.520
30 user.

06:52.520 --> 06:54.230
38 male.

06:54.230 --> 06:59.000
Com password and password.

06:59.700 --> 07:02.850
So I think sign up and we are seeing this.

07:02.880 --> 07:05.670
Please check your email to activate your account message.

07:06.060 --> 07:11.360
And if we check the back end console here, the link is printed.

07:11.370 --> 07:12.930
Just copying this one.

07:14.340 --> 07:17.310
And pasting it to the browser.

07:18.390 --> 07:21.150
And here we see the account is activated.

07:21.150 --> 07:23.130
So this is working.

07:23.130 --> 07:31.530
But if we would have gone with the token like something like this, we would be seeing a failure like

07:31.530 --> 07:32.160
this one.

07:32.670 --> 07:37.110
So we completed the account activation page.

07:37.140 --> 07:45.990
Basically this page is just going to handle the token request and it will show a message based on the

07:46.350 --> 07:48.600
account activation response.
