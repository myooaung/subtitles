WEBVTT

00:03.660 --> 00:07.080
Now let's update the style of this form input.

00:09.070 --> 00:12.190
In bootstrap for the validation.

00:12.190 --> 00:13.090
There is a style.

00:13.090 --> 00:20.920
So here in this validation section under the forms, if you if you check this one after submitting the

00:20.920 --> 00:29.410
form, you see like the invalid inputs are having this red border and the validation error is seen like

00:29.410 --> 00:29.590
this.

00:29.590 --> 00:33.490
So let's apply the same style to our input as well.

00:35.120 --> 00:38.930
So for this one, we are going to use the.

00:40.210 --> 00:47.090
Is the invalid clause for the input and for the message part.

00:47.110 --> 00:52.900
We are going to use the clause of invalid feedback.

00:53.890 --> 01:01.240
So if I save at this point and if I type anything here, as you can see, the the input has the red

01:01.240 --> 01:06.520
border and the text for the the validation error is seen in red.

01:06.940 --> 01:09.460
So this is how it's going to be visible in the end.

01:09.460 --> 01:12.790
But this style will be applied dynamically.

01:12.790 --> 01:20.800
So if there is a validation error, then we will see the colour change and the text will be like this.

01:20.890 --> 01:28.480
But for the valid cases this is not going to be the style won't be like this, so it's just going to

01:28.480 --> 01:30.550
be going with the default like this one.

01:31.600 --> 01:39.370
So we will be having only for this is invalid part is going to be conditional and for this one we have

01:39.370 --> 01:49.690
two options and one of them is like this we can go with the IMG class directive and basically this is

01:49.690 --> 01:58.060
looking for a statement which is returning the the class it's going to be assigned and we can use it

01:58.060 --> 02:05.590
to an operator here and we can say if there is this username error, then it's going to be returning.

02:05.590 --> 02:13.660
This is in valid, otherwise it's just going to be returning this empty.

02:14.290 --> 02:22.330
So if there is username error, then other than this clause form control, this is invalid will be assigned

02:22.330 --> 02:22.630
as well.

02:22.630 --> 02:25.480
So let's save this to see how it's working.

02:25.480 --> 02:34.420
So here in username, focusing it and typing something and here we see the validation error is visible

02:34.600 --> 02:38.050
and we can do the same thing with different approach as well.

02:38.110 --> 02:47.980
Like here, instead of this in class, Engler has this class binding and we can do like this class.

02:48.710 --> 02:53.320
And the class name is is is invalid.

02:53.330 --> 02:55.820
So we can dynamically assign.

02:55.820 --> 02:57.770
This is invalid when.

02:58.640 --> 03:01.720
This username error is true.

03:01.730 --> 03:07.400
So if this is true, then this is going to be added to the class list of this component.

03:07.730 --> 03:09.260
Otherwise it's not going to better.

03:09.260 --> 03:13.130
So just removing this one and saving it.

03:13.920 --> 03:15.210
Let's try it.

03:15.240 --> 03:16.140
Typing in the gun.

03:16.140 --> 03:18.840
Here we see the style is applied.

03:19.500 --> 03:28.140
So either is fine, but I will go with the class approach so I'm just undoing the things with the class

03:28.230 --> 03:31.800
is invalid part and saving it.
