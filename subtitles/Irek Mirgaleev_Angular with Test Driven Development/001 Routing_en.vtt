WEBVTT

00:03.270 --> 00:10.080
In this application, we will have multiple pages and so far we have the user sign up page.

00:10.800 --> 00:14.760
Now let's introduce client side routing in this application.

00:15.670 --> 00:18.550
We could follow the TDD approach for this one as well.

00:18.550 --> 00:21.430
But let's practice the angler routing first.

00:21.790 --> 00:26.350
Angler has built in router functionality and we are going to use it.

00:26.800 --> 00:33.250
So the first thing we need to do is we will be creating a module for the router.

00:34.210 --> 00:41.800
Here in this terminal, I will be using the English CLI to create the router module and we run in g

00:42.130 --> 00:49.660
and g for generate and we are going to generate the module and the module name will be app router.

00:50.350 --> 00:52.600
English already has the router module.

00:52.600 --> 00:56.110
So instead of just going like router.

00:57.050 --> 01:01.760
I'm just adding EPP prefix to it so it can enter.

01:02.840 --> 01:09.500
So this is creating a file under EBP router folder and the file is a browser module.

01:09.610 --> 01:10.160
Yes.

01:10.190 --> 01:11.270
Let's open that.

01:14.190 --> 01:19.020
Here we have the F browser folder and we have the browser module.

01:19.020 --> 01:25.710
But I'm going to rename this folder and I'm just going to change it to router.

01:26.130 --> 01:28.740
So we have the router icon here.

01:30.540 --> 01:37.020
So this app router module, we will configure the angular router.

01:37.020 --> 01:39.780
We don't need this common module to be imported.

01:39.780 --> 01:47.760
Here we are going to import England's router module.

01:47.760 --> 01:53.670
It is coming from angular router and also we are not going to use the declarations here.

01:54.090 --> 02:03.960
Now this router module is a configurable module and as a configuration we will pass the, the parts

02:03.960 --> 02:05.670
and the relevant components.

02:05.670 --> 02:13.140
So like we will be having the sign up component to be visible when the URL is sign up or we will be

02:13.140 --> 02:17.700
having different components to be visible in the specific URL.

02:17.700 --> 02:24.360
So we will have that configuration and we will configure this router module with it.

02:24.360 --> 02:33.630
So first thing, we will have an object here and this is going to be, let's say, the roots and the

02:33.630 --> 02:37.620
type of this roots is roots.

02:37.620 --> 02:40.620
And this is coming again from the angular router.

02:40.650 --> 02:42.960
Basically, this is an array.

02:43.730 --> 02:45.920
And this area has.

02:46.790 --> 02:47.480
Objects.

02:47.480 --> 02:51.800
And these objects have the the properties like path.

02:52.670 --> 03:00.170
And the first part is we will have sign up page and let's say the the path will be sign up.

03:00.320 --> 03:07.460
And when the parties sign up we will display this component, sign up component.

03:08.780 --> 03:15.200
So we have this route and we are going to pass this routes to this route or module.

03:15.200 --> 03:21.620
And we do that by calling this route or modules for route function.

03:21.620 --> 03:27.020
So this is basically configuring the router module with the routes we are providing.

03:27.260 --> 03:34.190
So we are passing routes to this for route function.

03:34.910 --> 03:39.980
And also we must be exporting exports.

03:40.940 --> 03:41.480
The.

03:43.410 --> 03:53.580
Router module so that when we import this router module, we will be able to access to the the components

03:53.580 --> 03:55.840
coming with the router module.

03:55.860 --> 03:58.500
Now we have the configuration for the router.

03:58.530 --> 04:01.410
Now we are going to use this one.

04:01.410 --> 04:09.360
And first we need to import this router module in the root module of our application, which is EBP

04:09.360 --> 04:10.910
module right here.

04:10.920 --> 04:19.020
So here in the imports list, we will also get the EP router module.

04:19.410 --> 04:28.170
At the moment we only have one page which is sign up and let's create one more page so that we can go

04:28.170 --> 04:32.250
from one page to another and see how the routing is working.

04:32.370 --> 04:39.120
So again, going back to a terminal, clearing the console and this time I'm going to create a component

04:39.120 --> 04:45.480
and g generate g component and the component name will be home.

04:45.480 --> 04:46.920
This is for the home page.

04:47.520 --> 04:54.110
And for this one, let's skip tests and also let's not generate the CSS file.

04:54.120 --> 04:58.590
So we're going with dash, dash inline style.

05:00.970 --> 05:08.950
So this is creating the home folder and the home component and also creating the home component years

05:08.980 --> 05:15.220
and updating the module with the with this component declaration.

05:15.820 --> 05:18.100
Let's go back to the project now.

05:18.100 --> 05:20.500
We are going to update the router module.

05:20.500 --> 05:24.660
So we have this configuration for the sign update.

05:24.970 --> 05:27.880
And just like this one, we will have another one.

05:28.390 --> 05:32.590
Let's just copy this thing and this is an array.

05:32.590 --> 05:36.280
So having another object here and adding comma.

05:36.280 --> 05:41.650
So the path for the home component will be the root path like this.

05:41.800 --> 05:46.060
And the component we will display is this one home component.

05:46.600 --> 05:50.110
At the moment, home component does not have to do anything.

05:50.110 --> 05:55.330
So if you want the template here we see the home works thing.

05:55.570 --> 05:57.550
We need to do one more thing here.

05:57.790 --> 06:05.800
At the moment, if we refresh the browser, nothing is changing because in app component HTML we are

06:06.190 --> 06:07.930
we are showing the signup component.

06:07.930 --> 06:11.110
So the signup component is visible here.

06:11.260 --> 06:19.810
But now instead of this specific component, we will display the components based on the the roots based

06:19.810 --> 06:21.760
on the parts in the URL.

06:21.910 --> 06:27.730
So to do that we will use the router outlet.

06:28.150 --> 06:28.810
So.

06:29.730 --> 06:39.270
This can be considered like a placeholder and whenever the routing is matching to specific pad, corresponding

06:39.270 --> 06:43.740
component will be filled to this placeholder part.

06:44.400 --> 06:45.930
So saving this one.

06:46.770 --> 06:53.250
Now here we see we are in the route URL and it is displaying the home component.

06:53.250 --> 07:00.270
But if I go to Ford's sign up here we see the sign up page is visible.

07:01.050 --> 07:04.470
We can also configure the routing functionality to use hashes.

07:04.470 --> 07:08.520
So like URLs will be having a hash here.

07:08.520 --> 07:15.030
So like this, this is another way of handling the client side routing.

07:16.320 --> 07:22.050
And to do that, we can do the configuration in the again router module.

07:22.410 --> 07:28.770
So when we are configuring the router module, we are just passing the router at the moment.

07:28.770 --> 07:37.560
But as a second parameter we can pass extra options and one of the options is use hash.

07:37.890 --> 07:50.760
So if we set it to true and if we save it here, we see there is hash here and if we go sign up like

07:50.760 --> 07:55.470
this, the sign up is visible, let's make it more visible.

07:55.470 --> 07:57.420
So going to a full screen.

07:58.170 --> 08:07.290
So here we have the homeworks and if we go to sign up here we see the sign up page.

08:09.130 --> 08:14.920
So this is how we can configure the router module to have the hash.

08:14.920 --> 08:21.700
But in the course I will continue with the with the non hashed version.

08:22.270 --> 08:24.460
So saving like this.

08:25.450 --> 08:28.240
And just reloading this.

08:28.780 --> 08:33.790
And if I type sign up here we are seeing the sign up page.
