WEBVTT

00:03.130 --> 00:08.050
Now let's add this same pagination implementation to the GEST test.

00:08.980 --> 00:13.600
So we are going to use the same logic here.

00:13.600 --> 00:21.070
So first let's export this one and opening the user list.

00:21.070 --> 00:23.950
Just user list component just yes.

00:24.040 --> 00:31.720
Now we are going to use that pagination logic, that pagination logic in the aspects.

00:31.720 --> 00:42.040
Now just removing this page and instead of having our page, we will call a get page which is coming

00:42.040 --> 00:45.190
from this user list component spec.

00:45.190 --> 00:49.450
So we are going to call that, but we are going to pass the page on size.

00:49.450 --> 00:59.680
And for that in the user list component spec, we were parsing the the numbers, the size and page numbers

00:59.680 --> 01:00.100
like this.

01:00.100 --> 01:11.860
So just copying this part and now we are going to handle the parameter parsing in this rest handler.

01:12.010 --> 01:14.290
So we will do like this.

01:14.410 --> 01:21.910
So we are able to access to the parameters in this rest handler through the rack here.

01:21.910 --> 01:32.920
And from this one we can get the URL and we have search params and from this search params we can get

01:32.920 --> 01:34.840
the size.

01:36.850 --> 01:38.800
Again, this is not going to be null.

01:38.800 --> 01:41.590
So we are saying it's not null like this.

01:41.590 --> 01:46.690
And for the the page, we will do the same thing here.

01:48.630 --> 01:58.140
And now we have the size and pace so we can call the get page with page and size.

01:59.100 --> 02:01.500
So say we can go to changes.

02:04.230 --> 02:06.690
And all tests are passing.

02:07.080 --> 02:11.700
Again, this pagination logic will be useful in the next test.
