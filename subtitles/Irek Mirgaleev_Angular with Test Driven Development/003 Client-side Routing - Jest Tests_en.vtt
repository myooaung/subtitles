WEBVTT

00:03.240 --> 00:07.230
Now let's add the same tests for the just setup.

00:07.770 --> 00:15.750
So here, opening the explorer here and let's create a new file.

00:15.750 --> 00:19.170
And this is for app component.

00:20.280 --> 00:21.120
Just.

00:21.390 --> 00:22.080
Yes.

00:22.680 --> 00:27.360
So we have this naming this naming convention here.

00:27.540 --> 00:31.800
And the just test is this just extension.

00:32.580 --> 00:38.820
So we will do something similar with it in the sign up component.

00:39.400 --> 00:46.680
Justice, by the way, as soon as we add the file, the component, just as it is failing because it

00:46.680 --> 00:50.490
is empty and just is basically complaining about it.

00:51.300 --> 00:58.410
So we are going to do similar things that we did here in the sign of components of first thing is we

00:58.410 --> 01:11.010
are going to import the render and screen functionalities from testing library Angular.

01:12.100 --> 01:16.690
And let's start with the first test.

01:17.170 --> 01:20.080
First thing is the scrap block for the routing.

01:20.080 --> 01:28.630
And our first test was it displays home page at this pad.

01:29.980 --> 01:33.460
So we are going to render our component.

01:33.460 --> 01:35.010
Let's get the component as well.

01:35.020 --> 01:43.690
Report the component is app component from this.

01:45.930 --> 01:51.300
Pat and we are going to render the component.

01:51.510 --> 01:58.440
And in this one we are passing the render options to import and the declarations for the components

01:58.440 --> 01:59.340
we are using.

01:59.370 --> 02:08.280
The declarations are for the components like the home page, home component and sign up component.

02:08.580 --> 02:14.490
And we are also going to import the modules like.

02:15.990 --> 02:22.680
Like the sign up component is depend on the user service and the user service is dependent on the HTP

02:22.860 --> 02:24.870
client module.

02:24.870 --> 02:26.610
We can go with the typical module.

02:26.610 --> 02:30.540
We are not going to deal with the testing part of it.

02:31.170 --> 02:39.540
We are not going to trigger the API calls here at least for the first moment, so we can go with the

02:39.540 --> 02:47.430
HTTP client module and the next thing is the shared module because we are using the app button in the

02:47.430 --> 02:53.130
signup and the other one is the reactive forms module.

02:53.280 --> 03:01.020
And for the the routing, we don't need to import the router router testing module, but all we do is

03:01.020 --> 03:03.780
just set the roots here.

03:03.990 --> 03:14.340
So this option takes roots property and basically the roots is the, the roots we are creating here.

03:14.340 --> 03:21.690
So we are passing this roots array to, to the roots property here.

03:23.420 --> 03:25.670
So this render is asynchronous.

03:25.670 --> 03:27.200
So we wait here.

03:28.160 --> 03:29.840
And this is async.

03:30.920 --> 03:36.140
And for the navigation part, this render is returning back.

03:39.230 --> 03:41.300
Let's get the object to structuring.

03:41.480 --> 03:43.460
We have the navigate function.

03:43.460 --> 03:52.160
So as a render result we are able to get the navigate function and we can call navigate to the path

03:52.160 --> 03:55.310
we are looking for.

03:55.490 --> 03:57.230
Again, this is async.

03:57.350 --> 03:58.070
This is promised.

03:58.070 --> 04:00.350
So we are waiting here.

04:00.860 --> 04:05.780
Then we are going to query the page test ID.

04:05.790 --> 04:07.550
So we are going to.

04:08.360 --> 04:09.050
Begetting.

04:09.050 --> 04:17.210
Let's say the page is going to be screen query by test ID and the test ID for the home page is this

04:17.210 --> 04:26.330
one home page, and we expect this page to be in the document.

04:26.540 --> 04:28.190
So let's save this one.

04:30.880 --> 04:33.580
And here we see the components are passing.

04:33.580 --> 04:42.070
By the way, you may have realized that after having multiple test modules, the just output is only

04:42.310 --> 04:45.820
displaying results for the test module.

04:45.820 --> 04:49.260
It's not displaying individual test results.

04:49.270 --> 04:51.070
This is something configurable.

04:51.400 --> 04:59.890
There is this variable property and we can set it to true so that it would be listing all the test tests

04:59.890 --> 05:02.730
in each of these test modules as well.

05:02.740 --> 05:04.900
But let's continue like this.

05:05.200 --> 05:12.160
So this was the first test and we will have the the other one for the sign up instead of just going

05:12.160 --> 05:13.240
with the copy and paste.

05:13.330 --> 05:18.060
We can just go directly to the test like this.

05:18.070 --> 05:19.430
It h.

05:19.930 --> 05:23.650
If you remember, we have been doing that in our tests.

05:23.800 --> 05:27.220
When we have repeating things, we have this.

05:28.690 --> 05:31.330
It's each functionality.

05:31.900 --> 05:40.420
So we are having this pad and the, let's say the page and for

05:43.180 --> 05:59.500
for the root pad we will see the home page and for sign up URL we will see sign up page and the test

05:59.500 --> 06:12.990
description is it displays dollar sign page when pad is dollar sign pad.

06:13.030 --> 06:16.240
So it displays home page when pad is.

06:17.370 --> 06:18.240
Slash.

06:19.320 --> 06:31.050
So this is going to be async and we can get the values of these these table by like this pad and page

06:33.030 --> 06:42.000
and in the test function, just moving this into this part and.

06:44.200 --> 06:58.480
Let's change it to page ID, page ID, page ID, and we are going to use it here and the pat will be

06:58.480 --> 07:00.910
used here.

07:01.150 --> 07:03.400
Just formatting the code here.

07:03.850 --> 07:05.980
Let's save this one.

07:08.590 --> 07:13.690
Now we are seeing all tastes are passing, by the way, in just output.

07:13.690 --> 07:21.370
Again, we can use the the filtering functionalities here it is saying press w to see the options here.

07:21.370 --> 07:30.310
And when we hit that it is showing us the options to filter the test based on the the criterias like

07:30.400 --> 07:40.780
the run only the failing test run only the the tests in the specific test module or run the test having

07:40.780 --> 07:49.960
the test description metric to the expression we said, so we can just filter the test for the EP.

07:49.960 --> 07:52.870
We do that by hitting P here.

07:52.870 --> 07:56.470
So then we type the test module again.

07:56.470 --> 08:00.640
This is a blank x here, so I'm just going with the EP.

08:00.640 --> 08:04.840
Then this is going to be running the test modules, having EP text in it.

08:04.840 --> 08:06.070
So hitting enter.

08:09.370 --> 08:13.390
This is running all the tests because all of them are under the app folder.

08:13.390 --> 08:21.490
But if he if he specified a bit more like app component, then this is running on the app component

08:21.490 --> 08:22.060
test.

08:22.930 --> 08:29.170
And in this case, since it's running on a single test model, it is displaying all the test descriptions

08:29.170 --> 08:31.690
here and here we can see it is based on page.

08:31.690 --> 08:37.570
When Pat is forward slash and it displays sign up h when pat is sign up.

08:38.020 --> 08:40.390
So the tests are like this.

08:40.540 --> 08:41.890
We can do one more thing here.

08:41.890 --> 08:46.330
We can extract this part out of this test.

08:46.420 --> 08:48.970
Let's have a function like this.

08:48.970 --> 08:59.620
Let's say it is set up and let's move this into that function.

08:59.620 --> 09:08.170
Just taking the render and the navigate part pasting here and since this is async await, just making

09:08.170 --> 09:12.940
sure this is async and let's take the pat as variable.

09:13.630 --> 09:23.260
Let's say to pat, this is going to be a string and in the test we are going to call a wait set up with

09:23.740 --> 09:24.490
the pat.

09:25.700 --> 09:29.030
So let's save this one.

09:30.840 --> 09:32.880
And the tests are passing.
