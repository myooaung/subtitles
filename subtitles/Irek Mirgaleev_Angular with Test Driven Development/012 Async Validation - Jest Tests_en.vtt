WEBVTT

00:03.410 --> 00:06.770
Now let's add the same test for the chest part.

00:07.280 --> 00:11.540
So opening the chest test here.

00:13.110 --> 00:18.210
I'm going to add the test to this repeating each block.

00:18.390 --> 00:20.100
So here.

00:20.890 --> 00:21.030
Okay.

00:22.090 --> 00:28.900
Entering the value to this email input and value will be.

00:31.350 --> 00:32.090
None.

00:32.130 --> 00:35.760
Unique email at mail.

00:35.760 --> 00:39.600
Com and the message will be

00:42.150 --> 00:48.000
emailed in use formatting this part.

00:48.360 --> 00:57.300
So in the the spec test we added separate test because we were going to interact with the testing controller.

00:58.530 --> 01:09.870
But in the just setup, we have this common server here and we have this rest post handler for the user's

01:10.290 --> 01:11.970
user post request.

01:12.480 --> 01:16.620
Just like this one, we can add another endpoint here.

01:16.620 --> 01:20.490
Just copying the this one and adding a new one.

01:21.120 --> 01:25.980
So basically this takes multiple request handlers.

01:26.130 --> 01:29.250
I added with the comma separation.

01:29.250 --> 01:37.080
So this was for the post for API users and this is for user email.

01:37.530 --> 01:41.180
Now in this one we will check the request buddy.

01:41.880 --> 01:51.960
Like this if request buddy and there will be email field in the request body if it is equals to the

01:53.280 --> 01:57.690
to this non unique email at mail.

01:59.610 --> 02:01.320
It's going to be returning.

02:04.520 --> 02:10.030
This response with a status of 200.

02:10.040 --> 02:10.790
Okay.

02:10.790 --> 02:14.570
And it's just return adjacent empty.

02:14.570 --> 02:21.830
Jason, we are not processing the response body, so it doesn't matter what we are sending back.

02:22.610 --> 02:31.130
So this is the case where the mail is found and when mail is not found, it's it's going to return.

02:31.190 --> 02:32.600
404 not found.

02:33.050 --> 02:39.320
Here we have this error because the email is unknown type at the moment.

02:39.500 --> 02:41.480
We don't know the body type.

02:41.480 --> 02:44.930
So for resolution, we can do something like this.

02:44.930 --> 02:52.640
We can define the type of unique email check.

02:53.750 --> 03:00.710
And in this one we will have the email which is going to be string type of field.

03:04.130 --> 03:08.210
So we can do like this.

03:08.930 --> 03:17.990
We can take the, let's say, buddy from request buddy and we can say this is going to be the unique

03:18.320 --> 03:19.340
email check.

03:20.240 --> 03:22.250
Then here we can say.

03:23.030 --> 03:31.580
But the email because we we know that there is email now because we define the type and we are basically

03:31.580 --> 03:34.860
casting this request body to this unique email check.

03:35.060 --> 03:38.000
So there is email field in this body.

03:38.750 --> 03:43.640
So we mimic the back end implementation.

03:43.640 --> 03:47.740
Here we have this handler which is going to be returning to 100.

03:47.750 --> 03:47.930
Okay.

03:47.990 --> 03:54.950
When we send a request with this email and we are doing that in this test, we are filling the email

03:55.490 --> 03:56.630
form with this one.

03:56.930 --> 03:59.720
But there's one more thing we need to do here.

03:59.720 --> 04:08.300
Now we have an async behavior, which means we need to make sure the API request is completed before

04:08.300 --> 04:12.530
we see the the error messages, like the validation messages here.

04:12.530 --> 04:20.780
So like the visibility of this, the message is now dependent onto the API request.

04:20.990 --> 04:27.500
So instead of using this query by text, we are going to use.

04:30.700 --> 04:35.170
The the query we used before like this one find by text.

04:35.170 --> 04:37.870
So this is waiting for this text to appear.

04:37.870 --> 04:40.180
So we will do the same thing here as well.

04:40.630 --> 04:51.310
So we will get, let's say, the error message and we get it by wait screen, find by text, and the

04:51.310 --> 04:52.870
text will be the message.

04:52.870 --> 04:56.860
And for this test it's going to be email in use.

04:57.070 --> 04:59.530
So basically we are going to.

05:00.590 --> 05:05.570
Check this one, this error message to be in the document, saving this one.

05:08.540 --> 05:11.270
And here we see all tests are passing.
