WEBVTT

00:04.010 --> 00:09.920
After a successful sign up, Hpakant is going to be sending an email with the activation token to the

00:09.920 --> 00:17.000
email address we entered, so a user must be checking their email to activate their account, so we

00:17.000 --> 00:20.060
must be showing an information to user about it.

00:20.950 --> 00:23.260
So let's add a new test for this one.

00:23.930 --> 00:38.090
Now in this one, it displays account activation notification after successful sign up request.

00:40.790 --> 00:44.210
So this test will be similar to the spinner test.

00:44.210 --> 00:50.600
So we are going to be checking visibility of an element with the specific text we are looking for,

00:50.600 --> 00:54.830
but it's not going to be visible before we do anything on the page.

00:54.830 --> 01:03.110
So here we are going to call setup form and then we are going to click button.

01:03.110 --> 01:06.380
But here we will do a check.

01:06.380 --> 01:11.840
But before that, let's, let's go over about what the implementation will be.

01:11.840 --> 01:14.150
So we are going to click the button.

01:14.180 --> 01:18.050
This is going to be making an HTTP call to this end point.

01:18.260 --> 01:25.760
Then this is going to be so far we haven't used this functionality, but this time we need to return

01:25.760 --> 01:33.620
a response from this testing controller and this is going to be a 200 K response.

01:33.710 --> 01:40.130
We are not going to set a specific response, but it's going to be just an empty object and we can do

01:40.130 --> 01:41.000
it like this.

01:41.120 --> 01:51.050
Let's have this as a variable and we can call this Rex flush function and we can just pass an empty

01:51.080 --> 01:52.040
object to it.

01:52.040 --> 01:53.930
So this is ending up with the 200.

01:53.930 --> 01:54.430
Okay.

01:54.770 --> 01:58.490
Now we are going to display a message to user.

01:58.490 --> 02:02.660
And for this one again, we are going to use bootstrap component.

02:03.830 --> 02:06.290
Let's find the alert.

02:07.840 --> 02:17.950
And alert is basically having these styles and we will display a message with this green success alert

02:17.950 --> 02:18.700
style.

02:18.850 --> 02:26.620
And here we have the the markup for each like the this is the success, this is the danger primary,

02:26.620 --> 02:27.940
secondary and others.

02:27.940 --> 02:37.270
So we will have this one in the the the component and we are going to query this based on the like we

02:37.270 --> 02:42.310
can just query the alert success to get the element.

02:42.550 --> 02:46.300
So we are going to have, let's say this is the message.

02:46.390 --> 02:48.190
We will get it by sign up.

02:48.190 --> 02:52.150
This is the the whole page query selector.

02:52.150 --> 02:58.270
And we are going to use the class name of Lord Dash success.

02:58.870 --> 03:04.000
And we expect this message to have this text content.

03:04.180 --> 03:05.830
It's going to contain.

03:06.580 --> 03:08.650
And this is going to be taking.

03:09.520 --> 03:10.420
A bit longer.

03:10.420 --> 03:12.310
So I'm going to the next line.

03:12.340 --> 03:22.390
The message we see is going to be, please check your email to activate your account.

03:24.810 --> 03:31.770
But this is going to be visible after clicking the button, so it's not going to be visible before we

03:31.770 --> 03:32.700
do anything.

03:32.850 --> 03:38.790
So just like checking the spinner, this is the spinner.

03:39.300 --> 03:41.730
In the previous test, we will do the same thing.

03:41.730 --> 03:50.070
So we expect this is not going to be in the document and like this it's going to be false.

03:50.670 --> 03:52.080
So this is the test.

03:52.530 --> 03:54.180
Let's save this one.

03:54.800 --> 03:57.200
But we have a missing part as well.

03:57.200 --> 03:59.790
Like this is going to be updating the UI.

03:59.810 --> 04:03.410
So you must be making sure the UI is updated.

04:04.250 --> 04:06.140
So we call fixture detect changes.

04:07.460 --> 04:13.780
So this is the test and it's failing and let's fix it.

04:13.790 --> 04:19.280
And the first thing is we are going to check the status of the request.

04:19.460 --> 04:25.910
So here in the quick signup, we are calling this post, but we are not caring about the response.

04:25.910 --> 04:32.040
So whenever we receive a success response, it's going to be handled within this subscribe.

04:32.060 --> 04:39.100
So here in the class we can have another property and let's call this one is sign of success.

04:39.110 --> 04:47.630
It is initially going to be false and after we receive a response from Hpakant we can set it to true

04:48.200 --> 04:51.530
and based on this property we can display.

04:52.270 --> 04:53.050
This.

04:54.380 --> 04:56.120
Text on UI.

04:56.150 --> 05:08.900
So here after this div we can have another div and it's going to be having this text and this is going

05:08.900 --> 05:10.310
to be visible conditionally.

05:10.310 --> 05:17.150
So NGF and it's going to be only visible if sign up is success.

05:18.300 --> 05:25.230
And since we are using the bootstrap classes in the query part.

05:26.520 --> 05:28.690
We must be using them here as well.

05:28.710 --> 05:37.110
So it's going to be having the the classes of alert and alert sexes.

05:37.770 --> 05:45.300
So basically having these two as a class for this component now let's say all these changes.

05:47.180 --> 05:50.510
And here the test is passing.

05:50.720 --> 05:53.570
Now we can also test this one on browser.

05:54.020 --> 05:59.180
Like here, let's fill the form with an existing user going with user 50.

05:59.750 --> 06:01.930
User 50 and mail.

06:01.950 --> 06:02.540
Clone.

06:03.310 --> 06:04.400
Password.

06:05.130 --> 06:06.530
Password.

06:07.800 --> 06:09.390
Now we are receiving 200.

06:09.660 --> 06:11.430
And here we have this message.

06:11.430 --> 06:14.430
Please check your email to activate your account.

06:15.780 --> 06:17.790
Now let's enhance this functionality.

06:17.790 --> 06:24.150
Let's make sure the form is gone after we receive a success response.

06:24.150 --> 06:27.810
So we will be only seeing this message here.

06:28.590 --> 06:30.660
So let's add a new test for this one.

06:33.150 --> 06:40.260
It hides sign up form after successful.

06:41.160 --> 06:42.840
Sign up.

06:44.030 --> 06:45.050
Request.

06:48.750 --> 07:00.990
Now we need to have a reference for the form element like we are going to check the the non-existence

07:00.990 --> 07:02.120
of this form.

07:02.130 --> 07:06.230
And for this one we can we can do something like this.

07:06.240 --> 07:16.740
We can say we can set a test ID and this is a functionality exist in the test and testing library setup

07:16.740 --> 07:17.280
as well.

07:17.280 --> 07:24.510
So here let's say so this is basically the card for the the form, the signup form.

07:24.510 --> 07:31.770
So let's set a data test ID for this one and let's say this is form.

07:31.770 --> 07:39.030
The sign up value we are setting to is an ID for this this element.

07:40.110 --> 07:48.360
So in this test we are calling setup form and we are expecting this sign up.

07:49.660 --> 07:54.970
Query selector and we are looking for.

07:56.120 --> 08:11.980
This div with this test ID so like here this with this data test ID to be treaty.

08:11.990 --> 08:14.360
So it's going to be in the document first.

08:14.960 --> 08:22.670
Then after we are going to click to button, then we will receive the response.

08:24.860 --> 08:26.720
Then we will update the UI.

08:27.020 --> 08:32.450
Then again, we will check this form.

08:32.450 --> 08:34.250
But this time it's going to be.

08:35.880 --> 08:36.300
False.

08:38.210 --> 08:40.130
So saving all these changes.

08:42.280 --> 08:51.640
So this one is failing and the fix is, again, we can use this same property, this sign up success.

08:51.640 --> 08:52.660
So it is.

08:52.930 --> 08:56.650
So this one is visible when the sign up success is true.

08:56.650 --> 09:01.240
And we can do like this if and give.

09:02.400 --> 09:09.900
If sign up success is false, then we will be showing this part.

09:10.560 --> 09:12.510
Saving this.

09:13.970 --> 09:15.710
And the tests are passing.

09:16.620 --> 09:22.080
So we are conditionally displaying this part or this one.

09:23.040 --> 09:29.040
We can enhance this functionality like we can do something like this.

09:29.760 --> 09:40.260
Here in the root div we can say if let's do like this, let's have the clause in this line and we can

09:40.260 --> 09:43.860
use the the NGF right here.

09:44.700 --> 09:55.590
By saying, like, if it is not sign up success, then it's going to be showing the content here, just

09:55.590 --> 09:57.600
removing the energy from this one.

09:59.710 --> 10:02.590
And we can use like this else.

10:03.800 --> 10:10.010
We can use a template here and let's say the template name will be like the success message.

10:10.940 --> 10:13.790
We don't have this one yet, so it's having this error.

10:13.790 --> 10:22.490
But here in this part, we conditionally say if this one is matching, if this is not sign of success,

10:22.490 --> 10:27.020
then existing content will be visible else.

10:27.870 --> 10:31.320
It's going to be adding not this one, but the one.

10:31.710 --> 10:37.470
The template defined with this name will be inserted as a child to distill.

10:37.800 --> 10:42.600
So we are going to define the success message here.

10:44.580 --> 10:48.780
Now instead of having again, we don't need this NGF anymore.

10:48.780 --> 10:51.630
So we have just this third component.

10:51.630 --> 10:57.300
But this is going to be defined as n g template.

10:59.110 --> 11:02.020
Opening and closing and moving this TV into this one.

11:02.260 --> 11:07.630
And we can give the name to this one with this hash template variable.

11:07.630 --> 11:13.510
So we are referring to this template with this name.

11:13.510 --> 11:18.070
So we are using this success message name for this template.

11:18.160 --> 11:25.930
And it's going to be used in this content for this death if this doesn't match.

11:27.600 --> 11:37.410
So if criteria matches then goes with the default else inserts the the template associated with this

11:37.410 --> 11:37.980
name.

11:38.760 --> 11:40.950
So let's say this one as well.

11:42.270 --> 11:45.090
Cynthia, we see the test is passing now.

11:45.090 --> 11:46.530
Let's test this.

11:49.800 --> 11:51.120
Let's send another request.

11:51.150 --> 11:52.980
User 51.

11:52.980 --> 11:54.630
User 51.

11:55.140 --> 11:56.070
Gmail.com.

11:56.760 --> 11:57.840
Password.

11:58.680 --> 12:01.380
Password now.

12:02.260 --> 12:03.700
Sending the request.

12:04.210 --> 12:10.300
And as soon as we receive the response, the form is gone and the alert is visible.
