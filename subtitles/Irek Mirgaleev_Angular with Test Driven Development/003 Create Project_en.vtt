WEBVTT

00:03.340 --> 00:07.900
Now let's create the English project for creating English projects.

00:07.900 --> 00:10.480
We are going to use English clay.

00:10.810 --> 00:18.010
English clay must be globally installed in your workstation you can install like this npm installed

00:18.850 --> 00:20.050
English clay.

00:20.920 --> 00:23.500
Then we can create a project.

00:24.420 --> 00:29.430
Like this, we will call n g the new and the project name.

00:29.910 --> 00:35.070
After that we will switch to that directory and we will run the n g serve.

00:35.670 --> 00:37.320
Now let's do this.

00:37.650 --> 00:44.420
So in this directory, I will be creating a new project and I already installed the English CLI.

00:44.610 --> 00:51.690
I'm just running in g new and I'm naming my application as source.

00:52.720 --> 00:56.530
So this is like a wizard for creating the Angular application.

00:56.530 --> 01:04.270
And Angular has built in functionalities like the routing, and here it is asking us if we want routing

01:04.270 --> 01:05.530
in this application.

01:05.530 --> 01:11.800
At the moment, let's go with the default option, which is now we will be adding the routing later.

01:12.620 --> 01:18.020
Then it is asking which stylesheet format would you like to use and lets go with the CSS.

01:19.170 --> 01:25.110
Now this is creating the necessary files for the project and installing the dependencies.

01:26.650 --> 01:28.990
And her packages are installed.

01:29.260 --> 01:35.050
By the way, in the next lecture we will go over the test setup of our project and we will add a couple

01:35.050 --> 01:37.900
of packages and configuration to the project.

01:38.630 --> 01:45.400
You will be finding the best project codes in that lecture so you can just download it and extract it,

01:45.410 --> 01:51.260
then just run NPM, install in it, and then you will be having the project ready.

01:51.260 --> 01:54.620
But let's see how we can create a project from scratch.

01:54.770 --> 01:57.020
So now the project is ready.

01:57.020 --> 02:04.550
Let's switch into that directory and I'm just going to open Visual Studio code in this folder.

02:05.760 --> 02:08.930
So the project is open right here.

02:08.940 --> 02:13.920
If we go over the structure, we have this package, Jason.

02:14.130 --> 02:16.560
And in it, we have the scripts.

02:16.560 --> 02:20.400
And as you can see, all of them are starting with the English scripts.

02:20.400 --> 02:26.850
So the English is used in the in these start test or build scripts.

02:27.090 --> 02:30.750
And basically, we have the dependencies of the angular packages.

02:31.050 --> 02:35.190
We have the extras, which is for the observable pattern.

02:35.370 --> 02:41.190
And we also have this development dependencies which are for the testing environment, like the Jazmin,

02:41.460 --> 02:48.300
the test runner we will be using and the karma is for running the test in the browser.

02:50.080 --> 02:52.720
And let's run this application.

02:52.720 --> 02:55.240
Let's see what is the initial one?

02:55.720 --> 03:00.220
Again, I'm just going to the console and running.

03:00.220 --> 03:02.350
I can either run in PM start.

03:03.160 --> 03:11.410
This is just like this one and PM start is running this one engine serve or if you have globally installed

03:11.410 --> 03:14.410
energy then we can just run the engine serve.

03:15.040 --> 03:16.690
So both are same.

03:17.200 --> 03:17.840
Just try again.

03:17.860 --> 03:18.700
PM start.

03:21.120 --> 03:26.670
And here we see angular life development server is listening on localhost 4200.

03:27.390 --> 03:36.990
All we do is just open the browser, go to localhost 4202 we have this application and let's see where

03:36.990 --> 03:38.910
this one is coming from.

03:39.920 --> 03:40.580
Are.

03:41.590 --> 03:51.040
Project is initialized in this main typescript test file, and this one is bootstrapping the module,

03:51.070 --> 03:52.030
app module.

03:52.210 --> 03:57.670
And if we go into that one, it's under EBP EBP module.

03:58.570 --> 04:03.730
It has this app component and if we check the app component.

04:05.230 --> 04:06.460
Here we have.

04:07.510 --> 04:08.920
The toolbar.

04:08.920 --> 04:17.140
Like there is this Angular logo right here, there is this welcome text, and if we just scroll down,

04:17.140 --> 04:21.130
we will see all the elements we are seeing on the page.

04:21.280 --> 04:25.990
And this development server has the functionality of reloading.

04:25.990 --> 04:33.700
And like if we change this one to something like this and save it here, we can see it is reloaded with

04:33.700 --> 04:34.780
these changes.

04:35.870 --> 04:39.830
So we will be seeing our changes as soon as we save them.

04:40.250 --> 04:41.000
And.

04:42.280 --> 04:43.780
Other than these.

04:44.200 --> 04:48.140
I would also like to show you the extensions I'm using.

04:48.160 --> 04:53.920
I don't have too much, but I have this angler language service.

04:55.290 --> 05:04.350
And I have this is lint and I have the prettier and yes lint is for having lingering feedbacks from

05:04.350 --> 05:12.600
the editor and the prettier is for formatting the code and the English language service is for the angler

05:12.600 --> 05:13.320
projects.

05:13.960 --> 05:17.380
So we have the base project.

05:17.590 --> 05:23.650
In the next section we will go over the testing environment of the application.
