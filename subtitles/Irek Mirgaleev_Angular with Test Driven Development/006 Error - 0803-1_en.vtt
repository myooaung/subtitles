WEBVTT

00:03.620 --> 00:07.430
Now let's handle this error case in the log in form.

00:07.640 --> 00:13.640
So after the authentication fails, we are receiving this error from back end and we are displaying

00:13.640 --> 00:16.610
this error, but let's do something like this.

00:16.610 --> 00:23.420
So as soon as we change the content of the form, let's make sure the error is gone.

00:23.420 --> 00:29.870
So we are just going to clear this error if we change the content of these inputs.

00:30.740 --> 00:32.930
Let's start with the test again.

00:33.050 --> 00:37.730
So again, the test will be in the interactions block right here.

00:37.730 --> 00:45.920
So scrolling down in that block and adding the new test, so we are going to in this one, let's test

00:45.920 --> 00:50.600
the image input so it clears error.

00:51.380 --> 00:55.370
After email, the field is changed.

00:55.850 --> 01:04.220
So we will be changing the content of the email email field and we will be repeating the steps in the

01:04.220 --> 01:06.860
previous test in this one.

01:08.960 --> 01:14.690
So we are filling the form, we are making the API request.

01:14.690 --> 01:16.130
Then we are.

01:18.450 --> 01:21.450
Waiting for UI to be updated.

01:22.380 --> 01:34.800
Now we are going to change the email input and we have queried those elements in the setup and let's

01:35.070 --> 01:41.310
have these as a variable global variable within this describe log so that we can use them, use them

01:41.310 --> 01:41.940
in the test.

01:41.940 --> 01:44.490
So I'm going to add them here.

01:44.790 --> 01:46.890
We will have the email input.

01:47.160 --> 01:53.100
It is HDMI input element and also in the next one we will test the password.

01:53.100 --> 02:01.320
So let's have that one as a variable here as well and just clearing the const from these.

02:01.500 --> 02:09.180
So when we call the setup form, we are querying the email input and we are assigning those to these

02:10.170 --> 02:11.670
variables we have here.

02:11.970 --> 02:15.720
Now we are going to override the email value.

02:16.110 --> 02:21.150
So again, I'm just going to copy these lines and.

02:22.310 --> 02:23.150
Here in the States.

02:23.150 --> 02:24.470
I'm just pasting it.

02:25.430 --> 02:28.730
Now we can type anything else here.

02:29.420 --> 02:31.750
So let's say this is valid mail.

02:33.050 --> 02:35.630
Then we are dispatching the input event.

02:35.630 --> 02:39.890
So this is triggering the the UI updates.

02:42.150 --> 02:45.880
And let's check the visibility of the the alert component.

02:45.900 --> 02:52.230
So here this is the display case, display error of the summit failure.

02:52.320 --> 02:54.540
So we are going to query this one.

02:55.980 --> 02:57.150
This component.

02:59.240 --> 03:01.150
And we can do something like this.

03:01.160 --> 03:08.930
We can't just go like expect this query result to be false.

03:08.960 --> 03:12.980
So we expect this alert to be gone.

03:13.830 --> 03:15.480
Saving this one.

03:18.580 --> 03:20.650
So this test is failing.

03:21.580 --> 03:23.380
By the way, there is a typo in the.

03:24.310 --> 03:25.770
Artist name.

03:26.790 --> 03:27.720
Let's fix it.

03:28.170 --> 03:32.190
Now we need to react to the events triggered in these inputs.

03:32.190 --> 03:39.330
So like whenever this input is changed, like the password or email, we need to know when they are

03:39.330 --> 03:47.370
change so that we can update the component, logging component, let's open the logging component.

03:48.870 --> 03:51.480
So we are having the error field right here.

03:51.480 --> 04:00.120
So whenever the inputs are changed, we will just clear this so that the error will not be visible.

04:00.420 --> 04:07.200
So right here, the the alert is visible based on the error property in the class.

04:07.200 --> 04:12.420
So we need to be aware when these inputs are changed.

04:12.420 --> 04:18.630
And to do that, we can bind to an event triggered from this input.

04:19.110 --> 04:26.640
And since this is an engine model, because we are using the template driven form and we are associating

04:26.640 --> 04:34.980
the model with this one, we can listen for the energy model change events

04:39.180 --> 04:45.680
and whenever this is occurring we will call our let's say we have en change function.

04:45.690 --> 04:48.600
At the moment we don't, but we will create it.

04:48.600 --> 04:56.490
So whenever anything is changing in this input, we will get notified in this function on change.

04:56.490 --> 05:03.210
So in login component, let's create that function on change.

05:05.460 --> 05:09.210
And here all we will do is just we will clear the error.

05:09.210 --> 05:13.920
So this error will be just empty string.

05:14.100 --> 05:17.880
So whenever this input is changed.

05:18.790 --> 05:24.460
We will be updating the error to be empty string.

05:24.490 --> 05:28.980
And when it is, it's empty string right here.

05:28.990 --> 05:37.480
This is going to be false because the empty string is false value, then that that error will be gone

05:37.480 --> 05:38.560
from the screen.

05:38.770 --> 05:40.450
So let's say the changes.

05:44.220 --> 05:46.470
And the tests are passing.

05:46.590 --> 05:48.390
Let's test it on browser.

05:49.120 --> 05:51.310
Just sending a request.

05:51.640 --> 05:52.810
This is failing.

05:52.810 --> 05:57.340
But if I type anything here now the error is gone.

05:57.340 --> 06:01.450
But if you type anything to password, it is still there.

06:01.450 --> 06:03.880
So let's add the test for the password case.

06:04.270 --> 06:07.270
So it's going to be almost same.

06:07.270 --> 06:08.410
Just copying the.

06:09.380 --> 06:17.360
Email test and pasting here so it clears thereafter after password field is changed.

06:18.880 --> 06:23.050
Now we are going to fill the password input.

06:23.890 --> 06:29.440
And let's say this is password to.

06:30.830 --> 06:32.230
And that's it.

06:32.240 --> 06:33.290
Let's save this.

06:36.710 --> 06:42.790
So this one is failing and the fix is same.

06:42.830 --> 06:46.940
Just like we called on change for the email.

06:47.190 --> 06:48.520
This is a generic function.

06:48.530 --> 06:50.530
It doesn't care about the.

06:53.040 --> 06:53.670
The input.

06:53.670 --> 06:56.040
It doesn't do anything about the input actually.

06:56.040 --> 07:08.430
It is just updating the error to be empty so we can use the same function for the password input right

07:08.430 --> 07:08.940
here.

07:08.940 --> 07:09.870
Saving it.

07:12.850 --> 07:16.780
And the tests are passing and if you test it on browser.

07:18.820 --> 07:19.960
It is failing.

07:19.990 --> 07:21.280
We have the error.

07:21.670 --> 07:25.690
I type anything to email now the error is gone.

07:25.690 --> 07:29.920
And if I type anything, the password error is also gone.
