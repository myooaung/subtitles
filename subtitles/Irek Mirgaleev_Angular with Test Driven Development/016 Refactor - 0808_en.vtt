WEBVTT

00:03.600 --> 00:08.190
Now let's complete our course with a small refactoring here.

00:08.550 --> 00:16.020
So at the moment we have two services, user service and authentication service, but the user service

00:16.020 --> 00:22.230
is doing some of the roles that can be handled in the authentication service, like sending the authentication

00:22.560 --> 00:24.270
related request here.

00:24.300 --> 00:30.720
Since now we have this authentication service, let's move these functionalities to that one.

00:30.750 --> 00:36.900
Let's start with the authenticate first, just cutting this one and let's open the authentication service

00:37.800 --> 00:40.530
and pasting right here.

00:42.730 --> 00:44.650
Now we are going to make this atypical.

00:44.650 --> 00:47.890
And so first, let's inject that.

00:49.100 --> 00:53.570
So we need HTP client specific lines.

00:56.270 --> 01:04.520
Now in the logging, we were calling the authenticate method in the user service to send the authentication

01:04.520 --> 01:04.890
request.

01:04.910 --> 01:09.770
Then after receiving the success response, we were calling the authentication service, said logged

01:09.770 --> 01:15.200
in user to set the user in the transaction state.

01:15.560 --> 01:23.720
But now we are going to handle the both of these actions in this authentication service, this authenticate

01:23.720 --> 01:24.200
method.

01:24.680 --> 01:31.130
Response received for this request is having the logged in user information so we can pass that data

01:31.130 --> 01:37.190
to the function here to update both both the user and the local storage.

01:37.190 --> 01:38.300
So let's do that.

01:38.660 --> 01:48.080
So we will use our exchange functionality and we will use the pipe to to check the, the values we are

01:48.080 --> 01:48.830
receiving.

01:49.370 --> 01:55.490
And then we will use another functionality which is called us TAP.

01:57.240 --> 01:59.650
This is coming from Alex.

02:00.330 --> 02:08.010
So in this one, we are able to apply the side effects without altering the payload.

02:08.010 --> 02:10.530
So like we can take the body.

02:11.190 --> 02:17.430
This is the response body that we are processing in the logging component, like, like here.

02:17.550 --> 02:24.270
But here we can take the body as well and we can do additional controls like let's do that.

02:24.270 --> 02:32.490
If there is body then we can just call this said look the user this said look, the user with this body

02:32.490 --> 02:42.390
object, but we need to cast it to the user first so we know that this request is returning back.

02:42.390 --> 02:50.430
The user object we are looking for and here in this this authenticate function, we are checking the

02:50.430 --> 02:55.500
received response and updating the said logged in user accordingly.

02:55.890 --> 03:03.840
Or if we receive an error, we can throw that error, but let's, let's return the body as it is.

03:03.840 --> 03:11.070
So the, the login component can also take that body and process it if it wants.

03:11.520 --> 03:14.130
So this is the implementation for the authenticate case.

03:14.790 --> 03:21.660
Now in the logging component, since there is no authenticate function in the in the user service anymore

03:21.660 --> 03:24.390
and we moved that function to authenticate service.

03:24.390 --> 03:29.940
So we will just call authenticate service authentication service authenticate function.

03:30.390 --> 03:36.480
Then we will we are subscribing to it now we are not going to deal with the body.

03:36.480 --> 03:41.850
We no longer need to call the set, log the end user because this is already been done here in this

03:41.850 --> 03:43.020
authenticate function.

03:43.650 --> 03:48.990
So the the logging component does not have to do anything about it.

03:49.110 --> 03:55.740
All we care is we are receiving a success response than we are calling the navigation to navigate the

03:55.740 --> 03:56.520
homepage.

03:57.750 --> 04:07.560
Now the user service is not used anywhere, so we can remove that from the dependencies and let's clear

04:07.650 --> 04:09.420
the unused imports as well.

04:10.240 --> 04:12.160
Now saving all these changes.

04:17.640 --> 04:19.590
And the tests are passing.

04:19.920 --> 04:22.650
Now let's do the same thing for logout.

04:23.190 --> 04:27.140
And we were calling the logout in now bar.

04:27.150 --> 04:33.750
So we were calling both the authentication service logout to update the state and also the user service

04:33.750 --> 04:37.260
log out to make the API request.

04:37.290 --> 04:46.710
Now let's cut the log out from user service, cutting it from here and let's go to the authentication

04:46.710 --> 04:53.760
service and let's add that request to the to this logout function here.

04:53.760 --> 04:54.480
Just pasting it.

04:54.480 --> 04:57.300
But I'm just going to.

04:58.350 --> 05:01.110
Cut it and paste this one.

05:01.680 --> 05:03.780
So in this log out.

05:05.030 --> 05:12.980
Updating the the logged in user property, updating the local storage and making the API request.

05:12.980 --> 05:15.140
Now in number.

05:16.010 --> 05:20.120
We no longer need to call user service lookup because there is no that function.

05:20.120 --> 05:26.390
So removing that and this user service is not necessary anymore, removing that one as well.

05:26.390 --> 05:31.310
But we need to do one thing here.

05:31.310 --> 05:36.260
So in the logout we have this this request.

05:37.050 --> 05:38.450
And this is a request.

05:38.490 --> 05:46.260
Either we subscribe to this one right here without returning it because we are not doing anything about

05:46.260 --> 05:46.740
the response.

05:46.740 --> 05:48.240
So we can subscribe to hit.

05:48.240 --> 05:51.210
Subscribe to it like this.

05:51.570 --> 05:53.280
We don't care about the response.

05:53.850 --> 06:00.630
Or we could return this one without subscribing and handle the subscription right here.

06:00.660 --> 06:03.000
You could add subscribe right here.

06:03.000 --> 06:07.590
But I'm just going to keep it simple in the component part.

06:08.070 --> 06:12.280
We are just calling this logout function and the authentication service.

06:12.300 --> 06:12.780
Look out.

06:12.780 --> 06:17.760
We'll handle all the necessary actions saving these changes as well.

06:21.940 --> 06:24.190
And the tests are passing.

06:24.490 --> 06:28.900
And if we check the gist, console those tests are passing.

06:28.900 --> 06:30.850
Let's rerun the test.

06:34.420 --> 06:36.670
And here we see all tests are passing.

06:37.000 --> 06:43.990
So with this way, all authentication related actions are moved into the authentication service.

06:43.990 --> 06:51.340
So the components does not have to deal with the moving parts like the making the API request and updating

06:51.340 --> 06:53.250
the authentication state and so on.

06:53.260 --> 06:58.810
It's just calling relevant functions in the authentication service and it will be taken care necessary

06:58.810 --> 06:59.620
actions.

07:01.440 --> 07:07.470
So with this one, we completed our implementation and also we completed our course.

07:07.740 --> 07:13.320
Hopefully you enjoy the course and you'll learn valuable things from this one.

07:13.710 --> 07:18.390
Hopefully these will be useful in your daily work routine.

07:19.350 --> 07:24.330
Thank you for joining this course and I wish you happy and healthy days.
