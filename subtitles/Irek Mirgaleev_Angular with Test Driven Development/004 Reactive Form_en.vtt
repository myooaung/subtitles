WEBVTT

00:03.230 --> 00:07.070
Now we have practiced how we can use the template driven form.

00:07.550 --> 00:12.350
And in this one, let's see how the reactive form is working.

00:12.500 --> 00:18.800
So again, we are going to import a new module for this one and let's open that module.

00:19.250 --> 00:27.020
And instead of forms module, now we are going to import reactive forms module.

00:27.020 --> 00:31.580
So we are not going to import forms module, but reactive forms module.

00:31.970 --> 00:35.510
So this is going to be breaking our tests at the moment.

00:35.660 --> 00:37.940
We are going to update our test as well.

00:38.000 --> 00:49.730
So in sign up component spec, let's replace from module with reactive forms module and also let's do

00:49.730 --> 00:52.760
that in just test.

00:54.680 --> 00:56.780
So right here.

00:57.630 --> 01:03.900
At the moment the tests will fail because the current implementation is dependent onto this engine model,

01:04.530 --> 01:07.560
but we are not using the forms module anymore.

01:07.560 --> 01:09.720
So this is showing error.

01:10.770 --> 01:19.020
Now what we will do is first we will update the sign up components.

01:19.110 --> 01:24.970
Now these properties will no longer be a simple text.

01:24.990 --> 01:31.230
These are going to be new form control like this.

01:31.770 --> 01:36.810
So this is a form control object coming from the angular forms.

01:36.840 --> 01:39.870
Now the template driven form.

01:40.590 --> 01:47.040
We were doing all the things on the template parts like in the HTML part, but in reactive.

01:47.070 --> 01:50.980
We will do most of the thing in the the component.

01:51.000 --> 02:00.720
So this username, email, password and password repeat are all going to be form control.

02:00.750 --> 02:03.450
Now we have errors right here as well.

02:03.600 --> 02:06.030
And also these are not going to work.

02:06.540 --> 02:12.230
Now we will be able to access to the values of these fields.

02:12.240 --> 02:13.440
These are from control.

02:13.470 --> 02:18.560
Now we do like this, this username, and it has value.

02:18.570 --> 02:24.740
So we access to their value like this and we need to update this one as well.

02:24.750 --> 02:31.020
So we are not just going to check this password, but we are going to check its value.

02:32.510 --> 02:37.730
So moving it to the next line like this.

02:38.270 --> 02:40.610
So now these are from control.

02:41.510 --> 02:44.600
And in the template part.

02:45.970 --> 02:47.960
We will do like this.

02:47.980 --> 02:50.830
We no longer use this engine model.

02:51.960 --> 02:55.020
And we don't need this name attributes anymore.

02:55.050 --> 02:57.000
Just removing both.

02:57.180 --> 03:02.970
Now, instead of this, we will have this form control.

03:04.700 --> 03:10.970
And this is the form control instance in the component.

03:10.970 --> 03:11.660
This one.

03:13.700 --> 03:16.880
And we will do the same thing for the others.

03:16.970 --> 03:19.040
So this is going to be.

03:20.280 --> 03:23.760
Form control email.

03:24.710 --> 03:30.560
And this is going to be firm control for password.

03:31.370 --> 03:37.100
And this is form control password repeat.

03:37.130 --> 03:42.350
Now we resolved the errors both in the template and in the component.

03:42.380 --> 03:44.390
Now let's save all these changes.

03:47.340 --> 03:50.010
And the tests are passing.

03:52.070 --> 03:56.330
And the justices are also passing in this course.

03:56.330 --> 04:01.660
We will see both reactive and template driven forms from this moment.

04:01.670 --> 04:10.580
I will continue to use reactive form approach for the signup component, but later we will see a template

04:10.580 --> 04:18.110
driven form in another sample because the forms are not just limited to taking the values, but it also

04:18.110 --> 04:21.170
has the functionality to apply the validations.

04:21.170 --> 04:29.480
And the validation part is showing lots of differences compared to reactive forms or template driven

04:29.480 --> 04:30.080
forms.

04:30.530 --> 04:34.820
By the way, typically the forms contain several related controls.

04:34.820 --> 04:42.260
Later we will see their interaction or their validation point of view and like password and password

04:42.260 --> 04:45.290
repeat are related form elements.

04:45.290 --> 04:51.740
So when we are working with the validation, we will see how these are connected.

04:51.740 --> 04:59.990
So we can group the form elements in a form group so we can do something like this.

05:00.030 --> 05:06.830
We can define, let's say we will have a form and this is a new form group.

05:07.690 --> 05:10.480
And this is an object.

05:11.260 --> 05:13.240
This is taking an object.

05:13.240 --> 05:16.270
And in this object we will have these form controls.

05:16.270 --> 05:19.060
So just moving this into.

05:20.150 --> 05:20.870
Look here.

05:21.620 --> 05:31.370
And these are not going to be an assignment, but it's going to be like we are passing and Jason having

05:31.370 --> 05:33.020
these keys and values.

05:33.380 --> 05:37.910
By the way, there will be a comma here and this one.

05:39.540 --> 05:41.340
And like this.

05:41.820 --> 05:44.460
So we have this form group in it.

05:44.460 --> 05:50.590
We have the form controls for the username, email, password and password repeat.

05:50.610 --> 05:54.690
Now, we also need to update this one as well.

05:54.780 --> 06:02.770
And now we are going to get username from this form, get username.

06:03.480 --> 06:06.900
And from that one, we take the value.

06:07.210 --> 06:11.810
By the way, this is form and this is a possible null.

06:11.820 --> 06:17.430
So we add this optional and let's do the same thing here.

06:17.880 --> 06:21.300
Get email value.

06:22.500 --> 06:24.000
Get password.

06:25.580 --> 06:32.210
Value and we do the same thing here from get password.

06:34.030 --> 06:34.900
Well, you.

06:38.930 --> 06:44.270
And this is going to be password repeat value.

06:45.930 --> 06:50.730
So this part is done, but we also need to update the template.

06:50.910 --> 06:57.460
Now instead of associating each with the the template.

06:57.480 --> 06:59.430
First we need to.

07:00.470 --> 07:04.490
Associate Hull form element with the form group we have here.

07:04.490 --> 07:08.390
So like let's move this to a new line.

07:08.660 --> 07:10.310
So we will have.

07:12.850 --> 07:14.650
Form group.

07:15.130 --> 07:22.150
We are binding to form group of this form and our form is this form instance.

07:23.140 --> 07:24.490
Right here, this one.

07:25.900 --> 07:35.920
Then in each of these elements, we no longer bind to the form control, but we just give form control

07:37.120 --> 07:37.900
name.

07:37.900 --> 07:43.720
And the name is the name right here.

07:43.720 --> 07:43.930
So.

07:43.960 --> 07:45.520
Username, email, password.

07:46.660 --> 07:47.500
Like this.

07:48.610 --> 07:52.810
So this is going to be form control name.

07:54.110 --> 07:57.110
And renaming next to.

08:01.290 --> 08:04.350
Like this and let's save these changes.

08:06.220 --> 08:12.100
So the just tests are passing and karma tests are also passing.

08:12.310 --> 08:18.910
We can also have a couple of more changes here in form submit event.

08:19.060 --> 08:22.030
We are calling this event prevent default.

08:22.150 --> 08:31.960
But instead of doing that now we are using this form form group and it is listening for another event.

08:32.560 --> 08:44.440
It is in G Submit and basically we can make sure our on click sign up can be called whenever this summit

08:44.440 --> 08:44.830
occurs.

08:44.830 --> 08:53.770
So we don't need this submit and we don't need to deal with the event prevent default part and saving

08:53.770 --> 08:54.490
this one.

08:56.900 --> 09:06.740
So the tests are passing and also in a click sign up, it's open the component right here we are creating

09:06.740 --> 09:08.900
this body object like this.

09:09.290 --> 09:13.760
We are taking each of the fields and passing it.

09:14.920 --> 09:17.620
Their body, but we could do something like this.

09:17.630 --> 09:24.920
Let's get whole body object from this form value.

09:25.130 --> 09:30.600
And this form contains username, email, password and password repeat.

09:30.680 --> 09:35.300
But we don't need password repeat so we can just delete.

09:35.630 --> 09:38.990
But the password repeat.

09:38.990 --> 09:42.170
Then here we can just pass.

09:44.030 --> 09:46.060
Buddy to it.

09:46.970 --> 09:48.230
Let's save this.

09:50.880 --> 09:53.400
And the tests are passing.

09:54.220 --> 09:58.120
So this is how the reactive form is working.

09:58.270 --> 10:02.890
Again, in this sign up component, I will continue to use the reactive form.
