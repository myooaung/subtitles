WEBVTT
1
00:00:00.005 --> 00:00:01.008
- In our previous video,

2
00:00:01.008 --> 00:00:04.005
we added methods inside the generic class.

3
00:00:04.005 --> 00:00:06.006
Let's also do one more bit of this demo

4
00:00:06.006 --> 00:00:10.005
where we add a method outside the generic class box.

5
00:00:10.005 --> 00:00:12.002
So I have the steps to mention on this slide

6
00:00:12.002 --> 00:00:14.000
let's execute them, one by one.

7
00:00:14.000 --> 00:00:18.001
Let's first add a utility class called BoxUtils.

8
00:00:18.001 --> 00:00:20.002
So let's head back to the IDE

9
00:00:20.002 --> 00:00:23.008
and on the same package, I will create a class.

10
00:00:23.008 --> 00:00:28.000
Let's call it BoxUtils.

11
00:00:28.000 --> 00:00:30.005
The next step will be add a generic method

12
00:00:30.005 --> 00:00:32.005
getCountOfItems.

13
00:00:32.005 --> 00:00:34.009
So the method that I'm going to add in the utility class

14
00:00:34.009 --> 00:00:37.007
is to get a count of items from any box

15
00:00:37.007 --> 00:00:40.000
that we want to measure the count on.

16
00:00:40.000 --> 00:00:44.008
So let's go back to the IDE and here let's add a method,

17
00:00:44.008 --> 00:00:48.006
public and they should return int.

18
00:00:48.006 --> 00:00:53.002
Let's name the method getCountOfItems

19
00:00:53.002 --> 00:00:56.008
and they should have some parameter and then the definition.

20
00:00:56.008 --> 00:00:58.006
So now let's try to understand this.

21
00:00:58.006 --> 00:01:02.001
We are trying to get the count of items from the box.

22
00:01:02.001 --> 00:01:06.005
So this method should be able to access the type parameter

23
00:01:06.005 --> 00:01:10.007
of the box generic type, which in our case is T.

24
00:01:10.007 --> 00:01:12.008
Now in order that the method is able

25
00:01:12.008 --> 00:01:14.009
to access that type parameter,

26
00:01:14.009 --> 00:01:18.001
you will have to explicitly define that type parameter

27
00:01:18.001 --> 00:01:19.007
on the method level.

28
00:01:19.007 --> 00:01:21.001
Why is that so?

29
00:01:21.001 --> 00:01:24.004
Because we are in a utility class of BoxUtils

30
00:01:24.004 --> 00:01:27.000
and BoxUtils does not have the type parameter T

31
00:01:27.000 --> 00:01:28.008
mentioned on the class level.

32
00:01:28.008 --> 00:01:31.005
So now, the first thing that we have to do is,

33
00:01:31.005 --> 00:01:34.008
we have to mention this generics type parameter

34
00:01:34.008 --> 00:01:37.005
on the method level like that.

35
00:01:37.005 --> 00:01:41.002
The moment you have T then getCountOfItems knows

36
00:01:41.002 --> 00:01:44.004
or is aware that there is a type parameter T

37
00:01:44.004 --> 00:01:46.001
that it is going to access.

38
00:01:46.001 --> 00:01:50.000
Only then you will be able to define a parameter

39
00:01:50.000 --> 00:01:56.005
to this method which is of the box T like that.

40
00:01:56.005 --> 00:01:58.000
And then what we have to do is,

41
00:01:58.000 --> 00:01:59.008
we just have to return the count.

42
00:01:59.008 --> 00:02:08.001
So that'll be return box.getItems.size. That is all.

43
00:02:08.001 --> 00:02:10.002
So this is how you write a generic matter

44
00:02:10.002 --> 00:02:12.002
outside the generic class.

45
00:02:12.002 --> 00:02:15.008
Unless and until you specify this generic declaration

46
00:02:15.008 --> 00:02:19.003
on the method level, your get count of items method

47
00:02:19.003 --> 00:02:22.002
will not be able to access the type parameter.

48
00:02:22.002 --> 00:02:24.000
And this is merely done

49
00:02:24.000 --> 00:02:27.003
because you are inside the generic class now.

50
00:02:27.003 --> 00:02:28.004
You're outside.

51
00:02:28.004 --> 00:02:29.009
So when you're outside the class

52
00:02:29.009 --> 00:02:32.004
you'll have to define this explicitly.

53
00:02:32.004 --> 00:02:35.004
Once you do this, only then you'll be able to define

54
00:02:35.004 --> 00:02:38.007
any parameters with respect to that generic type.

55
00:02:38.007 --> 00:02:42.000
Please also note, that this T in angle brackets

56
00:02:42.000 --> 00:02:44.006
that we mentioned, is not the return type.

57
00:02:44.006 --> 00:02:47.001
The return type of this method is int.

58
00:02:47.001 --> 00:02:50.003
It's account that we are returning from this method.

59
00:02:50.003 --> 00:02:53.002
Now, the third step is to test this program

60
00:02:53.002 --> 00:02:55.007
for the getCountOfItems method.

61
00:02:55.007 --> 00:03:00.001
So let's go ahead to our test box generics class again

62
00:03:00.001 --> 00:03:05.004
and let's come down and say, System out

63
00:03:05.004 --> 00:03:11.000
let's put a string, Book count, simple

64
00:03:11.000 --> 00:03:16.000
and let's call the BoxUtils class.

65
00:03:16.000 --> 00:03:16.008
And if you see,

66
00:03:16.008 --> 00:03:19.003
you'll still are not able to see the method

67
00:03:19.003 --> 00:03:21.002
that is because I'm trying to access the method

68
00:03:21.002 --> 00:03:22.003
on the class level.

69
00:03:22.003 --> 00:03:24.008
So we have forgotten to do one thing, that is,

70
00:03:24.008 --> 00:03:28.009
we need to declare this method static.

71
00:03:28.009 --> 00:03:30.003
Now let's go back to the test class,

72
00:03:30.003 --> 00:03:32.006
and now we should be able to access

73
00:03:32.006 --> 00:03:34.002
the getCountOfItems method.

74
00:03:34.002 --> 00:03:37.005
And to this I'm going to now pass bookBox.

75
00:03:37.005 --> 00:03:39.005
So the box of T in this invocation

76
00:03:39.005 --> 00:03:42.009
is going to be the box of book that we created

77
00:03:42.009 --> 00:03:44.008
on line number 5.

78
00:03:44.008 --> 00:03:47.004
Similarly, I can come down

79
00:03:47.004 --> 00:03:51.002
and I can print the count of the fruitBox as well.

80
00:03:51.002 --> 00:04:00.005
So I'll say Fruit count and call the same BoxUtils method

81
00:04:00.005 --> 00:04:03.006
and this time, the box of T parameter that I'm going to pass

82
00:04:03.006 --> 00:04:08.000
is going to be the fruitBox, which is this.

83
00:04:08.000 --> 00:04:08.008
So we are good.

84
00:04:08.008 --> 00:04:10.000
Now let's go ahead and run this

85
00:04:10.000 --> 00:04:14.009
and look at the output on the console.

86
00:04:14.009 --> 00:04:15.009
There we go.

87
00:04:15.009 --> 00:04:19.000
You have the Book count 2 and you have the Fruit count 2.

88
00:04:19.000 --> 00:04:22.002
So that's how you add a method outside a generic class.

89
00:04:22.002 --> 00:04:24.003
Now just one small point here,

90
00:04:24.003 --> 00:04:28.007
I wanted to show a demo where I would be able to teach you

91
00:04:28.007 --> 00:04:32.002
how to add a method outside the generic class.

92
00:04:32.002 --> 00:04:35.003
GetCountOfItems method could have easily gone

93
00:04:35.003 --> 00:04:38.000
inside the box generic type itself.

