WEBVTT
1
00:00:00.360 --> 00:00:06.570
Now that we're tracking when users join and leave we can use that data to send their messages to just

2
00:00:06.570 --> 00:00:08.500
the room they're currently in.

3
00:00:08.820 --> 00:00:12.050
Now getting that done is something you already know how to do.

4
00:00:12.060 --> 00:00:16.080
So it's going to be your challenge for the video right here.

5
00:00:16.080 --> 00:00:22.650
Let's go ahead and outline what I'd like you to do what I'm gonna do is paste in the challenge comments.

6
00:00:22.650 --> 00:00:24.210
And here is what you're going to do.

7
00:00:24.210 --> 00:00:30.000
You're going to make sure that messages get sent to the correct room and you're going to start with

8
00:00:30.000 --> 00:00:31.470
the send message.

9
00:00:31.470 --> 00:00:33.500
Event listener right here.

10
00:00:33.600 --> 00:00:41.040
So inside of here you need to use get user to fetch the user by their socket I.D..

11
00:00:41.340 --> 00:00:47.940
That's going to give you access to user data such as the room they're in and their user name.

12
00:00:47.940 --> 00:00:52.300
From there you're only going to emit the message to the correct room.

13
00:00:52.500 --> 00:00:58.380
So you want to make sure that if they're in the South Philly room these South Philly room gets the messages

14
00:00:58.410 --> 00:00:59.400
they're sending.

15
00:00:59.610 --> 00:01:01.610
And then you're going to test your work.

16
00:01:01.680 --> 00:01:08.730
So join in the same room with two users you should see each other's messages then have them join separate

17
00:01:08.730 --> 00:01:13.370
rooms and you should not see the messages from each user.

18
00:01:13.380 --> 00:01:19.500
Now once you've done that you'll do the exact same thing for these send a location event listener down

19
00:01:19.500 --> 00:01:20.480
below.

20
00:01:20.490 --> 00:01:27.180
So all you're going to do is edit these two functions using the techniques described up above to get

21
00:01:27.180 --> 00:01:29.330
the messages sent to the correct room.

22
00:01:29.340 --> 00:01:31.420
Take some time to knock that out.

23
00:01:31.590 --> 00:01:39.010
And when you're done come back and click play.

24
00:01:39.010 --> 00:01:40.420
All right let's get to it.

25
00:01:40.420 --> 00:01:44.560
Step number one is to use get user to fetch that user data.

26
00:01:44.590 --> 00:01:50.800
So right here const user equals I'll be calling get user providing their I.D..

27
00:01:50.800 --> 00:01:57.700
That is socket dot I.D. then we can use that data when sending our messages off.

28
00:01:57.700 --> 00:02:00.200
So down below what are we going to do right here.

29
00:02:00.240 --> 00:02:08.830
Oh we're going to do is use I O dot to we're going to provide the users room that is user dot room and

30
00:02:08.830 --> 00:02:12.570
then we're going to emit the message to it and that's it.

31
00:02:12.640 --> 00:02:14.190
That's all we needed to do.

32
00:02:14.260 --> 00:02:18.420
But when we weren't tracking the user that just wasn't possible.

33
00:02:18.460 --> 00:02:23.200
Now down below in send location we can do the same thing before testing our work.

34
00:02:23.230 --> 00:02:31.270
So right here once again const user equals using get user and providing their socket I.D. and then down

35
00:02:31.270 --> 00:02:38.980
below we need to chain on the two method call that is Io dot to calling that as a function followed

36
00:02:39.010 --> 00:02:40.500
by dot emit.

37
00:02:40.750 --> 00:02:44.400
And right here that would be user dot room.

38
00:02:44.530 --> 00:02:45.670
Perfect.

39
00:02:45.670 --> 00:02:50.910
So now that we have this in place we can actually go ahead and test things out for both.

40
00:02:51.430 --> 00:02:56.020
Now over in the browser after saving our files we can test things out.

41
00:02:56.020 --> 00:02:58.180
So I'm going to refresh both windows.

42
00:02:58.180 --> 00:03:01.250
And right now we have both Andrew and D.

43
00:03:01.270 --> 00:03:03.960
In that J.S. chat room right here.

44
00:03:03.960 --> 00:03:08.050
I'm gonna send a message and I should see it for both and I do.

45
00:03:08.050 --> 00:03:13.390
Then I'll have the other users send their location and that should show up for both as well once the

46
00:03:13.390 --> 00:03:16.050
location is fetched and it is showing up.

47
00:03:16.060 --> 00:03:17.470
So great start.

48
00:03:17.860 --> 00:03:23.410
Now let's get one of the users out of that J.S. chat room and into a different room.

49
00:03:23.460 --> 00:03:26.800
So over here I'll go over to local host three thousand.

50
00:03:26.950 --> 00:03:33.420
I'm notified that Andy left and I'll have Andy join a different room like H T and L right here.

51
00:03:33.430 --> 00:03:37.320
I'm gonna join and I can see that I'm not notified of him joining.

52
00:03:37.320 --> 00:03:44.920
And if he sends a message like hey that message is only gonna show up for other users in the room right

53
00:03:44.920 --> 00:03:47.920
here the same is true with location messages.

54
00:03:47.920 --> 00:03:54.040
This user is communicating and this user is not seeing it because they're in separate rooms.

55
00:03:54.110 --> 00:03:59.770
And now that we're tracking users it's possible to send messages to just those rooms using the little

56
00:03:59.770 --> 00:04:02.150
bit of code we added here.

57
00:04:02.170 --> 00:04:07.540
So at this in place we're all done with the challenge and we're going to go ahead and remove those challenge

58
00:04:07.540 --> 00:04:08.650
comments.

59
00:04:08.650 --> 00:04:10.820
Now we're not quite done for the video.

60
00:04:10.840 --> 00:04:14.450
There are still a few things I want to knock out before we move on.

61
00:04:14.470 --> 00:04:20.830
One of the most important missing features is that the user name doesn't show up along side of the message

62
00:04:20.860 --> 00:04:22.030
in the chat app.

63
00:04:22.030 --> 00:04:27.980
Right now we have a space for it in the user interface but it's not actually being populated.

64
00:04:28.060 --> 00:04:34.480
And the reasoning for that is that the data is never sent to the client when we emit message or location

65
00:04:34.480 --> 00:04:35.410
message.

66
00:04:35.410 --> 00:04:39.260
We are not providing the name that we want to show.

67
00:04:39.280 --> 00:04:41.050
So we're going to fix that.

68
00:04:41.050 --> 00:04:46.690
We're going to start together with generate location message then it'll be your challenge to do something

69
00:04:46.690 --> 00:04:50.420
similar for regular text messages.

70
00:04:50.440 --> 00:04:56.620
So the goal here is to make sure that the object that gets sent back to the client contains all of the

71
00:04:56.620 --> 00:04:58.480
information it needs.

72
00:04:58.480 --> 00:05:03.100
Now in messages dot Jay asks for generate location message.

73
00:05:03.100 --> 00:05:10.060
This takes in the EU RL and it sends back an object with the U.R.L. and created app.

74
00:05:10.090 --> 00:05:15.550
We're also going to have it take in the user name and send that back as well.

75
00:05:15.550 --> 00:05:21.460
And I'm actually going to make that the first argument so right here the first argument will be the

76
00:05:21.460 --> 00:05:28.180
user name and the second argument will be the U.R.L. and then on the object that I end up sending from

77
00:05:28.180 --> 00:05:35.700
server to client I'm just going to include that user name alongside of the other pieces of data.

78
00:05:35.710 --> 00:05:42.190
So now we do need to change how we're calling generate location message since the first argument should

79
00:05:42.190 --> 00:05:43.570
be the user's name.

80
00:05:43.990 --> 00:05:50.650
So right here we have the U.R.L. as the current only argument being provided we want to provide user

81
00:05:50.710 --> 00:05:53.930
dot user name as the first one.

82
00:05:53.980 --> 00:05:55.140
Perfect.

83
00:05:55.150 --> 00:06:00.870
So now at this point at least the necessary data is finding its way to the client.

84
00:06:00.940 --> 00:06:04.340
It's now the client's job to actually use it.

85
00:06:04.350 --> 00:06:12.720
So over here in chat dot J.S. our client side JavaScript file we have our event listeners up above I

86
00:06:12.720 --> 00:06:16.390
have the event listener for message and location message.

87
00:06:16.530 --> 00:06:22.290
In this case we're working with the location message now one of the problems here is that the template

88
00:06:22.320 --> 00:06:24.380
doesn't get access to this new data.

89
00:06:24.660 --> 00:06:30.020
So we want to supply that on the object just like we're supplying the you are all.

90
00:06:30.260 --> 00:06:33.120
So right here let's go ahead and get that done.

91
00:06:33.180 --> 00:06:38.760
That would be user name getting the value from message dot user name.

92
00:06:38.910 --> 00:06:39.990
Perfect.

93
00:06:39.990 --> 00:06:46.590
Now with this in place the template should be getting the correct data and we can use it inside of chat

94
00:06:46.650 --> 00:06:48.450
down HMO.

95
00:06:48.450 --> 00:06:51.990
So right here we're working with this location message.

96
00:06:51.990 --> 00:06:54.660
And this is where we have the static name.

97
00:06:55.020 --> 00:06:59.440
I'm going to remove that open and close to curly braces.

98
00:06:59.520 --> 00:07:02.100
Then user name right inside.

99
00:07:02.520 --> 00:07:08.000
So at this point we're sending the data from server to client and the client is using it.

100
00:07:08.130 --> 00:07:14.550
Now when I refresh the browser and send a location message I would expect that the actual user name

101
00:07:14.580 --> 00:07:16.170
shows up alongside of it.

102
00:07:16.650 --> 00:07:19.160
So right here I click send location.

103
00:07:19.230 --> 00:07:22.280
It still takes a couple of seconds to actually get that data.

104
00:07:22.320 --> 00:07:23.250
That's fine.

105
00:07:23.340 --> 00:07:29.250
And right here I do see Andrew alongside of the message which is fantastic.

106
00:07:29.250 --> 00:07:36.000
Now that user name is being transferred along with the U R L and timestamp all three are then showing

107
00:07:36.000 --> 00:07:38.210
it to the user in the browser.

108
00:07:38.220 --> 00:07:43.880
Now it's time to get the exact same thing done for our regular text based messages.

109
00:07:43.920 --> 00:07:47.310
And since you already know the necessary steps to do it.

110
00:07:47.340 --> 00:07:50.040
Doing it is going to be your challenge.

111
00:07:50.040 --> 00:07:53.540
So what I'm going to do is add that somewhere in index Dot.

112
00:07:53.590 --> 00:07:57.570
J.S. I'll just put these comments up top end out of the way.

113
00:07:57.720 --> 00:07:58.500
So right here.

114
00:07:58.500 --> 00:08:02.640
Goal render user name for our standard text messages.

115
00:08:02.640 --> 00:08:07.120
Right now we're only rendering it for those location messages.

116
00:08:07.200 --> 00:08:12.600
Step one you're going to set up the server to send the user name to the client.

117
00:08:12.600 --> 00:08:19.170
This means you need to edit the function generate message to accept the user name and to include it

118
00:08:19.440 --> 00:08:21.540
along with this object.

119
00:08:21.540 --> 00:08:28.950
And once you have that in place you need to edit every single call to generate message in this file

120
00:08:29.370 --> 00:08:35.890
you need to add the user name just like we did for our 1 call to generate location message.

121
00:08:35.910 --> 00:08:42.420
Now when it's not coming from a user but it's coming from the system you can use the user name admin.

122
00:08:42.420 --> 00:08:47.810
This would be useful for things like a connect and welcome and disconnect.

123
00:08:47.820 --> 00:08:51.720
This should be asked why ask for a system message.

124
00:08:51.720 --> 00:08:58.770
So you either use the user name or for these specific ones you can just use something generic like admin.

125
00:08:58.770 --> 00:09:04.020
Now once you have all of those calls updated the client needs to actually do something with the new

126
00:09:04.020 --> 00:09:05.370
data it gets.

127
00:09:05.430 --> 00:09:08.990
You want to make sure the user name is rendered in the template.

128
00:09:09.120 --> 00:09:11.130
Then you're going to test your work.

129
00:09:11.130 --> 00:09:16.710
If you do what we just did here I would expect to see admin for the welcome message.

130
00:09:16.710 --> 00:09:22.260
And if I typed a standard message and sent it I would expect to see my name right here.

131
00:09:22.710 --> 00:09:26.790
So take some time to knock that out when you're done come back and click play

132
00:09:31.320 --> 00:09:32.100
how that go.

133
00:09:32.100 --> 00:09:35.820
Let's get to it by editing the Generate message function.

134
00:09:35.850 --> 00:09:41.700
So this is going to accept a user name and I'm going to add that as the first argument though technically

135
00:09:41.700 --> 00:09:47.550
you could have put it as the second one and then down below we'll just go ahead and toss that on the

136
00:09:47.550 --> 00:09:51.050
object that we send back from server to client.

137
00:09:51.090 --> 00:09:57.420
Now with this in place we just need to make sure that we actually provide the user name for every single

138
00:09:57.420 --> 00:10:00.170
call to generate message.

139
00:10:00.180 --> 00:10:04.830
So right here we have our first calls inside of on join.

140
00:10:05.130 --> 00:10:12.300
I send a system message welcome and another system message saying that a given user has joined for both

141
00:10:12.300 --> 00:10:12.750
of these.

142
00:10:12.750 --> 00:10:18.030
What I'm going to do is provide admin as that first argument that is the user name.

143
00:10:18.030 --> 00:10:25.460
I'd like to use perfect these our system messages and we'll stick with a static user name for that next

144
00:10:25.460 --> 00:10:26.300
up down the list.

145
00:10:26.310 --> 00:10:28.380
Where else do we generate a message.

146
00:10:28.380 --> 00:10:32.670
Well right here we do that when sending text based messages.

147
00:10:32.670 --> 00:10:37.080
Now in this case this is coming from a user and we want their name to show up.

148
00:10:37.080 --> 00:10:44.160
So that would be user dot user name as the first argument with their message as the second.

149
00:10:44.220 --> 00:10:48.480
Next up generate message is also used in on disconnect.

150
00:10:48.480 --> 00:10:54.990
So right here when they leave we send a system message and for this we're going to set the user name

151
00:10:55.080 --> 00:11:01.980
equal to admit now that we have all of this in place the server is sending the correct data to the client

152
00:11:02.010 --> 00:11:04.880
the client just needs to actually use it.

153
00:11:04.890 --> 00:11:12.510
So let's go ahead and knock that out in chat dot J s up above this is where we now have access to message

154
00:11:12.510 --> 00:11:14.300
dot user name.

155
00:11:14.400 --> 00:11:16.800
I'm going to provide that to my template

156
00:11:20.070 --> 00:11:24.650
and once it's provided to the Template I'll save the file and change the template.

157
00:11:24.660 --> 00:11:32.070
Up above I have my standard message template and all I'm gonna do is remove some user name and replace

158
00:11:32.070 --> 00:11:39.330
it with two opening and two closing curly braces inside putting the value for user name.

159
00:11:39.330 --> 00:11:47.130
Now with all of this in place we finished off steps 1 2 and 3 the data gets sent from server to client

160
00:11:47.190 --> 00:11:49.200
and the client uses it.

161
00:11:49.200 --> 00:11:51.780
Last up is to test our work.

162
00:11:51.780 --> 00:11:57.390
What I'm going to do is remove those challenge comments and make sure my entire program is saved and

163
00:11:57.390 --> 00:12:01.410
we're gonna head over to the browser and give things a refresh.

164
00:12:01.500 --> 00:12:04.730
Right here I see admin which is a great first start.

165
00:12:04.920 --> 00:12:10.740
I can send a location message which should already be working and I would expect to see Andrew then

166
00:12:10.740 --> 00:12:16.160
I could send a text message like hey hit enter.

167
00:12:16.360 --> 00:12:17.530
And what do I see.

168
00:12:17.530 --> 00:12:19.990
I can see the name showing up.

169
00:12:19.990 --> 00:12:21.250
So there we go.

170
00:12:21.250 --> 00:12:26.950
Now users names are showing up alongside of their messages to wrap up this video.

171
00:12:26.980 --> 00:12:31.720
Let's go ahead and make a couple of small changes to our message input down below.

172
00:12:31.720 --> 00:12:37.000
It doesn't really make sense to use autocomplete here since we're not going to be using the same value

173
00:12:37.000 --> 00:12:38.820
over and over again.

174
00:12:38.920 --> 00:12:45.210
And we're also going to add that required attribute on to ensure that it's provided by the client.

175
00:12:45.400 --> 00:12:52.930
So in index dot H2 UML what we're gonna do wops excuse me it's in chat dot HDL what we're going to do

176
00:12:52.930 --> 00:12:56.820
is make a couple of small changes to our input right here.

177
00:12:56.920 --> 00:13:04.420
Now the one attribute we've already used that was required we used that inside of index dot HDL for

178
00:13:04.420 --> 00:13:07.000
the user name and the room name.

179
00:13:07.000 --> 00:13:10.420
So this is going to make sure that we at least get some value.

180
00:13:10.480 --> 00:13:17.590
The other one we're going to use is not something we've used before that is auto complete and we're

181
00:13:17.590 --> 00:13:20.440
setting that equal to the string off.

182
00:13:20.440 --> 00:13:26.170
This is going to turn off the auto complete functionality which we don't want now you don't always want

183
00:13:26.170 --> 00:13:31.990
to turn that off but for this particular input it does make sense to for something like an email or

184
00:13:31.990 --> 00:13:37.750
a name you should allow them to use the autocomplete feature as they're likely using values they've

185
00:13:37.750 --> 00:13:40.180
used before for other Web sites.

186
00:13:40.210 --> 00:13:46.570
Right here we refresh the browser once again down below I click send and I can see that I get my little

187
00:13:46.570 --> 00:13:52.840
warning so I type a message in and I can see that I'm not getting any sort of auto complete functionality

188
00:13:52.840 --> 00:13:58.710
like I was getting when I typed in H before I was seeing Hey with an exclamation mark.

189
00:13:58.810 --> 00:14:01.340
Now I'm not getting any of that which is great.

190
00:14:01.390 --> 00:14:04.480
This is a much nicer cleaner interface.

191
00:14:04.480 --> 00:14:07.720
So with this in place that's where we're gonna stop for now.

192
00:14:07.720 --> 00:14:14.170
Users are getting the user name of the sender showing up what we're going to focus on from here is that

193
00:14:14.170 --> 00:14:15.390
sidebar.

194
00:14:15.430 --> 00:14:21.010
So in the sidebar we're going to put the name of the room you are currently in and we're going to keep

195
00:14:21.010 --> 00:14:25.380
a live list of all of the active users just down below that.

196
00:14:25.540 --> 00:14:26.920
I'm excited to get to that.

197
00:14:26.950 --> 00:14:29.200
So let's jump right in to the next one.
