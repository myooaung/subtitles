WEBVTT
1
00:00:00.450 --> 00:00:05.790
In this lesson as promised we'll be populating the sidebar of the chat application.

2
00:00:05.790 --> 00:00:12.060
Up top we're gonna show the name of the room the current user is in and we're also going to show a list

3
00:00:12.060 --> 00:00:18.000
of all of the users in that room and that list will automatically update as users come and go.

4
00:00:18.000 --> 00:00:22.160
Now we've already done all of the heavy lifting in order to get this done.

5
00:00:22.170 --> 00:00:29.580
We're already tracking when users come and go and inside of users dot J S we already created a function

6
00:00:29.640 --> 00:00:33.930
that allows us to fetch a list of users by the room name.

7
00:00:34.290 --> 00:00:42.060
So all we really need to do is emit a new event from the server to the client when the room list changes.

8
00:00:42.060 --> 00:00:43.520
When's that going to happen.

9
00:00:43.530 --> 00:00:49.920
It's going to happen when someone joins and down below what's going to happen when someone leaves.

10
00:00:49.920 --> 00:00:52.920
So let's go ahead and actually knock that out.

11
00:00:53.010 --> 00:00:54.870
We're gonna start right here.

12
00:00:54.870 --> 00:00:56.670
So we welcome the user.

13
00:00:56.700 --> 00:01:00.450
We then send a message saying the new user has joined.

14
00:01:00.780 --> 00:01:08.340
Then we're going to use I O dot to to send something to everyone in that room including the new user

15
00:01:08.460 --> 00:01:09.630
right here.

16
00:01:09.630 --> 00:01:15.620
I O dot to user dot room and we are going to emit a new event.

17
00:01:15.630 --> 00:01:18.240
Now we could call this whatever we want to.

18
00:01:18.270 --> 00:01:20.960
I'm going to call it something like Room data.

19
00:01:21.030 --> 00:01:24.620
We're going to send two pieces of data in an object.

20
00:01:24.690 --> 00:01:30.540
We are going to send a list of all of the users and we're going to send the room name.

21
00:01:30.540 --> 00:01:38.870
So right here let's do that room is going to come from user dot room then down below.

22
00:01:38.870 --> 00:01:49.170
I could call users the property and the value comes from get users in room and we are going to provide

23
00:01:49.200 --> 00:01:50.400
the room name.

24
00:01:50.490 --> 00:01:53.370
So once again user dot room.

25
00:01:53.880 --> 00:02:00.000
So this is going to make sure that the client gets all of the necessary data and we're going to do something

26
00:02:00.000 --> 00:02:01.350
similar down below.

27
00:02:01.350 --> 00:02:03.120
When someone leaves.

28
00:02:03.120 --> 00:02:06.660
So right here we're only ever adding users down below.

29
00:02:06.660 --> 00:02:09.890
Let's go ahead and do just the opposite.

30
00:02:09.900 --> 00:02:16.200
So when someone disconnects and they were actually part of a room we will send that message saying that

31
00:02:16.200 --> 00:02:24.180
the user has left and will also use I O dot to to send something else to that room emitting once again

32
00:02:24.480 --> 00:02:29.450
our room data event and providing the same set of data.

33
00:02:29.490 --> 00:02:38.400
So we have the room user room and we have that users property which comes from get users in room providing

34
00:02:38.400 --> 00:02:39.790
the room name.

35
00:02:39.990 --> 00:02:41.040
Perfect.

36
00:02:41.040 --> 00:02:47.520
So now when users come and go the client is getting notified allowing it to keep an active list of those

37
00:02:47.520 --> 00:02:48.630
names.

38
00:02:48.630 --> 00:02:52.770
Let's go ahead and actually update things on the client for the moment.

39
00:02:53.040 --> 00:02:59.040
Oh we're going to do is listen for this event and log it to the console once we're sure we have the

40
00:02:59.040 --> 00:03:00.190
correct data.

41
00:03:00.240 --> 00:03:02.810
We'll focus on rendering it to the screen.

42
00:03:02.940 --> 00:03:11.190
So inside of chat dot J S we have on message on location message and just below that I'll be adding

43
00:03:11.250 --> 00:03:21.600
the new call to socket dot on in this case it is on the room data event and we are going to get access

44
00:03:21.660 --> 00:03:29.010
to that data right here I could destructor it getting the room name and the user's list and then down

45
00:03:29.010 --> 00:03:29.610
below.

46
00:03:29.610 --> 00:03:39.570
All I'm going to do is log that data out so console log room followed by console dot log users.

47
00:03:39.570 --> 00:03:45.020
Now let's go ahead and test this out in its current state to make sure we're at least getting the data.

48
00:03:45.210 --> 00:03:49.860
I'm gonna save all of my files and head over to the browser in the browser.

49
00:03:49.860 --> 00:03:56.040
What I'm going to do is open up the console for both of these browser windows using the keyboard shortcut

50
00:03:56.040 --> 00:03:57.030
for my o s.

51
00:03:57.060 --> 00:04:00.840
Once again you can find that alongside of the menu option.

52
00:04:00.840 --> 00:04:02.930
It's sitting right here for me.

53
00:04:03.060 --> 00:04:06.370
And then what we're going to do is refresh both tabs.

54
00:04:06.450 --> 00:04:08.580
So right here we are getting the new data.

55
00:04:08.580 --> 00:04:09.540
And what do we have.

56
00:04:09.540 --> 00:04:12.730
Well first up we have our welcome message which is great.

57
00:04:12.750 --> 00:04:14.840
Then we have the name of the room.

58
00:04:14.850 --> 00:04:18.840
This one being J S and this one being H2 UML.

59
00:04:18.900 --> 00:04:25.080
Then we have our array of users which in this case just contains one user for each.

60
00:04:25.080 --> 00:04:30.340
Let's go ahead and have the second browser window join that J asked room as well.

61
00:04:30.420 --> 00:04:33.130
So I'm going to leave the room I was in.

62
00:04:33.240 --> 00:04:36.130
Go back to local host three thousand.

63
00:04:36.210 --> 00:04:37.350
I'll pick a new name.

64
00:04:37.380 --> 00:04:42.040
I'll go ahead and use Jess and I'll have Jess join the J.S. room.

65
00:04:42.150 --> 00:04:48.840
Now I would expect to see my little notification saying that Jess has joined and I'm also seeing updated

66
00:04:48.870 --> 00:04:49.800
data.

67
00:04:49.800 --> 00:04:56.210
Now I have an array of two users and I would be able to use this data to re render the sidebar.

68
00:04:56.520 --> 00:04:58.980
So let's go ahead and actually get that done.

69
00:04:58.980 --> 00:05:06.760
It's a two step process step one create the template step to render the template over in chat dot H2

70
00:05:06.800 --> 00:05:09.750
you now let's go ahead and knock that template out.

71
00:05:09.870 --> 00:05:15.810
So we have our main content then we have the message template followed by the location template down

72
00:05:15.810 --> 00:05:16.230
below.

73
00:05:16.230 --> 00:05:18.570
We're gonna go ahead and add a new one.

74
00:05:18.630 --> 00:05:20.760
So we set up our script tag.

75
00:05:20.760 --> 00:05:29.190
We set up our I.D. I could call this one something like side bar template and I'll also set the type

76
00:05:29.280 --> 00:05:36.390
equal to text forward slash HDMI well then inside of here we'll work on creating that structure and

77
00:05:36.390 --> 00:05:43.350
we're gonna start off with the room name right here that's gonna go in an H header tag and all we're

78
00:05:43.350 --> 00:05:50.370
going to do is provide it like so and we'll pass this data in when we actually render the template shortly.

79
00:05:50.520 --> 00:05:54.840
I'm also going to setup a class for this one to style it right here.

80
00:05:54.840 --> 00:06:03.690
The class is room hyphen title down below that we'll go ahead and use an h three to render some static

81
00:06:03.690 --> 00:06:10.730
text to the screen right here I'm going to render users sense we'll have the users list down below.

82
00:06:10.900 --> 00:06:13.800
And there's a class for this one as well.

83
00:06:13.800 --> 00:06:16.890
The class for this one is list title.

84
00:06:17.190 --> 00:06:21.270
Then after that we actually provide the list.

85
00:06:21.330 --> 00:06:28.540
This is going to be in a U L element which stands for unordered list right here.

86
00:06:28.590 --> 00:06:33.410
We are going to expand that since we'll be adding a bit of content inside of there.

87
00:06:33.510 --> 00:06:36.640
And we're also going to set up a class.

88
00:06:36.630 --> 00:06:42.780
The class being users now in this case what we want to do is look at an array.

89
00:06:42.780 --> 00:06:44.310
We have an array of objects.

90
00:06:44.310 --> 00:06:51.650
And for each object we want to render the user name property to the HDMI all output to get that done.

91
00:06:51.650 --> 00:06:53.660
We use the following syntax.

92
00:06:53.850 --> 00:06:59.840
What we do is we start with two opening curly braces followed by two closing curly braces.

93
00:06:59.880 --> 00:07:05.270
Then it's the hash sign or pound symbol followed by the name of that array.

94
00:07:05.280 --> 00:07:09.870
So in this case the name of the array is going to end up being users.

95
00:07:09.870 --> 00:07:16.650
Then we go ahead and close this off with the same thing though it is forward slash users.

96
00:07:16.650 --> 00:07:22.860
So this is the syntax for opening for the array and closing everything inside is going to happen for

97
00:07:22.860 --> 00:07:24.730
each element in that array.

98
00:07:24.870 --> 00:07:29.250
And we have access to the data for that object.

99
00:07:29.250 --> 00:07:32.820
So in this case we have an array of objects with those properties.

100
00:07:32.820 --> 00:07:36.990
In this case all we want to do is use the User Name property.

101
00:07:36.990 --> 00:07:43.380
So right here we're going to create a list item using a line and we're going to put that user name right

102
00:07:43.380 --> 00:07:44.010
inside.

103
00:07:44.040 --> 00:07:46.100
There's nothing more to it.

104
00:07:46.170 --> 00:07:52.190
Now if we wanted to show other things for each user we could add those inside of here as well alongside

105
00:07:52.200 --> 00:07:53.360
of our list item.

106
00:07:53.550 --> 00:07:57.700
But in this case it's the only piece of information we need to render.

107
00:07:57.780 --> 00:08:04.650
So we have the sidebar template we need to select it and render it in chat dot HDMI all up top.

108
00:08:04.650 --> 00:08:06.820
We have our templates list.

109
00:08:06.990 --> 00:08:11.390
I'll create a new constant for this one sidebar template.

110
00:08:11.730 --> 00:08:18.210
And once again we're going to select it using document dot query selector grabbing it by its I.D..

111
00:08:18.600 --> 00:08:27.850
And I just call that the sidebar template from there grabbing its HDL using inner HDMI.

112
00:08:28.260 --> 00:08:32.190
Now we can actually render it down below in the new event listener.

113
00:08:32.190 --> 00:08:41.370
We set up right here I can remove those console log calls and start by generating my compiled HDL using

114
00:08:41.370 --> 00:08:45.150
mustache dot render like we've done before.

115
00:08:45.270 --> 00:08:51.240
In this case we're rendering these sidebar template and we're rendering it with the following data we

116
00:08:51.240 --> 00:08:55.070
have our room and we have our users.

117
00:08:55.290 --> 00:09:00.600
Now from here we have the H2 UML and we can actually put it into the document where we want to show

118
00:09:00.600 --> 00:09:03.450
it in our case we've created a place for this.

119
00:09:03.720 --> 00:09:09.730
If you remember up top our main content has this sidebar right here.

120
00:09:09.750 --> 00:09:17.890
Oh we're going to do is give this an I.D. so we can target it I can give it an I.D. of sidebar and now

121
00:09:17.890 --> 00:09:21.380
we're gonna put the HDMI all right inside of there.

122
00:09:21.430 --> 00:09:29.860
So inside of chat dot J S we will select that element document dot query selector selecting it by its

123
00:09:29.950 --> 00:09:40.780
I.D. sidebar and rendering inside of it the H2 UML so dot inner H2 UML is going to equal the H to UML

124
00:09:40.840 --> 00:09:42.850
we can piled up above.

125
00:09:43.030 --> 00:09:47.410
Now with this in place we should be able to see these sidebar content.

126
00:09:47.560 --> 00:09:53.680
What I'm going to do is head over to the browser making sure every single file is saved and I'll go

127
00:09:53.680 --> 00:09:57.250
ahead and refresh a couple of these right here.

128
00:09:57.250 --> 00:10:02.980
Now I can see unclothed section users is showing up and that is for my mustache template.

129
00:10:03.100 --> 00:10:08.290
So let's take a quick look at that over inside of chat dot H2 UML.

130
00:10:08.320 --> 00:10:13.140
I see that I opened users right here and I closed it down below.

131
00:10:13.300 --> 00:10:18.610
The actual problem is that I forgot to provide that second closing curly brace.

132
00:10:18.730 --> 00:10:21.690
So mistakes do happen and they're perfectly normal.

133
00:10:21.730 --> 00:10:25.510
Right here we're just going to save our changes and try again.

134
00:10:25.510 --> 00:10:29.830
So from the browser I'll go ahead and refresh both pages again.

135
00:10:29.830 --> 00:10:33.130
And right here we can see we have our data showing up.

136
00:10:33.250 --> 00:10:35.400
I have the chat room name for each.

137
00:10:35.410 --> 00:10:36.760
And then down below that.

138
00:10:36.820 --> 00:10:37.960
What do I have.

139
00:10:37.960 --> 00:10:43.020
I have the list of active users now in this case it's Andrew and Jess.

140
00:10:43.030 --> 00:10:45.280
But what happens if Jess leaves.

141
00:10:45.460 --> 00:10:50.830
I'll go ahead and create a new tab to keep this window open when I close this tab.

142
00:10:50.860 --> 00:10:52.090
I disconnect.

143
00:10:52.090 --> 00:10:59.700
I see that Jess is gone from the side bar and I also have my message saying Jess has left.

144
00:10:59.710 --> 00:11:05.560
So when we're tracking the users throughout their use of the chat app it makes it really easy to work

145
00:11:05.560 --> 00:11:08.700
with that data with just a few lines of code.

146
00:11:08.740 --> 00:11:15.400
We were able to get the list of users in a particular room back to the client so the client could render

147
00:11:15.400 --> 00:11:16.130
them.

148
00:11:16.180 --> 00:11:18.730
That's where we're going to stop for this one.

149
00:11:18.730 --> 00:11:25.290
There are still a few more things that we want to knock out for the chat application in the next lesson.

150
00:11:25.300 --> 00:11:28.050
Well we're going to focus on is auto scrolling.

151
00:11:28.180 --> 00:11:33.890
So as we add more messages than what can fit on the screen the behavior gets a little nasty.

152
00:11:33.910 --> 00:11:35.710
We're going to address that soon.

153
00:11:35.770 --> 00:11:37.020
So let's jump right in.
