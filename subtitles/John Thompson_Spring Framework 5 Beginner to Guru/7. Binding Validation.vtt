WEBVTT
0
1
00:00:00.404 --> 00:00:02.987
(upbeat music)
1

2
00:00:05.257 --> 00:00:08.867
Alright, we got a little bug to correct here,
2

3
00:00:08.867 --> 00:00:12.002
and this is actually an unexpected feature,
3

4
00:00:12.002 --> 00:00:14.417
and I think it's just because, at the time of recording,
4

5
00:00:14.417 --> 00:00:17.703
I'm still running off of a pre-release,
5

6
00:00:17.703 --> 00:00:20.953
and we have not gone G.A. with Spring Framework 5 just yet
6

7
00:00:20.953 --> 00:00:23.624
and I wanna take this as a learning opportunity
7

8
00:00:23.624 --> 00:00:25.412
to show you some advanced features.
8

9
00:00:25.412 --> 00:00:28.361
Now, here on line 52 we are doing a validate,
9

10
00:00:28.361 --> 00:00:32.232
or valid, @Valid, against the RecipeCommand object.
10

11
00:00:32.232 --> 00:00:33.934
And we're passing in the BindingResult.
11

12
00:00:33.934 --> 00:00:36.930
Now, I would personally expect this to work the same,
12

13
00:00:36.930 --> 00:00:38.497
whether we're on the reactive stack or
13

14
00:00:38.497 --> 00:00:40.611
in the traditional Servlet stack.
14

15
00:00:40.611 --> 00:00:44.802
However, it is not, and this could easily change
15

16
00:00:44.802 --> 00:00:49.132
in the very near future as Spring matures the platform
16

17
00:00:49.132 --> 00:00:52.174
of the reactive applications, but for right now
17

18
00:00:52.174 --> 00:00:55.576
this is failing, so let me show you what's happening here.
18

19
00:00:55.576 --> 00:00:58.374
Let's go into the update and toggle over to Chrome.
19

20
00:00:58.374 --> 00:01:01.474
We're gonna go in and try to update this.
20

21
00:01:01.474 --> 00:01:03.273
And now we get a 500 error,
21

22
00:01:03.273 --> 00:01:06.524
so we have something unhappy on the server side.
22

23
00:01:06.524 --> 00:01:10.691
So let's come over here and expand out this window here.
23

24
00:01:11.818 --> 00:01:14.163
And we're seeing that, that's failing to resolve
24

25
00:01:14.163 --> 00:01:17.136
the argument of BindingResult,
25

26
00:01:17.136 --> 00:01:19.887
so what's trying to happen is that the framework's
26

27
00:01:19.887 --> 00:01:21.930
trying to autowire that in for the method
27

28
00:01:21.930 --> 00:01:24.067
and it's not finding that BindingResult
28

29
00:01:24.067 --> 00:01:25.216
for whatever reason.
29

30
00:01:25.216 --> 00:01:27.759
So I would expect this is probably gonna change,
30

31
00:01:27.759 --> 00:01:29.424
but I'm gonna show you a workaround here,
31

32
00:01:29.424 --> 00:01:31.096
and it's pretty simple to implement
32

33
00:01:31.096 --> 00:01:34.351
so let me shrink this back down.
33

34
00:01:34.351 --> 00:01:38.235
And we can stop this guy from running for right now,
34

35
00:01:38.235 --> 00:01:39.175
and what we wanna do is
35

36
00:01:39.175 --> 00:01:42.175
get a handle on the WebDataBinder.
36

37
00:01:45.839 --> 00:01:47.650
So we're gonna add in a method like that,
37

38
00:01:47.650 --> 00:01:49.817
and then we can do public,
38

39
00:01:55.350 --> 00:01:57.937
and this is a way to get a handle on the binding framework
39

40
00:01:57.937 --> 00:02:00.445
within Spring Framework,
40

41
00:02:00.445 --> 00:02:02.945
and we give it the annotation,
41

42
00:02:04.625 --> 00:02:07.016
and before when we were using this
42

43
00:02:07.016 --> 00:02:10.151
it was fairly transparent for us,
43

44
00:02:10.151 --> 00:02:13.151
and now we just wanna go this dot,
44

45
00:02:15.457 --> 00:02:18.951
so initialize that, and what I found is not working
45

46
00:02:18.951 --> 00:02:22.655
is that the @Valid annotation is not happy,
46

47
00:02:22.655 --> 00:02:24.013
nor is the BindingResult,
47

48
00:02:24.013 --> 00:02:26.440
so we're gonna get rid of both of those,
48

49
00:02:26.440 --> 00:02:29.273
but ... oops, spell that right ...
49

50
00:02:30.352 --> 00:02:31.602
Now we can say,
50

51
00:02:35.085 --> 00:02:39.252
we're gonna go ahead and validate the binding and then
51

52
00:02:42.353 --> 00:02:44.199
so we're just kind of doing a manual workaround there
52

53
00:02:44.199 --> 00:02:46.161
so we're getting a handle on the WebDataBinder
53

54
00:02:46.161 --> 00:02:48.750
and this is going to contain binding information
54

55
00:02:48.750 --> 00:02:50.422
of what was bound in this call.
55

56
00:02:50.422 --> 00:02:53.092
So we're gonna go ahead and call the validate method
56

57
00:02:53.092 --> 00:02:54.323
and that's gonna tell it to say,
57

58
00:02:54.323 --> 00:02:56.622
"Hey, go ahead and perform validation on it."
58

59
00:02:56.622 --> 00:02:58.456
This method here really exists so that we can
59

60
00:02:58.456 --> 00:03:00.105
customize validation pretty easily.
60

61
00:03:00.105 --> 00:03:02.160
I didn't show you that earlier within Spring,
61

62
00:03:02.160 --> 00:03:05.411
obviously, that's kind of a not very commonly used function
62

63
00:03:05.411 --> 00:03:07.535
but this does give us the capability to get
63

64
00:03:07.535 --> 00:03:09.799
a hold of the WebDataBinder,
64

65
00:03:09.799 --> 00:03:10.740
and now we're gonna take
65

66
00:03:10.740 --> 00:03:12.597
that BindingResult manually from it,
66

67
00:03:12.597 --> 00:03:14.633
and everything else is gonna stay the same now
67

68
00:03:14.633 --> 00:03:17.721
so let's go ahead and start that back up.
68

69
00:03:17.721 --> 00:03:20.721
Oops, what am I missing there, oops.
69

70
00:03:21.982 --> 00:03:24.328
An extra @ sign, so I bet
70

71
00:03:24.328 --> 00:03:27.328
it's gonna work a lot better now.
71

72
00:03:28.809 --> 00:03:32.976
So we are up and running, let's toggle back over to Chrome,
72

73
00:03:34.092 --> 00:03:36.274
and now let's go in and update this,
73

74
00:03:36.274 --> 00:03:37.830
and if you remember I have bad data here
74

75
00:03:37.830 --> 00:03:41.394
so all I gotta do is hit update, or Submit,
75

76
00:03:41.394 --> 00:03:44.146
and now we get our error handling invoked again,
76

77
00:03:44.146 --> 00:03:46.526
so the error handling is working properly,
77

78
00:03:46.526 --> 00:03:49.773
so we did the binding, we did go through and validate
78

79
00:03:49.773 --> 00:03:52.611
our data validation and got our error messages,
79

80
00:03:52.611 --> 00:03:55.164
so, a little bit of workaround and I do wanna stress,
80

81
00:03:55.164 --> 00:03:56.472
this is probably gonna change.
81

82
00:03:56.472 --> 00:03:59.502
I think it's likely a bug within the Spring Framework
82

83
00:03:59.502 --> 00:04:02.417
right now and as the reactive stuff matures
83

84
00:04:02.417 --> 00:04:03.810
I think this is gonna change,
84

85
00:04:03.810 --> 00:04:06.933
but I wanted to show you a quick learning opportunity
85

86
00:04:06.933 --> 00:04:10.578
so that we can get a handle on the WebDataBinder
86

87
00:04:10.578 --> 00:04:12.018
and now we're manually doing it,
87

88
00:04:12.018 --> 00:04:14.514
so in the old days this is really how you did
88

89
00:04:14.514 --> 00:04:16.221
validation with the Spring Framework,
89

90
00:04:16.221 --> 00:04:18.044
so this is pretty common stuff here
90

91
00:04:18.044 --> 00:04:20.911
for guys that have been using Spring for a long time
91

92
00:04:20.911 --> 00:04:22.885
but with the reactive stuff right now it's
92

93
00:04:22.885 --> 00:04:25.393
kind of a workaround, so I'm kind of glad I ran into that,
93

94
00:04:25.393 --> 00:04:26.670
it was an opportunity to show you something
94

95
00:04:26.670 --> 00:04:30.837
a little bit different within the Spring Framework.
