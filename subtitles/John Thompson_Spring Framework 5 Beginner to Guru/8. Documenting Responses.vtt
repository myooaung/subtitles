WEBVTT
1
00:00:02.920 --> 00:00:07.160
In this video I mean I go through and show you how to document the response object.

2
00:00:07.220 --> 00:00:11.290
So on our get I.D. method rearrange this a little bit.

3
00:00:12.080 --> 00:00:18.440
So on the Get Behar I.D. We're documenting the path and the requests parameters and what we want to

4
00:00:18.440 --> 00:00:24.950
do is change this so we can also add in the what we're responding with.

5
00:00:24.950 --> 00:00:31.910
So that is going to be response fields and there's another static import that we need to bring in

6
00:00:35.390 --> 00:00:39.470
and of course we describe the fields with with path.

7
00:00:39.500 --> 00:00:45.050
But this time we are going to do field with path and here we can say I.D.

8
00:00:49.050 --> 00:00:51.500
So that's going to document one feel that's coming back.

9
00:00:51.510 --> 00:00:53.460
So let's go ahead and run this

10
00:00:57.560 --> 00:01:03.890
what's going to happen is we're getting an error now and it's complaining that there's a number of things

11
00:01:03.890 --> 00:01:08.900
that are not documents so I can tell you that these properties that these are coming back but they're

12
00:01:08.900 --> 00:01:12.080
not getting documented by the documentation.

13
00:01:12.080 --> 00:01:18.320
So it's kind of a nice feature with rust docs where you do have to document all the properties so if

14
00:01:18.320 --> 00:01:24.140
you add a property to your API at some point and you forget to document it your test will fail.

15
00:01:24.170 --> 00:01:26.870
So kind of a nice feature like that.

16
00:01:26.870 --> 00:01:29.930
So these are about six or seven properties.

17
00:01:29.930 --> 00:01:35.510
So what I'm going to do right now is I'm going to pause the video and then document these and then we'll

18
00:01:35.510 --> 00:01:40.000
resume and do a quick code review of what what's going on here.

19
00:01:40.190 --> 00:01:45.230
So what I've done is a positive video and I came back and during pause I went through and documented

20
00:01:45.230 --> 00:01:51.220
the remaining field so you can see that from sixty six to is about 73.

21
00:01:51.320 --> 00:01:55.410
I've added a number of different properties to match what's coming back from the API.

22
00:01:55.430 --> 00:02:01.910
So let's go ahead and run this again and make sure that I have everything documented and you see that

23
00:02:01.910 --> 00:02:05.090
the test is now passing which is exactly what we want.

24
00:02:05.120 --> 00:02:10.350
So you can see here is that I am sitting up trying to format this properly.

25
00:02:10.520 --> 00:02:16.340
One of my biggest complaints about spring run stocks as you can see here that we're getting a lot of

26
00:02:16.460 --> 00:02:21.260
documentation and mixed many of our tests which is as good things and bad things.

27
00:02:21.260 --> 00:02:26.540
This is very easy and make a syntax error in mistakes and sat there scratching my head trying to get

28
00:02:26.540 --> 00:02:31.880
this just right so it can be a little tricky to work with especially when you're first starting out

29
00:02:31.880 --> 00:02:32.210
with it.

30
00:02:32.540 --> 00:02:38.530
So definitely pay attention to how your formatting your code can help you get things properly.

31
00:02:38.530 --> 00:02:46.670
So just to recap now we're passing in this document method and we are giving it an identifier for the

32
00:02:47.000 --> 00:02:51.880
API endpoint and now we have path Browder's request parameters.

33
00:02:52.010 --> 00:02:57.830
And then the response fields of what we're expecting to get back from the API call and we haven't looked

34
00:02:57.830 --> 00:03:00.280
at the documentation that's going to get generated from this yet.

35
00:03:00.290 --> 00:03:05.000
We're going to go through and complete the documentation and then we'll start looking at the snippets

36
00:03:05.390 --> 00:03:08.900
and how that gets generated and everything all gets brought together.
