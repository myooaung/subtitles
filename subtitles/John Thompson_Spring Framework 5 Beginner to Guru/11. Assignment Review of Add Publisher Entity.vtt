WEBVTT
0
1
00:00:04.460 --> 00:00:08.760
Alright we're going to go ahead and
take care of our coding assignment, the
1

2
00:00:08.760 --> 00:00:13.049
first thing was to create a Publisher
entity so I'm going to go over to the
2

3
00:00:13.049 --> 00:00:25.260
model and create a new class called
Publisher. We'll go ahead and add that in
3

4
00:00:25.260 --> 00:00:32.369
to git, as usual I'll put that in github
for us and we wanted a couple properties
4

5
00:00:32.369 --> 00:00:41.100
here so string name and I'm not going to
do all the address properties, just
5

6
00:00:41.100 --> 00:00:46.620
wanted to add those in so I'll save a
little bit time typing here and the
6

7
00:00:46.620 --> 00:00:52.140
first thing we need to do is make this
an entity. Again using the Javax.persistence
7

8
00:00:52.140 --> 00:00:58.070
and I am going to steal some
time here and just cut and paste
8

9
00:00:58.070 --> 00:01:05.610
remember do not do that at home. I'm showing
you my bad habits, so now I have the
9

10
00:01:05.610 --> 00:01:10.950
properties and what we want to do is add
in a getter and setter I'm using
10

11
00:01:10.950 --> 00:01:16.290
IntelliJ, use the command to do that and I'm gonna
highlight all those, hit Enter so that it
11

12
00:01:16.290 --> 00:01:20.549
puts in my getters and setters for all
the properties so now I have a basic
12

13
00:01:20.549 --> 00:01:27.960
entity defined as Publisher and next we
needed to modify the Book class so come
13

14
00:01:27.960 --> 00:01:40.290
in here, see if we can refactor that. Go
ahead and refactor so I'm going to tell
14

15
00:01:40.290 --> 00:01:43.530
it to go ahead and ignore that so it was giving me a warning
15

16
00:01:43.530 --> 00:01:48.630
about the DEV bootstrap class and we'll
get to that in a second and we need to
16

17
00:01:48.630 --> 00:01:53.630
create a Repository so I'm going to go
and do that
17

18
00:01:56.710 --> 00:02:05.230
that's going to be an interface, extend
out the CRUD repository and we want to
18

19
00:02:05.230 --> 00:02:17.560
say just Publisher and Long for the key
so that's all we need to do to keep
19

20
00:02:17.560 --> 00:02:29.620
Spring Data happy and next we need to
come in and add it here and I'm gonna
20

21
00:02:29.620 --> 00:02:34.180
update the constructor so we definitely
need to do that for Springs Autowire to
21

22
00:02:34.180 --> 00:02:46.140
work and now we need to update the data
as well so I'm going to come in here.
22

23
00:02:54.350 --> 00:02:59.780
Okay so a couple minor things that we
need to change here,
23

24
00:03:07.300 --> 00:03:11.790
so it changed the constructor, the
constructor on Book got updated and
24

25
00:03:11.790 --> 00:03:16.050
before we do that we want to save it too.
25

26
00:03:16.620 --> 00:03:20.800
Now if you're doing this for the
assignment you might want to create two
26

27
00:03:20.800 --> 00:03:24.310
different publishers here I'm just
creating one for to expedite things
27

28
00:03:24.310 --> 00:03:29.230
through this example so just to recap
what's going on here in the Bootstrap
28

29
00:03:29.230 --> 00:03:34.750
Class is I've added in the PublisherRepository I modified the constructor
29

30
00:03:34.750 --> 00:03:39.640
and Spring is gonna autowire in an
instance of that for us at run time and
30

31
00:03:39.640 --> 00:03:46.120
then on line 36 I created a new
Publisher, set the name property and
31

32
00:03:46.120 --> 00:03:50.320
then I save it and then in the
constructor of the two Book objects I
32

33
00:03:50.320 --> 00:03:54.400
passed in that Publisher object and that
should run normally so let's go ahead
33

34
00:03:54.400 --> 00:03:59.310
and I forgot one thing I just realized.
34

35
00:03:59.880 --> 00:04:11.110
So we changed that and I've got to add in
this entity one-to-one almost forgot. So
35

36
00:04:11.110 --> 00:04:15.180
let's go ahead and start up Spring Boot.
36

37
00:04:21.659 --> 00:04:27.490
Spring Boot started normally and I'm
going to toggle over to chrome where I
37

38
00:04:27.490 --> 00:04:34.539
have the h2 console and I'm going to
need to refresh those and I'm going to
38

39
00:04:34.539 --> 00:04:40.979
Connect and you can see that I have a
new entity created so let's go ahead and
39

40
00:04:40.979 --> 00:04:48.430
inspect that so I have a null address
but my foo value is there so we can see
40

41
00:04:48.430 --> 00:04:54.060
that did get created normally, we can see
that Publisher is there and if we inspect
41

42
00:04:54.060 --> 00:04:59.020
Book, now we have a PUBLISHER_ID. So
hibernate was smart enough to create
42

43
00:04:59.020 --> 00:05:02.319
everything like that at it and PUBLISHER_ID which is going to give us the
43

44
00:05:02.319 --> 00:05:06.689
relationship to the PUBLISHER table.
