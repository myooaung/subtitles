WEBVTT
0
1
00:00:04.279 --> 00:00:09.179
All right since I started recording this
course, a new version of Circle CI has
1

2
00:00:09.179 --> 00:00:15.210
come out, and setting up this project
here for the MySQL version of the
2

3
00:00:15.210 --> 00:00:20.970
recipe application. I want to continue
using Circle CI so we have our test
3

4
00:00:20.970 --> 00:00:25.470
running, and we get continuous
integration bills cooking. And now
4

5
00:00:25.470 --> 00:00:30.210
they made a couple of changes, actually a
lot of nice changes between 1.0 and 2.0.
5

6
00:00:30.210 --> 00:00:36.540
But the most notable now is they want
you to have a configure YAML file in a
6

7
00:00:36.540 --> 00:00:41.010
hidden directory called .circleci. So
when you start a directory with dot,
7

8
00:00:41.010 --> 00:00:45.840
it is typically a hidden directory. In
case you didn't know that about Linux
8

9
00:00:45.840 --> 00:00:51.239
and UNIX operating systems. So you do
have several different things here. It's
9

10
00:00:51.239 --> 00:00:55.949
pretty easy to set up. So if we had a
Gradle project we could easily change it
10

11
00:00:55.949 --> 00:01:02.129
but we do have a Maven project right now
and so we can see that we have this
11

12
00:01:02.129 --> 00:01:06.720
configuration file it is YAML and 
it's pretty straightforward. You look at
12

13
00:01:06.720 --> 00:01:12.360
the steps here. It does a check out. It
restores a cache of dependencies and
13

14
00:01:12.360 --> 00:01:17.939
then it runs Maven dependencies off the
line and saves it so and then also last
14

15
00:01:17.939 --> 00:01:22.140
up of course is to run the Maven
integration test face which will include
15

16
00:01:22.140 --> 00:01:26.759
our unit tests. So we'll get a full
test and obviously this is something
16

17
00:01:26.759 --> 00:01:30.840
that we could customize. Our project is
pretty simple, so I don't see a need to
17

18
00:01:30.840 --> 00:01:35.130
customize it right now. But what I've
done here is I've got that file now
18

19
00:01:35.130 --> 00:01:41.220
copied over into our project. So I set up
the .circleci directory and here's
19

20
00:01:41.220 --> 00:01:45.840
our config.yml. I'm going to go ahead
and commit this now. I am on the
20

21
00:01:45.840 --> 00:01:50.670
branch master. So I'm going to merge this
into the other branches as we go forward.
21

22
00:01:50.670 --> 00:01:59.040
So let's go ahead and actually I can do
it from right here. I'm going to go
22

23
00:01:59.040 --> 00:02:02.479
ahead and commit and push that.
23

24
00:02:02.829 --> 00:02:07.810
Push that up there and we see that
we're almost done there alright.
24

25
00:02:07.810 --> 00:02:13.180
We're successful now. Let's jump over here and
now I'm just going to click on start
25

26
00:02:13.180 --> 00:02:19.720
building. And this is going to tell Circle
CI to go and initialize builds and start
26

27
00:02:19.720 --> 00:02:26.019
watching that directory. So now if I come
back over here to projects, for some
27

28
00:02:26.019 --> 00:02:31.239
reason that project it's not there yet.
Let's see if there's build. That is not
28

29
00:02:31.239 --> 00:02:38.500
there, so let's go through this one more
time, spring my recipe with some reason
29

30
00:02:38.500 --> 00:02:44.380
that it's not there and click on start
building again. There we go. We didn't see
30

31
00:02:44.380 --> 00:02:48.549
that before. So now this is going to go out
and build I'm going to pause this so we
31

32
00:02:48.549 --> 00:02:52.000
don't have to wait for everything to
cook through but we can see that a
32

33
00:02:52.000 --> 00:02:57.190
Circle CI build is kicking off, and it
does take a few minutes to build. But for
33

34
00:02:57.190 --> 00:03:01.329
a free CI build server, I don't think we
have a lot to complain about as far as
34

35
00:03:01.329 --> 00:03:04.030
performance go. So I'm going to pause
this video and then we'll take a look at
35

36
00:03:04.030 --> 00:03:10.959
the result of the build. Okay I've uh
resumed this recording here and we can see
36

37
00:03:10.959 --> 00:03:16.660
that I now have a successful build. So it
went through pretty quick. Yeah ,we do
37

38
00:03:16.660 --> 00:03:20.139
have some things in the queue there, so
it's probably other branches. But you can
38

39
00:03:20.139 --> 00:03:24.519
see we have spin up environment, check
out code, restoring cache, and if you look
39

40
00:03:24.519 --> 00:03:29.980
at these steps here, and jump over to
IntelliJ, they oddly look a lot like the
40

41
00:03:29.980 --> 00:03:35.920
steps here in the YAML configuration.
So this is a obviously I'm not touching
41

42
00:03:35.920 --> 00:03:40.269
on a lot of the capabilities the Circle
CI. We do have a pretty simple
42

43
00:03:40.269 --> 00:03:44.889
project here so not a lot of
complexity, but Java projects with Maven
43

44
00:03:44.889 --> 00:03:48.940
are pretty vanilla sometimes, and
that's definitely what we have here. But
44

45
00:03:48.940 --> 00:03:54.459
now going forward, every check-in on
every branch in this repository is going
45

46
00:03:54.459 --> 00:03:58.630
to get built automatically by Circle CI.
So if you're not using Circle CI for
46

47
00:03:58.630 --> 00:04:02.859
your projects, I highly recommend it. It
is a best practice and the best part
47

48
00:04:02.859 --> 00:04:07.359
about Circle CI, it's completely free for
you, so you have nothing to lose from
48

49
00:04:07.359 --> 00:04:12.299
using Circle CI in your own personal
builds.
