WEBVTT
0
1
00:00:04.220 --> 00:00:08.790
Alright, we're going to go through and
complete the assignment and the
1

2
00:00:08.790 --> 00:00:13.740
assignment was to refactor the project
to leverage project Lombok. And the
2

3
00:00:13.740 --> 00:00:16.260
reason we want to do this is we want to
start getting rid of that boilerplate
3

4
00:00:16.260 --> 00:00:19.590
code that we need to write and use
Lombok. And we're going to be using
4

5
00:00:19.590 --> 00:00:26.039
Lombok going forward in the course. Okay
the first class that I have up is our
5

6
00:00:26.039 --> 00:00:32.579
bootstrap class and I am going to use
the logger on it. So we want to use
6

7
00:00:32.579 --> 00:00:38.309
Slf4j and bringing in the Lombok
annotation there, and this is going to
7

8
00:00:38.309 --> 00:00:43.739
inject a logger and just as a reminder, Slf4j is the logging facade. That is
8

9
00:00:43.739 --> 00:00:48.629
going to give us access to the default
Spring Boot logger which is the Logback.
9

10
00:00:48.629 --> 00:00:52.590
And going forward in the course we will
show you how to do more configuration on
10

11
00:00:52.590 --> 00:01:00.870
the logger. I'm just going to say loading
bootstrap data. So we have a nice simple
11

12
00:01:00.870 --> 00:01:06.240
log statement there. We want to do
the same thing on our controller. So come
12

13
00:01:06.240 --> 00:01:13.490
in and bring in that same annotation.
13

14
00:01:13.670 --> 00:01:19.710
I'll say getting index page here. So I
can see how simple that was. Next let's
14

15
00:01:19.710 --> 00:01:24.689
take a look at Category. We already
factored that one. Difficulties in
15

16
00:01:24.689 --> 00:01:30.869
enumeration, nothing to do there. Ingredient, so let's come in here and add
16

17
00:01:30.869 --> 00:01:40.979
in @Data and now we can get rid of all
this ceremonial boilerplate code. Double
17

18
00:01:40.979 --> 00:01:48.869
checking that we didn't modify any of that. So I'm going to go ahead and delete that and that looks
18

19
00:01:48.869 --> 00:01:54.090
good to me. Come into notes and we can do the same
19

20
00:01:54.090 --> 00:01:56.869
thing to notes.
20

21
00:01:57.990 --> 00:02:01.820
And then we can get rid of some of this
ceremonial code here.
21

22
00:02:01.820 --> 00:02:07.830
Just double-checking we didn't modify
anything in that. You can see how
22

23
00:02:07.830 --> 00:02:13.800
quickly we are eliminating stuff here. So
we already annotated the
23

24
00:02:13.800 --> 00:02:20.670
Recipe class with the @Data
annotation and then here, this is a nice
24

25
00:02:20.670 --> 00:02:27.239
candidate. We can come in
and say refactor, and I'm going to come
25

26
00:02:27.239 --> 00:02:34.140
down to Lombok and say default @Data
and boom, we took care of that. Let's
26

27
00:02:34.140 --> 00:02:43.050
clean up that space and that is it. The
repositories are just interfaces and we
27

28
00:02:43.050 --> 00:02:48.930
already did that and then that leaves
our Spring Boot application class. We
28

29
00:02:48.930 --> 00:02:54.180
could in theory put a lock around that
but I don't see a real need to. And that
29

30
00:02:54.180 --> 00:02:58.950
that completes the refactoring with the
class. So now our code is going to be a
30

31
00:02:58.950 --> 00:03:04.320
lot cleaner. I had to change five classes there and make sure that
31

32
00:03:04.320 --> 00:03:08.790
this is working for you. Make sure that
your IDE is working properly because what
32

33
00:03:08.790 --> 00:03:14.100
you will see if it is not, when you start
going in to access the getters and
33

34
00:03:14.100 --> 00:03:19.019
setters, your ]IDE will think that
they're not there because they're not in
34

35
00:03:19.019 --> 00:03:22.530
the source code and that's where the IDE
is building its index of your code base.
35

36
00:03:22.530 --> 00:03:28.890
The plugins for your IDE are going to
be providing you that. So if you do see a
36

37
00:03:28.890 --> 00:03:33.570
problem there where your IDE is not
finding the getters and setters, you have
37

38
00:03:33.570 --> 00:03:37.049
a problem with the plugin for the IDE. Don't use Eclipse but if it's
38

39
00:03:37.049 --> 00:03:41.489
intelliJ, if you do encounter
something that's not working, try first
39

40
00:03:41.489 --> 00:03:45.239
restarting it. If that does not take care
of it, and this is assuming that you have
40

41
00:03:45.239 --> 00:03:50.459
the plugin installed, come up here and
this is an important tip for IntelliJ.
41

42
00:03:50.459 --> 00:03:55.350
Just doing invalidate caches and restart. IntelliJ is pretty pretty good but every
42

43
00:03:55.350 --> 00:04:00.510
now and then I need to do this and that
will like rebuild IntelliJ's indexes of
43

44
00:04:00.510 --> 00:04:04.829
the projects. A quick tip there in
IntelliJ. I don't see it that often but if
44

45
00:04:04.829 --> 00:04:08.430
something weird starts to happen that is
like the first thing I do. I go in and
45

46
00:04:08.430 --> 00:04:13.030
invalidate the caches, restart it and see
if that clears up the problem. If something
46

47
00:04:13.030 --> 00:04:17.830
weird and unexpected is happening that
is the normally solution for it then you can
47

48
00:04:17.830 --> 00:04:20.550
move along.
