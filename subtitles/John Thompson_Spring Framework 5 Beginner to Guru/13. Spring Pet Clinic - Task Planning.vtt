WEBVTT
0
1
00:00:03.770 --> 00:00:08.130
In this video, I want to do some task
planning for lessons coming ahead
1

2
00:00:08.130 --> 00:00:12.840
related to the Spring Pet Clinic.
Right now, kind of what I want to do is
2

3
00:00:12.840 --> 00:00:17.190
talk about Agile Development and what
you will do. This course is not on
3

4
00:00:17.190 --> 00:00:20.699
Agile Development, let me pretext it with
that but I want to start passing along
4

5
00:00:20.699 --> 00:00:25.410
some concepts around that. Our tasks
there, kind of, is our like our backlog.
5

6
00:00:25.410 --> 00:00:29.580
In a typical Agile Development
Methodology, if we had a group of
6

7
00:00:29.580 --> 00:00:33.090
developers on this, we would take our tasks
into a backlog and put them into a
7

8
00:00:33.090 --> 00:00:37.350
sprint and execute it from there. But
we're not doing a full agile here. By any
8

9
00:00:37.350 --> 00:00:41.010
means, I'm trying to show you best
practices. But I am a kind of a solo
9

10
00:00:41.010 --> 00:00:45.690
artist here developing this up, doing
sprints and what not like that. It's
10

11
00:00:45.690 --> 00:00:50.399
not going to be very conducive to what
we're doing. But I think having a test
11

12
00:00:50.399 --> 00:00:54.300
backlog is a good habit for us to plan
out. Get some visibility of what's going
12

13
00:00:54.300 --> 00:00:58.289
on. I've been working through the tasks.
I've added a couple tasks, and right now,
13

14
00:00:58.289 --> 00:01:02.219
I'm looking at the task queue and I want
to make some changes as to how we're
14

15
00:01:02.219 --> 00:01:05.939
going to be handling the workflow for
upcoming lessons. So what I want to do
15

16
00:01:05.939 --> 00:01:10.049
right now is this one here, the Create Pet
Clinic Controllers, I thought that was a
16

17
00:01:10.049 --> 00:01:15.229
little too broad and I am going to edit
that
17

18
00:01:15.390 --> 00:01:20.270
and I'm going to say Create...
18

19
00:01:21.350 --> 00:01:27.969
Create Vet Index page and controller. I'm
going to change that task and save that.
19

20
00:01:27.969 --> 00:01:32.400
Let's come back
here to the issues and now I want to
20

21
00:01:32.400 --> 00:01:44.210
create a New Issue for Create Owner
index page and controller. That's
21

22
00:01:44.210 --> 00:01:47.800
going to be another task that will take
on. Let's go back to our
22

23
00:01:48.480 --> 00:01:53.880
issues. We talked about 
implementing these equal methods.
23

24
00:01:53.880 --> 00:02:02.170
On this one here, I'm going to say Hold this
task - for Project Lombok.
24

25
00:02:02.170 --> 00:02:06.130
On a a better issue tracker like Jira, we
could actually put it on a hold status
25

26
00:02:06.130 --> 00:02:10.119
and get better visibility. I'm just
doing that in a comment here. Project
26

27
00:02:10.119 --> 00:02:14.319
Lombok, we're going to get into that in a
few chapters beyond this one but it has
27

28
00:02:14.319 --> 00:02:17.680
some really cool tools for us to
implement an equals method so take
28

29
00:02:17.680 --> 00:02:21.940
a close look at implementing that equals
method using project Lombok. I'm just
29

30
00:02:21.940 --> 00:02:24.930
going to put a placeholder in there so I
don't forget to do that.
30

31
00:02:24.930 --> 00:02:31.170
Come back over here to the Isues.
Let's create a New Issue. I'm going to
31

32
00:02:33.459 --> 00:02:38.480
say create our Load Bootstrap
Data on Startup. What this means
32

33
00:02:38.480 --> 00:02:42.980
is that we're going to populate our data
upon starting up the Spring Boot application.
33

34
00:02:42.980 --> 00:02:46.760
We'll have a hook in there
so when Spring comes up, it's going to
34

35
00:02:46.760 --> 00:02:51.860
create data. This is a pretty common
thing. I actually first saw it from the
35

36
00:02:51.860 --> 00:02:56.300
Grails guys doing it. They call it
bootstrap. This is old. I don't know
36

37
00:02:56.300 --> 00:03:00.590
if its specific to US or not, but there's
a saying in the US to pull yourself up
37

38
00:03:00.590 --> 00:03:04.340
by your bootstraps and that's where
booting a computer comes from.
38

39
00:03:04.340 --> 00:03:08.060
That means to start up bootstraps and
pulling yourself up by your bootstraps.
39

40
00:03:08.060 --> 00:03:11.210
Sometimes you like do it in the morning
to get up. We're going to
40

41
00:03:11.210 --> 00:03:16.130
bootstrap data up on startup so it means
populating our tables with that. I
41

42
00:03:16.130 --> 00:03:20.960
will show you that in an upcoming lesson
for sure and then what we want to do is
42

43
00:03:20.960 --> 00:03:23.680
add in. We are going to List all Vets
43

44
00:03:26.120 --> 00:03:32.330
on the Vet index pages.
In doing this, what we need to do is
44

45
00:03:32.330 --> 00:03:37.220
set up the plumbing to take the list of
Vets out of the database or our Map
45

46
00:03:37.220 --> 00:03:41.720
implementation and provide them to
Thymeleaf and configure Thymeleaf to go
46

47
00:03:41.720 --> 00:03:47.530
ahead and give us that information on
the web page. We're going to create a
47

48
00:03:47.530 --> 00:03:51.129
another one here.
48

49
00:03:55.000 --> 00:03:58.780
We're going to List all Owners on the
Index Page, similar to the Vets, but this
49

50
00:03:58.780 --> 00:04:02.080
time for Owner. So another a little bit
of work that we need to do. This is
50

51
00:04:02.080 --> 00:04:06.910
going to give us a very bland site so
what we want to do is start implementing
51

52
00:04:06.910 --> 00:04:12.730
some things here. We'll say
Copy all for
52

53
00:04:15.520 --> 00:04:20.440
Static Resources from Spring Pet Clinic.
The Pet Clinic project will bring
53

54
00:04:20.440 --> 00:04:23.940
over the static resources. We'll just bring 
over the images,
54

55
00:04:27.200 --> 00:04:30.210
js, css,
anything that they have or their
55

56
00:04:30.210 --> 00:04:35.120
static resources. We're going to
bring that over into this project. That's the
56

57
00:04:35.790 --> 00:04:39.660
official Spring Pet Clinic. You can see
there, I actually have a tab open for it.
57

58
00:04:39.660 --> 00:04:43.527
We'll be copying over those. Let's
create another issue.
58

59
00:04:43.527 --> 00:04:45.530
I'm going to copy over to the
59

60
00:04:49.900 --> 00:04:55.919
Master Template from Spring Pet Clinic.
We'll add that as a task.
60

61
00:04:55.919 --> 00:05:00.300
There's that actually. You have the
page and then there's a template to
61

62
00:05:00.300 --> 00:05:05.370
apply all the styling and menus and
footers and stuff to every page so that
62

63
00:05:05.370 --> 00:05:11.389
task is going to be to bring that into
our project. And then what we want to do
63

64
00:05:11.389 --> 00:05:16.249
is apply that template.
64

65
00:05:16.840 --> 00:05:20.590
Actually, a better word is layout.
65

66
00:05:20.620 --> 00:05:26.550
This is apply the master layout to
index page. I'm going to submit that.
66

67
00:05:31.870 --> 00:05:39.389
Apply the master layout to the Owners
List Page. We also want to do that.
67

68
00:05:39.610 --> 00:05:41.669
We'll apply that Master Layout
68

69
00:05:42.870 --> 00:05:47.180
to the Vet list page as well.
69

70
00:05:49.110 --> 00:05:53.520
Let's come back here and look at the
issues, we got lucky 13 number of issues
70

71
00:05:53.520 --> 00:05:57.690
so now we have a number of tasks in our
queue and we'll be taking with us out of
71

72
00:05:57.690 --> 00:06:03.470
our work queue as we progress developing
lessons for Spring Pet Clinic.
