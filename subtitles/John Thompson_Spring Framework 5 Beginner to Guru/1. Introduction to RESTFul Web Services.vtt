WEBVTT
0
1
00:00:09.469 --> 00:00:12.840
Okay, we've got a really exciting section
of the course right now. We're gonna
1

2
00:00:12.840 --> 00:00:17.070
start talking about RESTful Web Services.
Now back in the day, when I was
2

3
00:00:17.070 --> 00:00:22.500
starting as a developer, really the de facto standard at that time was SOAP and
3

4
00:00:22.500 --> 00:00:26.340
then this guy Richardson comes out with
this book. And we're looking at some of
4

5
00:00:26.340 --> 00:00:30.750
the big cloud computing giants like the
Amazon's of the day, and what they were
5

6
00:00:30.750 --> 00:00:34.590
doing and he started spouting patterns
of how they're implementing these simple
6

7
00:00:34.590 --> 00:00:39.090
RESTful service calls. And actually, I
don't think REST was even a term back
7

8
00:00:39.090 --> 00:00:43.770
then. But he's looking at these API's and
how they were doing them. It was
8

9
00:00:43.770 --> 00:00:48.870
kind of a paradigm shift in the industry
because we had these SOAP API calls, SOAP
9

10
00:00:48.870 --> 00:00:54.210
Web Services. Effectively, SOAP is a
remote procedure call. So you had an
10

11
00:00:54.210 --> 00:00:58.980
endpoint and you're calling a method and
passing an XML body to it. So that
11

12
00:00:58.980 --> 00:01:04.739
is a SOAP Service Call. Whereas REST, now
you have a very different paradigm shift,
12

13
00:01:04.739 --> 00:01:10.830
you're actually constructing the URL to
a resource, like having an ID embedded.
13

14
00:01:10.830 --> 00:01:15.270
Now you saw that I mimicked that and
some of the Spring MVC stuff that we
14

15
00:01:15.270 --> 00:01:20.610
talked about earlier in the course. But
now, we're creating a resource URL. But
15

16
00:01:20.610 --> 00:01:26.880
now, with RESTful services, we can also
use all the HTTP verbs to work with
16

17
00:01:26.880 --> 00:01:31.470
these resources. So we can do a put, we
can do a delete to delete a resource. So
17

18
00:01:31.470 --> 00:01:36.390
this is very important as far as working
with these. So in this part of the course,
18

19
00:01:36.390 --> 00:01:41.670
we're gonna do is look at this. Why
this is significant paradigm shift in
19

20
00:01:41.670 --> 00:01:45.299
how what web services are written. So
this is really a iconic book. It really
20

21
00:01:45.299 --> 00:01:49.560
kind of shifted the industry after this
came out. And around this time, that's why
21

22
00:01:49.560 --> 00:01:54.000
REST service is really caught on fire.
And you'll see why we wanna use them
22

23
00:01:54.000 --> 00:02:00.600
because it really does make our API very
generic so any client can use it. Because
23

24
00:02:00.600 --> 00:02:05.130
at the time when this came out, we were
dealing with SOAP. Microsoft has had their
24

25
00:02:05.130 --> 00:02:10.530
own little flavor of SOAP. But even though it
was a standard in the Java community had
25

26
00:02:10.530 --> 00:02:13.680
theirs, they didn't always play
nicely together. So he always had to
26

27
00:02:13.680 --> 00:02:15.770
tweak some stuff
to make it the Microsoft way.
27

28
00:02:15.770 --> 00:02:20.390
Here on the other hand, with REST, it
really doesn't matter if you're using a
28

29
00:02:20.390 --> 00:02:25.450
.net client, it could be an AngularJS
client, it could be nodeJS, it could be
29

30
00:02:25.450 --> 00:02:31.220
Python or Ruby or of course Java or even
C++. It could be a mobile application
30

31
00:02:31.220 --> 00:02:37.850
using objective of C. So all these
clients become kind of and it doesn't
31

32
00:02:37.850 --> 00:02:42.020
matter. As long as they adhere to the
HTTP standards, you're good to go. So in
32

33
00:02:42.020 --> 00:02:45.110
this section of the course, we're gonna
get into some fun stuff. We're gonna
33

34
00:02:45.110 --> 00:02:49.340
talk about this more for sure. I got a
whole section on the course or a whole
34

35
00:02:49.340 --> 00:02:53.450
lecture talking about this guy's
maturity model the Richardson maturity
35

36
00:02:53.450 --> 00:02:57.769
model, and then we're gonna get into
working with REST clients. First, we're
36

37
00:02:57.769 --> 00:03:01.730
gonna consume RESTful services using
the Spring Framework and just get our
37

38
00:03:01.730 --> 00:03:05.900
hands with seeing how these REST
clients interact with the API. Then
38

39
00:03:05.900 --> 00:03:10.550
in the next section of the course, we are
actually gonna write our own API's
39

40
00:03:10.550 --> 00:03:13.660
using the Spring Framework.
