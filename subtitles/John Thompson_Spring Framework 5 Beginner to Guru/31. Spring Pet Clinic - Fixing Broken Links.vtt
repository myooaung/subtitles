WEBVTT
0
1
00:00:04.310 --> 00:00:08.460
In this video, we're going to take a look
at our application here as it is running.
1

2
00:00:08.460 --> 00:00:12.570
There's a couple broken links that I
want to address. I'm going to try to mimic.
2

3
00:00:12.570 --> 00:00:17.340
You deploy an application and users come
up and said, "Hey, when I come here and
3

4
00:00:17.340 --> 00:00:22.439
click on veterinarian's we get an error
page, and if I click on find owners, 
4

5
00:00:22.439 --> 00:00:28.710
also get an error page, along with
the oops." These are all things that we
5

6
00:00:28.710 --> 00:00:31.560
want to implement but let's make this a
little more user-friendly. The
6

7
00:00:31.560 --> 00:00:35.969
veterinarians, we can actually fix but
we have not added a search form for find
7

8
00:00:35.969 --> 00:00:39.960
owners yet, so that's something that it's
going to be coming up, and then we also
8

9
00:00:39.960 --> 00:00:45.239
want to do add in some error handling
into Spring MVC. Also something coming up.
9

10
00:00:45.239 --> 00:00:50.129
But let's handle this a little bit more
gracefully. Let's come into our list of
10

11
00:00:50.129 --> 00:00:55.300
issues here.
I'm going to create a new issue. 
11

12
00:00:59.320 --> 00:01:05.189
So I'm going to say menu links are
broken and we could do something like
12

13
00:01:05.189 --> 00:01:08.640
find owners
13

14
00:01:10.630 --> 00:01:13.950
list vets and
14

15
00:01:14.070 --> 00:01:21.890
so do something like that. Go ahead
and submit that. Submit the new issue. I might
15

16
00:01:21.890 --> 00:01:26.189
actually going to call it 
a bug.
16

17
00:01:26.189 --> 00:01:30.750
So we can see that I've labeled it is a
bug. It's not working. I'll assign
17

18
00:01:30.750 --> 00:01:36.570
that to me so we're going to be working on
issue number 45. This here is kind of
18

19
00:01:36.570 --> 00:01:39.630
typical. If you're working in an
enterprise, you're going to get a ticket.
19

20
00:01:39.630 --> 00:01:44.909
Sometimes they're pretty cryptic from
your users. But here, I'm just kind
20

21
00:01:44.909 --> 00:01:47.670
of showing you a workflow where somebody
submitted a ticket saying that we do
21

22
00:01:47.670 --> 00:01:50.940
have a bug.
Obviously these are problems. I'm not
22

23
00:01:50.940 --> 00:01:55.170
going to fix everything right now, but let's
go through this and implement something
23

24
00:01:55.170 --> 00:01:59.909
that's a little more nicer. So if we come
up to find owners, we don't want this
24

25
00:01:59.909 --> 00:02:04.500
generic error page so we're saying 404.
Let's do something a little bit nicer
25

26
00:02:04.500 --> 00:02:12.660
here so we're going to go to owners find
and let's come in here back to IntelliJ.
26

27
00:02:12.660 --> 00:02:18.660
We can close, collapse the data, and
I'm going to minimize this a little bit
27

28
00:02:18.660 --> 00:02:22.920
down here.
So here's our web
28

29
00:02:22.920 --> 00:02:29.120
and bring up templates, I'm going to do a
new template.
29

30
00:02:30.270 --> 00:02:32.480
HTML file
30

31
00:02:40.629 --> 00:02:45.310
I'm just going to put in a
placeholder there. Let's come in and just
31

32
00:02:45.310 --> 00:02:47.939
do h2.
32

33
00:02:50.830 --> 00:02:55.590
I'm just going to put a little place
over here. Not implemented yet.
33

34
00:02:56.060 --> 00:02:59.300
Get rid of that. We don't need that space
there.
34

35
00:02:59.300 --> 00:03:05.700
Debu over so that gives us our template
and let's make this an actual Thymeleaf
35

36
00:03:05.700 --> 00:03:08.180
template.
36

37
00:03:21.100 --> 00:03:24.210
th text
37

38
00:03:24.270 --> 00:03:30.120
So I'm just adding in a... let's make that
yet
38

39
00:03:31.730 --> 00:03:36.850
like so. We'll add in some text. Want to make sure...
39

40
00:03:37.250 --> 00:03:41.780
so that's going part of the message file but 
that's okay. Let's go ahead and double
40

41
00:03:41.780 --> 00:03:48.220
check that. Oh, I need to do single quotes
around that for static text.
41

42
00:03:48.220 --> 00:03:53.430
So now, Thymeleaf will evaluate that and
bring back that text line
42

43
00:03:53.430 --> 00:04:01.910
so now we need to actually map that. 
For this guy here, we want owners find.
43

44
00:04:01.910 --> 00:04:06.110
Let's come in here. We have our
controllers. We don't have a specific
44

45
00:04:06.110 --> 00:04:12.470
controller for that. But this is going to
be to the owners so we can bring up the
45

46
00:04:12.470 --> 00:04:18.230
owners controller and see that we have
owners here. Let's come down here. Let's
46

47
00:04:18.230 --> 00:04:23.110
say @RequestMapping.
47

48
00:04:26.710 --> 00:04:31.630
Again, I'm going to do a slash find. 
Remember, we're just doing find with no
48

49
00:04:31.630 --> 00:04:35.940
trailing slash, so that's going to be
fine.
49

50
00:04:39.060 --> 00:04:43.800
We'll implement this functionality
in an upcoming video. We're just adding
50

51
00:04:43.800 --> 00:04:50.000
in a placeholder right now. What we
want to do is return
51

52
00:04:53.360 --> 00:05:00.210
like so, so return "not implemented".
Double-check my spelling. I think I
52

53
00:05:00.210 --> 00:05:05.550
spelled right. I should be able to just
do a build here that will redeploy the
53

54
00:05:05.550 --> 00:05:09.980
templates.
I do have Spring Boot Dev Tools
54

55
00:05:09.980 --> 00:05:14.600
running. Obviously, I made a change to
the OwnerController class so it caused
55

56
00:05:14.600 --> 00:05:19.880
a redeploy. Let's come back over here and
we should just be able to refresh this,
56

57
00:05:19.880 --> 00:05:23.840
and now we can see that we are getting
the not implemented yet which is exactly
57

58
00:05:23.840 --> 00:05:27.969
what we wanted.
That is now working so I can come here
58

59
00:05:27.969 --> 00:05:33.870
and find owners not implemented
and then let's add in the error. We want
59

60
00:05:33.870 --> 00:05:39.140
this oups, so let's go ahead and do that.
60

61
00:05:41.849 --> 00:05:46.529
Usually, I can overload this controller
here. I'll just add in the @Request
61

62
00:05:46.529 --> 00:05:53.190
Mapping so I'll do this comma
oups.
62

63
00:05:53.469 --> 00:05:59.229
That updates the mapping to that. Add
slash like that. Either one of these
63

64
00:05:59.229 --> 00:06:04.149
paths are going to go so we going to go, "Oop, I'm
sorry. I can't do that because we do have
64

65
00:06:04.149 --> 00:06:11.309
owners there." So that is not going to
work. Let's undo that.
65

66
00:06:11.750 --> 00:06:15.650
I've set up this RequestMapping here so
it's going to go slash owners so if I
66

67
00:06:15.650 --> 00:06:19.580
did that it be owners oups, so I'm not
what we want. That would not work for us.
67

68
00:06:19.580 --> 00:06:27.140
What we can do is, let's see
here. I'm just going come here, copy that
68

69
00:06:27.140 --> 00:06:30.460
over to IndexController.
69

70
00:06:38.600 --> 00:06:42.830
I'm just going to call it an ooops method.
I may spelled oups differently. I did
70

71
00:06:42.830 --> 00:06:45.910
so let's copy that
71

72
00:06:47.900 --> 00:06:53.330
and just call it an oups handler. So now,
that should work better. That will take
72

73
00:06:53.330 --> 00:07:00.650
care of that one. So let's come in here.
Build the project. By building it, that
73

74
00:07:00.650 --> 00:07:04.460
is going to Spring Boot to 
reinitialize it.
74

75
00:07:04.460 --> 00:07:08.540
Let's come back over here and
refresh this. We should see that not
75

76
00:07:08.540 --> 00:07:14.690
implemented, exactly what we wanted,
and then finally, the veterinarian's. You
76

77
00:07:14.690 --> 00:07:19.460
can see the vets.html. I
have two options here. What I could
77

78
00:07:19.460 --> 00:07:25.820
do is I could change the template to
route to just vets or I can change the
78

79
00:07:25.820 --> 00:07:30.410
controller to handle vets.html and
I'm going to do the latter. I think
79

80
00:07:30.410 --> 00:07:32.960
that just gives us a little more
flexibility as far as the application
80

81
00:07:32.960 --> 00:07:40.210
goes, so let's come over here to our
VetController. We can see
81

82
00:07:40.210 --> 00:07:43.960
here, we've got several different paths
that we'll take but we don't have the
82

83
00:07:43.960 --> 00:07:48.449
vets.html so let's go ahead and add
that.
83

84
00:07:48.500 --> 00:07:53.860
It does vets.html and that is off
the route.
84

85
00:07:54.110 --> 00:08:00.050
You can see here that I did not do a
RequestMapping at the top so all these
85

86
00:08:00.050 --> 00:08:04.159
here are going to be functioning off the
route path, which is exactly what we want.
86

87
00:08:04.159 --> 00:08:10.310
So now, I've overloaded this list of vets
function or I should say method. It's
87

88
00:08:10.310 --> 00:08:17.180
going to work off of slash vets slash
vets index slash vets index dot HTML slash
88

89
00:08:17.180 --> 00:08:22.729
vets dot HTML. We're going to have
several methods here that'll work. Maybe
89

90
00:08:22.729 --> 00:08:28.069
not a good specific use case, but I'm
just also trying to show you the
90

91
00:08:28.069 --> 00:08:32.630
versatility that we have in setting up
or custom mapping, so I go ahead and
91

92
00:08:32.630 --> 00:08:37.310
trigger a build here that which calls
redeploy. If you're paying attention,
92

93
00:08:37.310 --> 00:08:41.599
I don't have the automatic
redeploy working. I need to tweak my
93

94
00:08:41.599 --> 00:08:46.610
compiler settings on IntelliJ so it will
automatically rebuild upon changes so I
94

95
00:08:46.610 --> 00:08:50.570
wouldn't have to click on build. So let's
go ahead and do that. So now, that is
95

96
00:08:50.570 --> 00:08:57.500
working, so home works, find owner not
implemented yet, veterinarians that is
96

97
00:08:57.500 --> 00:09:03.380
working now, and then, not implemented yet.
If I wanted to, does not implement a
97

98
00:09:03.380 --> 00:09:07.880
page, I could actually style that with
our default styling. Maybe that'd be
98

99
00:09:07.880 --> 00:09:11.750
something nice to do. But for right now,
we're going to be replacing that so I'm not
99

100
00:09:11.750 --> 00:09:15.410
going to worry about that at this point in
time. I think this is just fine. We have
100

101
00:09:15.410 --> 00:09:19.459
an application under development, so that
go in there,
101

102
00:09:19.459 --> 00:09:23.720
if end-user a tester or something clicks
on this link, you could say, "Hey, yeah
102

103
00:09:23.720 --> 00:09:27.350
we're playing on this functionality. It's
just not up on there yet. " I am going
103

104
00:09:27.350 --> 00:09:32.240
to call this good enough for now.
That was menu links broken issue
104

105
00:09:32.240 --> 00:09:38.800
number 45, so let's go out. Go and close
out this bug ticket.
105

106
00:09:41.800 --> 00:09:44.730
And say...
106

107
00:09:50.920 --> 00:09:56.440
like that, like so, and then I do a
commitment and push, and that will close out
107

108
00:09:56.440 --> 00:09:58.800
the issue.
