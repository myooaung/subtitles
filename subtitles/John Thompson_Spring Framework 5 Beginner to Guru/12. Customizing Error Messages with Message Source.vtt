WEBVTT
0
1
00:00:04.220 --> 00:00:09.630
Alright in this video we are going to look
at externalizing properties for messages.
1

2
00:00:09.630 --> 00:00:15.150
And Spring has a lot of robust support
there as well and what we want
2

3
00:00:15.150 --> 00:00:19.230
to do is add in a file. So under
resources I'm going to add in a file
3

4
00:00:19.230 --> 00:00:24.210
called messages.properties. So I'll go to
that file now and there's a few things
4

5
00:00:24.210 --> 00:00:28.949
that we can do as to how Spring and
Thymeleaf are displaying stuff. We can
5

6
00:00:28.949 --> 00:00:33.149
customize those error messages that
we're seeing on the screen. The
6

7
00:00:33.149 --> 00:00:38.969
first thing that I did is on line 2.
I did recipe.description so it's object
7

8
00:00:38.969 --> 00:00:44.820
name dot property name is the syntax and
I wanted to have that description
8

9
00:00:44.820 --> 00:00:51.090
display as capital D. So that's why I set
it up there and now the validation
9

10
00:00:51.090 --> 00:00:57.030
messages, these are things that we can
set up to customize it. So rather than
10

11
00:00:57.030 --> 00:01:00.960
just cannot be blank, I want to say
description can not be blank and have
11

12
00:01:00.960 --> 00:01:04.860
a little more friendly user message. So
that's all part of the user experience
12

13
00:01:04.860 --> 00:01:10.530
that we want our end user to have to be
friendly and the way this is going to
13

14
00:01:10.530 --> 00:01:17.100
work is it's validation code, the object
name and then the field name. And then we
14

15
00:01:17.100 --> 00:01:21.030
can also just do the validation code and
field name if we want to have something
15

16
00:01:21.030 --> 00:01:27.060
more universal for a common property
name. And we can also do code and field
16

17
00:01:27.060 --> 00:01:33.060
types .So based on a Java data type and
then just the code. So this is a whole
17

18
00:01:33.060 --> 00:01:37.799
order of precedence and what I want to
do is, let's come over here to the test.
18

19
00:01:37.799 --> 00:01:42.689
And I want to show you something here. And I added in another validation error
19

20
00:01:42.689 --> 00:01:48.000
so that I could see that. So let's go
into debug on this and take a look at
20

21
00:01:48.000 --> 00:01:55.759
that validation object. And I'm going to bring this up,
bindingResult. There's the errors object.
21

22
00:01:55.759 --> 00:02:03.840
Now I can see codes. So see the codes, Max.recipe.cook Time
22

23
00:02:03.840 --> 00:02:09.690
there. That it just highlighted so this
is going to tie to these properties. So
23

24
00:02:09.690 --> 00:02:18.530
you can find the description. There's
a description and we look at the codes.
24

25
00:02:18.530 --> 00:02:23.819
Now we can see NotBlank.recipe.description. So that's going to tie to
25

26
00:02:23.819 --> 00:02:28.920
this property. So if it finds that it's
going to override the default so Spring
26

27
00:02:28.920 --> 00:02:33.600
has default messages for this. So you can
see the default message has been set to
27

28
00:02:33.600 --> 00:02:39.630
may not be empty and now I want to say
description cannot be blank. So
28

29
00:02:39.630 --> 00:02:44.340
that's a quick way to do that and I want
you to understand that this
29

30
00:02:44.340 --> 00:02:51.630
property here that I have highlight down
below is going to match this here. So I
30

31
00:02:51.630 --> 00:02:56.730
just want to highlight that. So on line 10 that NotBlank.recipe.
31

32
00:02:56.730 --> 00:03:03.060
description NotBlank.recipe.description as well .So that's how Spring
32

33
00:03:03.060 --> 00:03:07.650
is matching up those messages and as I said
it does have a whole order of precedence.
33

34
00:03:07.650 --> 00:03:11.160
So there's a lot of flexibility in this
model. I really like the way they did it.
34

35
00:03:11.160 --> 00:03:14.609
So gives you a ton of flexibility in
setting up your messages. So let's go
35

36
00:03:14.609 --> 00:03:24.329
ahead and take a look at that now. So I
do have Tomcat running and I've got to
36

37
00:03:24.329 --> 00:03:29.250
refresh this and do the form post and
you can see I get description cannot be
37

38
00:03:29.250 --> 00:03:35.639
blank. Description must be between 3 and
255 characters and right now we're
38

39
00:03:35.639 --> 00:03:40.799
still on the defaults on these but if we
added in a property, we could do that. So
39

40
00:03:40.799 --> 00:03:52.859
let's take a look at the URL. The URL
must be a valid URL. And so I'm
40

41
00:03:52.859 --> 00:03:57.049
adding in a message for URL there and
41

42
00:03:59.540 --> 00:04:08.629
please provide a valid URL. So we can see
that must be a valid URL. That seems a
42

43
00:04:08.629 --> 00:04:13.090
little authoritarian to me. So let's provide a more friendly message.
43

44
00:04:13.090 --> 00:04:21.350
we'll come in here and build it. So
Spring is going to trigger a reload and
44

45
00:04:21.350 --> 00:04:27.740
come over here and let's refresh that, 
force a form submit and now we can see
45

46
00:04:27.740 --> 00:04:31.940
that message is now saying please
provide a valid URL. A little bit
46

47
00:04:31.940 --> 00:04:36.970
friendlier. A little nicer aesthetics for
our end users.
