WEBVTT
0
1
00:00:04.190 --> 00:00:07.500
Alright! In this video, what we are
going to do is we're going to look at
1

2
00:00:07.500 --> 00:00:12.269
adding in a Pet Clinic Index Page and
controller so we're going to start doing
2

3
00:00:12.269 --> 00:00:16.410
the web aspect of the development.
Right now, what we want to do is
3

4
00:00:16.410 --> 00:00:21.449
just lay down a very basic framework for
the web development. I'm not going to do all flesh
4

5
00:00:21.449 --> 00:00:27.150
out the total HTML at this point. I'm
just laying down the basics. What I'm
5

6
00:00:27.150 --> 00:00:30.300
showing you is some iterative development
so we are going to definitely be
6

7
00:00:30.300 --> 00:00:34.710
iterating on this. I'm going to go ahead
and assign this to myself so we are
7

8
00:00:34.710 --> 00:00:38.309
going to be working on issue #8.
We're going to come back over here
8

9
00:00:38.309 --> 00:00:44.579
to IntelliJ. What I want to do is
come under here under templates I'm
9

10
00:00:44.579 --> 00:00:47.629
going to create a New File.
10

11
00:00:47.770 --> 00:00:55.200
Just call that index.html like so. I'm going  to
11

12
00:00:56.140 --> 00:00:58.590
add that in to Git.
Actually,
12

13
00:00:59.560 --> 00:01:02.410
that's not what I want to do. I'm going to
come back over here. I made a mistake
13

14
00:01:02.410 --> 00:01:06.870
there. Going to come back and delete this
14

15
00:01:11.390 --> 00:01:16.100
and say, now I want to do  a
New File. I want to do a New HTML File.
15

16
00:01:16.100 --> 00:01:21.320
That gives me some basic stuff there so
let's go ahead and say New HTML File. You
16

17
00:01:21.320 --> 00:01:26.480
can see that I can do 5 for XHTML. We
are going to do 5 because that is
17

18
00:01:26.480 --> 00:01:29.590
compatible with Thymeleaf
18

19
00:01:35.750 --> 00:01:38.500
like so.
19

20
00:01:40.590 --> 00:01:44.160
Add that to Git.
20

21
00:01:49.740 --> 00:01:54.549
Pet Clinic Index. I am just going to
put in
21

22
00:01:54.549 --> 00:01:59.860
for what right now h1, heading one tag,
22

23
00:02:01.720 --> 00:02:07.360
Index Page like so. Okay, so this is now
just a standard HTML template. I will
23

24
00:02:07.360 --> 00:02:09.820
show you more in the course as we go
forward
24

25
00:02:09.820 --> 00:02:14.440
about Thymeleaf. But one thing I'm going
to do right now is I'm going to come in
25

26
00:02:14.440 --> 00:02:20.349
and add in. This is an xml namespace for
Thymeleaf.
26

27
00:02:20.349 --> 00:02:24.540
I'm going to put that in as a
placeholder.
27

28
00:02:25.010 --> 00:02:29.799
What this does is it gives us and the 'th'
tags.
28

29
00:02:32.659 --> 00:02:37.829
The reason I'm doing this adding in
this tag right here for the h1 heading. A
29

30
00:02:37.829 --> 00:02:41.909
piece of advice from IntelliJ, if you
just put it in the namespace,
30

31
00:02:41.909 --> 00:02:46.829
I do have optimized imports on it and
there has been times where in IntelliJ
31

32
00:02:46.829 --> 00:02:50.579
well whack that if you don't have any of
the tags there, so that's why I'm going ahead in
32

33
00:02:50.579 --> 00:02:57.420
adding this. I just made this HTML
document into a Thymeleaf template. I'm
33

34
00:02:57.420 --> 00:03:00.720
definitely going to be showing you more as
the class progresses. I'm just putting
34

35
00:03:00.720 --> 00:03:06.390
out a placeholder here for right now.
What I want to do now is I have this
35

36
00:03:06.390 --> 00:03:11.220
template defined. You can see that's
under templates. In the templates folder,
36

37
00:03:11.220 --> 00:03:15.870
that is the default for Spring Boot. Now
what do I come in to do it is with Java
37

38
00:03:15.870 --> 00:03:22.310
is let's come into our pet clinic and
I'm going to create a New Package.
38

39
00:03:23.500 --> 00:03:27.900
Call that controllers
and now let's
39

40
00:03:27.900 --> 00:03:32.360
come up here and I'm going to do a New Java
Class.
40

41
00:03:35.710 --> 00:03:39.510
I'm going to call it IndexController.
Going to go ahead and add
41

42
00:03:40.020 --> 00:03:49.680
that to Git. I need to annotate this
as @Controller, like so, and now, what I'm
42

43
00:03:49.680 --> 00:03:56.570
going to do is public String
index which isn't going to take anything
43

44
00:03:56.570 --> 00:04:01.550
and I'm going to return back, like
44

45
00:04:03.210 --> 00:04:10.380
so. This is a simple controller.
I have a method here called index.
45

46
00:04:10.380 --> 00:04:15.720
It returns back index, the string
index and what happens with Thymeleaf is
46

47
00:04:15.720 --> 00:04:19.800
it's going to go back and look for a
template called index. So you don't have
47

48
00:04:19.800 --> 00:04:24.600
to say index.html, just index is fine.
This wires up this controller
48

49
00:04:24.600 --> 00:04:29.060
for that. Now what I want to do
49

50
00:04:29.470 --> 00:04:36.289
is that @RequestMapping,
I'm going to do this. Give it a list
50

51
00:04:36.289 --> 00:04:39.999
of an empty string
51

52
00:04:40.590 --> 00:04:43.580
slash
52

53
00:04:47.930 --> 00:04:51.290
like so.
53

54
00:04:51.550 --> 00:04:57.340
Now we can see here is I've given in
a RequestMapping, a list of parameters
54

55
00:04:57.340 --> 00:05:03.700
and I'm saying an empty string just
slash index, index.html. What it means
55

56
00:05:03.700 --> 00:05:09.520
is when there's a request that comes in
to the root context or root slash
56

57
00:05:09.520 --> 00:05:15.960
index or index.html, they're all
going to match to this RequestMapping
57

58
00:05:15.960 --> 00:05:20.590
so let's go ahead and run this right now.
I'm going to go ahead and start Spring
58

59
00:05:20.590 --> 00:05:24.400
Boot.
You can see that's building down at
59

60
00:05:24.400 --> 00:05:32.100
the bottom there. We're starting it up.
See this vizsla  logo there.
60

61
00:05:32.100 --> 00:05:40.150
One trick here is you can see right
here, I get this highlighted, you can see
61

62
00:05:40.150 --> 00:05:45.639
that's my mapping there and you can see
blank and then the double pipes / double
62

63
00:05:45.639 --> 00:05:51.790
pipes / index. That is all the
mapping that Spring MVC has done so you
63

64
00:05:51.790 --> 00:05:55.660
can see that's the Request Handler
Mapping that there Spring MVC. This
64

65
00:05:55.660 --> 00:06:00.340
is handy to do if you are fighting a
configuration issue where your page
65

66
00:06:00.340 --> 00:06:05.440
isn't coming up. This is something to
look for. Let's see if Spring MVC is
66

67
00:06:05.440 --> 00:06:08.919
picking up. I've done it. There's been
plenty of times where I like do the
67

68
00:06:08.919 --> 00:06:12.490
Request Mapping but I forget this
Controller annotation and then I'm like,
68

69
00:06:12.490 --> 00:06:16.660
"Why aren't you coming up?" and now you're
looking like" "Oh, don't mean you forgot
69

70
00:06:16.660 --> 00:06:20.770
the Controller annotation" so something
that happens to the best of us. Now let's
70

71
00:06:20.770 --> 00:06:28.259
come over to Chrome.
I am going to start up a new tab. Go to localhost
71

72
00:06:29.750 --> 00:06:33.970
and we 
should see our index page. We do not. We
72

73
00:06:33.970 --> 00:06:40.139
got a 500.
Let's take a look at that.
73

74
00:06:42.999 --> 00:06:51.401
Template:  "index" so It's telling me that I
have a problem with the Template:  "index".
74

75
00:06:51.401 --> 00:06:54.310
Line 8 column 9, so line 8
75

76
00:06:54.350 --> 00:07:00.200
column 9.
I'm going to remove this to see
76

77
00:07:00.200 --> 00:07:05.840
if that's part of the problem.
Now go ahead and restart this.
77

78
00:07:09.110 --> 00:07:13.310
I had to restart that. I am going to
show you how to use developer tools
78

79
00:07:13.310 --> 00:07:16.759
where we don't have to do a bounce like
that, but this will restart and reload.
79

80
00:07:16.759 --> 00:07:21.949
Let's go ahead and reload this and now
that is showing, but I do want
80

81
00:07:21.949 --> 00:07:24.610
something in there.
81

82
00:07:33.670 --> 00:07:37.660
I'm surprised that did not work so I'm
going to go ahead and restart this. That
82

83
00:07:37.660 --> 00:07:41.160
should replace the text in there.
83

84
00:07:46.250 --> 00:07:54.340
Go ahead and refresh this.
asdf. I'm not sure what I had done wrong there.
84

85
00:07:59.160 --> 00:08:04.160
I restart this. I have Index Page in
there.
85

86
00:08:04.200 --> 00:08:09.470
I don't think I had a typo of there
earlier be honest.
86

87
00:08:10.460 --> 00:08:16.570
See we are back up. Switch over here and
it should return to index. I think it's because
87

88
00:08:19.320 --> 00:08:25.650
I am a little rusty with Thymeleaf. We actually need to put single
88

89
00:08:25.650 --> 00:08:29.790
quotes, a single ticks around that part
to evaluate properly, so let's go ahead
89

90
00:08:29.790 --> 00:08:32.540
and restart this.
We get it
90

91
00:08:35.820 --> 00:08:40.080
back up and see if that works because I
think what was happening, as I was
91

92
00:08:40.080 --> 00:08:45.960
evaluating as an expression.
Let's come back over here and reload
92

93
00:08:45.960 --> 00:08:50.790
this. Now that is working properly.
Just to recap there, that little
93

94
00:08:50.790 --> 00:08:56.430
problem I had. What's happening is I am
telling Thymeleaf to replace this value. It
94

95
00:08:56.430 --> 00:09:00.450
just happens to be the same string value
I mentioned earlier. What happens with
95

96
00:09:00.450 --> 00:09:04.020
IntelliJ is if you have this empty
namespace up there and you're optimizing
96

97
00:09:04.020 --> 00:09:07.290
imports unchecking, sometimes an
IntellliJ will whack that. Other than
97

98
00:09:07.290 --> 00:09:12.000
trying to be helpful for you but not
really. In here, I'm using the Thymeleaf
98

99
00:09:12.000 --> 00:09:18.450
text tag which says replace the body
here with that. It's been a while
99

100
00:09:18.450 --> 00:09:21.840
since I actually use this. Use a lot of
different tags usually with Thymeleaf and
100

101
00:09:21.840 --> 00:09:26.880
here I made a mistake. I forgot to
include the single quotes around the
101

102
00:09:26.880 --> 00:09:31.830
string so having two ticks makes it a
string. This between the quotes here, what
102

103
00:09:31.830 --> 00:09:36.030
Thymeleaf is actually doing it's
evaluating that as an expression so i was
103

104
00:09:36.030 --> 00:09:40.980
getting the 500 error that was causing
it to fail the evaluation. So now that
104

105
00:09:40.980 --> 00:09:44.940
I have that, we have this up and working
so I am going to go ahead and commit
105

106
00:09:44.940 --> 00:09:51.540
this and like tick. I forget what number it's
on #8. So this is Add Pet
106

107
00:09:51.540 --> 00:09:56.760
Clinics and index Page Controller. Say
that I got the controller added. We're
107

108
00:09:56.760 --> 00:10:00.930
adding in the new IndexController and
the index.html. I'm going to go ahead and
108

109
00:10:00.930 --> 00:10:03.530
close that now.
109

110
00:10:09.760 --> 00:10:12.950
I'm going to Commit and Push that
up to GitHub.
110

111
00:10:12.950 --> 00:10:16.700
Again, it's having this optimize
imports. I like that for my code but I've
111

112
00:10:16.700 --> 00:10:21.440
had IntelliJ whack out that Thymeleaf
namespace if you're not using it on a
112

113
00:10:21.440 --> 00:10:25.270
template. So let's go ahead and Push 
that.
113

114
00:10:27.120 --> 00:10:31.339
That is pushed almost.
114

115
00:10:32.870 --> 00:10:37.900
We can see that is pushed and closed that
right in front of us.
