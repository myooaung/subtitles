WEBVTT
1
00:00:05.170 --> 00:00:05.350
Gay.

2
00:00:05.390 --> 00:00:09.490
No guys are excited about getting to write some code with around spring framework.

3
00:00:09.840 --> 00:00:12.870
But first, we got to pause and take a look at our GitHub workflow.

4
00:00:13.170 --> 00:00:14.970
Now, I've had a lot of students take this course.

5
00:00:15.030 --> 00:00:17.790
I think there's like over 40000 now that have enrolled through the course.

6
00:00:18.090 --> 00:00:22.400
And I get this question a lot about how should I be working with GitHub repositories now?

7
00:00:22.660 --> 00:00:26.010
I do have a process as very helpful for you.

8
00:00:26.520 --> 00:00:29.660
Get Hub is not a requirement for this course.

9
00:00:29.670 --> 00:00:31.920
It is something very helpful for you to have.

10
00:00:32.550 --> 00:00:38.640
If you are new to get Hub, check out Appendix A of the there additional videos on that and links to

11
00:00:38.640 --> 00:00:39.000
videos.

12
00:00:39.000 --> 00:00:40.320
There's a ton of free content on.

13
00:00:40.430 --> 00:00:43.170
I'd get other if you're not familiar with, get home.

14
00:00:43.500 --> 00:00:47.610
But in this video, one I'm going to be doing is talking to you about the workflow.

15
00:00:47.910 --> 00:00:51.360
There's a specific workflow that can really help you out with the course.

16
00:00:51.710 --> 00:00:56.310
And we can jump over to a little video here to talk about the workflow.

17
00:00:56.500 --> 00:00:59.980
And you get to see my mad skills with Adobe after effects.

18
00:01:00.000 --> 00:01:04.100
My very first little Infl of video I've done with after effects.

19
00:01:04.110 --> 00:01:12.150
So hope you enjoy this section and we will get you up to speed on how to use GitHub to your benefit

20
00:01:12.420 --> 00:01:13.560
while you're taking this course.

21
00:01:14.460 --> 00:01:17.430
All source code examples for the course are inside of GitHub.

22
00:01:17.760 --> 00:01:20.220
I use get branches for each lesson.

23
00:01:20.640 --> 00:01:22.590
Now you're going to get a starting branch.

24
00:01:22.980 --> 00:01:24.360
Is the state of the code.

25
00:01:24.390 --> 00:01:30.300
At the beginning of the lesson, changes that I make inside the lesson are then safe to an ending branch.

26
00:01:30.690 --> 00:01:33.440
You'll find links to both branches in the course.

27
00:01:33.450 --> 00:01:37.590
Resources using branches like this has two big benefits.

28
00:01:38.100 --> 00:01:42.900
First, I can go back and update for any errors or new releases of spring.

29
00:01:44.020 --> 00:01:50.440
Second, you can compare your work to my branches to make comparisons easier.

30
00:01:50.680 --> 00:01:56.980
I recommend people use this workflow first for my repository to your own GitHub account.

31
00:01:57.370 --> 00:02:00.790
GitHub is completely free to use if you need help with GitHub.

32
00:02:01.100 --> 00:02:06.880
Check out Appendix A of this course for a collection of videos about how to use GitHub.

33
00:02:07.480 --> 00:02:13.690
Once you have fought my repository to your account, check out your fork from your GitHub account to

34
00:02:13.690 --> 00:02:15.730
your own local workspace.

35
00:02:16.390 --> 00:02:21.130
Start with the Master Branch and then follow along the coding exercises in the course.

36
00:02:21.790 --> 00:02:26.560
The hands on coding will help you learn and absorb the material in the course.

37
00:02:26.980 --> 00:02:34.960
If you have any problems, you can do a comparison from your lone local workspace to the relevant branches

38
00:02:35.020 --> 00:02:36.940
inside of Mike Houppert story.

39
00:02:37.310 --> 00:02:40.150
This will help you identify any differences.

40
00:02:41.720 --> 00:02:45.980
Also, by having your own repository, you can share this with others.

41
00:02:46.040 --> 00:02:52.460
If you run into any problems and need help, or you can also show this to future employers to show them

42
00:02:52.460 --> 00:02:53.030
your work.

43
00:02:53.960 --> 00:02:56.300
Now, if you are uncertain about these steps, don't worry.

44
00:02:56.630 --> 00:02:59.840
In the remainder of this video, I'm going to show you each step.

45
00:03:00.140 --> 00:03:00.920
Step by step.

46
00:03:01.760 --> 00:03:05.720
So the first thing we want to do in our workflow process is to fork.

47
00:03:06.080 --> 00:03:08.390
My repository to your own good account.

48
00:03:08.660 --> 00:03:11.330
So your account is completely free if you don't have one.

49
00:03:11.330 --> 00:03:12.530
Only takes a minute to sign up.

50
00:03:13.260 --> 00:03:19.430
And I'm going to jump over to Chrome and show you exactly how to fork my repository to your own GitHub

51
00:03:19.430 --> 00:03:19.700
account.

52
00:03:20.250 --> 00:03:20.460
OK.

53
00:03:20.990 --> 00:03:23.240
Forking a repository is very simple to do.

54
00:03:23.600 --> 00:03:26.030
I am signed into a different GitHub account.

55
00:03:26.060 --> 00:03:30.560
This is a very old account that I had and simulating what you would do.

56
00:03:30.560 --> 00:03:33.890
So I am at the spring framework to a repository.

57
00:03:33.920 --> 00:03:35.630
But on a different GitHub account.

58
00:03:35.660 --> 00:03:38.630
So this is exactly what you would be to do to fork it.

59
00:03:38.900 --> 00:03:41.360
All I have to do is come up here and click on Fork.

60
00:03:42.500 --> 00:03:44.720
They asked me, where do I want to go?

61
00:03:44.780 --> 00:03:45.860
I mean, I say right there.

62
00:03:48.320 --> 00:03:51.860
And it only takes a few seconds, you can see that it's saying that it's forking.

63
00:03:52.130 --> 00:03:58.580
We get this little icon here and now this is Fort IN2, my GitHub repository.

64
00:03:58.910 --> 00:04:01.670
And you can see here that it knows that it's been fought.

65
00:04:01.700 --> 00:04:03.470
So says it's coming from here.

66
00:04:03.470 --> 00:04:08.990
So if you ever wanna go back to my repository from your own get up repository, just simply click on

67
00:04:08.990 --> 00:04:13.170
this and you'll see that get back to the original source, which is my repository.

68
00:04:13.220 --> 00:04:17.240
But here, this is a repository that you will be using for the course.

69
00:04:18.470 --> 00:04:22.990
The next step in the process is to clone the repository or check it out of Guiteau.

70
00:04:23.240 --> 00:04:25.940
So we go through and show you exactly how to do this now.

71
00:04:26.230 --> 00:04:29.090
Now, cloning the repository is also a very simple process.

72
00:04:29.390 --> 00:04:33.030
So I'm still in my other GitHub account.

73
00:04:33.350 --> 00:04:39.980
And this is where I fought to I mean, come up here and say clone just clicking this to this copy's

74
00:04:39.980 --> 00:04:42.050
the YORO over to the clipboard.

75
00:04:42.500 --> 00:04:45.980
And you do have an option of HTP s or ss h.

76
00:04:46.670 --> 00:04:53.530
I like SS H in a POSIX environment being a Mac OS or 16 free on Windows HDTV.

77
00:04:53.570 --> 00:04:53.810
Yes.

78
00:04:53.840 --> 00:04:56.480
It's probably going to generally work out better for you.

79
00:04:57.170 --> 00:04:58.310
And I'm going to jump over you.

80
00:04:58.310 --> 00:05:00.090
I'm going to show you two different ways that we can clone.

81
00:05:00.110 --> 00:05:06.290
First way we can just come over to the command line and this assumes that you do have it installed on

82
00:05:06.290 --> 00:05:06.950
your machine.

83
00:05:07.820 --> 00:05:12.710
So change to the directory that you wish to be working in for your your workspace.

84
00:05:13.300 --> 00:05:19.580
And all you gotta do is issue the command, get clone and then paste in that you are all hit, enter

85
00:05:19.940 --> 00:05:22.610
and you can see that get has gone and clone that repository.

86
00:05:23.150 --> 00:05:29.930
I do a directory here, can see there's that spring up and then there's the, the working files within

87
00:05:29.930 --> 00:05:30.000
it.

88
00:05:30.020 --> 00:05:32.990
So now I'm ready to start developing on this.

89
00:05:33.320 --> 00:05:37.900
The second way to clone us get help is you can do it right from intelligence.

90
00:05:38.280 --> 00:05:40.910
So I only toggle over to ontology and show you that now.

91
00:05:43.670 --> 00:05:49.970
So here I am, and until they just come up to file new project from version control.

92
00:05:51.680 --> 00:05:53.870
I'm going to go ahead and base the.

93
00:05:56.070 --> 00:05:59.460
Most callers, too, I think, have one in the temp directory.

94
00:05:59.580 --> 00:06:00.850
So let's go ahead and clone it.

95
00:06:03.650 --> 00:06:04.900
It's gonna say yes.

96
00:06:07.170 --> 00:06:13.110
Now, when it first opens it up, it might not detect that it is a MAVEN project and intelligence is

97
00:06:13.110 --> 00:06:14.600
a little inconsistent on this.

98
00:06:14.610 --> 00:06:16.200
So sometimes it does.

99
00:06:16.290 --> 00:06:17.310
Sometimes it does not.

100
00:06:17.410 --> 00:06:23.000
It might be on the particular flavor of until a jam using it does not detect it, which it looks like

101
00:06:23.010 --> 00:06:23.760
in this example.

102
00:06:23.770 --> 00:06:24.500
It has not.

103
00:06:24.540 --> 00:06:24.930
Has it.

104
00:06:25.890 --> 00:06:26.480
Actually, it did.

105
00:06:26.940 --> 00:06:31.580
So did pick up that it does maven project if it does not.

106
00:06:31.950 --> 00:06:33.480
Like I said, it is a little random.

107
00:06:33.920 --> 00:06:34.440
It is not.

108
00:06:34.530 --> 00:06:41.610
Just come in here right click and you'll see in here an option to add it as a maven project.

109
00:06:41.610 --> 00:06:44.670
So like I said, it seems to be completely random.

110
00:06:44.680 --> 00:06:46.410
Sometimes it picks it up as Maven project.

111
00:06:46.650 --> 00:06:48.950
When I was testing it, it did not here.

112
00:06:49.200 --> 00:06:49.680
It did.

113
00:06:49.860 --> 00:06:54.060
So just one of a weird, quirky, quirky things that you see now and then.

114
00:06:54.510 --> 00:07:00.360
But here now again, and this is now close to my local repository and I'm all ready to start developing

115
00:07:00.360 --> 00:07:00.770
against it.

116
00:07:01.680 --> 00:07:08.280
So the whole reason we for the repository to your own and then cloned it is so that you can do comparison.

117
00:07:08.290 --> 00:07:14.720
So being able to compare your your state of your code to my different branches that are kind of beyond

118
00:07:14.760 --> 00:07:16.050
there is a very powerful tool.

119
00:07:16.800 --> 00:07:20.280
Go to intelligence now and show you exactly how easy that is to do.

120
00:07:21.200 --> 00:07:21.310
OK.

121
00:07:21.420 --> 00:07:26.190
Doing a comparative really easy just to for purposes here.

122
00:07:26.220 --> 00:07:32.490
I'm going to go ahead and add a class and I always like this compact middle packages makes things a

123
00:07:33.090 --> 00:07:34.230
little bit easier for us.

124
00:07:35.160 --> 00:07:36.060
I'm going to come in here.

125
00:07:36.090 --> 00:07:41.130
I'm just going to add in food class because this just temporary.

126
00:07:41.580 --> 00:07:43.530
I'm adding this and just as an example.

127
00:07:43.530 --> 00:07:46.290
So we're going to go ahead and air quotes at it to get.

128
00:07:46.920 --> 00:07:51.420
This is a throw away repository for me just for purposes of this class.

129
00:07:51.750 --> 00:07:59.370
So now what I want to do to do a comparison against GitHub, I come in here right click and the comparison

130
00:07:59.370 --> 00:08:02.550
is going to be based on the folder that you are clicking on.

131
00:08:02.560 --> 00:08:05.370
So I'm going to come up here and I'm gonna compare the entire project.

132
00:08:05.400 --> 00:08:07.380
I'm cooking on the root of the source folder.

133
00:08:07.710 --> 00:08:10.860
Actually, I could do the top level project folder too, if I wanted to.

134
00:08:11.370 --> 00:08:17.250
So it just come down here, click on Compare with Branch and if you had any other branches checked out,

135
00:08:17.250 --> 00:08:18.750
you would see them here.

136
00:08:19.050 --> 00:08:21.960
Origin means that the origin inside of good hub.

137
00:08:22.020 --> 00:08:28.620
So let's go ahead and take a look at what we'll do, adding time we that should give us a bunch of changes.

138
00:08:29.070 --> 00:08:32.670
So what you can see here where things are Ingrey.

139
00:08:33.930 --> 00:08:35.160
That means that it's not there.

140
00:08:35.160 --> 00:08:37.970
So they just come up here and say, put controller.

141
00:08:38.460 --> 00:08:39.210
Click on that.

142
00:08:39.630 --> 00:08:46.300
We can see that there is no local resource to compare against and green the food java.

143
00:08:46.340 --> 00:08:47.100
I added that.

144
00:08:47.100 --> 00:08:53.130
And to show you here, this only exists in my repository locally.

145
00:08:54.240 --> 00:08:58.980
Now here, this one in blue, that means there's differences.

146
00:08:59.340 --> 00:09:01.860
So I have the file here and it's not shown.

147
00:09:01.890 --> 00:09:06.060
So if I come in here and double click on this now we can see here.

148
00:09:06.630 --> 00:09:09.150
This is saying that that is the remote version.

149
00:09:09.480 --> 00:09:10.440
And here's my version.

150
00:09:10.470 --> 00:09:12.480
So this line has been added.

151
00:09:12.600 --> 00:09:17.760
So we're seeing that the difference there and intelligent does a real nice job of showing you the differences.

152
00:09:17.790 --> 00:09:23.430
So if you do have any differences, if you have something that's not working now, you can go and compare

153
00:09:23.520 --> 00:09:26.000
your source code against my source code.

154
00:09:27.450 --> 00:09:33.690
You can see exactly how easy it is to do comparisons against branches inside of GitHub, inside of your

155
00:09:33.690 --> 00:09:34.650
own repository.

156
00:09:35.040 --> 00:09:37.020
But what happens if I make changes?

157
00:09:37.110 --> 00:09:42.750
If I did some type of a patch while you're taking the course, since you've worked very simple to do

158
00:09:43.020 --> 00:09:44.920
what we can do is tell.

159
00:09:45.000 --> 00:09:47.580
And get to look at my report story as well.

160
00:09:47.910 --> 00:09:49.530
Very simple command to do that.

161
00:09:49.890 --> 00:09:55.920
And now when when we do this from Intelligent Bill, do comparisons to your own Falke repository.

162
00:09:56.220 --> 00:09:58.620
And to my repository as well.

163
00:09:58.620 --> 00:10:04.440
To see if I've changed anything, if I've done any updates to the versions or possible bug fixes.

164
00:10:04.800 --> 00:10:08.490
So I'm not sure exactly how to set that up right now inside of intelligent.

165
00:10:09.620 --> 00:10:09.780
OK.

166
00:10:09.870 --> 00:10:16.050
So what we want to do is we want to add another remote repo to our get hub configuration locally.

167
00:10:16.410 --> 00:10:21.000
So here on the screen I have where I the fork that I did know.

168
00:10:21.060 --> 00:10:26.580
What I want to do is I want to grab this guy right here, go to it into the original repository.

169
00:10:27.090 --> 00:10:29.510
And now I want to copy this.

170
00:10:29.520 --> 00:10:30.480
You are all here.

171
00:10:31.680 --> 00:10:33.730
Now, I'm going to come back over to ontology.

172
00:10:35.600 --> 00:10:38.570
And until Jay, I'm going to go into the terminal.

173
00:10:39.840 --> 00:10:41.130
Now, this terminal location.

174
00:10:41.820 --> 00:10:43.950
You just need to do this from the command line.

175
00:10:44.550 --> 00:10:46.560
And you want a show very, very simple command again.

176
00:10:46.650 --> 00:10:49.650
You need to have get installed on your machine just to get.

177
00:10:51.390 --> 00:10:56.280
Remote ad and then paste in that value there.

178
00:11:00.520 --> 00:11:01.400
Made one mistake there.

179
00:11:01.420 --> 00:11:06.500
So I want to get the remote ad in here.

180
00:11:06.580 --> 00:11:08.830
I'm going to call it as a G repoll.

181
00:11:08.890 --> 00:11:10.360
I missed the name previously.

182
00:11:11.650 --> 00:11:16.120
And then paste in there, you are also going to call that a Sep G repo for that.

183
00:11:17.130 --> 00:11:18.450
And now that is happy.

184
00:11:18.780 --> 00:11:22.110
Now, if I come up here and I want to get fetch.

185
00:11:22.590 --> 00:11:26.700
So what this is going to do is it looks like it's dropping off the screen there.

186
00:11:27.000 --> 00:11:27.780
Sorry about that.

187
00:11:29.160 --> 00:11:31.140
So I'm going to go out and do a get touch.

188
00:11:31.260 --> 00:11:33.570
I could also do that from a command line just to get.

189
00:11:34.650 --> 00:11:35.090
Fetch.

190
00:11:35.630 --> 00:11:40.860
And that tells you get to go out to the top of her pasdar and pull down new information.

191
00:11:41.410 --> 00:11:46.170
Now, if I come in here and I do get.

192
00:11:47.340 --> 00:11:50.660
Compared compared with Branch and see, I have origin.

193
00:11:51.030 --> 00:11:56.370
And then I have SFD repo, so these are all the branches inside the original repository.

194
00:11:56.790 --> 00:11:59.940
So as of G Repo, it's going to be my repository.

195
00:12:00.450 --> 00:12:03.630
Origin will be your repository inside a GitHub.

196
00:12:03.660 --> 00:12:10.440
So this allows you to see any changes that I've made to the source code since you fork to your own repo.

197
00:12:10.760 --> 00:12:12.890
Any changes that I've made are not going to be pushed here.

198
00:12:12.940 --> 00:12:17.220
So this I can see any changes they're made since you did the fork.
