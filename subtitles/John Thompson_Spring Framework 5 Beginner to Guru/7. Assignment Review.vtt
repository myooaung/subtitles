WEBVTT
0
1
00:00:04.520 --> 00:00:09.030
Alright, let's go and go ahead and create
our unit test for our IndexController.
1

2
00:00:09.030 --> 00:00:13.380
Again I'm gonna come in and use IntelliJ to create it for us. It's actually
2

3
00:00:13.380 --> 00:00:21.090
quite nice. I'm gonna do alt+enter, Create
Test and we wanna be testing that
3

4
00:00:21.090 --> 00:00:26.250
up and we actually we're gonna need
to do a setUp also. So let's go ahead and
4

5
00:00:26.250 --> 00:00:31.439
I'm gonna click OK there and I like
doing it this way because IntelliJ will
5

6
00:00:31.439 --> 00:00:35.640
automatically create the class and a
proper package so everything matches up
6

7
00:00:35.640 --> 00:00:42.989
nicely. So I am going to split this,
something I also like to do is split
7

8
00:00:42.989 --> 00:00:48.090
this so I can see the source code for
the IndexController at top and then the
8

9
00:00:48.090 --> 00:00:58.079
class down at bottom. And you need a
RecipeService implementation and
9

10
00:00:58.079 --> 00:01:01.430
we're also gonna need a Model.
10

11
00:01:04.760 --> 00:01:17.930
Now what we wanna do is annotate these
as @Mock. If you remember, in the test
11

12
00:01:17.930 --> 00:01:24.710
that we did before, we need those MockitoAnnotations.initMocks(). So I am going to
12

13
00:01:24.710 --> 00:01:30.080
cut and paste this right into there. Do
not do cut and paste at home. Alright.
13

14
00:01:30.080 --> 00:01:35.720
So I'll need our mocks and we need also
gonna need our controller so let's
14

15
00:01:35.720 --> 00:01:50.960
add that in. And we'll initialize that in
our setUp() method. Okay, so that will
15

16
00:01:50.960 --> 00:01:56.840
create our instance of the controller
that we can use for our test and what we
16

17
00:01:56.840 --> 00:02:03.980
wanna do is test. What we wanna do is
test make sure that that returns back
17

18
00:02:03.980 --> 00:02:20.950
index. And we need to pass in the
model to that. You can do assertEquals
18

19
00:02:20.950 --> 00:02:28.060
and we are expecting index, all lowercase.
19

20
00:02:28.239 --> 00:02:32.560
So let's see if this runs.
20

21
00:02:35.180 --> 00:02:40.590
So that is passing but we're not
verifying the interactions on the mocks.
21

22
00:02:40.590 --> 00:02:47.180
So just to recap there. So we have the
tests that we wanted to verify that
22

23
00:02:47.180 --> 00:02:53.700
these two mocks are called a number times. So let's come back over to our test. Our
23

24
00:02:53.700 --> 00:03:03.000
controller here and let's add in those
verification steps. It's not the right
24

25
00:03:03.000 --> 00:03:06.890
verify, IntelliJ.
25

26
00:03:15.650 --> 00:03:30.480
IntelliJ is being difficult not finding him so
we'll copy over that static import. So we
26

27
00:03:30.480 --> 00:03:42.780
wanna verify that the recipeService
times 1 and we wanna verify the 
27

28
00:03:42.780 --> 00:03:55.549
getRecipes() and we also wanna do it on the
model, the mock of the model, times also 1.
28

29
00:03:55.549 --> 00:04:03.739
We're gonna say addAttribute. Anyway
I wanna make sure that the name is
29

30
00:04:05.659 --> 00:04:20.280
recipes and we'll use a
method called anySet(). So anySet() this is. So
30

31
00:04:20.280 --> 00:04:23.760
we're gonna say addAttribute and
we're expecting it to add an attribute
31

32
00:04:23.760 --> 00:04:30.870
with the String recipes and with anySet()
value. So let's verify this, go ahead and
32

33
00:04:30.870 --> 00:04:33.349
run it now.
33

34
00:04:41.010 --> 00:04:47.290
It's not happy with that.
Okay took a closer look at that and my
34

35
00:04:47.290 --> 00:04:52.240
mistake was I'm passing in an attribute
name and what I want is a match over there.
35

36
00:04:52.240 --> 00:04:57.310
It's kind of telling me that the
error message is there. A little confusing and
36

37
00:04:57.310 --> 00:05:03.240
what I wanna do is add in a matcher
and I'm going to use the equals matcher
37

38
00:05:03.240 --> 00:05:09.490
to say that I want to make sure that the
attribute, we are passing in the first
38

39
00:05:09.490 --> 00:05:13.990
value it's going to equal on the String
recipes and then the second value of
39

40
00:05:13.990 --> 00:05:19.030
that method call is going to be anySet(). So if we look at the source code of
40

41
00:05:19.030 --> 00:05:23.410
IndexController up here on line 26, we
can see that we're adding in the
41

42
00:05:23.410 --> 00:05:28.630
attribute which is effectively a map. And we're writing the map key String of recipes
42

43
00:05:28.630 --> 00:05:34.600
and then any value coming back from the
RecipeService is going to be a set. And
43

44
00:05:34.600 --> 00:05:39.760
which is why we're saying anySet() there. So let's go ahead and run this now and
44

45
00:05:39.760 --> 00:05:46.650
we see that we now have a test that is
verifying the actions of our controller.
45

46
00:05:46.650 --> 00:05:53.290
And let's make sure that all our tests
are running. So we can come in and say
46

47
00:05:53.290 --> 00:06:00.130
Run 'All Tests'. Make sure that we didn't
inadvertently break anything and again
47

48
00:06:00.130 --> 00:06:03.550
you can see that the Spring integration
test does take a little bit longer
48

49
00:06:03.550 --> 00:06:06.880
because we're bringing up the full
context and then you can see just how
49

50
00:06:06.880 --> 00:06:13.919
quickly the other tests run that go by
a blink of an eye.
