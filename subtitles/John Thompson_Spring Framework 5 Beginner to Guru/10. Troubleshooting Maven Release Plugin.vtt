WEBVTT
0
1
00:00:04.850 --> 00:00:09.990
Alright! In this video, we are going to do a
little troubleshooting. I have a post up in
1

2
00:00:09.990 --> 00:00:14.639
here on Udemy of
the release plugin for the Spring Pet
2

3
00:00:14.639 --> 00:00:21.449
Clinic project. It can be a little
temperamental. Here, we can see one of
3

4
00:00:21.449 --> 00:00:25.619
my students has posted up here. They
are getting an error in the release
4

5
00:00:25.619 --> 00:00:32.099
process and he's posted some screenshots
here. We can see that things are failing
5

6
00:00:32.099 --> 00:00:37.920
for some reason. We're not getting
through, so we are building this and
6

7
00:00:37.920 --> 00:00:43.500
there's a failure. The problem is, this is
showing the failure message but
7

8
00:00:43.500 --> 00:00:48.420
somewhere up in the stack trace above,
there is an actual error message that's
8

9
00:00:48.420 --> 00:00:53.640
going to give us a lot more insight.
Fortunately, what we have here is we do
9

10
00:00:53.640 --> 00:01:00.620
have this GitHub link. I'm going
to go ahead and open that.
10

11
00:01:00.750 --> 00:01:08.360
This gives me his source control
here, so I'm going to go ahead and fork it.
11

12
00:01:08.360 --> 00:01:12.540
Okay, I want to interject a quick
spoiler alert here.
12

13
00:01:12.540 --> 00:01:16.770
I do not ultimately solve the problem.
I'm not able to recreate the students
13

14
00:01:16.770 --> 00:01:20.880
problem in this video but I do go
through a number of troubleshooting
14

15
00:01:20.880 --> 00:01:25.940
steps. So I recorded the video and was
not able to record or recreate the issue
15

16
00:01:25.940 --> 00:01:29.970
but the troubleshooting that I go
through here, I figured I'd include it
16

17
00:01:29.970 --> 00:01:35.430
anyways and put it up and make it part
of the course because I think seeing the
17

18
00:01:35.430 --> 00:01:38.070
steps that I go through and the things
that I'm looking at I think you can
18

19
00:01:38.070 --> 00:01:42.119
learn from that, so I'm going to go ahead
and include it. But I did want to inject a
19

20
00:01:42.119 --> 00:01:50.190
spoiler alert. I do go through this and
not able to recreate the issue. It's 27.50. I
20

21
00:01:50.190 --> 00:01:54.810
never carry while I'm working. It
ruins the lines of my suit. How about
21

22
00:01:54.810 --> 00:02:02.640
Chris by 5? Okay, Merry Christmas.
By clicking right here, you can see I
22

23
00:02:02.640 --> 00:02:07.920
have a several repos in my organization
or get associated might GitHub account.
23

24
00:02:07.920 --> 00:02:12.780
I'm going to go to this guy here, of course.
It's going to fork off to my Spring
24

25
00:02:12.780 --> 00:02:19.100
Framework Guru GitHub account, that I'm
sure a lot of you are familiar with.
25

26
00:02:19.100 --> 00:02:27.300
Here this is. I am going to go ahead and
do a clone here and I normally don't
26

27
00:02:27.300 --> 00:02:33.630
open up IntelliJ. Let's give IntelliJ
a shot so I'm going to say IntelliJ from
27

28
00:02:33.630 --> 00:02:39.860
version control.
It's asking me for a password and say
28

29
00:02:40.490 --> 00:02:46.180
allow. That's my GitHub
credentials stored.
29

30
00:02:46.940 --> 00:02:49.060
And you can see here,
30

31
00:02:49.720 --> 00:02:55.780
I have a source and then have a temp
folder in my source directory. I'm
31

32
00:02:55.780 --> 00:02:59.190
going to say go ahead and clone that.
32

33
00:03:00.270 --> 00:03:05.330
We can see that IntelliJ is gone and
cloned the project.
33

34
00:03:05.330 --> 00:03:08.930
We can see that IntelliJ is going
through and doing initial indexing of
34

35
00:03:08.930 --> 00:03:12.750
the project.
There's a few different things that
35

36
00:03:12.750 --> 00:03:15.920
could be happening here.
36

37
00:03:17.560 --> 00:03:22.500
I just want to say
into this cold so I really don't know
37

38
00:03:22.500 --> 00:03:28.610
what we we have cooking. So I'm clicking
a refresh here.
38

39
00:03:28.780 --> 00:03:33.900
For some reason, we're picking up two
roots.
39

40
00:03:33.990 --> 00:03:39.450
We got some index
going in a little pause in IntelliJ.
40

41
00:03:40.200 --> 00:03:48.040
I got a little background music here, Spafford. Check out Spafford on
SoundCloud. Their description
41

42
00:03:48.040 --> 00:03:52.629
is we jam. So I do like jamming music
here a little bit. IntelliJ has
42

43
00:03:52.629 --> 00:04:00.040
completed its thing. This file here
definitely should not be checked in so
43

44
00:04:00.040 --> 00:04:03.269
I'm going to delete that.
44

45
00:04:05.220 --> 00:04:10.300
These are some temp files that
should not be checked in. I should add
45

46
00:04:10.300 --> 00:04:14.730
that to the .gitignore file.
You want to be
46

47
00:04:15.980 --> 00:04:19.769
careful with checking in temporary files like
that.
47

48
00:04:19.769 --> 00:04:22.930
I'm just giving
things an over look to see if anything
48

49
00:04:22.930 --> 00:04:29.340
pops out at me. I'm not seeing anything
at this point,
49

50
00:04:29.340 --> 00:04:35.720
so let's see here. I am going to open up
terminal now.
50

51
00:04:37.150 --> 00:04:41.580
This is a feature inside of
IntelliJ.
51

52
00:04:43.560 --> 00:04:48.169
Just making sure I'm in the right 
directory.
52

53
00:04:49.770 --> 00:04:55.660
I do have Maven installed
so I'm going to run a
53

54
00:04:55.660 --> 00:04:58.410
mvn...
54

55
00:05:05.980 --> 00:05:08.950
I'm running mvn clean install.
That's going to enforce Maven to go
55

56
00:05:08.950 --> 00:05:13.860
through and build everything.
56

57
00:05:18.509 --> 00:05:22.599
I am getting a successful build
there.
57

58
00:05:22.599 --> 00:05:26.630
I'm going to come back
here to
58

59
00:05:27.660 --> 00:05:30.350
Udemy.
59

60
00:05:30.830 --> 00:05:34.180
So let's see here. Maven.
60

61
00:05:42.660 --> 00:05:45.950
I going to do a Maven.
61

62
00:05:46.440 --> 00:05:50.150
mvn release:prepare.
62

63
00:05:57.880 --> 00:06:04.400
We can see here, I got a couple things going on and
IntelliJ asked me to import. I'm
63

64
00:06:04.400 --> 00:06:09.050
going to say yes. Important to point out
right now, I'm working into two different
64

65
00:06:09.050 --> 00:06:14.150
things.
IntelliJ indexes the project but I also
65

66
00:06:14.150 --> 00:06:18.650
have the command line and I'm down on
the command line even though I'm inside
66

67
00:06:18.650 --> 00:06:25.340
IntelliJ. Very important to remember that
that is running in the operating system
67

68
00:06:25.340 --> 00:06:29.930
and not inside of IntelliJ. So, two
completely separate processes going on.
68

69
00:06:29.930 --> 00:06:33.380
Even though I'm inside of IntelliJ, this
window down at the bottom is on the
69

70
00:06:33.380 --> 00:06:37.910
operating system. It isn't terminal. 
I'm going to just accept the new
70

71
00:06:37.910 --> 00:06:40.240
releases.
71

72
00:06:41.020 --> 00:06:45.370
We can see everything 
is going through okay.
72

73
00:06:45.820 --> 00:06:49.500
All happy so far.
73

74
00:06:54.190 --> 00:06:57.930
There, we got an error.
74

75
00:07:00.919 --> 00:07:05.830
This is a git error.
That is
75

76
00:07:08.180 --> 00:07:17.180
because here I've got his repo here. So let me change that to mine.
76

77
00:07:20.910 --> 00:07:25.960
Handy little copy to
clipboard.
77

78
00:07:26.340 --> 00:07:29.449
Jump over here.
78

79
00:07:36.970 --> 00:07:43.240
That's updating to my GitHub account,
so go ahead and tell IntelliJ to import
79

80
00:07:43.240 --> 00:07:45.450
that.
80

81
00:07:48.190 --> 00:07:52.540
I can see that IntelliJ re-index things
properly. I don't have multiple modules
81

82
00:07:52.540 --> 00:07:56.250
there. Not quite sure why that happened.
82

83
00:08:13.199 --> 00:08:22.560
I just did a release clean. I make
sure this, okay, so those files dropped. We
83

84
00:08:22.560 --> 00:08:28.610
have the revision or the version has
been changed. I'm going to revert that
84

85
00:08:32.659 --> 00:08:37.479
as well as this guy here. That's not
going to be happy.
85

86
00:08:37.719 --> 00:08:42.270
I'm imagining this guy has been 
changed too.
86

87
00:08:49.990 --> 00:08:54.850
Okay.
I'm also going to check the version
87

88
00:08:54.850 --> 00:09:01.510
control, so my POM has been changed.
Just making sure
88

89
00:09:01.650 --> 00:09:04.990
that it's okay.
I'm reviewing the changes before I
89

90
00:09:04.990 --> 00:09:10.880
try this release process again.
90

91
00:09:10.880 --> 00:09:12.699
That looks okay.
91

92
00:09:14.230 --> 00:09:19.330
Let's come back over to terminal.
I'm going to run the release:prepare
92

93
00:09:19.330 --> 00:09:21.600
again.
Press the enter enter
93

94
00:09:24.880 --> 00:09:27.270
enter.
94

95
00:09:31.290 --> 00:09:35.170
Everything's looking good right
95

96
00:09:35.170 --> 00:09:39.819
now. See if we get the error again. Again,
the previous error that was trying to
96

97
00:09:39.819 --> 00:09:42.930
push up to GitHub.
97

98
00:09:43.889 --> 00:09:47.869
Tag already exist.
98

99
00:09:50.720 --> 00:09:53.740
Let's see here.
99

100
00:09:56.430 --> 00:10:03.080
Try if I can delete the tag right
here. That's not there.
100

101
00:10:04.910 --> 00:10:11.390
The problem is that we have
that tag there so I'm going to go in.
101

102
00:10:11.430 --> 00:10:16.010
That's my local Git.
Clean
102

103
00:10:16.889 --> 00:10:19.249
this up.
103

104
00:10:21.550 --> 00:10:26.580
I could delete that. Nope. I could go and
104

105
00:10:26.580 --> 00:10:32.980
delete that but what I'm going to do is just
be easier to go in and increment this.
105

106
00:10:32.980 --> 00:10:39.550
I'm updating to 0.0.2 so I don't even
mess with that tag. Just be honest, I
106

107
00:10:39.550 --> 00:10:47.940
know I can do that in Git, but I 
honestly forgot the command
107

108
00:10:51.640 --> 00:10:56.790
so I'm just being a little lazy
here in doing this.
108

109
00:11:04.210 --> 00:11:08.200
So now, everything's good.
109

110
00:11:09.240 --> 00:11:12.020
mvn...
110

111
00:11:13.100 --> 00:11:18.400
I'm doing mvn clean install here to
build a project, make sure that it builds
111

112
00:11:18.400 --> 00:11:22.730
properly with the new version, and then
we'll go through and try the release
112

113
00:11:22.730 --> 00:11:25.510
process again.
113

114
00:11:26.800 --> 00:11:32.930
That's good. Let's try to release:prepare again. This time, hopefully, we don't
114

115
00:11:32.930 --> 00:11:35.980
have any problems with GitHub.
115

116
00:11:55.100 --> 00:12:02.330
Let's see here. I got a success and
we skipped and skipped.
116

117
00:12:13.090 --> 00:12:21.170
I'm not sure why we had pet clinic doing
okay but data and web are not happy.
117

118
00:12:21.170 --> 00:12:24.380
Let's do a...
118

119
00:12:26.230 --> 00:12:32.540
I'm going to do the perform.
See if I can duplicate his error.
119

120
00:12:34.660 --> 00:12:40.019
I honestly don't remember if skipping those two
modules is a problem or not.
120

121
00:12:40.019 --> 00:12:44.179
If it is, we'll look at it closer.
121

122
00:13:04.420 --> 00:13:08.579
I'm not being able to recreate his
problem right now
122

123
00:13:08.579 --> 00:13:13.709
so I'm not quite sure what's happening. I
am concerned that these two are getting
123

124
00:13:13.709 --> 00:13:20.220
skipped. I don't understand why
that is, but it looks like things
124

125
00:13:20.220 --> 00:13:27.769
went okay. So we're on a 0.3 snapshot. I
toggle over here to Git.
125

126
00:13:33.900 --> 00:13:37.850
We can see that we did push up
so the did
126

127
00:13:37.850 --> 00:13:45.759
function the way we thought it would
allegedly. We did get the tag pushed.
127

128
00:13:47.480 --> 00:13:52.060
This is the 0.0.2 so that
did function properly, so we did
128

129
00:13:52.060 --> 00:13:55.600
create that release.
129

130
00:14:00.450 --> 00:14:06.490
I am concerned that these two got
skipped, which is interesting.
130

131
00:14:09.130 --> 00:14:11.520
Over here,
131

132
00:14:14.460 --> 00:14:17.900
That should definitely not be there.
132

133
00:14:27.900 --> 00:14:30.830
Alright. I don't remember that status. 
I'm going to switch
133

134
00:14:32.160 --> 00:14:35.329
over to my version
134

135
00:14:35.680 --> 00:14:38.759
and do the same thing.
135

136
00:14:53.880 --> 00:14:57.170
I'm doing a mvn release:prepare on my
136

137
00:14:57.170 --> 00:15:03.170
version of pet clinic. What I'm
looking at is I'm trying to see if those
137

138
00:15:03.170 --> 00:15:09.910
two are getting ignored or 
skipped, I should say. I honestly don't
138

139
00:15:09.910 --> 00:15:15.780
remember what happens there.
That's why I'll switch back over
139

140
00:15:15.780 --> 00:15:21.990
here so that these two modules are
getting skipped or shown our success but
140

141
00:15:21.990 --> 00:15:27.200
it skipped. I want to see if that's
correct or not.
141

142
00:15:35.160 --> 00:15:39.610
That is what's happening for me.
Let's double check.
142

143
00:15:39.610 --> 00:15:42.570
I'm going to do a perform.
143

144
00:16:01.420 --> 00:16:04.690
Luckily, we have a little bit of spam for
cooking in the background while
144

145
00:16:04.690 --> 00:16:07.860
this is building for us.
145

146
00:16:11.089 --> 00:16:16.810
The release:perform works as well.
That appears to be normal
146

147
00:16:16.810 --> 00:16:21.520
behavior for these two to get skipped
or show skip, but we are showing a built
147

148
00:16:21.520 --> 00:16:27.610
success there that the release process
did complete normally. Now this is
148

149
00:16:27.610 --> 00:16:31.080
different from what he's seeing,
149

150
00:16:31.590 --> 00:16:36.590
so it is going skip skipped. But he's
showing a
150

151
00:16:36.590 --> 00:16:42.560
failure in this here, so we are
getting a failure.
151

152
00:16:42.560 --> 00:16:48.280
The problem is that he did not show us
the error message.
152

153
00:16:51.210 --> 00:16:55.640
What we need to do here is find out
why.
153

154
00:17:01.319 --> 00:17:04.319
The error is
154

155
00:17:04.670 --> 00:17:08.900
somewhere. That problem is somewhere
up in the stack trace, so we need to look
155

156
00:17:08.900 --> 00:17:13.730
at the build blogs of pet clinic, the
snapshot, and find out why that is
156

157
00:17:13.730 --> 00:17:16.690
failing. There's some type of
failure there that we're not seeing.
157

158
00:17:16.690 --> 00:17:23.600
Sometimes its cryptic. We can hear is as Maven suggests run it with the dash
158

159
00:17:23.600 --> 00:17:29.890
X for the debugging. That will give
us more insights, so I am going to
159

160
00:17:29.890 --> 00:17:34.749
respond back to the student on this and
see
160

161
00:17:34.749 --> 00:17:38.200
if we can get additional information
because right now I can't recreate this
161

162
00:17:38.200 --> 00:17:44.049
error. It's working fine for me. I
checked out from his GitHub. The only
162

163
00:17:44.049 --> 00:17:49.409
difference is I am using my Maven.
163

164
00:17:52.610 --> 00:17:58.650
You can see I'm on a Java 1.8
 and I'm using Maven 3.5.
164

165
00:17:58.740 --> 00:18:06.960
Not using maven wrapper.
So that's 3.5.3 so and I'm on
165

166
00:18:06.960 --> 00:18:11.880
3.5.2 from the command line, so minor
release Maven. I doubt if that is the
166

167
00:18:11.880 --> 00:18:18.180
issue. Maybe he's running Java 10.
That could cause a build problem for
167

168
00:18:18.180 --> 00:18:24.420
sure because we are not set up to run Java 10 on this Spring project. If
168

169
00:18:24.420 --> 00:18:29.220
we're running Java 9 or 10, that
could definitely be a problem. I'm going
169

170
00:18:29.220 --> 00:18:34.800
to respond back to him on this. I'm
not going to bother committing this into my
170

171
00:18:34.800 --> 00:18:40.160
GitHub because there's really nothing I
can communicate to him.
