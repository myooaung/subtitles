WEBVTT
0
1
00:00:04.250 --> 00:00:08.820
Okay in this video we are going to be
taking a look at creating Spring Mock
1

2
00:00:08.820 --> 00:00:12.389
MVC Tests for the Visit
Controller. Again, George has made a
2

3
00:00:12.389 --> 00:00:16.440
contribution here to the project. You can see
that I'm running a little bit behind.
3

4
00:00:16.440 --> 00:00:21.359
It's November and he did this in October.
Sorry I was focused on knocking out a bunch
4

5
00:00:21.359 --> 00:00:25.109
of content for the testing course but
coming back to the Spring Pet Clinic
5

6
00:00:25.109 --> 00:00:29.820
project and getting caught up on some of
the contributions here. So we can see
6

7
00:00:29.820 --> 00:00:34.469
here that GitHub says that we
can merge this. There's no conflict.
7

8
00:00:34.469 --> 00:00:38.969
Nothing conflicted. We have one file
that changed. It's a brand new file
8

9
00:00:38.969 --> 00:00:43.500
that has been added. So that file the
VisitControllerTest did not exist
9

10
00:00:43.500 --> 00:00:47.670
before, so of course there's not going to
be any conflicts. What I want to try
10

11
00:00:47.670 --> 00:00:53.730
here is we have something called GitHub
Checks. This allows the CI build to
11

12
00:00:53.730 --> 00:00:58.140
run with this. I'm not 100% sure this is
going to work. But I do want to step
12

13
00:00:58.140 --> 00:01:00.890
through it and see if we can get it to
work.
13

14
00:01:00.890 --> 00:01:06.150
I'm going to come over here. The one
thing I need to do is come over here to
14

15
00:01:06.150 --> 00:01:12.119
settings and go to VCS and we can say
manage GitHub checks. So I'm going to go
15

16
00:01:12.119 --> 00:01:17.180
into the settings. This is going to
be global. So it's going to take all my
16

17
00:01:17.180 --> 00:01:21.750
repositories. So I'm going to go ahead
and allow this to happen. I'm going to say
17

18
00:01:21.750 --> 00:01:24.799
to install this.
18

19
00:01:25.170 --> 00:01:31.780
Go ahead and confirm my password
there.
19

20
00:01:31.780 --> 00:01:38.340
We can see that CircleCI Checks
has been installed on my account.
20

21
00:01:39.620 --> 00:01:43.960
I don't this is going to 
run automatically.
21

22
00:01:43.960 --> 00:01:49.400
You can see if it does
or not. Apparently it does not.
22

23
00:01:50.620 --> 00:01:54.730
I've seen this work before. I've
had it working on other GitHub
23

24
00:01:54.730 --> 00:01:59.620
repositories and what's going to happen
with a pull request is that it is going
24

25
00:01:59.620 --> 00:02:04.060
to run a CI build. We'll actually get a
build in there. So I'm going to try to
25

26
00:02:04.060 --> 00:02:08.320
get this set up at some point in the
future. I did not have it enabled on
26

27
00:02:08.320 --> 00:02:14.950
my GitHub repository. But now it is. So
future pull requests should trigger a
27

28
00:02:14.950 --> 00:02:20.620
build for us. So I'm going to come in here
and go ahead and merge this pull
28

29
00:02:20.620 --> 00:02:25.090
request.
Now this merge action of course is going
29

30
00:02:25.090 --> 00:02:30.760
to trigger a build ticker. So come over
here to jobs. You can see that the CI
30

31
00:02:30.760 --> 00:02:35.140
built already kicked off automatically
so that is going to go ahead and run
31

32
00:02:35.140 --> 00:02:40.180
upon the merge. What I'm trying to
get happening is we can actually do
32

33
00:02:40.180 --> 00:02:43.390
changes. I'll record a video in the
future for that now that I have the
33

34
00:02:43.390 --> 00:02:52.590
functionality enabled. What we'll see
is checks will actually execute.
34

35
00:02:52.590 --> 00:02:59.310
So we can see that this did not happen
here. But if I have things set up we can
35

36
00:02:59.310 --> 00:03:02.819
run a check with Circle CI 
being that a build is going to run.
36

37
00:03:02.819 --> 00:03:07.800
Usually it's going to be in a scenario
where I branch this repository and do a
37

38
00:03:07.800 --> 00:03:14.099
feature branch PR back in. I'll do a
example of that in an upcoming video. But
38

39
00:03:14.099 --> 00:03:20.630
for now, I want to go ahead and let's
pull this down and jump over to IntelliJ.
39

40
00:03:20.630 --> 00:03:25.990
We will do a pull. Pull things down.
40

41
00:03:27.740 --> 00:03:34.160
This is a brand new class, the test
that was added by George. I appreciate
41

42
00:03:34.160 --> 00:03:38.690
the contribution there. I'm just
going to run the single test. Nothing else
42

43
00:03:38.690 --> 00:03:43.880
changed. We'll just make sure that
everything runs. I am just looking
43

44
00:03:43.880 --> 00:03:47.530
through the test that he set up.
44

45
00:03:49.400 --> 00:03:53.439
And we did get one to fail.
45

46
00:03:57.520 --> 00:04:02.650
I'm going to pause this video and
research why this test is failing.
46

47
00:04:02.650 --> 00:04:08.170
Okay, I took a little closer look to see
what's happening and what I've done is
47

48
00:04:08.170 --> 00:04:13.220
went into the VisitController and let's
set up a breakpoint. I'm going to click
48

49
00:04:13.220 --> 00:04:17.450
in the gutter here to get that little
red dot. Let's go ahead and run this
49

50
00:04:17.450 --> 00:04:19.959
in debug.
50

51
00:04:22.940 --> 00:04:32.490
What's happening here is we can see
here if we look at the binding result
51

52
00:04:32.490 --> 00:04:38.190
problem is that we have one errors and
we can see the date is not happy. So
52

53
00:04:38.190 --> 00:04:44.069
it's rejecting the value here. There is a
mismatch unfortunately. What's
53

54
00:04:44.069 --> 00:04:48.930
happening is the error of the test is
we're expecting a redirect to be
54

55
00:04:48.930 --> 00:04:53.370
successful but our result is having
errors and that's because the date is
55

56
00:04:53.370 --> 00:04:57.690
not binding properly. so let's come back
over here and I'm going to come into the
56

57
00:04:57.690 --> 00:05:03.389
Visit. We can see that the date is null
but we come over here to the test, we're
57

58
00:05:03.389 --> 00:05:06.690
expecting the redirection but we are
setting the date property so this date
58

59
00:05:06.690 --> 00:05:12.090
is not parsing properly. That's
that's the root cause. What's
59

60
00:05:12.090 --> 00:05:20.190
happened is George actually created
another pull request and in this pull
60

61
00:05:20.190 --> 00:05:25.880
request we can see, let's take a look at
the file change. He's have adding in the
61

62
00:05:25.880 --> 00:05:30.870
to the dataBinder, we are adding in the
LocalDate so that's going to bind and
62

63
00:05:30.870 --> 00:05:36.990
parse that text. So we're going to take
in text or a String I should say and we
63

64
00:05:36.990 --> 00:05:42.870
will parse that to a LocalDate. So 
that's the functionality that we want. So
64

65
00:05:42.870 --> 00:05:47.090
what I'm going to do is I'm going to
come over here
65

66
00:05:47.090 --> 00:05:53.750
and let's go ahead and merge in this
pull request. Because that's going to fix the
66

67
00:05:53.750 --> 00:05:58.820
problem. I'm not going to debug it
further because that is actually going to
67

68
00:05:58.820 --> 00:06:03.199
fix the problem here because that date
is not being parsed properly. So I'm
68

69
00:06:03.199 --> 00:06:07.689
going to stop this in the debugger and
come up to Git.
69

70
00:06:07.689 --> 00:06:12.449
And now we'll come down here and say
pull.
70

71
00:06:12.480 --> 00:06:17.010
That's coming down. We can also see, if 
come over to Circle CI while this is
71

72
00:06:17.010 --> 00:06:21.390
running, we can see that that failed and
of course I got an email saying that
72

73
00:06:21.390 --> 00:06:27.600
that had failed. But in fact George had
provided a two pull request. So
73

74
00:06:27.600 --> 00:06:33.360
technically you don't want to provide a
failing pull request. Ideally you could
74

75
00:06:33.360 --> 00:06:38.430
have added an additional commits there
to do it all as one package. So this
75

76
00:06:38.430 --> 00:06:43.710
did cause my build to fail with this
condition but I can see why he set
76

77
00:06:43.710 --> 00:06:49.500
this up because we're actually looking
at two different issues. So he's
77

78
00:06:49.500 --> 00:06:55.190
looking at 72 and then forget the other
one.
78

79
00:06:58.539 --> 00:07:07.130
72 and 73. So let's see here. Circle CI
that has run. That is happy because we
79

80
00:07:07.130 --> 00:07:15.050
now have all the code there and let's
come in here and we'll rerun that one
80

81
00:07:15.050 --> 00:07:19.990
failing test.
With that DataBinder in there
81

82
00:07:19.990 --> 00:07:25.870
that should execute properly. We will get
the redirect as expected. So this is now
82

83
00:07:25.870 --> 00:07:33.419
functioning properly so what I'm going
to do is come over to these here.
83

84
00:07:34.650 --> 00:07:40.120
That was for the Date Validation. You can see
George did
84

85
00:07:40.120 --> 00:07:44.940
that so I'm just going to go ahead and that is closed.
85

86
00:07:48.050 --> 00:07:54.879
And double check the other one. 72 and 73.
86

87
00:07:58.510 --> 00:08:02.860
So that other one closed because if you
put in closes and the issue number into
87

88
00:08:02.860 --> 00:08:08.190
the comments. So I'm going to go ahead
and close this one out.
88

89
00:08:08.969 --> 00:08:13.769
So that's closed. So George has
submitted three pull requests and
89

90
00:08:13.769 --> 00:08:19.729
closed out a few issues for us.
Let's just come back to issues and that
90

91
00:08:19.729 --> 00:08:25.460
leaves just a couple more pull requests
here and we will address these in
91

92
00:08:25.460 --> 00:08:29.270
an upcoming video. I'll do these in
separate videos. But special thanks to
92

93
00:08:29.270 --> 00:08:35.169
George for contributing test to our
Spring Pet Clinic Project.
