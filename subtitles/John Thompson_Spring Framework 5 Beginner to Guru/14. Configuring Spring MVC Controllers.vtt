WEBVTT
0
1
00:00:05.390 --> 00:00:08.850
Now in this module we're going to introduce you to configuring Spring Controllers.
1

2
00:00:08.930 --> 00:00:15.160
What we need to do is associate a controller method with a request path. That's when Spring gets requests
2

3
00:00:15.170 --> 00:00:19.410
on a specific path a specific controller method will get invoked.
3

4
00:00:19.550 --> 00:00:24.290
Now in our example what would you want the controller to do is go to the database, get a list of books,
4

5
00:00:24.350 --> 00:00:25.970
and return it over to the view.
5

6
00:00:26.160 --> 00:00:30.890
Now to configure a controller in Spring we're going to agitate the class with the controller annotation.
6

7
00:00:31.010 --> 00:00:37.330
This will tell Spring to manage that class as a Spring Bean and that it is a Spring MVC Controller.
7

8
00:00:37.330 --> 00:00:44.450
Now to set up the request path, we are gonna use the annotation request map mapping to tell Spring to
8

9
00:00:44.450 --> 00:00:47.190
associate a path with a controller method.
9

10
00:00:47.360 --> 00:00:52.060
In this module we are just going to look at configuring the controller to return Dad to The View and
10

11
00:00:52.080 --> 00:00:56.900
next video we're going to take a look at the actual view layer. So I'm going jump over to IntelliJ now and
11

12
00:00:56.900 --> 00:00:58.540
show you how to wire up a Spring Controller.
12

13
00:00:59.750 --> 00:01:04.740
So the first thing I want to do when I'm adding a controller I like to add a package for controllers.
13

14
00:01:04.790 --> 00:01:09.710
I've seen some Spring projects where they get a little scattered and that's confusing for two people
14

15
00:01:09.710 --> 00:01:10.280
coming in.
15

16
00:01:10.640 --> 00:01:17.680
So I like to create a new package and just call it controllers like so.
16

17
00:01:18.320 --> 00:01:28.220
And then a nice naming convention is just do book controller so that tells you the purpose in life of
17

18
00:01:28.220 --> 00:01:31.150
this class.
18

19
00:01:31.290 --> 00:01:40.170
We will add that to Github. What we want to do here is let's do public string and we'll just to
19

20
00:01:40.200 --> 00:01:46.400
get books and what we want this to do is return back.
20

21
00:01:46.420 --> 00:01:51.940
This is going to be the view name so we're going to say books and we'll configure this in the actual
21

22
00:01:51.940 --> 00:01:54.160
view in the next video.
22

23
00:01:54.160 --> 00:02:01.240
So it's very simple method and now let's start adapting this to actually be in an actual controller
23

24
00:02:01.240 --> 00:02:03.840
within the terms of the Spring Framework.
24

25
00:02:03.880 --> 00:02:08.740
So I'm going to come up here and let's annotate it with the controller.
25

26
00:02:08.740 --> 00:02:15.010
This is the Spring stereotype which tells the Spring Framework our intent is to make this into a Spring
26

27
00:02:15.010 --> 00:02:18.250
MVC Controller.
27

28
00:02:18.330 --> 00:02:23.670
Now we want to map this to a specific URL. The way we do that, we're going to use the request
28

29
00:02:23.670 --> 00:02:31.670
mapping annotation. We're going to say request mapping and we just need to give it the path.
29

30
00:02:31.670 --> 00:02:41.970
So we're just going to do slash books. So when we do an action against the URL of books this method
30

31
00:02:41.970 --> 00:02:44.810
is going to get invoked by the Spring MVC framework.
31

32
00:02:46.320 --> 00:02:49.360
Now what we want to do here is pass in the model.
32

33
00:02:49.360 --> 00:02:52.320
Remember Spring MVC Model View Controller.
33

34
00:02:52.320 --> 00:02:59.740
So we have the controller and we want to bring in the model and we'll just call that model.
34

35
00:02:59.810 --> 00:03:01.890
So this gives us the model object.
35

36
00:03:01.970 --> 00:03:05.690
And keep in mind this is what is going to get returned to the view.
36

37
00:03:05.690 --> 00:03:08.060
So the view is gonna get a copy of the model.
37

38
00:03:08.090 --> 00:03:11.770
Now we want to enhance that model with a list of books.
38

39
00:03:11.930 --> 00:03:17.280
So to do so what we want to do is come in here. Let's do private final.
39

40
00:03:19.910 --> 00:03:22.790
So we want to bring in an instance of the book repository.
40

41
00:03:22.790 --> 00:03:28.700
So what we're asking the Spring Framework to do is inject a book repository and I'm going to generate
41

42
00:03:28.700 --> 00:03:31.870
a constructor command N to bring that up.
42

43
00:03:32.040 --> 00:03:38.570
And now because I have a constructor on that, this is a Spring managed component because it is controller
43

44
00:03:38.960 --> 00:03:46.220
when Spring instantiate this it will inject an instance of that book repository into our controller.
44

45
00:03:46.220 --> 00:03:53.750
Now what we can do here is grab our model and we're going to do an ADD ATTRIBUTE, just one attribute.
45

46
00:03:54.020 --> 00:03:59.450
So we're going to use this here attribute name and attribute value. We'll just simply call out books
46

47
00:04:00.690 --> 00:04:08.260
Now we're going to say our book repository and we're just going to simply say Find all. So now this is going
47

48
00:04:08.260 --> 00:04:17.200
to do is at runtime when Spring gets a request to the URL slash books it is going to execute the get books 
48

49
00:04:17.200 --> 00:04:25.000
method and it's going to provide that method a model, a model object, and our code is saying for that
49

50
00:04:25.000 --> 00:04:31.660
model we are going to add the attribute called Books and we're going to get execute book repository
50

51
00:04:31.660 --> 00:04:33.640
which is going to give us a list of books.
51

52
00:04:33.640 --> 00:04:39.520
Now this model is going to get return back to our view layer and it's going to have an attribute books
52

53
00:04:39.940 --> 00:04:45.040
and a list of books on that and then we'll be able to utilize that value inside of our view layer
53

54
00:04:45.040 --> 00:04:49.590
to apply the necessary view that we're going to be returning back to the client.
54

55
00:04:49.630 --> 00:04:55.180
So to just quickly recap what we did here is we added a new package called controllers, created a new
55

56
00:04:55.180 --> 00:05:00.520
class called book controller, and we annotated that class right at the class level with these Spring
56

57
00:05:00.550 --> 00:05:02.460
stereotype of controller.
57

58
00:05:02.460 --> 00:05:10.180
We are injecting and using Springs dependency injection. We're injecting in an instance of the book repository
58

59
00:05:10.840 --> 00:05:15.370
and we set up on line 20 there are requests mapping for Slash books.
59

60
00:05:15.370 --> 00:05:17.940
So it's going to execute the get books method.
60

61
00:05:18.040 --> 00:05:22.900
Spring is going to provide in a model and we are using the repository to get a list of books out of
61

62
00:05:22.900 --> 00:05:29.080
the database, assign it to that review of books on the model, and then we are returning back a string
62

63
00:05:29.080 --> 00:05:32.980
called books and that is going to till Spring MVC
63

64
00:05:33.100 --> 00:05:38.620
we want to apply the view books. And the books component the view components what we're going to address
64

65
00:05:38.650 --> 00:05:40.120
in the next video.
65

66
00:05:40.180 --> 00:05:44.470
Now what you saw me create there was a very simple Spring MVC Controller.
66

67
00:05:44.470 --> 00:05:49.450
This is about as simple as they come. Now going forward in the course we are going to get into Spring
67

68
00:05:49.460 --> 00:05:54.310
MVC a lot more in-depth. Just going through a very simple example here to get your feet wet with Spring
68

69
00:05:54.310 --> 00:05:59.410
MVC. So, further down in the course we're definitely going to explore Spring Controllers more because
69

70
00:05:59.410 --> 00:06:00.700
there is a lot more to it.
70

71
00:06:01.030 --> 00:06:05.290
But for now this is just a very simple example. All you want to do is display a list of books on the
71

72
00:06:05.290 --> 00:06:10.660
web page. And in the next video we're going to show you the view technology so we can get that web page
72

73
00:06:10.660 --> 00:06:11.110
displayed.
