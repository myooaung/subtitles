WEBVTT
0
1
00:00:04.609 --> 00:00:08.610
Alright, in this video we are going to
show you an example of Spring XML
1

2
00:00:08.610 --> 00:00:12.090
Configuration. I'm going to go into that
same one where we did the Chuck Norris
2

3
00:00:12.090 --> 00:00:16.289
Quotes and reuse that and what I'm going
to do is I'm going to switch out
3

4
00:00:16.289 --> 00:00:19.320
the Java configuration for an XML
configuration. So you can see that
4

5
00:00:19.320 --> 00:00:24.480
they're interchangeable and actually, you may
not realize this, but we're actually
5

6
00:00:24.480 --> 00:00:28.019
using Java configuration and XML
configuration in this because they are
6

7
00:00:28.019 --> 00:00:31.349
annotation based configuration and all
the Beans are going to continue loading
7

8
00:00:31.349 --> 00:00:36.090
up and into the Spring Context just like
they have been. So it's a good example to
8

9
00:00:36.090 --> 00:00:39.920
see how these different techniques are
going to be working together for us.
9

10
00:00:39.920 --> 00:00:45.809
Alright in this example we want to do an
XML configuration and I'm going to stay
10

11
00:00:45.809 --> 00:00:49.980
on our little ChuckNorrisQuotes where
we have the Bean defined because it's a
11

12
00:00:49.980 --> 00:00:55.170
nice example to work with and what I
want to do is I'm going to comment this
12

13
00:00:55.170 --> 00:01:03.300
out and we're going to move this over to
an XML configuration. So to do this where
13

14
00:01:03.300 --> 00:01:08.549
we put the XML configurations as in
resources, under the resources directory
14

15
00:01:08.549 --> 00:01:14.040
and this is something that's going to be
made available to us inside of the
15

16
00:01:14.040 --> 00:01:17.970
Spring Context on the class path. So Java
is going to load this up on the class
16

17
00:01:17.970 --> 00:01:22.200
path. The resources folder is going to
get packaged up into the jar and it's
17

18
00:01:22.200 --> 00:01:26.340
going to be available for us at runtime. So that's where we're going to store any
18

19
00:01:26.340 --> 00:01:31.350
textual types of resources or images
or whatever we want to include in our
19

20
00:01:31.350 --> 00:01:35.340
jar or deployment artifact. So I'm
going to come in here. I'm going to right
20

21
00:01:35.340 --> 00:01:40.890
click on this and come up here and
create a New Spring Configuration File
21

22
00:01:40.890 --> 00:01:44.670
and it's important to note, I'm pretty
sure this is a feature of IntelliJ
22

23
00:01:44.670 --> 00:01:49.619
Ultimate. It is to have this option to go
ahead and create the XML configuration
23

24
00:01:49.619 --> 00:01:58.860
file. So I'm going to click that now and
just call it chuck-config and we are
24

25
00:01:58.860 --> 00:02:05.219
adding that and now what's very
important here is up at the top, is the
25

26
00:02:05.219 --> 00:02:10.890
XML and if you're not up to speed on XML,
this is important because we are
26

27
00:02:10.890 --> 00:02:16.290
defining an XML schema and this is 
the schema that's being used.
27

28
00:02:16.290 --> 00:02:21.390
So I'll bring in an XML namespace and
we use it in the Bean schema and so
28

29
00:02:21.390 --> 00:02:26.070
this is all being imported. So this is
a structured document inside of XML.
29

30
00:02:26.070 --> 00:02:32.340
I'm pretty sure I can click through to
this. Yes. So now we can see this is xsd.
30

31
00:02:32.340 --> 00:02:38.850
This defines everything that we can
declare inside the XML document and you
31

32
00:02:38.850 --> 00:02:42.720
can see that's pretty robust. There's a lot that we can do and I'm not
32

33
00:02:42.720 --> 00:02:47.520
going to be able to get into everything
here as to what's going on here but we
33

34
00:02:47.520 --> 00:02:52.860
do have a lot of options and a lot of
robust configuration abilities here
34

35
00:02:52.860 --> 00:02:56.730
within the Spring Framework in XML
configuration but in this video we are
35

36
00:02:56.730 --> 00:03:00.690
just doing a very simple overview. So I'm
not going to jump down there. I just
36

37
00:03:00.690 --> 00:03:06.090
wanted to jump over there to to show you
how you can set up the versatility that
37

38
00:03:06.090 --> 00:03:14.960
you have. So we're going to come in and
we are going to declare a Bean. I
38

39
00:03:14.960 --> 00:03:23.459
can't remember that Bean name, ChuckNorrisQuotes and by convention we want
39

40
00:03:23.459 --> 00:03:29.870
to give it a lowercase name, then class.
40

41
00:03:32.390 --> 00:03:39.810
You can see the autocomplete here that
we have and that is it. So that is
41

42
00:03:39.810 --> 00:03:43.800
XML configuration. So we'll give it a
name and a class and now because this is
42

43
00:03:43.800 --> 00:03:49.170
declared as a Bean, the Spring Context is
going to pick that up and create this
43

44
00:03:49.170 --> 00:03:53.700
Bean for us. Now there's one last
step we need to do because this will
44

45
00:03:53.700 --> 00:03:58.709
fail right now. We have to come over here. So what I want to use here is the ImportResource
45

46
00:03:58.709 --> 00:04:07.930
annotation and I'm going to
give it a class path and say
46

47
00:04:07.930 --> 00:04:15.400
classpath and then it should find it for us. Yup, there it is. So then IntelliJ's
47

48
00:04:15.400 --> 00:04:19.900
intellisense is quite nice there and
what this is doing is it's telling
48

49
00:04:19.900 --> 00:04:26.500
Spring to search the classpath for a
file named chuck-config.xml and
49

50
00:04:26.500 --> 00:04:32.050
Spring is going to pull that in. So now
just to remember, I've commented this out,
50

51
00:04:32.050 --> 00:04:35.979
I commented out the annotation. So
Spring is not going to see this class
51

52
00:04:35.979 --> 00:04:42.550
anymore as a configuration class and now
it's depending on this xml file to bring
52

53
00:04:42.550 --> 00:04:49.539
it in. So let's go ahead and start this
to verify that it works properly. If you
53

54
00:04:49.539 --> 00:04:58.810
see that Spring Context is coming up. It's launched and we will prove it and
54

55
00:04:58.810 --> 00:05:01.300
you can see that it's still functioning
normally.
55

56
00:05:01.300 --> 00:05:06.130
Alright, you get your first taste of Spring XML
Configuration. Now if you go and get a
56

57
00:05:06.130 --> 00:05:10.539
job as a Spring developer, I guarantee
you you're going to run into legacy called
57

58
00:05:10.539 --> 00:05:15.669
with a ton of XML in it, but modern
Spring applications,
58

59
00:05:15.669 --> 00:05:20.949
the trend is definitely towards Java
Based Configuration but the XML stuff is
59

60
00:05:20.949 --> 00:05:24.729
definitely still out there. So you need to
get this in and maybe we'll do some more
60

61
00:05:24.729 --> 00:05:29.590
XML in the future but going on with this
course you'll see that I have a clear
61

62
00:05:29.590 --> 00:05:33.990
preference for the Java Based
Configuration.
