WEBVTT
0
1
00:00:05.150 --> 00:00:09.179
Alright we want to talk about getting
your development environment set up. So
1

2
00:00:09.179 --> 00:00:13.320
I'm not going to go in too deep on the
specifics on this because it is a
2

3
00:00:13.320 --> 00:00:16.980
requirement for this course that you
already know how to develop in Java. So
3

4
00:00:16.980 --> 00:00:21.539
I'm not going to dive into the OS
specific nuances. I will provide some
4

5
00:00:21.539 --> 00:00:26.580
links in the course resources if you
need that to where you can reference on
5

6
00:00:26.580 --> 00:00:30.060
installing this but I do want to go
through the verification of what we'r
6

7
00:00:30.060 --> 00:00:33.960
going to need to have installed on our
development environment for doing Spring
7

8
00:00:33.960 --> 00:00:41.370
Framework development. So to get things
set up, we need to have the Java JDK 1.8
8

9
00:00:41.370 --> 00:00:48.000
or higher. Make sure that is installed
and the version of Spring Framework 5
9

10
00:00:48.000 --> 00:00:54.750
will only support 1.8 and higher. So if
you have something lower than Java 1.8
10

11
00:00:54.750 --> 00:01:01.649
you definitely need to get that upgraded.
I am using maven 3.2.5. Maven is
11

12
00:01:01.649 --> 00:01:04.710
pretty stable so we're not seeing a lot
of releases come out of that any more
12

13
00:01:04.710 --> 00:01:10.470
and then ideally, I do include the maven
wrapper where you can run from the
13

14
00:01:10.470 --> 00:01:17.159
command line. That is an option. I prefer
to have maven setup for command line use.
14

15
00:01:17.159 --> 00:01:21.450
So you'll need to add on the maven
executable to your path and that's going
15

16
00:01:21.450 --> 00:01:26.490
to be dependent upon whether you're
running Windows OSX or Linux and then
16

17
00:01:26.490 --> 00:01:31.140
same thing with Gradle. I'd like to
see that installed from the
17

18
00:01:31.140 --> 00:01:36.119
command line too. Again when I'm doing the
the maven and Gradle projects you can
18

19
00:01:36.119 --> 00:01:42.329
include an executable with a
shell script to run those. That is pretty
19

20
00:01:42.329 --> 00:01:46.619
handy to use but there's other things
that we'll get into doing some
20

21
00:01:46.619 --> 00:01:50.759
troubleshooting and we might need to
do that. So I just prefer to have those
21

22
00:01:50.759 --> 00:01:59.909
installed and fully configured. Now for
the IDE, I use IntelliJ and I started off
22

23
00:01:59.909 --> 00:02:07.860
the course with 2017. And just right at the end of July in 2017.2
23

24
00:02:07.860 --> 00:02:12.900
was just released. You'll see me
upgrade that in the course and with
24

25
00:02:12.900 --> 00:02:17.099
IntelliJ, they're
pretty good. This just came out and they
25

26
00:02:17.099 --> 00:02:21.599
also have a EAP program for early
adopters where you can get early
26

27
00:02:21.599 --> 00:02:26.400
releases and I will often run the EAP
version as well. So I can get a hold of
27

28
00:02:26.400 --> 00:02:31.500
the all the new features inside of
IntelliJ. So a few notes I want to talk
28

29
00:02:31.500 --> 00:02:35.730
about IntelliJ. You do not need to have IntelliJ for the
29

30
00:02:35.730 --> 00:02:42.379
course so I don't want to create that
impression. But like I said, IntelliJ 2017.1
30

31
00:02:42.379 --> 00:02:47.610
and higher is used in all the coding
samples. If you are going to use
31

32
00:02:47.610 --> 00:02:51.650
IntelliJ, I do recommend the Ultimate
Edition. I know there's a licensing fee
32

33
00:02:51.650 --> 00:02:57.540
involved with that. The Community Edition
is free but it does not have spring
33

34
00:02:57.540 --> 00:03:03.569
support in it. However you can get a
30-day evaluation and then if you are a
34

35
00:03:03.569 --> 00:03:07.560
student or an open source
developer, you can also apply for a free
35

36
00:03:07.560 --> 00:03:12.590
license for the IntelliJ Ultimate
Edition. And by student,
36

37
00:03:12.590 --> 00:03:17.670
unfortunately online course students do
not qualify. You need to be at an
37

38
00:03:17.670 --> 00:03:24.090
accredited university or school of some
sort and you can go over to IntelliJ or
38

39
00:03:24.090 --> 00:03:27.030
JetBrains website and see the full
details on that.
39

40
00:03:27.030 --> 00:03:36.299
Now other IDE's, you can use
SpringSource, STS is probably gonna be
40

41
00:03:36.299 --> 00:03:42.900
the best option. All the code examples
are gonna be dependent from using
41

42
00:03:42.900 --> 00:03:49.019
maven or Gradle. I do not check in any
IDE specific files. So I do like to keep
42

43
00:03:49.019 --> 00:03:55.319
the source code agnostic and agnostic
means that it's not dependent on a
43

44
00:03:55.319 --> 00:04:03.209
specific IDE. And STS has a come a long
way Eclipse. I'm not a
44

45
00:04:03.209 --> 00:04:08.879
big fan of Eclipse nor STS. I've had some
bad experiences with those but a lot of
45

46
00:04:08.879 --> 00:04:12.870
people do like them. So I'm not going to
bash them too much but my preference is
46

47
00:04:12.870 --> 00:04:18.989
definitely towards IntelliJ. I honestly
haven't used netbeans and JDeveloper
47

48
00:04:18.989 --> 00:04:23.099
in well over a decade so I do not know
the state of those. I have been hearing
48

49
00:04:23.099 --> 00:04:27.289
decent things about STS and Eclipse so a
lot of people do like those.
49

50
00:04:27.289 --> 00:04:31.680
Now the next thing we need to do is go
in and verify your environment. Make sure
50

51
00:04:31.680 --> 00:04:35.069
that everything is set up properly. So
the first step we want to do is make
51

52
00:04:35.069 --> 00:04:38.490
sure that Java is installed and
available from the command line. So I would
52

53
00:04:38.490 --> 00:04:42.569
like you to go out to the command line and
run Java -version and make sure that
53

54
00:04:42.569 --> 00:04:47.580
you have Java 1.8 or higher. I'm not too
concerned about the actual release level.
54

55
00:04:47.580 --> 00:04:53.310
I think we're over 120 right now. I am
recording this in July of 2017 so we're
55

56
00:04:53.310 --> 00:04:58.469
right on the eve of Java 9 being
released. I think it's September unless
56

57
00:04:58.469 --> 00:05:02.189
it's been delayed again. I think Java 9
has been already delayed about 18 months
57

58
00:05:02.189 --> 00:05:07.349
already. So like I said, we're on the eve of
Java 9 being released but we shall see
58

59
00:05:07.349 --> 00:05:12.330
if they actually do hit that September
date. The next thing we want to do is
59

60
00:05:12.330 --> 00:05:17.969
make sure that the JDK is installed and
this you can do javac for the java
60

61
00:05:17.969 --> 00:05:24.090
compiler version. So if you just have the
Java Runtime, the JavaC will not be
61

62
00:05:24.090 --> 00:05:28.560
there. So this is a good way to verify
that you do have the actual JDK
62

63
00:05:28.560 --> 00:05:36.839
installed. JDK flavor, I typically use the
Oracle version. Open JDK is just fine as
63

64
00:05:36.839 --> 00:05:39.569
well. So it's up to you depending on which
64

65
00:05:39.569 --> 00:05:48.719
operating system you are running. If
you are using OSX or Linux, you'll have
65

66
00:05:48.719 --> 00:05:53.430
an option there. I'm pretty sure windows
is primarily going to be Oracle but you
66

67
00:05:53.430 --> 00:05:58.529
should also have the open JDK flavor
available there. So it is up to you. I
67

68
00:05:58.529 --> 00:06:03.270
used to favour the Oracle
version but the open JDK version is
68

69
00:06:03.270 --> 00:06:07.529
pretty stable now. Now maven, we will make sure that is
69

70
00:06:07.529 --> 00:06:10.529
installed and available from the command
line and we can just go to the command
70

71
00:06:10.529 --> 00:06:16.349
line run mvn -v and we'll see the
version output of that and then same
71

72
00:06:16.349 --> 00:06:21.319
thing for Gradle. So gradle -v will
show us the version output of Gradle.
72

73
00:06:21.319 --> 00:06:27.240
And I am going to toggle over and show
you these commands and use real quick
73

74
00:06:27.240 --> 00:06:31.300
and we'll make sure that your
environment is up-to-date
74

75
00:06:31.300 --> 00:06:35.990
for doing Spring Framework development.
75

76
00:06:36.750 --> 00:06:41.680
Okay I am over on the command line now
and we want to go through these commands
76

77
00:06:41.680 --> 00:06:50.350
make sure everything is up and running. So java -version, we get that i am running
77

78
00:06:50.350 --> 00:06:55.440
Java 1.8 and tells me some
information about that and with java,
78

79
00:06:55.440 --> 00:07:01.960
just -v does not work. You can see that that is not happy about that. So I'm
79

80
00:07:01.960 --> 00:07:09.970
going to clear that out. javac -version
also, so that that gives us back with the
80

81
00:07:09.970 --> 00:07:13.810
proper Java version or Java
compiler version. That tells me that the
81

82
00:07:13.810 --> 00:07:21.000
JDK is in fact installed and do a clear.
82

83
00:07:21.960 --> 00:07:28.450
maven -v that tells me that I do have
maven 3.2.5 and it shows you
83

84
00:07:28.450 --> 00:07:33.490
some information about Java and maven
Home and what not. So your results might
84

85
00:07:33.490 --> 00:07:39.580
be different depending upon the
JDK and where you have it installed and
85

86
00:07:39.580 --> 00:07:48.640
of course your operating system. So clear
that. gradle -v and we can see that we
86

87
00:07:48.640 --> 00:07:53.950
get an output of the Gradle. Get some
additional information about the groovy
87

88
00:07:53.950 --> 00:07:59.950
and Apache ant as in there too. I forgot it
Apache ant was in Gradle but it tells us
88

89
00:07:59.950 --> 00:08:04.210
some additional information about that. So these are the tools that you should
89

90
00:08:04.210 --> 00:08:09.550
have installed for the course and this
has you all set up to do Java and Spring
90

91
00:08:09.550 --> 00:08:12.390
Framework development.
