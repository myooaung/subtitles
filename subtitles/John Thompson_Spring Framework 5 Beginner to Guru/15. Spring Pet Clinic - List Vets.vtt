WEBVTT
0
1
00:00:03.650 --> 00:00:08.580
In this video, we are going to go ahead
and tackle Listing Vets on the Vet
1

2
00:00:08.580 --> 00:00:14.130
Index Page, so issue #15. It's
going to be pretty similar to what we
2

3
00:00:14.130 --> 00:00:19.170
just did with Owners. I'm going to toggle over
to IntelliJ now. We're going to bring
3

4
00:00:19.170 --> 00:00:25.410
up the VetController. What we want
to do is add in a property for the 
4

5
00:00:25.410 --> 00:00:28.070
VetService.
5

6
00:00:29.390 --> 00:00:33.500
We're going to put in by the
interface and then add in a Constructor
6

7
00:00:33.500 --> 00:00:39.200
to go ahead and add in that parameter
then Spring will go ahead and Auto
7

8
00:00:39.200 --> 00:00:42.860
wire that for us. Next thing we want to
do is bring in the Model into the
8

9
00:00:42.860 --> 00:00:47.840
Controller, or I should say the
Controller method. On the Model, we're
9

10
00:00:47.840 --> 00:00:54.620
going to add a new attribute for vets. Let's
go and take a look at the Vet object
10

11
00:00:54.620 --> 00:01:00.080
itself. Bring that up. We can see
that Vet extends out the Person object.
11

12
00:01:00.080 --> 00:01:04.850
It just has a firstName, lastName,
and also extends BaseEntity, which gives
12

13
00:01:04.850 --> 00:01:13.160
us the id value. Now what we want to do
is add in a property model attribute
13

14
00:01:13.160 --> 00:01:18.619
called vets. We're going to ask for a
list of Vets from our Vet Service.
14

15
00:01:18.619 --> 00:01:24.410
This will append in a set of Vet, so
through the findAll method, remember that
15

16
00:01:24.410 --> 00:01:28.670
it returns a set of Vets and that's going
to add that into the Model that is
16

17
00:01:28.670 --> 00:01:33.890
returned back to the Thymeleaf template.
Now let's go ahead and edit the template.
17

18
00:01:33.890 --> 00:01:37.430
I am going to cut and paste because this
is really similar to what we did to
18

19
00:01:37.430 --> 00:01:42.530
Owners. I'm going to grab that table right out of
new Owners. I'm going to paste it into
19

20
00:01:42.530 --> 00:01:49.450
the Vets and modify this. Rather than
Owners, we have the attribute called vets.
20

21
00:01:49.450 --> 00:01:55.490
I do vets and each vet and then
update the template to use the vet
21

22
00:01:55.490 --> 00:02:00.110
properties rather than owners. Don't
cut and paste at home. You can
22

23
00:02:00.110 --> 00:02:03.619
definitely get yourself in trouble, so
I'm doing you what you should not be
23

24
00:02:03.619 --> 00:02:05.799
doing.
24

25
00:02:06.500 --> 00:02:12.470
I'm going to bring over the comment as
well. This is just a hint. This
25

26
00:02:12.470 --> 00:02:17.000
comment that I'm adding in is strictly
for IntelliJ. This helps IntelliJ
26

27
00:02:17.000 --> 00:02:22.910
understand the type for vet so now
IntelliJ intellisense will work. It
27

28
00:02:22.910 --> 00:02:29.840
will actually know that that vet
variable of the type Vet, so
28

29
00:02:29.840 --> 00:02:34.610
that's just a little hint for IntelliJ
intellisense. It really doesn't affect how
29

30
00:02:34.610 --> 00:02:37.930
Thymeleaf functions at all.
30

31
00:02:39.200 --> 00:02:42.400
Now let's go ahead and
run this. We're going to bring it up in
31

32
00:02:42.400 --> 00:02:46.000
Spring Boot, start it up.
You can see Spring Boot is initialising
32

33
00:02:46.000 --> 00:02:50.950
there. We are going to be up and
running on port 8080. Now I'm going to
33

34
00:02:50.950 --> 00:02:55.690
toggle over to Chrome. Let's go ahead
and take a look at our vets. Switch to the
34

35
00:02:55.690 --> 00:03:01.000
url to vets.
Verify that we do get a List of Vets.
35

36
00:03:01.000 --> 00:03:06.310
You can see that I only have one Vet
being listed and I should have two. Let's
36

37
00:03:06.310 --> 00:03:12.160
go and take a look at that. Take a look
at the bootstrap loader. I can see
37

38
00:03:12.160 --> 00:03:16.540
the problem right away as the evils of
cut and paste. Not sure if you see it yet.
38

39
00:03:16.540 --> 00:03:21.040
But I did a cut and paste here and I got
caught. That's why you should never
39

40
00:03:21.040 --> 00:03:24.790
cut and paste because it can cause you
problems. Like here I had vet1 where
40

41
00:03:24.790 --> 00:03:29.080
should have been vet2. That is
definitely an error that was introduced
41

42
00:03:29.080 --> 00:03:35.350
by cut and paste. Let's go ahead and
restart Spring Boot. Verify that
42

43
00:03:35.350 --> 00:03:41.050
our data does load up properly.
It's initialising there.
43

44
00:03:41.050 --> 00:03:46.230
Let's toggle on over. take a look at
this in Chrome.
44

45
00:03:47.550 --> 00:03:53.250
I'm going to refresh the page, and now we can
see that I do in fact have two Vets
45

46
00:03:53.250 --> 00:03:58.070
listed here.
Let's just go ahead and recap what
46

47
00:03:58.070 --> 00:04:02.510
happened here. Just to reiterate there, I
had a problem. I did a cut and paste
47

48
00:04:02.510 --> 00:04:09.410
here. You can see there on line 55
that it previously was vet1, so I was
48

49
00:04:09.410 --> 00:04:14.330
saving that vet1 twice to the Map
so that was why it skipped giving us
49

50
00:04:14.330 --> 00:04:19.250
there. Just to recap everything that we
did here, we went in and added in the VetService
50

51
00:04:19.250 --> 00:04:23.930
and also added that in as a
constructor property, so the VetService
51

52
00:04:23.930 --> 00:04:31.820
gets wired up, and then on line 22 there,
we are bringing in the Model.
52

53
00:04:31.820 --> 00:04:35.930
Spring MVC will inject the Model.
We're going to add in the attribute of vets
53

54
00:04:35.930 --> 00:04:39.680
We're going to request that from the
implementation of the VetService that
54

55
00:04:39.680 --> 00:04:43.310
is injected into our controller,
so our Model now have a property called
55

56
00:04:43.310 --> 00:04:47.919
vets, that Thymeleaf we used to
iterate over.
56

57
00:04:47.919 --> 00:04:51.550
Let's go ahead and take a look at the
the template. You can see that I brought
57

58
00:04:51.550 --> 00:04:56.949
over a table. Then, there on line 21,
we are setting up an iterator in
58

59
00:04:56.949 --> 00:05:02.710
Thymeleaf to iterate over the vets property.
For each vet found in vet, we are
59

60
00:05:02.710 --> 00:05:08.050
going to output a table row for the
Thymeleaf template. That is what
60

61
00:05:08.050 --> 00:05:13.960
produces the table here in Thymeleaf, or
I should say, HTML Thymeleaf produces the
61

62
00:05:13.960 --> 00:05:18.969
HTML that we are seeing in the browser.
Go over and close issue #15. I'll
62

63
00:05:18.969 --> 00:05:22.319
go ahead and commit this into GitHub.
63

64
00:05:22.980 --> 00:05:28.740
Commit the directory. I'm going to update
the comment for Vets list and then we
64

65
00:05:28.740 --> 00:05:33.780
will say that we are closing issue
#15. I'm going to go ahead and Commit and
65

66
00:05:33.780 --> 00:05:38.070
Push that. That push action is going
to go ahead and close it in GitHub
66

67
00:05:38.070 --> 00:05:42.330
automatically. We'll see there how
to automatically change to close there
67

68
00:05:42.330 --> 00:05:44.630
for us.
