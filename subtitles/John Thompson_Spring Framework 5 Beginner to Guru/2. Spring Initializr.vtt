WEBVTT
0
1
00:00:04.700 --> 00:00:09.059
Alright now to jumpstart things, we
want to use the Spring Boot Initializr.
1

2
00:00:09.059 --> 00:00:13.349
And this is a website that's been
developed by the Spring team, where we
2

3
00:00:13.349 --> 00:00:17.130
can download a pre-configured project to
our specification. So I'm going to show
3

4
00:00:17.130 --> 00:00:21.689
you exactly how to do that. We're going
to go over the website, we'll specify
4

5
00:00:21.689 --> 00:00:27.359
what we want to include in our new
project, and by the end of this
5

6
00:00:27.359 --> 00:00:32.189
video, we will have a complete zip file
that is ready for our use to start some
6

7
00:00:32.189 --> 00:00:36.360
Spring application development. Okay I
want to introduce you to the Spring
7

8
00:00:36.360 --> 00:00:41.100
Initializr, which I always think is
spelled wrong but I think that is an
8

9
00:00:41.100 --> 00:00:44.489
accepted way of spelling initializr if
you're from Britain or something maybe.
9

10
00:00:44.489 --> 00:00:49.469
But what I want you to do is go over to
start.spring.io and this is where
10

11
00:00:49.469 --> 00:00:53.640
all of the things and  goodness of Spring are gonna start. And let me give you a little
11

12
00:00:53.640 --> 00:00:58.890
walkthrough here of this application. So
what it's going to do is allow us to
12

13
00:00:58.890 --> 00:01:04.949
select common stuff for a Spring project.
It will give us a downloadable
13

14
00:01:04.949 --> 00:01:10.890
zip file for us all
configured for that. So what I am going
14

15
00:01:10.890 --> 00:01:16.650
to do is show you some of the options
here. Now we have Maven or Gradle. I am
15

16
00:01:16.650 --> 00:01:23.009
going to use Maven, Gradle is cool. I go
between both of them. Right now, in the
16

17
00:01:23.009 --> 00:01:28.799
enterprise. we're probably still seeing
60-70 % of projects using Maven, Gradle
17

18
00:01:28.799 --> 00:01:33.659
is becoming very very popular. I hope
nobody's still using ant. That is just a
18

19
00:01:33.659 --> 00:01:39.479
new level awful but Maven is like an old
shoe, very easy to use and Gradle has
19

20
00:01:39.479 --> 00:01:45.240
really come a long way. So I'm going to
leave that as a Maven project. I am
20

21
00:01:45.240 --> 00:01:50.430
going to select the 2.0 snapshot so this
is before Spring 5. Now when I'm
21

22
00:01:50.430 --> 00:01:56.040
recording this, the first release
candidate for Spring Framework 5 came
22

23
00:01:56.040 --> 00:02:02.009
out and it is going to take Spring Boot 
a few months to catch up to that. So Spring
23

24
00:02:02.009 --> 00:02:06.689
5 is due to be released in July. Right
now, it is mid May that I'm recording
24

25
00:02:06.689 --> 00:02:11.190
this, the API is stable enough. I've been
playing with it. Everything that we're
25

26
00:02:11.190 --> 00:02:13.080
going to be doing, it's going to be just
fine.
26

27
00:02:13.080 --> 00:02:17.310
And I will go back and update the source
code. So, I will check this into github
27

28
00:02:17.310 --> 00:02:22.380
for our use. But for now, I am
going to grab the 2.0 snapshot and then
28

29
00:02:22.380 --> 00:02:28.110
will update that at some future time. Now
this is the group and then Java
29

30
00:02:28.110 --> 00:02:33.210
development is always your reversed of
your domain. So in my case, guru.springframework
30

31
00:02:33.210 --> 00:02:41.100
And let's call this spring5webapp. So we're just going to do
31

32
00:02:41.100 --> 00:02:46.350
very simple web application. Now you can
come in here and just type out different
32

33
00:02:46.350 --> 00:02:50.940
things, but I'm going to come down here
and switch over to the full version so
33

34
00:02:50.940 --> 00:02:57.240
we can see all the different options
here. So we are going to go with jar, Java
34

35
00:02:57.240 --> 00:03:03.000
one eight. Of course, we will be using
Java for this example. Now we want to do
35

36
00:03:03.000 --> 00:03:09.120
web, you don't need to get into the reactive web stuff yet. I'm not going to get into
36

37
00:03:09.120 --> 00:03:15.590
Spring Security or Web Services. It's
going to be pretty light. We will use JPA
37

38
00:03:15.590 --> 00:03:23.790
and that includes Spring Data JPA. The ORM
is hibernate so that is something
38

39
00:03:23.790 --> 00:03:30.300
that we definitely want to do. We
will use an H2, in memory database and
39

40
00:03:30.300 --> 00:03:37.410
let's bring in Thymeleaf. And this is a
interesting note here. The velocity
40

41
00:03:37.410 --> 00:03:41.730
template engine is starting to be
deprecated out of Spring. I don't think
41

42
00:03:41.730 --> 00:03:45.120
anything's happened in that project for
a while so I think the Spring team is
42

43
00:03:45.120 --> 00:03:50.340
showing them to pasture. And I think just
going through these, so we have a number
43

44
00:03:50.340 --> 00:03:55.739
NoSQL options. This is all advance Spring
stuff. You definitely don't need to
44

45
00:03:55.739 --> 00:04:01.530
get into off to, we're not going to get
into a Config Server. So a lot of this is
45

46
00:04:01.530 --> 00:04:05.220
for Spring Cloud and some advanced
things that we are not going to need.
46

47
00:04:05.220 --> 00:04:10.980
We're doing a very very simple web
application. Now we do have social things
47

48
00:04:10.980 --> 00:04:15.300
that we can do authentication with a lot
of different social networks extension
48

49
00:04:15.300 --> 00:04:20.970
for Spring Security, which we are also
not doing on this project. Let's go
49

50
00:04:20.970 --> 00:04:26.460
ahead and we will take in Spring Boot
Actuator. I actually have an entire course
50

51
00:04:26.460 --> 00:04:31.199
Spring Boot Actuator. It's a pretty cool
tool. So I'm going to say generate
51

52
00:04:31.199 --> 00:04:38.009
that project and we can see that I am
getting a zip file downloaded for
52

53
00:04:38.009 --> 00:04:42.630
our use. Okay, you saw how easy it was that we created a zip
53

54
00:04:42.630 --> 00:04:46.650
file, we got a zip file down from the
website and this zip file contains a
54

55
00:04:46.650 --> 00:04:51.030
basic project, a starter project for us
to jumpstart our web application
55

56
00:04:51.030 --> 00:04:54.080
development with Spring Boot.
