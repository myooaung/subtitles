WEBVTT
0
1
00:00:04.220 --> 00:00:08.790
Alright! In this video, what we want to
do is we want to go in and we are going
1

2
00:00:08.790 --> 00:00:14.670
to tackle number 46 here, the create
visit map service. This is an entity that
2

3
00:00:14.670 --> 00:00:17.910
we added late in the process, so I'm
going to go ahead and assign that to
3

4
00:00:17.910 --> 00:00:22.199
myself and we will get started on that
so I'm going to come over here to
4

5
00:00:22.199 --> 00:00:27.570
IntelliJ now. It's going to be in the
the data, so remember we have the
5

6
00:00:27.570 --> 00:00:32.629
models. We have the Visit entity, so we're
going to create a map service for this.
6

7
00:00:32.629 --> 00:00:36.739
Let's go ahead and bring up the
OwnerMapService and take a look at
7

8
00:00:36.739 --> 00:00:41.600
what we did there, so just as a reminder,
what we did is we extended out the
8

9
00:00:41.600 --> 00:00:46.010
AbstractMapService and we implemented
the OwnerService, so I'm going to split
9

10
00:00:46.010 --> 00:00:49.640
screen this just so we have it as
reference.
10

11
00:00:49.640 --> 00:00:56.680
I'm going to copy this, like so.
Let's see here.
11

12
00:00:56.680 --> 00:01:07.030
We are going to need a visit service,
so come in here and create a VisitService.
12

13
00:01:10.030 --> 00:01:13.909
We need to create that interface so
we'll be implementing.
13

14
00:01:13.909 --> 00:01:17.659
Remember, the VetService, that
implements the CrudService with the
14

15
00:01:17.659 --> 00:01:21.759
type and Long so we'll go ahead and say...
15

16
00:01:25.590 --> 00:01:31.189
like so. So that creates the interface
for us. Let's go and start on the
16

17
00:01:31.189 --> 00:01:34.189
implementation.
I'm just
17

18
00:01:37.040 --> 00:01:39.890
going to follow the naming convention
here so we have VetMapService,
18

19
00:01:39.890 --> 00:01:45.910
SpecialtyMapService so I'm going to say
VisitMapService, and say okay.
19

20
00:01:47.689 --> 00:01:52.230
We won't import
those because we want to change those
20

21
00:01:52.230 --> 00:01:57.810
so our VisitMapService is are going to
extend out our AbstractMapService.
21

22
00:01:57.810 --> 00:02:03.840
We want to make that Visit. That is
going to implement the
22

23
00:02:03.840 --> 00:02:10.200
VisitService. Get rid of that owner
import. Now we need to go ahead and
23

24
00:02:10.200 --> 00:02:14.450
implement those.
I'm just using IntelliJ to say
24

25
00:02:14.450 --> 00:02:18.470
implement the methods, so these are the
different methods that we have to
25

26
00:02:18.470 --> 00:02:23.990
implement. Down at the bottom of the
screen, I'm showing you where we have the
26

27
00:02:23.990 --> 00:02:30.460
actual service available so or one of
the written services.
27

28
00:02:31.850 --> 00:02:34.120
So for this, that Set is going to be a
28

29
00:02:35.660 --> 00:02:38.350
Visit.
29

30
00:02:42.150 --> 00:02:49.910
Let's simply implement the findAll.
This is going to implement a Visit.
30

31
00:02:49.910 --> 00:02:55.709
An id property is going to be a Long. We
can see here, that we are just going to do
31

32
00:02:55.709 --> 00:03:00.640
the super on that.
Just going through
32

33
00:03:00.800 --> 00:03:03.580
implementing these.
33

34
00:03:04.010 --> 00:03:09.050
Now a Visit should not ever have a Visit.
Let's take a quick look at the Visit.
34

35
00:03:09.050 --> 00:03:14.620
Visit entity here.
35

36
00:03:15.120 --> 00:03:20.460
That's already open. So a Visit
just as a description but it also has a
36

37
00:03:20.460 --> 00:03:22.970
Pet.
37

38
00:03:23.040 --> 00:03:30.180
A Pet is a little more of a complex
object. Pet is going to belong to an
38

39
00:03:30.180 --> 00:03:35.760
Owner. We don't want to get into
persisting all that, so we can make a
39

40
00:03:35.760 --> 00:03:40.260
rule like this is our own class that
we're implementing. You can see here,
40

41
00:03:40.260 --> 00:03:45.510
we are allowing the owner to have pets
added in and we'd persist the pets with
41

42
00:03:45.510 --> 00:03:49.500
that. But here, we don't have enough
information to actually persist the
42

43
00:03:49.500 --> 00:03:54.459
owner. So on this case, we are going to be
taking a...
43

44
00:03:54.459 --> 00:03:59.530
and we'll be taking in that object
that's going to be a Visit. I'm just
44

45
00:03:59.530 --> 00:04:02.189
going to rename that.
45

46
00:04:02.700 --> 00:04:11.290
We can say if visit.getPet()
or a visit...
46

47
00:04:13.640 --> 00:04:18.950
I'm just putting in some tests here to say
if the visit pet is null, or if the visit
47

48
00:04:18.950 --> 00:04:26.170
pet owner is null, or a visit.getPet.
48

49
00:04:26.710 --> 00:04:30.750
getId() equals null,
49

50
00:04:37.360 --> 00:04:41.070
I'm just going to say new....
50

51
00:04:42.490 --> 00:04:46.960
I'm just saying we need to have those
properties in here.
51

52
00:04:46.960 --> 00:04:49.020
IntelliJ is warning me that I have
52

53
00:04:50.470 --> 00:04:55.600
a duplicate there, so I'm saying if the
pet is null or if the owner is null or
53

54
00:04:55.600 --> 00:05:00.910
if the pet ID is null or if the pet
owner ID is null, we're going to throw an
54

55
00:05:00.910 --> 00:05:05.200
exception there. We just want to
make sure that we have all that
55

56
00:05:05.200 --> 00:05:09.550
stuff in there before we try to save
this visit, so that's going to be a
56

57
00:05:09.550 --> 00:05:17.160
validation for our map implementation. So
now, what we can do here is
57

58
00:05:20.860 --> 00:05:25.810
and so our superclass, the abstract
map class that we have, is going to go
58

59
00:05:25.810 --> 00:05:32.250
ahead and implement that.
We're going to take in a Visit.
59

60
00:05:33.980 --> 00:05:40.510
That implements that. That's also going
to take in a Long property.
60

61
00:05:40.720 --> 00:05:48.220
And now we're going to say deleteById(). That's going to take an ID property and now everything's happy
61

62
00:05:48.220 --> 00:05:51.950
there.
We can see here that we've come and
62

63
00:05:51.950 --> 00:05:56.330
implemented, This one was pretty simple. I
just set up a little defensive coding
63

64
00:05:56.330 --> 00:06:02.240
there to make sure that we do have a
properly formed object coming in. So we
64

65
00:06:02.240 --> 00:06:05.540
are doing some validation. That's some
very basic validation. We want to make
65

66
00:06:05.540 --> 00:06:11.720
sure that we do have a proper object
coming into our save method so that will
66

67
00:06:11.720 --> 00:06:15.500
work out for us.
At this point, I'm going to consider
67

68
00:06:15.500 --> 00:06:20.480
at this task done. We might have to 
revisit it. We may have to enhance it.
68

69
00:06:20.480 --> 00:06:25.240
This is number 46. We'll go ahead and
close that.
69

70
00:06:31.510 --> 00:06:37.360
I'm going to go ahead and commit and 
push that up to the GitHub.
70

71
00:06:37.410 --> 00:06:41.230
That's going up
there and that should close out the task
71

72
00:06:41.230 --> 00:06:44.400
for us here in a second.
72

73
00:06:44.470 --> 00:06:49.180
I think I forgot to tag the issue there,
so I'm going to go ahead and close that
73

74
00:06:49.180 --> 00:06:51.420
out.
74

75
00:06:53.449 --> 00:06:58.370
That was my mistaken, not adding the
number 46 to the commit message.
75

76
00:06:58.370 --> 00:07:02.860
Otherwise, I would have closed out
automatically inside a GitHub.
