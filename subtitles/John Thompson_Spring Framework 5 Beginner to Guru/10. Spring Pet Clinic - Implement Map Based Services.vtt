WEBVTT
0
1
00:00:04.069 --> 00:00:09.030
In this video, what we are going to do is,
look at implementing these Map Based
1

2
00:00:09.030 --> 00:00:14.099
Services, so I've got the issue up and
I'm going to assign it to myself, say that I
2

3
00:00:14.099 --> 00:00:17.810
am actually working on this right now.
What I'm going to do is toggle over to
3

4
00:00:17.810 --> 00:00:22.439
IntelliJ and we will go ahead and
implement this. So you can see that I
4

5
00:00:22.439 --> 00:00:27.539
have my CrudService is up. Let's make
this a little elegant. Under the
5

6
00:00:27.539 --> 00:00:32.360
services, I'm going to create a New
Package. I'm just going to call it map
6

7
00:00:32.360 --> 00:00:36.719
because i remember, ultimately, what I
said we want to do here is we're going
7

8
00:00:36.719 --> 00:00:41.280
to have a map implementation, a Spring
Data JPA Implementation. I hope to
8

9
00:00:41.280 --> 00:00:45.480
actually provide a straight JDBC
implementations or working with
9

10
00:00:45.480 --> 00:00:49.410
raw hibernate. I think that's lacking from
the course right now, so we'll see all
10

11
00:00:49.410 --> 00:00:53.730
three implementations of that to show you
how to do each one and ultimately we
11

12
00:00:53.730 --> 00:00:57.600
will be using Spring Profiles to control
the configuration. But the first one we
12

13
00:00:57.600 --> 00:01:03.270
want build is this map service. Let's go
ahead and say new Java class. I'm going
13

14
00:01:03.270 --> 00:01:06.320
to call this Abstract..
Let me go ahead and add
14

15
00:01:08.409 --> 00:01:14.119
that in.
I'm going to make this abstract.
15

16
00:01:14.119 --> 00:01:18.679
What we want to do is go ahead, and
just like the interfaces, we are going to
16

17
00:01:18.679 --> 00:01:23.420
take in a type and an ID. We'll just call
that ID for the generic. Okay, so let's go
17

18
00:01:23.420 --> 00:01:30.709
in and do protected, I'm going to say Map and we
want to take in the ID value and then
18

19
00:01:30.709 --> 00:01:36.780
the type.
I'm just going to call that map. We just
19

20
00:01:36.900 --> 00:01:39.200
default that to
20

21
00:01:39.760 --> 00:01:44.140
a new HashMap. We're just going to
use the standard Java HashMap and we'll
21

22
00:01:44.140 --> 00:01:48.850
be adding in properties and taking away
property so this hashmap is going to
22

23
00:01:48.850 --> 00:01:53.320
get the generics of the ID and then the
type. So now let's go ahead and implement
23

24
00:01:53.320 --> 00:01:59.460
the findAll and that's going to return
back us a Set of the type
24

25
00:02:05.940 --> 00:02:10.750
so the findAll that's just going to
return back a new HashSet of the values.
25

26
00:02:10.750 --> 00:02:17.370
We have findById which is going to
return back the Type. That's going to take in
26

27
00:02:18.760 --> 00:02:27.340
the ID and here we just do map get id
like so. So that we return back that
27

28
00:02:27.340 --> 00:02:33.239
object out of the map. In here, what we
can do is a save operations of the save
28

29
00:02:33.239 --> 00:02:38.970
that returns back the type, takes in the
type.
29

30
00:02:39.340 --> 00:02:42.849
I'm just saying object there because we
really don't know what's coming in
30

31
00:02:42.849 --> 00:02:45.760
because of the generics. Now we can say
map.put().
31

32
00:02:45.760 --> 00:02:52.239
Because we don't know
the specific object, we're going to have to
32

33
00:02:52.239 --> 00:03:01.890
override this a little bit. What we
can do is ID id. No comma there.
33

34
00:03:02.140 --> 00:03:09.209
Now let's going to do id,object.
Now
34

35
00:03:09.590 --> 00:03:14.430
just return the object. Then we also
did a delete
35

36
00:03:14.430 --> 00:03:18.500
so it's going to be a void.
36

37
00:03:27.230 --> 00:03:31.670
So that just removes from the map like
so. Then we also want to implement the
37

38
00:03:31.670 --> 00:03:38.410
delete by object. That gets a little more
tricky so we wanted to a void.
38

39
00:03:39.670 --> 00:03:45.010
And here, we
are going to do T, object
39

40
00:03:45.050 --> 00:03:51.290
like so,
and now what we want to do is map.entrySet() dot remove
40

41
00:03:51.290 --> 00:03:56.379
and we will say
41

42
00:03:56.790 --> 00:04:05.740
entry. This is Java 8
Lambda goodness and say
42

43
00:04:05.740 --> 00:04:10.370
entry get value dot equals, and now I will say
object
43

44
00:04:10.569 --> 00:04:14.490
and terminate that
so get that all in one statement.
44

45
00:04:14.490 --> 00:04:19.260
What's going to be important as we go
forward, our entities are going to have
45

46
00:04:19.260 --> 00:04:23.389
to implement a proper equals method and
we'll do that in an upcoming video.
46

47
00:04:24.380 --> 00:04:28.490
Actually I am going to create a task for
that right now.
47

48
00:04:30.449 --> 00:04:34.710
Come back here to issues.
New issue.
48

49
00:04:38.370 --> 00:04:42.720
So we don't forget to do that, I am
creating an issue because we do
49

50
00:04:42.720 --> 00:04:47.280
want to have a proper equals method so
we'll add that to our task list.
50

51
00:04:47.280 --> 00:04:52.710
Let's come back over to this, so this
gives us here now a base Map Service
51

52
00:04:52.710 --> 00:04:56.700
that we can implement. You can see that I
created a New Package for it.
52

53
00:04:56.700 --> 00:05:03.390
What we want to do is implement some
special concrete implementations of it
53

54
00:05:03.390 --> 00:05:09.920
so let's go ahead and implement for.
We'll do Owner first.
54

55
00:05:11.530 --> 00:05:16.789
You can see here, I'm saying the OwnerMapService. I could do OwnerMapServiceImpl,
55

56
00:05:16.789 --> 00:05:23.169
but we can see that it does
OwnerService and actually let's just do,
56

57
00:05:23.169 --> 00:05:29.300
followed a slightly different convention there.
We will do OwnerServiceMap so
57

58
00:05:29.300 --> 00:05:35.349
that we will do that. We'll add that in
to Git.
58

59
00:05:35.350 --> 00:05:44.230
We'll say that it extends the AbstractMapService and now we are going to do
59

60
00:05:44.230 --> 00:05:48.810
the type of Owner and Long
60

61
00:05:52.400 --> 00:05:56.150
implements
61

62
00:05:56.220 --> 00:06:03.440
CrudService, also Owner
62

63
00:06:05.660 --> 00:06:08.500
like so.
63

64
00:06:11.100 --> 00:06:14.810
We will say Implement Methods. And now what we need to do is
64

65
00:06:18.130 --> 00:06:22.210
go ahead and say...
65

66
00:06:24.820 --> 00:06:29.259
So we can see that we're going through
implementing the Set,
66

67
00:06:33.050 --> 00:06:39.830
and now I just need to go in on IntelliJ
didn't get all the generics proper
67

68
00:06:39.830 --> 00:06:43.480
there so I'll do findById,
68

69
00:06:43.710 --> 00:06:46.699
like so.
69

70
00:07:11.360 --> 00:07:16.969
I can see I've gone in and implemented
all the methods and essentially what we
70

71
00:07:16.969 --> 00:07:23.840
do is we have a hard class OwnerService.
It is going to extend out the
71

72
00:07:23.840 --> 00:07:29.629
AbstractMapService class and implement
that CrudService interface. I can
72

73
00:07:29.629 --> 00:07:33.379
see I made a mistake here. You can see
that a recurses indefinitely.
73

74
00:07:33.379 --> 00:07:39.139
Rather than this, because I am
extending out the Abstract Map, what
74

75
00:07:39.139 --> 00:07:46.090
I need to do is say super, rather than
this. So that was my mistake.
75

76
00:07:50.410 --> 00:07:54.780
So small mistake there.
76

77
00:07:58.110 --> 00:08:04.220
Our save method
is not happy taking in the Object.
77

78
00:08:07.680 --> 00:08:14.100
Okay so that is actually looking for the
ID, so that was my mistake here
78

79
00:08:14.100 --> 00:08:19.050
because we have the Owner, because we're
passing in a generic object, it didn't
79

80
00:08:19.050 --> 00:08:25.800
know, so I have to say like so. So one
one small mistake there. So now this is
80

81
00:08:25.800 --> 00:08:30.840
going to be happy. I'm not seeing any further
error. The one more thing that we need
81

82
00:08:30.840 --> 00:08:35.580
to do is go in and implement this for
Person and Vet. What I'm going to do
82

83
00:08:35.580 --> 00:08:40.260
just a expedite time, I'm going to go
ahead and pause the video and then we'll
83

84
00:08:40.260 --> 00:08:43.830
do a quick code review because next
couple implementations are going to be a
84

85
00:08:43.830 --> 00:08:47.580
cookie cutter, so let me go ahead and
implement those and do a quick code
85

86
00:08:47.580 --> 00:08:54.180
review and I will be right back. I know.
Give it a second. I swear, I'm not even
86

87
00:08:54.180 --> 00:08:59.459
moving. It's just doing this on its own.
Okay, I've gone in and implemented the
87

88
00:08:59.459 --> 00:09:05.130
additional implementations of our
Abstract Map for both Vet and Pet
88

89
00:09:05.130 --> 00:09:09.690
service. You'll see that these look
strikingly similar to each other. So now
89

90
00:09:09.690 --> 00:09:13.770
we have of VetServiceMap extends out
Abstract Map implements CrudService.
90

91
00:09:13.770 --> 00:09:20.640
Looking at this, we probably could make
the Abstract Map implement CrudService
91

92
00:09:20.640 --> 00:09:23.580
arguably.
That could be a nice refactoring to do
92

93
00:09:23.580 --> 00:09:28.110
at some point in the future. I'm kind of
split on which way to go with that.
93

94
00:09:28.110 --> 00:09:31.890
This feels okay to me for right now.
Maybe we'll change that in the
94

95
00:09:31.890 --> 00:09:35.550
future. There could be some benefits. But
right now, the way I'm looking at this
95

96
00:09:35.550 --> 00:09:39.089
code, it's kind of a coin toss. I do
feel we have a much cleaner
96

97
00:09:39.089 --> 00:09:43.820
implementation for our little Map
Service here.
97

98
00:09:45.440 --> 00:09:50.260
I made a couple mistakes there.
98

99
00:09:50.490 --> 00:09:54.530
Forgot to implement super.
99

100
00:09:55.790 --> 00:10:00.260
You can see that IntelliJ was highlighting
that for me. Let's double check the
100

101
00:10:00.260 --> 00:10:06.260
VetService, super super super.
Everything's super. Thanks for asking.
101

102
00:10:06.260 --> 00:10:13.940
Little South Park quote there. So this is
implemented everything. We can see the
102

103
00:10:13.940 --> 00:10:19.220
PetServiceMap and I am not seeing
anything else I want to implement here
103

104
00:10:19.220 --> 00:10:25.880
so I'm going to call this good. Let's
toggle over that was issue #6.
104

105
00:10:25.880 --> 00:10:31.930
So let's come back over here and I'm
going to go ahead and commit that.
105

106
00:10:38.190 --> 00:10:43.600
We do a Commit and Push and get
that up to GitHub. Now let's come over
106

107
00:10:43.600 --> 00:10:49.290
here, so you got change right away maybe.
107

108
00:10:49.420 --> 00:10:55.060
That is pushed
and now we can see that is closed.
108

109
00:10:55.060 --> 00:11:00.500
If I refresh this, I will drop off
the page. There we go. So that completes
109

110
00:11:00.500 --> 00:11:06.850
that task and that will be inside of
GitHub. It's for your reference.
