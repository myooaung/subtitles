WEBVTT
0
1
00:00:03.950 --> 00:00:07.680
Alright! In this video, we are gonna
take a look at customizing Swagger a
1

2
00:00:07.680 --> 00:00:11.030
little bit further. There's a lot of
options that we can utilize for
2

3
00:00:11.030 --> 00:00:16.170
customization. Here, we're gonna look
at doing some customization of the
3

4
00:00:16.170 --> 00:00:22.920
Customer Controller. So, you can see right
now, if I come in here and show it, you
4

5
00:00:22.920 --> 00:00:27.869
can see that, it's doing a lot of
reflection for us. So, you can see here,
5

6
00:00:27.869 --> 00:00:32.520
like the CustomerDTO string, optional
but not a lot of description there. This
6

7
00:00:32.520 --> 00:00:37.170
is what it can reflect from our code, so
that it's doing reflection to build up
7

8
00:00:37.170 --> 00:00:41.760
this based on the Java object model
underneath. But, we can make it a little
8

9
00:00:41.760 --> 00:00:45.239
bit more friendly. I'm gonna show
you some of the options that we have
9

10
00:00:45.239 --> 00:00:52.260
here. So let's toggle over to IntelliJ,
and I've got the CustomerController up
10

11
00:00:52.260 --> 00:00:56.579
here, so we'll be customizing that in
this video. I can come up here and
11

12
00:00:56.579 --> 00:01:06.049
use the annotation @Api, and that's gonna want to import it all the Swagger.
12

13
00:01:09.630 --> 00:01:13.710
So, I'm gonna change that name. We'll
give it quick bounce to Spring Boot.
13

14
00:01:13.710 --> 00:01:20.240
I should install it developer tools for
this so it automatically restarts.
14

15
00:01:20.259 --> 00:01:25.479
So we have almost back up and running.
Toggle over here. Take a quick look at
15

16
00:01:25.479 --> 00:01:30.719
how this change. So, notice the customer-controller.
16

17
00:01:31.030 --> 00:01:35.890
Now, we can see that, I've got that full
description, that This is my Customer
17

18
00:01:35.890 --> 00:01:39.940
Controller. So, gives you some options. But
there's a number of other things that we
18

19
00:01:39.940 --> 00:01:44.910
can do as well. Let's come over here
19

20
00:01:47.380 --> 00:01:52.530
and we have the Api value annotation.
20

21
00:01:55.869 --> 00:02:01.060
So, I'm saying this will get a list of
customers, and then, this also has a notes
21

22
00:02:01.060 --> 00:02:04.860
property, that we can utilize.
22

23
00:02:10.020 --> 00:02:14.090
So we can add in some notes about the
API,
23

24
00:02:14.090 --> 00:02:18.160
and let's go ahead and restart now.
24

25
00:02:19.870 --> 00:02:24.510
I'll show you. Show you those that take effect
here
25

26
00:02:24.580 --> 00:02:27.420
into a refresh.
26

27
00:02:27.460 --> 00:02:32.270
Now, we can see, there's that. This will
get a list of the customers, and if I
27

28
00:02:32.270 --> 00:02:37.100
expand on that, we can see here are some
implementation notes right in the API
28

29
00:02:37.100 --> 00:02:41.720
so it gives us some nice flexibility
there. And then also, we can do some
29

30
00:02:41.720 --> 00:02:47.680
annotations on the model, as well. So,
let's come over here to the CustomerDTO
30

31
00:02:47.680 --> 00:02:51.340
and we can say
31

32
00:02:51.710 --> 00:02:55.210
@ApiModelProperty.
32

33
00:02:59.709 --> 00:03:08.159
And it's not required by default, but
we can say, say required = true.
33

34
00:03:08.250 --> 00:03:11.370
I'll show you how this changes. Because
what's happening is, when we come
34

35
00:03:11.370 --> 00:03:16.909
over here to the post,
bring this up and see that the model,
35

36
00:03:16.909 --> 00:03:20.959
let's use pure reflection there,
and everything's optional. And I'm gonna
36

37
00:03:20.959 --> 00:03:24.799
add in some nodes on that. So, let's come
in and bounce Spring Boot. So I'm saying
37

38
00:03:24.799 --> 00:03:31.390
this is firstname, required = true.
We should see that show up.
38

39
00:03:34.620 --> 00:03:38.330
Come over here to model.
39

40
00:03:38.400 --> 00:03:43.670
And here, you can see my note there and
this is a firstname.
40

41
00:03:43.670 --> 00:03:48.010
I'm not seeing the required property.
41

42
00:03:50.180 --> 00:03:54.590
So, no longer says optional see. So, not 
very clear in the documentation. I
42

43
00:03:54.590 --> 00:03:59.409
did set it required. So, let's try that
with lastname, as well.
43

44
00:03:59.880 --> 00:04:04.040
I just want to see if that, so this is
required.
44

45
00:04:05.060 --> 00:04:09.590
You can see that there's some other
ones here. I don't know what exactly what
45

46
00:04:09.590 --> 00:04:13.550
all of these do. The most useful ones are,
obviously, the description, and whether or
46

47
00:04:13.550 --> 00:04:19.220
not, it's allowed datatype that can be an
odd one, because we are doing reflection
47

48
00:04:19.220 --> 00:04:23.480
there for datatype. So, I don't know how
much you would get use out of that. So,
48

49
00:04:23.480 --> 00:04:28.120
let's go ahead and bounce Spring Boot.
49

50
00:04:29.639 --> 00:04:34.310
I just wanna see that one property
change there.
50

51
00:04:37.130 --> 00:04:41.690
The lastname is still showing up as
optional, unfortunately. So, some of the
51

52
00:04:41.690 --> 00:04:46.390
values here can get a little
quirky.
52

53
00:04:49.400 --> 00:04:54.840
I am running on Spring 5. I've
actually been talking to the author of
53

54
00:04:54.840 --> 00:05:00.180
Spring Fox a little bit on GitHub, and
it's not been fully tested with Spring 5.
54

55
00:05:00.180 --> 00:05:03.810
So, some of these quirks could be because
I'm using Spring 5 and they haven't
55

56
00:05:03.810 --> 00:05:11.050
designed for Spring 5 release yet. So,
this is an area that's evolving.
56

57
00:05:11.050 --> 00:05:16.560
Well, that is still showing up as
optional, unfortunately.
57

58
00:05:17.060 --> 00:05:21.470
So, I'm not sure why that is coming up as
optional. It should not be but
58

59
00:05:21.470 --> 00:05:26.820
we did get the description there.
Oh required.
59

60
00:05:26.820 --> 00:05:34.090
That is my mistake there. So, let's just
get rid of that. So now, I know why it was
60

61
00:05:34.090 --> 00:05:38.870
not showing up as optional. So, a little
mistake there in coding.
61

62
00:05:42.820 --> 00:05:47.200
Now, let's take a look see that that
property does show up. Now, in testing,
62

63
00:05:47.200 --> 00:05:50.560
what I was saying that, I was testing out
some of these other attributes that you
63

64
00:05:50.560 --> 00:05:55.600
can use with the annotations, and I did
run into a couple quirks with it. So, and
64

65
00:05:55.600 --> 00:06:01.000
I think that's probably because of
Spring 5. So now, we can see that the
65

66
00:06:01.000 --> 00:06:06.010
optional is gone from lastname, like I
expect it to do so. Funny how things work
66

67
00:06:06.010 --> 00:06:10.150
out a lot better, when you actually pay
attention to exactly what you're doing
67

68
00:06:10.150 --> 00:06:14.680
it, rather than seeing wanting to see
that what you expect to see. So, this is
68

69
00:06:14.680 --> 00:06:19.930
the Swagger annotations. A lot of
power here is as to what you can
69

70
00:06:19.930 --> 00:06:26.920
set up and control. I highly recommend
checking out the documentation. And like
70

71
00:06:26.920 --> 00:06:31.870
I said earlier, I was testing this out
with Spring 5. I had things working on
71

72
00:06:31.870 --> 00:06:36.610
Spring 4. There's additional attributes
that you can set under Spring 4, they
72

73
00:06:36.610 --> 00:06:41.080
were working. Under Spring 5, they are not.
They are working on another release of
73

74
00:06:41.080 --> 00:06:47.170
the Spring Fox plug-in, so this is
December 2017, right now. 2.7 just came
74

75
00:06:47.170 --> 00:06:51.550
out there, trying to get 2.8 out the
door. That is gonna be coming out
75

76
00:06:51.550 --> 00:06:56.950
any day now, I believe. And then after
that, they are going to get on supporting
76

77
00:06:56.950 --> 00:07:01.450
Spring 5. So, this plugin, is gonna
continue evolving. Remember, Spring 5, at
77

78
00:07:01.450 --> 00:07:05.890
the time recording, is very new to the
market, and a lot of the projects that
78

79
00:07:05.890 --> 00:07:11.140
depend on Spring are catching up to the
new release of Spring. So, it's gonna
79

80
00:07:11.140 --> 00:07:15.900
take some time for the entire Spring
ecosystem to get all caught up.
