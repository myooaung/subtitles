WEBVTT
0
1
00:00:05.271 --> 00:00:06.740
All right, in this video we are gonna look at
1

2
00:00:06.740 --> 00:00:09.815
refactoring our data model for MongoDB
2

3
00:00:09.815 --> 00:00:11.315
to not use DBRefs.
3

4
00:00:12.536 --> 00:00:15.485
And this is in relation to the "Reactive Driver does not
4

5
00:00:15.485 --> 00:00:17.480
support DBRefs" I imagine that's something
5

6
00:00:17.480 --> 00:00:21.420
internal to MongoDB because the team does not use that.
6

7
00:00:21.420 --> 00:00:25.216
Just to recap, you can see down on the bottom of the screen
7

8
00:00:25.216 --> 00:00:27.669
here a comment from Oliver Gierke,
8

9
00:00:27.669 --> 00:00:29.853
he's on the Spring Data team, he's one of the leaders there
9

10
00:00:29.853 --> 00:00:33.097
real sharp guy, he mentions that DBRefs are not recommended
10

11
00:00:33.097 --> 00:00:36.723
by the MongoDB team and sometimes it's useful to use them
11

12
00:00:36.723 --> 00:00:40.082
but in our data model we're only using them for references,
12

13
00:00:40.082 --> 00:00:42.645
so pretty easy to refactor them out.
13

14
00:00:42.645 --> 00:00:44.319
So, I'm gonna go over to IntelliJ
14

15
00:00:44.319 --> 00:00:45.529
I've already done the coding,
15

16
00:00:45.529 --> 00:00:47.101
but we're gonna step through that.
16

17
00:00:47.101 --> 00:00:49.814
And what we've got here
17

18
00:00:49.814 --> 00:00:50.874
as you can see
18

19
00:00:50.874 --> 00:00:53.390
I've removed the DBRef annotation
19

20
00:00:53.390 --> 00:00:56.390
here on Category, Ingredient as well.
20

21
00:00:57.505 --> 00:01:00.318
So you can see that has now gone off of the UnitOfMeasure.
21

22
00:01:00.318 --> 00:01:03.549
And Recipe, ofcourse, had a reference to Category,
22

23
00:01:03.549 --> 00:01:05.621
don't want a debug point
23

24
00:01:05.621 --> 00:01:07.149
I'll show you the change there.
24

25
00:01:07.149 --> 00:01:09.315
And just as a quick tip here, I don't know
25

26
00:01:09.315 --> 00:01:10.922
if you knew that you could do this
26

27
00:01:10.922 --> 00:01:13.903
inside of IntelliJ, but I can come over here
27

28
00:01:13.903 --> 00:01:16.758
and come to, just did a right-click
28

29
00:01:16.758 --> 00:01:19.516
and I'm gonna go down to "Compare with Branch"
29

30
00:01:19.516 --> 00:01:22.617
and our last branch was refactor-ingredient-service
30

31
00:01:22.617 --> 00:01:24.694
and what I can do is come up here
31

32
00:01:24.694 --> 00:01:27.030
and now I can see each one of these.
32

33
00:01:27.030 --> 00:01:28.583
If I double-click on that,
33

34
00:01:28.583 --> 00:01:30.674
it'll bring me up a comparison screen.
34

35
00:01:30.674 --> 00:01:33.314
So, a real quick way that you can go in
35

36
00:01:33.314 --> 00:01:35.272
and compare and contrast what's going on
36

37
00:01:35.272 --> 00:01:38.581
with changes so you can see changes along the way.
37

38
00:01:38.581 --> 00:01:41.741
And I can come in here and we can see that
38

39
00:01:41.741 --> 00:01:43.283
I actually made a number of changes
39

40
00:01:43.283 --> 00:01:45.963
to the IngredientRepository, so actually
40

41
00:01:45.963 --> 00:01:48.210
I'd like to use this and step through it.
41

42
00:01:48.210 --> 00:01:50.987
So I've now removed the non-reactive
42

43
00:01:50.987 --> 00:01:53.186
RecipeRepository from this,
43

44
00:01:53.186 --> 00:01:57.374
so I can see now I have no longer the RecipeRepository
44

45
00:01:57.374 --> 00:01:58.965
is being injected but I do have
45

46
00:01:58.965 --> 00:02:01.614
the ReactiveRepository remaining
46

47
00:02:01.614 --> 00:02:05.243
and got rid of some of the commented-out code there,
47

48
00:02:05.243 --> 00:02:08.241
you can see there on the left-hand-side, that is gone.
48

49
00:02:08.241 --> 00:02:10.871
And you can see that we were using
49

50
00:02:10.871 --> 00:02:13.462
the traditional repository where we're getting
50

51
00:02:13.462 --> 00:02:16.813
an Optional back, now we are going to get a Mono back
51

52
00:02:16.813 --> 00:02:19.592
and you can see on line 57 there
52

53
00:02:19.592 --> 00:02:21.995
when we go to save that Ingredient command,
53

54
00:02:21.995 --> 00:02:24.736
we are doing a block, so this is because
54

55
00:02:24.736 --> 00:02:27.425
we need to do some business logic against it.
55

56
00:02:27.425 --> 00:02:29.555
Probably, might be able to get away with doing something
56

57
00:02:29.555 --> 00:02:31.443
a little fancier here with the reactive stuff
57

58
00:02:31.443 --> 00:02:35.157
I'm not quite there yet, but we do wanna apply some
58

59
00:02:35.157 --> 00:02:39.162
business logic and modify that object as we are
59

60
00:02:39.162 --> 00:02:41.381
trying to save that IngredientCommand.
60

61
00:02:41.381 --> 00:02:44.250
So we're gonna update the Ingredients on the Recipe object
61

62
00:02:44.250 --> 00:02:46.344
and then finally down here
62

63
00:02:46.344 --> 00:02:49.140
no further changes there
63

64
00:02:49.140 --> 00:02:51.760
and then in the delete method we had
64

65
00:02:51.760 --> 00:02:54.727
a few more changes, again we went from
65

66
00:02:54.727 --> 00:02:57.989
just doing a findById but now we need to do a
66

67
00:02:57.989 --> 00:03:00.539
findById and then block to get that object,
67

68
00:03:00.539 --> 00:03:01.406
the Recipe object,
68

69
00:03:01.406 --> 00:03:04.276
because in the delete of an Ingredient, remember
69

70
00:03:04.276 --> 00:03:06.767
we're updating, we're actually doing an update to
70

71
00:03:06.767 --> 00:03:09.722
a document inside of MongoDB.
71

72
00:03:09.722 --> 00:03:12.353
You can see here also on line 136
72

73
00:03:12.353 --> 00:03:16.161
went from doing just the save and then here
73

74
00:03:16.161 --> 00:03:18.197
we're doing a save and a block.
74

75
00:03:18.197 --> 00:03:19.969
That block is going to block it
75

76
00:03:19.969 --> 00:03:22.890
and tell it to execute, cause if you forget to
76

77
00:03:22.890 --> 00:03:25.256
do that block on a save operation,
77

78
00:03:25.256 --> 00:03:27.178
the save doesn't persist until
78

79
00:03:27.178 --> 00:03:29.675
something actually triggers that change.
79

80
00:03:29.675 --> 00:03:32.175
Let's go ahead and close this.
80

81
00:03:33.632 --> 00:03:35.623
Also, come down here
81

82
00:03:35.623 --> 00:03:38.074
and I'm gonna do the same thing here,
82

83
00:03:38.074 --> 00:03:40.801
come into Git, Compare with Branch,
83

84
00:03:40.801 --> 00:03:44.260
and we'll go back to that refactor-ingredient-service
84

85
00:03:44.260 --> 00:03:47.677
and our IngredientServiceTest did change.
85

86
00:03:48.983 --> 00:03:53.174
Now we can see that I removed the RecipeRepository
86

87
00:03:53.174 --> 00:03:54.563
because we had both going in there
87

88
00:03:54.563 --> 00:03:56.544
we no longer need both of them.
88

89
00:03:56.544 --> 00:03:58.855
And scrolling down here we can see the additional
89

90
00:03:58.855 --> 00:04:01.506
changes, no longer having to create a
90

91
00:04:01.506 --> 00:04:04.531
Optional there on line 100,
91

92
00:04:04.531 --> 00:04:08.698
and we updated the mockito mock to return back a Mono
92

93
00:04:10.241 --> 00:04:12.932
instead of the Optional.
93

94
00:04:12.932 --> 00:04:16.417
And then on 140, can see that we updated the
94

95
00:04:16.417 --> 00:04:20.570
recipeRepository to recipeReactiveRepository
95

96
00:04:20.570 --> 00:04:25.114
and then finally in our test by, deleteById
96

97
00:04:25.114 --> 00:04:29.818
we also need to add in on line 124 there a return
97

98
00:04:29.818 --> 00:04:32.127
of the save, to return back a Mono
98

99
00:04:32.127 --> 00:04:34.550
because on that, we're gonna do a save
99

100
00:04:34.550 --> 00:04:36.343
and return back that Mono and we're gonna
100

101
00:04:36.343 --> 00:04:39.212
do a block on it inside the service method.
101

102
00:04:39.212 --> 00:04:40.742
So if we don't return back the Mono
102

103
00:04:40.742 --> 00:04:43.409
when we call that block we get a null pointer error.
103

104
00:04:43.409 --> 00:04:45.580
And then, finally, at the bottom there we've
104

105
00:04:45.580 --> 00:04:50.115
refactored the test to use the reactive repository.
105

106
00:04:50.115 --> 00:04:52.250
Let's go ahead and close this
106

107
00:04:52.250 --> 00:04:56.000
and we'll run all our tests, just to be sure.
107

108
00:04:57.799 --> 00:05:00.741
And we can see that all our tests will run here
108

109
00:05:00.741 --> 00:05:03.282
everything's passing, so everything's happy
109

110
00:05:03.282 --> 00:05:07.215
and I also have the application up in Chrome.
110

111
00:05:07.215 --> 00:05:11.114
I already had it started here for us, to take a look at.
111

112
00:05:11.114 --> 00:05:13.130
So again, we are working with the ingredients
112

113
00:05:13.130 --> 00:05:16.241
so I can view with this, go to the Ingredients
113

114
00:05:16.241 --> 00:05:18.493
and you can see that I'm able to delete one,
114

115
00:05:18.493 --> 00:05:22.660
I can go in and update it, let's change this to six.
115

116
00:05:23.767 --> 00:05:25.057
Updated that so now we can see that
116

117
00:05:25.057 --> 00:05:27.858
the basic CRUD operations are working
117

118
00:05:27.858 --> 00:05:30.970
for our ingredients and our Ingredient operations
118

119
00:05:30.970 --> 00:05:35.074
are under the reactive model, so our data model
119

120
00:05:35.074 --> 00:05:37.630
is now refactored to remove those DBRefs
120

121
00:05:37.630 --> 00:05:41.671
and our code is refactored to use the reactive repository
121

122
00:05:41.671 --> 00:05:43.588
and the reactive types.
