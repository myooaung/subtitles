WEBVTT
0
1
00:00:04.160 --> 00:00:09.269
In this video, what we want to do is
apply the layout to our vet list page.
1

2
00:00:09.269 --> 00:00:12.000
We have a list of vets that we have
available, so we want to apply that
2

3
00:00:12.000 --> 00:00:16.410
master layout to that. And let's go ahead
and take a look at what they did inside
3

4
00:00:16.410 --> 00:00:22.130
the Spring project. 
You can see we have vets and we have a vet list
4

5
00:00:22.130 --> 00:00:27.290
page. Again, we have this common Thymeleaf
command here that we are going to
5

6
00:00:27.290 --> 00:00:32.810
apply to that. We're going to go
ahead and get that applied. We can
6

7
00:00:32.810 --> 00:00:38.870
see that's using a Thymeleaf replace. I'm
going to come over to our project.
7

8
00:00:38.870 --> 00:00:49.180
Go to our vets index page and add that,
like so, and clean that up. We can see
8

9
00:00:49.180 --> 00:00:55.860
that they're using h2 so I'm going to do
that to be consistent.
9

10
00:00:59.890 --> 00:01:05.170
I'm not going to get too picky there.
I'm going to copy over again this bootstrap
10

11
00:01:05.170 --> 00:01:11.619
class. Apply that to the table so we
have a nice-looking table, the bootstrap
11

12
00:01:11.619 --> 00:01:16.960
styling. Let's see we have name, specialties.
We are not covering specialties at this
12

13
00:01:16.960 --> 00:01:21.060
point. That is something that we do need
to add.
13

14
00:01:21.060 --> 00:01:25.290
Let's see here. I'm just looking through.
We don't have any more styling so
14

15
00:01:25.290 --> 00:01:29.280
this is going to be good enough for now. We
do we need to add in additional. We need
15

16
00:01:29.280 --> 00:01:33.869
to enhance our model more so we can kind
of had a very rudimentary one
16

17
00:01:33.869 --> 00:01:38.700
at the beginning. Let's go ahead and
run this now. We'll make sure that it's
17

18
00:01:38.700 --> 00:01:41.540
running okay.
18

19
00:01:44.700 --> 00:01:50.479
We are up. Let's come over here.
19

20
00:01:52.060 --> 00:01:54.750
We go to vets.
20

21
00:01:57.710 --> 00:02:02.799
You can see that things do not look
right here.
21

22
00:02:09.000 --> 00:02:13.870
I'm going
to restart this. Looks like our
22

23
00:02:13.870 --> 00:02:17.380
resources did not come up right and
sometimes you get weird stuff happen
23

24
00:02:17.380 --> 00:02:22.510
like that. Because we knew the other
one was working, we just changed this one
24

25
00:02:22.510 --> 00:02:27.370
and I looked at the resources, we're not
bringing in right, so let's see if this
25

26
00:02:27.370 --> 00:02:29.850
works now.
Let's take a look at the page
26

27
00:02:36.020 --> 00:02:38.170
source.
27

28
00:02:40.950 --> 00:02:45.110
We see that this
CSS is not being found so I'm going to
28

29
00:02:45.110 --> 00:02:51.760
close that. Let's go ahead and stop
this. I'm going to do a
29

30
00:02:53.200 --> 00:02:55.470
clean.
30

31
00:02:56.390 --> 00:03:01.910
I believe what's happening is the
Maven plugin is actually doing
31

32
00:03:01.910 --> 00:03:05.860
doing another patching of the
CSS and whatnot, so I think we
32

33
00:03:05.860 --> 00:03:12.370
inadvertently cleaned that by accident
and wire our rebuilds so that some of the
33

34
00:03:12.370 --> 00:03:17.080
static resources that we were depending
on inside of IntelliJ got whacked.
34

35
00:03:17.080 --> 00:03:21.700
We're going to go ahead and rebuild that
now. You can see that is up so let's go
35

36
00:03:21.700 --> 00:03:25.900
ahead. I'm running it from inside of
IntelliJ, so I wasn't how to percent sure
36

37
00:03:25.900 --> 00:03:30.240
if we'd be picking up the resources
properly or not.
37

38
00:03:35.480 --> 00:03:44.300
We are back up and running, so let's go
back over and do a refresh here.
38

39
00:03:44.300 --> 00:03:48.970
Now we can see the resources properly.
Now let's try our vets
39

40
00:03:49.340 --> 00:03:55.490
and now we can see that the vets are
properly displayed. What happened was, if
40

41
00:03:55.490 --> 00:03:59.560
you come back over here and look under
target
41

42
00:03:59.560 --> 00:04:05.640
and under generated classes and the
resources, so we can see the templates,
42

43
00:04:05.640 --> 00:04:10.600
static, resources, the CSS, all the stuff
is being generated. That is being
43

44
00:04:10.600 --> 00:04:14.590
generated by Maven but IntelliJ is going
on top of it so I think something
44

45
00:04:14.590 --> 00:04:19.690
happened there. The reason I knew
that that happened is because when I
45

46
00:04:19.690 --> 00:04:23.410
was looking at other pages in our little
web application, all of a styling was
46

47
00:04:23.410 --> 00:04:27.250
missing, so that was kind of a clue that
that may have happen. We might see that
47

48
00:04:27.250 --> 00:04:29.710
again in the future. We're kind of
doing something we probably really
48

49
00:04:29.710 --> 00:04:34.000
shouldn't be. I think, technically, we
probably should be running from a Spring
49

50
00:04:34.000 --> 00:04:37.930
Boot Run. That might be a little
bit more stable for us all. I may
50

51
00:04:37.930 --> 00:04:44.080
experiment that. I prefer to work from
IntelliJ, so that maybe the new root
51

52
00:04:44.080 --> 00:04:47.710
cause there. But just be aware, if you do
see something like that, just go ahead
52

53
00:04:47.710 --> 00:04:52.900
and rebuild. That regenerates
this target directory for us and gets
53

54
00:04:52.900 --> 00:04:58.330
all the web resources properly deployed
into the target directory. And again, the
54

55
00:04:58.330 --> 00:05:02.919
packaging process, that's what builds
the jar. All that gets built into the
55

56
00:05:02.919 --> 00:05:06.820
executable jar for us so you wouldn't
see that problem at runtime. This is more
56

57
00:05:06.820 --> 00:05:10.780
of a development time quirk that we're
dealing with. We do have that
57

58
00:05:10.780 --> 00:05:16.960
implemented now. That was, let's take a
look at this. That was number 21, so let's
58

59
00:05:16.960 --> 00:05:20.400
go ahead and close that out.
59

60
00:05:31.620 --> 00:05:33.680
now
60

61
00:05:35.680 --> 00:05:39.120
I'd do the push.
61

62
00:05:47.220 --> 00:05:53.910
That's gone ahead and done the push. You can see
that closes it. Our issues are
62

63
00:05:53.910 --> 00:06:00.120
getting pretty sparse there so our
backlog is kind of running low here.
63

64
00:06:00.120 --> 00:06:05.550
If we were doing Agile, you do want to
have a backlog of stuff to do. That's
64

65
00:06:05.550 --> 00:06:09.990
pretty common Agile term where you have
issues already planned out, so when I
65

66
00:06:09.990 --> 00:06:13.560
developer on the team does run out
work, they can go to the pool and
66

67
00:06:13.560 --> 00:06:17.670
pull something forward. So right now, in
the next video, we're going to sit down and do some
67

68
00:06:17.670 --> 00:06:22.920
project planning. I'll plan out a
queue of a task for things coming up in our
68

69
00:06:22.920 --> 00:06:26.690
little Spring Pet Clinic project.
