WEBVTT
0
1
00:00:00.620 --> 00:00:05.582
(gentle guitar music)
(production beeping)
1

2
00:00:05.582 --> 00:00:07.973
<v ->All right, this concludes the section on MySQL,</v>
2

3
00:00:07.973 --> 00:00:11.114
so you saw how we have a very versatile set, now.
3

4
00:00:11.114 --> 00:00:12.664
We have a lockdown schema
4

5
00:00:12.664 --> 00:00:15.473
for both our dev and production accounts,
5

6
00:00:15.473 --> 00:00:17.801
so we set up service accounts for both of those
6

7
00:00:17.801 --> 00:00:20.406
and we set up special databases for those.
7

8
00:00:20.406 --> 00:00:22.252
If we were deploying this in the real world,
8

9
00:00:22.252 --> 00:00:24.856
we wouldn't be running it just locally
9

10
00:00:24.856 --> 00:00:26.936
or in a Docker container on your local host.
10

11
00:00:26.936 --> 00:00:29.214
These would be like deployment servers somewhere,
11

12
00:00:29.214 --> 00:00:31.503
where you'd have that database set up
12

13
00:00:31.503 --> 00:00:33.055
on a permanent server somewhere.
13

14
00:00:33.055 --> 00:00:35.810
So, I'm just trying to emulate that so you guys can see
14

15
00:00:35.810 --> 00:00:38.225
how we set up the Spring Boot configuration.
15

16
00:00:38.225 --> 00:00:40.895
So, you saw how I set up profiles for that
16

17
00:00:40.895 --> 00:00:43.545
and we have two YAML files that we've created
17

18
00:00:43.545 --> 00:00:44.886
for dev and production.
18

19
00:00:44.886 --> 00:00:47.274
We can take one of those profiles, throw it live
19

20
00:00:47.274 --> 00:00:50.604
and, now, we'll be going against that target database.
20

21
00:00:50.604 --> 00:00:53.224
And, as I said before, prior in the course,
21

22
00:00:53.224 --> 00:00:54.594
you could set that up
22

23
00:00:54.594 --> 00:00:57.803
and actually declare the Spring bean with those properties,
23

24
00:00:57.803 --> 00:01:00.143
but, in this case, we are allowing Spring Boot
24

25
00:01:00.143 --> 00:01:02.504
to go ahead and configure the data source for us
25

26
00:01:02.504 --> 00:01:04.631
and we're allowing the Spring Boot defaults
26

27
00:01:04.631 --> 00:01:06.883
to take over a lot of things for us.
27

28
00:01:06.883 --> 00:01:09.702
In this case, we are just setting up the properties
28

29
00:01:09.702 --> 00:01:12.764
and now you can see how you use Spring Boot in production
29

30
00:01:12.764 --> 00:01:15.984
because if I don't specify a profile at all,
30

31
00:01:15.984 --> 00:01:19.094
MySQL or the H2 in-memory database is going to get picked up.
31

32
00:01:19.094 --> 00:01:22.914
If I specify the dev profile, dev, as an active profile,
32

33
00:01:22.914 --> 00:01:25.163
it will get the MySQL dev instance
33

34
00:01:25.163 --> 00:01:26.533
and likewise for the production,
34

35
00:01:26.533 --> 00:01:29.343
so this is really a great way to be using it
35

36
00:01:29.343 --> 00:01:32.843
and how we can see Spring Boot and Spring are used
36

37
00:01:32.843 --> 00:01:34.843
in enterprise every day.
