WEBVTT
0
1
00:00:04.279 --> 00:00:09.510
Okay, so I got a project here. One of my
students is having a problem and he's
1

2
00:00:09.510 --> 00:00:14.370
saying that he's got a user edit fail. So
let's take a look. See what we got
2

3
00:00:14.370 --> 00:00:19.350
cooking here. I have not run this at all.
I've just checked it out of GitHub. I had
3

4
00:00:19.350 --> 00:00:23.970
to check it into GitHub and I forked it
into my repository. And if we can figure
4

5
00:00:23.970 --> 00:00:30.300
out what's wrong, we'll send him a pull
request with the fix. So it looks like, we
5

6
00:00:30.300 --> 00:00:40.890
started up normally and I am going to
ramp browser, and pull this over here.
6

7
00:00:40.890 --> 00:00:49.800
So we can see it. So the side of my
course is a standard tutorial saying you
7

8
00:00:49.800 --> 00:00:55.289
can't edit the user. So let's go ahead
and try to edit. We'll just change
8

9
00:00:55.289 --> 00:01:01.680
the first name, so we got a failure there.
So let's take a look.
9

10
00:01:01.680 --> 00:01:11.340
Request most method POST not supported.
So let's take a closer look. So we're
10

11
00:01:11.340 --> 00:01:17.509
seeing POST not supported. So let's
take a look at his controller.
11

12
00:01:26.920 --> 00:01:34.940
So he's got a RequestMapping of that.
Let's see what its form is doing. So what
12

13
00:01:34.940 --> 00:01:42.520
we need to do is take a look at the Thymeleaf template for user. Show userform.
13

14
00:01:45.850 --> 00:01:53.480
That looks correct. So he's going to go
against /user. Let's see what I did
14

15
00:01:53.480 --> 00:02:07.390
here. So you know we're just checking off
that. Hmm..
15

16
00:02:07.390 --> 00:02:18.820
So he has got /user here and I think
it's because he doesn't have a trailing
16

17
00:02:18.820 --> 00:02:26.770
/ there. So this can be a little
tricky to set up. Let's try this.
17

18
00:02:33.330 --> 00:02:41.430
This may or may not work. Let's take a
look. I'll restart that.
18

19
00:02:47.040 --> 00:02:51.340
What we're seeing is a slight difference
because got the trailing / there. So
19

20
00:02:51.340 --> 00:02:56.680
we mapped /users, so it's actually
mapped /user/, which is the
20

21
00:02:56.680 --> 00:03:03.129
problem. Let's take a look see
if that fixed it or not. So we'll do a
21

22
00:03:03.129 --> 00:03:10.150
refresh here. That's okay. Let's do
this. It meant okay. That was a problem.
22

23
00:03:10.150 --> 00:03:18.099
So just to recap, what happened there is
this is with the Spring RequestMapping.
23

24
00:03:18.099 --> 00:03:22.659
So we're setting /user at the top
of the class so that means everything in
24

25
00:03:22.659 --> 00:03:29.109
this class it's going to get prepended with
/user. And we were going to just
25

26
00:03:29.109 --> 00:03:36.579
/user and doing a POST and
somebody's in saying RequestMethod to
26

27
00:03:36.579 --> 00:03:44.159
POST, they would come here, but it was
only map for the slash. So it would have been
27

28
00:03:44.159 --> 00:03:50.409
it come in /user/ and by
expanding this out and putting an empty
28

29
00:03:50.409 --> 00:03:55.859
String there, so now it's just /user.
So this will work, in either case here, so
29

30
00:03:55.859 --> 00:04:02.139
a subtle but important difference in
doing RequestMapping with Spring. This
30

31
00:04:02.139 --> 00:04:06.879
actually is just pure Spring MVC here and
how the RequestMapping is working. So in
31

32
00:04:06.879 --> 00:04:13.000
this saveOr?Update method will take the
form POST from Thymeleaf and the reason
32

33
00:04:13.000 --> 00:04:19.630
we know that is the Thymeleaf mapping is
saying an action of /user. So this
33

34
00:04:19.630 --> 00:04:24.789
would have worked if he did /user/. That probably would have been got
34

35
00:04:24.789 --> 00:04:28.960
picked up now. But now, it'll take any
post. So probably a pretty good fixed
35

36
00:04:28.960 --> 00:04:31.139
form.
