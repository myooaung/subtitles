WEBVTT
0
1
00:00:04.069 --> 00:00:07.859
Alright! In this video, I want to
1

2
00:00:06.060 --> 00:00:10.650
correct a mistake I made in some of my
2

3
00:00:07.859 --> 00:00:12.809
commit messages. You can see up here,
3

4
00:00:10.650 --> 00:00:15.450
I've got the commits I made to the
4

5
00:00:12.809 --> 00:00:16.920
Spring Pet Clinic project and what
5

6
00:00:15.450 --> 00:00:18.420
happened was that I've been pretty good
6

7
00:00:16.920 --> 00:00:21.240
about including the issue number. In
7

8
00:00:18.420 --> 00:00:22.740
these, you can see most of these end with
8

9
00:00:21.240 --> 00:00:24.750
a hashtag and the issue number. Like I
9

10
00:00:22.740 --> 00:00:26.820
said, I'm trying to follow good practice
10

11
00:00:24.750 --> 00:00:28.410
of having issues to commit against something
11

12
00:00:26.820 --> 00:00:30.810
that you'd do it in the workplace
12

13
00:00:28.410 --> 00:00:31.890
typically. Especially in a larger shop,
13

14
00:00:30.810 --> 00:00:34.770
you're always going to be coding
14

15
00:00:31.890 --> 00:00:37.320
against a ticket. Here, I missed a couple
15

16
00:00:34.770 --> 00:00:39.719
of ticket numbers. We can see here
16

17
00:00:37.320 --> 00:00:41.460
on implementing a Map for Map
17

18
00:00:39.719 --> 00:00:44.040
implementation for the visit service and
18

19
00:00:41.460 --> 00:00:46.230
updated profiles for the JPA service, I
19

20
00:00:44.040 --> 00:00:48.660
forgot to include the issue note number
20

21
00:00:46.230 --> 00:00:51.480
in each of those commit messages. Now the
21

22
00:00:48.660 --> 00:00:54.180
good news is you can go back and edit
22

23
00:00:51.480 --> 00:00:56.430
those. It's a little bit tricky. I'm going to
23

24
00:00:54.180 --> 00:00:58.170
show you how to do it in this video. It
24

25
00:00:56.430 --> 00:01:00.420
doesn't always go as smooth that I've only done
25

26
00:00:58.170 --> 00:01:01.800
a handful of times to be honest. It's one
26

27
00:01:00.420 --> 00:01:03.420
of those things that you know is there
27

28
00:01:01.800 --> 00:01:05.880
but you don't actually have to do it
28

29
00:01:03.420 --> 00:01:07.830
that often. So, hopefully things go smooth
29

30
00:01:05.880 --> 00:01:10.200
but I'm going to go through this and show
30

31
00:01:07.830 --> 00:01:13.350
you how to do that. It does get a little
31

32
00:01:10.200 --> 00:01:15.810
confusing. If you google changing a
32

33
00:01:13.350 --> 00:01:18.030
commit message in Git, you can find this
33

34
00:01:15.810 --> 00:01:21.119
page here, you can see help GitHub
34

35
00:01:18.030 --> 00:01:23.610
articles changing a commit message, right
35

36
00:01:21.119 --> 00:01:25.560
here in the URL up top. If you want find
36

37
00:01:23.610 --> 00:01:27.420
this page, it comes right up with Google.
37

38
00:01:25.560 --> 00:01:30.540
Couple of different scenarios that they're
38

39
00:01:27.420 --> 00:01:32.159
looking at here. One is rewriting the
39

40
00:01:30.540 --> 00:01:34.079
most recent commit message, which isn't
40

41
00:01:32.159 --> 00:01:35.640
going to work for me because we can see
41

42
00:01:34.079 --> 00:01:38.670
that I've already committed and pushed
42

43
00:01:35.640 --> 00:01:40.950
up to GitHub a couple times. So we're
43

44
00:01:38.670 --> 00:01:42.360
going to need to go in and do something a
44

45
00:01:40.950 --> 00:01:44.009
little more complicated and it's
45

46
00:01:42.360 --> 00:01:47.700
actually kind of a nice feature of Git.
46

47
00:01:44.009 --> 00:01:50.280
We're going to come down here. See
47

48
00:01:47.700 --> 00:01:53.280
this amending older or multiple commit
48

49
00:01:50.280 --> 00:01:56.280
messages. It's this section right
49

50
00:01:53.280 --> 00:01:57.840
here, mending the message of older or
50

51
00:01:56.280 --> 00:02:00.119
multiple commit messages, this is
51

52
00:01:57.840 --> 00:02:02.670
exactly what we want to do and we are
52

53
00:02:00.119 --> 00:02:05.850
going to use the git rebase command. A
53

54
00:02:02.670 --> 00:02:07.950
- i is interactive, so we're going to do
54

55
00:02:05.850 --> 00:02:11.310
an interactive rebase. We're going to
55

56
00:02:07.950 --> 00:02:13.560
say head. Head meaning the most recent
56

57
00:02:11.310 --> 00:02:16.319
commit and then the tilde,
57

58
00:02:13.560 --> 00:02:18.450
the little squiggly line and n is the number
58

59
00:02:16.319 --> 00:02:21.360
of commits that we want to go back. Now,
59

60
00:02:18.450 --> 00:02:23.099
let's take a look at this. I've got four
60

61
00:02:21.360 --> 00:02:26.030
commits here. I'm going to refresh just to
61

62
00:02:23.099 --> 00:02:28.380
make sure. I make sure that we're on the
62

63
00:02:26.030 --> 00:02:32.489
latest and greatest, so yes, that is
63

64
00:02:28.380 --> 00:02:34.500
accurate. So you can see here, I've had
64

65
00:02:32.489 --> 00:02:36.180
a little break of 17 days since I've
65

66
00:02:34.500 --> 00:02:36.420
worked on this so I'm now coming back to
66

67
00:02:36.180 --> 00:02:39.630
it.
67

68
00:02:36.420 --> 00:02:41.819
I want to get this guy here. I'm just
68

69
00:02:39.630 --> 00:02:44.040
scrolling down, so you can see I've
69

70
00:02:41.819 --> 00:02:45.540
actually been pretty good and I'm just
70

71
00:02:44.040 --> 00:02:47.640
looking at the bottom commit messages.
71

72
00:02:45.540 --> 00:02:50.400
We don't have to go that far back. I just
72

73
00:02:47.640 --> 00:02:53.310
missed these two here. So that's a total
73

74
00:02:50.400 --> 00:02:56.519
of four that we need to go in. Again, what
74

75
00:02:53.310 --> 00:03:00.000
we're going to do is get rebase - i head.
75

76
00:02:56.519 --> 00:03:02.910
In this case, I'm going to tilde four. So
76

77
00:03:00.000 --> 00:03:04.799
I'm going to jump over here and we can see
77

78
00:03:02.910 --> 00:03:07.200
here that I am in in the pet clinic
78

79
00:03:04.799 --> 00:03:10.769
directory. One thing we want to do is
79

80
00:03:07.200 --> 00:03:14.010
get git status. We can't have
80

81
00:03:10.769 --> 00:03:15.750
anything that's not in flight. Here,
81

82
00:03:14.010 --> 00:03:17.489
we got a couple untracked files so some
82

83
00:03:15.750 --> 00:03:19.920
I should add to the get ignore so this
83

84
00:03:17.489 --> 00:03:23.519
is not coming up. I'll do that in a
84

85
00:03:19.920 --> 00:03:25.680
upcoming video. But here, let me clear
85

86
00:03:23.519 --> 00:03:31.110
this.
86

87
00:03:25.680 --> 00:03:31.110
Remember that command is git rebase - i.
87

88
00:03:32.550 --> 00:03:41.620
- i for interactive. I'm going to say
88

89
00:03:35.550 --> 00:03:45.160
head tilde. I'm going to say 4,
89

90
00:03:41.620 --> 00:03:48.069
and now, we get this image up. What we
90

91
00:03:45.160 --> 00:03:49.989
have is a list of commits, so
91

92
00:03:48.069 --> 00:03:52.269
these are the commit IDs. So see this
92

93
00:03:49.989 --> 00:03:55.660
pick? Let's see. I'm just going to use the
93

94
00:03:52.269 --> 00:03:59.410
last three, 358. If I come back over here,
94

95
00:03:55.660 --> 00:04:03.459
you can see that this should correspond
95

96
00:03:59.410 --> 00:04:07.629
to this guy here, so that's 358, where we
96

97
00:04:03.459 --> 00:04:10.360
got the a1b and then we can see there
97

98
00:04:07.629 --> 00:04:11.110
a1b, so that's these messages that we
98

99
00:04:10.360 --> 00:04:14.410
want to take up.
99

100
00:04:11.110 --> 00:04:18.250
So the 358 one, that is the implemented
100

101
00:04:14.410 --> 00:04:21.280
map implementation for visit service. So
101

102
00:04:18.250 --> 00:04:24.070
I'm going to come over here. Create visit
102

103
00:04:21.280 --> 00:04:25.389
map service, so that is number 46. You can
103

104
00:04:24.070 --> 00:04:29.620
see there that's the issue that we want.
104

105
00:04:25.389 --> 00:04:33.580
We want to do that. So I come over here and I
105

106
00:04:29.620 --> 00:04:36.510
am going to edit this. I'm using VI.
106

107
00:04:33.580 --> 00:04:36.510
VI is a little tricky.
I'm going to change
107

108
00:04:36.540 --> 00:04:39.500
this to reword.
108

109
00:04:40.610 --> 00:04:45.100
So I get my cursor out there.
109

110
00:04:42.820 --> 00:04:48.010
I'm changing that to reword, so this is
110

111
00:04:45.100 --> 00:04:51.910
358. Reword that for the visit service.
111

112
00:04:48.010 --> 00:04:53.890
And then the next one is the aac one, so
112

113
00:04:51.910 --> 00:04:56.710
let's come over here, look at that. That's
113

114
00:04:53.890 --> 00:05:00.010
this guy here, the update profiles for
114

115
00:04:56.710 --> 00:05:02.560
JPA service and that's this update
115

116
00:05:00.010 --> 00:05:06.040
profiles for Spring Data JPA Services. So
116

117
00:05:02.560 --> 00:05:08.490
that's number 48. So I want to come in to
117

118
00:05:06.040 --> 00:05:08.490
this guy.
118

119
00:05:08.970 --> 00:05:14.100
Again, that's reword and you can see
119

120
00:05:11.190 --> 00:05:16.110
here we have the different commands for
120

121
00:05:14.100 --> 00:05:19.170
the different messages, so I'm going to
121

122
00:05:16.110 --> 00:05:20.550
reword that as well. I'm not going to
122

123
00:05:19.170 --> 00:05:24.690
go into these other commands at this
123

124
00:05:20.550 --> 00:05:26.520
time. So I'm going to do an escape : wq for
124

125
00:05:24.690 --> 00:05:28.860
write and quit, so I'm going to write
125

126
00:05:26.520 --> 00:05:31.560
that file and we can see that it comes
126

127
00:05:28.860 --> 00:05:34.740
up to allow me to edit this commit
127

128
00:05:31.560 --> 00:05:37.680
message. So implement map impl for
128

129
00:05:34.740 --> 00:05:41.860
visit service. If I come back over
129

130
00:05:37.680 --> 00:05:46.200
here, that is this guy number 46.
130

131
00:05:41.860 --> 00:05:46.200
So I'm going to come over here into
131

132
00:05:46.700 --> 00:05:53.770
the line. If I do A and VI, I can say that
132

133
00:05:54.080 --> 00:06:00.480
number 46,
133

134
00:05:55.590 --> 00:06:02.960
so that amends that. Now, if I come in
134

135
00:06:00.480 --> 00:06:07.759
and do a write quit,
135

136
00:06:02.960 --> 00:06:12.400
now, I get the next one and that closes
136

137
00:06:07.759 --> 00:06:12.400
number 47. I don't need to change him.
137

138
00:06:13.319 --> 00:06:18.740
I only did that one.
138

139
00:06:15.920 --> 00:06:20.990
I think I grabbed a wrong guy, so I made
139

140
00:06:18.740 --> 00:06:24.080
a mistake there. But the next step that I
140

141
00:06:20.990 --> 00:06:27.140
need to do is that we're going to redo this
141

142
00:06:24.080 --> 00:06:31.360
and get that other one as I need to do
142

143
00:06:27.140 --> 00:06:31.360
a git push force, so...
143

144
00:06:32.770 --> 00:06:34.830
like so.
144

145
00:06:35.200 --> 00:06:41.980
You can see that is going there and
145

146
00:06:38.200 --> 00:06:43.810
changing that. What's going to happen
146

147
00:06:41.980 --> 00:06:46.140
is, this should change the commit
147

148
00:06:43.810 --> 00:06:46.140
IDs.
148

149
00:06:47.249 --> 00:06:51.509
You can see that this has been updated so we now
149

150
00:06:49.469 --> 00:06:53.369
have that 46. I made a mistake and
150

151
00:06:51.509 --> 00:06:56.099
grabbed. I think I added the wrong
151

152
00:06:53.369 --> 00:06:58.349
commit message on that so I need to do
152

153
00:06:56.099 --> 00:07:02.209
e309. So we're going to repeat
153

154
00:06:58.349 --> 00:07:05.410
this exercise but just for the last two.
154

155
00:07:02.209 --> 00:07:13.930
Let me clear this.
155

156
00:07:05.410 --> 00:07:14.610
git rebase - i head tilde 2 and let's see
156

157
00:07:13.930 --> 00:07:18.820
here.
157

158
00:07:14.610 --> 00:07:21.910
I'm going to do this e309. Just
158

159
00:07:18.820 --> 00:07:24.130
a double check, so we can see e309. I'm
159

160
00:07:21.910 --> 00:07:26.410
just looking at the last four characters.
160

161
00:07:24.130 --> 00:07:28.510
We get to have hashes like this, that
161

162
00:07:26.410 --> 00:07:30.880
for me, it's easier for me to remember a
162

163
00:07:28.510 --> 00:07:32.200
small segment of the last few characters
163

164
00:07:30.880 --> 00:07:34.530
I'm trying to remember the whole
164

165
00:07:32.200 --> 00:07:34.530
word.
165

166
00:07:34.700 --> 00:07:43.080
So I'm going to xxx insert.
166

167
00:07:40.580 --> 00:07:44.580
So I'm saying reword there and like get
167

168
00:07:43.080 --> 00:07:48.660
the cursor off so you can see I've
168

169
00:07:44.580 --> 00:07:52.320
changed it to reword and I'm going to edit
169

170
00:07:48.660 --> 00:07:56.130
that one. So now, I'm going to do escape w
170

171
00:07:52.320 --> 00:08:00.090
quit. And now I want to append
171

172
00:07:56.130 --> 00:08:01.770
this guy, and this time, I believe that was
172

173
00:08:00.090 --> 00:08:05.150
number 48. Let's double check.
173

174
00:08:01.770 --> 00:08:09.120
So update profiles to use JPA services.
174

175
00:08:05.150 --> 00:08:14.390
Update profiles for that. So let's say
175

176
00:08:09.120 --> 00:08:16.230
period closes number 48.
176

177
00:08:14.390 --> 00:08:21.210
So now, we'll get
177

178
00:08:16.230 --> 00:08:22.889
that issue number in that. So escape wq
178

179
00:08:21.210 --> 00:08:24.720
and we can see that we get a little
179

180
00:08:22.889 --> 00:08:28.940
message there and now all you have to do
180

181
00:08:24.720 --> 00:08:32.599
say git push
181

182
00:08:28.940 --> 00:08:34.760
force, and again, that's this final step
182

183
00:08:32.599 --> 00:08:38.180
here, number 4, use the git force
183

184
00:08:34.760 --> 00:08:41.180
push. So we'll go ahead and push that on
184

185
00:08:38.180 --> 00:08:43.960
up to GitHub. You can see that it is going up
185

186
00:08:41.180 --> 00:08:46.520
there and it is transmitted to GitHub. And
186

187
00:08:43.960 --> 00:08:49.330
now, we'll come over here and I'm going
187

188
00:08:46.520 --> 00:08:49.330
to do a refresh
188

189
00:08:49.520 --> 00:08:55.010
and you can see that this is now updated.
189

190
00:08:52.640 --> 00:08:56.959
Remember we had the e309 hash
190

191
00:08:55.010 --> 00:08:59.779
and that has now changed. So these two
191

192
00:08:56.959 --> 00:09:02.570
hash has changed on that commit.
192

193
00:08:59.779 --> 00:09:04.550
Now we have that commit message. The
193

194
00:09:02.570 --> 00:09:06.529
reason I did this is for other students
194

195
00:09:04.550 --> 00:09:08.660
that come through the course that aren't
195

196
00:09:06.529 --> 00:09:11.779
going through it right now with me, they
196

197
00:09:08.660 --> 00:09:14.060
can go back and look at this and see the
197

198
00:09:11.779 --> 00:09:16.990
different commits. So if I come in here,
198

199
00:09:14.060 --> 00:09:20.959
look at this issue, now I can see that.
199

200
00:09:16.990 --> 00:09:23.810
We can come back and also see the
200

201
00:09:20.959 --> 00:09:27.140
actual commit too. So we can come in and
201

202
00:09:23.810 --> 00:09:28.850
see this commit. This is a handy tool
202

203
00:09:27.140 --> 00:09:31.910
so if you're following along in the
203

204
00:09:28.850 --> 00:09:34.010
course, you can see what was changed in the
204

205
00:09:31.910 --> 00:09:35.870
specific commit, so these are the files
205

206
00:09:34.010 --> 00:09:38.540
that were modified. You can see here, I
206

207
00:09:35.870 --> 00:09:41.510
came in and added a profile with the
207

208
00:09:38.540 --> 00:09:43.430
profile annotation. You don't have to rehash
208

209
00:09:41.510 --> 00:09:45.380
the course, but I just want you to be aware
209

210
00:09:43.430 --> 00:09:48.320
of how, if you're following along in the
210

211
00:09:45.380 --> 00:09:52.010
course, you can go in to GitHub look at
211

212
00:09:48.320 --> 00:09:53.420
these issues and see what has changed in
212

213
00:09:52.010 --> 00:09:56.440
the source code to complete that
213

214
00:09:53.420 --> 00:09:56.440
specific issue.
