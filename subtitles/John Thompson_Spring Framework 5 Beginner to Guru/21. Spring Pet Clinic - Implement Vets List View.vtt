WEBVTT
0
1
00:00:04.069 --> 00:00:08.820
In this video we are going to take a
look at implementing the vets list view.
1

2
00:00:08.820 --> 00:00:14.429
Now going to come in and take a look at the
project and we can see that we already
2

3
00:00:14.429 --> 00:00:19.230
have an implementation there. I'm going to
come back over to Chrome. This is the
3

4
00:00:19.230 --> 00:00:23.730
the current view so we're showing the Id, First Name, Last Name. What we want to do
4

5
00:00:23.730 --> 00:00:27.650
is get specialties in there. I'm
going to steal shamelessly again from
5

6
00:00:27.650 --> 00:00:34.620
Spring. so I'm going to grab this whole
table here, h2 and let's go ahead
6

7
00:00:34.620 --> 00:00:40.739
and replace that. I'm going to keep my
Thymeleaf comment there. I'll go ahead and
7

8
00:00:40.739 --> 00:00:48.059
paste that in. Now I'm going to go ahead
and I do a build and we are going to see
8

9
00:00:48.059 --> 00:00:50.629
this
9

10
00:00:50.710 --> 00:00:55.910
fail.
We can see here that we're getting
10

11
00:00:55.910 --> 00:01:03.070
some chatter around here about the
vets vetList. So what's happening is
11

12
00:01:03.070 --> 00:01:07.130
Spring, the Spring guys have implemented.
There's a little bit different so if I
12

13
00:01:07.130 --> 00:01:12.170
come in here to the VetController, we
can see that I'm doing vets and that is
13

14
00:01:12.170 --> 00:01:18.050
going to be a Set of vets coming back. So
property going to the model of vets is
14

15
00:01:18.050 --> 00:01:22.880
going to be a Set of vets. Where if I
look at the Spring implementation. Let's
15

16
00:01:22.880 --> 00:01:25.690
take a look at theirs.
16

17
00:01:31.090 --> 00:01:38.000
Look at the VetController.
Here so that they're adding a vetList.
17

18
00:01:38.000 --> 00:01:44.930
So a little bit different implementation
as to how they are implementing it. I
18

19
00:01:44.930 --> 00:01:50.930
want to get mine to match theirs. Or
I want to get the index
19

20
00:01:50.930 --> 00:01:55.880
working so I'm not going to have a
property called vetList. It's just
20

21
00:01:55.880 --> 00:02:01.549
simply the property is vets. And then
the other thing is they spelled
21

22
00:02:01.549 --> 00:02:07.390
specialties differently. So I come over
here to Vet
22

23
00:02:11.940 --> 00:02:17.960
and look at the specialities, I ran
through this before so I know that
23

24
00:02:17.960 --> 00:02:24.090
specialities is different. So again here
we're saying for the property vets
24

25
00:02:24.090 --> 00:02:29.130
iterate over it and that for each vet
inside of vets we're going to iterate
25

26
00:02:29.130 --> 00:02:34.350
over it. So we'll have vet.firstName, vet.lastName, specialties especially
26

27
00:02:34.350 --> 00:02:41.480
name. Let's take a quick look at that.
That is actually a description. So just a
27

28
00:02:41.480 --> 00:02:46.310
couple minor changes from how I had my
model. So name isn't going to be there. And
28

29
00:02:46.310 --> 00:02:50.870
then finally, they have this number of
specialties. I see if I jump back over
29

30
00:02:50.870 --> 00:02:57.270
here,
they look at their implementation of
30

31
00:02:57.270 --> 00:03:03.140
Vet, they have this getNoOf
31

32
00:03:03.290 --> 00:03:07.840
Specialties.
So that's get internal specialties.
32

33
00:03:07.840 --> 00:03:14.140
I think that's kind of ugly and all it's
doing is calling a size on the Set. So we
33

34
00:03:14.140 --> 00:03:21.989
can do that right inside of right inside
of Thymeleaf. What we can do is say
34

35
00:03:22.670 --> 00:03:25.240
vet specialities
35

36
00:03:25.260 --> 00:03:29.340
and Thymeleaf has an
all safe operator so we can say like
36

37
00:03:29.340 --> 00:03:31.609
that
37

38
00:03:34.140 --> 00:03:41.240
like so. So now this will prevent any NPE
 if specialties happens to be null
38

39
00:03:41.240 --> 00:03:46.350
that won't pop like this. So let's go
ahead and do a build now. This will
39

40
00:03:46.350 --> 00:03:51.560
compile the template and let's jump
over here
40

41
00:03:51.560 --> 00:04:00.069
back to Chrome and see if we 
cleared up this error. We still have one.
41

42
00:04:00.069 --> 00:04:07.000
You can see the error here it's on line
23. Let's take a closer look at that and
42

43
00:04:07.000 --> 00:04:13.370
the size is in the property. It's
actually a method call. So I need to do a
43

44
00:04:13.370 --> 00:04:19.519
size like that and let's go ahead and
build it. What the build does is it
44

45
00:04:19.519 --> 00:04:25.580
actually copies the template file
over to the runtime directly for the
45

46
00:04:25.580 --> 00:04:30.830
embedded Tomcat that is running. So let's
come in here and we'll refresh that and
46

47
00:04:30.830 --> 00:04:36.169
now we can see this is what we wanted. So
now we're matching the Spring Pet
47

48
00:04:36.169 --> 00:04:41.150
Clinic. We have a list of veterinarians
and also showing their specialties. So if
48

49
00:04:41.150 --> 00:04:45.919
there's more than one specialty there,
it'd be listed. Our data just only has a
49

50
00:04:45.919 --> 00:04:50.750
single specialty for each one of these
guys. So that is going to complete this
50

51
00:04:50.750 --> 00:04:57.000
out. So I'm going to go ahead and come
back over here.
51

52
00:04:57.000 --> 00:05:02.750
We'll come in and do it Git commit.
52

53
00:05:08.370 --> 00:05:15.970
And that closes out
number 74.
53

54
00:05:20.230 --> 00:05:25.530
And do a commit and push and we will
call this issue done.
