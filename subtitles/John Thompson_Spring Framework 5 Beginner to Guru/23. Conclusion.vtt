WEBVTT
0
1
00:00:03.950 --> 00:00:08.069
Alright you can see that Spring MVC
does have a lot of robust error handling
1

2
00:00:08.069 --> 00:00:11.519
and exception handling that we can put
it as well as validation. So it's a very
2

3
00:00:11.519 --> 00:00:15.990
robust framework of what we have. So we
took our application from being ready
3

4
00:00:15.990 --> 00:00:20.070
for happy path where everything is
perfect and we put in this error
4

5
00:00:20.070 --> 00:00:24.900
handling in it. This is pretty
common to do and we just worked through
5

6
00:00:24.900 --> 00:00:29.670
a number of common examples in this
section. So now we are no longer happy
6

7
00:00:29.670 --> 00:00:34.410
path. Our application is a little bit
more hardened for the silly things that
7

8
00:00:34.410 --> 00:00:38.280
users may or may not do. Now there's
plenty of other scenarios that we could
8

9
00:00:38.280 --> 00:00:41.910
look at this and discover and find
problems where the users might get an
9

10
00:00:41.910 --> 00:00:47.489
exception tossed. And now we have the
tool set to handle that. So it's no
10

11
00:00:47.489 --> 00:00:51.719
longer just a pure happy path
application. That's something that I term
11

12
00:00:51.719 --> 00:00:55.920
and a lot of people use if
everything just goes perfectly right.
12

13
00:00:55.920 --> 00:00:59.280
Our application is going to behave but
if something goes wrong it's going to
13

14
00:00:59.280 --> 00:01:03.989
throw unexpected errors. So now we're
handling some common error scenarios
14

15
00:01:03.989 --> 00:01:08.670
inside the application and you saw with
in Spring MVC, we can provide a lot of
15

16
00:01:08.670 --> 00:01:13.799
valuable information back to our users
through setting up error properties and
16

17
00:01:13.799 --> 00:01:17.909
custom error messages. So it really makes
your applications a lot more user
17

18
00:01:17.909 --> 00:01:20.580
friendly when you do stuff like this. So
you don't want a very fragile
18

19
00:01:20.580 --> 00:01:24.780
application and when you're developing a
web application especially, you
19

20
00:01:24.780 --> 00:01:28.560
definitely want to be providing your
users a lot of good feedback. So now
20

21
00:01:28.560 --> 00:01:34.079
we feel like you guys have a pretty good
mastery of Spring MVC. There's a lot more
21

22
00:01:34.079 --> 00:01:37.140
that we can do with it and in the future
sections in the course we're going to
22

23
00:01:37.140 --> 00:01:42.329
dive into Spring MVC more. But coming up
in the course, because I want to start
23

24
00:01:42.329 --> 00:01:48.210
doing some more interesting things, I'm
going to give you a free preview or kind
24

25
00:01:48.210 --> 00:01:52.619
of a bonus section in the course
where you can see some docker content. So
25

26
00:01:52.619 --> 00:01:58.290
docker is a really exciting technology. I'm
a big fan of it and I want to start
26

27
00:01:58.290 --> 00:02:01.680
doing some more interesting things. So
that's why I'm giving you guys three
27

28
00:02:01.680 --> 00:02:05.070
sections out of my Docker for Java
developers course and you're going to
28

29
00:02:05.070 --> 00:02:07.680
see that coming up next in the course
and some of the capabilities there.
29

30
00:02:07.680 --> 00:02:12.800
Because I want to do a lot more fun and
interesting things in this course.
