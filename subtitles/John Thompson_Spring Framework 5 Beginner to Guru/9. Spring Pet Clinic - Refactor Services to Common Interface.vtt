WEBVTT
0
1
00:00:04.040 --> 00:00:09.630
Now one of the intentions that I have
here is I want to show you kind of as we
1

2
00:00:09.630 --> 00:00:14.099
say the making of the sausage. I'm
going to show you kind of how the
2

3
00:00:14.099 --> 00:00:18.630
application actually evolves and what not.
In here, I'm taking a closer look at
3

4
00:00:18.630 --> 00:00:24.960
this and I'm not happy with how I set up
the interfaces. Ultimately, what I'm
4

5
00:00:24.960 --> 00:00:27.990
trying to do here is I'm going to take
these services. We're going to do
5

6
00:00:27.990 --> 00:00:33.300
multiple implementations of services and
we are going to be, further down the road.
6

7
00:00:33.300 --> 00:00:38.460
Initially, we will implement a map model
but we'll also be using Spring Data JPA,
7

8
00:00:38.460 --> 00:00:44.040
so I want to start emulating that now. So
up here, I've got the CRUD Repository out
8

9
00:00:44.040 --> 00:00:48.840
of that. I don't want to specifically use
that interface at this point in time for
9

10
00:00:48.840 --> 00:00:55.199
my services because we will be interjecting
that into specific implementations for
10

11
00:00:55.199 --> 00:00:58.739
those services. Initially, we're building
a map service here. We are going to be
11

12
00:00:58.739 --> 00:01:03.120
mimicking that with a map and then later
on we'll be bringing on the Spring Data
12

13
00:01:03.120 --> 00:01:09.360
JPA. So if we take a look at the services
that we implemented, we expand these out
13

14
00:01:09.360 --> 00:01:16.380
here, we can see that they all have like
findAll, we have a findById, we have a
14

15
00:01:16.380 --> 00:01:24.750
save method. So what I want to do is 
refactor this to have our interfaces
15

16
00:01:24.750 --> 00:01:29.880
that we establish, inherit from a common
interface and implement some of these
16

17
00:01:29.880 --> 00:01:35.490
methods and we'll mimic the interface
that Spring Data JPA is using for the
17

18
00:01:35.490 --> 00:01:41.180
CRUD repository. Now what I want 
to do here so I'm going to toggle over
18

19
00:01:41.180 --> 00:01:47.170
into GitHub. I'm going to create a new
issue to work against,
19

20
00:01:47.170 --> 00:01:51.330
GitHub, here we go
20

21
00:01:51.860 --> 00:01:56.150
I'm going to say Refactor Service
interfaces to
21

22
00:01:58.100 --> 00:02:02.830
Common Base Interface.
I will submit that
22

23
00:02:02.830 --> 00:02:07.360
and I'm even going to assign myself
to that so kind of marking this on
23

24
00:02:07.360 --> 00:02:13.629
process, so this is #11 and I can
come back over here and I will start
24

25
00:02:13.629 --> 00:02:16.470
implementing that.
25

26
00:02:16.490 --> 00:02:23.770
I'm going to come in and say create
a New Java Class
26

27
00:02:26.560 --> 00:02:31.260
and say CrudService.
27

28
00:02:32.230 --> 00:02:37.660
Let's take a look at the CrudRepository. What does it does? It
28

29
00:02:37.660 --> 00:02:42.250
takes a type and an id so let's follow
that pattern and so we're going to
29

30
00:02:42.250 --> 00:02:47.940
take in the type and the id. I'm just
going to copy that right over
30

31
00:02:48.610 --> 00:02:54.620
and now we can see we have a findAll
and it's going to return back a Set, so
31

32
00:02:54.620 --> 00:03:00.569
I will say Set and down that's going to
return back the type.
32

33
00:03:05.580 --> 00:03:12.480
So we'll implement that and we can say
and there should be an interface that's
33

34
00:03:12.480 --> 00:03:15.560
why it's getting the red line there.
34

35
00:03:18.310 --> 00:03:23.120
So we can see this actually turns
back an Iterable and we have some differences
35

36
00:03:23.120 --> 00:03:27.950
here because I am working with services
so we'll allow Spring Data JPA.
36

37
00:03:27.950 --> 00:03:31.909
We're not going to totally implement
everything here. I'm just trying to mimic
37

38
00:03:31.909 --> 00:03:37.120
that so we can see things go further
down the road.
38

39
00:03:38.770 --> 00:03:43.930
So we have findById, so let's go ahead
and implement that. This is going to
39

40
00:03:43.930 --> 00:03:49.020
take in, this will return back one type.
40

41
00:03:50.700 --> 00:03:54.310
Notice that we are using
generics here and this going to take in
41

42
00:03:54.310 --> 00:03:57.460
the id
42

43
00:03:58.040 --> 00:04:02.269
like so. So we are using Java
generics so when we implement this, we'll
43

44
00:04:02.269 --> 00:04:08.130
specify the generics that we want. 
We can also do a save.
44

45
00:04:08.130 --> 00:04:12.110
This is going to take in the type.
45

46
00:04:14.610 --> 00:04:18.019
That implements a save method
46

47
00:04:20.430 --> 00:04:24.810
so we can see that the save takes in an
Owner object and returns back, so we're
47

48
00:04:24.810 --> 00:04:31.490
saying that save takes that in, and while
we're here, let's go ahead and do
48

49
00:04:32.240 --> 00:04:36.830
do a delete method. We'll implement
that as well and that's going to take in
49

50
00:04:36.830 --> 00:04:39.250
the type.
50

51
00:04:41.630 --> 00:04:46.600
You can even do void
51

52
00:04:49.620 --> 00:04:52.520
like so. I'm going to take a quick look at the 
52

53
00:04:53.040 --> 00:04:57.300
CrudRepository. We're not going to implement
each one like I said. So we're writing
53

54
00:04:57.300 --> 00:05:01.080
and delete and deleteById. We don't
need to implement deleteAll or
54

55
00:05:01.080 --> 00:05:05.070
definitely not going to be taking 
those in, so we're going to keep things a
55

56
00:05:05.070 --> 00:05:11.250
little simple here. That is going to
be good enough for now. Now what I also
56

57
00:05:11.250 --> 00:05:17.760
want to do is now that I have this CrudService, I'm going to Refactor these
57

58
00:05:17.760 --> 00:05:22.880
other implementations
so this extends, we're going to do the
58

59
00:05:22.880 --> 00:05:28.910
CrudService. And now remember the CrudService that we implemented, is going to
59

60
00:05:28.910 --> 00:05:35.470
take in the type and the id. So in this
case, the type is Owner
60

61
00:05:36.330 --> 00:05:41.090
and the id is going to be a Long
61

62
00:05:41.810 --> 00:05:51.740
like so. We can see that with all these
here are implemented already so we can
62

63
00:05:51.740 --> 00:05:56.360
just delete those. We don't have to
define those anymore or see the set goes
63

64
00:05:56.360 --> 00:06:02.000
away there. We get all the
methods that are implemented by the CrudService
64

65
00:06:02.000 --> 00:06:07.610
and the types are defined by the
generics here that we have here. So the
65

66
00:06:07.610 --> 00:06:15.170
two generic types that map to type
and id. Let's go ahead and do the same
66

67
00:06:15.170 --> 00:06:18.190
thing for PetService.
67

68
00:06:21.300 --> 00:06:25.750
Again, this is going to be type and id so we are
going to say Pet,
68

69
00:06:25.750 --> 00:06:28.200
Long
69

70
00:06:29.370 --> 00:06:34.530
and now we get rid of all this code so
it's actually becoming cleaner already because
70

71
00:06:34.530 --> 00:06:40.220
we are getting rid of duplicated code. So
let's do the same for this guy.
71

72
00:06:42.309 --> 00:06:46.300
Again that's going to be type so in this
case, it's going to be Vet
72

73
00:06:46.300 --> 00:06:52.330
Long like so. Here, we can see again that
these are all duplicated so we just get
73

74
00:06:52.330 --> 00:06:58.479
rid of those, like so. We take care
of that import.
74

75
00:06:58.479 --> 00:07:04.020
So now just to recap, our CrudService
were mimicking the Spring Data
75

76
00:07:04.020 --> 00:07:10.360
Repositories with our CrudService and
this implements the methods that we
76

77
00:07:10.360 --> 00:07:14.289
want to be implementing for our CrudService. Now all our service interfaces
77

78
00:07:14.289 --> 00:07:21.460
are going to inherit these methods and
our OwnerService we can add in
78

79
00:07:21.460 --> 00:07:26.319
additional methods as our needs dictate.
We're going to evolve and grow this
79

80
00:07:26.319 --> 00:07:30.729
application so I'm kind of showing you
how we evolve and grow things. Now
80

81
00:07:30.729 --> 00:07:35.020
all our services are going to implement our
standard CrudService and add additional
81

82
00:07:35.020 --> 00:07:40.240
methods where we need to. We can see
that it cut down a bunch of codes so we
82

83
00:07:40.240 --> 00:07:45.249
got rid of duplicate method codes in
all three interfaces and those have been
83

84
00:07:45.249 --> 00:07:49.689
pushed down to a common interface that
we are going to inherit from, so a much
84

85
00:07:49.689 --> 00:07:53.830
cleaner model here that we have moving
forward. The last thing I need to do
85

86
00:07:53.830 --> 00:07:58.449
is remember we're working against issue
11. I'm showing you how we're using
86

87
00:07:58.449 --> 00:08:02.560
GitHub issues. You can go through once
you get a hold of a repository. You can
87

88
00:08:02.560 --> 00:08:06.699
actually go in and take a look and see
how this transpiring. We're going to have a
88

89
00:08:06.699 --> 00:08:14.430
lot more issues that we are issuing.
I'm just going to go ahead and commit this.
89

90
00:08:18.620 --> 00:08:22.990
We're going to say Closes #11 so
90

91
00:08:22.990 --> 00:08:27.690
that is a commit message to tell GitHub to
go ahead and close that.
91

92
00:08:28.370 --> 00:08:34.759
I'm going to go ahead and do a
Commit and Push, like so. Come on IntelliJ,
92

93
00:08:34.759 --> 00:08:40.800
got a little spinning beach ball there.
And now we can see, I'm going to go ahead
93

94
00:08:40.800 --> 00:08:44.690
and Push that to GitHub.
94

95
00:08:46.310 --> 00:08:50.840
You'll see a little spinning beach ball down at
the bottom. Push is successful. Let's
95

96
00:08:50.840 --> 00:08:56.210
toggle over and we can see that GitHub
already closed that for us. So again, I
96

97
00:08:56.210 --> 00:09:01.730
opened up that issue in GitHub, did
the code changes, and when I committed
97

98
00:09:01.730 --> 00:09:09.540
against it, it got closed. Let's
see if we get to commit
98

99
00:09:09.560 --> 00:09:15.040
and see that that's the commit id inside
of GitHub. If I take a look at that,
99

100
00:09:15.040 --> 00:09:20.570
you can see that refactoring to common
crud Interface closes #eleven and
100

101
00:09:20.570 --> 00:09:24.970
here's the changes that I made inside
GitHub.
