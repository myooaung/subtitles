WEBVTT
0
1
00:00:04.160 --> 00:00:09.000
In this video, we are going to look at
implementing the display owner record
1

2
00:00:09.000 --> 00:00:14.370
for our Spring Pet Clinic project.
I've got the task open here. I'm going to
2

3
00:00:14.370 --> 00:00:19.199
just go and assign it to myself here to
get started. Let's take a quick look
3

4
00:00:19.199 --> 00:00:23.010
at the Spring implementation. I'm going to
steal shamelessly from that but we're
4

5
00:00:23.010 --> 00:00:26.849
going to step through exactly what they're
doing. Now one thing I haven't shown in
5

6
00:00:26.849 --> 00:00:31.850
the class so far here, I'm looking on
line 126 down here. This is the
6

7
00:00:31.850 --> 00:00:35.940
controller method that's going to handle
the find operation. So you can see it
7

8
00:00:35.940 --> 00:00:42.149
goes by owners owner ID to bring in that
path variable to display a specific
8

9
00:00:42.149 --> 00:00:46.829
owner record. In this case, it's
returning a Model and View. We've only
9

10
00:00:46.829 --> 00:00:50.730
been returning back a String for the
view. Model and View is kind of like a
10

11
00:00:50.730 --> 00:00:55.469
composite object. You can see there, it's
a specifying it creates a new Model and
11

12
00:00:55.469 --> 00:00:59.430
View with a path and that's
basically the view name. And then we add
12

13
00:00:59.430 --> 00:01:03.210
in an object and that's to the Model. So
very similar to what we've been doing
13

14
00:01:03.210 --> 00:01:07.890
where one technique is where we
inject the Model into the controller so
14

15
00:01:07.890 --> 00:01:11.400
this is a different technique that the
Spring team is showing here. I'm
15

16
00:01:11.400 --> 00:01:15.930
going to go ahead and model that and
then the other thing that we are going
16

17
00:01:15.930 --> 00:01:21.180
to do is here I've brought up the
templates that they have and that
17

18
00:01:21.180 --> 00:01:25.170
they've got four templates around owners.
We're going to implement those as well
18

19
00:01:25.170 --> 00:01:30.630
in this lesson. I'm not going to
modify the HTML from the original
19

20
00:01:30.630 --> 00:01:33.450
Spring project right now.
I'm just going to bring that into the
20

21
00:01:33.450 --> 00:01:36.630
project and we're going to work with
that. So I'm going to jump over to IntelliJ
21

22
00:01:36.630 --> 00:01:43.710
now. I've gone ahead and I copied
over the different HTML files. The
22

23
00:01:43.710 --> 00:01:48.210
one thing that we are going to be
working with is ownerDetails. this
23

24
00:01:48.210 --> 00:01:52.770
is the owner information and we're going
to retire eventually retire our index
24

25
00:01:52.770 --> 00:01:58.500
page. But here's our owner details. We
can see the Thymeleaf code that's been
25

26
00:01:58.500 --> 00:02:03.869
implemented by the Spring guys and this
sets up basically to display a specific
26

27
00:02:03.869 --> 00:02:10.200
owner. Now what we want to do is go ahead
and implement that. Right now, in our
27

28
00:02:10.200 --> 00:02:15.920
implementation, we have
find but we need to actually add in the
28

29
00:02:15.920 --> 00:02:23.180
display. Just to reiterate, this guy
here, I can almost. Let me just go ahead
29

30
00:02:23.180 --> 00:02:32.330
and copy this guy over and then modify
it. So that does a GetMapping which is
30

31
00:02:32.330 --> 00:02:40.810
what we want. ModelAndView import him
and also PathVariable.
31

32
00:02:40.810 --> 00:02:48.950
We've already mapped owner so we can
get rid of that. We're just going to take
32

33
00:02:48.950 --> 00:02:55.580
in the ownerId. Here we are bringing
in an integer for the owneId and we
33

34
00:02:55.580 --> 00:03:00.560
are returning back the view owners ownerDetails so you can see here that's one
34

35
00:03:00.560 --> 00:03:05.570
of the views that I've brought over. In
here, they've refactor things a little
35

36
00:03:05.570 --> 00:03:15.310
bit. I'm going to change this to be our
ownerService. In here, this should be
36

37
00:03:15.310 --> 00:03:19.430
Long for our purposes and that should do
it.
37

38
00:03:19.430 --> 00:03:24.200
Let's take a look at our test. We want to
write a controller test for those so I'm
38

39
00:03:24.200 --> 00:03:30.340
going to copy this and work with that.
39

40
00:03:37.150 --> 00:03:49.780
I'm going to copy this here. We're going to
say when ownerService.findById.
40

41
00:03:49.780 --> 00:03:59.170
We're going to return back an owner like
so. Oh my mistake.
41

42
00:04:09.540 --> 00:04:14.680
We're setting up Mockito to return
back an Owner object here. I'm just
42

43
00:04:14.680 --> 00:04:18.579
saying then return and we're using the
Owner builder to return back an Owner
43

44
00:04:18.579 --> 00:04:26.800
object. In this case, we want to say 123. We're going to expect isOk
44

45
00:04:26.800 --> 00:04:33.820
and we want the path to be this owners
ownerDetails. I'm just copying that
45

46
00:04:33.820 --> 00:04:39.580
over to this. Let's take a look at
that OwnerController. It's going to add
46

47
00:04:39.580 --> 00:04:48.820
in an object. I'm going to add in an object. Take a
look at. I don't remember what the name is
47

48
00:04:48.820 --> 00:04:56.259
on that. We are going to have to see. 
I'm kind of curious as to what that
48

49
00:04:56.259 --> 00:05:01.210
object. It's adding an object to the ModelAndView but I don't see how it's being
49

50
00:05:01.210 --> 00:05:04.300
a reference for the name so let's go
ahead and experiment with that. I'm going to...
50

51
00:05:04.300 --> 00:05:09.570
it's been a while since I use ModelAndView so we may learn a little bit here.
51

52
00:05:09.570 --> 00:05:14.699
That's attribute. I'd like to get an owner.
52

53
00:05:19.980 --> 00:05:24.130
Going to make sure that the owner is not null
so let's go ahead and run this test now
53

54
00:05:24.130 --> 00:05:36.389
and see if it does in fact work out
properly. Getting a Null Pointer Exception
54

55
00:05:36.389 --> 00:05:39.389
here.
55

56
00:05:50.100 --> 00:05:55.740
So apparently it's implying that the model
is null so that's interesting so let's
56

57
00:05:55.740 --> 00:05:59.790
go ahead and run this in debugger. I'm
going to debug this a little bit so let's
57

58
00:05:59.790 --> 00:06:03.800
come in here and let's set a breakpoint.
58

59
00:06:08.690 --> 00:06:15.180
Okay, so we did get the model and map
owner. That's what I wanted I'd
59

60
00:06:15.180 --> 00:06:23.970
wanted is that the owner property. So
that is good. Let's see if we can run
60

61
00:06:23.970 --> 00:06:36.600
to that breakpoint. Step over that. Look at the
view. Let's take a look at the MVC
61

62
00:06:36.600 --> 00:06:50.340
object itself. I'm inspecting the object
here. I'm going to go ahead and drill
62

63
00:06:50.340 --> 00:07:00.020
into this. I'm just stepping through
trying to get a hold of Model.
63

64
00:07:07.300 --> 00:07:11.930
Now moving a little bit faster here, but
I'm just going through stepping it into
64

65
00:07:11.930 --> 00:07:17.750
the stack here. It's going through
the matcher stuff. I'm trying to see
65

66
00:07:17.750 --> 00:07:31.340
exactly what's null there. So we did get
a matcher. Come over here. Nope.
66

67
00:07:31.340 --> 00:07:34.510
Skipped over it.
67

68
00:07:41.680 --> 00:07:47.139
Take a closer look here. For some
reason, I'm getting a null pointer out of
68

69
00:07:47.139 --> 00:07:53.080
this and I'm not expecting that because
I did see the owner attribute get added.
69

70
00:07:53.080 --> 00:07:58.690
So I'm going to pause this and look at it a
little bit closer here. Okay, I refactored
70

71
00:07:58.690 --> 00:08:03.160
the test there so that is null was
popping. I was using that matcher
71

72
00:08:03.160 --> 00:08:07.660
improperly and actually improved the
test a little bit here. You can see the
72

73
00:08:07.660 --> 00:08:11.490
refactoring that I did. 
We went from isNull so now I added
73

74
00:08:11.490 --> 00:08:17.139
hasProperty. I'm making sure that this
model comes back. It has an attribute
74

75
00:08:17.139 --> 00:08:24.400
called owner and that owner has an ID of
a Long of 1. So I'm making sure that
75

76
00:08:24.400 --> 00:08:33.969
that does match that. So now, when I run
this, this test does pass. So I
76

77
00:08:33.969 --> 00:08:40.630
can see that test pass. And now let's go
ahead and run this. We'll make sure that
77

78
00:08:40.630 --> 00:08:45.310
it's running. I'm going to collapse this
package. Remember our DataLoader, we
78

79
00:08:45.310 --> 00:08:53.040
are adding in owners. Our service is
going to save it. So let's go ahead and
79

80
00:08:53.040 --> 00:09:03.400
start this up. Again, we are initialized
in the database and we failed to start.
80

81
00:09:03.400 --> 00:09:08.740
Oh I got something running on 8080.
Let's pause this. I'm going to start that
81

82
00:09:08.740 --> 00:09:15.310
back up. Yeah that was my mistake. I
have several IntelliJ windows open and I
82

83
00:09:15.310 --> 00:09:20.140
had another project cooking. I had
something running inside of IntelliJ, a
83

84
00:09:20.140 --> 00:09:24.100
different Spring Boot project so I had a
pork conflict there. Two things can't run
84

85
00:09:24.100 --> 00:09:29.160
on 8080. It looks like we are up and
running. Let's toggle over to Chrome.
85

86
00:09:29.160 --> 00:09:39.940
Bring up tab. So now if I come here, so
remember, come back to this controller. So
86

87
00:09:39.940 --> 00:09:46.589
if I do owners and I should have, a let's
do owners slash one
87

88
00:09:48.279 --> 00:09:53.209
We had an error status 500 so let's take
a look and investigate that. You can
88

89
00:09:53.209 --> 00:10:04.429
see we got the stack trace here in the
log. Property field of type, that is
89

90
00:10:04.429 --> 00:10:07.369
something that we are going to implement.
so  I'm going to show you what's
90

91
00:10:07.369 --> 00:10:15.439
happening here. We are bringing up
this ownerDetails. Where is he at
91

92
00:10:15.439 --> 00:10:20.929
does it give us a line number. That
this is actually a Thymeleaf there. I'm
92

93
00:10:20.929 --> 00:10:27.259
looking at the stack trace to see if we
get a line. Pet type is line 52. So they
93

94
00:10:27.259 --> 00:10:31.759
come down here showing you the debug. 
We are not setting pet types here right
94

95
00:10:31.759 --> 00:10:40.069
now. This is a model attribute that we
need to add in. So pet type. Just double
95

96
00:10:40.069 --> 00:10:47.209
check that. Yep, so yeah. It's looking
for an attribute of pet type right now.
96

97
00:10:47.209 --> 00:10:53.299
We are looking for a model attribute
of pet and I am going to implement that
97

98
00:10:53.299 --> 00:10:57.829
in the next video. So right now, our
application is broken. I'm going to check
98

99
00:10:57.829 --> 00:11:02.839
it in like this and we will fix this in
the next video because I want to get
99

100
00:11:02.839 --> 00:11:05.869
into model attributes, a completely
different subject and we are getting a
100

101
00:11:05.869 --> 00:11:09.799
little long on time in this video. So I'm
going to stop the video here and we will
101

102
00:11:09.799 --> 00:11:13.579
come back in the next video. I'll
show you how to fix this problem with
102

103
00:11:13.579 --> 00:11:18.649
the template. Because right now, the issue
is it cannot find an object called pet
103

104
00:11:18.649 --> 00:11:22.220
because the supreme expression is
looking for an object called pet.
104

105
00:11:22.220 --> 00:11:25.699
That's not on the model and that's why I
was breaking. In the next video I'm going to
105

106
00:11:25.699 --> 00:11:28.989
show you exactly how we fix that.
