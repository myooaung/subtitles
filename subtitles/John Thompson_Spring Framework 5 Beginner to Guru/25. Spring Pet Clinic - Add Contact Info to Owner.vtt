WEBVTT
0
1
00:00:03.740 --> 00:00:08.790
In this video, we are going to take care
of task number 28 here and that's to add
1

2
00:00:08.790 --> 00:00:12.990
the contact info properties to owners.
So if I come up here to the reference
2

3
00:00:12.990 --> 00:00:20.580
implementation to owner, our Owner.java
that's our POJO. We can see that we
3

4
00:00:20.580 --> 00:00:27.090
have address, city, telephone so let's go
ahead and enhance our Owner with that.
4

5
00:00:36.070 --> 00:00:39.510
So there was an address.
5

6
00:00:50.660 --> 00:00:55.230
Like so. Let's double check
this. So we have address,
6

7
00:00:55.230 --> 00:01:01.059
city, telephone. We have a set of pets and that is all the properties
7

8
00:01:01.059 --> 00:01:05.259
that we have here right now, so that's
good. Let's come over here and take a
8

9
00:01:05.259 --> 00:01:10.780
look at this. I'll show you a little
trick here, so we have this set of pets as
9

10
00:01:10.780 --> 00:01:15.280
well. Normally, what I like to do is keep
these in order so I have these four
10

11
00:01:15.280 --> 00:01:20.770
properties and we already added pets. But
what I'm going to do here, there's a couple
11

12
00:01:20.770 --> 00:01:24.460
different ways you could do this. I'm just
going to delete this and then command N
12

13
00:01:24.460 --> 00:01:30.789
and add in getters and setters.
Just kind of a habit where I could have
13

14
00:01:30.789 --> 00:01:34.240
done it differently, but I just wanted
everything all in the same order. It's
14

15
00:01:34.240 --> 00:01:38.830
easy enough inside of IntelliJ before
you go in and recreate these, so no big
15

16
00:01:38.830 --> 00:01:43.600
deal there. Just a quick tip, I like to
see in my properties in the same order.
16

17
00:01:43.600 --> 00:01:46.929
I have my getters and setters in the same
order of the properties. If I get them
17

18
00:01:46.929 --> 00:01:51.490
out of order, I seen it happen a lot,
where you do get the getters and setters
18

19
00:01:51.490 --> 00:01:57.220
out of orders of properties. As things
get enhanced, it can be a pain. So let's
19

20
00:01:57.220 --> 00:02:03.640
go ahead and this was issue number
28. There's a couple tweaks
20

21
00:02:03.640 --> 00:02:09.429
I want to make to our issues so I'm
going to come in here and do a Git
21

22
00:02:09.429 --> 00:02:14.700
commit on that.
22

23
00:02:15.459 --> 00:02:22.700
That's number 28, right? Yep, so go ahead
and commit that. Don't forget to do the
23

24
00:02:22.700 --> 00:02:24.999
push.
24

25
00:02:26.790 --> 00:02:34.910
Push that. Come back over here,
and here the Create Pet Type
25

26
00:02:34.910 --> 00:02:38.670
Service. I want that
26

27
00:02:38.670 --> 00:02:42.050
to be the map service.
27

28
00:02:46.349 --> 00:02:50.980
So we're going to create a map service
of that. I just want to save that.
28

29
00:02:50.980 --> 00:02:53.760
Not comment.
29

30
00:02:55.420 --> 00:02:59.850
We're going to create a pet service
as well.
30

31
00:03:04.980 --> 00:03:09.250
So we're going to create map based
implementation so we're going to use a hash
31

32
00:03:09.250 --> 00:03:15.040
map to mimic our persistence layer and
then as well as with the specialty
32

33
00:03:15.040 --> 00:03:20.739
service.
We'll go ahead and edit that.
33

34
00:03:26.850 --> 00:03:31.990
We'll go ahead and save that, so that
makes our task a little more clear
34

35
00:03:31.990 --> 00:03:35.380
because we're actually going through
implementing two things at this point in
35

36
00:03:35.380 --> 00:03:40.240
time. We are heading in map services
and then we're also going to come back
36

37
00:03:40.240 --> 00:03:43.180
later and initially we're going to do
Spring Data JPA
37

38
00:03:43.180 --> 00:03:48.070
so we'll be able to run both with a
profile but we need to implement all the
38

39
00:03:48.070 --> 00:03:53.440
map based services as well. I want to
make those tests clear. That's what
39

40
00:03:53.440 --> 00:03:57.000
we were doing with these tasks.
