WEBVTT
0
1
00:00:05.210 --> 00:00:09.930
We just took a look at the Spring Boot  auto configuration properties. What we wanted to do now is take a live look
1

2
00:00:09.930 --> 00:00:14.260
at that stuff you do some really like maybe a command line and we're going to take a look at the auto
2

3
00:00:14.280 --> 00:00:19.200
configuration properties take a little peek under the covers of what good is doing I'm going to show
3

4
00:00:19.200 --> 00:00:24.570
you how to get a debug report out of spring boot to see all that all the configuration stuff that's
4

5
00:00:24.570 --> 00:00:25.450
going on.
5

6
00:00:25.570 --> 00:00:27.710
Force within Spring and Spring Boot.
6

7
00:00:28.080 --> 00:00:28.340
OK.
7

8
00:00:28.350 --> 00:00:31.680
Let's go in and look at some of those Spring Boot stuff that we talked about.
8

9
00:00:31.950 --> 00:00:35.950
And one is a SpringBootApplication and this is annotation that we like.
9

10
00:00:36.000 --> 00:00:38.480
And this is our recipe application.
10

11
00:00:38.480 --> 00:00:41.030
This is what makes it a Spring Boot Application.
11

12
00:00:41.340 --> 00:00:47.850
And if we do a control click on that or command click, you can see it brings that up and we can see here's
12

13
00:00:47.850 --> 00:00:55.920
the AutoConfiguration, the ComponentScan and SpringBootConfiguration so that brings up all the configuration
13

14
00:00:55.920 --> 00:00:58.580
attributes of the SpringBootConfiguration.
14

15
00:00:58.920 --> 00:01:02.400
Not wrong that here it's from Configuration.
15

16
00:01:02.400 --> 00:01:09.360
So that's the three annotations that it brings an end to the world so that's what is enabling our application
16

17
00:01:09.360 --> 00:01:10.340
to run.
17

18
00:01:10.400 --> 00:01:12.270
Now see if I can find that DataSource class
18

19
00:01:16.000 --> 00:01:18.970
you can see right down here DataSourceAutoConfiguration.
19

20
00:01:18.970 --> 00:01:22.960
So this is the Spring Boot Auto Configuration as being used for the DataSource so I want to show you
20

21
00:01:23.260 --> 00:01:24.270
guys real quick.
21

22
00:01:25.960 --> 00:01:32.970
So we can see this this is coming out of a jar you can see on the top left here this the spring-boot-autoconfigure
22

23
00:01:33.020 --> 00:01:33.770
jar.
23

24
00:01:34.130 --> 00:01:39.120
And so that's a configuration and it's got this annotation ConditionalOnClass.
24

25
00:01:39.250 --> 00:01:46.640
That means if in the Spring Context we have not defined a DataSource or an embedded database type,
25

26
00:01:46.840 --> 00:01:53.050
this is going to kick in so and then it kicks in from there so that these are all ConditionalOnMissingBean
26

27
00:01:53.050 --> 00:02:00.220
so we don't have a DataSourceInitializer and they're ordering some properties and so a lot going
27

28
00:02:00.220 --> 00:02:06.640
on here some advanced configuration inside a Spring so this all configuration or dependency on whether
28

29
00:02:06.640 --> 00:02:08.740
or not you've defined things.
29

30
00:02:08.800 --> 00:02:17.410
So this allows you to easily override stuff because if you provide one of these beans then this configuration
30

31
00:02:17.410 --> 00:02:18.580
doesn't kick in.
31

32
00:02:19.060 --> 00:02:25.230
That's making sense to you so that this allows Spring Boot to go out and create the beans.
32

33
00:02:25.240 --> 00:02:32.190
But then you've done a Spring Configuration and defined one of these Beans for a specific type then 
33

34
00:02:32.200 --> 00:02:37.060
AutoConfiguration inside a Spring Boot doesn't kick in and you don't get a duplicate being created.
34

35
00:02:37.060 --> 00:02:40.630
Now I want to show you some of the command line tools as well.
35

36
00:02:40.750 --> 00:02:46.780
And when I toggle over command line and let's look at a couple of things here.
36

37
00:02:46.780 --> 00:02:53.980
So this is a running maven and we can run the spring-boot plugin and help.
37

38
00:02:54.170 --> 00:02:56.570
And this is going to show us all the 
38

39
00:02:57.010 --> 00:03:01.210
It's actually providing detailed help there to the different options.
39

40
00:03:01.310 --> 00:03:03.710
So you do start, stop, run.
40

41
00:03:03.860 --> 00:03:09.200
And these are the parameters that we can define as we're running with them so I'm not going to go to
41

42
00:03:09.260 --> 00:03:10.250
every one there.
42

43
00:03:10.280 --> 00:03:13.220
You can go through and take a look at it as needed.
43

44
00:03:13.220 --> 00:03:16.990
And what I want to do also is spring-boot run.
44

45
00:03:17.030 --> 00:03:24.140
And if passed a command line argument to spring-boot debug it's going to give us a Auto Configuration
45

46
00:03:24.140 --> 00:03:24.760
report.
46

47
00:03:24.920 --> 00:03:29.560
I am going to run that now and it's going to bring up our application.
47

48
00:03:29.720 --> 00:03:39.790
It's either the usual chatter there and now this is Unconditional Classes, Exclusions, this is all the Spring Boot
48

49
00:03:39.790 --> 00:03:45.160
Configuration so you see a lot of like WebMVC with  flux.
49

50
00:03:45.160 --> 00:03:50.890
So a lot of conditional stuff is going on and we've been using Thymeleaf and see there's a whole section
50

51
00:03:50.890 --> 00:03:52.780
on Thymeleaf properties here.
51

52
00:03:52.780 --> 00:03:58.490
A lot of stuff that did not go on so this is going to go through and fine all the Spring Boot
52

53
00:03:59.130 --> 00:04:03.400
Auto configuration Beans and here's RabbitAutoConfiguration.
53

54
00:04:03.430 --> 00:04:07.000
Obviously we're not using RabbitMQ in this project.
54

55
00:04:07.000 --> 00:04:12.730
So this is stuff that did not match and and we say we didn't find no Rabbit dependencies are there
55

56
00:04:12.730 --> 00:04:18.840
so it's not going to kick in the Rabbit configuration. I am going to close this down now.
56

57
00:04:18.840 --> 00:04:25.610
And I want to show you a trick inside of intellij. Come back over here and
57

58
00:04:26.140 --> 00:04:32.810
if we come up here to our Run dialogue, Edit Configurations and this gives us options for that Run dialogue
58

59
00:04:33.840 --> 00:04:38.580
and we have a couple options here and one is the Enable debug output
59

60
00:04:38.720 --> 00:04:43.040
and that gives us the same thing, going to Apply then say OK.
60

61
00:04:43.080 --> 00:04:49.250
Now when I run this, next time it runs we'll see the debug output inside of intellij, so kind
61

62
00:04:49.250 --> 00:04:55.460
of handy thing for us to use with Spring Boot and works a little bit better on the screen because we're
62

63
00:04:55.460 --> 00:04:57.050
not don't have the wrapping.
63

64
00:04:57.050 --> 00:05:03.560
So now you can see a lot of the Auto Configuration and scroll up towards the top of this and we start
64

65
00:05:03.560 --> 00:05:11.330
taking a look at what was configured for us and obviously the Auto Configuration is quite lengthy.
65

66
00:05:11.350 --> 00:05:13.870
And that was just a list of the negative matches.
66

67
00:05:14.270 --> 00:05:19.790
Not a lot in this project so we're going to have a lot of negative matches but you can also see there's
67

68
00:05:20.030 --> 00:05:22.780
a lot of things that it did Auto Configure for us.
68

69
00:05:22.850 --> 00:05:27.420
So like the timely template template resolvers that's all wired up for us.
69

70
00:05:28.790 --> 00:05:35.600
The Spring web MVC stuff, the Tomcat Rest template Auto Configuration so we got that right
70

71
00:05:35.600 --> 00:05:36.650
on the box.
71

72
00:05:36.830 --> 00:05:42.800
And this is really one of powerful things about Spring Boot is that this before Spring Boot these are
72

73
00:05:42.800 --> 00:05:48.690
all components that you would have to wire up yourself lihe here's a Jackson Message Converter.
73

74
00:05:48.800 --> 00:05:54.440
There's a Jackson means for converting JSON that's already on the class path, already in the Spring Context,
74

75
00:05:54.440 --> 00:05:57.810
so our application already is ready to accept
75

76
00:05:57.870 --> 00:06:02.020
JSON, so we don't have to wire in Jackson.
76

77
00:06:02.360 --> 00:06:10.160
Here's the H2ConsoleAutoConfiguration so I saw that and the Spring Boot Auto Configuration kicked
77

78
00:06:10.160 --> 00:06:10.840
in.
78

79
00:06:10.850 --> 00:06:14.860
Now you saw quite a bit of stuff going on there under the covers within Spring Boot.
79

80
00:06:14.990 --> 00:06:19.820
Like I said there's a lot of stuff that we normally would have to configure if we didn't have Spring
80

81
00:06:19.820 --> 00:06:20.120
Boot.
81

82
00:06:20.130 --> 00:06:25.130
And this is all Beans that we'd be wiring up just before we got our little web application come up so we've
82

83
00:06:25.130 --> 00:06:30.260
been really leveraging that a lot because all this comes out of the box with Spring Boot. That's exactly
83

84
00:06:30.260 --> 00:06:36.230
why I've been using Spring Boot,so you can get up and working with Spring rapidly and quickly and later in
84

85
00:06:36.230 --> 00:06:38.620
this course we are going to start removing Spring Boot.
85

86
00:06:38.620 --> 00:06:43.490
So we are going to definitely be working with a lot more of the stuff that we saw in our configuration.
86

87
00:06:43.490 --> 00:06:48.500
We're going to get into that a lot deeper going forward but I want to get you exposed to what's going
87

88
00:06:48.500 --> 00:06:53.960
on and get you a little more comfortable because I see a lot of people coming through to try and learn
88

89
00:06:53.960 --> 00:06:59.410
Spring Framework and Spring Boot's been a huge blessing to the community.
89

90
00:06:59.410 --> 00:07:06.530
It's a huge time saver but for people new to the Spring Framework, they get confused about what Spring
90

91
00:07:06.530 --> 00:07:09.290
Boot is.
91

92
00:07:09.350 --> 00:07:15.080
A lot of the industry getting confused like other surveys about Are you developing web applications with
92

93
00:07:15.080 --> 00:07:20.510
Spring MVC or spring Boot. Spring Boot is just a wrapper around the Spring framework. It gives you
93

94
00:07:20.510 --> 00:07:22.400
a lot of activity tools.
94

95
00:07:22.410 --> 00:07:27.740
Spring Boot is not a web application, Spring MVC is the web application so I see a lot of confusion about
95

96
00:07:27.980 --> 00:07:36.440
which pieces doing that so keep in the back of your head that Spring Boot is really a configuration
96

97
00:07:36.440 --> 00:07:42.680
wrapper around all of the Spring framework. All the web stuff that's going to be going through Spring MVC,
97

98
00:07:42.740 --> 00:07:49.100
security stuff is going to be going through Spring security, Spring Boot is just giving you sensible defaults
98

99
00:07:49.100 --> 00:07:53.540
for all the stuff that we're going to be using and stuff that you can override and we'll definitely be getting
99

100
00:07:53.540 --> 00:07:55.370
into that going forward and of course.
