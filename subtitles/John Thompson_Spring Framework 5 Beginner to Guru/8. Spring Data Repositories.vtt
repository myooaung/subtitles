WEBVTT
0
1
00:00:05.000 --> 00:00:08.340
In this video we are going to implement Spring Data Repositories.
1

2
00:00:08.500 --> 00:00:14.320
Now Spring Data is really a family of projects. So we're going to be looking at Spring Data JPA specifically
2

3
00:00:14.620 --> 00:00:17.080
which is made to work with Hibernate.
3

4
00:00:17.080 --> 00:00:23.710
Now Spring Data is a very cool project and really really alleviates a lot of coding that you have to
4

5
00:00:23.710 --> 00:00:25.470
do around database operations.
5

6
00:00:25.600 --> 00:00:28.360
So it implements a repository pattern.
6

7
00:00:28.360 --> 00:00:34.950
It was originally if I remember correctly it was originally proposed by Martin Fowler to use data repository.
7

8
00:00:34.960 --> 00:00:41.080
So it's a competing pattern to data access objects is something you might be familiar if you're
8

9
00:00:41.590 --> 00:00:49.810
used to writing JEE type stuff. Repositories is a slightly different pattern where you have a repository
9

10
00:00:50.110 --> 00:00:54.700
object that is responsible for your persistence and query operation.
10

11
00:00:54.700 --> 00:01:01.270
So I actually when I first started using it and it was a little foreign to me but now I have grown to
11

12
00:01:01.270 --> 00:01:07.660
like the pattern really from its simplicity because it is a very simple pattern to implement. In Spring
12

13
00:01:07.660 --> 00:01:14.650
Data JPA, what it is doing on underneath the covers is taking care of all the hibernate commands, all
13

14
00:01:14.650 --> 00:01:21.610
the transactional commands, just about everything that you have to do normally because there is a lot
14

15
00:01:21.610 --> 00:01:22.630
of ceremonial code.
15

16
00:01:22.630 --> 00:01:30.070
If you've ever written JDBC code directly, you can understand how much ceremonial code there is.
16

17
00:01:30.220 --> 00:01:37.600
And this really abstracts it and allows us as developers to go in and just focus on providing business
17

18
00:01:37.600 --> 00:01:43.870
functionality. We are just going to scratch the surface of the capabilities of Spring Data JPA in
18

19
00:01:43.870 --> 00:01:51.490
this video. Coming up in the course, we are going to get into a lot more to do with Spring Data JPA because
19

20
00:01:51.490 --> 00:01:55.470
it is a very robust project and you get a lot of value out of it.
20

21
00:01:55.480 --> 00:02:02.380
But here we're just going to go through and set up Spring Data JPA repositories for our two books and
21

22
00:02:02.470 --> 00:02:06.160
authors objects and you're going to be at the end of video.
22

23
00:02:06.160 --> 00:02:07.420
I mean that's all I had to do.
23

24
00:02:07.420 --> 00:02:13.960
Yes, that is all you have to do here to get up and going with Spring Data JPA. And in future videos, we
24

25
00:02:13.960 --> 00:02:18.090
will be working more and more with the repositories we set up inside this video.
25

26
00:02:18.160 --> 00:02:20.970
Let's go ahead and implement our repository.
26

27
00:02:20.970 --> 00:02:24.520
So I'm going to come in here and I going to create a new package.
27

28
00:02:29.040 --> 00:02:35.840
I'm just going to call repositories. What I want to do is come up here and I'm going to create a
28

29
00:02:35.840 --> 00:02:37.410
new Java class.
29

30
00:02:37.430 --> 00:02:47.200
This is gonna be an interface and I would say author repository like so and we will add that and to Git for
30

31
00:02:47.200 --> 00:02:56.080
your reference. We are going to extend CrudRepository and that takes to generics. The first property
31

32
00:02:56.360 --> 00:03:00.220
is gonna be the type and the second is going to be the ID value.
32

33
00:03:00.220 --> 00:03:10.000
So go ahead and inspect author real quick. And just remember that we want author and then we have
33

34
00:03:10.000 --> 00:03:10.570
the long.
34

35
00:03:10.600 --> 00:03:12.520
So the box primitive a long.
35

36
00:03:12.520 --> 00:03:14.260
So let's go ahead and add that now.
36

37
00:03:17.820 --> 00:03:21.680
And that's all we have to do to set up a CrudRepository.
37

38
00:03:21.680 --> 00:03:24.040
Now what this is going to give us.
38

39
00:03:24.350 --> 00:03:27.620
Let's take a quick look at the CrudRepository.
39

40
00:03:27.740 --> 00:03:33.800
So this is gonna extend out the repository from a Crud
Repository. We are going to get save, save all,
40

41
00:03:33.800 --> 00:03:44.240
find by ID, exist by ID, find all, find by ID, account, delete by ID, delete by entity, delete all from
41

42
00:03:44.240 --> 00:03:47.670
a list and then delete everything in the repository.
42

43
00:03:47.940 --> 00:03:51.920
This also extends out repository as well.
43

44
00:03:52.180 --> 00:03:59.600
And that doesn't have any specific methods that it's calling for. And what's going to happen at runtime
44

45
00:03:59.600 --> 00:04:02.730
Spring is going to provide the implementation for this.
45

46
00:04:02.730 --> 00:04:08.450
So we are just providing the interface. Spring Data JPA is going to provide the implementation for us
46

47
00:04:08.750 --> 00:04:12.380
and it will implement all those methods for us to work with.
47

48
00:04:12.380 --> 00:04:20.520
So let's also set this up for book so new Java class interface. We'll call this a book repository.
48

49
00:04:24.090 --> 00:04:31.880
That's going to also extend out CrudRepository and that's gonna be book and long
49

50
00:04:32.140 --> 00:04:32.560
like so.
50

51
00:04:35.770 --> 00:04:40.750
We want our book not out of Java AWT. Definitely not that one.
51

52
00:04:40.980 --> 00:04:43.840
And so that that will set up the book repository.
52

53
00:04:43.860 --> 00:04:51.570
So at this point we've done everything we need to to configure two repositories for our author entity
53

54
00:04:51.630 --> 00:04:52.800
and our book entity.
