WEBVTT
0
1
00:00:09.110 --> 00:00:12.540
Okay. In this section of the course, we
are gonna take a look at Docker Hub.
1

2
00:00:12.540 --> 00:00:17.970
Docker Hub is a public Docker
registry. What that is, it's a lot
2

3
00:00:17.970 --> 00:00:22.949
like Maven Central. Maven Central is a
Maven repository, public repository of
3

4
00:00:22.949 --> 00:00:28.349
artifacts. So, the Docker registry or
Docker Hub is a Docker registry, that's
4

5
00:00:28.349 --> 00:00:32.880
publicly available, and what this has, is
lots of Docker images, that we can pull
5

6
00:00:32.880 --> 00:00:37.829
down to our local system. By default,
when we ask for something, Docker is
6

7
00:00:37.829 --> 00:00:41.730
gonna go out and look at Docker hub for
that image. Now we can specify a
7

8
00:00:41.730 --> 00:00:47.250
different image through the naming
convention by specifying a URL, in front
8

9
00:00:47.250 --> 00:00:50.640
of the image name that we want. This
is something that you can do if you
9

10
00:00:50.640 --> 00:00:54.059
developed your own images and are
hosting them internally, such as an
10

11
00:00:54.059 --> 00:00:58.050
artifactory. Artifactory does come
support with its own Docker registries,
11

12
00:00:58.050 --> 00:01:02.129
where, if you're working for a company
you could do so. But for the purposes of
12

13
00:01:02.129 --> 00:01:08.070
this course, Docker Hub, which is a
public repository a registry of Docker
13

14
00:01:08.070 --> 00:01:11.850
images is gonna be perfect for our
needs, because if you can think of an
14

15
00:01:11.850 --> 00:01:15.930
open-source project out there, it's
probably up there already, so you can
15

16
00:01:15.930 --> 00:01:20.640
bring down a pre-configured image from
Docker hub and get cooking right away
16

17
00:01:20.640 --> 00:01:24.960
with that image on your local system. So
a lot of cool stuff up there and
17

18
00:01:24.960 --> 00:01:29.130
available for you to use. In this section,
I'm gonna jump over to the computer
18

19
00:01:29.130 --> 00:01:32.610
now and we'll take a look at a couple of
projects. I'm gonna point a couple
19

20
00:01:32.610 --> 00:01:36.270
things out to you, just get your feet wet
with Docker Hub and some of the
20

21
00:01:36.270 --> 00:01:40.470
available images that are up there for
our use. Docker Hub, which is a
21

22
00:01:40.470 --> 00:01:45.149
publicly available docker registry. Okay.
I've got Chrome up and have already
22

23
00:01:45.149 --> 00:01:50.939
navigate over to hub.docker.com so this
is Docker hub. What I've done is, I've
23

24
00:01:50.939 --> 00:01:56.310
searched on the mysql image and you can
actually, I think it shows you here on the
24

25
00:01:56.310 --> 00:01:59.939
right hand side
docker pull mysql. So that would pull
25

26
00:01:59.939 --> 00:02:05.040
down the latest image of the Dockerfile.
Now, what we can see here is that we've
26

27
00:02:05.040 --> 00:02:13.390
got, this is pretty typical of a Dockerfile or open the Docker registry on
27

28
00:02:13.390 --> 00:02:18.580
Docker Hub. So we can see docker run --name
and there's a number of things that are
28

29
00:02:18.580 --> 00:02:26.470
gonna change here, so we can use connect commands docker exec. So every Docker
29

30
00:02:26.470 --> 00:02:31.030
image is gonna have its own
construction file. What's important
30

31
00:02:31.030 --> 00:02:34.750
here is there's some environment
variables that will customize this image
31

32
00:02:34.750 --> 00:02:39.610
for our use. So if we want to set up a
special MySQL_ROOT_PASSWORD, we just need
32

33
00:02:39.610 --> 00:02:42.700
to pass in that password, and that will
be set up in this for the time that we
33

34
00:02:42.700 --> 00:02:46.840
run this image. It's gonna set up
users and passwords that are
34

35
00:02:46.840 --> 00:02:52.060
optional. So a number of things here, that
we can do by MySQL. Now let me contrast
35

36
00:02:52.060 --> 00:02:58.090
us with Postgres, another very popular
database, and actually we're gonna get a
36

37
00:02:58.090 --> 00:03:01.540
little blurb there on Postgres. But now
we have a whole new set of environment
37

38
00:03:01.540 --> 00:03:06.010
variables, that we can work with. This
is unique to the Postgres Docker image
38

39
00:03:06.010 --> 00:03:10.360
and the specific Postgres Docker image
that we are working with. Now just as a
39

40
00:03:10.360 --> 00:03:15.220
reminder, I'm gonna come up here, and we
can see that we have tags here. So these
40

41
00:03:15.220 --> 00:03:20.410
are different Postgres images that are
available in Dockerfiles
41

42
00:03:20.410 --> 00:03:25.180
that we can pull down from Docker Hub if
we wanted a specific Postgres image. If
42

43
00:03:25.180 --> 00:03:30.340
not, if we leave the tag empty, then
latest is gonna come down. So
43

44
00:03:30.340 --> 00:03:35.860
this is a way that we can do regression
testing to an older version of Postgres
44

45
00:03:35.860 --> 00:03:42.549
or MySQL or insert whatever open-source
project you are working with here. So, we
45

46
00:03:42.549 --> 00:03:45.850
do have a lot of different options there.
But I want you to get aware of
46

47
00:03:45.850 --> 00:03:51.400
these are like fully configured Linux
environments for their respective
47

48
00:03:51.400 --> 00:03:56.650
database, so there's Postgres, there's MySQL,
there's MongoDB. If you can think of a
48

49
00:03:56.650 --> 00:04:01.060
Linux based database a lot of open
source ones out there, a lot of open
49

50
00:04:01.060 --> 00:04:05.920
source projects, Redis, elastic search, so
all the stuff is gonna be out there
50

51
00:04:05.920 --> 00:04:11.019
in Docker Hub for us to pull down. But
the key point here is, they are all gonna
51

52
00:04:11.019 --> 00:04:14.769
be unique. What you're gonna find
when you go out to Docker Hub is that
52

53
00:04:14.769 --> 00:04:18.850
the documentation is generally pretty
good. It's gonna give you a good
53

54
00:04:18.850 --> 00:04:23.770
jump on, getting this set up for use. Okay
so that's a quick introduction to Docker
54

55
00:04:23.770 --> 00:04:27.470
Hub. So like I said, you can find all
kinds of stuff up there. There's
55

56
00:04:27.470 --> 00:04:31.340
a lot of images. Everyday there's been
new images being added. So if there's a
56

57
00:04:31.340 --> 00:04:35.270
major open-source project, it probably is
a Docker image up on Docker Hub for your use.
57

58
00:04:35.270 --> 00:04:42.500
Now, just this past summer, is a
beginning 2017, so 2016 I went up there. I
58

59
00:04:42.500 --> 00:04:47.450
found images for elastic search. I found
it for RabbitMQ, Kibana.
59

60
00:04:47.450 --> 00:04:53.000
I was able to get a pretty robust
stack, just from default Docker images up
60

61
00:04:53.000 --> 00:04:56.930
on Docker Hub. So this is probably one of
the coolest features to me about Docker
61

62
00:04:56.930 --> 00:05:02.180
where I can go out and like if I want
Postgres, in the old day I'd have to like
62

63
00:05:02.180 --> 00:05:06.200
set up a VM and install Postgres.
It's a big pain in the neck. Now, I can
63

64
00:05:06.200 --> 00:05:10.970
just grab that container, start it up, add
a couple of parameters, and boom. I'm off to
64

65
00:05:10.970 --> 00:05:15.110
the races. So this is a real cool feature
about Docker, where you can grab these
65

66
00:05:15.110 --> 00:05:19.730
pre-configured containers, bring them
down to your system. Now the important
66

67
00:05:19.730 --> 00:05:23.360
part is you got to read the Docker
documentation up on Docker Hub about
67

68
00:05:23.360 --> 00:05:27.350
that image how the author set up that
image. But there's a lot of flexibility.
68

69
00:05:27.350 --> 00:05:31.520
I've been working with Docker for
over a year now, and I keep seeing stuff
69

70
00:05:31.520 --> 00:05:35.690
get better and better. It's a rapidly
evolving area. But these images aren't
70

71
00:05:35.690 --> 00:05:39.290
they're really pretty cool very
versatile. So when you need something, if
71

72
00:05:39.290 --> 00:05:43.940
you need to spool up like ActiveMQ if
you're testing messaging. There's an
72

73
00:05:43.940 --> 00:05:47.780
image up there for it so pull it down,
set it up, and you don't have to install
73

74
00:05:47.780 --> 00:05:52.130
anything. You're cooking already. So
Docker Hub is probably one of my
74

75
00:05:52.130 --> 00:05:58.010
favorite features about Docker. Just for
convenience of rapidly developing and
75

76
00:05:58.010 --> 00:06:02.360
testing to different
open-source projects. So a very cool
76

77
00:06:02.360 --> 00:06:04.960
feature of Docker.
