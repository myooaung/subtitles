WEBVTT
0
1
00:00:04.130 --> 00:00:08.639
Okay! For students doing the pet clinic
project I've been seeing some reports in
1

2
00:00:08.639 --> 00:00:13.860
the community about the SureFire plugin
blowing up. It's failing and is unable
2

3
00:00:13.860 --> 00:00:19.320
to create forked process error exactly
this right here in starting a fork.
3

4
00:00:19.320 --> 00:00:25.019
I saw something like this in a project
I'm working on in my day job, so exactly
4

5
00:00:25.019 --> 00:00:31.410
this. And the solution was to upgrade to
Java 11. Now I haven't run the Circle CI
5

6
00:00:31.410 --> 00:00:36.390
job so I'm going to come over here and I
suspect it's happening and I want to use
6

7
00:00:36.390 --> 00:00:41.010
this as a learning opportunity and let's
go in and run this. I'm going to come up
7

8
00:00:41.010 --> 00:00:44.850
here and say rerun workflow. It's
been two months. I've been focused on the
8

9
00:00:44.850 --> 00:00:48.270
testing project so I have been doing
much on the Spring Pet Clinic project. So
9

10
00:00:48.270 --> 00:00:51.539
it's been about two months since I've
touched it and what's happened since
10

11
00:00:51.539 --> 00:00:56.789
then in the last two months is a release
of the JVM has been made and I believe
11

12
00:00:56.789 --> 00:01:01.710
what's happened underneath the covers is
the base image that Circle CI uses
12

13
00:01:01.710 --> 00:01:06.210
to run the builds in that base
container there's a JVM in there and we
13

14
00:01:06.210 --> 00:01:14.090
did get the failure. So inside that JVM or
inside that container, there's a JVM and
14

15
00:01:14.090 --> 00:01:20.690
what happens is our workflow is using
the latest image from Docker, the open
15

16
00:01:20.690 --> 00:01:25.970
JDK image. So let's come in here and take
a look at the build results and I want
16

17
00:01:25.970 --> 00:01:30.060
to make sure that that is in fact what
is happening.
17

18
00:01:30.060 --> 00:01:37.619
And yeah we can see that the fork
process is failing. When you explain
18

19
00:01:37.619 --> 00:01:42.450
this here. So let's jump over to IntelliJ now
and let's come in here and I'll show you
19

20
00:01:42.450 --> 00:01:45.799
exactly what's happening.
20

21
00:01:46.450 --> 00:01:52.780
As in here, we have Circle CI and is
running in the open JDK. So it's got this
21

22
00:01:52.780 --> 00:01:58.090
image tag of 8-jdk. So what's
happening is this is a Circle CI image
22

23
00:01:58.090 --> 00:02:02.890
that has all the build tools. It's got
obviously open JDK in it, Open JDK 8,
23

24
00:02:02.890 --> 00:02:06.700
and then it's also got things like Maven
and Gradle and everything that we need
24

25
00:02:06.700 --> 00:02:10.989
for Java built. So that is built into the
Circle CI build image. What has
25

26
00:02:10.989 --> 00:02:15.130
happened underneath the cover since I
ran this built blast is the release of
26

27
00:02:15.130 --> 00:02:20.920
Java 8 has been updated and Maven is now
unhappy about that. I'm not sure if
27

28
00:02:20.920 --> 00:02:27.790
it's a JVM bug or not or it's a settings
change inside the JVM. So let's come with
28

29
00:02:27.790 --> 00:02:32.560
back over here to Chrome and there's a
discussion here. A number of things that
29

30
00:02:32.560 --> 00:02:38.350
they talked about using the system class
loader is one solution and a variety of
30

31
00:02:38.350 --> 00:02:43.660
other solutions. Now I did resolve a very
similar issue by going to Java 11 and
31

32
00:02:43.660 --> 00:02:47.110
that's what I'm going to do with the
Spring Pet Clinic project is upgrade it to
32

33
00:02:47.110 --> 00:02:51.310
Java 11. I'm going to do that in a
different video so we can show the
33

34
00:02:51.310 --> 00:02:55.000
upgrade process to bring it up to Java
11. I suspect that's going to resolve
34

35
00:02:55.000 --> 00:02:59.470
this issue. But I want you to understand
what is happening here as far as the
35

36
00:02:59.470 --> 00:03:05.470
failure is underneath the covers the JVM
version changed. So you need to realize
36

37
00:03:05.470 --> 00:03:09.130
when we are doing the build on Circle CI
that is running inside of a Docker
37

38
00:03:09.130 --> 00:03:13.480
container. Jump back over here to
IntelliJ. It's running specifically
38

39
00:03:13.480 --> 00:03:18.510
inside of this Docker Container and
what happened is the Circle CI guys
39

40
00:03:18.510 --> 00:03:24.880
upgraded the the JDK inside that to new
release of the Java 8 JDK that has been
40

41
00:03:24.880 --> 00:03:28.810
upgraded and now we are failing. So our
build environment changed and that is
41

42
00:03:28.810 --> 00:03:35.459
why it is failing. My solution right
now. I'm recording this in November 2018.
42

43
00:03:35.459 --> 00:03:42.790
January 2019 a month away, JDK 8 is going
to D support. So it's no longer I'm going
43

44
00:03:42.790 --> 00:03:47.530
to be officially supported. Java 11 is
out and that is new next long-term
44

45
00:03:47.530 --> 00:03:52.090
release. So what I'm going to do is jump
up to the next long-term release and I
45

46
00:03:52.090 --> 00:03:56.290
suspect that's going to fix the issue
but if the issue does still persist we
46

47
00:03:56.290 --> 00:03:59.459
will go in and address that.
