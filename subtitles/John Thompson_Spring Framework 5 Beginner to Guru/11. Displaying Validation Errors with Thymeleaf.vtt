WEBVTT
0
1
00:00:04.190 --> 00:00:08.670
Alright in this video we're going to
take a look at displaying the validation
1

2
00:00:08.670 --> 00:00:15.389
messages using Thymeleaf. And the reason
I showed you in the last video the
2

3
00:00:15.389 --> 00:00:19.289
errors object, I wanted you to get an
idea of what we had to work with. The
3

4
00:00:19.289 --> 00:00:23.970
integration with Thymeleaf is pretty
solid and what we want to do, we now
4

5
00:00:23.970 --> 00:00:27.210
have a property called fields so that
it's going to be returned then that's
5

6
00:00:27.210 --> 00:00:32.910
how Spring and Thymeleaf work together. This is all built into the Thymeleaf Spring
6

7
00:00:32.910 --> 00:00:42.450
integration. And you can see here on line
25, there I've added a Thymeleaf tag saying
7

8
00:00:42.450 --> 00:00:46.950
if fields has errors and I'm using a
wild card. So if there's any errors there,
8

9
00:00:46.950 --> 00:00:52.680
I'm going to display this div. And what I
want to do is use a bootstrap class
9

10
00:00:52.680 --> 00:00:57.120
called alert and alert danger. So it's going
to give me a little red box to alert the
10

11
00:00:57.120 --> 00:01:02.219
end user that there's problems that they
need correct. So by using the Thymeleaf
11

12
00:01:02.219 --> 00:01:08.040
if statement, that is only going to display
if there are errors. Now let's scroll up here
12

13
00:01:08.040 --> 00:01:13.170
a little bit and I'm going to go through
what's going on with the description
13

14
00:01:13.170 --> 00:01:19.140
field here. So I've added in...a lot
of this is for the bootstrap formatting so
14

15
00:01:19.140 --> 00:01:22.470
we're going to go to some really nice
formatting using bootstraps on
15

16
00:01:22.470 --> 00:01:27.420
properties that have error. So this is all
standard bootstrap stuff and what I'm
16

17
00:01:27.420 --> 00:01:32.909
saying here is if fields and the
description has errors, what I want to do
17

18
00:01:32.909 --> 00:01:39.900
is add in this class. So I'm using Thymeleaf
class with a condition here. And so if
18

19
00:01:39.900 --> 00:01:44.970
it does have errors, I want to have this
form group and have this has error CSS
19

20
00:01:44.970 --> 00:01:49.170
class added. If it doesn't have errors I
just want these other two CSS classes
20

21
00:01:49.170 --> 00:01:54.270
like we had before. Now the next
thing we also want to do is on the input
21

22
00:01:54.270 --> 00:02:00.060
to add in the error class has error. So
what that is going to do is turn in
22

23
00:02:00.060 --> 00:02:04.979
that input property and it will take it
from normal display to red. Now on line
23

24
00:02:04.979 --> 00:02:10.349
42, I'm going to add in a help block and
this is also part of the bootstrap CSS.
24

25
00:02:10.349 --> 00:02:15.799
So I'm adding a span
and I'm saying if again the description
25

26
00:02:15.799 --> 00:02:22.459
fields has errors we're going to display
this. And in this, the property we can
26

27
00:02:22.459 --> 00:02:26.480
have more than one validation there and
if it fails multiple times we're going
27

28
00:02:26.480 --> 00:02:30.170
to have an array of errors. So that's what
we're setting up here is an unordered
28

29
00:02:30.170 --> 00:02:38.450
list to display those errors. So you can
see there on line 44, I'm putting
29

30
00:02:38.450 --> 00:02:43.189
out a list item iterating over the errors
and we're going to get that error text
30

31
00:02:43.189 --> 00:02:47.840
display. So I've gone and added this
to the other properties that we added
31

32
00:02:47.840 --> 00:02:51.409
validations for. I'm not going to go
through every one but this will be in
32

33
00:02:51.409 --> 00:02:54.409
GitHub where you can check it out and
take a look at it. So let's go ahead and
33

34
00:02:54.409 --> 00:03:00.769
take a look at this in action. I'm going
to start up Spring Boot and Spring Boot
34

35
00:03:00.769 --> 00:03:06.859
is just about up there. Okay now I'm
going to toggle over to Chrome. Let's do
35

36
00:03:06.859 --> 00:03:13.189
a refresh and we are up and what I want
to do is do an update and I'm going to
36

37
00:03:13.189 --> 00:03:21.560
get this to fail. So I'm going to delete
that, set that zero. That's zero. Servings
37

38
00:03:21.560 --> 00:03:29.269
what do we say, to like 10,000 servings. And then I want to make this a bad URL
38

39
00:03:29.269 --> 00:03:32.689
so I'm just going to put some garbage in
there to fail the URL constraint. So I
39

40
00:03:32.689 --> 00:03:35.870
think I got everything as far as what
we're validating. So now I'm going to
40

41
00:03:35.870 --> 00:03:40.759
submit it and now you can see that this
is that div that we added, that
41

42
00:03:40.759 --> 00:03:45.229
conditional div that says please correct
errors below and you can see how the
42

43
00:03:45.229 --> 00:03:51.290
fields that failed validation are now
highlighted in red and now we have
43

44
00:03:51.290 --> 00:03:56.780
bulleted properties of what was wrong. So
you can see on the description, must not
44

45
00:03:56.780 --> 00:04:02.150
be empty and the size must between 3 and 255. So in the case of the description we had
45

46
00:04:02.150 --> 00:04:08.629
two errors on that property and just to
reiterate what's happening is we go into
46

47
00:04:08.629 --> 00:04:14.739
the Controller. Now we're going into
the Controller, the RecipeController and
47

48
00:04:14.739 --> 00:04:21.199
we come in, the command failed so we have
bad binding there. So our validations
48

49
00:04:21.199 --> 00:04:25.070
failed. So we get down here and it kicks
it back to
49

50
00:04:25.070 --> 00:04:31.090
show the form again but we'll have
that ModelAttribute recipe there and
50

51
00:04:31.090 --> 00:04:35.690
we'll also have the BindingResult on
the Model and that is tied through the
51

52
00:04:35.690 --> 00:04:42.170
fields property. So now the fields
property is there because of the Binding
52

53
00:04:42.170 --> 00:04:47.060
Result and we're tapping into that. So
this is all how Spring and Thyme
53

54
00:04:47.060 --> 00:04:50.810
leaf have integrated their standard
error handling. It's a pretty robust
54

55
00:04:50.810 --> 00:04:54.590
error handling so you can do quite a bit
with it and really display some really
55

56
00:04:54.590 --> 00:05:00.070
rich information to your end-users on
form validation errors.
