WEBVTT
0
1
00:00:04.549 --> 00:00:08.730
Alright, in this video we want to take a
look at refactoring some of our classes
1

2
00:00:08.730 --> 00:00:13.530
to utilize project Lombok and we'll get
rid of some of the ceremonial code. So
2

3
00:00:13.530 --> 00:00:19.890
first off, let's take a look at Category. And I'm going to come in and just come
3

4
00:00:19.890 --> 00:00:27.029
up here to refactor Lombok and we're
going to add in data. And just as a
4

5
00:00:27.029 --> 00:00:32.750
reminder Data is going to include Getter,
Setter, EqualsAndHashcode, ToString and
5

6
00:00:32.750 --> 00:00:39.780
also the RequiredArgsConstructor. So
I'm going to go ahead and add that. And
6

7
00:00:39.780 --> 00:00:44.969
we can see that right away, our class
gets refactored and now all we have is a
7

8
00:00:44.969 --> 00:00:48.750
few properties that we're dealing with. And let me come down here to version
8

9
00:00:48.750 --> 00:00:53.460
control and right click on this guy and
we'll do a show diff and take a look at
9

10
00:00:53.460 --> 00:00:57.840
what we got rid of. So here we can see
that all the getters and setters
10

11
00:00:57.840 --> 00:01:02.879
have been to refactored out of the class
and been deleted from the left
11

12
00:01:02.879 --> 00:01:06.659
hand side. So those are no longer there. Now when I went in and created this, that
12

13
00:01:06.659 --> 00:01:11.520
was just a shortcut to add them but
still it's a lot easier to go at in one
13

14
00:01:11.520 --> 00:01:14.700
annotation and that's less coerce code
that we're dealing with. So nice little
14

15
00:01:14.700 --> 00:01:20.939
touch on this very very simple class. Now
one thing that we cannot do is
15

16
00:01:20.939 --> 00:01:26.280
refactoring because on our Recipe class,
we want to do that manually because we
16

17
00:01:26.280 --> 00:01:33.979
did override some of these properties. And I did do a test there.
17

18
00:01:33.979 --> 00:01:42.509
Not date and time format. Data from
project Lombok. So we'll get rid of that
18

19
00:01:42.509 --> 00:01:49.350
import there. That was a mistake. So we
can't go ahead and get rid of these card
19

20
00:01:49.350 --> 00:01:54.689
blank. I did test it and it did override
our changes. So if we've provided them
20

21
00:01:54.689 --> 00:01:59.880
they'll be preserved. So
nothing to worry about there but
21

22
00:01:59.880 --> 00:02:06.270
it was the notes one that gave us a
problem. So I'm just making sure. So is
22

23
00:02:06.270 --> 00:02:12.240
when I tested this out, our setNotes to
set the properties, that got overridden.
23

24
00:02:12.240 --> 00:02:18.120
Our addIngredient was okay. The rest is
going to be fine to delete and get rid
24

25
00:02:18.120 --> 00:02:23.400
of that as well. So our little helper
methods there are still there to
25

26
00:02:23.400 --> 00:02:31.200
preserve the relationships. Now the last
one I want to show you is we're going to
26

27
00:02:31.200 --> 00:02:37.920
come over here to our services and this
is just our service layer and we still
27

28
00:02:37.920 --> 00:02:46.110
can use Lombok here. And what we want to
do is come in and add in that SLf4j and
28

29
00:02:46.110 --> 00:02:50.520
what this is going to do, is give us a
logger. I'll show you exactly how we can
29

30
00:02:50.520 --> 00:02:56.910
utilize that here. So through the plugin,
IntelliJ knows that now, because I've
30

31
00:02:56.910 --> 00:03:02.580
annotated with SLf4J, you can see
that I have a SLf4j logger in
31

32
00:03:02.580 --> 00:03:12.420
there. So now isay debug. So this is a
handy tool to have. Now we don't have
32

33
00:03:12.420 --> 00:03:17.610
to remember the creating that property
there. So pretty nice to have and we'll
33

34
00:03:17.610 --> 00:03:21.720
be utilizing the SLf4j annotation quite
a bit for when we want to add logging.
34

35
00:03:21.720 --> 00:03:27.060
Developers are often negligent in
adding logging to their applications.
35

36
00:03:27.060 --> 00:03:32.220
This makes it a touch easier and make sure
our code a little bit cleaner. When you
36

37
00:03:32.220 --> 00:03:36.210
first start utilizing this, you might
think it feels like a little magic
37

38
00:03:36.210 --> 00:03:39.630
because you're not declaring the log
property but it's going to get declared.
38

39
00:03:39.630 --> 00:03:45.780
As project Lombok goes through and refactors the compiling for us, we will get
39

40
00:03:45.780 --> 00:03:49.160
that logger injected there.
