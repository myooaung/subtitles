WEBVTT
0
1
00:00:05.320 --> 00:00:09.910
In this video I'm going to show you just how easy it is to create a Spring Framework project.
1

2
00:00:10.030 --> 00:00:16.870
Now in my early days with the Spring Framework and this is going back a few years unfortunately. The
2

3
00:00:16.870 --> 00:00:21.910
Spring Framework has been around for a long time. When I started using the Spring Framework around
3

4
00:00:21.910 --> 00:00:28.330
Version 2, if I remember right, we did not have anything like Spring Initializr. Everything you had
4

5
00:00:28.330 --> 00:00:34.540
to do would be hand rolled, so you'd have to go through and create a brand new Maven project, go out and
5

6
00:00:34.540 --> 00:00:40.180
research the stack of dependencies that you needed to bring into the project to wire up these different
6

7
00:00:40.180 --> 00:00:41.460
Spring components.
7

8
00:00:41.500 --> 00:00:46.920
What Spring Initializr does is it goes out and gives you common options for common things that you're
8

9
00:00:46.930 --> 00:00:51.930
gonna be bringing in. So you might want to have like Thymeleaf being brought into your project. You're going to
9

10
00:00:51.930 --> 00:00:54.130
do a Spring web project.
10

11
00:00:54.130 --> 00:01:00.130
These are all sets of dependencies that we can wire up with the Spring Initializr. What it's going
11

12
00:01:00.130 --> 00:01:05.410
to do is form up the project and give you options of Spring down either a Maven build or Gradle build
12

13
00:01:05.800 --> 00:01:07.590
and assemble a project for you.
13

14
00:01:07.840 --> 00:01:16.690
And in just a few mouse clicks you can do effectively do would take me back 10 15 years ago an afternoon
14

15
00:01:16.810 --> 00:01:19.720
of research and assembling all these dependencies.
15

16
00:01:19.780 --> 00:01:24.670
So this is just such a huge time saver to have this type of technology now.
16

17
00:01:24.790 --> 00:01:30.270
It's really amazing especially for me coming from the old days where you had to do all this manually.
17

18
00:01:30.400 --> 00:01:34.560
So you guys are gonna be a little bit spoiled. So let's jump over and take a look at the Spring Initializr
18

19
00:01:34.560 --> 00:01:38.090
project on GitHub and talk more about its capabilities.
19

20
00:01:38.100 --> 00:01:42.970
Spring Initializr is an open source project of course and you can see the project up
20

21
00:01:42.970 --> 00:01:45.900
here on GitHub. If you want go and review the project yourself.
21

22
00:01:45.910 --> 00:01:52.090
Actually I just found it by googling Spring Initializr. They do spell it funny without an E
22

23
00:01:52.120 --> 00:01:53.680
between the Z and the R.
23

24
00:01:53.710 --> 00:01:57.480
I think that's a possibly a European thing to spell that way.
24

25
00:01:57.610 --> 00:02:03.910
In the States we use an E there. But here is the project and if you come down to the read me, you can
25

26
00:02:03.910 --> 00:02:08.770
get all information about the project itself and what's in there, the different modules. But the main
26

27
00:02:08.770 --> 00:02:14.230
thing you're going to be interested in is generating a project and there's actually several different
27

28
00:02:14.230 --> 00:02:21.130
techniques that you can do to generate a project. You can check this out, run locally and you can run
28

29
00:02:21.130 --> 00:02:27.670
curl commands against start.spring.io to download this and there's a number of different parameters.
29

30
00:02:27.670 --> 00:02:32.560
And I'm not going to get into how to use this from the command line.
30

31
00:02:32.560 --> 00:02:34.350
That's a little beyond the scope that I want to do.
31

32
00:02:34.480 --> 00:02:39.970
We will take a look at the web interface but the primary takeaway that I wanted you to get away from
32

33
00:02:39.970 --> 00:02:42.970
this is that there is an open source project behind it.
33

34
00:02:42.970 --> 00:02:47.050
You can use it programmatically or go to the website and use it.
34

35
00:02:47.050 --> 00:02:52.570
A lot of the IDEs do have an integration so they can abstract that for you which is nice or you can
35

36
00:02:52.570 --> 00:02:53.790
go to start.spring.io
36

37
00:02:53.930 --> 00:02:59.290
and we'll be taking a look at that specifically in an upcoming segment of this lesson.
37

38
00:02:59.290 --> 00:03:04.630
Now one of the core things behind Spring Initializr are the Spring Boot Starters. Spring Boot Starters
38

39
00:03:04.720 --> 00:03:08.980
are basically a curated set of dependencies and we'll be talking about this throughout the course as
39

40
00:03:08.980 --> 00:03:10.750
curated set of dependencies.
40

41
00:03:10.750 --> 00:03:12.280
Very very powerful concept.
41

42
00:03:12.610 --> 00:03:17.050
So if you remember I said in the beginning when I had to do all this manually, what Spring is giving
42

43
00:03:17.050 --> 00:03:23.980
us are basically Maven BOMs that give us a bill of material, a set of known components that work together.
43

44
00:03:24.580 --> 00:03:31.750
Like if we want to bring in JMS messaging into to our Spring application, we would include a dependency
44

45
00:03:31.810 --> 00:03:38.320
on this Spring Boot Starter and we'd bring in the different components that I would need to connect
45

46
00:03:38.350 --> 00:03:40.180
that particular flavor of JMS.
46

47
00:03:40.270 --> 00:03:45.670
So I'm going to do now is jump over to the browser and take a look at some of these dependencies and
47

48
00:03:45.670 --> 00:03:51.040
show you how they work as to how Spring is organizing these and the number of different dependencies
48

49
00:03:51.040 --> 00:03:56.230
that you can bring in. Because Java is such a large community, you do have a number of options to select
49

50
00:03:56.230 --> 00:03:56.890
from.
50

51
00:03:56.890 --> 00:04:03.420
You can see up my screen here that I do have GitHub up. This is the Spring Boot project and you can
51

52
00:04:03.430 --> 00:04:06.270
see I'm in the sub directory for Spring Boot Starters.
52

53
00:04:06.280 --> 00:04:09.330
Now all of these here are different starters that are available.
53

54
00:04:09.340 --> 00:04:18.670
So we have ActiveMQ, AMPQP, different cloud connectors, JDBC, Solr, FreeMarker, so you can see a lot
54

55
00:04:18.670 --> 00:04:25.630
of very common popular open source projects so let's come in here and take a look at the ActiveMQ one
55

56
00:04:25.630 --> 00:04:33.290
here. And this is just a Maven POM and let's take a look at this POM and you'll see and here this has
56

57
00:04:33.290 --> 00:04:35.000
dependencies listed.
57

58
00:04:35.000 --> 00:04:41.480
So this is saying that I need the Spring Boot Starter. I also need Spring JMS and I need an ActiveMQ broker
58

59
00:04:41.480 --> 00:04:45.080
and they're doing an exclusion there as well as Jakarta JMS.
59

60
00:04:45.110 --> 00:04:48.480
So this brings an implementation of the JMS API.
60

61
00:04:48.530 --> 00:04:54.470
These are the different dependencies that you would need to bring up an ActiveMQ messaging.
61

62
00:04:54.470 --> 00:04:55.810
So this is a very nice thing.
62

63
00:04:55.820 --> 00:05:00.040
Without this, what we'd have to do is include all these interdependencies.
63

64
00:05:00.140 --> 00:05:05.120
So what's going to be happening is this works with the Maven dependency management to bring these libraries
64

65
00:05:05.180 --> 00:05:08.040
into our project for us and make these dependencies.
65

66
00:05:08.060 --> 00:05:12.800
So just by including this dependency in, we get all these other dependencies.
66

67
00:05:12.830 --> 00:05:17.600
So if you're a little confused on how dependencies work within a Maven environment, I do have an
67

68
00:05:17.600 --> 00:05:21.470
entire course on Maven and we will be talking about more on this course.
68

69
00:05:21.470 --> 00:05:24.620
But in that other course I do dive into this deeply.
69

70
00:05:24.680 --> 00:05:31.030
The main takeaway here is to understand that we do have what is called a bill of materials and the Spring
70

71
00:05:31.030 --> 00:05:35.300
Boot Starter brings in the different components that we are going to be working with for our Spring
71

72
00:05:35.300 --> 00:05:41.770
Framework project. Your watch Josh Long speak who is a developer advocate for Pivotal who promotes the
72

73
00:05:41.770 --> 00:05:44.130
Spring Framework to developers talking all over the world.
73

74
00:05:44.230 --> 00:05:47.950
His favorite website in the world is start.spring.io 
74

75
00:05:48.040 --> 00:05:53.990
This is the web site that is hosted by Pivotal for us to use to go and create Spring Framework projects.
75

76
00:05:53.990 --> 00:05:58.270
It's a very nice web site. And underneath the covers, what's happening there is remember in that first
76

77
00:05:58.270 --> 00:06:01.120
segment of this lesson we looked at Spring Initializr.
77

78
00:06:01.320 --> 00:06:04.140
This is just a web front end on Spring Initializr.
78

79
00:06:04.150 --> 00:06:10.320
So there's a web application that we can use and select the components that we want in our Spring Boot
79

80
00:06:10.330 --> 00:06:11.230
project.
80

81
00:06:11.230 --> 00:06:16.150
The components being the Spring Boot Starters that we want to include and this is going to give us an
81

82
00:06:16.150 --> 00:06:22.780
artifact a zip file all zipped up of a starter project for us to start developing out with the pre configured
82

83
00:06:22.780 --> 00:06:24.850
dependencies based on our selections.
83

84
00:06:24.880 --> 00:06:30.760
So let's go over to the Web and take a look at start.spring.io. Okay, you can see up on the screen.
84

85
00:06:30.760 --> 00:06:33.510
I have navigated to start.spring.io
85

86
00:06:33.710 --> 00:06:37.710
Josh Long's favorite website in the entire world.
86

87
00:06:37.810 --> 00:06:40.670
So let's take a look at some of the features of this website.
87

88
00:06:40.840 --> 00:06:47.610
And just as a caveat, this is the latest edition of the website circa December 2019.
88

89
00:06:47.680 --> 00:06:52.570
As you progress in the course, you will see some older versions. I'm trying to update those videos but
89

90
00:06:52.570 --> 00:06:57.520
I am quite gotten to it yet and this may change in the future as well. They've actually been evolving
90

91
00:06:57.520 --> 00:07:01.160
this UI quite a bit and they made some really nice changes to it.
91

92
00:07:01.180 --> 00:07:06.250
So let's take a look at some of the features. Right at the top here you do have some links and you do
92

93
00:07:06.250 --> 00:07:11.790
have an option to toggle dark UI and light UI. And then you can jump to GitHub.
93

94
00:07:11.800 --> 00:07:15.580
We already looked at that. Twitter or a different help options.
94

95
00:07:15.580 --> 00:07:20.680
Now the project generation you have an option of a Maven project and a Gradle project. We'll primarily
95

96
00:07:20.680 --> 00:07:26.610
stick with Maven for right now as our build tool. You do have language options for Java Kotllin
96

97
00:07:26.620 --> 00:07:27.510
and Groovy.
97

98
00:07:27.610 --> 00:07:29.390
We will be sticking with Java.
98

99
00:07:29.470 --> 00:07:34.710
Now you can see the different versions of Spring Boot that are available for us to use in this tool.
99

100
00:07:35.020 --> 00:07:36.910
For purpose of this course,
100

101
00:07:36.910 --> 00:07:39.570
do not use the snapshot versions.
101

102
00:07:39.580 --> 00:07:42.530
I pick a Spring Boot 2.2.2 or higher.
102

103
00:07:42.530 --> 00:07:46.560
And that's what we'll be focusing on as much as possible in the course.
103

104
00:07:46.660 --> 00:07:53.740
And then here you have a section on Project Metadata. You have the group artefact and then options.
104

105
00:07:53.740 --> 00:07:55.780
I think by default that's going to be collapse like that.
105

106
00:07:55.780 --> 00:08:02.680
So you can expand that out and set up a name for your project description, default package name, and then
106

107
00:08:02.770 --> 00:08:10.730
also if you want packaging of jar or war. We will be focusing and using the executable jars in this course.
107

108
00:08:10.740 --> 00:08:12.260
So a nice feature of Spring Boot.
108

109
00:08:12.310 --> 00:08:16.620
We'll be talking about that as we get further into the course. Java versions.
109

110
00:08:16.620 --> 00:08:23.290
A lot of companies are still on Java 8. Most of this course is on originally developed on Java 8. Java
110

111
00:08:23.290 --> 00:08:25.410
11 is starting to be adopted.
111

112
00:08:25.450 --> 00:08:31.470
I will be starting to move forward with Java 11 updating the course to Java 11. Java 13.
112

113
00:08:31.570 --> 00:08:36.220
I am not going to be using that release. Java 11 is a long term support release so I will be
113

114
00:08:36.220 --> 00:08:39.950
focusing on supporting the LTS releases of Java.
114

115
00:08:39.950 --> 00:08:45.940
If you want to use Java 13, you're probably safe but I will not be talking about any Java 13 specific
115

116
00:08:45.940 --> 00:08:53.550
features. I'll only update to the LTS releases of Java. Now Dependencies. Here, you can come down.
116

117
00:08:53.560 --> 00:09:02.670
You can do a search. You can do things like let's do like rabbit. You can see here it brings up different
117

118
00:09:02.670 --> 00:09:04.190
options for rabbit.
118

119
00:09:04.710 --> 00:09:06.860
Primarily a Spring for RabbitMQ.
119

120
00:09:06.900 --> 00:09:12.780
If you think a major open source project you type that in and search on it or you have the option to
120

121
00:09:12.780 --> 00:09:18.040
come in here and click on this list and now you can see all these different things.
121

122
00:09:18.240 --> 00:09:23.140
And behind these are Spring Boot Starter or a set of Spring Boot Starters.
122

123
00:09:23.140 --> 00:09:28.320
In here you can see development tools. Lombok will definitely be playing with that coming up in the
123

124
00:09:28.320 --> 00:09:29.050
course.
124

125
00:09:29.160 --> 00:09:38.670
Web, Reactive, then you have different template engines, securities, SQL, NoSQL, Messaging. So you
125

126
00:09:38.670 --> 00:09:44.010
can see there's a lot of options, a lot of different things that we can do with the Spring Framework.
126

127
00:09:44.010 --> 00:09:49.350
Obviously we are not going to be covering each and every one of these options. We'll be using a very
127

128
00:09:49.350 --> 00:09:51.230
small set of these.
128

129
00:09:51.690 --> 00:09:55.760
There are a number of pre configured options for working with Spring Framework projects.
129

130
00:09:55.830 --> 00:09:58.430
Obviously Spring is very very popular.
130

131
00:09:58.440 --> 00:10:00.390
So there's a lot of options that we can utilize.
131

132
00:10:00.630 --> 00:10:04.500
What we're going to be doing in this section of the course is just building a simple web application
132

133
00:10:04.860 --> 00:10:07.440
and we'll start talking about that in the next section of the course.
133

134
00:10:08.010 --> 00:10:10.420
So a lot of options there inside of Spring Initializr.
134

135
00:10:10.770 --> 00:10:13.160
I'd imagine it can be a little bit overwhelming.
135

136
00:10:13.260 --> 00:10:17.160
Don't worry we are going to start off with some very small and very simple just to get her feet wet
136

137
00:10:17.170 --> 00:10:18.120
with the Spring Framework.
137

138
00:10:18.120 --> 00:10:23.720
So what I want to do is build a very simple web application in this section of the course so we're gonna
138

139
00:10:23.740 --> 00:10:28.920
jump over Spring Initializr and grab the dependencies and the starters that we need to do.
139

140
00:10:28.920 --> 00:10:34.020
Just a simple web application. And by a web application, I want to be able to build a web page and have
140

141
00:10:34.020 --> 00:10:39.120
it back with the database and get that other database. So nothing earth shattering to do there
141

142
00:10:39.480 --> 00:10:44.940
but we're going to go through it step by step and use Spring Initializr to create that initial project
142

143
00:10:44.940 --> 00:10:45.790
for us.
143

144
00:10:45.960 --> 00:10:54.060
And what I'm going to show you is really literally took me at least a half a day to do. Back before we
144

145
00:10:54.060 --> 00:10:59.340
had the Spring Initializr tool. Okay, I'm back at start.io so I'm going to come in
145

146
00:10:59.340 --> 00:11:05.730
here and create a project. I want a Maven project and I want Java and then let's do 2.2.2.
146

147
00:11:05.730 --> 00:11:11.000
That is the most current example. I'm going to name my group guru dot.
147

148
00:11:11.220 --> 00:11:16.740
Remember that is just a common Java convention to use the reverse of your domain name for the group
148

149
00:11:17.450 --> 00:11:30.280
and let's call this spring5webapp like so and let's look at the options. spring5webapp. Then we'll say
149

150
00:11:30.280 --> 00:11:40.720
simple web application and package name is defaulting to the group I.D. and the name of the application
150

151
00:11:40.720 --> 00:11:46.450
so that's perfectly fine with me. We are gonna stick with an executable jar and then let's take this
151

152
00:11:46.450 --> 00:11:53.890
to Java 11. If you have Java 8 installed, go ahead and use Java 8. Probably won't you get into a Java
152

153
00:11:53.910 --> 00:11:57.860
11 specific features. And let's see here.
153

154
00:11:57.880 --> 00:12:02.560
Let's expand out the dependencies make this a little bit easier on ourselves. We're not gonna need
154

155
00:12:02.620 --> 00:12:03.700
any developer tools.
155

156
00:12:03.700 --> 00:12:12.160
We do want Spring Web so that is going to bring in Spring MVC and let's come down here and let's come down
156

157
00:12:12.160 --> 00:12:17.710
to SQL. We are going to be working with Spring Data JPA to make our lives a lot easier.
157

158
00:12:17.800 --> 00:12:23.810
So we'll add that in. The only other thing I want to bring in is the H2 Database.
158

159
00:12:23.830 --> 00:12:30.030
This is gonna give us an in-memory database. And that is all my selections. So you can see here we've
159

160
00:12:30.030 --> 00:12:32.200
got three selected.
160

161
00:12:32.200 --> 00:12:33.460
Just go and double check.
161

162
00:12:36.130 --> 00:12:40.870
OK so let's go ahead and I'm going to say generate. Click on this generate tab right here down at the
162

163
00:12:40.870 --> 00:12:47.800
bottom. You can see it look at the bottom of my screen it has brought down a zip file. So it's a nice zip
163

164
00:12:47.800 --> 00:12:54.010
file contains a pre configured project for us. So you can see how easy it was to generate a Spring Framework
164

165
00:12:54.010 --> 00:12:57.250
project going over to start.spring.io.
165

166
00:12:57.370 --> 00:12:59.810
Just a few map mouse clicks and a little bit of typing.
166

167
00:12:59.950 --> 00:13:06.070
I was able to generate my projects so I brought down that zip file. Inside that zip file is a fully functional
167

168
00:13:06.070 --> 00:13:09.640
Spring Framework project using the Maven build tool.
168

169
00:13:09.640 --> 00:13:14.530
I think if memory serves me right all you would need to have is Java installed on your system. It does
169

170
00:13:14.530 --> 00:13:19.600
come with Maven wrapper so you could use the shell script to actually execute this on a system that
170

171
00:13:19.600 --> 00:13:22.840
does not have Maven installed but only has Java installed.
171

172
00:13:22.900 --> 00:13:24.430
So this is very simple.
172

173
00:13:24.430 --> 00:13:29.290
This literally is a huge time saver compared to doing all these steps manually.
173

174
00:13:29.290 --> 00:13:32.250
So let's go over and take a look at what's inside that zip file.
174

175
00:13:32.290 --> 00:13:37.120
What in the Spring Initializr provided us for our Spring web project.
175

176
00:13:37.980 --> 00:13:38.330
Okay.
176

177
00:13:38.350 --> 00:13:44.350
You can see that I've gone into my downloads directory and here on the screen I have opened up this spring
177

178
00:13:44.350 --> 00:13:50.290
5 web app and you see this is all files that were inside that zip file. Any zip utility will open
178

179
00:13:50.290 --> 00:13:51.900
this file just fine for you.
179

180
00:13:52.000 --> 00:13:58.740
I have a .gitignore and here's .mvn so this is where the Maven wrapper is. A little Help
180

181
00:13:58.750 --> 00:14:01.690
markdown file. And then two files here,
181

182
00:14:01.690 --> 00:14:09.750
mvnw, that is for PASOK systems so if you're on OSX or Mac OS now and it keeps calling OSX, that
182

183
00:14:09.770 --> 00:14:15.940
is the file that you'll run. Linux as well. Or Windows you'd want the command file to execute that
183

184
00:14:15.940 --> 00:14:21.340
and that run Maven for you. We can see here I have a Maven pom file. We'll be taking a look at that coming
184

185
00:14:21.340 --> 00:14:23.380
up in a different video.
185

186
00:14:23.650 --> 00:14:25.710
And then here we have a source folder.
186

187
00:14:25.750 --> 00:14:29.410
This is the Maven standard project layout source main.
187

188
00:14:29.730 --> 00:14:30.830
Then I have Java.
188

189
00:14:31.180 --> 00:14:33.040
And then you can see here's my package.
189

190
00:14:33.040 --> 00:14:41.730
That is the package that we entered in. A Java class. And also here, we'll get a project directory of
190

191
00:14:41.840 --> 00:14:42.360
resources.
191

192
00:14:42.370 --> 00:14:44.650
So we have application properties.
192

193
00:14:44.830 --> 00:14:50.380
And if we had any template we'd put there or static web resources, it generate those because we selected
193

194
00:14:50.860 --> 00:14:54.010
the web projects so it gave us those directories.
194

195
00:14:54.280 --> 00:15:00.460
And then also here we have test. So these are the tests and we have a standard project and then a
195

196
00:15:00.730 --> 00:15:04.260
setup of a test class of the stuff that was in that file.
196

197
00:15:04.330 --> 00:15:05.540
We'll take a look at these.
197

198
00:15:05.720 --> 00:15:09.030
What's the contents of these files once you get it into IntelliJ.
198

199
00:15:09.070 --> 00:15:14.590
Give us a little easier time to discuss that to Java class as one as the main class.
199

200
00:15:14.770 --> 00:15:19.750
And then the other is a test class and we'll take a look at those as well as the Maven dependencies
200

201
00:15:19.750 --> 00:15:22.510
that are being brought into the project in an upcoming video.
