WEBVTT
0
1
00:00:04.160 --> 00:00:08.790
Alright. I got a little troubleshooting
video here for you and my student is
1

2
00:00:08.790 --> 00:00:13.320
saying that it cannot connect or doesn't
see the tables being created in the H2
2

3
00:00:13.320 --> 00:00:18.029
database. Nine times out of ten, I do see
this one a lot, but nine times out of ten,
3

4
00:00:18.029 --> 00:00:22.500
it is a problem with the connect string.
We're running the H2 in-memory database
4

5
00:00:22.500 --> 00:00:27.180
and we just happened to bring up a wrong
connect string. So a lot of times that's
5

6
00:00:27.180 --> 00:00:31.439
buffered in my browser so I don't run
into that. But the default Spring Boot
6

7
00:00:31.439 --> 00:00:42.090
database is at where are my notes here jdbc:h2:mem: and then testdb.
7

8
00:00:42.090 --> 00:00:46.680
That's normally the connect string that
we want to use. And in this case, the
8

9
00:00:46.680 --> 00:00:51.750
student sent me a screenshot and he did
have the correct connect URL in there. So
9

10
00:00:51.750 --> 00:00:56.039
let's go ahead and take a look at his
code. I am here in IntelliJ and we are
10

11
00:00:56.039 --> 00:01:00.030
going to come in. I already checked it out
of GitHub. So he sent me his repository.
11

12
00:01:00.030 --> 00:01:04.949
I've forked it and checked it out to my
local file system so I'm going to mount
12

13
00:01:04.949 --> 00:01:09.960
it inside of IntelliJ. I'll get in my
temp directory here. And here it is right
13

14
00:01:09.960 --> 00:01:16.580
here the spring5 project. So let's go
ahead and this was a Maven project. I
14

15
00:01:16.580 --> 00:01:31.829
think I double checked that. 5 and yes we
are on a Maven project. So let's go ahead
15

16
00:01:31.829 --> 00:01:46.110
here. Now see your next root directoryt.
Actually I have to go up one. So there's a
16

17
00:01:46.110 --> 00:01:51.720
I had to go to the directory with the
Maven POM in it. Again, I just checked
17

18
00:01:51.720 --> 00:01:57.420
this out so sometimes it will.. that
doesn't go smooth as we'd like. But we're
18

19
00:01:57.420 --> 00:02:04.740
going through. I need to set the JDK and
we will set that up. Now it is going to
19

20
00:02:04.740 --> 00:02:10.180
take a second or two for before IntelliJ
to index the project.
20

21
00:02:10.180 --> 00:02:20.319
So go ahead and add in the root
for Git. So take a quick look at his POM.
21

22
00:02:20.739 --> 00:02:25.690
So he is on a build snapshot that could
be a problem. We need to take a look at that.
22

23
00:02:25.690 --> 00:02:31.010
Sometimes when you're using the build
snapshot. So what is a snapshot? It is
23

24
00:02:31.010 --> 00:02:35.989
that so I basically a build branch so
things are changing and they're actively.
24

25
00:02:35.989 --> 00:02:41.840
It's not an official release. But so, he
is on the snapshot version so that
25

26
00:02:41.840 --> 00:02:45.620
could be a problem. Something could be
changing underneath his feet and I may
26

27
00:02:45.620 --> 00:02:49.609
or may not even see this in the same
error because of that. So it does have
27

28
00:02:49.609 --> 00:02:54.739
that given and I just want to double
check a couple of things. So application.
28

29
00:02:54.739 --> 00:03:06.980
properties. So it is saying the H2 console
is enabled, and let's see here. Now this
29

30
00:03:06.980 --> 00:03:15.139
could be the problem right here.
So he's got what we have is com and
30

31
00:03:15.139 --> 00:03:21.919
then his name and this is where the
Spring Boot application is. And what Spring Boot is
31

32
00:03:21.919 --> 00:03:27.199
going to do by default is scan for
things in this package and below. So
32

33
00:03:27.199 --> 00:03:31.220
let's go ahead and run this. I
suspect that's the problem but we'll go
33

34
00:03:31.220 --> 00:03:43.519
ahead and prove this. So let's go ahead
and start this up. So now we are up and
34

35
00:03:43.519 --> 00:03:48.859
running on an 8080.
Oh yeah Snagit window here and give me
35

36
00:03:48.859 --> 00:03:54.769
one second here. Of course I had two
monitors going and my new Chrome tap
36

37
00:03:54.769 --> 00:03:59.840
opened up in a new window. So let's go
ahead and connect. It does look like the
37

38
00:03:59.840 --> 00:04:06.530
right URL and there are no tables
here. So that's the Users so that does
38

39
00:04:06.530 --> 00:04:10.370
look correct.
So let's disconnect from this. Again, it
39

40
00:04:10.370 --> 00:04:16.039
he does have the right URL in there. So
let's go ahead and refactor this. Come
40

41
00:04:16.039 --> 00:04:19.417
back over to IntelliJ. We'll stop this
guy.
41

42
00:04:19.417 --> 00:04:25.310
I'm pretty sure it's because of that.
And you can tell it to map it but it's
42

43
00:04:25.310 --> 00:04:32.570
going to be a little easier just to
refactor this. So now that's there. And
43

44
00:04:32.570 --> 00:04:38.120
just in case I'm going to. Maven do clean. That's just from experience,
44

45
00:04:38.120 --> 00:04:42.169
when you do a refactoring like that, that
those old classes can get left behind
45

46
00:04:42.169 --> 00:04:47.120
him though IntelliJ would probably take
care of it just fine. I'm just telling
46

47
00:04:47.120 --> 00:04:52.479
everything to blow it away and not going
to update IntelliJ at this point in time.
47

48
00:04:52.479 --> 00:04:56.770
So now let's go ahead and run this again.
48

49
00:05:02.860 --> 00:05:07.099
So I'm just looking at the log output.
Nothing really jumped out at me there.
49

50
00:05:07.099 --> 00:05:14.479
Now let's come back over here and do a
refresh, and connect, and then yeah now
50

51
00:05:14.479 --> 00:05:19.360
our tables are showing up. So just
as I suspected,
51

52
00:05:19.360 --> 00:05:23.210
so what's going to happen is a Spring
Boot is doing a lot of auto
52

53
00:05:23.210 --> 00:05:29.120
configuration and it is going to scan
for entities in that package of the
53

54
00:05:29.120 --> 00:05:32.990
Spring Boot web application and below.
Now of course you can override that with
54

55
00:05:32.990 --> 00:05:37.700
a configuration but I just did a quick
refactoring here. So now the Spring Boot
55

56
00:05:37.700 --> 00:05:42.289
auto configuration, auto scan is going to
be picking those up. It's important
56

57
00:05:42.289 --> 00:05:47.180
because if, when you have something like
this where he had it with below this below
57

58
00:05:47.180 --> 00:05:53.210
this below his own name there and the
Spring Boot application was in a
58

59
00:05:53.210 --> 00:05:58.159
different package. So if you can tell it
to scan outside of that but know it's
59

60
00:05:58.159 --> 00:06:01.039
important remembers all the auto
configuration magic inside of Spring
60

61
00:06:01.039 --> 00:06:06.260
Boot is going to happen where your
Spring Boot application lives in that
61

62
00:06:06.260 --> 00:06:11.150
package and below. So important low
refactoring here. So I can see that that
62

63
00:06:11.150 --> 00:06:14.810
is a pretty common error that does trip
people up because you do have these
63

64
00:06:14.810 --> 00:06:20.539
automatic package scans happening. But
they just happen in the package of the
64

65
00:06:20.539 --> 00:06:25.940
Spring Boot application and below. It
doesn't happen everywhere. Otherwise you
65

66
00:06:25.940 --> 00:06:32.360
could have literally tens of thousands
of classes in a larger project and you
66

67
00:06:32.360 --> 00:06:35.179
don't want Spring
indexing all those insurgent annotations.
67

68
00:06:35.179 --> 00:06:40.699
Be quite a lengthy startup
time. So I'm in do now. Let's go ahead and
68

69
00:06:40.699 --> 00:06:54.110
come in to IntelliJ, Git commit
directory. And I will jump over to GitHub
69

70
00:06:54.110 --> 00:06:58.610
and send my student a pull request that
so he can see the changes and I'll also
70

71
00:06:58.610 --> 00:07:03.589
give them a full explanation. So yeah
when you do run into problems like this,
71

72
00:07:03.589 --> 00:07:08.329
it is very helpful to have the full
working project inside of Git where I
72

73
00:07:08.329 --> 00:07:10.759
can fork it and step through it like
this. Sometimes it gets a little
73

74
00:07:10.759 --> 00:07:13.369
supporting but this one was pretty
straightforward. Hope you learned
74

75
00:07:13.369 --> 00:07:15.999
something from this.
